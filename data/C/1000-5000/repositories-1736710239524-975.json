{
  "metadata": {
    "timestamp": 1736710239524,
    "page": 975,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "eggert/tz",
      "stars": 1559,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2587890625,
          "content": "# Files intentionally not tracked by Git.\n# This file is in the public domain.\n*.a\n*.asc\n*.ck\n*.ckd/\n*.diff\n*.dir/\n*.i\n*.o\n*.orig\n*.patch\n*.pdf\n*.ps\n*.rej\n*.s\n*.tar\n*.tar.*\n*.txt\n*.tzs\n*.zi\n*~\nChangeLog\ndate\nleapseconds\ntzdir.h\ntzselect\nversion\nversion.h\nzdump\nzic\n"
        },
        {
          "name": "CONTRIBUTING",
          "type": "blob",
          "size": 3.439453125,
          "content": "# Contributing to the tz code and data\n\nPlease do not create issues or pull requests on GitHub, as the\nproper procedure for proposing and distributing patches is via\nemail as described below.\n\nThe time zone database is by no means authoritative: governments\nchange timekeeping rules erratically and sometimes with little\nwarning, the data entries do not cover all of civil time before\n1970, and undoubtedly errors remain in the code and data.  Feel\nfree to fill gaps or fix mistakes, and please email improvements\nto <tz@iana.org> for use in the future.  In your email, please give\nreliable sources that reviewers can check.\n\n## Contributing technical changes\n\nTo email small changes, please run a POSIX shell command like\n'diff -u old/europe new/europe >myfix.patch', and attach\n'myfix.patch' to the email.\n\nFor more-elaborate or possibly controversial changes,\nsuch as renaming, adding or removing zones, please read\n\"Theory and pragmatics of the tz code and data\"\n<https://www.iana.org/time-zones/repository/theory.html>.\nIt is also good to browse the mailing list archives\n<https://lists.iana.org/hyperkitty/list/tz@iana.org/>\nfor examples of patches that tend to work well.\nChanges should contain commentary citing reliable sources.\nCitations should use \"https:\" URLs if available.\n\nFor changes that fix sensitive security-related bugs, please see the\ndistribution's 'SECURITY' file.\n\nPlease submit changes against either the latest release\n<https://www.iana.org/time-zones> or the main branch of the development\nrepository.  The latter is preferred.\n\n## Sample Git workflow for developing contributions\n\nIf you use Git the following workflow may be helpful:\n\n  * Copy the development repository.\n\n        git clone https://github.com/eggert/tz.git\n        cd tz\n\n  * Get current with the main branch.\n\n        git checkout main\n        git pull\n\n  * Switch to a new branch for the changes.  Choose a different\n    branch name for each change set.\n\n        git checkout -b mybranch\n\n  * Sleuth by using 'git blame'.  For example, when fixing data for\n    Africa/Sao_Tome, if the command 'git blame africa' outputs a line\n    '2951fa3b (Paul Eggert 2018-01-08 09:03:13 -0800 1068) Zone\n    Africa/Sao_Tome 0:26:56 - LMT 1884', commit 2951fa3b should\n    provide some justification for the 'Zone Africa/Sao_Tome' line.\n\n  * Edit source files.  Include commentary that justifies the\n    changes by citing reliable sources.\n\n  * Debug the changes locally, e.g.:\n\n        make TOPDIR=$PWD/tz clean check install\n        ./zdump -v America/Los_Angeles\n\n    Although builds assume only basic POSIX, they use extra features\n    if available.  'make check' accesses validator.w3.org unless you\n    lack 'curl' or use 'make CURL=:'.  If you have the latest GCC,\n    \"make CFLAGS='$(GCC_DEBUG_FLAGS)'\" does extra checking.\n\n  * For each separable change, commit it in the new branch, e.g.:\n\n        git add northamerica\n        git commit\n\n    See recent 'git log' output for the commit-message style.\n\n  * Create patch files 0001-..., 0002-..., ...\n\n        git format-patch main\n\n  * After reviewing the patch files, send the patches to <tz@iana.org>\n    for others to review.\n\n        git send-email main\n\n    For an archived example of such an email, see\n    \"[PROPOSED] Fix off-by-1 error for Jamaica and T&C before 1913\"\n    <https://mm.icann.org/pipermail/tz/2018-February/026122.html>.\n\n  * Start anew by getting current with the main branch again\n    (the second step above).\n\n-----\n\nThis file is in the public domain.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 0.24609375,
          "content": "Unless specified below, all files in the tz code and data (including\nthis LICENSE file) are in the public domain.\n\nIf the files date.c, newstrftime.3, and strftime.c are present, they\ncontain material derived from BSD and use the BSD 3-clause license.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 51.931640625,
          "content": "# Make and install tzdb code and data.\n# This file is in the public domain, so clarified as of\n# 2009-05-17 by Arthur David Olson.\n# Request POSIX conformance; this must be the first non-comment line.\n.POSIX:\n# On older platforms you may need to scrounge for POSIX conformance.\n# For example, on Solaris 10 (2005) with Sun Studio 12 aka Sun C 5.9 (2007),\n# use 'PATH=/usr/xpg4/bin:$PATH make CC=c99'.\n\n# To affect how this Makefile works, you can run a shell script like this:\n#\n#\t#!/bin/sh\n#\tmake CC='gcc -std=gnu23' \"$@\"\n#\n# This example script is appropriate for a circa 2024 GNU/Linux system\n# where a non-default setting enables this package's optional use of C23.\n#\n# Alternatively, you can simply edit this Makefile to tailor the following\n# macro definitions.\n\n###############################################################################\n# Start of macros that one plausibly might want to tailor.\n\n# Package name for the code distribution.\nPACKAGE=\ttzcode\n\n# Version number for the distribution, overridden in the 'tarballs' rule below.\nVERSION=\tunknown\n\n# Email address for bug reports.\nBUGEMAIL=\ttz@iana.org\n\n# DATAFORM selects the data format.\n# Available formats represent essentially the same data, albeit\n# possibly with minor discrepancies that users are not likely to notice.\n# To get new features and the best data right away, use:\n#\tDATAFORM=\tvanguard\n# To wait a while before using new features, to give downstream users\n# time to upgrade zic (the default), use:\n#\tDATAFORM=\tmain\n# To wait even longer for new features, use:\n#\tDATAFORM=\trearguard\n# Rearguard users might also want \"ZFLAGS = -b fat\"; see below.\nDATAFORM=\t\tmain\n\n# Change the line below for your timezone (after finding the one you want in\n# one of the $(TDATA) source files, or adding it to a source file).\n# Alternatively, if you discover you've got the wrong timezone, you can just\n# 'zic -l -' to remove it, or 'zic -l rightzone' to change it.\n# Use the command\n#\tmake zonenames\n# to get a list of the values you can use for LOCALTIME.\n\nLOCALTIME=\tFactory\n\n# The POSIXRULES macro controls interpretation of POSIX-like TZ\n# settings like TZ='EET-2EEST' that lack DST transition rules.\n# If POSIXRULES is '-', no template is installed; this is the default.\n# Any other value for POSIXRULES is obsolete and should not be relied on, as:\n# * It does not work correctly in popular implementations such as GNU/Linux.\n# * It does not work even in tzcode, except for historical timestamps\n#   that precede the last explicit transition in the POSIXRULES file.\n#   Hence it typically does not work for current and future timestamps.\n# If, despite the above, you want a template for handling these settings,\n# you can change the line below (after finding the timezone you want in the\n# one of the $(TDATA) source files, or adding it to a source file).\n# Alternatively, if you discover you've got the wrong timezone, you can just\n# 'zic -p -' to remove it, or 'zic -p rightzone' to change it.\n# Use the command\n#\tmake zonenames\n# to get a list of the values you can use for POSIXRULES.\n\nPOSIXRULES=\t-\n\n# Also see TZDEFRULESTRING below, which takes effect only\n# if POSIXRULES is '-' or if the template file cannot be accessed.\n\n\n# Installation locations.\n#\n# The defaults are suitable for Debian, except that if REDO is\n# posix_right or right_posix then files that Debian puts under\n# /usr/share/zoneinfo/posix and /usr/share/zoneinfo/right are instead\n# put under /usr/share/zoneinfo-posix and /usr/share/zoneinfo-leaps,\n# respectively.  Problems with the Debian approach are discussed in\n# the commentary for the right_posix rule (below).\n\n# Destination directory, which can be used for staging.\n# 'make DESTDIR=/stage install' installs under /stage (e.g., to\n# /stage/etc/localtime instead of to /etc/localtime).  Files under\n# /stage are not intended to work as-is, but can be copied by hand to\n# the root directory later.  If DESTDIR is empty, 'make install' does\n# not stage, but installs directly into production locations.\nDESTDIR =\n\n# Everything is installed into subdirectories of TOPDIR, and used there.\n# TOPDIR should be empty (meaning the root directory),\n# or a directory name that does not end in \"/\".\n# TOPDIR should be empty or an absolute name unless you're just testing.\nTOPDIR =\n\n# The default local timezone is taken from the file TZDEFAULT.\nTZDEFAULT = $(TOPDIR)/etc/localtime\n\n# The subdirectory containing installed program and data files, and\n# likewise for installed files that can be shared among architectures.\n# These should be relative file names.\nUSRDIR = usr\nUSRSHAREDIR = $(USRDIR)/share\n\n# \"Compiled\" timezone information is placed in the \"TZDIR\" directory\n# (and subdirectories).\n# TZDIR_BASENAME should not contain \"/\" and should not be \".\", \"..\" or empty.\nTZDIR_BASENAME=\tzoneinfo\nTZDIR = $(TOPDIR)/$(USRSHAREDIR)/$(TZDIR_BASENAME)\n\n# The \"tzselect\" and (if you do \"make INSTALL\") \"date\" commands go in:\nBINDIR = $(TOPDIR)/$(USRDIR)/bin\n\n# The \"zdump\" command goes in:\nZDUMPDIR = $(BINDIR)\n\n# The \"zic\" command goes in:\nZICDIR = $(TOPDIR)/$(USRDIR)/sbin\n\n# Manual pages go in subdirectories of. . .\nMANDIR = $(TOPDIR)/$(USRSHAREDIR)/man\n\n# Library functions are put in an archive in LIBDIR.\nLIBDIR = $(TOPDIR)/$(USRDIR)/lib\n\n\n# Types to try, as an alternative to time_t.\nTIME_T_ALTERNATIVES = $(TIME_T_ALTERNATIVES_HEAD) $(TIME_T_ALTERNATIVES_TAIL)\nTIME_T_ALTERNATIVES_HEAD = int_least64_t.ck\nTIME_T_ALTERNATIVES_TAIL = int_least32_t.ck uint_least32_t.ck \\\n  uint_least64_t.ck\n\n# What kind of TZif data files to generate.  (TZif is the binary time\n# zone data format that zic generates; see Internet RFC 9636.)\n# If you want only POSIX time, with time values interpreted as\n# seconds since the epoch (not counting leap seconds), use\n#\tREDO=\t\tposix_only\n# below.  If you want only \"right\" time, with values interpreted\n# as seconds since the epoch (counting leap seconds), use\n#\tREDO=\t\tright_only\n# below.  If you want both sets of data available, with leap seconds not\n# counted normally, use\n#\tREDO=\t\tposix_right\n# below.  If you want both sets of data available, with leap seconds counted\n# normally, use\n#\tREDO=\t\tright_posix\n# below.  POSIX mandates that leap seconds not be counted; for compatibility\n# with it, use \"posix_only\" or \"posix_right\".  Use POSIX time on systems with\n# leap smearing; this can work better than unsmeared \"right\" time with\n# applications that are not leap second aware, and is closer to unsmeared\n# \"right\" time than unsmeared POSIX time is (e.g., 0.5 vs 1.0 s max error).\n\nREDO=\t\tposix_right\n\n# Whether to put an \"Expires\" line in the leapseconds file.\n# Use EXPIRES_LINE=1 to put the line in, 0 to omit it.\n# The EXPIRES_LINE value matters only if REDO's value contains \"right\".\n# If you change EXPIRES_LINE, remove the leapseconds file before running \"make\".\n# zic's support for the Expires line was introduced in tzdb 2020a,\n# and was modified in tzdb 2021b to generate version 4 TZif files.\n# EXPIRES_LINE defaults to 0 for now so that the leapseconds file\n# can be given to pre-2020a zic implementations and so that TZif files\n# built by newer zic implementations can be read by pre-2021b libraries.\nEXPIRES_LINE=\t0\n\n# To install data in text form that has all the information of the TZif data,\n# (optionally incorporating leap second information), use\n#\tTZDATA_TEXT=\ttzdata.zi leapseconds\n# To install text data without leap second information (e.g., because\n# REDO='posix_only'), use\n#\tTZDATA_TEXT=\ttzdata.zi\n# To avoid installing text data, use\n#\tTZDATA_TEXT=\n\nTZDATA_TEXT=\tleapseconds tzdata.zi\n\n# For backward-compatibility links for old zone names, use\n#\tBACKWARD=\tbackward\n# To omit these links, use\n#\tBACKWARD=\n\nBACKWARD=\tbackward\n\n# If you want out-of-scope and often-wrong data from the file 'backzone',\n# but only for entries listed in the backward-compatibility file zone.tab, use\n#\tPACKRATDATA=\tbackzone\n#\tPACKRATLIST=\tzone.tab\n# If you want all the 'backzone' data, use\n#\tPACKRATDATA=\tbackzone\n#\tPACKRATLIST=\n# To omit this data, use\n#\tPACKRATDATA=\n#\tPACKRATLIST=\n\nPACKRATDATA=\nPACKRATLIST=\n\n# The name of a locale using the UTF-8 encoding, used during self-tests.\n# The tests are skipped if the name does not appear to work on this system.\n\nUTF8_LOCALE=\ten_US.utf8\n\n# Non-default libraries needed to link.\n# On some hosts, this should have -lintl unless CFLAGS has -DHAVE_GETTEXT=0.\nLDLIBS=\n\n# Add the following to an uncommented \"CFLAGS=\" line as needed\n# to override defaults specified in the source code or by the system.\n# \"-DFOO\" is equivalent to \"-DFOO=1\".\n#  -DDEPRECATE_TWO_DIGIT_YEARS for optional runtime warnings about strftime\n#\tformats that generate only the last two digits of year numbers\n#  -DEPOCH_LOCAL if the 'time' function returns local time not UT\n#  -DEPOCH_OFFSET=N if the 'time' function returns a value N greater\n#\tthan what POSIX specifies, assuming local time is UT.\n#\tFor example, N is 252460800 on AmigaOS.\n#  -DHAVE_DECL_ASCTIME_R=0 if <time.h> does not declare asctime_r\n#\ton POSIX platforms predating POSIX.1-2024\n#  -DHAVE_DECL_ENVIRON if <unistd.h> declares 'environ'\n#  -DHAVE_DECL_TIMEGM=0 if <time.h> does not declare timegm\n#  -DHAVE_DIRECT_H if mkdir needs <direct.h> (MS-Windows)\n#  -DHAVE__GENERIC=0 if _Generic does not work*\n#  -DHAVE_GETRANDOM if getrandom works (e.g., GNU/Linux),\n#\t-DHAVE_GETRANDOM=0 to avoid using getrandom\n#  -DHAVE_GETTEXT if gettext works (e.g., GNU/Linux, FreeBSD, Solaris),\n#\twhere LDLIBS also needs to contain -lintl on some hosts;\n#\t-DHAVE_GETTEXT=0 to avoid using gettext\n#  -DHAVE_INCOMPATIBLE_CTIME_R if your system's time.h declares\n#\tctime_r and asctime_r incompatibly with POSIX.1-2017 and earlier\n#\t(Solaris when _POSIX_PTHREAD_SEMANTICS is not defined).\n#  -DHAVE_INTTYPES_H=0 if <inttypes.h> does not work*+\n#  -DHAVE_LINK=0 if your system lacks a link function\n#  -DHAVE_LOCALTIME_R=0 if your system lacks a localtime_r function\n#  -DHAVE_LOCALTIME_RZ=0 if you do not want zdump to use localtime_rz\n#\tlocaltime_rz can make zdump significantly faster, but is nonstandard.\n#  -DHAVE_MALLOC_ERRNO=0 if malloc etc. do not set errno on failure.\n#  -DHAVE_POSIX_DECLS=0 if your system's include files do not declare\n#\tfunctions like 'link' or variables like 'tzname' required by POSIX\n#  -DHAVE_SETENV=0 if your system lacks the setenv function\n#  -DHAVE_SNPRINTF=0 if your system lacks the snprintf function+\n#  -DHAVE_STDCKDINT_H=0 if neither <stdckdint.h> nor substitutes like\n#\t__builtin_add_overflow work*\n#  -DHAVE_STDINT_H=0 if <stdint.h> does not work*+\n#  -DHAVE_STRFTIME_L if <time.h> declares locale_t and strftime_l\n#  -DHAVE_STRDUP=0 if your system lacks the strdup function\n#  -DHAVE_STRTOLL=0 if your system lacks the strtoll function+\n#  -DHAVE_SYMLINK=0 if your system lacks the symlink function\n#  -DHAVE_SYS_STAT_H=0 if <sys/stat.h> does not work*\n#  -DHAVE_TZSET=0 if your system lacks a tzset function\n#  -DHAVE_UNISTD_H=0 if <unistd.h> does not work*\n#  -DHAVE_UTMPX_H=0 if <utmpx.h> does not work*\n#  -Dlocale_t=XXX if your system uses XXX instead of locale_t\n#  -DMKTIME_MIGHT_OVERFLOW if mktime might fail due to time_t overflow\n#  -DPORT_TO_C89 if tzcode should also run on mostly-C89 platforms+\n#\tTypically it is better to use a later standard.  For example,\n#\twith GCC 4.9.4 (2016), prefer '-std=gnu11' to '-DPORT_TO_C89'.\n#\tEven with -DPORT_TO_C89, the code needs at least one C99\n#\tfeature (integers at least 64 bits wide) and maybe more.\n#  -DRESERVE_STD_EXT_IDS if your platform reserves standard identifiers\n#\twith external linkage, e.g., applications cannot define 'localtime'.\n#  -Dssize_t=int on hosts like MS-Windows that lack ssize_t\n#  -DSUPPORT_C89=0 if the tzcode library should not support C89 callers\n#\tAlthough -DSUPPORT_C89=0 might work around latent bugs in callers,\n#\tit does not conform to POSIX.\n#  -DSUPPORT_POSIX2008 if the library should support older POSIX callers+\n#\tHowever, this might cause problems in POSIX.1-2024-or-later callers.\n#  -DSUPPRESS_TZDIR to not prepend TZDIR to file names; this has\n#\tsecurity implications and is not recommended for general use\n#  -DTHREAD_SAFE to make localtime.c thread-safe, as POSIX requires;\n#\tnot needed by the main-program tz code, which is single-threaded.\n#\tAppend other compiler flags as needed, e.g., -pthread on GNU/Linux.\n#  -Dtime_tz=\\\"T\\\" to use T as the time_t type, rather than the system time_t\n#\tThis is intended for internal use only; it mangles external names.\n#  -DTZ_DOMAIN=\\\"foo\\\" to use \"foo\" for gettext domain name; default is \"tz\"\n#  -DTZ_DOMAINDIR=\\\"/path\\\" to use \"/path\" for gettext directory;\n#\tthe default is system-supplied, typically \"/usr/lib/locale\"\n#  -DTZDEFRULESTRING=\\\",date/time,date/time\\\" to default to the specified\n#\tDST transitions for proleptic format TZ strings lacking them,\n#\tin the usual case where POSIXRULES is '-'.  If not specified,\n#\tTZDEFRULESTRING defaults to US rules for future DST transitions.\n#\tThis mishandles some past timestamps, as US DST rules have changed.\n#\tIt also mishandles settings like TZ='EET-2EEST' for eastern Europe,\n#\tas Europe and US DST rules differ.\n#  -DTZNAME_MAXIMUM=N to limit time zone abbreviations to N bytes (default 254)\n#  -DUNINIT_TRAP if reading uninitialized storage can cause problems\n#\tother than simply getting garbage data\n#  -DUSE_LTZ=0 to build zdump with the system time zone library\n#\tAlso set TZDOBJS=zdump.o and CHECK_TIME_T_ALTERNATIVES= below.\n#  -DZIC_BLOAT_DEFAULT=\\\"fat\\\" to default zic's -b option to \"fat\", and\n#\tsimilarly for \"slim\".  Fat TZif files work around incompatibilities\n#\tand bugs in some TZif readers, notably older ones that\n#\tignore or otherwise mishandle 64-bit data in TZif files;\n#\thowever, fat TZif files may trigger bugs in newer TZif readers.\n#\tSlim TZif files are more efficient, and are the default.\n#  -DZIC_MAX_ABBR_LEN_WO_WARN=3\n#\t(or some other number) to set the maximum time zone abbreviation length\n#\tthat zic will accept without a warning (the default is 6)\n#  -g to generate symbolic debugging info\n#  -Idir to include from directory 'dir'\n#  -O0 to disable optimization; other -O options to enable more optimization\n#  -Uname to remove any definition of the macro 'name'\n#  $(GCC_DEBUG_FLAGS) if you are using recent GCC and want lots of checking\n#\n# * Options marked \"*\" can be omitted if your compiler is C23 compatible.\n# * Options marked \"+\" are obsolescent and are planned to be removed\n#   once the code assumes C99 or later (say in the year 2029)\n#   and POSIX.1-2024 or later (say in the year 2034).\n#\n# Select instrumentation via \"make GCC_INSTRUMENT='whatever'\".\nGCC_INSTRUMENT = \\\n  -fsanitize=undefined -fsanitize-address-use-after-scope \\\n  -fsanitize-undefined-trap-on-error -fstack-protector\n# Omit -fanalyzer from GCC_DEBUG_FLAGS, as it makes GCC too slow.\nGCC_DEBUG_FLAGS = -DGCC_LINT -g3 -O3 \\\n  $(GCC_INSTRUMENT) \\\n  -Wall -Wextra \\\n  -Walloc-size-larger-than=100000 -Warray-bounds=2 \\\n  -Wbad-function-cast -Wbidi-chars=any,ucn -Wcast-align=strict -Wcast-qual \\\n  -Wdate-time \\\n  -Wdeclaration-after-statement -Wdouble-promotion \\\n  -Wduplicated-branches -Wduplicated-cond -Wflex-array-member-not-at-end \\\n  -Wformat=2 -Wformat-overflow=2 -Wformat-signedness -Wformat-truncation \\\n  -Wimplicit-fallthrough=5 -Winit-self -Wlogical-op \\\n  -Wmissing-declarations -Wmissing-prototypes \\\n  -Wmissing-variable-declarations -Wnested-externs \\\n  -Wnull-dereference \\\n  -Wold-style-definition -Woverlength-strings -Wpointer-arith \\\n  -Wshadow -Wshift-overflow=2 -Wstrict-overflow \\\n  -Wstrict-prototypes -Wstringop-overflow=4 \\\n  -Wstringop-truncation -Wsuggest-attribute=cold \\\n  -Wsuggest-attribute=const -Wsuggest-attribute=format \\\n  -Wsuggest-attribute=malloc \\\n  -Wsuggest-attribute=noreturn -Wsuggest-attribute=pure \\\n  -Wtrampolines -Wundef -Wunused-macros -Wuse-after-free=3 \\\n  -Wvariadic-macros -Wvla -Wwrite-strings \\\n  -Wno-format-nonliteral -Wno-sign-compare -Wno-type-limits\n#\n# If your system has a \"GMT offset\" field in its \"struct tm\"s\n# (or if you decide to add such a field in your system's \"time.h\" file),\n# add the name to a define such as\n#\t-DTM_GMTOFF=tm_gmtoff\n# to the end of the \"CFLAGS=\" line.  If not defined, the code attempts to\n# guess TM_GMTOFF from other macros; define NO_TM_GMTOFF to suppress this.\n# Similarly, if your system has a \"zone abbreviation\" field, define\n#\t-DTM_ZONE=tm_zone\n# and define NO_TM_ZONE to suppress any guessing.\n# Although POSIX.1-2024 requires these fields and they are widely available\n# on GNU/Linux and BSD systems, some older systems lack them.\n#\n# The next batch of options control support for external variables\n# exported by tzcode.  In practice these variables are less useful\n# than TM_GMTOFF and TM_ZONE.  However, most of them are standardized.\n# #\n# # To omit or support the external variable \"tzname\", add one of:\n# #\t-DHAVE_TZNAME=0 # do not support \"tzname\"\n# #\t-DHAVE_TZNAME=1 # support \"tzname\", which is defined by system library\n# #\t-DHAVE_TZNAME=2 # support and define \"tzname\"\n# # to the \"CFLAGS=\" line.  Although \"tzname\" is required by POSIX.1-1988\n# # and later, its contents are unspecified if you use a geographical TZ\n# # and the variable is planned to be removed in a future POSIX edition.\n# # If not defined, the code attempts to guess HAVE_TZNAME from other macros.\n# # Warning: unless time_tz is also defined, HAVE_TZNAME=1 can cause\n# # crashes when combined with some platforms' standard libraries,\n# # presumably due to memory allocation issues.\n# #\n# # To omit or support the external variables \"timezone\" and \"daylight\", add\n# #\t-DUSG_COMPAT=0 # do not support\n# #\t-DUSG_COMPAT=1 # support, and variables are defined by system library\n# #\t-DUSG_COMPAT=2 # support and define variables\n# # to the \"CFLAGS=\" line; \"timezone\" and \"daylight\" are inspired by Unix\n# # Systems Group code and are required by POSIX.1-2008 and later (with XSI),\n# # although their contents are unspecified if you use a geographical TZ\n# # and the variables are planned to be removed in a future edition of POSIX.\n# # If not defined, the code attempts to guess USG_COMPAT from other macros.\n# #\n# # To support the external variable \"altzone\", add\n# #\t-DALTZONE=0 # do not support\n# #\t-DALTZONE=1 # support \"altzone\", which is defined by system library\n# #\t-DALTZONE=2 # support and define \"altzone\"\n# # to the end of the \"CFLAGS=\" line; although \"altzone\" appeared in\n# # System V Release 3.1 it has not been standardized.\n# # If not defined, the code attempts to guess ALTZONE from other macros.\n#\n# If you want functions that were inspired by early versions of X3J11's work,\n# add\n#\t-DSTD_INSPIRED\n# to the end of the \"CFLAGS=\" line.  This arranges for the following\n# functions to be added to the time conversion library.\n# \"offtime\" is like \"gmtime\" except that it accepts a second (long) argument\n# that gives an offset to add to the time_t when converting it.\n# I.e., \"offtime\" is like calling \"localtime_rz\" with a fixed-offset zone.\n# \"timelocal\" is nearly equivalent to \"mktime\".\n# \"timeoff\" is like \"timegm\" except that it accepts a second (long) argument\n# that gives an offset to use when converting to a time_t.\n# I.e., \"timeoff\" is like calling \"mktime_z\" with a fixed-offset zone.\n# \"posix2time\" and \"time2posix\" are described in an included manual page.\n# X3J11's work does not describe any of these functions.\n# These functions may well disappear in future releases of the time\n# conversion package.\n#\n# If you don't want functions that were inspired by NetBSD, add\n#\t-DNETBSD_INSPIRED=0\n# to the end of the \"CFLAGS=\" line.  Otherwise, the functions\n# \"localtime_rz\", \"mktime_z\", \"tzalloc\", and \"tzfree\" are added to the\n# time library, and if STD_INSPIRED is also defined to nonzero the functions\n# \"posix2time_z\" and \"time2posix_z\" are added as well.\n# The functions ending in \"_z\" (or \"_rz\") are like their unsuffixed\n# (or suffixed-by-\"_r\") counterparts, except with an extra first\n# argument of opaque type timezone_t that specifies the timezone.\n# \"tzalloc\" allocates a timezone_t value, and \"tzfree\" frees it.\n#\n# If you want to allocate state structures in localtime, add\n#\t-DALL_STATE\n# to the end of the \"CFLAGS=\" line.  Storage is obtained by calling malloc.\n#\n# NIST-PCTS:151-2, Version 1.4, (1993-12-03) is a test suite put\n# out by the National Institute of Standards and Technology\n# which claims to test C and POSIX conformance.  If you want to pass PCTS, add\n#\t-DPCTS\n# to the end of the \"CFLAGS=\" line.\n#\n# If you want strict compliance with XPG4 as of 1994-04-09, add\n#\t-DXPG4_1994_04_09\n# to the end of the \"CFLAGS=\" line.  This causes \"strftime\" to always return\n# 53 as a week number (rather than 52 or 53) for January days before\n# January's first Monday when a \"%V\" format is used and January 1\n# falls on a Friday, Saturday, or Sunday.\n#\n# POSIX says CFLAGS defaults to \"-O 1\".\n# Uncomment the following line and edit its contents as needed.\n\n#CFLAGS= -O 1\n\n\n# The name of a POSIX-like library archiver, its flags, C compiler,\n# linker flags, and 'make' utility.  Ordinarily the defaults suffice.\n# The commented-out values are the defaults specified by POSIX.1-2024.\n#AR = ar\n#ARFLAGS = -rv\n#CC = c17\n#LDFLAGS =\n#MAKE = make\n\n# Where to fetch leap-seconds.list from.\nleaplist_URI = \\\n  https://hpiers.obspm.fr/iers/bul/bulc/ntp/leap-seconds.list\n# The file is generated by the IERS Earth Orientation Centre, in Paris.\nleaplist_TZ = Europe/Paris\n\n# The zic command and its arguments.\n\nzic=\t\t./zic\nZIC=\t\t$(zic) $(ZFLAGS)\n\n# To shrink the size of installed TZif files,\n# append \"-r @N\" to omit data before N-seconds-after-the-Epoch.\n# To grow the files and work around bugs in older applications,\n# possibly at the expense of introducing bugs in newer ones,\n# append \"-b fat\"; see ZIC_BLOAT_DEFAULT above.\n# See the zic man page for more about -b and -r.\nZFLAGS=\n\n# How to use zic to install TZif files.\n\nZIC_INSTALL=\t$(ZIC) -d '$(DESTDIR)$(TZDIR)'\n\n# The name of a POSIX-compliant 'awk' on your system.\n# mawk 1.3.3 and Solaris 10 /usr/bin/awk do not work.\n# Also, it is better (though not essential) if 'awk' supports UTF-8,\n# and unfortunately mawk and busybox awk do not support UTF-8.\n# Try AWK=gawk or AWK=nawk if your awk has the abovementioned problems.\nAWK=\t\tawk\n\n# The full path name of a POSIX-compliant shell, preferably one that supports\n# the Korn shell's 'select' statement as an extension.\n# These days, Bash is the most popular.\n# It should be OK to set this to /bin/sh, on platforms where /bin/sh\n# lacks 'select' or doesn't completely conform to POSIX, but /bin/bash\n# is typically nicer if it works.\nKSHELL=\t\t/bin/bash\n\n# Name of curl <https://curl.haxx.se/>, used for HTML validation\n# and to fetch leap-seconds.list from upstream.\n# Set CURL=: to disable use of the Internet.\nCURL=\t\tcurl\n\n# Name of GNU Privacy Guard <https://gnupg.org/>, used to sign distributions.\nGPG=\t\tgpg\n\n# This expensive test requires USE_LTZ.\n# To suppress it, define this macro to be empty.\nCHECK_TIME_T_ALTERNATIVES = check_time_t_alternatives\n\n# SAFE_CHAR is a regular expression that matches a safe character.\n# Some parts of this distribution are limited to safe characters;\n# others can use any UTF-8 character.\n# For now, the safe characters are a safe subset of ASCII.\n# The caller must set the shell variable 'sharp' to the character '#',\n# since Makefile macros cannot contain '#'.\n# TAB_CHAR is a single tab character, in single quotes.\nTAB_CHAR=\t'\t'\nSAFE_CHARSET1=\t$(TAB_CHAR)' !\\\"'$$sharp'$$%&'\\''()*+,./0123456789:;<=>?@'\nSAFE_CHARSET2=\t'ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\\\^_`'\nSAFE_CHARSET3=\t'abcdefghijklmnopqrstuvwxyz{|}~'\nSAFE_CHARSET=\t$(SAFE_CHARSET1)$(SAFE_CHARSET2)$(SAFE_CHARSET3)\nSAFE_CHAR=\t'[]'$(SAFE_CHARSET)'-]'\n\n# These non-alphabetic, non-ASCII printable characters are Latin-1,\n# and so are likely displayable even in editors like XEmacs 21\n# that have limited display capabilities.\nUNUSUAL_OK_LATIN_1 = ¡¢£¤¥¦§¨©«¬®¯°±²³´¶·¸¹»¼½¾¿×÷\n# Non-ASCII non-letters that OK_CHAR allows, as these characters are\n# useful in commentary.\nUNUSUAL_OK_CHARSET= $(UNUSUAL_OK_LATIN_1)\n\n# Put this in a bracket expression to match spaces.\ns = [:space:]\n\n# OK_CHAR matches any character allowed in the distributed files.\n# This is the same as SAFE_CHAR, except that UNUSUAL_OK_CHARSET and\n# multibyte letters are also allowed so that commentary can contain a\n# few safe symbols and people's names and can quote non-English sources.\n# Other non-letters are limited to ASCII renderings for the\n# convenience of maintainers using XEmacs 21.5.34, which by default\n# mishandles Unicode characters U+0100 and greater.\nOK_CHAR=\t'[][:alpha:]$(UNUSUAL_OK_CHARSET)'$(SAFE_CHARSET)'-]'\n\n# SAFE_LINE matches a line of safe characters.\n# SAFE_SHARP_LINE is similar, except any OK character can follow '#';\n# this is so that comments can contain non-ASCII characters.\n# OK_LINE matches a line of OK characters.\nSAFE_LINE=\t'^'$(SAFE_CHAR)'*$$'\nSAFE_SHARP_LINE='^'$(SAFE_CHAR)'*('$$sharp$(OK_CHAR)'*)?$$'\nOK_LINE=\t'^'$(OK_CHAR)'*$$'\n\n# Flags to give 'tar' when making a distribution.\n# Try to use flags appropriate for GNU tar.\nGNUTARFLAGS= --format=pax --pax-option=delete=atime,delete=ctime \\\n  --numeric-owner --owner=0 --group=0 \\\n  --mode=go+u,go-w --sort=name\nSETUP_TAR= \\\n  export LC_ALL=C && \\\n  if tar $(GNUTARFLAGS) --version >/dev/null 2>&1; then \\\n    TAR='tar $(GNUTARFLAGS)'; \\\n  else \\\n    TAR=tar; \\\n  fi\n\n# Flags to give 'gzip' when making a distribution.\nGZIPFLAGS=\t-9n\n\n# When comparing .tzs files, use GNU diff's -F'^TZ=' option if supported.\n# This makes it easier to see which Zone has been affected.\nSETUP_DIFF_TZS = \\\n  if diff -u -F'^TZ=' - - <>/dev/null >&0 2>&1; then \\\n    DIFF_TZS='diff -u -F^TZ='; \\\n  else \\\n    DIFF_TZS='diff -u'; \\\n  fi\n\n# ':' on typical hosts; 'ranlib' on the ancient hosts that still need ranlib.\nRANLIB=\t\t:\n\n# POSIX prohibits defining or using SHELL.  However, csh users on systems\n# that use the user shell for Makefile commands may need to define SHELL.\n#SHELL=\t\t/bin/sh\n\n# End of macros that one plausibly might want to tailor.\n###############################################################################\n\n\nTZCOBJS=\tzic.o\nTZDOBJS=\tzdump.o localtime.o strftime.o\nDATEOBJS=\tdate.o localtime.o strftime.o\nLIBSRCS=\tlocaltime.c asctime.c difftime.c strftime.c\nLIBOBJS=\tlocaltime.o asctime.o difftime.o strftime.o\nHEADERS=\ttzfile.h private.h\nNONLIBSRCS=\tzic.c zdump.c\nNEWUCBSRCS=\tdate.c\nSOURCES=\t$(HEADERS) $(LIBSRCS) $(NONLIBSRCS) $(NEWUCBSRCS) \\\n\t\t\ttzselect.ksh workman.sh\nMANS=\t\tnewctime.3 newstrftime.3 newtzset.3 time2posix.3 \\\n\t\t\ttzfile.5 tzselect.8 zic.8 zdump.8\nMANTXTS=\tnewctime.3.txt newstrftime.3.txt newtzset.3.txt \\\n\t\t\ttime2posix.3.txt \\\n\t\t\ttzfile.5.txt tzselect.8.txt zic.8.txt zdump.8.txt \\\n\t\t\tdate.1.txt\nCOMMON=\t\tcalendars CONTRIBUTING LICENSE Makefile \\\n\t\t\tNEWS README SECURITY theory.html version\nWEB_PAGES=\ttz-art.html tz-how-to.html tz-link.html\nCHECK_WEB_PAGES=theory.ck tz-art.ck tz-how-to.ck tz-link.ck\nDOCS=\t\t$(MANS) date.1 $(MANTXTS) $(WEB_PAGES)\nPRIMARY_YDATA=\tafrica antarctica asia australasia \\\n\t\teurope northamerica southamerica\nYDATA=\t\t$(PRIMARY_YDATA) etcetera\nNDATA=\t\tfactory\nTDATA_TO_CHECK=\t$(YDATA) $(NDATA) backward\nTDATA=\t\t$(YDATA) $(NDATA) $(BACKWARD)\nZONETABLES=\tzone.tab zone1970.tab zonenow.tab\nTABDATA=\tiso3166.tab $(TZDATA_TEXT) $(ZONETABLES)\nLEAP_DEPS=\tleapseconds.awk leap-seconds.list\nTZDATA_ZI_DEPS=\tziguard.awk zishrink.awk version $(TDATA) \\\n\t\t  $(PACKRATDATA) $(PACKRATLIST)\nDSTDATA_ZI_DEPS= ziguard.awk $(TDATA) $(PACKRATDATA) $(PACKRATLIST)\nDATA=\t\t$(TDATA_TO_CHECK) backzone iso3166.tab leap-seconds.list \\\n\t\t\tleapseconds $(ZONETABLES)\nAWK_SCRIPTS=\tchecklinks.awk checknow.awk checktab.awk leapseconds.awk \\\n\t\t\tziguard.awk zishrink.awk\nMISC=\t\t$(AWK_SCRIPTS)\nTZS_YEAR=\t2050\nTZS_CUTOFF_FLAG=\t-c $(TZS_YEAR)\nTZS=\t\tto$(TZS_YEAR).tzs\nTZS_NEW=\tto$(TZS_YEAR)new.tzs\nTZS_DEPS=\t$(YDATA) localtime.c private.h \\\n\t\t\tstrftime.c tzfile.h zdump.c zic.c\nTZDATA_DIST = $(COMMON) $(DATA) $(MISC)\n# EIGHT_YARDS is just a yard short of the whole ENCHILADA.\nEIGHT_YARDS = $(TZDATA_DIST) $(DOCS) $(SOURCES) tzdata.zi\nENCHILADA = $(EIGHT_YARDS) $(TZS)\n\n# Consult these files when deciding whether to rebuild the 'version' file.\n# This list is not the same as the output of 'git ls-files', since\n# .gitignore is not distributed.\nVERSION_DEPS= \\\n\t\tcalendars CONTRIBUTING LICENSE Makefile NEWS README SECURITY \\\n\t\tafrica antarctica asctime.c asia australasia \\\n\t\tbackward backzone \\\n\t\tchecklinks.awk checknow.awk checktab.awk \\\n\t\tdate.1 date.c difftime.c \\\n\t\tetcetera europe factory iso3166.tab \\\n\t\tleap-seconds.list leapseconds.awk localtime.c \\\n\t\tnewctime.3 newstrftime.3 newtzset.3 northamerica \\\n\t\tprivate.h southamerica strftime.c theory.html \\\n\t\ttime2posix.3 tz-art.html tz-how-to.html tz-link.html \\\n\t\ttzfile.5 tzfile.h tzselect.8 tzselect.ksh \\\n\t\tworkman.sh zdump.8 zdump.c zic.8 zic.c \\\n\t\tziguard.awk zishrink.awk \\\n\t\tzone.tab zone1970.tab zonenow.tab\n\nall:\t\ttzselect zic zdump libtz.a $(TABDATA) \\\n\t\t  vanguard.zi main.zi rearguard.zi\n\nALL:\t\tall date $(ENCHILADA)\n\ninstall:\tall $(DATA) $(REDO) $(MANS)\n\t\tmkdir -p '$(DESTDIR)$(BINDIR)' \\\n\t\t\t'$(DESTDIR)$(ZDUMPDIR)' '$(DESTDIR)$(ZICDIR)' \\\n\t\t\t'$(DESTDIR)$(LIBDIR)' \\\n\t\t\t'$(DESTDIR)$(MANDIR)/man3' '$(DESTDIR)$(MANDIR)/man5' \\\n\t\t\t'$(DESTDIR)$(MANDIR)/man8'\n\t\t$(ZIC_INSTALL) -l $(LOCALTIME) \\\n\t\t\t-p $(POSIXRULES) \\\n\t\t\t-t '$(DESTDIR)$(TZDEFAULT)'\n\t\tcp -f $(TABDATA) '$(DESTDIR)$(TZDIR)/.'\n\t\tcp tzselect '$(DESTDIR)$(BINDIR)/.'\n\t\tcp zdump '$(DESTDIR)$(ZDUMPDIR)/.'\n\t\tcp zic '$(DESTDIR)$(ZICDIR)/.'\n\t\tcp libtz.a '$(DESTDIR)$(LIBDIR)/.'\n\t\t$(RANLIB) '$(DESTDIR)$(LIBDIR)/libtz.a'\n\t\tcp -f newctime.3 newtzset.3 '$(DESTDIR)$(MANDIR)/man3/.'\n\t\tcp -f tzfile.5 '$(DESTDIR)$(MANDIR)/man5/.'\n\t\tcp -f tzselect.8 zdump.8 zic.8 '$(DESTDIR)$(MANDIR)/man8/.'\n\nINSTALL:\tALL install date.1\n\t\tmkdir -p '$(DESTDIR)$(BINDIR)' '$(DESTDIR)$(MANDIR)/man1'\n\t\tcp date '$(DESTDIR)$(BINDIR)/.'\n\t\tcp -f date.1 '$(DESTDIR)$(MANDIR)/man1/.'\n\n# Calculate version number from git, if available.\n# Otherwise, use $(VERSION) unless it is \"unknown\" and there is already\n# a 'version' file, in which case reuse the existing 'version' contents\n# and append \"-dirty\" if the contents do not already end in \"-dirty\".\nversion:\t$(VERSION_DEPS)\n\t\t{ (type git) >/dev/null 2>&1 && \\\n\t\t  V=$$(git describe --match '[0-9][0-9][0-9][0-9][a-z]*' \\\n\t\t\t\t--abbrev=7 --dirty) || \\\n\t\t  if test '$(VERSION)' = unknown && read -r V <$@; then \\\n\t\t    V=$${V%-dirty}-dirty; \\\n\t\t  else \\\n\t\t    V='$(VERSION)'; \\\n\t\t  fi; } && \\\n\t\tprintf '%s\\n' \"$$V\" >$@.out\n\t\tmv $@.out $@\n\n# These files can be tailored by setting BACKWARD, PACKRATDATA, PACKRATLIST.\nvanguard.zi main.zi rearguard.zi: $(DSTDATA_ZI_DEPS)\n\t\t$(AWK) \\\n\t\t  -v DATAFORM=$(@:.zi=) \\\n\t\t  -v PACKRATDATA='$(PACKRATDATA)' \\\n\t\t  -v PACKRATLIST='$(PACKRATLIST)' \\\n\t\t  -f ziguard.awk \\\n\t\t  $(TDATA) $(PACKRATDATA) >$@.out\n\t\tmv $@.out $@\n# This file has a version comment that attempts to capture any tailoring\n# via BACKWARD, DATAFORM, PACKRATDATA, PACKRATLIST, and REDO.\ntzdata.zi:\t$(DATAFORM).zi version zishrink.awk\n\t\tread -r version <version && \\\n\t\t  LC_ALL=C $(AWK) \\\n\t\t    -v dataform='$(DATAFORM)' \\\n\t\t    -v deps='$(DSTDATA_ZI_DEPS) zishrink.awk' \\\n\t\t    -v redo='$(REDO)' \\\n\t\t    -v version=\"$$version\" \\\n\t\t    -f zishrink.awk \\\n\t\t    $(DATAFORM).zi >$@.out\n\t\tmv $@.out $@\n\ntzdir.h:\n\t\tprintf '%s\\n' >$@.out \\\n\t\t  '#ifndef TZDEFAULT' \\\n\t\t  '# define TZDEFAULT \"$(TZDEFAULT)\" /* default zone */' \\\n\t\t  '#endif' \\\n\t\t  '#ifndef TZDIR' \\\n\t\t  '# define TZDIR \"$(TZDIR)\" /* TZif directory */' \\\n\t\t  '#endif'\n\t\tmv $@.out $@\n\nversion.h:\tversion\n\t\tread -r VERSION <version && printf '%s\\n' \\\n\t\t  'static char const PKGVERSION[]=\"($(PACKAGE)) \";' \\\n\t\t  \"static char const TZVERSION[]=\\\"$$VERSION\\\";\" \\\n\t\t  'static char const REPORT_BUGS_TO[]=\"$(BUGEMAIL)\";' \\\n\t\t  >$@.out\n\t\tmv $@.out $@\n\nzdump:\t\t$(TZDOBJS)\n\t\t$(CC) -o $@ $(CFLAGS) $(LDFLAGS) $(TZDOBJS) $(LDLIBS)\n\nzic:\t\t$(TZCOBJS)\n\t\t$(CC) -o $@ $(CFLAGS) $(LDFLAGS) $(TZCOBJS) $(LDLIBS)\n\nleapseconds:\t$(LEAP_DEPS)\n\t\t$(AWK) -v EXPIRES_LINE=$(EXPIRES_LINE) \\\n\t\t  -f leapseconds.awk leap-seconds.list >$@.out\n\t\tmv $@.out $@\n\n# Awk script to extract a Git-style author from leap-seconds.list comments.\nEXTRACT_AUTHOR = \\\n  author_line { sub(/^.[[:space:]]*/, \"\"); \\\n      sub(/:[[:space:]]*/, \" <\"); \\\n      printf \"%s>\\n\", $$0; \\\n      success = 1; \\\n      exit \\\n  } \\\n  /Questions or comments to:/ { author_line = 1 } \\\n  END { exit !success }\n\n# Fetch leap-seconds.list from upstream.\nfetch-leap-seconds.list:\n\t\t$(CURL) -OR $(leaplist_URI)\n\n# Fetch leap-seconds.list from upstream and commit it to the local repository.\ncommit-leap-seconds.list: fetch-leap-seconds.list\n\t\tauthor=$$($(AWK) '$(EXTRACT_AUTHOR)' leap-seconds.list) && \\\n\t\tdate=$$(TZ=$(leaplist_TZ) stat -c%y leap-seconds.list) && \\\n\t\tgit commit --author=\"$$author\" --date=\"$$date\" -m'make $@' \\\n\t\t  leap-seconds.list\n\n# Arguments to pass to submakes.\n# They can be overridden by later submake arguments.\nINSTALLARGS = \\\n BACKWARD='$(BACKWARD)' \\\n DESTDIR='$(DESTDIR)' \\\n PACKRATDATA='$(PACKRATDATA)' \\\n PACKRATLIST='$(PACKRATLIST)' \\\n TZDEFAULT='$(TZDEFAULT)' \\\n TZDIR='$(TZDIR)' \\\n ZIC='$(ZIC)'\n\nINSTALL_DATA_DEPS = zic leapseconds tzdata.zi\n\nposix_only: $(INSTALL_DATA_DEPS)\n\t\t$(ZIC_INSTALL) tzdata.zi\n\nright_only: $(INSTALL_DATA_DEPS)\n\t\t$(ZIC_INSTALL) -L leapseconds tzdata.zi\n\n# In earlier versions of this makefile, the other two directories were\n# subdirectories of $(TZDIR).  However, this led to configuration errors.\n# For example, with posix_right under the earlier scheme,\n# TZ='right/Australia/Adelaide' got you localtime with leap seconds,\n# but gmtime without leap seconds, which led to problems with applications\n# like sendmail that subtract gmtime from localtime.\n# Therefore, the other two directories are now siblings of $(TZDIR).\n# You must replace all of $(TZDIR) to switch from not using leap seconds\n# to using them, or vice versa.\nright_posix:\tright_only\n\t\trm -fr '$(DESTDIR)$(TZDIR)-leaps'\n\t\tln -s '$(TZDIR_BASENAME)' '$(DESTDIR)$(TZDIR)-leaps' || \\\n\t\t  $(MAKE) $(INSTALLARGS) TZDIR='$(TZDIR)-leaps' right_only\n\t\t$(MAKE) $(INSTALLARGS) TZDIR='$(TZDIR)-posix' posix_only\n\nposix_right:\tposix_only\n\t\trm -fr '$(DESTDIR)$(TZDIR)-posix'\n\t\tln -s '$(TZDIR_BASENAME)' '$(DESTDIR)$(TZDIR)-posix' || \\\n\t\t  $(MAKE) $(INSTALLARGS) TZDIR='$(TZDIR)-posix' posix_only\n\t\t$(MAKE) $(INSTALLARGS) TZDIR='$(TZDIR)-leaps' right_only\n\nzones:\t\t$(REDO)\n\n# dummy.zd is not a real file; it is mentioned here only so that the\n# top-level 'make' does not have a syntax error.\nZDS = dummy.zd\n# Rule used only by submakes invoked by the $(TZS_NEW) rule.\n# It is separate so that GNU 'make -j' can run instances in parallel.\n$(ZDS): zdump\n\t\t./zdump -i $(TZS_CUTOFF_FLAG) \"$$PWD/$(@:.zd=)\" >$@\n\nTZS_NEW_DEPS = tzdata.zi zdump zic\n$(TZS_NEW): $(TZS_NEW_DEPS)\n\t\trm -fr tzs$(TZS_YEAR).dir\n\t\tmkdir tzs$(TZS_YEAR).dir\n\t\t$(zic) -d tzs$(TZS_YEAR).dir tzdata.zi\n\t\t$(AWK) '/^L/{print \"Link\\t\" $$2 \"\\t\" $$3}' \\\n\t\t   tzdata.zi | LC_ALL=C sort >$@.out\n\t\tx=$$($(AWK) '/^Z/{print \"tzs$(TZS_YEAR).dir/\" $$2 \".zd\"}' \\\n\t\t\t\ttzdata.zi \\\n\t\t     | LC_ALL=C sort -t . -k 2,2) && \\\n\t\tset x $$x && \\\n\t\tshift && \\\n\t\tZDS=$$* && \\\n\t\t$(MAKE) TZS_CUTOFF_FLAG=\"$(TZS_CUTOFF_FLAG)\" \\\n\t\t  ZDS=\"$$ZDS\" $$ZDS && \\\n\t\tsed 's,^TZ=\".*\\.dir/,TZ=\",' $$ZDS >>$@.out\n\t\trm -fr tzs$(TZS_YEAR).dir\n\t\tmv $@.out $@\n\n# If $(TZS) exists but 'make tzs.ck' fails, a maintainer should inspect the\n# failed output and fix the inconsistency, perhaps by running 'make force_tzs'.\n$(TZS):\n\t\ttouch $@\n\nforce_tzs:\t$(TZS_NEW)\n\t\tcp $(TZS_NEW) $(TZS)\n\nlibtz.a:\t$(LIBOBJS)\n\t\trm -f $@\n\t\t$(AR) $(ARFLAGS) $@ $(LIBOBJS)\n\t\t$(RANLIB) $@\n\ndate:\t\t$(DATEOBJS)\n\t\t$(CC) -o $@ $(CFLAGS) $(LDFLAGS) $(DATEOBJS) $(LDLIBS)\n\ntzselect:\ttzselect.ksh version\n\t\tread -r VERSION <version && sed \\\n\t\t  -e \"s'#!/bin/bash'#!\"'$(KSHELL)'\\' \\\n\t\t  -e s\\''\\(AWK\\)=[^}]*'\\''\\1=\\'\\''$(AWK)\\'\\'\\' \\\n\t\t  -e s\\''\\(PKGVERSION\\)=.*'\\''\\1=\\'\\''($(PACKAGE)) \\'\\'\\' \\\n\t\t  -e s\\''\\(REPORT_BUGS_TO\\)=.*'\\''\\1=\\'\\''$(BUGEMAIL)\\'\\'\\' \\\n\t\t  -e s\\''\\(TZDIR\\)=[^}]*'\\''\\1=\\'\\''$(TZDIR)\\'\\'\\' \\\n\t\t  -e s\\''\\(TZVERSION\\)=.*'\\''\\1=\\'\"'$$VERSION\\\\''\" \\\n\t\t  <$@.ksh >$@.out\n\t\tchmod +x $@.out\n\t\tmv $@.out $@\n\ncheck: check_mild back.ck now.ck\ncheck_mild: check_web check_zishrink \\\n  character-set.ck white-space.ck links.ck mainguard.ck \\\n  name-lengths.ck slashed-abbrs.ck sorted.ck \\\n  tables.ck ziguard.ck tzs.ck\n\n# True if UTF8_LOCALE does not work;\n# otherwise, false but with LC_ALL set to $(UTF8_LOCALE).\nUTF8_LOCALE_MISSING = \\\n  { test ! '$(UTF8_LOCALE)' \\\n    || ! printf 'A\\304\\200B\\n' \\\n         | LC_ALL='$(UTF8_LOCALE)' grep -q '^A.B$$' >/dev/null 2>&1 \\\n    || { export LC_ALL='$(UTF8_LOCALE)'; false; }; }\n\ncharacter-set.ck: $(ENCHILADA)\n\t$(UTF8_LOCALE_MISSING) || { \\\n\t\tsharp='#' && \\\n\t\t! grep -Env $(SAFE_LINE) $(MANS) date.1 $(MANTXTS) \\\n\t\t\t$(MISC) $(SOURCES) $(WEB_PAGES) \\\n\t\t\tCONTRIBUTING LICENSE README SECURITY \\\n\t\t\tversion tzdata.zi && \\\n\t\t! grep -Env $(SAFE_LINE)'|^UNUSUAL_OK_'$(OK_CHAR)'*$$' \\\n\t\t\tMakefile && \\\n\t\t! grep -Env $(SAFE_SHARP_LINE) $(TDATA_TO_CHECK) backzone \\\n\t\t\tleapseconds zone.tab && \\\n\t\t! grep -Env $(OK_LINE) $(ENCHILADA); \\\n\t}\n\ttouch $@\n\nwhite-space.ck: $(ENCHILADA)\n\t$(UTF8_LOCALE_MISSING) || { \\\n\t\tenchilada='$(ENCHILADA)' && \\\n\t\tpatfmt=' \\t|[\\f\\r\\v]' && pat=$$(printf \"$$patfmt\\\\n\") && \\\n\t\t! grep -En \"$$pat|[$s]\\$$\" \\\n\t\t    $${enchilada%leap-seconds.list*} \\\n\t\t    $${enchilada#*leap-seconds.list}; \\\n\t}\n\ttouch $@\n\nPRECEDES_FILE_NAME = ^(Zone|Link[$s]+[^$s]+)[$s]+\nFILE_NAME_COMPONENT_TOO_LONG = $(PRECEDES_FILE_NAME)[^$s]*[^/$s]{15}\n\nname-lengths.ck: $(TDATA_TO_CHECK) backzone\n\t\t:;! grep -En '$(FILE_NAME_COMPONENT_TOO_LONG)' \\\n\t\t\t$(TDATA_TO_CHECK) backzone\n\t\ttouch $@\n\nmainguard.ck: main.zi\n\t\ttest '$(PACKRATLIST)' || \\\n\t\t  cat $(TDATA) $(PACKRATDATA) | diff -u - main.zi\n\t\ttouch $@\n\nPRECEDES_STDOFF = ^(Zone[$s]+[^$s]+)?[$s]+\nSTDOFF = [-+]?[0-9:.]+\nRULELESS_SAVE = (-|$(STDOFF)[sd]?)\nRULELESS_SLASHED_ABBRS = \\\n  $(PRECEDES_STDOFF)$(STDOFF)[$s]+$(RULELESS_SAVE)[$s]+[^$s]*/\n\nslashed-abbrs.ck: $(TDATA_TO_CHECK)\n\t\t:;! grep -En '$(RULELESS_SLASHED_ABBRS)' $(TDATA_TO_CHECK)\n\t\ttouch $@\n\nCHECK_CC_LIST = { n = split($$1,a,/,/); for (i=2; i<=n; i++) print a[1], a[i]; }\n\nsorted.ck: backward backzone\n\t\t$(AWK) '/^Link/ {printf \"%.5d %s\\n\", g, $$3} !/./ {g++}' \\\n\t\t  backward | LC_ALL=C sort -cu\n\t\t$(AWK) '/^Zone.*\\// {print $$2}' backzone | LC_ALL=C sort -cu\n\t\ttouch $@\n\nback.ck: checklinks.awk $(TDATA_TO_CHECK)\n\t\t$(AWK) \\\n\t\t  -v DATAFORM=$(DATAFORM) \\\n\t\t  -v backcheck=backward \\\n\t\t  -f checklinks.awk $(TDATA_TO_CHECK)\n\t\ttouch $@\n\nlinks.ck: checklinks.awk tzdata.zi\n\t\t$(AWK) \\\n\t\t  -v DATAFORM=$(DATAFORM) \\\n\t\t  -f checklinks.awk tzdata.zi\n\t\ttouch $@\n\n# Check timestamps from now through 28 years from now, to make sure\n# that zonenow.tab contains all sequences of planned timestamps,\n# without any duplicate sequences.  In theory this might require\n# 2800+ years but that would take a long time to check.\nCHECK_NOW_TIMESTAMP = $$(./date +%s)\nCHECK_NOW_FUTURE_YEARS = 28\nCHECK_NOW_FUTURE_SECS = $(CHECK_NOW_FUTURE_YEARS) * 366 * 24 * 60 * 60\nnow.ck: checknow.awk date tzdata.zi zdump zic zone1970.tab zonenow.tab\n\t\trm -fr $@d\n\t\tmkdir $@d\n\t\t./zic -d $@d tzdata.zi\n\t\tnow=$(CHECK_NOW_TIMESTAMP) && \\\n\t\t  future=$$(($(CHECK_NOW_FUTURE_SECS) + $$now)) && \\\n\t\t  ./zdump -i -t $$now,$$future \\\n\t\t     $$(find \"$$PWD/$@d\"/????*/ -type f) \\\n\t\t     >$@d/zdump-now.tab && \\\n\t\t  ./zdump -i -t 0,$$future \\\n\t\t     $$(find \"$$PWD/$@d\" -name Etc -prune \\\n\t\t\t  -o -type f ! -name '*.tab' -print) \\\n\t\t     >$@d/zdump-1970.tab\n\t\t$(AWK) \\\n\t\t  -v zdump_table=$@d/zdump-now.tab \\\n\t\t  -f checknow.awk zonenow.tab\n\t\t$(AWK) \\\n\t\t  'BEGIN {print \"-\\t-\\tUTC\"} /^Zone/ {print \"-\\t-\\t\" $$2}' \\\n\t\t  $(PRIMARY_YDATA) backward factory | \\\n\t\t $(AWK) \\\n\t\t   -v zdump_table=$@d/zdump-1970.tab \\\n\t\t   -f checknow.awk\n\t\trm -fr $@d\n\t\ttouch $@\n\ntables.ck: checktab.awk $(YDATA) backward zone.tab zone1970.tab\n\t\tfor tab in $(ZONETABLES); do \\\n\t\t  test \"$$tab\" = zone.tab && links='$(BACKWARD)' || links=''; \\\n\t\t  $(AWK) -f checktab.awk -v zone_table=$$tab $(YDATA) $$links \\\n\t\t    || exit; \\\n\t\tdone\n\t\ttouch $@\n\ntzs.ck: $(TZS) $(TZS_NEW)\n\t\tif test -s $(TZS); then \\\n\t\t  $(SETUP_DIFF_TZS) && $$DIFF_TZS $(TZS) $(TZS_NEW); \\\n\t\telse \\\n\t\t  cp $(TZS_NEW) $(TZS); \\\n\t\tfi\n\t\ttouch $@\n\ncheck_web:\t$(CHECK_WEB_PAGES)\n.SUFFIXES: .ck .html\n.html.ck:\n\t\t{ ! ($(CURL) --version) >/dev/null 2>&1 || \\\n\t\t    $(CURL) -sS --url https://validator.w3.org/nu/ -F out=gnu \\\n\t\t          -F file=@$<; } >$@.out && \\\n\t\t  test ! -s $@.out || { cat $@.out; exit 1; }\n\t\tmv $@.out $@\n\nziguard.ck: rearguard.zi vanguard.zi ziguard.awk\n\t\t$(AWK) -v DATAFORM=rearguard -f ziguard.awk vanguard.zi | \\\n\t\t  diff -u rearguard.zi -\n\t\t$(AWK) -v DATAFORM=vanguard -f ziguard.awk rearguard.zi | \\\n\t\t  diff -u vanguard.zi -\n\t\ttouch $@\n\n# Check that zishrink.awk does not alter the data, and that ziguard.awk\n# preserves main-format data.\ncheck_zishrink: zishrink-posix.ck zishrink-right.ck\nzishrink-posix.ck zishrink-right.ck: \\\n  zic leapseconds $(PACKRATDATA) $(PACKRATLIST) \\\n  $(TDATA) $(DATAFORM).zi tzdata.zi\n\t\trm -fr $@d t-$@d shrunk-$@d\n\t\tmkdir $@d t-$@d shrunk-$@d\n\t\tcase $@ in \\\n\t\t  *right*) leap='-L leapseconds';; \\\n\t\t  *) leap=;; \\\n\t\tesac && \\\n\t\t  $(ZIC) $$leap -d $@d $(DATAFORM).zi && \\\n\t\t  $(ZIC) $$leap -d shrunk-$@d tzdata.zi && \\\n\t\t  case $(DATAFORM),$(PACKRATLIST) in \\\n\t\t    main,) \\\n\t\t      $(ZIC) $$leap -d t-$@d $(TDATA) && \\\n\t\t      $(AWK) '/^Rule/' $(TDATA) | \\\n\t\t\t$(ZIC) $$leap -d t-$@d - $(PACKRATDATA) && \\\n\t\t      diff -r $@d t-$@d;; \\\n\t\t  esac\n\t\tdiff -r $@d shrunk-$@d\n\t\trm -fr $@d t-$@d shrunk-$@d\n\t\ttouch $@\n\nclean_misc:\n\t\trm -fr *.ckd *.dir\n\t\trm -f *.ck *.core *.o *.out core core.* \\\n\t\t  date tzdir.h tzselect version.h zdump zic libtz.a\nclean:\t\tclean_misc\n\t\trm -fr tzdb-*/\n\t\trm -f *.zi $(TZS_NEW)\n\nmaintainer-clean: clean\n\t\t@echo 'This command is intended for maintainers to use; it'\n\t\t@echo 'deletes files that may need special tools to rebuild.'\n\t\trm -f leapseconds version $(MANTXTS) $(TZS) *.asc *.tar.*\n\nnames:\n\t\t@echo $(ENCHILADA)\n\npublic: check public.ck $(CHECK_TIME_T_ALTERNATIVES) \\\n\t\ttarballs signatures\n\ndate.1.txt:\tdate.1\nnewctime.3.txt:\tnewctime.3\nnewstrftime.3.txt: newstrftime.3\nnewtzset.3.txt:\tnewtzset.3\ntime2posix.3.txt: time2posix.3\ntzfile.5.txt:\ttzfile.5\ntzselect.8.txt:\ttzselect.8\nzdump.8.txt:\tzdump.8\nzic.8.txt:\tzic.8\n\n$(MANTXTS):\tworkman.sh\n\t\tLC_ALL=C sh workman.sh $(@:.txt=) >$@.out\n\t\tmv $@.out $@\n\n# Set file timestamps deterministically if possible,\n# so that tarballs containing the timestamps are reproducible.\n#\n# '$(SET_TIMESTAMP_N) N DEST A B C ...' sets the timestamp of the\n# file DEST to the maximum of the timestamps of the files A B C ...,\n# plus N if GNU ls and touch are available.\nSET_TIMESTAMP_N = sh -c '\\\n  n=$$0 dest=$$1; shift; \\\n  <\"$$dest\" && \\\n  if test $$n != 0 && \\\n     lsout=$$(ls -nt --time-style=\"+%s\" \"$$@\" 2>/dev/null); then \\\n    set x $$lsout && \\\n    timestamp=$$(($$7 + $$n)) && \\\n    echo \"+ touch -md @$$timestamp $$dest\" && \\\n    touch -md @$$timestamp \"$$dest\"; \\\n  else \\\n    newest=$$(ls -t \"$$@\" | sed 1q) && \\\n    echo \"+ touch -mr $$newest $$dest\" && \\\n    touch -mr \"$$newest\" \"$$dest\"; \\\n  fi'\n# If DEST depends on A B C ... in this Makefile, callers should use\n# $(SET_TIMESTAMP_DEP) DEST A B C ..., for the benefit of any\n# downstream 'make' that considers equal timestamps to be out of date.\n# POSIX allows this 'make' behavior, and HP-UX 'make' does it.\n# If all that matters is that the timestamp be reproducible\n# and plausible, use $(SET_TIMESTAMP).\nSET_TIMESTAMP = $(SET_TIMESTAMP_N) 0\nSET_TIMESTAMP_DEP = $(SET_TIMESTAMP_N) 1\n\n# Set the timestamps to those of the git repository, if available,\n# and if the files have not changed since then.\n# This uses GNU 'ls --time-style=+%s', which outputs the seconds count,\n# and GNU 'touch -d@N FILE', where N is the number of seconds since 1970.\n# If git or GNU is absent, don't bother to sync with git timestamps.\n# Also, set the timestamp of each prebuilt file like 'leapseconds'\n# to be the maximum of the files it depends on.\nset-timestamps.out: $(EIGHT_YARDS)\n\t\trm -f $@\n\t\tif (type git) >/dev/null 2>&1 && \\\n\t\t   files=$$(git ls-files $(EIGHT_YARDS)) && \\\n\t\t   touch -md @1 test.out; then \\\n\t\t  rm -f test.out && \\\n\t\t  for file in $$files; do \\\n\t\t    if git diff --quiet HEAD $$file; then \\\n\t\t      time=$$(TZ=UTC0 git log -1 \\\n\t\t\t--format='tformat:%cd' \\\n\t\t\t--date='format:%Y-%m-%dT%H:%M:%SZ' \\\n\t\t\t$$file) && \\\n\t\t      echo \"+ touch -md $$time $$file\" && \\\n\t\t      touch -md $$time $$file; \\\n\t\t    else \\\n\t\t      echo >&2 \"$$file: warning: does not match repository\"; \\\n\t\t    fi || exit; \\\n\t\t  done; \\\n\t\tfi\n\t\t$(SET_TIMESTAMP_DEP) leapseconds $(LEAP_DEPS)\n\t\tfor file in $(MANTXTS); do \\\n\t\t  $(SET_TIMESTAMP_DEP) $$file $${file%.txt} workman.sh || \\\n\t\t    exit; \\\n\t\tdone\n\t\t$(SET_TIMESTAMP_DEP) version $(VERSION_DEPS)\n\t\t$(SET_TIMESTAMP_DEP) tzdata.zi $(TZDATA_ZI_DEPS)\n\t\ttouch $@\nset-tzs-timestamp.out: $(TZS)\n\t\t$(SET_TIMESTAMP_DEP) $(TZS) $(TZS_DEPS)\n\t\ttouch $@\n\n# The zics below ensure that each data file can stand on its own.\n# We also do an all-files run to catch links to links.\n\npublic.ck: $(VERSION_DEPS)\n\t\trm -fr $@d\n\t\tmkdir $@d\n\t\tln $(VERSION_DEPS) $@d\n\t\tcd $@d \\\n\t\t  && $(MAKE) CFLAGS='$(GCC_DEBUG_FLAGS)' TZDIR='$(TZDIR)' ALL\n\t\tfor i in $(TDATA_TO_CHECK) \\\n\t\t    tzdata.zi vanguard.zi main.zi rearguard.zi; \\\n\t\tdo \\\n\t\t  $@d/zic -v -d $@d/zoneinfo $@d/$$i || exit; \\\n\t\tdone\n\t\t$@d/zic -v -d $@d/zoneinfo-all $(TDATA_TO_CHECK)\n\t\t:\n\t\t: Also check 'backzone' syntax.\n\t\trm $@d/main.zi\n\t\tcd $@d && $(MAKE) PACKRATDATA=backzone main.zi\n\t\t$@d/zic -d $@d/zoneinfo main.zi\n\t\trm $@d/main.zi\n\t\tcd $@d && \\\n\t\t  $(MAKE) PACKRATDATA=backzone PACKRATLIST=zone.tab main.zi\n\t\t$@d/zic -d $@d/zoneinfo main.zi\n\t\t:\n\t\trm -fr $@d\n\t\ttouch $@\n\n# Check that the code works under various alternative\n# implementations of time_t.\ncheck_time_t_alternatives: $(TIME_T_ALTERNATIVES)\n$(TIME_T_ALTERNATIVES_TAIL): $(TIME_T_ALTERNATIVES_HEAD)\n$(TIME_T_ALTERNATIVES): $(VERSION_DEPS)\n\t\trm -fr $@d\n\t\tmkdir $@d\n\t\tln $(VERSION_DEPS) $@d\n\t\tcase $@ in \\\n\t\t  *32_t*) range=-2147483648,2147483648;; \\\n\t\t  u*) range=0,4294967296;; \\\n\t\t  *) range=-4294967296,4294967296;; \\\n\t\tesac && \\\n\t\twd=$$PWD && \\\n\t\tzones=$$($(AWK) '/^[^#]/ { print $$3 }' <zone1970.tab) && \\\n\t\tif test $@ = $(TIME_T_ALTERNATIVES_HEAD); then \\\n\t\t  range_target=; \\\n\t\telse \\\n\t\t  range_target=to$$range.tzs; \\\n\t\tfi && \\\n\t\t(cd $@d && \\\n\t\t  $(MAKE) TOPDIR=\"$$wd/$@d\" \\\n\t\t    CFLAGS='$(CFLAGS) -Dtime_tz='\"'$(@:.ck=)'\" \\\n\t\t    REDO='$(REDO)' \\\n\t\t    D=\"$$wd/$@d\" \\\n\t\t    TZS_YEAR=\"$$range\" TZS_CUTOFF_FLAG=\"-t $$range\" \\\n\t\t    install $$range_target) && \\\n\t\ttest $@ = $(TIME_T_ALTERNATIVES_HEAD) || { \\\n\t\t  (cd $(TIME_T_ALTERNATIVES_HEAD)d && \\\n\t\t    $(MAKE) TOPDIR=\"$$wd/$@d\" \\\n\t\t      TZS_YEAR=\"$$range\" TZS_CUTOFF_FLAG=\"-t $$range\" \\\n\t\t      D=\"$$wd/$@d\" \\\n\t\t      to$$range.tzs) && \\\n\t\t  $(SETUP_DIFF_TZS) && \\\n\t\t  $$DIFF_TZS $(TIME_T_ALTERNATIVES_HEAD)d/to$$range.tzs \\\n\t\t\t  $@d/to$$range.tzs && \\\n\t\t  if diff -q Makefile Makefile 2>/dev/null; then \\\n\t\t    quiet_option='-q'; \\\n\t\t  else \\\n\t\t    quiet_option=''; \\\n\t\t  fi && \\\n\t\t    diff $$quiet_option -r $(TIME_T_ALTERNATIVES_HEAD)d/etc \\\n\t\t\t\t\t   $@d/etc && \\\n\t\t    diff $$quiet_option -r \\\n\t\t      $(TIME_T_ALTERNATIVES_HEAD)d/usr/share \\\n\t\t      $@d/usr/share; \\\n\t\t}\n\t\ttouch $@\n\nTRADITIONAL_ASC = \\\n  tzcode$(VERSION).tar.gz.asc \\\n  tzdata$(VERSION).tar.gz.asc\nREARGUARD_ASC = \\\n  tzdata$(VERSION)-rearguard.tar.gz.asc\nALL_ASC = $(TRADITIONAL_ASC) $(REARGUARD_ASC) \\\n  tzdb-$(VERSION).tar.lz.asc\n\ntarballs rearguard_tarballs tailored_tarballs traditional_tarballs \\\nsignatures rearguard_signatures traditional_signatures: \\\n  version set-timestamps.out rearguard.zi vanguard.zi\n\t\tread -r VERSION <version && \\\n\t\t$(MAKE) AWK='$(AWK)' VERSION=\"$$VERSION\" $@_version\n\n# These *_version rules are intended for use if VERSION is set by some\n# other means.  Ordinarily these rules are used only by the above\n# non-_version rules, which set VERSION on the 'make' command line.\ntarballs_version: traditional_tarballs_version rearguard_tarballs_version \\\n  tzdb-$(VERSION).tar.lz\nrearguard_tarballs_version: \\\n  tzdata$(VERSION)-rearguard.tar.gz\ntraditional_tarballs_version: \\\n  tzcode$(VERSION).tar.gz tzdata$(VERSION).tar.gz\ntailored_tarballs_version: \\\n  tzdata$(VERSION)-tailored.tar.gz\nsignatures_version: $(ALL_ASC)\nrearguard_signatures_version: $(REARGUARD_ASC)\ntraditional_signatures_version: $(TRADITIONAL_ASC)\n\ntzcode$(VERSION).tar.gz: set-timestamps.out\n\t\t$(SETUP_TAR) && \\\n\t\t$$TAR -cf - \\\n\t\t    $(COMMON) $(DOCS) $(SOURCES) | \\\n\t\t  gzip $(GZIPFLAGS) >$@.out\n\t\tmv $@.out $@\n\ntzdata$(VERSION).tar.gz: set-timestamps.out\n\t\t$(SETUP_TAR) && \\\n\t\t$$TAR -cf - $(TZDATA_DIST) | \\\n\t\t  gzip $(GZIPFLAGS) >$@.out\n\t\tmv $@.out $@\n\n# Create empty files with a reproducible timestamp.\nCREATE_EMPTY = TZ=UTC0 touch -mt 202010122253.00\n\n# The obsolescent *rearguard* targets and related macros are present\n# for backwards compatibility with tz releases 2018e through 2022a.\n# They should go away eventually.  To build rearguard tarballs you\n# can instead use 'make DATAFORM=rearguard tailored_tarballs'.\ntzdata$(VERSION)-rearguard.tar.gz: rearguard.zi set-timestamps.out\n\t\trm -fr $@.dir\n\t\tmkdir $@.dir\n\t\tln $(TZDATA_DIST) $@.dir\n\t\tcd $@.dir && rm -f $(TDATA) $(PACKRATDATA) version\n\t\tfor f in $(TDATA) $(PACKRATDATA); do \\\n\t\t  rearf=$@.dir/$$f; \\\n\t\t  $(AWK) -v DATAFORM=rearguard -f ziguard.awk $$f >$$rearf && \\\n\t\t  $(SET_TIMESTAMP_DEP) $$rearf ziguard.awk $$f || exit; \\\n\t\tdone\n\t\tsed '1s/$$/-rearguard/' <version >$@.dir/version\n\t\t: The dummy pacificnew pacifies TZUpdater 2.3.1 and earlier.\n\t\t$(CREATE_EMPTY) $@.dir/pacificnew\n\t\ttouch -mr version $@.dir/version\n\t\t$(SETUP_TAR) && \\\n\t\t  (cd $@.dir && \\\n\t\t   $$TAR -cf - \\\n\t\t\t$(TZDATA_DIST) pacificnew | \\\n\t\t     gzip $(GZIPFLAGS)) >$@.out\n\t\tmv $@.out $@\n\n# Create a tailored tarball suitable for TZUpdater and compatible tools.\n# For example, 'make DATAFORM=vanguard tailored_tarballs' makes a tarball\n# useful for testing whether TZUpdater supports vanguard form.\n# The generated tarball is not byte-for-byte equivalent to a hand-tailored\n# traditional tarball, as data entries are put into 'etcetera' even if they\n# came from some other source file.  However, the effect should be the same\n# for ordinary use, which reads all the source files.\ntzdata$(VERSION)-tailored.tar.gz: set-timestamps.out\n\t\trm -fr $@.dir\n\t\tmkdir $@.dir\n\t\t: The dummy pacificnew pacifies TZUpdater 2.3.1 and earlier.\n\t\tif test $(DATAFORM) = vanguard; then \\\n\t\t  pacificnew=; \\\n\t\telse \\\n\t\t  pacificnew=pacificnew; \\\n\t\tfi && \\\n\t\tcd $@.dir && \\\n\t\t  $(CREATE_EMPTY) $(PRIMARY_YDATA) $(NDATA) backward \\\n\t\t  $$pacificnew\n\t\t(grep '^#' tzdata.zi && echo && cat $(DATAFORM).zi) \\\n\t\t  >$@.dir/etcetera\n\t\ttouch -mr tzdata.zi $@.dir/etcetera\n\t\tsed -n \\\n\t\t  -e '/^# *version  *\\(.*\\)/h' \\\n\t\t  -e '/^# *ddeps  */H' \\\n\t\t  -e '$$!d' \\\n\t\t  -e 'g' \\\n\t\t  -e 's/^# *version  *//' \\\n\t\t  -e 's/\\n# *ddeps  */-/' \\\n\t\t  -e 's/ /-/g' \\\n\t\t  -e 'p' \\\n\t\t  <tzdata.zi >$@.dir/version\n\t\ttouch -mr version $@.dir/version\n\t\tlinks= && \\\n\t\t  for file in $(TZDATA_DIST); do \\\n\t\t    test -f $@.dir/$$file || links=\"$$links $$file\"; \\\n\t\t  done && \\\n\t\t  ln $$links $@.dir\n\t\t$(SETUP_TAR) && \\\n\t\t  (cd $@.dir && \\\n\t\t   $$TAR -cf - * | gzip $(GZIPFLAGS)) >$@.out\n\t\tmv $@.out $@\n\ntzdb-$(VERSION).tar.lz: set-timestamps.out set-tzs-timestamp.out\n\t\trm -fr tzdb-$(VERSION)\n\t\tmkdir tzdb-$(VERSION)\n\t\tln $(ENCHILADA) tzdb-$(VERSION)\n\t\t$(SET_TIMESTAMP) tzdb-$(VERSION) tzdb-$(VERSION)/*\n\t\t$(SETUP_TAR) && \\\n\t\t$$TAR -cf - tzdb-$(VERSION) | lzip -9 >$@.out\n\t\tmv $@.out $@\n\ntzcode$(VERSION).tar.gz.asc: tzcode$(VERSION).tar.gz\ntzdata$(VERSION).tar.gz.asc: tzdata$(VERSION).tar.gz\ntzdata$(VERSION)-rearguard.tar.gz.asc: tzdata$(VERSION)-rearguard.tar.gz\ntzdb-$(VERSION).tar.lz.asc: tzdb-$(VERSION).tar.lz\n$(ALL_ASC):\n\t\t$(GPG) --armor --detach-sign $?\n\nTYPECHECK_CFLAGS = $(CFLAGS) -DTYPECHECK -D__time_t_defined -D_TIME_T\ntypecheck: long-long.ck unsigned.ck\nlong-long.ck unsigned.ck: $(VERSION_DEPS)\n\t\trm -fr $@d\n\t\tmkdir $@d\n\t\tln $(VERSION_DEPS) $@d\n\t\tcd $@d && \\\n\t\t  case $@ in \\\n\t\t    long-long.*) i=\"long long\";; \\\n\t\t    unsigned.* ) i=\"unsigned\" ;; \\\n\t\t  esac && \\\n\t\t  $(MAKE) \\\n\t\t    CFLAGS=\"$(TYPECHECK_CFLAGS) \\\"-Dtime_t=$$i\\\"\" \\\n\t\t    TOPDIR=\"$$PWD\" \\\n\t\t    install\n\t\t$@d/zdump -i -c 1970,1971 Europe/Rome\n\t\ttouch $@\n\nzonenames:\ttzdata.zi\n\t\t@$(AWK) '/^Z/ { print $$2 } /^L/ { print $$3 }' tzdata.zi\n\nasctime.o:\tprivate.h\ndate.o:\t\tprivate.h\ndifftime.o:\tprivate.h\nlocaltime.o:\tprivate.h tzdir.h tzfile.h\nstrftime.o:\tlocaltime.c private.h tzdir.h tzfile.h\nzdump.o:\tprivate.h version.h\nzic.o:\t\tprivate.h tzdir.h tzfile.h version.h\n\n.PHONY: ALL INSTALL all\n.PHONY: check check_mild check_time_t_alternatives\n.PHONY: check_web check_zishrink\n.PHONY: clean clean_misc commit-leap-seconds.list dummy.zd\n.PHONY: fetch-leap-seconds.list force_tzs\n.PHONY: install maintainer-clean names\n.PHONY: posix_only posix_right public\n.PHONY: rearguard_signatures rearguard_signatures_version\n.PHONY: rearguard_tarballs rearguard_tarballs_version\n.PHONY: right_only right_posix signatures signatures_version\n.PHONY: tarballs tarballs_version\n.PHONY: traditional_signatures traditional_signatures_version\n.PHONY: traditional_tarballs traditional_tarballs_version\n.PHONY: tailored_tarballs tailored_tarballs_version\n.PHONY: typecheck\n.PHONY: zonenames zones\n.PHONY: $(ZDS)\n"
        },
        {
          "name": "NEWS",
          "type": "blob",
          "size": 232.443359375,
          "content": "News for the tz database\n\nUnreleased, experimental changes\n\n  Briefly:\n    Paraguay adopts permanent -03 starting spring 2024.\n    Improve pre-1991 data for the Philippines.\n    Etc/Unknown is now reserved.\n\n  Changes to future timestamps\n\n    Paraguay will stop changing its clocks after the spring-forward\n    transition on 2024-10-06, so it is now permanently at -03.\n    (Thanks to Heitor David Pinto and Even Scharning.)\n    This affects timestamps starting 2025-03-22, as well as the\n    obsolescent tm_isdst flags starting 2024-10-15.\n\n  Changes to past timestamps\n\n    Correct timestamps for the Philippines before 1900, and from 1937\n    through 1990.  (Thanks to P Chan for the heads-up and citations.)\n    This includes adjusting local mean time before 1899; fixing\n    transitions in September 1899, January 1937, and June 1954; adding\n    transitions in December 1941, November 1945, March and September\n    1977, and May and July 1990; and removing incorrect transitions in\n    March and September 1978.\n\n  Changes to data\n\n    Add zone1970.tab lines for the Concordia and Eyre Bird Observatory\n    research stations.  (Thanks to Derick Rethans and Jule Dabars.)\n\n  Changes to code\n\n    strftime %s now generates the correct numeric string even when the\n    represented number does not fit into time_t.  This is better than\n    generating the numeric equivalent of (time_t) -1, as strftime did\n    in TZDB releases 96a (when %s was introduced) through 2020a and in\n    releases 2022b through 2024b.  It is also better than failing and\n    returning 0, as strftime did in releases 2020b through 2022a.\n\n    strftime now outputs an invalid conversion specifier as-is,\n    instead of eliding the leading '%', which confused debugging.\n\n    An invalid TZ now generates the time zone abbreviation \"-00\", not\n    \"UTC\", to help the user see that an error has occurred.  (Thanks\n    to Arthur David Olson for suggesting a \"wrong result\".)\n\n    mktime and timeoff no longer incorrectly fail merely because a\n    struct tm component near INT_MIN or INT_MAX overflows when a\n    lower-order component carries into it.\n\n    TZNAME_MAXIMUM, the maximum number of bytes in a proleptic TZ\n    string's time zone abbreviation, now defaults to 254 not 255.\n    This helps reduce the size of internal state from 25480 to 21384\n    on common platforms.  This change should not be a problem, as\n    nobody uses such long \"abbreviations\" and the longstanding tzcode\n    maximum was 16 until release 2023a.  For those who prefer no\n    arbitrary limits, you can now specify TZNAME_MAXIMUM values up to\n    PTRDIFF_MAX, a limit forced by C anyway; formerly tzcode silently\n    misbehaved unless TZNAME_MAXIMUM was less than INT_MAX.\n\n    tzset and related functions no longer leak a file descriptor if\n    another thread forks or execs at about the same time and if the\n    platform has O_CLOFORK and O_CLOEXEC respectively.  Also, the\n    functions no longer let a TZif file become a controlling terminal.\n\n    'zdump -' now reads TZif data from /dev/stdin.\n    (From a question by Arthur David Olson.)\n\n  Changes to documentation\n\n    The name Etc/Unknown is now reserved: it will not be used by TZDB.\n    This is for compatibility with CLDR, which uses the string\n    \"Etc/Unknown\" for an unknown or invalid timezone.  (Thanks to\n    Justin Grant, Mark Davis, and Guy Harris.)\n\n    Cite Internet RFC 9636, which obsoletes RFC 8536 for TZif format.\n\n\nRelease 2024b - 2024-09-04 12:27:47 -0700\n\n  Briefly:\n    Improve historical data for Mexico, Mongolia, and Portugal.\n    System V names are now obsolescent.\n    The main data form now uses %z.\n    The code now conforms to RFC 8536 for early timestamps.\n    Support POSIX.1-2024, which removes asctime_r and ctime_r.\n    Assume POSIX.2-1992 or later for shell scripts.\n    SUPPORT_C89 now defaults to 1.\n\n  Changes to past timestamps\n\n    Asia/Choibalsan is now an alias for Asia/Ulaanbaatar rather than\n    being a separate Zone with differing behavior before April 2008.\n    This seems better given our wildly conflicting information about\n    Mongolia's time zone history.  (Thanks to Heitor David Pinto.)\n\n    Historical transitions for Mexico have been updated based on\n    official Mexican decrees.  The affected timestamps occur during\n    the years 1921-1927, 1931, 1945, 1949-1970, and 1981-1997.\n    The affected zones are America/Bahia_Banderas, America/Cancun,\n    America/Chihuahua, America/Ciudad_Juarez, America/Hermosillo,\n    America/Mazatlan, America/Merida, America/Mexico_City,\n    America/Monterrey, America/Ojinaga, and America/Tijuana.\n    (Thanks to Heitor David Pinto.)\n\n    Historical transitions for Portugal, represented by Europe/Lisbon,\n    Atlantic/Azores, and Atlantic/Madeira, have been updated based on a\n    close reading of old Portuguese legislation, replacing previous data\n    mainly originating from Whitman and Shanks & Pottenger.  These\n    changes affect a few transitions in 1917-1921, 1924, and 1940\n    throughout these regions by a few hours or days, and various\n    timestamps between 1977 and 1993 depending on the region.  In\n    particular, the Azores and Madeira did not observe DST from 1977 to\n    1981.  Additionally, the adoption of standard zonal time in former\n    Portuguese colonies have been adjusted: Africa/Maputo in 1909, and\n    Asia/Dili by 22 minutes at the start of 1912.\n    (Thanks to Tim Parenti.)\n\n  Changes to past tm_isdst flags\n\n    The period from 1966-04-03 through 1966-10-02 in Portugal is now\n    modeled as DST, to more closely reflect how contemporaneous changes\n    in law entered into force.\n\n  Changes to data\n\n    Names present only for compatibility with UNIX System V\n    (last released in the 1990s) have been moved to 'backward'.\n    These names, which for post-1970 timestamps mostly just duplicate\n    data of geographical names, were confusing downstream uses.\n    Names moved to 'backward' are now links to geographical names.\n    This affects behavior for TZ='EET' for some pre-1981 timestamps,\n    for TZ='CET' for some pre-1947 timestamps, and for TZ='WET' for\n    some pre-1996 timestamps.  Also, TZ='MET' now behaves like\n    TZ='CET' and so uses the abbreviation \"CET\" rather than \"MET\".\n    Those needing the previous TZDB behavior, which does not match any\n    real-world clocks, can find the old entries in 'backzone'.\n    (Problem reported by Justin Grant.)\n\n    The main source files' time zone abbreviations now use %z,\n    supported by zic since release 2015f and used in vanguard form\n    since release 2022b.  For example, America/Sao_Paulo now contains\n    the zone continuation line \"-3:00 Brazil %z\", which is less error\n    prone than the old \"-3:00 Brazil -03/-02\".  This does not change\n    the represented data: the generated TZif files are unchanged.\n    Rearguard form still avoids %z, to support obsolescent parsers.\n\n    Asia/Almaty has been removed from zonenow.tab as it now agrees\n    with Asia/Tashkent for future timestamps, due to Kazakhstan's\n    2024-02-29 time zone change.  Similarly, America/Scoresbysund\n    has been removed, as it now agrees with America/Nuuk due to\n    its 2024-03-31 time zone change.\n\n  Changes to code\n\n    localtime.c now always uses a TZif file's time type 0 to handle\n    timestamps before the file's first transition.  Formerly,\n    localtime.c sometimes inferred a different time type, in order to\n    handle problematic data generated by zic 2018e or earlier.  As it\n    is now safe to assume more recent versions of zic, there is no\n    longer a pressing need to fail to conform RFC 8536 section 3.2,\n    which requires using time type 0 in this situation.  This change\n    does not affect behavior when reading TZif files generated by zic\n    2018f and later.\n\n    POSIX.1-2024 removes asctime_r and ctime_r and does not let\n    libraries define them, so remove them except when needed to\n    conform to earlier POSIX.  These functions are dangerous as they\n    can overrun user buffers.  If you still need them, add\n    -DSUPPORT_POSIX2008 to CFLAGS.\n\n    The SUPPORT_C89 option now defaults to 1 instead of 0, fixing a\n    POSIX-conformance bug introduced in 2023a.\n\n    tzselect now supports POSIX.1-2024 proleptic TZ strings.  Also, it\n    assumes POSIX.2-1992 or later, as practical porting targets now\n    all support that, and it uses some features from POSIX.1-2024 if\n    available.\n\n  Changes to build procedure\n\n    'make check' no longer requires curl and Internet access.\n\n    The build procedure now assumes POSIX.2-1992 or later, to simplify\n    maintenance.  To build on Solaris 10, the only extant system still\n    defaulting to pre-POSIX, prepend /usr/xpg4/bin to PATH.\n\n  Changes to documentation\n\n    The documentation now reflects POSIX.1-2024.\n\n  Changes to commentary\n\n    Commentary about historical transitions in Portugal and her former\n    colonies has been expanded with links to relevant legislation.\n    (Thanks to Tim Parenti.)\n\n\nRelease 2024a - 2024-02-01 09:28:56 -0800\n\n  Briefly:\n    Kazakhstan unifies on UTC+5 beginning 2024-03-01.\n    Palestine springs forward a week later after Ramadan.\n    zic no longer pretends to support indefinite-past DST.\n    localtime no longer mishandles Ciudad Juárez in 2422.\n\n  Changes to future timestamps\n\n    Kazakhstan unifies on UTC+5.  This affects Asia/Almaty and\n    Asia/Qostanay which together represent the eastern portion of the\n    country that will transition from UTC+6 on 2024-03-01 at 00:00 to\n    join the western portion.  (Thanks to Zhanbolat Raimbekov.)\n\n    Palestine springs forward a week later than previously predicted\n    in 2024 and 2025.  (Thanks to Heba Hamad.)  Change spring-forward\n    predictions to the second Saturday after Ramadan, not the first;\n    this also affects other predictions starting in 2039.\n\n  Changes to past timestamps\n\n    Asia/Ho_Chi_Minh's 1955-07-01 transition occurred at 01:00\n    not 00:00.  (Thanks to Đoàn Trần Công Danh.)\n\n    From 1947 through 1949, Toronto's transitions occurred at 02:00\n    not 00:00.  (Thanks to Chris Walton.)\n\n    In 1911 Miquelon adopted standard time on June 15, not May 15.\n\n  Changes to code\n\n    The FROM and TO columns of Rule lines can no longer be \"minimum\"\n    or an abbreviation of \"minimum\", because TZif files do not support\n    DST rules that extend into the indefinite past - although these\n    rules were supported when TZif files had only 32-bit data, this\n    stopped working when 64-bit TZif files were introduced in 1995.\n    This should not be a problem for realistic data, since DST was\n    first used in the 20th century.  As a transition aid, FROM columns\n    like \"minimum\" are now diagnosed and then treated as if they were\n    the year 1900; this should suffice for TZif files on old systems\n    with only 32-bit time_t, and it is more compatible with bugs in\n    2023c-and-earlier localtime.c.  (Problem reported by Yoshito\n    Umaoka.)\n\n    localtime and related functions no longer mishandle some\n    timestamps that occur about 400 years after a switch to a time\n    zone with a DST schedule.  In 2023d data this problem was visible\n    for some timestamps in November 2422, November 2822, etc. in\n    America/Ciudad_Juarez.  (Problem reported by Gilmore Davidson.)\n\n    strftime %s now uses tm_gmtoff if available.  (Problem and draft\n    patch reported by Dag-Erling Smørgrav.)\n\n  Changes to build procedure\n\n    The leap-seconds.list file is now copied from the IERS instead of\n    from its downstream counterpart at NIST, as the IERS version is\n    now in the public domain too and tends to be more up-to-date.\n    (Thanks to Martin Burnicki for liaisoning with the IERS.)\n\n  Changes to documentation\n\n    The strftime man page documents which struct tm members affect\n    which conversion specs, and that tzset is called.  (Problems\n    reported by Robert Elz and Steve Summit.)\n\n\nRelease 2023d - 2023-12-21 20:02:24 -0800\n\n  Briefly:\n    Ittoqqortoormiit, Greenland changes time zones on 2024-03-31.\n    Vostok, Antarctica changed time zones on 2023-12-18.\n    Casey, Antarctica changed time zones five times since 2020.\n    Code and data fixes for Palestine timestamps starting in 2072.\n    A new data file zonenow.tab for timestamps starting now.\n\n  Changes to future timestamps\n\n    Ittoqqortoormiit, Greenland (America/Scoresbysund) joins most of\n    the rest of Greenland's timekeeping practice on 2024-03-31, by\n    changing its time zone from -01/+00 to -02/-01 at the same moment\n    as the spring-forward transition.  Its clocks will therefore not\n    spring forward as previously scheduled.  The time zone change\n    reverts to its common practice before 1981.  (Thanks to Jule Dabars.)\n\n    Fix predictions for DST transitions in Palestine in 2072-2075,\n    correcting a typo introduced in 2023a.  (Thanks to Jule Dabars.)\n\n  Changes to past and future timestamps\n\n    Vostok, Antarctica changed to +05 on 2023-12-18.  It had been at\n    +07 (not +06) for years.  (Thanks to Zakhary V. Akulov.)\n\n    Change data for Casey, Antarctica to agree with timeanddate.com,\n    by adding five time zone changes since 2020.  Casey is now at +08\n    instead of +11.\n\n  Changes to past tm_isdst flags\n\n    Much of Greenland, represented by America/Nuuk, changed its\n    standard time from -03 to -02 on 2023-03-25, not on 2023-10-28.\n    This does not affect UTC offsets, only the tm_isdst flag.\n    (Thanks to Thomas M. Steenholdt.)\n\n  New data file\n\n    A new data file zonenow.tab helps configure applications that use\n    timestamps dated from now on.  This simplifies configuration,\n    since users choose from a smaller Zone set.  The file's format is\n    experimental and subject to change.\n\n  Changes to code\n\n    localtime.c no longer mishandles TZif files that contain a single\n    transition into a DST regime.  Previously, it incorrectly assumed\n    DST was in effect before the transition too.  (Thanks to Alois\n    Treindl for debugging help.)\n\n    localtime.c's timeoff no longer collides with OpenBSD 7.4.\n\n    The C code now uses _Generic only if __STDC_VERSION__ says the\n    compiler is C11 or later.\n\n    tzselect now optionally reads zonenow.tab, to simplify when\n    configuring only for timestamps dated from now on.\n\n    tzselect no longer creates temporary files.\n\n    tzselect no longer mishandles the following:\n\n      Spaces and most other special characters in BUGEMAIL, PACKAGE,\n      TZDIR, and VERSION.\n\n      TZ strings when using mawk 1.4.3, which mishandles regular\n      expressions of the form /X{2,}/.\n\n      ISO 6709 coordinates when using an awk that lacks the GNU\n      extension of newlines in -v option-arguments.\n\n      Non UTF-8 locales when using an iconv command that lacks the GNU\n      //TRANSLIT extension.\n\n    zic no longer mishandles data for Palestine after the year 2075.\n    Previously, it incorrectly omitted post-2075 transitions that are\n    predicted for just before and just after Ramadan.  (Thanks to Ken\n    Murchison for debugging help.)\n\n    zic now works again on Linux 2.6.16 and 2.6.17 (2006).\n    (Problem reported by Rune Torgersen.)\n\n  Changes to build procedure\n\n    The Makefile is now more compatible with POSIX:\n     * It no longer defines AR, CC, CFLAGS, LDFLAGS, and SHELL.\n     * It no longer uses its own 'cc' in place of CC.\n     * It now uses ARFLAGS, with default specified by POSIX.\n     * It does not use LFLAGS incompatibly with POSIX.\n     * It uses the special .POSIX target.\n     * It quotes special characters more carefully.\n     * It no longer mishandles builds in an ISO 8859 locale.\n    Due to the CC changes, TZDIR is now #defined in a file tzdir.h\n    built by 'make', not in a $(CC) -D option.  Also, TZDEFAULT is\n    now treated like TZDIR as they have similar roles.\n\n  Changes to commentary\n\n     Limitations and hazards of the optional support for obsolescent\n     C89 platforms are documented better, along with a tentative\n     schedule for removing this support.\n\n\nRelease 2023c - 2023-03-28 12:42:14 -0700\n\n  Changes to past and future timestamps\n\n    Model Lebanon's DST chaos by reverting data to tzdb 2023a.\n    (Thanks to Rany Hany for the heads-up.)\n\n\nRelease 2023b - 2023-03-23 19:50:38 -0700\n\n  Changes to future timestamps\n\n    This year Lebanon springs forward April 20/21 not March 25/26.\n    (Thanks to Saadallah Itani.)  [This was reverted in 2023c.]\n\n\nRelease 2023a - 2023-03-22 12:39:33 -0700\n\n  Briefly:\n    Egypt now uses DST again, from April through October.\n    This year Morocco springs forward April 23, not April 30.\n    Palestine delays the start of DST this year.\n    Much of Greenland still uses DST from 2024 on.\n    America/Yellowknife now links to America/Edmonton.\n    tzselect can now use current time to help infer timezone.\n    The code now defaults to C99 or later.\n    Fix use of C23 attributes.\n\n  Changes to future timestamps\n\n    Starting in 2023, Egypt will observe DST from April's last Friday\n    through October's last Thursday.  (Thanks to Ahmad ElDardiry.)\n    Assume the transition times are 00:00 and 24:00, respectively.\n\n    In 2023 Morocco's spring-forward transition after Ramadan\n    will occur April 23, not April 30.  (Thanks to Milamber.)\n    Adjust predictions for future years accordingly.  This affects\n    predictions for 2023, 2031, 2038, and later years.\n\n    This year Palestine will delay its spring forward from\n    March 25 to April 29 due to Ramadan.  (Thanks to Heba Hamad.)\n    Make guesses for future Ramadans too.\n\n    Much of Greenland, represented by America/Nuuk, will continue to\n    observe DST using European Union rules.  When combined with\n    Greenland's decision not to change the clocks in fall 2023,\n    America/Nuuk therefore changes from -03/-02 to -02/-01 effective\n    2023-10-29 at 01:00 UTC.  (Thanks to Thomas M. Steenholdt.)\n    This change from 2022g doesn't affect timestamps until 2024-03-30,\n    and doesn't affect tm_isdst until 2023-03-25.\n\n  Changes to past timestamps\n\n    America/Yellowknife has changed from a Zone to a backward\n    compatibility Link, as it no longer differs from America/Edmonton\n    since 1970.  (Thanks to Almaz Mingaleev.)  This affects some\n    pre-1948 timestamps.  The old data are now in 'backzone'.\n\n  Changes to past time zone abbreviations\n\n    When observing Moscow time, Europe/Kirov and Europe/Volgograd now\n    use the abbreviations MSK/MSD instead of numeric abbreviations,\n    for consistency with other timezones observing Moscow time.\n\n  Changes to code\n\n    You can now tell tzselect local time, to simplify later choices.\n    Select the 'time' option in its first prompt.\n\n    You can now compile with -DTZNAME_MAXIMUM=N to limit time zone\n    abbreviations to N bytes (default 255).  The reference runtime\n    library now rejects POSIX-style TZ strings that contain longer\n    abbreviations, treating them as UTC.  Previously the limit was\n    platform dependent and abbreviations were silently truncated to\n    16 bytes even when the limit was greater than 16.\n\n    The code by default is now designed for C99 or later.  To build on\n    a mostly-C89 platform, compile with -DPORT_TO_C89; this should\n    work on C89 platforms that also support C99 'long long' and\n    perhaps a few other extensions to C89.  To support C89 callers of\n    tzcode's library, compile with -DSUPPORT_C89; however, this could\n    trigger latent bugs in C99-or-later callers.  The two new macros\n    are transitional aids planned to be removed in a future version\n    (say, in 2029), when C99 or later will be required.\n\n    The code now builds again on pre-C99 platforms, if you compile\n    with -DPORT_TO_C89.  This fixes a bug introduced in 2022f.\n\n    On C23-compatible platforms tzcode no longer uses syntax like\n    'static [[noreturn]] void usage(void);'.  Instead, it uses\n    '[[noreturn]] static void usage(void);' as strict C23 requires.\n    (Problem reported by Houge Langley.)\n\n    The code's functions now constrain their arguments with the C\n    'restrict' keyword consistently with their documentation.\n    This may allow future optimizations.\n\n    zdump again builds standalone with ckdadd and without setenv,\n    fixing a bug introduced in 2022g.  (Problem reported by panic.)\n\n    leapseconds.awk can now process a leap seconds file that never\n    expires; this might be useful if leap seconds are discontinued.\n\n  Changes to commentary\n\n    tz-link.html has a new section \"Coordinating with governments and\n    distributors\".  (Thanks to Neil Fuller for some of the text.)\n\n    To improve tzselect diagnostics, zone1970.tab's comments column is\n    now limited to countries that have multiple timezones.\n\n    Note that there are plans to discontinue leap seconds by 2035.\n\n\nRelease 2022g - 2022-11-29 08:58:31 -0800\n\n  Briefly:\n    The northern edge of Chihuahua changes to US timekeeping.\n    Much of Greenland stops changing clocks after March 2023.\n    Fix some pre-1996 timestamps in northern Canada.\n    C89 is now deprecated; please use C99 or later.\n    Portability fixes for AIX, libintl, MS-Windows, musl, z/OS\n    In C code, use more C23 features if available.\n    C23 timegm now supported by default\n    Fixes for unlikely integer overflows\n\n  Changes to future timestamps\n\n    In the Mexican state of Chihuahua, the border strip near the US\n    will change to agree with nearby US locations on 2022-11-30.\n    The strip's western part, represented by Ciudad Juárez, switches\n    from -06 all year to -07/-06 with US DST rules, like El Paso, TX.\n    The eastern part, represented by Ojinaga, will observe US DST next\n    year, like Presidio, TX.  (Thanks to Heitor David Pinto.)\n    A new Zone America/Ciudad_Juarez splits from America/Ojinaga.\n\n    Much of Greenland, represented by America/Nuuk, stops observing\n    winter time after March 2023, so its daylight saving time becomes\n    standard time.  (Thanks to Jonas Nyrup and Jürgen Appel.)\n\n  Changes to past timestamps\n\n    Changes for pre-1996 northern Canada (thanks to Chris Walton):\n\n      Merge America/Iqaluit and America/Pangnirtung into the former,\n      with a backward compatibility link for the latter name.\n      There is no good evidence the two locations differ since 1970.\n      This change affects pre-1996 America/Pangnirtung timestamps.\n\n      Cambridge Bay, Inuvik, Iqaluit, Rankin Inlet, Resolute and\n      Yellowknife did not observe DST in 1965, and did observe DST\n      from 1972 through 1979.\n\n      Whitehorse moved from -09 to -08 on 1966-02-27, not 1967-05-28.\n\n    Colombia's 1993 fallback was 02-06 24:00, not 04-04 00:00.\n    (Thanks to Alois Treindl.)\n\n    Singapore's 1981-12-31 change was at 16:00 UTC (23:30 local time),\n    not 24:00 local time.  (Thanks to Geoff Clare via Robert Elz.)\n\n  Changes to code\n\n    Although tzcode still works with C89, bugs found in recent routine\n    maintenance indicate that bitrot has set in and that in practice\n    C89 is no longer used to build tzcode.  As it is a maintenance\n    burden, support for C89 is planned to be removed soon.  Instead,\n    please use compilers compatible with C99, C11, C17, or C23.\n\n    timegm, which tzcode implemented in 1989, will finally be\n    standardized 34 years later as part of C23, so timegm is now\n    supported even if STD_INSPIRED is not defined.\n\n    Fix bug in zdump's tzalloc emulation on hosts that lack tm_zone.\n    (Problem reported by Đoàn Trần Công Danh.)\n\n    Fix bug in zic on hosts where malloc(0) yields NULL on success.\n    (Problem reported by Tim McBrayer for AIX 6.1.)\n\n    Fix zic configuration to avoid linkage failures on some platforms.\n    (Problems reported by Gilmore Davidson and Igor Ivanov.)\n\n    Work around MS-Windows nmake incompatibility with POSIX.\n    (Problem reported by Manuela Friedrich.)\n\n    Port mktime and strftime to debugging platforms where accessing\n    uninitialized data has undefined behavior (strftime problem\n    reported by Robert Elz).\n\n    Check more carefully for unlikely integer overflows, preferring\n    C23 <stdckdint.h> to overflow checking by hand, as the latter has\n    had obscure bugs.\n\n  Changes to build procedure\n\n    New Makefile rule check_mild that skips checking whether Link\n    lines are in the file 'backward'.  (Inspired by a suggestion from\n    Stephen Colebourne.)\n\n\nRelease 2022f - 2022-10-28 18:04:57 -0700\n\n  Briefly:\n    Mexico will no longer observe DST except near the US border.\n    Chihuahua moves to year-round -06 on 2022-10-30.\n    Fiji no longer observes DST.\n    Move links to 'backward'.\n    In vanguard form, GMT is now a Zone and Etc/GMT a link.\n    zic now supports links to links, and vanguard form uses this.\n    Simplify four Ontario zones.\n    Fix a Y2438 bug when reading TZif data.\n    Enable 64-bit time_t on 32-bit glibc platforms.\n    Omit large-file support when no longer needed.\n    In C code, use some C23 features if available.\n    Remove no-longer-needed workaround for Qt bug 53071.\n\n  Changes to future timestamps\n\n    Mexico will no longer observe DST after 2022, except for areas\n    near the US border that continue to observe US DST rules.\n    On 2022-10-30 at 02:00 the Mexican state of Chihuahua moves\n    from -07 (-06 with DST) to year-round -06, thus not changing\n    its clocks that day.  The new law states that Chihuahua\n    near the US border no longer observes US DST.\n    (Thanks to gera for the heads-up about Chihuahua.)\n\n    Fiji will not observe DST in 2022/3.  (Thanks to Shalvin Narayan.)\n    For now, assume DST is suspended indefinitely.\n\n  Changes to data\n\n    Move links to 'backward' to ease and simplify link maintenance.\n    This affects generated data only if you use 'make BACKWARD='.\n\n    GMT is now a Zone and Etc/GMT a link instead of vice versa,\n    as GMT is needed for leap second support whereas Etc/GMT is not.\n    However, this change exposes a bug in TZUpdater 2.3.2 so it is\n    present only in vanguard form for now.\n\n    Vanguard form now uses links to links, as zic now supports this.\n\n  Changes to past timestamps\n\n    Simplify four Ontario zones, as most of the post-1970 differences\n    seem to have been imaginary.  (Problem reported by Chris Walton.)\n    Move America/Nipigon, America/Rainy_River, and America/Thunder_Bay\n    to 'backzone'; backward-compatibility links still work, albeit\n    with some different timestamps before November 2005.\n\n  Changes to code\n\n    zic now supports links to links regardless of input line order.\n    For example, if Australia/Sydney is a Zone, the lines\n      Link Australia/Canberra Australia/ACT\n      Link Australia/Sydney Australia/Canberra\n    now work correctly, even though the shell commands\n      ln Australia/Canberra Australia/ACT\n      ln Australia/Sydney Australia/Canberra\n    would fail because the first command attempts to use a link\n    Australia/Canberra that does not exist until after the second\n    command is executed.  Previously, zic had unspecified behavior if\n    a Link line's target was another link, and zic often misbehaved if\n    a Link line's target was a later Link line.\n\n    Fix line number in zic's diagnostic for a link to a link.\n\n    Fix a bug that caused localtime to mishandle timestamps starting\n    in the year 2438 when reading data generated by 'zic -b fat' when\n    distant-future DST transitions occur at times given in standard\n    time or in UT, not the usual case of local time.  This occurs when\n    the corresponding .zi Rule lines specify DST transitions with TO\n    columns of 'max' and AT columns that end in 's' or 'u'.  The\n    number 2438 comes from the 32-bit limit in the year 2038, plus the\n    400-year Gregorian cycle.  (Problem reported by Bradley White.)\n\n    On glibc 2.34 and later, which optionally supports 64-bit time_t\n    on platforms like x86 where time_t was traditionally 32 bits,\n    default time_t to 64 instead of 32 bits.  This lets functions like\n    localtime support timestamps after the year 2038, and fixes\n    year-2038 problems in zic when accessing files dated after 2038.\n    To continue to limit time_t to 32 bits on these platforms, use\n    \"make CFLAGS='-D_TIME_BITS=32'\".\n\n    In C code, do not enable large-file support on platforms like AIX\n    and macOS that no longer need it now that tzcode does not use\n    off_t or related functions like 'stat'.  Large-file support is\n    still enabled by default on GNU/Linux, as it is needed for 64-bit\n    time_t support.\n\n    In C code, prefer C23 keywords to pre-C23 macros for alignof,\n    bool, false, and true.  Also, use the following C23 features if\n    available: __has_include, unreachable.\n\n    zic no longer works around Qt bug 53071, as the relevant Qt\n    releases have been out of support since 2019.  This change affects\n    only fat TZif files, as thin files never had the workaround.\n\n    zdump no longer modifies the environ vector when compiled on\n    platforms lacking tm_zone or when compiled with -DUSE_LTZ=0.\n    This avoid undefined behavior on POSIX platforms.\n\n\nRelease 2022e - 2022-10-11 11:13:02 -0700\n\n  Briefly:\n    Jordan and Syria switch from +02/+03 with DST to year-round +03.\n\n  Changes to future timestamps\n\n    Jordan and Syria are abandoning the DST regime and are changing to\n    permanent +03, so they will not fall back from +03 to +02 on\n    2022-10-28.  (Thanks to Steffen Thorsen and Issam Al-Zuwairi.)\n\n  Changes to past timestamps\n\n    On 1922-01-01 Tijuana adopted standard time at 00:00, not 01:00.\n\n  Changes to past time zone abbreviations and DST flags\n\n    The temporary advancement of clocks in central Mexico in summer\n    1931 is now treated as daylight saving time, instead of as two\n    changes to standard time.\n\n\nRelease 2022d - 2022-09-23 12:02:57 -0700\n\n  Briefly:\n    Palestine transitions are now Saturdays at 02:00.\n    Simplify three Ukraine zones into one.\n\n  Changes to future timestamps\n\n    Palestine now springs forward and falls back at 02:00 on the\n    first Saturday on or after March 24 and October 24, respectively.\n    This means 2022 falls back 10-29 at 02:00, not 10-28 at 01:00.\n    (Thanks to Heba Hamad.)\n\n  Changes to past timestamps\n\n    Simplify three Ukraine zones to one, since the post-1970\n    differences seem to have been imaginary.  Move Europe/Uzhgorod and\n    Europe/Zaporozhye to 'backzone'; backward-compatibility links\n    still work, albeit with different timestamps before October 1991.\n\n\nRelease 2022c - 2022-08-15 17:47:18 -0700\n\n  Briefly:\n    Work around awk bug in FreeBSD, macOS, etc.\n    Improve tzselect on intercontinental Zones.\n\n  Changes to code\n\n    Work around a bug in onetrueawk that broke commands like\n    'make traditional_tarballs' on FreeBSD, macOS, etc.\n    (Problem reported by Deborah Goldsmith.)\n\n    Add code to tzselect that uses experimental structured comments in\n    zone1970.tab to clarify whether Zones like Africa/Abidjan and\n    Europe/Istanbul cross continent or ocean boundaries.\n    (Inspired by a problem reported by Peter Krefting.)\n\n    Fix bug with 'zic -d /a/b/c' when /a is unwritable but the\n    directory /a/b already exists.\n\n    Remove zoneinfo2tdf.pl, as it was unused and triggered false\n    malware alarms on some email servers.\n\n\nRelease 2022b - 2022-08-10 15:38:32 -0700\n\n  Briefly:\n    Chile's DST is delayed by a week in September 2022.\n    Iran no longer observes DST after 2022.\n    Rename Europe/Kiev to Europe/Kyiv.\n    New zic -R option\n    Vanguard form now uses %z.\n    Finish moving duplicate-since-1970 zones to 'backzone'.\n    New build option PACKRATLIST\n    New tailored_tarballs target, replacing rearguard_tarballs\n\n  Changes to future timestamps\n\n    Chile's 2022 DST start is delayed from September 4 to September 11.\n    (Thanks to Juan Correa.)\n\n    Iran plans to stop observing DST permanently, after it falls back\n    on 2022-09-21.  (Thanks to Ali Mirjamali.)\n\n  Changes to past timestamps\n\n    Finish moving to 'backzone' the location-based zones whose\n    timestamps since 1970 are duplicates; adjust links accordingly.\n    This change ordinarily affects only pre-1970 timestamps, and with\n    the new PACKRATLIST option it does not affect any timestamps.\n    In this round the affected zones are Antarctica/Vostok,\n    Asia/Brunei, Asia/Kuala_Lumpur, Atlantic/Reykjavik,\n    Europe/Amsterdam, Europe/Copenhagen, Europe/Luxembourg,\n    Europe/Monaco, Europe/Oslo, Europe/Stockholm, Indian/Christmas,\n    Indian/Cocos, Indian/Kerguelen, Indian/Mahe, Indian/Reunion,\n    Pacific/Chuuk, Pacific/Funafuti, Pacific/Majuro, Pacific/Pohnpei,\n    Pacific/Wake and Pacific/Wallis, and the affected links are\n    Arctic/Longyearbyen, Atlantic/Jan_Mayen, Iceland, Pacific/Ponape,\n    Pacific/Truk, and Pacific/Yap.\n\n    From fall 1994 through fall 1995, Shanks wrote that Crimea's\n    DST transitions were at 02:00 standard time, not at 00:00.\n    (Thanks to Michael Deckers.)\n\n    Iran adopted standard time in 1935, not 1946.  In 1977 it observed\n    DST from 03-21 23:00 to 10-20 24:00; its 1978 transitions were on\n    03-24 and 08-05, not 03-20 and 10-20; and its spring 1979\n    transition was on 05-27, not 03-21.\n    (Thanks to Roozbeh Pournader and Francis Santoni.)\n\n    Chile's observance of -04 from 1946-08-29 through 1947-03-31 was\n    considered DST, not standard time.  Santiago and environs had moved\n    their clocks back to rejoin the rest of mainland Chile; put this\n    change at the end of 1946-08-28.  (Thanks to Michael Deckers.)\n\n    Some old, small clock transitions have been removed, as people at\n    the time did not change their clocks.  This affects Asia/Hong_Kong\n    in 1904, Asia/Ho_Chi_Minh in 1906, and Europe/Dublin in 1880.\n\n  Changes to zone name\n\n    Rename Europe/Kiev to Europe/Kyiv, as \"Kyiv\" is more common in\n    English now.  Spelling of other names in Ukraine has not yet\n    demonstrably changed in common English practice so for now these\n    names retain old spellings, as in other countries (e.g.,\n    Europe/Prague not \"Praha\", and Europe/Sofia not \"Sofiya\").\n\n  Changes to code\n\n    zic has a new option '-R @N' to output explicit transitions < N.\n    (Need suggested by Almaz Mingaleev.)\n\n    'zic -r @N' no longer outputs bad data when N < first transition.\n    (Problem introduced in 2021d and reported by Peter Krefting.)\n\n    zic now checks its input for NUL bytes and unterminated lines, and\n    now supports input line lengths up to 2048 (not 512) bytes.\n\n    gmtime and related code now use the abbreviation \"UTC\" not \"GMT\".\n    POSIX is being revised to require this.\n\n    When tzset and related functions set vestigial static variables\n    like tzname, they now prefer specified timestamps to unspecified ones.\n    (Problem reported by Almaz Mingaleev.)\n\n    zic no longer complains \"can't determine time zone abbreviation to\n    use just after until time\" when a transition to a new standard\n    time occurs simultaneously with the first DST fallback transition.\n\n  Changes to build procedure\n\n    Source data in vanguard form now uses the %z notation, introduced\n    in release 2015f.  For example, for America/Sao_Paulo vanguard\n    form contains the zone continuation line \"-3:00 Brazil %z\", which\n    is simpler and more reliable than the line \"-3:00 Brazil -03/-02\"\n    used in main and rearguard forms.  The plan is for the main form\n    to use %z eventually; in the meantime maintainers of zi parsers\n    are encouraged to test the parsers on vanguard.zi.\n\n    The Makefile has a new PACKRATLIST option to select a subset of\n    'backzone'.  For example, 'make PACKRATDATA=backzone\n    PACKRATLIST=zone.tab' now generates TZif files identical to those\n    of the global-tz project.\n\n    The Makefile has a new tailored_tarballs target for generating\n    special-purpose tarballs.  It generalizes and replaces the\n    rearguard_tarballs target and related targets and macros, which\n    are now obsolescent.\n\n    'make install' now defaults LOCALTIME to Factory not GMT,\n    which means the default abbreviation is now \"-00\" not \"GMT\".\n\n    Remove the posix_packrat target, marked obsolescent in 2016a.\n\n\nRelease 2022a - 2022-03-15 23:02:01 -0700\n\n  Briefly:\n    Palestine will spring forward on 2022-03-27, not -03-26.\n    zdump -v now outputs better failure indications.\n    Bug fixes for code that reads corrupted TZif data.\n\n  Changes to future timestamps\n\n    Palestine will spring forward on 2022-03-27, not 2022-03-26.\n    (Thanks to Heba Hamad.)  Predict future transitions for first\n    Sunday >= March 25.  Additionally, predict fallbacks to be the first\n    Friday on or after October 23, not October's last Friday, to be more\n    consistent with recent practice.  The first differing fallback\n    prediction is on 2025-10-24, not 2025-10-31.\n\n  Changes to past timestamps\n\n    From 1992 through spring 1996, Ukraine's DST transitions were at\n    02:00 standard time, not at 01:00 UTC.  (Thanks to Alois Treindl.)\n\n    Chile's Santiago Mean Time and its LMT precursor have been adjusted\n    eastward by 1 second to align with past and present law.\n\n  Changes to commentary\n\n    Add several references for Chile's 1946/1947 transitions, some of\n    which only affected portions of the country.\n\n  Changes to code\n\n    Fix bug when mktime gets confused by truncated TZif files with\n    unspecified local time.  (Problem reported by Almaz Mingaleev.)\n\n    Fix bug when 32-bit time_t code reads malformed 64-bit TZif data.\n    (Problem reported by Christos Zoulas.)\n\n    When reading a version 2 or later TZif file, the TZif reader now\n    validates the version 1 header and data block only enough to skip\n    over them, as recommended by RFC 8536 section 4.  Also, the TZif\n    reader no longer mistakenly attempts to parse a version 1 TZIf\n    file header as a TZ string.\n\n    zdump -v now outputs \"(localtime failed)\" and \"(gmtime failed)\"\n    when local time and UT cannot be determined for a timestamp.\n\n  Changes to build procedure\n\n    Distribution tarballs now use standard POSIX.1-1988 ustar format\n    instead of GNU format.  Although the formats are almost identical\n    for these tarballs, ustar headers' magic fields contain \"ustar\"\n    instead of \"ustar \", and their version fields contain \"00\" instead\n    of \" \".  The two formats are planned to diverge more significantly\n    for tzdb releases after 2242-03-16 12:56:31 UTC, when the ustar\n    format becomes obsolete and the tarballs switch to pax format, an\n    extension of ustar.  For details about these formats, please see\n    \"pax - portable archive interchange\", IEEE Std 1003.1-2017,\n    <https://pubs.opengroup.org/onlinepubs/9699919799/utilities/pax.html#tag_20_92_13>.\n\n\nRelease 2021e - 2021-10-21 18:41:00 -0700\n\n  Changes to future timestamps\n\n    Palestine will fall back 10-29 (not 10-30) at 01:00.\n    (Thanks to P Chan and Heba Hemad.)\n\n\nRelease 2021d - 2021-10-15 13:48:18 -0700\n\n  Briefly:\n    Fiji suspends DST for the 2021/2022 season.\n    'zic -r' marks unspecified timestamps with \"-00\".\n\n  Changes to future timestamps\n\n    Fiji will suspend observance of DST for the 2021/2022 season.\n    Assume for now that it will return next year.  (Thanks to Jashneel\n    Kumar and P Chan.)\n\n  Changes to code\n\n    'zic -r' now uses \"-00\" time zone abbreviations for intervals\n    with UT offsets that are unspecified due to -r truncation.\n    This implements a change in draft Internet RFC 8536bis.\n\n\nRelease 2021c - 2021-10-01 14:21:49 -0700\n\n  Briefly:\n    Revert most 2021b changes to 'backward'.\n    Fix 'zic -b fat' bug in pre-1970 32-bit data.\n    Fix two Link line typos.\n    Distribute SECURITY file.\n\n    This release is intended as a bugfix release, to fix compatibility\n    problems and typos reported since 2021b was released.\n\n  Changes to Link directives\n\n    Revert almost all of 2021b's changes to the 'backward' file,\n    by moving Link directives back to where they were in 2021a.\n    Although 'zic' doesn't care which source file contains a Link\n    directive, some downstream uses ran into trouble with the move.\n    (Problem reported by Stephen Colebourne for Joda-Time.)\n\n    Fix typo that linked Atlantic/Jan_Mayen to the wrong location\n    (problem reported by Chris Walton).\n\n    Fix 'backzone' typo that linked America/Virgin to the wrong\n    location (problem reported by Michael Deckers).\n\n  Changes to code\n\n    Fix a bug in 'zic -b fat' that caused old timestamps to be\n    mishandled in 32-bit-only readers (problem reported by Daniel\n    Fischer).\n\n  Changes to documentation\n\n    Distribute the SECURITY file (problem reported by Andreas Radke).\n\n\nRelease 2021b - 2021-09-24 16:23:00 -0700\n\n  Briefly:\n    Jordan now starts DST on February's last Thursday.\n    Samoa no longer observes DST.\n    Merge more location-based Zones whose timestamps agree since 1970.\n    Move some backward-compatibility links to 'backward'.\n    Rename Pacific/Enderbury to Pacific/Kanton.\n    Correct many pre-1993 transitions in Malawi, Portugal, etc.\n    zic now creates each output file or link atomically.\n    zic -L no longer omits the POSIX TZ string in its output.\n    zic fixes for truncation and leap second table expiration.\n    zic now follows POSIX for TZ strings using all-year DST.\n    Fix some localtime crashes and bugs in obscure cases.\n    zdump -v now outputs more-useful boundary cases.\n    tzfile.5 better matches a draft successor to RFC 8536.\n    A new file SECURITY.\n\n    This release is prompted by recent announcements by Jordan and Samoa.\n    It incorporates many other changes that had accumulated since 2021a.\n    However, it omits most proposed changes that merged all Zones\n    agreeing since 1970, as concerns were raised about doing too many of\n    these changes at once.  It does keeps some of these changes in the\n    interest of making tzdb more equitable one step at a time; see\n    \"Merge more location-based Zones\" below.\n\n  Changes to future timestamps\n\n    Jordan now starts DST on February's last Thursday.\n    (Thanks to Steffen Thorsen.)\n\n    Samoa no longer observes DST.  (Thanks to Geoffrey D. Bennett.)\n\n  Changes to zone name\n\n    Rename Pacific/Enderbury to Pacific/Kanton.  When we added\n    Enderbury in 1993, we did not know that it is uninhabited and that\n    Kanton (population two dozen) is the only inhabited location in\n    that timezone.  The old name is now a backward-compatibility link.\n\n  Changes to past timestamps\n\n    Correct many pre-1993 transitions, fixing entries originally\n    derived from Shanks, Whitman, and Mundell.  The fixes include:\n      - Barbados: standard time was introduced in 1911, not 1932; and\n\tDST was observed in 1942-1944\n      - Cook Islands: In 1899 they switched from east to west of GMT,\n\tcelebrating Christmas for two days.  They (and Niue) switched\n\tto standard time in 1952, not 1901.\n      - Guyana: corrected LMT for Georgetown; the introduction of\n\tstandard time in 1911, not 1915; and corrections to 1975 and\n\t1992 transitions\n      - Kanton: uninhabited before 1937-08-31\n      - Niue: only observed -11:20 from 1952 through 1964, then went to\n        -11 instead of -11:30\n      - Portugal: DST was observed in 1950\n      - Tonga: corrected LMT; the introduction of standard time in 1945,\n        not 1901; and corrections to the transition from +12:20 to +13\n        in 1961, not 1941\n    Additional fixes to entries in the 'backzone' file include:\n      - Enderbury: inhabited only 1860/1885 and 1938-03-06/1942-02-09\n      - The Gambia: 1933 and 1942 transitions\n      - Malawi: several 1911 through 1925 transitions\n      - Sierra Leone: several 1913 through 1941 transitions, and DST\n\twas NOT observed in 1957 through 1962\n    (Thanks to P Chan, Michael Deckers, Alexander Krivenyshev and\n    Alois Treindl.)\n\n    Merge more location-based Zones whose timestamps agree since 1970,\n    as pre-1970 timestamps are out of scope.  This is part of a\n    process that has been ongoing since 2013.  This does not affect\n    post-1970 timestamps, and timezone historians who build with 'make\n    PACKRATDATA=backzone' should see no changes to pre-1970 timestamps.\n    When merging, keep the most-populous location's data, and move\n    data for other locations to 'backzone' with a backward\n    link in 'backward'.  For example, move America/Creston data to\n    'backzone' with a link in 'backward' from America/Phoenix because\n    the two timezones' timestamps agree since 1970; this change\n    affects some pre-1968 timestamps in America/Creston because\n    Creston and Phoenix disagreed before 1968.  The affected Zones\n    are Africa/Accra, America/Atikokan, America/Blanc-Sablon,\n    America/Creston, America/Curacao, America/Nassau,\n    America/Port_of_Spain, Antarctica/DumontDUrville, and\n    Antarctica/Syowa.\n\n  Changes to maintenance procedure\n\n    The new file SECURITY covers how to report security-related bugs.\n\n    Several backward-compatibility links have been moved to the\n    'backward' file.  These links, which range from Africa/Addis_Ababa\n    to Pacific/Saipan, are only for compatibility with now-obsolete\n    guidelines suggesting an entry for every ISO 3166 code.\n    The intercontinental convenience links Asia/Istanbul and\n    Europe/Nicosia have also been moved to 'backward'.\n\n  Changes to code\n\n    zic now creates each output file or link atomically,\n    possibly by creating a temporary file and then renaming it.\n    This avoids races where a TZ setting would temporarily stop\n    working while zic was installing a replacement file or link.\n\n    zic -L no longer omits the POSIX TZ string in its output.\n    Starting with 2020a, zic -L truncated its output according to the\n    \"Expires\" directive or \"#expires\" comment in the leapseconds file.\n    The resulting TZif files omitted daylight saving transitions after\n    the leap second table expired, which led to far less accurate\n    predictions of times after the expiry.  Although future timestamps\n    cannot be converted accurately in the presence of leap seconds, it\n    is more accurate to convert near-future timestamps with a few\n    seconds error than with an hour error, so zic -L no longer\n    truncates output in this way.\n\n    Instead, when zic -L is given the \"Expires\" directive, it now\n    outputs the expiration by appending a no-change entry to the leap\n    second table.  Although this should work well with most TZif\n    readers, it does not conform to Internet RFC 8536 and some pickier\n    clients (including tzdb 2017c through 2021a) reject it, so\n    \"Expires\" directives are currently disabled by default.  To enable\n    them, set the EXPIRES_LINE Makefile variable.  If a TZif file uses\n    this new feature it is marked with a new TZif version number 4,\n    a format intended to be documented in a successor to RFC 8536.\n    The old-format \"#expires\" comments are now treated solely as\n    comments and have no effect on the TZif files.\n\n    zic -L LEAPFILE -r @LO no longer generates an invalid TZif file\n    that omits leap second information for the range LO..B when LO\n    falls between two leap seconds A and B.  Instead, it generates a\n    TZif version 4 file that represents the previously missing\n    information.\n\n    The TZif reader now allows the leap second table to begin with a\n    correction other than -1 or +1, and to contain adjacent\n    transitions with equal corrections.  This supports TZif version 4.\n\n    The TZif reader now lets leap seconds occur less than 28 days\n    apart.  This supports possible future TZif extensions.\n\n    Fix bug that caused 'localtime' etc. to crash when TZ was\n    set to a all-year DST string like \"EST5EDT4,0/0,J365/25\" that does\n    not conform to POSIX but does conform to Internet RFC 8536.\n\n    Fix another bug that caused 'localtime' etc. to crash when TZ was\n    set to a POSIX-conforming but unusual TZ string like\n    \"EST5EDT4,0/0,J365/0\", where almost all the year is DST.\n\n    Fix yet another bug that caused 'localtime' etc. to mishandle slim\n    TZif files containing leap seconds after the last explicit\n    transition in the table, or when handling far-future timestamps\n    in slim TZif files lacking leap seconds.\n\n    Fix localtime misbehavior involving positive leap seconds.\n    This change affects only behavior for \"right\" system time,\n    which contains leap seconds, and only if the UT offset is\n    not a multiple of 60 seconds when a positive leap second occurs.\n    (No such timezone exists in tzdb, luckily.)  Without the fix,\n    the timestamp was ambiguous during a positive leap second.\n    With the fix, any seconds occurring after a positive leap second\n    and within the same localtime minute are counted through 60, not\n    through 59; their UT offset (tm_gmtoff) is the same as before.\n    Here is how the fix affects timestamps in a timezone with UT\n    offset +01:23:45 (5025 seconds) and with a positive leap second at\n    1972-06-30 23:59:60 UTC (78796800):\n\n\ttime_t    without the fix      with the fix\n\t78796800  1972-07-01 01:23:45  1972-07-01 01:23:45 (leap second)\n\t78796801  1972-07-01 01:23:45  1972-07-01 01:23:46\n\t...\n\t78796815  1972-07-01 01:23:59  1972-07-01 01:23:60\n\t78796816  1972-07-01 01:24:00  1972-07-01 01:24:00\n\n    Fix an unlikely bug that caused 'localtime' etc. to misbehave if\n    civil time changes a few seconds before time_t wraps around, when\n    leap seconds are enabled.\n\n    Fix bug in zic -r; in some cases, the dummy time type after the\n    last time transition disagreed with the TZ string, contrary to\n    Internet RFC 8563 section 3.3.\n\n    Fix a bug with 'zic -r @X' when X is a negative leap second that\n    has a nonnegative correction.  Without the fix, the output file\n    was truncated so that X appeared to be a positive leap second.\n    Fix a similar, even less likely bug when truncating at a positive\n    leap second that has a nonpositive correction.\n\n    zic -r now reports an error if given rolling leap seconds, as this\n    usage has never generally worked and is evidently unused.\n\n    zic now generates a POSIX-conforming TZ string for TZif files\n    where all-year DST is predicted for the indefinite future.\n    For example, for all-year Eastern Daylight Time, zic now generates\n    \"XXX3EDT4,0/0,J365/23\" where it previously generated\n    \"EST5EDT,0/0,J365/25\" or \"\".  (Thanks to Michael Deckers for\n    noting the possibility of POSIX conformance.)\n\n    zic.c no longer requires sys/wait.h (thanks to spazmodius for\n    noting it wasn't needed).\n\n    When reading slim TZif files, zdump no longer mishandles leap\n    seconds on the rare platforms where time_t counts leap seconds,\n    fixing a bug introduced in 2014g.\n\n    zdump -v now outputs timestamps at boundaries of what localtime\n    and gmtime can represent, instead of the less useful timestamps\n    one day after the minimum and one day before the maximum.\n    (Thanks to Arthur David Olson for prototype code, and to Manuela\n    Friedrich for debugging help.)\n\n    zdump's -c and -t options are now consistently inclusive for the\n    lower time bound and exclusive for the upper.  Formerly they were\n    inconsistent.  (Confusion noted by Martin Burnicki.)\n\n  Changes to build procedure\n\n    You can now compile with -DHAVE_MALLOC_ERRNO=0 to port to\n    non-POSIX hosts where malloc doesn't set errno.\n    (Problem reported by Jan Engelhardt.)\n\n  Changes to documentation\n\n    tzfile.5 better matches a draft successor to RFC 8536\n    <https://datatracker.ietf.org/doc/draft-murchison-rfc8536bis/01/>.\n\n\nRelease 2021a - 2021-01-24 10:54:57 -0800\n\n  Changes to future timestamps\n\n    South Sudan changes from +03 to +02 on 2021-02-01 at 00:00.\n    (Thanks to Steffen Thorsen.)\n\n\nRelease 2020f - 2020-12-29 00:17:46 -0800\n\n  Change to build procedure\n\n    'make rearguard_tarballs' no longer generates a bad rearguard.zi,\n    fixing a 2020e bug.  (Problem reported by Deborah Goldsmith.)\n\n\nRelease 2020e - 2020-12-22 15:14:34 -0800\n\n  Briefly:\n    Volgograd switches to Moscow time on 2020-12-27 at 02:00.\n\n  Changes to future timestamps\n\n    Volgograd changes time zone from +04 to +03 on 2020-12-27 at 02:00.\n    (Thanks to Alexander Krivenyshev and Stepan Golosunov.)\n\n  Changes to past timestamps\n\n    Correct many pre-1986 transitions, fixing entries originally\n    derived from Shanks.  The fixes include:\n      - Australia: several 1917 through 1971 transitions\n      - The Bahamas: several 1941 through 1945 transitions\n      - Bermuda: several 1917 through 1956 transitions\n      - Belize: several 1942 through 1968 transitions\n      - Ghana: several 1915 through 1956 transitions\n      - Israel and Palestine: several 1940 through 1985 transitions\n      - Kenya and adjacent: several 1908 through 1960 transitions\n      - Nigeria and adjacent: correcting LMT in Lagos, and several 1905\n        through 1919 transitions\n      - Seychelles: the introduction of standard time in 1907, not 1906\n      - Vanuatu: DST in 1973-1974, and a corrected 1984 transition\n    (Thanks to P Chan.)\n\n    Because of the Australia change, Australia/Currie (King Island) is\n    no longer needed, as it is identical to Australia/Hobart for all\n    timestamps since 1970 and was therefore created by mistake.\n    Australia/Currie has been moved to the 'backward' file and its\n    corrected data moved to the 'backzone' file.\n\n  Changes to past time zone abbreviations and DST flags\n\n    To better match legislation in Turks and Caicos, the 2015 shift to\n    year-round observance of -04 is now modeled as AST throughout before\n    returning to Eastern Time with US DST in 2018, rather than as\n    maintaining EDT until 2015-11-01.  (Thanks to P Chan.)\n\n  Changes to documentation\n\n    The zic man page now documents zic's coalescing of transitions\n    when a zone falls back just before DST springs forward.\n\n\nRelease 2020d - 2020-10-21 11:24:13 -0700\n\n  Briefly:\n    Palestine ends DST earlier than predicted, on 2020-10-24.\n\n  Changes to past and future timestamps\n\n    Palestine ends DST on 2020-10-24 at 01:00, instead of 2020-10-31\n    as previously predicted (thanks to Sharef Mustafa.)  Its\n    2019-10-26 fall-back was at 00:00, not 01:00 (thanks to Steffen\n    Thorsen.)  Its 2015-10-23 transition was at 01:00 not 00:00, and\n    its spring 2020 transition was on March 28 at 00:00, not March 27\n    (thanks to Pierre Cashon.)  This affects Asia/Gaza and\n    Asia/Hebron.  Assume future spring and fall transitions will be on\n    the Saturday preceding the last Sunday of March and October,\n    respectively.\n\n\nRelease 2020c - 2020-10-16 11:15:53 -0700\n\n  Briefly:\n    Fiji starts DST later than usual, on 2020-12-20.\n\n  Changes to future timestamps\n\n    Fiji will start DST on 2020-12-20, instead of 2020-11-08 as\n    previously predicted.  DST will still end on 2021-01-17.\n    (Thanks to Raymond Kumar and Alan Mintz.)  Assume for now that\n    the later-than-usual start date is a one-time departure from the\n    recent pattern.\n\n  Changes to build procedure\n\n    Rearguard tarballs now contain an empty file pacificnew.\n    Some older downstream software expects this file to exist.\n    (Problem reported by Mike Cullinan.)\n\n\nRelease 2020b - 2020-10-06 18:35:04 -0700\n\n  Briefly:\n    Revised predictions for Morocco's changes starting in 2023.\n    Canada's Yukon changes to -07 on 2020-11-01, not 2020-03-08.\n    Macquarie Island has stayed in sync with Tasmania since 2011.\n    Casey, Antarctica is at +08 in winter and +11 in summer.\n    zic no longer supports -y, nor the TYPE field of Rules.\n\n  Changes to future timestamps\n\n    Morocco's spring-forward after Ramadan is now predicted to occur\n    no sooner than two days after Ramadan, instead of one day.\n    (Thanks to Milamber.)  The first altered prediction is for 2023,\n    now predicted to spring-forward on April 30 instead of April 23.\n\n  Changes to past and future timestamps\n\n   Casey Station, Antarctica has been using +08 in winter and +11 in\n   summer since 2018.  The most recent transition from +08 to +11 was\n   2020-10-04 00:01.  Also, Macquarie Island has been staying in\n   sync with Tasmania since 2011.  (Thanks to Steffen Thorsen.)\n\n  Changes to past and future time zone abbreviations and DST flags\n\n    Canada's Yukon, represented by America/Whitehorse and\n    America/Dawson, changes its time zone rules from -08/-07 to\n    permanent -07 on 2020-11-01, not on 2020-03-08 as 2020a had it.\n    This change affects only the time zone abbreviation (MST vs PDT)\n    and daylight saving flag for the period between the two dates.\n    (Thanks to Andrew G. Smith.)\n\n  Changes to past timestamps\n\n    Correct several transitions for Hungary for 1918/1983.\n    For example, the 1983-09-25 fall-back was at 01:00, not 03:00.\n    (Thanks to Géza Nyáry.)  Also, the 1890 transition to standard\n    time was on 11-01, not 10-01 (thanks to Michael Deckers).\n\n    The 1891 French transition was on March 16, not March 15.  The\n    1911-03-11 French transition was at midnight, not a minute later.\n    Monaco's transitions were on 1892-06-01 and 1911-03-29, not\n    1891-03-15 and 1911-03-11.  (Thanks to Michael Deckers.)\n\n  Changes to code\n\n    Support for zic's long-obsolete '-y YEARISTYPE' option has been\n    removed and, with it, so has support for the TYPE field in Rule\n    lines, which is now reserved for compatibility with earlier zic.\n    These features were previously deprecated in release 2015f.\n    (Thanks to Tim Parenti.)\n\n    zic now defaults to '-b slim' instead of to '-b fat'.\n\n    zic's new '-l -' and '-p -' options uninstall any existing\n    localtime and posixrules files, respectively.\n\n    The undocumented and ineffective tzsetwall function has been\n    removed.\n\n  Changes to build procedure\n\n    The Makefile now defaults POSIXRULES to '-', so the posixrules\n    feature (obsolete as of 2019b) is no longer installed by default.\n\n  Changes to documentation and commentary\n\n    The long-obsolete files pacificnew, systemv, and yearistype.sh have\n    been removed from the distribution.  (Thanks to Tim Parenti.)\n\n\nRelease 2020a - 2020-04-23 16:03:47 -0700\n\n  Briefly:\n    Morocco springs forward on 2020-05-31, not 2020-05-24.\n    Canada's Yukon advanced to -07 year-round on 2020-03-08.\n    America/Nuuk renamed from America/Godthab.\n    zic now supports expiration dates for leap second lists.\n\n  Changes to future timestamps\n\n    Morocco's second spring-forward transition in 2020 will be May 31,\n    not May 24 as predicted earlier.  (Thanks to Semlali Naoufal.)\n    Adjust future-year predictions to use the first Sunday after the\n    day after Ramadan, not the first Sunday after Ramadan.\n\n    Canada's Yukon, represented by America/Whitehorse and\n    America/Dawson, advanced to -07 year-round, beginning with its\n    spring-forward transition on 2020-03-08, and will not fall back on\n    2020-11-01.  Although a government press release calls this\n    \"permanent Pacific Daylight Saving Time\", we prefer MST for\n    consistency with nearby Dawson Creek, Creston, and Fort Nelson.\n    (Thanks to Tim Parenti.)\n\n  Changes to past timestamps\n\n    Shanghai observed DST in 1919.  (Thanks to Phake Nick.)\n\n  Changes to timezone identifiers\n\n    To reflect current usage in English better, America/Godthab has\n    been renamed to America/Nuuk.  A backwards-compatibility link\n    remains for the old name.\n\n  Changes to code\n\n    localtime.c no longer mishandles timestamps after the last\n    transition in a TZif file with leap seconds and with daylight\n    saving time transitions projected into the indefinite future.\n    For example, with TZ='America/Los_Angeles' with leap seconds,\n    zdump formerly reported a DST transition on 2038-03-14\n    from 01:59:32.999... to 02:59:33 instead of the correct transition\n    from 01:59:59.999... to 03:00:00.\n\n    zic -L now supports an Expires line in the leapseconds file, and\n    truncates the TZif output accordingly.  This propagates leap\n    second expiration information into the TZif file, and avoids the\n    abovementioned localtime.c bug as well as similar bugs present in\n    many client implementations.  If no Expires line is present, zic\n    -L instead truncates the TZif output based on the #expires comment\n    present in leapseconds files distributed by tzdb 2018f and later;\n    however, this usage is obsolescent.  For now, the distributed\n    leapseconds file has an Expires line that is commented out, so\n    that the file can be fed to older versions of zic which ignore the\n    commented-out line.  Future tzdb distributions are planned to\n    contain a leapseconds file with an Expires line.\n\n    The configuration macros HAVE_TZNAME and USG_COMPAT should now be\n    set to 1 if the system library supports the feature, and 2 if not.\n    As before, these macros are nonzero if tzcode should support the\n    feature, zero otherwise.\n\n    The configuration macro ALTZONE now has the same values with the\n    same meaning as HAVE_TZNAME and USG_COMPAT.\n\n    The code's defense against CRLF in leap-seconds.list is now\n    portable to POSIX awk.  (Problem reported by Deborah Goldsmith.)\n\n    Although the undocumented tzsetwall function is not changed in\n    this release, it is now deprecated in preparation for removal in\n    future releases.  Due to POSIX requirements, tzsetwall has not\n    worked for some time.  Any code that uses it should instead use\n    tzalloc(NULL) or, if portability trumps thread-safety, should\n    unset the TZ environment variable.\n\n  Changes to commentary\n\n    The Îles-de-la-Madeleine and the Listuguj reserve are noted as\n    following America/Halifax, and comments about Yukon's \"south\" and\n    \"north\" have been corrected to say \"east\" and \"west\".  (Thanks to\n    Jeffery Nichols.)\n\n\nRelease 2019c - 2019-09-11 08:59:48 -0700\n\n  Briefly:\n    Fiji observes DST from 2019-11-10 to 2020-01-12.\n    Norfolk Island starts observing Australian-style DST.\n\n  Changes to future timestamps\n\n    Fiji's next DST transitions will be 2019-11-10 and 2020-01-12\n    instead of 2019-11-03 and 2020-01-19.  (Thanks to Raymond Kumar.)\n    Adjust future guesses accordingly.\n\n    Norfolk Island will observe Australian-style DST starting in\n    spring 2019.  The first transition is on 2019-10-06.  (Thanks to\n    Kyle Czech and Michael Deckers.)\n\n  Changes to past timestamps\n\n    Many corrections to time in Turkey from 1940 through 1985.\n    (Thanks to Oya Vulaş via Alois Treindl, and to Kıvanç Yazan.)\n\n    The Norfolk Island 1975-03-02 transition was at 02:00 standard\n    time, not 02:00 DST.  (Thanks to Michael Deckers.)\n\n    South Korea observed DST from 1948 through 1951.  Although this\n    info was supposed to appear in release 2014j, a typo inadvertently\n    suppressed the change.  (Thanks to Alois Treindl.)\n\n    Detroit observed DST in 1967 and 1968 following the US DST rules,\n    except that its 1967 DST began on June 14 at 00:01.  (Thanks to\n    Alois Treindl for pointing out that the old data entries were\n    probably wrong.)\n\n    Fix several errors in pre-1970 transitions in Perry County, IN.\n    (Thanks to Alois Treindl for pointing out the 1967/9 errors.)\n\n    Edmonton did not observe DST in 1967 or 1969.  In 1946 Vancouver\n    ended DST on 09-29 not 10-13, and Vienna ended DST on 10-07 not\n    10-06.  In 1945 Königsberg (now Kaliningrad) switched from +01/+02\n    to +02/+03 on 04-10 not 01-01, and its +02/+03 is abbreviated\n    EET/EEST, not CET/CEST.  (Thanks to Alois Treindl.)  In 1946\n    Königsberg switched to +03 on 04-07 not 01-01.\n\n    In 1946 Louisville switched from CST to CDT on 04-28 at 00:01, not\n    01-01 at 00:00.  (Thanks to Alois Treindl and Michael Deckers.)\n    Also, it switched from CST to CDT on 1950-04-30, not 1947-04-27.\n\n    The 1892-05-01 transition in Brussels was at 00:17:30, not at noon.\n    (Thanks to Michael Deckers.)\n\n  Changes to past time zone abbreviations and DST flags\n\n    Hong Kong Winter Time, observed from 1941-10-01 to 1941-12-25,\n    is now flagged as DST and is abbreviated HKWT not HKT.\n\n  Changes to code\n\n    leapseconds.awk now relies only on its input data, rather than\n    also relying on its comments.  (Inspired by code from Dennis\n    Ferguson and Chris Woodbury.)\n\n    The code now defends against CRLFs in leap-seconds.list.\n    (Thanks to Brian Inglis and Chris Woodbury.)\n\n  Changes to documentation and commentary\n\n    theory.html discusses leap seconds.  (Thanks to Steve Summit.)\n\n    Nashville's newspapers dueled about the time of day in the 1950s.\n    (Thanks to John Seigenthaler.)\n\n    Liechtenstein observed Swiss DST in 1941/2.\n    (Thanks to Alois Treindl.)\n\n\nRelease 2019b - 2019-07-01 00:09:53 -0700\n\n  Briefly:\n    Brazil no longer observes DST.\n    'zic -b slim' outputs smaller TZif files; please try it out.\n    Palestine's 2019 spring-forward transition was on 03-29, not 03-30.\n\n  Changes to future timestamps\n\n    Brazil has canceled DST and will stay on standard time indefinitely.\n    (Thanks to Steffen Thorsen, Marcus Diniz, and Daniel Soares de\n    Oliveira.)\n\n    Predictions for Morocco now go through 2087 instead of 2037, to\n    work around a problem on newlib when using TZif files output by\n    zic 2019a or earlier.  (Problem reported by David Gauchard.)\n\n  Changes to past and future timestamps\n\n    Palestine's 2019 spring transition was 03-29 at 00:00, not 03-30\n    at 01:00.  (Thanks to Sharef Mustafa and Even Scharning.)  Guess\n    future transitions to be March's last Friday at 00:00.\n\n  Changes to past timestamps\n\n    Hong Kong's 1941-06-15 spring-forward transition was at 03:00, not\n    03:30.  Its 1945 transition from JST to HKT was on 11-18 at 02:00,\n    not 09-15 at 00:00.  In 1946 its spring-forward transition was on\n    04-21 at 00:00, not the previous day at 03:30.  From 1946 through\n    1952 its fall-back transitions occurred at 04:30, not at 03:30.\n    In 1947 its fall-back transition was on 11-30, not 12-30.\n    (Thanks to P Chan.)\n\n  Changes to past time zone abbreviations\n\n    Italy's 1866 transition to Rome Mean Time was on December 12, not\n    September 22.  This affects only the time zone abbreviation for\n    Europe/Rome between those dates.  (Thanks to Stephen Trainor and\n    Luigi Rosa.)\n\n  Changes affecting metadata only\n\n    Add info about the Crimea situation in zone1970.tab and zone.tab.\n    (Problem reported by Serhii Demediuk.)\n\n  Changes to code\n\n    zic's new -b option supports a way to control data bloat and to\n    test for year-2038 bugs in software that reads TZif files.\n    'zic -b fat' and 'zic -b slim' generate larger and smaller output;\n    for example, changing from fat to slim shrinks the Europe/London\n    file from 3648 to 1599 bytes, saving about 56%.  Fat and slim\n    files represent the same set of timestamps and use the same TZif\n    format as documented in tzfile(5) and in Internet RFC 8536.\n    Fat format attempts to work around bugs or incompatibilities in\n    older software, notably software that mishandles 64-bit TZif data\n    or uses obsolete TZ strings like \"EET-2EEST\" that lack DST rules.\n    Slim format is more efficient and does not work around 64-bit bugs\n    or obsolete TZ strings.  Currently zic defaults to fat format\n    unless you compile with -DZIC_BLOAT_DEFAULT=\\\"slim\\\"; this\n    out-of-the-box default is intended to change in future releases\n    as the buggy software often mishandles timestamps anyway.\n\n    zic no longer treats a set of rules ending in 2037 specially.\n    Previously, zic assumed that such a ruleset meant that future\n    timestamps could not be predicted, and therefore omitted a\n    POSIX-like TZ string in the TZif output.  The old behavior is no\n    longer needed for current tzdata, and caused problems with newlib\n    when used with older tzdata (reported by David Gauchard).\n\n    zic no longer generates some artifact transitions.  For example,\n    Europe/London no longer has a no-op transition in January 1996.\n\n  Changes to build procedure\n\n    tzdata.zi now assumes zic 2017c or later.  This shrinks tzdata.zi\n    by a percent or so.\n\n  Changes to documentation and commentary\n\n    The Makefile now documents the POSIXRULES macro as being obsolete,\n    and similarly, zic's -p POSIXRULES option is now documented as\n    being obsolete.  Although the POSIXRULES feature still exists and\n    works as before, in practice it is rarely used for its intended\n    purpose, and it does not work either in the default reference\n    implementation (for timestamps after 2037) or in common\n    implementations such as GNU/Linux (for contemporary timestamps).\n    Since POSIXRULES was designed primarily as a temporary transition\n    facility for System V platforms that died off decades ago, it is\n    being decommissioned rather than institutionalized.\n\n    New info on Bonin Islands and Marcus (thanks to Wakaba and Phake Nick).\n\n\nRelease 2019a - 2019-03-25 22:01:33 -0700\n\n  Briefly:\n    Palestine \"springs forward\" on 2019-03-30 instead of 2019-03-23.\n    Metlakatla \"fell back\" to rejoin Alaska Time on 2019-01-20 at 02:00.\n\n  Changes to past and future timestamps\n\n    Palestine will not start DST until 2019-03-30, instead of 2019-03-23 as\n    previously predicted.  Adjust our prediction by guessing that spring\n    transitions will be between 24 and 30 March, which matches recent practice\n    since 2016.  (Thanks to Even Scharning and Tim Parenti.)\n\n    Metlakatla ended its observance of Pacific standard time,\n    rejoining Alaska Time, on 2019-01-20 at 02:00.  (Thanks to Ryan\n    Stanley and Tim Parenti.)\n\n  Changes to past timestamps\n\n    Israel observed DST in 1980 (08-02/09-13) and 1984 (05-05/08-25).\n    (Thanks to Alois Treindl and Isaac Starkman.)\n\n  Changes to time zone abbreviations\n\n    Etc/UCT is now a backward-compatibility link to Etc/UTC, instead\n    of being a separate zone that generates the abbreviation \"UCT\",\n    which nowadays is typically a typo.  (Problem reported by Isiah\n    Meadows.)\n\n  Changes to code\n\n    zic now has an -r option to limit the time range of output data.\n    For example, 'zic -r @1000000000' limits the output data to\n    timestamps starting 1000000000 seconds after the Epoch.\n    This helps shrink output size and can be useful for applications\n    not needing the full timestamp history, such as TZDIST truncation;\n    see Internet RFC 8536 section 5.1.  (Inspired by a feature request\n    from Christopher Wong, helped along by bug reports from Wong and\n    from Tim Parenti.)\n\n  Changes to documentation\n\n    Mention Internet RFC 8536 (February 2019), which documents TZif.\n\n    tz-link.html now cites tzdata-meta\n    <https://tzdata-meta.timtimeonline.com/>.\n\n\nRelease 2018i - 2018-12-30 11:05:43 -0800\n\n  Briefly:\n    São Tomé and Príncipe switches from +01 to +00 on 2019-01-01.\n\n  Changes to future timestamps\n\n    Due to a change in government, São Tomé and Príncipe switches back\n    from +01 to +00 on 2019-01-01 at 02:00.  (Thanks to Vadim\n    Nasardinov and Michael Deckers.)\n\n\nRelease 2018h - 2018-12-23 17:59:32 -0800\n\n  Briefly:\n    Qyzylorda, Kazakhstan moved from +06 to +05 on 2018-12-21.\n    New zone Asia/Qostanay because Qostanay, Kazakhstan didn't move.\n    Metlakatla, Alaska observes PST this winter only.\n    Guess Morocco will continue to adjust clocks around Ramadan.\n    Add predictions for Iran from 2038 through 2090.\n\n  Changes to future timestamps\n\n    Guess that Morocco will continue to fall back just before and\n    spring forward just after Ramadan, the practice since 2012.\n    (Thanks to Maamar Abdelkader.)  This means Morocco will observe\n    negative DST during Ramadan in main and vanguard formats, and in\n    rearguard format it stays in the +00 timezone and observes\n    ordinary DST in all months other than Ramadan.  As before, extend\n    this guesswork to the year 2037.  As a consequence, Morocco is\n    scheduled to observe three DST transitions in some Gregorian years\n    (e.g., 2033) due to the mismatch between the Gregorian and Islamic\n    calendars.\n\n    The table of exact transitions for Iranian DST has been extended.\n    It formerly cut off before the year 2038 in a nod to 32-bit time_t.\n    It now cuts off before 2091 as there is doubt about how the Persian\n    calendar will treat 2091.  This change predicts DST transitions in\n    2038-9, 2042-3, and 2046-7 to occur one day later than previously\n    predicted.  As before, post-cutoff transitions are approximated.\n\n  Changes to past and future timestamps\n\n    Qyzylorda (aka Kyzylorda) oblast in Kazakhstan moved from +06 to\n    +05 on 2018-12-21.  This is a zone split as Qostanay (aka\n    Kostanay) did not switch, so create a zone Asia/Qostanay.\n\n    Metlakatla moved from Alaska to Pacific standard time on 2018-11-04.\n    It did not change clocks that day and remains on -08 this winter.\n    (Thanks to Ryan Stanley.)  It will revert to the usual Alaska\n    rules next spring, so this change affects only timestamps\n    from 2018-11-04 through 2019-03-10.\n\n  Change to past timestamps\n\n    Kwajalein's 1993-08-20 transition from -12 to +12 was at 24:00,\n    not 00:00.  I transcribed the time incorrectly from Shanks.\n    (Thanks to Phake Nick.)\n\n    Nauru's 1979 transition was on 02-10 at 02:00, not 05-01 at 00:00.\n    (Thanks to Phake Nick.)\n\n    Guam observed DST irregularly from 1959 through 1977.\n    (Thanks to Phake Nick.)\n\n    Hong Kong observed DST in 1941 starting 06-15 (not 04-01), then on\n    10-01 changed standard time to +08:30 (not +08).  Its transition\n    back to +08 after WWII was on 1945-09-15, not the previous day.\n    Its 1904-10-30 change took effect at 01:00 +08 (not 00:00 LMT).\n    (Thanks to Phake Nick, Steve Allen, and Joseph Myers.)  Also,\n    its 1952 fallback was on 11-02 (not 10-25).\n\n    This release contains many changes to timestamps before 1946 due\n    to Japanese possession or occupation of Pacific/Chuuk,\n    Pacific/Guam, Pacific/Kosrae, Pacific/Kwajalein, Pacific/Majuro,\n    Pacific/Nauru, Pacific/Palau, and Pacific/Pohnpei.\n    (Thanks to Phake Nick.)\n\n    Assume that the Spanish East Indies was like the Philippines and\n    observed American time until the end of 1844.  This affects\n    Pacific/Chuuk, Pacific/Kosrae, Pacific/Palau, and Pacific/Pohnpei.\n\n  Changes to past tm_isdst flags\n\n    For the recent Morocco change, the tm_isdst flag should be 1 from\n    2018-10-27 00:00 to 2018-10-28 03:00.  (Thanks to Michael Deckers.)\n    Give a URL to the official decree.  (Thanks to Matt Johnson.)\n\n\nRelease 2018g - 2018-10-26 22:22:45 -0700\n\n  Briefly:\n    Morocco switches to permanent +01 on 2018-10-28.\n\n  Changes to future timestamps\n\n    Morocco switches from +00/+01 to permanent +01 effective 2018-10-28,\n    so its clocks will not fall back as previously scheduled.\n    (Thanks to Mohamed Essedik Najd and Brian Inglis.)\n\n  Changes to code\n\n    When generating TZif files with leap seconds, zic no longer uses a\n    format that trips up older 32-bit clients, fixing a bug introduced\n    in 2018f.  (Reported by Daniel Fischer.)  Also, the zic workaround\n    for QTBUG-53071 now also works for TZif files with leap seconds.\n\n    The translator to rearguard format now rewrites the line\n    \"Rule Japan 1948 1951 - Sep Sat>=8 25:00 0 S\" to\n    \"Rule Japan 1948 1951 - Sep Sun>=9  1:00 0 S\".\n    This caters to zic before 2007 and to Oracle TZUpdater 2.2.0\n    and earlier.  (Reported by Christos Zoulas.)\n\n  Changes to past time zone abbreviations\n\n    Change HDT to HWT/HPT for WWII-era abbreviations in Hawaii.\n    This reverts to 2011h, as the abbreviation change in 2011i was\n    likely inadvertent.\n\n  Changes to documentation\n\n    tzfile.5 has new sections on interoperability issues.\n\n\nRelease 2018f - 2018-10-18 00:14:18 -0700\n\n  Briefly:\n  Volgograd moves from +03 to +04 on 2018-10-28.\n  Fiji ends DST 2019-01-13, not 2019-01-20.\n  Most of Chile changes DST dates, effective 2019-04-06.\n\n  Changes to future timestamps\n\n    Volgograd moves from +03 to +04 on 2018-10-28 at 02:00.\n    (Thanks to Alexander Fetisov and Stepan Golosunov.)\n\n    Fiji ends DST 2019-01-13 instead of the 2019-01-20 previously\n    predicted.  (Thanks to Raymond Kumar.)  Adjust future predictions\n    accordingly.\n\n    Most of Chile will end DST on the first Saturday in April at 24:00 mainland\n    time, and resume DST on the first Saturday in September at 24:00 mainland\n    time.  The changes are effective from 2019-04-06, and do not affect the\n    Magallanes region modeled by America/Punta_Arenas.  (Thanks to Juan Correa\n    and Tim Parenti.)  Adjust future predictions accordingly.\n\n  Changes to past timestamps\n\n    The 2018-05-05 North Korea 30-minute time zone change took place\n    at 23:30 the previous day, not at 00:00 that day.\n\n    China's 1988 spring-forward transition was on April 17, not\n    April 10.  Its DST transitions in 1986/91 were at 02:00, not 00:00.\n    (Thanks to P Chan.)\n\n    Fix several issues for Macau before 1992.  Macau's pre-1904 LMT\n    was off by 10 s.  Macau switched to +08 in 1904 not 1912, and\n    temporarily switched to +09/+10 during World War II.  Macau\n    observed DST in 1942/79, not 1961/80, and there were several\n    errors for transition times and dates.  (Thanks to P Chan.)\n\n    The 1948-1951 fallback transitions in Japan were at 25:00 on\n    September's second Saturday, not at 24:00.  (Thanks to Phake Nick.)\n    zic turns this into 01:00 on the day after September's second\n    Saturday, which is the best that POSIX or C platforms can do.\n\n    Incorporate 1940-1949 Asia/Shanghai DST transitions from a 2014\n    paper by Li Yu, replacing more-questionable data from Shanks.\n\n  Changes to time zone abbreviations\n\n    Use \"PST\" and \"PDT\" for Philippine time.  (Thanks to Paul Goyette.)\n\n  Changes to code\n\n    zic now always generates TZif files where time type 0 is used for\n    timestamps before the first transition.  This simplifies the\n    reading of TZif files and should not affect behavior of existing\n    TZif readers because the same set of time types is used; only\n    their internal indexes may have changed.  This affects only the\n    legacy zones EST5EDT, CST6CDT, MST7MDT, PST8PDT, CET, MET, and\n    EET, which previously used nonzero types for these timestamps.\n\n    Because of the type 0 change, zic no longer outputs a dummy\n    transition at time -2**59 (before the Big Bang), as clients should\n    no longer need this to handle historical timestamps correctly.\n    This reverts a change introduced in 2013d and shrinks most TZif\n    files by a few bytes.\n\n    zic now supports negative time-of-day in Rule and Leap lines, e.g.,\n    \"Rule X min max - Apr lastSun -6:00 1:00 -\" means the transition\n    occurs at 18:00 on the Saturday before the last Sunday in April.\n    This behavior was documented in 2018a but the code did not\n    entirely match the documentation.\n\n    localtime.c no longer requires at least one time type in TZif\n    files that lack transitions or have a POSIX-style TZ string.  This\n    future-proofs the code against possible future extensions to the\n    format that would allow TZif files with POSIX-style TZ strings and\n    without transitions or time types.\n\n    A read-access subscript error in localtime.c has been fixed.\n    It could occur only in TZif files with timecnt == 0, something that\n    does not happen in practice now but could happen in future versions.\n\n    localtime.c no longer ignores TZif POSIX-style TZ strings that\n    specify only standard time.  Instead, these TZ strings now\n    override the default time type for timestamps after the last\n    transition (or for all timestamps if there are no transitions),\n    just as DST strings specifying DST have always done.\n\n    leapseconds.awk now outputs \"#updated\" and \"#expires\" comments,\n    and supports leap seconds at the ends of months other than June\n    and December.  (Inspired by suggestions from Chris Woodbury.)\n\n  Changes to documentation\n\n    New restrictions: A Rule name must start with a character that\n    is neither an ASCII digit nor \"-\" nor \"+\", and an unquoted name\n    should not use characters in the set \"!$%&'()*,/:;<=>?@[\\]^`{|}~\".\n    The latter restriction makes room for future extensions (a\n    possibility noted by Tom Lane).\n\n    tzfile.5 now documents what time types apply before the first and\n    after the last transition, if any.\n\n    Documentation now uses the spelling \"timezone\" for a TZ setting\n    that determines timestamp history, and \"time zone\" for a\n    geographic region currently sharing the same standard time.\n\n    The name \"TZif\" is now used for the tz binary data format.\n\n    tz-link.htm now mentions the A0 TimeZone Migration utilities.\n    (Thanks to Aldrin Martoq for the link.)\n\n  Changes to build procedure\n\n    New 'make' target 'rearguard_tarballs' to build the rearguard\n    tarball only.  This is a convenience on platforms that lack lzip\n    if you want to build the rearguard tarball.  (Problem reported by\n    Deborah Goldsmith.)\n\n    tzdata.zi is now more stable from release to release.  (Problem\n    noted by Tom Lane.)  It is also a bit shorter.\n\n    tzdata.zi now can contain comment lines documenting configuration\n    information, such as which data format was selected, which input\n    files were used, and how leap seconds are treated.  (Problems\n    noted by Lester Caine and Brian Inglis.)  If the Makefile defaults\n    are used these comment lines are absent, for backward\n    compatibility.  A redistributor intending to alter its copy of the\n    files should also append \"-LABEL\" to the 'version' file's first\n    line, where \"LABEL\" identifies the redistributor's change.\n\n\nRelease 2018e - 2018-05-01 23:42:51 -0700\n\n  Briefly:\n\n    North Korea switches back to +09 on 2018-05-05.\n    The main format uses negative DST again, for Ireland etc.\n    'make tarballs' now also builds a rearguard tarball.\n    New 's' and 'd' suffixes in SAVE columns of Rule and Zone lines.\n\n  Changes to past and future timestamps\n\n    North Korea switches back from +0830 to +09 on 2018-05-05.\n    (Thanks to Kang Seonghoon, Arthur David Olson, Seo Sanghyeon,\n    and Tim Parenti.)\n\n    Bring back the negative-DST changes of 2018a, except be more\n    compatible with data parsers that do not support negative DST.\n    Also, this now affects historical timestamps in Namibia and the\n    former Czechoslovakia, not just Ireland.  The main format now uses\n    negative DST to model timestamps in Europe/Dublin (from 1971 on),\n    Europe/Prague (1946/7), and Africa/Windhoek (1994/2017).  This\n    does not affect UT offsets, only time zone abbreviations and the\n    tm_isdst flag.  Also, this does not affect rearguard or vanguard\n    formats; effectively the main format now uses vanguard instead of\n    rearguard format.  Data parsers that do not support negative DST\n    can still use data from the rearguard tarball described below.\n\n  Changes to build procedure\n\n    The command 'make tarballs' now also builds the tarball\n    tzdataVERSION-rearguard.tar.gz, which is like tzdataVERSION.tar.gz\n    except that it uses rearguard format intended for trailing-edge\n    data parsers.\n\n  Changes to data format and to code\n\n    The SAVE column of Rule and Zone lines can now have an 's' or 'd'\n    suffix, which specifies whether the adjusted time is standard time\n    or daylight saving time.  If no suffix is given, daylight saving\n    time is used if and only if the SAVE column is nonzero; this is\n    the longstanding behavior.  Although this new feature is not used\n    in tzdata, it could be used to specify the legal time in Namibia\n    1994-2017, as opposed to the popular time (see below).\n\n  Changes to past timestamps\n\n    From 1994 through 2017 Namibia observed DST in winter, not summer.\n    That is, it used negative DST, as Ireland still does.  This change\n    does not affect UTC offsets; it affects only the tm_isdst flag and\n    the abbreviation used during summer, which is now CAT, not WAST.\n    Although (as noted by Michael Deckers) summer and winter time were\n    both simply called \"standard time\" in Namibian law, in common\n    practice winter time was considered to be DST (as noted by Stephen\n    Colebourne).  The full effect of this change is only in vanguard\n    and main format; in rearguard format, the tm_isdst flag is still\n    zero in winter and nonzero in summer.\n\n    In 1946/7 Czechoslovakia also observed negative DST in winter.\n    The full effect of this change is only in vanguard and main\n    formats; in rearguard format, it is modeled as plain GMT without\n    daylight saving.  Also, the dates of some 1944/5 DST transitions\n    in Czechoslovakia have been changed.\n\n\nRelease 2018d - 2018-03-22 07:05:46 -0700\n\n  Briefly:\n\n  Palestine starts DST a week earlier in 2018.\n  Add support for vanguard and rearguard data consumers.\n  Add subsecond precision to source data format, though not to data.\n\n  Changes to future timestamps\n\n    In 2018, Palestine starts DST on March 24, not March 31.\n    Adjust future predictions accordingly.  (Thanks to Sharef Mustafa.)\n\n  Changes to past and future timestamps\n\n    Casey Station in Antarctica changed from +11 to +08 on 2018-03-11\n    at 04:00.  (Thanks to Steffen Thorsen.)\n\n  Changes to past timestamps\n\n    Historical transitions for Uruguay, represented by\n    America/Montevideo, have been updated per official legal documents,\n    replacing previous data mainly originating from the inventions of\n    Shanks & Pottenger.  This has resulted in adjustments ranging from\n    30 to 90 minutes in either direction over at least two dozen\n    distinct periods ranging from one day to several years in length.\n    A mere handful of pre-1991 transitions are unaffected; data since\n    then has come from more reliable contemporaneous reporting.  These\n    changes affect various timestamps in 1920-1923, 1936, 1939,\n    1942-1943, 1959, 1966-1970, 1972, 1974-1980, and 1988-1990.\n    Additionally, Uruguay's pre-standard-time UT offset has been\n    adjusted westward by 7 seconds, from UT-03:44:44 to UT-03:44:51, to\n    match the location of the Observatory of the National Meteorological\n    Institute in Montevideo.\n    (Thanks to Jeremie Bonjour, Tim Parenti, and Michael Deckers.)\n\n    East Kiribati skipped New Year's Eve 1994, not New Year's Day 1995.\n    (Thanks to Kerry Shetline.)\n\n    Fix the 1912-01-01 transition for Portugal and its colonies.\n    This transition was at 00:00 according to the new UT offset, not\n    according to the old one.  Also assume that Cape Verde switched on\n    the same date as the rest, not in 1907.  This affects\n    Africa/Bissau, Africa/Sao_Tome, Asia/Macau, Atlantic/Azores,\n    Atlantic/Cape_Verde, Atlantic/Madeira, and Europe/Lisbon.\n    (Thanks to Michael Deckers.)\n\n    Fix an off-by-1 error for pre-1913 timestamps in Jamaica and in\n    Turks & Caicos.\n\n  Changes to past time zone abbreviations\n\n    MMT took effect in Uruguay from 1908-06-10, not 1898-06-28.  There\n    is no clock change associated with the transition.\n\n  Changes to build procedure\n\n    The new DATAFORM macro in the Makefile lets the installer choose\n    among three source data formats.  The idea is to lessen downstream\n    disruption when data formats are improved.\n\n    * DATAFORM=vanguard installs from the latest, bleeding-edge\n      format.  DATAFORM=main (the default) installs from the format\n      used in the 'africa' etc. files.  DATAFORM=rearguard installs\n      from a trailing-edge format.  Eventually, elements of today's\n      vanguard format should move to the main format, and similarly\n      the main format's features should eventually move to the\n      rearguard format.\n\n    * In the current version, the main and rearguard formats are\n      identical and match that of 2018c, so this change does not\n      affect default behavior.  The vanguard format currently contains\n      one feature not in the main format: negative SAVE values.  This\n      improves support for Ireland, which uses Irish Standard Time\n      (IST, UTC+01) in summer and GMT (UTC) in winter.  tzcode has\n      supported negative SAVE values for decades, and this feature\n      should move to the main format soon.  However, it will not move\n      to the rearguard format for quite some time because some\n      downstream parsers do not support it.\n\n    * The build procedure constructs three files vanguard.zi, main.zi,\n      and rearguard.zi, one for each format.  Although the files\n      represent essentially the same data, they may have minor\n      discrepancies that users are not likely to notice.  The files\n      are intended for downstream data consumers and are not\n      installed.  Zoneinfo parsers that do not support negative SAVE values\n      should start using rearguard.zi, so that they will be unaffected\n      when the negative-DST feature moves from vanguard to main.\n      Bleeding-edge Zoneinfo parsers that support the new features\n      already can use vanguard.zi; in this respect, current tzcode is\n      bleeding-edge.\n\n    The Makefile should now be safe for parallelized builds, and 'make\n    -j to2050new.tzs' is now much faster on a multiprocessor host\n    with GNU Make.\n\n    When built with -DSUPPRESS_TZDIR, the tzcode library no longer\n    prepends TZDIR/ to file names that do not begin with '/'.  This is\n    not recommended for general use, due to its security implications.\n    (From a suggestion by Manuela Friedrich.)\n\n  Changes to code\n\n    zic now accepts subsecond precision in expressions like\n    00:19:32.13, which is approximately the legal time of the\n    Netherlands from 1835 to 1937.  However, because it is\n    questionable whether the few recorded uses of non-integer offsets\n    had subsecond precision in practice, there are no plans for tzdata\n    to use this feature.  (Thanks to Steve Allen for pointing out\n    the limitations of historical data in this area.)\n\n    The code is a bit more portable to MS-Windows.  Installers can\n    compile with -DRESERVE_STD_EXT_IDS on MS-Windows platforms that\n    reserve identifiers like 'localtime'.  (Thanks to Manuela\n    Friedrich.)\n\n  Changes to documentation and commentary\n\n    theory.html now outlines tzdb's extensions to POSIX's model for\n    civil time, and has a section \"POSIX features no longer needed\"\n    that lists POSIX API components that are now vestigial.\n    (From suggestions by Steve Summit.)  It also better distinguishes\n    time zones from tz regions.  (From a suggestion by Guy Harris.)\n\n    Commentary is now more consistent about using the phrase \"daylight\n    saving time\", to match the C name tm_isdst.  Daylight saving time\n    need not occur in summer, and need not have a positive offset from\n    standard time.\n\n    Commentary about historical transitions in Uruguay has been expanded\n    with links to many relevant legal documents.\n    (Thanks to Tim Parenti.)\n\n    Commentary now uses some non-ASCII characters with Unicode value\n    less than U+0100, as they can be useful and should work even with\n    older editors such as XEmacs.\n\n\nRelease 2018c - 2018-01-22 23:00:44 -0800\n\n  Briefly:\n  Revert Irish changes that relied on negative SAVE values.\n\n  Changes to tm_isdst\n\n    Revert the 2018a change to Europe/Dublin.  As before, this change\n    does not affect UT offsets or abbreviations; it affects only\n    whether timestamps are considered to be standard time or\n    daylight-saving time, as expressed in the tm_isdst flag of C's\n    struct tm type.  This reversion is intended to be a temporary\n    workaround for problems discovered with downstream uses of\n    releases 2018a and 2018b, which implemented Irish time by using\n    negative SAVE values in the Eire rules of the 'europe' file.\n    Although negative SAVE values have been part of tzcode for many\n    years and are supported by many platforms, they were not\n    documented before 2018a and ICU and OpenJDK do not currently\n    support them.  A mechanism to export data to platforms lacking\n    support for negative DST is planned to be developed before the\n    change is reapplied.  (Problems reported by Deborah Goldsmith and\n    Stephen Colebourne.)\n\n  Changes to past timestamps\n\n    Japanese DST transitions (1948-1951) were Sundays at 00:00, not\n    Saturdays or Sundays at 02:00.  (Thanks to Takayuki Nikai.)\n\n  Changes to build procedure\n\n    The build procedure now works around mawk 1.3.3's lack of support\n    for character class expressions.  (Problem reported by Ohyama.)\n\n\nRelease 2018b - 2018-01-17 23:24:48 -0800\n\n  Briefly:\n  Fix a packaging problem in tz2018a, which was missing 'pacificnew'.\n\n  Changes to build procedure\n\n    The distribution now contains the file 'pacificnew' again.\n    This file was inadvertently omitted in the 2018a distribution.\n    (Problem reported by Matias Fonzo.)\n\n\nRelease 2018a - 2018-01-12 22:29:21 -0800\n\n  Briefly:\n  São Tomé and Príncipe switched from +00 to +01.\n  Brazil's DST will now start on November's first Sunday.\n  Ireland's standard time is now in the summer, not the winter.\n  Use Debian-style installation locations, instead of 4.3BSD-style.\n  New zic option -t.\n\n  Changes to past and future timestamps\n\n    São Tomé and Príncipe switched from +00 to +01 on 2018-01-01 at\n    01:00.  (Thanks to Steffen Thorsen and Michael Deckers.)\n\n  Changes to future timestamps\n\n    Starting in 2018 southern Brazil will begin DST on November's\n    first Sunday instead of October's third Sunday.  (Thanks to\n    Steffen Thorsen.)\n\n  Changes to past timestamps\n\n    A discrepancy of 4 s in timestamps before 1931 in South Sudan has\n    been corrected.  The 'backzone' and 'zone.tab' files did not agree\n    with the 'africa' and 'zone1970.tab' files.  (Problem reported by\n    Michael Deckers.)\n\n    The abbreviation invented for Bolivia Summer Time (1931-2) is now\n    BST instead of BOST, to be more consistent with the convention\n    used for Latvian Summer Time (1918-9) and for British Summer Time.\n\n  Changes to tm_isdst\n\n    Change Europe/Dublin so that it observes Irish Standard Time (UT\n    +01) in summer and GMT (as negative daylight-saving) in winter,\n    instead of observing standard time (GMT) in winter and Irish\n    Summer Time (UT +01) in summer.  This change does not affect UT\n    offsets or abbreviations; it affects only whether timestamps are\n    considered to be standard time or daylight-saving time, as\n    expressed in the tm_isdst flag of C's struct tm type.\n    (Discrepancy noted by Derick Rethans.)\n\n  Changes to build procedure\n\n    The default installation locations have been changed to mostly\n    match Debian circa 2017, instead of being designed as an add-on to\n    4.3BSD circa 1986.  This affects the Makefile macros TOPDIR,\n    TZDIR, MANDIR, and LIBDIR.  New Makefile macros TZDEFAULT, USRDIR,\n    USRSHAREDIR, BINDIR, ZDUMPDIR, and ZICDIR let installers tailor\n    locations more precisely.  (This responds to suggestions from\n    Brian Inglis and from Steve Summit.)\n\n    The default installation procedure no longer creates the\n    backward-compatibility link US/Pacific-New, which causes\n    confusion during user setup (e.g., see Debian bug 815200).\n    Use 'make BACKWARD=\"backward pacificnew\"' to create the link\n    anyway, for now.  Eventually we plan to remove the link entirely.\n\n    tzdata.zi now contains a version-number comment.\n    (Suggested by Tom Lane.)\n\n    The Makefile now quotes values like BACKWARD more carefully when\n    passing them to the shell.  (Problem reported by Zefram.)\n\n    Builders no longer need to specify -DHAVE_SNPRINTF on platforms\n    that have snprintf and use pre-C99 compilers.  (Problem reported\n    by Jon Skeet.)\n\n  Changes to code\n\n    zic has a new option -t FILE that specifies the location of the\n    file that determines local time when TZ is unset.  The default for\n    this location can be configured via the new TZDEFAULT makefile\n    macro, which defaults to /etc/localtime.\n\n    Diagnostics and commentary now distinguish UT from UTC more\n    carefully; see theory.html for more information about UT vs UTC.\n\n    zic has been ported to GCC 8's -Wstringop-truncation option.\n    (Problem reported by Martin Sebor.)\n\n  Changes to documentation and commentary\n\n    The zic man page now documents the longstanding behavior that\n    times and years can be out of the usual range, with negative times\n    counting backwards from midnight and with year 0 preceding year 1.\n    (Problem reported by Michael Deckers.)\n\n    The theory.html file now mentions the POSIX limit of six chars\n    per abbreviation, and lists alphabetic abbreviations used.\n\n    The files tz-art.htm and tz-link.htm have been renamed to\n    tz-art.html and tz-link.html, respectively, for consistency with\n    other file names and to simplify web server configuration.\n\n\nRelease 2017c - 2017-10-20 14:49:34 -0700\n\n  Briefly:\n  Northern Cyprus switches from +03 to +02/+03 on 2017-10-29.\n  Fiji ends DST 2018-01-14, not 2018-01-21.\n  Namibia switches from +01/+02 to +02 on 2018-04-01.\n  Sudan switches from +03 to +02 on 2017-11-01.\n  Tonga likely switches from +13/+14 to +13 on 2017-11-05.\n  Turks & Caicos switches from -04 to -05/-04 on 2018-11-04.\n  A new file tzdata.zi now holds a small text copy of all data.\n  The zic input format has been regularized slightly.\n\n  Changes to future timestamps\n\n    Northern Cyprus has decided to resume EU rules starting\n    2017-10-29, thus reinstituting winter time.\n\n    Fiji ends DST 2018-01-14 instead of the 2018-01-21 previously\n    predicted.  (Thanks to Dominic Fok.)  Adjust future predictions\n    accordingly.\n\n    Namibia will switch from +01 with DST to +02 all year on\n    2017-09-03 at 02:00.  This affects UT offsets starting 2018-04-01\n    at 02:00.  (Thanks to Steffen Thorsen.)\n\n    Sudan will switch from +03 to +02 on 2017-11-01.  (Thanks to Ahmed\n    Atyya and Yahia Abdalla.)  South Sudan is not switching, so\n    Africa/Juba is no longer a link to Africa/Khartoum.\n\n    Tonga has likely ended its experiment with DST, and will not\n    adjust its clocks on 2017-11-05.  Although Tonga has not announced\n    whether it will continue to observe DST, the IATA is assuming that\n    it will not.  (Thanks to David Wade.)\n\n    Turks & Caicos will switch from -04 all year to -05 with US DST on\n    2018-03-11 at 03:00.  This affects UT offsets starting 2018-11-04\n    at 02:00.  (Thanks to Steffen Thorsen.)\n\n  Changes to past timestamps\n\n    Namibia switched from +02 to +01 on 1994-03-21, not 1994-04-03.\n    (Thanks to Arthur David Olson.)\n\n    Detroit did not observe DST in 1967.\n\n    Use railway time for Asia/Kolkata before 1941, by switching to\n    Madras local time (UT +052110) in 1870, then to IST (UT +0530) in\n    1906.  Also, treat 1941-2's +0630 as DST, like 1942-5.\n\n    Europe/Dublin's 1946 and 1947 fallback transitions occurred at\n    02:00 standard time, not 02:00 DST.  (Thanks to Michael Deckers.)\n\n    Pacific/Apia and Pacific/Pago_Pago switched from Antipodean to\n    American time in 1892, not 1879.  (Thanks to Michael Deckers.)\n\n    Adjust the 1867 transition in Alaska to better reflect the\n    historical record, by changing it to occur on 1867-10-18 at 15:30\n    Sitka time rather than at the start of 1867-10-17 local time.\n    Although strictly speaking this is accurate only for Sitka,\n    the rest of Alaska's blanks need to be filled in somehow.\n\n    Fix off-by-one errors in UT offsets for Adak and Nome before 1867.\n    (Thanks to Michael Deckers.)\n\n    Add 7 s to the UT offset in Asia/Yangon before 1920.\n\n  Changes to zone names\n\n    Remove Canada/East-Saskatchewan from the 'backward' file, as it\n    exceeded the 14-character limit and was an unused misnomer anyway.\n\n  Changes to build procedure\n\n    To support applications that prefer to read time zone data in text\n    form, two zic input files tzdata.zi and leapseconds are now\n    installed by default.  The commands 'zic tzdata.zi' and 'zic -L\n    leapseconds tzdata.zi' can reproduce the tzdata binary files\n    without and with leap seconds, respectively.  To prevent these two\n    new files from being installed, use 'make TZDATA_TEXT=', and to\n    suppress leap seconds from the tzdata text installation, use 'make\n    TZDATA_TEXT=tzdata.zi'.\n\n    'make BACKWARD=' now suppresses backward-compatibility names\n    like 'US/Pacific' that are defined in the 'backward' and\n    'pacificnew' files.\n\n    'make check' now works on systems that lack a UTF-8 locale,\n    or that lack the nsgmls program.  Set UTF8_LOCALE to configure\n    the name of a UTF-8 locale, if you have one.\n\n    Y2K runtime checks are no longer enabled by default.  Add\n    -DDEPRECATE_TWO_DIGIT_YEARS to CFLAGS to enable them, instead of\n    adding -DNO_RUN_TIME_WARNINGS_ABOUT_YEAR_2000_PROBLEMS_THANK_YOU\n    to disable them.  (New name suggested by Brian Inglis.)\n\n    The build procedure for zdump now works on AIX 7.1.\n    (Problem reported by Kees Dekker.)\n\n  Changes to code\n\n    zic and the reference runtime now reject multiple leap seconds\n    within 28 days of each other, or leap seconds before the Epoch.\n    As a result, support for double leap seconds, which was\n    obsolescent and undocumented, has been removed.  Double leap\n    seconds were an error in the C89 standard; they have never existed\n    in civil timekeeping.  (Thanks to Robert Elz and Bradley White for\n    noticing glitches in the code that uncovered this problem.)\n\n    zic now warns about use of the obsolescent and undocumented -y\n    option, and about use of the obsolescent TYPE field of Rule lines.\n\n    zic now allows unambiguous abbreviations like \"Sa\" and \"Su\" for\n    weekdays; formerly it rejected them due to a bug.  Conversely, zic\n    no longer considers non-prefixes to be abbreviations; for example,\n    it no longer accepts \"lF\" as an abbreviation for \"lastFriday\".\n    Also, zic warns about the undocumented usage with a \"last-\"\n    prefix, e.g., \"last-Fri\".\n\n    Similarly, zic now accepts the unambiguous abbreviation \"L\" for\n    \"Link\" in ordinary context and for \"Leap\" in leap-second context.\n    Conversely, zic no longer accepts non-prefixes such as \"La\" as\n    abbreviations for words like \"Leap\".\n\n    zic no longer accepts leap second lines in ordinary input, or\n    ordinary lines in leap second input.  Formerly, zic sometimes\n    warned about this undocumented usage and handled it incorrectly.\n\n    The new macro HAVE_TZNAME governs whether the tzname external\n    variable is exported, instead of USG_COMPAT.  USG_COMPAT now\n    governs only the external variables \"timezone\" and \"daylight\".\n    This change is needed because the three variables are not in the\n    same category: although POSIX requires tzname, it specifies the\n    other two variables as optional.  Also, USG_COMPAT is now 1 or 0:\n    if not defined, the code attempts to guess it from other macros.\n\n    localtime.c and difftime.c no longer require stdio.h, and .c files\n    other than zic.c no longer require sys/wait.h.\n\n    zdump.c no longer assumes snprintf.  (Reported by Jonathan Leffler.)\n\n    Calculation of time_t extrema works around a bug in GCC 4.8.4\n    (Reported by Stan Shebs and Joseph Myers.)\n\n    zic.c no longer mistranslates formats of line numbers in non-English\n    locales.  (Problem reported by Benno Schulenberg.)\n\n    Several minor changes have been made to the code to make it a\n    bit easier to port to MS-Windows and Solaris.  (Thanks to Kees\n    Dekker for reporting the problems.)\n\n  Changes to documentation and commentary\n\n    The two new files 'theory.html' and 'calendars' contain the\n    contents of the removed file 'Theory'.  The goal is to document\n    tzdb theory more accessibly.\n\n    The zic man page now documents abbreviation rules.\n\n    tz-link.htm now covers how to apply tzdata changes to clients.\n    (Thanks to Jorge Fábregas for the AIX link.)  It also mentions MySQL.\n\n    The leap-seconds.list URL has been updated to something that is\n    more reliable for tzdb.  (Thanks to Tim Parenti and Brian Inglis.)\n\nRelease 2017b - 2017-03-17 07:30:38 -0700\n\n  Briefly: Haiti has resumed DST.\n\n  Changes to past and future timestamps\n\n    Haiti resumed observance of DST in 2017.  (Thanks to Steffen Thorsen.)\n\n  Changes to past timestamps\n\n    Liberia changed from -004430 to +00 on 1972-01-07, not 1972-05-01.\n\n    Use \"MMT\" to abbreviate Liberia's time zone before 1972, as \"-004430\"\n    is one byte over the POSIX limit.  (Problem reported by Derick Rethans.)\n\n  Changes to code\n\n    The reference localtime implementation now falls back on the\n    current US daylight-saving transition rules rather than the\n    1987-2006 rules.  This fallback occurs only when (1) the TZ\n    environment variable has a value like \"AST4ADT\" that asks\n    for daylight saving time but does not specify the rules, (2) there\n    is no file by that name, and (3) the TZDEFRULES file cannot be\n    loaded.  (Thanks to Tom Lane.)\n\n\nRelease 2017a - 2017-02-28 00:05:36 -0800\n\n  Briefly: Southern Chile moves from -04/-03 to -03, and Mongolia\n  discontinues DST.\n\n  Changes to future timestamps\n\n    Mongolia no longer observes DST.  (Thanks to Ganbold Tsagaankhuu.)\n\n    Chile's Region of Magallanes moves from -04/-03 to -03 year-round.\n    Its clocks diverge from America/Santiago starting 2017-05-13 at\n    23:00, hiving off a new zone America/Punta_Arenas.  Although the\n    Chilean government says this change expires in May 2019, for now\n    assume it's permanent.  (Thanks to Juan Correa and Deborah\n    Goldsmith.)  This also affects Antarctica/Palmer.\n\n  Changes to past timestamps\n\n    Fix many entries for historical timestamps for Europe/Madrid\n    before 1979, to agree with tables compiled by Pere Planesas of the\n    National Astronomical Observatory of Spain.  As a side effect,\n    this changes some timestamps for Africa/Ceuta before 1929, which\n    are probably guesswork anyway.  (Thanks to Steve Allen and\n    Pierpaolo Bernardi for the heads-ups, and to Michael Deckers for\n    correcting the 1901 transition.)\n\n    Ecuador observed DST from 1992-11-28 to 1993-02-05.\n    (Thanks to Alois Treindl.)\n\n    Asia/Atyrau and Asia/Oral were at +03 (not +04) before 1930-06-21.\n    (Thanks to Stepan Golosunov.)\n\n  Changes to past and future time zone abbreviations\n\n    Switch to numeric time zone abbreviations for South America, as\n    part of the ongoing project of removing invented abbreviations.\n    This avoids the need to invent an abbreviation for the new Chilean\n    new zone.  Similarly, switch from invented to numeric time zone\n    abbreviations for Afghanistan, American Samoa, the Azores,\n    Bangladesh, Bhutan, the British Indian Ocean Territory, Brunei,\n    Cape Verde, Chatham Is, Christmas I, Cocos (Keeling) Is, Cook Is,\n    Dubai, East Timor, Eucla, Fiji, French Polynesia, Greenland,\n    Indochina, Iran, Iraq, Kiribati, Lord Howe, Macquarie, Malaysia,\n    the Maldives, Marshall Is, Mauritius, Micronesia, Mongolia,\n    Myanmar, Nauru, Nepal, New Caledonia, Niue, Norfolk I, Palau,\n    Papua New Guinea, the Philippines, Pitcairn, Qatar, Réunion, St\n    Pierre & Miquelon, Samoa, Saudi Arabia, Seychelles, Singapore,\n    Solomon Is, Tokelau, Tuvalu, Wake, Vanuatu, Wallis & Futuna, and\n    Xinjiang; for 20-minute daylight saving time in Ghana before 1943;\n    for half-hour daylight saving time in Belize before 1944 and in\n    the Dominican Republic before 1975; and for Canary Islands before\n    1946, for Guinea-Bissau before 1975, for Iceland before 1969, for\n    Indian Summer Time before 1942, for Indonesia before around 1964,\n    for Kenya before 1960, for Liberia before 1973, for Madeira before\n    1967, for Namibia before 1943, for the Netherlands in 1937-9, for\n    Pakistan before 1971, for Western Sahara before 1977, and for\n    Zaporozhye in 1880-1924.\n\n    For Alaska time from 1900 through 1967, instead of \"CAT\" use the\n    abbreviation \"AST\", the abbreviation commonly used at the time\n    (Atlantic Standard Time had not been standardized yet).  Use \"AWT\"\n    and \"APT\" instead of the invented abbreviations \"CAWT\" and \"CAPT\".\n\n    Use \"CST\" and \"CDT\" instead of invented abbreviations for Macau\n    before 1999 and Taiwan before 1938, and use \"JST\" instead of the\n    invented abbreviation \"JCST\" for Japan and Korea before 1938.\n\n  Change to database entry category\n\n    Move the Pacific/Johnston link from 'australasia' to 'backward',\n    since Johnston is now uninhabited.\n\n  Changes to code\n\n    zic no longer mishandles some transitions in January 2038 when it\n    attempts to work around Qt bug 53071.  This fixes a bug affecting\n    Pacific/Tongatapu that was introduced in zic 2016e.  localtime.c\n    now contains a workaround, useful when loading a file generated by\n    a buggy zic.  (Problem and localtime.c fix reported by Bradley\n    White.)\n\n    zdump -i now outputs non-hour numeric time zone abbreviations\n    without a colon, e.g., \"+0530\" rather than \"+05:30\".  This agrees\n    with zic %z and with common practice, and simplifies auditing of\n    zdump output.\n\n    zdump is now buildable again with -DUSE_LTZ=0.\n    (Problem reported by Joseph Myers.)\n\n    zdump.c now always includes private.h, to avoid code duplication\n    with private.h.  (Problem reported by Kees Dekker.)\n\n    localtime.c no longer mishandles early or late timestamps\n    when TZ is set to a POSIX-style string that specifies DST.\n    (Problem reported by Kees Dekker.)\n\n    date and strftime now cause %z to generate \"-0000\" instead of\n    \"+0000\" when the UT offset is zero and the time zone abbreviation\n    begins with \"-\".\n\n  Changes to documentation and commentary\n\n    The 'Theory' file now better documents choice of historical time\n    zone abbreviations.  (Problems reported by Michael Deckers.)\n\n    tz-link.htm now covers leap smearing, which is popular in clouds.\n\n\nRelease 2016j - 2016-11-22 23:17:13 -0800\n\n  Briefly: Saratov, Russia moves from +03 to +04 on 2016-12-04.\n\n  Changes to future timestamps\n\n    Saratov, Russia switches from +03 to +04 on 2016-12-04 at 02:00.\n    This hives off a new zone Europe/Saratov from Europe/Volgograd.\n    (Thanks to Yuri Konotopov and Stepan Golosunov.)\n\n  Changes to past timestamps\n\n    The new zone Asia/Atyrau for Atyraū Region, Kazakhstan, is like\n    Asia/Aqtau except it switched from +05/+06 to +04/+05 in spring\n    1999, not fall 1994.  (Thanks to Stepan Golosunov.)\n\n  Changes to past time zone abbreviations\n\n    Asia/Gaza and Asia/Hebron now use \"EEST\", not \"EET\", to denote\n    summer time before 1948.  The old use of \"EET\" was a typo.\n\n  Changes to code\n\n    zic no longer mishandles file systems that lack hard links, fixing\n    bugs introduced in 2016g.  (Problems reported by Tom Lane.)\n    Also, when the destination already contains symbolic links, zic\n    should now work better on systems where the 'link' system call\n    does not follow symbolic links.\n\n  Changes to documentation and commentary\n\n    tz-link.htm now documents the relationship between release version\n    numbers and development-repository commit tags.  (Suggested by\n    Paul Koning.)\n\n    The 'Theory' file now documents UT.\n\n    iso3166.tab now accents \"Curaçao\", and commentary now mentions\n    the names \"Cabo Verde\" and \"Czechia\".  (Thanks to Jiří Boháč.)\n\n\nRelease 2016i - 2016-11-01 23:19:52 -0700\n\n  Briefly: Cyprus split into two time zones on 2016-10-30, and Tonga\n  reintroduces DST on 2016-11-06.\n\n  Changes to future timestamps\n\n    Pacific/Tongatapu begins DST on 2016-11-06 at 02:00, ending on\n    2017-01-15 at 03:00.  Assume future observances in Tonga will be\n    from the first Sunday in November through the third Sunday in\n    January, like Fiji.  (Thanks to Pulu ʻAnau.)  Switch to numeric\n    time zone abbreviations for this zone.\n\n  Changes to past and future timestamps\n\n    Northern Cyprus is now +03 year round, causing a split in Cyprus\n    time zones starting 2016-10-30 at 04:00.  This creates a zone\n    Asia/Famagusta.  (Thanks to Even Scharning and Matt Johnson.)\n\n    Antarctica/Casey switched from +08 to +11 on 2016-10-22.\n    (Thanks to Steffen Thorsen.)\n\n  Changes to past timestamps\n\n    Several corrections were made for pre-1975 timestamps in Italy.\n    These affect Europe/Malta, Europe/Rome, Europe/San_Marino, and\n    Europe/Vatican.\n\n    First, the 1893-11-01 00:00 transition in Italy used the new UT\n    offset (+01), not the old (+00:49:56).  (Thanks to Michael\n    Deckers.)\n\n    Second, rules for daylight saving in Italy were changed to agree\n    with Italy's National Institute of Metrological Research (INRiM)\n    except for 1944, as follows (thanks to Pierpaolo Bernardi, Brian\n    Inglis, and Michael Deckers):\n\n      The 1916-06-03 transition was at 24:00, not 00:00.\n\n      The 1916-10-01, 1919-10-05, and 1920-09-19 transitions were at\n      00:00, not 01:00.\n\n      The 1917-09-30 and 1918-10-06 transitions were at 24:00, not\n      01:00.\n\n      The 1944-09-17 transition was at 03:00, not 01:00.  This\n      particular change is taken from Italian law as INRiM's table,\n      (which says 02:00) appears to have a typo here.  Also, keep the\n      1944-04-03 transition for Europe/Rome, as Rome was controlled by\n      Germany then.\n\n      The 1967-1970 and 1972-1974 fallback transitions were at 01:00,\n      not 00:00.\n\n  Changes to code\n\n    The code should now be buildable on AmigaOS merely by setting the\n    appropriate Makefile variables.  (From a patch by Carsten Larsen.)\n\n\nRelease 2016h - 2016-10-19 23:17:57 -0700\n\n  Changes to future timestamps\n\n    Asia/Gaza and Asia/Hebron end DST on 2016-10-29 at 01:00, not\n    2016-10-21 at 00:00.  (Thanks to Sharef Mustafa.)  Predict that\n    future fall transitions will be on the last Saturday of October\n    at 01:00, which is consistent with predicted spring transitions\n    on the last Saturday of March.  (Thanks to Tim Parenti.)\n\n  Changes to past timestamps\n\n    In Turkey, transitions in 1986-1990 were at 01:00 standard time\n    not at 02:00, and the spring 1994 transition was on March 20, not\n    March 27.  (Thanks to Kıvanç Yazan.)\n\n  Changes to past and future time zone abbreviations\n\n    Asia/Colombo now uses numeric time zone abbreviations like \"+0530\"\n    instead of alphabetic ones like \"IST\" and \"LKT\".  Various\n    English-language sources use \"IST\", \"LKT\" and \"SLST\", with no\n    working consensus.  (Usage of \"SLST\" mentioned by Sadika\n    Sumanapala.)\n\n  Changes to code\n\n    zic no longer mishandles relativizing file names when creating\n    symbolic links like /etc/localtime, when these symbolic links\n    are outside the usual directory hierarchy.  This fixes a bug\n    introduced in 2016g.  (Problem reported by Andreas Stieger.)\n\n  Changes to build procedure\n\n    New rules 'traditional_tarballs' and 'traditional_signatures' for\n    building just the traditional-format distribution.  (Requested by\n    Deborah Goldsmith.)\n\n    The file 'version' is now put into the tzdata tarball too.\n    (Requested by Howard Hinnant.)\n\n  Changes to documentation and commentary\n\n    The 'Theory' file now has a section on interface stability.\n    (Requested by Paul Koning.)  It also mentions features like\n    tm_zone and localtime_rz that have long been supported by the\n    reference code.\n\n    tz-link.htm has improved coverage of time zone boundaries suitable\n    for geolocation.  (Thanks to heads-ups from Evan Siroky and Matt\n    Johnson.)\n\n    The US commentary now mentions Allen and the \"day of two noons\".\n\n    The Fiji commentary mentions the government's 2016-10-03 press\n    release.  (Thanks to Raymond Kumar.)\n\n\nRelease 2016g - 2016-09-13 08:56:38 -0700\n\n  Changes to future timestamps\n\n    Turkey switched from EET/EEST (+02/+03) to permanent +03,\n    effective 2016-09-07.  (Thanks to Burak AYDIN.)  Use \"+03\" rather\n    than an invented abbreviation for the new time.\n\n    New leap second 2016-12-31 23:59:60 UTC as per IERS Bulletin C 52.\n    (Thanks to Tim Parenti.)\n\n  Changes to past timestamps\n\n    For America/Los_Angeles, spring-forward transition times have been\n    corrected from 02:00 to 02:01 in 1948, and from 02:00 to 01:00 in\n    1950-1966.\n\n    For zones using Soviet time on 1919-07-01, transitions to UT-based\n    time were at 00:00 UT, not at 02:00 local time.  The affected\n    zones are Europe/Kirov, Europe/Moscow, Europe/Samara, and\n    Europe/Ulyanovsk.  (Thanks to Alexander Belopolsky.)\n\n  Changes to past and future time zone abbreviations\n\n    The Factory zone now uses the time zone abbreviation -00 instead\n    of a long English-language string, as -00 is now the normal way to\n    represent an undefined time zone.\n\n    Several zones in Antarctica and the former Soviet Union, along\n    with zones intended for ships at sea that cannot use POSIX TZ\n    strings, now use numeric time zone abbreviations instead of\n    invented or obsolete alphanumeric abbreviations.  The affected\n    zones are Antarctica/Casey, Antarctica/Davis,\n    Antarctica/DumontDUrville, Antarctica/Mawson, Antarctica/Rothera,\n    Antarctica/Syowa, Antarctica/Troll, Antarctica/Vostok,\n    Asia/Anadyr, Asia/Ashgabat, Asia/Baku, Asia/Bishkek, Asia/Chita,\n    Asia/Dushanbe, Asia/Irkutsk, Asia/Kamchatka, Asia/Khandyga,\n    Asia/Krasnoyarsk, Asia/Magadan, Asia/Omsk, Asia/Sakhalin,\n    Asia/Samarkand, Asia/Srednekolymsk, Asia/Tashkent, Asia/Tbilisi,\n    Asia/Ust-Nera, Asia/Vladivostok, Asia/Yakutsk, Asia/Yekaterinburg,\n    Asia/Yerevan, Etc/GMT-14, Etc/GMT-13, Etc/GMT-12, Etc/GMT-11,\n    Etc/GMT-10, Etc/GMT-9, Etc/GMT-8, Etc/GMT-7, Etc/GMT-6, Etc/GMT-5,\n    Etc/GMT-4, Etc/GMT-3, Etc/GMT-2, Etc/GMT-1, Etc/GMT+1, Etc/GMT+2,\n    Etc/GMT+3, Etc/GMT+4, Etc/GMT+5, Etc/GMT+6, Etc/GMT+7, Etc/GMT+8,\n    Etc/GMT+9, Etc/GMT+10, Etc/GMT+11, Etc/GMT+12, Europe/Kaliningrad,\n    Europe/Minsk, Europe/Samara, Europe/Volgograd, and\n    Indian/Kerguelen.  For Europe/Moscow the invented abbreviation MSM\n    was replaced by +05, whereas MSK and MSD were kept as they are not\n    our invention and are widely used.\n\n  Changes to zone names\n\n    Rename Asia/Rangoon to Asia/Yangon, with a backward compatibility link.\n    (Thanks to David Massoud.)\n\n  Changes to code\n\n    zic no longer generates binary files containing POSIX TZ-like\n    strings that disagree with the local time type after the last\n    explicit transition in the data.  This fixes a bug with\n    Africa/Casablanca and Africa/El_Aaiun in some year-2037 timestamps\n    on the reference platform.  (Thanks to Alexander Belopolsky for\n    reporting the bug and suggesting a way forward.)\n\n    If the installed localtime and/or posixrules files are symbolic\n    links, zic now keeps them symbolic links when updating them, for\n    compatibility with platforms like OpenSUSE where other programs\n    configure these files as symlinks.\n\n    zic now avoids hard linking to symbolic links, avoids some\n    unnecessary mkdir and stat system calls, and uses shorter file\n    names internally.\n\n    zdump has a new -i option to generate transitions in a\n    smaller but still human-readable format.  This option is\n    experimental, and the output format may change in future versions.\n    (Thanks to Jon Skeet for suggesting that an option was needed,\n    and thanks to Tim Parenti and Chris Rovick for further comments.)\n\n  Changes to build procedure\n\n    An experimental distribution format is available, in addition\n    to the traditional format which will continue to be distributed.\n    The new format is a tarball tzdb-VERSION.tar.lz with signature\n    file tzdb-VERSION.tar.lz.asc.  It unpacks to a top-level directory\n    tzdb-VERSION containing the code and data of the traditional\n    two-tarball format, along with extra data that may be useful.\n    (Thanks to Antonio Diaz Diaz, Oscar van Vlijmen, and many others\n    for comments about the experimental format.)\n\n    The release version number is now more accurate in the usual case\n    where releases are built from a Git repository.  For example, if\n    23 commits and some working-file changes have been made since\n    release 2016g, the version number is now something like\n    '2016g-23-g50556e3-dirty' instead of the misleading '2016g'.\n    Tagged releases use the same version number format as before,\n    e.g., '2016g'.  To support the more accurate version number, its\n    specification has moved from a line in the Makefile to a new\n    source file 'version'.\n\n    The experimental distribution contains a file to2050.tzs that\n    contains what should be the output of 'zdump -i -c 2050' on\n    primary zones.  If this file is available, 'make check' now checks\n    that zdump generates this output.\n\n    'make check_web' now works on Fedora-like distributions.\n\n  Changes to documentation and commentary\n\n    tzfile.5 now documents the new restriction on POSIX TZ-like\n    strings that is now implemented by zic.\n\n    Comments now cite URLs for some 1917-1921 Russian DST decrees.\n    (Thanks to Alexander Belopolsky.)\n\n    tz-link.htm mentions JuliaTime (thanks to Curtis Vogt) and Time4J\n    (thanks to Meno Hochschild) and ThreeTen-Extra, and its\n    description of Java 8 has been brought up to date (thanks to\n    Stephen Colebourne).  Its description of local time on Mars has\n    been updated to match current practice, and URLs have been updated\n    and some obsolete ones removed.\n\n\nRelease 2016f - 2016-07-05 16:26:51 +0200\n\n  Changes affecting future timestamps\n\n    The Egyptian government changed its mind on short notice, and\n    Africa/Cairo will not introduce DST starting 2016-07-07 after all.\n    (Thanks to Mina Samuel.)\n\n    Asia/Novosibirsk switches from +06 to +07 on 2016-07-24 at 02:00.\n    (Thanks to Stepan Golosunov.)\n\n  Changes to past and future timestamps\n\n    Asia/Novokuznetsk and Asia/Novosibirsk now use numeric time zone\n    abbreviations instead of invented ones.\n\n  Changes affecting past timestamps\n\n    Europe/Minsk's 1992-03-29 spring-forward transition was at 02:00 not 00:00.\n    (Thanks to Stepan Golosunov.)\n\n\nRelease 2016e - 2016-06-14 08:46:16 -0700\n\n  Changes affecting future timestamps\n\n    Africa/Cairo observes DST in 2016 from July 7 to the end of October.\n    Guess October 27 and 24:00 transitions.  (Thanks to Steffen Thorsen.)\n    For future years, guess April's last Thursday to October's last\n    Thursday except for Ramadan.\n\n  Changes affecting past timestamps\n\n    Locations while uninhabited now use '-00', not 'zzz', as a\n    placeholder time zone abbreviation.  This is inspired by Internet\n    RFC 3339 and is more consistent with numeric time zone\n    abbreviations already used elsewhere.  The change affects several\n    arctic and antarctic locations, e.g., America/Cambridge_Bay before\n    1920 and Antarctica/Troll before 2005.\n\n    Asia/Baku's 1992-09-27 transition from +04 (DST) to +04 (non-DST) was\n    at 03:00, not 23:00 the previous day.  (Thanks to Michael Deckers.)\n\n  Changes to code\n\n    zic now outputs a dummy transition at time 2**31 - 1 in zones\n    whose POSIX-style TZ strings contain a '<'.  This mostly works\n    around Qt bug 53071 <https://bugreports.qt.io/browse/QTBUG-53071>.\n    (Thanks to Zhanibek Adilbekov for reporting the Qt bug.)\n\n  Changes affecting documentation and commentary\n\n    tz-link.htm says why governments should give plenty of notice for\n    time zone or DST changes, and refers to Matt Johnson's blog post.\n\n    tz-link.htm mentions Tzdata for Elixir.  (Thanks to Matt Johnson.)\n\n\nRelease 2016d - 2016-04-17 22:50:29 -0700\n\n  Changes affecting future timestamps\n\n    America/Caracas switches from -0430 to -04 on 2016-05-01 at 02:30.\n    (Thanks to Alexander Krivenyshev for the heads-up.)\n\n    Asia/Magadan switches from +10 to +11 on 2016-04-24 at 02:00.\n    (Thanks to Alexander Krivenyshev and Matt Johnson.)\n\n    New zone Asia/Tomsk, split off from Asia/Novosibirsk.  It covers\n    Tomsk Oblast, Russia, which switches from +06 to +07 on 2016-05-29\n    at 02:00.  (Thanks to Stepan Golosunov.)\n\n  Changes affecting past timestamps\n\n    New zone Europe/Kirov, split off from Europe/Volgograd.  It covers\n    Kirov Oblast, Russia, which switched from +04/+05 to +03/+04 on\n    1989-03-26 at 02:00, roughly a year after Europe/Volgograd made\n    the same change.  (Thanks to Stepan Golosunov.)\n\n    Russia and nearby locations had daylight-saving transitions on\n    1992-03-29 at 02:00 and 1992-09-27 at 03:00, instead of on\n    1992-03-28 at 23:00 and 1992-09-26 at 23:00.  (Thanks to Stepan\n    Golosunov.)\n\n    Many corrections to historical time in Kazakhstan from 1991\n    through 2005.  (Thanks to Stepan Golosunov.)  Replace Kazakhstan's\n    invented time zone abbreviations with numeric abbreviations.\n\n  Changes to commentary\n\n    Mention Internet RFCs 7808 (TZDIST) and 7809 (CalDAV time zone references).\n\n\nRelease 2016c - 2016-03-23 00:51:27 -0700\n\n  Changes affecting future timestamps\n\n    Azerbaijan no longer observes DST.  (Thanks to Steffen Thorsen.)\n\n    Chile reverts from permanent to seasonal DST.  (Thanks to Juan\n    Correa for the heads-up, and to Tim Parenti for corrections.)\n    Guess that future transitions are August's and May's second\n    Saturdays at 24:00 mainland time.  Also, call the period from\n    2014-09-07 through 2016-05-14 daylight saving time instead of\n    standard time, as that seems more appropriate now.\n\n  Changes affecting past timestamps\n\n    Europe/Kaliningrad and Europe/Vilnius changed from +03/+04 to\n    +02/+03 on 1989-03-26, not 1991-03-31.  Europe/Volgograd changed\n    from +04/+05 to +03/+04 on 1988-03-27, not 1989-03-26.\n    (Thanks to Stepan Golosunov.)\n\n  Changes to commentary\n\n    Several updates and URLs for historical and proposed Russian changes.\n    (Thanks to Stepan Golosunov, Matt Johnson, and Alexander Krivenyshev.)\n\n\nRelease 2016b - 2016-03-12 17:30:14 -0800\n\n  Compatibility note\n\n    Starting with release 2016b, some data entries cause zic implementations\n    derived from tz releases 2005j through 2015e to issue warnings like\n    \"time zone abbreviation differs from POSIX standard (+03)\".\n    These warnings should not otherwise affect zic's output and can safely be\n    ignored on today's platforms, as the warnings refer to a restriction in\n    POSIX.1-1988 that was removed in POSIX.1-2001.  One way to suppress the\n    warnings is to upgrade to zic derived from tz releases 2015f and later.\n\n  Changes affecting future timestamps\n\n    New zones Europe/Astrakhan and Europe/Ulyanovsk for Astrakhan and\n    Ulyanovsk Oblasts, Russia, both of which will switch from +03 to +04 on\n    2016-03-27 at 02:00 local time.  They need distinct zones since their\n    post-1970 histories disagree.  New zone Asia/Barnaul for Altai Krai and\n    Altai Republic, Russia, which will switch from +06 to +07 on the same date\n    and local time.  The Astrakhan change is already official; the others have\n    passed the first reading in the State Duma and are extremely likely.\n    Also, Asia/Sakhalin moves from +10 to +11 on 2016-03-27 at 02:00.\n    (Thanks to Alexander Krivenyshev for the heads-up, and to Matt Johnson\n    and Stepan Golosunov for followup.)\n\n    As a trial of a new system that needs less information to be made up,\n    the new zones use numeric time zone abbreviations like \"+04\"\n    instead of invented abbreviations like \"ASTT\".\n\n    Haiti will not observe DST in 2016.  (Thanks to Jean Antoine via\n    Steffen Thorsen.)\n\n    Palestine's spring-forward transition on 2016-03-26 is at 01:00, not 00:00.\n    (Thanks to Hannah Kreitem.) Guess future transitions will be March's last\n    Saturday at 01:00, not March's last Friday at 24:00.\n\n  Changes affecting past timestamps\n\n    Europe/Chisinau observed DST during 1990, and switched from +04 to\n    +03 at 1990-05-06 02:00, instead of switching from +03 to +02.\n    (Thanks to Stepan Golosunov.)\n\n    1991 abbreviations in Europe/Samara should be SAMT/SAMST, not\n    KUYT/KUYST.  (Thanks to Stepan Golosunov.)\n\n  Changes to code\n\n    tzselect's diagnostics and checking, and checktab.awk's checking,\n    have been improved.  (Thanks to J William Piggott.)\n\n    tzcode now builds under MinGW.  (Thanks to Ian Abbott and Esben Haabendal.)\n\n    tzselect now tests Julian-date TZ settings more accurately.\n    (Thanks to J William Piggott.)\n\n  Changes to commentary\n\n    Comments in zone tables have been improved.  (Thanks to J William Piggott.)\n\n    tzselect again limits its menu comments so that menus fit on a\n    24×80 alphanumeric display.\n\n    A new web page tz-how-to.html.  (Thanks to Bill Seymour.)\n\n    In the Theory file, the description of possible time zone abbreviations in\n    tzdata has been cleaned up, as the old description was unclear and\n    inconsistent.  (Thanks to Alain Mouette for reporting the problem.)\n\n\nRelease 2016a - 2016-01-26 23:28:02 -0800\n\n  Changes affecting future timestamps\n\n    America/Cayman will not observe daylight saving this year after all.\n    Revert our guess that it would.  (Thanks to Matt Johnson.)\n\n    Asia/Chita switches from +0800 to +0900 on 2016-03-27 at 02:00.\n    (Thanks to Alexander Krivenyshev.)\n\n    Asia/Tehran now has DST predictions for the year 2038 and later,\n    to be March 21 00:00 to September 21 00:00.  This is likely better\n    than predicting no DST, albeit off by a day every now and then.\n\n  Changes affecting past and future timestamps\n\n    America/Metlakatla switched from PST all year to AKST/AKDT on\n    2015-11-01 at 02:00.  (Thanks to Steffen Thorsen.)\n\n    America/Santa_Isabel has been removed, and replaced with a\n    backward compatibility link to America/Tijuana.  Its contents were\n    apparently based on a misreading of Mexican legislation.\n\n  Changes affecting past timestamps\n\n    Asia/Karachi's two transition times in 2002 were off by a minute.\n    (Thanks to Matt Johnson.)\n\n  Changes affecting build procedure\n\n    An installer can now combine leap seconds with use of the backzone file,\n    e.g., with 'make PACKRATDATA=backzone REDO=posix_right zones'.\n    The old 'make posix_packrat' rule is now marked as obsolescent.\n    (Thanks to Ian Abbott for an initial implementation.)\n\n  Changes affecting documentation and commentary\n\n    A new file LICENSE makes it easier to see that the code and data\n    are mostly public-domain.  (Thanks to James Knight.)  The three\n    non-public-domain files now use the current (3-clause) BSD license\n    instead of older versions of that license.\n\n    tz-link.htm mentions the BDE library (thanks to Andrew Paprocki),\n    CCTZ (thanks to Tim Parenti), TimeJones.com, and has a new section\n    on editing tz source files (with a mention of Sublime zoneinfo,\n    thanks to Gilmore Davidson).\n\n    The Theory and asia files now mention the 2015 book \"The Global\n    Transformation of Time, 1870-1950\", and cite a couple of reviews.\n\n    The America/Chicago entry now documents the informal use of US\n    central time in Fort Pierre, South Dakota.  (Thanks to Rick\n    McDermid, Matt Johnson, and Steve Jones.)\n\n\nRelease 2015g - 2015-10-01 00:39:51 -0700\n\n  Changes affecting future timestamps\n\n    Turkey's 2015 fall-back transition is scheduled for Nov. 8, not Oct. 25.\n    (Thanks to Fatih.)\n\n    Norfolk moves from +1130 to +1100 on 2015-10-04 at 02:00 local time.\n    (Thanks to Alexander Krivenyshev.)\n\n    Fiji's 2016 fall-back transition is scheduled for January 17, not 24.\n    (Thanks to Ken Rylander.)\n\n    Fort Nelson, British Columbia will not fall back on 2015-11-01.  It has\n    effectively been on MST (-0700) since it advanced its clocks on 2015-03-08.\n    New zone America/Fort_Nelson.  (Thanks to Matt Johnson.)\n\n  Changes affecting past timestamps\n\n    Norfolk observed DST from 1974-10-27 02:00 to 1975-03-02 02:00.\n\n  Changes affecting code\n\n    localtime no longer mishandles America/Anchorage after 2037.\n    (Thanks to Bradley White for reporting the bug.)\n\n    On hosts with signed 32-bit time_t, localtime no longer mishandles\n    Pacific/Fiji after 2038-01-16 14:00 UTC.\n\n    The localtime module allows the variables 'timezone', 'daylight',\n    and 'altzone' to be in common storage shared with other modules,\n    and declares them in case the system <time.h> does not.\n    (Problems reported by Kees Dekker.)\n\n    On platforms with tm_zone, strftime.c now assumes it is not NULL.\n    This simplifies the code and is consistent with zdump.c.\n    (Problem reported by Christos Zoulas.)\n\n  Changes affecting documentation\n\n   The tzfile man page now documents that transition times denote the\n   starts (not the ends) of the corresponding time periods.\n   (Ambiguity reported by Bill Seymour.)\n\n\nRelease 2015f - 2015-08-10 18:06:56 -0700\n\n  Changes affecting future timestamps\n\n    North Korea switches to +0830 on 2015-08-15.  (Thanks to Steffen Thorsen.)\n    The abbreviation remains \"KST\".  (Thanks to Robert Elz.)\n\n    Uruguay no longer observes DST.  (Thanks to Steffen Thorsen\n    and Pablo Camargo.)\n\n  Changes affecting past and future timestamps\n\n    Moldova starts and ends DST at 00:00 UTC, not at 01:00 UTC.\n    (Thanks to Roman Tudos.)\n\n  Changes affecting data format and code\n\n    zic's '-y YEARISTYPE' option is no longer documented.  The TYPE\n    field of a Rule line should now be '-'; the old values 'even',\n    'odd', 'uspres', 'nonpres', 'nonuspres' were already undocumented.\n    Although the implementation has not changed, these features do not\n    work in the default installation, they are not used in the data,\n    and they are now considered obsolescent.\n\n    zic now checks that two rules don't take effect at the same time.\n    (Thanks to Jon Skeet and Arthur David Olson.)  Constraints on\n    simultaneity are now documented.\n\n    The two characters '%z' in a zone format now stand for the UT\n    offset, e.g., '-07' for seven hours behind UT and '+0530' for\n    five hours and thirty minutes ahead.  This better supports time\n    zone abbreviations conforming to POSIX.1-2001 and later.\n\n  Changes affecting installed data files\n\n    Comments for America/Halifax and America/Glace_Bay have been improved.\n    (Thanks to Brian Inglis.)\n\n    Data entries have been simplified for Atlantic/Canary, Europe/Simferopol,\n    Europe/Sofia, and Europe/Tallinn.  This yields slightly smaller\n    installed data files for Europe/Simferopol and Europe/Tallinn.\n    It does not affect timestamps.  (Thanks to Howard Hinnant.)\n\n  Changes affecting code\n\n    zdump and zic no longer warn about valid time zone abbreviations\n    like '-05'.\n\n    Some Visual Studio 2013 warnings have been suppressed.\n    (Thanks to Kees Dekker.)\n\n    'date' no longer sets the time of day and its -a, -d, -n and -t\n    options have been removed.  Long obsolescent, the implementation\n    of these features had porting problems.  Builders no longer need\n    to configure HAVE_ADJTIME, HAVE_SETTIMEOFDAY, or HAVE_UTMPX_H.\n    (Thanks to Kees Dekker for pointing out the problem.)\n\n  Changes affecting documentation\n\n    The Theory file mentions naming issues earlier, as these seem to be\n    poorly publicized (thanks to Gilmore Davidson for reporting the problem).\n\n    tz-link.htm mentions Time Zone Database Parser (thanks to Howard Hinnant).\n\n    Mention that Herbert Samuel introduced the term \"Summer Time\".\n\n\nRelease 2015e - 2015-06-13 10:56:02 -0700\n\n  Changes affecting future timestamps\n\n    Morocco will suspend DST from 2015-06-14 03:00 through 2015-07-19 02:00,\n    not 06-13 and 07-18 as we had guessed.  (Thanks to Milamber.)\n\n    Assume Cayman Islands will observe DST starting next year, using US rules.\n    Although it isn't guaranteed, it is the most likely.\n\n  Changes affecting data format\n\n    The file 'iso3166.tab' now uses UTF-8, so that its entries can better\n    spell the names of Åland Islands, Côte d'Ivoire, and Réunion.\n\n  Changes affecting code\n\n    When displaying data, tzselect converts it to the current locale's\n    encoding if the iconv command works.  (Problem reported by random832.)\n\n    tzselect no longer mishandles Dominica, fixing a bug introduced\n    in Release 2014f.  (Problem reported by Owen Leibman.)\n\n    zic -l no longer fails when compiled with -DTZDEFAULT=\\\"/etc/localtime\\\".\n    This fixes a bug introduced in Release 2014f.\n    (Problem reported by Leonardo Chiquitto.)\n\n\nRelease 2015d - 2015-04-24 08:09:46 -0700\n\n  Changes affecting future timestamps\n\n    Egypt will not observe DST in 2015 and will consider canceling it\n    permanently.  For now, assume no DST indefinitely.\n    (Thanks to Ahmed Nazmy and Tim Parenti.)\n\n  Changes affecting past timestamps\n\n    America/Whitehorse switched from UT -09 to -08 on 1967-05-28, not\n    1966-07-01.  Also, Yukon's time zone history is documented better.\n    (Thanks to Brian Inglis and Dennis Ferguson.)\n\n  Change affecting past and future time zone abbreviations\n\n    The abbreviations for Hawaii-Aleutian standard and daylight times\n    have been changed from HAST/HADT to HST/HDT, as per US Government\n    Printing Office style.  This affects only America/Adak since 1983,\n    as America/Honolulu was already using the new style.\n\n  Changes affecting code\n\n   zic has some minor performance improvements.\n\n\nRelease 2015c - 2015-04-11 08:55:55 -0700\n\n  Changes affecting future timestamps\n\n    Egypt's spring-forward transition is at 24:00 on April's last Thursday,\n    not 00:00 on April's last Friday.  2015's transition will therefore be on\n    Thursday, April 30 at 24:00, not Friday, April 24 at 00:00.  Similar fixes\n    apply to 2026, 2037, 2043, etc.  (Thanks to Steffen Thorsen.)\n\n  Changes affecting past timestamps\n\n    The following changes affect some pre-1991 Chile-related timestamps\n    in America/Santiago, Antarctica/Palmer, and Pacific/Easter.\n\n      The 1910 transition was January 10, not January 1.\n\n      The 1918 transition was September 10, not September 1.\n\n      The UT -04 time observed from 1932 to 1942 is now considered to\n      be standard time, not year-round DST.\n\n      Santiago observed DST (UT -03) from 1946-07-15 through\n      1946-08-31, then reverted to standard time, then switched to -05\n      on 1947-04-01.\n\n      Assume transitions before 1968 were at 00:00, since we have no data\n      saying otherwise.\n\n      The spring 1988 transition was 1988-10-09, not 1988-10-02.\n      The fall 1990 transition was 1990-03-11, not 1990-03-18.\n\n      Assume no UT offset change for Pacific/Easter on 1890-01-01,\n      and omit all transitions on Pacific/Easter from 1942 through 1946\n      since we have no data suggesting that they existed.\n\n    One more zone has been turned into a link, as it differed\n    from an existing zone only for older timestamps.  As usual,\n    this change affects UT offsets in pre-1970 timestamps only.\n    The zone's old contents have been moved to the 'backzone' file.\n    The affected zone is America/Montreal.\n\n  Changes affecting commentary\n\n    Mention the TZUpdater tool.\n\n    Mention \"The Time Now\".  (Thanks to Brandon Ramsey.)\n\n\nRelease 2015b - 2015-03-19 23:28:11 -0700\n\n  Changes affecting future timestamps\n\n    Mongolia will start observing DST again this year, from the last\n    Saturday in March at 02:00 to the last Saturday in September at 00:00.\n    (Thanks to Ganbold Tsagaankhuu.)\n\n    Palestine will start DST on March 28, not March 27.  Also,\n    correct the fall 2014 transition from September 26 to October 24.\n    Adjust future predictions accordingly.  (Thanks to Steffen Thorsen.)\n\n  Changes affecting past timestamps\n\n    The 1982 zone shift in Pacific/Easter has been corrected, fixing a 2015a\n    regression.  (Thanks to Stuart Bishop for reporting the problem.)\n\n    Some more zones have been turned into links, when they differed\n    from existing zones only for older timestamps.  As usual,\n    these changes affect UT offsets in pre-1970 timestamps only.\n    Their old contents have been moved to the 'backzone' file.\n    The affected zones are: America/Antigua, America/Cayman,\n    Pacific/Midway, and Pacific/Saipan.\n\n  Changes affecting time zone abbreviations\n\n    Correct the 1992-2010 DST abbreviation in Volgograd from \"MSK\" to \"MSD\".\n    (Thanks to Hank W.)\n\n  Changes affecting code\n\n    Fix integer overflow bug in reference 'mktime' implementation.\n    (Problem reported by Jörg Richter.)\n\n    Allow -Dtime_tz=time_t compilations, and allow -Dtime_tz=... libraries\n    to be used in the same executable as standard-library time_t functions.\n    (Problems reported by Bradley White.)\n\n  Changes affecting commentary\n\n    Cite the recent Mexican decree changing Quintana Roo's time zone.\n    (Thanks to Carlos Raúl Perasso.)\n\n    Likewise for the recent Chilean decree.  (Thanks to Eduardo Romero Urra.)\n\n    Update info about Mars time.\n\n\nRelease 2015a - 2015-01-29 22:35:20 -0800\n\n  Changes affecting future timestamps\n\n    The Mexican state of Quintana Roo, represented by America/Cancun,\n    will shift from Central Time with DST to Eastern Time without DST\n    on 2015-02-01 at 02:00.  (Thanks to Steffen Thorsen and Gwillim Law.)\n\n    Chile will not change clocks in April or thereafter; its new standard time\n    will be its old daylight saving time.  This affects America/Santiago,\n    Pacific/Easter, and Antarctica/Palmer.  (Thanks to Juan Correa.)\n\n    New leap second 2015-06-30 23:59:60 UTC as per IERS Bulletin C 49.\n    (Thanks to Tim Parenti.)\n\n  Changes affecting past timestamps\n\n    Iceland observed DST in 1919 and 1921, and its 1939 fallback\n    transition was Oct. 29, not Nov. 29.  Remove incorrect data from\n    Shanks about time in Iceland between 1837 and 1908.\n\n    Some more zones have been turned into links, when they differed\n    from existing zones only for older timestamps.  As usual,\n    these changes affect UT offsets in pre-1970 timestamps only.\n    Their old contents have been moved to the 'backzone' file.\n    The affected zones are: Asia/Aden, Asia/Bahrain, Asia/Kuwait,\n    and Asia/Muscat.\n\n  Changes affecting code\n\n    tzalloc now scrubs time zone abbreviations compatibly with the way\n    that tzset always has, by replacing invalid bytes with '_' and by\n    shortening too-long abbreviations.\n\n    tzselect ports to POSIX awk implementations, no longer mishandles\n    POSIX TZ settings when GNU awk is used, and reports POSIX TZ\n    settings to the user.  (Thanks to Stefan Kuhn.)\n\n  Changes affecting build procedure\n\n    'make check' now checks for links to links in the data.\n    One such link (for Africa/Asmera) has been fixed.\n    (Thanks to Stephen Colebourne for pointing out the problem.)\n\n  Changes affecting commentary\n\n    The leapseconds file commentary now mentions the expiration date.\n    (Problem reported by Martin Burnicki.)\n\n    Update Mexican Library of Congress URL.\n\n\nRelease 2014j - 2014-11-10 17:37:11 -0800\n\n  Changes affecting current and future timestamps\n\n    Turks & Caicos' switch from US eastern time to UT -04 year-round\n    did not occur on 2014-11-02 at 02:00.  It's currently scheduled\n    for 2015-11-01 at 02:00.  (Thanks to Chris Walton.)\n\n  Changes affecting past timestamps\n\n    Many pre-1989 timestamps have been corrected for Asia/Seoul and\n    Asia/Pyongyang, based on sources for the Korean-language Wikipedia\n    entry for time in Korea.  (Thanks to Sanghyuk Jung.)  Also, no\n    longer guess that Pyongyang mimicked Seoul time after World War II,\n    as this is politically implausible.\n\n    Some more zones have been turned into links, when they differed\n    from existing zones only for older timestamps.  As usual,\n    these changes affect UT offsets in pre-1970 timestamps only.\n    Their old contents have been moved to the 'backzone' file.\n    The affected zones are: Africa/Addis_Ababa, Africa/Asmara,\n    Africa/Dar_es_Salaam, Africa/Djibouti, Africa/Kampala,\n    Africa/Mogadishu, Indian/Antananarivo, Indian/Comoro, and\n    Indian/Mayotte.\n\n  Changes affecting commentary\n\n    The commentary is less enthusiastic about Shanks as a source,\n    and is more careful to distinguish UT from UTC.\n\n\nRelease 2014i - 2014-10-21 22:04:57 -0700\n\n  Changes affecting future timestamps\n\n    Pacific/Fiji will observe DST from 2014-11-02 02:00 to 2015-01-18 03:00.\n    (Thanks to Ken Rylander for the heads-up.)  Guess that future\n    years will use a similar pattern.\n\n    A new Zone Pacific/Bougainville, for the part of Papua New Guinea\n    that plans to switch from UT +10 to +11 on 2014-12-28 at 02:00.\n    (Thanks to Kiley Walbom for the heads-up.)\n\n  Changes affecting time zone abbreviations\n\n    Since Belarus is not changing its clocks even though Moscow is,\n    the time zone abbreviation in Europe/Minsk is changing from FET\n    to its more traditional value MSK on 2014-10-26 at 01:00.\n    (Thanks to Alexander Bokovoy for the heads-up about Belarus.)\n\n    The new abbreviation IDT stands for the pre-1976 use of UT +08 in\n    Indochina, to distinguish it better from ICT (+07).\n\n  Changes affecting past timestamps\n\n    Many timestamps have been corrected for Asia/Ho_Chi_Minh before 1976\n    (thanks to Trần Ngọc Quân for an indirect pointer to Trần Tiến Bình's\n    authoritative book).  Asia/Ho_Chi_Minh has been added to\n    zone1970.tab, to give tzselect users in Vietnam two choices,\n    since north and south Vietnam disagreed after our 1970 cutoff.\n\n    Asia/Phnom_Penh and Asia/Vientiane have been turned into links, as\n    they differed from existing zones only for older timestamps.  As\n    usual, these changes affect pre-1970 timestamps only.  Their old\n    contents have been moved to the 'backzone' file.\n\n  Changes affecting code\n\n    The time-related library functions now set errno on failure, and\n    some crashes in the new tzalloc-related library functions have\n    been fixed.  (Thanks to Christos Zoulas for reporting most of\n    these problems and for suggesting fixes.)\n\n    If USG_COMPAT is defined and the requested timestamp is standard time,\n    the tz library's localtime and mktime functions now set the extern\n    variable timezone to a value appropriate for that timestamp; and\n    similarly for ALTZONE, daylight saving time, and the altzone variable.\n    This change is a companion to the tzname change in 2014h, and is\n    designed to make timezone and altzone more compatible with tzname.\n\n    The tz library's functions now set errno to EOVERFLOW if they fail\n    because the result cannot be represented.  ctime and ctime_r now\n    return NULL and set errno when a timestamp is out of range, rather\n    than having undefined behavior.\n\n    Some bugs associated with the new 2014g functions have been fixed.\n    This includes a bug that largely incapacitated the new functions\n    time2posix_z and posix2time_z.  (Thanks to Christos Zoulas.)\n    It also includes some uses of uninitialized variables after tzalloc.\n    The new code uses the standard type 'ssize_t', which the Makefile\n    now gives porting advice about.\n\n  Changes affecting commentary\n\n    Updated URLs for NRC Canada (thanks to Matt Johnson and Brian Inglis).\n\n\nRelease 2014h - 2014-09-25 18:59:03 -0700\n\n  Changes affecting past timestamps\n\n    America/Jamaica's 1974 spring-forward transition was Jan. 6, not Apr. 28.\n\n    Shanks says Asia/Novokuznetsk switched from LMT (not \"NMT\") on 1924-05-01,\n    not 1920-01-06.  The old entry was based on a misinterpretation of Shanks.\n\n    Some more zones have been turned into links, when they differed\n    from existing zones only for older timestamps.  As usual,\n    these changes affect UT offsets in pre-1970 timestamps only.\n    Their old contents have been moved to the 'backzone' file.\n    The affected zones are: Africa/Blantyre, Africa/Bujumbura,\n    Africa/Gaborone, Africa/Harare, Africa/Kigali, Africa/Lubumbashi,\n    Africa/Lusaka, Africa/Maseru, and Africa/Mbabane.\n\n  Changes affecting code\n\n    zdump -V and -v now output gmtoff= values on all platforms,\n    not merely on platforms defining TM_GMTOFF.\n\n    The tz library's localtime and mktime functions now set tzname to a value\n    appropriate for the requested timestamp, and zdump now uses this\n    on platforms not defining TM_ZONE, fixing a 2014g regression.\n    (Thanks to Tim Parenti for reporting the problem.)\n\n    The tz library no longer sets tzname if localtime or mktime fails.\n\n    zdump -c no longer mishandles transitions near year boundaries.\n    (Thanks to Tim Parenti for reporting the problem.)\n\n    An access to uninitialized data has been fixed.\n    (Thanks to Jörg Richter for reporting the problem.)\n\n    When THREAD_SAFE is defined, the code ports to the C11 memory model.\n    A memory leak has been fixed if ALL_STATE and THREAD_SAFE are defined\n    and two threads race to initialize data used by gmtime-like functions.\n    (Thanks to Andy Heninger for reporting the problems.)\n\n  Changes affecting build procedure\n\n    'make check' now checks better for properly sorted data.\n\n  Changes affecting documentation and commentary\n\n    zdump's gmtoff=N output is now documented, and its isdst=D output\n    is now documented to possibly output D values other than 0 or 1.\n\n    zdump -c's treatment of years is now documented to use the\n    Gregorian calendar and Universal Time without leap seconds,\n    and its behavior at cutoff boundaries is now documented better.\n    (Thanks to Arthur David Olson and Tim Parenti for reporting the problems.)\n\n    Programs are now documented to use the proleptic Gregorian calendar.\n    (Thanks to Alan Barrett for the suggestion.)\n\n    Fractional-second GMT offsets have been documented for civil time\n    in 19th-century Chennai, Jakarta, and New York.\n\n\nRelease 2014g - 2014-08-28 12:31:23 -0700\n\n  Changes affecting future timestamps\n\n    Turks & Caicos is switching from US eastern time to UT -04\n    year-round, modeled as a switch on 2014-11-02 at 02:00.\n    [As noted in 2014j, this switch was later delayed.]\n\n  Changes affecting past timestamps\n\n    Time in Russia or the USSR before 1926 or so has been corrected by\n    a few seconds in the following zones: Asia/Irkutsk,\n    Asia/Krasnoyarsk, Asia/Omsk, Asia/Samarkand, Asia/Tbilisi,\n    Asia/Vladivostok, Asia/Yakutsk, Europe/Riga, Europe/Samara.  For\n    Asia/Yekaterinburg the correction is a few minutes.  (Thanks to\n    Vladimir Karpinsky.)\n\n    The Portuguese decree of 1911-05-26 took effect on 1912-01-01.\n    This affects 1911 timestamps in Africa/Bissau, Africa/Luanda,\n    Atlantic/Azores, and Atlantic/Madeira.  Also, Lisbon's pre-1912\n    GMT offset was -0:36:45 (rounded from -0:36:44.68), not -0:36:32.\n    (Thanks to Stephen Colebourne for pointing to the decree.)\n\n    Asia/Dhaka ended DST on 2009-12-31 at 24:00, not 23:59.\n\n    A new file 'backzone' contains data which may appeal to\n    connoisseurs of old timestamps, although it is out of scope for\n    the tz database, is often poorly sourced, and contains some data\n    that is known to be incorrect.  The new file is not recommended\n    for ordinary use and its entries are not installed by default.\n    (Thanks to Lester Caine for the high-quality Jersey, Guernsey, and\n    Isle of Man entries.)\n\n    Some more zones have been turned into links, when they differed\n    from existing zones only for older timestamps.  As usual,\n    these changes affect UT offsets in pre-1970 timestamps only.\n    Their old contents have been moved to the 'backzone' file.\n    The affected zones are: Africa/Bangui, Africa/Brazzaville,\n    Africa/Douala, Africa/Kinshasa, Africa/Libreville, Africa/Luanda,\n    Africa/Malabo, Africa/Niamey, and Africa/Porto-Novo.\n\n  Changes affecting code\n\n    Unless NETBSD_INSPIRED is defined to 0, the tz library now\n    supplies functions for creating and using objects that represent\n    timezones. The new functions are tzalloc, tzfree, localtime_rz,\n    mktime_z, and (if STD_INSPIRED is also defined) posix2time_z and\n    time2posix_z.  They are intended for performance: for example,\n    localtime_rz (unlike localtime_r) is trivially thread-safe without\n    locking.  (Thanks to Christos Zoulas for proposing NetBSD-inspired\n    functions, and to Alan Barrett and Jonathan Lennox for helping to\n    debug the change.)\n\n    zdump now builds with the tz library unless USE_LTZ is defined to 0,\n    This lets zdump use tz features even if the system library lacks them.\n    To build zdump with the system library, use 'make CFLAGS=-DUSE_LTZ=0\n    TZDOBJS=zdump.o CHECK_TIME_T_ALTERNATIVES='.\n\n    zdump now uses localtime_rz if available, as it's significantly faster,\n    and it can help zdump better diagnose invalid timezone names.\n    Define HAVE_LOCALTIME_RZ to 0 to suppress this.  HAVE_LOCALTIME_RZ\n    defaults to 1 if NETBSD_INSPIRED && USE_LTZ.  When localtime_rz is\n    not available, zdump now uses localtime_r and tzset if available,\n    as this is a bit cleaner and faster than plain localtime.  Compile\n    with -DHAVE_LOCALTIME_R=0 and/or -DHAVE_TZSET=0 if your system\n    lacks these two functions.\n\n    If THREAD_SAFE is defined to 1, the tz library is now thread-safe.\n    Although not needed for tz's own applications, which are single-threaded,\n    this supports POSIX better if the tz library is used in multithreaded apps.\n\n    Some crashes have been fixed when zdump or the tz library is given\n    invalid or outlandish input.\n\n    The tz library no longer mishandles leap seconds on platforms with\n    unsigned time_t in timezones that lack ordinary transitions after 1970.\n\n    The tz code now attempts to infer TM_GMTOFF and TM_ZONE if not\n    already defined, to make it easier to configure on common platforms.\n    Define NO_TM_GMTOFF and NO_TM_ZONE to suppress this.\n\n    Unless the new macro UNINIT_TRAP is defined to 1, the tz code now\n    assumes that reading uninitialized memory yields garbage values\n    but does not cause other problems such as traps.\n\n    If TM_GMTOFF is defined and UNINIT_TRAP is 0, mktime is now\n    more likely to guess right for ambiguous timestamps near\n    transitions where tm_isdst does not change.\n\n    If HAVE_STRFTIME_L is defined to 1, the tz library now defines\n    strftime_l for compatibility with recent versions of POSIX.\n    Only the C locale is supported, though.  HAVE_STRFTIME_L defaults\n    to 1 on recent POSIX versions, and to 0 otherwise.\n\n    tzselect -c now uses a hybrid distance measure that works better\n    in Africa.  (Thanks to Alan Barrett for noting the problem.)\n\n    The C source code now ports to NetBSD when GCC_DEBUG_FLAGS is used,\n    or when time_tz is defined.\n\n    When HAVE_UTMPX_H is set the 'date' command now builds on systems\n    whose <utmpx.h> file does not define WTMPX_FILE, and when setting\n    the date it updates the wtmpx file if _PATH_WTMPX is defined.\n    This affects GNU/Linux and similar systems.\n\n    For easier maintenance later, some C code has been simplified,\n    some lint has been removed, and the code has been tweaked so that\n    plain 'make' is more likely to work.\n\n    The C type 'bool' is now used for boolean values, instead of 'int'.\n\n    The long-obsolete LOCALE_HOME code has been removed.\n\n    The long-obsolete 'gtime' function has been removed.\n\n  Changes affecting build procedure\n\n    'zdump' no longer links in ialloc.o, as it's not needed.\n\n    'make check_time_t_alternatives' no longer assumes GNU diff.\n\n  Changes affecting distribution tarballs\n\n    The files checktab.awk and zoneinfo2tdf.pl are now distributed in\n    the tzdata tarball instead of the tzcode tarball, since they help\n    maintain the data.  The NEWS and Theory files are now also\n    distributed in the tzdata tarball, as they're relevant for data.\n    (Thanks to Alan Barrett for pointing this out.)  Also, the\n    leapseconds.awk file is no longer distributed in the tzcode\n    tarball, since it belongs in the tzdata tarball (where 2014f\n    inadvertently also distributed it).\n\n  Changes affecting documentation and commentary\n\n    A new file CONTRIBUTING is distributed.  (Thanks to Tim Parenti for\n    suggesting a CONTRIBUTING file, and to Tony Finch and Walter Harms\n    for debugging it.)\n\n    The man pages have been updated to use function prototypes,\n    to document thread-safe variants like localtime_r, and to document\n    the NetBSD-inspired functions tzalloc, tzfree, localtime_rz, and\n    mktime_z.\n\n    The fields in Link lines have been renamed to be more descriptive\n    and more like the parameters of 'ln'.  LINK-FROM has become TARGET,\n    and LINK-TO has become LINK-NAME.\n\n    tz-link.htm mentions the IETF's tzdist working group; Windows\n    Runtime etc. (thanks to Matt Johnson); and HP-UX's tztab.\n\n    Some broken URLs have been fixed in the commentary.  (Thanks to\n    Lester Caine.)\n\n    Commentary about Philippines DST has been updated, and commentary\n    on pre-1970 time in India has been added.\n\n\nRelease 2014f - 2014-08-05 17:42:36 -0700\n\n  Changes affecting future timestamps\n\n    Russia will subtract an hour from most of its time zones on 2014-10-26\n    at 02:00 local time.  (Thanks to Alexander Krivenyshev.)\n    There are a few exceptions: Magadan Oblast (Asia/Magadan) and Zabaykalsky\n    Krai are subtracting two hours; conversely, Chukotka Autonomous Okrug\n    (Asia/Anadyr), Kamchatka Krai (Asia/Kamchatka), Kemerovo Oblast\n    (Asia/Novokuznetsk), and the Samara Oblast and the Udmurt Republic\n    (Europe/Samara) are not changing their clocks.  The changed zones are\n    Europe/Kaliningrad, Europe/Moscow, Europe/Simferopol, Europe/Volgograd,\n    Asia/Yekaterinburg, Asia/Omsk, Asia/Novosibirsk, Asia/Krasnoyarsk,\n    Asia/Irkutsk, Asia/Yakutsk, Asia/Vladivostok, Asia/Khandyga,\n    Asia/Sakhalin, and Asia/Ust-Nera; Asia/Magadan will have two hours\n    subtracted; and Asia/Novokuznetsk's time zone abbreviation is affected,\n    but not its UTC offset.  Two zones are added: Asia/Chita (split\n    from Asia/Yakutsk, and also with two hours subtracted) and\n    Asia/Srednekolymsk (split from Asia/Magadan, but with only one hour\n    subtracted).  (Thanks to Tim Parenti for much of the above.)\n\n  Changes affecting time zone abbreviations\n\n    Australian eastern time zone abbreviations are now AEST/AEDT not EST,\n    and similarly for the other Australian zones.  That is, for eastern\n    standard and daylight saving time the abbreviations are AEST and AEDT\n    instead of the former EST for both; similarly, ACST/ACDT, ACWST/ACWDT,\n    and AWST/AWDT are now used instead of the former CST, CWST, and WST.\n    This change does not affect UT offsets, only time zone abbreviations.\n    (Thanks to Rich Tibbett and many others.)\n\n    Asia/Novokuznetsk shifts from NOVT to KRAT (remaining on UT +07)\n    effective 2014-10-26 at 02:00 local time.\n\n    The time zone abbreviation for Xinjiang Time (observed in Ürümqi)\n    has been changed from URUT to XJT.  (Thanks to Luther Ma.)\n\n    Prefer MSK/MSD for Moscow time in Russia, even in other cities.\n    Similarly, prefer EET/EEST for eastern European time in Russia.\n\n    Change time zone abbreviations in (western) Samoa to use \"ST\" and\n    \"DT\" suffixes, as this is more likely to match common practice.\n    Prefix \"W\" to (western) Samoa time when its standard-time offset\n    disagrees with that of American Samoa.\n\n    America/Metlakatla now uses PST, not MeST, to abbreviate its time zone.\n\n    Time zone abbreviations have been updated for Japan's two time\n    zones used 1896-1937.  JWST now stands for Western Standard\n    Time, and JCST for Central Standard Time (formerly this was CJT).\n    These abbreviations are now used for time in Korea, Taiwan,\n    and Sakhalin while controlled by Japan.\n\n  Changes affecting past timestamps\n\n    China's five zones have been simplified to two, since the post-1970\n    differences in the other three seem to have been imaginary.  The\n    zones Asia/Harbin, Asia/Chongqing, and Asia/Kashgar have been\n    removed; backwards-compatibility links still work, albeit with\n    different behaviors for timestamps before May 1980.  Asia/Urumqi's\n    1980 transition to UT +08 has been removed, so that it is now at\n    +06 and not +08.  (Thanks to Luther Ma and to Alois Treindl;\n    Treindl sent helpful translations of two papers by Guo Qingsheng.)\n\n    Some zones have been turned into links, when they differed from existing\n    zones only for older UT offsets where data entries were likely invented.\n    These changes affect UT offsets in pre-1970 timestamps only.  This is\n    similar to the change in release 2013e, except this time for western\n    Africa.  The affected zones are: Africa/Bamako, Africa/Banjul,\n    Africa/Conakry, Africa/Dakar, Africa/Freetown, Africa/Lome,\n    Africa/Nouakchott, Africa/Ouagadougou, Africa/Sao_Tome, and\n    Atlantic/St_Helena.  This also affects the backwards-compatibility\n    link Africa/Timbuktu.  (Thanks to Alan Barrett, Stephen Colebourne,\n    Tim Parenti, and David Patte for reporting problems in earlier\n    versions of this change.)\n\n    Asia/Shanghai's pre-standard-time UT offset has been changed from\n    8:05:57 to 8:05:43, the location of Xujiahui Observatory.  Its\n    transition to standard time has been changed from 1928 to 1901.\n\n    Asia/Taipei switched to JWST on 1896-01-01, then to JST on 1937-10-01,\n    then to CST on 1945-09-21 at 01:00, and did not observe DST in 1945.\n    In 1946 it observed DST from 05-15 through 09-30; in 1947\n    from 04-15 through 10-31; and in 1979 from 07-01 through 09-30.\n    (Thanks to Yu-Cheng Chuang.)\n\n    Asia/Riyadh's transition to standard time is now 1947-03-14, not 1950.\n\n    Europe/Helsinki's 1942 fall-back transition was 10-04 at 01:00, not\n    10-03 at 00:00.  (Thanks to Konstantin Hyppönen.)\n\n    Pacific/Pago_Pago has been changed from UT -11:30 to -11 for the\n    period from 1911 to 1950.\n\n    Pacific/Chatham has been changed to New Zealand standard time plus\n    45 minutes for the period before 1957, reflecting a 1956 remark in\n    the New Zealand parliament.\n\n    Europe/Budapest has several pre-1946 corrections: in 1918 the transition\n    out of DST was on 09-16, not 09-29; in 1919 it was on 11-24, not 09-15; in\n    1945 it was on 11-01, not 11-03; in 1941 the transition to DST was 04-08\n    not 04-06 at 02:00; and there was no DST in 1920.\n\n    Africa/Accra is now assumed to have observed DST from 1920 through 1935.\n\n    Time in Russia before 1927 or so has been corrected by a few seconds in\n    the following zones: Europe/Moscow, Asia/Irkutsk, Asia/Tbilisi,\n    Asia/Tashkent, Asia/Vladivostok, Asia/Yekaterinburg, Europe/Helsinki, and\n    Europe/Riga.  Also, Moscow's location has been changed to its Kilometer 0\n    point.  (Thanks to Vladimir Karpinsky for the Moscow changes.)\n\n  Changes affecting data format\n\n    A new file 'zone1970.tab' supersedes 'zone.tab' in the installed data.\n    The new file's extended format allows multiple country codes per zone.\n    The older file is still installed but is deprecated; its format is\n    not changing and it will still be distributed for a while, but new\n    applications should use the new file.\n\n    The new file format simplifies maintenance of obscure locations.\n    To test this, it adds coverage for the Crozet Islands and the\n    Scattered Islands.  (Thanks to Tobias Conradi and Antoine Leca.)\n\n    The file 'iso3166.tab' is planned to switch from ASCII to UTF-8.\n    It is still ASCII now, but commentary about the switch has been added.\n    The new file 'zone1970.tab' already uses UTF-8.\n\n  Changes affecting code\n\n    'localtime', 'mktime', etc. now use much less stack space if ALL_STATE\n    is defined.  (Thanks to Elliott Hughes for reporting the problem.)\n\n    'zic' no longer mishandles input when ignoring case in locales that\n    are not compatible with English, e.g., unibyte Turkish locales when\n    compiled with HAVE_GETTEXT.\n\n    Error diagnostics of 'zic' and 'yearistype' have been reworded so that\n    they no longer use ASCII '-' as if it were a dash.\n\n    'zic' now rejects output file names that contain '.' or '..' components.\n    (Thanks to Tim Parenti for reporting the problem.)\n\n    'zic -v' now warns about output file names that do not follow\n    POSIX rules, or that contain a digit or '.'.  (Thanks to Arthur\n    David Olson for starting the ball rolling on this.)\n\n    Some lint has been removed when using GCC_DEBUG_FLAGS with GCC 4.9.0.\n\n  Changes affecting build procedure\n\n    'zic' no longer links in localtime.o and asctime.o, as they're not needed.\n    (Thanks to John Cochran.)\n\n  Changes affecting documentation and commentary\n\n    The 'Theory' file documents legacy names, the longstanding\n    exceptions to the POSIX-inspired file name rules.\n\n    The 'zic' documentation clarifies the role of time types when\n    interpreting dates.  (Thanks to Arthur David Olson.)\n\n    Documentation and commentary now prefer UTF-8 to US-ASCII,\n    allowing the use of proper accents in foreign words and names.\n    Code and data have not changed because of this.  (Thanks to\n    Garrett Wollman, Ian Abbott, and Guy Harris for helping to debug\n    this.)\n\n    Non-HTML documentation and commentary now use plain-text URLs instead of\n    HTML insertions, and are more consistent about bracketing URLs when they\n    are not already surrounded by white space.  (Thanks to suggestions by\n    Steffen Nurpmeso.)\n\n    There is new commentary about Xujiahui Observatory, the five time-zone\n    project in China from 1918 to 1949, timekeeping in Japanese-occupied\n    Shanghai, and Tibet Time in the 1950s.  The sharp-eyed can spot the\n    warlord Jin Shuren in the data.\n\n    Commentary about the coverage of each Russian zone has been standardized.\n    (Thanks to Tim Parenti.)\n\n    There is new commentary about contemporary timekeeping in Ethiopia.\n\n    Obsolete comments about a 2007 proposal for DST in Kuwait has been removed.\n\n    There is new commentary about time in Poland in 1919.\n\n    Proper credit has been given to DST inventor George Vernon Hudson.\n\n    Commentary about time in Metlakatla, AK and Resolute, NU has been\n    improved, with a new source for the former.\n\n    In zone.tab, Pacific/Easter no longer mentions Salas y Gómez, as it\n    is uninhabited.\n\n    Commentary about permanent Antarctic bases has been updated.\n\n    Several typos have been corrected.  (Thanks to Tim Parenti for\n    contributing some of these fixes.)\n\n    tz-link.htm now mentions the JavaScript libraries Moment Timezone,\n    TimezoneJS.Date, Walltime-js, and Timezone.  (Thanks to a heads-up\n    from Matt Johnson.)  Also, it mentions the Go 'latlong' package.\n    (Thanks to a heads-up from Dirkjan Ochtman.)\n\n    The files usno1988, usno1989, usno1989a, usno1995, usno1997, and usno1998\n    have been removed.  These obsolescent US Naval Observatory entries were no\n    longer helpful for maintenance.  (Thanks to Tim Parenti for the suggestion.)\n\n\nRelease 2014e - 2014-06-12 21:53:52 -0700\n\n  Changes affecting near-future timestamps\n\n    Egypt's 2014 Ramadan-based transitions are June 26 and July 31 at 24:00.\n    (Thanks to Imed Chihi.)  Guess that from 2015 on Egypt will temporarily\n    switch to standard time at 24:00 the last Thursday before Ramadan, and\n    back to DST at 00:00 the first Friday after Ramadan.\n\n    Similarly, Morocco's are June 28 at 03:00 and August 2 at 02:00.  (Thanks\n    to Milamber Space Network.)  Guess that from 2015 on Morocco will\n    temporarily switch to standard time at 03:00 the last Saturday before\n    Ramadan, and back to DST at 02:00 the first Saturday after Ramadan.\n\n  Changes affecting past timestamps\n\n    The abbreviation \"MSM\" (Moscow Midsummer Time) is now used instead of\n    \"MSD\" for Moscow's double daylight time in summer 1921.  Also, a typo\n    \"VLASST\" has been repaired to be \"VLAST\" for Vladivostok summer time\n    in 1991.  (Thanks to Hank W. for reporting the problems.)\n\n  Changes affecting commentary\n\n    tz-link.htm now cites RFC 7265 for jCal, mentions PTP and the\n    draft CalDAV extension, updates URLs for TSP, TZInfo, IATA, and\n    removes stale pointers to World Time Explorer and WORLDTIME.\n\n\nRelease 2014d - 2014-05-27 21:34:40 -0700\n\n  Changes affecting code\n\n    zic no longer generates files containing timestamps before the Big Bang.\n    This works around GNOME glib bug 878\n    <https://gitlab.gnome.org/GNOME/glib/issues/878>\n    (Thanks to Leonardo Chiquitto for reporting the bug, and to\n    Arthur David Olson and James Cloos for suggesting improvements to the fix.)\n\n  Changes affecting documentation\n\n    tz-link.htm now mentions GNOME.\n\n\nRelease 2014c - 2014-05-13 07:44:13 -0700\n\n  Changes affecting near-future timestamps\n\n    Egypt observes DST starting 2014-05-15 at 24:00.\n    (Thanks to Ahmad El-Dardiry and Gunther Vermier.)\n    Details have not been announced, except that DST will not be observed\n    during Ramadan.  Guess that DST will stop during the same Ramadan dates as\n    Morocco, and that Egypt's future spring and fall transitions will be the\n    same as 2010 when it last observed DST, namely April's last Friday at\n    00:00 to September's last Thursday at 23:00 standard time.  Also, guess\n    that Ramadan transitions will be at 00:00 standard time.\n\n  Changes affecting code\n\n    zic now generates transitions for minimum time values, eliminating guesswork\n    when handling low-valued timestamps.  (Thanks to Arthur David Olson.)\n\n    Port to Cygwin sans glibc.  (Thanks to Arthur David Olson.)\n\n  Changes affecting commentary and documentation\n\n    Remove now-confusing comment about Jordan.  (Thanks to Oleksii Nochovnyi.)\n\n\nRelease 2014b - 2014-03-24 21:28:50 -0700\n\n  Changes affecting near-future timestamps\n\n    Crimea switches to Moscow time on 2014-03-30 at 02:00 local time.\n    (Thanks to Alexander Krivenyshev.)  Move its zone.tab entry from UA to RU.\n\n    New entry for Troll station, Antarctica.  (Thanks to Paul-Inge Flakstad and\n    Bengt-Inge Larsson.)  This is currently an approximation; a better version\n    will require the zic and localtime fixes mentioned below, and the plan is\n    to wait for a while until at least the zic fixes propagate.\n\n  Changes affecting code\n\n    'zic' and 'localtime' no longer reject locations needing four transitions\n    per year for the foreseeable future.  (Thanks to Andrew Main (Zefram).)\n    Also, 'zic' avoids some unlikely failures due to integer overflow.\n\n  Changes affecting build procedure\n\n    'make check' now detects Rule lines defined but never used.\n    The NZAQ rules, an instance of this problem, have been removed.\n\n  Changes affecting commentary and documentation\n\n    Fix Tuesday/Thursday typo in description of time in Israel.\n    (Thanks to Bert Katz via Pavel Kharitonov and Mike Frysinger.)\n\n    Microsoft Windows 8.1 doesn't support tz database names.  (Thanks\n    to Donald MacQueen.)  Instead, the Microsoft Windows Store app\n    library supports them.\n\n    Add comments about Johnston Island time in the 1960s.\n    (Thanks to Lyle McElhaney.)\n\n    Morocco's 2014 DST start will be as predicted.\n    (Thanks to Sebastien Willemijns.)\n\n\nRelease 2014a - 2014-03-07 23:30:29 -0800\n\n  Changes affecting near-future timestamps\n\n    Turkey begins DST on 2014-03-31, not 03-30.  (Thanks to Faruk Pasin for\n    the heads-up, and to Tim Parenti for simplifying the update.)\n\n  Changes affecting past timestamps\n\n    Fiji ended DST on 2014-01-19 at 02:00, not the previously scheduled 03:00.\n    (Thanks to Steffen Thorsen.)\n\n    Ukraine switched from Moscow to Eastern European time on 1990-07-01\n    (not 1992-01-01), and observed DST during the entire next winter.\n    (Thanks to Vladimir in Moscow via Alois Treindl.)\n\n    In 1988 Israel observed DST from 04-10 to 09-04, not 04-09 to 09-03.\n    (Thanks to Avigdor Finkelstein.)\n\n  Changes affecting code\n\n    A uninitialized-storage bug in 'localtime' has been fixed.\n    (Thanks to Logan Chien.)\n\n  Changes affecting the build procedure\n\n    The settings for 'make check_web' now default to Ubuntu 13.10.\n\n  Changes affecting commentary and documentation\n\n    The boundary of the US Pacific time zone is given more accurately.\n    (Thanks to Alan Mintz.)\n\n    Chile's 2014 DST will be as predicted.  (Thanks to José Miguel Garrido.)\n\n    Paraguay's 2014 DST will be as predicted.  (Thanks to Carlos Raúl Perasso.)\n\n    Better descriptions of countries with same time zone history as\n    Trinidad and Tobago since 1970.  (Thanks to Alan Barrett for suggestion.)\n\n    Several changes affect tz-link.htm, the main web page.\n\n      Mention Time.is (thanks to Even Scharning) and WX-now (thanks to\n      David Braverman).\n\n      Mention xCal (Internet RFC 6321) and jCal.\n\n      Microsoft has some support for tz database names.\n\n      CLDR data formats include both XML and JSON.\n\n      Mention Maggiolo's map of solar vs standard time.\n      (Thanks to Arthur David Olson.)\n\n      Mention TZ4Net.  (Thanks to Matt Johnson.)\n\n      Mention the timezone-olson Haskell package.\n\n      Mention zeitverschiebung.net.  (Thanks to Martin Jäger.)\n\n      Remove moribund links to daylight-savings-time.info and to\n      Simple Timer + Clocks.\n\n      Update two links.  (Thanks to Oscar van Vlijmen.)\n\n      Fix some formatting glitches, e.g., remove random newlines from\n      abbr elements' title attributes.\n\n\nRelease 2013i - 2013-12-17 07:25:23 -0800\n\n  Changes affecting near-future timestamps:\n\n    Jordan switches back to standard time at 00:00 on December 20, 2013.\n    The 2006-2011 transition schedule is planned to resume in 2014.\n    (Thanks to Steffen Thorsen.)\n\n  Changes affecting past timestamps:\n\n    In 2004, Cuba began DST on March 28, not April 4.\n    (Thanks to Steffen Thorsen.)\n\n  Changes affecting code\n\n    The compile-time flag NOSOLAR has been removed, as nowadays the\n    benefit of slightly shrinking runtime table size is outweighed by the\n    cost of disallowing potential future updates that exceed old limits.\n\n  Changes affecting documentation and commentary\n\n    The files solar87, solar88, and solar89 are no longer distributed.\n    They were a negative experiment - that is, a demonstration that\n    tz data can represent solar time only with some difficulty and error.\n    Their presence in the distribution caused confusion, as Riyadh\n    civil time was generally not solar time in those years.\n\n    tz-link.htm now mentions Noda Time.  (Thanks to Matt Johnson.)\n\n\nRelease 2013h - 2013-10-25 15:32:32 -0700\n\n  Changes affecting current and future timestamps:\n\n    Libya has switched its UT offset back to +02 without DST, instead\n    of +01 with DST.  (Thanks to Even Scharning.)\n\n    Western Sahara (Africa/El_Aaiun) uses Morocco's DST rules.\n    (Thanks to Gwillim Law.)\n\n  Changes affecting future timestamps:\n\n    Acre and (we guess) western Amazonas will switch from UT -04 to -05\n    on 2013-11-10.  This affects America/Rio_Branco and America/Eirunepe.\n    (Thanks to Steffen Thorsen.)\n\n    Add entries for DST transitions in Morocco in the year 2038.\n    This avoids some year-2038 glitches introduced in 2013g.\n    (Thanks to Yoshito Umaoka for reporting the problem.)\n\n  Changes affecting API\n\n    The 'tzselect' command no longer requires the 'select' command,\n    and should now work with /bin/sh on more platforms.  It also works\n    around a bug in BusyBox awk before version 1.21.0.  (Thanks to\n    Patrick 'P. J.' McDermott and Alan Barrett.)\n\n  Changes affecting code\n\n    Fix localtime overflow bugs with 32-bit unsigned time_t.\n\n    zdump no longer assumes sscanf returns maximal values on overflow.\n\n  Changes affecting the build procedure\n\n    The builder can specify which programs to use, if any, instead of\n    'ar' and 'ranlib', and libtz.a is now built locally before being\n    installed.  (Thanks to Michael Forney.)\n\n    A dependency typo in the 'zdump' rule has been fixed.\n    (Thanks to Andrew Paprocki.)\n\n    The Makefile has been simplified by assuming that 'mkdir -p' and 'cp -f'\n    work as specified by POSIX.2-1992 or later; this is portable nowadays.\n\n    'make clean' no longer removes 'leapseconds', since it's\n    host-independent and is part of the distribution.\n\n    The unused makefile macros TZCSRCS, TZDSRCS, DATESRCS have been removed.\n\n  Changes affecting documentation and commentary\n\n    tz-link.htm now mentions TC TIMEZONE's draft time zone service protocol\n    (thanks to Mike Douglass) and TimezoneJS.Date (thanks to Jim Fehrle).\n\n    Update URLs in tz-link page.  Add URLs for Microsoft Windows, since\n    8.1 introduces tz support.  Remove URLs for Tru64 and UnixWare (no\n    longer maintained) and for old advisories.  SOFA now does C.\n\nRelease 2013g - 2013-09-30 21:08:26 -0700\n\n  Changes affecting current and near-future timestamps\n\n    Morocco now observes DST from the last Sunday in March to the last\n    Sunday in October, not April to September respectively.  (Thanks\n    to Steffen Thorsen.)\n\n  Changes affecting 'zic'\n\n    'zic' now runs on platforms that lack both hard links and symlinks.\n    (Thanks to Theo Veenker for reporting the problem, for MinGW.)\n    Also, fix some bugs on platforms that lack hard links but have symlinks.\n\n    'zic -v' again warns that Asia/Tehran has no POSIX environment variable\n    to predict the far future, fixing a bug introduced in 2013e.\n\n  Changes affecting the build procedure\n\n    The 'leapseconds' file is again put into the tzdata tarball.\n    Also, 'leapseconds.awk', so tzdata is self-contained.  (Thanks to\n    Matt Burgess and Ian Abbott.)  The timestamps of these and other\n    dependent files in tarballs are adjusted more consistently.\n\n  Changes affecting documentation and commentary\n\n    The README file is now part of the data tarball as well as the code.\n    It now states that files are public domain unless otherwise specified.\n    (Thanks to Andrew Main (Zefram) for asking for clarifications.)\n    Its details about the 1989 release moved to a place of honor near\n    the end of NEWS.\n\n\nRelease 2013f - 2013-09-24 23:37:36 -0700\n\n  Changes affecting near-future timestamps\n\n    Tocantins will very likely not observe DST starting this spring.\n    (Thanks to Steffen Thorsen.)\n\n    Jordan will likely stay at UT +03 indefinitely, and will not fall\n    back this fall.\n\n    Palestine will fall back at 00:00, not 01:00.  (Thanks to Steffen Thorsen.)\n\n  Changes affecting API\n\n    The types of the global variables 'timezone' and 'altzone' (if present)\n    have been changed back to 'long'.  This is required for 'timezone'\n    by POSIX, and for 'altzone' by common practice, e.g., Solaris 11.\n    These variables were originally 'long' in the tz code, but were\n    mistakenly changed to 'time_t' in 1987; nobody reported the\n    incompatibility until now.  The difference matters on x32, where\n    'long' is 32 bits and 'time_t' is 64.  (Thanks to Elliott Hughes.)\n\n  Changes affecting the build procedure\n\n    Avoid long strings in leapseconds.awk to work around a mawk bug.\n    (Thanks to Cyril Baurand.)\n\n  Changes affecting documentation and commentary\n\n    New file 'NEWS' that contains release notes like this one.\n\n    Paraguay's law does not specify DST transition time; 00:00 is customary.\n    (Thanks to Waldemar Villamayor-Venialbo.)\n\n    Minor capitalization fixes.\n\n  Changes affecting version-control only\n\n    The experimental GitHub repository now contains annotated and\n    signed tags for recent releases, e.g., '2013e' for Release 2013e.\n    Releases are tagged starting with 2012e; earlier releases were\n    done differently, and tags would either not have a simple name or\n    not exactly match what was released.\n\n    'make set-timestamps' is now simpler and a bit more portable.\n\n\nRelease 2013e - 2013-09-19 23:50:04 -0700\n\n  Changes affecting near-future timestamps\n\n    This year Fiji will start DST on October 27, not October 20.\n    (Thanks to David Wheeler for the heads-up.)  For now, guess that\n    Fiji will continue to spring forward the Sunday before the fourth\n    Monday in October.\n\n  Changes affecting current and future time zone abbreviations\n\n    Use WIB/WITA/WIT rather than WIT/CIT/EIT for alphabetic Indonesian\n    time zone abbreviations since 1932.  (Thanks to George Ziegler,\n    Priyadi Iman Nurcahyo, Zakaria, Jason Grimes, Martin Pitt, and\n    Benny Lin.)  This affects Asia/Dili, Asia/Jakarta, Asia/Jayapura,\n    Asia/Makassar, and Asia/Pontianak.\n\n    Use ART (UT -03, standard time), rather than WARST (also -03, but\n    daylight saving time) for San Luis, Argentina since 2009.\n\n  Changes affecting Godthåb timestamps after 2037 if version mismatch\n\n    Allow POSIX-like TZ strings where the transition time's hour can\n    range from -167 through 167, instead of the POSIX-required 0\n    through 24.  E.g., TZ='FJT-12FJST,M10.3.1/146,M1.3.4/75' for the\n    new Fiji rules.  This is a more compact way to represent\n    far-future timestamps for America/Godthab, America/Santiago,\n    Antarctica/Palmer, Asia/Gaza, Asia/Hebron, Asia/Jerusalem,\n    Pacific/Easter, and Pacific/Fiji.  Other zones are unaffected by\n    this change.  (Derived from a suggestion by Arthur David Olson.)\n\n    Allow POSIX-like TZ strings where daylight saving time is in\n    effect all year.  E.g., TZ='WART4WARST,J1/0,J365/25' for Western\n    Argentina Summer Time all year.  This supports a more compact way\n    to represent the 2013d data for America/Argentina/San_Luis.\n    Because of the change for San Luis noted above this change does not\n    affect the current data.  (Thanks to Andrew Main (Zefram) for\n    suggestions that improved this change.)\n\n    Where these two TZ changes take effect, there is a minor extension\n    to the tz file format in that it allows new values for the\n    embedded TZ-format string, and the tz file format version number\n    has therefore been increased from 2 to 3 as a precaution.\n    Version-2-based client code should continue to work as before for\n    all timestamps before 2038.  Existing version-2-based client code\n    (tzcode, GNU/Linux, Solaris) has been tested on version-3-format\n    files, and typically works in practice even for timestamps after\n    2037; the only known exception is America/Godthab.\n\n  Changes affecting timestamps before 1970\n\n    Pacific/Johnston is now a link to Pacific/Honolulu.  This corrects\n    some errors before 1947.\n\n    Some zones have been turned into links, when they differ from existing\n    zones only in older data entries that were likely invented or that\n    differ only in LMT or transitions from LMT.  These changes affect\n    only timestamps before 1943.  The affected zones are:\n    Africa/Juba, America/Anguilla, America/Aruba, America/Dominica,\n    America/Grenada, America/Guadeloupe, America/Marigot,\n    America/Montserrat, America/St_Barthelemy, America/St_Kitts,\n    America/St_Lucia, America/St_Thomas, America/St_Vincent,\n    America/Tortola, and Europe/Vaduz.  (Thanks to Alois Treindl for\n    confirming that the old Europe/Vaduz zone was wrong and the new\n    link is better for WWII-era times.)\n\n    Change Kingston Mean Time from -5:07:12 to -5:07:11.  This affects\n    America/Cayman, America/Jamaica and America/Grand_Turk timestamps\n    from 1890 to 1912.\n\n    Change the UT offset of Bern Mean Time from 0:29:44 to 0:29:46.\n    This affects Europe/Zurich timestamps from 1853 to 1894.  (Thanks\n    to Alois Treindl.)\n\n    Change the date of the circa-1850 Zurich transition from 1849-09-12\n    to 1853-07-16, overriding Shanks with data from Messerli about\n    postal and telegraph time in Switzerland.\n\n  Changes affecting time zone abbreviations before 1970\n\n    For Asia/Jakarta, use BMT (not JMT) for mean time from 1923 to 1932,\n    as Jakarta was called Batavia back then.\n\n  Changes affecting API\n\n    The 'zic' command now outputs a dummy transition when far-future\n    data can't be summarized using a TZ string, and uses a 402-year\n    window rather than a 400-year window.  For the current data, this\n    affects only the Asia/Tehran file.  It does not affect any of the\n    timestamps that this file represents, so zdump outputs the same\n    information as before.  (Thanks to Andrew Main (Zefram).)\n\n    The 'date' command has a new '-r' option, which lets you specify\n    the integer time to display, a la FreeBSD.\n\n    The 'tzselect' command has two new options '-c' and '-n', which lets you\n    select a zone based on latitude and longitude.\n\n    The 'zic' command's '-v' option now warns about constructs that\n    require the new version-3 binary file format.  (Thanks to Arthur\n    David Olson for the suggestion.)\n\n    Support for floating-point time_t has been removed.\n    It was always dicey, and POSIX no longer requires it.\n    (Thanks to Eric Blake for suggesting to the POSIX committee to\n    remove it, and thanks to Alan Barrett, Clive D.W. Feather, Andy\n    Heninger, Arthur David Olson, and Alois Treindl, for reporting\n    bugs and elucidating some of the corners of the old floating-point\n    implementation.)\n\n    The signatures of 'offtime', 'timeoff', and 'gtime' have been\n    changed back to the old practice of using 'long' to represent UT\n    offsets.  This had been inadvertently and mistakenly changed to\n    'int_fast32_t'.  (Thanks to Christos Zoulas.)\n\n    The code avoids undefined behavior on integer overflow in some\n    more places, including gmtime, localtime, mktime and zdump.\n\n  Changes affecting the zdump utility\n\n    zdump now outputs \"UT\" when referring to Universal Time, not \"UTC\".\n    \"UTC\" does not make sense for timestamps that predate the introduction\n    of UTC, whereas \"UT\", a more generic term, does.  (Thanks to Steve Allen\n    for clarifying UT vs UTC.)\n\n  Data changes affecting behavior of tzselect and similar programs\n\n    Country code BQ is now called the more common name \"Caribbean Netherlands\"\n    rather than the more official \"Bonaire, St Eustatius & Saba\".\n\n    Remove from zone.tab the names America/Montreal, America/Shiprock,\n    and Antarctica/South_Pole, as they are equivalent to existing\n    same-country-code zones for post-1970 timestamps.  The data entries for\n    these names are unchanged, so the names continue to work as before.\n\n  Changes affecting code internals\n\n    zic -c now runs way faster on 64-bit hosts when given large numbers.\n\n    zic now uses vfprintf to avoid allocating and freeing some memory.\n\n    tzselect now computes the list of continents from the data,\n    rather than have it hard-coded.\n\n    Minor changes pacify GCC 4.7.3 and GCC 4.8.1.\n\n  Changes affecting the build procedure\n\n    The 'leapseconds' file is now generated automatically from a\n    new file 'leap-seconds.list', which is a copy of\n    <ftp://ftp.nist.gov/pub/time/leap-seconds.list>\n    A new source file 'leapseconds.awk' implements this.\n    The goal is simplification of the future maintenance of 'leapseconds'.\n\n    When building the 'posix' or 'right' subdirectories, if the\n    subdirectory would be a copy of the default subdirectory, it is\n    now made a symbolic link if that is supported.  This saves about\n    2 MB of file system space.\n\n    The links America/Shiprock and Antarctica/South_Pole have been\n    moved to the 'backward' file.  This affects only nondefault builds\n    that omit 'backward'.\n\n  Changes affecting version-control only\n\n    .gitignore now ignores 'date'.\n\n  Changes affecting documentation and commentary\n\n    Changes to the 'tzfile' man page\n\n      It now mentions that the binary file format may be extended in\n      future versions by appending data.\n\n      It now refers to the 'zdump' and 'zic' man pages.\n\n    Changes to the 'zic' man page\n\n      It lists conditions that elicit a warning with '-v'.\n\n      It says that the behavior is unspecified when duplicate names\n      are given, or if the source of one link is the target of another.\n\n      Its examples are updated to match the latest data.\n\n      The definition of white space has been clarified slightly.\n      (Thanks to Michael Deckers.)\n\n    Changes to the 'Theory' file\n\n      There is a new section about the accuracy of the tz database,\n      describing the many ways that errors can creep in, and\n      explaining why so many of the pre-1970 timestamps are wrong or\n      misleading (thanks to Steve Allen, Lester Caine, and Garrett\n      Wollman for discussions that contributed to this).\n\n      The 'Theory' file describes LMT better (this follows a\n      suggestion by Guy Harris).\n\n      It refers to the 2013 edition of POSIX rather than the 2004 edition.\n\n      It's mentioned that excluding 'backward' should not affect the\n      other data, and it suggests at least one zone.tab name per\n      inhabited country (thanks to Stephen Colebourne).\n\n      Some longstanding restrictions on names are documented, e.g.,\n      'America/New_York' precludes 'America/New_York/Bronx'.\n\n      It gives more reasons for the 1970 cutoff.\n\n      It now mentions which time_t variants are supported, such as\n      signed integer time_t.  (Thanks to Paul Goyette for reporting\n      typos in an experimental version of this change.)\n\n      (Thanks to Philip Newton for correcting typos in these changes.)\n\n    Documentation and commentary is more careful to distinguish UT in\n    general from UTC in particular.  (Thanks to Steve Allen.)\n\n    Add a better source for the Zurich 1894 transition.\n    (Thanks to Pierre-Yves Berger.)\n\n    Update shapefile citations in tz-link.htm.  (Thanks to Guy Harris.)\n\n\nRelease 2013d - 2013-07-05 07:38:01 -0700\n\n  Changes affecting future timestamps:\n\n    Morocco's midsummer transitions this year are July 7 and August 10,\n    not July 9 and August 8.  (Thanks to Andrew Paprocki.)\n\n    Israel now falls back on the last Sunday of October.\n    (Thanks to Ephraim Silverberg.)\n\n  Changes affecting past timestamps:\n\n    Specify Jerusalem's location more precisely; this changes the pre-1880\n    times by 2 s.\n\n  Changing affecting metadata only:\n\n    Fix typos in the entries for country codes BQ and SX.\n\n  Changes affecting code:\n\n    Rework the code to fix a bug with handling Australia/Macquarie on\n    32-bit hosts (thanks to Arthur David Olson).\n\n    Port to platforms like NetBSD, where time_t can be wider than long.\n\n    Add support for testing time_t types other than the system's.\n    Run 'make check_time_t_alternatives' to try this out.\n    Currently, the tests fail for unsigned time_t;\n    this should get fixed at some point.\n\n  Changes affecting documentation and commentary:\n\n    Deemphasize the significance of national borders.\n\n    Update the zdump man page.\n\n    Remove obsolete NOID comment (thanks to Denis Excoffier).\n\n    Update several URLs and comments in the web pages.\n\n    Spelling fixes (thanks to Kevin Lyda and Jonathan Leffler).\n\n    Update URL for CLDR Zone->Tzid table (thanks to Yoshito Umaoka).\n\n\nRelease 2013c - 2013-04-19 16:17:40 -0700\n\n  Changes affecting current and future timestamps:\n\n    Palestine observed DST starting March 29, 2013.  (Thanks to\n    Steffen Thorsen.)  From 2013 on, Gaza and Hebron both observe DST,\n    with the predicted rules being the last Thursday in March at 24:00\n    to the first Friday on or after September 21 at 01:00.\n\n    Assume that the recent change to Paraguay's DST rules is permanent,\n    by moving the end of DST to the 4th Sunday in March every year.\n    (Thanks to Carlos Raúl Perasso.)\n\n  Changes affecting past timestamps:\n\n    Fix some historical data for Palestine to agree with that of\n    timeanddate.com, as follows:\n\n\t  The spring 2008 change in Gaza and Hebron was on 00:00 Mar 28, not\n\t  00:00 Apr 1.\n\n\t  The fall 2009 change in Gaza and Hebron on Sep 4 was at 01:00, not\n\t  02:00.\n\n\t  The spring 2010 change in Hebron was 00:00 Mar 26, not 00:01 Mar 27.\n\n\t  The spring 2011 change in Gaza was 00:01 Apr 1, not 12:01 Apr 2.\n\n\t  The spring 2011 change in Hebron on Apr 1 was at 00:01, not 12:01.\n\n\t  The fall 2011 change in Hebron on Sep 30 was at 00:00, not 03:00.\n\n    Fix times of habitation for Macquarie to agree with the Tasmania\n    Parks & Wildlife Service history, which indicates that permanent\n    habitation was 1899-1919 and 1948 on.\n\n  Changing affecting metadata only:\n\n    Macquarie Island is politically part of Australia, not Antarctica.\n    (Thanks to Tobias Conradi.)\n\n    Sort Macquarie more consistently with other parts of Australia.\n    (Thanks to Tim Parenti.)\n\n\nRelease 2013b - 2013-03-10 22:33:40 -0700\n\n  Changes affecting current and future timestamps:\n\n    Haiti uses US daylight-saving rules this year, and presumably future years.\n    This changes timestamps starting today.  (Thanks to Steffen Thorsen.)\n\n    Paraguay will end DST on March 24 this year.\n    (Thanks to Steffen Thorsen.)  For now, assume it's just this year.\n\n    Morocco does not observe DST during Ramadan;\n    try to predict Ramadan in Morocco as best we can.\n    (Thanks to Erik Homoet for the heads-up.)\n\n  Changes affecting commentary:\n\n    Update URLs in tz-link page.  Add URLs for webOS, BB10, iOS.\n    Update URL for Solaris.  Mention Internet RFC 6557.\n    Update Internet RFCs 2445->5545, 2822->5322.\n    Switch from FTP to HTTP for Internet RFCs.\n\n\nRelease 2013a - 2013-02-27 09:20:35 -0800\n\n  Change affecting binary data format:\n\n    The zone offset at the end of version-2-format zone files is now\n    allowed to be 24:00, as per POSIX.1-2008.  (Thanks to Arthur David Olson.)\n\n  Changes affecting current and future timestamps:\n\n    Chile's 2013 rules, and we guess rules for 2014 and later, will be\n    the same as 2012, namely Apr Sun>=23 03:00 UTC to Sep Sun>=2 04:00 UTC.\n    (Thanks to Steffen Thorsen and Robert Elz.)\n\n    New Zones Asia/Khandyga, Asia/Ust-Nera, Europe/Busingen.\n    (Thanks to Tobias Conradi and Arthur David Olson.)\n\n  Many changes affect historical timestamps before 1940.\n  These were deduced from: Milne J. Civil time. Geogr J. 1899\n  Feb;13(2):173-94 <https://www.jstor.org/stable/1774359>.\n\n  Changes affecting the code:\n\n    Fix zic bug that mishandled Egypt's 2010 changes (this also affected\n    the data).  (Thanks to Arthur David Olson.)\n\n    Fix localtime bug when time_t is unsigned and data files were generated\n    by a signed time_t system.  (Thanks to Doug Bailey for reporting and\n    to Arthur David Olson for fixing.)\n\n    Allow the email address for bug reports to be set by the packager.\n    The default is tz@iana.org, as before.  (Thanks to Joseph S. Myers.)\n\n    Update HTML checking to be compatible with Ubuntu 12.10.\n\n    Check that files are a safe subset of ASCII.  At some point we may\n    relax this requirement to a safe subset of UTF-8.  Without the\n    check, some non-UTF-8 encodings were leaking into the distribution.\n\n  Commentary changes:\n\n    Restore a comment about copyright notices that was inadvertently deleted.\n    (Thanks to Arthur David Olson.)\n\n    Improve the commentary about which districts observe what times\n    in Russia.  (Thanks to Oscar van Vlijmen and Arthur David Olson.)\n\n    Add web page links to tz.js.\n\n    Add \"Run by the Monkeys\" to tz-art.  (Thanks to Arthur David Olson.)\n\n\nRelease 2012j - 2012-11-12 18:34:49 -0800\n\n  Libya moved to CET this weekend, but with DST planned next year.\n  (Thanks to Even Scharning, Steffen Thorsen, and Tim Parenti.)\n\n  Signatures now have the extension .asc, not .sign, as that's more\n  standard.  (Thanks to Phil Pennock.)\n\n  The output of 'zdump --version', and of 'zic --version', now\n  uses a format that is more typical for --version.\n  (Thanks to Joseph S. Myers.)\n\n  The output of 'tzselect --help', 'zdump --help', and 'zic --help'\n  now uses tz@iana.org rather than the old elsie address.\n\n  zic -v now complains about abbreviations that are less than 3\n  or more than 6 characters, as per POSIX.  Formerly, it checked\n  for abbreviations that were more than 3.\n\n  'make public' no longer puts its temporary directory under /tmp,\n  and uses the just-built zic rather than the system zic.\n\n  Various fixes to documentation and commentary.\n\n\nRelease 2012i - 2012-11-03 12:57:09 -0700\n\n  Cuba switches from DST tomorrow at 01:00.  (Thanks to Steffen Thorsen.)\n\n  Linker flags can now be specified via LDFLAGS.\n  AWK now defaults to 'awk', not 'nawk'.\n  The shell in tzselect now defaults to /bin/bash, but this can\n  be overridden by specifying KSHELL.\n  The main web page now mentions the unofficial GitHub repository.\n  (Thanks to Mike Frysinger.)\n\n  Tarball signatures can now be built by running 'make signatures'.\n  There are also new makefile rules 'tarballs', 'check_public', and\n  separate makefile rules for each tarball and signature file.\n  A few makefile rules are now more portable to strict POSIX.\n\n  The main web page now lists the canonical IANA URL.\n\n\nRelease 2012h - 2012-10-26 22:49:10 -0700\n\n  Bahia no longer has DST.  (Thanks to Kelley Cook.)\n\n  Tocantins has DST.  (Thanks to Rodrigo Severo.)\n\n  Israel has new DST rules next year.  (Thanks to Ephraim Silverberg.)\n\n  Jordan stays on DST this winter.  (Thanks to Steffen Thorsen.)\n\n  Web page updates.\n\n  More C modernization, except that at Arthur David Olson's suggestion\n  the instances of 'register' were kept.\n\n\nRelease 2012g - 2012-10-17 20:59:45 -0700\n\n  Samoa fall 2012 and later.  (Thanks to Nicholas Pereira and Robert Elz.)\n\n  Palestine fall 2012.  (Thanks to Steffen Thorsen.)\n\n  Assume C89.\n\n  To attack the version-number problem, this release ships the file\n  'Makefile' (which contains the release number) in both the tzcode and\n  the tzdata tarballs.  The two Makefiles are identical, and should be\n  identical in any matching pair of tarballs, so it shouldn't matter\n  which order you extract the tarballs.  Perhaps we can come up with a\n  better version-number scheme at some point; this scheme does have the\n  virtue of not adding more files.\n\n\nRelease 2012f - 2012-09-12 23:17:03 -0700\n\n  * australasia (Pacific/Fiji): Fiji DST is October 21 through January\n    20 this year.  (Thanks to Steffen Thorsen.)\n\n\nRelease 2012e - 2012-08-02 20:44:55 -0700\n\n  * australasia (Pacific/Fakaofo): Tokelau is UT +13, not +14.\n    (Thanks to Steffen Thorsen.)\n\n  * Use a single version number for both code and data.\n\n  * .gitignore: New file.\n\n  * Remove trailing white space.\n\n\nRelease code2012c-data2012d - 2012-07-19 16:35:33 -0700\n\n  Changes for Morocco's timestamps, which take effect in a couple of\n  hours, along with infrastructure changes to accommodate how the tz\n  code and data are released on IANA.\n\n\nRelease data2012c - 2012-03-27 12:17:25 -0400\n\n  africa\n\tSummer time changes for Morocco (to start late April 2012)\n\n  asia\n\tChanges for 2012 for Gaza & the West Bank (Hebron) and Syria\n\n  northamerica\n\tHaiti following US/Canada rules for 2012 (and we're assuming,\n\tfor now anyway, for the future).\n\n\nRelease 2012b - 2012-03-02 12:29:15 +0700\n\n  There is just one change to tzcode2012b (compared with 2012a):\n  the Makefile that was accidentally included with 2012a has been\n  replaced with the version that should have been there, which is\n  identical with the previous version (from tzcode2011i).\n\n  There are just two changes in tzdata2012b compared with 2012a.\n\n  Most significantly, summer time in Cuba has been delayed 3 weeks\n  (now starts April 1 rather than March 11).   Since Mar 11 (the old start\n  date, as listed in 2012a) is just a little over a week away, this\n  change is urgent.\n\n  Less importantly, an excess tab in one of the changes in zone.tab\n  in 2012a has been removed.\n\n\nRelease 2012a - 2012-03-01 18:28:10 +0700\n\n  The changes in tzcode2012a (compared to the previous version, 2011i)\n  are entirely to the README and tz-art.htm and tz-link.htm files, if\n  none of those concern you, you can ignore the code update.  The changes\n  reflect the changed addresses for the mailing list and the code and\n  data distribution points & methods (and a link to DateTime::TimeZone::Tzfile\n  has been added to tz-link.htm).\n\n  In tzdata2012a (compared to the previous release, which was 2011n)\n  the major changes are:\n\tChile 2011/2012 and 2012/2013 summer time date adjustments.\n\tFalkland Islands onto permanent summer time (we're assuming for the\n\t\tforeseeable future, though 2012 is all we're fairly certain of.)\n\tArmenia has abolished Summer Time.\n\tTokelau jumped the International Date Line back last December\n\t\t(just the same as their near neighbour, Samoa).\n\tAmerica/Creston is a new zone for a small area of British Columbia\n\tThere will be a leapsecond 2012-06-30 23:59:60 UTC.\n\n  Other minor changes are:\n\tCorrections to 1918 Canadian summer time end dates.\n\tUpdated URL for UK time zone history (in comments)\n\tA few typos in Le Corre's list of free French place names (comments)\n\n\nRelease data2011n - 2011-10-30 14:57:54 +0700\n\n  There are three changes of note - most urgently, Cuba (America/Havana)\n  has extended summer time by two weeks, now to end on Nov 13, rather than\n  the (already past) Oct 30.   Second, the Pridnestrovian Moldavian Republic\n  (Europe/Tiraspol) decided not to split from the rest of Moldova after\n  all, and consequently that zone has been removed (again) and reinstated\n  in the \"backward\" file as a link to Europe/Chisinau.   And third, the\n  end date for Fiji's summer time this summer was moved forward from the\n  earlier planned Feb 26, to Jan 22.\n\n  Apart from that, Moldova (MD) returns to a single entry in zone.tab\n  (and the incorrect syntax that was in the 2011m version of that file\n  is so fixed - it would have been fixed in a different way had this\n  change not happened - that's the \"missing\" sccs version id).\n\n\nRelease data2011m - 2011-10-24 21:42:16 +0700\n\n  In particular, the typos in comments in the data (2011-11-17 should have\n  been 2011-10-17 as Alan Barrett noted, and spelling of Tiraspol that\n  Tim Parenti noted) have been fixed, and the change for Ukraine has been\n  made in all 4 Ukrainian zones, rather than just Europe/Kiev\n  (again, thanks to Tim Parenti, and also Denys Gavrysh).\n\n  In addition, I added Europe/Tiraspol to zone.tab.\n\n  This time, all the files have new version numbers...  (including the files\n  otherwise unchanged in 2011m that were changed in 2011l but didn't get new\n  version numbers there...)\n\n\nRelease data2011l - 2011-10-10 11:15:43 +0700\n\n  There are just 2 changes that cause different generated tzdata files from\n  zic, to Asia/Hebron and Pacific/Fiji - the possible change for Bahia, Brazil\n  is included, but commented out.  Compared with the diff I sent out last week,\n  this version also includes attributions for the sources for the changes\n  (in much the same format as ado used, but the html tags have not been\n  checked, verified, or used in any way at all, so if there are errors there,\n  please let me know.)\n\n\nRelease data2011k - 2011-09-20 17:54:03 -0400\n\n  [not summarized]\n\n\nRelease data2011j - 2011-09-12 09:22:49 -0400\n\n  (contemporary changes for Samoa; past changes for Kenya, Uganda, and\n  Tanzania); there are also two spelling corrections to comments in\n  the australasia file (with thanks to Christos Zoulas).\n\n\nRelease 2011i - 2011-08-29 05:56:32 -0400\n\n  [not summarized]\n\n\nRelease data2011h - 2011-06-15 18:41:48 -0400\n\n  Russia and Curaçao changes\n\n\nRelease 2011g - 2011-04-25 09:07:22 -0400\n\n  update the rules for Egypt to reflect its abandonment of DST this year\n\n\nRelease 2011f - 2011-04-06 17:14:53 -0400\n\n  [not summarized]\n\n\nRelease 2011e - 2011-03-31 16:04:38 -0400\n\n  Morocco, Chile, and tz-link changes\n\n\nRelease 2011d - 2011-03-14 09:18:01 -0400\n\n  changes that impact present-day timestamps in Cuba, Samoa, and Turkey\n\n\nRelease 2011c - 2011-03-07 09:30:09 -0500\n\n  These do affect current timestamps in Chile and Annette Island, Canada.\n\n\nRelease 2011b - 2011-02-07 08:44:50 -0500\n\n  [not summarized]\n\n\nRelease 2011a - 2011-01-24 10:30:16 -0500\n\n  [not summarized]\n\n\nRelease data2010o - 2010-11-01 09:18:23 -0400\n\n  change to the end of DST in Fiji in 2011\n\n\nRelease 2010n - 2010-10-25 08:19:17 -0400\n\n  [not summarized]\n\n\nRelease 2010m - 2010-09-27 09:24:48 -0400\n\n  Hong Kong, Vostok, and zic.c changes\n\n\nRelease 2010l - 2010-08-16 06:57:25 -0400\n\n  [not summarized]\n\n\nRelease 2010k - 2010-07-26 10:42:27 -0400\n\n  [not summarized]\n\n\nRelease 2010j - 2010-05-10 09:07:48 -0400\n\n  changes for Bahía de Banderas and for version naming\n\n\nRelease data2010i - 2010-04-16 18:50:45 -0400\n\n  the end of DST in Morocco on 2010-08-08\n\n\nRelease data2010h - 2010-04-05 09:58:56 -0400\n\n  [not summarized]\n\n\nRelease data2010g - 2010-03-24 11:14:53 -0400\n\n  [not summarized]\n\n\nRelease 2010f - 2010-03-22 09:45:46 -0400\n\n  [not summarized]\n\n\nRelease data2010e - 2010-03-08 14:24:27 -0500\n\n  corrects the Dhaka bug found by Danvin Ruangchan\n\n\nRelease data2010d - 2010-03-06 07:26:01 -0500\n\n  [not summarized]\n\n\nRelease 2010c - 2010-03-01 09:20:58 -0500\n\n  changes including KRE's suggestion for earlier initialization of\n  \"goahead\" and \"goback\" structure elements\n\n\nRelease code2010a - 2010-02-16 10:40:04 -0500\n\n  [not summarized]\n\n\nRelease data2010b - 2010-01-20 12:37:01 -0500\n\n  Mexico changes\n\n\nRelease data2010a - 2010-01-18 08:30:04 -0500\n\n  changes to Dhaka\n\n\nRelease data2009u - 2009-12-26 08:32:28 -0500\n\n  changes to DST in Bangladesh\n\n\nRelease 2009t - 2009-12-21 13:24:27 -0500\n\n  [not summarized]\n\n\nRelease data2009s - 2009-11-14 10:26:32 -0500\n\n  (cosmetic) Antarctica change and the DST-in-Fiji-in-2009-and-2010 change\n\n\nRelease 2009r - 2009-11-09 10:10:31 -0500\n\n  \"antarctica\" and \"tz-link.htm\" changes\n\n\nRelease 2009q - 2009-11-02 09:12:40 -0500\n\n  with two corrections as reported by Eric Muller and Philip Newton\n\n\nRelease data2009p - 2009-10-23 15:05:27 -0400\n\n  Argentina (including San Luis) changes (with the correction from\n  Mariano Absatz)\n\n\nRelease data2009o - 2009-10-14 16:49:38 -0400\n\n  Samoa (commentary only), Pakistan, and Bangladesh changes\n\n\nRelease data2009n - 2009-09-22 15:13:38 -0400\n\n  added commentary for Argentina and a change to the end of DST in\n  2009 in Pakistan\n\n\nRelease data2009m - 2009-09-03 10:23:43 -0400\n\n  Samoa and Palestine changes\n\n\nRelease data2009l - 2009-08-14 09:13:07 -0400\n\n  Samoa (comments only) and Egypt\n\n\nRelease 2009k - 2009-07-20 09:46:08 -0400\n\n  [not summarized]\n\n\nRelease data2009j - 2009-06-15 06:43:59 -0400\n\n  Bangladesh change (with a short turnaround since the DST change is\n  impending)\n\n\nRelease 2009i - 2009-06-08 09:21:22 -0400\n\n  updating for DST in Bangladesh this year\n\n\nRelease 2009h - 2009-05-26 09:19:14 -0400\n\n  [not summarized]\n\n\nRelease data2009g - 2009-04-20 16:34:07 -0400\n\n  Cairo\n\n\nRelease data2009f - 2009-04-10 11:00:52 -0400\n\n  correct DST in Pakistan\n\n\nRelease 2009e - 2009-04-06 09:08:11 -0400\n\n  [not summarized]\n\n\nRelease 2009d - 2009-03-23 09:38:12 -0400\n\n  Morocco, Tunisia, Argentina, and American Astronomical Society changes\n\n\nRelease data2009c - 2009-03-16 09:47:51 -0400\n\n  change to the start of Cuban DST\n\n\nRelease 2009b - 2009-02-09 11:15:22 -0500\n\n  [not summarized]\n\n\nRelease 2009a - 2009-01-21 10:09:39 -0500\n\n  [not summarized]\n\n\nRelease data2008i - 2008-10-21 12:10:25 -0400\n\n  southamerica and zone.tab files, with Argentina DST rule changes and\n  United States zone reordering and recommenting\n\n\nRelease 2008h - 2008-10-13 07:33:56 -0400\n\n  [not summarized]\n\n\nRelease 2008g - 2008-10-06 09:03:18 -0400\n\n  Fix a broken HTML anchor and update Brazil's DST transitions;\n  there's also a slight reordering of information in tz-art.htm.\n\n\nRelease data2008f - 2008-09-09 22:33:26 -0400\n\n  [not summarized]\n\n\nRelease 2008e - 2008-07-28 14:11:17 -0400\n\n  changes by Arthur David Olson and Jesper Nørgaard Welen\n\n\nRelease data2008d - 2008-07-07 09:51:38 -0400\n\n  changes by Arthur David Olson, Paul Eggert, and Rodrigo Severo\n\n\nRelease data2008c - 2008-05-19 17:48:03 -0400\n\n  Pakistan, Morocco, and Mongolia\n\n\nRelease data2008b - 2008-03-24 08:30:59 -0400\n\n  including renaming Asia/Calcutta to Asia/Kolkata, with a backward\n  link provided\n\n\nRelease 2008a - 2008-03-08 05:42:16 -0500\n\n  [not summarized]\n\n\nRelease 2007k - 2007-12-31 10:25:22 -0500\n\n  most importantly, changes to the \"southamerica\" file based on\n  Argentina's readoption of daylight saving time\n\n\nRelease 2007j - 2007-12-03 09:51:01 -0500\n\n  1. eliminate the \"P\" (parameter) macro;\n\n  2. the \"noncontroversial\" changes circulated on the time zone\n  mailing list (less the changes to \"logwtmp.c\");\n\n  3. eliminate \"too many transition\" errors when \"min\" is used in time\n  zone rules;\n\n  4. changes by Paul Eggert (including updated information for Venezuela).\n\n\nRelease data2007i - 2007-10-30 10:28:11 -0400\n\n  changes for Cuba and Syria\n\n\nRelease 2007h - 2007-10-01 10:05:51 -0400\n\n  changes by Paul Eggert, as well as an updated link to the ICU\n  project in tz-link.htm\n\n\nRelease 2007g - 2007-08-20 10:47:59 -0400\n\n  changes by Paul Eggert\n\n  The \"leapseconds\" file has been updated to incorporate the most\n  recent International Earth Rotation and Reference Systems Service\n  (IERS) bulletin.\n\n  There's an addition to tz-art.htm regarding the television show \"Medium\".\n\n\nRelease 2007f - 2007-05-07 10:46:46 -0400\n\n  changes by Paul Eggert (including Haiti, Turks and Caicos, and New\n  Zealand)\n\n  changes to zic.c to allow hour values greater than 24 (along with\n  Paul's improved time value overflow checking)\n\n\nRelease 2007e - 2007-04-02 10:11:52 -0400\n\n  Syria and Honduras changes by Paul Eggert\n\n  zic.c variable renaming changes by Arthur David Olson\n\n\nRelease 2007d - 2007-03-20 08:48:30 -0400\n\n  changes by Paul Eggert\n\n  the elimination of white space at the ends of lines\n\n\nRelease 2007c - 2007-02-26 09:09:37 -0500\n\n  changes by Paul Eggert\n\n\nRelease 2007b - 2007-02-12 09:34:20 -0500\n\n  Paul Eggert's proposed change to the quotation handling logic in zic.c.\n\n  changes to the commentary in \"leapseconds\" reflecting the IERS\n  announcement that there is to be no positive leap second at the end\n  of June 2007.\n\n\nRelease 2007a - 2007-01-08 12:28:29 -0500\n\n  changes by Paul Eggert\n\n  Derick Rethans's Asmara change\n\n  Oscar van Vlijmen's Easter Island local mean time change\n\n  symbolic link changes\n\n\nRelease 2006p - 2006-11-27 08:54:27 -0500\n\n  changes by Paul Eggert\n\n\nRelease 2006o - 2006-11-06 09:18:07 -0500\n\n  changes by Paul Eggert\n\n\nRelease 2006n - 2006-10-10 11:32:06 -0400\n\n  changes by Paul Eggert\n\n\nRelease 2006m - 2006-10-02 15:32:35 -0400\n\n  changes for Uruguay, Palestine, and Egypt by Paul Eggert\n\n  (minimalist) changes to zic.8 to clarify \"until\" information\n\n\nRelease data2006l - 2006-09-18 12:58:11 -0400\n\n  Paul's best-effort work on this coming weekend's Egypt time change\n\n\nRelease 2006k - 2006-08-28 12:19:09 -0400\n\n  changes by Paul Eggert\n\n\nRelease 2006j - 2006-08-21 09:56:32 -0400\n\n  changes by Paul Eggert\n\n\nRelease code2006i - 2006-08-07 12:30:55 -0400\n\n  localtime.c fixes\n\n  Ken Pizzini's conversion script\n\n\nRelease code2006h - 2006-07-24 09:19:37 -0400\n\n  adds public domain notices to four files\n\n  includes a fix for transition times being off by a second\n\n  adds a new recording to the \"arts\" file (information courtesy Colin Bowern)\n\n\nRelease 2006g - 2006-05-08 17:18:09 -0400\n\n  northamerica changes by Paul Eggert\n\n\nRelease 2006f - 2006-05-01 11:46:00 -0400\n\n  a missing version number problem is fixed (with thanks to Bradley\n  White for catching the problem)\n\n\nRelease 2006d - 2006-04-17 14:33:43 -0400\n\n  changes by Paul Eggert\n\n  added new items to tz-arts.htm that were found by Paul\n\n\nRelease 2006c - 2006-04-03 10:09:32 -0400\n\n  two sets of data changes by Paul Eggert\n\n  a fencepost error fix in zic.c\n\n  changes to zic.c and the \"europe\" file to minimize differences\n  between output produced by the old 32-bit zic and the new 64-bit\n  version\n\n\nRelease 2006b - 2006-02-20 10:08:18 -0500\n  [tz32code2006b + tz64code2006b + tzdata2006b]\n\n  64-bit code\n\n  All SCCS IDs were bumped to \"8.1\" for this release.\n\n\nRelease 2006a - 2006-01-30 08:59:31 -0500\n\n  changes by Paul Eggert (in particular, Indiana time zone moves)\n\n  an addition to the zic manual page to describe how special-case\n  transitions are handled\n\n\nRelease 2005r - 2005-12-27 09:27:13 -0500\n\n  Canadian changes by Paul Eggert\n\n  They also add \"<pre>\" directives to time zone data files and reflect\n  changes to warning message logic in \"zdump.c\" (but with calls to\n  \"gettext\" kept unbundled at the suggestion of Ken Pizzini).\n\n\nRelease 2005q - 2005-12-13 09:17:09 -0500\n\n  Nothing earth-shaking here:\n\t1.  Electronic mail addresses have been removed.\n\t2.  Casts of the return value of exit have been removed.\n\t3.  Casts of the argument of is.* macros have been added.\n\t4.  Indentation in one section of zic.c has been fixed.\n\t5.  References to dead URLs in the data files have been dealt with.\n\n\nRelease 2005p - 2005-12-05 10:30:53 -0500\n\n  \"systemv\", \"tz-link.htm\", and \"zdump.c\" changes\n  (less the casts of arguments to the is* macros)\n\n\nRelease 2005o - 2005-11-28 10:55:26 -0500\n\n  Georgia, Cuba, Nicaragua, and Jordan changes by Paul Eggert\n\n  zdump.c lint fixes by Arthur David Olson\n\n\nRelease 2005n - 2005-10-03 09:44:09 -0400\n\n  changes by Paul Eggert (both the Uruguay changes and the Kyrgyzstan\n  et al. changes)\n\n\nRelease 2005m - 2005-08-29 12:15:40 -0400\n\n  changes by Paul Eggert (with a small tweak to the tz-art change)\n\n  a declaration of an unused variable has been removed from zdump.c\n\n\nRelease 2005l - 2005-08-22 12:06:39 -0400\n\n  changes by Paul Eggert\n\n  overflow/underflow checks by Arthur David Olson, minus changes to\n  the \"Theory\" file about the pending addition of 64-bit data (I grow\n  less confident of the changes being accepted with each passing day,\n  and the changes no longer increase the data files nine-fold--there's\n  less than a doubling in size by my local Sun's reckoning)\n\n\nRelease 2005k - 2005-07-14 14:14:24 -0400\n\n  The \"leapseconds\" file has been edited to reflect the recently\n  announced leap second at the end of 2005.\n\n  I've also deleted electronic mail addresses from the files as an\n  anti-spam measure.\n\n\nRelease 2005j - 2005-06-13 14:34:13 -0400\n\n  These reflect changes to limit the length of time zone abbreviations\n  and the characters used in those abbreviations.\n\n  There are also changes to handle POSIX-style \"quoted\" timezone\n  environment variables.\n\n  The changes were circulated on the time zone mailing list; the only\n  change since then was the removal of a couple of minimum-length of\n  abbreviation checks.\n\n\nRelease data2005i - 2005-04-21 15:04:16 -0400\n\n  changes (most importantly to Nicaragua and Haiti) by Paul Eggert\n\n\nRelease 2005h - 2005-04-04 11:24:47 -0400\n\n  changes by Paul Eggert\n\n  minor changes to Makefile and zdump.c to produce more useful output\n  when doing a \"make typecheck\"\n\n\nRelease 2005g - 2005-03-14 10:11:21 -0500\n\n  changes by Paul Eggert (a change to current DST rules in Uruguay and\n  an update to a link to time zone software)\n\n\nRelease 2005f - 2005-03-01 08:45:32 -0500\n\n  data and documentation changes by Paul Eggert\n\n\nRelease 2005e - 2005-02-10 15:59:44 -0500\n\n  [not summarized]\n\n\nRelease code2005d - 2005-01-31 09:21:47 -0500\n\n  make zic complain about links to links if the -v flag is used\n\n  have \"make public\" do more code checking\n\n  add an include to \"localtime.c\" for the benefit of gcc systems\n\n\nRelease 2005c - 2005-01-17 18:36:29 -0500\n\n  get better results when mktime runs on a system where time_t is double\n\n  changes to the data files (most importantly to Paraguay)\n\n\nRelease 2005b - 2005-01-10 09:19:54 -0500\n\n  Get localtime and gmtime working on systems with exotic time_t types.\n\n  Update the leap second commentary in the \"leapseconds\" file.\n\n\nRelease 2005a - 2005-01-01 13:13:44 -0500\n\n  [not summarized]\n\n\nRelease code2004i - 2004-12-14 13:42:58 -0500\n\n  Deal with systems where time_t is unsigned.\n\n\nRelease code2004h - 2004-12-07 11:40:18 -0500\n\n  64-bit-time_t changes\n\n\nRelease 2004g - 2004-11-02 09:06:01 -0500\n\n  update to Cuba (taking effect this weekend)\n\n  other changes by Paul Eggert\n\n  correction of the spelling of Oslo\n\n  changed versions of difftime.c and private.h\n\n\nRelease code2004f - 2004-10-21 10:25:22 -0400\n\n  Cope with wide-ranging tm_year values.\n\n\nRelease 2004e - 2004-10-11 14:47:21 -0400\n\n  Brazil/Argentina/Israel changes by Paul Eggert\n\n  changes to tz-link.htm by Paul\n\n  one small fix to Makefile\n\n\nRelease 2004d - 2004-09-22 08:27:29 -0400\n\n  Avoid overflow problems when TM_YEAR_BASE is added to an integer.\n\n\nRelease 2004c - 2004-08-11 12:06:26 -0400\n\n  asctime-related changes\n\n  (variants of) some of the documentation changes suggested by Paul Eggert\n\n\nRelease 2004b - 2004-07-19 14:33:35 -0400\n\n  data changes by Paul Eggert - most importantly, updates for Argentina\n\n\nRelease 2004a - 2004-05-27 12:00:47 -0400\n\n  changes by Paul Eggert\n\n  Handle DST transitions that occur at the end of a month in some\n  years but at the start of the following month in other years.\n\n  Add a copy of the correspondence that's the basis for claims about\n  DST in the Navajo Nation.\n\n\nRelease 2003e - 2003-12-15 09:36:47 -0500\n\n  changes by Arthur David Olson (primarily code changes)\n\n  changes by Paul Eggert (primarily data changes)\n\n  minor changes to \"Makefile\" and \"northamerica\" (in the latter case,\n  optimization of the \"Toronto\" rules)\n\n\nRelease 2003d - 2003-10-06 09:34:44 -0400\n\n  changes by Paul Eggert\n\n\nRelease 2003c - 2003-09-16 10:47:05 -0400\n\n  Fix bad returns in zic.c's inleap function.\n  Thanks to Bradley White for catching the problem!\n\n\nRelease 2003b - 2003-09-16 07:13:44 -0400\n\n  Add a \"--version\" option (and documentation) to the zic and zdump commands.\n\n  changes to overflow/underflow checking in zic\n\n  a localtime typo fix.\n\n  Update the leapseconds and tz-art.htm files.\n\n\nRelease 2003a - 2003-03-24 09:30:54 -0500\n\n  changes by Paul Eggert\n\n  a few additions and modifications to the tz-art.htm file\n\n\nRelease 2002d - 2002-10-15 13:12:42 -0400\n\n  changes by Paul Eggert, less the \"Britain (UK)\" change in iso3166.tab\n\n  There's also a new time zone quote in \"tz-art.htm\".\n\n\nRelease 2002c - 2002-04-04 11:55:20 -0500\n\n  changes by Paul Eggert\n\n  Change zic.c to avoid creating symlinks to files that don't exist.\n\n\nRelease 2002b - 2002-01-28 12:56:03 -0500\n\n  [These change notes are for Release 2002a, which was corrupted.\n  2002b was a corrected version of 2002a.]\n\n  changes by Paul Eggert\n\n  Update the \"leapseconds\" file to note that there'll be no leap\n  second at the end of June, 2002.\n\n  Change \"zic.c\" to deal with a problem in handling the \"Asia/Bishkek\" zone.\n\n  Change to \"difftime.c\" to avoid sizeof problems.\n\n\nRelease 2001d - 2001-10-09 13:31:32 -0400\n\n  changes by Paul Eggert\n\n\nRelease 2001c - 2001-06-05 13:59:55 -0400\n\n  changes by Paul Eggert and Andrew Brown\n\n\nRelease 2001b - 2001-04-05 16:44:38 -0400\n\n  changes by Paul Eggert (modulo jnorgard's typo fix)\n\n  tz-art.htm has been HTMLified.\n\n\nRelease 2001a - 2001-03-13 12:57:44 -0500\n\n  changes by Paul Eggert\n\n  An addition to the \"leapseconds\" file: comments with the text of the\n  latest IERS leap second notice.\n\n  Trailing white space has been removed from data file lines, and\n  repeated spaces in \"Rule Jordan\" lines in the \"asia\" file have been\n  converted to tabs.\n\n\nRelease 2000h - 2000-12-14 15:33:38 -0500\n\n  changes by Paul Eggert\n\n  one typo fix in the \"art\" file\n\n  With providence, this is the last update of the millennium.\n\n\nRelease 2000g - 2000-10-10 11:35:22 -0400\n\n  changes by Paul Eggert\n\n  correction of John Mackin's name submitted by Robert Elz\n\n  Garry Shandling's Daylight Saving Time joke (!?!) from the recent\n  Emmy Awards broadcast.\n\n\nRelease 2000f - 2000-08-10 09:31:58 -0400\n\n  changes by Paul Eggert\n\n  Added information in \"tz-art.htm\" on a Seinfeld reference to DST.\n\n  Error checking and messages in the \"yearistype\" script have been\n  improved.\n\n\nRelease 2000e - 2000-07-31 09:27:54 -0400\n\n  data changes by Paul Eggert\n\n  a change to the default value of the defined constant HAVE_STRERROR\n\n  the addition of a Dave Barry quote on DST to the tz-arts file\n\n\nRelease 2000d - 2000-04-20 15:43:04 -0400\n\n  changes to the documentation and code of strftime for C99 conformance\n\n  a bug fix for date.c\n\n  These are based on (though modified from) changes by Paul Eggert.\n\n\nRelease 2000c - 2000-03-04 10:31:43 -0500\n\n  changes by Paul Eggert\n\n\nRelease 2000b - 2000-02-21 12:16:29 -0500\n\n  changes by Paul Eggert and Joseph Myers\n\n  modest tweaks to the tz-art.htm and tz-link.htm files\n\n\nRelease 2000a - 2000-01-18 09:21:26 -0500\n\n  changes by Paul Eggert\n\n  The two hypertext documents have also been renamed.\n\n\nRelease code1999i-data1999j - 1999-11-15 18:43:22 -0500\n\n  Paul Eggert's changes\n\n  additions to the \"zic\" manual page and the \"Arts.htm\" file\n\n\nRelease code1999h-data1999i - 1999-11-08 14:55:21 -0500\n\n  [not summarized]\n\n\nRelease data1999h - 1999-10-07 03:50:29 -0400\n\n  changes by Paul Eggert to \"europe\" (most importantly, fixing\n  Lithuania and Estonia)\n\n\nRelease 1999g - 1999-09-28 11:06:18 -0400\n\n  data changes by Paul Eggert (most importantly, the change for\n  Lebanon that buys correctness for this coming Sunday)\n\n  The \"code\" file contains changes to \"Makefile\" and \"checktab.awk\" to\n  allow better checking of time zone files before they are published.\n\n\nRelease 1999f - 1999-09-23 09:48:14 -0400\n\n  changes by Arthur David Olson and Paul Eggert\n\n\nRelease 1999e - 1999-08-17 15:20:54 -0400\n\n  changes circulated by Paul Eggert, although the change to handling\n  of DST-specifying timezone names has been commented out for now\n  (search for \"XXX\" in \"localtime.c\" for details).  These files also\n  do not make any changes to the start of DST in Brazil.\n\n  In addition to Paul's changes, there are updates to \"Arts.htm\" and\n  cleanups of URLs.\n\n\nRelease 1999d - 1999-03-30 11:31:07 -0500\n\n  changes by Paul Eggert\n\n  The Makefile's \"make public\" rule has also been changed to do a test\n  compile of each individual time zone data file (which should help\n  avoid problems such as the one we had with Nicosia).\n\n\nRelease 1999c - 1999-03-25 09:47:47 -0500\n\n  changes by Paul Eggert, most importantly the change for Chile.\n\n\nRelease 1999b - 1999-02-01 17:51:44 -0500\n\n  changes by Paul Eggert\n\n  code changes (suggested by Mani Varadarajan, mani at be.com) for\n  correct handling of symbolic links when building using a relative directory\n\n  code changes to generate correct messages for failed links\n\n  updates to the URLs in Arts.htm\n\n\nRelease 1999a - 1999-01-19 16:20:29 -0500\n\n  error message internationalizations and corrections in zic.c and\n  zdump.c (as suggested by Vladimir Michl, vladimir.michl at upol.cz,\n  to whom thanks!)\n\n\nRelease code1998h-data1998i - 1998-10-01 09:56:10 -0400\n\n  changes for Brazil, Chile, and Germany\n\n  support for use of \"24:00\" in the input files for the time zone compiler\n\n\nRelease code1998g-data1998h - 1998-09-24 10:50:28 -0400\n\n  changes by Paul Eggert\n\n  correction to a define in the \"private.h\" file\n\n\nRelease data1998g - 1998-08-11 03:28:35 -0000\n  [tzdata1998g.tar.gz is missing!]\n\n  Lithuanian change provided by mgedmin at pub.osf.it\n\n  Move creation of the GMT link with Etc/GMT to \"etcetera\" (from\n  \"backward\") to ensure that the GMT file is created even where folks\n  don't want the \"backward\" links (as suggested by Paul Eggert).\n\n\nRelease data1998f - 1998-07-20 13:50:00 -0000\n  [tzdata1998f.tar.gz is missing!]\n\n  Update the \"leapseconds\" file to include the newly announced\n  insertion at the end of 1998.\n\n\nRelease code1998f - 1998-06-01 10:18:31 -0400\n\n  addition to localtime.c by Guy Harris\n\n\nRelease 1998e - 1998-05-28 09:56:26 -0400\n\n  The Makefile is changed to produce zoneinfo-posix rather than\n  zoneinfo/posix, and to produce zoneinfo-leaps rather than\n  zoneinfo/right.\n\n  data changes by Paul Eggert\n\n  changes from Guy Harris to provide asctime_r and ctime_r\n\n  A usno1998 file (substantially identical to usno1997) has been added.\n\n\nRelease 1998d - 1998-05-14 11:58:34 -0400\n\n  changes to comments (in particular, elimination of references to CIA maps).\n  \"Arts.htm\", \"WWW.htm\", \"asia\", and \"australasia\" are the only places\n  where changes occur.\n\n\nRelease 1998c - 1998-02-28 12:32:26 -0500\n\n  changes by Paul Eggert (save the \"French correction,\" on which I'll\n  wait for the dust to settle)\n\n  symlink changes\n\n  changes and additions to Arts.htm\n\n\nRelease 1998b - 1998-01-17 14:31:51 -0500\n\n  URL cleanups and additions\n\n\nRelease 1998a - 1998-01-13 12:37:35 -0500\n\n  changes by Paul Eggert\n\n\nRelease code1997i-data1997k - 1997-12-29 09:53:41 -0500\n\n  changes by Paul Eggert, with minor modifications from Arthur David\n  Olson to make the files more browser friendly\n\n\nRelease code1997h-data1997j - 1997-12-18 17:47:35 -0500\n\n  minor changes to put \"TZif\" at the start of each timezone information file\n\n  a rule has also been added to the Makefile so you can\n\tmake zones\n  to just recompile the zone information files (rather than doing a\n  full \"make install\" with its other effects).\n\n\nRelease data1997i - 1997-10-07 08:45:38 -0400\n\n  changes to Africa by Paul Eggert\n\n\nRelease code1997g-data1997h - 1997-09-04 16:56:54 -0400\n\n  corrections for Uruguay (and other locations)\n\n  Arthur David Olson's simple-minded fix allowing mktime to both\n  correctly handle leap seconds and correctly handle tm_sec values\n  upon which arithmetic has been performed.\n\n\nRelease code1997f-data1997g - 1997-07-19 13:15:02 -0400\n\n  Paul Eggert's updates\n\n  a small change to a function prototype;\n\n  \"Music\" has been renamed \"Arts.htm\", HTMLified, and augmented to\n  include information on Around the World in Eighty Days.\n\n\nRelease code1997e-data1997f - 1997-05-03 18:52:34 -0400\n\n  fixes to zic's error handling\n\n  changes inspired by the item circulated on Slovenia\n\n  The description of Web resources has been HTMLified for browsing\n  convenience.\n\n  A new piece of tz-related music has been added to the \"Music\" file.\n\n\nRelease code1997d-data1997e - 1997-03-29 12:48:52 -0500\n\n  Paul Eggert's latest suggestions\n\n\nRelease code1997c-data1997d - 1997-03-07 20:37:54 -0500\n\n  changes to \"zic.c\" to correct performance of the \"-s\" option\n\n  a new file \"usno1997\"\n\n\nRelease data1997c - 1997-03-04 09:58:18 -0500\n\n  changes in Israel\n\n\nRelease 1997b - 1997-02-27 18:34:19 -0500\n\n  The data file incorporates the 1997 leap second.\n\n  The code file incorporates Arthur David Olson's take on the\n  zic/multiprocessor/directory-creation situation.\n\n\nRelease 1997a - 1997-01-21 09:11:10 -0500\n\n  Paul Eggert's Antarctica (and other changes)\n\n  Arthur David Olson finessed the \"getopt\" issue by checking against\n  both -1 and EOF (regardless of POSIX, SunOS 4.1.1's manual says -1\n  is returned while SunOS 5.5's manual says EOF is returned).\n\n\nRelease code1996o-data1996n - 1996-12-27 21:42:05 -0500\n\n  Paul Eggert's latest changes\n\n\nRelease code1996n - 1996-12-16 09:42:02 -0500\n\n  link snapping fix from Bruce Evans (via Garrett Wollman)\n\n\nRelease data1996m - 1996-11-24 02:37:34 -0000\n  [tzdata1996m.tar.gz is missing!]\n\n  Paul Eggert's batch of changes\n\n\nRelease code1996m-data1996l - 1996-11-05 14:00:12 -0500\n\n  No functional changes here; the files have simply been changed to\n  make more use of ISO style dates in comments. The names of the above\n  files now include the year in full.\n\n\nRelease code96l - 1996-09-08 17:12:20 -0400\n\n  tzcode96k was missing a couple of pieces.\n\n\nRelease 96k - 1996-09-08 16:06:22 -0400\n\n  the latest round of changes from Paul Eggert\n\n  the recent Year 2000 material\n\n\nRelease code96j - 1996-07-30 13:18:53 -0400\n\n  Set sp->typecnt as suggested by Timothy Patrick Murphy.\n\n\nRelease code96i - 1996-07-27 20:11:35 -0400\n\n  Paul's suggested patch for strftime %V week numbers\n\n\nRelease data96i - 1996-07-01 18:13:04 -0400\n\n  \"northamerica\" and \"europe\" changes by Paul Eggert\n\n\nRelease code96h - 1996-06-05 08:02:21 -0400\n\n  fix for handling transitions specified in Universal Time\n\n  Some \"public domain\" notices have also been added.\n\n\nRelease code96g - 1996-05-16 14:00:26 -0400\n\n  fix for the simultaneous-DST-and-zone-change challenge\n\n\nRelease data96h - 1996-05-09 17:40:51 -0400\n\n  changes by Paul Eggert\n\n\nRelease code96f-data96g - 1996-05-03 03:09:59 -0000\n  [tzcode96f.tar.gz + tzdata96g.tar.gz are both missing!]\n\n  The changes get us some of the way to fixing the problems noted in Paul\n  Eggert's letter yesterday (in addition to a few others).  The approach\n  has been to make zic a bit smarter about figuring out what time zone\n  abbreviations apply just after the time specified in the \"UNTIL\" part\n  of a zone line.  Putting the smarts in zic means avoiding having\n  transition times show up in both \"Zone\" lines and \"Rule\" lines, which\n  in turn avoids multiple transition time entries in time zone files.\n  (This also makes the zic input files such as \"europe\" a bit shorter and\n  should ease maintenance.)\n\n\nRelease data96f - 1996-04-19 19:20:03 -0000\n  [tzdata96f.tar.gz is missing!]\n\n  The only changes are to the \"northamerica\" file; the time zone\n  abbreviation for Denver is corrected to MST (and MDT), and the\n  comments for Mexico have been updated.\n\n\nRelease data96e - 1996-03-19 17:37:26 -0500\n\n  Proposals by Paul Eggert, in particular the Portugal change that\n  comes into play at the end of this month.\n\n\nRelease data96d - 1996-03-18 20:49:39 -0500\n\n  [not summarized]\n\n\nRelease code96e - 1996-02-29 15:43:27 -0000\n  [tzcode96e.tar.gz is missing!]\n\n  internationalization changes and the fix to the documentation for strftime\n\n\nRelease code96d-data96c - 1996-02-12 11:05:27 -0500\n\n  The \"code\" file simply updates Bob Kridle's electronic address.\n\n  The \"data\" file updates rules for Mexico.\n\n\nRelease data96b - 1996-01-27 15:44:42 -0500\n\n  Kiribati change\n\n\nRelease code96c - 1996-01-16 16:58:15 -0500\n\n  leap-year streamlining and binary-search changes\n\n  fix to newctime.3\n\n\nRelease code96b - 1996-01-10 20:42:39 -0500\n\n  fixes and enhancements from Paul Eggert, including code that\n  emulates the behavior of recent versions of the SunOS \"date\"\n  command.\n\n\nRelease 96a - 1996-01-06 09:08:24 -0500\n\n  Israel updates\n\n  fixes to strftime.c for correct ISO 8601 week number generation,\n  plus support for two new formats ('G' and 'g') to give ISO 8601 year\n  numbers (which are not necessarily the same as calendar year numbers)\n\n\nRelease code95i-data95m - 1995-12-21 12:46:47 -0500\n\n  The latest revisions from Paul Eggert are included, the usno1995\n  file has been updated, and a new file (\"WWW\") covering useful URLs\n  has been added.\n\n\nRelease code95h-data95l - 1995-12-19 18:10:12 -0500\n\n  A simplification of a macro definition, a change to data for Sudan,\n  and (for last minute shoppers) notes in the \"Music\" file on the CD\n  \"Old Man Time\".\n\n\nRelease code95g-data95k - 1995-10-30 10:32:47 -0500\n\n  (slightly reformatted) 8-bit-clean proposed patch\n\n  minor patch: US/Eastern -> America/New_York\n\n  snapshot of the USNO's latest data (\"usno1995\")\n\n  some other minor cleanups\n\n\nRelease code95f-data95j - 1995-10-28 21:01:34 -0000\n  [tzcode95f.tar.gz + tzdata95j.tar.gz are both missing!]\n\n  European cleanups\n\n  support for 64-bit time_t's\n\n  optimization in localtime.c\n\n\nRelease code95e - 1995-10-13 13:23:57 -0400\n\n  the mktime change to scan from future to past when trying to find time zone\n  offsets\n\n\nRelease data95i - 1995-09-26 10:43:26 -0400\n\n  For Canada/Central, guess that the Sun customer's \"one week too\n  early\" was just a approximation, and the true error is one month\n  too early.  This is consistent with the rest of Canada.\n\n\nRelease data95h - 1995-09-21 11:26:48 -0400\n\n  latest changes from Paul Eggert\n\n\nRelease code95d - 1995-09-14 11:14:45 -0400\n\n  the addition of a \"Music\" file, which documents four recorded\n  versions of the tune \"Save That Time\".\n\n\nRelease data95g - 1995-09-01 17:21:36 -0400\n\n  \"yearistype\" correction\n\n\nRelease data95f - 1995-08-28 20:46:56 -0400\n\n  Paul Eggert's change to the australasia file\n\n\nRelease data95e - 1995-07-08 18:02:34 -0400\n\n  The only change is a leap second at the end of this year.\n  Thanks to Bradley White for forwarding news on the leap second.\n\n\nRelease data95d - 1995-07-03 13:26:22 -0400\n\n  Paul Eggert's changes\n\n\nRelease data95c - 1995-07-02 19:19:28 -0400\n\n  changes to \"asia\", \"backward\", \"europe\", and \"southamerica\"\n  (read: northamericacentrics need not apply)\n\n\nRelease code95c - 1995-03-13 14:00:46 -0500\n\n  one-line fix for sign extension problems in detzcode\n\n\nRelease 95b - 1995-03-04 11:22:38 -0500\n\n  Minor changes in both:\n\n  The \"code\" file contains a workaround for the lack of \"unistd.h\" in\n  Microsoft C++ version 7.\n\n  The \"data\" file contains a fixed \"Link\" for America/Shiprock.\n\n\nRelease 94h - 1994-12-10 12:51:14 -0500\n\n  The files:\n\n  *\tincorporate the changes to \"zdump\" and \"date\" to make changes to\n\tthe \"TZ\" environment variable permanent;\n\n  *\tincorporate the table changes by Paul Eggert;\n\n  *\tinclude (and document) support for universal time specifications in\n\tdata files - but do not (yet) include use of this feature in the\n\tdata files.\n\n  Think of this as \"TZ Classic\" - the software has been set up not to break if\n  universal time shows up in its input, and data entries have been\n  left as is so as not to break existing implementations.\n\n\nRelease data94f - 1994-08-20 12:56:09 -0400\n\n  (with thanks!) the latest data updates from Paul Eggert\n\n\nRelease data94e - 1994-06-04 13:13:53 -0400\n\n  [not summarized]\n\n\nRelease code94g - 1994-05-05 12:14:07 -0400\n\n  fix missing \"optind.c\" and a reference to it in the Makefile\n\n\nRelease code94f - 1994-05-05 13:00:33 -0000\n  [tzcode94f.tar.gz is missing!]\n\n  changes to avoid overflow in difftime, as well as changes to cope\n  with the 52/53 challenge in strftime\n\n\nRelease code94e - 1994-03-30 23:32:59 -0500\n\n  change for the benefit of PCTS\n\n\nRelease 94d - 1994-02-24 15:42:25 -0500\n\n  Avoid clashes with POSIX semantics for zones such as GMT+4.\n\n  Some other very minor housekeeping is also present.\n\n\nRelease code94c - 1994-02-10 08:52:40 -0500\n\n  Fix bug where mkdirs was broken unless you compile with\n  -fwritable-strings (which is generally losing to do).\n\n\nRelease 94b - 1994-02-07 10:04:33 -0500\n\n  work by Paul Eggert who notes:\n\n  I found another book of time zone histories by E W Whitman; it's not\n  as extensive as Shanks but has a few goodies of its own.  I used it\n  to update the tables.  I also fixed some more as a result of\n  correspondence with Adam David and Peter Ilieve, and move some stray\n  links from 'europe' to 'backward'.  I corrected some scanning errors\n  in usno1989.\n\n  As far as the code goes, I fixed zic to allow years in the range\n  INT_MIN to INT_MAX; this fixed a few boundary conditions around 1900.\n  And I cleaned up the zic documentation a little bit.\n\n\nRelease data94a - 1994-02-03 08:58:54 -0500\n\n  It simply incorporates the recently announced leap second into the\n  \"leapseconds\" file.\n\n\nRelease 93g - 1993-11-22 17:28:27 -0500\n\n  Paul Eggert has provided a good deal of historic information (based\n  on Shanks), and there are some code changes to deal with the buglets\n  that crawled out in dealing with the new information.\n\n\nRelease 93f - 1993-10-15 12:27:46 -0400\n\n  Paul Eggert's changes\n\n\nRelease 93e - 1993-09-05 21:21:44 -0400\n\n  This has updated data for Israel, England, and Kwajalein.  There's\n  also an update to \"zdump\" to cope with Kwajalein's 24-hour jump.\n  Thanks to Paul Eggert and Peter Ilieve for the changes.\n\n\nRelease 93d - 1993-06-17 23:34:17 -0400\n\n  new fix and new data on Israel\n\n\nRelease 93c - 1993-06-06 19:31:55 -0400\n\n  [not summarized]\n\n\nRelease 93b - 1993-02-02 14:53:58 -0500\n\n  updated \"leapseconds\" file\n\n\nRelease 93 - 1993-01-08 07:01:06 -0500\n\n  At kre's suggestion, the package has been split in two - a code piece\n  (which also includes documentation) that's only of use to folks who\n  want to recompile things and a data piece useful to anyone who can\n  run \"zic\".\n\n  The new version has a few changes to the data files, a few\n  portability changes, and an off-by-one fix (with thanks to\n  Tom Karzes at deshaw.com for providing a description and a\n  solution).\n\n\nRelease 92c - 1992-11-21 17:35:36 -0000\n  [tz92c.tar.Z is missing!]\n\n  The fallout from the latest round of DST transitions.\n\n  There are changes for Portugal, Saskatchewan, and \"Pacific-New\";\n  there's also a change to \"zic.c\" that makes it portable to more systems.\n\n\nRelease 92 - 1992-04-25 18:17:03 -0000\n  [tz92.tar.Z is missing!]\n\n  By popular demand (well, at any rate, following a request by kre at munnari)\n\n\nThe 1989 update of the time zone package featured:\n\n  *\tPOSIXization (including interpretation of POSIX-style TZ environment\n\tvariables, provided by Guy Harris),\n  *\tANSIfication (including versions of \"mktime\" and \"difftime\"),\n  *\tSVIDulation (an \"altzone\" variable)\n  *\tMACHination (the \"gtime\" function)\n  *\tcorrections to some time zone data (including corrections to the rules\n\tfor Great Britain and New Zealand)\n  *\treference data from the United States Naval Observatory for folks who\n\twant to do additional time zones\n  *\tand the 1989 data for Saudi Arabia.\n\n  (Since this code will be treated as \"part of the implementation\" in some\n  places and as \"part of the application\" in others, there's no good way to\n  name functions, such as timegm, that are not part of the proposed ANSI C\n  standard; such functions have kept their old, underscore-free names in this\n  update.)\n\n  And the \"dysize\" function has disappeared; it was present to allow\n  compilation of the \"date\" command on old BSD systems, and a version of \"date\"\n  is now provided in the package.  The \"date\" command is not created when you\n  \"make all\" since it may lack options provided by the version distributed with\n  your operating system, or may not interact with the system in the same way\n  the native version does.\n\n  Since POSIX frowns on correct leap second handling, the default behavior of\n  the \"zic\" command (in the absence of a \"-L\" option) has been changed to omit\n  leap second information from its output files.\n\n\n-----\nNotes\n\nThis file contains copies of the part of each release announcement\nthat talks about the changes in that release.  The text has been\nadapted and reformatted for the purposes of this file.\n\nTraditionally a release R consists of a pair of tarball files,\ntzcodeR.tar.gz and tzdataR.tar.gz.  However, some releases (e.g.,\ncode2010a, data2012c) consist of just one or the other tarball, and a\nfew (e.g., code2012c-data2012d) have tarballs with mixed version\nnumbers.  Recent releases also come in an experimental format\nconsisting of a single tarball tzdb-R.tar.lz with extra data.\n\nRelease timestamps are taken from the release's commit (for newer,\nGit-based releases), from the newest file in the tarball (for older\nreleases, where this info is available) or from the email announcing\nthe release (if all else fails; these are marked with a time zone\nabbreviation of -0000 and an \"is missing!\" comment).\n\nEarlier versions of the code and data were not announced on the tz\nlist and are not summarized here.\n\nThis file is in the public domain.\n\nLocal Variables:\ncoding: utf-8\nEnd:\n"
        },
        {
          "name": "README",
          "type": "blob",
          "size": 2.3779296875,
          "content": "README for the tz distribution\n\n\"Where do I set the hands of the clock?\" -- Les Tremayne as The King\n\"Oh that--you can set them any place you want.\" -- Frank Baxter as The Scientist\n\t\t\t\t\t(from the Bell System film \"About Time\")\n\nThe Time Zone Database (called tz, tzdb or zoneinfo) contains code and\ndata that represent the history of local time for many representative\nlocations around the globe.  It is updated periodically to reflect\nchanges made by political bodies to time zone boundaries, UTC offsets,\nand daylight-saving rules.\n\nSee <https://www.iana.org/time-zones/repository/tz-link.html> or the\nfile tz-link.html for how to acquire the code and data.\n\nOnce acquired, read the leading comments in the file \"Makefile\"\nand make any changes needed to make things right for your system,\nespecially when using a platform other than current GNU/Linux.\n\nThen run the following commands, substituting your desired\ninstallation directory for \"$HOME/tzdir\":\n\n\tmake TOPDIR=\"$HOME/tzdir\" install\n\t\"$HOME/tzdir/usr/bin/zdump\" -v America/Los_Angeles\n\nSee the file tz-how-to.html for examples of how to read the data files.\n\nThis database of historical local time information has several goals:\n\n * Provide a compendium of data about the history of civil time that\n   is useful even if not 100% accurate.\n\n * Give an idea of the variety of local time rules that have existed\n   in the past and thus may be expected in the future.\n\n * Test the generality of the local time rule description system.\n\nThe information in the time zone data files is by no means authoritative;\nfixes and enhancements are welcome.  Please see the file CONTRIBUTING\nfor details.\n\nThanks to these Time Zone Caballeros who've made major contributions to the\ntime conversion package: Keith Bostic; Bob Devine; Paul Eggert; Robert Elz;\nGuy Harris; Mark Horton; John Mackin; and Bradley White.  Thanks also to\nMichael Bloom, Art Neilson, Stephen Prince, John Sovereign, and Frank Wales\nfor testing work, and to Gwillim Law for checking local mean time data.\nThanks in particular to Arthur David Olson, the project's founder and first\nmaintainer, to whom the time zone community owes the greatest debt of all.\nNone of them are responsible for remaining errors.\n\n-----\n\nThis file is in the public domain, so clarified as of 2009-05-17 by\nArthur David Olson.  The other files in this distribution are either\npublic domain or BSD licensed; see the file LICENSE for details.\n"
        },
        {
          "name": "SECURITY",
          "type": "blob",
          "size": 0.7548828125,
          "content": "Please report any sensitive security-related bugs via email to the\ntzdb designated coordinators, currently Paul Eggert\n<eggert@cs.ucla.edu> and Tim Parenti <tim@timtimeonline.com>.\nPut \"tzdb security\" at the start of your email's subject line.\nWe prefer communications to be in English.\n\nYou should receive a response within a week. If not, please follow up\nvia email to make sure we received your original message.\n\nIf we confirm the bug, we plan to notify affected third-party services\nor software that we know about, prepare an advisory, commit fixes to\nthe main development branch as quickly as is practical, and finally\npublish the advisory on tz@iana.org.  As with all tzdb contributions,\nwe give credit to security contributors unless they wish to remain\nanonymous.\n"
        },
        {
          "name": "africa",
          "type": "blob",
          "size": 62.0576171875,
          "content": "# tzdb data for Africa and environs\n\n# This file is in the public domain, so clarified as of\n# 2009-05-17 by Arthur David Olson.\n\n# This file is by no means authoritative; if you think you know better,\n# go ahead and edit the file (and please send any changes to\n# tz@iana.org for general use in the future).  For more, please see\n# the file CONTRIBUTING in the tz distribution.\n\n# From Paul Eggert (2018-05-27):\n#\n# Unless otherwise specified, the source for data through 1990 is:\n# Thomas G. Shanks and Rique Pottenger, The International Atlas (6th edition),\n# San Diego: ACS Publications, Inc. (2003).\n# Unfortunately this book contains many errors and cites no sources.\n#\n# Many years ago Gwillim Law wrote that a good source\n# for time zone data was the International Air Transport\n# Association's Standard Schedules Information Manual (IATA SSIM),\n# published semiannually.  Law sent in several helpful summaries\n# of the IATA's data after 1990.  Except where otherwise noted,\n# IATA SSIM is the source for entries after 1990.\n#\n# Another source occasionally used is Edward W. Whitman, World Time Differences,\n# Whitman Publishing Co, 2 Niagara Av, Ealing, London (undated), which\n# I found in the UCLA library.\n#\n# For data circa 1899, a common source is:\n# Milne J. Civil time. Geogr J. 1899 Feb;13(2):173-94.\n# https://www.jstor.org/stable/1774359\n#\n# For the 1911/1912 establishment of standard time in French possessions, see:\n# Société Française de Physique, Recueil de constantes physiques (1913),\n# page 752, 18b.\n#\n# European-style abbreviations are commonly used along the Mediterranean.\n# For sub-Saharan Africa abbreviations were less standardized.\n# Previous editions of this database used WAT, CAT, SAT, and EAT\n# for UT +00 through +03, respectively,\n# but in 1997 Mark R V Murray reported that\n# 'SAST' is the official abbreviation for +02 in the country of South Africa,\n# 'CAT' is commonly used for +02 in countries north of South Africa, and\n# 'WAT' is probably the best name for +01, as the common phrase for\n# the area that includes Nigeria is \"West Africa\".\n#\n# To summarize, the following abbreviations seemed to have some currency:\n#\t +00\tGMT\tGreenwich Mean Time\n#\t +02\tCAT\tCentral Africa Time\n#\t +02\tSAST\tSouth Africa Standard Time\n# and Murray suggested the following abbreviation:\n#\t +01\tWAT\tWest Africa Time\n# Murray's suggestion seems to have caught on in news reports and the like.\n# I vaguely recall 'WAT' also being used for -01 in the past but\n# cannot now come up with solid citations.\n#\n# I invented the following abbreviations in the 1990s:\n#\t +02\tWAST\tWest Africa Summer Time\n#\t +03\tCAST\tCentral Africa Summer Time\n#\t +03\tSAST\tSouth Africa Summer Time\n#\t +03\tEAT\tEast Africa Time\n# 'EAT' seems to have caught on and is in current timestamps, and though\n# the other abbreviations are rarer and are only in past timestamps,\n# they are paired with better-attested non-DST abbreviations.\n# Corrections are welcome.\n\n# Algeria\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tAlgeria\t1916\tonly\t-\tJun\t14\t23:00s\t1:00\tS\nRule\tAlgeria\t1916\t1919\t-\tOct\tSun>=1\t23:00s\t0\t-\nRule\tAlgeria\t1917\tonly\t-\tMar\t24\t23:00s\t1:00\tS\nRule\tAlgeria\t1918\tonly\t-\tMar\t 9\t23:00s\t1:00\tS\nRule\tAlgeria\t1919\tonly\t-\tMar\t 1\t23:00s\t1:00\tS\nRule\tAlgeria\t1920\tonly\t-\tFeb\t14\t23:00s\t1:00\tS\nRule\tAlgeria\t1920\tonly\t-\tOct\t23\t23:00s\t0\t-\nRule\tAlgeria\t1921\tonly\t-\tMar\t14\t23:00s\t1:00\tS\nRule\tAlgeria\t1921\tonly\t-\tJun\t21\t23:00s\t0\t-\nRule\tAlgeria\t1939\tonly\t-\tSep\t11\t23:00s\t1:00\tS\nRule\tAlgeria\t1939\tonly\t-\tNov\t19\t 1:00\t0\t-\nRule\tAlgeria\t1944\t1945\t-\tApr\tMon>=1\t 2:00\t1:00\tS\nRule\tAlgeria\t1944\tonly\t-\tOct\t 8\t 2:00\t0\t-\nRule\tAlgeria\t1945\tonly\t-\tSep\t16\t 1:00\t0\t-\nRule\tAlgeria\t1971\tonly\t-\tApr\t25\t23:00s\t1:00\tS\nRule\tAlgeria\t1971\tonly\t-\tSep\t26\t23:00s\t0\t-\nRule\tAlgeria\t1977\tonly\t-\tMay\t 6\t 0:00\t1:00\tS\nRule\tAlgeria\t1977\tonly\t-\tOct\t21\t 0:00\t0\t-\nRule\tAlgeria\t1978\tonly\t-\tMar\t24\t 1:00\t1:00\tS\nRule\tAlgeria\t1978\tonly\t-\tSep\t22\t 3:00\t0\t-\nRule\tAlgeria\t1980\tonly\t-\tApr\t25\t 0:00\t1:00\tS\nRule\tAlgeria\t1980\tonly\t-\tOct\t31\t 2:00\t0\t-\n# See Europe/Paris for PMT-related transitions.\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAfrica/Algiers\t0:12:12 -\tLMT\t1891 Mar 16\n\t\t\t0:09:21\t-\tPMT\t1911 Mar 11 # Paris Mean Time\n\t\t\t0:00\tAlgeria\tWE%sT\t1940 Feb 25  2:00\n\t\t\t1:00\tAlgeria\tCE%sT\t1946 Oct  7\n\t\t\t0:00\t-\tWET\t1956 Jan 29\n\t\t\t1:00\t-\tCET\t1963 Apr 14\n\t\t\t0:00\tAlgeria\tWE%sT\t1977 Oct 21\n\t\t\t1:00\tAlgeria\tCE%sT\t1979 Oct 26\n\t\t\t0:00\tAlgeria\tWE%sT\t1981 May\n\t\t\t1:00\t-\tCET\n\n# Cape Verde / Cabo Verde\n#\n# From Tim Parenti (2024-07-01), per Paul Eggert (2018-02-16):\n# For timestamps before independence, see commentary for Europe/Lisbon.\n# Shanks gives 1907 instead for the transition to -02.\n#\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone Atlantic/Cape_Verde -1:34:04 -\tLMT\t1912 Jan 01  2:00u # Praia\n\t\t\t-2:00\t-\t%z\t1942 Sep\n\t\t\t-2:00\t1:00\t%z\t1945 Oct 15\n\t\t\t-2:00\t-\t%z\t1975 Nov 25  2:00\n\t\t\t-1:00\t-\t%z\n\n# Chad\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAfrica/Ndjamena\t1:00:12 -\tLMT\t1912 Jan  1 # N'Djamena\n\t\t\t1:00\t-\tWAT\t1979 Oct 14\n\t\t\t1:00\t1:00\tWAST\t1980 Mar  8\n\t\t\t1:00\t-\tWAT\n\n# Burkina Faso\n# Côte d'Ivoire (Ivory Coast)\n# The Gambia\n# Ghana\n# Guinea\n# Iceland\n# Mali\n# Mauritania\n# St Helena\n# Senegal\n# Sierra Leone\n# Togo\n\n# The other parts of the St Helena territory are similar:\n#\tTristan da Cunha: on GMT, say Whitman and the CIA\n#\tAscension: on GMT, say the USNO (1995-12-21) and the CIA\n#\tGough (scientific station since 1955; sealers wintered previously):\n#\t\ton GMT, says the CIA\n#\tInaccessible, Nightingale: uninhabited\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAfrica/Abidjan\t-0:16:08 -\tLMT\t1912 Jan  1\n\t\t\t 0:00\t-\tGMT\n\n###############################################################################\n\n# Egypt\n\n# Milne says Cairo used 2:05:08.9, the local mean time of the Abbasizeh\n# observatory.  Milne also says that the official time for\n# Egypt was mean noon at the Great Pyramid, 2:04:30.5, but apparently this\n# did not apply to Cairo, Alexandria, or Port Said.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tEgypt\t1940\tonly\t-\tJul\t15\t0:00\t1:00\tS\nRule\tEgypt\t1940\tonly\t-\tOct\t 1\t0:00\t0\t-\nRule\tEgypt\t1941\tonly\t-\tApr\t15\t0:00\t1:00\tS\nRule\tEgypt\t1941\tonly\t-\tSep\t16\t0:00\t0\t-\nRule\tEgypt\t1942\t1944\t-\tApr\t 1\t0:00\t1:00\tS\nRule\tEgypt\t1942\tonly\t-\tOct\t27\t0:00\t0\t-\nRule\tEgypt\t1943\t1945\t-\tNov\t 1\t0:00\t0\t-\nRule\tEgypt\t1945\tonly\t-\tApr\t16\t0:00\t1:00\tS\nRule\tEgypt\t1957\tonly\t-\tMay\t10\t0:00\t1:00\tS\nRule\tEgypt\t1957\t1958\t-\tOct\t 1\t0:00\t0\t-\nRule\tEgypt\t1958\tonly\t-\tMay\t 1\t0:00\t1:00\tS\nRule\tEgypt\t1959\t1981\t-\tMay\t 1\t1:00\t1:00\tS\nRule\tEgypt\t1959\t1965\t-\tSep\t30\t3:00\t0\t-\nRule\tEgypt\t1966\t1994\t-\tOct\t 1\t3:00\t0\t-\nRule\tEgypt\t1982\tonly\t-\tJul\t25\t1:00\t1:00\tS\nRule\tEgypt\t1983\tonly\t-\tJul\t12\t1:00\t1:00\tS\nRule\tEgypt\t1984\t1988\t-\tMay\t 1\t1:00\t1:00\tS\nRule\tEgypt\t1989\tonly\t-\tMay\t 6\t1:00\t1:00\tS\nRule\tEgypt\t1990\t1994\t-\tMay\t 1\t1:00\t1:00\tS\n# IATA (after 1990) says transitions are at 0:00.\n# Go with IATA starting in 1995, except correct 1995 entry from 09-30 to 09-29.\n\n# From Alexander Krivenyshev (2011-04-20):\n# \"...Egypt's interim cabinet decided on Wednesday to cancel daylight\n# saving time after a poll posted on its website showed the majority of\n# Egyptians would approve the cancellation.\"\n#\n# Egypt to cancel daylight saving time\n# http://www.almasryalyoum.com/en/node/407168\n# or\n# http://www.worldtimezone.com/dst_news/dst_news_egypt04.html\nRule\tEgypt\t1995\t2010\t-\tApr\tlastFri\t 0:00s\t1:00\tS\nRule\tEgypt\t1995\t2005\t-\tSep\tlastThu\t24:00\t0\t-\n# From Steffen Thorsen (2006-09-19):\n# The Egyptian Gazette, issue 41,090 (2006-09-18), page 1, reports:\n# Egypt will turn back clocks by one hour at the midnight of Thursday\n# after observing the daylight saving time since May.\n# http://news.gom.com.eg/gazette/pdf/2006/09/18/01.pdf\nRule\tEgypt\t2006\tonly\t-\tSep\t21\t24:00\t0\t-\n# From Dirk Losch (2007-08-14):\n# I received a mail from an airline which says that the daylight\n# saving time in Egypt will end in the night of 2007-09-06 to 2007-09-07.\n# From Jesper Nørgaard Welen (2007-08-15): [The following agree:]\n# http://www.nentjes.info/Bill/bill5.htm\n# https://www.timeanddate.com/worldclock/city.html?n=53\n# From Steffen Thorsen (2007-09-04): The official information...:\n# http://www.sis.gov.eg/En/EgyptOnline/Miscellaneous/000002/0207000000000000001580.htm\nRule\tEgypt\t2007\tonly\t-\tSep\tThu>=1\t24:00\t0\t-\n# From Abdelrahman Hassan (2007-09-06):\n# Due to the Hijri (lunar Islamic calendar) year being 11 days shorter\n# than the year of the Gregorian calendar, Ramadan shifts earlier each\n# year. This year it will be observed September 13 (September is quite\n# hot in Egypt), and the idea is to make fasting easier for workers by\n# shifting business hours one hour out of daytime heat. Consequently,\n# unless discontinued, next DST may end Thursday 28 August 2008.\n# From Paul Eggert (2007-08-17):\n# For lack of better info, assume the new rule is last Thursday in August.\n\n# From Petr Machata (2009-04-06):\n# The following appeared in Red Hat bugzilla[1] (edited):\n#\n# > $ zdump -v /usr/share/zoneinfo/Africa/Cairo | grep 2009\n# > /usr/share/zoneinfo/Africa/Cairo  Thu Apr 23 21:59:59 2009 UTC = Thu =\n# Apr 23\n# > 23:59:59 2009 EET isdst=0 gmtoff=7200\n# > /usr/share/zoneinfo/Africa/Cairo  Thu Apr 23 22:00:00 2009 UTC = Fri =\n# Apr 24\n# > 01:00:00 2009 EEST isdst=1 gmtoff=10800\n# > /usr/share/zoneinfo/Africa/Cairo  Thu Aug 27 20:59:59 2009 UTC = Thu =\n# Aug 27\n# > 23:59:59 2009 EEST isdst=1 gmtoff=10800\n# > /usr/share/zoneinfo/Africa/Cairo  Thu Aug 27 21:00:00 2009 UTC = Thu =\n# Aug 27\n# > 23:00:00 2009 EET isdst=0 gmtoff=7200\n#\n# > end date should be Thu Sep 24 2009 (Last Thursday in September at 23:59=\n# :59)\n# > http://support.microsoft.com/kb/958729/\n#\n# timeanddate[2] and another site I've found[3] also support that.\n#\n# [1] https://bugzilla.redhat.com/show_bug.cgi?id=492263\n# [2] https://www.timeanddate.com/worldclock/clockchange.html?n=53\n# [3] https://wwp.greenwichmeantime.com/time-zone/africa/egypt/\n\n# From Arthur David Olson (2009-04-20):\n# In 2009 (and for the next several years), Ramadan ends before the fourth\n# Thursday in September; Egypt is expected to revert to the last Thursday\n# in September.\n\n# From Steffen Thorsen (2009-08-11):\n# We have been able to confirm the August change with the Egyptian Cabinet\n# Information and Decision Support Center:\n# https://www.timeanddate.com/news/time/egypt-dst-ends-2009.html\n#\n# The Middle East News Agency\n# https://www.mena.org.eg/index.aspx\n# also reports \"Egypt starts winter time on August 21\"\n# today in article numbered \"71, 11/08/2009 12:25 GMT.\"\n# Only the title above is available without a subscription to their service,\n# and can be found by searching for \"winter\" in their search engine\n# (at least today).\n\n# From Alexander Krivenyshev (2010-07-20):\n# According to News from Egypt - Al-Masry Al-Youm Egypt's cabinet has\n# decided that Daylight Saving Time will not be used in Egypt during\n# Ramadan.\n#\n# Arabic translation:\n# \"Clocks to go back during Ramadan - and then forward again\"\n# http://www.almasryalyoum.com/en/news/clocks-go-back-during-ramadan-and-then-forward-again\n# http://www.worldtimezone.com/dst_news/dst_news_egypt02.html\n\n# From Ahmad El-Dardiry (2014-05-07):\n# Egypt is to change back to Daylight system on May 15\n# http://english.ahram.org.eg/NewsContent/1/64/100735/Egypt/Politics-/Egypts-government-to-reapply-daylight-saving-time-.aspx\n\n# From Gunther Vermier (2014-05-13):\n# our Egypt office confirms that the change will be at 15 May \"midnight\" (24:00)\n\n# From Imed Chihi (2014-06-04):\n# We have finally \"located\" a precise official reference about the DST changes\n# in Egypt.  The Ministers Cabinet decision is explained at\n# http://www.cabinet.gov.eg/Media/CabinetMeetingsDetails.aspx?id=347 ...\n# [T]his (Arabic) site is not accessible outside Egypt, but the page ...\n# translates into: \"With regard to daylight saving time, it is scheduled to\n# take effect at exactly twelve o'clock this evening, Thursday, 15 MAY 2014,\n# to be suspended by twelve o'clock on the evening of Thursday, 26 JUN 2014,\n# and re-established again at the end of the month of Ramadan, at twelve\n# o'clock on the evening of Thursday, 31 JUL 2014.\"  This statement has been\n# reproduced by other (more accessible) sites[, e.g.,]...\n# http://elgornal.net/news/news.aspx?id=4699258\n\n# From Steffen Thorsen (2015-04-08):\n# Egypt will start DST on midnight after Thursday, April 30, 2015.\n# This is based on a law (no 35) from May 15, 2014 saying it starts the last\n# Thursday of April....  Clocks will still be turned back for Ramadan, but\n# dates not yet announced....\n# http://almogaz.com/news/weird-news/2015/04/05/1947105 ...\n# https://www.timeanddate.com/news/time/egypt-starts-dst-2015.html\n\n# From Ahmed Nazmy (2015-04-20):\n# Egypt's ministers cabinet just announced ... that it will cancel DST at\n# least for 2015.\n#\n# From Tim Parenti (2015-04-20):\n# http://english.ahram.org.eg/WriterArticles/NewsContentP/1/128195/Egypt/No-daylight-saving-this-summer-Egypts-prime-minist.aspx\n# \"Egypt's cabinet agreed on Monday not to switch clocks for daylight saving\n# time this summer, and carry out studies on the possibility of canceling the\n# practice altogether in future years.\"\n#\n# From Paul Eggert (2015-04-24):\n# Yesterday the office of Egyptian President El-Sisi announced his\n# decision to abandon DST permanently.  See Ahram Online 2015-04-24.\n# http://english.ahram.org.eg/NewsContent/1/64/128509/Egypt/Politics-/Sisi-cancels-daylight-saving-time-in-Egypt.aspx\n\n# From Steffen Thorsen (2016-04-29):\n# Egypt will have DST from July 7 until the end of October....\n# http://english.ahram.org.eg/NewsContentP/1/204655/Egypt/Daylight-savings-time-returning-to-Egypt-on--July.aspx\n# From Mina Samuel (2016-07-04):\n# Egyptian government took the decision to cancel the DST,\n\n# From Ahmad ElDardiry (2023-03-01):\n# Egypt officially announced today that daylight savings will be\n# applied from last Friday of April to last Thursday of October.\n# From Paul Eggert (2023-03-01):\n# Assume transitions are at 00:00 and 24:00 respectively.\n# From Amir Adib (2023-03-07):\n# https://www.facebook.com/EgyptianCabinet/posts/638829614954129/\n\nRule\tEgypt\t2008\tonly\t-\tAug\tlastThu\t24:00\t0\t-\nRule\tEgypt\t2009\tonly\t-\tAug\t20\t24:00\t0\t-\nRule\tEgypt\t2010\tonly\t-\tAug\t10\t24:00\t0\t-\nRule\tEgypt\t2010\tonly\t-\tSep\t 9\t24:00\t1:00\tS\nRule\tEgypt\t2010\tonly\t-\tSep\tlastThu\t24:00\t0\t-\nRule\tEgypt\t2014\tonly\t-\tMay\t15\t24:00\t1:00\tS\nRule\tEgypt\t2014\tonly\t-\tJun\t26\t24:00\t0\t-\nRule\tEgypt\t2014\tonly\t-\tJul\t31\t24:00\t1:00\tS\nRule\tEgypt\t2014\tonly\t-\tSep\tlastThu\t24:00\t0\t-\nRule\tEgypt\t2023\tmax\t-\tApr\tlastFri\t 0:00\t1:00\tS\nRule\tEgypt\t2023\tmax\t-\tOct\tlastThu\t24:00\t0\t-\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n\t\t#STDOFF\t2:05:08.9\nZone\tAfrica/Cairo\t2:05:09 -\tLMT\t1900 Oct\n\t\t\t2:00\tEgypt\tEE%sT\n\n# Guinea-Bissau\n#\n# From Tim Parenti (2024-07-01), per Paul Eggert (2018-02-16):\n# For timestamps before independence, see commentary for Europe/Lisbon.\n#\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAfrica/Bissau\t-1:02:20 -\tLMT\t1912 Jan  1  1:00u\n\t\t\t-1:00\t-\t%z\t1975\n\t\t\t 0:00\t-\tGMT\n\n# Comoros\n# Djibouti\n# Eritrea\n# Ethiopia\n# Kenya\n# Madagascar\n# Mayotte\n# Somalia\n# Tanzania\n# Uganda\n\n# From P Chan (2020-10-24):\n#\n# The standard time of GMT+2:30 was adopted in the East Africa Protectorate....\n# [The Official Gazette, 1908-05-01, p 274]\n# https://books.google.com/books?id=e-cAC-sjPSEC&pg=PA274\n#\n# At midnight on 30 June 1928 the clocks throughout Kenya was put forward\n# half an hour by the Alteration of Time Ordinance, 1928.\n# https://gazettes.africa/archive/ke/1928/ke-government-gazette-dated-1928-05-11-no-28.pdf\n# [Ordinance No. 11 of 1928, The Official Gazette, 1928-06-26, p 813]\n# https://books.google.com/books?id=2S0S6os32ZUC&pg=PA813\n#\n# The 1928 ordinance was repealed by the Alteration of Time (repeal) Ordinance,\n# 1929 and the time was restored to GMT+2:30 at midnight on 4 January 1930.\n# [Ordinance No. 97 of 1929, The Official Gazette, 1929-12-31, p 2701]\n# https://books.google.com/books?id=_g18jIZQlwwC&pg=PA2701\n#\n# The Alteration of Time Ordinance, 1936 changed the time to GMT+2:45\n# and repealed the previous ordinance at midnight on 31 December 1936.\n# [The Official Gazette, 1936-07-21, p 705]\n# https://books.google.com/books?id=K7j41z0aC5wC&pg=PA705\n#\n# The Defence (Amendment of Laws No. 120) Regulations changed the time\n# to GMT+3 at midnight on 31 July 1942.\n# [Kenya Official Gazette Supplement No. 32, 1942-07-21, p 331]\n# https://books.google.com/books?hl=zh-TW&id=c_E-AQAAIAAJ&pg=PA331\n# The provision of the 1936 ordinance was not repealed and was later\n# incorporated in the Interpretation and General Clauses Ordinance in 1948.\n# Although it was overridden by the 1942 regulations.\n# [The Laws of Kenya in force on 1948-09-21, Title I, Chapter 1, 31]\n# https://dds.crl.edu/item/217517 (p.101)\n# In 1950 the Interpretation and General Clauses Ordinance was amended to adopt\n# GMT+3 permanently as the 1942 regulations were due to expire on 10 December.\n# https://books.google.com/books?id=jvR8mUDAwR0C&pg=PA787\n# [Ordinance No. 44 of 1950, Kenya Ordinances 1950, Vol. XXIX, p 294]\n# https://books.google.com/books?id=-_dQAQAAMAAJ&pg=PA294\n\n# From Paul Eggert (2020-10-24):\n# The 1908-05-01 announcement does not give an effective date,\n# so just say \"1908 May\".\n\n# From Paul Eggert (2018-09-11):\n# Unfortunately tzdb records only Western clock time in use in Ethiopia,\n# as the tzdb format is not up to properly recording a common Ethiopian\n# timekeeping practice that is based on solar time.  See:\n# Mortada D. If you have a meeting in Ethiopia, you'd better double\n# check the time. PRI's The World. 2015-01-30 15:15 -05.\n# https://www.pri.org/stories/2015-01-30/if-you-have-meeting-ethiopia-you-better-double-check-time\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAfrica/Nairobi\t2:27:16\t-\tLMT\t1908 May\n\t\t\t2:30\t-\t%z\t1928 Jun 30 24:00\n\t\t\t3:00\t-\tEAT\t1930 Jan  4 24:00\n\t\t\t2:30\t-\t%z\t1936 Dec 31 24:00\n\t\t\t2:45\t-\t%z\t1942 Jul 31 24:00\n\t\t\t3:00\t-\tEAT\n\n# Liberia\n#\n# From Paul Eggert (2017-03-02):\n#\n# The Nautical Almanac for the Year 1970, p 264, is the source for -0:44:30.\n#\n# In 1972 Liberia was the last country to switch from a UT offset\n# that was not a multiple of 15 or 20 minutes.  The 1972 change was on\n# 1972-01-07, according to an entry dated 1972-01-04 on p 330 of:\n# Presidential Papers: First year of the administration of\n# President William R. Tolbert, Jr., July 23, 1971-July 31, 1972.\n# Monrovia: Executive Mansion.\n#\n# Use the abbreviation \"MMT\" before 1972, as the more accurate numeric\n# abbreviation \"-004430\" would be one byte over the POSIX limit.\n#\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAfrica/Monrovia\t-0:43:08 -\tLMT\t1882\n\t\t\t-0:43:08 -\tMMT\t1919 Mar # Monrovia Mean Time\n\t\t\t-0:44:30 -\tMMT\t1972 Jan 7 # approximately MMT\n\t\t\t 0:00\t-\tGMT\n\n###############################################################################\n\n# Libya\n\n# From Even Scharning (2012-11-10):\n# Libya set their time one hour back at 02:00 on Saturday November 10.\n# https://www.libyaherald.com/2012/11/04/clocks-to-go-back-an-hour-on-saturday/\n# Here is an official source [in Arabic]: http://ls.ly/fb6Yc\n#\n# Steffen Thorsen forwarded a translation (2012-11-10) in\n# https://mm.icann.org/pipermail/tz/2012-November/018451.html\n#\n# From Tim Parenti (2012-11-11):\n# Treat the 2012-11-10 change as a zone change from UTC+2 to UTC+1.\n# The DST rules planned for 2013 and onward roughly mirror those of Europe\n# (either two days before them or five days after them, so as to fall on\n# lastFri instead of lastSun).\n\n# From Even Scharning (2013-10-25):\n# The scheduled end of DST in Libya on Friday, October 25, 2013 was\n# cancelled yesterday....\n# https://www.libyaherald.com/2013/10/24/correction-no-time-change-tomorrow/\n#\n# From Paul Eggert (2013-10-25):\n# For now, assume they're reverting to the pre-2012 rules of permanent UT +02.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tLibya\t1951\tonly\t-\tOct\t14\t2:00\t1:00\tS\nRule\tLibya\t1952\tonly\t-\tJan\t 1\t0:00\t0\t-\nRule\tLibya\t1953\tonly\t-\tOct\t 9\t2:00\t1:00\tS\nRule\tLibya\t1954\tonly\t-\tJan\t 1\t0:00\t0\t-\nRule\tLibya\t1955\tonly\t-\tSep\t30\t0:00\t1:00\tS\nRule\tLibya\t1956\tonly\t-\tJan\t 1\t0:00\t0\t-\nRule\tLibya\t1982\t1984\t-\tApr\t 1\t0:00\t1:00\tS\nRule\tLibya\t1982\t1985\t-\tOct\t 1\t0:00\t0\t-\nRule\tLibya\t1985\tonly\t-\tApr\t 6\t0:00\t1:00\tS\nRule\tLibya\t1986\tonly\t-\tApr\t 4\t0:00\t1:00\tS\nRule\tLibya\t1986\tonly\t-\tOct\t 3\t0:00\t0\t-\nRule\tLibya\t1987\t1989\t-\tApr\t 1\t0:00\t1:00\tS\nRule\tLibya\t1987\t1989\t-\tOct\t 1\t0:00\t0\t-\nRule\tLibya\t1997\tonly\t-\tApr\t 4\t0:00\t1:00\tS\nRule\tLibya\t1997\tonly\t-\tOct\t 4\t0:00\t0\t-\nRule\tLibya\t2013\tonly\t-\tMar\tlastFri\t1:00\t1:00\tS\nRule\tLibya\t2013\tonly\t-\tOct\tlastFri\t2:00\t0\t-\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAfrica/Tripoli\t0:52:44 -\tLMT\t1920\n\t\t\t1:00\tLibya\tCE%sT\t1959\n\t\t\t2:00\t-\tEET\t1982\n\t\t\t1:00\tLibya\tCE%sT\t1990 May  4\n# The 1996 and 1997 entries are from Shanks & Pottenger;\n# the IATA SSIM data entries contain some obvious errors.\n\t\t\t2:00\t-\tEET\t1996 Sep 30\n\t\t\t1:00\tLibya\tCE%sT\t1997 Oct  4\n\t\t\t2:00\t-\tEET\t2012 Nov 10  2:00\n\t\t\t1:00\tLibya\tCE%sT\t2013 Oct 25  2:00\n\t\t\t2:00\t-\tEET\n\n# Mauritius\n\n# From Steffen Thorsen (2008-06-25):\n# Mauritius plans to observe DST from 2008-11-01 to 2009-03-31 on a trial\n# basis....\n# It seems that Mauritius observed daylight saving time from 1982-10-10 to\n# 1983-03-20 as well, but that was not successful....\n# https://www.timeanddate.com/news/time/mauritius-daylight-saving-time.html\n\n# From Alex Krivenyshev (2008-06-25):\n# http://economicdevelopment.gov.mu/portal/site/Mainhomepage/menuitem.a42b24128104d9845dabddd154508a0c/?content_id=0a7cee8b5d69a110VgnVCM1000000a04a8c0RCRD\n\n# From Arthur David Olson (2008-06-30):\n# The www.timeanddate.com article cited by Steffen Thorsen notes that \"A\n# final decision has yet to be made on the times that daylight saving\n# would begin and end on these dates.\" As a place holder, use midnight.\n\n# From Paul Eggert (2008-06-30):\n# Follow Thorsen on DST in 1982/1983, instead of Shanks & Pottenger.\n\n# From Steffen Thorsen (2008-07-10):\n# According to\n# http://www.lexpress.mu/display_article.php?news_id=111216\n# (in French), Mauritius will start and end their DST a few days earlier\n# than previously announced (2008-11-01 to 2009-03-31).  The new start\n# date is 2008-10-26 at 02:00 and the new end date is 2009-03-27 (no time\n# given, but it is probably at either 2 or 3 wall clock time).\n#\n# A little strange though, since the article says that they moved the date\n# to align itself with Europe and USA which also change time on that date,\n# but that means they have not paid attention to what happened in\n# USA/Canada last year (DST ends first Sunday in November). I also wonder\n# why that they end on a Friday, instead of aligning with Europe which\n# changes two days later.\n\n# From Alex Krivenyshev (2008-07-11):\n# Seems that English language article \"The revival of daylight saving\n# time: Energy conservation?\"- No. 16578 (07/11/2008) was originally\n# published on Monday, June 30, 2008...\n#\n# I guess that article in French \"Le gouvernement avance l'introduction\n# de l'heure d'été\" stating that DST in Mauritius starting on October 26\n# and ending on March 27, 2009 is the most recent one....\n# http://www.worldtimezone.com/dst_news/dst_news_mauritius02.html\n\n# From Riad M. Hossen Ally (2008-08-03):\n# The Government of Mauritius weblink\n# http://www.gov.mu/portal/site/pmosite/menuitem.4ca0efdee47462e7440a600248a521ca/?content_id=4728ca68b2a5b110VgnVCM1000000a04a8c0RCRD\n# Cabinet Decision of July 18th, 2008 states as follows:\n#\n# 4. ...Cabinet has agreed to the introduction into the National Assembly\n# of the Time Bill which provides for the introduction of summer time in\n# Mauritius. The summer time period which will be of one hour ahead of\n# the standard time, will be aligned with that in Europe and the United\n# States of America. It will start at two o'clock in the morning on the\n# last Sunday of October and will end at two o'clock in the morning on\n# the last Sunday of March the following year. The summer time for the\n# year 2008-2009 will, therefore, be effective as from 26 October 2008\n# and end on 29 March 2009.\n\n# From Ed Maste (2008-10-07):\n# THE TIME BILL (No. XXVII of 2008) Explanatory Memorandum states the\n# beginning / ending of summer time is 2 o'clock standard time in the\n# morning of the last Sunday of October / last Sunday of March.\n# http://www.gov.mu/portal/goc/assemblysite/file/bill2708.pdf\n\n# From Steffen Thorsen (2009-06-05):\n# According to several sources, Mauritius will not continue to observe\n# DST the coming summer...\n#\n# Some sources, in French:\n# http://www.defimedia.info/news/946/Rashid-Beebeejaun-:-«-L%E2%80%99heure-d%E2%80%99été-ne-sera-pas-appliquée-cette-année-»\n# http://lexpress.mu/Story/3398~Beebeejaun---Les-objectifs-d-économie-d-énergie-de-l-heure-d-été-ont-été-atteints-\n#\n# Our wrap-up:\n# https://www.timeanddate.com/news/time/mauritius-dst-will-not-repeat.html\n\n# From Arthur David Olson (2009-07-11):\n# The \"mauritius-dst-will-not-repeat\" wrapup includes this:\n# \"The trial ended on March 29, 2009, when the clocks moved back by one hour\n# at 2am (or 02:00) local time...\"\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule Mauritius\t1982\tonly\t-\tOct\t10\t0:00\t1:00\t-\nRule Mauritius\t1983\tonly\t-\tMar\t21\t0:00\t0\t-\nRule Mauritius\t2008\tonly\t-\tOct\tlastSun\t2:00\t1:00\t-\nRule Mauritius\t2009\tonly\t-\tMar\tlastSun\t2:00\t0\t-\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone Indian/Mauritius\t3:50:00 -\tLMT\t1907 # Port Louis\n\t\t\t4:00 Mauritius\t%z\n# Agalega Is, Rodriguez\n# no information; probably like Indian/Mauritius\n\n\n# Morocco\n# See Africa/Ceuta for Spanish Morocco.\n\n# From Alex Krivenyshev (2008-05-09):\n# Here is an article that Morocco plan to introduce Daylight Saving Time between\n# 1 June, 2008 and 27 September, 2008.\n#\n# \"... Morocco is to save energy by adjusting its clock during summer so it will\n# be one hour ahead of GMT between 1 June and 27 September, according to\n# Communication Minister and Government Spokesman, Khalid Naciri....\"\n#\n# http://www.worldtimezone.com/dst_news/dst_news_morocco01.html\n# http://en.afrik.com/news11892.html\n\n# From Alex Krivenyshev (2008-05-09):\n# The Morocco time change can be confirmed on Morocco web site Maghreb Arabe\n# Presse:\n# http://www.map.ma/eng/sections/box3/morocco_shifts_to_da/view\n#\n# Morocco shifts to daylight time on June 1st through September 27, Govt.\n# spokesman.\n\n# From Patrice Scattolin (2008-05-09):\n# According to this article:\n# https://www.avmaroc.com/actualite/heure-dete-comment-a127896.html\n# (and republished here: <http://www.actu.ma/heure-dete-comment_i127896_0.html>)\n# the changes occur at midnight:\n#\n# Saturday night May 31st at midnight (which in French is to be\n# interpreted as the night between Saturday and Sunday)\n# Sunday night the 28th at midnight\n#\n# Seeing that the 28th is Monday, I am guessing that she intends to say\n# the midnight of the 28th which is the midnight between Sunday and\n# Monday, which jives with other sources that say that it's inclusive\n# June 1st to Sept 27th.\n#\n# The decision was taken by decree *2-08-224 *but I can't find the decree\n# published on the web.\n#\n# It's also confirmed here:\n# http://www.maroc.ma/NR/exeres/FACF141F-D910-44B0-B7FA-6E03733425D1.htm\n# on a government portal as being between June 1st and Sept 27th (not yet\n# posted in English).\n#\n# The following Google query will generate many relevant hits:\n# https://www.google.com/search?hl=en&q=Conseil+de+gouvernement+maroc+heure+avance&btnG=Search\n\n# From Steffen Thorsen (2008-08-27):\n# Morocco will change the clocks back on the midnight between August 31\n# and September 1. They originally planned to observe DST to near the end\n# of September:\n#\n# One article about it (in French):\n# http://www.menara.ma/fr/Actualites/Maroc/Societe/ci.retour_a_l_heure_gmt_a_partir_du_dimanche_31_aout_a_minuit_officiel_.default\n#\n# We have some further details posted here:\n# https://www.timeanddate.com/news/time/morocco-ends-dst-early-2008.html\n\n# From Steffen Thorsen (2009-03-17):\n# Morocco will observe DST from 2009-06-01 00:00 to 2009-08-21 00:00 according\n# to many sources, such as\n# http://news.marweb.com/morocco/entertainment/morocco-daylight-saving.html\n# http://www.medi1sat.ma/fr/depeche.aspx?idp=2312\n# (French)\n#\n# Our summary:\n# https://www.timeanddate.com/news/time/morocco-starts-dst-2009.html\n\n# From Alexander Krivenyshev (2009-03-17):\n# Here is a link to official document from Royaume du Maroc Premier Ministre,\n# Ministère de la Modernisation des Secteurs Publics\n#\n# Under Article 1 of Royal Decree No. 455-67 of Act 23 safar 1387 (2 June 1967)\n# concerning the amendment of the legal time, the Ministry of Modernization of\n# Public Sectors announced that the official time in the Kingdom will be\n# advanced 60 minutes from Sunday 31 May 2009 at midnight.\n#\n# http://www.mmsp.gov.ma/francais/Actualites_fr/PDF_Actualites_Fr/HeureEte_FR.pdf\n# http://www.worldtimezone.com/dst_news/dst_news_morocco03.html\n\n# From Steffen Thorsen (2010-04-13):\n# Several news media in Morocco report that the Ministry of Modernization\n# of Public Sectors has announced that Morocco will have DST from\n# 2010-05-02 to 2010-08-08.\n#\n# Example:\n# http://www.lavieeco.com/actualites/4099-le-maroc-passera-a-l-heure-d-ete-gmt1-le-2-mai.html\n# (French)\n# Our page:\n# https://www.timeanddate.com/news/time/morocco-starts-dst-2010.html\n\n# From Dan Abitol (2011-03-30):\n# ...Rules for Africa/Casablanca are the following (24h format)\n# The 3rd April 2011 at 00:00:00, [it] will be 3rd April 01:00:00\n# The 31st July 2011 at 00:59:59, [it] will be 31st July 00:00:00\n# ...Official links of change in morocco\n# The change was broadcast on the FM Radio\n# I ve called ANRT (telecom regulations in Morocco) at\n# +212.537.71.84.00\n# http://www.anrt.net.ma/fr/\n# They said that\n# http://www.map.ma/fr/sections/accueil/l_heure_legale_au_ma/view\n# is the official publication to look at.\n# They said that the decision was already taken.\n#\n# More articles in the press\n# https://www.yabiladi.com/articles/details/5058/secret-l-heure-d-ete-maroc-leve.html\n# http://www.lematin.ma/Actualite/Express/Article.asp?id=148923\n# http://www.lavieeco.com/actualite/Le-Maroc-passe-sur-GMT+1-a-partir-de-dim\n\n# From Petr Machata (2011-03-30):\n# They have it written in English here:\n# http://www.map.ma/eng/sections/home/morocco_to_spring_fo/view\n#\n# It says there that \"Morocco will resume its standard time on July 31,\n# 2011 at midnight.\" Now they don't say whether they mean midnight of\n# wall clock time (i.e. 11pm UTC), but that's what I would assume. It has\n# also been like that in the past.\n\n# From Alexander Krivenyshev (2012-03-09):\n# According to Infomédiaire web site from Morocco (infomediaire.ma),\n# on March 9, 2012, (in French) Heure légale:\n# Le Maroc adopte officiellement l'heure d'été\n# http://www.infomediaire.ma/news/maroc/heure-légale-le-maroc-adopte-officiellement-lheure-dété\n# Governing Council adopted draft decree, that Morocco DST starts on\n# the last Sunday of March (March 25, 2012) and ends on\n# last Sunday of September (September 30, 2012)\n# except the month of Ramadan.\n# or (brief)\n# http://www.worldtimezone.com/dst_news/dst_news_morocco06.html\n\n# From Arthur David Olson (2012-03-10):\n# The infomediaire.ma source indicates that the system is to be in\n# effect every year. It gives 03H00 as the \"fall back\" time of day;\n# it lacks a \"spring forward\" time of day; assume 2:00 XXX.\n# Wait on specifying the Ramadan exception for details about\n# start date, start time of day, end date, and end time of day XXX.\n\n# From Christophe Tropamer (2012-03-16):\n# Seen Morocco change again:\n# http://www.le2uminutes.com/actualite.php\n# \"...à partir du dernier dimanche d'avril et non fins mars,\n# comme annoncé précédemment.\"\n\n# From Milamber Space Network (2012-07-17):\n# The official return to GMT is announced by the Moroccan government:\n# http://www.mmsp.gov.ma/fr/actualites.aspx?id=288 [in French]\n#\n# Google translation, lightly edited:\n# Back to the standard time of the Kingdom (GMT)\n# Pursuant to Decree No. 2-12-126 issued on 26 Jumada (I) 1433 (April 18,\n# 2012) and in accordance with the order of Mr. President of the\n# Government No. 3-47-12 issued on 24 Sha'ban (11 July 2012), the Ministry\n# of Public Service and Administration Modernization announces the return\n# of the legal time of the Kingdom (GMT) from Friday, July 20, 2012 until\n# Monday, August 20, 2012.  So the time will be delayed by 60 minutes from\n# 3:00 am Friday, July 20, 2012 and will again be advanced by 60 minutes\n# August 20, 2012 from 2:00 am.\n\n# From Paul Eggert (2013-03-06):\n# Morocco's daylight-saving transitions due to Ramadan seem to be\n# announced a bit in advance.  On 2012-07-11 the Moroccan government\n# announced that year's Ramadan daylight-saving transitions would be\n# 2012-07-20 and 2012-08-20; see\n# http://www.mmsp.gov.ma/fr/actualites.aspx?id=288\n\n# From Andrew Paprocki (2013-07-02):\n# Morocco announced that the year's Ramadan daylight-savings\n# transitions would be 2013-07-07 and 2013-08-10; see:\n# http://www.maroc.ma/en/news/morocco-suspends-daylight-saving-time-july-7-aug10\n\n# From Steffen Thorsen (2013-09-28):\n# Morocco extends DST by one month, on very short notice, just 1 day\n# before it was going to end.  There is a new decree (2.13.781) for\n# this, where DST from now on goes from last Sunday of March at 02:00\n# to last Sunday of October at 03:00, similar to EU rules.  Official\n# source (French):\n# http://www.maroc.gov.ma/fr/actualites/lhoraire-dete-gmt1-maintenu-jusquau-27-octobre-2013\n# Another source (specifying the time for start and end in the decree):\n# http://www.lemag.ma/Heure-d-ete-au-Maroc-jusqu-au-27-octobre_a75620.html\n\n# From Sebastien Willemijns (2014-03-18):\n# http://www.afriquinfos.com/articles/2014/3/18/maroc-heure-dete-avancez-tous-horloges-247891.asp\n\n# From Milamber Space Network (2014-06-05):\n# The Moroccan government has recently announced that the country will return\n# to standard time at 03:00 on Saturday, June 28, 2014 local time....  DST\n# will resume again at 02:00 on Saturday, August 2, 2014....\n# http://www.mmsp.gov.ma/fr/actualites.aspx?id=586\n\n# From Milamber (2015-06-08):\n# (Google Translation) The hour will thus be delayed 60 minutes\n# Sunday, June 14 at 3:00, the ministry said in a statement, adding\n# that the time will be advanced again 60 minutes Sunday, July 19,\n# 2015 at 2:00.  The move comes under 2.12.126 Decree of 26 Jumada I\n# 1433 (18 April 2012) and the decision of the Head of Government of\n# 16 N. 3-29-15 Chaaban 1435 (4 June 2015).\n# Source (french):\n# https://lnt.ma/le-maroc-reculera-dune-heure-le-dimanche-14-juin/\n#\n# From Milamber (2015-06-09):\n# http://www.mmsp.gov.ma/fr/actualites.aspx?id=863\n#\n# From Michael Deckers (2015-06-09):\n# [The gov.ma announcement] would (probably) make the switch on 2015-07-19 go\n# from 03:00 to 04:00 rather than from 02:00 to 03:00, as in the patch....\n# I think the patch is correct and the quoted text is wrong; the text in\n# <https://lnt.ma/le-maroc-reculera-dune-heure-le-dimanche-14-juin/> agrees\n# with the patch.\n\n# From Mohamed Essedik Najd (2018-10-26):\n# Today, a Moroccan government council approved the perpetual addition\n# of 60 minutes to the regular Moroccan timezone.\n# From Matt Johnson (2018-10-28):\n# http://www.sgg.gov.ma/Portals/1/BO/2018/BO_6720-bis_Ar.pdf\n#\n# From Maamar Abdelkader (2018-11-01):\n# We usually move clocks back the previous week end and come back to the +1\n# the week end after....  The government does not announce yet the decision\n# about this temporary change.  But it s 99% sure that it will be the case,\n# as in previous years.  An unofficial survey was done these days, showing\n# that 64% of asked people are ok for moving from +1 to +0 during Ramadan.\n# https://leconomiste.com/article/1035870-enquete-l-economiste-sunergia-64-des-marocains-plebiscitent-le-gmt-pendant-ramadan\n\n# From Naoufal Semlali (2019-04-16):\n# Morocco will be on GMT starting from Sunday, May 5th 2019 at 3am.\n# The switch to GMT+1 will occur on Sunday, June 9th 2019 at 2am....\n# http://fr.le360.ma/societe/voici-la-date-du-retour-a-lheure-legale-au-maroc-188222\n\n# From Semlali Naoufal (2020-04-14):\n# Following the announcement by the Moroccan government, the switch to\n# GMT time will take place on Sunday, April 19, 2020 from 3 a.m. and\n# the return to GMT+1 time will take place on Sunday, May 31, 2020 at 2 a.m....\n# https://maroc-diplomatique.net/maroc-le-retour-a-lheure-gmt-est-prevu-dimanche-prochain/\n# http://aujourdhui.ma/actualite/gmt1-retour-a-lheure-normale-dimanche-prochain-1\n#\n# From Milamber (2020-05-31)\n# In Morocco (where I live), the end of Ramadan (Arabic month) is followed by\n# the Eid al-Fitr, and concretely it's 1 or 2 day offs for the people (with\n# traditional visiting of family, big lunches/dinners, etc.).  So for this\n# year the astronomical calculations don't include the following 2 days off in\n# the calc.  These 2 days fall in a Sunday/Monday, so it's not acceptable by\n# people to have a time shift during these 2 days off.  Perhaps you can modify\n# the (predicted) rules for next years: if the end of Ramadan is a (probable)\n# Friday or Saturday (and so the 2 days off are on a weekend), the next time\n# shift will be the next weekend.\n#\n# From Milamber (2021-03-31, 2022-03-10):\n# https://www.mmsp.gov.ma/fr/actualites.aspx?id=2076\n# https://www.ecoactu.ma/horaires-administration-ramadan-gmtheure-gmt-a-partir-de-dimanche-27-mars/\n#\n# From Milamber (2023-03-14, 2023-03-15):\n# The return to legal GMT time will take place this Sunday, March 19 at 3 a.m.\n# ... the return to GMT+1 will be made on Sunday April 23, 2023 at 2 a.m.\n# https://www.mmsp.gov.ma/fr/actualites/passage-à-l%E2%80%99heure-gmt-à-partir-du-dimanche-19-mars-2023\n#\n# From Paul Eggert (2023-03-14):\n# For now, guess that in the future Morocco will fall back at 03:00\n# the last Sunday before Ramadan, and spring forward at 02:00 the\n# first Sunday after one day after Ramadan.  To implement this,\n# transition dates and times for 2019 through 2087 were determined by\n# running the following program under GNU Emacs 28.2.  (This algorithm\n# also produces the correct transition dates for 2016 through 2018,\n# though the times differ due to Morocco's time zone change in 2018.)\n# (let ((islamic-year 1440))\n#   (require 'cal-islam)\n#   (while (< islamic-year 1511)\n#     (let ((a (calendar-islamic-to-absolute (list 9 1 islamic-year)))\n#           (b (+ 1 (calendar-islamic-to-absolute (list 10 1 islamic-year))))\n#           (sunday 0))\n#       (while (/= sunday (mod (setq a (1- a)) 7)))\n#       (while (/= sunday (mod b 7))\n#         (setq b (1+ b)))\n#       (setq a (calendar-gregorian-from-absolute a))\n#       (setq b (calendar-gregorian-from-absolute b))\n#       (insert\n#        (format\n#         (concat \"Rule\\tMorocco\\t%d\\tonly\\t-\\t%s\\t%2d\\t 3:00\\t-1:00\\t-\\n\"\n#                 \"Rule\\tMorocco\\t%d\\tonly\\t-\\t%s\\t%2d\\t 2:00\\t0\\t-\\n\")\n#         (car (cdr (cdr a))) (calendar-month-name (car a) t) (car (cdr a))\n#         (car (cdr (cdr b))) (calendar-month-name (car b) t) (car (cdr b)))))\n#     (setq islamic-year (+ 1 islamic-year))))\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tMorocco\t1939\tonly\t-\tSep\t12\t 0:00\t1:00\t-\nRule\tMorocco\t1939\tonly\t-\tNov\t19\t 0:00\t0\t-\nRule\tMorocco\t1940\tonly\t-\tFeb\t25\t 0:00\t1:00\t-\nRule\tMorocco\t1945\tonly\t-\tNov\t18\t 0:00\t0\t-\nRule\tMorocco\t1950\tonly\t-\tJun\t11\t 0:00\t1:00\t-\nRule\tMorocco\t1950\tonly\t-\tOct\t29\t 0:00\t0\t-\nRule\tMorocco\t1967\tonly\t-\tJun\t 3\t12:00\t1:00\t-\nRule\tMorocco\t1967\tonly\t-\tOct\t 1\t 0:00\t0\t-\nRule\tMorocco\t1974\tonly\t-\tJun\t24\t 0:00\t1:00\t-\nRule\tMorocco\t1974\tonly\t-\tSep\t 1\t 0:00\t0\t-\nRule\tMorocco\t1976\t1977\t-\tMay\t 1\t 0:00\t1:00\t-\nRule\tMorocco\t1976\tonly\t-\tAug\t 1\t 0:00\t0\t-\nRule\tMorocco\t1977\tonly\t-\tSep\t28\t 0:00\t0\t-\nRule\tMorocco\t1978\tonly\t-\tJun\t 1\t 0:00\t1:00\t-\nRule\tMorocco\t1978\tonly\t-\tAug\t 4\t 0:00\t0\t-\nRule\tMorocco\t2008\tonly\t-\tJun\t 1\t 0:00\t1:00\t-\nRule\tMorocco\t2008\tonly\t-\tSep\t 1\t 0:00\t0\t-\nRule\tMorocco\t2009\tonly\t-\tJun\t 1\t 0:00\t1:00\t-\nRule\tMorocco\t2009\tonly\t-\tAug\t21\t 0:00\t0\t-\nRule\tMorocco\t2010\tonly\t-\tMay\t 2\t 0:00\t1:00\t-\nRule\tMorocco\t2010\tonly\t-\tAug\t 8\t 0:00\t0\t-\nRule\tMorocco\t2011\tonly\t-\tApr\t 3\t 0:00\t1:00\t-\nRule\tMorocco\t2011\tonly\t-\tJul\t31\t 0:00\t0\t-\nRule\tMorocco\t2012\t2013\t-\tApr\tlastSun\t 2:00\t1:00\t-\nRule\tMorocco\t2012\tonly\t-\tJul\t20\t 3:00\t0\t-\nRule\tMorocco\t2012\tonly\t-\tAug\t20\t 2:00\t1:00\t-\nRule\tMorocco\t2012\tonly\t-\tSep\t30\t 3:00\t0\t-\nRule\tMorocco\t2013\tonly\t-\tJul\t 7\t 3:00\t0\t-\nRule\tMorocco\t2013\tonly\t-\tAug\t10\t 2:00\t1:00\t-\nRule\tMorocco\t2013\t2018\t-\tOct\tlastSun\t 3:00\t0\t-\nRule\tMorocco\t2014\t2018\t-\tMar\tlastSun\t 2:00\t1:00\t-\nRule\tMorocco\t2014\tonly\t-\tJun\t28\t 3:00\t0\t-\nRule\tMorocco\t2014\tonly\t-\tAug\t 2\t 2:00\t1:00\t-\nRule\tMorocco\t2015\tonly\t-\tJun\t14\t 3:00\t0\t-\nRule\tMorocco\t2015\tonly\t-\tJul\t19\t 2:00\t1:00\t-\nRule\tMorocco\t2016\tonly\t-\tJun\t 5\t 3:00\t0\t-\nRule\tMorocco\t2016\tonly\t-\tJul\t10\t 2:00\t1:00\t-\nRule\tMorocco\t2017\tonly\t-\tMay\t21\t 3:00\t0\t-\nRule\tMorocco\t2017\tonly\t-\tJul\t 2\t 2:00\t1:00\t-\nRule\tMorocco\t2018\tonly\t-\tMay\t13\t 3:00\t0\t-\nRule\tMorocco\t2018\tonly\t-\tJun\t17\t 2:00\t1:00\t-\nRule\tMorocco\t2019\tonly\t-\tMay\t 5\t 3:00\t-1:00\t-\nRule\tMorocco\t2019\tonly\t-\tJun\t 9\t 2:00\t0\t-\nRule\tMorocco\t2020\tonly\t-\tApr\t19\t 3:00\t-1:00\t-\nRule\tMorocco\t2020\tonly\t-\tMay\t31\t 2:00\t0\t-\nRule\tMorocco\t2021\tonly\t-\tApr\t11\t 3:00\t-1:00\t-\nRule\tMorocco\t2021\tonly\t-\tMay\t16\t 2:00\t0\t-\nRule\tMorocco\t2022\tonly\t-\tMar\t27\t 3:00\t-1:00\t-\nRule\tMorocco\t2022\tonly\t-\tMay\t 8\t 2:00\t0\t-\nRule\tMorocco\t2023\tonly\t-\tMar\t19\t 3:00\t-1:00\t-\nRule\tMorocco\t2023\tonly\t-\tApr\t23\t 2:00\t0\t-\nRule\tMorocco\t2024\tonly\t-\tMar\t10\t 3:00\t-1:00\t-\nRule\tMorocco\t2024\tonly\t-\tApr\t14\t 2:00\t0\t-\nRule\tMorocco\t2025\tonly\t-\tFeb\t23\t 3:00\t-1:00\t-\nRule\tMorocco\t2025\tonly\t-\tApr\t 6\t 2:00\t0\t-\nRule\tMorocco\t2026\tonly\t-\tFeb\t15\t 3:00\t-1:00\t-\nRule\tMorocco\t2026\tonly\t-\tMar\t22\t 2:00\t0\t-\nRule\tMorocco\t2027\tonly\t-\tFeb\t 7\t 3:00\t-1:00\t-\nRule\tMorocco\t2027\tonly\t-\tMar\t14\t 2:00\t0\t-\nRule\tMorocco\t2028\tonly\t-\tJan\t23\t 3:00\t-1:00\t-\nRule\tMorocco\t2028\tonly\t-\tMar\t 5\t 2:00\t0\t-\nRule\tMorocco\t2029\tonly\t-\tJan\t14\t 3:00\t-1:00\t-\nRule\tMorocco\t2029\tonly\t-\tFeb\t18\t 2:00\t0\t-\nRule\tMorocco\t2029\tonly\t-\tDec\t30\t 3:00\t-1:00\t-\nRule\tMorocco\t2030\tonly\t-\tFeb\t10\t 2:00\t0\t-\nRule\tMorocco\t2030\tonly\t-\tDec\t22\t 3:00\t-1:00\t-\nRule\tMorocco\t2031\tonly\t-\tJan\t26\t 2:00\t0\t-\nRule\tMorocco\t2031\tonly\t-\tDec\t14\t 3:00\t-1:00\t-\nRule\tMorocco\t2032\tonly\t-\tJan\t18\t 2:00\t0\t-\nRule\tMorocco\t2032\tonly\t-\tNov\t28\t 3:00\t-1:00\t-\nRule\tMorocco\t2033\tonly\t-\tJan\t 9\t 2:00\t0\t-\nRule\tMorocco\t2033\tonly\t-\tNov\t20\t 3:00\t-1:00\t-\nRule\tMorocco\t2033\tonly\t-\tDec\t25\t 2:00\t0\t-\nRule\tMorocco\t2034\tonly\t-\tNov\t 5\t 3:00\t-1:00\t-\nRule\tMorocco\t2034\tonly\t-\tDec\t17\t 2:00\t0\t-\nRule\tMorocco\t2035\tonly\t-\tOct\t28\t 3:00\t-1:00\t-\nRule\tMorocco\t2035\tonly\t-\tDec\t 9\t 2:00\t0\t-\nRule\tMorocco\t2036\tonly\t-\tOct\t19\t 3:00\t-1:00\t-\nRule\tMorocco\t2036\tonly\t-\tNov\t23\t 2:00\t0\t-\nRule\tMorocco\t2037\tonly\t-\tOct\t 4\t 3:00\t-1:00\t-\nRule\tMorocco\t2037\tonly\t-\tNov\t15\t 2:00\t0\t-\nRule\tMorocco\t2038\tonly\t-\tSep\t26\t 3:00\t-1:00\t-\nRule\tMorocco\t2038\tonly\t-\tOct\t31\t 2:00\t0\t-\nRule\tMorocco\t2039\tonly\t-\tSep\t18\t 3:00\t-1:00\t-\nRule\tMorocco\t2039\tonly\t-\tOct\t23\t 2:00\t0\t-\nRule\tMorocco\t2040\tonly\t-\tSep\t 2\t 3:00\t-1:00\t-\nRule\tMorocco\t2040\tonly\t-\tOct\t14\t 2:00\t0\t-\nRule\tMorocco\t2041\tonly\t-\tAug\t25\t 3:00\t-1:00\t-\nRule\tMorocco\t2041\tonly\t-\tSep\t29\t 2:00\t0\t-\nRule\tMorocco\t2042\tonly\t-\tAug\t10\t 3:00\t-1:00\t-\nRule\tMorocco\t2042\tonly\t-\tSep\t21\t 2:00\t0\t-\nRule\tMorocco\t2043\tonly\t-\tAug\t 2\t 3:00\t-1:00\t-\nRule\tMorocco\t2043\tonly\t-\tSep\t13\t 2:00\t0\t-\nRule\tMorocco\t2044\tonly\t-\tJul\t24\t 3:00\t-1:00\t-\nRule\tMorocco\t2044\tonly\t-\tAug\t28\t 2:00\t0\t-\nRule\tMorocco\t2045\tonly\t-\tJul\t 9\t 3:00\t-1:00\t-\nRule\tMorocco\t2045\tonly\t-\tAug\t20\t 2:00\t0\t-\nRule\tMorocco\t2046\tonly\t-\tJul\t 1\t 3:00\t-1:00\t-\nRule\tMorocco\t2046\tonly\t-\tAug\t 5\t 2:00\t0\t-\nRule\tMorocco\t2047\tonly\t-\tJun\t23\t 3:00\t-1:00\t-\nRule\tMorocco\t2047\tonly\t-\tJul\t28\t 2:00\t0\t-\nRule\tMorocco\t2048\tonly\t-\tJun\t 7\t 3:00\t-1:00\t-\nRule\tMorocco\t2048\tonly\t-\tJul\t19\t 2:00\t0\t-\nRule\tMorocco\t2049\tonly\t-\tMay\t30\t 3:00\t-1:00\t-\nRule\tMorocco\t2049\tonly\t-\tJul\t 4\t 2:00\t0\t-\nRule\tMorocco\t2050\tonly\t-\tMay\t15\t 3:00\t-1:00\t-\nRule\tMorocco\t2050\tonly\t-\tJun\t26\t 2:00\t0\t-\nRule\tMorocco\t2051\tonly\t-\tMay\t 7\t 3:00\t-1:00\t-\nRule\tMorocco\t2051\tonly\t-\tJun\t18\t 2:00\t0\t-\nRule\tMorocco\t2052\tonly\t-\tApr\t28\t 3:00\t-1:00\t-\nRule\tMorocco\t2052\tonly\t-\tJun\t 2\t 2:00\t0\t-\nRule\tMorocco\t2053\tonly\t-\tApr\t13\t 3:00\t-1:00\t-\nRule\tMorocco\t2053\tonly\t-\tMay\t25\t 2:00\t0\t-\nRule\tMorocco\t2054\tonly\t-\tApr\t 5\t 3:00\t-1:00\t-\nRule\tMorocco\t2054\tonly\t-\tMay\t10\t 2:00\t0\t-\nRule\tMorocco\t2055\tonly\t-\tMar\t28\t 3:00\t-1:00\t-\nRule\tMorocco\t2055\tonly\t-\tMay\t 2\t 2:00\t0\t-\nRule\tMorocco\t2056\tonly\t-\tMar\t12\t 3:00\t-1:00\t-\nRule\tMorocco\t2056\tonly\t-\tApr\t23\t 2:00\t0\t-\nRule\tMorocco\t2057\tonly\t-\tMar\t 4\t 3:00\t-1:00\t-\nRule\tMorocco\t2057\tonly\t-\tApr\t 8\t 2:00\t0\t-\nRule\tMorocco\t2058\tonly\t-\tFeb\t17\t 3:00\t-1:00\t-\nRule\tMorocco\t2058\tonly\t-\tMar\t31\t 2:00\t0\t-\nRule\tMorocco\t2059\tonly\t-\tFeb\t 9\t 3:00\t-1:00\t-\nRule\tMorocco\t2059\tonly\t-\tMar\t23\t 2:00\t0\t-\nRule\tMorocco\t2060\tonly\t-\tFeb\t 1\t 3:00\t-1:00\t-\nRule\tMorocco\t2060\tonly\t-\tMar\t 7\t 2:00\t0\t-\nRule\tMorocco\t2061\tonly\t-\tJan\t16\t 3:00\t-1:00\t-\nRule\tMorocco\t2061\tonly\t-\tFeb\t27\t 2:00\t0\t-\nRule\tMorocco\t2062\tonly\t-\tJan\t 8\t 3:00\t-1:00\t-\nRule\tMorocco\t2062\tonly\t-\tFeb\t12\t 2:00\t0\t-\nRule\tMorocco\t2062\tonly\t-\tDec\t31\t 3:00\t-1:00\t-\nRule\tMorocco\t2063\tonly\t-\tFeb\t 4\t 2:00\t0\t-\nRule\tMorocco\t2063\tonly\t-\tDec\t16\t 3:00\t-1:00\t-\nRule\tMorocco\t2064\tonly\t-\tJan\t27\t 2:00\t0\t-\nRule\tMorocco\t2064\tonly\t-\tDec\t 7\t 3:00\t-1:00\t-\nRule\tMorocco\t2065\tonly\t-\tJan\t11\t 2:00\t0\t-\nRule\tMorocco\t2065\tonly\t-\tNov\t22\t 3:00\t-1:00\t-\nRule\tMorocco\t2066\tonly\t-\tJan\t 3\t 2:00\t0\t-\nRule\tMorocco\t2066\tonly\t-\tNov\t14\t 3:00\t-1:00\t-\nRule\tMorocco\t2066\tonly\t-\tDec\t26\t 2:00\t0\t-\nRule\tMorocco\t2067\tonly\t-\tNov\t 6\t 3:00\t-1:00\t-\nRule\tMorocco\t2067\tonly\t-\tDec\t11\t 2:00\t0\t-\nRule\tMorocco\t2068\tonly\t-\tOct\t21\t 3:00\t-1:00\t-\nRule\tMorocco\t2068\tonly\t-\tDec\t 2\t 2:00\t0\t-\nRule\tMorocco\t2069\tonly\t-\tOct\t13\t 3:00\t-1:00\t-\nRule\tMorocco\t2069\tonly\t-\tNov\t17\t 2:00\t0\t-\nRule\tMorocco\t2070\tonly\t-\tOct\t 5\t 3:00\t-1:00\t-\nRule\tMorocco\t2070\tonly\t-\tNov\t 9\t 2:00\t0\t-\nRule\tMorocco\t2071\tonly\t-\tSep\t20\t 3:00\t-1:00\t-\nRule\tMorocco\t2071\tonly\t-\tNov\t 1\t 2:00\t0\t-\nRule\tMorocco\t2072\tonly\t-\tSep\t11\t 3:00\t-1:00\t-\nRule\tMorocco\t2072\tonly\t-\tOct\t16\t 2:00\t0\t-\nRule\tMorocco\t2073\tonly\t-\tAug\t27\t 3:00\t-1:00\t-\nRule\tMorocco\t2073\tonly\t-\tOct\t 8\t 2:00\t0\t-\nRule\tMorocco\t2074\tonly\t-\tAug\t19\t 3:00\t-1:00\t-\nRule\tMorocco\t2074\tonly\t-\tSep\t30\t 2:00\t0\t-\nRule\tMorocco\t2075\tonly\t-\tAug\t11\t 3:00\t-1:00\t-\nRule\tMorocco\t2075\tonly\t-\tSep\t15\t 2:00\t0\t-\nRule\tMorocco\t2076\tonly\t-\tJul\t26\t 3:00\t-1:00\t-\nRule\tMorocco\t2076\tonly\t-\tSep\t 6\t 2:00\t0\t-\nRule\tMorocco\t2077\tonly\t-\tJul\t18\t 3:00\t-1:00\t-\nRule\tMorocco\t2077\tonly\t-\tAug\t22\t 2:00\t0\t-\nRule\tMorocco\t2078\tonly\t-\tJul\t10\t 3:00\t-1:00\t-\nRule\tMorocco\t2078\tonly\t-\tAug\t14\t 2:00\t0\t-\nRule\tMorocco\t2079\tonly\t-\tJun\t25\t 3:00\t-1:00\t-\nRule\tMorocco\t2079\tonly\t-\tAug\t 6\t 2:00\t0\t-\nRule\tMorocco\t2080\tonly\t-\tJun\t16\t 3:00\t-1:00\t-\nRule\tMorocco\t2080\tonly\t-\tJul\t21\t 2:00\t0\t-\nRule\tMorocco\t2081\tonly\t-\tJun\t 1\t 3:00\t-1:00\t-\nRule\tMorocco\t2081\tonly\t-\tJul\t13\t 2:00\t0\t-\nRule\tMorocco\t2082\tonly\t-\tMay\t24\t 3:00\t-1:00\t-\nRule\tMorocco\t2082\tonly\t-\tJun\t28\t 2:00\t0\t-\nRule\tMorocco\t2083\tonly\t-\tMay\t16\t 3:00\t-1:00\t-\nRule\tMorocco\t2083\tonly\t-\tJun\t20\t 2:00\t0\t-\nRule\tMorocco\t2084\tonly\t-\tApr\t30\t 3:00\t-1:00\t-\nRule\tMorocco\t2084\tonly\t-\tJun\t11\t 2:00\t0\t-\nRule\tMorocco\t2085\tonly\t-\tApr\t22\t 3:00\t-1:00\t-\nRule\tMorocco\t2085\tonly\t-\tMay\t27\t 2:00\t0\t-\nRule\tMorocco\t2086\tonly\t-\tApr\t14\t 3:00\t-1:00\t-\nRule\tMorocco\t2086\tonly\t-\tMay\t19\t 2:00\t0\t-\nRule\tMorocco\t2087\tonly\t-\tMar\t30\t 3:00\t-1:00\t-\nRule\tMorocco\t2087\tonly\t-\tMay\t11\t 2:00\t0\t-\n# For dates after the somewhat-arbitrary cutoff of 2087, assume that\n# Morocco will no longer observe DST.  At some point this table will\n# need to be extended, though quite possibly Morocco will change the\n# rules first.\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone Africa/Casablanca\t-0:30:20 -\tLMT\t1913 Oct 26\n\t\t\t 0:00\tMorocco\t%z\t1984 Mar 16\n\t\t\t 1:00\t-\t%z\t1986\n\t\t\t 0:00\tMorocco\t%z\t2018 Oct 28  3:00\n\t\t\t 1:00\tMorocco\t%z\n\n# Western Sahara\n#\n# From Gwillim Law (2013-10-22):\n# A correspondent who is usually well informed about time zone matters\n# ... says that Western Sahara observes daylight saving time, just as\n# Morocco does.\n#\n# From Paul Eggert (2013-10-23):\n# Assume that this has been true since Western Sahara switched to GMT,\n# since most of it was then controlled by Morocco.\n\nZone Africa/El_Aaiun\t-0:52:48 -\tLMT\t1934 Jan # El Aaiún\n\t\t\t-1:00\t-\t%z\t1976 Apr 14\n\t\t\t 0:00\tMorocco\t%z\t2018 Oct 28  3:00\n\t\t\t 1:00\tMorocco\t%z\n\n# Botswana\n# Burundi\n# Democratic Republic of the Congo (eastern)\n# Malawi\n# Mozambique\n# Rwanda\n# Zambia\n# Zimbabwe\n#\n# From Tim Parenti (2024-07-01):\n# For timestamps before Mozambique's independence, see commentary for\n# Europe/Lisbon.\n#\n# From Paul Eggert (2024-05-24):\n# The London Gazette, 1903-04-03, page 2245, says that\n# as of 1903-03-03 a time ball at the port of Lourenço Marques\n# (as Maputo was then called) was dropped daily at 13:00:00 LMT,\n# corresponding to 22:49:41.7 GMT, so local time was +02:10:18.3.\n# Conversely, the newspaper South Africa, 1909-02-09, page 321,\n# says the port had just installed an apparatus that communicated\n# \"from the controlling clock in the new Observatory at Reuben Point ...\n# exact mean South African time, i.e., 30 deg., or 2 hours East of Greenwich\".\n# Although Shanks gives 1903-03-01 for the transition to CAT,\n# evidently the port transitioned to CAT after 1903-03-03 but before\n# the Portuguese legal transition of 1912-01-01 (see Europe/Lisbon commentary).\n# For lack of better info, list 1909 as the transition date.\n#\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n\t\t#STDOFF\t2:10:18.3\nZone\tAfrica/Maputo\t2:10:18 -\tLMT\t1909\n\t\t\t2:00\t-\tCAT\n\n# Namibia\n\n# From Arthur David Olson (2017-08-09):\n# The text of the \"Namibia Time Act, 1994\" is available online at\n# www.lac.org.na/laws/1994/811.pdf\n# and includes this nugget:\n# Notwithstanding the provisions of subsection (2) of section 1, the\n# first winter period after the commencement of this Act shall\n# commence at OOhOO on Monday 21 March 1994 and shall end at 02h00 on\n# Sunday 4 September 1994.\n\n# From Michael Deckers (2017-04-06):\n# ... both summer and winter time are called \"standard\"\n# (which differs from the use in Ireland) ...\n\n# From Petronella Sibeene (2007-03-30):\n# http://allafrica.com/stories/200703300178.html\n# While the entire country changes its time, Katima Mulilo and other\n# settlements in Caprivi unofficially will not because the sun there\n# rises and sets earlier compared to other regions.  Chief of\n# Forecasting Riaan van Zyl explained that the far eastern parts of\n# the country are close to 40 minutes earlier in sunrise than the rest\n# of the country.\n#\n# From Paul Eggert (2017-02-22):\n# Although the Zambezi Region (formerly known as Caprivi) informally\n# observes Botswana time, we have no details about historical practice.\n# In the meantime people there can use Africa/Gaborone.\n# See: Immanuel S. The Namibian. 2017-02-23.\n# https://www.namibian.com.na/51480/read/Time-change-divides-lawmakers\n\n# From Steffen Thorsen (2017-08-09):\n# Namibia is going to change their time zone to what is now their DST:\n# https://www.newera.com.na/2017/02/23/namibias-winter-time-might-be-repealed/\n# This video is from the government decision:\n# https://www.nbc.na/news/na-passes-namibia-time-bill-repealing-1994-namibia-time-act.8665\n# We have made the assumption so far that they will change their time zone at\n# the same time they would normally start DST, the first Sunday in September:\n# https://www.timeanddate.com/news/time/namibia-new-time-zone.html\n\n# From Paul Eggert (2017-04-09):\n# Before the change, summer and winter time were both standard time legally.\n# However in common parlance, winter time was considered to be DST.  See, e.g.:\n# http://www.nbc.na/news/namibias-winter-time-could-be-scrapped.2706\n# https://zone.my.na/news/times-are-changing-in-namibia\n# https://www.newera.com.na/2017/02/23/namibias-winter-time-might-be-repealed/\n# Use plain \"WAT\" and \"CAT\" for the time zone abbreviations, to be compatible\n# with Namibia's neighbors.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\n# Vanguard section, for zic and other parsers that support negative DST.\nRule\tNamibia\t1994\tonly\t-\tMar\t21\t0:00\t-1:00\tWAT\nRule\tNamibia\t1994\t2017\t-\tSep\tSun>=1\t2:00\t0\tCAT\nRule\tNamibia\t1995\t2017\t-\tApr\tSun>=1\t2:00\t-1:00\tWAT\n# Rearguard section, for parsers lacking negative DST; see ziguard.awk.\n#Rule\tNamibia\t1994\tonly\t-\tMar\t21\t0:00\t0\tWAT\n#Rule\tNamibia\t1994\t2017\t-\tSep\tSun>=1\t2:00\t1:00\tCAT\n#Rule\tNamibia\t1995\t2017\t-\tApr\tSun>=1\t2:00\t0\tWAT\n# End of rearguard section.\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAfrica/Windhoek\t1:08:24 -\tLMT\t1892 Feb 8\n\t\t\t1:30\t-\t%z\t1903 Mar\n\t\t\t2:00\t-\tSAST\t1942 Sep 20  2:00\n\t\t\t2:00\t1:00\tSAST\t1943 Mar 21  2:00\n\t\t\t2:00\t-\tSAST\t1990 Mar 21 # independence\n# Vanguard section, for zic and other parsers that support negative DST.\n\t\t\t2:00\tNamibia\t%s\n# Rearguard section, for parsers lacking negative DST; see ziguard.awk.\n#\t\t\t2:00\t-\tCAT\t1994 Mar 21  0:00\n# From Paul Eggert (2017-04-07):\n# The official date of the 2017 rule change was 2017-10-24.  See:\n# http://www.lac.org.na/laws/annoSTAT/Namibian%20Time%20Act%209%20of%202017.pdf\n#\t\t\t1:00\tNamibia\t%s\t2017 Oct 24\n#\t\t\t2:00\t-\tCAT\n# End of rearguard section.\n\n\n# Angola\n# Benin\n# Cameroon\n# Central African Republic\n# Democratic Republic of the Congo (western)\n# Republic of the Congo\n# Equatorial Guinea\n# Gabon\n# Niger\n# Nigeria\n\n# From P Chan (2020-12-03):\n# GMT was adopted as the standard time of Lagos on 1905-07-01.\n# Lagos Weekly Record, 1905-06-24, p 3\n# http://ddsnext.crl.edu/titles/31558#?c=0&m=668&s=0&cv=2&r=0&xywh=1446,5221,1931,1235\n# says \"It is officially notified that on and after the 1st of July 1905\n# Greenwich Mean Solar Time will be adopted throughout the Colony and\n# Protectorate, and that it will be necessary to put all clocks 13 minutes and\n# 35 seconds back, recording local mean time.\"\n#\n# It seemed that Lagos returned to LMT on 1908-07-01.\n# [The Lagos Standard], 1908-07-01, p 5\n# http://ddsnext.crl.edu/titles/31556#?c=0&m=78&s=0&cv=4&r=0&xywh=-92,3590,3944,2523\n# says \"Scarcely have the people become accustomed to this new time, when\n# another official notice has now appeared announcing that from and after the\n# 1st July next, return will be made to local mean time.\"\n#\n# From P Chan (2020-11-27):\n# On 1914-01-01, standard time of GMT+0:30 was adopted for the unified Nigeria.\n# Colonial Reports - Annual. No. 878. Nigeria. Report for 1914. (April 1916),\n# p 27\n# https://libsysdigi.library.illinois.edu/ilharvest/Africana/Books2011-05/3064634/3064634_1914/3064634_1914_opt.pdf#page=27\n# \"On January 1st [1914], a universal standard time for Nigeria was adopted,\n# viz., half an hour fast on Greenwich mean time, corresponding to the meridian\n# 7° 30' E. long.\"\n# Lloyd's Register of Shipping (1915) says \"Hitherto the time observed in Lagos\n# was the local mean time. On 1st January, 1914, standard time for the whole of\n# Nigeria was introduced ... Lagos time has been advanced about 16 minutes\n# accordingly.\"\n#\n# In 1919, standard time was changed to GMT+1.\n# Interpretation Ordinance (Cap 2)\n# The Laws of Nigeria, Containing the Ordinances of Nigeria, in Force on the\n# 1st Day of January, 1923, Vol.I [p 16]\n# https://books.google.com/books?id=BOMrAQAAMAAJ&pg=PA16\n# \"The expression 'Standard time' means standard time as used in Nigeria:\n# namely, 60 minutes in advance of Greenwich mean time.  (As amended by 18 of\n# 1919, s. 2.)\"\n# From Tim Parenti (2020-12-10):\n# The Lagos Weekly Record, 1919-09-20, p 3 details discussion on the first\n# reading of this Bill by the Legislative Council of the Colony of Nigeria on\n# Thursday 1919-08-28:\n# http://ddsnext.crl.edu/titles/31558?terms&item_id=303484#?m=1118&c=1&s=0&cv=2&r=0&xywh=1261,3408,2994,1915\n# \"The proposal is that the Globe should be divided into twelve zones East and\n# West of Greenwich, of one hour each, Nigeria falling into the zone with a\n# standard of one hour fast on Greenwich Mean Time.  Nigeria standard time is\n# now 30 minutes in advance of Greenwich Mean Time ... according to the new\n# proposal, standard time will be advanced another 30 minutes\".  It was further\n# proposed that the firing of the time guns likewise be adjusted by 30 minutes\n# to compensate.\n# From Tim Parenti (2020-12-10), per P Chan (2020-12-11):\n# The text of Ordinance 18 of 1919, published in Nigeria Gazette, Vol 6, No 52,\n# shows that the change was assented to the following day and took effect \"on\n# the 1st day of September, 1919.\"\n# Nigeria Gazette and Supplements 1919 Jan-Dec, Reference: 73266B-40,\n# img 245-246\n# https://microform.digital/boa/collections/77/volumes/539/nigeria-lagos-1887-1919\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAfrica/Lagos\t0:13:35 -\tLMT\t1905 Jul  1\n\t\t\t0:00\t-\tGMT\t1908 Jul  1\n\t\t\t0:13:35\t-\tLMT\t1914 Jan  1\n\t\t\t0:30\t-\t%z\t1919 Sep  1\n\t\t\t1:00\t-\tWAT\n\n# São Tomé and Príncipe\n\n# See Europe/Lisbon for info about the 1912 transition.\n\n# From Steffen Thorsen (2018-01-08):\n# Multiple sources tell that São Tomé changed from UTC to UTC+1 as\n# they entered the year 2018.\n# From Michael Deckers (2018-01-08):\n# the switch is from 01:00 to 02:00 ... [Decree No. 25/2017]\n# http://www.mnec.gov.st/index.php/publicacoes/documentos/file/90-decreto-lei-n-25-2017\n\n# From Vadim Nasardinov (2018-12-29):\n# São Tomé and Príncipe is about to do the following on Jan 1, 2019:\n# https://www.stp-press.st/2018/12/05/governo-jesus-ja-decidiu-repor-hora-legal-sao-tomense/\n#\n# From Michael Deckers (2018-12-30):\n# https://www.legis-palop.org/download.jsp?idFile=102818\n# ... [The legal time of the country, which coincides with universal\n# coordinated time, will be reinstituted at 2 o'clock on day 1 of January, 2019.]\n\nZone\tAfrica/Sao_Tome\t 0:26:56 -\tLMT\t1884\n\t\t#STDOFF\t-0:36:44.68\n\t\t\t-0:36:45 -\tLMT\t1912 Jan  1 00:00u # Lisbon MT\n\t\t\t 0:00\t-\tGMT\t2018 Jan  1 01:00\n\t\t\t 1:00\t-\tWAT\t2019 Jan  1 02:00\n\t\t\t 0:00\t-\tGMT\n\n# Eswatini (Swaziland)\n# Lesotho\n# South Africa\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tSA\t1942\t1943\t-\tSep\tSun>=15\t2:00\t1:00\t-\nRule\tSA\t1943\t1944\t-\tMar\tSun>=15\t2:00\t0\t-\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone Africa/Johannesburg 1:52:00 -\tLMT\t1892 Feb 8\n\t\t\t1:30\t-\tSAST\t1903 Mar\n\t\t\t2:00\tSA\tSAST\n#\n# Marion and Prince Edward Is\n# scientific station since 1947\n# no information\n\n# Sudan\n\n# From <http://www.sunanews.net/sn13jane.html>\n# Sudan News Agency (2000-01-13),\n# also reported by Michaël De Beukelaer-Dossche via Steffen Thorsen:\n# Clocks will be moved ahead for 60 minutes all over the Sudan as of noon\n# Saturday....  This was announced Thursday by Caretaker State Minister for\n# Manpower Abdul-Rahman Nur-Eddin.\n\n# From Ahmed Atyya, National Telecommunications Corp. (NTC), Sudan (2017-10-17):\n# ... the Republic of Sudan is going to change the time zone from (GMT+3:00)\n# to (GMT+ 2:00) starting from Wednesday 1 November 2017.\n#\n# From Paul Eggert (2017-10-18):\n# A scanned copy (in Arabic) of Cabinet Resolution No. 352 for the\n# year 2017 can be found as an attachment in email today from Yahia\n# Abdalla of NTC, archived at:\n# https://mm.icann.org/pipermail/tz/2017-October/025333.html\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tSudan\t1970\tonly\t-\tMay\t 1\t0:00\t1:00\tS\nRule\tSudan\t1970\t1985\t-\tOct\t15\t0:00\t0\t-\nRule\tSudan\t1971\tonly\t-\tApr\t30\t0:00\t1:00\tS\nRule\tSudan\t1972\t1985\t-\tApr\tlastSun\t0:00\t1:00\tS\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAfrica/Khartoum\t2:10:08 -\tLMT\t1931\n\t\t\t2:00\tSudan\tCA%sT\t2000 Jan 15 12:00\n\t\t\t3:00\t-\tEAT\t2017 Nov  1\n\t\t\t2:00\t-\tCAT\n\n# South Sudan\n\n# From Steffen Thorsen (2021-01-18):\n# \"South Sudan will change its time zone by setting the clock back 1\n# hour on February 1, 2021....\"\n# from https://eyeradio.org/south-sudan-adopts-new-time-zone-makuei/\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAfrica/Juba\t2:06:28 -\tLMT\t1931\n\t\t\t2:00\tSudan\tCA%sT\t2000 Jan 15 12:00\n\t\t\t3:00\t-\tEAT\t2021 Feb  1 00:00\n\t\t\t2:00\t-\tCAT\n\n# Tunisia\n\n# From Gwillim Law (2005-04-30):\n# My correspondent, Risto Nykänen, has alerted me to another adoption of DST,\n# this time in Tunisia.  According to Yahoo France News\n# <http://fr.news.yahoo.com/050426/5/4dumk.html>, in a story attributed to AP\n# and dated 2005-04-26, \"Tunisia has decided to advance its official time by\n# one hour, starting on Sunday, May 1.  Henceforth, Tunisian time will be\n# UTC+2 instead of UTC+1.  The change will take place at 23:00 UTC next\n# Saturday.\"  (My translation)\n#\n# From Oscar van Vlijmen (2005-05-02):\n# La Presse, the first national daily newspaper ...\n# http://www.lapresse.tn/archives/archives280405/actualites/lheure.html\n# ... DST for 2005: on: Sun May 1 0h standard time, off: Fri Sept. 30,\n# 1h standard time.\n#\n# From Atef Loukil (2006-03-28):\n# The daylight saving time will be the same each year:\n# Beginning      : the last Sunday of March at 02:00\n# Ending         : the last Sunday of October at 03:00 ...\n# http://www.tap.info.tn/en/index.php?option=com_content&task=view&id=1188&Itemid=50\n\n# From Steffen Thorsen (2009-03-16):\n# According to several news sources, Tunisia will not observe DST this year.\n# (Arabic)\n# http://www.elbashayer.com/?page=viewn&nid=42546\n# https://www.babnet.net/kiwidetail-15295.asp\n#\n# We have also confirmed this with the US embassy in Tunisia.\n# We have a wrap-up about this on the following page:\n# https://www.timeanddate.com/news/time/tunisia-cancels-dst-2009.html\n\n# From Alexander Krivenyshev (2009-03-17):\n# Here is a link to Tunis Afrique Presse News Agency\n#\n# Standard time to be kept the whole year long (tap.info.tn):\n#\n# (in English)\n# http://www.tap.info.tn/en/index.php?option=com_content&task=view&id=26813&Itemid=157\n#\n# (in Arabic)\n# http://www.tap.info.tn/ar/index.php?option=com_content&task=view&id=61240&Itemid=1\n\n# From Arthur David Olson (2009-03-18):\n# The Tunis Afrique Presse News Agency notice contains this: \"This measure is\n# due to the fact that the fasting month of Ramadan coincides with the period\n# concerned by summer time.  Therefore, the standard time will be kept\n# unchanged the whole year long.\"  So foregoing DST seems to be an exception\n# (albeit one that may be repeated in the future).\n\n# From Alexander Krivenyshev (2010-03-27):\n# According to some news reports Tunis confirmed not to use DST in 2010\n#\n# (translation):\n# \"The Tunisian government has decided to abandon DST, which was scheduled on\n# Sunday...\n# Tunisian authorities had suspended the DST for the first time last year also\n# coincided with the month of Ramadan...\"\n#\n# (in Arabic)\n# http://www.moheet.com/show_news.aspx?nid=358861&pg=1\n# http://www.almadenahnews.com/newss/news.php?c=118&id=38036\n# http://www.worldtimezone.com/dst_news/dst_news_tunis02.html\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tTunisia\t1939\tonly\t-\tApr\t15\t23:00s\t1:00\tS\nRule\tTunisia\t1939\tonly\t-\tNov\t18\t23:00s\t0\t-\nRule\tTunisia\t1940\tonly\t-\tFeb\t25\t23:00s\t1:00\tS\nRule\tTunisia\t1941\tonly\t-\tOct\t 6\t 0:00\t0\t-\nRule\tTunisia\t1942\tonly\t-\tMar\t 9\t 0:00\t1:00\tS\nRule\tTunisia\t1942\tonly\t-\tNov\t 2\t 3:00\t0\t-\nRule\tTunisia\t1943\tonly\t-\tMar\t29\t 2:00\t1:00\tS\nRule\tTunisia\t1943\tonly\t-\tApr\t17\t 2:00\t0\t-\nRule\tTunisia\t1943\tonly\t-\tApr\t25\t 2:00\t1:00\tS\nRule\tTunisia\t1943\tonly\t-\tOct\t 4\t 2:00\t0\t-\nRule\tTunisia\t1944\t1945\t-\tApr\tMon>=1\t 2:00\t1:00\tS\nRule\tTunisia\t1944\tonly\t-\tOct\t 8\t 0:00\t0\t-\nRule\tTunisia\t1945\tonly\t-\tSep\t16\t 0:00\t0\t-\nRule\tTunisia\t1977\tonly\t-\tApr\t30\t 0:00s\t1:00\tS\nRule\tTunisia\t1977\tonly\t-\tSep\t24\t 0:00s\t0\t-\nRule\tTunisia\t1978\tonly\t-\tMay\t 1\t 0:00s\t1:00\tS\nRule\tTunisia\t1978\tonly\t-\tOct\t 1\t 0:00s\t0\t-\nRule\tTunisia\t1988\tonly\t-\tJun\t 1\t 0:00s\t1:00\tS\nRule\tTunisia\t1988\t1990\t-\tSep\tlastSun\t 0:00s\t0\t-\nRule\tTunisia\t1989\tonly\t-\tMar\t26\t 0:00s\t1:00\tS\nRule\tTunisia\t1990\tonly\t-\tMay\t 1\t 0:00s\t1:00\tS\nRule\tTunisia\t2005\tonly\t-\tMay\t 1\t 0:00s\t1:00\tS\nRule\tTunisia\t2005\tonly\t-\tSep\t30\t 1:00s\t0\t-\nRule\tTunisia\t2006\t2008\t-\tMar\tlastSun\t 2:00s\t1:00\tS\nRule\tTunisia\t2006\t2008\t-\tOct\tlastSun\t 2:00s\t0\t-\n\n# See Europe/Paris commentary for PMT-related transitions.\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAfrica/Tunis\t0:40:44 -\tLMT\t1881 May 12\n\t\t\t0:09:21\t-\tPMT\t1911 Mar 11 # Paris Mean Time\n\t\t\t1:00\tTunisia\tCE%sT\n"
        },
        {
          "name": "antarctica",
          "type": "blob",
          "size": 13.7724609375,
          "content": "# tzdb data for Antarctica and environs\n\n# This file is in the public domain, so clarified as of\n# 2009-05-17 by Arthur David Olson.\n\n# From Paul Eggert (1999-11-15):\n# To keep things manageable, we list only locations occupied year-round; see\n# COMNAP - Stations and Bases\n# http://www.comnap.aq/comnap/comnap.nsf/P/Stations/\n# and\n# Summary of the Peri-Antarctic Islands (1998-07-23)\n# http://www.spri.cam.ac.uk/bob/periant.htm\n# for information.\n# Unless otherwise specified, we have no time zone information.\n\n# FORMAT is '-00' and STDOFF is 0 for locations while uninhabited.\n\n# Argentina - year-round bases\n# Belgrano II, Confin Coast, -770227-0343737, since 1972-02-05\n# Carlini, Potter Cove, King George Island, -6414-0602320, since 1982-01\n# Esperanza, Hope Bay, -6323-05659, since 1952-12-17\n# Marambio, -6414-05637, since 1969-10-29\n# Orcadas, Laurie I, -6016-04444, since 1904-02-22\n# San Martín, Barry I, -6808-06706, since 1951-03-21\n#\t(except 1960-03 / 1976-03-21)\n\n# Australia - territories\n# Heard Island, McDonald Islands (uninhabited)\n#\tpreviously sealers and scientific personnel wintered\n#\tMargaret Turner reports\n#\thttps://web.archive.org/web/20021204222245/http://www.dstc.qut.edu.au/DST/marg/daylight.html\n#\t(1999-09-30) that they're UT +05, with no DST;\n#\tpresumably this is when they have visitors.\n#\n# year-round bases\n# Casey, Bailey Peninsula, -6617+11032, since 1969\n# Davis, Vestfold Hills, -6835+07759, since 1957-01-13\n#\t(except 1964-11 - 1969-02)\n# Mawson, Holme Bay, -6736+06253, since 1954-02-13\n\n# From Steffen Thorsen (2009-03-11):\n# Three Australian stations in Antarctica have changed their time zone:\n# Casey moved from UTC+8 to UTC+11\n# Davis moved from UTC+7 to UTC+5\n# Mawson moved from UTC+6 to UTC+5\n# The changes occurred on 2009-10-18 at 02:00 (local times).\n#\n# Government source: (Australian Antarctic Division)\n# http://www.aad.gov.au/default.asp?casid=37079\n#\n# We have more background information here:\n# https://www.timeanddate.com/news/time/antarctica-new-times.html\n\n# From Steffen Thorsen (2010-03-10):\n# We got these changes from the Australian Antarctic Division: ...\n#\n# - Casey station reverted to its normal time of UTC+8 on 5 March 2010.\n# The change to UTC+11 is being considered as a regular summer thing but\n# has not been decided yet.\n#\n# - Davis station will revert to its normal time of UTC+7 at 10 March 2010\n# 20:00 UTC.\n#\n# - Mawson station stays on UTC+5.\n#\n# Background:\n# https://www.timeanddate.com/news/time/antartica-time-changes-2010.html\n\n# From Steffen Thorsen (2016-10-28):\n# Australian Antarctica Division informed us that Casey changed time\n# zone to UTC+11 in \"the morning of 22nd October 2016\".\n\n# From Steffen Thorsen (2020-10-02, as corrected):\n# Based on information we have received from the Australian Antarctic\n# Division, Casey station and Macquarie Island station will move to Tasmanian\n# daylight savings time on Sunday 4 October. This will take effect from 0001\n# hrs on Sunday 4 October 2020 and will mean Casey and Macquarie Island will\n# be on the same time zone as Hobart.  Some past dates too for this 3 hour\n# time change back and forth between UTC+8 and UTC+11 for Casey:\n# - 2018 Oct  7 4:00 - 2019 Mar 17 3:00 - 2019 Oct  4 3:00 - 2020 Mar  8 3:00\n# and now - 2020 Oct  4 0:01\n\n# From Paul Eggert (2023-12-20):\n# Transitions from 2021 on are taken from:\n# https://www.timeanddate.com/time/zone/antarctica/casey\n# retrieved at various dates.\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone Antarctica/Casey\t 0\t-\t-00\t1969\n\t\t\t 8:00\t-\t%z\t2009 Oct 18  2:00\n\t\t\t11:00\t-\t%z\t2010 Mar  5  2:00\n\t\t\t 8:00\t-\t%z\t2011 Oct 28  2:00\n\t\t\t11:00\t-\t%z\t2012 Feb 21 17:00u\n\t\t\t 8:00\t-\t%z\t2016 Oct 22\n\t\t\t11:00\t-\t%z\t2018 Mar 11  4:00\n\t\t\t 8:00\t-\t%z\t2018 Oct  7  4:00\n\t\t\t11:00\t-\t%z\t2019 Mar 17  3:00\n\t\t\t 8:00\t-\t%z\t2019 Oct  4  3:00\n\t\t\t11:00\t-\t%z\t2020 Mar  8  3:00\n\t\t\t 8:00\t-\t%z\t2020 Oct  4  0:01\n\t\t\t11:00\t-\t%z\t2021 Mar 14  0:00\n\t\t\t 8:00\t-\t%z\t2021 Oct  3  0:01\n\t\t\t11:00\t-\t%z\t2022 Mar 13  0:00\n\t\t\t 8:00\t-\t%z\t2022 Oct  2  0:01\n\t\t\t11:00\t-\t%z\t2023 Mar  9  3:00\n\t\t\t 8:00\t-\t%z\nZone Antarctica/Davis\t0\t-\t-00\t1957 Jan 13\n\t\t\t7:00\t-\t%z\t1964 Nov\n\t\t\t0\t-\t-00\t1969 Feb\n\t\t\t7:00\t-\t%z\t2009 Oct 18  2:00\n\t\t\t5:00\t-\t%z\t2010 Mar 10 20:00u\n\t\t\t7:00\t-\t%z\t2011 Oct 28  2:00\n\t\t\t5:00\t-\t%z\t2012 Feb 21 20:00u\n\t\t\t7:00\t-\t%z\nZone Antarctica/Mawson\t0\t-\t-00\t1954 Feb 13\n\t\t\t6:00\t-\t%z\t2009 Oct 18  2:00\n\t\t\t5:00\t-\t%z\n# References:\n# Casey Weather (1998-02-26)\n# http://www.antdiv.gov.au/aad/exop/sfo/casey/casey_aws.html\n# Davis Station, Antarctica (1998-02-26)\n# http://www.antdiv.gov.au/aad/exop/sfo/davis/video.html\n# Mawson Station, Antarctica (1998-02-25)\n# http://www.antdiv.gov.au/aad/exop/sfo/mawson/video.html\n\n# Belgium - year-round base\n# Princess Elisabeth, Queen Maud Land, -713412+0231200, since 2007\n\n# Brazil - year-round base\n# Ferraz, King George Island, -6205+05824, since 1983/4\n\n# Bulgaria - year-round base\n# St. Kliment Ohridski, Livingston Island, -623829-0602153, since 1988\n\n# Chile - year-round bases and towns\n# Escudero, South Shetland Is, -621157-0585735, since 1994\n# Frei Montalva, King George Island, -6214-05848, since 1969-03-07\n# O'Higgins, Antarctic Peninsula, -6319-05704, since 1948-02\n# Prat, -6230-05941\n# Villa Las Estrellas (a town), around the Frei base, since 1984-04-09\n# These locations employ Region of Magallanes time; use\n# TZ='America/Punta_Arenas'.\n\n# China - year-round bases\n# Great Wall, King George Island, -6213-05858, since 1985-02-20\n# Zhongshan, Larsemann Hills, Prydz Bay, -6922+07623, since 1989-02-26\n\n# France - year-round bases (also see \"France & Italy\")\n#\n# From Antoine Leca (1997-01-20):\n# Time data entries are from Nicole Pailleau at the IFRTP\n# (French Institute for Polar Research and Technology).\n# She confirms that French Southern Territories and Terre Adélie bases\n# don't observe daylight saving time, even if Terre Adélie supplies came\n# from Tasmania.\n#\n# French Southern Territories with year-round inhabitants\n#\n# Alfred Faure, Possession Island, Crozet Islands, -462551+0515152, since 1964;\n#\tsealing & whaling stations operated variously 1802/1911+;\n#\tsee Asia/Dubai.\n#\n# Martin-de-Viviès, Amsterdam Island, -374105+0773155, since 1950\n# Port-aux-Français, Kerguelen Islands, -492110+0701303, since 1951;\n#\twhaling & sealing station operated 1908/1914, 1920/1929, and 1951/1956\n#\n# St Paul Island - near Amsterdam, uninhabited\n#\tfishing stations operated variously 1819/1931\n#\n# Kerguelen - see Indian/Maldives.\n#\n# year-round base in the main continent\n# Dumont d'Urville - see Pacific/Port_Moresby.\n\n# France & Italy - year-round base\n# Concordia, -750600+1232000, since 2005\n# https://en.wikipedia.org/wiki/Concordia_Station\n# Can use Asia/Singapore, which it has agreed with since inception.\n\n# Germany - year-round base\n# Neumayer III, -704080-0081602, since 2009\n\n# India - year-round bases\n# Bharati, -692428+0761114, since 2012\n# Maitri, -704558+0114356, since 1989\n\n# Italy - year-round base (also see \"France & Italy\")\n# Zuchelli, Terra Nova Bay, -744140+1640647, since 1986\n\n# Japan - year-round bases\n# See Asia/Riyadh.\n\n# S Korea - year-round base\n# Jang Bogo, Terra Nova Bay, -743700+1641205 since 2014\n# King Sejong, King George Island, -6213-05847, since 1988\n\n# New Zealand - claims\n# Balleny Islands (never inhabited)\n# Scott Island (never inhabited)\n#\n# year-round base\n# Scott Base, Ross Island, since 1957-01.\n# See Pacific/Auckland.\n\n# Norway - territories\n# Bouvet (never inhabited)\n#\n# claims\n# Peter I Island (never inhabited)\n#\n# year-round base\n# Troll, Queen Maud Land, -720041+0023206, since 2005-02-12\n#\n# From Paul-Inge Flakstad (2014-03-10):\n# I recently had a long dialog about this with the developer of timegenie.com.\n# In the absence of specific dates, he decided to choose some likely ones:\n#   GMT +1 - From March 1 to the last Sunday in March\n#   GMT +2 - From the last Sunday in March until the last Sunday in October\n#   GMT +1 - From the last Sunday in October until November 7\n#   GMT +0 - From November 7 until March 1\n# The dates for switching to and from UTC+0 will probably not be absolutely\n# correct, but they should be quite close to the actual dates.\n#\n# From Paul Eggert (2014-03-21):\n# The CET-switching Troll rules require zic from tz 2014b or later, so as\n# suggested by Bengt-Inge Larsson comment them out for now, and approximate\n# with only UTC and CEST.  Uncomment them when 2014b is more prevalent.\n#\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\n#Rule\tTroll\t2005\tmax\t-\tMar\t 1\t1:00u\t1:00\t+01\nRule\tTroll\t2005\tmax\t-\tMar\tlastSun\t1:00u\t2:00\t+02\n#Rule\tTroll\t2005\tmax\t-\tOct\tlastSun\t1:00u\t1:00\t+01\n#Rule\tTroll\t2004\tmax\t-\tNov\t 7\t1:00u\t0:00\t+00\n# Remove the following line when uncommenting the above '#Rule' lines.\nRule\tTroll\t2004\tmax\t-\tOct\tlastSun\t1:00u\t0:00\t+00\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone Antarctica/Troll\t0\t-\t-00\t2005 Feb 12\n\t\t\t0:00\tTroll\t%s\n\n# Poland - year-round base\n# Arctowski, King George Island, -620945-0582745, since 1977\n\n# Romania - year-bound base\n# Law-Racoviță, Larsemann Hills, -692319+0762251, since 1986\n\n# Russia - year-round bases\n# Bellingshausen, King George Island, -621159-0585337, since 1968-02-22\n# Mirny, Davis coast, -6633+09301, since 1956-02\n# Molodezhnaya, Alasheyev Bay, -6740+04551,\n#\tyear-round from 1962-02 to 1999-07-01\n# Novolazarevskaya, Queen Maud Land, -7046+01150,\n#\tyear-round from 1960/61 to 1992\n\n# Vostok, since 1957-12-16, temporarily closed 1994-02/1994-11\n# From Craig Mundell (1994-12-15):\n# http://quest.arc.nasa.gov/antarctica/QA/computers/Directions,Time,ZIP\n# Vostok, which is one of the Russian stations, is set on the same\n# time as Moscow, Russia.\n#\n# From Lee Hotz (2001-03-08):\n# I queried the folks at Columbia who spent the summer at Vostok and this is\n# what they had to say about time there:\n# \"in the US Camp (East Camp) we have been on New Zealand (McMurdo)\n# time, which is 12 hours ahead of GMT. The Russian Station Vostok was\n# 6 hours behind that (although only 2 miles away, i.e. 6 hours ahead\n# of GMT). This is a time zone I think two hours east of Moscow. The\n# natural time zone is in between the two: 8 hours ahead of GMT.\"\n#\n# From Paul Eggert (2001-05-04):\n# This seems to be hopelessly confusing, so I asked Lee Hotz about it\n# in person.  He said that some Antarctic locations set their local\n# time so that noon is the warmest part of the day, and that this\n# changes during the year and does not necessarily correspond to mean\n# solar noon.  So the Vostok time might have been whatever the clocks\n# happened to be during their visit.  So we still don't really know what time\n# it is at Vostok.\n#\n# From Zakhary V. Akulov (2023-12-17 22:00:48 +0700):\n# ... from December, 18, 2023 00:00 by my decision the local time of\n# the Antarctic research base Vostok will correspond to UTC+5.\n# (2023-12-19): We constantly interact with Progress base, with company who\n# builds new wintering station, with sledge convoys, with aviation - they all\n# use UTC+5. Besides, difference between Moscow time is just 2 hours now, not 4.\n# (2023-12-19, in response to the question \"Has local time at Vostok\n# been UTC+6 ever since 1957, or has it changed before?\"): No. At least\n# since my antarctic career start, 10 years ago, Vostok base has UTC+7.\n# (In response to a 2023-12-18 question \"from 02:00 to 00:00 today\"): This.\n#\n# From Paul Eggert (2023-12-18):\n# For lack of better info, guess Vostok was at +07 from founding through today,\n# except when closed.\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone Antarctica/Vostok\t0\t-\t-00\t1957 Dec 16\n\t\t\t7:00\t-\t%z\t1994 Feb\n\t\t\t0\t-\t-00\t1994 Nov\n\t\t\t7:00\t-\t%z\t2023 Dec 18  2:00\n\t\t\t5:00\t-\t%z\n\n# S Africa - year-round bases\n# Marion Island, -4653+03752\n# SANAE IV, Vesleskarvet, Queen Maud Land, -714022-0025026, since 1997\n\n# Ukraine - year-round base\n# Vernadsky (formerly Faraday), Galindez Island, -651445-0641526, since 1954\n\n# United Kingdom\n#\n# British Antarctic Territories (BAT) claims\n# South Orkney Islands\n#\tscientific station from 1903\n#\twhaling station at Signy I 1920/1926\n# South Shetland Islands\n#\n# year-round bases\n# Bird Island, South Georgia, -5400-03803, since 1983\n# Deception Island, -6259-06034, whaling station 1912/1931,\n#\tscientific station 1943/1967,\n#\tpreviously sealers and a scientific expedition wintered by accident,\n#\tand a garrison was deployed briefly\n# Halley, Coates Land, -7535-02604, since 1956-01-06\n#\tHalley is on a moving ice shelf and is periodically relocated\n#\tso that it is never more than 10km from its nominal location.\n# Rothera, Adelaide Island, -6734-6808, since 1976-12-01\n#\n# From Paul Eggert (2002-10-22)\n# <http://webexhibits.org/daylightsaving/g.html> says Rothera is -03 all year.\n#\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone Antarctica/Rothera\t0\t-\t-00\t1976 Dec  1\n\t\t\t-3:00\t-\t%z\n\n# Uruguay - year round base\n# Artigas, King George Island, -621104-0585107\n\n# USA - year-round bases\n#\n# Palmer, Anvers Island, since 1965 (moved 2 miles in 1968)\n# See 'southamerica' for Antarctica/Palmer, since it uses South American DST.\n#\n# McMurdo Station, Ross Island, since 1955-12\n# Amundsen-Scott South Pole Station, continuously occupied since 1956-11-20\n#\n# From Chris Carrier (1996-06-27):\n# Siple, the first commander of the South Pole station,\n# stated that he would have liked to have kept GMT at the station,\n# but that he found it more convenient to keep GMT+12\n# as supplies for the station were coming from McMurdo Sound,\n# which was on GMT+12 because New Zealand was on GMT+12 all year\n# at that time (1957).  (Source: Siple's book 90° South.)\n#\n# From Susan Smith\n# http://www.cybertours.com/whs/pole10.html\n# (1995-11-13 16:24:56 +1300, no longer available):\n# We use the same time as McMurdo does.\n# And they use the same time as Christchurch, NZ does....\n# One last quirk about South Pole time.\n# All the electric clocks are usually wrong.\n# Something about the generators running at 60.1hertz or something\n# makes all of the clocks run fast.  So every couple of days,\n# we have to go around and set them back 5 minutes or so.\n# Maybe if we let them run fast all of the time, we'd get to leave here sooner!!\n#\n# See Pacific/Auckland.\n"
        },
        {
          "name": "asctime.c",
          "type": "blob",
          "size": 4.4736328125,
          "content": "/* asctime a la ISO C.  */\n\n/*\n** This file is in the public domain, so clarified as of\n** 1996-06-05 by Arthur David Olson.\n*/\n\n/*\n** Avoid the temptation to punt entirely to strftime;\n** strftime can behave badly when tm components are out of range, and\n** the output of strftime is supposed to be locale specific\n** whereas the output of asctime is supposed to be constant.\n*/\n\n/*LINTLIBRARY*/\n\n#include \"private.h\"\n#include <stdio.h>\n\nenum { STD_ASCTIME_BUF_SIZE = 26 };\n/*\n** Big enough for something such as\n** ??? ???-2147483648 -2147483648:-2147483648:-2147483648     -2147483648\\n\n** (two three-character abbreviations, five strings denoting integers,\n** seven explicit spaces, two explicit colons, a newline,\n** and a trailing NUL byte).\n** The values above are for systems where an int is 32 bits and are provided\n** as an example; the size expression below is a bound for the system at\n** hand.\n*/\nstatic char buf_asctime[2*3 + 5*INT_STRLEN_MAXIMUM(int) + 7 + 2 + 1 + 1];\n\n/* On pre-C99 platforms, a snprintf substitute good enough for us.  */\n#if !HAVE_SNPRINTF\n# include <stdarg.h>\nATTRIBUTE_FORMAT((printf, 3, 4)) static int\nmy_snprintf(char *s, size_t size, char const *format, ...)\n{\n  int n;\n  va_list args;\n  char stackbuf[sizeof buf_asctime];\n  va_start(args, format);\n  n = vsprintf(stackbuf, format, args);\n  va_end (args);\n  if (0 <= n && n < size)\n    memcpy (s, stackbuf, n + 1);\n  return n;\n}\n# undef snprintf\n# define snprintf my_snprintf\n#endif\n\n/* Publish asctime_r and ctime_r only when supporting older POSIX.  */\n#if SUPPORT_POSIX2008\n# define asctime_static\n#else\n# define asctime_static static\n# undef asctime_r\n# undef ctime_r\n# define asctime_r static_asctime_r\n# define ctime_r static_ctime_r\n#endif\n\nasctime_static\nchar *\nasctime_r(struct tm const *restrict timeptr, char *restrict buf)\n{\n\tstatic const char\twday_name[][4] = {\n\t\t\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"\n\t};\n\tstatic const char\tmon_name[][4] = {\n\t\t\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n\t\t\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n\t};\n\tregister const char *\twn;\n\tregister const char *\tmn;\n\tint year, mday, hour, min, sec;\n\tlong long_TM_YEAR_BASE = TM_YEAR_BASE;\n\tsize_t bufsize = (buf == buf_asctime\n\t\t\t  ? sizeof buf_asctime : STD_ASCTIME_BUF_SIZE);\n\n\tif (timeptr == NULL) {\n\t\tstrcpy(buf, \"??? ??? ?? ??:??:?? ????\\n\");\n\t\t/* Set errno now, since strcpy might change it in\n\t\t   POSIX.1-2017 and earlier.  */\n\t\terrno = EINVAL;\n\t\treturn buf;\n\t}\n\tif (timeptr->tm_wday < 0 || timeptr->tm_wday >= DAYSPERWEEK)\n\t\twn = \"???\";\n\telse\twn = wday_name[timeptr->tm_wday];\n\tif (timeptr->tm_mon < 0 || timeptr->tm_mon >= MONSPERYEAR)\n\t\tmn = \"???\";\n\telse\tmn = mon_name[timeptr->tm_mon];\n\n\tyear = timeptr->tm_year;\n\tmday = timeptr->tm_mday;\n\thour = timeptr->tm_hour;\n\tmin = timeptr->tm_min;\n\tsec = timeptr->tm_sec;\n\n\t/* Vintage programs are coded for years that are always four bytes long\n\t   and may assume that the newline always lands in the same place.\n\t   For years that are less than four bytes, pad the output with\n\t   leading zeroes to get the newline in the traditional place.\n\t   For years longer than four bytes, put extra spaces before the year\n\t   so that vintage code trying to overwrite the newline\n\t   won't overwrite a digit within a year and truncate the year,\n\t   using the principle that no output is better than wrong output.\n\t   This conforms to ISO C and POSIX standards, which say behavior\n\t   is undefined when the year is less than 1000 or greater than 9999.\n\n\t   Also, avoid overflow when formatting tm_year + TM_YEAR_BASE.  */\n\n\tif ((year <= LONG_MAX - TM_YEAR_BASE\n\t     ? snprintf (buf, bufsize,\n\t\t\t ((-999 - TM_YEAR_BASE <= year\n\t\t\t   && year <= 9999 - TM_YEAR_BASE)\n\t\t\t  ? \"%s %s%3d %.2d:%.2d:%.2d %04ld\\n\"\n\t\t\t  : \"%s %s%3d %.2d:%.2d:%.2d     %ld\\n\"),\n\t\t\t wn, mn, mday, hour, min, sec,\n\t\t\t year + long_TM_YEAR_BASE)\n\t     : snprintf (buf, bufsize,\n\t\t\t \"%s %s%3d %.2d:%.2d:%.2d     %d%d\\n\",\n\t\t\t wn, mn, mday, hour, min, sec,\n\t\t\t year / 10 + TM_YEAR_BASE / 10,\n\t\t\t year % 10))\n\t    < bufsize)\n\t\treturn buf;\n\telse {\n\t\terrno = EOVERFLOW;\n\t\treturn NULL;\n\t}\n}\n\nchar *\nasctime(register const struct tm *timeptr)\n{\n\treturn asctime_r(timeptr, buf_asctime);\n}\n\nasctime_static\nchar *\nctime_r(const time_t *timep, char *buf)\n{\n  struct tm mytm;\n  struct tm *tmp = localtime_r(timep, &mytm);\n  return tmp ? asctime_r(tmp, buf) : NULL;\n}\n\nchar *\nctime(const time_t *timep)\n{\n  /* Do not call localtime_r, as C23 requires ctime to initialize the\n     static storage that localtime updates.  */\n  struct tm *tmp = localtime(timep);\n  return tmp ? asctime(tmp) : NULL;\n}\n"
        },
        {
          "name": "asia",
          "type": "blob",
          "size": 187.7763671875,
          "content": "# tzdb data for Asia and environs\n\n# This file is in the public domain, so clarified as of\n# 2009-05-17 by Arthur David Olson.\n\n# This file is by no means authoritative; if you think you know better,\n# go ahead and edit the file (and please send any changes to\n# tz@iana.org for general use in the future).  For more, please see\n# the file CONTRIBUTING in the tz distribution.\n\n# From Paul Eggert (2019-07-11):\n#\n# Unless otherwise specified, the source for data through 1990 is:\n# Thomas G. Shanks and Rique Pottenger, The International Atlas (6th edition),\n# San Diego: ACS Publications, Inc. (2003).\n# Unfortunately this book contains many errors and cites no sources.\n#\n# Many years ago Gwillim Law wrote that a good source\n# for time zone data was the International Air Transport\n# Association's Standard Schedules Information Manual (IATA SSIM),\n# published semiannually.  Law sent in several helpful summaries\n# of the IATA's data after 1990.  Except where otherwise noted,\n# IATA SSIM is the source for entries after 1990.\n#\n# Another source occasionally used is Edward W. Whitman, World Time Differences,\n# Whitman Publishing Co, 2 Niagara Av, Ealing, London (undated), which\n# I found in the UCLA library.\n#\n# For data circa 1899, a common source is:\n# Milne J. Civil time. Geogr J. 1899 Feb;13(2):173-94.\n# https://www.jstor.org/stable/1774359\n#\n# For Russian data circa 1919, a source is:\n# Byalokoz EL. New Counting of Time in Russia since July 1, 1919.\n# (See the 'europe' file for a fuller citation.)\n#\n# The following alphabetic abbreviations appear in these tables\n# (corrections are welcome):\n#\t     std  dst\n#\t     LMT\tLocal Mean Time\n#\t2:00 EET  EEST\tEastern European Time\n#\t2:00 IST  IDT\tIsrael\n#\t5:30 IST\tIndia\n#\t7:00 WIB\twest Indonesia (Waktu Indonesia Barat)\n#\t8:00 WITA\tcentral Indonesia (Waktu Indonesia Tengah)\n#\t8:00 CST\tChina\n#\t8:00 HKT  HKST\tHong Kong (HKWT* for Winter Time in late 1941)\n#\t8:00 PST  PDT*\tPhilippines\n#\t8:30 KST  KDT\tKorea when at +0830\n#\t9:00 WIT\teast Indonesia (Waktu Indonesia Timur)\n#\t9:00 JST  JDT\tJapan\n#\t9:00 KST  KDT\tKorea when at +09\n# *I invented the abbreviations HKWT and PDT; see below.\n# Otherwise, these tables typically use numeric abbreviations like +03\n# and +0330 for integer hour and minute UT offsets.  Although earlier\n# editions invented alphabetic time zone abbreviations for every\n# offset, this did not reflect common practice.\n#\n# See the 'europe' file for Russia and Turkey in Asia.\n\n# From Guy Harris:\n# Incorporates data for Singapore from Robert Elz' asia 1.1, as well as\n# additional information from Tom Yap, Sun Microsystems Intercontinental\n# Technical Support (including a page from the Official Airline Guide -\n# Worldwide Edition).\n\n###############################################################################\n\n# These rules are stolen from the 'europe' file.\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tEUAsia\t1981\tmax\t-\tMar\tlastSun\t 1:00u\t1:00\tS\nRule\tEUAsia\t1979\t1995\t-\tSep\tlastSun\t 1:00u\t0\t-\nRule\tEUAsia\t1996\tmax\t-\tOct\tlastSun\t 1:00u\t0\t-\nRule E-EurAsia\t1981\tmax\t-\tMar\tlastSun\t 0:00\t1:00\t-\nRule E-EurAsia\t1979\t1995\t-\tSep\tlastSun\t 0:00\t0\t-\nRule E-EurAsia\t1996\tmax\t-\tOct\tlastSun\t 0:00\t0\t-\nRule RussiaAsia\t1981\t1984\t-\tApr\t1\t 0:00\t1:00\t-\nRule RussiaAsia\t1981\t1983\t-\tOct\t1\t 0:00\t0\t-\nRule RussiaAsia\t1984\t1995\t-\tSep\tlastSun\t 2:00s\t0\t-\nRule RussiaAsia\t1985\t2010\t-\tMar\tlastSun\t 2:00s\t1:00\t-\nRule RussiaAsia\t1996\t2010\t-\tOct\tlastSun\t 2:00s\t0\t-\n\n# Afghanistan\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAsia/Kabul\t4:36:48 -\tLMT\t1890\n\t\t\t4:00\t-\t%z\t1945\n\t\t\t4:30\t-\t%z\n\n# Armenia\n# From Paul Eggert (2006-03-22):\n# Shanks & Pottenger have Yerevan switching to 3:00 (with Russian DST)\n# in spring 1991, then to 4:00 with no DST in fall 1995, then\n# readopting Russian DST in 1997.  Go with Shanks & Pottenger, even\n# when they disagree with others.  Edgar Der-Danieliantz\n# reported (1996-05-04) that Yerevan probably wouldn't use DST\n# in 1996, though it did use DST in 1995.  IATA SSIM (1991/1998) reports that\n# Armenia switched from 3:00 to 4:00 in 1998 and observed DST after 1991,\n# but started switching at 3:00s in 1998.\n\n# From Arthur David Olson (2011-06-15):\n# While Russia abandoned DST in 2011, Armenia may choose to\n# follow Russia's \"old\" rules.\n\n# From Alexander Krivenyshev (2012-02-10):\n# According to News Armenia, on Feb 9, 2012,\n# http://newsarmenia.ru/society/20120209/42609695.html\n#\n# The Armenia National Assembly adopted final reading of Amendments to the\n# Law \"On procedure of calculation time on the territory of the Republic of\n# Armenia\" according to which Armenia [is] abolishing Daylight Saving Time.\n# or\n# (brief)\n# http://www.worldtimezone.com/dst_news/dst_news_armenia03.html\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule Armenia\t2011\tonly\t-\tMar\tlastSun\t 2:00s\t1:00\t-\nRule Armenia\t2011\tonly\t-\tOct\tlastSun\t 2:00s\t0\t-\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAsia/Yerevan\t2:58:00 -\tLMT\t1924 May  2\n\t\t\t3:00\t-\t%z\t1957 Mar\n\t\t\t4:00 RussiaAsia %z\t1991 Mar 31  2:00s\n\t\t\t3:00 RussiaAsia\t%z\t1995 Sep 24  2:00s\n\t\t\t4:00\t-\t%z\t1997\n\t\t\t4:00 RussiaAsia\t%z\t2011\n\t\t\t4:00\tArmenia\t%z\n\n# Azerbaijan\n\n# From Rustam Aliyev of the Azerbaijan Internet Forum (2005-10-23):\n# According to the resolution of Cabinet of Ministers, 1997\n# From Paul Eggert (2015-09-17): It was Resolution No. 21 (1997-03-17).\n# http://code.az/files/daylight_res.pdf\n\n# From Steffen Thorsen (2016-03-17):\n# ... the Azerbaijani Cabinet of Ministers has cancelled switching to\n# daylight saving time....\n# https://www.azernews.az/azerbaijan/94137.html\n# http://vestnikkavkaza.net/news/Azerbaijani-Cabinet-of-Ministers-cancels-daylight-saving-time.html\n# http://en.apa.az/xeber_azerbaijan_abolishes_daylight_savings_ti_240862.html\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tAzer\t1997\t2015\t-\tMar\tlastSun\t 4:00\t1:00\t-\nRule\tAzer\t1997\t2015\t-\tOct\tlastSun\t 5:00\t0\t-\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAsia/Baku\t3:19:24 -\tLMT\t1924 May  2\n\t\t\t3:00\t-\t%z\t1957 Mar\n\t\t\t4:00 RussiaAsia %z\t1991 Mar 31  2:00s\n\t\t\t3:00 RussiaAsia\t%z\t1992 Sep lastSun  2:00s\n\t\t\t4:00\t-\t%z\t1996\n\t\t\t4:00\tEUAsia\t%z\t1997\n\t\t\t4:00\tAzer\t%z\n\n# Bangladesh\n# From Alexander Krivenyshev (2009-05-13):\n# According to newspaper Asian Tribune (May 6, 2009) Bangladesh may introduce\n# Daylight Saving Time from June 16 to Sept 30\n#\n# Bangladesh to introduce daylight saving time likely from June 16\n# http://www.asiantribune.com/?q=node/17288\n# http://www.worldtimezone.com/dst_news/dst_news_bangladesh02.html\n#\n# \"... Bangladesh government has decided to switch daylight saving time from\n# June\n# 16 till September 30 in a bid to ensure maximum use of daylight to cope with\n# crippling power crisis. \"\n#\n# The switch will remain in effect from June 16 to Sept 30 (2009) but if\n# implemented the next year, it will come in force from April 1, 2010\n\n# From Steffen Thorsen (2009-06-02):\n# They have finally decided now, but changed the start date to midnight between\n# the 19th and 20th, and they have not set the end date yet.\n#\n# Some sources:\n# https://in.reuters.com/article/southAsiaNews/idINIndia-40017620090601\n# http://bdnews24.com/details.php?id=85889&cid=2\n#\n# Our wrap-up:\n# https://www.timeanddate.com/news/time/bangladesh-daylight-saving-2009.html\n\n# From A. N. M. Kamrus Saadat (2009-06-15):\n# Finally we've got the official mail regarding DST start time where DST start\n# time is mentioned as Jun 19 2009, 23:00 from BTRC (Bangladesh\n# Telecommunication Regulatory Commission).\n#\n# No DST end date has been announced yet.\n\n# From Alexander Krivenyshev (2009-09-25):\n# Bangladesh won't go back to Standard Time from October 1, 2009,\n# instead it will continue DST measure till the cabinet makes a fresh decision.\n#\n# Following report by same newspaper-\"The Daily Star Friday\":\n# \"DST change awaits cabinet decision-Clock won't go back by 1-hr from Oct 1\"\n# http://www.thedailystar.net/newDesign/news-details.php?nid=107021\n# http://www.worldtimezone.com/dst_news/dst_news_bangladesh04.html\n\n# From Steffen Thorsen (2009-10-13):\n# IANS (Indo-Asian News Service) now reports:\n# Bangladesh has decided that the clock advanced by an hour to make\n# maximum use of daylight hours as an energy saving measure would\n# \"continue for an indefinite period.\"\n#\n# One of many places where it is published:\n# http://www.thaindian.com/newsportal/business/bangladesh-to-continue-indefinitely-with-advanced-time_100259987.html\n\n# From Alexander Krivenyshev (2009-12-24):\n# According to Bangladesh newspaper \"The Daily Star,\"\n# Bangladesh will change its clock back to Standard Time on Dec 31, 2009.\n#\n# Clock goes back 1-hr on Dec 31 night.\n# http://www.thedailystar.net/newDesign/news-details.php?nid=119228\n# http://www.worldtimezone.com/dst_news/dst_news_bangladesh05.html\n#\n# \"...The government yesterday decided to put the clock back by one hour\n# on December 31 midnight and the new time will continue until March 31,\n# 2010 midnight. The decision came at a cabinet meeting at the Prime\n# Minister's Office last night...\"\n\n# From Alexander Krivenyshev (2010-03-22):\n# According to Bangladesh newspaper \"The Daily Star,\"\n# Cabinet cancels Daylight Saving Time\n# http://www.thedailystar.net/newDesign/latest_news.php?nid=22817\n# http://www.worldtimezone.com/dst_news/dst_news_bangladesh06.html\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tDhaka\t2009\tonly\t-\tJun\t19\t23:00\t1:00\t-\nRule\tDhaka\t2009\tonly\t-\tDec\t31\t24:00\t0\t-\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAsia/Dhaka\t6:01:40 -\tLMT\t1890\n\t\t\t5:53:20\t-\tHMT\t1941 Oct    # Howrah Mean Time?\n\t\t\t6:30\t-\t%z\t1942 May 15\n\t\t\t5:30\t-\t%z\t1942 Sep\n\t\t\t6:30\t-\t%z\t1951 Sep 30\n\t\t\t6:00\t-\t%z\t2009\n\t\t\t6:00\tDhaka\t%z\n\n# Bhutan\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAsia/Thimphu\t5:58:36 -\tLMT\t1947 Aug 15 # or Thimbu\n\t\t\t5:30\t-\t%z\t1987 Oct\n\t\t\t6:00\t-\t%z\n\n# British Indian Ocean Territory\n# Whitman and the 1995 CIA time zone map say 5:00, but the\n# 1997 and later maps say 6:00.  Assume the switch occurred in 1996.\n# We have no information as to when standard time was introduced;\n# assume it occurred in 1907, the same year as Mauritius (which\n# then contained the Chagos Archipelago).\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tIndian/Chagos\t4:49:40\t-\tLMT\t1907\n\t\t\t5:00\t-\t%z\t1996\n\t\t\t6:00\t-\t%z\n\n# Cocos (Keeling) Islands\n# Myanmar (Burma)\n\n# Milne says 6:24:40 was the meridian of the time ball observatory at Rangoon.\n\n# From Paul Eggert (2017-04-20):\n# Page 27 of Reed & Low (cited for Asia/Kolkata) says \"Rangoon local time is\n# used upon the railways and telegraphs of Burma, and is 6h. 24m. 47s. ahead\n# of Greenwich.\"  This refers to the period before Burma's transition to +0630,\n# a transition for which Shanks is the only source.\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAsia/Yangon\t6:24:47 -\tLMT\t1880        # or Rangoon\n\t\t\t6:24:47\t-\tRMT\t1920        # Rangoon local time\n\t\t\t6:30\t-\t%z\t1942 May\n\t\t\t9:00\t-\t%z\t1945 May  3\n\t\t\t6:30\t-\t%z\n\n# China\n\n# From Phake Nick (2020-04-15):\n# According to this news report:\n# http://news.sina.com.cn/c/2004-09-01/19524201403.shtml\n# on April 11, 1919, newspaper in Shanghai said clocks in Shanghai will spring\n# forward for an hour starting from midnight of that Saturday. The report did\n# not mention what happened in Shanghai thereafter, but it mentioned that a\n# similar trial in Tianjin which ended at October 1st as citizens are told to\n# recede the clock on September 30 from 12:00pm to 11:00pm. The trial at\n# Tianjin got terminated in 1920.\n#\n# From Paul Eggert (2020-04-15):\n# The Returns of Trade and Trade Reports, page 711, says \"Daylight saving was\n# given a trial during the year, and from the 12th April to the 1st October\n# the clocks were all set one hour ahead of sun time.  Though the scheme was\n# generally esteemed a success, it was announced early in 1920 that it would\n# not be repeated.\"\n#\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tShang\t1919\tonly\t-\tApr\t12\t24:00\t1:00\tD\nRule\tShang\t1919\tonly\t-\tSep\t30\t24:00\t0\tS\n\n# From Paul Eggert (2018-10-02):\n# The following comes from Table 1 of:\n# Li Yu. Research on the daylight saving movement in 1940s Shanghai.\n# Nanjing Journal of Social Sciences. 2014;(2):144-50.\n# http://oversea.cnki.net/kns55/detail.aspx?dbname=CJFD2014&filename=NJSH201402020\n# The table lists dates only; I am guessing 00:00 and 24:00 transition times.\n# Also, the table lists the planned end of DST in 1949, but the corresponding\n# zone line cuts this off on May 28, when the Communists took power.\n\n# From Phake Nick (2020-04-15):\n#\n# For the history of time in Shanghai between 1940-1942, the situation is\n# actually slightly more complex than the table [below]....  At the time,\n# there were three different authorities in Shanghai, including Shanghai\n# International Settlement, a settlement established by western countries with\n# its own westernized form of government, Shanghai French Concession, similar\n# to the international settlement but is controlled by French, and then the\n# rest of the city of Shanghai, which have already been controlled by Japanese\n# force through a puppet local government (Wang Jingwei regime).  It was\n# additionally complicated by the circumstances that, according to the 1940s\n# Shanghai summer time essay cited in the database, some\n# departments/businesses/people in the Shanghai city itself during that time\n# period, refused to change their clock and instead only changed their opening\n# hours.\n#\n# For example, as quoted in the article, in 1940, other than the authority\n# itself, power, tram, bus companies, cinema, department stores, and other\n# public service organizations have all decided to follow the summer time and\n# spring forward the clock.  On the other hand, the custom office refused to\n# spring forward the clock because of worry on mechanical wear to the physical\n# clock, postal office refused to spring forward because of disruption to\n# business and log-keeping, although they did changed their office hour to\n# match rest of the city.  So is travel agents, and also weather\n# observatory.  It is said both time standards had their own supporters in the\n# city at the time, those who prefer new time standard would have moved their\n# clock while those who prefer the old time standard would keep their clock\n# unchange, and there were different clocks that use different time standard\n# in the city at the time for people who use different time standard to adjust\n# their clock to their preferred time.\n#\n# a. For the 1940 May 31 spring forward, the essay [says] ... \"Hong\n# Kong government implemented the spring forward in the same time on\n# the same date as Shanghai\".\n#\n# b. For the 1940 fall back, it was said that they initially intended to do\n# so on September 30 00:59 at night, however they postponed it to October 12\n# after discussion with relevant parties. However schools restored to the\n# original schedule ten days earlier.\n#\n# c. For the 1941 spring forward, it is said to start from March 15\n# \"following the previous year's method\", and in addition to that the essay\n# cited an announcement in 1941 from the Wang regime which said the Special\n# City of Shanghai under Wang regime control will follow the DST rule set by\n# the Settlements, irrespective of the original DST plan announced by the Wang\n# regime for other area under its control(April 1 to September 30). (no idea\n# to situation before that announcement)\n#\n# d. For the 1941 fall back, it was said that the fall back would occurs at\n# the end of September (A newspaper headline cited by the essay, published on\n# October 1, 1941, have the headlines which said \"French Concession would\n# rewind to the old clock this morning), but it ultimately didn't happen due\n# to disagreement between the international settlement authority and the\n# French concession authority, and the fall back ultimately occurred on\n# November 1.\n#\n# e. In 1941 December, Japan have officially started war with the United\n# States and the United Kingdom, and in Shanghai they have marched into the\n# international settlement, taken over its control\n#\n# f. For the 1942 spring forward, the essay said that the spring forward\n# started on January 31. It said this time the custom office and postal\n# department will also change their clocks, unlike before.\n#\n# g. The essay itself didn't cover any specific changes thereafter until the\n# end of the war, it quoted a November 1942 command from the government of the\n# Wang regime, which claim the daylight saving time applies year round during\n# the war. However, the essay ambiguously said the period is \"February 1 to\n# September 30\", which I don't really understand what is the meaning of such\n# period in the context of year round implementation here.. More researches\n# might be needed to show exactly what happened during that period of time.\n\n# From Phake Nick (2020-04-15):\n# According to a Japanese tour bus pamphlet in Nanjing area believed to be\n# from around year 1941: http://www.tt-museum.jp/tairiku_0280_nan1941.html ,\n# the schedule listed was in the format of Japanese time.  Which indicate some\n# use of the Japanese time (instead of syncing by DST) might have occurred in\n# the Yangtze river delta area during that period of time although the scope\n# of such use will need to be investigated to determine.\n#\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tShang\t1940\tonly\t-\tJun\t 1\t 0:00\t1:00\tD\nRule\tShang\t1940\tonly\t-\tOct\t12\t24:00\t0\tS\nRule\tShang\t1941\tonly\t-\tMar\t15\t 0:00\t1:00\tD\nRule\tShang\t1941\tonly\t-\tNov\t 1\t24:00\t0\tS\nRule\tShang\t1942\tonly\t-\tJan\t31\t 0:00\t1:00\tD\nRule\tShang\t1945\tonly\t-\tSep\t 1\t24:00\t0\tS\nRule\tShang\t1946\tonly\t-\tMay\t15\t 0:00\t1:00\tD\nRule\tShang\t1946\tonly\t-\tSep\t30\t24:00\t0\tS\nRule\tShang\t1947\tonly\t-\tApr\t15\t 0:00\t1:00\tD\nRule\tShang\t1947\tonly\t-\tOct\t31\t24:00\t0\tS\nRule\tShang\t1948\t1949\t-\tMay\t 1\t 0:00\t1:00\tD\nRule\tShang\t1948\t1949\t-\tSep\t30\t24:00\t0\tS #plan\n\n# From Guy Harris:\n# People's Republic of China.  Yes, they really have only one time zone.\n\n# From Bob Devine (1988-01-28):\n# No they don't.  See TIME mag, 1986-02-17 p.52.  Even though\n# China is across 4 physical time zones, before Feb 1, 1986 only the\n# Peking (Beijing) time zone was recognized.  Since that date, China\n# has two of 'em - Peking's and Ürümqi (named after the capital of\n# the Xinjiang Uyghur Autonomous Region).  I don't know about DST for it.\n#\n# . . .I just deleted the DST table and this editor makes it too\n# painful to suck in another copy.  So, here is what I have for\n# DST start/end dates for Peking's time zone (info from AP):\n#\n#     1986 May 4 - Sept 14\n#     1987 mid-April - ??\n\n# From U. S. Naval Observatory (1989-01-19):\n# CHINA               8 H  AHEAD OF UTC  ALL OF CHINA, INCL TAIWAN\n# CHINA               9 H  AHEAD OF UTC  APR 17 - SEP 10\n\n# From Paul Eggert (2008-02-11):\n# Jim Mann, \"A clumsy embrace for another western custom: China on daylight\n# time - sort of\", Los Angeles Times, 1986-05-05 ... [says] that China began\n# observing daylight saving time in 1986.\n\n# From P Chan (2018-05-07):\n# The start and end time of DST in China [from 1986 on] should be 2:00\n# (i.e. 2:00 to 3:00 at the start and 2:00 to 1:00 at the end)....\n# Government notices about summer time:\n#\n# 1986-04-12 http://www.zj.gov.cn/attach/zfgb/198608.pdf p.21-22\n# (To establish summer time from 1986. On 4 May, set the clocks ahead one hour\n# at 2 am. On 14 September, set the clocks backward one hour at 2 am.)\n#\n# 1987-02-15 http://www.gov.cn/gongbao/shuju/1987/gwyb198703.pdf p.114\n# (Summer time in 1987 to start from 12 April until 13 September)\n#\n# 1987-09-09 http://www.gov.cn/gongbao/shuju/1987/gwyb198721.pdf p.709\n# (From 1988, summer time to start from 2 am of the first Sunday of mid-April\n# until 2 am of the first Sunday of mid-September)\n#\n# 1992-03-03 http://www.gov.cn/gongbao/shuju/1992/gwyb199205.pdf p.152\n# (To suspend summer time from 1992)\n#\n# The first page of People's Daily on 12 April 1988 stating that summer time\n# to begin on 17 April.\n# http://data.people.com.cn/pic/101p/1988/04/1988041201.jpg\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tPRC\t1986\tonly\t-\tMay\t 4\t 2:00\t1:00\tD\nRule\tPRC\t1986\t1991\t-\tSep\tSun>=11\t 2:00\t0\tS\nRule\tPRC\t1987\t1991\t-\tApr\tSun>=11\t 2:00\t1:00\tD\n\n# From Anthony Fok (2001-12-20):\n# BTW, I did some research on-line and found some info regarding these five\n# historic timezones from some Taiwan websites.  And yes, there are official\n# Chinese names for these locales (before 1949).\n#\n# From Jesper Nørgaard Welen (2006-07-14):\n# I have investigated the timezones around 1970 on the\n# https://www.astro.com/atlas site [with provinces and county\n# boundaries summarized below]....  A few other exceptions were two\n# counties on the Sichuan side of the Xizang-Sichuan border,\n# counties Dege and Baiyu which lies on the Sichuan side and are\n# therefore supposed to be GMT+7, Xizang region being GMT+6, but Dege\n# county is GMT+8 according to astro.com while Baiyu county is GMT+6\n# (could be true), for the moment I am assuming that those two\n# counties are mistakes in the astro.com data.\n\n# From Paul Eggert (2017-01-05):\n# Alois Treindl kindly sent me translations of the following two sources:\n#\n# (1)\n# Guo Qing-sheng (National Time-Service Center, CAS, Xi'an 710600, China)\n# Beijing Time at the Beginning of the PRC\n# China Historical Materials of Science and Technology\n# (Zhongguo ke ji shi liao, 中国科技史料). 2003;24(1):5-9.\n# http://oversea.cnki.net/kcms/detail/detail.aspx?filename=ZGKS200301000&dbname=CJFD2003\n# It gives evidence that at the beginning of the PRC, Beijing time was\n# officially apparent solar time!  However, Guo also says that the\n# evidence is dubious, as the relevant institute of astronomy had not\n# been taken over by the PRC yet.  It's plausible that apparent solar\n# time was announced but never implemented, and that people continued\n# to use UT+8.  As the Shanghai radio station (and I presume the\n# observatory) was still under control of French missionaries, it\n# could well have ignored any such mandate.\n#\n# (2)\n# Guo Qing-sheng (Shaanxi Astronomical Observatory, CAS, Xi'an 710600, China)\n# A Study on the Standard Time Changes for the Past 100 Years in China\n# [undated and unknown publication location]\n# It says several things:\n#   * The Qing dynasty used local apparent solar time throughout China.\n#   * The Republic of China instituted Beijing mean solar time effective\n#     the official calendar book of 1914.\n#   * The French Concession in Shanghai set up signal stations in\n#     French docks in the 1890s, controlled by Xujiahui (Zikawei)\n#     Observatory and set to local mean time.\n#   * \"From the end of the 19th century\" it changed to UT+8.\n#   * Chinese Customs (by then reduced to a tool of foreign powers)\n#     eventually standardized on this time for all ports, and it\n#     became used by railways as well.\n#   * In 1918 the Central Observatory proposed dividing China into\n#     five time zones (see below for details).  This caught on\n#     at first only in coastal areas observing UT+8.\n#   * During WWII all of China was in theory was at UT+7.  In practice\n#     this was ignored in the west, and I presume was ignored in\n#     Japanese-occupied territory.\n#   * Japanese-occupied Manchuria was at UT+9, i.e., Japan time.\n#   * The five-zone plan was resurrected after WWII and officially put into\n#     place (with some modifications) in March 1948.  It's not clear\n#     how well it was observed in areas under Nationalist control.\n#   * The People's Liberation Army used UT+8 during the civil war.\n#\n# An AP article \"Shanghai Internat'l Area Little Changed\" in the\n# Lewiston (ME) Daily Sun (1939-05-29), p 17, said \"Even the time is\n# different - the occupied districts going by Tokyo time, an hour\n# ahead of that prevailing in the rest of Shanghai.\"  Guess that the\n# Xujiahui Observatory was under French control and stuck with UT +08.\n#\n# In earlier versions of this file, China had many separate Zone entries, but\n# this was based on what were apparently incorrect data in Shanks & Pottenger.\n# This has now been simplified to the two entries Asia/Shanghai and\n# Asia/Urumqi, with the others being links for backward compatibility.\n# Proposed in 1918 and theoretically in effect until 1949 (although in practice\n# mainly observed in coastal areas), the five zones were:\n#\n# Changbai Time (\"Long-white Time\", Long-white = Heilongjiang area) UT +08:30\n# Now part of Asia/Shanghai; its pre-1970 times are not recorded here.\n# Heilongjiang (except Mohe county), Jilin\n#\n# Zhongyuan Time (\"Central plain Time\") UT +08\n# Now part of Asia/Shanghai.\n# most of China\n# Milne gives 8:05:43.2 for Xujiahui Observatory time....\n# Guo says Shanghai switched to UT +08 \"from the end of the 19th century\".\n#\n# Long-shu Time (probably as Long and Shu were two names of the area) UT +07\n# Now part of Asia/Shanghai; its pre-1970 times are not recorded here.\n# Guangxi, Guizhou, Hainan, Ningxia, Sichuan, Shaanxi, and Yunnan;\n# most of Gansu; west Inner Mongolia; east Qinghai; and the Guangdong\n# counties Deqing, Enping, Kaiping, Luoding, Taishan, Xinxing,\n# Yangchun, Yangjiang, Yu'nan, and Yunfu.\n#\n# Xin-zang Time (\"Xinjiang-Tibet Time\") UT +06\n# This region is now part of either Asia/Urumqi or Asia/Shanghai with\n# current boundaries uncertain; times before 1970 for areas that\n# disagree with Ürümqi or Shanghai are not recorded here.\n# The Gansu counties Aksay, Anxi, Dunhuang, Subei; west Qinghai;\n# the Guangdong counties  Xuwen, Haikang, Suixi, Lianjiang,\n# Zhanjiang, Wuchuan, Huazhou, Gaozhou, Maoming, Dianbai, and Xinyi;\n# east Tibet, including Lhasa, Chamdo, Shigaise, Jimsar, Shawan and Hutubi;\n# east Xinjiang, including Ürümqi, Turpan, Karamay, Korla, Minfeng, Jinghe,\n# Wusu, Qiemo, Xinyan, Wulanwusu, Jinghe, Yumin, Tacheng, Tuoli, Emin,\n# Shihezi, Changji, Yanqi, Heshuo, Tuokexun, Tulufan, Shanshan, Hami,\n# Fukang, Kuitun, Kumukuli, Miquan, Qitai, and Turfan.\n#\n# Kunlun Time UT +05:30\n# This region is now in the same status as Xin-zang Time (see above).\n# West Tibet, including Pulan, Aheqi, Shufu, Shule;\n# West Xinjiang, including Aksu, Atushi, Yining, Hetian, Cele, Luopu, Nileke,\n# Zhaosu, Tekesi, Gongliu, Chabuchaer, Huocheng, Bole, Pishan, Suiding,\n# and Yarkand.\n\n# From Luther Ma (2009-10-17):\n# Almost all (>99.9%) ethnic Chinese (properly ethnic Han) living in\n# Xinjiang use Chinese Standard Time. Some are aware of Xinjiang time,\n# but have no need of it. All planes, trains, and schools function on\n# what is called \"Beijing time.\" When Han make an appointment in Chinese\n# they implicitly use Beijing time.\n#\n# On the other hand, ethnic Uyghurs, who make up about half the\n# population of Xinjiang, typically use \"Xinjiang time\" which is two\n# hours behind Beijing time, or UT +06. The government of the Xinjiang\n# Uyghur Autonomous Region, (XAUR, or just Xinjiang for short) as well as\n# local governments such as the Ürümqi city government use both times in\n# publications, referring to what is popularly called Xinjiang time as\n# \"Ürümqi time.\" When Uyghurs make an appointment in the Uyghur language\n# they almost invariably use Xinjiang time.\n#\n# (Their ethnic Han compatriots would typically have no clue of its\n# widespread use, however, because so extremely few of them are fluent in\n# Uyghur, comparable to the number of Anglo-Americans fluent in Navajo.)\n#\n# (...As with the rest of China there was a brief interval ending in 1990\n# or 1991 when summer time was in use.  The confusion was severe, with\n# the province not having dual times but four times in use at the same\n# time. Some areas remained on standard Xinjiang time or Beijing time and\n# others moving their clocks ahead.)\n\n# From Luther Ma (2009-11-19):\n# With the risk of being redundant to previous answers these are the most common\n# English \"transliterations\" (w/o using non-English symbols):\n#\n# 1. Wulumuqi...\n# 2. Kashi...\n# 3. Urumqi...\n# 4. Kashgar...\n# ...\n# 5. It seems that Uyghurs in Ürümqi has been using Xinjiang since at least the\n# 1960's. I know of one Han, now over 50, who grew up in the surrounding\n# countryside and used Xinjiang time as a child.\n#\n# 6. Likewise for Kashgar and the rest of south Xinjiang I don't know of any\n# start date for Xinjiang time.\n#\n# Without having access to local historical records, nor the ability to legally\n# publish them, I would go with October 1, 1949, when Xinjiang became the Uyghur\n# Autonomous Region under the PRC. (Before that Uyghurs, of course, would also\n# not be using Beijing time, but some local time.)\n\n# From David Cochrane (2014-03-26):\n# Just a confirmation that Ürümqi time was implemented in Ürümqi on 1 Feb 1986:\n# https://content.time.com/time/magazine/article/0,9171,960684,00.html\n\n# From Luther Ma (2014-04-22):\n# I have interviewed numerous people of various nationalities and from\n# different localities in Xinjiang and can confirm the information in Guo's\n# report regarding Xinjiang, as well as the Time article reference by David\n# Cochrane.  Whether officially recognized or not (and both are officially\n# recognized), two separate times have been in use in Xinjiang since at least\n# the Cultural Revolution: Xinjiang Time (XJT), aka Ürümqi Time or local time;\n# and Beijing Time.  There is no confusion in Xinjiang as to which name refers\n# to which time. Both are widely used in the province, although in some\n# population groups might be use one to the exclusion of the other.  The only\n# problem is that computers and smart phones list Ürümqi (or Kashgar) as\n# having the same time as Beijing.\n\n# From Paul Eggert (2014-06-30):\n# In the early days of the PRC, Tibet was given its own time zone (UT +06)\n# but this was withdrawn in 1959 and never reinstated; see Tubten Khétsun,\n# Memories of life in Lhasa under Chinese Rule, Columbia U Press, ISBN\n# 978-0231142861 (2008), translator's introduction by Matthew Akester, p x.\n# As this is before our 1970 cutoff, Tibet doesn't need a separate zone.\n#\n# Xinjiang Time is well-documented as being officially recognized.  E.g., see\n# \"The Working-Calendar for The Xinjiang Uygur Autonomous Region Government\"\n# <http://www.sinkiang.gov.cn/service/ourworking/> (2014-04-22).\n# Unfortunately, we have no good records of time in Xinjiang before 1986.\n# During the 20th century parts of Xinjiang were ruled by the Qing dynasty,\n# the Republic of China, various warlords, the First and Second East Turkestan\n# Republics, the Soviet Union, the Kuomintang, and the People's Republic of\n# China, and tracking down all these organizations' timekeeping rules would be\n# quite a trick.  Approximate this lost history by a transition from LMT to\n# UT +06 at the start of 1928, the year of accession of the warlord Jin Shuren,\n# which happens to be the date given by Shanks & Pottenger (no doubt as a\n# guess) as the transition from LMT.  Ignore the usage of +08 before\n# 1986-02-01 under the theory that the transition date to +08 is unknown and\n# that the sort of users who prefer Asia/Urumqi now typically ignored the\n# +08 mandate back then.\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n# Beijing time, used throughout China; represented by Shanghai.\n\t\t#STDOFF\t8:05:43.2\nZone\tAsia/Shanghai\t8:05:43\t-\tLMT\t1901\n\t\t\t8:00\tShang\tC%sT\t1949 May 28\n\t\t\t8:00\tPRC\tC%sT\n# Xinjiang time, used by many in western China; represented by Ürümqi / Ürümchi\n# / Wulumuqi.  (Please use Asia/Shanghai if you prefer Beijing time.)\nZone\tAsia/Urumqi\t5:50:20\t-\tLMT\t1928\n\t\t\t6:00\t-\t%z\n\n# Hong Kong\n\n# Milne gives 7:36:41.7.\n\n# From Lee Yiu Chung (2009-10-24):\n# I found there are some mistakes for the...DST rule for Hong\n# Kong. [According] to the DST record from Hong Kong Observatory (actually,\n# it is not [an] observatory, but the official meteorological agency of HK,\n# and also serves as the official timing agency), there are some missing\n# and incorrect rules. Although the exact switch over time is missing, I\n# think 3:30 is correct.\n\n# From Phake Nick (2018-10-27):\n# According to Singaporean newspaper\n# http://eresources.nlb.gov.sg/newspapers/Digitised/Article/singfreepresswk19041102-1.2.37\n# the day that Hong Kong start using GMT+8 should be Oct 30, 1904.\n#\n# From Paul Eggert (2018-11-17):\n# Hong Kong had a time ball near the Marine Police Station, Tsim Sha Tsui.\n# \"The ball was raised manually each day and dropped at exactly 1pm\n# (except on Sundays and Government holidays).\"\n# Dyson AD. From Time Ball to Atomic Clock. Hong Kong Government. 1983.\n# <https://www.hko.gov.hk/publica/gen_pub/timeball_atomic_clock.pdf>\n# \"From 1904 October 30 the time-ball at Hong Kong has been dropped by order\n# of the Governor of the Colony at 17h 0m 0s G.M.T., which is 23m 18s.14 in\n# advance of 1h 0m 0s of Hong Kong mean time.\"\n# Hollis HP. Universal Time, Longitudes, and Geodesy. Mon Not R Astron Soc.\n# 1905-02-10;65(4):405-6. https://doi.org/10.1093/mnras/65.4.382\n#\n# From Joseph Myers (2018-11-18):\n# An astronomer before 1925 referring to GMT would have been using the old\n# astronomical convention where the day started at noon, not midnight.\n#\n# From Steve Allen (2018-11-17):\n# Meteorological Observations made at the Hongkong Observatory in the year 1904\n# page 4 <https://books.google.com/books?id=kgw5AQAAMAAJ&pg=RA4-PA4>\n# ... the log of drop times in Table II shows that on Sunday 1904-10-30 the\n# ball was dropped.  So that looks like a special case drop for the sake\n# of broadcasting the new local time.\n#\n# From Phake Nick (2018-11-18):\n# According to The Hong Kong Weekly Press, 1904-10-29, p.324, the\n# governor of Hong Kong at the time stated that \"We are further desired to\n# make it known that the change will be effected by firing the gun and by the\n# dropping of the Ball at 23min. 18sec. before one.\"\n# From Paul Eggert (2018-11-18):\n# See <https://mmis.hkpl.gov.hk> for this; unfortunately Flash is required.\n\n# From Phake Nick (2018-10-26):\n# I went to check microfilm records stored at Hong Kong Public Library....\n# on September 30 1941, according to Ta Kung Pao (Hong Kong edition), it was\n# stated that fallback would occur on the next day (the 1st)'s \"03:00 am (Hong\n# Kong Time 04:00 am)\" and the clock will fall back for a half hour. (03:00\n# probably refer to the time commonly used in mainland China at the time given\n# the paper's background) ... the sunrise/sunset time given by South China\n# Morning Post for October 1st was indeed moved by half an hour compares to\n# before.  After that, in December, the battle to capture Hong Kong started and\n# the library doesn't seems to have any record stored about press during that\n# period of time.  Some media resumed publication soon after that within the\n# same month, but there were not much information about time there.  Later they\n# started including a radio program guide when they restored radio service,\n# explicitly mentioning it use Tokyo standard time, and later added a note\n# saying it's half an hour ahead of the old Hong Kong standard time, and it\n# also seems to indicate that Hong Kong was not using GMT+8 when it was\n# captured by Japan.\n#\n# Image of related sections on newspaper:\n# * 1941-09-30, Ta Kung Pao (Hong Kong), \"Winter Time start tomorrow\".\n#   https://i.imgur.com/6waY51Z.jpg (Chinese)\n# * 1941-09-29, South China Morning Post, Information on sunrise/sunset\n#   time and other things for September 30 and October 1.\n#   https://i.imgur.com/kCiUR78.jpg\n# * 1942-02-05. The Hong Kong News, Radio Program Guide.\n#   https://i.imgur.com/eVvDMzS.jpg\n# * 1941-06-14. Hong Kong Daily Press, Daylight Saving from 3am Tomorrow.\n#   https://i.imgur.com/05KkvtC.png\n# * 1941-09-30, Hong Kong Daily Press, Winter Time Warning.\n#   https://i.imgur.com/dge4kFJ.png\n\n# From Paul Eggert (2019-07-11):\n# \"Hong Kong winter time\" is considered to be daylight saving.\n# \"Hong Kong had adopted daylight saving on June 15 as a wartime measure,\n# clocks moving forward one hour until October 1, when they would be put back\n# by just half an hour for 'Hong Kong Winter time', so that daylight saving\n# operated year round.\" -- Low Z. The longest day: when wartime Hong Kong\n# introduced daylight saving. South China Morning Post. 2019-06-28.\n# https://www.scmp.com/magazines/post-magazine/short-reads/article/3016281/longest-day-when-wartime-hong-kong-introduced\n\n# From P Chan (2018-12-31):\n# * According to the Hong Kong Daylight-Saving Regulations, 1941, the\n#   1941 spring-forward transition was at 03:00.\n#\thttp://sunzi.lib.hku.hk/hkgro/view/g1941/304271.pdf\n#\thttp://sunzi.lib.hku.hk/hkgro/view/g1941/305516.pdf\n# * According to some articles from South China Morning Post, +08 was\n#   resumed on 1945-11-18 at 02:00.\n#\thttps://i.imgur.com/M2IsZ3c.png\n#\thttps://i.imgur.com/iOPqrVo.png\n#\thttps://i.imgur.com/fffcGDs.png\n# * Some newspapers ... said the 1946 spring-forward transition was on\n#   04-21 at 00:00.  The Kung Sheung Evening News 1946-04-20 (Chinese)\n#\thttps://i.imgur.com/ZSzent0.png\n#\thttps://mmis.hkpl.gov.hk///c/portal/cover?c=QF757YsWv5%2FH7zGe%2FKF%2BFLYsuqGhRBfe p.4\n#   The Kung Sheung Daily News 1946-04-21 (Chinese)\n#\thttps://i.imgur.com/7ecmRlcm.png\n#\thttps://mmis.hkpl.gov.hk///c/portal/cover?c=QF757YsWv5%2BQBGt1%2BwUj5qG2GqtwR3Wh p.4\n# * According to the Summer Time Ordinance (1946), the fallback\n#   transitions between 1946 and 1952 were at 03:30 Standard Time (+08)\n#\thttp://oelawhk.lib.hku.hk/archive/files/bb74b06a74d5294620a15de560ab33c6.pdf\n# * Some other laws and regulations related to DST from 1953 to 1979\n#   Summer Time Ordinance 1953\n#\thttps://i.imgur.com/IOlJMav.jpg\n#   Summer Time (Amendment) Ordinance 1965\n#\thttps://i.imgur.com/8rofeLa.jpg\n#   Interpretation and General Clauses Ordinance (1966)\n#\thttps://i.imgur.com/joy3msj.jpg\n#   Emergency (Summer Time) Regulation 1973 <https://i.imgur.com/OpRWrKz.jpg>\n#   Interpretation and General Clauses (Amendment) Ordinance 1977\n#\thttps://i.imgur.com/RaNqnc4.jpg\n#   Resolution of the Legislative Council passed on 9 May 1979\n#\thttps://www.legco.gov.hk/yr78-79/english/lc_sitg/hansard/h790509.pdf#page=39\n\n# From Paul Eggert (2020-04-15):\n# Here are the dates given at\n# https://www.hko.gov.hk/en/gts/time/Summertime.htm\n# as of 2020-02-10:\n# Year        Period\n# 1941        15 Jun to 30 Sep\n# 1942        Whole year\n# 1943        Whole year\n# 1944        Whole year\n# 1945        Whole year\n# 1946        20 Apr to 1 Dec\n# 1947        13 Apr to 30 Nov\n# 1948        2 May to 31 Oct\n# 1949        3 Apr to 30 Oct\n# 1950        2 Apr to 29 Oct\n# 1951        1 Apr to 28 Oct\n# 1952        6 Apr to 2 Nov\n# 1953        5 Apr to 1 Nov\n# 1954        21 Mar to 31 Oct\n# 1955        20 Mar to 6 Nov\n# 1956        18 Mar to 4 Nov\n# 1957        24 Mar to 3 Nov\n# 1958        23 Mar to 2 Nov\n# 1959        22 Mar to 1 Nov\n# 1960        20 Mar to 6 Nov\n# 1961        19 Mar to 5 Nov\n# 1962        18 Mar to 4 Nov\n# 1963        24 Mar to 3 Nov\n# 1964        22 Mar to 1 Nov\n# 1965        18 Apr to 17 Oct\n# 1966        17 Apr to 16 Oct\n# 1967        16 Apr to 22 Oct\n# 1968        21 Apr to 20 Oct\n# 1969        20 Apr to 19 Oct\n# 1970        19 Apr to 18 Oct\n# 1971        18 Apr to 17 Oct\n# 1972        16 Apr to 22 Oct\n# 1973        22 Apr to 21 Oct\n# 1973/74     30 Dec 73 to 20 Oct 74\n# 1975        20 Apr to 19 Oct\n# 1976        18 Apr to 17 Oct\n# 1977        Nil\n# 1978        Nil\n# 1979        13 May to 21 Oct\n# 1980 to Now Nil\n# The page does not give times of day for transitions,\n# or dates for the 1942 and 1945 transitions.\n# The Japanese occupation of Hong Kong began 1941-12-25.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tHK\t1946\tonly\t-\tApr\t21\t0:00\t1:00\tS\nRule\tHK\t1946\tonly\t-\tDec\t1\t3:30s\t0\t-\nRule\tHK\t1947\tonly\t-\tApr\t13\t3:30s\t1:00\tS\nRule\tHK\t1947\tonly\t-\tNov\t30\t3:30s\t0\t-\nRule\tHK\t1948\tonly\t-\tMay\t2\t3:30s\t1:00\tS\nRule\tHK\t1948\t1952\t-\tOct\tSun>=28\t3:30s\t0\t-\nRule\tHK\t1949\t1953\t-\tApr\tSun>=1\t3:30\t1:00\tS\nRule\tHK\t1953\t1964\t-\tOct\tSun>=31\t3:30\t0\t-\nRule\tHK\t1954\t1964\t-\tMar\tSun>=18\t3:30\t1:00\tS\nRule\tHK\t1965\t1976\t-\tApr\tSun>=16\t3:30\t1:00\tS\nRule\tHK\t1965\t1976\t-\tOct\tSun>=16\t3:30\t0\t-\nRule\tHK\t1973\tonly\t-\tDec\t30\t3:30\t1:00\tS\nRule\tHK\t1979\tonly\t-\tMay\t13\t3:30\t1:00\tS\nRule\tHK\t1979\tonly\t-\tOct\t21\t3:30\t0\t-\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n\t\t#STDOFF\t7:36:41.7\nZone\tAsia/Hong_Kong\t7:36:42 -\tLMT\t1904 Oct 29 17:00u\n\t\t\t8:00\t-\tHKT\t1941 Jun 15  3:00\n\t\t\t8:00\t1:00\tHKST\t1941 Oct  1  4:00\n\t\t\t8:00\t0:30\tHKWT\t1941 Dec 25\n\t\t\t9:00\t-\tJST\t1945 Nov 18  2:00\n\t\t\t8:00\tHK\tHK%sT\n\n###############################################################################\n\n# Taiwan\n\n# From smallufo (2010-04-03):\n# According to Taiwan's CWB [Central Weather Bureau],\n# http://www.cwb.gov.tw/V6/astronomy/cdata/summert.htm\n# Taipei has DST in 1979 between July 1st and Sep 30.\n\n# From Yu-Cheng Chuang (2013-07-12):\n# On Dec 28, 1895, the Meiji Emperor announced Ordinance No. 167 of\n# Meiji Year 28 \"The clause about standard time\", mentioned that\n# Taiwan and Penghu Islands, as well as Yaeyama and Miyako Islands\n# (both in Okinawa) adopt the Western Standard Time which is based on\n# 120E. The adoption began from Jan 1, 1896. The original text can be\n# found on Wikisource:\n# https://ja.wikisource.org/wiki/標準時ニ關スル件_(公布時)\n# ... This could be the first adoption of time zone in Taiwan, because\n# during the Qing Dynasty, it seems that there was no time zone\n# declared officially.\n#\n# Later, in the beginning of World War II, on Sep 25, 1937, the Showa\n# Emperor announced Ordinance No. 529 of Showa Year 12 \"The clause of\n# revision in the ordinance No. 167 of Meiji year 28 about standard\n# time\", in which abolished the adoption of Western Standard Time in\n# western islands (listed above), which means the whole Japan\n# territory, including later occupations, adopt Japan Central Time\n# (UT+9). The adoption began on Oct 1, 1937. The original text can\n# be found on Wikisource:\n# https://ja.wikisource.org/wiki/明治二十八年勅令第百六十七號標準時ニ關スル件中改正ノ件\n#\n# That is, the time zone of Taipei switched to UT+9 on Oct 1, 1937.\n\n# From Yu-Cheng Chuang (2014-07-02):\n# I've found more evidence about when the time zone was switched from UT+9\n# back to UT+8 after WW2.  I believe it was on Sep 21, 1945.  In a document\n# during Japanese era [1] in which the officer told the staff to change time\n# zone back to Western Standard Time (UT+8) on Sep 21.  And in another\n# history page of National Cheng Kung University [2], on Sep 21 there is a\n# note \"from today, switch back to Western Standard Time\".  From these two\n# materials, I believe that the time zone change happened on Sep 21.  And\n# today I have found another monthly journal called \"The Astronomical Herald\"\n# from The Astronomical Society of Japan [3] in which it mentioned the fact\n# that:\n#\n# 1. Standard Time of the Country (Japan) was adopted on Jan 1, 1888, using\n# the time at 135E (GMT+9)\n#\n# 2. Standard Time of the Country was renamed to Central Standard Time, on Jan\n# 1, 1898, and on the same day, the new territories Taiwan and Penghu islands,\n# as well as Yaeyama and Miyako islands, adopted a new time zone called\n# Western Standard Time, which is in GMT+8.\n#\n# 3. Western Standard Time was deprecated on Sep 30, 1937. From then all the\n# territories of Japan adopted the same time zone, which is Central Standard\n# Time.\n#\n# [1] Academica Historica, Taiwan:\n# http://163.29.208.22:8080/govsaleShowImage/connect_img.php?s=00101738900090036&e=00101738900090037\n# [2] Nat'l Cheng Kung University 70th Anniversary Special Site:\n# http://www.ncku.edu.tw/~ncku70/menu/001/01_01.htm\n# [3] Yukio Niimi, The Standard Time in Japan (1997), p.475:\n# http://www.asj.or.jp/geppou/archive_open/1997/pdf/19971001c.pdf\n\n# Yu-Cheng Chuang (2014-07-03):\n# I finally have found the real official gazette about changing back to\n# Western Standard Time on Sep 21 in Taiwan.  It's Taiwan Governor-General\n# Bulletin No. 386 in Showa 20 years (1945), published on Sep 19, 1945. [1] ...\n# [It] abolishes Bulletin No. 207 in Showa 12 years (1937), which is a local\n# bulletin in Taiwan for that Ordinance No. 529. It also mentioned that 1am on\n# Sep 21, 1945 will be 12am on Sep 21.  I think this bulletin is much more\n# official than the one I mentioned in my first mail, because it's from the\n# top-level government in Taiwan. If you're going to quote any resource, this\n# would be a good one.\n# [1] Taiwan Governor-General Gazette, No. 1018, Sep 19, 1945:\n# http://db2.th.gov.tw/db2/view/viewImg.php?imgcode=0072031018a&num=19&bgn=019&end=019&otherImg=&type=gener\n\n# From Yu-Cheng Chuang (2014-07-02):\n# In 1946, DST in Taiwan was from May 15 and ended on Sep 30. The info from\n# Central Weather Bureau website was not correct.\n#\n# Original Bulletin:\n# http://subtpg.tpg.gov.tw/og/image2.asp?f=03502F0AKM1AF\n# http://subtpg.tpg.gov.tw/og/image2.asp?f=0350300AKM1B0 (cont.)\n#\n# In 1947, DST in Taiwan was expanded to Oct 31. There is a backup of that\n# telegram announcement from Taiwan Province Government:\n#\n# http://subtpg.tpg.gov.tw/og/image2.asp?f=0360310AKZ431\n#\n# Here is a brief translation:\n#\n#   The Summer Time this year is adopted from midnight Apr 15 until Sep 20\n#   midnight. To save (energy?) consumption, we're expanding Summer Time\n#   adoption till Oct 31 midnight.\n#\n# The Central Weather Bureau website didn't mention that, however it can\n# be found from historical government announcement database.\n\n# From Paul Eggert (2014-07-03):\n# As per Yu-Cheng Chuang, say that Taiwan was at UT +09 from 1937-10-01\n# until 1945-09-21 at 01:00, overriding Shanks & Pottenger.\n# Likewise, use Yu-Cheng Chuang's data for DST in Taiwan.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tTaiwan\t1946\tonly\t-\tMay\t15\t0:00\t1:00\tD\nRule\tTaiwan\t1946\tonly\t-\tOct\t1\t0:00\t0\tS\nRule\tTaiwan\t1947\tonly\t-\tApr\t15\t0:00\t1:00\tD\nRule\tTaiwan\t1947\tonly\t-\tNov\t1\t0:00\t0\tS\nRule\tTaiwan\t1948\t1951\t-\tMay\t1\t0:00\t1:00\tD\nRule\tTaiwan\t1948\t1951\t-\tOct\t1\t0:00\t0\tS\nRule\tTaiwan\t1952\tonly\t-\tMar\t1\t0:00\t1:00\tD\nRule\tTaiwan\t1952\t1954\t-\tNov\t1\t0:00\t0\tS\nRule\tTaiwan\t1953\t1959\t-\tApr\t1\t0:00\t1:00\tD\nRule\tTaiwan\t1955\t1961\t-\tOct\t1\t0:00\t0\tS\nRule\tTaiwan\t1960\t1961\t-\tJun\t1\t0:00\t1:00\tD\nRule\tTaiwan\t1974\t1975\t-\tApr\t1\t0:00\t1:00\tD\nRule\tTaiwan\t1974\t1975\t-\tOct\t1\t0:00\t0\tS\nRule\tTaiwan\t1979\tonly\t-\tJul\t1\t0:00\t1:00\tD\nRule\tTaiwan\t1979\tonly\t-\tOct\t1\t0:00\t0\tS\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n# Taipei or Taibei or T'ai-pei\nZone\tAsia/Taipei\t8:06:00 -\tLMT\t1896 Jan  1\n\t\t\t8:00\t-\tCST\t1937 Oct  1\n\t\t\t9:00\t-\tJST\t1945 Sep 21  1:00\n\t\t\t8:00\tTaiwan\tC%sT\n\n# Macau (Macao, Aomen)\n#\n# From P Chan (2018-05-10):\n# * LegisMac\n#   http://legismac.safp.gov.mo/legismac/descqry/Descqry.jsf?lang=pt\n#   A database for searching titles of legal documents of Macau in\n#   Chinese and Portuguese.  The term \"HORÁRIO DE VERÃO\" can be used for\n#   searching decrees about summer time.\n# * Archives of Macao\n#   http://www.archives.gov.mo/en/bo/\n#   It contains images of old official gazettes.\n# * The Macao Meteorological and Geophysical Bureau have a page listing the\n#   summer time history.  But it is not complete and has some mistakes.\n#   http://www.smg.gov.mo/smg/geophysics/e_t_Summer%20Time.htm\n# Macau adopted GMT+8 on 30 Oct 1904 to follow Hong Kong.  Clocks were\n# advanced by 25 minutes and 50 seconds.  Which means the LMT used was\n# +7:34:10.  As stated in the \"Portaria No. 204\" dated 21 October 1904\n# and published in the Official Gazette on 29 October 1904.\n# http://igallery.icm.gov.mo/Images/Archives/BO/MO_AH_PUB_BO_1904_10/MO_AH_PUB_BO_1904_10_00025_Grey.JPG\n#\n# Therefore the 1911 decree of Portugal did not change time in Macau.\n#\n# From LegisMac, here is a list of decrees that changed the time ...\n# [Decree Gazette-no. date; titles omitted in this quotation]\n#\tDIL 732 BOCM 51 1941.12.20\n#\tDIL 764 BOCM 9S 1942.04.30\n#\tDIL 781 BOCM 21 1942.10.10\n#\tPT 3434 BOCM 8S 1943.04.17\n#\tPT 3504 BOCM 20 1943.09.25\n#\tPT 3843 BOCM 39 1945.09.29\n#\tPT 3961 BOCM 17 1946.04.27\n#\tPT 4026 BOCM 39 1946.09.28\n#\tPT 4153 BOCM 16 1947.04.10\n#\tPT 4271 BOCM 48 1947.11.29\n#\tPT 4374 BOCM 18 1948.05.01\n#\tPT 4465 BOCM 44 1948.10.30\n#\tPT 4590 BOCM 14 1949.04.02\n#\tPT 4666 BOCM 44 1949.10.29\n#\tPT 4771 BOCM 12 1950.03.25\n#\tPT 4838 BOCM 43 1950.10.28\n#\tPT 4946 BOCM 12 1951.03.24\n#\tPT 5025 BO 43 1951.10.27\n#\tPT 5149 BO 14 1952.04.05\n#\tPT 5251 BO 43 1952.10.25\n#\tPT 5366 BO 13 1953.03.28\n#\tPT 5444 BO 44 1953.10.31\n#\tPT 5540 BO 12 1954.03.20\n#\tPT 5589 BO 44 1954.10.30\n#\tPT 5676 BO 12 1955.03.19\n#\tPT 5739 BO 45 1955.11.05\n#\tPT 5823 BO 11 1956.03.17\n#\tPT 5891 BO 44 1956.11.03\n#\tPT 5981 BO 12 1957.03.23\n#\tPT 6064 BO 43 1957.10.26\n#\tPT 6172 BO 12 1958.03.22\n#\tPT 6243 BO 43 1958.10.25\n#\tPT 6341 BO 12 1959.03.21\n#\tPT 6411 BO 43 1959.10.24\n#\tPT 6514 BO 11 1960.03.12\n#\tPT 6584 BO 44 1960.10.29\n#\tPT 6721 BO 10 1961.03.11\n#\tPT 6815 BO 43 1961.10.28\n#\tPT 6947 BO 10 1962.03.10\n#\tPT 7080 BO 43 1962.10.27\n#\tPT 7218 BO 12 1963.03.23\n#\tPT 7340 BO 43 1963.10.26\n#\tPT 7491 BO 11 1964.03.14\n#\tPT 7664 BO 43 1964.10.24\n#\tPT 7846 BO 15 1965.04.10\n#\tPT 7979 BO 42 1965.10.16\n#\tPT 8146 BO 15 1966.04.09\n#\tPT 8252 BO 41 1966.10.08\n#\tPT 8429 BO 15 1967.04.15\n#\tPT 8540 BO 41 1967.10.14\n#\tPT 8735 BO 15 1968.04.13\n#\tPT 8860 BO 41 1968.10.12\n#\tPT 9035 BO 16 1969.04.19\n#\tPT 9156 BO 42 1969.10.18\n#\tPT 9328 BO 15 1970.04.11\n#\tPT 9418 BO 41 1970.10.10\n#\tPT 9587 BO 14 1971.04.03\n#\tPT 9702 BO 41 1971.10.09\n#\tPT 38-A/72 BO 14 1972.04.01\n#\tPT 126-A/72 BO 41 1972.10.07\n#\tPT 61/73 BO 14 1973.04.07\n#\tPT 182/73 BO 40 1973.10.06\n#\tPT 282/73 BO 51 1973.12.22\n#\tPT 177/74 BO 41 1974.10.12\n#\tPT 51/75 BO 15 1975.04.12\n#\tPT 173/75 BO 41 1975.10.11\n#\tPT 67/76/M BO 14 1976.04.03\n#\tPT 169/76/M BO 41 1976.10.09\n#\tPT 78/79/M BO 19 1979.05.12\n#\tPT 166/79/M BO 42 1979.10.20\n# Note that DIL 732 does not belong to \"HORÁRIO DE VERÃO\" according to\n# LegisMac.... Note that between 1942 and 1945, the time switched\n# between GMT+9 and GMT+10.  Also in 1965 and 1965 the DST ended at 2:30am.\n\n# From Paul Eggert (2018-05-10):\n# The 1904 decree says that Macau changed from the meridian of\n# Fortaleza do Monte, presumably the basis for the 7:34:10 for LMT.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tMacau\t1942\t1943\t-\tApr\t30\t23:00\t1:00\t-\nRule\tMacau\t1942\tonly\t-\tNov\t17\t23:00\t0\t-\nRule\tMacau\t1943\tonly\t-\tSep\t30\t23:00\t0\tS\nRule\tMacau\t1946\tonly\t-\tApr\t30\t23:00s\t1:00\tD\nRule\tMacau\t1946\tonly\t-\tSep\t30\t23:00s\t0\tS\nRule\tMacau\t1947\tonly\t-\tApr\t19\t23:00s\t1:00\tD\nRule\tMacau\t1947\tonly\t-\tNov\t30\t23:00s\t0\tS\nRule\tMacau\t1948\tonly\t-\tMay\t 2\t23:00s\t1:00\tD\nRule\tMacau\t1948\tonly\t-\tOct\t31\t23:00s\t0\tS\nRule\tMacau\t1949\t1950\t-\tApr\tSat>=1\t23:00s\t1:00\tD\nRule\tMacau\t1949\t1950\t-\tOct\tlastSat\t23:00s\t0\tS\nRule\tMacau\t1951\tonly\t-\tMar\t31\t23:00s\t1:00\tD\nRule\tMacau\t1951\tonly\t-\tOct\t28\t23:00s\t0\tS\nRule\tMacau\t1952\t1953\t-\tApr\tSat>=1\t23:00s\t1:00\tD\nRule\tMacau\t1952\tonly\t-\tNov\t 1\t23:00s\t0\tS\nRule\tMacau\t1953\t1954\t-\tOct\tlastSat\t23:00s\t0\tS\nRule\tMacau\t1954\t1956\t-\tMar\tSat>=17\t23:00s\t1:00\tD\nRule\tMacau\t1955\tonly\t-\tNov\t 5\t23:00s\t0\tS\nRule\tMacau\t1956\t1964\t-\tNov\tSun>=1\t03:30\t0\tS\nRule\tMacau\t1957\t1964\t-\tMar\tSun>=18\t03:30\t1:00\tD\nRule\tMacau\t1965\t1973\t-\tApr\tSun>=16\t03:30\t1:00\tD\nRule\tMacau\t1965\t1966\t-\tOct\tSun>=16\t02:30\t0\tS\nRule\tMacau\t1967\t1976\t-\tOct\tSun>=16\t03:30\t0\tS\nRule\tMacau\t1973\tonly\t-\tDec\t30\t03:30\t1:00\tD\nRule\tMacau\t1975\t1976\t-\tApr\tSun>=16\t03:30\t1:00\tD\nRule\tMacau\t1979\tonly\t-\tMay\t13\t03:30\t1:00\tD\nRule\tMacau\t1979\tonly\t-\tOct\tSun>=16\t03:30\t0\tS\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAsia/Macau\t7:34:10 -\tLMT\t1904 Oct 30\n\t\t\t8:00\t-\tCST\t1941 Dec 21 23:00\n\t\t\t9:00\tMacau\t%z\t1945 Sep 30 24:00\n\t\t\t8:00\tMacau\tC%sT\n\n\n###############################################################################\n\n# Cyprus\n\n# Milne says the Eastern Telegraph Company used 2:14:00.  Stick with LMT.\n# IATA SSIM (1998-09) has Cyprus using EU rules for the first time.\n\n# From Paul Eggert (2016-09-09):\n# Yesterday's Cyprus Mail reports that Northern Cyprus followed Turkey's\n# lead and switched from +02/+03 to +03 year-round.\n# http://cyprus-mail.com/2016/09/08/two-time-zones-cyprus-turkey-will-not-turn-clocks-back-next-month/\n#\n# From Even Scharning (2016-10-31):\n# Looks like the time zone split in Cyprus went through last night.\n# http://cyprus-mail.com/2016/10/30/cyprus-new-division-two-time-zones-now-reality/\n\n# From Paul Eggert (2017-10-18):\n# Northern Cyprus will reinstate winter time on October 29, thus\n# staying in sync with the rest of Cyprus.  See: Anastasiou A.\n# Cyprus to remain united in time.  Cyprus Mail 2017-10-17.\n# https://cyprus-mail.com/2017/10/17/cyprus-remain-united-time/\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tCyprus\t1975\tonly\t-\tApr\t13\t0:00\t1:00\tS\nRule\tCyprus\t1975\tonly\t-\tOct\t12\t0:00\t0\t-\nRule\tCyprus\t1976\tonly\t-\tMay\t15\t0:00\t1:00\tS\nRule\tCyprus\t1976\tonly\t-\tOct\t11\t0:00\t0\t-\nRule\tCyprus\t1977\t1980\t-\tApr\tSun>=1\t0:00\t1:00\tS\nRule\tCyprus\t1977\tonly\t-\tSep\t25\t0:00\t0\t-\nRule\tCyprus\t1978\tonly\t-\tOct\t2\t0:00\t0\t-\nRule\tCyprus\t1979\t1997\t-\tSep\tlastSun\t0:00\t0\t-\nRule\tCyprus\t1981\t1998\t-\tMar\tlastSun\t0:00\t1:00\tS\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAsia/Nicosia\t2:13:28 -\tLMT\t1921 Nov 14\n\t\t\t2:00\tCyprus\tEE%sT\t1998 Sep\n\t\t\t2:00\tEUAsia\tEE%sT\nZone\tAsia/Famagusta\t2:15:48\t-\tLMT\t1921 Nov 14\n\t\t\t2:00\tCyprus\tEE%sT\t1998 Sep\n\t\t\t2:00\tEUAsia\tEE%sT\t2016 Sep  8\n\t\t\t3:00\t-\t%z\t2017 Oct 29 1:00u\n\t\t\t2:00\tEUAsia\tEE%sT\n\n# Georgia\n# From Paul Eggert (1994-11-19):\n# Today's _Economist_ (p 60) reports that Georgia moved its clocks forward\n# an hour recently, due to a law proposed by Zurab Murvanidze,\n# an MP who went on a hunger strike for 11 days to force discussion about it!\n# We have no details, but we'll guess they didn't move the clocks back in fall.\n#\n# From Mathew Englander, quoting AP (1996-10-23 13:05-04):\n# Instead of putting back clocks at the end of October, Georgia\n# will stay on daylight savings time this winter to save energy,\n# President Eduard Shevardnadze decreed Wednesday.\n#\n# From the BBC via Joseph S. Myers (2004-06-27):\n#\n# Georgia moved closer to Western Europe on Sunday...  The former Soviet\n# republic has changed its time zone back to that of Moscow.  As a result it\n# is now just four hours ahead of Greenwich Mean Time, rather than five hours\n# ahead.  The switch was decreed by the pro-Western president of Georgia,\n# Mikheil Saakashvili, who said the change was partly prompted by the process\n# of integration into Europe.\n\n# From Teimuraz Abashidze (2005-11-07):\n# Government of Georgia ... decided to NOT CHANGE daylight savings time on\n# [Oct.] 30, as it was done before during last more than 10 years.\n# Currently, we are in fact GMT +4:00, as before 30 October it was GMT\n# +3:00.... The problem is, there is NO FORMAL LAW or governmental document\n# about it.  As far as I can find, I was told, that there is no document,\n# because we just DIDN'T ISSUE document about switching to winter time....\n# I don't know what can be done, especially knowing that some years ago our\n# DST rules where changed THREE TIMES during one month.\n\n# Milne 1899 says Tbilisi (Tiflis) time was 2:59:05.7.\n# Byalokoz 1919 says Georgia was 2:59:11.\n# Go with Byalokoz.\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAsia/Tbilisi\t2:59:11 -\tLMT\t1880\n\t\t\t2:59:11\t-\tTBMT\t1924 May  2 # Tbilisi Mean Time\n\t\t\t3:00\t-\t%z\t1957 Mar\n\t\t\t4:00 RussiaAsia %z\t1991 Mar 31  2:00s\n\t\t\t3:00 RussiaAsia %z\t1992\n\t\t\t3:00 E-EurAsia\t%z\t1994 Sep lastSun\n\t\t\t4:00 E-EurAsia\t%z\t1996 Oct lastSun\n\t\t\t4:00\t1:00\t%z\t1997 Mar lastSun\n\t\t\t4:00 E-EurAsia\t%z\t2004 Jun 27\n\t\t\t3:00 RussiaAsia\t%z\t2005 Mar lastSun  2:00\n\t\t\t4:00\t-\t%z\n\n# East Timor\n\n# From Tim Parenti (2024-07-01):\n# The 1912-01-01 transition occurred at 00:00 new time, per the 1911-05-24\n# Portuguese decree (see Europe/Lisbon).  A provision in article 5(c) of the\n# decree prescribed that Timor \"will keep counting time in harmony with\n# neighboring foreign colonies, [for] as long as they do not adopt the time\n# that belongs to them in [the Washington Convention] system.\"\n\n# See Indonesia for the 1945 transition.\n\n# From João Carrascalão, brother of the former governor of East Timor, in\n# East Timor may be late for its millennium\n# <https://etan.org/et99c/december/26-31/30ETMAY.htm> (1999-12-26/31):\n# Portugal tried to change the time forward in 1974 because the sun\n# rises too early but the suggestion raised a lot of problems with the\n# Timorese and I still don't think it would work today because it\n# conflicts with their way of life.\n\n# From Paul Eggert (2000-12-04):\n# We don't have any record of the above attempt.\n# Most likely our records are incomplete, but we have no better data.\n\n# From Manoel de Almeida e Silva, Deputy Spokesman for the UN Secretary-General\n# http://www.hri.org/news/world/undh/2000/00-08-16.undh.html\n# (2000-08-16):\n# The Cabinet of the East Timor Transition Administration decided\n# today to advance East Timor's time by one hour.  The time change,\n# which will be permanent, with no seasonal adjustment, will happen at\n# midnight on Saturday, September 16.\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAsia/Dili\t8:22:20 -\tLMT\t1911 Dec 31 16:00u\n\t\t\t8:00\t-\t%z\t1942 Feb 21 23:00\n\t\t\t9:00\t-\t%z\t1976 May  3\n\t\t\t8:00\t-\t%z\t2000 Sep 17  0:00\n\t\t\t9:00\t-\t%z\n\n# India\n\n# British astronomer Henry Park Hollis disliked India Standard Time's offset:\n# \"A new time system has been proposed for India, Further India, and Burmah.\n# The scheme suggested is that the times of the meridians 5½ and 6½ hours\n# east of Greenwich should be adopted in these territories.  No reason is\n# given why hourly meridians five hours and six hours east should not be\n# chosen; a plan which would bring the time of India into harmony with\n# that of almost the whole of the civilised world.\"\n# Hollis HP. Universal Time, Longitudes, and Geodesy. Mon Not R Astron Soc.\n# 1905-02-10;65(4):405-6. https://doi.org/10.1093/mnras/65.4.382\n\n# From Ian P. Beacock, in \"A brief history of (modern) time\", The Atlantic\n# https://www.theatlantic.com/technology/archive/2015/12/the-creation-of-modern-time/421419/\n# (2015-12-22):\n# In January 1906, several thousand cotton-mill workers rioted on the\n# outskirts of Bombay....  They were protesting the proposed abolition of\n# local time in favor of Indian Standard Time....  Journalists called this\n# dispute the \"Battle of the Clocks.\"  It lasted nearly half a century.\n\n# From Paul Eggert (2017-04-20):\n# Good luck trying to nail down old timekeeping records in India.\n# \"... in the nineteenth century ... Madras Observatory took its magnetic\n# measurements on Göttingen time, its meteorological measurements on Madras\n# (local) time, dropped its time ball on Greenwich (ocean navigator's) time,\n# and distributed civil (local time).\" -- Bartky IR. Selling the true time:\n# 19th-century timekeeping in america. Stanford U Press (2000), 247 note 19.\n# \"A more potent cause of resistance to the general adoption of the present\n# standard time lies in the fact that it is Madras time.  The citizen of\n# Bombay, proud of being 'primus in Indis' and of Calcutta, equally proud of\n# his city being the Capital of India, and - for a part of the year - the Seat\n# of the Supreme Government, alike look down on Madras, and refuse to change\n# the time they are using, for that of what they regard as a benighted\n# Presidency; while Madras, having for long given the standard time to the\n# rest of India, would resist the adoption of any other Indian standard in its\n# place.\" -- Oldham RD. On Time in India: a suggestion for its improvement.\n# Proceedings of the Asiatic Society of Bengal (April 1899), 49-55.\n#\n# \"In 1870 ... Madras time - 'now used by the telegraph and regulated from the\n# only government observatory' - was suggested as a standard railway time,\n# first to be adopted on the Great Indian Peninsular Railway (GIPR)....\n# Calcutta, Bombay, and Karachi, were to be allowed to continue with their\n# local time for civil purposes.\" - Prasad R. Tracks of Change: Railways and\n# Everyday Life in Colonial India. Cambridge University Press (2016), 145.\n#\n# Reed S, Low F. The Indian Year Book 1936-37. Bennett, Coleman, pp 27-8.\n# https://archive.org/details/in.ernet.dli.2015.282212\n# This lists +052110 as Madras local time used in railways, and says that on\n# 1906-01-01 railways and telegraphs in India switched to +0530.  Some\n# municipalities retained their former time, and the time in Calcutta\n# continued to depend on whether you were at the railway station or at\n# government offices.  Government time was at +055320 (according to Shanks) or\n# at +0554 (according to the Indian Year Book).  Railway time is more\n# appropriate for our purposes, as it was better documented, it is what we do\n# elsewhere (e.g., Europe/London before 1880), and after 1906 it was\n# consistent in the region now identified by Asia/Kolkata.  So, use railway\n# time for 1870-1941.  Shanks is our only (and dubious) source for the\n# 1941-1945 data.\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAsia/Kolkata\t5:53:28 -\tLMT\t1854 Jun 28 # Kolkata\n\t\t\t5:53:20\t-\tHMT\t1870\t    # Howrah Mean Time?\n\t\t\t5:21:10\t-\tMMT\t1906 Jan  1 # Madras local time\n\t\t\t5:30\t-\tIST\t1941 Oct\n\t\t\t5:30\t1:00\t%z\t1942 May 15\n\t\t\t5:30\t-\tIST\t1942 Sep\n\t\t\t5:30\t1:00\t%z\t1945 Oct 15\n\t\t\t5:30\t-\tIST\n# Since 1970 the following are like Asia/Kolkata:\n#\tAndaman Is\n#\tLakshadweep (Laccadive, Minicoy and Amindivi Is)\n#\tNicobar Is\n\n# Indonesia\n#\n# From Paul Eggert (2014-09-06):\n# The 1876 Report of the Secretary of the [US] Navy, p 306 says that Batavia\n# civil time was 7:07:12.5.\n#\n# From Gwillim Law (2001-05-28), overriding Shanks & Pottenger:\n# http://www.sumatera-inc.com/go_to_invest/about_indonesia.asp#standtime\n# says that Indonesia's time zones changed on 1988-01-01.  Looking at some\n# time zone maps, I think that must refer to Western Borneo (Kalimantan Barat\n# and Kalimantan Tengah) switching from UTC+8 to UTC+7.\n#\n# From Paul Eggert (2007-03-10):\n# Here is another correction to Shanks & Pottenger.\n# JohnTWB writes that Japanese forces did not surrender control in\n# Indonesia until 1945-09-01 00:00 at the earliest (in Jakarta) and\n# other formal surrender ceremonies were September 9, 11, and 13, plus\n# September 12 for the regional surrender to Mountbatten in Singapore.\n# These would be the earliest possible times for a change.\n# Régimes horaires pour le monde entier, by Henri Le Corre, (Éditions\n# Traditionnelles, 1987, Paris) says that Java and Madura switched\n# from UT +09 to +07:30 on 1945-09-23, and gives 1944-09-01 for Jayapura\n# (Hollandia).  For now, assume all Indonesian locations other than Jayapura\n# switched on 1945-09-23.\n#\n# From Paul Eggert (2013-08-11):\n# Normally the tz database uses English-language abbreviations, but in\n# Indonesia it's typical to use Indonesian-language abbreviations even\n# when writing in English.  For example, see the English-language\n# summary published by the Time and Frequency Laboratory of the\n# Research Center for Calibration, Instrumentation and Metrology,\n# Indonesia, <http://time.kim.lipi.go.id/time-eng.php> (2006-09-29).\n# The time zone abbreviations and UT offsets are:\n#\n# WIB  - +07 - Waktu Indonesia Barat (Indonesia western time)\n# WITA - +08 - Waktu Indonesia Tengah (Indonesia central time)\n# WIT  - +09 - Waktu Indonesia Timur (Indonesia eastern time)\n#\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n# Java, Sumatra\n\t\t#STDOFF\t7:07:12.5\nZone Asia/Jakarta\t7:07:12 -\tLMT\t1867 Aug 10\n# Shanks & Pottenger say the next transition was at 1924 Jan 1 0:13,\n# but this must be a typo.\n\t\t\t7:07:12\t-\tBMT\t1923 Dec 31 16:40u # Batavia\n\t\t\t7:20\t-\t%z\t1932 Nov\n\t\t\t7:30\t-\t%z\t1942 Mar 23\n\t\t\t9:00\t-\t%z\t1945 Sep 23\n\t\t\t7:30\t-\t%z\t1948 May\n\t\t\t8:00\t-\t%z\t1950 May\n\t\t\t7:30\t-\t%z\t1964\n\t\t\t7:00\t-\tWIB\n# west and central Borneo\nZone Asia/Pontianak\t7:17:20\t-\tLMT\t1908 May\n\t\t\t7:17:20\t-\tPMT\t1932 Nov    # Pontianak MT\n\t\t\t7:30\t-\t%z\t1942 Jan 29\n\t\t\t9:00\t-\t%z\t1945 Sep 23\n\t\t\t7:30\t-\t%z\t1948 May\n\t\t\t8:00\t-\t%z\t1950 May\n\t\t\t7:30\t-\t%z\t1964\n\t\t\t8:00\t-\tWITA\t1988 Jan  1\n\t\t\t7:00\t-\tWIB\n# Sulawesi, Lesser Sundas, east and south Borneo\nZone Asia/Makassar\t7:57:36 -\tLMT\t1920\n\t\t\t7:57:36\t-\tMMT\t1932 Nov    # Macassar MT\n\t\t\t8:00\t-\t%z\t1942 Feb  9\n\t\t\t9:00\t-\t%z\t1945 Sep 23\n\t\t\t8:00\t-\tWITA\n# Maluku Islands, West Papua, Papua\nZone Asia/Jayapura\t9:22:48 -\tLMT\t1932 Nov\n\t\t\t9:00\t-\t%z\t1944 Sep  1\n\t\t\t9:30\t-\t%z\t1964\n\t\t\t9:00\t-\tWIT\n\n# Iran\n\n# From Roozbeh Pournader (2022-05-30):\n# Here's an order from the Cabinet to the rest of the government to switch to\n# Tehran time, which is mentioned to be already at +03:30:\n# https://qavanin.ir/Law/TreeText/180138\n# Just in case that goes away, I also saved a copy at archive.org:\n# https://web.archive.org/web/20220530111940/https://qavanin.ir/Law/TreeText/180138\n# Here's my translation:\n#\n# \"Circular on Matching the Hours of Governmental and Official Circles\n# in Provinces\n# Approved 1314/03/22 [=1935-06-13]\n# According to the ruling of the Honorable Cabinet, it is ordered that from\n# now on in all internal provinces of the country, governmental and official\n# circles set their time to match Tehran time (three hours and half before\n# Greenwich)....\n#\n# I still haven't found out when Tehran itself switched to +03:30....\n#\n# From Paul Eggert (2022-06-05):\n# Although the above says Tehran was at +03:30 before 1935-06-13, we don't\n# know when it switched to +03:30.  For now, use 1935-06-13 as the switch date.\n# Although most likely wrong, we have no better info.\n\n# From Roozbeh Pournader (2022-06-01):\n# This is from Kayhan newspaper, one of the major Iranian newspapers, from\n# March 20, 1978, page 2:\n#\n# \"Pull the clocks 60 minutes forward\n# As we informed before, from the fourth day of the month Farvardin of the\n# new year [=1978-03-24], clocks will be pulled forward, and people's daily\n# work and life program will start one hour earlier than the current program.\n# On the 1st day of the month Farvardin of this year [=1977-03-21], they had\n# pulled the clocks forward by one hour, but in the month of Mehr\n# [=1977-09-23], the clocks were pulled back by 30 minutes.\n# In this way, from the 4th day of the month Farvardin, clocks will be ahead\n# of the previous years by one hour and a half.\n# According to the new program, during the night of 4th of Farvardin, when\n# the midnight, meaning 24 o'clock is announced, the hands of the clock must\n# be pulled forward by one hour and thus consider midnight 1 o'clock in the\n# forenoon.\"\n#\n# This implies that in September 1977, when the daylight savings time was\n# done with, Iran didn't go back to +03:30, but immediately to +04:00.\n#\n#\n# This is from the major Iranian newspaper Ettela'at, dated [1978-08-03]...,\n# page 32. It looks like they decided to get the clocks back to +4:00\n# just in time for Ramadan that year:\n#\n# \"Tomorrow Night, Pull the Clocks Back by One Hour\n# At 1 o'clock in the forenoon of Saturday 14 Mordad [=1978-08-05], the\n# clocks will be pulled one hour back and instead of 1 o'clock in the\n# forenoon, Radio Iran will announce 24 o'clock.\n# This decision was made in the Cabinet of Ministers meeting of 25 Tir\n# [=1978-07-16], [...]\n# At the beginning of the year 2537 [=March 1978: Iran was using a different\n# year number for a few years then, based on the Coronation of Cyrus the\n# Great], the country's official time was pulled forward by one hour and now\n# the official time is one hour and a half ahead compared to last year,\n# because in Farvardin of last year [=March 1977], the official time was\n# pulled forward one hour and this continued until the second half of last\n# year [=September 1977] until in the second half of last year the official\n# time was pulled back half an hour and that half hour still remains.\"\n#\n# This matches the time of the true noon published in the newspapers, as they\n# clearly go from +05:00 to +04:00 after that date (which happened during a\n# long weekend in Iran).\n\n# From Roozbeh Pournader (2022-05-31):\n# [Movahedi S. Cultural preconceptions of time: Can we use operational time\n# to meddle in God's Time? Comp Stud Soc Hist. 1985;27(3):385-400]\n# https://www.jstor.org/stable/178704\n# Here's the quotes from the paper:\n# 1. '\"Iran's official time keeper moved the clock one hour forward as from\n# March 22, 1977 (Farvardin 2, 2536) to make maximum use of daylight and save\n# in energy consumption. Thus Iran joined such other countries as Britain in\n# observing what is known as 'daylight saving.' The proposal was originally\n# put forward by the Ministry of Energy, in no way having any influence on\n# observing religious ceremonies. Moving time one hour forward in summer\n# means that at 11:00 o'clock on March 21, the official time was set as\n# midnight March 22. Then September 24 will actually begin one hour later\n# than the end of September 23 [...].\" Iran's time base thus continued to be\n# Greenwich Mean Time plus three and one-half hours (plus four and one-half\n# hours in summer).'\n#\n# The article sources this from Iran Almanac and Book of Facts, 1977, Tehran:\n# Echo of Iran, which is on Google Books at\n# https://www.google.com/books/edition/Iran_Almanac_and_Book_of_Facts/9ybVAAAAMAAJ.\n# (I confirmed it by searching for snippets.)\n#\n# 2. \"After the fall of the shah, the revolutionary government returned to\n# daylight-saving time (DST) on 26 May 1979.\"\n#\n# This seems to have been announced just one day in advance, on 25 May 1979.\n#\n# The change in 1977 clearly seems to be the first daylight savings effort in\n# Iran. But the article doesn't mention what happened in 1978 (which was\n# still during the shah's government), or how things continued in 1979\n# onwards (which was during the Islamic Republic).\n\n# From Francis Santoni (2022-06-01):\n# for Iran and 1977 the effective change is only 20 October\n# (UIT No. 143 17.XI.1977) and not 23 September (UIT No. 141 13.IX.1977).\n# UIT is the Operational Bulletin of International Telecommunication Union.\n\n# From Roozbeh Pournader (2003-03-15):\n# This is an English translation of what I just found (originally in Persian).\n# The Gregorian dates in brackets are mine:\n#\n#\tOfficial Newspaper No. 13548-1370/6/25 [1991-09-16]\n#\tNo. 16760/T233 H\t\t\t\t1370/6/10 [1991-09-01]\n#\n#\tThe Rule About Change of the Official Time of the Country\n#\n#\tThe Board of Ministers, in the meeting dated 1370/5/23 [1991-08-14],\n#\tbased on the suggestion number 2221/D dated 1370/4/22 [1991-07-13]\n#\tof the Country's Organization for Official and Employment Affairs,\n#\tand referring to the law for equating the working hours of workers\n#\tand officers in the whole country dated 1359/4/23 [1980-07-14], and\n#\tfor synchronizing the official times of the country, agreed that:\n#\n#\tThe official time of the country will should move forward one hour\n#\tat the 24[:00] hours of the first day of Farvardin and should return\n#\tto its previous state at the 24[:00] hours of the 30th day of\n#\tShahrivar.\n#\n#\tFirst Deputy to the President - Hassan Habibi\n#\n# From personal experience, that agrees with what has been followed\n# for at least the last 5 years.  Before that, for a few years, the\n# date used was the first Thursday night of Farvardin and the last\n# Thursday night of Shahrivar, but I can't give exact dates....\n#\n# From Roozbeh Pournader (2005-04-05):\n# The text of the Iranian law, in effect since 1925, clearly mentions\n# that the true solar year is the measure, and there is no arithmetic\n# leap year calculation involved.  There has never been any serious\n# plan to change that law....\n#\n# From Paul Eggert (2022-06-30):\n# Go with Pournader for 1935 through spring 1979, and for timestamps\n# after August 1991; go with with Shanks & Pottenger for other timestamps.\n# Go with Santoni's citation of the UIT for fall 1977, as 20 October 1977\n# is 28 Mehr 1356, consistent with the \"Mehr\" in Pournader's source.\n# Assume that the UIT's \"1930\" is UTC, i.e., 24:00 local time.\n#\n# From Oscar van Vlijmen (2005-03-30), writing about future\n# discrepancies between cal-persia and the Iranian calendar:\n# For 2091 solar-longitude-after yields 2091-03-20 08:40:07.7 UT for\n# the vernal equinox and that gets so close to 12:00 some local\n# Iranian time that the definition of the correct location needs to be\n# known exactly, amongst other factors.  2157 is even closer:\n# 2157-03-20 08:37:15.5 UT.  But the Gregorian year 2025 should give\n# no interpretation problem whatsoever.  By the way, another instant\n# in the near future where there will be a discrepancy between\n# arithmetical and astronomical Iranian calendars will be in 2058:\n# vernal equinox on 2058-03-20 09:03:05.9 UT.  The Java version of\n# Reingold's/Dershowitz' calculator gives correctly the Gregorian date\n# 2058-03-21 for 1 Farvardin 1437 (astronomical).\n#\n# From Steffen Thorsen (2006-03-22):\n# Several of my users have reported that Iran will not observe DST anymore:\n# http://www.irna.ir/en/news/view/line-17/0603193812164948.htm\n#\n# From Reuters (2007-09-16), with a heads-up from Jesper Nørgaard Welen:\n# ... the Guardian Council ... approved a law on Sunday to re-introduce\n# daylight saving time ...\n# https://uk.reuters.com/article/oilRpt/idUKBLA65048420070916\n#\n# From Roozbeh Pournader (2007-11-05):\n# This is quoted from Official Gazette of the Islamic Republic of\n# Iran, Volume 63, No. 18242, dated Tuesday 1386/6/24\n# [2007-10-16]. I am doing the best translation I can:...\n# The official time of the country will be moved forward for one hour\n# on the 24 hours of the first day of the month of Farvardin and will\n# be changed back to its previous state on the 24 hours of the\n# thirtieth day of Shahrivar.\n#\n# From Ali Mirjamali (2022-05-10):\n# Official IR News Agency announcement: irna.ir/xjJ3TT\n# ...\n# Highlights: DST will be cancelled for the next Iranian year 1402\n# (i.e 2023-March-21) and forthcoming years.\n#\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\n# Work around a bug in zic 2022a and earlier.\nRule\tIran\t1910\tonly\t-\tJan\t 1\t00:00\t0\t-\n#\nRule\tIran\t1977\tonly\t-\tMar\t21\t23:00\t1:00\t-\nRule\tIran\t1977\tonly\t-\tOct\t20\t24:00\t0\t-\nRule\tIran\t1978\tonly\t-\tMar\t24\t24:00\t1:00\t-\nRule\tIran\t1978\tonly\t-\tAug\t 5\t01:00\t0\t-\nRule\tIran\t1979\tonly\t-\tMay\t26\t24:00\t1:00\t-\nRule\tIran\t1979\tonly\t-\tSep\t18\t24:00\t0\t-\nRule\tIran\t1980\tonly\t-\tMar\t20\t24:00\t1:00\t-\nRule\tIran\t1980\tonly\t-\tSep\t22\t24:00\t0\t-\nRule\tIran\t1991\tonly\t-\tMay\t 2\t24:00\t1:00\t-\nRule\tIran\t1992\t1995\t-\tMar\t21\t24:00\t1:00\t-\nRule\tIran\t1991\t1995\t-\tSep\t21\t24:00\t0\t-\nRule\tIran\t1996\tonly\t-\tMar\t20\t24:00\t1:00\t-\nRule\tIran\t1996\tonly\t-\tSep\t20\t24:00\t0\t-\nRule\tIran\t1997\t1999\t-\tMar\t21\t24:00\t1:00\t-\nRule\tIran\t1997\t1999\t-\tSep\t21\t24:00\t0\t-\nRule\tIran\t2000\tonly\t-\tMar\t20\t24:00\t1:00\t-\nRule\tIran\t2000\tonly\t-\tSep\t20\t24:00\t0\t-\nRule\tIran\t2001\t2003\t-\tMar\t21\t24:00\t1:00\t-\nRule\tIran\t2001\t2003\t-\tSep\t21\t24:00\t0\t-\nRule\tIran\t2004\tonly\t-\tMar\t20\t24:00\t1:00\t-\nRule\tIran\t2004\tonly\t-\tSep\t20\t24:00\t0\t-\nRule\tIran\t2005\tonly\t-\tMar\t21\t24:00\t1:00\t-\nRule\tIran\t2005\tonly\t-\tSep\t21\t24:00\t0\t-\nRule\tIran\t2008\tonly\t-\tMar\t20\t24:00\t1:00\t-\nRule\tIran\t2008\tonly\t-\tSep\t20\t24:00\t0\t-\nRule\tIran\t2009\t2011\t-\tMar\t21\t24:00\t1:00\t-\nRule\tIran\t2009\t2011\t-\tSep\t21\t24:00\t0\t-\nRule\tIran\t2012\tonly\t-\tMar\t20\t24:00\t1:00\t-\nRule\tIran\t2012\tonly\t-\tSep\t20\t24:00\t0\t-\nRule\tIran\t2013\t2015\t-\tMar\t21\t24:00\t1:00\t-\nRule\tIran\t2013\t2015\t-\tSep\t21\t24:00\t0\t-\nRule\tIran\t2016\tonly\t-\tMar\t20\t24:00\t1:00\t-\nRule\tIran\t2016\tonly\t-\tSep\t20\t24:00\t0\t-\nRule\tIran\t2017\t2019\t-\tMar\t21\t24:00\t1:00\t-\nRule\tIran\t2017\t2019\t-\tSep\t21\t24:00\t0\t-\nRule\tIran\t2020\tonly\t-\tMar\t20\t24:00\t1:00\t-\nRule\tIran\t2020\tonly\t-\tSep\t20\t24:00\t0\t-\nRule\tIran\t2021\t2022\t-\tMar\t21\t24:00\t1:00\t-\nRule\tIran\t2021\t2022\t-\tSep\t21\t24:00\t0\t-\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAsia/Tehran\t3:25:44\t-\tLMT\t1916\n\t\t\t3:25:44\t-\tTMT\t1935 Jun 13 # Tehran Mean Time\n\t\t\t3:30\tIran\t%z\t1977 Oct 20 24:00\n\t\t\t4:00\tIran\t%z\t1979\n\t\t\t3:30\tIran\t%z\n\n\n# Iraq\n#\n# From Jonathan Lennox (2000-06-12):\n# An article in this week's Economist (\"Inside the Saddam-free zone\", p. 50 in\n# the U.S. edition) on the Iraqi Kurds contains a paragraph:\n# \"The three northern provinces ... switched their clocks this spring and\n# are an hour ahead of Baghdad.\"\n#\n# But Rives McDow (2000-06-18) quotes a contact in Iraqi-Kurdistan as follows:\n# In the past, some Kurdish nationalists, as a protest to the Iraqi\n# Government, did not adhere to daylight saving time.  They referred\n# to daylight saving as Saddam time.  But, as of today, the time zone\n# in Iraqi-Kurdistan is on standard time with Baghdad, Iraq.\n#\n# So we'll ignore the Economist's claim.\n\n# From Steffen Thorsen (2008-03-10):\n# The cabinet in Iraq abolished DST last week, according to the following\n# news sources (in Arabic):\n# http://www.aljeeran.net/wesima_articles/news-20080305-98602.html\n# http://www.aswataliraq.info/look/article.tpl?id=2047&IdLanguage=17&IdPublication=4&NrArticle=71743&NrIssue=1&NrSection=10\n#\n# We have published a short article in English about the change:\n# https://www.timeanddate.com/news/time/iraq-dumps-daylight-saving.html\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tIraq\t1982\tonly\t-\tMay\t1\t0:00\t1:00\t-\nRule\tIraq\t1982\t1984\t-\tOct\t1\t0:00\t0\t-\nRule\tIraq\t1983\tonly\t-\tMar\t31\t0:00\t1:00\t-\nRule\tIraq\t1984\t1985\t-\tApr\t1\t0:00\t1:00\t-\nRule\tIraq\t1985\t1990\t-\tSep\tlastSun\t1:00s\t0\t-\nRule\tIraq\t1986\t1990\t-\tMar\tlastSun\t1:00s\t1:00\t-\n# IATA SSIM (1991/1996) says Apr 1 12:01am UTC; guess the ':01' is a typo.\n# Shanks & Pottenger say Iraq did not observe DST 1992/1997; ignore this.\n#\nRule\tIraq\t1991\t2007\t-\tApr\t 1\t3:00s\t1:00\t-\nRule\tIraq\t1991\t2007\t-\tOct\t 1\t3:00s\t0\t-\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAsia/Baghdad\t2:57:40\t-\tLMT\t1890\n\t\t\t2:57:36\t-\tBMT\t1918     # Baghdad Mean Time?\n\t\t\t3:00\t-\t%z\t1982 May\n\t\t\t3:00\tIraq\t%z\n\n\n###############################################################################\n\n# Israel\n\n# For more info about the motivation for DST in Israel, see:\n# Barak Y. Israel's Daylight Saving Time controversy. Israel Affairs.\n# 2020-08-11. https://doi.org/10.1080/13537121.2020.1806564\n\n# From Ephraim Silverberg (2001-01-11):\n#\n# I coined \"IST/IDT\" circa 1988.  Until then there were three\n# different abbreviations in use:\n#\n# JST  Jerusalem Standard Time [Danny Braniss, Hebrew University]\n# IZT  Israel Zonal (sic) Time [Prof. Haim Papo, Technion]\n# EEST Eastern Europe Standard Time [used by almost everyone else]\n#\n# Since timezones should be called by country and not capital cities,\n# I ruled out JST.  As Israel is in Asia Minor and not Eastern Europe,\n# EEST was equally unacceptable.  Since \"zonal\" was not compatible with\n# any other timezone abbreviation, I felt that 'IST' was the way to go\n# and, indeed, it has received almost universal acceptance in timezone\n# settings in Israeli computers.\n#\n# In any case, I am happy to share timezone abbreviations with India,\n# high on my favorite-country list (and not only because my wife's\n# family is from India).\n\n# From P Chan (2020-10-27), with corrections:\n#\n# 1940-1946 Supplement No. 2 to the Palestine Gazette\n# # issue page  Order No.   dated      start        end         note\n# 1 1010  729  67 of 1940 1940-05-22 1940-05-31* 1940-09-30* revoked by #2\n# 2 1013  758  73 of 1940 1940-05-31 1940-05-31  1940-09-30\n# 3 1055 1574 196 of 1940 1940-11-06 1940-11-16  1940-12-31\n# 4 1066 1811 208 of 1940 1940-12-17 1940-12-31  1941-12-31\n# 5 1156 1967 116 of 1941 1941-12-16 1941-12-31  1942-12-31* amended by #6\n# 6 1228 1608  86 of 1942 1942-10-14 1941-12-31  1942-10-31\n# 7 1256  279  21 of 1943 1943-03-18 1943-03-31  1943-10-31\n# 8 1323  249  19 of 1944 1944-03-13 1944-03-31  1944-10-31\n# 9 1402  328  20 of 1945 1945-04-05 1945-04-15  1945-10-31\n#10 1487  596  14 of 1946 1946-04-04 1946-04-15  1946-10-31\n#\n# 1948 Iton Rishmi (Official Gazette of the Provisional Government)\n# #    issue    page   dated      start       end\n#11 2             7 1948-05-20 1948-05-22 1948-10-31*\n#\t^This moved timezone to +04, replaced by #12 from 1948-08-31 24:00 GMT.\n#12 17 (Annex B) 84 1948-08-22 1948-08-31 1948-10-31\n#\n# 1949-2000 Kovetz HaTakanot (Collection of Regulations)\n# # issue page  dated      start       end            note\n#13    6  133 1949-03-23 1949-04-30  1949-10-31\n#14   80  755 1950-03-17 1950-04-15  1950-09-14\n#15  164  782 1951-03-22 1951-03-31  1951-09-29* amended by #16\n#16  206 1940 1951-09-23 ----------  1951-10-22* amended by #17\n#17  212   78 1951-10-19 ----------  1951-11-10\n#18  254  652 1952-03-03 1952-04-19  1952-09-27* amended by #19\n#19  300   11 1952-09-15 ----------  1952-10-18\n#20  348  817 1953-03-03 1953-04-11  1953-09-12\n#21  420  385 1954-02-17 1954-06-12  1954-09-11\n#22  497  548 1955-01-14 1955-06-11  1955-09-10\n#23  591  608 1956-03-12 1956-06-02  1956-09-29\n#24  680  957 1957-02-08 1957-04-27  1957-09-21\n#25 3192 1418 1974-06-28 1974-07-06  1974-10-12\n#26 3322 1389 1975-04-03 1975-04-19  1975-08-30\n#27 4146 2089 1980-07-15 1980-08-02  1980-09-13\n#28 4604 1081 1984-02-22 1984-05-05* 1984-08-25* revoked by #29\n#29 4619 1312 1984-04-06 1984-05-05  1984-08-25\n#30 4744  475 1984-12-23 1985-04-13  1985-09-14* amended by #31\n#31 4851 1848 1985-08-18 ----------  1985-08-31\n#32 4932  899 1986-04-22 1986-05-17  1986-09-06\n#33 5013  580 1987-02-15 1987-04-18* 1987-08-22* revoked by #34\n#34 5021  744 1987-03-30 1987-04-14  1987-09-12\n#35 5096  659 1988-02-14 1988-04-09  1988-09-03\n#36 5167  514 1989-02-03 1989-04-29  1989-09-02\n#37 5248  375 1990-01-23 1990-03-24  1990-08-25\n#38 5335  612 1991-02-10 1991-03-09* 1991-08-31\t amended by #39\n#\t\t\t 1992-03-28  1992-09-05\n#39 5339  709 1991-03-04 1991-03-23  ----------\n#40 5506  503 1993-02-18 1993-04-02  1993-09-05\n#\t\t\t 1994-04-01  1994-08-28\n#\t\t\t 1995-03-31  1995-09-03\n#41 5731  438 1996-01-01 1996-03-14  1996-09-15\n#\t\t\t 1997-03-13* 1997-09-18* overridden by 1997 Temp Prov\n#\t\t\t 1998-03-19* 1998-09-17* revoked by #42\n#42 5853 1243 1997-09-18 1998-03-19  1998-09-05\n#43 5937   77 1998-10-18 1999-04-02  1999-09-03\n#\t\t\t 2000-04-14* 2000-09-15* revoked by #44\n#\t\t\t 2001-04-13* 2001-09-14* revoked by #44\n#44 6024   39 2000-03-14 2000-04-14  2000-10-22* overridden by 2000 Temp Prov\n#\t\t\t 2001-04-06* 2001-10-10* overridden by 2000 Temp Prov\n#\t\t\t 2002-03-29* 2002-10-29* overridden by 2000 Temp Prov\n#\n# These are laws enacted by the Knesset since the Minister could only alter the\n# transition dates at least six months in advanced under the 1992 Law.\n#\t\t\t\tdated\t\tstart\t\tend\n# 1997 Temporary Provisions\t1997-03-06\t1997-03-20\t1997-09-13\n# 2000 Temporary Provisions\t2000-07-28\t----------\t2000-10-06\n#\t\t\t\t\t\t2001-04-09\t2001-09-24\n#\t\t\t\t\t\t2002-03-29\t2002-10-07\n#\t\t\t\t\t\t2003-03-28\t2003-10-03\n#\t\t\t\t\t\t2004-04-07\t2004-09-22\n# Note:\n# Transition times in 1940-1957 (#1-#24) were midnight GMT,\n# in 1974-1998 (#25-#42 and the 1997 Temporary Provisions) were midnight,\n# in 1999-April 2000 (#43,#44) were 02:00,\n# in the 2000 Temporary Provisions were 01:00.\n#\n# -----------------------------------------------------------------------------\n# Links:\n# 1 https://findit.library.yale.edu/images_layout/view?parentoid=15537490&increment=687\n# 2 https://findit.library.yale.edu/images_layout/view?parentoid=15537490&increment=716\n# 3 https://findit.library.yale.edu/images_layout/view?parentoid=15537491&increment=721\n# 4 https://findit.library.yale.edu/images_layout/view?parentoid=15537491&increment=958\n# 5 https://findit.library.yale.edu/images_layout/view?parentoid=15537502&increment=558\n# 6 https://findit.library.yale.edu/images_layout/view?parentoid=15537511&increment=105\n# 7 https://findit.library.yale.edu/images_layout/view?parentoid=15537516&increment=278\n# 8 https://findit.library.yale.edu/images_layout/view?parentoid=15537522&increment=248\n# 9 https://findit.library.yale.edu/images_layout/view?parentoid=15537530&increment=329\n#10 https://findit.library.yale.edu/images_layout/view?parentoid=15537537&increment=601\n#11 https://www.nevo.co.il/law_word/law12/er-002.pdf#page=3\n#12 https://www.nevo.co.il/law_word/law12/er-017-t2.pdf#page=4\n#13 https://www.nevo.co.il/law_word/law06/tak-0006.pdf#page=3\n#14 https://www.nevo.co.il/law_word/law06/tak-0080.pdf#page=7\n#15 https://www.nevo.co.il/law_word/law06/tak-0164.pdf#page=10\n#16 https://www.nevo.co.il/law_word/law06/tak-0206.pdf#page=4\n#17 https://www.nevo.co.il/law_word/law06/tak-0212.pdf#page=2\n#18 https://www.nevo.co.il/law_word/law06/tak-0254.pdf#page=4\n#19 https://www.nevo.co.il/law_word/law06/tak-0300.pdf#page=5\n#20 https://www.nevo.co.il/law_word/law06/tak-0348.pdf#page=3\n#21 https://www.nevo.co.il/law_word/law06/tak-0420.pdf#page=5\n#22 https://www.nevo.co.il/law_word/law06/tak-0497.pdf#page=10\n#23 https://www.nevo.co.il/law_word/law06/tak-0591.pdf#page=6\n#24 https://www.nevo.co.il/law_word/law06/tak-0680.pdf#page=3\n#25 https://www.nevo.co.il/law_word/law06/tak-3192.pdf#page=2\n#26 https://www.nevo.co.il/law_word/law06/tak-3322.pdf#page=5\n#27 https://www.nevo.co.il/law_word/law06/tak-4146.pdf#page=2\n#28 https://www.nevo.co.il/law_word/law06/tak-4604.pdf#page=7\n#29 https://www.nevo.co.il/law_word/law06/tak-4619.pdf#page=2\n#30 https://www.nevo.co.il/law_word/law06/tak-4744.pdf#page=11\n#31 https://www.nevo.co.il/law_word/law06/tak-4851.pdf#page=2\n#32 https://www.nevo.co.il/law_word/law06/tak-4932.pdf#page=19\n#33 https://www.nevo.co.il/law_word/law06/tak-5013.pdf#page=8\n#34 https://www.nevo.co.il/law_word/law06/tak-5021.pdf#page=8\n#35 https://www.nevo.co.il/law_word/law06/tak-5096.pdf#page=3\n#36 https://www.nevo.co.il/law_word/law06/tak-5167.pdf#page=2\n#37 https://www.nevo.co.il/law_word/law06/tak-5248.pdf#page=7\n#38 https://www.nevo.co.il/law_word/law06/tak-5335.pdf#page=6\n#39 https://www.nevo.co.il/law_word/law06/tak-5339.pdf#page=7\n#40 https://www.nevo.co.il/law_word/law06/tak-5506.pdf#page=19\n#41 https://www.nevo.co.il/law_word/law06/tak-5731.pdf#page=2\n#42 https://www.nevo.co.il/law_word/law06/tak-5853.pdf#page=3\n#43 https://www.nevo.co.il/law_word/law06/tak-5937.pdf#page=9\n#44 https://www.nevo.co.il/law_word/law06/tak-6024.pdf#page=4\n#\n# Time Determination (Temporary Provisions) Law, 1997\n# https://www.nevo.co.il/law_html/law19/p201_003.htm\n#\n# Time Determination (Temporary Provisions) Law, 2000\n# https://www.nevo.co.il/law_html/law19/p201_004.htm\n#\n# Time Determination Law, 1992 and amendments\n# https://www.nevo.co.il/law_html/law01/p201_002.htm\n# https://main.knesset.gov.il/Activity/Legislation/Laws/Pages/LawPrimary.aspx?lawitemid=2001174\n\n# From Paul Eggert (2020-10-27):\n# Several of the midnight transitions mentioned above are ambiguous;\n# are they 00:00, 00:00s, 24:00, or 24:00s?  When resolving these ambiguities,\n# try to minimize changes from previous tzdb versions, for lack of better info.\n# Commentary from previous versions is included below, to help explain this.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tZion\t1940\tonly\t-\tMay\t31\t24:00u\t1:00\tD\nRule\tZion\t1940\tonly\t-\tSep\t30\t24:00u\t0\tS\nRule\tZion\t1940\tonly\t-\tNov\t16\t24:00u\t1:00\tD\nRule\tZion\t1942\t1946\t-\tOct\t31\t24:00u\t0\tS\nRule\tZion\t1943\t1944\t-\tMar\t31\t24:00u\t1:00\tD\nRule\tZion\t1945\t1946\t-\tApr\t15\t24:00u\t1:00\tD\nRule\tZion\t1948\tonly\t-\tMay\t22\t24:00u\t2:00\tDD\nRule\tZion\t1948\tonly\t-\tAug\t31\t24:00u\t1:00\tD\nRule\tZion\t1948\t1949\t-\tOct\t31\t24:00u\t0\tS\nRule\tZion\t1949\tonly\t-\tApr\t30\t24:00u\t1:00\tD\nRule\tZion\t1950\tonly\t-\tApr\t15\t24:00u\t1:00\tD\nRule\tZion\t1950\tonly\t-\tSep\t14\t24:00u\t0\tS\nRule\tZion\t1951\tonly\t-\tMar\t31\t24:00u\t1:00\tD\nRule\tZion\t1951\tonly\t-\tNov\t10\t24:00u\t0\tS\nRule\tZion\t1952\tonly\t-\tApr\t19\t24:00u\t1:00\tD\nRule\tZion\t1952\tonly\t-\tOct\t18\t24:00u\t0\tS\nRule\tZion\t1953\tonly\t-\tApr\t11\t24:00u\t1:00\tD\nRule\tZion\t1953\tonly\t-\tSep\t12\t24:00u\t0\tS\nRule\tZion\t1954\tonly\t-\tJun\t12\t24:00u\t1:00\tD\nRule\tZion\t1954\tonly\t-\tSep\t11\t24:00u\t0\tS\nRule\tZion\t1955\tonly\t-\tJun\t11\t24:00u\t1:00\tD\nRule\tZion\t1955\tonly\t-\tSep\t10\t24:00u\t0\tS\nRule\tZion\t1956\tonly\t-\tJun\t 2\t24:00u\t1:00\tD\nRule\tZion\t1956\tonly\t-\tSep\t29\t24:00u\t0\tS\nRule\tZion\t1957\tonly\t-\tApr\t27\t24:00u\t1:00\tD\nRule\tZion\t1957\tonly\t-\tSep\t21\t24:00u\t0\tS\nRule\tZion\t1974\tonly\t-\tJul\t 6\t24:00\t1:00\tD\nRule\tZion\t1974\tonly\t-\tOct\t12\t24:00\t0\tS\nRule\tZion\t1975\tonly\t-\tApr\t19\t24:00\t1:00\tD\nRule\tZion\t1975\tonly\t-\tAug\t30\t24:00\t0\tS\n\n# From Alois Treindl (2019-03-06):\n# http://www.moin.gov.il/Documents/שעון%20קיץ/clock-50-years-7-2014.pdf\n# From Isaac Starkman (2019-03-06):\n# Summer time was in that period in 1980 and 1984, see\n# https://www.ynet.co.il/articles/0,7340,L-3951073,00.html\n# You can of course read it in translation.\n# I checked the local newspapers for that years.\n# It started on midnight and end at 01.00 am.\n# From Paul Eggert (2019-03-06):\n# Also see this thread about the moin.gov.il URL:\n# https://mm.icann.org/pipermail/tz/2018-November/027194.html\nRule\tZion\t1980\tonly\t-\tAug\t 2\t24:00s\t1:00\tD\nRule\tZion\t1980\tonly\t-\tSep\t13\t24:00s\t0\tS\nRule\tZion\t1984\tonly\t-\tMay\t 5\t24:00s\t1:00\tD\nRule\tZion\t1984\tonly\t-\tAug\t25\t24:00s\t0\tS\n\nRule\tZion\t1985\tonly\t-\tApr\t13\t24:00\t1:00\tD\nRule\tZion\t1985\tonly\t-\tAug\t31\t24:00\t0\tS\nRule\tZion\t1986\tonly\t-\tMay\t17\t24:00\t1:00\tD\nRule\tZion\t1986\tonly\t-\tSep\t 6\t24:00\t0\tS\nRule\tZion\t1987\tonly\t-\tApr\t14\t24:00\t1:00\tD\nRule\tZion\t1987\tonly\t-\tSep\t12\t24:00\t0\tS\n\n# From Avigdor Finkelstein (2014-03-05):\n# I check the Parliament (Knesset) records and there it's stated that the\n# [1988] transition should take place on Saturday night, when the Sabbath\n# ends and changes to Sunday.\nRule\tZion\t1988\tonly\t-\tApr\t 9\t24:00\t1:00\tD\nRule\tZion\t1988\tonly\t-\tSep\t 3\t24:00\t0\tS\n\n# From Ephraim Silverberg\n# (1997-03-04, 1998-03-16, 1998-12-28, 2000-01-17, 2000-07-25, 2004-12-22,\n# and 2005-02-17):\n\n# According to the Office of the Secretary General of the Ministry of\n# Interior, there is NO set rule for Daylight-Savings/Standard time changes.\n# One thing is entrenched in law, however: that there must be at least 150\n# days of daylight savings time annually.  From 1993-1998, the change to\n# daylight savings time was on a Friday morning from midnight IST to\n# 1 a.m IDT; up until 1998, the change back to standard time was on a\n# Saturday night from midnight daylight savings time to 11 p.m. standard\n# time.  1996 is an exception to this rule where the change back to standard\n# time took place on Sunday night instead of Saturday night to avoid\n# conflicts with the Jewish New Year.  In 1999, the change to\n# daylight savings time was still on a Friday morning but from\n# 2 a.m. IST to 3 a.m. IDT; furthermore, the change back to standard time\n# was also on a Friday morning from 2 a.m. IDT to 1 a.m. IST for\n# 1999 only.  In the year 2000, the change to daylight savings time was\n# similar to 1999, but although the change back will be on a Friday, it\n# will take place from 1 a.m. IDT to midnight IST.  Starting in 2001, all\n# changes to/from will take place at 1 a.m. old time, but now there is no\n# rule as to what day of the week it will take place in as the start date\n# (except in 2003) is the night after the Passover Seder (i.e. the eve\n# of the 16th of Nisan in the lunar Hebrew calendar) and the end date\n# (except in 2002) is three nights before Yom Kippur [Day of Atonement]\n# (the eve of the 7th of Tishrei in the lunar Hebrew calendar).\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tZion\t1989\tonly\t-\tApr\t29\t24:00\t1:00\tD\nRule\tZion\t1989\tonly\t-\tSep\t 2\t24:00\t0\tS\nRule\tZion\t1990\tonly\t-\tMar\t24\t24:00\t1:00\tD\nRule\tZion\t1990\tonly\t-\tAug\t25\t24:00\t0\tS\nRule\tZion\t1991\tonly\t-\tMar\t23\t24:00\t1:00\tD\nRule\tZion\t1991\tonly\t-\tAug\t31\t24:00\t0\tS\nRule\tZion\t1992\tonly\t-\tMar\t28\t24:00\t1:00\tD\nRule\tZion\t1992\tonly\t-\tSep\t 5\t24:00\t0\tS\nRule\tZion\t1993\tonly\t-\tApr\t 2\t0:00\t1:00\tD\nRule\tZion\t1993\tonly\t-\tSep\t 5\t0:00\t0\tS\n\n# The dates for 1994-1995 were obtained from Office of the Spokeswoman for the\n# Ministry of Interior, Jerusalem, Israel.  The spokeswoman can be reached by\n# calling the office directly at 972-2-6701447 or 972-2-6701448.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tZion\t1994\tonly\t-\tApr\t 1\t0:00\t1:00\tD\nRule\tZion\t1994\tonly\t-\tAug\t28\t0:00\t0\tS\nRule\tZion\t1995\tonly\t-\tMar\t31\t0:00\t1:00\tD\nRule\tZion\t1995\tonly\t-\tSep\t 3\t0:00\t0\tS\n\n# The dates for 1996 were determined by the Minister of Interior of the\n# time, Haim Ramon.  The official announcement regarding 1996-1998\n# (with the dates for 1997-1998 no longer being relevant) can be viewed at:\n#\n#   ftp://ftp.cs.huji.ac.il/pub/tz/announcements/1996-1998.ramon.ps.gz\n#\n# The dates for 1997-1998 were altered by his successor, Rabbi Eli Suissa.\n#\n# The official announcements for the years 1997-1999 can be viewed at:\n#\n#   ftp://ftp.cs.huji.ac.il/pub/tz/announcements/YYYY.ps.gz\n#\n#       where YYYY is the relevant year.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tZion\t1996\tonly\t-\tMar\t14\t24:00\t1:00\tD\nRule\tZion\t1996\tonly\t-\tSep\t15\t24:00\t0\tS\nRule\tZion\t1997\tonly\t-\tMar\t20\t24:00\t1:00\tD\nRule\tZion\t1997\tonly\t-\tSep\t13\t24:00\t0\tS\nRule\tZion\t1998\tonly\t-\tMar\t20\t0:00\t1:00\tD\nRule\tZion\t1998\tonly\t-\tSep\t 6\t0:00\t0\tS\nRule\tZion\t1999\tonly\t-\tApr\t 2\t2:00\t1:00\tD\nRule\tZion\t1999\tonly\t-\tSep\t 3\t2:00\t0\tS\n\n# The Knesset Interior Committee has changed the dates for 2000 for\n# the third time in just over a year and have set new dates for the\n# years 2001-2004 as well.\n#\n# The official announcement for the start date of 2000 can be viewed at:\n#\n#\tftp://ftp.cs.huji.ac.il/pub/tz/announcements/2000-start.ps.gz\n#\n# The official announcement for the end date of 2000 and the dates\n# for the years 2001-2004 can be viewed at:\n#\n#\tftp://ftp.cs.huji.ac.il/pub/tz/announcements/2000-2004.ps.gz\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tZion\t2000\tonly\t-\tApr\t14\t2:00\t1:00\tD\nRule\tZion\t2000\tonly\t-\tOct\t 6\t1:00\t0\tS\nRule\tZion\t2001\tonly\t-\tApr\t 9\t1:00\t1:00\tD\nRule\tZion\t2001\tonly\t-\tSep\t24\t1:00\t0\tS\nRule\tZion\t2002\tonly\t-\tMar\t29\t1:00\t1:00\tD\nRule\tZion\t2002\tonly\t-\tOct\t 7\t1:00\t0\tS\nRule\tZion\t2003\tonly\t-\tMar\t28\t1:00\t1:00\tD\nRule\tZion\t2003\tonly\t-\tOct\t 3\t1:00\t0\tS\nRule\tZion\t2004\tonly\t-\tApr\t 7\t1:00\t1:00\tD\nRule\tZion\t2004\tonly\t-\tSep\t22\t1:00\t0\tS\n\n# The proposed law agreed upon by the Knesset Interior Committee on\n# 2005-02-14 is that, for 2005 and beyond, DST starts at 02:00 the\n# last Friday before April 2nd (i.e. the last Friday in March or April\n# 1st itself if it falls on a Friday) and ends at 02:00 on the Saturday\n# night _before_ the fast of Yom Kippur.\n#\n# Those who can read Hebrew can view the announcement at:\n#\n#\tftp://ftp.cs.huji.ac.il/pub/tz/announcements/2005+beyond.ps\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tZion\t2005\t2012\t-\tApr\tFri<=1\t2:00\t1:00\tD\nRule\tZion\t2005\tonly\t-\tOct\t 9\t2:00\t0\tS\nRule\tZion\t2006\tonly\t-\tOct\t 1\t2:00\t0\tS\nRule\tZion\t2007\tonly\t-\tSep\t16\t2:00\t0\tS\nRule\tZion\t2008\tonly\t-\tOct\t 5\t2:00\t0\tS\nRule\tZion\t2009\tonly\t-\tSep\t27\t2:00\t0\tS\nRule\tZion\t2010\tonly\t-\tSep\t12\t2:00\t0\tS\nRule\tZion\t2011\tonly\t-\tOct\t 2\t2:00\t0\tS\nRule\tZion\t2012\tonly\t-\tSep\t23\t2:00\t0\tS\n\n# From Ephraim Silverberg (2020-10-26):\n# The current time law (2013) from the State of Israel can be viewed\n# (in Hebrew) at:\n# ftp://ftp.cs.huji.ac.il/pub/tz/israel/announcements/2013+law.pdf\n# It translates to:\n# Every year, in the period from the Friday before the last Sunday in\n# the month of March at 02:00 a.m. until the last Sunday of the month\n# of October at 02:00 a.m., Israel Time will be advanced an additional\n# hour such that it will be UTC+3.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tZion\t2013\tmax\t-\tMar\tFri>=23\t2:00\t1:00\tD\nRule\tZion\t2013\tmax\t-\tOct\tlastSun\t2:00\t0\tS\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAsia/Jerusalem\t2:20:54 -\tLMT\t1880\n\t\t\t2:20:40\t-\tJMT\t1918 # Jerusalem Mean Time?\n\t\t\t2:00\tZion\tI%sT\n\n\n\n###############################################################################\n\n# Japan\n\n# '9:00' and 'JST' is from Guy Harris.\n\n# From Paul Eggert (2020-01-19):\n# Starting in the 7th century, Japan generally followed an ancient Chinese\n# timekeeping system that divided night and day into six hours each,\n# with hour length depending on season.  In 1873 the government\n# started requiring the use of a Western style 24-hour clock.  See:\n# Yulia Frumer, \"Making Time: Astronomical Time Measurement in Tokugawa Japan\"\n# <https://www.worldcat.org/oclc/1043907065>.  As the tzdb code and\n# data support only 24-hour clocks, its tables model timestamps before\n# 1873 using Western-style local mean time.\n\n# From Hideyuki Suzuki (1998-11-09):\n# 'Tokyo' usually stands for the former location of Tokyo Astronomical\n# Observatory: 139° 44' 40.90\" E (9h 18m 58.727s), 35° 39' 16.0\" N.\n# This data is from 'Rika Nenpyou (Chronological Scientific Tables) 1996'\n# edited by National Astronomical Observatory of Japan....\n# JST (Japan Standard Time) has been used since 1888-01-01 00:00 (JST).\n# The law is enacted on 1886-07-07.\n\n# From Hideyuki Suzuki (1998-11-16):\n# The ordinance No. 51 (1886) established \"standard time\" in Japan,\n# which stands for the time on 135° E.\n# In the ordinance No. 167 (1895), \"standard time\" was renamed to \"central\n# standard time\".  And the same ordinance also established \"western standard\n# time\", which stands for the time on 120° E....  But \"western standard\n# time\" was abolished in the ordinance No. 529 (1937).  In the ordinance No.\n# 167, there is no mention regarding for what place western standard time is\n# standard....\n#\n# I wrote \"ordinance\" above, but I don't know how to translate.\n# In Japanese it's \"chokurei\", which means ordinance from emperor.\n\n# From Yu-Cheng Chuang (2013-07-12):\n# ...the Meiji Emperor announced Ordinance No. 167 of Meiji Year 28 \"The clause\n# about standard time\" ... The adoption began from Jan 1, 1896.\n# https://ja.wikisource.org/wiki/標準時ニ關スル件_(公布時)\n#\n# ...the Showa Emperor announced Ordinance No. 529 of Showa Year 12 ... which\n# means the whole Japan territory, including later occupations, adopt Japan\n# Central Time (UT+9). The adoption began on Oct 1, 1937.\n# https://ja.wikisource.org/wiki/明治二十八年勅令第百六十七號標準時ニ關スル件中改正ノ件\n\n# From Paul Eggert (1995-03-06):\n# Today's _Asahi Evening News_ (page 4) reports that Japan had\n# daylight saving between 1948 and 1951, but \"the system was discontinued\n# because the public believed it would lead to longer working hours.\"\n\n# From Mayumi Negishi in the 2005-08-10 Japan Times:\n# http://www.japantimes.co.jp/cgi-bin/getarticle.pl5?nn20050810f2.htm\n# Occupation authorities imposed daylight-saving time on Japan on\n# [1948-05-01]....  But lack of prior debate and the execution of\n# daylight-saving time just three days after the bill was passed generated\n# deep hatred of the concept....  The Diet unceremoniously passed a bill to\n# dump the unpopular system in October 1951, less than a month after the San\n# Francisco Peace Treaty was signed.  (A government poll in 1951 showed 53%\n# of the Japanese wanted to scrap daylight-saving time, as opposed to 30% who\n# wanted to keep it.)\n\n# From Takayuki Nikai (2018-01-19):\n# The source of information is Japanese law.\n# http://www.shugiin.go.jp/internet/itdb_housei.nsf/html/houritsu/00219480428029.htm\n# http://www.shugiin.go.jp/internet/itdb_housei.nsf/html/houritsu/00719500331039.htm\n# ... In summary, it is written as follows.  From 24:00 on the first Saturday\n# in May, until 0:00 on the day after the second Saturday in September.\n\n# From Phake Nick (2018-09-27):\n# [T]he webpage authored by National Astronomical Observatory of Japan\n# https://eco.mtk.nao.ac.jp/koyomi/wiki/BBFEB9EF2FB2C6BBFEB9EF.html\n# ... mentioned that using Showa 23 (year 1948) as example, 13pm of September\n# 11 in summer time will equal to 0am of September 12 in standard time.\n# It cited a document issued by the Liaison Office which briefly existed\n# during the postwar period of Japan, where the detail on implementation\n# of the summer time is described in the document.\n# https://eco.mtk.nao.ac.jp/koyomi/wiki/BBFEB9EF2FB2C6BBFEB9EFB2C6BBFEB9EFA4CEBCC2BBDCA4CBA4C4A4A4A4C6.pdf\n# The text in the document do instruct a fall back to occur at\n# September 11, 13pm in summer time, while ordinary citizens can\n# change the clock before they sleep.\n#\n# From Paul Eggert (2018-09-27):\n# This instruction is equivalent to \"Sat>=8 25:00\", so use that.  zic treats\n# it like \"Sun>=9 01:00\", which is not quite the same but is the best we can\n# do in any POSIX or C platform.  The \"25:00\" assumes zic from 2007 or later,\n# which should be safe now.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tJapan\t1948\tonly\t-\tMay\tSat>=1\t24:00\t1:00\tD\nRule\tJapan\t1948\t1951\t-\tSep\tSat>=8\t25:00\t0\tS\nRule\tJapan\t1949\tonly\t-\tApr\tSat>=1\t24:00\t1:00\tD\nRule\tJapan\t1950\t1951\t-\tMay\tSat>=1\t24:00\t1:00\tD\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAsia/Tokyo\t9:18:59\t-\tLMT\t1887 Dec 31 15:00u\n\t\t\t9:00\tJapan\tJ%sT\n# Since 1938, all Japanese possessions have been like Asia/Tokyo,\n# except that Truk (Chuuk), Ponape (Pohnpei), and Jaluit (Kosrae) did not\n# switch from +10 to +09 until 1941-04-01; see the 'australasia' file.\n\n# Jordan\n#\n# From <http://star.arabia.com/990701/JO9.html>\n# Jordan Week (1999-07-01) via Steffen Thorsen (1999-09-09):\n# Clocks in Jordan were forwarded one hour on Wednesday at midnight,\n# in accordance with the government's decision to implement summer time\n# all year round.\n#\n# From <http://star.arabia.com/990930/JO9.html>\n# Jordan Week (1999-09-30) via Steffen Thorsen (1999-11-09):\n# Winter time starts today Thursday, 30 September. Clocks will be turned back\n# by one hour.  This is the latest government decision and it's final!\n# The decision was taken because of the increase in working hours in\n# government's departments from six to seven hours.\n#\n# From Paul Eggert (2005-11-22):\n# Starting 2003 transitions are from Steffen Thorsen's web site timeanddate.com.\n#\n# From Steffen Thorsen (2005-11-23):\n# For Jordan I have received multiple independent user reports every year\n# about DST end dates, as the end-rule is different every year.\n#\n# From Steffen Thorsen (2006-10-01), after a heads-up from Hilal Malawi:\n# http://www.petranews.gov.jo/nepras/2006/Sep/05/4000.htm\n# \"Jordan will switch to winter time on Friday, October 27\".\n#\n\n# From Steffen Thorsen (2009-04-02):\n# This single one might be good enough, (2009-03-24, Arabic):\n# http://petra.gov.jo/Artical.aspx?Lng=2&Section=8&Artical=95279\n#\n# Google's translation:\n#\n# > The Council of Ministers decided in 2002 to adopt the principle of timely\n# > submission of the summer at 60 minutes as of midnight on the last Thursday\n# > of the month of March of each year.\n#\n# So - this means the midnight between Thursday and Friday since 2002.\n\n# From Arthur David Olson (2009-04-06):\n# We still have Jordan switching to DST on Thursdays in 2000 and 2001.\n\n# From Steffen Thorsen (2012-10-25):\n# Yesterday the government in Jordan announced that they will not\n# switch back to standard time this winter, so the will stay on DST\n# until about the same time next year (at least).\n# http://www.petra.gov.jo/Public_News/Nws_NewsDetails.aspx?NewsID=88950\n\n# From Steffen Thorsen (2013-12-11):\n# Jordan Times and other sources say that Jordan is going back to\n# UTC+2 on 2013-12-19 at midnight:\n# http://jordantimes.com/govt-decides-to-switch-back-to-wintertime\n# Official, in Arabic:\n# http://www.petra.gov.jo/public_news/Nws_NewsDetails.aspx?Menu_ID=&Site_Id=2&lang=1&NewsID=133230&CatID=14\n# ... Our background/permalink about it\n# https://www.timeanddate.com/news/time/jordan-reverses-dst-decision.html\n# ...\n# http://www.petra.gov.jo/Public_News/Nws_NewsDetails.aspx?lang=2&site_id=1&NewsID=133313&Type=P\n# ... says midnight for the coming one and 1:00 for the ones in the future\n# (and they will use DST again next year, using the normal schedule).\n\n# From Paul Eggert (2013-12-11):\n# As Steffen suggested, consider the past 21-month experiment to be DST.\n\n# From Steffen Thorsen (2021-09-24):\n# The Jordanian Government announced yesterday that they will start DST\n# in February instead of March:\n# https://petra.gov.jo/Include/InnerPage.jsp?ID=37683&lang=en&name=en_news (English)\n# https://petra.gov.jo/Include/InnerPage.jsp?ID=189969&lang=ar&name=news (Arabic)\n# From the Arabic version, it seems to say it would be at midnight\n# (assume 24:00) on the last Thursday in February, starting from 2022.\n\n# From Issam Al-Zuwairi (2022-10-05):\n# The Council of Ministers in Jordan decided Wednesday 5th October 2022,\n# that daylight saving time (DST) will be throughout the year....\n#\n# From Brian Inglis (2022-10-06):\n# https://petra.gov.jo/Include/InnerPage.jsp?ID=45567&lang=en&name=en_news\n#\n# From Paul Eggert (2022-10-05):\n# Like Syria, model this as a transition from EEST +03 (DST) to plain +03\n# (non-DST) at the point where DST would otherwise have ended.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tJordan\t1973\tonly\t-\tJun\t6\t0:00\t1:00\tS\nRule\tJordan\t1973\t1975\t-\tOct\t1\t0:00\t0\t-\nRule\tJordan\t1974\t1977\t-\tMay\t1\t0:00\t1:00\tS\nRule\tJordan\t1976\tonly\t-\tNov\t1\t0:00\t0\t-\nRule\tJordan\t1977\tonly\t-\tOct\t1\t0:00\t0\t-\nRule\tJordan\t1978\tonly\t-\tApr\t30\t0:00\t1:00\tS\nRule\tJordan\t1978\tonly\t-\tSep\t30\t0:00\t0\t-\nRule\tJordan\t1985\tonly\t-\tApr\t1\t0:00\t1:00\tS\nRule\tJordan\t1985\tonly\t-\tOct\t1\t0:00\t0\t-\nRule\tJordan\t1986\t1988\t-\tApr\tFri>=1\t0:00\t1:00\tS\nRule\tJordan\t1986\t1990\t-\tOct\tFri>=1\t0:00\t0\t-\nRule\tJordan\t1989\tonly\t-\tMay\t8\t0:00\t1:00\tS\nRule\tJordan\t1990\tonly\t-\tApr\t27\t0:00\t1:00\tS\nRule\tJordan\t1991\tonly\t-\tApr\t17\t0:00\t1:00\tS\nRule\tJordan\t1991\tonly\t-\tSep\t27\t0:00\t0\t-\nRule\tJordan\t1992\tonly\t-\tApr\t10\t0:00\t1:00\tS\nRule\tJordan\t1992\t1993\t-\tOct\tFri>=1\t0:00\t0\t-\nRule\tJordan\t1993\t1998\t-\tApr\tFri>=1\t0:00\t1:00\tS\nRule\tJordan\t1994\tonly\t-\tSep\tFri>=15\t0:00\t0\t-\nRule\tJordan\t1995\t1998\t-\tSep\tFri>=15\t0:00s\t0\t-\nRule\tJordan\t1999\tonly\t-\tJul\t 1\t0:00s\t1:00\tS\nRule\tJordan\t1999\t2002\t-\tSep\tlastFri\t0:00s\t0\t-\nRule\tJordan\t2000\t2001\t-\tMar\tlastThu\t0:00s\t1:00\tS\nRule\tJordan\t2002\t2012\t-\tMar\tlastThu\t24:00\t1:00\tS\nRule\tJordan\t2003\tonly\t-\tOct\t24\t0:00s\t0\t-\nRule\tJordan\t2004\tonly\t-\tOct\t15\t0:00s\t0\t-\nRule\tJordan\t2005\tonly\t-\tSep\tlastFri\t0:00s\t0\t-\nRule\tJordan\t2006\t2011\t-\tOct\tlastFri\t0:00s\t0\t-\nRule\tJordan\t2013\tonly\t-\tDec\t20\t0:00\t0\t-\nRule\tJordan\t2014\t2021\t-\tMar\tlastThu\t24:00\t1:00\tS\nRule\tJordan\t2014\t2022\t-\tOct\tlastFri\t0:00s\t0\t-\nRule\tJordan\t2022\tonly\t-\tFeb\tlastThu\t24:00\t1:00\tS\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAsia/Amman\t2:23:44 -\tLMT\t1931\n\t\t\t2:00\tJordan\tEE%sT\t2022 Oct 28 0:00s\n\t\t\t3:00\t-\t%z\n\n\n# Kazakhstan\n\n# From Kazakhstan Embassy's News Bulletin No. 11\n# <http://www.kazsociety.org.uk/news/2005/03/30.htm> (2005-03-21):\n# The Government of Kazakhstan passed a resolution March 15 abolishing\n# daylight saving time citing lack of economic benefits and health\n# complications coupled with a decrease in productivity.\n#\n# From Branislav Kojic (in Astana) via Gwillim Law (2005-06-28):\n# ... what happened was that the former Kazakhstan Eastern time zone\n# was \"blended\" with the Central zone.  Therefore, Kazakhstan now has\n# two time zones, and difference between them is one hour.  The zone\n# closer to UTC is the former Western zone (probably still called the\n# same), encompassing four provinces in the west: Aqtöbe, Atyraū,\n# Mangghystaū, and West Kazakhstan.  The other zone encompasses\n# everything else....  I guess that would make Kazakhstan time zones\n# de jure UTC+5 and UTC+6 respectively.\n\n# From Stepan Golosunov (2016-03-27):\n# Review of the linked documents from http://adilet.zan.kz/\n# produced the following data for post-1991 Kazakhstan:\n#\n# 0. Act of the Cabinet of Ministers of the USSR\n# from 1991-02-04 No. 20\n# http://pravo.gov.ru/proxy/ips/?docbody=&nd=102010545\n# removed the extra hour (\"decree time\") on the territory of the USSR\n# starting with the last Sunday of March 1991.\n# It also allowed (but not mandated) Kazakh SSR, Kirghiz SSR, Tajik SSR,\n# Turkmen SSR and Uzbek SSR to not have \"summer\" time.\n#\n# The 1992-01-13 act also refers to the act of the Cabinet of Ministers\n# of the Kazakh SSR from 1991-03-20 No. 170 \"About the act of the Cabinet\n# of Ministers of the USSR from 1991-02-04 No. 20\" but I didn't found its\n# text.\n#\n# According to Izvestia newspaper No. 68 (23334) from 1991-03-20\n# -- page 6; available at http://libinfo.org/newsr/newsr2574.djvu via\n# http://libinfo.org/index.php?id=58564 -- on 1991-03-31 at 2:00 during\n# transition to \"summer\" time:\n# Republic of Georgia, Latvian SSR, Lithuanian SSR, SSR Moldova,\n# Estonian SSR; Komi ASSR; Kaliningrad oblast; Nenets autonomous okrug\n# were to move clocks 1 hour forward.\n# Kazakh SSR (excluding Uralsk oblast); Republic of Kyrgyzstan, Tajik\n# SSR; Andijan, Jizzakh, Namangan, Sirdarya, Tashkent, Fergana oblasts\n# of the Uzbek SSR were to move clocks 1 hour backwards.\n# Other territories were to not move clocks.\n# When the \"summer\" time would end on 1991-09-29, clocks were to be\n# moved 1 hour backwards on the territory of the USSR excluding\n# Kazakhstan, Kirghizia, Uzbekistan, Turkmenia, Tajikistan.\n#\n# Apparently there were last minute changes. Apparently Kazakh act No. 170\n# was one of such changes.\n#\n# https://ru.wikipedia.org/wiki/Декретное_время\n# claims that Sovetskaya Rossiya newspaper on 1991-03-29 published that\n# Nenets autonomous okrug, Komi and Kazakhstan (excluding Uralsk oblast)\n# were to not move clocks and Uralsk oblast was to move clocks\n# forward; on 1991-09-29 Kazakhstan was to move clocks backwards.\n# (Probably there were changes even after that publication. There is an\n# article claiming that Kaliningrad oblast decided on 1991-03-29 to not\n# move clocks.)\n#\n# This implies that on 1991-03-31 Asia/Oral remained on +04/+05 while\n# the rest of Kazakhstan switched from +06/+07 to +05/06 or from +05/06\n# to +04/+05. It's unclear how Qyzylorda oblast moved into the fifth\n# time belt. (By switching from +04/+05 to +05/+06 on 1991-09-29?) ...\n#\n# 1. Act of the Cabinet of Ministers of the Republic of Kazakhstan\n# from 1992-01-13 No. 28\n# http://adilet.zan.kz/rus/docs/P920000028_\n# (text includes modification from the 1996 act)\n# introduced new rules for calculation of time, mirroring Russian\n# 1992-01-08 act.  It specified that time would be calculated\n# according to time belts plus extra hour (\"decree time\"), moved clocks\n# on the whole territory of Kazakhstan 1 hour forward on 1992-01-19 at\n# 2:00, specified DST rules.  It acknowledged that Kazakhstan was\n# located in the fourth and the fifth time belts and specified the\n# border between them to be located east of Qostanay and Aktyubinsk\n# oblasts (notably including Turgai and Qyzylorda oblasts into the fifth\n# time belt).\n#\n# This means switch on 1992-01-19 at 2:00 from +04/+05 to +05/+06 for\n# Asia/Aqtau, Asia/Aqtobe, Asia/Oral, Atyraū and Qostanay oblasts; from\n# +05/+06 to +06/+07 for Asia/Almaty and Asia/Qyzylorda (and Arkalyk)....\n#\n# 2. Act of the Cabinet of Ministers of the Republic of Kazakhstan\n# from 1992-03-27 No. 284\n# http://adilet.zan.kz/rus/docs/P920000284_\n# cancels extra hour (\"decree time\") for Uralsk and Qyzylorda oblasts\n# since the last Sunday of March 1992, while keeping them in the fourth\n# and the fifth time belts respectively.\n#\n# 3. Order of the Prime Minister of the Republic of Kazakhstan\n# from 1994-09-23 No. 384\n# http://adilet.zan.kz/rus/docs/R940000384_\n# cancels the extra hour (\"decree time\") on the territory of Mangghystaū\n# oblast since the last Sunday of September 1994 (saying that time on\n# the territory would correspond to the third time belt as a\n# result)....\n#\n# 4. Act of the Government of the Republic of Kazakhstan\n# from 1996-05-08 No. 575\n# http://adilet.zan.kz/rus/docs/P960000575_\n# amends the 1992-01-13 act to end summer time in October instead\n# of September, mirroring identical Russian change from 1996-04-23 act.\n#\n# 5. Act of the Government of the Republic of Kazakhstan\n# from 1999-03-26 No. 305\n# http://adilet.zan.kz/rus/docs/P990000305_\n# cancels the extra hour (\"decree time\") for Atyraū oblast since the\n# last Sunday of March 1999 while retaining the oblast in the fourth\n# time belt.\n#\n# This means change from +05/+06 to +04/+05....\n#\n# 6. Act of the Government of the Republic of Kazakhstan\n# from 2000-11-23 No. 1749\n# http://adilet.zan.kz/rus/archive/docs/P000001749_/23.11.2000\n# replaces the previous five documents.\n#\n# The only changes I noticed are in definition of the border between the\n# fourth and the fifth time belts.  They account for changes in spelling\n# and administrative division (splitting of Turgai oblast in 1997\n# probably changed time in territories incorporated into Qostanay oblast\n# (including Arkalyk) from +06/+07 to +05/+06) and move Qyzylorda oblast\n# from being in the fifth time belt and not using decree time into the\n# fourth time belt (no change in practice).\n#\n# 7. Act of the Government of the Republic of Kazakhstan\n# from 2003-12-29 No. 1342\n# http://adilet.zan.kz/rus/docs/P030001342_\n# modified the 2000-11-23 act.  No relevant changes, apparently.\n#\n# 8. Act of the Government of the Republic of Kazakhstan\n# from 2004-07-20 No. 775\n# http://adilet.zan.kz/rus/archive/docs/P040000775_/20.07.2004\n# modified the 2000-11-23 act to move Qostanay and Qyzylorda oblasts into\n# the fifth time belt and add Aktobe oblast to the list of regions not\n# using extra hour (\"decree time\"), leaving Kazakhstan with only 2 time\n# zones (+04/+05 and +06/+07).  The changes were to be implemented\n# during DST transitions in 2004 and 2005 but the acts got radically\n# amended before implementation happened.\n#\n# 9. Act of the Government of the Republic of Kazakhstan\n# from 2004-09-15 No. 1059\n# http://adilet.zan.kz/rus/docs/P040001059_\n# modified the 2000-11-23 act to remove exceptions from the \"decree time\"\n# (leaving Kazakhstan in +05/+06 and +06/+07 zones), amended the\n# 2004-07-20 act to implement changes for Atyraū, West Kazakhstan,\n# Qostanay, Qyzylorda and Mangghystaū oblasts by not moving clocks\n# during the 2004 transition to \"winter\" time.\n#\n# This means transition from +04/+05 to +05/+06 for Atyraū oblast (no\n# zone currently), Asia/Oral, Asia/Aqtau and transition from +05/+06 to\n# +06/+07 for Qostanay oblast (Qostanay and Arkalyk, no zones currently)\n# and Asia/Qyzylorda on 2004-10-31 at 3:00....\n#\n# 10. Act of the Government of the Republic of Kazakhstan\n# from 2005-03-15 No. 231\n# http://adilet.zan.kz/rus/docs/P050000231_\n# removes DST provisions from the 2000-11-23 act, removes most of the\n# (already implemented) provisions from the 2004-07-20 and 2004-09-15\n# acts, comes into effect 10 days after official publication.\n# The only practical effect seems to be the abolition of the summer\n# time.\n#\n# Unamended version of the act of the Government of the Russian Federation\n# No. 23 from 1992-01-08 [See 'europe' file for details].\n# Kazakh 1992-01-13 act appears to provide the same rules and 1992-03-27\n# act was to be enacted on the last Sunday of March 1992.\n\n# From Stepan Golosunov (2016-11-08):\n# Turgai reorganization should affect only southern part of Qostanay\n# oblast.  Which should probably be separated into Asia/Arkalyk zone.\n# (There were also 1970, 1988 and 1990 Turgai oblast reorganizations\n# according to wikipedia.)\n#\n# [For Qostanay] http://www.ng.kz/gazeta/195/hranit/\n# suggests that clocks were to be moved 40 minutes backwards on\n# 1920-01-01 to the fourth time belt.  But I do not understand\n# how that could happen....\n#\n# [For Atyrau and Oral] 1919 decree\n# (http://www.worldtimezone.com/dst_news/dst_news_russia-1919-02-08.html\n# and in Byalokoz) lists Ural river (plus 10 versts on its left bank) in\n# the third time belt (before 1930 this means +03).\n\n# From Alexander Konzurovski (2018-12-20):\n# (Asia/Qyzylorda) is changing its time zone from UTC+6 to UTC+5\n# effective December 21st, 2018....\n# http://adilet.zan.kz/rus/docs/P1800000817 (russian language).\n\n# From Zhanbolat Raimbekov (2024-01-19):\n# Kazakhstan (all parts) switching to UTC+5 on March 1, 2024\n# https://www.gov.kz/memleket/entities/mti/press/news/details/688998?lang=ru\n# [in Russian]\n# (2024-01-20): https://primeminister.kz/ru/decisions/19012024-20\n#\n# From Alexander Krivenyshev (2024-01-19):\n# According to a different news and the official web site for the Ministry of\n# Trade and Integration of the Republic of Kazakhstan:\n# https://en.inform.kz/news/kazakhstan-to-switch-to-single-hour-zone-mar-1-54ad0b/\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n#\n# Almaty (formerly Alma-Ata), representing most locations in Kazakhstan\n# This includes Abai/Abay (ISO 3166-2 code KZ-10), Aqmola/Akmola (KZ-11),\n# Almaty (KZ-19), Almaty city (KZ-75), Astana city (KZ-71),\n# East Kazakhstan (KZ-63), Jambyl/Zhambyl (KZ-31), Jetisu/Zhetysu (KZ-33),\n# Karaganda (KZ-35), North Kazakhstan (KZ-59), Pavlodar (KZ-55),\n# Shymkent city (KZ-79), Turkistan (KZ-61), and Ulytau (KZ-62).\nZone\tAsia/Almaty\t5:07:48 -\tLMT\t1924 May  2 # or Alma-Ata\n\t\t\t5:00\t-\t%z\t1930 Jun 21\n\t\t\t6:00 RussiaAsia %z\t1991 Mar 31  2:00s\n\t\t\t5:00 RussiaAsia\t%z\t1992 Jan 19  2:00s\n\t\t\t6:00 RussiaAsia\t%z\t2004 Oct 31  2:00s\n\t\t\t6:00\t-\t%z\t2024 Mar  1  0:00\n\t\t\t5:00\t-\t%z\n# Qyzylorda (aka Kyzylorda, Kizilorda, Kzyl-Orda, etc.) (KZ-43)\nZone\tAsia/Qyzylorda\t4:21:52 -\tLMT\t1924 May  2\n\t\t\t4:00\t-\t%z\t1930 Jun 21\n\t\t\t5:00\t-\t%z\t1981 Apr  1\n\t\t\t5:00\t1:00\t%z\t1981 Oct  1\n\t\t\t6:00\t-\t%z\t1982 Apr  1\n\t\t\t5:00 RussiaAsia\t%z\t1991 Mar 31  2:00s\n\t\t\t4:00 RussiaAsia\t%z\t1991 Sep 29  2:00s\n\t\t\t5:00 RussiaAsia\t%z\t1992 Jan 19  2:00s\n\t\t\t6:00 RussiaAsia\t%z\t1992 Mar 29  2:00s\n\t\t\t5:00 RussiaAsia\t%z\t2004 Oct 31  2:00s\n\t\t\t6:00\t-\t%z\t2018 Dec 21  0:00\n\t\t\t5:00\t-\t%z\n# Qostanay (aka Kostanay, Kustanay) (KZ-39)\n# The 1991/2 rules are unclear partly because of the 1997 Turgai\n# reorganization.\nZone\tAsia/Qostanay\t4:14:28 -\tLMT\t1924 May  2\n\t\t\t4:00\t-\t%z\t1930 Jun 21\n\t\t\t5:00\t-\t%z\t1981 Apr  1\n\t\t\t5:00\t1:00\t%z\t1981 Oct  1\n\t\t\t6:00\t-\t%z\t1982 Apr  1\n\t\t\t5:00 RussiaAsia\t%z\t1991 Mar 31  2:00s\n\t\t\t4:00 RussiaAsia\t%z\t1992 Jan 19  2:00s\n\t\t\t5:00 RussiaAsia\t%z\t2004 Oct 31  2:00s\n\t\t\t6:00\t-\t%z\t2024 Mar  1  0:00\n\t\t\t5:00\t-\t%z\n# Aqtöbe (aka Aktobe, formerly Aktyubinsk) (KZ-15)\nZone\tAsia/Aqtobe\t3:48:40\t-\tLMT\t1924 May  2\n\t\t\t4:00\t-\t%z\t1930 Jun 21\n\t\t\t5:00\t-\t%z\t1981 Apr  1\n\t\t\t5:00\t1:00\t%z\t1981 Oct  1\n\t\t\t6:00\t-\t%z\t1982 Apr  1\n\t\t\t5:00 RussiaAsia\t%z\t1991 Mar 31  2:00s\n\t\t\t4:00 RussiaAsia\t%z\t1992 Jan 19  2:00s\n\t\t\t5:00 RussiaAsia\t%z\t2004 Oct 31  2:00s\n\t\t\t5:00\t-\t%z\n# Mangghystaū (KZ-47)\n# Aqtau was not founded until 1963, but it represents an inhabited region,\n# so include timestamps before 1963.\nZone\tAsia/Aqtau\t3:21:04\t-\tLMT\t1924 May  2\n\t\t\t4:00\t-\t%z\t1930 Jun 21\n\t\t\t5:00\t-\t%z\t1981 Oct  1\n\t\t\t6:00\t-\t%z\t1982 Apr  1\n\t\t\t5:00 RussiaAsia\t%z\t1991 Mar 31  2:00s\n\t\t\t4:00 RussiaAsia\t%z\t1992 Jan 19  2:00s\n\t\t\t5:00 RussiaAsia\t%z\t1994 Sep 25  2:00s\n\t\t\t4:00 RussiaAsia\t%z\t2004 Oct 31  2:00s\n\t\t\t5:00\t-\t%z\n# Atyraū (KZ-23) is like Mangghystaū except it switched from\n# +04/+05 to +05/+06 in spring 1999, not fall 1994.\nZone\tAsia/Atyrau\t3:27:44\t-\tLMT\t1924 May  2\n\t\t\t3:00\t-\t%z\t1930 Jun 21\n\t\t\t5:00\t-\t%z\t1981 Oct  1\n\t\t\t6:00\t-\t%z\t1982 Apr  1\n\t\t\t5:00 RussiaAsia\t%z\t1991 Mar 31  2:00s\n\t\t\t4:00 RussiaAsia\t%z\t1992 Jan 19  2:00s\n\t\t\t5:00 RussiaAsia\t%z\t1999 Mar 28  2:00s\n\t\t\t4:00 RussiaAsia\t%z\t2004 Oct 31  2:00s\n\t\t\t5:00\t-\t%z\n# West Kazakhstan (KZ-27)\n# From Paul Eggert (2016-03-18):\n# The 1989 transition is from USSR act No. 227 (1989-03-14).\nZone\tAsia/Oral\t3:25:24\t-\tLMT\t1924 May  2 # or Ural'sk\n\t\t\t3:00\t-\t%z\t1930 Jun 21\n\t\t\t5:00\t-\t%z\t1981 Apr  1\n\t\t\t5:00\t1:00\t%z\t1981 Oct  1\n\t\t\t6:00\t-\t%z\t1982 Apr  1\n\t\t\t5:00 RussiaAsia\t%z\t1989 Mar 26  2:00s\n\t\t\t4:00 RussiaAsia\t%z\t1992 Jan 19  2:00s\n\t\t\t5:00 RussiaAsia\t%z\t1992 Mar 29  2:00s\n\t\t\t4:00 RussiaAsia\t%z\t2004 Oct 31  2:00s\n\t\t\t5:00\t-\t%z\n\n# Kyrgyzstan (Kirgizstan)\n# Transitions through 1991 are from Shanks & Pottenger.\n\n# From Paul Eggert (2005-08-15):\n# According to an article dated today in the Kyrgyzstan Development Gateway\n# http://eng.gateway.kg/cgi-bin/page.pl?id=1&story_name=doc9979.shtml\n# Kyrgyzstan is canceling the daylight saving time system.  I take the article\n# to mean that they will leave their clocks at 6 hours ahead of UTC.\n# From Malik Abdugaliev (2005-09-21):\n# Our government cancels daylight saving time 6th of August 2005.\n# From 2005-08-12 our GMT-offset is +6, w/o any daylight saving.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tKyrgyz\t1992\t1996\t-\tApr\tSun>=7\t0:00s\t1:00\t-\nRule\tKyrgyz\t1992\t1996\t-\tSep\tlastSun\t0:00\t0\t-\nRule\tKyrgyz\t1997\t2005\t-\tMar\tlastSun\t2:30\t1:00\t-\nRule\tKyrgyz\t1997\t2004\t-\tOct\tlastSun\t2:30\t0\t-\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAsia/Bishkek\t4:58:24 -\tLMT\t1924 May  2\n\t\t\t5:00\t-\t%z\t1930 Jun 21\n\t\t\t6:00 RussiaAsia %z\t1991 Mar 31  2:00s\n\t\t\t5:00 RussiaAsia\t%z\t1991 Aug 31  2:00\n\t\t\t5:00\tKyrgyz\t%z\t2005 Aug 12\n\t\t\t6:00\t-\t%z\n\n###############################################################################\n\n# Korea (North and South)\n\n# From Annie I. Bang (2006-07-10):\n# http://www.koreaherald.com/view.php?ud=200607100012\n# Korea ran a daylight saving program from 1949-61 but stopped it\n# during the 1950-53 Korean War.  The system was temporarily enforced\n# between 1987 and 1988 ...\n\n# From Sanghyuk Jung (2014-10-29):\n# https://mm.icann.org/pipermail/tz/2014-October/021830.html\n# According to the Korean Wikipedia\n# https://ko.wikipedia.org/wiki/한국_표준시\n# [oldid=12896437 2014-09-04 08:03 UTC]\n# DST in Republic of Korea was as follows....  And I checked old\n# newspapers in Korean, all articles correspond with data in Wikipedia.\n# For example, the article in 1948 (Korean Language) proved that DST\n# started at June 1 in that year.  For another example, the article in\n# 1988 said that DST started at 2:00 AM in that year.\n\n# From Phake Nick (2018-10-27):\n# 1. According to official announcement from Korean government, the DST end\n# date in South Korea should be\n# 1955-09-08 without specifying time\n# http://theme.archives.go.kr/next/common/viewEbook.do?singleData=N&archiveEventId=0027977557\n# 1956-09-29 without specifying time\n# http://theme.archives.go.kr/next/common/viewEbook.do?singleData=N&archiveEventId=0027978341\n# 1957-09-21 24 o'clock\n# http://theme.archives.go.kr/next/common/viewEbook.do?singleData=N&archiveEventId=0027979690#3\n# 1958-09-20 24 o'clock\n# http://theme.archives.go.kr/next/common/viewEbook.do?singleData=N&archiveEventId=0027981189\n# 1959-09-19 24 o'clock\n# http://theme.archives.go.kr/next/common/viewEbook.do?singleData=N&archiveEventId=0027982974#2\n# 1960-09-17 24 o'clock\n# http://theme.archives.go.kr/next/common/viewEbook.do?singleData=N&archiveEventId=0028044104\n# ...\n# 2.... https://namu.wiki/w/대한민국%20표준시 ... [says]\n# when Korea was using GMT+8:30 as standard time, the international\n# aviation/marine/meteorological industry in the country refused to\n# follow and continued to use GMT+9:00 for interoperability.\n\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tROK\t1948\tonly\t-\tJun\t 1\t 0:00\t1:00\tD\nRule\tROK\t1948\tonly\t-\tSep\t12\t24:00\t0\tS\nRule\tROK\t1949\tonly\t-\tApr\t 3\t 0:00\t1:00\tD\nRule\tROK\t1949\t1951\t-\tSep\tSat>=7\t24:00\t0\tS\nRule\tROK\t1950\tonly\t-\tApr\t 1\t 0:00\t1:00\tD\nRule\tROK\t1951\tonly\t-\tMay\t 6\t 0:00\t1:00\tD\nRule\tROK\t1955\tonly\t-\tMay\t 5\t 0:00\t1:00\tD\nRule\tROK\t1955\tonly\t-\tSep\t 8\t24:00\t0\tS\nRule\tROK\t1956\tonly\t-\tMay\t20\t 0:00\t1:00\tD\nRule\tROK\t1956\tonly\t-\tSep\t29\t24:00\t0\tS\nRule\tROK\t1957\t1960\t-\tMay\tSun>=1\t 0:00\t1:00\tD\nRule\tROK\t1957\t1960\t-\tSep\tSat>=17\t24:00\t0\tS\nRule\tROK\t1987\t1988\t-\tMay\tSun>=8\t 2:00\t1:00\tD\nRule\tROK\t1987\t1988\t-\tOct\tSun>=8\t 3:00\t0\tS\n\n# From Paul Eggert (2016-08-23):\n# The Korean Wikipedia entry gives the following sources for UT offsets:\n#\n# 1908: Official Journal Article No. 3994 (decree No. 5)\n# 1912: Governor-General of Korea Official Gazette Issue No. 367\n#       (Announcement No. 338)\n# 1954: Presidential Decree No. 876 (1954-03-17)\n# 1961: Law No. 676 (1961-08-07)\n#\n# (Another source \"1987: Law No. 3919 (1986-12-31)\" was in the 2014-10-30\n# edition of the Korean Wikipedia entry.)\n#\n# I guessed that time zone abbreviations through 1945 followed the same\n# rules as discussed under Taiwan, with nominal switches from JST to KST\n# when the respective cities were taken over by the Allies after WWII.\n#\n# For Pyongyang, guess no changes from World War II until 2015, as we\n# have no information otherwise.\n\n# From Steffen Thorsen (2015-08-07):\n# According to many news sources, North Korea is going to change to\n# the 8:30 time zone on August 15, one example:\n# http://www.bbc.com/news/world-asia-33815049\n#\n# From Paul Eggert (2015-08-15):\n# Bells rang out midnight (00:00) Friday as part of the celebrations.  See:\n# Talmadge E. North Korea celebrates new time zone, 'Pyongyang Time'\n# http://news.yahoo.com/north-korea-celebrates-time-zone-pyongyang-time-164038128.html\n# There is no common English-language abbreviation for this time zone.\n# Use KST, as that's what we already use for 1954-1961 in ROK.\n\n# From Kang Seonghoon (2018-04-29):\n# North Korea will revert its time zone from UTC+8:30 (PYT; Pyongyang\n# Time) back to UTC+9 (KST; Korea Standard Time).\n#\n# From Seo Sanghyeon (2018-04-30):\n# Rodong Sinmun 2018-04-30 announced Pyongyang Time transition plan.\n# https://www.nknews.org/kcna/wp-content/uploads/sites/5/2018/04/rodong-2018-04-30.pdf\n# ... the transition date is 2018-05-05 ...  Citation should be Decree\n# No. 2232 of April 30, 2018, of the Presidium of the Supreme People's\n# Assembly, as published in Rodong Sinmun.\n# From Tim Parenti (2018-04-29):\n# It appears to be the front page story at the top in the right-most column.\n#\n# From Paul Eggert (2018-05-04):\n# The BBC reported that the transition was from 23:30 to 24:00 today.\n# https://www.bbc.com/news/world-asia-44010705\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAsia/Seoul\t8:27:52\t-\tLMT\t1908 Apr  1\n\t\t\t8:30\t-\tKST\t1912 Jan  1\n\t\t\t9:00\t-\tJST\t1945 Sep  8\n\t\t\t9:00\tROK\tK%sT\t1954 Mar 21\n\t\t\t8:30\tROK\tK%sT\t1961 Aug 10\n\t\t\t9:00\tROK\tK%sT\nZone\tAsia/Pyongyang\t8:23:00 -\tLMT\t1908 Apr  1\n\t\t\t8:30\t-\tKST\t1912 Jan  1\n\t\t\t9:00\t-\tJST\t1945 Aug 24\n\t\t\t9:00\t-\tKST\t2015 Aug 15 00:00\n\t\t\t8:30\t-\tKST\t2018 May  4 23:30\n\t\t\t9:00\t-\tKST\n\n\n# Lebanon\n#\n# From Saadallah Itani (2023-03-23):\n# Lebanon ... announced today delay of Spring forward from March 25 to April 20.\n#\n# From Paul Eggert (2023-03-27):\n# This announcement was by the Lebanese caretaker prime minister Najib Mikati.\n# https://www.mtv.com.lb/en/News/Local/1352516/lebanon-postpones-daylight-saving-time-adoption\n# A video was later leaked to the media of parliament speaker Nabih Berri\n# asking Mikati to postpone DST to aid observance of Ramadan, Mikati objecting\n# that this would cause problems such as scheduling airline flights, to which\n# Berri interjected, \"What flights?\"\n#\n# The change was controversial and led to a partly-sectarian divide.\n# Many Lebanese institutions, including the education ministry, the Maronite\n# church, and two news channels LCBI and MTV, ignored the announcement and\n# went ahead with the long-scheduled spring-forward on March 25/26, some\n# arguing that the prime minister had not followed the law because the change\n# had not been approved by the cabinet.  Google went with the announcement;\n# Apple ignored it.  At least one bank followed the announcement for its doors,\n# but ignored the announcement in internal computer systems.\n# Beirut international airport listed two times for each departure.\n# Dan Azzi wrote \"My view is that this whole thing is a Dumb and Dumber movie.\"\n# Eventually the prime minister backed down, said the cabinet had decided to\n# stick with its 1998 decision, and that DST would begin midnight March 29/30.\n# https://www.nna-leb.gov.lb/en/miscellaneous/604093/lebanon-has-two-times-of-day-amid-daylight-savings\n# https://www.cnbc.com/2023/03/27/lebanon-in-two-different-time-zones-as-government-disagrees-on-daylight-savings.html\n#\n# Although we could model the chaos with two Zones, that would likely cause\n# more trouble than it would cure.  Since so many manual clocks and\n# computer-based timestamps ignored the announcement, stick with official\n# cabinet resolutions in the data while recording the prime minister's\n# announcement as a comment.  This is how we treated a similar situation in\n# Rio de Janeiro in spring 1993.\n#\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tLebanon\t1920\tonly\t-\tMar\t28\t0:00\t1:00\tS\nRule\tLebanon\t1920\tonly\t-\tOct\t25\t0:00\t0\t-\nRule\tLebanon\t1921\tonly\t-\tApr\t3\t0:00\t1:00\tS\nRule\tLebanon\t1921\tonly\t-\tOct\t3\t0:00\t0\t-\nRule\tLebanon\t1922\tonly\t-\tMar\t26\t0:00\t1:00\tS\nRule\tLebanon\t1922\tonly\t-\tOct\t8\t0:00\t0\t-\nRule\tLebanon\t1923\tonly\t-\tApr\t22\t0:00\t1:00\tS\nRule\tLebanon\t1923\tonly\t-\tSep\t16\t0:00\t0\t-\nRule\tLebanon\t1957\t1961\t-\tMay\t1\t0:00\t1:00\tS\nRule\tLebanon\t1957\t1961\t-\tOct\t1\t0:00\t0\t-\nRule\tLebanon\t1972\tonly\t-\tJun\t22\t0:00\t1:00\tS\nRule\tLebanon\t1972\t1977\t-\tOct\t1\t0:00\t0\t-\nRule\tLebanon\t1973\t1977\t-\tMay\t1\t0:00\t1:00\tS\nRule\tLebanon\t1978\tonly\t-\tApr\t30\t0:00\t1:00\tS\nRule\tLebanon\t1978\tonly\t-\tSep\t30\t0:00\t0\t-\nRule\tLebanon\t1984\t1987\t-\tMay\t1\t0:00\t1:00\tS\nRule\tLebanon\t1984\t1991\t-\tOct\t16\t0:00\t0\t-\nRule\tLebanon\t1988\tonly\t-\tJun\t1\t0:00\t1:00\tS\nRule\tLebanon\t1989\tonly\t-\tMay\t10\t0:00\t1:00\tS\nRule\tLebanon\t1990\t1992\t-\tMay\t1\t0:00\t1:00\tS\nRule\tLebanon\t1992\tonly\t-\tOct\t4\t0:00\t0\t-\nRule\tLebanon\t1993\tmax\t-\tMar\tlastSun\t0:00\t1:00\tS\nRule\tLebanon\t1993\t1998\t-\tSep\tlastSun\t0:00\t0\t-\nRule\tLebanon\t1999\tmax\t-\tOct\tlastSun\t0:00\t0\t-\n# This one-time rule, announced by the prime minister first for April 21\n# then for March 30, is commented out for reasons described above.\n#Rule\tLebanon\t2023\tonly\t-\tMar\t30\t0:00\t1:00\tS\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAsia/Beirut\t2:22:00 -\tLMT\t1880\n\t\t\t2:00\tLebanon\tEE%sT\n\n# Brunei\n# Malaysia (eastern)\n#\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tNBorneo\t1935\t1941\t-\tSep\t14\t0:00\t0:20\t-\nRule\tNBorneo\t1935\t1941\t-\tDec\t14\t0:00\t0\t-\n#\n# For peninsular Malaysia see Asia/Singapore.\n#\n# Sabah & Sarawak\n# From Paul Eggert (2014-08-12):\n# The data entries here are mostly from Shanks & Pottenger, but the 1942, 1945\n# and 1982 transition dates are from Mok Ly Yng.\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone Asia/Kuching\t7:21:20\t-\tLMT\t1926 Mar\n\t\t\t7:30\t-\t%z\t1933\n\t\t\t8:00 NBorneo\t%z\t1942 Feb 16\n\t\t\t9:00\t-\t%z\t1945 Sep 12\n\t\t\t8:00\t-\t%z\n\n# Maldives\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tIndian/Maldives\t4:54:00 -\tLMT\t1880 # Malé\n\t\t\t4:54:00\t-\tMMT\t1960 # Malé Mean Time\n\t\t\t5:00\t-\t%z\n\n# Mongolia\n\n# Shanks & Pottenger say that Mongolia has three time zones, but\n# The USNO (1995-12-21) and the CIA map Standard Time Zones of the World\n# (2005-03) both say that it has just one.\n\n# From Oscar van Vlijmen (1999-12-11):\n# General Information Mongolia\n# <http://www.mongoliatourism.gov.mn/general.htm> (1999-09)\n# \"Time: Mongolia has two time zones. Three westernmost provinces of\n# Bayan-Ölgii, Uvs, and Hovd are one hour earlier than the capital city, and\n# the rest of the country follows the Ulaanbaatar time, which is UTC/GMT plus\n# eight hours.\"\n\n# From Rives McDow (1999-12-13):\n# Mongolia discontinued the use of daylight savings time in 1999; 1998\n# being the last year it was implemented.  The dates of implementation I am\n# unsure of, but most probably it was similar to Russia, except for the time\n# of implementation may have been different....\n# Some maps in the past have indicated that there was an additional time\n# zone in the eastern part of Mongolia, including the provinces of Dornod,\n# Sükhbaatar, and possibly Khentii.\n\n# From Paul Eggert (1999-12-15):\n# Naming and spelling is tricky in Mongolia.\n# We'll use Hovd (also spelled Chovd and Khovd) to represent the west zone;\n# the capital of the Hovd province is sometimes called Hovd, sometimes Dund-Us,\n# and sometimes Jirgalanta (with variant spellings), but the name Hovd\n# is good enough for our purposes.\n\n# From Rives McDow (2001-05-13):\n# In addition to Mongolia starting daylight savings as reported earlier\n# (adopted DST on 2001-04-27 02:00 local time, ending 2001-09-28),\n# there are three time zones.\n#\n# Provinces [at 7:00]: Bayan-Ölgii, Uvs, Khovd, Zavkhan, Govi-Altai\n# Provinces [at 8:00]: Khövsgöl, Bulgan, Arkhangai, Khentii, Töv,\n#\tBayankhongor, Övörkhangai, Dundgovi, Dornogovi, Ömnögovi\n# Provinces [at 9:00]: Dornod, Sükhbaatar\n#\n# [The province of Selenge is omitted from the above lists.]\n\n# From Ganbold Ts., Ulaanbaatar (2004-04-17):\n# Daylight saving occurs at 02:00 local time last Saturday of March.\n# It will change back to normal at 02:00 local time last Saturday of\n# September.... As I remember this rule was changed in 2001.\n#\n# From Paul Eggert (2004-04-17):\n# For now, assume Rives McDow's informant got confused about Friday vs\n# Saturday, and that his 2001 dates should have 1 added to them.\n\n# From Paul Eggert (2005-07-26):\n# We have wildly conflicting information about Mongolia's time zones.\n# Bill Bonnet (2005-05-19) reports that the US Embassy in Ulaanbaatar says\n# there is only one time zone and that DST is observed, citing Microsoft\n# Windows XP as the source.  Risto Nykänen (2005-05-16) reports that\n# travelmongolia.org says there are two time zones (UT +07, +08) with no DST.\n# Oscar van Vlijmen (2005-05-20) reports that the Mongolian Embassy in\n# Washington, DC says there are two time zones, with DST observed.\n# He also found\n# http://ubpost.mongolnews.mn/index.php?subaction=showcomments&id=1111634894&archive=&start_from=&ucat=1&\n# which also says that there is DST, and which has a comment by \"Toddius\"\n# (2005-03-31 06:05 +0700) saying \"Mongolia actually has 3.5 time zones.\n# The West (OLGII) is +7 GMT, most of the country is ULAT is +8 GMT\n# and some Eastern provinces are +9 GMT but Sükhbaatar Aimag is SUHK +8.5 GMT.\n# The SUKH timezone is new this year, it is one of the few things the\n# parliament passed during the tumultuous winter session.\"\n# For now, let's ignore this information, until we have more confirmation.\n\n# From Ganbold Ts. (2007-02-26):\n# Parliament of Mongolia has just changed the daylight-saving rule in February.\n# They decided not to adopt daylight-saving time....\n# http://www.mongolnews.mn/index.php?module=unuudur&sec=view&id=15742\n\n# From Deborah Goldsmith (2008-03-30):\n# We received a bug report claiming that the tz database UTC offset for\n# Asia/Choibalsan (GMT+09:00) is incorrect, and that it should be GMT\n# +08:00 instead. Different sources appear to disagree with the tz\n# database on this, e.g.:\n#\n# https://www.timeanddate.com/worldclock/city.html?n=1026\n# http://www.worldtimeserver.com/current_time_in_MN.aspx\n#\n# both say GMT+08:00.\n\n# From Steffen Thorsen (2008-03-31):\n# eznis airways, which operates several domestic flights, has a flight\n# schedule here:\n# http://www.eznis.com/Container.jsp?id=112\n# (click the English flag for English)\n#\n# There it appears that flights between Choibalsan and Ulaanbaatar arrive\n# about 1:35 - 1:50 hours later in local clock time, no matter the\n# direction, while Ulaanbaatar-Khovd takes 2 hours in the Eastern\n# direction and 3:35 back, which indicates that Ulaanbaatar and Khovd are\n# in different time zones (like we know about), while Choibalsan and\n# Ulaanbaatar are in the same time zone (correction needed).\n\n# From Arthur David Olson (2008-05-19):\n# Assume that Choibalsan is indeed offset by 8:00.\n\n# From Heitor David Pinto (2024-06-23):\n# Sources about time zones in Mongolia seem to list one of two conflicting\n# configurations.  The first configuration, mentioned in a comment to the TZ\n# database in 1999, citing a Mongolian government website, lists the provinces\n# of Bayan-Ölgii, Khovd and Uvs in UTC+7, and the rest of the country in\n# UTC+8.  The second configuration, mentioned in a comment to the database in\n# 2001, lists Bayan-Ölgii, Khovd, Uvs, Govi-Altai and Zavkhan in UTC+7, Dornod\n# and Sükhbaatar in UTC+9, and the rest of the country in UTC+8.\n#\n# The first configuration is still mentioned by several Mongolian travel\n# agencies:\n# https://www.adventurerider.mn/en/page/about_mongolia\n# http://www.naturetours.mn/nt/mongolia.php\n# https://www.newjuulchin.mn/web/content/7506?unique=fa24a0f6e96e022a3578ee5195ac879638c734ce\n#\n# It also matches these flight schedules in 2013:\n# http://web.archive.org/web/20130722023600/https://www.hunnuair.com/en/timetabled\n# The flight times imply that the airports of Uliastai (Zavkhan), Choibalsan\n# (Dornod) and Altai (Govi-Altai) are in the same time zone as Ulaanbaatar,\n# and Khovd is one hour behind....\n#\n# The second configuration was mentioned by an official of the Mongolian\n# standards agency in an interview in 2014: https://ikon.mn/n/9v6\n# And it's still listed by the Mongolian aviation agency:\n# https://ais.mn/files/aip/eAIP/2023-12-25/html/eSUP/ZM-eSUP-23-04-en-MN.html\n#\n# ... I believe that the first configuration is what is actually observed in\n# Mongolia and has been so all along, at least since 1999.  The second\n# configuration closely matches the ideal time zone boundaries at 97.5° E and\n# 112.5° E but it doesn't seem to be used in practice.\n\n# From Ganbold Tsagaankhuu (2015-03-10):\n# It seems like yesterday Mongolian Government meeting has concluded to use\n# daylight saving time in Mongolia....  Starting at 2:00AM of last Saturday of\n# March 2015, daylight saving time starts.  And 00:00AM of last Saturday of\n# September daylight saving time ends.  Source:\n# http://zasag.mn/news/view/8969\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tMongol\t1983\t1984\t-\tApr\t1\t0:00\t1:00\t-\nRule\tMongol\t1983\tonly\t-\tOct\t1\t0:00\t0\t-\n# Shanks & Pottenger and IATA SSIM say 1990s switches occurred at 00:00,\n# but McDow says the 2001 switches occurred at 02:00.  Also, IATA SSIM\n# (1996-09) says 1996-10-25.  Go with Shanks & Pottenger through 1998.\n#\n# Shanks & Pottenger say that the Sept. 1984 through Sept. 1990 switches\n# in Choibalsan (more precisely, in Dornod and Sükhbaatar) took place\n# at 02:00 standard time, not at 00:00 local time as in the rest of\n# the country.  That would be odd, and possibly is a result of their\n# correction of 02:00 (in the previous edition) not being done correctly\n# in the latest edition; so ignore it for now.\n\n# From Ganbold Tsagaankhuu (2017-02-09):\n# Mongolian Government meeting has concluded today to cancel daylight\n# saving time adoption in Mongolia.  Source: http://zasag.mn/news/view/16192\n\nRule\tMongol\t1985\t1998\t-\tMar\tlastSun\t0:00\t1:00\t-\nRule\tMongol\t1984\t1998\t-\tSep\tlastSun\t0:00\t0\t-\n# IATA SSIM (1999-09) says Mongolia no longer observes DST.\nRule\tMongol\t2001\tonly\t-\tApr\tlastSat\t2:00\t1:00\t-\nRule\tMongol\t2001\t2006\t-\tSep\tlastSat\t2:00\t0\t-\nRule\tMongol\t2002\t2006\t-\tMar\tlastSat\t2:00\t1:00\t-\nRule\tMongol\t2015\t2016\t-\tMar\tlastSat\t2:00\t1:00\t-\nRule\tMongol\t2015\t2016\t-\tSep\tlastSat\t0:00\t0\t-\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n# Hovd, a.k.a. Chovd, Dund-Us, Dzhargalant, Khovd, Jirgalanta\nZone\tAsia/Hovd\t6:06:36 -\tLMT\t1905 Aug\n\t\t\t6:00\t-\t%z\t1978\n\t\t\t7:00\tMongol\t%z\n# Ulaanbaatar, a.k.a. Ulan Bataar, Ulan Bator, Urga\nZone\tAsia/Ulaanbaatar 7:07:32 -\tLMT\t1905 Aug\n\t\t\t7:00\t-\t%z\t1978\n\t\t\t8:00\tMongol\t%z\n\n# Nepal\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAsia/Kathmandu\t5:41:16 -\tLMT\t1920\n\t\t\t5:30\t-\t%z\t1986\n\t\t\t5:45\t-\t%z\n\n# Pakistan\n\n# From Rives McDow (2002-03-13):\n# I have been advised that Pakistan has decided to adopt dst on a\n# TRIAL basis for one year, starting 00:01 local time on April 7, 2002\n# and ending at 00:01 local time October 6, 2002.  This is what I was\n# told, but I believe that the actual time of change may be 00:00; the\n# 00:01 was to make it clear which day it was on.\n\n# From Paul Eggert (2002-03-15):\n# Jesper Nørgaard found this URL:\n# http://www.pak.gov.pk/public/news/app/app06_dec.htm\n# (dated 2001-12-06) which says that the Cabinet adopted a scheme \"to\n# advance the clocks by one hour on the night between the first\n# Saturday and Sunday of April and revert to the original position on\n# 15th October each year\".  This agrees with McDow's 04-07 at 00:00,\n# but disagrees about the October transition, and makes it sound like\n# it's not on a trial basis.  Also, the \"between the first Saturday\n# and Sunday of April\" phrase, if taken literally, means that the\n# transition takes place at 00:00 on the first Sunday on or after 04-02.\n\n# From Paul Eggert (2003-02-09):\n# DAWN <http://www.dawn.com/2002/10/06/top13.htm> reported on 2002-10-05\n# that 2002 DST ended that day at midnight.  Go with McDow for now.\n\n# From Steffen Thorsen (2003-03-14):\n# According to http://www.dawn.com/2003/03/07/top15.htm\n# there will be no DST in Pakistan this year:\n#\n# ISLAMABAD, March 6: Information and Media Development Minister Sheikh\n# Rashid Ahmed on Thursday said the cabinet had reversed a previous\n# decision to advance clocks by one hour in summer and put them back by\n# one hour in winter with the aim of saving light hours and energy.\n#\n# The minister told a news conference that the experiment had rather\n# shown 8 per cent higher consumption of electricity.\n\n# From Alex Krivenyshev (2008-05-15):\n#\n# Here is an article that Pakistan plan to introduce Daylight Saving Time\n# on June 1, 2008 for 3 months.\n#\n# \"... The federal cabinet on Wednesday announced a new conservation plan to\n# help reduce load shedding by approving the closure of commercial centres at\n# 9pm and moving clocks forward by one hour for the next three months. ....\"\n#\n# http://www.worldtimezone.com/dst_news/dst_news_pakistan01.html\n# http://www.dailytimes.com.pk/default.asp?page=2008\\05\\15\\story_15-5-2008_pg1_4\n\n# From Arthur David Olson (2008-05-19):\n# XXX--midnight transitions is a guess; 2008 only is a guess.\n\n# From Alexander Krivenyshev (2008-08-28):\n# Pakistan government has decided to keep the watches one-hour advanced\n# for another 2 months - plan to return to Standard Time on October 31\n# instead of August 31.\n#\n# http://www.worldtimezone.com/dst_news/dst_news_pakistan02.html\n# http://dailymailnews.com/200808/28/news/dmbrn03.html\n\n# From Alexander Krivenyshev (2009-04-08):\n# Based on previous media reports that \"... proposed plan to\n# advance clocks by one hour from May 1 will cause disturbance\n# to the working schedules rather than bringing discipline in\n# official working.\"\n# http://www.thenews.com.pk/daily_detail.asp?id=171280\n#\n# recent news that instead of May 2009 - Pakistan plan to\n# introduce DST from April 15, 2009\n#\n# FYI: Associated Press Of Pakistan\n# April 08, 2009\n# Cabinet okays proposal to advance clocks by one hour from April 15\n# http://www.app.com.pk/en_/index.php?option=com_content&task=view&id=73043&Itemid=1\n# http://www.worldtimezone.com/dst_news/dst_news_pakistan05.html\n#\n# ....\n# The Federal Cabinet on Wednesday approved the proposal to\n# advance clocks in the country by one hour from April 15 to\n# conserve energy\"\n\n# From Steffen Thorsen (2009-09-17):\n# \"The News International,\" Pakistan reports that: \"The Federal\n# Government has decided to restore the previous time by moving the\n# clocks backward by one hour from October 1. A formal announcement to\n# this effect will be made after the Prime Minister grants approval in\n# this regard.\"\n# http://www.thenews.com.pk/updates.asp?id=87168\n\n# From Alexander Krivenyshev (2009-09-28):\n# According to Associated Press Of Pakistan, it is confirmed that\n# Pakistan clocks across the country would be turned back by an hour from\n# October 1, 2009.\n#\n# \"Clocks to go back one hour from 1 Oct\"\n# http://www.app.com.pk/en_/index.php?option=com_content&task=view&id=86715&Itemid=2\n# http://www.worldtimezone.com/dst_news/dst_news_pakistan07.htm\n#\n# From Steffen Thorsen (2009-09-29):\n# Now they seem to have changed their mind, November 1 is the new date:\n# http://www.thenews.com.pk/top_story_detail.asp?Id=24742\n# \"The country's clocks will be reversed by one hour on November 1.\n# Officials of Federal Ministry for Interior told this to Geo News on\n# Monday.\"\n#\n# And more importantly, it seems that these dates will be kept every year:\n# \"It has now been decided that clocks will be wound forward by one hour\n# on April 15 and reversed by an hour on November 1 every year without\n# obtaining prior approval, the officials added.\"\n#\n# We have confirmed this year's end date with both with the Ministry of\n# Water and Power and the Pakistan Electric Power Company:\n# https://www.timeanddate.com/news/time/pakistan-ends-dst09.html\n\n# From Christoph Göhre (2009-10-01):\n# [T]he German Consulate General in Karachi reported me today that Pakistan\n# will go back to standard time on 1st of November.\n\n# From Steffen Thorsen (2010-03-26):\n# Steffen Thorsen wrote:\n# > On Thursday (2010-03-25) it was announced that DST would start in\n# > Pakistan on 2010-04-01.\n# >\n# > Then today, the president said that they might have to revert the\n# > decision if it is not supported by the parliament. So at the time\n# > being, it seems unclear if DST will be actually observed or not - but\n# > April 1 could be a more likely date than April 15.\n# Now, it seems that the decision to not observe DST in final:\n#\n# \"Govt Withdraws Plan To Advance Clocks\"\n# http://www.apakistannews.com/govt-withdraws-plan-to-advance-clocks-172041\n#\n# \"People laud PM's announcement to end DST\"\n# http://www.app.com.pk/en_/index.php?option=com_content&task=view&id=99374&Itemid=2\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule Pakistan\t2002\tonly\t-\tApr\tSun>=2\t0:00\t1:00\tS\nRule Pakistan\t2002\tonly\t-\tOct\tSun>=2\t0:00\t0\t-\nRule Pakistan\t2008\tonly\t-\tJun\t1\t0:00\t1:00\tS\nRule Pakistan\t2008\t2009\t-\tNov\t1\t0:00\t0\t-\nRule Pakistan\t2009\tonly\t-\tApr\t15\t0:00\t1:00\tS\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAsia/Karachi\t4:28:12 -\tLMT\t1907\n\t\t\t5:30\t-\t%z\t1942 Sep\n\t\t\t5:30\t1:00\t%z\t1945 Oct 15\n\t\t\t5:30\t-\t%z\t1951 Sep 30\n\t\t\t5:00\t-\t%z\t1971 Mar 26\n\t\t\t5:00 Pakistan\tPK%sT\t# Pakistan Time\n\n# Palestine\n\n# From Amos Shapir (1998-02-15):\n#\n# From 1917 until 1948-05-15, all of Palestine, including the parts now\n# known as the Gaza Strip and the West Bank, was under British rule.\n# Therefore the rules given for Israel for that period, apply there too...\n#\n# The Gaza Strip was under Egyptian rule between 1948-05-15 until 1967-06-05\n# (except a short occupation by Israel from 1956-11 till 1957-03, but no\n# time zone was affected then).  It was never formally annexed to Egypt,\n# though.\n#\n# The rest of Palestine was under Jordanian rule at that time, formally\n# annexed in 1950 as the West Bank (and the word \"Trans\" was dropped from\n# the country's previous name of \"the Hashemite Kingdom of the\n# Trans-Jordan\").  So the rules for Jordan for that time apply.  Major\n# towns in that area are Nablus (Shchem), El-Halil (Hebron), Ramallah, and\n# East Jerusalem.\n#\n# Both areas were occupied by Israel in June 1967, but not annexed (except\n# for East Jerusalem).  They were on Israel time since then; there might\n# have been a Military Governor's order about time zones, but I'm not aware\n# of any (such orders may have been issued semi-annually whenever summer\n# time was in effect, but maybe the legal aspect of time was just neglected).\n#\n# The Palestinian Authority was established in 1993, and got hold of most\n# towns in the West Bank and Gaza by 1995.  I know that in order to\n# demonstrate...independence, they have been switching to\n# summer time and back on a different schedule than Israel's, but I don't\n# know when this was started, or what algorithm is used (most likely the\n# Jordanian one).\n#\n# To summarize, the table should probably look something like that:\n#\n# Area \\ when | 1918-1947 | 1948-1967 | 1967-1995 | 1996-\n# ------------+-----------+-----------+-----------+-----------\n# Israel      | Zion      | Zion      | Zion      | Zion\n# West bank   | Zion      | Jordan    | Zion      | Jordan\n# Gaza        | Zion      | Egypt     | Zion      | Jordan\n#\n# I guess more info may be available from the PA's web page (if/when they\n# have one).\n\n# From Paul Eggert (2006-03-22):\n# Shanks & Pottenger write that Gaza did not observe DST until 1957, but go\n# with Shapir and assume that it observed DST from 1940 through 1947,\n# and that it used Jordanian rules starting in 1996.\n# We don't yet need a separate entry for the West Bank, since\n# the only differences between it and Gaza that we know about\n# occurred before our cutoff date of 1970.\n# However, as we get more information, we may need to add entries\n# for parts of the West Bank as they transitioned from Israel's rules\n# to Palestine's rules.\n\n# From IINS News Service - Israel - 1998-03-23 10:38:07 Israel time,\n# forwarded by Ephraim Silverberg:\n#\n# Despite the fact that Israel changed over to daylight savings time\n# last week, the PLO Authority (PA) has decided not to turn its clocks\n# one-hour forward at this time.  As a sign of independence from Israeli rule,\n# the PA has decided to implement DST in April.\n\n# From Paul Eggert (1999-09-20):\n# Daoud Kuttab writes in Holiday havoc\n# http://www.jpost.com/com/Archive/22.Apr.1999/Opinion/Article-2.html\n# (Jerusalem Post, 1999-04-22) that\n# the Palestinian National Authority changed to DST on 1999-04-15.\n# I vaguely recall that they switch back in October (sorry, forgot the source).\n# For now, let's assume that the spring switch was at 24:00,\n# and that they switch at 0:00 on the 3rd Fridays of April and October.\n\n# From Paul Eggert (2005-11-22):\n# Starting 2004 transitions are from Steffen Thorsen's web site timeanddate.com.\n\n# From Steffen Thorsen (2005-11-23):\n# A user from Gaza reported that Gaza made the change early because of\n# the Ramadan.  Next year Ramadan will be even earlier, so I think\n# there is a good chance next year's end date will be around two weeks\n# earlier - the same goes for Jordan.\n\n# From Steffen Thorsen (2006-08-17):\n# I was informed by a user in Bethlehem that in Bethlehem it started the\n# same day as Israel, and after checking with other users in the area, I\n# was informed that they started DST one day after Israel.  I was not\n# able to find any authoritative sources at the time, nor details if\n# Gaza changed as well, but presumed Gaza to follow the same rules as\n# the West Bank.\n\n# From Steffen Thorsen (2006-09-26):\n# according to the Palestine News Network (2006-09-19):\n# http://english.pnn.ps/index.php?option=com_content&task=view&id=596&Itemid=5\n# > The Council of Ministers announced that this year its winter schedule\n# > will begin early, as of midnight Thursday.  It is also time to turn\n# > back the clocks for winter.  Friday will begin an hour late this week.\n# I guess it is likely that next year's date will be moved as well,\n# because of the Ramadan.\n\n# From Jesper Nørgaard Welen (2007-09-18):\n# According to Steffen Thorsen's web site the Gaza Strip and the rest of the\n# Palestinian territories left DST early on 13.th. of September at 2:00.\n\n# From Paul Eggert (2007-09-20):\n# My understanding is that Gaza and the West Bank disagree even over when\n# the weekend is (Thursday+Friday versus Friday+Saturday), so I'd be a bit\n# surprised if they agreed about DST.  But for now, assume they agree.\n# For lack of better information, predict that future changes will be\n# the 2nd Thursday of September at 02:00.\n\n# From Alexander Krivenyshev (2008-08-28):\n# Here is an article, that Mideast running on different clocks at Ramadan.\n#\n# Gaza Strip (as Egypt) ended DST at midnight Thursday (Aug 28, 2008), while\n# the West Bank will end Daylight Saving Time at midnight Sunday (Aug 31, 2008).\n#\n# http://www.guardian.co.uk/world/feedarticle/7759001\n# http://www.abcnews.go.com/International/wireStory?id=5676087\n# http://www.worldtimezone.com/dst_news/dst_news_gazastrip01.html\n\n# From Alexander Krivenyshev (2009-03-26):\n# According to the Palestine News Network (arabic.pnn.ps), Palestinian\n# government decided to start Daylight Time on Thursday night March\n# 26 and continue until the night of 27 September 2009.\n#\n# (in Arabic)\n# http://arabic.pnn.ps/index.php?option=com_content&task=view&id=50850\n#\n# (English translation)\n# http://www.worldtimezone.com/dst_news/dst_news_westbank01.html\n\n# From Steffen Thorsen (2009-08-31):\n# Palestine's Council of Ministers announced that they will revert back to\n# winter time on Friday, 2009-09-04.\n#\n# One news source:\n# http://www.safa.ps/ara/?action=showdetail&seid=4158\n# (Palestinian press agency, Arabic),\n# Google translate: \"Decided that the Palestinian government in Ramallah\n# headed by Salam Fayyad, the start of work in time for the winter of\n# 2009, starting on Friday approved the fourth delay Sept. clock sixty\n# minutes per hour as of Friday morning.\"\n#\n# We are not sure if Gaza will do the same, last year they had a different\n# end date, we will keep this page updated:\n# https://www.timeanddate.com/news/time/westbank-gaza-dst-2009.html\n\n# From Alexander Krivenyshev (2009-09-02):\n# Seems that Gaza Strip will go back to Winter Time same date as West Bank.\n#\n# According to Palestinian Ministry Of Interior, West Bank and Gaza Strip plan\n# to change time back to Standard time on September 4, 2009.\n#\n# \"Winter time unite the West Bank and Gaza\"\n# (from Palestinian National Authority):\n# http://www.moi.gov.ps/en/?page=633167343250594025&nid=11505\n# http://www.worldtimezone.com/dst_news/dst_news_gazastrip02.html\n\n# From Alexander Krivenyshev (2010-03-19):\n# According to Voice of Palestine DST will last for 191 days, from March\n# 26, 2010 till \"the last Sunday before the tenth day of Tishri\n# (October), each year\" (October 03, 2010?)\n#\n# http://palvoice.org/forums/showthread.php?t=245697\n# (in Arabic)\n# http://www.worldtimezone.com/dst_news/dst_news_westbank03.html\n\n# From Steffen Thorsen (2010-03-24):\n# ...Ma'an News Agency reports that Hamas cabinet has decided it will\n# start one day later, at 12:01am. Not sure if they really mean 12:01am or\n# noon though:\n#\n# http://www.maannews.net/eng/ViewDetails.aspx?ID=271178\n# (Ma'an News Agency)\n# \"At 12:01am Friday, clocks in Israel and the West Bank will change to\n# 1:01am, while Gaza clocks will change at 12:01am Saturday morning.\"\n\n# From Steffen Thorsen (2010-08-11):\n# According to several sources, including\n# http://www.maannews.net/eng/ViewDetails.aspx?ID=306795\n# the clocks were set back one hour at 2010-08-11 00:00:00 local time in\n# Gaza and the West Bank.\n# Some more background info:\n# https://www.timeanddate.com/news/time/westbank-gaza-end-dst-2010.html\n\n# From Steffen Thorsen (2011-08-26):\n# Gaza and the West Bank did go back to standard time in the beginning of\n# August, and will now enter daylight saving time again on 2011-08-30\n# 00:00 (so two periods of DST in 2011). The pause was because of\n# Ramadan.\n#\n# http://www.maannews.net/eng/ViewDetails.aspx?ID=416217\n# Additional info:\n# https://www.timeanddate.com/news/time/palestine-dst-2011.html\n\n# From Alexander Krivenyshev (2011-08-27):\n# According to the article in The Jerusalem Post:\n# \"...Earlier this month, the Palestinian government in the West Bank decided to\n# move to standard time for 30 days, during Ramadan. The Palestinians in the\n# Gaza Strip accepted the change and also moved their clocks one hour back.\n# The Hamas government said on Saturday that it won't observe summertime after\n# the Muslim feast of Id al-Fitr, which begins on Tuesday...\"\n# ...\n# https://www.jpost.com/MiddleEast/Article.aspx?id=235650\n# http://www.worldtimezone.com/dst_news/dst_news_gazastrip05.html\n# The rules for Egypt are stolen from the 'africa' file.\n\n# From Steffen Thorsen (2011-09-30):\n# West Bank did end Daylight Saving Time this morning/midnight (2011-09-30\n# 00:00).\n# So West Bank and Gaza now have the same time again.\n#\n# Many sources, including:\n# http://www.maannews.net/eng/ViewDetails.aspx?ID=424808\n\n# From Steffen Thorsen (2012-03-26):\n# Palestinian news sources tell that both Gaza and West Bank will start DST\n# on Friday (Thursday midnight, 2012-03-29 24:00).\n# Some of many sources in Arabic:\n# http://www.samanews.com/index.php?act=Show&id=122638\n#\n# http://safa.ps/details/news/74352/بدء-التوقيت-الصيفي-بالضفة-وغزة-ليلة-الجمعة.html\n#\n# Our brief summary:\n# https://www.timeanddate.com/news/time/gaza-west-bank-dst-2012.html\n\n# From Steffen Thorsen (2013-03-26):\n# The following news sources tells that Palestine will \"start daylight saving\n# time from midnight on Friday, March 29, 2013\" (translated).\n# [These are in Arabic and are for Gaza and for Ramallah, respectively.]\n# http://www.samanews.com/index.php?act=Show&id=154120\n# http://safa.ps/details/news/99844/رام-الله-بدء-التوقيت-الصيفي-29-الجاري.html\n\n# From Steffen Thorsen (2013-09-24):\n# The Gaza and West Bank are ending DST Thursday at midnight\n# (2013-09-27 00:00:00) (one hour earlier than last year...).\n# This source in English, says \"that winter time will go into effect\n# at midnight on Thursday in the West Bank and Gaza Strip\":\n# http://english.wafa.ps/index.php?action=detail&id=23246\n# official source...:\n# http://www.palestinecabinet.gov.ps/ar/Views/ViewDetails.aspx?pid=1252\n\n# From Steffen Thorsen (2015-03-03):\n# Sources such as http://www.alquds.com/news/article/view/id/548257\n# and https://www.raya.ps/ar/news/890705.html say Palestine areas will\n# start DST on 2015-03-28 00:00 which is one day later than expected.\n#\n# From Paul Eggert (2015-03-03):\n# https://www.timeanddate.com/time/change/west-bank/ramallah?year=2014\n# says that the fall 2014 transition was Oct 23 at 24:00.\n\n# From Hannah Kreitem (2016-03-09):\n# http://www.palestinecabinet.gov.ps/WebSite/ar/ViewDetails?ID=31728\n# [Google translation]: \"The Council also decided to start daylight\n# saving in Palestine as of one o'clock on Saturday morning,\n# 2016-03-26, to provide the clock 60 minutes ahead.\"\n\n# From Sharef Mustafa (2016-10-19):\n# [T]he Palestinian cabinet decision (Mar 8th 2016) published on\n# http://www.palestinecabinet.gov.ps/WebSite/Upload/Decree/GOV_17/16032016134830.pdf\n# states that summer time will end on Oct 29th at 01:00.\n\n# From Sharef Mustafa (2018-03-16):\n# Palestine summer time will start on Mar 24th 2018 ...\n# http://www.palestinecabinet.gov.ps/Website/AR/NDecrees/ViewFile.ashx?ID=e7a42ab7-ee23-435a-b9c8-a4f7e81f3817\n\n# From Even Scharning (2019-03-23):\n# http://pnn.ps/news/401130\n# http://palweather.ps/ar/node/50136.html\n#\n# From Sharif Mustafa (2019-03-26):\n# The Palestinian cabinet announced today that the switch to DST will\n# be on Fri Mar 29th 2019 by advancing the clock by 60 minutes.\n# http://palestinecabinet.gov.ps/Website/AR/NDecrees/ViewFile.ashx?ID=e54e9ea1-50ee-4137-84df-0d6c78da259b\n#\n# From Even Scharning (2019-04-10):\n# Our source in Palestine said it happened Friday 29 at 00:00 local time....\n\n# From Sharef Mustafa (2019-10-18):\n# Palestine summer time will end on midnight Oct 26th 2019 ...\n#\n# From Steffen Thorsen (2020-10-20):\n# Some sources such as these say, and display on clocks, that DST ended at\n# midnight last year...\n# https://www.amad.ps/ar/post/320006\n#\n# From Tim Parenti (2020-10-20):\n# The report of the Palestinian Cabinet meeting of 2019-10-14 confirms\n# a decision on (translated): \"The start of the winter time in Palestine, by\n# delaying the clock by sixty minutes, starting from midnight on Friday /\n# Saturday corresponding to 26/10/2019.\"\n# http://www.palestinecabinet.gov.ps/portal/meeting/details/43948\n\n# From Sharef Mustafa (2020-10-20):\n# As per the palestinian cabinet announcement yesterday , the day light saving\n# shall [end] on Oct 24th 2020 at 01:00AM by delaying the clock by 60 minutes.\n# http://www.palestinecabinet.gov.ps/portal/Meeting/Details/51584\n\n# From Pierre Cashon (2020-10-20):\n# The summer time this year started on March 28 at 00:00.\n# https://wafa.ps/ar_page.aspx?id=GveQNZa872839351758aGveQNZ\n# http://www.palestinecabinet.gov.ps/portal/meeting/details/50284\n# The winter time in 2015 started on October 23 at 01:00.\n# https://wafa.ps/ar_page.aspx?id=CgpCdYa670694628582aCgpCdY\n# http://www.palestinecabinet.gov.ps/portal/meeting/details/27583\n\n# From P Chan (2021-10-18):\n# http://wafa.ps/Pages/Details/34701\n# Palestine winter time will start from midnight 2021-10-29 (Thursday-Friday).\n#\n# From Heba Hemad, Palestine Ministry of Telecom & IT (2021-10-20):\n# ... winter time will begin in Palestine from Friday 10-29, 01:00 AM\n# by 60 minutes backwards.\n#\n# From Tim Parenti (2021-10-25), per Paul Eggert (2021-10-24):\n# Guess future fall transitions at 01:00 on the Friday preceding October's\n# last Sunday (i.e., Fri>=23), as this is more consistent with recent practice.\n\n# From Heba Hamad (2022-03-10):\n# summer time will begin in Palestine from Sunday 03-27-2022, 00:00 AM.\n\n# From Heba Hamad (2022-08-30):\n# winter time will begin in Palestine from Saturday 10-29, 02:00 AM by\n# 60 minutes backwards.  Also the state of Palestine adopted the summer\n# and winter time for the years: 2023,2024,2025,2026 ...\n# https://mm.icann.org/pipermail/tz/attachments/20220830/9f024566/Time-0001.pdf\n# (2022-08-31): ... the Saturday before the last Sunday in March and October\n# at 2:00 AM ,for the years from 2023 to 2026.\n# (2022-09-05): https://mtit.pna.ps/Site/New/1453\n\n# From Heba Hamad (2023-03-22):\n# ... summer time will begin in Palestine from Saturday 04-29-2023,\n# 02:00 AM by 60 minutes forward.\n# From Heba Hemad (2023-10-09):\n# ... winter time will begin in Palestine from Saturday 10-28-2023,\n# 02:00 AM by 60 minutes back.\n#\n# From Heba Hamad (2024-01-25):\n# the summer time for the years 2024,2025 will begin in Palestine\n# from Saturday at 02:00 AM by 60 minutes forward as shown below:\n# year date\n# 2024 2024-04-20\n# 2025 2025-04-12\n#\n# From Paul Eggert (2024-01-25):\n# For now, guess that spring and fall transitions will normally\n# continue to use 2022's rules, that during DST Palestine will switch\n# to standard time at 02:00 the last Saturday before Ramadan and back\n# to DST at 02:00 the second Saturday after Ramadan, and that\n# if the normal spring-forward or fall-back transition occurs during\n# Ramadan the former is delayed and the latter advanced.\n# To implement this, I predicted Ramadan-oriented transition dates for\n# 2026 through 2086 by running the following program under GNU Emacs 29.2,\n# with the results integrated by hand into the table below.\n# Predictions after 2086 are approximated without Ramadan.\n#\n# (let ((islamic-year 1447))\n#   (require 'cal-islam)\n#   (while (< islamic-year 1510)\n#     (let ((a (calendar-islamic-to-absolute (list 9 1 islamic-year)))\n#           (b (+ 1 (calendar-islamic-to-absolute (list 10 1 islamic-year))))\n#           (saturday 6))\n#       (while (/= saturday (mod (setq a (1- a)) 7)))\n#       (while (/= saturday (mod b 7))\n#         (setq b (1+ b)))\n#       (setq b (+ 7 b))\n#       (setq a (calendar-gregorian-from-absolute a))\n#       (setq b (calendar-gregorian-from-absolute b))\n#       (insert\n#        (format\n#         (concat \"Rule Palestine\\t%d\\tonly\\t-\\t%s\\t%2d\\t2:00\\t0\\t-\\n\"\n#                 \"Rule Palestine\\t%d\\tonly\\t-\\t%s\\t%2d\\t2:00\\t1:00\\tS\\n\")\n#         (car (cdr (cdr a))) (calendar-month-name (car a) t) (car (cdr a))\n#         (car (cdr (cdr b))) (calendar-month-name (car b) t) (car (cdr b)))))\n#     (setq islamic-year (+ 1 islamic-year))))\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule EgyptAsia\t1957\tonly\t-\tMay\t10\t0:00\t1:00\tS\nRule EgyptAsia\t1957\t1958\t-\tOct\t 1\t0:00\t0\t-\nRule EgyptAsia\t1958\tonly\t-\tMay\t 1\t0:00\t1:00\tS\nRule EgyptAsia\t1959\t1967\t-\tMay\t 1\t1:00\t1:00\tS\nRule EgyptAsia\t1959\t1965\t-\tSep\t30\t3:00\t0\t-\nRule EgyptAsia\t1966\tonly\t-\tOct\t 1\t3:00\t0\t-\n\nRule Palestine\t1999\t2005\t-\tApr\tFri>=15\t0:00\t1:00\tS\nRule Palestine\t1999\t2003\t-\tOct\tFri>=15\t0:00\t0\t-\nRule Palestine\t2004\tonly\t-\tOct\t 1\t1:00\t0\t-\nRule Palestine\t2005\tonly\t-\tOct\t 4\t2:00\t0\t-\nRule Palestine\t2006\t2007\t-\tApr\t 1\t0:00\t1:00\tS\nRule Palestine\t2006\tonly\t-\tSep\t22\t0:00\t0\t-\nRule Palestine\t2007\tonly\t-\tSep\t13\t2:00\t0\t-\nRule Palestine\t2008\t2009\t-\tMar\tlastFri\t0:00\t1:00\tS\nRule Palestine\t2008\tonly\t-\tSep\t 1\t0:00\t0\t-\nRule Palestine\t2009\tonly\t-\tSep\t 4\t1:00\t0\t-\nRule Palestine\t2010\tonly\t-\tMar\t26\t0:00\t1:00\tS\nRule Palestine\t2010\tonly\t-\tAug\t11\t0:00\t0\t-\nRule Palestine\t2011\tonly\t-\tApr\t 1\t0:01\t1:00\tS\nRule Palestine\t2011\tonly\t-\tAug\t 1\t0:00\t0\t-\nRule Palestine\t2011\tonly\t-\tAug\t30\t0:00\t1:00\tS\nRule Palestine\t2011\tonly\t-\tSep\t30\t0:00\t0\t-\nRule Palestine\t2012\t2014\t-\tMar\tlastThu\t24:00\t1:00\tS\nRule Palestine\t2012\tonly\t-\tSep\t21\t1:00\t0\t-\nRule Palestine\t2013\tonly\t-\tSep\t27\t0:00\t0\t-\nRule Palestine\t2014\tonly\t-\tOct\t24\t0:00\t0\t-\nRule Palestine\t2015\tonly\t-\tMar\t28\t0:00\t1:00\tS\nRule Palestine\t2015\tonly\t-\tOct\t23\t1:00\t0\t-\nRule Palestine\t2016\t2018\t-\tMar\tSat<=30\t1:00\t1:00\tS\nRule Palestine\t2016\t2018\t-\tOct\tSat<=30\t1:00\t0\t-\nRule Palestine\t2019\tonly\t-\tMar\t29\t0:00\t1:00\tS\nRule Palestine\t2019\tonly\t-\tOct\tSat<=30\t0:00\t0\t-\nRule Palestine\t2020\t2021\t-\tMar\tSat<=30\t0:00\t1:00\tS\nRule Palestine\t2020\tonly\t-\tOct\t24\t1:00\t0\t-\nRule Palestine\t2021\tonly\t-\tOct\t29\t1:00\t0\t-\nRule Palestine\t2022\tonly\t-\tMar\t27\t0:00\t1:00\tS\nRule Palestine\t2022\t2035\t-\tOct\tSat<=30\t2:00\t0\t-\nRule Palestine\t2023\tonly\t-\tApr\t29\t2:00\t1:00\tS\nRule Palestine\t2024\tonly\t-\tApr\t20\t2:00\t1:00\tS\nRule Palestine\t2025\tonly\t-\tApr\t12\t2:00\t1:00\tS\nRule Palestine\t2026\t2054\t-\tMar\tSat<=30\t2:00\t1:00\tS\nRule Palestine\t2036\tonly\t-\tOct\t18\t2:00\t0\t-\nRule Palestine\t2037\tonly\t-\tOct\t10\t2:00\t0\t-\nRule Palestine\t2038\tonly\t-\tSep\t25\t2:00\t0\t-\nRule Palestine\t2039\tonly\t-\tSep\t17\t2:00\t0\t-\nRule Palestine\t2040\tonly\t-\tSep\t 1\t2:00\t0\t-\nRule Palestine\t2040\tonly\t-\tOct\t20\t2:00\t1:00\tS\nRule Palestine\t2040\t2067\t-\tOct\tSat<=30\t2:00\t0\t-\nRule Palestine\t2041\tonly\t-\tAug\t24\t2:00\t0\t-\nRule Palestine\t2041\tonly\t-\tOct\t 5\t2:00\t1:00\tS\nRule Palestine\t2042\tonly\t-\tAug\t16\t2:00\t0\t-\nRule Palestine\t2042\tonly\t-\tSep\t27\t2:00\t1:00\tS\nRule Palestine\t2043\tonly\t-\tAug\t 1\t2:00\t0\t-\nRule Palestine\t2043\tonly\t-\tSep\t19\t2:00\t1:00\tS\nRule Palestine\t2044\tonly\t-\tJul\t23\t2:00\t0\t-\nRule Palestine\t2044\tonly\t-\tSep\t 3\t2:00\t1:00\tS\nRule Palestine\t2045\tonly\t-\tJul\t15\t2:00\t0\t-\nRule Palestine\t2045\tonly\t-\tAug\t26\t2:00\t1:00\tS\nRule Palestine\t2046\tonly\t-\tJun\t30\t2:00\t0\t-\nRule Palestine\t2046\tonly\t-\tAug\t18\t2:00\t1:00\tS\nRule Palestine\t2047\tonly\t-\tJun\t22\t2:00\t0\t-\nRule Palestine\t2047\tonly\t-\tAug\t 3\t2:00\t1:00\tS\nRule Palestine\t2048\tonly\t-\tJun\t 6\t2:00\t0\t-\nRule Palestine\t2048\tonly\t-\tJul\t25\t2:00\t1:00\tS\nRule Palestine\t2049\tonly\t-\tMay\t29\t2:00\t0\t-\nRule Palestine\t2049\tonly\t-\tJul\t10\t2:00\t1:00\tS\nRule Palestine\t2050\tonly\t-\tMay\t21\t2:00\t0\t-\nRule Palestine\t2050\tonly\t-\tJul\t 2\t2:00\t1:00\tS\nRule Palestine\t2051\tonly\t-\tMay\t 6\t2:00\t0\t-\nRule Palestine\t2051\tonly\t-\tJun\t24\t2:00\t1:00\tS\nRule Palestine\t2052\tonly\t-\tApr\t27\t2:00\t0\t-\nRule Palestine\t2052\tonly\t-\tJun\t 8\t2:00\t1:00\tS\nRule Palestine\t2053\tonly\t-\tApr\t12\t2:00\t0\t-\nRule Palestine\t2053\tonly\t-\tMay\t31\t2:00\t1:00\tS\nRule Palestine\t2054\tonly\t-\tApr\t 4\t2:00\t0\t-\nRule Palestine\t2054\tonly\t-\tMay\t23\t2:00\t1:00\tS\nRule Palestine\t2055\tonly\t-\tMay\t 8\t2:00\t1:00\tS\nRule Palestine\t2056\tonly\t-\tApr\t29\t2:00\t1:00\tS\nRule Palestine\t2057\tonly\t-\tApr\t14\t2:00\t1:00\tS\nRule Palestine\t2058\tonly\t-\tApr\t 6\t2:00\t1:00\tS\nRule Palestine\t2059\tmax\t-\tMar\tSat<=30\t2:00\t1:00\tS\nRule Palestine\t2068\tonly\t-\tOct\t20\t2:00\t0\t-\nRule Palestine\t2069\tonly\t-\tOct\t12\t2:00\t0\t-\nRule Palestine\t2070\tonly\t-\tOct\t 4\t2:00\t0\t-\nRule Palestine\t2071\tonly\t-\tSep\t19\t2:00\t0\t-\nRule Palestine\t2072\tonly\t-\tSep\t10\t2:00\t0\t-\nRule Palestine\t2072\tonly\t-\tOct\t22\t2:00\t1:00\tS\nRule Palestine\t2072\tmax\t-\tOct\tSat<=30\t2:00\t0\t-\nRule Palestine\t2073\tonly\t-\tSep\t 2\t2:00\t0\t-\nRule Palestine\t2073\tonly\t-\tOct\t14\t2:00\t1:00\tS\nRule Palestine\t2074\tonly\t-\tAug\t18\t2:00\t0\t-\nRule Palestine\t2074\tonly\t-\tOct\t 6\t2:00\t1:00\tS\nRule Palestine\t2075\tonly\t-\tAug\t10\t2:00\t0\t-\nRule Palestine\t2075\tonly\t-\tSep\t21\t2:00\t1:00\tS\nRule Palestine\t2076\tonly\t-\tJul\t25\t2:00\t0\t-\nRule Palestine\t2076\tonly\t-\tSep\t12\t2:00\t1:00\tS\nRule Palestine\t2077\tonly\t-\tJul\t17\t2:00\t0\t-\nRule Palestine\t2077\tonly\t-\tSep\t 4\t2:00\t1:00\tS\nRule Palestine\t2078\tonly\t-\tJul\t 9\t2:00\t0\t-\nRule Palestine\t2078\tonly\t-\tAug\t20\t2:00\t1:00\tS\nRule Palestine\t2079\tonly\t-\tJun\t24\t2:00\t0\t-\nRule Palestine\t2079\tonly\t-\tAug\t12\t2:00\t1:00\tS\nRule Palestine\t2080\tonly\t-\tJun\t15\t2:00\t0\t-\nRule Palestine\t2080\tonly\t-\tJul\t27\t2:00\t1:00\tS\nRule Palestine\t2081\tonly\t-\tJun\t 7\t2:00\t0\t-\nRule Palestine\t2081\tonly\t-\tJul\t19\t2:00\t1:00\tS\nRule Palestine\t2082\tonly\t-\tMay\t23\t2:00\t0\t-\nRule Palestine\t2082\tonly\t-\tJul\t11\t2:00\t1:00\tS\nRule Palestine\t2083\tonly\t-\tMay\t15\t2:00\t0\t-\nRule Palestine\t2083\tonly\t-\tJun\t26\t2:00\t1:00\tS\nRule Palestine\t2084\tonly\t-\tApr\t29\t2:00\t0\t-\nRule Palestine\t2084\tonly\t-\tJun\t17\t2:00\t1:00\tS\nRule Palestine\t2085\tonly\t-\tApr\t21\t2:00\t0\t-\nRule Palestine\t2085\tonly\t-\tJun\t 9\t2:00\t1:00\tS\nRule Palestine\t2086\tonly\t-\tApr\t13\t2:00\t0\t-\nRule Palestine\t2086\tonly\t-\tMay\t25\t2:00\t1:00\tS\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAsia/Gaza\t2:17:52\t-\tLMT\t1900 Oct\n\t\t\t2:00\tZion\tEET/EEST 1948 May 15\n\t\t\t2:00 EgyptAsia\tEE%sT\t1967 Jun  5\n\t\t\t2:00\tZion\tI%sT\t1996\n\t\t\t2:00\tJordan\tEE%sT\t1999\n\t\t\t2:00 Palestine\tEE%sT\t2008 Aug 29  0:00\n\t\t\t2:00\t-\tEET\t2008 Sep\n\t\t\t2:00 Palestine\tEE%sT\t2010\n\t\t\t2:00\t-\tEET\t2010 Mar 27  0:01\n\t\t\t2:00 Palestine\tEE%sT\t2011 Aug  1\n\t\t\t2:00\t-\tEET\t2012\n\t\t\t2:00 Palestine\tEE%sT\n\nZone\tAsia/Hebron\t2:20:23\t-\tLMT\t1900 Oct\n\t\t\t2:00\tZion\tEET/EEST 1948 May 15\n\t\t\t2:00 EgyptAsia\tEE%sT\t1967 Jun  5\n\t\t\t2:00\tZion\tI%sT\t1996\n\t\t\t2:00\tJordan\tEE%sT\t1999\n\t\t\t2:00 Palestine\tEE%sT\n\n# Paracel Is\n# no information\n\n# Philippines\n\n# From Paul Eggert (2024-01-21):\n# The Spanish initially used American (west-of-Greenwich) time.\n# It is unknown what time Manila kept when the British occupied it from\n# 1762-10-06 through 1764-04; for now assume it kept American time.\n# On 1844-08-16, Narciso Clavería, governor-general of the\n# Philippines, issued a proclamation announcing that 1844-12-30 was to\n# be immediately followed by 1845-01-01; see R.H. van Gent's\n# History of the International Date Line\n# https://webspace.science.uu.nl/~gent0113/idl/idl_philippines.htm\n\n# From P Chan (2021-05-10):\n# Here's a fairly comprehensive article in Japanese:\n#\thttps://wiki.suikawiki.org/n/Philippine%20Time\n# (2021-05-16):\n# According to the references listed in the article,\n# the periods that the Philippines (Manila) observed DST or used +9 are:\n#\n# 1936-10-31 24:00 to 1937-01-15 24:00\n#\t(Proclamation No. 104, Proclamation No. 126)\n# 1941-12-15 24:00 to 1945-11-30 24:00\n#\t(Proclamation No. 789, Proclamation No. 20)\n# 1954-04-11 24:00 to 1954-06-04 24:00\n#\t(Proclamation No. 13, Proclamation No. 33)\n# 1977-03-27 24:00 to 1977-09-21 24:00\n#\t(Proclamation No. 1629, Proclamation No. 1641)\n# 1990-05-21 00:00 to 1990-07-28 24:00\n#\t(National Emergency Memorandum Order No. 17, Executive Order No. 415)\n#\n# Proclamation No. 104 ... October 30, 1936\n#  https://www.officialgazette.gov.ph/1936/10/30/proclamation-no-104-s-1936/\n# Proclamation No. 126 ... January 15, 1937\n#  https://www.officialgazette.gov.ph/1937/01/15/proclamation-no-126-s-1937/\n# Proclamation No. 789 ... December 13, 1941\n#  https://www.officialgazette.gov.ph/1941/12/13/proclamation-no-789-s-1941/\n# Proclamation No. 20 ... November 11, 1945\n#  https://www.officialgazette.gov.ph/1945/11/11/proclamation-no-20-s-1945/\n# Proclamation No. 13 ... April 6, 1954\n#  https://www.officialgazette.gov.ph/1954/04/06/proclamation-no-13-s-1954/\n# Proclamation No. 33 ... June 3, 1954\n#  https://www.officialgazette.gov.ph/1954/06/03/proclamation-no-33-s-1954/\n# Proclamation No. 1629 ... March 25, 1977\n#  https://www.officialgazette.gov.ph/1977/03/25/proclamation-no-1629-s-1977/\n# Proclamation No. 1641 ...May 26, 1977\n#  https://www.officialgazette.gov.ph/1977/05/26/proclamation-no-1641-s-1977/\n# National Emergency Memorandum Order No. 17 ... May 2, 1990\n#  https://www.officialgazette.gov.ph/1990/05/02/national-emergency-memorandum-order-no-17-s-1990/\n# Executive Order No. 415 ... July 20, 1990\n#  https://www.officialgazette.gov.ph/1990/07/20/executive-order-no-415-s-1990/\n#\n# During WWII, Proclamation No. 789 fixed two periods of DST. The first period\n# was set to continue only until January 31, 1942. But Manila was occupied by\n# the Japanese earlier in the month....\n#\n# For the date of the adoption of standard time, Shank[s] gives 1899-05-11.\n# The article is not able to state the basis of that. I guess it was based on\n# a US War Department Circular issued on that date.\n#\thttps://books.google.com/books?id=JZ1PAAAAYAAJ&pg=RA3-PA8\n#\n# However, according to other sources, standard time was adopted on\n# 1899-09-06.  Also, the LMT was GMT+8:03:52\n#\thttps://books.google.com/books?id=MOYIAQAAIAAJ&pg=PA521\n#\thttps://books.google.com/books?id=lSnqqatpYikC&pg=PA21\n#\n# From Paul Eggert (2024-09-05):\n# The penultimate URL in P Chan's email refers to page 521 of\n# Selga M, The Time Service in the Philippines.\n# Proc Pan-Pacific Science Congress. Vol. 1 (1923), 519-532.\n# It says, \"The change from the meridian 120° 58' 04\" to the 120th implied a\n# change of 3 min. 52s.26 in time; consequently on 6th September, 1899,\n# Manila Observatory gave the noon signal 3 min. 52s.26 later than before\".\n#\n# Wikipedia says the US declared Manila liberated on March 4, 1945;\n# this doesn't affect clocks, just our time zone abbreviation and DST flag.\n\n# From Paul Goyette (2018-06-15) with URLs updated by Guy Harris (2024-02-15):\n# In the Philippines, there is a national law, Republic Act No. 10535\n# which declares the official time here as \"Philippine Standard Time\".\n# The act [1] even specifies use of PST as the abbreviation, although\n# the FAQ provided by PAGASA [2] uses the \"acronym PhST to distinguish\n# it from the Pacific Standard Time (PST).\"\n# [1] https://www.officialgazette.gov.ph/2013/05/15/republic-act-no-10535/\n# [2] https://prsd.pagasa.dost.gov.ph/index.php/28-astronomy/302-philippine-standard-time\n#\n# From Paul Eggert (2018-06-19):\n# I surveyed recent news reports, and my impression is that \"PST\" is\n# more popular among reliable English-language news sources.  This is\n# not just a measure of Google hit counts: it's also the sizes and\n# influence of the sources.  There is no current abbreviation for DST,\n# so use \"PDT\", the usual American style.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tPhil\t1936\tonly\t-\tOct\t31\t24:00\t1:00\tD\nRule\tPhil\t1937\tonly\t-\tJan\t15\t24:00\t0\tS\nRule\tPhil\t1941\tonly\t-\tDec\t15\t24:00\t1:00\tD\n# The following three rules were canceled by Japan:\n#Rule\tPhil\t1942\tonly\t-\tJan\t31\t24:00\t0\tS\n#Rule\tPhil\t1942\tonly\t-\tMar\t 1\t 0:00\t1:00\tD\n#Rule\tPhil\t1942\tonly\t-\tJun\t30\t24:00\t0\tS\nRule\tPhil\t1945\tonly\t-\tNov\t30\t24:00\t0\tS\nRule\tPhil\t1954\tonly\t-\tApr\t11\t24:00\t1:00\tD\nRule\tPhil\t1954\tonly\t-\tJun\t 4\t24:00\t0\tS\nRule\tPhil\t1977\tonly\t-\tMar\t27\t24:00\t1:00\tD\nRule\tPhil\t1977\tonly\t-\tSep\t21\t24:00\t0\tS\nRule\tPhil\t1990\tonly\t-\tMay\t21\t 0:00\t1:00\tD\nRule\tPhil\t1990\tonly\t-\tJul\t28\t24:00\t0\tS\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAsia/Manila\t-15:56:08 -\tLMT\t1844 Dec 31\n\t\t\t8:03:52 -\tLMT\t1899 Sep  6  4:00u\n\t\t\t8:00\tPhil\tP%sT\t1942 Feb 11 24:00\n\t\t\t9:00\t-\tJST\t1945 Mar  4\n\t\t\t8:00\tPhil\tP%sT\n\n# Bahrain\n# Qatar\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAsia/Qatar\t3:26:08 -\tLMT\t1920     # Al Dawhah / Doha\n\t\t\t4:00\t-\t%z\t1972 Jun\n\t\t\t3:00\t-\t%z\n\n# Kuwait\n# Saudi Arabia\n# Yemen\n#\n# Japan's year-round bases in Antarctica match this since 1970.\n#\n# From Paul Eggert (2018-08-29):\n# Time in Saudi Arabia and other countries in the Arabian peninsula was not\n# standardized until 1968 or so; we don't know exactly when, and possibly it\n# has never been made official.  Richard P Hunt, in \"Islam city yielding to\n# modern times\", New York Times (1961-04-09), p 20, wrote that only airlines\n# observed standard time, and that people in Jeddah mostly observed quasi-solar\n# time, doing so by setting their watches at sunrise to 6 o'clock (or to 12\n# o'clock for \"Arab\" time).\n#\n# Timekeeping differed depending on who you were and which part of Saudi\n# Arabia you were in.  In 1969, Elias Antar wrote that although a common\n# practice had been to set one's watch to 12:00 (i.e., midnight) at sunset -\n# which meant that the time on one side of a mountain could differ greatly from\n# the time on the other side - many foreigners set their watches to 6pm\n# instead, while airlines instead used UTC +03 (except in Dhahran, where they\n# used UTC +04), Aramco used UTC +03 with DST, and the Trans-Arabian Pipe Line\n# Company used Aramco time in eastern Saudi Arabia and airline time in western.\n# (The American Military Aid Advisory Group used plain UTC.)  Antar writes,\n# \"A man named Higgins, so the story goes, used to run a local power\n# station. One day, the whole thing became too much for Higgins and he\n# assembled his staff and laid down the law. 'I've had enough of this,' he\n# shrieked. 'It is now 12 o'clock Higgins Time, and from now on this station is\n# going to run on Higgins Time.' And so, until last year, it did.\"  See:\n# Antar E. Dinner at When? Saudi Aramco World, 1969 March/April. 2-3.\n# http://archive.aramcoworld.com/issue/196902/dinner.at.when.htm\n# Also see: Antar EN. Arabian flying is confusing.\n# Port Angeles (WA) Evening News. 1965-03-10. page 3.\n#\n# The TZ database cannot represent quasi-solar time; airline time is the best\n# we can do.  The 1946 foreign air news digest of the U.S. Civil Aeronautics\n# Board (OCLC 42299995) reported that the \"... Arabian Government, inaugurated\n# a weekly Dhahran-Cairo service, via the Saudi Arabian cities of Riyadh and\n# Jidda, on March 14, 1947\".  Shanks & Pottenger guessed 1950; go with the\n# earlier date.\n#\n# Shanks & Pottenger also state that until 1968-05-01 Saudi Arabia had two\n# time zones; the other zone, at UT +04, was in the far eastern part of\n# the country.  Presumably this is documenting airline time.  Ignore this,\n# as it's before our 1970 cutoff.\n#\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAsia/Riyadh\t3:06:52 -\tLMT\t1947 Mar 14\n\t\t\t3:00\t-\t%z\n\n# Singapore\n# taken from Mok Ly Yng (2003-10-30)\n# https://web.archive.org/web/20190822231045/http://www.math.nus.edu.sg/~mathelmr/teaching/timezone.html\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAsia/Singapore\t6:55:25 -\tLMT\t1901 Jan  1\n\t\t\t6:55:25\t-\tSMT\t1905 Jun  1 # Singapore M.T.\n\t\t\t7:00\t-\t%z\t1933 Jan  1\n\t\t\t7:00\t0:20\t%z\t1936 Jan  1\n\t\t\t7:20\t-\t%z\t1941 Sep  1\n\t\t\t7:30\t-\t%z\t1942 Feb 16\n\t\t\t9:00\t-\t%z\t1945 Sep 12\n\t\t\t7:30\t-\t%z\t1981 Dec 31 16:00u\n\t\t\t8:00\t-\t%z\n\n# Spratly Is\n# no information\n\n# Sri Lanka\n\n# From Paul Eggert (2013-02-21):\n# Milne says \"Madras mean time use from May 1, 1898.  Prior to this Colombo\n# mean time, 5h. 4m. 21.9s. F., was used.\"  But 5:04:21.9 differs considerably\n# from Colombo's meridian 5:19:24, so for now ignore Milne and stick with\n# Shanks and Pottenger.\n\n# From Paul Eggert (1996-09-03):\n# \"Sri Lanka advances clock by an hour to avoid blackout\"\n# (<http://www.virtual-pc.com/lankaweb/news/items/240596-2.html>, 1996-05-24,\n# no longer available as of 1999-08-17)\n# reported \"the country's standard time will be put forward by one hour at\n# midnight Friday (1830 GMT) 'in the light of the present power crisis'.\"\n#\n# From Dharmasiri Senanayake, Sri Lanka Media Minister (1996-10-24), as quoted\n# by Shamindra in Daily News - Hot News Section\n# <news:54rka5$m5h@mtinsc01-mgt.ops.worldnet.att.net> (1996-10-26):\n# With effect from 12.30 a.m. on 26th October 1996\n# Sri Lanka will be six (06) hours ahead of GMT.\n\n# From Jesper Nørgaard Welen (2006-04-14), quoting Sri Lanka News Online\n# <http://news.sinhalaya.com/wmview.php?ArtID=11002> (2006-04-13):\n# 0030 hrs on April 15, 2006 (midnight of April 14, 2006 +30 minutes)\n# at present, become 2400 hours of April 14, 2006 (midnight of April 14, 2006).\n\n# From Peter Apps and Ranga Sirila of Reuters (2006-04-12) in:\n# http://today.reuters.co.uk/news/newsArticle.aspx?type=scienceNews&storyID=2006-04-12T172228Z_01_COL295762_RTRIDST_0_SCIENCE-SRILANKA-TIME-DC.XML\n# [The Tamil Tigers] never accepted the original 1996 time change and simply\n# kept their clocks set five and a half hours ahead of Greenwich Mean\n# Time (GMT), in line with neighbor India.\n# From Paul Eggert (2006-04-18):\n# People who live in regions under Tamil control can use [TZ='Asia/Kolkata'],\n# as that zone has agreed with the Tamil areas since our cutoff date of 1970.\n\n# From Sadika Sumanapala (2016-10-19):\n# According to http://www.sltime.org (maintained by Measurement Units,\n# Standards & Services Department, Sri Lanka) abbreviation for Sri Lanka\n# standard time is SLST.\n#\n# From Paul Eggert (2016-10-18):\n# \"SLST\" seems to be reasonably recent and rarely used outside time\n# zone nerd sources.  I searched Google News and found three uses of\n# it in the International Business Times of India in February and\n# March of this year when discussing cricket match times, but nothing\n# since then (though there has been a lot of cricket) and nothing in\n# other English-language news sources.  Our old abbreviation \"LKT\" is\n# even worse.  For now, let's use a numeric abbreviation; we can\n# switch to \"SLST\" if it catches on.\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAsia/Colombo\t5:19:24 -\tLMT\t1880\n\t\t\t5:19:32\t-\tMMT\t1906        # Moratuwa Mean Time\n\t\t\t5:30\t-\t%z\t1942 Jan  5\n\t\t\t5:30\t0:30\t%z\t1942 Sep\n\t\t\t5:30\t1:00\t%z\t1945 Oct 16  2:00\n\t\t\t5:30\t-\t%z\t1996 May 25  0:00\n\t\t\t6:30\t-\t%z\t1996 Oct 26  0:30\n\t\t\t6:00\t-\t%z\t2006 Apr 15  0:30\n\t\t\t5:30\t-\t%z\n\n# Syria\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tSyria\t1920\t1923\t-\tApr\tSun>=15\t2:00\t1:00\tS\nRule\tSyria\t1920\t1923\t-\tOct\tSun>=1\t2:00\t0\t-\nRule\tSyria\t1962\tonly\t-\tApr\t29\t2:00\t1:00\tS\nRule\tSyria\t1962\tonly\t-\tOct\t1\t2:00\t0\t-\nRule\tSyria\t1963\t1965\t-\tMay\t1\t2:00\t1:00\tS\nRule\tSyria\t1963\tonly\t-\tSep\t30\t2:00\t0\t-\nRule\tSyria\t1964\tonly\t-\tOct\t1\t2:00\t0\t-\nRule\tSyria\t1965\tonly\t-\tSep\t30\t2:00\t0\t-\nRule\tSyria\t1966\tonly\t-\tApr\t24\t2:00\t1:00\tS\nRule\tSyria\t1966\t1976\t-\tOct\t1\t2:00\t0\t-\nRule\tSyria\t1967\t1978\t-\tMay\t1\t2:00\t1:00\tS\nRule\tSyria\t1977\t1978\t-\tSep\t1\t2:00\t0\t-\nRule\tSyria\t1983\t1984\t-\tApr\t9\t2:00\t1:00\tS\nRule\tSyria\t1983\t1984\t-\tOct\t1\t2:00\t0\t-\nRule\tSyria\t1986\tonly\t-\tFeb\t16\t2:00\t1:00\tS\nRule\tSyria\t1986\tonly\t-\tOct\t9\t2:00\t0\t-\nRule\tSyria\t1987\tonly\t-\tMar\t1\t2:00\t1:00\tS\nRule\tSyria\t1987\t1988\t-\tOct\t31\t2:00\t0\t-\nRule\tSyria\t1988\tonly\t-\tMar\t15\t2:00\t1:00\tS\nRule\tSyria\t1989\tonly\t-\tMar\t31\t2:00\t1:00\tS\nRule\tSyria\t1989\tonly\t-\tOct\t1\t2:00\t0\t-\nRule\tSyria\t1990\tonly\t-\tApr\t1\t2:00\t1:00\tS\nRule\tSyria\t1990\tonly\t-\tSep\t30\t2:00\t0\t-\nRule\tSyria\t1991\tonly\t-\tApr\t 1\t0:00\t1:00\tS\nRule\tSyria\t1991\t1992\t-\tOct\t 1\t0:00\t0\t-\nRule\tSyria\t1992\tonly\t-\tApr\t 8\t0:00\t1:00\tS\nRule\tSyria\t1993\tonly\t-\tMar\t26\t0:00\t1:00\tS\nRule\tSyria\t1993\tonly\t-\tSep\t25\t0:00\t0\t-\n# IATA SSIM (1998-02) says 1998-04-02;\n# (1998-09) says 1999-03-29 and 1999-09-29; (1999-02) says 1999-04-02,\n# 2000-04-02, and 2001-04-02; (1999-09) says 2000-03-31 and 2001-03-31;\n# (2006) says 2006-03-31 and 2006-09-22;\n# for now ignore all these claims and go with Shanks & Pottenger,\n# except for the 2006-09-22 claim (which seems right for Ramadan).\nRule\tSyria\t1994\t1996\t-\tApr\t 1\t0:00\t1:00\tS\nRule\tSyria\t1994\t2005\t-\tOct\t 1\t0:00\t0\t-\nRule\tSyria\t1997\t1998\t-\tMar\tlastMon\t0:00\t1:00\tS\nRule\tSyria\t1999\t2006\t-\tApr\t 1\t0:00\t1:00\tS\n# From Stephen Colebourne (2006-09-18):\n# According to IATA data, Syria will change DST on 21st September [21:00 UTC]\n# this year [only]....  This is probably related to Ramadan, like Egypt.\nRule\tSyria\t2006\tonly\t-\tSep\t22\t0:00\t0\t-\n# From Paul Eggert (2007-03-29):\n# Today the AP reported \"Syria will switch to summertime at midnight Thursday.\"\n# http://www.iht.com/articles/ap/2007/03/29/africa/ME-GEN-Syria-Time-Change.php\nRule\tSyria\t2007\tonly\t-\tMar\tlastFri\t0:00\t1:00\tS\n# From Jesper Nørgaard (2007-10-27):\n# The sister center ICARDA of my work CIMMYT is confirming that Syria DST will\n# not take place 1st November at 0:00 o'clock but 1st November at 24:00 or\n# rather Midnight between Thursday and Friday. This does make more sense than\n# having it between Wednesday and Thursday (two workdays in Syria) since the\n# weekend in Syria is not Saturday and Sunday, but Friday and Saturday. So now\n# it is implemented at midnight of the last workday before weekend...\n#\n# From Steffen Thorsen (2007-10-27):\n# Jesper Nørgaard Welen wrote:\n#\n# > \"Winter local time in Syria will be observed at midnight of Thursday 1\n# > November 2007, and the clock will be put back 1 hour.\"\n#\n# I found confirmation on this in this gov.sy-article (Arabic):\n# http://wehda.alwehda.gov.sy/_print_veiw.asp?FileName=12521710520070926111247\n#\n# which using Google's translate tools says:\n# Council of Ministers also approved the commencement of work on\n# identifying the winter time as of Friday, 2/11/2007 where the 60th\n# minute delay at midnight Thursday 1/11/2007.\nRule\tSyria\t2007\tonly\t-\tNov\t Fri>=1\t0:00\t0\t-\n\n# From Stephen Colebourne (2008-03-17):\n# For everyone's info, I saw an IATA time zone change for [Syria] for\n# this month (March 2008) in the last day or so....\n# Country     Time Standard   --- DST Start ---   --- DST End ---  DST\n# Name        Zone Variation   Time    Date        Time    Date\n# Variation\n# Syrian Arab\n# Republic    SY    +0200      2200  03APR08       2100  30SEP08   +0300\n#                              2200  02APR09       2100  30SEP09   +0300\n#                              2200  01APR10       2100  30SEP10   +0300\n\n# From Arthur David Olson (2008-03-17):\n# Here's a link to English-language coverage by the Syrian Arab News\n# Agency (SANA)...\n# http://www.sana.sy/eng/21/2008/03/11/165173.htm\n# ...which reads (in part) \"The Cabinet approved the suggestion of the\n# Ministry of Electricity to begin daylight savings time on Friday April\n# 4th, advancing clocks one hour ahead on midnight of Thursday April 3rd.\"\n# Since Syria is two hours east of UTC, the 2200 and 2100 transition times\n# shown above match up with midnight in Syria.\n\n# From Arthur David Olson (2008-03-18):\n# My best guess at a Syrian rule is \"the Friday nearest April 1\";\n# coding that involves either using a \"Mar Fri>=29\" construct that old time zone\n# compilers can't handle  or having multiple Rules (a la Israel).\n# For now, use \"Apr Fri>=1\", and go with IATA on a uniform Sep 30 end.\n\n# From Steffen Thorsen (2008-10-07):\n# Syria has now officially decided to end DST on 2008-11-01 this year,\n# according to the following article in the Syrian Arab News Agency (SANA).\n#\n# The article is in Arabic, and seems to tell that they will go back to\n# winter time on 2008-11-01 at 00:00 local daylight time (delaying/setting\n# clocks back 60 minutes).\n#\n# http://sana.sy/ara/2/2008/10/07/195459.htm\n\n# From Steffen Thorsen (2009-03-19):\n# Syria will start DST on 2009-03-27 00:00 this year according to many sources,\n# two examples:\n#\n# http://www.sana.sy/eng/21/2009/03/17/217563.htm\n# (English, Syrian Arab News # Agency)\n# http://thawra.alwehda.gov.sy/_View_news2.asp?FileName=94459258720090318012209\n# (Arabic, gov-site)\n#\n# We have not found any sources saying anything about when DST ends this year.\n#\n# Our summary\n# https://www.timeanddate.com/news/time/syria-dst-starts-march-27-2009.html\n\n# From Steffen Thorsen (2009-10-27):\n# The Syrian Arab News Network on 2009-09-29 reported that Syria will\n# revert back to winter (standard) time on midnight between Thursday\n# 2009-10-29 and Friday 2009-10-30:\n# http://www.sana.sy/ara/2/2009/09/29/247012.htm (Arabic)\n\n# From Arthur David Olson (2009-10-28):\n# We'll see if future DST switching times turn out to be end of the last\n# Thursday of the month or the start of the last Friday of the month or\n# something else. For now, use the start of the last Friday.\n\n# From Steffen Thorsen (2010-03-17):\n# The \"Syrian News Station\" reported on 2010-03-16 that the Council of\n# Ministers has decided that Syria will start DST on midnight Thursday\n# 2010-04-01: (midnight between Thursday and Friday):\n# http://sns.sy/sns/?path=news/read/11421 (Arabic)\n\n# From Steffen Thorsen (2012-03-26):\n# Today, Syria's government announced that they will start DST early on Friday\n# (00:00). This is a bit earlier than the past two years.\n#\n# From Syrian Arab News Agency, in Arabic:\n# http://www.sana.sy/ara/2/2012/03/26/408215.htm\n#\n# Our brief summary:\n# https://www.timeanddate.com/news/time/syria-dst-2012.html\n\n# From Steffen Thorsen (2022-10-05):\n# Syria is adopting year-round DST, starting this autumn....\n# From https://www.enabbaladi.net/archives/607812\n# \"This [the decision] came after the weekly government meeting today,\n# Tuesday 4 October ...\"\n#\n# From Paul Eggert (2022-10-05):\n# Like Jordan, model this as a transition from EEST +03 (DST) to plain +03\n# (non-DST) at the point where DST would otherwise have ended.\n\nRule\tSyria\t2008\tonly\t-\tApr\tFri>=1\t0:00\t1:00\tS\nRule\tSyria\t2008\tonly\t-\tNov\t1\t0:00\t0\t-\nRule\tSyria\t2009\tonly\t-\tMar\tlastFri\t0:00\t1:00\tS\nRule\tSyria\t2010\t2011\t-\tApr\tFri>=1\t0:00\t1:00\tS\nRule\tSyria\t2012\t2022\t-\tMar\tlastFri\t0:00\t1:00\tS\nRule\tSyria\t2009\t2022\t-\tOct\tlastFri\t0:00\t0\t-\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAsia/Damascus\t2:25:12 -\tLMT\t1920 # Dimashq\n\t\t\t2:00\tSyria\tEE%sT\t2022 Oct 28 0:00\n\t\t\t3:00\t-\t%z\n\n# Tajikistan\n# From Shanks & Pottenger.\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAsia/Dushanbe\t4:35:12 -\tLMT\t1924 May  2\n\t\t\t5:00\t-\t%z\t1930 Jun 21\n\t\t\t6:00 RussiaAsia %z\t1991 Mar 31  2:00s\n\t\t\t5:00\t1:00\t%z\t1991 Sep  9  2:00s\n\t\t\t5:00\t-\t%z\n\n# Cambodia\n# Christmas I\n# Laos\n# Thailand\n# Vietnam (northern)\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAsia/Bangkok\t6:42:04\t-\tLMT\t1880\n\t\t\t6:42:04\t-\tBMT\t1920 Apr # Bangkok Mean Time\n\t\t\t7:00\t-\t%z\n\n# Turkmenistan\n# From Shanks & Pottenger.\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAsia/Ashgabat\t3:53:32 -\tLMT\t1924 May  2 # or Ashkhabad\n\t\t\t4:00\t-\t%z\t1930 Jun 21\n\t\t\t5:00 RussiaAsia\t%z\t1991 Mar 31  2:00\n\t\t\t4:00 RussiaAsia\t%z\t1992 Jan 19  2:00\n\t\t\t5:00\t-\t%z\n\n# Oman\n# Réunion\n# Seychelles\n# United Arab Emirates\n#\n# The Crozet Is also observe Réunion time; see the 'antarctica' file.\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAsia/Dubai\t3:41:12 -\tLMT\t1920\n\t\t\t4:00\t-\t%z\n\n# Uzbekistan\n# Byalokoz 1919 says Uzbekistan was 4:27:53.\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAsia/Samarkand\t4:27:53 -\tLMT\t1924 May  2\n\t\t\t4:00\t-\t%z\t1930 Jun 21\n\t\t\t5:00\t-\t%z\t1981 Apr  1\n\t\t\t5:00\t1:00\t%z\t1981 Oct  1\n\t\t\t6:00\t-\t%z\t1982 Apr  1\n\t\t\t5:00 RussiaAsia\t%z\t1992\n\t\t\t5:00\t-\t%z\n# Milne says Tashkent was 4:37:10.8.\n\t\t#STDOFF\t4:37:10.8\nZone\tAsia/Tashkent\t4:37:11 -\tLMT\t1924 May  2\n\t\t\t5:00\t-\t%z\t1930 Jun 21\n\t\t\t6:00 RussiaAsia\t%z\t1991 Mar 31  2:00\n\t\t\t5:00 RussiaAsia\t%z\t1992\n\t\t\t5:00\t-\t%z\n\n# Vietnam (southern)\n\n# From Paul Eggert (2014-10-04):\n# Milne gives 7:16:56 for the meridian of Saigon in 1899, as being\n# used in Lower Laos, Cambodia, and Annam.  But this is quite a ways\n# from Saigon's location.  For now, ignore this and stick with Shanks\n# and Pottenger for LMT before 1906.\n\n# From Arthur David Olson (2008-03-18):\n# The English-language name of Vietnam's most populous city is \"Ho Chi Minh\n# City\"; use Ho_Chi_Minh below to avoid a name of more than 14 characters.\n\n# From Paul Eggert (2024-01-14) after a 2014 heads-up from Trần Ngọc Quân\n# and a 2024-01-14 heads-up from Đoàn Trần Công Danh:\n# Trần Tiến Bình's authoritative book \"Lịch Việt Nam: thế kỷ XX-XXI (1901-2100)\"\n# (Nhà xuất bản Văn Hoá - Thông Tin, Hanoi, 2005), pp 49-50,\n# is quoted verbatim in:\n# http://www.thoigian.com.vn/?mPage=P80D01\n# is translated by Brian Inglis in:\n# https://mm.icann.org/pipermail/tz/2014-October/021654.html\n# and is the basis for the information below.\n#\n# The 1906 transition was effective July 1 and standardized Indochina to\n# Phù Liễn Observatory, legally 104° 17' 17\" east of Paris.\n# It's unclear whether this meant legal Paris Mean Time (00:09:21) or\n# the Paris Meridian; for now guess the former and round the exact\n# 07:06:30.1333... to 07:06:30.13 as the legal spec used 66 2/3 ms precision.\n# which is used below even though the modern-day Phù Liễn Observatory\n# is closer to 07:06:31.  Abbreviate Phù Liễn Mean Time as PLMT.\n#\n# The following transitions occurred in Indochina in general (before 1954)\n# and in South Vietnam in particular (after 1954):\n# To 07:00 on 1911-05-01.\n# To 08:00 on 1942-12-31 at 23:00.\n# To 09:00 on 1945-03-14 at 23:00.\n# To 07:00 on 1945-09-02 in Vietnam.\n# To 08:00 on 1947-04-01 in French-controlled Indochina.\n# To 07:00 on 1955-07-01 in South Vietnam.\n# To 08:00 on 1959-12-31 at 23:00 in South Vietnam.\n# To 07:00 on 1975-06-13 in South Vietnam.\n#\n# Trần cites the following sources; it's unclear which supplied the info above.\n#\n#   Hoàng Xuân Hãn: \"Lịch và lịch Việt Nam\". Tập san Khoa học Xã hội,\n#   No. 9, Paris, February 1982.\n#\n#   Lê Thành Lân: \"Lịch và niên biểu lịch sử hai mươi thế kỷ (0001-2010)\",\n#   NXB Thống kê, Hanoi, 2000.\n#\n#   Lê Thành Lân: \"Lịch hai thế kỷ (1802-2010) và các lịch vĩnh cửu\",\n#   NXB Thuận Hoá, Huế, 1995.\n#\n# Here is the decision for the September 1945 transition:\n# Võ Nguyên Giáp, Việt Nam Dân Quốc Công Báo, No. 1 (1945-09-29), page 13\n# http://baochi.nlv.gov.vn/baochi/cgi-bin/baochi?a=d&d=JwvzO19450929.2.5&dliv=none\n# It says that on 1945-09-01 at 24:00, Vietnam moved back two hours, to +07.\n# It also mentions a 1945-03-29 decree (by a Japanese Governor-General)\n# to set the time zone to +09, but does not say whether that decree\n# merely legalized an earlier change to +09.\n#\n# July 1955 transition:\n# Ngô Đình Diệm, Công Báo Việt Nam, No. 92 (1955-07-02), page 1780-1781\n# Ordinance (Dụ) No. 46 (1955-06-25)\n# http://ddsnext.crl.edu/titles/32341#?c=0&m=29&s=0&cv=4&r=0&xywh=-89%2C342%2C1724%2C1216\n# It says that on 1955-07-01 at 01:00, South Vietnam moved back 1 hour (to +07).\n#\n# December 1959 transition:\n# Ngô Đình Diệm, Công Báo Việt Nam Cộng Hòa, 1960 part 1 (1960-01-02), page 62\n# Decree (Sắc lệnh) No. 362-TTP (1959-12-30)\n# http://ddsnext.crl.edu/titles/32341#?c=0&m=138&s=0&cv=793&r=0&xywh=-54%2C1504%2C1705%2C1202\n# It says that on 1959-12-31 at 23:00, South Vietnam moved forward 1 hour (to +08).\n\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n\t\t#STDOFF\t7:06:30.13\nZone Asia/Ho_Chi_Minh\t7:06:30 -\tLMT\t1906 Jul  1\n\t\t\t7:06:30\t-\tPLMT\t1911 May  1 # Phù Liễn MT\n\t\t\t7:00\t-\t%z\t1942 Dec 31 23:00\n\t\t\t8:00\t-\t%z\t1945 Mar 14 23:00\n\t\t\t9:00\t-\t%z\t1945 Sep  1 24:00\n\t\t\t7:00\t-\t%z\t1947 Apr  1\n\t\t\t8:00\t-\t%z\t1955 Jul  1 01:00\n\t\t\t7:00\t-\t%z\t1959 Dec 31 23:00\n\t\t\t8:00\t-\t%z\t1975 Jun 13\n\t\t\t7:00\t-\t%z\n\n# From Paul Eggert (2019-02-19):\n#\n# The Ho Chi Minh entry suffices for most purposes as it agrees with all of\n# Vietnam since 1975-06-13.  Presumably clocks often changed in south Vietnam\n# in the early 1970s as locations changed hands during the war; however the\n# details are unknown and would likely be too voluminous for this database.\n#\n# For timestamps in north Vietnam back to 1970 (the tzdb cutoff),\n# use Asia/Bangkok; see the VN entries in the file zone1970.tab.\n# For timestamps before 1970, see Asia/Hanoi in the file 'backzone'.\n"
        },
        {
          "name": "australasia",
          "type": "blob",
          "size": 96.130859375,
          "content": "# tzdb data for Australasia and environs, and for much of the Pacific\n\n# This file is in the public domain, so clarified as of\n# 2009-05-17 by Arthur David Olson.\n\n# This file also includes Pacific islands.\n\n# Notes are at the end of this file\n\n###############################################################################\n\n# Australia\n\n# Please see the notes below for the controversy about \"EST\" versus \"AEST\" etc.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tAus\t1917\tonly\t-\tJan\t 1\t2:00s\t1:00\tD\nRule\tAus\t1917\tonly\t-\tMar\tlastSun\t2:00s\t0\tS\nRule\tAus\t1942\tonly\t-\tJan\t 1\t2:00s\t1:00\tD\nRule\tAus\t1942\tonly\t-\tMar\tlastSun\t2:00s\t0\tS\nRule\tAus\t1942\tonly\t-\tSep\t27\t2:00s\t1:00\tD\nRule\tAus\t1943\t1944\t-\tMar\tlastSun\t2:00s\t0\tS\nRule\tAus\t1943\tonly\t-\tOct\t 3\t2:00s\t1:00\tD\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n# Northern Territory\nZone Australia/Darwin\t 8:43:20 -\tLMT\t1895 Feb\n\t\t\t 9:00\t-\tACST\t1899 May\n\t\t\t 9:30\tAus\tAC%sT\n# Western Australia\n#\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tAW\t1974\tonly\t-\tOct\tlastSun\t2:00s\t1:00\tD\nRule\tAW\t1975\tonly\t-\tMar\tSun>=1\t2:00s\t0\tS\nRule\tAW\t1983\tonly\t-\tOct\tlastSun\t2:00s\t1:00\tD\nRule\tAW\t1984\tonly\t-\tMar\tSun>=1\t2:00s\t0\tS\nRule\tAW\t1991\tonly\t-\tNov\t17\t2:00s\t1:00\tD\nRule\tAW\t1992\tonly\t-\tMar\tSun>=1\t2:00s\t0\tS\nRule\tAW\t2006\tonly\t-\tDec\t 3\t2:00s\t1:00\tD\nRule\tAW\t2007\t2009\t-\tMar\tlastSun\t2:00s\t0\tS\nRule\tAW\t2007\t2008\t-\tOct\tlastSun\t2:00s\t1:00\tD\nZone Australia/Perth\t 7:43:24 -\tLMT\t1895 Dec\n\t\t\t 8:00\tAus\tAW%sT\t1943 Jul\n\t\t\t 8:00\tAW\tAW%sT\nZone Australia/Eucla\t 8:35:28 -\tLMT\t1895 Dec\n\t\t\t 8:45\tAus\t%z\t1943 Jul\n\t\t\t 8:45\tAW\t%z\n\n# Queensland\n#\n# From Alex Livingston (1996-11-01):\n# I have heard or read more than once that some resort islands off the coast\n# of Queensland chose to keep observing daylight-saving time even after\n# Queensland ceased to.\n#\n# From Paul Eggert (1996-11-22):\n# IATA SSIM (1993-02/1994-09) say that the Holiday Islands (Hayman, Lindeman,\n# Hamilton) observed DST for two years after the rest of Queensland stopped.\n# Hamilton is the largest, but there is also a Hamilton in Victoria,\n# so use Lindeman.\n#\n# From J William Piggott (2016-02-20):\n# There is no location named Holiday Islands in Queensland Australia; holiday\n# islands is a colloquial term used globally.  Hayman and Lindeman are at the\n# north and south extremes of the Whitsunday Islands archipelago, and\n# Hamilton is in between; it is reasonable to believe that this time zone\n# applies to all of the Whitsundays.\n# http://www.australia.gov.au/about-australia/australian-story/austn-islands\n#\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tAQ\t1971\tonly\t-\tOct\tlastSun\t2:00s\t1:00\tD\nRule\tAQ\t1972\tonly\t-\tFeb\tlastSun\t2:00s\t0\tS\nRule\tAQ\t1989\t1991\t-\tOct\tlastSun\t2:00s\t1:00\tD\nRule\tAQ\t1990\t1992\t-\tMar\tSun>=1\t2:00s\t0\tS\nRule\tHoliday\t1992\t1993\t-\tOct\tlastSun\t2:00s\t1:00\tD\nRule\tHoliday\t1993\t1994\t-\tMar\tSun>=1\t2:00s\t0\tS\nZone Australia/Brisbane\t10:12:08 -\tLMT\t1895\n\t\t\t10:00\tAus\tAE%sT\t1971\n\t\t\t10:00\tAQ\tAE%sT\nZone Australia/Lindeman  9:55:56 -\tLMT\t1895\n\t\t\t10:00\tAus\tAE%sT\t1971\n\t\t\t10:00\tAQ\tAE%sT\t1992 Jul\n\t\t\t10:00\tHoliday\tAE%sT\n\n# South Australia\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tAS\t1971\t1985\t-\tOct\tlastSun\t2:00s\t1:00\tD\nRule\tAS\t1986\tonly\t-\tOct\t19\t2:00s\t1:00\tD\nRule\tAS\t1987\t2007\t-\tOct\tlastSun\t2:00s\t1:00\tD\nRule\tAS\t1972\tonly\t-\tFeb\t27\t2:00s\t0\tS\nRule\tAS\t1973\t1985\t-\tMar\tSun>=1\t2:00s\t0\tS\nRule\tAS\t1986\t1990\t-\tMar\tSun>=15\t2:00s\t0\tS\nRule\tAS\t1991\tonly\t-\tMar\t3\t2:00s\t0\tS\nRule\tAS\t1992\tonly\t-\tMar\t22\t2:00s\t0\tS\nRule\tAS\t1993\tonly\t-\tMar\t7\t2:00s\t0\tS\nRule\tAS\t1994\tonly\t-\tMar\t20\t2:00s\t0\tS\nRule\tAS\t1995\t2005\t-\tMar\tlastSun\t2:00s\t0\tS\nRule\tAS\t2006\tonly\t-\tApr\t2\t2:00s\t0\tS\nRule\tAS\t2007\tonly\t-\tMar\tlastSun\t2:00s\t0\tS\nRule\tAS\t2008\tmax\t-\tApr\tSun>=1\t2:00s\t0\tS\nRule\tAS\t2008\tmax\t-\tOct\tSun>=1\t2:00s\t1:00\tD\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone Australia/Adelaide\t9:14:20 -\tLMT\t1895 Feb\n\t\t\t9:00\t-\tACST\t1899 May\n\t\t\t9:30\tAus\tAC%sT\t1971\n\t\t\t9:30\tAS\tAC%sT\n\n# Tasmania\n#\n# From Paul Eggert (2005-08-16):\n# http://www.bom.gov.au/climate/averages/tables/dst_times.shtml\n# says King Island didn't observe DST from WWII until late 1971.\n#\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tAT\t1916\tonly\t-\tOct\tSun>=1\t2:00s\t1:00\tD\nRule\tAT\t1917\tonly\t-\tMar\tlastSun\t2:00s\t0\tS\nRule\tAT\t1917\t1918\t-\tOct\tSun>=22\t2:00s\t1:00\tD\nRule\tAT\t1918\t1919\t-\tMar\tSun>=1\t2:00s\t0\tS\nRule\tAT\t1967\tonly\t-\tOct\tSun>=1\t2:00s\t1:00\tD\nRule\tAT\t1968\tonly\t-\tMar\tSun>=29\t2:00s\t0\tS\nRule\tAT\t1968\t1985\t-\tOct\tlastSun\t2:00s\t1:00\tD\nRule\tAT\t1969\t1971\t-\tMar\tSun>=8\t2:00s\t0\tS\nRule\tAT\t1972\tonly\t-\tFeb\tlastSun\t2:00s\t0\tS\nRule\tAT\t1973\t1981\t-\tMar\tSun>=1\t2:00s\t0\tS\nRule\tAT\t1982\t1983\t-\tMar\tlastSun\t2:00s\t0\tS\nRule\tAT\t1984\t1986\t-\tMar\tSun>=1\t2:00s\t0\tS\nRule\tAT\t1986\tonly\t-\tOct\tSun>=15\t2:00s\t1:00\tD\nRule\tAT\t1987\t1990\t-\tMar\tSun>=15\t2:00s\t0\tS\nRule\tAT\t1987\tonly\t-\tOct\tSun>=22\t2:00s\t1:00\tD\nRule\tAT\t1988\t1990\t-\tOct\tlastSun\t2:00s\t1:00\tD\nRule\tAT\t1991\t1999\t-\tOct\tSun>=1\t2:00s\t1:00\tD\nRule\tAT\t1991\t2005\t-\tMar\tlastSun\t2:00s\t0\tS\nRule\tAT\t2000\tonly\t-\tAug\tlastSun\t2:00s\t1:00\tD\nRule\tAT\t2001\tmax\t-\tOct\tSun>=1\t2:00s\t1:00\tD\nRule\tAT\t2006\tonly\t-\tApr\tSun>=1\t2:00s\t0\tS\nRule\tAT\t2007\tonly\t-\tMar\tlastSun\t2:00s\t0\tS\nRule\tAT\t2008\tmax\t-\tApr\tSun>=1\t2:00s\t0\tS\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone Australia/Hobart\t9:49:16\t-\tLMT\t1895 Sep\n\t\t\t10:00\tAT\tAE%sT\t1919 Oct 24\n\t\t\t10:00\tAus\tAE%sT\t1967\n\t\t\t10:00\tAT\tAE%sT\n\n# Victoria\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tAV\t1971\t1985\t-\tOct\tlastSun\t2:00s\t1:00\tD\nRule\tAV\t1972\tonly\t-\tFeb\tlastSun\t2:00s\t0\tS\nRule\tAV\t1973\t1985\t-\tMar\tSun>=1\t2:00s\t0\tS\nRule\tAV\t1986\t1990\t-\tMar\tSun>=15\t2:00s\t0\tS\nRule\tAV\t1986\t1987\t-\tOct\tSun>=15\t2:00s\t1:00\tD\nRule\tAV\t1988\t1999\t-\tOct\tlastSun\t2:00s\t1:00\tD\nRule\tAV\t1991\t1994\t-\tMar\tSun>=1\t2:00s\t0\tS\nRule\tAV\t1995\t2005\t-\tMar\tlastSun\t2:00s\t0\tS\nRule\tAV\t2000\tonly\t-\tAug\tlastSun\t2:00s\t1:00\tD\nRule\tAV\t2001\t2007\t-\tOct\tlastSun\t2:00s\t1:00\tD\nRule\tAV\t2006\tonly\t-\tApr\tSun>=1\t2:00s\t0\tS\nRule\tAV\t2007\tonly\t-\tMar\tlastSun\t2:00s\t0\tS\nRule\tAV\t2008\tmax\t-\tApr\tSun>=1\t2:00s\t0\tS\nRule\tAV\t2008\tmax\t-\tOct\tSun>=1\t2:00s\t1:00\tD\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone Australia/Melbourne 9:39:52 -\tLMT\t1895 Feb\n\t\t\t10:00\tAus\tAE%sT\t1971\n\t\t\t10:00\tAV\tAE%sT\n\n# New South Wales\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tAN\t1971\t1985\t-\tOct\tlastSun\t2:00s\t1:00\tD\nRule\tAN\t1972\tonly\t-\tFeb\t27\t2:00s\t0\tS\nRule\tAN\t1973\t1981\t-\tMar\tSun>=1\t2:00s\t0\tS\nRule\tAN\t1982\tonly\t-\tApr\tSun>=1\t2:00s\t0\tS\nRule\tAN\t1983\t1985\t-\tMar\tSun>=1\t2:00s\t0\tS\nRule\tAN\t1986\t1989\t-\tMar\tSun>=15\t2:00s\t0\tS\nRule\tAN\t1986\tonly\t-\tOct\t19\t2:00s\t1:00\tD\nRule\tAN\t1987\t1999\t-\tOct\tlastSun\t2:00s\t1:00\tD\nRule\tAN\t1990\t1995\t-\tMar\tSun>=1\t2:00s\t0\tS\nRule\tAN\t1996\t2005\t-\tMar\tlastSun\t2:00s\t0\tS\nRule\tAN\t2000\tonly\t-\tAug\tlastSun\t2:00s\t1:00\tD\nRule\tAN\t2001\t2007\t-\tOct\tlastSun\t2:00s\t1:00\tD\nRule\tAN\t2006\tonly\t-\tApr\tSun>=1\t2:00s\t0\tS\nRule\tAN\t2007\tonly\t-\tMar\tlastSun\t2:00s\t0\tS\nRule\tAN\t2008\tmax\t-\tApr\tSun>=1\t2:00s\t0\tS\nRule\tAN\t2008\tmax\t-\tOct\tSun>=1\t2:00s\t1:00\tD\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone Australia/Sydney\t10:04:52 -\tLMT\t1895 Feb\n\t\t\t10:00\tAus\tAE%sT\t1971\n\t\t\t10:00\tAN\tAE%sT\nZone Australia/Broken_Hill 9:25:48 -\tLMT\t1895 Feb\n\t\t\t10:00\t-\tAEST\t1896 Aug 23\n\t\t\t9:00\t-\tACST\t1899 May\n\t\t\t9:30\tAus\tAC%sT\t1971\n\t\t\t9:30\tAN\tAC%sT\t2000\n\t\t\t9:30\tAS\tAC%sT\n\n# Lord Howe Island\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tLH\t1981\t1984\t-\tOct\tlastSun\t2:00\t1:00\t-\nRule\tLH\t1982\t1985\t-\tMar\tSun>=1\t2:00\t0\t-\nRule\tLH\t1985\tonly\t-\tOct\tlastSun\t2:00\t0:30\t-\nRule\tLH\t1986\t1989\t-\tMar\tSun>=15\t2:00\t0\t-\nRule\tLH\t1986\tonly\t-\tOct\t19\t2:00\t0:30\t-\nRule\tLH\t1987\t1999\t-\tOct\tlastSun\t2:00\t0:30\t-\nRule\tLH\t1990\t1995\t-\tMar\tSun>=1\t2:00\t0\t-\nRule\tLH\t1996\t2005\t-\tMar\tlastSun\t2:00\t0\t-\nRule\tLH\t2000\tonly\t-\tAug\tlastSun\t2:00\t0:30\t-\nRule\tLH\t2001\t2007\t-\tOct\tlastSun\t2:00\t0:30\t-\nRule\tLH\t2006\tonly\t-\tApr\tSun>=1\t2:00\t0\t-\nRule\tLH\t2007\tonly\t-\tMar\tlastSun\t2:00\t0\t-\nRule\tLH\t2008\tmax\t-\tApr\tSun>=1\t2:00\t0\t-\nRule\tLH\t2008\tmax\t-\tOct\tSun>=1\t2:00\t0:30\t-\nZone Australia/Lord_Howe 10:36:20 -\tLMT\t1895 Feb\n\t\t\t10:00\t-\tAEST\t1981 Mar\n\t\t\t10:30\tLH\t%z\t1985 Jul\n\t\t\t10:30\tLH\t%z\n\n# Australian miscellany\n#\n# Ashmore Is, Cartier\n# no indigenous inhabitants; only seasonal caretakers\n# no times are set\n#\n# Coral Sea Is\n# no indigenous inhabitants; only meteorologists\n# no times are set\n#\n# Macquarie\n# Permanent occupation (scientific station) 1911-1915 and since 25 March 1948;\n# sealing and penguin oil station operated Nov 1899 to Apr 1919.  See the\n# Tasmania Parks & Wildlife Service history of sealing at Macquarie Island\n# http://www.parks.tas.gov.au/index.aspx?base=1828\n# http://www.parks.tas.gov.au/index.aspx?base=1831\n# Guess that it was like Australia/Hobart while inhabited before 2010.\n#\n# From Steffen Thorsen (2010-03-10):\n# We got these changes from the Australian Antarctic Division:\n# - Macquarie Island will stay on UTC+11 for winter and therefore not\n# switch back from daylight savings time when other parts of Australia do\n# on 4 April.\n#\n# From Arthur David Olson (2013-05-23):\n# The 1919 transition is overspecified below so pre-2013 zics\n# will produce a binary file with an [A]EST-type as the first 32-bit type;\n# this is required for correct handling of times before 1916 by\n# pre-2013 versions of localtime.\nZone Antarctica/Macquarie 0\t-\t-00\t1899 Nov\n\t\t\t10:00\t-\tAEST\t1916 Oct  1  2:00\n\t\t\t10:00\t1:00\tAEDT\t1917 Feb\n\t\t\t10:00\tAus\tAE%sT\t1919 Apr  1  0:00s\n\t\t\t0\t-\t-00\t1948 Mar 25\n\t\t\t10:00\tAus\tAE%sT\t1967\n\t\t\t10:00\tAT\tAE%sT\t2010\n\t\t\t10:00\t1:00\tAEDT\t2011\n\t\t\t10:00\tAT\tAE%sT\n\n# Fiji\n\n# Milne gives 11:55:44 for Suva.\n\n# From Alexander Krivenyshev (2009-11-10):\n# According to Fiji Broadcasting Corporation,  Fiji plans to re-introduce DST\n# from November 29th 2009  to April 25th 2010.\n#\n# \"Daylight savings to commence this month\"\n# http://www.radiofiji.com.fj/fullstory.php?id=23719\n# http://www.worldtimezone.com/dst_news/dst_news_fiji01.html\n\n# From Steffen Thorsen (2009-11-10):\n# The Fiji Government has posted some more details about the approved\n# amendments:\n# http://www.fiji.gov.fj/publish/page_16198.shtml\n\n# From Steffen Thorsen (2010-03-03):\n# The Cabinet in Fiji has decided to end DST about a month early, on\n# 2010-03-28 at 03:00.\n# The plan is to observe DST again, from 2010-10-24 to sometime in March\n# 2011 (last Sunday a good guess?).\n#\n# Official source:\n# http://www.fiji.gov.fj/index.php?option=com_content&view=article&id=1096:3310-cabinet-approves-change-in-daylight-savings-dates&catid=49:cabinet-releases&Itemid=166\n#\n# A bit more background info here:\n# https://www.timeanddate.com/news/time/fiji-dst-ends-march-2010.html\n\n# From Alexander Krivenyshev (2010-10-24):\n# According to Radio Fiji and Fiji Times online, Fiji will end DST 3\n# weeks earlier than expected - on March 6, 2011, not March 27, 2011...\n# Here is confirmation from Government of the Republic of the Fiji Islands,\n# Ministry of Information (fiji.gov.fj) web site:\n# http://www.fiji.gov.fj/index.php?option=com_content&view=article&id=2608:daylight-savings&catid=71:press-releases&Itemid=155\n# http://www.worldtimezone.com/dst_news/dst_news_fiji04.html\n\n# From Steffen Thorsen (2011-10-03):\n# Now the dates have been confirmed, and at least our start date\n# assumption was correct (end date was one week wrong).\n#\n# http://www.fiji.gov.fj/index.php?option=com_content&view=article&id=4966:daylight-saving-starts-in-fiji&catid=71:press-releases&Itemid=155\n# which says\n# Members of the public are reminded to change their time to one hour in\n# advance at 2am to 3am on October 23, 2011 and one hour back at 3am to\n# 2am on February 26 next year.\n\n# From Ken Rylander (2011-10-24)\n# Another change to the Fiji DST end date. In the TZ database the end date for\n# Fiji DST 2012, is currently Feb 26. This has been changed to Jan 22.\n#\n# http://www.fiji.gov.fj/index.php?option=com_content&view=article&id=5017:amendments-to-daylight-savings&catid=71:press-releases&Itemid=155\n# states:\n#\n# The end of daylight saving scheduled initially for the 26th of February 2012\n# has been brought forward to the 22nd of January 2012.\n# The commencement of daylight saving will remain unchanged and start\n# on the  23rd of October, 2011.\n\n# From the Fiji Government Online Portal (2012-08-21) via Steffen Thorsen:\n# The Minister for Labour, Industrial Relations and Employment Mr Jone Usamate\n# today confirmed that Fiji will start daylight savings at 2 am on Sunday 21st\n# October 2012 and end at 3 am on Sunday 20th January 2013.\n# http://www.fiji.gov.fj/index.php?option=com_content&view=article&id=6702&catid=71&Itemid=155\n\n# From the Fijian Government Media Center (2013-08-30) via David Wheeler:\n# Fiji will start daylight savings on Sunday 27th October, 2013 ...\n# move clocks forward by one hour from 2am\n# http://www.fiji.gov.fj/Media-Center/Press-Releases/DAYLIGHT-SAVING-STARTS-ON-SUNDAY,-27th-OCTOBER-201.aspx\n\n# From Steffen Thorsen (2013-01-10):\n# Fiji will end DST on 2014-01-19 02:00:\n# http://www.fiji.gov.fj/Media-Center/Press-Releases/DAYLIGHT-SAVINGS-TO-END-THIS-MONTH-(1).aspx\n\n# From Ken Rylander (2014-10-20):\n# DST will start Nov. 2 this year.\n# http://www.fiji.gov.fj/Media-Center/Press-Releases/DAYLIGHT-SAVING-STARTS-ON-SUNDAY,-NOVEMBER-2ND.aspx\n\n# From a government order dated 2015-08-26 and published as Legal Notice No. 77\n# in the Government of Fiji Gazette Supplement No. 24 (2015-08-28),\n# via Ken Rylander (2015-09-02):\n# the daylight saving period is 1 hour in advance of the standard time\n# commencing at 2.00 am on Sunday 1st November, 2015 and ending at\n# 3.00 am on Sunday 17th January, 2016.\n\n# From Raymond Kumar (2016-10-04):\n# http://www.fiji.gov.fj/Media-Center/Press-Releases/DAYLIGHT-SAVING-STARTS-ON-6th-NOVEMBER,-2016.aspx\n# \"Fiji's daylight savings will begin on Sunday, 6 November 2016, when\n# clocks go forward an hour at 2am to 3am....  Daylight Saving will\n# end at 3.00am on Sunday 15th January 2017.\"\n\n# From Paul Eggert (2017-08-21):\n# Dominic Fok writes (2017-08-20) that DST ends 2018-01-14, citing\n# Extraordinary Government of Fiji Gazette Supplement No. 21 (2017-08-27),\n# [Legal Notice No. 41] of an order of the previous day by J Usamate.\n\n# From Raymond Kumar (2018-07-13):\n# http://www.fijitimes.com/government-approves-2018-daylight-saving/\n# ... The daylight saving period will end at 3am on Sunday January 13, 2019.\n\n# From Paul Eggert (2019-08-06):\n# Today Raymond Kumar reported the Government of Fiji Gazette Supplement No. 27\n# (2019-08-02) said that Fiji observes DST \"commencing at 2.00 am on\n# Sunday, 10 November 2019 and ending at 3.00 am on Sunday, 12 January 2020.\"\n# For now, guess DST from 02:00 the second Sunday in November to 03:00\n# the first Sunday on or after January 12.  January transitions reportedly\n# depend on when school terms start.  Although the guess is ad hoc, it matches\n# transitions planned this year and seems more likely to match future practice\n# than guessing no DST.\n# From Michael Deckers (2019-08-06):\n# https://www.laws.gov.fj/LawsAsMade/downloadfile/848\n\n# From Raymond Kumar (2020-10-08):\n# [DST in Fiji] is from December 20th 2020, till 17th January 2021.\n# From Alan Mintz (2020-10-08):\n# https://www.laws.gov.fj/LawsAsMade/GetFile/1071\n# From Tim Parenti (2020-10-08):\n# https://www.fijivillage.com/news/Daylight-saving-from-Dec-20th-this-year-to-Jan-17th-2021-8rf4x5/\n# \"Minister for Employment, Parveen Bala says they had never thought of\n# stopping daylight saving. He says it was just to decide on when it should\n# start and end.  Bala says it is a short period...\"\n#\n# From Tim Parenti (2021-10-11), per Jashneel Kumar (2021-10-11) and P Chan\n# (2021-10-12):\n# https://www.fiji.gov.fj/Media-Centre/Speeches/English/PM-BAINIMARAMA-S-COVID-19-ANNOUNCEMENT-10-10-21\n# https://www.fbcnews.com.fj/news/covid-19/curfew-moved-back-to-11pm/\n# In a 2021-10-10 speech concerning updated Covid-19 mitigation measures in\n# Fiji, prime minister Josaia Voreqe \"Frank\" Bainimarama announced the\n# suspension of DST for the 2021/2022 season: \"Given that we are in the process\n# of readjusting in the midst of so many changes, we will also put Daylight\n# Savings Time on hold for this year. It will also make the reopening of\n# scheduled commercial air service much smoother if we don't have to be\n# concerned shifting arrival and departure times, which may look like a simple\n# thing but requires some significant logistical adjustments domestically and\n# internationally.\"\n\n# From Shalvin Narayan (2022-10-27):\n# Please note that there will not be any daylight savings time change\n# in Fiji for 2022-2023....\n# https://www.facebook.com/FijianGovernment/posts/pfbid0mmWVTYmTibn66ybpFda75pDcf34SSpoSaskJW5gXwaKo5Sgc7273Q4fXWc6kQV6Hl\n\n# From Almaz Mingaleev (2023-10-06):\n# Cabinet approved the suspension of Daylight Saving and appropriate\n# legislative changes will be considered including the repeal of the\n# Daylight Saving Act 1998\n# https://www.fiji.gov.fj/Media-Centre/Speeches/English/CABINET-DECISIONS-3-OCTOBER-2023\n#\n# From Paul Eggert (2023-10-06):\n# For now, assume DST is suspended indefinitely.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tFiji\t1998\t1999\t-\tNov\tSun>=1\t2:00\t1:00\t-\nRule\tFiji\t1999\t2000\t-\tFeb\tlastSun\t3:00\t0\t-\nRule\tFiji\t2009\tonly\t-\tNov\t29\t2:00\t1:00\t-\nRule\tFiji\t2010\tonly\t-\tMar\tlastSun\t3:00\t0\t-\nRule\tFiji\t2010\t2013\t-\tOct\tSun>=21\t2:00\t1:00\t-\nRule\tFiji\t2011\tonly\t-\tMar\tSun>=1\t3:00\t0\t-\nRule\tFiji\t2012\t2013\t-\tJan\tSun>=18\t3:00\t0\t-\nRule\tFiji\t2014\tonly\t-\tJan\tSun>=18\t2:00\t0\t-\nRule\tFiji\t2014\t2018\t-\tNov\tSun>=1\t2:00\t1:00\t-\nRule\tFiji\t2015\t2021\t-\tJan\tSun>=12\t3:00\t0\t-\nRule\tFiji\t2019\tonly\t-\tNov\tSun>=8\t2:00\t1:00\t-\nRule\tFiji\t2020\tonly\t-\tDec\t20\t2:00\t1:00\t-\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tPacific/Fiji\t11:55:44 -\tLMT\t1915 Oct 26 # Suva\n\t\t\t12:00\tFiji\t%z\n\n# French Polynesia\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tPacific/Gambier\t -8:59:48 -\tLMT\t1912 Oct  1 # Rikitea\n\t\t\t -9:00\t-\t%z\nZone\tPacific/Marquesas -9:18:00 -\tLMT\t1912 Oct  1\n\t\t\t -9:30\t-\t%z\nZone\tPacific/Tahiti\t -9:58:16 -\tLMT\t1912 Oct  1 # Papeete\n\t\t\t-10:00\t-\t%z\n# Clipperton (near North America) is administered from French Polynesia;\n# it is uninhabited.\n\n\n# Guam\n# N Mariana Is\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\n# http://guamlegislature.com/Public_Laws_5th/PL05-025.pdf\n# http://documents.guam.gov/wp-content/uploads/E.O.-59-7-Guam-Daylight-Savings-Time-May-6-1959.pdf\nRule\tGuam\t1959\tonly\t-\tJun\t27\t2:00\t1:00\tD\n# http://documents.guam.gov/wp-content/uploads/E.O.-61-5-Revocation-of-Daylight-Saving-Time-and-Restoratio.pdf\nRule\tGuam\t1961\tonly\t-\tJan\t29\t2:00\t0\tS\n# http://documents.guam.gov/wp-content/uploads/E.O.-67-13-Guam-Daylight-Savings-Time.pdf\nRule\tGuam\t1967\tonly\t-\tSep\t 1\t2:00\t1:00\tD\n# http://documents.guam.gov/wp-content/uploads/E.O.-69-2-Repeal-of-Guam-Daylight-Saving-Time.pdf\nRule\tGuam\t1969\tonly\t-\tJan\t26\t0:01\t0\tS\n# http://documents.guam.gov/wp-content/uploads/E.O.-69-10-Guam-Daylight-Saving-Time.pdf\nRule\tGuam\t1969\tonly\t-\tJun\t22\t2:00\t1:00\tD\nRule\tGuam\t1969\tonly\t-\tAug\t31\t2:00\t0\tS\n# http://documents.guam.gov/wp-content/uploads/E.O.-70-10-Guam-Daylight-Saving-Time.pdf\n# http://documents.guam.gov/wp-content/uploads/E.O.-70-30-End-of-Guam-Daylight-Saving-Time.pdf\n# http://documents.guam.gov/wp-content/uploads/E.O.-71-5-Guam-Daylight-Savings-Time.pdf\nRule\tGuam\t1970\t1971\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule\tGuam\t1970\t1971\t-\tSep\tSun>=1\t2:00\t0\tS\n# http://documents.guam.gov/wp-content/uploads/E.O.-73-28.-Guam-Day-light-Saving-Time.pdf\nRule\tGuam\t1973\tonly\t-\tDec\t16\t2:00\t1:00\tD\n# http://documents.guam.gov/wp-content/uploads/E.O.-74-7-Guam-Daylight-Savings-Time-Rescinded.pdf\nRule\tGuam\t1974\tonly\t-\tFeb\t24\t2:00\t0\tS\n# http://documents.guam.gov/wp-content/uploads/E.O.-76-13-Daylight-Savings-Time.pdf\nRule\tGuam\t1976\tonly\t-\tMay\t26\t2:00\t1:00\tD\n# http://documents.guam.gov/wp-content/uploads/E.O.-76-25-Revocation-of-E.O.-76-13.pdf\nRule\tGuam\t1976\tonly\t-\tAug\t22\t2:01\t0\tS\n# http://documents.guam.gov/wp-content/uploads/E.O.-77-4-Daylight-Savings-Time.pdf\nRule\tGuam\t1977\tonly\t-\tApr\t24\t2:00\t1:00\tD\n# http://documents.guam.gov/wp-content/uploads/E.O.-77-18-Guam-Standard-Time.pdf\nRule\tGuam\t1977\tonly\t-\tAug\t28\t2:00\t0\tS\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tPacific/Guam\t-14:21:00 -\tLMT\t1844 Dec 31\n\t\t\t 9:39:00 -\tLMT\t1901        # Agana\n\t\t\t10:00\t-\tGST\t1941 Dec 10 # Guam\n\t\t\t 9:00\t-\t%z\t1944 Jul 31\n\t\t\t10:00\tGuam\tG%sT\t2000 Dec 23\n\t\t\t10:00\t-\tChST\t# Chamorro Standard Time\n\n\n# Kiribati (Gilbert Is)\n# Marshall Is\n# Tuvalu\n# Wake\n# Wallis & Futuna\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone Pacific/Tarawa\t 11:32:04 -\tLMT\t1901 # Bairiki\n\t\t\t 12:00\t-\t%z\n\n# Kiribati (except Gilbert Is)\n# See Pacific/Tarawa for the Gilbert Is.\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone Pacific/Kanton\t  0\t-\t-00\t1937 Aug 31\n\t\t\t-12:00\t-\t%z\t1979 Oct\n\t\t\t-11:00\t-\t%z\t1994 Dec 31\n\t\t\t 13:00\t-\t%z\nZone Pacific/Kiritimati\t-10:29:20 -\tLMT\t1901\n\t\t\t-10:40\t-\t%z\t1979 Oct\n\t\t\t-10:00\t-\t%z\t1994 Dec 31\n\t\t\t 14:00\t-\t%z\n\n# Marshall Is\n# See Pacific/Tarawa for most locations.\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone Pacific/Kwajalein\t 11:09:20 -\tLMT\t1901\n\t\t\t 11:00\t-\t%z\t1937\n\t\t\t 10:00\t-\t%z\t1941 Apr  1\n\t\t\t  9:00\t-\t%z\t1944 Feb  6\n\t\t\t 11:00\t-\t%z\t1969 Oct\n\t\t\t-12:00\t-\t%z\t1993 Aug 20 24:00\n\t\t\t 12:00\t-\t%z\n\n# Micronesia\n# For Chuuk and Yap see Pacific/Port_Moresby.\n# For Pohnpei see Pacific/Guadalcanal.\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone Pacific/Kosrae\t-13:08:04 -\tLMT\t1844 Dec 31\n\t\t\t 10:51:56 -\tLMT\t1901\n\t\t\t 11:00\t-\t%z\t1914 Oct\n\t\t\t  9:00\t-\t%z\t1919 Feb  1\n\t\t\t 11:00\t-\t%z\t1937\n\t\t\t 10:00\t-\t%z\t1941 Apr  1\n\t\t\t  9:00\t-\t%z\t1945 Aug\n\t\t\t 11:00\t-\t%z\t1969 Oct\n\t\t\t 12:00\t-\t%z\t1999\n\t\t\t 11:00\t-\t%z\n\n# Nauru\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tPacific/Nauru\t11:07:40 -\tLMT\t1921 Jan 15 # Uaobe\n\t\t\t11:30\t-\t%z\t1942 Aug 29\n\t\t\t 9:00\t-\t%z\t1945 Sep  8\n\t\t\t11:30\t-\t%z\t1979 Feb 10  2:00\n\t\t\t12:00\t-\t%z\n\n# New Caledonia\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tNC\t1977\t1978\t-\tDec\tSun>=1\t0:00\t1:00\t-\nRule\tNC\t1978\t1979\t-\tFeb\t27\t0:00\t0\t-\nRule\tNC\t1996\tonly\t-\tDec\t 1\t2:00s\t1:00\t-\n# Shanks & Pottenger say the following was at 2:00; go with IATA.\nRule\tNC\t1997\tonly\t-\tMar\t 2\t2:00s\t0\t-\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tPacific/Noumea\t11:05:48 -\tLMT\t1912 Jan 13 # Nouméa\n\t\t\t11:00\tNC\t%z\n\n\n###############################################################################\n\n# New Zealand\n# McMurdo Station and Scott Base in Antarctica use Auckland time.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tNZ\t1927\tonly\t-\tNov\t 6\t2:00\t1:00\tS\nRule\tNZ\t1928\tonly\t-\tMar\t 4\t2:00\t0\tM\nRule\tNZ\t1928\t1933\t-\tOct\tSun>=8\t2:00\t0:30\tS\nRule\tNZ\t1929\t1933\t-\tMar\tSun>=15\t2:00\t0\tM\nRule\tNZ\t1934\t1940\t-\tApr\tlastSun\t2:00\t0\tM\nRule\tNZ\t1934\t1940\t-\tSep\tlastSun\t2:00\t0:30\tS\nRule\tNZ\t1946\tonly\t-\tJan\t 1\t0:00\t0\tS\n# Since 1957 Chatham has been 45 minutes ahead of NZ, but until 2018a\n# there was no documented single notation for the date and time of this\n# transition.  Duplicate the Rule lines for now, to give the 2018a change\n# time to percolate out.\nRule\tNZ\t1974\tonly\t-\tNov\tSun>=1\t2:00s\t1:00\tD\nRule\tChatham\t1974\tonly\t-\tNov\tSun>=1\t2:45s\t1:00\t-\nRule\tNZ\t1975\tonly\t-\tFeb\tlastSun\t2:00s\t0\tS\nRule\tChatham\t1975\tonly\t-\tFeb\tlastSun\t2:45s\t0\t-\nRule\tNZ\t1975\t1988\t-\tOct\tlastSun\t2:00s\t1:00\tD\nRule\tChatham\t1975\t1988\t-\tOct\tlastSun\t2:45s\t1:00\t-\nRule\tNZ\t1976\t1989\t-\tMar\tSun>=1\t2:00s\t0\tS\nRule\tChatham\t1976\t1989\t-\tMar\tSun>=1\t2:45s\t0\t-\nRule\tNZ\t1989\tonly\t-\tOct\tSun>=8\t2:00s\t1:00\tD\nRule\tChatham\t1989\tonly\t-\tOct\tSun>=8\t2:45s\t1:00\t-\nRule\tNZ\t1990\t2006\t-\tOct\tSun>=1\t2:00s\t1:00\tD\nRule\tChatham\t1990\t2006\t-\tOct\tSun>=1\t2:45s\t1:00\t-\nRule\tNZ\t1990\t2007\t-\tMar\tSun>=15\t2:00s\t0\tS\nRule\tChatham\t1990\t2007\t-\tMar\tSun>=15\t2:45s\t0\t-\nRule\tNZ\t2007\tmax\t-\tSep\tlastSun\t2:00s\t1:00\tD\nRule\tChatham\t2007\tmax\t-\tSep\tlastSun\t2:45s\t1:00\t-\nRule\tNZ\t2008\tmax\t-\tApr\tSun>=1\t2:00s\t0\tS\nRule\tChatham\t2008\tmax\t-\tApr\tSun>=1\t2:45s\t0\t-\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone Pacific/Auckland\t11:39:04 -\tLMT\t1868 Nov  2\n\t\t\t11:30\tNZ\tNZ%sT\t1946 Jan  1\n\t\t\t12:00\tNZ\tNZ%sT\n\nZone Pacific/Chatham\t12:13:48 -\tLMT\t1868 Nov  2\n\t\t\t12:15\t-\t%z\t1946 Jan  1\n\t\t\t12:45\tChatham\t%z\n\n# Auckland Is\n# uninhabited; Māori and Moriori, colonial settlers, pastoralists, sealers,\n# and scientific personnel have wintered\n\n# Campbell I\n# minor whaling stations operated 1909/1914\n# scientific station operated 1941/1995;\n# previously whalers, sealers, pastoralists, and scientific personnel wintered\n# was probably like Pacific/Auckland\n\n# Cook Is\n#\n# From Alexander Krivenyshev (2021-03-24):\n# In 1899 the Cook Islands celebrated Christmas twice to correct the calendar.\n# According to the old books, missionaries were unaware of\n# the International Date line, when they came from Sydney.\n# Thus the Cook Islands were one day ahead....\n# http://nzetc.victoria.ac.nz/tm/scholarly/tei-KloDisc-t1-body-d18.html\n# ... Appendix to the Journals of the House of Representatives, 1900\n# https://atojs.natlib.govt.nz/cgi-bin/atojs?a=d&d=AJHR1900-I.2.1.2.3\n# (page 20)\n#\n# From Michael Deckers (2021-03-24):\n# ... in the Cook Island Act of 1915-10-11, online at\n# http://www.paclii.org/ck/legis/ck-nz_act/cia1915132/\n# \"651. The hour of the day shall in each of the islands included in the\n#  Cook Islands be determined in accordance with the meridian of that island.\"\n# so that local (mean?) time was still used in Rarotonga (and Niue) in 1915.\n# This was changed in the Cook Island Amendment Act of 1952-10-16 ...\n# http://www.paclii.org/ck/legis/ck-nz_act/ciaa1952212/\n# \"651 (1) The hour of the day in each of the islands included in the Cook\n#  Islands, other than Niue, shall be determined as if each island were\n#  situated on the meridian one hundred and fifty-seven degrees thirty minutes\n#  West of Greenwich.  (2) The hour of the day in the Island of Niue shall be\n#  determined as if that island were situated on the meridian one hundred and\n#  seventy degrees West of Greenwich.\"\n# This act does not state when it takes effect, so one has to assume it\n# applies since 1952-10-16.  But there is the possibility that the act just\n# legalized prior existing practice, as we had seen with the Guernsey law of\n# 1913-06-18 for the switch in 1909-04-19.\n#\n# From Paul Eggert (2021-03-24):\n# Transitions after 1952 are from Shanks & Pottenger.\n#\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tCook\t1978\tonly\t-\tNov\t12\t0:00\t0:30\t-\nRule\tCook\t1979\t1991\t-\tMar\tSun>=1\t0:00\t0\t-\nRule\tCook\t1979\t1990\t-\tOct\tlastSun\t0:00\t0:30\t-\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone Pacific/Rarotonga\t13:20:56 -\tLMT\t1899 Dec 26 # Avarua\n\t\t\t-10:39:04 -\tLMT\t1952 Oct 16\n\t\t\t-10:30\t-\t%z\t1978 Nov 12\n\t\t\t-10:00\tCook\t%z\n\n###############################################################################\n\n\n# Niue\n# See Pacific/Rarotonga comments for 1952 transition.\n#\n# From Tim Parenti (2021-09-13):\n# Consecutive contemporaneous editions of The Air Almanac listed -11:20 for\n# Niue as of Apr 1964 but -11 as of Aug 1964:\n#   Apr 1964: https://books.google.com/books?id=_1So677Y5vUC&pg=SL1-PA23\n#   Aug 1964: https://books.google.com/books?id=MbJloqd-zyUC&pg=SL1-PA23\n# Without greater specificity, guess 1964-07-01 for this transition.\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tPacific/Niue\t-11:19:40 -\tLMT\t1952 Oct 16\t# Alofi\n\t\t\t-11:20\t-\t%z\t1964 Jul\n\t\t\t-11:00\t-\t%z\n\n# Norfolk\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tPacific/Norfolk\t11:11:52 -\tLMT\t1901 # Kingston\n\t\t\t11:12\t-\t%z\t1951\n\t\t\t11:30\t-\t%z\t1974 Oct 27 02:00s\n\t\t\t11:30\t1:00\t%z\t1975 Mar  2 02:00s\n\t\t\t11:30\t-\t%z\t2015 Oct  4 02:00s\n\t\t\t11:00\t-\t%z\t2019 Jul\n\t\t\t11:00\tAN\t%z\n\n# Palau (Belau)\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone Pacific/Palau\t-15:02:04 -\tLMT\t1844 Dec 31\t# Koror\n\t\t\t  8:57:56 -\tLMT\t1901\n\t\t\t  9:00\t-\t%z\n\n# Papua New Guinea\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone Pacific/Port_Moresby 9:48:40 -\tLMT\t1880\n\t\t\t9:48:32\t-\tPMMT\t1895 # Port Moresby Mean Time\n\t\t\t10:00\t-\t%z\n#\n# From Paul Eggert (2014-10-13):\n# Base the Bougainville entry on the Arawa-Kieta region, which appears to have\n# the most people even though it was devastated in the Bougainville Civil War.\n#\n# Although Shanks gives 1942-03-15 / 1943-11-01 for UT +09, these dates\n# are apparently rough guesswork from the starts of military campaigns.\n# The World War II entries below are instead based on Arawa-Kieta.\n# The Japanese occupied Kieta in July 1942,\n# according to the Pacific War Online Encyclopedia\n# https://pwencycl.kgbudge.com/B/o/Bougainville.htm\n# and seem to have controlled it until their 1945-08-21 surrender.\n#\n# The Autonomous Region of Bougainville switched from UT +10 to +11\n# on 2014-12-28 at 02:00.  They call +11 \"Bougainville Standard Time\".\n# See:\n# http://www.bougainville24.com/bougainville-issues/bougainville-gets-own-timezone/\n#\nZone Pacific/Bougainville 10:22:16 -\tLMT\t1880\n\t\t\t 9:48:32 -\tPMMT\t1895\n\t\t\t10:00\t-\t%z\t1942 Jul\n\t\t\t 9:00\t-\t%z\t1945 Aug 21\n\t\t\t10:00\t-\t%z\t2014 Dec 28  2:00\n\t\t\t11:00\t-\t%z\n\n# Pitcairn\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone Pacific/Pitcairn\t-8:40:20 -\tLMT\t1901        # Adamstown\n\t\t\t-8:30\t-\t%z\t1998 Apr 27  0:00\n\t\t\t-8:00\t-\t%z\n\n# American Samoa\n# Midway\nZone Pacific/Pago_Pago\t 12:37:12 -\tLMT\t1892 Jul  5\n\t\t\t-11:22:48 -\tLMT\t1911\n\t\t\t-11:00\t-\tSST\t            # S=Samoa\n\n# Samoa (formerly and also known as Western Samoa)\n\n# From Steffen Thorsen (2009-10-16):\n# We have been in contact with the government of Samoa again, and received\n# the following info:\n#\n# \"Cabinet has now approved Daylight Saving to be effected next year\n# commencing from the last Sunday of September 2010 and conclude first\n# Sunday of April 2011.\"\n#\n# Background info:\n# https://www.timeanddate.com/news/time/samoa-dst-plan-2009.html\n#\n# Samoa's Daylight Saving Time Act 2009 is available here, but does not\n# contain any dates:\n# http://www.parliament.gov.ws/documents/acts/Daylight%20Saving%20Act%20%202009%20(English)%20-%20Final%207-7-091.pdf\n\n# From Laupue Raymond Hughes (2010-10-07):\n# Please see\n# http://www.mcil.gov.ws\n# the Ministry of Commerce, Industry and Labour (sideframe) \"Last Sunday\n# September 2010 (26/09/10) - adjust clocks forward from 12:00 midnight\n# to 01:00am and First Sunday April 2011 (03/04/11) - adjust clocks\n# backwards from 1:00am to 12:00am\"\n\n# From Laupue Raymond Hughes (2011-03-07):\n# [http://www.mcil.gov.ws/ftcd/daylight_saving_2011.pdf]\n#\n# ... when the standard time strikes the hour of four o'clock (4.00am\n# or 0400 Hours) on the 2nd April 2011, then all instruments used to\n# measure standard time are to be adjusted/changed to three o'clock\n# (3:00am or 0300Hrs).\n\n# From David Zülke (2011-05-09):\n# Subject: Samoa to move timezone from east to west of international date line\n#\n# http://www.morningstar.co.uk/uk/markets/newsfeeditem.aspx?id=138501958347963\n\n# From Paul Eggert (2014-06-27):\n# The International Date Line Act 2011\n# http://www.parliament.gov.ws/images/ACTS/International_Date_Line_Act__2011_-_Eng.pdf\n# changed Samoa from UT -11 to +13, effective \"12 o'clock midnight, on\n# Thursday 29th December 2011\".  The International Date Line was adjusted\n# accordingly.\n\n# From Laupue Raymond Hughes (2011-09-02):\n# http://www.mcil.gov.ws/mcil_publications.html\n#\n# here is the official website publication for Samoa DST and dateline change\n#\n# DST\n# Year  End      Time              Start        Time\n# 2011  - - -    - - -             24 September 3:00am to 4:00am\n# 2012  01 April 4:00am to 3:00am  - - -        - - -\n#\n# Dateline Change skip Friday 30th Dec 2011\n# Thursday 29th December 2011\t23:59:59 Hours\n# Saturday 31st December 2011\t00:00:00 Hours\n#\n# From Nicholas Pereira (2012-09-10):\n# Daylight Saving Time commences on Sunday 30th September 2012 and\n# ends on Sunday 7th of April 2013....\n# http://www.mcil.gov.ws/mcil_publications.html\n#\n# From Paul Eggert (2014-07-08):\n# That web page currently lists transitions for 2012/3 and 2013/4.\n# Assume the pattern instituted in 2012 will continue indefinitely.\n#\n# From Geoffrey D. Bennett (2021-09-20):\n# https://www.mcil.gov.ws/storage/2021/09/MCIL-Scan_20210920_120553.pdf\n# DST has been cancelled for this year.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tWS\t2010\tonly\t-\tSep\tlastSun\t0:00\t1\t-\nRule\tWS\t2011\tonly\t-\tApr\tSat>=1\t4:00\t0\t-\nRule\tWS\t2011\tonly\t-\tSep\tlastSat\t3:00\t1\t-\nRule\tWS\t2012\t2021\t-\tApr\tSun>=1\t4:00\t0\t-\nRule\tWS\t2012\t2020\t-\tSep\tlastSun\t3:00\t1\t-\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone Pacific/Apia\t 12:33:04 -\tLMT\t1892 Jul  5\n\t\t\t-11:26:56 -\tLMT\t1911\n\t\t\t-11:30\t-\t%z\t1950\n\t\t\t-11:00\tWS\t%z\t2011 Dec 29 24:00\n\t\t\t 13:00\tWS\t%z\n\n# Solomon Is\n# excludes Bougainville, for which see Papua New Guinea\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone Pacific/Guadalcanal 10:39:48 -\tLMT\t1912 Oct  1 # Honiara\n\t\t\t11:00\t-\t%z\n\n# Tokelau\n#\n# From Gwillim Law (2011-12-29)\n# A correspondent informed me that Tokelau, like Samoa, will be skipping\n# December 31 this year ...\n#\n# From Steffen Thorsen (2012-07-25)\n# ... we double checked by calling hotels and offices based in Tokelau asking\n# about the time there, and they all told a time that agrees with UTC+13....\n# Shanks says UT-10 from 1901 [but] ... there is a good chance the change\n# actually was to UT-11 back then.\n#\n# From Paul Eggert (2012-07-25)\n# A Google Books snippet of Appendix to the Journals of the House of\n# Representatives of New Zealand, Session 1948,\n# <https://books.google.com/books?id=ZaVCAQAAIAAJ>, page 65, says Tokelau\n# was \"11 hours slow on G.M.T.\"  Go with Thorsen and assume Shanks & Pottenger\n# are off by an hour starting in 1901.\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tPacific/Fakaofo\t-11:24:56 -\tLMT\t1901\n\t\t\t-11:00\t-\t%z\t2011 Dec 30\n\t\t\t13:00\t-\t%z\n\n# Tonga\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tTonga\t1999\tonly\t-\tOct\t 7\t2:00s\t1:00\t-\nRule\tTonga\t2000\tonly\t-\tMar\t19\t2:00s\t0\t-\nRule\tTonga\t2000\t2001\t-\tNov\tSun>=1\t2:00\t1:00\t-\nRule\tTonga\t2001\t2002\t-\tJan\tlastSun\t2:00\t0\t-\nRule\tTonga\t2016\tonly\t-\tNov\tSun>=1\t2:00\t1:00\t-\nRule\tTonga\t2017\tonly\t-\tJan\tSun>=15\t3:00\t0\t-\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone Pacific/Tongatapu\t12:19:12 -\tLMT\t1945 Sep 10\n\t\t\t12:20\t-\t%z\t1961\n\t\t\t13:00\t-\t%z\t1999\n\t\t\t13:00\tTonga\t%z\n\n\n# US minor outlying islands\n\n# Howland, Baker\n# Howland was mined for guano by American companies 1857-1878 and British\n# 1886-1891; Baker was similar but exact dates are not known.\n# Inhabited by civilians 1935-1942; U.S. military bases 1943-1944;\n# uninhabited thereafter.\n# Howland observed Hawaii Standard Time (UT -10:30) in 1937;\n# see page 206 of Elgen M. Long and Marie K. Long,\n# Amelia Earhart: the Mystery Solved, Simon & Schuster (2000).\n# So most likely Howland and Baker observed Hawaii Time from 1935\n# until they were abandoned after the war.\n\n# Jarvis\n# Mined for guano by American companies 1857-1879 and British 1883?-1891?.\n# Inhabited by civilians 1935-1942; IGY scientific base 1957-1958;\n# uninhabited thereafter.\n# no information; was probably like Pacific/Kiritimati\n\n# Johnston\n#\n# From Paul Eggert (2017-02-10):\n# Sometimes Johnston kept Hawaii time, and sometimes it was an hour behind.\n# Details are uncertain.  We have no data for Johnston after 1970, so\n# treat it like Hawaii for now.  Since Johnston is now uninhabited,\n# its link to Pacific/Honolulu is in the 'backward' file.\n#\n# In his memoirs of June 6th to October 4, 1945\n# <http://www.315bw.org/Herb_Bach.htm> (2005), Herbert C. Bach writes,\n# \"We started our letdown to Kwajalein Atoll and landed there at 5:00 AM\n# Johnston time, 1:30 AM Kwajalein time.\"  This was in June 1945, and\n# confirms that Johnston kept the same time as Honolulu in summer 1945.\n#\n# From Lyle McElhaney (2014-03-11):\n# [W]hen JI was being used for that [atomic bomb] testing, the time being used\n# was not Hawaiian time but rather the same time being used on the ships,\n# which had a GMT offset of -11 hours.  This apparently applied to at least the\n# time from Operation Newsreel (Hardtack I/Teak shot, 1958-08-01) to the last\n# Operation Fishbowl shot (Tightrope, 1962-11-04).... [See] Herman Hoerlin,\n# \"The United States High-Altitude Test Experience: A Review Emphasizing the\n# Impact on the Environment\", Los Alamos LA-6405, Oct 1976.\n# https://www.fas.org/sgp/othergov/doe/lanl/docs1/00322994.pdf\n# See the table on page 4 where he lists GMT and local times for the tests; a\n# footnote for the JI tests reads that local time is \"JI time = Hawaii Time\n# Minus One Hour\".\n\n# Kingman\n# uninhabited\n\n# Palmyra\n# uninhabited since World War II; was probably like Pacific/Kiritimati\n\n\n# Vanuatu\n\n# From P Chan (2020-11-27):\n# Joint Daylight Saving Regulation No 59 of 1973\n# New Hebrides Condominium Gazette No 336. December 1973\n# http://www.paclii.org/vu/other/VUNHGovGaz//1973/11.pdf#page=15\n#\n# Joint Daylight Saving (Repeal) Regulation No 10 of 1974\n# New Hebrides Condominium Gazette No 336. March 1974\n# http://www.paclii.org/vu/other/VUNHGovGaz//1974/3.pdf#page=11\n#\n# Summer Time Act No. 35 of 1982 [commenced 1983-09-01]\n# http://www.paclii.org/vu/other/VUGovGaz/1982/32.pdf#page=48\n#\n# Summer Time Act (Cap 157)\n# Laws of the Republic of Vanuatu Revised Edition 1988\n# http://www.paclii.org/cgi-bin/sinodisp/vu/legis/consol_act1988/sta147/sta147.html\n#\n# Summer Time (Amendment) Act No. 6 of 1991 [commenced 1991-11-11]\n# http://www.paclii.org/vu/legis/num_act/sta1991227/\n#\n# Summer Time (Repeal) Act No. 4 of 1993 [commenced 1993-05-03]\n# http://www.paclii.org/vu/other/VUGovGaz/1993/15.pdf#page=59\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tVanuatu\t1973\tonly\t-\tDec\t22\t12:00u\t1:00\t-\nRule\tVanuatu\t1974\tonly\t-\tMar\t30\t12:00u\t0\t-\nRule\tVanuatu\t1983\t1991\t-\tSep\tSat>=22\t24:00\t1:00\t-\nRule\tVanuatu\t1984\t1991\t-\tMar\tSat>=22\t24:00\t0\t-\nRule\tVanuatu\t1992\t1993\t-\tJan\tSat>=22\t24:00\t0\t-\nRule\tVanuatu\t1992\tonly\t-\tOct\tSat>=22\t24:00\t1:00\t-\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tPacific/Efate\t11:13:16 -\tLMT\t1912 Jan 13 # Vila\n\t\t\t11:00\tVanuatu\t%z\n\n###############################################################################\n\n# NOTES\n\n# This file is by no means authoritative; if you think you know better,\n# go ahead and edit the file (and please send any changes to\n# tz@iana.org for general use in the future).  For more, please see\n# the file CONTRIBUTING in the tz distribution.\n\n# From Paul Eggert (2018-11-18):\n#\n# Unless otherwise specified, the source for data through 1990 is:\n# Thomas G. Shanks and Rique Pottenger, The International Atlas (6th edition),\n# San Diego: ACS Publications, Inc. (2003).\n# Unfortunately this book contains many errors and cites no sources.\n#\n# Many years ago Gwillim Law wrote that a good source\n# for time zone data was the International Air Transport\n# Association's Standard Schedules Information Manual (IATA SSIM),\n# published semiannually.  Law sent in several helpful summaries\n# of the IATA's data after 1990.  Except where otherwise noted,\n# IATA SSIM is the source for entries after 1990.\n#\n# Another source occasionally used is Edward W. Whitman, World Time Differences,\n# Whitman Publishing Co, 2 Niagara Av, Ealing, London (undated), which\n# I found in the UCLA library.\n#\n# For data circa 1899, a common source is:\n# Milne J. Civil time. Geogr J. 1899 Feb;13(2):173-94.\n# https://www.jstor.org/stable/1774359\n#\n# For the 1911/1912 establishment of standard time in French possessions, see:\n# Société Française de Physique, Recueil de constantes physiques (1913),\n# page 752, 18b.\n#\n# A reliable and entertaining source about time zones is\n# Derek Howse, Greenwich time and longitude, Philip Wilson Publishers (1997).\n#\n# I invented the abbreviation marked \"*\".\n# The following abbreviations are from other sources.\n# Corrections are welcome!\n#\t\tstd\tdst\n#\t\tLMT\t\tLocal Mean Time\n#\t  8:00\tAWST\tAWDT\tWestern Australia\n#\t  9:30\tACST\tACDT\tCentral Australia\n#\t 10:00\tAEST\tAEDT\tEastern Australia\n#\t 10:00\tGST\tGDT*\tGuam through 2000\n#\t 10:00\tChST\t\tChamorro\n#\t 11:30\tNZMT\tNZST\tNew Zealand through 1945\n#\t 12:00\tNZST\tNZDT\tNew Zealand 1946-present\n#\t-11:00\tSST\t\tSamoa\n#\t-10:00\tHST\t\tHawaii\n#\n# See the 'northamerica' file for Hawaii.\n# See the 'southamerica' file for Easter I and the Galápagos Is.\n\n###############################################################################\n\n# Australia\n\n# From Paul Eggert (2014-06-30):\n# Daylight saving time has long been controversial in Australia, pitting\n# region against region, rural against urban, and local against global.\n# For example, in her review of Graeme Davison's _The Unforgiving\n# Minute: how Australians learned to tell the time_ (1993), Perth native\n# Phillipa J Martyr wrote, \"The section entitled 'Saving Daylight' was\n# very informative, but was (as can, sadly, only be expected from a\n# Melbourne-based study) replete with the usual chuckleheaded\n# Queenslanders and straw-chewing yokels from the West prattling fables\n# about fading curtains and crazed farm animals.\"\n# Electronic Journal of Australian and New Zealand History (1997-03-03)\n# http://www.jcu.edu.au/aff/history/reviews/davison.htm\n\n# From P Chan (2020-11-20):\n# Daylight Saving Act 1916 (No. 40 of 1916) [1916-12-21, commenced 1917-01-01]\n# http://classic.austlii.edu.au/au/legis/cth/num_act/dsa1916401916192/\n#\n# Daylight Saving Repeal Act 1917 (No. 35 of 1917) [1917-09-25]\n# http://classic.austlii.edu.au/au/legis/cth/num_act/dsra1917351917243/\n#\n# Statutory Rules 1941, No. 323 [1941-12-24]\n# https://www.legislation.gov.au/Details/C1941L00323\n#\n# Statutory Rules 1942, No. 392 [1942-09-10]\n# https://www.legislation.gov.au/Details/C1942L00392\n#\n# Statutory Rules 1943, No. 241 [1943-09-29]\n# https://www.legislation.gov.au/Details/C1943L00241\n#\n# All transition times should be 02:00 standard time.\n\n\n# From Paul Eggert (2005-12-08):\n# Implementation Dates of Daylight Saving Time within Australia\n# http://www.bom.gov.au/climate/averages/tables/dst_times.shtml\n# summarizes daylight saving issues in Australia.\n\n# From Arthur David Olson (2005-12-12):\n# Lawlink NSW:Daylight Saving in New South Wales\n# http://www.lawlink.nsw.gov.au/lawlink/Corporate/ll_agdinfo.nsf/pages/community_relations_daylight_saving\n# covers New South Wales in particular.\n\n# From John Mackin (1991-03-06):\n# We in Australia have _never_ referred to DST as 'daylight' time.\n# It is called 'summer' time.  Now by a happy coincidence, 'summer'\n# and 'standard' happen to start with the same letter; hence, the\n# abbreviation does _not_ change...\n# The legislation does not actually define abbreviations, at least\n# in this State, but the abbreviation is just commonly taken to be the\n# initials of the phrase, and the legislation here uniformly uses\n# the phrase 'summer time' and does not use the phrase 'daylight\n# time'.\n# Announcers on the Commonwealth radio network, the ABC (for Australian\n# Broadcasting Commission), use the phrases 'Eastern Standard Time'\n# or 'Eastern Summer Time'.  (Note, though, that as I say in the\n# current australasia file, there is really no such thing.)  Announcers\n# on its overseas service, Radio Australia, use the same phrases\n# prefixed by the word 'Australian' when referring to local times;\n# time announcements on that service, naturally enough, are made in UTC.\n\n# From Paul Eggert (2014-06-30):\n#\n# Inspired by Mackin's remarks quoted above, earlier versions of this\n# file used \"EST\" for both Eastern Standard Time and Eastern Summer\n# Time in Australia, and similarly for \"CST\", \"CWST\", and \"WST\".\n# However, these abbreviations were confusing and were not common\n# practice among Australians, and there were justifiable complaints\n# about them, so I attempted to survey current Australian usage.\n# For the tz database, the full English phrase is not that important;\n# what matters is the abbreviation.  It's difficult to survey the web\n# directly for abbreviation usage, as there are so many false hits for\n# strings like \"EST\" and \"EDT\", so I looked for pages that defined an\n# abbreviation for eastern or central DST in Australia, and got the\n# following numbers of unique hits for the listed Google queries:\n#\n#   10 \"Eastern Daylight Time AEST\" site:au [some are false hits]\n#   10 \"Eastern Summer Time AEST\" site:au\n#   10 \"Summer Time AEDT\" site:au\n#   13 \"EDST Eastern Daylight Saving Time\" site:au\n#   18 \"Summer Time ESST\" site:au\n#   28 \"Eastern Daylight Saving Time EDST\" site:au\n#   39 \"EDT Eastern Daylight Time\" site:au [some are false hits]\n#   53 \"Eastern Daylight Time EDT\" site:au [some are false hits]\n#   54 \"AEDT Australian Eastern Daylight Time\" site:au\n#  182 \"Eastern Daylight Time AEDT\" site:au\n#\n#   17 \"Central Daylight Time CDT\" site:au [some are false hits]\n#   46 \"Central Daylight Time ACDT\" site:au\n#\n# I tried several other variants (e.g., \"Eastern Summer Time EST\") but\n# they all returned fewer than 10 unique hits.  I also looked for pages\n# mentioning both \"western standard time\" and an abbreviation, since\n# there is no WST in the US to generate false hits, and found:\n#\n#  156 \"western standard time\" AWST site:au\n#  226 \"western standard time\" WST site:au\n#\n# I then surveyed the top ten newspapers in Australia by circulation as\n# listed in Wikipedia, using Google queries like \"AEDT site:heraldsun.com.au\"\n# and obtaining estimated counts from the initial page of search results.\n# All ten papers greatly preferred \"AEDT\" to \"EDT\".  The papers\n# surveyed were the Herald Sun, The Daily Telegraph, The Courier-Mail,\n# The Sydney Morning Herald, The West Australian, The Age, The Advertiser,\n# The Australian, The Financial Review, and The Herald (Newcastle).\n#\n# I also searched for historical usage, to see whether abbreviations\n# like \"AEDT\" are new.  A Trove search <http://trove.nla.gov.au/>\n# found only one newspaper (The Canberra Times) with a house style\n# dating back to the 1970s, I expect because other newspapers weren't\n# fully indexed.  The Canberra Times strongly preferred abbreviations\n# like \"AEDT\".  The first occurrence of \"AEDT\" was a World Weather\n# column (1971-11-17, page 24), and of \"ACDT\" was a Scoreboard column\n# (1993-01-24, p 16).  The style was the typical usage but was not\n# strictly enforced; for example, \"Welcome to the twilight zones ...\"\n# (1994-10-29, p 1) uses the abbreviations AEST/AEDT, CST/CDT, and\n# WST, and goes on to say, \"The confusion and frustration some feel\n# about the lack of uniformity among Australia's six states and two\n# territories has prompted one group to form its very own political\n# party -- the Sydney-based Daylight Saving Extension Party.\"\n#\n# I also surveyed federal government sources.  They did not agree:\n#\n#   The Australian Government (2014-03-26)\n#   http://australia.gov.au/about-australia/our-country/time\n#   (This document was produced by the Department of Finance.)\n#   AEST ACST AWST AEDT ACDT\n#\n#   Bureau of Meteorology (2012-11-08)\n#   http://www.bom.gov.au/climate/averages/tables/daysavtm.shtml\n#   EST CST WST EDT CDT\n#\n#   Civil Aviation Safety Authority (undated)\n#   http://services.casa.gov.au/outnback/inc/pages/episode3/episode-3_time_zones.shtml\n#   EST CST WST (no abbreviations given for DST)\n#\n#   Geoscience Australia (2011-11-24)\n#   http://www.ga.gov.au/geodesy/astro/sunrise.jsp\n#   AEST ACST AWST AEDT ACDT\n#\n#   Parliamentary Library (2008-11-10)\n#   https://www.aph.gov.au/binaries/library/pubs/rp/2008-09/09rp14.pdf\n#   EST CST WST preferred for standard time; AEST AEDT ACST ACDT also used\n#\n#   The Transport Safety Bureau has an extensive series of accident reports,\n#   and investigators seem to use whatever abbreviation they like.\n#   Googling site:atsb.gov.au found the following number of unique hits:\n#   311 \"ESuT\", 195 \"EDT\", 26 \"AEDT\", 83 \"CSuT\", 46 \"CDT\".\n#   \"_SuT\" tended to appear in older reports, and \"A_DT\" tended to\n#   appear in reports of events with international implications.\n#\n# From the above it appears that there is a working consensus in\n# Australia to use trailing \"DT\" for daylight saving time; although\n# some sources use trailing \"SST\" or \"ST\" or \"SuT\" they are by far in\n# the minority.  The case for leading \"A\" is weaker, but since it\n# seems to be preferred in the overall web and is preferred in all\n# the leading newspaper websites and in many government departments,\n# it has a stronger case than omitting the leading \"A\".  The current\n# version of the database therefore uses abbreviations like \"AEST\" and\n# \"AEDT\" for Australian time zones.\n\n# From Paul Eggert (1995-12-19):\n# Shanks & Pottenger report 2:00 for all autumn changes in Australia and NZ.\n# Mark Prior writes that his newspaper\n# reports that NSW's fall 1995 change will occur at 2:00,\n# but Robert Elz says it's been 3:00 in Victoria since 1970\n# and perhaps the newspaper's '2:00' is referring to standard time.\n# For now we'll continue to assume 2:00s for changes since 1960.\n\n# From Eric Ulevik (1998-01-05):\n#\n# Here are some URLs to Australian time legislation. These URLs are stable,\n# and should probably be included in the data file. There are probably more\n# relevant entries in this database.\n#\n# NSW (including LHI and Broken Hill):\n# Standard Time Act 1987 (updated 1995-04-04)\n# https://www.austlii.edu.au/au/legis/nsw/consol_act/sta1987137/index.html\n# ACT\n# Standard Time and Summer Time Act 1972\n# https://www.austlii.edu.au/au/legis/act/consol_act/stasta1972279/index.html\n# SA\n# Standard Time Act, 1898\n# https://www.austlii.edu.au/au/legis/sa/consol_act/sta1898137/index.html\n\n# From David Grosz (2005-06-13):\n# It was announced last week that Daylight Saving would be extended by\n# one week next year to allow for the 2006 Commonwealth Games.\n# Daylight Saving is now to end for next year only on the first Sunday\n# in April instead of the last Sunday in March.\n#\n# From Gwillim Law (2005-06-14):\n# I did some Googling and found that all of those states (and territory) plan\n# to extend DST together in 2006.\n# ACT: http://www.cmd.act.gov.au/mediareleases/fileread.cfm?file=86.txt\n# New South Wales: http://www.thecouriermail.news.com.au/common/story_page/0,5936,15538869%255E1702,00.html\n# South Australia: http://www.news.com.au/story/0,10117,15555031-1246,00.html\n# Tasmania: http://www.media.tas.gov.au/release.php?id=14772\n# Victoria: I wasn't able to find anything separate, but the other articles\n# allude to it.\n# But not Queensland\n# http://www.news.com.au/story/0,10117,15564030-1248,00.html\n\n# Northern Territory\n\n# From George Shepherd via Simon Woodhead via Robert Elz (1991-03-06):\n# # The NORTHERN TERRITORY..  [ Courtesy N.T. Dept of the Chief Minister ]\n# #\t\t\t\t\t[ Nov 1990 ]\n# #\tN.T. have never utilised any DST due to sub-tropical/tropical location.\n# ...\n# Zone        Australia/North         9:30    -       CST\n\n# From Bradley White (1991-03-04):\n# A recent excerpt from an Australian newspaper...\n# the Northern Territory do[es] not have daylight saving.\n\n# Western Australia\n\n# From George Shepherd via Simon Woodhead via Robert Elz (1991-03-06):\n# #  The state of WESTERN AUSTRALIA..  [ Courtesy W.A. dept Premier+Cabinet ]\n# #\t\t\t\t\t\t[ Nov 1990 ]\n# #\tW.A. suffers from a great deal of public and political opposition to\n# #\tDST in principle. A bill is brought before parliament in most years, but\n# #\tusually defeated either in the upper house, or in party caucus\n# #\tbefore reaching parliament.\n# ...\n# Zone\tAustralia/West\t\t8:00\tAW\t%sST\n# ...\n# Rule\tAW\t1974\tonly\t-\tOct\tlastSun\t2:00\t1:00\tD\n# Rule\tAW\t1975\tonly\t-\tMar\tSun>=1\t3:00\t0\tW\n# Rule\tAW\t1983\tonly\t-\tOct\tlastSun\t2:00\t1:00\tD\n# Rule\tAW\t1984\tonly\t-\tMar\tSun>=1\t3:00\t0\tW\n\n# From Bradley White (1991-03-04):\n# A recent excerpt from an Australian newspaper...\n# Western Australia...do[es] not have daylight saving.\n\n# From John D. Newman via Bradley White (1991-11-02):\n# Western Australia is still on \"winter time\". Some DH in Sydney\n# rang me at home a few days ago at 6.00am. (He had just arrived at\n# work at 9.00am.)\n# W.A. is switching to Summer Time on Nov 17th just to confuse\n# everybody again.\n\n# From Arthur David Olson (1992-03-08):\n# The 1992 ending date used in the rules is a best guess;\n# it matches what was used in the past.\n\n# From Christopher Hunt (2006-11-21), after an advance warning\n# from Jesper Nørgaard Welen (2006-11-01):\n# WA are trialing DST for three years.\n# http://www.parliament.wa.gov.au/parliament/bills.nsf/9A1B183144403DA54825721200088DF1/$File/Bill175-1B.pdf\n\n# From Paul Eggert (2018-04-01):\n# The Guardian Express of Perth, Australia reported today that the\n# government decided to advance the clocks permanently on January 1,\n# 2019, from UT +08 to UT +09.  The article noted that an exemption\n# would be made for people aged 61 and over, who \"can apply in writing\n# to have the extra hour of sunshine removed from their area.\"  See:\n# Daylight saving coming to WA in 2019. Guardian Express. 2018-04-01.\n# https://www.communitynews.com.au/guardian-express/news/exclusive-daylight-savings-coming-wa-summer-2018/\n# [The article ends with \"Today's date is April 1.\"]\n\n# The Australian Bureau of Meteorology FAQ\n# http://www.bom.gov.au/faq/faqgen.htm\n# (1999-09-27) writes that Giles Meteorological Station uses\n# South Australian time even though it's located in Western Australia.\n\n# From Rives McDow (2002-04-09):\n# The most interesting region I have found consists of three towns on the\n# southern coast....  South Australia observes daylight saving time; Western\n# Australia does not.  The two states are one and a half hours apart.  The\n# residents decided to forget about this nonsense of changing the clock so\n# much and set the local time 20 hours and 45 minutes from the\n# international date line, or right in the middle of the time of South\n# Australia and Western Australia....\n#\n# From Paul Eggert (2002-04-09):\n# This is confirmed by the section entitled\n# \"What's the deal with time zones???\" in\n# http://www.earthsci.unimelb.edu.au/~awatkins/null.html\n#\n# From Alex Livingston (2006-12-07):\n# ... it was just on four years ago that I drove along the Eyre Highway,\n# which passes through eastern Western Australia close to the southern\n# coast of the continent.\n#\n# I paid particular attention to the time kept there. There can be no\n# dispute that UTC+08:45 was considered \"the time\" from the border\n# village just inside the border with South Australia to as far west\n# as just east of Caiguna. There can also be no dispute that Eucla is\n# the largest population centre in this zone....\n#\n# Now that Western Australia is observing daylight saving, the\n# question arose whether this part of the state would follow suit. I\n# just called the border village and confirmed that indeed they have,\n# meaning that they are now observing UTC+09:45.\n#\n# (2006-12-09):\n# I personally doubt that either experimentation with daylight saving\n# in WA or its introduction in SA had anything to do with the genesis\n# of this time zone.  My hunch is that it's been around since well\n# before 1975.  I remember seeing it noted on road maps decades ago.\n#\n# From Gilmore Davidson (2019-04-08):\n# https://www.abc.net.au/news/2019-04-08/this-remote-stretch-of-desert-has-its-own-custom-time-zone/10981000\n# ... include[s] a rough description of the geographical boundaries...\n# \"The time zone exists for about 340 kilometres and takes in the tiny\n# roadhouse communities of Cocklebiddy, Madura, Eucla and Border Village.\"\n# ... and an indication that the zone has definitely been in existence\n# since before the 1970 cut-off of the database ...\n# From Paul Eggert (2019-05-17):\n# That ABC Esperance story by Christien de Garis also says:\n#    Although the Central Western Time Zone is not officially recognised (your\n#    phones won't automatically change), there is a sign instructing you which\n#    way to wind your clocks 45 minutes and scrawled underneath one of them in\n#    Texta is the word: 'Why'?\n#    \"Good question,\" Mr Pike said.\n#    \"I don't even know that, and it's been going for over 50 years.\"\n\n# From Paul Eggert (2006-12-15):\n# For lack of better info, assume the tradition dates back to the\n# introduction of standard time in 1895.\n\n# From Stuart Bishop (2024-11-12):\n# An article discussing the in-use but technically unofficial timezones\n# in the Western Australian portion of the Nullarbor Plain.\n# https://www.abc.net.au/news/2024-11-22/outback-wa-properties-strange-time-zones/104542494\n# From Paul Eggert (2024-11-12):\n# As the article says, the Eyre Bird Observatory and nearby sheep stations\n# can use Tokyo time.  Other possibilities include Asia/Chita, Asia/Seoul,\n# and Asia/Jayapura.\n\n# Queensland\n\n# From Paul Eggert (2018-02-26):\n# I lack access to the following source for Queensland DST:\n# Pearce C. History of daylight saving time in Queensland.\n# Queensland Hist J. 2017 Aug;23(6):389-403\n# https://search.informit.com.au/documentSummary;dn=994682348436426;res=IELHSS\n\n# From George Shepherd via Simon Woodhead via Robert Elz (1991-03-06):\n# #   The state of QUEENSLAND.. [ Courtesy Qld. Dept Premier Econ&Trade Devel ]\n# #\t\t\t\t\t\t[ Dec 1990 ]\n# ...\n# Zone\tAustralia/Queensland\t10:00\tAQ\t%sST\n# ...\n# Rule\tAQ\t1971\tonly\t-\tOct\tlastSun\t2:00\t1:00\tD\n# Rule\tAQ\t1972\tonly\t-\tFeb\tlastSun\t3:00\t0\tE\n# Rule\tAQ\t1989\tmax\t-\tOct\tlastSun\t2:00\t1:00\tD\n# Rule\tAQ\t1990\tmax\t-\tMar\tSun>=1\t3:00\t0\tE\n\n# From Bradley White (1989-12-24):\n# \"Australia/Queensland\" now observes daylight time (i.e. from\n# October 1989).\n\n# From Bradley White (1991-03-04):\n# A recent excerpt from an Australian newspaper...\n# ...Queensland...[has] agreed to end daylight saving\n# at 3am tomorrow (March 3)...\n\n# From John Mackin (1991-03-06):\n# I can certainly confirm for my part that Daylight Saving in NSW did in fact\n# end on Sunday, 3 March.  I don't know at what hour, though.  (It surprised\n# me.)\n\n# From Bradley White (1992-03-08):\n# ...there was recently a referendum in Queensland which resulted\n# in the experimental daylight saving system being abandoned. So, ...\n# ...\n# Rule\tQLD\t1989\t1991\t-\tOct\tlastSun\t2:00\t1:00\tD\n# Rule\tQLD\t1990\t1992\t-\tMar\tSun>=1\t3:00\t0\tS\n# ...\n\n# From Arthur David Olson (1992-03-08):\n# The chosen rules the union of the 1971/1972 change and the 1989-1992 changes.\n\n\n# southeast Australia\n#\n# From Paul Eggert (2007-07-23):\n# Starting autumn 2008 Victoria, NSW, South Australia, Tasmania and the ACT\n# end DST the first Sunday in April and start DST the first Sunday in October.\n# http://www.theage.com.au/news/national/daylight-savings-to-span-six-months/2007/06/27/1182623966703.html\n\n\n# South Australia\n\n# From Bradley White (1991-03-04):\n# A recent excerpt from an Australian newspaper...\n# ...South Australia...[has] agreed to end daylight saving\n# at 3am tomorrow (March 3)...\n\n# From George Shepherd via Simon Woodhead via Robert Elz (1991-03-06):\n# #   The state of SOUTH AUSTRALIA....[ Courtesy of S.A. Dept of Labour ]\n# #\t\t\t\t\t\t[ Nov 1990 ]\n# ...\n# Zone\tAustralia/South\t\t9:30\tAS\t%sST\n# ...\n# Rule\t AS\t1971\tmax\t-\tOct\tlastSun\t2:00\t1:00\tD\n# Rule\t AS\t1972\t1985\t-\tMar\tSun>=1\t3:00\t0\tC\n# Rule\t AS\t1986\t1990\t-\tMar\tSun>=15\t3:00\t0\tC\n# Rule\t AS\t1991\tmax\t-\tMar\tSun>=1\t3:00\t0\tC\n\n# From Bradley White (1992-03-11):\n# Recent correspondence with a friend in Adelaide\n# contained the following exchange:  \"Due to the Adelaide Festival,\n# South Australia delays setting back our clocks for a few weeks.\"\n\n# From Robert Elz (1992-03-13):\n# I heard that apparently (or at least, it appears that)\n# South Aus will have an extra 3 weeks daylight saving every even\n# numbered year (from 1990).  That's when the Adelaide Festival\n# is on...\n\n# From Robert Elz (1992-03-16, 00:57:07 +1000):\n# DST didn't end in Adelaide today (yesterday)....\n# But whether it's \"4th Sunday\" or \"2nd last Sunday\" I have no idea whatever...\n# (it's just as likely to be \"the Sunday we pick for this year\"...).\n\n# From Bradley White (1994-04-11):\n# If Sun, 15 March, 1992 was at +1030 as kre asserts, but yet Sun, 20 March,\n# 1994 was at +0930 as John Connolly's customer seems to assert, then I can\n# only conclude that the actual rule is more complicated....\n\n# From John Warburton (1994-10-07):\n# The new Daylight Savings dates for South Australia ...\n# was gazetted in the Government Hansard on Sep 26 1994....\n# start on last Sunday in October and end in last sunday in March.\n\n# From Paul Eggert (2007-07-23):\n# See \"southeast Australia\" above for 2008 and later.\n\n# Tasmania\n\n# From P Chan (2020-11-20):\n# Tasmania observed DST in 1916-1919.\n#\n# Daylight Saving Act, 1916 (7 Geo V, No 2) [1916-09-22]\n# http://classic.austlii.edu.au/au/legis/tas/num_act/tdsa19167gvn2267/\n#\n# Daylight Saving Amendment Act, 1917 (8 Geo V, No 5) [1917-10-01]\n# http://classic.austlii.edu.au/au/legis/tas/num_act/tdsaa19178gvn5347/\n#\n# Daylight Saving Act Repeal Act, 1919 (10 Geo V, No 9) [1919-10-24]\n# http://classic.austlii.edu.au/au/legis/tas/num_act/tdsara191910gvn9339/\n#\n# King Island is mentioned in the 1967 Act but not the 1968 Act.\n# Therefore it possibly observed DST from 1968/69.\n#\n# Daylight Saving Act 1967 (No. 33 of 1967) [1967-09-22]\n# http://classic.austlii.edu.au/au/legis/tas/num_act/dsa196733o1967211/\n#\n# Daylight Saving Act 1968 (No. 42 of 1968) [1968-10-15]\n# http://classic.austlii.edu.au/au/legis/tas/num_act/dsa196842o1968211/\n\n# The rules for 1967 through 1991 were reported by George Shepherd\n# via Simon Woodhead via Robert Elz (1991-03-06):\n# #  The state of TASMANIA.. [Courtesy Tasmanian Dept of Premier + Cabinet ]\n# #\t\t\t\t\t[ Nov 1990 ]\n\n# From Bill Hart via Guy Harris (1991-10-10):\n# Oh yes, the new daylight savings rules are uniquely tasmanian, we have\n# 6 weeks a year now when we are out of sync with the rest of Australia\n# (but nothing new about that).\n\n# From Alex Livingston (1999-10-04):\n# I heard on the ABC (Australian Broadcasting Corporation) radio news on the\n# (long) weekend that Tasmania, which usually goes its own way in this regard,\n# has decided to join with most of NSW, the ACT, and most of Victoria\n# (Australia) and start daylight saving on the last Sunday in August in 2000\n# instead of the first Sunday in October.\n\n# Sim Alam (2000-07-03) reported a legal citation for the 2000/2001 rules:\n# http://www.thelaw.tas.gov.au/fragview/42++1968+GS3A@EN+2000070300\n\n# From Paul Eggert (2007-07-23):\n# See \"southeast Australia\" above for 2008 and later.\n\n# Victoria\n\n# The rules for 1971 through 1991 were reported by George Shepherd\n# via Simon Woodhead via Robert Elz (1991-03-06):\n# #   The state of VICTORIA.. [ Courtesy of Vic. Dept of Premier + Cabinet ]\n# #\t\t\t\t\t\t[ Nov 1990 ]\n\n# From Scott Harrington (2001-08-29):\n# On KQED's \"City Arts and Lectures\" program last night I heard an\n# interesting story about daylight savings time.  Dr. John Heilbron was\n# discussing his book \"The Sun in the Church: Cathedrals as Solar\n# Observatories\"[1], and in particular the Shrine of Remembrance[2] located\n# in Melbourne, Australia.\n#\n# Apparently the shrine's main purpose is a beam of sunlight which\n# illuminates a special spot on the floor at the 11th hour of the 11th day\n# of the 11th month (Remembrance Day) every year in memory of Australia's\n# fallen WWI soldiers.  And if you go there on Nov. 11, at 11am local time,\n# you will indeed see the sunbeam illuminate the special spot at the\n# expected time.\n#\n# However, that is only because of some special mirror contraption that had\n# to be employed, since due to daylight savings time, the true solar time of\n# the remembrance moment occurs one hour later (or earlier?).  Perhaps\n# someone with more information on this jury-rig can tell us more.\n#\n# [1] http://www.hup.harvard.edu/catalog/HEISUN.html\n# [2] http://www.shrine.org.au\n\n# From Paul Eggert (2007-07-23):\n# See \"southeast Australia\" above for 2008 and later.\n\n# New South Wales\n\n# From Arthur David Olson:\n# New South Wales and subjurisdictions have their own ideas of a fun time.\n# Based on law library research by John Mackin,\n# who notes:\n#\tIn Australia, time is not legislated federally, but rather by the\n#\tindividual states.  Thus, while such terms as \"Eastern Standard Time\"\n#\t[I mean, of course, Australian EST, not any other kind] are in common\n#\tuse, _they have NO REAL MEANING_, as they are not defined in the\n#\tlegislation.  This is very important to understand.\n#\tI have researched New South Wales time only...\n\n# From Eric Ulevik (1999-05-26):\n# DST will start in NSW on the last Sunday of August, rather than the usual\n# October in 2000.  See: Matthew Moore,\n# Two months more daylight saving, Sydney Morning Herald (1999-05-26).\n# http://www.smh.com.au/news/9905/26/pageone/pageone4.html\n\n# From Paul Eggert (1999-09-27):\n# See the following official NSW source:\n# Daylight Saving in New South Wales.\n# http://dir.gis.nsw.gov.au/cgi-bin/genobject/document/other/daylightsaving/tigGmZ\n#\n# Narrabri Shire (NSW) council has announced it will ignore the extension of\n# daylight saving next year.  See:\n# Narrabri Council to ignore daylight saving\n# http://abc.net.au/news/regionals/neweng/monthly/regeng-22jul1999-1.htm\n# (1999-07-22).  For now, we'll wait to see if this really happens.\n#\n# Victoria will follow NSW.  See:\n# Vic to extend daylight saving (1999-07-28)\n# http://abc.net.au/local/news/olympics/1999/07/item19990728112314_1.htm\n#\n# However, South Australia rejected the DST request.  See:\n# South Australia rejects Olympics daylight savings request (1999-07-19)\n# http://abc.net.au/news/olympics/1999/07/item19990719151754_1.htm\n#\n# Queensland also will not observe DST for the Olympics.  See:\n# Qld says no to daylight savings for Olympics\n# http://abc.net.au/news/olympics/1999/06/item19990601114608_1.htm\n# (1999-06-01), which quotes Queensland Premier Peter Beattie as saying\n# \"Look you've got to remember in my family when this came up last time\n# I voted for it, my wife voted against it and she said to me it's all very\n# well for you, you don't have to worry about getting the children out of\n# bed, getting them to school, getting them to sleep at night.\n# I've been through all this argument domestically...my wife rules.\"\n#\n# Broken Hill will stick with South Australian time in 2000.  See:\n# Broken Hill to be behind the times (1999-07-21)\n# http://abc.net.au/news/regionals/brokenh/monthly/regbrok-21jul1999-6.htm\n\n# IATA SSIM (1998-09) says that the spring 2000 change for Australian\n# Capital Territory, New South Wales except Lord Howe Island and Broken\n# Hill, and Victoria will be August 27, presumably due to the Sydney Olympics.\n\n# From Eric Ulevik, referring to Sydney's Sun Herald (2000-08-13), page 29:\n# The Queensland Premier Peter Beattie is encouraging northern NSW\n# towns to use Queensland time.\n\n# From Paul Eggert (2007-07-23):\n# See \"southeast Australia\" above for 2008 and later.\n\n# Yancowinna\n\n# From John Mackin (1989-01-04):\n# 'Broken Hill' means the County of Yancowinna.\n\n# From George Shepherd via Simon Woodhead via Robert Elz (1991-03-06):\n# # YANCOWINNA..  [ Confirmation courtesy of Broken Hill Postmaster ]\n# #\t\t\t\t\t[ Dec 1990 ]\n# ...\n# # Yancowinna uses Central Standard Time, despite [its] location on the\n# # New South Wales side of the S.A. border. Most business and social dealings\n# # are with CST zones, therefore CST is legislated by local government\n# # although the switch to Summer Time occurs in line with N.S.W. There have\n# # been years when this did not apply, but the historical data is not\n# # presently available.\n# Zone\tAustralia/Yancowinna\t9:30\t AY\t%sST\n# ...\n# Rule\t AY\t1971\t1985\t-\tOct\tlastSun\t2:00\t1:00\tD\n# Rule\t AY\t1972\tonly\t-\tFeb\tlastSun\t3:00\t0\tC\n# [followed by other Rules]\n\n# Lord Howe Island\n\n# From George Shepherd via Simon Woodhead via Robert Elz (1991-03-06):\n# LHI...\t\t[ Courtesy of Pauline Van Winsen ]\n#\t\t\t\t\t[ Dec 1990 ]\n# Lord Howe Island is located off the New South Wales coast, and is half an\n# hour ahead of NSW time.\n\n# From James Lonergan, Secretary, Lord Howe Island Board (2000-01-27):\n# Lord Howe Island summer time in 2000/2001 will commence on the same\n# date as the rest of NSW (i.e. 2000-08-27).  For your information the\n# Lord Howe Island Board (controlling authority for the Island) is\n# seeking the community's views on various options for summer time\n# arrangements on the Island, e.g. advance clocks by 1 full hour\n# instead of only 30 minutes.  [Dependent] on the wishes of residents\n# the Board may approach the NSW government to change the existing\n# arrangements.  The starting date for summer time on the Island will\n# however always coincide with the rest of NSW.\n\n# From James Lonergan, Secretary, Lord Howe Island Board (2000-10-25):\n# Lord Howe Island advances clocks by 30 minutes during DST in NSW and retards\n# clocks by 30 minutes when DST finishes. Since DST was most recently\n# introduced in NSW, the \"changeover\" time on the Island has been 02:00 as\n# shown on clocks on LHI. I guess this means that for 30 minutes at the start\n# of DST, LHI is actually 1 hour ahead of the rest of NSW.\n\n# From Paul Eggert (2006-03-22):\n# For Lord Howe dates we use Shanks & Pottenger through 1989, and\n# Lonergan thereafter.  For times we use Lonergan.\n\n# From Paul Eggert (2007-07-23):\n# See \"southeast Australia\" above for 2008 and later.\n\n# From Steffen Thorsen (2009-04-28):\n# According to the official press release, South Australia's extended daylight\n# saving period will continue with the same rules as used during the 2008-2009\n# summer (southern hemisphere).\n#\n# From\n# http://www.safework.sa.gov.au/uploaded_files/DaylightDatesSet.pdf\n# The extended daylight saving period that South Australia has been trialling\n# for over the last year is now set to be ongoing.\n# Daylight saving will continue to start on the first Sunday in October each\n# year and finish on the first Sunday in April the following year.\n# Industrial Relations Minister, Paul Caica, says this provides South Australia\n# with a consistent half hour time difference with NSW, Victoria, Tasmania and\n# the ACT for all 52 weeks of the year...\n#\n# We have a wrap-up here:\n# https://www.timeanddate.com/news/time/south-australia-extends-dst.html\n###############################################################################\n\n# New Zealand\n\n# From Mark Davies (1990-10-03):\n# the 1989/90 year was a trial of an extended \"daylight saving\" period.\n# This trial was deemed successful and the extended period adopted for\n# subsequent years (with the addition of a further week at the start).\n# source - phone call to Ministry of Internal Affairs Head Office.\n\n# From George Shepherd via Simon Woodhead via Robert Elz (1991-03-06):\n# # The Country of New Zealand   (Australia's east island -) Gee they hate that!\n# #\t\t\t\t   or is Australia the west island of N.Z.\n# #\t[ courtesy of Geoff Tribble.. Auckland N.Z. ]\n# #\t\t\t\t[ Nov 1990 ]\n# ...\n# Rule\tNZ      1974    1988\t-\tOct\tlastSun\t2:00\t1:00\tD\n# Rule\tNZ\t1989\tmax\t-\tOct\tSun>=1\t2:00\t1:00\tD\n# Rule\tNZ      1975    1989\t-\tMar\tSun>=1\t3:00\t0\tS\n# Rule\tNZ\t1990\tmax\t-\tMar\tlastSun\t3:00\t0\tS\n# ...\n# Zone\tNZ\t\t\t12:00\tNZ\t\tNZ%sT\t# New Zealand\n# Zone\tNZ-CHAT\t\t\t12:45\t-\t\tNZ-CHAT # Chatham Island\n\n# From Arthur David Olson (1992-03-08):\n# The chosen rules use the Davies October 8 values for the start of DST in 1989\n# rather than the October 1 value.\n\n# From Paul Eggert (1995-12-19);\n# Shank & Pottenger report 2:00 for all autumn changes in Australia and NZ.\n# Robert Uzgalis writes that the New Zealand Daylight\n# Savings Time Order in Council dated 1990-06-18 specifies 2:00 standard\n# time on both the first Sunday in October and the third Sunday in March.\n# As with Australia, we'll assume the tradition is 2:00s, not 2:00.\n#\n# From Paul Eggert (2006-03-22):\n# The Department of Internal Affairs (DIA) maintains a brief history,\n# as does Carol Squires; see tz-link.html for the full references.\n# Use these sources in preference to Shanks & Pottenger.\n#\n# For Chatham, IATA SSIM (1991/1999) gives the NZ rules but with\n# transitions at 2:45 local standard time; this confirms that Chatham\n# is always exactly 45 minutes ahead of Auckland.\n\n# From Colin Sharples (2007-04-30):\n# DST will now start on the last Sunday in September, and end on the\n# first Sunday in April.  The changes take effect this year, meaning\n# that DST will begin on 2007-09-30 2008-04-06.\n# http://www.dia.govt.nz/diawebsite.nsf/wpg_URL/Services-Daylight-Saving-Daylight-saving-to-be-extended\n\n# From Paul Eggert (2014-07-14):\n# Chatham Island time was formally standardized on 1957-01-01 by\n# New Zealand's Standard Time Amendment Act 1956 (1956-10-26).\n# https://www.austlii.edu.au/nz/legis/hist_act/staa19561956n100244.pdf\n# According to Google Books snippet view, a speaker in the New Zealand\n# parliamentary debates in 1956 said \"Clause 78 makes provision for standard\n# time in the Chatham Islands.  The time there is 45 minutes in advance of New\n# Zealand time.  I understand that is the time they keep locally, anyhow.\"\n# For now, assume this practice goes back to the introduction of standard time\n# in New Zealand, as this would make Chatham Islands time almost exactly match\n# LMT back when New Zealand was at UT +11:30; also, assume Chatham Islands did\n# not observe New Zealand's prewar DST.\n\n###############################################################################\n\n\n# Bonin (Ogasawara) Islands and Marcus Island (Minami-Tori-shima)\n\n# From Wakaba (2019-01-28) via Phake Nick:\n# National Diet Library of Japan has several reports by Japanese Government\n# officers that describe the time used in islands when they visited there.\n# According to them (and other sources such as newspapers), standard time UTC\n# + 10 (JST + 1) and DST UTC + 11 (JST + 2) was used until its return to Japan\n# at 1968-06-26 00:00 JST.  The exact periods of DST are still unknown.\n# I guessed Guam, Mariana, and Bonin and Marcus districts might have\n# synchronized their DST periods, but reports imply they had their own\n# decisions, i.e. there were three or more different time zones....\n#\n# https://wiki.suikawiki.org/n/小笠原諸島の標準時\n\n# From Phake Nick (2019-02-12):\n# Because their last time change to return to Japanese time when they returned\n# to Japanese rule was right before 1970, ... per the current tz database\n# rule, the information doesn't warrant creation of a new timezone for Bonin\n# Islands itself and is thus as an anecdotal note for interest purpose only.\n# ... [The abovementioned link] described some special timekeeping phenomenon\n# regarding Marcus island, another remote island currently owned by Japanese\n# in the same administrative unit as Bonin Islands.  Many reports claim that\n# the American coastal guard on the American quarter of the island use its own\n# coastal guard time, and most sources describe the time as UTC+11, being two\n# hours faster than JST used by some Japanese personnel on the island.  Some\n# sites describe it as same as Wake Island/Guam time although it would be\n# incorrect to be same as Guam.  And then in a few Japanese governmental\n# report from 1980s (from National Institute of Information and Communications\n# Technology) regarding the construction of VLBI facility on the Marcus\n# Island, it claimed that there are three time standards being used on the\n# island at the time which include not just JST (UTC+9) or [US]CG time\n# (UTC+11) but also a JMSDF time (UTC+10) (Japan Maritime Self-Defense\n# Force).  Unfortunately there are no other sources that mentioned such time\n# and there are also no information on things like how the time was used.\n\n\n# Fiji\n\n# Howse writes (p 153) that in 1879 the British governor of Fiji\n# enacted an ordinance standardizing the islands on Antipodean Time\n# instead of the American system (which was one day behind).\n\n# From Rives McDow (1998-10-08):\n# Fiji will introduce DST effective 0200 local time, 1998-11-01\n# until 0300 local time 1999-02-28.  Each year the DST period will\n# be from the first Sunday in November until the last Sunday in February.\n\n# From Paul Eggert (2000-01-08):\n# IATA SSIM (1999-09) says DST ends 0100 local time.  Go with McDow.\n\n# From the BBC World Service in\n# http://news.bbc.co.uk/2/hi/asia-pacific/205226.stm (1998-10-31 16:03 UTC):\n# The Fijian government says the main reasons for the time change is to\n# improve productivity and reduce road accidents.... [T]he move is also\n# intended to boost Fiji's ability to attract tourists to witness the dawning\n# of the new millennium.\n\n# http://www.fiji.gov.fj/press/2000_09/2000_09_13-05.shtml (2000-09-13)\n# reports that Fiji has discontinued DST.\n\n\n# Kiribati\n\n# From Paul Eggert (1996-01-22):\n# Today's _Wall Street Journal_ (page 1) reports that Kiribati\n# \"declared it the same day [throughout] the country as of Jan. 1, 1995\"\n# as part of the competition to be first into the 21st century.\n\n# From Kerry Shetline (2018-02-03):\n# December 31 was the day that was skipped, so that the transition\n# would be from Friday December 30, 1994 to Sunday January 1, 1995.\n# From Paul Eggert (2018-02-04):\n# One source for this is page 202 of: Bartky IR. One Time Fits All:\n# The Campaigns for Global Uniformity (2007).\n\n# Kanton\n\n# From Paul Eggert (2021-05-27):\n# Kiribati's +13 timezone is represented by Kanton, its only populated\n# island.  (It was formerly spelled \"Canton\", but Gilbertese lacks \"C\".)\n# Kanton was settled on 1937-08-31 by two British radio operators\n# <https://history.state.gov/historicaldocuments/frus1937v02/d94>;\n# Americans came the next year and built an airfield, partly to\n# establish airline service and perhaps partly anticipating the\n# next war.  Aside from the war, the airfield was used by commercial\n# airlines until long-range jets became standard; although currently\n# for emergency use only, China says it is considering rebuilding the\n# airfield for high-end niche tourism.  Kanton has about two dozen\n# people, caretakers who rotate in from the rest of Kiribati in 2-5\n# year shifts, and who use some of the leftover structures\n# <http://pipa.neaq.org/2012/06/images-of-kanton-island.html>.\n\n# Kwajalein\n\n# From an AP article (1993-08-22):\n# \"The nearly 3,000 Americans living on this remote Pacific atoll have a good\n# excuse for not remembering Saturday night: there wasn't one.  Residents were\n# going to bed Friday night and waking up Sunday morning because at midnight\n# -- 8 A.M. Eastern daylight time on Saturday -- Kwajalein was jumping from\n# one side of the international date line to the other.\"\n# \"In Marshall Islands, Friday is followed by Sunday\", NY Times. 1993-08-22.\n# https://www.nytimes.com/1993/08/22/world/in-marshall-islands-friday-is-followed-by-sunday.html\n\n# From Paul Eggert (2022-03-31):\n# Phake Nick (2018-10-27) noted <https://wiki.suikawiki.org/n/南洋群島の標準時>'s\n# citation of a 1993 AP article published in the New York Times saying\n# Kwajalein synchronized its day with the US mainland about 40 years earlier.\n# However the AP article is vague and possibly wrong about this.  The article\n# says the earlier switch was \"about 40 years ago when the United States\n# Army established a missile test range here\".  However, the Kwajalein Test\n# Center was established on 1960-10-01 and was run by the US Navy.  It was\n# transferred to the US Army on 1964-07-01.  See \"Seize the High Ground\"\n# <https://history.army.mil/html/books/070/70-88-1/cmhPub_70-88-1.pdf>.\n# Given that Shanks was right on the money about the 1993 change, I'm inclined\n# to take Shanks's word for the 1969 change unless we find better evidence.\n\n\n# N Mariana Is, Guam\n\n# From Phake Nick (2018-10-27):\n# Guam Island was briefly annexed by Japan during ... year 1941-1944 ...\n# however there are no detailed information about what time it use during that\n# period.  It would probably be reasonable to assume Guam use GMT+9 during\n# that period of time like the surrounding area.\n\n# From Paul Eggert (2023-01-23):\n# Howse writes (p 153) \"The Spaniards, on the other hand, reached the\n# Philippines and the Ladrones from America,\" and implies that the Ladrones\n# (now called the Marianas) kept American date for quite some time.\n# For now, we assume the Ladrones switched at the same time as the Philippines;\n# see Asia/Manila.\n#\n# Use 1941-12-10 and 1944-07-31 for Guam WWII transitions, as the rough start\n# and end of Japanese control of Agana.  We don't know whether the Northern\n# Marianas followed Guam's DST rules from 1959 through 1977; for now, assume\n# they did as that avoids the need for a separate zone due to our 1970 cutoff.\n#\n# US Public Law 106-564 (2000-12-23) made UT +10 the official standard time,\n# under the name \"Chamorro standard time\".  There is no official abbreviation,\n# but Congressman Robert A. Underwood, author of the bill that became law,\n# wrote in a press release (2000-12-27) that he will seek the use of \"ChST\".\n\n# See also the commentary for Micronesia.\n\n\n# Marshall Is\n# See the commentary for Micronesia.\n\n\n# Micronesia (and nearby)\n\n# From Paul Eggert (2018-11-18):\n# Like the Ladrones (see Guam commentary), assume the Spanish East Indies\n# kept American time until the Philippines switched at the end of 1844.\n\n# From Paul Eggert (1999-10-29):\n# The Federated States of Micronesia Visitors Board writes in\n# The Federated States of Micronesia - Visitor Information (1999-01-26)\n# http://www.fsmgov.org/info/clocks.html\n# that Truk and Yap are UT +10, and Ponape and Kosrae are +11.\n# We don't know when Kosrae switched from +12; assume January 1 for now.\n\n# From Phake Nick (2018-10-27):\n#\n# From a Japanese wiki site https://wiki.suikawiki.org/n/南洋群島の標準時\n# ...\n# For \"Southern Islands\" (modern region of Mariana + Palau + Federation of\n# Micronesia + Marshall Islands):\n#\n# A 1906 Japanese magazine shown the Caroline Islands and Mariana Islands\n# who was occupied by Germany at the time as GMT+10, together with the like\n# of German New Guinea.  However there is a marking saying it have not been\n# implemented (yet).  No further information after that were found.\n#\n# Japan invaded those islands in 1914, and records shows that they were\n# instructed to use JST at the time.\n#\n# 1915 January telecommunication record on the Jaluit Atoll shows they use\n# the meridian of 170E as standard time (GMT+11:20), which is similar to the\n# longitude of the atoll.\n# 1915 February record say the 170E standard time is to be used until\n# February 9 noon, and after February 9 noon they are to use JST.\n# However these are time used within the Japanese Military at the time and\n# probably does not reflect the time used by local resident at the time (that\n# is if they keep their own time back then)\n#\n# In January 1919 the occupying force issued a command that split the area\n# into three different timezone with meridian of 135E, 150E, 165E (JST+0, +1,\n# +2), and the command was to become effective from February 1 of the same\n# year.  Despite the target of the command is still only for the occupying\n# force itself, further publication have described the time as the standard\n# time for the occupied area and thus it can probably be seen as such.\n#  * Area that use meridian of 135E: Palau and Yap civil administration area\n#    (Southern Islands Western Standard Time)\n#  * Area that use meridian of 150E: Truk (Chuuk) and Saipan civil\n#    administration area (Southern Islands Central Standard Time)\n#  * Area that use meridian of 165E: Ponape (Pohnpei) and Jaluit civil\n#    administration area (Southern Islands Eastern Standard Time).\n#  * In the next few years Japanese occupation of those islands have been\n#    formalized via League of Nation Mandate (South Pacific Mandate) and formal\n#    governance structure have been established, these district [become\n#    subprefectures] and timezone classification have been inherited as standard\n#    time of the area.\n#  * Saipan subprefecture include Mariana islands (exclude Guam which was\n#    occupied by America at the time), Palau and Yap subprefecture rule the\n#    Western Caroline Islands with 137E longitude as border, Truk and Ponape\n#    subprefecture rule the Eastern Caroline Islands with 154E as border, Ponape\n#    subprefecture also rule part of Marshall Islands to the west of 164E\n#    starting from (1918?) and Jaluit subprefecture rule the rest of the\n#    Marshall Islands.\n#\n# And then in year 1937, an announcement was made to change the time in the\n# area into 2 timezones:\n#  * Area that use meridian of 135E: area administered by Palau, Yap and\n#    Saipan subprefecture (Southern Islands Western Standard Time)\n#  * Area that use meridian of 150E: area administered by Truk (Chuuk),\n#    Ponape (Pohnpei) and Jaluit subprefecture (Southern Islands Eastern\n#    Standard Time)\n#\n# Another announcement issued in 1941 say that on April 1 that year,\n# standard time of the Southern Islands would be changed to use the meridian\n# of 135E (GMT+9), and thus abolishing timezone different within the area.\n#\n# Then Pacific theater of WWII started and Japan slowly lose control on the\n# island.  The webpage I linked above contain no information during this\n# period of time....\n#\n# After the end of WWII, in 1946 February, a document written by the\n# (former?) Japanese military personnel describe there are 3 hours time\n# different between Caroline islands time/Wake island time and the Chungking\n# time, which would mean the time being used there at the time was GMT+10.\n#\n# After that, the area become Trust Territories of the Pacific Islands\n# under American administration from year 1947.  The site listed some\n# American/International books/maps/publications about time used in those\n# area during this period of time but they doesn't seems to be reliable\n# information so it would be the best if someone know where can more reliable\n# information can be found.\n#\n#\n# From Paul Eggert (2018-11-18):\n#\n# For the above, use vague dates like \"1914\" and \"1945\" for transitions that\n# plausibly exist but for which the details are not known.  The information\n# for Wake is too sketchy to act on.\n#\n# The 1906 GMT+10 info about German-controlled islands might not have been\n# done, so omit it from the data for now.\n#\n# The Jaluit info governs Kwajalein.\n\n\n# Midway\n\n# From Charles T O'Connor, KMTH DJ (1956),\n# quoted in the KTMH section of the Radio Heritage Collection\n# <http://radiodx.com/spdxr/KMTH.htm> (2002-12-31):\n# For the past two months we've been on what is known as Daylight\n# Saving Time.  This time has put us on air at 5am in the morning,\n# your time down there in New Zealand.  Starting September 2, 1956\n# we'll again go back to Standard Time.  This'll mean that we'll go to\n# air at 6am your time.\n#\n# From Paul Eggert (2003-03-23):\n# We don't know the date of that quote, but we'll guess they\n# started DST on June 3.  Possibly DST was observed other years\n# in Midway, but we have no record of it.\n\n# Nauru\n\n# From Phake Nick (2018-10-31):\n# Currently, the tz database say Nauru use LMT until 1921, and then\n# switched to GMT+11:30 for the next two decades.\n# However, a number of timezone map published in America/Japan back then\n# showed its timezone as GMT+11 per https://wiki.suikawiki.org/n/ナウルの標準時\n# And it would also be nice if the 1921 transition date could be sourced.\n# ...\n# The \"Nauru Standard Time Act 1978 Time Change\"\n# http://ronlaw.gov.nr/nauru_lpms/files/gazettes/4b23a17d2030150404db7a5fa5872f52.pdf#page=3\n# based on \"Nauru Standard Time Act 1978 Time Change\"\n# http://www.paclii.org/nr/legis/num_act/nsta1978207/ defined that \"Nauru\n# Alternative Time\" (GMT+12) should be in effect from 1979 Feb.\n#\n# From Paul Eggert (2018-11-19):\n# The 1921-01-15 introduction of standard time is in Shanks; it is also in\n# \"Standard Time Throughout the World\", US National Bureau of Standards (1935),\n# page 3, which does not give the UT offset.  In response to a comment by\n# Phake Nick I set the Nauru time of occupation by Japan to\n# 1942-08-29/1945-09-08 by using dates from:\n# https://en.wikipedia.org/wiki/Japanese_occupation_of_Nauru\n\n# Norfolk\n\n# From Alexander Krivenyshev (2015-09-23):\n# Norfolk Island will change ... from +1130 to +1100:\n# https://www.comlaw.gov.au/Details/F2015L01483/Explanatory%20Statement/Text\n# ... at 12.30 am (by legal time in New South Wales) on 4 October 2015.\n# http://www.norfolkisland.gov.nf/nia/MediaRelease/Media%20Release%20Norfolk%20Island%20Standard%20Time%20Change.pdf\n\n# From Paul Eggert (2019-08-28):\n# Transitions before 2015 are from timeanddate.com, which consulted\n# the Norfolk Island Museum and the Australian Bureau of Meteorology's\n# Norfolk Island station, and found no record of Norfolk observing DST\n# other than in 1974/5.  See:\n# https://www.timeanddate.com/time/australia/norfolk-island.html\n# However, disagree with timeanddate about the 1975-03-02 transition;\n# timeanddate has 02:00 but 02:00s corresponds to what the NSW law said\n# (thanks to Michael Deckers).\n\n# Norfolk started observing Australian DST in spring 2019.\n# From Kyle Czech (2019-08-13):\n# https://www.legislation.gov.au/Details/F2018L01702\n# From Michael Deckers (2019-08-14):\n# https://www.legislation.gov.au/Details/F2019C00010\n\n# Palau\n# See commentary for Micronesia.\n\n# Pitcairn\n\n# From Rives McDow (1999-11-08):\n# A Proclamation was signed by the Governor of Pitcairn on the 27th March 1998\n# with regard to Pitcairn Standard Time.  The Proclamation is as follows.\n#\n#\tThe local time for general purposes in the Islands shall be\n#\tCo-ordinated Universal time minus 8 hours and shall be known\n#\tas Pitcairn Standard Time.\n#\n# ... I have also seen Pitcairn listed as UTC minus 9 hours in several\n# references, and can only assume that this was an error in interpretation\n# somehow in light of this proclamation.\n\n# From Rives McDow (1999-11-09):\n# The Proclamation regarding Pitcairn time came into effect on 27 April 1998\n# ... at midnight.\n\n# From Howie Phelps (1999-11-10), who talked to a Pitcairner via shortwave:\n# Betty Christian told me yesterday that their local time is the same as\n# Pacific Standard Time. They used to be ½ hour different from us here in\n# Sacramento but it was changed a couple of years ago.\n\n\n# (Western) Samoa and American Samoa\n\n# Howse writes (p 153) that after the 1879 standardization on Antipodean\n# time by the British governor of Fiji, the King of Samoa decided to change\n# \"the date in his kingdom from the Antipodean to the American system,\n# ordaining - by a masterpiece of diplomatic flattery - that\n# the Fourth of July should be celebrated twice in that year.\"\n# This happened in 1892, according to the Evening News (Sydney) of 1892-07-20.\n# https://webspace.science.uu.nl/~gent0113/idl/idl_alaska_samoa.htm\n\n# Although Shanks & Pottenger says they both switched to UT -11:30\n# in 1911, and to -11 in 1950. many earlier sources give -11\n# for American Samoa, e.g., the US National Bureau of Standards\n# circular \"Standard Time Throughout the World\", 1932.\n# Assume American Samoa switched to -11 in 1911, not 1950,\n# and that after 1950 they agreed until (western) Samoa skipped a\n# day in 2011.  Assume also that the Samoas follow the US and New\n# Zealand's \"ST\"/\"DT\" style of daylight-saving abbreviations.\n\n\n# Tonga\n\n# From Paul Eggert (2021-03-04):\n# In 1943 \"The standard time kept is 12 hrs. 19 min. 12 sec. fast\n# on Greenwich mean time.\" according to the Admiralty's Hydrographic\n# Dept., Pacific Islands Pilot, Vol. II, 7th ed., 1943, p 360.\n\n# From Michael Deckers (2021-03-03):\n# [Ian R Bartky: \"One Time Fits All: The Campaigns for Global Uniformity\".\n# Stanford University Press. 2007. p. 255]:\n# On 10 September 1945 Tonga adopted a standard time 12 hours,\n# 20 minutes in advance of Greenwich.\n\n# From Paul Eggert (1996-01-22):\n# Today's _Wall Street Journal_ (p 1) reports that \"Tonga has been plotting\n# to sneak ahead of [New Zealanders] by introducing daylight-saving time.\"\n# Since Kiribati has moved the Date Line it's not clear what Tonga will do.\n\n# Don Mundell writes in the 1997-02-20 Tonga Chronicle\n# How Tonga became 'The Land where Time Begins':\n# http://www.tongatapu.net.to/tonga/homeland/timebegins.htm\n#\n# Until 1941 Tonga maintained a standard time 50 minutes ahead of NZST\n# 12 hours and 20 minutes ahead of GMT.  When New Zealand adjusted its\n# standard time in 1940s, Tonga had the choice of subtracting from its\n# local time to come on the same standard time as New Zealand or of\n# advancing its time to maintain the differential of 13°\n# (approximately 50 minutes ahead of New Zealand time).\n#\n# Because His Majesty King Tāufaʻāhau Tupou IV, then Crown Prince\n# Tungī, preferred to ensure Tonga's title as the land where time\n# begins, the Legislative Assembly approved the latter change.\n#\n# But some of the older, more conservative members from the outer\n# islands objected. \"If at midnight on Dec. 31, we move ahead 40\n# minutes, as your Royal Highness wishes, what becomes of the 40\n# minutes we have lost?\"\n#\n# The Crown Prince, presented an unanswerable argument: \"Remember that\n# on the World Day of Prayer, you would be the first people on Earth\n# to say your prayers in the morning.\"\n#\n# From Tim Parenti (2021-09-13), per Paul Eggert (2006-03-22) and Michael\n# Deckers (2021-03-03):\n# Mundell places the transition from +12:20 to +13 in 1941, while Shanks &\n# Pottenger say the transition was on 1968-10-01.\n#\n# The Air Almanac published contemporaneous tables of standard times,\n# which listed +12:20 as of Nov 1960 and +13 as of Mar 1961:\n#   Nov 1960: https://books.google.com/books?id=bVgtWM6kPZUC&pg=SL1-PA19\n#   Mar 1961: https://books.google.com/books?id=W2nItAul4g0C&pg=SL1-PA19\n# (Thanks to P Chan for pointing us toward these sources.)\n# This agrees with Bartky, who writes that \"since 1961 [Tonga's] official time\n# has been thirteen hours in advance of Greenwich time\" (p. 202) and further\n# writes in an endnote that this was because \"the legislation was amended\" on\n# 1960-10-19. (p. 255)\n#\n# Without greater specificity, presume that Bartky and the Air Almanac point to\n# a 1961-01-01 transition, as Tāufaʻāhau Tupou IV was still Crown Prince in\n# 1961 and this still jives with the gist of Mundell's telling, and go with\n# this over Shanks & Pottenger.\n\n# From Eric Ulevik (1999-05-03):\n# Tonga's director of tourism, who is also secretary of the National Millennium\n# Committee, has a plan to get Tonga back in front.\n# He has proposed a one-off move to tropical daylight saving for Tonga from\n# October to March, which has won approval in principle from the Tongan\n# Government.\n\n# From Steffen Thorsen (1999-09-09):\n# * Tonga will introduce DST in November\n#\n# I was given this link by John Letts:\n# http://news.bbc.co.uk/hi/english/world/asia-pacific/newsid_424000/424764.stm\n#\n# I have not been able to find exact dates for the transition in November\n# yet. By reading this article it seems like Fiji will be 14 hours ahead\n# of UTC as well, but as far as I know Fiji will only be 13 hours ahead\n# (12 + 1 hour DST).\n\n# From Arthur David Olson (1999-09-20):\n# According to <http://www.tongaonline.com/news/sept1799.html>:\n# \"Daylight Savings Time will take effect on Oct. 2 through April 15, 2000\n# and annually thereafter from the first Saturday in October through the\n# third Saturday of April.  Under the system approved by Privy Council on\n# Sept. 10, clocks must be turned ahead one hour on the opening day and\n# set back an hour on the closing date.\"\n# Alas, no indication of the time of day.\n\n# From Rives McDow (1999-10-06):\n# Tonga started its Daylight Saving on Saturday morning October 2nd at 0200am.\n# Daylight Saving ends on April 16 at 0300am which is Sunday morning.\n\n# From Steffen Thorsen (2000-10-31):\n# Back in March I found a notice on the website http://www.tongaonline.com\n# that Tonga changed back to standard time one month early, on March 19\n# instead of the original reported date April 16. Unfortunately, the article\n# is no longer available on the site, and I did not make a copy of the\n# text, and I have forgotten to report it here.\n# (Original URL was <http://www.tongaonline.com/news/march162000.htm>)\n\n# From Rives McDow (2000-12-01):\n# Tonga is observing DST as of 2000-11-04 and will stop on 2001-01-27.\n\n# From Sione Moala-Mafi (2001-09-20) via Rives McDow:\n# At 2:00am on the first Sunday of November, the standard time in the Kingdom\n# shall be moved forward by one hour to 3:00am.  At 2:00am on the last Sunday\n# of January the standard time in the Kingdom shall be moved backward by one\n# hour to 1:00am.\n\n# From Pulu ʻAnau (2002-11-05):\n# The law was for 3 years, supposedly to get renewed.  It wasn't.\n\n# From Pulu ʻAnau (2016-10-27):\n# http://mic.gov.to/news-today/press-releases/6375-daylight-saving-set-to-run-from-6-november-2016-to-15-january-2017\n# Cannot find anyone who knows the rules, has seen the duration or has seen\n# the cabinet decision, but it appears we are following Fiji's rule set.\n#\n# From Tim Parenti (2016-10-26):\n# Assume Tonga will observe DST from the first Sunday in November at 02:00\n# through the third Sunday in January at 03:00, like Fiji, for now.\n\n# From David Wade (2017-10-18):\n# In August government was dissolved by the King.  The current prime minister\n# continued in office in care taker mode.  It is easy to see that few\n# decisions will be made until elections 16th November.\n#\n# From Paul Eggert (2017-10-18):\n# For now, guess that DST is discontinued.  That's what the IATA is guessing.\n\n\n###############################################################################\n\n# The International Date Line\n\n# From Gwillim Law (2000-01-03):\n#\n# The International Date Line is not defined by any international standard,\n# convention, or treaty.  Mapmakers are free to draw it as they please.\n# Reputable mapmakers will simply ensure that every point of land appears on\n# the correct side of the IDL, according to the date legally observed there.\n#\n# When Kiribati adopted a uniform date in 1995, thereby moving the Phoenix and\n# Line Islands to the west side of the IDL (or, if you prefer, moving the IDL\n# to the east side of the Phoenix and Line Islands), I suppose that most\n# mapmakers redrew the IDL following the boundary of Kiribati.  Even that line\n# has a rather arbitrary nature.  The straight-line boundaries between Pacific\n# island nations that are shown on many maps are based on an international\n# convention, but are not legally binding national borders.... The date is\n# governed by the IDL; therefore, even on the high seas, there may be some\n# places as late as fourteen hours later than UTC.  And, since the IDL is not\n# an international standard, there are some places on the high seas where the\n# correct date is ambiguous.\n\n# From Wikipedia <https://en.wikipedia.org/wiki/Nautical_time> (2023-01-23):\n# The nautical time zone system is analogous to the terrestrial time zone\n# system for use on high seas.  Under the system time changes are required for\n# changes of longitude in one-hour steps.  The one-hour step corresponds to a\n# time zone width of 15° longitude.  The 15° gore that is offset from GMT or\n# UT1 (not UTC) by twelve hours is bisected by the nautical date line into two\n# 7°30' gores that differ from GMT by ±12 hours.  A nautical date line is\n# implied but not explicitly drawn on time zone maps.  It follows the 180th\n# meridian except where it is interrupted by territorial waters adjacent to\n# land, forming gaps: it is a pole-to-pole dashed line.\n\n# From Paul Eggert (2023-01-23):\n# The American Practical Navigator <https://msi.nga.mil/Publications/APN>,\n# 2019 edition, merely says that the International Date Line\n# \"coincides with the 180th meridian over most of its length.\"\n"
        },
        {
          "name": "backward",
          "type": "blob",
          "size": 11.7568359375,
          "content": "# Links and zones for backward compatibility\n\n# This file is in the public domain, so clarified as of\n# 2009-05-17 by Arthur David Olson.\n\n# This file provides links from old or merged timezone names to current ones.\n# It also provides a few zone entries for old naming conventions.\n# Many names changed in 1993 and in 1995, and many merged names moved here\n# in the period from 2013 through 2022.  Several of these names are\n# also present in the file 'backzone', which has data important only\n# for pre-1970 timestamps and so is out of scope for tzdb proper.\n\n# Although this file is optional and tzdb will work if you omit it by\n# building with 'make BACKWARD=', in practice downstream users\n# typically use this file for backward compatibility.\n\n# This file is divided into sections, one for each major reason for a\n# backward compatibility link.  Each section is sorted by link name.\n\n# A \"#= TARGET1\" comment labels each link inserted only because some\n# .zi parsers (including tzcode through 2022e) mishandle links to links.\n# The comment says what the target would be if these parsers were fixed\n# so that data could contain links to links.  For example, the line\n# \"Link Australia/Sydney Australia/ACT #= Australia/Canberra\" would be\n# \"Link Australia/Canberra Australia/ACT\" were it not that data lines\n# refrain from linking to links like Australia/Canberra, which means\n# the Australia/ACT line links instead to Australia/Sydney,\n# Australia/Canberra's target.\n\n\n# Pre-1993 naming conventions\n\n# Link\tTARGET\t\t\tLINK-NAME\t#= TARGET1\nLink\tAustralia/Sydney\tAustralia/ACT\t#= Australia/Canberra\nLink\tAustralia/Lord_Howe\tAustralia/LHI\nLink\tAustralia/Sydney\tAustralia/NSW\nLink\tAustralia/Darwin\tAustralia/North\nLink\tAustralia/Brisbane\tAustralia/Queensland\nLink\tAustralia/Adelaide\tAustralia/South\nLink\tAustralia/Hobart\tAustralia/Tasmania\nLink\tAustralia/Melbourne\tAustralia/Victoria\nLink\tAustralia/Perth\t\tAustralia/West\nLink\tAustralia/Broken_Hill\tAustralia/Yancowinna\nLink\tAmerica/Rio_Branco\tBrazil/Acre\t#= America/Porto_Acre\nLink\tAmerica/Noronha\t\tBrazil/DeNoronha\nLink\tAmerica/Sao_Paulo\tBrazil/East\nLink\tAmerica/Manaus\t\tBrazil/West\nLink\tEurope/Brussels\t\tCET\nLink\tAmerica/Chicago\t\tCST6CDT\nLink\tAmerica/Halifax\t\tCanada/Atlantic\nLink\tAmerica/Winnipeg\tCanada/Central\n# This line is commented out, as the name exceeded the 14-character limit\n# and was an unused misnomer.\n#Link\tAmerica/Regina\t\tCanada/East-Saskatchewan\nLink\tAmerica/Toronto\t\tCanada/Eastern\nLink\tAmerica/Edmonton\tCanada/Mountain\nLink\tAmerica/St_Johns\tCanada/Newfoundland\nLink\tAmerica/Vancouver\tCanada/Pacific\nLink\tAmerica/Regina\t\tCanada/Saskatchewan\nLink\tAmerica/Whitehorse\tCanada/Yukon\nLink\tAmerica/Santiago\tChile/Continental\nLink\tPacific/Easter\t\tChile/EasterIsland\nLink\tAmerica/Havana\t\tCuba\nLink\tEurope/Athens\t\tEET\nLink\tAmerica/Panama\t\tEST\nLink\tAmerica/New_York\tEST5EDT\nLink\tAfrica/Cairo\t\tEgypt\nLink\tEurope/Dublin\t\tEire\n# Vanguard section, for most .zi parsers.\n#Link\tGMT\t\t\tEtc/GMT\n#Link\tGMT\t\t\tEtc/GMT+0\n#Link\tGMT\t\t\tEtc/GMT-0\n#Link\tGMT\t\t\tEtc/GMT0\n#Link\tGMT\t\t\tEtc/Greenwich\n# Rearguard section, for TZUpdater 2.3.2 and earlier.\nLink\tEtc/GMT\t\t\tEtc/GMT+0\nLink\tEtc/GMT\t\t\tEtc/GMT-0\nLink\tEtc/GMT\t\t\tEtc/GMT0\nLink\tEtc/GMT\t\t\tEtc/Greenwich\n# End of rearguard section.\nLink\tEtc/UTC\t\t\tEtc/UCT\nLink\tEtc/UTC\t\t\tEtc/Universal\nLink\tEtc/UTC\t\t\tEtc/Zulu\nLink\tEurope/London\t\tGB\nLink\tEurope/London\t\tGB-Eire\n# Vanguard section, for most .zi parsers.\n#Link\tGMT\t\t\tGMT+0\n#Link\tGMT\t\t\tGMT-0\n#Link\tGMT\t\t\tGMT0\n#Link\tGMT\t\t\tGreenwich\n# Rearguard section, for TZUpdater 2.3.2 and earlier.\nLink\tEtc/GMT\t\t\tGMT+0\nLink\tEtc/GMT\t\t\tGMT-0\nLink\tEtc/GMT\t\t\tGMT0\nLink\tEtc/GMT\t\t\tGreenwich\n# End of rearguard section.\nLink\tAsia/Hong_Kong\t\tHongkong\nLink\tAfrica/Abidjan\t\tIceland\t#= Atlantic/Reykjavik\nLink\tAsia/Tehran\t\tIran\nLink\tAsia/Jerusalem\t\tIsrael\nLink\tAmerica/Jamaica\t\tJamaica\nLink\tAsia/Tokyo\t\tJapan\nLink\tPacific/Kwajalein\tKwajalein\nLink\tAfrica/Tripoli\t\tLibya\nLink\tEurope/Brussels\t\tMET\nLink\tAmerica/Phoenix\t\tMST\nLink\tAmerica/Denver\t\tMST7MDT\nLink\tAmerica/Tijuana\t\tMexico/BajaNorte\nLink\tAmerica/Mazatlan\tMexico/BajaSur\nLink\tAmerica/Mexico_City\tMexico/General\nLink\tPacific/Auckland\tNZ\nLink\tPacific/Chatham\t\tNZ-CHAT\nLink\tAmerica/Denver\t\tNavajo\t#= America/Shiprock\nLink\tAsia/Shanghai\t\tPRC\nLink\tEurope/Warsaw\t\tPoland\nLink\tEurope/Lisbon\t\tPortugal\nLink\tAsia/Taipei\t\tROC\nLink\tAsia/Seoul\t\tROK\nLink\tAsia/Singapore\t\tSingapore\nLink\tEurope/Istanbul\t\tTurkey\nLink\tEtc/UTC\t\t\tUCT\nLink\tAmerica/Anchorage\tUS/Alaska\nLink\tAmerica/Adak\t\tUS/Aleutian\nLink\tAmerica/Phoenix\t\tUS/Arizona\nLink\tAmerica/Chicago\t\tUS/Central\nLink\tAmerica/Indiana/Indianapolis\tUS/East-Indiana\nLink\tAmerica/New_York\tUS/Eastern\nLink\tPacific/Honolulu\tUS/Hawaii\nLink\tAmerica/Indiana/Knox\tUS/Indiana-Starke\nLink\tAmerica/Detroit\t\tUS/Michigan\nLink\tAmerica/Denver\t\tUS/Mountain\nLink\tAmerica/Los_Angeles\tUS/Pacific\nLink\tPacific/Pago_Pago\tUS/Samoa\nLink\tEtc/UTC\t\t\tUTC\nLink\tEtc/UTC\t\t\tUniversal\nLink\tEurope/Moscow\t\tW-SU\nLink\tEtc/UTC\t\t\tZulu\n\n\n# Two-part names that were renamed mostly to three-part names in 1995\n\n# Link\tTARGET\t\t\t\tLINK-NAME\t#= TARGET1\nLink\tAmerica/Argentina/Buenos_Aires\tAmerica/Buenos_Aires\nLink\tAmerica/Argentina/Catamarca\tAmerica/Catamarca\nLink\tAmerica/Argentina/Cordoba\tAmerica/Cordoba\nLink\tAmerica/Indiana/Indianapolis\tAmerica/Indianapolis\nLink\tAmerica/Argentina/Jujuy\t\tAmerica/Jujuy\nLink\tAmerica/Indiana/Knox\t\tAmerica/Knox_IN\nLink\tAmerica/Kentucky/Louisville\tAmerica/Louisville\nLink\tAmerica/Argentina/Mendoza\tAmerica/Mendoza\nLink\tAmerica/Puerto_Rico\t\tAmerica/Virgin\t#= America/St_Thomas\nLink\tPacific/Pago_Pago\t\tPacific/Samoa\n\n\n# Pre-2013 practice, which typically had a Zone per zone.tab line\n\n# Link\tTARGET\t\t\tLINK-NAME\nLink\tAfrica/Abidjan\t\tAfrica/Accra\nLink\tAfrica/Nairobi\t\tAfrica/Addis_Ababa\nLink\tAfrica/Nairobi\t\tAfrica/Asmara\nLink\tAfrica/Abidjan\t\tAfrica/Bamako\nLink\tAfrica/Lagos\t\tAfrica/Bangui\nLink\tAfrica/Abidjan\t\tAfrica/Banjul\nLink\tAfrica/Maputo\t\tAfrica/Blantyre\nLink\tAfrica/Lagos\t\tAfrica/Brazzaville\nLink\tAfrica/Maputo\t\tAfrica/Bujumbura\nLink\tAfrica/Abidjan\t\tAfrica/Conakry\nLink\tAfrica/Abidjan\t\tAfrica/Dakar\nLink\tAfrica/Nairobi\t\tAfrica/Dar_es_Salaam\nLink\tAfrica/Nairobi\t\tAfrica/Djibouti\nLink\tAfrica/Lagos\t\tAfrica/Douala\nLink\tAfrica/Abidjan\t\tAfrica/Freetown\nLink\tAfrica/Maputo\t\tAfrica/Gaborone\nLink\tAfrica/Maputo\t\tAfrica/Harare\nLink\tAfrica/Nairobi\t\tAfrica/Kampala\nLink\tAfrica/Maputo\t\tAfrica/Kigali\nLink\tAfrica/Lagos\t\tAfrica/Kinshasa\nLink\tAfrica/Lagos\t\tAfrica/Libreville\nLink\tAfrica/Abidjan\t\tAfrica/Lome\nLink\tAfrica/Lagos\t\tAfrica/Luanda\nLink\tAfrica/Maputo\t\tAfrica/Lubumbashi\nLink\tAfrica/Maputo\t\tAfrica/Lusaka\nLink\tAfrica/Lagos\t\tAfrica/Malabo\nLink\tAfrica/Johannesburg\tAfrica/Maseru\nLink\tAfrica/Johannesburg\tAfrica/Mbabane\nLink\tAfrica/Nairobi\t\tAfrica/Mogadishu\nLink\tAfrica/Lagos\t\tAfrica/Niamey\nLink\tAfrica/Abidjan\t\tAfrica/Nouakchott\nLink\tAfrica/Abidjan\t\tAfrica/Ouagadougou\nLink\tAfrica/Lagos\t\tAfrica/Porto-Novo\nLink\tAmerica/Puerto_Rico\tAmerica/Anguilla\nLink\tAmerica/Puerto_Rico\tAmerica/Antigua\nLink\tAmerica/Puerto_Rico\tAmerica/Aruba\nLink\tAmerica/Panama\t\tAmerica/Atikokan\nLink\tAmerica/Puerto_Rico\tAmerica/Blanc-Sablon\nLink\tAmerica/Panama\t\tAmerica/Cayman\nLink\tAmerica/Phoenix\t\tAmerica/Creston\nLink\tAmerica/Puerto_Rico\tAmerica/Curacao\nLink\tAmerica/Puerto_Rico\tAmerica/Dominica\nLink\tAmerica/Puerto_Rico\tAmerica/Grenada\nLink\tAmerica/Puerto_Rico\tAmerica/Guadeloupe\nLink\tAmerica/Puerto_Rico\tAmerica/Kralendijk\nLink\tAmerica/Puerto_Rico\tAmerica/Lower_Princes\nLink\tAmerica/Puerto_Rico\tAmerica/Marigot\nLink\tAmerica/Puerto_Rico\tAmerica/Montserrat\nLink\tAmerica/Toronto\t\tAmerica/Nassau\nLink\tAmerica/Puerto_Rico\tAmerica/Port_of_Spain\nLink\tAmerica/Puerto_Rico\tAmerica/St_Barthelemy\nLink\tAmerica/Puerto_Rico\tAmerica/St_Kitts\nLink\tAmerica/Puerto_Rico\tAmerica/St_Lucia\nLink\tAmerica/Puerto_Rico\tAmerica/St_Thomas\nLink\tAmerica/Puerto_Rico\tAmerica/St_Vincent\nLink\tAmerica/Puerto_Rico\tAmerica/Tortola\nLink\tPacific/Port_Moresby\tAntarctica/DumontDUrville\nLink\tPacific/Auckland\tAntarctica/McMurdo\nLink\tAsia/Riyadh\t\tAntarctica/Syowa\nLink\tEurope/Berlin\t\tArctic/Longyearbyen\nLink\tAsia/Riyadh\t\tAsia/Aden\nLink\tAsia/Qatar\t\tAsia/Bahrain\nLink\tAsia/Kuching\t\tAsia/Brunei\nLink\tAsia/Singapore\t\tAsia/Kuala_Lumpur\nLink\tAsia/Riyadh\t\tAsia/Kuwait\nLink\tAsia/Dubai\t\tAsia/Muscat\nLink\tAsia/Bangkok\t\tAsia/Phnom_Penh\nLink\tAsia/Bangkok\t\tAsia/Vientiane\nLink\tAfrica/Abidjan\t\tAtlantic/Reykjavik\nLink\tAfrica/Abidjan\t\tAtlantic/St_Helena\nLink\tEurope/Brussels\t\tEurope/Amsterdam\nLink\tEurope/Prague\t\tEurope/Bratislava\nLink\tEurope/Zurich\t\tEurope/Busingen\nLink\tEurope/Berlin\t\tEurope/Copenhagen\nLink\tEurope/London\t\tEurope/Guernsey\nLink\tEurope/London\t\tEurope/Isle_of_Man\nLink\tEurope/London\t\tEurope/Jersey\nLink\tEurope/Belgrade\t\tEurope/Ljubljana\nLink\tEurope/Brussels\t\tEurope/Luxembourg\nLink\tEurope/Helsinki\t\tEurope/Mariehamn\nLink\tEurope/Paris\t\tEurope/Monaco\nLink\tEurope/Berlin\t\tEurope/Oslo\nLink\tEurope/Belgrade\t\tEurope/Podgorica\nLink\tEurope/Rome\t\tEurope/San_Marino\nLink\tEurope/Belgrade\t\tEurope/Sarajevo\nLink\tEurope/Belgrade\t\tEurope/Skopje\nLink\tEurope/Berlin\t\tEurope/Stockholm\nLink\tEurope/Zurich\t\tEurope/Vaduz\nLink\tEurope/Rome\t\tEurope/Vatican\nLink\tEurope/Belgrade\t\tEurope/Zagreb\nLink\tAfrica/Nairobi\t\tIndian/Antananarivo\nLink\tAsia/Bangkok\t\tIndian/Christmas\nLink\tAsia/Yangon\t\tIndian/Cocos\nLink\tAfrica/Nairobi\t\tIndian/Comoro\nLink\tIndian/Maldives\t\tIndian/Kerguelen\nLink\tAsia/Dubai\t\tIndian/Mahe\nLink\tAfrica/Nairobi\t\tIndian/Mayotte\nLink\tAsia/Dubai\t\tIndian/Reunion\nLink\tPacific/Port_Moresby\tPacific/Chuuk\nLink\tPacific/Tarawa\t\tPacific/Funafuti\nLink\tPacific/Tarawa\t\tPacific/Majuro\nLink\tPacific/Pago_Pago\tPacific/Midway\nLink\tPacific/Guadalcanal\tPacific/Pohnpei\nLink\tPacific/Guam\t\tPacific/Saipan\nLink\tPacific/Tarawa\t\tPacific/Wake\nLink\tPacific/Tarawa\t\tPacific/Wallis\n\n\n# Non-zone.tab locations with timestamps since 1970 that duplicate\n# those of an existing location\n\n# Link\tTARGET\t\t\tLINK-NAME\nLink\tAfrica/Abidjan\t\tAfrica/Timbuktu\nLink\tAmerica/Argentina/Catamarca\tAmerica/Argentina/ComodRivadavia\nLink\tAmerica/Adak\t\tAmerica/Atka\nLink\tAmerica/Panama\t\tAmerica/Coral_Harbour\nLink\tAmerica/Tijuana\t\tAmerica/Ensenada\nLink\tAmerica/Indiana/Indianapolis\tAmerica/Fort_Wayne\nLink\tAmerica/Toronto\t\tAmerica/Montreal\nLink\tAmerica/Toronto\t\tAmerica/Nipigon\nLink\tAmerica/Iqaluit\t\tAmerica/Pangnirtung\nLink\tAmerica/Rio_Branco\tAmerica/Porto_Acre\nLink\tAmerica/Winnipeg\tAmerica/Rainy_River\nLink\tAmerica/Argentina/Cordoba\tAmerica/Rosario\nLink\tAmerica/Tijuana\t\tAmerica/Santa_Isabel\nLink\tAmerica/Denver\t\tAmerica/Shiprock\nLink\tAmerica/Toronto\t\tAmerica/Thunder_Bay\nLink\tAmerica/Edmonton\tAmerica/Yellowknife\nLink\tPacific/Auckland\tAntarctica/South_Pole\nLink\tAsia/Ulaanbaatar\tAsia/Choibalsan\nLink\tAsia/Shanghai\t\tAsia/Chongqing\nLink\tAsia/Shanghai\t\tAsia/Harbin\nLink\tAsia/Urumqi\t\tAsia/Kashgar\nLink\tAsia/Jerusalem\t\tAsia/Tel_Aviv\nLink\tEurope/Berlin\t\tAtlantic/Jan_Mayen\nLink\tAustralia/Sydney\tAustralia/Canberra\nLink\tAustralia/Hobart\tAustralia/Currie\nLink\tEurope/London\t\tEurope/Belfast\nLink\tEurope/Chisinau\t\tEurope/Tiraspol\nLink\tEurope/Kyiv\t\tEurope/Uzhgorod\nLink\tEurope/Kyiv\t\tEurope/Zaporozhye\nLink\tPacific/Kanton\t\tPacific/Enderbury\nLink\tPacific/Honolulu\tPacific/Johnston\nLink\tPacific/Port_Moresby\tPacific/Yap\nLink\tEurope/Lisbon\t\tWET\n\n\n# Alternate names for the same location\n\n# Link\tTARGET\t\t\tLINK-NAME\t#= TARGET1\nLink\tAfrica/Nairobi\t\tAfrica/Asmera\t#= Africa/Asmara\nLink\tAmerica/Nuuk\t\tAmerica/Godthab\nLink\tAsia/Ashgabat\t\tAsia/Ashkhabad\nLink\tAsia/Kolkata\t\tAsia/Calcutta\nLink\tAsia/Shanghai\t\tAsia/Chungking\t#= Asia/Chongqing\nLink\tAsia/Dhaka\t\tAsia/Dacca\n# Istanbul is in both continents.\nLink\tEurope/Istanbul\t\tAsia/Istanbul\nLink\tAsia/Kathmandu\t\tAsia/Katmandu\nLink\tAsia/Macau\t\tAsia/Macao\nLink\tAsia/Yangon\t\tAsia/Rangoon\nLink\tAsia/Ho_Chi_Minh\tAsia/Saigon\nLink\tAsia/Thimphu\t\tAsia/Thimbu\nLink\tAsia/Makassar\t\tAsia/Ujung_Pandang\nLink\tAsia/Ulaanbaatar\tAsia/Ulan_Bator\nLink\tAtlantic/Faroe\t\tAtlantic/Faeroe\nLink\tEurope/Kyiv\t\tEurope/Kiev\n# Classically, Cyprus is in Asia; e.g. see Herodotus, Histories, I.72.\n# However, for various reasons many users expect to find it under Europe.\nLink\tAsia/Nicosia\t\tEurope/Nicosia\nLink\tPacific/Honolulu\tHST\nLink\tAmerica/Los_Angeles\tPST8PDT\nLink\tPacific/Guadalcanal\tPacific/Ponape\t#= Pacific/Pohnpei\nLink\tPacific/Port_Moresby\tPacific/Truk\t#= Pacific/Chuuk\n"
        },
        {
          "name": "backzone",
          "type": "blob",
          "size": 69.6552734375,
          "content": "# Zones that go back beyond the scope of the tz database\n\n# This file is in the public domain.\n\n# This file is by no means authoritative; if you think you know\n# better, go ahead and edit it (and please send any changes to\n# tz@iana.org for general use in the future).  For more, please see\n# the file CONTRIBUTING in the tz distribution.\n\n# When proposing changes to this file, please use 'git format-patch'\n# format, either by attaching the resulting .patch file to your email,\n# or by using 'git send-email'.  This will help maintainers save time.\n\n\n# From Paul Eggert (2014-10-31):\n\n# This file contains data outside the normal scope of the tz database,\n# in that its zones do not differ from normal tz zones after 1970.\n# Links in this file point to zones in this file, superseding links in\n# the file 'backward'.\n\n# Although zones in this file may be of some use for analyzing\n# pre-1970 timestamps, they are less reliable, cover only a tiny\n# sliver of the pre-1970 era, and cannot feasibly be improved to cover\n# most of the era.  Because the zones are out of normal scope for the\n# database, less effort is put into maintaining this file.  Many of\n# the zones were formerly in other source files, but were removed or\n# replaced by links as their data entries were questionable and/or they\n# differed from other zones only in pre-1970 timestamps.\n\n# Unless otherwise specified, the source for data through 1990 is:\n# Thomas G. Shanks and Rique Pottenger, The International Atlas (6th edition),\n# San Diego: ACS Publications, Inc. (2003).\n# Unfortunately this book contains many errors and cites no sources.\n\n# This file is not intended to be compiled standalone, as it\n# assumes rules from other files.  In the tz distribution, use\n# 'make PACKRATDATA=backzone zones' to compile and install this file.\n\n\n# From Paul Eggert (2020-04-15):\n# The following remarks should be incorporated into this table sometime.\n# Patches in 'git format-patch' format would be welcome.\n#\n# From Phake Nick (2020-04-15):\n# ... the historical timezone data for those China zones seems to be\n# incorrect.  The transition to GMT+8 date given there for these zones\n# were 1980 which also contradict the file description that they do\n# not disagree with normal zone after 1970.  According to sources that\n# have also been cited in the asia file, except Xinjiang and Tibet,\n# they should have adopted the Beijing Time from around 1949/1950\n# depends on exactly when each of those cities were taken over by the\n# communist army.  And they should also follow the DST setting of\n# Asia/Shanghai after that point of time.  In addition,\n# http://gaz.ncl.edu.tw/detail.jsp?sysid=E1091792 the document from\n# Chongqing Nationalist government say in year 1945 all of China\n# should adopt summer time due to the war (not sure whether it\n# continued after WWII ends)(Probably only enforced in area under\n# their rule at the time?)  The Asia/Harbin's 1932 and 1940 entry\n# should also be incorrect.  As per sources recorded at\n# https://wiki.suikawiki.org/n/%E6%BA%80%E5%B7%9E%E5%9B%BD%E3%81%AE%E6%A8%99%E6%BA%96%E6%99%82\n# , in 1932 Harbin should have adopted UTC+8:00 instead of data\n# currently listed in the tz database according to official\n# announcement from Manchuko.  And they should have adopted GMT+9 in\n# 1937 January 1st according to official announcement at the time\n# being cited on the webpage.\n\n\n# Zones are sorted by zone name.  Each zone is preceded by the\n# name of the country that the zone is in, along with any other\n# commentary and rules associated with the entry.\n# If the zone overrides links in the main data, it\n# is followed by the corresponding Link lines.\n# If the zone overrides main-data links only when building with\n# PACKRATLIST=zone.tab, it is followed by a commented-out Link line\n# that starts with \"#PACKRATLIST zone.tab\".\n#\n# As explained in the zic man page, the zone columns are:\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n# and the rule columns are:\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\n\n\n# Ghana\n\n# From P Chan (2020-11-20):\n# Interpretation Amendment Ordinance, 1915 (No.24 of 1915) [1915-11-02]\n# Ordinances of the Gold Coast, Ashanti, Northern Territories 1915, p 69-71\n# https://books.google.com/books?id=ErA-AQAAIAAJ&pg=PA70\n# This Ordinance added \"'Time' shall mean Greenwich Mean Time\" to the\n# Interpretation Ordinance, 1876.\n#\n# Determination of the Time Ordinance, 1919 (No. 18 of 1919) [1919-11-24]\n# Ordinances of the Gold Coast, Ashanti, Northern Territories 1919, p 75-76\n# https://books.google.com/books?id=MbA-AQAAIAAJ&pg=PA75\n# This Ordinance removed the previous definition of time and introduced DST.\n#\n# Time Determination Ordinance (Cap. 214)\n# The Laws of the Gold Coast (including Togoland Under British Mandate)\n# Vol. II (1937), p 2328\n# https://books.google.com/books?id=Z7M-AQAAIAAJ&pg=PA2328\n# Revised edition of the 1919 Ordinance.\n#\n# Time Determination (Amendment) Ordinance, 1940 (No. 9 of 1940) [1940-04-06]\n# Annual Volume of the Laws of the Gold Coast:\n# Containing All Legislation Enacted During Year 1940, p 22\n# https://books.google.com/books?id=1ao-AQAAIAAJ&pg=PA22\n# This Ordinance changed the forward transition from September to May.\n#\n# Defence (Time Determination Ordinance Amendment) Regulations, 1942\n# (Regulations No. 6 of 1942) [1942-01-31, commenced on 1942-02-08]\n# Annual Volume of the Laws of the Gold Coast:\n# Containing All Legislation Enacted During Year 1942, p 48\n# https://books.google.com/books?id=Das-AQAAIAAJ&pg=PA48\n# These regulations advanced the [standard] time by thirty minutes.\n#\n# Defence (Time Determination Ordinance Amendment (No.2)) Regulations,\n# 1942 (Regulations No. 28 of 1942) [1942-04-25]\n# Annual Volume of the Laws of the Gold Coast:\n# Containing All Legislation Enacted During Year 1942, p 87\n# https://books.google.com/books?id=Das-AQAAIAAJ&pg=PA87\n# These regulations abolished DST and changed the time to GMT+0:30.\n#\n# Defence (Revocation) (No.4) Regulations, 1945 (Regulations No. 45 of\n# 1945) [1945-10-24, commenced on 1946-01-06]\n# Annual Volume of the Laws of the Gold Coast:\n# Containing All Legislation Enacted During Year 1945, p 256\n# https://books.google.com/books?id=9as-AQAAIAAJ&pg=PA256\n# These regulations revoked the previous two sets of Regulations.\n#\n# Time Determination (Amendment) Ordinance, 1945 (No. 18 of 1945) [1946-01-06]\n# Annual Volume of the Laws of the Gold Coast:\n# Containing All Legislation Enacted During Year 1945, p 69\n# https://books.google.com/books?id=9as-AQAAIAAJ&pg=PA69\n# This Ordinance abolished DST.\n#\n# Time Determination (Amendment) Ordinance, 1950 (No. 26 of 1950) [1950-07-22]\n# Annual Volume of the Laws of the Gold Coast:\n# Containing All Legislation Enacted During Year 1950, p 35\n# https://books.google.com/books?id=e60-AQAAIAAJ&pg=PA35\n# This Ordinance restored DST but with thirty minutes offset.\n#\n# Time Determination Ordinance (Cap. 264)\n# The Laws of the Gold Coast, Vol. V (1954), p 380\n# https://books.google.com/books?id=Mqc-AQAAIAAJ&pg=PA380\n# Revised edition of the Time Determination Ordinance.\n#\n# Time Determination (Amendment) Ordinance, 1956 (No. 21 of 1956) [1956-08-29]\n# Annual Volume of the Ordinances of the Gold Coast Enacted During the\n# Year 1956, p 83\n# https://books.google.com/books?id=VLE-AQAAIAAJ&pg=PA83\n# This Ordinance abolished DST.\n\nRule\tGhana\t1919\tonly\t-\tNov\t24\t0:00\t0:20\t+0020\nRule\tGhana\t1920\t1942\t-\tJan\t 1\t2:00\t0\tGMT\nRule\tGhana\t1920\t1939\t-\tSep\t 1\t2:00\t0:20\t+0020\nRule\tGhana\t1940\t1941\t-\tMay\t 1\t2:00\t0:20\t+0020\nRule\tGhana\t1950\t1955\t-\tSep\t 1\t2:00\t0:30\t+0030\nRule\tGhana\t1951\t1956\t-\tJan\t 1\t2:00\t0\tGMT\n\nZone\tAfrica/Accra\t-0:00:52 -\tLMT\t1915 Nov  2\n\t\t\t 0:00\tGhana\t%s\t1942 Feb  8\n\t\t\t 0:30\t-\t+0030\t1946 Jan  6\n\t\t\t 0:00\tGhana\t%s\n\n# Ethiopia\n# From Paul Eggert (2014-07-31):\n# Like the Swahili of Kenya and Tanzania, many Ethiopians keep a\n# 12-hour clock starting at our 06:00, so their \"8 o'clock\" is our\n# 02:00 or 14:00.  Keep this in mind when you ask the time in Amharic.\n#\n# Shanks & Pottenger write that Ethiopia had six narrowly spaced time\n# zones between 1870 and 1890, that they merged to 38E50 (2:35:20) in\n# 1890, and that they switched to 3:00 on 1936-05-05.  Perhaps 38E50\n# was for Adis Dera.  Quite likely the Shanks data entries are wrong\n# anyway.\nZone Africa/Addis_Ababa\t2:34:48 -\tLMT\t1870\n\t\t\t2:35:20\t-\tADMT\t1936 May  5 # Adis Dera MT\n\t\t\t3:00\t-\tEAT\n\n# Eritrea\nZone\tAfrica/Asmara\t2:35:32 -\tLMT\t1870\n\t\t\t2:35:32\t-\tAMT\t1890        # Asmara Mean Time\n\t\t\t2:35:20\t-\tADMT\t1936 May  5 # Adis Dera MT\n\t\t\t3:00\t-\tEAT\nLink Africa/Asmara Africa/Asmera\n\n# Mali (southern)\nZone\tAfrica/Bamako\t-0:32:00 -\tLMT\t1912\n\t\t\t 0:00\t-\tGMT\t1934 Feb 26\n\t\t\t-1:00\t-\t-01\t1960 Jun 20\n\t\t\t 0:00\t-\tGMT\n#PACKRATLIST zone.tab Link Africa/Bamako Africa/Timbuktu\n\n# Central African Republic\nZone\tAfrica/Bangui\t1:14:20\t-\tLMT\t1912\n\t\t\t1:00\t-\tWAT\n\n# The Gambia\n# From P Chan (2020-12-09):\n# Standard time of GMT-1 was adopted on 1933-04-01.  On 1942-02-01, GMT was\n# adopted as a war time measure.  This was made permanent in 1946.\n#\n# Interpretation Ordinance, 1914 (No. 12 of 1914) [1914-09-29]\n# Interpretation Ordinance, 1933 (No. 10 of 1933) [1933-03-31]\n# Notice No. 5 of 1942, Colony of the Gambia Government Gazette, Vol. LIX,\n# No.2, 1942-01-15, p 2\n# Interpretation (Amendment) Ordinance, 1946 (No. 3 of 1946) [1946-07-15]\nZone\tAfrica/Banjul\t-1:06:36 -\tLMT\t1912\n\t\t\t-1:06:36 -\tBMT\t1933 Apr  1 # Banjul Mean Time\n\t\t\t-1:00\t-\t-01\t1942 Feb  1  0:00\n\t\t\t 0:00\t-\tGMT\n\n# Malawi\n# From P Chan (2020-12-09):\n# In 1911, Zomba mean time was adopted as the legal time of Nyasaland.  In\n# 1914, Zomba mean time switched from GMT+2:21:10 to GMT+2:21. On 1925-07-01,\n# GMT+2 was adopted.\n#\n# Interpretation and General Clauses Ordinance, 1911 (No. 12 of 1911)\n# [1911-07-24]\n# Notice No. 124 of 1914, 1914-06-30, The Nyasaland Government Gazette, Vol.\n# XXI, No. 8, 1914-06-30, p 122\n# Interpretation and General Clauses (Amendment) Ordinance, 1925 (No. 3 of\n# 1925) [1925-04-02]\nZone\tAfrica/Blantyre\t2:20:00 -\tLMT\t1911 Jul 24\n\t\t\t2:21:10\t-\tZMT\t1914 Jun 30 # Zomba Mean Time\n\t\t\t2:21\t-\tZMT\t1925 Jul  1\n\t\t\t2:00\t-\tCAT\n\n# Republic of the Congo\nZone Africa/Brazzaville\t1:01:08 -\tLMT\t1912\n\t\t\t1:00\t-\tWAT\n\n# Burundi\nZone Africa/Bujumbura\t1:57:28\t-\tLMT\t1890\n\t\t\t2:00\t-\tCAT\n\n# Guinea\nZone\tAfrica/Conakry\t-0:54:52 -\tLMT\t1912\n\t\t\t 0:00\t-\tGMT\t1934 Feb 26\n\t\t\t-1:00\t-\t-01\t1960\n\t\t\t 0:00\t-\tGMT\n\n# Senegal\nZone\tAfrica/Dakar\t-1:09:44 -\tLMT\t1912\n\t\t\t-1:00\t-\t-01\t1941 Jun\n\t\t\t 0:00\t-\tGMT\n\n# Tanzania\nZone Africa/Dar_es_Salaam 2:37:08 -\tLMT\t1931\n\t\t\t3:00\t-\tEAT\t1948\n\t\t\t2:45\t-\t+0245\t1961\n\t\t\t3:00\t-\tEAT\n\n# Djibouti\nZone\tAfrica/Djibouti\t2:52:36 -\tLMT\t1911 Jul\n\t\t\t3:00\t-\tEAT\n\n# Cameroon\n# Whitman says they switched to 1:00 in 1920; go with Shanks & Pottenger.\nZone\tAfrica/Douala\t0:38:48\t-\tLMT\t1912\n\t\t\t1:00\t-\tWAT\n# Sierra Leone\n# From P Chan (2020-12-09):\n# Standard time of GMT-1 was adopted on 1913-07-01.  Twenty minutes of DST was\n# introduce[d] in 1932 and was suspended in 1939.  In 1941, GMT was adopted by\n# Defence Regulations.  This was made permanent in 1946.\n#\n# Government Notice No. 121 of 1913, 1913-06-06, Sierra Leone Royal Gazette,\n# Vol. XLIV, No. 1384, 1913-06-14, p 347\n# Alteration of Time Ordinance, 1932 (No. 34 of 1932) [1932-12-01]\n# Alteration of Time (Amendment) Ordinance, 1938 (No. 25 of 1938) [1938-11-24]\n# Defence Regulations (No. 9), 1939 (Regulations No. 9 of 1939), 1939-09-05\n# Defence Regulations (No. 11), 1939 (Regulations No. 11 of 1939), 1939-09-27\n# Defence (Amendment) (No. 17) Regulations, 1941 (Public Notice No. 157 of\n# 1941), 1914-12-04\n# Alteration of Time (Amendment) Ordinance, 1946 (No. 2 of 1946) [1946-02-07]\n\n# From Tim Parenti (2021-03-02), per P Chan (2021-02-25):\n# For Sierra Leone in 1957-1962, the standard time was defined in the\n# Alteration of Time Ordinance, 1932 (as amended in 1946, renamed to Local Time\n# Ordinance in 1960 and Local Time Act in 1961). It was unamended throughout\n# that period.  See references to \"Time\" in the Alphabetical Index of the\n# Legislation in force on the 31st day of December,\n#   1957: https://books.google.com/books?id=lvQ-AQAAIAAJ&pg=RA2-PA49\n#   1958: https://books.google.com/books?id=4fQ-AQAAIAAJ&pg=RA2-PA50\n#   1959: https://books.google.com/books?id=p_U-AQAAIAAJ&pg=RA2-PA55\n#   1960: https://books.google.com/books?id=JPY-AQAAIAAJ&pg=RA3-PA37\n#   1961: https://books.google.com/books?id=7vY-AQAAIAAJ&pg=RA3-PA41\n#   1962: https://books.google.com/books?id=W_c-AQAAIAAJ&pg=RA3-PA44\n#   1963: https://books.google.com/books?id=9vk-AQAAIAAJ&pg=RA1-PA47\n#\n# Although Shanks & Pottenger had DST from Jun 1 00:00 to Sep 1 00:00 in this\n# period, many contemporaneous almanacs agree that it wasn't used:\n# https://mm.icann.org/pipermail/tz/2021-February/029866.html\n# Go with the above.\n\nRule\tSL\t1932\tonly\t-\tDec\t 1\t 0:00\t0:20\t-0040\nRule\tSL\t1933\t1938\t-\tMar\t31\t24:00\t0\t-01\nRule\tSL\t1933\t1939\t-\tAug\t31\t24:00\t0:20\t-0040\nRule\tSL\t1939\tonly\t-\tMay\t31\t24:00\t0\t-01\n\nZone\tAfrica/Freetown\t-0:53:00 -\tLMT\t1882\n\t\t\t-0:53:00 -\tFMT\t1913 Jul  1 # Freetown MT\n\t\t\t-1:00\tSL\t%s\t1939 Sep  5\n\t\t\t-1:00\t-\t-01\t1941 Dec  6 24:00\n\t\t\t 0:00\t-\tGMT\n\n# Botswana\n# From Paul Eggert (2013-02-21):\n# Milne says they were regulated by the Cape Town Signal in 1899;\n# assume they switched to 2:00 when Cape Town did.\nZone\tAfrica/Gaborone\t1:43:40 -\tLMT\t1885\n\t\t\t1:30\t-\tSAST\t1903 Mar\n\t\t\t2:00\t-\tCAT\t1943 Sep 19  2:00\n\t\t\t2:00\t1:00\tCAST\t1944 Mar 19  2:00\n\t\t\t2:00\t-\tCAT\n\n# Zimbabwe\nZone\tAfrica/Harare\t2:04:12 -\tLMT\t1903 Mar\n\t\t\t2:00\t-\tCAT\n\n# Uganda\nZone\tAfrica/Kampala\t2:09:40 -\tLMT\t1928 Jul\n\t\t\t3:00\t-\tEAT\t1930\n\t\t\t2:30\t-\t+0230\t1948\n\t\t\t2:45\t-\t+0245\t1957\n\t\t\t3:00\t-\tEAT\n\n# Rwanda\nZone\tAfrica/Kigali\t2:00:16 -\tLMT\t1935 Jun\n\t\t\t2:00\t-\tCAT\n\n# Democratic Republic of the Congo (west)\nZone Africa/Kinshasa\t1:01:12 -\tLMT\t1897 Nov  9\n\t\t\t1:00\t-\tWAT\n\n# Gabon\nZone Africa/Libreville\t0:37:48 -\tLMT\t1912\n\t\t\t1:00\t-\tWAT\n\n# Togo\nZone\tAfrica/Lome\t0:04:52 -\tLMT\t1893\n\t\t\t0:00\t-\tGMT\n\n# Angola\n#\n# From Tim Parenti (2024-07-01), per Paul Eggert (2018-02-16):\n# For timestamps before independence, see commentary for Europe/Lisbon.\n#\nZone\tAfrica/Luanda\t0:52:56\t-\tLMT\t1892\n\t\t\t0:52:04\t-\tLMT\t1911 Dec 31 23:00u # Luanda MT?\n\t\t\t1:00\t-\tWAT\n\n# Democratic Republic of the Congo (east)\n#\n# From Alois Treindl (2022-02-28):\n# My main source for its time zone history is\n# Henri le Corre, Régimes horaires pour l'Europe et l'Afrique.\n# Shanks follows le Corre.  As does Françoise Schneider-Gauquelin in her book\n# Problèmes de l'heure résolus pour le monde entier.\n#\nZone Africa/Lubumbashi\t1:49:52 -\tLMT\t1897 Nov  9\n\t\t\t1:00\t-\tWAT\t1920 Apr 25\n\t\t\t2:00\t-\tCAT\n\n# Zambia\nZone\tAfrica/Lusaka\t1:53:08 -\tLMT\t1903 Mar\n\t\t\t2:00\t-\tCAT\n\n# Equatorial Guinea\n#\n# Although Shanks says that Malabo switched from UT +00 to +01 on 1963-12-15,\n# a Google Books search says that London Calling, Issues 432-465 (1948), p 19,\n# says that Spanish Guinea was at +01 back then.  The Shanks data entries\n# are most likely wrong, but we have nothing better; use them here for now.\n#\nZone\tAfrica/Malabo\t0:35:08 -\tLMT\t1912\n\t\t\t0:00\t-\tGMT\t1963 Dec 15\n\t\t\t1:00\t-\tWAT\n\n# Lesotho\nZone\tAfrica/Maseru\t1:50:00 -\tLMT\t1903 Mar\n\t\t\t2:00\t-\tSAST\t1943 Sep 19  2:00\n\t\t\t2:00\t1:00\tSAST\t1944 Mar 19  2:00\n\t\t\t2:00\t-\tSAST\n\n# Eswatini (formerly Swaziland)\nZone\tAfrica/Mbabane\t2:04:24 -\tLMT\t1903 Mar\n\t\t\t2:00\t-\tSAST\n\n# Somalia\nZone Africa/Mogadishu\t3:01:28 -\tLMT\t1893 Nov\n\t\t\t3:00\t-\tEAT\t1931\n\t\t\t2:30\t-\t+0230\t1957\n\t\t\t3:00\t-\tEAT\n\n# Niger\nZone\tAfrica/Niamey\t 0:08:28 -\tLMT\t1912\n\t\t\t-1:00\t-\t-01\t1934 Feb 26\n\t\t\t 0:00\t-\tGMT\t1960\n\t\t\t 1:00\t-\tWAT\n\n# Mauritania\nZone Africa/Nouakchott\t-1:03:48 -\tLMT\t1912\n\t\t\t 0:00\t-\tGMT\t1934 Feb 26\n\t\t\t-1:00\t-\t-01\t1960 Nov 28\n\t\t\t 0:00\t-\tGMT\n\n# Burkina Faso\nZone Africa/Ouagadougou\t-0:06:04 -\tLMT\t1912\n\t\t\t 0:00\t-\tGMT\n\n# Benin\n# Whitman says they switched to 1:00 in 1946, not 1934;\n# go with Shanks & Pottenger.\nZone Africa/Porto-Novo\t0:10:28\t-\tLMT\t1912 Jan  1\n\t\t\t0:00\t-\tGMT\t1934 Feb 26\n\t\t\t1:00\t-\tWAT\n\n# Mali (northern)\nZone\tAfrica/Timbuktu\t-0:12:04 -\tLMT\t1912\n\t\t\t 0:00\t-\tGMT\n\n# Anguilla\nZone America/Anguilla\t-4:12:16 -\tLMT\t1912 Mar  2\n\t\t\t-4:00\t-\tAST\n\n# Antigua and Barbuda\nZone\tAmerica/Antigua\t-4:07:12 -\tLMT\t1912 Mar 2\n\t\t\t-5:00\t-\tEST\t1951\n\t\t\t-4:00\t-\tAST\n\n# Chubut, Argentina\n# The name \"Comodoro Rivadavia\" exceeds the 14-byte POSIX limit.\nZone America/Argentina/ComodRivadavia -4:30:00 - LMT\t1894 Oct 31\n\t\t\t-4:16:48 -\tCMT\t1920 May\n\t\t\t-4:00\t-\t-04\t1930 Dec\n\t\t\t-4:00\tArg\t-04/-03\t1969 Oct  5\n\t\t\t-3:00\tArg\t-03/-02\t1991 Mar  3\n\t\t\t-4:00\t-\t-04\t1991 Oct 20\n\t\t\t-3:00\tArg\t-03/-02\t1999 Oct  3\n\t\t\t-4:00\tArg\t-04/-03\t2000 Mar  3\n\t\t\t-3:00\t-\t-03\t2004 Jun  1\n\t\t\t-4:00\t-\t-04\t2004 Jun 20\n\t\t\t-3:00\t-\t-03\n\n# Aruba\nZone\tAmerica/Aruba\t-4:40:24 -\tLMT\t1912 Feb 12 # Oranjestad\n\t\t\t-4:30\t-\t-0430\t1965\n\t\t\t-4:00\t-\tAST\n\n# Atikokan, Ontario\n\n# From Paul Eggert (1997-10-17):\n# Mark Brader writes that an article in the 1997-10-14 Toronto Star\n# says that Atikokan, Ontario currently does not observe DST,\n# but will vote on 11-10 whether to use EST/EDT.\n# He also writes that the Ontario Time Act (1990, Chapter T.9)\n# http://www.gov.on.ca/MBS/english/publications/statregs/conttext.html\n# says that Ontario east of 90W uses EST/EDT, and west of 90W uses CST/CDT.\n# Officially Atikokan is therefore on CST/CDT, and most likely this report\n# concerns a non-official time observed as a matter of local practice.\n#\n# From Paul Eggert (2000-10-02):\n# Matthews and Vincent (1998) write that Atikokan, Pickle Lake, and\n# New Osnaburgh observe CST all year, that Big Trout Lake observes\n# CST/CDT, and that Upsala and Shebandowan observe EST/EDT, all in\n# violation of the official Ontario rules.\n#\n# From Paul Eggert (2006-07-09):\n# Chris Walton (2006-07-06) mentioned an article by Stephanie MacLellan in the\n# 2005-07-21 Chronicle-Journal, which said:\n#\n#\tThe clocks in Atikokan stay set on standard time year-round.\n#\tThis means they spend about half the time on central time and\n#\tthe other half on eastern time.\n#\n#\tFor the most part, the system works, Mayor Dennis Brown said.\n#\n#\t\"The majority of businesses in Atikokan deal more with Eastern\n#\tCanada, but there are some that deal with Western Canada,\" he\n#\tsaid.  \"I don't see any changes happening here.\"\n#\n# Walton also writes \"Supposedly Pickle Lake and Mishkeegogamang\n# [New Osnaburgh] follow the same practice.\"\n\n# From Garry McKinnon (2006-07-14) via Chris Walton:\n# I chatted with a member of my board who has an outstanding memory\n# and a long history in Atikokan (and in the telecom industry) and he\n# can say for certain that Atikokan has been practicing the current\n# time keeping since 1952, at least.\n\n# From Paul Eggert (2006-07-17):\n# Shanks & Pottenger say that Atikokan has agreed with Rainy River\n# ever since standard time was introduced, but the information from\n# McKinnon sounds more authoritative.  For now, assume that Atikokan\n# switched to EST immediately after WWII era daylight saving time\n# ended.  This matches the old (less populous) America/Coral_Harbour\n# entry since our cutoff date of 1970, so we can move\n# America/Coral_Harbour to the 'backward' file.\n\nZone America/Atikokan\t-6:06:28 -\tLMT\t1895\n\t\t\t-6:00\tCanada\tC%sT\t1940 Sep 29\n\t\t\t-6:00\t1:00\tCDT\t1942 Feb  9  2:00s\n\t\t\t-6:00\tCanada\tC%sT\t1945 Sep 30  2:00\n\t\t\t-5:00\t-\tEST\n#PACKRATLIST zone.tab Link America/Atikokan America/Coral_Harbour\n\n# Quebec east of Natashquan\n\n# From Paul Eggert (2021-05-09):\n# H. David Matthews and Mary Vincent's map\n# \"It's about TIME\", _Canadian Geographic_ (September-October 1998)\n# http://www.canadiangeographic.ca/Magazine/SO98/alacarte.asp\n# says that Quebec east of the -63 meridian is supposed to observe\n# AST, but residents as far east as Natashquan use EST/EDT, and\n# residents east of Natashquan use AST.\n# The Quebec department of justice writes in\n# \"The situation in Minganie and Basse-Côte-Nord\"\n# https://www.justice.gouv.qc.ca/en/department/ministre/functions-and-responsabilities/legal-time-in-quebec/the-situation-in-minganie-and-basse-cote-nord/\n# that the coastal strip from just east of Natashquan to Blanc-Sablon\n# observes Atlantic standard time all year round.\n# This common practice was codified into law as of 2007; see Legal Time Act,\n# CQLR c T-5.1 <http://legisquebec.gouv.qc.ca/en/ShowDoc/cs/T-5.1>.\n# For lack of better info, guess this practice began around 1970, contra to\n# Shanks & Pottenger who have this region observing AST/ADT.\n\nZone America/Blanc-Sablon -3:48:28 -\tLMT\t1884\n\t\t\t-4:00\tCanada\tA%sT\t1970\n\t\t\t-4:00\t-\tAST\n\n# Cayman Is\nZone\tAmerica/Cayman\t-5:25:32 -\tLMT\t1890     # Georgetown\n\t\t\t-5:07:10 -\tKMT\t1912 Feb # Kingston Mean Time\n\t\t\t-5:00\t-\tEST\n\n# United States\n#\n# From Paul Eggert (2018-03-18):\n# America/Chillicothe would be tricky, as it was a city of two-timers:\n# \"To prevent a constant mixup at Chillicothe, caused by the courthouse\n#  clock running on central time and the city running on 'daylight saving'\n#  time, a third hand was added to the dial of the courthouse clock.\"\n# -- Ohio news in brief. The Cedarville Herald. 1920-05-21;43(21):1 (col. 5)\n# https://digitalcommons.cedarville.edu/cedarville_herald/794\n\n# Canada\nZone America/Coral_Harbour -5:32:40 -\tLMT\t1884\n\t\t\t-5:00\tNT_YK\tE%sT\t1946\n\t\t\t-5:00\t-\tEST\n\n# From Chris Walton (2011-12-01):\n# There are two areas within the Canadian province of British Columbia\n# that do not currently observe daylight saving:\n# a) The Creston Valley (includes the town of Creston and surrounding area)\n# b) The eastern half of the Peace River Regional District\n# (includes the cities of Dawson Creek and Fort St. John)\n\n# Earlier this year I stumbled across a detailed article about the time\n# keeping history of Creston; it was written by Tammy Hardwick who is the\n# manager of the Creston & District Museum. The article was written in May 2009.\n# http://www.ilovecreston.com/?p=articles&t=spec&ar=260\n# According to the article, Creston has not changed its clocks since June 1918.\n# i.e. Creston has been stuck on UT-7 for 93 years.\n# Dawson Creek, on the other hand, changed its clocks as recently as April 1972.\n\n# Unfortunately the exact date for the time change in June 1918 remains\n# unknown and will be difficult to ascertain.  I e-mailed Tammy a few months\n# ago to ask if Sunday June 2 was a reasonable guess.  She said it was just\n# as plausible as any other date (in June).  She also said that after writing\n# the article she had discovered another time change in 1916; this is the\n# subject of another article which she wrote in October 2010.\n# http://www.creston.museum.bc.ca/index.php?module=comments&uop=view_comment&cm+id=56\n\n# Here is a summary of the three clock change events in Creston's history:\n# 1. 1884 or 1885: adoption of Mountain Standard Time (GMT-7)\n# Exact date unknown\n# 2. Oct 1916: switch to Pacific Standard Time (GMT-8)\n# Exact date in October unknown; Sunday October 1 is a reasonable guess.\n# 3. June 1918: switch to Pacific Daylight Time (GMT-7)\n# Exact date in June unknown; Sunday June 2 is a reasonable guess.\n# note 1:\n# On Oct 27/1918 when daylight saving ended in the rest of Canada,\n# Creston did not change its clocks.\n# note 2:\n# During WWII when the Federal Government legislated a mandatory clock change,\n# Creston did not oblige.\n# note 3:\n# There is no guarantee that Creston will remain on Mountain Standard Time\n# (UTC-7) forever.\n# The subject was debated at least once this year by the town Council.\n# http://www.bclocalnews.com/kootenay_rockies/crestonvalleyadvance/news/116760809.html\n\n# During a period WWII, summer time (Daylight saying) was mandatory in Canada.\n# In Creston, that was handled by shifting the area to PST (-8:00) then applying\n# summer time to cause the offset to be -7:00, the same as it had been before\n# the change.  It can be argued that the timezone abbreviation during this\n# period should be PDT rather than MST, but that doesn't seem important enough\n# (to anyone) to further complicate the rules.\n\n# The transition dates (and times) are guesses.\n\nZone America/Creston\t-7:46:04 -\tLMT\t1884\n\t\t\t-7:00\t-\tMST\t1916 Oct 1\n\t\t\t-8:00\t-\tPST\t1918 Jun 2\n\t\t\t-7:00\t-\tMST\n\n# Curaçao\n# Milne gives 4:35:46.9 for Curaçao mean time; round to nearest.\n#\n# From Paul Eggert (2006-03-22):\n# Shanks & Pottenger say that The Bottom and Philipsburg have been at\n# -4:00 since standard time was introduced on 1912-03-02; and that\n# Kralendijk and Rincon used Kralendijk Mean Time (-4:33:08) from\n# 1912-02-02 to 1965-01-01.  The former is dubious, since S&P also say\n# Saba Island has been like Curaçao.\n# This all predates our 1970 cutoff, though.\n#\n# By July 2007 Curaçao and St Maarten are planned to become\n# associated states within the Netherlands, much like Aruba;\n# Bonaire, Saba and St Eustatius would become directly part of the\n# Netherlands as Kingdom Islands.  This won't affect their time zones\n# though, as far as we know.\n#\nZone\tAmerica/Curacao\t-4:35:47 -\tLMT\t1912 Feb 12 # Willemstad\n\t\t\t-4:30\t-\t-0430\t1965\n\t\t\t-4:00\t-\tAST\nLink\tAmerica/Curacao\tAmerica/Kralendijk\nLink\tAmerica/Curacao\tAmerica/Lower_Princes\n\n# Dominica\nZone America/Dominica\t-4:05:36 -\tLMT\t1911 Jul  1  0:01 # Roseau\n\t\t\t-4:00\t-\tAST\n\n# Baja California\n# See 'northamerica' for why this entry is here rather than there.\nZone America/Ensenada\t-7:46:28 -\tLMT\t1922 Jan  1  0:13:32\n\t\t\t-8:00\t-\tPST\t1927 Jun 10 23:00\n\t\t\t-7:00\t-\tMST\t1930 Nov 16\n\t\t\t-8:00\t-\tPST\t1942 Apr\n\t\t\t-7:00\t-\tMST\t1949 Jan 14\n\t\t\t-8:00\t-\tPST\t1996\n\t\t\t-8:00\tMexico\tP%sT\n\n# Grenada\nZone\tAmerica/Grenada\t-4:07:00 -\tLMT\t1911 Jul # St George's\n\t\t\t-4:00\t-\tAST\n\n# Guadeloupe\nZone America/Guadeloupe\t-4:06:08 -\tLMT\t1911 Jun  8 # Pointe-à-Pitre\n\t\t\t-4:00\t -\tAST\n\n\n# Canada\n#\n# From Paul Eggert (2015-03-24):\n# Since 1970 most of Quebec has been like Toronto; see\n# America/Toronto.  However, earlier versions of the tz database\n# mistakenly relied on data from Shanks & Pottenger saying that Quebec\n# differed from Ontario after 1970, and the following rules and zone\n# were created for most of Quebec from the incorrect Shanks &\n# Pottenger data.  The post-1970 entries have been corrected, but the\n# pre-1970 entries are unchecked and probably have errors.\n#\nRule\tMont\t1917\tonly\t-\tMar\t25\t2:00\t1:00\tD\nRule\tMont\t1917\tonly\t-\tApr\t24\t0:00\t0\tS\nRule\tMont\t1919\tonly\t-\tMar\t31\t2:30\t1:00\tD\nRule\tMont\t1919\tonly\t-\tOct\t25\t2:30\t0\tS\nRule\tMont\t1920\tonly\t-\tMay\t 2\t2:30\t1:00\tD\nRule\tMont\t1920\t1922\t-\tOct\tSun>=1\t2:30\t0\tS\nRule\tMont\t1921\tonly\t-\tMay\t 1\t2:00\t1:00\tD\nRule\tMont\t1922\tonly\t-\tApr\t30\t2:00\t1:00\tD\nRule\tMont\t1924\tonly\t-\tMay\t17\t2:00\t1:00\tD\nRule\tMont\t1924\t1926\t-\tSep\tlastSun\t2:30\t0\tS\nRule\tMont\t1925\t1926\t-\tMay\tSun>=1\t2:00\t1:00\tD\nRule\tMont\t1927\t1937\t-\tApr\tlastSat\t24:00\t1:00\tD\nRule\tMont\t1927\t1937\t-\tSep\tlastSat\t24:00\t0\tS\nRule\tMont\t1938\t1940\t-\tApr\tlastSun\t0:00\t1:00\tD\nRule\tMont\t1938\t1939\t-\tSep\tlastSun\t0:00\t0\tS\nRule\tMont\t1946\t1973\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule\tMont\t1945\t1948\t-\tSep\tlastSun\t2:00\t0\tS\nRule\tMont\t1949\t1950\t-\tOct\tlastSun\t2:00\t0\tS\nRule\tMont\t1951\t1956\t-\tSep\tlastSun\t2:00\t0\tS\nRule\tMont\t1957\t1973\t-\tOct\tlastSun\t2:00\t0\tS\nZone America/Montreal\t-4:54:16 -\tLMT\t1884\n\t\t\t-5:00\tMont\tE%sT\t1918\n\t\t\t-5:00\tCanada\tE%sT\t1919\n\t\t\t-5:00\tMont\tE%sT\t1942 Feb  9  2:00s\n\t\t\t-5:00\tCanada\tE%sT\t1946\n\t\t\t-5:00\tMont\tE%sT\t1974\n\t\t\t-5:00\tCanada\tE%sT\n\n# Montserrat\n# From Paul Eggert (2006-03-22):\n# In 1995 volcanic eruptions forced evacuation of Plymouth, the capital.\n# world.gazetteer.com says Cork Hill is the most populous location now.\nZone America/Montserrat\t-4:08:52 -\tLMT\t1911 Jul  1  0:01 # Cork Hill\n\t\t\t-4:00\t-\tAST\n\n# The Bahamas\n#\n# For 1899 Milne gives -5:09:29.5; round that.\n#\n# From P Chan (2020-11-27, corrected on 2020-12-02):\n# There were two periods of DST observed in 1942-1945: 1942-05-01\n# midnight to 1944-12-31 midnight and 1945-02-01 to 1945-10-17 midnight.\n# \"midnight\" should mean 24:00 from the context.\n#\n# War Time Order 1942 [1942-05-01] and War Time (No. 2) Order 1942  [1942-09-29]\n# Appendix to the Statutes of 7 George VI. and the Year 1942. p 34, 43\n# https://books.google.com/books?id=5rlNAQAAIAAJ&pg=RA3-PA34\n# https://books.google.com/books?id=5rlNAQAAIAAJ&pg=RA3-PA43\n#\n# War Time Order 1943 [1943-03-31] and War Time Order 1944 [1943-12-29]\n# Appendix to the Statutes of 8 George VI. and the Year 1943. p 9-10, 28-29\n# https://books.google.com/books?id=5rlNAQAAIAAJ&pg=RA4-PA9\n# https://books.google.com/books?id=5rlNAQAAIAAJ&pg=RA4-PA28\n#\n# War Time Order 1945 [1945-01-31] and the Order which revoke War Time Order\n# 1945 [1945-10-16] Appendix to the Statutes of 9 George VI. and the Year\n# 1945. p 160, 247-248\n# https://books.google.com/books?id=5rlNAQAAIAAJ&pg=RA6-PA160\n# https://books.google.com/books?id=5rlNAQAAIAAJ&pg=RA6-PA247\n#\n# From Sue Williams (2006-12-07):\n# The Bahamas announced about a month ago that they plan to change their DST\n# rules to sync with the U.S. starting in 2007....\n# http://www.jonesbahamas.com/?c=45&a=10412\n\nRule\tBahamas\t1942\tonly\t-\tMay\t 1\t24:00\t1:00\tW\nRule\tBahamas\t1944\tonly\t-\tDec\t31\t24:00\t0\tS\nRule\tBahamas\t1945\tonly\t-\tFeb\t 1\t0:00\t1:00\tW\nRule\tBahamas\t1945\tonly\t-\tAug\t14\t23:00u\t1:00\tP # Peace\nRule\tBahamas\t1945\tonly\t-\tOct\t17\t24:00\t0\tS\nRule\tBahamas\t1964\t1975\t-\tOct\tlastSun\t2:00\t0\tS\nRule\tBahamas\t1964\t1975\t-\tApr\tlastSun\t2:00\t1:00\tD\n\nZone\tAmerica/Nassau\t-5:09:30 -\tLMT\t1912 Mar 2\n\t\t\t-5:00\tBahamas\tE%sT\t1976\n\t\t\t-5:00\tUS\tE%sT\n\n# Canada\n# From Chris Walton (2022-10-15):\n# I would also like to see America/Nipigon and America/Rainy_River converted\n# into link entries because I have zero faith in the current Shanks based data.\n# From Paul Eggert (2022-10-15):\n# These are now links in the primary data.  Also see America/Thunder_Bay.\nZone America/Nipigon\t-5:53:04 -\tLMT\t1895\n\t\t\t-5:00\tCanada\tE%sT\t1940 Sep 29\n\t\t\t-5:00\t1:00\tEDT\t1942 Feb  9  2:00s\n\t\t\t-5:00\tCanada\tE%sT\n\n# From Rives McDow (1999-11-08):\n# On October 31, when the rest of Nunavut went to Central time,\n# Pangnirtung wobbled.  Here is the result of their wobble:\n#\n# The following businesses and organizations in Pangnirtung use Central Time:\n#\n#\tFirst Air, Power Corp, Nunavut Construction, Health Center, RCMP,\n#\tEastern Arctic National Parks, A & D Specialist\n#\n# The following businesses and organizations in Pangnirtung use Eastern Time:\n#\n#\tHamlet office, All other businesses, Both schools, Airport operator\n#\n# This has made for an interesting situation there, which warranted the news.\n# No one there that I spoke with seems concerned, or has plans to\n# change the local methods of keeping time, as it evidently does not\n# really interfere with any activities or make things difficult locally.\n# They plan to celebrate New Year's turn-over twice, one hour apart,\n# so it appears that the situation will last at least that long.\n# The Nunavut Intergovernmental Affairs hopes that they will \"come to\n# their senses\", but the locals evidently don't see any problem with\n# the current state of affairs.\n\n# From Michaela Rodrigue, writing in the\n# Nunatsiaq News (1999-11-19):\n# http://www.nunatsiaqonline.ca/archives/nunavut991130/nvt91119_17.html\n# Clyde River, Pangnirtung and Sanikiluaq now operate with two time zones,\n# central - or Nunavut time - for government offices, and eastern time\n# for municipal offices and schools....  Igloolik [was similar but then]\n# made the switch to central time on Saturday, Nov. 6.\n\n# From Chris Walton (2022-11-06):\n# The implication is that Pangnirtung and Qikiqtarjuaq have observed Eastern\n# Time as far back as 1984 (and likely even further back than that).\n# It is possible that these communities never actually observed Atlantic\n# Time, but that would be difficult to prove.\n# From Paul Eggert (2022-11-06):\n# This is in 'backzone' as we have no good evidence that Pangnirtung differs\n# from America/Iqaluit since 1970.  A Google Books snippet view of\n# volume 2, page 186 of \"Pilot of Arctic Canada\", published 1959 by\n# the Canadian Hydrographic Service, suggests (though does not state)\n# that Pangnirtung observed EST then.\n#\n# aka Panniqtuuq\nZone America/Pangnirtung 0\t-\t-00\t1921 # trading post est.\n\t\t\t-5:00\tNT_YK\tE%sT\t1999 Oct 31  2:00\n\t\t\t-6:00\tCanada\tC%sT\t2000 Oct 29  2:00\n\t\t\t-5:00\tCanada\tE%sT\n\n# United States\n#\n# From Paul Eggert (2018-03-18):\n# America/Palm_Springs would be tricky, as it kept two sets of clocks\n# in 1946/7.  See the following notes.\n#\n# From Steve Allen (2018-01-19):\n# The shadow of Mt. San Jacinto brings darkness very early in the winter\n# months.  In 1946 the chamber of commerce decided to put the clocks of Palm\n# Springs forward by an hour in the winter.\n# https://www.desertsun.com/story/life/2017/12/27/palm-springs-struggle-daylight-savings-time-and-idea-sun-time/984416001/\n# Desert Sun, Number 18, 1 November 1946\n# https://cdnc.ucr.edu/cgi-bin/cdnc?a=d&d=DS19461101\n# has proposal for meeting on front page and page 21.\n# Desert Sun, Number 19, 5 November 1946\n# https://cdnc.ucr.edu/cgi-bin/cdnc?a=d&d=DS19461105\n# reports that Sun Time won at the meeting on front page and page 5.\n# Desert Sun, Number 37, 7 January 1947\n# https://cdnc.ucr.edu/cgi-bin/cdnc?a=d&d=DS19470107.2.12\n# front page reports request to abandon Sun Time and page 7 notes a \"class war\".\n# Desert Sun, Number 38, 10 January 1947\n# https://cdnc.ucr.edu/cgi-bin/cdnc?a=d&d=DS19470110\n# front page reports on end.\n\n# Trinidad and Tobago\nZone America/Port_of_Spain -4:06:04 -\tLMT\t1912 Mar 2\n\t\t\t-4:00\t-\tAST\nLink America/Port_of_Spain America/Marigot\nLink America/Port_of_Spain America/St_Barthelemy\n\n# Canada\n# From Chris Walton (2022-10-15):\n# I would also like to see America/Nipigon and America/Rainy_River converted\n# into link entries because I have zero faith in the current Shanks based data.\n# From Paul Eggert (2022-10-15):\n# These are now links in the primary data.  Also see America/Thunder_Bay.\nZone America/Rainy_River -6:18:16 -\tLMT\t1895\n\t\t\t-6:00\tCanada\tC%sT\t1940 Sep 29\n\t\t\t-6:00\t1:00\tCDT\t1942 Feb  9  2:00s\n\t\t\t-6:00\tCanada\tC%sT\n\n# Argentina\n# This entry was intended for the following areas, but has been superseded by\n# more detailed zones.\n# Santa Fe (SF), Entre Ríos (ER), Corrientes (CN), Misiones (MN), Chaco (CC),\n# Formosa (FM), La Pampa (LP), Chubut (CH)\nZone America/Rosario\t-4:02:40 -\tLMT\t1894 Nov\n\t\t\t-4:16:44 -\tCMT\t1920 May\n\t\t\t-4:00\t-\t-04\t1930 Dec\n\t\t\t-4:00\tArg\t-04/-03\t1969 Oct  5\n\t\t\t-3:00\tArg\t-03/-02\t1991 Jul\n\t\t\t-3:00\t-\t-03\t1999 Oct  3  0:00\n\t\t\t-4:00\tArg\t-04/-03\t2000 Mar  3  0:00\n\t\t\t-3:00\t-\t-03\n\n# St Kitts-Nevis\nZone America/St_Kitts\t-4:10:52 -\tLMT\t1912 Mar  2 # Basseterre\n\t\t\t-4:00\t-\tAST\n\n# St Lucia\nZone America/St_Lucia\t-4:04:00 -\tLMT\t1890 # Castries\n\t\t\t-4:04:00 -\tCMT\t1912 # Castries Mean Time\n\t\t\t-4:00\t-\tAST\n\n# US Virgin Is\nZone America/St_Thomas\t-4:19:44 -\tLMT\t1911 Jul # Charlotte Amalie\n\t\t\t-4:00\t-\tAST\nLink America/St_Thomas America/Virgin\n\n# St Vincent and the Grenadines\nZone America/St_Vincent\t-4:04:56 -\tLMT\t1890 # Kingstown\n\t\t\t-4:04:56 -\tKMT\t1912 # Kingstown Mean Time\n\t\t\t-4:00\t-\tAST\n\n# Canada\n#\n# From Paul Eggert (2003-07-27):\n# Willett (1914-03) writes (p. 17) \"In the Cities of Fort William, and\n# Port Arthur, Ontario, the principle of the Bill has been in\n# operation for the past three years, and in the City of Moose Jaw,\n# Saskatchewan, for one year.\"\n#\n# From David Bryan via Tory Tronrud, Director/Curator,\n# Thunder Bay Museum (2003-11-12):\n# There is some suggestion, however, that, by-law or not, daylight\n# savings time was being practiced in Fort William and Port Arthur\n# before 1909.... [I]n 1910, the line between the Eastern and Central\n# Time Zones was permanently moved about two hundred miles west to\n# include the Thunder Bay area....  When Canada adopted daylight\n# savings time in 1916, Fort William and Port Arthur, having done so\n# already, did not change their clocks....  During the Second World\n# War,... [t]he cities agreed to implement DST during the summer\n# months for the remainder of the war years.\n#\n# From Jeffery Nichols (2020-02-06):\n# According to the [Shanks] atlas, those western Ontario zones are huge,\n# covering most of Ontario northwest of Sault Ste Marie and Timmins.\n# The zones seem to include towns bigger than the ones they're named after,\n# like Dryden in America/Rainy_River and Wawa (and maybe Attawapiskat) in\n# America/Nipigon.  I assume it's too much trouble to change the name of the\n# zone (like when you found out that America/Glace_Bay includes Sydney, Nova\n# Scotia)....\n#\n# From Chris Walton (2022-10-15):\n# The TZ database currently shows that Thunder Bay has observed daylight\n# saving every year from 1970 onwards with the exception of 1973.\n# Back in July I raised some doubts on this mailing list about the 1973 data.\n# I now have more proof that it is wrong.\n# [attached Chronicle-Journal front pages, 1973-04-28 and 1973-10-27]\n#\n# From Paul Eggert (2022-10-15):\n# This is now a link in the primary data.  The following entry is\n# from Shanks & Pottenger, with corrections as noted above.\n#\nZone America/Thunder_Bay -5:57:00 -\tLMT\t1895\n\t\t\t-6:00\t-\tCST\t1910\n\t\t\t-5:00\t-\tEST\t1942\n\t\t\t-5:00\tCanada\tE%sT\t1970\n\t\t\t-5:00\tToronto\tE%sT\t1974\n\t\t\t-5:00\tCanada\tE%sT\n\n# British Virgin Is\nZone America/Tortola\t-4:18:28 -\tLMT\t1911 Jul # Road Town\n\t\t\t-4:00\t-\tAST\n\n# Yellowknife, Northwest Territories\nZone America/Yellowknife 0\t-\t-00\t1935 # Yellowknife founded?\n\t\t\t-7:00\tNT_YK\tM%sT\t1980\n\t\t\t-7:00\tCanada\tM%sT\n\n# Dumont d'Urville, Île des Pétrels, -6640+14001, since 1956-11\n# <https://en.wikipedia.org/wiki/Dumont_d'Urville_Station> (2005-12-05)\n#\n# Another base at Port-Martin, 50km east, began operation in 1947.\n# It was destroyed by fire on 1952-01-14.\n#\nZone Antarctica/DumontDUrville 0 -\t-00\t1947\n\t\t\t10:00\t-\t+10\t1952 Jan 14\n\t\t\t0\t-\t-00\t1956 Nov\n\t\t\t10:00\t-\t+10\n\n# McMurdo, Ross Island, since 1955-12\nZone Antarctica/McMurdo\t0\t-\t-00\t1956\n\t\t\t12:00\tNZ\tNZ%sT\nLink Antarctica/McMurdo Antarctica/South_Pole\n\n# Syowa, Antarctica\n#\n# From Hideyuki Suzuki (1999-02-06):\n# In all Japanese stations, +0300 is used as the standard time.\n#\n# Syowa station, which is the first antarctic station of Japan,\n# was established on 1957-01-29.  Since Syowa station is still the main\n# station of Japan, it's appropriate for the principal location.\n# See:\n# NIPR Antarctic Research Activities (1999-08-17)\n# http://www.nipr.ac.jp/english/ara01.html\nZone Antarctica/Syowa\t0\t-\t-00\t1957 Jan 29\n\t\t\t3:00\t-\t+03\n\n# Yemen\n# Milne says 2:59:54 was the meridian of the saluting battery at Aden,\n# and that Yemen was at 1:55:56, the meridian of the Hagia Sophia.\nZone\tAsia/Aden\t2:59:54\t-\tLMT\t1950\n\t\t\t3:00\t-\t+03\n\n# Bahrain\n#\n# From Paul Eggert (2020-07-23):\n# Most of this data comes from:\n# Stewart A. Why Gulf Standard Time is far from standard: the fascinating story\n# behind the time zone's invention. The National (Abu Dhabi). 2020-07-22.\n# https://www.thenational.ae/arts-culture/why-gulf-standard-time-is-far-from-standard-the-fascinating-story-behind-the-time-zone-s-invention-1.1052589\n# Stewart writes that before 1941 some companies in Bahrain were at +0330 and\n# others at +0323.  Reginald George Alban, a British political agent based in\n# Manama, worked to standardize this, and from 1941-07-20 Bahrain was at\n# +0330.  However, BOAC asked that clocks be moved to gain more light at day's\n# end, so Bahrain switched to +04 on 1944-01-01.\n#\n# Re the 1941 transition, Stewart privately sent me this citation:\n# \"File 16/53 Enquiries Re: Calculation of Local Time\", British Library: India\n# Office Records and Private Papers, IOR/R/15/2/1564, in Qatar Digital Library\n# https://www.qdl.qa/archive/81055/vdc_100000000282.0x00012b\n# It says there was no real standard in Bahrain before 1941-07-20.\n# +0330 was used by steamers of the British India Co, by Petroleum Concessions\n# and by Cable & Wireless; +0323 was used by the Eastern Bank Ltd, BOAC, and\n# Bahrein Petroleum (Bapco), and California Arabian Standard Oil Co (Casoc)\n# adopted DST effective 1941-05-24.  Alban suggested adopting DST, R.B. Coomb\n# of C&W countersuggested +0330, and although C.A. Rodstrom of Casoc (formerly\n# of Bapco) stated that Bahrain had formerly used +0330 before Bapco arrived\n# but Bapco switched to +0323 because of \"constant confusion\", the consensus\n# was +0330.  The government adopted +0330 in 1941-07-20 and companies seem to\n# have switched by 08-01.  No time of day was given for the 1940s transitions.\nZone\tAsia/Bahrain\t3:22:20 -\tLMT\t1941 Jul 20  # Manamah\n\t\t\t3:30\t-\t+0330\t1944 Jan  1\n\t\t\t4:00\t-\t+04\t1972 Jun\n\t\t\t3:00\t-\t+03\n\n# Brunei\nZone\tAsia/Brunei\t7:39:40 -\tLMT\t1926 Mar # Bandar Seri Begawan\n\t\t\t7:30\t-\t+0730\t1933\n\t\t\t8:00\t-\t+08\n\n# India\n#\n# From Paul Eggert (2014-09-06):\n# The 1876 Report of the Secretary of the [US] Navy, p 305 says that Madras\n# civil time was 5:20:57.3.\n#\n# From Paul Eggert (2014-08-21):\n# In tomorrow's The Hindu, Nitya Menon reports that India had two civil time\n# zones starting in 1884, one in Bombay and one in Calcutta, and that railways\n# used a third time zone based on Madras time (80° 18' 30\" E).  Also,\n# in 1881 Bombay briefly switched to Madras time, but switched back.  See:\n# http://www.thehindu.com/news/cities/chennai/madras-375-when-madras-clocked-the-time/article6339393.ece\n#Zone\t  Asia/Chennai  [not enough info to complete]\n\n# China\n# Long-shu Time (probably due to Long and Shu being two names of that area)\n# Guangxi, Guizhou, Hainan, Ningxia, Sichuan, Shaanxi, and Yunnan;\n# most of Gansu; west Inner Mongolia; west Qinghai; and the Guangdong\n# counties Deqing, Enping, Kaiping, Luoding, Taishan, Xinxing,\n# Yangchun, Yangjiang, Yu'nan, and Yunfu.\nZone\tAsia/Chongqing\t7:06:20\t-\tLMT\t1928     # or Chungking\n\t\t\t7:00\t-\t+07\t1980 May\n\t\t\t8:00\tPRC\tC%sT\nLink Asia/Chongqing Asia/Chungking\n\n# Vietnam\n# From Paul Eggert (2014-10-13):\n# See Asia/Ho_Chi_Minh for the source for this data.\n# Trần's book says the 1954-55 transition to 07:00 in Hanoi was in\n# October 1954, with exact date and time unspecified.\nZone\tAsia/Hanoi\t7:03:24 -\tLMT\t1906 Jul  1\n\t\t\t7:06:30\t-\tPLMT\t1911 May  1\n\t\t\t7:00\t-\t+07\t1942 Dec 31 23:00\n\t\t\t8:00\t-\t+08\t1945 Mar 14 23:00\n\t\t\t9:00\t-\t+09\t1945 Sep  2\n\t\t\t7:00\t-\t+07\t1947 Apr  1\n\t\t\t8:00\t-\t+08\t1954 Oct\n\t\t\t7:00\t-\t+07\n\n# China\n# Changbai Time (\"Long-white Time\", Long-white = Heilongjiang area)\n# Heilongjiang (except Mohe county), Jilin\nZone\tAsia/Harbin\t8:26:44\t-\tLMT\t1928     # or Haerbin\n\t\t\t8:30\t-\t+0830\t1932 Mar\n\t\t\t8:00\t-\tCST\t1940\n\t\t\t9:00\t-\t+09\t1966 May\n\t\t\t8:30\t-\t+0830\t1980 May\n\t\t\t8:00\tPRC\tC%sT\n\n# far west China\nZone\tAsia/Kashgar\t5:03:56\t-\tLMT\t1928     # or Kashi or Kaxgar\n\t\t\t5:30\t-\t+0530\t1940\n\t\t\t5:00\t-\t+05\t1980 May\n\t\t\t8:00\tPRC\tC%sT\n\n# peninsular Malaysia\n# taken from Mok Ly Yng (2003-10-30)\n# https://web.archive.org/web/20190822231045/http://www.math.nus.edu.sg/~mathelmr/teaching/timezone.html\n# This agrees with Singapore since 1905-06-01.\nZone Asia/Kuala_Lumpur\t6:46:46 -\tLMT\t1901 Jan  1\n\t\t\t6:55:25\t-\tSMT\t1905 Jun  1 # Singapore M.T.\n\t\t\t7:00\t-\t+07\t1933 Jan  1\n\t\t\t7:00\t0:20\t+0720\t1936 Jan  1\n\t\t\t7:20\t-\t+0720\t1941 Sep  1\n\t\t\t7:30\t-\t+0730\t1942 Feb 16\n\t\t\t9:00\t-\t+09\t1945 Sep 12\n\t\t\t7:30\t-\t+0730\t1981 Dec 31 16:00u\n\t\t\t8:00\t-\t+08\n\n# Kuwait\nZone\tAsia/Kuwait\t3:11:56 -\tLMT\t1950\n\t\t\t3:00\t-\t+03\n\n\n# Oman\n# Milne says 3:54:24 was the meridian of the Muscat Tidal Observatory.\nZone\tAsia/Muscat\t3:54:24 -\tLMT\t1920\n\t\t\t4:00\t-\t+04\n\n# India\n# From Tim Parenti (2024-07-01), per Paul Eggert (2014-08-11), after a\n# heads-up from Stephen Colebourne:\n# According to a Portuguese decree (1911-05-24), Portuguese India switched to\n# UT +05 on 1912-01-01 (see Europe/Lisbon).\n#Zone\tAsia/Panaji\t[not enough info to complete]\n\n# Cambodia\n\n# From an adoptive daughter of the late Cambodian ruler Prince Sihanouk,\n# via Alois Treindl (2019-08-08):\n#\n# King Sihanouk said that, during the Japanese occupation, starting with\n# what historians refer to as \"le coup de force du 9 mars 1945\", Cambodia,\n# like the entire French Indochina, used Tokyo time zone. After Japan\n# surrendered, 2 September 1945, Cambodia fell under French rule again and\n# adopted Hanoi time zone again.\n#\n# However, on 7 January 1946, Sihanouk and Tioulong managed to obtain a\n# status of \"internal autonomy\" from the government of Charles de Gaulle.\n# Although many fields remained under the administration of the French\n# (customs, taxes, justice, defence, foreign affairs, etc.), the Cambodian\n# administration was responsible for religious matters and traditional\n# celebrations, which included our calendar and time.  The time zone was GMT\n# + 7 and _no_ DST was applied.\n#\n# After Sihanouk and Tioulong achieved full independence, on 9 November 1953,\n# GMT + 7 was maintained.\n\n# From Paul Eggert (2019-08-26):\n# See Asia/Ho_Chi_Minh for the source for most of rest of this data.\n\nZone\tAsia/Phnom_Penh\t6:59:40 -\tLMT\t1906 Jul  1\n\t\t\t7:06:30\t-\tPLMT\t1911 May  1\n\t\t\t7:00\t-\t+07\t1942 Dec 31 23:00\n\t\t\t8:00\t-\t+08\t1945 Mar 14 23:00\n\t\t\t9:00\t-\t+09\t1945 Sep  2\n\t\t\t7:00\t-\t+07\n\n# Israel\nZone\tAsia/Tel_Aviv\t2:19:04 -\tLMT\t1880\n\t\t\t2:21\t-\tJMT\t1918\n\t\t\t2:00\tZion\tI%sT\n\n# Laos\n# From Paul Eggert (2014-10-11):\n# See Asia/Ho_Chi_Minh for the source for most of this data.\n# Trần's book says that Laos reverted to UT +07 on 1955-04-15.\n# Also, guess that Laos reverted to +07 on 1945-09-02, when Vietnam did;\n# this is probably wrong but it's better than guessing no transition.\nZone\tAsia/Vientiane\t6:50:24 -\tLMT\t1906 Jul  1\n\t\t\t7:06:30\t-\tPLMT\t1911 May  1\n\t\t\t7:00\t-\t+07\t1942 Dec 31 23:00\n\t\t\t8:00\t-\t+08\t1945 Mar 14 23:00\n\t\t\t9:00\t-\t+09\t1945 Sep  2\n\t\t\t7:00\t-\t+07\t1947 Apr  1\n\t\t\t8:00\t-\t+08\t1955 Apr 15\n\t\t\t7:00\t-\t+07\n\n# Jan Mayen\n# From Whitman:\nZone Atlantic/Jan_Mayen\t-1:00\t-\t-01\n\n# Iceland\n#\n# From Adam David (1993-11-06):\n# The name of the timezone in Iceland for system / mail / news purposes is GMT.\n#\n# (1993-12-05):\n# This material is paraphrased from the 1988 edition of the University of\n# Iceland Almanak.\n#\n# From January 1st, 1908 the whole of Iceland was standardised at 1 hour\n# behind GMT. Previously, local mean solar time was used in different parts\n# of Iceland, the almanak had been based on Reykjavík mean solar time which\n# was 1 hour and 28 minutes behind GMT.\n#\n# \"first day of winter\" referred to [below] means the first day of the 26 weeks\n# of winter, according to the old icelandic calendar that dates back to the\n# time the norsemen first settled Iceland.  The first day of winter is always\n# Saturday, but is not dependent on the Julian or Gregorian calendars.\n#\n# (1993-12-10):\n# I have a reference from the Oxford Icelandic-English dictionary for the\n# beginning of winter, which ties it to the ecclesiastical calendar (and thus\n# to the julian/gregorian calendar) over the period in question.\n#\tthe winter begins on the Saturday next before St. Luke's day\n#\t(old style), or on St. Luke's day, if a Saturday.\n# St. Luke's day ought to be traceable from ecclesiastical sources. \"old style\"\n# might be a reference to the Julian calendar as opposed to Gregorian, or it\n# might mean something else (???).\n#\n# From Paul Eggert (2014-11-22):\n# The information below is taken from the 1988 Almanak; see\n# http://www.almanak.hi.is/klukkan.html\n#\nRule\tIceland\t1917\t1919\t-\tFeb\t19\t23:00\t1:00\t-\nRule\tIceland\t1917\tonly\t-\tOct\t21\t 1:00\t0\t-\nRule\tIceland\t1918\t1919\t-\tNov\t16\t 1:00\t0\t-\nRule\tIceland\t1921\tonly\t-\tMar\t19\t23:00\t1:00\t-\nRule\tIceland\t1921\tonly\t-\tJun\t23\t 1:00\t0\t-\nRule\tIceland\t1939\tonly\t-\tApr\t29\t23:00\t1:00\t-\nRule\tIceland\t1939\tonly\t-\tOct\t29\t 2:00\t0\t-\nRule\tIceland\t1940\tonly\t-\tFeb\t25\t 2:00\t1:00\t-\nRule\tIceland\t1940\t1941\t-\tNov\tSun>=2\t 1:00s\t0\t-\nRule\tIceland\t1941\t1942\t-\tMar\tSun>=2\t 1:00s\t1:00\t-\n# 1943-1946 - first Sunday in March until first Sunday in winter\nRule\tIceland\t1943\t1946\t-\tMar\tSun>=1\t 1:00s\t1:00\t-\nRule\tIceland\t1942\t1948\t-\tOct\tSun>=22\t 1:00s\t0\t-\n# 1947-1967 - first Sunday in April until first Sunday in winter\nRule\tIceland\t1947\t1967\t-\tApr\tSun>=1\t 1:00s\t1:00\t-\n# 1949 and 1967 Oct transitions delayed by 1 week\nRule\tIceland\t1949\tonly\t-\tOct\t30\t 1:00s\t0\t-\nRule\tIceland\t1950\t1966\t-\tOct\tSun>=22\t 1:00s\t0\t-\nRule\tIceland\t1967\tonly\t-\tOct\t29\t 1:00s\t0\t-\n\nZone Atlantic/Reykjavik\t-1:28\t-\tLMT\t1908\n\t\t\t-1:00\tIceland\t-01/+00\t1968 Apr  7  1:00s\n\t\t\t 0:00\t-\tGMT\nLink Atlantic/Reykjavik Iceland\n\n# St Helena\nZone Atlantic/St_Helena\t-0:22:48 -\tLMT\t1890 # Jamestown\n\t\t\t-0:22:48 -\tJMT\t1951 # Jamestown Mean Time\n\t\t\t 0:00\t-\tGMT\n\n# King Island\nZone Australia/Currie\t9:35:28\t-\tLMT\t1895 Sep\n\t\t\t10:00\tAT\tAE%sT\t1919 Oct 24\n\t\t\t10:00\tAus\tAE%sT\t1968 Oct 15\n\t\t\t10:00\tAT\tAE%sT\n\n\n# Netherlands\n\n# Howse writes that the Netherlands' railways used GMT between 1892 and 1940,\n# but for other purposes the Netherlands used Amsterdam mean time.\n\n# However, Robert H. van Gent writes (2001-04-01):\n# Howse's statement is only correct up to 1909. From 1909-05-01 (00:00:00\n# Amsterdam mean time) onwards, the whole of the Netherlands (including\n# the Dutch railways) was required by law to observe Amsterdam mean time\n# (19 minutes 32.13 seconds ahead of GMT). This had already been the\n# common practice (except for the railways) for many decades but it was\n# not until 1909 when the Dutch government finally defined this by law.\n# On 1937-07-01 this was changed to 20 minutes (exactly) ahead of GMT and\n# was generally known as Dutch Time (\"Nederlandse Tijd\").\n#\n# (2001-04-08):\n# 1892-05-01 was the date when the Dutch railways were by law required to\n# observe GMT while the remainder of the Netherlands adhered to the common\n# practice of following Amsterdam mean time.\n#\n# (2001-04-09):\n# In 1835 the authorities of the province of North Holland requested the\n# municipal authorities of the towns and cities in the province to observe\n# Amsterdam mean time but I do not know in how many cases this request was\n# actually followed.\n#\n# From 1852 onwards the Dutch telegraph offices were by law required to\n# observe Amsterdam mean time. As the time signals from the observatory of\n# Leiden were also distributed by the telegraph system, I assume that most\n# places linked up with the telegraph (and railway) system automatically\n# adopted Amsterdam mean time.\n#\n# Although the early Dutch railway companies initially observed a variety\n# of times, most of them had adopted Amsterdam mean time by 1858 but it\n# was not until 1866 when they were all required by law to observe\n# Amsterdam mean time.\n\n# The data entries before 1945 are taken from\n# https://www.staff.science.uu.nl/~gent0113/wettijd/wettijd.htm\n\n# From Paul Eggert (2021-05-09):\n# I invented the abbreviations AMT for Amsterdam Mean Time and NST for\n# Netherlands Summer Time, used in the Netherlands from 1835 to 1937.\n\nRule\tNeth\t1916\tonly\t-\tMay\t 1\t0:00\t1:00\tNST\t# Netherlands Summer Time\nRule\tNeth\t1916\tonly\t-\tOct\t 1\t0:00\t0\tAMT\t# Amsterdam Mean Time\nRule\tNeth\t1917\tonly\t-\tApr\t16\t2:00s\t1:00\tNST\nRule\tNeth\t1917\tonly\t-\tSep\t17\t2:00s\t0\tAMT\nRule\tNeth\t1918\t1921\t-\tApr\tMon>=1\t2:00s\t1:00\tNST\nRule\tNeth\t1918\t1921\t-\tSep\tlastMon\t2:00s\t0\tAMT\nRule\tNeth\t1922\tonly\t-\tMar\tlastSun\t2:00s\t1:00\tNST\nRule\tNeth\t1922\t1936\t-\tOct\tSun>=2\t2:00s\t0\tAMT\nRule\tNeth\t1923\tonly\t-\tJun\tFri>=1\t2:00s\t1:00\tNST\nRule\tNeth\t1924\tonly\t-\tMar\tlastSun\t2:00s\t1:00\tNST\nRule\tNeth\t1925\tonly\t-\tJun\tFri>=1\t2:00s\t1:00\tNST\n# From 1926 through 1939 DST began 05-15, except that it was delayed by a week\n# in years when 05-15 fell in the Pentecost weekend.\nRule\tNeth\t1926\t1931\t-\tMay\t15\t2:00s\t1:00\tNST\nRule\tNeth\t1932\tonly\t-\tMay\t22\t2:00s\t1:00\tNST\nRule\tNeth\t1933\t1936\t-\tMay\t15\t2:00s\t1:00\tNST\nRule\tNeth\t1937\tonly\t-\tMay\t22\t2:00s\t1:00\tNST\nRule\tNeth\t1937\tonly\t-\tJul\t 1\t0:00\t1:00\tS\nRule\tNeth\t1937\t1939\t-\tOct\tSun>=2\t2:00s\t0\t-\nRule\tNeth\t1938\t1939\t-\tMay\t15\t2:00s\t1:00\tS\nRule\tNeth\t1945\tonly\t-\tApr\t 2\t2:00s\t1:00\tS\nRule\tNeth\t1945\tonly\t-\tSep\t16\t2:00s\t0\t-\n\t\t#STDOFF\t0:19:32.13\nZone Europe/Amsterdam\t0:19:32 -\tLMT\t1835\n\t\t\t0:19:32\tNeth\t%s\t1937 Jul  1\n\t\t\t0:20\tNeth +0020/+0120 1940 May 16  0:00\n\t\t\t1:00\tC-Eur\tCE%sT\t1945 Apr  2  2:00\n\t\t\t1:00\tNeth\tCE%sT\t1977\n\t\t\t1:00\tEU\tCE%sT\n\n\n# Northern Ireland\nZone\tEurope/Belfast\t-0:23:40 -\tLMT\t1880 Aug  2\n\t\t\t-0:25:21 -\tDMT\t1916 May 21  2:00\n\t\t\t\t\t\t# DMT = Dublin/Dunsink MT\n\t\t\t-0:25:21 1:00\tIST\t1916 Oct  1  2:00s\n\t\t\t\t\t\t# IST = Irish Summer Time\n\t\t\t 0:00\tGB-Eire\t%s\t1968 Oct 27\n\t\t\t 1:00\t-\tBST\t1971 Oct 31  2:00u\n\t\t\t 0:00\tGB-Eire\t%s\t1996\n\t\t\t 0:00\tEU\tGMT/BST\n\n\n# Denmark\n\n# From Jesper Nørgaard Welen (2005-04-26):\n# the law [introducing standard time] was in effect from 1894-01-01....\n# The page https://www.retsinformation.dk/eli/lta/1893/83\n# confirms this, and states that the law was put forth 1893-03-29.\n#\n# The EU [actually, EEC and Euratom] treaty with effect from 1973:\n# https://www.retsinformation.dk/eli/lta/1972/21100\n#\n# This provoked a new law from 1974 to make possible summer time changes\n# in subsequent decrees with the law\n# https://www.retsinformation.dk/eli/lta/1974/223\n#\n# It seems however that no decree was set forward until 1980.  I have\n# not found any decree, but in another related law, the effecting DST\n# changes are stated explicitly to be from 1980-04-06 at 02:00 to\n# 1980-09-28 at 02:00.  If this is true, this differs slightly from\n# the EU rule in that DST runs to 02:00, not 03:00.  We don't know\n# when Denmark began using the EU rule correctly, but we have only\n# confirmation of the 1980-time, so I presume it was correct in 1981:\n# The law is about the management of the extra hour, concerning\n# working hours reported and effect on obligatory-rest rules (which\n# was suspended on that night):\n# https://web.archive.org/web/20140104053304/https://www.retsinformation.dk/Forms/R0710.aspx?id=60267\n\n# From Jesper Nørgaard Welen (2005-06-11):\n# The Herning Folkeblad (1980-09-26) reported that the night between\n# Saturday and Sunday the clock is set back from three to two.\n\n# From Paul Eggert (2005-06-11):\n# Hence the \"02:00\" of the 1980 law refers to standard time, not\n# wall-clock time, and so the EU rules were in effect in 1980.\n\nRule\tDenmark\t1916\tonly\t-\tMay\t14\t23:00\t1:00\tS\nRule\tDenmark\t1916\tonly\t-\tSep\t30\t23:00\t0\t-\nRule\tDenmark\t1940\tonly\t-\tMay\t15\t 0:00\t1:00\tS\nRule\tDenmark\t1945\tonly\t-\tApr\t 2\t 2:00s\t1:00\tS\nRule\tDenmark\t1945\tonly\t-\tAug\t15\t 2:00s\t0\t-\nRule\tDenmark\t1946\tonly\t-\tMay\t 1\t 2:00s\t1:00\tS\nRule\tDenmark\t1946\tonly\t-\tSep\t 1\t 2:00s\t0\t-\nRule\tDenmark\t1947\tonly\t-\tMay\t 4\t 2:00s\t1:00\tS\nRule\tDenmark\t1947\tonly\t-\tAug\t10\t 2:00s\t0\t-\nRule\tDenmark\t1948\tonly\t-\tMay\t 9\t 2:00s\t1:00\tS\nRule\tDenmark\t1948\tonly\t-\tAug\t 8\t 2:00s\t0\t-\n#\nZone Europe/Copenhagen\t 0:50:20 -\tLMT\t1890\n\t\t\t 0:50:20 -\tCMT\t1894 Jan  1 # Copenhagen MT\n\t\t\t 1:00\tDenmark\tCE%sT\t1942 Nov  2  2:00s\n\t\t\t 1:00\tC-Eur\tCE%sT\t1945 Apr  2  2:00\n\t\t\t 1:00\tDenmark\tCE%sT\t1980\n\t\t\t 1:00\tEU\tCE%sT\n\n# Guernsey\n# Data from Joseph S. Myers\n# https://mm.icann.org/pipermail/tz/2013-September/019883.html\n# References to be added\n# LMT is for Town Church, St. Peter Port, 49° 27' 17\" N, 2° 32' 10\" W.\nZone\tEurope/Guernsey\t-0:10:09 -\tLMT\t1913 Jun 18\n\t\t\t 0:00\tGB-Eire\t%s\t1940 Jul  2\n\t\t\t 1:00\tC-Eur\tCE%sT\t1945 May  8\n\t\t\t 0:00\tGB-Eire\t%s\t1968 Oct 27\n\t\t\t 1:00\t-\tBST\t1971 Oct 31  2:00u\n\t\t\t 0:00\tGB-Eire\t%s\t1996\n\t\t\t 0:00\tEU\tGMT/BST\n\n# Isle of Man\n#\n# From Lester Caine (2013-09-04):\n# The Isle of Man legislation is now on-line at\n# <https://www.legislation.gov.im>, starting with the original Statutory\n# Time Act in 1883 and including additional confirmation of some of\n# the dates of the 'Summer Time' orders originating at\n# Westminster.  There is a little uncertainty as to the starting date\n# of the first summer time in 1916 which may have been announced a\n# couple of days late.  There is still a substantial number of\n# documents to work through, but it is thought that every GB change\n# was also implemented on the island.\n#\n# AT4 of 1883 - The Statutory Time et cetera Act 1883 -\n# LMT Location - 54.1508N -4.4814E - Tynwald Hill ( Manx parliament )\nZone Europe/Isle_of_Man\t-0:17:55 -\tLMT\t1883 Mar 30  0:00s\n\t\t\t 0:00\tGB-Eire\t%s\t1968 Oct 27\n\t\t\t 1:00\t-\tBST\t1971 Oct 31  2:00u\n\t\t\t 0:00\tGB-Eire\t%s\t1996\n\t\t\t 0:00\tEU\tGMT/BST\n\n# Jersey\n# Data from Joseph S. Myers\n# https://mm.icann.org/pipermail/tz/2013-September/019883.html\n# References to be added\n# LMT is for Parish Church, St. Helier, 49° 11' 0.57\" N, 2° 6' 24.33\" W.\nZone\tEurope/Jersey\t-0:08:26 -\tLMT\t1898 Jun 11 16:00u\n\t\t\t 0:00\tGB-Eire\t%s\t1940 Jul  2\n\t\t\t 1:00\tC-Eur\tCE%sT\t1945 May  8\n\t\t\t 0:00\tGB-Eire\t%s\t1968 Oct 27\n\t\t\t 1:00\t-\tBST\t1971 Oct 31  2:00u\n\t\t\t 0:00\tGB-Eire\t%s\t1996\n\t\t\t 0:00\tEU\tGMT/BST\n\n# Slovenia\nZone Europe/Ljubljana\t0:58:04\t-\tLMT\t1884\n\t\t\t1:00\t-\tCET\t1941 Apr 18 23:00\n\t\t\t1:00\tC-Eur\tCE%sT\t1945 May  8  2:00s\n\t\t\t1:00\t1:00\tCEST\t1945 Sep 16  2:00s\n\t\t\t1:00\t-\tCET\t1982 Nov 27\n\t\t\t1:00\tEU\tCE%sT\n\n\n# Luxembourg\n\n# Whitman disagrees with most of these dates in minor ways;\n# go with Shanks & Pottenger.\nRule\tLux\t1916\tonly\t-\tMay\t14\t23:00\t1:00\tS\nRule\tLux\t1916\tonly\t-\tOct\t 1\t 1:00\t0\t-\nRule\tLux\t1917\tonly\t-\tApr\t28\t23:00\t1:00\tS\nRule\tLux\t1917\tonly\t-\tSep\t17\t 1:00\t0\t-\nRule\tLux\t1918\tonly\t-\tApr\tMon>=15\t 2:00s\t1:00\tS\nRule\tLux\t1918\tonly\t-\tSep\tMon>=15\t 2:00s\t0\t-\nRule\tLux\t1919\tonly\t-\tMar\t 1\t23:00\t1:00\tS\nRule\tLux\t1919\tonly\t-\tOct\t 5\t 3:00\t0\t-\nRule\tLux\t1920\tonly\t-\tFeb\t14\t23:00\t1:00\tS\nRule\tLux\t1920\tonly\t-\tOct\t24\t 2:00\t0\t-\nRule\tLux\t1921\tonly\t-\tMar\t14\t23:00\t1:00\tS\nRule\tLux\t1921\tonly\t-\tOct\t26\t 2:00\t0\t-\nRule\tLux\t1922\tonly\t-\tMar\t25\t23:00\t1:00\tS\nRule\tLux\t1922\tonly\t-\tOct\tSun>=2\t 1:00\t0\t-\nRule\tLux\t1923\tonly\t-\tApr\t21\t23:00\t1:00\tS\nRule\tLux\t1923\tonly\t-\tOct\tSun>=2\t 2:00\t0\t-\nRule\tLux\t1924\tonly\t-\tMar\t29\t23:00\t1:00\tS\nRule\tLux\t1924\t1928\t-\tOct\tSun>=2\t 1:00\t0\t-\nRule\tLux\t1925\tonly\t-\tApr\t 5\t23:00\t1:00\tS\nRule\tLux\t1926\tonly\t-\tApr\t17\t23:00\t1:00\tS\nRule\tLux\t1927\tonly\t-\tApr\t 9\t23:00\t1:00\tS\nRule\tLux\t1928\tonly\t-\tApr\t14\t23:00\t1:00\tS\nRule\tLux\t1929\tonly\t-\tApr\t20\t23:00\t1:00\tS\n\nZone Europe/Luxembourg\t0:24:36 -\tLMT\t1904 Jun\n\t\t\t1:00\tLux\tCE%sT\t1918 Nov 25\n\t\t\t0:00\tLux\tWE%sT\t1929 Oct  6  2:00s\n\t\t\t0:00\tBelgium\tWE%sT\t1940 May 14  3:00\n\t\t\t1:00\tC-Eur\tWE%sT\t1944 Sep 18  3:00\n\t\t\t1:00\tBelgium\tCE%sT\t1977\n\t\t\t1:00\tEU\tCE%sT\n\n# Monaco\n#\n# From Michael Deckers (2020-06-12):\n# In the \"Journal de Monaco\" of 1892-05-24, online at\n# https://journaldemonaco.gouv.mc/var/jdm/storage/original/application/b1c67c12c5af11b41ea888fb048e4fe8.pdf\n# we read: ...\n#  [In virtue of a Sovereign Ordinance of the May 13 of the current [year],\n#   legal time in the Principality will be set to, from the date of June 1,\n#   1892 onwards, to the meridian of Paris, as in France.]\n# In the \"Journal de Monaco\" of 1911-03-28, online at\n# https://journaldemonaco.gouv.mc/var/jdm/storage/original/application/de74ffb7db53d4f599059fe8f0ed482a.pdf\n# we read an ordinance of 1911-03-16: ...\n#  [Legal time in the Principality will be set, from the date of promulgation\n#   of the present ordinance, to legal time in France....  Consequently, legal\n#   time will be retarded by 9 minutes and 21 seconds.]\n#\nZone\tEurope/Monaco\t0:29:32 -\tLMT\t1892 Jun  1\n\t\t\t0:09:21\t-\tPMT\t1911 Mar 29 # Paris Mean Time\n\t\t\t0:00\tFrance\tWE%sT\t1945 Sep 16  3:00\n\t\t\t1:00\tFrance\tCE%sT\t1977\n\t\t\t1:00\tEU\tCE%sT\n\n\n# Norway\n\n# http://met.no/met/met_lex/q_u/sommertid.html (2004-01) agrees with Shanks &\n# Pottenger.\nRule\tNorway\t1916\tonly\t-\tMay\t22\t1:00\t1:00\tS\nRule\tNorway\t1916\tonly\t-\tSep\t30\t0:00\t0\t-\nRule\tNorway\t1945\tonly\t-\tApr\t 2\t2:00s\t1:00\tS\nRule\tNorway\t1945\tonly\t-\tOct\t 1\t2:00s\t0\t-\nRule\tNorway\t1959\t1964\t-\tMar\tSun>=15\t2:00s\t1:00\tS\nRule\tNorway\t1959\t1965\t-\tSep\tSun>=15\t2:00s\t0\t-\nRule\tNorway\t1965\tonly\t-\tApr\t25\t2:00s\t1:00\tS\n\nZone\tEurope/Oslo\t0:43:00 -\tLMT\t1895 Jan  1\n\t\t\t1:00\tNorway\tCE%sT\t1940 Aug 10 23:00\n\t\t\t1:00\tC-Eur\tCE%sT\t1945 Apr  2  2:00\n\t\t\t1:00\tNorway\tCE%sT\t1980\n\t\t\t1:00\tEU\tCE%sT\nLink\tEurope/Oslo\tArctic/Longyearbyen\n#PACKRATLIST zone.tab Link Europe/Oslo Atlantic/Jan_Mayen\n\n# Bosnia and Herzegovina\nZone\tEurope/Sarajevo\t1:13:40\t-\tLMT\t1884\n\t\t\t1:00\t-\tCET\t1941 Apr 18 23:00\n\t\t\t1:00\tC-Eur\tCE%sT\t1945 May  8  2:00s\n\t\t\t1:00\t1:00\tCEST\t1945 Sep 16  2:00s\n\t\t\t1:00\t-\tCET\t1982 Nov 27\n\t\t\t1:00\tEU\tCE%sT\n\n# North Macedonia\nZone\tEurope/Skopje\t1:25:44\t-\tLMT\t1884\n\t\t\t1:00\t-\tCET\t1941 Apr 18 23:00\n\t\t\t1:00\tC-Eur\tCE%sT\t1945 May  8  2:00s\n\t\t\t1:00\t1:00\tCEST\t1945 Sep 16  2:00s\n\t\t\t1:00\t-\tCET\t1982 Nov 27\n\t\t\t1:00\tEU\tCE%sT\n\n\n# Sweden\n\n# From Ivan Nilsson (2001-04-13), superseding Shanks & Pottenger:\n#\n# The law \"Svensk författningssamling 1878, no 14\" about standard time in 1879:\n# From the beginning of 1879 (that is 01-01 00:00) the time for all\n# places in the country is \"the mean solar time for the meridian at\n# three degrees, or twelve minutes of time, to the west of the\n# meridian of the Observatory of Stockholm\".  The law is dated 1878-05-31.\n#\n# The observatory at that time had the meridian 18° 03' 30\"\n# eastern longitude = 01:12:14 in time.  Less 12 minutes gives the\n# national standard time as 01:00:14 ahead of GMT....\n#\n# About the beginning of CET in Sweden. The lawtext (\"Svensk\n# författningssamling 1899, no 44\") states, that \"from the beginning\n# of 1900... ... the same as the mean solar time for the meridian at\n# the distance of one hour of time from the meridian of the English\n# observatory at Greenwich, or at 12 minutes 14 seconds to the west\n# from the meridian of the Observatory of Stockholm\". The law is dated\n# 1899-06-16.  In short: At 1900-01-01 00:00:00 the new standard time\n# in Sweden is 01:00:00 ahead of GMT.\n#\n# 1916: The lawtext (\"Svensk författningssamling 1916, no 124\") states\n# that \"1916-05-15 is considered to begin one hour earlier\". It is\n# pretty obvious that at 05-14 23:00 the clocks are set to 05-15 00:00....\n# Further the law says, that \"1916-09-30 is considered to end one hour later\".\n#\n# The laws regulating [DST] are available on the site of the Swedish\n# Parliament beginning with 1985 - the laws regulating 1980/1984 are\n# not available on the site (to my knowledge they are only available\n# in Swedish): <http://www.riksdagen.se/english/work/sfst.asp> (type\n# \"sommartid\" without the quotes in the field \"Fritext\" and then click\n# the Sök-button).\n#\n# (2001-05-13):\n#\n# I have now found a newspaper stating that at 1916-10-01 01:00\n# summertime the church-clocks etc were set back one hour to show\n# 1916-10-01 00:00 standard time.  The article also reports that some\n# people thought the switch to standard time would take place already\n# at 1916-10-01 00:00 summer time, but they had to wait for another\n# hour before the event took place.\n#\n# Source: The newspaper \"Dagens Nyheter\", 1916-10-01, page 7 upper left.\n\n# An extra-special abbreviation style is SET for Swedish Time (svensk\n# normaltid) 1879-1899, 3° west of the Stockholm Observatory.\n\nZone Europe/Stockholm\t1:12:12 -\tLMT\t1879 Jan  1\n\t\t\t1:00:14\t-\tSET\t1900 Jan  1 # Swedish Time\n\t\t\t1:00\t-\tCET\t1916 May 14 23:00\n\t\t\t1:00\t1:00\tCEST\t1916 Oct  1  1:00\n\t\t\t1:00\t-\tCET\t1980\n\t\t\t1:00\tEU\tCE%sT\n\n\n# Moldova / Transnistria\nZone\tEurope/Tiraspol\t1:58:32\t-\tLMT\t1880\n\t\t\t1:55\t-\tCMT\t1918 Feb 15 # Chisinau MT\n\t\t\t1:44:24\t-\tBMT\t1931 Jul 24 # Bucharest MT\n\t\t\t2:00\tRomania\tEE%sT\t1940 Aug 15\n\t\t\t2:00\t1:00\tEEST\t1941 Jul 17\n\t\t\t1:00\tC-Eur\tCE%sT\t1944 Aug 24\n\t\t\t3:00\tRussia\tMSK/MSD\t1991 Mar 31  2:00\n\t\t\t2:00\tRussia\tEE%sT\t1992 Jan 19  2:00\n\t\t\t3:00\tRussia\tMSK/MSD\n\n# Ukraine\n#\n# Although Shanks & Pottenger say Transcarpathia used CET 1990/1991,\n# this unreliable source contradicts contemporaneous government resolutions\n# (see the commentary for Ukraine in the 'europe' file)\n# so for now this dubious zone is in 'backzone'.\n# \"Uzhhorod\" is the transliteration of the Ukrainian spelling, but\n# \"Uzhgorod\" was a common English spelling when this dubious zone was\n# added to TZDB in 1999.\nZone Europe/Uzhgorod\t1:29:12 -\tLMT\t1890 Oct\n\t\t\t1:00\t-\tCET\t1940\n\t\t\t1:00\tC-Eur\tCE%sT\t1944 Oct\n\t\t\t1:00\t1:00\tCEST\t1944 Oct 26\n\t\t\t1:00\t-\tCET\t1945 Jun 29\n\t\t\t3:00\tRussia\tMSK/MSD\t1990\n\t\t\t3:00\t-\tMSK\t1990 Jul  1  2:00\n\t\t\t1:00\t-\tCET\t1991 Mar 31  3:00\n\t\t\t2:00\t-\tEET\t1992 Mar 20\n\t\t\t2:00\tC-Eur\tEE%sT\t1996 May 13\n\t\t\t2:00\tEU\tEE%sT\n\n# Liechtenstein\n\n# From Paul Eggert (2022-07-21):\n# Shanks & Pottenger say Vaduz is like Zurich starting June 1894.\n\n# From Alois Treindl (2019-07-04):\n# I was able to access the online archive of the Vaduz paper Vaterland ...\n# I could confirm from the paper that Liechtenstein did in fact follow\n# the same DST in 1941 and 1942 as Switzerland did.\n\nZone\tEurope/Vaduz\t0:38:04 -\tLMT\t1894 Jun\n\t\t\t1:00\tSwiss\tCE%sT\t1981\n\t\t\t1:00\tEU\tCE%sT\n\n# Croatia\nZone\tEurope/Zagreb\t1:03:52\t-\tLMT\t1884\n\t\t\t1:00\t-\tCET\t1941 Apr 18 23:00\n\t\t\t1:00\tC-Eur\tCE%sT\t1945 May  8  2:00s\n\t\t\t1:00\t1:00\tCEST\t1945 Sep 16  2:00s\n\t\t\t1:00\t-\tCET\t1982 Nov 27\n\t\t\t1:00\tEU\tCE%sT\n\n# Ukraine\n\n# Although Shanks & Pottenger say Zaporizhzhia and eastern Lugansk\n# observed DST 1990/1991, this unreliable source contradicts contemporaneous\n# government resolutions (see the commentary for Ukraine in the 'europe' file)\n# so for now this dubious zone is in 'backzone'.\n# \"Zaporizhzhia\" is the transliteration of the Ukrainian name, but\n# \"Zaporozhye\" was a common English spelling when this dubious zone was\n# added to TZDB in 1999.\nZone Europe/Zaporozhye\t2:20:40 -\tLMT\t1880\n\t\t\t2:20\t-\t+0220\t1924 May  2\n\t\t\t2:00\t-\tEET\t1930 Jun 21\n\t\t\t3:00\t-\tMSK\t1941 Aug 25\n\t\t\t1:00\tC-Eur\tCE%sT\t1943 Oct 25\n\t\t\t3:00\tRussia\tMSK/MSD\t1991 Mar 31  2:00\n\t\t\t2:00\tE-Eur\tEE%sT\t1992 Mar 20\n\t\t\t2:00\tC-Eur\tEE%sT\t1996 May 13\n\t\t\t2:00\tEU\tEE%sT\n\n# Madagascar\nZone Indian/Antananarivo 3:10:04 -\tLMT\t1911 Jul\n\t\t\t3:00\t-\tEAT\t1954 Feb 27 23:00s\n\t\t\t3:00\t1:00\tEAST\t1954 May 29 23:00s\n\t\t\t3:00\t-\tEAT\n\n# Christmas\nZone Indian/Christmas\t7:02:52 -\tLMT\t1895 Feb\n\t\t\t7:00\t-\t+07\n\n# Cocos (Keeling) Is\n# These islands were ruled by the Ross family from about 1830 to 1978.\n# We don't know when standard time was introduced; for now, we guess 1900.\nZone\tIndian/Cocos\t6:27:40\t-\tLMT\t1900\n\t\t\t6:30\t-\t+0630\n\n# Comoros\nZone\tIndian/Comoro\t2:53:04 -\tLMT\t1911 Jul # Moroni, Gran Comoro\n\t\t\t3:00\t-\tEAT\n\n# Kerguelen\nZone Indian/Kerguelen\t0\t-\t-00\t1950 # Port-aux-Français\n\t\t\t5:00\t-\t+05\n\n# Seychelles\n#\n# From P Chan (2020-11-27):\n# Standard Time was adopted on 1907-01-01.\n#\n# Standard Time Ordinance (Chapter 237)\n# The Laws of Seychelles in Force on the 31st December, 1971, Vol. 6, p 571\n# https://books.google.com/books?id=efE-AQAAIAAJ&pg=PA571\n#\n# From Tim Parenti (2020-12-05):\n# A footnote on https://books.google.com/books?id=DYdDAQAAMAAJ&pg=PA1689\n# confirms that Ordinance No. 9 of 1906 \"was brought into force on the 1st\n# January, 1907.\"\n\nZone\tIndian/Mahe\t3:41:48 -\tLMT\t1907 Jan  1 # Victoria\n\t\t\t4:00\t-\t+04\n# From Paul Eggert (2001-05-30):\n# Aldabra, Farquhar, and Desroches, originally dependencies of the\n# Seychelles, were transferred to the British Indian Ocean Territory\n# in 1965 and returned to Seychelles control in 1976.  We don't know\n# whether this affected their time zone, so omit this for now.\n# Possibly the islands were uninhabited.\n\n\n# Mayotte\nZone\tIndian/Mayotte\t3:00:56 -\tLMT\t1911 Jul # Mamoutzou\n\t\t\t3:00\t-\tEAT\n\n# Réunion\nZone\tIndian/Reunion\t3:41:52 -\tLMT\t1911 Jun # Saint-Denis\n\t\t\t4:00\t-\t+04\n#\n# Scattered Islands (Îles Éparses) administered from Réunion are as follows.\n# The following information about them is taken from\n# Îles Éparses (<http://www.outre-mer.gouv.fr/domtom/ile.htm>, 1997-07-22,\n# in French; no longer available as of 1999-08-17).\n# We have no info about their time zone histories.\n#\n# Bassas da India - uninhabited\n# Europa Island - inhabited from 1905 to 1910 by two families\n# Glorioso Is - inhabited until at least 1958\n# Juan de Nova - uninhabited\n# Tromelin - inhabited until at least 1958\n\n# Micronesia\n# Also see Pacific/Pohnpei and commentary for Micronesia in 'australasia'.\n#\n# From Paul Eggert (2018-11-18):\n# Alan Eugene Davis writes (1996-03-16),\n# \"I am certain, having lived there for the past decade, that 'Truk'\n# (now properly known as Chuuk) ... is in the time zone GMT+10.\"\n# Shanks & Pottenger write that Truk switched from UT +10 to +11\n# on 1978-10-01; ignore this for now.\nZone Pacific/Chuuk\t-13:52:52 -\tLMT\t1844 Dec 31\n\t\t\t 10:07:08 -\tLMT\t1901\n\t\t\t 10:00\t-\t+10\t1914 Oct\n\t\t\t  9:00\t-\t+09\t1919 Feb  1\n\t\t\t 10:00\t-\t+10\t1941 Apr  1\n\t\t\t  9:00\t-\t+09\t1945 Aug\n\t\t\t 10:00\t-\t+10\nLink Pacific/Chuuk Pacific/Truk\nLink Pacific/Chuuk Pacific/Yap\n\n# Phoenix Islands, Kiribati\n# From Paul Eggert (2021-05-27):\n# Enderbury was inhabited 1860/1880s to mine guano, and 1938-03-06/1942-02-09\n# for aviation (ostensibly commercial, but military uses foreseen).\n# The 19th-century dates are approximate.  See Pacific/Kanton for\n# the currently inhabited representative for this timezone.\nZone Pacific/Enderbury\t0\t-\t-00\t1860\n\t\t\t-11:24:20 -\tLMT\t1885\n\t\t\t0\t-\t-00\t1938 Mar  6\n\t\t\t-12:00\t-\t-12\t1942 Feb  9\n\t\t\t0\t-\t-00\n\n# Tuvalu\nZone Pacific/Funafuti\t11:56:52 -\tLMT\t1901\n\t\t\t12:00\t-\t+12\n\n# Johnston\nZone Pacific/Johnston\t-10:00\t-\tHST\n\n# Marshall Is\nZone Pacific/Majuro\t 11:24:48 -\tLMT\t1901\n\t\t\t 11:00\t-\t+11\t1914 Oct\n\t\t\t  9:00\t-\t+09\t1919 Feb  1\n\t\t\t 11:00\t-\t+11\t1937\n\t\t\t 10:00\t-\t+10\t1941 Apr  1\n\t\t\t  9:00\t-\t+09\t1944 Jan 30\n\t\t\t 11:00\t-\t+11\t1969 Oct\n\t\t\t 12:00\t-\t+12\n\n# Midway\n#\n# From Mark Brader (2005-01-23):\n# [Fallacies and Fantasies of Air Transport History, by R.E.G. Davies,\n# published 1994 by Paladwr Press, McLean, VA, USA; ISBN 0-9626483-5-3]\n# reproduced a Pan American Airways timetable from 1936, for their weekly\n# \"Orient Express\" flights between San Francisco and Manila, and connecting\n# flights to Chicago and the US East Coast.  As it uses some time zone\n# designations that I've never seen before:....\n# Fri. 6:30A Lv. HONOLOLU (Pearl Harbor), H.I.   H.L.T. Ar. 5:30P Sun.\n#  \"   3:00P Ar. MIDWAY ISLAND . . . . . . . . . M.L.T. Lv. 6:00A  \"\n#\nZone Pacific/Midway\t-11:49:28 -\tLMT\t1901\n\t\t\t-11:00\t-\t-11\t1956 Jun  3\n\t\t\t-11:00\t1:00\t-10\t1956 Sep  2\n\t\t\t-11:00\t-\tSST\t# S=Samoa\n\n# Micronesia\n# Also see Pacific/Chuuk and commentary for Micronesia in 'australasia'.\nZone Pacific/Pohnpei\t-13:27:08 -\tLMT\t1844 Dec 31\t# Kolonia\n\t\t\t 10:32:52 -\tLMT\t1901\n\t\t\t 11:00\t-\t+11\t1914 Oct\n\t\t\t  9:00\t-\t+09\t1919 Feb  1\n\t\t\t 11:00\t-\t+11\t1937\n\t\t\t 10:00\t-\t+10\t1941 Apr  1\n\t\t\t  9:00\t-\t+09\t1945 Aug\n\t\t\t 11:00\t-\t+11\nLink Pacific/Pohnpei Pacific/Ponape\n\n# N Mariana Is\n#\n# From Paul Eggert (2022-08-16):\n# Although Shanks & Pottenger say Saipan used +09 and then switched\n# to Guam time in October 1969, this is surely wrong.\n# Saipan used Guam time in the late 1950s; see page 4 of the minutes on the\n# conference of the 12th Saipan Legislature and the Select Committee on\n# Saipan Mission, 5th Guam Legislature (1959-09-11):\n# http://www.nmhcouncil.org/nmhc_archives/U.S.%20Navy%20Civil%20Affairs%20Files%201944-1962/1959/1959%2009%2017%20letter,%20minutes%20of%20conference,%20Borja.pdf\n# For now, assume Saipan switched to Guam time after the Battle of Saipan.\n#\nZone Pacific/Saipan\t-14:17:00 -\tLMT\t1844 Dec 31\n\t\t\t 9:43:00 -\tLMT\t1901\n\t\t\t 9:00\t-\t+09\t1944 Jul  9\n\t\t\t10:00\tGuam\tG%sT\t2000 Dec 23\n\t\t\t10:00\t-\tChST\t# Chamorro Standard Time\n\n\n# Wake\n\n# From Vernice Anderson, Personal Secretary to Philip Jessup,\n# US Ambassador At Large (oral history interview, 1971-02-02):\n#\n# Saturday, the 14th [of October, 1950] - ...  The time was all the\n# more confusing at that point, because we had crossed the\n# International Date Line, thus getting two Sundays.  Furthermore, we\n# discovered that Wake Island had two hours of daylight saving time\n# making calculation of time in Washington difficult if not almost\n# impossible.\n#\n# https://www.trumanlibrary.org/oralhist/andrsonv.htm\n\n# From Paul Eggert (2003-03-23):\n# We have no other report of DST in Wake Island, so omit this info for now.\n\n# Also see commentary for Micronesia in 'australasia'.\nZone\tPacific/Wake\t11:06:28 -\tLMT\t1901\n\t\t\t12:00\t-\t+12\n\n\n# Wallis and Futuna\nZone\tPacific/Wallis\t12:15:20 -\tLMT\t1901\n\t\t\t12:00\t-\t+12\n\n\n# From Paul Eggert (2024-05-22):\n# The following zones pretend that standard time extends backward\n# indefinitely into the past, and so are ahistorical.\n# In current TZDB these entries are links to geographical locations\n# that agree with the ahistorical zones since 1970.\n# These are in numeric rather than alphabetic order.\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tHST\t\t-10:00\t-\tHST\nZone\tPST8PDT\t\t -8:00\tUS\tP%sT\nZone\tMST\t\t -7:00\t-\tMST\nZone\tMST7MDT\t\t -7:00\tUS\tM%sT\nZone\tCST6CDT\t\t -6:00\tUS\tC%sT\nZone\tEST\t\t -5:00\t-\tEST\nZone\tEST5EDT\t\t -5:00\tUS\tE%sT\nZone\tWET\t\t  0:00\tEU\tWE%sT\nZone\tCET\t\t  1:00\tC-Eur\tCE%sT\nZone\tMET\t\t  1:00\tC-Eur\tME%sT\nZone\tEET\t\t  2:00\tEU\tEE%sT\n\n# Local Variables:\n# coding: utf-8\n# End:\n"
        },
        {
          "name": "calendars",
          "type": "blob",
          "size": 5.4384765625,
          "content": "----- Calendrical issues -----\n\nAs mentioned in Theory.html, although calendrical issues are out of\nscope for tzdb, they indicate the sort of problems that we would run\ninto if we extended tzdb further into the past.  The following\ninformation and sources go beyond Theory.html's brief discussion.\nThey sometimes disagree.\n\n\nFrance\n\nGregorian calendar adopted 1582-12-20.\nFrench Revolutionary calendar used 1793-11-24 through 1805-12-31,\nand (in Paris only) 1871-05-06 through 1871-05-23.\n\n\nRussia\n\nFrom Chris Carrier (1996-12-02):\nOn 1929-10-01 the Soviet Union instituted an \"Eternal Calendar\"\nwith 30-day months plus 5 holidays, with a 5-day week.\nOn 1931-12-01 it changed to a 6-day week; in 1934 it reverted to the\nGregorian calendar while retaining the 6-day week; on 1940-06-27 it\nreverted to the 7-day week.  With the 6-day week the usual days\noff were the 6th, 12th, 18th, 24th and 30th of the month.\n(Source: Evitiar Zerubavel, _The Seven Day Circle_)\n\n\nMark Brader reported a similar story in \"The Book of Calendars\", edited\nby Frank Parise (1982, Facts on File, ISBN 0-8719-6467-8), page 377.  But:\n\nFrom: Petteri Sulonen (via Usenet)\nDate: 14 Jan 1999 00:00:00 GMT\n...\n\nIf your source is correct, how come documents between 1929 and 1940 were\nstill dated using the conventional, Gregorian calendar?\n\nI can post a scan of a document dated December 1, 1934, signed by\nYenukidze, the secretary, on behalf of Kalinin, the President of the\nExecutive Committee of the Supreme Soviet, if you like.\n\n\n\nSweden (and Finland)\n\nFrom: Mark Brader\nSubject: Re: Gregorian reform - a part of locale?\n<news:1996Jul6.012937.29190@sq.com>\nDate: 1996-07-06\n\nIn 1700, Denmark made the transition from Julian to Gregorian.  Sweden\ndecided to *start* a transition in 1700 as well, but rather than have one of\nthose unsightly calendar gaps :-), they simply decreed that the next leap\nyear after 1696 would be in 1744 - putting the whole country on a calendar\ndifferent from both Julian and Gregorian for a period of 40 years.\n\nHowever, in 1704 something went wrong and the plan was not carried through;\nthey did, after all, have a leap year that year.  And one in 1708.  In 1712\nthey gave it up and went back to Julian, putting 30 days in February that\nyear!...\n\nThen in 1753, Sweden made the transition to Gregorian in the usual manner,\ngetting there only 13 years behind the original schedule.\n\n(A previous posting of this story was challenged, and Swedish readers\nproduced the following references to support it: \"Tideräkning och historia\"\nby Natanael Beckman (1924) and \"Tid, en bok om tideräkning och\nkalenderväsen\" by Lars-Olof Lodén (1968).\n\n\nGrotefend's data\n\nFrom: \"Michael Palmer\" [with two obvious typos fixed]\nSubject: Re: Gregorian Calendar (was Re: Another FHC related question\nNewsgroups: soc.genealogy.german\nDate: Tue, 9 Feb 1999 02:32:48 -800\n...\n\nThe following is a(n incomplete) listing, arranged chronologically, of\nEuropean states, with the date they converted from the Julian to the\nGregorian calendar:\n\n04/15 Oct 1582 - Italy (with exceptions), Spain, Portugal, Poland (Roman\n                 Catholics and Danzig only)\n09/20 Dec 1582 - France, Lorraine\n\n21 Dec 1582/\n   01 Jan 1583 - Holland, Brabant, Flanders, Hennegau\n10/21 Feb 1583 - bishopric of Liege (Lüttich)\n13/24 Feb 1583 - bishopric of Augsburg\n04/15 Oct 1583 - electorate of Trier\n05/16 Oct 1583 - Bavaria, bishoprics of Freising, Eichstedt, Regensburg,\n                 Salzburg, Brixen\n13/24 Oct 1583 - Austrian Oberelsaß and Breisgau\n20/31 Oct 1583 - bishopric of Basel\n02/13 Nov 1583 - duchy of Jülich-Berg\n02/13 Nov 1583 - electorate and city of Köln\n04/15 Nov 1583 - bishopric of Würzburg\n11/22 Nov 1583 - electorate of Mainz\n16/27 Nov 1583 - bishopric of Strassburg and the margraviate of Baden\n17/28 Nov 1583 - bishopric of Münster and duchy of Cleve\n14/25 Dec 1583 - Steiermark\n\n06/17 Jan 1584 - Austria and Bohemia\n11/22 Jan 1584 - Lucerne, Uri, Schwyz, Zug, Freiburg, Solothurn\n12/23 Jan 1584 - Silesia and the Lausitz\n22 Jan/\n   02 Feb 1584 - Hungary (legally on 21 Oct 1587)\n      Jun 1584 - Unterwalden\n01/12 Jul 1584 - duchy of Westfalen\n\n16/27 Jun 1585 - bishopric of Paderborn\n\n14/25 Dec 1590 - Transylvania\n\n22 Aug/\n   02 Sep 1612 - duchy of Prussia\n\n13/24 Dec 1614 - Pfalz-Neuburg\n\n          1617 - duchy of Kurland (reverted to the Julian calendar in\n                 1796)\n\n          1624 - bishopric of Osnabrück\n\n          1630 - bishopric of Minden\n\n15/26 Mar 1631 - bishopric of Hildesheim\n\n          1655 - Kanton Wallis\n\n05/16 Feb 1682 - city of Strassburg\n\n18 Feb/\n   01 Mar 1700 - Protestant Germany (including Swedish possessions in\n                 Germany), Denmark, Norway\n30 Jun/\n   12 Jul 1700 - Gelderland, Zutphen\n10 Nov/\n   12 Dec 1700 - Utrecht, Overijssel\n\n31 Dec 1700/\n   12 Jan 1701 - Friesland, Groningen, Zürich, Bern, Basel, Geneva,\n                 Thurgau, and Schaffhausen\n\n          1724 - Glarus, Appenzell, and the city of St. Gallen\n\n01 Jan 1750    - Pisa and Florence\n\n02/14 Sep 1752 - Great Britain\n\n17 Feb/\n   01 Mar 1753 - Sweden\n\n1760-1812      - Graubünden\n\nThe Russian empire (including Finland and the Baltic states) did not\nconvert to the Gregorian calendar until the Soviet revolution of 1917.\n\nSource: H. Grotefend, _Taschenbuch der Zeitrechnung des deutschen\nMittelalters und der Neuzeit_, herausgegeben von Dr. O. Grotefend\n(Hannover: Hahnsche Buchhandlung, 1941), pp. 26-28.\n\n-----\n\nThis file is in the public domain, so clarified as of 2009-05-17 by\nArthur David Olson.\n\n-----\nLocal Variables:\ncoding: utf-8\nEnd:\n"
        },
        {
          "name": "checklinks.awk",
          "type": "blob",
          "size": 1.591796875,
          "content": "# Check links in tz tables.\n\n# Contributed by Paul Eggert.  This file is in the public domain.\n\nBEGIN {\n    # Special marker indicating that the name is defined as a Zone.\n    # It is a newline so that it cannot match a valid name.\n    # It is not null so that its slot does not appear unset.\n    Zone = \"\\n\"\n}\n\n/^Z/ {\n    if (defined[$2]) {\n\tif (defined[$2] == Zone) {\n\t    printf \"%s: Zone has duplicate definition\\n\", $2\n\t} else {\n\t    printf \"%s: Link with same name as Zone\\n\", $2\n\t}\n\tstatus = 1\n    }\n    defined[$2] = Zone\n}\n\n/^L/ {\n    if (defined[$3]) {\n\tif (defined[$3] == Zone) {\n\t    printf \"%s: Link with same name as Zone\\n\", $3\n\t} else if (defined[$3] == $2) {\n\t    printf \"%s: Link has duplicate definition\\n\", $3\n\t} else {\n\t    printf \"%s: Link to both %s and %s\\n\", $3, defined[$3], $2\n\t}\n\tstatus = 1\n    }\n    if (backcheck && FILENAME != backcheck && $3 != \"GMT\") {\n      printf \"%s: Link should be in '%s'\\n\", $3, backcheck\n      status = 1\n    }\n    if ($4 == \"#=\") {\n      shortcut[$5] = $3\n    }\n    used[$2] = 1\n    defined[$3] = $2\n}\n\nEND {\n    for (tz in used) {\n\tif (defined[tz] != Zone) {\n\t  if (!defined[tz]) {\n\t    printf \"%s: Link to nowhere\\n\", tz\n\t    status = 1\n\t  } else if (DATAFORM != \"vanguard\") {\n\t    printf \"%s: Link to link\\n\", tz\n\t    status = 1\n\t  }\n\t}\n    }\n    for (tz in shortcut) {\n      if (defined[shortcut[tz]] != defined[tz]) {\n\ttarget = (!defined[tz] ? \"absence\" \\\n\t\t  : defined[tz] == \"\\n\" ? \"zone\" \\\n\t\t  : defined[tz])\n\tprintf \"%s: target %s disagrees with %s's target %s\\n\", \\\n\t  tz, target, shortcut[tz], defined[shortcut[tz]]\n\tstatus = 1\n      }\n    }\n\n    exit status\n}\n"
        },
        {
          "name": "checknow.awk",
          "type": "blob",
          "size": 1.0869140625,
          "content": "# Check zonenow.tab for consistency with primary data.\n\n# Contributed by Paul Eggert.  This file is in the public domain.\n\nfunction record_zone(zone, data) {\n  if (zone) {\n    zone_data[zone] = data\n    zones[data] = zones[data] \" \" zone\n  }\n}\n\nBEGIN {\n  while (getline <zdump_table) {\n    if ($0 ~ /^TZ/) {\n      record_zone(zone, data)\n      zone = $0\n      sub(/.*\\.ckd\\//, \"\", zone)\n      sub(/\\/\\//, \"/\", zone)\n      sub(/\"/, \"\", zone)\n      data = \"\"\n    } else if ($0 ~ /./)\n      data = data $0 \"\\n\"\n  }\n  record_zone(zone, data)\n  FS = \"\\t\"\n}\n\n/^[^#]/ {\n  zone = $3\n  data = zone_data[zone]\n  if (!data) {\n    printf \"%s: no data\\n\", zone\n    status = 1\n  } else {\n    zone2 = zonenow[data]\n    if (zone2) {\n      printf \"zones %s and %s identical from now on\\n\", zone, zone2\n      status = 1\n    } else\n      zonenow[data] = zone\n  }\n}\n\nEND {\n for (zone in zone_data) {\n    data = zone_data[zone]\n    if (data && !zonenow[data]) {\n      printf \"Zone table should have one of:%s\\n\", zones[data]\n      zonenow[data] = zone # This suppresses duplicate diagnostics.\n      status = 1\n    }\n }\n exit status\n}\n"
        },
        {
          "name": "checktab.awk",
          "type": "blob",
          "size": 5.2509765625,
          "content": "# Check tz tables for consistency.\n\n# Contributed by Paul Eggert.  This file is in the public domain.\n\nBEGIN {\n\tFS = \"\\t\"\n\n\tif (!iso_table) iso_table = \"iso3166.tab\"\n\tif (!zone_table) zone_table = \"zone1970.tab\"\n\tif (!want_warnings) want_warnings = -1\n\n\tmonthabbr[\"Jan\"] = 1\n\tmonthabbr[\"Feb\"] = 1\n\tmonthabbr[\"Mar\"] = 1\n\tmonthabbr[\"Apr\"] = 1\n\tmonthabbr[\"May\"] = 1\n\tmonthabbr[\"Jun\"] = 1\n\tmonthabbr[\"Jul\"] = 1\n\tmonthabbr[\"Aug\"] = 1\n\tmonthabbr[\"Sep\"] = 1\n\tmonthabbr[\"Oct\"] = 1\n\tmonthabbr[\"Nov\"] = 1\n\tmonthabbr[\"Dec\"] = 1\n\n\twhile (getline <iso_table) {\n\t\tiso_NR++\n\t\tif ($0 ~ /^#/) continue\n\t\tif (NF != 2) {\n\t\t\tprintf \"%s:%d: wrong number of columns\\n\", \\\n\t\t\t\tiso_table, iso_NR >>\"/dev/stderr\"\n\t\t\tstatus = 1\n\t\t}\n\t\tcc = $1\n\t\tname = $2\n\t\tif (cc !~ /^[A-Z][A-Z]$/) {\n\t\t\tprintf \"%s:%d: invalid country code '%s'\\n\", \\\n\t\t\t\tiso_table, iso_NR, cc >>\"/dev/stderr\"\n\t\t\tstatus = 1\n\t\t}\n\t\tif (cc <= cc0) {\n\t\t\tif (cc == cc0) {\n\t\t\t\ts = \"duplicate\";\n\t\t\t} else {\n\t\t\t\ts = \"out of order\";\n\t\t\t}\n\n\t\t\tprintf \"%s:%d: country code '%s' is %s\\n\", \\\n\t\t\t\tiso_table, iso_NR, cc, s \\\n\t\t\t\t>>\"/dev/stderr\"\n\t\t\tstatus = 1\n\t\t}\n\t\tcc0 = cc\n\t\tif (name2cc[name]) {\n\t\t\tprintf \"%s:%d: '%s' and '%s' have the same name\\n\", \\\n\t\t\t\tiso_table, iso_NR, name2cc[name], cc \\\n\t\t\t\t>>\"/dev/stderr\"\n\t\t\tstatus = 1\n\t\t}\n\t\tname2cc[name] = cc\n\t\tcc2name[cc] = name\n\t\tcc2NR[cc] = iso_NR\n\t}\n\n\tcc0 = \"\"\n\n\twhile (getline <zone_table) {\n\t\tzone_NR++\n\t\tif ($0 ~ /^#/) continue\n\t\tif (NF != 3 && NF != 4) {\n\t\t\tprintf \"%s:%d: wrong number of columns\\n\", \\\n\t\t\t\tzone_table, zone_NR >>\"/dev/stderr\"\n\t\t\tstatus = 1\n\t\t}\n\t\tccs = input_ccs[zone_NR] = $1\n\t\tcoordinates = $2\n\t\ttz = $3\n\t\tcomments = input_comments[zone_NR] = $4\n\t\tsplit(ccs, cca, /,/)\n\t\tcc = cca[1]\n\n\t\tif (tztab[tz]) {\n\t\t  printf \"%s:%d: %s: duplicate Zone from line %d\\n\", \\\n\t\t    zone_table, zone_NR, tz, tz2NR[tz]\n\t\t  status = 1\n\t\t}\n\n\t\t# Don't complain about a special case for Crimea in zone.tab.\n\t\t# FIXME: zone.tab should be removed, since it is obsolete.\n\t\t# Or at least put just \"XX\" in its country-code column.\n\t\tif (cc < cc0 \\\n\t\t    && !(zone_table == \"zone.tab\" \\\n\t\t\t && tz0 == \"Europe/Simferopol\")) {\n\t\t\tprintf \"%s:%d: country code '%s' is out of order\\n\", \\\n\t\t\t\tzone_table, zone_NR, cc >>\"/dev/stderr\"\n\t\t\tstatus = 1\n\t\t}\n\t\tcc0 = cc\n\t\ttz0 = tz\n\t\ttztab[tz] = 1\n\t\ttz2NR[tz] = zone_NR\n\t\tfor (i in cca) {\n\t\t    cc = cca[i]\n\t\t    if (cc2name[cc]) {\n\t\t\tcc_used[cc]++\n\t\t    } else if (! (cc == \"XX\" && zone_table == \"zonenow.tab\")) {\n\t\t\tprintf \"%s:%d: %s: unknown country code\\n\", \\\n\t\t\t\tzone_table, zone_NR, cc >>\"/dev/stderr\"\n\t\t\tstatus = 1\n\t\t    }\n\t\t}\n\t\tif (coordinates !~ /^[-+][0-9][0-9][0-5][0-9][-+][01][0-9][0-9][0-5][0-9]$/ \\\n\t\t    && coordinates !~ /^[-+][0-9][0-9][0-5][0-9][0-5][0-9][-+][01][0-9][0-9][0-5][0-9][0-5][0-9]$/) {\n\t\t\tprintf \"%s:%d: %s: invalid coordinates\\n\", \\\n\t\t\t\tzone_table, zone_NR, coordinates >>\"/dev/stderr\"\n\t\t\tstatus = 1\n\t\t}\n\t}\n\n\tfor (i = 1; i <= zone_NR; i++) {\n\t  ccs = input_ccs[i]\n\t  if (!ccs) continue\n\t  comments = input_comments[i]\n\t  split(ccs, cca, /,/)\n\t  used_max = 0\n          for (j in cca) {\n\t    cc = cca[j]\n\t    if (used_max < cc_used[cc]) {\n\t      used_max = cc_used[cc]\n\t      used_max_cc = cc\n\t    }\n\t  }\n\t  if (used_max <= 1 && comments && zone_table != \"zonenow.tab\") {\n\t    printf \"%s:%d: unnecessary comment '%s'\\n\", \\\n\t      zone_table, i, comments \\\n\t      >>\"/dev/stderr\"\n\t    status = 1\n\t  } else if (1 < used_max && !comments) {\n\t    printf \"%s:%d: missing comment for %s\\n\", \\\n\t      zone_table, i, used_max_cc \\\n\t      >>\"/dev/stderr\"\n\t    status = 1\n\t  }\n\t}\n\tFS = \" \"\n}\n\n$1 ~ /^#/ { next }\n\n{\n\ttz = rules = stdoff = \"\"\n\tif ($1 == \"Zone\") {\n\t\ttz = $2\n\t\tstdoff = $3\n\t\truleUsed[$4] = 1\n\t\tif ($5 ~ /%/) rulePercentUsed[$4] = 1\n\t} else if ($1 == \"Link\") {\n\t    if (zone_table == \"zone.tab\") {\n\t\t# Ignore Link commands if source and destination basenames\n\t\t# are identical, e.g. Europe/Istanbul versus Asia/Istanbul.\n\t\tsrc = $2\n\t\tdst = $3\n\t\twhile ((i = index(src, \"/\"))) src = substr(src, i+1)\n\t\twhile ((i = index(dst, \"/\"))) dst = substr(dst, i+1)\n\t\tif (src != dst) tz = $3\n\t    }\n\t} else if ($1 == \"Rule\") {\n\t\truleDefined[$2] = 1\n\t\tif ($10 != \"-\") ruleLetters[$2] = 1\n\t\tif (!monthabbr[$6]) {\n\t\t  printf \"%s:%d: tricky month: %s\\n\", FILENAME, FNR, $6 \\\n\t\t\t  >>\"/dev/stderr\"\n\t\t  status = 1\n\t\t}\n\t} else {\n\t\tstdoff = $1\n\t\truleUsed[$2] = 1\n\t\tif ($3 ~ /%/) rulePercentUsed[$2] = 1\n\t}\n\n\tif (stdoff && stdoff !~ /^\\-?1?[0-9](:[0-5][0-9](:[0-5][0-9])?)?$/) {\n\t\tprintf \"%s:%d: unlikely STDOFF: %s\\n\", FILENAME, FNR, stdoff \\\n\t\t\t>>\"/dev/stderr\"\n\t\tstatus = 1\n\t}\n\n\tif (tz && tz ~ /\\// && tz !~ /^Etc\\//) {\n\t\tif (!tztab[tz] && FILENAME != \"backward\" \\\n\t\t    && zone_table != \"zonenow.tab\") {\n\t\t\tprintf \"%s: no data for '%s'\\n\", zone_table, tz \\\n\t\t\t\t>>\"/dev/stderr\"\n\t\t\tstatus = 1\n\t\t}\n\t\tzoneSeen[tz] = 1\n\t}\n}\n\nEND {\n\tfor (tz in ruleDefined) {\n\t\tif (!ruleUsed[tz]) {\n\t\t\tprintf \"%s: Rule never used\\n\", tz\n\t\t\tstatus = 1\n\t\t}\n\t}\n\tfor (tz in ruleLetters) {\n\t\tif (!rulePercentUsed[tz]) {\n\t\t\tprintf \"%s: Rule contains letters never used\\n\", tz\n\t\t\tstatus = 1\n\t\t}\n\t}\n\tfor (tz in tztab) {\n\t\tif (!zoneSeen[tz] && tz !~ /^Etc\\//) {\n\t\t\tprintf \"%s:%d: no Zone table for '%s'\\n\", \\\n\t\t\t\tzone_table, tz2NR[tz], tz >>\"/dev/stderr\"\n\t\t\tstatus = 1\n\t\t}\n\t}\n\tif (0 < want_warnings) {\n\t\tfor (cc in cc2name) {\n\t\t\tif (!cc_used[cc]) {\n\t\t\t\tprintf \"%s:%d: warning: \" \\\n\t\t\t\t\t\"no Zone entries for %s (%s)\\n\", \\\n\t\t\t\t\tiso_table, cc2NR[cc], cc, cc2name[cc]\n\t\t\t}\n\t\t}\n\t}\n\n\texit status\n}\n"
        },
        {
          "name": "date.1",
          "type": "blob",
          "size": 1.7724609375,
          "content": ".\\\" This file is in the public domain, so clarified as of\n.\\\" 2009-05-17 by Arthur David Olson.\n.TH date 1 \"\" \"Time Zone Database\"\n.SH NAME\ndate \\- show and set date and time\n.SH SYNOPSIS\n.if n .nh\n.if n .na\n.B date\n[\n.B \\-u\n] [\n.B \\-c\n] [\n.B \\-r\n.I seconds\n] [\n.BI + format\n] [\n\\fR[\\fIyyyy\\fR]\\fImmddhhmm\\fR[\\fIyy\\fR][\\fB.\\fIss\\fR]\n]\n.SH DESCRIPTION\n.ie '\\(lq'' .ds lq \\&\"\\\"\n.el .ds lq \\(lq\\\"\n.ie '\\(rq'' .ds rq \\&\"\\\"\n.el .ds rq \\(rq\\\"\n.de q\n\\\\$3\\*(lq\\\\$1\\*(rq\\\\$2\n..\nThe\n.B date\ncommand\nwithout arguments writes the date and time to the standard output in\nthe form\n.ce 1\nSat Mar  8 14:54:40 EST 2025\n.br\nwith\n.B EST\nreplaced by the local time zone's abbreviation\n(or by the abbreviation for the time zone specified in the\n.B TZ\nenvironment variable if set).\nThe exact output format depends on the locale.\n.PP\nIf a command-line argument starts with a plus sign (\\c\n.q \"\\fB+\\fP\" ),\nthe rest of the argument is used as a\n.I format\nthat is processed by\n.BR strftime (3)\nto determine what to output;\na newline character is appended.\nFor example, the shell command:\n.ce 1\ndate +\"%Y\\-%m\\-%d %H:%M:%S %z\"\n.br\noutputs a line like\n.q \"2025\\-03\\-08 14:54:40 \\-0500\"\ninstead.\n.PP\nThese options are available:\n.TP\n.BR \\-u \" or \" \\-c\nUse Universal Time when setting and showing the date and time.\n.TP\n.BI \"\\-r \" seconds\nOutput the date that corresponds to\n.I seconds\npast the epoch of 1970-01-01 00:00:00 UTC, where\n.I seconds\nshould be an integer, either decimal, octal (leading 0), or\nhexadecimal (leading 0x), preceded by an optional sign.\n.SH FILES\n.ta \\w'/usr/share/zoneinfo/Etc/UTC\\0\\0'u\n/etc/localtime\tlocal timezone file\n.br\n/usr/lib/locale/\\f2L\\fP/LC_TIME\tdescription of time locale \\f2L\\fP\n.br\n/usr/share/zoneinfo\ttimezone directory\n.br\n/usr/share/zoneinfo/Etc/UTC\tfor UTC leap seconds\n.SH SEE ALSO\n.BR strftime (3).\n"
        },
        {
          "name": "date.c",
          "type": "blob",
          "size": 5.37109375,
          "content": "/* Display or set the current time and date.  */\n\n/* Copyright 1985, 1987, 1988 The Regents of the University of California.\n   All rights reserved.\n\n   Redistribution and use in source and binary forms, with or without\n   modification, are permitted provided that the following conditions\n   are met:\n   1. Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n   2. Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n   3. Neither the name of the University nor the names of its contributors\n      may be used to endorse or promote products derived from this software\n      without specific prior written permission.\n\n   THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS \"AS IS\" AND\n   ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n   ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE\n   FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n   DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n   OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n   HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n   LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n   OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n   SUCH DAMAGE.  */\n\n#include \"private.h\"\n#include <locale.h>\n#include <stdio.h>\n\n#if !HAVE_POSIX_DECLS\nextern char *\t\toptarg;\nextern int\t\toptind;\n#endif\n\nstatic int\t\tretval = EXIT_SUCCESS;\n\nstatic void\t\tdisplay(const char *, time_t);\nstatic void\t\tdogmt(void);\nstatic void\t\terrensure(void);\nstatic void\t\ttimeout(FILE *, const char *, const struct tm *);\nATTRIBUTE_NORETURN static void usage(void);\n\nint\nmain(const int argc, char *argv[])\n{\n\tregister const char *\tformat = \"+%+\";\n\tregister int\t\tch;\n\tregister bool\t\trflag = false;\n\ttime_t\t\t\tt;\n\tintmax_t\t\tsecs;\n\tchar *\t\t\tendarg;\n\n#ifdef LC_ALL\n\tsetlocale(LC_ALL, \"\");\n#endif /* defined(LC_ALL) */\n#if HAVE_GETTEXT\n# ifdef TZ_DOMAINDIR\n\tbindtextdomain(TZ_DOMAIN, TZ_DOMAINDIR);\n# endif /* defined(TEXTDOMAINDIR) */\n\ttextdomain(TZ_DOMAIN);\n#endif /* HAVE_GETTEXT */\n\tt = time(NULL);\n\twhile ((ch = getopt(argc, argv, \"ucr:\")) != EOF && ch != -1) {\n\t\tswitch (ch) {\n\t\tdefault:\n\t\t\tusage();\n\t\tcase 'u':\t\t/* do it in UT */\n\t\tcase 'c':\n\t\t\tdogmt();\n\t\t\tbreak;\n\t\tcase 'r':\t\t/* seconds since 1970 */\n\t\t\tif (rflag) {\n\t\t\t\tfprintf(stderr,\n\t\t\t\t\t_(\"date: error: multiple -r's used\"));\n\t\t\t\tusage();\n\t\t\t}\n\t\t\trflag = true;\n\t\t\terrno = 0;\n\t\t\tsecs = strtoimax(optarg, &endarg, 0);\n\t\t\tif (*endarg || optarg == endarg)\n\t\t\t\terrno = EINVAL;\n\t\t\telse if (! (TIME_T_MIN <= secs && secs <= TIME_T_MAX))\n\t\t\t\terrno = ERANGE;\n\t\t\tif (errno) {\n\t\t\t\tchar const *e = strerror(errno);\n\t\t\t\tfprintf(stderr, _(\"date: %s: %s\\n\"),\n\t\t\t\t\toptarg, e);\n\t\t\t\terrensure();\n\t\t\t\texit(retval);\n\t\t\t}\n\t\t\tt = secs;\n\t\t\tbreak;\n\t\t}\n\t}\n\tif (optind < argc) {\n\t  if (argc - optind != 1) {\n\t    fprintf(stderr,\n\t\t    _(\"date: error: multiple operands in command line\\n\"));\n\t    usage();\n\t  }\n\t  format = argv[optind];\n\t  if (*format != '+') {\n\t    fprintf(stderr, _(\"date: unknown operand: %s\\n\"), format);\n\t    usage();\n\t  }\n\t}\n\n\tdisplay(format, t);\n\treturn retval;\n}\n\nstatic void\ndogmt(void)\n{\n\tstatic char **\tfakeenv;\n\n\tif (fakeenv == NULL) {\n\t\tstatic char\ttzeutc0[] = \"TZ=UTC0\";\n\t\tptrdiff_t from, to, n;\n\n\t\tfor (n = 0;  environ[n] != NULL;  ++n)\n\t\t\tcontinue;\n#if defined ckd_add && defined ckd_mul\n\t\tif (!ckd_add(&n, n, 2) && !ckd_mul(&n, n, sizeof *fakeenv)\n\t\t    && n <= INDEX_MAX)\n\t\t  fakeenv = malloc(n);\n#else\n\t\tif (n <= INDEX_MAX / sizeof *fakeenv - 2)\n\t\t  fakeenv = malloc((n + 2) * sizeof *fakeenv);\n#endif\n\t\tif (fakeenv == NULL) {\n\t\t\tfprintf(stderr, _(\"date: Memory exhausted\\n\"));\n\t\t\terrensure();\n\t\t\texit(retval);\n\t\t}\n\t\tto = 0;\n\t\tfakeenv[to++] = tzeutc0;\n\t\tfor (from = 1; environ[from] != NULL; ++from)\n\t\t\tif (strncmp(environ[from], \"TZ=\", 3) != 0)\n\t\t\t\tfakeenv[to++] = environ[from];\n\t\tfakeenv[to] = NULL;\n\t\tenviron = fakeenv;\n\t}\n}\n\nstatic void\nerrensure(void)\n{\n\tif (retval == EXIT_SUCCESS)\n\t\tretval = EXIT_FAILURE;\n}\n\nstatic void\nusage(void)\n{\n\tfprintf(stderr,\n\t\t       _(\"date: usage: date [-u] [-c] [-r seconds]\"\n\t\t\t \" [+format]\\n\"));\n\terrensure();\n\texit(retval);\n}\n\nstatic void\ndisplay(char const *format, time_t now)\n{\n\tstruct tm *tmp;\n\n\ttmp = localtime(&now);\n\tif (!tmp) {\n\t\tfprintf(stderr,\n\t\t\t_(\"date: error: time out of range\\n\"));\n\t\terrensure();\n\t\treturn;\n\t}\n\ttimeout(stdout, format, tmp);\n\tputchar('\\n');\n\tfflush(stdout);\n\tfflush(stderr);\n\tif (ferror(stdout) || ferror(stderr)) {\n\t\tfprintf(stderr,\n\t\t\t_(\"date: error: couldn't write results\\n\"));\n\t\terrensure();\n\t}\n}\n\nstatic void\ntimeout(FILE *fp, char const *format, struct tm const *tmp)\n{\n\tchar *cp = NULL;\n\tptrdiff_t result;\n\tptrdiff_t size = 1024 / 2;\n\n\tfor ( ; ; ) {\n#ifdef ckd_mul\n\t\tbool bigger = !ckd_mul(&size, size, 2) && size <= INDEX_MAX;\n#else\n\t\tbool bigger = size <= INDEX_MAX / 2 && (size *= 2, true);\n#endif\n\t\tchar *newcp = bigger ? realloc(cp, size) : NULL;\n\t\tif (!newcp) {\n\t\t\tfprintf(stderr,\n\t\t\t\t_(\"date: error: can't get memory\\n\"));\n\t\t\terrensure();\n\t\t\texit(retval);\n\t\t}\n\t\tcp = newcp;\n\t\tresult = strftime(cp, size, format, tmp);\n\t\tif (result != 0)\n\t\t\tbreak;\n\t}\n\tfwrite(cp + 1, 1, result - 1, fp);\n\tfree(cp);\n}\n"
        },
        {
          "name": "difftime.c",
          "type": "blob",
          "size": 1.3984375,
          "content": "/* Return the difference between two timestamps.  */\n\n/*\n** This file is in the public domain, so clarified as of\n** 1996-06-05 by Arthur David Olson.\n*/\n\n/*LINTLIBRARY*/\n\n#include \"private.h\"\t/* for time_t and TYPE_SIGNED */\n\n/* Return -X as a double.  Using this avoids casting to 'double'.  */\nstatic double\ndminus(double x)\n{\n  return -x;\n}\n\ndouble\ndifftime(time_t time1, time_t time0)\n{\n\t/*\n\t** If double is large enough, simply convert and subtract\n\t** (assuming that the larger type has more precision).\n\t*/\n\tif (sizeof(time_t) < sizeof(double)) {\n\t  double t1 = time1, t0 = time0;\n\t  return t1 - t0;\n\t}\n\n\t/*\n\t** The difference of two unsigned values can't overflow\n\t** if the minuend is greater than or equal to the subtrahend.\n\t*/\n\tif (!TYPE_SIGNED(time_t))\n\t  return time0 <= time1 ? time1 - time0 : dminus(time0 - time1);\n\n\t/* Use uintmax_t if wide enough.  */\n\tif (sizeof(time_t) <= sizeof(uintmax_t)) {\n\t  uintmax_t t1 = time1, t0 = time0;\n\t  return time0 <= time1 ? t1 - t0 : dminus(t0 - t1);\n\t}\n\n\t/*\n\t** Handle cases where both time1 and time0 have the same sign\n\t** (meaning that their difference cannot overflow).\n\t*/\n\tif ((time1 < 0) == (time0 < 0))\n\t  return time1 - time0;\n\n\t/*\n\t** The values have opposite signs and uintmax_t is too narrow.\n\t** This suffers from double rounding; attempt to lessen that\n\t** by using long double temporaries.\n\t*/\n\t{\n\t  long double t1 = time1, t0 = time0;\n\t  return t1 - t0;\n\t}\n}\n"
        },
        {
          "name": "etcetera",
          "type": "blob",
          "size": 3.0146484375,
          "content": "# tzdb data for ships at sea and other miscellany\n\n# This file is in the public domain, so clarified as of\n# 2009-05-17 by Arthur David Olson.\n\n# These entries are for uses not otherwise covered by the tz database.\n# Their main practical use is for platforms like Android that lack\n# support for POSIX proleptic TZ strings.  On such platforms these entries\n# can be useful if the timezone database is wrong or if a ship or\n# aircraft at sea is not in a timezone.\n\n# Starting with POSIX 1003.1-2001, the entries below are all\n# unnecessary as settings for the TZ environment variable.  E.g.,\n# instead of TZ='Etc/GMT+4' one can use the POSIX setting TZ='<-04>+4'.\n#\n# Do not use a POSIX TZ setting like TZ='GMT+4', which is four hours\n# behind GMT but uses the completely misleading abbreviation \"GMT\".\n\n# The following zone is used by tzcode functions like gmtime,\n# which load the \"UTC\" file to handle seconds properly.\nZone\tEtc/UTC\t\t0\t-\tUTC\n\n# Functions like gmtime load the \"GMT\" file to handle leap seconds properly.\n# Vanguard section, which works with most .zi parsers.\n#Zone\tGMT\t\t0\t-\tGMT\n# Rearguard section, for TZUpdater 2.3.2 and earlier.\nZone\tEtc/GMT\t\t0\t-\tGMT\n\n# The following link uses older naming conventions,\n# but it belongs here, not in the file 'backward',\n# as it is needed for tzcode releases through 2022a,\n# where functions like gmtime load \"GMT\" instead of the \"Etc/UTC\".\n# We want this to work even on installations that omit 'backward'.\nLink\tEtc/GMT\t\t\t\tGMT\n# End of rearguard section.\n\n# Be consistent with POSIX TZ settings in the Zone names,\n# even though this is the opposite of what many people expect.\n# POSIX has positive signs west of Greenwich, but many people expect\n# positive signs east of Greenwich.  For example, TZ='Etc/GMT+4' uses\n# the abbreviation \"-04\" and corresponds to 4 hours behind UT\n# (i.e. west of Greenwich) even though many people would expect it to\n# mean 4 hours ahead of UT (i.e. east of Greenwich).\n\n# Earlier incarnations of this package were not POSIX-compliant,\n# and had lines such as\n#\t\tZone\tGMT-12\t\t-12\t-\tGMT-1200\n# We did not want things to change quietly if someone accustomed to the old\n# way does a\n#\t\tzic -l GMT-12\n# so we moved the names into the Etc subdirectory.\n# Also, the time zone abbreviations are now compatible with %z.\n\n# There is no \"Etc/Unknown\" entry, as CLDR says that \"Etc/Unknown\"\n# corresponds to an unknown or invalid time zone, and things would get\n# confusing if Etc/Unknown were made valid here.\n\nZone\tEtc/GMT-14\t14\t-\t%z\nZone\tEtc/GMT-13\t13\t-\t%z\nZone\tEtc/GMT-12\t12\t-\t%z\nZone\tEtc/GMT-11\t11\t-\t%z\nZone\tEtc/GMT-10\t10\t-\t%z\nZone\tEtc/GMT-9\t9\t-\t%z\nZone\tEtc/GMT-8\t8\t-\t%z\nZone\tEtc/GMT-7\t7\t-\t%z\nZone\tEtc/GMT-6\t6\t-\t%z\nZone\tEtc/GMT-5\t5\t-\t%z\nZone\tEtc/GMT-4\t4\t-\t%z\nZone\tEtc/GMT-3\t3\t-\t%z\nZone\tEtc/GMT-2\t2\t-\t%z\nZone\tEtc/GMT-1\t1\t-\t%z\nZone\tEtc/GMT+1\t-1\t-\t%z\nZone\tEtc/GMT+2\t-2\t-\t%z\nZone\tEtc/GMT+3\t-3\t-\t%z\nZone\tEtc/GMT+4\t-4\t-\t%z\nZone\tEtc/GMT+5\t-5\t-\t%z\nZone\tEtc/GMT+6\t-6\t-\t%z\nZone\tEtc/GMT+7\t-7\t-\t%z\nZone\tEtc/GMT+8\t-8\t-\t%z\nZone\tEtc/GMT+9\t-9\t-\t%z\nZone\tEtc/GMT+10\t-10\t-\t%z\nZone\tEtc/GMT+11\t-11\t-\t%z\nZone\tEtc/GMT+12\t-12\t-\t%z\n"
        },
        {
          "name": "europe",
          "type": "blob",
          "size": 178.080078125,
          "content": "# tzdb data for Europe and environs\n\n# This file is in the public domain, so clarified as of\n# 2009-05-17 by Arthur David Olson.\n\n# This file is by no means authoritative; if you think you know better,\n# go ahead and edit the file (and please send any changes to\n# tz@iana.org for general use in the future).  For more, please see\n# the file CONTRIBUTING in the tz distribution.\n\n# From Paul Eggert (2017-02-10):\n#\n# Unless otherwise specified, the source for data through 1990 is:\n# Thomas G. Shanks and Rique Pottenger, The International Atlas (6th edition),\n# San Diego: ACS Publications, Inc. (2003).\n# Unfortunately this book contains many errors and cites no sources.\n#\n# Many years ago Gwillim Law wrote that a good source\n# for time zone data was the International Air Transport\n# Association's Standard Schedules Information Manual (IATA SSIM),\n# published semiannually.  Law sent in several helpful summaries\n# of the IATA's data after 1990.  Except where otherwise noted,\n# IATA SSIM is the source for entries after 1990.\n#\n# A reliable and entertaining source about time zones is\n# Derek Howse, Greenwich time and longitude, Philip Wilson Publishers (1997).\n#\n# Except where otherwise noted, Shanks & Pottenger is the source for\n# entries through 1991, and IATA SSIM is the source for entries afterwards.\n#\n# Other sources occasionally used include:\n#\n#\tEdward W. Whitman, World Time Differences,\n#\tWhitman Publishing Co, 2 Niagara Av, Ealing, London (undated),\n#\twhich I found in the UCLA library.\n#\n#\tWilliam Willett, The Waste of Daylight, 19th edition\n#\t<http://cs.ucla.edu/~eggert/The-Waste-of-Daylight-19th.pdf>\n#\t[PDF] (1914-03)\n#\n#\tMilne J. Civil time. Geogr J. 1899 Feb;13(2):173-94\n#\t<https://www.jstor.org/stable/1774359>.  He writes:\n#\t\"It is requested that corrections and additions to these tables\n#\tmay be sent to Mr. John Milne, Royal Geographical Society,\n#\tSavile Row, London.\"  Nowadays please email them to tz@iana.org.\n#\n#\tByalokoz EL. New Counting of Time in Russia since July 1, 1919.\n#\tThis Russian-language source was consulted by Vladimir Karpinsky; see\n#\thttps://mm.icann.org/pipermail/tz/2014-August/021320.html\n#\tThe full Russian citation is:\n#\tБялокоз, Евгений Людвигович. Новый счет времени в течении суток\n#\tвведенный декретом Совета народных комиссаров для всей России с 1-го\n#\tиюля 1919 г. / Изд. 2-е Междуведомственной комиссии. - Петроград:\n#\tДесятая гос. тип., 1919.\n#\thttp://resolver.gpntb.ru/purl?docushare/dsweb/Get/Resource-2011/Byalokoz__E.L.__Novyy__schet__vremeni__v__techenie__sutok__izd__2(1).pdf\n#\n#\tBrazil's Divisão Serviço da Hora (DSHO),\n#\tHistory of Summer Time\n#\t<http://pcdsh01.on.br/HISTHV.htm>\n#\t(1998-09-21, in Portuguese)\n#\n# I invented the abbreviations marked '*' in the following table;\n# the rest are variants of the \"xMT\" pattern for a city's mean time,\n# or are from other sources.  Corrections are welcome!\n#                   std  dst  2dst\n#                   LMT             Local Mean Time\n#       -4:00       AST  ADT        Atlantic\n#        0:00       GMT  BST  BDST  Greenwich, British Summer\n#        0:00       GMT  IST        Greenwich, Irish Summer\n#        0:00       WET  WEST WEMT  Western Europe\n#        1:00       BST             British Standard (1968-1971)\n#        1:00       IST  GMT        Irish Standard (1968-) with winter DST\n#        1:00       CET  CEST CEMT  Central Europe\n#        1:00:14    SET             Swedish (1879-1899)\n#        1:36:34    RMT* LST*       Riga, Latvian Summer (1880-1926)*\n#        2:00       EET  EEST       Eastern Europe\n#        3:00       MSK  MSD  MDST* Moscow\n\n# From Peter Ilieve (1994-12-04), re EEC/EC/EU members:\n# The original six: Belgium, France, (West) Germany, Italy,\n# Luxembourg, the Netherlands.\n# Plus, from 1 Jan 73: Denmark, Ireland, United Kingdom.\n# Plus, from 1 Jan 81: Greece.\n# Plus, from 1 Jan 86: Spain, Portugal.\n# Plus, from 1 Jan 95: Austria, Finland, Sweden. (Norway negotiated terms for\n# entry but in a referendum on 28 Nov 94 the people voted No by 52.2% to 47.8%\n# on a turnout of 88.6%. This was almost the same result as Norway's previous\n# referendum in 1972, they are the only country to have said No twice.\n# Referendums in the other three countries voted Yes.)\n# ...\n# Estonia ... uses EU dates but not at 01:00 GMT, they use midnight GMT.\n# I don't think they know yet what they will do from 1996 onwards.\n# ...\n# There shouldn't be any [current members who are not using EU rules].\n# A Directive has the force of law, member states are obliged to enact\n# national law to implement it. The only contentious issue was the\n# different end date for the UK and Ireland, and this was always allowed\n# in the Directive.\n\n\n###############################################################################\n\n# Britain (United Kingdom) and Ireland (Eire)\n\n# From Peter Ilieve (1994-07-06):\n#\n# On 17 Jan 1994 the Independent, a UK quality newspaper, had a piece about\n# historical vistas along the Thames in west London. There was a photo\n# and a sketch map showing some of the sightlines involved. One paragraph\n# of the text said:\n#\n# 'An old stone obelisk marking a forgotten terrestrial meridian stands\n# beside the river at Kew. In the 18th century, before time and longitude\n# was standardised by the Royal Observatory in Greenwich, scholars observed\n# this stone and the movement of stars from Kew Observatory nearby. They\n# made their calculations and set the time for the Horse Guards and Parliament,\n# but now the stone is obscured by scrubwood and can only be seen by walking\n# along the towpath within a few yards of it.'\n#\n# I have a one inch to one mile map of London and my estimate of the stone's\n# position is 51° 28' 30\" N, 0° 18' 45\" W. The longitude should\n# be within about ±2\". The Ordnance Survey grid reference is TQ172761.\n#\n# [This yields STDOFF = -0:01:15 for London LMT in the 18th century.]\n\n# From Paul Eggert (1993-11-18):\n#\n# Howse writes that Britain was the first country to use standard time.\n# The railways cared most about the inconsistencies of local mean time,\n# and it was they who forced a uniform time on the country.\n# The original idea was credited to Dr. William Hyde Wollaston (1766-1828)\n# and was popularized by Abraham Follett Osler (1808-1903).\n# The first railway to adopt London time was the Great Western Railway\n# in November 1840; other railways followed suit, and by 1847 most\n# (though not all) railways used London time.  On 1847-09-22 the\n# Railway Clearing House, an industry standards body, recommended that GMT be\n# adopted at all stations as soon as the General Post Office permitted it.\n# The transition occurred on 12-01 for the L&NW, the Caledonian,\n# and presumably other railways; the January 1848 Bradshaw's lists many\n# railways as using GMT.  By 1855 the vast majority of public\n# clocks in Britain were set to GMT (though some, like the great clock\n# on Tom Tower at Christ Church, Oxford, were fitted with two minute hands,\n# one for local time and one for GMT).  The last major holdout was the legal\n# system, which stubbornly stuck to local time for many years, leading\n# to oddities like polls opening at 08:13 and closing at 16:13.\n# The legal system finally switched to GMT when the Statutes (Definition\n# of Time) Act took effect; it received the Royal Assent on 1880-08-02.\n#\n# In the tables below, we condense this complicated story into a single\n# transition date for London, namely 1847-12-01.  We don't know as much\n# about Dublin, so we use 1880-08-02, the legal transition time.\n\n# From Paul Eggert (2014-07-19):\n# The ancients had no need for daylight saving, as they kept time\n# informally or via hours whose length depended on the time of year.\n# Daylight saving time in its modern sense was invented by the\n# New Zealand entomologist George Vernon Hudson (1867-1946),\n# whose day job as a postal clerk led him to value\n# after-hours daylight in which to pursue his research.\n# In 1895 he presented a paper to the Wellington Philosophical Society\n# that proposed a two-hour daylight-saving shift.  See:\n# Hudson GV. On seasonal time-adjustment in countries south of lat. 30°.\n# Transactions and Proceedings of the New Zealand Institute. 1895;28:734\n# http://rsnz.natlib.govt.nz/volume/rsnz_28/rsnz_28_00_006110.html\n# Although some interest was expressed in New Zealand, his proposal\n# did not find its way into law and eventually it was almost forgotten.\n#\n# In England, DST was independently reinvented by William Willett (1857-1915),\n# a London builder and member of the Royal Astronomical Society\n# who circulated a pamphlet \"The Waste of Daylight\" (1907)\n# that proposed advancing clocks 20 minutes on each of four Sundays in April,\n# and retarding them by the same amount on four Sundays in September.\n# A bill was drafted in 1909 and introduced in Parliament several times,\n# but it met with ridicule and opposition, especially from farming interests.\n# Later editions of the pamphlet proposed one-hour summer time, and\n# it was eventually adopted as a wartime measure in 1916.\n# See: Summer Time Arrives Early, The Times (2000-05-18).\n# A monument to Willett was unveiled on 1927-05-21, in an open space in\n# a 45-acre wood near Chislehurst, Kent that was purchased by popular\n# subscription and open to the public.  On the south face of the monolith,\n# designed by G. W. Miller, is the William Willett Memorial Sundial,\n# which is permanently set to Summer Time.\n\n# From Winston Churchill (1934-04-28):\n# It is one of the paradoxes of history that we should owe the boon of\n# summer time, which gives every year to the people of this country\n# between 160 and 170 hours more daylight leisure, to a war which\n# plunged Europe into darkness for four years, and shook the\n# foundations of civilization throughout the world.\n#\t-- \"A Silent Toast to William Willett\", Pictorial Weekly;\n#\trepublished in Finest Hour (Spring 2002) 1(114):26\n#\thttps://www.winstonchurchill.org/publications/finest-hour/finest-hour-114/a-silent-toast-to-william-willett-by-winston-s-churchill\n\n# From Paul Eggert (2015-08-08):\n# The OED Supplement says that the English originally said \"Daylight Saving\"\n# when they were debating the adoption of DST in 1908; but by 1916 this\n# term appears only in quotes taken from DST's opponents, whereas the\n# proponents (who eventually won the argument) are quoted as using \"Summer\".\n# The term \"Summer Time\" was introduced by Herbert Samuel, Home Secretary; see:\n# Viscount Samuel. Leisure in a Democracy. Cambridge University Press\n# ISBN 978-1-107-49471-8 (1949, reissued 2015), p 8.\n\n# From Arthur David Olson (1989-01-19):\n# A source at the British Information Office in New York avers that it's\n# known as \"British\" Summer Time in all parts of the United Kingdom.\n\n# Date: 4 Jan 89 08:57:25 GMT (Wed)\n# From: Jonathan Leffler\n# [British Summer Time] is fixed annually by Act of Parliament.\n# If you can predict what Parliament will do, you should be in\n# politics making a fortune, not computing.\n\n# From Chris Carrier (1996-06-14):\n# I remember reading in various wartime issues of the London Times the\n# acronym BDST for British Double Summer Time.  Look for the published\n# time of sunrise and sunset in The Times, when BDST was in effect, and\n# if you find a zone reference it will say, \"All times B.D.S.T.\"\n\n# From Joseph S. Myers (1999-09-02):\n# ... some military cables (WO 219/4100 - this is a copy from the\n# main SHAEF archives held in the US National Archives, SHAEF/5252/8/516)\n# agree that the usage is BDST (this appears in a message dated 17 Feb 1945).\n\n# From Joseph S. Myers (2000-10-03):\n# On 18th April 1941, Sir Stephen Tallents of the BBC wrote to Sir\n# Alexander Maxwell of the Home Office asking whether there was any\n# official designation; the reply of the 21st was that there wasn't\n# but he couldn't think of anything better than the \"Double British\n# Summer Time\" that the BBC had been using informally.\n# https://www.polyomino.org.uk/british-time/bbc-19410418.png\n# https://www.polyomino.org.uk/british-time/ho-19410421.png\n\n# From Sir Alexander Maxwell in the above-mentioned letter (1941-04-21):\n# [N]o official designation has as far as I know been adopted for the time\n# which is to be introduced in May....\n# I cannot think of anything better than \"Double British Summer Time\"\n# which could not be said to run counter to any official description.\n\n# From Paul Eggert (2000-10-02):\n# Howse writes (p 157) 'DBST' too, but 'BDST' seems to have been common\n# and follows the more usual convention of putting the location name first,\n# so we use 'BDST'.\n\n# Peter Ilieve (1998-04-19) described at length\n# the history of summer time legislation in the United Kingdom.\n# Since 1998 Joseph S. Myers has been updating\n# and extending this list, which can be found in\n# https://www.polyomino.org.uk/british-time/\n\n# From Joseph S. Myers (1998-01-06):\n#\n# The legal time in the UK outside of summer time is definitely GMT, not UTC;\n# see Lord Tanlaw's speech\n# https://www.publications.parliament.uk/pa/ld199798/ldhansrd/vo970611/text/70611-10.htm#70611-10_head0\n# (Lords Hansard 11 June 1997 columns 964 to 976).\n\n# From Paul Eggert (2006-03-22):\n#\n# For lack of other data, follow Shanks & Pottenger for Eire in 1940-1948.\n#\n# Given Ilieve and Myers's data, the following claims by Shanks & Pottenger\n# are incorrect:\n#     * Wales did not switch from GMT to daylight saving time until\n#\t1921 Apr 3, when they began to conform with the rest of Great Britain.\n# Actually, Wales was identical after 1880.\n#     * Eire had two transitions on 1916 Oct 1.\n# It actually just had one transition.\n#     * Northern Ireland used single daylight saving time throughout WW II.\n# Actually, it conformed to Britain.\n#     * GB-Eire changed standard time to 1 hour ahead of GMT on 1968-02-18.\n# Actually, that date saw the usual switch to summer time.\n# Standard time was not changed until 1968-10-27 (the clocks didn't change).\n#\n# Here is another incorrect claim by Shanks & Pottenger:\n#     * Jersey, Guernsey, and the Isle of Man did not switch from GMT\n#\tto daylight saving time until 1921 Apr 3, when they began to\n#\tconform with Great Britain.\n# S.R.&O. 1916, No. 382 and HO 45/10811/312364 (quoted above) say otherwise.\n#\n# The following claim by Shanks & Pottenger is possible though doubtful;\n# we'll ignore it for now.\n#     * Dublin's 1971-10-31 switch was at 02:00, even though London's was 03:00.\n\n# From Paul Eggert (2017-12-04):\n#\n# Dunsink Observatory (8 km NW of Dublin's center) was to Dublin as\n# Greenwich was to London.  For example:\n#\n#   \"Timeball on the ballast office is down.  Dunsink time.\"\n#   -- James Joyce, Ulysses\n#\n# The abbreviation DMT stood for \"Dublin Mean Time\" or \"Dunsink Mean Time\";\n# this being Ireland, opinions differed.\n#\n# Whitman says Dublin/Dunsink Mean Time was UT-00:25:21, which agrees\n# with measurements of recent visitors to the Meridian Room of Dunsink\n# Observatory; see Malone D. Dunsink and timekeeping. 2016-01-24.\n# <https://www.maths.tcd.ie/~dwmalone/time/dunsink.html>.  Malone\n# writes that the Nautical Almanac listed UT-00:25:22 until 1896, when\n# it moved to UT-00:25:21.1 (I confirmed that the 1893 edition used\n# the former and the 1896 edition used the latter).  Evidently the\n# news of this change propagated slowly, as Milne 1899 still lists\n# UT-00:25:22 and cites the International Telegraph Bureau.  As it is\n# not clear that there was any practical significance to the change\n# from UT-00:25:22 to UT-00:25:21.1 in civil timekeeping, omit this\n# transition for now and just use the latter value.\n\n# \"Countess Markievicz ... claimed that the [1916] abolition of Dublin Mean Time\n# was among various actions undertaken by the 'English' government that\n# would 'put the whole country into the SF (Sinn Féin) camp'.  She claimed\n# Irish 'public feeling (was) outraged by forcing of English time on us'.\"\n# -- Parsons M. Dublin lost its time zone - and 25 minutes - after 1916 Rising.\n# Irish Times 2014-10-27.\n# https://www.irishtimes.com/news/politics/dublin-lost-its-time-zone-and-25-minutes-after-1916-rising-1.1977411\n\n# From Joseph S. Myers (2005-01-26):\n# Irish laws are available online at <http://www.irishstatutebook.ie>.\n# These include various relating to legal time, for example:\n#\n# ZZA13Y1923.html ZZA12Y1924.html ZZA8Y1925.html ZZSIV20PG1267.html\n#\n# ZZSI71Y1947.html ZZSI128Y1948.html ZZSI23Y1949.html ZZSI41Y1950.html\n# ZZSI27Y1951.html ZZSI73Y1952.html\n#\n# ZZSI11Y1961.html ZZSI232Y1961.html ZZSI182Y1962.html\n# ZZSI167Y1963.html ZZSI257Y1964.html ZZSI198Y1967.html\n# ZZA23Y1968.html ZZA17Y1971.html\n#\n# ZZSI67Y1981.html ZZSI212Y1982.html ZZSI45Y1986.html\n# ZZSI264Y1988.html ZZSI52Y1990.html ZZSI371Y1992.html\n# ZZSI395Y1994.html ZZSI484Y1997.html ZZSI506Y2001.html\n#\n# [These are all relative to the root, e.g., the first is\n# <http://www.irishstatutebook.ie/ZZA13Y1923.html>.]\n#\n# (These are those I found, but there could be more.  In any case these\n# should allow various updates to the comments in the europe file to cover\n# the laws applicable in Ireland.)\n#\n# (Note that the time in the Republic of Ireland since 1968 has been defined\n# in terms of standard time being GMT+1 with a period of winter time when it\n# is GMT, rather than standard time being GMT with a period of summer time\n# being GMT+1.)\n\n# From Paul Eggert (1999-03-28):\n# Clive Feather (<news:859845706.26043.0@office.demon.net>, 1997-03-31)\n# reports that Folkestone (Cheriton) Shuttle Terminal uses Concession Time\n# (CT), equivalent to French civil time.\n# Julian Hill (<news:36118128.5A14@virgin.net>, 1998-09-30) reports that\n# trains between Dollands Moor (the freight facility next door)\n# and Frethun run in CT.\n# My admittedly uninformed guess is that the terminal has two authorities,\n# the French concession operators and the British civil authorities,\n# and that the time depends on who you're talking to.\n# If, say, the British police were called to the station for some reason,\n# I would expect the official police report to use GMT/BST and not CET/CEST.\n# This is a borderline case, but for now let's stick to GMT/BST.\n\n# From an anonymous contributor (1996-06-02):\n# The law governing time in Ireland is under Statutory Instrument SI 395/94,\n# which gives force to European Union 7th Council Directive No. 94/21/EC.\n# Under this directive, the Minister for Justice in Ireland makes appropriate\n# regulations. I spoke this morning with the Secretary of the Department of\n# Justice (tel +353 1 678 9711) who confirmed to me that the correct name is\n# \"Irish Summer Time\", abbreviated to \"IST\".\n#\n# From Paul Eggert (2017-12-07):\n# The 1996 anonymous contributor's goal was to determine the correct\n# abbreviation for summer time in Dublin and so the contributor\n# focused on the \"IST\", not on the \"Irish Summer Time\".  Though the\n# \"IST\" was correct, the \"Irish Summer Time\" appears to have been an\n# error, as Ireland's Standard Time (Amendment) Act, 1971 states that\n# standard time in Ireland remains at UT +01 and is observed in\n# summer, and that Greenwich mean time is observed in winter.  (Thanks\n# to Derick Rethans for pointing out the error.)  That is, when\n# Ireland amended the 1968 act that established UT +01 as Irish\n# Standard Time, it left standard time unchanged and established GMT\n# as a negative daylight saving time in winter.  So, in this database\n# IST stands for Irish Summer Time for timestamps before 1968, and for\n# Irish Standard Time after that.  See:\n# http://www.irishstatutebook.ie/eli/1971/act/17/enacted/en/print\n\n# Michael Deckers (2017-06-01) gave the following URLs for Ireland's\n# Summer Time Act, 1925 and Summer Time Orders, 1926 and 1947:\n# http://www.irishstatutebook.ie/eli/1925/act/8/enacted/en/print\n# http://www.irishstatutebook.ie/eli/1926/sro/919/made/en/print\n# http://www.irishstatutebook.ie/eli/1947/sro/71/made/en/print\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\n# Summer Time Act, 1916\nRule\tGB-Eire\t1916\tonly\t-\tMay\t21\t2:00s\t1:00\tBST\nRule\tGB-Eire\t1916\tonly\t-\tOct\t 1\t2:00s\t0\tGMT\n# S.R.&O. 1917, No. 358\nRule\tGB-Eire\t1917\tonly\t-\tApr\t 8\t2:00s\t1:00\tBST\nRule\tGB-Eire\t1917\tonly\t-\tSep\t17\t2:00s\t0\tGMT\n# S.R.&O. 1918, No. 274\nRule\tGB-Eire\t1918\tonly\t-\tMar\t24\t2:00s\t1:00\tBST\nRule\tGB-Eire\t1918\tonly\t-\tSep\t30\t2:00s\t0\tGMT\n# S.R.&O. 1919, No. 297\nRule\tGB-Eire\t1919\tonly\t-\tMar\t30\t2:00s\t1:00\tBST\nRule\tGB-Eire\t1919\tonly\t-\tSep\t29\t2:00s\t0\tGMT\n# S.R.&O. 1920, No. 458\nRule\tGB-Eire\t1920\tonly\t-\tMar\t28\t2:00s\t1:00\tBST\n# S.R.&O. 1920, No. 1844\nRule\tGB-Eire\t1920\tonly\t-\tOct\t25\t2:00s\t0\tGMT\n# S.R.&O. 1921, No. 363\nRule\tGB-Eire\t1921\tonly\t-\tApr\t 3\t2:00s\t1:00\tBST\nRule\tGB-Eire\t1921\tonly\t-\tOct\t 3\t2:00s\t0\tGMT\n# S.R.&O. 1922, No. 264\nRule\tGB-Eire\t1922\tonly\t-\tMar\t26\t2:00s\t1:00\tBST\nRule\tGB-Eire\t1922\tonly\t-\tOct\t 8\t2:00s\t0\tGMT\n# The Summer Time Act, 1922\nRule\tGB-Eire\t1923\tonly\t-\tApr\tSun>=16\t2:00s\t1:00\tBST\nRule\tGB-Eire\t1923\t1924\t-\tSep\tSun>=16\t2:00s\t0\tGMT\nRule\tGB-Eire\t1924\tonly\t-\tApr\tSun>=9\t2:00s\t1:00\tBST\nRule\tGB-Eire\t1925\t1926\t-\tApr\tSun>=16\t2:00s\t1:00\tBST\n# The Summer Time Act, 1925\nRule\tGB-Eire\t1925\t1938\t-\tOct\tSun>=2\t2:00s\t0\tGMT\nRule\tGB-Eire\t1927\tonly\t-\tApr\tSun>=9\t2:00s\t1:00\tBST\nRule\tGB-Eire\t1928\t1929\t-\tApr\tSun>=16\t2:00s\t1:00\tBST\nRule\tGB-Eire\t1930\tonly\t-\tApr\tSun>=9\t2:00s\t1:00\tBST\nRule\tGB-Eire\t1931\t1932\t-\tApr\tSun>=16\t2:00s\t1:00\tBST\nRule\tGB-Eire\t1933\tonly\t-\tApr\tSun>=9\t2:00s\t1:00\tBST\nRule\tGB-Eire\t1934\tonly\t-\tApr\tSun>=16\t2:00s\t1:00\tBST\nRule\tGB-Eire\t1935\tonly\t-\tApr\tSun>=9\t2:00s\t1:00\tBST\nRule\tGB-Eire\t1936\t1937\t-\tApr\tSun>=16\t2:00s\t1:00\tBST\nRule\tGB-Eire\t1938\tonly\t-\tApr\tSun>=9\t2:00s\t1:00\tBST\nRule\tGB-Eire\t1939\tonly\t-\tApr\tSun>=16\t2:00s\t1:00\tBST\n# S.R.&O. 1939, No. 1379\nRule\tGB-Eire\t1939\tonly\t-\tNov\tSun>=16\t2:00s\t0\tGMT\n# S.R.&O. 1940, No. 172 and No. 1883\nRule\tGB-Eire\t1940\tonly\t-\tFeb\tSun>=23\t2:00s\t1:00\tBST\n# S.R.&O. 1941, No. 476\nRule\tGB-Eire\t1941\tonly\t-\tMay\tSun>=2\t1:00s\t2:00\tBDST\nRule\tGB-Eire\t1941\t1943\t-\tAug\tSun>=9\t1:00s\t1:00\tBST\n# S.R.&O. 1942, No. 506\nRule\tGB-Eire\t1942\t1944\t-\tApr\tSun>=2\t1:00s\t2:00\tBDST\n# S.R.&O. 1944, No. 932\nRule\tGB-Eire\t1944\tonly\t-\tSep\tSun>=16\t1:00s\t1:00\tBST\n# S.R.&O. 1945, No. 312\nRule\tGB-Eire\t1945\tonly\t-\tApr\tMon>=2\t1:00s\t2:00\tBDST\nRule\tGB-Eire\t1945\tonly\t-\tJul\tSun>=9\t1:00s\t1:00\tBST\n# S.R.&O. 1945, No. 1208\nRule\tGB-Eire\t1945\t1946\t-\tOct\tSun>=2\t2:00s\t0\tGMT\nRule\tGB-Eire\t1946\tonly\t-\tApr\tSun>=9\t2:00s\t1:00\tBST\n# The Summer Time Act, 1947\nRule\tGB-Eire\t1947\tonly\t-\tMar\t16\t2:00s\t1:00\tBST\nRule\tGB-Eire\t1947\tonly\t-\tApr\t13\t1:00s\t2:00\tBDST\nRule\tGB-Eire\t1947\tonly\t-\tAug\t10\t1:00s\t1:00\tBST\nRule\tGB-Eire\t1947\tonly\t-\tNov\t 2\t2:00s\t0\tGMT\n# Summer Time Order, 1948 (S.I. 1948/495)\nRule\tGB-Eire\t1948\tonly\t-\tMar\t14\t2:00s\t1:00\tBST\nRule\tGB-Eire\t1948\tonly\t-\tOct\t31\t2:00s\t0\tGMT\n# Summer Time Order, 1949 (S.I. 1949/373)\nRule\tGB-Eire\t1949\tonly\t-\tApr\t 3\t2:00s\t1:00\tBST\nRule\tGB-Eire\t1949\tonly\t-\tOct\t30\t2:00s\t0\tGMT\n# Summer Time Order, 1950 (S.I. 1950/518)\n# Summer Time Order, 1951 (S.I. 1951/430)\n# Summer Time Order, 1952 (S.I. 1952/451)\nRule\tGB-Eire\t1950\t1952\t-\tApr\tSun>=14\t2:00s\t1:00\tBST\nRule\tGB-Eire\t1950\t1952\t-\tOct\tSun>=21\t2:00s\t0\tGMT\n# revert to the rules of the Summer Time Act, 1925\nRule\tGB-Eire\t1953\tonly\t-\tApr\tSun>=16\t2:00s\t1:00\tBST\nRule\tGB-Eire\t1953\t1960\t-\tOct\tSun>=2\t2:00s\t0\tGMT\nRule\tGB-Eire\t1954\tonly\t-\tApr\tSun>=9\t2:00s\t1:00\tBST\nRule\tGB-Eire\t1955\t1956\t-\tApr\tSun>=16\t2:00s\t1:00\tBST\nRule\tGB-Eire\t1957\tonly\t-\tApr\tSun>=9\t2:00s\t1:00\tBST\nRule\tGB-Eire\t1958\t1959\t-\tApr\tSun>=16\t2:00s\t1:00\tBST\nRule\tGB-Eire\t1960\tonly\t-\tApr\tSun>=9\t2:00s\t1:00\tBST\n# Summer Time Order, 1961 (S.I. 1961/71)\n# Summer Time (1962) Order, 1961 (S.I. 1961/2465)\n# Summer Time Order, 1963 (S.I. 1963/81)\nRule\tGB-Eire\t1961\t1963\t-\tMar\tlastSun\t2:00s\t1:00\tBST\nRule\tGB-Eire\t1961\t1968\t-\tOct\tSun>=23\t2:00s\t0\tGMT\n# Summer Time (1964) Order, 1963 (S.I. 1963/2101)\n# Summer Time Order, 1964 (S.I. 1964/1201)\n# Summer Time Order, 1967 (S.I. 1967/1148)\nRule\tGB-Eire\t1964\t1967\t-\tMar\tSun>=19\t2:00s\t1:00\tBST\n# Summer Time Order, 1968 (S.I. 1968/117)\nRule\tGB-Eire\t1968\tonly\t-\tFeb\t18\t2:00s\t1:00\tBST\n# The British Standard Time Act, 1968\n#\t(no summer time)\n# The Summer Time Act, 1972\nRule\tGB-Eire\t1972\t1980\t-\tMar\tSun>=16\t2:00s\t1:00\tBST\nRule\tGB-Eire\t1972\t1980\t-\tOct\tSun>=23\t2:00s\t0\tGMT\n# Summer Time Order, 1980 (S.I. 1980/1089)\n# Summer Time Order, 1982 (S.I. 1982/1673)\n# Summer Time Order, 1986 (S.I. 1986/223)\n# Summer Time Order, 1988 (S.I. 1988/931)\nRule\tGB-Eire\t1981\t1995\t-\tMar\tlastSun\t1:00u\t1:00\tBST\nRule\tGB-Eire 1981\t1989\t-\tOct\tSun>=23\t1:00u\t0\tGMT\n# Summer Time Order, 1989 (S.I. 1989/985)\n# Summer Time Order, 1992 (S.I. 1992/1729)\n# Summer Time Order 1994 (S.I. 1994/2798)\nRule\tGB-Eire 1990\t1995\t-\tOct\tSun>=22\t1:00u\t0\tGMT\n# Summer Time Order 1997 (S.I. 1997/2982)\n# See EU for rules starting in 1996.\n#\n# Use Europe/London for Jersey, Guernsey, and the Isle of Man.\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tEurope/London\t-0:01:15 -\tLMT\t1847 Dec  1\n\t\t\t 0:00\tGB-Eire\t%s\t1968 Oct 27\n\t\t\t 1:00\t-\tBST\t1971 Oct 31  2:00u\n\t\t\t 0:00\tGB-Eire\t%s\t1996\n\t\t\t 0:00\tEU\tGMT/BST\n\n# From Paul Eggert (2018-02-15):\n# In January 2018 we discovered that the negative SAVE values in the\n# Eire rules cause problems with tests for ICU:\n# https://mm.icann.org/pipermail/tz/2018-January/025825.html\n# and with tests for OpenJDK:\n# https://mm.icann.org/pipermail/tz/2018-January/025822.html\n#\n# To work around this problem, the build procedure can translate the\n# following data into two forms, one with negative SAVE values and the\n# other form with a traditional approximation for Irish timestamps\n# after 1971-10-31 02:00 UTC; although this approximation has tm_isdst\n# flags that are reversed, its UTC offsets are correct and this often\n# suffices....\n#\n# The following is like GB-Eire and EU, except with standard time in\n# summer and negative daylight saving time in winter.  It is for when\n# negative SAVE values are used.\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tEire\t1971\tonly\t-\tOct\t31\t 2:00u\t-1:00\t-\nRule\tEire\t1972\t1980\t-\tMar\tSun>=16\t 2:00u\t0\t-\nRule\tEire\t1972\t1980\t-\tOct\tSun>=23\t 2:00u\t-1:00\t-\nRule\tEire\t1981\tmax\t-\tMar\tlastSun\t 1:00u\t0\t-\nRule\tEire\t1981\t1989\t-\tOct\tSun>=23\t 1:00u\t-1:00\t-\nRule\tEire\t1990\t1995\t-\tOct\tSun>=22\t 1:00u\t-1:00\t-\nRule\tEire\t1996\tmax\t-\tOct\tlastSun\t 1:00u\t-1:00\t-\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n\t\t#STDOFF\t-0:25:21.1\nZone\tEurope/Dublin\t-0:25:21 -\tLMT\t1880 Aug  2\n\t\t\t-0:25:21 -\tDMT\t1916 May 21  2:00s\n\t\t\t-0:25:21 1:00\tIST\t1916 Oct  1  2:00s\n\t\t\t 0:00\tGB-Eire\t%s\t1921 Dec  6 # independence\n\t\t\t 0:00\tGB-Eire\tGMT/IST\t1940 Feb 25  2:00s\n\t\t\t 0:00\t1:00\tIST\t1946 Oct  6  2:00s\n\t\t\t 0:00\t-\tGMT\t1947 Mar 16  2:00s\n\t\t\t 0:00\t1:00\tIST\t1947 Nov  2  2:00s\n\t\t\t 0:00\t-\tGMT\t1948 Apr 18  2:00s\n\t\t\t 0:00\tGB-Eire\tGMT/IST\t1968 Oct 27\n# Vanguard section, for zic and other parsers that support negative DST.\n\t\t\t 1:00\tEire\tIST/GMT\n# Rearguard section, for parsers lacking negative DST; see ziguard.awk.\n#\t\t\t 1:00\t-\tIST\t1971 Oct 31  2:00u\n#\t\t\t 0:00\tGB-Eire\tGMT/IST\t1996\n#\t\t\t 0:00\tEU\tGMT/IST\n# End of rearguard section.\n\n\n###############################################################################\n\n# Europe\n\n# The following rules are for the European Union and for its\n# predecessor organization, the European Communities.\n# For brevity they are called \"EU rules\" elsewhere in this file.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tEU\t1977\t1980\t-\tApr\tSun>=1\t 1:00u\t1:00\tS\nRule\tEU\t1977\tonly\t-\tSep\tlastSun\t 1:00u\t0\t-\nRule\tEU\t1978\tonly\t-\tOct\t 1\t 1:00u\t0\t-\nRule\tEU\t1979\t1995\t-\tSep\tlastSun\t 1:00u\t0\t-\nRule\tEU\t1981\tmax\t-\tMar\tlastSun\t 1:00u\t1:00\tS\nRule\tEU\t1996\tmax\t-\tOct\tlastSun\t 1:00u\t0\t-\n# The most recent directive covers the years starting in 2002.  See:\n# Directive 2000/84/EC of the European Parliament and of the Council\n# of 19 January 2001 on summer-time arrangements.\n# http://eur-lex.europa.eu/LexUriServ/LexUriServ.do?uri=CELEX:32000L0084:EN:NOT\n\n# W-Eur differs from EU only in that W-Eur uses standard time.\nRule\tW-Eur\t1977\t1980\t-\tApr\tSun>=1\t 1:00s\t1:00\tS\nRule\tW-Eur\t1977\tonly\t-\tSep\tlastSun\t 1:00s\t0\t-\nRule\tW-Eur\t1978\tonly\t-\tOct\t 1\t 1:00s\t0\t-\nRule\tW-Eur\t1979\t1995\t-\tSep\tlastSun\t 1:00s\t0\t-\nRule\tW-Eur\t1981\tmax\t-\tMar\tlastSun\t 1:00s\t1:00\tS\nRule\tW-Eur\t1996\tmax\t-\tOct\tlastSun\t 1:00s\t0\t-\n\n# Older C-Eur rules are for convenience in the tables.\n# From 1977 on, C-Eur differs from EU only in that C-Eur uses standard time.\nRule\tC-Eur\t1916\tonly\t-\tApr\t30\t23:00\t1:00\tS\nRule\tC-Eur\t1916\tonly\t-\tOct\t 1\t 1:00\t0\t-\nRule\tC-Eur\t1917\t1918\t-\tApr\tMon>=15\t 2:00s\t1:00\tS\nRule\tC-Eur\t1917\t1918\t-\tSep\tMon>=15\t 2:00s\t0\t-\nRule\tC-Eur\t1940\tonly\t-\tApr\t 1\t 2:00s\t1:00\tS\nRule\tC-Eur\t1942\tonly\t-\tNov\t 2\t 2:00s\t0\t-\nRule\tC-Eur\t1943\tonly\t-\tMar\t29\t 2:00s\t1:00\tS\nRule\tC-Eur\t1943\tonly\t-\tOct\t 4\t 2:00s\t0\t-\nRule\tC-Eur\t1944\t1945\t-\tApr\tMon>=1\t 2:00s\t1:00\tS\n# Whitman gives 1944 Oct 7; go with Shanks & Pottenger.\nRule\tC-Eur\t1944\tonly\t-\tOct\t 2\t 2:00s\t0\t-\n# From Jesper Nørgaard Welen (2008-07-13):\n#\n# I found what is probably a typo of 2:00 which should perhaps be 2:00s\n# in the C-Eur rule from tz database version 2008d (this part was\n# corrected in version 2008d). The circumstantial evidence is simply the\n# tz database itself, as seen below:\n#\n# Zone Europe/Paris ...\n#    0:00 France WE%sT 1945 Sep 16  3:00\n#\n# Zone Europe/Monaco ...\n#    0:00 France WE%sT 1945 Sep 16  3:00\n#\n# Zone Europe/Belgrade ...\n#    1:00 1:00 CEST 1945 Sep 16  2:00s\n#\n# Rule France 1945 only - Sep 16  3:00 0 -\n# Rule Belgium 1945 only - Sep 16  2:00s 0 -\n# Rule Neth 1945 only - Sep 16 2:00s 0 -\n#\n# The rule line to be changed is:\n#\n# Rule C-Eur 1945 only - Sep 16  2:00 0 -\n#\n# It seems that Paris, Monaco, Rule France, Rule Belgium all agree on\n# 2:00 standard time, e.g. 3:00 local time.  However there are no\n# countries that use C-Eur rules in September 1945, so the only items\n# affected are apparently these fictitious zones that translate acronyms\n# CET and MET:\n#\n# Zone CET  1:00 C-Eur CE%sT\n# Zone MET  1:00 C-Eur ME%sT\n#\n# It this is right then the corrected version would look like:\n#\n# Rule C-Eur 1945 only - Sep 16  2:00s 0 -\n#\n# A small step for mankind though 8-)\nRule\tC-Eur\t1945\tonly\t-\tSep\t16\t 2:00s\t0\t-\nRule\tC-Eur\t1977\t1980\t-\tApr\tSun>=1\t 2:00s\t1:00\tS\nRule\tC-Eur\t1977\tonly\t-\tSep\tlastSun\t 2:00s\t0\t-\nRule\tC-Eur\t1978\tonly\t-\tOct\t 1\t 2:00s\t0\t-\nRule\tC-Eur\t1979\t1995\t-\tSep\tlastSun\t 2:00s\t0\t-\nRule\tC-Eur\t1981\tmax\t-\tMar\tlastSun\t 2:00s\t1:00\tS\nRule\tC-Eur\t1996\tmax\t-\tOct\tlastSun\t 2:00s\t0\t-\n\n# E-Eur differs from EU only in that E-Eur switches at midnight local time.\nRule\tE-Eur\t1977\t1980\t-\tApr\tSun>=1\t 0:00\t1:00\tS\nRule\tE-Eur\t1977\tonly\t-\tSep\tlastSun\t 0:00\t0\t-\nRule\tE-Eur\t1978\tonly\t-\tOct\t 1\t 0:00\t0\t-\nRule\tE-Eur\t1979\t1995\t-\tSep\tlastSun\t 0:00\t0\t-\nRule\tE-Eur\t1981\tmax\t-\tMar\tlastSun\t 0:00\t1:00\tS\nRule\tE-Eur\t1996\tmax\t-\tOct\tlastSun\t 0:00\t0\t-\n\n\n# Daylight saving time for Russia and the Soviet Union\n#\n# The 1917-1921 decree URLs are from Alexander Belopolsky (2016-08-23).\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tRussia\t1917\tonly\t-\tJul\t 1\t23:00\t1:00\tMST  # Moscow Summer Time\n#\n# Decree No. 142 (1917-12-22) http://istmat.info/node/28137\nRule\tRussia\t1917\tonly\t-\tDec\t28\t 0:00\t0\tMMT  # Moscow Mean Time\n#\n# Decree No. 497 (1918-05-30) http://istmat.info/node/30001\nRule\tRussia\t1918\tonly\t-\tMay\t31\t22:00\t2:00\tMDST # Moscow Double Summer Time\nRule\tRussia\t1918\tonly\t-\tSep\t16\t 1:00\t1:00\tMST\n#\n# Decree No. 258 (1919-05-29) http://istmat.info/node/37949\nRule\tRussia\t1919\tonly\t-\tMay\t31\t23:00\t2:00\tMDST\n#\nRule\tRussia\t1919\tonly\t-\tJul\t 1\t 0:00u\t1:00\tMSD\nRule\tRussia\t1919\tonly\t-\tAug\t16\t 0:00\t0\tMSK\n#\n# Decree No. 63 (1921-02-03) http://istmat.info/node/45840\nRule\tRussia\t1921\tonly\t-\tFeb\t14\t23:00\t1:00\tMSD\n#\n# Decree No. 121 (1921-03-07) http://istmat.info/node/45949\nRule\tRussia\t1921\tonly\t-\tMar\t20\t23:00\t2:00\t+05\n#\nRule\tRussia\t1921\tonly\t-\tSep\t 1\t 0:00\t1:00\tMSD\nRule\tRussia\t1921\tonly\t-\tOct\t 1\t 0:00\t0\t-\n# Act No. 925 of the Council of Ministers of the USSR (1980-10-24):\nRule\tRussia\t1981\t1984\t-\tApr\t 1\t 0:00\t1:00\tS\nRule\tRussia\t1981\t1983\t-\tOct\t 1\t 0:00\t0\t-\n# Act No. 967 of the Council of Ministers of the USSR (1984-09-13), repeated in\n# Act No. 227 of the Council of Ministers of the USSR (1989-03-14):\nRule\tRussia\t1984\t1995\t-\tSep\tlastSun\t 2:00s\t0\t-\nRule\tRussia\t1985\t2010\t-\tMar\tlastSun\t 2:00s\t1:00\tS\n#\nRule\tRussia\t1996\t2010\t-\tOct\tlastSun\t 2:00s\t0\t-\n# As described below, Russia's 2014 change affects Zone data, not Rule data.\n\n# From Stepan Golosunov (2016-03-07):\n# Wikipedia and other sources refer to the Act of the Council of\n# Ministers of the USSR from 1988-01-04 No. 5 and the Act of the\n# Council of Ministers of the USSR from 1989-03-14 No. 227.\n#\n# I did not find full texts of these acts.  For the 1989 one we have\n# title at https://base.garant.ru/70754136/ :\n# \"About change in calculation of time on the territories of\n# Lithuanian SSR, Latvian SSR and Estonian SSR, Astrakhan,\n# Kaliningrad, Kirov, Kuybyshev, Ulyanovsk and Uralsk oblasts\".\n# And http://astrozet.net/files/Zones/DOC/RU/1980-925.txt appears to\n# contain quotes from both acts: Since last Sunday of March 1988 rules\n# of the second time belt are installed in Volgograd and Saratov\n# oblasts.  Since last Sunday of March 1989:\n# a) Lithuanian SSR, Latvian SSR, Estonian SSR, Kaliningrad oblast:\n# second time belt rules without extra hour (Moscow-1);\n# b) Astrakhan, Kirov, Kuybyshev, Ulyanovsk oblasts: second time belt\n# rules (Moscow time)\n# c) Uralsk oblast: third time belt rules (Moscow+1).\n\n# From Stepan Golosunov (2016-03-27):\n# Unamended version of the act of the\n# Government of the Russian Federation No. 23 from 08.01.1992\n# http://pravo.gov.ru/proxy/ips/?docbody=&nd=102014034&rdk=0\n# says that every year clocks were to be moved forward on last Sunday\n# of March at 2 hours and moved backwards on last Sunday of September\n# at 3 hours.  It was amended in 1996 to replace September with October.\n\n# From Alexander Krivenyshev (2011-06-14):\n# According to Kremlin press service, Russian President Dmitry Medvedev\n# signed a federal law \"On calculation of time\" on June 9, 2011.\n# According to the law Russia is abolishing daylight saving time.\n#\n# Medvedev signed a law \"On the Calculation of Time\" (in russian):\n# http://bmockbe.ru/events/?ID=7583\n#\n# Medvedev signed a law on the calculation of the time (in russian):\n# https://www.regnum.ru/news/polit/1413906.html\n\n# From Arthur David Olson (2011-06-15):\n# Take \"abolishing daylight saving time\" to mean that time is now considered\n# to be standard.\n\n# Previous editions of this database used abbreviations like MET DST\n# for Central European Summer Time, but this didn't agree with common usage.\n\n# From Markus Kuhn (1996-07-12):\n# The official German names ... are\n#\n#\tMitteleuropäische Zeit (MEZ)         = UTC+01:00\n#\tMitteleuropäische Sommerzeit (MESZ)  = UTC+02:00\n#\n# as defined in the German Time Act (Gesetz über die Zeitbestimmung (ZeitG),\n# 1978-07-25, Bundesgesetzblatt, Jahrgang 1978, Teil I, S. 1110-1111)....\n# I wrote ... to the German Federal Physical-Technical Institution\n#\n#\tPhysikalisch-Technische Bundesanstalt (PTB)\n#\tLaboratorium 4.41 \"Zeiteinheit\"\n#\tPostfach 3345\n#\tD-38023 Braunschweig\n#\tphone: +49 531 592-0\n#\n# ... I received today an answer letter from Dr. Peter Hetzel, head of the PTB\n# department for time and frequency transmission.  He explained that the\n# PTB translates MEZ and MESZ into English as\n#\n#\tCentral European Time (CET)         = UTC+01:00\n#\tCentral European Summer Time (CEST) = UTC+02:00\n\n\n# Albania\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tAlbania\t1940\tonly\t-\tJun\t16\t0:00\t1:00\tS\nRule\tAlbania\t1942\tonly\t-\tNov\t 2\t3:00\t0\t-\nRule\tAlbania\t1943\tonly\t-\tMar\t29\t2:00\t1:00\tS\nRule\tAlbania\t1943\tonly\t-\tApr\t10\t3:00\t0\t-\nRule\tAlbania\t1974\tonly\t-\tMay\t 4\t0:00\t1:00\tS\nRule\tAlbania\t1974\tonly\t-\tOct\t 2\t0:00\t0\t-\nRule\tAlbania\t1975\tonly\t-\tMay\t 1\t0:00\t1:00\tS\nRule\tAlbania\t1975\tonly\t-\tOct\t 2\t0:00\t0\t-\nRule\tAlbania\t1976\tonly\t-\tMay\t 2\t0:00\t1:00\tS\nRule\tAlbania\t1976\tonly\t-\tOct\t 3\t0:00\t0\t-\nRule\tAlbania\t1977\tonly\t-\tMay\t 8\t0:00\t1:00\tS\nRule\tAlbania\t1977\tonly\t-\tOct\t 2\t0:00\t0\t-\nRule\tAlbania\t1978\tonly\t-\tMay\t 6\t0:00\t1:00\tS\nRule\tAlbania\t1978\tonly\t-\tOct\t 1\t0:00\t0\t-\nRule\tAlbania\t1979\tonly\t-\tMay\t 5\t0:00\t1:00\tS\nRule\tAlbania\t1979\tonly\t-\tSep\t30\t0:00\t0\t-\nRule\tAlbania\t1980\tonly\t-\tMay\t 3\t0:00\t1:00\tS\nRule\tAlbania\t1980\tonly\t-\tOct\t 4\t0:00\t0\t-\nRule\tAlbania\t1981\tonly\t-\tApr\t26\t0:00\t1:00\tS\nRule\tAlbania\t1981\tonly\t-\tSep\t27\t0:00\t0\t-\nRule\tAlbania\t1982\tonly\t-\tMay\t 2\t0:00\t1:00\tS\nRule\tAlbania\t1982\tonly\t-\tOct\t 3\t0:00\t0\t-\nRule\tAlbania\t1983\tonly\t-\tApr\t18\t0:00\t1:00\tS\nRule\tAlbania\t1983\tonly\t-\tOct\t 1\t0:00\t0\t-\nRule\tAlbania\t1984\tonly\t-\tApr\t 1\t0:00\t1:00\tS\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tEurope/Tirane\t1:19:20 -\tLMT\t1914\n\t\t\t1:00\t-\tCET\t1940 Jun 16\n\t\t\t1:00\tAlbania\tCE%sT\t1984 Jul\n\t\t\t1:00\tEU\tCE%sT\n\n# Andorra\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tEurope/Andorra\t0:06:04 -\tLMT\t1901\n\t\t\t0:00\t-\tWET\t1946 Sep 30\n\t\t\t1:00\t-\tCET\t1985 Mar 31  2:00\n\t\t\t1:00\tEU\tCE%sT\n\n# Austria\n\n# Milne says Vienna time was 1:05:21.\n\n# From Paul Eggert (2006-03-22): Shanks & Pottenger give 1918-06-16 and\n# 1945-11-18, but the Austrian Federal Office of Metrology and\n# Surveying (BEV) gives 1918-09-16 and for Vienna gives the \"alleged\"\n# date of 1945-04-12 with no time.  For the 1980-04-06 transition\n# Shanks & Pottenger give 02:00, the BEV 00:00.  Go with the BEV,\n# and guess 02:00 for 1945-04-12.\n\n# From Alois Treindl (2019-07-22):\n# In 1946 the end of DST was on Monday, 7 October 1946, at 3:00 am.\n# Shanks had this right.  Source: Die Weltpresse, 5. Oktober 1946, page 5.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tAustria\t1920\tonly\t-\tApr\t 5\t2:00s\t1:00\tS\nRule\tAustria\t1920\tonly\t-\tSep\t13\t2:00s\t0\t-\nRule\tAustria\t1946\tonly\t-\tApr\t14\t2:00s\t1:00\tS\nRule\tAustria\t1946\tonly\t-\tOct\t 7\t2:00s\t0\t-\nRule\tAustria\t1947\t1948\t-\tOct\tSun>=1\t2:00s\t0\t-\nRule\tAustria\t1947\tonly\t-\tApr\t 6\t2:00s\t1:00\tS\nRule\tAustria\t1948\tonly\t-\tApr\t18\t2:00s\t1:00\tS\nRule\tAustria\t1980\tonly\t-\tApr\t 6\t0:00\t1:00\tS\nRule\tAustria\t1980\tonly\t-\tSep\t28\t0:00\t0\t-\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tEurope/Vienna\t1:05:21 -\tLMT\t1893 Apr\n\t\t\t1:00\tC-Eur\tCE%sT\t1920\n\t\t\t1:00\tAustria\tCE%sT\t1940 Apr  1  2:00s\n\t\t\t1:00\tC-Eur\tCE%sT\t1945 Apr  2  2:00s\n\t\t\t1:00\t1:00\tCEST\t1945 Apr 12  2:00s\n\t\t\t1:00\t-\tCET\t1946\n\t\t\t1:00\tAustria\tCE%sT\t1981\n\t\t\t1:00\tEU\tCE%sT\n\n# Belarus\n#\n# From Stepan Golosunov (2016-07-02):\n# http://www.lawbelarus.com/repub/sub30/texf9611.htm\n# (Act of the Cabinet of Ministers of the Republic of Belarus from\n# 1992-03-25 No. 157) ... says clocks were to be moved forward at 2:00\n# on last Sunday of March and backward at 3:00 on last Sunday of September\n# (the same as previous USSR and contemporary Russian regulations).\n#\n# From Yauhen Kharuzhy (2011-09-16):\n# By latest Belarus government act Europe/Minsk timezone was changed to\n# GMT+3 without DST (was GMT+2 with DST).\n#\n# Sources (Russian language):\n# http://www.belta.by/ru/all_news/society/V-Belarusi-otmenjaetsja-perexod-na-sezonnoe-vremja_i_572952.html\n# http://naviny.by/rubrics/society/2011/09/16/ic_articles_116_175144/\n# https://news.tut.by/society/250578.html\n#\n# From Alexander Bokovoy (2014-10-09):\n# Belarussian government decided against changing to winter time....\n# http://eng.belta.by/all_news/society/Belarus-decides-against-adjusting-time-in-Russias-wake_i_76335.html\n#\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tEurope/Minsk\t1:50:16 -\tLMT\t1880\n\t\t\t1:50\t-\tMMT\t1924 May  2 # Minsk Mean Time\n\t\t\t2:00\t-\tEET\t1930 Jun 21\n\t\t\t3:00\t-\tMSK\t1941 Jun 28\n\t\t\t1:00\tC-Eur\tCE%sT\t1944 Jul  3\n\t\t\t3:00\tRussia\tMSK/MSD\t1990\n\t\t\t3:00\t-\tMSK\t1991 Mar 31  2:00s\n\t\t\t2:00\tRussia\tEE%sT\t2011 Mar 27  2:00s\n\t\t\t3:00\t-\t%z\n\n# Belgium\n# Luxembourg\n# Netherlands\n#\n# From Michael Deckers (2019-08-25):\n# The exposition in the web page\n# https://www.bestor.be/wiki/index.php/Voyager_dans_le_temps._L%E2%80%99introduction_de_la_norme_de_Greenwich_en_Belgique\n# gives several contemporary sources from which one can conclude that\n# the switch in Europe/Brussels on 1892-05-01 was from 00:17:30 to 00:00:00.\n#\n# From Paul Eggert (2019-08-28):\n# This quote helps explain the late-1914 situation:\n#   In early November 1914, the Germans imposed the time zone used in central\n#   Europe and forced the inhabitants to set their watches and public clocks\n#   sixty minutes ahead.  Many were reluctant to accept \"German time\" and\n#   continued to use \"Belgian time\" among themselves.  Reflecting the spirit of\n#   resistance that arose in the population, a song made fun of this change....\n# The song ended:\n#   Putting your clock forward\n#   Will but hasten the happy hour\n#   When we kick out the Boches!\n# See: Pluvinage G. Brussels on German time. Cahiers Bruxellois -\n# Brusselse Cahiers. 2014;XLVI(1E):15-38.\n# https://www.cairn.info/revue-cahiers-bruxellois-2014-1E-page-15.htm\n#\n# Entries from 1914 through 1917 are taken from \"De tijd in België\"\n# <https://www.astro.oma.be/GENERAL/INFO/nli001a.html>.\n# Entries from 1918 through 1991 are taken from:\n#\tAnnuaire de L'Observatoire Royal de Belgique,\n#\tAvenue Circulaire, 3, B-1180 BRUXELLES, CLVIIe année, 1991\n#\t(Imprimerie HAYEZ, s.p.r.l., Rue Fin, 4, 1080 BRUXELLES, MCMXC),\n#\tpp 8-9.\n# Thanks to Pascal Delmoitie for the 1918/1991 references.\n# The 1918 rules are listed for completeness; they apply to unoccupied Belgium.\n# Assume Brussels switched to WET in 1918 when the armistice took effect.\n#\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tBelgium\t1918\tonly\t-\tMar\t 9\t 0:00s\t1:00\tS\nRule\tBelgium\t1918\t1919\t-\tOct\tSat>=1\t23:00s\t0\t-\nRule\tBelgium\t1919\tonly\t-\tMar\t 1\t23:00s\t1:00\tS\nRule\tBelgium\t1920\tonly\t-\tFeb\t14\t23:00s\t1:00\tS\nRule\tBelgium\t1920\tonly\t-\tOct\t23\t23:00s\t0\t-\nRule\tBelgium\t1921\tonly\t-\tMar\t14\t23:00s\t1:00\tS\nRule\tBelgium\t1921\tonly\t-\tOct\t25\t23:00s\t0\t-\nRule\tBelgium\t1922\tonly\t-\tMar\t25\t23:00s\t1:00\tS\nRule\tBelgium\t1922\t1927\t-\tOct\tSat>=1\t23:00s\t0\t-\nRule\tBelgium\t1923\tonly\t-\tApr\t21\t23:00s\t1:00\tS\nRule\tBelgium\t1924\tonly\t-\tMar\t29\t23:00s\t1:00\tS\nRule\tBelgium\t1925\tonly\t-\tApr\t 4\t23:00s\t1:00\tS\n# DSH writes that a royal decree of 1926-02-22 specified the Sun following 3rd\n# Sat in Apr (except if it's Easter, in which case it's one Sunday earlier),\n# to Sun following 1st Sat in Oct, and that a royal decree of 1928-09-15\n# changed the transition times to 02:00 GMT.\nRule\tBelgium\t1926\tonly\t-\tApr\t17\t23:00s\t1:00\tS\nRule\tBelgium\t1927\tonly\t-\tApr\t 9\t23:00s\t1:00\tS\nRule\tBelgium\t1928\tonly\t-\tApr\t14\t23:00s\t1:00\tS\nRule\tBelgium\t1928\t1938\t-\tOct\tSun>=2\t 2:00s\t0\t-\nRule\tBelgium\t1929\tonly\t-\tApr\t21\t 2:00s\t1:00\tS\nRule\tBelgium\t1930\tonly\t-\tApr\t13\t 2:00s\t1:00\tS\nRule\tBelgium\t1931\tonly\t-\tApr\t19\t 2:00s\t1:00\tS\nRule\tBelgium\t1932\tonly\t-\tApr\t 3\t 2:00s\t1:00\tS\nRule\tBelgium\t1933\tonly\t-\tMar\t26\t 2:00s\t1:00\tS\nRule\tBelgium\t1934\tonly\t-\tApr\t 8\t 2:00s\t1:00\tS\nRule\tBelgium\t1935\tonly\t-\tMar\t31\t 2:00s\t1:00\tS\nRule\tBelgium\t1936\tonly\t-\tApr\t19\t 2:00s\t1:00\tS\nRule\tBelgium\t1937\tonly\t-\tApr\t 4\t 2:00s\t1:00\tS\nRule\tBelgium\t1938\tonly\t-\tMar\t27\t 2:00s\t1:00\tS\nRule\tBelgium\t1939\tonly\t-\tApr\t16\t 2:00s\t1:00\tS\nRule\tBelgium\t1939\tonly\t-\tNov\t19\t 2:00s\t0\t-\nRule\tBelgium\t1940\tonly\t-\tFeb\t25\t 2:00s\t1:00\tS\nRule\tBelgium\t1944\tonly\t-\tSep\t17\t 2:00s\t0\t-\nRule\tBelgium\t1945\tonly\t-\tApr\t 2\t 2:00s\t1:00\tS\nRule\tBelgium\t1945\tonly\t-\tSep\t16\t 2:00s\t0\t-\nRule\tBelgium\t1946\tonly\t-\tMay\t19\t 2:00s\t1:00\tS\nRule\tBelgium\t1946\tonly\t-\tOct\t 7\t 2:00s\t0\t-\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tEurope/Brussels\t0:17:30 -\tLMT\t1880\n\t\t\t0:17:30\t-\tBMT\t1892 May  1 00:17:30\n\t\t\t0:00\t-\tWET\t1914 Nov  8\n\t\t\t1:00\t-\tCET\t1916 May  1  0:00\n\t\t\t1:00\tC-Eur\tCE%sT\t1918 Nov 11 11:00u\n\t\t\t0:00\tBelgium\tWE%sT\t1940 May 20  2:00s\n\t\t\t1:00\tC-Eur\tCE%sT\t1944 Sep  3\n\t\t\t1:00\tBelgium\tCE%sT\t1977\n\t\t\t1:00\tEU\tCE%sT\n\n# Bulgaria\n#\n# From Plamen Simenov via Steffen Thorsen (1999-09-09):\n# A document of Government of Bulgaria (No. 94/1997) says:\n# EET -> EETDST is in 03:00 Local time in last Sunday of March ...\n# EETDST -> EET is in 04:00 Local time in last Sunday of October\n#\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tBulg\t1979\tonly\t-\tMar\t31\t23:00\t1:00\tS\nRule\tBulg\t1979\tonly\t-\tOct\t 1\t 1:00\t0\t-\nRule\tBulg\t1980\t1982\t-\tApr\tSat>=1\t23:00\t1:00\tS\nRule\tBulg\t1980\tonly\t-\tSep\t29\t 1:00\t0\t-\nRule\tBulg\t1981\tonly\t-\tSep\t27\t 2:00\t0\t-\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tEurope/Sofia\t1:33:16 -\tLMT\t1880\n\t\t\t1:56:56\t-\tIMT\t1894 Nov 30 # Istanbul MT?\n\t\t\t2:00\t-\tEET\t1942 Nov  2  3:00\n\t\t\t1:00\tC-Eur\tCE%sT\t1945\n\t\t\t1:00\t-\tCET\t1945 Apr  2  3:00\n\t\t\t2:00\t-\tEET\t1979 Mar 31 23:00\n\t\t\t2:00\tBulg\tEE%sT\t1982 Sep 26  3:00\n\t\t\t2:00\tC-Eur\tEE%sT\t1991\n\t\t\t2:00\tE-Eur\tEE%sT\t1997\n\t\t\t2:00\tEU\tEE%sT\n\n# Cyprus\n# Please see the 'asia' file for Asia/Nicosia.\n\n# Czech Republic (Czechia)\n# Slovakia\n#\n# From Ivan Benovic (2024-01-30):\n# https://www.slov-lex.sk/pravne-predpisy/SK/ZZ/1946/54/\n# (This is an official link to the Czechoslovak Summer Time Act of\n# March 8, 1946 that authorizes the Czechoslovak government to set the\n# exact dates of change to summer time and back to Central European Time.\n# The act also implicitly confirms Central European Time as the\n# official time zone of Czechoslovakia and currently remains in force\n# in both the Czech Republic and Slovakia.)\n# https://www.psp.cz/eknih/1945pns/tisky/t0216_00.htm\n# (This is a link to the original legislative proposal dating back to\n# February 22, 1946. The accompanying memorandum to the proposal says\n# that an advisory committee on European railroad transportation that\n# met in Brussels in October 1945 decided that the change of time\n# should be carried out in all participating countries in a strictly\n# coordinated manner....)\n#\n# From Paul Eggert (2024-01-30):\n# The source for Czech data is: Kdy začíná a končí letní čas.\n# https://kalendar.beda.cz/kdy-zacina-a-konci-letni-cas\n# Its main text disagrees with its quoted sources only in 1918,\n# where the main text says spring and autumn transitions\n# occurred at 02:00 and 03:00 respectively (as usual),\n# whereas the 1918 source \"Oznámení o zavedení letního času v roce 1918\"\n# says transitions were at 01:00 and 02:00 respectively.\n# As the 1918 source appears to be a humorous piece, and it is\n# unlikely that Prague would have disagreed with its neighbors by an hour,\n# go with the main text for now.\n#\n# We know of no English-language name for historical Czech winter time;\n# abbreviate it as \"GMT\", as it happened to be GMT.\n#\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tCzech\t1945\tonly\t-\tApr\tMon>=1\t2:00s\t1:00\tS\nRule\tCzech\t1945\tonly\t-\tOct\t 1\t2:00s\t0\t-\nRule\tCzech\t1946\tonly\t-\tMay\t 6\t2:00s\t1:00\tS\nRule\tCzech\t1946\t1949\t-\tOct\tSun>=1\t2:00s\t0\t-\nRule\tCzech\t1947\t1948\t-\tApr\tSun>=15\t2:00s\t1:00\tS\nRule\tCzech\t1949\tonly\t-\tApr\t 9\t2:00s\t1:00\tS\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tEurope/Prague\t0:57:44 -\tLMT\t1850\n\t\t\t0:57:44\t-\tPMT\t1891 Oct    # Prague Mean Time\n\t\t\t1:00\tC-Eur\tCE%sT\t1945 May  9\n\t\t\t1:00\tCzech\tCE%sT\t1946 Dec  1  3:00\n# Vanguard section, for zic and other parsers that support negative DST.\n\t\t\t1:00\t-1:00\tGMT\t1947 Feb 23  2:00\n# Rearguard section, for parsers lacking negative DST; see ziguard.awk.\n#\t\t\t0:00\t-\tGMT\t1947 Feb 23  2:00\n# End of rearguard section.\n\t\t\t1:00\tCzech\tCE%sT\t1979\n\t\t\t1:00\tEU\tCE%sT\n\n# Faroe Is\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone Atlantic/Faroe\t-0:27:04 -\tLMT\t1908 Jan 11 # Tórshavn\n\t\t\t 0:00\t-\tWET\t1981\n\t\t\t 0:00\tEU\tWE%sT\n\n# Greenland\n#\n# From Paul Eggert (2004-10-31):\n# During World War II, Germany maintained secret manned weather stations in\n# East Greenland and Franz Josef Land, but we don't know their time zones.\n# My source for this is Wilhelm Dege's book mentioned under Svalbard.\n#\n# From Paul Eggert (2017-12-10):\n# Greenland joined the European Communities as part of Denmark,\n# obtained home rule on 1979-05-01, and left the European Communities\n# on 1985-02-01.  It therefore should have been using EU\n# rules at least through 1984.  Shanks & Pottenger say Scoresbysund and Godthåb\n# used C-Eur rules after 1980, but IATA SSIM (1991/1996) says they use EU\n# rules since at least 1991.  Assume EU rules since 1980.\n\n# From Gwillim Law (2001-06-06), citing\n# <http://www.statkart.no/efs/efshefter/2001/efs5-2001.pdf> (2001-03-15),\n# and with translations corrected by Steffen Thorsen:\n#\n# Greenland has four local times, and the relation to UTC\n# is according to the following time line:\n#\n# The military zone near Thule\tUTC-4\n# Standard Greenland time\tUTC-3\n# Scoresbysund\t\t\tUTC-1\n# Danmarkshavn\t\t\tUTC\n#\n# In the military area near Thule and in Danmarkshavn DST will not be\n# introduced.\n\n# From Rives McDow (2001-11-01):\n#\n# I correspond regularly with the Dansk Polarcenter, and wrote them at\n# the time to clarify the situation in Thule.  Unfortunately, I have\n# not heard back from them regarding my recent letter.  [But I have\n# info from earlier correspondence.]\n#\n# According to the center, a very small local time zone around Thule\n# Air Base keeps the time according to UTC-4, implementing daylight\n# savings using North America rules, changing the time at 02:00 local time....\n#\n# The east coast of Greenland north of the community of Scoresbysund\n# uses UTC in the same way as in Iceland, year round, with no dst.\n# There are just a few stations on this coast, including the\n# Danmarkshavn ICAO weather station mentioned in your September 29th\n# email.  The other stations are two sledge patrol stations in\n# Mestersvig and Daneborg, the air force base at Station Nord, and the\n# DPC research station at Zackenberg.\n#\n# Scoresbysund and two small villages nearby keep time UTC-1 and use\n# the same daylight savings time period as in West Greenland (Godthåb).\n#\n# The rest of Greenland, including Godthåb (this area, although it\n# includes central Greenland, is known as west Greenland), keeps time\n# UTC-3, with daylight savings methods according to European rules.\n#\n# It is common procedure to use UTC 0 in the wilderness of East and\n# North Greenland, because it is mainly Icelandic aircraft operators\n# maintaining traffic in these areas.  However, the official status of\n# this area is that it sticks with Godthåb time.  This area might be\n# considered a dual time zone in some respects because of this.\n\n# From Rives McDow (2001-11-19):\n# I heard back from someone stationed at Thule; the time change took place\n# there at 2:00 AM.\n\n# From Paul Eggert (2006-03-22):\n# From 1997 on the CIA map shows Danmarkshavn on GMT;\n# the 1995 map as like Godthåb.\n# For lack of better info, assume they were like Godthåb before 1996.\n# startkart.no says Thule does not observe DST, but this is clearly an error,\n# so go with Shanks & Pottenger for Thule transitions until this year.\n# For 2007 on assume Thule will stay in sync with US DST rules.\n\n# From J William Piggott (2016-02-20):\n# \"Greenland north of the community of Scoresbysund\" is officially named\n# \"National Park\" by Executive Order:\n# http://naalakkersuisut.gl/~/media/Nanoq/Files/Attached%20Files/Engelske-tekster/Legislation/Executive%20Order%20National%20Park.rtf\n# It is their only National Park.\n\n# From Jonas Nyrup (2022-11-24):\n# On last Saturday in October 2023 when DST ends America/Nuuk will switch\n# from -03/-02 to -02/-01\n# https://sermitsiaq.ag/forslagtidsforskel-danmark-mindskes-sommertid-beholdes\n# ...\n# https://sermitsiaq.ag/groenland-skifte-tidszone-trods-bekymringer\n#\n# From Jürgen Appel (2022-11-25):\n# https://ina.gl/samlinger/oversigt-over-samlinger/samling/dagsordener/dagsorden.aspx?lang=da&day=24-11-2022\n#\n# From Thomas M. Steenholdt (2022-12-02):\n# - The bill to move America/Nuuk from UTC-03 to UTC-02 passed.\n# - The bill to stop observing DST did not (Greenland will stop observing DST\n#   when EU does).\n# Details on the implementation are here (section 6):\n# https://ina.gl/dvd/EM%202022/pdf/media/2553529/pkt17_em2022_tidens_bestemmelse_bem_da.pdf\n# This is how the change will be implemented:\n# 1. The shift *to* DST in 2023 happens as normal.\n# 2. The shift *from* DST in 2023 happens as normal, but coincides with the\n#    shift to UTC-02 normaltime (people will not change their clocks here).\n# 3. After this, DST is still observed, but as -02/-01 instead of -03/-02.\n#\n# From Múte Bourup Egede via Jógvan Svabo Samuelsen (2023-03-15):\n# Greenland will not switch to Daylight Saving Time this year, 2023,\n# because the standard time for Greenland will change from UTC -3 to UTC -2.\n# However, Greenland will change to Daylight Saving Time again in 2024\n# and onwards.\n\n# From Jule Dabars (2023-10-29):\n# https://www.dr.dk/nyheder/seneste/i-nat-skal-uret-stilles-en-time-tilbage-men-foerste-gang-sker-det-ikke-i-groenland\n# with a link to that page:\n# https://naalakkersuisut.gl/Nyheder/2023/10/2710_sommertid\n# ... Ittoqqortoormiit joins the time of Nuuk at March 2024.\n# What would mean that America/Scoresbysund would either be in -01 year round\n# or in -02/-01 like America/Nuuk, but no longer in -01/+00.\n#\n# From Paul Eggert (2023-10-29):\n# For now, assume it will be like America/Nuuk.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tThule\t1991\t1992\t-\tMar\tlastSun\t2:00\t1:00\tD\nRule\tThule\t1991\t1992\t-\tSep\tlastSun\t2:00\t0\tS\nRule\tThule\t1993\t2006\t-\tApr\tSun>=1\t2:00\t1:00\tD\nRule\tThule\t1993\t2006\t-\tOct\tlastSun\t2:00\t0\tS\nRule\tThule\t2007\tmax\t-\tMar\tSun>=8\t2:00\t1:00\tD\nRule\tThule\t2007\tmax\t-\tNov\tSun>=1\t2:00\t0\tS\n#\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Danmarkshavn -1:14:40 -\tLMT\t1916 Jul 28\n\t\t\t-3:00\t-\t%z\t1980 Apr  6  2:00\n\t\t\t-3:00\tEU\t%z\t1996\n\t\t\t0:00\t-\tGMT\n#\n# Use the old name Scoresbysund, as the current name Ittoqqortoormiit\n# exceeds tzdb's 14-letter limit and has no common English abbreviation.\nZone America/Scoresbysund -1:27:52 -\tLMT\t1916 Jul 28 # Ittoqqortoormiit\n\t\t\t-2:00\t-\t%z\t1980 Apr  6  2:00\n\t\t\t-2:00\tC-Eur\t%z\t1981 Mar 29\n\t\t\t-1:00\tEU\t%z\t2024 Mar 31\n\t\t\t-2:00\tEU\t%z\nZone America/Nuuk\t-3:26:56 -\tLMT\t1916 Jul 28 # Godthåb\n\t\t\t-3:00\t-\t%z\t1980 Apr  6  2:00\n\t\t\t-3:00\tEU\t%z\t2023 Mar 26  1:00u\n\t\t\t-2:00\t-\t%z\t2023 Oct 29  1:00u\n\t\t\t-2:00\tEU\t%z\nZone America/Thule\t-4:35:08 -\tLMT\t1916 Jul 28 # Pituffik\n\t\t\t-4:00\tThule\tA%sT\n\n# Estonia\n#\n# From Paul Eggert (2016-03-18):\n# The 1989 transition is from USSR act No. 227 (1989-03-14).\n#\n# From Peter Ilieve (1994-10-15):\n# A relative in Tallinn confirms the accuracy of the data for 1989 onwards\n# [through 1994] and gives the legal authority for it,\n# a regulation of the Government of Estonia, No. 111 of 1989....\n#\n# From Peter Ilieve (1996-10-28):\n# [IATA SSIM (1992/1996) claims that the Baltic republics switch at 01:00s,\n# but a relative confirms that Estonia still switches at 02:00s, writing:]\n# \"I do not [know] exactly but there are some little different\n# (confusing) rules for International Air and Railway Transport Schedules\n# conversion in Sunday connected with end of summer time in Estonia....\n# A discussion is running about the summer time efficiency and effect on\n# human physiology.  It seems that Estonia maybe will not change to\n# summer time next spring.\"\n\n# From Peter Ilieve (1998-11-04), heavily edited:\n# The 1998-09-22 Estonian time law\n# http://trip.rk.ee/cgi-bin/thw?${BASE}=akt&${OOHTML}=rtd&TA=1998&TO=1&AN=1390\n# refers to the Eighth Directive and cites the association agreement between\n# the EU and Estonia, ratified by the Estonian law (RT II 1995, 22-27, 120).\n#\n# I also asked [my relative] whether they use any standard abbreviation\n# for their standard and summer times. He says no, they use \"suveaeg\"\n# (summer time) and \"talveaeg\" (winter time).\n\n# From The Baltic Times <https://www.baltictimes.com/> (1999-09-09)\n# via Steffen Thorsen:\n# This year will mark the last time Estonia shifts to summer time,\n# a council of the ruling coalition announced Sept. 6....\n# But what this could mean for Estonia's chances of joining the European\n# Union are still unclear.  In 1994, the EU declared summer time compulsory\n# for all member states until 2001.  Brussels has yet to decide what to do\n# after that.\n\n# From Mart Oruaas (2000-01-29):\n# Regulation No. 301 (1999-10-12) obsoletes previous regulation\n# No. 206 (1998-09-22) and thus sticks Estonia to +02:00 GMT for all\n# the year round.  The regulation is effective 1999-11-01.\n\n# From Toomas Soome (2002-02-21):\n# The Estonian government has changed once again timezone politics.\n# Now we are using again EU rules.\n#\n# From Urmet Jänes (2002-03-28):\n# The legislative reference is Government decree No. 84 on 2002-02-21.\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tEurope/Tallinn\t1:39:00\t-\tLMT\t1880\n\t\t\t1:39:00\t-\tTMT\t1918 Feb    # Tallinn Mean Time\n\t\t\t1:00\tC-Eur\tCE%sT\t1919 Jul\n\t\t\t1:39:00\t-\tTMT\t1921 May\n\t\t\t2:00\t-\tEET\t1940 Aug  6\n\t\t\t3:00\t-\tMSK\t1941 Sep 15\n\t\t\t1:00\tC-Eur\tCE%sT\t1944 Sep 22\n\t\t\t3:00\tRussia\tMSK/MSD\t1989 Mar 26  2:00s\n\t\t\t2:00\t1:00\tEEST\t1989 Sep 24  2:00s\n\t\t\t2:00\tC-Eur\tEE%sT\t1998 Sep 22\n\t\t\t2:00\tEU\tEE%sT\t1999 Oct 31  4:00\n\t\t\t2:00\t-\tEET\t2002 Feb 21\n\t\t\t2:00\tEU\tEE%sT\n\n# Finland\n\n# From Hannu Strang (1994-09-25 06:03:37 UTC):\n# Well, here in Helsinki we're just changing from summer time to regular one,\n# and it's supposed to change at 4am...\n\n# From Janne Snabb (2010-07-15):\n#\n# I noticed that the Finland data is not accurate for years 1981 and 1982.\n# During these two first trial years the DST adjustment was made one hour\n# earlier than in forthcoming years. Starting 1983 the adjustment was made\n# according to the central European standards.\n#\n# This is documented in Heikki Oja: Aikakirja 2007, published by The Almanac\n# Office of University of Helsinki, ISBN 952-10-3221-9, available online (in\n# Finnish) at\n# https://almanakka.helsinki.fi/aikakirja/Aikakirja2007kokonaan.pdf\n#\n# Page 105 (56 in PDF version) has a handy table of all past daylight savings\n# transitions. It is easy enough to interpret without Finnish skills.\n#\n# This is also confirmed by Finnish Broadcasting Company's archive at:\n# http://www.yle.fi/elavaarkisto/?s=s&g=1&ag=5&t=&a=3401\n#\n# The news clip from 1981 says that \"the time between 2 and 3 o'clock does not\n# exist tonight.\"\n\n# From Konstantin Hyppönen (2014-06-13):\n# [Heikki Oja's book Aikakirja 2013]\n# https://almanakka.helsinki.fi/images/aikakirja/Aikakirja2013kokonaan.pdf\n# pages 104-105, including a scan from a newspaper published on Apr 2 1942\n# say that ... [o]n Apr 2 1942, 24 o'clock (which means Apr 3 1942,\n# 00:00), clocks were moved one hour forward. The newspaper\n# mentions \"on the night from Thursday to Friday\"....\n# On Oct 4 1942, clocks were moved at 1:00 one hour backwards.\n#\n# From Paul Eggert (2014-06-14):\n# Go with Oja over Shanks.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tFinland\t1942\tonly\t-\tApr\t2\t24:00\t1:00\tS\nRule\tFinland\t1942\tonly\t-\tOct\t4\t1:00\t0\t-\nRule\tFinland\t1981\t1982\t-\tMar\tlastSun\t2:00\t1:00\tS\nRule\tFinland\t1981\t1982\t-\tSep\tlastSun\t3:00\t0\t-\n\n# Milne says Helsinki (Helsingfors) time was 1:39:49.2 (official document).\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n\t\t#STDOFF\t1:39:49.2\nZone\tEurope/Helsinki\t1:39:49 -\tLMT\t1878 May 31\n\t\t\t1:39:49\t-\tHMT\t1921 May    # Helsinki Mean Time\n\t\t\t2:00\tFinland\tEE%sT\t1983\n\t\t\t2:00\tEU\tEE%sT\n\n# France\n# Monaco\n\n# From Ciro Discepolo (2000-12-20):\n#\n# Henri Le Corre, Régimes horaires pour le monde entier, Éditions\n# Traditionnelles - Paris 2 books, 1993\n#\n# Gabriel, Traité de l'heure dans le monde, Guy Trédaniel,\n# Paris, 1991\n#\n# Françoise Gauquelin, Problèmes de l'heure résolus en astrologie,\n# Guy Trédaniel, Paris 1987\n\n# From Michael Deckers (2020-06-11):\n# the law of 1891 <https://gallica.bnf.fr/ark:/12148/bpt6k64415343.texteImage>\n# was published on 1891-03-15, so it could only take force on 1891-03-16.\n\n# From Michael Deckers (2020-06-10):\n# Le Gaulois, 1911-03-11, page 1/6, online at\n# https://www.retronews.fr/societe/echo-de-presse/2018/01/29/1911-change-lheure-de-paris\n# ... [ Instantly, all pressure driven clock dials halted...  Nine minutes and\n#       twenty-one seconds later the hands resumed their circular motion. ]\n# There are also precise reports about how the change was prepared in train\n# stations: all the publicly visible clocks stopped at midnight railway time\n# (or were covered), only the chief of service had a watch, labeled\n# \"Heure ancienne\", that he kept running until it reached 00:04:21, when\n# he announced \"Heure nouvelle\".  See the \"Le Petit Journal 1911-03-11\".\n# https://gallica.bnf.fr/ark:/12148/bpt6k6192911/f1.item.zoom\n#\n# From Michael Deckers (2020-06-12):\n# That \"all French clocks stopped\" for 00:09:21 is a misreading of French\n# newspapers; this sort of adjustment applies only to certain\n# remote-controlled clocks (\"pendules pneumatiques\", of which there existed\n# perhaps a dozen in Paris, and which simply could not be set back remotely),\n# but not to all the clocks in all French towns and villages.  For instance,\n# the following story in the \"Courrier de Saône-et-Loire\" 1911-03-11, page 2:\n# only works if legal time was stepped back (was not monotone): ...\n#   [One can observe that children who had been born at midnight less 5\n#    minutes and who had died at midnight of the old time, would turn out to\n#    be dead before being born, time having been set back and having\n#    suppressed 9 minutes and 25 seconds of their existence, that is, more\n#    than they could spend.]\n#\n# From Paul Eggert (2020-06-12):\n# French time in railway stations was legally five minutes behind civil time,\n# which explains why railway \"old time\" ran to 00:04:21 instead of to 00:09:21.\n# The law's text (which Michael Deckers noted is at\n# <https://gallica.bnf.fr/ark:/12148/bpt6k2022333z/f2>) says only that\n# at 1911-03-11 00:00 legal time was that of Paris mean time delayed by\n# nine minutes and twenty-one seconds, and does not say how the\n# transition from Paris mean time was to occur.\n#\n# tzdb has no way to represent stopped clocks.  As the railway practice\n# was to keep a watch running on \"old time\" to decide when to restart\n# the other clocks, this could be modeled as a transition for \"old time\" at\n# 00:09:21.  However, since the law was ambiguous and clocks outside railway\n# stations were probably done haphazardly with the popular impression being\n# that the transition was done at 00:00 \"old time\", simply leave the time\n# blank; this causes zic to default to 00:00 \"old time\" which is good enough.\n# Do something similar for the 1891-03-16 transition.  There are similar\n# problems in Algiers, Monaco and Tunis.\n\n#\n# Shank & Pottenger seem to use '24:00' ambiguously; resolve it with Whitman.\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tFrance\t1916\tonly\t-\tJun\t14\t23:00s\t1:00\tS\nRule\tFrance\t1916\t1919\t-\tOct\tSun>=1\t23:00s\t0\t-\nRule\tFrance\t1917\tonly\t-\tMar\t24\t23:00s\t1:00\tS\nRule\tFrance\t1918\tonly\t-\tMar\t 9\t23:00s\t1:00\tS\nRule\tFrance\t1919\tonly\t-\tMar\t 1\t23:00s\t1:00\tS\nRule\tFrance\t1920\tonly\t-\tFeb\t14\t23:00s\t1:00\tS\nRule\tFrance\t1920\tonly\t-\tOct\t23\t23:00s\t0\t-\nRule\tFrance\t1921\tonly\t-\tMar\t14\t23:00s\t1:00\tS\nRule\tFrance\t1921\tonly\t-\tOct\t25\t23:00s\t0\t-\nRule\tFrance\t1922\tonly\t-\tMar\t25\t23:00s\t1:00\tS\n# DSH writes that a law of 1923-05-24 specified 3rd Sat in Apr at 23:00 to 1st\n# Sat in Oct at 24:00; and that in 1930, because of Easter, the transitions\n# were Apr 12 and Oct 5.  Go with Shanks & Pottenger.\nRule\tFrance\t1922\t1938\t-\tOct\tSat>=1\t23:00s\t0\t-\nRule\tFrance\t1923\tonly\t-\tMay\t26\t23:00s\t1:00\tS\nRule\tFrance\t1924\tonly\t-\tMar\t29\t23:00s\t1:00\tS\nRule\tFrance\t1925\tonly\t-\tApr\t 4\t23:00s\t1:00\tS\nRule\tFrance\t1926\tonly\t-\tApr\t17\t23:00s\t1:00\tS\nRule\tFrance\t1927\tonly\t-\tApr\t 9\t23:00s\t1:00\tS\nRule\tFrance\t1928\tonly\t-\tApr\t14\t23:00s\t1:00\tS\nRule\tFrance\t1929\tonly\t-\tApr\t20\t23:00s\t1:00\tS\nRule\tFrance\t1930\tonly\t-\tApr\t12\t23:00s\t1:00\tS\nRule\tFrance\t1931\tonly\t-\tApr\t18\t23:00s\t1:00\tS\nRule\tFrance\t1932\tonly\t-\tApr\t 2\t23:00s\t1:00\tS\nRule\tFrance\t1933\tonly\t-\tMar\t25\t23:00s\t1:00\tS\nRule\tFrance\t1934\tonly\t-\tApr\t 7\t23:00s\t1:00\tS\nRule\tFrance\t1935\tonly\t-\tMar\t30\t23:00s\t1:00\tS\nRule\tFrance\t1936\tonly\t-\tApr\t18\t23:00s\t1:00\tS\nRule\tFrance\t1937\tonly\t-\tApr\t 3\t23:00s\t1:00\tS\nRule\tFrance\t1938\tonly\t-\tMar\t26\t23:00s\t1:00\tS\nRule\tFrance\t1939\tonly\t-\tApr\t15\t23:00s\t1:00\tS\nRule\tFrance\t1939\tonly\t-\tNov\t18\t23:00s\t0\t-\nRule\tFrance\t1940\tonly\t-\tFeb\t25\t 2:00\t1:00\tS\n# The French rules for 1941-1944 were not used in Paris, but Shanks & Pottenger\n# write that they were used in Monaco and in many French locations.\n# Le Corre writes that the upper limit of the free zone was Arnéguy, Orthez,\n# Mont-de-Marsan, Bazas, Langon, Lamothe-Montravel, Marœuil, La\n# Rochefoucauld, Champagne-Mouton, La Roche-Posay, La Haye-Descartes,\n# Loches, Montrichard, Vierzon, Bourges, Moulins, Digoin,\n# Paray-le-Monial, Montceau-les-Mines, Chalon-sur-Saône, Arbois,\n# Dole, Morez, St-Claude, and Collonges (Haute-Savoie).\nRule\tFrance\t1941\tonly\t-\tMay\t 5\t 0:00\t2:00\tM # Midsummer\n# Shanks & Pottenger say this transition occurred at Oct 6 1:00,\n# but go with Denis Excoffier (1997-12-12),\n# who quotes the Ephémérides astronomiques for 1998 from Bureau des Longitudes\n# as saying 5/10/41 22hUT.\nRule\tFrance\t1941\tonly\t-\tOct\t 6\t 0:00\t1:00\tS\nRule\tFrance\t1942\tonly\t-\tMar\t 9\t 0:00\t2:00\tM\nRule\tFrance\t1942\tonly\t-\tNov\t 2\t 3:00\t1:00\tS\nRule\tFrance\t1943\tonly\t-\tMar\t29\t 2:00\t2:00\tM\nRule\tFrance\t1943\tonly\t-\tOct\t 4\t 3:00\t1:00\tS\nRule\tFrance\t1944\tonly\t-\tApr\t 3\t 2:00\t2:00\tM\nRule\tFrance\t1944\tonly\t-\tOct\t 8\t 1:00\t1:00\tS\nRule\tFrance\t1945\tonly\t-\tApr\t 2\t 2:00\t2:00\tM\nRule\tFrance\t1945\tonly\t-\tSep\t16\t 3:00\t0\t-\n# Shanks & Pottenger give Mar 28 2:00 and Sep 26 3:00;\n# go with Excoffier's 28/3/76 0hUT and 25/9/76 23hUT.\nRule\tFrance\t1976\tonly\t-\tMar\t28\t 1:00\t1:00\tS\nRule\tFrance\t1976\tonly\t-\tSep\t26\t 1:00\t0\t-\n# Howse writes that the time in France was officially based\n# on PMT-0:09:21 until 1978-08-09, when the time base finally switched to UTC.\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tEurope/Paris\t0:09:21 -\tLMT\t1891 Mar 16\n\t\t\t0:09:21\t-\tPMT\t1911 Mar 11 # Paris Mean Time\n# Shanks & Pottenger give 1940 Jun 14 0:00; go with Excoffier and Le Corre.\n\t\t\t0:00\tFrance\tWE%sT\t1940 Jun 14 23:00\n# Le Corre says Paris stuck with occupied-France time after the liberation;\n# go with Shanks & Pottenger.\n\t\t\t1:00\tC-Eur\tCE%sT\t1944 Aug 25\n\t\t\t0:00\tFrance\tWE%sT\t1945 Sep 16  3:00\n\t\t\t1:00\tFrance\tCE%sT\t1977\n\t\t\t1:00\tEU\tCE%sT\n\n# Denmark\n# Germany\n# Norway\n# Sweden\n\n# From Markus Kuhn (1998-09-29):\n# The German time zone web site by the Physikalisch-Technische\n# Bundesanstalt contains DST information back to 1916.\n# [See tz-link.html for the URL.]\n\n# From Jörg Schilling (2002-10-23):\n# In 1945, Berlin was switched to Moscow Summer time (GMT+4) by\n# https://www.dhm.de/lemo/html/biografien/BersarinNikolai/\n# General [Nikolai] Bersarin.\n\n# From Paul Eggert (2003-03-08):\n# http://www.parlament-berlin.de/pds-fraktion.nsf/727459127c8b66ee8525662300459099/defc77cb784f180ac1256c2b0030274b/$FILE/bersarint.pdf\n# says that Bersarin issued an order to use Moscow time on May 20.\n# However, Moscow did not observe daylight saving in 1945, so\n# this was equivalent to UT +03, not +04.\n\n# Svalbard & Jan Mayen\n\n# From Steffen Thorsen (2001-05-01):\n# Although I could not find it explicitly, it seems that Jan Mayen and\n# Svalbard have been using the same time as Norway at least since the\n# time they were declared as parts of Norway.  Svalbard was declared\n# as a part of Norway by law of 1925-07-17 no 11, section 4 and Jan\n# Mayen by law of 1930-02-27 no 2, section 2. (From\n# <http://www.lovdata.no/all/nl-19250717-011.html> and\n# <http://www.lovdata.no/all/nl-19300227-002.html>).  The law/regulation\n# for normal/standard time in Norway is from 1894-06-29 no 1 (came\n# into operation on 1895-01-01) and Svalbard/Jan Mayen seem to be a\n# part of this law since 1925/1930. (From\n# <http://www.lovdata.no/all/nl-18940629-001.html>) I have not been\n# able to find if Jan Mayen used a different time zone (e.g. -0100)\n# before 1930. Jan Mayen has only been \"inhabited\" since 1921 by\n# Norwegian meteorologists and maybe used the same time as Norway ever\n# since 1921.  Svalbard (Arctic/Longyearbyen) has been inhabited since\n# before 1895, and therefore probably changed the local time somewhere\n# between 1895 and 1925 (inclusive).\n\n# From Paul Eggert (2013-09-04):\n#\n# Actually, Jan Mayen was never occupied by Germany during World War II,\n# so it must have diverged from Oslo time during the war, as Oslo was\n# keeping Berlin time.\n#\n# <https://www.jan-mayen.no/history.htm> says that the meteorologists\n# burned down their station in 1940 and left the island, but returned in\n# 1941 with a small Norwegian garrison and continued operations despite\n# frequent air attacks from Germans.  In 1943 the Americans established a\n# radiolocating station on the island, called \"Atlantic City\".  Possibly\n# the UT offset changed during the war, but I think it unlikely that\n# Jan Mayen used German daylight-saving rules.\n#\n# Svalbard is more complicated, as it was raided in August 1941 by an\n# Allied party that evacuated the civilian population to England (says\n# <http://www.bartleby.com/65/sv/Svalbard.html>).  The Svalbard FAQ\n# <http://www.svalbard.com/SvalbardFAQ.html> says that the Germans were\n# expelled on 1942-05-14.  However, small parties of Germans did return,\n# and according to Wilhelm Dege's book \"War North of 80\" (1954)\n# http://www.ucalgary.ca/UofC/departments/UP/1-55238/1-55238-110-2.html\n# the German armed forces at the Svalbard weather station code-named\n# Haudegen did not surrender to the Allies until September 1945.\n#\n# All these events predate our cutoff date of 1970, so use Europe/Berlin\n# for these regions.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tGermany\t1946\tonly\t-\tApr\t14\t2:00s\t1:00\tS\nRule\tGermany\t1946\tonly\t-\tOct\t 7\t2:00s\t0\t-\nRule\tGermany\t1947\t1949\t-\tOct\tSun>=1\t2:00s\t0\t-\n# https://www.ptb.de/cms/en/ptb/fachabteilungen/abt4/fb-44/ag-441/realisation-of-legal-time-in-germany/dst-and-midsummer-dst-in-germany-until-1979.html\n# says the following transition occurred at 3:00 MEZ, not the 2:00 MEZ\n# given in Shanks & Pottenger. Go with the PTB.\nRule\tGermany\t1947\tonly\t-\tApr\t 6\t3:00s\t1:00\tS\nRule\tGermany\t1947\tonly\t-\tMay\t11\t2:00s\t2:00\tM\nRule\tGermany\t1947\tonly\t-\tJun\t29\t3:00\t1:00\tS\nRule\tGermany\t1948\tonly\t-\tApr\t18\t2:00s\t1:00\tS\nRule\tGermany\t1949\tonly\t-\tApr\t10\t2:00s\t1:00\tS\n\nRule SovietZone\t1945\tonly\t-\tMay\t24\t2:00\t2:00\tM # Midsummer\nRule SovietZone\t1945\tonly\t-\tSep\t24\t3:00\t1:00\tS\nRule SovietZone\t1945\tonly\t-\tNov\t18\t2:00s\t0\t-\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tEurope/Berlin\t0:53:28 -\tLMT\t1893 Apr\n\t\t\t1:00\tC-Eur\tCE%sT\t1945 May 24  2:00\n\t\t\t1:00 SovietZone\tCE%sT\t1946\n\t\t\t1:00\tGermany\tCE%sT\t1980\n\t\t\t1:00\tEU\tCE%sT\n\n# Georgia\n# Please see the \"asia\" file for Asia/Tbilisi.\n# Herodotus (Histories, IV.45) says Georgia north of the Phasis (now Rioni)\n# is in Europe.  Our reference location Tbilisi is in the Asian part.\n\n# Gibraltar\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone Europe/Gibraltar\t-0:21:24 -\tLMT\t1880 Aug  2\n\t\t\t0:00\tGB-Eire\t%s\t1957 Apr 14  2:00\n\t\t\t1:00\t-\tCET\t1982\n\t\t\t1:00\tEU\tCE%sT\n\n# Greece\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\n# Whitman gives 1932 Jul 5 - Nov 1; go with Shanks & Pottenger.\nRule\tGreece\t1932\tonly\t-\tJul\t 7\t0:00\t1:00\tS\nRule\tGreece\t1932\tonly\t-\tSep\t 1\t0:00\t0\t-\n# Whitman gives 1941 Apr 25 - ?; go with Shanks & Pottenger.\nRule\tGreece\t1941\tonly\t-\tApr\t 7\t0:00\t1:00\tS\n# Whitman gives 1942 Feb 2 - ?; go with Shanks & Pottenger.\nRule\tGreece\t1942\tonly\t-\tNov\t 2\t3:00\t0\t-\nRule\tGreece\t1943\tonly\t-\tMar\t30\t0:00\t1:00\tS\nRule\tGreece\t1943\tonly\t-\tOct\t 4\t0:00\t0\t-\n# Whitman gives 1944 Oct 3 - Oct 31; go with Shanks & Pottenger.\nRule\tGreece\t1952\tonly\t-\tJul\t 1\t0:00\t1:00\tS\nRule\tGreece\t1952\tonly\t-\tNov\t 2\t0:00\t0\t-\nRule\tGreece\t1975\tonly\t-\tApr\t12\t0:00s\t1:00\tS\nRule\tGreece\t1975\tonly\t-\tNov\t26\t0:00s\t0\t-\nRule\tGreece\t1976\tonly\t-\tApr\t11\t2:00s\t1:00\tS\nRule\tGreece\t1976\tonly\t-\tOct\t10\t2:00s\t0\t-\nRule\tGreece\t1977\t1978\t-\tApr\tSun>=1\t2:00s\t1:00\tS\nRule\tGreece\t1977\tonly\t-\tSep\t26\t2:00s\t0\t-\nRule\tGreece\t1978\tonly\t-\tSep\t24\t4:00\t0\t-\nRule\tGreece\t1979\tonly\t-\tApr\t 1\t9:00\t1:00\tS\nRule\tGreece\t1979\tonly\t-\tSep\t29\t2:00\t0\t-\nRule\tGreece\t1980\tonly\t-\tApr\t 1\t0:00\t1:00\tS\nRule\tGreece\t1980\tonly\t-\tSep\t28\t0:00\t0\t-\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tEurope/Athens\t1:34:52 -\tLMT\t1895 Sep 14\n\t\t\t1:34:52\t-\tAMT\t1916 Jul 28  0:01 # Athens MT\n\t\t\t2:00\tGreece\tEE%sT\t1941 Apr 30\n\t\t\t1:00\tGreece\tCE%sT\t1944 Apr  4\n\t\t\t2:00\tGreece\tEE%sT\t1981\n\t\t\t# Shanks & Pottenger say it switched to C-Eur in 1981;\n\t\t\t# go with EU rules instead, since Greece joined Jan 1.\n\t\t\t2:00\tEU\tEE%sT\n\n# Hungary\n\n# From Michael Deckers (2020-06-09):\n# an Austrian encyclopedia of railroads of 1913, online at\n# http://www.zeno.org/Roell-1912/A/Eisenbahnzeit\n# says that the switch [to CET] happened on 1890-11-01.\n\n# From Géza Nyáry (2020-06-07):\n# Data for 1918-1983 are based on the archive database of Library Hungaricana.\n# The dates are collected from original, scanned governmental orders,\n# bulletins, instructions and public press.\n# [See URLs below.]\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\n# https://library.hungaricana.hu/hu/view/OGYK_RT_1918/?pg=238\n# https://library.hungaricana.hu/hu/view/OGYK_RT_1919/?pg=808\n# https://library.hungaricana.hu/hu/view/OGYK_RT_1920/?pg=201\nRule\tHungary\t1918\t1919\t-\tApr\t15\t 2:00\t1:00\tS\nRule\tHungary\t1918\t1920\t-\tSep\tMon>=15\t 3:00\t0\t-\nRule\tHungary\t1920\tonly\t-\tApr\t 5\t 2:00\t1:00\tS\n# https://library.hungaricana.hu/hu/view/OGYK_RT_1945/?pg=882\nRule\tHungary\t1945\tonly\t-\tMay\t 1\t23:00\t1:00\tS\nRule\tHungary\t1945\tonly\t-\tNov\t 1\t 1:00\t0\t-\n# https://library.hungaricana.hu/hu/view/Delmagyarorszag_1946_03/?pg=49\nRule\tHungary\t1946\tonly\t-\tMar\t31\t 2:00s\t1:00\tS\n# https://library.hungaricana.hu/hu/view/Delmagyarorszag_1946_09/?pg=54\nRule\tHungary\t1946\tonly\t-\tOct\t 7\t 2:00\t0\t-\n# https://library.hungaricana.hu/hu/view/KulfBelfHirek_1947_04_1__001-123/?pg=90\n# https://library.hungaricana.hu/hu/view/DunantuliNaplo_1947_09/?pg=128\n# https://library.hungaricana.hu/hu/view/KulfBelfHirek_1948_03_3__001-123/?pg=304\n# https://library.hungaricana.hu/hu/view/Zala_1948_09/?pg=64\n# https://library.hungaricana.hu/hu/view/SatoraljaujhelyiLeveltar_ZempleniNepujsag_1948/?pg=53\n# https://library.hungaricana.hu/hu/view/SatoraljaujhelyiLeveltar_ZempleniNepujsag_1948/?pg=160\n# https://library.hungaricana.hu/hu/view/UjSzo_1949_01-04/?pg=102\n# https://library.hungaricana.hu/hu/view/KeletMagyarorszag_1949_03/?pg=96\n# https://library.hungaricana.hu/hu/view/Delmagyarorszag_1949_09/?pg=94\nRule\tHungary\t1947\t1949\t-\tApr\tSun>=4\t 2:00s\t1:00\tS\nRule\tHungary\t1947\t1949\t-\tOct\tSun>=1\t 2:00s\t0\t-\n# https://library.hungaricana.hu/hu/view/DTT_KOZL_TanacsokKozlonye_1954/?pg=513\nRule\tHungary\t1954\tonly\t-\tMay\t23\t 0:00\t1:00\tS\nRule\tHungary\t1954\tonly\t-\tOct\t 3\t 0:00\t0\t-\n# https://library.hungaricana.hu/hu/view/DTT_KOZL_TanacsokKozlonye_1955/?pg=398\nRule\tHungary\t1955\tonly\t-\tMay\t22\t 2:00\t1:00\tS\nRule\tHungary\t1955\tonly\t-\tOct\t 2\t 3:00\t0\t-\n# https://library.hungaricana.hu/hu/view/HevesMegyeiNepujsag_1956_06/?pg=0\n# https://library.hungaricana.hu/hu/view/EszakMagyarorszag_1956_06/?pg=6\n# https://library.hungaricana.hu/hu/view/SzolnokMegyeiNeplap_1957_04/?pg=120\n# https://library.hungaricana.hu/hu/view/PestMegyeiHirlap_1957_09/?pg=143\nRule\tHungary\t1956\t1957\t-\tJun\tSun>=1\t 2:00\t1:00\tS\nRule\tHungary\t1956\t1957\t-\tSep\tlastSun\t 3:00\t0\t-\n# https://library.hungaricana.hu/hu/view/DTT_KOZL_TanacsokKozlonye_1980/?pg=189\nRule\tHungary\t1980\tonly\t-\tApr\t 6\t 0:00\t1:00\tS\nRule\tHungary\t1980\tonly\t-\tSep\t28\t 1:00\t0\t-\n# https://library.hungaricana.hu/hu/view/DTT_KOZL_TanacsokKozlonye_1980/?pg=1227\n# https://library.hungaricana.hu/hu/view/Delmagyarorszag_1981_01/?pg=79\n# https://library.hungaricana.hu/hu/view/DTT_KOZL_TanacsokKozlonye_1982/?pg=115\n# https://library.hungaricana.hu/hu/view/DTT_KOZL_TanacsokKozlonye_1983/?pg=85\nRule\tHungary\t1981\t1983\t-\tMar\tlastSun\t 0:00\t1:00\tS\nRule\tHungary\t1981\t1983\t-\tSep\tlastSun\t 1:00\t0\t-\n#\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tEurope/Budapest\t1:16:20 -\tLMT\t1890 Nov  1\n\t\t\t1:00\tC-Eur\tCE%sT\t1918\n# https://library.hungaricana.hu/hu/view/OGYK_RT_1941/?pg=1204\n# https://library.hungaricana.hu/hu/view/OGYK_RT_1942/?pg=3955\n\t\t\t1:00\tHungary\tCE%sT\t1941 Apr  7 23:00\n\t\t\t1:00\tC-Eur\tCE%sT\t1945\n\t\t\t1:00\tHungary\tCE%sT\t1984\n\t\t\t1:00\tEU\tCE%sT\n\n# Italy\n# San Marino\n# Vatican City\n#\n# From Paul Eggert (2001-03-06):\n# Sicily and Sardinia each had their own time zones from 1866 to 1893,\n# called Palermo Time (+00:53:28) and Cagliari Time (+00:36:32).\n# During World War II, German-controlled Italy used German time.\n# But these events all occurred before the 1970 cutoff,\n# so record only the time in Rome.\n#\n# From Stephen Trainor (2019-05-06):\n# http://www.ac-ilsestante.it/MERIDIANE/ora_legale/ORA_LEGALE_ESTIVA_IN_ITALIA.htm\n# ... the [1866] law went into effect on 12 December 1866, rather than\n# the date of the decree (22 Sep 1866)\n# https://web.archive.org/web/20070824155341/http://www.iav.it/planetario/didastro/didastro/english.htm\n# ... \"In Italy in 1866 there were 6 railway times (Torino, Verona, Firenze,\n# Roma, Napoli, Palermo). On that year it was decided to unify them, adopting\n# the average time of Rome (even if this city was not yet part of the\n# kingdom).  On the 12th December 1866, on the starting of the winter time\n# table, it took effect in the railways, the post office and the telegraph,\n# not only for the internal service but also for the public....  Milano set\n# the public watches on the Rome time on the same day (12th December 1866),\n# Torino and Bologna on the 1st January 1867, Venezia the 1st May 1880 and the\n# last city was Cagliari in 1886.\"\n#\n# From Luigi Rosa (2019-05-07):\n# this is the scan of the decree:\n# http://www.radiomarconi.com/marconi/filopanti/1866c.jpg\n#\n# From Michael Deckers (2016-10-24):\n# http://www.ac-ilsestante.it/MERIDIANE/ora_legale quotes a law of 1893-08-10\n# ... [translated as] \"The preceding dispositions will enter into\n# force at the instant at which, according to the time specified in\n# the 1st article, the 1st of November 1893 will begin....\"\n#\n# From Pierpaolo Bernardi (2016-10-20):\n# The authoritative source for time in Italy is the national metrological\n# institute, which has a summary page of historical DST data at\n# http://www.inrim.it/res/tf/ora_legale_i.shtml\n# [now at http://oldsite.inrim.it/res/tf/ora_legale_i.shtml as of 2017]\n# (2016-10-24):\n# http://www.renzobaldini.it/le-ore-legali-in-italia/\n# has still different data for 1944.  It divides Italy in two, as\n# there were effectively two governments at the time, north of Gothic\n# Line German controlled territory, official government RSI, and south\n# of the Gothic Line, controlled by allied armies.\n#\n# From Brian Inglis (2016-10-23):\n# Viceregal LEGISLATIVE DECREE. 14 September 1944, no. 219.\n# Restoration of Standard Time. (044U0219) (OJ 62 of 30.9.1944) ...\n# Given the R. law decreed on 1944-03-29, no. 92, by which standard time is\n# advanced to sixty minutes later starting at hour two on 1944-04-02; ...\n# Starting at hour three on the date 1944-09-17 standard time will be resumed.\n#\n# From Alois Treindl (2019-07-02):\n# I spent 6 Euros to buy two archive copies of Il Messaggero, a Roman paper,\n# for 1 and 2 April 1944.  The edition of 2 April has this note: \"Tonight at 2\n# am, put forward the clock by one hour.  Remember that in the night between\n# today and Monday the 'ora legale' will come in force again.\"  That makes it\n# clear that in Rome the change was on Monday, 3 April 1944 at 2 am.\n#\n# From Paul Eggert (2021-10-05):\n# Go with INRiM for DST rules, except as corrected by Inglis for 1944\n# for the Kingdom of Italy.  This is consistent with Renzo Baldini.\n# Model Rome's occupation by using C-Eur rules from 1943-09-10\n# to 1944-06-04; although Rome was an open city during this period, it\n# was effectively controlled by Germany.  Using C-Eur is consistent\n# with Treindl's comment about Rome in April 1944, as the \"Rule Italy\"\n# lines during German occupation do not affect Europe/Rome\n# (though they do affect Europe/Malta).\n#\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tItaly\t1916\tonly\t-\tJun\t 3\t24:00\t1:00\tS\nRule\tItaly\t1916\t1917\t-\tSep\t30\t24:00\t0\t-\nRule\tItaly\t1917\tonly\t-\tMar\t31\t24:00\t1:00\tS\nRule\tItaly\t1918\tonly\t-\tMar\t 9\t24:00\t1:00\tS\nRule\tItaly\t1918\tonly\t-\tOct\t 6\t24:00\t0\t-\nRule\tItaly\t1919\tonly\t-\tMar\t 1\t24:00\t1:00\tS\nRule\tItaly\t1919\tonly\t-\tOct\t 4\t24:00\t0\t-\nRule\tItaly\t1920\tonly\t-\tMar\t20\t24:00\t1:00\tS\nRule\tItaly\t1920\tonly\t-\tSep\t18\t24:00\t0\t-\nRule\tItaly\t1940\tonly\t-\tJun\t14\t24:00\t1:00\tS\nRule\tItaly\t1942\tonly\t-\tNov\t 2\t 2:00s\t0\t-\nRule\tItaly\t1943\tonly\t-\tMar\t29\t 2:00s\t1:00\tS\nRule\tItaly\t1943\tonly\t-\tOct\t 4\t 2:00s\t0\t-\nRule\tItaly\t1944\tonly\t-\tApr\t 2\t 2:00s\t1:00\tS\nRule\tItaly\t1944\tonly\t-\tSep\t17\t 2:00s\t0\t-\nRule\tItaly\t1945\tonly\t-\tApr\t 2\t 2:00\t1:00\tS\nRule\tItaly\t1945\tonly\t-\tSep\t15\t 1:00\t0\t-\nRule\tItaly\t1946\tonly\t-\tMar\t17\t 2:00s\t1:00\tS\nRule\tItaly\t1946\tonly\t-\tOct\t 6\t 2:00s\t0\t-\nRule\tItaly\t1947\tonly\t-\tMar\t16\t 0:00s\t1:00\tS\nRule\tItaly\t1947\tonly\t-\tOct\t 5\t 0:00s\t0\t-\nRule\tItaly\t1948\tonly\t-\tFeb\t29\t 2:00s\t1:00\tS\nRule\tItaly\t1948\tonly\t-\tOct\t 3\t 2:00s\t0\t-\nRule\tItaly\t1966\t1968\t-\tMay\tSun>=22\t 0:00s\t1:00\tS\nRule\tItaly\t1966\tonly\t-\tSep\t24\t24:00\t0\t-\nRule\tItaly\t1967\t1969\t-\tSep\tSun>=22\t 0:00s\t0\t-\nRule\tItaly\t1969\tonly\t-\tJun\t 1\t 0:00s\t1:00\tS\nRule\tItaly\t1970\tonly\t-\tMay\t31\t 0:00s\t1:00\tS\nRule\tItaly\t1970\tonly\t-\tSep\tlastSun\t 0:00s\t0\t-\nRule\tItaly\t1971\t1972\t-\tMay\tSun>=22\t 0:00s\t1:00\tS\nRule\tItaly\t1971\tonly\t-\tSep\tlastSun\t 0:00s\t0\t-\nRule\tItaly\t1972\tonly\t-\tOct\t 1\t 0:00s\t0\t-\nRule\tItaly\t1973\tonly\t-\tJun\t 3\t 0:00s\t1:00\tS\nRule\tItaly\t1973\t1974\t-\tSep\tlastSun\t 0:00s\t0\t-\nRule\tItaly\t1974\tonly\t-\tMay\t26\t 0:00s\t1:00\tS\nRule\tItaly\t1975\tonly\t-\tJun\t 1\t 0:00s\t1:00\tS\nRule\tItaly\t1975\t1977\t-\tSep\tlastSun\t 0:00s\t0\t-\nRule\tItaly\t1976\tonly\t-\tMay\t30\t 0:00s\t1:00\tS\nRule\tItaly\t1977\t1979\t-\tMay\tSun>=22\t 0:00s\t1:00\tS\nRule\tItaly\t1978\tonly\t-\tOct\t 1\t 0:00s\t0\t-\nRule\tItaly\t1979\tonly\t-\tSep\t30\t 0:00s\t0\t-\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tEurope/Rome\t0:49:56 -\tLMT\t1866 Dec 12\n\t\t\t0:49:56\t-\tRMT\t1893 Oct 31 23:00u # Rome Mean\n\t\t\t1:00\tItaly\tCE%sT\t1943 Sep 10\n\t\t\t1:00\tC-Eur\tCE%sT\t1944 Jun  4\n\t\t\t1:00\tItaly\tCE%sT\t1980\n\t\t\t1:00\tEU\tCE%sT\n\n# Latvia\n\n# From Liene Kanepe (1998-09-17):\n\n# I asked about this matter Scientific Secretary of the Institute of Astronomy\n# of The University of Latvia Dr. paed Mr. Ilgonis Vilks. I also searched the\n# correct data in juridical acts and I found some juridical documents about\n# changes in the counting of time in Latvia from 1981....\n#\n# Act No. 35 of the Council of Ministers of Latvian SSR of 1981-01-22 ...\n# according to the Act No. 925 of the Council of Ministers of USSR of 1980-10-24\n# ...: all year round the time of 2nd time zone + 1 hour, in addition turning\n# the hands of the clock 1 hour forward on 1 April at 00:00 (GMT 31 March 21:00)\n# and 1 hour backward on the 1 October at 00:00 (GMT 30 September 20:00).\n#\n# Act No. 592 of the Council of Ministers of Latvian SSR of 1984-09-24 ...\n# according to the Act No. 967 of the Council of Ministers of USSR of 1984-09-13\n# ...: all year round the time of 2nd time zone + 1 hour, in addition turning\n# the hands of the clock 1 hour forward on the last Sunday of March at 02:00\n# (GMT 23:00 on the previous day) and 1 hour backward on the last Sunday of\n# September at 03:00 (GMT 23:00 on the previous day).\n#\n# Act No. 81 of the Council of Ministers of Latvian SSR of 1989-03-22 ...\n# according to the Act No. 227 of the Council of Ministers of USSR of 1989-03-14\n# ...: since the last Sunday of March 1989 in Lithuanian SSR, Latvian SSR,\n# Estonian SSR and Kaliningrad region of Russian Federation all year round the\n# time of 2nd time zone (Moscow time minus one hour). On the territory of Latvia\n# transition to summer time is performed on the last Sunday of March at 02:00\n# (GMT 00:00), turning the hands of the clock 1 hour forward.  The end of\n# daylight saving time is performed on the last Sunday of September at 03:00\n# (GMT 00:00), turning the hands of the clock 1 hour backward. Exception is\n# 1989-03-26, when we must not turn the hands of the clock....\n#\n# The Regulations of the Cabinet of Ministers of the Republic of Latvia of\n# 1997-01-21 on transition to Summer time ... established the same order of\n# daylight savings time settings as in the States of the European Union.\n\n# From Andrei Ivanov (2000-03-06):\n# This year Latvia will not switch to Daylight Savings Time (as specified in\n# The Regulations of the Cabinet of Ministers of the Rep. of Latvia of\n# 29-Feb-2000 (No. 79) <http://www.lv-laiks.lv/wwwraksti/2000/071072/vd4.htm>,\n# in Latvian for subscribers only).\n\n# From RFE/RL Newsline\n# http://www.rferl.org/newsline/2001/01/3-CEE/cee-030101.html\n# (2001-01-03), noted after a heads-up by Rives McDow:\n# The Latvian government on 2 January decided that the country will\n# institute daylight-saving time this spring, LETA reported.\n# Last February the three Baltic states decided not to turn back their\n# clocks one hour in the spring....\n# Minister of Economy Aigars Kalvītis noted that Latvia had too few\n# daylight hours and thus decided to comply with a draft European\n# Commission directive that provides for instituting daylight-saving\n# time in EU countries between 2002 and 2006. The Latvian government\n# urged Lithuania and Estonia to adopt a similar time policy, but it\n# appears that they will not do so....\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tLatvia\t1989\t1996\t-\tMar\tlastSun\t 2:00s\t1:00\tS\nRule\tLatvia\t1989\t1996\t-\tSep\tlastSun\t 2:00s\t0\t-\n\n# Milne 1899 says Riga was 1:36:28 (Polytechnique House time).\n# Byalokoz 1919 says Latvia was 1:36:34.\n# Go with Byalokoz.\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tEurope/Riga\t1:36:34\t-\tLMT\t1880\n\t\t\t1:36:34\t-\tRMT\t1918 Apr 15  2:00 # Riga MT\n\t\t\t1:36:34\t1:00\tLST\t1918 Sep 16  3:00 # Latvian ST\n\t\t\t1:36:34\t-\tRMT\t1919 Apr  1  2:00\n\t\t\t1:36:34\t1:00\tLST\t1919 May 22  3:00\n\t\t\t1:36:34\t-\tRMT\t1926 May 11\n\t\t\t2:00\t-\tEET\t1940 Aug  5\n\t\t\t3:00\t-\tMSK\t1941 Jul\n\t\t\t1:00\tC-Eur\tCE%sT\t1944 Oct 13\n\t\t\t3:00\tRussia\tMSK/MSD\t1989 Mar lastSun  2:00s\n\t\t\t2:00\t1:00\tEEST\t1989 Sep lastSun  2:00s\n\t\t\t2:00\tLatvia\tEE%sT\t1997 Jan 21\n\t\t\t2:00\tEU\tEE%sT\t2000 Feb 29\n\t\t\t2:00\t-\tEET\t2001 Jan  2\n\t\t\t2:00\tEU\tEE%sT\n\n# Lithuania\n\n# From Paul Eggert (2016-03-18):\n# The 1989 transition is from USSR act No. 227 (1989-03-14).\n\n# From Paul Eggert (1996-11-22):\n# IATA SSIM (1992/1996) says Lithuania uses W-Eur rules, but since it is\n# known to be wrong about Estonia and Latvia, assume it's wrong here too.\n\n# From Marius Gedminas (1998-08-07):\n# I would like to inform that in this year Lithuanian time zone\n# (Europe/Vilnius) was changed.\n\n# From ELTA No. 972 (2582) (1999-09-29) <http://www.elta.lt/>,\n# via Steffen Thorsen:\n# Lithuania has shifted back to the second time zone (GMT plus two hours)\n# to be valid here starting from October 31,\n# as decided by the national government on Wednesday....\n# The Lithuanian government also announced plans to consider a\n# motion to give up shifting to summer time in spring, as it was\n# already done by Estonia.\n\n# From the Fact File, Lithuanian State Department of Tourism\n# <http://www.tourism.lt/informa/ff.htm> (2000-03-27):\n# Local time is GMT+2 hours ..., no daylight saving.\n\n# From a user via Klaus Marten (2003-02-07):\n# As a candidate for membership of the European Union, Lithuania will\n# observe Summer Time in 2003, changing its clocks at the times laid\n# down in EU Directive 2000/84 of 19.I.01 (i.e. at the same times as its\n# neighbour Latvia). The text of the Lithuanian government Order of\n# 7.XI.02 to this effect can be found at\n# http://www.lrvk.lt/nut/11/n1749.htm\n\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tEurope/Vilnius\t1:41:16\t-\tLMT\t1880\n\t\t\t1:24:00\t-\tWMT\t1917        # Warsaw Mean Time\n\t\t\t1:35:36\t-\tKMT\t1919 Oct 10 # Kaunas Mean Time\n\t\t\t1:00\t-\tCET\t1920 Jul 12\n\t\t\t2:00\t-\tEET\t1920 Oct  9\n\t\t\t1:00\t-\tCET\t1940 Aug  3\n\t\t\t3:00\t-\tMSK\t1941 Jun 24\n\t\t\t1:00\tC-Eur\tCE%sT\t1944 Aug\n\t\t\t3:00\tRussia\tMSK/MSD\t1989 Mar 26  2:00s\n\t\t\t2:00\tRussia\tEE%sT\t1991 Sep 29  2:00s\n\t\t\t2:00\tC-Eur\tEE%sT\t1998\n\t\t\t2:00\t-\tEET\t1998 Mar 29  1:00u\n\t\t\t1:00\tEU\tCE%sT\t1999 Oct 31  1:00u\n\t\t\t2:00\t-\tEET\t2003 Jan  1\n\t\t\t2:00\tEU\tEE%sT\n\n# Malta\n#\n# From Paul Eggert (2016-10-21):\n# Assume 1900-1972 was like Rome, overriding Shanks.\n#\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tMalta\t1973\tonly\t-\tMar\t31\t0:00s\t1:00\tS\nRule\tMalta\t1973\tonly\t-\tSep\t29\t0:00s\t0\t-\nRule\tMalta\t1974\tonly\t-\tApr\t21\t0:00s\t1:00\tS\nRule\tMalta\t1974\tonly\t-\tSep\t16\t0:00s\t0\t-\nRule\tMalta\t1975\t1979\t-\tApr\tSun>=15\t2:00\t1:00\tS\nRule\tMalta\t1975\t1980\t-\tSep\tSun>=15\t2:00\t0\t-\nRule\tMalta\t1980\tonly\t-\tMar\t31\t2:00\t1:00\tS\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tEurope/Malta\t0:58:04 -\tLMT\t1893 Nov  2 # Valletta\n\t\t\t1:00\tItaly\tCE%sT\t1973 Mar 31\n\t\t\t1:00\tMalta\tCE%sT\t1981\n\t\t\t1:00\tEU\tCE%sT\n\n# Moldova\n\n# From Stepan Golosunov (2016-03-07):\n# the act of the government of the Republic of Moldova Nr. 132 from 1990-05-04\n# http://lex.justice.md/viewdoc.php?action=view&view=doc&id=298782&lang=2\n# ... says that since 1990-05-06 on the territory of the Moldavian SSR\n# time would be calculated as the standard time of the second time belt\n# plus one hour of the \"summer\" time. To implement that clocks would be\n# adjusted one hour backwards at 1990-05-06 2:00. After that \"summer\"\n# time would be cancelled last Sunday of September at 3:00 and\n# reintroduced last Sunday of March at 2:00.\n\n# From Paul Eggert (2006-03-22):\n# A previous version of this database followed Shanks & Pottenger, who write\n# that Tiraspol switched to Moscow time on 1992-01-19 at 02:00.\n# However, this is most likely an error, as Moldova declared independence\n# on 1991-08-27 (the 1992-01-19 date is that of a Russian decree).\n# In early 1992 there was large-scale interethnic violence in the area\n# and it's possible that some Russophones continued to observe Moscow time.\n# But [two people] separately reported via\n# Jesper Nørgaard that as of 2001-01-24 Tiraspol was like Chisinau.\n# The Tiraspol entry has therefore been removed for now.\n#\n# From Alexander Krivenyshev (2011-10-17):\n# Pridnestrovian Moldavian Republic (PMR, also known as\n# \"Pridnestrovie\") has abolished seasonal clock change (no transition\n# to the Winter Time).\n#\n# News (in Russian):\n# http://www.kyivpost.ua/russia/news/pridnestrove-otkazalos-ot-perehoda-na-zimnee-vremya-30954.html\n# http://www.allmoldova.com/moldova-news/1249064116.html\n#\n# The substance of this change (reinstatement of the Tiraspol entry)\n# is from a patch from Petr Machata (2011-10-17)\n#\n# From Tim Parenti (2011-10-19)\n# In addition, being situated at +4651+2938 would give Tiraspol\n# a pre-1880 LMT offset of 1:58:32.\n#\n# (which agrees with the earlier entry that had been removed)\n#\n# From Alexander Krivenyshev (2011-10-26)\n# NO need to divide Moldova into two timezones at this point.\n# As of today, Transnistria (Pridnestrovie)- Tiraspol reversed its own\n# decision to abolish DST this winter.\n# Following Moldova and neighboring Ukraine- Transnistria (Pridnestrovie)-\n# Tiraspol will go back to winter time on October 30, 2011.\n# News from Moldova (in russian):\n# https://ru.publika.md/link_317061.html\n\n# From Roman Tudos (2015-07-02):\n# http://lex.justice.md/index.php?action=view&view=doc&lang=1&id=355077\n# From Paul Eggert (2015-07-01):\n# The abovementioned official link to IGO1445-868/2014 states that\n# 2014-10-26's fallback transition occurred at 03:00 local time.  Also,\n# https://www.trm.md/en/social/la-30-martie-vom-trece-la-ora-de-vara\n# says the 2014-03-30 spring-forward transition was at 02:00 local time.\n# Guess that since 1997 Moldova has switched one hour before the EU.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tMoldova\t1997\tmax\t-\tMar\tlastSun\t 2:00\t1:00\tS\nRule\tMoldova\t1997\tmax\t-\tOct\tlastSun\t 3:00\t0\t-\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tEurope/Chisinau\t1:55:20 -\tLMT\t1880\n\t\t\t1:55\t-\tCMT\t1918 Feb 15 # Chisinau MT\n\t\t\t1:44:24\t-\tBMT\t1931 Jul 24 # Bucharest MT\n\t\t\t2:00\tRomania\tEE%sT\t1940 Aug 15\n\t\t\t2:00\t1:00\tEEST\t1941 Jul 17\n\t\t\t1:00\tC-Eur\tCE%sT\t1944 Aug 24\n\t\t\t3:00\tRussia\tMSK/MSD\t1990 May  6  2:00\n\t\t\t2:00\tRussia\tEE%sT\t1992\n\t\t\t2:00\tE-Eur\tEE%sT\t1997\n# See Romania commentary for the guessed 1997 transition to EU rules.\n\t\t\t2:00\tMoldova\tEE%sT\n\n# Poland\n\n# The 1919 dates and times can be found in Tygodnik Urzędowy nr 1 (1919-03-20),\n# <http://www.wbc.poznan.pl/publication/32156> pp 1-2.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tPoland\t1918\t1919\t-\tSep\t16\t2:00s\t0\t-\nRule\tPoland\t1919\tonly\t-\tApr\t15\t2:00s\t1:00\tS\nRule\tPoland\t1944\tonly\t-\tApr\t 3\t2:00s\t1:00\tS\n# Whitman gives 1944 Nov 30; go with Shanks & Pottenger.\nRule\tPoland\t1944\tonly\t-\tOct\t 4\t2:00\t0\t-\n# For 1944-1948 Whitman gives the previous day; go with Shanks & Pottenger.\nRule\tPoland\t1945\tonly\t-\tApr\t29\t0:00\t1:00\tS\nRule\tPoland\t1945\tonly\t-\tNov\t 1\t0:00\t0\t-\n# For 1946 on the source is Kazimierz Borkowski,\n# Toruń Center for Astronomy, Dept. of Radio Astronomy, Nicolaus Copernicus U.,\n# https://www.astro.uni.torun.pl/~kb/Artykuly/U-PA/Czas2.htm#tth_tAb1\n# Thanks to Przemysław Augustyniak (2005-05-28) for this reference.\n# He also gives these further references:\n# Mon Pol nr 13, poz 162 (1995) <http://www.abc.com.pl/serwis/mp/1995/0162.htm>\n# Druk nr 2180 (2003) <http://www.senat.gov.pl/k5/dok/sejm/053/2180.pdf>\nRule\tPoland\t1946\tonly\t-\tApr\t14\t0:00s\t1:00\tS\nRule\tPoland\t1946\tonly\t-\tOct\t 7\t2:00s\t0\t-\nRule\tPoland\t1947\tonly\t-\tMay\t 4\t2:00s\t1:00\tS\nRule\tPoland\t1947\t1949\t-\tOct\tSun>=1\t2:00s\t0\t-\nRule\tPoland\t1948\tonly\t-\tApr\t18\t2:00s\t1:00\tS\nRule\tPoland\t1949\tonly\t-\tApr\t10\t2:00s\t1:00\tS\nRule\tPoland\t1957\tonly\t-\tJun\t 2\t1:00s\t1:00\tS\nRule\tPoland\t1957\t1958\t-\tSep\tlastSun\t1:00s\t0\t-\nRule\tPoland\t1958\tonly\t-\tMar\t30\t1:00s\t1:00\tS\nRule\tPoland\t1959\tonly\t-\tMay\t31\t1:00s\t1:00\tS\nRule\tPoland\t1959\t1961\t-\tOct\tSun>=1\t1:00s\t0\t-\nRule\tPoland\t1960\tonly\t-\tApr\t 3\t1:00s\t1:00\tS\nRule\tPoland\t1961\t1964\t-\tMay\tlastSun\t1:00s\t1:00\tS\nRule\tPoland\t1962\t1964\t-\tSep\tlastSun\t1:00s\t0\t-\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tEurope/Warsaw\t1:24:00 -\tLMT\t1880\n\t\t\t1:24:00\t-\tWMT\t1915 Aug  5 # Warsaw Mean Time\n\t\t\t1:00\tC-Eur\tCE%sT\t1918 Sep 16  3:00\n\t\t\t2:00\tPoland\tEE%sT\t1922 Jun\n\t\t\t1:00\tPoland\tCE%sT\t1940 Jun 23  2:00\n\t\t\t1:00\tC-Eur\tCE%sT\t1944 Oct\n\t\t\t1:00\tPoland\tCE%sT\t1977\n\t\t\t1:00\tW-Eur\tCE%sT\t1988\n\t\t\t1:00\tEU\tCE%sT\n\n# Portugal\n\n# From Tim Parenti (2024-07-01), per Alois Treindl (2021-02-07) and Michael\n# Deckers (2021-02-10):\n# http://oal.ul.pt/documentos/2018/01/hl1911a2018.pdf/\n# The Astronomical Observatory of Lisbon has published a list detailing the\n# historical transitions in legal time within continental Portugal.  It\n# directly references many decrees and ordinances which are, in turn,\n# referenced below.  They can be viewed in the public archives of the Diário da\n# República (until 1976-04-09 known as the Diário do Govêrno) at\n# https://dre.pt/ (in Portuguese).\n#\n# Most of the Rules below have been updated simply to match the Observatory's\n# listing for continental (mainland) Portugal.  Although there are over 50\n# referenced decrees and ordinances, only the handful with comments below have\n# been verified against the text, typically to provide additional confidence\n# wherever dates provided by Whitman and Shanks & Pottenger had disagreed.\n# See further below for the Azores and Madeira.\n\n# From Tim Parenti (2024-07-01), per Paul Eggert (2014-08-11), after a\n# heads-up from Stephen Colebourne:\n# According to a 1911-05-24 Portuguese decree, Lisbon was at -0:36:44.68, but\n# switched to GMT on 1912-01-01 at 00:00.\n# https://dre.pt/dr/detalhe/decreto/593090\n# https://dre.pt/application/conteudo/593090\n# The decree made legal time throughout Portugal and her possessions\n# \"subordinate to the Greenwich meridian, according to the principle adopted at\n# the Washington Convention in 1884\" and eliminated the \"difference of five\n# minutes between the internal and external clocks of railway stations\".\n#\n# The decree was gazetted in the 1911-05-30 issue of Diário do Govêrno, and is\n# considered to be dated 1911-05-24 by that issue's summary; however, the text\n# of the decree itself is dated 1911-05-26.  The Diário da República website\n# notes the discrepancy, but later laws and the Observatory all seem to refer\n# to this decree by the 1911-05-24 date.\n#\n# From Michael Deckers (2018-02-15):\n# article 5 [of the 1911 decree; Deckers's translation] ...:\n# These dispositions shall enter into force at the instant at which,\n# according to the 2nd article, the civil day January 1, 1912 begins,\n# all clocks therefore having to be advanced or set back correspondingly ...\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\n# From Tim Parenti (2024-07-01), per Paul Eggert (1999-01-30):\n# DSH writes in their history that Decreto 1469 of 1915-03-30 established\n# summer time and that, \"despite\" this, the change to the clocks was not done\n# every year, depending on what Spain did, because of railroad schedules.\n# In fact, that decree had nothing to do with DST; rather, it regulated the\n# sending of time signals.  But we do see linkage to Spain in the 1920s below.\n# https://dre.pt/dr/detalhe/decreto/1469-1915-285721\n# https://dre.pt/application/conteudo/285721\n#\n# According to the Observatory, standard time was first advanced by Decreto\n# 2433 of 1916-06-09 and restored by Decreto 2712 of 1916-10-28.  While Whitman\n# gives 1916-10-31 for the latter transition, Shanks & Pottenger agrees more\n# closely with the decree, which stated that its provision \"will start sixty\n# minutes after the end of 31 October, according to the current time,\" i.e.,\n# 01:00 on 1 November.\n# https://dre.pt/dr/detalhe/decreto/2433-1916-267192\n# https://dre.pt/application/conteudo/267192\n# https://dre.pt/dr/detalhe/decreto/2712-1916-590937\n# https://dre.pt/application/conteudo/590937\nRule\tPort\t1916\tonly\t-\tJun\t17\t23:00\t1:00\tS\nRule\tPort\t1916\tonly\t-\tNov\t 1\t 1:00\t0\t-\n# From Tim Parenti (2024-07-01):\n# Article 7 of Decreto 2922 of 1916-12-30 stated that \"the legal time will be\n# advanced by sixty minutes from 1 March to 31 October.\"  Per Article 15, this\n# came into force from 1917-01-01.  Just before the first fall back, Decreto\n# 3446 of 1917-10-11 changed the annual end date to 14 October.\n# https://dre.pt/dr/detalhe/decreto/2922-1916-261894\n# https://dre.pt/application/conteudo/261894\n# https://dre.pt/dr/detalhe/decreto/3446-1917-495161\n# https://dre.pt/application/conteudo/495161\n# This annual change was revoked by Decreto 8038 of 1922-02-18.\n# https://dre.pt/dr/detalhe/decreto/8038-1922-569751\n# https://dre.pt/application/conteudo/569751\nRule\tPort\t1917\t1921\t-\tMar\t 1\t 0:00\t1:00\tS\nRule\tPort\t1917\t1921\t-\tOct\t14\t24:00\t0\t-\n# From Tim Parenti (2024-07-01):\n# Decreto 9592 of 1924-04-14 noted that \"France maintains the advance of legal\n# time in the summer and Spain has now adopted it for the first time\" and\n# considered \"that the absence of similar measures would cause serious\n# difficulties for international rail connections with consequent repercussions\n# on domestic service hours...\" along with \"inconvenient analogues...for postal\n# and telegraph services.\"  Summer time would be in effect from 17 April to 4\n# October, with the spring change explicitly specified by bringing clocks\n# forward from 16 April 23:00.\n# https://dre.pt/dr/detalhe/decreto/9592-1924-652133\n# https://dre.pt/application/conteudo/652133\n#\n# Decreto 10700, issued 1925-04-16, noted that Spain had not continued summer\n# time, declared that \"the current legal hour prior to 17 April remains\n# unchanged from that day forward\", and revoked legislation to the contrary,\n# just a day before summer time would have otherwise resumed.\n# https://dre.pt/dr/detalhe/decreto/10700-1925-437826\n# https://dre.pt/application/conteudo/437826\nRule\tPort\t1924\tonly\t-\tApr\t16\t23:00s\t1:00\tS\nRule\tPort\t1924\tonly\t-\tOct\t 4\t23:00s\t0\t-\nRule\tPort\t1926\tonly\t-\tApr\t17\t23:00s\t1:00\tS\nRule\tPort\t1926\t1929\t-\tOct\tSat>=1\t23:00s\t0\t-\nRule\tPort\t1927\tonly\t-\tApr\t 9\t23:00s\t1:00\tS\nRule\tPort\t1928\tonly\t-\tApr\t14\t23:00s\t1:00\tS\nRule\tPort\t1929\tonly\t-\tApr\t20\t23:00s\t1:00\tS\nRule\tPort\t1931\tonly\t-\tApr\t18\t23:00s\t1:00\tS\n# Whitman gives 1931 Oct 8; go with Shanks & Pottenger.\nRule\tPort\t1931\t1932\t-\tOct\tSat>=1\t23:00s\t0\t-\nRule\tPort\t1932\tonly\t-\tApr\t 2\t23:00s\t1:00\tS\nRule\tPort\t1934\tonly\t-\tApr\t 7\t23:00s\t1:00\tS\n# Whitman gives 1934 Oct 5; go with Shanks & Pottenger.\n# Note: The 1935 law specified 10-06 00:00, not 10-05 24:00, but the following\n# is equivalent and more succinct.\nRule\tPort\t1934\t1938\t-\tOct\tSat>=1\t23:00s\t0\t-\n# Shanks & Pottenger give 1935 Apr 30; go with Whitman.\nRule\tPort\t1935\tonly\t-\tMar\t30\t23:00s\t1:00\tS\nRule\tPort\t1936\tonly\t-\tApr\t18\t23:00s\t1:00\tS\n# Whitman gives 1937 Apr 2; go with Shanks & Pottenger.\nRule\tPort\t1937\tonly\t-\tApr\t 3\t23:00s\t1:00\tS\nRule\tPort\t1938\tonly\t-\tMar\t26\t23:00s\t1:00\tS\nRule\tPort\t1939\tonly\t-\tApr\t15\t23:00s\t1:00\tS\n# Whitman gives 1939 Oct 7; go with Shanks & Pottenger.\nRule\tPort\t1939\tonly\t-\tNov\t18\t23:00s\t0\t-\n# From Tim Parenti (2024-07-01):\n# Portaria 9465 of 1940-02-17 advanced clocks from Saturday 1940-02-24 23:00.\n# The clocks were restored by Portaria 9658, issued Monday 1940-10-07,\n# effective from 24:00 that very night, which agrees with Shanks & Pottenger;\n# Whitman gives Saturday 1940-10-05 instead.\n# https://dre.pt/dr/detalhe/portaria/9465-1940-189096\n# https://dre.pt/application/conteudo/189096\n# https://dre.pt/dr/detalhe/portaria/9658-1940-196729\n# https://dre.pt/application/conteudo/196729\nRule\tPort\t1940\tonly\t-\tFeb\t24\t23:00s\t1:00\tS\nRule\tPort\t1940\tonly\t-\tOct\t 7\t23:00s\t0\t-\nRule\tPort\t1941\tonly\t-\tApr\t 5\t23:00s\t1:00\tS\nRule\tPort\t1941\tonly\t-\tOct\t 5\t23:00s\t0\t-\nRule\tPort\t1942\t1945\t-\tMar\tSat>=8\t23:00s\t1:00\tS\nRule\tPort\t1942\tonly\t-\tApr\t25\t22:00s\t2:00\tM # Midsummer\nRule\tPort\t1942\tonly\t-\tAug\t15\t22:00s\t1:00\tS\nRule\tPort\t1942\t1945\t-\tOct\tSat>=24\t23:00s\t0\t-\nRule\tPort\t1943\tonly\t-\tApr\t17\t22:00s\t2:00\tM\nRule\tPort\t1943\t1945\t-\tAug\tSat>=25\t22:00s\t1:00\tS\nRule\tPort\t1944\t1945\t-\tApr\tSat>=21\t22:00s\t2:00\tM\nRule\tPort\t1946\tonly\t-\tApr\tSat>=1\t23:00s\t1:00\tS\nRule\tPort\t1946\tonly\t-\tOct\tSat>=1\t23:00s\t0\t-\n# From Tim Parenti (2024-07-01), per Alois Treindl (2021-02-07):\n# The Astronomical Observatory of Lisbon cites Portaria 11767 of 1947-03-28 for\n# 1947 and Portaria 12286 of 1948-02-19 for 1948.\n# https://dre.pt/dr/detalhe/portaria/11767-1947-414787\n# https://dre.pt/application/conteudo/414787\n# https://dre.pt/dr/detalhe/portaria/12286-1948-152953\n# https://dre.pt/application/conteudo/152953\n#\n# Although the latter ordinance explicitly had the 1948-10-03 transition\n# scheduled for 02:00 rather than 03:00 as had been used in 1947, Decreto-Lei\n# 37048 of 1948-09-07 recognized \"that it is advisable to definitely set...the\n# 'summer time' regime\", and fixed the fall transition at 03:00 moving forward.\n# https://dre.pt/dr/detalhe/decreto-lei/37048-1948-373810\n# https://dre.pt/application/conteudo/373810\n# While the Observatory only cites this act for 1949-1965 and not for 1948, it\n# does not appear to have had any provision delaying its effect, so assume that\n# it overrode the prior ordinance for 1948-10-03.\n#\n# Whitman says DST was not observed in 1950 and gives Oct lastSun for 1952 on.\n# The Observatory, however, agrees with Shanks & Pottenger that 1950 was not an\n# exception and that Oct Sun>=1 was maintained through 1965.\nRule\tPort\t1947\t1966\t-\tApr\tSun>=1\t 2:00s\t1:00\tS\nRule\tPort\t1947\t1965\t-\tOct\tSun>=1\t 2:00s\t0\t-\n# From Tim Parenti (2024-07-01):\n# Decreto-Lei 47233 of 1966-10-01 considered that the \"duality\" in time was\n# \"the cause of serious disturbances\" and noted that \"the countries with which\n# we have the most frequent contacts...have already adopted\" a solution\n# coinciding with the extant \"summer time\".  It established that the former\n# \"summer time\" would apply year-round on the mainland and adjacent islands\n# with immediate effect, as the fall back would have otherwise occurred later\n# that evening.\n# https://dre.pt/dr/detalhe/decreto-lei/47233-1966-293729\n# Model this by changing zones without changing clocks at the\n# previously-appointed fall back time.\n#\n# Decreto-Lei 309/76 of 1976-04-27 acknowledged that those international\n# contacts had returned to adopting seasonal times, and considered that the\n# year-round advancement \"entails considerable sacrifices for the vast majority\n# of the working population during the winter months\", including morning\n# visibility concerns for schoolchildren.  It specified, beginning 1976-09-26\n# 01:00, an annual return to UT+00 on the mainland from 00:00 UT on Sep lastSun\n# to 00:00 UT on Mar lastSun (unless the latter date fell on Easter, in which\n# case it was to be brought forward to the preceding Sunday).  It also assigned\n# the Permanent Time Commission to study and propose revisions for the Azores\n# and Madeira, neither of which resumed DST until 1982 (as described further\n# below).\n# https://dre.pt/dr/detalhe/decreto-lei/309-1976-502063\nRule\tPort\t1976\tonly\t-\tSep\tlastSun\t 1:00\t0\t-\nRule\tPort\t1977\tonly\t-\tMar\tlastSun\t 0:00s\t1:00\tS\nRule\tPort\t1977\tonly\t-\tSep\tlastSun\t 0:00s\t0\t-\n# From Tim Parenti (2024-07-01):\n# Beginning in 1978, rather than triggering the Easter rule of the 1976 decree\n# (Easter fell on 1978-03-26), Article 5 was used instead, which allowed DST\n# dates to be changed by order of the Minister of Education and Scientific\n# Research, upon consultation with the Permanent Time Commission, \"whenever\n# considered convenient.\"  As such, a series of one-off ordinances were\n# promulgated for the mainland in 1978 through 1980, after which the 1976\n# decree naturally came back into force from 1981.\nRule\tPort\t1978\t1980\t-\tApr\tSun>=1\t 1:00s\t1:00\tS\nRule\tPort\t1978\tonly\t-\tOct\t 1\t 1:00s\t0\t-\nRule\tPort\t1979\t1980\t-\tSep\tlastSun\t 1:00s\t0\t-\nRule\tPort\t1981\t1986\t-\tMar\tlastSun\t 0:00s\t1:00\tS\nRule\tPort\t1981\t1985\t-\tSep\tlastSun\t 0:00s\t0\t-\n# From Tim Parenti (2024-07-01):\n# Decreto-Lei 44-B/86 of 1986-03-07 switched mainland Portugal's transition\n# times from 0:00s to 1:00u to harmonize with the EEC from 1986-03-30.\n# https://dre.pt/dr/detalhe/decreto-lei/44-b-1986-628280\n# (Transitions of 1:00s as previously reported and used by the W-Eur rules,\n# though equivalent, appear to have been fiction here.)  Madeira continued to\n# use 0:00s for spring 1986 before joining with the mainland using 1:00u in the\n# fall; meanwhile, in the Azores the two were equivalent, so the law specifying\n# 0:00s wasn't touched until 1992.  (See below for more on the islands.)\n#\n# From Rui Pedro Salgueiro (1992-11-12):\n# Portugal has recently (September, 27) changed timezone\n# (from WET to MET or CET) to harmonize with EEC.\n#\n# Martin Bruckmann (1996-02-29) reports via Peter Ilieve\n# that Portugal is reverting to 0:00 by not moving its clocks this spring.\n# The new Prime Minister was fed up with getting up in the dark in the winter.\n#\n# From Paul Eggert (1996-11-12):\n# IATA SSIM (1991-09) reports several 1991-09 and 1992-09 transitions\n# at 02:00u, not 01:00u.  Assume that these are typos.\n#\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n\t\t#STDOFF\t-0:36:44.68\nZone\tEurope/Lisbon\t-0:36:45 -\tLMT\t1884\n\t\t\t-0:36:45 -\tLMT\t1912 Jan  1  0:00u # Lisbon MT\n\t\t\t 0:00\tPort\tWE%sT\t1966 Oct  2  2:00s\n\t\t\t 1:00\t-\tCET\t1976 Sep 26  1:00\n\t\t\t 0:00\tPort\tWE%sT\t1986\n\t\t\t 0:00\tEU\tWE%sT\t1992 Sep 27  1:00u\n\t\t\t 1:00\tEU\tCE%sT\t1996 Mar 31  1:00u\n\t\t\t 0:00\tEU\tWE%sT\n\n# From Tim Parenti (2024-07-01):\n# For the Azores and Madeira, legislation was followed from the laws currently\n# in force as listed at:\n# https://oal.ul.pt/hora-legal/legislacao/\n# working backward through references of revocation and abrogation to\n# Decreto-Lei 47233 of 1966-10-01, the last time DST was abolished across the\n# mainland and its adjacent islands.  Because of that reference, it is\n# therefore assumed that DST rules in the islands prior to 1966 were like that\n# of the mainland, though most legislation of the time didn't explicitly\n# specify DST practices for the islands.\nZone Atlantic/Azores\t-1:42:40 -\tLMT\t1884        # Ponta Delgada\n\t\t\t-1:54:32 -\tHMT\t1912 Jan  1  2:00u # Horta MT\n# Vanguard section, for zic and other parsers that support %z.\n\t\t\t-2:00\tPort\t%z\t1966 Oct  2  2:00s\n# From Tim Parenti (2024-07-01):\n# While Decreto-Lei 309/76 of 1976-04-27 reintroduced DST on the mainland by\n# falling back on 1976-09-26, it assigned the Permanent Time Commission to\n# study and propose revisions for the Azores and Madeira.  Decreto Regional\n# 9/77/A of 1977-05-17 affirmed that \"the legal time remained unchanged in the\n# Azores\" at UT-1, and would remain there year-round.\n# https://dre.pt/dr/detalhe/decreto-regional/9-1977-252066\n#\n# Decreto Regional 2/82/A, published 1982-03-02, adopted DST in the same\n# fashion as the mainland used at the time.\n# https://dre.pt/dr/detalhe/decreto-regional/2-1982-599965\n# Though transitions in the Azores officially remained at 0:00s through 1992,\n# this was equivalent to the EU-style 1:00u adopted by the mainland in 1986, so\n# model it as such.\n\t\t\t-1:00\t-\t%z\t1982 Mar 28  0:00s\n\t\t\t-1:00\tPort\t%z\t1986\n# Rearguard section, for parsers lacking %z; see ziguard.awk.\n#\t\t\t-2:00\tPort\t-02/-01\t1942 Apr 25 22:00s\n#\t\t\t-2:00\tPort\t+00\t1942 Aug 15 22:00s\n#\t\t\t-2:00\tPort\t-02/-01\t1943 Apr 17 22:00s\n#\t\t\t-2:00\tPort\t+00\t1943 Aug 28 22:00s\n#\t\t\t-2:00\tPort\t-02/-01\t1944 Apr 22 22:00s\n#\t\t\t-2:00\tPort\t+00\t1944 Aug 26 22:00s\n#\t\t\t-2:00\tPort\t-02/-01\t1945 Apr 21 22:00s\n#\t\t\t-2:00\tPort\t+00\t1945 Aug 25 22:00s\n#\t\t\t-2:00\tPort\t-02/-01\t1966 Oct  2  2:00s\n#\t\t\t-1:00\t-\t-01\t1982 Mar 28  0:00s\n#\t\t\t-1:00\tPort\t-01/+00\t1986\n# End of rearguard section.\n#\n# From Paul Eggert (1996-11-12):\n# IATA SSIM (1991/1992) reports that the Azores were at -1:00.\n# IATA SSIM (1993-02) says +0:00; later issues (through 1996-09) say -1:00.\n#\n# From Tim Parenti (2024-07-01):\n# After mainland Portugal had shifted forward an hour from 1992-09-27, Decreto\n# Legislativo Regional 29/92/A of 1992-12-23 sought to \"reduce the time\n# difference\" by shifting the Azores forward as well from 1992-12-27.  Just six\n# months later, this was revoked by Decreto Legislativo Regional 9/93/A, citing\n# \"major changes in work habits and way of life.\"  Though the revocation didn't\n# give a transition time, it was signed Wednesday 1993-06-16; assume it took\n# effect later that evening, and that an EU-style spring forward (to +01) was\n# still observed in the interim on 1993-03-28.\n# https://dre.pt/dr/detalhe/decreto-legislativo-regional/29-1992-621553\n# https://dre.pt/dr/detalhe/decreto-legislativo-regional/9-1993-389633\n\t\t\t-1:00\tEU\t%z\t1992 Dec 27  1:00s\n\t\t\t 0:00\tEU\tWE%sT\t1993 Jun 17  1:00u\n\t\t\t-1:00\tEU\t%z\n\nZone Atlantic/Madeira\t-1:07:36 -\tLMT\t1884        # Funchal\n\t\t\t-1:07:36 -\tFMT\t1912 Jan  1  1:00u # Funchal MT\n# Vanguard section, for zic and other parsers that support %z.\n\t\t\t-1:00\tPort\t%z\t1966 Oct  2  2:00s\n# Rearguard section, for parsers lacking %z; see ziguard.awk.\n#\t\t\t-1:00\tPort\t-01/+00\t1942 Apr 25 22:00s\n#\t\t\t-1:00\tPort\t+01\t1942 Aug 15 22:00s\n#\t\t\t-1:00\tPort\t-01/+00\t1943 Apr 17 22:00s\n#\t\t\t-1:00\tPort\t+01\t1943 Aug 28 22:00s\n#\t\t\t-1:00\tPort\t-01/+00\t1944 Apr 22 22:00s\n#\t\t\t-1:00\tPort\t+01\t1944 Aug 26 22:00s\n#\t\t\t-1:00\tPort\t-01/+00\t1945 Apr 21 22:00s\n#\t\t\t-1:00\tPort\t+01\t1945 Aug 25 22:00s\n#\t\t\t-1:00\tPort\t-01/+00\t1966 Oct  2  2:00s\n# End of rearguard section.\n#\n# From Tim Parenti (2024-07-01):\n# Decreto Regional 5/82/M, published 1982-04-03, established DST transitions at\n# 0:00u, which for Madeira is equivalent to the mainland's rules (0:00s) at the\n# time.  It came into effect the day following its publication, Sunday\n# 1982-04-04, thus resuming Madeira's DST practice about a week later than the\n# mainland and the Azores.\n# https://dre.pt/dr/detalhe/decreto-regional/5-1982-608273\n#\n# Decreto Legislativo Regional 18/86/M, published 1986-10-01, adopted EU-style\n# rules (1:00u) and entered into immediate force after being signed on\n# 1986-07-31.\n# https://dre.pt/dr/detalhe/decreto-legislativo-regional/18-1986-221705\n\t\t\t 0:00\t-\tWET\t1982 Apr  4\n\t\t\t 0:00\tPort\tWE%sT\t1986 Jul 31\n\t\t\t 0:00\tEU\tWE%sT\n\n# Romania\n#\n# From Paul Eggert (1999-10-07):\n# Nine O'clock <http://www.nineoclock.ro/POL/1778pol.html>\n# (1998-10-23) reports that the switch occurred at\n# 04:00 local time in fall 1998.  For lack of better info,\n# assume that Romania and Moldova switched to EU rules in 1997,\n# the same year as Bulgaria.\n#\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tRomania\t1932\tonly\t-\tMay\t21\t 0:00s\t1:00\tS\nRule\tRomania\t1932\t1939\t-\tOct\tSun>=1\t 0:00s\t0\t-\nRule\tRomania\t1933\t1939\t-\tApr\tSun>=2\t 0:00s\t1:00\tS\nRule\tRomania\t1979\tonly\t-\tMay\t27\t 0:00\t1:00\tS\nRule\tRomania\t1979\tonly\t-\tSep\tlastSun\t 0:00\t0\t-\nRule\tRomania\t1980\tonly\t-\tApr\t 5\t23:00\t1:00\tS\nRule\tRomania\t1980\tonly\t-\tSep\tlastSun\t 1:00\t0\t-\nRule\tRomania\t1991\t1993\t-\tMar\tlastSun\t 0:00s\t1:00\tS\nRule\tRomania\t1991\t1993\t-\tSep\tlastSun\t 0:00s\t0\t-\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone Europe/Bucharest\t1:44:24 -\tLMT\t1891 Oct\n\t\t\t1:44:24\t-\tBMT\t1931 Jul 24 # Bucharest MT\n\t\t\t2:00\tRomania\tEE%sT\t1981 Mar 29  2:00s\n\t\t\t2:00\tC-Eur\tEE%sT\t1991\n\t\t\t2:00\tRomania\tEE%sT\t1994\n\t\t\t2:00\tE-Eur\tEE%sT\t1997\n\t\t\t2:00\tEU\tEE%sT\n\n\n# Russia\n\n# From Alexander Krivenyshev (2011-09-15):\n# Based on last Russian Government Decree No. 725 on August 31, 2011\n# (Government document\n# http://www.government.ru/gov/results/16355/print/\n# in Russian)\n# there are few corrections have to be made for some Russian time zones...\n# All updated Russian Time Zones were placed in table and translated to English\n# by WorldTimeZone.com at the link below:\n# http://www.worldtimezone.com/dst_news/dst_news_russia36.htm\n\n# From Sanjeev Gupta (2011-09-27):\n# Scans of [Decree No. 23 of January 8, 1992] are available at:\n# http://government.consultant.ru/page.aspx?1223966\n# They are in Cyrillic letters (presumably Russian).\n\n# From Arthur David Olson (2012-05-09):\n# Regarding the instant when clocks in time-zone-shifting parts of Russia\n# changed in September 2011:\n#\n# One source is\n# http://government.ru/gov/results/16355/\n# which, according to translate.google.com, begins \"Decree of August 31,\n# 2011 No. 725\" and contains no other dates or \"effective date\" information.\n#\n# Another source is\n# https://rg.ru/2011/09/06/chas-zona-dok.html\n# which, according to translate.google.com, begins \"Resolution of the\n# Government of the Russian Federation on August 31, 2011 N 725\" and also\n# contains \"Date first official publication: September 6, 2011 Posted on:\n# in the 'RG' - Federal Issue No. 5573 September 6, 2011\" but which\n# does not contain any \"effective date\" information.\n#\n# Another source is\n# https://en.wikipedia.org/wiki/Oymyakonsky_District#cite_note-RuTime-7\n# which, in note 8, contains \"Resolution No. 725 of August 31, 2011...\n# Effective as of after 7 days following the day of the official publication\"\n# but which does not contain any reference to September 6, 2011.\n#\n# The Wikipedia article refers to\n# http://base.consultant.ru/cons/cgi/online.cgi?req=doc;base=LAW;n=118896\n# which seems to copy the text of the government.ru page.\n#\n# Tobias Conradi combines Wikipedia's\n# \"as of after 7 days following the day of the official publication\"\n# with www.rg.ru's \"Date of first official publication: September 6, 2011\" to\n# get September 13, 2011 as the cutover date (unusually, a Tuesday, as Tobias\n# Conradi notes).\n#\n# None of the sources indicates a time of day for changing clocks.\n#\n# Go with 2011-09-13 0:00s.\n\n# From Alexander Krivenyshev (2014-07-01):\n# According to the Russian news (ITAR-TASS News Agency)\n# http://en.itar-tass.com/russia/738562\n# the State Duma has approved ... the draft bill on returning to\n# winter time standard and return Russia 11 time zones.  The new\n# regulations will come into effect on October 26, 2014 at 02:00 ...\n# http://asozd2.duma.gov.ru/main.nsf/(Spravka)?OpenAgent&RN=431985-6&02\n# Here is a link where we put together table (based on approved Bill N\n# 431985-6) with proposed 11 Russian time zones and corresponding\n# areas/cities/administrative centers in the Russian Federation (in English):\n# http://www.worldtimezone.com/dst_news/dst_news_russia65.html\n#\n# From Alexander Krivenyshev (2014-07-22):\n# Putin signed the Federal Law 431985-6 ... (in Russian)\n# http://itar-tass.com/obschestvo/1333711\n# http://www.pravo.gov.ru:8080/page.aspx?111660\n# http://www.kremlin.ru/acts/46279\n# From October 26, 2014 the new Russian time zone map will look like this:\n# http://www.worldtimezone.com/dst_news/dst_news_russia-map-2014-07.html\n\n# From Paul Eggert (2006-03-22):\n# Moscow time zone abbreviations after 1919-07-01, and Moscow rules after 1991,\n# are from Andrey A. Chernov.  The rest is from Shanks & Pottenger,\n# except we follow Chernov's report that 1992 DST transitions were Sat\n# 23:00, not Sun 02:00s.\n#\n# From Stanislaw A. Kuzikowski (1994-06-29):\n# But now it is some months since Novosibirsk is 3 hours ahead of Moscow!\n# I do not know why they have decided to make this change;\n# as far as I remember it was done exactly during winter->summer switching\n# so we (Novosibirsk) simply did not switch.\n#\n# From Andrey A. Chernov (1996-10-04):\n# 'MSK' and 'MSD' were born and used initially on Moscow computers with\n# UNIX-like OSes by several developer groups (e.g. Demos group, Kiae group)....\n# The next step was the UUCP network, the Relcom predecessor\n# (used mainly for mail), and MSK/MSD was actively used there.\n#\n# From Chris Carrier (1996-10-30):\n# According to a friend of mine who rode the Trans-Siberian Railroad from\n# Moscow to Irkutsk in 1995, public air and rail transport in Russia ...\n# still follows Moscow time, no matter where in Russia it is located.\n#\n# For Grozny, Chechnya, we have the following story from\n# John Daniszewski, \"Scavengers in the Rubble\", Los Angeles Times (2001-02-07):\n# News - often false - is spread by word of mouth.  A rumor that it was\n# time to move the clocks back put this whole city out of sync with\n# the rest of Russia for two weeks - even soldiers stationed here began\n# enforcing curfew at the wrong time.\n#\n# From Gwillim Law (2001-06-05):\n# There's considerable evidence that Sakhalin Island used to be in\n# UTC+11, and has changed to UTC+10, in this decade.  I start with the\n# SSIM, which listed Yuzhno-Sakhalinsk in zone RU10 along with Magadan\n# until February 1997, and then in RU9 with Khabarovsk and Vladivostok\n# since September 1997....  Although the Kuril Islands are\n# administratively part of Sakhalin oblast', they appear to have\n# remained on UTC+11 along with Magadan.\n\n# From Marat Nigametzianov (2018-07-16):\n# this is link to order from 1956 about timezone in USSR\n# http://astro.uni-altai.ru/~orion/blog/2011/11/novyie-granitsyi-chasovyih-poyasov-v-sssr/\n#\n# From Paul Eggert (2018-07-16):\n# Perhaps someone could translate the above-mentioned link and use it\n# to correct our data for the ex-Soviet Union.  It cites the following:\n# «Поясное время и новые границы часовых поясов» / сост. П.Н. Долгов,\n# отв. ред. Г.Д. Бурдун - М: Комитет стандартов, мер и измерительных\n# приборов при Совете Министров СССР, Междуведомственная комиссия\n# единой службы времени, 1956 г.\n# This book looks like it would be a helpful resource for the Soviet\n# Union through 1956.  Although a copy was in the Scientific Library\n# of Tomsk State University, I have not been able to track down a copy nearby.\n#\n# From Stepan Golosunov (2018-07-21):\n# http://astro.uni-altai.ru/~orion/blog/2015/05/center-reforma-ischisleniya-vremeni-br-na-territorii-sssr-v-1957-godu-center/\n# says that the 1956 decision to change time belts' borders was not\n# implemented as planned in 1956 and the change happened in 1957.\n# There is also the problem that actual time zones were different from\n# the official time belts (and from many time belts' maps) as there were\n# numerous exceptions to application of time belt rules.  For example,\n# https://ru.wikipedia.org/wiki/Московское_время#Перемещение_границы_применения_московского_времени_на_восток\n# says that by 1962 there were many regions in the 3rd time belt that\n# were on Moscow time, referring to a 1962 map.  By 1989 number of such\n# exceptions grew considerably.\n\n# From Tim Parenti (2014-07-06):\n# The comments detailing the coverage of each Russian zone are meant to assist\n# with maintenance only and represent our best guesses as to which regions\n# are covered by each zone.  They are not meant to be taken as an authoritative\n# listing.  The region codes listed come from\n# https://en.wikipedia.org/w/?title=Federal_subjects_of_Russia&oldid=611810498\n# and are used for convenience only; no guarantees are made regarding their\n# future stability.  ISO 3166-2:RU codes are also listed for first-level\n# divisions where available.\n\n# From Tim Parenti (2014-07-03):\n# Europe/Kaliningrad covers...\n# 39\tRU-KGD\tKaliningrad Oblast\n\n# From Paul Eggert (2019-07-25):\n# Although Shanks lists 1945-01-01 as the date for transition from\n# +01/+02 to +02/+03, more likely this is a placeholder.  Guess that\n# the transition occurred at 1945-04-10 00:00, which is about when\n# Königsberg surrendered to Soviet troops.  (Thanks to Alois Treindl.)\n\n# From Paul Eggert (2016-03-18):\n# The 1989 transition is from USSR act No. 227 (1989-03-14).\n\n# From Stepan Golosunov (2016-03-07):\n# http://www.rgo.ru/ru/kaliningradskoe-oblastnoe-otdelenie/ob-otdelenii/publikacii/kak-nam-zhilos-bez-letnego-vremeni\n# confirms that the 1989 change to Moscow-1 was implemented.\n# (The article, though, is misattributed to 1990 while saying that\n# summer->winter transition would be done on the 24 of September. But\n# 1990-09-24 was Monday, while 1989-09-24 was Sunday as expected.)\n# ...\n# http://www.kaliningradka.ru/site_pc/cherez/index.php?ELEMENT_ID=40091\n# says that Kaliningrad switched to Moscow-1 on 1989-03-26, avoided\n# at the last moment switch to Moscow-1 on 1991-03-31, switched to\n# Moscow on 1991-11-03, switched to Moscow-1 on 1992-01-19.\n\nZone Europe/Kaliningrad\t 1:22:00 -\tLMT\t1893 Apr\n\t\t\t 1:00\tC-Eur\tCE%sT\t1945 Apr 10\n\t\t\t 2:00\tPoland\tEE%sT\t1946 Apr  7\n\t\t\t 3:00\tRussia\tMSK/MSD\t1989 Mar 26  2:00s\n\t\t\t 2:00\tRussia\tEE%sT\t2011 Mar 27  2:00s\n\t\t\t 3:00\t-\t%z\t2014 Oct 26  2:00s\n\t\t\t 2:00\t-\tEET\n\n\n# From Paul Eggert (2016-02-21), per Tim Parenti (2014-07-03) and\n# Oscar van Vlijmen (2001-08-25):\n# Europe/Moscow covers...\n# 01\tRU-AD\tAdygea, Republic of\n# 05\tRU-DA\tDagestan, Republic of\n# 06\tRU-IN\tIngushetia, Republic of\n# 07\tRU-KB\tKabardino-Balkar Republic\n# 08\tRU-KL\tKalmykia, Republic of\n# 09\tRU-KC\tKarachay-Cherkess Republic\n# 10\tRU-KR\tKarelia, Republic of\n# 11\tRU-KO\tKomi Republic\n# 12\tRU-ME\tMari El Republic\n# 13\tRU-MO\tMordovia, Republic of\n# 15\tRU-SE\tNorth Ossetia-Alania, Republic of\n# 16\tRU-TA\tTatarstan, Republic of\n# 20\tRU-CE\tChechen Republic\n# 21\tRU-CU\tChuvash Republic\n# 23\tRU-KDA\tKrasnodar Krai\n# 26\tRU-STA\tStavropol Krai\n# 29\tRU-ARK\tArkhangelsk Oblast\n# 31\tRU-BEL\tBelgorod Oblast\n# 32\tRU-BRY\tBryansk Oblast\n# 33\tRU-VLA\tVladimir Oblast\n# 35\tRU-VLG\tVologda Oblast\n# 36\tRU-VOR\tVoronezh Oblast\n# 37\tRU-IVA\tIvanovo Oblast\n# 40\tRU-KLU\tKaluga Oblast\n# 44\tRU-KOS\tKostroma Oblast\n# 46\tRU-KRS\tKursk Oblast\n# 47\tRU-LEN\tLeningrad Oblast\n# 48\tRU-LIP\tLipetsk Oblast\n# 50\tRU-MOS\tMoscow Oblast\n# 51\tRU-MUR\tMurmansk Oblast\n# 52\tRU-NIZ\tNizhny Novgorod Oblast\n# 53\tRU-NGR\tNovgorod Oblast\n# 57\tRU-ORL\tOryol Oblast\n# 58\tRU-PNZ\tPenza Oblast\n# 60\tRU-PSK\tPskov Oblast\n# 61\tRU-ROS\tRostov Oblast\n# 62\tRU-RYA\tRyazan Oblast\n# 67\tRU-SMO\tSmolensk Oblast\n# 68\tRU-TAM\tTambov Oblast\n# 69\tRU-TVE\tTver Oblast\n# 71\tRU-TUL\tTula Oblast\n# 76\tRU-YAR\tYaroslavl Oblast\n# 77\tRU-MOW\tMoscow\n# 78\tRU-SPE\tSaint Petersburg\n# 83\tRU-NEN\tNenets Autonomous Okrug\n\n# From Paul Eggert (2016-08-23):\n# The Soviets switched to UT-based time in 1919.  Decree No. 59\n# (1919-02-08) http://istmat.info/node/35567 established UT-based time\n# zones, and Decree No. 147 (1919-03-29) http://istmat.info/node/35854\n# specified a transition date of 1919-07-01, apparently at 00:00 UT.\n# No doubt only the Soviet-controlled regions switched on that date;\n# later transitions to UT-based time in other parts of Russia are\n# taken from what appear to be guesses by Shanks.\n# (Thanks to Alexander Belopolsky for pointers to the decrees.)\n\n# From Stepan Golosunov (2016-03-07):\n# 11. Regions-violators, 1981-1982.\n# Wikipedia refers to\n# http://maps.monetonos.ru/maps/raznoe/Old_Maps/Old_Maps/Articles/022/3_1981.html\n# http://besp.narod.ru/nauka_1981_3.htm\n#\n# The second link provides two articles scanned from the Nauka i Zhizn\n# magazine No. 3, 1981 and a scan of the short article attributed to\n# the Trud newspaper from February 1982.  The first link provides the\n# same Nauka i Zhizn articles converted to the text form (but misses\n# time belt changes map).\n#\n# The second Nauka i Zhizn article says that in addition to\n# introduction of summer time on 1981-04-01 there are some time belt\n# border changes on 1981-10-01, mostly affecting Nenets Autonomous\n# Okrug, Krasnoyarsk Krai, Yakutia, Magadan Oblast and Chukotka\n# according to the provided map (colored one).  In addition to that\n# \"time violators\" (regions which were not using rules of the time\n# belts in which they were located) would not be moving off the DST on\n# 1981-10-01 to restore the decree time usage.  (Komi ASSR was\n# supposed to repeat that move in October 1982 to account for the 2\n# hour difference.)  Map depicting \"time violators\" before 1981-10-01\n# is also provided.\n#\n# The article from Trud says that 1981-10-01 changes caused problems\n# and some territories would be moved to pre-1981-10-01 time by not\n# moving to summer time on 1982-04-01.  Namely: Dagestan,\n# Kabardino-Balkar, Kalmyk, Komi, Mari, Mordovian, North Ossetian,\n# Tatar, Chechen-Ingush and Chuvash ASSR, Krasnodar and Stavropol\n# krais, Arkhangelsk, Vladimir, Vologda, Voronezh, Gorky, Ivanovo,\n# Kostroma, Lipetsk, Penza, Rostov, Ryazan, Tambov, Tyumen and\n# Yaroslavl oblasts, Nenets and Evenk autonomous okrugs, Khatangsky\n# district of Taymyr Autonomous Okrug.  As a result Evenk Autonomous\n# Okrug and Khatangsky district of Taymyr Autonomous Okrug would end\n# up on Moscow+4, Tyumen Oblast on Moscow+2 and the rest on Moscow\n# time.\n#\n# http://astrozet.net/files/Zones/DOC/RU/1980-925.txt\n# attributes the 1982 changes to the Act of the Council of Ministers\n# of the USSR No. 126 from 18.02.1982.  1980-925.txt also adds\n# Udmurtia to the list of affected territories and lists Khatangsky\n# district separately from Taymyr Autonomous Okrug.  Probably erroneously.\n#\n# The affected territories are currently listed under Europe/Moscow,\n# Asia/Yekaterinburg and Asia/Krasnoyarsk.\n#\n# 12. Udmurtia\n# The fact that Udmurtia is depicted as a violator in the Nauka i\n# Zhizn article hints at Izhevsk being on different time from\n# Kuybyshev before 1981-10-01. Udmurtia is not mentioned in the 1989 act.\n# http://astrozet.net/files/Zones/DOC/RU/1980-925.txt\n# implies Udmurtia was on Moscow time after 1982-04-01.\n# Wikipedia implies Udmurtia being on Moscow+1 until 1991.\n#\n# ...\n#\n# All Russian zones are supposed to have by default a -1 change at\n# 1991-03-31 2:00 (cancellation of the decree time in the USSR) and a +1\n# change at 1992-01-19 2:00 (restoration of the decree time in Russia).\n#\n# There were some exceptions, though.\n# Wikipedia says newspapers listed Astrakhan, Saratov, Kirov, Volgograd,\n# Izhevsk, Grozny, Kazan and Samara as such exceptions for the 1992\n# change. (Different newspapers providing different lists. And some\n# lists found in the internet are quite wild.)\n#\n# And apparently some exceptions were reverted in the last moment.\n# http://www.kaliningradka.ru/site_pc/cherez/index.php?ELEMENT_ID=40091\n# says that Kaliningrad decided not to be an exception 2 days before the\n# 1991-03-31 switch and one person at\n# https://izhevsk.ru/forum_light_message/50/682597-m8369040.html\n# says he remembers that Samara opted out of the 1992-01-19 exception\n# 2 days before the switch.\n#\n# From Alois Treindl (2022-02-15):\n# the Russian wikipedia page\n# https://ru.wikipedia.org/wiki/Московское_время#Перемещение_границы_применения_московского_времени_на_восток\n# contains the sentence (in Google translation) \"In the autumn of\n# 1981, Arkhangelsk, Vologda, Yaroslavl, Ivanovo, Vladimir, Ryazan,\n# Lipetsk, Voronezh, Rostov-on-Don, Krasnodar and regions to the east\n# of those named (about 30 in total) parted ways with Moscow time.\n# However, the convenience of common time with Moscow turned out to be\n# decisive - in 1982, these regions again switched to Moscow time.\"\n# Shanks International atlas has similar information, and also the\n# Russian book Zaitsev A., Kutalev D. A new astrologer's reference\n# book. Coordinates of cities and time corrections, - The World of\n# Urania, 2012 (Russian: Зайцев А., Куталёв Д., Новый справочник\n# астролога. Координаты городов и временные поправки).\n# To me it seems that an extra zone is needed, which starts with LMT\n# util 1919, later follows Moscow since 1930, but deviates from it\n# between 1 October 1981 until 1 April 1982.\n#\n#\n# From Paul Eggert (2022-02-15):\n# Given the above, we appear to be missing some Zone entries for the\n# chaotic early 1980s in Russia.  It's not clear what these entries\n# should be.  For now, sweep this under the rug and just document the\n# time in Moscow.\n\n# From Vladimir Karpinsky (2014-07-08):\n# LMT in Moscow (before Jul 3, 1916) is 2:30:17, that was defined by Moscow\n# Observatory (coordinates: 55° 45' 29.70\", 37° 34' 05.30\")....\n# LMT in Moscow since Jul 3, 1916 is 2:31:01 as a result of new standard.\n# (The info is from the book by Byalokoz ... p. 18.)\n# The time in St. Petersburg as capital of Russia was defined by\n# Pulkov observatory, near St. Petersburg.  In 1916 LMT Moscow\n# was synchronized with LMT St. Petersburg (+30 minutes), (Pulkov observatory\n# coordinates: 59° 46' 18.70\", 30° 19' 40.70\") so 30° 19' 40.70\" >\n# 2h01m18.7s = 2:01:19.  LMT Moscow = LMT St.Petersburg + 30m 2:01:19 + 0:30 =\n# 2:31:19 ...\n#\n# From Paul Eggert (2014-07-08):\n# Milne does not list Moscow, but suggests that its time might be listed in\n# Résumés mensuels et annuels des observations météorologiques (1895).\n# Presumably this is OCLC 85825704, a journal published with parallel text in\n# Russian and French.  This source has not been located; go with Karpinsky.\n\nZone Europe/Moscow\t 2:30:17 -\tLMT\t1880\n\t\t\t 2:30:17 -\tMMT\t1916 Jul  3 # Moscow Mean Time\n\t\t\t 2:31:19 Russia\t%s\t1919 Jul  1  0:00u\n\t\t\t 3:00\tRussia\t%s\t1921 Oct\n\t\t\t 3:00\tRussia\tMSK/MSD\t1922 Oct\n\t\t\t 2:00\t-\tEET\t1930 Jun 21\n\t\t\t 3:00\tRussia\tMSK/MSD\t1991 Mar 31  2:00s\n\t\t\t 2:00\tRussia\tEE%sT\t1992 Jan 19  2:00s\n\t\t\t 3:00\tRussia\tMSK/MSD\t2011 Mar 27  2:00s\n\t\t\t 4:00\t-\tMSK\t2014 Oct 26  2:00s\n\t\t\t 3:00\t-\tMSK\n\n\n# From Paul Eggert (2016-12-06):\n# Europe/Simferopol covers Crimea.\n\nZone Europe/Simferopol\t 2:16:24 -\tLMT\t1880\n\t\t\t 2:16\t-\tSMT\t1924 May  2 # Simferopol Mean T\n\t\t\t 2:00\t-\tEET\t1930 Jun 21\n\t\t\t 3:00\t-\tMSK\t1941 Nov\n\t\t\t 1:00\tC-Eur\tCE%sT\t1944 Apr 13\n\t\t\t 3:00\tRussia\tMSK/MSD\t1990\n\t\t\t 3:00\t-\tMSK\t1990 Jul  1  2:00\n\t\t\t 2:00\t-\tEET\t1992 Mar 20\n# Central Crimea used Moscow time 1994/1997.\n#\n# From Paul Eggert (2022-07-21):\n# The _Economist_ (1994-05-28, p 45) reported that central Crimea switched\n# from Kyiv to Moscow time sometime after the January 1994 elections.\n# Shanks (1999) says \"date of change uncertain\", but implies that it happened\n# sometime between the 1994 DST switches.  Shanks & Pottenger simply say\n# 1994-09-25 03:00, but that can't be right.  For now, guess it\n# changed in May.  This change evidently didn't last long; see below.\n\t\t\t 2:00\tC-Eur\tEE%sT\t1994 May\n# From IATA SSIM (1994/1997), which also said that Kerch is still like Kyiv.\n\t\t\t 3:00\tC-Eur\tMSK/MSD\t1996 Mar 31  0:00s\n\t\t\t 3:00\t1:00\tMSD\t1996 Oct 27  3:00s\n# IATA SSIM (1997-09) said Crimea switched to EET/EEST.\n# Assume it happened in March by not changing the clocks.\n\t\t\t 3:00\t-\tMSK\t1997 Mar lastSun  1:00u\n# From Alexander Krivenyshev (2014-03-17):\n# time change at 2:00 (2am) on March 30, 2014\n# https://vz.ru/news/2014/3/17/677464.html\n# From Tim Parenti (2022-07-01), per Paul Eggert (2014-03-30):\n# The clocks at the railway station in Simferopol were put forward from 22:00\n# to 24:00 the previous day in a \"symbolic ceremony\"; however, per\n# contemporaneous news reports, \"ordinary Crimeans [made] the daylight savings\n# time switch at 2am\" on Sunday.\n# https://www.business-standard.com/article/pti-stories/crimea-to-set-clocks-to-russia-time-114033000014_1.html\n# https://www.reuters.com/article/us-ukraine-crisis-crimea-time/crimea-switches-to-moscow-time-amid-incorporation-frenzy-idUKBREA2S0LT20140329\n# https://www.bbc.com/news/av/world-europe-26806583\n\t\t\t 2:00\tEU\tEE%sT\t2014 Mar 30  2:00\n\t\t\t 4:00\t-\tMSK\t2014 Oct 26  2:00s\n\t\t\t 3:00\t-\tMSK\n\n\n# From Paul Eggert (2016-03-18):\n# Europe/Astrakhan covers:\n# 30\tRU-AST\tAstrakhan Oblast\n#\n# The 1989 transition is from USSR act No. 227 (1989-03-14).\n\n# From Alexander Krivenyshev (2016-01-12):\n# On February 10, 2016 Astrakhan Oblast got approval by the Federation\n# Council to change its time zone to UTC+4 (from current UTC+3 Moscow time)....\n# This Federal Law shall enter into force on 27 March 2016 at 02:00.\n# From Matt Johnson (2016-03-09):\n# http://publication.pravo.gov.ru/Document/View/0001201602150056\n\nZone Europe/Astrakhan\t 3:12:12 -\tLMT\t1924 May\n\t\t\t 3:00\t-\t%z\t1930 Jun 21\n\t\t\t 4:00\tRussia\t%z\t1989 Mar 26  2:00s\n\t\t\t 3:00\tRussia\t%z\t1991 Mar 31  2:00s\n\t\t\t 4:00\t-\t%z\t1992 Mar 29  2:00s\n\t\t\t 3:00\tRussia\t%z\t2011 Mar 27  2:00s\n\t\t\t 4:00\t-\t%z\t2014 Oct 26  2:00s\n\t\t\t 3:00\t-\t%z\t2016 Mar 27  2:00s\n\t\t\t 4:00\t-\t%z\n\n# From Paul Eggert (2016-11-11):\n# Europe/Volgograd covers:\n# 34\tRU-VGG\tVolgograd Oblast\n# The 1988 transition is from USSR act No. 5 (1988-01-04).\n\n# From Alexander Fetisov (2018-09-20):\n# Volgograd region in southern Russia (Europe/Volgograd) change\n# timezone from UTC+3 to UTC+4 from 28oct2018.\n# http://sozd.parliament.gov.ru/bill/452878-7\n#\n# From Stepan Golosunov (2018-10-11):\n# The law has been published today on\n# http://publication.pravo.gov.ru/Document/View/0001201810110037\n\n# From Alexander Krivenyshev (2020-11-27):\n# The State Duma approved (Nov 24, 2020) the transition of the Volgograd\n# region to the Moscow time zone....\n# https://sozd.duma.gov.ru/bill/1012130-7\n#\n# From Stepan Golosunov (2020-12-05):\n# Currently proposed text for the second reading (expected on December 8) ...\n# changes the date to December 27. https://v1.ru/text/gorod/2020/12/04/69601031/\n#\n# From Stepan Golosunov (2020-12-22):\n# The law was published today on\n# http://publication.pravo.gov.ru/Document/View/0001202012220002\n\nZone Europe/Volgograd\t 2:57:40 -\tLMT\t1920 Jan  3\n\t\t\t 3:00\t-\t%z\t1930 Jun 21\n\t\t\t 4:00\t-\t%z\t1961 Nov 11\n\t\t\t 4:00\tRussia\t%z\t1988 Mar 27  2:00s\n\t\t\t 3:00\tRussia\tMSK/MSD\t1991 Mar 31  2:00s\n\t\t\t 4:00\t-\t%z\t1992 Mar 29  2:00s\n\t\t\t 3:00\tRussia\tMSK/MSD\t2011 Mar 27  2:00s\n\t\t\t 4:00\t-\tMSK\t2014 Oct 26  2:00s\n\t\t\t 3:00\t-\tMSK\t2018 Oct 28  2:00s\n\t\t\t 4:00\t-\t%z\t2020 Dec 27  2:00s\n\t\t\t 3:00\t-\tMSK\n\n# From Paul Eggert (2016-11-11):\n# Europe/Saratov covers:\n# 64\tRU-SAR\tSaratov Oblast\n\n# From Yuri Konotopov (2016-11-11):\n# Dec 4, 2016 02:00 UTC+3....  Saratov Region's local time will be ... UTC+4.\n# From Stepan Golosunov (2016-11-11):\n# ... Byalokoz listed Saratov on 03:04:18.\n# From Stepan Golosunov (2016-11-22):\n# http://publication.pravo.gov.ru/Document/View/0001201611220031\n\nZone Europe/Saratov\t 3:04:18 -\tLMT\t1919 Jul  1  0:00u\n\t\t\t 3:00\t-\t%z\t1930 Jun 21\n\t\t\t 4:00\tRussia\t%z\t1988 Mar 27  2:00s\n\t\t\t 3:00\tRussia\t%z\t1991 Mar 31  2:00s\n\t\t\t 4:00\t-\t%z\t1992 Mar 29  2:00s\n\t\t\t 3:00\tRussia\t%z\t2011 Mar 27  2:00s\n\t\t\t 4:00\t-\t%z\t2014 Oct 26  2:00s\n\t\t\t 3:00\t-\t%z\t2016 Dec  4  2:00s\n\t\t\t 4:00\t-\t%z\n\n# From Paul Eggert (2016-03-18):\n# Europe/Kirov covers:\n# 43\tRU-KIR\tKirov Oblast\n# The 1989 transition is from USSR act No. 227 (1989-03-14).\n#\nZone Europe/Kirov\t 3:18:48 -\tLMT\t1919 Jul  1  0:00u\n\t\t\t 3:00\t-\t%z\t1930 Jun 21\n\t\t\t 4:00\tRussia\t%z\t1989 Mar 26  2:00s\n\t\t\t 3:00\tRussia\tMSK/MSD\t1991 Mar 31  2:00s\n\t\t\t 4:00\t-\t%z\t1992 Mar 29  2:00s\n\t\t\t 3:00\tRussia\tMSK/MSD\t2011 Mar 27  2:00s\n\t\t\t 4:00\t-\tMSK\t2014 Oct 26  2:00s\n\t\t\t 3:00\t-\tMSK\n\n# From Tim Parenti (2014-07-03), per Oscar van Vlijmen (2001-08-25):\n# Europe/Samara covers...\n# 18\tRU-UD\tUdmurt Republic\n# 63\tRU-SAM\tSamara Oblast\n\n# From Paul Eggert (2016-03-18):\n# Byalokoz 1919 says Samara was 3:20:20.\n# The 1989 transition is from USSR act No. 227 (1989-03-14).\n\nZone Europe/Samara\t 3:20:20 -\tLMT\t1919 Jul  1  0:00u\n\t\t\t 3:00\t-\t%z\t1930 Jun 21\n\t\t\t 4:00\t-\t%z\t1935 Jan 27\n\t\t\t 4:00\tRussia\t%z\t1989 Mar 26  2:00s\n\t\t\t 3:00\tRussia\t%z\t1991 Mar 31  2:00s\n\t\t\t 2:00\tRussia\t%z\t1991 Sep 29  2:00s\n\t\t\t 3:00\t-\t%z\t1991 Oct 20  3:00\n\t\t\t 4:00\tRussia\t%z\t2010 Mar 28  2:00s\n\t\t\t 3:00\tRussia\t%z\t2011 Mar 27  2:00s\n\t\t\t 4:00\t-\t%z\n\n# From Paul Eggert (2016-03-18):\n# Europe/Ulyanovsk covers:\n# 73\tRU-ULY\tUlyanovsk Oblast\n\n# The 1989 transition is from USSR act No. 227 (1989-03-14).\n\n# From Alexander Krivenyshev (2016-02-17):\n# Ulyanovsk ... on their way to change time zones by March 27, 2016 at 2am.\n# Ulyanovsk Oblast ... from MSK to MSK+1 (UTC+3 to UTC+4) ...\n# 920582-6 ... 02/17/2016 The State Duma passed the bill in the first reading.\n# From Matt Johnson (2016-03-09):\n# http://publication.pravo.gov.ru/Document/View/0001201603090051\n\nZone Europe/Ulyanovsk\t 3:13:36 -\tLMT\t1919 Jul  1  0:00u\n\t\t\t 3:00\t-\t%z\t1930 Jun 21\n\t\t\t 4:00\tRussia\t%z\t1989 Mar 26  2:00s\n\t\t\t 3:00\tRussia\t%z\t1991 Mar 31  2:00s\n\t\t\t 2:00\tRussia\t%z\t1992 Jan 19  2:00s\n\t\t\t 3:00\tRussia\t%z\t2011 Mar 27  2:00s\n\t\t\t 4:00\t-\t%z\t2014 Oct 26  2:00s\n\t\t\t 3:00\t-\t%z\t2016 Mar 27  2:00s\n\t\t\t 4:00\t-\t%z\n\n# From Tim Parenti (2014-07-03), per Oscar van Vlijmen (2001-08-25):\n# Asia/Yekaterinburg covers...\n# 02\tRU-BA\tBashkortostan, Republic of\n# 90\tRU-PER\tPerm Krai\n# 45\tRU-KGN\tKurgan Oblast\n# 56\tRU-ORE\tOrenburg Oblast\n# 66\tRU-SVE\tSverdlovsk Oblast\n# 72\tRU-TYU\tTyumen Oblast\n# 74\tRU-CHE\tChelyabinsk Oblast\n# 86\tRU-KHM\tKhanty-Mansi Autonomous Okrug - Yugra\n# 89\tRU-YAN\tYamalo-Nenets Autonomous Okrug\n#\n# Note: Effective 2005-12-01, (59) Perm Oblast and (81) Komi-Permyak\n# Autonomous Okrug merged to form (90, RU-PER) Perm Krai.\n\n# Milne says Yekaterinburg was 4:02:32.9.\n# Byalokoz 1919 says its provincial time was based on Perm, at 3:45:05.\n# Assume it switched on 1916-07-03, the time of the new standard.\n# The 1919 and 1930 transitions are from Shanks.\n\n\t\t#STDOFF\t 4:02:32.9\nZone Asia/Yekaterinburg\t 4:02:33 -\tLMT\t1916 Jul  3\n\t\t\t 3:45:05 -\tPMT\t1919 Jul 15  4:00\n\t\t\t 4:00\t-\t%z\t1930 Jun 21\n\t\t\t 5:00\tRussia\t%z\t1991 Mar 31  2:00s\n\t\t\t 4:00\tRussia\t%z\t1992 Jan 19  2:00s\n\t\t\t 5:00\tRussia\t%z\t2011 Mar 27  2:00s\n\t\t\t 6:00\t-\t%z\t2014 Oct 26  2:00s\n\t\t\t 5:00\t-\t%z\n\n\n# From Tim Parenti (2014-07-03), per Oscar van Vlijmen (2001-08-25):\n# Asia/Omsk covers...\n# 55\tRU-OMS\tOmsk Oblast\n\n# Byalokoz 1919 says Omsk was 4:53:30.\n\nZone Asia/Omsk\t\t 4:53:30 -\tLMT\t1919 Nov 14\n\t\t\t 5:00\t-\t%z\t1930 Jun 21\n\t\t\t 6:00\tRussia\t%z\t1991 Mar 31  2:00s\n\t\t\t 5:00\tRussia\t%z\t1992 Jan 19  2:00s\n\t\t\t 6:00\tRussia\t%z\t2011 Mar 27  2:00s\n\t\t\t 7:00\t-\t%z\t2014 Oct 26  2:00s\n\t\t\t 6:00\t-\t%z\n\n# From Paul Eggert (2016-02-22):\n# Asia/Barnaul covers:\n# 04\tRU-AL\tAltai Republic\n# 22\tRU-ALT\tAltai Krai\n\n# Data before 1991 are from Shanks & Pottenger.\n\n# From Stepan Golosunov (2016-03-07):\n# Letter of Bank of Russia from 1995-05-25\n# http://www.bestpravo.ru/rossijskoje/lj-akty/y3a.htm\n# suggests that Altai Republic transitioned to Moscow+3 on\n# 1995-05-28.\n#\n# https://regnum.ru/news/society/1957270.html\n# has some historical data for Altai Krai:\n# before 1957: west part on UT+6, east on UT+7\n# after 1957: UT+7\n# since 1995: UT+6\n# http://barnaul.rusplt.ru/index/pochemu_altajskij_kraj_okazalsja_v_neprivychnom_chasovom_pojase-17648.html\n# confirms that and provides more details including 1995-05-28 transition date.\n\n# From Alexander Krivenyshev (2016-02-17):\n# Altai Krai and Altai Republic on their way to change time zones\n# by March 27, 2016 at 2am....\n# Altai Republic / Gorno-Altaysk MSK+3 to MSK+4 (UTC+6 to UTC+7) ...\n# Altai Krai / Barnaul MSK+3 to MSK+4 (UTC+6 to UTC+7)\n# From Matt Johnson (2016-03-09):\n# http://publication.pravo.gov.ru/Document/View/0001201603090043\n# http://publication.pravo.gov.ru/Document/View/0001201603090038\n\nZone Asia/Barnaul\t 5:35:00 -\tLMT\t1919 Dec 10\n\t\t\t 6:00\t-\t%z\t1930 Jun 21\n\t\t\t 7:00\tRussia\t%z\t1991 Mar 31  2:00s\n\t\t\t 6:00\tRussia\t%z\t1992 Jan 19  2:00s\n\t\t\t 7:00\tRussia\t%z\t1995 May 28\n\t\t\t 6:00\tRussia\t%z\t2011 Mar 27  2:00s\n\t\t\t 7:00\t-\t%z\t2014 Oct 26  2:00s\n\t\t\t 6:00\t-\t%z\t2016 Mar 27  2:00s\n\t\t\t 7:00\t-\t%z\n\n# From Paul Eggert (2016-03-18):\n# Asia/Novosibirsk covers:\n# 54\tRU-NVS\tNovosibirsk Oblast\n\n# From Stepan Golosunov (2016-05-30):\n# http://asozd2.duma.gov.ru/main.nsf/(Spravka)?OpenAgent&RN=1085784-6\n# moves Novosibirsk oblast from UTC+6 to UTC+7.\n# From Stepan Golosunov (2016-07-04):\n# The law was signed yesterday and published today on\n# http://publication.pravo.gov.ru/Document/View/0001201607040064\n\nZone Asia/Novosibirsk\t 5:31:40 -\tLMT\t1919 Dec 14  6:00\n\t\t\t 6:00\t-\t%z\t1930 Jun 21\n\t\t\t 7:00\tRussia\t%z\t1991 Mar 31  2:00s\n\t\t\t 6:00\tRussia\t%z\t1992 Jan 19  2:00s\n\t\t\t 7:00\tRussia\t%z\t1993 May 23 # say Shanks & P.\n\t\t\t 6:00\tRussia\t%z\t2011 Mar 27  2:00s\n\t\t\t 7:00\t-\t%z\t2014 Oct 26  2:00s\n\t\t\t 6:00\t-\t%z\t2016 Jul 24  2:00s\n\t\t\t 7:00\t-\t%z\n\n# From Paul Eggert (2016-03-18):\n# Asia/Tomsk covers:\n# 70\tRU-TOM\tTomsk Oblast\n\n# From Stepan Golosunov (2016-03-24):\n# Byalokoz listed Tomsk at 5:39:51.\n\n# From Stanislaw A. Kuzikowski (1994-06-29):\n# Tomsk is still 4 hours ahead of Moscow.\n\n# From Stepan Golosunov (2016-03-19):\n# http://pravo.gov.ru/proxy/ips/?docbody=&nd=102075743\n# (fifth time belt being UTC+5+1(decree time)\n# / UTC+5+1(decree time)+1(summer time)) ...\n# Note that time belts (numbered from 2 (Moscow) to 12 according to their\n# GMT/UTC offset and having too many exceptions like regions formally\n# belonging to one belt but using time from another) were replaced\n# with time zones in 2011 with different numbering (there was a\n# 2-hour gap between second and third zones in 2011-2014).\n\n# From Stepan Golosunov (2016-04-12):\n# http://asozd2.duma.gov.ru/main.nsf/(SpravkaNew)?OpenAgent&RN=1006865-6\n# This bill was approved in the first reading today.  It moves Tomsk oblast\n# from UTC+6 to UTC+7 and is supposed to come into effect on 2016-05-29 at\n# 2:00.  The bill needs to be approved in the second and the third readings by\n# the State Duma, approved by the Federation Council, signed by the President\n# and published to become a law.  Minor changes in the text are to be expected\n# before the second reading (references need to be updated to account for the\n# recent changes).\n#\n# Judging by the ultra-short one-day amendments period, recent similar laws,\n# the State Duma schedule and the Federation Council schedule\n# http://www.duma.gov.ru/legislative/planning/day-shedule/por_vesna_2016/\n# http://council.gov.ru/activity/meetings/schedule/63303\n# I speculate that the final text of the bill will be proposed tomorrow, the\n# bill will be approved in the second and the third readings on Friday,\n# approved by the Federation Council on 2016-04-20, signed by the President and\n# published as a law around 2016-04-26.\n\n# From Matt Johnson (2016-04-26):\n# http://publication.pravo.gov.ru/Document/View/0001201604260048\n\nZone\tAsia/Tomsk\t 5:39:51 -\tLMT\t1919 Dec 22\n\t\t\t 6:00\t-\t%z\t1930 Jun 21\n\t\t\t 7:00\tRussia\t%z\t1991 Mar 31  2:00s\n\t\t\t 6:00\tRussia\t%z\t1992 Jan 19  2:00s\n\t\t\t 7:00\tRussia\t%z\t2002 May  1  3:00\n\t\t\t 6:00\tRussia\t%z\t2011 Mar 27  2:00s\n\t\t\t 7:00\t-\t%z\t2014 Oct 26  2:00s\n\t\t\t 6:00\t-\t%z\t2016 May 29  2:00s\n\t\t\t 7:00\t-\t%z\n\n\n# From Tim Parenti (2014-07-03):\n# Asia/Novokuznetsk covers...\n# 42\tRU-KEM\tKemerovo Oblast\n\n# From Alexander Krivenyshev (2009-10-13):\n# Kemerovo oblast' (Kemerovo region) in Russia will change current time zone on\n# March 28, 2010:\n# from current Russia Zone 6 - Krasnoyarsk Time Zone (KRA) UTC +0700\n# to Russia Zone 5 - Novosibirsk Time Zone (NOV) UTC +0600\n#\n# This is according to Government of Russia decree No. 740, on September\n# 14, 2009 \"Application in the territory of the Kemerovo region the Fifth\n# time zone.\" (\"Russia Zone 5\" or old \"USSR Zone 5\" is GMT +0600)\n#\n# Russian Government web site (Russian language)\n# http://www.government.ru/content/governmentactivity/rfgovernmentdecisions/archive/2009/09/14/991633.htm\n# or Russian-English translation by WorldTimeZone.com with reference\n# map to local region and new Russia Time Zone map after March 28, 2010\n# http://www.worldtimezone.com/dst_news/dst_news_russia03.html\n#\n# Thus, when Russia will switch to DST on the night of March 28, 2010\n# Kemerovo region (Kemerovo oblast') will not change the clock.\n\n# From Tim Parenti (2014-07-02), per Alexander Krivenyshev (2014-07-02):\n# The Kemerovo region will remain at UTC+7 through the 2014-10-26 change, thus\n# realigning itself with KRAT.\n\nZone Asia/Novokuznetsk\t 5:48:48 -\tLMT\t1924 May  1\n\t\t\t 6:00\t-\t%z\t1930 Jun 21\n\t\t\t 7:00\tRussia\t%z\t1991 Mar 31  2:00s\n\t\t\t 6:00\tRussia\t%z\t1992 Jan 19  2:00s\n\t\t\t 7:00\tRussia\t%z\t2010 Mar 28  2:00s\n\t\t\t 6:00\tRussia\t%z\t2011 Mar 27  2:00s\n\t\t\t 7:00\t-\t%z\n\n# From Tim Parenti (2014-07-03), per Oscar van Vlijmen (2001-08-25):\n# Asia/Krasnoyarsk covers...\n# 17\tRU-TY\tTuva Republic\n# 19\tRU-KK\tKhakassia, Republic of\n# 24\tRU-KYA\tKrasnoyarsk Krai\n#\n# Note: Effective 2007-01-01, (88) Evenk Autonomous Okrug and (84) Taymyr\n# Autonomous Okrug were merged into (24, RU-KYA) Krasnoyarsk Krai.\n\n# Byalokoz 1919 says Krasnoyarsk was 6:11:26.\n\nZone Asia/Krasnoyarsk\t 6:11:26 -\tLMT\t1920 Jan  6\n\t\t\t 6:00\t-\t%z\t1930 Jun 21\n\t\t\t 7:00\tRussia\t%z\t1991 Mar 31  2:00s\n\t\t\t 6:00\tRussia\t%z\t1992 Jan 19  2:00s\n\t\t\t 7:00\tRussia\t%z\t2011 Mar 27  2:00s\n\t\t\t 8:00\t-\t%z\t2014 Oct 26  2:00s\n\t\t\t 7:00\t-\t%z\n\n\n# From Tim Parenti (2014-07-03), per Oscar van Vlijmen (2001-08-25):\n# Asia/Irkutsk covers...\n# 03\tRU-BU\tBuryatia, Republic of\n# 38\tRU-IRK\tIrkutsk Oblast\n#\n# Note: Effective 2008-01-01, (85) Ust-Orda Buryat Autonomous Okrug was\n# merged into (38, RU-IRK) Irkutsk Oblast.\n\n# Milne 1899 says Irkutsk was 6:57:15.\n# Byalokoz 1919 says Irkutsk was 6:57:05.\n# Go with Byalokoz.\n\nZone Asia/Irkutsk\t 6:57:05 -\tLMT\t1880\n\t\t\t 6:57:05 -\tIMT\t1920 Jan 25 # Irkutsk Mean Time\n\t\t\t 7:00\t-\t%z\t1930 Jun 21\n\t\t\t 8:00\tRussia\t%z\t1991 Mar 31  2:00s\n\t\t\t 7:00\tRussia\t%z\t1992 Jan 19  2:00s\n\t\t\t 8:00\tRussia\t%z\t2011 Mar 27  2:00s\n\t\t\t 9:00\t-\t%z\t2014 Oct 26  2:00s\n\t\t\t 8:00\t-\t%z\n\n\n# From Tim Parenti (2014-07-06):\n# Asia/Chita covers...\n# 92\tRU-ZAB\tZabaykalsky Krai\n#\n# Note: Effective 2008-03-01, (75) Chita Oblast and (80) Agin-Buryat\n# Autonomous Okrug merged to form (92, RU-ZAB) Zabaykalsky Krai.\n\n# From Alexander Krivenyshev (2016-01-02):\n# [The] time zone in the Trans-Baikal Territory (Zabaykalsky Krai) -\n# Asia/Chita [is changing] from UTC+8 to UTC+9.  Effective date will\n# be March 27, 2016 at 2:00am....\n# http://publication.pravo.gov.ru/Document/View/0001201512300107\n\nZone Asia/Chita\t 7:33:52 -\tLMT\t1919 Dec 15\n\t\t\t 8:00\t-\t%z\t1930 Jun 21\n\t\t\t 9:00\tRussia\t%z\t1991 Mar 31  2:00s\n\t\t\t 8:00\tRussia\t%z\t1992 Jan 19  2:00s\n\t\t\t 9:00\tRussia\t%z\t2011 Mar 27  2:00s\n\t\t\t10:00\t-\t%z\t2014 Oct 26  2:00s\n\t\t\t 8:00\t-\t%z\t2016 Mar 27  2:00\n\t\t\t 9:00\t-\t%z\n\n\n# From Tim Parenti (2014-07-03), per Oscar van Vlijmen (2009-11-29):\n# Asia/Yakutsk covers...\n# 28\tRU-AMU\tAmur Oblast\n#\n# ...and parts of (14, RU-SA) Sakha (Yakutia) Republic:\n# 14-02\t****\tAldansky District\n# 14-04\t****\tAmginsky District\n# 14-05\t****\tAnabarsky District\n# 14-06\t****\tBulunsky District\n# 14-07\t****\tVerkhnevilyuysky District\n# 14-10\t****\tVilyuysky District\n# 14-11\t****\tGorny District\n# 14-12\t****\tZhigansky District\n# 14-13\t****\tKobyaysky District\n# 14-14\t****\tLensky District\n# 14-15\t****\tMegino-Kangalassky District\n# 14-16\t****\tMirninsky District\n# 14-18\t****\tNamsky District\n# 14-19\t****\tNeryungrinsky District\n# 14-21\t****\tNyurbinsky District\n# 14-23\t****\tOlenyoksky District\n# 14-24\t****\tOlyokminsky District\n# 14-26\t****\tSuntarsky District\n# 14-27\t****\tTattinsky District\n# 14-29\t****\tUst-Aldansky District\n# 14-32\t****\tKhangalassky District\n# 14-33\t****\tChurapchinsky District\n# 14-34\t****\tEveno-Bytantaysky National District\n\n# From Tim Parenti (2014-07-03):\n# Our commentary seems to have lost mention of (14-19) Neryungrinsky District.\n# Since the surrounding districts of Sakha are all YAKT, assume this is, too.\n# Also assume its history has been the same as the rest of Asia/Yakutsk.\n\n# Byalokoz 1919 says Yakutsk was 8:38:58.\n\nZone Asia/Yakutsk\t 8:38:58 -\tLMT\t1919 Dec 15\n\t\t\t 8:00\t-\t%z\t1930 Jun 21\n\t\t\t 9:00\tRussia\t%z\t1991 Mar 31  2:00s\n\t\t\t 8:00\tRussia\t%z\t1992 Jan 19  2:00s\n\t\t\t 9:00\tRussia\t%z\t2011 Mar 27  2:00s\n\t\t\t10:00\t-\t%z\t2014 Oct 26  2:00s\n\t\t\t 9:00\t-\t%z\n\n\n# From Tim Parenti (2014-07-03), per Oscar van Vlijmen (2009-11-29):\n# Asia/Vladivostok covers...\n# 25\tRU-PRI\tPrimorsky Krai\n# 27\tRU-KHA\tKhabarovsk Krai\n# 79\tRU-YEV\tJewish Autonomous Oblast\n#\n# ...and parts of (14, RU-SA) Sakha (Yakutia) Republic:\n# 14-09\t****\tVerkhoyansky District\n# 14-31\t****\tUst-Yansky District\n\n# Milne 1899 says Vladivostok was 8:47:33.5.\n# Byalokoz 1919 says Vladivostok was 8:47:31.\n# Go with Byalokoz.\n\nZone Asia/Vladivostok\t 8:47:31 -\tLMT\t1922 Nov 15\n\t\t\t 9:00\t-\t%z\t1930 Jun 21\n\t\t\t10:00\tRussia\t%z\t1991 Mar 31  2:00s\n\t\t\t 9:00\tRussia\t%z\t1992 Jan 19  2:00s\n\t\t\t10:00\tRussia\t%z\t2011 Mar 27  2:00s\n\t\t\t11:00\t-\t%z\t2014 Oct 26  2:00s\n\t\t\t10:00\t-\t%z\n\n\n# From Tim Parenti (2014-07-03):\n# Asia/Khandyga covers parts of (14, RU-SA) Sakha (Yakutia) Republic:\n# 14-28\t****\tTomponsky District\n# 14-30\t****\tUst-Maysky District\n\n# From Arthur David Olson (2022-03-21):\n# Tomponsky and Ust-Maysky switched from Vladivostok time to Yakutsk time\n# in 2011.\n\n# From Paul Eggert (2012-11-25):\n# Shanks and Pottenger (2003) has Khandyga on Yakutsk time.\n# Make a wild guess that it switched to Vladivostok time in 2004.\n# This transition is no doubt wrong, but we have no better info.\n\nZone Asia/Khandyga\t 9:02:13 -\tLMT\t1919 Dec 15\n\t\t\t 8:00\t-\t%z\t1930 Jun 21\n\t\t\t 9:00\tRussia\t%z\t1991 Mar 31  2:00s\n\t\t\t 8:00\tRussia\t%z\t1992 Jan 19  2:00s\n\t\t\t 9:00\tRussia\t%z\t2004\n\t\t\t10:00\tRussia\t%z\t2011 Mar 27  2:00s\n\t\t\t11:00\t-\t%z\t2011 Sep 13  0:00s # Decree 725?\n\t\t\t10:00\t-\t%z\t2014 Oct 26  2:00s\n\t\t\t 9:00\t-\t%z\n\n\n# From Tim Parenti (2014-07-03):\n# Asia/Sakhalin covers...\n# 65\tRU-SAK\tSakhalin Oblast\n# ...with the exception of:\n# 65-11\t****\tSevero-Kurilsky District (North Kuril Islands)\n\n# From Matt Johnson (2016-02-22):\n# Asia/Sakhalin is moving (in entirety) from UTC+10 to UTC+11 ...\n# (2016-03-09):\n# http://publication.pravo.gov.ru/Document/View/0001201603090044\n\n# The Zone name should be Asia/Yuzhno-Sakhalinsk, but that's too long.\nZone Asia/Sakhalin\t 9:30:48 -\tLMT\t1905 Aug 23\n\t\t\t 9:00\t-\t%z\t1945 Aug 25\n\t\t\t11:00\tRussia\t%z\t1991 Mar 31  2:00s # Sakhalin T\n\t\t\t10:00\tRussia\t%z\t1992 Jan 19  2:00s\n\t\t\t11:00\tRussia\t%z\t1997 Mar lastSun  2:00s\n\t\t\t10:00\tRussia\t%z\t2011 Mar 27  2:00s\n\t\t\t11:00\t-\t%z\t2014 Oct 26  2:00s\n\t\t\t10:00\t-\t%z\t2016 Mar 27  2:00s\n\t\t\t11:00\t-\t%z\n\n\n# From Tim Parenti (2014-07-03), per Oscar van Vlijmen (2009-11-29):\n# Asia/Magadan covers...\n# 49\tRU-MAG\tMagadan Oblast\n\n# From Tim Parenti (2014-07-06), per Alexander Krivenyshev (2014-07-02):\n# Magadan Oblast is moving from UTC+12 to UTC+10 on 2014-10-26; however,\n# several districts of Sakha Republic as well as Severo-Kurilsky District of\n# the Sakhalin Oblast (also known as the North Kuril Islands), represented\n# until now by Asia/Magadan, will instead move to UTC+11.  These regions will\n# need their own zone.\n\n# From Alexander Krivenyshev (2016-03-27):\n# ... draft bill 948300-6 to change its time zone from UTC+10 to UTC+11 ...\n# will take ... effect ... on April 24, 2016 at 2 o'clock\n#\n# From Matt Johnson (2016-04-05):\n# ... signed by the President today ...\n# http://publication.pravo.gov.ru/Document/View/0001201604050038\n\nZone Asia/Magadan\t10:03:12 -\tLMT\t1924 May  2\n\t\t\t10:00\t-\t%z\t1930 Jun 21 # Magadan Time\n\t\t\t11:00\tRussia\t%z\t1991 Mar 31  2:00s\n\t\t\t10:00\tRussia\t%z\t1992 Jan 19  2:00s\n\t\t\t11:00\tRussia\t%z\t2011 Mar 27  2:00s\n\t\t\t12:00\t-\t%z\t2014 Oct 26  2:00s\n\t\t\t10:00\t-\t%z\t2016 Apr 24  2:00s\n\t\t\t11:00\t-\t%z\n\n\n# From Tim Parenti (2014-07-06):\n# Asia/Srednekolymsk covers parts of (14, RU-SA) Sakha (Yakutia) Republic:\n# 14-01\t****\tAbyysky District\n# 14-03\t****\tAllaikhovsky District\n# 14-08\t****\tVerkhnekolymsky District\n# 14-17\t****\tMomsky District\n# 14-20\t****\tNizhnekolymsky District\n# 14-25\t****\tSrednekolymsky District\n#\n# ...and parts of (65, RU-SAK) Sakhalin Oblast:\n# 65-11\t****\tSevero-Kurilsky District (North Kuril Islands)\n\n# From Tim Parenti (2014-07-02):\n# Oymyakonsky District of Sakha Republic (represented by Ust-Nera), along with\n# most of Sakhalin Oblast (represented by Sakhalin) will be moving to UTC+10 on\n# 2014-10-26 to stay aligned with VLAT/SAKT; however, Severo-Kurilsky District\n# of the Sakhalin Oblast (also known as the North Kuril Islands, represented by\n# Severo-Kurilsk) will remain on UTC+11.\n\n# From Tim Parenti (2014-07-06):\n# Assume North Kuril Islands have history like Magadan before 2011-03-27.\n# There is a decent chance this is wrong, in which case a new zone\n# Asia/Severo-Kurilsk would become necessary.\n#\n# Srednekolymsk and Zyryanka are the most populous places amongst these\n# districts, but have very similar populations.  In fact, Wikipedia currently\n# lists them both as having 3528 people, exactly 1668 males and 1860 females\n# each!  (Yikes!)\n# https://en.wikipedia.org/w/?title=Srednekolymsky_District&oldid=603435276\n# https://en.wikipedia.org/w/?title=Verkhnekolymsky_District&oldid=594378493\n# Assume this is a mistake, albeit an amusing one.\n#\n# Looking at censuses, the populations of the two municipalities seem to have\n# fluctuated recently.  Zyryanka was more populous than Srednekolymsk in the\n# 1989 and 2002 censuses, but Srednekolymsk was more populous in the most\n# recent (2010) census, 3525 to 3170.  (See pages 195 and 197 of\n# http://www.gks.ru/free_doc/new_site/perepis2010/croc/Documents/Vol1/pub-01-05.pdf\n# in Russian.)  In addition, Srednekolymsk appears to be a much older\n# settlement and the population of Zyryanka seems to be declining.\n# Go with Srednekolymsk.\n\nZone Asia/Srednekolymsk\t10:14:52 -\tLMT\t1924 May  2\n\t\t\t10:00\t-\t%z\t1930 Jun 21\n\t\t\t11:00\tRussia\t%z\t1991 Mar 31  2:00s\n\t\t\t10:00\tRussia\t%z\t1992 Jan 19  2:00s\n\t\t\t11:00\tRussia\t%z\t2011 Mar 27  2:00s\n\t\t\t12:00\t-\t%z\t2014 Oct 26  2:00s\n\t\t\t11:00\t-\t%z\n\n\n# From Tim Parenti (2014-07-03):\n# Asia/Ust-Nera covers parts of (14, RU-SA) Sakha (Yakutia) Republic:\n# 14-22\t****\tOymyakonsky District\n\n# From Arthur David Olson (2022-03-21):\n# Oymyakonsky and the Kuril Islands switched from\n# Magadan time to Vladivostok time in 2011.\n#\n# From Tim Parenti (2014-07-06), per Alexander Krivenyshev (2014-07-02):\n# It's unlikely that any of the Kuril Islands were involved in such a switch,\n# as the South and Middle Kurils have been on UTC+11 (SAKT) with the rest of\n# Sakhalin Oblast since at least 2011-09, and the North Kurils have been on\n# UTC+12 since at least then, too.\n\nZone Asia/Ust-Nera\t 9:32:54 -\tLMT\t1919 Dec 15\n\t\t\t 8:00\t-\t%z\t1930 Jun 21\n\t\t\t 9:00\tRussia\t%z\t1981 Apr  1\n\t\t\t11:00\tRussia\t%z\t1991 Mar 31  2:00s\n\t\t\t10:00\tRussia\t%z\t1992 Jan 19  2:00s\n\t\t\t11:00\tRussia\t%z\t2011 Mar 27  2:00s\n\t\t\t12:00\t-\t%z\t2011 Sep 13  0:00s # Decree 725?\n\t\t\t11:00\t-\t%z\t2014 Oct 26  2:00s\n\t\t\t10:00\t-\t%z\n\n\n# From Tim Parenti (2014-07-03), per Oscar van Vlijmen (2001-08-25):\n# Asia/Kamchatka covers...\n# 91\tRU-KAM\tKamchatka Krai\n#\n# Note: Effective 2007-07-01, (41) Kamchatka Oblast and (82) Koryak\n# Autonomous Okrug merged to form (91, RU-KAM) Kamchatka Krai.\n\n# The Zone name should be Asia/Petropavlovsk-Kamchatski or perhaps\n# Asia/Petropavlovsk-Kamchatsky, but these are too long.\nZone Asia/Kamchatka\t10:34:36 -\tLMT\t1922 Nov 10\n\t\t\t11:00\t-\t%z\t1930 Jun 21\n\t\t\t12:00\tRussia\t%z\t1991 Mar 31  2:00s\n\t\t\t11:00\tRussia\t%z\t1992 Jan 19  2:00s\n\t\t\t12:00\tRussia\t%z\t2010 Mar 28  2:00s\n\t\t\t11:00\tRussia\t%z\t2011 Mar 27  2:00s\n\t\t\t12:00\t-\t%z\n\n\n# From Tim Parenti (2014-07-03):\n# Asia/Anadyr covers...\n# 87\tRU-CHU\tChukotka Autonomous Okrug\n\nZone Asia/Anadyr\t11:49:56 -\tLMT\t1924 May  2\n\t\t\t12:00\t-\t%z\t1930 Jun 21\n\t\t\t13:00\tRussia\t%z\t1982 Apr  1  0:00s\n\t\t\t12:00\tRussia\t%z\t1991 Mar 31  2:00s\n\t\t\t11:00\tRussia\t%z\t1992 Jan 19  2:00s\n\t\t\t12:00\tRussia\t%z\t2010 Mar 28  2:00s\n\t\t\t11:00\tRussia\t%z\t2011 Mar 27  2:00s\n\t\t\t12:00\t-\t%z\n\n# Bosnia & Herzegovina\n# Croatia\n# Kosovo\n# Montenegro\n# North Macedonia\n# Serbia\n# Slovenia\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tEurope/Belgrade\t1:22:00\t-\tLMT\t1884\n\t\t\t1:00\t-\tCET\t1941 Apr 18 23:00\n\t\t\t1:00\tC-Eur\tCE%sT\t1945\n\t\t\t1:00\t-\tCET\t1945 May  8  2:00s\n\t\t\t1:00\t1:00\tCEST\t1945 Sep 16  2:00s\n# Metod Koželj reports that the legal date of\n# transition to EU rules was 1982-11-27, for all of Yugoslavia at the time.\n# Shanks & Pottenger don't give as much detail, so go with Koželj.\n\t\t\t1:00\t-\tCET\t1982 Nov 27\n\t\t\t1:00\tEU\tCE%sT\n\n# Spain\n#\n# From Paul Eggert (2016-12-14):\n#\n# The source for Europe/Madrid before 2013 is:\n# Planesas P. La hora oficial en España y sus cambios.\n# Anuario del Observatorio Astronómico de Madrid (2013, in Spanish).\n# http://astronomia.ign.es/rknowsys-theme/images/webAstro/paginas/documentos/Anuario/lahoraoficialenespana.pdf\n# As this source says that historical time in the Canaries is obscure,\n# and it does not discuss Ceuta, stick with Shanks for now for that data.\n#\n# In the 1918 and 1919 fallback transitions in Spain, the clock for\n# the hour-longer day officially kept going after midnight, so that\n# the repeated instances of that day's 00:00 hour were 24 hours apart,\n# with a fallback transition from the second occurrence of 00:59... to\n# the next day's 00:00.  Our data format cannot represent this\n# directly, and instead repeats the first hour of the next day, with a\n# fallback transition from the next day's 00:59... to 00:00.\n\n# From Michael Deckers (2016-12-15):\n# The Royal Decree of 1900-07-26 quoted by Planesas, online at\n# https://www.boe.es/datos/pdfs/BOE//1900/209/A00383-00384.pdf\n# says in its article 5 (my translation):\n# These dispositions will enter into force beginning with the\n# instant at which, according to the time indicated in article 1,\n# the 1st day of January of 1901 will begin.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tSpain\t1918\tonly\t-\tApr\t15\t23:00\t1:00\tS\nRule\tSpain\t1918\t1919\t-\tOct\t 6\t24:00s\t0\t-\nRule\tSpain\t1919\tonly\t-\tApr\t 6\t23:00\t1:00\tS\nRule\tSpain\t1924\tonly\t-\tApr\t16\t23:00\t1:00\tS\nRule\tSpain\t1924\tonly\t-\tOct\t 4\t24:00s\t0\t-\nRule\tSpain\t1926\tonly\t-\tApr\t17\t23:00\t1:00\tS\nRule\tSpain\t1926\t1929\t-\tOct\tSat>=1\t24:00s\t0\t-\nRule\tSpain\t1927\tonly\t-\tApr\t 9\t23:00\t1:00\tS\nRule\tSpain\t1928\tonly\t-\tApr\t15\t 0:00\t1:00\tS\nRule\tSpain\t1929\tonly\t-\tApr\t20\t23:00\t1:00\tS\n# Republican Spain during the civil war; it controlled Madrid until 1939-03-28.\nRule\tSpain\t1937\tonly\t-\tJun\t16\t23:00\t1:00\tS\nRule\tSpain\t1937\tonly\t-\tOct\t 2\t24:00s\t0\t-\nRule\tSpain\t1938\tonly\t-\tApr\t 2\t23:00\t1:00\tS\nRule\tSpain\t1938\tonly\t-\tApr\t30\t23:00\t2:00\tM\nRule\tSpain\t1938\tonly\t-\tOct\t 2\t24:00\t1:00\tS\n# The following rules are for unified Spain again.\n#\n# Planesas does not say what happened in Madrid between its fall on\n# 1939-03-28 and the Nationalist spring-forward transition on\n# 1939-04-15.  For lack of better info, assume Madrid's clocks did not\n# change during that period.\n#\n# The first rule is commented out, as it is redundant for Republican Spain.\n#Rule\tSpain\t1939\tonly\t-\tApr\t15\t23:00\t1:00\tS\nRule\tSpain\t1939\tonly\t-\tOct\t 7\t24:00s\t0\t-\nRule\tSpain\t1942\tonly\t-\tMay\t 2\t23:00\t1:00\tS\nRule\tSpain\t1942\tonly\t-\tSep\t 1\t 1:00\t0\t-\nRule\tSpain\t1943\t1946\t-\tApr\tSat>=13\t23:00\t1:00\tS\nRule\tSpain\t1943\t1944\t-\tOct\tSun>=1\t 1:00\t0\t-\nRule\tSpain\t1945\t1946\t-\tSep\tlastSun\t 1:00\t0\t-\nRule\tSpain\t1949\tonly\t-\tApr\t30\t23:00\t1:00\tS\nRule\tSpain\t1949\tonly\t-\tOct\t 2\t 1:00\t0\t-\nRule\tSpain\t1974\t1975\t-\tApr\tSat>=12\t23:00\t1:00\tS\nRule\tSpain\t1974\t1975\t-\tOct\tSun>=1\t 1:00\t0\t-\nRule\tSpain\t1976\tonly\t-\tMar\t27\t23:00\t1:00\tS\nRule\tSpain\t1976\t1977\t-\tSep\tlastSun\t 1:00\t0\t-\nRule\tSpain\t1977\tonly\t-\tApr\t 2\t23:00\t1:00\tS\nRule\tSpain\t1978\tonly\t-\tApr\t 2\t 2:00s\t1:00\tS\nRule\tSpain\t1978\tonly\t-\tOct\t 1\t 2:00s\t0\t-\n# Nationalist Spain during the civil war\n#Rule NatSpain\t1937\tonly\t-\tMay\t22\t23:00\t1:00\tS\n#Rule NatSpain\t1937\t1938\t-\tOct\tSat>=1\t24:00s\t0\t-\n#Rule NatSpain\t1938\tonly\t-\tMar\t26\t23:00\t1:00\tS\n# The following rules are copied from Morocco from 1967 through 1978,\n# except with \"S\" letters.\nRule SpainAfrica 1967\tonly\t-\tJun\t 3\t12:00\t1:00\tS\nRule SpainAfrica 1967\tonly\t-\tOct\t 1\t 0:00\t0\t-\nRule SpainAfrica 1974\tonly\t-\tJun\t24\t 0:00\t1:00\tS\nRule SpainAfrica 1974\tonly\t-\tSep\t 1\t 0:00\t0\t-\nRule SpainAfrica 1976\t1977\t-\tMay\t 1\t 0:00\t1:00\tS\nRule SpainAfrica 1976\tonly\t-\tAug\t 1\t 0:00\t0\t-\nRule SpainAfrica 1977\tonly\t-\tSep\t28\t 0:00\t0\t-\nRule SpainAfrica 1978\tonly\t-\tJun\t 1\t 0:00\t1:00\tS\nRule SpainAfrica 1978\tonly\t-\tAug\t 4\t 0:00\t0\t-\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tEurope/Madrid\t-0:14:44 -\tLMT\t1901 Jan  1  0:00u\n\t\t\t 0:00\tSpain\tWE%sT\t1940 Mar 16 23:00\n\t\t\t 1:00\tSpain\tCE%sT\t1979\n\t\t\t 1:00\tEU\tCE%sT\nZone\tAfrica/Ceuta\t-0:21:16 -\tLMT\t1901 Jan  1  0:00u\n\t\t\t 0:00\t-\tWET\t1918 May  6 23:00\n\t\t\t 0:00\t1:00\tWEST\t1918 Oct  7 23:00\n\t\t\t 0:00\t-\tWET\t1924\n\t\t\t 0:00\tSpain\tWE%sT\t1929\n\t\t\t 0:00\t-\tWET\t1967 # Help zishrink.awk.\n\t\t\t 0:00 SpainAfrica WE%sT\t1984 Mar 16\n\t\t\t 1:00\t-\tCET\t1986\n\t\t\t 1:00\tEU\tCE%sT\nZone\tAtlantic/Canary\t-1:01:36 -\tLMT\t1922 Mar # Las Palmas de Gran C.\n\t\t\t-1:00\t-\t%z\t1946 Sep 30  1:00\n\t\t\t 0:00\t-\tWET\t1980 Apr  6  0:00s\n\t\t\t 0:00\t1:00\tWEST\t1980 Sep 28  1:00u\n\t\t\t 0:00\tEU\tWE%sT\n# IATA SSIM (1996-09) says the Canaries switch at 2:00u, not 1:00u.\n# Ignore this for now, as the Canaries are part of the EU.\n\n\n# Germany (Busingen enclave)\n# Liechtenstein\n# Switzerland\n#\n# From Howse:\n# By the end of the 18th century clocks and watches became commonplace\n# and their performance improved enormously.  Communities began to keep\n# mean time in preference to apparent time - Geneva from 1780 ....\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\n# From Whitman (who writes \"Midnight?\"):\n# Rule\tSwiss\t1940\tonly\t-\tNov\t 2\t0:00\t1:00\tS\n# Rule\tSwiss\t1940\tonly\t-\tDec\t31\t0:00\t0\t-\n# From Shanks & Pottenger:\n# Rule\tSwiss\t1941\t1942\t-\tMay\tSun>=1\t2:00\t1:00\tS\n# Rule\tSwiss\t1941\t1942\t-\tOct\tSun>=1\t0:00\t0\t-\n\n# From Alois Treindl (2008-12-17):\n# I have researched the DST usage in Switzerland during the 1940ies.\n#\n# As I wrote in an earlier message, I suspected the current tzdata values\n# to be wrong. This is now verified.\n#\n# I have found copies of the original ruling by the Swiss Federal\n# government, in 'Eidgenössische Gesetzessammlung 1941 and 1942' (Swiss\n# federal law collection)...\n#\n# DST began on Monday 5 May 1941, 1:00 am by shifting the clocks to 2:00 am\n# DST ended on Monday 6 Oct 1941, 2:00 am by shifting the clocks to 1:00 am.\n#\n# DST began on Monday, 4 May 1942 at 01:00 am\n# DST ended on Monday, 5 Oct 1942 at 02:00 am\n#\n# There was no DST in 1940, I have checked the law collection carefully.\n# It is also indicated by the fact that the 1942 entry in the law\n# collection points back to 1941 as a reference, but no reference to any\n# other years are made.\n#\n# Newspaper articles I have read in the archives on 6 May 1941 reported\n# about the introduction of DST (Sommerzeit in German) during the previous\n# night as an absolute novelty, because this was the first time that such\n# a thing had happened in Switzerland.\n#\n# I have also checked 1916, because one book source (Gabriel, Traité de\n# l'heure dans le monde) claims that Switzerland had DST in 1916. This is\n# false, no official document could be found. Probably Gabriel got misled\n# by references to Germany, which introduced DST in 1916 for the first time.\n#\n# The tzdata rules for Switzerland must be changed to:\n# Rule  Swiss   1941    1942    -       May     Mon>=1  1:00    1:00    S\n# Rule  Swiss   1941    1942    -       Oct     Mon>=1  2:00    0       -\n#\n# The 1940 rules must be deleted.\n#\n# One further detail for Switzerland, which is probably out of scope for\n# most users of tzdata: The [Europe/Zurich zone] ...\n# describes all of Switzerland correctly, with the exception of\n# the Canton de Genève (Geneva, Genf). Between 1848 and 1894 Geneva did not\n# follow Bern Mean Time but kept its own local mean time.\n# To represent this, an extra zone would be needed.\n#\n# From Alois Treindl (2013-09-11):\n# The Federal regulations say\n# https://www.admin.ch/opc/de/classified-compilation/20071096/index.html\n# ... the meridian for Bern mean time ... is 7° 26' 22.50\".\n# Expressed in time, it is 0h29m45.5s.\n\n# From Pierre-Yves Berger (2013-09-11):\n# the \"Circulaire du conseil fédéral\" (December 11 1893)\n# http://www.amtsdruckschriften.bar.admin.ch/viewOrigDoc.do?id=10071353\n# clearly states that the [1894-06-01] change should be done at midnight\n# but if no one is present after 11 at night, could be postponed until one\n# hour before the beginning of service.\n\n# From Paul Eggert (2024-05-24):\n# Express BMT as 0:29:45.500, approximately the same precision 7° 26' 22.50\".\n#\n# We can find no reliable source for Shanks's assertion that all of Switzerland\n# except Geneva switched to Bern Mean Time at 00:00 on 1848-09-12.  This book:\n#\n#\tJakob Messerli. Gleichmässig, pünktlich, schnell. Zeiteinteilung und\n#\tZeitgebrauch in der Schweiz im 19. Jahrhundert. Chronos, Zurich 1995,\n#\tISBN 3-905311-68-2, OCLC 717570797.\n#\n# suggests that the transition was more gradual, and that the Swiss did not\n# agree about civil time during the transition.  The timekeeping it gives the\n# most detail for is postal and telegraph time: here, federal legislation (the\n# \"Bundesgesetz über die Erstellung von elektrischen Telegraphen\") passed on\n# 1851-11-23, and an official implementation notice was published 1853-07-16\n# (Bundesblatt 1853, Bd. II, S. 859).  On p 72 Messerli writes that in\n# practice since July 1853 Bernese time was used in \"all postal and telegraph\n# offices in Switzerland from Geneva to St. Gallen and Basel to Chiasso\"\n# (Google translation).  For now, model this transition as occurring on\n# 1853-07-16, though it probably occurred at some other date in Zurich, and\n# legal civil time probably changed at still some other transition date.\n\n# From Tobias Conradi (2011-09-12):\n# Büsingen <http://www.buesingen.de>, surrounded by the Swiss canton\n# Schaffhausen, did not start observing DST in 1980 as the rest of DE\n# (West Germany at that time) and DD (East Germany at that time) did.\n# DD merged into DE, the area is currently covered by code DE in ISO 3166-1,\n# which in turn is covered by the zone Europe/Berlin.\n#\n# Source for the time in Büsingen 1980:\n# http://www.srf.ch/player/video?id=c012c029-03b7-4c2b-9164-aa5902cd58d3\n#\n# From Arthur David Olson (2012-03-03):\n# Büsingen and Zurich have shared clocks since 1970.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tSwiss\t1941\t1942\t-\tMay\tMon>=1\t1:00\t1:00\tS\nRule\tSwiss\t1941\t1942\t-\tOct\tMon>=1\t2:00\t0\t-\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tEurope/Zurich\t0:34:08 -\tLMT\t1853 Jul 16 # See above comment.\n\t\t#STDOFF\t0:29:45.500\n\t\t\t0:29:46\t-\tBMT\t1894 Jun    # Bern Mean Time\n\t\t\t1:00\tSwiss\tCE%sT\t1981\n\t\t\t1:00\tEU\tCE%sT\n\n# Turkey\n\n# From Alois Treindl (2019-08-12):\n# http://www.astrolojidergisi.com/yazsaati.htm has researched the time zone\n# history of Turkey, based on newspaper archives and official documents.\n# From Paul Eggert (2019-08-28):\n# That source (Oya Vulaş, \"Türkiye'de Yaz Saati Uygulamaları\")\n# is used for 1940/1972, where it seems more reliable than our other\n# sources.\n\n# From Kıvanç Yazan (2019-08-12):\n# http://www.resmigazete.gov.tr/arsiv/14539.pdf#page=24\n# 1973-06-03 01:00 -> 02:00, 1973-11-04 02:00 -> 01:00\n#\n# http://www.resmigazete.gov.tr/arsiv/14829.pdf#page=1\n# 1974-03-31 02:00 -> 03:00, 1974-11-03 02:00 -> 01:00\n#\n# http://www.resmigazete.gov.tr/arsiv/15161.pdf#page=1\n# 1975-03-22 02:00 -> 03:00, 1975-11-02 02:00 -> 01:00\n#\n# http://www.resmigazete.gov.tr/arsiv/15535_1.pdf#page=1\n# 1976-03-21 02:00 -> 03:00, 1976-10-31 02:00 -> 01:00\n#\n# http://www.resmigazete.gov.tr/arsiv/15778.pdf#page=5\n# 1977-04-03 02:00 -> 03:00, 1977-10-16 02:00 -> 01:00,\n# 1978-04-02 02:00 -> 03:00 (not applied, see below)\n# 1978-10-15 02:00 -> 01:00 (not applied, see below)\n# 1979-04-01 02:00 -> 03:00 (not applied, see below)\n# 1979-10-14 02:00 -> 01:00 (not applied, see below)\n#\n# http://www.resmigazete.gov.tr/arsiv/16245.pdf#page=17\n# This cancels the previous decision, and repeats it only for 1978.\n# 1978-04-02 02:00 -> 03:00, 1978-10-15 02:00 -> 01:00\n# (not applied due to standard TZ change below)\n#\n# http://www.resmigazete.gov.tr/arsiv/16331.pdf#page=3\n# This decision changes the default longitude for Turkish time zone from 30\n# degrees East to 45 degrees East.  This means a standard TZ change, from +2\n# to +3.  This is published & applied on 1978-06-29.  At that time, Turkey was\n# already on summer time (already on 45E).  Hence, this new law just meant an\n# \"continuous summer time\".  Note that this was reversed in a few years.\n#\n# http://www.resmigazete.gov.tr/arsiv/18119_1.pdf#page=1\n# 1983-07-31 02:00 -> 03:00 (note that this jumps TZ to +4)\n# 1983-10-02 02:00 -> 01:00 (back to +3)\n#\n# http://www.resmigazete.gov.tr/arsiv/18561.pdf (page 1 and 34)\n# At this time, Turkey is still on +3 with no spring-forward on early\n# 1984.  This decision is published on 10/31/1984.  Page 1 declares\n# the decision of reverting the \"default longitude change\".  So the\n# standard time should go back to +3 (30E).  And page 34 explains when\n# that will happen: 1984-11-01 02:00 -> 01:00.  You can think of this\n# as \"end of continuous summer time, change of standard time zone\".\n#\n# http://www.resmigazete.gov.tr/arsiv/18713.pdf#page=1\n# 1985-04-20 01:00 -> 02:00, 1985-09-28 02:00 -> 01:00\n\n# From Kıvanç Yazan (2016-09-25):\n# 1) For 1986-2006, DST started at 01:00 local and ended at 02:00 local, with\n#    no exceptions.\n# 2) 1994's lastSun was overridden with Mar 20 ...\n# Here are official papers:\n# http://www.resmigazete.gov.tr/arsiv/19032.pdf#page=2 for 1986\n# http://www.resmigazete.gov.tr/arsiv/19400.pdf#page=4 for 1987\n# http://www.resmigazete.gov.tr/arsiv/19752.pdf#page=15 for 1988\n# http://www.resmigazete.gov.tr/arsiv/20102.pdf#page=6 for 1989\n# http://www.resmigazete.gov.tr/arsiv/20464.pdf#page=1 for 1990 - 1992\n# http://www.resmigazete.gov.tr/arsiv/21531.pdf#page=15 for 1993 - 1995\n# http://www.resmigazete.gov.tr/arsiv/21879.pdf#page=1 for overriding 1994\n# http://www.resmigazete.gov.tr/arsiv/22588.pdf#page=1 for 1996, 1997\n# http://www.resmigazete.gov.tr/arsiv/23286.pdf#page=10 for 1998 - 2000\n# http://www.resmigazete.gov.tr/eskiler/2001/03/20010324.htm#2  - for 2001\n# http://www.resmigazete.gov.tr/eskiler/2002/03/20020316.htm#2  - for 2002-2006\n# From Paul Eggert (2016-09-25):\n# Prefer the above sources to Shanks & Pottenger for timestamps after 1985.\n\n# From Steffen Thorsen (2007-03-09):\n# Starting 2007 though, it seems that they are adopting EU's 1:00 UTC\n# start/end time, according to the following page (2007-03-07):\n# http://www.ntvmsnbc.com/news/402029.asp\n# The official document is located here - it is in Turkish...:\n# http://rega.basbakanlik.gov.tr/eskiler/2007/03/20070307-7.htm\n# I was able to locate the following seemingly official document\n# (on a non-government server though) describing dates between 2002 and 2006:\n# http://www.alomaliye.com/bkk_2002_3769.htm\n\n# From Gökdeniz Karadağ (2011-03-10):\n# According to the articles linked below, Turkey will change into summer\n# time zone (GMT+3) on March 28, 2011 at 3:00 a.m. instead of March 27.\n# This change is due to a nationwide exam on 27th.\n# https://www.worldbulletin.net/?aType=haber&ArticleID=70872\n# Turkish:\n# https://www.hurriyet.com.tr/yaz-saati-uygulamasi-bir-gun-ileri-alindi-17230464\n\n# From Faruk Pasin (2014-02-14):\n# The DST for Turkey has been changed for this year because of the\n# Turkish Local election....\n# http://www.sabah.com.tr/Ekonomi/2014/02/12/yaz-saatinde-onemli-degisiklik\n# ... so Turkey will move clocks forward one hour on March 31 at 3:00 a.m.\n# From Randal L. Schwartz (2014-04-15):\n# Having landed on a flight from the states to Istanbul (via AMS) on March 31,\n# I can tell you that NOBODY (even the airlines) respected this timezone DST\n# change delay.  Maybe the word just didn't get out in time.\n# From Paul Eggert (2014-06-15):\n# The press reported massive confusion, as election officials obeyed the rule\n# change but cell phones (and airline baggage systems) did not.  See:\n# Kostidis M. Eventful elections in Turkey. Balkan News Agency\n# http://www.balkaneu.com/eventful-elections-turkey/ 2014-03-30.\n# I guess the best we can do is document the official time.\n\n# From Fatih (2015-09-29):\n# It's officially announced now by the Ministry of Energy.\n# Turkey delays winter time to 8th of November 04:00\n# http://www.aa.com.tr/tr/turkiye/yaz-saati-uygulamasi-8-kasimda-sona-erecek/362217\n#\n# From BBC News (2015-10-25):\n# Confused Turks are asking \"what's the time?\" after automatic clocks defied a\n# government decision ... \"For the next two weeks #Turkey is on EEST... Erdogan\n# Engineered Standard Time,\" said Twitter user @aysekarahasan.\n# http://www.bbc.com/news/world-europe-34631326\n\n# From Burak AYDIN (2016-09-08):\n# Turkey will stay in Daylight Saving Time even in winter....\n# http://www.resmigazete.gov.tr/eskiler/2016/09/20160908-2.pdf\n#\n# From Paul Eggert (2016-09-07):\n# The change is permanent, so this is the new standard time in Turkey.\n# It takes effect today, which is not much notice.\n\n# From Kıvanç Yazan (2017-10-28):\n# Turkey will go back to Daylight Saving Time starting 2018-10.\n# http://www.resmigazete.gov.tr/eskiler/2017/10/20171028-5.pdf\n#\n# From Even Scharning (2017-11-08):\n# ... today it was announced that the DST will become \"continuous\":\n# http://www.hurriyet.com.tr/son-dakika-yaz-saati-uygulamasi-surekli-hale-geldi-40637482\n# From Paul Eggert (2017-11-08):\n# Although Google Translate misfires on that source, it looks like\n# Turkey reversed last month's decision, and so will stay at +03.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tTurkey\t1916\tonly\t-\tMay\t 1\t0:00\t1:00\tS\nRule\tTurkey\t1916\tonly\t-\tOct\t 1\t0:00\t0\t-\nRule\tTurkey\t1920\tonly\t-\tMar\t28\t0:00\t1:00\tS\nRule\tTurkey\t1920\tonly\t-\tOct\t25\t0:00\t0\t-\nRule\tTurkey\t1921\tonly\t-\tApr\t 3\t0:00\t1:00\tS\nRule\tTurkey\t1921\tonly\t-\tOct\t 3\t0:00\t0\t-\nRule\tTurkey\t1922\tonly\t-\tMar\t26\t0:00\t1:00\tS\nRule\tTurkey\t1922\tonly\t-\tOct\t 8\t0:00\t0\t-\n# Whitman gives 1923 Apr 28 - Sep 16 and no DST in 1924-1925;\n# go with Shanks & Pottenger.\nRule\tTurkey\t1924\tonly\t-\tMay\t13\t0:00\t1:00\tS\nRule\tTurkey\t1924\t1925\t-\tOct\t 1\t0:00\t0\t-\nRule\tTurkey\t1925\tonly\t-\tMay\t 1\t0:00\t1:00\tS\nRule\tTurkey\t1940\tonly\t-\tJul\t 1\t0:00\t1:00\tS\nRule\tTurkey\t1940\tonly\t-\tOct\t 6\t0:00\t0\t-\nRule\tTurkey\t1940\tonly\t-\tDec\t 1\t0:00\t1:00\tS\nRule\tTurkey\t1941\tonly\t-\tSep\t21\t0:00\t0\t-\nRule\tTurkey\t1942\tonly\t-\tApr\t 1\t0:00\t1:00\tS\nRule\tTurkey\t1945\tonly\t-\tOct\t 8\t0:00\t0\t-\nRule\tTurkey\t1946\tonly\t-\tJun\t 1\t0:00\t1:00\tS\nRule\tTurkey\t1946\tonly\t-\tOct\t 1\t0:00\t0\t-\nRule\tTurkey\t1947\t1948\t-\tApr\tSun>=16\t0:00\t1:00\tS\nRule\tTurkey\t1947\t1951\t-\tOct\tSun>=2\t0:00\t0\t-\nRule\tTurkey\t1949\tonly\t-\tApr\t10\t0:00\t1:00\tS\nRule\tTurkey\t1950\tonly\t-\tApr\t16\t0:00\t1:00\tS\nRule\tTurkey\t1951\tonly\t-\tApr\t22\t0:00\t1:00\tS\n# DST for 15 months; unusual but we'll let it pass.\nRule\tTurkey\t1962\tonly\t-\tJul\t15\t0:00\t1:00\tS\nRule\tTurkey\t1963\tonly\t-\tOct\t30\t0:00\t0\t-\nRule\tTurkey\t1964\tonly\t-\tMay\t15\t0:00\t1:00\tS\nRule\tTurkey\t1964\tonly\t-\tOct\t 1\t0:00\t0\t-\nRule\tTurkey\t1973\tonly\t-\tJun\t 3\t1:00\t1:00\tS\nRule\tTurkey\t1973\t1976\t-\tOct\tSun>=31\t2:00\t0\t-\nRule\tTurkey\t1974\tonly\t-\tMar\t31\t2:00\t1:00\tS\nRule\tTurkey\t1975\tonly\t-\tMar\t22\t2:00\t1:00\tS\nRule\tTurkey\t1976\tonly\t-\tMar\t21\t2:00\t1:00\tS\nRule\tTurkey\t1977\t1978\t-\tApr\tSun>=1\t2:00\t1:00\tS\nRule\tTurkey\t1977\t1978\t-\tOct\tSun>=15\t2:00\t0\t-\nRule\tTurkey\t1978\tonly\t-\tJun\t29\t0:00\t0\t-\nRule\tTurkey\t1983\tonly\t-\tJul\t31\t2:00\t1:00\tS\nRule\tTurkey\t1983\tonly\t-\tOct\t 2\t2:00\t0\t-\nRule\tTurkey\t1985\tonly\t-\tApr\t20\t1:00s\t1:00\tS\nRule\tTurkey\t1985\tonly\t-\tSep\t28\t1:00s\t0\t-\nRule\tTurkey\t1986\t1993\t-\tMar\tlastSun\t1:00s\t1:00\tS\nRule\tTurkey\t1986\t1995\t-\tSep\tlastSun\t1:00s\t0\t-\nRule\tTurkey\t1994\tonly\t-\tMar\t20\t1:00s\t1:00\tS\nRule\tTurkey\t1995\t2006\t-\tMar\tlastSun\t1:00s\t1:00\tS\nRule\tTurkey\t1996\t2006\t-\tOct\tlastSun\t1:00s\t0\t-\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tEurope/Istanbul\t1:55:52 -\tLMT\t1880\n\t\t\t1:56:56\t-\tIMT\t1910 Oct # Istanbul Mean Time?\n\t\t\t2:00\tTurkey\tEE%sT\t1978 Jun 29\n\t\t\t3:00\tTurkey\t%z\t1984 Nov  1  2:00\n\t\t\t2:00\tTurkey\tEE%sT\t2007\n\t\t\t2:00\tEU\tEE%sT\t2011 Mar 27  1:00u\n\t\t\t2:00\t-\tEET\t2011 Mar 28  1:00u\n\t\t\t2:00\tEU\tEE%sT\t2014 Mar 30  1:00u\n\t\t\t2:00\t-\tEET\t2014 Mar 31  1:00u\n\t\t\t2:00\tEU\tEE%sT\t2015 Oct 25  1:00u\n\t\t\t2:00\t1:00\tEEST\t2015 Nov  8  1:00u\n\t\t\t2:00\tEU\tEE%sT\t2016 Sep  7\n\t\t\t3:00\t-\t%z\n\n# Ukraine\n#\n# From Alois Treindl (2014-03-01):\n# REGULATION A N O V A on March 20, 1992 N 139 ...  means that from\n# 1992 on, Ukraine had DST with begin time at 02:00 am, on last Sunday\n# in March, and end time 03:00 am, last Sunday in September....\n# CABINET OF MINISTERS OF UKRAINE RESOLUTION on May 13, 1996 N 509\n# \"On the order of computation time on the territory of Ukraine\" ....\n# As this cabinet decision is from May 1996, it seems likely that the\n# transition in March 1996, which predates it, was still at 2:00 am\n# and not at 3:00 as would have been under EU rules.\n# This is why I have set the change to EU rules into May 1996,\n# so that the change in March is stil covered by the Ukraine rule.\n# The next change in October 1996 happened under EU rules.\n#\n# From Paul Eggert (2022-08-27):\n# For now, assume that Ukraine's zones all followed the same rules,\n# except that Crimea switched to Moscow time in 1994 as described elsewhere.\n\n# From Igor Karpov, who works for the Ukrainian Ministry of Justice,\n# via Garrett Wollman (2003-01-27):\n# BTW, I've found the official document on this matter. It's government\n# regulations No. 509, May 13, 1996. In my poor translation it says:\n# \"Time in Ukraine is set to second timezone (Kiev time). Each last Sunday\n# of March at 3am the time is changing to 4am and each last Sunday of\n# October the time at 4am is changing to 3am\"\n\n# From Alexander Krivenyshev (2011-09-20):\n# On September 20, 2011 the deputies of the Verkhovna Rada agreed to\n# abolish the transfer clock to winter time.\n#\n# Bill No. 8330 of MP from the Party of Regions Oleg Nadoshi got\n# approval from 266 deputies.\n#\n# Ukraine abolishes transfer back to the winter time (in Russian)\n# http://news.mail.ru/politics/6861560/\n#\n# The Ukrainians will no longer change the clock (in Russian)\n# http://www.segodnya.ua/news/14290482.html\n#\n# Deputies cancelled the winter time (in Russian)\n# https://www.pravda.com.ua/rus/news/2011/09/20/6600616/\n#\n# From Philip Pizzey (2011-10-18):\n# Today my Ukrainian colleagues have informed me that the\n# Ukrainian parliament have decided that they will go to winter\n# time this year after all.\n#\n# From Udo Schwedt (2011-10-18):\n# As far as I understand, the recent change to the Ukrainian time zone\n# (Europe/Kiev) to introduce permanent daylight saving time (similar\n# to Russia) was reverted today:\n# http://portal.rada.gov.ua/rada/control/en/publish/article/info_left?art_id=287324&cat_id=105995\n#\n# Also reported by Alexander Bokovoy (2011-10-18) who also noted:\n# The law documents themselves are at\n# http://w1.c1.rada.gov.ua/pls/zweb_n/webproc4_1?id=&pf3511=41484\n\n# From Vladimir in Moscow via Alois Treindl re Kyiv time 1991/2 (2014-02-28):\n# First in Ukraine they changed Time zone from UTC+3 to UTC+2 with DST:\n#       03 25 1990 02:00 -03.00 1       Time Zone 3 with DST\n#       07 01 1990 02:00 -02.00 1       Time Zone 2 with DST\n# * Ukrainian Government's Resolution of 18.06.1990, No. 134.\n# http://search.ligazakon.ua/l_doc2.nsf/link1/T001500.html\n#\n# They did not end DST in September, 1990 (according to the law,\n# \"summer time\" was still in action):\n#       09 30 1990 03:00 -02.00 1       Time Zone 2 with DST\n# * Ukrainian Government's Resolution of 21.09.1990, No. 272.\n# http://search.ligazakon.ua/l_doc2.nsf/link1/KP900272.html\n#\n# Again no change in March, 1991 (\"summer time\" in action):\n#       03 31 1991 02:00 -02.00 1       Time Zone 2 with DST\n#\n# DST ended in September 1991 (\"summer time\" ended):\n#       09 29 1991 03:00 -02.00 0       Time Zone 2, no DST\n# * Ukrainian Government's Resolution of 25.09.1991, No. 225.\n# http://www.uazakon.com/documents/date_21/pg_iwgdoc.htm\n# This is an answer.\n#\n# Since 1992 they had normal DST procedure:\n#       03 29 1992 02:00 -02.00 1       DST started\n#       09 27 1992 03:00 -02.00 0       DST ended\n# * Ukrainian Government's Resolution of 20.03.1992, No. 139.\n# http://www.uazakon.com/documents/date_8u/pg_grcasa.htm\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone Europe/Kyiv\t2:02:04 -\tLMT\t1880\n\t\t\t2:02:04\t-\tKMT\t1924 May  2 # Kyiv Mean Time\n\t\t\t2:00\t-\tEET\t1930 Jun 21\n\t\t\t3:00\t-\tMSK\t1941 Sep 20\n\t\t\t1:00\tC-Eur\tCE%sT\t1943 Nov  6\n\t\t\t3:00\tRussia\tMSK/MSD\t1990 Jul  1  2:00\n\t\t\t2:00\t1:00\tEEST\t1991 Sep 29  3:00\n\t\t\t2:00\tC-Eur\tEE%sT\t1996 May 13\n\t\t\t2:00\tEU\tEE%sT\n\n###############################################################################\n\n# One source shows that Bulgaria, Cyprus, Finland, and Greece observe DST from\n# the last Sunday in March to the last Sunday in September in 1986.\n# The source shows Romania changing a day later than everybody else.\n#\n# According to Bernard Sieloff's source, Poland is in the MET time zone but\n# uses the WE DST rules.  The Western USSR uses EET+1 and ME DST rules.\n# Bernard Sieloff's source claims Romania switches on the same day, but at\n# 00:00 standard time (i.e., 01:00 DST).  It also claims that Turkey\n# switches on the same day, but switches on at 01:00 standard time\n# and off at 00:00 standard time (i.e., 01:00 DST)\n\n# ...\n# Date: Wed, 28 Jan 87 16:56:27 -0100\n# From: Tom Hofmann\n# ...\n#\n# ...the European time rules are...standardized since 1981, when\n# most European countries started DST.  Before that year, only\n# a few countries (UK, France, Italy) had DST, each according\n# to own national rules.  In 1981, however, DST started on\n# 'Apr firstSun', and not on 'Mar lastSun' as in the following\n# years...\n# But also since 1981 there are some more national exceptions\n# than listed in 'europe': Switzerland, for example, joined DST\n# one year later, Denmark ended DST on 'Oct 1' instead of 'Sep\n# lastSun' in 1981 - I don't know how they handle now.\n#\n# Finally, DST ist always from 'Apr 1' to 'Oct 1' in the\n# Soviet Union (as far as I know).\n#\n# Tom Hofmann, Scientific Computer Center, CIBA-GEIGY AG,\n# 4002 Basle, Switzerland\n# ...\n\n# ...\n# Date: Wed, 4 Feb 87 22:35:22 +0100\n# From: Dik T. Winter\n# ...\n#\n# The information from Tom Hofmann is (as far as I know) not entirely correct.\n# After a request from chongo at amdahl I tried to retrieve all information\n# about DST in Europe.  I was able to find all from about 1969.\n#\n# ...standardization on DST in Europe started in about 1977 with switches on\n# first Sunday in April and last Sunday in September...\n# In 1981 UK joined Europe insofar that\n# the starting day for both shifted to last Sunday in March.  And from 1982\n# the whole of Europe used DST, with switch dates April 1 and October 1 in\n# the Sov[i]et Union.  In 1985 the SU reverted to standard Europe[a]n switch\n# dates...\n#\n# It should also be remembered that time-zones are not constants; e.g.\n# Portugal switched in 1976 from MET (or CET) to WET with DST...\n# Note also that though there were rules for switch dates not\n# all countries abided to these dates, and many individual deviations\n# occurred, though not since 1982 I believe.  Another note: it is always\n# assumed that DST is 1 hour ahead of normal time, this need not be the\n# case; at least in the Netherlands there have been times when DST was 2 hours\n# in advance of normal time.\n#\n# ...\n# dik t. winter, cwi, amsterdam, nederland\n# ...\n\n# From Bob Devine (1988-01-28):\n# ...\n# Greece: Last Sunday in April to last Sunday in September (iffy on dates).\n# Since 1978.  Change at midnight.\n# ...\n# Monaco: has same DST as France.\n# ...\n"
        },
        {
          "name": "factory",
          "type": "blob",
          "size": 0.9658203125,
          "content": "# tzdb data for noncommittal factory settings\n\n# This file is in the public domain, so clarified as of\n# 2009-05-17 by Arthur David Olson.\n\n# For distributors who don't want to specify a timezone in their\n# installation procedures.  Users who run 'date' will get the\n# time zone abbreviation \"-00\", indicating that the actual time zone\n# is unknown.\n\n# TZ=\"Factory\" was added to TZDB in 1989, and in 2016 its abbreviation\n# was changed to \"-00\" from a longish English-language error message.\n# Around 2010, CLDR added \"Etc/Unknown\" for use with TZDB, to stand\n# for an unknown or invalid time zone.  These two notions differ:\n# TZ=\"Factory\" is a valid timezone, so tzalloc(\"Factory\") succeeds, whereas\n# TZ=\"Etc/Unknown\" is invalid and tzalloc(\"Etc/Unknown\") fails.\n# Also, a downstream distributor could modify Factory to be a\n# default timezone suitable for the devices it manufactures,\n# whereas that cannot happen for Etc/Unknown.\n\n# Zone\tNAME\tSTDOFF\tRULES\tFORMAT\nZone\tFactory\t0\t-\t-00\n"
        },
        {
          "name": "iso3166.tab",
          "type": "blob",
          "size": 4.6787109375,
          "content": "# ISO 3166 alpha-2 country codes\n#\n# This file is in the public domain, so clarified as of\n# 2009-05-17 by Arthur David Olson.\n#\n# From Paul Eggert (2023-09-06):\n# This file contains a table of two-letter country codes.  Columns are\n# separated by a single tab.  Lines beginning with '#' are comments.\n# All text uses UTF-8 encoding.  The columns of the table are as follows:\n#\n# 1.  ISO 3166-1 alpha-2 country code, current as of\n#     ISO/TC 46 N1108 (2023-04-05).  See: ISO/TC 46 Documents\n#     https://www.iso.org/committee/48750.html?view=documents\n# 2.  The usual English name for the coded region.  This sometimes\n#     departs from ISO-listed names, sometimes so that sorted subsets\n#     of names are useful (e.g., \"Samoa (American)\" and \"Samoa\n#     (western)\" rather than \"American Samoa\" and \"Samoa\"),\n#     sometimes to avoid confusion among non-experts (e.g.,\n#     \"Czech Republic\" and \"Turkey\" rather than \"Czechia\" and \"Türkiye\"),\n#     and sometimes to omit needless detail or churn (e.g., \"Netherlands\"\n#     rather than \"Netherlands (the)\" or \"Netherlands (Kingdom of the)\").\n#\n# The table is sorted by country code.\n#\n# This table is intended as an aid for users, to help them select time\n# zone data appropriate for their practical needs.  It is not intended\n# to take or endorse any position on legal or territorial claims.\n#\n#country-\n#code\tname of country, territory, area, or subdivision\nAD\tAndorra\nAE\tUnited Arab Emirates\nAF\tAfghanistan\nAG\tAntigua & Barbuda\nAI\tAnguilla\nAL\tAlbania\nAM\tArmenia\nAO\tAngola\nAQ\tAntarctica\nAR\tArgentina\nAS\tSamoa (American)\nAT\tAustria\nAU\tAustralia\nAW\tAruba\nAX\tÅland Islands\nAZ\tAzerbaijan\nBA\tBosnia & Herzegovina\nBB\tBarbados\nBD\tBangladesh\nBE\tBelgium\nBF\tBurkina Faso\nBG\tBulgaria\nBH\tBahrain\nBI\tBurundi\nBJ\tBenin\nBL\tSt Barthelemy\nBM\tBermuda\nBN\tBrunei\nBO\tBolivia\nBQ\tCaribbean NL\nBR\tBrazil\nBS\tBahamas\nBT\tBhutan\nBV\tBouvet Island\nBW\tBotswana\nBY\tBelarus\nBZ\tBelize\nCA\tCanada\nCC\tCocos (Keeling) Islands\nCD\tCongo (Dem. Rep.)\nCF\tCentral African Rep.\nCG\tCongo (Rep.)\nCH\tSwitzerland\nCI\tCôte d'Ivoire\nCK\tCook Islands\nCL\tChile\nCM\tCameroon\nCN\tChina\nCO\tColombia\nCR\tCosta Rica\nCU\tCuba\nCV\tCape Verde\nCW\tCuraçao\nCX\tChristmas Island\nCY\tCyprus\nCZ\tCzech Republic\nDE\tGermany\nDJ\tDjibouti\nDK\tDenmark\nDM\tDominica\nDO\tDominican Republic\nDZ\tAlgeria\nEC\tEcuador\nEE\tEstonia\nEG\tEgypt\nEH\tWestern Sahara\nER\tEritrea\nES\tSpain\nET\tEthiopia\nFI\tFinland\nFJ\tFiji\nFK\tFalkland Islands\nFM\tMicronesia\nFO\tFaroe Islands\nFR\tFrance\nGA\tGabon\nGB\tBritain (UK)\nGD\tGrenada\nGE\tGeorgia\nGF\tFrench Guiana\nGG\tGuernsey\nGH\tGhana\nGI\tGibraltar\nGL\tGreenland\nGM\tGambia\nGN\tGuinea\nGP\tGuadeloupe\nGQ\tEquatorial Guinea\nGR\tGreece\nGS\tSouth Georgia & the South Sandwich Islands\nGT\tGuatemala\nGU\tGuam\nGW\tGuinea-Bissau\nGY\tGuyana\nHK\tHong Kong\nHM\tHeard Island & McDonald Islands\nHN\tHonduras\nHR\tCroatia\nHT\tHaiti\nHU\tHungary\nID\tIndonesia\nIE\tIreland\nIL\tIsrael\nIM\tIsle of Man\nIN\tIndia\nIO\tBritish Indian Ocean Territory\nIQ\tIraq\nIR\tIran\nIS\tIceland\nIT\tItaly\nJE\tJersey\nJM\tJamaica\nJO\tJordan\nJP\tJapan\nKE\tKenya\nKG\tKyrgyzstan\nKH\tCambodia\nKI\tKiribati\nKM\tComoros\nKN\tSt Kitts & Nevis\nKP\tKorea (North)\nKR\tKorea (South)\nKW\tKuwait\nKY\tCayman Islands\nKZ\tKazakhstan\nLA\tLaos\nLB\tLebanon\nLC\tSt Lucia\nLI\tLiechtenstein\nLK\tSri Lanka\nLR\tLiberia\nLS\tLesotho\nLT\tLithuania\nLU\tLuxembourg\nLV\tLatvia\nLY\tLibya\nMA\tMorocco\nMC\tMonaco\nMD\tMoldova\nME\tMontenegro\nMF\tSt Martin (French)\nMG\tMadagascar\nMH\tMarshall Islands\nMK\tNorth Macedonia\nML\tMali\nMM\tMyanmar (Burma)\nMN\tMongolia\nMO\tMacau\nMP\tNorthern Mariana Islands\nMQ\tMartinique\nMR\tMauritania\nMS\tMontserrat\nMT\tMalta\nMU\tMauritius\nMV\tMaldives\nMW\tMalawi\nMX\tMexico\nMY\tMalaysia\nMZ\tMozambique\nNA\tNamibia\nNC\tNew Caledonia\nNE\tNiger\nNF\tNorfolk Island\nNG\tNigeria\nNI\tNicaragua\nNL\tNetherlands\nNO\tNorway\nNP\tNepal\nNR\tNauru\nNU\tNiue\nNZ\tNew Zealand\nOM\tOman\nPA\tPanama\nPE\tPeru\nPF\tFrench Polynesia\nPG\tPapua New Guinea\nPH\tPhilippines\nPK\tPakistan\nPL\tPoland\nPM\tSt Pierre & Miquelon\nPN\tPitcairn\nPR\tPuerto Rico\nPS\tPalestine\nPT\tPortugal\nPW\tPalau\nPY\tParaguay\nQA\tQatar\nRE\tRéunion\nRO\tRomania\nRS\tSerbia\nRU\tRussia\nRW\tRwanda\nSA\tSaudi Arabia\nSB\tSolomon Islands\nSC\tSeychelles\nSD\tSudan\nSE\tSweden\nSG\tSingapore\nSH\tSt Helena\nSI\tSlovenia\nSJ\tSvalbard & Jan Mayen\nSK\tSlovakia\nSL\tSierra Leone\nSM\tSan Marino\nSN\tSenegal\nSO\tSomalia\nSR\tSuriname\nSS\tSouth Sudan\nST\tSao Tome & Principe\nSV\tEl Salvador\nSX\tSt Maarten (Dutch)\nSY\tSyria\nSZ\tEswatini (Swaziland)\nTC\tTurks & Caicos Is\nTD\tChad\nTF\tFrench S. Terr.\nTG\tTogo\nTH\tThailand\nTJ\tTajikistan\nTK\tTokelau\nTL\tEast Timor\nTM\tTurkmenistan\nTN\tTunisia\nTO\tTonga\nTR\tTurkey\nTT\tTrinidad & Tobago\nTV\tTuvalu\nTW\tTaiwan\nTZ\tTanzania\nUA\tUkraine\nUG\tUganda\nUM\tUS minor outlying islands\nUS\tUnited States\nUY\tUruguay\nUZ\tUzbekistan\nVA\tVatican City\nVC\tSt Vincent\nVE\tVenezuela\nVG\tVirgin Islands (UK)\nVI\tVirgin Islands (US)\nVN\tVietnam\nVU\tVanuatu\nWF\tWallis & Futuna\nWS\tSamoa (western)\nYE\tYemen\nYT\tMayotte\nZA\tSouth Africa\nZM\tZambia\nZW\tZimbabwe\n"
        },
        {
          "name": "leap-seconds.list",
          "type": "blob",
          "size": 4.9501953125,
          "content": "#\tATOMIC TIME\n#\tCoordinated Universal Time (UTC) is the reference time scale derived\n#\tfrom The \"Temps Atomique International\" (TAI) calculated by the Bureau\n#\tInternational des Poids et Mesures (BIPM) using a worldwide network of atomic\n#\tclocks. UTC differs from TAI by an integer number of seconds; it is the basis\n#\tof all activities in the world.\n#\n#\n#\tASTRONOMICAL TIME (UT1) is the time scale based on the rate of rotation of the earth.\n#\tIt is now mainly derived from Very Long Baseline Interferometry (VLBI). The various\n#\tirregular fluctuations progressively detected in the rotation rate of the Earth led\n#\tin 1972 to the replacement of UT1 by UTC as the reference time scale.\n#\n#\n#\tLEAP SECOND\n#\tAtomic clocks are more stable than the rate of the earth's rotation since the latter\n#\tundergoes a full range of geophysical perturbations at various time scales: lunisolar\n#\tand core-mantle torques, atmospheric and oceanic effects, etc.\n#\tLeap seconds are needed to keep the two time scales in agreement, i.e. UT1-UTC smaller\n#\tthan 0.9 seconds. Therefore, when necessary a \"leap second\" is applied to UTC.\n#\tSince the adoption of this system in 1972 it has been necessary to add a number of seconds to UTC,\n#\tfirstly due to the initial choice of the value of the second (1/86400 mean solar day of\n#\tthe year 1820) and secondly to the general slowing down of the Earth's rotation. It is\n#\ttheoretically possible to have a negative leap second (a second removed from UTC), but so far,\n#\tall leap seconds have been positive (a second has been added to UTC). Based on what we know about\n#\tthe earth's rotation, it is unlikely that we will ever have a negative leap second.\n#\n#\n#\tHISTORY\n#\tThe first leap second was added on June 30, 1972. Until the year 2000, it was necessary in average to add a\n#       leap second at a rate of 1 to 2 years. Since the year 2000 leap seconds are introduced with an\n#\taverage interval of 3 to 4 years due to the acceleration of the Earth's rotation speed.\n#\n#\n#\tRESPONSIBILITY OF THE DECISION TO INTRODUCE A LEAP SECOND IN UTC\n#\tThe decision to introduce a leap second in UTC is the responsibility of the Earth Orientation Center of\n#\tthe International Earth Rotation and reference System Service (IERS). This center is located at Paris\n#\tObservatory. According to international agreements, leap seconds should be scheduled only for certain dates:\n#\tfirst preference is given to the end of December and June, and second preference at the end of March\n#\tand September. Since the introduction of leap seconds in 1972, only dates in June and December were used.\n#\n#\t\tQuestions or comments to:\n#\t\t\tChristian Bizouard:  christian.bizouard@obspm.fr\n#\t\t\tEarth orientation Center of the IERS\n#\t\t\tParis Observatory, France\n#\n#\n#\n#    \tCOPYRIGHT STATUS OF THIS FILE\n#    \tThis file is in the public domain.\n#\n#\n#\tVALIDITY OF THE FILE\n#\tIt is important to express the validity of the file. These next two dates are\n#\tgiven in units of seconds since 1900.0.\n#\n#\t1) Last update of the file.\n#\n#\tUpdated through IERS Bulletin C (https://hpiers.obspm.fr/iers/bul/bulc/bulletinc.dat)\n#\n#\tThe following line shows the last update of this file in NTP timestamp:\n#\n#$\t3945196800\n#\n#\t2) Expiration date of the file given on a semi-annual basis: last June or last December\n#\n#\tFile expires on 28 December 2025\n#\n#\tExpire date in NTP timestamp:\n#\n#@\t3975868800\n#\n#\n#\tLIST OF LEAP SECONDS\n#\tNTP timestamp (X parameter) is the number of seconds since 1900.0\n#\n#\tMJD: The Modified Julian Day number. MJD = X/86400 + 15020\n#\n#\tDTAI: The difference DTAI= TAI-UTC in units of seconds\n#\tIt is the quantity to add to UTC to get the time in TAI\n#\n#\tDay Month Year : epoch in clear\n#\n#NTP Time      DTAI    Day Month Year\n#\n2272060800      10      # 1 Jan 1972\n2287785600      11      # 1 Jul 1972\n2303683200      12      # 1 Jan 1973\n2335219200      13      # 1 Jan 1974\n2366755200      14      # 1 Jan 1975\n2398291200      15      # 1 Jan 1976\n2429913600      16      # 1 Jan 1977\n2461449600      17      # 1 Jan 1978\n2492985600      18      # 1 Jan 1979\n2524521600      19      # 1 Jan 1980\n2571782400      20      # 1 Jul 1981\n2603318400      21      # 1 Jul 1982\n2634854400      22      # 1 Jul 1983\n2698012800      23      # 1 Jul 1985\n2776982400      24      # 1 Jan 1988\n2840140800      25      # 1 Jan 1990\n2871676800      26      # 1 Jan 1991\n2918937600      27      # 1 Jul 1992\n2950473600      28      # 1 Jul 1993\n2982009600      29      # 1 Jul 1994\n3029443200      30      # 1 Jan 1996\n3076704000      31      # 1 Jul 1997\n3124137600      32      # 1 Jan 1999\n3345062400      33      # 1 Jan 2006\n3439756800      34      # 1 Jan 2009\n3550089600      35      # 1 Jul 2012\n3644697600      36      # 1 Jul 2015\n3692217600      37      # 1 Jan 2017\n#\n#\tA hash code has been generated to be able to verify the integrity\n#\tof this file. For more information about using this hash code,\n#\tplease see the readme file in the 'source' directory :\n#\thttps://hpiers.obspm.fr/iers/bul/bulc/ntp/sources/README\n#\n#h\t848434d5 570f7ea8 d79ba227 a00fc821 f608e2d4\n"
        },
        {
          "name": "leapseconds.awk",
          "type": "blob",
          "size": 8.7099609375,
          "content": "# Generate zic format 'leapseconds' from NIST/IERS format 'leap-seconds.list'.\n\n# This file is in the public domain.\n\n# This program uses awk arithmetic.  POSIX requires awk to support\n# exact integer arithmetic only through 10**10, which means for NTP\n# timestamps this program works only to the year 2216, which is the\n# year 1900 plus 10**10 seconds.  However, in practice\n# POSIX-conforming awk implementations invariably use IEEE-754 double\n# and so support exact integers through 2**53.  By the year 2216,\n# POSIX will almost surely require at least 2**53 for awk, so for NTP\n# timestamps this program should be good until the year 285,428,681\n# (the year 1900 plus 2**53 seconds).  By then leap seconds will be\n# long obsolete, as the Earth will likely slow down so much that\n# there will be more than 25 hours per day and so some other scheme\n# will be needed.\n\nBEGIN {\n  print \"# Allowance for leap seconds added to each time zone file.\"\n  print \"\"\n  print \"# This file is in the public domain.\"\n  print \"\"\n  print \"# This file is generated automatically from the data in the public-domain\"\n  print \"# NIST/IERS format leap-seconds.list file, which can be copied from\"\n  print \"# <https://hpiers.obspm.fr/iers/bul/bulc/ntp/leap-seconds.list>\"\n  print \"# or, in a variant with different comments, from\"\n  print \"# <ftp://ftp.boulder.nist.gov/pub/time/leap-seconds.list>.\"\n  print \"# For more about leap-seconds.list, please see\"\n  print \"# The NTP Timescale and Leap Seconds\"\n  print \"# <https://www.eecis.udel.edu/~mills/leap.html>.\"\n  print \"\"\n  print \"# The rules for leap seconds are specified in Annex 1 (Time scales) of:\"\n  print \"# Standard-frequency and time-signal emissions.\"\n  print \"# International Telecommunication Union - Radiocommunication Sector\"\n  print \"# (ITU-R) Recommendation TF.460-6 (02/2002)\"\n  print \"# <https://www.itu.int/rec/R-REC-TF.460-6-200202-I/>.\"\n  print \"# The International Earth Rotation and Reference Systems Service (IERS)\"\n  print \"# periodically uses leap seconds to keep UTC to within 0.9 s of UT1\"\n  print \"# (a proxy for Earth's angle in space as measured by astronomers)\"\n  print \"# and publishes leap second data in a copyrighted file\"\n  print \"# <https://hpiers.obspm.fr/iers/bul/bulc/Leap_Second.dat>.\"\n  print \"# See: Levine J. Coordinated Universal Time and the leap second.\"\n  print \"# URSI Radio Sci Bull. 2016;89(4):30-6. doi:10.23919/URSIRSB.2016.7909995\"\n  print \"# <https://ieeexplore.ieee.org/document/7909995>.\"\n  print \"\"\n  print \"# There were no leap seconds before 1972, as no official mechanism\"\n  print \"# accounted for the discrepancy between atomic time (TAI) and the earth's\"\n  print \"# rotation.  The first (\\\"1 Jan 1972\\\") data line in leap-seconds.list\"\n  print \"# does not denote a leap second; it denotes the start of the current definition\"\n  print \"# of UTC.\"\n  print \"\"\n  print \"# All leap-seconds are Stationary (S) at the given UTC time.\"\n  print \"# The correction (+ or -) is made at the given time, so in the unlikely\"\n  print \"# event of a negative leap second, a line would look like this:\"\n  print \"# Leap\tYEAR\tMON\tDAY\t23:59:59\t-\tS\"\n  print \"# Typical lines look like this:\"\n  print \"# Leap\tYEAR\tMON\tDAY\t23:59:60\t+\tS\"\n\n  monthabbr[ 1] = \"Jan\"\n  monthabbr[ 2] = \"Feb\"\n  monthabbr[ 3] = \"Mar\"\n  monthabbr[ 4] = \"Apr\"\n  monthabbr[ 5] = \"May\"\n  monthabbr[ 6] = \"Jun\"\n  monthabbr[ 7] = \"Jul\"\n  monthabbr[ 8] = \"Aug\"\n  monthabbr[ 9] = \"Sep\"\n  monthabbr[10] = \"Oct\"\n  monthabbr[11] = \"Nov\"\n  monthabbr[12] = \"Dec\"\n\n  sstamp_init()\n}\n\n# In case the input has CRLF form a la NIST.\n{ sub(/\\r$/, \"\") }\n\n/^#[ \\t]*[Uu]pdated through/ || /^#[ \\t]*[Ff]ile expires on/ {\n    last_lines = last_lines $0 \"\\n\"\n}\n\n/^#[$][ \\t]/ { updated = $2 }\n/^#[@][ \\t]/ { expires = $2 }\n\n/^[ \\t]*#/ { next }\n\n{\n    NTP_timestamp = $1\n    TAI_minus_UTC = $2\n    if (old_TAI_minus_UTC) {\n\tif (old_TAI_minus_UTC < TAI_minus_UTC) {\n\t    sign = \"23:59:60\\t+\"\n\t} else {\n\t    sign = \"23:59:59\\t-\"\n\t}\n\tsstamp_to_ymdhMs(NTP_timestamp - 1, ss_NTP)\n\tprintf \"Leap\\t%d\\t%s\\t%d\\t%s\\tS\\n\", \\\n\t  ss_year, monthabbr[ss_month], ss_mday, sign\n    }\n    old_TAI_minus_UTC = TAI_minus_UTC\n}\n\nEND {\n    print \"\"\n\n    if (expires) {\n      sstamp_to_ymdhMs(expires, ss_NTP)\n\n      print \"# UTC timestamp when this leap second list expires.\"\n      print \"# Any additional leap seconds will come after this.\"\n      if (! EXPIRES_LINE) {\n\tprint \"# This Expires line is commented out for now,\"\n\tprint \"# so that pre-2020a zic implementations do not reject this file.\"\n      }\n      printf \"%sExpires %.4d\\t%s\\t%.2d\\t%.2d:%.2d:%.2d\\n\", \\\n\tEXPIRES_LINE ? \"\" : \"#\", \\\n\tss_year, monthabbr[ss_month], ss_mday, ss_hour, ss_min, ss_sec\n    } else {\n      print \"# (No Expires line, since the expires time is unknown.)\"\n    }\n\n    # The difference between the NTP and POSIX epochs is 70 years\n    # (including 17 leap days), each 24 hours of 60 minutes of 60\n    # seconds each.\n    epoch_minus_NTP = ((1970 - 1900) * 365 + 17) * 24 * 60 * 60\n\n    print \"\"\n    print \"# POSIX timestamps for the data in this file:\"\n    if (updated) {\n      sstamp_to_ymdhMs(updated, ss_NTP)\n      printf \"#updated %d (%.4d-%.2d-%.2d %.2d:%.2d:%.2d UTC)\\n\", \\\n\tupdated - epoch_minus_NTP, \\\n\tss_year, ss_month, ss_mday, ss_hour, ss_min, ss_sec\n    } else {\n      print \"#(updated time unknown)\"\n    }\n    if (expires) {\n      sstamp_to_ymdhMs(expires, ss_NTP)\n      printf \"#expires %d (%.4d-%.2d-%.2d %.2d:%.2d:%.2d UTC)\\n\", \\\n\texpires - epoch_minus_NTP, \\\n\tss_year, ss_month, ss_mday, ss_hour, ss_min, ss_sec\n    } else {\n      print \"#(expires time unknown)\"\n    }\n    printf \"\\n%s\", last_lines\n}\n\n# sstamp_to_ymdhMs - convert seconds timestamp to date and time\n#\n# Call as:\n#\n#    sstamp_to_ymdhMs(sstamp, epoch_days)\n#\n# where:\n#\n#    sstamp - is the seconds timestamp.\n#    epoch_days - is the timestamp epoch in Gregorian days since 1600-03-01.\n#\tss_NTP is appropriate for an NTP sstamp.\n#\n# Both arguments should be nonnegative integers.\n# On return, the following variables are set based on sstamp:\n#\n#    ss_year\t- Gregorian calendar year\n#    ss_month\t- month of the year (1-January to 12-December)\n#    ss_mday\t- day of the month (1-31)\n#    ss_hour\t- hour (0-23)\n#    ss_min\t- minute (0-59)\n#    ss_sec\t- second (0-59)\n#    ss_wday\t- day of week (0-Sunday to 6-Saturday)\n#\n# The function sstamp_init should be called prior to using sstamp_to_ymdhMs.\n\nfunction sstamp_init()\n{\n  # Days in month N, where March is month 0 and January month 10.\n  ss_mon_days[ 0] = 31\n  ss_mon_days[ 1] = 30\n  ss_mon_days[ 2] = 31\n  ss_mon_days[ 3] = 30\n  ss_mon_days[ 4] = 31\n  ss_mon_days[ 5] = 31\n  ss_mon_days[ 6] = 30\n  ss_mon_days[ 7] = 31\n  ss_mon_days[ 8] = 30\n  ss_mon_days[ 9] = 31\n  ss_mon_days[10] = 31\n\n  # Counts of days in a Gregorian year, quad-year, century, and quad-century.\n  ss_year_days = 365\n  ss_quadyear_days = ss_year_days * 4 + 1\n  ss_century_days = ss_quadyear_days * 25 - 1\n  ss_quadcentury_days = ss_century_days * 4 + 1\n\n  # Standard day epochs, suitable for epoch_days.\n  # ss_MJD = 94493\n  # ss_POSIX = 135080\n  ss_NTP = 109513\n}\n\nfunction sstamp_to_ymdhMs(sstamp, epoch_days, \\\n\t\t\t  quadcentury, century, quadyear, year, month, day)\n{\n  ss_hour = int(sstamp / 3600) % 24\n  ss_min = int(sstamp / 60) % 60\n  ss_sec = sstamp % 60\n\n  # Start with a count of days since 1600-03-01 Gregorian.\n  day = epoch_days + int(sstamp / (24 * 60 * 60))\n\n  # Compute a year-month-day date with days of the month numbered\n  # 0-30, months (March-February) numbered 0-11, and years that start\n  # start March 1 and end after the last day of February.  A quad-year\n  # starts on March 1 of a year evenly divisible by 4 and ends after\n  # the last day of February 4 years later.  A century starts on and\n  # ends before March 1 in years evenly divisible by 100.\n  # A quad-century starts on and ends before March 1 in years divisible\n  # by 400.  While the number of days in a quad-century is a constant,\n  # the number of days in each other time period can vary by 1.\n  # Any variation is in the last day of the time period (there might\n  # or might not be a February 29) where it is easy to deal with.\n\n  quadcentury = int(day / ss_quadcentury_days)\n  day -= quadcentury * ss_quadcentury_days\n  ss_wday = (day + 3) % 7\n  century = int(day / ss_century_days)\n  century -= century == 4\n  day -= century * ss_century_days\n  quadyear = int(day / ss_quadyear_days)\n  day -= quadyear * ss_quadyear_days\n  year = int(day / ss_year_days)\n  year -= year == 4\n  day -= year * ss_year_days\n  for (month = 0; month < 11; month++) {\n    if (day < ss_mon_days[month])\n      break\n    day -= ss_mon_days[month]\n  }\n\n  # Convert the date to a conventional day of month (1-31),\n  # month (1-12, January-December) and Gregorian year.\n  ss_mday = day + 1\n  if (month <= 9) {\n    ss_month = month + 3\n  } else {\n    ss_month = month - 9\n    year++\n  }\n  ss_year = 1600 + quadcentury * 400 + century * 100 + quadyear * 4 + year\n}\n"
        },
        {
          "name": "localtime.c",
          "type": "blob",
          "size": 65.3173828125,
          "content": "/* Convert timestamp from time_t to struct tm.  */\n\n/*\n** This file is in the public domain, so clarified as of\n** 1996-06-05 by Arthur David Olson.\n*/\n\n/*\n** Leap second handling from Bradley White.\n** POSIX.1-1988 style TZ environment variable handling from Guy Harris.\n*/\n\n/*LINTLIBRARY*/\n\n#define LOCALTIME_IMPLEMENTATION\n#include \"private.h\"\n\n#include \"tzdir.h\"\n#include \"tzfile.h\"\n#include <fcntl.h>\n\n#if HAVE_SYS_STAT_H\n# include <sys/stat.h>\n#endif\n#if !defined S_ISREG && defined S_IFREG\n/* Ancient UNIX or recent MS-Windows.  */\n# define S_ISREG(mode) (((mode) & S_IFMT) == S_IFREG)\n#endif\n\n#if defined THREAD_SAFE && THREAD_SAFE\n# include <pthread.h>\nstatic pthread_mutex_t locallock = PTHREAD_MUTEX_INITIALIZER;\nstatic int lock(void) { return pthread_mutex_lock(&locallock); }\nstatic void unlock(void) { pthread_mutex_unlock(&locallock); }\n#else\nstatic int lock(void) { return 0; }\nstatic void unlock(void) { }\n#endif\n\n/* Convert to TYPE the value of the expression EXPR.  Use C99+ implicit\n   conversion if available, as it is less powerful and therefore safer.  */\n#if PORT_TO_C89\n# define TYPECVT(type, expr) ((type) (expr))\n#else\n# define TYPECVT(type, expr) ((type) {expr})\n#endif\n\n/* Unless intptr_t is missing, pacify gcc -Wcast-qual on char const * exprs.\n   This is a macro so that it can be used in static initializers.  */\n#ifdef INTPTR_MAX\n# define UNCONST(a) ((char *) (intptr_t) TYPECVT (char const *, a))\n#else\n# define UNCONST(a) TYPECVT (char const *, a)\n#endif\n\n/* A signed type wider than int, so that we can add 1900 + tm_mon/12 to tm_year\n   without overflow.  The static_assert checks that it is indeed wider\n   than int; if this fails on your platform please let us know.  */\n#if INT_MAX < LONG_MAX\ntypedef long iinntt;\n# define IINNTT_MIN LONG_MIN\n# define IINNTT_MAX LONG_MAX\n#elif INT_MAX < LLONG_MAX\ntypedef long long iinntt;\n# define IINNTT_MIN LLONG_MIN\n# define IINNTT_MAX LLONG_MAX\n#else\ntypedef intmax_t iinntt;\n# define IINNTT_MIN INTMAX_MIN\n# define IINNTT_MAX INTMAX_MAX\n#endif\nstatic_assert(IINNTT_MIN < INT_MIN && INT_MAX < IINNTT_MAX);\n\n/* On platforms where offtime or mktime might overflow,\n   strftime.c defines USE_TIMEX_T to be true and includes us.\n   This tells us to #define time_t to an internal type timex_t that is\n   wide enough so that strftime %s never suffers from integer overflow,\n   and to #define offtime (if TM_GMTOFF is defined) or mktime (otherwise)\n   to a static function that returns the redefined time_t.\n   It also tells us to define only data and code needed\n   to support the offtime or mktime variant.  */\n#ifndef USE_TIMEX_T\n# define USE_TIMEX_T false\n#endif\n#if USE_TIMEX_T\n# undef TIME_T_MIN\n# undef TIME_T_MAX\n# undef time_t\n# define time_t timex_t\n# if MKTIME_FITS_IN(LONG_MIN, LONG_MAX)\ntypedef long timex_t;\n# define TIME_T_MIN LONG_MIN\n# define TIME_T_MAX LONG_MAX\n# elif MKTIME_FITS_IN(LLONG_MIN, LLONG_MAX)\ntypedef long long timex_t;\n# define TIME_T_MIN LLONG_MIN\n# define TIME_T_MAX LLONG_MAX\n# else\ntypedef intmax_t timex_t;\n# define TIME_T_MIN INTMAX_MIN\n# define TIME_T_MAX INTMAX_MAX\n# endif\n\n# ifdef TM_GMTOFF\n#  undef timeoff\n#  define timeoff timex_timeoff\n#  undef EXTERN_TIMEOFF\n# else\n#  undef mktime\n#  define mktime timex_mktime\n# endif\n#endif\n\n#ifndef TZ_ABBR_CHAR_SET\n# define TZ_ABBR_CHAR_SET \\\n\t\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789 :+-._\"\n#endif /* !defined TZ_ABBR_CHAR_SET */\n\n#ifndef TZ_ABBR_ERR_CHAR\n# define TZ_ABBR_ERR_CHAR '_'\n#endif /* !defined TZ_ABBR_ERR_CHAR */\n\n/* Port to platforms that lack some O_* flags.  Unless otherwise\n   specified, the flags are standardized by POSIX.  */\n\n#ifndef O_BINARY\n# define O_BINARY 0 /* MS-Windows */\n#endif\n#ifndef O_CLOEXEC\n# define O_CLOEXEC 0\n#endif\n#ifndef O_CLOFORK\n# define O_CLOFORK 0\n#endif\n#ifndef O_IGNORE_CTTY\n# define O_IGNORE_CTTY 0 /* GNU/Hurd */\n#endif\n#ifndef O_NOCTTY\n# define O_NOCTTY 0\n#endif\n\n#ifndef WILDABBR\n/*\n** Someone might make incorrect use of a time zone abbreviation:\n**\t1.\tThey might reference tzname[0] before calling tzset (explicitly\n**\t\tor implicitly).\n**\t2.\tThey might reference tzname[1] before calling tzset (explicitly\n**\t\tor implicitly).\n**\t3.\tThey might reference tzname[1] after setting to a time zone\n**\t\tin which Daylight Saving Time is never observed.\n**\t4.\tThey might reference tzname[0] after setting to a time zone\n**\t\tin which Standard Time is never observed.\n**\t5.\tThey might reference tm.TM_ZONE after calling offtime.\n** What's best to do in the above cases is open to debate;\n** for now, we just set things up so that in any of the five cases\n** WILDABBR is used. Another possibility: initialize tzname[0] to the\n** string \"tzname[0] used before set\", and similarly for the other cases.\n** And another: initialize tzname[0] to \"ERA\", with an explanation in the\n** manual page of what this \"time zone abbreviation\" means (doing this so\n** that tzname[0] has the \"normal\" length of three characters).\n*/\n# define WILDABBR \"   \"\n#endif /* !defined WILDABBR */\n\nstatic const char\twildabbr[] = WILDABBR;\n\nstatic char const etc_utc[] = \"Etc/UTC\";\n\n#if !USE_TIMEX_T || defined TM_ZONE || !defined TM_GMTOFF\nstatic char const *utc = etc_utc + sizeof \"Etc/\" - 1;\n#endif\n\n/*\n** The DST rules to use if TZ has no rules and we can't load TZDEFRULES.\n** Default to US rules as of 2017-05-07.\n** POSIX does not specify the default DST rules;\n** for historical reasons, US rules are a common default.\n*/\n#ifndef TZDEFRULESTRING\n# define TZDEFRULESTRING \",M3.2.0,M11.1.0\"\n#endif\n\n/* Limit to time zone abbreviation length in proleptic TZ strings.\n   This is distinct from TZ_MAX_CHARS, which limits TZif file contents.\n   It defaults to 254, not 255, so that desigidx_type can be an unsigned char.\n   unsigned char suffices for TZif files, so the only reason to increase\n   TZNAME_MAXIMUM is to support TZ strings specifying abbreviations\n   longer than 254 bytes.  There is little reason to do that, though,\n   as strings that long are hardly \"abbreviations\".  */\n#ifndef TZNAME_MAXIMUM\n# define TZNAME_MAXIMUM 254\n#endif\n\n#if TZNAME_MAXIMUM < UCHAR_MAX\ntypedef unsigned char desigidx_type;\n#elif TZNAME_MAXIMUM < INT_MAX\ntypedef int desigidx_type;\n#elif TZNAME_MAXIMUM < PTRDIFF_MAX\ntypedef ptrdiff_t desigidx_type;\n#else\n# error \"TZNAME_MAXIMUM too large\"\n#endif\n\nstruct ttinfo {\t\t\t\t/* time type information */\n\tint_least32_t\ttt_utoff;\t/* UT offset in seconds */\n\tdesigidx_type\ttt_desigidx;\t/* abbreviation list index */\n\tbool\t\ttt_isdst;\t/* used to set tm_isdst */\n\tbool\t\ttt_ttisstd;\t/* transition is std time */\n\tbool\t\ttt_ttisut;\t/* transition is UT */\n};\n\nstruct lsinfo {\t\t\t\t/* leap second information */\n\ttime_t\t\tls_trans;\t/* transition time */\n\tint_fast32_t\tls_corr;\t/* correction to apply */\n};\n\n/* This abbreviation means local time is unspecified.  */\nstatic char const UNSPEC[] = \"-00\";\n\n/* How many extra bytes are needed at the end of struct state's chars array.\n   This needs to be at least 1 for null termination in case the input\n   data isn't properly terminated, and it also needs to be big enough\n   for ttunspecified to work without crashing.  */\nenum { CHARS_EXTRA = max(sizeof UNSPEC, 2) - 1 };\n\n/* A representation of the contents of a TZif file.  Ideally this\n   would have no size limits; the following sizes should suffice for\n   practical use.  This struct should not be too large, as instances\n   are put on the stack and stacks are relatively small on some platforms.\n   See tzfile.h for more about the sizes.  */\nstruct state {\n\tint\t\tleapcnt;\n\tint\t\ttimecnt;\n\tint\t\ttypecnt;\n\tint\t\tcharcnt;\n\tbool\t\tgoback;\n\tbool\t\tgoahead;\n\ttime_t\t\tats[TZ_MAX_TIMES];\n\tunsigned char\ttypes[TZ_MAX_TIMES];\n\tstruct ttinfo\tttis[TZ_MAX_TYPES];\n\tchar chars[max(max(TZ_MAX_CHARS + CHARS_EXTRA, sizeof \"UTC\"),\n\t\t       2 * (TZNAME_MAXIMUM + 1))];\n\tstruct lsinfo\tlsis[TZ_MAX_LEAPS];\n};\n\nenum r_type {\n  JULIAN_DAY,\t\t/* Jn = Julian day */\n  DAY_OF_YEAR,\t\t/* n = day of year */\n  MONTH_NTH_DAY_OF_WEEK\t/* Mm.n.d = month, week, day of week */\n};\n\nstruct rule {\n\tenum r_type\tr_type;\t\t/* type of rule */\n\tint\t\tr_day;\t\t/* day number of rule */\n\tint\t\tr_week;\t\t/* week number of rule */\n\tint\t\tr_mon;\t\t/* month number of rule */\n\tint_fast32_t\tr_time;\t\t/* transition time of rule */\n};\n\nstatic struct tm *gmtsub(struct state const *, time_t const *, int_fast32_t,\n\t\t\t struct tm *);\nstatic bool increment_overflow(int *, int);\nstatic bool increment_overflow_time(time_t *, int_fast32_t);\nstatic int_fast32_t leapcorr(struct state const *, time_t);\nstatic struct tm *timesub(time_t const *, int_fast32_t, struct state const *,\n\t\t\t  struct tm *);\nstatic bool tzparse(char const *, struct state *, struct state const *);\n\n#ifdef ALL_STATE\nstatic struct state *\tlclptr;\nstatic struct state *\tgmtptr;\n#endif /* defined ALL_STATE */\n\n#ifndef ALL_STATE\nstatic struct state\tlclmem;\nstatic struct state\tgmtmem;\nstatic struct state *const lclptr = &lclmem;\nstatic struct state *const gmtptr = &gmtmem;\n#endif /* State Farm */\n\n#ifndef TZ_STRLEN_MAX\n# define TZ_STRLEN_MAX 255\n#endif /* !defined TZ_STRLEN_MAX */\n\n#if !USE_TIMEX_T || !defined TM_GMTOFF\nstatic char\t\tlcl_TZname[TZ_STRLEN_MAX + 1];\nstatic int\t\tlcl_is_set;\n#endif\n\n/*\n** Section 4.12.3 of X3.159-1989 requires that\n**\tExcept for the strftime function, these functions [asctime,\n**\tctime, gmtime, localtime] return values in one of two static\n**\tobjects: a broken-down time structure and an array of char.\n** Thanks to Paul Eggert for noting this.\n**\n** Although this requirement was removed in C99 it is still present in POSIX.\n** Follow the requirement if SUPPORT_C89, even though this is more likely to\n** trigger latent bugs in programs.\n*/\n\n#if !USE_TIMEX_T\n\n# if SUPPORT_C89\nstatic struct tm\ttm;\n#endif\n\n# if 2 <= HAVE_TZNAME + TZ_TIME_T\nchar *tzname[2] = { UNCONST(wildabbr), UNCONST(wildabbr) };\n# endif\n# if 2 <= USG_COMPAT + TZ_TIME_T\nlong\t\t\ttimezone;\nint\t\t\tdaylight;\n# endif\n# if 2 <= ALTZONE + TZ_TIME_T\nlong\t\t\taltzone;\n# endif\n\n#endif\n\n/* Initialize *S to a value based on UTOFF, ISDST, and DESIGIDX.  */\nstatic void\ninit_ttinfo(struct ttinfo *s, int_fast32_t utoff, bool isdst,\n\t    desigidx_type desigidx)\n{\n  s->tt_utoff = utoff;\n  s->tt_isdst = isdst;\n  s->tt_desigidx = desigidx;\n  s->tt_ttisstd = false;\n  s->tt_ttisut = false;\n}\n\n/* Return true if SP's time type I does not specify local time.  */\nstatic bool\nttunspecified(struct state const *sp, int i)\n{\n  char const *abbr = &sp->chars[sp->ttis[i].tt_desigidx];\n  /* memcmp is likely faster than strcmp, and is safe due to CHARS_EXTRA.  */\n  return memcmp(abbr, UNSPEC, sizeof UNSPEC) == 0;\n}\n\nstatic int_fast32_t\ndetzcode(const char *const codep)\n{\n\tregister int_fast32_t\tresult;\n\tregister int\t\ti;\n\tint_fast32_t one = 1;\n\tint_fast32_t halfmaxval = one << (32 - 2);\n\tint_fast32_t maxval = halfmaxval - 1 + halfmaxval;\n\tint_fast32_t minval = -1 - maxval;\n\n\tresult = codep[0] & 0x7f;\n\tfor (i = 1; i < 4; ++i)\n\t\tresult = (result << 8) | (codep[i] & 0xff);\n\n\tif (codep[0] & 0x80) {\n\t  /* Do two's-complement negation even on non-two's-complement machines.\n\t     If the result would be minval - 1, return minval.  */\n\t  result -= !TWOS_COMPLEMENT(int_fast32_t) && result != 0;\n\t  result += minval;\n\t}\n\treturn result;\n}\n\nstatic int_fast64_t\ndetzcode64(const char *const codep)\n{\n\tregister int_fast64_t result;\n\tregister int\ti;\n\tint_fast64_t one = 1;\n\tint_fast64_t halfmaxval = one << (64 - 2);\n\tint_fast64_t maxval = halfmaxval - 1 + halfmaxval;\n\tint_fast64_t minval = -TWOS_COMPLEMENT(int_fast64_t) - maxval;\n\n\tresult = codep[0] & 0x7f;\n\tfor (i = 1; i < 8; ++i)\n\t\tresult = (result << 8) | (codep[i] & 0xff);\n\n\tif (codep[0] & 0x80) {\n\t  /* Do two's-complement negation even on non-two's-complement machines.\n\t     If the result would be minval - 1, return minval.  */\n\t  result -= !TWOS_COMPLEMENT(int_fast64_t) && result != 0;\n\t  result += minval;\n\t}\n\treturn result;\n}\n\n#if !USE_TIMEX_T || !defined TM_GMTOFF\n\nstatic void\nupdate_tzname_etc(struct state const *sp, struct ttinfo const *ttisp)\n{\n# if HAVE_TZNAME\n  tzname[ttisp->tt_isdst] = UNCONST(&sp->chars[ttisp->tt_desigidx]);\n# endif\n# if USG_COMPAT\n  if (!ttisp->tt_isdst)\n    timezone = - ttisp->tt_utoff;\n# endif\n# if ALTZONE\n  if (ttisp->tt_isdst)\n    altzone = - ttisp->tt_utoff;\n# endif\n}\n\n/* If STDDST_MASK indicates that SP's TYPE provides useful info,\n   update tzname, timezone, and/or altzone and return STDDST_MASK,\n   diminished by the provided info if it is a specified local time.\n   Otherwise, return STDDST_MASK.  See settzname for STDDST_MASK.  */\nstatic int\nmay_update_tzname_etc(int stddst_mask, struct state *sp, int type)\n{\n  struct ttinfo *ttisp = &sp->ttis[type];\n  int this_bit = 1 << ttisp->tt_isdst;\n  if (stddst_mask & this_bit) {\n    update_tzname_etc(sp, ttisp);\n    if (!ttunspecified(sp, type))\n      return stddst_mask & ~this_bit;\n  }\n  return stddst_mask;\n}\n\nstatic void\nsettzname(void)\n{\n\tregister struct state * const\tsp = lclptr;\n\tregister int\t\t\ti;\n\n\t/* If STDDST_MASK & 1 we need info about a standard time.\n\t   If STDDST_MASK & 2 we need info about a daylight saving time.\n\t   When STDDST_MASK becomes zero we can stop looking.  */\n\tint stddst_mask = 0;\n\n# if HAVE_TZNAME\n\ttzname[0] = tzname[1] = UNCONST(sp ? wildabbr : utc);\n\tstddst_mask = 3;\n# endif\n# if USG_COMPAT\n\ttimezone = 0;\n\tstddst_mask = 3;\n# endif\n# if ALTZONE\n\taltzone = 0;\n\tstddst_mask |= 2;\n# endif\n\t/*\n\t** And to get the latest time zone abbreviations into tzname. . .\n\t*/\n\tif (sp) {\n\t  for (i = sp->timecnt - 1; stddst_mask && 0 <= i; i--)\n\t    stddst_mask = may_update_tzname_etc(stddst_mask, sp, sp->types[i]);\n\t  for (i = sp->typecnt - 1; stddst_mask && 0 <= i; i--)\n\t    stddst_mask = may_update_tzname_etc(stddst_mask, sp, i);\n\t}\n# if USG_COMPAT\n\tdaylight = stddst_mask >> 1 ^ 1;\n# endif\n}\n\n/* Replace bogus characters in time zone abbreviations.\n   Return 0 on success, an errno value if a time zone abbreviation is\n   too long.  */\nstatic int\nscrub_abbrs(struct state *sp)\n{\n\tint i;\n\n\t/* Reject overlong abbreviations.  */\n\tfor (i = 0; i < sp->charcnt - (TZNAME_MAXIMUM + 1); ) {\n\t  int len = strlen(&sp->chars[i]);\n\t  if (TZNAME_MAXIMUM < len)\n\t    return EOVERFLOW;\n\t  i += len + 1;\n\t}\n\n\t/* Replace bogus characters.  */\n\tfor (i = 0; i < sp->charcnt; ++i)\n\t\tif (strchr(TZ_ABBR_CHAR_SET, sp->chars[i]) == NULL)\n\t\t\tsp->chars[i] = TZ_ABBR_ERR_CHAR;\n\n\treturn 0;\n}\n\n#endif\n\n/* Input buffer for data read from a compiled tz file.  */\nunion input_buffer {\n  /* The first part of the buffer, interpreted as a header.  */\n  struct tzhead tzhead;\n\n  /* The entire buffer.  Ideally this would have no size limits;\n     the following should suffice for practical use.  */\n  char buf[2 * sizeof(struct tzhead) + 2 * sizeof(struct state)\n\t   + 4 * TZ_MAX_TIMES];\n};\n\n/* TZDIR with a trailing '/' rather than a trailing '\\0'.  */\nstatic char const tzdirslash[sizeof TZDIR] = TZDIR \"/\";\n\n/* Local storage needed for 'tzloadbody'.  */\nunion local_storage {\n  /* The results of analyzing the file's contents after it is opened.  */\n  struct file_analysis {\n    /* The input buffer.  */\n    union input_buffer u;\n\n    /* A temporary state used for parsing a TZ string in the file.  */\n    struct state st;\n  } u;\n\n  /* The name of the file to be opened.  Ideally this would have no\n     size limits, to support arbitrarily long Zone names.\n     Limiting Zone names to 1024 bytes should suffice for practical use.\n     However, there is no need for this to be smaller than struct\n     file_analysis as that struct is allocated anyway, as the other\n     union member.  */\n  char fullname[max(sizeof(struct file_analysis), sizeof tzdirslash + 1024)];\n};\n\n/* These tzload flags can be ORed together, and fit into 'char'.  */\nenum { TZLOAD_FROMENV = 1 }; /* The TZ string came from the environment.  */\nenum { TZLOAD_TZSTRING = 2 }; /* Read any newline-surrounded TZ string.  */\n\n/* Load tz data from the file named NAME into *SP.  Respect TZLOADFLAGS.\n   Use *LSP for temporary storage.  Return 0 on\n   success, an errno value on failure.  */\nstatic int\ntzloadbody(char const *name, struct state *sp, char tzloadflags,\n\t   union local_storage *lsp)\n{\n\tregister int\t\t\ti;\n\tregister int\t\t\tfid;\n\tregister int\t\t\tstored;\n\tregister ssize_t\t\tnread;\n\tregister bool doaccess;\n\tregister union input_buffer *up = &lsp->u.u;\n\tregister int tzheadsize = sizeof(struct tzhead);\n\n\tsp->goback = sp->goahead = false;\n\n\tif (! name) {\n\t\tname = TZDEFAULT;\n\t\tif (! name)\n\t\t  return EINVAL;\n\t}\n\n\tif (name[0] == ':')\n\t\t++name;\n#ifdef SUPPRESS_TZDIR\n\t/* Do not prepend TZDIR.  This is intended for specialized\n\t   applications only, due to its security implications.  */\n\tdoaccess = true;\n#else\n\tdoaccess = name[0] == '/';\n#endif\n\tif (!doaccess) {\n\t\tchar const *dot;\n\t\tif (sizeof lsp->fullname - sizeof tzdirslash <= strlen(name))\n\t\t  return ENAMETOOLONG;\n\n\t\t/* Create a string \"TZDIR/NAME\".  Using sprintf here\n\t\t   would pull in stdio (and would fail if the\n\t\t   resulting string length exceeded INT_MAX!).  */\n\t\tmemcpy(lsp->fullname, tzdirslash, sizeof tzdirslash);\n\t\tstrcpy(lsp->fullname + sizeof tzdirslash, name);\n\n\t\t/* Set doaccess if NAME contains a \"..\" file name\n\t\t   component, as such a name could read a file outside\n\t\t   the TZDIR virtual subtree.  */\n\t\tfor (dot = name; (dot = strchr(dot, '.')); dot++)\n\t\t  if ((dot == name || dot[-1] == '/') && dot[1] == '.'\n\t\t      && (dot[2] == '/' || !dot[2])) {\n\t\t    doaccess = true;\n\t\t    break;\n\t\t  }\n\n\t\tname = lsp->fullname;\n\t}\n\tif (doaccess && (tzloadflags & TZLOAD_FROMENV)) {\n\t  /* Check for security violations and for devices whose mere\n\t     opening could have unwanted side effects.  Although these\n\t     checks are racy, they're better than nothing and there is\n\t     no portable way to fix the races.  */\n\t  if (access(name, R_OK) < 0)\n\t    return errno;\n#ifdef S_ISREG\n\t  {\n\t    struct stat st;\n\t    if (stat(name, &st) < 0)\n\t      return errno;\n\t    if (!S_ISREG(st.st_mode))\n\t      return EINVAL;\n\t  }\n#endif\n\t}\n\tfid = open(name, (O_RDONLY | O_BINARY | O_CLOEXEC | O_CLOFORK\n\t\t\t  | O_IGNORE_CTTY | O_NOCTTY));\n\tif (fid < 0)\n\t  return errno;\n\n\tnread = read(fid, up->buf, sizeof up->buf);\n\tif (nread < tzheadsize) {\n\t  int err = nread < 0 ? errno : EINVAL;\n\t  close(fid);\n\t  return err;\n\t}\n\tif (close(fid) < 0)\n\t  return errno;\n\tfor (stored = 4; stored <= 8; stored *= 2) {\n\t    char version = up->tzhead.tzh_version[0];\n\t    bool skip_datablock = stored == 4 && version;\n\t    int_fast32_t datablock_size;\n\t    int_fast32_t ttisstdcnt = detzcode(up->tzhead.tzh_ttisstdcnt);\n\t    int_fast32_t ttisutcnt = detzcode(up->tzhead.tzh_ttisutcnt);\n\t    int_fast64_t prevtr = -1;\n\t    int_fast32_t prevcorr;\n\t    int_fast32_t leapcnt = detzcode(up->tzhead.tzh_leapcnt);\n\t    int_fast32_t timecnt = detzcode(up->tzhead.tzh_timecnt);\n\t    int_fast32_t typecnt = detzcode(up->tzhead.tzh_typecnt);\n\t    int_fast32_t charcnt = detzcode(up->tzhead.tzh_charcnt);\n\t    char const *p = up->buf + tzheadsize;\n\t    /* Although tzfile(5) currently requires typecnt to be nonzero,\n\t       support future formats that may allow zero typecnt\n\t       in files that have a TZ string and no transitions.  */\n\t    if (! (0 <= leapcnt && leapcnt < TZ_MAX_LEAPS\n\t\t   && 0 <= typecnt && typecnt < TZ_MAX_TYPES\n\t\t   && 0 <= timecnt && timecnt < TZ_MAX_TIMES\n\t\t   && 0 <= charcnt && charcnt < TZ_MAX_CHARS\n\t\t   && 0 <= ttisstdcnt && ttisstdcnt < TZ_MAX_TYPES\n\t\t   && 0 <= ttisutcnt && ttisutcnt < TZ_MAX_TYPES))\n\t      return EINVAL;\n\t    datablock_size\n\t\t    = (timecnt * stored\t\t/* ats */\n\t\t       + timecnt\t\t/* types */\n\t\t       + typecnt * 6\t\t/* ttinfos */\n\t\t       + charcnt\t\t/* chars */\n\t\t       + leapcnt * (stored + 4)\t/* lsinfos */\n\t\t       + ttisstdcnt\t\t/* ttisstds */\n\t\t       + ttisutcnt);\t\t/* ttisuts */\n\t    if (nread < tzheadsize + datablock_size)\n\t      return EINVAL;\n\t    if (skip_datablock)\n\t\tp += datablock_size;\n\t    else {\n\t\tif (! ((ttisstdcnt == typecnt || ttisstdcnt == 0)\n\t\t       && (ttisutcnt == typecnt || ttisutcnt == 0)))\n\t\t  return EINVAL;\n\n\t\tsp->leapcnt = leapcnt;\n\t\tsp->timecnt = timecnt;\n\t\tsp->typecnt = typecnt;\n\t\tsp->charcnt = charcnt;\n\n\t\t/* Read transitions, discarding those out of time_t range.\n\t\t   But pretend the last transition before TIME_T_MIN\n\t\t   occurred at TIME_T_MIN.  */\n\t\ttimecnt = 0;\n\t\tfor (i = 0; i < sp->timecnt; ++i) {\n\t\t\tint_fast64_t at\n\t\t\t  = stored == 4 ? detzcode(p) : detzcode64(p);\n\t\t\tsp->types[i] = at <= TIME_T_MAX;\n\t\t\tif (sp->types[i]) {\n\t\t\t  time_t attime\n\t\t\t    = ((TYPE_SIGNED(time_t) ? at < TIME_T_MIN : at < 0)\n\t\t\t       ? TIME_T_MIN : at);\n\t\t\t  if (timecnt && attime <= sp->ats[timecnt - 1]) {\n\t\t\t    if (attime < sp->ats[timecnt - 1])\n\t\t\t      return EINVAL;\n\t\t\t    sp->types[i - 1] = 0;\n\t\t\t    timecnt--;\n\t\t\t  }\n\t\t\t  sp->ats[timecnt++] = attime;\n\t\t\t}\n\t\t\tp += stored;\n\t\t}\n\n\t\ttimecnt = 0;\n\t\tfor (i = 0; i < sp->timecnt; ++i) {\n\t\t\tunsigned char typ = *p++;\n\t\t\tif (sp->typecnt <= typ)\n\t\t\t  return EINVAL;\n\t\t\tif (sp->types[i])\n\t\t\t\tsp->types[timecnt++] = typ;\n\t\t}\n\t\tsp->timecnt = timecnt;\n\t\tfor (i = 0; i < sp->typecnt; ++i) {\n\t\t\tregister struct ttinfo *\tttisp;\n\t\t\tunsigned char isdst, desigidx;\n\n\t\t\tttisp = &sp->ttis[i];\n\t\t\tttisp->tt_utoff = detzcode(p);\n\t\t\tp += 4;\n\t\t\tisdst = *p++;\n\t\t\tif (! (isdst < 2))\n\t\t\t  return EINVAL;\n\t\t\tttisp->tt_isdst = isdst;\n\t\t\tdesigidx = *p++;\n\t\t\tif (! (desigidx < sp->charcnt))\n\t\t\t  return EINVAL;\n\t\t\tttisp->tt_desigidx = desigidx;\n\t\t}\n\t\tfor (i = 0; i < sp->charcnt; ++i)\n\t\t\tsp->chars[i] = *p++;\n\t\t/* Ensure '\\0'-terminated, and make it safe to call\n\t\t   ttunspecified later.  */\n\t\tmemset(&sp->chars[i], 0, CHARS_EXTRA);\n\n\t\t/* Read leap seconds, discarding those out of time_t range.  */\n\t\tleapcnt = 0;\n\t\tfor (i = 0; i < sp->leapcnt; ++i) {\n\t\t  int_fast64_t tr = stored == 4 ? detzcode(p) : detzcode64(p);\n\t\t  int_fast32_t corr = detzcode(p + stored);\n\t\t  p += stored + 4;\n\n\t\t  /* Leap seconds cannot occur before the Epoch,\n\t\t     or out of order.  */\n\t\t  if (tr <= prevtr)\n\t\t    return EINVAL;\n\n\t\t  /* To avoid other botches in this code, each leap second's\n\t\t     correction must differ from the previous one's by 1\n\t\t     second or less, except that the first correction can be\n\t\t     any value; these requirements are more generous than\n\t\t     RFC 9636, to allow future RFC extensions.  */\n\t\t  if (! (i == 0\n\t\t\t || (prevcorr < corr\n\t\t\t     ? corr == prevcorr + 1\n\t\t\t     : (corr == prevcorr\n\t\t\t\t|| corr == prevcorr - 1))))\n\t\t    return EINVAL;\n\t\t  prevtr = tr;\n\t\t  prevcorr = corr;\n\n\t\t  if (tr <= TIME_T_MAX) {\n\t\t    sp->lsis[leapcnt].ls_trans = tr;\n\t\t    sp->lsis[leapcnt].ls_corr = corr;\n\t\t    leapcnt++;\n\t\t  }\n\t\t}\n\t\tsp->leapcnt = leapcnt;\n\n\t\tfor (i = 0; i < sp->typecnt; ++i) {\n\t\t\tregister struct ttinfo *\tttisp;\n\n\t\t\tttisp = &sp->ttis[i];\n\t\t\tif (ttisstdcnt == 0)\n\t\t\t\tttisp->tt_ttisstd = false;\n\t\t\telse {\n\t\t\t\tif (*p != true && *p != false)\n\t\t\t\t  return EINVAL;\n\t\t\t\tttisp->tt_ttisstd = *p++;\n\t\t\t}\n\t\t}\n\t\tfor (i = 0; i < sp->typecnt; ++i) {\n\t\t\tregister struct ttinfo *\tttisp;\n\n\t\t\tttisp = &sp->ttis[i];\n\t\t\tif (ttisutcnt == 0)\n\t\t\t\tttisp->tt_ttisut = false;\n\t\t\telse {\n\t\t\t\tif (*p != true && *p != false)\n\t\t\t\t\t\treturn EINVAL;\n\t\t\t\tttisp->tt_ttisut = *p++;\n\t\t\t}\n\t\t}\n\t    }\n\n\t    nread -= p - up->buf;\n\t    memmove(up->buf, p, nread);\n\n\t    /* If this is an old file, we're done.  */\n\t    if (!version)\n\t      break;\n\t}\n\tif ((tzloadflags & TZLOAD_TZSTRING) && nread > 2 &&\n\t\tup->buf[0] == '\\n' && up->buf[nread - 1] == '\\n' &&\n\t\tsp->typecnt + 2 <= TZ_MAX_TYPES) {\n\t\t\tstruct state\t*ts = &lsp->u.st;\n\n\t\t\tup->buf[nread - 1] = '\\0';\n\t\t\tif (tzparse(&up->buf[1], ts, sp)) {\n\n\t\t\t  /* Attempt to reuse existing abbreviations.\n\t\t\t     Without this, America/Anchorage would be right on\n\t\t\t     the edge after 2037 when TZ_MAX_CHARS is 50, as\n\t\t\t     sp->charcnt equals 40 (for LMT AST AWT APT AHST\n\t\t\t     AHDT YST AKDT AKST) and ts->charcnt equals 10\n\t\t\t     (for AKST AKDT).  Reusing means sp->charcnt can\n\t\t\t     stay 40 in this example.  */\n\t\t\t  int gotabbr = 0;\n\t\t\t  int charcnt = sp->charcnt;\n\t\t\t  for (i = 0; i < ts->typecnt; i++) {\n\t\t\t    char *tsabbr = ts->chars + ts->ttis[i].tt_desigidx;\n\t\t\t    int j;\n\t\t\t    for (j = 0; j < charcnt; j++)\n\t\t\t      if (strcmp(sp->chars + j, tsabbr) == 0) {\n\t\t\t\tts->ttis[i].tt_desigidx = j;\n\t\t\t\tgotabbr++;\n\t\t\t\tbreak;\n\t\t\t      }\n\t\t\t    if (! (j < charcnt)) {\n\t\t\t      int tsabbrlen = strlen(tsabbr);\n\t\t\t      if (j + tsabbrlen < TZ_MAX_CHARS) {\n\t\t\t\tstrcpy(sp->chars + j, tsabbr);\n\t\t\t\tcharcnt = j + tsabbrlen + 1;\n\t\t\t\tts->ttis[i].tt_desigidx = j;\n\t\t\t\tgotabbr++;\n\t\t\t      }\n\t\t\t    }\n\t\t\t  }\n\t\t\t  if (gotabbr == ts->typecnt) {\n\t\t\t    sp->charcnt = charcnt;\n\n\t\t\t    /* Ignore any trailing, no-op transitions generated\n\t\t\t       by zic as they don't help here and can run afoul\n\t\t\t       of bugs in zic 2016j or earlier.  */\n\t\t\t    while (1 < sp->timecnt\n\t\t\t\t   && (sp->types[sp->timecnt - 1]\n\t\t\t\t       == sp->types[sp->timecnt - 2]))\n\t\t\t      sp->timecnt--;\n\n\t\t\t    sp->goahead = ts->goahead;\n\n\t\t\t    for (i = 0; i < ts->timecnt; i++) {\n\t\t\t      time_t t = ts->ats[i];\n\t\t\t      if (increment_overflow_time(&t, leapcorr(sp, t))\n\t\t\t\t  || (0 < sp->timecnt\n\t\t\t\t      && t <= sp->ats[sp->timecnt - 1]))\n\t\t\t\tcontinue;\n\t\t\t      if (TZ_MAX_TIMES <= sp->timecnt) {\n\t\t\t\tsp->goahead = false;\n\t\t\t\tbreak;\n\t\t\t      }\n\t\t\t      sp->ats[sp->timecnt] = t;\n\t\t\t      sp->types[sp->timecnt] = (sp->typecnt\n\t\t\t\t\t\t\t+ ts->types[i]);\n\t\t\t      sp->timecnt++;\n\t\t\t    }\n\t\t\t    for (i = 0; i < ts->typecnt; i++)\n\t\t\t      sp->ttis[sp->typecnt++] = ts->ttis[i];\n\t\t\t  }\n\t\t\t}\n\t}\n\tif (sp->typecnt == 0)\n\t  return EINVAL;\n\n\treturn 0;\n}\n\n/* Load tz data from the file named NAME into *SP.  Respect TZLOADFLAGS.\n   Return 0 on success, an errno value on failure.  */\nstatic int\ntzload(char const *name, struct state *sp, char tzloadflags)\n{\n#ifdef ALL_STATE\n  union local_storage *lsp = malloc(sizeof *lsp);\n  if (!lsp) {\n    return HAVE_MALLOC_ERRNO ? errno : ENOMEM;\n  } else {\n    int err = tzloadbody(name, sp, tzloadflags, lsp);\n    free(lsp);\n    return err;\n  }\n#else\n  union local_storage ls;\n  return tzloadbody(name, sp, tzloadflags, &ls);\n#endif\n}\n\nstatic const int\tmon_lengths[2][MONSPERYEAR] = {\n\t{ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 },\n\t{ 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 }\n};\n\nstatic const int\tyear_lengths[2] = {\n\tDAYSPERNYEAR, DAYSPERLYEAR\n};\n\n/* Is C an ASCII digit?  */\nstatic bool\nis_digit(char c)\n{\n  return '0' <= c && c <= '9';\n}\n\n/*\n** Given a pointer into a timezone string, scan until a character that is not\n** a valid character in a time zone abbreviation is found.\n** Return a pointer to that character.\n*/\n\nATTRIBUTE_PURE_114833 static const char *\ngetzname(register const char *strp)\n{\n\tregister char\tc;\n\n\twhile ((c = *strp) != '\\0' && !is_digit(c) && c != ',' && c != '-' &&\n\t\tc != '+')\n\t\t\t++strp;\n\treturn strp;\n}\n\n/*\n** Given a pointer into an extended timezone string, scan until the ending\n** delimiter of the time zone abbreviation is located.\n** Return a pointer to the delimiter.\n**\n** As with getzname above, the legal character set is actually quite\n** restricted, with other characters producing undefined results.\n** We don't do any checking here; checking is done later in common-case code.\n*/\n\nATTRIBUTE_PURE_114833 static const char *\ngetqzname(register const char *strp, const int delim)\n{\n\tregister int\tc;\n\n\twhile ((c = *strp) != '\\0' && c != delim)\n\t\t++strp;\n\treturn strp;\n}\n\n/*\n** Given a pointer into a timezone string, extract a number from that string.\n** Check that the number is within a specified range; if it is not, return\n** NULL.\n** Otherwise, return a pointer to the first character not part of the number.\n*/\n\nstatic const char *\ngetnum(register const char *strp, int *const nump, const int min, const int max)\n{\n\tregister char\tc;\n\tregister int\tnum;\n\n\tif (strp == NULL || !is_digit(c = *strp))\n\t\treturn NULL;\n\tnum = 0;\n\tdo {\n\t\tnum = num * 10 + (c - '0');\n\t\tif (num > max)\n\t\t\treturn NULL;\t/* illegal value */\n\t\tc = *++strp;\n\t} while (is_digit(c));\n\tif (num < min)\n\t\treturn NULL;\t\t/* illegal value */\n\t*nump = num;\n\treturn strp;\n}\n\n/*\n** Given a pointer into a timezone string, extract a number of seconds,\n** in hh[:mm[:ss]] form, from the string.\n** If any error occurs, return NULL.\n** Otherwise, return a pointer to the first character not part of the number\n** of seconds.\n*/\n\nstatic const char *\ngetsecs(register const char *strp, int_fast32_t *const secsp)\n{\n\tint\tnum;\n\tint_fast32_t secsperhour = SECSPERHOUR;\n\n\t/*\n\t** 'HOURSPERDAY * DAYSPERWEEK - 1' allows quasi-POSIX rules like\n\t** \"M10.4.6/26\", which does not conform to POSIX,\n\t** but which specifies the equivalent of\n\t** \"02:00 on the first Sunday on or after 23 Oct\".\n\t*/\n\tstrp = getnum(strp, &num, 0, HOURSPERDAY * DAYSPERWEEK - 1);\n\tif (strp == NULL)\n\t\treturn NULL;\n\t*secsp = num * secsperhour;\n\tif (*strp == ':') {\n\t\t++strp;\n\t\tstrp = getnum(strp, &num, 0, MINSPERHOUR - 1);\n\t\tif (strp == NULL)\n\t\t\treturn NULL;\n\t\t*secsp += num * SECSPERMIN;\n\t\tif (*strp == ':') {\n\t\t\t++strp;\n\t\t\t/* 'SECSPERMIN' allows for leap seconds.  */\n\t\t\tstrp = getnum(strp, &num, 0, SECSPERMIN);\n\t\t\tif (strp == NULL)\n\t\t\t\treturn NULL;\n\t\t\t*secsp += num;\n\t\t}\n\t}\n\treturn strp;\n}\n\n/*\n** Given a pointer into a timezone string, extract an offset, in\n** [+-]hh[:mm[:ss]] form, from the string.\n** If any error occurs, return NULL.\n** Otherwise, return a pointer to the first character not part of the time.\n*/\n\nstatic const char *\ngetoffset(register const char *strp, int_fast32_t *const offsetp)\n{\n\tregister bool neg = false;\n\n\tif (*strp == '-') {\n\t\tneg = true;\n\t\t++strp;\n\t} else if (*strp == '+')\n\t\t++strp;\n\tstrp = getsecs(strp, offsetp);\n\tif (strp == NULL)\n\t\treturn NULL;\t\t/* illegal time */\n\tif (neg)\n\t\t*offsetp = -*offsetp;\n\treturn strp;\n}\n\n/*\n** Given a pointer into a timezone string, extract a rule in the form\n** date[/time]. See POSIX Base Definitions section 8.3 variable TZ\n** for the format of \"date\" and \"time\".\n** If a valid rule is not found, return NULL.\n** Otherwise, return a pointer to the first character not part of the rule.\n*/\n\nstatic const char *\ngetrule(const char *strp, register struct rule *const rulep)\n{\n\tif (*strp == 'J') {\n\t\t/*\n\t\t** Julian day.\n\t\t*/\n\t\trulep->r_type = JULIAN_DAY;\n\t\t++strp;\n\t\tstrp = getnum(strp, &rulep->r_day, 1, DAYSPERNYEAR);\n\t} else if (*strp == 'M') {\n\t\t/*\n\t\t** Month, week, day.\n\t\t*/\n\t\trulep->r_type = MONTH_NTH_DAY_OF_WEEK;\n\t\t++strp;\n\t\tstrp = getnum(strp, &rulep->r_mon, 1, MONSPERYEAR);\n\t\tif (strp == NULL)\n\t\t\treturn NULL;\n\t\tif (*strp++ != '.')\n\t\t\treturn NULL;\n\t\tstrp = getnum(strp, &rulep->r_week, 1, 5);\n\t\tif (strp == NULL)\n\t\t\treturn NULL;\n\t\tif (*strp++ != '.')\n\t\t\treturn NULL;\n\t\tstrp = getnum(strp, &rulep->r_day, 0, DAYSPERWEEK - 1);\n\t} else if (is_digit(*strp)) {\n\t\t/*\n\t\t** Day of year.\n\t\t*/\n\t\trulep->r_type = DAY_OF_YEAR;\n\t\tstrp = getnum(strp, &rulep->r_day, 0, DAYSPERLYEAR - 1);\n\t} else\treturn NULL;\t\t/* invalid format */\n\tif (strp == NULL)\n\t\treturn NULL;\n\tif (*strp == '/') {\n\t\t/*\n\t\t** Time specified.\n\t\t*/\n\t\t++strp;\n\t\tstrp = getoffset(strp, &rulep->r_time);\n\t} else\trulep->r_time = 2 * SECSPERHOUR;\t/* default = 2:00:00 */\n\treturn strp;\n}\n\n/*\n** Given a year, a rule, and the offset from UT at the time that rule takes\n** effect, calculate the year-relative time that rule takes effect.\n*/\n\nstatic int_fast32_t\ntranstime(const int year, register const struct rule *const rulep,\n\t  const int_fast32_t offset)\n{\n\tregister bool\tleapyear;\n\tregister int_fast32_t value;\n\tregister int\ti;\n\tint\t\td, m1, yy0, yy1, yy2, dow;\n\n\tleapyear = isleap(year);\n\tswitch (rulep->r_type) {\n\n\tcase JULIAN_DAY:\n\t\t/*\n\t\t** Jn - Julian day, 1 == January 1, 60 == March 1 even in leap\n\t\t** years.\n\t\t** In non-leap years, or if the day number is 59 or less, just\n\t\t** add SECSPERDAY times the day number-1 to the time of\n\t\t** January 1, midnight, to get the day.\n\t\t*/\n\t\tvalue = (rulep->r_day - 1) * SECSPERDAY;\n\t\tif (leapyear && rulep->r_day >= 60)\n\t\t\tvalue += SECSPERDAY;\n\t\tbreak;\n\n\tcase DAY_OF_YEAR:\n\t\t/*\n\t\t** n - day of year.\n\t\t** Just add SECSPERDAY times the day number to the time of\n\t\t** January 1, midnight, to get the day.\n\t\t*/\n\t\tvalue = rulep->r_day * SECSPERDAY;\n\t\tbreak;\n\n\tcase MONTH_NTH_DAY_OF_WEEK:\n\t\t/*\n\t\t** Mm.n.d - nth \"dth day\" of month m.\n\t\t*/\n\n\t\t/*\n\t\t** Use Zeller's Congruence to get day-of-week of first day of\n\t\t** month.\n\t\t*/\n\t\tm1 = (rulep->r_mon + 9) % 12 + 1;\n\t\tyy0 = (rulep->r_mon <= 2) ? (year - 1) : year;\n\t\tyy1 = yy0 / 100;\n\t\tyy2 = yy0 % 100;\n\t\tdow = ((26 * m1 - 2) / 10 +\n\t\t\t1 + yy2 + yy2 / 4 + yy1 / 4 - 2 * yy1) % 7;\n\t\tif (dow < 0)\n\t\t\tdow += DAYSPERWEEK;\n\n\t\t/*\n\t\t** \"dow\" is the day-of-week of the first day of the month. Get\n\t\t** the day-of-month (zero-origin) of the first \"dow\" day of the\n\t\t** month.\n\t\t*/\n\t\td = rulep->r_day - dow;\n\t\tif (d < 0)\n\t\t\td += DAYSPERWEEK;\n\t\tfor (i = 1; i < rulep->r_week; ++i) {\n\t\t\tif (d + DAYSPERWEEK >=\n\t\t\t\tmon_lengths[leapyear][rulep->r_mon - 1])\n\t\t\t\t\tbreak;\n\t\t\td += DAYSPERWEEK;\n\t\t}\n\n\t\t/*\n\t\t** \"d\" is the day-of-month (zero-origin) of the day we want.\n\t\t*/\n\t\tvalue = d * SECSPERDAY;\n\t\tfor (i = 0; i < rulep->r_mon - 1; ++i)\n\t\t\tvalue += mon_lengths[leapyear][i] * SECSPERDAY;\n\t\tbreak;\n\n\tdefault: unreachable();\n\t}\n\n\t/*\n\t** \"value\" is the year-relative time of 00:00:00 UT on the day in\n\t** question. To get the year-relative time of the specified local\n\t** time on that day, add the transition time and the current offset\n\t** from UT.\n\t*/\n\treturn value + rulep->r_time + offset;\n}\n\n/*\n** Given a POSIX.1 proleptic TZ string, fill in the rule tables as\n** appropriate.\n*/\n\nstatic bool\ntzparse(const char *name, struct state *sp, struct state const *basep)\n{\n\tconst char *\t\t\tstdname;\n\tconst char *\t\t\tdstname;\n\tint_fast32_t\t\t\tstdoffset;\n\tint_fast32_t\t\t\tdstoffset;\n\tregister char *\t\t\tcp;\n\tregister bool\t\t\tload_ok;\n\tptrdiff_t stdlen, dstlen, charcnt;\n\ttime_t atlo = TIME_T_MIN, leaplo = TIME_T_MIN;\n\n\tstdname = name;\n\tif (*name == '<') {\n\t  name++;\n\t  stdname = name;\n\t  name = getqzname(name, '>');\n\t  if (*name != '>')\n\t    return false;\n\t  stdlen = name - stdname;\n\t  name++;\n\t} else {\n\t  name = getzname(name);\n\t  stdlen = name - stdname;\n\t}\n\tif (! (0 < stdlen && stdlen <= TZNAME_MAXIMUM))\n\t  return false;\n\tname = getoffset(name, &stdoffset);\n\tif (name == NULL)\n\t  return false;\n\tcharcnt = stdlen + 1;\n\tif (basep) {\n\t  if (0 < basep->timecnt)\n\t    atlo = basep->ats[basep->timecnt - 1];\n\t  load_ok = false;\n\t  sp->leapcnt = basep->leapcnt;\n\t  memcpy(sp->lsis, basep->lsis, sp->leapcnt * sizeof *sp->lsis);\n\t} else {\n\t  load_ok = tzload(TZDEFRULES, sp, 0) == 0;\n\t  if (!load_ok)\n\t    sp->leapcnt = 0;\t/* So, we're off a little.  */\n\t}\n\tif (0 < sp->leapcnt)\n\t  leaplo = sp->lsis[sp->leapcnt - 1].ls_trans;\n\tsp->goback = sp->goahead = false;\n\tif (*name != '\\0') {\n\t\tif (*name == '<') {\n\t\t\tdstname = ++name;\n\t\t\tname = getqzname(name, '>');\n\t\t\tif (*name != '>')\n\t\t\t  return false;\n\t\t\tdstlen = name - dstname;\n\t\t\tname++;\n\t\t} else {\n\t\t\tdstname = name;\n\t\t\tname = getzname(name);\n\t\t\tdstlen = name - dstname; /* length of DST abbr. */\n\t\t}\n\t\tif (! (0 < dstlen && dstlen <= TZNAME_MAXIMUM))\n\t\t  return false;\n\t\tcharcnt += dstlen + 1;\n\t\tif (*name != '\\0' && *name != ',' && *name != ';') {\n\t\t\tname = getoffset(name, &dstoffset);\n\t\t\tif (name == NULL)\n\t\t\t  return false;\n\t\t} else\tdstoffset = stdoffset - SECSPERHOUR;\n\t\tif (*name == '\\0' && !load_ok)\n\t\t\tname = TZDEFRULESTRING;\n\t\tif (*name == ',' || *name == ';') {\n\t\t\tstruct rule\tstart;\n\t\t\tstruct rule\tend;\n\t\t\tregister int\tyear;\n\t\t\tregister int\ttimecnt;\n\t\t\ttime_t\t\tjanfirst;\n\t\t\tint_fast32_t janoffset = 0;\n\t\t\tint yearbeg, yearlim;\n\n\t\t\t++name;\n\t\t\tif ((name = getrule(name, &start)) == NULL)\n\t\t\t  return false;\n\t\t\tif (*name++ != ',')\n\t\t\t  return false;\n\t\t\tif ((name = getrule(name, &end)) == NULL)\n\t\t\t  return false;\n\t\t\tif (*name != '\\0')\n\t\t\t  return false;\n\t\t\tsp->typecnt = 2;\t/* standard time and DST */\n\t\t\t/*\n\t\t\t** Two transitions per year, from EPOCH_YEAR forward.\n\t\t\t*/\n\t\t\tinit_ttinfo(&sp->ttis[0], -stdoffset, false, 0);\n\t\t\tinit_ttinfo(&sp->ttis[1], -dstoffset, true, stdlen + 1);\n\t\t\ttimecnt = 0;\n\t\t\tjanfirst = 0;\n\t\t\tyearbeg = EPOCH_YEAR;\n\n\t\t\tdo {\n\t\t\t  int_fast32_t yearsecs\n\t\t\t    = year_lengths[isleap(yearbeg - 1)] * SECSPERDAY;\n\t\t\t  time_t janfirst1 = janfirst;\n\t\t\t  yearbeg--;\n\t\t\t  if (increment_overflow_time(&janfirst1, -yearsecs)) {\n\t\t\t    janoffset = -yearsecs;\n\t\t\t    break;\n\t\t\t  }\n\t\t\t  janfirst = janfirst1;\n\t\t\t} while (atlo < janfirst\n\t\t\t\t && EPOCH_YEAR - YEARSPERREPEAT / 2 < yearbeg);\n\n\t\t\twhile (true) {\n\t\t\t  int_fast32_t yearsecs\n\t\t\t    = year_lengths[isleap(yearbeg)] * SECSPERDAY;\n\t\t\t  int yearbeg1 = yearbeg;\n\t\t\t  time_t janfirst1 = janfirst;\n\t\t\t  if (increment_overflow_time(&janfirst1, yearsecs)\n\t\t\t      || increment_overflow(&yearbeg1, 1)\n\t\t\t      || atlo <= janfirst1)\n\t\t\t    break;\n\t\t\t  yearbeg = yearbeg1;\n\t\t\t  janfirst = janfirst1;\n\t\t\t}\n\n\t\t\tyearlim = yearbeg;\n\t\t\tif (increment_overflow(&yearlim, years_of_observations))\n\t\t\t  yearlim = INT_MAX;\n\t\t\tfor (year = yearbeg; year < yearlim; year++) {\n\t\t\t\tint_fast32_t\n\t\t\t\t  starttime = transtime(year, &start, stdoffset),\n\t\t\t\t  endtime = transtime(year, &end, dstoffset);\n\t\t\t\tint_fast32_t\n\t\t\t\t  yearsecs = (year_lengths[isleap(year)]\n\t\t\t\t\t      * SECSPERDAY);\n\t\t\t\tbool reversed = endtime < starttime;\n\t\t\t\tif (reversed) {\n\t\t\t\t\tint_fast32_t swap = starttime;\n\t\t\t\t\tstarttime = endtime;\n\t\t\t\t\tendtime = swap;\n\t\t\t\t}\n\t\t\t\tif (reversed\n\t\t\t\t    || (starttime < endtime\n\t\t\t\t\t&& endtime - starttime < yearsecs)) {\n\t\t\t\t\tif (TZ_MAX_TIMES - 2 < timecnt)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tsp->ats[timecnt] = janfirst;\n\t\t\t\t\tif (! increment_overflow_time\n\t\t\t\t\t    (&sp->ats[timecnt],\n\t\t\t\t\t     janoffset + starttime)\n\t\t\t\t\t    && atlo <= sp->ats[timecnt])\n\t\t\t\t\t  sp->types[timecnt++] = !reversed;\n\t\t\t\t\tsp->ats[timecnt] = janfirst;\n\t\t\t\t\tif (! increment_overflow_time\n\t\t\t\t\t    (&sp->ats[timecnt],\n\t\t\t\t\t     janoffset + endtime)\n\t\t\t\t\t    && atlo <= sp->ats[timecnt]) {\n\t\t\t\t\t  sp->types[timecnt++] = reversed;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (endtime < leaplo) {\n\t\t\t\t  yearlim = year;\n\t\t\t\t  if (increment_overflow(&yearlim,\n\t\t\t\t\t\t\t years_of_observations))\n\t\t\t\t    yearlim = INT_MAX;\n\t\t\t\t}\n\t\t\t\tif (increment_overflow_time\n\t\t\t\t    (&janfirst, janoffset + yearsecs))\n\t\t\t\t\tbreak;\n\t\t\t\tjanoffset = 0;\n\t\t\t}\n\t\t\tsp->timecnt = timecnt;\n\t\t\tif (! timecnt) {\n\t\t\t\tsp->ttis[0] = sp->ttis[1];\n\t\t\t\tsp->typecnt = 1;\t/* Perpetual DST.  */\n\t\t\t} else if (years_of_observations <= year - yearbeg)\n\t\t\t\tsp->goback = sp->goahead = true;\n\t\t} else {\n\t\t\tregister int_fast32_t\ttheirstdoffset;\n\t\t\tregister int_fast32_t\ttheirdstoffset;\n\t\t\tregister int_fast32_t\ttheiroffset;\n\t\t\tregister bool\t\tisdst;\n\t\t\tregister int\t\ti;\n\t\t\tregister int\t\tj;\n\n\t\t\tif (*name != '\\0')\n\t\t\t  return false;\n\t\t\t/*\n\t\t\t** Initial values of theirstdoffset and theirdstoffset.\n\t\t\t*/\n\t\t\ttheirstdoffset = 0;\n\t\t\tfor (i = 0; i < sp->timecnt; ++i) {\n\t\t\t\tj = sp->types[i];\n\t\t\t\tif (!sp->ttis[j].tt_isdst) {\n\t\t\t\t\ttheirstdoffset =\n\t\t\t\t\t\t- sp->ttis[j].tt_utoff;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttheirdstoffset = 0;\n\t\t\tfor (i = 0; i < sp->timecnt; ++i) {\n\t\t\t\tj = sp->types[i];\n\t\t\t\tif (sp->ttis[j].tt_isdst) {\n\t\t\t\t\ttheirdstoffset =\n\t\t\t\t\t\t- sp->ttis[j].tt_utoff;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\t/*\n\t\t\t** Initially we're assumed to be in standard time.\n\t\t\t*/\n\t\t\tisdst = false;\n\t\t\t/*\n\t\t\t** Now juggle transition times and types\n\t\t\t** tracking offsets as you do.\n\t\t\t*/\n\t\t\tfor (i = 0; i < sp->timecnt; ++i) {\n\t\t\t\tj = sp->types[i];\n\t\t\t\tsp->types[i] = sp->ttis[j].tt_isdst;\n\t\t\t\tif (sp->ttis[j].tt_ttisut) {\n\t\t\t\t\t/* No adjustment to transition time */\n\t\t\t\t} else {\n\t\t\t\t\t/*\n\t\t\t\t\t** If daylight saving time is in\n\t\t\t\t\t** effect, and the transition time was\n\t\t\t\t\t** not specified as standard time, add\n\t\t\t\t\t** the daylight saving time offset to\n\t\t\t\t\t** the transition time; otherwise, add\n\t\t\t\t\t** the standard time offset to the\n\t\t\t\t\t** transition time.\n\t\t\t\t\t*/\n\t\t\t\t\t/*\n\t\t\t\t\t** Transitions from DST to DDST\n\t\t\t\t\t** will effectively disappear since\n\t\t\t\t\t** proleptic TZ strings have only one\n\t\t\t\t\t** DST offset.\n\t\t\t\t\t*/\n\t\t\t\t\tif (isdst && !sp->ttis[j].tt_ttisstd) {\n\t\t\t\t\t\tsp->ats[i] += dstoffset -\n\t\t\t\t\t\t\ttheirdstoffset;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsp->ats[i] += stdoffset -\n\t\t\t\t\t\t\ttheirstdoffset;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\ttheiroffset = -sp->ttis[j].tt_utoff;\n\t\t\t\tif (sp->ttis[j].tt_isdst)\n\t\t\t\t\ttheirdstoffset = theiroffset;\n\t\t\t\telse\ttheirstdoffset = theiroffset;\n\t\t\t}\n\t\t\t/*\n\t\t\t** Finally, fill in ttis.\n\t\t\t*/\n\t\t\tinit_ttinfo(&sp->ttis[0], -stdoffset, false, 0);\n\t\t\tinit_ttinfo(&sp->ttis[1], -dstoffset, true, stdlen + 1);\n\t\t\tsp->typecnt = 2;\n\t\t}\n\t} else {\n\t\tdstlen = 0;\n\t\tsp->typecnt = 1;\t\t/* only standard time */\n\t\tsp->timecnt = 0;\n\t\tinit_ttinfo(&sp->ttis[0], -stdoffset, false, 0);\n\t}\n\tsp->charcnt = charcnt;\n\tcp = sp->chars;\n\tmemcpy(cp, stdname, stdlen);\n\tcp += stdlen;\n\t*cp++ = '\\0';\n\tif (dstlen != 0) {\n\t\tmemcpy(cp, dstname, dstlen);\n\t\t*(cp + dstlen) = '\\0';\n\t}\n\treturn true;\n}\n\nstatic void\ngmtload(struct state *const sp)\n{\n\tif (tzload(etc_utc, sp, TZLOAD_TZSTRING) != 0)\n\t  tzparse(\"UTC0\", sp, NULL);\n}\n\n#if !USE_TIMEX_T || !defined TM_GMTOFF\n\n/* Initialize *SP to a value appropriate for the TZ setting NAME.\n   Respect TZLOADFLAGS.\n   Return 0 on success, an errno value on failure.  */\nstatic int\nzoneinit(struct state *sp, char const *name, char tzloadflags)\n{\n  if (name && ! name[0]) {\n    /*\n    ** User wants it fast rather than right.\n    */\n    sp->leapcnt = 0;\t\t/* so, we're off a little */\n    sp->timecnt = 0;\n    sp->typecnt = 0;\n    sp->charcnt = 0;\n    sp->goback = sp->goahead = false;\n    init_ttinfo(&sp->ttis[0], 0, false, 0);\n    strcpy(sp->chars, utc);\n    return 0;\n  } else {\n    int err = tzload(name, sp, tzloadflags);\n    if (err != 0 && name && name[0] != ':' && tzparse(name, sp, NULL))\n      err = 0;\n    if (err == 0)\n      err = scrub_abbrs(sp);\n    return err;\n  }\n}\n\nstatic void\ntzset_unlocked(void)\n{\n  char const *name = getenv(\"TZ\");\n  struct state *sp = lclptr;\n  int lcl = name ? strlen(name) < sizeof lcl_TZname : -1;\n  if (lcl < 0\n      ? lcl_is_set < 0\n      : 0 < lcl_is_set && strcmp(lcl_TZname, name) == 0)\n    return;\n# ifdef ALL_STATE\n  if (! sp)\n    lclptr = sp = malloc(sizeof *lclptr);\n# endif\n  if (sp) {\n    if (zoneinit(sp, name, TZLOAD_FROMENV | TZLOAD_TZSTRING) != 0) {\n      zoneinit(sp, \"\", 0);\n      strcpy(sp->chars, UNSPEC);\n    }\n    if (0 < lcl)\n      strcpy(lcl_TZname, name);\n  }\n  settzname();\n  lcl_is_set = lcl;\n}\n\n#endif\n\n#if !USE_TIMEX_T\nvoid\ntzset(void)\n{\n  if (lock() != 0)\n    return;\n  tzset_unlocked();\n  unlock();\n}\n#endif\n\nstatic void\ngmtcheck(void)\n{\n  static bool gmt_is_set;\n  if (lock() != 0)\n    return;\n  if (! gmt_is_set) {\n#ifdef ALL_STATE\n    gmtptr = malloc(sizeof *gmtptr);\n#endif\n    if (gmtptr)\n      gmtload(gmtptr);\n    gmt_is_set = true;\n  }\n  unlock();\n}\n\n#if NETBSD_INSPIRED && !USE_TIMEX_T\n\ntimezone_t\ntzalloc(char const *name)\n{\n  timezone_t sp = malloc(sizeof *sp);\n  if (sp) {\n    int err = zoneinit(sp, name, TZLOAD_TZSTRING);\n    if (err != 0) {\n      free(sp);\n      errno = err;\n      return NULL;\n    }\n  } else if (!HAVE_MALLOC_ERRNO)\n    errno = ENOMEM;\n  return sp;\n}\n\nvoid\ntzfree(timezone_t sp)\n{\n  free(sp);\n}\n\n/*\n** NetBSD 6.1.4 has ctime_rz, but omit it because C23 deprecates ctime and\n** POSIX.1-2024 removes ctime_r.  Both have potential security problems that\n** ctime_rz would share.  Callers can instead use localtime_rz + strftime.\n**\n** NetBSD 6.1.4 has tzgetname, but omit it because it doesn't work\n** in zones with three or more time zone abbreviations.\n** Callers can instead use localtime_rz + strftime.\n*/\n\n#endif\n\n#if !USE_TIMEX_T || !defined TM_GMTOFF\n\n/*\n** The easy way to behave \"as if no library function calls\" localtime\n** is to not call it, so we drop its guts into \"localsub\", which can be\n** freely called. (And no, the PANS doesn't require the above behavior,\n** but it *is* desirable.)\n**\n** If successful and SETNAME is nonzero,\n** set the applicable parts of tzname, timezone and altzone;\n** however, it's OK to omit this step for proleptic TZ strings\n** since in that case tzset should have already done this step correctly.\n** SETNAME's type is int_fast32_t for compatibility with gmtsub,\n** but it is actually a boolean and its value should be 0 or 1.\n*/\n\n/*ARGSUSED*/\nstatic struct tm *\nlocalsub(struct state const *sp, time_t const *timep, int_fast32_t setname,\n\t struct tm *const tmp)\n{\n\tregister const struct ttinfo *\tttisp;\n\tregister int\t\t\ti;\n\tregister struct tm *\t\tresult;\n\tconst time_t\t\t\tt = *timep;\n\n\tif (sp == NULL) {\n\t  /* Don't bother to set tzname etc.; tzset has already done it.  */\n\t  return gmtsub(gmtptr, timep, 0, tmp);\n\t}\n\tif ((sp->goback && t < sp->ats[0]) ||\n\t\t(sp->goahead && t > sp->ats[sp->timecnt - 1])) {\n\t\t\ttime_t newt;\n\t\t\tregister time_t\t\tseconds;\n\t\t\tregister time_t\t\tyears;\n\n\t\t\tif (t < sp->ats[0])\n\t\t\t\tseconds = sp->ats[0] - t;\n\t\t\telse\tseconds = t - sp->ats[sp->timecnt - 1];\n\t\t\t--seconds;\n\n\t\t\t/* Beware integer overflow, as SECONDS might\n\t\t\t   be close to the maximum time_t.  */\n\t\t\tyears = seconds / SECSPERREPEAT * YEARSPERREPEAT;\n\t\t\tseconds = years * AVGSECSPERYEAR;\n\t\t\tyears += YEARSPERREPEAT;\n\t\t\tif (t < sp->ats[0])\n\t\t\t  newt = t + seconds + SECSPERREPEAT;\n\t\t\telse\n\t\t\t  newt = t - seconds - SECSPERREPEAT;\n\n\t\t\tif (newt < sp->ats[0] ||\n\t\t\t\tnewt > sp->ats[sp->timecnt - 1])\n\t\t\t\t\treturn NULL;\t/* \"cannot happen\" */\n\t\t\tresult = localsub(sp, &newt, setname, tmp);\n\t\t\tif (result) {\n# if defined ckd_add && defined ckd_sub\n\t\t\t\tif (t < sp->ats[0]\n\t\t\t\t    ? ckd_sub(&result->tm_year,\n\t\t\t\t\t      result->tm_year, years)\n\t\t\t\t    : ckd_add(&result->tm_year,\n\t\t\t\t\t      result->tm_year, years))\n\t\t\t\t  return NULL;\n# else\n\t\t\t\tregister int_fast64_t newy;\n\n\t\t\t\tnewy = result->tm_year;\n\t\t\t\tif (t < sp->ats[0])\n\t\t\t\t\tnewy -= years;\n\t\t\t\telse\tnewy += years;\n\t\t\t\tif (! (INT_MIN <= newy && newy <= INT_MAX))\n\t\t\t\t\treturn NULL;\n\t\t\t\tresult->tm_year = newy;\n# endif\n\t\t\t}\n\t\t\treturn result;\n\t}\n\tif (sp->timecnt == 0 || t < sp->ats[0]) {\n\t\ti = 0;\n\t} else {\n\t\tregister int\tlo = 1;\n\t\tregister int\thi = sp->timecnt;\n\n\t\twhile (lo < hi) {\n\t\t\tregister int\tmid = (lo + hi) >> 1;\n\n\t\t\tif (t < sp->ats[mid])\n\t\t\t\thi = mid;\n\t\t\telse\tlo = mid + 1;\n\t\t}\n\t\ti = sp->types[lo - 1];\n\t}\n\tttisp = &sp->ttis[i];\n\t/*\n\t** To get (wrong) behavior that's compatible with System V Release 2.0\n\t** you'd replace the statement below with\n\t**\tt += ttisp->tt_utoff;\n\t**\ttimesub(&t, 0L, sp, tmp);\n\t*/\n\tresult = timesub(&t, ttisp->tt_utoff, sp, tmp);\n\tif (result) {\n\t  result->tm_isdst = ttisp->tt_isdst;\n# ifdef TM_ZONE\n\t  result->TM_ZONE = UNCONST(&sp->chars[ttisp->tt_desigidx]);\n# endif\n\t  if (setname)\n\t    update_tzname_etc(sp, ttisp);\n\t}\n\treturn result;\n}\n#endif\n\n#if !USE_TIMEX_T\n\n# if NETBSD_INSPIRED\nstruct tm *\nlocaltime_rz(struct state *restrict sp, time_t const *restrict timep,\n\t     struct tm *restrict tmp)\n{\n  return localsub(sp, timep, 0, tmp);\n}\n# endif\n\nstatic struct tm *\nlocaltime_tzset(time_t const *timep, struct tm *tmp, bool setname)\n{\n  int err = lock();\n  if (err) {\n    errno = err;\n    return NULL;\n  }\n  if (setname || !lcl_is_set)\n    tzset_unlocked();\n  tmp = localsub(lclptr, timep, setname, tmp);\n  unlock();\n  return tmp;\n}\n\nstruct tm *\nlocaltime(const time_t *timep)\n{\n# if !SUPPORT_C89\n  static struct tm tm;\n# endif\n  return localtime_tzset(timep, &tm, true);\n}\n\nstruct tm *\nlocaltime_r(const time_t *restrict timep, struct tm *restrict tmp)\n{\n  return localtime_tzset(timep, tmp, false);\n}\n#endif\n\n/*\n** gmtsub is to gmtime as localsub is to localtime.\n*/\n\nstatic struct tm *\ngmtsub(ATTRIBUTE_MAYBE_UNUSED struct state const *sp, time_t const *timep,\n       int_fast32_t offset, struct tm *tmp)\n{\n\tregister struct tm *\tresult;\n\n\tresult = timesub(timep, offset, gmtptr, tmp);\n#ifdef TM_ZONE\n\t/*\n\t** Could get fancy here and deliver something such as\n\t** \"+xx\" or \"-xx\" if offset is non-zero,\n\t** but this is no time for a treasure hunt.\n\t*/\n\ttmp->TM_ZONE = UNCONST(offset ? wildabbr\n\t\t\t       : gmtptr ? gmtptr->chars : utc);\n#endif /* defined TM_ZONE */\n\treturn result;\n}\n\n#if !USE_TIMEX_T\n\n/*\n* Re-entrant version of gmtime.\n*/\n\nstruct tm *\ngmtime_r(time_t const *restrict timep, struct tm *restrict tmp)\n{\n  gmtcheck();\n  return gmtsub(gmtptr, timep, 0, tmp);\n}\n\nstruct tm *\ngmtime(const time_t *timep)\n{\n# if !SUPPORT_C89\n  static struct tm tm;\n# endif\n  return gmtime_r(timep, &tm);\n}\n\n# if STD_INSPIRED\n\n/* This function is obsolescent and may disappear in future releases.\n   Callers can instead use localtime_rz with a fixed-offset zone.  */\n\nstruct tm *\nofftime(const time_t *timep, long offset)\n{\n  gmtcheck();\n\n#  if !SUPPORT_C89\n  static struct tm tm;\n#  endif\n  return gmtsub(gmtptr, timep, offset, &tm);\n}\n\n# endif\n#endif\n\n/*\n** Return the number of leap years through the end of the given year\n** where, to make the math easy, the answer for year zero is defined as zero.\n*/\n\nstatic time_t\nleaps_thru_end_of_nonneg(time_t y)\n{\n  return y / 4 - y / 100 + y / 400;\n}\n\nstatic time_t\nleaps_thru_end_of(time_t y)\n{\n  return (y < 0\n\t  ? -1 - leaps_thru_end_of_nonneg(-1 - y)\n\t  : leaps_thru_end_of_nonneg(y));\n}\n\nstatic struct tm *\ntimesub(const time_t *timep, int_fast32_t offset,\n\tconst struct state *sp, struct tm *tmp)\n{\n\tregister const struct lsinfo *\tlp;\n\tregister time_t\t\t\ttdays;\n\tregister const int *\t\tip;\n\tregister int_fast32_t\t\tcorr;\n\tregister int\t\t\ti;\n\tint_fast32_t idays, rem, dayoff, dayrem;\n\ttime_t y;\n\n\t/* If less than SECSPERMIN, the number of seconds since the\n\t   most recent positive leap second; otherwise, do not add 1\n\t   to localtime tm_sec because of leap seconds.  */\n\ttime_t secs_since_posleap = SECSPERMIN;\n\n\tcorr = 0;\n\ti = (sp == NULL) ? 0 : sp->leapcnt;\n\twhile (--i >= 0) {\n\t\tlp = &sp->lsis[i];\n\t\tif (*timep >= lp->ls_trans) {\n\t\t\tcorr = lp->ls_corr;\n\t\t\tif ((i == 0 ? 0 : lp[-1].ls_corr) < corr)\n\t\t\t  secs_since_posleap = *timep - lp->ls_trans;\n\t\t\tbreak;\n\t\t}\n\t}\n\n\t/* Calculate the year, avoiding integer overflow even if\n\t   time_t is unsigned.  */\n\ttdays = *timep / SECSPERDAY;\n\trem = *timep % SECSPERDAY;\n\trem += offset % SECSPERDAY - corr % SECSPERDAY + 3 * SECSPERDAY;\n\tdayoff = offset / SECSPERDAY - corr / SECSPERDAY + rem / SECSPERDAY - 3;\n\trem %= SECSPERDAY;\n\t/* y = (EPOCH_YEAR\n\t\t+ floor((tdays + dayoff) / DAYSPERREPEAT) * YEARSPERREPEAT),\n\t   sans overflow.  But calculate against 1570 (EPOCH_YEAR -\n\t   YEARSPERREPEAT) instead of against 1970 so that things work\n\t   for localtime values before 1970 when time_t is unsigned.  */\n\tdayrem = tdays % DAYSPERREPEAT;\n\tdayrem += dayoff % DAYSPERREPEAT;\n\ty = (EPOCH_YEAR - YEARSPERREPEAT\n\t     + ((1 + dayoff / DAYSPERREPEAT + dayrem / DAYSPERREPEAT\n\t\t - ((dayrem % DAYSPERREPEAT) < 0)\n\t\t + tdays / DAYSPERREPEAT)\n\t\t* YEARSPERREPEAT));\n\t/* idays = (tdays + dayoff) mod DAYSPERREPEAT, sans overflow.  */\n\tidays = tdays % DAYSPERREPEAT;\n\tidays += dayoff % DAYSPERREPEAT + 2 * DAYSPERREPEAT;\n\tidays %= DAYSPERREPEAT;\n\t/* Increase Y and decrease IDAYS until IDAYS is in range for Y.  */\n\twhile (year_lengths[isleap(y)] <= idays) {\n\t\tint tdelta = idays / DAYSPERLYEAR;\n\t\tint_fast32_t ydelta = tdelta + !tdelta;\n\t\ttime_t newy = y + ydelta;\n\t\tregister int\tleapdays;\n\t\tleapdays = leaps_thru_end_of(newy - 1) -\n\t\t\tleaps_thru_end_of(y - 1);\n\t\tidays -= ydelta * DAYSPERNYEAR;\n\t\tidays -= leapdays;\n\t\ty = newy;\n\t}\n\n#ifdef ckd_add\n\tif (ckd_add(&tmp->tm_year, y, -TM_YEAR_BASE)) {\n\t  errno = EOVERFLOW;\n\t  return NULL;\n\t}\n#else\n\tif (!TYPE_SIGNED(time_t) && y < TM_YEAR_BASE) {\n\t  int signed_y = y;\n\t  tmp->tm_year = signed_y - TM_YEAR_BASE;\n\t} else if ((!TYPE_SIGNED(time_t) || INT_MIN + TM_YEAR_BASE <= y)\n\t\t   && y - TM_YEAR_BASE <= INT_MAX)\n\t  tmp->tm_year = y - TM_YEAR_BASE;\n\telse {\n\t  errno = EOVERFLOW;\n\t  return NULL;\n\t}\n#endif\n\ttmp->tm_yday = idays;\n\t/*\n\t** The \"extra\" mods below avoid overflow problems.\n\t*/\n\ttmp->tm_wday = (TM_WDAY_BASE\n\t\t\t+ ((tmp->tm_year % DAYSPERWEEK)\n\t\t\t   * (DAYSPERNYEAR % DAYSPERWEEK))\n\t\t\t+ leaps_thru_end_of(y - 1)\n\t\t\t- leaps_thru_end_of(TM_YEAR_BASE - 1)\n\t\t\t+ idays);\n\ttmp->tm_wday %= DAYSPERWEEK;\n\tif (tmp->tm_wday < 0)\n\t\ttmp->tm_wday += DAYSPERWEEK;\n\ttmp->tm_hour = rem / SECSPERHOUR;\n\trem %= SECSPERHOUR;\n\ttmp->tm_min = rem / SECSPERMIN;\n\ttmp->tm_sec = rem % SECSPERMIN;\n\n\t/* Use \"... ??:??:60\" at the end of the localtime minute containing\n\t   the second just before the positive leap second.  */\n\ttmp->tm_sec += secs_since_posleap <= tmp->tm_sec;\n\n\tip = mon_lengths[isleap(y)];\n\tfor (tmp->tm_mon = 0; idays >= ip[tmp->tm_mon]; ++(tmp->tm_mon))\n\t\tidays -= ip[tmp->tm_mon];\n\ttmp->tm_mday = idays + 1;\n\ttmp->tm_isdst = 0;\n#ifdef TM_GMTOFF\n\ttmp->TM_GMTOFF = offset;\n#endif /* defined TM_GMTOFF */\n\treturn tmp;\n}\n\n/*\n** Adapted from code provided by Robert Elz, who writes:\n**\tThe \"best\" way to do mktime I think is based on an idea of Bob\n**\tKridle's (so its said...) from a long time ago.\n**\tIt does a binary search of the time_t space. Since time_t's are\n**\tjust 32 bits, its a max of 32 iterations (even at 64 bits it\n**\twould still be very reasonable).\n*/\n\n#ifndef WRONG\n# define WRONG (-1)\n#endif /* !defined WRONG */\n\n/*\n** Normalize logic courtesy Paul Eggert.\n*/\n\nstatic bool\nincrement_overflow(int *ip, int j)\n{\n#ifdef ckd_add\n\treturn ckd_add(ip, *ip, j);\n#else\n\tregister int const\ti = *ip;\n\n\t/*\n\t** If i >= 0 there can only be overflow if i + j > INT_MAX\n\t** or if j > INT_MAX - i; given i >= 0, INT_MAX - i cannot overflow.\n\t** If i < 0 there can only be overflow if i + j < INT_MIN\n\t** or if j < INT_MIN - i; given i < 0, INT_MIN - i cannot overflow.\n\t*/\n\tif ((i >= 0) ? (j > INT_MAX - i) : (j < INT_MIN - i))\n\t\treturn true;\n\t*ip += j;\n\treturn false;\n#endif\n}\n\nstatic bool\nincrement_overflow_time_iinntt(time_t *tp, iinntt j)\n{\n#ifdef ckd_add\n  return ckd_add(tp, *tp, j);\n#else\n  if (j < 0\n      ? (TYPE_SIGNED(time_t) ? *tp < TIME_T_MIN - j : *tp <= -1 - j)\n      : TIME_T_MAX - j < *tp)\n    return true;\n  *tp += j;\n  return false;\n#endif\n}\n\nstatic bool\nincrement_overflow_time(time_t *tp, int_fast32_t j)\n{\n#ifdef ckd_add\n\treturn ckd_add(tp, *tp, j);\n#else\n\t/*\n\t** This is like\n\t** 'if (! (TIME_T_MIN <= *tp + j && *tp + j <= TIME_T_MAX)) ...',\n\t** except that it does the right thing even if *tp + j would overflow.\n\t*/\n\tif (! (j < 0\n\t       ? (TYPE_SIGNED(time_t) ? TIME_T_MIN - j <= *tp : -1 - j < *tp)\n\t       : *tp <= TIME_T_MAX - j))\n\t\treturn true;\n\t*tp += j;\n\treturn false;\n#endif\n}\n\nstatic int\ntmcomp(register const struct tm *const atmp,\n       register const struct tm *const btmp)\n{\n\tregister int\tresult;\n\n\tif (atmp->tm_year != btmp->tm_year)\n\t\treturn atmp->tm_year < btmp->tm_year ? -1 : 1;\n\tif ((result = (atmp->tm_mon - btmp->tm_mon)) == 0 &&\n\t\t(result = (atmp->tm_mday - btmp->tm_mday)) == 0 &&\n\t\t(result = (atmp->tm_hour - btmp->tm_hour)) == 0 &&\n\t\t(result = (atmp->tm_min - btmp->tm_min)) == 0)\n\t\t\tresult = atmp->tm_sec - btmp->tm_sec;\n\treturn result;\n}\n\n/* Copy to *DEST from *SRC.  Copy only the members needed for mktime,\n   as other members might not be initialized.  */\nstatic void\nmktmcpy(struct tm *dest, struct tm const *src)\n{\n  dest->tm_sec = src->tm_sec;\n  dest->tm_min = src->tm_min;\n  dest->tm_hour = src->tm_hour;\n  dest->tm_mday = src->tm_mday;\n  dest->tm_mon = src->tm_mon;\n  dest->tm_year = src->tm_year;\n  dest->tm_isdst = src->tm_isdst;\n#if defined TM_GMTOFF && ! UNINIT_TRAP\n  dest->TM_GMTOFF = src->TM_GMTOFF;\n#endif\n}\n\nstatic time_t\ntime2sub(struct tm *const tmp,\n\t struct tm *(*funcp)(struct state const *, time_t const *,\n\t\t\t     int_fast32_t, struct tm *),\n\t struct state const *sp,\n\t const int_fast32_t offset,\n\t bool *okayp,\n\t bool do_norm_secs)\n{\n\tregister int\t\t\tdir;\n\tregister int\t\t\ti, j;\n\tregister time_t\t\t\tlo;\n\tregister time_t\t\t\thi;\n\tiinntt y, mday, hour, min, saved_seconds;\n\ttime_t\t\t\t\tnewt;\n\ttime_t\t\t\t\tt;\n\tstruct tm\t\t\tyourtm, mytm;\n\n\t*okayp = false;\n\tmktmcpy(&yourtm, tmp);\n\n\tmin = yourtm.tm_min;\n\tif (do_norm_secs) {\n\t  min += yourtm.tm_sec / SECSPERMIN;\n\t  yourtm.tm_sec %= SECSPERMIN;\n\t  if (yourtm.tm_sec < 0) {\n\t    yourtm.tm_sec += SECSPERMIN;\n\t    min--;\n\t  }\n\t}\n\n\thour = yourtm.tm_hour;\n\thour += min / MINSPERHOUR;\n\tyourtm.tm_min = min % MINSPERHOUR;\n\tif (yourtm.tm_min < 0) {\n\t  yourtm.tm_min += MINSPERHOUR;\n\t  hour--;\n\t}\n\n\tmday = yourtm.tm_mday;\n\tmday += hour / HOURSPERDAY;\n\tyourtm.tm_hour = hour % HOURSPERDAY;\n\tif (yourtm.tm_hour < 0) {\n\t  yourtm.tm_hour += HOURSPERDAY;\n\t  mday--;\n\t}\n\n\ty = yourtm.tm_year;\n\ty += yourtm.tm_mon / MONSPERYEAR;\n\tyourtm.tm_mon %= MONSPERYEAR;\n\tif (yourtm.tm_mon < 0) {\n\t  yourtm.tm_mon += MONSPERYEAR;\n\t  y--;\n\t}\n\n\t/*\n\t** Turn y into an actual year number for now.\n\t** It is converted back to an offset from TM_YEAR_BASE later.\n\t*/\n\ty += TM_YEAR_BASE;\n\n\twhile (mday <= 0) {\n\t  iinntt li = y - (yourtm.tm_mon <= 1);\n\t  mday += year_lengths[isleap(li)];\n\t  y--;\n\t}\n\twhile (DAYSPERLYEAR < mday) {\n\t  iinntt li = y + (1 < yourtm.tm_mon);\n\t  mday -= year_lengths[isleap(li)];\n\t  y++;\n\t}\n\tyourtm.tm_mday = mday;\n\tfor ( ; ; ) {\n\t\ti = mon_lengths[isleap(y)][yourtm.tm_mon];\n\t\tif (yourtm.tm_mday <= i)\n\t\t\tbreak;\n\t\tyourtm.tm_mday -= i;\n\t\tif (++yourtm.tm_mon >= MONSPERYEAR) {\n\t\t\tyourtm.tm_mon = 0;\n\t\t\ty++;\n\t\t}\n\t}\n#ifdef ckd_add\n\tif (ckd_add(&yourtm.tm_year, y, -TM_YEAR_BASE))\n\t  return WRONG;\n#else\n\ty -= TM_YEAR_BASE;\n\tif (! (INT_MIN <= y && y <= INT_MAX))\n\t\treturn WRONG;\n\tyourtm.tm_year = y;\n#endif\n\tif (yourtm.tm_sec >= 0 && yourtm.tm_sec < SECSPERMIN)\n\t\tsaved_seconds = 0;\n\telse if (yourtm.tm_year < EPOCH_YEAR - TM_YEAR_BASE) {\n\t\t/*\n\t\t** We can't set tm_sec to 0, because that might push the\n\t\t** time below the minimum representable time.\n\t\t** Set tm_sec to 59 instead.\n\t\t** This assumes that the minimum representable time is\n\t\t** not in the same minute that a leap second was deleted from,\n\t\t** which is a safer assumption than using 58 would be.\n\t\t*/\n\t\tsaved_seconds = yourtm.tm_sec;\n\t\tsaved_seconds -= SECSPERMIN - 1;\n\t\tyourtm.tm_sec = SECSPERMIN - 1;\n\t} else {\n\t\tsaved_seconds = yourtm.tm_sec;\n\t\tyourtm.tm_sec = 0;\n\t}\n\t/*\n\t** Do a binary search (this works whatever time_t's type is).\n\t*/\n\tlo = TIME_T_MIN;\n\thi = TIME_T_MAX;\n\tfor ( ; ; ) {\n\t\tt = lo / 2 + hi / 2;\n\t\tif (t < lo)\n\t\t\tt = lo;\n\t\telse if (t > hi)\n\t\t\tt = hi;\n\t\tif (! funcp(sp, &t, offset, &mytm)) {\n\t\t\t/*\n\t\t\t** Assume that t is too extreme to be represented in\n\t\t\t** a struct tm; arrange things so that it is less\n\t\t\t** extreme on the next pass.\n\t\t\t*/\n\t\t\tdir = (t > 0) ? 1 : -1;\n\t\t} else\tdir = tmcomp(&mytm, &yourtm);\n\t\tif (dir != 0) {\n\t\t\tif (t == lo) {\n\t\t\t\tif (t == TIME_T_MAX)\n\t\t\t\t\treturn WRONG;\n\t\t\t\t++t;\n\t\t\t\t++lo;\n\t\t\t} else if (t == hi) {\n\t\t\t\tif (t == TIME_T_MIN)\n\t\t\t\t\treturn WRONG;\n\t\t\t\t--t;\n\t\t\t\t--hi;\n\t\t\t}\n\t\t\tif (lo > hi)\n\t\t\t\treturn WRONG;\n\t\t\tif (dir > 0)\n\t\t\t\thi = t;\n\t\t\telse\tlo = t;\n\t\t\tcontinue;\n\t\t}\n#if defined TM_GMTOFF && ! UNINIT_TRAP\n\t\tif (mytm.TM_GMTOFF != yourtm.TM_GMTOFF\n\t\t    && (yourtm.TM_GMTOFF < 0\n\t\t\t? (-SECSPERDAY <= yourtm.TM_GMTOFF\n\t\t\t   && (mytm.TM_GMTOFF <=\n\t\t\t       (min(INT_FAST32_MAX, LONG_MAX)\n\t\t\t\t+ yourtm.TM_GMTOFF)))\n\t\t\t: (yourtm.TM_GMTOFF <= SECSPERDAY\n\t\t\t   && ((max(INT_FAST32_MIN, LONG_MIN)\n\t\t\t\t+ yourtm.TM_GMTOFF)\n\t\t\t       <= mytm.TM_GMTOFF)))) {\n\t\t  /* MYTM matches YOURTM except with the wrong UT offset.\n\t\t     YOURTM.TM_GMTOFF is plausible, so try it instead.\n\t\t     It's OK if YOURTM.TM_GMTOFF contains uninitialized data,\n\t\t     since the guess gets checked.  */\n\t\t  time_t altt = t;\n\t\t  int_fast32_t diff = mytm.TM_GMTOFF - yourtm.TM_GMTOFF;\n\t\t  if (!increment_overflow_time(&altt, diff)) {\n\t\t    struct tm alttm;\n\t\t    if (funcp(sp, &altt, offset, &alttm)\n\t\t\t&& alttm.tm_isdst == mytm.tm_isdst\n\t\t\t&& alttm.TM_GMTOFF == yourtm.TM_GMTOFF\n\t\t\t&& tmcomp(&alttm, &yourtm) == 0) {\n\t\t      t = altt;\n\t\t      mytm = alttm;\n\t\t    }\n\t\t  }\n\t\t}\n#endif\n\t\tif (yourtm.tm_isdst < 0 || mytm.tm_isdst == yourtm.tm_isdst)\n\t\t\tbreak;\n\t\t/*\n\t\t** Right time, wrong type.\n\t\t** Hunt for right time, right type.\n\t\t** It's okay to guess wrong since the guess\n\t\t** gets checked.\n\t\t*/\n\t\tif (sp == NULL)\n\t\t\treturn WRONG;\n\t\tfor (i = sp->typecnt - 1; i >= 0; --i) {\n\t\t\tif (sp->ttis[i].tt_isdst != yourtm.tm_isdst)\n\t\t\t\tcontinue;\n\t\t\tfor (j = sp->typecnt - 1; j >= 0; --j) {\n\t\t\t\tif (sp->ttis[j].tt_isdst == yourtm.tm_isdst)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (ttunspecified(sp, j))\n\t\t\t\t  continue;\n\t\t\t\tnewt = (t + sp->ttis[j].tt_utoff\n\t\t\t\t\t- sp->ttis[i].tt_utoff);\n\t\t\t\tif (! funcp(sp, &newt, offset, &mytm))\n\t\t\t\t\tcontinue;\n\t\t\t\tif (tmcomp(&mytm, &yourtm) != 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (mytm.tm_isdst != yourtm.tm_isdst)\n\t\t\t\t\tcontinue;\n\t\t\t\t/*\n\t\t\t\t** We have a match.\n\t\t\t\t*/\n\t\t\t\tt = newt;\n\t\t\t\tgoto label;\n\t\t\t}\n\t\t}\n\t\treturn WRONG;\n\t}\nlabel:\n\tif (increment_overflow_time_iinntt(&t, saved_seconds))\n\t\treturn WRONG;\n\tif (funcp(sp, &t, offset, tmp))\n\t\t*okayp = true;\n\treturn t;\n}\n\nstatic time_t\ntime2(struct tm * const\ttmp,\n      struct tm *(*funcp)(struct state const *, time_t const *,\n\t\t\t  int_fast32_t, struct tm *),\n      struct state const *sp,\n      const int_fast32_t offset,\n      bool *okayp)\n{\n\ttime_t\tt;\n\n\t/*\n\t** First try without normalization of seconds\n\t** (in case tm_sec contains a value associated with a leap second).\n\t** If that fails, try with normalization of seconds.\n\t*/\n\tt = time2sub(tmp, funcp, sp, offset, okayp, false);\n\treturn *okayp ? t : time2sub(tmp, funcp, sp, offset, okayp, true);\n}\n\nstatic time_t\ntime1(struct tm *const tmp,\n      struct tm *(*funcp)(struct state const *, time_t const *,\n\t\t\t  int_fast32_t, struct tm *),\n      struct state const *sp,\n      const int_fast32_t offset)\n{\n\tregister time_t\t\t\tt;\n\tregister int\t\t\tsamei, otheri;\n\tregister int\t\t\tsameind, otherind;\n\tregister int\t\t\ti;\n\tregister int\t\t\tnseen;\n\tchar\t\t\t\tseen[TZ_MAX_TYPES];\n\tunsigned char\t\t\ttypes[TZ_MAX_TYPES];\n\tbool\t\t\t\tokay;\n\n\tif (tmp == NULL) {\n\t\terrno = EINVAL;\n\t\treturn WRONG;\n\t}\n\tif (tmp->tm_isdst > 1)\n\t\ttmp->tm_isdst = 1;\n\tt = time2(tmp, funcp, sp, offset, &okay);\n\tif (okay)\n\t\treturn t;\n\tif (tmp->tm_isdst < 0)\n#ifdef PCTS\n\t\t/*\n\t\t** POSIX Conformance Test Suite code courtesy Grant Sullivan.\n\t\t*/\n\t\ttmp->tm_isdst = 0;\t/* reset to std and try again */\n#else\n\t\treturn t;\n#endif /* !defined PCTS */\n\t/*\n\t** We're supposed to assume that somebody took a time of one type\n\t** and did some math on it that yielded a \"struct tm\" that's bad.\n\t** We try to divine the type they started from and adjust to the\n\t** type they need.\n\t*/\n\tif (sp == NULL)\n\t\treturn WRONG;\n\tfor (i = 0; i < sp->typecnt; ++i)\n\t\tseen[i] = false;\n\tnseen = 0;\n\tfor (i = sp->timecnt - 1; i >= 0; --i)\n\t\tif (!seen[sp->types[i]] && !ttunspecified(sp, sp->types[i])) {\n\t\t\tseen[sp->types[i]] = true;\n\t\t\ttypes[nseen++] = sp->types[i];\n\t\t}\n\tfor (sameind = 0; sameind < nseen; ++sameind) {\n\t\tsamei = types[sameind];\n\t\tif (sp->ttis[samei].tt_isdst != tmp->tm_isdst)\n\t\t\tcontinue;\n\t\tfor (otherind = 0; otherind < nseen; ++otherind) {\n\t\t\totheri = types[otherind];\n\t\t\tif (sp->ttis[otheri].tt_isdst == tmp->tm_isdst)\n\t\t\t\tcontinue;\n\t\t\ttmp->tm_sec += (sp->ttis[otheri].tt_utoff\n\t\t\t\t\t- sp->ttis[samei].tt_utoff);\n\t\t\ttmp->tm_isdst = !tmp->tm_isdst;\n\t\t\tt = time2(tmp, funcp, sp, offset, &okay);\n\t\t\tif (okay)\n\t\t\t\treturn t;\n\t\t\ttmp->tm_sec -= (sp->ttis[otheri].tt_utoff\n\t\t\t\t\t- sp->ttis[samei].tt_utoff);\n\t\t\ttmp->tm_isdst = !tmp->tm_isdst;\n\t\t}\n\t}\n\treturn WRONG;\n}\n\n#if !defined TM_GMTOFF || !USE_TIMEX_T\n\nstatic time_t\nmktime_tzname(struct state *sp, struct tm *tmp, bool setname)\n{\n  if (sp)\n    return time1(tmp, localsub, sp, setname);\n  else {\n    gmtcheck();\n    return time1(tmp, gmtsub, gmtptr, 0);\n  }\n}\n\n# if USE_TIMEX_T\nstatic\n# endif\ntime_t\nmktime(struct tm *tmp)\n{\n  time_t t;\n  int err = lock();\n  if (err) {\n    errno = err;\n    return -1;\n  }\n  tzset_unlocked();\n  t = mktime_tzname(lclptr, tmp, true);\n  unlock();\n  return t;\n}\n\n#endif\n\n#if NETBSD_INSPIRED && !USE_TIMEX_T\ntime_t\nmktime_z(struct state *restrict sp, struct tm *restrict tmp)\n{\n  return mktime_tzname(sp, tmp, false);\n}\n#endif\n\n#if STD_INSPIRED && !USE_TIMEX_T\n/* This function is obsolescent and may disappear in future releases.\n   Callers can instead use mktime.  */\ntime_t\ntimelocal(struct tm *tmp)\n{\n\tif (tmp != NULL)\n\t\ttmp->tm_isdst = -1;\t/* in case it wasn't initialized */\n\treturn mktime(tmp);\n}\n#endif\n\n#if defined TM_GMTOFF || !USE_TIMEX_T\n\n# ifndef EXTERN_TIMEOFF\n#  ifndef timeoff\n#   define timeoff my_timeoff /* Don't collide with OpenBSD 7.4 <time.h>.  */\n#  endif\n#  define EXTERN_TIMEOFF static\n# endif\n\n/* This function is obsolescent and may disappear in future releases.\n   Callers can instead use mktime_z with a fixed-offset zone.  */\nEXTERN_TIMEOFF time_t\ntimeoff(struct tm *tmp, long offset)\n{\n  if (tmp)\n    tmp->tm_isdst = 0;\n  gmtcheck();\n  return time1(tmp, gmtsub, gmtptr, offset);\n}\n#endif\n\n#if !USE_TIMEX_T\ntime_t\ntimegm(struct tm *tmp)\n{\n  time_t t;\n  struct tm tmcpy;\n  mktmcpy(&tmcpy, tmp);\n  tmcpy.tm_wday = -1;\n  t = timeoff(&tmcpy, 0);\n  if (0 <= tmcpy.tm_wday)\n    *tmp = tmcpy;\n  return t;\n}\n#endif\n\nstatic int_fast32_t\nleapcorr(struct state const *sp, time_t t)\n{\n\tregister struct lsinfo const *\tlp;\n\tregister int\t\t\ti;\n\n\ti = sp->leapcnt;\n\twhile (--i >= 0) {\n\t\tlp = &sp->lsis[i];\n\t\tif (t >= lp->ls_trans)\n\t\t\treturn lp->ls_corr;\n\t}\n\treturn 0;\n}\n\n/*\n** XXX--is the below the right way to conditionalize??\n*/\n\n#if !USE_TIMEX_T\n# if STD_INSPIRED\n\n/* NETBSD_INSPIRED_EXTERN functions are exported to callers if\n   NETBSD_INSPIRED is defined, and are private otherwise.  */\n#  if NETBSD_INSPIRED\n#   define NETBSD_INSPIRED_EXTERN\n#  else\n#   define NETBSD_INSPIRED_EXTERN static\n#  endif\n\n/*\n** IEEE Std 1003.1 (POSIX) says that 536457599\n** shall correspond to \"Wed Dec 31 23:59:59 UTC 1986\", which\n** is not the case if we are accounting for leap seconds.\n** So, we provide the following conversion routines for use\n** when exchanging timestamps with POSIX conforming systems.\n*/\n\nNETBSD_INSPIRED_EXTERN time_t\ntime2posix_z(struct state *sp, time_t t)\n{\n  return t - leapcorr(sp, t);\n}\n\ntime_t\ntime2posix(time_t t)\n{\n  int err = lock();\n  if (err) {\n    errno = err;\n    return -1;\n  }\n  if (!lcl_is_set)\n    tzset_unlocked();\n  if (lclptr)\n    t = time2posix_z(lclptr, t);\n  unlock();\n  return t;\n}\n\nNETBSD_INSPIRED_EXTERN time_t\nposix2time_z(struct state *sp, time_t t)\n{\n\ttime_t\tx;\n\ttime_t\ty;\n\t/*\n\t** For a positive leap second hit, the result\n\t** is not unique. For a negative leap second\n\t** hit, the corresponding time doesn't exist,\n\t** so we return an adjacent second.\n\t*/\n\tx = t + leapcorr(sp, t);\n\ty = x - leapcorr(sp, x);\n\tif (y < t) {\n\t\tdo {\n\t\t\tx++;\n\t\t\ty = x - leapcorr(sp, x);\n\t\t} while (y < t);\n\t\tx -= y != t;\n\t} else if (y > t) {\n\t\tdo {\n\t\t\t--x;\n\t\t\ty = x - leapcorr(sp, x);\n\t\t} while (y > t);\n\t\tx += y != t;\n\t}\n\treturn x;\n}\n\ntime_t\nposix2time(time_t t)\n{\n  int err = lock();\n  if (err) {\n    errno = err;\n    return -1;\n  }\n  if (!lcl_is_set)\n    tzset_unlocked();\n  if (lclptr)\n    t = posix2time_z(lclptr, t);\n  unlock();\n  return t;\n}\n\n# endif /* STD_INSPIRED */\n\n# if TZ_TIME_T\n\n#  if !USG_COMPAT\n#   define timezone 0\n#  endif\n\n/* Convert from the underlying system's time_t to the ersatz time_tz,\n   which is called 'time_t' in this file.  Typically, this merely\n   converts the time's integer width.  On some platforms, the system\n   time is local time not UT, or uses some epoch other than the POSIX\n   epoch.\n\n   Although this code appears to define a function named 'time' that\n   returns time_t, the macros in private.h cause this code to actually\n   define a function named 'tz_time' that returns tz_time_t.  The call\n   to sys_time invokes the underlying system's 'time' function.  */\n\ntime_t\ntime(time_t *p)\n{\n  time_t r = sys_time(0);\n  if (r != (time_t) -1) {\n    iinntt offset = EPOCH_LOCAL ? timezone : 0;\n    if (offset < IINNTT_MIN + EPOCH_OFFSET\n\t|| increment_overflow_time_iinntt(&r, offset - EPOCH_OFFSET)) {\n      errno = EOVERFLOW;\n      r = -1;\n    }\n  }\n  if (p)\n    *p = r;\n  return r;\n}\n\n# endif\n#endif\n"
        },
        {
          "name": "newctime.3",
          "type": "blob",
          "size": 8.49609375,
          "content": ".\\\" This file is in the public domain, so clarified as of\n.\\\" 2009-05-17 by Arthur David Olson.\n.TH newctime 3 \"\" \"Time Zone Database\"\n.SH NAME\nasctime, ctime, difftime, gmtime, localtime, mktime \\- convert date and time\n.SH SYNOPSIS\n.nf\n.B #include <time.h>\n.PP\n.B struct tm *localtime(time_t const *clock);\n.B \"struct tm *localtime_r(time_t const *restrict clock,\"\n.B \"    struct tm *restrict result);\"\n.B \"struct tm *localtime_rz(timezone_t restrict zone,\"\n.B \"    time_t const *restrict clock,\"\n.B \"    struct tm *restrict result);\"\n.PP\n.B struct tm *gmtime(time_t const *clock);\n.B \"struct tm *gmtime_r(time_t const *restrict clock,\"\n.B \"    struct tm *restrict result);\"\n.PP\n.B time_t mktime(struct tm *tm);\n.B \"time_t mktime_z(timezone_t restrict zone,\"\n.B \"    struct tm *restrict tm);\"\n.PP\n.B double difftime(time_t time1, time_t time0);\n.PP\n.B [[deprecated]] char *asctime(struct tm const *tm);\n.B [[deprecated]] char *ctime(time_t const *clock);\n.PP\n/* Only in POSIX.1-2017 and earlier.  */\n.B char *ctime_r(time_t const *clock, char *buf);\n.B \"char *asctime_r(struct tm const *restrict tm,\"\n.B \"    char *restrict result);\"\n.PP\n.B cc ... \\-ltz\n.fi\n.SH DESCRIPTION\n.ie '\\(en'' .ds en \\-\n.el .ds en \\(en\n.ie '\\(lq'' .ds lq \\&\"\\\"\n.el .ds lq \\(lq\\\"\n.ie '\\(rq'' .ds rq \\&\"\\\"\n.el .ds rq \\(rq\\\"\n.de q\n\\\\$3\\*(lq\\\\$1\\*(rq\\\\$2\n..\nThe\n.B localtime\nand\n.B gmtime\nfunctions\nconvert an integer, pointed to by\n.IR clock ,\nand\nreturn pointers to\n.q \"tm\"\nstructures, described below.\nIf the integer is out of range for conversion,\nthese functions return a null pointer.\nThe\n.B localtime\nfunction\ncorrects for the time zone and any time zone adjustments\n(such as Daylight Saving Time in the United States).\nThe\n.B gmtime\nfunction converts to Coordinated Universal Time.\n.PP\nThe\n.BI * clock\ntimestamp represents the time in seconds since 1970-01-01 00:00:00\nCoordinated Universal Time (UTC).\nThe POSIX standard says that timestamps must be nonnegative\nand must ignore leap seconds.\nMany implementations extend POSIX by allowing negative timestamps,\nand can therefore represent timestamps that predate the\nintroduction of UTC and are some other flavor of Universal Time (UT).\nSome implementations support leap seconds, in contradiction to POSIX.\n.PP\nThe\n.B mktime\nfunction\nconverts the broken-down time,\nexpressed as local time,\nin the structure pointed to by\n.I tm\ninto a calendar time value with the same encoding as that of the values\nreturned by the\n.B time\nfunction.\nThe original values of the\n.B tm_wday\nand\n.B tm_yday\ncomponents of the structure are ignored,\nand the original values of the other components are not restricted\nto their normal ranges.\n(A positive or zero value for\n.B tm_isdst\ncauses\n.B mktime\nto presume initially that daylight saving time\nrespectively,\nis or is not in effect for the specified time.\nA negative value for\n.B tm_isdst\ncauses the\n.B mktime\nfunction to attempt to divine whether daylight saving time is in effect\nfor the specified time; in this case it does not use a consistent\nrule and may give a different answer when later\npresented with the same argument.)\nOn successful completion, the values of the\n.B tm_wday\nand\n.B tm_yday\ncomponents of the structure are set appropriately,\nand the other components are set to represent the specified calendar time,\nbut with their values forced to their normal ranges; the final value of\n.B tm_mday\nis not set until\n.B tm_mon\nand\n.B tm_year\nare determined.\nThe\n.B mktime\nfunction\nreturns the specified calendar time.\nIf the calendar time cannot be represented,\nit returns \\-1 without updating the structure.\nTo distinguish failure from a valid \\-1 return,\nyou can set\n.B tm_wday\nor\n.B tm_yday\nto a negative value before calling\n.BR mktime ;\nif that value is still negative when\n.B mktime\nreturns, the calendar time could not be represented.\n.PP\nThe\n.B difftime\nfunction\nreturns the difference between two calendar times,\n.RI ( time1\n\\-\n.IR time0 ),\nexpressed in seconds.\n.PP\nThe\n.B asctime\nfunction\nconverts a time value contained in a\n.q \"tm\"\nstructure to a pointer to a\nstring of the form\n.br\n.ce\n.eo\nThu Nov 24 18:22:48 1986\\n\\0\n.br\n.ec\nYears requiring fewer than four characters are padded with leading zeroes.\nFor years longer than four characters, the string is of the form\n.br\n.ce\n.eo\nThu Nov 24 18:22:48     81986\\n\\0\n.ec\n.br\nwith five spaces before the year.\nThis unusual format is designed to make it less likely that older\nsoftware that expects exactly 26 bytes of output will mistakenly output\nmisleading values for out-of-range years.\nThis function is deprecated starting in C23.\nCallers can use\n.B strftime\ninstead.\n.PP\nThe\n.B ctime\nfunction is equivalent to calliing\n.B localtime\nand then calling\n.B asctime\non the result.\nLike\n.BR asctime ,\nthis function is deprecated starting in C23.\nCallers can use\n.B localtime\nand\n.B strftime\ninstead.\n.PP\nThe\n.BR ctime_r ,\n.BR localtime_r ,\n.BR gmtime_r ,\nand\n.B asctime_r\nfunctions\nare like their unsuffixed counterparts, except that they accept an\nadditional argument specifying where to store the result if successful.\nThe\n.B ctime_r\nand\n.B asctime_r\nfunctions are present only on systems supporting POSIX.1-2017 and earlier,\nas they are removed in POSIX.1-2024 and user code can define these\nfunctions with other meanings.\n.PP\nThe\n.B localtime_rz\nand\n.B mktime_z\nfunctions\nare like their unsuffixed counterparts, except that they accept an\nextra initial\n.B zone\nargument specifying the timezone to be used for conversion.\nIf\n.B zone\nis null, UT is used; otherwise,\n.B zone\nshould be have been allocated by\n.B tzalloc\nand should not be freed until after all uses (e.g., by calls to\n.BR strftime )\nof the filled-in\n.B tm_zone\nfields.\n.PP\nDeclarations of all the functions and externals, and the\n.q \"tm\"\nstructure,\nare in the\n.B <time.h>\nheader file.\nThe structure (of type)\n.B struct tm\nincludes the following fields:\n.RS\n.PP\n.nf\n.ta 2n +\\w'long tm_gmtoff;nn'u\n\tint tm_sec;\t/\\(** seconds (0\\*(en60) \\(**/\n\tint tm_min;\t/\\(** minutes (0\\*(en59) \\(**/\n\tint tm_hour;\t/\\(** hours (0\\*(en23) \\(**/\n\tint tm_mday;\t/\\(** day of month (1\\*(en31) \\(**/\n\tint tm_mon;\t/\\(** month of year (0\\*(en11) \\(**/\n\tint tm_year;\t/\\(** year \\- 1900 \\(**/\n\tint tm_wday;\t/\\(** day of week (Sunday = 0) \\(**/\n\tint tm_yday;\t/\\(** day of year (0\\*(en365) \\(**/\n\tint tm_isdst;\t/\\(** is daylight saving time in effect? \\(**/\n\tchar \\(**tm_zone;\t/\\(** time zone abbreviation (optional) \\(**/\n\tlong tm_gmtoff;\t/\\(** offset from UT in seconds (optional) \\(**/\n.fi\n.RE\n.PP\nThe\n.B tm_isdst\nfield\nis non-zero if daylight saving time is in effect.\n.PP\nThe\n.B tm_gmtoff\nfield\nis the offset (in seconds) of the time represented\nfrom UT, with positive values indicating east\nof the Prime Meridian.\nThe field's name is derived from Greenwich Mean Time, a precursor of UT.\n.PP\nIn platforms conforming to POSIX.1-2024 the\n.B \"struct tm\"\nthe\n.B tm_zone\nand\n.B tm_gmtoff\nfields exist, and are filled in.\nFor\n.B localtime_rz\nand\n.B mktime_rz\nthe storage lifetime of the strings addressed by\n.B tm_zone\nextends until the corresponding\n.B timezone_t\nobject is freed via\n.BR tzfree .\nFor the other functions the lifetime extends until the\n.I TZ\nenvironment variable changes state and\n.B tzset\nis then called.\n.PP\nAs a side effect, the\n.BR ctime ,\n.B localtime\nand\n.B mktime\nfunctions also behave as if\n.B tzset\nwere called.\nThe\n.B ctime_r\nand\n.B localtime_r\nfunctions might (or might not) also behave this way.\nThis is for compatibility with older platforms, as required by POSIX.\n.SH FILES\n.ta \\w'/usr/share/zoneinfo/posixrules\\0\\0'u\n/etc/localtime\tlocal timezone file\n.br\n/usr/share/zoneinfo\ttimezone directory\n.br\n/usr/share/zoneinfo/posixrules\tdefault DST rules (obsolete)\n.br\n/usr/share/zoneinfo/GMT\tfor UTC leap seconds\n.PP\nIf /usr/share/zoneinfo/GMT is absent,\nUTC leap seconds are loaded from /usr/share/zoneinfo/GMT0 if present.\n.SH SEE ALSO\n.BR getenv (3),\n.BR newstrftime (3),\n.BR newtzset (3),\n.BR time (2),\n.BR tzfile (5).\n.SH NOTES\nThe return values of\n.BR asctime ,\n.BR ctime ,\n.BR gmtime ,\nand\n.B localtime\npoint to static data\noverwritten by each call.\nThe remaining functions and data are thread-safe.\n.PP\nThe\n.BR asctime ,\n.BR asctime_r ,\n.BR ctime ,\nand\n.B ctime_r\nfunctions\nbehave strangely for years before 1000 or after 9999.\nThe 1989 and 1999 editions of the C Standard say\nthat years from \\-99 through 999 are converted without\nextra spaces, but this conflicts with longstanding\ntradition and with this implementation.\nThe 2011 edition says that the behavior\nis undefined if the year is before 1000 or after 9999.\nTraditional implementations of these two functions are\nrestricted to years in the range 1900 through 2099.\nTo avoid this portability mess, new programs should use\n.B strftime\ninstead.\n"
        },
        {
          "name": "newstrftime.3",
          "type": "blob",
          "size": 10.544921875,
          "content": ".\\\" strftime man page\n.\\\"\n.\\\" Based on the UCB file whose corrected copyright information appears below.\n.\\\" Copyright 1989, 1991 The Regents of the University of California.\n.\\\" All rights reserved.\n.\\\"\n.\\\" This code is derived from software contributed to Berkeley by\n.\\\" the American National Standards Committee X3, on Information\n.\\\" Processing Systems.\n.\\\"\n.\\\" Redistribution and use in source and binary forms, with or without\n.\\\" modification, are permitted provided that the following conditions\n.\\\" are met:\n.\\\" 1. Redistributions of source code must retain the above copyright\n.\\\"    notice, this list of conditions and the following disclaimer.\n.\\\" 2. Redistributions in binary form must reproduce the above copyright\n.\\\"    notice, this list of conditions and the following disclaimer in the\n.\\\"    documentation and/or other materials provided with the distribution.\n.\\\" 3. Neither the name of the University nor the names of its contributors\n.\\\"    may be used to endorse or promote products derived from this software\n.\\\"    without specific prior written permission.\n.\\\"\n.\\\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS \"AS IS\" AND\n.\\\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n.\\\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n.\\\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE\n.\\\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n.\\\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n.\\\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n.\\\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n.\\\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n.\\\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n.\\\" SUCH DAMAGE.\n.\\\"\n.\\\"     from: @(#)strftime.3\t5.12 (Berkeley) 6/29/91\n.\\\"\t$Id: strftime.3,v 1.4 1993/12/15 20:33:00 jtc Exp $\n.\\\"\n.TH newstrftime 3 \"\" \"Time Zone Database\"\n.SH NAME\nstrftime \\- format date and time\n.SH SYNOPSIS\n.nf\n.B #include <time.h>\n.PP\n.B \"size_t strftime(char *restrict buf, size_t maxsize,\"\n.B \"    char const *restrict format, struct tm const *restrict timeptr);\"\n.PP\n.B cc ... \\-ltz\n.fi\n.SH DESCRIPTION\n.ie '\\(lq'' .ds lq \\&\"\\\"\n.el .ds lq \\(lq\\\"\n.ie '\\(rq'' .ds rq \\&\"\\\"\n.el .ds rq \\(rq\\\"\n.de c\n.ie \\n(.g \\f(CR\\\\$1\\fP\\\\$2\n.el \\\\$1\\\\$2\n..\n.de q\n\\\\$3\\*(lq\\\\$1\\*(rq\\\\$2\n..\nThe\n.B strftime\nfunction formats the information from\n.BI * timeptr\ninto the array pointed to by\n.I buf\naccording to the string pointed to by\n.IR format .\n.PP\nThe\n.I format\nstring consists of zero or more conversion specifications and\nordinary characters.\nAll ordinary characters are copied directly into the array.\nA conversion specification consists of a percent sign\n.Ql %\nand one other character.\n.PP\nNo more than\n.I maxsize\nbytes are placed into the array.\n.PP\nEach conversion specification is replaced by the characters as\nfollows which are then copied into the array.\nThe characters depend on the values of zero or more members of\n.BI * timeptr\nas specified by brackets in the description.\nIf a bracketed member name is followed by\n.q + ,\n.B strftime\ncan use the named member even though POSIX.1-2024 does not list it;\nif the name is followed by\n.q \\- ,\n.B strftime\nignores the member even though POSIX.1-2024 lists it\nwhich means portable code should set it.\nFor portability,\n.BI * timeptr\nshould be initialized as if by a successful call to\n.BR gmtime ,\n.BR localtime ,\n.BR mktime ,\n.BR timegm ,\nor similar functions.\n.TP\n%A\nis replaced by the locale's full weekday name.\n.RI [ tm_wday ]\n.TP\n%a\nis replaced by the locale's abbreviated weekday name.\n.RI [ tm_wday ]\n.TP\n%B\nis replaced by the locale's full month name.\n.RI [ tm_mon ]\n.TP\n%b or %h\nis replaced by the locale's abbreviated month name.\n.RI [ tm_mon ]\n.TP\n%C\nis replaced by the century (a year divided by 100 and truncated to an integer)\nas a decimal number, with at least two digits by default.\n.RI [ tm_year ]\n.TP\n%c\nis replaced by the locale's appropriate date and time representation.\n.RI [ tm_year ,\n.IR tm_yday ,\n.IR tm_mon ,\n.IR tm_mday ,\n.IR tm_wday ,\n.IR tm_hour ,\n.IR tm_min ,\n.IR tm_sec ,\n.IR tm_gmtoff ,\n.IR tm_zone ,\n.IR tm_isdst \\-].\n.TP\n%D\nis equivalent to\n.c %m/%d/%y .\nAlthough used in the United States for current dates,\nthis format is ambiguous elsewhere\nand for dates that might involve other centuries.\n.RI [ tm_year ,\n.IR tm_mon ,\n.IR tm_mday ]\n.TP\n%d\nis replaced by the day of the month as a decimal number [01,31].\n.RI [ tm_mday ]\n.TP\n%e\nis replaced by the day of month as a decimal number [1,31];\nsingle digits are preceded by a blank.\n.RI [ tm_mday ]\n.TP\n%F\nis equivalent to\n.c %Y-%m-%d\n(the ISO 8601 date format).\n.RI [ tm_year ,\n.IR tm_mon ,\n.IR tm_mday ]\n.TP\n%G\nis replaced by the ISO 8601 year with century as a decimal number.\nThis is the year that includes the greater part of the week.\n(Monday as the first day of a week).\nSee also the\n.c %V\nconversion specification.\n.RI [ tm_year ,\n.IR tm_yday ,\n.IR tm_wday ]\n.TP\n%g\nis replaced by the ISO 8601 year without century as a decimal number [00,99].\nSince it omits the century, it is ambiguous for dates.\n.RI [ tm_year ,\n.IR tm_yday ,\n.IR tm_wday ]\n.TP\n%H\nis replaced by the hour (24-hour clock) as a decimal number [00,23].\n.RI [ tm_hour ]\n.TP\n%I\nis replaced by the hour (12-hour clock) as a decimal number [01,12].\n.RI [ tm_hour ]\n.TP\n%j\nis replaced by the day of the year as a decimal number [001,366].\n.RI [ tm_yday ]\n.TP\n%k\nis replaced by the hour (24-hour clock) as a decimal number [0,23];\nsingle digits are preceded by a blank.\n.RI [ tm_hour ]\n.TP\n%l\nis replaced by the hour (12-hour clock) as a decimal number [1,12];\nsingle digits are preceded by a blank.\n.RI [ tm_hour ]\n.TP\n%M\nis replaced by the minute as a decimal number [00,59].\n.RI [ tm_min ]\n.TP\n%m\nis replaced by the month as a decimal number [01,12].\n.RI [ tm_mon ]\n.TP\n%n\nis replaced by a newline.\n.TP\n%p\nis replaced by the locale's equivalent of either\n.q AM\nor\n.q PM .\n.RI [ tm_hour ]\n.TP\n%R\nis replaced by the time in the format\n.c %H:%M .\n.RI [ tm_hour ,\n.IR tm_min ]\n.TP\n%r\nis replaced by the locale's representation of 12-hour clock time\nusing AM/PM notation.\n.RI [ tm_hour ,\n.IR tm_min ,\n.IR tm_sec ]\n.TP\n%S\nis replaced by the second as a decimal number [00,60].\nThe range of\nseconds is [00,60] instead of [00,59] to allow for the periodic occurrence\nof leap seconds.\n.RI [ tm_sec ]\n.TP\n%s\nis replaced by the number of seconds since the Epoch (see\n.BR ctime (3)).\nAlthough %s is reliable in this implementation,\nit can have glitches on other platforms\n(notably obsolescent platforms lacking\n.I tm_gmtoff\nor where\n.B time_t\nis no wider than int), and POSIX allows\n.B strftime\nto set\n.B errno\nto\n.B EINVAL\nor\n.B EOVERFLOW\nand return 0 if the number of seconds would be negative or out of range for\n.BR time_t .\nPortable code should therefore format a\n.B time_t\nvalue directly via something like\n.B sprintf\ninstead of via\n.B localtime\nfollowed by\n.B strftime\nwith \"%s\".\n.RI [ tm_year ,\n.IR tm_mon ,\n.IR tm_mday ,\n.IR tm_hour ,\n.IR tm_min ,\n.IR tm_sec ,\n.IR tm_gmtoff +,\n.IR tm_isdst \\-].\n.TP\n%T\nis replaced by the time in the format\n.c %H:%M:%S .\n.RI [ tm_hour ,\n.IR tm_min ,\n.IR tm_sec ]\n.TP\n%t\nis replaced by a tab.\n.TP\n%U\nis replaced by the week number of the year (Sunday as the first day of\nthe week) as a decimal number [00,53].\n.RI [ tm_wday ,\n.IR tm_yday ,\n.IR tm_year \\-]\n.TP\n%u\nis replaced by the weekday (Monday as the first day of the week)\nas a decimal number [1,7].\n.RI [ tm_wday ]\n.TP\n%V\nis replaced by the week number of the year (Monday as the first day of\nthe week) as a decimal number [01,53].  If the week containing January\n1 has four or more days in the new year, then it is week 1; otherwise\nit is week 53 of the previous year, and the next week is week 1.\nThe year is given by the\n.c %G\nconversion specification.\n.RI [ tm_year ,\n.IR tm_yday ,\n.IR tm_wday ]\n.TP\n%W\nis replaced by the week number of the year (Monday as the first day of\nthe week) as a decimal number [00,53].\n.RI [ tm_yday ,\n.IR tm_wday ]\n.TP\n%w\nis replaced by the weekday (Sunday as the first day of the week)\nas a decimal number [0,6].\n.RI [ tm_year ,\n.IR tm_yday ,\n.IR tm_wday ]\n.TP\n%X\nis replaced by the locale's appropriate time representation.\n.RI [ tm_year \\-,\n.IR tm_yday \\-,\n.IR tm_mon \\-,\n.IR tm_mday \\-,\n.IR tm_wday \\-,\n.IR tm_hour ,\n.IR tm_min ,\n.IR tm_sec ,\n.IR tm_gmtoff ,\n.IR tm_zone ,\n.IR tm_isdst \\-].\n.TP\n%x\nis replaced by the locale's appropriate date representation.\nThis format can be ambiguous for dates, e.g.,\nit can generate \"01/02/03\" in the C locale.\n.RI [ tm_year ,\n.IR tm_yday ,\n.IR tm_mon ,\n.IR tm_mday ,\n.IR tm_wday ,\n.IR tm_hour \\-,\n.IR tm_min \\-,\n.IR tm_sec \\-,\n.IR tm_gmtoff \\-,\n.IR tm_zone \\-,\n.IR tm_isdst \\-].\n.TP\n%Y\nis replaced by the year with century as a decimal number.\n.RI [ tm_year ]\n.TP\n%y\nis replaced by the year without century as a decimal number [00,99].\nSince it omits the century, it is ambiguous for dates.\n.RI [ tm_year ]\n.TP\n%Z\nis replaced by the time zone abbreviation,\nor by the empty string if this is not determinable.\n.RI [ tm_zone ,\n.IR tm_isdst \\-]\n.TP\n%z\nis replaced by the offset from the Prime Meridian\nin the format +HHMM or \\-HHMM (ISO 8601) as appropriate,\nwith positive values representing locations east of Greenwich,\nor by the empty string if this is not determinable.\nThe numeric time zone abbreviation \\-0000 is used when the time is\nUniversal Time\nbut local time is indeterminate; by convention this is used for\nlocations while uninhabited, and corresponds to a zero offset when the\ntime zone abbreviation begins with\n.q \"\\-\" .\n.RI [ tm_gmtoff ,\n.IR tm_zone +,\n.IR tm_isdst \\-]\n.TP\n%%\nis replaced by a single %.\n.TP\n%+\nis replaced by the locale's date and time in\n.BR date (1)\nformat.\n.RI [ tm_year ,\n.IR tm_yday ,\n.IR tm_mon ,\n.IR tm_mday ,\n.IR tm_wday ,\n.IR tm_hour ,\n.IR tm_min ,\n.IR tm_sec ,\n.IR tm_gmtoff ,\n.IR tm_zone ]\n.PP\nAs a side effect,\n.B strftime\nalso behaves as if\n.B tzset\nwere called.\nThis is for compatibility with older platforms, as required by POSIX;\nit is not needed for\n.BR strftime 's\nown use.\n.SH \"RETURN VALUE\"\nIf the conversion is successful,\n.B strftime\nreturns the number of bytes placed into the array, not counting the\nterminating NUL;\n.B errno\nis unchanged if the returned value is zero.\nOtherwise,\n.B errno\nis set to indicate the error, zero is returned,\nand the array contents are unspecified.\n.SH ERRORS\nThis function fails if:\n.TP\n[ERANGE]\nThe total number of resulting bytes, including the terminating\nNUL character, is more than\n.IR maxsize .\n.SH SEE ALSO\n.BR date (1),\n.BR getenv (3),\n.BR newctime (3),\n.BR newtzset (3),\n.BR time (2),\n.BR tzfile (5).\n.SH BUGS\nThere is no conversion specification for the phase of the moon.\n"
        },
        {
          "name": "newtzset.3",
          "type": "blob",
          "size": 10.1552734375,
          "content": ".\\\" This file is in the public domain, so clarified as of\n.\\\" 2009-05-17 by Arthur David Olson.\n.TH newtzset 3 \"\" \"Time Zone Database\"\n.SH NAME\ntzset \\- initialize time conversion information\n.SH SYNOPSIS\n.nf\n.B #include <time.h>\n.PP\n.BI \"timezone_t tzalloc(char const *\" TZ );\n.PP\n.BI \"void tzfree(timezone_t \" tz );\n.PP\n.B void tzset(void);\n.PP\n/\\(** Optional and obsolescent:  \\(**/\n.br\n.B extern char *tzname[];\n.br\n.B extern long timezone;\n.br\n.B extern int daylight;\n.PP\n.B cc ... \\-ltz\n.fi\n.SH DESCRIPTION\n.ie '\\(en'' .ds en \\-\n.el .ds en \\(en\n.ie '\\(lq'' .ds lq \\&\"\\\"\n.el .ds lq \\(lq\\\"\n.ie '\\(rq'' .ds rq \\&\"\\\"\n.el .ds rq \\(rq\\\"\n.de q\n\\\\$3\\*(lq\\\\$1\\*(rq\\\\$2\n..\nThe\n.B tzalloc\nfunction\nallocates and returns a timezone object described by\n.IR TZ .\n.PP\nIf\n.I TZ\nis a null pointer,\n.B tzalloc\nuses the best available approximation to local (wall\nclock) time, as specified by the\n.BR tzfile (5)-format\nfile\n.B localtime\nin the system time conversion information directory.\n.PP\nIf\n.I TZ\nis the empty string,\n.B tzalloc\nuses Universal Time (UT), with the abbreviation \"UTC\"\nand without leap second correction; please see\n.BR newctime (3)\nfor more about UT, UTC, and leap seconds.\n.PP\nIf\n.I TZ\nis nonnull and nonempty:\n.IP\nif the value begins with a colon, it is used as a pathname of a file\nfrom which to read the time conversion information;\n.IP\nif the value does not begin with a colon, it is first used as the\npathname of a file from which to read the time conversion information,\nand, if that file cannot be read, is used directly as a specification of\nthe time conversion information.\n.PP\nWhen\n.I TZ\ncontents are used as a pathname, a pathname beginning with\n.q \"/\"\nis used as-is; otherwise\nthe pathname is relative to a system time conversion information\ndirectory.\nThe file must be in the format specified in\n.BR tzfile (5).\n.PP\nWhen\n.I TZ\nis used directly as a specification of the time conversion information,\nit must have the following syntax:\n.IP\n\\fIstd\\|offset\\fR[\\fIdst\\fR[\\fIoffset\\fR][\\fB,\\fIrule\\fR]]\n.PP\nWhere:\n.RS\n.TP\n.IR std \" and \" dst\nThree or more bytes that are the designation for the standard\n.RI ( std )\nor the alternative\n.RI ( dst ,\nsuch as daylight saving time)\ntime zone.  Only\n.I std\nis required; if\n.I dst\nis missing, then daylight saving time does not apply in this locale.\nUpper- and lowercase letters are explicitly allowed.  Any characters\nexcept a leading colon\n.RB ( : ),\ndigits, comma\n.RB ( , ),\nASCII minus\n.RB ( \\- ),\nASCII plus\n.RB ( + ),\nand NUL bytes are allowed.\nAlternatively, a designation can be surrounded by angle brackets\n.B <\nand\n.BR > ;\nin this case, the designation can contain any characters other than\n.B >\nand NUL.\n.TP\n.I offset\nIndicates the value one must add to the local time to arrive at\nCoordinated Universal Time.  The\n.I offset\nhas the form:\n.RS\n.IP\n\\fIhh\\fR[\\fB:\\fImm\\fR[\\fB:\\fIss\\fR]]\n.RE\n.IP\nThe minutes\n.RI ( mm )\nand seconds\n.RI ( ss )\nare optional.  The hour\n.RI ( hh )\nis required and may be a single digit.  The\n.I offset\nfollowing\n.I std\nis required.  If no\n.I offset\nfollows\n.IR dst ,\ndaylight saving time is assumed to be one hour ahead of standard time.  One or\nmore digits may be used; the value is always interpreted as a decimal\nnumber.  The hour must be between zero and 24, and the minutes (and\nseconds) \\*(en if present \\*(en between zero and 59.  If preceded by a\n.q \"\\-\" ,\nthe time zone shall be east of the Prime Meridian; otherwise it shall be\nwest (which may be indicated by an optional preceding\n.q \"+\" .\n.TP\n.I rule\nIndicates when to change to and back from daylight saving time.  The\n.I rule\nhas the form:\n.RS\n.IP\n\\fIdate\\fB/\\fItime\\fB,\\fIdate\\fB/\\fItime\\fR\n.RE\n.IP\nwhere the first\n.I date\ndescribes when the change from standard to daylight saving time occurs and the\nsecond\n.I date\ndescribes when the change back happens.  Each\n.I time\nfield describes when, in current local time, the change to the other\ntime is made.\nDaylight saving is assumed to be in effect\nall year if it begins January 1 at 00:00 and ends December 31 at\n24:00 plus the difference between daylight saving and standard time,\nleaving no room for standard time in the calendar.\n.IP\nThe format of\n.I date\nis one of the following:\n.RS\n.TP\n.BI J n\nThe Julian day\n.I n\n.RI \"(1\\ \\(<=\" \"\\ n\\ \" \"\\(<=\\ 365).\nLeap days are not counted; that is, in all years \\*(en including leap\nyears \\*(en February 28 is day 59 and March 1 is day 60.  It is\nimpossible to explicitly refer to the occasional February 29.\n.TP\n.I n\nThe zero-based Julian day\n.RI \"(0\\ \\(<=\" \"\\ n\\ \" \"\\(<=\\ 365).\nLeap days are counted, and it is possible to refer to February 29.\n.TP\n.BI M m . n . d\nThe\n.IR d' th\nday\n.RI \"(0\\ \\(<=\" \"\\ d\\ \" \"\\(<=\\ 6)\nof week\n.I n\nof month\n.I m\nof the year\n.RI \"(1\\ \\(<=\" \"\\ n\\ \" \"\\(<=\\ 5,\n.RI \"1\\ \\(<=\" \"\\ m\\ \" \"\\(<=\\ 12,\nwhere week 5 means\n.q \"the last \\fId\\fP day in month \\fIm\\fP\"\nwhich may occur in either the fourth or the fifth week).  Week 1 is the\nfirst week in which the\n.IR d' th\nday occurs.  Day zero is Sunday.\n.RE\n.IP\nThe\n.I time\nhas the same format as\n.I offset\nexcept that the hours part of\n.I time\ncan range from \\-167 through 167; this allows for unusual rules such\nas\n.q \"the Saturday before the first Sunday of March\" .\nThe default, if\n.I time\nis not given, is\n.BR 02:00:00 .\n.RE\n.LP\nHere are some examples of\n.I TZ\nvalues that directly specify the timezone.\n.TP\n.B EST5\nstands for US Eastern Standard\nTime (EST), 5 hours behind UT, without daylight saving.\n.TP\n.B <+12>\\-12<+13>,M11.1.0,M1.2.1/147\nstands for Fiji time, 12 hours ahead\nof UT, springing forward on November's first Sunday at 02:00, and\nfalling back on January's second Monday at 147:00 (i.e., 03:00 on the\nfirst Sunday on or after January 14).  The abbreviations for standard\nand daylight saving time are\n.q \"+12\"\nand\n.q \"+13\".\n.TP\n.B IST\\-2IDT,M3.4.4/26,M10.5.0\nstands for Israel Standard Time (IST) and Israel Daylight Time (IDT),\n2 hours ahead of UT, springing forward on March's fourth\nThursday at 26:00 (i.e., 02:00 on the first Friday on or after March\n23), and falling back on October's last Sunday at 02:00.\n.TP\n.B <\\-04>4<\\-03>,J1/0,J365/25\nstands for permanent daylight saving time, 3 hours behind UT with\nabbreviation\n.q \"\\-03\".\nThere is a dummy fall-back transition on December 31 at 25:00 daylight\nsaving time (i.e., 24:00 standard time, equivalent to January 1 at\n00:00 standard time), and a simultaneous spring-forward transition on\nJanuary 1 at 00:00 standard time, so daylight saving time is in effect\nall year and the initial\n.B <\\-04>\nis a placeholder.\n.TP\n.B <\\-03>3<\\-02>,M3.5.0/\\-2,M10.5.0/\\-1\nstands for time in western Greenland, 3 hours behind UT, where clocks\nfollow the EU rules of\nspringing forward on March's last Sunday at 01:00 UT (\\-02:00 local\ntime, i.e., 22:00 the previous day) and falling back on October's last\nSunday at 01:00 UT (\\-01:00 local time, i.e., 23:00 the previous day).\nThe abbreviations for standard and daylight saving time are\n.q \"\\-03\"\nand\n.q \"\\-02\".\n.PP\nIf\n.I TZ\nspecifies daylight saving time but does not specify a\n.IR rule ,\nand the optional\n.BR tzfile (5)-format\nfile\n.B posixrules\nis present in the system time conversion information directory, the\nrules in\n.B posixrules\nare used, with the\n.B posixrules\nstandard and daylight saving time offsets from UT\nreplaced by those specified by the\n.I offset\nvalues in\n.IR TZ .\nHowever, the\n.B posixrules\nfile is obsolete: if it is present it is only for backward compatibility,\nand it does not work reliably.\nTherefore, if a\n.I TZ\nstring directly specifies a timezone with daylight saving time,\nit should specify the daylight saving rules explicitly.\n.PP\nFor compatibility with System V Release 3.1, a semicolon\n.RB ( ; )\nmay be used to separate the\n.I rule\nfrom the rest of the specification;\nthis is an extension to POSIX.\n.PP\nThe\n.B tzfree\nfunction\nfrees a timezone object\n.IR tz ,\nwhich should have been successfully allocated by\n.BR tzalloc .\nThis invalidates any\n.B tm_zone\npointers that\n.I tz\nwas used to set.\n.PP\nThe\n.B tzset\nfunction\nacts like\n.BR tzalloc(getenv(\"TZ\")) ,\nexcept it saves any resulting timezone object into internal\nstorage that is accessed by\n.BR localtime ,\n.BR localtime_r ,\nand\n.BR mktime .\nThe anonymous shared timezone object is freed by the next call to\n.BR tzset .\nIf the implied call to\n.B getenv\nfails,\n.B tzset\nacts like\n.BR tzalloc(nullptr) ;\nif the implied call to\n.B tzalloc\nfails,\n.B tzset\nfalls back on UT.\n.PP\nAs a side effect, the\n.B tzset\nfunction sets some external variables if the platform defines them.\nIt sets\n.BR tzname [0]\nand\n.BR tzname [1]\nto pointers to strings that are time zone abbreviations to be used with\nstandard and daylight saving time, respectively.\nIt also sets\n.B timezone\nto be the number of seconds that standard time is west of the Prime Meridian,\nand\n.B daylight\nto be zero if daylight saving time is never in effect, non-zero otherwise.\n.SH \"RETURN VALUE\"\nIf successful, the\n.B tzalloc\nfunction returns a nonnull pointer to the newly allocated object.\nOtherwise, it returns a null pointer and sets\n.IR errno .\n.SH ERRORS\n.TP\n.B EOVERFLOW\n.I TZ\ndirectly specifies time conversion information,\nand contains an integer out of machine range\nor a time zone abbreviation that is too long for this platform.\n.PP\nThe\n.B tzalloc\nfunction may also fail and set\n.I errno\nfor any of the errors specified for the routines\n.BR access (2),\n.BR close (2),\n.BR malloc (3),\n.BR open (2),\nand\n.BR read (2).\n.SH FILES\n.ta \\w'/usr/share/zoneinfo/posixrules\\0\\0'u\n/etc/localtime\tlocal timezone file\n.br\n/usr/share/zoneinfo\ttimezone directory\n.br\n/usr/share/zoneinfo/posixrules\tdefault DST rules (obsolete)\n.br\n/usr/share/zoneinfo/GMT\tfor UTC leap seconds\n.PP\nIf /usr/share/zoneinfo/GMT is absent,\nUTC leap seconds are loaded from /usr/share/zoneinfo/GMT0 if present.\n.SH SEE ALSO\n.BR getenv (3),\n.BR newctime (3),\n.BR newstrftime (3),\n.BR time (2),\n.BR tzfile (5).\n.SH NOTES\nPortable code should not rely on the contents of the external variables\n.BR tzname ,\n.B timezone\nand\n.B daylight\nas their contents are unspecified (and do not make sense in general)\nwhen a geographical TZ is used.\nIn multithreaded applications behavior is undefined if one thread accesses\none of these variables while another thread invokes\n.BR tzset .\nA future version of POSIX is planned to remove these variables;\ncallers can instead use the\n.I tm_gmtoff\nand\n.I tm_zone\nmembers of\n.B struct tm,\nor use\n.B strftime\nwith \"%z\" or \"%Z\".\n"
        },
        {
          "name": "northamerica",
          "type": "blob",
          "size": 162.095703125,
          "content": "# tzdb data for North and Central America and environs\n\n# This file is in the public domain, so clarified as of\n# 2009-05-17 by Arthur David Olson.\n\n# also includes Central America and the Caribbean\n\n# This file is by no means authoritative; if you think you know better,\n# go ahead and edit the file (and please send any changes to\n# tz@iana.org for general use in the future).  For more, please see\n# the file CONTRIBUTING in the tz distribution.\n\n# From Paul Eggert (1999-03-22):\n# A reliable and entertaining source about time zones is\n# Derek Howse, Greenwich time and longitude, Philip Wilson Publishers (1997).\n\n###############################################################################\n\n# United States\n\n# From Paul Eggert (1999-03-31):\n# Howse writes (pp 121-125) that time zones were invented by\n# Professor Charles Ferdinand Dowd (1825-1904),\n# Principal of Temple Grove Ladies' Seminary (Saratoga Springs, NY).\n# His pamphlet \"A System of National Time for Railroads\" (1870)\n# was the result of his proposals at the Convention of Railroad Trunk Lines\n# in New York City (1869-10).  His 1870 proposal was based on Washington, DC,\n# but in 1872-05 he moved the proposed origin to Greenwich.\n\n# From Paul Eggert (2024-11-18):\n# Dowd's proposal left many details unresolved, such as where to draw\n# lines between time zones.  Sandford Fleming of the Canadian Pacific Railway\n# argued for Dowd's proposal in 1876, and Cleveland Abbe of the American\n# Meteorology Society published a report in 1879 recommending four US time\n# zones based on GMT.  However, the key individual who made time zones\n# work in the US was William Frederick Allen - railway engineer,\n# managing editor of the Travelers' Guide, and secretary of the\n# General Time Convention, a railway standardization group.  Allen\n# spent months in dialogs with scientific and railway leaders,\n# developed a workable plan to institute time zones, and presented it\n# to the General Time Convention on 1883-04-11, saying that his plan\n# meant \"local time would be practically abolished\" - a plus for\n# railway scheduling.  By the next convention on 1883-10-11 nearly all\n# railroads had agreed and it took effect on 1883-11-18.  That Sunday\n# was called the \"day of two noons\", as some locations observed noon\n# twice.  Allen witnessed the transition in New York City, writing:\n#\n#   I heard the bells of St. Paul's strike on the old time.  Four\n#   minutes later, obedient to the electrical signal from the Naval\n#   Observatory ... the time-ball made its rapid descent, the chimes\n#   of old Trinity rang twelve measured strokes, and local time was\n#   abandoned, probably forever.\n#\n# Most of the US soon followed suit.  See:\n# Bartky IR. The adoption of standard time. Technol Cult 1989 Jan;30(1):25-56.\n# https://dx.doi.org/10.2307/3105430\n\n# From Paul Eggert (2005-04-16):\n# That 1883 transition occurred at 12:00 new time, not at 12:00 old time.\n# See p 46 of David Prerau, Seize the daylight, Thunder's Mouth Press (2005).\n\n# From Paul Eggert (2006-03-22):\n# A good source for time zone historical data in the US is\n# Thomas G. Shanks, The American Atlas (5th edition),\n# San Diego: ACS Publications, Inc. (1991).\n# Make sure you have the errata sheet; the book is somewhat useless without it.\n# It is the source for most of the pre-1991 US entries below.\n\n# From Paul Eggert (2001-03-06):\n# Daylight Saving Time was first suggested as a joke by Benjamin Franklin\n# in his whimsical essay \"An Economical Project for Diminishing the Cost\n# of Light\" published in the Journal de Paris (1784-04-26).\n# Not everyone is happy with the results:\n#\n#\tI don't really care how time is reckoned so long as there is some\n#\tagreement about it, but I object to being told that I am saving\n#\tdaylight when my reason tells me that I am doing nothing of the kind.\n#\tI even object to the implication that I am wasting something\n#\tvaluable if I stay in bed after the sun has risen.  As an admirer\n#\tof moonlight I resent the bossy insistence of those who want to\n#\treduce my time for enjoying it.  At the back of the Daylight Saving\n#\tscheme I detect the bony, blue-fingered hand of Puritanism, eager\n#\tto push people into bed earlier, and get them up earlier, to make\n#\tthem healthy, wealthy and wise in spite of themselves.\n#\n#\t -- Robertson Davies, The diary of Samuel Marchbanks,\n#\t   Clarke, Irwin (1947), XIX, Sunday\n#\n# For more about the first ten years of DST in the United States, see\n# Robert Garland, Ten years of daylight saving from the Pittsburgh standpoint\n# (Carnegie Library of Pittsburgh, 1927).\n# https://web.archive.org/web/20160517155308/http://www.clpgh.org/exhibit/dst.html\n#\n# Shanks says that DST was called \"War Time\" in the US in 1918 and 1919.\n# However, DST was imposed by the Standard Time Act of 1918, which\n# was the first nationwide legal time standard, and apparently\n# time was just called \"Standard Time\" or \"Daylight Saving Time\".\n\n# From Paul Eggert (2019-06-04):\n# Here is the legal basis for the US federal rules.\n# * Public Law 65-106 (1918-03-19) implemented standard and daylight saving\n#   time for the first time across the US, springing forward on March's last\n#   Sunday and falling back on October's last Sunday.\n#   https://www.loc.gov/law/help/statutes-at-large/65th-congress/session-2/c65s2ch24.pdf\n# * Public Law 66-40 (1919-08-20) repealed DST on October 1919's last Sunday.\n#   https://www.loc.gov/law/help/statutes-at-large/66th-congress/session-1/c66s1ch51.pdf\n# * Public Law 77-403 (1942-01-20) started wartime DST on 1942-02-09.\n#   https://www.loc.gov/law/help/statutes-at-large/77th-congress/session-2/c77s2ch7.pdf\n# * Public Law 79-187 (1945-09-25) ended wartime DST on 1945-09-30.\n#   https://www.loc.gov/law/help/statutes-at-large/79th-congress/session-1/c79s1ch388.pdf\n# * Public Law 89-387 (1966-04-13) reinstituted a national standard for DST,\n#   from April's last Sunday to October's last Sunday, effective 1967.\n#   https://www.govinfo.gov/content/pkg/STATUTE-80/pdf/STATUTE-80-Pg107.pdf\n# * Public Law 93-182 (1973-12-15) moved the 1974 spring-forward to 01-06.\n#   https://www.govinfo.gov/content/pkg/STATUTE-87/pdf/STATUTE-87-Pg707.pdf\n# * Public Law 93-434 (1974-10-05) moved the 1975 spring-forward to\n#   February's last Sunday.\n#   https://www.govinfo.gov/content/pkg/STATUTE-88/pdf/STATUTE-88-Pg1209.pdf\n# * Public Law 99-359 (1986-07-08) moved the spring-forward to April's first\n#   Sunday.\n#   https://www.govinfo.gov/content/pkg/STATUTE-100/pdf/STATUTE-100-Pg764.pdf\n# * Public Law 109-58 (2005-08-08), effective 2007, moved the spring-forward\n#   to March's second Sunday and the fall-back to November's first Sunday.\n#   https://www.govinfo.gov/content/pkg/PLAW-109publ58/pdf/PLAW-109publ58.pdf\n# All transitions are at 02:00 local time.\n\n# From Arthur David Olson:\n# Before the Uniform Time Act of 1966 took effect in 1967, observance of\n# Daylight Saving Time in the US was by local option, except during wartime.\n\n# From Arthur David Olson (2000-09-25):\n# Last night I heard part of a rebroadcast of a 1945 Arch Oboler radio drama.\n# In the introduction, Oboler spoke of \"Eastern Peace Time.\"\n# An AltaVista search turned up:\n# https://web.archive.org/web/20000926032210/http://rowayton.org/rhs/hstaug45.html\n# \"When the time is announced over the radio now, it is 'Eastern Peace\n# Time' instead of the old familiar 'Eastern War Time.'  Peace is wonderful.\"\n# (August 1945) by way of confirmation.\n#\n# From Paul Eggert (2017-09-23):\n# This was the V-J Day issue of the Clamdigger, a Rowayton, CT newsletter.\n\n# From Joseph Gallant citing\n# George H. Douglas, _The Early Days of Radio Broadcasting_ (1987):\n# At 7 P.M. (Eastern War Time) [on 1945-08-14], the networks were set\n# to switch to London for Attlee's address, but the American people\n# never got to hear his speech live. According to one press account,\n# CBS' Bob Trout was first to announce the word of Japan's surrender,\n# but a few seconds later, NBC, ABC and Mutual also flashed the word\n# of surrender, all of whom interrupting the bells of Big Ben in\n# London which were to precede Mr. Attlee's speech.\n\n# From Paul Eggert (2003-02-09): It was Robert St John, not Bob Trout.  From\n# Myrna Oliver's obituary of St John on page B16 of today's Los Angeles Times:\n#\n# ... a war-weary U.S. clung to radios, awaiting word of Japan's surrender.\n# Any announcement from Asia would reach St. John's New York newsroom on a\n# wire service teletype machine, which had prescribed signals for major news.\n# Associated Press, for example, would ring five bells before spewing out\n# typed copy of an important story, and 10 bells for news \"of transcendental\n# importance.\"\n#\n# On Aug. 14, stalling while talking steadily into the NBC networks' open\n# microphone, St. John heard five bells and waited only to hear a sixth bell,\n# before announcing confidently: \"Ladies and gentlemen, World War II is over.\n# The Japanese have agreed to our surrender terms.\"\n#\n# He had scored a 20-second scoop on other broadcasters.\n\n# From Arthur David Olson (2005-08-22):\n# Paul has been careful to use the \"US\" rules only in those locations\n# that are part of the United States; this reflects the real scope of\n# U.S. government action.  So even though the \"US\" rules have changed\n# in the latest release, other countries won't be affected.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tUS\t1918\t1919\t-\tMar\tlastSun\t2:00\t1:00\tD\nRule\tUS\t1918\t1919\t-\tOct\tlastSun\t2:00\t0\tS\nRule\tUS\t1942\tonly\t-\tFeb\t9\t2:00\t1:00\tW # War\nRule\tUS\t1945\tonly\t-\tAug\t14\t23:00u\t1:00\tP # Peace\nRule\tUS\t1945\tonly\t-\tSep\t30\t2:00\t0\tS\nRule\tUS\t1967\t2006\t-\tOct\tlastSun\t2:00\t0\tS\nRule\tUS\t1967\t1973\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule\tUS\t1974\tonly\t-\tJan\t6\t2:00\t1:00\tD\nRule\tUS\t1975\tonly\t-\tFeb\tlastSun\t2:00\t1:00\tD\nRule\tUS\t1976\t1986\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule\tUS\t1987\t2006\t-\tApr\tSun>=1\t2:00\t1:00\tD\nRule\tUS\t2007\tmax\t-\tMar\tSun>=8\t2:00\t1:00\tD\nRule\tUS\t2007\tmax\t-\tNov\tSun>=1\t2:00\t0\tS\n\n# From U. S. Naval Observatory (1989-01-19):\n# USA  EASTERN       5 H  BEHIND UTC    NEW YORK, WASHINGTON\n# USA  EASTERN       4 H  BEHIND UTC    APR 3 - OCT 30\n# USA  CENTRAL       6 H  BEHIND UTC    CHICAGO, HOUSTON\n# USA  CENTRAL       5 H  BEHIND UTC    APR 3 - OCT 30\n# USA  MOUNTAIN      7 H  BEHIND UTC    DENVER\n# USA  MOUNTAIN      6 H  BEHIND UTC    APR 3 - OCT 30\n# USA  PACIFIC       8 H  BEHIND UTC    L.A., SAN FRANCISCO\n# USA  PACIFIC       7 H  BEHIND UTC    APR 3 - OCT 30\n# USA  ALASKA STD    9 H  BEHIND UTC    MOST OF ALASKA     (AKST)\n# USA  ALASKA STD    8 H  BEHIND UTC    APR 3 - OCT 30 (AKDT)\n# USA  ALEUTIAN     10 H  BEHIND UTC    ISLANDS WEST OF 170W\n# USA    \"           9 H  BEHIND UTC    APR 3 - OCT 30\n# USA  HAWAII       10 H  BEHIND UTC\n# USA  BERING       11 H  BEHIND UTC    SAMOA, MIDWAY\n\n# From Arthur David Olson (1989-01-21):\n# The above dates are for 1988.\n# Note the \"AKST\" and \"AKDT\" abbreviations, the claim that there's\n# no DST in Samoa, and the claim that there is DST in Alaska and the\n# Aleutians.\n\n# From Arthur David Olson (1988-02-13):\n# Legal standard time zone names, from United States Code (1982 Edition and\n# Supplement III), Title 15, Chapter 6, Section 260 and forward.  First, names\n# up to 1967-04-01 (when most provisions of the Uniform Time Act of 1966\n# took effect), as explained in sections 263 and 261:\n#\t(none)\n#\tUnited States standard eastern time\n#\tUnited States standard mountain time\n#\tUnited States standard central time\n#\tUnited States standard Pacific time\n#\t(none)\n#\tUnited States standard Alaska time\n#\t(none)\n# Next, names from 1967-04-01 until 1983-11-30 (the date for\n# public law 98-181):\n#\tAtlantic standard time\n#\teastern standard time\n#\tcentral standard time\n#\tmountain standard time\n#\tPacific standard time\n#\tYukon standard time\n#\tAlaska-Hawaii standard time\n#\tBering standard time\n# And after 1983-11-30:\n#\tAtlantic standard time\n#\teastern standard time\n#\tcentral standard time\n#\tmountain standard time\n#\tPacific standard time\n#\tAlaska standard time\n#\tHawaii-Aleutian standard time\n#\tSamoa standard time\n# The law doesn't give abbreviations.\n#\n# From Paul Eggert (2016-12-19):\n# Here are URLs for the 1918 and 1966 legislation:\n# http://uscode.house.gov/statviewer.htm?volume=40&page=451\n# http://uscode.house.gov/statviewer.htm?volume=80&page=108\n# Although the 1918 names were officially \"United States Standard\n# Eastern Time\" and similarly for \"Central\", \"Mountain\", \"Pacific\",\n# and \"Alaska\", in practice \"Standard\" was placed just before \"Time\",\n# as codified in 1966.  In practice, Alaska time was abbreviated \"AST\"\n# before 1968.  Summarizing the 1967 name changes:\n#\t1918 names\t\t\t1967 names\n#  -08\tStandard Pacific Time (PST)\tPacific standard time (PST)\n#  -09\t(unofficial) Yukon (YST)\tYukon standard time (YST)\n#  -10\tStandard Alaska Time (AST)\tAlaska-Hawaii standard time (AHST)\n#  -11\t(unofficial) Nome (NST)\t\tBering standard time (BST)\n#\n# From Paul Eggert (2023-01-23), from a 2001-01-08 heads-up from Rives McDow:\n# Public law 106-564 (2000-12-23) introduced \"Chamorro standard time\"\n# for time in Guam and the Northern Marianas.  See the file \"australasia\".\n# Also see 15 U.S.C. §263 <https://www.law.cornell.edu/uscode/text/15/263>.\n#\n# From Paul Eggert (2015-04-17):\n# HST and HDT are standardized abbreviations for Hawaii-Aleutian\n# standard and daylight times.  See section 9.47 (p 234) of the\n# U.S. Government Printing Office Style Manual (2008)\n# https://www.gpo.gov/fdsys/pkg/GPO-STYLEMANUAL-2008/pdf/GPO-STYLEMANUAL-2008.pdf\n\n# From Arthur David Olson, 2005-08-09\n# The following was signed into law on 2005-08-08.\n#\n# H.R. 6, Energy Policy Act of 2005, SEC. 110. DAYLIGHT SAVINGS.\n#   (a) Amendment.--Section 3(a) of the Uniform Time Act of 1966 (15\n#   U.S.C. 260a(a)) is amended--\n#     (1) by striking \"first Sunday of April\" and inserting \"second\n#     Sunday of March\"; and\n#     (2) by striking \"last Sunday of October\" and inserting \"first\n#     Sunday of November'.\n#   (b) Effective Date.--Subsection (a) shall take effect 1 year after the\n#   date of enactment of this Act or March 1, 2007, whichever is later.\n#   (c) Report to Congress.--Not later than 9 months after the effective\n#   date stated in subsection (b), the Secretary shall report to Congress\n#   on the impact of this section on energy consumption in the United\n#   States.\n#   (d) Right to Revert.--Congress retains the right to revert the\n#   Daylight Saving Time back to the 2005 time schedules once the\n#   Department study is complete.\n\n# US eastern time, represented by New York\n\n# Connecticut, Delaware, District of Columbia, most of Florida,\n# Georgia, southeast Indiana (Dearborn and Ohio counties), eastern Kentucky\n# (except America/Kentucky/Louisville below), Maine, Maryland, Massachusetts,\n# New Hampshire, New Jersey, New York, North Carolina, Ohio,\n# Pennsylvania, Rhode Island, South Carolina, eastern Tennessee,\n# Vermont, Virginia, West Virginia\n\n# From Dave Cantor (2004-11-02):\n# Early this summer I had the occasion to visit the Mount Washington\n# Observatory weather station atop (of course!) Mount Washington [, NH]....\n# One of the staff members said that the station was on Eastern Standard Time\n# and didn't change their clocks for Daylight Saving ... so that their\n# reports will always have times which are 5 hours behind UTC.\n\n# From Paul Eggert (2005-08-26):\n# According to today's Huntsville Times\n# http://www.al.com/news/huntsvilletimes/index.ssf?/base/news/1125047783228320.xml&coll=1\n# a few towns on Alabama's \"eastern border with Georgia, such as Phenix City\n# in Russell County, Lanett in Chambers County and some towns in Lee County,\n# set their watches and clocks on Eastern time.\"  It quotes H.H. \"Bubba\"\n# Roberts, city administrator in Phenix City. as saying \"We are in the Central\n# time zone, but we do go by the Eastern time zone because so many people work\n# in Columbus.\"\n#\n# From Paul Eggert (2017-02-22):\n# Four cities are involved.  The two not mentioned above are Smiths Station\n# and Valley.  Barbara Brooks, Valley's assistant treasurer, heard it started\n# because West Point Pepperell textile mills were in Alabama while the\n# corporate office was in Georgia, and residents voted to keep Eastern\n# time even after the mills closed.  See: Kazek K. Did you know which\n# Alabama towns are in a different time zone?  al.com 2017-02-06.\n# http://www.al.com/living/index.ssf/2017/02/do_you_know_which_alabama_town.html\n\n# From Paul Eggert (2014-09-06):\n# Monthly Notices of the Royal Astronomical Society 44, 4 (1884-02-08), 208\n# says that New York City Hall time was 3 minutes 58.4 seconds fast of\n# Eastern time (i.e., -4:56:01.6) just before the 1883 switch.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER\nRule\tNYC\t1920\tonly\t-\tMar\tlastSun\t2:00\t1:00\tD\nRule\tNYC\t1920\tonly\t-\tOct\tlastSun\t2:00\t0\tS\nRule\tNYC\t1921\t1966\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule\tNYC\t1921\t1954\t-\tSep\tlastSun\t2:00\t0\tS\nRule\tNYC\t1955\t1966\t-\tOct\tlastSun\t2:00\t0\tS\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n\t\t#STDOFF\t-4:56:01.6\nZone America/New_York\t-4:56:02 -\tLMT\t1883 Nov 18 17:00u\n\t\t\t-5:00\tUS\tE%sT\t1920\n\t\t\t-5:00\tNYC\tE%sT\t1942\n\t\t\t-5:00\tUS\tE%sT\t1946\n\t\t\t-5:00\tNYC\tE%sT\t1967\n\t\t\t-5:00\tUS\tE%sT\n\n# US central time, represented by Chicago\n\n# Alabama, Arkansas, Florida panhandle (Bay, Calhoun, Escambia,\n# Gulf, Holmes, Jackson, Okaloosa, Santa Rosa, Walton, and\n# Washington counties), Illinois, western Indiana\n# (Gibson, Jasper, Lake, LaPorte, Newton, Porter, Posey, Spencer,\n# Vanderburgh, and Warrick counties), Iowa, most of Kansas, western\n# Kentucky, Louisiana, Minnesota, Mississippi, Missouri, eastern\n# Nebraska, eastern North Dakota, Oklahoma, eastern South Dakota,\n# western Tennessee, most of Texas, Wisconsin\n\n# From Paul Eggert (2018-01-07):\n# In 1869 the Chicago Astronomical Society contracted with the city to keep\n# time.  Though delayed by the Great Fire, by 1880 a wire ran from the\n# Dearborn Observatory (on the University of Chicago campus) to City Hall,\n# which then sent signals to police and fire stations.  However, railroads got\n# their time signals from the Allegheny Observatory, the Madison Observatory,\n# the Ann Arbor Observatory, etc., so their clocks did not agree with each\n# other or with the city's official time.  The confusion took some years to\n# clear up.  See:\n# Moser M. How Chicago gave America its time zones. Chicago. 2018-01-04.\n# http://www.chicagomag.com/city-life/January-2018/How-Chicago-Gave-America-Its-Time-Zones/\n\n# From Larry M. Smith (2006-04-26) re Wisconsin:\n# https://docs.legis.wisconsin.gov/statutes/statutes/175.pdf\n# is currently enforced at the 01:00 time of change.  Because the local\n# \"bar time\" in the state corresponds to 02:00, a number of citations\n# are issued for the \"sale of class 'B' alcohol after prohibited\n# hours\" within the deviated hour of this change every year....\n#\n# From Douglas R. Bomberg (2007-03-12):\n# Wisconsin has enacted (nearly eleventh-hour) legislation to get WI\n# Statue 175 closer in synch with the US Congress' intent....\n# https://docs.legis.wisconsin.gov/2007/related/acts/3\n\n# From an email administrator of the City of Fort Pierre, SD (2015-12-21):\n# Fort Pierre is technically located in the Mountain time zone as is\n# the rest of Stanley County.  Most of Stanley County and Fort Pierre\n# uses the Central time zone due to doing most of their business in\n# Pierre so it simplifies schedules.  I have lived in Stanley County\n# all my life and it has been that way since I can remember.  (43 years!)\n#\n# From Paul Eggert (2015-12-25):\n# Assume this practice predates 1970, so Fort Pierre can use America/Chicago.\n\n# From Paul Eggert (2015-04-06):\n# In 1950s Nashville a public clock had dueling faces, one for conservatives\n# and the other for liberals; the two sides didn't agree about the time of day.\n# I haven't found a photo of this clock, nor have I tracked down the TIME\n# magazine report cited below, but here's the story as told by the late\n# American journalist John Seigenthaler, who was there:\n#\n# \"The two [newspaper] owners held strongly contrasting political and\n# ideological views.  Evans was a New South liberal, Stahlman an Old South\n# conservative, and their two papers frequently clashed editorially, often on\n# the same day....  In the 1950s as the state legislature was grappling with\n# the question of whether to approve daylight saving time for the entire state,\n# TIME magazine reported:\n#\n# \"'The Nashville Banner and The Nashville Tennessean rarely agree on anything\n# but the time of day - and last week they couldn't agree on that.'\n#\n# \"It was all too true. The clock on the front of the building had two faces -\n# The Tennessean side of the building facing west, the other, east.  When it\n# was high noon Banner time, it was 11 a.m. Tennessean time.\"\n#\n# Seigenthaler J. For 100 years, Tennessean had it covered.\n# The Tennessean 2007-05-11, republished 2015-04-06.\n# https://www.tennessean.com/story/insider/extras/2015/04/06/archives-seigenthaler-for-100-years-the-tennessean-had-it-covered/25348545/\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER\nRule\tChicago\t1920\tonly\t-\tJun\t13\t2:00\t1:00\tD\nRule\tChicago\t1920\t1921\t-\tOct\tlastSun\t2:00\t0\tS\nRule\tChicago\t1921\tonly\t-\tMar\tlastSun\t2:00\t1:00\tD\nRule\tChicago\t1922\t1966\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule\tChicago\t1922\t1954\t-\tSep\tlastSun\t2:00\t0\tS\nRule\tChicago\t1955\t1966\t-\tOct\tlastSun\t2:00\t0\tS\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Chicago\t-5:50:36 -\tLMT\t1883 Nov 18 18:00u\n\t\t\t-6:00\tUS\tC%sT\t1920\n\t\t\t-6:00\tChicago\tC%sT\t1936 Mar  1  2:00\n\t\t\t-5:00\t-\tEST\t1936 Nov 15  2:00\n\t\t\t-6:00\tChicago\tC%sT\t1942\n\t\t\t-6:00\tUS\tC%sT\t1946\n\t\t\t-6:00\tChicago\tC%sT\t1967\n\t\t\t-6:00\tUS\tC%sT\n# Oliver County, ND switched from mountain to central time on 1992-10-25.\nZone America/North_Dakota/Center -6:45:12 - LMT\t1883 Nov 18 19:00u\n\t\t\t-7:00\tUS\tM%sT\t1992 Oct 25  2:00\n\t\t\t-6:00\tUS\tC%sT\n# Morton County, ND, switched from mountain to central time on\n# 2003-10-26, except for the area around Mandan which was already central time.\n# See <http://dmses.dot.gov/docimages/p63/135818.pdf>.\n# Officially this switch also included part of Sioux County, and\n# Jones, Mellette, and Todd Counties in South Dakota;\n# but in practice these other counties were already observing central time.\n# See <http://www.epa.gov/fedrgstr/EPA-IMPACT/2003/October/Day-28/i27056.htm>.\nZone America/North_Dakota/New_Salem -6:45:39 - LMT 1883 Nov 18 19:00u\n\t\t\t-7:00\tUS\tM%sT\t2003 Oct 26  2:00\n\t\t\t-6:00\tUS\tC%sT\n\n# From Josh Findley (2011-01-21):\n# ...it appears that Mercer County, North Dakota, changed from the\n# mountain time zone to the central time zone at the last transition from\n# daylight-saving to standard time (on Nov. 7, 2010):\n# https://www.gpo.gov/fdsys/pkg/FR-2010-09-29/html/2010-24376.htm\n# http://www.bismarcktribune.com/news/local/article_1eb1b588-c758-11df-b472-001cc4c03286.html\n\n# From Andy Lipscomb (2011-01-24):\n# ...according to the Census Bureau, the largest city is Beulah (although\n# it's commonly referred to as Beulah-Hazen, with Hazen being the next\n# largest city in Mercer County).  Google Maps places Beulah's city hall\n# at 47° 15' 51\" N, 101° 46' 40\" W, which yields an offset of 6h47'07\".\n\nZone America/North_Dakota/Beulah -6:47:07 - LMT\t1883 Nov 18 19:00u\n\t\t\t-7:00\tUS\tM%sT\t2010 Nov  7  2:00\n\t\t\t-6:00\tUS\tC%sT\n\n# US mountain time, represented by Denver\n#\n# Colorado, far western Kansas, Montana, western\n# Nebraska, Nevada border (Jackpot, Owyhee, and Mountain City),\n# New Mexico, southwestern North Dakota,\n# western South Dakota, far western Texas (El Paso County, Hudspeth County,\n# and Pine Springs and Nickel Creek in Culberson County), Utah, Wyoming\n#\n# From Paul Eggert (2018-10-25):\n# On 1921-03-04 federal law placed all of Texas into the central time zone.\n# However, El Paso ignored the law for decades and continued to observe\n# mountain time, on the grounds that that's what they had always done\n# and they weren't about to let the federal government tell them what to do.\n# Eventually the federal government gave in and changed the law on\n# 1970-04-10 to match what El Paso was actually doing.  Although\n# that's slightly after our 1970 cutoff, there is no need to create a\n# separate zone for El Paso since they were ignoring the law anyway.  See:\n# Long T. El Pasoans were time rebels, fought to stay in Mountain zone.\n# El Paso Times. 2018-10-24 06:40 -06.\n# https://www.elpasotimes.com/story/news/local/el-paso/2018/10/24/el-pasoans-were-time-rebels-fought-stay-mountain-zone/1744509002/\n#\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER\nRule\tDenver\t1920\t1921\t-\tMar\tlastSun\t2:00\t1:00\tD\nRule\tDenver\t1920\tonly\t-\tOct\tlastSun\t2:00\t0\tS\nRule\tDenver\t1921\tonly\t-\tMay\t22\t2:00\t0\tS\nRule\tDenver\t1965\t1966\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule\tDenver\t1965\t1966\t-\tOct\tlastSun\t2:00\t0\tS\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Denver\t-6:59:56 -\tLMT\t1883 Nov 18 19:00u\n\t\t\t-7:00\tUS\tM%sT\t1920\n\t\t\t-7:00\tDenver\tM%sT\t1942\n\t\t\t-7:00\tUS\tM%sT\t1946\n\t\t\t-7:00\tDenver\tM%sT\t1967\n\t\t\t-7:00\tUS\tM%sT\n\n# US Pacific time, represented by Los Angeles\n#\n# California, northern Idaho (Benewah, Bonner, Boundary, Clearwater,\n# Kootenai, Latah, Lewis, Nez Perce, and Shoshone counties, Idaho county\n# north of the Salmon River, and the towns of Burgdorf and Warren),\n# Nevada (except West Wendover), Oregon (except the northern ¾ of\n# Malheur county), and Washington\n\n# From Paul Eggert (2016-08-20):\n# In early February 1948, in response to California's electricity shortage,\n# PG&E changed power frequency from 60 to 59.5 Hz during daylight hours,\n# causing electric clocks to lose six minutes per day.  (This did not change\n# legal time, and is not part of the data here.)  See:\n# Ross SA. An energy crisis from the past: Northern California in 1948.\n# Working Paper No. 8, Institute of Governmental Studies, UC Berkeley,\n# 1973-11.  https://escholarship.org/uc/item/8x22k30c\n#\n# In another measure to save electricity, DST was instituted from 1948-03-14\n# at 02:01 to 1949-01-16 at 02:00, with the governor having the option to move\n# the fallback transition earlier.  See pages 3-4 of:\n# http://clerk.assembly.ca.gov/sites/clerk.assembly.ca.gov/files/archive/Statutes/1948/48Vol1_Chapters.pdf\n#\n# In response:\n#\n#   Governor Warren received a torrent of objecting mail, and it is not too much\n#   to speculate that the objections to Daylight Saving Time were one important\n#   factor in the defeat of the Dewey-Warren Presidential ticket in California.\n#     -- Ross, p 25\n#\n# On December 8 the governor exercised the option, setting the date to January 1\n# (LA Times 1948-12-09).  The transition time was 02:00 (LA Times 1949-01-01).\n#\n# Despite the controversy, in 1949 California voters approved Proposition 12,\n# which established DST from April's last Sunday at 01:00 until September's\n# last Sunday at 02:00. This was amended by 1962's Proposition 6, which changed\n# the fall-back date to October's last Sunday. See:\n# https://repository.uchastings.edu/cgi/viewcontent.cgi?article=1501&context=ca_ballot_props\n# https://repository.uchastings.edu/cgi/viewcontent.cgi?article=1636&context=ca_ballot_props\n#\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER\nRule\tCA\t1948\tonly\t-\tMar\t14\t2:01\t1:00\tD\nRule\tCA\t1949\tonly\t-\tJan\t 1\t2:00\t0\tS\nRule\tCA\t1950\t1966\t-\tApr\tlastSun\t1:00\t1:00\tD\nRule\tCA\t1950\t1961\t-\tSep\tlastSun\t2:00\t0\tS\nRule\tCA\t1962\t1966\t-\tOct\tlastSun\t2:00\t0\tS\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Los_Angeles -7:52:58 -\tLMT\t1883 Nov 18 20:00u\n\t\t\t-8:00\tUS\tP%sT\t1946\n\t\t\t-8:00\tCA\tP%sT\t1967\n\t\t\t-8:00\tUS\tP%sT\n\n# Alaska\n# AK%sT is the modern abbreviation for -09 per USNO.\n#\n# From Paul Eggert (2017-06-15):\n# Howse writes that Alaska switched from the Julian to the Gregorian calendar,\n# and from east-of-GMT to west-of-GMT days, when the US bought it from Russia.\n# On Friday, 1867-10-18 (Gregorian), at precisely 15:30 local time, the\n# Russian forts and fleet at Sitka fired salutes to mark the ceremony of\n# formal transfer.  See the Sacramento Daily Union (1867-11-14), p 3, col 2.\n# https://cdnc.ucr.edu/cgi-bin/cdnc?a=d&d=SDU18671114.2.12.1\n# Sitka workers did not change their calendars until Sunday, 1867-10-20,\n# and so celebrated two Sundays that week.  See: Ahllund T (tr Hallamaa P).\n# From the memoirs of a Finnish workman. Alaska History. 2006 Fall;21(2):1-25.\n# http://alaskahistoricalsociety.org/wp-content/uploads/2016/12/Ahllund-2006-Memoirs-of-a-Finnish-Workman.pdf\n# Include only the time zone part of this transition, ignoring the switch\n# from Julian to Gregorian, since we can't represent the Julian calendar.\n#\n# As far as we know, of the locations mentioned below only Sitka was\n# permanently inhabited in 1867 by anyone using either calendar.\n# (Yakutat was colonized by the Russians in 1799, but the settlement was\n# destroyed in 1805 by a Yakutat-kon war party.)  Many of Alaska's inhabitants\n# were unaware of the US acquisition of Alaska, much less of any calendar or\n# time change.  However, the Russian-influenced part of Alaska did observe\n# Russian time, and it is more accurate to model this than to ignore it.\n# The database format requires an exact transition time; use the Russian\n# salute as a somewhat-arbitrary time for the formal transfer of control for\n# all of Alaska.  Sitka's UTC offset is -9:01:13; adjust its 15:30 to the\n# local times of other Alaskan locations so that they change simultaneously.\n\n# From Paul Eggert (2014-07-18):\n# One opinion of the early 1980s turmoil in Alaska over time zones and\n# daylight saving time appeared as graffiti on a Juneau airport wall:\n# \"Welcome to Juneau.  Please turn your watch back to the 19th century.\"\n# See: Turner W. Alaska's four time zones now two. NY Times 1983-11-01.\n# http://www.nytimes.com/1983/11/01/us/alaska-s-four-time-zones-now-two.html\n#\n# Steve Ferguson (2011-01-31) referred to the following source:\n# Norris F. Keeping time in Alaska: national directives, local response.\n# Alaska History 2001;16(1-2).\n# http://alaskahistoricalsociety.org/discover-alaska/glimpses-of-the-past/keeping-time-in-alaska/\n\n# From Arthur David Olson (2011-02-01):\n# Here's database-relevant material from the 2001 \"Alaska History\" article:\n#\n# On September 20 [1979]...DOT...officials decreed that on April 27,\n# 1980, Juneau and other nearby communities would move to Yukon Time.\n# Sitka, Petersburg, Wrangell, and Ketchikan, however, would remain on\n# Pacific Time.\n#\n# ...on September 22, 1980, DOT Secretary Neil E. Goldschmidt rescinded the\n# Department's September 1979 decision. Juneau and other communities in\n# northern Southeast reverted to Pacific Time on October 26.\n#\n# On October 28 [1983]...the Metlakatla Indian Community Council voted\n# unanimously to keep the reservation on Pacific Time.\n#\n# According to DOT official Joanne Petrie, Indian reservations are not\n# bound to follow time zones imposed by neighboring jurisdictions.\n#\n# (The last is consistent with how the database now handles the Navajo\n# Nation.)\n\n# From Arthur David Olson (2011-02-09):\n# I just spoke by phone with a staff member at the Metlakatla Indian\n# Community office (using contact information available at\n# http://www.commerce.state.ak.us/dca/commdb/CIS.cfm?Comm_Boro_name=Metlakatla\n# It's shortly after 1:00 here on the east coast of the United States;\n# the staffer said it was shortly after 10:00 there. When I asked whether\n# that meant they were on Pacific time, they said no - they were on their\n# own time. I asked about daylight saving; they said it wasn't used. I\n# did not inquire about practices in the past.\n\n# From Arthur David Olson (2011-08-17):\n# For lack of better information, assume that Metlakatla's\n# abandonment of use of daylight saving resulted from the 1983 vote.\n\n# From Steffen Thorsen (2015-11-09):\n# It seems Metlakatla did go off PST on Sunday, November 1, changing\n# their time to AKST and are going to follow Alaska's DST, switching\n# between AKST and AKDT from now on....\n# https://www.krbd.org/2015/10/30/annette-island-times-they-are-a-changing/\n\n# From Ryan Stanley (2018-11-06):\n# The Metlakatla community in Alaska has decided not to change its\n# clock back an hour starting on November 4th, 2018 (day before yesterday).\n# They will be gmtoff=-28800 year-round.\n# https://www.facebook.com/141055983004923/photos/pb.141055983004923.-2207520000.1541465673./569081370202380/\n\n# From Paul Eggert (2018-12-16):\n# In a 2018-12-11 special election, Metlakatla voted to go back to\n# Alaska time (including daylight saving time) starting next year.\n# https://www.krbd.org/2018/12/12/metlakatla-to-follow-alaska-standard-time-allow-liquor-sales/\n#\n# From Ryan Stanley (2019-01-11):\n# The community will be changing back on the 20th of this month...\n# From Tim Parenti (2019-01-11):\n# Per an announcement on the Metlakatla community's official Facebook page, the\n# \"fall back\" will be on Sunday 2019-01-20 at 02:00:\n# https://www.facebook.com/141055983004923/photos/607150969728753/\n# So they won't be waiting for Alaska to join them on 2019-03-10, but will\n# rather change their clocks twice in seven weeks.\n\n# From Paul Eggert (2023-01-23):\n# America/Adak is for the Aleutian Islands that are part of Alaska\n# and are west of 169.5° W.\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Juneau\t 15:02:19 -\tLMT\t1867 Oct 19 15:33:32\n\t\t\t -8:57:41 -\tLMT\t1900 Aug 20 12:00\n\t\t\t -8:00\t-\tPST\t1942\n\t\t\t -8:00\tUS\tP%sT\t1946\n\t\t\t -8:00\t-\tPST\t1969\n\t\t\t -8:00\tUS\tP%sT\t1980 Apr 27  2:00\n\t\t\t -9:00\tUS\tY%sT\t1980 Oct 26  2:00\n\t\t\t -8:00\tUS\tP%sT\t1983 Oct 30  2:00\n\t\t\t -9:00\tUS\tY%sT\t1983 Nov 30\n\t\t\t -9:00\tUS\tAK%sT\nZone America/Sitka\t 14:58:47 -\tLMT\t1867 Oct 19 15:30\n\t\t\t -9:01:13 -\tLMT\t1900 Aug 20 12:00\n\t\t\t -8:00\t-\tPST\t1942\n\t\t\t -8:00\tUS\tP%sT\t1946\n\t\t\t -8:00\t-\tPST\t1969\n\t\t\t -8:00\tUS\tP%sT\t1983 Oct 30  2:00\n\t\t\t -9:00\tUS\tY%sT\t1983 Nov 30\n\t\t\t -9:00\tUS\tAK%sT\nZone America/Metlakatla\t 15:13:42 -\tLMT\t1867 Oct 19 15:44:55\n\t\t\t -8:46:18 -\tLMT\t1900 Aug 20 12:00\n\t\t\t -8:00\t-\tPST\t1942\n\t\t\t -8:00\tUS\tP%sT\t1946\n\t\t\t -8:00\t-\tPST\t1969\n\t\t\t -8:00\tUS\tP%sT\t1983 Oct 30  2:00\n\t\t\t -8:00\t-\tPST\t2015 Nov  1  2:00\n\t\t\t -9:00\tUS\tAK%sT\t2018 Nov  4  2:00\n\t\t\t -8:00\t-\tPST\t2019 Jan 20  2:00\n\t\t\t -9:00\tUS\tAK%sT\nZone America/Yakutat\t 14:41:05 -\tLMT\t1867 Oct 19 15:12:18\n\t\t\t -9:18:55 -\tLMT\t1900 Aug 20 12:00\n\t\t\t -9:00\t-\tYST\t1942\n\t\t\t -9:00\tUS\tY%sT\t1946\n\t\t\t -9:00\t-\tYST\t1969\n\t\t\t -9:00\tUS\tY%sT\t1983 Nov 30\n\t\t\t -9:00\tUS\tAK%sT\nZone America/Anchorage\t 14:00:24 -\tLMT\t1867 Oct 19 14:31:37\n\t\t\t -9:59:36 -\tLMT\t1900 Aug 20 12:00\n\t\t\t-10:00\t-\tAST\t1942\n\t\t\t-10:00\tUS\tA%sT\t1967 Apr\n\t\t\t-10:00\t-\tAHST\t1969\n\t\t\t-10:00\tUS\tAH%sT\t1983 Oct 30  2:00\n\t\t\t -9:00\tUS\tY%sT\t1983 Nov 30\n\t\t\t -9:00\tUS\tAK%sT\nZone America/Nome\t 12:58:22 -\tLMT\t1867 Oct 19 13:29:35\n\t\t\t-11:01:38 -\tLMT\t1900 Aug 20 12:00\n\t\t\t-11:00\t-\tNST\t1942\n\t\t\t-11:00\tUS\tN%sT\t1946\n\t\t\t-11:00\t-\tNST\t1967 Apr\n\t\t\t-11:00\t-\tBST\t1969\n\t\t\t-11:00\tUS\tB%sT\t1983 Oct 30  2:00\n\t\t\t -9:00\tUS\tY%sT\t1983 Nov 30\n\t\t\t -9:00\tUS\tAK%sT\nZone America/Adak\t 12:13:22 -\tLMT\t1867 Oct 19 12:44:35\n\t\t\t-11:46:38 -\tLMT\t1900 Aug 20 12:00\n\t\t\t-11:00\t-\tNST\t1942\n\t\t\t-11:00\tUS\tN%sT\t1946\n\t\t\t-11:00\t-\tNST\t1967 Apr\n\t\t\t-11:00\t-\tBST\t1969\n\t\t\t-11:00\tUS\tB%sT\t1983 Oct 30  2:00\n\t\t\t-10:00\tUS\tAH%sT\t1983 Nov 30\n\t\t\t-10:00\tUS\tH%sT\n# The following switches don't make our 1970 cutoff.\n#\n# Kiska observed Tokyo date and time during Japanese occupation from\n# 1942-06-06 to 1943-07-29, and similarly for Attu from 1942-06-07 to\n# 1943-05-29 (all dates American).  Both islands are now uninhabited.\n#\n# Shanks writes that part of southwest Alaska (e.g. Aniak)\n# switched from -11:00 to -10:00 on 1968-09-22 at 02:00,\n# and another part (e.g. Akiak) made the same switch five weeks later.\n#\n# From David Flater (2004-11-09):\n# In e-mail, 2004-11-02, Ray Hudson, historian/liaison to the Unalaska\n# Historic Preservation Commission, provided this information, which\n# suggests that Unalaska deviated from statutory time from early 1967\n# possibly until 1983:\n#\n#  Minutes of the Unalaska City Council Meeting, January 10, 1967:\n#  \"Except for St. Paul and Akutan, Unalaska is the only important\n#  location not on Alaska Standard Time.  The following resolution was\n#  made by William Robinson and seconded by Henry Swanson: Be it\n#  resolved that the City of Unalaska hereby goes to Alaska Standard\n#  Time as of midnight Friday, January 13, 1967 (1 A.M. Saturday,\n#  January 14, Alaska Standard Time.)  This resolution was passed with\n#  three votes for and one against.\"\n\n# Hawaii\n\n# From Arthur David Olson (2010-12-09):\n# \"Hawaiian Time\" by Robert C. Schmitt and Doak C. Cox appears on pages 207-225\n# of volume 26 of The Hawaiian Journal of History (1992). As of 2010-12-09,\n# the article is available at\n# https://evols.library.manoa.hawaii.edu/bitstream/10524/239/2/JL26215.pdf\n# and indicates that standard time was adopted effective noon, January\n# 13, 1896 (page 218), that in \"1933, the Legislature decreed daylight\n# saving for the period between the last Sunday of each April and the\n# last Sunday of each September, but less than a month later repealed the\n# act,\" (page 220), that year-round daylight saving time was in effect\n# from 1942-02-09 to 1945-09-30 (page 221, with no time of day given for\n# when clocks changed) and that clocks were changed by 30 minutes\n# effective the second Sunday of June, 1947 (page 219, with no time of\n# day given for when clocks changed). A footnote for the 1933 changes\n# cites Session Laws of Hawaii 1933, \"Act. 90 (approved 26 Apr. 1933)\n# and Act 163 (approved 21 May 1933).\"\n\n# From Arthur David Olson (2011-01-19):\n# The following is from \"Laws of the Territory of Hawaii Passed by the\n# Seventeenth Legislature: Regular Session 1933,\" available (as of\n# 2011-01-19) at American University's Pence Law Library. Page 85: \"Act\n# 90...At 2 o'clock ante meridian of the last Sunday in April of each\n# year, the standard time of this Territory shall be advanced one\n# hour...This Act shall take effect upon its approval. Approved this 26th\n# day of April, A. D. 1933. LAWRENCE M JUDD, Governor of the Territory of\n# Hawaii.\" Page 172: \"Act 163...Act 90 of the Session Laws of 1933 is\n# hereby repealed...This Act shall take effect upon its approval, upon\n# which date the standard time of this Territory shall be restored to\n# that existing immediately prior to the taking effect of said Act 90.\n# Approved this 21st day of May, A. D. 1933. LAWRENCE M. JUDD, Governor\n# of the Territory of Hawaii.\"\n#\n# Note that 1933-05-21 was a Sunday.\n# We're left to guess the time of day when Act 163 was approved; guess noon.\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone Pacific/Honolulu\t-10:31:26 -\tLMT\t1896 Jan 13 12:00\n\t\t\t-10:30\t-\tHST\t1933 Apr 30  2:00\n\t\t\t-10:30\t1:00\tHDT\t1933 May 21 12:00\n\t\t\t-10:30\tUS\tH%sT\t1947 Jun  8  2:00\n\t\t\t-10:00\t-\tHST\n\n# Now we turn to US areas that have diverged from the consensus since 1970.\n\n# Arizona mostly uses MST.\n\n# From Paul Eggert (2002-10-20):\n#\n# The information in the rest of this paragraph is derived from the\n# Daylight Saving Time web page\n# <http://www.dlapr.lib.az.us/links/daylight.htm> (2002-01-23)\n# maintained by the Arizona State Library, Archives and Public Records.\n# Between 1944-01-01 and 1944-04-01 the State of Arizona used standard\n# time, but by federal law railroads, airlines, bus lines, military\n# personnel, and some engaged in interstate commerce continued to\n# observe war (i.e., daylight saving) time.  The 1944-03-17 Phoenix\n# Gazette says that was the date the law changed, and that 04-01 was\n# the date the state's clocks would change.  In 1945 the State of\n# Arizona used standard time all year, again with exceptions only as\n# mandated by federal law.  Arizona observed DST in 1967, but Arizona\n# Laws 1968, ch. 183 (effective 1968-03-21) repealed DST.\n#\n# Shanks says the 1944 experiment came to an end on 1944-03-17.\n# Go with the Arizona State Library instead.\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Phoenix\t-7:28:18 -\tLMT\t1883 Nov 18 19:00u\n\t\t\t-7:00\tUS\tM%sT\t1944 Jan  1  0:01\n\t\t\t-7:00\t-\tMST\t1944 Apr  1  0:01\n\t\t\t-7:00\tUS\tM%sT\t1944 Oct  1  0:01\n\t\t\t-7:00\t-\tMST\t1967\n\t\t\t-7:00\tUS\tM%sT\t1968 Mar 21\n\t\t\t-7:00\t-\tMST\n\n# From Arthur David Olson (1988-02-13):\n# A writer from the Inter Tribal Council of Arizona, Inc.,\n# notes in private correspondence dated 1987-12-28 that \"Presently, only the\n# Navajo Nation participates in the Daylight Saving Time policy, due to its\n# large size and location in three states.\"  (The \"only\" means that other\n# tribal nations don't use DST.)\n#\n# From Paul Eggert (2013-08-26):\n# See America/Denver for a zone appropriate for the Navajo Nation.\n\n# Southern Idaho (Ada, Adams, Bannock, Bear Lake, Bingham, Blaine,\n# Boise, Bonneville, Butte, Camas, Canyon, Caribou, Cassia, Clark,\n# Custer, Elmore, Franklin, Fremont, Gem, Gooding, Jefferson, Jerome,\n# Lemhi, Lincoln, Madison, Minidoka, Oneida, Owyhee, Payette, Power,\n# Teton, Twin Falls, Valley, Washington counties, and the southern\n# quarter of Idaho county) and eastern Oregon (most of Malheur County)\n# switched four weeks late in 1974.\n#\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Boise\t-7:44:49 -\tLMT\t1883 Nov 18 20:00u\n\t\t\t-8:00\tUS\tP%sT\t1923 May 13  2:00\n\t\t\t-7:00\tUS\tM%sT\t1974\n\t\t\t-7:00\t-\tMST\t1974 Feb  3  2:00\n\t\t\t-7:00\tUS\tM%sT\n\n# Indiana\n#\n# For a map of Indiana's time zone regions, see:\n# https://en.wikipedia.org/wiki/Time_in_Indiana\n#\n# From Paul Eggert (2018-11-30):\n# A brief but entertaining history of time in Indiana describes a 1949 debate\n# in the Indiana House where city legislators (who favored \"fast time\")\n# tussled with farm legislators (who didn't) over a bill to outlaw DST:\n#  \"Lacking enough votes, the city faction tries to filibuster until time runs\n#   out on the session at midnight, but rural champion Rep. Herbert Copeland,\n#   R-Madison, leans over the gallery railing and forces the official clock\n#   back to 9 p.m., breaking it in the process.  The clock sticks on 9 as the\n#   debate rages on into the night.  The filibuster finally dies out and the\n#   bill passes, while outside the chamber, clocks read 3:30 a.m.  In the end,\n#   it doesn't matter which side won.  The law has no enforcement powers and\n#   is simply ignored by fast-time communities.\"\n# How Indiana went from 'God's time' to split zones and daylight-saving.\n# Indianapolis Star. 2018-11-27 14:58 -05.\n# https://www.indystar.com/story/news/politics/2018/11/27/indianapolis-indiana-time-zone-history-central-eastern-daylight-savings-time/2126300002/\n#\n# From Paul Eggert (2007-08-17):\n# Since 1970, most of Indiana has been like America/Indiana/Indianapolis,\n# with the following exceptions:\n#\n# - Gibson, Jasper, Lake, LaPorte, Newton, Porter, Posey, Spencer,\n#   Vanderburgh, and Warrick counties have been like America/Chicago.\n#\n# - Dearborn and Ohio counties have been like America/New_York.\n#\n# - Clark, Floyd, and Harrison counties have been like\n#   America/Kentucky/Louisville.\n#\n# - Crawford, Daviess, Dubois, Knox, Martin, Perry, Pike, Pulaski, Starke,\n#   and Switzerland counties have their own time zone histories as noted below.\n#\n# Shanks partitioned Indiana into 345 regions, each with its own time history,\n# and wrote \"Even newspaper reports present contradictory information.\"\n# Those Hoosiers!  Such a flighty and changeable people!\n# Fortunately, most of the complexity occurred before our cutoff date of 1970.\n#\n# Other than Indianapolis, the Indiana place names are so nondescript\n# that they would be ambiguous if we left them at the 'America' level.\n# So we reluctantly put them all in a subdirectory 'America/Indiana'.\n\n# From Paul Eggert (2014-06-26):\n# https://www.federalregister.gov/articles/2006/01/20/06-563/standard-time-zone-boundary-in-the-state-of-indiana\n# says \"DOT is relocating the time zone boundary in Indiana to move Starke,\n# Pulaski, Knox, Daviess, Martin, Pike, Dubois, and Perry Counties from the\n# Eastern Time Zone to the Central Time Zone.... The effective date of\n# this rule is 2 a.m. EST Sunday, April 2, 2006, which is the\n# changeover date from standard time to Daylight Saving Time.\"\n# Strictly speaking, this meant the affected counties changed their\n# clocks twice that night, but this obviously was in error.  The intent\n# was that 01:59:59 EST be followed by 02:00:00 CDT.\n\n# From Gwillim Law (2007-02-10):\n# The Associated Press has been reporting that Pulaski County, Indiana is\n# going to switch from Central to Eastern Time on March 11, 2007....\n# http://www.indystar.com/apps/pbcs.dll/article?AID=/20070207/LOCAL190108/702070524/0/LOCAL\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER\nRule Indianapolis 1941\tonly\t-\tJun\t22\t2:00\t1:00\tD\nRule Indianapolis 1941\t1954\t-\tSep\tlastSun\t2:00\t0\tS\nRule Indianapolis 1946\t1954\t-\tApr\tlastSun\t2:00\t1:00\tD\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Indiana/Indianapolis -5:44:38 - LMT 1883 Nov 18 18:00u\n\t\t\t-6:00\tUS\tC%sT\t1920\n\t\t\t-6:00 Indianapolis C%sT\t1942\n\t\t\t-6:00\tUS\tC%sT\t1946\n\t\t\t-6:00 Indianapolis C%sT\t1955 Apr 24  2:00\n\t\t\t-5:00\t-\tEST\t1957 Sep 29  2:00\n\t\t\t-6:00\t-\tCST\t1958 Apr 27  2:00\n\t\t\t-5:00\t-\tEST\t1969\n\t\t\t-5:00\tUS\tE%sT\t1971\n\t\t\t-5:00\t-\tEST\t2006\n\t\t\t-5:00\tUS\tE%sT\n#\n# Eastern Crawford County, Indiana, left its clocks alone in 1974,\n# as well as from 1976 through 2005.\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER\nRule\tMarengo\t1951\tonly\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule\tMarengo\t1951\tonly\t-\tSep\tlastSun\t2:00\t0\tS\nRule\tMarengo\t1954\t1960\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule\tMarengo\t1954\t1960\t-\tSep\tlastSun\t2:00\t0\tS\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Indiana/Marengo -5:45:23 -\tLMT\t1883 Nov 18 18:00u\n\t\t\t-6:00\tUS\tC%sT\t1951\n\t\t\t-6:00\tMarengo\tC%sT\t1961 Apr 30  2:00\n\t\t\t-5:00\t-\tEST\t1969\n\t\t\t-5:00\tUS\tE%sT\t1974 Jan  6  2:00\n\t\t\t-6:00\t1:00\tCDT\t1974 Oct 27  2:00\n\t\t\t-5:00\tUS\tE%sT\t1976\n\t\t\t-5:00\t-\tEST\t2006\n\t\t\t-5:00\tUS\tE%sT\n#\n# Daviess, Dubois, Knox, and Martin Counties, Indiana,\n# switched from eastern to central time in April 2006, then switched back\n# in November 2007.\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER\nRule Vincennes\t1946\tonly\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule Vincennes\t1946\tonly\t-\tSep\tlastSun\t2:00\t0\tS\nRule Vincennes\t1953\t1954\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule Vincennes\t1953\t1959\t-\tSep\tlastSun\t2:00\t0\tS\nRule Vincennes\t1955\tonly\t-\tMay\t 1\t0:00\t1:00\tD\nRule Vincennes\t1956\t1963\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule Vincennes\t1960\tonly\t-\tOct\tlastSun\t2:00\t0\tS\nRule Vincennes\t1961\tonly\t-\tSep\tlastSun\t2:00\t0\tS\nRule Vincennes\t1962\t1963\t-\tOct\tlastSun\t2:00\t0\tS\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Indiana/Vincennes -5:50:07 - LMT\t1883 Nov 18 18:00u\n\t\t\t-6:00\tUS\tC%sT\t1946\n\t\t\t-6:00 Vincennes\tC%sT\t1964 Apr 26  2:00\n\t\t\t-5:00\t-\tEST\t1969\n\t\t\t-5:00\tUS\tE%sT\t1971\n\t\t\t-5:00\t-\tEST\t2006 Apr  2  2:00\n\t\t\t-6:00\tUS\tC%sT\t2007 Nov  4  2:00\n\t\t\t-5:00\tUS\tE%sT\n#\n# Perry County, Indiana, switched from eastern to central time in April 2006.\n# From Alois Treindl (2019-07-09):\n# The Indianapolis News, Friday 27 October 1967 states that Perry County\n# returned to CST.  It went again to EST on 27 April 1969, as documented by the\n# Indianapolis star of Saturday 26 April.\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER\nRule Perry\t1955\tonly\t-\tMay\t 1\t0:00\t1:00\tD\nRule Perry\t1955\t1960\t-\tSep\tlastSun\t2:00\t0\tS\nRule Perry\t1956\t1963\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule Perry\t1961\t1963\t-\tOct\tlastSun\t2:00\t0\tS\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Indiana/Tell_City -5:47:03 - LMT\t1883 Nov 18 18:00u\n\t\t\t-6:00\tUS\tC%sT\t1946\n\t\t\t-6:00 Perry\tC%sT\t1964 Apr 26  2:00\n\t\t\t-5:00\t-\tEST\t1967 Oct 29  2:00\n\t\t\t-6:00\tUS\tC%sT\t1969 Apr 27  2:00\n\t\t\t-5:00\tUS\tE%sT\t1971\n\t\t\t-5:00\t-\tEST\t2006 Apr  2  2:00\n\t\t\t-6:00\tUS\tC%sT\n#\n# Pike County, Indiana moved from central to eastern time in 1977,\n# then switched back in 2006, then switched back again in 2007.\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER\nRule\tPike\t1955\tonly\t-\tMay\t 1\t0:00\t1:00\tD\nRule\tPike\t1955\t1960\t-\tSep\tlastSun\t2:00\t0\tS\nRule\tPike\t1956\t1964\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule\tPike\t1961\t1964\t-\tOct\tlastSun\t2:00\t0\tS\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Indiana/Petersburg -5:49:07 - LMT\t1883 Nov 18 18:00u\n\t\t\t-6:00\tUS\tC%sT\t1955\n\t\t\t-6:00\tPike\tC%sT\t1965 Apr 25  2:00\n\t\t\t-5:00\t-\tEST\t1966 Oct 30  2:00\n\t\t\t-6:00\tUS\tC%sT\t1977 Oct 30  2:00\n\t\t\t-5:00\t-\tEST\t2006 Apr  2  2:00\n\t\t\t-6:00\tUS\tC%sT\t2007 Nov  4  2:00\n\t\t\t-5:00\tUS\tE%sT\n#\n# Starke County, Indiana moved from central to eastern time in 1991,\n# then switched back in 2006.\n# From Arthur David Olson (1991-10-28):\n# An article on page A3 of the Sunday, 1991-10-27 Washington Post\n# notes that Starke County switched from Central time to Eastern time as of\n# 1991-10-27.\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER\nRule\tStarke\t1947\t1961\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule\tStarke\t1947\t1954\t-\tSep\tlastSun\t2:00\t0\tS\nRule\tStarke\t1955\t1956\t-\tOct\tlastSun\t2:00\t0\tS\nRule\tStarke\t1957\t1958\t-\tSep\tlastSun\t2:00\t0\tS\nRule\tStarke\t1959\t1961\t-\tOct\tlastSun\t2:00\t0\tS\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Indiana/Knox -5:46:30 -\tLMT\t1883 Nov 18 18:00u\n\t\t\t-6:00\tUS\tC%sT\t1947\n\t\t\t-6:00\tStarke\tC%sT\t1962 Apr 29  2:00\n\t\t\t-5:00\t-\tEST\t1963 Oct 27  2:00\n\t\t\t-6:00\tUS\tC%sT\t1991 Oct 27  2:00\n\t\t\t-5:00\t-\tEST\t2006 Apr  2  2:00\n\t\t\t-6:00\tUS\tC%sT\n#\n# Pulaski County, Indiana, switched from eastern to central time in\n# April 2006 and then switched back in March 2007.\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER\nRule\tPulaski\t1946\t1960\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule\tPulaski\t1946\t1954\t-\tSep\tlastSun\t2:00\t0\tS\nRule\tPulaski\t1955\t1956\t-\tOct\tlastSun\t2:00\t0\tS\nRule\tPulaski\t1957\t1960\t-\tSep\tlastSun\t2:00\t0\tS\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Indiana/Winamac -5:46:25 - LMT\t1883 Nov 18 18:00u\n\t\t\t-6:00\tUS\tC%sT\t1946\n\t\t\t-6:00\tPulaski\tC%sT\t1961 Apr 30  2:00\n\t\t\t-5:00\t-\tEST\t1969\n\t\t\t-5:00\tUS\tE%sT\t1971\n\t\t\t-5:00\t-\tEST\t2006 Apr  2  2:00\n\t\t\t-6:00\tUS\tC%sT\t2007 Mar 11  2:00\n\t\t\t-5:00\tUS\tE%sT\n#\n# Switzerland County, Indiana, did not observe DST from 1973 through 2005.\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Indiana/Vevay -5:40:16 -\tLMT\t1883 Nov 18 18:00u\n\t\t\t-6:00\tUS\tC%sT\t1954 Apr 25  2:00\n\t\t\t-5:00\t-\tEST\t1969\n\t\t\t-5:00\tUS\tE%sT\t1973\n\t\t\t-5:00\t-\tEST\t2006\n\t\t\t-5:00\tUS\tE%sT\n\n# From Paul Eggert (2018-03-20):\n# The Louisville & Nashville Railroad's 1883-11-18 change occurred at\n# 10:00 old local time; train were supposed to come to a standstill\n# for precisely 18 minutes.  See Bartky Fig. 1 (page 50).  It is not\n# clear how this matched civil time in Louisville, so for now continue\n# to assume Louisville switched at noon new local time, like New York.\n#\n# From Michael Deckers (2019-08-06):\n# From the contemporary source given by Alois Treindl,\n# the switch in Louisville on 1946-04-28 was on 00:01\n# From Paul Eggert (2019-08-26):\n# That source was the Louisville Courier-Journal, 1946-04-27, p 4.\n# Shanks gives 02:00 for all 20th-century transition times in Louisville.\n# Evidently this is wrong for spring 1946.  Although also likely wrong\n# for other dates, we have no data.\n#\n# Part of Kentucky left its clocks alone in 1974.\n# This also includes Clark, Floyd, and Harrison counties in Indiana.\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER\nRule Louisville\t1921\tonly\t-\tMay\t1\t2:00\t1:00\tD\nRule Louisville\t1921\tonly\t-\tSep\t1\t2:00\t0\tS\nRule Louisville\t1941\tonly\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule Louisville\t1941\tonly\t-\tSep\tlastSun\t2:00\t0\tS\nRule Louisville\t1946\tonly\t-\tApr\tlastSun\t0:01\t1:00\tD\nRule Louisville\t1946\tonly\t-\tJun\t2\t2:00\t0\tS\nRule Louisville\t1950\t1961\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule Louisville\t1950\t1955\t-\tSep\tlastSun\t2:00\t0\tS\nRule Louisville\t1956\t1961\t-\tOct\tlastSun\t2:00\t0\tS\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Kentucky/Louisville -5:43:02 - LMT\t1883 Nov 18 18:00u\n\t\t\t-6:00\tUS\tC%sT\t1921\n\t\t\t-6:00 Louisville C%sT\t1942\n\t\t\t-6:00\tUS\tC%sT\t1946\n\t\t\t-6:00 Louisville C%sT\t1961 Jul 23  2:00\n\t\t\t-5:00\t-\tEST\t1968\n\t\t\t-5:00\tUS\tE%sT\t1974 Jan  6  2:00\n\t\t\t-6:00\t1:00\tCDT\t1974 Oct 27  2:00\n\t\t\t-5:00\tUS\tE%sT\n#\n# Wayne County, Kentucky\n#\n# From Lake Cumberland LIFE\n# http://www.lake-cumberland.com/life/archive/news990129time.shtml\n# (1999-01-29) via WKYM-101.7:\n# Clinton County has joined Wayne County in asking the DoT to change from\n# the Central to the Eastern time zone....  The Wayne County government made\n# the same request in December.  And while Russell County officials have not\n# taken action, the majority of respondents to a poll conducted there in\n# August indicated they would like to change to \"fast time\" also.\n# The three Lake Cumberland counties are the farthest east of any U.S.\n# location in the Central time zone.\n#\n# From Rich Wales (2000-08-29):\n# After prolonged debate, and despite continuing deep differences of opinion,\n# Wayne County (central Kentucky) is switching from Central (-0600) to Eastern\n# (-0500) time.  They won't \"fall back\" this year.  See Sara Shipley,\n# The difference an hour makes, Nando Times (2000-08-29 15:33 -0400).\n#\n# From Paul Eggert (2001-07-16):\n# The final rule was published in the\n# Federal Register 65, 160 (2000-08-17), pp 50154-50158.\n# https://www.gpo.gov/fdsys/pkg/FR-2000-08-17/html/00-20854.htm\n#\nZone America/Kentucky/Monticello -5:39:24 - LMT\t1883 Nov 18 18:00u\n\t\t\t-6:00\tUS\tC%sT\t1946\n\t\t\t-6:00\t-\tCST\t1968\n\t\t\t-6:00\tUS\tC%sT\t2000 Oct 29  2:00\n\t\t\t-5:00\tUS\tE%sT\n\n\n# From Rives McDow (2000-08-30):\n# Here ... are all the changes in the US since 1985.\n# Kearny County, KS (put all of county on central;\n#\tpreviously split between MST and CST) ... 1990-10\n# Starke County, IN (from CST to EST) ... 1991-10\n# Oliver County, ND (from MST to CST) ... 1992-10\n# West Wendover, NV (from PST TO MST) ... 1999-10\n# Wayne County, KY (from CST to EST) ... 2000-10\n#\n# From Paul Eggert (2001-07-17):\n# We don't know where the line used to be within Kearny County, KS,\n# so omit that change for now.\n# See America/Indiana/Knox for the Starke County, IN change.\n# See America/North_Dakota/Center for the Oliver County, ND change.\n# West Wendover, NV officially switched from Pacific to mountain time on\n# 1999-10-31.  See the\n# Federal Register 64, 203 (1999-10-21), pp 56705-56707.\n# https://www.gpo.gov/fdsys/pkg/FR-1999-10-21/html/99-27240.htm\n# However, the Federal Register says that West Wendover already operated\n# on mountain time, and the rule merely made this official;\n# hence a separate tz entry is not needed.\n\n# Michigan\n#\n# From Bob Devine (1988-01-28):\n# Michigan didn't observe DST from 1968 to 1973.\n#\n# From Paul Eggert (1999-03-31):\n# Shanks writes that Michigan started using standard time on 1885-09-18,\n# but Howse writes (pp 124-125, referring to Popular Astronomy, 1901-01)\n# that Detroit kept\n#\n#\tlocal time until 1900 when the City Council decreed that clocks should\n#\tbe put back twenty-eight minutes to Central Standard Time.  Half the\n#\tcity obeyed, half refused.  After considerable debate, the decision\n#\twas rescinded and the city reverted to Sun time.  A derisive offer to\n#\terect a sundial in front of the city hall was referred to the\n#\tCommittee on Sewers.  Then, in 1905, Central time was adopted\n#\tby city vote.\n#\n# This story is too entertaining to be false, so go with Howse over Shanks.\n#\n# From Paul Eggert (2001-03-06):\n# Garland (1927) writes \"Cleveland and Detroit advanced their clocks\n# one hour in 1914.\"  This change is not in Shanks.  We have no more\n# info, so omit this for now.\n#\n# From Paul Eggert (2019-07-06):\n# Due to a complicated set of legal maneuvers, in 1967 Michigan did\n# not start daylight saving time when the rest of the US did.\n# Instead, it began DST on Jun 14 at 00:01.  This was big news:\n# the Detroit Free Press reported it at the top of Page 1 on\n# 1967-06-14, in an article \"State Adjusting to Switch to Fast Time\"\n# by Gary Blonston, above an article about Thurgood Marshall's\n# confirmation to the US Supreme Court.  Although Shanks says Detroit\n# observed DST until 1967-10-29 00:01, that time of day seems to be\n# incorrect, as the Free Press later said DST ended in Michigan at the\n# same time as the rest of the US.  Also, although Shanks reports no DST in\n# Detroit in 1968, it did observe DST that year; in the November 1968\n# election Michigan voters narrowly repealed DST, effective 1969.\n#\n# Most of Michigan observed DST from 1973 on, but was a bit late in 1975.\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER\nRule\tDetroit\t1948\tonly\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule\tDetroit\t1948\tonly\t-\tSep\tlastSun\t2:00\t0\tS\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Detroit\t-5:32:11 -\tLMT\t1905\n\t\t\t-6:00\t-\tCST\t1915 May 15  2:00\n\t\t\t-5:00\t-\tEST\t1942\n\t\t\t-5:00\tUS\tE%sT\t1946\n\t\t\t-5:00\tDetroit\tE%sT\t1967 Jun 14  0:01\n\t\t\t-5:00\tUS\tE%sT\t1969\n\t\t\t-5:00\t-\tEST\t1973\n\t\t\t-5:00\tUS\tE%sT\t1975\n\t\t\t-5:00\t-\tEST\t1975 Apr 27  2:00\n\t\t\t-5:00\tUS\tE%sT\n#\n# Dickinson, Gogebic, Iron, and Menominee Counties, Michigan,\n# switched from EST to CST/CDT in 1973.\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER\nRule Menominee\t1946\tonly\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule Menominee\t1946\tonly\t-\tSep\tlastSun\t2:00\t0\tS\nRule Menominee\t1966\tonly\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule Menominee\t1966\tonly\t-\tOct\tlastSun\t2:00\t0\tS\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Menominee\t-5:50:27 -\tLMT\t1885 Sep 18 12:00\n\t\t\t-6:00\tUS\tC%sT\t1946\n\t\t\t-6:00 Menominee\tC%sT\t1969 Apr 27  2:00\n\t\t\t-5:00\t-\tEST\t1973 Apr 29  2:00\n\t\t\t-6:00\tUS\tC%sT\n\n# Navassa\n# administered by the US Fish and Wildlife Service\n# claimed by US under the provisions of the 1856 Guano Islands Act\n# also claimed by Haiti\n# occupied 1857/1900 by the Navassa Phosphate Co\n# US lighthouse 1917/1996-09\n# currently uninhabited\n# see Mark Fineman, \"An Isle Rich in Guano and Discord\",\n# _Los Angeles Times_ (1998-11-10), A1, A10; it cites\n# Jimmy Skaggs, _The Great Guano Rush_ (1994).\n\n################################################################################\n\n\n# From Paul Eggert (2017-02-10):\n#\n# Unless otherwise specified, the source for data through 1990 is:\n# Thomas G. Shanks and Rique Pottenger, The International Atlas (6th edition),\n# San Diego: ACS Publications, Inc. (2003).\n# Unfortunately this book contains many errors and cites no sources.\n#\n# Many years ago Gwillim Law wrote that a good source\n# for time zone data was the International Air Transport\n# Association's Standard Schedules Information Manual (IATA SSIM),\n# published semiannually.  Law sent in several helpful summaries\n# of the IATA's data after 1990.  Except where otherwise noted,\n# IATA SSIM is the source for entries after 1990.\n#\n# Other sources occasionally used include:\n#\n#\tMilne J. Civil time. Geogr J. 1899 Feb;13(2):173-94\n#\t<https://www.jstor.org/stable/1774359>.\n#\n#\tPearce C. The Great Daylight Saving Time Controversy.\n#\tAustralian Ebook Publisher. 2017. ISBN 978-1-925516-96-8.\n#\n#\tEdward W. Whitman, World Time Differences,\n#\tWhitman Publishing Co, 2 Niagara Av, Ealing, London (undated),\n#\twhich I found in the UCLA library.\n#\n#\tWilliam Willett, The Waste of Daylight, 19th edition\n#\t<http://cs.ucla.edu/~eggert/The-Waste-of-Daylight-19th.pdf>\n#\t[PDF] (1914-03)\n#\n# For the 1911/1912 establishment of standard time in French possessions, see:\n# Société Française de Physique, Recueil de constantes physiques (1913),\n# page 752, 18b.\n#\n# See the 'europe' file for Greenland.\n\n# Canada\n\n# From Alain LaBonté (1994-11-14):\n# I post here the time zone abbreviations standardized in Canada\n# for both English and French in the CAN/CSA-Z234.4-89 standard....\n#\n#\tUTC\tStandard time\tDaylight saving time\n#\toffset\tFrench\tEnglish\tFrench\tEnglish\n#\t-2:30\t-\t-\tHAT\tNDT\n#\t-3\t-\t-\tHAA\tADT\n#\t-3:30\tHNT\tNST\t-\t-\n#\t-4\tHNA\tAST\tHAE\tEDT\n#\t-5\tHNE\tEST\tHAC\tCDT\n#\t-6\tHNC\tCST\tHAR\tMDT\n#\t-7\tHNR\tMST\tHAP\tPDT\n#\t-8\tHNP\tPST\tHAY\tYDT\n#\t-9\tHNY\tYST\t-\t-\n#\n#\tHN: Heure Normale\tST: Standard Time\n#\tHA: Heure Avancée\tDT: Daylight saving Time\n#\n#\tA: de l'Atlantique\tAtlantic\n#\tC: du Centre\t\tCentral\n#\tE: de l'Est\t\tEastern\n#\tM:\t\t\tMountain\n#\tN:\t\t\tNewfoundland\n#\tP: du Pacifique\t\tPacific\n#\tR: des Rocheuses\n#\tT: de Terre-Neuve\n#\tY: du Yukon\t\tYukon\n#\n# From Paul Eggert (1994-11-22):\n# Alas, this sort of thing must be handled by localization software.\n\n# Unless otherwise specified, the data entries for Canada are all from Shanks\n# & Pottenger.\n\n# From Chris Walton (2006-04-01, 2006-04-25, 2006-06-26, 2007-01-31,\n# 2007-03-01):\n# The British Columbia government announced yesterday that it will\n# adjust daylight savings next year to align with changes in the\n# U.S. and the rest of Canada....\n# https://archive.news.gov.bc.ca/releases/news_releases_2005-2009/2006AG0014-000330.htm\n# ...\n# Nova Scotia\n# Daylight saving time will be extended by four weeks starting in 2007....\n# https://www.novascotia.ca/just/regulations/rg2/2006/ma1206.pdf\n#\n# [For New Brunswick] the new legislation dictates that the time change is to\n# be done at 02:00 instead of 00:01.\n# https://www.gnb.ca/0062/acts/BBA-2006/Chap-19.pdf\n# ...\n# Manitoba has traditionally changed the clock every fall at 03:00.\n# As of 2006, the transition is to take place one hour earlier at 02:00.\n# https://web2.gov.mb.ca/laws/statutes/ccsm/o030e.php\n# ...\n# [Alberta, Ontario, Quebec] will follow US rules.\n# http://www.qp.gov.ab.ca/documents/spring/CH03_06.CFM\n# http://www.e-laws.gov.on.ca/DBLaws/Source/Regs/English/2006/R06111_e.htm\n# http://www2.publicationsduquebec.gouv.qc.ca/dynamicSearch/telecharge.php?type=5&file=2006C39A.PDF\n# ...\n# P.E.I. will follow US rules....\n# http://www.assembly.pe.ca/bills/pdf_chapter/62/3/chapter-41.pdf\n# ...\n# Province of Newfoundland and Labrador....\n# http://www.hoa.gov.nl.ca/hoa/bills/Bill0634.htm\n# ...\n# Yukon\n# https://www.gov.yk.ca/legislation/regs/oic2006_127.pdf\n# ...\n# N.W.T. will follow US rules.  Whoever maintains the government web site\n# does not seem to believe in bookmarks.  To see the news release, click the\n# following link and search for \"Daylight Savings Time Change\".  Press the\n# \"Daylight Savings Time Change\" link; it will fire off a popup using\n# JavaScript.\n# http://www.exec.gov.nt.ca/currentnews/currentPR.asp?mode=archive\n# ...\n# Nunavut\n# An amendment to the Interpretation Act was registered on February 19/2007....\n# http://action.attavik.ca/home/justice-gn/attach/2007/gaz02part2.pdf\n\n# From Paul Eggert (2014-10-18):\n# H. David Matthews and Mary Vincent's map\n# \"It's about TIME\", _Canadian Geographic_ (September-October 1998)\n# https://web.archive.org/web/19990827055050/https://canadiangeographic.ca/SO98/geomap.htm\n# contains detailed boundaries for regions observing nonstandard\n# time and daylight saving time arrangements in Canada circa 1998.\n#\n# National Research Council Canada maintains info about time zones and DST.\n# https://www.nrc-cnrc.gc.ca/eng/services/time/time_zones.html\n# https://www.nrc-cnrc.gc.ca/eng/services/time/faq/index.html#Q5\n# Its unofficial information is often taken from Matthews and Vincent.\n\n# From Paul Eggert (2006-06-27):\n# For now, assume all of DST-observing Canada will fall into line with the\n# new US DST rules,\n\n# From Chris Walton (2011-12-01)\n# In the first of Tammy Hardwick's articles\n# http://www.ilovecreston.com/?p=articles&t=spec&ar=260\n# she quotes the Friday November 1/1918 edition of the Creston Review.\n# The quote includes these two statements:\n# 'Sunday the CPR went back to the old system of time...'\n# '... The daylight saving scheme was dropped all over Canada at the same time,'\n# These statements refer to a transition from daylight time to standard time\n# that occurred nationally on Sunday October 27/1918.  This transition was\n# also documented in the Saturday October 26/1918 edition of the Toronto Star.\n\n# In light of that evidence, we alter the date from the earlier believed\n# Oct 31, to Oct 27, 1918 (and Sunday is a more likely transition day\n# than Thursday) in all Canadian rulesets.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tCanada\t1918\tonly\t-\tApr\t14\t2:00\t1:00\tD\nRule\tCanada\t1918\tonly\t-\tOct\t27\t2:00\t0\tS\nRule\tCanada\t1942\tonly\t-\tFeb\t 9\t2:00\t1:00\tW # War\nRule\tCanada\t1945\tonly\t-\tAug\t14\t23:00u\t1:00\tP # Peace\nRule\tCanada\t1945\tonly\t-\tSep\t30\t2:00\t0\tS\nRule\tCanada\t1974\t1986\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule\tCanada\t1974\t2006\t-\tOct\tlastSun\t2:00\t0\tS\nRule\tCanada\t1987\t2006\t-\tApr\tSun>=1\t2:00\t1:00\tD\nRule\tCanada\t2007\tmax\t-\tMar\tSun>=8\t2:00\t1:00\tD\nRule\tCanada\t2007\tmax\t-\tNov\tSun>=1\t2:00\t0\tS\n\n\n# Newfoundland and Labrador\n\n# From Paul Eggert (2017-10-14):\n# Legally Labrador should observe Newfoundland time; see:\n# McLeod J. Labrador time - legal or not? St. John's Telegram, 2017-10-07\n# http://www.thetelegram.com/news/local/labrador-time--legal-or-not-154860/\n# Matthews and Vincent (1998) write that the only part of Labrador\n# that follows the rules is the southeast corner, including Port Hope\n# Simpson and Mary's Harbour, but excluding, say, Black Tickle.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tStJohns\t1917\tonly\t-\tApr\t 8\t2:00\t1:00\tD\nRule\tStJohns\t1917\tonly\t-\tSep\t17\t2:00\t0\tS\n# Whitman gives 1919 Apr 5 and 1920 Apr 5; go with Shanks & Pottenger.\nRule\tStJohns\t1919\tonly\t-\tMay\t 5\t23:00\t1:00\tD\nRule\tStJohns\t1919\tonly\t-\tAug\t12\t23:00\t0\tS\n# For 1931-1935 Whitman gives Apr same date; go with Shanks & Pottenger.\nRule\tStJohns\t1920\t1935\t-\tMay\tSun>=1\t23:00\t1:00\tD\nRule\tStJohns\t1920\t1935\t-\tOct\tlastSun\t23:00\t0\tS\n# For 1936-1941 Whitman gives May Sun>=8 and Oct Sun>=1; go with Shanks &\n# Pottenger.\nRule\tStJohns\t1936\t1941\t-\tMay\tMon>=9\t0:00\t1:00\tD\nRule\tStJohns\t1936\t1941\t-\tOct\tMon>=2\t0:00\t0\tS\n# Whitman gives the following transitions:\n# 1942 03-01/12-31, 1943 05-30/09-05, 1944 07-10/09-02, 1945 01-01/10-07\n# but go with Shanks & Pottenger and assume they used Canadian rules.\n# For 1946-9 Whitman gives May 5,4,9,1 - Oct 1,5,3,2, and for 1950 he gives\n# Apr 30 - Sep 24; go with Shanks & Pottenger.\nRule\tStJohns\t1946\t1950\t-\tMay\tSun>=8\t2:00\t1:00\tD\nRule\tStJohns\t1946\t1950\t-\tOct\tSun>=2\t2:00\t0\tS\nRule\tStJohns\t1951\t1986\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule\tStJohns\t1951\t1959\t-\tSep\tlastSun\t2:00\t0\tS\nRule\tStJohns\t1960\t1986\t-\tOct\tlastSun\t2:00\t0\tS\n# From Paul Eggert (2000-10-02):\n# INMS (2000-09-12) says that, since 1988 at least, Newfoundland switches\n# at 00:01 local time.  For now, assume it started in 1987.\n\n# From Michael Pelley (2011-09-12):\n# We received today, Monday, September 12, 2011, notification that the\n# changes to the Newfoundland Standard Time Act have been proclaimed.\n# The change in the Act stipulates that the change from Daylight Savings\n# Time to Standard Time and from Standard Time to Daylight Savings Time\n# now occurs at 2:00AM.\n# ...\n# http://www.assembly.nl.ca/legislation/sr/annualstatutes/2011/1106.chp.htm\n# ...\n# MICHAEL PELLEY  |  Manager of Enterprise Architecture - Solution Delivery\n# Office of the Chief Information Officer\n# Executive Council\n# Government of Newfoundland & Labrador\n\nRule\tStJohns\t1987\tonly\t-\tApr\tSun>=1\t0:01\t1:00\tD\nRule\tStJohns\t1987\t2006\t-\tOct\tlastSun\t0:01\t0\tS\nRule\tStJohns\t1988\tonly\t-\tApr\tSun>=1\t0:01\t2:00\tDD\nRule\tStJohns\t1989\t2006\t-\tApr\tSun>=1\t0:01\t1:00\tD\nRule\tStJohns\t2007\t2011\t-\tMar\tSun>=8\t0:01\t1:00\tD\nRule\tStJohns\t2007\t2010\t-\tNov\tSun>=1\t0:01\t0\tS\n#\n# St John's has an apostrophe, but POSIX file names can't have apostrophes.\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/St_Johns\t-3:30:52 -\tLMT\t1884\n\t\t\t-3:30:52 StJohns N%sT\t1918\n\t\t\t-3:30:52 Canada\tN%sT\t1919\n\t\t\t-3:30:52 StJohns N%sT\t1935 Mar 30\n\t\t\t-3:30\tStJohns\tN%sT\t1942 May 11\n\t\t\t-3:30\tCanada\tN%sT\t1946\n\t\t\t-3:30\tStJohns\tN%sT\t2011 Nov\n\t\t\t-3:30\tCanada\tN%sT\n\n# most of east Labrador\n\n# The name 'Happy Valley-Goose Bay' is too long; use 'Goose Bay'.\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Goose_Bay\t-4:01:40 -\tLMT\t1884 # Happy Valley-Goose Bay\n\t\t\t-3:30:52 -\tNST\t1918\n\t\t\t-3:30:52 Canada N%sT\t1919\n\t\t\t-3:30:52 -\tNST\t1935 Mar 30\n\t\t\t-3:30\t-\tNST\t1936\n\t\t\t-3:30\tStJohns\tN%sT\t1942 May 11\n\t\t\t-3:30\tCanada\tN%sT\t1946\n\t\t\t-3:30\tStJohns\tN%sT\t1966 Mar 15  2:00\n\t\t\t-4:00\tStJohns\tA%sT\t2011 Nov\n\t\t\t-4:00\tCanada\tA%sT\n\n\n# west Labrador, Nova Scotia, Prince Edward I,\n# Îles-de-la-Madeleine, Listuguj reserve\n\n# From Brian Inglis (2015-07-20):\n# From the historical weather station records available at:\n# https://weatherspark.com/history/28351/1971/Sydney-Nova-Scotia-Canada\n# Sydney shares the same time history as Glace Bay, so was\n# likely to be the same across the island....\n# Sydney, as the capital and most populous location, or Cape Breton, would\n# have been better names for the zone had we known this in 1996.\n\n# From Paul Eggert (2015-07-20):\n# Shanks & Pottenger write that since 1970 most of this region has been like\n# Halifax.  Many locales did not observe peacetime DST until 1972;\n# the Cape Breton area, represented by Glace Bay, is the largest we know of\n# (Glace Bay was perhaps not the best name choice but no point changing now).\n# Shanks & Pottenger also write that Liverpool, NS was the only town\n# in Canada to observe DST in 1971 but not 1970; for now we'll assume\n# this is a typo.\n\n# From Jeffery Nichols (2020-01-09):\n# America/Halifax ... also applies to Îles-de-la-Madeleine and the Listuguj\n# reserve in Quebec. Officially, this came into effect on January 1, 2007\n# (Legal Time Act, CQLR c T-5.1), but the legislative debates surrounding that\n# bill say that it is \"accommodating the customs and practices\" of those\n# regions, which suggests that they have always been in-line with Halifax.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tHalifax\t1916\tonly\t-\tApr\t 1\t0:00\t1:00\tD\nRule\tHalifax\t1916\tonly\t-\tOct\t 1\t0:00\t0\tS\nRule\tHalifax\t1920\tonly\t-\tMay\t 9\t0:00\t1:00\tD\nRule\tHalifax\t1920\tonly\t-\tAug\t29\t0:00\t0\tS\nRule\tHalifax\t1921\tonly\t-\tMay\t 6\t0:00\t1:00\tD\nRule\tHalifax\t1921\t1922\t-\tSep\t 5\t0:00\t0\tS\nRule\tHalifax\t1922\tonly\t-\tApr\t30\t0:00\t1:00\tD\nRule\tHalifax\t1923\t1925\t-\tMay\tSun>=1\t0:00\t1:00\tD\nRule\tHalifax\t1923\tonly\t-\tSep\t 4\t0:00\t0\tS\nRule\tHalifax\t1924\tonly\t-\tSep\t15\t0:00\t0\tS\nRule\tHalifax\t1925\tonly\t-\tSep\t28\t0:00\t0\tS\nRule\tHalifax\t1926\tonly\t-\tMay\t16\t0:00\t1:00\tD\nRule\tHalifax\t1926\tonly\t-\tSep\t13\t0:00\t0\tS\nRule\tHalifax\t1927\tonly\t-\tMay\t 1\t0:00\t1:00\tD\nRule\tHalifax\t1927\tonly\t-\tSep\t26\t0:00\t0\tS\nRule\tHalifax\t1928\t1931\t-\tMay\tSun>=8\t0:00\t1:00\tD\nRule\tHalifax\t1928\tonly\t-\tSep\t 9\t0:00\t0\tS\nRule\tHalifax\t1929\tonly\t-\tSep\t 3\t0:00\t0\tS\nRule\tHalifax\t1930\tonly\t-\tSep\t15\t0:00\t0\tS\nRule\tHalifax\t1931\t1932\t-\tSep\tMon>=24\t0:00\t0\tS\nRule\tHalifax\t1932\tonly\t-\tMay\t 1\t0:00\t1:00\tD\nRule\tHalifax\t1933\tonly\t-\tApr\t30\t0:00\t1:00\tD\nRule\tHalifax\t1933\tonly\t-\tOct\t 2\t0:00\t0\tS\nRule\tHalifax\t1934\tonly\t-\tMay\t20\t0:00\t1:00\tD\nRule\tHalifax\t1934\tonly\t-\tSep\t16\t0:00\t0\tS\nRule\tHalifax\t1935\tonly\t-\tJun\t 2\t0:00\t1:00\tD\nRule\tHalifax\t1935\tonly\t-\tSep\t30\t0:00\t0\tS\nRule\tHalifax\t1936\tonly\t-\tJun\t 1\t0:00\t1:00\tD\nRule\tHalifax\t1936\tonly\t-\tSep\t14\t0:00\t0\tS\nRule\tHalifax\t1937\t1938\t-\tMay\tSun>=1\t0:00\t1:00\tD\nRule\tHalifax\t1937\t1941\t-\tSep\tMon>=24\t0:00\t0\tS\nRule\tHalifax\t1939\tonly\t-\tMay\t28\t0:00\t1:00\tD\nRule\tHalifax\t1940\t1941\t-\tMay\tSun>=1\t0:00\t1:00\tD\nRule\tHalifax\t1946\t1949\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule\tHalifax\t1946\t1949\t-\tSep\tlastSun\t2:00\t0\tS\nRule\tHalifax\t1951\t1954\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule\tHalifax\t1951\t1954\t-\tSep\tlastSun\t2:00\t0\tS\nRule\tHalifax\t1956\t1959\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule\tHalifax\t1956\t1959\t-\tSep\tlastSun\t2:00\t0\tS\nRule\tHalifax\t1962\t1973\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule\tHalifax\t1962\t1973\t-\tOct\tlastSun\t2:00\t0\tS\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Halifax\t-4:14:24 -\tLMT\t1902 Jun 15\n\t\t\t-4:00\tHalifax\tA%sT\t1918\n\t\t\t-4:00\tCanada\tA%sT\t1919\n\t\t\t-4:00\tHalifax\tA%sT\t1942 Feb  9  2:00s\n\t\t\t-4:00\tCanada\tA%sT\t1946\n\t\t\t-4:00\tHalifax\tA%sT\t1974\n\t\t\t-4:00\tCanada\tA%sT\nZone America/Glace_Bay\t-3:59:48 -\tLMT\t1902 Jun 15\n\t\t\t-4:00\tCanada\tA%sT\t1953\n\t\t\t-4:00\tHalifax\tA%sT\t1954\n\t\t\t-4:00\t-\tAST\t1972\n\t\t\t-4:00\tHalifax\tA%sT\t1974\n\t\t\t-4:00\tCanada\tA%sT\n\n# New Brunswick\n\n# From Paul Eggert (2007-01-31):\n# The Time Definition Act <http://www.gnb.ca/0062/PDF-acts/t-06.pdf>\n# says they changed at 00:01 through 2006, and\n# <http://www.canlii.org/nb/laws/sta/t-6/20030127/whole.html> makes it\n# clear that this was the case since at least 1993.\n# For now, assume it started in 1993.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tMoncton\t1933\t1935\t-\tJun\tSun>=8\t1:00\t1:00\tD\nRule\tMoncton\t1933\t1935\t-\tSep\tSun>=8\t1:00\t0\tS\nRule\tMoncton\t1936\t1938\t-\tJun\tSun>=1\t1:00\t1:00\tD\nRule\tMoncton\t1936\t1938\t-\tSep\tSun>=1\t1:00\t0\tS\nRule\tMoncton\t1939\tonly\t-\tMay\t27\t1:00\t1:00\tD\nRule\tMoncton\t1939\t1941\t-\tSep\tSat>=21\t1:00\t0\tS\nRule\tMoncton\t1940\tonly\t-\tMay\t19\t1:00\t1:00\tD\nRule\tMoncton\t1941\tonly\t-\tMay\t 4\t1:00\t1:00\tD\nRule\tMoncton\t1946\t1972\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule\tMoncton\t1946\t1956\t-\tSep\tlastSun\t2:00\t0\tS\nRule\tMoncton\t1957\t1972\t-\tOct\tlastSun\t2:00\t0\tS\nRule\tMoncton\t1993\t2006\t-\tApr\tSun>=1\t0:01\t1:00\tD\nRule\tMoncton\t1993\t2006\t-\tOct\tlastSun\t0:01\t0\tS\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Moncton\t-4:19:08 -\tLMT\t1883 Dec  9\n\t\t\t-5:00\t-\tEST\t1902 Jun 15\n\t\t\t-4:00\tCanada\tA%sT\t1933\n\t\t\t-4:00\tMoncton\tA%sT\t1942\n\t\t\t-4:00\tCanada\tA%sT\t1946\n\t\t\t-4:00\tMoncton\tA%sT\t1973\n\t\t\t-4:00\tCanada\tA%sT\t1993\n\t\t\t-4:00\tMoncton\tA%sT\t2007\n\t\t\t-4:00\tCanada\tA%sT\n\n# Quebec\n\n# From Paul Eggert (2020-01-10):\n# See America/Toronto for most of Quebec, including Montreal.\n# See America/Halifax for the Îles de la Madeleine and the Listuguj reserve.\n# See America/Puerto_Rico for east of Natashquan.\n\n# Ontario\n\n# From Mark Brader (2003-07-26):\n# [According to the Toronto Star] Orillia, Ontario, adopted DST\n# effective Saturday, 1912-06-22, 22:00; the article mentions that\n# Port Arthur (now part of Thunder Bay, Ontario) as well as Moose Jaw\n# have already done so.  In Orillia DST was to run until Saturday,\n# 1912-08-31 (no time mentioned), but it was met with considerable\n# hostility from certain segments of the public, and was revoked after\n# only two weeks - I copied it as Saturday, 1912-07-07, 22:00, but\n# presumably that should be -07-06.  (1912-06-19, -07-12; also letters\n# earlier in June).\n#\n# Kenora, Ontario, was to abandon DST on 1914-06-01 (-05-21).\n#\n# From Paul Eggert (2017-07-08):\n# For more on Orillia, see: Daubs K. Bold attempt at daylight saving\n# time became a comic failure in Orillia. Toronto Star 2017-07-08.\n# https://www.thestar.com/news/insight/2017/07/08/bold-attempt-at-daylight-saving-time-became-a-comic-failure-in-orillia.html\n\n# From Mark Brader (2010-03-06):\n#\n# In the (Toronto) Globe and Mail for Saturday, 1955-09-24, in the bottom\n# right corner of page 1, it says that Toronto will return to standard\n# time at 2 am Sunday morning (which agrees with the database), and that:\n#\n#     The one-hour setback will go into effect throughout most of Ontario,\n#     except in areas like Windsor which remains on standard time all year.\n#\n# ... I don't know if Windsor began observing DST when Detroit did,\n# or in 1974, or on some other date.\n#\n# By the way, the article continues by noting that:\n#\n#     Some cities in the United States have pushed the deadline back\n#     three weeks and will change over from daylight saving in October.\n\n# From Chris Walton (2024-01-09):\n# The [Toronto] changes in 1947, 1948, and 1949 took place at 2:00 a.m. local\n# time instead of midnight....  Toronto Daily Star - ...\n# April 2, 1947 - Page 39 ... April 7, 1948 - Page 13 ...\n# April 2, 1949 - Page 1 ... April 7, 1949 - Page 24 ...\n# November 25, 1949 - Page 52 ... April 21, 1950 - Page 14 ...\n# September 19, 1950 - Page 46 ... September 20, 1950 - Page 3 ...\n# November 24, 1950 - Page 21\n\n# From Arthur David Olson (2010-07-17):\n#\n# \"Standard Time and Time Zones in Canada\" appeared in\n# The Journal of The Royal Astronomical Society of Canada,\n# volume 26, number 2 (February 1932) and, as of 2010-07-17,\n# was available at\n# http://adsabs.harvard.edu/full/1932JRASC..26...49S\n#\n# It includes the text below (starting on page 57):\n#\n#   A list of the places in Canada using daylight saving time would\n# require yearly revision. From information kindly furnished by\n# the provincial governments and by the postmasters in many cities\n# and towns, it is found that the following places used daylight sav-\n# ing in 1930. The information for the province of Quebec is definite,\n# for the other provinces only approximate:\n#\n#\tProvince\tDaylight saving time used\n# Prince Edward Island\tNot used.\n# Nova Scotia\t\tIn Halifax only.\n# New Brunswick\t\tIn St. John only.\n# Quebec\t\tIn the following places:\n#\t\t\tMontreal\tLachine\n#\t\t\tQuebec\t\tMont-Royal\n#\t\t\tLévis\t\tIberville\n#\t\t\tSt. Lambert\tCap de la Madelèine\n#\t\t\tVerdun\t\tLoretteville\n#\t\t\tWestmount\tRichmond\n#\t\t\tOutremont\tSt. Jérôme\n#\t\t\tLongueuil\tGreenfield Park\n#\t\t\tArvida\t\tWaterloo\n#\t\t\tChambly-Canton\tBeaulieu\n#\t\t\tMelbourne\tLa Tuque\n#\t\t\tSt. Théophile\tBuckingham\n# Ontario\t\tUsed generally in the cities and towns along\n#\t\t\tthe southerly part of the province. Not\n#\t\t\tused in the northwesterly part.\n# Manitoba\t\tNot used.\n# Saskatchewan\t\tIn Regina only.\n# Alberta\t\tNot used.\n# British Columbia\tNot used.\n#\n#   With some exceptions, the use of daylight saving may be said to be limited\n# to those cities and towns lying between Quebec city and Windsor, Ont.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tToronto\t1919\tonly\t-\tMar\t30\t23:30\t1:00\tD\nRule\tToronto\t1919\tonly\t-\tOct\t26\t0:00\t0\tS\nRule\tToronto\t1920\tonly\t-\tMay\t 2\t2:00\t1:00\tD\nRule\tToronto\t1920\tonly\t-\tSep\t26\t0:00\t0\tS\nRule\tToronto\t1921\tonly\t-\tMay\t15\t2:00\t1:00\tD\nRule\tToronto\t1921\tonly\t-\tSep\t15\t2:00\t0\tS\nRule\tToronto\t1922\t1923\t-\tMay\tSun>=8\t2:00\t1:00\tD\n# Shanks & Pottenger say 1923-09-19; assume it's a typo and that \"-16\"\n# was meant.\nRule\tToronto\t1922\t1926\t-\tSep\tSun>=15\t2:00\t0\tS\nRule\tToronto\t1924\t1927\t-\tMay\tSun>=1\t2:00\t1:00\tD\nRule\tToronto\t1927\t1937\t-\tSep\tSun>=25\t2:00\t0\tS\nRule\tToronto\t1928\t1937\t-\tApr\tSun>=25\t2:00\t1:00\tD\nRule\tToronto\t1938\t1940\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule\tToronto\t1938\t1939\t-\tSep\tlastSun\t2:00\t0\tS\nRule\tToronto\t1945\t1948\t-\tSep\tlastSun\t2:00\t0\tS\nRule\tToronto\t1946\t1973\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule\tToronto\t1949\t1950\t-\tNov\tlastSun\t2:00\t0\tS\nRule\tToronto\t1951\t1956\t-\tSep\tlastSun\t2:00\t0\tS\n# Shanks & Pottenger say Toronto ended DST a week early in 1971,\n# namely on 1971-10-24, but Mark Brader wrote (2003-05-31) that this\n# is wrong, and that he had confirmed it by checking the 1971-10-30\n# Toronto Star, which said that DST was ending 1971-10-31 as usual.\nRule\tToronto\t1957\t1973\t-\tOct\tlastSun\t2:00\t0\tS\n\n# The Bahamas match Toronto since 1970.\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Toronto\t-5:17:32 -\tLMT\t1895\n\t\t\t-5:00\tCanada\tE%sT\t1919\n\t\t\t-5:00\tToronto\tE%sT\t1942 Feb  9  2:00s\n\t\t\t-5:00\tCanada\tE%sT\t1946\n\t\t\t-5:00\tToronto\tE%sT\t1974\n\t\t\t-5:00\tCanada\tE%sT\n# For Atikokan see America/Panama.\n\n\n# Manitoba\n\n# From Rob Douglas (2006-04-06):\n# the old Manitoba Time Act - as amended by Bill 2, assented to\n# March 27, 1987 ... said ...\n# \"between two o'clock Central Standard Time in the morning of\n# the first Sunday of April of each year and two o'clock Central\n# Standard Time in the morning of the last Sunday of October next\n# following, one hour in advance of Central Standard Time.\"...\n# I believe that the English legislation [of the old time act] had\n# been assented to (March 22, 1967)....\n# Also, as far as I can tell, there was no order-in-council varying\n# the time of Daylight Saving Time for 2005 and so the provisions of\n# the 1987 version would apply - the changeover was at 2:00 Central\n# Standard Time (i.e. not until 3:00 Central Daylight Time).\n\n# From Paul Eggert (2006-04-10):\n# Shanks & Pottenger say Manitoba switched at 02:00 (not 02:00s)\n# starting 1966.  Since 02:00s is clearly correct for 1967 on, assume\n# it was also 02:00s in 1966.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tWinn\t1916\tonly\t-\tApr\t23\t0:00\t1:00\tD\nRule\tWinn\t1916\tonly\t-\tSep\t17\t0:00\t0\tS\nRule\tWinn\t1918\tonly\t-\tApr\t14\t2:00\t1:00\tD\nRule\tWinn\t1918\tonly\t-\tOct\t27\t2:00\t0\tS\nRule\tWinn\t1937\tonly\t-\tMay\t16\t2:00\t1:00\tD\nRule\tWinn\t1937\tonly\t-\tSep\t26\t2:00\t0\tS\nRule\tWinn\t1942\tonly\t-\tFeb\t 9\t2:00\t1:00\tW # War\nRule\tWinn\t1945\tonly\t-\tAug\t14\t23:00u\t1:00\tP # Peace\nRule\tWinn\t1945\tonly\t-\tSep\tlastSun\t2:00\t0\tS\nRule\tWinn\t1946\tonly\t-\tMay\t12\t2:00\t1:00\tD\nRule\tWinn\t1946\tonly\t-\tOct\t13\t2:00\t0\tS\nRule\tWinn\t1947\t1949\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule\tWinn\t1947\t1949\t-\tSep\tlastSun\t2:00\t0\tS\nRule\tWinn\t1950\tonly\t-\tMay\t 1\t2:00\t1:00\tD\nRule\tWinn\t1950\tonly\t-\tSep\t30\t2:00\t0\tS\nRule\tWinn\t1951\t1960\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule\tWinn\t1951\t1958\t-\tSep\tlastSun\t2:00\t0\tS\nRule\tWinn\t1959\tonly\t-\tOct\tlastSun\t2:00\t0\tS\nRule\tWinn\t1960\tonly\t-\tSep\tlastSun\t2:00\t0\tS\nRule\tWinn\t1963\tonly\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule\tWinn\t1963\tonly\t-\tSep\t22\t2:00\t0\tS\nRule\tWinn\t1966\t1986\t-\tApr\tlastSun\t2:00s\t1:00\tD\nRule\tWinn\t1966\t2005\t-\tOct\tlastSun\t2:00s\t0\tS\nRule\tWinn\t1987\t2005\t-\tApr\tSun>=1\t2:00s\t1:00\tD\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Winnipeg\t-6:28:36 -\tLMT\t1887 Jul 16\n\t\t\t-6:00\tWinn\tC%sT\t2006\n\t\t\t-6:00\tCanada\tC%sT\n\n\n# Saskatchewan\n\n# From Mark Brader (2003-07-26):\n# The first actual adoption of DST in Canada was at the municipal\n# level.  As the [Toronto] Star put it (1912-06-07), \"While people\n# elsewhere have long been talking of legislation to save daylight,\n# the city of Moose Jaw [Saskatchewan] has acted on its own hook.\"\n# DST in Moose Jaw began on Saturday, 1912-06-01 (no time mentioned:\n# presumably late evening, as below), and would run until \"the end of\n# the summer\".  The discrepancy between municipal time and railroad\n# time was noted.\n\n# From Paul Eggert (2003-07-27):\n# Willett (1914-03) notes that DST \"has been in operation ... in the\n# City of Moose Jaw, Saskatchewan, for one year.\"\n\n# From Paul Eggert (2019-07-25):\n# Pearce's book says Regina observed DST in 1914-1917.  No dates and times,\n# unfortunately.  It also says that in 1914 Saskatoon observed DST\n# from 1 June to 6 July, and that DST was also tried out in Davidson,\n# Melfort, and Prince Albert.\n\n# From Paul Eggert (2006-03-22):\n# Shanks & Pottenger say that since 1970 this region has mostly been as Regina.\n# Some western towns (e.g. Swift Current) switched from MST/MDT to CST in 1972.\n# Other western towns (e.g. Lloydminster) are like Edmonton.\n# Matthews and Vincent (1998) write that Denare Beach and Creighton\n# are like Winnipeg, in violation of Saskatchewan law.\n\n# From W. Jones (1992-11-06):\n# The. . .below is based on information I got from our law library, the\n# provincial archives, and the provincial Community Services department.\n# A precise history would require digging through newspaper archives, and\n# since you didn't say what you wanted, I didn't bother.\n#\n# Saskatchewan is split by a time zone meridian (105W) and over the years\n# the boundary became pretty ragged as communities near it reevaluated\n# their affiliations in one direction or the other.  In 1965 a provincial\n# referendum favoured legislating common time practices.\n#\n# On 15 April 1966 the Time Act (c. T-14, Revised Statutes of\n# Saskatchewan 1978) was proclaimed, and established that the eastern\n# part of Saskatchewan would use CST year round, that districts in\n# northwest Saskatchewan would by default follow CST but could opt to\n# follow Mountain Time rules (thus 1 hour difference in the winter and\n# zero in the summer), and that districts in southwest Saskatchewan would\n# by default follow MT but could opt to follow CST.\n#\n# It took a few years for the dust to settle (I know one story of a town\n# on one time zone having its school in another, such that a mom had to\n# serve her family lunch in two shifts), but presently it seems that only\n# a few towns on the border with Alberta (e.g. Lloydminster) follow MT\n# rules any more; all other districts appear to have used CST year round\n# since sometime in the 1960s.\n\n# From Chris Walton (2006-06-26):\n# The Saskatchewan time act which was last updated in 1996 is about 30 pages\n# long and rather painful to read.\n# http://www.qp.gov.sk.ca/documents/English/Statutes/Statutes/T14.pdf\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tRegina\t1918\tonly\t-\tApr\t14\t2:00\t1:00\tD\nRule\tRegina\t1918\tonly\t-\tOct\t27\t2:00\t0\tS\nRule\tRegina\t1930\t1934\t-\tMay\tSun>=1\t0:00\t1:00\tD\nRule\tRegina\t1930\t1934\t-\tOct\tSun>=1\t0:00\t0\tS\nRule\tRegina\t1937\t1941\t-\tApr\tSun>=8\t0:00\t1:00\tD\nRule\tRegina\t1937\tonly\t-\tOct\tSun>=8\t0:00\t0\tS\nRule\tRegina\t1938\tonly\t-\tOct\tSun>=1\t0:00\t0\tS\nRule\tRegina\t1939\t1941\t-\tOct\tSun>=8\t0:00\t0\tS\nRule\tRegina\t1942\tonly\t-\tFeb\t 9\t2:00\t1:00\tW # War\nRule\tRegina\t1945\tonly\t-\tAug\t14\t23:00u\t1:00\tP # Peace\nRule\tRegina\t1945\tonly\t-\tSep\tlastSun\t2:00\t0\tS\nRule\tRegina\t1946\tonly\t-\tApr\tSun>=8\t2:00\t1:00\tD\nRule\tRegina\t1946\tonly\t-\tOct\tSun>=8\t2:00\t0\tS\nRule\tRegina\t1947\t1957\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule\tRegina\t1947\t1957\t-\tSep\tlastSun\t2:00\t0\tS\nRule\tRegina\t1959\tonly\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule\tRegina\t1959\tonly\t-\tOct\tlastSun\t2:00\t0\tS\n#\nRule\tSwift\t1957\tonly\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule\tSwift\t1957\tonly\t-\tOct\tlastSun\t2:00\t0\tS\nRule\tSwift\t1959\t1961\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule\tSwift\t1959\tonly\t-\tOct\tlastSun\t2:00\t0\tS\nRule\tSwift\t1960\t1961\t-\tSep\tlastSun\t2:00\t0\tS\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Regina\t-6:58:36 -\tLMT\t1905 Sep\n\t\t\t-7:00\tRegina\tM%sT\t1960 Apr lastSun  2:00\n\t\t\t-6:00\t-\tCST\nZone America/Swift_Current -7:11:20 -\tLMT\t1905 Sep\n\t\t\t-7:00\tCanada\tM%sT\t1946 Apr lastSun  2:00\n\t\t\t-7:00\tRegina\tM%sT\t1950\n\t\t\t-7:00\tSwift\tM%sT\t1972 Apr lastSun  2:00\n\t\t\t-6:00\t-\tCST\n\n\n# Alberta\n\n# From Alois Treindl (2019-07-19):\n# There was no DST in Alberta in 1967... Calgary Herald, 29 April 1967.\n# 1969, no DST, from Edmonton Journal 18 April 1969\n#\n# From Paul Eggert (2019-07-25):\n# Pearce's book says that Alberta's 1948 Daylight Saving Act required\n# Mountain Standard Time without DST, and that \"anyone who broke that law\n# could be fined up to $25 and costs\".  There seems to be no record of\n# anybody paying the fine.  The law was not changed until an August 1971\n# plebiscite reinstituted DST in 1972.  This story is also mentioned in:\n# Boyer JP. Forcing Choice: The Risky Reward of Referendums. Dundum. 2017.\n# ISBN 978-1459739123.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tEdm\t1918\t1919\t-\tApr\tSun>=8\t2:00\t1:00\tD\nRule\tEdm\t1918\tonly\t-\tOct\t27\t2:00\t0\tS\nRule\tEdm\t1919\tonly\t-\tMay\t27\t2:00\t0\tS\nRule\tEdm\t1920\t1923\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule\tEdm\t1920\tonly\t-\tOct\tlastSun\t2:00\t0\tS\nRule\tEdm\t1921\t1923\t-\tSep\tlastSun\t2:00\t0\tS\nRule\tEdm\t1942\tonly\t-\tFeb\t 9\t2:00\t1:00\tW # War\nRule\tEdm\t1945\tonly\t-\tAug\t14\t23:00u\t1:00\tP # Peace\nRule\tEdm\t1945\tonly\t-\tSep\tlastSun\t2:00\t0\tS\nRule\tEdm\t1947\tonly\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule\tEdm\t1947\tonly\t-\tSep\tlastSun\t2:00\t0\tS\nRule\tEdm\t1972\t1986\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule\tEdm\t1972\t2006\t-\tOct\tlastSun\t2:00\t0\tS\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Edmonton\t-7:33:52 -\tLMT\t1906 Sep\n\t\t\t-7:00\tEdm\tM%sT\t1987\n\t\t\t-7:00\tCanada\tM%sT\n\n\n# British Columbia\n\n# From Paul Eggert (2006-03-22):\n# Shanks & Pottenger write that since 1970 most of this region has\n# been like Vancouver.\n# Dawson Creek uses MST.  Much of east BC is like Edmonton.\n\n# From Matt Johnson (2015-09-21):\n# Fort Nelson, BC, Canada will cancel DST this year.  So while previously they\n# were aligned with America/Vancouver, they're now aligned with\n# America/Dawson_Creek.\n# http://www.northernrockies.ca/EN/meta/news/archives/2015/northern-rockies-time-change.html\n#\n# From Tim Parenti (2015-09-23):\n# This requires a new zone for the Northern Rockies Regional Municipality,\n# America/Fort_Nelson.  The resolution of 2014-12-08 was reached following a\n# 2014-11-15 poll with nearly 75% support.  Effectively, the municipality has\n# been on MST (-0700) like Dawson Creek since it advanced its clocks on\n# 2015-03-08.\n#\n# From Paul Eggert (2019-07-25):\n# Shanks says Fort Nelson did not observe DST in 1946, unlike Vancouver.\n# Alois Treindl confirmed this on 07-22, citing the 1946-04-27 Vancouver Daily\n# Province.  He also cited the 1946-09-28 Victoria Daily Times, which said\n# that Vancouver, Victoria, etc. \"change at midnight Saturday\"; for now,\n# guess they meant 02:00 Sunday since 02:00 was common practice in Vancouver.\n#\n# Early Vancouver, Volume Four, by Major J.S. Matthews, V.D., 2011 edition\n# says that a 1922 plebiscite adopted DST, but a 1923 plebiscite rejected it.\n# http://former.vancouver.ca/ctyclerk/archives/digitized/EarlyVan/SearchEarlyVan/Vol4pdf/MatthewsEarlyVancouverVol4_DaylightSavings.pdf\n# A catalog entry for a newspaper clipping seems to indicate that Vancouver\n# observed DST in 1941 from 07-07 through 09-27; see\n# https://searcharchives.vancouver.ca/daylight-saving-1918-starts-again-july-7-1941-start-d-s-sept-27-end-of-d-s-1941\n# We have no further details, so omit them for now.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tVanc\t1918\tonly\t-\tApr\t14\t2:00\t1:00\tD\nRule\tVanc\t1918\tonly\t-\tOct\t27\t2:00\t0\tS\nRule\tVanc\t1942\tonly\t-\tFeb\t 9\t2:00\t1:00\tW # War\nRule\tVanc\t1945\tonly\t-\tAug\t14\t23:00u\t1:00\tP # Peace\nRule\tVanc\t1945\tonly\t-\tSep\t30\t2:00\t0\tS\nRule\tVanc\t1946\t1986\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule\tVanc\t1946\tonly\t-\tSep\t29\t2:00\t0\tS\nRule\tVanc\t1947\t1961\t-\tSep\tlastSun\t2:00\t0\tS\nRule\tVanc\t1962\t2006\t-\tOct\tlastSun\t2:00\t0\tS\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Vancouver\t-8:12:28 -\tLMT\t1884\n\t\t\t-8:00\tVanc\tP%sT\t1987\n\t\t\t-8:00\tCanada\tP%sT\nZone America/Dawson_Creek -8:00:56 -\tLMT\t1884\n\t\t\t-8:00\tCanada\tP%sT\t1947\n\t\t\t-8:00\tVanc\tP%sT\t1972 Aug 30  2:00\n\t\t\t-7:00\t-\tMST\nZone America/Fort_Nelson\t-8:10:47 -\tLMT\t1884\n\t\t\t-8:00\tVanc\tP%sT\t1946\n\t\t\t-8:00\t-\tPST\t1947\n\t\t\t-8:00\tVanc\tP%sT\t1987\n\t\t\t-8:00\tCanada\tP%sT\t2015 Mar  8  2:00\n\t\t\t-7:00\t-\tMST\n# For Creston see America/Phoenix.\n\n# Northwest Territories, Nunavut, Yukon\n\n# From Chris Walton (2022-11-06):\n# Whitehorse Star - Thursday April 22, 1965 - page 1\n# title: DST Starts Monday ...\n# https://www.newspapers.com/image/578587481/\n# The title of this first article is wrong and/or misleading.\n# Also, the start time shown in the  article is vague; it simply says \"after\n# midnight\" when it probably should have stated 2:00a.m....\n#\n# Whitehorse Star - Monday October 25, 1965 - page 15 ...\n# https://www.newspapers.com/image/578589147/\n# The 1965 Yukon Council minutes can be found here:\n# http://assets.yukonarchives.ca/PER_YG_06_1965_C20_S02_v1.pdf\n# ... I do not currently believe that NWT touched any of its clocks in 1965....\n#\n# Whitehorse Star - Thursday Feb 24,1966 - page 2\n# title: It's Time for YDT ...\n# https://www.newspapers.com/image/578575979/ ...\n# America/Whitehorse as a permanent change from UTC-9(YST) to\n# UTC-8(PST) at 00:00 on Sunday February 27, 1966....\n#\n# Whitehorse Star - Friday April 28,1972 - page 6\n# title: Daylight Saving Time for N.W.T....\n# https://www.newspapers.com/image/578701610/ ...\n# Nunavut and NWT zones ... DST starting in 1972.... Start and End ...\n# should be the same as the rest of Canada\n#\n#\n# From Paul Eggert (2022-11-06):\n# For now, assume Yukon's 1965-04-22 spring forward was 00:00 -> 02:00, as this\n# seems likely than 02:00 -> 04:00 and matches \"after midnight\".\n\n# From Paul Eggert (2006-03-22):\n# Dawson switched to PST in 1973.  Inuvik switched to MST in 1979.\n# Mathew Englander (1996-10-07) gives the following refs:\n#\t* 1967. Paragraph 28(34)(g) of the Interpretation Act, S.C. 1967-68,\n#\tc. 7 defines Yukon standard time as UTC-9....\n#\tsee Interpretation Act, R.S.C. 1985, c. I-21, s. 35(1).\n#\t[https://www.canlii.org/en/ca/laws/stat/rsc-1985-c-i-21/latest/rsc-1985-c-i-21.html]\n#\t* C.O. 1973/214 switched Yukon to PST on 1973-10-28 00:00.\n#\t* O.I.C. 1980/02 established DST.\n#\t* O.I.C. 1987/056 changed DST to Apr firstSun 2:00 to Oct lastSun 2:00.\n\n# From Brian Inglis (2015-04-14):\n#\n# I tried to trace the history of Yukon time and found the following\n# regulations, giving the reference title and URL if found, regulation name,\n# and relevant quote if available.  Each regulation specifically revokes its\n# predecessor.  The final reference is to the current Interpretation Act\n# authorizing and resulting from these regulatory changes.\n#\n# Only recent regulations were retrievable via Yukon government site search or\n# index, and only some via Canadian legal sources.  Other sources used include\n# articles titled \"Standard Time and Time Zones in Canada\" from JRASC via ADS\n# Abstracts, cited by ADO for 1932 ..., and updated versions from 1958 and\n# 1970 quoted below; each article includes current extracts from provincial\n# and territorial ST and DST regulations at the end, summaries and details of\n# standard times and daylight saving time at many locations across Canada,\n# with time zone maps, tables and calculations for Canadian Sunrise, Sunset,\n# and LMST; they also cover many countries and global locations, with a chart\n# and table showing current Universal Time offsets, and may be useful as\n# another source of information for 1970 and earlier.\n#\n# * Standard Time and Time Zones in Canada; Smith, C.C.; JRASC, Vol. 26,\n#   pp.49-77; February 1932; SAO/NASA Astrophysics Data System (ADS)\n#   http://adsabs.harvard.edu/abs/1932JRASC..26...49S from p.75:\n#   Yukon Interpretation Ordinance\n#   Yukon standard time is the local mean time at the one hundred and\n#   thirty-fifth meridian.\n#\n# * Standard Time and Time Zones in Canada; Smith, C.C.; Thomson, Malcolm M.;\n#   JRASC, Vol. 52, pp.193-223; October 1958; SAO/NASA Astrophysics Data System\n#   (ADS) http://adsabs.harvard.edu/abs/1958JRASC..52..193S from pp.220-1:\n#   Yukon Interpretation Ordinance, 1955, Chap. 16.\n#\n#     (1) Subject to this section, standard time shall be reckoned as nine\n#     hours behind Greenwich Time and called Yukon Standard Time.\n#\n#     (2) Notwithstanding subsection (1), the Commissioner may make regulations\n#     varying the manner of reckoning standard time.\n#\n# * Yukon Territory Commissioner's Order 1966-20 Interpretation Ordinance\n#   [no online source found]\n#\n# * Standard Time and Time Zones in Canada; Thomson, Malcolm M.; JRASC,\n#   Vol. 64, pp.129-162; June 1970; SAO/NASA Astrophysics Data System (ADS)\n#   http://adsabs.harvard.edu/abs/1970JRASC..64..129T from p.156: Yukon\n#   Territory Commissioner's Order 1967-59 Interpretation Ordinance ...\n#\n#     1. Commissioner's Order 1966-20 dated at Whitehorse in the Yukon\n#     Territory on 27th January, 1966, is hereby revoked.\n#\n#     2. Yukon (East) Standard Time as defined by section 36 of the\n#     Interpretation Ordinance from and after mid-night on the 28th day of May,\n#     1967 shall be reckoned in the same manner as Pacific Standard Time, that\n#     is to say, eight hours behind Greenwich Time in the area of the Yukon\n#     Territory lying east of the 138th degree longitude west.\n#\n#     3. In the remainder of the Territory, lying west of the 138th degree\n#     longitude west, Yukon (West) Standard Time shall be reckoned as nine\n#     hours behind Greenwich Time.\n#\n# * Yukon Standard Time defined as Pacific Standard Time, YCO 1973/214\n#   https://www.canlii.org/en/yk/laws/regu/yco-1973-214/latest/yco-1973-214.html\n#   C.O. 1973/214 INTERPRETATION ACT ...\n#\n#     1. Effective October 28, 1973 Commissioner's Order 1967/59 is hereby\n#     revoked.\n#\n#     2. Yukon Standard Time as defined by section 36 of the Interpretation\n#     Act from and after midnight on the twenty-eighth day of October, 1973\n#     shall be reckoned in the same manner as Pacific Standard Time, that is\n#     to say eight hours behind Greenwich Time.\n#\n# * O.I.C. 1980/02 INTERPRETATION ACT\n#   https://mm.icann.org/pipermail/tz/attachments/20201125/d5adc93b/CAYTOIC1980-02DST1980-01-04-0001.pdf\n#\n# * Yukon Daylight Saving Time, YOIC 1987/56\n#   https://www.canlii.org/en/yk/laws/regu/yoic-1987-56/latest/yoic-1987-56.html\n#   O.I.C. 1987/056 INTERPRETATION ACT ...\n#\n#   In every year between\n#     (a) two o'clock in the morning in the first Sunday in April, and\n#     (b) two o'clock in the morning in the last Sunday in October,\n#   Standard Time shall be reckoned as seven hours behind Greenwich Time and\n#   called Yukon Daylight Saving Time.\n#   ...\n#   Dated ... 9th day of March, A.D., 1987.\n#\n# * Yukon Daylight Saving Time 2006, YOIC 2006/127\n#   https://www.canlii.org/en/yk/laws/regu/yoic-2006-127/latest/yoic-2006-127.html\n#   O.I.C. 2006/127 INTERPRETATION ACT ...\n#\n#     1. In Yukon each year the time for general purposes shall be 7 hours\n#     behind Greenwich mean time during the period commencing at two o'clock\n#     in the forenoon on the second Sunday of March and ending at two o'clock\n#     in the forenoon on the first Sunday of November and shall be called\n#     Yukon Daylight Saving Time.\n#\n#     2. Order-in-Council 1987/56 is revoked.\n#\n#     3. This order comes into force January 1, 2007.\n#\n# * Interpretation Act, RSY 2002, c 125\n# https://www.canlii.org/en/yk/laws/stat/rsy-2002-c-125/latest/rsy-2002-c-125.html\n\n# From Chris Walton (2022-11-06):\n# The 5th edition of the Atlas of Canada contains a time zone map that\n# shows both legislated and observed time zone boundaries.\n# All communities on Baffin Island are shown to be observing Eastern time.\n# The date on the map is 1984.\n# https://ftp.maps.canada.ca/pub/nrcan_rncan/raster/atlas_5_ed/eng/other/referencemaps/mcr4056.pdf\n\n# From Rives McDow (1999-09-04):\n# Nunavut ... moved ... to incorporate the whole territory into one time zone.\n# Nunavut moves to single time zone Oct. 31\n# http://www.nunatsiaq.com/nunavut/nvt90903_13.html\n\n# From Paul Eggert (1999-09-20):\n# Basic Facts: The New Territory\n# http://www.nunavut.com/basicfacts/english/basicfacts_1territory.html\n# (1999) reports that ... Coral Harbour does not observe DST.\n\n# From Paul Eggert (2000-10-02):\n# Matthews and Vincent (1998) say the following, but we lack histories\n# for these potential new Zones.\n#\n# The Canadian Forces station at Alert uses Eastern Time while the\n# handful of residents at the Eureka weather station [in the Central\n# zone] skip daylight savings.  Baffin Island, which is crossed by the\n# Central, Eastern and Atlantic Time zones only uses Eastern Time.\n# Gjoa Haven, Taloyoak and Pelly Bay all use Mountain instead of\n# Central Time and Southampton Island [in the Central zone] is not\n# required to use daylight savings.\n\n# From <http://www.nunatsiaqonline.ca/archives/nunavut001130/nvt21110_02.html>\n# Nunavut now has two time zones (2000-11-10):\n# The Nunavut government would allow its employees in Kugluktuk and\n# Cambridge Bay to operate on central time year-round, putting them\n# one hour behind the rest of Nunavut for six months during the winter.\n# At the end of October the two communities had rebelled against\n# Nunavut's unified time zone, refusing to shift to eastern time with\n# the rest of the territory for the winter.  Cambridge Bay remained on\n# central time, while Kugluktuk, even farther west, reverted to\n# mountain time, which they had used before the advent of Nunavut's\n# unified time zone in 1999.\n#\n# From Rives McDow (2001-01-20), quoting the Nunavut government:\n# The preceding decision came into effect at midnight, Saturday Nov 4, 2000.\n\n# From Paul Eggert (2000-12-04):\n# Let's just keep track of the official times for now.\n\n# From Rives McDow (2001-03-07):\n# The premier of Nunavut has issued a ministerial statement advising\n# that effective 2001-04-01, the territory of Nunavut will revert\n# back to three time zones (mountain, central, and eastern).  Of the\n# cities in Nunavut, Coral Harbor is the only one that I know of that\n# has said it will not observe dst, staying on EST year round.  I'm\n# checking for more info, and will get back to you if I come up with\n# more.\n# [Also see <http://www.nunatsiaq.com/nunavut/nvt10309_06.html> (2001-03-09).]\n\n# From Gwillim Law (2005-05-21):\n# According to ...\n# http://www.canadiangeographic.ca/Magazine/SO98/geomap.asp\n# (from a 1998 Canadian Geographic article), the de facto and de jure time\n# for Southampton Island (at the north end of Hudson Bay) is UTC-5 all year\n# round.  Using Google, it's easy to find other websites that confirm this.\n# I wasn't able to find how far back this time regimen goes, but since it\n# predates the creation of Nunavut, it probably goes back many years....\n# The Inuktitut name of Coral Harbour is Sallit, but it's rarely used.\n#\n# From Paul Eggert (2014-10-17):\n# For lack of better information, assume that Southampton Island observed\n# daylight saving only during wartime.  Gwillim Law's email also\n# mentioned maps now maintained by National Research Council Canada;\n# see above for an up-to-date link.\n\n# From Chris Walton (2007-03-01):\n# ... the community of Resolute (located on Cornwallis Island in\n# Nunavut) moved from Central Time to Eastern Time last November.\n# Basically the community did not change its clocks at the end of\n# daylight saving....\n# http://www.nnsl.com/frames/newspapers/2006-11/nov13_06none.html\n\n# From Chris Walton (2011-03-21):\n# Back in 2007 I initiated the creation of a new \"zone file\" for Resolute\n# Bay. Resolute Bay is a small community located about 900km north of\n# the Arctic Circle. The zone file was required because Resolute Bay had\n# decided to use UTC-5 instead of UTC-6 for the winter of 2006-2007.\n#\n# According to new information which I received last week, Resolute Bay\n# went back to using UTC-6 in the winter of 2007-2008...\n#\n# On March 11/2007 most of Canada went onto daylight saving. On March\n# 14/2007 I phoned the Resolute Bay hamlet office to do a \"time check.\" I\n# talked to somebody that was both knowledgeable and helpful. I was able\n# to confirm that Resolute Bay was still operating on UTC-5. It was\n# explained to me that Resolute Bay had been on the Eastern Time zone\n# (EST) in the winter, and was now back on the Central Time zone (CDT).\n# i.e. the time zone had changed twice in the last year but the clocks\n# had not moved. The residents had to know which time zone they were in\n# so they could follow the correct TV schedule...\n#\n# On Nov 02/2008 most of Canada went onto standard time. On Nov 03/2008 I\n# phoned the Resolute Bay hamlet office...[D]ue to the challenging nature\n# of the phone call, I decided to seek out an alternate source of\n# information. I found an e-mail address for somebody by the name of\n# Stephanie Adams whose job was listed as \"Inns North Support Officer for\n# Arctic Co-operatives.\" I was under the impression that Stephanie lived\n# and worked in Resolute Bay...\n#\n# On March 14/2011 I phoned the hamlet office again. I was told that\n# Resolute Bay had been using Central Standard Time over the winter of\n# 2010-2011 and that the clocks had therefore been moved one hour ahead\n# on March 13/2011. The person I talked to was aware that Resolute Bay\n# had previously experimented with Eastern Standard Time but he could not\n# tell me when the practice had stopped.\n#\n# On March 17/2011 I searched the Web to find an e-mail address of\n# somebody that might be able to tell me exactly when Resolute Bay went\n# off Eastern Standard Time. I stumbled on the name \"Aziz Kheraj.\" Aziz\n# used to be the mayor of Resolute Bay and he apparently owns half the\n# businesses including \"South Camp Inn.\" This website has some info on\n# Aziz:\n# http://www.uphere.ca/node/493\n#\n# I sent Aziz an e-mail asking when Resolute Bay had stopped using\n# Eastern Standard Time.\n#\n# Aziz responded quickly with this: \"hi, The time was not changed for the\n# 1 year only, the following year, the community went back to the old way\n# of \"spring ahead-fall behind\" currently we are zulu plus 5 hrs and in\n# the winter Zulu plus 6 hrs\"\n#\n# This of course conflicted with everything I had ascertained in November 2008.\n#\n# I sent Aziz a copy of my 2008 e-mail exchange with Stephanie. Aziz\n# responded with this: \"Hi, Stephanie lives in Winnipeg. I live here, You\n# may want to check with the weather office in Resolute Bay or do a\n# search on the weather through Env. Canada. web site\"\n#\n# If I had realized the Stephanie did not live in Resolute Bay I would\n# never have contacted her.  I now believe that all the information I\n# obtained in November 2008 should be ignored...\n# I apologize for reporting incorrect information in 2008.\n\n# From Tim Parenti (2020-03-05):\n# The government of Yukon announced [yesterday] the cessation of seasonal time\n# changes.  \"After clocks are pushed ahead one hour on March 8, the territory\n# will remain on [UTC-07].  ... [The government] found 93 per cent of\n# respondents wanted to end seasonal time changes and, of that group, 70 per\n# cent wanted 'permanent Pacific Daylight Saving Time.'\"\n# https://www.cbc.ca/news/canada/north/yukon-end-daylight-saving-time-1.5486358\n#\n# Although the government press release prefers PDT, we prefer MST for\n# consistency with nearby Dawson Creek, Creston, and Fort Nelson.\n# https://yukon.ca/en/news/yukon-end-seasonal-time-change\n\n# From Andrew G. Smith (2020-09-24):\n# Yukon has completed its regulatory change to be on UTC -7 year-round....\n# http://www.gov.yk.ca/legislation/regs/oic2020_125.pdf\n# What we have done is re-defined Yukon Standard Time, as we are\n# authorized to do under section 33 of our Interpretation Act:\n# http://www.gov.yk.ca/legislation/acts/interpretation_c.pdf\n#\n# From Paul Eggert (2020-09-24):\n# tzdb uses the obsolete YST abbreviation for standard time in Yukon through\n# about 1970, and uses PST for standard time in Yukon since then.  Consistent\n# with that, use MST for -07, the new standard time in Yukon effective Nov. 1.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tNT_YK\t1918\tonly\t-\tApr\t14\t2:00\t1:00\tD\nRule\tNT_YK\t1918\tonly\t-\tOct\t27\t2:00\t0\tS\nRule\tNT_YK\t1919\tonly\t-\tMay\t25\t2:00\t1:00\tD\nRule\tNT_YK\t1919\tonly\t-\tNov\t 1\t0:00\t0\tS\nRule\tNT_YK\t1942\tonly\t-\tFeb\t 9\t2:00\t1:00\tW # War\nRule\tNT_YK\t1945\tonly\t-\tAug\t14\t23:00u\t1:00\tP # Peace\nRule\tNT_YK\t1945\tonly\t-\tSep\t30\t2:00\t0\tS\nRule\tNT_YK\t1972\t1986\t-\tApr\tlastSun\t2:00\t1:00\tD\nRule\tNT_YK\t1972\t2006\t-\tOct\tlastSun\t2:00\t0\tS\nRule\tNT_YK\t1987\t2006\t-\tApr\tSun>=1\t2:00\t1:00\tD\nRule\tYukon\t1965\tonly\t-\tApr\tlastSun\t0:00\t2:00\tDD\nRule\tYukon\t1965\tonly\t-\tOct\tlastSun\t2:00\t0\tS\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n# formerly Frobisher Bay\nZone America/Iqaluit\t0\t-\t-00\t1942 Aug # Frobisher Bay est.\n\t\t\t-5:00\tNT_YK\tE%sT\t1999 Oct 31  2:00\n\t\t\t-6:00\tCanada\tC%sT\t2000 Oct 29  2:00\n\t\t\t-5:00\tCanada\tE%sT\n# aka Qausuittuq\nZone America/Resolute\t0\t-\t-00\t1947 Aug 31 # Resolute founded\n\t\t\t-6:00\tNT_YK\tC%sT\t2000 Oct 29  2:00\n\t\t\t-5:00\t-\tEST\t2001 Apr  1  3:00\n\t\t\t-6:00\tCanada\tC%sT\t2006 Oct 29  2:00\n\t\t\t-5:00\t-\tEST\t2007 Mar 11  3:00\n\t\t\t-6:00\tCanada\tC%sT\n# aka Kangiqiniq\nZone America/Rankin_Inlet 0\t-\t-00\t1957 # Rankin Inlet founded\n\t\t\t-6:00\tNT_YK\tC%sT\t2000 Oct 29  2:00\n\t\t\t-5:00\t-\tEST\t2001 Apr  1  3:00\n\t\t\t-6:00\tCanada\tC%sT\n# aka Iqaluktuuttiaq\nZone America/Cambridge_Bay 0\t-\t-00\t1920 # trading post est.?\n\t\t\t-7:00\tNT_YK\tM%sT\t1999 Oct 31  2:00\n\t\t\t-6:00\tCanada\tC%sT\t2000 Oct 29  2:00\n\t\t\t-5:00\t-\tEST\t2000 Nov  5  0:00\n\t\t\t-6:00\t-\tCST\t2001 Apr  1  3:00\n\t\t\t-7:00\tCanada\tM%sT\nZone America/Inuvik\t0\t-\t-00\t1953 # Inuvik founded\n\t\t\t-8:00\tNT_YK\tP%sT\t1979 Apr lastSun  2:00\n\t\t\t-7:00\tNT_YK\tM%sT\t1980\n\t\t\t-7:00\tCanada\tM%sT\nZone America/Whitehorse\t-9:00:12 -\tLMT\t1900 Aug 20\n\t\t\t-9:00\tNT_YK\tY%sT\t1965\n\t\t\t-9:00\tYukon\tY%sT\t1966 Feb 27  0:00\n\t\t\t-8:00\t-\tPST\t1980\n\t\t\t-8:00\tCanada\tP%sT\t2020 Nov  1\n\t\t\t-7:00\t-\tMST\nZone America/Dawson\t-9:17:40 -\tLMT\t1900 Aug 20\n\t\t\t-9:00\tNT_YK\tY%sT\t1965\n\t\t\t-9:00\tYukon\tY%sT\t1973 Oct 28  0:00\n\t\t\t-8:00\t-\tPST\t1980\n\t\t\t-8:00\tCanada\tP%sT\t2020 Nov  1\n\t\t\t-7:00\t-\tMST\n\n\n###############################################################################\n\n# Mexico\n\n# From Paul Eggert (2014-12-07):\n# The Investigation and Analysis Service of the\n# Mexican Library of Congress (MLoC) has published a\n# history of Mexican local time (in Spanish)\n# http://www.diputados.gob.mx/bibliot/publica/inveyana/polisoc/horver/index.htm\n#\n# Here are the discrepancies between Shanks & Pottenger (S&P) and the MLoC.\n# (In all cases we go with the MLoC.)\n# S&P report that Baja was at -8:00 in 1922/1923.\n# S&P say the 1930 transition in Baja was 1930-11-16.\n# S&P report no DST during summer 1931.\n# S&P report a transition at 1932-03-30 23:00, not 1932-04-01.\n\n# From Gwillim Law (2001-02-20):\n# There are some other discrepancies between the Decrees page and the\n# tz database.  I think they can best be explained by supposing that\n# the researchers who prepared the Decrees page failed to find some of\n# the relevant documents.\n\n# From Heitor David Pinto (2024-08-04):\n# In 1931, the decree implementing DST specified that it would take\n# effect on 30 April....\n# https://www.dof.gob.mx/nota_to_imagen_fs.php?cod_diario=192270&pagina=2&seccion=1\n#\n# In 1981, the decree changing Campeche, Yucatán and Quintana Roo to UTC-5\n# specified that it would enter into force on 26 December 1981 at 2:00....\n# https://www.dof.gob.mx/nota_to_imagen_fs.php?codnota=4705667&fecha=23/12/1981&cod_diario=202796\n#\n# In 1982, the decree returning Campeche and Yucatán to UTC-6 specified that\n# it would enter into force on 2 November 1982 at 2:00....\n# https://www.dof.gob.mx/nota_to_imagen_fs.php?cod_diario=205689&pagina=3&seccion=0\n#\n# Quintana Roo changed to UTC-6 on 4 January 1983 at 0:00, and again\n# to UTC-5 on 26 October 1997 at 2:00....\n# https://www.dof.gob.mx/nota_to_imagen_fs.php?codnota=4787355&fecha=28/12/1982&cod_diario=206112\n# https://www.dof.gob.mx/nota_to_imagen_fs.php?cod_diario=209559&pagina=15&seccion=0\n#\n# Durango, Coahuila, Nuevo León and Tamaulipas were set to UTC-7 on 1 January\n# 1922, and changed to UTC-6 on 10 June 1927.  Then Durango, Coahuila and\n# Nuevo León (but not Tamaulipas) returned to UTC-7 on 15 November 1930,\n# observed DST in 1931, and changed again to UTC-6 on 1 April 1932....\n# https://www.dof.gob.mx/nota_to_imagen_fs.php?codnota=4441846&fecha=29/12/1921&cod_diario=187468\n# https://www.dof.gob.mx/nota_to_imagen_fs.php?codnota=4541520&fecha=09/06/1927&cod_diario=193920\n# https://www.dof.gob.mx/nota_to_imagen_fs.php?codnota=4491963&fecha=15/11/1930&cod_diario=190835\n# https://www.dof.gob.mx/nota_to_imagen_fs.php?codnota=4418437&fecha=21/01/1932&cod_diario=185588\n#\n# ... the ... 10 June 1927 ... decree only said 10 June 1927, without\n# specifying a time, so I suppose that it should be considered at 0:00.\n# https://www.dof.gob.mx/nota_to_imagen_fs.php?codnota=4541520&fecha=09/06/1927&cod_diario=193920\n#\n# In 1942, the decree changing Baja California, Baja California Sur, Sonora,\n# Sinaloa and Nayarit to UTC-7 was published on 24 April, but it said that it\n# would apply from 1 April, so it's unclear when the change actually\n# occurred. The database currently shows 24 April 1942.\n# https://www.dof.gob.mx/nota_to_imagen_fs.php?cod_diario=192203&pagina=2&seccion=1\n#\n# Baja California Sur, Sonora, Sinaloa and Nayarit never used UTC-8.  The ...\n# 14 January 1949 ... change [to UTC-8] only occurred in Baja California.\n# https://www.dof.gob.mx/nota_to_imagen_fs.php?codnota=4515613&fecha=13/01/1949&cod_diario=192309\n#\n# In 1945, the decree changing Baja California to UTC-8 specified that it\n# would take effect on the third day from its publication.\n# It was published on 12 November, so it would take effect on 15 November....\n# https://www.dof.gob.mx/nota_to_imagen_fs.php?codnota=4555049&fecha=12/11/1945&cod_diario=194763\n#\n# In 1948, the decree changing Baja California to UTC-7 specified that it\n# would take effect on \"this date\".  The decree was made on 13 March,\n# but published on 5 April, so it's unclear when the change actually occurred.\n# The database currently shows 5 April 1948.\n# https://www.dof.gob.mx/nota_to_imagen_fs.php?cod_diario=188624&pagina=2&seccion=0\n#\n# In 1949, the decree changing Baja California to UTC-8 was published on 13\n# January, but it said that it would apply from 1 January, so it's unclear when\n# the change actually occurred.  The database currently shows 14 January 1949.\n# https://www.dof.gob.mx/nota_to_imagen_fs.php?codnota=4515613&fecha=13/01/1949&cod_diario=192309\n#\n# Baja California also observed UTC-7 from 1 May to 24 September 1950,\n# from 29 April to 30 September 1951 at 2:00,\n# and from 27 April to 28 September 1952 at 2:00....\n# https://www.dof.gob.mx/nota_to_imagen_fs.php?codnota=4600403&fecha=29/04/1950&cod_diario=197505\n# https://www.dof.gob.mx/nota_to_imagen_fs.php?codnota=4623553&fecha=23/09/1950&cod_diario=198805\n# https://www.dof.gob.mx/nota_to_imagen_fs.php?codnota=4469444&fecha=27/04/1951&cod_diario=189317\n# https://www.dof.gob.mx/nota_to_imagen_fs.php?codnota=4533868&fecha=10/03/1952&cod_diario=193465\n#\n# All changes in Baja California from 1948 to 1952 match those in California,\n# on the same dates or with a difference of one day.\n# So it may be easier to implement these changes as DST with rule CA\n# during this whole period.\n#\n# From Paul Eggert (2024-08-18):\n# For now, maintain the slightly-different history for Baja California,\n# as we have no information on whether 1948/1952 clocks in Tijuana followed\n# the decrees or followed San Diego.\n\n# From Alan Perry (1996-02-15):\n# A guy from our Mexico subsidiary finally found the Presidential Decree\n# outlining the timezone changes in Mexico.\n#\n# ------------- Begin Forwarded Message -------------\n#\n# I finally got my hands on the Official Presidential Decree that sets up the\n# rules for the DST changes. The rules are:\n#\n# 1. The country is divided in 3 timezones:\n#    - Baja California Norte (the Mexico/BajaNorte TZ)\n#    - Baja California Sur, Nayarit, Sinaloa and Sonora (the Mexico/BajaSur TZ)\n#    - The rest of the country (the Mexico/General TZ)\n#\n# 2. From the first Sunday in April at 2:00 AM to the last Sunday in October\n#    at 2:00 AM, the times in each zone are as follows:\n#    BajaNorte: GMT+7\n#    BajaSur:   GMT+6\n#    General:   GMT+5\n#\n# 3. The rest of the year, the times are as follows:\n#    BajaNorte: GMT+8\n#    BajaSur:   GMT+7\n#    General:   GMT+6\n#\n# The Decree was published in Mexico's Official Newspaper on January 4th.\n#\n# -------------- End Forwarded Message --------------\n# From Paul Eggert (1996-06-12):\n# For an English translation of the decree, see\n# \"Diario Oficial: Time Zone Changeover\" (1996-01-04).\n# http://mexico-travel.com/extra/timezone_eng.html\n\n# From Rives McDow (1998-10-08):\n# The State of Quintana Roo has reverted back to central STD and DST times\n# (i.e. UTC -0600 and -0500 as of 1998-08-02).\n\n# From Rives McDow (2000-01-10):\n# Effective April 4, 1999 at 2:00 AM local time, Sonora changed to the time\n# zone 5 hours from the International Date Line, and will not observe daylight\n# savings time so as to stay on the same time zone as the southern part of\n# Arizona year round.\n\n# From Jesper Nørgaard, translating\n# <http://www.reforma.com/nacional/articulo/064327/> (2001-01-17):\n# In Oaxaca, the 55.000 teachers from the Section 22 of the National\n# Syndicate of Education Workers, refuse to apply daylight saving each\n# year, so that the more than 10,000 schools work at normal hour the\n# whole year.\n\n# From Gwillim Law (2001-01-19):\n# <http://www.reforma.com/negocios_y_dinero/articulo/064481/> ... says\n# (translated):...\n# January 17, 2000 - The Energy Secretary, Ernesto Martens, announced\n# that Summer Time will be reduced from seven to five months, starting\n# this year....\n# http://www.publico.com.mx/scripts/texto3.asp?action=pagina&pag=21&pos=p&secc=naci&date=01/17/2001\n# [translated], says \"summer time will ... take effect on the first Sunday\n# in May, and end on the last Sunday of September.\n\n# From Arthur David Olson (2001-01-25):\n# The 2001-01-24 traditional Washington Post contained the page one\n# story \"Timely Issue Divides Mexicans.\"...\n# http://www.washingtonpost.com/wp-dyn/articles/A37383-2001Jan23.html\n# ... Mexico City Mayor López Obrador \"...is threatening to keep\n# Mexico City and its 20 million residents on a different time than\n# the rest of the country...\" In particular, López Obrador would abolish\n# observation of Daylight Saving Time.\n\n# Official statute published by the Energy Department\n# http://www.conae.gob.mx/ahorro/decretohorver2001.html#decre\n# (2001-02-01) shows Baja and Chihauhua as still using US DST rules,\n# and Sonora with no DST.  This was reported by Jesper Nørgaard (2001-02-03).\n\n# From Paul Eggert (2001-03-03):\n#\n# https://www.latimes.com/archives/la-xpm-2001-mar-03-mn-32561-story.html\n# James F. Smith writes in today's LA Times\n# * Sonora will continue to observe standard time.\n# * Last week Mexico City's mayor Andrés Manuel López Obrador decreed that\n#   the Federal District will not adopt DST.\n# * 4 of 16 district leaders announced they'll ignore the decree.\n# * The decree does not affect federal-controlled facilities including\n#   the airport, banks, hospitals, and schools.\n#\n# For now we'll assume that the Federal District will bow to federal rules.\n\n# From Jesper Nørgaard (2001-04-01):\n# I found some references to the Mexican application of daylight\n# saving, which modifies what I had already sent you, stating earlier\n# that a number of northern Mexican states would go on daylight\n# saving. The modification reverts this to only cover Baja California\n# (Norte), while all other states (except Sonora, who has no daylight\n# saving all year) will follow the original decree of president\n# Vicente Fox, starting daylight saving May 6, 2001 and ending\n# September 30, 2001.\n# References: \"Diario de Monterrey\" <http://www.diariodemonterrey.com/index.asp>\n# Palabra <http://palabra.infosel.com/010331/primera/ppri3101.pdf> (2001-03-31)\n\n# From Reuters (2001-09-04):\n# Mexico's Supreme Court on Tuesday declared that daylight savings was\n# unconstitutional in Mexico City, creating the possibility the\n# capital will be in a different time zone from the rest of the nation\n# next year....  The Supreme Court's ruling takes effect at 2:00\n# a.m. (0800 GMT) on Sept. 30, when Mexico is scheduled to revert to\n# standard time. \"This is so residents of the Federal District are not\n# subject to unexpected time changes,\" a statement from the court said.\n\n# From Jesper Nørgaard Welen (2002-03-12):\n# ... consulting my local grocery store(!) and my coworkers, they all insisted\n# that a new decision had been made to reinstate US style DST in Mexico....\n# http://www.conae.gob.mx/ahorro/horaver2001_m1_2002.html (2002-02-20)\n# confirms this.  Sonora as usual is the only state where DST is not applied.\n\n# From Steffen Thorsen (2009-12-28):\n#\n# Steffen Thorsen wrote:\n# > Mexico's House of Representatives has approved a proposal for northern\n# > Mexico's border cities to share the same daylight saving schedule as\n# > the United States.\n# Now this has passed both the Congress and the Senate, so starting from\n# 2010, some border regions will be the same:\n# http://www.signonsandiego.com/news/2009/dec/28/clocks-will-match-both-sides-border/\n# http://www.elmananarey.com/diario/noticia/nacional/noticias/empatan_horario_de_frontera_con_eu/621939\n# (Spanish)\n#\n# Could not find the new law text, but the proposed law text changes are here:\n# http://gaceta.diputados.gob.mx/Gaceta/61/2009/dic/20091210-V.pdf\n# (Gaceta Parlamentaria)\n#\n# There is also a list of the votes here:\n# http://gaceta.diputados.gob.mx/Gaceta/61/2009/dic/V2-101209.html\n#\n# Our page:\n# https://www.timeanddate.com/news/time/north-mexico-dst-change.html\n\n# From Arthur David Olson (2010-01-20):\n# The page\n# http://dof.gob.mx/nota_detalle.php?codigo=5127480&fecha=06/01/2010\n# includes this text:\n# En los municipios fronterizos de Tijuana y Mexicali en Baja California;\n# Juárez y Ojinaga en Chihuahua; Acuña y Piedras Negras en Coahuila;\n# Anáhuac en Nuevo León; y Nuevo Laredo, Reynosa y Matamoros en\n# Tamaulipas, la aplicación de este horario estacional surtirá efecto\n# desde las dos horas del segundo domingo de marzo y concluirá a las dos\n# horas del primer domingo de noviembre.\n# En los municipios fronterizos que se encuentren ubicados en la franja\n# fronteriza norte en el territorio comprendido entre la línea\n# internacional y la línea paralela ubicada a una distancia de veinte\n# kilómetros, así como la Ciudad de Ensenada, Baja California, hacia el\n# interior del país, la aplicación de este horario estacional surtirá\n# efecto desde las dos horas del segundo domingo de marzo y concluirá a\n# las dos horas del primer domingo de noviembre.\n\n# From Steffen Thorsen (2014-12-08), translated by Gwillim Law:\n# The Mexican state of Quintana Roo will likely change to EST in 2015.\n#\n# http://www.unioncancun.mx/articulo/2014/12/04/medio-ambiente/congreso-aprueba-una-hora-mas-de-sol-en-qroo\n# \"With this change, the time conflict that has existed between the municipios\n# of Quintana Roo and the municipio of Felipe Carrillo Puerto may come to an\n# end. The latter declared itself in rebellion 15 years ago when a time change\n# was initiated in Mexico, and since then it has refused to change its time\n# zone along with the rest of the country.\"\n#\n# From Steffen Thorsen (2015-01-14), translated by Gwillim Law:\n# http://sipse.com/novedades/confirman-aplicacion-de-nueva-zona-horaria-para-quintana-roo-132331.html\n# \"...the new time zone will come into effect at two o'clock on the first Sunday\n# of February, when we will have to advance the clock one hour from its current\n# time...\"\n# Also, the new zone will not use DST.\n#\n# From Carlos Raúl Perasso (2015-02-02):\n# The decree that modifies the Mexican Hour System Law has finally\n# been published at the Diario Oficial de la Federación\n# http://www.dof.gob.mx/nota_detalle.php?codigo=5380123&fecha=31/01/2015\n# It establishes 5 zones for Mexico:\n# 1- Zona Centro (Central Zone): Corresponds to longitude 90 W,\n#    includes most of Mexico, excluding what's mentioned below.\n# 2- Zona Pacífico (Pacific Zone): Longitude 105 W, includes the\n#    states of Baja California Sur; Chihuahua; Nayarit (excluding Bahía\n#    de Banderas which lies in Central Zone); Sinaloa and Sonora.\n# 3- Zona Noroeste (Northwest Zone): Longitude 120 W, includes the\n#    state of Baja California.\n# 4- Zona Sureste (Southeast Zone): Longitude 75 W, includes the state\n#    of Quintana Roo.\n# 5- The islands, reefs and keys shall take their timezone from the\n#    longitude they are located at.\n\n# From Paul Eggert (2022-10-28):\n# The new Mexican law was published today:\n# https://www.dof.gob.mx/nota_detalle.php?codigo=5670045&fecha=28/10/2022\n# This abolishes DST except where US DST rules are observed,\n# and in addition changes all of Chihuahua to -06 with no DST.\n\n# From Heitor David Pinto (2022-11-28):\n# Now the northern [municipios] want to have the same time zone as the\n# respective neighboring cities in the US, for example Juárez in UTC-7 with\n# DST, matching El Paso, and Ojinaga in UTC-6 with DST, matching Presidio....\n# the president authorized the publication of the decree for November 29,\n# so the time change would occur on November 30 at 0:00.\n# http://puentelibre.mx/noticia/ciudad_juarez_cambio_horario_noviembre_2022/\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tMexico\t1931\tonly\t-\tApr\t30\t0:00\t1:00\tD\nRule\tMexico\t1931\tonly\t-\tOct\t1\t0:00\t0\tS\nRule\tMexico\t1939\tonly\t-\tFeb\t5\t0:00\t1:00\tD\nRule\tMexico\t1939\tonly\t-\tJun\t25\t0:00\t0\tS\nRule\tMexico\t1940\tonly\t-\tDec\t9\t0:00\t1:00\tD\nRule\tMexico\t1941\tonly\t-\tApr\t1\t0:00\t0\tS\nRule\tMexico\t1943\tonly\t-\tDec\t16\t0:00\t1:00\tW # War\nRule\tMexico\t1944\tonly\t-\tMay\t1\t0:00\t0\tS\nRule\tMexico\t1950\tonly\t-\tFeb\t12\t0:00\t1:00\tD\nRule\tMexico\t1950\tonly\t-\tJul\t30\t0:00\t0\tS\nRule\tMexico\t1996\t2000\t-\tApr\tSun>=1\t2:00\t1:00\tD\nRule\tMexico\t1996\t2000\t-\tOct\tlastSun\t2:00\t0\tS\nRule\tMexico\t2001\tonly\t-\tMay\tSun>=1\t2:00\t1:00\tD\nRule\tMexico\t2001\tonly\t-\tSep\tlastSun\t2:00\t0\tS\nRule\tMexico\t2002\t2022\t-\tApr\tSun>=1\t2:00\t1:00\tD\nRule\tMexico\t2002\t2022\t-\tOct\tlastSun\t2:00\t0\tS\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n# Quintana Roo; represented by Cancún\nZone America/Cancun\t-5:47:04 -\tLMT\t1922 Jan  1  6:00u\n\t\t\t-6:00\t-\tCST\t1981 Dec 26  2:00\n\t\t\t-5:00\t-\tEST\t1983 Jan  4  0:00\n\t\t\t-6:00\tMexico\tC%sT\t1997 Oct 26  2:00\n\t\t\t-5:00\tMexico\tE%sT\t1998 Aug  2  2:00\n\t\t\t-6:00\tMexico\tC%sT\t2015 Feb  1  2:00\n\t\t\t-5:00\t-\tEST\n# Campeche, Yucatán; represented by Mérida\nZone America/Merida\t-5:58:28 -\tLMT\t1922 Jan  1  6:00u\n\t\t\t-6:00\t-\tCST\t1981 Dec 26  2:00\n\t\t\t-5:00\t-\tEST\t1982 Nov  2  2:00\n\t\t\t-6:00\tMexico\tC%sT\n# Coahuila, Nuevo León, Tamaulipas (near US border)\n# This includes the following municipios:\n#   in Coahuila: Acuña, Allende, Guerrero, Hidalgo, Jiménez, Morelos, Nava,\n#     Ocampo, Piedras Negras, Villa Unión, Zaragoza\n#   in Nuevo León: Anáhuac\n#   in Tamaulipas: Nuevo Laredo, Guerrero, Mier, Miguel Alemán, Camargo,\n#     Gustavo Díaz Ordaz, Reynosa, Río Bravo, Valle Hermoso, Matamoros.\n# https://www.dof.gob.mx/nota_detalle.php?codigo=5670045&fecha=28/10/2022\nZone America/Matamoros\t-6:30:00 -\tLMT\t1922 Jan  1  6:00u\n\t\t\t-6:00\t-\tCST\t1988\n\t\t\t-6:00\tUS\tC%sT\t1989\n\t\t\t-6:00\tMexico\tC%sT\t2010\n\t\t\t-6:00\tUS\tC%sT\n# Durango; Coahuila, Nuevo León, Tamaulipas (away from US border)\nZone America/Monterrey\t-6:41:16 -\tLMT\t1922 Jan  1  6:00u\n\t\t\t-7:00\t-\tMST\t1927 Jun 10\n\t\t\t-6:00\t-\tCST\t1930 Nov 15\n\t\t\t-7:00\tMexico\tM%sT\t1932 Apr  1\n\t\t\t-6:00\t-\tCST\t1988\n\t\t\t-6:00\tUS\tC%sT\t1989\n\t\t\t-6:00\tMexico\tC%sT\n# Central Mexico\nZone America/Mexico_City -6:36:36 -\tLMT\t1922 Jan  1  7:00u\n\t\t\t-7:00\t-\tMST\t1927 Jun 10\n\t\t\t-6:00\t-\tCST\t1930 Nov 15\n\t\t\t-7:00\tMexico\tM%sT\t1932 Apr  1\n\t\t\t-6:00\tMexico\tC%sT\t2001 Sep 30  2:00\n\t\t\t-6:00\t-\tCST\t2002 Feb 20\n\t\t\t-6:00\tMexico\tC%sT\n# Chihuahua (near US border - western side)\n# This includes the municipios of Janos, Ascensión, Juárez, Guadalupe, and\n# Práxedis G Guerrero.\n# http://gaceta.diputados.gob.mx/PDF/65/2a022/nov/20221124-VII.pdf\nZone America/Ciudad_Juarez -7:05:56 -\tLMT\t1922 Jan  1  7:00u\n\t\t\t-7:00\t-\tMST\t1927 Jun 10\n\t\t\t-6:00\t-\tCST\t1930 Nov 15\n\t\t\t-7:00\tMexico\tM%sT\t1932 Apr  1\n\t\t\t-6:00\t-\tCST\t1996\n\t\t\t-6:00\tMexico\tC%sT\t1998\n\t\t\t-6:00\t-\tCST\t1998 Apr Sun>=1  3:00\n\t\t\t-7:00\tMexico\tM%sT\t2010\n\t\t\t-7:00\tUS\tM%sT\t2022 Oct 30  2:00\n\t\t\t-6:00\t-\tCST\t2022 Nov 30  0:00\n\t\t\t-7:00\tUS\tM%sT\n# Chihuahua (near US border - eastern side)\n# This includes the municipios of Coyame del Sotol, Ojinaga, and Manuel\n# Benavides.\n# http://gaceta.diputados.gob.mx/PDF/65/2a022/nov/20221124-VII.pdf\nZone America/Ojinaga\t-6:57:40 -\tLMT\t1922 Jan  1  7:00u\n\t\t\t-7:00\t-\tMST\t1927 Jun 10\n\t\t\t-6:00\t-\tCST\t1930 Nov 15\n\t\t\t-7:00\tMexico\tM%sT\t1932 Apr  1\n\t\t\t-6:00\t-\tCST\t1996\n\t\t\t-6:00\tMexico\tC%sT\t1998\n\t\t\t-6:00\t-\tCST\t1998 Apr Sun>=1  3:00\n\t\t\t-7:00\tMexico\tM%sT\t2010\n\t\t\t-7:00\tUS\tM%sT\t2022 Oct 30  2:00\n\t\t\t-6:00\t-\tCST\t2022 Nov 30  0:00\n\t\t\t-6:00\tUS\tC%sT\n# Chihuahua (away from US border)\nZone America/Chihuahua\t-7:04:20 -\tLMT\t1922 Jan  1  7:00u\n\t\t\t-7:00\t-\tMST\t1927 Jun 10\n\t\t\t-6:00\t-\tCST\t1930 Nov 15\n\t\t\t-7:00\tMexico\tM%sT\t1932 Apr  1\n\t\t\t-6:00\t-\tCST\t1996\n\t\t\t-6:00\tMexico\tC%sT\t1998\n\t\t\t-6:00\t-\tCST\t1998 Apr Sun>=1  3:00\n\t\t\t-7:00\tMexico\tM%sT\t2022 Oct 30  2:00\n\t\t\t-6:00\t-\tCST\n# Sonora\nZone America/Hermosillo\t-7:23:52 -\tLMT\t1922 Jan  1  7:00u\n\t\t\t-7:00\t-\tMST\t1927 Jun 10\n\t\t\t-6:00\t-\tCST\t1930 Nov 15\n\t\t\t-7:00\tMexico\tM%sT\t1932 Apr  1\n\t\t\t-6:00\t-\tCST\t1942 Apr 24\n\t\t\t-7:00\t-\tMST\t1996\n\t\t\t-7:00\tMexico\tM%sT\t1999\n\t\t\t-7:00\t-\tMST\n\n# Baja California Sur, Nayarit (except Bahía de Banderas), Sinaloa\nZone America/Mazatlan\t-7:05:40 -\tLMT\t1922 Jan  1  7:00u\n\t\t\t-7:00\t-\tMST\t1927 Jun 10\n\t\t\t-6:00\t-\tCST\t1930 Nov 15\n\t\t\t-7:00\tMexico\tM%sT\t1932 Apr  1\n\t\t\t-6:00\t-\tCST\t1942 Apr 24\n\t\t\t-7:00\t-\tMST\t1970\n\t\t\t-7:00\tMexico\tM%sT\n\n# Bahía de Banderas\n\n# From Alexander Krivenyshev (2010-04-21):\n# According to news, Bahía de Banderas (Mexican state of Nayarit)\n# changed time zone UTC-7 to new time zone UTC-6 on April 4, 2010 (to\n# share the same time zone as nearby city Puerto Vallarta, Jalisco).\n#\n# (Spanish)\n# Bahía de Banderas homologa su horario al del centro del\n# país, a partir de este domingo\n# http://www.nayarit.gob.mx/notes.asp?id=20748\n#\n# Bahía de Banderas homologa su horario con el del Centro del\n# País\n# http://www.bahiadebanderas.gob.mx/principal/index.php?option=com_content&view=article&id=261:bahia-de-banderas-homologa-su-horario-con-el-del-centro-del-pais&catid=42:comunicacion-social&Itemid=50\n#\n# (English)\n# Puerto Vallarta and Bahía de Banderas: One Time Zone\n# http://virtualvallarta.com/puertovallarta/puertovallarta/localnews/2009-12-03-Puerto-Vallarta-and-Bahia-de-Banderas-One-Time-Zone.shtml\n# http://www.worldtimezone.com/dst_news/dst_news_mexico08.html\n#\n# \"Mexico's Senate approved the amendments to the Mexican Schedule System that\n# will allow Bahía de Banderas and Puerto Vallarta to share the same time\n# zone ...\"\n# Baja California Sur, Nayarit, Sinaloa\n\n# From Arthur David Olson (2010-05-01):\n# Use \"Bahia_Banderas\" to keep the name to fourteen characters.\n\nZone America/Bahia_Banderas -7:01:00 -\tLMT\t1922 Jan  1  7:00u\n\t\t\t-7:00\t-\tMST\t1927 Jun 10\n\t\t\t-6:00\t-\tCST\t1930 Nov 15\n\t\t\t-7:00\tMexico\tM%sT\t1932 Apr  1\n\t\t\t-6:00\t-\tCST\t1942 Apr 24\n\t\t\t-7:00\t-\tMST\t1970\n\t\t\t-7:00\tMexico\tM%sT\t2010 Apr  4  2:00\n\t\t\t-6:00\tMexico\tC%sT\n\n# Baja California\nZone America/Tijuana\t-7:48:04 -\tLMT\t1922 Jan  1  7:00u\n\t\t\t-7:00\t-\tMST\t1924\n\t\t\t-8:00\t-\tPST\t1927 Jun 10\n\t\t\t-7:00\t-\tMST\t1930 Nov 15\n\t\t\t-8:00\t-\tPST\t1931 Apr  1\n\t\t\t-8:00\t1:00\tPDT\t1931 Sep 30\n\t\t\t-8:00\t-\tPST\t1942 Apr 24\n\t\t\t-8:00\t1:00\tPWT\t1945 Aug 14 23:00u\n\t\t\t-8:00\t1:00\tPPT\t1945 Nov 15 # Peace\n\t\t\t-8:00\t-\tPST\t1948 Apr  5\n\t\t\t-8:00\t1:00\tPDT\t1949 Jan 14\n\t\t\t-8:00\t-\tPST\t1950 May  1\n\t\t\t-8:00\t1:00\tPDT\t1950 Sep 24\n\t\t\t-8:00\t-\tPST\t1951 Apr 29  2:00\n\t\t\t-8:00\t1:00\tPDT\t1951 Sep 30  2:00\n\t\t\t-8:00\t-\tPST\t1952 Apr 27  2:00\n\t\t\t-8:00\t1:00\tPDT\t1952 Sep 28  2:00\n\t\t\t-8:00\t-\tPST\t1954\n\t\t\t-8:00\tCA\tP%sT\t1961\n\t\t\t-8:00\t-\tPST\t1976\n\t\t\t-8:00\tUS\tP%sT\t1996\n\t\t\t-8:00\tMexico\tP%sT\t2001\n\t\t\t-8:00\tUS\tP%sT\t2002 Feb 20\n\t\t\t-8:00\tMexico\tP%sT\t2010\n\t\t\t-8:00\tUS\tP%sT\n# From Paul Eggert (2006-03-22):\n# Formerly there was an America/Ensenada zone, which differed from\n# America/Tijuana only in that it did not observe DST from 1976\n# through 1995.  This was as per Shanks (1999).  But Shanks & Pottenger say\n# Ensenada did not observe DST from 1948 through 1975.  Guy Harris reports\n# that the 1987 OAG says \"Only Ensenada, Mexicali, San Felipe and\n# Tijuana observe DST,\" which agrees with Shanks & Pottenger but implies that\n# DST-observance was a town-by-town matter back then.  This concerns\n# data after 1970 so most likely there should be at least one Zone\n# other than America/Tijuana for Baja, but it's not clear yet what its\n# name or contents should be.\n#\n# From Paul Eggert (2015-10-08):\n# Formerly there was an America/Santa_Isabel zone, but this appears to\n# have come from a misreading of\n# http://dof.gob.mx/nota_detalle.php?codigo=5127480&fecha=06/01/2010\n# It has been moved to the 'backward' file.\n#\n# From Paul Eggert (2022-10-28):\n# Today's new law states that the entire state of Baja California\n# follows US DST rules, which agrees with simplifications noted above.\n#\n#\n# Revillagigedo Is\n# no information\n\n###############################################################################\n\n# Barbados\n\n# For 1899 Milne gives -3:58:29.2.\n\n# From P Chan (2020-12-09 and 2020-12-11):\n# Standard time of GMT-4 was adopted in 1911.\n# Definition of Time Act, 1911 (1911-7) [1911-08-28]\n# 1912, Laws of Barbados (5 v.), OCLC Number: 919801291, Vol. 4, Image No. 522\n# 1944, Laws of Barbados (5 v.), OCLC Number: 84548697, Vol. 4, Image No. 122\n# http://llmc.com/browse.aspx?type=2&coll=85&div=297\n#\n# DST was observed in 1942-44.\n# Defence (Daylight Saving) Regulations, 1942, 1942-04-13\n# Defence (Daylight Saving) (Repeal) Regulations, 1942, 1942-08-22\n# Defence (Daylight Saving) Regulations, 1943, 1943-04-16\n# Defence (Daylight Saving) (Repeal) Regulations, 1943, 1943-09-01\n# Defence (Daylight Saving) Regulations, 1944, 1944-03-21\n# [Defence (Daylight Saving) (Amendment) Regulations 1944, 1944-03-28]\n# Defence (Daylight Saving) (Repeal) Regulations, 1944, 1944-08-30\n#\n# 1914-, Subsidiary Legis., Annual Vols. OCLC Number: 226290591\n# 1942: Image Nos. 527-528, 555-556\n# 1943: Image Nos. 178-179, 198\n# 1944: Image Nos. 113-115, 129\n# http://llmc.com/titledescfull.aspx?type=2&coll=85&div=297&set=98437\n#\n# From Tim Parenti (2021-02-20):\n# The transitions below are derived from P Chan's sources, except that the 1977\n# through 1980 transitions are from Shanks & Pottenger since we have no better\n# data there.  Of particular note, the 1944 DST regulation only advanced the\n# time to \"exactly three and a half hours later than Greenwich mean time\", as\n# opposed to \"three hours\" in the 1942 and 1943 regulations.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tBarb\t1942\tonly\t-\tApr\t19\t5:00u\t1:00\tD\nRule\tBarb\t1942\tonly\t-\tAug\t31\t6:00u\t0\tS\nRule\tBarb\t1943\tonly\t-\tMay\t 2\t5:00u\t1:00\tD\nRule\tBarb\t1943\tonly\t-\tSep\t 5\t6:00u\t0\tS\nRule\tBarb\t1944\tonly\t-\tApr\t10\t5:00u\t0:30\t-\nRule\tBarb\t1944\tonly\t-\tSep\t10\t6:00u\t0\tS\nRule\tBarb\t1977\tonly\t-\tJun\t12\t2:00\t1:00\tD\nRule\tBarb\t1977\t1978\t-\tOct\tSun>=1\t2:00\t0\tS\nRule\tBarb\t1978\t1980\t-\tApr\tSun>=15\t2:00\t1:00\tD\nRule\tBarb\t1979\tonly\t-\tSep\t30\t2:00\t0\tS\nRule\tBarb\t1980\tonly\t-\tSep\t25\t2:00\t0\tS\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n\t\t#STDOFF\t-3:58:29.2\nZone America/Barbados\t-3:58:29 -\tLMT\t1911 Aug 28 # Bridgetown\n\t\t\t-4:00\tBarb\tA%sT\t1944\n\t\t\t-4:00\tBarb\tAST/-0330 1945\n\t\t\t-4:00\tBarb\tA%sT\n\n# Belize\n\n# From P Chan (2020-11-03):\n# Below are some laws related to the time in British Honduras/Belize:\n#\n# Definition of Time Ordinance, 1927 (No.4 of 1927) [1927-04-01]\n# Ordinances of British Honduras Passed in the Year 1927, p 19-20\n# https://books.google.com/books?id=LqEpAQAAMAAJ&pg=RA3-PA19\n#\n# Definition of Time (Amendment) Ordinance, 1942 (No. 5 of 1942) [1942-06-27]\n# Ordinances of British Honduras Passed in the Year 1942, p 31-32\n# https://books.google.com/books?id=h6MpAQAAMAAJ&pg=RA6-PA95-IA44\n#\n# Definition of Time Ordinance, 1945 (No. 19 of 1945) [1945-12-15]\n# Ordinances of British Honduras Passed in the Year 1945, p 49-50\n# https://books.google.com/books?id=xaMpAQAAMAAJ&pg=RA2-PP1\n#\n# Definition of Time Ordinance, 1947 (No. 1 of 1947) [1947-03-11]\n# Ordinances of British Honduras Passed in the Year 1947, p 1-2\n# https://books.google.com/books?id=xaMpAQAAMAAJ&pg=RA3-PA1\n#\n# Time (Definition of) Ordinance  (Chapter 180)\n# The Laws of British Honduras in Force on the 15th Day of September, 1958 , Volume IV, p 2580\n# https://books.google.com/books?id=v5QpAQAAMAAJ&pg=PA2580\n#\n# Time (Definition of) (Amendment) Ordinance, 1968 (No. 13 of 1968) [1968-08-03]\n# https://books.google.com/books?id=xij7KEB_58wC&pg=RA1-PA428-IA9\n#\n# Definition of Time Act (Chapter 339)\n# Law of Belize, Revised Edition 2000\n# http://www.belizelaw.org/web/lawadmin/PDF%20files/cap339.pdf\n\n# From Paul Eggert (2020-11-03):\n# The transitions below are derived from P Chan's sources, except that the\n# 1973 through 1983 transitions are from Shanks & Pottenger since we have\n# no better data there.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tBelize\t1918\t1941\t-\tOct\tSat>=1\t24:00\t0:30\t-0530\nRule\tBelize\t1919\t1942\t-\tFeb\tSat>=8\t24:00\t0\tCST\nRule\tBelize\t1942\tonly\t-\tJun\t27\t24:00\t1:00\tCWT\nRule\tBelize\t1945\tonly\t-\tAug\t14\t23:00u\t1:00\tCPT\nRule\tBelize\t1945\tonly\t-\tDec\t15\t24:00\t0\tCST\nRule\tBelize\t1947\t1967\t-\tOct\tSat>=1\t24:00\t0:30\t-0530\nRule\tBelize\t1948\t1968\t-\tFeb\tSat>=8\t24:00\t0\tCST\nRule\tBelize\t1973\tonly\t-\tDec\t 5\t0:00\t1:00\tCDT\nRule\tBelize\t1974\tonly\t-\tFeb\t 9\t0:00\t0\tCST\nRule\tBelize\t1982\tonly\t-\tDec\t18\t0:00\t1:00\tCDT\nRule\tBelize\t1983\tonly\t-\tFeb\t12\t0:00\t0\tCST\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAmerica/Belize\t-5:52:48 -\tLMT\t1912 Apr  1\n\t\t\t-6:00\tBelize\t%s\n\n# Bermuda\n\n# From Paul Eggert (2022-07-27):\n# For 1899 Milne gives -4:19:18.3 as the meridian of the clock tower,\n# Bermuda dockyard, Ireland I.  This agrees with standard offset given in the\n# Daylight Saving Act, 1917 cited below.\n# It is not known when this time became standard for Bermuda; guess 1890.\n# The transition to -04 was specified by:\n# 1930: The Time Zone Act, 1929 (1929: No. 39) [1929-11-08]\n# https://books.google.com/books?id=7tdMAQAAIAAJ&pg=RA54-PP1\n\n# From P Chan (2020-11-20):\n# Most of the information can be found online from the Bermuda National\n# Library - Digital Collection which includes The Royal Gazette (RG) until 1957\n# https://bnl.contentdm.oclc.org/digital/\n# I will cite the ID.  For example, [10000] means\n# https://bnl.contentdm.oclc.org/digital/collection/BermudaNP02/id/10000\n#\n# 1917: Apr 5 midnight to Sep 30 midnight\n# Daylight Saving Act, 1917 (1917 No. 13) [1917-04-02]\n# Bermuda Acts and Resolves 1917, p 37-38\n# https://books.google.com/books?id=M-lCAQAAMAAJ&pg=PA36-IA2\n# RG, 1917-04-04, p 6 [42340] gives the spring forward date.\n#\n# 1918: Apr 13 midnight to Sep 15 midnight\n# Daylight Saving Act, 1918 (1918 No. 9) [1918-04-06]\n# Bermuda Acts and Resolves 1917, p 13\n# https://books.google.com/books?id=K-lCAQAAMAAJ&pg=RA1-PA7\n#\n# Note that local mean time was still used before 1930.\n#\n# During WWII, DST was introduced by Defence Regulations\n# 1942: Jan 11 02:00 to Oct 18 02:00 [113646], [115726]\n# 1943: Mar 21 02:00 to Oct 31 02:00 [116704], [118193]\n# 1944: Mar 12 02:00 to Nov 5 02:00 [119225], [121593]\n# 1945: Mar 11 02:00 to Nov 4 02:00 [122369], [124461]\n# RG, 1942-01-08, p 2, 1942-10-12, p 2 , 1943-03-06, p 2, 1943-09-03, p 1,\n# 1944-02-29, p 6, 1944-09-20, p 2, 1945-02-13, p 2, 1945-11-03, p 1\n#\n# In 1946, the House of Assembly rejected DST twice. [128686], [128076]\n# RG, 1946-03-16 p 1,1946-04-13 p 1\n#\n# 1947: third Sunday in May 02:00 to second Sunday in September 02:00\n# DST in 1947 was defined in the Daylight Saving Act, 1947 (1947: No. 12)\n# which expired at the end of the year.  [125784] ,[132405], [144454], [138226]\n# RG, 1947-02-27, p 1, 1947-05-15, p 1, 1947-09-13, p 1, 1947-12-30, p 1\n#\n# 1948-1952: fourth Sunday in May 02:00 to first Sunday in September 02:00\n# DST in 1948 was defined in the Daylight Saving Act, 1948 (1948 : No. 12)\n# which was set to expired at the end of the year but it was extended until\n# the end of 1952 and was not further extended.\n# [129802], [139403], [146008], [135240], [144330], [139049], [143309],\n# [148271], [149773], [153589], [153802], [155924]\n# RG, 1948-04-13, p 1, 1948-05-22, p 1, 1948-09-04, p 1, 1949-05-21, p1,\n# 1949-09-03, p 1, 1950-05-27 p 1, 1950-09-02, p 1, 1951-05-27, p 1,\n# 1951-09-01, p 1, 1952-05-23, p 1, 1952-09-26, p 1, 1952-12-21, p 8\n#\n# In 1953-1955, the House of Assembly rejected DST each year. [158996],\n# [162620], [166720] RG, 1953-05-02, p 1, 1954-04-01 p 1, 1955-03-12, p 1\n#\n# 1956: fourth Sunday in May 02:00 to last Sunday in October 02:00\n# Time Zone (Seasonal Variation) Act, 1956 (1956: No.44) [1956-05-25]\n# Bermuda Public Acts 1956, p 331-332\n# https://books.google.com/books?id=Xs1AlmD_cEwC&pg=PA63\n#\n# The extension of the Act was rejected by the House of Assembly. [176218]\n# RG, 1956-12-13, p 1\n#\n# From the Chronological Table of Public and Private Acts up to 1985, it seems\n# that there does not exist other Acts related to DST before 1973.\n# https://books.google.com/books?id=r9hMAQAAIAAJ&pg=RA23-PA1\n# Public Acts of the Legislature of the Islands of Bermuda, Together with\n# Statutory Instruments in Force Thereunder, Vol VII\n\n# From Dan Jones, reporting in The Royal Gazette (2006-06-26):\n# Next year, however, clocks in the US will go forward on the second Sunday\n# in March, until the first Sunday in November.  And, after the Time Zone\n# (Seasonal Variation) Bill 2006 was passed in the House of Assembly on\n# Friday, the same thing will happen in Bermuda.\n# http://www.theroyalgazette.com/apps/pbcs.dll/article?AID=/20060529/NEWS/105290135\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tBermuda\t1917\tonly\t-\tApr\t 5\t24:00\t1:00\t-\nRule\tBermuda\t1917\tonly\t-\tSep\t30\t24:00\t0\t-\nRule\tBermuda\t1918\tonly\t-\tApr\t13\t24:00\t1:00\t-\nRule\tBermuda\t1918\tonly\t-\tSep\t15\t24:00\t0\tS\nRule\tBermuda\t1942\tonly\t-\tJan\t11\t 2:00\t1:00\tD\nRule\tBermuda\t1942\tonly\t-\tOct\t18\t 2:00\t0\tS\nRule\tBermuda\t1943\tonly\t-\tMar\t21\t 2:00\t1:00\tD\nRule\tBermuda\t1943\tonly\t-\tOct\t31\t 2:00\t0\tS\nRule\tBermuda\t1944\t1945\t-\tMar\tSun>=8\t 2:00\t1:00\tD\nRule\tBermuda\t1944\t1945\t-\tNov\tSun>=1\t 2:00\t0\tS\nRule\tBermuda\t1947\tonly\t-\tMay\tSun>=15\t 2:00\t1:00\tD\nRule\tBermuda\t1947\tonly\t-\tSep\tSun>=8\t 2:00\t0\tS\nRule\tBermuda\t1948\t1952\t-\tMay\tSun>=22\t 2:00\t1:00\tD\nRule\tBermuda\t1948\t1952\t-\tSep\tSun>=1\t 2:00\t0\tS\nRule\tBermuda\t1956\tonly\t-\tMay\tSun>=22\t 2:00\t1:00\tD\nRule\tBermuda\t1956\tonly\t-\tOct\tlastSun\t 2:00\t0\tS\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n\t\t#STDOFF\t-4:19:18.3\nZone Atlantic/Bermuda\t-4:19:18 -\tLMT\t1890\t# Hamilton\n\t\t\t-4:19:18 Bermuda BMT/BST 1930 Jan 1  2:00\n\t\t\t-4:00\tBermuda\tA%sT\t1974 Apr 28  2:00\n\t\t\t-4:00\tCanada\tA%sT\t1976\n\t\t\t-4:00\tUS\tA%sT\n\n# Costa Rica\n\n# Milne gives -5:36:13.3 as San José mean time.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tCR\t1979\t1980\t-\tFeb\tlastSun\t0:00\t1:00\tD\nRule\tCR\t1979\t1980\t-\tJun\tSun>=1\t0:00\t0\tS\nRule\tCR\t1991\t1992\t-\tJan\tSat>=15\t0:00\t1:00\tD\n# IATA SSIM (1991-09) says the following was at 1:00;\n# go with Shanks & Pottenger.\nRule\tCR\t1991\tonly\t-\tJul\t 1\t0:00\t0\tS\nRule\tCR\t1992\tonly\t-\tMar\t15\t0:00\t0\tS\n# There are too many San Josés elsewhere, so we'll use 'Costa Rica'.\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n\t\t#STDOFF\t-5:36:13.3\nZone America/Costa_Rica\t-5:36:13 -\tLMT\t1890        # San José\n\t\t\t-5:36:13 -\tSJMT\t1921 Jan 15 # San José Mean Time\n\t\t\t-6:00\tCR\tC%sT\n# Coco\n# no information; probably like America/Costa_Rica\n\n# Cuba\n\n# From Paul Eggert (2013-02-21):\n# Milne gives -5:28:50.45 for the observatory at Havana, -5:29:23.57\n# for the port, and -5:30 for meteorological observations.\n# For now, stick with Shanks & Pottenger.\n\n# From Arthur David Olson (1999-03-29):\n# The 1999-03-28 exhibition baseball game held in Havana, Cuba, between\n# the Cuban National Team and the Baltimore Orioles was carried live on\n# the Orioles Radio Network, including affiliate WTOP in Washington, DC.\n# During the game, play-by-play announcer Jim Hunter noted that\n# \"We'll be losing two hours of sleep...Cuba switched to Daylight Saving\n# Time today.\"  (The \"two hour\" remark referred to losing one hour of\n# sleep on 1999-03-28 - when the announcers were in Cuba as it switched\n# to DST - and one more hour on 1999-04-04 - when the announcers will have\n# returned to Baltimore, which switches on that date.)\n\n# From Steffen Thorsen (2013-11-11):\n# DST start in Cuba in 2004 ... does not follow the same rules as the\n# years before.  The correct date should be Sunday 2004-03-28 00:00 ...\n# https://web.archive.org/web/20040402060750/http://www.granma.cu/espanol/2004/marzo/sab27/reloj.html\n\n# From Evert van der Veer via Steffen Thorsen (2004-10-28):\n# Cuba is not going back to standard time this year.\n# From Paul Eggert (2006-03-22):\n# http://www.granma.cu/ingles/2004/septiembre/juev30/41medid-i.html\n# says that it's due to a problem at the Antonio Guiteras\n# thermoelectric plant, and says \"This October there will be no return\n# to normal hours (after daylight saving time)\".\n# For now, let's assume that it's a temporary measure.\n\n# From Carlos A. Carnero Delgado (2005-11-12):\n# This year (just like in 2004-2005) there's no change in time zone\n# adjustment in Cuba.  We will stay in daylight saving time:\n# http://www.granma.cu/espanol/2005/noviembre/mier9/horario.html\n\n# From Jesper Nørgaard Welen (2006-10-21):\n# An article in GRANMA INTERNACIONAL claims that Cuba will end\n# the 3 years of permanent DST next weekend, see\n# http://www.granma.cu/ingles/2006/octubre/lun16/43horario.html\n# \"On Saturday night, October 28 going into Sunday, October 29, at 01:00,\n# watches should be set back one hour - going back to 00:00 hours - returning\n# to the normal schedule....\n\n# From Paul Eggert (2007-03-02):\n# <http://www.granma.cubaweb.cu/english/news/art89.html>, dated yesterday,\n# says Cuban clocks will advance at midnight on March 10.\n# For lack of better information, assume Cuba will use US rules,\n# except that it switches at midnight standard time as usual.\n#\n# From Steffen Thorsen (2007-10-25):\n# Carlos Alberto Fonseca Arauz informed me that Cuba will end DST one week\n# earlier - on the last Sunday of October, just like in 2006.\n#\n# He supplied these references:\n#\n# http://www.prensalatina.com.mx/article.asp?ID={4CC32C1B-A9F7-42FB-8A07-8631AFC923AF}&language=ES\n# http://actualidad.terra.es/sociedad/articulo/cuba_llama_ahorrar_energia_cambio_1957044.htm\n#\n# From Alex Krivenyshev (2007-10-25):\n# Here is also article from Granma (Cuba):\n#\n# Regirá el Horario Normal desde el próximo domingo 28 de octubre\n# http://www.granma.cubaweb.cu/2007/10/24/nacional/artic07.html\n#\n# http://www.worldtimezone.com/dst_news/dst_news_cuba03.html\n\n# From Arthur David Olson (2008-03-09):\n# I'm in Maryland which is now observing United States Eastern Daylight\n# Time. At 9:44 local time I used RealPlayer to listen to\n# http://media.enet.cu/radioreloj\n# a Cuban information station, and heard\n# the time announced as \"ocho cuarenta y cuatro\" (\"eight forty-four\"),\n# indicating that Cuba is still on standard time.\n\n# From Steffen Thorsen (2008-03-12):\n# It seems that Cuba will start DST on Sunday, 2007-03-16...\n# It was announced yesterday, according to this source (in Spanish):\n# http://www.nnc.cubaweb.cu/marzo-2008/cien-1-11-3-08.htm\n#\n# Some more background information is posted here:\n# https://www.timeanddate.com/news/time/cuba-starts-dst-march-16.html\n#\n# The article also says that Cuba has been observing DST since 1963,\n# while Shanks (and tzdata) has 1965 as the first date (except in the\n# 1940's). Many other web pages in Cuba also claim that it has been\n# observed since 1963, but with the exception of 1970 - an exception\n# which is not present in tzdata/Shanks. So there is a chance we need to\n# change some historic records as well.\n#\n# One example:\n# http://www.radiohc.cu/espanol/noticias/mar07/11mar/hor.htm\n\n# From Jesper Nørgaard Welen (2008-03-13):\n# The Cuban time change has just been confirmed on the most authoritative\n# web site, the Granma.  Please check out\n# http://www.granma.cubaweb.cu/2008/03/13/nacional/artic10.html\n#\n# Basically as expected after Steffen Thorsen's information, the change\n# will take place midnight between Saturday and Sunday.\n\n# From Arthur David Olson (2008-03-12):\n# Assume Sun>=15 (third Sunday) going forward.\n\n# From Alexander Krivenyshev (2009-03-04)\n# According to the Radio Reloj - Cuba will start Daylight Saving Time on\n# midnight between Saturday, March 07, 2009 and Sunday, March 08, 2009-\n# not on midnight March 14 / March 15 as previously thought.\n#\n# http://www.worldtimezone.com/dst_news/dst_news_cuba05.html\n# (in Spanish)\n\n# From Arthur David Olson (2009-03-09)\n# I listened over the Internet to\n# http://media.enet.cu/readioreloj\n# this morning; when it was 10:05 a. m. here in Bethesda, Maryland the\n# the time was announced as \"diez cinco\" - the same time as here, indicating\n# that has indeed switched to DST. Assume second Sunday from 2009 forward.\n\n# From Steffen Thorsen (2011-03-08):\n# Granma announced that Cuba is going to start DST on 2011-03-20 00:00:00\n# this year. Nothing about the end date known so far (if that has\n# changed at all).\n#\n# Source:\n# http://granma.co.cu/2011/03/08/nacional/artic01.html\n#\n# Our info:\n# https://www.timeanddate.com/news/time/cuba-starts-dst-2011.html\n#\n# From Steffen Thorsen (2011-10-30)\n# Cuba will end DST two weeks later this year. Instead of going back\n# tonight, it has been delayed to 2011-11-13 at 01:00.\n#\n# One source (Spanish)\n# http://www.radioangulo.cu/noticias/cuba/17105-cuba-restablecera-el-horario-del-meridiano-de-greenwich.html\n#\n# Our page:\n# https://www.timeanddate.com/news/time/cuba-time-changes-2011.html\n#\n# From Steffen Thorsen (2012-03-01)\n# According to Radio Reloj, Cuba will start DST on Midnight between March\n# 31 and April 1.\n#\n# Radio Reloj has the following info (Spanish):\n# http://www.radioreloj.cu/index.php/noticias-radio-reloj/71-miscelaneas/7529-cuba-aplicara-el-horario-de-verano-desde-el-1-de-abril\n#\n# Our info on it:\n# https://www.timeanddate.com/news/time/cuba-starts-dst-2012.html\n\n# From Steffen Thorsen (2012-11-03):\n# Radio Reloj and many other sources report that Cuba is changing back\n# to standard time on 2012-11-04:\n# http://www.radioreloj.cu/index.php/noticias-radio-reloj/36-nacionales/9961-regira-horario-normal-en-cuba-desde-el-domingo-cuatro-de-noviembre\n# From Paul Eggert (2012-11-03):\n# For now, assume the future rule is first Sunday in November.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tCuba\t1928\tonly\t-\tJun\t10\t0:00\t1:00\tD\nRule\tCuba\t1928\tonly\t-\tOct\t10\t0:00\t0\tS\nRule\tCuba\t1940\t1942\t-\tJun\tSun>=1\t0:00\t1:00\tD\nRule\tCuba\t1940\t1942\t-\tSep\tSun>=1\t0:00\t0\tS\nRule\tCuba\t1945\t1946\t-\tJun\tSun>=1\t0:00\t1:00\tD\nRule\tCuba\t1945\t1946\t-\tSep\tSun>=1\t0:00\t0\tS\nRule\tCuba\t1965\tonly\t-\tJun\t1\t0:00\t1:00\tD\nRule\tCuba\t1965\tonly\t-\tSep\t30\t0:00\t0\tS\nRule\tCuba\t1966\tonly\t-\tMay\t29\t0:00\t1:00\tD\nRule\tCuba\t1966\tonly\t-\tOct\t2\t0:00\t0\tS\nRule\tCuba\t1967\tonly\t-\tApr\t8\t0:00\t1:00\tD\nRule\tCuba\t1967\t1968\t-\tSep\tSun>=8\t0:00\t0\tS\nRule\tCuba\t1968\tonly\t-\tApr\t14\t0:00\t1:00\tD\nRule\tCuba\t1969\t1977\t-\tApr\tlastSun\t0:00\t1:00\tD\nRule\tCuba\t1969\t1971\t-\tOct\tlastSun\t0:00\t0\tS\nRule\tCuba\t1972\t1974\t-\tOct\t8\t0:00\t0\tS\nRule\tCuba\t1975\t1977\t-\tOct\tlastSun\t0:00\t0\tS\nRule\tCuba\t1978\tonly\t-\tMay\t7\t0:00\t1:00\tD\nRule\tCuba\t1978\t1990\t-\tOct\tSun>=8\t0:00\t0\tS\nRule\tCuba\t1979\t1980\t-\tMar\tSun>=15\t0:00\t1:00\tD\nRule\tCuba\t1981\t1985\t-\tMay\tSun>=5\t0:00\t1:00\tD\nRule\tCuba\t1986\t1989\t-\tMar\tSun>=14\t0:00\t1:00\tD\nRule\tCuba\t1990\t1997\t-\tApr\tSun>=1\t0:00\t1:00\tD\nRule\tCuba\t1991\t1995\t-\tOct\tSun>=8\t0:00s\t0\tS\nRule\tCuba\t1996\tonly\t-\tOct\t 6\t0:00s\t0\tS\nRule\tCuba\t1997\tonly\t-\tOct\t12\t0:00s\t0\tS\nRule\tCuba\t1998\t1999\t-\tMar\tlastSun\t0:00s\t1:00\tD\nRule\tCuba\t1998\t2003\t-\tOct\tlastSun\t0:00s\t0\tS\nRule\tCuba\t2000\t2003\t-\tApr\tSun>=1\t0:00s\t1:00\tD\nRule\tCuba\t2004\tonly\t-\tMar\tlastSun\t0:00s\t1:00\tD\nRule\tCuba\t2006\t2010\t-\tOct\tlastSun\t0:00s\t0\tS\nRule\tCuba\t2007\tonly\t-\tMar\tSun>=8\t0:00s\t1:00\tD\nRule\tCuba\t2008\tonly\t-\tMar\tSun>=15\t0:00s\t1:00\tD\nRule\tCuba\t2009\t2010\t-\tMar\tSun>=8\t0:00s\t1:00\tD\nRule\tCuba\t2011\tonly\t-\tMar\tSun>=15\t0:00s\t1:00\tD\nRule\tCuba\t2011\tonly\t-\tNov\t13\t0:00s\t0\tS\nRule\tCuba\t2012\tonly\t-\tApr\t1\t0:00s\t1:00\tD\nRule\tCuba\t2012\tmax\t-\tNov\tSun>=1\t0:00s\t0\tS\nRule\tCuba\t2013\tmax\t-\tMar\tSun>=8\t0:00s\t1:00\tD\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAmerica/Havana\t-5:29:28 -\tLMT\t1890\n\t\t\t-5:29:36 -\tHMT\t1925 Jul 19 12:00 # Havana MT\n\t\t\t-5:00\tCuba\tC%sT\n\n# Dominican Republic\n\n# From Steffen Thorsen (2000-10-30):\n# Enrique Morales reported to me that the Dominican Republic has changed the\n# time zone to Eastern Standard Time as of Sunday 29 at 2 am....\n# http://www.listin.com.do/antes/261000/republica/princi.html\n\n# From Paul Eggert (2000-12-04):\n# That URL (2000-10-26, in Spanish) says they planned to use US-style DST.\n\n# From Rives McDow (2000-12-01):\n# Dominican Republic changed its mind and presidential decree on Tuesday,\n# November 28, 2000, with a new decree.  On Sunday, December 3 at 1:00 AM the\n# Dominican Republic will be reverting to 8 hours from the International Date\n# Line, and will not be using DST in the foreseeable future.  The reason they\n# decided to use DST was to be in synch with Puerto Rico, who was also going\n# to implement DST.  When Puerto Rico didn't implement DST, the president\n# decided to revert.\n\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tDR\t1966\tonly\t-\tOct\t30\t0:00\t1:00\tEDT\nRule\tDR\t1967\tonly\t-\tFeb\t28\t0:00\t0\tEST\nRule\tDR\t1969\t1973\t-\tOct\tlastSun\t0:00\t0:30\t-0430\nRule\tDR\t1970\tonly\t-\tFeb\t21\t0:00\t0\tEST\nRule\tDR\t1971\tonly\t-\tJan\t20\t0:00\t0\tEST\nRule\tDR\t1972\t1974\t-\tJan\t21\t0:00\t0\tEST\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Santo_Domingo -4:39:36 -\tLMT\t1890\n\t\t\t-4:40\t-\tSDMT\t1933 Apr  1 12:00 # S. Dom. MT\n\t\t\t-5:00\tDR\t%s\t1974 Oct 27\n\t\t\t-4:00\t-\tAST\t2000 Oct 29  2:00\n\t\t\t-5:00\tUS\tE%sT\t2000 Dec  3  1:00\n\t\t\t-4:00\t-\tAST\n\n# El Salvador\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tSalv\t1987\t1988\t-\tMay\tSun>=1\t0:00\t1:00\tD\nRule\tSalv\t1987\t1988\t-\tSep\tlastSun\t0:00\t0\tS\n# There are too many San Salvadors elsewhere, so use America/El_Salvador\n# instead of America/San_Salvador.\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/El_Salvador -5:56:48 -\tLMT\t1921 # San Salvador\n\t\t\t-6:00\tSalv\tC%sT\n\n# Guatemala\n#\n# From Gwillim Law (2006-04-22), after a heads-up from Oscar van Vlijmen:\n# Diario Co Latino, at\n# <http://www.diariocolatino.com/internacionales/detalles.asp?NewsID=8079>,\n# says in an article dated 2006-04-19 that the Guatemalan government had\n# decided on that date to advance official time by 60 minutes, to lessen the\n# impact of the elevated cost of oil....  Daylight saving time will last from\n# 2006-04-29 24:00 (Guatemalan standard time) to 2006-09-30 (time unspecified).\n# From Paul Eggert (2006-06-22):\n# The Ministry of Energy and Mines, press release CP-15/2006\n# (2006-04-19), says DST ends at 24:00.  See\n# http://www.sieca.org.gt/Sitio_publico/Energeticos/Doc/Medidas/Cambio_Horario_Nac_190406.pdf\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tGuat\t1973\tonly\t-\tNov\t25\t0:00\t1:00\tD\nRule\tGuat\t1974\tonly\t-\tFeb\t24\t0:00\t0\tS\nRule\tGuat\t1983\tonly\t-\tMay\t21\t0:00\t1:00\tD\nRule\tGuat\t1983\tonly\t-\tSep\t22\t0:00\t0\tS\nRule\tGuat\t1991\tonly\t-\tMar\t23\t0:00\t1:00\tD\nRule\tGuat\t1991\tonly\t-\tSep\t 7\t0:00\t0\tS\nRule\tGuat\t2006\tonly\t-\tApr\t30\t0:00\t1:00\tD\nRule\tGuat\t2006\tonly\t-\tOct\t 1\t0:00\t0\tS\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Guatemala\t-6:02:04 -\tLMT\t1918 Oct 5\n\t\t\t-6:00\tGuat\tC%sT\n\n# Haiti\n# From Gwillim Law (2005-04-15):\n# Risto O. Nykänen wrote me that Haiti is now on DST.\n# I searched for confirmation, and I found a press release\n# on the Web page of the Haitian Consulate in Chicago (2005-03-31),\n# <http://www.haitianconsulate.org/time.doc>.  Translated from French, it says:\n#\n#  \"The Prime Minister's Communication Office notifies the public in general\n#   and the press in particular that, following a decision of the Interior\n#   Ministry and the Territorial Collectivities [I suppose that means the\n#   provinces], Haiti will move to Eastern Daylight Time in the night from next\n#   Saturday the 2nd to Sunday the 3rd.\n#\n#  \"Consequently, the Prime Minister's Communication Office wishes to inform\n#   the population that the country's clocks will be set forward one hour\n#   starting at midnight.  This provision will hold until the last Saturday in\n#   October 2005.\n#\n#  \"Port-au-Prince, March 31, 2005\"\n#\n# From Steffen Thorsen (2006-04-04):\n# I have been informed by users that Haiti observes DST this year like\n# last year, so the current \"only\" rule for 2005 might be changed to a\n# \"max\" rule or to last until 2006. (Who knows if they will observe DST\n# next year or if they will extend their DST like US/Canada next year).\n#\n# I have found this article about it (in French):\n# http://www.haitipressnetwork.com/news.cfm?articleID=7612\n#\n# The reason seems to be an energy crisis.\n\n# From Stephen Colebourne (2007-02-22):\n# Some IATA info: Haiti won't be having DST in 2007.\n\n# From Steffen Thorsen (2012-03-11):\n# According to several news sources, Haiti will observe DST this year,\n# apparently using the same start and end date as USA/Canada.\n# So this means they have already changed their time.\n#\n# http://www.alterpresse.org/spip.php?article12510\n# http://radiovision2000haiti.net/home/?p=13253\n#\n# From Arthur David Olson (2012-03-11):\n# The alterpresse.org source seems to show a US-style leap from 2:00 a.m. to\n# 3:00 a.m. rather than the traditional Haitian jump at midnight.\n# Assume a US-style fall back as well.\n\n# From Steffen Thorsen (2013-03-10):\n# It appears that Haiti is observing DST this year as well, same rules\n# as US/Canada.  They did it last year as well, and it looks like they\n# are going to observe DST every year now...\n#\n# http://radiovision2000haiti.net/public/haiti-avis-changement-dheure-dimanche/\n# http://www.canalplushaiti.net/?p=6714\n\n# From Steffen Thorsen (2016-03-12):\n# Jean Antoine, editor of www.haiti-reference.com informed us that Haiti\n# are not going on DST this year.  Several other resources confirm this: ...\n# https://www.radiotelevisioncaraibes.com/presse/heure_d_t_pas_de_changement_d_heure_pr_vu_pour_cet_ann_e.html\n# https://www.vantbefinfo.com/changement-dheure-pas-pour-haiti/\n# http://news.anmwe.com/haiti-lheure-nationale-ne-sera-ni-avancee-ni-reculee-cette-annee/\n\n# From Steffen Thorsen (2017-03-12):\n# We have received 4 mails from different people telling that Haiti\n# has started DST again today, and this source seems to confirm that,\n# I have not been able to find a more authoritative source:\n# https://www.haitilibre.com/en/news-20319-haiti-notices-time-change-in-haiti.html\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tHaiti\t1983\tonly\t-\tMay\t8\t0:00\t1:00\tD\nRule\tHaiti\t1984\t1987\t-\tApr\tlastSun\t0:00\t1:00\tD\nRule\tHaiti\t1983\t1987\t-\tOct\tlastSun\t0:00\t0\tS\n# Shanks & Pottenger say AT is 2:00, but IATA SSIM (1991/1997) says 1:00s.\n# Go with IATA.\nRule\tHaiti\t1988\t1997\t-\tApr\tSun>=1\t1:00s\t1:00\tD\nRule\tHaiti\t1988\t1997\t-\tOct\tlastSun\t1:00s\t0\tS\nRule\tHaiti\t2005\t2006\t-\tApr\tSun>=1\t0:00\t1:00\tD\nRule\tHaiti\t2005\t2006\t-\tOct\tlastSun\t0:00\t0\tS\nRule\tHaiti\t2012\t2015\t-\tMar\tSun>=8\t2:00\t1:00\tD\nRule\tHaiti\t2012\t2015\t-\tNov\tSun>=1\t2:00\t0\tS\nRule\tHaiti\t2017\tmax\t-\tMar\tSun>=8\t2:00\t1:00\tD\nRule\tHaiti\t2017\tmax\t-\tNov\tSun>=1\t2:00\t0\tS\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Port-au-Prince -4:49:20 -\tLMT\t1890\n\t\t\t-4:49\t-\tPPMT\t1917 Jan 24 12:00 # P-a-P MT\n\t\t\t-5:00\tHaiti\tE%sT\n\n# Honduras\n# Shanks & Pottenger say 1921 Jan 1; go with Whitman's more precise Apr 1.\n\n# From Paul Eggert (2006-05-05):\n# worldtimezone.com reports a 2006-05-02 Spanish-language AP article\n# saying Honduras will start using DST midnight Saturday, effective 4\n# months until September.  La Tribuna reported today\n# <http://www.latribuna.hn/99299.html> that Manuel Zelaya, the president\n# of Honduras, refused to back down on this.\n\n# From Jesper Nørgaard Welen (2006-08-08):\n# It seems that Honduras has returned from DST to standard time this Monday at\n# 00:00 hours (prolonging Sunday to 25 hours duration).\n# http://www.worldtimezone.com/dst_news/dst_news_honduras04.html\n\n# From Paul Eggert (2006-08-08):\n# Also see Diario El Heraldo, The country returns to standard time (2006-08-08).\n# http://www.elheraldo.hn/nota.php?nid=54941&sec=12\n# It mentions executive decree 18-2006.\n\n# From Steffen Thorsen (2006-08-17):\n# Honduras will observe DST from 2007 to 2009, exact dates are not\n# published, I have located this authoritative source:\n# http://www.presidencia.gob.hn/noticia.aspx?nId=47\n\n# From Steffen Thorsen (2007-03-30):\n# http://www.laprensahn.com/pais_nota.php?id04962=7386\n# So it seems that Honduras will not enter DST this year....\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tHond\t1987\t1988\t-\tMay\tSun>=1\t0:00\t1:00\tD\nRule\tHond\t1987\t1988\t-\tSep\tlastSun\t0:00\t0\tS\nRule\tHond\t2006\tonly\t-\tMay\tSun>=1\t0:00\t1:00\tD\nRule\tHond\t2006\tonly\t-\tAug\tMon>=1\t0:00\t0\tS\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Tegucigalpa -5:48:52 -\tLMT\t1921 Apr\n\t\t\t-6:00\tHond\tC%sT\n#\n# Great Swan I ceded by US to Honduras in 1972\n\n# Jamaica\n# Shanks & Pottenger give -5:07:12, but Milne records -5:07:10.41 from an\n# unspecified official document, and says \"This time is used throughout the\n# island\".  Go with Milne.\n#\n# Shanks & Pottenger give April 28 for the 1974 spring-forward transition, but\n# Lance Neita writes that Prime Minister Michael Manley decreed it January 5.\n# Assume Neita meant Jan 6 02:00, the same as the US.  Neita also writes that\n# Manley's supporters associated this act with Manley's nickname \"Joshua\"\n# (recall that in the Bible the sun stood still at Joshua's request),\n# and with the Rod of Correction which Manley said he had received from\n# Haile Selassie, Emperor of Ethiopia.  See:\n# Neita L. The politician in all of us. Jamaica Observer 2014-09-20\n# http://www.jamaicaobserver.com/columns/The-politician-in-all-of-us_17573647\n#\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n\t\t#STDOFF\t-5:07:10.41\nZone\tAmerica/Jamaica\t-5:07:10 -\tLMT\t1890        # Kingston\n\t\t\t-5:07:10 -\tKMT\t1912 Feb    # Kingston Mean Time\n\t\t\t-5:00\t-\tEST\t1974\n\t\t\t-5:00\tUS\tE%sT\t1984\n\t\t\t-5:00\t-\tEST\n\n# Martinique\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Martinique\t-4:04:20 -      LMT\t1890        # Fort-de-France\n\t\t\t-4:04:20 -\tFFMT\t1911 May  1 # Fort-de-France MT\n\t\t\t-4:00\t-\tAST\t1980 Apr  6\n\t\t\t-4:00\t1:00\tADT\t1980 Sep 28\n\t\t\t-4:00\t-\tAST\n\n# Nicaragua\n#\n# This uses Shanks & Pottenger for times before 2005.\n#\n# From Steffen Thorsen (2005-04-12):\n# I've got reports from 8 different people that Nicaragua just started\n# DST on Sunday 2005-04-10, in order to save energy because of\n# expensive petroleum.  The exact end date for DST is not yet\n# announced, only \"September\" but some sites also say \"mid-September\".\n# Some background information is available on the President's official site:\n# http://www.presidencia.gob.ni/Presidencia/Files_index/Secretaria/Notas%20de%20Prensa/Presidente/2005/ABRIL/Gobierno-de-nicaragua-adelanta-hora-oficial-06abril.htm\n# The Decree, no 23-2005 is available here:\n# http://www.presidencia.gob.ni/buscador_gaceta/BD/DECRETOS/2005/Decreto%2023-2005%20Se%20adelanta%20en%20una%20hora%20en%20todo%20el%20territorio%20nacional%20apartir%20de%20las%2024horas%20del%2009%20de%20Abril.pdf\n#\n# From Paul Eggert (2005-05-01):\n# The decree doesn't say anything about daylight saving, but for now let's\n# assume that it is daylight saving....\n#\n# From Gwillim Law (2005-04-21):\n# The Associated Press story on the time change, which can be found at\n# http://www.lapalmainteractivo.com/guias/content/gen/ap/America_Latina/AMC_GEN_NICARAGUA_HORA.html\n# and elsewhere, says (fifth paragraph, translated from Spanish): \"The last\n# time that a change of clocks was applied to save energy was in the year 2000\n# during the Arnoldo Alemán administration.\"...\n# The northamerica file says that Nicaragua has been on UTC-6 continuously\n# since December 1998.  I wasn't able to find any details of Nicaraguan time\n# changes in 2000.  Perhaps a note could be added to the northamerica file, to\n# the effect that we have indirect evidence that DST was observed in 2000.\n#\n# From Jesper Nørgaard Welen (2005-11-02):\n# Nicaragua left DST the 2005-10-02 at 00:00 (local time).\n# http://www.presidencia.gob.ni/presidencia/files_index/secretaria/comunicados/2005/septiembre/26septiembre-cambio-hora.htm\n# (2005-09-26)\n#\n# From Jesper Nørgaard Welen (2006-05-05):\n# http://www.elnuevodiario.com.ni/2006/05/01/nacionales/18410\n# (my informal translation)\n# By order of the president of the republic, Enrique Bolaños, Nicaragua\n# advanced by sixty minutes their official time, yesterday at 2 in the\n# morning, and will stay that way until 30th of September.\n#\n# From Jesper Nørgaard Welen (2006-09-30):\n# http://www.presidencia.gob.ni/buscador_gaceta/BD/DECRETOS/2006/D-063-2006P-PRN-Cambio-Hora.pdf\n# My informal translation runs:\n# The natural sun time is restored in all the national territory, in that the\n# time is returned one hour at 01:00 am of October 1 of 2006.\n#\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tNic\t1979\t1980\t-\tMar\tSun>=16\t0:00\t1:00\tD\nRule\tNic\t1979\t1980\t-\tJun\tMon>=23\t0:00\t0\tS\nRule\tNic\t2005\tonly\t-\tApr\t10\t0:00\t1:00\tD\nRule\tNic\t2005\tonly\t-\tOct\tSun>=1\t0:00\t0\tS\nRule\tNic\t2006\tonly\t-\tApr\t30\t2:00\t1:00\tD\nRule\tNic\t2006\tonly\t-\tOct\tSun>=1\t1:00\t0\tS\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAmerica/Managua\t-5:45:08 -\tLMT\t1890\n\t\t\t-5:45:12 -\tMMT\t1934 Jun 23 # Managua Mean Time?\n\t\t\t-6:00\t-\tCST\t1973 May\n\t\t\t-5:00\t-\tEST\t1975 Feb 16\n\t\t\t-6:00\tNic\tC%sT\t1992 Jan  1  4:00\n\t\t\t-5:00\t-\tEST\t1992 Sep 24\n\t\t\t-6:00\t-\tCST\t1993\n\t\t\t-5:00\t-\tEST\t1997\n\t\t\t-6:00\tNic\tC%sT\n\n# Cayman Is\n# Panama\n#\n# Atikokan and Coral Harbour, Canada, match Panama since 1970.\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAmerica/Panama\t-5:18:08 -\tLMT\t1890\n\t\t\t-5:19:36 -\tCMT\t1908 Apr 22 # Colón Mean Time\n\t\t\t-5:00\t-\tEST\n\n# Anguilla\n# Antigua & Barbuda\n# Aruba\n# Caribbean Netherlands\n# Curaçao\n# Dominica\n# Grenada\n# Guadeloupe\n# Montserrat\n# Puerto Rico\n# St Barthélemy\n# St Kitts-Nevis\n# Sint Maarten / St Martin\n# St Lucia\n# St Vincent & the Grenadines\n# Trinidad & Tobago\n# Virgin Is (UK & US)\n#\n# There are too many San Juans elsewhere, so we'll use 'Puerto_Rico'.\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Puerto_Rico -4:24:25 -\tLMT\t1899 Mar 28 12:00 # San Juan\n\t\t\t-4:00\t-\tAST\t1942 May  3\n\t\t\t-4:00\tUS\tA%sT\t1946\n\t\t\t-4:00\t-\tAST\n\n# St Pierre and Miquelon\n# There are too many St Pierres elsewhere, so we'll use 'Miquelon'.\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Miquelon\t-3:44:40 -\tLMT\t1911 Jun 15 # St Pierre\n\t\t\t-4:00\t-\tAST\t1980 May\n\t\t\t-3:00\t-\t%z\t1987\n\t\t\t-3:00\tCanada\t%z\n\n# Turks and Caicos\n#\n# From Chris Dunn in\n# https://bugs.debian.org/415007\n# (2007-03-15): In the Turks & Caicos Islands (America/Grand_Turk) the\n# daylight saving dates for time changes have been adjusted to match\n# the recent U.S. change of dates.\n#\n# From Brian Inglis (2007-04-28):\n# http://www.turksandcaicos.tc/calendar/index.htm [2007-04-26]\n# there is an entry for Nov 4 \"Daylight Savings Time Ends 2007\" and three\n# rows before that there is an out of date entry for Oct:\n# \"Eastern Standard Times Begins 2007\n# Clocks are set back one hour at 2:00 a.m. local Daylight Saving Time\"\n# indicating that the normal ET rules are followed.\n\n# From Paul Eggert (2014-08-19):\n# The 2014-08-13 Cabinet meeting decided to stay on UT -04 year-round.  See:\n# http://tcweeklynews.com/daylight-savings-time-to-be-maintained-p5353-127.htm\n# Model this as a switch from EST/EDT to AST ...\n# From Chris Walton (2014-11-04):\n# ... the TCI government appears to have delayed the switch to\n# \"permanent daylight saving time\" by one year....\n# http://tcweeklynews.com/time-change-to-go-ahead-this-november-p5437-127.htm\n#\n# From the Turks & Caicos Cabinet (2017-07-20), heads-up from Steffen Thorsen:\n# ... agreed to the reintroduction in TCI of Daylight Saving Time (DST)\n# during the summer months and Standard Time, also known as Local\n# Time, during the winter months with effect from April 2018 ...\n# https://www.gov.uk/government/news/turks-and-caicos-post-cabinet-meeting-statement--3\n# From Paul Eggert (2017-08-26):\n# The date of effect of the spring 2018 change appears to be March 11,\n# which makes more sense.  See: Hamilton D. Time change back\n# by March 2018 for TCI. Magnetic Media. 2017-08-25.\n# http://magneticmediatv.com/2017/08/time-change-back-by-march-2018-for-tci/\n#\n# From P Chan (2020-11-27):\n# Standard Time Declaration Order 2015 (L.N. 15/2015)\n# http://online.fliphtml5.com/fizd/czin/#p=2\n#\n# Standard Time Declaration Order 2017 (L.N. 31/2017)\n# http://online.fliphtml5.com/fizd/dmcu/#p=2\n#\n# From Tim Parenti (2020-12-05):\n# Although L.N. 31/2017 reads that it \"shall come into operation at 2:00 a.m.\n# on 11th March 2018\", a precise interpretation here poses some problems.  The\n# order states that \"the standard time to be observed throughout the Turks and\n# Caicos Islands shall be the same time zone as the Eastern United States of\n# America\" and further clarifies \"[f]or the avoidance of doubt\" that it\n# \"applies to the Eastern Standard Time as well as any changes thereto for\n# Daylight Saving Time.\"  However, as clocks in Turks and Caicos approached\n# 02:00 -04, and thus the declared implementation time, it was still 01:00 EST\n# (-05), as DST in the Eastern US would not start until an hour later.\n#\n# Since it is unlikely that those on the islands switched their clocks twice in\n# the span of an hour, we assume instead that the adoption of EDT actually took\n# effect once clocks in the Eastern US had sprung forward, from 03:00 -04.\n# This discrepancy only affects the time zone abbreviation and DST flag for the\n# intervening hour, not wall clock times, as -04 was maintained throughout.\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Grand_Turk\t-4:44:32 -\tLMT\t1890\n\t\t#STDOFF\t-5:07:10.41\n\t\t\t-5:07:10 -\tKMT\t1912 Feb # Kingston Mean Time\n\t\t\t-5:00\t-\tEST\t1979\n\t\t\t-5:00\tUS\tE%sT\t2015 Mar  8  2:00\n\t\t\t-4:00\t-\tAST\t2018 Mar 11  3:00\n\t\t\t-5:00\tUS\tE%sT\n\n# Local Variables:\n# coding: utf-8\n# End:\n"
        },
        {
          "name": "private.h",
          "type": "blob",
          "size": 28.908203125,
          "content": "/* Private header for tzdb code.  */\n\n#ifndef PRIVATE_H\n\n#define PRIVATE_H\n\n/*\n** This file is in the public domain, so clarified as of\n** 1996-06-05 by Arthur David Olson.\n*/\n\n/*\n** This header is for use ONLY with the time conversion code.\n** There is no guarantee that it will remain unchanged,\n** or that it will remain at all.\n** Do NOT copy it to any system include directory.\n** Thank you!\n*/\n\n/* PORT_TO_C89 means the code should work even if the underlying\n   compiler and library support only C89 plus C99's 'long long'\n   and perhaps a few other extensions to C89.\n\n   This macro is obsolescent, and the plan is to remove it along with\n   associated code.  A good time to do that might be in the year 2029\n   because RHEL 7 (whose GCC defaults to C89) extended life cycle\n   support (ELS) is scheduled to end on 2028-06-30.  */\n#ifndef PORT_TO_C89\n# define PORT_TO_C89 0\n#endif\n\n/* SUPPORT_C89 means the tzcode library should support C89 callers\n   in addition to the usual support for C99-and-later callers.\n   This defaults to 1 as POSIX requires, even though that can trigger\n   latent bugs in callers.  */\n#ifndef SUPPORT_C89\n# define SUPPORT_C89 1\n#endif\n\n\n/* The following feature-test macros should be defined before\n   any #include of a system header.  */\n\n/* Enable tm_gmtoff, tm_zone, and environ on GNUish systems.  */\n#define _GNU_SOURCE 1\n/* Fix asctime_r on Solaris 11.  */\n#define _POSIX_PTHREAD_SEMANTICS 1\n/* Enable strtoimax on pre-C99 Solaris 11.  */\n#define __EXTENSIONS__ 1\n/* Cause MS-Windows headers to define POSIX names.  */\n#define _CRT_DECLARE_NONSTDC_NAMES 1\n/* Prevent MS-Windows headers from defining min and max.  */\n#define NOMINMAX 1\n\n/* On GNUish systems where time_t might be 32 or 64 bits, use 64.\n   On these platforms _FILE_OFFSET_BITS must also be 64; otherwise\n   setting _TIME_BITS to 64 does not work.  The code does not\n   otherwise rely on _FILE_OFFSET_BITS being 64, since it does not\n   use off_t or functions like 'stat' that depend on off_t.  */\n#ifndef _TIME_BITS\n# ifndef _FILE_OFFSET_BITS\n#  define _FILE_OFFSET_BITS 64\n# endif\n# if _FILE_OFFSET_BITS == 64\n#  define _TIME_BITS 64\n# endif\n#endif\n\n/* End of feature-test macro definitions.  */\n\n\n#ifndef __STDC_VERSION__\n# define __STDC_VERSION__ 0\n#endif\n\n/* Define true, false and bool if they don't work out of the box.  */\n#if PORT_TO_C89 && __STDC_VERSION__ < 199901\n# define true 1\n# define false 0\n# define bool int\n#elif __STDC_VERSION__ < 202311\n# include <stdbool.h>\n#endif\n\n#if __STDC_VERSION__ < 202311\n# undef static_assert\n# define static_assert(cond) extern int static_assert_check[(cond) ? 1 : -1]\n#endif\n\n/*\n** zdump has been made independent of the rest of the time\n** conversion package to increase confidence in the verification it provides.\n** You can use zdump to help in verifying other implementations.\n** To do this, compile with -DUSE_LTZ=0 and link without the tz library.\n*/\n#ifndef USE_LTZ\n# define USE_LTZ 1\n#endif\n\n/* This string was in the Factory zone through version 2016f.  */\n#define GRANDPARENTED\t\"Local time zone must be set--see zic manual page\"\n\n/*\n** Defaults for preprocessor symbols.\n** You can override these in your C compiler options, e.g. '-DHAVE_GETTEXT=1'.\n*/\n\n#if !defined HAVE__GENERIC && defined __has_extension\n# if !__has_extension(c_generic_selections)\n#  define HAVE__GENERIC 0\n# endif\n#endif\n/* _Generic is buggy in pre-4.9 GCC.  */\n#if !defined HAVE__GENERIC && defined __GNUC__ && !defined __STRICT_ANSI__\n# define HAVE__GENERIC (4 < __GNUC__ + (9 <= __GNUC_MINOR__))\n#endif\n#ifndef HAVE__GENERIC\n# define HAVE__GENERIC (201112 <= __STDC_VERSION__)\n#endif\n\n#if !defined HAVE_GETTEXT && defined __has_include\n# if __has_include(<libintl.h>)\n#  define HAVE_GETTEXT 1\n# endif\n#endif\n#ifndef HAVE_GETTEXT\n# define HAVE_GETTEXT 0\n#endif\n\n#ifndef HAVE_INCOMPATIBLE_CTIME_R\n# define HAVE_INCOMPATIBLE_CTIME_R 0\n#endif\n\n#ifndef HAVE_LINK\n# define HAVE_LINK 1\n#endif /* !defined HAVE_LINK */\n\n#ifndef HAVE_MALLOC_ERRNO\n# define HAVE_MALLOC_ERRNO 1\n#endif\n\n#ifndef HAVE_POSIX_DECLS\n# define HAVE_POSIX_DECLS 1\n#endif\n\n#ifndef HAVE_SETENV\n# define HAVE_SETENV 1\n#endif\n\n#ifndef HAVE_STRDUP\n# define HAVE_STRDUP 1\n#endif\n\n#ifndef HAVE_SYMLINK\n# define HAVE_SYMLINK 1\n#endif /* !defined HAVE_SYMLINK */\n\n#if !defined HAVE_SYS_STAT_H && defined __has_include\n# if !__has_include(<sys/stat.h>)\n#  define HAVE_SYS_STAT_H 0\n# endif\n#endif\n#ifndef HAVE_SYS_STAT_H\n# define HAVE_SYS_STAT_H 1\n#endif\n\n#if !defined HAVE_UNISTD_H && defined __has_include\n# if !__has_include(<unistd.h>)\n#  define HAVE_UNISTD_H 0\n# endif\n#endif\n#ifndef HAVE_UNISTD_H\n# define HAVE_UNISTD_H 1\n#endif\n\n#ifndef NETBSD_INSPIRED\n# define NETBSD_INSPIRED 1\n#endif\n\n#if HAVE_INCOMPATIBLE_CTIME_R\n# define asctime_r _incompatible_asctime_r\n# define ctime_r _incompatible_ctime_r\n#endif /* HAVE_INCOMPATIBLE_CTIME_R */\n\n/*\n** Nested includes\n*/\n\n/* Avoid clashes with NetBSD by renaming NetBSD's declarations.\n   If defining the 'timezone' variable, avoid a clash with FreeBSD's\n   'timezone' function by renaming its declaration.  */\n#define localtime_rz sys_localtime_rz\n#define mktime_z sys_mktime_z\n#define posix2time_z sys_posix2time_z\n#define time2posix_z sys_time2posix_z\n#if defined USG_COMPAT && USG_COMPAT == 2\n# define timezone sys_timezone\n#endif\n#define timezone_t sys_timezone_t\n#define tzalloc sys_tzalloc\n#define tzfree sys_tzfree\n#include <time.h>\n#undef localtime_rz\n#undef mktime_z\n#undef posix2time_z\n#undef time2posix_z\n#if defined USG_COMPAT && USG_COMPAT == 2\n# undef timezone\n#endif\n#undef timezone_t\n#undef tzalloc\n#undef tzfree\n\n#include <stddef.h>\n#include <string.h>\n#if !PORT_TO_C89\n# include <inttypes.h>\n#endif\n#include <limits.h>\t/* for CHAR_BIT et al. */\n#include <stdlib.h>\n\n#include <errno.h>\n\n#ifndef EINVAL\n# define EINVAL ERANGE\n#endif\n\n#ifndef ELOOP\n# define ELOOP EINVAL\n#endif\n#ifndef ENAMETOOLONG\n# define ENAMETOOLONG EINVAL\n#endif\n#ifndef ENOMEM\n# define ENOMEM EINVAL\n#endif\n#ifndef ENOTSUP\n# define ENOTSUP EINVAL\n#endif\n#ifndef EOVERFLOW\n# define EOVERFLOW EINVAL\n#endif\n\n#if HAVE_GETTEXT\n# include <libintl.h>\n#endif /* HAVE_GETTEXT */\n\n#if HAVE_UNISTD_H\n# include <unistd.h> /* for R_OK, and other POSIX goodness */\n#endif /* HAVE_UNISTD_H */\n\n/* SUPPORT_POSIX2008 means the tzcode library should support\n   POSIX.1-2017-and-earlier callers in addition to the usual support for\n   POSIX.1-2024-and-later callers; however, this can be\n   incompatible with POSIX.1-2024-and-later callers.\n   This macro is obsolescent, and the plan is to remove it\n   along with any code needed only when it is nonzero.\n   A good time to do that might be in the year 2034.\n   This macro's name is SUPPORT_POSIX2008 because _POSIX_VERSION == 200809\n   in POSIX.1-2017, a minor revision of POSIX.1-2008.  */\n#ifndef SUPPORT_POSIX2008\n# if defined _POSIX_VERSION && _POSIX_VERSION <= 200809\n#  define SUPPORT_POSIX2008 1\n# else\n#  define SUPPORT_POSIX2008 0\n# endif\n#endif\n\n#ifndef HAVE_DECL_ASCTIME_R\n# if SUPPORT_POSIX2008\n#  define HAVE_DECL_ASCTIME_R 1\n# else\n#  define HAVE_DECL_ASCTIME_R 0\n# endif\n#endif\n\n#ifndef HAVE_SNPRINTF\n# define HAVE_SNPRINTF (!PORT_TO_C89 || 199901 <= __STDC_VERSION__)\n#endif\n\n#ifndef HAVE_STRFTIME_L\n# if _POSIX_VERSION < 200809\n#  define HAVE_STRFTIME_L 0\n# else\n#  define HAVE_STRFTIME_L 1\n# endif\n#endif\n\n#ifndef USG_COMPAT\n# ifndef _XOPEN_VERSION\n#  define USG_COMPAT 0\n# else\n#  define USG_COMPAT 1\n# endif\n#endif\n\n#ifndef HAVE_TZNAME\n# if _POSIX_VERSION < 198808 && !USG_COMPAT\n#  define HAVE_TZNAME 0\n# else\n#  define HAVE_TZNAME 1\n# endif\n#endif\n\n#ifndef ALTZONE\n# if defined __sun || defined _M_XENIX\n#  define ALTZONE 1\n# else\n#  define ALTZONE 0\n# endif\n#endif\n\n#ifndef R_OK\n# define R_OK 4\n#endif /* !defined R_OK */\n\n#if PORT_TO_C89\n\n/*\n** Define HAVE_STDINT_H's default value here, rather than at the\n** start, since __GLIBC__ and INTMAX_MAX's values depend on\n** previously included files.  glibc 2.1 and Solaris 10 and later have\n** stdint.h, even with pre-C99 compilers.\n*/\n#if !defined HAVE_STDINT_H && defined __has_include\n# define HAVE_STDINT_H 1 /* C23 __has_include implies C99 stdint.h.  */\n#endif\n#ifndef HAVE_STDINT_H\n# define HAVE_STDINT_H \\\n   (199901 <= __STDC_VERSION__ \\\n    || 2 < __GLIBC__ + (1 <= __GLIBC_MINOR__) \\\n    || __CYGWIN__ || INTMAX_MAX)\n#endif /* !defined HAVE_STDINT_H */\n\n#if HAVE_STDINT_H\n# include <stdint.h>\n#endif /* !HAVE_STDINT_H */\n\n#ifndef HAVE_INTTYPES_H\n# define HAVE_INTTYPES_H HAVE_STDINT_H\n#endif\n#if HAVE_INTTYPES_H\n# include <inttypes.h>\n#endif\n\n/* Pre-C99 GCC compilers define __LONG_LONG_MAX__ instead of LLONG_MAX.  */\n#if defined __LONG_LONG_MAX__ && !defined __STRICT_ANSI__\n# ifndef LLONG_MAX\n#  define LLONG_MAX __LONG_LONG_MAX__\n# endif\n# ifndef LLONG_MIN\n#  define LLONG_MIN (-1 - LLONG_MAX)\n# endif\n# ifndef ULLONG_MAX\n#  define ULLONG_MAX (LLONG_MAX * 2ull + 1)\n# endif\n#endif\n\n#ifndef INT_FAST64_MAX\n# if 1 <= LONG_MAX >> 31 >> 31\ntypedef long int_fast64_t;\n#  define INT_FAST64_MIN LONG_MIN\n#  define INT_FAST64_MAX LONG_MAX\n# else\n/* If this fails, compile with -DHAVE_STDINT_H or with a better compiler.  */\ntypedef long long int_fast64_t;\n#  define INT_FAST64_MIN LLONG_MIN\n#  define INT_FAST64_MAX LLONG_MAX\n# endif\n#endif\n\n#ifndef PRIdFAST64\n# if INT_FAST64_MAX == LONG_MAX\n#  define PRIdFAST64 \"ld\"\n# else\n#  define PRIdFAST64 \"lld\"\n# endif\n#endif\n\n#ifndef SCNdFAST64\n# define SCNdFAST64 PRIdFAST64\n#endif\n\n#ifndef INT_FAST32_MAX\n# if INT_MAX >> 31 == 0\ntypedef long int_fast32_t;\n#  define INT_FAST32_MAX LONG_MAX\n#  define INT_FAST32_MIN LONG_MIN\n# else\ntypedef int int_fast32_t;\n#  define INT_FAST32_MAX INT_MAX\n#  define INT_FAST32_MIN INT_MIN\n# endif\n#endif\n\n#ifndef INT_LEAST32_MAX\ntypedef int_fast32_t int_least32_t;\n#endif\n\n#ifndef INTMAX_MAX\n# ifdef LLONG_MAX\ntypedef long long intmax_t;\n#  ifndef HAVE_STRTOLL\n#   define HAVE_STRTOLL 1\n#  endif\n#  if HAVE_STRTOLL\n#   define strtoimax strtoll\n#  endif\n#  define INTMAX_MAX LLONG_MAX\n#  define INTMAX_MIN LLONG_MIN\n# else\ntypedef long intmax_t;\n#  define INTMAX_MAX LONG_MAX\n#  define INTMAX_MIN LONG_MIN\n# endif\n# ifndef strtoimax\n#  define strtoimax strtol\n# endif\n#endif\n\n#ifndef PRIdMAX\n# if INTMAX_MAX == LLONG_MAX\n#  define PRIdMAX \"lld\"\n# else\n#  define PRIdMAX \"ld\"\n# endif\n#endif\n\n#ifndef PTRDIFF_MAX\n# define PTRDIFF_MAX MAXVAL(ptrdiff_t, TYPE_BIT(ptrdiff_t))\n#endif\n\n#ifndef UINT_FAST32_MAX\ntypedef unsigned long uint_fast32_t;\n#endif\n\n#ifndef UINT_FAST64_MAX\n# if 3 <= ULONG_MAX >> 31 >> 31\ntypedef unsigned long uint_fast64_t;\n#  define UINT_FAST64_MAX ULONG_MAX\n# else\n/* If this fails, compile with -DHAVE_STDINT_H or with a better compiler.  */\ntypedef unsigned long long uint_fast64_t;\n#  define UINT_FAST64_MAX ULLONG_MAX\n# endif\n#endif\n\n#ifndef UINTMAX_MAX\n# ifdef ULLONG_MAX\ntypedef unsigned long long uintmax_t;\n#  define UINTMAX_MAX ULLONG_MAX\n# else\ntypedef unsigned long uintmax_t;\n#  define UINTMAX_MAX ULONG_MAX\n# endif\n#endif\n\n#ifndef PRIuMAX\n# ifdef ULLONG_MAX\n#  define PRIuMAX \"llu\"\n# else\n#  define PRIuMAX \"lu\"\n# endif\n#endif\n\n#ifndef SIZE_MAX\n# define SIZE_MAX ((size_t) -1)\n#endif\n\n#endif /* PORT_TO_C89 */\n\n/* The maximum size of any created object, as a signed integer.\n   Although the C standard does not outright prohibit larger objects,\n   behavior is undefined if the result of pointer subtraction does not\n   fit into ptrdiff_t, and the code assumes in several places that\n   pointer subtraction works.  As a practical matter it's OK to not\n   support objects larger than this.  */\n#define INDEX_MAX ((ptrdiff_t) min(PTRDIFF_MAX, SIZE_MAX))\n\n/* Support ckd_add, ckd_sub, ckd_mul on C23 or recent-enough GCC-like\n   hosts, unless compiled with -DHAVE_STDCKDINT_H=0 or with pre-C23 EDG.  */\n#if !defined HAVE_STDCKDINT_H && defined __has_include\n# if __has_include(<stdckdint.h>)\n#  define HAVE_STDCKDINT_H 1\n# endif\n#endif\n#ifdef HAVE_STDCKDINT_H\n# if HAVE_STDCKDINT_H\n#  include <stdckdint.h>\n# endif\n#elif defined __EDG__\n/* Do nothing, to work around EDG bug <https://bugs.gnu.org/53256>.  */\n#elif defined __has_builtin\n# if __has_builtin(__builtin_add_overflow)\n#  define ckd_add(r, a, b) __builtin_add_overflow(a, b, r)\n# endif\n# if __has_builtin(__builtin_sub_overflow)\n#  define ckd_sub(r, a, b) __builtin_sub_overflow(a, b, r)\n# endif\n# if __has_builtin(__builtin_mul_overflow)\n#  define ckd_mul(r, a, b) __builtin_mul_overflow(a, b, r)\n# endif\n#elif 7 <= __GNUC__\n# define ckd_add(r, a, b) __builtin_add_overflow(a, b, r)\n# define ckd_sub(r, a, b) __builtin_sub_overflow(a, b, r)\n# define ckd_mul(r, a, b) __builtin_mul_overflow(a, b, r)\n#endif\n\n#if (defined __has_c_attribute \\\n     && (202311 <= __STDC_VERSION__ || !defined __STRICT_ANSI__))\n# define HAVE___HAS_C_ATTRIBUTE true\n#else\n# define HAVE___HAS_C_ATTRIBUTE false\n#endif\n\n#if HAVE___HAS_C_ATTRIBUTE\n# if __has_c_attribute(deprecated)\n#  define ATTRIBUTE_DEPRECATED [[deprecated]]\n# endif\n#endif\n#ifndef ATTRIBUTE_DEPRECATED\n# if 3 < __GNUC__ + (2 <= __GNUC_MINOR__)\n#  define ATTRIBUTE_DEPRECATED __attribute__((deprecated))\n# else\n#  define ATTRIBUTE_DEPRECATED /* empty */\n# endif\n#endif\n\n#if HAVE___HAS_C_ATTRIBUTE\n# if __has_c_attribute(fallthrough)\n#  define ATTRIBUTE_FALLTHROUGH [[fallthrough]]\n# endif\n#endif\n#ifndef ATTRIBUTE_FALLTHROUGH\n# if 7 <= __GNUC__\n#  define ATTRIBUTE_FALLTHROUGH __attribute__((fallthrough))\n# else\n#  define ATTRIBUTE_FALLTHROUGH ((void) 0)\n# endif\n#endif\n\n#if HAVE___HAS_C_ATTRIBUTE\n# if __has_c_attribute(maybe_unused)\n#  define ATTRIBUTE_MAYBE_UNUSED [[maybe_unused]]\n# endif\n#endif\n#ifndef ATTRIBUTE_MAYBE_UNUSED\n# if 2 < __GNUC__ + (7 <= __GNUC_MINOR__)\n#  define ATTRIBUTE_MAYBE_UNUSED __attribute__((unused))\n# else\n#  define ATTRIBUTE_MAYBE_UNUSED /* empty */\n# endif\n#endif\n\n#if HAVE___HAS_C_ATTRIBUTE\n# if __has_c_attribute(noreturn)\n#  define ATTRIBUTE_NORETURN [[noreturn]]\n# endif\n#endif\n#ifndef ATTRIBUTE_NORETURN\n# if 201112 <= __STDC_VERSION__\n#  define ATTRIBUTE_NORETURN _Noreturn\n# elif 2 < __GNUC__ + (8 <= __GNUC_MINOR__)\n#  define ATTRIBUTE_NORETURN __attribute__((noreturn))\n# else\n#  define ATTRIBUTE_NORETURN /* empty */\n# endif\n#endif\n\n#if HAVE___HAS_C_ATTRIBUTE\n# if __has_c_attribute(reproducible)\n#  define ATTRIBUTE_REPRODUCIBLE [[reproducible]]\n# endif\n#endif\n#ifndef ATTRIBUTE_REPRODUCIBLE\n# define ATTRIBUTE_REPRODUCIBLE /* empty */\n#endif\n\n#if HAVE___HAS_C_ATTRIBUTE\n# if __has_c_attribute(unsequenced)\n#  define ATTRIBUTE_UNSEQUENCED [[unsequenced]]\n# endif\n#endif\n#ifndef ATTRIBUTE_UNSEQUENCED\n# define ATTRIBUTE_UNSEQUENCED /* empty */\n#endif\n\n/* GCC attributes that are useful in tzcode.\n   __attribute__((const)) is stricter than [[unsequenced]],\n   so the latter is an adequate substitute in non-GCC C23 platforms.\n   __attribute__((pure)) is stricter than [[reproducible]],\n   so the latter is an adequate substitute in non-GCC C23 platforms.  */\n#if __GNUC__ < 3\n# define ATTRIBUTE_CONST ATTRIBUTE_UNSEQUENCED\n# define ATTRIBUTE_FORMAT(spec) /* empty */\n# define ATTRIBUTE_PURE ATTRIBUTE_REPRODUCIBLE\n#else\n# define ATTRIBUTE_CONST __attribute__((const))\n# define ATTRIBUTE_FORMAT(spec) __attribute__((format spec))\n# define ATTRIBUTE_PURE __attribute__((pure))\n#endif\n\n/* Avoid GCC bug 114833 <https://gcc.gnu.org/bugzilla/show_bug.cgi?id=114833>.\n   Remove this macro and its uses when the bug is fixed in a GCC release,\n   because only the latest GCC matters for $(GCC_DEBUG_FLAGS).  */\n#ifdef GCC_LINT\n# define ATTRIBUTE_PURE_114833 ATTRIBUTE_PURE\n#else\n# define ATTRIBUTE_PURE_114833 /* empty */\n#endif\n\n#if (__STDC_VERSION__ < 199901 && !defined restrict \\\n     && (PORT_TO_C89 || defined _MSC_VER))\n# define restrict /* empty */\n#endif\n\n/*\n** Workarounds for compilers/systems.\n*/\n\n#ifndef EPOCH_LOCAL\n# define EPOCH_LOCAL 0\n#endif\n#ifndef EPOCH_OFFSET\n# define EPOCH_OFFSET 0\n#endif\n#ifndef RESERVE_STD_EXT_IDS\n# define RESERVE_STD_EXT_IDS 0\n#endif\n\n#ifdef time_tz\n# define defined_time_tz true\n#else\n# define defined_time_tz false\n#endif\n\n/* If standard C identifiers with external linkage (e.g., localtime)\n   are reserved and are not already being renamed anyway, rename them\n   as if compiling with '-Dtime_tz=time_t'.  */\n#if !defined time_tz && RESERVE_STD_EXT_IDS && USE_LTZ\n# define time_tz time_t\n#endif\n\n/*\n** Compile with -Dtime_tz=T to build the tz package with a private\n** time_t type equivalent to T rather than the system-supplied time_t.\n** This debugging feature can test unusual design decisions\n** (e.g., time_t wider than 'long', or unsigned time_t) even on\n** typical platforms.\n*/\n#if defined time_tz || EPOCH_LOCAL || EPOCH_OFFSET != 0\n# define TZ_TIME_T true\n#else\n# define TZ_TIME_T false\n#endif\n\n#if defined LOCALTIME_IMPLEMENTATION && TZ_TIME_T\nstatic time_t sys_time(time_t *x) { return time(x); }\n#endif\n\n#if TZ_TIME_T\n\ntypedef time_tz tz_time_t;\n\n# undef  asctime\n# define asctime tz_asctime\n# undef  ctime\n# define ctime tz_ctime\n# undef  difftime\n# define difftime tz_difftime\n# undef  gmtime\n# define gmtime tz_gmtime\n# undef  gmtime_r\n# define gmtime_r tz_gmtime_r\n# undef  localtime\n# define localtime tz_localtime\n# undef  localtime_r\n# define localtime_r tz_localtime_r\n# undef  localtime_rz\n# define localtime_rz tz_localtime_rz\n# undef  mktime\n# define mktime tz_mktime\n# undef  mktime_z\n# define mktime_z tz_mktime_z\n# undef  offtime\n# define offtime tz_offtime\n# undef  posix2time\n# define posix2time tz_posix2time\n# undef  posix2time_z\n# define posix2time_z tz_posix2time_z\n# undef  strftime\n# define strftime tz_strftime\n# undef  time\n# define time tz_time\n# undef  time2posix\n# define time2posix tz_time2posix\n# undef  time2posix_z\n# define time2posix_z tz_time2posix_z\n# undef  time_t\n# define time_t tz_time_t\n# undef  timegm\n# define timegm tz_timegm\n# undef  timelocal\n# define timelocal tz_timelocal\n# undef  timeoff\n# define timeoff tz_timeoff\n# undef  tzalloc\n# define tzalloc tz_tzalloc\n# undef  tzfree\n# define tzfree tz_tzfree\n# undef  tzset\n# define tzset tz_tzset\n# if SUPPORT_POSIX2008\n#  undef  asctime_r\n#  define asctime_r tz_asctime_r\n#  undef  ctime_r\n#  define ctime_r tz_ctime_r\n# endif\n# if HAVE_STRFTIME_L\n#  undef  strftime_l\n#  define strftime_l tz_strftime_l\n# endif\n# if HAVE_TZNAME\n#  undef  tzname\n#  define tzname tz_tzname\n# endif\n# if USG_COMPAT\n#  undef  daylight\n#  define daylight tz_daylight\n#  undef  timezone\n#  define timezone tz_timezone\n# endif\n# if ALTZONE\n#  undef  altzone\n#  define altzone tz_altzone\n# endif\n\n# if __STDC_VERSION__ < 202311\n#  define DEPRECATED_IN_C23 /* empty */\n# else\n#  define DEPRECATED_IN_C23 ATTRIBUTE_DEPRECATED\n# endif\nDEPRECATED_IN_C23 char *asctime(struct tm const *);\nDEPRECATED_IN_C23 char *ctime(time_t const *);\n#if SUPPORT_POSIX2008\nchar *asctime_r(struct tm const *restrict, char *restrict);\nchar *ctime_r(time_t const *, char *);\n#endif\nATTRIBUTE_CONST double difftime(time_t, time_t);\nsize_t strftime(char *restrict, size_t, char const *restrict,\n\t\tstruct tm const *restrict);\n# if HAVE_STRFTIME_L\nsize_t strftime_l(char *restrict, size_t, char const *restrict,\n\t\t  struct tm const *restrict, locale_t);\n# endif\nstruct tm *gmtime(time_t const *);\nstruct tm *gmtime_r(time_t const *restrict, struct tm *restrict);\nstruct tm *localtime(time_t const *);\nstruct tm *localtime_r(time_t const *restrict, struct tm *restrict);\ntime_t mktime(struct tm *);\ntime_t time(time_t *);\ntime_t timegm(struct tm *);\nvoid tzset(void);\n#endif\n\n#ifndef HAVE_DECL_TIMEGM\n# if (202311 <= __STDC_VERSION__ \\\n      || defined __GLIBC__ || defined __tm_zone /* musl */ \\\n      || defined __FreeBSD__ || defined __NetBSD__ || defined __OpenBSD__ \\\n      || (defined __APPLE__ && defined __MACH__))\n#  define HAVE_DECL_TIMEGM 1\n# else\n#  define HAVE_DECL_TIMEGM 0\n# endif\n#endif\n#if !HAVE_DECL_TIMEGM && !defined timegm\ntime_t timegm(struct tm *);\n#endif\n\n#if !HAVE_DECL_ASCTIME_R && !defined asctime_r && SUPPORT_POSIX2008\nextern char *asctime_r(struct tm const *restrict, char *restrict);\n#endif\n\n#ifndef HAVE_DECL_ENVIRON\n# if defined environ || defined __USE_GNU\n#  define HAVE_DECL_ENVIRON 1\n# else\n#  define HAVE_DECL_ENVIRON 0\n# endif\n#endif\n\n#if !HAVE_DECL_ENVIRON\nextern char **environ;\n#endif\n\n#if 2 <= HAVE_TZNAME + (TZ_TIME_T || !HAVE_POSIX_DECLS)\nextern char *tzname[];\n#endif\n#if 2 <= USG_COMPAT + (TZ_TIME_T || !HAVE_POSIX_DECLS)\nextern long timezone;\nextern int daylight;\n#endif\n#if 2 <= ALTZONE + (TZ_TIME_T || !HAVE_POSIX_DECLS)\nextern long altzone;\n#endif\n\n/*\n** The STD_INSPIRED functions are similar, but most also need\n** declarations if time_tz is defined.\n*/\n\n#ifndef STD_INSPIRED\n# ifdef __NetBSD__\n#  define STD_INSPIRED 1\n# else\n#  define STD_INSPIRED 0\n# endif\n#endif\n#if STD_INSPIRED\n# if TZ_TIME_T || !defined offtime\nstruct tm *offtime(time_t const *, long);\n# endif\n# if TZ_TIME_T || !defined timelocal\ntime_t timelocal(struct tm *);\n# endif\n# if TZ_TIME_T || !defined timeoff\n#  define EXTERN_TIMEOFF\n# endif\n# if TZ_TIME_T || !defined time2posix\ntime_t time2posix(time_t);\n# endif\n# if TZ_TIME_T || !defined posix2time\ntime_t posix2time(time_t);\n# endif\n#endif\n\n/* Infer TM_ZONE on systems where this information is known, but suppress\n   guessing if NO_TM_ZONE is defined.  Similarly for TM_GMTOFF.  */\n#if (200809 < _POSIX_VERSION \\\n     || defined __GLIBC__ \\\n     || defined __tm_zone /* musl */ \\\n     || defined __FreeBSD__ || defined __NetBSD__ || defined __OpenBSD__ \\\n     || (defined __APPLE__ && defined __MACH__))\n# if !defined TM_GMTOFF && !defined NO_TM_GMTOFF\n#  define TM_GMTOFF tm_gmtoff\n# endif\n# if !defined TM_ZONE && !defined NO_TM_ZONE\n#  define TM_ZONE tm_zone\n# endif\n#endif\n\n/*\n** Define functions that are ABI compatible with NetBSD but have\n** better prototypes.  NetBSD 6.1.4 defines a pointer type timezone_t\n** and labors under the misconception that 'const timezone_t' is a\n** pointer to a constant.  This use of 'const' is ineffective, so it\n** is not done here.  What we call 'struct state' NetBSD calls\n** 'struct __state', but this is a private name so it doesn't matter.\n*/\n#if NETBSD_INSPIRED\ntypedef struct state *timezone_t;\nstruct tm *localtime_rz(timezone_t restrict, time_t const *restrict,\n\t\t\tstruct tm *restrict);\ntime_t mktime_z(timezone_t restrict, struct tm *restrict);\ntimezone_t tzalloc(char const *);\nvoid tzfree(timezone_t);\n# if STD_INSPIRED\n#  if TZ_TIME_T || !defined posix2time_z\nATTRIBUTE_PURE time_t posix2time_z(timezone_t, time_t);\n#  endif\n#  if TZ_TIME_T || !defined time2posix_z\nATTRIBUTE_PURE time_t time2posix_z(timezone_t, time_t);\n#  endif\n# endif\n#endif\n\n/*\n** Finally, some convenience items.\n*/\n\n#define TYPE_BIT(type) (CHAR_BIT * (ptrdiff_t) sizeof(type))\n#define TYPE_SIGNED(type) (((type) -1) < 0)\n#define TWOS_COMPLEMENT(t) ((t) ~ (t) 0 < 0)\n\n/* Minimum and maximum of two values.  Use lower case to avoid\n   naming clashes with standard include files.  */\n#define max(a, b) ((a) > (b) ? (a) : (b))\n#define min(a, b) ((a) < (b) ? (a) : (b))\n\n/* Max and min values of the integer type T, of which only the bottom\n   B bits are used, and where the highest-order used bit is considered\n   to be a sign bit if T is signed.  */\n#define MAXVAL(t, b)\t\t\t\t\t\t\\\n  ((t) (((t) 1 << ((b) - 1 - TYPE_SIGNED(t)))\t\t\t\\\n\t- 1 + ((t) 1 << ((b) - 1 - TYPE_SIGNED(t)))))\n#define MINVAL(t, b)\t\t\t\t\t\t\\\n  ((t) (TYPE_SIGNED(t) ? - TWOS_COMPLEMENT(t) - MAXVAL(t, b) : 0))\n\n/* The extreme time values, assuming no padding.  */\n#define TIME_T_MIN_NO_PADDING MINVAL(time_t, TYPE_BIT(time_t))\n#define TIME_T_MAX_NO_PADDING MAXVAL(time_t, TYPE_BIT(time_t))\n\n/* The extreme time values.  These are macros, not constants, so that\n   any portability problems occur only when compiling .c files that use\n   the macros, which is safer for applications that need only zdump and zic.\n   This implementation assumes no padding if time_t is signed and\n   either the compiler lacks support for _Generic or time_t is not one\n   of the standard signed integer types.  */\n#if HAVE__GENERIC\n# define TIME_T_MIN \\\n    _Generic((time_t) 0, \\\n\t     signed char: SCHAR_MIN, short: SHRT_MIN, \\\n\t     int: INT_MIN, long: LONG_MIN, long long: LLONG_MIN, \\\n\t     default: TIME_T_MIN_NO_PADDING)\n# define TIME_T_MAX \\\n    (TYPE_SIGNED(time_t) \\\n     ? _Generic((time_t) 0, \\\n\t\tsigned char: SCHAR_MAX, short: SHRT_MAX, \\\n\t\tint: INT_MAX, long: LONG_MAX, long long: LLONG_MAX, \\\n\t\tdefault: TIME_T_MAX_NO_PADDING)\t\t\t    \\\n     : (time_t) -1)\nenum { SIGNED_PADDING_CHECK_NEEDED\n\t = _Generic((time_t) 0,\n\t\t    signed char: false, short: false,\n\t\t    int: false, long: false, long long: false,\n\t\t    default: true) };\n#else\n# define TIME_T_MIN TIME_T_MIN_NO_PADDING\n# define TIME_T_MAX TIME_T_MAX_NO_PADDING\nenum { SIGNED_PADDING_CHECK_NEEDED = true };\n#endif\n/* Try to check the padding assumptions.  Although TIME_T_MAX and the\n   following check can both have undefined behavior on oddball\n   platforms due to shifts exceeding widths of signed integers, these\n   platforms' compilers are likely to diagnose these issues in integer\n   constant expressions, so it shouldn't hurt to check statically.  */\nstatic_assert(! TYPE_SIGNED(time_t) || ! SIGNED_PADDING_CHECK_NEEDED\n\t      || TIME_T_MAX >> (TYPE_BIT(time_t) - 2) == 1);\n\n/*\n** 302 / 1000 is log10(2.0) rounded up.\n** Subtract one for the sign bit if the type is signed;\n** add one for integer division truncation;\n** add one more for a minus sign if the type is signed.\n*/\n#define INT_STRLEN_MAXIMUM(type) \\\n\t((TYPE_BIT(type) - TYPE_SIGNED(type)) * 302 / 1000 + \\\n\t1 + TYPE_SIGNED(type))\n\n/*\n** INITIALIZE(x)\n*/\n\n#ifdef GCC_LINT\n# define INITIALIZE(x)\t((x) = 0)\n#else\n# define INITIALIZE(x)\n#endif\n\n/* Whether memory access must strictly follow the C standard.\n   If 0, it's OK to read uninitialized storage so long as the value is\n   not relied upon.  Defining it to 0 lets mktime access parts of\n   struct tm that might be uninitialized, as a heuristic when the\n   standard doesn't say what to return and when tm_gmtoff can help\n   mktime likely infer a better value.  */\n#ifndef UNINIT_TRAP\n# define UNINIT_TRAP 0\n#endif\n\n/* strftime.c sometimes needs access to timeoff if it is not already public.\n   tz_private_timeoff should be used only by localtime.c and strftime.c.  */\n#if (!defined EXTERN_TIMEOFF \\\n     && defined TM_GMTOFF && (200809 < _POSIX_VERSION || ! UNINIT_TRAP))\n# ifndef timeoff\n#  define timeoff tz_private_timeoff\n# endif\n# define EXTERN_TIMEOFF\n#endif\n#ifdef EXTERN_TIMEOFF\ntime_t timeoff(struct tm *, long);\n#endif\n\n#ifdef DEBUG\n# undef unreachable\n# define unreachable() abort()\n#elif !defined unreachable\n# ifdef __has_builtin\n#  if __has_builtin(__builtin_unreachable)\n#   define unreachable() __builtin_unreachable()\n#  endif\n# elif 4 < __GNUC__ + (5 <= __GNUC_MINOR__)\n#  define unreachable() __builtin_unreachable()\n# endif\n# ifndef unreachable\n#  define unreachable() ((void) 0)\n# endif\n#endif\n\n/*\n** For the benefit of GNU folk...\n** '_(MSGID)' uses the current locale's message library string for MSGID.\n** The default is to use gettext if available, and use MSGID otherwise.\n*/\n\n#if HAVE_GETTEXT\n#define _(msgid) gettext(msgid)\n#else /* !HAVE_GETTEXT */\n#define _(msgid) msgid\n#endif /* !HAVE_GETTEXT */\n\n#if !defined TZ_DOMAIN && defined HAVE_GETTEXT\n# define TZ_DOMAIN \"tz\"\n#endif\n\n#if HAVE_INCOMPATIBLE_CTIME_R\n#undef asctime_r\n#undef ctime_r\nchar *asctime_r(struct tm const *restrict, char *restrict);\nchar *ctime_r(time_t const *, char *);\n#endif /* HAVE_INCOMPATIBLE_CTIME_R */\n\n/* Handy macros that are independent of tzfile implementation.  */\n\nenum {\n  SECSPERMIN = 60,\n  MINSPERHOUR = 60,\n  SECSPERHOUR = SECSPERMIN * MINSPERHOUR,\n  HOURSPERDAY = 24,\n  DAYSPERWEEK = 7,\n  DAYSPERNYEAR = 365,\n  DAYSPERLYEAR = DAYSPERNYEAR + 1,\n  MONSPERYEAR = 12,\n  YEARSPERREPEAT = 400\t/* years before a Gregorian repeat */\n};\n\n#define SECSPERDAY\t((int_fast32_t) SECSPERHOUR * HOURSPERDAY)\n\n#define DAYSPERREPEAT\t\t((int_fast32_t) 400 * 365 + 100 - 4 + 1)\n#define SECSPERREPEAT\t\t((int_fast64_t) DAYSPERREPEAT * SECSPERDAY)\n#define AVGSECSPERYEAR\t\t(SECSPERREPEAT / YEARSPERREPEAT)\n\n/* How many years to generate (in zic.c) or search through (in localtime.c).\n   This is two years larger than the obvious 400, to avoid edge cases.\n   E.g., suppose a rule applies from 2012 on with transitions\n   in March and September, plus one-off transitions in November 2013,\n   and suppose the rule cannot be expressed as a proleptic TZ string.\n   If zic looked only at the last 400 years, it would set max_year=2413,\n   with the intent that the 400 years 2014 through 2413 will be repeated.\n   The last transition listed in the tzfile would be in 2413-09,\n   less than 400 years after the last one-off transition in 2013-11.\n   Two years is not overkill for localtime.c, as a one-year bump\n   would mishandle 2023d's America/Ciudad_Juarez for November 2422.  */\nenum { years_of_observations = YEARSPERREPEAT + 2 };\n\nenum {\n  TM_SUNDAY,\n  TM_MONDAY,\n  TM_TUESDAY,\n  TM_WEDNESDAY,\n  TM_THURSDAY,\n  TM_FRIDAY,\n  TM_SATURDAY\n};\n\nenum {\n  TM_JANUARY,\n  TM_FEBRUARY,\n  TM_MARCH,\n  TM_APRIL,\n  TM_MAY,\n  TM_JUNE,\n  TM_JULY,\n  TM_AUGUST,\n  TM_SEPTEMBER,\n  TM_OCTOBER,\n  TM_NOVEMBER,\n  TM_DECEMBER\n};\n\nenum {\n  TM_YEAR_BASE = 1900,\n  TM_WDAY_BASE = TM_MONDAY,\n  EPOCH_YEAR = 1970,\n  EPOCH_WDAY = TM_THURSDAY\n};\n\n#define isleap(y) (((y) % 4) == 0 && (((y) % 100) != 0 || ((y) % 400) == 0))\n\n/*\n** Since everything in isleap is modulo 400 (or a factor of 400), we know that\n**\tisleap(y) == isleap(y % 400)\n** and so\n**\tisleap(a + b) == isleap((a + b) % 400)\n** or\n**\tisleap(a + b) == isleap(a % 400 + b % 400)\n** This is true even if % means modulo rather than Fortran remainder\n** (which is allowed by C89 but not by C99 or later).\n** We use this to avoid addition overflow problems.\n*/\n\n#define isleap_sum(a, b)\tisleap((a) % 400 + (b) % 400)\n\n#endif /* !defined PRIVATE_H */\n"
        },
        {
          "name": "southamerica",
          "type": "blob",
          "size": 90.1953125,
          "content": "# tzdb data for South America and environs\n\n# This file is in the public domain, so clarified as of\n# 2009-05-17 by Arthur David Olson.\n\n# This file is by no means authoritative; if you think you know better,\n# go ahead and edit the file (and please send any changes to\n# tz@iana.org for general use in the future).  For more, please see\n# the file CONTRIBUTING in the tz distribution.\n\n# From Paul Eggert (2016-12-05):\n#\n# Unless otherwise specified, the source for data through 1990 is:\n# Thomas G. Shanks and Rique Pottenger, The International Atlas (6th edition),\n# San Diego: ACS Publications, Inc. (2003).\n# Unfortunately this book contains many errors and cites no sources.\n#\n# Many years ago Gwillim Law wrote that a good source\n# for time zone data was the International Air Transport\n# Association's Standard Schedules Information Manual (IATA SSIM),\n# published semiannually.  Law sent in several helpful summaries\n# of the IATA's data after 1990.  Except where otherwise noted,\n# IATA SSIM is the source for entries after 1990.\n#\n# For data circa 1899, a common source is:\n# Milne J. Civil time. Geogr J. 1899 Feb;13(2):173-94.\n# https://www.jstor.org/stable/1774359\n#\n# These tables use numeric abbreviations like -03 and -0330 for\n# integer hour and minute UT offsets.  Although earlier editions used\n# alphabetic time zone abbreviations, these abbreviations were\n# invented and did not reflect common practice.\n\n###############################################################################\n\n###############################################################################\n\n# Argentina\n\n# From Bob Devine (1988-01-28):\n# Argentina: first Sunday in October to first Sunday in April since 1976.\n# Double Summer time from 1969 to 1974.  Switches at midnight.\n\n# From U. S. Naval Observatory (1988-01-19):\n# ARGENTINA           3 H BEHIND   UTC\n\n# From Hernan G. Otero (1995-06-26):\n# I am sending modifications to the Argentine time zone table...\n# AR was chosen because they are the ISO letters that represent Argentina.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tArg\t1930\tonly\t-\tDec\t 1\t0:00\t1:00\t-\nRule\tArg\t1931\tonly\t-\tApr\t 1\t0:00\t0\t-\nRule\tArg\t1931\tonly\t-\tOct\t15\t0:00\t1:00\t-\nRule\tArg\t1932\t1940\t-\tMar\t 1\t0:00\t0\t-\nRule\tArg\t1932\t1939\t-\tNov\t 1\t0:00\t1:00\t-\nRule\tArg\t1940\tonly\t-\tJul\t 1\t0:00\t1:00\t-\nRule\tArg\t1941\tonly\t-\tJun\t15\t0:00\t0\t-\nRule\tArg\t1941\tonly\t-\tOct\t15\t0:00\t1:00\t-\nRule\tArg\t1943\tonly\t-\tAug\t 1\t0:00\t0\t-\nRule\tArg\t1943\tonly\t-\tOct\t15\t0:00\t1:00\t-\nRule\tArg\t1946\tonly\t-\tMar\t 1\t0:00\t0\t-\nRule\tArg\t1946\tonly\t-\tOct\t 1\t0:00\t1:00\t-\nRule\tArg\t1963\tonly\t-\tOct\t 1\t0:00\t0\t-\nRule\tArg\t1963\tonly\t-\tDec\t15\t0:00\t1:00\t-\nRule\tArg\t1964\t1966\t-\tMar\t 1\t0:00\t0\t-\nRule\tArg\t1964\t1966\t-\tOct\t15\t0:00\t1:00\t-\nRule\tArg\t1967\tonly\t-\tApr\t 2\t0:00\t0\t-\nRule\tArg\t1967\t1968\t-\tOct\tSun>=1\t0:00\t1:00\t-\nRule\tArg\t1968\t1969\t-\tApr\tSun>=1\t0:00\t0\t-\nRule\tArg\t1974\tonly\t-\tJan\t23\t0:00\t1:00\t-\nRule\tArg\t1974\tonly\t-\tMay\t 1\t0:00\t0\t-\nRule\tArg\t1988\tonly\t-\tDec\t 1\t0:00\t1:00\t-\n#\n# From Hernan G. Otero (1995-06-26):\n# These corrections were contributed by InterSoft Argentina S.A.,\n# obtaining the data from the:\n# Talleres de Hidrografía Naval Argentina\n# (Argentine Naval Hydrography Institute)\nRule\tArg\t1989\t1993\t-\tMar\tSun>=1\t0:00\t0\t-\nRule\tArg\t1989\t1992\t-\tOct\tSun>=15\t0:00\t1:00\t-\n#\n# From Hernan G. Otero (1995-06-26):\n# From this moment on, the law that mandated the daylight saving\n# time corrections was derogated and no more modifications\n# to the time zones (for daylight saving) are now made.\n#\n# From Rives McDow (2000-01-10):\n# On October 3, 1999, 0:00 local, Argentina implemented daylight savings time,\n# which did not result in the switch of a time zone, as they stayed 9 hours\n# from the International Date Line.\nRule\tArg\t1999\tonly\t-\tOct\tSun>=1\t0:00\t1:00\t-\n# From Paul Eggert (2007-12-28):\n# DST was set to expire on March 5, not March 3, but since it was converted\n# to standard time on March 3 it's more convenient for us to pretend that\n# it ended on March 3.\nRule\tArg\t2000\tonly\t-\tMar\t3\t0:00\t0\t-\n#\n# From Peter Gradelski via Steffen Thorsen (2000-03-01):\n# We just checked with our São Paulo office and they say the government of\n# Argentina decided not to become one of the countries that go on or off DST.\n# So Buenos Aires should be -3 hours from GMT at all times.\n#\n# From Fabián L. Arce Jofré (2000-04-04):\n# The law that claimed DST for Argentina was derogated by President Fernando\n# de la Rúa on March 2, 2000, because it would make people spend more energy\n# in the winter time, rather than less.  The change took effect on March 3.\n#\n# From Mariano Absatz (2001-06-06):\n# one of the major newspapers here in Argentina said that the 1999\n# Timezone Law (which never was effectively applied) will (would?) be\n# in effect.... The article is at\n# http://ar.clarin.com/diario/2001-06-06/e-01701.htm\n# ... The Law itself is \"Ley No. 25155\", sanctioned on 1999-08-25, enacted\n# 1999-09-17, and published 1999-09-21.  The official publication is at:\n# http://www.boletin.jus.gov.ar/BON/Primera/1999/09-Septiembre/21/PDF/BO21-09-99LEG.PDF\n# Regretfully, you have to subscribe (and pay) for the on-line version....\n#\n# (2001-06-12):\n# the timezone for Argentina will not change next Sunday.\n# Apparently it will do so on Sunday 24th....\n# http://ar.clarin.com/diario/2001-06-12/s-03501.htm\n#\n# (2001-06-25):\n# Last Friday (yes, the last working day before the date of the change), the\n# Senate annulled the 1999 law that introduced the changes later postponed.\n# http://www.clarin.com.ar/diario/2001-06-22/s-03601.htm\n# It remains the vote of the Deputies..., but it will be the same....\n# This kind of things had always been done this way in Argentina.\n# We are still -03:00 all year round in all of the country.\n#\n# From Steffen Thorsen (2007-12-21):\n# A user (Leonardo Chaim) reported that Argentina will adopt DST....\n# all of the country (all Zone-entries) are affected.  News reports like\n# http://www.lanacion.com.ar/opinion/nota.asp?nota_id=973037 indicate\n# that Argentina will use DST next year as well, from October to\n# March, although exact rules are not given.\n#\n# From Jesper Nørgaard Welen (2007-12-26)\n# The last hurdle of Argentina DST is over, the proposal was approved in\n# the lower chamber too (Diputados) with a vote 192 for and 2 against.\n# By the way thanks to Mariano Absatz and Daniel Mario Vega for the link to\n# the original scanned proposal, where the dates and the zero hours are\n# clear and unambiguous...This is the article about final approval:\n# http://www.lanacion.com.ar/politica/nota.asp?nota_id=973996\n#\n# From Paul Eggert (2007-12-22):\n# For dates after mid-2008, the following rules are my guesses and\n# are quite possibly wrong, but are more likely than no DST at all.\n\n# From Alexander Krivenyshev (2008-09-05):\n# As per message from Carlos Alberto Fonseca Arauz (Nicaragua),\n# Argentina will start DST on Sunday October 19, 2008.\n#\n# http://www.worldtimezone.com/dst_news/dst_news_argentina03.html\n# http://www.impulsobaires.com.ar/nota.php?id=57832 (in spanish)\n\n# From Juan Manuel Docile in https://bugs.gentoo.org/240339 (2008-10-07)\n# via Rodrigo Severo:\n# Argentinian law No. 25.155 is no longer valid.\n# http://www.infoleg.gov.ar/infolegInternet/anexos/60000-64999/60036/norma.htm\n# The new one is law No. 26.350\n# http://www.infoleg.gov.ar/infolegInternet/anexos/135000-139999/136191/norma.htm\n# So there is no summer time in Argentina for now.\n\n# From Mariano Absatz (2008-10-20):\n# Decree 1693/2008 applies Law 26.350 for the summer 2008/2009 establishing DST\n# in Argentina from 2008-10-19 until 2009-03-15.\n# http://www.boletinoficial.gov.ar/Bora.Portal/CustomControls/PdfContent.aspx?fp=16102008&pi=3&pf=4&s=0&sec=01\n#\n\n# Decree 1705/2008 excepting 12 Provinces from applying DST in the summer\n# 2008/2009: Catamarca, La Rioja, Mendoza, Salta, San Juan, San Luis, La\n# Pampa, Neuquén, Rio Negro, Chubut, Santa Cruz and Tierra del Fuego\n# http://www.boletinoficial.gov.ar/Bora.Portal/CustomControls/PdfContent.aspx?fp=17102008&pi=1&pf=1&s=0&sec=01\n#\n# Press release 235 dated Saturday October 18th, from the Government of the\n# Province of Jujuy saying it will not apply DST either (even when it was not\n# included in Decree 1705/2008).\n# http://www.jujuy.gov.ar/index2/partes_prensa/18_10_08/235-181008.doc\n\n# From fullinet (2009-10-18):\n# As announced in\n# http://www.argentina.gob.ar/argentina/portal/paginas.dhtml?pagina=356\n# (an official .gob.ar) under title: \"Sin Cambio de Hora\"\n# (English: \"No hour change\").\n#\n# \"Por el momento, el Gobierno Nacional resolvió no modificar la hora\n# oficial, decisión que estaba en estudio para su implementación el\n# domingo 18 de octubre. Desde el Ministerio de Planificación se anunció\n# que la Argentina hoy, en estas condiciones meteorológicas, no necesita\n# la modificación del huso horario, ya que 2009 nos encuentra con\n# crecimiento en la producción y distribución energética.\"\n\nRule\tArg\t2007\tonly\t-\tDec\t30\t0:00\t1:00\t-\nRule\tArg\t2008\t2009\t-\tMar\tSun>=15\t0:00\t0\t-\nRule\tArg\t2008\tonly\t-\tOct\tSun>=15\t0:00\t1:00\t-\n\n# From Mariano Absatz (2004-05-21):\n# Today it was officially published that the Province of Mendoza is changing\n# its timezone this winter... starting tomorrow night....\n# http://www.gobernac.mendoza.gov.ar/boletin/pdf/20040521-27158-normas.pdf\n# From Paul Eggert (2004-05-24):\n# It's Law No. 7,210.  This change is due to a public power emergency, so for\n# now we'll assume it's for this year only.\n#\n# From Paul Eggert (2018-01-31):\n# Hora de verano para la República Argentina\n# http://buenasiembra.com.ar/esoterismo/astrologia/hora-de-verano-de-la-republica-argentina-27.html\n# says that standard time in Argentina from 1894-10-31\n# to 1920-05-01 was -4:16:48.25.  Go with this more precise value\n# over Shanks & Pottenger.  It is upward compatible with Milne, who\n# says Córdoba time was -4:16:48.2.\n\n#\n# From Mariano Absatz (2004-06-05):\n# These media articles from a major newspaper mostly cover the current state:\n# http://www.lanacion.com.ar/04/05/27/de_604825.asp\n# http://www.lanacion.com.ar/04/05/28/de_605203.asp\n#\n# The following eight (8) provinces pulled clocks back to UTC-04:00 at\n# midnight Monday May 31st. (that is, the night between 05/31 and 06/01).\n# Apparently, all nine provinces would go back to UTC-03:00 at the same\n# time in October 17th.\n#\n# Catamarca, Chubut, La Rioja, San Juan, San Luis, Santa Cruz,\n# Tierra del Fuego, Tucumán.\n#\n# From Mariano Absatz (2004-06-14):\n# ... this weekend, the Province of Tucumán decided it'd go back to UTC-03:00\n# yesterday midnight (that is, at 24:00 Saturday 12th), since the people's\n# annoyance with the change is much higher than the power savings obtained....\n#\n# From Gwillim Law (2004-06-14):\n# http://www.lanacion.com.ar/04/06/10/de_609078.asp ...\n#     \"The time change in Tierra del Fuego was a conflicted decision from\n#   the start.  The government had decreed that the measure would take\n#   effect on June 1, but a normative error forced the new time to begin\n#   three days earlier, from a Saturday to a Sunday....\n# Our understanding was that the change was originally scheduled to take place\n# on June 1 at 00:00 in Chubut, Santa Cruz, Tierra del Fuego (and some other\n# provinces).  Sunday was May 30, only two days earlier.  So the article\n# contains a contradiction.  I would give more credence to the Saturday/Sunday\n# date than the \"three days earlier\" phrase, and conclude that Tierra del\n# Fuego set its clocks back at 2004-05-30 00:00.\n#\n# From Steffen Thorsen (2004-10-05):\n# The previous law 7210 which changed the province of Mendoza's time zone\n# back in May have been modified slightly in a new law 7277, which set the\n# new end date to 2004-09-26 (original date was 2004-10-17).\n# http://www.gobernac.mendoza.gov.ar/boletin/pdf/20040924-27244-normas.pdf\n#\n# From Mariano Absatz (2004-10-05):\n# San Juan changed from UTC-03:00 to UTC-04:00 at midnight between\n# Sunday, May 30th and Monday, May 31st.  It changed back to UTC-03:00\n# at midnight between Saturday, July 24th and Sunday, July 25th....\n# http://www.sanjuan.gov.ar/prensa/archivo/000329.html\n# http://www.sanjuan.gov.ar/prensa/archivo/000426.html\n# http://www.sanjuan.gov.ar/prensa/archivo/000441.html\n\n# From Alex Krivenyshev (2008-01-17):\n# Here are articles that Argentina Province San Luis is planning to end DST\n# as earlier as upcoming Monday January 21, 2008 or February 2008:\n#\n# Provincia argentina retrasa reloj y marca diferencia con resto del país\n# (Argentine Province delayed clock and mark difference with the rest of the\n# country)\n# http://cl.invertia.com/noticias/noticia.aspx?idNoticia=200801171849_EFE_ET4373&idtel\n#\n# Es inminente que en San Luis atrasen una hora los relojes\n# (It is imminent in San Luis clocks one hour delay)\n# https://www.lagaceta.com.ar/nota/253414/Economia/Es-inminente-que-en-San-Luis-atrasen-una-hora-los-relojes.html\n# http://www.worldtimezone.com/dst_news/dst_news_argentina02.html\n\n# From Jesper Nørgaard Welen (2008-01-18):\n# The page of the San Luis provincial government\n# http://www.sanluis.gov.ar/notas.asp?idCanal=0&id=22812\n# confirms what Alex Krivenyshev has earlier sent to the tz\n# emailing list about that San Luis plans to return to standard\n# time much earlier than the rest of the country. It also\n# confirms that upon request the provinces San Juan and Mendoza\n# refused to follow San Luis in this change.\n#\n# The change is supposed to take place Monday the 21st at 0:00\n# hours. As far as I understand it if this goes ahead, we need\n# a new timezone for San Luis (although there are also documented\n# independent changes in the southamerica file of San Luis in\n# 1990 and 1991 which has not been confirmed).\n\n# From Jesper Nørgaard Welen (2008-01-25):\n# Unfortunately the below page has become defunct, about the San Luis\n# time change. Perhaps because it now is part of a group of pages \"Most\n# important pages of 2008.\"\n#\n# You can use\n# http://www.sanluis.gov.ar/notas.asp?idCanal=8141&id=22834\n# instead it seems. Or use \"Buscador\" from the main page of the San Luis\n# government, and fill in \"huso\" and click OK, and you will get 3 pages\n# from which the first one is identical to the above.\n\n# From Mariano Absatz (2008-01-28):\n# I can confirm that the Province of San Luis (and so far only that\n# province) decided to go back to UTC-3 effective midnight Jan 20th 2008\n# (that is, Monday 21st at 0:00 is the time the clocks were delayed back\n# 1 hour), and they intend to keep UTC-3 as their timezone all year round\n# (that is, unless they change their mind any minute now).\n#\n# So we'll have to add yet another city to 'southamerica' (I think San\n# Luis city is the mos populated city in the Province, so it'd be\n# America/Argentina/San_Luis... of course I can't remember if San Luis's\n# history of particular changes goes along with Mendoza or San Juan :-(\n# (I only remember not being able to collect hard facts about San Luis\n# back in 2004, when these provinces changed to UTC-4 for a few days, I\n# mailed them personally and never got an answer).\n\n# From Paul Eggert (2014-08-12):\n# Unless otherwise specified, data entries are from Shanks & Pottenger through\n# 1992, from the IATA otherwise.  As noted below, Shanks & Pottenger say that\n# America/Cordoba split into 6 subregions during 1991/1992, one of which\n# was America/San_Luis, but we haven't verified this yet so for now we'll\n# keep America/Cordoba a single region rather than splitting it into the\n# other 5 subregions.\n\n# From Mariano Absatz (2009-03-13):\n# Yesterday (with our usual 2-day notice) the Province of San Luis\n# decided that next Sunday instead of \"staying\" @utc-03:00 they will go\n# to utc-04:00 until the second Saturday in October...\n#\n# The press release is at\n# http://www.sanluis.gov.ar/SL/Paginas/NoticiaDetalle.asp?TemaId=1&InfoPrensaId=3102\n# (I couldn't find the decree, but www.sanluis.gov.ar\n# is the official page for the Province Government.)\n#\n# There's also a note in only one of the major national papers ...\n# http://www.lanacion.com.ar/nota.asp?nota_id=1107912\n#\n# The press release says [quick and dirty translation]:\n# ... announced that next Sunday, at 00:00, Puntanos (the San Luis\n# inhabitants) will have to turn back one hour their clocks\n#\n# Since then, San Luis will establish its own Province timezone. Thus,\n# during 2009, this timezone change will run from 00:00 the third Sunday\n# in March until 24:00 of the second Saturday in October.\n\n# From Mariano Absatz (2009-10-16):\n# ...the Province of San Luis is a case in itself.\n#\n# The Law at\n# http://www.diputadossanluis.gov.ar/diputadosasp/paginas/verNorma.asp?NormaID=276\n# is ambiguous because establishes a calendar from the 2nd Sunday in\n# October at 0:00 thru the 2nd Saturday in March at 24:00 and the\n# complement of that starting on the 2nd Sunday of March at 0:00 and\n# ending on the 2nd Saturday of March at 24:00.\n#\n# This clearly breaks every time the 1st of March or October is a Sunday.\n#\n# IMHO, the \"spirit of the Law\" is to make the changes at 0:00 on the 2nd\n# Sunday of October and March.\n#\n# The problem is that the changes in the rest of the Provinces that did\n# change in 2007/2008, were made according to the Federal Law and Decrees\n# that did so on the 3rd Sunday of October and March.\n#\n# In fact, San Luis actually switched from UTC-4 to UTC-3 last Sunday\n# (October 11th) at 0:00.\n#\n# So I guess a new set of rules, besides \"Arg\", must be made and the last\n# America/Argentina/San_Luis entries should change to use these...\n# ...\n\n# From Alexander Krivenyshev (2010-04-09):\n# According to news reports from El Diario de la República Province San\n# Luis, Argentina (standard time UTC-04) will keep Daylight Saving Time\n# after April 11, 2010 - will continue to have same time as rest of\n# Argentina (UTC-3) (no DST).\n#\n# Confirmaron la prórroga del huso horario de verano (Spanish)\n# http://www.eldiariodelarepublica.com/index.php?option=com_content&task=view&id=29383&Itemid=9\n# or (some English translation):\n# http://www.worldtimezone.com/dst_news/dst_news_argentina08.html\n\n# From Mariano Absatz (2010-04-12):\n# yes...I can confirm this...and given that San Luis keeps calling\n# UTC-03:00 \"summer time\", we should't just let San Luis go back to \"Arg\"\n# rules...San Luis is still using \"Western ARgentina Time\" and it got\n# stuck on Summer daylight savings time even though the summer is over.\n\n# From Paul Eggert (2018-01-23):\n# Perhaps San Luis operates on the legal fiction that it is at -04\n# with perpetual daylight saving time, but ordinary usage typically seems to\n# just say it's at -03; see, for example,\n# https://es.wikipedia.org/wiki/Hora_oficial_argentina\n# We've documented similar situations as being plain changes to\n# standard time, so let's do that here too.  This does not change UTC\n# offsets, only tm_isdst and the time zone abbreviations.  One minor\n# plus is that this silences a zic complaint that there's no POSIX TZ\n# setting for timestamps past 2038.\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n#\n# Buenos Aires (BA), Capital Federal (CF),\nZone America/Argentina/Buenos_Aires -3:53:48 - LMT\t1894 Oct 31\n\t\t#STDOFF\t-4:16:48.25\n\t\t\t-4:16:48 -\tCMT\t1920 May    # Córdoba Mean Time\n\t\t\t-4:00\t-\t%z\t1930 Dec\n\t\t\t-4:00\tArg\t%z\t1969 Oct  5\n\t\t\t-3:00\tArg\t%z\t1999 Oct  3\n\t\t\t-4:00\tArg\t%z\t2000 Mar  3\n\t\t\t-3:00\tArg\t%z\n#\n# Córdoba (CB), Santa Fe (SF), Entre Ríos (ER), Corrientes (CN), Misiones (MN),\n# Chaco (CC), Formosa (FM), Santiago del Estero (SE)\n#\n# Shanks & Pottenger also make the following claims, which we haven't verified:\n# - Formosa switched to -3:00 on 1991-01-07.\n# - Misiones switched to -3:00 on 1990-12-29.\n# - Chaco switched to -3:00 on 1991-01-04.\n# - Santiago del Estero switched to -4:00 on 1991-04-01,\n#   then to -3:00 on 1991-04-26.\n#\n\t\t#STDOFF\t       -4:16:48.25\nZone America/Argentina/Cordoba -4:16:48 - LMT\t1894 Oct 31\n\t\t\t-4:16:48 -\tCMT\t1920 May\n\t\t\t-4:00\t-\t%z\t1930 Dec\n\t\t\t-4:00\tArg\t%z\t1969 Oct  5\n\t\t\t-3:00\tArg\t%z\t1991 Mar  3\n\t\t\t-4:00\t-\t%z\t1991 Oct 20\n\t\t\t-3:00\tArg\t%z\t1999 Oct  3\n\t\t\t-4:00\tArg\t%z\t2000 Mar  3\n\t\t\t-3:00\tArg\t%z\n#\n# Salta (SA), La Pampa (LP), Neuquén (NQ), Rio Negro (RN)\nZone America/Argentina/Salta -4:21:40 - LMT\t1894 Oct 31\n\t\t#STDOFF\t-4:16:48.25\n\t\t\t-4:16:48 -\tCMT\t1920 May\n\t\t\t-4:00\t-\t%z\t1930 Dec\n\t\t\t-4:00\tArg\t%z\t1969 Oct  5\n\t\t\t-3:00\tArg\t%z\t1991 Mar  3\n\t\t\t-4:00\t-\t%z\t1991 Oct 20\n\t\t\t-3:00\tArg\t%z\t1999 Oct  3\n\t\t\t-4:00\tArg\t%z\t2000 Mar  3\n\t\t\t-3:00\tArg\t%z\t2008 Oct 18\n\t\t\t-3:00\t-\t%z\n#\n# Tucumán (TM)\nZone America/Argentina/Tucuman -4:20:52 - LMT\t1894 Oct 31\n\t\t#STDOFF\t-4:16:48.25\n\t\t\t-4:16:48 -\tCMT\t1920 May\n\t\t\t-4:00\t-\t%z\t1930 Dec\n\t\t\t-4:00\tArg\t%z\t1969 Oct  5\n\t\t\t-3:00\tArg\t%z\t1991 Mar  3\n\t\t\t-4:00\t-\t%z\t1991 Oct 20\n\t\t\t-3:00\tArg\t%z\t1999 Oct  3\n\t\t\t-4:00\tArg\t%z\t2000 Mar  3\n\t\t\t-3:00\t-\t%z\t2004 Jun  1\n\t\t\t-4:00\t-\t%z\t2004 Jun 13\n\t\t\t-3:00\tArg\t%z\n#\n# La Rioja (LR)\nZone America/Argentina/La_Rioja -4:27:24 - LMT\t1894 Oct 31\n\t\t#STDOFF\t-4:16:48.25\n\t\t\t-4:16:48 -\tCMT\t1920 May\n\t\t\t-4:00\t-\t%z\t1930 Dec\n\t\t\t-4:00\tArg\t%z\t1969 Oct  5\n\t\t\t-3:00\tArg\t%z\t1991 Mar  1\n\t\t\t-4:00\t-\t%z\t1991 May  7\n\t\t\t-3:00\tArg\t%z\t1999 Oct  3\n\t\t\t-4:00\tArg\t%z\t2000 Mar  3\n\t\t\t-3:00\t-\t%z\t2004 Jun  1\n\t\t\t-4:00\t-\t%z\t2004 Jun 20\n\t\t\t-3:00\tArg\t%z\t2008 Oct 18\n\t\t\t-3:00\t-\t%z\n#\n# San Juan (SJ)\nZone America/Argentina/San_Juan -4:34:04 - LMT\t1894 Oct 31\n\t\t#STDOFF\t-4:16:48.25\n\t\t\t-4:16:48 -\tCMT\t1920 May\n\t\t\t-4:00\t-\t%z\t1930 Dec\n\t\t\t-4:00\tArg\t%z\t1969 Oct  5\n\t\t\t-3:00\tArg\t%z\t1991 Mar  1\n\t\t\t-4:00\t-\t%z\t1991 May  7\n\t\t\t-3:00\tArg\t%z\t1999 Oct  3\n\t\t\t-4:00\tArg\t%z\t2000 Mar  3\n\t\t\t-3:00\t-\t%z\t2004 May 31\n\t\t\t-4:00\t-\t%z\t2004 Jul 25\n\t\t\t-3:00\tArg\t%z\t2008 Oct 18\n\t\t\t-3:00\t-\t%z\n#\n# Jujuy (JY)\nZone America/Argentina/Jujuy -4:21:12 -\tLMT\t1894 Oct 31\n\t\t#STDOFF\t-4:16:48.25\n\t\t\t-4:16:48 -\tCMT\t1920 May\n\t\t\t-4:00\t-\t%z\t1930 Dec\n\t\t\t-4:00\tArg\t%z\t1969 Oct  5\n\t\t\t-3:00\tArg\t%z\t1990 Mar  4\n\t\t\t-4:00\t-\t%z\t1990 Oct 28\n\t\t\t-4:00\t1:00\t%z\t1991 Mar 17\n\t\t\t-4:00\t-\t%z\t1991 Oct  6\n\t\t\t-3:00\t1:00\t%z\t1992\n\t\t\t-3:00\tArg\t%z\t1999 Oct  3\n\t\t\t-4:00\tArg\t%z\t2000 Mar  3\n\t\t\t-3:00\tArg\t%z\t2008 Oct 18\n\t\t\t-3:00\t-\t%z\n#\n# Catamarca (CT), Chubut (CH)\nZone America/Argentina/Catamarca -4:23:08 - LMT\t1894 Oct 31\n\t\t#STDOFF\t-4:16:48.25\n\t\t\t-4:16:48 -\tCMT\t1920 May\n\t\t\t-4:00\t-\t%z\t1930 Dec\n\t\t\t-4:00\tArg\t%z\t1969 Oct  5\n\t\t\t-3:00\tArg\t%z\t1991 Mar  3\n\t\t\t-4:00\t-\t%z\t1991 Oct 20\n\t\t\t-3:00\tArg\t%z\t1999 Oct  3\n\t\t\t-4:00\tArg\t%z\t2000 Mar  3\n\t\t\t-3:00\t-\t%z\t2004 Jun  1\n\t\t\t-4:00\t-\t%z\t2004 Jun 20\n\t\t\t-3:00\tArg\t%z\t2008 Oct 18\n\t\t\t-3:00\t-\t%z\n#\n# Mendoza (MZ)\nZone America/Argentina/Mendoza -4:35:16 - LMT\t1894 Oct 31\n\t\t#STDOFF\t-4:16:48.25\n\t\t\t-4:16:48 -\tCMT\t1920 May\n\t\t\t-4:00\t-\t%z\t1930 Dec\n\t\t\t-4:00\tArg\t%z\t1969 Oct  5\n\t\t\t-3:00\tArg\t%z\t1990 Mar  4\n\t\t\t-4:00\t-\t%z\t1990 Oct 15\n\t\t\t-4:00\t1:00\t%z\t1991 Mar  1\n\t\t\t-4:00\t-\t%z\t1991 Oct 15\n\t\t\t-4:00\t1:00\t%z\t1992 Mar  1\n\t\t\t-4:00\t-\t%z\t1992 Oct 18\n\t\t\t-3:00\tArg\t%z\t1999 Oct  3\n\t\t\t-4:00\tArg\t%z\t2000 Mar  3\n\t\t\t-3:00\t-\t%z\t2004 May 23\n\t\t\t-4:00\t-\t%z\t2004 Sep 26\n\t\t\t-3:00\tArg\t%z\t2008 Oct 18\n\t\t\t-3:00\t-\t%z\n#\n# San Luis (SL)\n\nRule\tSanLuis\t2008\t2009\t-\tMar\tSun>=8\t0:00\t0\t-\nRule\tSanLuis\t2007\t2008\t-\tOct\tSun>=8\t0:00\t1:00\t-\n\nZone America/Argentina/San_Luis -4:25:24 - LMT\t1894 Oct 31\n\t\t#STDOFF\t-4:16:48.25\n\t\t\t-4:16:48 -\tCMT\t1920 May\n\t\t\t-4:00\t-\t%z\t1930 Dec\n\t\t\t-4:00\tArg\t%z\t1969 Oct  5\n\t\t\t-3:00\tArg\t%z\t1990\n\t\t\t-3:00\t1:00\t%z\t1990 Mar 14\n\t\t\t-4:00\t-\t%z\t1990 Oct 15\n\t\t\t-4:00\t1:00\t%z\t1991 Mar  1\n\t\t\t-4:00\t-\t%z\t1991 Jun  1\n\t\t\t-3:00\t-\t%z\t1999 Oct  3\n\t\t\t-4:00\t1:00\t%z\t2000 Mar  3\n\t\t\t-3:00\t-\t%z\t2004 May 31\n\t\t\t-4:00\t-\t%z\t2004 Jul 25\n\t\t\t-3:00\tArg\t%z\t2008 Jan 21\n\t\t\t-4:00\tSanLuis\t%z\t2009 Oct 11\n\t\t\t-3:00\t-\t%z\n#\n# Santa Cruz (SC)\nZone America/Argentina/Rio_Gallegos -4:36:52 - LMT\t1894 Oct 31\n\t\t#STDOFF\t-4:16:48.25\n\t\t\t-4:16:48 -\tCMT\t1920 May\n\t\t\t-4:00\t-\t%z\t1930 Dec\n\t\t\t-4:00\tArg\t%z\t1969 Oct  5\n\t\t\t-3:00\tArg\t%z\t1999 Oct  3\n\t\t\t-4:00\tArg\t%z\t2000 Mar  3\n\t\t\t-3:00\t-\t%z\t2004 Jun  1\n\t\t\t-4:00\t-\t%z\t2004 Jun 20\n\t\t\t-3:00\tArg\t%z\t2008 Oct 18\n\t\t\t-3:00\t-\t%z\n#\n# Tierra del Fuego, Antártida e Islas del Atlántico Sur (TF)\nZone America/Argentina/Ushuaia -4:33:12 - LMT\t1894 Oct 31\n\t\t#STDOFF\t-4:16:48.25\n\t\t\t-4:16:48 -\tCMT\t1920 May\n\t\t\t-4:00\t-\t%z\t1930 Dec\n\t\t\t-4:00\tArg\t%z\t1969 Oct  5\n\t\t\t-3:00\tArg\t%z\t1999 Oct  3\n\t\t\t-4:00\tArg\t%z\t2000 Mar  3\n\t\t\t-3:00\t-\t%z\t2004 May 30\n\t\t\t-4:00\t-\t%z\t2004 Jun 20\n\t\t\t-3:00\tArg\t%z\t2008 Oct 18\n\t\t\t-3:00\t-\t%z\n\n# Bolivia\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAmerica/La_Paz\t-4:32:36 -\tLMT\t1890\n\t\t\t-4:32:36 -\tCMT\t1931 Oct 15 # Calamarca MT\n\t\t\t-4:32:36 1:00\tBST\t1932 Mar 21 # Bolivia ST\n\t\t\t-4:00\t-\t%z\n\n# Brazil\n\n# From Paul Eggert (1993-11-18):\n# The mayor of Rio recently attempted to change the time zone rules\n# just in his city, in order to leave more summer time for the tourist trade.\n# The rule change lasted only part of the day;\n# the federal government refused to follow the city's rules, and business\n# was in a chaos, so the mayor backed down that afternoon.\n\n# From IATA SSIM (1996-02):\n# _Only_ the following states in BR1 observe DST: Rio Grande do Sul (RS),\n# Santa Catarina (SC), Paraná (PR), São Paulo (SP), Rio de Janeiro (RJ),\n# Espírito Santo (ES), Minas Gerais (MG), Bahia (BA), Goiás (GO),\n# Distrito Federal (DF), Tocantins (TO), Sergipe [SE] and Alagoas [AL].\n# [The last three states are new to this issue of the IATA SSIM.]\n\n# From Gwillim Law (1996-10-07):\n# Geography, history (Tocantins was part of Goiás until 1989), and other\n# sources of time zone information lead me to believe that AL, SE, and TO were\n# always in BR1, and so the only change was whether or not they observed DST....\n# The earliest issue of the SSIM I have is 2/91.  Each issue from then until\n# 9/95 says that DST is observed only in the ten states I quoted from 9/95,\n# along with Mato Grosso (MT) and Mato Grosso do Sul (MS), which are in BR2\n# (UTC-4)....  The other two time zones given for Brazil are BR3, which is\n# UTC-5, no DST, and applies only in the state of Acre (AC); and BR4, which is\n# UTC-2, and applies to Fernando de Noronha (formerly FN, but I believe it's\n# become part of the state of Pernambuco).  The boundary between BR1 and BR2\n# has never been clearly stated.  They've simply been called East and West.\n# However, some conclusions can be drawn from another IATA manual: the Airline\n# Coding Directory, which lists close to 400 airports in Brazil.  For each\n# airport it gives a time zone which is coded to the SSIM.  From that\n# information, I'm led to conclude that the states of Amapá (AP), Ceará (CE),\n# Maranhão (MA), Paraíba (PR), Pernambuco (PE), Piauí (PI), and Rio Grande do\n# Norte (RN), and the eastern part of Pará (PA) are all in BR1 without DST.\n\n# From Marcos Tadeu (1998-09-27):\n# Brazilian official page <http://pcdsh01.on.br/verao1.html>\n\n# From Jesper Nørgaard (2000-11-03):\n# [For an official list of which regions in Brazil use which time zones, see:]\n# http://pcdsh01.on.br/Fusbr.htm\n# http://pcdsh01.on.br/Fusbrhv.htm\n\n# From Celso Doria via David Madeo (2002-10-09):\n# The reason for the delay this year has to do with elections in Brazil.\n#\n# Unlike in the United States, elections in Brazil are 100% computerized and\n# the results are known almost immediately.  Yesterday, it was the first\n# round of the elections when 115 million Brazilians voted for President,\n# Governor, Senators, Federal Deputies, and State Deputies.  Nobody is\n# counting (or re-counting) votes anymore and we know there will be a second\n# round for the Presidency and also for some Governors.  The 2nd round will\n# take place on October 27th.\n#\n# The reason why the DST will only begin November 3rd is that the thousands\n# of electoral machines used cannot have their time changed, and since the\n# Constitution says the elections must begin at 8:00 AM and end at 5:00 PM,\n# the Government decided to postpone DST, instead of changing the Constitution\n# (maybe, for the next elections, it will be possible to change the clock)...\n\n# From Rodrigo Severo (2004-10-04):\n# It's just the biannual change made necessary by the much hyped, supposedly\n# modern Brazilian ... voting machines which, apparently, can't deal\n# with a time change between the first and the second rounds of the elections.\n\n# From Steffen Thorsen (2007-09-20):\n# Brazil will start DST on 2007-10-14 00:00 and end on 2008-02-17 00:00:\n# http://www.mme.gov.br/site/news/detail.do;jsessionid=BBA06811AFCAAC28F0285210913513DA?newsId=13975\n\n# From Paul Schulze (2008-06-24):\n# ...by law number 11.662 of April 24, 2008 (published in the \"Diario\n# Oficial da União\"...) in Brazil there are changes in the timezones,\n# effective today (00:00am at June 24, 2008) as follows:\n#\n# a) The timezone UTC+5 is extinguished, with all the Acre state and the\n# part of the Amazonas state that had this timezone now being put to the\n# timezone UTC+4\n# b) The whole Pará state now is put at timezone UTC+3, instead of just\n# part of it, as was before.\n#\n# This change follows a proposal of senator Tiao Viana of Acre state, that\n# proposed it due to concerns about open television channels displaying\n# programs inappropriate to youths in the states that had the timezone\n# UTC+5 too early in the night. In the occasion, some more corrections\n# were proposed, trying to unify the timezones of any given state. This\n# change modifies timezone rules defined in decree 2.784 of 18 June,\n# 1913.\n\n# From Rodrigo Severo (2008-06-24):\n# Just correcting the URL:\n# https://www.in.gov.br/imprensa/visualiza/index.jsp?jornal=do&secao=1&pagina=1&data=25/04/2008\n#\n# As a result of the above Decree I believe the America/Rio_Branco\n# timezone shall be modified from UTC-5 to UTC-4 and a new timezone shall\n# be created to represent the...west side of the Pará State. I\n# suggest this new timezone be called Santarem as the most\n# important/populated city in the affected area.\n#\n# This new timezone would be the same as the Rio_Branco timezone up to\n# the 2008/06/24 change which would be to UTC-3 instead of UTC-4.\n\n# From Alex Krivenyshev (2008-06-24):\n# This is a quick reference page for New and Old Brazil Time Zones map.\n# http://www.worldtimezone.com/brazil-time-new-old.php\n#\n# - 4 time zones replaced by 3 time zones - eliminating time zone UTC-05\n# (state Acre and the part of the Amazonas will be UTC/GMT-04) - western\n# part of Par state is moving to one timezone UTC-03 (from UTC-04).\n\n# From Paul Eggert (2002-10-10):\n# The official decrees referenced below are mostly taken from\n# Decretos sobre o Horário de Verão no Brasil.\n# http://pcdsh01.on.br/DecHV.html\n\n# From Steffen Thorsen (2008-08-29):\n# As announced by the government and many newspapers in Brazil late\n# yesterday, Brazil will start DST on 2008-10-19 (need to change rule) and\n# it will end on 2009-02-15 (current rule for Brazil is fine). Based on\n# past years experience with the elections, there was a good chance that\n# the start was postponed to November, but it did not happen this year.\n#\n# It has not yet been posted to http://pcdsh01.on.br/DecHV.html\n#\n# An official page about it:\n# http://www.mme.gov.br/site/news/detail.do?newsId=16722\n# Note that this link does not always work directly, but must be accessed\n# by going to\n# http://www.mme.gov.br/first\n#\n# One example link that works directly:\n# http://jornale.com.br/index.php?option=com_content&task=view&id=13530&Itemid=54\n# (Portuguese)\n#\n# We have a written a short article about it as well:\n# https://www.timeanddate.com/news/time/brazil-dst-2008-2009.html\n#\n# From Alexander Krivenyshev (2011-10-04):\n# State Bahia will return to Daylight savings time this year after 8 years off.\n# The announcement was made by Governor Jaques Wagner in an interview to a\n# television station in Salvador.\n\n# In Portuguese:\n# http://g1.globo.com/bahia/noticia/2011/10/governador-jaques-wagner-confirma-horario-de-verao-na-bahia.html\n# https://noticias.terra.com.br/brasil/noticias/0,,OI5390887-EI8139,00-Bahia+volta+a+ter+horario+de+verao+apos+oito+anos.html\n\n# From Guilherme Bernardes Rodrigues (2011-10-07):\n# There is news in the media, however there is still no decree about it.\n# I just send a e-mail to Zulmira Brandao at http://pcdsh01.on.br/ the\n# official agency about time in Brazil, and she confirmed that the old rule is\n# still in force.\n\n# From Guilherme Bernardes Rodrigues (2011-10-14)\n# It's official, the President signed a decree that includes Bahia in summer\n# time.\n#\t [ and in a second message (same day): ]\n# I found the decree.\n#\n# DECRETO No. 7.584, DE 13 DE OUTUBRO DE 2011\n# Link :\n# http://www.in.gov.br/visualiza/index.jsp?data=13/10/2011&jornal=1000&pagina=6&totalArquivos=6\n\n# From Kelley Cook (2012-10-16):\n# The governor of state of Bahia in Brazil announced on Thursday that\n# due to public pressure, he is reversing the DST policy they implemented\n# last year and will not be going to Summer Time on October 21st....\n# http://www.correio24horas.com.br/r/artigo/apos-pressoes-wagner-suspende-horario-de-verao-na-bahia\n\n# From Rodrigo Severo (2012-10-16):\n# Tocantins state will have DST.\n# https://noticias.terra.com.br/brasil/noticias/0,,OI6232536-EI306.html\n\n# From Steffen Thorsen (2013-09-20):\n# Tocantins in Brazil is very likely not to observe DST from October....\n# http://conexaoto.com.br/2013/09/18/ministerio-confirma-que-tocantins-esta-fora-do-horario-de-verao-em-2013-mas-falta-publicacao-de-decreto\n# We will keep this article updated when this is confirmed:\n# https://www.timeanddate.com/news/time/brazil-starts-dst-2013.html\n\n# From Steffen Thorsen (2013-10-17):\n# https://www.timeanddate.com/news/time/acre-amazonas-change-time-zone.html\n# Senator Jorge Viana announced that Acre will change time zone on November 10.\n# He did not specify the time of the change, nor if western parts of Amazonas\n# will change as well.\n#\n# From Paul Eggert (2013-10-17):\n# For now, assume western Amazonas will change as well.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\n# Decree 20,466 <http://pcdsh01.on.br/HV20466.htm> (1931-10-01)\n# Decree 21,896 <http://pcdsh01.on.br/HV21896.htm> (1932-01-10)\nRule\tBrazil\t1931\tonly\t-\tOct\t 3\t11:00\t1:00\t-\nRule\tBrazil\t1932\t1933\t-\tApr\t 1\t 0:00\t0\t-\nRule\tBrazil\t1932\tonly\t-\tOct\t 3\t 0:00\t1:00\t-\n# Decree 23,195 <http://pcdsh01.on.br/HV23195.htm> (1933-10-10)\n# revoked DST.\n# Decree 27,496 <http://pcdsh01.on.br/HV27496.htm> (1949-11-24)\n# Decree 27,998 <http://pcdsh01.on.br/HV27998.htm> (1950-04-13)\nRule\tBrazil\t1949\t1952\t-\tDec\t 1\t 0:00\t1:00\t-\nRule\tBrazil\t1950\tonly\t-\tApr\t16\t 1:00\t0\t-\nRule\tBrazil\t1951\t1952\t-\tApr\t 1\t 0:00\t0\t-\n# Decree 32,308 <http://pcdsh01.on.br/HV32308.htm> (1953-02-24)\nRule\tBrazil\t1953\tonly\t-\tMar\t 1\t 0:00\t0\t-\n# Decree 34,724 <http://pcdsh01.on.br/HV34724.htm> (1953-11-30)\n# revoked DST.\n# Decree 52,700 <http://pcdsh01.on.br/HV52700.htm> (1963-10-18)\n# established DST from 1963-10-23 00:00 to 1964-02-29 00:00\n# in SP, RJ, GB, MG, ES, due to the prolongation of the drought.\n# Decree 53,071 <http://pcdsh01.on.br/HV53071.htm> (1963-12-03)\n# extended the above decree to all of the national territory on 12-09.\nRule\tBrazil\t1963\tonly\t-\tDec\t 9\t 0:00\t1:00\t-\n# Decree 53,604 <http://pcdsh01.on.br/HV53604.htm> (1964-02-25)\n# extended summer time by one day to 1964-03-01 00:00 (start of school).\nRule\tBrazil\t1964\tonly\t-\tMar\t 1\t 0:00\t0\t-\n# Decree 55,639 <http://pcdsh01.on.br/HV55639.htm> (1965-01-27)\nRule\tBrazil\t1965\tonly\t-\tJan\t31\t 0:00\t1:00\t-\nRule\tBrazil\t1965\tonly\t-\tMar\t31\t 0:00\t0\t-\n# Decree 57,303 <http://pcdsh01.on.br/HV57303.htm> (1965-11-22)\nRule\tBrazil\t1965\tonly\t-\tDec\t 1\t 0:00\t1:00\t-\n# Decree 57,843 <http://pcdsh01.on.br/HV57843.htm> (1966-02-18)\nRule\tBrazil\t1966\t1968\t-\tMar\t 1\t 0:00\t0\t-\nRule\tBrazil\t1966\t1967\t-\tNov\t 1\t 0:00\t1:00\t-\n# Decree 63,429 <http://pcdsh01.on.br/HV63429.htm> (1968-10-15)\n# revoked DST.\n# Decree 91,698 <http://pcdsh01.on.br/HV91698.htm> (1985-09-27)\nRule\tBrazil\t1985\tonly\t-\tNov\t 2\t 0:00\t1:00\t-\n# Decree 92,310 (1986-01-21)\n# Decree 92,463 (1986-03-13)\nRule\tBrazil\t1986\tonly\t-\tMar\t15\t 0:00\t0\t-\n# Decree 93,316 (1986-10-01)\nRule\tBrazil\t1986\tonly\t-\tOct\t25\t 0:00\t1:00\t-\nRule\tBrazil\t1987\tonly\t-\tFeb\t14\t 0:00\t0\t-\n# Decree 94,922 <http://pcdsh01.on.br/HV94922.htm> (1987-09-22)\nRule\tBrazil\t1987\tonly\t-\tOct\t25\t 0:00\t1:00\t-\nRule\tBrazil\t1988\tonly\t-\tFeb\t 7\t 0:00\t0\t-\n# Decree 96,676 <http://pcdsh01.on.br/HV96676.htm> (1988-09-12)\n# except for the states of AC, AM, PA, RR, RO, and AP (then a territory)\nRule\tBrazil\t1988\tonly\t-\tOct\t16\t 0:00\t1:00\t-\nRule\tBrazil\t1989\tonly\t-\tJan\t29\t 0:00\t0\t-\n# Decree 98,077 <http://pcdsh01.on.br/HV98077.htm> (1989-08-21)\n# with the same exceptions\nRule\tBrazil\t1989\tonly\t-\tOct\t15\t 0:00\t1:00\t-\nRule\tBrazil\t1990\tonly\t-\tFeb\t11\t 0:00\t0\t-\n# Decree 99,530 <http://pcdsh01.on.br/HV99530.htm> (1990-09-17)\n# adopted by RS, SC, PR, SP, RJ, ES, MG, GO, MS, DF.\n# Decree 99,629 (1990-10-19) adds BA, MT.\nRule\tBrazil\t1990\tonly\t-\tOct\t21\t 0:00\t1:00\t-\nRule\tBrazil\t1991\tonly\t-\tFeb\t17\t 0:00\t0\t-\n# Unnumbered decree <http://pcdsh01.on.br/HV1991.htm> (1991-09-25)\n# adopted by RS, SC, PR, SP, RJ, ES, MG, BA, GO, MT, MS, DF.\nRule\tBrazil\t1991\tonly\t-\tOct\t20\t 0:00\t1:00\t-\nRule\tBrazil\t1992\tonly\t-\tFeb\t 9\t 0:00\t0\t-\n# Unnumbered decree <http://pcdsh01.on.br/HV1992.htm> (1992-10-16)\n# adopted by same states.\nRule\tBrazil\t1992\tonly\t-\tOct\t25\t 0:00\t1:00\t-\nRule\tBrazil\t1993\tonly\t-\tJan\t31\t 0:00\t0\t-\n# Decree 942 <http://pcdsh01.on.br/HV942.htm> (1993-09-28)\n# adopted by same states, plus AM.\n# Decree 1,252 <http://pcdsh01.on.br/HV1252.htm> (1994-09-22;\n# web page corrected 2004-01-07) adopted by same states, minus AM.\n# Decree 1,636 <http://pcdsh01.on.br/HV1636.htm> (1995-09-14)\n# adopted by same states, plus MT and TO.\n# Decree 1,674 <http://pcdsh01.on.br/HV1674.htm> (1995-10-13)\n# adds AL, SE.\nRule\tBrazil\t1993\t1995\t-\tOct\tSun>=11\t 0:00\t1:00\t-\nRule\tBrazil\t1994\t1995\t-\tFeb\tSun>=15\t 0:00\t0\t-\nRule\tBrazil\t1996\tonly\t-\tFeb\t11\t 0:00\t0\t-\n# Decree 2,000 <http://pcdsh01.on.br/HV2000.htm> (1996-09-04)\n# adopted by same states, minus AL, SE.\nRule\tBrazil\t1996\tonly\t-\tOct\t 6\t 0:00\t1:00\t-\nRule\tBrazil\t1997\tonly\t-\tFeb\t16\t 0:00\t0\t-\n# From Daniel C. Sobral (1998-02-12):\n# In 1997, the DS began on October 6. The stated reason was that\n# because international television networks ignored Brazil's policy on DS,\n# they bought the wrong times on satellite for coverage of Pope's visit.\n# This year, the ending date of DS was postponed to March 1\n# to help dealing with the shortages of electric power.\n#\n# Decree 2,317 (1997-09-04), adopted by same states.\nRule\tBrazil\t1997\tonly\t-\tOct\t 6\t 0:00\t1:00\t-\n# Decree 2,495 <http://pcdsh01.on.br/figuras/HV2495.JPG>\n# (1998-02-10)\nRule\tBrazil\t1998\tonly\t-\tMar\t 1\t 0:00\t0\t-\n# Decree 2,780 <http://pcdsh01.on.br/figuras/Hv98.jpg> (1998-09-11)\n# adopted by the same states as before.\nRule\tBrazil\t1998\tonly\t-\tOct\t11\t 0:00\t1:00\t-\nRule\tBrazil\t1999\tonly\t-\tFeb\t21\t 0:00\t0\t-\n# Decree 3,150 <http://pcdsh01.on.br/figuras/HV3150.gif>\n# (1999-08-23) adopted by same states.\n# Decree 3,188 <http://pcdsh01.on.br/DecHV99.gif> (1999-09-30)\n# adds SE, AL, PB, PE, RN, CE, PI, MA and RR.\nRule\tBrazil\t1999\tonly\t-\tOct\t 3\t 0:00\t1:00\t-\nRule\tBrazil\t2000\tonly\t-\tFeb\t27\t 0:00\t0\t-\n# Decree 3,592 <http://pcdsh01.on.br/DEC3592.htm> (2000-09-06)\n# adopted by the same states as before.\n# Decree 3,630 <http://pcdsh01.on.br/Dec3630.jpg> (2000-10-13)\n# repeals DST in PE and RR, effective 2000-10-15 00:00.\n# Decree 3,632 <http://pcdsh01.on.br/Dec3632.jpg> (2000-10-17)\n# repeals DST in SE, AL, PB, RN, CE, PI and MA, effective 2000-10-22 00:00.\n# Decree 3,916 <http://pcdsh01.on.br/figuras/HV3916.gif>\n# (2001-09-13) reestablishes DST in AL, CE, MA, PB, PE, PI, RN, SE.\nRule\tBrazil\t2000\t2001\t-\tOct\tSun>=8\t 0:00\t1:00\t-\nRule\tBrazil\t2001\t2006\t-\tFeb\tSun>=15\t 0:00\t0\t-\n# Decree 4,399 (2002-10-01) repeals DST in AL, CE, MA, PB, PE, PI, RN, SE.\n# 4,399 <http://www.presidencia.gov.br/CCIVIL/decreto/2002/D4399.htm>\nRule\tBrazil\t2002\tonly\t-\tNov\t 3\t 0:00\t1:00\t-\n# Decree 4,844 (2003-09-24; corrected 2003-09-26) repeals DST in BA, MT, TO.\n# 4,844 <http://www.presidencia.gov.br/CCIVIL/decreto/2003/D4844.htm>\nRule\tBrazil\t2003\tonly\t-\tOct\t19\t 0:00\t1:00\t-\n# Decree 5,223 (2004-10-01) reestablishes DST in MT.\n# 5,223 <http://www.planalto.gov.br/ccivil_03/_Ato2004-2006/2004/Decreto/D5223.htm>\nRule\tBrazil\t2004\tonly\t-\tNov\t 2\t 0:00\t1:00\t-\n# Decree 5,539 <http://pcdsh01.on.br/DecHV5539.gif> (2005-09-19),\n# adopted by the same states as before.\nRule\tBrazil\t2005\tonly\t-\tOct\t16\t 0:00\t1:00\t-\n# Decree 5,920 <http://pcdsh01.on.br/DecHV5920.gif> (2006-10-03),\n# adopted by the same states as before.\nRule\tBrazil\t2006\tonly\t-\tNov\t 5\t 0:00\t1:00\t-\nRule\tBrazil\t2007\tonly\t-\tFeb\t25\t 0:00\t0\t-\n# Decree 6,212 <http://pcdsh01.on.br/DecHV6212.gif> (2007-09-26),\n# adopted by the same states as before.\nRule\tBrazil\t2007\tonly\t-\tOct\tSun>=8\t 0:00\t1:00\t-\n# From Frederico A. C. Neves (2008-09-10):\n# According to this decree\n# http://www.planalto.gov.br/ccivil_03/_Ato2007-2010/2008/Decreto/D6558.htm\n# [t]he DST period in Brazil now on will be from the 3rd Oct Sunday to the\n# 3rd Feb Sunday. There is an exception on the return date when this is\n# the Carnival Sunday then the return date will be the next Sunday...\nRule\tBrazil\t2008\t2017\t-\tOct\tSun>=15\t0:00\t1:00\t-\nRule\tBrazil\t2008\t2011\t-\tFeb\tSun>=15\t0:00\t0\t-\n# Decree 7,584 <http://pcdsh01.on.br/HVdecreto7584_20111013.jpg> (2011-10-13)\n# added Bahia.\nRule\tBrazil\t2012\tonly\t-\tFeb\tSun>=22\t0:00\t0\t-\n# Decree 7,826 <http://pcdsh01.on.br/HVdecreto7826_20121015.jpg> (2012-10-15)\n# removed Bahia and added Tocantins.\n# Decree 8,112 <http://pcdsh01.on.br/HVdecreto8112_20130930.JPG> (2013-09-30)\n# removed Tocantins.\nRule\tBrazil\t2013\t2014\t-\tFeb\tSun>=15\t0:00\t0\t-\nRule\tBrazil\t2015\tonly\t-\tFeb\tSun>=22\t0:00\t0\t-\nRule\tBrazil\t2016\t2019\t-\tFeb\tSun>=15\t0:00\t0\t-\n# From Steffen Thorsen (2017-12-18):\n# According to many media sources, next year's DST start in Brazil will move to\n# the first Sunday of November\n# ... https://www.timeanddate.com/news/time/brazil-delays-dst-2018.html\n# From Steffen Thorsen (2017-12-20):\n# http://www.planalto.gov.br/ccivil_03/_ato2015-2018/2017/decreto/D9242.htm\n# From Fábio Gomes (2018-10-04):\n# The Brazilian president just announced a new change on this year DST.\n# It was scheduled to start on November 4th and it was changed to November 18th.\n# From Rodrigo Brüning Wessler (2018-10-15):\n# The Brazilian government just announced that the change in DST was\n# canceled....  Maybe the president Michel Temer also woke up one hour\n# earlier today. :)\nRule\tBrazil\t2018\tonly\t-\tNov\tSun>=1\t0:00\t1:00\t-\n# The last ruleset listed above says that the following states observed DST:\n# DF, ES, GO, MG, MS, MT, PR, RJ, RS, SC, SP.\n#\n# From Steffen Thorsen (2019-04-05):\n# According to multiple sources the Brazilian president wants to get rid of DST.\n# https://gmconline.com.br/noticias/politica/bolsonaro-horario-de-verao-deve-acabar-este-ano\n# https://g1.globo.com/economia/noticia/2019/04/05/governo-anuncia-fim-do-horario-de-verao.ghtml\n# From Marcus Diniz (2019-04-25):\n# Brazil no longer has DST changes - decree signed today\n# https://g1.globo.com/politica/noticia/2019/04/25/bolsonaro-assina-decreto-que-acaba-com-o-horario-de-verao.ghtml\n# From Daniel Soares de Oliveira (2019-04-26):\n# http://www.planalto.gov.br/ccivil_03/_Ato2019-2022/2019/Decreto/D9772.htm\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n#\n# Fernando de Noronha (administratively part of PE)\nZone America/Noronha\t-2:09:40 -\tLMT\t1914\n\t\t\t-2:00\tBrazil\t%z\t1990 Sep 17\n\t\t\t-2:00\t-\t%z\t1999 Sep 30\n\t\t\t-2:00\tBrazil\t%z\t2000 Oct 15\n\t\t\t-2:00\t-\t%z\t2001 Sep 13\n\t\t\t-2:00\tBrazil\t%z\t2002 Oct  1\n\t\t\t-2:00\t-\t%z\n# Other Atlantic islands have no permanent settlement.\n# These include Trindade and Martim Vaz (administratively part of ES),\n# Rocas Atoll (RN), and the St Peter and St Paul Archipelago (PE).\n# Fernando de Noronha was a separate territory from 1942-09-02 to 1989-01-01;\n# it also included the Penedos.\n#\n# Amapá (AP), east Pará (PA)\n# East Pará includes Belém, Marabá, Serra Norte, and São Félix do Xingu.\n# The division between east and west Pará is the river Xingu.\n# In the north a very small part from the river Javary (now Jari I guess,\n# the border with Amapá) to the Amazon, then to the Xingu.\nZone America/Belem\t-3:13:56 -\tLMT\t1914\n\t\t\t-3:00\tBrazil\t%z\t1988 Sep 12\n\t\t\t-3:00\t-\t%z\n#\n# west Pará (PA)\n# West Pará includes Altamira, Óbidos, Prainha, Oriximiná, and Santarém.\nZone America/Santarem\t-3:38:48 -\tLMT\t1914\n\t\t\t-4:00\tBrazil\t%z\t1988 Sep 12\n\t\t\t-4:00\t-\t%z\t2008 Jun 24  0:00\n\t\t\t-3:00\t-\t%z\n#\n# Maranhão (MA), Piauí (PI), Ceará (CE), Rio Grande do Norte (RN),\n# Paraíba (PB)\nZone America/Fortaleza\t-2:34:00 -\tLMT\t1914\n\t\t\t-3:00\tBrazil\t%z\t1990 Sep 17\n\t\t\t-3:00\t-\t%z\t1999 Sep 30\n\t\t\t-3:00\tBrazil\t%z\t2000 Oct 22\n\t\t\t-3:00\t-\t%z\t2001 Sep 13\n\t\t\t-3:00\tBrazil\t%z\t2002 Oct  1\n\t\t\t-3:00\t-\t%z\n#\n# Pernambuco (PE) (except Atlantic islands)\nZone America/Recife\t-2:19:36 -\tLMT\t1914\n\t\t\t-3:00\tBrazil\t%z\t1990 Sep 17\n\t\t\t-3:00\t-\t%z\t1999 Sep 30\n\t\t\t-3:00\tBrazil\t%z\t2000 Oct 15\n\t\t\t-3:00\t-\t%z\t2001 Sep 13\n\t\t\t-3:00\tBrazil\t%z\t2002 Oct  1\n\t\t\t-3:00\t-\t%z\n#\n# Tocantins (TO)\nZone America/Araguaina\t-3:12:48 -\tLMT\t1914\n\t\t\t-3:00\tBrazil\t%z\t1990 Sep 17\n\t\t\t-3:00\t-\t%z\t1995 Sep 14\n\t\t\t-3:00\tBrazil\t%z\t2003 Sep 24\n\t\t\t-3:00\t-\t%z\t2012 Oct 21\n\t\t\t-3:00\tBrazil\t%z\t2013 Sep\n\t\t\t-3:00\t-\t%z\n#\n# Alagoas (AL), Sergipe (SE)\nZone America/Maceio\t-2:22:52 -\tLMT\t1914\n\t\t\t-3:00\tBrazil\t%z\t1990 Sep 17\n\t\t\t-3:00\t-\t%z\t1995 Oct 13\n\t\t\t-3:00\tBrazil\t%z\t1996 Sep  4\n\t\t\t-3:00\t-\t%z\t1999 Sep 30\n\t\t\t-3:00\tBrazil\t%z\t2000 Oct 22\n\t\t\t-3:00\t-\t%z\t2001 Sep 13\n\t\t\t-3:00\tBrazil\t%z\t2002 Oct  1\n\t\t\t-3:00\t-\t%z\n#\n# Bahia (BA)\n# There are too many Salvadors elsewhere, so use America/Bahia instead\n# of America/Salvador.\nZone America/Bahia\t-2:34:04 -\tLMT\t1914\n\t\t\t-3:00\tBrazil\t%z\t2003 Sep 24\n\t\t\t-3:00\t-\t%z\t2011 Oct 16\n\t\t\t-3:00\tBrazil\t%z\t2012 Oct 21\n\t\t\t-3:00\t-\t%z\n#\n# Goiás (GO), Distrito Federal (DF), Minas Gerais (MG),\n# Espírito Santo (ES), Rio de Janeiro (RJ), São Paulo (SP), Paraná (PR),\n# Santa Catarina (SC), Rio Grande do Sul (RS)\nZone America/Sao_Paulo\t-3:06:28 -\tLMT\t1914\n\t\t\t-3:00\tBrazil\t%z\t1963 Oct 23  0:00\n\t\t\t-3:00\t1:00\t%z\t1964\n\t\t\t-3:00\tBrazil\t%z\n#\n# Mato Grosso do Sul (MS)\nZone America/Campo_Grande -3:38:28 -\tLMT\t1914\n\t\t\t-4:00\tBrazil\t%z\n#\n# Mato Grosso (MT)\nZone America/Cuiaba\t-3:44:20 -\tLMT\t1914\n\t\t\t-4:00\tBrazil\t%z\t2003 Sep 24\n\t\t\t-4:00\t-\t%z\t2004 Oct  1\n\t\t\t-4:00\tBrazil\t%z\n#\n# Rondônia (RO)\nZone America/Porto_Velho -4:15:36 -\tLMT\t1914\n\t\t\t-4:00\tBrazil\t%z\t1988 Sep 12\n\t\t\t-4:00\t-\t%z\n#\n# Roraima (RR)\nZone America/Boa_Vista\t-4:02:40 -\tLMT\t1914\n\t\t\t-4:00\tBrazil\t%z\t1988 Sep 12\n\t\t\t-4:00\t-\t%z\t1999 Sep 30\n\t\t\t-4:00\tBrazil\t%z\t2000 Oct 15\n\t\t\t-4:00\t-\t%z\n#\n# east Amazonas (AM): Boca do Acre, Jutaí, Manaus, Floriano Peixoto\n# The great circle line from Tabatinga to Porto Acre divides\n# east from west Amazonas.\nZone America/Manaus\t-4:00:04 -\tLMT\t1914\n\t\t\t-4:00\tBrazil\t%z\t1988 Sep 12\n\t\t\t-4:00\t-\t%z\t1993 Sep 28\n\t\t\t-4:00\tBrazil\t%z\t1994 Sep 22\n\t\t\t-4:00\t-\t%z\n#\n# west Amazonas (AM): Atalaia do Norte, Boca do Maoco, Benjamin Constant,\n#\tEirunepé, Envira, Ipixuna\nZone America/Eirunepe\t-4:39:28 -\tLMT\t1914\n\t\t\t-5:00\tBrazil\t%z\t1988 Sep 12\n\t\t\t-5:00\t-\t%z\t1993 Sep 28\n\t\t\t-5:00\tBrazil\t%z\t1994 Sep 22\n\t\t\t-5:00\t-\t%z\t2008 Jun 24  0:00\n\t\t\t-4:00\t-\t%z\t2013 Nov 10\n\t\t\t-5:00\t-\t%z\n#\n# Acre (AC)\nZone America/Rio_Branco\t-4:31:12 -\tLMT\t1914\n\t\t\t-5:00\tBrazil\t%z\t1988 Sep 12\n\t\t\t-5:00\t-\t%z\t2008 Jun 24  0:00\n\t\t\t-4:00\t-\t%z\t2013 Nov 10\n\t\t\t-5:00\t-\t%z\n\n# Chile\n\n# From Paul Eggert (2022-03-15):\n# Shanks & Pottenger says America/Santiago introduced standard time in\n# 1890 and rounds its UT offset to 70W40; guess that in practice this\n# was the same offset as in 1916-1919.  It also says Pacific/Easter\n# standardized on 109W22 in 1890; assume this didn't change the clocks.\n#\n# Dates for America/Santiago from 1910 to 2004 are primarily from\n# the following source, cited by Oscar van Vlijmen (2006-10-08):\n# [1] Chile Law\n# http://www.webexhibits.org/daylightsaving/chile.html\n# This contains a copy of this official table:\n# Cambios en la hora oficial de Chile desde 1900 (retrieved 2008-03-30)\n# https://web.archive.org/web/20080330200901/http://www.horaoficial.cl/cambio.htm\n# [1] needs several corrections, though.\n#\n# The first set of corrections is from:\n# [2] History of the Official Time of Chile\n# http://www.horaoficial.cl/ing/horaof_ing.html (retrieved 2012-03-06).  See:\n# https://web.archive.org/web/20120306042032/http://www.horaoficial.cl/ing/horaof_ing.html\n# This is an English translation of:\n# Historia de la hora oficial de Chile (retrieved 2012-10-24).  See:\n# https://web.archive.org/web/20121024234627/http://www.horaoficial.cl/horaof.htm\n# A fancier Spanish version (requiring mouse-clicking) is at:\n# http://www.horaoficial.cl/historia_hora.php\n# Conflicts between [1] and [2] were resolved as follows:\n#\n#  - [1] says the 1910 transition was Jan 1, [2] says Jan 10 and cites\n#    Boletín No. 1, Aviso No. 1 (1910).  Go with [2].\n#\n#  - [1] says SMT was -4:42:45, [2] says Chile's official time from\n#    1916 to 1919 was -4:42:46.3, the meridian of Chile's National\n#    Astronomical Observatory (OAN), then located in what is now\n#    Quinta Normal in Santiago.  Go with [1], as this matches the meridian\n#    referred to by the relevant Chilean laws to this day.\n#\n#  - [1] says the 1918 transition was Sep 1, [2] says Sep 10 and cites\n#    Boletín No. 22, Aviso No. 129/1918 (1918-08-23).  Go with [2].\n#\n#  - [1] does not give times for transitions; assume they occur\n#    at midnight mainland time, the current common practice.  However,\n#    go with [2]'s specification of 23:00 for the 1947-05-21 transition.\n#\n# Another correction to [1] is from Jesper Nørgaard Welen, who\n# wrote (2006-10-08), \"I think that there are some obvious mistakes in\n# the suggested link from Oscar van Vlijmen,... for instance entry 66\n# says that GMT-4 ended 1990-09-12 while entry 67 only begins GMT-3 at\n# 1990-09-15 (they should have been 1990-09-15 and 1990-09-16\n# respectively), but anyhow it clears up some doubts too.\"\n#\n# Data for Pacific/Easter from 1910 through 1967 come from Shanks &\n# Pottenger.  After that, for lack of better info assume\n# Pacific/Easter is always two hours behind America/Santiago;\n# this is known to work for DST transitions starting in 2008 and\n# may well be true for earlier transitions.\n\n# From Tim Parenti (2022-07-06):\n# For a brief period of roughly six weeks in 1946, DST was only observed on an\n# emergency basis in specific regions of central Chile; namely, \"the national\n# territory between the provinces of Coquimbo and Concepción, inclusive\".\n# This was enacted by Decree 3,891, dated 1946-07-13, and took effect\n# 1946-07-14 24:00, advancing these central regions to -03.\n# https://www.diariooficial.interior.gob.cl/versiones-anteriores/do-h/19460715/#page/1\n# The decree contemplated \"[t]hat this advancement of the Official Time, even\n# though it has been proposed for the cities of Santiago and Valparaíso only,\n# must be agreed with that of other cities, due to the connection of various\n# activities that require it, such as, for example, the operation of rail\n# services\".  It was originally set to expire after 30 days but was extended\n# through 1946-08-31 by Decree 4,506, dated 1946-08-13.\n# https://www.diariooficial.interior.gob.cl/versiones-anteriores/do-h/19460814/#page/1\n#\n# Law Number 8,522, promulgated 1946-08-27, reunified Chilean clocks at their\n# new \"Summer Time\" of -04, reckoned as that of \"the meridian of the\n# Astronomical Observatory of Lo Espejo, advanced by 42 minutes and 45\n# seconds\".  Although this law specified the new Summer Time to start on 1\n# September each year, a special \"transitional article\" started it a few days\n# early, as soon as the law took effect.  As the law was to take force \"from\n# the date of its publication in the 'Diario Oficial', which happened the\n# following day, presume the change took place in Santiago and its environs\n# from 24:00 -03 to 23:00 -04 on Wednesday 1946-08-28.  Although this was a\n# no-op for wall clocks in the north and south of the country, put their formal\n# start to DST an hour later when they reached 24:00 -04.\n# https://www.diariooficial.interior.gob.cl/versiones-anteriores/do-h/19460828/#page/1\n# After a brief \"Winter Time\" stint at -05 beginning 1947-04-01, Law Number\n# 8,777, promulgated 1947-05-17, established year-round -04 \"from 23:00 on the\n# second day after it is published in the 'Diario Oficial'.\"  It was published\n# on Monday 1947-05-19 and so took effect from Wednesday 1947-05-21 23:00.\n# https://www.diariooficial.interior.gob.cl/versiones-anteriores/do-h/19470519/#page/1\n\n# From Eduardo Krell (1995-10-19):\n# The law says to switch to DST at midnight [24:00] on the second SATURDAY\n# of October....  The law is the same for March and October.\n# (1998-09-29):\n# Because of the drought this year, the government decided to go into\n# DST earlier (saturday 9/26 at 24:00). This is a one-time change only ...\n# (unless there's another dry season next year, I guess).\n\n# From Julio I. Pacheco Troncoso (1999-03-18):\n# Because of the same drought, the government decided to end DST later,\n# on April 3, (one-time change).\n\n# From Germán Poo-Caamaño (2008-03-03):\n# Due to drought, Chile extends Daylight Time in three weeks.  This\n# is one-time change (Saturday 3/29 at 24:00 for America/Santiago\n# and Saturday 3/29 at 22:00 for Pacific/Easter)\n# The Supreme Decree is located at\n# http://www.shoa.cl/servicios/supremo316.pdf\n#\n# From José Miguel Garrido (2008-03-05):\n# http://www.shoa.cl/noticias/2008/04hora/hora.htm\n\n# From Angel Chiang (2010-03-04):\n# Subject: DST in Chile exceptionally extended to 3 April due to earthquake\n# http://www.gobiernodechile.cl/viewNoticia.aspx?idArticulo=30098\n#\n# From Arthur David Olson (2010-03-06):\n# Angel Chiang's message confirmed by Julio Pacheco; Julio provided a patch.\n\n# From Glenn Eychaner (2011-03-28):\n# http://diario.elmercurio.com/2011/03/28/_portada/_portada/noticias/7565897A-CA86-49E6-9E03-660B21A4883E.htm?id=3D{7565897A-CA86-49E6-9E03-660B21A4883E}\n# In English:\n# Chile's clocks will go back an hour this year on the 7th of May instead\n# of this Saturday. They will go forward again the 3rd Saturday in\n# August, not in October as they have since 1968.\n\n# From Mauricio Parada (2012-02-22), translated by Glenn Eychaner (2012-02-23):\n# As stated in the website of the Chilean Energy Ministry\n# http://www.minenergia.cl/ministerio/noticias/generales/gobierno-anuncia-fechas-de-cambio-de.html\n# The Chilean Government has decided to postpone the entrance into winter time\n# (to leave DST) from March 11 2012 to April 28th 2012....\n# Quote from the website communication:\n#\n# 6. For the year 2012, the dates of entry into winter time will be as follows:\n# a. Saturday April 28, 2012, clocks should go back 60 minutes; that is, at\n# 23:59:59, instead of passing to 0:00, the time should be adjusted to be 23:00\n# of the same day.\n# b. Saturday, September 1, 2012, clocks should go forward 60 minutes; that is,\n# at 23:59:59, instead of passing to 0:00, the time should be adjusted to be\n# 01:00 on September 2.\n\n# From Steffen Thorsen (2013-02-15):\n# According to several news sources, Chile has extended DST this year,\n# they will end DST later and start DST earlier than planned.  They\n# hope to save energy.  The new end date is 2013-04-28 00:00 and new\n# start date is 2013-09-08 00:00....\n# http://www.gob.cl/informa/2013/02/15/gobierno-anuncia-fechas-de-cambio-de-hora-para-el-ano-2013.htm\n\n# From José Miguel Garrido (2014-02-19):\n# Today appeared in the Diario Oficial a decree amending the time change\n# dates to 2014.\n# DST End: last Saturday of April 2014 (Sun 27 Apr 2014 03:00 UTC)\n# DST Start: first Saturday of September 2014 (Sun 07 Sep 2014 04:00 UTC)\n# http://www.diariooficial.interior.gob.cl//media/2014/02/19/do-20140219.pdf\n\n# From Eduardo Romero Urra (2015-03-03):\n# Today has been published officially that Chile will use the DST time\n# permanently until March 25 of 2017\n# http://www.diariooficial.interior.gob.cl/media/2015/03/03/1-large.jpg\n#\n# From Paul Eggert (2015-03-03):\n# For now, assume that the extension will persist indefinitely.\n\n# From Juan Correa (2016-03-18):\n# The decree regarding DST has been published in today's Official Gazette:\n# http://www.diariooficial.interior.gob.cl/versiones-anteriores/do/20160318/\n# http://www.leychile.cl/Navegar?idNorma=1088502\n# It does consider the second Saturday of May and August as the dates\n# for the transition; and it lists DST dates until 2019, but I think\n# this scheme will stick.\n#\n# From Paul Eggert (2016-03-18):\n# For now, assume the pattern holds for the indefinite future.\n# The decree says transitions occur at 24:00; in practice this appears\n# to mean 24:00 mainland time, not 24:00 local time, so that Easter\n# Island is always two hours behind the mainland.\n\n# From Juan Correa (2016-12-04):\n# Magallanes region ... will keep DST (UTC -3) all year round....\n# http://www.soychile.cl/Santiago/Sociedad/2016/12/04/433428/Bachelet-firmo-el-decreto-para-establecer-un-horario-unico-para-la-Region-de-Magallanes.aspx\n# From Deborah Goldsmith (2017-01-19):\n# http://www.diariooficial.interior.gob.cl/publicaciones/2017/01/17/41660/01/1169626.pdf\n\n# From Juan Correa (2018-08-13):\n# As of moments ago, the Ministry of Energy in Chile has announced the new\n# schema for DST. ...  Announcement in video (in Spanish):\n# https://twitter.com/MinEnergia/status/1029000399129374720\n# From Yonathan Dossow (2018-08-13):\n# The video says \"first Saturday of September\", we all know it means Sunday at\n# midnight.\n# From Tim Parenti (2018-08-13):\n# Translating the captions on the video at 0:44-0:55, \"We want to announce as\n# Government that from 2019, Winter Time will be increased to 5 months, between\n# the first Saturday of April and the first Saturday of September.\"\n# At 2:08-2:20, \"The Magallanes region will maintain its current time, as\n# decided by the citizens during 2017, but our Government will promote a\n# regional dialogue table to gather their opinion on this matter.\"\n# https://twitter.com/MinEnergia/status/1029009354001973248\n# \"We will keep the new time policy unchanged for at least the next 4 years.\"\n# So we extend the new rules on Saturdays at 24:00 mainland time indefinitely.\n# From Juan Correa (2019-02-04):\n# http://www.diariooficial.interior.gob.cl/publicaciones/2018/11/23/42212/01/1498738.pdf\n\n# From Juan Correa (2022-04-02):\n# I found there was a decree published last Thursday that will keep\n# Magallanes region to UTC -3 \"indefinitely\". The decree is available at\n# https://www.diariooficial.interior.gob.cl/publicaciones/2022/03/31/43217-B/01/2108910.pdf\n\n# From Juan Correa (2022-08-09):\n# the Internal Affairs Ministry (Ministerio del Interior) informed DST\n# for America/Santiago will start on midnight of September 11th;\n# and will end on April 1st, 2023. Magallanes region (America/Punta_Arenas)\n# will keep UTC -3 \"indefinitely\"...  This is because on September 4th\n# we will have a voting whether to approve a new Constitution.\n#\n# From Eduardo Romero Urra (2022-08-17):\n# https://www.diariooficial.interior.gob.cl/publicaciones/2022/08/13/43327/01/2172567.pdf\n#\n# From Paul Eggert (2022-08-17):\n# Although the presidential decree stops at fall 2026, assume that\n# similar DST rules will continue thereafter.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tChile\t1927\t1931\t-\tSep\t 1\t0:00\t1:00\t-\nRule\tChile\t1928\t1932\t-\tApr\t 1\t0:00\t0\t-\nRule\tChile\t1968\tonly\t-\tNov\t 3\t4:00u\t1:00\t-\nRule\tChile\t1969\tonly\t-\tMar\t30\t3:00u\t0\t-\nRule\tChile\t1969\tonly\t-\tNov\t23\t4:00u\t1:00\t-\nRule\tChile\t1970\tonly\t-\tMar\t29\t3:00u\t0\t-\nRule\tChile\t1971\tonly\t-\tMar\t14\t3:00u\t0\t-\nRule\tChile\t1970\t1972\t-\tOct\tSun>=9\t4:00u\t1:00\t-\nRule\tChile\t1972\t1986\t-\tMar\tSun>=9\t3:00u\t0\t-\nRule\tChile\t1973\tonly\t-\tSep\t30\t4:00u\t1:00\t-\nRule\tChile\t1974\t1987\t-\tOct\tSun>=9\t4:00u\t1:00\t-\nRule\tChile\t1987\tonly\t-\tApr\t12\t3:00u\t0\t-\nRule\tChile\t1988\t1990\t-\tMar\tSun>=9\t3:00u\t0\t-\nRule\tChile\t1988\t1989\t-\tOct\tSun>=9\t4:00u\t1:00\t-\nRule\tChile\t1990\tonly\t-\tSep\t16\t4:00u\t1:00\t-\nRule\tChile\t1991\t1996\t-\tMar\tSun>=9\t3:00u\t0\t-\nRule\tChile\t1991\t1997\t-\tOct\tSun>=9\t4:00u\t1:00\t-\nRule\tChile\t1997\tonly\t-\tMar\t30\t3:00u\t0\t-\nRule\tChile\t1998\tonly\t-\tMar\tSun>=9\t3:00u\t0\t-\nRule\tChile\t1998\tonly\t-\tSep\t27\t4:00u\t1:00\t-\nRule\tChile\t1999\tonly\t-\tApr\t 4\t3:00u\t0\t-\nRule\tChile\t1999\t2010\t-\tOct\tSun>=9\t4:00u\t1:00\t-\nRule\tChile\t2000\t2007\t-\tMar\tSun>=9\t3:00u\t0\t-\n# N.B.: the end of March 29 in Chile is March 30 in Universal time,\n# which is used below in specifying the transition.\nRule\tChile\t2008\tonly\t-\tMar\t30\t3:00u\t0\t-\nRule\tChile\t2009\tonly\t-\tMar\tSun>=9\t3:00u\t0\t-\nRule\tChile\t2010\tonly\t-\tApr\tSun>=1\t3:00u\t0\t-\nRule\tChile\t2011\tonly\t-\tMay\tSun>=2\t3:00u\t0\t-\nRule\tChile\t2011\tonly\t-\tAug\tSun>=16\t4:00u\t1:00\t-\nRule\tChile\t2012\t2014\t-\tApr\tSun>=23\t3:00u\t0\t-\nRule\tChile\t2012\t2014\t-\tSep\tSun>=2\t4:00u\t1:00\t-\nRule\tChile\t2016\t2018\t-\tMay\tSun>=9\t3:00u\t0\t-\nRule\tChile\t2016\t2018\t-\tAug\tSun>=9\t4:00u\t1:00\t-\nRule\tChile\t2019\tmax\t-\tApr\tSun>=2\t3:00u\t0\t-\nRule\tChile\t2019\t2021\t-\tSep\tSun>=2\t4:00u\t1:00\t-\nRule\tChile\t2022\tonly\t-\tSep\tSun>=9\t4:00u\t1:00\t-\nRule\tChile\t2023\tmax\t-\tSep\tSun>=2\t4:00u\t1:00\t-\n# IATA SSIM anomalies: (1992-02) says 1992-03-14;\n# (1996-09) says 1998-03-08.  Ignore these.\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Santiago\t-4:42:45 -\tLMT\t1890\n\t\t\t-4:42:45 -\tSMT\t1910 Jan 10 # Santiago Mean Time\n\t\t\t-5:00\t-\t%z\t1916 Jul  1\n\t\t\t-4:42:45 -\tSMT\t1918 Sep 10\n\t\t\t-4:00\t-\t%z\t1919 Jul  1\n\t\t\t-4:42:45 -\tSMT\t1927 Sep  1\n\t\t\t-5:00\tChile\t%z\t1932 Sep  1\n\t\t\t-4:00\t-\t%z\t1942 Jun  1\n\t\t\t-5:00\t-\t%z\t1942 Aug  1\n\t\t\t-4:00\t-\t%z\t1946 Jul 14 24:00\n\t\t\t-4:00\t1:00\t%z\t1946 Aug 28 24:00 # central CL\n\t\t\t-5:00\t1:00\t%z\t1947 Mar 31 24:00\n\t\t\t-5:00\t-\t%z\t1947 May 21 23:00\n\t\t\t-4:00\tChile\t%z\nZone America/Punta_Arenas -4:43:40 -\tLMT\t1890\n\t\t\t-4:42:45 -\tSMT\t1910 Jan 10\n\t\t\t-5:00\t-\t%z\t1916 Jul  1\n\t\t\t-4:42:45 -\tSMT\t1918 Sep 10\n\t\t\t-4:00\t-\t%z\t1919 Jul  1\n\t\t\t-4:42:45 -\tSMT\t1927 Sep  1\n\t\t\t-5:00\tChile\t%z\t1932 Sep  1\n\t\t\t-4:00\t-\t%z\t1942 Jun  1\n\t\t\t-5:00\t-\t%z\t1942 Aug  1\n\t\t\t-4:00\t-\t%z\t1946 Aug 28 24:00\n\t\t\t-5:00\t1:00\t%z\t1947 Mar 31 24:00\n\t\t\t-5:00\t-\t%z\t1947 May 21 23:00\n\t\t\t-4:00\tChile\t%z\t2016 Dec  4\n\t\t\t-3:00\t-\t%z\nZone Pacific/Easter\t-7:17:28 -\tLMT\t1890\n\t\t\t-7:17:28 -\tEMT\t1932 Sep    # Easter Mean Time\n\t\t\t-7:00\tChile\t%z\t1982 Mar 14 3:00u # Easter Time\n\t\t\t-6:00\tChile\t%z\n#\n# Salas y Gómez Island is uninhabited.\n# Other Chilean locations, including Juan Fernández Is, Desventuradas Is,\n# and Antarctic bases, are like America/Santiago.\n\n# Antarctic base using South American rules\n# (See the file 'antarctica' for more.)\n#\n# Palmer, Anvers Island, since 1965 (moved 2 miles in 1968)\n#\n# From Ethan Dicks (1996-10-06):\n# It keeps the same time as Punta Arenas, Chile, because, just like us\n# and the South Pole, that's the other end of their supply line....\n# I verified with someone who was there that since 1980,\n# Palmer has followed Chile.  Prior to that, before the Falklands War,\n# Palmer used to be supplied from Argentina.\n#\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone Antarctica/Palmer\t0\t-\t-00\t1965\n\t\t\t-4:00\tArg\t%z\t1969 Oct  5\n\t\t\t-3:00\tArg\t%z\t1982 May\n\t\t\t-4:00\tChile\t%z\t2016 Dec  4\n\t\t\t-3:00\t-\t%z\n\n# Colombia\n\n# Milne gives 4:56:16.4 for Bogotá time in 1899.  He writes,\n# \"A variation of fifteen minutes in the public clocks of Bogota is not rare.\"\n\n# From Alois Treindl (2022-11-10):\n# End of time change in Colombia 1993 ... should be 6 February 24h ...\n# DECRETO 267 DE 1993\n# https://www.suin-juriscol.gov.co/viewDocument.asp?ruta=Decretos/1061335\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tCO\t1992\tonly\t-\tMay\t 3\t 0:00\t1:00\t-\nRule\tCO\t1993\tonly\t-\tFeb\t 6\t24:00\t0\t-\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n\t\t#STDOFF\t-4:56:16.4\nZone\tAmerica/Bogota\t-4:56:16 -\tLMT\t1884 Mar 13\n\t\t\t-4:56:16 -\tBMT\t1914 Nov 23 # Bogotá Mean Time\n\t\t\t-5:00\tCO\t%z\n# Malpelo, Providencia, San Andres\n# no information; probably like America/Bogota\n\n\n# Ecuador\n#\n# Milne says the Central and South American Telegraph Company used -5:24:15.\n#\n# From Alois Treindl (2016-12-15):\n# https://www.elcomercio.com/actualidad/hora-sixto-1993.html\n# ... Whether the law applied also to Galápagos, I do not know.\n# From Paul Eggert (2016-12-15):\n# https://www.elcomercio.com/afull/modificacion-husohorario-ecuador-presidentes-decreto.html\n# This says President Sixto Durán Ballén signed decree No. 285, which\n# established DST from 1992-11-28 to 1993-02-05; it does not give transition\n# times.  The people called it \"hora de Sixto\" (\"Sixto hour\").  The change did\n# not go over well; a popular song \"Qué hora es\" by Jaime Guevara had lyrics\n# that included \"Amanecía en mitad de la noche, los guaguas iban a clase sin\n# sol\" (\"It was dawning in the middle of the night, the buses went to class\n# without sun\").  Although Ballén's campaign slogan was \"Ni un paso atrás\"\n# (Not one step back), the clocks went back in 1993 and the experiment was not\n# repeated.  For now, assume transitions were at 00:00 local time country-wide.\n#\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tEcuador\t1992\tonly\t-\tNov\t28\t0:00\t1:00\t-\nRule\tEcuador\t1993\tonly\t-\tFeb\t 5\t0:00\t0\t-\n#\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Guayaquil\t-5:19:20 -\tLMT\t1890\n\t\t\t-5:14:00 -\tQMT\t1931 # Quito Mean Time\n\t\t\t-5:00\tEcuador\t%z\nZone Pacific/Galapagos\t-5:58:24 -\tLMT\t1931 # Puerto Baquerizo Moreno\n\t\t\t-5:00\t-\t%z\t1986\n\t\t\t-6:00\tEcuador\t%z\n\n# Falklands\n\n# From Paul Eggert (2006-03-22):\n# Between 1990 and 2000 inclusive, Shanks & Pottenger and the IATA agree except\n# the IATA gives 1996-09-08.  Go with Shanks & Pottenger.\n\n# From Falkland Islands Government Office, London (2001-01-22)\n# via Jesper Nørgaard:\n# ... the clocks revert back to Local Mean Time at 2 am on Sunday 15\n# April 2001 and advance one hour to summer time at 2 am on Sunday 2\n# September.  It is anticipated that the clocks will revert back at 2\n# am on Sunday 21 April 2002 and advance to summer time at 2 am on\n# Sunday 1 September.\n\n# From Rives McDow (2001-02-13):\n#\n# I have communicated several times with people there, and the last\n# time I had communications that was helpful was in 1998.  Here is\n# what was said then:\n#\n# \"The general rule was that Stanley used daylight saving and the Camp\n# did not. However for various reasons many people in the Camp have\n# started to use daylight saving (known locally as 'Stanley Time')\n# There is no rule as to who uses daylight saving - it is a matter of\n# personal choice and so it is impossible to draw a map showing who\n# uses it and who does not. Any list would be out of date as soon as\n# it was produced. This year daylight saving ended on April 18/19th\n# and started again on September 12/13th.  I do not know what the rule\n# is, but can find out if you like.  We do not change at the same time\n# as UK or Chile.\"\n#\n# I did have in my notes that the rule was \"Second Saturday in Sep at\n# 0:00 until third Saturday in Apr at 0:00\".  I think that this does\n# not agree in some cases with Shanks; is this true?\n#\n# Also, there is no mention in the list that some areas in the\n# Falklands do not use DST.  I have found in my communications there\n# that these areas are on the western half of East Falkland and all of\n# West Falkland.  Stanley is the only place that consistently observes\n# DST.  Again, as in other places in the world, the farmers don't like\n# it.  West Falkland is almost entirely sheep farmers.\n#\n# I know one lady there that keeps a list of which farm keeps DST and\n# which doesn't each year.  She runs a shop in Stanley, and says that\n# the list changes each year.  She uses it to communicate to her\n# customers, catching them when they are home for lunch or dinner.\n\n# From Paul Eggert (2001-03-05):\n# For now, we'll just record the time in Stanley, since we have no\n# better info.\n\n# From Steffen Thorsen (2011-04-01):\n# The Falkland Islands will not turn back clocks this winter, but stay on\n# daylight saving time.\n#\n# One source:\n# http://www.falklandnews.com/public/story.cfm?get=5914&source=3\n#\n# We have gotten this confirmed by a clerk of the legislative assembly:\n# Normally the clocks revert to Local Mean Time (UTC/GMT -4 hours) on the\n# third Sunday of April at 0200hrs and advance to Summer Time (UTC/GMT -3\n# hours) on the first Sunday of September at 0200hrs.\n#\n# IMPORTANT NOTE: During 2011, on a trial basis, the Falkland Islands\n# will not revert to local mean time, but clocks will remain on Summer\n# time (UTC/GMT - 3 hours) throughout the whole of 2011.  Any long term\n# change to local time following the trial period will be notified.\n#\n# From Andrew Newman (2012-02-24)\n# A letter from Justin McPhee, Chief Executive,\n# Cable & Wireless Falkland Islands (dated 2012-02-22)\n# states...\n#   The current Atlantic/Stanley entry under South America expects the\n#   clocks to go back to standard Falklands Time (FKT) on the 15th April.\n#   The database entry states that in 2011 Stanley was staying on fixed\n#   summer time on a trial basis only.  FIG need to contact IANA and/or\n#   the maintainers of the database to inform them we're adopting\n#   the same policy this year and suggest recommendations for future years.\n#\n# For now we will assume permanent -03 for the Falklands\n# until advised differently (to apply for 2012 and beyond, after the 2011\n# experiment was apparently successful.)\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tFalk\t1937\t1938\t-\tSep\tlastSun\t0:00\t1:00\t-\nRule\tFalk\t1938\t1942\t-\tMar\tSun>=19\t0:00\t0\t-\nRule\tFalk\t1939\tonly\t-\tOct\t1\t0:00\t1:00\t-\nRule\tFalk\t1940\t1942\t-\tSep\tlastSun\t0:00\t1:00\t-\nRule\tFalk\t1943\tonly\t-\tJan\t1\t0:00\t0\t-\nRule\tFalk\t1983\tonly\t-\tSep\tlastSun\t0:00\t1:00\t-\nRule\tFalk\t1984\t1985\t-\tApr\tlastSun\t0:00\t0\t-\nRule\tFalk\t1984\tonly\t-\tSep\t16\t0:00\t1:00\t-\nRule\tFalk\t1985\t2000\t-\tSep\tSun>=9\t0:00\t1:00\t-\nRule\tFalk\t1986\t2000\t-\tApr\tSun>=16\t0:00\t0\t-\nRule\tFalk\t2001\t2010\t-\tApr\tSun>=15\t2:00\t0\t-\nRule\tFalk\t2001\t2010\t-\tSep\tSun>=1\t2:00\t1:00\t-\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone Atlantic/Stanley\t-3:51:24 -\tLMT\t1890\n\t\t\t-3:51:24 -\tSMT\t1912 Mar 12 # Stanley Mean Time\n\t\t\t-4:00\tFalk\t%z\t1983 May\n\t\t\t-3:00\tFalk\t%z\t1985 Sep 15\n\t\t\t-4:00\tFalk\t%z\t2010 Sep  5  2:00\n\t\t\t-3:00\t-\t%z\n\n# French Guiana\n# For the 1911/1912 establishment of standard time in French possessions, see:\n# Société Française de Physique, Recueil de constantes physiques (1913),\n# page 752, 18b.\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Cayenne\t-3:29:20 -\tLMT\t1911 Jul  1\n\t\t\t-4:00\t-\t%z\t1967 Oct\n\t\t\t-3:00\t-\t%z\n\n# Guyana\n\n# From P Chan (2020-11-27):\n# https://books.google.com/books?id=5-5CAQAAMAAJ&pg=SA1-PA547\n# The Official Gazette of British Guiana. (New Series.) Vol. XL. July to\n# December, 1915, p 1547, lists as several notes:\n# \"Local Mean Time 3 hours 52 mins. 39 secs. slow of Greenwich Mean Time\n# (Georgetown.) From 1st August, 1911, British Guiana Standard Mean Time 4\n# hours slow of Greenwich Mean Time, by notice in Official Gazette on 1st July,\n# 1911.  From 1st March, 1915, British Guiana Standard Mean Time 3 hours 45\n# mins. 0 secs. slow of Greenwich Mean Time, by notice in Official Gazette on\n# 23rd January, 1915.\"\n#\n# https://parliament.gov.gy/documents/acts/10923-act_no._27_of_1975_-_interpretation_and_general_clauses_(amendment)_act_1975.pdf\n# Interpretation and general clauses (Amendment) Act 1975 (Act No. 27 of 1975)\n# [dated 1975-07-31]\n# \"This Act...shall come into operation on 1st August, 1975.\"\n# \"...where any expression of time occurs...the time referred to shall signify\n# the standard time of Guyana which shall be three hours behind Greenwich Mean\n# Time.\"\n#\n# Circular No. 10/1992 dated 1992-03-20\n# https://dps.gov.gy/wp-content/uploads/2018/12/1992-03-20-Circular-010.pdf\n# \"...cabinet has decided that with effect from Sunday 29th March, 1992, Guyana\n# Standard Time would be re-established at 01:00 hours by adjusting the hands\n# of the clock back to 24:00 hours.\"\n# Legislated in the Interpretation and general clauses (Amendment) Act 1992\n# (Act No. 6 of 1992) [passed 1992-03-27, published 1992-04-18]\n# https://parliament.gov.gy/documents/acts/5885-6_of_1992_interpretation_and_general_clauses_(amendment)_act_1992.pdf\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAmerica/Guyana\t-3:52:39 -\tLMT\t1911 Aug  1 # Georgetown\n\t\t\t-4:00\t-\t%z\t1915 Mar  1\n\t\t\t-3:45\t-\t%z\t1975 Aug  1\n\t\t\t-3:00\t-\t%z\t1992 Mar 29  1:00\n\t\t\t-4:00\t-\t%z\n\n# Paraguay\n#\n# From Paul Eggert (2006-03-22):\n# Shanks & Pottenger say that spring transitions are 01:00 -> 02:00,\n# and autumn transitions are 00:00 -> 23:00.  Go with pre-1999\n# editions of Shanks, and with the IATA, who say transitions occur at 00:00.\n#\n# From Waldemar Villamayor-Venialbo (2013-09-20):\n# No time of the day is established for the adjustment, so people normally\n# adjust their clocks at 0 hour of the given dates.\n#\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tPara\t1975\t1988\t-\tOct\t 1\t0:00\t1:00\t-\nRule\tPara\t1975\t1978\t-\tMar\t 1\t0:00\t0\t-\nRule\tPara\t1979\t1991\t-\tApr\t 1\t0:00\t0\t-\nRule\tPara\t1989\tonly\t-\tOct\t22\t0:00\t1:00\t-\nRule\tPara\t1990\tonly\t-\tOct\t 1\t0:00\t1:00\t-\nRule\tPara\t1991\tonly\t-\tOct\t 6\t0:00\t1:00\t-\nRule\tPara\t1992\tonly\t-\tMar\t 1\t0:00\t0\t-\nRule\tPara\t1992\tonly\t-\tOct\t 5\t0:00\t1:00\t-\nRule\tPara\t1993\tonly\t-\tMar\t31\t0:00\t0\t-\nRule\tPara\t1993\t1995\t-\tOct\t 1\t0:00\t1:00\t-\nRule\tPara\t1994\t1995\t-\tFeb\tlastSun\t0:00\t0\t-\nRule\tPara\t1996\tonly\t-\tMar\t 1\t0:00\t0\t-\n# IATA SSIM (2000-02) says 1999-10-10; ignore this for now.\n# From Steffen Thorsen (2000-10-02):\n# I have three independent reports that Paraguay changed to DST this Sunday\n# (10-01).\n#\n# Translated by Gwillim Law (2001-02-27) from\n# Noticias, a daily paper in Asunción, Paraguay (2000-10-01):\n# http://www.diarionoticias.com.py/011000/nacional/naciona1.htm\n# Starting at 0:00 today, the clock will be set forward 60 minutes, in\n# fulfillment of Decree No. 7,273 of the Executive Power....  The time change\n# system has been operating for several years.  Formerly there was a separate\n# decree each year; the new law has the same effect, but permanently.  Every\n# year, the time will change on the first Sunday of October; likewise, the\n# clock will be set back on the first Sunday of March.\n#\nRule\tPara\t1996\t2001\t-\tOct\tSun>=1\t0:00\t1:00\t-\n# IATA SSIM (1997-09) says Mar 1; go with Shanks & Pottenger.\nRule\tPara\t1997\tonly\t-\tFeb\tlastSun\t0:00\t0\t-\n# Shanks & Pottenger say 1999-02-28; IATA SSIM (1999-02) says 1999-02-27, but\n# (1999-09) reports no date; go with above sources and Gerd Knops (2001-02-27).\nRule\tPara\t1998\t2001\t-\tMar\tSun>=1\t0:00\t0\t-\n# From Rives McDow (2002-02-28):\n# A decree was issued in Paraguay (No. 16350) on 2002-02-26 that changed the\n# dst method to be from the first Sunday in September to the first Sunday in\n# April.\nRule\tPara\t2002\t2004\t-\tApr\tSun>=1\t0:00\t0\t-\nRule\tPara\t2002\t2003\t-\tSep\tSun>=1\t0:00\t1:00\t-\n#\n# From Jesper Nørgaard Welen (2005-01-02):\n# There are several sources that claim that Paraguay made\n# a timezone rule change in autumn 2004.\n# From Steffen Thorsen (2005-01-05):\n# Decree 1,867 (2004-03-05)\n# From Carlos Raúl Perasso via Jesper Nørgaard Welen (2006-10-13)\n# http://www.presidencia.gov.py/decretos/D1867.pdf\nRule\tPara\t2004\t2009\t-\tOct\tSun>=15\t0:00\t1:00\t-\nRule\tPara\t2005\t2009\t-\tMar\tSun>=8\t0:00\t0\t-\n# From Carlos Raúl Perasso (2010-02-18):\n# By decree number 3958 issued yesterday\n# http://www.presidencia.gov.py/v1/wp-content/uploads/2010/02/decreto3958.pdf\n# Paraguay changes its DST schedule, postponing the March rule to April and\n# modifying the October date. The decree reads:\n# ...\n# Art. 1. It is hereby established that from the second Sunday of the month of\n# April of this year (2010), the official time is to be set back 60 minutes,\n# and that on the first Sunday of the month of October, it is to be set\n# forward 60 minutes, in all the territory of the Paraguayan Republic.\n# ...\nRule\tPara\t2010\t2024\t-\tOct\tSun>=1\t0:00\t1:00\t-\nRule\tPara\t2010\t2012\t-\tApr\tSun>=8\t0:00\t0\t-\n#\n# From Steffen Thorsen (2013-03-07):\n# Paraguay will end DST on 2013-03-24 00:00....\n# http://www.ande.gov.py/interna.php?id=1075\n#\n# From Carlos Raúl Perasso (2013-03-15):\n# The change in Paraguay is now final.  Decree number 10780\n# http://www.presidencia.gov.py/uploads/pdf/presidencia-3b86ff4b691c79d4f5927ca964922ec74772ce857c02ca054a52a37b49afc7fb.pdf\n# From Carlos Raúl Perasso (2014-02-28):\n# Decree 1264 can be found at:\n# http://www.presidencia.gov.py/archivos/documentos/DECRETO1264_ey9r8zai.pdf\n#\n# From Paul Eggert (2023-07-26):\n# Transition dates are now set by Law No. 7115, not by presidential decree.\n# https://www.abc.com.py/politica/2023/07/12/promulgacion-el-cambio-de-hora-sera-por-ley/\n# From Carlos Raúl Perasso (2023-07-27):\n# http://silpy.congreso.gov.py/descarga/ley-144138\nRule\tPara\t2013\t2024\t-\tMar\tSun>=22\t0:00\t0\t-\n#\n# From Heitor David Pinto (2024-09-24):\n# Today the Congress of Paraguay passed a bill to observe UTC-3 permanently....\n# The text of the bill says that it would enter into force on the first\n# Sunday in October 2024, the same date currently scheduled to start DST....\n# https://silpy.congreso.gov.py/web/expediente/132531\n# (2024-10-14):\n# The president approved the law on 11 October 2024,\n# and it was officially published on 14 October 2024.\n# https://www.gacetaoficial.gov.py/index/detalle_publicacion/89723\n# The text of the law says that it enters into force on the first\n# Sunday in October 2024 (6 October 2024).  But the constitution\n# prohibits retroactive effect, and the civil code says that laws\n# enter into force on the day after their publication or on the day\n# that they specify, and it also says that they don't have retroactive\n# effect.  So I think that the time change on 6 October 2024 should\n# still be considered as DST according to the previous law, and\n# permanently UTC-3 from 15 October 2024 according to the new law....\n# https://www.constituteproject.org/constitution/Paraguay_2011\n# https://www.oas.org/dil/esp/codigo_civil_paraguay.pdf\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Asuncion\t-3:50:40 -\tLMT\t1890\n\t\t\t-3:50:40 -\tAMT\t1931 Oct 10 # Asunción Mean Time\n\t\t\t-4:00\t-\t%z\t1972 Oct\n\t\t\t-3:00\t-\t%z\t1974 Apr\n\t\t\t-4:00\tPara\t%z\t2024 Oct 15\n\t\t\t-3:00\t-\t%z\n\n# Peru\n#\n# From Evelyn C. Leeper via Mark Brader (2003-10-26)\n# <news:xrGmb.39935$gA1.13896113@news4.srv.hcvlny.cv.net>:\n# When we were in Peru in 1985-1986, they apparently switched over\n# sometime between December 29 and January 3 while we were on the Amazon.\n#\n# From Paul Eggert (2006-03-22):\n# Shanks & Pottenger don't have this transition.  Assume 1986 was like 1987.\n\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tPeru\t1938\tonly\t-\tJan\t 1\t0:00\t1:00\t-\nRule\tPeru\t1938\tonly\t-\tApr\t 1\t0:00\t0\t-\nRule\tPeru\t1938\t1939\t-\tSep\tlastSun\t0:00\t1:00\t-\nRule\tPeru\t1939\t1940\t-\tMar\tSun>=24\t0:00\t0\t-\nRule\tPeru\t1986\t1987\t-\tJan\t 1\t0:00\t1:00\t-\nRule\tPeru\t1986\t1987\t-\tApr\t 1\t0:00\t0\t-\nRule\tPeru\t1990\tonly\t-\tJan\t 1\t0:00\t1:00\t-\nRule\tPeru\t1990\tonly\t-\tApr\t 1\t0:00\t0\t-\n# IATA is ambiguous for 1993/1995; go with Shanks & Pottenger.\nRule\tPeru\t1994\tonly\t-\tJan\t 1\t0:00\t1:00\t-\nRule\tPeru\t1994\tonly\t-\tApr\t 1\t0:00\t0\t-\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAmerica/Lima\t-5:08:12 -\tLMT\t1890\n\t\t\t-5:08:36 -\tLMT\t1908 Jul 28 # Lima Mean Time?\n\t\t\t-5:00\tPeru\t%z\n\n# South Georgia\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone Atlantic/South_Georgia -2:26:08 -\tLMT\t1890 # Grytviken\n\t\t\t-2:00\t-\t%z\n\n# South Sandwich Is\n# uninhabited; scientific personnel have wintered\n\n# Suriname\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone America/Paramaribo\t-3:40:40 -\tLMT\t1911\n\t\t\t-3:40:52 -\tPMT\t1935     # Paramaribo Mean Time\n\t\t\t-3:40:36 -\tPMT\t1945 Oct    # The capital moved?\n\t\t\t-3:30\t-\t%z\t1984 Oct\n\t\t\t-3:00\t-\t%z\n\n# Uruguay\n# From Paul Eggert (1993-11-18):\n# Uruguay wins the prize for the strangest peacetime manipulation of the rules.\n#\n# From Tim Parenti (2018-02-20), per Jeremie Bonjour (2018-01-31) and Michael\n# Deckers (2018-02-20):\n# ... At least they kept good records...\n#\n# http://www.armada.mil.uy/ContenidosPDFs/sohma/web/almanaque/almanaque_2018.pdf#page=36\n# Page 36 of Almanaque 2018, published by the Oceanography, Hydrography, and\n# Meteorology Service of the Uruguayan Navy, seems to give many transitions\n# with greater clarity than we've had before.  It directly references many laws\n# and decrees which are, in turn, referenced below.  They can be viewed in the\n# public archives of the Diario Oficial (in Spanish) at\n# http://www.impo.com.uy/diariooficial/\n#\n# Ley No. 3920 of 1908-06-10 placed the determination of legal time under the\n# auspices of the National Institute for the Prediction of Time.  It is unclear\n# exactly what offset was used during this period, though Ley No. 7200 of\n# 1920-04-23 used the Observatory of the National Meteorological Institute in\n# Montevideo (34° 54' 33\" S, 56° 12' 45\" W) as its reference meridian,\n# retarding legal time by 15 minutes 9 seconds from 1920-04-30 24:00,\n# resulting in UT-04.  Assume the corresponding LMT of UT-03:44:51 (given on\n# page 725 of the Proceedings of the Second Pan-American Scientific Congress,\n# 1915-1916) was in use, and merely became official from 1908-06-10.\n# https://www.impo.com.uy/diariooficial/1908/06/18/12\n# https://www.impo.com.uy/diariooficial/1920/04/27/9\n#\n# Ley No. 7594 of 1923-06-28 specified legal time as Observatory time advanced\n# by 44 minutes 51 seconds (UT-03) \"from 30 September to 31 March\", and by 14\n# minutes 51 seconds (UT-03:30) \"the rest of the year\"; a message from the\n# National Council of Administration the same day, published directly below the\n# law in the Diario Oficial, specified the first transition to be 1923-09-30\n# 24:00.  This effectively established standard time at UT-03:30 with 30\n# minutes DST.  Assume transitions at 24:00 on the specified days until Ley No.\n# 7919 of 1926-03-05 ended this arrangement, repealing all \"laws and other\n# provisions which oppose\" it, resulting in year-round UT-03:30; a Resolución\n# of 1926-03-11 puts the final transition at 1926-03-31 24:00, the same as it\n# would have been under the previous law.\n# https://www.impo.com.uy/diariooficial/1923/07/02/2\n# https://www.impo.com.uy/diariooficial/1926/03/10/2\n# https://www.impo.com.uy/diariooficial/1926/03/18/2\n#\n# Rule\tNAME\tFROM\tTO\t-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tUruguay\t1923\t1925\t-\tOct\t 1\t 0:00\t0:30\t-\nRule\tUruguay\t1924\t1926\t-\tApr\t 1\t 0:00\t0\t-\n# From Tim Parenti (2018-02-15):\n# http://www.impo.com.uy/diariooficial/1933/10/27/6\n#\n# It appears Ley No. 9122 of 1933 was never published as such in the Diario\n# Oficial, but instead appeared as Document 26 in the Diario on Friday\n# 1933-10-27 as a decree made Monday 1933-10-23 and filed under the Ministry of\n# National Defense.  It reinstituted a DST of 30 minutes (to UT-03) \"from the\n# last Sunday of October...until the last Saturday of March.\"  In accordance\n# with this provision, the first transition was explicitly specified in Article\n# 2 of the decree as Saturday 1933-10-28 at 24:00; that is, Sunday 1933-10-29\n# at 00:00.  Assume transitions at 00:00 Sunday throughout.\n#\n# Departing from the matter-of-fact nature of previous timekeeping laws, the\n# 1933 decree \"consider[s] the advantages of...the advance of legal time\":\n#\n#   \"Whereas: The measure adopted by almost all nations at the time of the last\n#    World War still persists in North America and Europe, precisely because of\n#    the economic, hygienic, and social advantages derived from such an\n#    emergency measure...\n#\n#    Whereas: The advance of the legal time during the summer seasons, by\n#    displacing social activity near sunrise, favors the citizen populations\n#    and especially the society that creates and works...\"\n#\n# It further specified that \"necessary measures\" be taken to ensure that\n# \"public spectacles finish, in general, before [01:00].\"\nRule\tUruguay\t1933\t1938\t-\tOct\tlastSun\t 0:00\t0:30\t-\nRule\tUruguay\t1934\t1941\t-\tMar\tlastSat\t24:00\t0\t-\n# From Tim Parenti (2018-02-15):\n# Most of the Rules below, and their contemporaneous Zone lines, have been\n# updated simply to match the Almanaque 2018.  Although the document does not\n# list exact transition times, midnight transitions were already present in our\n# data here for all transitions through 2004-09, and this is both consistent\n# with prior transitions and verified in several decrees marked below between\n# 1939-09 and 2004-09, wherein the relevant text was typically of the form:\n#\n#   \"From 0 hours on [date], the legal time of the entire Republic will be...\n#\n#    In accordance with [the preceding], on [previous date] at 24 hours, all\n#    clocks throughout the Republic will be [advanced/retarded] by...\"\n#\n# It is possible that there is greater specificity to be found for the Rules\n# below, but it is buried in no fewer than 40 different decrees individually\n# referenced by the Almanaque for the period from 1939-09 to 2014-09.\n# Four-fifths of these were promulgated less than two weeks before taking\n# effect; more than half within a week and none more than 5 weeks.  Only the\n# handful with comments below have been checked with any thoroughness.\nRule\tUruguay\t1939\tonly\t-\tOct\t 1\t 0:00\t0:30\t-\nRule\tUruguay\t1940\tonly\t-\tOct\t27\t 0:00\t0:30\t-\n# From Tim Parenti (2018-02-15):\n# Decreto 1145 of the Ministry of National Defense, dated 1941-07-26, specified\n# UT-03 from Friday 1941-08-01 00:00, citing an \"urgent...need to save fuel\".\n# http://www.impo.com.uy/diariooficial/1941/08/04/1\nRule\tUruguay\t1941\tonly\t-\tAug\t 1\t 0:00\t0:30\t-\n# From Tim Parenti (2018-02-15):\n# Decreto 1866 of the Ministry of National Defense, dated 1942-12-09, specified\n# further advancement (to UT-02:30) from Sunday 1942-12-13 24:00.  Since clocks\n# never went back to UT-03:30 thereafter, this is modeled as advancing standard\n# time by 30 minutes to UT-03, while retaining 30 minutes of DST.\n# http://www.impo.com.uy/diariooficial/1942/12/16/3\nRule\tUruguay\t1942\tonly\t-\tDec\t14\t 0:00\t0:30\t-\nRule\tUruguay\t1943\tonly\t-\tMar\t14\t 0:00\t0\t-\nRule\tUruguay\t1959\tonly\t-\tMay\t24\t 0:00\t0:30\t-\nRule\tUruguay\t1959\tonly\t-\tNov\t15\t 0:00\t0\t-\nRule\tUruguay\t1960\tonly\t-\tJan\t17\t 0:00\t1:00\t-\nRule\tUruguay\t1960\tonly\t-\tMar\t 6\t 0:00\t0\t-\nRule\tUruguay\t1965\tonly\t-\tApr\t 4\t 0:00\t1:00\t-\nRule\tUruguay\t1965\tonly\t-\tSep\t26\t 0:00\t0\t-\n# From Tim Parenti (2018-02-15):\n# Decreto 321/968 of 1968-05-25, citing emergency drought measures decreed the\n# day before, brought clocks forward 30 minutes from Monday 1968-05-27 00:00.\n# http://www.impo.com.uy/diariooficial/1968/05/30/5\nRule\tUruguay\t1968\tonly\t-\tMay\t27\t 0:00\t0:30\t-\nRule\tUruguay\t1968\tonly\t-\tDec\t 1\t 0:00\t0\t-\n# From Tim Parenti (2018-02-15):\n# Decreto 188/970 of 1970-04-23 instituted restrictions on electricity\n# consumption \"as a consequence of the current rainfall regime in the country\".\n# Articles 13 and 14 advanced clocks by an hour from Saturday 1970-04-25 00:00.\n# http://www.impo.com.uy/diariooficial/1970/04/29/4\nRule\tUruguay\t1970\tonly\t-\tApr\t25\t 0:00\t1:00\t-\nRule\tUruguay\t1970\tonly\t-\tJun\t14\t 0:00\t0\t-\nRule\tUruguay\t1972\tonly\t-\tApr\t23\t 0:00\t1:00\t-\nRule\tUruguay\t1972\tonly\t-\tJul\t16\t 0:00\t0\t-\n# From Tim Parenti (2018-02-15):\n# Decreto 29/974 of 1974-01-11, citing \"the international rise in the price of\n# oil\", advanced clocks by 90 minutes (to UT-01:30).  Decreto 163/974 of\n# 1974-03-04 returned 60 of those minutes (to UT-02:30), and the remaining 30\n# minutes followed in Decreto 679/974 of 1974-08-29.\n# http://www.impo.com.uy/diariooficial/1974/01/22/11\n# http://www.impo.com.uy/diariooficial/1974/03/14/3\n# http://www.impo.com.uy/diariooficial/1974/09/04/6\nRule\tUruguay\t1974\tonly\t-\tJan\t13\t 0:00\t1:30\t-\nRule\tUruguay\t1974\tonly\t-\tMar\t10\t 0:00\t0:30\t-\nRule\tUruguay\t1974\tonly\t-\tSep\t 1\t 0:00\t0\t-\nRule\tUruguay\t1974\tonly\t-\tDec\t22\t 0:00\t1:00\t-\nRule\tUruguay\t1975\tonly\t-\tMar\t30\t 0:00\t0\t-\nRule\tUruguay\t1976\tonly\t-\tDec\t19\t 0:00\t1:00\t-\nRule\tUruguay\t1977\tonly\t-\tMar\t 6\t 0:00\t0\t-\nRule\tUruguay\t1977\tonly\t-\tDec\t 4\t 0:00\t1:00\t-\nRule\tUruguay\t1978\t1979\t-\tMar\tSun>=1\t 0:00\t0\t-\nRule\tUruguay\t1978\tonly\t-\tDec\t17\t 0:00\t1:00\t-\nRule\tUruguay\t1979\tonly\t-\tApr\t29\t 0:00\t1:00\t-\nRule\tUruguay\t1980\tonly\t-\tMar\t16\t 0:00\t0\t-\n# From Tim Parenti (2018-02-15):\n# Decreto 725/987 of 1987-12-04 cited \"better use of national tourist\n# attractions\" to advance clocks one hour from Monday 1987-12-14 00:00.\n# http://www.impo.com.uy/diariooficial/1988/01/25/1\nRule\tUruguay\t1987\tonly\t-\tDec\t14\t 0:00\t1:00\t-\nRule\tUruguay\t1988\tonly\t-\tFeb\t28\t 0:00\t0\t-\nRule\tUruguay\t1988\tonly\t-\tDec\t11\t 0:00\t1:00\t-\nRule\tUruguay\t1989\tonly\t-\tMar\t 5\t 0:00\t0\t-\nRule\tUruguay\t1989\tonly\t-\tOct\t29\t 0:00\t1:00\t-\nRule\tUruguay\t1990\tonly\t-\tFeb\t25\t 0:00\t0\t-\n# From Tim Parenti (2018-02-15), per Paul Eggert (1999-11-04):\n# IATA agrees as below for 1990-10 through 1993-02.  Per Almanaque 2018, the\n# 1992/1993 season appears to be the first in over half a century where DST\n# both began and ended pursuant to the same decree.\nRule\tUruguay\t1990\t1991\t-\tOct\tSun>=21\t 0:00\t1:00\t-\nRule\tUruguay\t1991\t1992\t-\tMar\tSun>=1\t 0:00\t0\t-\nRule\tUruguay\t1992\tonly\t-\tOct\t18\t 0:00\t1:00\t-\nRule\tUruguay\t1993\tonly\t-\tFeb\t28\t 0:00\t0\t-\n# From Eduardo Cota (2004-09-20):\n# The Uruguayan government has decreed a change in the local time....\n# From Tim Parenti (2018-02-15):\n# Decreto 328/004 of 2004-09-15.\n# http://www.impo.com.uy/diariooficial/2004/09/23/documentos.pdf#page=1\nRule\tUruguay\t2004\tonly\t-\tSep\t19\t 0:00\t1:00\t-\n# From Steffen Thorsen (2005-03-11):\n# Uruguay's DST was scheduled to end on Sunday, 2005-03-13, but in order to\n# save energy ... it was postponed two weeks....\n# From Tim Parenti (2018-02-15):\n# This 2005 postponement is not in Almanaque 2018.  Go with the contemporaneous\n# reporting, which is confirmed by Decreto 107/005 of 2005-03-10 amending\n# Decreto 328/004:\n# http://www.impo.com.uy/diariooficial/2005/03/15/documentos.pdf#page=1\n# The original decree specified a transition of 2005-03-12 24:00, but the new\n# one specified 2005-03-27 02:00.\nRule\tUruguay\t2005\tonly\t-\tMar\t27\t 2:00\t0\t-\n# From Eduardo Cota (2005-09-27):\n# ...from 2005-10-09 at 02:00 local time, until 2006-03-12 at 02:00 local time,\n# official time in Uruguay will be at GMT -2.\n# From Tim Parenti (2018-02-15):\n# Decreto 318/005 of 2005-09-19.\n# http://www.impo.com.uy/diariooficial/2005/09/23/documentos.pdf#page=1\nRule\tUruguay\t2005\tonly\t-\tOct\t 9\t 2:00\t1:00\t-\nRule\tUruguay\t2006\t2015\t-\tMar\tSun>=8\t 2:00\t0\t-\n# From Tim Parenti (2018-02-15), per Jesper Nørgaard Welen (2006-09-06):\n# Decreto 311/006 of 2006-09-04 established regular DST from the first Sunday\n# of October at 02:00 through the second Sunday of March at 02:00.  Almanaque\n# 2018 appears to have a few typoed dates through this period; ignore them.\n# http://www.impo.com.uy/diariooficial/2006/09/08/documentos.pdf#page=1\nRule\tUruguay\t2006\t2014\t-\tOct\tSun>=1\t 2:00\t1:00\t-\n# From Steffen Thorsen (2015-06-30):\n# ... it looks like they will not be using DST the coming summer:\n# http://www.elobservador.com.uy/gobierno-resolvio-que-no-habra-cambio-horario-verano-n656787\n# http://www.republica.com.uy/este-ano-no-se-modificara-el-huso-horario-en-uruguay/523760/\n# From Paul Eggert (2015-06-30):\n# Apparently restaurateurs complained that DST caused people to go to the beach\n# instead of out to dinner.\n# From Pablo Camargo (2015-07-13):\n# http://archivo.presidencia.gub.uy/sci/decretos/2015/06/cons_min_201.pdf\n# From Tim Parenti (2018-02-15):\n# Decreto 178/015 of 2015-06-29; repeals Decreto 311/006.\n\n# This Zone can be simplified once we assume zic %z.\nZone America/Montevideo\t-3:44:51 -\tLMT\t1908 Jun 10\n\t\t\t-3:44:51 -\tMMT\t1920 May  1 # Montevideo MT\n\t\t\t-4:00\t-\t%z\t1923 Oct  1\n\t\t\t-3:30\tUruguay\t%z\t1942 Dec 14\n\t\t\t-3:00\tUruguay\t%z\t1960\n\t\t\t-3:00\tUruguay\t%z\t1968\n\t\t\t-3:00\tUruguay\t%z\t1970\n\t\t\t-3:00\tUruguay\t%z\t1974\n\t\t\t-3:00\tUruguay\t%z\t1974 Mar 10\n\t\t\t-3:00\tUruguay\t%z\t1974 Dec 22\n\t\t\t-3:00\tUruguay\t%z\n\n# Venezuela\n#\n# From Paul Eggert (2015-07-28):\n# For the 1965 transition see Gaceta Oficial No. 27.619 (1964-12-15), p 205.533\n# http://www.pgr.gob.ve/dmdocuments/1964/27619.pdf\n#\n# From John Stainforth (2007-11-28):\n# ... the change for Venezuela originally expected for 2007-12-31 has\n# been brought forward to 2007-12-09.  The official announcement was\n# published today in the \"Gaceta Oficial de la República Bolivariana\n# de Venezuela, número 38.819\" (official document for all laws or\n# resolution publication)\n# http://www.globovision.com/news.php?nid=72208\n\n# From Alexander Krivenyshev (2016-04-15):\n# https://actualidad.rt.com/actualidad/204758-venezuela-modificar-huso-horario-sequia-elnino\n#\n# From Paul Eggert (2016-04-15):\n# Clocks advance 30 minutes on 2016-05-01 at 02:30....\n# \"'Venezuela's new time-zone: hours without light, hours without water,\n# hours of presidential broadcasts, hours of lines,' quipped comedian\n# Jean Mary Curró ...\". See: Cawthorne A, Kai D. Venezuela scraps\n# half-hour time difference set by Chavez. Reuters 2016-04-15 14:50 -0400\n# https://www.reuters.com/article/us-venezuela-timezone-idUSKCN0XC2BE\n#\n# From Matt Johnson (2016-04-20):\n# ... published in the official Gazette [2016-04-18], here:\n# http://historico.tsj.gob.ve/gaceta_ext/abril/1842016/E-1842016-4551.pdf\n\n# Zone\tNAME\t\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAmerica/Caracas\t-4:27:44 -\tLMT\t1890\n\t\t\t-4:27:40 -\tCMT\t1912 Feb 12 # Caracas Mean Time?\n\t\t\t-4:30\t-\t%z\t1965 Jan  1  0:00\n\t\t\t-4:00\t-\t%z\t2007 Dec  9  3:00\n\t\t\t-4:30\t-\t%z\t2016 May  1  2:30\n\t\t\t-4:00\t-\t%z\n"
        },
        {
          "name": "strftime.c",
          "type": "blob",
          "size": 18.90234375,
          "content": "/* Convert a broken-down timestamp to a string.  */\n\n/* Copyright 1989 The Regents of the University of California.\n   All rights reserved.\n\n   Redistribution and use in source and binary forms, with or without\n   modification, are permitted provided that the following conditions\n   are met:\n   1. Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n   2. Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n   3. Neither the name of the University nor the names of its contributors\n      may be used to endorse or promote products derived from this software\n      without specific prior written permission.\n\n   THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS \"AS IS\" AND\n   ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n   IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n   ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE\n   FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n   DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n   OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n   HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n   LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n   OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n   SUCH DAMAGE.  */\n\n/*\n** Based on the UCB version with the copyright notice appearing above.\n**\n** This is ANSIish only when \"multibyte character == plain character\".\n*/\n\n#include \"private.h\"\n\n#include <fcntl.h>\n#include <locale.h>\n#include <stdio.h>\n\n/* If true, the value returned by an idealized unlimited-range mktime\n   always fits into an integer type with bounds MIN and MAX.\n   If false, the value might not fit.\n   This macro is usable in #if if its arguments are.\n   Add or subtract 2**31 - 1 for the maximum UT offset allowed in a TZif file,\n   divide by the maximum number of non-leap seconds in a year,\n   divide again by two just to be safe,\n   and account for the tm_year origin (1900) and time_t origin (1970).  */\n#define MKTIME_FITS_IN(min, max) \\\n  ((min) < 0 \\\n   && ((min) + 0x7fffffff) / 366 / 24 / 60 / 60 / 2 + 1970 - 1900 < INT_MIN \\\n   && INT_MAX < ((max) - 0x7fffffff) / 366 / 24 / 60 / 60 / 2 + 1970 - 1900)\n\n/* MKTIME_MIGHT_OVERFLOW is true if mktime can fail due to time_t overflow\n   or if it is not known whether mktime can fail,\n   and is false if mktime definitely cannot fail.\n   This macro is usable in #if, and so does not use TIME_T_MAX or sizeof.\n   If the builder has not configured this macro, guess based on what\n   known platforms do.  When in doubt, guess true.  */\n#ifndef MKTIME_MIGHT_OVERFLOW\n# if defined __FreeBSD__ || defined __NetBSD__ || defined __OpenBSD__\n#  include <sys/param.h>\n# endif\n# if ((/* The following heuristics assume native time_t.  */ \\\n       defined_time_tz) \\\n      || ((/* Traditional time_t is 'long', so if 'long' is not wide enough \\\n\t      assume overflow unless we're on a known-safe host.  */ \\\n\t   !MKTIME_FITS_IN(LONG_MIN, LONG_MAX)) \\\n\t  && (/* GNU C Library 2.29 (2019-02-01) and later has 64-bit time_t \\\n\t\t if __TIMESIZE is 64.  */ \\\n\t      !defined __TIMESIZE || __TIMESIZE < 64) \\\n\t  && (/* FreeBSD 12 r320347 (__FreeBSD_version 1200036; 2017-06-26), \\\n\t\t and later has 64-bit time_t on all platforms but i386 which \\\n\t\t is currently scheduled for end-of-life on 2028-11-30.  */ \\\n\t      !defined __FreeBSD_version || __FreeBSD_version < 1200036 \\\n\t      || defined __i386) \\\n\t  && (/* NetBSD 6.0 (2012-10-17) and later has 64-bit time_t.  */ \\\n\t      !defined __NetBSD_Version__ || __NetBSD_Version__ < 600000000) \\\n\t  && (/* OpenBSD 5.5 (2014-05-01) and later has 64-bit time_t.  */ \\\n\t      !defined OpenBSD || OpenBSD < 201405)))\n#  define MKTIME_MIGHT_OVERFLOW 1\n# else\n#  define MKTIME_MIGHT_OVERFLOW 0\n# endif\n#endif\n/* Check that MKTIME_MIGHT_OVERFLOW is consistent with time_t's range.  */\nstatic_assert(MKTIME_MIGHT_OVERFLOW\n\t      || MKTIME_FITS_IN(TIME_T_MIN, TIME_T_MAX));\n\n#if MKTIME_MIGHT_OVERFLOW\n/* Do this after system includes as it redefines time_t, mktime, timeoff.  */\n# define USE_TIMEX_T true\n# include \"localtime.c\"\n#endif\n\n#ifndef DEPRECATE_TWO_DIGIT_YEARS\n# define DEPRECATE_TWO_DIGIT_YEARS 0\n#endif\n\nstruct lc_time_T {\n\tconst char *\tmon[MONSPERYEAR];\n\tconst char *\tmonth[MONSPERYEAR];\n\tconst char *\twday[DAYSPERWEEK];\n\tconst char *\tweekday[DAYSPERWEEK];\n\tconst char *\tX_fmt;\n\tconst char *\tx_fmt;\n\tconst char *\tc_fmt;\n\tconst char *\tam;\n\tconst char *\tpm;\n\tconst char *\tdate_fmt;\n};\n\nstatic const struct lc_time_T\tC_time_locale = {\n\t{\n\t\t\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n\t\t\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n\t}, {\n\t\t\"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n\t\t\"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n\t}, {\n\t\t\"Sun\", \"Mon\", \"Tue\", \"Wed\",\n\t\t\"Thu\", \"Fri\", \"Sat\"\n\t}, {\n\t\t\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\",\n\t\t\"Thursday\", \"Friday\", \"Saturday\"\n\t},\n\n\t/* X_fmt */\n\t\"%H:%M:%S\",\n\n\t/*\n\t** x_fmt\n\t** C99 and later require this format.\n\t** Using just numbers (as here) makes Quakers happier;\n\t** it's also compatible with SVR4.\n\t*/\n\t\"%m/%d/%y\",\n\n\t/*\n\t** c_fmt\n\t** C99 and later require this format.\n\t** Previously this code used \"%D %X\", but we now conform to C99.\n\t** Note that\n\t**\t\"%a %b %d %H:%M:%S %Y\"\n\t** is used by Solaris 2.3.\n\t*/\n\t\"%a %b %e %T %Y\",\n\n\t/* am */\n\t\"AM\",\n\n\t/* pm */\n\t\"PM\",\n\n\t/* date_fmt */\n\t\"%a %b %e %H:%M:%S %Z %Y\"\n};\n\nenum warn { IN_NONE, IN_SOME, IN_THIS, IN_ALL };\n\nstatic char *\t_add(const char *, char *, const char *);\nstatic char *\t_conv(int, const char *, char *, const char *);\nstatic char *\t_fmt(const char *, const struct tm *, char *, const char *,\n\t\t     enum warn *);\nstatic char *\t_yconv(int, int, bool, bool, char *, char const *);\n\n#ifndef YEAR_2000_NAME\n# define YEAR_2000_NAME \"CHECK_STRFTIME_FORMATS_FOR_TWO_DIGIT_YEARS\"\n#endif /* !defined YEAR_2000_NAME */\n\n#if HAVE_STRFTIME_L\nsize_t\nstrftime_l(char *restrict s, size_t maxsize, char const *restrict format,\n\t   struct tm const *restrict t,\n\t   ATTRIBUTE_MAYBE_UNUSED locale_t locale)\n{\n  /* Just call strftime, as only the C locale is supported.  */\n  return strftime(s, maxsize, format, t);\n}\n#endif\n\nsize_t\nstrftime(char *restrict s, size_t maxsize, char const *restrict format,\n\t struct tm const *restrict t)\n{\n\tchar *\tp;\n\tint saved_errno = errno;\n\tenum warn warn = IN_NONE;\n\n\ttzset();\n\tp = _fmt(format, t, s, s + maxsize, &warn);\n\tif (DEPRECATE_TWO_DIGIT_YEARS\n\t    && warn != IN_NONE && getenv(YEAR_2000_NAME)) {\n\t\tfprintf(stderr, \"\\n\");\n\t\tfprintf(stderr, \"strftime format \\\"%s\\\" \", format);\n\t\tfprintf(stderr, \"yields only two digits of years in \");\n\t\tif (warn == IN_SOME)\n\t\t\tfprintf(stderr, \"some locales\");\n\t\telse if (warn == IN_THIS)\n\t\t\tfprintf(stderr, \"the current locale\");\n\t\telse\tfprintf(stderr, \"all locales\");\n\t\tfprintf(stderr, \"\\n\");\n\t}\n\tif (p == s + maxsize) {\n\t\terrno = ERANGE;\n\t\treturn 0;\n\t}\n\t*p = '\\0';\n\terrno = saved_errno;\n\treturn p - s;\n}\n\nstatic char *\n_fmt(const char *format, const struct tm *t, char *pt,\n     const char *ptlim, enum warn *warnp)\n{\n\tstruct lc_time_T const *Locale = &C_time_locale;\n\n\tfor ( ; *format; ++format) {\n\t\tif (*format == '%') {\nlabel:\n\t\t\tswitch (*++format) {\n\t\t\tdefault:\n\t\t\t\t/* Output unknown conversion specifiers as-is,\n\t\t\t\t   to aid debugging.  This includes '%' at\n\t\t\t\t   format end.  This conforms to C23 section\n\t\t\t\t   7.29.3.5 paragraph 6, which says behavior\n\t\t\t\t   is undefined here.  */\n\t\t\t\t--format;\n\t\t\t\tbreak;\n\t\t\tcase 'A':\n\t\t\t\tpt = _add((t->tm_wday < 0 ||\n\t\t\t\t\tt->tm_wday >= DAYSPERWEEK) ?\n\t\t\t\t\t\"?\" : Locale->weekday[t->tm_wday],\n\t\t\t\t\tpt, ptlim);\n\t\t\t\tcontinue;\n\t\t\tcase 'a':\n\t\t\t\tpt = _add((t->tm_wday < 0 ||\n\t\t\t\t\tt->tm_wday >= DAYSPERWEEK) ?\n\t\t\t\t\t\"?\" : Locale->wday[t->tm_wday],\n\t\t\t\t\tpt, ptlim);\n\t\t\t\tcontinue;\n\t\t\tcase 'B':\n\t\t\t\tpt = _add((t->tm_mon < 0 ||\n\t\t\t\t\tt->tm_mon >= MONSPERYEAR) ?\n\t\t\t\t\t\"?\" : Locale->month[t->tm_mon],\n\t\t\t\t\tpt, ptlim);\n\t\t\t\tcontinue;\n\t\t\tcase 'b':\n\t\t\tcase 'h':\n\t\t\t\tpt = _add((t->tm_mon < 0 ||\n\t\t\t\t\tt->tm_mon >= MONSPERYEAR) ?\n\t\t\t\t\t\"?\" : Locale->mon[t->tm_mon],\n\t\t\t\t\tpt, ptlim);\n\t\t\t\tcontinue;\n\t\t\tcase 'C':\n\t\t\t\t/*\n\t\t\t\t** %C used to do a...\n\t\t\t\t**\t_fmt(\"%a %b %e %X %Y\", t);\n\t\t\t\t** ...whereas now POSIX 1003.2 calls for\n\t\t\t\t** something completely different.\n\t\t\t\t** (ado, 1993-05-24)\n\t\t\t\t*/\n\t\t\t\tpt = _yconv(t->tm_year, TM_YEAR_BASE,\n\t\t\t\t\t    true, false, pt, ptlim);\n\t\t\t\tcontinue;\n\t\t\tcase 'c':\n\t\t\t\t{\n\t\t\t\tenum warn warn2 = IN_SOME;\n\n\t\t\t\tpt = _fmt(Locale->c_fmt, t, pt, ptlim, &warn2);\n\t\t\t\tif (warn2 == IN_ALL)\n\t\t\t\t\twarn2 = IN_THIS;\n\t\t\t\tif (warn2 > *warnp)\n\t\t\t\t\t*warnp = warn2;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase 'D':\n\t\t\t\tpt = _fmt(\"%m/%d/%y\", t, pt, ptlim, warnp);\n\t\t\t\tcontinue;\n\t\t\tcase 'd':\n\t\t\t\tpt = _conv(t->tm_mday, \"%02d\", pt, ptlim);\n\t\t\t\tcontinue;\n\t\t\tcase 'E':\n\t\t\tcase 'O':\n\t\t\t\t/*\n\t\t\t\t** Locale modifiers of C99 and later.\n\t\t\t\t** The sequences\n\t\t\t\t**\t%Ec %EC %Ex %EX %Ey %EY\n\t\t\t\t**\t%Od %oe %OH %OI %Om %OM\n\t\t\t\t**\t%OS %Ou %OU %OV %Ow %OW %Oy\n\t\t\t\t** are supposed to provide alternative\n\t\t\t\t** representations.\n\t\t\t\t*/\n\t\t\t\tgoto label;\n\t\t\tcase 'e':\n\t\t\t\tpt = _conv(t->tm_mday, \"%2d\", pt, ptlim);\n\t\t\t\tcontinue;\n\t\t\tcase 'F':\n\t\t\t\tpt = _fmt(\"%Y-%m-%d\", t, pt, ptlim, warnp);\n\t\t\t\tcontinue;\n\t\t\tcase 'H':\n\t\t\t\tpt = _conv(t->tm_hour, \"%02d\", pt, ptlim);\n\t\t\t\tcontinue;\n\t\t\tcase 'I':\n\t\t\t\tpt = _conv((t->tm_hour % 12) ?\n\t\t\t\t\t(t->tm_hour % 12) : 12,\n\t\t\t\t\t\"%02d\", pt, ptlim);\n\t\t\t\tcontinue;\n\t\t\tcase 'j':\n\t\t\t\tpt = _conv(t->tm_yday + 1, \"%03d\", pt, ptlim);\n\t\t\t\tcontinue;\n\t\t\tcase 'k':\n\t\t\t\t/*\n\t\t\t\t** This used to be...\n\t\t\t\t**\t_conv(t->tm_hour % 12 ?\n\t\t\t\t**\t\tt->tm_hour % 12 : 12, 2, ' ');\n\t\t\t\t** ...and has been changed to the below to\n\t\t\t\t** match SunOS 4.1.1 and Arnold Robbins'\n\t\t\t\t** strftime version 3.0. That is, \"%k\" and\n\t\t\t\t** \"%l\" have been swapped.\n\t\t\t\t** (ado, 1993-05-24)\n\t\t\t\t*/\n\t\t\t\tpt = _conv(t->tm_hour, \"%2d\", pt, ptlim);\n\t\t\t\tcontinue;\n#ifdef KITCHEN_SINK\n\t\t\tcase 'K':\n\t\t\t\t/*\n\t\t\t\t** After all this time, still unclaimed!\n\t\t\t\t*/\n\t\t\t\tpt = _add(\"kitchen sink\", pt, ptlim);\n\t\t\t\tcontinue;\n#endif /* defined KITCHEN_SINK */\n\t\t\tcase 'l':\n\t\t\t\t/*\n\t\t\t\t** This used to be...\n\t\t\t\t**\t_conv(t->tm_hour, 2, ' ');\n\t\t\t\t** ...and has been changed to the below to\n\t\t\t\t** match SunOS 4.1.1 and Arnold Robbin's\n\t\t\t\t** strftime version 3.0. That is, \"%k\" and\n\t\t\t\t** \"%l\" have been swapped.\n\t\t\t\t** (ado, 1993-05-24)\n\t\t\t\t*/\n\t\t\t\tpt = _conv((t->tm_hour % 12) ?\n\t\t\t\t\t(t->tm_hour % 12) : 12,\n\t\t\t\t\t\"%2d\", pt, ptlim);\n\t\t\t\tcontinue;\n\t\t\tcase 'M':\n\t\t\t\tpt = _conv(t->tm_min, \"%02d\", pt, ptlim);\n\t\t\t\tcontinue;\n\t\t\tcase 'm':\n\t\t\t\tpt = _conv(t->tm_mon + 1, \"%02d\", pt, ptlim);\n\t\t\t\tcontinue;\n\t\t\tcase 'n':\n\t\t\t\tpt = _add(\"\\n\", pt, ptlim);\n\t\t\t\tcontinue;\n\t\t\tcase 'p':\n\t\t\t\tpt = _add((t->tm_hour >= (HOURSPERDAY / 2)) ?\n\t\t\t\t\tLocale->pm :\n\t\t\t\t\tLocale->am,\n\t\t\t\t\tpt, ptlim);\n\t\t\t\tcontinue;\n\t\t\tcase 'R':\n\t\t\t\tpt = _fmt(\"%H:%M\", t, pt, ptlim, warnp);\n\t\t\t\tcontinue;\n\t\t\tcase 'r':\n\t\t\t\tpt = _fmt(\"%I:%M:%S %p\", t, pt, ptlim, warnp);\n\t\t\t\tcontinue;\n\t\t\tcase 'S':\n\t\t\t\tpt = _conv(t->tm_sec, \"%02d\", pt, ptlim);\n\t\t\t\tcontinue;\n\t\t\tcase 's':\n\t\t\t\t{\n\t\t\t\t\tstruct tm\ttm;\n\t\t\t\t\tchar\t\tbuf[INT_STRLEN_MAXIMUM(\n\t\t\t\t\t\t\t\ttime_t) + 1];\n\t\t\t\t\ttime_t\t\tmkt;\n\n\t\t\t\t\ttm.tm_sec = t->tm_sec;\n\t\t\t\t\ttm.tm_min = t->tm_min;\n\t\t\t\t\ttm.tm_hour = t->tm_hour;\n\t\t\t\t\ttm.tm_mday = t->tm_mday;\n\t\t\t\t\ttm.tm_mon = t->tm_mon;\n\t\t\t\t\ttm.tm_year = t->tm_year;\n\n\t\t\t\t\t/* Get the time_t value for TM.\n\t\t\t\t\t   Native time_t, or its redefinition\n\t\t\t\t\t   by localtime.c above, is wide enough\n\t\t\t\t\t   so that this cannot overflow.  */\n#ifdef TM_GMTOFF\n\t\t\t\t\tmkt = timeoff(&tm, t->TM_GMTOFF);\n#else\n\t\t\t\t\ttm.tm_isdst = t->tm_isdst;\n\t\t\t\t\tmkt = mktime(&tm);\n#endif\n\t\t\t\t\tif (TYPE_SIGNED(time_t)) {\n\t\t\t\t\t  intmax_t n = mkt;\n\t\t\t\t\t  sprintf(buf, \"%\"PRIdMAX, n);\n\t\t\t\t\t} else {\n\t\t\t\t\t  uintmax_t n = mkt;\n\t\t\t\t\t  sprintf(buf, \"%\"PRIuMAX, n);\n\t\t\t\t\t}\n\t\t\t\t\tpt = _add(buf, pt, ptlim);\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase 'T':\n\t\t\t\tpt = _fmt(\"%H:%M:%S\", t, pt, ptlim, warnp);\n\t\t\t\tcontinue;\n\t\t\tcase 't':\n\t\t\t\tpt = _add(\"\\t\", pt, ptlim);\n\t\t\t\tcontinue;\n\t\t\tcase 'U':\n\t\t\t\tpt = _conv((t->tm_yday + DAYSPERWEEK -\n\t\t\t\t\tt->tm_wday) / DAYSPERWEEK,\n\t\t\t\t\t\"%02d\", pt, ptlim);\n\t\t\t\tcontinue;\n\t\t\tcase 'u':\n\t\t\t\t/*\n\t\t\t\t** From Arnold Robbins' strftime version 3.0:\n\t\t\t\t** \"ISO 8601: Weekday as a decimal number\n\t\t\t\t** [1 (Monday) - 7]\"\n\t\t\t\t** (ado, 1993-05-24)\n\t\t\t\t*/\n\t\t\t\tpt = _conv((t->tm_wday == 0) ?\n\t\t\t\t\tDAYSPERWEEK : t->tm_wday,\n\t\t\t\t\t\"%d\", pt, ptlim);\n\t\t\t\tcontinue;\n\t\t\tcase 'V':\t/* ISO 8601 week number */\n\t\t\tcase 'G':\t/* ISO 8601 year (four digits) */\n\t\t\tcase 'g':\t/* ISO 8601 year (two digits) */\n/*\n** From Arnold Robbins' strftime version 3.0: \"the week number of the\n** year (the first Monday as the first day of week 1) as a decimal number\n** (01-53).\"\n** (ado, 1993-05-24)\n**\n** From <https://www.cl.cam.ac.uk/~mgk25/iso-time.html> by Markus Kuhn:\n** \"Week 01 of a year is per definition the first week which has the\n** Thursday in this year, which is equivalent to the week which contains\n** the fourth day of January. In other words, the first week of a new year\n** is the week which has the majority of its days in the new year. Week 01\n** might also contain days from the previous year and the week before week\n** 01 of a year is the last week (52 or 53) of the previous year even if\n** it contains days from the new year. A week starts with Monday (day 1)\n** and ends with Sunday (day 7). For example, the first week of the year\n** 1997 lasts from 1996-12-30 to 1997-01-05...\"\n** (ado, 1996-01-02)\n*/\n\t\t\t\t{\n\t\t\t\t\tint\tyear;\n\t\t\t\t\tint\tbase;\n\t\t\t\t\tint\tyday;\n\t\t\t\t\tint\twday;\n\t\t\t\t\tint\tw;\n\n\t\t\t\t\tyear = t->tm_year;\n\t\t\t\t\tbase = TM_YEAR_BASE;\n\t\t\t\t\tyday = t->tm_yday;\n\t\t\t\t\twday = t->tm_wday;\n\t\t\t\t\tfor ( ; ; ) {\n\t\t\t\t\t\tint\tlen;\n\t\t\t\t\t\tint\tbot;\n\t\t\t\t\t\tint\ttop;\n\n\t\t\t\t\t\tlen = isleap_sum(year, base) ?\n\t\t\t\t\t\t\tDAYSPERLYEAR :\n\t\t\t\t\t\t\tDAYSPERNYEAR;\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t** What yday (-3 ... 3) does\n\t\t\t\t\t\t** the ISO year begin on?\n\t\t\t\t\t\t*/\n\t\t\t\t\t\tbot = ((yday + 11 - wday) %\n\t\t\t\t\t\t\tDAYSPERWEEK) - 3;\n\t\t\t\t\t\t/*\n\t\t\t\t\t\t** What yday does the NEXT\n\t\t\t\t\t\t** ISO year begin on?\n\t\t\t\t\t\t*/\n\t\t\t\t\t\ttop = bot -\n\t\t\t\t\t\t\t(len % DAYSPERWEEK);\n\t\t\t\t\t\tif (top < -3)\n\t\t\t\t\t\t\ttop += DAYSPERWEEK;\n\t\t\t\t\t\ttop += len;\n\t\t\t\t\t\tif (yday >= top) {\n\t\t\t\t\t\t\t++base;\n\t\t\t\t\t\t\tw = 1;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (yday >= bot) {\n\t\t\t\t\t\t\tw = 1 + ((yday - bot) /\n\t\t\t\t\t\t\t\tDAYSPERWEEK);\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t--base;\n\t\t\t\t\t\tyday += isleap_sum(year, base) ?\n\t\t\t\t\t\t\tDAYSPERLYEAR :\n\t\t\t\t\t\t\tDAYSPERNYEAR;\n\t\t\t\t\t}\n#ifdef XPG4_1994_04_09\n\t\t\t\t\tif ((w == 52 &&\n\t\t\t\t\t\tt->tm_mon == TM_JANUARY) ||\n\t\t\t\t\t\t(w == 1 &&\n\t\t\t\t\t\tt->tm_mon == TM_DECEMBER))\n\t\t\t\t\t\t\tw = 53;\n#endif /* defined XPG4_1994_04_09 */\n\t\t\t\t\tif (*format == 'V')\n\t\t\t\t\t\tpt = _conv(w, \"%02d\",\n\t\t\t\t\t\t\tpt, ptlim);\n\t\t\t\t\telse if (*format == 'g') {\n\t\t\t\t\t\t*warnp = IN_ALL;\n\t\t\t\t\t\tpt = _yconv(year, base,\n\t\t\t\t\t\t\tfalse, true,\n\t\t\t\t\t\t\tpt, ptlim);\n\t\t\t\t\t} else\tpt = _yconv(year, base,\n\t\t\t\t\t\t\ttrue, true,\n\t\t\t\t\t\t\tpt, ptlim);\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase 'v':\n\t\t\t\t/*\n\t\t\t\t** From Arnold Robbins' strftime version 3.0:\n\t\t\t\t** \"date as dd-bbb-YYYY\"\n\t\t\t\t** (ado, 1993-05-24)\n\t\t\t\t*/\n\t\t\t\tpt = _fmt(\"%e-%b-%Y\", t, pt, ptlim, warnp);\n\t\t\t\tcontinue;\n\t\t\tcase 'W':\n\t\t\t\tpt = _conv((t->tm_yday + DAYSPERWEEK -\n\t\t\t\t\t(t->tm_wday ?\n\t\t\t\t\t(t->tm_wday - 1) :\n\t\t\t\t\t(DAYSPERWEEK - 1))) / DAYSPERWEEK,\n\t\t\t\t\t\"%02d\", pt, ptlim);\n\t\t\t\tcontinue;\n\t\t\tcase 'w':\n\t\t\t\tpt = _conv(t->tm_wday, \"%d\", pt, ptlim);\n\t\t\t\tcontinue;\n\t\t\tcase 'X':\n\t\t\t\tpt = _fmt(Locale->X_fmt, t, pt, ptlim, warnp);\n\t\t\t\tcontinue;\n\t\t\tcase 'x':\n\t\t\t\t{\n\t\t\t\tenum warn warn2 = IN_SOME;\n\n\t\t\t\tpt = _fmt(Locale->x_fmt, t, pt, ptlim, &warn2);\n\t\t\t\tif (warn2 == IN_ALL)\n\t\t\t\t\twarn2 = IN_THIS;\n\t\t\t\tif (warn2 > *warnp)\n\t\t\t\t\t*warnp = warn2;\n\t\t\t\t}\n\t\t\t\tcontinue;\n\t\t\tcase 'y':\n\t\t\t\t*warnp = IN_ALL;\n\t\t\t\tpt = _yconv(t->tm_year, TM_YEAR_BASE,\n\t\t\t\t\tfalse, true,\n\t\t\t\t\tpt, ptlim);\n\t\t\t\tcontinue;\n\t\t\tcase 'Y':\n\t\t\t\tpt = _yconv(t->tm_year, TM_YEAR_BASE,\n\t\t\t\t\ttrue, true,\n\t\t\t\t\tpt, ptlim);\n\t\t\t\tcontinue;\n\t\t\tcase 'Z':\n#ifdef TM_ZONE\n\t\t\t\tpt = _add(t->TM_ZONE, pt, ptlim);\n#elif HAVE_TZNAME\n\t\t\t\tif (t->tm_isdst >= 0)\n\t\t\t\t\tpt = _add(tzname[t->tm_isdst != 0],\n\t\t\t\t\t\tpt, ptlim);\n#endif\n\t\t\t\t/*\n\t\t\t\t** C99 and later say that %Z must be\n\t\t\t\t** replaced by the empty string if the\n\t\t\t\t** time zone abbreviation is not\n\t\t\t\t** determinable.\n\t\t\t\t*/\n\t\t\t\tcontinue;\n\t\t\tcase 'z':\n#if defined TM_GMTOFF || USG_COMPAT || ALTZONE\n\t\t\t\t{\n\t\t\t\tlong\t\tdiff;\n\t\t\t\tchar const *\tsign;\n\t\t\t\tbool negative;\n\n# ifdef TM_GMTOFF\n\t\t\t\tdiff = t->TM_GMTOFF;\n# else\n\t\t\t\t/*\n\t\t\t\t** C99 and later say that the UT offset must\n\t\t\t\t** be computed by looking only at\n\t\t\t\t** tm_isdst. This requirement is\n\t\t\t\t** incorrect, since it means the code\n\t\t\t\t** must rely on magic (in this case\n\t\t\t\t** altzone and timezone), and the\n\t\t\t\t** magic might not have the correct\n\t\t\t\t** offset. Doing things correctly is\n\t\t\t\t** tricky and requires disobeying the standard;\n\t\t\t\t** see GNU C strftime for details.\n\t\t\t\t** For now, punt and conform to the\n\t\t\t\t** standard, even though it's incorrect.\n\t\t\t\t**\n\t\t\t\t** C99 and later say that %z must be replaced by\n\t\t\t\t** the empty string if the time zone is not\n\t\t\t\t** determinable, so output nothing if the\n\t\t\t\t** appropriate variables are not available.\n\t\t\t\t*/\n\t\t\t\tif (t->tm_isdst < 0)\n\t\t\t\t\tcontinue;\n\t\t\t\tif (t->tm_isdst == 0)\n#  if USG_COMPAT\n\t\t\t\t\tdiff = -timezone;\n#  else\n\t\t\t\t\tcontinue;\n#  endif\n\t\t\t\telse\n#  if ALTZONE\n\t\t\t\t\tdiff = -altzone;\n#  else\n\t\t\t\t\tcontinue;\n#  endif\n# endif\n\t\t\t\tnegative = diff < 0;\n\t\t\t\tif (diff == 0) {\n# ifdef TM_ZONE\n\t\t\t\t  negative = t->TM_ZONE[0] == '-';\n# else\n\t\t\t\t  negative = t->tm_isdst < 0;\n#  if HAVE_TZNAME\n\t\t\t\t  if (tzname[t->tm_isdst != 0][0] == '-')\n\t\t\t\t    negative = true;\n#  endif\n# endif\n\t\t\t\t}\n\t\t\t\tif (negative) {\n\t\t\t\t\tsign = \"-\";\n\t\t\t\t\tdiff = -diff;\n\t\t\t\t} else\tsign = \"+\";\n\t\t\t\tpt = _add(sign, pt, ptlim);\n\t\t\t\tdiff /= SECSPERMIN;\n\t\t\t\tdiff = (diff / MINSPERHOUR) * 100 +\n\t\t\t\t\t(diff % MINSPERHOUR);\n\t\t\t\tpt = _conv(diff, \"%04d\", pt, ptlim);\n\t\t\t\t}\n#endif\n\t\t\t\tcontinue;\n\t\t\tcase '+':\n\t\t\t\tpt = _fmt(Locale->date_fmt, t, pt, ptlim,\n\t\t\t\t\twarnp);\n\t\t\t\tcontinue;\n\t\t\tcase '%':\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (pt == ptlim)\n\t\t\tbreak;\n\t\t*pt++ = *format;\n\t}\n\treturn pt;\n}\n\nstatic char *\n_conv(int n, const char *format, char *pt, const char *ptlim)\n{\n\tchar\tbuf[INT_STRLEN_MAXIMUM(int) + 1];\n\n\tsprintf(buf, format, n);\n\treturn _add(buf, pt, ptlim);\n}\n\nstatic char *\n_add(const char *str, char *pt, const char *ptlim)\n{\n\twhile (pt < ptlim && (*pt = *str++) != '\\0')\n\t\t++pt;\n\treturn pt;\n}\n\n/*\n** POSIX and the C Standard are unclear or inconsistent about\n** what %C and %y do if the year is negative or exceeds 9999.\n** Use the convention that %C concatenated with %y yields the\n** same output as %Y, and that %Y contains at least 4 bytes,\n** with more only if necessary.\n*/\n\nstatic char *\n_yconv(int a, int b, bool convert_top, bool convert_yy,\n       char *pt, const char *ptlim)\n{\n\tregister int\tlead;\n\tregister int\ttrail;\n\n\tint DIVISOR = 100;\n\ttrail = a % DIVISOR + b % DIVISOR;\n\tlead = a / DIVISOR + b / DIVISOR + trail / DIVISOR;\n\ttrail %= DIVISOR;\n\tif (trail < 0 && lead > 0) {\n\t\ttrail += DIVISOR;\n\t\t--lead;\n\t} else if (lead < 0 && trail > 0) {\n\t\ttrail -= DIVISOR;\n\t\t++lead;\n\t}\n\tif (convert_top) {\n\t\tif (lead == 0 && trail < 0)\n\t\t\tpt = _add(\"-0\", pt, ptlim);\n\t\telse\tpt = _conv(lead, \"%02d\", pt, ptlim);\n\t}\n\tif (convert_yy)\n\t\tpt = _conv(((trail < 0) ? -trail : trail), \"%02d\", pt, ptlim);\n\treturn pt;\n}\n"
        },
        {
          "name": "theory.html",
          "type": "blob",
          "size": 65.1513671875,
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <title>Theory and pragmatics of the tz code and data</title>\n  <meta charset=\"UTF-8\">\n  <style>\n    pre {margin-left: 2em; white-space: pre-wrap;}\n  </style>\n</head>\n\n<body>\n<h1>Theory and pragmatics of the <code><abbr>tz</abbr></code> code and data</h1>\n  <h3>Outline</h3>\n  <nav>\n    <ul>\n      <li><a href=\"#scope\">Scope of the <code><abbr>tz</abbr></code>\n\t  database</a></li>\n      <li><a href=\"#naming\">Timezone identifiers</a></li>\n      <li><a href=\"#abbreviations\">Time zone abbreviations</a></li>\n      <li><a href=\"#accuracy\">Accuracy of the <code><abbr>tz</abbr></code>\n\t  database</a></li>\n      <li><a href=\"#functions\">Time and date functions</a></li>\n      <li><a href=\"#stability\">Interface stability</a></li>\n      <li><a href=\"#leapsec\">Leap seconds</a></li>\n      <li><a href=\"#calendar\">Calendrical issues</a></li>\n      <li><a href=\"#planets\">Time and time zones off earth</a></li>\n    </ul>\n  </nav>\n\n<section>\n  <h2 id=\"scope\">Scope of the <code><abbr>tz</abbr></code> database</h2>\n<p>\nThe <a\nhref=\"https://www.iana.org/time-zones\"><code><abbr>tz</abbr></code>\ndatabase</a> attempts to record the history and predicted future of\ncivil time scales.\nIt organizes <a href=\"tz-link.html\">time zone and daylight saving time\ndata</a> by partitioning the world into <a\nhref=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\"><dfn>timezones</dfn></a>\nwhose clocks all agree about timestamps that occur after the <a\nhref=\"https://en.wikipedia.org/wiki/Unix_time\">POSIX Epoch</a>\n(1970-01-01 00:00:00 <a\nhref=\"https://en.wikipedia.org/wiki/Coordinated_Universal_Time\"><abbr\ntitle=\"Coordinated Universal Time\">UTC</abbr></a>).\nAlthough 1970 is a somewhat-arbitrary cutoff, there are significant\nchallenges to moving the cutoff earlier even by a decade or two, due\nto the wide variety of local practices before computer timekeeping\nbecame prevalent.\nMost timezones correspond to a notable location and the database\nrecords all known clock transitions for that location;\nsome timezones correspond instead to a fixed <abbr>UTC</abbr> offset.\n</p>\n\n<p>\nEach timezone typically corresponds to a geographical region that is\nsmaller than a traditional time zone, because clocks in a timezone\nall agree after 1970 whereas a traditional time zone merely\nspecifies current standard time. For example, applications that deal\nwith current and future timestamps in the traditional North\nAmerican mountain time zone can choose from the timezones\n<code>America/Denver</code> which observes US-style daylight saving\ntime (<abbr>DST</abbr>),\nand <code>America/Phoenix</code> which does not observe <abbr>DST</abbr>.\nApplications that also deal with past timestamps in the mountain time\nzone can choose from over a dozen timezones, such as\n<code>America/Boise</code>, <code>America/Edmonton</code>, and\n<code>America/Hermosillo</code>, each of which currently uses mountain\ntime but differs from other timezones for some timestamps after 1970.\n</p>\n\n<p>\nClock transitions before 1970 are recorded for location-based timezones,\nbecause most systems support timestamps before 1970 and could\nmisbehave if data entries were omitted for pre-1970 transitions.\nHowever, the database is not designed for and does not suffice for\napplications requiring accurate handling of all past times everywhere,\nas it would take far too much effort and guesswork to record all\ndetails of pre-1970 civil timekeeping.\nAlthough some information outside the scope of the database is\ncollected in a file <code>backzone</code> that is distributed along\nwith the database proper, this file is less reliable and does not\nnecessarily follow database guidelines.\n</p>\n\n<p>\nAs described below, reference source code for using the\n<code><abbr>tz</abbr></code> database is also available.\nThe <code><abbr>tz</abbr></code> code is upwards compatible with <a\nhref=\"https://en.wikipedia.org/wiki/POSIX\">POSIX</a>, an international\nstandard for <a\nhref=\"https://en.wikipedia.org/wiki/Unix\">UNIX</a>-like systems.\nAs of this writing, the current edition of POSIX is POSIX.1-2024,\nwhich has been published but not yet in HTML form.\nUnlike its predecessor POSIX.1-2017 (<a\nhref=\"https://pubs.opengroup.org/onlinepubs/9699919799/\"> The Open\nGroup Base Specifications Issue 7</a>, IEEE Std 1003.1-2017, 2018\nEdition), POSIX.1-2024 requires support for the\n<code><abbr>tz</abbr></code> database, which has a\nmodel for describing civil time that is more complex than the\nstandard and daylight saving times required by POSIX.1-2017.\nA <code><abbr>tz</abbr></code> timezone corresponds to a ruleset that can\nhave more than two changes per year, these changes need not merely\nflip back and forth between two alternatives, and the rules themselves\ncan change at times.\nWhether and when a timezone changes its clock,\nand even the timezone's notional base offset from <abbr>UTC</abbr>,\nare variable.\nIt does not always make sense to talk about a timezone's\n\"base offset\", which is not necessarily a single number.\n</p>\n\n</section>\n\n<section>\n  <h2 id=\"naming\">Timezone identifiers</h2>\n<p>\nEach timezone has a name that uniquely identifies the timezone.\nInexperienced users are not expected to select these names unaided.\nDistributors should provide documentation and/or a simple selection\ninterface that explains each name via a map or via descriptive text like\n\"Czech Republic\" instead of the timezone name \"<code>Europe/Prague</code>\".\nIf geolocation information is available, a selection interface can\nlocate the user on a timezone map or prioritize names that are\ngeographically close. For an example selection interface, see the\n<code>tzselect</code> program in the <code><abbr>tz</abbr></code> code.\nUnicode's <a href=\"https://cldr.unicode.org\">Common Locale Data\nRepository (<abbr>CLDR</abbr>)</a>\ncontains data that may be useful for other selection\ninterfaces; it maps timezone names like <code>Europe/Prague</code> to\nlocale-dependent strings like \"Prague\", \"Praha\", \"Прага\", and \"布拉格\".\n</p>\n\n<p>\nThe naming conventions attempt to strike a balance\namong the following goals:\n</p>\n\n<ul>\n  <li>\n    Uniquely identify every timezone where clocks have agreed since 1970.\n    This is essential for the intended use: static clocks keeping local\n    civil time.\n  </li>\n  <li>\n    Indicate to experts where the timezone's clocks typically are.\n  </li>\n  <li>\n    Be robust in the presence of political changes.\n    For example, names are typically not tied to countries, to avoid\n    incompatibilities when countries change their name (e.g.,\n    Swaziland&rarr;Eswatini) or when locations change countries (e.g., Hong\n    Kong from UK colony to China).\n    There is no requirement that every country or national\n    capital must have a timezone name.\n  </li>\n  <li>\n    Be portable to a wide variety of implementations.\n  </li>\n  <li>\n    Use a consistent naming conventions over the entire world.\n  </li>\n</ul>\n\n<p>\nNames normally have the format\n<var>AREA</var><code>/</code><var>LOCATION</var>, where\n<var>AREA</var> is a continent or ocean, and\n<var>LOCATION</var> is a specific location within the area.\nNorth and South America share the same area, '<code>America</code>'.\nTypical names are '<code>Africa/Cairo</code>',\n'<code>America/New_York</code>', and '<code>Pacific/Honolulu</code>'.\nSome names are further qualified to help avoid confusion; for example,\n'<code>America/Indiana/Petersburg</code>' distinguishes Petersburg,\nIndiana from other Petersburgs in America.\n</p>\n\n<p>\nHere are the general guidelines used for\nchoosing timezone names,\nin decreasing order of importance:\n</p>\n\n<ul>\n  <li>\n    Use only valid POSIX file name components (i.e., the parts of\n    names other than '<code>/</code>').\n    Do not use the file name components '<code>.</code>' and\n    '<code>..</code>'.\n    Within a file name component, use only <a\n    href=\"https://en.wikipedia.org/wiki/ASCII\">ASCII</a> letters,\n    '<code>.</code>', '<code>-</code>' and '<code>_</code>'.\n    Do not use digits, as that might create an ambiguity with <a\n    href=\"https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap08.html#tag_08_03\">POSIX's proleptic\n    <code>TZ</code> strings</a>.\n    A file name component must not exceed 14 characters or start with\n    '<code>-</code>'.\n    E.g., prefer <code>America/Noronha</code> to\n    <code>America/Fernando_de_Noronha</code>.\n    Exceptions: see the discussion of legacy names below.\n  </li>\n  <li>\n    A name must not be empty, or contain '<code>//</code>', or\n    start or end with '<code>/</code>'.\n    Also, a name must not be '<code>Etc/Unknown</code>', as\n    <abbr>CLDR</abbr> uses that string for an unknown or invalid timezone.\n  </li>\n  <li>\n    Do not use names that differ only in case.\n    Although the reference implementation is case-sensitive, some\n    other implementations are not, and they would mishandle names\n    differing only in case.\n  </li>\n  <li>\n    If one name <var>A</var> is an initial prefix of another\n    name <var>AB</var> (ignoring case), then <var>B</var> must not\n    start with '<code>/</code>', as a regular file cannot have the\n    same name as a directory in POSIX.\n    For example, <code>America/New_York</code> precludes\n    <code>America/New_York/Bronx</code>.\n  </li>\n  <li>\n    Uninhabited regions like the North Pole and Bouvet Island\n    do not need locations, since local time is not defined there.\n  </li>\n  <li>\n    If all clocks in a region have agreed since 1970,\n    give them just one name even if some of the clocks disagreed before 1970,\n    or reside in different countries or in notable or faraway locations.\n    Otherwise these tables would become annoyingly large.\n    For example, do not create a name <code>Indian/Crozet</code>\n    as a near-duplicate or alias of <code>Asia/Dubai</code>\n    merely because they are different countries or territories,\n    or their clocks disagreed before 1970, or the\n    <a href=\"https://en.wikipedia.org/wiki/Crozet_Islands\">Crozet Islands</a>\n    are notable in their own right,\n    or the Crozet Islands are not adjacent to other locations\n    that use <code>Asia/Dubai</code>.\n  </li>\n  <li>\n    If boundaries between regions are fluid, such as during a war or\n    insurrection, do not bother to create a new timezone merely\n    because of yet another boundary change. This helps prevent table\n    bloat and simplifies maintenance.\n  </li>\n  <li>\n    If a name is ambiguous, use a less ambiguous alternative;\n    e.g., many cities are named San José and Georgetown, so\n    prefer <code>America/Costa_Rica</code> to\n    <code>America/San_Jose</code> and <code>America/Guyana</code>\n    to <code>America/Georgetown</code>.\n  </li>\n  <li>\n    Keep locations compact.\n    Use cities or small islands, not countries or regions, so that any\n    future changes do not split individual locations into different\n    timezones.\n    E.g., prefer <code>Europe/Paris</code> to <code>Europe/France</code>,\n    since\n    <a href=\"https://en.wikipedia.org/wiki/Time_in_France#History\">France\n    has had multiple time zones</a>.\n  </li>\n  <li>\n    Use mainstream English spelling, e.g., prefer\n    <code>Europe/Rome</code> to <code>Europa/Roma</code>, and\n    prefer <code>Europe/Athens</code> to the Greek\n    <code>Ευρώπη/Αθήνα</code> or the Romanized\n    <code>Evrópi/Athína</code>.\n    The POSIX file name restrictions encourage this guideline.\n  </li>\n  <li>\n    Use the most populous among locations in a region,\n    e.g., prefer <code>Asia/Shanghai</code> to\n    <code>Asia/Beijing</code>.\n    Among locations with similar populations, pick the best-known\n    location, e.g., prefer <code>Europe/Rome</code> to\n    <code>Europe/Milan</code>.\n  </li>\n  <li>\n    Use the singular form, e.g., prefer <code>Atlantic/Canary</code> to\n    <code>Atlantic/Canaries</code>.\n  </li>\n  <li>\n    Omit common suffixes like '<code>_Islands</code>' and\n    '<code>_City</code>', unless that would lead to ambiguity.\n    E.g., prefer <code>America/Cayman</code> to\n    <code>America/Cayman_Islands</code> and\n    <code>America/Guatemala</code> to\n    <code>America/Guatemala_City</code>, but prefer\n    <code>America/Mexico_City</code> to\n    <code>America/Mexico</code>\n    because <a href=\"https://en.wikipedia.org/wiki/Time_in_Mexico\">the\n    country of Mexico has several time zones</a>.\n  </li>\n  <li>\n    Use '<code>_</code>' to represent a space.\n  </li>\n  <li>\n    Omit '<code>.</code>' from abbreviations in names.\n    E.g., prefer <code>Atlantic/St_Helena</code> to\n    <code>Atlantic/St._Helena</code>.\n  </li>\n  <li>\n    Do not change established names if they only marginally violate\n    the above guidelines.\n    For example, do not change the existing name <code>Europe/Rome</code> to\n    <code>Europe/Milan</code> merely because Milan's population has grown\n    to be somewhat greater than Rome's.\n  </li>\n  <li>\n    If a name is changed, put its old spelling in the\n    '<code>backward</code>' file as a link to the new spelling.\n    This means old spellings will continue to work.\n    Ordinarily a name change should occur only in the rare case when\n    a location's consensus English-language spelling changes; for example,\n    in 2008 <code>Asia/Calcutta</code> was renamed to <code>Asia/Kolkata</code>\n    due to long-time widespread use of the new city name instead of the old.\n  </li>\n</ul>\n\n<p>\nGuidelines have evolved with time, and names following old versions of\nthese guidelines might not follow the current version. When guidelines\nhave changed, old names continue to be supported. Guideline changes\nhave included the following:\n</p>\n\n<ul>\n<li>\nOlder versions of this package used a different naming scheme.\nSee the file '<code>backward</code>' for most of these older names\n(e.g., '<code>US/Eastern</code>' instead of '<code>America/New_York</code>').\nThe other old-fashioned names still supported are\n'<code>WET</code>', '<code>CET</code>', '<code>MET</code>', and\n'<code>EET</code>' (see the file '<code>europe</code>').\n</li>\n\n<li>\nOlder versions of this package defined legacy names that are\nincompatible with the first guideline of location names, but which are\nstill supported.\nThese legacy names are mostly defined in the file\n'<code>etcetera</code>'.\nAlso, the file '<code>backward</code>' defines the legacy names\n'<code>Etc/GMT0</code>', '<code>Etc/GMT-0</code>', '<code>Etc/GMT+0</code>',\n'<code>GMT0</code>', '<code>GMT-0</code>' and '<code>GMT+0</code>',\nand the file '<code>northamerica</code>' defines the legacy names\n'<code>EST5EDT</code>', '<code>CST6CDT</code>',\n'<code>MST7MDT</code>', and '<code>PST8PDT</code>'.\n</li>\n\n<li>\nOlder versions of these guidelines said that\nthere should typically be at least one name for each <a\nhref=\"https://en.wikipedia.org/wiki/ISO_3166-1\"><abbr\ntitle=\"International Organization for Standardization\">ISO</abbr>\n3166-1</a> officially assigned two-letter code for an inhabited\ncountry or territory.\nThis old guideline has been dropped, as it was not needed to handle\ntimestamps correctly and it increased maintenance burden.\n</li>\n</ul>\n\n<p>\nThe file <code>zone1970.tab</code> lists geographical locations used\nto name timezones.\nIt is intended to be an exhaustive list of names for geographic\nregions as described above; this is a subset of the timezones in the data.\nAlthough a <code>zone1970.tab</code> location's\n<a href=\"https://en.wikipedia.org/wiki/Longitude\">longitude</a>\ncorresponds to\nits <a href=\"https://en.wikipedia.org/wiki/Local_mean_time\">local mean\ntime (<abbr>LMT</abbr>)</a> offset with one hour for every 15&deg;\neast longitude, this relationship is not exact.\nThe backward-compatibility file <code>zone.tab</code> is similar\nbut conforms to the older-version guidelines related to <abbr>ISO</abbr> 3166-1;\nit lists only one country code per entry and unlike <code>zone1970.tab</code>\nit can list names defined in <code>backward</code>.\nApplications that process only timestamps from now on can instead use the file\n<code>zonenow.tab</code>, which partitions the world more coarsely,\ninto regions where clocks agree now and in the predicted future;\nthis file is smaller and simpler than <code>zone1970.tab</code>\nand <code>zone.tab</code>.\n</p>\n\n<p>\nThe database defines each timezone name to be a zone, or a link to a zone.\nThe source file <code>backward</code> defines links for backward\ncompatibility; it does not define zones.\nAlthough <code>backward</code> was originally designed to be optional,\nnowadays distributions typically use it\nand no great weight should be attached to whether a link\nis defined in <code>backward</code> or in some other file.\nThe source file <code>etcetera</code> defines names that may be useful\non platforms that do not support proleptic <code>TZ</code> strings\nlike <code>&lt;+08&gt;-8</code>;\nno other source file other than <code>backward</code>\ncontains links to its zones.\nOne of <code>etcetera</code>'s names is <code>Etc/UTC</code>,\nused by functions like <code>gmtime</code> to obtain leap\nsecond information on platforms that support leap seconds.\nAnother <code>etcetera</code> name, <code>GMT</code>,\nis used by older code releases.\n</p>\n</section>\n\n<section>\n  <h2 id=\"abbreviations\">Time zone abbreviations</h2>\n<p>\nWhen this package is installed, it generates time zone abbreviations\nlike '<code>EST</code>' to be compatible with human tradition and POSIX.\nHere are the general guidelines used for choosing time zone abbreviations,\nin decreasing order of importance:\n</p>\n\n<ul>\n  <li>\n    Use three to six characters that are ASCII alphanumerics or\n    '<code>+</code>' or '<code>-</code>'.\n    Previous editions of this database also used characters like\n    space and '<code>?</code>', but these characters have a\n    special meaning to the\n    <a href=\"https://en.wikipedia.org/wiki/Unix_shell\">UNIX shell</a>\n    and cause commands like\n    '<code><a href=\"https://pubs.opengroup.org/onlinepubs/9699919799/utilities/V3_chap02.html#set\">set</a>\n    `<a href=\"https://pubs.opengroup.org/onlinepubs/9699919799/utilities/date.html\">date</a>`</code>'\n    to have unexpected effects.\n    Previous editions of this guideline required upper-case letters, but the\n    Congressman who introduced\n    <a href=\"https://en.wikipedia.org/wiki/Chamorro_Time_Zone\">Chamorro\n    Standard Time</a> preferred \"ChST\", so lower-case letters are now\n    allowed.\n    Also, POSIX from 2001 on relaxed the rule to allow '<code>-</code>',\n    '<code>+</code>', and alphanumeric characters from the portable\n    character set in the current locale.\n    In practice ASCII alphanumerics and '<code>+</code>' and\n    '<code>-</code>' are safe in all locales.\n\n    <p>\n    In other words, in the C locale the POSIX extended regular\n    expression <code>[-+[:alnum:]]{3,6}</code> should match the\n    abbreviation.\n    This guarantees that all abbreviations could have been specified\n    explicitly by a POSIX proleptic <code>TZ</code> string.\n    </p>\n  </li>\n  <li>\n    Use abbreviations that are in common use among English-speakers,\n    e.g., 'EST' for Eastern Standard Time in North America.\n    We assume that applications translate them to other languages\n    as part of the normal localization process; for example,\n    a French application might translate 'EST' to 'HNE'.\n\n    <p>\n    <small>These abbreviations (for standard/daylight/etc. time) are:\n      ACST/ACDT Australian Central,\n      AST/ADT/APT/AWT/ADDT Atlantic,\n      AEST/AEDT Australian Eastern,\n      AHST/AHDT Alaska-Hawaii,\n      AKST/AKDT Alaska,\n      AWST/AWDT Australian Western,\n      BST/BDT Bering,\n      CAT/CAST Central Africa,\n      CET/CEST/CEMT Central European,\n      ChST Chamorro,\n      CST/CDT/CWT/CPT Central [North America],\n      CST/CDT China,\n      GMT/BST/IST/BDST Greenwich,\n      EAT East Africa,\n      EST/EDT/EWT/EPT Eastern [North America],\n      EET/EEST Eastern European,\n      GST/GDT Guam,\n      HST/HDT/HWT/HPT Hawaii,\n      HKT/HKST/HKWT Hong Kong,\n      IST India,\n      IST/GMT Irish,\n      IST/IDT/IDDT Israel,\n      JST/JDT Japan,\n      KST/KDT Korea,\n      MET/MEST Middle European (a backward-compatibility alias for\n\tCentral European),\n      MSK/MSD Moscow,\n      MST/MDT/MWT/MPT Mountain,\n      NST/NDT/NWT/NPT/NDDT Newfoundland,\n      NST/NDT/NWT/NPT Nome,\n      NZMT/NZST New Zealand through 1945,\n      NZST/NZDT New Zealand 1946&ndash;present,\n      PKT/PKST Pakistan,\n      PST/PDT/PWT/PPT Pacific,\n      PST/PDT Philippine,\n      SAST South Africa,\n      SST Samoa,\n      UTC Universal,\n      WAT/WAST West Africa,\n      WET/WEST/WEMT Western European,\n      WIB Waktu Indonesia Barat,\n      WIT Waktu Indonesia Timur,\n      WITA Waktu Indonesia Tengah,\n      YST/YDT/YWT/YPT/YDDT Yukon</small>.\n    </p>\n  </li>\n  <li>\n    <p>\n    For times taken from a city's longitude, use the\n    traditional <var>x</var>MT notation.\n    The only abbreviation like this in current use is '<abbr>GMT</abbr>'.\n    The others are for timestamps before 1960,\n    except that Monrovia Mean Time persisted until 1972.\n    Typically, numeric abbreviations (e.g., '<code>-</code>004430' for\n    MMT) would cause trouble here, as the numeric strings would exceed\n    the POSIX length limit.\n    </p>\n\n    <p>\n    <small>These abbreviations are:\n      AMT Asunción, Athens;\n      BMT Baghdad, Bangkok, Batavia, Bermuda, Bern, Bogotá,\n        Brussels, Bucharest;\n      CMT Calamarca, Caracas, Chisinau, Colón, Córdoba;\n      DMT Dublin/Dunsink;\n      EMT Easter;\n      FFMT Fort-de-France;\n      FMT Funchal;\n      GMT Greenwich;\n      HMT Havana, Helsinki, Horta, Howrah;\n      IMT Irkutsk, Istanbul;\n      JMT Jerusalem;\n      KMT Kaunas, Kyiv, Kingston;\n      LMT Lima, Lisbon, local;\n      MMT Macassar, Madras, Malé, Managua, Minsk, Monrovia, Montevideo,\n\tMoratuwa, Moscow;\n      PLMT Phù Liễn;\n      PMT Paramaribo, Paris, Perm, Pontianak, Prague;\n      PMMT Port Moresby;\n      PPMT Port-au-Prince;\n      QMT Quito;\n      RMT Rangoon, Riga, Rome;\n      SDMT Santo Domingo;\n      SJMT San José;\n      SMT Santiago, Simferopol, Singapore, Stanley;\n      TBMT Tbilisi;\n      TMT Tallinn, Tehran;\n      WMT Warsaw.</small>\n    </p>\n\n    <p>\n    <small>A few abbreviations also follow the pattern that\n    <abbr>GMT</abbr>/<abbr>BST</abbr> established for time in the UK.\n    They are:\n      BMT/BST for Bermuda 1890&ndash;1930,\n      CMT/BST for Calamarca Mean Time and Bolivian Summer Time\n\t1890&ndash;1932,\n      DMT/IST for Dublin/Dunsink Mean Time and Irish Summer Time\n\t1880&ndash;1916,\n      MMT/MST/MDST for Moscow 1880&ndash;1919, and\n      RMT/LST for Riga Mean Time and Latvian Summer time 1880&ndash;1926.\n    </small>\n    </p>\n  </li>\n  <li>\n    Use '<abbr>LMT</abbr>' for local mean time of locations before the\n    introduction of standard time; see \"<a href=\"#scope\">Scope of the\n    <code><abbr>tz</abbr></code> database</a>\".\n  </li>\n  <li>\n    If there is no common English abbreviation, use numeric offsets like\n    <code>-</code>05 and <code>+</code>0530 that are generated\n    by <code>zic</code>'s <code>%z</code> notation.\n  </li>\n  <li>\n    Use current abbreviations for older timestamps to avoid confusion.\n    For example, in 1910 a common English abbreviation for time\n    in central Europe was 'MEZ' (short for both \"Middle European\n    Zone\" and for \"Mitteleuropäische Zeit\" in German).\n    Nowadays 'CET' (\"Central European Time\") is more common in\n    English, and the database uses 'CET' even for circa-1910\n    timestamps as this is less confusing for modern users and avoids\n    the need for determining when 'CET' supplanted 'MEZ' in common\n    usage.\n  </li>\n  <li>\n    Use a consistent style in a timezone's history.\n    For example, if a history tends to use numeric\n    abbreviations and a particular entry could go either way, use a\n    numeric abbreviation.\n  </li>\n  <li>\n    Use\n    <a href=\"https://en.wikipedia.org/wiki/Universal_Time\">Universal Time</a>\n    (<abbr>UT</abbr>) (with time zone abbreviation '<code>-</code>00') for\n    locations while uninhabited.\n    The leading '<code>-</code>' is a flag that the <abbr>UT</abbr> offset is in\n    some sense undefined; this notation is derived\n    from <a href=\"https://www.rfc-editor.org/rfc/rfc3339\">Internet\n    <abbr title=\"Request For Comments\">RFC</abbr> 3339</a>.\n    (The abbreviation 'Z' that\n    <a href=\"https://www.rfc-editor.org/rfc/rfc9557\">Internet\n    <abbr>RFC</abbr> 9557</a> uses for this concept\n    would violate the POSIX requirement\n    of at least three characters in an abbreviation.)\n  </li>\n</ul>\n\n<p>\nApplication writers should note that these abbreviations are ambiguous\nin practice: e.g., 'CST' means one thing in China and something else\nin North America, and 'IST' can refer to time in India, Ireland or\nIsrael.\nTo avoid ambiguity, use numeric <abbr>UT</abbr> offsets like\n'<code>-</code>0600' instead of time zone abbreviations like 'CST'.\n</p>\n</section>\n\n<section>\n  <h2 id=\"accuracy\">Accuracy of the <code><abbr>tz</abbr></code> database</h2>\n<p>\nThe <code><abbr>tz</abbr></code> database is not authoritative, and it\nsurely has errors.\nCorrections are welcome and encouraged; see the file <code>CONTRIBUTING</code>.\nUsers requiring authoritative data should consult national standards\nbodies and the references cited in the database's comments.\n</p>\n\n<p>\nErrors in the <code><abbr>tz</abbr></code> database arise from many sources:\n</p>\n\n<ul>\n  <li>\n    The <code><abbr>tz</abbr></code> database predicts future\n    timestamps, and current predictions\n    will be incorrect after future governments change the rules.\n    For example, if today someone schedules a meeting for 13:00 next\n    October 1, Casablanca time, and tomorrow Morocco changes its\n    daylight saving rules, software can mess up after the rule change\n    if it blithely relies on conversions made before the change.\n  </li>\n  <li>\n    The pre-1970 entries in this database cover only a tiny sliver of how\n    clocks actually behaved; the vast majority of the necessary\n    information was lost or never recorded.\n    Thousands more timezones would be needed if\n    the <code><abbr>tz</abbr></code> database's scope were extended to\n    cover even just the known or guessed history of standard time; for\n    example, the current single entry for France would need to split\n    into dozens of entries, perhaps hundreds.\n    And in most of the world even this approach would be misleading\n    due to widespread disagreement or indifference about what times\n    should be observed.\n    In her 2015 book\n    <cite><a\n    href=\"https://www.hup.harvard.edu/catalog.php?isbn=9780674286146\">The\n    Global Transformation of Time, 1870&ndash;1950</a></cite>,\n    Vanessa Ogle writes\n    \"Outside of Europe and North America there was no system of time\n    zones at all, often not even a stable landscape of mean times,\n    prior to the middle decades of the twentieth century\".\n    See: Timothy Shenk, <a\nhref=\"https://www.dissentmagazine.org/blog/booked-a-global-history-of-time-vanessa-ogle\">Booked:\n      A Global History of Time</a>. <cite>Dissent</cite> 2015-12-17.\n  </li>\n  <li>\n    Most of the pre-1970 data entries come from unreliable sources, often\n    astrology books that lack citations and whose compilers evidently\n    invented entries when the true facts were unknown, without\n    reporting which entries were known and which were invented.\n    These books often contradict each other or give implausible entries,\n    and on the rare occasions when they are checked they are\n    typically found to be incorrect.\n  </li>\n  <li>\n    For the UK the <code><abbr>tz</abbr></code> database relies on\n    years of first-class work done by\n    Joseph Myers and others; see\n    \"<a href=\"https://www.polyomino.org.uk/british-time/\">History of\n    legal time in Britain</a>\".\n    Other countries are not done nearly as well.\n  </li>\n  <li>\n    Sometimes, different people in the same city maintain clocks\n    that differ significantly.\n    Historically, railway time was used by railroad companies (which\n    did not always\n    agree with each other), church-clock time was used for birth\n    certificates, etc.\n    More recently, competing political groups might disagree about\n    clock settings. Often this is merely common practice, but\n    sometimes it is set by law.\n    For example, from 1891 to 1911 the <abbr>UT</abbr> offset in France\n    was legally <abbr>UT</abbr> +00:09:21 outside train stations and\n    <abbr>UT</abbr> +00:04:21 inside. Other examples include\n    Chillicothe in 1920, Palm Springs in 1946/7, and Jerusalem and\n    Ürümqi to this day.\n  </li>\n  <li>\n    Although a named location in the <code><abbr>tz</abbr></code>\n    database stands for the containing region, its pre-1970 data\n    entries are often accurate for only a small subset of that region.\n    For example, <code>Europe/London</code> stands for the United\n    Kingdom, but its pre-1847 times are valid only for locations that\n    have London's exact meridian, and its 1847 transition\n    to <abbr>GMT</abbr> is known to be valid only for the L&amp;NW and\n    the Caledonian railways.\n  </li>\n  <li>\n    The <code><abbr>tz</abbr></code> database does not record the\n    earliest time for which a timezone's\n    data entries are thereafter valid for every location in the region.\n    For example, <code>Europe/London</code> is valid for all locations\n    in its region after <abbr>GMT</abbr> was made the standard time,\n    but the date of standardization (1880-08-02) is not in the\n    <code><abbr>tz</abbr></code> database, other than in commentary.\n    For many timezones the earliest time of\n    validity is unknown.\n  </li>\n  <li>\n    The <code><abbr>tz</abbr></code> database does not record a\n    region's boundaries, and in many cases the boundaries are not known.\n    For example, the timezone\n    <code>America/Kentucky/Louisville</code> represents a region\n    around the city of Louisville, the boundaries of which are\n    unclear.\n  </li>\n  <li>\n    Changes that are modeled as instantaneous transitions in the\n    <code><abbr>tz</abbr></code>\n    database were often spread out over hours, days, or even decades.\n  </li>\n  <li>\n    Even if the time is specified by law, locations sometimes\n    deliberately flout the law.\n  </li>\n  <li>\n    Early timekeeping practices, even assuming perfect clocks, were\n    often not specified to the accuracy that the\n    <code><abbr>tz</abbr></code> database requires.\n  </li>\n  <li>\n    The <code><abbr>tz</abbr></code> database cannot represent stopped clocks.\n    However, on 1911-03-11 at 00:00, some public-facing French clocks\n    were changed by stopping them for a few minutes to effect a transition.\n    The <code><abbr>tz</abbr></code> database models this via a\n    backward transition; the relevant French legislation does not\n    specify exactly how the transition was to occur.\n  </li>\n  <li>\n    Sometimes historical timekeeping was specified more precisely\n    than what the <code><abbr>tz</abbr></code> code can handle.\n    For example, from 1880 to 1916 clocks in Ireland observed Dublin Mean\n    Time (estimated to be <abbr>UT</abbr>\n    &minus;00:25:21.1); although the <code><abbr>tz</abbr></code>\n    source data can represent the .1 second, TZif files and the code cannot.\n    In practice these old specifications were rarely if ever\n    implemented to subsecond precision.\n  </li>\n  <li>\n    Even when all the timestamp transitions recorded by the\n    <code><abbr>tz</abbr></code> database are correct, the\n    <code><abbr>tz</abbr></code> rules that generate them may not\n    faithfully reflect the historical rules.\n    For example, from 1922 until World War II the UK moved clocks\n    forward the day following the third Saturday in April unless that\n    was Easter, in which case it moved clocks forward the previous\n    Sunday.\n    Because the <code><abbr>tz</abbr></code> database has no\n    way to specify Easter, these exceptional years are entered as\n    separate <code><abbr>tz</abbr> Rule</code> lines, even though the\n    legal rules did not change.\n    When transitions are known but the historical rules behind them are not,\n    the database contains <code>Zone</code> and <code>Rule</code>\n    entries that are intended to represent only the generated\n    transitions, not any underlying historical rules; however, this\n    intent is recorded at best only in commentary.\n  </li>\n  <li>\n    The <code><abbr>tz</abbr></code> database models time\n    using the <a\n    href=\"https://en.wikipedia.org/wiki/Proleptic_Gregorian_calendar\">proleptic\n    Gregorian calendar</a> with days containing 24 equal-length hours\n    numbered 00 through 23, except when clock transitions occur.\n    Pre-standard time is modeled as local mean time.\n    However, historically many people used other calendars and other timescales.\n    For example, the Roman Empire used\n    the <a href=\"https://en.wikipedia.org/wiki/Julian_calendar\">Julian\n    calendar</a>,\n    and <a href=\"https://en.wikipedia.org/wiki/Roman_timekeeping\">Roman\n    timekeeping</a> had twelve varying-length daytime hours with a\n    non-hour-based system at night.\n    And even today, some local practices diverge from the Gregorian\n    calendar with 24-hour days. These divergences range from\n    relatively minor, such as Japanese bars giving times like \"24:30\" for the\n    wee hours of the morning, to more-significant differences such as <a\n    href=\"https://theworld.org/stories/2015-01-30/if-you-have-meeting-ethiopia-you-better-double-check-time\">the\n    east African practice of starting the day at dawn</a>, renumbering\n    the Western 06:00 to be 12:00. These practices are largely outside\n    the scope of the <code><abbr>tz</abbr></code> code and data, which\n    provide only limited support for date and time localization\n    such as that required by POSIX.\n    If <abbr>DST</abbr> is not used a different time zone\n    can often do the trick; for example, in Kenya a <code>TZ</code> setting\n    like <code>&lt;-03&gt;3</code> or <code>America/Cayenne</code> starts\n    the day six hours later than <code>Africa/Nairobi</code> does.\n  </li>\n  <li>\n    Early clocks were less reliable, and data entries do not represent\n    clock error.\n  </li>\n  <li>\n    The <code><abbr>tz</abbr></code> database assumes Universal Time\n    (<abbr>UT</abbr>) as an origin, even though <abbr>UT</abbr> is not\n    standardized for older timestamps.\n    In the <code><abbr>tz</abbr></code> database commentary,\n    <abbr>UT</abbr> denotes a family of time standards that includes\n    Coordinated Universal Time (<abbr>UTC</abbr>) along with other\n    variants such as <abbr>UT1</abbr> and <abbr>GMT</abbr>,\n    with days starting at midnight.\n    Although <abbr>UT</abbr> equals <abbr>UTC</abbr> for modern\n    timestamps, <abbr>UTC</abbr> was not defined until 1960, so\n    commentary uses the more general abbreviation <abbr>UT</abbr> for\n    timestamps that might predate 1960.\n    Since <abbr>UT</abbr>, <abbr>UT1</abbr>, etc. disagree slightly,\n    and since pre-1972 <abbr>UTC</abbr> seconds varied in length,\n    interpretation of older timestamps can be problematic when\n    subsecond accuracy is needed.\n  </li>\n  <li>\n    Civil time was not based on atomic time before 1972, and we do not\n    know the history of\n    <a href=\"https://en.wikipedia.org/wiki/Earth's_rotation\">earth's\n    rotation</a> accurately enough to map <a\n    href=\"https://en.wikipedia.org/wiki/International_System_of_Units\"><abbr\n    title=\"International System of Units\">SI</abbr></a> seconds to\n    historical <a href=\"https://en.wikipedia.org/wiki/Solar_time\">solar time</a>\n    to more than about one-hour accuracy.\n    See: Stephenson FR, Morrison LV, Hohenkerk CY.\n    <a href=\"https://dx.doi.org/10.1098/rspa.2016.0404\">Measurement of\n    the Earth's rotation: 720 BC to AD 2015</a>.\n    <cite>Proc Royal Soc A</cite>. 2016;472:20160404.\n    Also see: Espenak F. <a\n    href=\"https://eclipse.gsfc.nasa.gov/SEhelp/uncertainty2004.html\">Uncertainty\n    in Delta T (ΔT)</a>.\n  </li>\n  <li>\n    The relationship between POSIX time (that is, <abbr>UTC</abbr> but\n    ignoring <a href=\"https://en.wikipedia.org/wiki/Leap_second\">leap\n    seconds</a>) and <abbr>UTC</abbr> is not agreed upon.\n    This affects time stamps during the leap second era (1972&ndash;2035).\n    Although the POSIX\n    clock officially stops during an inserted leap second, at least one\n    proposed standard has it jumping back a second instead; and in\n    practice POSIX clocks more typically either progress glacially during\n    a leap second, or are slightly slowed while near a leap second.\n  </li>\n  <li>\n    The <code><abbr>tz</abbr></code> database does not represent how\n    uncertain its information is.\n    Ideally it would contain information about when data entries are\n    incomplete or dicey.\n    Partial temporal knowledge is a field of active research, though,\n    and it is not clear how to apply it here.\n  </li>\n</ul>\n\n<p>\nIn short, many, perhaps most, of the <code><abbr>tz</abbr></code>\ndatabase's pre-1970 and future timestamps are either wrong or\nmisleading.\nAny attempt to pass the\n<code><abbr>tz</abbr></code> database off as the definition of time\nshould be unacceptable to anybody who cares about the facts.\nIn particular, the <code><abbr>tz</abbr></code> database's\n<abbr>LMT</abbr> offsets should not be considered meaningful, and\nshould not prompt creation of timezones\nmerely because two locations\ndiffer in <abbr>LMT</abbr> or transitioned to standard time at\ndifferent dates.\n</p>\n</section>\n\n<section>\n  <h2 id=\"functions\">Time and date functions</h2>\n<p>\nThe <code><abbr>tz</abbr></code> code contains time and date functions\nthat are upwards compatible with those of POSIX.\nCode compatible with this package is already\n<a href=\"tz-link.html#tzdb\">part of many platforms</a>, where the\nprimary use of this package is to update obsolete time-related files.\nTo do this, you may need to compile the time zone compiler\n<code>zic</code> supplied with this package instead of using the\nsystem <code>zic</code>, since the format of <code>zic</code>'s\ninput is occasionally extended, and a platform may still be shipping\nan older <code>zic</code>.\n</p>\n\n<p>\nIn POSIX, time display in a process is controlled by the\nenvironment variable <code>TZ</code>, which can have two forms:\n</p>\n<ul>\n  <li>\n    A <dfn>proleptic <code>TZ</code></dfn> value\n    like <code>CET-1CEST,M3.5.0,M10.5.0/3</code> uses a complex\n    notation that specifies a single standard time along with daylight\n    saving rules that apply to all years past, present, and future.\n  </li>\n  <li>\n    A <dfn>geographical <code>TZ</code></dfn> value\n    like <code>Europe/Berlin</code> names a location that stands for\n    civil time near that location, which can have more than\n    one standard time and more than one set of daylight saving rules,\n    to record timekeeping practice more accurately.\n    These names are defined by the <code><abbr>tz</abbr></code> database.\n  </li>\n</ul>\n\n<h3 id=\"POSIX.1-2017\">POSIX.1-2017 properties and limitations</h3>\n<p>\nSome platforms support only the features required by POSIX.1-2017,\nand have not yet upgraded to POSIX.1-2024.\nCode intended to be portable to these platforms must deal\nwith problems that were fixed in later POSIX editions.\n</p>\n\n<ul>\n  <li>\n    POSIX.1-2017 does not require support for geographical <code>TZ</code>,\n    and there is no convenient and efficient way to determine\n    the <abbr>UT</abbr> offset and time zone abbreviation of arbitrary\n    timestamps, particularly for timezones\n    that do not fit into the POSIX model.\n  </li>\n  <li>\n    <p>\n    The proleptic <code>TZ</code> string,\n    which is all that POSIX.1-2017 requires,\n    has a format that is hard to describe and is error-prone in practice.\n    Also, proleptic <code>TZ</code> strings cannot deal with daylight\n    saving time rules not based on the Gregorian calendar (as in\n    Morocco), or with situations where more than two time zone\n    abbreviations or <abbr>UT</abbr> offsets are used in an area.\n    </p>\n\n    <p>\n    A proleptic <code>TZ</code> string has the following format:\n    </p>\n\n    <p>\n    <var>stdoffset</var>[<var>dst</var>[<var>offset</var>][<code>,</code><var>date</var>[<code>/</code><var>time</var>]<code>,</code><var>date</var>[<code>/</code><var>time</var>]]]\n    </p>\n\n    <p>\n    where:\n    </p>\n\n    <dl>\n      <dt><var>std</var> and <var>dst</var></dt><dd>\n\tare 3 or more characters specifying the standard\n\tand daylight saving time (<abbr>DST</abbr>) zone abbreviations.\n\tStarting with POSIX.1-2001, <var>std</var> and <var>dst</var>\n\tmay also be in a quoted form like '<code>&lt;+09&gt;</code>';\n\tthis allows \"<code>+</code>\" and \"<code>-</code>\" in the names.\n      </dd>\n      <dt><var>offset</var></dt><dd>\n\tis of the form\n\t'<code>[&plusmn;]<var>hh</var>:[<var>mm</var>[:<var>ss</var>]]</code>'\n\tand specifies the offset west of <abbr>UT</abbr>.\n\t'<var>hh</var>' may be a single digit;\n\t0&le;<var>hh</var>&le;24.\n\tThe default <abbr>DST</abbr> offset is one hour ahead of\n\tstandard time.\n      </dd>\n      <dt><var>date</var>[<code>/</code><var>time</var>]<code>,</code><var>date</var>[<code>/</code><var>time</var>]</dt><dd>\n\tspecifies the beginning and end of <abbr>DST</abbr>.\n\tIf this is absent, the system supplies its own ruleset\n\tfor <abbr>DST</abbr>, typically\tcurrent <abbr>US</abbr>\n\t<abbr>DST</abbr> rules.\n      </dd>\n      <dt><var>time</var></dt><dd>\n\ttakes the form\n\t'<var>hh</var><code>:</code>[<var>mm</var>[<code>:</code><var>ss</var>]]'\n\tand defaults to 02:00.\n\tThis is the same format as the offset, except that a\n\tleading '<code>+</code>' or '<code>-</code>' is not allowed.\n      </dd>\n      <dt><var>date</var></dt><dd>\n\ttakes one of the following forms:\n\t<dl>\n\t  <dt>J<var>n</var> (1&le;<var>n</var>&le;365)</dt><dd>\n\t    origin-1 day number not counting February 29\n\t  </dd>\n\t  <dt><var>n</var> (0&le;<var>n</var>&le;365)</dt><dd>\n\t    origin-0 day number counting February 29 if present\n\t  </dd>\n\t  <dt><code>M</code><var>m</var><code>.</code><var>n</var><code>.</code><var>d</var>\n\t    (0[Sunday]&le;<var>d</var>&le;6[Saturday], 1&le;<var>n</var>&le;5,\n\t    1&le;<var>m</var>&le;12)</dt><dd>\n\t    for the <var>d</var>th day of week <var>n</var> of\n\t    month <var>m</var> of the year, where week 1 is the first\n\t    week in which day <var>d</var> appears, and\n\t    '<code>5</code>' stands for the last week in which\n\t    day <var>d</var> appears (which may be either the 4th or\n\t    5th week).\n\t    Typically, this is the only useful form; the <var>n</var>\n\t    and <code>J</code><var>n</var> forms are rarely used.\n\t  </dd>\n\t</dl>\n      </dd>\n    </dl>\n\n    <p>\n    Here is an example proleptic <code>TZ</code> string for New\n    Zealand after 2007.\n    It says that standard time (<abbr>NZST</abbr>) is 12 hours ahead\n    of <abbr>UT</abbr>, and that daylight saving time\n    (<abbr>NZDT</abbr>) is observed from September's last Sunday at\n    02:00 until April's first Sunday at 03:00:\n    </p>\n\n    <pre><code>TZ='NZST-12NZDT,M9.5.0,M4.1.0/3'</code></pre>\n\n    <p>\n    This proleptic <code>TZ</code> string is hard to remember, and\n    mishandles some timestamps before 2008.\n    With this package you can use a geographical <code>TZ</code> instead:\n    </p>\n\n    <pre><code>TZ='Pacific/Auckland'</code></pre>\n  </li>\n</ul>\n\n<p>\nPOSIX.1-2017 also has the limitations of POSIX.1-2024,\ndiscussed in the next section.\n</p>\n\n<h3 id=\"POSIX.1-2024\">POSIX.1-2024 properties and limitations</h3>\n<p>\nPOSIX.1-2024 extends POSIX.1-2017 in the following significant ways:\n</p>\n<ul>\n  <li>\n    POSIX.1-2024 requires support for geographical <code>TZ</code>.\n    Earlier POSIX editions require support only for proleptic <code>TZ</code>.\n  </li>\n  <li>\n    POSIX.1-2024 requires <code>struct tm</code>\n    to have a <abbr>UT</abbr> offset member <code>tm_gmtoff</code>\n    and a time zone abbreviation member <code>tm_zone</code>.\n    Earlier POSIX editions lack this requirement.\n  </li>\n  <li>\n    DST transition times can range from &minus;167:59:59\n    to 167:59:59 instead of merely from 00:00:00 to 24:59:59.\n    This allows for proleptic TZ strings\n    like <code>\"&lt;-02&gt;2&lt;-01&gt;,M3.5.0/-1,M10.5.0/0\"</code>\n    where the transition time &minus;1:00 means 23:00 the previous day.\n  </li>\n</ul>\n<p>\nHowever POSIX.1-2024, like earlier POSIX editions, has some limitations:\n<ul>\n  <li>\n    The <code>TZ</code> environment variable is process-global, which\n    makes it hard to write efficient, thread-safe applications that\n    need access to multiple timezones.\n  </li>\n  <li>\n    In POSIX, there is no tamper-proof way for a process to learn the\n    system's best idea of local (wall clock) time.\n    This is important for applications that an administrator wants\n    used only at certain times &ndash; without regard to whether the\n    user has fiddled the\n    <code>TZ</code> environment variable.\n    While an administrator can \"do everything in <abbr>UT</abbr>\" to\n    get around the problem, doing so is inconvenient and precludes\n    handling daylight saving time shifts &ndash; as might be required to\n    limit phone calls to off-peak hours.\n  </li>\n  <li>\n    POSIX requires that <code>time_t</code> clock counts exclude leap\n    seconds.\n  </li>\n  <li>\n    POSIX does not define the <abbr>DST</abbr> transitions\n    for <code>TZ</code> values like\n    \"<code>EST5EDT</code>\".\n    Traditionally the current <abbr>US</abbr> <abbr>DST</abbr> rules\n    were used to interpret such values, but this meant that the\n    <abbr>US</abbr> <abbr>DST</abbr> rules were compiled into each\n    time conversion package, and when\n    <abbr>US</abbr> time conversion rules changed (as in the United\n    States in 1987 and again in 2007), all packages that\n    interpreted <code>TZ</code> values had to be updated\n    to ensure proper results.\n  </li>\n</ul>\n\n<h3 id=\"POSIX-extensions\">Extensions to POSIX in the\n<code><abbr>tz</abbr></code> code</h3>\n<p>\n  The <code><abbr>tz</abbr></code> code defines some properties\n  left unspecified by POSIX, and attempts to support some\n  extensions to POSIX.\n</p>\n\n<ul>\n  <li>\n    The <code><abbr>tz</abbr></code> code attempts to support all the\n    <code>time_t</code> implementations allowed by POSIX.\n    The <code>time_t</code> type represents a nonnegative count of seconds\n    since 1970-01-01 00:00:00 <abbr>UTC</abbr>, ignoring leap seconds.\n    In practice, <code>time_t</code> is usually a signed 64- or 32-bit\n    integer; 32-bit signed <code>time_t</code> values stop working after\n    2038-01-19 03:14:07 <abbr>UTC</abbr>, so new implementations these\n    days typically use a signed 64-bit integer.\n    Unsigned 32-bit integers are used on one or two platforms, and 36-bit\n    and 40-bit integers are also used occasionally.\n    Although earlier POSIX versions allowed <code>time_t</code> to be a\n    floating-point type, this was not supported by any practical system,\n    and POSIX.1-2013+ and the <code><abbr>tz</abbr></code> code both\n    require <code>time_t</code> to be an integer type.\n  </li>\n  <li>\n    <p>\n    If the <code>TZ</code> environment variable uses the geographical format,\n    it is used in generating\n    the name of a file from which time-related information is read.\n    The file's format is <dfn><abbr>TZif</abbr></dfn>,\n    a timezone information format that contains binary data; see\n    <a href=\"https://www.rfc-editor.org/rfc/9636\">Internet\n    <abbr>RFC</abbr> 9636</a>.\n    The daylight saving time rules to be used for a\n    particular timezone are encoded in the\n    <abbr>TZif</abbr> file; the format of the file allows <abbr>US</abbr>,\n    Australian, and other rules to be encoded, and\n    allows for situations where more than two time zone\n    abbreviations are used.\n    </p>\n    <p>\n    When the <code><abbr>tz</abbr></code> code was developed in the 1980s,\n    it was recognized that allowing the <code>TZ</code> environment\n    variable to take on values such as '<code>America/New_York</code>'\n    might cause \"old\" programs (that expect <code>TZ</code> to have a\n    certain format) to operate incorrectly; consideration was given to using\n    some other environment variable (for example, <code>TIMEZONE</code>)\n    to hold the string used to generate the <abbr>TZif</abbr> file's name.\n    In the end, however, it was decided to continue using\n    <code>TZ</code>: it is widely used for time zone purposes;\n    separately maintaining both <code>TZ</code>\n    and <code>TIMEZONE</code> seemed a nuisance; and systems where\n    \"new\" forms of <code>TZ</code> might cause problems can simply\n    use legacy <code>TZ</code> values such as \"<code>EST5EDT</code>\" which\n    can be used by \"new\" programs as well as by \"old\" programs that\n    assume pre-POSIX <code>TZ</code> values.\n    </p>\n  </li>\n  <li>\n    Functions <code>tzalloc</code>, <code>tzfree</code>,\n    <code>localtime_rz</code>, and <code>mktime_z</code> for\n    more-efficient thread-safe applications that need to use multiple\n    timezones.\n    The <code>tzalloc</code> and <code>tzfree</code> functions\n    allocate and free objects of type <code>timezone_t</code>,\n    and <code>localtime_rz</code> and <code>mktime_z</code> are\n    like <code>localtime_r</code> and <code>mktime</code> with an\n    extra <code>timezone_t</code> argument.\n    The functions were inspired by <a href=\"https://netbsd.org\">NetBSD</a>.\n  </li>\n  <li>\n    Negative <code>time_t</code> values are supported, on systems\n    where <code>time_t</code> is signed.\n  </li>\n  <li>\n    These functions can account for leap seconds;\n    see <a href=\"#leapsec\">Leap seconds</a> below.\n  </li>\n</ul>\n\n<h3 id=\"vestigial\">POSIX features no longer needed</h3>\n<p>\nPOSIX and <a href=\"https://en.wikipedia.org/wiki/ISO_C\"><abbr>ISO</abbr> C</a>\ndefine some <a href=\"https://en.wikipedia.org/wiki/API\"><abbr\ntitle=\"application programming interface\">API</abbr>s</a> that are vestigial:\nthey are not needed, and are relics of a too-simple model that does\nnot suffice to handle many real-world timestamps.\nAlthough the <code><abbr>tz</abbr></code> code supports these\nvestigial <abbr>API</abbr>s for backwards compatibility, they should\nbe avoided in portable applications.\nThe vestigial <abbr>API</abbr>s are:\n</p>\n<ul>\n  <li>\n    The POSIX <code>tzname</code> variable does not suffice and is no\n    longer needed.\n    It is planned to be removed in a future edition of POSIX.\n    To get a timestamp's time zone abbreviation, consult\n    the <code>tm_zone</code> member if available; otherwise,\n    use <code>strftime</code>'s <code>\"%Z\"</code> conversion\n    specification.\n  </li>\n  <li>\n    The POSIX <code>daylight</code> and <code>timezone</code>\n    variables do not suffice and are no longer needed.\n    They are planned to be removed in a future edition of POSIX.\n    To get a timestamp's <abbr>UT</abbr> offset, consult\n    the <code>tm_gmtoff</code> member if available; otherwise,\n    subtract values returned by <code>localtime</code>\n    and <code>gmtime</code> using the rules of the Gregorian calendar,\n    or use <code>strftime</code>'s <code>\"%z\"</code> conversion\n    specification if a string like <code>\"+0900\"</code> suffices.\n  </li>\n  <li>\n    The <code>tm_isdst</code> member is almost never needed and most of\n    its uses should be discouraged in favor of the abovementioned\n    <abbr>API</abbr>s.\n    It was intended as an index into the <code>tzname</code> variable,\n    but as mentioned previously that usage is obsolete.\n    Although it can still be used in arguments to\n    <code>mktime</code> to disambiguate timestamps near\n    a <abbr>DST</abbr> transition when the clock jumps back on\n    platforms lacking <code>tm_gmtoff</code>, this\n    disambiguation works only for proleptic <code>TZ</code> strings;\n    it does not work in general for geographical timezones,\n    such as when a location changes to a time zone with a\n    lesser <abbr>UT</abbr> offset.\n  </li>\n</ul>\n\n<h3 id=\"other-portability\">Other portability notes</h3>\n<ul>\n  <li>\n    The <a href=\"https://en.wikipedia.org/wiki/Version_7_Unix\">7th Edition\n    UNIX</a> <code>timezone</code> function is not present in this\n    package; it is impossible to reliably map <code>timezone</code>'s\n    arguments (a \"minutes west of <abbr>GMT</abbr>\" value and a\n    \"daylight saving time in effect\" flag) to a time zone\n    abbreviation, and we refuse to guess.\n    Programs that in the past used the <code>timezone</code> function\n    may now examine <code>localtime(&amp;clock)-&gt;tm_zone</code>\n    (if <code>TM_ZONE</code> is defined) or\n    use <code>strftime</code> with a <code>%Z</code> conversion specification\n    to learn the correct time\n    zone abbreviation to use.\n  </li>\n  <li>\n    The <a\n    href=\"https://en.wikipedia.org/wiki/History_of_the_Berkeley_Software_Distribution#4.2BSD\"><abbr>4.2BSD</abbr></a>\n    <code>gettimeofday</code> function is not\n    used in this package.\n    This formerly let users obtain the current <abbr>UTC</abbr> offset\n    and <abbr>DST</abbr> flag, but this functionality was removed in\n    later versions of <abbr>BSD</abbr>.\n  </li>\n  <li>\n    In <abbr>SVR2</abbr>, time conversion fails for near-minimum or\n    near-maximum <code>time_t</code> values when doing conversions\n    for places that do not use <abbr>UT</abbr>.\n    This package takes care to do these conversions correctly.\n    A comment in the source code tells how to get compatibly wrong\n    results.\n  </li>\n  <li>\n    The functions that are conditionally compiled\n    if <code>STD_INSPIRED</code> is nonzero should, at this point, be\n    looked on primarily as food for thought.\n    They are not in any sense \"standard compatible\" &ndash; some are\n    not, in fact, specified in <em>any</em> standard.\n    They do, however, represent responses of various authors to\n    standardization proposals.\n  </li>\n  <li>\n    Other time conversion proposals, in particular those supported by the\n    <a href=\"https://howardhinnant.github.io/date/tz.html\">Time Zone\n    Database Parser</a>, offer a wider selection of functions\n    that provide capabilities beyond those provided here.\n    The absence of such functions from this package is not meant to\n    discourage the development, standardization, or use of such\n    functions.\n    Rather, their absence reflects the decision to make this package\n    contain valid extensions to POSIX, to ensure its broad\n    acceptability.\n    If more powerful time conversion functions can be standardized, so\n    much the better.\n  </li>\n</ul>\n</section>\n\n<section>\n  <h2 id=\"stability\">Interface stability</h2>\n<p>\nThe <code><abbr>tz</abbr></code> code and data supply the following interfaces:\n</p>\n\n<ul>\n  <li>\n    A set of timezone names as per\n      \"<a href=\"#naming\">Timezone identifiers</a>\" above.\n  </li>\n  <li>\n    Library functions described in \"<a href=\"#functions\">Time and date\n      functions</a>\" above.\n  </li>\n  <li>\n    The programs <code>tzselect</code>, <code>zdump</code>,\n    and <code>zic</code>, documented in their man pages.\n  </li>\n  <li>\n    The format of <code>zic</code> input files, documented in\n    the <code>zic</code> man page.\n  </li>\n  <li>\n    The format of <code>zic</code> output files, documented in\n    the <code>tzfile</code> man page.\n  </li>\n  <li>\n    The format of zone table files, documented in <code>zone1970.tab</code>.\n  </li>\n  <li>\n    The format of the country code file, documented in <code>iso3166.tab</code>.\n  </li>\n  <li>\n    The version number of the code and data, as the first line of\n    the text file '<code>version</code>' in each release.\n  </li>\n</ul>\n\n<p>\nInterface changes in a release attempt to preserve compatibility with\nrecent releases.\nFor example, <code><abbr>tz</abbr></code> data files typically do not\nrely on recently added <code>zic</code> features, so that users can\nrun older <code>zic</code> versions to process newer data files.\n<a href=\"tz-link.html#download\">Downloading\nthe <code><abbr>tz</abbr></code> database</a> describes how releases\nare tagged and distributed.\n</p>\n\n<p>\nInterfaces not listed above are less stable.\nFor example, users should not rely on particular <abbr>UT</abbr>\noffsets or abbreviations for timestamps, as data entries are often\nbased on guesswork and these guesses may be corrected or improved.\n</p>\n\n<p>\nTimezone boundaries are not part of the stable interface.\nFor example, even though the <samp>Asia/Bangkok</samp> timezone\ncurrently includes Chang Mai, Hanoi, and Phnom Penh, this is not part\nof the stable interface and the timezone can split at any time.\nIf a calendar application records a future event in some location other\nthan Bangkok by putting \"<samp>Asia/Bangkok</samp>\" in the event's record,\nthe application should be robust in the presence of timezone splits\nbetween now and the future time.\n</p>\n</section>\n\n<section>\n  <h2 id=\"leapsec\">Leap seconds</h2>\n<p>\nLeap seconds were introduced in 1972 to accommodate the\ndifference between atomic time and the less regular rotation of the earth.\nUnfortunately they have caused so many problems with civil\ntimekeeping that there are\n<a href=\"https://www.bipm.org/en/cgpm-2022/resolution-4\">plans\nto discontinue them by 2035</a>.\nEven if these plans come to fruition, a record of leap seconds will still be\nneeded to resolve timestamps from 1972 through 2035,\nand there may also be a need to record whatever mechanism replaces them.\n</p>\n\n<p>\nThe <code><abbr>tz</abbr></code> code and data can account for leap seconds,\nthanks to code contributed by Bradley White.\nHowever, the leap second support of this package is rarely used directly\nbecause POSIX requires leap seconds to be excluded and many\nsoftware packages would mishandle leap seconds if they were present.\nInstead, leap seconds are more commonly handled by occasionally adjusting\nthe operating system kernel clock as described in\n<a href=\"tz-link.html#precision\">Precision timekeeping</a>,\nand this package by default installs a <samp>leapseconds</samp> file\ncommonly used by\n<a href=\"https://www.ntp.org\"><abbr title=\"Network Time Protocol\">NTP</abbr></a>\nsoftware that adjusts the kernel clock.\nHowever, kernel-clock twiddling approximates UTC only roughly,\nand systems needing more precise UTC can use this package's leap\nsecond support directly.\n</p>\n\n<p>\nThe directly supported mechanism assumes that <code>time_t</code>\ncounts of seconds since the POSIX epoch normally include leap seconds,\nas opposed to POSIX <code>time_t</code> counts which exclude leap seconds.\nThis modified timescale is converted to <abbr>UTC</abbr>\nat the same point that time zone and <abbr>DST</abbr>\nadjustments are applied &ndash;\nnamely, at calls to <code>localtime</code> and analogous functions &ndash;\nand the process is driven by leap second information\nstored in alternate versions of the <abbr>TZif</abbr> files.\nBecause a leap second adjustment may be needed even\nif no time zone correction is desired,\ncalls to <code>gmtime</code>-like functions\nalso need to consult a <abbr>TZif</abbr> file,\nconventionally named <samp><abbr>Etc/UTC</abbr></samp>\n(<samp><abbr>GMT</abbr></samp> in previous versions),\nto see whether leap second corrections are needed.\nTo convert an application's <code>time_t</code> timestamps to or from\nPOSIX <code>time_t</code> timestamps (for use when, say,\nembedding or interpreting timestamps in portable\n<a href=\"https://en.wikipedia.org/wiki/Tar_(computing)\"><code>tar</code></a>\nfiles),\nthe application can call the utility functions\n<code>time2posix</code> and <code>posix2time</code>\nincluded with this package.\n</p>\n\n<p>\nIf the POSIX-compatible <abbr>TZif</abbr> file set is installed\nin a directory whose basename is <samp>zoneinfo</samp>, the\nleap-second-aware file set is by default installed in a separate\ndirectory <samp>zoneinfo-leaps</samp>.\nAlthough each process can have its own time zone by setting\nits <code>TZ</code> environment variable, there is no support for some\nprocesses being leap-second aware while other processes are\nPOSIX-compatible; the leap-second choice is system-wide.\nSo if you configure your kernel to count leap seconds, you should also\ndiscard <samp>zoneinfo</samp> and rename <samp>zoneinfo-leaps</samp>\nto <samp>zoneinfo</samp>.\nAlternatively, you can install just one set of <abbr>TZif</abbr> files\nin the first place; see the <code>REDO</code> variable in this package's\n<a href=\"https://en.wikipedia.org/wiki/Makefile\">makefile</a>.\n</p>\n</section>\n\n<section>\n  <h2 id=\"calendar\">Calendrical issues</h2>\n<p>\nCalendrical issues are a bit out of scope for a time zone database,\nbut they indicate the sort of problems that we would run into if we\nextended the time zone database further into the past.\nAn excellent resource in this area is Edward M. Reingold\nand Nachum Dershowitz, <cite><a\nhref=\"https://www.cambridge.org/fr/academic/subjects/computer-science/computing-general-interest/calendrical-calculations-ultimate-edition-4th-edition\">Calendrical\nCalculations: The Ultimate Edition</a></cite>, Cambridge University Press (2018).\nOther information and sources are given in the file '<code>calendars</code>'\nin the <code><abbr>tz</abbr></code> distribution.\nThey sometimes disagree.\n</p>\n</section>\n\n<section>\n  <h2 id=\"planets\">Time and time zones off Earth</h2>\n<p>\nThe European Space Agency is <a\nhref='https://www.esa.int/Applications/Navigation/Telling_time_on_the_Moon'>considering</a>\nthe establishment of a reference timescale for the Moon, which has\ndays roughly equivalent to 29.5 Earth days, and where relativistic\neffects cause clocks to tick slightly faster than on Earth.\nAlso, <abbr title=\"National Aeronautics and Space Administration\">NASA</abbr>\nhas been <a\nhref='https://www.whitehouse.gov/wp-content/uploads/2024/04/Celestial-Time-Standardization-Policy.pdf'>ordered</a>\nto consider the establishment of Coordinated Lunar Time (<abbr>LTC</abbr>).\nIt is not yet known whether the US and European efforts will result in\nmultiple timescales on the Moon.\n</p>\n\n<p>\nSome people's work schedules have used\n<a href=\"https://en.wikipedia.org/wiki/Timekeeping_on_Mars\">Mars time</a>.\nJet Propulsion Laboratory (JPL) coordinators kept Mars time on\nand off during the\n<a href=\"https://en.wikipedia.org/wiki/Mars_Pathfinder\">Mars\nPathfinder</a> mission (1997).\nSome of their family members also adapted to Mars time.\nDozens of special Mars watches were built for JPL workers who kept\nMars time during the\n<a href=\"https://en.wikipedia.org/wiki/Mars_Exploration_Rover\">Mars\nExploration Rovers (MER)</a> mission (2004&ndash;2018).\nThese timepieces looked like normal Seikos and Citizens but were adjusted\nto use Mars seconds rather than terrestrial seconds, although\nunfortunately the adjusted watches were unreliable and appear to have\nhad only limited use.\n</p>\n\n<p>\nA Mars solar day is called a \"sol\" and has a mean period equal to\nabout 24 hours 39 minutes 35.244 seconds in terrestrial time.\nIt is divided into a conventional 24-hour clock, so each Mars second\nequals about 1.02749125 terrestrial seconds.\n(One MER worker noted, \"If I am working Mars hours, and Mars hours are\n2.5% more than Earth hours, shouldn't I get an extra 2.5% pay raise?\")\n</p>\n\n<p>\nThe <a href=\"https://en.wikipedia.org/wiki/Prime_meridian\">prime\nmeridian</a> of Mars goes through the center of the crater\n<a href=\"https://en.wikipedia.org/wiki/Airy-0\">Airy-0</a>, named in\nhonor of the British astronomer who built the Greenwich telescope that\ndefines Earth's prime meridian.\nMean solar time on the Mars prime meridian is\ncalled Mars Coordinated Time (<abbr>MTC</abbr>).\n</p>\n\n<p>\nEach landed mission on Mars has adopted a different reference for\nsolar timekeeping, so there is no real standard for Mars time zones.\nFor example, the MER mission defined two time zones \"Local\nSolar Time A\" and \"Local Solar Time B\" for its two missions, each zone\ndesigned so that its time equals local true solar time at\napproximately the middle of the nominal mission.\nThe A and B zones differ enough so that an MER worker assigned to\nthe A zone might suffer \"Mars lag\" when switching to work in the B zone.\nSuch a \"time zone\" is not particularly suited for any application\nother than the mission itself.\n</p>\n\n<p>\nMany calendars have been proposed for Mars, but none have achieved\nwide acceptance.\nAstronomers often use Mars Sol Date (<abbr>MSD</abbr>) which is a\nsequential count of Mars solar days elapsed since about 1873-12-29\n12:00 <abbr>GMT</abbr>.\n</p>\n\n<p>\nIn our solar system, Mars is the planet with time and calendar most\nlike Earth's.\nOn other planets, Sun-based time and calendars would work quite\ndifferently.\nFor example, although Mercury's\n<a href=\"https://en.wikipedia.org/wiki/Rotation_period\">sidereal\nrotation period</a> is 58.646 Earth days, Mercury revolves around the\nSun so rapidly that an observer on Mercury's equator would see a\nsunrise only every 175.97 Earth days, i.e., a Mercury year is 0.5 of a\nMercury day.\nVenus is more complicated, partly because its rotation is slightly\n<a href=\"https://en.wikipedia.org/wiki/Retrograde_motion\">retrograde</a>:\nits year is 1.92 of its days.\nGas giants like Jupiter are trickier still, as their polar and\nequatorial regions rotate at different rates, so that the length of a\nday depends on latitude.\nThis effect is most pronounced on Neptune, where the day is about 12\nhours at the poles and 18 hours at the equator.\n</p>\n\n<p>\nAlthough the <code><abbr>tz</abbr></code> database does not support\ntime on other planets, it is documented here in the hopes that support\nwill be added eventually.\n</p>\n\n<p>\nSources for time on other planets:\n</p>\n\n<ul>\n  <li>\n    Michael Allison and Robert Schmunk,\n    \"<a href=\"https://www.giss.nasa.gov/tools/mars24/help/notes.html\">Technical\n      Notes on Mars Solar Time as Adopted by the Mars24 Sunclock</a>\"\n    (2020-03-08).\n  </li>\n  <li>\n    Zara Mirmalek,\n    <em><a href=\"https://mitpress.mit.edu/books/making-time-mars\">Making\n\tTime on Mars</a></em>, MIT Press (March 2020), ISBN 978-0262043854.\n  </li>\n  <li>\n    Jia-Rui Chong,\n    \"<a href=\"https://www.latimes.com/archives/la-xpm-2004-jan-14-sci-marstime14-story.html\">Workdays\n    Fit for a Martian</a>\", <cite>Los Angeles Times</cite>\n    (2004-01-14), pp A1, A20&ndash;A21.\n  </li>\n  <li>\n    Tom Chmielewski,\n    \"<a href=\"https://www.theatlantic.com/technology/archive/2015/02/jet-lag-is-worse-on-mars/386033/\">Jet\n    Lag Is Worse on Mars</a>\", <cite>The Atlantic</cite> (2015-02-26)\n  </li>\n  <li>\n    Matt Williams,\n    \"<a href=\"https://www.universetoday.com/37481/days-of-the-planets/\">How\n    long is a day on the other planets of the solar system?</a>\"\n    (2016-01-20).\n  </li>\n</ul>\n</section>\n\n<footer>\n  <hr>\n  This file is in the public domain, so clarified as of 2009-05-17 by\n  Arthur David Olson.\n</footer>\n</body>\n</html>\n"
        },
        {
          "name": "time2posix.3",
          "type": "blob",
          "size": 3.359375,
          "content": ".\\\" This file is in the public domain, so clarified as of\n.\\\" 1996-06-05 by Arthur David Olson.\n.TH time2posix 3 \"\" \"Time Zone Database\"\n.SH NAME\ntime2posix, posix2time \\- convert seconds since the Epoch\n.SH SYNOPSIS\n.nf\n.B #include <time.h>\n.PP\n.B time_t time2posix(time_t t);\n.PP\n.B time_t posix2time(time_t t);\n.PP\n.B cc ... \\-ltz\n.fi\n.SH DESCRIPTION\n.ie '\\(en'' .ds en \\-\n.el .ds en \\(en\n.ie '\\(lq'' .ds lq \\&\"\\\"\n.el .ds lq \\(lq\\\"\n.ie '\\(rq'' .ds rq \\&\"\\\"\n.el .ds rq \\(rq\\\"\n.de q\n\\\\$3\\*(lq\\\\$1\\*(rq\\\\$2\n..\nIEEE Standard 1003.1\n(POSIX)\nrequires the time_t value 536457599 to stand for 1986-12-31 23:59:59 UTC.\nThis effectively implies that POSIX time_t values cannot include leap\nseconds and,\ntherefore,\nthat the system time must be adjusted as each leap occurs.\n.PP\nIf the time package is configured with leap-second support\nenabled,\nhowever,\nno such adjustment is needed and\ntime_t values continue to increase over leap events\n(as a true\n.q \"seconds since...\\&\"\nvalue).\nThis means that these values will differ from those required by POSIX\nby the net number of leap seconds inserted since the Epoch.\n.PP\nTypically this is not a problem as the type time_t is intended\nto be\n(mostly)\nopaque \\*(en time_t values should only be obtained-from and\npassed-to functions such as\n.BR time(2) ,\n.BR localtime(3) ,\n.BR mktime(3) ,\nand\n.BR difftime(3) .\nHowever,\nPOSIX gives an arithmetic\nexpression for directly computing a time_t value from a given date/time,\nand the same relationship is assumed by some\n(usually older)\napplications.\nAny programs creating/dissecting time_t values\nusing such a relationship will typically not handle intervals\nover leap seconds correctly.\n.PP\nThe\n.B time2posix\nand\n.B posix2time\nfunctions are provided to address this time_t mismatch by converting\nbetween local time_t values and their POSIX equivalents.\nThis is done by accounting for the number of time-base changes that\nwould have taken place on a POSIX system as leap seconds were inserted\nor deleted.\nThese converted values can then be used in lieu of correcting the older\napplications,\nor when communicating with POSIX-compliant systems.\n.PP\nThe\n.B time2posix\nfunction\nis single-valued.\nThat is,\nevery local time_t\ncorresponds to a single POSIX time_t.\nThe\n.B posix2time\nfunction\nis less well-behaved:\nfor a positive leap second hit the result is not unique,\nand for a negative leap second hit the corresponding\nPOSIX time_t doesn't exist so an adjacent value is returned.\nBoth of these are good indicators of the inferiority of the\nPOSIX representation.\n.PP\nThe following table summarizes the relationship between a time\nT and its conversion to,\nand back from,\nthe POSIX representation over the leap second inserted at the end of June,\n1993.\n.nf\n.ta \\w'93/06/30\\0'u +\\w'23:59:59\\0'u +\\w'A+0\\0'u +\\w'X=time2posix(T)\\0'u\nDATE\tTIME\tT\tX=time2posix(T)\tposix2time(X)\n93/06/30\t23:59:59\tA+0\tB+0\tA+0\n93/06/30\t23:59:60\tA+1\tB+1\tA+1 or A+2\n93/07/01\t00:00:00\tA+2\tB+1\tA+1 or A+2\n93/07/01\t00:00:01\tA+3\tB+2\tA+3\n\nA leap second deletion would look like...\n\nDATE\tTIME\tT\tX=time2posix(T)\tposix2time(X)\n??/06/30\t23:59:58\tA+0\tB+0\tA+0\n??/07/01\t00:00:00\tA+1\tB+2\tA+1\n??/07/01\t00:00:01\tA+2\tB+3\tA+2\n.sp\n.ce\n\t[Note: posix2time(B+1) => A+0 or A+1]\n.fi\n.PP\nIf leap-second support is not enabled,\nlocal time_t and\nPOSIX time_t values are equivalent,\nand both\n.B time2posix\nand\n.B posix2time\ndegenerate to the identity function.\n.SH SEE ALSO\ndifftime(3),\nlocaltime(3),\nmktime(3),\ntime(2)\n"
        },
        {
          "name": "tz-art.html",
          "type": "blob",
          "size": 23.5634765625,
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<meta charset=\"UTF-8\">\n<title>Time and the Arts</title>\n</head>\n<body>\n<h1>Time and the Arts</h1>\n<h2>Documentaries</h2>\n<ul>\n<li>\n\"<a href=\"https://www.youtube.com/watch?v=84aWtseb2-4\">Daylight\nSaving Time Explained</a>\" (2011; 6:39) lightly covers daylight saving\ntime's theory, history, pros and cons. Among other things, it explains\nArizona's daylight-saving enclaves quite well.</li>\n<li>\n\"<a href=\"https://www.youtube.com/watch?v=-5wpm-gesOY\">The Problem\nwith Time &amp; Timezones &ndash; Computerphile</a>\" (2013; 10:12) delves\ninto problems that programmers have with timekeeping.</li>\n<li>\n\"<a href=\"https://www.rferl.org/a/28375932.html\">All The Time In The World:\nExplaining The Mysteries Of Time Zones</a>\" (2017; 2:15)\nbriefly says why France has more time zones than Russia.\n<li>\n\"<a href=\"https://www.youtube.com/watch?v=yRz-Dl60Lfc\">Why Denmark used to be\n.04 seconds behind the world</a>\" (2019; 6:29) explains why the United Kingdom\n&mdash; and, once, Denmark &mdash; haven't always exactly followed their own\nlaws about civil time.\n<li>\n\"About Time\" (1962; 59 minutes) is part of the\nBell Science extravaganza, with Frank Baxter, Richard Deacon, and Les Tremayne.\nIts advisor was Richard Feynman, and it was voiced by Mel Blanc.\n(<a href=\"https://www.imdb.com/title/tt0154110/\">IMDb entry</a>.)</li>\n</ul>\n<h2>Movies</h2>\n<ul>\n<li>\nIn the 1946 movie <em>A Matter of Life and Death</em>\n(U.S. title <em>Stairway to Heaven</em>)\nthere is a reference to British Double Summer Time.\nThe time does not play a large part in the plot;\nit's just a passing reference to the time when one of the\ncharacters was supposed to have died (but didn't).\n(<a href=\"https://www.imdb.com/title/tt0038733/\">IMDb entry.</a>)\n(Dave Cantor)\n<li>\nThe 1953 railway comedy movie <em>The Titfield Thunderbolt</em> includes a\nplay on words on British Double Summer Time. Valentine's wife wants\nhim to leave the pub and asks him, \"Do you know what time it is?\"\nAnd he, happy where he is, replies: \"Yes, my love. Summer double time.\"\n(<a href=\"https://www.imdb.com/title/tt0046436/\">IMDb entry.</a>)\n(Mark Brader, 2009-10-02)\n</li>\n<li>\nThe premise of the 1999 caper movie <em>Entrapment</em> involves computers\nin an international banking network being shut down briefly at\nmidnight in each time zone to avoid any problems at the transition\nfrom the year 1999 to 2000 in that zone. (Hmmmm.) If this shutdown\nis extended by 10 seconds, it will create a one-time opportunity for\na gigantic computerized theft. To achieve this, at one location the\ncrooks interfere with the microwave system supplying time signals to\nthe computer, advancing the time by 0.1 second each minute over the\nlast hour of 1999. (So this movie teaches us that 0.1 &times; 60 = 10.)\n(<a href=\"https://www.imdb.com/title/tt0137494/\">IMDb entry.</a>)\n(Mark Brader, 2009-10-02)\n</li>\n<li>\nOne mustn't forget the\n<a href=\"https://www.youtube.com/watch?v=k4EUTMPuvHo\">trailer</a>\n(2014; 2:23) for the movie <em>Daylight Saving</em>.\n</li>\n</ul>\n<h2>TV episodes</h2>\n<ul>\n<li>\nAn episode of <em>The Adventures of Superman</em> entitled \"The Mysterious\nCube,\" first aired 1958-02-24, had Superman convincing the controllers\nof the Arlington Time Signal to broadcast ahead of actual time;\ndoing so got a crook trying to be declared dead to\nemerge a bit too early from the titular enclosure.\n(<a href=\"https://www.imdb.com/title/tt0506628/\">IMDb entry</a>.)\n</li>\n<li>\n\"<a href=\"https://en.wikipedia.org/wiki/The_Chimes_of_Big_Ben\">The Chimes\nof Big Ben</a>\", <em>The Prisoner</em>, episode 2, ITC, 1967-10-06.\nOur protagonist tumbles to\nthe fraudulent nature of a Poland-to-England escape upon hearing \"Big\nBen\" chiming on Polish local time.\n(<a href=\"https://www.imdb.com/title/tt0679185/\">IMDb entry.</a>)\n</li>\n<li>\n\"The Susie\", <em>Seinfeld</em>, season 8, episode 15, NBC, 1997-02-13.\nKramer decides that daylight saving time\nisn't coming fast enough, so he sets his watch ahead an hour.\n</li>\n<li>\n\"20 Hours in America\", <em>The West Wing</em>, season 4, episodes 1&ndash;2,\n2002-09-25, contained a <a\nhref=\"https://www.youtube.com/watch?v=-J1NHzQ1sgc\">scene</a> that\nsaw White House staffers stranded in Indiana; they thought they had time to\ncatch Air Force One but were done in by intra-Indiana local time changes.\n</li>\n<li>\n\"In what time zone would you find New York City?\" was a $200 question on\nthe 1999-11-13 United States airing of <em>Who Wants to Be a Millionaire?</em>,\nand \"In 1883, what industry led the movement to divide the U.S. into four time\nzones?\" was a $32,000 question on the 2001-05-23 United States airing of\nthe same show. At this rate, the million-dollar time-zone\nquestion should have been asked 2002-06-04.\n</li>\n<li>\nA private jet's mid-flight change of time zones distorts Alison Dubois'\npremonition in the \"We Had a Dream\" episode of <em>Medium</em>\n(originally aired 2007-02-28).\n</li>\n<li>\nA criminal's failure to account for the start of daylight saving is pivotal\nin \"<a href=\"https://monk.fandom.com/wiki/Mr._Monk_and_the_Rapper\">Mr. Monk\nand the Rapper</a>\" (first aired 2007-07-20).\n</li>\n<li>\nIn the <em>30 Rock</em> episode \"Anna Howard Shaw Day\"\n(first broadcast 2010-02-11),\nJack Donaghy's date realizes that a Geneva-to-New-York business phone call\nreceived in the evening must be fake given the difference in local times.\n</li>\n<li>\nIn the \"Run by the Monkeys\" episode of <em>Da Vinci's Inquest</em>\n(first broadcast 2002-11-17),\na witness in a five-year-old fire case realizes they may not have set\ntheir clock back when daylight saving ended on the day of the fire,\nintroducing the possibility of an hour when arson might have occurred.\n</li>\n<li>\nIn \"The Todd Couple\" episode of <em>Outsourced</em> (first aired 2011-02-10),\nManmeet sets up Valentine's Day teledates for 6:00 and 9:00pm;\nsince one is with a New Yorker and the other with a San Franciscan,\nhilarity ensues.\n(Never mind that this should be 7:30am in Mumbai, yet for some reason the show\nproceeds as though it's also mid-evening there.)\n</li>\n<li>\nIn the \"14 Days to Go\"/\"T Minus...\" episode of\n<em>You, Me and the Apocalypse</em>\n(first aired 2015-11-11 in the UK, 2016-03-10 in the US),\nthe success of a mission to deal with a comet\nhinges on whether or not Russia observes daylight saving time.\n(In the US,\nthe episode first aired in the week before the switch to <abbr>DST</abbr>.)\n</li>\n<li>\n\"The Lost Hour\", <em>Eerie, Indiana</em>, episode 10, NBC, 1991-12-01.\nDespite Indiana's then-lack of <abbr>DST</abbr>,\nMarshall changes his clock with unusual consequences.\nSee \"<a\nhref=\"https://www.avclub.com/eerie-indiana-was-a-few-dimensions-ahead-of-its-time-1819833380\"><em>Eerie,\nIndiana</em> was a few dimensions ahead of its time</a>\".\n</li>\n<li>\n\"Time Tunnel\", <em>The Adventures of Pete &amp; Pete</em>, season 2, episode 5,\nNickelodeon, 1994-10-23.\nThe two Petes travel back in time an hour\non the day that <abbr>DST</abbr> ends.\n</li>\n<li>\n\"King-Size Homer\", <em>The Simpsons</em>, episode 135, Fox, 1995-11-05.\nHomer, working from home, remarks \"8:58, first\ntime I've ever been early for work. Except for all those daylight\nsavings days. Lousy farmers.\"\n</li>\n<li>\n<em>Last Week Tonight with John Oliver</em>, season 2, episode 5, 2015-03-08,\nasked, \"<a href=\"https://www.youtube.com/watch?v=br0NW9ufUUw\">Daylight Saving\nTime &ndash; How Is This Still A Thing?</a>\"\n</li>\n<li>\n\"Tracks\", <em>The Good Wife</em>, season 7, episode 12,\nCBS, 2016-01-17.\nThe applicability of a contract hinges on the\ntime zone associated with a video timestamp.\n</li>\n<li>\n\"Justice\", <em>Veep</em>, season 6, episode 4, HBO, 2017-05-07.\nJonah's inability to understand <abbr>DST</abbr> ends up impressing a wealthy\nbacker who sets him up for a 2020 presidential run.\n</li>\n</ul>\n<h2>Books, plays, and magazines</h2>\n<ul>\n<li>\nJules Verne, <em>Around the World in Eighty Days</em>\n(<em>Le tour du monde en quatre-vingts jours</em>), 1873.\nWall-clock time plays a central role in the plot.\nEuropean readers of the 1870s clearly held the U.S. press in\ndeep contempt; the protagonists cross the U.S. without once\nreading a paper.\nAvailable versions include\n<a href=\"https://www.gutenberg.org/ebooks/103\">an English\ntranslation</a>, and\n<a href=\"https://fourmilab.ch/etexts/www/tdm80j\">the original French</a>\n\"with illustrations from the original 1873 French-language edition\".\n</li>\n<li>\nNick Enright, <em>Daylight Saving</em>, 1989.\nA fast-paced comedy about love and loneliness as the clocks turn back.\n</li>\n<li>\nUmberto Eco,\n<a href=\"https://en.wikipedia.org/wiki/The_Island_of_the_Day_Before\"><em>The\nIsland of the Day Before</em></a>\n(<em>L'isola del giorno prima</em>), 1994.\n\"...the story of a 17th century Italian nobleman trapped near an island\non the International Date Line. Time and time zones play an integral\npart in the novel.\" (Paul Eggert, 2006-04-22)\n</li>\n<li>\nJohn Dunning, <a\nhref=\"https://www.simonandschuster.com/books/Two-OClock-Eastern-Wartime/John-Dunning/9781439171530\"><em>Two\nO'Clock, Eastern Wartime</em></a>, 2001.\nMystery, history, daylight saving time, and old-time radio.\n</li>\n<li>\nSurrealist artist Guy Billout's work \"Date Line\" appeared on page 103\nof the 1999-11 <em>Atlantic Monthly</em>.\n</li>\n<li>\n\"Gloom, Gloom, Go Away\" by Walter Kirn appeared on page 106 of <em>Time</em>\nmagazine's 2002-11-11 issue; among other things, it proposed\nyear-round <abbr>DST</abbr> as a way of lessening wintertime despair.\n</li>\n<li>\nCory Doctorow, <a\nhref=\"https://craphound.com/est/download/\"><em>Eastern Standard Tribe</em></a>,\n2004. The world splinters into tribes characterized by their timezones.\n</li>\n</ul>\n<h2>Music</h2>\n<ul>\n<li>\nRecordings of \"Save That Time,\" Russ Long, Serrob Publishing, BMI:\n<ul>\n<li>\nKarrin Allyson, <em>I Didn't Know About You</em> (1993), track 11, 3:44.\nConcord Jazz CCD-4543.\nKarrin Allyson, vocal;\nRuss Long, piano;\nGerald Spaits, bass;\nTodd Strait, drums.\nCD notes \"additional lyric by Karrin Allyson;\narranged by Russ Long and Karrin Allyson\".\nADO &#x2605;,\n<a href=\"https://www.allmusic.com/album/i-didnt-know-about-you-mw0000618657\">AMG</a>\n&#x2605;&#x2605;&#x2605;&#x2605;, Penguin &#x2605;&#x2605;&#x2605;&#x2BEA;.\n</li>\n<li>\nKevin Mahogany, <em>Double Rainbow</em> (1993), track 3, 6:27. Enja ENJ-7097 2.\nKevin Mahogany, vocal;\nKenny Barron, piano;\nRay Drummond, bass;\nRalph Moore, tenor saxophone;\nLewis Nash, drums.\nADO &#x2605;&#x2BEA;,\n<a href=\"https://www.allmusic.com/album/double-rainbow-mw0000620371\">AMG</a>\n&#x2605;&#x2605;&#x2605;, Penguin &#x2605;&#x2605;&#x2605;.\n</li>\n<li>\nJoe Williams, <em>Here's to Life</em> (1994), track 7, 3:58.\nTelarc Jazz CD-83357.\nJoe Williams, vocal; The Robert Farnon [39 piece] Orchestra.\nAlso in a 3-CD package \"Triple Play\", Telarc CD-83461.\nADO &#x2022;,\n<a href=\"https://www.allmusic.com/album/heres-to-life-mw0000623648\">AMG</a>\n&#x2605;&#x2605;, Penguin &#x2605;&#x2605;&#x2605;.\n</li>\n<li>\nCharles Fambrough, <em>Keeper of the Spirit</em> (1995), track 7, 7:07.\nAudioQuest AQ-CD1033.\nCharles Fambrough, bass;\nJoel Levine, tenor recorder;\nEdward Simon, piano;\nLenny White, drums;\nMarion Simon, percussion.\nADO &#x2605;,\n<a href=\"https://www.allmusic.com/album/keeper-of-the-spirit-mw0000176559\">AMG</a>\nunrated, Penguin &#x2605;&#x2605;&#x2605;.\n</ul>\n</li>\n<li>\nHolly Cole Trio, Blame It On My Youth (1992). Manhattan CDP 7 97349 2, 37:45.\nHolly Cole, voice;\nAaron Davis, piano;\nDavid Piltch, string bass.\nLyrical reference to \"Eastern Standard Time\" in\nTom Waits's \"Purple Avenue\".\nADO &#x2605;&#x2605;&#x2BEA;,\n<a href=\"https://www.allmusic.com/album/blame-it-on-my-youth-mw0000274303\">AMG</a>\n&#x2605;&#x2605;&#x2605;, Penguin unrated.\n</li>\n<li>\nMilt Hinton,\n<a href=\"https://chiaroscurojazz.org/catalog/old-man-time-2-cd-set/\"><em>Old\nMan Time</em></a> (1990).\nChiaroscuro CR(D) 310, 149:38 (two CDs).\nMilt Hinton, bass;\nDoc Cheatham, Dizzy Gillespie, Clark Terry, trumpet;\nAl Grey, trombone;\nEddie Barefield, Joe Camel (Flip Phillips), Buddy Tate,\nclarinet and saxophone;\nJohn Bunch, Red Richards, Norman Simmons, Derek Smith,\nRalph Sutton, piano;\nDanny Barker, Al Casey, guitar;\nGus Johnson, Gerryck King, Bob Rosengarden, Jackie Williams,\ndrums;\nLionel Hampton, vibraphone;\nCab Calloway, Joe Williams, vocal;\nBuck Clayton, arrangements.\nTunes include \"Old Man Time\", \"Time After Time\",\n\"Sometimes I'm Happy\",\n\"A Hot Time in the Old Town Tonight\",\n\"Four or Five Times\", \"Now's the Time\",\n\"Time on My Hands\", \"This Time It's Us\",\nand \"Good Time Charlie\".\nADO &#x2605;&#x2605;&#x2605;,\n<a href=\"https://www.allmusic.com/album/old-man-time-mw0000269353\">AMG</a>\n&#x2605;&#x2605;&#x2605;&#x2605;&#x2BEA;, Penguin &#x2605;&#x2605;&#x2605;.\n</li>\n<li>\nAlan Broadbent, <em>Pacific Standard Time</em> (1995).\nConcord Jazz CCD-4664, 62:42.\nAlan Broadbent, piano;\nPutter Smith, Bass;\nFrank Gibson, Jr., drums.\nThe CD cover features an analemma for equation-of-time fans.\nADO &#x2605;,\n<a href=\"https://www.allmusic.com/album/pacific-standard-time-mw0000645433\">AMG</a>\n&#x2605;&#x2605;&#x2605;&#x2605;, Penguin &#x2605;&#x2605;&#x2605;&#x2BEA;.\n</li>\n<li>\nAnthony Braxton/Richard Teitelbaum, <em>Silence/Time Zones</em> (1996).\nBlack Lion BLCD 760221, 72:58.\nAnthony Braxton, sopranino and alto saxophones,\ncontrebasse clarinet, miscellaneous instruments;\nLeo Smith, trumpet and miscellaneous instruments;\nLeroy Jenkins, violin and miscellaneous instruments;\nRichard Teitelbaum, modular moog and micromoog synthesizer.\nADO &#x2022;,\n<a href=\"https://www.allmusic.com/album/silence-time-zones-mw0000595735\">AMG</a>\n&#x2605;&#x2605;&#x2605;&#x2605;.\n</li>\n<li>\nCharles Gayle, <em>Time Zones</em> (2006). Tompkins Square TSQ2839, 49:06.\nCharles Gayle, piano.\nADO &#x2605;,\n<a href=\"https://www.allmusic.com/album/time-zones-mw0000349642\">AMG</a>\n&#x2605;&#x2605;&#x2605;&#x2605;&#x2BEA;.\n</li>\n<li>\nThe Get Up Kids, <em>Eudora</em> (2001). Vagrant 357, 65:12.\nIncludes the song \"Central Standard Time.\"\nThanks to Colin Bowern for this information.\n<a href=\"https://www.allmusic.com/album/eudora-mw0000592063\">AMG</a>\n&#x2605;&#x2605;&#x2BEA;.\n</li>\n<li>\nColdplay, \"Clocks\" (2003).\nCapitol 52608, 4:13.\nWon the 2004 Record of the Year honor at the\nGrammy Awards. Co-written and performed by Chris Martin,\ngreat-great-grandson of <abbr>DST</abbr> inventor William Willett.\nThe song's first line is \"Lights go out and I can't be saved\".\n</li>\n<li>\nJaime Guevara, \"<a\nhref=\"https://www.youtube.com/watch?v=ZfN4Fe_A50U\">Qu&eacute;\nhora es</a>\" (1993), 3:04.\nThe song protested \"Sixto Hour\" in Ecuador\n(1992&ndash;3). Its lyrics include \"Amanec&iacute;a en mitad de la noche, los\nguaguas iban a clase sin sol\" (\"It was dawning in the middle of the\nnight, the buses went to class without sun\").\n</li>\n<li>\nIrving Kahal and Harry Richman,\n\"There Ought to be a Moonlight Saving Time\" (1931).\nThis musical standard was a No. 1 hit for Guy Lombardo\nin 1931, and was also performed by Maurice Chevalier, Blossom Dearie\nand many others. The phrase \"Moonlight saving time\" also appears in\nthe 1995 country song \"Not Enough Hours in the Night\" written by Aaron\nBarker, Kim Williams and Rob Harbin and performed by Doug\nSupernaw.\n</li>\n<li>\nThe Microscopic Septet, <em>Lobster Leaps In</em> (2008).\nCuneiform 272, 73:05.\nIncludes the song \"Twilight Time Zone.\"\nADO &#x2605;&#x2605;,\n<a href=\"https://www.allmusic.com/album/lobster-leaps-in-mw0000794929\">AMG</a>\n&#x2605;&#x2605;&#x2605;&#x2BEA;.\n</li>\n<li>\nBob Dylan, <em>The Times They Are a-Changin'</em> (1964).\nColumbia CK-8905, 45:36.\nADO &#x2605;&#x2BEA;,\n<a href=\"https://www.allmusic.com/album/the-times-they-a-changin-mw0000202344\">AMG</a>\n&#x2605;&#x2605;&#x2605;&#x2605;&#x2BEA;.\nThe title song is also available on \"Bob Dylan's Greatest Hits\" and \"The Essential Bob Dylan.\"\n</li>\n<li>\nLuciana Souza, <em>Tide</em> (2009). Universal Jazz France B0012688-02, 42:31.\nADO &#x2605;&#x2605;&#x2BEA;,\n<a href=\"https://www.allmusic.com/album/tide-mw0000815692\">AMG</a>\n&#x2605;&#x2605;&#x2605;&#x2BEA;.\nIncludes the song \"Fire and Wood\" with the lyric\n\"The clocks were turned back you remember/Think it's still November.\"\n</li>\n<li>\nKen Nordine, <em>You're Getting Better: The Word Jazz Dot Masters</em> (2005).\nGeffen B0005171-02, 156:22.\nADO &#x2605;,\n<a href=\"https://www.allmusic.com/album/youre-getting-better-the-word-jazz-dot-masters-mw0000736197\">AMG</a>\n&#x2605;&#x2605;&#x2605;&#x2605;&#x2BEA;.\nIncludes the piece \"What Time Is It\"\n(\"He knew what time it was everywhere...that counted\").\n</li>\n<li>\nChicago, <em>Chicago Transit Authority</em> (1969). Columbia 64409, 1:16:20.\n<a href=\"https://www.allmusic.com/album/chicago-transit-authority-mw0000189364\">AMG</a> &#x2605;&#x2605;&#x2605;&#x2605;.\nIncludes the song \"Does Anybody Really Know What Time It Is?\".\n</li>\n<li>\nEmanuele Arciuli,\n<a href=\"https://neumarecords.org/ols/products/william-duckworth-the-time-curve-preludes\"><em>The Time Curve Preludes</em></a> (2023).\nNeuma 174, 44:46.\nThe title piece, composed by\n<a href=\"https://en.wikipedia.org/wiki/William_Duckworth_(composer)\">William\nDuckworth</a>, is the first work of postminimal music.\nUnlike minimalism, it does not assume that the listener has plenty of time.\n</li>\n</ul>\n<h2>Comics</h2>\n<ul>\n<li>\nThe webcomic <em>xkcd</em> has the strips\n\"<a href=\"https://xkcd.com/673/\">The Sun</a>\" (2009-12-09),\n\"<a href=\"https://xkcd.com/1655/\">Doomsday Clock</a>\" (2016-03-14) and\n\"<a href=\"https://xkcd.com/2549/\">Edge Cake</a>\" (2021-12-01),\nalong with the panels\n\"<a href=\"https://xkcd.com/448/\">Good Morning</a>\" (2008-07-11),\n\"<a href=\"https://xkcd.com/1017/\">Backward in Time</a>\" (2012-02-14),\n\"<a href=\"https://xkcd.com/1061/\">EST</a>\" (2012-05-28),\n\"<a href=\"https://xkcd.com/1179/\">ISO 8601</a>\" (2013-02-27),\n\"<a href=\"https://xkcd.com/1335/\">Now</a>\" (2014-02-26),\n\"<a href=\"https://xkcd.com/1799/\">Bad Map Projection: Time Zones</a>\"\n(2017-02-15),\n\"<a href=\"https://xkcd.com/1883/\">Supervillain Plan</a>\" (2017-08-30),\n\"<a href=\"https://xkcd.com/2050/\">6/6 Time</a>\" (2018-09-24),\n\"<a href=\"https://xkcd.com/2092/\">Consensus New Year</a>\" (2018-12-31),\n\"<a href=\"https://xkcd.com/2266/\">Leap Smearing</a>\" (2020-02-10),\n\"<a href=\"https://xkcd.com/2594/\">Consensus Time</a>\" (2022-03-16),\n\"<a href=\"https://xkcd.com/2846/\">Daylight Saving Choice</a>\" (2023-10-25),\n\"<a href=\"https://xkcd.com/2854/\">Date Line</a>\" (2023-11-13),\nand \"<a href=\"https://xkcd.com/2867/\">DateTime</a>\" (2023-12-13).\nThe related book <em>What If?</em> has an entry\n\"<a href=\"https://what-if.xkcd.com/26/\">Leap Seconds</a>\" (2012-12-31).\n</li>\n<li>\nPig kills time in <a\nhref=\"https://www.gocomics.com/pearlsbeforeswine/2016/11/06\"><em>Pearls\nBefore Swine</em> (2016-11-06)</a>.\n</li>\n<li>\nStonehenge is abandoned in <a\nhref=\"https://www.gocomics.com/nonsequitur/2017/03/12\"><em>Non Sequitur</em>\n(2017-03-12)</a>.\n</li>\n<li>\nCaulfield proposes changing clocks just once a year in\n<a href=\"https://www.gocomics.com/frazz/2023/12/31\"><em>Frazz</em>\n(2023-12-31)</a>, while Peter and Jason go multi-lingual and -zonal in\n<a href=\"https://www.gocomics.com/foxtrot/2023/12/31\"><em>FoxTrot</em>\n(the same day)</a>.\n</li>\n<li>\nPeppermint Patty: \"What if the world comes to an end tonight, Marcie?\"\n<br>\nMarcie: \"I promise there'll be a tomorrow, sir ... in fact,\nit's already tomorrow in Australia!\"\n<br>\n(Charles M. Schulz, <a href=\"https://www.gocomics.com/peanuts/1980/06/13\"><em>Peanuts</em>, 1980-06-13</a>)\n</li>\n</ul>\n<h2>Jokes</h2>\n<ul>\n<li>\nThe idea behind daylight saving time was first proposed as a joke by\nBenjamin Franklin. To enforce it, he suggested, \"Every\nmorning, as soon as the sun rises, let all the bells in every church\nbe set ringing; and if that is not sufficient, let cannon be fired in\nevery street, to wake the sluggards effectually, and make them open\ntheir eyes to see their true interest. All the difficulty will be in\nthe first two or three days: after which the reformation will be as\nnatural and easy as the present irregularity; for, <em>ce n'est que le\npremier pas qui co&ucirc;te</em>.\"\n<a href=\"http://www.webexhibits.org/daylightsaving/franklin3.html\">Franklin's\njoke</a> was first published on 1784-04-26 by the\n<em>Journal de Paris</em> as <a\nhref=\"https://en.wikipedia.org/wiki/File:Franklin-Benjamin-Journal-de-Paris-1784.jpg\">an\nanonymous letter translated into French</a>.\n</li>\n<li>\n\"We've been using the five-cent nickel in this country since 1492.\nNow that's pretty near 100 years, daylight saving.\"\n(Groucho Marx as Captain Spaulding in <em>Animal Crackers</em>, 1930,\nas noted by Will Fitzgerald)\n</li>\n<li>\nBRADY. ...[Bishop Usher] determined that the Lord began the Creation\non the 23rd of October in the Year 4,004 B.C. at &ndash; uh, 9 A.M.!\n<br>\nDRUMMOND. That Eastern Standard Time? (<em>Laughter.</em>) Or Rocky Mountain\nTime? (<em>More laughter.</em>) It wasn't daylight-saving time, was it? Because\nthe Lord didn't make the sun until the fourth day!\n<br>\n(From the play <em>Inherit the Wind</em> by Jerome Lawrence and Robert E. Lee,\nfilmed in 1960 with Spencer Tracy as Drummond and Fredric March as\nBrady, and several other times. Thanks to Mark Brader.)\n</li>\n<li>\n\"Good news.\"\n\"What did they do? Extend Daylight Saving Time year round?\"\n(Professional tanner George Hamilton, in dialog from a\nMay, 1999 episode of the syndicated television series <em>Baywatch</em>)\n</li>\n<li>\n\"A fundamental belief held by Americans is that if you are on land, you\ncannot be killed by a fish...So most Americans remain on land, believing\nthey're safe. Unfortunately, this belief &ndash; like so many myths, such as that\nthere's a reason for 'Daylight Saving Time' &ndash; is false.\"\n(Dave Barry column, 2000-07-02)\n</li>\n<li>\n\"I once had sex for an hour and five minutes, but that was on the day\nwhen you turn the clocks ahead.\"\n(Garry Shandling, 52nd Annual Emmys, 2000-09-10)\n</li>\n<li>\n\"Would it impress you if I told you I invented Daylight Savings Time?\"\n(\"Sahjhan\" to \"Lilah\" in dialog from the \"Loyalty\" episode of <em>Angel</em>,\noriginally aired 2002-02-25)\n</li>\n<li>\n\"I thought you said Tulsa was a three-hour flight.\"\n\"Well, you're forgetting about the time difference.\"\n(\"Joey\" and \"Chandler\" in dialog from the episode of <em>Friends</em>\nentitled \"The One With Rachel's Phone Number,\" originally aired 2002-12-05)\n</li>\n<li>\n\"Is that a pertinent fact,\nor are you just trying to dazzle me with your command of time zones?\"\n(Kelsey Grammer as \"Frasier Crane\" to \"Roz\" from the episode of <em>Frasier</em>\nentitled \"The Kid,\" originally aired 1997-11-04)\n</li>\n<li>\n\"I put myself and my staff through this crazy, huge ordeal, all because\nI refused to go on at midnight, okay? And so I work, you know, and\nthen I get this job at eleven, supposed to be a big deal. Then\nyesterday daylight [saving] time ended. Right now it's basically\nmidnight.\" (Conan O'Brien on the 2010-11-08 premiere of <em>Conan</em>)\n</li>\n<li>\n\"The best method, I told folks, was to hang a large clock high on a\nbarn wall where all the cows could see it. If you have Holsteins, you\nwill need to use an analog clock.\" (Jerry Nelson, <a\nhref=\"http://www.agriculture.com/family/farm-humor/how-to-adjust-dairy-cows-to-daylight-savings-time\">How\nto adjust dairy cows to daylight saving time</a>\", <em>Successful Farming</em>,\n2017-10-09)\n</li>\n<li>\n\"And now, driving to California, I find that I must enter a password\nin order to change the time zone on my laptop clock. Evidently,\nsomeone is out to mess up my schedule and my clock must be secured.\"\n(Garrison Keillor,\n\"<a href=\"http://www.garrisonkeillor.com/weve-never-been-here-before/\">We've\nnever been here before</a>\", 2017-08-22)\n</li>\n<li>\n\"Well, in my time zone that's all the time I have,\nbut maybe in your time zone I haven't finished yet. So stay tuned!\"\n(Goldie Hawn, <em>Rowan &amp; Martin's Laugh-In</em> No. 65, 1970-03-09)\n</li>\n</ul>\n<h2>See also</h2>\n<ul>\n<li><a href=\"tz-link.html\">Time Zone and Daylight Saving\nTime Data</a></li>\n</ul>\n<hr>\n<address>\nThis web page is in the public domain, so clarified as of\n2009-05-17 by Arthur David Olson.\n<br>\nPlease send corrections to this web page to the\n<a href=\"mailto:tz@iana.org\">time zone mailing list</a>.\n</address>\n</body>\n</html>\n"
        },
        {
          "name": "tz-how-to.html",
          "type": "blob",
          "size": 24.0732421875,
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<title>How to Read the tz Database</title>\n<meta charset=\"UTF-8\">\n<style>\npre {margin-left: 2em; white-space: pre-wrap;}\npre.td {margin-left: 0;}\ntd {text-align: center;}\ntable {border: 1px outset;}\nth, td {border: 1px inset;}\ntable.rule {border: none; margin: auto;}\ntd.footnote {text-align: left;}\n</style>\n</head>\n<body>\n<h2>How to Read the <a href=\"https://en.wikipedia.org/wiki/Tz_database\">tz\nDatabase</a> Source Files</h2>\n<h3>by Bill Seymour</h3>\n<p>This guide uses the <code>America/Chicago</code> and\n<code>Pacific/Honolulu</code> zones as examples of how to infer\ntimes of day from the <a href=\"tz-link.html\">tz database</a>\nsource files. It might be helpful, but not absolutely necessary,\nfor the reader to have already downloaded the\nlatest release of the database and become familiar with the basic layout\nof the data files. The format is explained in the &ldquo;man\npage&rdquo; for the zic compiler, <code>zic.8.txt</code>, in\nthe <code>code</code> subdirectory.\nAlthough this guide covers many of the common cases, it is not a\ncomplete summary of what zic accepts; the man page is the\nauthoritative reference.</p>\n\n<p>We&rsquo;ll begin by talking about the rules for changing between standard\nand daylight saving time since we&rsquo;ll need that information when we talk\nabout the zones.</p>\n\n<p>First, let&rsquo;s consider the special daylight saving time rules\nfor Chicago (from the <code>northamerica</code> file in\nthe <code>data</code> subdirectory):</p>\n\n<table>\n<tr>\n  <th colspan=\"6\">From the Source File</th>\n</tr>\n<tr>\n  <td colspan=\"6\">\n    <table class=\"rule\">\n      <tr><td style=\"border:none;text-align:left\">\n<pre class=\"td\">\n#Rule NAME    FROM TO    -   IN  ON      AT   SAVE LETTER\nRule  Chicago 1920 only  -   Jun 13      2:00 1:00 D\nRule  Chicago 1920 1921  -   Oct lastSun 2:00 0    S\nRule  Chicago 1921 only  -   Mar lastSun 2:00 1:00 D\nRule  Chicago 1922 1966  -   Apr lastSun 2:00 1:00 D\nRule  Chicago 1922 1954  -   Sep lastSun 2:00 0    S\nRule  Chicago 1955 1966  -   Oct lastSun 2:00 0    S\n</pre>\n  </td></tr></table></td>\n</tr>\n<tr>\n  <th colspan=\"6\">Reformatted a Bit</th>\n</tr>\n<tr>\n  <th>From</th>\n  <th>To</th>\n  <th colspan=\"2\">On</th>\n  <th>At</th>\n  <th>Action</th>\n</tr>\n<tr>\n  <td colspan=\"2\">1920 only</td>\n  <td colspan=\"2\">June 13<small><sup>th</sup></small></td>\n  <td rowspan=\"6\">02:00 local</td>\n  <td>go to daylight saving time</td>\n</tr>\n<tr>\n  <td>1920</td>\n  <td>1921</td>\n  <td rowspan=\"5\">last Sunday</td>\n  <td>in October</td>\n  <td>return to standard time</td>\n</tr>\n<tr>\n  <td colspan=\"2\">1921 only</td>\n  <td>in March</td>\n  <td rowspan=\"2\">go to daylight saving time</td>\n</tr>\n<tr>\n  <td rowspan=\"2\">1922</td>\n  <td>1966</td>\n  <td>in April</td>\n</tr>\n<tr>\n  <td>1954</td>\n  <td>in September</td>\n  <td rowspan=\"2\">return to standard time</td>\n</tr>\n<tr>\n  <td>1955</td>\n  <td>1966</td>\n  <td>in October</td>\n</tr>\n</table>\n\n<p>The <code>FROM</code> and <code>TO</code> columns, respectively, specify the\nfirst and last calendar years defining a contiguous range over which a specific\nRule line is to apply.  The keyword <code>only</code> can be used in the\n<code>TO</code> field to repeat the value of the <code>FROM</code> field in the\nevent that a rule should only apply to a single year.  Often, the keyword\n<code>max</code> is used to extend a rule&rsquo;s application into the\nindefinite future; it is a platform-agnostic stand-in for the largest\nrepresentable year.\n\n<p>The next column, <code>-</code>, is reserved; for compatibility with earlier\nreleases, it always contains a hyphen, which acts as a kind of null value.\nPrior to the 2020b release, it was called the <code>TYPE</code> field, though\nit had not been used in the main data since the 2000e release.\nAn obsolescent supplementary file used the\nfield as a proof-of-concept to allow <code>zic</code> to apply a given Rule\nline only to certain &ldquo;types&rdquo; of years within the specified range as\ndictated by the output of a separate script, such as: only years which would\nhave a US presidential election, or only years which wouldn&rsquo;t.\n\n<p>The <code>SAVE</code> column contains the local (wall clock) offset from\nlocal standard time.\nThis is usually either zero for standard time or one hour for daylight\nsaving time; but there&rsquo;s no reason, in principle, why it can&rsquo;t\ntake on other values.\n\n<p>The <code>LETTER</code> (sometimes called <code>LETTER/S</code>)\ncolumn can contain a variable\npart of the usual abbreviation of the time zone&rsquo;s name, or it can just\nbe a hyphen if there&rsquo;s no variable part. For example, the abbreviation\nused in the central time zone will be either &ldquo;CST&rdquo; or\n&ldquo;CDT&rdquo;. The variable part is &lsquo;S&rsquo; or &lsquo;D&rsquo;;\nand, sure enough, that&rsquo;s just what we find in\nthe <code>LETTER</code> column\nin the <code>Chicago</code> rules. More about this when we talk about\n&ldquo;Zone&rdquo; lines.\n\n<p>One important thing to notice is that &ldquo;Rule&rdquo; lines\nwant at once to be both <i>transitions</i> and <i>steady states</i>:\n<ul>\n<li>On the one hand, they represent transitions between standard and\ndaylight saving time; and any number of Rule lines can be in effect\nduring a given period (which will always be a non-empty set of\ncontiguous calendar years).</li>\n<li>On the other hand, the <code>SAVE</code> and <code>LETTER</code>\ncolumns contain state that exists between transitions. More about this\nwhen we talk about the US rules.</li>\n</ul>\n\n<p>In the example above, the transition to daylight saving time\nhappened on the 13<small><sup>th</sup></small> of June in 1920, and on\nthe last Sunday in March in 1921; but the return to standard time\nhappened on the last Sunday in October in both of those\nyears. Similarly, the rule for changing to daylight saving time was\nthe same from 1922 to 1966; but the rule for returning to standard\ntime changed in 1955. Got it?</p>\n\n<p>OK, now for the somewhat more interesting &ldquo;US&rdquo; rules:</p>\n\n<table>\n<tr>\n  <th colspan=\"6\">From the Source File</th>\n</tr>\n<tr>\n  <td colspan=\"6\">\n    <table class=\"rule\">\n      <tr><td style=\"border:none;text-align:left\">\n<pre class=\"td\">\n#Rule NAME FROM TO    -   IN  ON        AT   SAVE LETTER/S\nRule  US   1918 1919  -   Mar lastSun  2:00  1:00 D\nRule  US   1918 1919  -   Oct lastSun  2:00  0    S\nRule  US   1942 only  -   Feb 9        2:00  1:00 W # War\nRule  US   1945 only  -   Aug 14      23:00u 1:00 P # Peace\nRule  US   1945 only  -   Sep 30       2:00  0    S\nRule  US   1967 2006  -   Oct lastSun  2:00  0    S\nRule  US   1967 1973  -   Apr lastSun  2:00  1:00 D\nRule  US   1974 only  -   Jan 6        2:00  1:00 D\nRule  US   1975 only  -   Feb 23       2:00  1:00 D\nRule  US   1976 1986  -   Apr lastSun  2:00  1:00 D\nRule  US   1987 2006  -   Apr Sun&gt;=1   2:00  1:00 D\nRule  US   2007 max   -   Mar Sun&gt;=8   2:00  1:00 D\nRule  US   2007 max   -   Nov Sun&gt;=1   2:00  0    S\n</pre>\n  </td></tr></table></td>\n</tr>\n<tr>\n  <th colspan=\"6\">Reformatted a Bit</th>\n</tr>\n<tr>\n  <th>From</th>\n  <th>To</th>\n  <th colspan=\"2\">On</th>\n  <th>At</th>\n  <th>Action</th>\n</tr>\n<tr>\n  <td rowspan=\"2\">1918</td>\n  <td rowspan=\"2\">1919</td>\n  <td rowspan=\"2\">last Sunday</td>\n  <td>in March</td>\n  <td rowspan=\"3\">02:00 local</td>\n  <td>go to daylight saving time</td>\n</tr>\n<tr>\n  <td>in October</td>\n  <td>return to standard time</td>\n</tr>\n<tr>\n  <td colspan=\"2\">1942 only</td>\n  <td colspan=\"2\">February 9<small><sup>th</sup></small></td>\n  <td>go to &ldquo;war time&rdquo;</td>\n</tr>\n<tr>\n  <td colspan=\"2\" rowspan=\"2\">1945 only</td>\n  <td colspan=\"2\">August 14<small><sup>th</sup></small></td>\n  <td>23:00 <a href=\"https://en.wikipedia.org/wiki/Universal_Time\">UT</a></td>\n  <td>\n    rename &ldquo;war time&rdquo; to &ldquo;peace<br>time;&rdquo;\n    clocks don&rsquo;t change\n  </td>\n</tr>\n<tr>\n  <td colspan=\"2\">September 30<small><sup>th</sup></small></td>\n  <td rowspan=\"9\">02:00 local</td>\n  <td rowspan=\"2\">return to standard time</td>\n</tr>\n<tr>\n  <td rowspan=\"2\">1967</td>\n  <td>2006</td>\n  <td rowspan=\"2\">last Sunday</td>\n  <td>in October</td>\n</tr>\n<tr>\n  <td>1973</td>\n  <td>in April</td>\n  <td rowspan=\"6\">go to daylight saving time</td>\n</tr>\n<tr>\n  <td colspan=\"2\">1974 only</td>\n  <td colspan=\"2\">January 6<small><sup>th</sup></small></td>\n</tr>\n<tr>\n  <td colspan=\"2\">1975 only</td>\n  <td colspan=\"2\">February 23<small><sup>rd</sup></small></td>\n</tr>\n<tr>\n  <td>1976</td>\n  <td>1986</td>\n  <td>last Sunday</td>\n  <td rowspan=\"2\">in April</td>\n</tr>\n<tr>\n  <td>1987</td>\n  <td>2006</td>\n  <td>first Sunday</td>\n</tr>\n<tr>\n  <td rowspan=\"2\">2007</td>\n  <td rowspan=\"2\">present</td>\n  <td colspan=\"2\">second Sunday in March</td>\n</tr>\n<tr>\n  <td colspan=\"2\">first Sunday in November</td>\n  <td>return to standard time</td>\n</tr>\n</table>\n\n<p>There are two interesting things to note here.</p>\n\n<p>First, the time that something happens (in the <code>AT</code>\ncolumn) is not necessarily the local (wall clock) time. The time can be\nsuffixed with &lsquo;s&rsquo; (for &ldquo;standard&rdquo;) to mean\nlocal standard time, different from local (wall clock) time when observing\ndaylight saving time; or it can be suffixed with &lsquo;g&rsquo;,\n&lsquo;u&rsquo;, or &lsquo;z&rsquo;, all three of which mean the\nstandard time at the\n<a href=\"https://en.wikipedia.org/wiki/Prime_Meridian\">prime meridian</a>.\n&lsquo;g&rsquo; stands for &ldquo;<a\nhref=\"https://en.wikipedia.org/wiki/Greenwich_Mean_Time\">GMT</a>&rdquo;;\n&lsquo;u&rsquo; stands for &ldquo;<a\nhref=\"https://en.wikipedia.org/wiki/Universal_Time\">UT</a>&rdquo; or &ldquo;<a\nhref=\"https://en.wikipedia.org/wiki/Coordinated_Universal_Time\">UTC</a>&rdquo;\n(whichever was official at the time); &lsquo;z&rsquo; stands for the\n<a href=\"https://en.wikipedia.org/wiki/Nautical_time\">nautical time zone</a>\nZ (a.k.a. &ldquo;Zulu&rdquo; which, in turn, stands for &lsquo;Z&rsquo;).\nThe time can also be suffixed with &lsquo;w&rsquo; meaning local (wall\nclock) time; but it usually isn&rsquo;t because that&rsquo;s the\ndefault.</p>\n\n<p>Second, the day in the <code>ON</code> column, in addition to\n&ldquo;<code>lastSun</code>&rdquo; or a particular day of the month,\ncan have the form, &ldquo;<code>Sun&gt;=</code><i>x</i>&rdquo; or\n&ldquo;<code>Sun&lt;=</code><i>x</i>,&rdquo; where <i>x</i> is a day\nof the month. For example, &ldquo;<code>Sun&gt;=8</code>&rdquo; means\n&ldquo;the first Sunday on or after the eighth of the month,&rdquo; in\nother words, the second Sunday of the month. Furthermore, although\nthere are no examples above, the weekday needn&rsquo;t be\n&ldquo;<code>Sun</code>&rdquo; in either form, but can be the usual\nthree-character English abbreviation for any day of the week.</p>\n\n<p>And the US rules give us more examples of a couple of things\nalready mentioned:</p>\n\n<ul>\n<li>The rules for changing to and from daylight saving time are\nactually <i>different sets</i> of rules; and the two sets can change\nindependently. Consider, for example, that the rule for the return to\nstandard time stayed the same from 1967 to 2006; but the rule for the\ntransition to daylight saving time changed several times in the same\nperiod.  There can also be periods, 1946 to 1966 for example, when no\nrule from this group is in effect, and so either no transition\nhappened in those years, or some other rule is in effect (perhaps a\nstate or other more local rule).</li>\n\n<li>The <code>SAVE</code> and <code>LETTER</code> columns\ncontain <i>steady state</i>, not transitions. Consider, for example,\nthe transition from &ldquo;war time&rdquo; to &ldquo;peace time&rdquo;\nthat happened on August 14, 1945. The &ldquo;1:00&rdquo; in\nthe <code>SAVE</code> column is <i>not</i> an instruction to advance\nthe clock an hour. It means that clocks should <i>be</i> one hour\nahead of standard time, which they already are because of the previous\nrule, so there should be no change.</li>\n\n</ul>\n\n<p>OK, now let&rsquo;s look at a Zone record:</p>\n\n<table>\n<tr>\n  <th colspan=\"5\">From the Source File</th>\n</tr>\n<tr>\n  <td colspan=\"5\">\n    <table class=\"rule\">\n      <tr><td style=\"border:none;text-align:left\">\n<pre class=\"td\">\n#Zone       NAME      STDOFF   RULES FORMAT [UNTIL]\nZone  America/Chicago -5:50:36 -       LMT  1883 Nov 18 12:09:24\n                      -6:00    US      C%sT 1920\n                      -6:00    Chicago C%sT 1936 Mar  1  2:00\n                      -5:00    -       EST  1936 Nov 15  2:00\n                      -6:00    Chicago C%sT 1942\n                      -6:00    US      C%sT 1946\n                      -6:00    Chicago C%sT 1967\n                      -6:00    US      C%sT\n</pre>\n  </td></tr></table></td>\n</tr>\n<tr>\n  <th colspan=\"5\">Columns Renamed</th>\n</tr>\n<tr>\n  <th rowspan=\"2\">Standard Offset<br>\n    from <a href=\"https://en.wikipedia.org/wiki/Prime_Meridian\">Prime\n    Meridian</a></th>\n  <th rowspan=\"2\">Daylight<br>Saving Time</th>\n  <th rowspan=\"2\">Abbreviation(s)</th>\n  <th colspan=\"2\">Ending at Local Time</th>\n</tr>\n<tr>\n  <th>Date</th>\n  <th>Time</th>\n</tr>\n<tr>\n  <td>&minus;5:50:36</td>\n  <td>not observed</td>\n  <td>LMT</td>\n  <td>1883-11-18</td>\n  <td>12:09:24</td>\n</tr>\n<tr>\n  <td rowspan=\"2\">&minus;6:00:00</td>\n  <td>US rules</td>\n  <td rowspan=\"2\">CST or CDT</td>\n  <td>1920-01-01</td>\n  <td>00:00:00</td>\n</tr>\n<tr>\n  <td>Chicago rules</td>\n  <td>1936-03-01</td>\n  <td rowspan=\"2\">02:00:00</td>\n</tr>\n<tr>\n  <td>&minus;5:00:00</td>\n  <td>not observed</td>\n  <td>EST</td>\n  <td>1936-11-15</td>\n</tr>\n<tr>\n  <td rowspan=\"4\">&minus;6:00:00</td>\n  <td>Chicago rules</td>\n  <td>CST or CDT</td>\n  <td>1942-01-01</td>\n  <td rowspan=\"3\">00:00:00</td>\n</tr>\n<tr>\n  <td>US rules</td>\n  <td>CST, CWT or CPT</td>\n  <td>1946-01-01</td>\n</tr>\n<tr>\n  <td>Chicago rules</td>\n  <td rowspan=\"2\">CST or CDT</td>\n  <td>1967-01-01</td>\n</tr>\n<tr>\n  <td>US rules</td>\n  <td colspan=\"2\">&mdash;</td>\n</tr>\n</table>\n\n<p>There are a couple of interesting differences between Zones and Rules.</p>\n\n<p>First, and somewhat trivially, whereas Rules are considered to\ncontain one or more records, a Zone is considered to be a single\nrecord with zero or more <i>continuation lines</i>. Thus, the keyword,\n&ldquo;<code>Zone</code>,&rdquo; and the zone name are not\nrepeated. The last line is the one without anything in\nthe <code>[UNTIL]</code> column.</p>\n\n<p>Second, and more fundamentally, each line of a Zone represents a\nsteady state, not a transition between states. The state exists from\nthe date and time in the previous line&rsquo;s <code>[UNTIL]</code>\ncolumn up to the date and time in the current\nline&rsquo;s <code>[UNTIL]</code> column. In other words, the date and\ntime in the <code>[UNTIL]</code> column is the instant that separates\nthis state from the next. Where that would be ambiguous because\nwe&rsquo;re setting our clocks back, the <code>[UNTIL]</code> column\nspecifies the first occurrence of the instant. The state specified by\nthe last line, the one without anything in the <code>[UNTIL]</code>\ncolumn, continues to the present.</p>\n\n<p>The first line typically specifies the mean solar time observed\nbefore the introduction of standard time. Since there&rsquo;s no line before\nthat, it has no beginning. <code>8-) </code> For some places near the <a\nhref=\"https://en.wikipedia.org/wiki/International_Date_Line\">International\nDate Line</a>, the first <i>two</i> lines will show solar times\ndiffering by 24 hours; this corresponds to a movement of the Date\nLine.  For example:</p>\n\n<pre>\n#Zone NAME          STDOFF   RULES FORMAT [UNTIL]\nZone America/Juneau 15:02:19 -     LMT    1867 Oct 18\n                    -8:57:41 -     LMT    ...\n</pre>\n\n<p>When Alaska was purchased from Russia in 1867, the Date Line moved\nfrom the Alaska/Canada border to the Bering Strait; and the time in\nAlaska was then 24 hours earlier than it had\nbeen. <code>&lt;aside&gt;</code>(6 October in the Julian calendar,\nwhich Russia was still using then for religious reasons, was followed\nby <i>a second instance of the same day with a different name</i>, 18\nOctober in the Gregorian calendar. Isn&rsquo;t civil time\nwonderful? <code>8-)</code>)<code>&lt;/aside&gt;</code></p>\n\n<p>The abbreviation, &ldquo;LMT&rdquo; stands for &ldquo;local mean\ntime&rdquo;, which is an invention of\nthe <a href=\"https://en.wikipedia.org/wiki/Tz_database\">tz\ndatabase</a> and was probably never actually used during the\nperiod. Furthermore, the value is almost certainly wrong except in the\narchetypal place after which the zone is named. (The tz database\nusually doesn&rsquo;t provide a separate Zone record for places where\nnothing significant happened after 1970.)</p>\n\n<p>The <code>RULES</code> column tells us whether daylight saving time is being observed:\n<ul>\n<li>A hyphen, a kind of null value, means that we have not set our\nclocks ahead of standard time.</li>\n\n<li>An amount of time (usually but not necessarily &ldquo;1:00&rdquo;\nmeaning one hour) means that we have set our clocks ahead by that\namount.</li>\n\n<li>Some alphabetic string means that we <i>might have</i> set our\nclocks ahead; and we need to check the rule the name of which is the\ngiven alphabetic string.</li>\n</ul>\n\n<p>An example of a specific amount of time is:</p>\n<pre>\n#Zone NAME            STDOFF RULES FORMAT [UNTIL]\nZone Pacific/Honolulu ...                 1933 Apr 30  2:00\n                      -10:30 1:00  HDT    1933 May 21 12:00\n                      ...\n</pre>\n\n<p>Hawaii tried daylight saving time for three weeks in 1933 and\ndecided they didn&rsquo;t like it. <code>8-) </code>Note that\nthe <code>STDOFF</code> column always contains the standard time\noffset, so the local (wall clock) time during this period was GMT &minus;\n10:30 + 1:00 = GMT &minus; 9:30.</p>\n\n<p>The <code>FORMAT</code> column specifies the usual abbreviation of\nthe time zone name. It should have one of four forms:</p>\n<ul>\n\n<li>a time zone abbreviation that is a string of three or more\ncharacters that are either ASCII alphanumerics,\n&ldquo;<code>+</code>&rdquo;, or &ldquo;<code>-</code>&rdquo;</li>\n\n<li>the string &ldquo;%z&rdquo;, in which case the\n&ldquo;<code>%z</code>&rdquo; will be replaced by a numeric time zone\nabbreviation</li>\n\n<li>a pair of time zone abbreviations separated by a slash\n(&lsquo;<code>/</code>&rsquo;), in which case the first string is the\nabbreviation for the standard time name and the second string is the\nabbreviation for the daylight saving time name</li>\n\n<li>a string containing &ldquo;<code>%s</code>&rdquo;, in which case\nthe &ldquo;<code>%s</code>&rdquo; will be replaced by the text in the\nappropriate Rule&rsquo;s <code>LETTER</code> column, and the resulting\nstring should be a time zone abbreviation</li>\n</ul>\n\n<p>The last two make sense only if there&rsquo;s a named rule in effect.</p>\n\n<p>An example of a slash is:</p>\n<pre>\n#Zone NAME          STDOFF RULES FORMAT  [UNTIL]\nZone  Europe/London ...                  1996\n                    0:00   EU    GMT/BST\n</pre>\n\n<p>The current time in the UK is called either Greenwich mean time or\nBritish summer time.</p>\n\n<p>One wrinkle, not fully explained in <code>zic.8.txt</code>, is what\nhappens when switching to a named rule. To what values should\nthe <code>SAVE</code> and <code>LETTER</code> data be initialized?</p>\n\n<ul>\n<li>If at least one transition has happened, use\nthe <code>SAVE</code> and <code>LETTER</code> data from the most\nrecent.</li>\n\n<li>If switching to a named rule before any transition has happened,\nassume standard time (<code>SAVE</code> zero), and use\nthe <code>LETTER</code> data from the earliest transition with\na <code>SAVE</code> of zero.\n\n</ul>\n\n<p>And three last things about the <code>FORMAT</code> column:</p>\n<ul>\n\n<li>The <a href=\"https://en.wikipedia.org/wiki/Tz_database\">tz\ndatabase</a> gives abbreviations for time zones\nin popular English-language usage. For\nexample, the last line in\n<code>Zone</code> <code>Pacific/Honolulu</code> (shown below) gives\n&ldquo;HST&rdquo; for &ldquo;Hawaii standard time&rdquo; even though the\n<a href=\"https://www.law.cornell.edu/uscode/text/15/263\">legal</a>\nname for that time zone is &ldquo;Hawaii-Aleutian standard time.&rdquo;\nThis author has read that there are also some places in Australia where\npopular time zone names differ from the legal ones.\n\n<li>No attempt is made to <a\nhref=\"https://en.wikipedia.org/wiki/Internationalization_and_localization\">localize</a>\nthe abbreviations. They are intended to be the values returned through the\n<code>\"%Z\"</code> format specifier to\n<a href=\"https://en.wikipedia.org/wiki/C_(programming_language)\">C</a>&rsquo;s\n<a href=\"https://pubs.opengroup.org/onlinepubs/9699919799/functions/strftime.html\"><code>strftime</code></a>\nfunction in the\n<a href=\"https://kirste.userpage.fu-berlin.de/chemnet/use/info/libc/libc_19.html#SEC324\">&ldquo;C&rdquo; locale</a>.\n\n<li>If there is no generally accepted abbreviation for a time zone,\na numeric offset is used instead, e.g., <code>+07</code> for 7 hours\nahead of Greenwich. By convention, <code>-00</code> is used in a\nzone while uninhabited, where the offset is zero but in some sense\nthe true offset is undefined.\n</ul>\n\n<p>As a final example, here&rsquo;s the complete history for Hawaii:</p>\n\n<table>\n<tr>\n  <th colspan=\"6\">Relevant Excerpts from the US Rules</th>\n</tr>\n<tr>\n  <td colspan=\"6\">\n    <table class=\"rule\">\n      <tr><td style=\"border:none;text-align:left\">\n<pre class=\"td\">\n#Rule NAME FROM TO   -    IN  ON      AT     SAVE LETTER/S\nRule  US   1918 1919 -    Oct lastSun  2:00  0    S\nRule  US   1942 only -    Feb  9       2:00  1:00 W # War\nRule  US   1945 only -    Aug 14      23:00u 1:00 P # Peace\nRule  US   1945 only -    Sep lastSun  2:00  0    S\n</pre>\n  </td></tr></table></td>\n</tr>\n<tr>\n  <th colspan=\"6\">The Zone Record</th>\n</tr>\n<tr>\n  <td colspan=\"6\">\n    <table class=\"rule\">\n      <tr><td style=\"border:none;text-align:left\">\n<pre class=\"td\">\n#Zone NAME            STDOFF    RULES FORMAT [UNTIL]\nZone Pacific/Honolulu -10:31:26 -     LMT    1896 Jan 13 12:00\n                      -10:30    -     HST    1933 Apr 30  2:00\n                      -10:30    1:00  HDT    1933 May 21  2:00\n                      -10:30    US    H%sT   1947 Jun  8  2:00\n                      -10:00    -     HST\n</pre>\n  </td></tr></table></td>\n</tr>\n<tr>\n  <th colspan=\"6\">What We Infer</th>\n</tr>\n<tr>\n  <th rowspan=\"2\">Wall-Clock<br>Offset from<br>Prime Meridian</th>\n  <th rowspan=\"2\">Adjust<br>Clocks</th>\n  <th colspan=\"2\">Time Zone</th>\n  <th colspan=\"2\">Ending at Local Time</th>\n</tr>\n<tr>\n  <th>Abbrv.</th>\n  <th>Name</th>\n  <th>Date</th>\n  <th>Time</th>\n</tr>\n<tr>\n  <td>&minus;10:31:26</td>\n  <td>&mdash;</td>\n  <td>LMT</td>\n  <td>local mean time</td>\n  <td>1896-01-13</td>\n  <td>12:00</td>\n</tr>\n<tr>\n  <td>&minus;10:30</td>\n  <td>+0:01:26</td>\n  <td>HST</td>\n  <td>Hawaii standard time</td>\n  <td>1933-04-30</td>\n  <td>02:00</td>\n</tr>\n<tr>\n  <td>&minus;9:30</td>\n  <td>+1:00</td>\n  <td>HDT</td>\n  <td>Hawaii daylight time</td>\n  <td>1933-05-21</td>\n  <td>12:00</td>\n</tr>\n<tr>\n  <td>&minus;10:30&sup1;</td>\n  <td>&minus;1:00&sup1;</td>\n  <td>HST&sup1;</td>\n  <td>Hawaii standard time</td>\n  <td>1942-02-09</td>\n  <td>02:00</td>\n</tr>\n<tr>\n  <td rowspan=\"2\">&minus;9:30</td>\n  <td>+1:00</td>\n  <td>HWT</td>\n  <td>Hawaii war time</td>\n  <td>1945-08-14</td>\n  <td>13:30&sup2;</td>\n</tr>\n<tr>\n  <td>0</td>\n  <td>HPT</td>\n  <td>Hawaii peace time</td>\n  <td>1945-09-30</td>\n  <td rowspan=\"2\">02:00</td>\n</tr>\n<tr>\n  <td>&minus;10:30</td>\n  <td>&minus;1:00</td>\n  <td rowspan=\"2\">HST</td>\n  <td rowspan=\"2\">Hawaii standard time</td>\n  <td>1947-06-08</td>\n</tr>\n<tr>\n  <td>&minus;10:00&sup3;</td>\n  <td>+0:30&sup3;</td>\n  <td colspan=\"2\">&mdash;</td>\n</tr>\n<tr>\n  <td colspan=\"6\" class=\"footnote\">\n    &sup1;Switching to US rules&hellip;most recent transition (in 1919) was to standard time\n  </td>\n</tr>\n<tr>\n  <td colspan=\"6\" class=\"footnote\">\n    &sup2;23:00 <a href=\"https://en.wikipedia.org/wiki/Universal_Time\">UT</a>\n    + (&minus;9:30) = 13:30 local\n  </td>\n</tr>\n<tr>\n  <td colspan=\"6\" class=\"footnote\">\n    &sup3;Since <a href=\"https://en.wikipedia.org/wiki/ISO_8601\">1947&ndash;06&ndash;08T12:30Z</a>,\n    the civil time in Hawaii has been\n    <a href=\"https://en.wikipedia.org/wiki/Universal_Time\">UT</a>/<a href=\"https://en.wikipedia.org/wiki/Coordinated_Universal_Time\">UTC</a>\n    &minus; 10:00 year-round.\n  </td>\n</tr>\n</table>\n\n<p>There will be a short quiz later. <code>8-)</code></p>\n\n<hr>\n<address>\nThis web page is in the public domain, so clarified as of\n2015-10-20 by Bill Seymour.\n<br>\nAll suggestions and corrections will be welcome; all flames will be amusing.\nMail to was at pobox dot com.\n</address>\n</body>\n</html>\n"
        },
        {
          "name": "tz-link.html",
          "type": "blob",
          "size": 61.3115234375,
          "content": "<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n<title>Time zone and daylight saving time data</title>\n<meta charset=\"UTF-8\">\n<style>\npre {margin-left: 2em; white-space: pre-wrap;}\n</style>\n</head>\n<body>\n<h1>Time zone and daylight saving time data</h1>\n<p>\n<a href=\"https://en.wikipedia.org/wiki/Time_zone\">Time zone</a> and\n<a href=\"https://en.wikipedia.org/wiki/Daylight_saving_time\">daylight-saving</a>\nrules are controlled by individual\ngovernments. They are sometimes changed with little notice, and their\nhistories and planned futures are often recorded only fitfully. Here\nis a summary of attempts to organize and record relevant data in this\narea.\n</p>\n  <h3>Outline</h3>\n  <nav>\n    <ul>\n      <li>The <code><abbr>tz</abbr></code> database product and process\n\t<ul>\n\t  <li><a href=\"#tzdb\">The <code><abbr>tz</abbr></code> database</a></li>\n\t  <li><a href=\"#download\">Downloading the <code><abbr>tz</abbr></code> database</a></li>\n\t  <li><a href=\"#changes\">Changes to the <code><abbr>tz</abbr></code> database</a></li>\n\t  <li><a href=\"#coordinating\">Coordinating with governments and distributors</a></li>\n\t  <li><a href=\"#commentary\">Commentary on the <code><abbr>tz</abbr></code> database</a></li>\n\t</ul>\n      </li>\n      <li>Uses of the <code><abbr>tz</abbr></code> database\n\t<ul>\n\t  <li><a href=\"#web\">Web sites using recent versions of the <code><abbr>tz</abbr></code> database</a></li>\n\t  <li><a href=\"#protocols\">Network protocols for <code><abbr>tz</abbr></code> data</a></li>\n\t  <li><a href=\"#compilers\">Other <code><abbr>tz</abbr></code> compilers</a></li>\n\t  <li><a href=\"#TZif\">Other <abbr>TZif</abbr> readers</a></li>\n\t  <li><a href=\"#software\">Other <code><abbr>tz</abbr></code>-based time zone software</a></li>\n\t</ul>\n      </li>\n      <li>Related data\n\t<ul>\n\t  <li><a href=\"#other-dbs\">Other time zone databases</a></li>\n\t  <li><a href=\"#maps\">Maps</a></li>\n\t  <li><a href=\"#boundaries\">Time zone boundaries</a></li>\n\t</ul>\n      </li>\n      <li>Timekeeping concepts\n\t<ul>\n\t  <li><a href=\"#civil\">Civil time concepts and history</a></li>\n\t  <li><a href=\"#national\">National histories of legal time</a></li>\n\t  <li><a href=\"#costs\">Costs and benefits of time shifts</a></li>\n\t  <li><a href=\"#precision\">Precision timekeeping</a></li>\n\t  <li><a href=\"#notation\">Time notation</a></li>\n\t</ul>\n      </li>\n      <li><a href=\"#see-also\">See also</a></li>\n    </ul>\n  </nav>\n\n<section>\n<h2 id=\"tzdb\">The <code><abbr title=\"time zone\">tz</abbr></code> database</h2>\n<p>\nThe <a href=\"https://en.wikipedia.org/wiki/Public_domain\">public-domain</a>\ntime zone database contains code and data\nthat represent the history of local time\nfor many representative locations around the globe.\nIt is updated periodically to reflect changes made by political bodies\nto time zone boundaries and daylight saving rules.\nThis database (known as <code><abbr>tz</abbr></code>,\n<code><abbr>tzdb</abbr></code>, or <code>zoneinfo</code>)\nis used by several implementations,\nincluding\n<a href=\"https://www.gnu.org/software/libc/\">the\n<abbr title=\"GNU's Not Unix\">GNU</abbr>\nC Library</a> (used in\n<a href=\"https://en.wikipedia.org/wiki/Linux\"><abbr>GNU</abbr>/Linux</a>),\n<a href=\"https://www.android.com\">Android</a>,\n<a href=\"https://www.freebsd.org\">Free<abbr\ntitle=\"Berkeley Software Distribution\">BSD</abbr></a>,\n<a href=\"https://netbsd.org\">Net<abbr>BSD</abbr></a>,\n<a href=\"https://www.openbsd.org\">Open<abbr>BSD</abbr></a>,\n<a href=\"https://www.chromium.org/chromium-os/\">ChromiumOS</a>,\n<a href=\"https://cygwin.com\">Cygwin</a>,\n<a href=\"https://mariadb.org\">MariaDB</a>,\n<a href=\"https://en.wikipedia.org/wiki/MINIX\">MINIX</a>,\n<a href=\"https://musl.libc.org\">musl libc</a>,\n<a href=\"https://www.mysql.com\">MySQL</a>,\n<a href=\"https://en.wikipedia.org/wiki/WebOS\"><abbr\ntitle=\"Web Operating System\">webOS</abbr></a>,\n<a href=\"https://en.wikipedia.org/wiki/IBM_AIX\"><abbr\ntitle=\"Advanced Interactive eXecutive\">AIX</abbr></a>,\n<a href=\"https://www.apple.com/ios\"><abbr\ntitle=\"iPhone OS\">iOS</abbr></a>,\n<a href=\"https://www.apple.com/macos\">macOS</a>,\n<a href=\"https://www.microsoft.com/en-us/windows\">Microsoft Windows</a>,\n<a href=\"https://www.vmssoftware.com\">Open<abbr\ntitle=\"Virtual Memory System\">VMS</abbr></a>,\n<a href=\"https://www.oracle.com/database/\">Oracle Database</a>, and\n<a href=\"https://www.oracle.com/solaris\">Oracle Solaris</a>.</p>\n<p>\nEach main entry in the database represents a <dfn>timezone</dfn>\nfor a set of civil-time clocks that have all agreed since 1970.\nTimezones are typically identified by continent or ocean and then by the\nname of the largest city within the region containing the clocks.\nFor example, <code>America/New_York</code>\nrepresents most of the <abbr title=\"United States\">US</abbr> eastern time zone;\n<code>America/Phoenix</code> represents most of Arizona, which\nuses mountain time without daylight saving time (<abbr>DST</abbr>);\n<code>America/Detroit</code> represents most of Michigan, which uses\neastern time but with different <abbr>DST</abbr> rules in 1975;\nand other entries represent smaller regions like Starke County,\nIndiana, which switched from central to eastern time in 1991\nand switched back in 2006.\nTo use the database on a <a\nhref=\"https://en.wikipedia.org/wiki/POSIX\"><abbr\ntitle=\"Portable Operating System Interface\">POSIX</abbr>.1-2024</a>\nimplementation set the <code><abbr>TZ</abbr></code>\nenvironment variable to the location's full name,\ne.g., <code><abbr>TZ</abbr>=\"America/New_York\"</code>.</p>\n<p>\nAssociated with each timezone is a history of offsets from\n<a href=\"https://en.wikipedia.org/wiki/Universal_Time\">Universal\nTime</a> (<abbr>UT</abbr>), which is <a\nhref=\"https://en.wikipedia.org/wiki/Greenwich_Mean_Time\">Greenwich Mean\nTime</a> (<abbr>GMT</abbr>) with days beginning at midnight;\nfor timestamps after 1960 this is more precisely <a\nhref=\"https://en.wikipedia.org/wiki/Coordinated_Universal_Time\">Coordinated\nUniversal Time</a> (<abbr>UTC</abbr>).\nThe database also records when daylight saving time was in use,\nalong with some time zone abbreviations such as <abbr>EST</abbr>\nfor Eastern Standard Time in the <abbr>US</abbr>.</p>\n</section>\n\n<section>\n<h2 id=\"download\">Downloading the <code><abbr>tz</abbr></code> database</h2>\n<p>\nThe following <a\nhref=\"https://en.wikipedia.org/wiki/Unix_shell\">shell</a> commands download\nthe latest release's two\n<a href=\"https://en.wikipedia.org/wiki/Tar_(computing)\">tarballs</a>\nto a <abbr>GNU</abbr>/Linux or similar host.</p>\n<pre><code>mkdir tzdb\ncd tzdb\n<a href=\"https://www.gnu.org/software/wget/\">wget</a> https://www.iana.org/time-zones/repository/tzcode-latest.tar.gz\nwget https://www.iana.org/time-zones/repository/tzdata-latest.tar.gz\n<a href=\"https://www.gnu.org/software/gzip/\">gzip</a> -dc tzcode-latest.tar.gz | <a href=\"https://www.gnu.org/software/tar/\">tar</a> -xf -\ngzip -dc tzdata-latest.tar.gz | tar -xf -\n</code></pre>\n<p>Alternatively, the following shell commands download the same\nrelease in a single-tarball format containing extra data\nuseful for regression testing:</p>\n<pre><code>wget <a href=\"https://www.iana.org/time-zones/repository/tzdb-latest.tar.lz\">https://www.iana.org/time-zones/repository/tzdb-latest.tar.lz</a>\n<a href=\"https://www.nongnu.org/lzip/\">lzip</a> -dc tzdb-latest.tar.lz | tar -xf -\n</code></pre>\n<p>These commands use convenience links to the latest release\nof the <code><abbr>tz</abbr></code> database hosted by the\n<a href=\"https://www.iana.org/time-zones\">Time Zone Database website</a>\nof the <a href=\"https://www.iana.org\">Internet Assigned Numbers\nAuthority (IANA)</a>.\nOlder releases are in files named\n<code>tzcode<var>V</var>.tar.gz</code>,\n<code>tzdata<var>V</var>.tar.gz</code>, and\n<code>tzdb-<var>V</var>.tar.lz</code>,\nwhere <code><var>V</var></code> is the version.\nSince 1996, each version has been a four-digit year followed by\nlower-case letter (<samp>a</samp> through <samp>z</samp>,\nthen <samp>za</samp> through <samp>zz</samp>, then <samp>zza</samp>\nthrough <samp>zzz</samp>, and so on).\nSince version 2022a, each release has been distributed in\n<a href=\"https://pubs.opengroup.org/onlinepubs/9699919799/utilities/pax.html#tag_20_92_13_06\">POSIX\nustar interchange format</a>, compressed as described above;\nolder releases use a nearly compatible format.\nSince version 2016h, each release has contained a text file named\n\"<code>version</code>\" whose first (and currently only) line is the version.\nOlder releases are <a href=\"https://ftp.iana.org/tz/releases/\">archived</a>,\nand are also available in an\n<a href=\"ftp://ftp.iana.org/tz/releases/\"><abbr\ntitle=\"File Transfer Protocol\">FTP</abbr> directory</a> via a\nless secure protocol.</p>\n<p>Alternatively, a development repository of code and data can be\nretrieved from <a href=\"https://github.com\">GitHub</a> via the shell\ncommand:</p>\n<pre><code><a href=\"https://git-scm.com\">git</a> clone <a href=\"https://github.com/eggert/tz\">https://github.com/eggert/tz</a>\n</code></pre>\n<p>\nSince version 2012e, each release has been tagged in development repositories.\nUntagged commits are less well tested and probably contain\nmore errors.</p>\n<p>\nAfter obtaining the code and data files, see the\n<code>README</code> file for what to do next.\nThe code lets you compile the <code><abbr>tz</abbr></code> source files into\nmachine-readable binary files, one for each location. The binary files\nare in a special format specified by\n<a href=\"https://www.rfc-editor.org/rfc/9636\">The\nTime Zone Information Format (<abbr>TZif</abbr>)</a>\n(Internet <abbr title=\"Request For Comments\">RFC</abbr> 9636).\nThe code also lets\nyou read a <abbr>TZif</abbr> file and interpret timestamps for that\nlocation.</p>\n</section>\n\n<section>\n<h2 id=\"changes\">Changes to the <code><abbr>tz</abbr></code> database</h2>\n<p>\nThe <code><abbr>tz</abbr></code> code and data\nare by no means authoritative. If you find errors, please\nemail changes to <a href=\"mailto:tz@iana.org\"><code>tz@iana.org</code></a>,\nthe time zone mailing list. See\n<a href=\"https://lists.iana.org/postorius/lists/tz.iana.org/\">the mailing\nlist's main page</a> to subscribe or to browse its archive of old messages.\n<a href=\"https://tzdata-meta.timtimeonline.com\">Metadata for mailing list\ndiscussions</a> and corresponding data changes can be\ngenerated <a href=\"https://github.com/timparenti/tzdata-meta\">automatically</a>.\n</p>\n<p>\nChanges to the <code><abbr>tz</abbr></code> code and data are often\npropagated to clients via operating system updates, so\nclient <code><abbr>tz</abbr></code> data can often be corrected by\napplying these updates. With GNU/Linux and similar systems, if your\nmaintenance provider has not yet adopted the\nlatest <code><abbr>tz</abbr></code> data, you can often short-circuit\nthe process by tailoring the generic instructions in\nthe <code><abbr>tz</abbr> README</code> file and installing the latest\ndata yourself. System-specific instructions for installing the\nlatest <code><abbr>tz</abbr></code> data have also been published\nfor <a href=\"https://www.ibm.com/support/pages/aix-time-zone-olson-tzdata-updates\"><abbr>AIX</abbr></a>,\n<a\nhref=\"https://source.android.com/devices/tech/config/timezone-rules\">Android</a>,\n<a\nhref=\"https://unicode-org.github.io/icu/userguide/datetime/timezone/\"><abbr\ntitle=\"International Components for Unicode\">ICU</abbr></a>,\n<a href=\"https://www.ibm.com/support/pages/java-sdk-time-zone-update-utility\"><abbr>IBM</abbr>\nJDK</a>,\n<a href=\"https://www.joda.org/joda-time/tz_update.html\">Joda-Time</a>, <a\nhref=\"https://dev.mysql.com/doc/refman/en/time-zone-support.html\">MySQL</a>,\n<a href=\"https://nodatime.org/userguide/tzdb\">Noda Time</a>, and <a\nhref=\"https://www.oracle.com/java/technologies/javase/tzupdater-readme.html\">OpenJDK/Oracle JDK</a>.\n</p>\n<p>Since version 2013a,\nsources for the <code><abbr>tz</abbr></code> database have been\n<a href=\"https://en.wikipedia.org/wiki/UTF-8\"><abbr\ntitle=\"Unicode Transformation Format 8-bit\">UTF-8</abbr></a>\n<a href=\"https://en.wikipedia.org/wiki/Text_file\">text files</a>\nwith lines terminated by <a href=\"https://en.wikipedia.org/wiki/Newline\"><abbr\ntitle=\"linefeed\">LF</abbr></a>,\nwhich can be modified by common text editors such\nas <a href=\"https://www.gnu.org/software/emacs/\">GNU Emacs</a>,\n<a href=\"https://gedit-technology.github.io/apps/gedit/\">gedit</a>, and\n<a href=\"https://www.vim.org\">vim</a>.\nSpecialized source-file editing can be done via the\n<a href=\"https://packagecontrol.io/packages/zoneinfo\">Sublime\nzoneinfo</a> package for <a\nhref=\"https://www.sublimetext.com\">Sublime Text</a> and the <a\nhref=\"https://marketplace.visualstudio.com/items?itemName=gilmoreorless.vscode-zoneinfo\">VSCode\nzoneinfo</a> extension for <a href=\"https://code.visualstudio.com\">Visual\nStudio Code</a>.\n</p>\n<p>\nFor further information about updates, please see\n<a href=\"https://www.rfc-editor.org/rfc/rfc6557\">Procedures for\nMaintaining the Time Zone Database</a> (Internet <abbr>RFC</abbr> 6557).\nMore detail can be\nfound in <a href=\"theory.html\">Theory and pragmatics of the\n<code><abbr>tz</abbr></code> code and data</a>.\n<a href=\"https://a0.github.io/a0-tzmigration/\">A0 TimeZone Migration</a>\ndisplays changes between recent <code><abbr>tzdb</abbr></code> versions.\n</p>\n</section>\n\n<section>\n<h2 id=\"coordinating\">Coordinating with governments and distributors</h2>\n<p>\nAs discussed in\n\"<a href=\"https://www.icann.org/en/blogs/details/how-time-zones-are-coordinated-13-03-2023-en\">How\nTime Zones Are Coordinated</a>\", the time zone database relies on\ncollaboration among governments, the time zone database volunteer\ncommunity, and data distributors downstream.\n<p>\nIf your government plans to change its time zone boundaries or\ndaylight saving rules, please send email to <a\nhref=\"mailto:tz@iana.org\"><code>tz@iana.org</code></a> well in advance,\nas this will lessen confusion and will coordinate updates to many cell phones,\ncomputers, and other devices around the world.\nIn your email, please cite the legislation or regulation that specifies\nthe change, so that it can be checked for details such as the exact times\nwhen clock transitions occur.\nIt is OK if a rule change is planned to affect clocks\nfar into the future, as a long-planned change can easily be reverted\nor otherwise altered with a year's notice before the change would have\naffected clocks.</p>\n<p>\nThere is no fixed schedule for <code><abbr>tzdb</abbr></code> releases.\nHowever, typically a release occurs every few months.\nMany downstream timezone data distributors wait for\na <code><abbr>tzdb</abbr></code> release before they produce an update\nto time zone behavior in consumer devices and software products.\nAfter a release, various parties must integrate, test,\nand roll out an update before <a\nhref=\"https://en.wikipedia.org/wiki/End_user\">end users</a> see changes.\nThese updates can be expensive, for both the <a\nhref=\"https://en.wikipedia.org/wiki/Quality_assurance\">quality\nassurance</a> process and the overall cost of shipping and installing\nupdates to each device's copy of <code><abbr>tzdb</abbr></code>.\nUpdates may be batched with other updates and may take substantial\ntime to reach end users after a release.\nOlder devices may no longer be supported and thus may never be updated,\nwhich means they will continue to use out-of-date rules.</p>\n<p>\nFor these reasons any rule change should be promulgated at least a\nyear before it affects how clocks operate; otherwise, there is a good\nchance that many clocks will be wrong due to delays in propagating updates,\nand that residents will be confused or even actively resist the change.\nThe shorter the notice, the more likely clock problems will arise; see \"<a\nhref=\"https://codeofmatt.com/2016/04/23/on-the-timing-of-time-zone-changes/\">On\nthe Timing of Time Zone Changes</a>\" for examples.\n</p>\n</section>\n\n<section>\n<h2 id=\"commentary\">Commentary on the <code><abbr>tz</abbr></code> database</h2>\n<ul>\n<li>The article\n<a href=\"https://en.wikipedia.org/wiki/Tz_database\">tz database</a> is\nan encyclopedic summary.</li>\n<li><a href=\"tz-how-to.html\">How to Read the\ntz Database Source Files</a> explains the <code><abbr>tz</abbr></code>\ndatabase format.</li>\n<li><a\nhref=\"https://blog.jonudell.net/2009/10/23/a-literary-appreciation-of-the-olsonzoneinfotz-database/\">A\nliterary appreciation of the Olson/Zoneinfo/tz database</a> comments on the\ndatabase's style.</li>\n<li><a href=\"https://doi.org/10.1145/3340301.3341125\">What time is it:\nmanaging time in the internet</a> analyzes the database longitudinally.</li>\n</ul>\n</section>\n\n<section>\n<h2 id=\"web\">Web sites using recent versions of the\n<code><abbr>tz</abbr></code> database</h2>\n<p>\nThese are listed roughly in ascending order of complexity and fanciness.\n</p>\n<ul>\n<li><a href=\"https://time.is\">Time.is</a> shows locations'\ntime and zones.</li>\n<li><a href=\"https://www.timejones.com\">TimeJones.com</a>,\n<a href=\"https://timezoneconverterapp.com\">Time Zone Converter</a> and\n<a href=\"https://www.worldclock.com\">The World Clock</a>\nare time zone converters.</li>\n<li><a href=\"https://timezonedb.com/download\">TimeZoneDB Database</a>\npublishes <code><abbr>tzdb</abbr></code>-derived data in\n<a href=\"https://en.wikipedia.org/wiki/Comma-separated_values\"><abbr\ntitle=\"comma-separated values\">CSV</abbr></a> and\nin <a href=\"https://en.wikipedia.org/wiki/SQL\"><abbr\ntitle=\"Structured Query Language\">SQL</abbr></a> form.</li>\n<li><a\nhref=\"https://twiki.org/cgi-bin/xtra/tzdatepick.html\">Date and Time Gateway</a>\nlets you see the <code><abbr>TZ</abbr></code> values directly.</li>\n<li><a\nhref=\"https://www.convertit.com/Go/ConvertIt/World_Time/Current_Time.ASP\">Current\nTime in 1000 Places</a> uses descriptions of the values.</li>\n<li><a href=\"https://www.timeanddate.com/worldclock/\">The World Clock &ndash;\nWorldwide</a> lets you sort zone names and convert times.</li>\n<li><a href=\"https://24timezones.com\">24TimeZones</a> has a world\ntime map and a time converter.</li>\n<li><a href=\"https://www.zeitverschiebung.net/en/\">Time Difference</a>\ncalculates the current time difference between locations.</li>\n<li><a href=\"https://www.wx-now.com\">Weather Now</a> and\n<a href=\"https://www.thetimenow.com\">The Time Now</a> list the weather too.</li>\n</ul>\n</section>\n\n<section>\n<h2 id=\"protocols\">Network protocols for <code><abbr>tz</abbr></code> data</h2>\n<ul>\n<li>The <a href=\"https://www.ietf.org\">Internet Engineering Task Force</a>'s\n<a href=\"https://datatracker.ietf.org/wg/tzdist/charter/\">Time Zone Data\nDistribution Service (tzdist) working group</a> defined <a\nhref=\"https://www.rfc-editor.org/rfc/rfc7808\">TZDIST</a>\n(Internet <abbr>RFC</abbr> 7808), a time zone data distribution service,\nalong with <a href=\"https://www.rfc-editor.org/rfc/rfc7809\">CalDAV</a>\n(Internet <abbr>RFC</abbr> 7809), a calendar access protocol for\ntransferring time zone data by reference.\n<a href=\"https://devguide.calconnect.org/Time-Zones/TZDS/\">TZDIST\nimplementations</a> are available.\nThe <a href=\"https://www.ietf.org/mailman/listinfo/tzdist-bis\">tzdist-bis\nmailing list</a> discusses possible extensions.</li>\n<li>The <a href=\"https://www.rfc-editor.org/rfc/rfc5545\">\nInternet Calendaring and Scheduling Core Object Specification\n(iCalendar)</a> (Internet <abbr>RFC</abbr> 5445)\ncovers time zone\ndata; see its VTIMEZONE calendar component.\nThe iCalendar format requires specialized parsers and generators; a\nvariant <a href=\"https://www.rfc-editor.org/rfc/rfc6321\">xCal</a>\n(Internet <abbr>RFC</abbr> 6321) uses\n<a href=\"https://www.w3.org/XML/\"><abbr\ntitle=\"Extensible Markup Language\">XML</abbr></a> format, and a variant\n<a href=\"https://www.rfc-editor.org/rfc/rfc7265\">jCal</a>\n(Internet <abbr>RFC</abbr> 7265)\nuses <a href=\"https://www.json.org/json-en.html\"><abbr\ntitle=\"JavaScript Object Notation\">JSON</abbr></a> format.</li>\n</ul>\n</section>\n\n<section>\n<h2 id=\"compilers\">Other <code><abbr>tz</abbr></code> compilers</h2>\n<p>Although some of these do not fully support\n<code><abbr>tz</abbr></code> data, in recent <code><abbr>tzdb</abbr></code>\ndistributions you can generally work around compatibility problems by\nrunning the command <code>make rearguard_tarballs</code> and compiling\nfrom the resulting tarballs instead.</p>\n<ul>\n<li><a href=\"https://github.com/libical/vzic\">Vzic</a> is a <a\nhref=\"https://en.wikipedia.org/wiki/C_(programming_language)\">C</a>\nprogram that compiles\n<code><abbr>tz</abbr></code> source into iCalendar-compatible VTIMEZONE files.\nVzic is freely\navailable under the <a\nhref=\"https://www.gnu.org/copyleft/gpl.html\"><abbr>GNU</abbr>\nGeneral Public License (<abbr\ntitle=\"General Public License\">GPL</abbr>)</a>.</li>\n<li><a href=\"https://sourceforge.net/projects/tzical/\">tziCal &ndash; tz\ndatabase conversion utility</a> is like Vzic, except for the <a\nhref=\"https://dotnet.microsoft.com\">.NET framework</a>\nand with a <abbr>BSD</abbr>-style license.</li>\n<li><a\nhref=\"https://metacpan.org/release/DateTime-TimeZone\">DateTime::TimeZone</a>\ncontains a script <code>parse_olson</code> that compiles\n<code><abbr>tz</abbr></code> source into <a href=\"https://www.perl.org\">Perl</a>\nmodules. It is part of the Perl <a\nhref=\"https://github.com/houseabsolute/DateTime.pm/wiki\">DateTime Project</a>,\nwhich is freely\navailable under both the <abbr>GPL</abbr> and the Perl Artistic\nLicense. DateTime::TimeZone also contains a script\n<code>tests_from_zdump</code> that generates test cases for each clock\ntransition in the <code><abbr>tz</abbr></code> database.</li>\n<li>The <a href=\"https://howardhinnant.github.io/date/tz.html\">Time Zone\nDatabase Parser</a> is a\n<a href=\"https://en.wikipedia.org/wiki/C++\">C++</a> parser and\nruntime library with a <a\nhref=\"https://en.cppreference.com/w/cpp/chrono\"><code>std::chrono</code> API</a>\nthat is a standard part of C++.\nIt is freely available under the\n<abbr title=\"Massachusetts Institute of Technology\">MIT</abbr> license.</li>\n<li><a id=\"ICU\" href=\"https://icu.unicode.org\">International Components for\nUnicode (<abbr>ICU</abbr>)</a> contains C/C++ and <a\nhref=\"https://en.wikipedia.org/wiki/Java_(programming_language)\">Java</a>\nlibraries for internationalization that\nhas a compiler from <code><abbr>tz</abbr></code> source\nand from <abbr title=\"Common Locale Data Repository\">CLDR</abbr> data\n(mentioned <a href=\"#CLDR\">below</a>)\ninto an <abbr>ICU</abbr>-specific format.\n<abbr>ICU</abbr> is freely available under a\n<abbr>BSD</abbr>-style license.</li>\n<li>The <a href=\"https://github.com/lau/tzdata\">Tzdata</a> package for\nthe <a href=\"https://elixir-lang.org\">Elixir</a> language downloads\nand compiles <code><abbr>tz</abbr></code> source and exposes <abbr\ntitle=\"Application Program Interface\">API</abbr>s for use. It is\nfreely available under the <abbr>MIT</abbr> license.</li>\n<li>Java-based compilers and libraries include:\n<ul>\n<li>The <a\nhref=\"https://www.oracle.com/java/technologies/javase/tzupdater-readme.html\">TZUpdater\ntool</a> compiles <code><abbr>tz</abbr></code> source into the format used by\n<a href=\"https://openjdk.org\">OpenJDK</a> and\n<a href=\"https://jdk.java.net\">Oracle JDK</a>.\nAlthough its source code is proprietary, its executable is available under the\n<a href=\"https://www.oracle.com/a/tech/docs/tzupdater-lic.html\">Java SE\nTimezone Updater License Agreement</a>.</li>\n<li>The <a\nhref=\"https://www.oracle.com/technetwork/articles/java/jf14-date-time-2125367.html\">Java\nSE 8 Date and Time</a> <abbr>API</abbr> can be supplemented by <a\nhref=\"https://www.threeten.org/threeten-extra/\">ThreeTen-Extra</a>,\nwhich is freely available under a <abbr>BSD</abbr>-style license.</li>\n<li><a href=\"https://www.joda.org/joda-time/\">Joda-Time &ndash; Java date\nand time <abbr>API</abbr></a> contains a class\n<code>org.joda.time.tz.ZoneInfoCompiler</code> that compiles\n<code><abbr>tz</abbr></code> source into a binary format. It inspired\nJava 8 <code>java.time</code>, which its users should migrate to once\nthey can assume Java 8 or later. It is available under the <a\nhref=\"https://www.apache.org/licenses/LICENSE-2.0\">Apache License</a>.</li>\n<li><a href=\"https://bell-sw.com/pages/iana-updater/\">IANA Updater</a> and <a\nhref=\"https://www.azul.com/products/open-source-tools/ziupdater-time-zone-tool/\">ZIUpdater</a>\nare alternatives to TZUpdater. IANA Updater's license is unclear;\nZIUpdater is licensed under the <abbr>GPL</abbr>.</li>\n<li><a href=\"https://github.com/MenoData/Time4A\">Time4A: Advanced date and\ntime library for Android</a> and\n<a href=\"https://github.com/MenoData/Time4J\">Time4J: Advanced date,\ntime and interval library for Java</a> compile\n<code><abbr>tz</abbr></code> source into a binary format.\nTime4A is available under the Apache License and Time4J is\navailable under the <a\nhref=\"https://www.gnu.org/copyleft/lesser.html\"><abbr>GNU</abbr> Lesser\nGeneral Public License (<abbr title=\"Lesser General Public\nLicense\">LGPL</abbr>)</a>.</li>\n<li><abbr>ICU</abbr> (mentioned <a href=\"#ICU\">above</a>) contains compilers and\nJava-based libraries.</li>\n</ul>\n<li><a href=\"https://nodatime.org\">Noda Time &ndash; Date and\ntime <abbr>API</abbr> for .NET</a>\nis like Joda-Time and Time4J, but for the .NET framework instead of Java.\nIt is freely available under the Apache License.</li>\n<li>Many modern\n<a href=\"https://en.wikipedia.org/wiki/JavaScript\">JavaScript</a>\nruntimes support <code><abbr>tz</abbr></code> natively via the\n<code>timeZone</code> option of <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat\"><code>Intl.DateTimeFormat</code></a>.\nThis can be used as-is or with most of the following libraries,\nmany of which also support runtimes lacking the <code>timeZone</code> option.\n<ul>\n<li>The <a\nhref=\"https://github.com/formatjs/date-time-format-timezone\"><code>Intl.DateTimeFormat</code>\ntimezone polyfill</a>\nis freely available under a <abbr>BSD</abbr>-style license.</li>\n<li>The <a href=\"https://date-fns.org\">date-fns</a>\nlibrary manipulates timezone-aware timestamps in browsers and\nin <a href=\"https://nodejs.org/en/\">Node.js</a>.\nIt is freely available under the <abbr>MIT</abbr> license.</li>\n<li><a href=\"https://github.com/iamkun/dayjs\">Day.js</a> is a\nminimalist replacement for the date and time API of\nthe <a href=\"https://momentjs.com/docs/\">now-legacy Moment.js</a> date\nmanipulation library.\nIt is freely available under the <abbr>MIT</abbr> license.</li>\n<li><a href=\"https://moment.github.io/luxon/\">Luxon</a> improves\ntimezone support for the <code>Intl</code> API.\nIt is freely available under the <abbr>MIT</abbr> license.</li>\n<li><a href=\"https://momentjs.com/timezone/\">Moment Timezone</a> is a\nMoment.js plugin.\nIt is freely available under the <abbr>MIT</abbr> license.</li>\n<li><a href=\"https://github.com/bigeasy/timezone\">Timezone</a> is a\nJavaScript library that supports date arithmetic that is time zone\naware. It is freely available under the <abbr>MIT</abbr> license.</li>\n<li><a href=\"https://www.npmjs.com/package/@tubular/time\">@tubular/time</a>\nsupports live <code><abbr>tzdb</abbr></code> updates,\nastronomical and atomic time, a command-line interface,\nand full <a\nhref=\"https://en.wikipedia.org/wiki/TypeScript\">TypeScript</a>.\nIts companion <a\nhref=\"https://www.npmjs.com/package/@tubular/time-tzdb\">@tubular/time-tzdb</a>\ncan generate <abbr>TZif</abbr> and other files, and a companion website\n<a href=\"https://tzexplorer.org\">Timezone Database Explorer</a> lets you\nconvert timestamps, view transition histories, and download code and data.\nIt is freely available under the <abbr>MIT</abbr> license.</li>\n</ul>\nThe proposed <a\nhref=\"https://github.com/tc39/proposal-temporal\"><code>Temporal</code>\nobjects</a> let programs access an abstract view of\n<code><abbr>tzdb</abbr></code> data, and are designed to replace <a\nhref=\"https://codeofmatt.com/javascript-date-type-is-horribly-broken/\">JavaScript's\nproblematic <code>Date</code> objects</a> when working with dates and times.\n<li><a href=\"https://github.com/JuliaTime\">JuliaTime</a> contains a\ncompiler from <code><abbr>tz</abbr></code> source into\n<a href=\"https://julialang.org\">Julia</a>. It is freely available\nunder the <abbr>MIT</abbr> license.</li>\n<li><a href=\"https://github.com/pavkam/tzdb\"><abbr>TZDB</abbr> &ndash;\n<abbr>IANA</abbr> Time Zone Database for Delphi/<abbr\ntitle=\"Free Pascal Compiler\">FPC</abbr></a>\ncompiles from <code><abbr>tz</abbr></code> source into\n<a href=\"https://en.wikipedia.org/wiki/Object_Pascal\">Object Pascal</a>\nas compiled by <a href=\"https://en.wikipedia.org/wiki/Delphi_(IDE)\">Delphi</a>\nand <a\nhref=\"https://en.wikipedia.org/wiki/Free_Pascal\"><abbr>FPC</abbr></a>.\nIt is freely available under a <abbr>BSD</abbr>-style license.</li>\n<li><a href=\"https://pythonhosted.org/pytz/\">pytz &ndash; World Timezone\nDefinitions for Python</a> compiles <code><abbr>tz</abbr></code> source into\n<a href=\"https://www.python.org\">Python</a>.\nIt is freely available under a <abbr>BSD</abbr>-style license.\nIn code that can assume Python 3.6 or later it is largely superseded; see <a\nhref=\"https://blog.ganssle.io/articles/2018/03/pytz-fastest-footgun.html\">pytz:\nThe Fastest Footgun in the West</a>.</li>\n<li><a href=\"https://tzinfo.github.io\">TZInfo &ndash;\nRuby Timezone Library</a>\ncompiles <code><abbr>tz</abbr></code> source into\n<a href=\"https://www.ruby-lang.org/en/\">Ruby</a>.\nIt is freely available under the <abbr>MIT</abbr> license.</li>\n<li>The <a href=\"https://www.squeaksource.com/Chronos/\">Chronos Date/Time\nLibrary</a> is\na <a href=\"https://en.wikipedia.org/wiki/Smalltalk\">Smalltalk</a> class\nlibrary that compiles <code><abbr>tz</abbr></code> source into a time\nzone repository whose format\nis either proprietary or an <abbr>XML</abbr>-encoded\nrepresentation.</li>\n<li><a id=\"Tcl\" href=\"https://tcl.tk\">Tcl</a>\ncontains a developer-oriented parser that compiles <code><abbr>tz</abbr></code>\nsource into text files, along with a runtime that can read those\nfiles. Tcl is freely available under a <abbr>BSD</abbr>-style\nlicense.</li>\n</ul>\n</section>\n\n<section>\n<h2 id=\"TZif\">Other <abbr>TZif</abbr> readers</h2>\n<ul>\n<li>The <a\nhref=\"https://www.gnu.org/software/libc/\"><abbr>GNU</abbr> C\nLibrary</a>\nhas an independent, thread-safe implementation of\na <abbr>TZif</abbr> file reader.\nThis library is freely available under the LGPL\nand is widely used in <abbr>GNU</abbr>/Linux systems.</li>\n<li><a href=\"https://www.gnome.org\">GNOME</a>'s\n<a href=\"https://developer.gnome.org/glib/\">GLib</a> has\na <abbr>TZif</abbr> file reader written in C that\ncreates a <code>GTimeZone</code> object representing sets\nof <abbr>UT</abbr> offsets.\nIt is freely available under the <abbr>LGPL</abbr>.</li>\n<li>The\n<a href=\"https://github.com/bloomberg/bde/wiki\">BDE Standard Library</a>'s\n<code>baltzo::TimeZoneUtil</code> component contains a C++\nimplementation of a <abbr>TZif</abbr> file reader. It is freely available under\nthe Apache License.</li>\n<li><a href=\"https://github.com/google/cctz\">CCTZ</a> is a simple C++\nlibrary that translates between <abbr>UT</abbr> and civil time and\ncan read <abbr>TZif</abbr> files. It is freely available under the Apache\nLicense.</li>\n<li>The\n<a href=\"https://github.com/nayarsystems/posix_tz_db\"><code>posix_tz_db</code>\npackage</a> contains Python code\nto generate <abbr>CSV</abbr> and <abbr>JSON</abbr> tables that map\n<code><abbr>tz</abbr></code> settings to proleptic TZ approximations.\nFor example, it maps <code>\"Africa/Cairo\"</code>\nto <code>\"EET-2EEST,M4.5.5/0,M10.5.4/24\"</code>,\nan approximation valid for Cairo timestamps from 2023 on.\nThis can help porting to platforms that support only proleptic TZ.\nThe package is freely available under the MIT license.</li>\n<li><a href=\"https://github.com/derickr/timelib\">Timelib</a> is a C\nlibrary that reads <abbr>TZif</abbr> files and converts\ntimestamps from one time zone or format to another.\nIt is used by <a href=\"https://secure.php.net\"><abbr\ntitle=\"PHP: Hypertext Preprocessor\">PHP</abbr></a>,\n<a href=\"https://hhvm.com\"><abbr title=\"HipHop Virtual Machine\">HHVM</abbr></a>,\nand <a href=\"https://www.mongodb.com\">MongoDB</a>.\nIt is freely available under the <abbr>MIT</abbr> license.</li>\n<li>Tcl, mentioned <a href=\"#Tcl\">above</a>, also contains a\n<abbr>TZif</abbr> file reader.</li>\n<li><a href=\"https://metacpan.org/pod/DateTime::TimeZone::Tzfile\">\nDateTime::TimeZone::Tzfile</a>\nis a <abbr>TZif</abbr> file reader written in Perl.\nIt is freely available under the same terms as Perl\n(dual <abbr>GPL</abbr> and Artistic license).</li>\n<li>Python has a <a id=\"python-zoneinfo\"\nhref=\"https://docs.python.org/3/library/zoneinfo.html\"><code>zoneinfo.ZoneInfo</code>\nclass</a> that reads <abbr>TZif</abbr> data and creates objects\nthat represent <code><abbr>tzdb</abbr></code> timezones.\nPython is freely available under the\n<a href=\"https://docs.python.org/3/license.html\">Python Software Foundation\nLicense</a>.\nA companion <a id=\"pypi-tzdata\" href=\"https://pypi.org\">PyPI</a> module\n<a href=\"https://pypi.org/project/tzdata/\"><code>tzdata</code></a>\nsupplies TZif data if the underlying system data cannot be found;\nit is freely available under the Apache License.</li>\n<li>The\npublic-domain <a href=\"https://github.com/dbaron/tz.js\">tz.js</a>\nlibrary contains a Python tool that\nconverts <abbr>TZif</abbr> data into\n<abbr>JSON</abbr>-format data suitable for use\nin its JavaScript library for time zone conversion. Dates before 1970\nare not supported.</li>\n<li>The <a\nhref=\"https://hackage.haskell.org/package/timezone-olson\">timezone-olson</a>\npackage contains <a href=\"https://www.haskell.org\">Haskell</a> code that\nparses and uses <abbr>TZif</abbr> data. It is freely\navailable under a <abbr>BSD</abbr>-style license.</li>\n</ul>\n</section>\n\n<section>\n<h2 id=\"software\">Other <code><abbr>tz</abbr></code>-based time zone software</h2>\n<ul>\n<li><a href=\"https://foxclocks.org\">FoxClocks</a>\nis an extension for <a href=\"https://www.google.com/chrome/\">Google\nChrome</a>, <a\nhref=\"https://www.mozilla.org/en-US/firefox/new/\">Firefox</a> and <a\nhref=\"https://www.mozilla.org/en-US/thunderbird/\">Thunderbird</a>.\nIt displays multiple clocks in the application window, and has a mapping\ninterface to <a href=\"https://www.google.com/earth/\">Google Earth</a>.\nIt is freely available under the <abbr>GPL</abbr>.</li>\n<li><a href=\"https://golang.org\">Go programming language</a>\nimplementations contain a copy of a 32-bit subset of a recent\n<code><abbr>tz</abbr></code> database in a\nGo-specific format.</li>\n<li>Microsoft Windows 8.1\nand later has <code><abbr>tz</abbr></code> data and <abbr>CLDR</abbr>\ndata (mentioned <a href=\"#CLDR\">below</a>) used by the\n<a href=\"https://en.wikipedia.org/wiki/Windows_Runtime\">Windows Runtime</a> /\n<a href=\"https://en.wikipedia.org/wiki/Universal_Windows_Platform\">Universal Windows Platform</a> classes\n<a href=\"https://docs.microsoft.com/uwp/api/Windows.Globalization.DateTimeFormatting.DateTimeFormatter\"><code>DateTimeFormatter</code></a> and\n<a href=\"https://docs.microsoft.com/uwp/api/windows.globalization.calendar\"><code>Calendar</code></a>.\n<a id=\"System.TimeZoneInfo\"\nhref=\"https://blogs.msdn.microsoft.com/bclteam/2007/06/07/exploring-windows-time-zones-with-system-timezoneinfo-josh-free/\">Exploring\nWindows Time Zones with <code>System.TimeZoneInfo</code></a> describes\nthe older, proprietary method of Microsoft Windows 2000 and later,\nwhich stores time zone data in the\n<a href=\"https://en.wikipedia.org/wiki/Windows_Registry\">Windows Registry</a>. The\n<a\nhref=\"https://unicode.org/cldr/charts/latest/supplemental/zone_tzid.html\">Zone &rarr;\nTzid table</a> or <a\nhref=\"https://github.com/unicode-org/cldr/blob/master/common/supplemental/windowsZones.xml\"><abbr>XML</abbr>\nfile</a> of the <abbr>CLDR</abbr> data maps proprietary zone IDs\nto <code><abbr>tz</abbr></code> names.\nThese mappings can be performed programmatically via the <a href=\"https://github.com/mj1856/TimeZoneConverter\">TimeZoneConverter</a> .NET library,\nor the ICU Java and C++ libraries mentioned <a href=\"#ICU\">above</a>.\n<li><a\nhref=\"https://www.oracle.com/java/index.html\">Oracle\nJava</a> contains a copy of a subset of a recent\n<code><abbr>tz</abbr></code> database in a\nJava-specific format.</li>\n</ul>\n</section>\n\n<section>\n<h2 id=\"other-dbs\">Other time zone databases</h2>\n<ul>\n<li><a href=\"https://www.astro.com/atlas\">Time-zone Atlas</a>\nis Astrodienst's Web version of Shanks and Pottenger's out-of-print\ntime zone history atlases\n<a href=\"https://www.worldcat.org/oclc/468828649\">for the US</a> and\n<a href=\"https://www.worldcat.org/oclc/76950459\">for the world</a>.\nAlthough these extensive atlases\n<a href=\"https://astrologynewsservice.com/opinion/how-astrologers-contributed-to-the-information-age-a-brief-history-of-time/\">were\nsources for much of the older <code><abbr>tz</abbr></code> data</a>,\nthey are unreliable as Shanks appears to have\nguessed many <abbr>UT</abbr> offsets and transitions. The atlases cite no\nsources and do not indicate which entries are guesswork.</li>\n<li><a href=\"https://en.wikipedia.org/wiki/HP-UX\">HP-UX</a> has a database in\nits own <code>tztab</code>(4) format.</li>\n<li>Microsoft Windows has proprietary data mentioned\n<a href=\"#System.TimeZoneInfo\">above</a>.</li>\n<li><a href=\"https://www.worldtimeserver.com\">World Time Server</a>\nis another time zone database.</li>\n<li>The <a\nhref=\"https://www.iata.org/publications/store/Pages/standard-schedules-information.aspx\">Standard\nSchedules Information Manual</a> of the\nInternational Air Transport Association\ngives current time zone rules for airports served by commercial aviation.</li>\n</ul>\n</section>\n\n<section>\n<h2 id=\"maps\">Maps</h2>\n<ul>\n<li>The <a\nhref=\"https://www.cia.gov/the-world-factbook/maps/world-regional/\">World\nand Regional Maps section</a> of <em>The World Factbook</em>, published by the\n<a href=\"https://www.cia.gov\">US Central Intelligence\nAgency (<abbr\ntitle=\"Central Intelligence Agency\">CIA</abbr>)</a>, contains a time\nzone map; the\n<a\nhref=\"https://legacy.lib.utexas.edu/maps/world.html\">Perry&ndash;Casta&ntilde;eda\nLibrary Map Collection</a>\nof the University of Texas at Austin has copies of\nrecent editions.\nThe pictorial quality is good,\nbut the maps do not indicate daylight saving time,\nand parts of the data are a few years out of date.</li>\n<li><a href=\"https://www.worldtimezone.com\">World Time Zone Map\nwith current time</a>\nhas several fancy time zone maps; it covers Russia particularly well.\nThe maps' pictorial quality is not quite as good as the\n<abbr>CIA</abbr>'s\nbut the maps are more up to date.</li>\n<li><a\nhref=\"https://blog.poormansmath.net/how-much-is-time-wrong-around-the-world/\">How\nmuch is time wrong around the world?</a> maps the difference between\nmean solar and standard time, highlighting areas such as western China\nwhere the two differ greatly. It's a bit out of date, unfortunately.</li>\n</ul>\n</section>\n\n<section>\n<h2 id=\"boundaries\">Time zone boundaries</h2>\n<p>Geographical boundaries between timezones are available\nfrom several <a\nhref=\"https://en.wikipedia.org/wiki/Internet_geolocation\">Internet\ngeolocation</a>\nservices and other sources.</p>\n<ul>\n<li><a href=\"https://github.com/evansiroky/timezone-boundary-builder\">Timezone\nBoundary Builder</a> extracts\n<a href=\"https://www.openstreetmap.org\">Open Street Map</a> data to build\nboundaries of <code><abbr>tzdb</abbr></code> timezones.\nIts code is freely available under the <abbr>MIT</abbr> license, and\nits data entries are freely available under the\n<a href=\"https://opendatacommons.org/licenses/odbl/\">Open Data Commons\nOpen Database License</a>. The borders appear to be quite accurate.\nIts main web page lists more than twenty libraries\nfor looking up a timezone name from a GPS coordinate.</li>\n<li>Free access via a network API, if you register a key, is provided by\nthe <a\nhref=\"https://www.geonames.org/export/web-services.html#timezone\">GeoNames\nTimezone web service</a>, the <a\nhref=\"https://developers.google.com/maps/documentation/timezone/intro\">Google\nMaps Time Zone API</a>, and\nthe <a href=\"https://timezonedb.com/api\">TimeZoneDB API</a>.\nCommercial network API access is provided\nby <a href=\"https://askgeo.com\">AskGeo</a>\nand <a href=\"https://www.geogarage.com/blog/news-1/post/geogarage-time-zone-api-31\">GeoGarage</a>.\n</li>\n<li>\"<a\nhref=\"https://stackoverflow.com/questions/16086962/how-to-get-a-time-zone-from-a-location-using-latitude-and-longitude-coordinates/16086964\">How\nto get a time zone from a location using latitude and longitude\ncoordinates?</a>\" discusses other geolocation possibilities.</li>\n<li><a href=\"http://statoids.com/statoids.html\">Administrative\nDivisions of Countries (\"Statoids\")</a> lists\npolitical subdivision data related to time zones.</li>\n<li><a href=\"https://manifold.net/info/freestuff.shtml\">Manifold Software\n&ndash; GIS and Database Tools</a> includes a Manifold-format map of\nworld time zone boundaries circa 2007, distributed under the\n<abbr>GPL</abbr>.</li>\n<li>A ship within the <a\nhref=\"https://en.wikipedia.org/wiki/Territorial_waters\">territorial\nwaters</a> of any nation uses that nation's time. In international\nwaters, time zone boundaries are meridians 15&deg; apart, except that\n<abbr>UT</abbr>&minus;12 and <abbr>UT</abbr>+12 are each 7.5&deg;\nwide and are separated by\nthe 180&deg; meridian (not by the International Date Line, which is\nfor land and territorial waters only). A captain can change ship's\nclocks any time after entering a new time zone; midnight changes are\ncommon.</li>\n</ul>\n</section>\n\n<section>\n<h2 id=\"civil\">Civil time concepts and history</h2>\n<ul>\n<li><a href=\"https://www.nist.gov/pml/time-and-frequency-division/popular-links/walk-through-time\">A\nWalk through Time</a>\nsurveys the evolution of timekeeping.</li>\n<li>The history of daylight saving time is surveyed in <a\nhref=\"http://www.webexhibits.org/daylightsaving/\">About Daylight\nSaving Time &ndash; History, rationale, laws &amp; dates</a> and summarized in\n<a href=\"http://seizethedaylight.com/dst/\">A Brief\nHistory of Daylight Saving Time</a>.</li>\n<li><a href=\"https://www.laphamsquarterly.org/roundtable/time-lords\">Time\nLords</a> discusses how authoritarians manipulate civil time.</li>\n<li><a href=\"https://www.w3.org/TR/timezone/\">Working with Time Zones</a>\ncontains guidelines and best practices for software applications that\ndeal with civil time.</li>\n<li><a href=\"https://webspace.science.uu.nl/~gent0113/idl/idl.htm\">A History of\nthe International Date Line</a> tells the story of the most important\ntime zone boundary.</li>\n<li><a href=\"http://statoids.com/tconcept.html\">Basic Time\nZone Concepts</a> discusses terminological issues behind time zones.</li>\n</ul>\n</section>\n\n<section>\n<h2 id=\"national\">National histories of legal time</h2>\n<dl>\n<dt>Australia</dt>\n<dd>The Parliamentary Library commissioned a <a\nhref=\"https://parlinfo.aph.gov.au/parlInfo/download/library/prspub/359V6/upload_binary/359v60.pdf\">research\npaper on daylight saving time in Australia</a>.\nThe Bureau of Meteorology publishes a list of <a\nhref=\"http://www.bom.gov.au/climate/averages/tables/dst_times.shtml\">Implementation\nDates of Daylight Savings Time within Australia</a>.</dd>\n<dt>Belgium</dt>\n<dd>The Royal Observatory of Belgium maintains a table of time in\nBelgium (in\n<a href=\"https://robinfo.oma.be/nl/astro-info/tijd/\"\nhreflang=\"nl\">Dutch</a> and <a\nhref=\"https://robinfo.oma.be/fr/astro-info/heure/\"\nhreflang=\"fr\">French</a>).</dd>\n<dt>Brazil</dt>\n<dd>The Time Service Department of the National Observatory\nrecords <a href=\"http://pcdsh01.on.br/DecHV.html\"\nhreflang=\"pt-BR\">Brazil's daylight saving time decrees (in\nPortuguese)</a>.</dd>\n<dt>Canada</dt>\n<dd>National Research Council Canada publishes current\nand some older information about <a\nhref=\"https://nrc.canada.ca/en/certifications-evaluations-standards/canadas-official-time/time-zones-daylight-saving-time\">time\nzones and daylight saving time</a>.</dd>\n<dt>Chile</dt>\n<dd>The Hydrographic and Oceanographic Service of the Chilean Navy publishes a\n<a href=\"https://www.horaoficial.cl/historia_hora.php\" hreflang=\"es\">history of\nChile's official time (in Spanish)</a>.</dd>\n<dt>China</dt>\n<dd>The Hong Kong Observatory maintains a\n<a href=\"https://www.hko.gov.hk/en/gts/time/Summertime.htm\">history of\n summer time in Hong Kong</a>,\nand Macau's Meteorological and Geophysical Bureau maintains a <a\nhref=\"https://www.smg.gov.mo/en/subpage/224/page/174\">similar\nhistory for Macau</a>.\nUnfortunately the latter is incomplete and has errors.</dd>\n<dt>Czech Republic</dt>\n<dd><a href=\"https://kalendar.beda.cz/kdy-zacina-a-konci-letni-cas\"\nhreflang=\"cs\">When daylight saving time starts and ends (in Czech)</a>\nsummarizes and cites historical <abbr>DST</abbr> regulations.</dd>\n<dt>Germany</dt>\n<dd>The National Institute for Science and Technology maintains the <a\nhref=\"https://www.ptb.de/cms/en/fachabteilungen/abt4/fb-44/ag-441/realisation-of-legal-time-in-germany.html\">Realisation\nof Legal Time in Germany</a>.</dd>\n<dt>Israel</dt>\n<dd><a\nhref=\"https://tz.cs.huji.ac.il\">Israel Timezone Files</a>\nlists official time-change announcements and laws since 1940,\nalmost all in Hebrew.</dd>\n<dt>Malaysia</dt>\n<dd>See Singapore <a href=\"#Singapore\">below</a>.</dd>\n<dt>Mexico</dt>\n<dd>The Investigation and Analysis Service of the Mexican Library of\nCongress has published a <a\nhref=\"https://www.diputados.gob.mx/bibliot/publica/inveyana/polisoc/horver/index.htm\"\nhreflang=\"es\">history of Mexican local time (in Spanish)</a>.</dd>\n<dt>Netherlands</dt>\n<dd><a href=\"https://webspace.science.uu.nl/~gent0113/wettijd/wettijd.htm\"\nhreflang=\"nl\">Legal time in the Netherlands (in Dutch)</a>\ncovers the history of local time in the Netherlands from ancient times.</dd>\n<dt>New Zealand</dt>\n<dd>The Department of Internal Affairs maintains a brief <a\nhref=\"https://www.dia.govt.nz/Daylight-Saving-History\">History of\nDaylight Saving</a>.</dd>\n<dt>Palestine</dt>\n<dd>The Ministry of Telecom and IT publishes a <a\nhref=\"https://mtit.pna.ps/home/TimeZone\"\nhreflang=\"ar\">history of clock changes (in Arabic)</a>.</dd>\n<dt>Portugal</dt>\n<dd>The Lisbon Astronomical Observatory publishes a\n<a href=\"https://oal.ul.pt/hora-legal/\" hreflang=\"pt\">history of\nlegal time (in Portuguese)</a>.</dd>\n<dt>Singapore</dt>\n<dd><a id=\"Singapore\"\nhref=\"https://web.archive.org/web/20190822231045/http://www.math.nus.edu.sg/~mathelmr/teaching/timezone.html\">Why\nis Singapore in the \"Wrong\" Time Zone?</a> details the\nhistory of legal time in Singapore and Malaysia.</dd>\n<dt>United Kingdom</dt>\n<dd><a\nhref=\"https://www.polyomino.org.uk/british-time/\">History of\nlegal time in Britain</a> discusses in detail the country\nwith perhaps the best-documented history of clock adjustments.</dd>\n<dt>United States</dt>\n<dd>The Department of Transportation's <a\nhref=\"https://www.transportation.gov/regulations/recent-time-zone-proceedings\">Recent\nTime Zone Proceedings</a> lists changes to\nofficial written time zone boundaries, and its <a\nhref=\"https://geodata.bts.gov/datasets/usdot::time-zones/about\">Time\nZones dataset</a> maps current boundaries.\nThese boundaries are only for standard time, so the current map puts\nall of Arizona in one time zone even though part of Arizona\nobserves <abbr>DST</abbr> and part does not.</dd>\n<dt>Uruguay</dt>\n<dd>The Oceanography, Hydrography, and Meteorology Service of the Uruguayan\nNavy (SOHMA) publishes an annual <a\nhref=\"https://sohma.armada.mil.uy/index.php/servicios/datos-astronomicos\" hreflang=\"es\">almanac\n(in Spanish)</a>.</dd>\n</dl>\n</section>\n\n<section>\n<h2 id=\"costs\">Costs and benefits of time shifts</h2>\n<p>Various sources argue for and against daylight saving time and time\nzone shifts, and many scientific studies have been conducted. This\nsection summarizes reviews and position statements based on\nscientific literature in the area.</p>\n<ul>\n<li>In 2022 the American Medical Association issued a\n<a href=\"https://www.ama-assn.org/press-center/press-releases/ama-calls-permanent-standard-time\">statement\nsupporting permanent standard time</a> on health grounds.</li>\n<li>Carey RN, Sarma KM.\n<a href=\"https://bmjopen.bmj.com/content/7/6/e014319.long\">Impact of\ndaylight saving time on road traffic collision risk: a systematic\nreview</a>.\n<em>BMJ Open.</em> 2017;7(6):e014319. doi:<a href=\"https://doi.org/10.1136/bmjopen-2016-014319\">10.1136/bmjopen-2016-014319</a>.\nThis reviews research literature and concludes that the evidence\nneither supports nor refutes road safety benefits from\nshifts in time zones.</li>\n<li>Havranek T, Herman D, Irsova D.\n<a href=\"https://www.iaee.org/en/publications/ejarticle.aspx?id=3051\">Does\ndaylight saving save electricity? A meta-analysis</a>.\n<em>Energy J.</em> 2018;39(2):35&ndash;61.\ndoi:<a href=\"https://doi.org/10.5547/01956574.39.2.thav\">10.5547/01956574.39.2.thav</a>.\nThis analyzes research literature and concludes, \"Electricity savings\nare larger for countries farther away from the equator, while\nsubtropical regions consume more electricity because of <abbr>DST</abbr>.\"</li>\n<li>Malow BA. <a\nhref=\"https://academic.oup.com/sleep/article/45/12/zsac236/6717940\">It is time\nto abolish the clock change and adopt permanent\nstandard time in the United States:\na Sleep Research Society position statement</a>.\n<em>Sleep.</em> 2022;45(12):zsac236.\ndoi:<a href=\"https://doi.org/10.1093/sleep/zsac236\">10.1093/sleep/zsac236</a>.\nAfter reviewing the scientific literature, the Sleep Research Society\nadvocates permanent standard time due to its health benefits.\n<li>Rishi MA, Cheng JY, Strang AR <em>et al</em>.\n<a href=\"https://jcsm.aasm.org/doi/10.5664/jcsm.10898\">Permanent standard time\nis the optimal choice for health and safety:\nan American Academy of Sleep Medicine position statement</a>.\n<em>J Clin Sleep Med.</em> 2024;20(1):121&ndash;125.\ndoi:<a href=\"https://doi.org/10.5664/jcsm.10898\">10.5664/jcsm.10898</a>.\nThe AASM argues for permanent standard time due to health and safety risks\nand economic costs of both <abbr>DST</abbr> transitions and\npermanent <abbr>DST</abbr>.</li>\n<li>Roenneberg T, Wirz-Justice A, Skene DJ <em>et al</em>.\n<a href=\"https://journals.sagepub.com/doi/10.1177/0748730419854197\">Why\nshould we abolish Daylight Saving Time?</a>\n<em>J Biol Rhythms.</em> 2019;34(3):227&ndash;230.\ndoi:<a href=\"https://doi.org/10.1177/0748730419854197\">10.1177/0748730419854197</a>.\nThe Society for Research on Biological Rhythms\nopposes <abbr>DST</abbr> changes and permanent <abbr>DST</abbr>,\nand advocates that governments adopt\n\"permanent Standard Time for the health and safety of their citizens\".</li>\n</ul>\n</section>\n\n<section>\n<h2 id=\"precision\">Precision timekeeping</h2>\n<ul>\n<li><a\nhref=\"http://leapsecond.com/hpan/an1289.pdf\">The\nScience of Timekeeping</a> is a thorough introduction\nto the theory and practice of precision timekeeping.</li>\n<li><a href=\"https://doi.org/10.1007/978-3-319-59909-0\">The Science of\nTime 2016</a> contains several freely readable papers.</li>\n<li><a href=\"https://www.ntp.org\"><abbr\ntitle=\"Network Time Protocol\">NTP</abbr>: The Network\nTime Protocol</a> (Internet <abbr>RFC</abbr> 5905)\ndiscusses how to synchronize clocks of\nInternet hosts.</li>\n<li>The <a href=\"https://www.usenix.org/system/files/conference/nsdi18/nsdi18-geng.pdf\"><span style=\"font-variant: small-caps\">Huygens</span></a>\nfamily of software algorithms can achieve accuracy to a few tens of\nnanoseconds in scalable server farms without special hardware.</li>\n<li>The <a\nhref=\"https://www.nist.gov/intelligent-systems-division/ieee-1588\">Precision\nTime Protocol</a> (<abbr\ntitle=\"Institute of Electrical and Electronics Engineers\">IEEE</abbr> 1588)\ncan achieve submicrosecond clock accuracy on a local area network\nwith special-purpose hardware.</li>\n<li><a\nhref=\"https://www.rfc-editor.org/rfc/rfc4833\">Timezone\nOptions for <abbr title=\"Dynamic Host Configuration Protocol\">DHCP</abbr></a>\n(Internet <abbr>RFC</abbr> 4833)\nspecifies a <a\nhref=\"https://en.wikipedia.org/wiki/Dynamic_Host_Configuration_Protocol\"><abbr>DHCP</abbr></a>\noption for a server to configure\na client's time zone and daylight saving settings automatically.</li>\n<li><a href=\"https://www.ucolick.org/~sla/leapsecs/timescales.html\">Time\nScales</a> describes astronomical time scales like\n<abbr title=\"Terrestrial Dynamic Time\">TDT</abbr>,\n<abbr title=\"Geocentric Coordinate Time\">TCG</abbr>, and\n<abbr title=\"Barycentric Dynamic Time\">TDB</abbr>.\n<li>The <a href=\"https://www.iau.org\"><abbr\ntitle=\"International Astronomical Union\">IAU</abbr></a>'s <a\nhref=\"https://www.iausofa.org\"><abbr\ntitle=\"Standards Of Fundamental Astronomy\">SOFA</abbr></a>\ncollection contains C and <a\nhref=\"https://en.wikipedia.org/wiki/Fortran\">Fortran</a>\ncode for converting among time scales like\n<abbr title=\"International Atomic Time\">TAI</abbr>,\n<abbr>TDB</abbr>, <abbr>TDT</abbr> and\n<abbr>UTC</abbr>. It is freely available under the\n<a href=\"https://www.iausofa.org/tandc.html\">SOFA license</a>.</li>\n<li><a\nhref=\"https://www.giss.nasa.gov/tools/mars24/help/notes.html\">Mars24 Sunclock\n&ndash; Time on Mars</a> describes Airy Mean Time (<abbr>AMT</abbr>) and the\ndiverse local time\nscales used by each landed mission on Mars.</li>\n<li><a href=\"http://leapsecond.com\">LeapSecond.com</a> is\ndedicated not only to leap seconds but to precise time and frequency\nin general. It covers the state of the art in amateur timekeeping, and\nhow the art has progressed over the past few decades.</li>\n<li>The rules for leap seconds are specified in Annex 1 (Time scales) of <a\nhref=\"https://www.itu.int/rec/R-REC-TF.460-6-200202-I/\">Standard-frequency\nand time-signal emissions</a>, International Telecommunication Union &ndash;\nRadiocommunication Sector (ITU-R) Recommendation TF.460-6 (02/2002).</li>\n<li><a\nhref=\"https://www.iers.org/IERS/EN/Publications/Bulletins/bulletins.html\"><abbr\ntitle=\"International Earth Rotation and Reference Systems Service\">IERS</abbr>\nBulletins</a> contains official publications of the International\nEarth Rotation and Reference Systems Service, which decides when leap\nseconds occur. The <code><abbr>tz</abbr></code> code and data support leap seconds\nvia an optional \"<code>right</code>\" configuration where a computer's internal\n<code>time_t</code> integer clock counts every <abbr>TAI</abbr> second,\nas opposed to the default \"<code>posix</code>\" configuration\nwhere the internal clock ignores leap seconds.\nThe two configurations agree for timestamps starting with 1972-01-01 00:00:00\n<abbr>UTC</abbr> (<code>time_t</code> 63&thinsp;072&thinsp;000) and diverge for\ntimestamps starting with <code>time_t</code> 78&thinsp;796&thinsp;800,\nwhich corresponds to the first leap second\n1972-06-30 23:59:60 <abbr>UTC</abbr> in the \"<code>right</code>\" configuration,\nand to\n1972-07-01 00:00:00 <abbr>UTC</abbr> in the \"<code>posix</code>\" configuration.\nIn practice the two configurations also agree for timestamps before\n1972 even though the historical situation is messy, partly because\nneither <abbr>UTC</abbr> nor <abbr>TAI</abbr>\nis well-defined for sufficiently old timestamps.</li>\n<li><a href=\"https://kb.meinbergglobal.com/kb/time_sync/ntp/configuration/ntp_leap_second_file\">The\n<abbr>NTP</abbr> Leap Second File</a> covers the text file\n<code>leap-seconds.list</code>, which lists the currently known leap seconds.\nThe <abbr>IERS</abbr> maintains this file, and a copy is distributed by\n<code><abbr>tzdb</abbr></code> for use by <abbr>NTP</abbr> implementations like\n<a href=\"https://www.ntp.org\">classic\n<code><abbr title=\"Network Time Protocol Daemon\">ntpd</abbr></code></a>\nand <a href=\"https://ntpsec.org\">NTPsec</a>.\nThe <code><abbr>tz</abbr></code> database also distributes leap second\ninformation in a differently-formatted <code>leapseconds</code> text file,\nas well as in the \"<code>right</code>\" configuration in binary form; for\nexample, <code>right/UTC</code> can be used\nby <a href=\"https://chrony-project.org\"><code>chrony</code></a>,\nanother <abbr>NTP</abbr> implementation.</li>\n<li><a href=\"https://developers.google.com/time/smear\">Leap Smear</a>\ndiscusses how to gradually adjust <abbr>POSIX</abbr> clocks near a\nleap second so that they disagree with <abbr>UTC</abbr> by at most a\nhalf second, even though every <abbr>POSIX</abbr> minute has exactly\nsixty seconds. This approach works with the default <code><abbr>tz</abbr></code>\n\"<code>posix</code>\" configuration, is <a\nhref=\"http://bk1.ntp.org/ntp-stable/README.leapsmear\">supported</a> by\nthe abovementioned <abbr>NTP</abbr> implementations, <a\nhref=\"https://github.com/google/unsmear\">supports</a> conversion between\n<abbr>UTC</abbr> and smeared <abbr>POSIX</abbr> timestamps, and is used by major\ncloud service providers. However, according to\n<a href=\"https://www.rfc-editor.org/rfc/rfc8633#section-3.7.1\">&sect;3.7.1 of\nNetwork Time Protocol Best Current Practices</a>\n(Internet <abbr>RFC</abbr> 8633), leap smearing is not suitable for\napplications requiring accurate <abbr>UTC</abbr> or civil time,\nand is intended for use only in single, well-controlled environments.</li>\n<li>The <a\nhref=\"https://pairlist6.pair.net/mailman/listinfo/leapsecs\">Leap\nSecond Discussion List</a> covers <a\nhref=\"https://www2.unb.ca/gge/Resources/gpsworld.november99.pdf\">McCarthy\nand Klepczynski's 1999 proposal to discontinue leap seconds</a>,\ndiscussed further in\n<a href=\"https://www.cl.cam.ac.uk/~mgk25/time/metrologia-leapsecond.pdf\">The\nleap second: its history and possible future</a>.\n<a href=\"https://www.ucolick.org/~sla/leapsecs/\"><abbr>UTC</abbr>\nmight be redefined\nwithout Leap Seconds</a> gives pointers on this\ncontentious issue.\nThe General Conference on Weights and Measures\n<a href=\"https://www.bipm.org/en/cgpm-2022/resolution-4\">decided in 2022</a>\nto discontinue the use of leap seconds by 2035, and requested that no\ndiscontinuous adjustments be made to UTC for at least a century.\nThe World Radiocommunication Conference <a\nhref=\"https://www.itu.int/dms_pub/itu-r/opb/act/R-ACT-WRC.15-2023-PDF-E.pdf\">resolved\nin 2023</a> to cooperate with this process.\n<a href=\"https://www.preprints.org/manuscript/202406.0043/v1\">A proposal\nto change the leap-second adjustments to Coordinated Universal Time</a>\n(doi:<a href=\"https://doi.org/10.1088/1681-7575/ad6266\">10.1088/1681-7575/ad6266</a>)\nwould replace leap seconds with 13-second leap smears occurring once per\ndecade until 2100, with leap smears after that gradually increasing in size.\nHowever, there is still no consensus on whether this is the best way\nto replace leap seconds.\n</li>\n</ul>\n</section>\n\n<section>\n<h2 id=\"notation\">Time notation</h2>\n<ul>\n<li>The <a id=\"CLDR\" href=\"https://cldr.unicode.org\">Unicode Common Locale Data\nRepository (<abbr>CLDR</abbr>) Project</a> has localizations for time\nzone names, abbreviations, identifiers, and formats. For example, it\ncontains French translations for \"Eastern European Summer Time\",\n\"<abbr title=\"Eastern European Summer Time\">EEST</abbr>\", and\n\"Bucharest\". Its\n<a href=\"https://unicode.org/cldr/charts/latest/by_type/\">by-type\ncharts</a> show these values for many locales. Data values are available in\nboth <abbr title=\"Locale Data Markup Language\">LDML</abbr>\n(an <abbr>XML</abbr> format) and <abbr>JSON</abbr>.\n<li>\n<a href=\"https://www.cl.cam.ac.uk/~mgk25/iso-time.html\">A summary of\nthe international standard date and time notation</a> covers\n<a\nhref=\"https://www.iso.org/standard/70907.html\"><em><abbr\ntitle=\"International Organization for Standardization\">ISO</abbr>\n8601-1:2019 &ndash; Date and time &ndash; Representations for information\ninterchange &ndash; Part 1: Basic rules</em></a>.</li>\n<li>\n<a href=\"https://www.w3.org/TR/xmlschema/#dateTime\"><abbr>XML</abbr>\nSchema: Datatypes &ndash; dateTime</a> specifies a format inspired by\n<abbr>ISO</abbr> 8601 that is in common use in <abbr>XML</abbr> data.</li>\n<li><a href=\"https://www.rfc-editor.org/rfc/rfc5322#section-3.3\">&sect;3.3 of\nInternet Message Format</a> (Internet <abbr>RFC</abbr> 5322)\nspecifies the time notation used in email and <a\nhref=\"https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol\"><abbr>HTTP</abbr></a>\nheaders.</li>\n<li>\n<a href=\"https://www.rfc-editor.org/rfc/rfc3339\">Date and Time\non the Internet: Timestamps</a> (Internet <abbr>RFC</abbr> 3339)\nspecifies an <abbr>ISO</abbr> 8601 profile for use in new Internet protocols.\nAn extension, <a href=\"https://www.rfc-editor.org/rfc/rfc9557\">Date\nand Time on the Internet: Timestamps with Additional Information</a>\n(Internet <abbr>RFC</abbr> 9557) extends this profile\nto let you specify the <code><abbr>tzdb</abbr></code> timezone of a timestamp\nvia suffixes like \"<code>[Asia/Tokyo]</code>\".\n<li>\n<a href=\"https://web.archive.org/web/20190130042457/https://www.hackcraft.net/web/datetime/\">Date &amp; Time\nFormats on the Web</a> surveys web- and Internet-oriented date and time\nformats.</li>\n<li>Alphabetic time zone abbreviations should not be used as unique\nidentifiers for <abbr>UT</abbr> offsets as they are ambiguous in\npractice. For example, in English-speaking North America\n\"<abbr>CST</abbr>\" denotes 6 hours behind <abbr>UT</abbr>,\nbut in China it denotes 8 hours ahead of <abbr>UT</abbr>,\nand French-speaking North Americans prefer\n\"<abbr title=\"Heure Normale du Centre\">HNC</abbr>\" to\n\"<abbr>CST</abbr>\". The <code><abbr>tz</abbr></code>\ndatabase contains English abbreviations for many timestamps;\nunfortunately some of these abbreviations were merely the database maintainers'\ninventions, and these have been removed when possible.</li>\n<li>Numeric time zone abbreviations typically count hours east of\n<abbr>UT</abbr>, e.g., +09 for Japan and\n&minus;10 for Hawaii. However, <abbr>POSIX</abbr> proleptic\n<code><abbr>TZ</abbr></code> settings use the opposite convention.\nFor example, one might use <code><abbr>TZ</abbr>=\"<abbr\ntitle=\"Japan Standard Time\">JST</abbr>-9\"</code> and\n<code><abbr>TZ</abbr>=\"<abbr title=\"Hawaii Standard Time\">HST</abbr>10\"</code>\nfor Japan and Hawaii, respectively. If the\n<code><abbr>tz</abbr></code> database is available, it is usually better to use\nsettings like <code><abbr>TZ</abbr>=\"Asia/Tokyo\"</code> and\n<code><abbr>TZ</abbr>=\"Pacific/Honolulu\"</code> instead, as this should avoid\nconfusion, handle old timestamps better, and insulate you better from\nany future changes to the rules. One should never set\n<abbr>POSIX</abbr> <code><abbr>TZ</abbr></code> to a value like\n<code>\"GMT-9\"</code>, though, since this would incorrectly imply that\nlocal time is nine hours ahead of <abbr>UT</abbr> and the time zone\nis called \"<abbr>GMT</abbr>\".</li>\n</ul>\n</section>\n\n<section>\n<h2 id=\"see-also\">See also</h2>\n<ul>\n<li><a href=\"theory.html\">Theory and pragmatics of the\n<code><abbr>tz</abbr></code> code and data</a></li>\n<li><a href=\"tz-art.html\">Time and the Arts</a></li>\n</ul>\n</section>\n\n<footer>\n<hr>\nThis web page is in the public domain, so clarified as of\n2009-05-17 by Arthur David Olson.\n<br>\nPlease send corrections to this web page to the\n<a href=\"mailto:tz@iana.org\">time zone mailing list</a>.\n</footer>\n</body>\n</html>\n"
        },
        {
          "name": "tzfile.5",
          "type": "blob",
          "size": 19.0908203125,
          "content": ".\\\" This file is in the public domain, so clarified as of\n.\\\" 1996-06-05 by Arthur David Olson.\n.TH tzfile 5 \"\" \"Time Zone Database\"\n.SH NAME\ntzfile \\- timezone information\n.SH DESCRIPTION\n.ie '\\(lq'' .ds lq \\&\"\\\"\n.el .ds lq \\(lq\\\"\n.ie '\\(rq'' .ds rq \\&\"\\\"\n.el .ds rq \\(rq\\\"\n.de q\n\\\\$3\\*(lq\\\\$1\\*(rq\\\\$2\n..\nThe timezone information files used by\n.BR tzset (3)\nare typically found under a directory with a name like\n.IR /usr/share/zoneinfo .\nThese files use the format described in Internet RFC 9636.\nEach file is a sequence of 8-bit bytes.\nIn a file, a binary integer is represented by a sequence of one or\nmore bytes in network order (bigendian, or high-order byte first),\nwith all bits significant,\na signed binary integer is represented using two's complement,\nand a boolean is represented by a one-byte binary integer that is\neither 0 (false) or 1 (true).\nThe format begins with a 44-byte header containing the following fields:\n.RS \"\\w'  'u\"\n.IP \\(bu \"\\w'\\(bu  'u\"\nThe magic four-byte ASCII sequence\n.q \"TZif\"\nidentifies the file as a timezone information file.\n.IP \\(bu\nA byte identifying the version of the file's format\n(as of 2021, either an ASCII NUL,\n.q \"2\",\n.q \"3\",\nor\n.q \"4\" ).\n.IP \\(bu\nFifteen bytes containing zeros reserved for future use.\n.IP \\(bu\nSix four-byte integer values, in the following order:\n.RS \"\\w'\\(bu    'u\"\n.TP \"\\w'  'u\"\n.B tzh_ttisutcnt\nThe number of UT/local indicators stored in the file.\n(UT is Universal Time.)\n.TP\n.B tzh_ttisstdcnt\nThe number of standard/wall indicators stored in the file.\n.TP\n.B tzh_leapcnt\nThe number of leap seconds for which data entries are stored in the file.\n.TP\n.B tzh_timecnt\nThe number of transition times for which data entries are stored\nin the file.\n.TP\n.B tzh_typecnt\nThe number of local time types for which data entries are stored\nin the file (must not be zero).\n.TP\n.B tzh_charcnt\nThe number of bytes of time zone abbreviation strings\nstored in the file.\n.RE\n.RE\n.PP\nThe above header is followed by the following fields, whose lengths\ndepend on the contents of the header:\n.RS \"\\w'  'u\"\n.IP \\(bu \"\\w'\\(bu  'u\"\n.B tzh_timecnt\nfour-byte signed integer values sorted in ascending order.\nThese values are written in network byte order.\nEach is used as a transition time (as returned by\n.BR time (2))\nat which the rules for computing local time change.\n.IP \\(bu\n.B tzh_timecnt\none-byte unsigned integer values;\neach one but the last tells which of the different types of local time types\ndescribed in the file is associated with the time period\nstarting with the same-indexed transition time\nand continuing up to but not including the next transition time.\n(The last time type is present only for consistency checking with the\nproleptic TZ string described below.)\nThese values serve as indices into the next field.\n.IP \\(bu\n.B tzh_typecnt\n.B ttinfo\nentries, each defined as follows:\n.in +2\n.sp\n.nf\n.ta \\w'\\0\\0\\0\\0'u +\\w'unsigned char\\0'u\nstruct ttinfo {\n\tint32_t\ttt_utoff;\n\tunsigned char\ttt_isdst;\n\tunsigned char\ttt_desigidx;\n};\n.in\n.fi\n.sp\nEach structure is written as a four-byte signed integer value for\n.BR tt_utoff ,\nin network byte order, followed by a one-byte boolean for\n.B tt_isdst\nand a one-byte value for\n.BR tt_desigidx .\nIn each structure,\n.B tt_utoff\ngives the number of seconds to be added to UT,\n.B tt_isdst\ntells whether\n.B tm_isdst\nshould be set by\n.BR localtime (3)\nand\n.B tt_desigidx\nserves as an index into the array of time zone abbreviation bytes\nthat follow the\n.B ttinfo\nentries in the file; if the designated string is \"\\-00\", the\n.B ttinfo\nentry is a placeholder indicating that local time is unspecified.\nThe\n.B tt_utoff\nvalue is never equal to \\-2**31, to let 32-bit clients negate it without\noverflow.\nAlso, in realistic applications\n.B tt_utoff\nis in the range [\\-89999, 93599] (i.e., more than \\-25 hours and less\nthan 26 hours); this allows easy support by implementations that\nalready support the POSIX-required range [\\-24:59:59, 25:59:59].\n.IP \\(bu\n.B tzh_charcnt\nbytes that represent time zone designations,\nwhich are null-terminated byte strings, each indexed by the\n.B tt_desigidx\nvalues mentioned above.\nThe byte strings can overlap if one is a suffix of the other.\nThe encoding of these strings is not specified.\n.IP \\(bu\n.B tzh_leapcnt\npairs of four-byte values, written in network byte order;\nthe first value of each pair gives the non-negative time\n(as returned by\n.BR time (2))\nat which a leap second occurs or at which the leap second table expires;\nthe second is a signed integer specifying the correction, which is the\n.I total\nnumber of leap seconds to be applied during the time period\nstarting at the given time.\nThe pairs of values are sorted in strictly ascending order by time.\nEach pair denotes one leap second, either positive or negative,\nexcept that if the last pair has the same correction as the previous one,\nthe last pair denotes the leap second table's expiration time.\nEach leap second is at the end of a UTC calendar month.\nThe first leap second has a non-negative occurrence time,\nand is a positive leap second if and only if its correction is positive;\nthe correction for each leap second after the first differs\nfrom the previous leap second by either 1 for a positive leap second,\nor \\-1 for a negative leap second.\nIf the leap second table is empty, the leap-second correction is zero\nfor all timestamps;\notherwise, for timestamps before the first occurrence time,\nthe leap-second correction is zero if the first pair's correction is 1 or \\-1,\nand is unspecified otherwise (which can happen only in files\ntruncated at the start).\n.IP \\(bu\n.B tzh_ttisstdcnt\nstandard/wall indicators, each stored as a one-byte boolean;\nthey tell whether the transition times associated with local time types\nwere specified as standard time or local (wall clock) time.\n.IP \\(bu\n.B tzh_ttisutcnt\nUT/local indicators, each stored as a one-byte boolean;\nthey tell whether the transition times associated with local time types\nwere specified as UT or local time.\nIf a UT/local indicator is set, the corresponding standard/wall indicator\nmust also be set.\n.RE\n.PP\nThe standard/wall and UT/local indicators were designed for\ntransforming a TZif file's transition times into transitions appropriate\nfor another time zone specified via\na proleptic TZ string that lacks rules.\nFor example, when TZ=\"EET\\-2EEST\" and there is no TZif file \"EET\\-2EEST\",\nthe idea was to adapt the transition times from a TZif file with the\nwell-known name \"posixrules\" that is present only for this purpose and\nis a copy of the file \"Europe/Brussels\", a file with a different UT offset.\nPOSIX does not specify the details of this obsolete transformational behavior,\nthe default rules are installation-dependent, and no implementation\nis known to support this feature for timestamps past 2037,\nso users desiring (say) Greek time should instead specify\nTZ=\"Europe/Athens\" for better historical coverage, falling back on\nTZ=\"EET\\-2EEST,M3.5.0/3,M10.5.0/4\" if POSIX conformance is required\nand older timestamps need not be handled accurately.\n.PP\nThe\n.BR localtime (3)\nfunction\nnormally uses the first\n.B ttinfo\nstructure in the file\nif either\n.B tzh_timecnt\nis zero or the time argument is less than the first transition time recorded\nin the file.\n.SS Version 2 format\nFor version-2-format timezone files,\nthe above header and data are followed by a second header and data,\nidentical in format except that\neight bytes are used for each transition time or leap second time.\n(Leap second counts remain four bytes.)\nAfter the second header and data comes a newline-enclosed string\nin the style of the contents of a proleptic TZ,\nfor use in handling instants\nafter the last transition time stored in the file\nor for all instants if the file has no transitions.\nThe TZ string is empty (i.e., nothing between the newlines)\nif there is no proleptic representation for such instants.\nIf non-empty, the TZ string must agree with the local time\ntype after the last transition time if present in the eight-byte data;\nfor example, given the string\n.q \"WET0WEST,M3.5.0/1,M10.5.0\"\nthen if a last transition time is in July, the transition's local time\ntype must specify a daylight-saving time abbreviated\n.q \"WEST\"\nthat is one hour east of UT.\nAlso, if there is at least one transition, time type 0 is associated\nwith the time period from the indefinite past up to but not including\nthe earliest transition time.\n.SS Version 3 format\nFor version-3-format timezone files, a TZ string (see\n.BR newtzset (3))\nmay use the following POSIX.1-2024 extensions to POSIX.1-2017:\nFirst, as in TZ=\"<\\-02>2<\\-01>,M3.5.0/\\-1,M10.5.0/0\",\nthe hours part of its transition times may be signed and range from\n\\-167 through 167 instead of being limited to unsigned values\nfrom 0 through 24.\nSecond, as in TZ=\"XXX3EDT4,0/0,J365/23\", DST is in effect all year if it starts\nJanuary 1 at 00:00 and ends December 31 at 24:00 plus the difference\nbetween daylight saving and standard time.\n.SS Version 4 format\nFor version-4-format TZif files,\nthe first leap second record can have a correction that is neither\n+1 nor \\-1, to represent truncation of the TZif file at the start.\nAlso, if two or more leap second transitions are present and the last\nentry's correction equals the previous one, the last entry\ndenotes the expiration of the leap second table instead of a leap second;\ntimestamps after this expiration are unreliable in that future\nreleases will likely add leap second entries after the expiration, and\nthe added leap seconds will change how post-expiration timestamps are treated.\n.SS Interoperability considerations\nFuture changes to the format may append more data.\n.PP\nVersion 1 files are considered a legacy format and\nshould not be generated, as they do not support transition\ntimes after the year 2038.\nReaders that understand only Version 1 must ignore\nany data that extends beyond the calculated end of the version\n1 data block.\n.PP\nOther than version 1, writers should generate\nthe lowest version number needed by a file's data.\nFor example, a writer should generate a version 4 file\nonly if its leap second table either expires or is truncated at the start.\nLikewise, a writer not generating a version 4 file\nshould generate a version 3 file only if\nTZ string extensions are necessary to accurately\nmodel transition times.\n.PP\nThe sequence of time changes defined by the version 1\nheader and data block should be a contiguous sub-sequence\nof the time changes defined by the version 2+ header and data\nblock, and by the footer.\nThis guideline helps obsolescent version 1 readers\nagree with current readers about timestamps within the\ncontiguous sub-sequence.  It also lets writers not\nsupporting obsolescent readers use a\n.B tzh_timecnt\nof zero\nin the version 1 data block to save space.\n.PP\nWhen a TZif file contains a leap second table expiration\ntime, TZif readers should either refuse to process\npost-expiration timestamps, or process them as if the expiration\ntime did not exist (possibly with an error indication).\n.PP\nTime zone designations should consist of at least three (3)\nand no more than six (6) ASCII characters from the set of\nalphanumerics,\n.q \"\\-\",\nand\n.q \"+\".\nThis is for compatibility with POSIX requirements for\ntime zone abbreviations.\n.PP\nWhen reading a version 2 or higher file, readers\nshould ignore the version 1 header and data block except for\nthe purpose of skipping over them.\n.PP\nReaders should calculate the total lengths of the\nheaders and data blocks and check that they all fit within\nthe actual file size, as part of a validity check for the file.\n.PP\nWhen a positive leap second occurs, readers should append an extra\nsecond to the local minute containing the second just before the leap\nsecond.  If this occurs when the UTC offset is not a multiple of 60\nseconds, the leap second occurs earlier than the last second of the\nlocal minute and the minute's remaining local seconds are numbered\nthrough 60 instead of the usual 59; the UTC offset is unaffected.\n.SS Common interoperability issues\nThis section documents common problems in reading or writing TZif files.\nMost of these are problems in generating TZif files for use by\nolder readers.\nThe goals of this section are to help:\n.RS \"\\w'  'u\"\n.IP \\(bu \"\\w'\\(bu  'u\"\nTZif writers output files that avoid common\npitfalls in older or buggy TZif readers,\n.IP \\(bu\nTZif readers avoid common pitfalls when reading\nfiles generated by future TZif writers, and\n.IP \\(bu\nany future specification authors see what sort of\nproblems arise when the TZif format is changed.\n.RE\n.PP\nWhen new versions of the TZif format have been defined, a\ndesign goal has been that a reader can successfully use a TZif\nfile even if the file is of a later TZif version than what the\nreader was designed for.\nWhen complete compatibility was not achieved, an attempt was\nmade to limit glitches to rarely used timestamps and allow\nsimple partial workarounds in writers designed to generate\nnewer-version data useful even for older-version readers.\nThis section attempts to document these compatibility issues and\nworkarounds as well as documenting other common bugs in\nreaders.\n.PP\nInteroperability problems with TZif include the following:\n.RS \"\\w'  'u\"\n.IP \\(bu \"\\w'\\(bu  'u\"\nSome readers examine only version 1 data.\nAs a partial workaround, a writer can output as much version 1\ndata as possible.\nHowever, a reader should ignore version 1 data, and should use\nversion 2+ data even if the reader's native timestamps have only\n32 bits.\n.IP \\(bu\nSome readers designed for version 2 might mishandle\ntimestamps after a version 3 or higher file's last transition, because\nthey cannot parse the POSIX.1-2024 extensions to POSIX.1-2017\nin the proleptic TZ string.\nAs a partial workaround, a writer can output more transitions\nthan necessary, so that only far-future timestamps are\nmishandled by version 2 readers.\n.IP \\(bu\nSome readers designed for version 2 do not support\npermanent daylight saving time with transitions after 24:00\n\\(en e.g., a TZ string\n.q \"EST5EDT,0/0,J365/25\"\ndenoting permanent Eastern Daylight Time\n(\\-04).\nAs a workaround, a writer can substitute standard time\nfor two time zones east, e.g.,\n.q \"XXX3EDT4,0/0,J365/23\"\nfor a time zone with a never-used standard time (XXX, \\-03)\nand negative daylight saving time (EDT, \\-04) all year.\nAlternatively,\nas a partial workaround, a writer can substitute standard time\nfor the next time zone east \\(en e.g.,\n.q \"AST4\"\nfor permanent\nAtlantic Standard Time (\\-04).\n.IP \\(bu\nSome readers designed for version 2 or 3 and that require strict\nconformance to RFC 9636 reject version 4 files whose leap second\ntables are truncated at the start or end in expiration times.\n.IP \\(bu\nSome readers ignore the footer, and instead predict future\ntimestamps from the time type of the last transition.\nAs a partial workaround, a writer can output more transitions\nthan necessary.\n.IP \\(bu\nSome stripped-down readers ignore everything but the footer,\nand use its proleptic TZ string to calculate all timestamps.\nAlthough this approach often works for current and future timestamps,\nit obviously has problems with past timestamps,\nand even for current timestamps it can fail for settings like\nTZ=\"Africa/Casablanca\".  This corresponds to a TZif file\ncontaining explicit transitions through the year 2087,\nfollowed by a footer containing the TZ string\n.q <+01>\\-1 ,\nwhich should be used only for timestamps after the last\nexplicit transition.\n.IP \\(bu\nSome readers do not use time type 0 for timestamps before\nthe first transition, in that they infer a time type using a\nheuristic that does not always select time type 0.\nAs a partial workaround, a writer can output a dummy (no-op)\nfirst transition at an early time.\n.IP \\(bu\nSome readers mishandle timestamps before the first\ntransition that has a timestamp that is not less than \\-2**31.\nReaders that support only 32-bit timestamps are likely to be\nmore prone to this problem, for example, when they process\n64-bit transitions only some of which are representable in 32\nbits.\nAs a partial workaround, a writer can output a dummy\ntransition at timestamp \\-2**31.\n.IP \\(bu\nSome readers mishandle a transition if its timestamp has\nthe minimum possible signed 64-bit value.\nTimestamps less than \\-2**59 are not recommended.\n.IP \\(bu\nSome readers mishandle proleptic TZ strings that\ncontain\n.q \"<\"\nor\n.q \">\".\nAs a partial workaround, a writer can avoid using\n.q \"<\"\nor\n.q \">\"\nfor time zone abbreviations containing only alphabetic\ncharacters.\n.IP \\(bu\nMany readers mishandle time zone abbreviations that contain\nnon-ASCII characters.\nThese characters are not recommended.\n.IP \\(bu\nSome readers may mishandle time zone abbreviations that\ncontain fewer than 3 or more than 6 characters or that\ncontain ASCII characters other than alphanumerics,\n.q \"\\-\",\nand\n.q \"+\".\nThese abbreviations are not recommended.\n.IP \\(bu\nSome readers mishandle TZif files that specify\ndaylight-saving time UT offsets that are less than the UT\noffsets for the corresponding standard time.\nThese readers do not support locations like Ireland, which\nuses the equivalent of the TZ string\n.q \"IST\\-1GMT0,M10.5.0,M3.5.0/1\",\nobserving standard time\n(IST, +01) in summer and daylight saving time (GMT, +00) in winter.\nAs a partial workaround, a writer can output data for the\nequivalent of the TZ string\n.q \"GMT0IST,M3.5.0/1,M10.5.0\",\nthus swapping standard and daylight saving time.\nAlthough this workaround misidentifies which part of the year\nuses daylight saving time, it records UT offsets and time zone\nabbreviations correctly.\n.IP \\(bu\nSome readers generate ambiguous timestamps for positive leap seconds\nthat occur when the UTC offset is not a multiple of 60 seconds.\nFor example, with UTC offset +01:23:45 and\na positive leap second 78796801 (1972-06-30 23:59:60 UTC), some readers will\nmap both 78796800 and 78796801 to 01:23:45 local time the next day\ninstead of mapping the latter to 01:23:46, and they will map 78796815 to\n01:23:59 instead of to 01:23:60.\nThis has not yet been a practical problem, since no civil authority\nhas observed such UTC offsets since leap seconds were\nintroduced in 1972.\n.RE\n.PP\nSome interoperability problems are reader bugs that\nare listed here mostly as warnings to developers of readers.\n.RS \"\\w'  'u\"\n.IP \\(bu \"\\w'\\(bu  'u\"\nSome readers do not support negative timestamps.\nDevelopers of distributed applications should keep this\nin mind if they need to deal with pre-1970 data.\n.IP \\(bu\nSome readers mishandle timestamps before the first\ntransition that has a non-negative timestamp.\nReaders that do not support negative timestamps are likely to\nbe more prone to this problem.\n.IP \\(bu\nSome readers mishandle time zone abbreviations like\n.q \"\\-08\"\nthat contain\n.q \"+\",\n.q \"\\-\",\nor digits.\n.IP \\(bu\nSome readers mishandle UT offsets that are out of the\ntraditional range of \\-12 through +12 hours, and so do not\nsupport locations like Kiritimati that are outside this\nrange.\n.IP \\(bu\nSome readers mishandle UT offsets in the range [\\-3599, \\-1]\nseconds from UT because they integer-divide the offset by\n3600 to get 0 and then display the hour part as\n.q \"+00\".\n.IP \\(bu\nSome readers mishandle UT offsets that are not a multiple\nof one hour, or of 15 minutes, or of 1 minute.\n.RE\n.SH SEE ALSO\n.BR time (2),\n.BR localtime (3),\n.BR tzset (3),\n.BR tzselect (8),\n.BR zdump (8),\n.BR zic (8).\n.PP\nOlson A, Eggert P, Murchison K. The Time Zone Information Format (TZif).\nOctober 2024.\n.UR https://\\:www.rfc-editor.org/\\:rfc/\\:rfc9636\nInternet RFC 9636\n.UE\n.UR https://\\:doi.org/\\:10.17487/\\:RFC9636\ndoi:10.17487/RFC9636\n.UE .\n"
        },
        {
          "name": "tzfile.h",
          "type": "blob",
          "size": 4.05078125,
          "content": "/* Layout and location of TZif files.  */\n\n#ifndef TZFILE_H\n\n#define TZFILE_H\n\n/*\n** This file is in the public domain, so clarified as of\n** 1996-06-05 by Arthur David Olson.\n*/\n\n/*\n** This header is for use ONLY with the time conversion code.\n** There is no guarantee that it will remain unchanged,\n** or that it will remain at all.\n** Do NOT copy it to any system include directory.\n** Thank you!\n*/\n\n/*\n** Information about time zone files.\n*/\n\n#ifndef TZDEFRULES\n# define TZDEFRULES \"posixrules\"\n#endif /* !defined TZDEFRULES */\n\n\n/* See Internet RFC 9636 for more details about the following format.  */\n\n/*\n** Each file begins with. . .\n*/\n\n#define\tTZ_MAGIC\t\"TZif\"\n\nstruct tzhead {\n\tchar\ttzh_magic[4];\t\t/* TZ_MAGIC */\n\tchar\ttzh_version[1];\t\t/* '\\0' or '2'-'4' as of 2021 */\n\tchar\ttzh_reserved[15];\t/* reserved; must be zero */\n\tchar\ttzh_ttisutcnt[4];\t/* coded number of trans. time flags */\n\tchar\ttzh_ttisstdcnt[4];\t/* coded number of trans. time flags */\n\tchar\ttzh_leapcnt[4];\t\t/* coded number of leap seconds */\n\tchar\ttzh_timecnt[4];\t\t/* coded number of transition times */\n\tchar\ttzh_typecnt[4];\t\t/* coded number of local time types */\n\tchar\ttzh_charcnt[4];\t\t/* coded number of abbr. chars */\n};\n\n/*\n** . . .followed by. . .\n**\n**\ttzh_timecnt (char [4])s\t\tcoded transition times a la time(2)\n**\ttzh_timecnt (unsigned char)s\ttypes of local time starting at above\n**\ttzh_typecnt repetitions of\n**\t\tone (char [4])\t\tcoded UT offset in seconds\n**\t\tone (unsigned char)\tused to set tm_isdst\n**\t\tone (unsigned char)\tthat's an abbreviation list index\n**\ttzh_charcnt (char)s\t\t'\\0'-terminated zone abbreviations\n**\ttzh_leapcnt repetitions of\n**\t\tone (char [4])\t\tcoded leap second transition times\n**\t\tone (char [4])\t\ttotal correction after above\n**\ttzh_ttisstdcnt (char)s\t\tindexed by type; if 1, transition\n**\t\t\t\t\ttime is standard time, if 0,\n**\t\t\t\t\ttransition time is local (wall clock)\n**\t\t\t\t\ttime; if absent, transition times are\n**\t\t\t\t\tassumed to be local time\n**\ttzh_ttisutcnt (char)s\t\tindexed by type; if 1, transition\n**\t\t\t\t\ttime is UT, if 0, transition time is\n**\t\t\t\t\tlocal time; if absent, transition\n**\t\t\t\t\ttimes are assumed to be local time.\n**\t\t\t\t\tWhen this is 1, the corresponding\n**\t\t\t\t\tstd/wall indicator must also be 1.\n*/\n\n/*\n** If tzh_version is '2' or greater, the above is followed by a second instance\n** of tzhead and a second instance of the data in which each coded transition\n** time uses 8 rather than 4 chars,\n** then a POSIX.1-2017 proleptic TZ string for use in handling\n** instants after the last transition time stored in the file\n** (with nothing between the newlines if there is no POSIX.1-2017\n** representation for such instants).\n**\n** If tz_version is '3' or greater, the TZ string can be any POSIX.1-2024\n** proleptic TZ string, which means the above is extended as follows.\n** First, the TZ string's hour offset may range from -167\n** through 167 as compared to the range 0 through 24 required\n** by POSIX.1-2017 and earlier.\n** Second, its DST start time may be January 1 at 00:00 and its stop\n** time December 31 at 24:00 plus the difference between DST and\n** standard time, indicating DST all year.\n*/\n\n/*\n** In the current implementation, \"tzset()\" refuses to deal with files that\n** exceed any of the limits below.\n*/\n\n#ifndef TZ_MAX_TIMES\n/* This must be at least 242 for Europe/London with 'zic -b fat'.  */\n# define TZ_MAX_TIMES 2000\n#endif /* !defined TZ_MAX_TIMES */\n\n#ifndef TZ_MAX_TYPES\n/* This must be at least 18 for Europe/Vilnius with 'zic -b fat'.  */\n# define TZ_MAX_TYPES 256 /* Limited by what (unsigned char)'s can hold */\n#endif /* !defined TZ_MAX_TYPES */\n\n#ifndef TZ_MAX_CHARS\n/* This must be at least 40 for America/Anchorage.  */\n# define TZ_MAX_CHARS 50\t/* Maximum number of abbreviation characters */\n\t\t\t\t/* (limited by what unsigned chars can hold) */\n#endif /* !defined TZ_MAX_CHARS */\n\n#ifndef TZ_MAX_LEAPS\n/* This must be at least 27 for leap seconds from 1972 through mid-2023.\n   There's a plan to discontinue leap seconds by 2035.  */\n# define TZ_MAX_LEAPS 50\t/* Maximum number of leap second corrections */\n#endif /* !defined TZ_MAX_LEAPS */\n\n#endif /* !defined TZFILE_H */\n"
        },
        {
          "name": "tzselect.8",
          "type": "blob",
          "size": 2.96484375,
          "content": ".\\\" This file is in the public domain, so clarified as of\n.\\\" 2009-05-17 by Arthur David Olson.\n.TH tzselect 8 \"\" \"Time Zone Database\"\n.SH NAME\ntzselect \\- select a timezone\n.SH SYNOPSIS\n.ds d \" degrees\n.ds m \" minutes\n.ds s \" seconds\n.ds _ \" \\&\n.if t \\{\\\n. if \\n(.g .if c \\(de .if c \\(fm .if c \\(sd \\{\\\n.  ds d \\(de\n.  ds m \\(fm\n.  ds s \\(sd\n.  ds _ \\|\n. \\}\n.\\}\n.B tzselect\n[\n.B \\-c\n.I coord\n] [\n.B \\-n\n.I limit\n] [\n.B \\-\\-help\n] [\n.B \\-\\-version\n]\n.SH DESCRIPTION\nThe\n.B tzselect\nprogram asks the user for information about the current location,\nand outputs the resulting timezone to standard output.\nThe output is suitable as a value for the TZ environment variable.\n.PP\nAll interaction with the user is done via standard input and standard error.\n.SH OPTIONS\n.TP\n.BI \"\\-c \" coord\nInstead of asking for continent and then country and then city,\nask for selection from time zones whose largest cities\nare closest to the location with geographical coordinates\n.I coord.\nUse ISO 6709 notation for\n.I coord,\nthat is, a latitude immediately followed by a longitude.  The latitude\nand longitude should be signed integers followed by an optional\ndecimal point and fraction: positive numbers represent north and east,\nnegative south and west.  Latitudes with two and longitudes with three\ninteger digits are treated as degrees; latitudes with four or six and\nlongitudes with five or seven integer digits are treated as\n.I \"DDMM, DDDMM, DDMMSS,\"\nor\n.I DDDMMSS\nrepresenting\n.I DD\nor\n.I DDD\ndegrees,\n.I MM\nminutes,\nand zero or\n.I SS\nseconds, with any trailing fractions represent fractional minutes or\n(if\n.I SS\nis present) seconds.  The decimal point is that of the current locale.\nFor example, in the (default) C locale,\n.B \"\\-c\\ +40.689\\-074.045\"\nspecifies 40.689\\*d\\*_N, 74.045\\*d\\*_W,\n.B \"\\-c\\ +4041.4\\-07402.7\"\nspecifies 40\\*d\\*_41.4\\*m\\*_N, 74\\*d\\*_2.7\\*m\\*_W, and\n.B \"\\-c\\ +404121\\-0740240\"\nspecifies 40\\*d\\*_41\\*m\\*_21\\*s\\*_N, 74\\*d\\*_2\\*m\\*_40\\*s\\*_W.\nIf\n.I coord\nis not one of the documented forms, the resulting behavior is unspecified.\n.TP\n.BI \"\\-n \" limit\nWhen\n.B \\-c\nis used, display the closest\n.I limit\nlocations (default 10).\n.TP\n.B \"\\-\\-help\"\nOutput help information and exit.\n.TP\n.B \"\\-\\-version\"\nOutput version information and exit.\n.SH \"ENVIRONMENT VARIABLES\"\n.TP\n\\f3AWK\\fP\nName of a POSIX-compliant\n.B awk\nprogram (default:\n.BR awk ).\n.TP\n\\f3TZDIR\\fP\nName of the directory containing timezone data files (default:\n.BR /usr/share/zoneinfo ).\n.SH FILES\n.TP\n\\f2TZDIR\\fP\\f3/iso3166.tab\\fP\nTable of ISO 3166 2-letter country codes and country names.\n.TP\n\\f2TZDIR\\fP\\f3/zone1970.tab\\fP\nTable of country codes, latitude and longitude, timezones, and\ndescriptive comments.\n.TP\n\\f2TZDIR\\fP\\f3/\\fP\\f2TZ\\fP\nTimezone data file for timezone \\f2TZ\\fP.\n.SH \"EXIT STATUS\"\nThe exit status is zero if a timezone was successfully obtained from the user,\nnonzero otherwise.\n.SH \"SEE ALSO\"\nnewctime(3), tzfile(5), zdump(8), zic(8)\n.SH NOTES\nApplications should not assume that\n.BR tzselect 's\noutput matches the user's political preferences.\n"
        },
        {
          "name": "tzselect.ksh",
          "type": "blob",
          "size": 21.314453125,
          "content": "#!/bin/bash\n# Ask the user about the time zone, and output the resulting TZ value to stdout.\n# Interact with the user via stderr and stdin.\n\nPKGVERSION='(tzcode) '\nTZVERSION=see_Makefile\nREPORT_BUGS_TO=tz@iana.org\n\n# Contributed by Paul Eggert.  This file is in the public domain.\n\n# Porting notes:\n#\n# This script requires a POSIX-like shell and prefers the extension of a\n# 'select' statement.  The 'select' statement was introduced in the\n# Korn shell and is available in Bash and other shell implementations.\n# If your host lacks both Bash and the Korn shell, you can get their\n# source from one of these locations:\n#\n#\tBash <https://www.gnu.org/software/bash/>\n#\tKorn Shell <http://www.kornshell.com/>\n#\tMirBSD Korn Shell <http://www.mirbsd.org/mksh.htm>\n#\n# This script also uses several features of POSIX awk.\n# If your host lacks awk, or has an old awk that does not conform to POSIX,\n# you can use any of the following free programs instead:\n#\n#\tGawk (GNU awk) <https://www.gnu.org/software/gawk/>\n#\tmawk <https://invisible-island.net/mawk/>\n#\tnawk <https://github.com/onetrueawk/awk>\n#\n# Because 'awk \"VAR=VALUE\" ...' and 'awk -v \"VAR=VALUE\" ...' are not portable\n# if VALUE contains \\, \", or newline, awk scripts in this file use:\n#   awk 'BEGIN { VAR = substr(ARGV[1], 2); ARGV[1] = \"\" } ...' =\"VALUE\"\n# The substr avoids problems when VALUE is of the form X=Y and would be\n# misinterpreted as an assignment.\n\n# This script does not want path expansion.\nset -f\n\n# Specify default values for environment variables if they are unset.\n: ${AWK=awk}\n: ${TZDIR=$PWD}\n\n# Output one argument as-is to standard output, with trailing newline.\n# Safer than 'echo', which can mishandle '\\' or leading '-'.\nsay() {\n  printf '%s\\n' \"$1\"\n}\n\ncoord=\nlocation_limit=10\nzonetabtype=zone1970\n\nusage=\"Usage: tzselect [--version] [--help] [-c COORD] [-n LIMIT]\nSelect a timezone interactively.\n\nOptions:\n\n  -c COORD\n    Instead of asking for continent and then country and then city,\n    ask for selection from time zones whose largest cities\n    are closest to the location with geographical coordinates COORD.\n    COORD should use ISO 6709 notation, for example, '-c +4852+00220'\n    for Paris (in degrees and minutes, North and East), or\n    '-c -35-058' for Buenos Aires (in degrees, South and West).\n\n  -n LIMIT\n    Display at most LIMIT locations when -c is used (default $location_limit).\n\n  --version\n    Output version information.\n\n  --help\n    Output this help.\n\nReport bugs to $REPORT_BUGS_TO.\"\n\n# Ask the user to select from the function's arguments,\n# and assign the selected argument to the variable 'select_result'.\n# Exit on EOF or I/O error.  Use the shell's nicer 'select' builtin if\n# available, falling back on a portable substitute otherwise.\nif\n  case $BASH_VERSION in\n  ?*) :;;\n  '')\n    # '; exit' should be redundant, but Dash doesn't properly fail without it.\n    (eval 'set --; select x; do break; done; exit') <>/dev/null 2>&0\n  esac\nthen\n  # Do this inside 'eval', as otherwise the shell might exit when parsing it\n  # even though it is never executed.\n  eval '\n    doselect() {\n      select select_result\n      do\n\tcase $select_result in\n\t\"\") echo >&2 \"Please enter a number in range.\";;\n\t?*) break\n\tesac\n      done || exit\n    }\n  '\nelse\n  doselect() {\n    # Field width of the prompt numbers.\n    select_width=${##}\n\n    select_i=\n\n    while :\n    do\n      case $select_i in\n      '')\n\tselect_i=0\n\tfor select_word\n\tdo\n\t  select_i=$(($select_i + 1))\n\t  printf >&2 \"%${select_width}d) %s\\\\n\" $select_i \"$select_word\"\n\tdone;;\n      *[!0-9]*)\n\techo >&2 'Please enter a number in range.';;\n      *)\n\tif test 1 -le $select_i && test $select_i -le $#; then\n\t  shift $(($select_i - 1))\n\t  select_result=$1\n\t  break\n\tfi\n\techo >&2 'Please enter a number in range.'\n      esac\n\n      # Prompt and read input.\n      printf >&2 %s \"${PS3-#? }\"\n      read select_i || exit\n    done\n  }\nfi\n\nwhile getopts c:n:t:-: opt\ndo\n  case $opt$OPTARG in\n  c*)\n    coord=$OPTARG;;\n  n*)\n    location_limit=$OPTARG;;\n  t*) # Undocumented option, used for developer testing.\n    zonetabtype=$OPTARG;;\n  -help)\n    exec echo \"$usage\";;\n  -version)\n    exec echo \"tzselect $PKGVERSION$TZVERSION\";;\n  -*)\n    say >&2 \"$0: -$opt$OPTARG: unknown option; try '$0 --help'\"; exit 1;;\n  *)\n    say >&2 \"$0: try '$0 --help'\"; exit 1\n  esac\ndone\n\nshift $(($OPTIND - 1))\ncase $# in\n0) ;;\n*) say >&2 \"$0: $1: unknown argument\"; exit 1\nesac\n\n# translit=true to try transliteration.\n# This is false if U+12345 CUNEIFORM SIGN URU TIMES KI has length 1\n# which means the shell and (presumably) awk do not need transliteration.\n# It is true if the byte string has some other length in characters, or\n# if this is a POSIX.1-2017 or earlier shell that does not support $'...'.\nCUNEIFORM_SIGN_URU_TIMES_KI=$'\\360\\222\\215\\205'\nif test ${#CUNEIFORM_SIGN_URU_TIMES_KI} = 1\nthen translit=false\nelse translit=true\nfi\n\n# Read into shell variable $1 the contents of file $2.\n# Convert to the current locale's encoding if possible,\n# as the shell aligns columns better that way.\n# If GNU iconv's //TRANSLIT does not work, fall back on POSIXish iconv;\n# if that does not work, fall back on 'cat'.\nread_file() {\n  { $translit && {\n    eval \"$1=\\$( (iconv -f UTF-8 -t //TRANSLIT) 2>/dev/null <\\\"\\$2\\\")\" ||\n    eval \"$1=\\$( (iconv -f UTF-8) 2>/dev/null <\\\"\\$2\\\")\"\n  }; } ||\n  eval \"$1=\\$(cat <\\\"\\$2\\\")\" || {\n    say >&2 \"$0: time zone files are not set up correctly\"\n    exit 1\n  }\n}\nread_file TZ_COUNTRY_TABLE \"$TZDIR/iso3166.tab\"\nread_file TZ_ZONETABTYPE_TABLE \"$TZDIR/$zonetabtype.tab\"\nTZ_ZONENOW_TABLE=\n\nnewline='\n'\nIFS=$newline\n\n# Awk script to output a country list.\noutput_country_list='\n  BEGIN {\n    continent_re = substr(ARGV[1], 2)\n    TZ_COUNTRY_TABLE = substr(ARGV[2], 2)\n    TZ_ZONE_TABLE = substr(ARGV[3], 2)\n    ARGV[1] = ARGV[2] = ARGV[3] = \"\"\n    FS = \"\\t\"\n    nlines = split(TZ_ZONE_TABLE, line, /\\n/)\n    for (iline = 1; iline <= nlines; iline++) {\n      $0 = line[iline]\n      commentary = $0 ~ /^#@/\n      if (commentary) {\n\tif ($0 !~ /^#@/)\n\t  continue\n\tcol1ccs = substr($1, 3)\n\tconts = $2\n      } else {\n\tcol1ccs = $1\n\tconts = $3\n      }\n      ncc = split(col1ccs, cc, /,/)\n      ncont = split(conts, cont, /,/)\n      for (i = 1; i <= ncc; i++) {\n\telsewhere = commentary\n\tfor (ci = 1; ci <= ncont; ci++) {\n\t  if (cont[ci] ~ continent_re) {\n\t    if (!cc_seen[cc[i]]++)\n\t      cc_list[++ccs] = cc[i]\n\t    elsewhere = 0\n\t  }\n\t}\n\tif (elsewhere)\n\t  for (i = 1; i <= ncc; i++)\n\t    cc_elsewhere[cc[i]] = 1\n      }\n    }\n    nlines = split(TZ_COUNTRY_TABLE, line, /\\n/)\n    for (i = 1; i <= nlines; i++) {\n      $0 = line[i]\n      if ($0 !~ /^#/)\n\tcc_name[$1] = $2\n    }\n    for (i = 1; i <= ccs; i++) {\n      country = cc_list[i]\n      if (cc_elsewhere[country])\n\tcontinue\n      if (cc_name[country])\n\tcountry = cc_name[country]\n      print country\n    }\n  }\n'\n\n# Awk script to process a time zone table and output the same table,\n# with each row preceded by its distance from 'here'.\n# If output_times is set, each row is instead preceded by its local time\n# and any apostrophes are escaped for the shell.\noutput_distances_or_times='\n  BEGIN {\n    coord = substr(ARGV[1], 2)\n    TZ_COUNTRY_TABLE = substr(ARGV[2], 2)\n    TZ_ZONE_TABLE = substr(ARGV[3], 2)\n    ARGV[1] = ARGV[2] = ARGV[3] = \"\"\n    FS = \"\\t\"\n    if (!output_times) {\n      nlines = split(TZ_COUNTRY_TABLE, line, /\\n/)\n      for (i = 1; i <= nlines; i++) {\n\t$0 = line[i]\n\tif ($0 ~ /^#/)\n\t  continue\n\tcountry[$1] = $2\n      }\n      country[\"US\"] = \"US\" # Otherwise the strings get too long.\n    }\n  }\n  function abs(x) {\n    return x < 0 ? -x : x;\n  }\n  function min(x, y) {\n    return x < y ? x : y;\n  }\n  function convert_coord(coord, deg, minute, ilen, sign, sec) {\n    if (coord ~ /^[-+]?[0-9]?[0-9][0-9][0-9][0-9][0-9][0-9]([^0-9]|$)/) {\n      degminsec = coord\n      intdeg = degminsec < 0 ? -int(-degminsec / 10000) : int(degminsec / 10000)\n      minsec = degminsec - intdeg * 10000\n      intmin = minsec < 0 ? -int(-minsec / 100) : int(minsec / 100)\n      sec = minsec - intmin * 100\n      deg = (intdeg * 3600 + intmin * 60 + sec) / 3600\n    } else if (coord ~ /^[-+]?[0-9]?[0-9][0-9][0-9][0-9]([^0-9]|$)/) {\n      degmin = coord\n      intdeg = degmin < 0 ? -int(-degmin / 100) : int(degmin / 100)\n      minute = degmin - intdeg * 100\n      deg = (intdeg * 60 + minute) / 60\n    } else\n      deg = coord\n    return deg * 0.017453292519943296\n  }\n  function convert_latitude(coord) {\n    match(coord, /..*[-+]/)\n    return convert_coord(substr(coord, 1, RLENGTH - 1))\n  }\n  function convert_longitude(coord) {\n    match(coord, /..*[-+]/)\n    return convert_coord(substr(coord, RLENGTH))\n  }\n  # Great-circle distance between points with given latitude and longitude.\n  # Inputs and output are in radians.  This uses the great-circle special\n  # case of the Vicenty formula for distances on ellipsoids.\n  function gcdist(lat1, long1, lat2, long2, dlong, x, y, num, denom) {\n    dlong = long2 - long1\n    x = cos(lat2) * sin(dlong)\n    y = cos(lat1) * sin(lat2) - sin(lat1) * cos(lat2) * cos(dlong)\n    num = sqrt(x * x + y * y)\n    denom = sin(lat1) * sin(lat2) + cos(lat1) * cos(lat2) * cos(dlong)\n    return atan2(num, denom)\n  }\n  # Parallel distance between points with given latitude and longitude.\n  # This is the product of the longitude difference and the cosine\n  # of the latitude of the point that is further from the equator.\n  # I.e., it considers longitudes to be further apart if they are\n  # nearer the equator.\n  function pardist(lat1, long1, lat2, long2) {\n    return abs(long1 - long2) * min(cos(lat1), cos(lat2))\n  }\n  # The distance function is the sum of the great-circle distance and\n  # the parallel distance.  It could be weighted.\n  function dist(lat1, long1, lat2, long2) {\n    return gcdist(lat1, long1, lat2, long2) + pardist(lat1, long1, lat2, long2)\n  }\n  BEGIN {\n    coord_lat = convert_latitude(coord)\n    coord_long = convert_longitude(coord)\n    nlines = split(TZ_ZONE_TABLE, line, /\\n/)\n    for (h = 1; h <= nlines; h++) {\n      $0 = line[h]\n      if ($0 ~ /^#/)\n\tcontinue\n      inline[inlines++] = $0\n      ncc = split($1, cc, /,/)\n      for (i = 1; i <= ncc; i++)\n\tcc_used[cc[i]]++\n    }\n    for (h = 0; h < inlines; h++) {\n      $0 = inline[h]\n      outline = $1 \"\\t\" $2 \"\\t\" $3\n      sep = \"\\t\"\n      ncc = split($1, cc, /,/)\n      split(\"\", item_seen)\n      item_seen[\"\"] = 1\n      for (i = 1; i <= ncc; i++) {\n\titem = cc_used[cc[i]] <= 1 ? country[cc[i]] : $4\n\tif (item_seen[item]++)\n\t  continue\n\toutline = outline sep item\n\tsep = \"; \"\n      }\n      if (output_times) {\n\tfmt = \"TZ='\\''%s'\\'' date +'\\''%d %%Y %%m %%d %%H:%%M %%a %%b\\t%s'\\''\\n\"\n\tgsub(/'\\''/, \"&\\\\\\\\&&\", outline)\n\tprintf fmt, $3, h, outline\n      } else {\n\there_lat = convert_latitude($2)\n\there_long = convert_longitude($2)\n\tprintf \"%g\\t%s\\n\", dist(coord_lat, coord_long, here_lat, here_long), \\\n\t  outline\n      }\n    }\n  }\n'\n\n# Begin the main loop.  We come back here if the user wants to retry.\nwhile\n\n  echo >&2 'Please identify a location' \\\n    'so that time zone rules can be set correctly.'\n\n  continent=\n  country=\n  country_result=\n  region=\n  time=\n  TZ_ZONE_TABLE=$TZ_ZONETABTYPE_TABLE\n\n  case $coord in\n  ?*)\n    continent=coord;;\n  '')\n\n    # Ask the user for continent or ocean.\n\n    echo >&2 \\\n      'Please select a continent, ocean, \"coord\", \"TZ\", \"time\", or \"now\".'\n\n    quoted_continents=$(\n      $AWK '\n\tfunction handle_entry(entry) {\n\t  entry = substr(entry, 1, index(entry, \"/\") - 1)\n\t  if (entry == \"America\")\n\t    entry = entry \"s\"\n\t  if (entry ~ /^(Arctic|Atlantic|Indian|Pacific)$/)\n\t    entry = entry \" Ocean\"\n\t  printf \"'\\''%s'\\''\\n\", entry\n\t}\n\tBEGIN {\n\t  TZ_ZONETABTYPE_TABLE = substr(ARGV[1], 2)\n\t  ARGV[1] = \"\"\n\t  FS = \"\\t\"\n\t  nlines = split(TZ_ZONETABTYPE_TABLE, line, /\\n/)\n\t  for (i = 1; i <= nlines; i++) {\n\t    $0 = line[i]\n\t    if ($0 ~ /^[^#]/)\n\t      handle_entry($3)\n\t    else if ($0 ~ /^#@/) {\n\t      ncont = split($2, cont, /,/)\n\t      for (ci = 1; ci <= ncont; ci++)\n\t\thandle_entry(cont[ci])\n\t    }\n\t  }\n\t}\n      ' =\"$TZ_ZONETABTYPE_TABLE\" |\n      sort -u |\n      tr '\\n' ' '\n      echo ''\n    )\n\n    eval '\n      doselect '\"$quoted_continents\"' \\\n\t\"coord - I want to use geographical coordinates.\" \\\n\t\"TZ - I want to specify the timezone using a proleptic TZ string.\" \\\n\t\"time - I know local time already.\" \\\n\t\"now - Like \\\"time\\\", but configure only for timestamps from now on.\"\n      continent=$select_result\n      case $continent in\n      Americas) continent=America;;\n      *)\n\t# Get the first word of $continent.  Path expansion is disabled\n\t# so this works even with \"*\", which should not happen.\n\tIFS=\" \"\n\tfor continent in $continent \"\"; do break; done\n\tIFS=$newline;;\n      esac\n      case $zonetabtype,$continent in\n      zonenow,*) ;;\n      *,now)\n\t${TZ_ZONENOW_TABLE:+:} read_file TZ_ZONENOW_TABLE \"$TZDIR/zonenow.tab\"\n\tTZ_ZONE_TABLE=$TZ_ZONENOW_TABLE\n      esac\n    '\n  esac\n\n  case $continent in\n  TZ)\n    # Ask the user for a proleptic TZ string.  Check that it conforms.\n    check_POSIX_TZ_string='\n      BEGIN {\n\ttz = substr(ARGV[1], 2)\n\tARGV[1] = \"\"\n\ttzname = (\"(<[[:alnum:]+-][[:alnum:]+-][[:alnum:]+-]+>\" \\\n\t\t  \"|[[:alpha:]][[:alpha:]][[:alpha:]]+)\")\n\tsign = \"[-+]?\"\n\thhmm = \"(:[0-5][0-9](:[0-5][0-9])?)?\"\n\toffset = sign \"(2[0-4]|[0-1]?[0-9])\" hhmm\n\ttime = sign \"(16[0-7]|(1[0-5]|[0-9]?)[0-9])\" hhmm\n\tmdate = \"M([1-9]|1[0-2])\\\\.[1-5]\\\\.[0-6]\"\n\tjdate = (\"((J[1-9]|[0-9]|J?[1-9][0-9]\" \\\n\t\t \"|J?[1-2][0-9][0-9])|J?3[0-5][0-9]|J?36[0-5])\")\n\tdatetime = \",(\" mdate \"|\" jdate \")(/\" time \")?\"\n\ttzpattern = (\"^(:.*|\" tzname offset \"(\" tzname \\\n\t\t     \"(\" offset \")?(\" datetime datetime \")?)?)$\")\n\texit tz ~ tzpattern\n      }\n    '\n\n    while\n      echo >&2 'Please enter the desired value' \\\n\t'of the TZ environment variable.'\n      echo >&2 'For example, AEST-10 is abbreviated' \\\n\t'AEST and is 10 hours'\n      echo >&2 'ahead (east) of Greenwich,' \\\n\t'with no daylight saving time.'\n      read tz\n      $AWK \"$check_POSIX_TZ_string\" =\"$tz\"\n    do\n      say >&2 \"'$tz' is not a conforming POSIX proleptic TZ string.\"\n    done\n    TZ_for_date=$tz;;\n  *)\n    case $continent in\n    coord)\n      case $coord in\n      '')\n\techo >&2 'Please enter coordinates' \\\n\t  'in ISO 6709 notation.'\n\techo >&2 'For example, +4042-07403 stands for'\n\techo >&2 '40 degrees 42 minutes north,' \\\n\t  '74 degrees 3 minutes west.'\n\tread coord\n      esac\n      distance_table=$(\n\t$AWK \\\n\t  \"$output_distances_or_times\" \\\n\t  =\"$coord\" =\"$TZ_COUNTRY_TABLE\" =\"$TZ_ZONE_TABLE\" |\n\tsort -n |\n\t$AWK \"{print} NR == $location_limit { exit }\"\n      )\n      regions=$(\n\t$AWK '\n\t  BEGIN {\n\t    distance_table = substr(ARGV[1], 2)\n\t    ARGV[1] = \"\"\n\t    nlines = split(distance_table, line, /\\n/)\n\t    for (nr = 1; nr <= nlines; nr++) {\n\t      nf = split(line[nr], f, /\\t/)\n\t      print f[nf]\n\t    }\n\t  }\n\t' =\"$distance_table\"\n      )\n      echo >&2 'Please select one of the following timezones,'\n      echo >&2 'listed roughly in increasing order' \\\n\t\"of distance from $coord\".\n      doselect $regions\n      region=$select_result\n      tz=$(\n\t$AWK '\n\t  BEGIN {\n\t    distance_table = substr(ARGV[1], 2)\n\t    region = substr(ARGV[2], 2)\n\t    ARGV[1] = ARGV[2] = \"\"\n\t    nlines = split(distance_table, line, /\\n/)\n\t    for (nr = 1; nr <= nlines; nr++) {\n\t      nf = split(line[nr], f, /\\t/)\n\t      if (f[nf] == region)\n\t\tprint f[4]\n\t    }\n\t  }\n\t' =\"$distance_table\" =\"$region\"\n      );;\n    *)\n      case $continent in\n      now|time)\n\tminute_format='%a %b %d %H:%M'\n\told_minute=$(TZ=UTC0 date +\"$minute_format\")\n\tfor i in 1 2 3\n\tdo\n\t  time_table_command=$(\n\t    $AWK \\\n\t      -v output_times=1 \\\n\t      \"$output_distances_or_times\" \\\n\t      = = =\"$TZ_ZONE_TABLE\"\n\t  )\n\t  time_table=$(eval \"$time_table_command\")\n\t  new_minute=$(TZ=UTC0 date +\"$minute_format\")\n\t  case $old_minute in\n\t  \"$new_minute\") break\n\t  esac\n\t  old_minute=$new_minute\n\tdone\n\techo >&2 \"The system says Universal Time is $new_minute.\"\n\techo >&2 \"Assuming that's correct, what is the local time?\"\n\tsorted_table=$(say \"$time_table\" | sort -k2n -k2,5 -k1n) || {\n\t  say >&2 \"$0: cannot sort time table\"\n\t  exit 1\n\t}\n\teval doselect $(\n\t  $AWK '\n\t    BEGIN {\n\t      sorted_table = substr(ARGV[1], 2)\n\t      ARGV[1] = \"\"\n\t      nlines = split(sorted_table, line, /\\n/)\n\t      for (i = 1; i <= nlines; i++) {\n\t\t$0 = line[i]\n\t\toutline = $6 \" \" $7 \" \" $4 \" \" $5\n\t\tif (outline == oldline)\n\t\t  continue\n\t\toldline = outline\n\t\tgsub(/'\\''/, \"&\\\\\\\\&&\", outline)\n\t\tprintf \"'\\''%s'\\''\\n\", outline\n\t      }\n\t    }\n\t  ' =\"$sorted_table\"\n\t)\n\ttime=$select_result\n\tcontinent_re='^'\n\tzone_table=$(\n\t  $AWK '\n\t    BEGIN {\n\t      time = substr(ARGV[1], 2)\n\t      time_table = substr(ARGV[2], 2)\n\t      ARGV[1] = ARGV[2] = \"\"\n\t      nlines = split(time_table, line, /\\n/)\n\t      for (i = 1; i <= nlines; i++) {\n\t\t$0 = line[i]\n\t\tif ($6 \" \" $7 \" \" $4 \" \" $5 == time) {\n\t\t  sub(/[^\\t]*\\t/, \"\")\n\t\t  print\n\t\t}\n\t      }\n\t    }\n\t  ' =\"$time\" =\"$time_table\"\n\t)\n\tcountries=$(\n\t  $AWK \\\n\t    \"$output_country_list\" \\\n\t    =\"$continent_re\" =\"$TZ_COUNTRY_TABLE\" =\"$zone_table\" |\n\t  sort -f\n\t)\n\t;;\n      *)\n\tcontinent_re=\"^$continent/\"\n\tzone_table=$TZ_ZONE_TABLE\n      esac\n\n      # Get list of names of countries in the continent or ocean.\n      countries=$(\n\t$AWK \\\n\t  \"$output_country_list\" \\\n\t  =\"$continent_re\" =\"$TZ_COUNTRY_TABLE\" =\"$zone_table\" |\n\tsort -f\n      )\n      # If all zone table entries have comments, and there are\n      # at most 22 entries, asked based on those comments.\n      # This fits the prompt onto old-fashioned 24-line screens.\n      regions=$(\n\t$AWK '\n\t  BEGIN {\n\t    TZ_ZONE_TABLE = substr(ARGV[1], 2)\n\t    ARGV[1] = \"\"\n\t    FS = \"\\t\"\n\t    nlines = split(TZ_ZONE_TABLE, line, /\\n/)\n\t    for (i = 1; i <= nlines; i++) {\n\t      $0 = line[i]\n\t      if ($0 ~ /^[^#]/ && !missing_comment) {\n\t\tif ($4)\n\t\t  comment[++inlines] = $4\n\t\telse\n\t\t  missing_comment = 1\n\t      }\n\t    }\n\t    if (!missing_comment && inlines <= 22)\n\t      for (i = 1; i <= inlines; i++)\n\t\tprint comment[i]\n\t  }\n\t' =\"$zone_table\"\n      )\n\n      # If there's more than one country, ask the user which one.\n      case $countries in\n      *\"$newline\"*)\n\techo >&2 'Please select a country' \\\n\t  'whose clocks agree with yours.'\n\tdoselect $countries\n\tcountry_result=$select_result\n\tcountry=$select_result;;\n      *)\n\tcountry=$countries\n      esac\n\n\n      # Get list of timezones in the country.\n      regions=$(\n\t$AWK '\n\t  BEGIN {\n\t    country = substr(ARGV[1], 2)\n\t    TZ_COUNTRY_TABLE = substr(ARGV[2], 2)\n\t    TZ_ZONE_TABLE = substr(ARGV[3], 2)\n\t    ARGV[1] = ARGV[2] = ARGV[3] = \"\"\n\t    FS = \"\\t\"\n\t    cc = country\n\t    nlines = split(TZ_COUNTRY_TABLE, line, /\\n/)\n\t    for (i = 1; i <= nlines; i++) {\n\t      $0 = line[i]\n\t      if ($0 !~ /^#/  &&  country == $2) {\n\t\tcc = $1\n\t\tbreak\n\t      }\n\t    }\n\t    nlines = split(TZ_ZONE_TABLE, line, /\\n/)\n\t    for (i = 1; i <= nlines; i++) {\n\t      $0 = line[i]\n\t      if ($0 ~ /^#/)\n\t\tcontinue\n\t      if ($1 ~ cc)\n\t\tprint $4\n\t    }\n\t  }\n\t' =\"$country\" =\"$TZ_COUNTRY_TABLE\" =\"$zone_table\"\n      )\n\n      # If there's more than one region, ask the user which one.\n      case $regions in\n      *\"$newline\"*)\n\techo >&2 'Please select one of the following timezones.'\n\tdoselect $regions\n\tregion=$select_result\n      esac\n\n      # Determine tz from country and region.\n      tz=$(\n\t$AWK '\n\t  BEGIN {\n\t    country = substr(ARGV[1], 2)\n\t    region = substr(ARGV[2], 2)\n\t    TZ_COUNTRY_TABLE = substr(ARGV[3], 2)\n\t    TZ_ZONE_TABLE = substr(ARGV[4], 2)\n\t    ARGV[1] = ARGV[2] = ARGV[3] = ARGV[4] = \"\"\n\t    FS = \"\\t\"\n\t    cc = country\n\t    nlines = split(TZ_COUNTRY_TABLE, line, /\\n/)\n\t    for (i = 1; i <= nlines; i++) {\n\t      $0 = line[i]\n\t      if ($0 !~ /^#/  &&  country == $2) {\n\t\tcc = $1\n\t\tbreak\n\t      }\n\t    }\n\t    nlines = split(TZ_ZONE_TABLE, line, /\\n/)\n\t    for (i = 1; i <= nlines; i++) {\n\t      $0 = line[i]\n\t      if ($0 ~ /^#/)\n\t\tcontinue\n\t      if ($1 ~ cc && ($4 == region || !region))\n\t\tprint $3\n\t    }\n\t  }\n\t' =\"$country\" =\"$region\" =\"$TZ_COUNTRY_TABLE\" =\"$zone_table\"\n      )\n    esac\n\n    # Make sure the corresponding zoneinfo file exists.\n    TZ_for_date=$TZDIR/$tz\n    <\"$TZ_for_date\" || {\n      say >&2 \"$0: time zone files are not set up correctly\"\n      exit 1\n    }\n  esac\n\n\n  # Use the proposed TZ to output the current date relative to UTC.\n  # Loop until they agree in seconds.\n  # Give up after 8 unsuccessful tries.\n\n  extra_info=\n  for i in 1 2 3 4 5 6 7 8\n  do\n    TZdate=$(LANG=C TZ=\"$TZ_for_date\" date)\n    UTdate=$(LANG=C TZ=UTC0 date)\n    TZsecsetc=${TZdate##*[0-5][0-9]:}\n    UTsecsetc=${UTdate##*[0-5][0-9]:}\n    if test \"${TZsecsetc%%[!0-9]*}\" = \"${UTsecsetc%%[!0-9]*}\"\n    then\n      extra_info=\"\nSelected time is now:\t$TZdate.\nUniversal Time is now:\t$UTdate.\"\n      break\n    fi\n  done\n\n\n  # Output TZ info and ask the user to confirm.\n\n  echo >&2 \"\"\n  echo >&2 \"Based on the following information:\"\n  echo >&2 \"\"\n  case $time%$country_result%$region%$coord in\n  ?*%?*%?*%)\n    say >&2 \"\t$time$newline\t$country_result$newline\t$region\";;\n  ?*%?*%%|?*%%?*%) say >&2 \"\t$time$newline\t$country_result$region\";;\n  ?*%%%)\tsay >&2 \"\t$time\";;\n  %?*%?*%)\tsay >&2 \"\t$country_result$newline\t$region\";;\n  %?*%%)\tsay >&2 \"\t$country_result\";;\n  %%?*%?*)\tsay >&2 \"\tcoord $coord$newline\t$region\";;\n  %%%?*)\tsay >&2 \"\tcoord $coord\";;\n  *)\t\tsay >&2 \"\tTZ='$tz'\"\n  esac\n  say >&2 \"\"\n  say >&2 \"TZ='$tz' will be used.$extra_info\"\n  say >&2 \"Is the above information OK?\"\n\n  doselect Yes No\n  ok=$select_result\n  case $ok in\n  Yes) break\n  esac\ndo coord=\ndone\n\ncase $SHELL in\n*csh) file=.login line=\"setenv TZ '$tz'\";;\n*)    file=.profile line=\"export TZ='$tz'\"\nesac\n\ntest -t 1 && say >&2 \"\nYou can make this change permanent for yourself by appending the line\n\t$line\nto the file '$file' in your home directory; then log out and log in again.\n\nHere is that TZ value again, this time on standard output so that you\ncan use the $0 command in shell scripts:\"\n\nsay \"$tz\"\n"
        },
        {
          "name": "workman.sh",
          "type": "blob",
          "size": 0.8193359375,
          "content": "#! /bin/sh\n# Convert manual page troff stdin to formatted .txt stdout.\n\n# This file is in the public domain, so clarified as of\n# 2009-05-17 by Arthur David Olson.\n\nif (type nroff && type perl) >/dev/null 2>&1; then\n\n  # Tell groff not to emit SGR escape sequences (ANSI color escapes).\n  export GROFF_NO_SGR=1\n\n  echo \".am TH\n.hy 0\n.na\n..\n.rm }H\n.rm }F\" | nroff -man - ${1+\"$@\"} | perl -ne '\n\tbinmode STDIN, '\\'':encoding(utf8)'\\'';\n\tbinmode STDOUT, '\\'':encoding(utf8)'\\'';\n\tchomp;\n\ts/.\\010//g;\n\ts/\\s*$//;\n\tif (/^$/) {\n\t\t$sawblank = 1;\n\t\tnext;\n\t} else {\n\t\tif ($sawblank && $didprint) {\n\t\t\tprint \"\\n\";\n\t\t\t$sawblank = 0;\n\t\t}\n\t\tprint \"$_\\n\";\n\t\t$didprint = 1;\n\t}\n  '\nelif (type mandoc && type col) >/dev/null 2>&1; then\n  mandoc -man -T ascii \"$@\" | col -bx\nelse\n  echo >&2 \"$0: please install nroff and perl, or mandoc and col\"\n  exit 1\nfi\n"
        },
        {
          "name": "zdump.8",
          "type": "blob",
          "size": 6.677734375,
          "content": ".\\\" This file is in the public domain, so clarified as of\n.\\\" 2009-05-17 by Arthur David Olson.\n.TH zdump 8 \"\" \"Time Zone Database\"\n.SH NAME\nzdump \\- timezone dumper\n.SH SYNOPSIS\n.B zdump\n[\n.I option\n\\&... ] [\n.I timezone\n\\&... ]\n.SH DESCRIPTION\n.ie '\\(lq'' .ds lq \\&\"\\\"\n.el .ds lq \\(lq\\\"\n.ie '\\(rq'' .ds rq \\&\"\\\"\n.el .ds rq \\(rq\\\"\n.de q\n\\\\$3\\*(lq\\\\$1\\*(rq\\\\$2\n..\nThe\n.B zdump\nprogram prints the current time in each\n.I timezone\nnamed on the command line.\nA\n.I timezone\nof\n.B \\-\nis treated as if it were /dev/stdin;\nthis can be used to pipe TZif data into\n.BR zdump .\n.SH OPTIONS\n.TP\n.B \\-\\-version\nOutput version information and exit.\n.TP\n.B \\-\\-help\nOutput short usage message and exit.\n.TP\n.B \\-i\nOutput a description of time intervals.  For each\n.I timezone\non the command line, output an interval-format description of the\ntimezone.  See\n.q \"INTERVAL FORMAT\"\nbelow.\n.TP\n.B \\-v\nOutput a verbose description of time intervals.\nFor each\n.I timezone\non the command line,\nprint the times at the two extreme time values,\nthe times (if present) at and just beyond the boundaries of years that\n.BR localtime (3)\nand\n.BR gmtime (3)\ncan represent, and\nthe times both one second before and exactly at\neach detected time discontinuity.\nEach line is followed by\n.BI isdst= D\nwhere\n.I D\nis positive, zero, or negative depending on whether\nthe given time is daylight saving time, standard time,\nor an unknown time type, respectively.\nEach line is also followed by\n.BI gmtoff= N\nif the given local time is known to be\n.I N\nseconds east of Greenwich.\n.TP\n.B \\-V\nLike\n.BR \\-v ,\nexcept omit output concerning extreme time and year values.\nThis generates output that is easier to compare to that of\nimplementations with different time representations.\n.TP\n.BI \"\\-c \" \\fR[\\fIloyear , \\fR]\\fIhiyear\nCut off interval output at the given year(s).\nCutoff times are computed using the proleptic Gregorian calendar with year 0\nand with Universal Time (UT) ignoring leap seconds.\nCutoffs are at the start of each year, where the lower-bound\ntimestamp is inclusive and the upper is exclusive; for example,\n.B \"\\-c 1970,2070\"\nselects transitions on or after 1970-01-01 00:00:00 UTC\nand before 2070-01-01 00:00:00 UTC.\nThe default cutoff is\n.BR \\-500,2500 .\n.TP\n.BI \"\\-t \" \\fR[\\fIlotime , \\fR]\\fIhitime\nCut off interval output at the given time(s),\ngiven in decimal seconds since 1970-01-01 00:00:00\nCoordinated Universal Time (UTC).\nThe\n.I timezone\ndetermines whether the count includes leap seconds.\nAs with\n.BR \\-c ,\nthe cutoff's lower bound is inclusive and its upper bound is exclusive.\n.SH \"INTERVAL FORMAT\"\nThe interval format is a compact text representation that is intended\nto be both human- and machine-readable.  It consists of an empty line,\nthen a line\n.q \"TZ=\\fIstring\\fP\"\nwhere\n.I string\nis a double-quoted string giving the timezone, a second line\n.q \"\\- \\- \\fIinterval\\fP\"\ndescribing the time interval before the first transition if any, and\nzero or more following lines\n.q \"\\fIdate time interval\\fP\",\none line for each transition time and following interval.  Fields are\nseparated by single tabs.\n.PP\nDates are in\n.IR yyyy - mm - dd\nformat and times are in 24-hour\n.IR hh : mm : ss\nformat where\n.IR hh <24.\nTimes are in local time immediately after the transition.  A\ntime interval description consists of a UT offset in signed\n.RI \\(+- hhmmss\nformat, a time zone abbreviation, and an isdst flag.  An abbreviation\nthat equals the UT offset is omitted; other abbreviations are\ndouble-quoted strings unless they consist of one or more alphabetic\ncharacters.  An isdst flag is omitted for standard time, and otherwise\nis a decimal integer that is unsigned and positive (typically 1) for\ndaylight saving time and negative for unknown.\n.PP\nIn times and in UT offsets with absolute value less than 100 hours,\nthe seconds are omitted if they are zero, and\nthe minutes are also omitted if they are also zero.  Positive UT\noffsets are east of Greenwich.  The UT offset \\-00 denotes a UT\nplaceholder in areas where the actual offset is unspecified; by\nconvention, this occurs when the UT offset is zero and the time zone\nabbreviation begins with\n.q \"\\-\"\nor is\n.q \"zzz\".\n.PP\nIn double-quoted strings, escape sequences represent unusual\ncharacters.  The escape sequences are \\es for space, and \\e\", \\e\\e,\n\\ef, \\en, \\er, \\et, and \\ev with their usual meaning in the C\nprogramming language.  E.g., the double-quoted string\n\\*(lq\"CET\\es\\e\"\\e\\e\"\\*(rq represents the character sequence \\*(lqCET\n\"\\e\\*(rq.\\\"\"\n.PP\n.ne 9\nHere is an example of the output, with the leading empty line omitted.\n(This example is shown with tab stops set far enough apart so that the\ntabbed columns line up.)\n.nf\n.sp\n.if \\n(.g .ft CR\n.if t .in +.5i\n.if n .in +2\n.nr w \\w'1896-01-13  'u+\\n(.i\n.ta \\w'1896-01-13\\0\\0'u +\\w'12:01:26\\0\\0'u +\\w'-103126\\0\\0'u +\\w'HWT\\0\\0'u\nTZ=\"Pacific/Honolulu\"\n-\t-\t-103126\tLMT\n1896-01-13\t12:01:26\t-1030\tHST\n1933-04-30\t03\t-0930\tHDT\t1\n1933-05-21\t11\t-1030\tHST\n1942-02-09\t03\t-0930\tHWT\t1\n1945-08-14\t13:30\t-0930\tHPT\t1\n1945-09-30\t01\t-1030\tHST\n1947-06-08\t02:30\t-10\tHST\n.in\n.if \\n(.g .ft\n.sp\n.fi\nHere, local time begins 10 hours, 31 minutes and 26 seconds west of\nUT, and is a standard time abbreviated LMT.  Immediately after the\nfirst transition, the date is 1896-01-13 and the time is 12:01:26, and\nthe following time interval is 10.5 hours west of UT, a standard time\nabbreviated HST.  Immediately after the second transition, the date is\n1933-04-30 and the time is 03:00:00 and the following time interval is\n9.5 hours west of UT, is abbreviated HDT, and is daylight saving time.\nImmediately after the last transition the date is 1947-06-08 and the\ntime is 02:30:00, and the following time interval is 10 hours west of\nUT, a standard time abbreviated HST.\n.PP\n.ne 10\nHere are excerpts from another example:\n.nf\n.sp\n.if \\n(.g .ft CR\n.if t .in +.5i\n.if n .in +2\nTZ=\"Europe/Astrakhan\"\n-\t-\t+031212\tLMT\n1924-04-30\t23:47:48\t+03\n1930-06-21\t01\t+04\n1981-04-01\t01\t+05\t\t1\n1981-09-30\t23\t+04\n\\&...\n2014-10-26\t01\t+03\n2016-03-27\t03\t+04\n.in\n.if \\n(.g .ft\n.sp\n.fi\nThis time zone is east of UT, so its UT offsets are positive.  Also,\nmany of its time zone abbreviations are omitted since they duplicate\nthe text of the UT offset.\n.SH LIMITATIONS\nTime discontinuities are found by sampling the results returned by\n.BR localtime (3)\nat twelve-hour intervals.\nThis works in all real-world cases;\none can construct artificial time zones for which this fails.\n.PP\nIn the\n.B \\-v\nand\n.B \\-V\noutput,\n.q \"UT\"\ndenotes the value returned by\n.BR gmtime (3),\nwhich uses UTC for modern timestamps and some other UT flavor for\ntimestamps that predate the introduction of UTC.\nNo attempt is currently made to have the output use\n.q \"UTC\"\nfor newer and\n.q \"UT\"\nfor older timestamps, partly because the exact date of the\nintroduction of UTC is problematic.\n.SH SEE ALSO\n.BR tzfile (5),\n.BR zic (8)\n"
        },
        {
          "name": "zdump.c",
          "type": "blob",
          "size": 33.28515625,
          "content": "/* Dump time zone data in a textual format.  */\n\n/*\n** This file is in the public domain, so clarified as of\n** 2009-05-17 by Arthur David Olson.\n*/\n\n#include \"version.h\"\n\n#ifndef NETBSD_INSPIRED\n# define NETBSD_INSPIRED 1\n#endif\n\n#include \"private.h\"\n#include <stdio.h>\n\n#ifndef HAVE_LOCALTIME_R\n# define HAVE_LOCALTIME_R 1\n#endif\n\n#ifndef HAVE_LOCALTIME_RZ\n# ifdef TM_ZONE\n#  define HAVE_LOCALTIME_RZ (NETBSD_INSPIRED && USE_LTZ)\n# else\n#  define HAVE_LOCALTIME_RZ 0\n# endif\n#endif\n\n#ifndef HAVE_TZSET\n# define HAVE_TZSET 1\n#endif\n\n#ifndef ZDUMP_LO_YEAR\n# define ZDUMP_LO_YEAR (-500)\n#endif /* !defined ZDUMP_LO_YEAR */\n\n#ifndef ZDUMP_HI_YEAR\n# define ZDUMP_HI_YEAR 2500\n#endif /* !defined ZDUMP_HI_YEAR */\n\n#define SECSPERNYEAR\t(SECSPERDAY * DAYSPERNYEAR)\n#define SECSPERLYEAR\t(SECSPERNYEAR + SECSPERDAY)\n#define SECSPER400YEARS\t(SECSPERNYEAR * (intmax_t) (300 + 3)\t\\\n\t\t\t + SECSPERLYEAR * (intmax_t) (100 - 3))\n\n/*\n** True if SECSPER400YEARS is known to be representable as an\n** intmax_t.  It's OK that SECSPER400YEARS_FITS can in theory be false\n** even if SECSPER400YEARS is representable, because when that happens\n** the code merely runs a bit more slowly, and this slowness doesn't\n** occur on any practical platform.\n*/\nenum { SECSPER400YEARS_FITS = SECSPERLYEAR <= INTMAX_MAX / 400 };\n\n#if HAVE_GETTEXT\n# include <locale.h> /* for setlocale */\n#endif /* HAVE_GETTEXT */\n\n#if ! HAVE_LOCALTIME_RZ\n# undef  timezone_t\n# define timezone_t char **\n#endif\n\n#if !HAVE_POSIX_DECLS\nextern int\tgetopt(int argc, char * const argv[],\n\t\t\tconst char * options);\nextern char *\toptarg;\nextern int\toptind;\n#endif\n\n/* The minimum and maximum finite time values.  */\nenum { atime_shift = CHAR_BIT * sizeof(time_t) - 2 };\nstatic time_t const absolute_min_time =\n  ((time_t) -1 < 0\n   ? (- ((time_t) ~ (time_t) 0 < 0)\n      - (((time_t) 1 << atime_shift) - 1 + ((time_t) 1 << atime_shift)))\n   : 0);\nstatic time_t const absolute_max_time =\n  ((time_t) -1 < 0\n   ? (((time_t) 1 << atime_shift) - 1 + ((time_t) 1 << atime_shift))\n   : -1);\nstatic int\tlongest;\nstatic char const *progname;\nstatic bool\twarned;\nstatic bool\terrout;\n\nstatic char const *abbr(struct tm const *);\nstatic intmax_t delta(struct tm *, struct tm *);\nstatic void dumptime(struct tm const *);\nstatic time_t hunt(timezone_t, time_t, time_t, bool);\nstatic void show(timezone_t, char *, time_t, bool);\nstatic void showextrema(timezone_t, char *, time_t, struct tm *, time_t);\nstatic void showtrans(char const *, struct tm const *, time_t, char const *,\n\t\t      char const *);\nstatic const char *tformat(void);\nATTRIBUTE_PURE_114833 static time_t yeartot(intmax_t);\n\n/* Is C an ASCII digit?  */\nstatic bool\nis_digit(char c)\n{\n  return '0' <= c && c <= '9';\n}\n\n/* Is A an alphabetic character in the C locale?  */\nstatic bool\nis_alpha(char a)\n{\n\tswitch (a) {\n\t  default:\n\t\treturn false;\n\t  case 'A': case 'B': case 'C': case 'D': case 'E': case 'F': case 'G':\n\t  case 'H': case 'I': case 'J': case 'K': case 'L': case 'M': case 'N':\n\t  case 'O': case 'P': case 'Q': case 'R': case 'S': case 'T': case 'U':\n\t  case 'V': case 'W': case 'X': case 'Y': case 'Z':\n\t  case 'a': case 'b': case 'c': case 'd': case 'e': case 'f': case 'g':\n\t  case 'h': case 'i': case 'j': case 'k': case 'l': case 'm': case 'n':\n\t  case 'o': case 'p': case 'q': case 'r': case 's': case 't': case 'u':\n\t  case 'v': case 'w': case 'x': case 'y': case 'z':\n\t\treturn true;\n\t}\n}\n\nATTRIBUTE_NORETURN static void\nsize_overflow(void)\n{\n  fprintf(stderr, _(\"%s: size overflow\\n\"), progname);\n  exit(EXIT_FAILURE);\n}\n\n/* Return A + B, exiting if the result would overflow either ptrdiff_t\n   or size_t.  A and B are both nonnegative.  */\nATTRIBUTE_PURE_114833 static ptrdiff_t\nsumsize(ptrdiff_t a, ptrdiff_t b)\n{\n#ifdef ckd_add\n  ptrdiff_t sum;\n  if (!ckd_add(&sum, a, b) && sum <= INDEX_MAX)\n    return sum;\n#else\n  if (a <= INDEX_MAX && b <= INDEX_MAX - a)\n    return a + b;\n#endif\n  size_overflow();\n}\n\n\n/* Return a pointer to a newly allocated buffer of size SIZE, exiting\n   on failure.  SIZE should be positive.  */\nstatic void *\nxmalloc(ptrdiff_t size)\n{\n  void *p = malloc(size);\n  if (!p) {\n    fprintf(stderr, _(\"%s: Memory exhausted\\n\"), progname);\n    exit(EXIT_FAILURE);\n  }\n  return p;\n}\n\n#if ! HAVE_TZSET\n# undef tzset\n# define tzset zdump_tzset\nstatic void tzset(void) { }\n#endif\n\n/* Assume gmtime_r works if localtime_r does.\n   A replacement localtime_r is defined below if needed.  */\n#if ! HAVE_LOCALTIME_R\n\n# undef gmtime_r\n# define gmtime_r zdump_gmtime_r\n\nstatic struct tm *\ngmtime_r(time_t *tp, struct tm *tmp)\n{\n  struct tm *r = gmtime(tp);\n  if (r) {\n    *tmp = *r;\n    r = tmp;\n  }\n  return r;\n}\n\n#endif\n\n/* Platforms with TM_ZONE don't need tzname, so they can use the\n   faster localtime_rz or localtime_r if available.  */\n\n#if defined TM_ZONE && HAVE_LOCALTIME_RZ\n# define USE_LOCALTIME_RZ true\n#else\n# define USE_LOCALTIME_RZ false\n#endif\n\n#if ! USE_LOCALTIME_RZ\n\n# if !defined TM_ZONE || ! HAVE_LOCALTIME_R || ! HAVE_TZSET\n#  undef localtime_r\n#  define localtime_r zdump_localtime_r\nstatic struct tm *\nlocaltime_r(time_t *tp, struct tm *tmp)\n{\n  struct tm *r = localtime(tp);\n  if (r) {\n    *tmp = *r;\n    r = tmp;\n  }\n  return r;\n}\n# endif\n\n# undef localtime_rz\n# define localtime_rz zdump_localtime_rz\nstatic struct tm *\nlocaltime_rz(ATTRIBUTE_MAYBE_UNUSED timezone_t rz, time_t *tp, struct tm *tmp)\n{\n  return localtime_r(tp, tmp);\n}\n\n# ifdef TYPECHECK\n#  undef mktime_z\n#  define mktime_z zdump_mktime_z\nstatic time_t\nmktime_z(timezone_t tz, struct tm *tmp)\n{\n  return mktime(tmp);\n}\n# endif\n\n# undef tzalloc\n# undef tzfree\n# define tzalloc zdump_tzalloc\n# define tzfree zdump_tzfree\n\nstatic timezone_t\ntzalloc(char const *val)\n{\n# if HAVE_SETENV\n  if (setenv(\"TZ\", val, 1) != 0) {\n    char const *e = strerror(errno);\n    fprintf(stderr, _(\"%s: setenv: %s\\n\"), progname, e);\n    exit(EXIT_FAILURE);\n  }\n  tzset();\n  return &optarg;  /* Any valid non-null char ** will do.  */\n# else\n  enum { TZeqlen = 3 };\n  static char const TZeq[TZeqlen] = \"TZ=\";\n  static char **fakeenv;\n  static ptrdiff_t fakeenv0size;\n  void *freeable = NULL;\n  char **env = fakeenv, **initial_environ;\n  ptrdiff_t valsize = strlen(val) + 1;\n  if (fakeenv0size < valsize) {\n    char **e = environ, **to;\n    ptrdiff_t initial_nenvptrs = 1;  /* Counting the trailing NULL pointer.  */\n\n    while (*e++) {\n#  ifdef ckd_add\n      if (ckd_add(&initial_nenvptrs, initial_nenvptrs, 1)\n\t  || INDEX_MAX < initial_nenvptrs)\n\tsize_overflow();\n#  else\n      if (initial_nenvptrs == INDEX_MAX / sizeof *environ)\n\tsize_overflow();\n      initial_nenvptrs++;\n#  endif\n    }\n    fakeenv0size = sumsize(valsize, valsize);\n    fakeenv0size = max(fakeenv0size, 64);\n    freeable = env;\n    fakeenv = env =\n      xmalloc(sumsize(sumsize(sizeof *environ,\n\t\t\t      initial_nenvptrs * sizeof *environ),\n\t\t      sumsize(TZeqlen, fakeenv0size)));\n    to = env + 1;\n    for (e = environ; (*to = *e); e++)\n      to += strncmp(*e, TZeq, TZeqlen) != 0;\n    env[0] = memcpy(to + 1, TZeq, TZeqlen);\n  }\n  memcpy(env[0] + TZeqlen, val, valsize);\n  initial_environ = environ;\n  environ = env;\n  tzset();\n  free(freeable);\n  return initial_environ;\n# endif\n}\n\nstatic void\ntzfree(ATTRIBUTE_MAYBE_UNUSED timezone_t initial_environ)\n{\n# if !HAVE_SETENV\n  environ = initial_environ;\n  tzset();\n# endif\n}\n#endif /* ! USE_LOCALTIME_RZ */\n\n/* A UT time zone, and its initializer.  */\nstatic timezone_t gmtz;\nstatic void\ngmtzinit(void)\n{\n  if (USE_LOCALTIME_RZ) {\n    /* Try \"GMT\" first to find out whether this is one of the rare\n       platforms where time_t counts leap seconds; this works due to\n       the \"Zone GMT 0 - GMT\" line in the \"etcetera\" file.  If \"GMT\"\n       fails, fall back on \"GMT0\" which might be similar due to the\n       \"Link GMT GMT0\" line in the \"backward\" file, and which\n       should work on all POSIX platforms.  The rest of zdump does not\n       use the \"GMT\" abbreviation that comes from this setting, so it\n       is OK to use \"GMT\" here rather than the modern \"UTC\" which\n       would not work on platforms that omit the \"backward\" file.  */\n    gmtz = tzalloc(\"GMT\");\n    if (!gmtz) {\n      static char const gmt0[] = \"GMT0\";\n      gmtz = tzalloc(gmt0);\n      if (!gmtz) {\n\tchar const *e = strerror(errno);\n\tfprintf(stderr, _(\"%s: unknown timezone '%s': %s\\n\"),\n\t\tprogname, gmt0, e);\n\texit(EXIT_FAILURE);\n      }\n    }\n  }\n}\n\n/* Convert *TP to UT, storing the broken-down time into *TMP.\n   Return TMP if successful, NULL otherwise.  This is like gmtime_r(TP, TMP),\n   except typically faster if USE_LOCALTIME_RZ.  */\nstatic struct tm *\nmy_gmtime_r(time_t *tp, struct tm *tmp)\n{\n  return USE_LOCALTIME_RZ ? localtime_rz(gmtz, tp, tmp) : gmtime_r(tp, tmp);\n}\n\n#ifndef TYPECHECK\n# define my_localtime_rz localtime_rz\n#else /* !defined TYPECHECK */\n\nstatic struct tm *\nmy_localtime_rz(timezone_t tz, time_t *tp, struct tm *tmp)\n{\n\ttmp = localtime_rz(tz, tp, tmp);\n\tif (tmp) {\n\t\tstruct tm\ttm;\n\t\tregister time_t\tt;\n\n\t\ttm = *tmp;\n\t\tt = mktime_z(tz, &tm);\n\t\tif (t != *tp) {\n\t\t\tfflush(stdout);\n\t\t\tfprintf(stderr, \"\\n%s: \", progname);\n\t\t\tfprintf(stderr, tformat(), *tp);\n\t\t\tfprintf(stderr, \" ->\");\n\t\t\tfprintf(stderr, \" year=%d\", tmp->tm_year);\n\t\t\tfprintf(stderr, \" mon=%d\", tmp->tm_mon);\n\t\t\tfprintf(stderr, \" mday=%d\", tmp->tm_mday);\n\t\t\tfprintf(stderr, \" hour=%d\", tmp->tm_hour);\n\t\t\tfprintf(stderr, \" min=%d\", tmp->tm_min);\n\t\t\tfprintf(stderr, \" sec=%d\", tmp->tm_sec);\n\t\t\tfprintf(stderr, \" isdst=%d\", tmp->tm_isdst);\n\t\t\tfprintf(stderr, \" -> \");\n\t\t\tfprintf(stderr, tformat(), t);\n\t\t\tfprintf(stderr, \"\\n\");\n\t\t\terrout = true;\n\t\t}\n\t}\n\treturn tmp;\n}\n#endif /* !defined TYPECHECK */\n\nstatic void\nabbrok(const char *const abbrp, const char *const zone)\n{\n\tregister const char *\tcp;\n\tregister const char *\twp;\n\n\tif (warned)\n\t\treturn;\n\tcp = abbrp;\n\twhile (is_alpha(*cp) || is_digit(*cp) || *cp == '-' || *cp == '+')\n\t\t++cp;\n\tif (*cp)\n\t  wp = _(\"has characters other than ASCII alphanumerics, '-' or '+'\");\n\telse if (cp - abbrp < 3)\n\t  wp = _(\"has fewer than 3 characters\");\n\telse if (cp - abbrp > 6)\n\t  wp = _(\"has more than 6 characters\");\n\telse\n\t  return;\n\tfflush(stdout);\n\tfprintf(stderr,\n\t\t_(\"%s: warning: zone \\\"%s\\\" abbreviation \\\"%s\\\" %s\\n\"),\n\t\tprogname, zone, abbrp, wp);\n\twarned = errout = true;\n}\n\n/* Return a time zone abbreviation.  If the abbreviation needs to be\n   saved, use *BUF (of size *BUFALLOC) to save it, and return the\n   abbreviation in the possibly reallocated *BUF.  Otherwise, just\n   return the abbreviation.  Get the abbreviation from TMP.\n   Exit on memory allocation failure.  */\nstatic char const *\nsaveabbr(char **buf, ptrdiff_t *bufalloc, struct tm const *tmp)\n{\n  char const *ab = abbr(tmp);\n  if (HAVE_LOCALTIME_RZ)\n    return ab;\n  else {\n    ptrdiff_t absize = strlen(ab) + 1;\n    if (*bufalloc < absize) {\n      free(*buf);\n\n      /* Make the new buffer at least twice as long as the old,\n\t to avoid O(N**2) behavior on repeated calls.  */\n      *bufalloc = sumsize(*bufalloc, absize);\n\n      *buf = xmalloc(*bufalloc);\n    }\n    return strcpy(*buf, ab);\n  }\n}\n\nstatic void\nclose_file(FILE *stream)\n{\n  char const *e = (ferror(stream) ? _(\"I/O error\")\n\t\t   : fclose(stream) != 0 ? strerror(errno) : NULL);\n  if (e) {\n    fprintf(stderr, \"%s: %s\\n\", progname, e);\n    exit(EXIT_FAILURE);\n  }\n}\n\nstatic void\nusage(FILE * const stream, const int status)\n{\n\tfprintf(stream,\n_(\"%s: usage: %s OPTIONS TIMEZONE ...\\n\"\n  \"Options include:\\n\"\n  \"  -c [L,]U   Start at year L (default -500), end before year U (default 2500)\\n\"\n  \"  -t [L,]U   Start at time L, end before time U (in seconds since 1970)\\n\"\n  \"  -i         List transitions briefly (format is experimental)\\n\" \\\n  \"  -v         List transitions verbosely\\n\"\n  \"  -V         List transitions a bit less verbosely\\n\"\n  \"  --help     Output this help\\n\"\n  \"  --version  Output version info\\n\"\n  \"\\n\"\n  \"Report bugs to %s.\\n\"),\n\t\tprogname, progname, REPORT_BUGS_TO);\n\tif (status == EXIT_SUCCESS)\n\t  close_file(stream);\n\texit(status);\n}\n\nint\nmain(int argc, char *argv[])\n{\n\t/* These are static so that they're initially zero.  */\n\tstatic char *\t\tabbrev;\n\tstatic ptrdiff_t\tabbrevsize;\n\n\tregister int\t\ti;\n\tregister bool\t\tvflag;\n\tregister bool\t\tVflag;\n\tregister char *\t\tcutarg;\n\tregister char *\t\tcuttimes;\n\tregister time_t\t\tcutlotime;\n\tregister time_t\t\tcuthitime;\n\ttime_t\t\t\tnow;\n\tbool iflag = false;\n\tsize_t arglenmax = 0;\n\n\tcutlotime = absolute_min_time;\n\tcuthitime = absolute_max_time;\n#if HAVE_GETTEXT\n\tsetlocale(LC_ALL, \"\");\n# ifdef TZ_DOMAINDIR\n\tbindtextdomain(TZ_DOMAIN, TZ_DOMAINDIR);\n# endif /* defined TEXTDOMAINDIR */\n\ttextdomain(TZ_DOMAIN);\n#endif /* HAVE_GETTEXT */\n\tprogname = argv[0] ? argv[0] : \"zdump\";\n\tfor (i = 1; i < argc; ++i)\n\t\tif (strcmp(argv[i], \"--version\") == 0) {\n\t\t\tprintf(\"zdump %s%s\\n\", PKGVERSION, TZVERSION);\n\t\t\treturn EXIT_SUCCESS;\n\t\t} else if (strcmp(argv[i], \"--help\") == 0) {\n\t\t\tusage(stdout, EXIT_SUCCESS);\n\t\t}\n\tvflag = Vflag = false;\n\tcutarg = cuttimes = NULL;\n\tfor (;;)\n\t  switch (getopt(argc, argv, \"c:it:vV\")) {\n\t  case 'c': cutarg = optarg; break;\n\t  case 't': cuttimes = optarg; break;\n\t  case 'i': iflag = true; break;\n\t  case 'v': vflag = true; break;\n\t  case 'V': Vflag = true; break;\n\t  case -1:\n\t    if (! (optind == argc - 1 && strcmp(argv[optind], \"=\") == 0))\n\t      goto arg_processing_done;\n\t    ATTRIBUTE_FALLTHROUGH;\n\t  default:\n\t    usage(stderr, EXIT_FAILURE);\n\t  }\n arg_processing_done:;\n\n\tif (iflag | vflag | Vflag) {\n\t\tintmax_t\tlo;\n\t\tintmax_t\thi;\n\t\tchar *loend, *hiend;\n\t\tregister intmax_t cutloyear = ZDUMP_LO_YEAR;\n\t\tregister intmax_t cuthiyear = ZDUMP_HI_YEAR;\n\t\tif (cutarg != NULL) {\n\t\t\tlo = strtoimax(cutarg, &loend, 10);\n\t\t\tif (cutarg != loend && !*loend) {\n\t\t\t\thi = lo;\n\t\t\t\tcuthiyear = hi;\n\t\t\t} else if (cutarg != loend && *loend == ','\n\t\t\t\t   && (hi = strtoimax(loend + 1, &hiend, 10),\n\t\t\t\t       loend + 1 != hiend && !*hiend)) {\n\t\t\t\tcutloyear = lo;\n\t\t\t\tcuthiyear = hi;\n\t\t\t} else {\n\t\t\t\tfprintf(stderr, _(\"%s: wild -c argument %s\\n\"),\n\t\t\t\t\tprogname, cutarg);\n\t\t\t\treturn EXIT_FAILURE;\n\t\t\t}\n\t\t}\n\t\tif (cutarg != NULL || cuttimes == NULL) {\n\t\t\tcutlotime = yeartot(cutloyear);\n\t\t\tcuthitime = yeartot(cuthiyear);\n\t\t}\n\t\tif (cuttimes != NULL) {\n\t\t\tlo = strtoimax(cuttimes, &loend, 10);\n\t\t\tif (cuttimes != loend && !*loend) {\n\t\t\t\thi = lo;\n\t\t\t\tif (hi < cuthitime) {\n\t\t\t\t\tif (hi < absolute_min_time + 1)\n\t\t\t\t\t  hi = absolute_min_time + 1;\n\t\t\t\t\tcuthitime = hi;\n\t\t\t\t}\n\t\t\t} else if (cuttimes != loend && *loend == ','\n\t\t\t\t   && (hi = strtoimax(loend + 1, &hiend, 10),\n\t\t\t\t       loend + 1 != hiend && !*hiend)) {\n\t\t\t\tif (cutlotime < lo) {\n\t\t\t\t\tif (absolute_max_time < lo)\n\t\t\t\t\t\tlo = absolute_max_time;\n\t\t\t\t\tcutlotime = lo;\n\t\t\t\t}\n\t\t\t\tif (hi < cuthitime) {\n\t\t\t\t\tif (hi < absolute_min_time + 1)\n\t\t\t\t\t  hi = absolute_min_time + 1;\n\t\t\t\t\tcuthitime = hi;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfprintf(stderr,\n\t\t\t\t\t_(\"%s: wild -t argument %s\\n\"),\n\t\t\t\t\tprogname, cuttimes);\n\t\t\t\treturn EXIT_FAILURE;\n\t\t\t}\n\t\t}\n\t}\n\tgmtzinit();\n\tif (iflag | vflag | Vflag)\n\t  now = 0;\n\telse {\n\t  now = time(NULL);\n\t  now |= !now;\n\t}\n\tfor (i = optind; i < argc; i++) {\n\t  size_t arglen = strlen(argv[i]);\n\t  if (arglenmax < arglen)\n\t    arglenmax = arglen;\n\t}\n\tif (!HAVE_SETENV && INDEX_MAX <= arglenmax)\n\t  size_overflow();\n\tlongest = min(arglenmax, INT_MAX - 2);\n\n\tfor (i = optind; i < argc; ++i) {\n\t\t/* Treat \"-\" as standard input on platforms with /dev/stdin.\n\t\t   It's not worth the bother of supporting \"-\" on other\n\t\t   platforms, as that would need temp files.  */\n\t\ttimezone_t tz = tzalloc(strcmp(argv[i], \"-\") == 0\n\t\t\t\t\t? \"/dev/stdin\" : argv[i]);\n\t\tchar const *ab;\n\t\ttime_t t;\n\t\tstruct tm tm, newtm;\n\t\tbool tm_ok;\n\t\tif (!tz) {\n\t\t  char const *e = strerror(errno);\n\t\t  fprintf(stderr, _(\"%s: unknown timezone '%s': %s\\n\"),\n\t\t\t  progname, argv[i], e);\n\t\t  return EXIT_FAILURE;\n\t\t}\n\t\tif (now) {\n\t\t\tshow(tz, argv[i], now, false);\n\t\t\ttzfree(tz);\n\t\t\tcontinue;\n\t\t}\n\t\twarned = false;\n\t\tt = absolute_min_time;\n\t\tif (! (iflag | Vflag)) {\n\t\t\tshow(tz, argv[i], t, true);\n\t\t\tif (my_localtime_rz(tz, &t, &tm) == NULL\n\t\t\t    && t < cutlotime) {\n\t\t\t\ttime_t newt = cutlotime;\n\t\t\t\tif (my_localtime_rz(tz, &newt, &newtm) != NULL)\n\t\t\t\t  showextrema(tz, argv[i], t, NULL, newt);\n\t\t\t}\n\t\t}\n\t\tif (t + 1 < cutlotime)\n\t\t  t = cutlotime - 1;\n\t\ttm_ok = my_localtime_rz(tz, &t, &tm) != NULL;\n\t\tif (tm_ok) {\n\t\t  ab = saveabbr(&abbrev, &abbrevsize, &tm);\n\t\t  if (iflag) {\n\t\t    showtrans(\"\\nTZ=%f\", &tm, t, ab, argv[i]);\n\t\t    showtrans(\"-\\t-\\t%Q\", &tm, t, ab, argv[i]);\n\t\t  }\n\t\t} else\n\t\t  ab = NULL;\n\t\twhile (t < cuthitime - 1) {\n\t\t  time_t newt = ((t < absolute_max_time - SECSPERDAY / 2\n\t\t\t\t  && t + SECSPERDAY / 2 < cuthitime - 1)\n\t\t\t\t ? t + SECSPERDAY / 2\n\t\t\t\t : cuthitime - 1);\n\t\t  struct tm *newtmp = localtime_rz(tz, &newt, &newtm);\n\t\t  bool newtm_ok = newtmp != NULL;\n\t\t  if (tm_ok != newtm_ok\n\t\t      || (ab && (delta(&newtm, &tm) != newt - t\n\t\t\t\t || newtm.tm_isdst != tm.tm_isdst\n\t\t\t\t || strcmp(abbr(&newtm), ab) != 0))) {\n\t\t    newt = hunt(tz, t, newt, false);\n\t\t    newtmp = localtime_rz(tz, &newt, &newtm);\n\t\t    newtm_ok = newtmp != NULL;\n\t\t    if (iflag)\n\t\t      showtrans(\"%Y-%m-%d\\t%L\\t%Q\", newtmp, newt,\n\t\t\t\tnewtm_ok ? abbr(&newtm) : NULL, argv[i]);\n\t\t    else {\n\t\t      show(tz, argv[i], newt - 1, true);\n\t\t      show(tz, argv[i], newt, true);\n\t\t    }\n\t\t  }\n\t\t  t = newt;\n\t\t  tm_ok = newtm_ok;\n\t\t  if (newtm_ok) {\n\t\t    ab = saveabbr(&abbrev, &abbrevsize, &newtm);\n\t\t    tm = newtm;\n\t\t  }\n\t\t}\n\t\tif (! (iflag | Vflag)) {\n\t\t\ttime_t newt = absolute_max_time;\n\t\t\tt = cuthitime;\n\t\t\tif (t < newt) {\n\t\t\t  struct tm *tmp = my_localtime_rz(tz, &t, &tm);\n\t\t\t  if (tmp != NULL\n\t\t\t      && my_localtime_rz(tz, &newt, &newtm) == NULL)\n\t\t\t    showextrema(tz, argv[i], t, tmp, newt);\n\t\t\t}\n\t\t\tshow(tz, argv[i], absolute_max_time, true);\n\t\t}\n\t\ttzfree(tz);\n\t}\n\tclose_file(stdout);\n\tif (errout && (ferror(stderr) || fclose(stderr) != 0))\n\t  return EXIT_FAILURE;\n\treturn EXIT_SUCCESS;\n}\n\nstatic time_t\nyeartot(intmax_t y)\n{\n\tregister intmax_t\tmyy, seconds, years;\n\tregister time_t\t\tt;\n\n\tmyy = EPOCH_YEAR;\n\tt = 0;\n\twhile (myy < y) {\n\t\tif (SECSPER400YEARS_FITS && 400 <= y - myy) {\n\t\t\tintmax_t diff400 = (y - myy) / 400;\n\t\t\tif (INTMAX_MAX / SECSPER400YEARS < diff400)\n\t\t\t\treturn absolute_max_time;\n\t\t\tseconds = diff400 * SECSPER400YEARS;\n\t\t\tyears = diff400 * 400;\n\t\t} else {\n\t\t\tseconds = isleap(myy) ? SECSPERLYEAR : SECSPERNYEAR;\n\t\t\tyears = 1;\n\t\t}\n\t\tmyy += years;\n\t\tif (t > absolute_max_time - seconds)\n\t\t\treturn absolute_max_time;\n\t\tt += seconds;\n\t}\n\twhile (y < myy) {\n\t\tif (SECSPER400YEARS_FITS && y + 400 <= myy && myy < 0) {\n\t\t\tintmax_t diff400 = (myy - y) / 400;\n\t\t\tif (INTMAX_MAX / SECSPER400YEARS < diff400)\n\t\t\t\treturn absolute_min_time;\n\t\t\tseconds = diff400 * SECSPER400YEARS;\n\t\t\tyears = diff400 * 400;\n\t\t} else {\n\t\t\tseconds = isleap(myy - 1) ? SECSPERLYEAR : SECSPERNYEAR;\n\t\t\tyears = 1;\n\t\t}\n\t\tmyy -= years;\n\t\tif (t < absolute_min_time + seconds)\n\t\t\treturn absolute_min_time;\n\t\tt -= seconds;\n\t}\n\treturn t;\n}\n\n/* Search for a discontinuity in timezone TZ, in the\n   timestamps ranging from LOT through HIT.  LOT and HIT disagree\n   about some aspect of timezone.  If ONLY_OK, search only for\n   definedness changes, i.e., localtime succeeds on one side of the\n   transition but fails on the other side.  Return the timestamp just\n   before the transition from LOT's settings.  */\n\nstatic time_t\nhunt(timezone_t tz, time_t lot, time_t hit, bool only_ok)\n{\n\tstatic char *\t\tloab;\n\tstatic ptrdiff_t\tloabsize;\n\tstruct tm\t\tlotm;\n\tstruct tm\t\ttm;\n\n\t/* Convert LOT into a broken-down time here, even though our\n\t   caller already did that.  On platforms without TM_ZONE,\n\t   tzname may have been altered since our caller broke down\n\t   LOT, and tzname needs to be changed back.  */\n\tbool lotm_ok = my_localtime_rz(tz, &lot, &lotm) != NULL;\n\tbool tm_ok;\n\tchar const *ab = lotm_ok ? saveabbr(&loab, &loabsize, &lotm) : NULL;\n\n\tfor ( ; ; ) {\n\t\t/* T = average of LOT and HIT, rounding down.\n\t\t   Avoid overflow.  */\n\t\tint rem_sum = lot % 2 + hit % 2;\n\t\ttime_t t = (rem_sum == 2) - (rem_sum < 0) + lot / 2 + hit / 2;\n\t\tif (t == lot)\n\t\t\tbreak;\n\t\ttm_ok = my_localtime_rz(tz, &t, &tm) != NULL;\n\t\tif (lotm_ok == tm_ok\n\t\t    && (only_ok\n\t\t\t|| (ab && tm.tm_isdst == lotm.tm_isdst\n\t\t\t    && delta(&tm, &lotm) == t - lot\n\t\t\t    && strcmp(abbr(&tm), ab) == 0))) {\n\t\t  lot = t;\n\t\t  if (tm_ok)\n\t\t    lotm = tm;\n\t\t} else\thit = t;\n\t}\n\treturn hit;\n}\n\n/*\n** Thanks to Paul Eggert for logic used in delta_nonneg.\n*/\n\nstatic intmax_t\ndelta_nonneg(struct tm *newp, struct tm *oldp)\n{\n\tintmax_t oldy = oldp->tm_year;\n\tint cycles = (newp->tm_year - oldy) / YEARSPERREPEAT;\n\tintmax_t sec = SECSPERREPEAT, result = cycles * sec;\n\tint tmy = oldp->tm_year + cycles * YEARSPERREPEAT;\n\tfor ( ; tmy < newp->tm_year; ++tmy)\n\t\tresult += DAYSPERNYEAR + isleap_sum(tmy, TM_YEAR_BASE);\n\tresult += newp->tm_yday - oldp->tm_yday;\n\tresult *= HOURSPERDAY;\n\tresult += newp->tm_hour - oldp->tm_hour;\n\tresult *= MINSPERHOUR;\n\tresult += newp->tm_min - oldp->tm_min;\n\tresult *= SECSPERMIN;\n\tresult += newp->tm_sec - oldp->tm_sec;\n\treturn result;\n}\n\nstatic intmax_t\ndelta(struct tm *newp, struct tm *oldp)\n{\n  return (newp->tm_year < oldp->tm_year\n\t  ? -delta_nonneg(oldp, newp)\n\t  : delta_nonneg(newp, oldp));\n}\n\n#ifndef TM_GMTOFF\n/* Return A->tm_yday, adjusted to compare it fairly to B->tm_yday.\n   Assume A and B differ by at most one year.  */\nstatic int\nadjusted_yday(struct tm const *a, struct tm const *b)\n{\n  int yday = a->tm_yday;\n  if (b->tm_year < a->tm_year)\n    yday += 365 + isleap_sum(b->tm_year, TM_YEAR_BASE);\n  return yday;\n}\n#endif\n\n/* If A is the broken-down local time and B the broken-down UT for\n   the same instant, return A's UT offset in seconds, where positive\n   offsets are east of Greenwich.  On failure, return LONG_MIN.\n\n   If T is nonnull, *T is the timestamp that corresponds to A; call\n   my_gmtime_r and use its result instead of B.  Otherwise, B is the\n   possibly nonnull result of an earlier call to my_gmtime_r.  */\nstatic long\ngmtoff(struct tm const *a, ATTRIBUTE_MAYBE_UNUSED time_t *t,\n       ATTRIBUTE_MAYBE_UNUSED struct tm const *b)\n{\n#ifdef TM_GMTOFF\n  return a->TM_GMTOFF;\n#else\n  struct tm tm;\n  if (t)\n    b = my_gmtime_r(t, &tm);\n  if (! b)\n    return LONG_MIN;\n  else {\n    int ayday = adjusted_yday(a, b);\n    int byday = adjusted_yday(b, a);\n    int days = ayday - byday;\n    long hours = a->tm_hour - b->tm_hour + 24 * days;\n    long minutes = a->tm_min - b->tm_min + 60 * hours;\n    long seconds = a->tm_sec - b->tm_sec + 60 * minutes;\n    return seconds;\n  }\n#endif\n}\n\nstatic void\nshow(timezone_t tz, char *zone, time_t t, bool v)\n{\n\tregister struct tm *\ttmp;\n\tregister struct tm *\tgmtmp;\n\tstruct tm tm, gmtm;\n\n\tprintf(\"%-*s  \", longest, zone);\n\tif (v) {\n\t\tgmtmp = my_gmtime_r(&t, &gmtm);\n\t\tif (gmtmp == NULL) {\n\t\t\tprintf(tformat(), t);\n\t\t\tprintf(_(\" (gmtime failed)\"));\n\t\t} else {\n\t\t\tdumptime(gmtmp);\n\t\t\tprintf(\" UT\");\n\t\t}\n\t\tprintf(\" = \");\n\t}\n\ttmp = my_localtime_rz(tz, &t, &tm);\n\tif (tmp == NULL) {\n\t\tprintf(tformat(), t);\n\t\tprintf(_(\" (localtime failed)\"));\n\t} else {\n\t\tdumptime(tmp);\n\t\tif (*abbr(tmp) != '\\0')\n\t\t\tprintf(\" %s\", abbr(tmp));\n\t\tif (v) {\n\t\t\tlong off = gmtoff(tmp, NULL, gmtmp);\n\t\t\tprintf(\" isdst=%d\", tmp->tm_isdst);\n\t\t\tif (off != LONG_MIN)\n\t\t\t  printf(\" gmtoff=%ld\", off);\n\t\t}\n\t}\n\tprintf(\"\\n\");\n\tif (tmp != NULL && *abbr(tmp) != '\\0')\n\t\tabbrok(abbr(tmp), zone);\n}\n\n/* Show timestamps just before and just after a transition between\n   defined and undefined (or vice versa) in either localtime or\n   gmtime.  These transitions are for timezone TZ with name ZONE, in\n   the range from LO (with broken-down time LOTMP if that is nonnull)\n   through HI.  LO and HI disagree on definedness.  */\n\nstatic void\nshowextrema(timezone_t tz, char *zone, time_t lo, struct tm *lotmp, time_t hi)\n{\n  struct tm localtm[2], gmtm[2];\n  time_t t, boundary = hunt(tz, lo, hi, true);\n  bool old = false;\n  hi = (SECSPERDAY < hi - boundary\n\t? boundary + SECSPERDAY\n\t: hi + (hi < TIME_T_MAX));\n  if (SECSPERDAY < boundary - lo) {\n    lo = boundary - SECSPERDAY;\n    lotmp = my_localtime_rz(tz, &lo, &localtm[old]);\n  }\n  if (lotmp)\n    localtm[old] = *lotmp;\n  else\n    localtm[old].tm_sec = -1;\n  if (! my_gmtime_r(&lo, &gmtm[old]))\n    gmtm[old].tm_sec = -1;\n\n  /* Search sequentially for definedness transitions.  Although this\n     could be sped up by refining 'hunt' to search for either\n     localtime or gmtime definedness transitions, it hardly seems\n     worth the trouble.  */\n  for (t = lo + 1; t < hi; t++) {\n    bool new = !old;\n    if (! my_localtime_rz(tz, &t, &localtm[new]))\n      localtm[new].tm_sec = -1;\n    if (! my_gmtime_r(&t, &gmtm[new]))\n      gmtm[new].tm_sec = -1;\n    if (((localtm[old].tm_sec < 0) != (localtm[new].tm_sec < 0))\n\t| ((gmtm[old].tm_sec < 0) != (gmtm[new].tm_sec < 0))) {\n      show(tz, zone, t - 1, true);\n      show(tz, zone, t, true);\n    }\n    old = new;\n  }\n}\n\n/* On pre-C99 platforms, a snprintf substitute good enough for us.  */\n#if !HAVE_SNPRINTF\n# include <stdarg.h>\nATTRIBUTE_FORMAT((printf, 3, 4)) static int\nmy_snprintf(char *s, size_t size, char const *format, ...)\n{\n  int n;\n  va_list args;\n  char const *arg;\n  size_t arglen, slen;\n  char buf[1024];\n  va_start(args, format);\n  if (strcmp(format, \"%s\") == 0) {\n    arg = va_arg(args, char const *);\n    arglen = strlen(arg);\n  } else {\n    n = vsprintf(buf, format, args);\n    if (n < 0) {\n      va_end(args);\n      return n;\n    }\n    arg = buf;\n    arglen = n;\n  }\n  slen = arglen < size ? arglen : size - 1;\n  memcpy(s, arg, slen);\n  s[slen] = '\\0';\n  n = arglen <= INT_MAX ? arglen : -1;\n  va_end(args);\n  return n;\n}\n# define snprintf my_snprintf\n#endif\n\n/* Store into BUF, of size SIZE, a formatted local time taken from *TM.\n   Use ISO 8601 format +HH:MM:SS.  Omit :SS if SS is zero, and omit\n   :MM too if MM is also zero.\n\n   Return the length of the resulting string.  If the string does not\n   fit, return the length that the string would have been if it had\n   fit; do not overrun the output buffer.  */\nstatic int\nformat_local_time(char *buf, ptrdiff_t size, struct tm const *tm)\n{\n  int ss = tm->tm_sec, mm = tm->tm_min, hh = tm->tm_hour;\n  return (ss\n\t  ? snprintf(buf, size, \"%02d:%02d:%02d\", hh, mm, ss)\n\t  : mm\n\t  ? snprintf(buf, size, \"%02d:%02d\", hh, mm)\n\t  : snprintf(buf, size, \"%02d\", hh));\n}\n\n/* Store into BUF, of size SIZE, a formatted UT offset for the\n   localtime *TM corresponding to time T.  Use ISO 8601 format\n   +HHMMSS, or -HHMMSS for timestamps west of Greenwich; use the\n   format -00 for unknown UT offsets.  If the hour needs more than\n   two digits to represent, extend the length of HH as needed.\n   Otherwise, omit SS if SS is zero, and omit MM too if MM is also\n   zero.\n\n   Return the length of the resulting string, or -1 if the result is\n   not representable as a string.  If the string does not fit, return\n   the length that the string would have been if it had fit; do not\n   overrun the output buffer.  */\nstatic int\nformat_utc_offset(char *buf, ptrdiff_t size, struct tm const *tm, time_t t)\n{\n  long off = gmtoff(tm, &t, NULL);\n  char sign = ((off < 0\n\t\t|| (off == 0\n\t\t    && (*abbr(tm) == '-' || strcmp(abbr(tm), \"zzz\") == 0)))\n\t       ? '-' : '+');\n  long hh;\n  int mm, ss;\n  if (off < 0)\n    {\n      if (off == LONG_MIN)\n\treturn -1;\n      off = -off;\n    }\n  ss = off % 60;\n  mm = off / 60 % 60;\n  hh = off / 60 / 60;\n  return (ss || 100 <= hh\n\t  ? snprintf(buf, size, \"%c%02ld%02d%02d\", sign, hh, mm, ss)\n\t  : mm\n\t  ? snprintf(buf, size, \"%c%02ld%02d\", sign, hh, mm)\n\t  : snprintf(buf, size, \"%c%02ld\", sign, hh));\n}\n\n/* Store into BUF (of size SIZE) a quoted string representation of P.\n   If the representation's length is less than SIZE, return the\n   length; the representation is not null terminated.  Otherwise\n   return SIZE, to indicate that BUF is too small.  */\nstatic ptrdiff_t\nformat_quoted_string(char *buf, ptrdiff_t size, char const *p)\n{\n  char *b = buf;\n  ptrdiff_t s = size;\n  if (!s)\n    return size;\n  *b++ = '\"', s--;\n  for (;;) {\n    char c = *p++;\n    if (s <= 1)\n      return size;\n    switch (c) {\n    default: *b++ = c, s--; continue;\n    case '\\0': *b++ = '\"', s--; return size - s;\n    case '\"': case '\\\\': break;\n    case ' ': c = 's'; break;\n    case '\\f': c = 'f'; break;\n    case '\\n': c = 'n'; break;\n    case '\\r': c = 'r'; break;\n    case '\\t': c = 't'; break;\n    case '\\v': c = 'v'; break;\n    }\n    *b++ = '\\\\', *b++ = c, s -= 2;\n  }\n}\n\n/* Store into BUF (of size SIZE) a timestamp formatted by TIME_FMT.\n   TM is the broken-down time, T the seconds count, AB the time zone\n   abbreviation, and ZONE_NAME the zone name.  Return true if\n   successful, false if the output would require more than SIZE bytes.\n   TIME_FMT uses the same format that strftime uses, with these\n   additions:\n\n   %f zone name\n   %L local time as per format_local_time\n   %Q like \"U\\t%Z\\tD\" where U is the UT offset as for format_utc_offset\n      and D is the isdst flag; except omit D if it is zero, omit %Z if\n      it equals U, quote and escape %Z if it contains nonalphabetics,\n      and omit any trailing tabs.  */\n\nstatic bool\nistrftime(char *buf, ptrdiff_t size, char const *time_fmt,\n\t  struct tm const *tm, time_t t, char const *ab, char const *zone_name)\n{\n  char *b = buf;\n  ptrdiff_t s = size;\n  char const *f = time_fmt, *p;\n\n  for (p = f; ; p++)\n    if (*p == '%' && p[1] == '%')\n      p++;\n    else if (!*p\n\t     || (*p == '%'\n\t\t && (p[1] == 'f' || p[1] == 'L' || p[1] == 'Q'))) {\n      ptrdiff_t formatted_len;\n      ptrdiff_t f_prefix_len = p - f;\n      ptrdiff_t f_prefix_copy_size = sumsize(f_prefix_len, 2);\n      char fbuf[100];\n      bool oversized = sizeof fbuf <= f_prefix_copy_size;\n      char *f_prefix_copy = oversized ? xmalloc(f_prefix_copy_size) : fbuf;\n      memcpy(f_prefix_copy, f, f_prefix_len);\n      strcpy(f_prefix_copy + f_prefix_len, \"X\");\n      formatted_len = strftime(b, s, f_prefix_copy, tm);\n      if (oversized)\n\tfree(f_prefix_copy);\n      if (formatted_len == 0)\n\treturn false;\n      formatted_len--;\n      b += formatted_len, s -= formatted_len;\n      if (!*p++)\n\tbreak;\n      switch (*p) {\n      case 'f':\n\tformatted_len = format_quoted_string(b, s, zone_name);\n\tbreak;\n      case 'L':\n\tformatted_len = format_local_time(b, s, tm);\n\tbreak;\n      case 'Q':\n\t{\n\t  bool show_abbr;\n\t  int offlen = format_utc_offset(b, s, tm, t);\n\t  if (! (0 <= offlen && offlen < s))\n\t    return false;\n\t  show_abbr = strcmp(b, ab) != 0;\n\t  b += offlen, s -= offlen;\n\t  if (show_abbr) {\n\t    char const *abp;\n\t    ptrdiff_t len;\n\t    if (s <= 1)\n\t      return false;\n\t    *b++ = '\\t', s--;\n\t    for (abp = ab; is_alpha(*abp); abp++)\n\t      continue;\n\t    len = (!*abp && *ab\n\t\t   ? snprintf(b, s, \"%s\", ab)\n\t\t   : format_quoted_string(b, s, ab));\n\t    if (s <= len)\n\t      return false;\n\t    b += len, s -= len;\n\t  }\n\t  formatted_len\n\t    = (tm->tm_isdst\n\t       ? snprintf(b, s, &\"\\t\\t%d\"[show_abbr], tm->tm_isdst)\n\t       : 0);\n\t}\n\tbreak;\n      }\n      if (s <= formatted_len)\n\treturn false;\n      b += formatted_len, s -= formatted_len;\n      f = p + 1;\n    }\n  *b = '\\0';\n  return true;\n}\n\n/* Show a time transition.  */\nstatic void\nshowtrans(char const *time_fmt, struct tm const *tm, time_t t, char const *ab,\n\t  char const *zone_name)\n{\n  if (!tm) {\n    printf(tformat(), t);\n    putchar('\\n');\n  } else {\n    char stackbuf[1000];\n    ptrdiff_t size = sizeof stackbuf;\n    char *buf = stackbuf;\n    char *bufalloc = NULL;\n    while (! istrftime(buf, size, time_fmt, tm, t, ab, zone_name)) {\n      size = sumsize(size, size);\n      free(bufalloc);\n      buf = bufalloc = xmalloc(size);\n    }\n    puts(buf);\n    free(bufalloc);\n  }\n}\n\nstatic char const *\nabbr(struct tm const *tmp)\n{\n#ifdef TM_ZONE\n\treturn tmp->TM_ZONE;\n#else\n# if HAVE_TZNAME\n\tif (0 <= tmp->tm_isdst && tzname[0 < tmp->tm_isdst])\n\t  return tzname[0 < tmp->tm_isdst];\n# endif\n\treturn \"\";\n#endif\n}\n\n/*\n** The code below can fail on certain theoretical systems;\n** it works on all known real-world systems as of 2022-01-25.\n*/\n\nstatic const char *\ntformat(void)\n{\n#if HAVE__GENERIC\n\t/* C11-style _Generic is more likely to return the correct\n\t   format when distinct types have the same size.  */\n\tchar const *fmt =\n\t  _Generic(+ (time_t) 0,\n\t\t   int: \"%d\", long: \"%ld\", long long: \"%lld\",\n\t\t   unsigned: \"%u\", unsigned long: \"%lu\",\n\t\t   unsigned long long: \"%llu\",\n\t\t   default: NULL);\n\tif (fmt)\n\t  return fmt;\n\tfmt = _Generic((time_t) 0,\n\t\t       intmax_t: \"%\"PRIdMAX, uintmax_t: \"%\"PRIuMAX,\n\t\t       default: NULL);\n\tif (fmt)\n\t  return fmt;\n#endif\n\tif (0 > (time_t) -1) {\t\t/* signed */\n\t\tif (sizeof(time_t) == sizeof(intmax_t))\n\t\t\treturn \"%\"PRIdMAX;\n\t\tif (sizeof(time_t) > sizeof(long))\n\t\t\treturn \"%lld\";\n\t\tif (sizeof(time_t) > sizeof(int))\n\t\t\treturn \"%ld\";\n\t\treturn \"%d\";\n\t}\n#ifdef PRIuMAX\n\tif (sizeof(time_t) == sizeof(uintmax_t))\n\t\treturn \"%\"PRIuMAX;\n#endif\n\tif (sizeof(time_t) > sizeof(unsigned long))\n\t\treturn \"%llu\";\n\tif (sizeof(time_t) > sizeof(unsigned int))\n\t\treturn \"%lu\";\n\treturn \"%u\";\n}\n\nstatic void\ndumptime(register const struct tm *timeptr)\n{\n\tstatic const char\twday_name[][4] = {\n\t\t\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"\n\t};\n\tstatic const char\tmon_name[][4] = {\n\t\t\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n\t\t\"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"\n\t};\n\tregister int\t\tlead;\n\tregister int\t\ttrail;\n\tint DIVISOR = 10;\n\n\t/*\n\t** The packaged localtime_rz and gmtime_r never put out-of-range\n\t** values in tm_wday or tm_mon, but since this code might be compiled\n\t** with other (perhaps experimental) versions, paranoia is in order.\n\t*/\n\tprintf(\"%s %s%3d %.2d:%.2d:%.2d \",\n\t\t((0 <= timeptr->tm_wday\n\t\t  && timeptr->tm_wday < sizeof wday_name / sizeof wday_name[0])\n\t\t ? wday_name[timeptr->tm_wday] : \"???\"),\n\t\t((0 <= timeptr->tm_mon\n\t\t  && timeptr->tm_mon < sizeof mon_name / sizeof mon_name[0])\n\t\t ? mon_name[timeptr->tm_mon] : \"???\"),\n\t\ttimeptr->tm_mday, timeptr->tm_hour,\n\t\ttimeptr->tm_min, timeptr->tm_sec);\n\ttrail = timeptr->tm_year % DIVISOR + TM_YEAR_BASE % DIVISOR;\n\tlead = timeptr->tm_year / DIVISOR + TM_YEAR_BASE / DIVISOR +\n\t\ttrail / DIVISOR;\n\ttrail %= DIVISOR;\n\tif (trail < 0 && lead > 0) {\n\t\ttrail += DIVISOR;\n\t\t--lead;\n\t} else if (lead < 0 && trail > 0) {\n\t\ttrail -= DIVISOR;\n\t\t++lead;\n\t}\n\tif (lead == 0)\n\t\tprintf(\"%d\", trail);\n\telse\tprintf(\"%d%d\", lead, ((trail < 0) ? -trail : trail));\n}\n"
        },
        {
          "name": "zic.8",
          "type": "blob",
          "size": 24.2021484375,
          "content": ".\\\" This file is in the public domain, so clarified as of\n.\\\" 2009-05-17 by Arthur David Olson.\n.TH zic 8 \"\" \"Time Zone Database\"\n.SH NAME\nzic \\- timezone compiler\n.SH SYNOPSIS\n.B zic\n[\n.I option\n\\&... ] [\n.I filename\n\\&... ]\n.SH DESCRIPTION\n.ie '\\(lq'' .ds lq \\&\"\\\"\n.el .ds lq \\(lq\\\"\n.ie '\\(rq'' .ds rq \\&\"\\\"\n.el .ds rq \\(rq\\\"\n.de q\n\\\\$3\\*(lq\\\\$1\\*(rq\\\\$2\n..\n.ie '\\(la'' .ds < <\n.el .ds < \\(la\n.ie '\\(ra'' .ds > >\n.el .ds > \\(ra\n.ie \\n(.g .ds : \\:\n.el .ds : .\n.ds d \" degrees\n.ds m \" minutes\n.ds s \" seconds\n.ds _ \" \\&\n.if t \\{\\\n. if \\n(.g .if c \\(de .if c \\(fm .if c \\(sd \\{\\\n.  ds d \\(de\n.  ds m \\(fm\n.  ds s \\(sd\n.  ds _ \\|\n. \\}\n.\\}\nThe\n.B zic\nprogram reads text from the file(s) named on the command line\nand creates the timezone information format (TZif) files\nspecified in this input.\nIf a\n.I filename\nis\n.q \"\\-\" ,\nstandard input is read.\n.SH OPTIONS\n.TP\n.B \"\\-\\-version\"\nOutput version information and exit.\n.TP\n.B \\-\\-help\nOutput short usage message and exit.\n.TP\n.BI \"\\-b \" bloat\nOutput backward-compatibility data as specified by\n.IR bloat .\nIf\n.I bloat\nis\n.BR fat ,\ngenerate additional data entries that work around potential bugs or\nincompatibilities in older software, such as software that mishandles\nthe 64-bit generated data.\nIf\n.I bloat\nis\n.BR slim ,\nkeep the output files small; this can help check for the bugs\nand incompatibilities.\nThe default is\n.BR slim ,\nas software that mishandles 64-bit data typically\nmishandles timestamps after the year 2038 anyway.\nAlso see the\n.B \\-r\noption for another way to alter output size.\n.TP\n.BI \"\\-d \" directory\nCreate time conversion information files in the named directory rather than\nin the standard directory named below.\n.TP\n.BI \"\\-l \" timezone\nUse\n.I timezone\nas local time.\n.B zic\nwill act as if the input contained a link line of the form\n.sp\n.ti +2\n.ta \\w'Link\\0\\0'u  +\\w'\\fItimezone\\fP\\0\\0'u\nLink\t\\fItimezone\\fP\t\tlocaltime\n.sp\nIf\n.I timezone\nis\n.BR \\- ,\nany already-existing link is removed.\n.TP\n.BI \"\\-L \" leapsecondfilename\nRead leap second information from the file with the given name.\nIf this option is not used,\nno leap second information appears in output files.\n.TP\n.BI \"\\-p \" timezone\nUse\n.IR timezone 's\nrules when handling nonstandard\nTZ strings like \"EET\\-2EEST\" that lack transition rules.\n.B zic\nwill act as if the input contained a link line of the form\n.sp\n.ti +2\nLink\t\\fItimezone\\fP\t\tposixrules\n.sp\nIf\n.I timezone\nis\n.q \"\\-\"\n(the default), any already-existing link is removed.\n.sp\nUnless\n.I timezone is\n.q \"\\-\" ,\nthis option is obsolete and poorly supported.\nAmong other things it should not be used for timestamps after the year 2037,\nand it should not be combined with\n.B \"\\-b slim\"\nif\n.IR timezone 's\ntransitions are at standard time or Universal Time (UT) instead of local time.\n.TP\n.BR \"\\-r \" \"[\\fB@\\fP\\fIlo\\fP][\\fB/@\\fP\\fIhi\\fP]\"\nLimit the applicability of output files\nto timestamps in the range from\n.I lo\n(inclusive) to\n.I hi\n(exclusive), where\n.I lo\nand\n.I hi\nare possibly signed decimal counts of seconds since the Epoch\n(1970-01-01 00:00:00 UTC).\nOmitted counts default to extreme values.\nThe output files use UT offset 0 and abbreviation\n.q \"\\-00\"\nin place of the omitted timestamp data.\nFor example,\n.q \"zic \\-r @0\"\nomits data intended for negative timestamps (i.e., before the Epoch), and\n.q \"zic \\-r @0/@2147483648\"\noutputs data intended only for nonnegative timestamps that fit into\n31-bit signed integers.\nOn platforms with GNU\n.BR date ,\n.q \"zic \\-r @$(date +%s)\"\nomits data intended for past timestamps.\nAlthough this option typically reduces the output file's size,\nthe size can increase due to the need to represent the timestamp range\nboundaries, particularly if\n.I hi\ncauses a TZif file to contain explicit entries for\n.RI pre- hi\ntransitions rather than concisely representing them\nwith a proleptic TZ string.\nAlso see the\n.B \"\\-b slim\"\noption for another way to shrink output size.\n.TP\n.BI \"\\-R @\" hi\nGenerate redundant trailing explicit transitions for timestamps\nthat occur less than\n.I hi\nseconds since the Epoch, even though the transitions could be\nmore concisely represented via the proleptic TZ string.\nThis option does not affect the represented timestamps.\nAlthough it accommodates nonstandard TZif readers\nthat ignore the proleptic TZ string,\nit increases the size of the altered output files.\n.TP\n.BI \"\\-t \" file\nWhen creating local time information, put the configuration link in\nthe named file rather than in the standard location.\n.TP\n.B \\-v\nBe more verbose, and complain about the following situations:\n.RS\n.PP\nThe input specifies a link to a link,\nsomething not supported by some older parsers, including\n.B zic\nitself through release 2022e.\n.PP\nA year that appears in a data file is outside the range\nof representable years.\n.PP\nA time of 24:00 or more appears in the input.\nPre-1998 versions of\n.B zic\nprohibit 24:00, and pre-2007 versions prohibit times greater than 24:00.\n.PP\nA rule goes past the start or end of the month.\nPre-2004 versions of\n.B zic\nprohibit this.\n.PP\nA time zone abbreviation uses a\n.B %z\nformat.\nPre-2015 versions of\n.B zic\ndo not support this.\n.PP\nA timestamp contains fractional seconds.\nPre-2018 versions of\n.B zic\ndo not support this.\n.PP\nThe input contains abbreviations that are mishandled by pre-2018 versions of\n.B zic\ndue to a longstanding coding bug.\nThese abbreviations include\n.q L\nfor\n.q Link ,\n.q mi\nfor\n.q min ,\n.q Sa\nfor\n.q Sat ,\nand\n.q Su\nfor\n.q Sun .\n.PP\nThe output file does not contain all the information about the\nlong-term future of a timezone, because the future cannot be summarized as\na proleptic TZ string.  For example, as of 2023 this problem\noccurs for Morocco's daylight-saving rules, as these rules are based\non predictions for when Ramadan will be observed, something that\na proleptic TZ string cannot represent.\n.PP\nThe output contains data that may not be handled properly by client\ncode designed for older\n.B zic\noutput formats.  These compatibility issues affect only timestamps\nbefore 1970 or after the start of 2038.\n.PP\nThe output contains a truncated leap second table,\nwhich can cause some older TZif readers to misbehave.\nThis can occur if the\n.B \"\\-L\"\noption is used, and either an Expires line is present or\nthe\n.B \"\\-r\"\noption is also used.\n.PP\nThe output file contains more than 1200 transitions,\nwhich may be mishandled by some clients.\nThe current reference client supports at most 2000 transitions;\npre-2014 versions of the reference client support at most 1200\ntransitions.\n.PP\nA time zone abbreviation has fewer than 3 or more than 6 characters.\nPOSIX requires at least 3, and requires implementations to support\nat least 6.\n.PP\nAn output file name contains a byte that is not an ASCII letter,\n.q \"\\-\" ,\n.q \"/\" ,\nor\n.q \"_\" ;\nor it contains a file name component that contains more than 14 bytes\nor that starts with\n.q \"\\-\" .\n.RE\n.SH FILES\nInput files use the format described in this section; output files use\n.BR tzfile (5)\nformat.\n.PP\nInput files should be text files, that is, they should be a series of\nzero or more lines, each ending in a newline byte and containing at\nmost 2048 bytes counting the newline, and without any NUL bytes.\nThe input text's encoding\nis typically UTF-8 or ASCII; it should have a unibyte representation\nfor the POSIX Portable Character Set (PPCS)\n\\*<https://pubs\\*:.opengroup\\*:.org/\\*:onlinepubs/\\*:9699919799/\\*:basedefs/\\*:V1_chap06\\*:.html\\*>\nand the encoding's non-unibyte characters should consist entirely of\nnon-PPCS bytes.  Non-PPCS characters typically occur only in comments:\nalthough output file names and time zone abbreviations can contain\nnearly any character, other software will work better if these are\nlimited to the restricted syntax described under the\n.B \\-v\noption.\n.PP\nInput lines are made up of fields.\nFields are separated from one another by one or more white space characters.\nThe white space characters are space, form feed, carriage return, newline,\ntab, and vertical tab.\nLeading and trailing white space on input lines is ignored.\nAn unquoted sharp character (#) in the input introduces a comment which extends\nto the end of the line the sharp character appears on.\nWhite space characters and sharp characters may be enclosed in double quotes\n(\") if they're to be used as part of a field.\nAny line that is blank (after comment stripping) is ignored.\nNonblank lines are expected to be of one of three types:\nrule lines, zone lines, and link lines.\n.PP\nNames must be in English and are case insensitive.\nThey appear in several contexts, and include month and weekday names\nand keywords such as\n.BR \"maximum\" ,\n.BR \"only\" ,\n.BR \"Rolling\" ,\nand\n.BR \"Zone\" .\nA name can be abbreviated by omitting all but an initial prefix; any\nabbreviation must be unambiguous in context.\n.PP\nA rule line has the form\n.nf\n.ti +2\n.ta \\w'Rule\\0\\0'u +\\w'NAME\\0\\0'u +\\w'FROM\\0\\0'u +\\w'1973\\0\\0'u +\\w'\\-\\0\\0'u +\\w'Apr\\0\\0'u +\\w'lastSun\\0\\0'u +\\w'2:00w\\0\\0'u +\\w'1:00d\\0\\0'u\n.sp\nRule\tNAME\tFROM\tTO\t\\-\tIN\tON\tAT\tSAVE\tLETTER/S\n.sp\nFor example:\n.ti +2\n.sp\nRule\tUS\t1967\t1973\t\\-\tApr\tlastSun\t2:00w\t1:00d\tD\n.sp\n.fi\nThe fields that make up a rule line are:\n.TP\n.B NAME\nGives the name of the rule set that contains this line.\nThe name must start with a character that is neither\nan ASCII digit nor\n.q \\-\nnor\n.q + .\nTo allow for future extensions,\nan unquoted name should not contain characters from the set\n.ie \\n(.g .q \\f(CR!$%&\\(aq()*,/:;<=>?@[\\e]\\(ha\\(ga{|}\\(ti\\fP .\n.el .ie t .q \\f(CW!$%&'()*,/:;<=>?@[\\e]^\\(ga{|}~\\fP .\n.el .q !$%&'()*,/:;<=>?@[\\e]^`{|}~ .\n.TP\n.B FROM\nGives the first year in which the rule applies.\nAny signed integer year can be supplied; the proleptic Gregorian calendar\nis assumed, with year 0 preceding year 1.\nRules can describe times that are not representable as time values,\nwith the unrepresentable times ignored; this allows rules to be portable\namong hosts with differing time value types.\n.TP\n.B TO\nGives the final year in which the rule applies.\nThe word\n.B maximum\n(or an abbreviation) means the indefinite future, and the word\n.B only\n(or an abbreviation)\nmay be used to repeat the value of the\n.B FROM\nfield.\n.TP\n.B \\-\nIs a reserved field and should always contain\n.q \\-\nfor compatibility with older versions of\n.BR zic .\nIt was previously known as the\n.B TYPE\nfield, which could contain values to allow a\nseparate script to further restrict in which\n.q types\nof years the rule would apply.\n.TP\n.B IN\nNames the month in which the rule takes effect.\nMonth names may be abbreviated as mentioned previously;\nfor example, January can appear as\n.q January ,\n.q JANU\nor\n.q Ja ,\nbut not as\n.q j\nwhich would be ambiguous with both June and July.\n.TP\n.B ON\nGives the day on which the rule takes effect.\nRecognized forms include:\n.nf\n.in +2\n.sp\n.ta \\w'Sun<=25\\0\\0'u\n5\tthe fifth of the month\nlastSun\tthe last Sunday in the month\nlastMon\tthe last Monday in the month\nSun>=8\tfirst Sunday on or after the eighth\nSun<=25\tlast Sunday on or before the 25th\n.fi\n.in\n.sp\nA weekday name (e.g.,\n.BR \"Sunday\" )\nor a weekday name preceded by\n.q \"last\"\n(e.g.,\n.BR \"lastSunday\" )\nmay be abbreviated as mentioned previously,\ne.g.,\n.q Su\nfor Sunday and\n.q lastsa\nfor the last Saturday.\nThere must be no white space characters within the\n.B ON\nfield.\nThe\n.q <=\nand\n.q >=\nconstructs can result in a day in the neighboring month;\nfor example, the IN-ON combination\n.q \"Oct Sun>=31\"\nstands for the first Sunday on or after October 31,\neven if that Sunday occurs in November.\n.TP\n.B AT\nGives the time of day at which the rule takes effect,\nrelative to 00:00, the start of a calendar day.\nRecognized forms include:\n.nf\n.in +2\n.sp\n.ta \\w'00:19:32.13\\0\\0'u\n2\ttime in hours\n2:00\ttime in hours and minutes\n01:28:14\ttime in hours, minutes, and seconds\n00:19:32.13\ttime with fractional seconds\n12:00\tmidday, 12 hours after 00:00\n15:00\t3 PM, 15 hours after 00:00\n24:00\tend of day, 24 hours after 00:00\n260:00\t260 hours after 00:00\n\\-2:30\t2.5 hours before 00:00\n\\-\tequivalent to 0\n.fi\n.in\n.sp\nAlthough\n.B zic\nrounds times to the nearest integer second\n(breaking ties to the even integer), the fractions may be useful\nto other applications requiring greater precision.\nThe source format does not specify any maximum precision.\nAny of these forms may be followed by the letter\n.B w\nif the given time is local or\n.q \"wall clock\"\ntime,\n.B s\nif the given time is standard time without any adjustment for daylight saving,\nor\n.B u\n(or\n.B g\nor\n.BR z )\nif the given time is universal time;\nin the absence of an indicator,\nlocal (wall clock) time is assumed.\nThese forms ignore leap seconds; for example,\nif a leap second occurs at 00:59:60 local time,\n.q \"1:00\"\nstands for 3601 seconds after local midnight instead of the usual 3600 seconds.\nThe intent is that a rule line describes the instants when a\nclock/calendar set to the type of time specified in the\n.B AT\nfield would show the specified date and time of day.\n.TP\n.B SAVE\nGives the amount of time to be added to local standard time when the rule is in\neffect, and whether the resulting time is standard or daylight saving.\nThis field has the same format as the\n.B AT\nfield\nexcept with a different set of suffix letters:\n.B s\nfor standard time and\n.B d\nfor daylight saving time.\nThe suffix letter is typically omitted, and defaults to\n.B s\nif the offset is zero and to\n.B d\notherwise.\nNegative offsets are allowed; in Ireland, for example, daylight saving\ntime is observed in winter and has a negative offset relative to\nIrish Standard Time.\nThe offset is merely added to standard time; for example,\n.B zic\ndoes not distinguish a 10:30 standard time plus an 0:30\n.B SAVE\nfrom a 10:00 standard time plus a 1:00\n.BR SAVE .\n.TP\n.B LETTER/S\nGives the\n.q \"variable part\"\n(for example, the\n.q \"S\"\nor\n.q \"D\"\nin\n.q \"EST\"\nor\n.q \"EDT\" )\nof time zone abbreviations to be used when this rule is in effect.\nIf this field is\n.q \\- ,\nthe variable part is null.\n.PP\nA zone line has the form\n.sp\n.nf\n.ti +2\n.ta \\w'Zone\\0\\0'u +\\w'Asia/Amman\\0\\0'u +\\w'STDOFF\\0\\0'u +\\w'Jordan\\0\\0'u +\\w'FORMAT\\0\\0'u\nZone\tNAME\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\n.sp\nFor example:\n.sp\n.ti +2\nZone\tAsia/Amman\t2:00\tJordan\tEE%sT\t2017 Oct 27 01:00\n.sp\n.fi\nThe fields that make up a zone line are:\n.TP\n.B NAME\nThe name of the timezone.\nThis is the name used in creating the time conversion information file for the\ntimezone.\nIt should not contain a file name component\n.q \".\\&\"\nor\n.q \"..\" ;\na file name component is a maximal substring that does not contain\n.q \"/\" .\n.TP\n.B STDOFF\nThe amount of time to add to UT to get standard time,\nwithout any adjustment for daylight saving.\nThis field has the same format as the\n.B AT\nand\n.B SAVE\nfields of rule lines, except without suffix letters;\nbegin the field with a minus sign if time must be subtracted from UT.\n.TP\n.B RULES\nThe name of the rules that apply in the timezone or,\nalternatively, a field in the same format as a rule-line\n.B SAVE\nfield,\ngiving the amount of time to be added to local standard time\nand whether the resulting time is standard or daylight saving.\nStandard time applies if this field is\n.B \\-\nor for timestamps occurring before any rule takes effect.\nWhen an amount of time is given, only the sum of standard time and\nthis amount matters.\n.TP\n.B FORMAT\nThe format for time zone abbreviations.\nThe pair of characters\n.B %s\nshows where to put the time zone abbreviation's variable part,\nwhich is taken from the\n.B LETTER/S\nfield of the corresponding rule;\nany timestamps that precede the earliest rule use the\n.B LETTER/S\nof the earliest standard-time rule (which in this case must exist).\nAlternatively, a format can use the pair of characters\n.B %z\nto stand for the UT offset in the form\n.RI \\(+- hh ,\n.RI \\(+- hhmm ,\nor\n.RI \\(+- hhmmss ,\nusing the shortest form that does not lose information, where\n.IR hh ,\n.IR mm ,\nand\n.I ss\nare the hours, minutes, and seconds east (+) or west (\\-) of UT.\nAlternatively,\na slash (/)\nseparates standard and daylight abbreviations.\nTo conform to POSIX, a time zone abbreviation should contain only\nalphanumeric ASCII characters,\n.q \"+\"\nand\n.q \"\\-\".\nBy convention, the time zone abbreviation\n.q \"\\-00\"\nis a placeholder that means local time is unspecified.\n.TP\n.B UNTIL\nThe time at which the UT offset or the rule(s) change for a location.\nIt takes the form of one to four fields YEAR [MONTH [DAY [TIME]]].\nIf this is specified,\nthe time zone information is generated from the given UT offset\nand rule change until the time specified, which is interpreted using\nthe rules in effect just before the transition.\nThe month, day, and time of day have the same format as the IN, ON, and AT\nfields of a rule; trailing fields can be omitted, and default to the\nearliest possible value for the missing fields.\n.IP\nThe next line must be a\n.q \"continuation\"\nline; this has the same form as a zone line except that the\nstring\n.q \"Zone\"\nand the name are omitted, as the continuation line will\nplace information starting at the time specified as the\n.q \"until\"\ninformation in the previous line in the file used by the previous line.\nContinuation lines may contain\n.q \"until\"\ninformation, just as zone lines do, indicating that the next line is a further\ncontinuation.\n.PP\nIf a zone changes at the same instant that a rule would otherwise take\neffect in the earlier zone or continuation line, the rule is ignored.\nA zone or continuation line\n.I L\nwith a named rule set starts with standard time by default:\nthat is, any of\n.IR L 's\ntimestamps preceding\n.IR L 's\nearliest rule use the rule in effect after\n.IR L 's\nfirst transition into standard time.\nIn a single zone it is an error if two rules take effect at the same\ninstant, or if two zone changes take effect at the same instant.\n.PP\nIf a continuation line subtracts\n.I N\nseconds from the UT offset after a transition that would be\ninterpreted to be later if using the continuation line's UT offset and\nrules, the\n.q \"until\"\ntime of the previous zone or continuation line is interpreted\naccording to the continuation line's UT offset and rules, and any rule\nthat would otherwise take effect in the next\n.I N\nseconds is instead assumed to take effect simultaneously.\nFor example:\n.br\n.ne 7\n.nf\n.in +2\n.ta \\w'# Rule\\0\\0'u +\\w'NAME\\0\\0'u +\\w'FROM\\0\\0'u +\\w'2006\\0\\0'u +\\w'\\-\\0\\0'u +\\w'Oct\\0\\0'u +\\w'lastSun\\0\\0'u +\\w'2:00\\0\\0'u +\\w'SAVE\\0\\0'u\n.sp\n# Rule\tNAME\tFROM\tTO\t\\-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tUS\t1967\t2006\t-\tOct\tlastSun\t2:00\t0\tS\nRule\tUS\t1967\t1973\t-\tApr\tlastSun\t2:00\t1:00\tD\n.ta \\w'# Zone\\0\\0'u +\\w'America/Menominee\\0\\0'u +\\w'STDOFF\\0\\0'u +\\w'RULES\\0\\0'u +\\w'FORMAT\\0\\0'u\n# Zone\tNAME\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tAmerica/Menominee\t\\-5:00\t\\-\tEST\t1973 Apr 29 2:00\n\t\t\\-6:00\tUS\tC%sT\n.sp\n.in\n.fi\nHere, an incorrect reading would be there were two clock changes on 1973-04-29,\nthe first from 02:00 EST (\\-05) to 01:00 CST (\\-06),\nand the second an hour later from 02:00 CST (\\-06) to 03:00 CDT (\\-05).\nHowever,\n.B zic\ninterprets this more sensibly as a single transition from 02:00 CST (\\-05) to\n02:00 CDT (\\-05).\n.PP\nA link line has the form\n.sp\n.nf\n.ti +2\n.ta \\w'Link\\0\\0'u +\\w'Europe/Istanbul\\0\\0'u\nLink\tTARGET\tLINK-NAME\n.sp\nFor example:\n.sp\n.ti +2\nLink\tEurope/Istanbul\tAsia/Istanbul\n.sp\n.fi\nThe\n.B TARGET\nfield should appear as the\n.B NAME\nfield in some zone line or as the\n.B LINK-NAME\nfield in some link line.\nThe\n.B LINK-NAME\nfield is used as an alternative name for that zone;\nit has the same syntax as a zone line's\n.B NAME\nfield.\nLinks can chain together, although the behavior is unspecified if a\nchain of one or more links does not terminate in a Zone name.\nA link line can appear before the line that defines the link target.\nFor example:\n.sp\n.ne 3\n.nf\n.in +2\n.ta \\w'Zone\\0\\0'u +\\w'Greenwich\\0\\0'u\nLink\tGreenwich\tG_M_T\nLink\tEtc/GMT\tGreenwich\nZone\tEtc/GMT\\0\\00\\0\\0\\-\\0\\0GMT\n.sp\n.in\n.fi\nThe two links are chained together, and G_M_T, Greenwich, and Etc/GMT\nall name the same zone.\n.PP\nExcept for continuation lines,\nlines may appear in any order in the input.\nHowever, the behavior is unspecified if multiple zone or link lines\ndefine the same name.\n.PP\nThe file that describes leap seconds can have leap lines and an\nexpiration line.\nLeap lines have the following form:\n.nf\n.ti +2\n.ta \\w'Leap\\0\\0'u +\\w'YEAR\\0\\0'u +\\w'MONTH\\0\\0'u +\\w'DAY\\0\\0'u +\\w'HH:MM:SS\\0\\0'u +\\w'CORR\\0\\0'u\n.sp\nLeap\tYEAR\tMONTH\tDAY\tHH:MM:SS\tCORR\tR/S\n.sp\nFor example:\n.ti +2\n.sp\nLeap\t2016\tDec\t31\t23:59:60\t+\tS\n.sp\n.fi\nThe\n.BR YEAR ,\n.BR MONTH ,\n.BR DAY ,\nand\n.B HH:MM:SS\nfields tell when the leap second happened.\nThe\n.B CORR\nfield\nshould be\n.q \"+\"\nif a second was added\nor\n.q \"\\-\"\nif a second was skipped.\nThe\n.B R/S\nfield\nshould be (an abbreviation of)\n.q \"Stationary\"\nif the leap second time given by the other fields should be interpreted as UTC\nor\n(an abbreviation of)\n.q \"Rolling\"\nif the leap second time given by the other fields should be interpreted as\nlocal (wall clock) time.\n.PP\nRolling leap seconds would let one see\nTimes Square ball drops where there'd be a\n.q \"3... 2... 1... leap... Happy New Year\"\ncountdown, placing the leap second at\nmidnight New York time rather than midnight UTC.\nAlthough stationary leap seconds are the common practice,\nrolling leap seconds can be useful in specialized applications\nlike SMPTE timecodes that may prefer to put leap second\ndiscontinuities at the end of a local broadcast day.\nHowever, rolling leap seconds are not supported if the\n.B \\-r\noption is used.\n.PP\nThe expiration line, if present, has the form:\n.nf\n.ti +2\n.ta \\w'Expires\\0\\0'u +\\w'YEAR\\0\\0'u +\\w'MONTH\\0\\0'u +\\w'DAY\\0\\0'u\n.sp\nExpires\tYEAR\tMONTH\tDAY\tHH:MM:SS\n.sp\nFor example:\n.ti +2\n.sp\nExpires\t2020\tDec\t28\t00:00:00\n.sp\n.fi\nThe\n.BR YEAR ,\n.BR MONTH ,\n.BR DAY ,\nand\n.B HH:MM:SS\nfields give the expiration timestamp in UTC for the leap second table.\n.br\n.ne 22\n.SH \"EXTENDED EXAMPLE\"\nHere is an extended example of\n.B zic\ninput, intended to illustrate many of its features.\n.nf\n.in +2\n.ta \\w'# Rule\\0\\0'u +\\w'NAME\\0\\0'u +\\w'FROM\\0\\0'u +\\w'1973\\0\\0'u +\\w'\\-\\0\\0'u +\\w'Apr\\0\\0'u +\\w'lastSun\\0\\0'u +\\w'2:00\\0\\0'u +\\w'SAVE\\0\\0'u\n.sp\n# Rule\tNAME\tFROM\tTO\t\\-\tIN\tON\tAT\tSAVE\tLETTER/S\nRule\tSwiss\t1941\t1942\t\\-\tMay\tMon>=1\t1:00\t1:00\tS\nRule\tSwiss\t1941\t1942\t\\-\tOct\tMon>=1\t2:00\t0\t\\-\n.sp .5\nRule\tEU\t1977\t1980\t\\-\tApr\tSun>=1\t1:00u\t1:00\tS\nRule\tEU\t1977\tonly\t\\-\tSep\tlastSun\t1:00u\t0\t\\-\nRule\tEU\t1978\tonly\t\\-\tOct\t 1\t1:00u\t0\t\\-\nRule\tEU\t1979\t1995\t\\-\tSep\tlastSun\t1:00u\t0\t\\-\nRule\tEU\t1981\tmax\t\\-\tMar\tlastSun\t1:00u\t1:00\tS\nRule\tEU\t1996\tmax\t\\-\tOct\tlastSun\t1:00u\t0\t\\-\n.sp\n.ta \\w'# Zone\\0\\0'u +\\w'Europe/Zurich\\0\\0'u +\\w'0:29:45.50\\0\\0'u +\\w'RULES\\0\\0'u +\\w'FORMAT\\0\\0'u\n# Zone\tNAME\tSTDOFF\tRULES\tFORMAT\t[UNTIL]\nZone\tEurope/Zurich\t0:34:08\t\\-\tLMT\t1853 Jul 16\n\t\t0:29:45.50\t\\-\tBMT\t1894 Jun\n\t\t1:00\tSwiss\tCE%sT\t1981\n\t\t1:00\tEU\tCE%sT\n.sp\nLink\tEurope/Zurich\tEurope/Vaduz\n.sp\n.in\n.fi\nIn this example, the EU rules are for the European Union\nand for its predecessor organization, the European Communities.\nThe timezone is named Europe/Zurich and it has the alias Europe/Vaduz.\nThis example says that Zurich was 34 minutes and 8\nseconds east of UT until 1853-07-16 at 00:00, when the legal offset\nwas changed to\n7\\*d\\*_26\\*m\\*_22.50\\*s,\nwhich works out to 0:29:45.50;\n.B zic\ntreats this by rounding it to 0:29:46.\nAfter 1894-06-01 at 00:00 the UT offset became one hour\nand Swiss daylight saving rules (defined with lines beginning with\n.q \"Rule Swiss\")\napply.  From 1981 to the present, EU daylight saving rules have\napplied, and the UTC offset has remained at one hour.\n.PP\nIn 1941 and 1942, daylight saving time applied from the first Monday\nin May at 01:00 to the first Monday in October at 02:00.\nThe pre-1981 EU daylight-saving rules have no effect\nhere, but are included for completeness.  Since 1981, daylight\nsaving has begun on the last Sunday in March at 01:00 UTC.\nUntil 1995 it ended the last Sunday in September at 01:00 UTC,\nbut this changed to the last Sunday in October starting in 1996.\n.PP\nFor purposes of display,\n.q \"LMT\"\nand\n.q \"BMT\"\nwere initially used, respectively.  Since\nSwiss rules and later EU rules were applied, the time zone abbreviation\nhas been CET for standard time and CEST for daylight saving\ntime.\n.SH FILES\n.TP\n.I /etc/localtime\nDefault local timezone file.\n.TP\n.I /usr/share/zoneinfo\nDefault timezone information directory.\n.SH NOTES\nFor areas with more than two types of local time,\nyou may need to use local standard time in the\n.B AT\nfield of the earliest transition time's rule to ensure that\nthe earliest transition time recorded in the compiled file is correct.\n.PP\nIf,\nfor a particular timezone,\na clock advance caused by the start of daylight saving\ncoincides with and is equal to\na clock retreat caused by a change in UT offset,\n.B zic\nproduces a single transition to daylight saving at the new UT offset\nwithout any change in local (wall clock) time.\nTo get separate transitions\nuse multiple zone continuation lines\nspecifying transition instants using universal time.\n.SH SEE ALSO\n.BR tzfile (5),\n.BR zdump (8)\n"
        },
        {
          "name": "zic.c",
          "type": "blob",
          "size": 100.9931640625,
          "content": "/* Compile .zi time zone data into TZif binary files.  */\n\n/*\n** This file is in the public domain, so clarified as of\n** 2006-07-17 by Arthur David Olson.\n*/\n\n/* Use the system 'time' function, instead of any private replacement.\n   This avoids creating an unnecessary dependency on localtime.c.  */\n#undef EPOCH_LOCAL\n#undef EPOCH_OFFSET\n#undef RESERVE_STD_EXT_IDS\n#undef time_tz\n\n#include \"version.h\"\n#include \"private.h\"\n#include \"tzdir.h\"\n#include \"tzfile.h\"\n\n#include <fcntl.h>\n#include <locale.h>\n#include <signal.h>\n#include <stdarg.h>\n#include <stdio.h>\n\ntypedef int_fast64_t\tzic_t;\nstatic zic_t const\n  ZIC_MIN = INT_FAST64_MIN,\n  ZIC_MAX = INT_FAST64_MAX,\n  ZIC32_MIN = -1 - (zic_t) 0x7fffffff,\n  ZIC32_MAX = 0x7fffffff;\n#define SCNdZIC SCNdFAST64\n\n#ifndef ZIC_MAX_ABBR_LEN_WO_WARN\n# define ZIC_MAX_ABBR_LEN_WO_WARN 6\n#endif /* !defined ZIC_MAX_ABBR_LEN_WO_WARN */\n\n/* Minimum and maximum years, assuming signed 32-bit time_t.  */\nenum { YEAR_32BIT_MIN = 1901, YEAR_32BIT_MAX = 2038 };\n\n/* An upper bound on how much a format might grow due to concatenation.  */\nenum { FORMAT_LEN_GROWTH_BOUND = 5 };\n\n#ifdef HAVE_DIRECT_H\n# include <direct.h>\n# include <io.h>\n# undef mkdir\n# define mkdir(name, mode) _mkdir(name)\n#endif\n\n#ifndef HAVE_GETRANDOM\n# ifdef __has_include\n#  if __has_include(<sys/random.h>)\n#   include <sys/random.h>\n#  endif\n# elif 2 < __GLIBC__ + (25 <= __GLIBC_MINOR__)\n#  include <sys/random.h>\n# endif\n# define HAVE_GETRANDOM GRND_RANDOM\n#elif HAVE_GETRANDOM\n# include <sys/random.h>\n#endif\n\n#if HAVE_SYS_STAT_H\n# include <sys/stat.h>\n#endif\n#ifdef S_IRUSR\n# define MKDIR_UMASK (S_IRUSR|S_IWUSR|S_IXUSR|S_IRGRP|S_IXGRP|S_IROTH|S_IXOTH)\n#else\n# define MKDIR_UMASK 0755\n#endif\n\n/* The minimum alignment of a type, for pre-C23 platforms.\n   The __SUNPRO_C test is because Oracle Developer Studio 12.6 lacks\n   <stdalign.h> even though __STDC_VERSION__ == 201112.  */\n#if __STDC_VERSION__ < 201112 || defined __SUNPRO_C\n# define alignof(type) offsetof(struct { char a; type b; }, b)\n#elif __STDC_VERSION__ < 202311\n# include <stdalign.h>\n#endif\n\n/* The maximum length of a text line, including the trailing newline.  */\n#ifndef _POSIX2_LINE_MAX\n# define _POSIX2_LINE_MAX 2048\n#endif\n\n/* The type for line numbers.  Use PRIdMAX to format them; formerly\n   there was also \"#define PRIdLINENO PRIdMAX\" and formats used\n   PRIdLINENO, but xgettext cannot grok that.  */\ntypedef intmax_t lineno;\n\nstruct rule {\n\tint\t\tr_filenum;\n\tlineno\t\tr_linenum;\n\tconst char *\tr_name;\n\n\tzic_t\t\tr_loyear;\t/* for example, 1986 */\n\tzic_t\t\tr_hiyear;\t/* for example, 1986 */\n\tbool\t\tr_hiwasnum;\n\n\tint\t\tr_month;\t/* 0..11 */\n\n\tint\t\tr_dycode;\t/* see below */\n\tint\t\tr_dayofmonth;\n\tint\t\tr_wday;\n\n\tzic_t\t\tr_tod;\t\t/* time from midnight */\n\tbool\t\tr_todisstd;\t/* is r_tod standard time? */\n\tbool\t\tr_todisut;\t/* is r_tod UT? */\n\tbool\t\tr_isdst;\t/* is this daylight saving time? */\n\tzic_t\t\tr_save;\t\t/* offset from standard time */\n\tconst char *\tr_abbrvar;\t/* variable part of abbreviation */\n\n\tbool\t\tr_todo;\t\t/* a rule to do (used in outzone) */\n\tzic_t\t\tr_temp;\t\t/* used in outzone */\n};\n\n/*\n** r_dycode\tr_dayofmonth\tr_wday\n*/\nenum {\n  DC_DOM,\t/* 1..31 */\t/* unused */\n  DC_DOWGEQ,\t/* 1..31 */\t/* 0..6 (Sun..Sat) */\n  DC_DOWLEQ\t/* 1..31 */\t/* 0..6 (Sun..Sat) */\n};\n\nstruct zone {\n\tint\t\tz_filenum;\n\tlineno\t\tz_linenum;\n\n\tconst char *\tz_name;\n\tzic_t\t\tz_stdoff;\n\tchar *\t\tz_rule;\n\tconst char *\tz_format;\n\tchar\t\tz_format_specifier;\n\n\tbool\t\tz_isdst;\n\tzic_t\t\tz_save;\n\n\tstruct rule *\tz_rules;\n\tptrdiff_t\tz_nrules;\n\n\tstruct rule\tz_untilrule;\n\tzic_t\t\tz_untiltime;\n};\n\n#if !HAVE_POSIX_DECLS\nextern int\tgetopt(int argc, char * const argv[],\n\t\t\tconst char * options);\nextern int\tlink(const char * target, const char * linkname);\nextern char *\toptarg;\nextern int\toptind;\n#endif\n\n#if ! HAVE_SYMLINK\nstatic ssize_t\nreadlink(char const *restrict file, char *restrict buf, size_t size)\n{\n  errno = ENOTSUP;\n  return -1;\n}\nstatic int\nsymlink(char const *target, char const *linkname)\n{\n  errno = ENOTSUP;\n  return -1;\n}\n#endif\n#ifndef AT_SYMLINK_FOLLOW\n#  define linkat(targetdir, target, linknamedir, linkname, flag) \\\n     (errno = ENOTSUP, -1)\n#endif\n\nstatic void\taddtt(zic_t starttime, int type);\nstatic int\taddtype(zic_t, char const *, bool, bool, bool);\nstatic void\tleapadd(zic_t, int, int);\nstatic void\tadjleap(void);\nstatic void\tassociate(void);\nstatic void\tdolink(const char *, const char *, bool);\nstatic int\tgetfields(char *, char **, int);\nstatic zic_t\tgethms(const char * string, const char * errstring);\nstatic zic_t\tgetsave(char *, bool *);\nstatic void\tinexpires(char **, int);\nstatic void\tinfile(int, char const *);\nstatic void\tinleap(char ** fields, int nfields);\nstatic void\tinlink(char ** fields, int nfields);\nstatic void\tinrule(char ** fields, int nfields);\nstatic bool\tinzcont(char ** fields, int nfields);\nstatic bool\tinzone(char ** fields, int nfields);\nstatic bool\tinzsub(char **, int, bool);\nstatic int\titssymlink(char const *, int *);\nstatic bool\tis_alpha(char a);\nstatic char\tlowerit(char);\nstatic void\tmkdirs(char const *, bool);\nstatic void\tnewabbr(const char * abbr);\nstatic zic_t\toadd(zic_t t1, zic_t t2);\nstatic void\toutzone(const struct zone * zp, ptrdiff_t ntzones);\nstatic zic_t\trpytime(const struct rule * rp, zic_t wantedy);\nstatic bool\trulesub(struct rule * rp,\n\t\t\tconst char * loyearp, const char * hiyearp,\n\t\t\tconst char * typep, const char * monthp,\n\t\t\tconst char * dayp, const char * timep);\nstatic zic_t\ttadd(zic_t t1, zic_t t2);\n\n/* Bound on length of what %z can expand to.  */\nenum { PERCENT_Z_LEN_BOUND = sizeof \"+995959\" - 1 };\n\nstatic int\t\tcharcnt;\nstatic bool\t\terrors;\nstatic bool\t\twarnings;\nstatic int\t\tfilenum;\nstatic int\t\tleapcnt;\nstatic bool\t\tleapseen;\nstatic zic_t\t\tleapminyear;\nstatic zic_t\t\tleapmaxyear;\nstatic lineno\t\tlinenum;\nstatic int\t\tmax_abbrvar_len = PERCENT_Z_LEN_BOUND;\nstatic int\t\tmax_format_len;\nstatic zic_t\t\tmax_year;\nstatic zic_t\t\tmin_year;\nstatic bool\t\tnoise;\nstatic int\t\trfilenum;\nstatic lineno\t\trlinenum;\nstatic const char *\tprogname;\nstatic char const *\tleapsec;\nstatic char *const *\tmain_argv;\nstatic ptrdiff_t\ttimecnt;\nstatic ptrdiff_t\ttimecnt_alloc;\nstatic int\t\ttypecnt;\nstatic int\t\tunspecifiedtype;\n\n/*\n** Line codes.\n*/\n\nenum {\n  LC_RULE,\n  LC_ZONE,\n  LC_LINK,\n  LC_LEAP,\n  LC_EXPIRES\n};\n\n/*\n** Which fields are which on a Zone line.\n*/\n\nenum {\n  ZF_NAME = 1,\n  ZF_STDOFF,\n  ZF_RULE,\n  ZF_FORMAT,\n  ZF_TILYEAR,\n  ZF_TILMONTH,\n  ZF_TILDAY,\n  ZF_TILTIME,\n  ZONE_MAXFIELDS,\n  ZONE_MINFIELDS = ZF_TILYEAR\n};\n\n/*\n** Which fields are which on a Zone continuation line.\n*/\n\nenum {\n  ZFC_STDOFF,\n  ZFC_RULE,\n  ZFC_FORMAT,\n  ZFC_TILYEAR,\n  ZFC_TILMONTH,\n  ZFC_TILDAY,\n  ZFC_TILTIME,\n  ZONEC_MAXFIELDS,\n  ZONEC_MINFIELDS = ZFC_TILYEAR\n};\n\n/*\n** Which files are which on a Rule line.\n*/\n\nenum {\n  RF_NAME = 1,\n  RF_LOYEAR,\n  RF_HIYEAR,\n  RF_COMMAND,\n  RF_MONTH,\n  RF_DAY,\n  RF_TOD,\n  RF_SAVE,\n  RF_ABBRVAR,\n  RULE_FIELDS\n};\n\n/*\n** Which fields are which on a Link line.\n*/\n\nenum {\n  LF_TARGET = 1,\n  LF_LINKNAME,\n  LINK_FIELDS\n};\n\n/*\n** Which fields are which on a Leap line.\n*/\n\nenum {\n  LP_YEAR = 1,\n  LP_MONTH,\n  LP_DAY,\n  LP_TIME,\n  LP_CORR,\n  LP_ROLL,\n  LEAP_FIELDS,\n\n  /* Expires lines are like Leap lines, except without CORR and ROLL fields.  */\n  EXPIRES_FIELDS = LP_TIME + 1\n};\n\n/* The maximum number of fields on any of the above lines.\n   (The \"+\"s pacify gcc -Wenum-compare.)  */\nenum {\n  MAX_FIELDS = max(max(+RULE_FIELDS, +LINK_FIELDS),\n\t\t   max(+LEAP_FIELDS, +EXPIRES_FIELDS))\n};\n\n/*\n** Year synonyms.\n*/\n\nenum {\n  YR_MINIMUM, /* \"minimum\" is for backward compatibility only */\n  YR_MAXIMUM,\n  YR_ONLY\n};\n\nstatic struct rule *\trules;\nstatic ptrdiff_t\tnrules;\t/* number of rules */\nstatic ptrdiff_t\tnrules_alloc;\n\nstatic struct zone *\tzones;\nstatic ptrdiff_t\tnzones;\t/* number of zones */\nstatic ptrdiff_t\tnzones_alloc;\n\nstruct link {\n\tint\t\tl_filenum;\n\tlineno\t\tl_linenum;\n\tconst char *\tl_target;\n\tconst char *\tl_linkname;\n};\n\nstatic struct link *\tlinks;\nstatic ptrdiff_t\tnlinks;\nstatic ptrdiff_t\tnlinks_alloc;\n\nstruct lookup {\n\tconst char *\tl_word;\n\tconst int\tl_value;\n};\n\nstatic struct lookup const *\tbyword(const char * string,\n\t\t\t\t\tconst struct lookup * lp);\n\nstatic struct lookup const zi_line_codes[] = {\n\t{ \"Rule\",\tLC_RULE },\n\t{ \"Zone\",\tLC_ZONE },\n\t{ \"Link\",\tLC_LINK },\n\t{ NULL,\t\t0 }\n};\nstatic struct lookup const leap_line_codes[] = {\n\t{ \"Leap\",\tLC_LEAP },\n\t{ \"Expires\",\tLC_EXPIRES },\n\t{ NULL,\t\t0}\n};\n\nstatic struct lookup const\tmon_names[] = {\n\t{ \"January\",\tTM_JANUARY },\n\t{ \"February\",\tTM_FEBRUARY },\n\t{ \"March\",\tTM_MARCH },\n\t{ \"April\",\tTM_APRIL },\n\t{ \"May\",\tTM_MAY },\n\t{ \"June\",\tTM_JUNE },\n\t{ \"July\",\tTM_JULY },\n\t{ \"August\",\tTM_AUGUST },\n\t{ \"September\",\tTM_SEPTEMBER },\n\t{ \"October\",\tTM_OCTOBER },\n\t{ \"November\",\tTM_NOVEMBER },\n\t{ \"December\",\tTM_DECEMBER },\n\t{ NULL,\t\t0 }\n};\n\nstatic struct lookup const\twday_names[] = {\n\t{ \"Sunday\",\tTM_SUNDAY },\n\t{ \"Monday\",\tTM_MONDAY },\n\t{ \"Tuesday\",\tTM_TUESDAY },\n\t{ \"Wednesday\",\tTM_WEDNESDAY },\n\t{ \"Thursday\",\tTM_THURSDAY },\n\t{ \"Friday\",\tTM_FRIDAY },\n\t{ \"Saturday\",\tTM_SATURDAY },\n\t{ NULL,\t\t0 }\n};\n\nstatic struct lookup const\tlasts[] = {\n\t{ \"last-Sunday\",\tTM_SUNDAY },\n\t{ \"last-Monday\",\tTM_MONDAY },\n\t{ \"last-Tuesday\",\tTM_TUESDAY },\n\t{ \"last-Wednesday\",\tTM_WEDNESDAY },\n\t{ \"last-Thursday\",\tTM_THURSDAY },\n\t{ \"last-Friday\",\tTM_FRIDAY },\n\t{ \"last-Saturday\",\tTM_SATURDAY },\n\t{ NULL,\t\t\t0 }\n};\n\nstatic struct lookup const\tbegin_years[] = {\n\t{ \"minimum\",\tYR_MINIMUM },\n\t{ NULL,\t\t0 }\n};\n\nstatic struct lookup const\tend_years[] = {\n\t{ \"maximum\",\tYR_MAXIMUM },\n\t{ \"only\",\tYR_ONLY },\n\t{ NULL,\t\t0 }\n};\n\nstatic struct lookup const\tleap_types[] = {\n\t{ \"Rolling\",\ttrue },\n\t{ \"Stationary\",\tfalse },\n\t{ NULL,\t\t0 }\n};\n\nstatic const int\tlen_months[2][MONSPERYEAR] = {\n\t{ 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 },\n\t{ 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31 }\n};\n\nstatic const int\tlen_years[2] = {\n\tDAYSPERNYEAR, DAYSPERLYEAR\n};\n\nstatic struct attype {\n\tzic_t\t\tat;\n\tbool\t\tdontmerge;\n\tunsigned char\ttype;\n} *\t\t\tattypes;\nstatic zic_t\t\tutoffs[TZ_MAX_TYPES];\nstatic char\t\tisdsts[TZ_MAX_TYPES];\nstatic unsigned char\tdesigidx[TZ_MAX_TYPES];\nstatic bool\t\tttisstds[TZ_MAX_TYPES];\nstatic bool\t\tttisuts[TZ_MAX_TYPES];\nstatic char\t\tchars[TZ_MAX_CHARS];\nstatic zic_t\t\ttrans[TZ_MAX_LEAPS];\nstatic zic_t\t\tcorr[TZ_MAX_LEAPS];\nstatic char\t\troll[TZ_MAX_LEAPS];\n\n/*\n** Memory allocation.\n*/\n\nATTRIBUTE_NORETURN static void\nmemory_exhausted(const char *msg)\n{\n\tfprintf(stderr, _(\"%s: Memory exhausted: %s\\n\"), progname, msg);\n\texit(EXIT_FAILURE);\n}\n\nATTRIBUTE_NORETURN static void\nsize_overflow(void)\n{\n  memory_exhausted(_(\"size overflow\"));\n}\n\nATTRIBUTE_PURE_114833 static ptrdiff_t\nsize_sum(size_t a, size_t b)\n{\n#ifdef ckd_add\n  ptrdiff_t sum;\n  if (!ckd_add(&sum, a, b) && sum <= INDEX_MAX)\n    return sum;\n#else\n  if (a <= INDEX_MAX && b <= INDEX_MAX - a)\n    return a + b;\n#endif\n  size_overflow();\n}\n\nATTRIBUTE_PURE_114833 static ptrdiff_t\nsize_product(ptrdiff_t nitems, ptrdiff_t itemsize)\n{\n#ifdef ckd_mul\n  ptrdiff_t product;\n  if (!ckd_mul(&product, nitems, itemsize) && product <= INDEX_MAX)\n    return product;\n#else\n  ptrdiff_t nitems_max = INDEX_MAX / itemsize;\n  if (nitems <= nitems_max)\n    return nitems * itemsize;\n#endif\n  size_overflow();\n}\n\nATTRIBUTE_PURE_114833 static ptrdiff_t\nalign_to(ptrdiff_t size, ptrdiff_t alignment)\n{\n  ptrdiff_t lo_bits = alignment - 1, sum = size_sum(size, lo_bits);\n  return sum & ~lo_bits;\n}\n\n#if !HAVE_STRDUP\nstatic char *\nstrdup(char const *str)\n{\n  char *result = malloc(strlen(str) + 1);\n  return result ? strcpy(result, str) : result;\n}\n#endif\n\nstatic void *\nmemcheck(void *ptr)\n{\n\tif (ptr == NULL)\n\t  memory_exhausted(strerror(HAVE_MALLOC_ERRNO ? errno : ENOMEM));\n\treturn ptr;\n}\n\nstatic void *\nxmalloc(size_t size)\n{\n  return memcheck(malloc(size));\n}\n\nstatic void *\nxrealloc(void *ptr, size_t size)\n{\n  return memcheck(realloc(ptr, size));\n}\n\nstatic char *\nxstrdup(char const *str)\n{\n  return memcheck(strdup(str));\n}\n\nstatic ptrdiff_t\ngrow_nitems_alloc(ptrdiff_t *nitems_alloc, ptrdiff_t itemsize)\n{\n  ptrdiff_t addend = (*nitems_alloc >> 1) + 1;\n#if defined ckd_add && defined ckd_mul\n  ptrdiff_t product;\n  if (!ckd_add(nitems_alloc, *nitems_alloc, addend)\n      && !ckd_mul(&product, *nitems_alloc, itemsize) && product <= INDEX_MAX)\n    return product;\n#else\n  if (*nitems_alloc <= ((INDEX_MAX - 1) / 3 * 2) / itemsize) {\n    *nitems_alloc += addend;\n    return *nitems_alloc * itemsize;\n  }\n#endif\n  memory_exhausted(_(\"integer overflow\"));\n}\n\nstatic void *\ngrowalloc(void *ptr, ptrdiff_t itemsize, ptrdiff_t nitems,\n\t  ptrdiff_t *nitems_alloc)\n{\n  return (nitems < *nitems_alloc\n\t  ? ptr\n\t  : xrealloc(ptr, grow_nitems_alloc(nitems_alloc, itemsize)));\n}\n\n/*\n** Error handling.\n*/\n\n/* In most of the code, an input file name is represented by its index\n   into the main argument vector, except that LEAPSEC_FILENUM stands\n   for leapsec and COMMAND_LINE_FILENUM stands for the command line.  */\nenum { LEAPSEC_FILENUM = -2, COMMAND_LINE_FILENUM = -1 };\n\n/* Return the name of the Ith input file, for diagnostics.  */\nstatic char const *\nfilename(int i)\n{\n  if (i == COMMAND_LINE_FILENUM)\n    return _(\"command line\");\n  else {\n    char const *fname = i == LEAPSEC_FILENUM ? leapsec : main_argv[i];\n    return strcmp(fname, \"-\") == 0 ? _(\"standard input\") : fname;\n  }\n}\n\nstatic void\neats(int fnum, lineno num, int rfnum, lineno rnum)\n{\n\tfilenum = fnum;\n\tlinenum = num;\n\trfilenum = rfnum;\n\trlinenum = rnum;\n}\n\nstatic void\neat(int fnum, lineno num)\n{\n\teats(fnum, num, 0, -1);\n}\n\nATTRIBUTE_FORMAT((printf, 1, 0)) static void\nverror(const char *const string, va_list args)\n{\n\t/*\n\t** Match the format of \"cc\" to allow sh users to\n\t**\tzic ... 2>&1 | error -t \"*\" -v\n\t** on BSD systems.\n\t*/\n\tif (filenum)\n\t  fprintf(stderr, _(\"\\\"%s\\\", line %\"PRIdMAX\": \"),\n\t\t  filename(filenum), linenum);\n\tvfprintf(stderr, string, args);\n\tif (rfilenum)\n\t\tfprintf(stderr, _(\" (rule from \\\"%s\\\", line %\"PRIdMAX\")\"),\n\t\t\tfilename(rfilenum), rlinenum);\n\tfprintf(stderr, \"\\n\");\n}\n\nATTRIBUTE_FORMAT((printf, 1, 2)) static void\nerror(const char *const string, ...)\n{\n\tva_list args;\n\tva_start(args, string);\n\tverror(string, args);\n\tva_end(args);\n\terrors = true;\n}\n\nATTRIBUTE_FORMAT((printf, 1, 2)) static void\nwarning(const char *const string, ...)\n{\n\tva_list args;\n\tfprintf(stderr, _(\"warning: \"));\n\tva_start(args, string);\n\tverror(string, args);\n\tva_end(args);\n\twarnings = true;\n}\n\n/* Close STREAM.  If it had an I/O error, report it against DIR/NAME,\n   remove TEMPNAME if nonnull, and then exit.  */\nstatic void\nclose_file(FILE *stream, char const *dir, char const *name,\n\t   char const *tempname)\n{\n  char const *e = (ferror(stream) ? _(\"I/O error\")\n\t\t   : fclose(stream) != 0 ? strerror(errno) : NULL);\n  if (e) {\n    fprintf(stderr, \"%s: %s%s%s%s%s\\n\", progname,\n\t    dir ? dir : \"\", dir ? \"/\" : \"\",\n\t    name ? name : \"\", name ? \": \" : \"\",\n\t    e);\n    if (tempname)\n      remove(tempname);\n    exit(EXIT_FAILURE);\n  }\n}\n\nATTRIBUTE_NORETURN static void\nusage(FILE *stream, int status)\n{\n  fprintf(stream,\n\t  _(\"%s: usage is %s [ --version ] [ --help ] [ -v ] \\\\\\n\"\n\t    \"\\t[ -b {slim|fat} ] [ -d directory ] [ -l localtime ]\"\n\t    \" [ -L leapseconds ] \\\\\\n\"\n\t    \"\\t[ -p posixrules ] [ -r '[@lo][/@hi]' ] [ -R '@hi' ] \\\\\\n\"\n\t    \"\\t[ -t localtime-link ] \\\\\\n\"\n\t    \"\\t[ filename ... ]\\n\\n\"\n\t    \"Report bugs to %s.\\n\"),\n\t  progname, progname, REPORT_BUGS_TO);\n  if (status == EXIT_SUCCESS)\n    close_file(stream, NULL, NULL, NULL);\n  exit(status);\n}\n\n/* Change the working directory to DIR, possibly creating DIR and its\n   ancestors.  After this is done, all files are accessed with names\n   relative to DIR.  */\nstatic void\nchange_directory(char const *dir)\n{\n  if (chdir(dir) != 0) {\n    int chdir_errno = errno;\n    if (chdir_errno == ENOENT) {\n      mkdirs(dir, false);\n      chdir_errno = chdir(dir) == 0 ? 0 : errno;\n    }\n    if (chdir_errno != 0) {\n      fprintf(stderr, _(\"%s: Can't chdir to %s: %s\\n\"),\n\t      progname, dir, strerror(chdir_errno));\n      exit(EXIT_FAILURE);\n    }\n  }\n}\n\n/* Compare the two links A and B, for a stable sort by link name.  */\nstatic int\nqsort_linkcmp(void const *a, void const *b)\n{\n  struct link const *l = a;\n  struct link const *m = b;\n  int cmp = strcmp(l->l_linkname, m->l_linkname);\n  if (cmp)\n    return cmp;\n\n  /* The link names are the same.  Make the sort stable by comparing\n     file numbers (where subtraction cannot overflow) and possibly\n     line numbers (where it can).  */\n  cmp = l->l_filenum - m->l_filenum;\n  if (cmp)\n    return cmp;\n  return (l->l_linenum > m->l_linenum) - (l->l_linenum < m->l_linenum);\n}\n\n/* Compare the string KEY to the link B, for bsearch.  */\nstatic int\nbsearch_linkcmp(void const *key, void const *b)\n{\n  struct link const *m = b;\n  return strcmp(key, m->l_linkname);\n}\n\n/* Make the links specified by the Link lines.  */\nstatic void\nmake_links(void)\n{\n  ptrdiff_t i, j, nalinks, pass_size;\n  if (1 < nlinks)\n    qsort(links, nlinks, sizeof *links, qsort_linkcmp);\n\n  /* Ignore each link superseded by a later link with the same name.  */\n  j = 0;\n  for (i = 0; i < nlinks; i++) {\n    while (i + 1 < nlinks\n\t   && strcmp(links[i].l_linkname, links[i + 1].l_linkname) == 0)\n      i++;\n    links[j++] = links[i];\n  }\n  nlinks = pass_size = j;\n\n  /* Walk through the link array making links.  However,\n     if a link's target has not been made yet, append a copy to the\n     end of the array.  The end of the array will gradually fill\n     up with a small sorted subsequence of not-yet-made links.\n     nalinks counts all the links in the array, including copies.\n     When we reach the copied subsequence, it may still contain\n     a link to a not-yet-made link, so the process repeats.\n     At any given point in time, the link array consists of the\n     following subregions, where 0 <= i <= j <= nalinks and\n     0 <= nlinks <= nalinks:\n\n       0 .. (i - 1):\n\t links that either have been made, or have been copied to a\n\t later point point in the array (this later point can be in\n\t any of the three subregions)\n       i .. (j - 1):\n\t not-yet-made links for this pass\n       j .. (nalinks - 1):\n\t not-yet-made links that this pass has skipped because\n\t they were links to not-yet-made links\n\n     The first subregion might not be sorted if nlinks < i;\n     the other two subregions are sorted.  This algorithm does\n     not alter entries 0 .. (nlinks - 1), which remain sorted.\n\n     If there are L links, this algorithm is O(C*L*log(L)) where\n     C is the length of the longest link chain.  Usually C is\n     short (e.g., 3) though its worst-case value is L.  */\n\n  j = nalinks = nlinks;\n\n  for (i = 0; i < nalinks; i++) {\n    struct link *l;\n\n    eat(links[i].l_filenum, links[i].l_linenum);\n\n    /* If this pass examined all its links, start the next pass.  */\n    if (i == j) {\n      if (nalinks - i == pass_size) {\n\terror(_(\"\\\"Link %s %s\\\" is part of a link cycle\"),\n\t      links[i].l_target, links[i].l_linkname);\n\tbreak;\n      }\n      j = nalinks;\n      pass_size = nalinks - i;\n    }\n\n    /* Diagnose self links, which the cycle detection algorithm would not\n       otherwise catch.  */\n    if (strcmp(links[i].l_target, links[i].l_linkname) == 0) {\n      error(_(\"link %s targets itself\"), links[i].l_target);\n      continue;\n    }\n\n    /* Make this link unless its target has not been made yet.  */\n    l = bsearch(links[i].l_target, &links[i + 1], j - (i + 1),\n\t\tsizeof *links, bsearch_linkcmp);\n    if (!l)\n      l = bsearch(links[i].l_target, &links[j], nalinks - j,\n\t\t  sizeof *links, bsearch_linkcmp);\n    if (!l)\n      dolink(links[i].l_target, links[i].l_linkname, false);\n    else {\n      /* The link target has not been made yet; copy the link to the end.  */\n      links = growalloc(links, sizeof *links, nalinks, &nlinks_alloc);\n      links[nalinks++] = links[i];\n    }\n\n    if (noise && i < nlinks) {\n      if (l)\n\twarning(_(\"link %s targeting link %s mishandled by pre-2023 zic\"),\n\t\tlinks[i].l_linkname, links[i].l_target);\n      else if (bsearch(links[i].l_target, links, nlinks, sizeof *links,\n\t\t       bsearch_linkcmp))\n\twarning(_(\"link %s targeting link %s\"),\n\t\tlinks[i].l_linkname, links[i].l_target);\n    }\n  }\n}\n\n/* Simple signal handling: just set a flag that is checked\n   periodically outside critical sections.  To set up the handler,\n   prefer sigaction if available to close a signal race.  */\n\nstatic sig_atomic_t got_signal;\n\nstatic void\nsignal_handler(int sig)\n{\n#ifndef SA_SIGINFO\n  signal(sig, signal_handler);\n#endif\n  got_signal = sig;\n}\n\n/* Arrange for SIGINT etc. to be caught by the handler.  */\nstatic void\ncatch_signals(void)\n{\n  static int const signals[] = {\n#ifdef SIGHUP\n    SIGHUP,\n#endif\n    SIGINT,\n#ifdef SIGPIPE\n    SIGPIPE,\n#endif\n    SIGTERM\n  };\n  int i;\n  for (i = 0; i < sizeof signals / sizeof signals[0]; i++) {\n#ifdef SA_SIGINFO\n    struct sigaction act0, act;\n    act.sa_handler = signal_handler;\n    sigemptyset(&act.sa_mask);\n    act.sa_flags = 0;\n    if (sigaction(signals[i], &act, &act0) == 0\n\t&& ! (act0.sa_flags & SA_SIGINFO) && act0.sa_handler == SIG_IGN) {\n      sigaction(signals[i], &act0, NULL);\n      got_signal = 0;\n    }\n#else\n    if (signal(signals[i], signal_handler) == SIG_IGN) {\n      signal(signals[i], SIG_IGN);\n      got_signal = 0;\n    }\n#endif\n  }\n}\n\n/* If a signal has arrived, terminate zic with appropriate status.  */\nstatic void\ncheck_for_signal(void)\n{\n  int sig = got_signal;\n  if (sig) {\n    signal(sig, SIG_DFL);\n    raise(sig);\n    abort(); /* A bug in 'raise'.  */\n  }\n}\n\nenum { TIME_T_BITS_IN_FILE = 64 };\n\n/* The minimum and maximum values representable in a TZif file.  */\nstatic zic_t const min_time = MINVAL(zic_t, TIME_T_BITS_IN_FILE);\nstatic zic_t const max_time = MAXVAL(zic_t, TIME_T_BITS_IN_FILE);\n\n/* The minimum, and one less than the maximum, values specified by\n   the -r option.  These default to MIN_TIME and MAX_TIME.  */\nstatic zic_t lo_time = MINVAL(zic_t, TIME_T_BITS_IN_FILE);\nstatic zic_t hi_time = MAXVAL(zic_t, TIME_T_BITS_IN_FILE);\n\n/* The time specified by the -R option, defaulting to MIN_TIME;\n   or lo_time, whichever is greater.  */\nstatic zic_t redundant_time = MINVAL(zic_t, TIME_T_BITS_IN_FILE);\n\n/* The time specified by an Expires line, or negative if no such line.  */\nstatic zic_t leapexpires = -1;\n\n/* Set the time range of the output to TIMERANGE.\n   Return true if successful.  */\nstatic bool\ntimerange_option(char *timerange)\n{\n  intmax_t lo = min_time, hi = max_time;\n  char *lo_end = timerange, *hi_end;\n  if (*timerange == '@') {\n    errno = 0;\n    lo = strtoimax(timerange + 1, &lo_end, 10);\n    if (lo_end == timerange + 1 || (lo == INTMAX_MAX && errno == ERANGE))\n      return false;\n  }\n  hi_end = lo_end;\n  if (lo_end[0] == '/' && lo_end[1] == '@') {\n    errno = 0;\n    hi = strtoimax(lo_end + 2, &hi_end, 10);\n    if (hi_end == lo_end + 2 || hi == INTMAX_MIN)\n      return false;\n    hi -= ! (hi == INTMAX_MAX && errno == ERANGE);\n  }\n  if (*hi_end || hi < lo || max_time < lo || hi < min_time)\n    return false;\n  lo_time = max(lo, min_time);\n  hi_time = min(hi, max_time);\n  return true;\n}\n\n/* Generate redundant time stamps up to OPT.  Return true if successful.  */\nstatic bool\nredundant_time_option(char *opt)\n{\n  if (*opt == '@') {\n    intmax_t redundant;\n    char *opt_end;\n    redundant = strtoimax(opt + 1, &opt_end, 10);\n    if (opt_end != opt + 1 && !*opt_end) {\n      redundant_time = max(redundant_time, redundant);\n      return true;\n    }\n  }\n  return false;\n}\n\nstatic const char *\tpsxrules;\nstatic const char *\tlcltime;\nstatic const char *\tdirectory;\nstatic const char *\ttzdefault;\n\n/* -1 if the TZif output file should be slim, 0 if default, 1 if the\n   output should be fat for backward compatibility.  ZIC_BLOAT_DEFAULT\n   determines the default.  */\nstatic int bloat;\n\nstatic bool\nwant_bloat(void)\n{\n  return 0 <= bloat;\n}\n\n#ifndef ZIC_BLOAT_DEFAULT\n# define ZIC_BLOAT_DEFAULT \"slim\"\n#endif\n\nint\nmain(int argc, char **argv)\n{\n\tregister int c, k;\n\tregister ptrdiff_t i, j;\n\tbool timerange_given = false;\n\n#ifdef S_IWGRP\n\tumask(umask(S_IWGRP | S_IWOTH) | (S_IWGRP | S_IWOTH));\n#endif\n#if HAVE_GETTEXT\n\tsetlocale(LC_ALL, \"\");\n# ifdef TZ_DOMAINDIR\n\tbindtextdomain(TZ_DOMAIN, TZ_DOMAINDIR);\n# endif /* defined TEXTDOMAINDIR */\n\ttextdomain(TZ_DOMAIN);\n#endif /* HAVE_GETTEXT */\n\tmain_argv = argv;\n\tprogname = argv[0] ? argv[0] : \"zic\";\n\tif (TYPE_BIT(zic_t) < 64) {\n\t\tfprintf(stderr, \"%s: %s\\n\", progname,\n\t\t\t_(\"wild compilation-time specification of zic_t\"));\n\t\treturn EXIT_FAILURE;\n\t}\n\tfor (k = 1; k < argc; k++)\n\t\tif (strcmp(argv[k], \"--version\") == 0) {\n\t\t\tprintf(\"zic %s%s\\n\", PKGVERSION, TZVERSION);\n\t\t\tclose_file(stdout, NULL, NULL, NULL);\n\t\t\treturn EXIT_SUCCESS;\n\t\t} else if (strcmp(argv[k], \"--help\") == 0) {\n\t\t\tusage(stdout, EXIT_SUCCESS);\n\t\t}\n\twhile ((c = getopt(argc, argv, \"b:d:l:L:p:r:R:st:vy:\")) != EOF\n\t       && c != -1)\n\t\tswitch (c) {\n\t\t\tdefault:\n\t\t\t\tusage(stderr, EXIT_FAILURE);\n\t\t\tcase 'b':\n\t\t\t\tif (strcmp(optarg, \"slim\") == 0) {\n\t\t\t\t  if (0 < bloat)\n\t\t\t\t    error(_(\"incompatible -b options\"));\n\t\t\t\t  bloat = -1;\n\t\t\t\t} else if (strcmp(optarg, \"fat\") == 0) {\n\t\t\t\t  if (bloat < 0)\n\t\t\t\t    error(_(\"incompatible -b options\"));\n\t\t\t\t  bloat = 1;\n\t\t\t\t} else\n\t\t\t\t  error(_(\"invalid option: -b '%s'\"), optarg);\n\t\t\t\tbreak;\n\t\t\tcase 'd':\n\t\t\t\tif (directory == NULL)\n\t\t\t\t\tdirectory = optarg;\n\t\t\t\telse {\n\t\t\t\t\tfprintf(stderr,\n\t\t\t\t\t\t_(\"%s: More than one -d option\"\n\t\t\t\t\t\t  \" specified\\n\"),\n\t\t\t\t\t\tprogname);\n\t\t\t\t\treturn EXIT_FAILURE;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'l':\n\t\t\t\tif (lcltime == NULL)\n\t\t\t\t\tlcltime = optarg;\n\t\t\t\telse {\n\t\t\t\t\tfprintf(stderr,\n\t\t\t\t\t\t_(\"%s: More than one -l option\"\n\t\t\t\t\t\t  \" specified\\n\"),\n\t\t\t\t\t\tprogname);\n\t\t\t\t\treturn EXIT_FAILURE;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'p':\n\t\t\t\tif (psxrules == NULL)\n\t\t\t\t\tpsxrules = optarg;\n\t\t\t\telse {\n\t\t\t\t\tfprintf(stderr,\n\t\t\t\t\t\t_(\"%s: More than one -p option\"\n\t\t\t\t\t\t  \" specified\\n\"),\n\t\t\t\t\t\tprogname);\n\t\t\t\t\treturn EXIT_FAILURE;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 't':\n\t\t\t\tif (tzdefault != NULL) {\n\t\t\t\t  fprintf(stderr,\n\t\t\t\t\t  _(\"%s: More than one -t option\"\n\t\t\t\t\t    \" specified\\n\"),\n\t\t\t\t\t  progname);\n\t\t\t\t  return EXIT_FAILURE;\n\t\t\t\t}\n\t\t\t\ttzdefault = optarg;\n\t\t\t\tbreak;\n\t\t\tcase 'y':\n\t\t\t\twarning(_(\"-y ignored\"));\n\t\t\t\tbreak;\n\t\t\tcase 'L':\n\t\t\t\tif (leapsec == NULL)\n\t\t\t\t\tleapsec = optarg;\n\t\t\t\telse {\n\t\t\t\t\tfprintf(stderr,\n\t\t\t\t\t\t_(\"%s: More than one -L option\"\n\t\t\t\t\t\t  \" specified\\n\"),\n\t\t\t\t\t\tprogname);\n\t\t\t\t\treturn EXIT_FAILURE;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 'v':\n\t\t\t\tnoise = true;\n\t\t\t\tbreak;\n\t\t\tcase 'r':\n\t\t\t\tif (timerange_given) {\n\t\t\t\t  fprintf(stderr,\n\t\t\t\t\t  _(\"%s: More than one -r option\"\n\t\t\t\t\t    \" specified\\n\"),\n\t\t\t\t\t  progname);\n\t\t\t\t  return EXIT_FAILURE;\n\t\t\t\t}\n\t\t\t\tif (! timerange_option(optarg)) {\n\t\t\t\t  fprintf(stderr,\n\t\t\t\t\t  _(\"%s: invalid time range: %s\\n\"),\n\t\t\t\t\t  progname, optarg);\n\t\t\t\t  return EXIT_FAILURE;\n\t\t\t\t}\n\t\t\t\ttimerange_given = true;\n\t\t\t\tbreak;\n\t\t\tcase 'R':\n\t\t\t\tif (! redundant_time_option(optarg)) {\n\t\t\t\t  fprintf(stderr, _(\"%s: invalid time: %s\\n\"),\n\t\t\t\t\t  progname, optarg);\n\t\t\t\t  return EXIT_FAILURE;\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase 's':\n\t\t\t\twarning(_(\"-s ignored\"));\n\t\t\t\tbreak;\n\t\t}\n\tif (optind == argc - 1 && strcmp(argv[optind], \"=\") == 0)\n\t\tusage(stderr, EXIT_FAILURE);\t/* usage message by request */\n\tif (hi_time + (hi_time < ZIC_MAX) < redundant_time) {\n\t  fprintf(stderr, _(\"%s: -R time exceeds -r cutoff\\n\"), progname);\n\t  return EXIT_FAILURE;\n\t}\n\tif (redundant_time < lo_time)\n\t  redundant_time = lo_time;\n\tif (bloat == 0) {\n\t  static char const bloat_default[] = ZIC_BLOAT_DEFAULT;\n\t  if (strcmp(bloat_default, \"slim\") == 0)\n\t    bloat = -1;\n\t  else if (strcmp(bloat_default, \"fat\") == 0)\n\t    bloat = 1;\n\t  else\n\t    abort(); /* Configuration error.  */\n\t}\n\tif (directory == NULL)\n\t\tdirectory = TZDIR;\n\tif (tzdefault == NULL)\n\t\ttzdefault = TZDEFAULT;\n\n\tif (optind < argc && leapsec != NULL) {\n\t\tinfile(LEAPSEC_FILENUM, leapsec);\n\t\tadjleap();\n\t}\n\n\tfor (k = optind; k < argc; k++)\n\t  infile(k, argv[k]);\n\tif (errors)\n\t\treturn EXIT_FAILURE;\n\tassociate();\n\tchange_directory(directory);\n\tcatch_signals();\n\tfor (i = 0; i < nzones; i = j) {\n\t\t/*\n\t\t** Find the next non-continuation zone entry.\n\t\t*/\n\t\tfor (j = i + 1; j < nzones && zones[j].z_name == NULL; ++j)\n\t\t\tcontinue;\n\t\toutzone(&zones[i], j - i);\n\t}\n\tmake_links();\n\tif (lcltime != NULL) {\n\t\teat(COMMAND_LINE_FILENUM, 1);\n\t\tdolink(lcltime, tzdefault, true);\n\t}\n\tif (psxrules != NULL) {\n\t\teat(COMMAND_LINE_FILENUM, 1);\n\t\tdolink(psxrules, TZDEFRULES, true);\n\t}\n\tif (warnings && (ferror(stderr) || fclose(stderr) != 0))\n\t  return EXIT_FAILURE;\n\treturn errors ? EXIT_FAILURE : EXIT_SUCCESS;\n}\n\nstatic bool\ncomponentcheck(char const *name, char const *component,\n\t       char const *component_end)\n{\n\tenum { component_len_max = 14 };\n\tptrdiff_t component_len = component_end - component;\n\tif (component_len == 0) {\n\t  if (!*name)\n\t    error(_(\"empty file name\"));\n\t  else\n\t    error(_(component == name\n\t\t     ? \"file name '%s' begins with '/'\"\n\t\t     : *component_end\n\t\t     ? \"file name '%s' contains '//'\"\n\t\t     : \"file name '%s' ends with '/'\"),\n\t\t   name);\n\t  return false;\n\t}\n\tif (0 < component_len && component_len <= 2\n\t    && component[0] == '.' && component_end[-1] == '.') {\n\t  int len = component_len;\n\t  error(_(\"file name '%s' contains '%.*s' component\"),\n\t\tname, len, component);\n\t  return false;\n\t}\n\tif (noise) {\n\t  if (0 < component_len && component[0] == '-')\n\t    warning(_(\"file name '%s' component contains leading '-'\"),\n\t\t    name);\n\t  if (component_len_max < component_len)\n\t    warning(_(\"file name '%s' contains overlength component\"\n\t\t      \" '%.*s...'\"),\n\t\t    name, component_len_max, component);\n\t}\n\treturn true;\n}\n\nstatic bool\nnamecheck(const char *name)\n{\n\tregister char const *cp;\n\n\t/* Benign characters in a portable file name.  */\n\tstatic char const benign[] =\n\t  \"-/_\"\n\t  \"abcdefghijklmnopqrstuvwxyz\"\n\t  \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\n\t/* Non-control chars in the POSIX portable character set,\n\t   excluding the benign characters.  */\n\tstatic char const printable_and_not_benign[] =\n\t  \" !\\\"#$%&'()*+,.0123456789:;<=>?@[\\\\]^`{|}~\";\n\n\tregister char const *component = name;\n\tfor (cp = name; *cp; cp++) {\n\t\tunsigned char c = *cp;\n\t\tif (noise && !strchr(benign, c)) {\n\t\t\twarning((strchr(printable_and_not_benign, c)\n\t\t\t\t ? _(\"file name '%s' contains byte '%c'\")\n\t\t\t\t : _(\"file name '%s' contains byte '\\\\%o'\")),\n\t\t\t\tname, c);\n\t\t}\n\t\tif (c == '/') {\n\t\t\tif (!componentcheck(name, component, cp))\n\t\t\t  return false;\n\t\t\tcomponent = cp + 1;\n\t\t}\n\t}\n\treturn componentcheck(name, component, cp);\n}\n\n/* Return a random uint_fast64_t.  */\nstatic uint_fast64_t\nget_rand_u64(void)\n{\n#if HAVE_GETRANDOM\n  static uint_fast64_t entropy_buffer[max(1, 256 / sizeof(uint_fast64_t))];\n  static int nwords;\n  if (!nwords) {\n    ssize_t s;\n    do\n      s = getrandom(entropy_buffer, sizeof entropy_buffer, 0);\n    while (s < 0 && errno == EINTR);\n\n    nwords = s < 0 ? -1 : s / sizeof *entropy_buffer;\n  }\n  if (0 < nwords)\n    return entropy_buffer[--nwords];\n#endif\n\n  /* getrandom didn't work, so fall back on portable code that is\n     not the best because the seed isn't cryptographically random and\n     'rand' might not be cryptographically secure.  */\n  {\n    static bool initialized;\n    if (!initialized) {\n      srand(time(NULL));\n      initialized = true;\n    }\n  }\n\n  /* Return a random number if rand() yields a random number and in\n     the typical case where RAND_MAX is one less than a power of two.\n     In other cases this code yields a sort-of-random number.  */\n  {\n    uint_fast64_t rand_max = RAND_MAX,\n      nrand = rand_max < UINT_FAST64_MAX ? rand_max + 1 : 0,\n      rmod = INT_MAX < UINT_FAST64_MAX ? 0 : UINT_FAST64_MAX / nrand + 1,\n      r = 0, rmax = 0;\n\n    do {\n      uint_fast64_t rmax1 = rmax;\n      if (rmod) {\n\t/* Avoid signed integer overflow on theoretical platforms\n\t   where uint_fast64_t promotes to int.  */\n\trmax1 %= rmod;\n\tr %= rmod;\n      }\n      rmax1 = nrand * rmax1 + rand_max;\n      r = nrand * r + rand();\n      rmax = rmax < rmax1 ? rmax1 : UINT_FAST64_MAX;\n    } while (rmax < UINT_FAST64_MAX);\n\n    return r;\n  }\n}\n\n/* Generate a randomish name in the same directory as *NAME.  If\n   *NAMEALLOC, put the name into *NAMEALLOC which is assumed to be\n   that returned by a previous call and is thus already almost set up\n   and equal to *NAME; otherwise, allocate a new name and put its\n   address into both *NAMEALLOC and *NAME.  */\nstatic void\nrandom_dirent(char const **name, char **namealloc)\n{\n  char const *src = *name;\n  char *dst = *namealloc;\n  static char const prefix[] = \".zic\";\n  static char const alphabet[] =\n    \"abcdefghijklmnopqrstuvwxyz\"\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\"\n    \"0123456789\";\n  enum { prefixlen = sizeof prefix - 1, alphabetlen = sizeof alphabet - 1 };\n  int suffixlen = 6;\n  char const *lastslash = strrchr(src, '/');\n  ptrdiff_t dirlen = lastslash ? lastslash + 1 - src : 0;\n  int i;\n  uint_fast64_t r;\n  uint_fast64_t base = alphabetlen;\n\n  /* BASE**6 */\n  uint_fast64_t base__6 = base * base * base * base * base * base;\n\n  /* The largest uintmax_t that is a multiple of BASE**6.  Any random\n     uintmax_t value that is this value or greater, yields a biased\n     remainder when divided by BASE**6.  UNFAIR_MIN equals the\n     mathematical value of ((UINTMAX_MAX + 1) - (UINTMAX_MAX + 1) % BASE**6)\n     computed without overflow.  */\n  uint_fast64_t unfair_min = - ((UINTMAX_MAX % base__6 + 1) % base__6);\n\n  if (!dst) {\n    dst = xmalloc(size_sum(dirlen, prefixlen + suffixlen + 1));\n    memcpy(dst, src, dirlen);\n    memcpy(dst + dirlen, prefix, prefixlen);\n    dst[dirlen + prefixlen + suffixlen] = '\\0';\n    *name = *namealloc = dst;\n  }\n\n  do\n    r = get_rand_u64();\n  while (unfair_min <= r);\n\n  for (i = 0; i < suffixlen; i++) {\n    dst[dirlen + prefixlen + i] = alphabet[r % alphabetlen];\n    r /= alphabetlen;\n  }\n}\n\n/* Prepare to write to the file *OUTNAME, using *TEMPNAME to store the\n   name of the temporary file that will eventually be renamed to\n   *OUTNAME.  Assign the temporary file's name to both *OUTNAME and\n   *TEMPNAME.  If *TEMPNAME is null, allocate the name of any such\n   temporary file; otherwise, reuse *TEMPNAME's storage, which is\n   already set up and only needs its trailing suffix updated.  */\nstatic FILE *\nopen_outfile(char const **outname, char **tempname)\n{\n#if __STDC_VERSION__ < 201112\n  static char const fopen_mode[] = \"wb\";\n#else\n  static char const fopen_mode[] = \"wbx\";\n#endif\n\n  FILE *fp;\n  bool dirs_made = false;\n  if (!*tempname)\n    random_dirent(outname, tempname);\n\n  while (! (fp = fopen(*outname, fopen_mode))) {\n    int fopen_errno = errno;\n    if (fopen_errno == ENOENT && !dirs_made) {\n      mkdirs(*outname, true);\n      dirs_made = true;\n    } else if (fopen_errno == EEXIST)\n      random_dirent(outname, tempname);\n    else {\n      fprintf(stderr, _(\"%s: Can't create %s/%s: %s\\n\"),\n\t      progname, directory, *outname, strerror(fopen_errno));\n      exit(EXIT_FAILURE);\n    }\n  }\n\n  return fp;\n}\n\n/* If TEMPNAME, the result is in the temporary file TEMPNAME even\n   though the user wanted it in NAME, so rename TEMPNAME to NAME.\n   Report an error and exit if there is trouble.  Also, free TEMPNAME.  */\nstatic void\nrename_dest(char *tempname, char const *name)\n{\n  if (tempname) {\n    if (rename(tempname, name) != 0) {\n      int rename_errno = errno;\n      remove(tempname);\n      fprintf(stderr, _(\"%s: rename to %s/%s: %s\\n\"),\n\t      progname, directory, name, strerror(rename_errno));\n      exit(EXIT_FAILURE);\n    }\n    free(tempname);\n  }\n}\n\n/* Create symlink contents suitable for symlinking TARGET to LINKNAME, as a\n   freshly allocated string.  TARGET should be a relative file name, and\n   is relative to the global variable DIRECTORY.  LINKNAME can be either\n   relative or absolute.  */\nstatic char *\nrelname(char const *target, char const *linkname)\n{\n  size_t i, taillen, dir_len = 0, dotdots = 0;\n  ptrdiff_t dotdotetcsize, linksize = INDEX_MAX;\n  char const *f = target;\n  char *result = NULL;\n  if (*linkname == '/') {\n    /* Make F absolute too.  */\n    size_t len = strlen(directory);\n    size_t lenslash = len + (len && directory[len - 1] != '/');\n    size_t targetsize = strlen(target) + 1;\n    linksize = size_sum(lenslash, targetsize);\n    f = result = xmalloc(linksize);\n    memcpy(result, directory, len);\n    result[len] = '/';\n    memcpy(result + lenslash, target, targetsize);\n  }\n  for (i = 0; f[i] && f[i] == linkname[i]; i++)\n    if (f[i] == '/')\n      dir_len = i + 1;\n  for (; linkname[i]; i++)\n    dotdots += linkname[i] == '/' && linkname[i - 1] != '/';\n  taillen = strlen(f + dir_len);\n  dotdotetcsize = size_sum(size_product(dotdots, 3), taillen + 1);\n  if (dotdotetcsize <= linksize) {\n    if (!result)\n      result = xmalloc(dotdotetcsize);\n    for (i = 0; i < dotdots; i++)\n      memcpy(result + 3 * i, \"../\", 3);\n    memmove(result + 3 * dotdots, f + dir_len, taillen + 1);\n  }\n  return result;\n}\n\n/* Return true if A and B must have the same parent dir if A and B exist.\n   Return false if this is not necessarily true (though it might be true).\n   Keep it simple, and do not inspect the file system.  */\nATTRIBUTE_PURE_114833 static bool\nsame_parent_dirs(char const *a, char const *b)\n{\n  for (; *a == *b; a++, b++)\n    if (!*a)\n      return true;\n  return ! (strchr(a, '/') || strchr(b, '/'));\n}\n\nstatic void\ndolink(char const *target, char const *linkname, bool staysymlink)\n{\n\tbool linkdirs_made = false;\n\tint link_errno;\n\tchar *tempname = NULL;\n\tchar const *outname = linkname;\n\tint targetissym = -2, linknameissym = -2;\n\n\tcheck_for_signal();\n\n\tif (strcmp(target, \"-\") == 0) {\n\t  if (remove(linkname) == 0 || errno == ENOENT || errno == ENOTDIR)\n\t    return;\n\t  else {\n\t    char const *e = strerror(errno);\n\t    fprintf(stderr, _(\"%s: Can't remove %s/%s: %s\\n\"),\n\t\t    progname, directory, linkname, e);\n\t    exit(EXIT_FAILURE);\n\t  }\n\t}\n\n\twhile (true) {\n\t  if (linkat(AT_FDCWD, target, AT_FDCWD, outname, AT_SYMLINK_FOLLOW)\n\t      == 0) {\n\t    link_errno = 0;\n\t    break;\n\t  }\n\t  link_errno = errno;\n\t  /* Linux 2.6.16 and 2.6.17 mishandle AT_SYMLINK_FOLLOW.  */\n\t  if (link_errno == EINVAL)\n\t    link_errno = ENOTSUP;\n#if HAVE_LINK\n\t  /* If linkat is not supported, fall back on link(A, B).\n\t     However, skip this if A is a relative symlink\n\t     and A and B might not have the same parent directory.\n\t     On some platforms link(A, B) does not follow a symlink A,\n\t     and if A is relative it might misbehave elsewhere.  */\n\t  if (link_errno == ENOTSUP\n\t      && (same_parent_dirs(target, outname)\n\t\t  || 0 <= itssymlink(target, &targetissym))) {\n\t    if (link(target, outname) == 0) {\n\t      link_errno = 0;\n\t      break;\n\t    }\n\t    link_errno = errno;\n\t  }\n#endif\n\t  if (link_errno == EXDEV || link_errno == ENOTSUP)\n\t    break;\n\n\t  if (link_errno == EEXIST) {\n\t    staysymlink &= !tempname;\n\t    random_dirent(&outname, &tempname);\n\t    if (staysymlink && itssymlink(linkname, &linknameissym))\n\t      break;\n\t  } else if (link_errno == ENOENT && !linkdirs_made) {\n\t    mkdirs(linkname, true);\n\t    linkdirs_made = true;\n\t  } else {\n\t    fprintf(stderr, _(\"%s: Can't link %s/%s to %s/%s: %s\\n\"),\n\t\t    progname, directory, target, directory, outname,\n\t\t    strerror(link_errno));\n\t    exit(EXIT_FAILURE);\n\t  }\n\t}\n\tif (link_errno != 0) {\n\t  bool absolute = *target == '/';\n\t  char *linkalloc = absolute ? NULL : relname(target, linkname);\n\t  char const *contents = absolute ? target : linkalloc;\n\t  int symlink_errno;\n\n\t  while (true) {\n\t    if (symlink(contents, outname) == 0) {\n\t      symlink_errno = 0;\n\t      break;\n\t    }\n\t    symlink_errno = errno;\n\t    if (symlink_errno == EEXIST)\n\t      random_dirent(&outname, &tempname);\n\t    else if (symlink_errno == ENOENT && !linkdirs_made) {\n\t      mkdirs(linkname, true);\n\t      linkdirs_made = true;\n\t    } else\n\t      break;\n\t  }\n\t  free(linkalloc);\n\t  if (symlink_errno == 0) {\n\t    if (link_errno != ENOTSUP && link_errno != EEXIST)\n\t      warning(_(\"symbolic link used because hard link failed: %s\"),\n\t\t      strerror(link_errno));\n\t  } else {\n\t    FILE *fp, *tp;\n\t    int c;\n\t    fp = fopen(target, \"rb\");\n\t    if (!fp) {\n\t      char const *e = strerror(errno);\n\t      fprintf(stderr, _(\"%s: Can't read %s/%s: %s\\n\"),\n\t\t      progname, directory, target, e);\n\t      exit(EXIT_FAILURE);\n\t    }\n\t    tp = open_outfile(&outname, &tempname);\n\t    while ((c = getc(fp)) != EOF)\n\t      putc(c, tp);\n\t    close_file(tp, directory, linkname, tempname);\n\t    close_file(fp, directory, target, NULL);\n\t    if (link_errno != ENOTSUP)\n\t      warning(_(\"copy used because hard link failed: %s\"),\n\t\t      strerror(link_errno));\n\t    else if (symlink_errno != ENOTSUP)\n\t      warning(_(\"copy used because symbolic link failed: %s\"),\n\t\t      strerror(symlink_errno));\n\t  }\n\t}\n\trename_dest(tempname, linkname);\n}\n\n/* Return 1 if NAME is an absolute symbolic link, -1 if it is relative,\n   0 if it is not a symbolic link.  If *CACHE is not -2, it is the\n   cached result of a previous call to this function with the same NAME.  */\nstatic int\nitssymlink(char const *name, int *cache)\n{\n  if (*cache == -2) {\n    char c = '\\0';\n    *cache = readlink(name, &c, 1) < 0 ? 0 : c == '/' ? 1 : -1;\n  }\n  return *cache;\n}\n\n/*\n** Associate sets of rules with zones.\n*/\n\n/*\n** Sort by rule name.\n*/\n\nstatic int\nrcomp(const void *cp1, const void *cp2)\n{\n  struct rule const *r1 = cp1, *r2 = cp2;\n  return strcmp(r1->r_name, r2->r_name);\n}\n\nstatic void\nassociate(void)\n{\n\tregister struct zone *\tzp;\n\tregister struct rule *\trp;\n\tregister ptrdiff_t i, j, base, out;\n\n\tif (1 < nrules) {\n\t\tqsort(rules, nrules, sizeof *rules, rcomp);\n\t\tfor (i = 0; i < nrules - 1; ++i) {\n\t\t\tif (strcmp(rules[i].r_name,\n\t\t\t\trules[i + 1].r_name) != 0)\n\t\t\t\t\tcontinue;\n\t\t\tif (rules[i].r_filenum == rules[i + 1].r_filenum)\n\t\t\t\t\tcontinue;\n\t\t\teat(rules[i].r_filenum, rules[i].r_linenum);\n\t\t\twarning(_(\"same rule name in multiple files\"));\n\t\t\teat(rules[i + 1].r_filenum, rules[i + 1].r_linenum);\n\t\t\twarning(_(\"same rule name in multiple files\"));\n\t\t\tfor (j = i + 2; j < nrules; ++j) {\n\t\t\t\tif (strcmp(rules[i].r_name,\n\t\t\t\t\trules[j].r_name) != 0)\n\t\t\t\t\t\tbreak;\n\t\t\t\tif (rules[i].r_filenum == rules[j].r_filenum)\n\t\t\t\t\t\tcontinue;\n\t\t\t\tif (rules[i + 1].r_filenum\n\t\t\t\t    == rules[j].r_filenum)\n\t\t\t\t\t\tcontinue;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ti = j - 1;\n\t\t}\n\t}\n\tfor (i = 0; i < nzones; ++i) {\n\t\tzp = &zones[i];\n\t\tzp->z_rules = NULL;\n\t\tzp->z_nrules = 0;\n\t}\n\tfor (base = 0; base < nrules; base = out) {\n\t\trp = &rules[base];\n\t\tfor (out = base + 1; out < nrules; ++out)\n\t\t\tif (strcmp(rp->r_name, rules[out].r_name) != 0)\n\t\t\t\tbreak;\n\t\tfor (i = 0; i < nzones; ++i) {\n\t\t\tzp = &zones[i];\n\t\t\tif (strcmp(zp->z_rule, rp->r_name) != 0)\n\t\t\t\tcontinue;\n\t\t\tzp->z_rules = rp;\n\t\t\tzp->z_nrules = out - base;\n\t\t}\n\t}\n\tfor (i = 0; i < nzones; ++i) {\n\t\tzp = &zones[i];\n\t\tif (zp->z_nrules == 0) {\n\t\t\t/*\n\t\t\t** Maybe we have a local standard time offset.\n\t\t\t*/\n\t\t\teat(zp->z_filenum, zp->z_linenum);\n\t\t\tzp->z_save = getsave(zp->z_rule, &zp->z_isdst);\n\t\t\t/*\n\t\t\t** Note, though, that if there's no rule,\n\t\t\t** a '%s' in the format is a bad thing.\n\t\t\t*/\n\t\t\tif (zp->z_format_specifier == 's')\n\t\t\t\terror(\"%s\", _(\"%s in ruleless zone\"));\n\t\t}\n\t}\n\tif (errors)\n\t\texit(EXIT_FAILURE);\n}\n\n/* Read a text line from FP into BUF, which is of size BUFSIZE.\n   Terminate it with a NUL byte instead of a newline.\n   Return true if successful, false if EOF.\n   On error, report the error and exit.  */\nstatic bool\ninputline(FILE *fp, char *buf, ptrdiff_t bufsize)\n{\n  ptrdiff_t linelen = 0, ch;\n  while ((ch = getc(fp)) != '\\n') {\n    if (ch < 0) {\n      if (ferror(fp)) {\n\terror(_(\"input error\"));\n\texit(EXIT_FAILURE);\n      }\n      if (linelen == 0)\n\treturn false;\n      error(_(\"unterminated line\"));\n      exit(EXIT_FAILURE);\n    }\n    if (!ch) {\n      error(_(\"NUL input byte\"));\n      exit(EXIT_FAILURE);\n    }\n    buf[linelen++] = ch;\n    if (linelen == bufsize) {\n      error(_(\"line too long\"));\n      exit(EXIT_FAILURE);\n    }\n  }\n  buf[linelen] = '\\0';\n  return true;\n}\n\nstatic void\ninfile(int fnum, char const *name)\n{\n\tregister FILE *\t\t\tfp;\n\tregister const struct lookup *\tlp;\n\tregister bool\t\t\twantcont;\n\tregister lineno\t\t\tnum;\n\n\tif (strcmp(name, \"-\") == 0) {\n\t\tfp = stdin;\n\t} else if ((fp = fopen(name, \"r\")) == NULL) {\n\t\tconst char *e = strerror(errno);\n\n\t\tfprintf(stderr, _(\"%s: Can't open %s: %s\\n\"),\n\t\t\tprogname, name, e);\n\t\texit(EXIT_FAILURE);\n\t}\n\twantcont = false;\n\tfor (num = 1; ; ++num) {\n\t\tenum { bufsize_bound\n\t\t  = (min(INT_MAX, INDEX_MAX) / FORMAT_LEN_GROWTH_BOUND) };\n\t\tchar buf[min(_POSIX2_LINE_MAX, bufsize_bound)];\n\t\tint nfields;\n\t\tchar *fields[MAX_FIELDS];\n\t\teat(fnum, num);\n\t\tif (!inputline(fp, buf, sizeof buf))\n\t\t  break;\n\t\tnfields = getfields(buf, fields,\n\t\t\t\t    sizeof fields / sizeof *fields);\n\t\tif (nfields == 0) {\n\t\t\t/* nothing to do */\n\t\t} else if (wantcont) {\n\t\t\twantcont = inzcont(fields, nfields);\n\t\t} else {\n\t\t\tstruct lookup const *line_codes\n\t\t\t  = fnum < 0 ? leap_line_codes : zi_line_codes;\n\t\t\tlp = byword(fields[0], line_codes);\n\t\t\tif (lp == NULL)\n\t\t\t\terror(_(\"input line of unknown type\"));\n\t\t\telse switch (lp->l_value) {\n\t\t\t\tcase LC_RULE:\n\t\t\t\t\tinrule(fields, nfields);\n\t\t\t\t\twantcont = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase LC_ZONE:\n\t\t\t\t\twantcont = inzone(fields, nfields);\n\t\t\t\t\tbreak;\n\t\t\t\tcase LC_LINK:\n\t\t\t\t\tinlink(fields, nfields);\n\t\t\t\t\twantcont = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase LC_LEAP:\n\t\t\t\t\tinleap(fields, nfields);\n\t\t\t\t\twantcont = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase LC_EXPIRES:\n\t\t\t\t\tinexpires(fields, nfields);\n\t\t\t\t\twantcont = false;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault: unreachable();\n\t\t\t}\n\t\t}\n\t}\n\tclose_file(fp, NULL, filename(fnum), NULL);\n\tif (wantcont)\n\t\terror(_(\"expected continuation line not found\"));\n}\n\n/*\n** Convert a string of one of the forms\n**\th\t-h\thh:mm\t-hh:mm\thh:mm:ss\t-hh:mm:ss\n** into a number of seconds.\n** A null string maps to zero.\n** Call error with errstring and return zero on errors.\n*/\n\nstatic zic_t\ngethms(char const *string, char const *errstring)\n{\n\tzic_t\thh;\n\tint sign, mm = 0, ss = 0;\n\tchar hhx, mmx, ssx, xr = '0', xs;\n\tint tenths = 0;\n\tbool ok = true;\n\n\tif (string == NULL || *string == '\\0')\n\t\treturn 0;\n\tif (*string == '-') {\n\t\tsign = -1;\n\t\t++string;\n\t} else\tsign = 1;\n\tswitch (sscanf(string,\n\t\t       \"%\"SCNdZIC\"%c%d%c%d%c%1d%*[0]%c%*[0123456789]%c\",\n\t\t       &hh, &hhx, &mm, &mmx, &ss, &ssx, &tenths, &xr, &xs)) {\n\t  default: ok = false; break;\n\t  case 8:\n\t    ok = '0' <= xr && xr <= '9';\n\t    ATTRIBUTE_FALLTHROUGH;\n\t  case 7:\n\t    ok &= ssx == '.';\n\t    if (ok && noise)\n\t      warning(_(\"fractional seconds rejected by\"\n\t\t\t\" pre-2018 versions of zic\"));\n\t    ATTRIBUTE_FALLTHROUGH;\n\t  case 5: ok &= mmx == ':'; ATTRIBUTE_FALLTHROUGH;\n\t  case 3: ok &= hhx == ':'; ATTRIBUTE_FALLTHROUGH;\n\t  case 1: break;\n\t}\n\tif (!ok) {\n\t\t\terror(\"%s\", errstring);\n\t\t\treturn 0;\n\t}\n\tif (hh < 0 ||\n\t\tmm < 0 || mm >= MINSPERHOUR ||\n\t\tss < 0 || ss > SECSPERMIN) {\n\t\t\terror(\"%s\", errstring);\n\t\t\treturn 0;\n\t}\n\tif (ZIC_MAX / SECSPERHOUR < hh) {\n\t\terror(_(\"time overflow\"));\n\t\treturn 0;\n\t}\n\tss += 5 + ((ss ^ 1) & (xr == '0')) <= tenths; /* Round to even.  */\n\tif (noise && (hh > HOURSPERDAY ||\n\t\t(hh == HOURSPERDAY && (mm != 0 || ss != 0))))\nwarning(_(\"values over 24 hours not handled by pre-2007 versions of zic\"));\n\treturn oadd(sign * hh * SECSPERHOUR,\n\t\t    sign * (mm * SECSPERMIN + ss));\n}\n\nstatic zic_t\ngetsave(char *field, bool *isdst)\n{\n  int dst = -1;\n  zic_t save;\n  ptrdiff_t fieldlen = strlen(field);\n  if (fieldlen != 0) {\n    char *ep = field + fieldlen - 1;\n    switch (*ep) {\n      case 'd': dst = 1; *ep = '\\0'; break;\n      case 's': dst = 0; *ep = '\\0'; break;\n    }\n  }\n  save = gethms(field, _(\"invalid saved time\"));\n  *isdst = dst < 0 ? save != 0 : dst;\n  return save;\n}\n\nstatic void\ninrule(char **fields, int nfields)\n{\n\tstruct rule r;\n\n\tif (nfields != RULE_FIELDS) {\n\t\terror(_(\"wrong number of fields on Rule line\"));\n\t\treturn;\n\t}\n\tswitch (*fields[RF_NAME]) {\n\t  case '\\0':\n\t  case ' ': case '\\f': case '\\n': case '\\r': case '\\t': case '\\v':\n\t  case '+': case '-':\n\t  case '0': case '1': case '2': case '3': case '4':\n\t  case '5': case '6': case '7': case '8': case '9':\n\t\terror(_(\"Invalid rule name \\\"%s\\\"\"), fields[RF_NAME]);\n\t\treturn;\n\t}\n\tr.r_filenum = filenum;\n\tr.r_linenum = linenum;\n\tr.r_save = getsave(fields[RF_SAVE], &r.r_isdst);\n\tif (!rulesub(&r, fields[RF_LOYEAR], fields[RF_HIYEAR],\n\t\t     fields[RF_COMMAND], fields[RF_MONTH], fields[RF_DAY],\n\t\t     fields[RF_TOD]))\n\t  return;\n\tr.r_name = xstrdup(fields[RF_NAME]);\n\tr.r_abbrvar = xstrdup(fields[RF_ABBRVAR]);\n\tif (max_abbrvar_len < strlen(r.r_abbrvar))\n\t\tmax_abbrvar_len = strlen(r.r_abbrvar);\n\trules = growalloc(rules, sizeof *rules, nrules, &nrules_alloc);\n\trules[nrules++] = r;\n}\n\nstatic bool\ninzone(char **fields, int nfields)\n{\n\tregister ptrdiff_t i;\n\n\tif (nfields < ZONE_MINFIELDS || nfields > ZONE_MAXFIELDS) {\n\t\terror(_(\"wrong number of fields on Zone line\"));\n\t\treturn false;\n\t}\n\tif (lcltime != NULL && strcmp(fields[ZF_NAME], tzdefault) == 0) {\n\t  error(_(\"\\\"Zone %s\\\" line and -l option are mutually exclusive\"),\n\t\ttzdefault);\n\t  return false;\n\t}\n\tif (strcmp(fields[ZF_NAME], TZDEFRULES) == 0 && psxrules != NULL) {\n\t  error(_(\"\\\"Zone %s\\\" line and -p option are mutually exclusive\"),\n\t\tTZDEFRULES);\n\t  return false;\n\t}\n\tfor (i = 0; i < nzones; ++i)\n\t\tif (zones[i].z_name != NULL &&\n\t\t\tstrcmp(zones[i].z_name, fields[ZF_NAME]) == 0) {\n\t\t\t\terror(_(\"duplicate zone name %s\"\n\t\t\t\t\t\" (file \\\"%s\\\", line %\"PRIdMAX\")\"),\n\t\t\t\t      fields[ZF_NAME],\n\t\t\t\t      filename(zones[i].z_filenum),\n\t\t\t\t      zones[i].z_linenum);\n\t\t\t\treturn false;\n\t\t}\n\treturn inzsub(fields, nfields, false);\n}\n\nstatic bool\ninzcont(char **fields, int nfields)\n{\n\tif (nfields < ZONEC_MINFIELDS || nfields > ZONEC_MAXFIELDS) {\n\t\terror(_(\"wrong number of fields on Zone continuation line\"));\n\t\treturn false;\n\t}\n\treturn inzsub(fields, nfields, true);\n}\n\nstatic bool\ninzsub(char **fields, int nfields, bool iscont)\n{\n\tregister char *\t\tcp;\n\tchar *\t\t\tcp1;\n\tstruct zone z;\n\tint format_len;\n\tregister int\t\ti_stdoff, i_rule, i_format;\n\tregister int\t\ti_untilyear, i_untilmonth;\n\tregister int\t\ti_untilday, i_untiltime;\n\tregister bool\t\thasuntil;\n\n\tif (iscont) {\n\t\ti_stdoff = ZFC_STDOFF;\n\t\ti_rule = ZFC_RULE;\n\t\ti_format = ZFC_FORMAT;\n\t\ti_untilyear = ZFC_TILYEAR;\n\t\ti_untilmonth = ZFC_TILMONTH;\n\t\ti_untilday = ZFC_TILDAY;\n\t\ti_untiltime = ZFC_TILTIME;\n\t} else if (!namecheck(fields[ZF_NAME]))\n\t\treturn false;\n\telse {\n\t\ti_stdoff = ZF_STDOFF;\n\t\ti_rule = ZF_RULE;\n\t\ti_format = ZF_FORMAT;\n\t\ti_untilyear = ZF_TILYEAR;\n\t\ti_untilmonth = ZF_TILMONTH;\n\t\ti_untilday = ZF_TILDAY;\n\t\ti_untiltime = ZF_TILTIME;\n\t}\n\tz.z_filenum = filenum;\n\tz.z_linenum = linenum;\n\tz.z_stdoff = gethms(fields[i_stdoff], _(\"invalid UT offset\"));\n\tcp = strchr(fields[i_format], '%');\n\tif (cp) {\n\t\tif ((*++cp != 's' && *cp != 'z') || strchr(cp, '%')\n\t\t    || strchr(fields[i_format], '/')) {\n\t\t\terror(_(\"invalid abbreviation format\"));\n\t\t\treturn false;\n\t\t}\n\t}\n\tz.z_format_specifier = cp ? *cp : '\\0';\n\tformat_len = strlen(fields[i_format]);\n\tif (max_format_len < format_len)\n\t  max_format_len = format_len;\n\thasuntil = nfields > i_untilyear;\n\tif (hasuntil) {\n\t\tz.z_untilrule.r_filenum = filenum;\n\t\tz.z_untilrule.r_linenum = linenum;\n\t\tif (!rulesub(\n\t\t\t&z.z_untilrule,\n\t\t\tfields[i_untilyear],\n\t\t\t\"only\",\n\t\t\t\"\",\n\t\t\t(nfields > i_untilmonth) ?\n\t\t\tfields[i_untilmonth] : \"Jan\",\n\t\t\t(nfields > i_untilday) ? fields[i_untilday] : \"1\",\n\t\t\t(nfields > i_untiltime) ? fields[i_untiltime] : \"0\"))\n\t\t  return false;\n\t\tz.z_untiltime = rpytime(&z.z_untilrule,\n\t\t\tz.z_untilrule.r_loyear);\n\t\tif (iscont && nzones > 0 &&\n\t\t\tz.z_untiltime > min_time &&\n\t\t\tz.z_untiltime < max_time &&\n\t\t\tzones[nzones - 1].z_untiltime > min_time &&\n\t\t\tzones[nzones - 1].z_untiltime < max_time &&\n\t\t\tzones[nzones - 1].z_untiltime >= z.z_untiltime) {\n\t\t  error(_(\"Zone continuation line end time is\"\n\t\t\t  \" not after end time of previous line\"));\n\t\t  return false;\n\t\t}\n\t}\n\tz.z_name = iscont ? NULL : xstrdup(fields[ZF_NAME]);\n\tz.z_rule = xstrdup(fields[i_rule]);\n\tz.z_format = cp1 = xstrdup(fields[i_format]);\n\tif (z.z_format_specifier == 'z') {\n\t  cp1[cp - fields[i_format]] = 's';\n\t  if (noise)\n\t    warning(_(\"format '%s' not handled by pre-2015 versions of zic\"),\n\t\t    fields[i_format]);\n\t}\n\tzones = growalloc(zones, sizeof *zones, nzones, &nzones_alloc);\n\tzones[nzones++] = z;\n\t/*\n\t** If there was an UNTIL field on this line,\n\t** there's more information about the zone on the next line.\n\t*/\n\treturn hasuntil;\n}\n\nstatic zic_t\ngetleapdatetime(char **fields, bool expire_line)\n{\n\tregister const char *\t\tcp;\n\tregister const struct lookup *\tlp;\n\tregister zic_t\t\t\ti, j;\n\tzic_t\t\t\t\tyear;\n\tint\t\t\t\tmonth, day;\n\tzic_t\t\t\t\tdayoff, tod;\n\tzic_t\t\t\t\tt;\n\tchar xs;\n\n\tdayoff = 0;\n\tcp = fields[LP_YEAR];\n\tif (sscanf(cp, \"%\"SCNdZIC\"%c\", &year, &xs) != 1) {\n\t\t/*\n\t\t** Leapin' Lizards!\n\t\t*/\n\t\terror(_(\"invalid leaping year\"));\n\t\treturn -1;\n\t}\n\tif (!expire_line) {\n\t    if (!leapseen || leapmaxyear < year)\n\t\tleapmaxyear = year;\n\t    if (!leapseen || leapminyear > year)\n\t\tleapminyear = year;\n\t    leapseen = true;\n\t}\n\tj = EPOCH_YEAR;\n\twhile (j != year) {\n\t\tif (year > j) {\n\t\t\ti = len_years[isleap(j)];\n\t\t\t++j;\n\t\t} else {\n\t\t\t--j;\n\t\t\ti = -len_years[isleap(j)];\n\t\t}\n\t\tdayoff = oadd(dayoff, i);\n\t}\n\tif ((lp = byword(fields[LP_MONTH], mon_names)) == NULL) {\n\t\terror(_(\"invalid month name\"));\n\t\treturn -1;\n\t}\n\tmonth = lp->l_value;\n\tj = TM_JANUARY;\n\twhile (j != month) {\n\t\ti = len_months[isleap(year)][j];\n\t\tdayoff = oadd(dayoff, i);\n\t\t++j;\n\t}\n\tcp = fields[LP_DAY];\n\tif (sscanf(cp, \"%d%c\", &day, &xs) != 1 ||\n\t\tday <= 0 || day > len_months[isleap(year)][month]) {\n\t\t\terror(_(\"invalid day of month\"));\n\t\t\treturn -1;\n\t}\n\tdayoff = oadd(dayoff, day - 1);\n\tif (dayoff < min_time / SECSPERDAY) {\n\t\terror(_(\"time too small\"));\n\t\treturn -1;\n\t}\n\tif (dayoff > max_time / SECSPERDAY) {\n\t\terror(_(\"time too large\"));\n\t\treturn -1;\n\t}\n\tt = dayoff * SECSPERDAY;\n\ttod = gethms(fields[LP_TIME], _(\"invalid time of day\"));\n\tt = tadd(t, tod);\n\tif (t < 0)\n\t  error(_(\"leap second precedes Epoch\"));\n\treturn t;\n}\n\nstatic void\ninleap(char **fields, int nfields)\n{\n  if (nfields != LEAP_FIELDS)\n    error(_(\"wrong number of fields on Leap line\"));\n  else {\n    zic_t t = getleapdatetime(fields, false);\n    if (0 <= t) {\n      struct lookup const *lp = byword(fields[LP_ROLL], leap_types);\n      if (!lp)\n\terror(_(\"invalid Rolling/Stationary field on Leap line\"));\n      else {\n\tint correction = 0;\n\tif (!fields[LP_CORR][0]) /* infile() turns \"-\" into \"\".  */\n\t  correction = -1;\n\telse if (strcmp(fields[LP_CORR], \"+\") == 0)\n\t  correction = 1;\n\telse\n\t  error(_(\"invalid CORRECTION field on Leap line\"));\n\tif (correction)\n\t  leapadd(t, correction, lp->l_value);\n      }\n    }\n  }\n}\n\nstatic void\ninexpires(char **fields, int nfields)\n{\n  if (nfields != EXPIRES_FIELDS)\n    error(_(\"wrong number of fields on Expires line\"));\n  else if (0 <= leapexpires)\n    error(_(\"multiple Expires lines\"));\n  else\n    leapexpires = getleapdatetime(fields, true);\n}\n\nstatic void\ninlink(char **fields, int nfields)\n{\n\tstruct link\tl;\n\n\tif (nfields != LINK_FIELDS) {\n\t\terror(_(\"wrong number of fields on Link line\"));\n\t\treturn;\n\t}\n\tif (*fields[LF_TARGET] == '\\0') {\n\t\terror(_(\"blank TARGET field on Link line\"));\n\t\treturn;\n\t}\n\tif (! namecheck(fields[LF_LINKNAME]))\n\t  return;\n\tl.l_filenum = filenum;\n\tl.l_linenum = linenum;\n\tl.l_target = xstrdup(fields[LF_TARGET]);\n\tl.l_linkname = xstrdup(fields[LF_LINKNAME]);\n\tlinks = growalloc(links, sizeof *links, nlinks, &nlinks_alloc);\n\tlinks[nlinks++] = l;\n}\n\nstatic bool\nrulesub(struct rule *rp, const char *loyearp, const char *hiyearp,\n\tconst char *typep, const char *monthp, const char *dayp,\n\tconst char *timep)\n{\n\tregister const struct lookup *\tlp;\n\tregister const char *\t\tcp;\n\tregister char *\t\t\tdp;\n\tregister char *\t\t\tep;\n\tchar xs;\n\n\tif ((lp = byword(monthp, mon_names)) == NULL) {\n\t\terror(_(\"invalid month name\"));\n\t\treturn false;\n\t}\n\trp->r_month = lp->l_value;\n\trp->r_todisstd = false;\n\trp->r_todisut = false;\n\tdp = xstrdup(timep);\n\tif (*dp != '\\0') {\n\t\tep = dp + strlen(dp) - 1;\n\t\tswitch (lowerit(*ep)) {\n\t\t\tcase 's':\t/* Standard */\n\t\t\t\trp->r_todisstd = true;\n\t\t\t\trp->r_todisut = false;\n\t\t\t\t*ep = '\\0';\n\t\t\t\tbreak;\n\t\t\tcase 'w':\t/* Wall */\n\t\t\t\trp->r_todisstd = false;\n\t\t\t\trp->r_todisut = false;\n\t\t\t\t*ep = '\\0';\n\t\t\t\tbreak;\n\t\t\tcase 'g':\t/* Greenwich */\n\t\t\tcase 'u':\t/* Universal */\n\t\t\tcase 'z':\t/* Zulu */\n\t\t\t\trp->r_todisstd = true;\n\t\t\t\trp->r_todisut = true;\n\t\t\t\t*ep = '\\0';\n\t\t\t\tbreak;\n\t\t}\n\t}\n\trp->r_tod = gethms(dp, _(\"invalid time of day\"));\n\tfree(dp);\n\t/*\n\t** Year work.\n\t*/\n\tcp = loyearp;\n\tlp = byword(cp, begin_years);\n\tif (lp) switch (lp->l_value) {\n\t\tcase YR_MINIMUM:\n\t\t\twarning(_(\"FROM year \\\"%s\\\" is obsolete;\"\n\t\t\t\t  \" treated as %d\"),\n\t\t\t\tcp, YEAR_32BIT_MIN - 1);\n\t\t\trp->r_loyear = YEAR_32BIT_MIN - 1;\n\t\t\tbreak;\n\t\tdefault: unreachable();\n\t} else if (sscanf(cp, \"%\"SCNdZIC\"%c\", &rp->r_loyear, &xs) != 1) {\n\t\terror(_(\"invalid starting year\"));\n\t\treturn false;\n\t}\n\tcp = hiyearp;\n\tlp = byword(cp, end_years);\n\trp->r_hiwasnum = lp == NULL;\n\tif (!rp->r_hiwasnum) switch (lp->l_value) {\n\t\tcase YR_MAXIMUM:\n\t\t\trp->r_hiyear = ZIC_MAX;\n\t\t\tbreak;\n\t\tcase YR_ONLY:\n\t\t\trp->r_hiyear = rp->r_loyear;\n\t\t\tbreak;\n\t\tdefault: unreachable();\n\t} else if (sscanf(cp, \"%\"SCNdZIC\"%c\", &rp->r_hiyear, &xs) != 1) {\n\t\terror(_(\"invalid ending year\"));\n\t\treturn false;\n\t}\n\tif (rp->r_loyear > rp->r_hiyear) {\n\t\terror(_(\"starting year greater than ending year\"));\n\t\treturn false;\n\t}\n\tif (*typep != '\\0') {\n\t\terror(_(\"year type \\\"%s\\\" is unsupported; use \\\"-\\\" instead\"),\n\t\t\ttypep);\n\t\treturn false;\n\t}\n\t/*\n\t** Day work.\n\t** Accept things such as:\n\t**\t1\n\t**\tlastSunday\n\t**\tlast-Sunday (undocumented; warn about this)\n\t**\tSun<=20\n\t**\tSun>=7\n\t*/\n\tdp = xstrdup(dayp);\n\tif ((lp = byword(dp, lasts)) != NULL) {\n\t\trp->r_dycode = DC_DOWLEQ;\n\t\trp->r_wday = lp->l_value;\n\t\trp->r_dayofmonth = len_months[1][rp->r_month];\n\t} else {\n\t\tep = strchr(dp, '<');\n\t\tif (ep)\n\t\t    rp->r_dycode = DC_DOWLEQ;\n\t\telse {\n\t\t    ep = strchr(dp, '>');\n\t\t    if (ep)\n\t\t\trp->r_dycode = DC_DOWGEQ;\n\t\t    else {\n\t\t\tep = dp;\n\t\t\trp->r_dycode = DC_DOM;\n\t\t    }\n\t\t}\n\t\tif (rp->r_dycode != DC_DOM) {\n\t\t\t*ep++ = 0;\n\t\t\tif (*ep++ != '=') {\n\t\t\t\terror(_(\"invalid day of month\"));\n\t\t\t\tfree(dp);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tif ((lp = byword(dp, wday_names)) == NULL) {\n\t\t\t\terror(_(\"invalid weekday name\"));\n\t\t\t\tfree(dp);\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\trp->r_wday = lp->l_value;\n\t\t}\n\t\tif (sscanf(ep, \"%d%c\", &rp->r_dayofmonth, &xs) != 1 ||\n\t\t\trp->r_dayofmonth <= 0 ||\n\t\t\t(rp->r_dayofmonth > len_months[1][rp->r_month])) {\n\t\t\t\terror(_(\"invalid day of month\"));\n\t\t\t\tfree(dp);\n\t\t\t\treturn false;\n\t\t}\n\t}\n\tfree(dp);\n\treturn true;\n}\n\nstatic void\nconvert(uint_fast32_t val, char *buf)\n{\n\tregister int\ti;\n\tregister int\tshift;\n\tunsigned char *const b = (unsigned char *) buf;\n\n\tfor (i = 0, shift = 24; i < 4; ++i, shift -= 8)\n\t  b[i] = (val >> shift) & 0xff;\n}\n\nstatic void\nconvert64(uint_fast64_t val, char *buf)\n{\n\tregister int\ti;\n\tregister int\tshift;\n\tunsigned char *const b = (unsigned char *) buf;\n\n\tfor (i = 0, shift = 56; i < 8; ++i, shift -= 8)\n\t  b[i] = (val >> shift) & 0xff;\n}\n\nstatic void\nputtzcode(zic_t val, FILE *fp)\n{\n\tchar\tbuf[4];\n\n\tconvert(val, buf);\n\tfwrite(buf, sizeof buf, 1, fp);\n}\n\nstatic void\nputtzcodepass(zic_t val, FILE *fp, int pass)\n{\n  if (pass == 1)\n    puttzcode(val, fp);\n  else {\n\tchar\tbuf[8];\n\n\tconvert64(val, buf);\n\tfwrite(buf, sizeof buf, 1, fp);\n  }\n}\n\nstatic int\natcomp(const void *avp, const void *bvp)\n{\n  struct attype const *ap = avp, *bp = bvp;\n  zic_t a = ap->at, b = bp->at;\n  return a < b ? -1 : a > b;\n}\n\nstruct timerange {\n  int defaulttype;\n  ptrdiff_t base, count;\n  int leapbase, leapcount;\n  bool leapexpiry;\n};\n\nstatic struct timerange\nlimitrange(struct timerange r, zic_t lo, zic_t hi,\n\t   zic_t const *ats, unsigned char const *types)\n{\n  /* Omit ordinary transitions < LO.  */\n  while (0 < r.count && ats[r.base] < lo) {\n    r.defaulttype = types[r.base];\n    r.count--;\n    r.base++;\n  }\n\n  /* Omit as many initial leap seconds as possible, such that the\n     first leap second in the truncated list is <= LO, and is a\n     positive leap second if and only if it has a positive correction.\n     This supports common TZif readers that assume that the first leap\n     second is positive if and only if its correction is positive.  */\n  while (1 < r.leapcount && trans[r.leapbase + 1] <= lo) {\n    r.leapcount--;\n    r.leapbase++;\n  }\n  while (0 < r.leapbase\n\t && ((corr[r.leapbase - 1] < corr[r.leapbase])\n\t     != (0 < corr[r.leapbase]))) {\n    r.leapcount++;\n    r.leapbase--;\n  }\n\n\n  /* Omit ordinary and leap second transitions greater than HI + 1.  */\n  if (hi < max_time) {\n    while (0 < r.count && hi + 1 < ats[r.base + r.count - 1])\n      r.count--;\n    while (0 < r.leapcount && hi + 1 < trans[r.leapbase + r.leapcount - 1])\n      r.leapcount--;\n  }\n\n  /* Determine whether to append an expiration to the leap second table.  */\n  r.leapexpiry = 0 <= leapexpires && leapexpires - 1 <= hi;\n\n  return r;\n}\n\nstatic void\nwritezone(const char *const name, const char *const string, char version,\n\t  int defaulttype)\n{\n\tregister FILE *\t\t\tfp;\n\tregister ptrdiff_t\t\ti, j;\n\tregister int\t\t\tpass;\n\tchar *tempname = NULL;\n\tchar const *outname = name;\n\n\t/* Allocate the ATS and TYPES arrays via a single malloc,\n\t   as this is a bit faster.  Do not malloc(0) if !timecnt,\n\t   as that might return NULL even on success.  */\n\tzic_t *ats = xmalloc(align_to(size_product(timecnt + !timecnt,\n\t\t\t\t\t\t   sizeof *ats + 1),\n\t\t\t\t      alignof(zic_t)));\n\tvoid *typesptr = ats + timecnt;\n\tunsigned char *types = typesptr;\n\tstruct timerange rangeall = {0}, range32, range64;\n\n\t/*\n\t** Sort.\n\t*/\n\tif (timecnt > 1)\n\t\tqsort(attypes, timecnt, sizeof *attypes, atcomp);\n\t/*\n\t** Optimize.\n\t*/\n\t{\n\t\tptrdiff_t fromi, toi;\n\n\t\ttoi = 0;\n\t\tfromi = 0;\n\t\tfor ( ; fromi < timecnt; ++fromi) {\n\t\t\tif (toi != 0\n\t\t\t    && ((attypes[fromi].at\n\t\t\t\t + utoffs[attypes[toi - 1].type])\n\t\t\t\t<= (attypes[toi - 1].at\n\t\t\t\t    + utoffs[toi == 1 ? 0\n\t\t\t\t\t     : attypes[toi - 2].type]))) {\n\t\t\t\t\tattypes[toi - 1].type =\n\t\t\t\t\t\tattypes[fromi].type;\n\t\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif (toi == 0\n\t\t\t    || attypes[fromi].dontmerge\n\t\t\t    || (utoffs[attypes[toi - 1].type]\n\t\t\t\t!= utoffs[attypes[fromi].type])\n\t\t\t    || (isdsts[attypes[toi - 1].type]\n\t\t\t\t!= isdsts[attypes[fromi].type])\n\t\t\t    || (desigidx[attypes[toi - 1].type]\n\t\t\t\t!= desigidx[attypes[fromi].type]))\n\t\t\t\t\tattypes[toi++] = attypes[fromi];\n\t\t}\n\t\ttimecnt = toi;\n\t}\n\n\tif (noise && timecnt > 1200) {\n\t  if (timecnt > TZ_MAX_TIMES)\n\t\twarning(_(\"reference clients mishandle\"\n\t\t\t  \" more than %d transition times\"),\n\t\t\tTZ_MAX_TIMES);\n\t  else\n\t\twarning(_(\"pre-2014 clients may mishandle\"\n\t\t\t  \" more than 1200 transition times\"));\n\t}\n\t/*\n\t** Transfer.\n\t*/\n\tfor (i = 0; i < timecnt; ++i) {\n\t\tats[i] = attypes[i].at;\n\t\ttypes[i] = attypes[i].type;\n\t}\n\n\t/*\n\t** Correct for leap seconds.\n\t*/\n\tfor (i = 0; i < timecnt; ++i) {\n\t\tj = leapcnt;\n\t\twhile (--j >= 0)\n\t\t\tif (ats[i] > trans[j] - corr[j]) {\n\t\t\t\tats[i] = tadd(ats[i], corr[j]);\n\t\t\t\tbreak;\n\t\t\t}\n\t}\n\n\trangeall.defaulttype = defaulttype;\n\trangeall.count = timecnt;\n\trangeall.leapcount = leapcnt;\n\trange64 = limitrange(rangeall, lo_time,\n\t\t\t     max(hi_time,\n\t\t\t\t redundant_time - (ZIC_MIN < redundant_time)),\n\t\t\t     ats, types);\n\trange32 = limitrange(range64, ZIC32_MIN, ZIC32_MAX, ats, types);\n\n\t/* TZif version 4 is needed if a no-op transition is appended to\n\t   indicate the expiration of the leap second table, or if the first\n\t   leap second transition is not to a +1 or -1 correction.  */\n\tfor (pass = 1; pass <= 2; pass++) {\n\t  struct timerange const *r = pass == 1 ? &range32 : &range64;\n\t  if (pass == 1 && !want_bloat())\n\t    continue;\n\t  if (r->leapexpiry) {\n\t    if (noise)\n\t      warning(_(\"%s: pre-2021b clients may mishandle\"\n\t\t\t\" leap second expiry\"),\n\t\t      name);\n\t    version = '4';\n\t  }\n\t  if (0 < r->leapcount\n\t      && corr[r->leapbase] != 1 && corr[r->leapbase] != -1) {\n\t    if (noise)\n\t      warning(_(\"%s: pre-2021b clients may mishandle\"\n\t\t\t\" leap second table truncation\"),\n\t\t      name);\n\t    version = '4';\n\t  }\n\t  if (version == '4')\n\t    break;\n\t}\n\n\tfp = open_outfile(&outname, &tempname);\n\n\tfor (pass = 1; pass <= 2; ++pass) {\n\t\tregister ptrdiff_t thistimei, thistimecnt, thistimelim;\n\t\tregister int\tthisleapi, thisleapcnt, thisleaplim;\n\t\tstruct tzhead tzh;\n\t\tint pretranstype = -1, thisdefaulttype;\n\t\tbool locut, hicut, thisleapexpiry;\n\t\tzic_t lo, thismin, thismax;\n\t\tint old0;\n\t\tchar\t\tomittype[TZ_MAX_TYPES];\n\t\tint\t\ttypemap[TZ_MAX_TYPES];\n\t\tint\t\tthistypecnt, stdcnt, utcnt;\n\t\tchar\t\tthischars[TZ_MAX_CHARS];\n\t\tint\t\tthischarcnt;\n\t\tbool\t\ttoomanytimes;\n\t\tint\t\tindmap[TZ_MAX_CHARS];\n\n\t\tif (pass == 1) {\n\t\t\tthisdefaulttype = range32.defaulttype;\n\t\t\tthistimei = range32.base;\n\t\t\tthistimecnt = range32.count;\n\t\t\ttoomanytimes = thistimecnt >> 31 >> 1 != 0;\n\t\t\tthisleapi = range32.leapbase;\n\t\t\tthisleapcnt = range32.leapcount;\n\t\t\tthisleapexpiry = range32.leapexpiry;\n\t\t\tthismin = ZIC32_MIN;\n\t\t\tthismax = ZIC32_MAX;\n\t\t} else {\n\t\t\tthisdefaulttype = range64.defaulttype;\n\t\t\tthistimei = range64.base;\n\t\t\tthistimecnt = range64.count;\n\t\t\ttoomanytimes = thistimecnt >> 31 >> 31 >> 2 != 0;\n\t\t\tthisleapi = range64.leapbase;\n\t\t\tthisleapcnt = range64.leapcount;\n\t\t\tthisleapexpiry = range64.leapexpiry;\n\t\t\tthismin = min_time;\n\t\t\tthismax = max_time;\n\t\t}\n\t\tif (toomanytimes)\n\t\t  error(_(\"too many transition times\"));\n\n\t\tlocut = thismin < lo_time && lo_time <= thismax;\n\t\thicut = thismin <= hi_time && hi_time < thismax;\n\t\tthistimelim = thistimei + thistimecnt;\n\t\tmemset(omittype, true, typecnt);\n\n\t\t/* Determine whether to output a transition before the first\n\t\t   transition in range.  This is needed when the output is\n\t\t   truncated at the start, and is also useful when catering to\n\t\t   buggy 32-bit clients that do not use time type 0 for\n\t\t   timestamps before the first transition.  */\n\t\tif ((locut || (pass == 1 && thistimei))\n\t\t    && ! (thistimecnt && ats[thistimei] == lo_time)) {\n\t\t  pretranstype = thisdefaulttype;\n\t\t  omittype[pretranstype] = false;\n\t\t}\n\n\t\t/* Arguably the default time type in the 32-bit data\n\t\t   should be range32.defaulttype, which is suited for\n\t\t   timestamps just before ZIC32_MIN.  However, zic\n\t\t   traditionally used the time type of the indefinite\n\t\t   past instead.  Internet RFC 8532 says readers should\n\t\t   ignore 32-bit data, so this discrepancy matters only\n\t\t   to obsolete readers where the traditional type might\n\t\t   be more appropriate even if it's \"wrong\".  So, use\n\t\t   the historical zic value, unless -r specifies a low\n\t\t   cutoff that excludes some 32-bit timestamps.  */\n\t\tif (pass == 1 && lo_time <= thismin)\n\t\t  thisdefaulttype = range64.defaulttype;\n\n\t\tif (locut)\n\t\t  thisdefaulttype = unspecifiedtype;\n\t\tomittype[thisdefaulttype] = false;\n\t\tfor (i = thistimei; i < thistimelim; i++)\n\t\t  omittype[types[i]] = false;\n\t\tif (hicut)\n\t\t  omittype[unspecifiedtype] = false;\n\n\t\t/* Reorder types to make THISDEFAULTTYPE type 0.\n\t\t   Use TYPEMAP to swap OLD0 and THISDEFAULTTYPE so that\n\t\t   THISDEFAULTTYPE appears as type 0 in the output instead\n\t\t   of OLD0.  TYPEMAP also omits unused types.  */\n\t\told0 = strlen(omittype);\n\n#ifndef LEAVE_SOME_PRE_2011_SYSTEMS_IN_THE_LURCH\n\t\t/*\n\t\t** For some pre-2011 systems: if the last-to-be-written\n\t\t** standard (or daylight) type has an offset different from the\n\t\t** most recently used offset,\n\t\t** append an (unused) copy of the most recently used type\n\t\t** (to help get global \"altzone\" and \"timezone\" variables\n\t\t** set correctly).\n\t\t*/\n\t\tif (want_bloat()) {\n\t\t\tregister int\tmrudst, mrustd, hidst, histd, type;\n\n\t\t\thidst = histd = mrudst = mrustd = -1;\n\t\t\tif (0 <= pretranstype) {\n\t\t\t  if (isdsts[pretranstype])\n\t\t\t    mrudst = pretranstype;\n\t\t\t  else\n\t\t\t    mrustd = pretranstype;\n\t\t\t}\n\t\t\tfor (i = thistimei; i < thistimelim; i++)\n\t\t\t\tif (isdsts[types[i]])\n\t\t\t\t\tmrudst = types[i];\n\t\t\t\telse\tmrustd = types[i];\n\t\t\tfor (i = old0; i < typecnt; i++) {\n\t\t\t  int h = (i == old0 ? thisdefaulttype\n\t\t\t\t   : i == thisdefaulttype ? old0 : i);\n\t\t\t  if (!omittype[h]) {\n\t\t\t    if (isdsts[h])\n\t\t\t      hidst = i;\n\t\t\t    else\n\t\t\t      histd = i;\n\t\t\t  }\n\t\t\t}\n\t\t\tif (hidst >= 0 && mrudst >= 0 && hidst != mrudst &&\n\t\t\t\tutoffs[hidst] != utoffs[mrudst]) {\n\t\t\t\t\tisdsts[mrudst] = -1;\n\t\t\t\t\ttype = addtype(utoffs[mrudst],\n\t\t\t\t\t\t&chars[desigidx[mrudst]],\n\t\t\t\t\t\ttrue,\n\t\t\t\t\t\tttisstds[mrudst],\n\t\t\t\t\t\tttisuts[mrudst]);\n\t\t\t\t\tisdsts[mrudst] = 1;\n\t\t\t\t\tomittype[type] = false;\n\t\t\t}\n\t\t\tif (histd >= 0 && mrustd >= 0 && histd != mrustd &&\n\t\t\t\tutoffs[histd] != utoffs[mrustd]) {\n\t\t\t\t\tisdsts[mrustd] = -1;\n\t\t\t\t\ttype = addtype(utoffs[mrustd],\n\t\t\t\t\t\t&chars[desigidx[mrustd]],\n\t\t\t\t\t\tfalse,\n\t\t\t\t\t\tttisstds[mrustd],\n\t\t\t\t\t\tttisuts[mrustd]);\n\t\t\t\t\tisdsts[mrustd] = 0;\n\t\t\t\t\tomittype[type] = false;\n\t\t\t}\n\t\t}\n#endif /* !defined LEAVE_SOME_PRE_2011_SYSTEMS_IN_THE_LURCH */\n\t\tthistypecnt = 0;\n\t\tfor (i = old0; i < typecnt; i++)\n\t\t  if (!omittype[i])\n\t\t    typemap[i == old0 ? thisdefaulttype\n\t\t\t    : i == thisdefaulttype ? old0 : i]\n\t\t      = thistypecnt++;\n\n\t\tfor (i = 0; i < sizeof indmap / sizeof indmap[0]; ++i)\n\t\t\tindmap[i] = -1;\n\t\tthischarcnt = stdcnt = utcnt = 0;\n\t\tfor (i = old0; i < typecnt; i++) {\n\t\t\tregister char *\tthisabbr;\n\n\t\t\tif (omittype[i])\n\t\t\t\tcontinue;\n\t\t\tif (ttisstds[i])\n\t\t\t  stdcnt = thistypecnt;\n\t\t\tif (ttisuts[i])\n\t\t\t  utcnt = thistypecnt;\n\t\t\tif (indmap[desigidx[i]] >= 0)\n\t\t\t\tcontinue;\n\t\t\tthisabbr = &chars[desigidx[i]];\n\t\t\tfor (j = 0; j < thischarcnt; ++j)\n\t\t\t\tif (strcmp(&thischars[j], thisabbr) == 0)\n\t\t\t\t\tbreak;\n\t\t\tif (j == thischarcnt) {\n\t\t\t\tstrcpy(&thischars[thischarcnt], thisabbr);\n\t\t\t\tthischarcnt += strlen(thisabbr) + 1;\n\t\t\t}\n\t\t\tindmap[desigidx[i]] = j;\n\t\t}\n\t\tif (pass == 1 && !want_bloat()) {\n\t\t  hicut = thisleapexpiry = false;\n\t\t  pretranstype = -1;\n\t\t  thistimecnt = thisleapcnt = 0;\n\t\t  thistypecnt = thischarcnt = 1;\n\t\t}\n#define DO(field)\tfwrite(tzh.field, sizeof tzh.field, 1, fp)\n\t\tmemset(&tzh, 0, sizeof tzh);\n\t\tmemcpy(tzh.tzh_magic, TZ_MAGIC, sizeof tzh.tzh_magic);\n\t\ttzh.tzh_version[0] = version;\n\t\tconvert(utcnt, tzh.tzh_ttisutcnt);\n\t\tconvert(stdcnt, tzh.tzh_ttisstdcnt);\n\t\tconvert(thisleapcnt + thisleapexpiry, tzh.tzh_leapcnt);\n\t\tconvert((0 <= pretranstype) + thistimecnt + hicut,\n\t\t\ttzh.tzh_timecnt);\n\t\tconvert(thistypecnt, tzh.tzh_typecnt);\n\t\tconvert(thischarcnt, tzh.tzh_charcnt);\n\t\tDO(tzh_magic);\n\t\tDO(tzh_version);\n\t\tDO(tzh_reserved);\n\t\tDO(tzh_ttisutcnt);\n\t\tDO(tzh_ttisstdcnt);\n\t\tDO(tzh_leapcnt);\n\t\tDO(tzh_timecnt);\n\t\tDO(tzh_typecnt);\n\t\tDO(tzh_charcnt);\n#undef DO\n\t\tif (pass == 1 && !want_bloat()) {\n\t\t  /* Output a minimal data block with just one time type.  */\n\t\t  puttzcode(0, fp);\t/* utoff */\n\t\t  putc(0, fp);\t\t/* dst */\n\t\t  putc(0, fp);\t\t/* index of abbreviation */\n\t\t  putc(0, fp);\t\t/* empty-string abbreviation */\n\t\t  continue;\n\t\t}\n\n\t\t/* Output a LO_TIME transition if needed; see limitrange.\n\t\t   But do not go below the minimum representable value\n\t\t   for this pass.  */\n\t\tlo = pass == 1 && lo_time < ZIC32_MIN ? ZIC32_MIN : lo_time;\n\n\t\tif (0 <= pretranstype)\n\t\t  puttzcodepass(lo, fp, pass);\n\t\tfor (i = thistimei; i < thistimelim; ++i) {\n\t\t  puttzcodepass(ats[i], fp, pass);\n\t\t}\n\t\tif (hicut)\n\t\t  puttzcodepass(hi_time + 1, fp, pass);\n\t\tif (0 <= pretranstype)\n\t\t  putc(typemap[pretranstype], fp);\n\t\tfor (i = thistimei; i < thistimelim; i++)\n\t\t  putc(typemap[types[i]], fp);\n\t\tif (hicut)\n\t\t  putc(typemap[unspecifiedtype], fp);\n\n\t\tfor (i = old0; i < typecnt; i++) {\n\t\t  int h = (i == old0 ? thisdefaulttype\n\t\t\t   : i == thisdefaulttype ? old0 : i);\n\t\t  if (!omittype[h]) {\n\t\t    puttzcode(utoffs[h], fp);\n\t\t    putc(isdsts[h], fp);\n\t\t    putc(indmap[desigidx[h]], fp);\n\t\t  }\n\t\t}\n\t\tif (thischarcnt != 0)\n\t\t\tfwrite(thischars, sizeof thischars[0],\n\t\t\t\t      thischarcnt, fp);\n\t\tthisleaplim = thisleapi + thisleapcnt;\n\t\tfor (i = thisleapi; i < thisleaplim; ++i) {\n\t\t\tregister zic_t\ttodo;\n\n\t\t\tif (roll[i]) {\n\t\t\t\tif (timecnt == 0 || trans[i] < ats[0]) {\n\t\t\t\t\tj = 0;\n\t\t\t\t\twhile (isdsts[j])\n\t\t\t\t\t\tif (++j >= typecnt) {\n\t\t\t\t\t\t\tj = 0;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tj = 1;\n\t\t\t\t\twhile (j < timecnt &&\n\t\t\t\t\t\ttrans[i] >= ats[j])\n\t\t\t\t\t\t\t++j;\n\t\t\t\t\tj = types[j - 1];\n\t\t\t\t}\n\t\t\t\ttodo = tadd(trans[i], -utoffs[j]);\n\t\t\t} else\ttodo = trans[i];\n\t\t\tputtzcodepass(todo, fp, pass);\n\t\t\tputtzcode(corr[i], fp);\n\t\t}\n\t\tif (thisleapexpiry) {\n\t\t  /* Append a no-op leap correction indicating when the leap\n\t\t     second table expires.  Although this does not conform to\n\t\t     Internet RFC 9636, most clients seem to accept this and\n\t\t     the plan is to amend the RFC to allow this in version 4\n\t\t     TZif files.  */\n\t\t  puttzcodepass(leapexpires, fp, pass);\n\t\t  puttzcode(thisleaplim ? corr[thisleaplim - 1] : 0, fp);\n\t\t}\n\t\tif (stdcnt != 0)\n\t\t  for (i = old0; i < typecnt; i++)\n\t\t\tif (!omittype[i])\n\t\t\t\tputc(ttisstds[i], fp);\n\t\tif (utcnt != 0)\n\t\t  for (i = old0; i < typecnt; i++)\n\t\t\tif (!omittype[i])\n\t\t\t\tputc(ttisuts[i], fp);\n\t}\n\tfprintf(fp, \"\\n%s\\n\", string);\n\tclose_file(fp, directory, name, tempname);\n\trename_dest(tempname, name);\n\tfree(ats);\n}\n\nstatic char const *\nabbroffset(char *buf, zic_t offset)\n{\n  char sign = '+';\n  int seconds, minutes;\n\n  if (offset < 0) {\n    offset = -offset;\n    sign = '-';\n  }\n\n  seconds = offset % SECSPERMIN;\n  offset /= SECSPERMIN;\n  minutes = offset % MINSPERHOUR;\n  offset /= MINSPERHOUR;\n  if (100 <= offset) {\n    error(_(\"%%z UT offset magnitude exceeds 99:59:59\"));\n    return \"%z\";\n  } else {\n    char *p = buf;\n    *p++ = sign;\n    *p++ = '0' + offset / 10;\n    *p++ = '0' + offset % 10;\n    if (minutes | seconds) {\n      *p++ = '0' + minutes / 10;\n      *p++ = '0' + minutes % 10;\n      if (seconds) {\n\t*p++ = '0' + seconds / 10;\n\t*p++ = '0' + seconds % 10;\n      }\n    }\n    *p = '\\0';\n    return buf;\n  }\n}\n\nstatic char const disable_percent_s[] = \"\";\n\nstatic ptrdiff_t\ndoabbr(char *abbr, struct zone const *zp, char const *letters,\n       bool isdst, zic_t save, bool doquotes)\n{\n\tregister char *\tcp;\n\tregister char *\tslashp;\n\tptrdiff_t len;\n\tchar const *format = zp->z_format;\n\n\tslashp = strchr(format, '/');\n\tif (slashp == NULL) {\n\t  char letterbuf[PERCENT_Z_LEN_BOUND + 1];\n\t  if (zp->z_format_specifier == 'z')\n\t    letters = abbroffset(letterbuf, zp->z_stdoff + save);\n\t  else if (!letters)\n\t    letters = \"%s\";\n\t  else if (letters == disable_percent_s)\n\t    return 0;\n\t  sprintf(abbr, format, letters);\n\t} else if (isdst) {\n\t\tstrcpy(abbr, slashp + 1);\n\t} else {\n\t\tmemcpy(abbr, format, slashp - format);\n\t\tabbr[slashp - format] = '\\0';\n\t}\n\tlen = strlen(abbr);\n\tif (!doquotes)\n\t\treturn len;\n\tfor (cp = abbr; is_alpha(*cp); cp++)\n\t\tcontinue;\n\tif (len > 0 && *cp == '\\0')\n\t\treturn len;\n\tabbr[len + 2] = '\\0';\n\tabbr[len + 1] = '>';\n\tmemmove(abbr + 1, abbr, len);\n\tabbr[0] = '<';\n\treturn len + 2;\n}\n\nstatic void\nupdateminmax(const zic_t x)\n{\n\tif (min_year > x)\n\t\tmin_year = x;\n\tif (max_year < x)\n\t\tmax_year = x;\n}\n\nstatic int\nstringoffset(char *result, zic_t offset)\n{\n\tregister int\thours;\n\tregister int\tminutes;\n\tregister int\tseconds;\n\tbool negative = offset < 0;\n\tint len = negative;\n\n\tif (negative) {\n\t\toffset = -offset;\n\t\tresult[0] = '-';\n\t}\n\tseconds = offset % SECSPERMIN;\n\toffset /= SECSPERMIN;\n\tminutes = offset % MINSPERHOUR;\n\toffset /= MINSPERHOUR;\n\thours = offset;\n\tif (hours >= HOURSPERDAY * DAYSPERWEEK) {\n\t\tresult[0] = '\\0';\n\t\treturn 0;\n\t}\n\tlen += sprintf(result + len, \"%d\", hours);\n\tif (minutes != 0 || seconds != 0) {\n\t\tlen += sprintf(result + len, \":%02d\", minutes);\n\t\tif (seconds != 0)\n\t\t\tlen += sprintf(result + len, \":%02d\", seconds);\n\t}\n\treturn len;\n}\n\nstatic int\nstringrule(char *result, struct rule *const rp, zic_t save, zic_t stdoff)\n{\n\tregister zic_t\ttod = rp->r_tod;\n\tregister int\tcompat = 0;\n\n\tif (rp->r_dycode == DC_DOM) {\n\t\tregister int\tmonth, total;\n\n\t\tif (rp->r_dayofmonth == 29 && rp->r_month == TM_FEBRUARY)\n\t\t\treturn -1;\n\t\ttotal = 0;\n\t\tfor (month = 0; month < rp->r_month; ++month)\n\t\t\ttotal += len_months[0][month];\n\t\t/* Omit the \"J\" in Jan and Feb, as that's shorter.  */\n\t\tif (rp->r_month <= 1)\n\t\t  result += sprintf(result, \"%d\", total + rp->r_dayofmonth - 1);\n\t\telse\n\t\t  result += sprintf(result, \"J%d\", total + rp->r_dayofmonth);\n\t} else {\n\t\tregister int\tweek;\n\t\tregister int\twday = rp->r_wday;\n\t\tregister int\twdayoff;\n\n\t\tif (rp->r_dycode == DC_DOWGEQ) {\n\t\t\twdayoff = (rp->r_dayofmonth - 1) % DAYSPERWEEK;\n\t\t\tif (wdayoff)\n\t\t\t\tcompat = 2013;\n\t\t\twday -= wdayoff;\n\t\t\ttod += wdayoff * SECSPERDAY;\n\t\t\tweek = 1 + (rp->r_dayofmonth - 1) / DAYSPERWEEK;\n\t\t} else if (rp->r_dycode == DC_DOWLEQ) {\n\t\t\tif (rp->r_dayofmonth == len_months[1][rp->r_month])\n\t\t\t\tweek = 5;\n\t\t\telse {\n\t\t\t\twdayoff = rp->r_dayofmonth % DAYSPERWEEK;\n\t\t\t\tif (wdayoff)\n\t\t\t\t\tcompat = 2013;\n\t\t\t\twday -= wdayoff;\n\t\t\t\ttod += wdayoff * SECSPERDAY;\n\t\t\t\tweek = rp->r_dayofmonth / DAYSPERWEEK;\n\t\t\t}\n\t\t} else\treturn -1;\t/* \"cannot happen\" */\n\t\tif (wday < 0)\n\t\t\twday += DAYSPERWEEK;\n\t\tresult += sprintf(result, \"M%d.%d.%d\",\n\t\t\t\t  rp->r_month + 1, week, wday);\n\t}\n\tif (rp->r_todisut)\n\t  tod += stdoff;\n\tif (rp->r_todisstd && !rp->r_isdst)\n\t  tod += save;\n\tif (tod != 2 * SECSPERMIN * MINSPERHOUR) {\n\t\t*result++ = '/';\n\t\tif (! stringoffset(result, tod))\n\t\t\treturn -1;\n\t\tif (tod < 0) {\n\t\t\tif (compat < 2013)\n\t\t\t\tcompat = 2013;\n\t\t} else if (SECSPERDAY <= tod) {\n\t\t\tif (compat < 1994)\n\t\t\t\tcompat = 1994;\n\t\t}\n\t}\n\treturn compat;\n}\n\nstatic int\nrule_cmp(struct rule const *a, struct rule const *b)\n{\n\tif (!a)\n\t\treturn -!!b;\n\tif (!b)\n\t\treturn 1;\n\tif (a->r_hiyear != b->r_hiyear)\n\t\treturn a->r_hiyear < b->r_hiyear ? -1 : 1;\n\tif (a->r_hiyear == ZIC_MAX)\n\t\treturn 0;\n\tif (a->r_month - b->r_month != 0)\n\t\treturn a->r_month - b->r_month;\n\treturn a->r_dayofmonth - b->r_dayofmonth;\n}\n\n/* Store into RESULT a proleptic TZ string that represent the future\n   predictions for the zone ZPFIRST with ZONECOUNT entries.  Return a\n   compatibility indicator (a TZDB release year) if successful, a\n   negative integer if no such TZ string exists.  */\nstatic int\nstringzone(char *result, struct zone const *zpfirst, ptrdiff_t zonecount)\n{\n\tregister const struct zone *\tzp;\n\tregister struct rule *\t\trp;\n\tregister struct rule *\t\tstdrp;\n\tregister struct rule *\t\tdstrp;\n\tregister ptrdiff_t\t\ti;\n\tregister int\t\t\tcompat = 0;\n\tregister int\t\t\tc;\n\tint\t\t\t\toffsetlen;\n\tstruct rule\t\t\tstdr, dstr;\n\tptrdiff_t len;\n\tint dstcmp;\n\tstruct rule *lastrp[2] = { NULL, NULL };\n\tstruct zone zstr[2];\n\tstruct zone const *stdzp;\n\tstruct zone const *dstzp;\n\n\tresult[0] = '\\0';\n\n\t/* Internet RFC 9636 section 6.1 says to use an empty TZ string if\n\t   future timestamps are truncated.  */\n\tif (hi_time < max_time)\n\t  return -1;\n\n\tzp = zpfirst + zonecount - 1;\n\tfor (i = 0; i < zp->z_nrules; ++i) {\n\t\tstruct rule **last;\n\t\tint cmp;\n\t\trp = &zp->z_rules[i];\n\t\tlast = &lastrp[rp->r_isdst];\n\t\tcmp = rule_cmp(*last, rp);\n\t\tif (cmp < 0)\n\t\t  *last = rp;\n\t\telse if (cmp == 0)\n\t\t  return -1;\n\t}\n\tstdrp = lastrp[false];\n\tdstrp = lastrp[true];\n\tdstcmp = zp->z_nrules ? rule_cmp(dstrp, stdrp) : zp->z_isdst ? 1 : -1;\n\tstdzp = dstzp = zp;\n\n\tif (dstcmp < 0) {\n\t  /* Standard time all year.  */\n\t  dstrp = NULL;\n\t} else if (0 < dstcmp) {\n\t  /* DST all year.  Use an abbreviation like\n\t     \"XXX3EDT4,0/0,J365/23\" for EDT (-04) all year.  */\n\t  zic_t save = dstrp ? dstrp->r_save : zp->z_save;\n\t  if (0 <= save)\n\t    {\n\t      /* Positive DST, the typical case for all-year DST.\n\t\t Fake a timezone with negative DST.  */\n\t      stdzp = &zstr[0];\n\t      dstzp = &zstr[1];\n\t      zstr[0].z_stdoff = zp->z_stdoff + 2 * save;\n\t      zstr[0].z_format = \"XXX\";  /* Any 3 letters will do.  */\n\t      zstr[0].z_format_specifier = 0;\n\t      zstr[1].z_stdoff = zstr[0].z_stdoff;\n\t      zstr[1].z_format = zp->z_format;\n\t      zstr[1].z_format_specifier = zp->z_format_specifier;\n\t    }\n\t  dstr.r_month = TM_JANUARY;\n\t  dstr.r_dycode = DC_DOM;\n\t  dstr.r_dayofmonth = 1;\n\t  dstr.r_tod = 0;\n\t  dstr.r_todisstd = dstr.r_todisut = false;\n\t  dstr.r_isdst = true;\n\t  dstr.r_save = save < 0 ? save : -save;\n\t  dstr.r_abbrvar = dstrp ? dstrp->r_abbrvar : NULL;\n\t  stdr.r_month = TM_DECEMBER;\n\t  stdr.r_dycode = DC_DOM;\n\t  stdr.r_dayofmonth = 31;\n\t  stdr.r_tod = SECSPERDAY + dstr.r_save;\n\t  stdr.r_todisstd = stdr.r_todisut = false;\n\t  stdr.r_isdst = false;\n\t  stdr.r_save = 0;\n\t  stdr.r_abbrvar = save < 0 && stdrp ? stdrp->r_abbrvar : NULL;\n\t  dstrp = &dstr;\n\t  stdrp = &stdr;\n\t}\n\tlen = doabbr(result, stdzp, stdrp ? stdrp->r_abbrvar : NULL,\n\t\t     false, 0, true);\n\toffsetlen = stringoffset(result + len, - stdzp->z_stdoff);\n\tif (! offsetlen) {\n\t\tresult[0] = '\\0';\n\t\treturn -1;\n\t}\n\tlen += offsetlen;\n\tif (dstrp == NULL)\n\t\treturn compat;\n\tlen += doabbr(result + len, dstzp, dstrp->r_abbrvar,\n\t\t      dstrp->r_isdst, dstrp->r_save, true);\n\tif (dstrp->r_save != SECSPERMIN * MINSPERHOUR) {\n\t  offsetlen = stringoffset(result + len,\n\t\t\t\t   - (dstzp->z_stdoff + dstrp->r_save));\n\t  if (! offsetlen) {\n\t    result[0] = '\\0';\n\t    return -1;\n\t  }\n\t  len += offsetlen;\n\t}\n\tresult[len++] = ',';\n\tc = stringrule(result + len, dstrp, dstrp->r_save, stdzp->z_stdoff);\n\tif (c < 0) {\n\t\tresult[0] = '\\0';\n\t\treturn -1;\n\t}\n\tif (compat < c)\n\t\tcompat = c;\n\tlen += strlen(result + len);\n\tresult[len++] = ',';\n\tc = stringrule(result + len, stdrp, dstrp->r_save, stdzp->z_stdoff);\n\tif (c < 0) {\n\t\tresult[0] = '\\0';\n\t\treturn -1;\n\t}\n\tif (compat < c)\n\t\tcompat = c;\n\treturn compat;\n}\n\nstatic void\noutzone(const struct zone *zpfirst, ptrdiff_t zonecount)\n{\n\tregister ptrdiff_t\t\ti, j;\n\tregister zic_t\t\t\tstarttime, untiltime;\n\tregister bool\t\t\tstartttisstd;\n\tregister bool\t\t\tstartttisut;\n\tregister char *\t\t\tstartbuf;\n\tregister char *\t\t\tab;\n\tregister char *\t\t\tenvvar;\n\tregister int\t\t\tmax_abbr_len;\n\tregister int\t\t\tmax_envvar_len;\n\tregister int\t\t\tcompat;\n\tregister bool\t\t\tdo_extend;\n\tregister char\t\t\tversion;\n\tzic_t nonTZlimtime = ZIC_MIN;\n\tint nonTZlimtype = -1;\n\tzic_t max_year0;\n\tint defaulttype = -1;\n\n\tcheck_for_signal();\n\n\t/* This cannot overflow; see FORMAT_LEN_GROWTH_BOUND.  */\n\tmax_abbr_len = 2 + max_format_len + max_abbrvar_len;\n\tmax_envvar_len = 2 * max_abbr_len + 5 * 9;\n\n\tstartbuf = xmalloc(max_abbr_len + 1);\n\tab = xmalloc(max_abbr_len + 1);\n\tenvvar = xmalloc(max_envvar_len + 1);\n\tINITIALIZE(untiltime);\n\tINITIALIZE(starttime);\n\t/*\n\t** Now. . .finally. . .generate some useful data!\n\t*/\n\ttimecnt = 0;\n\ttypecnt = 0;\n\tcharcnt = 0;\n\t/*\n\t** Thanks to Earl Chew\n\t** for noting the need to unconditionally initialize startttisstd.\n\t*/\n\tstartttisstd = false;\n\tstartttisut = false;\n\tmin_year = max_year = EPOCH_YEAR;\n\tif (leapseen) {\n\t\tupdateminmax(leapminyear);\n\t\tupdateminmax(leapmaxyear + (leapmaxyear < ZIC_MAX));\n\t}\n\tfor (i = 0; i < zonecount; ++i) {\n\t\tstruct zone const *zp = &zpfirst[i];\n\t\tif (i < zonecount - 1)\n\t\t\tupdateminmax(zp->z_untilrule.r_loyear);\n\t\tfor (j = 0; j < zp->z_nrules; ++j) {\n\t\t\tstruct rule *rp = &zp->z_rules[j];\n\t\t\tupdateminmax(rp->r_loyear);\n\t\t\tif (rp->r_hiwasnum)\n\t\t\t\tupdateminmax(rp->r_hiyear);\n\t\t}\n\t}\n\t/*\n\t** Generate lots of data if a rule can't cover all future times.\n\t*/\n\tcompat = stringzone(envvar, zpfirst, zonecount);\n\tversion = compat < 2013 ? '2' : '3';\n\tdo_extend = compat < 0;\n\tif (noise) {\n\t\tif (!*envvar)\n\t\t\twarning(\"%s %s\",\n\t\t\t\t_(\"no proleptic TZ string for zone\"),\n\t\t\t\tzpfirst->z_name);\n\t\telse if (compat != 0) {\n\t\t\t/* Circa-COMPAT clients, and earlier clients, might\n\t\t\t   not work for this zone when given dates before\n\t\t\t   1970 or after 2038.  */\n\t\t\twarning(_(\"%s: pre-%d clients may mishandle\"\n\t\t\t\t  \" distant timestamps\"),\n\t\t\t\tzpfirst->z_name, compat);\n\t\t}\n\t}\n\tif (do_extend) {\n\t\tif (min_year >= ZIC_MIN + years_of_observations)\n\t\t\tmin_year -= years_of_observations;\n\t\telse\tmin_year = ZIC_MIN;\n\t\tif (max_year <= ZIC_MAX - years_of_observations)\n\t\t\tmax_year += years_of_observations;\n\t\telse\tmax_year = ZIC_MAX;\n\t}\n\tmax_year = max(max_year, (redundant_time / (SECSPERDAY * DAYSPERNYEAR)\n\t\t\t\t  + EPOCH_YEAR + 1));\n\tmax_year0 = max_year;\n\tif (want_bloat()) {\n\t  /* For the benefit of older systems,\n\t     generate data from 1900 through 2038.  */\n\t  if (min_year > YEAR_32BIT_MIN - 1)\n\t\tmin_year = YEAR_32BIT_MIN - 1;\n\t  if (max_year < YEAR_32BIT_MAX)\n\t\tmax_year = YEAR_32BIT_MAX;\n\t}\n\n\tif (min_time < lo_time || hi_time < max_time)\n\t  unspecifiedtype = addtype(0, \"-00\", false, false, false);\n\n\tfor (i = 0; i < zonecount; ++i) {\n\t\t/*\n\t\t** A guess that may well be corrected later.\n\t\t*/\n\t\tzic_t save = 0;\n\t\tstruct zone const *zp = &zpfirst[i];\n\t\tbool usestart = i > 0 && (zp - 1)->z_untiltime > min_time;\n\t\tbool useuntil = i < (zonecount - 1);\n\t\tzic_t stdoff = zp->z_stdoff;\n\t\tzic_t startoff = stdoff;\n\t\tif (useuntil && zp->z_untiltime <= min_time)\n\t\t\tcontinue;\n\t\teat(zp->z_filenum, zp->z_linenum);\n\t\t*startbuf = '\\0';\n\t\tif (zp->z_nrules == 0) {\n\t\t\tint type;\n\t\t\tsave = zp->z_save;\n\t\t\tdoabbr(startbuf, zp, NULL, zp->z_isdst, save, false);\n\t\t\ttype = addtype(oadd(zp->z_stdoff, save),\n\t\t\t\tstartbuf, zp->z_isdst, startttisstd,\n\t\t\t\tstartttisut);\n\t\t\tif (usestart) {\n\t\t\t\taddtt(starttime, type);\n\t\t\t\tif (useuntil && nonTZlimtime < starttime) {\n\t\t\t\t  nonTZlimtime = starttime;\n\t\t\t\t  nonTZlimtype = type;\n\t\t\t\t}\n\t\t\t\tusestart = false;\n\t\t\t} else\n\t\t\t\tdefaulttype = type;\n\t\t} else {\n\t\t  zic_t year;\n\t\t  for (year = min_year; year <= max_year; ++year) {\n\t\t\tif (useuntil && year > zp->z_untilrule.r_hiyear)\n\t\t\t\tbreak;\n\t\t\t/*\n\t\t\t** Mark which rules to do in the current year.\n\t\t\t** For those to do, calculate rpytime(rp, year);\n\t\t\t** The former TYPE field was also considered here.\n\t\t\t*/\n\t\t\tfor (j = 0; j < zp->z_nrules; ++j) {\n\t\t\t\tzic_t one = 1;\n\t\t\t\tzic_t y2038_boundary = one << 31;\n\t\t\t\tstruct rule *rp = &zp->z_rules[j];\n\t\t\t\teats(zp->z_filenum, zp->z_linenum,\n\t\t\t\t     rp->r_filenum, rp->r_linenum);\n\t\t\t\trp->r_todo = year >= rp->r_loyear &&\n\t\t\t\t\t\tyear <= rp->r_hiyear;\n\t\t\t\tif (rp->r_todo) {\n\t\t\t\t\trp->r_temp = rpytime(rp, year);\n\t\t\t\t\trp->r_todo\n\t\t\t\t\t  = (rp->r_temp < y2038_boundary\n\t\t\t\t\t     || year <= max_year0);\n\t\t\t\t}\n\t\t\t}\n\t\t\tfor ( ; ; ) {\n\t\t\t\tregister ptrdiff_t k;\n\t\t\t\tregister zic_t\tjtime, ktime;\n\t\t\t\tregister zic_t\toffset;\n\t\t\t\tstruct rule *rp;\n\t\t\t\tint type;\n\n\t\t\t\tINITIALIZE(ktime);\n\t\t\t\tif (useuntil) {\n\t\t\t\t\t/*\n\t\t\t\t\t** Turn untiltime into UT\n\t\t\t\t\t** assuming the current stdoff and\n\t\t\t\t\t** save values.\n\t\t\t\t\t*/\n\t\t\t\t\tuntiltime = zp->z_untiltime;\n\t\t\t\t\tif (!zp->z_untilrule.r_todisut)\n\t\t\t\t\t\tuntiltime = tadd(untiltime,\n\t\t\t\t\t\t\t\t -stdoff);\n\t\t\t\t\tif (!zp->z_untilrule.r_todisstd)\n\t\t\t\t\t\tuntiltime = tadd(untiltime,\n\t\t\t\t\t\t\t\t -save);\n\t\t\t\t}\n\t\t\t\t/*\n\t\t\t\t** Find the rule (of those to do, if any)\n\t\t\t\t** that takes effect earliest in the year.\n\t\t\t\t*/\n\t\t\t\tk = -1;\n\t\t\t\tfor (j = 0; j < zp->z_nrules; ++j) {\n\t\t\t\t\tstruct rule *r = &zp->z_rules[j];\n\t\t\t\t\tif (!r->r_todo)\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\teats(zp->z_filenum, zp->z_linenum,\n\t\t\t\t\t     r->r_filenum, r->r_linenum);\n\t\t\t\t\toffset = r->r_todisut ? 0 : stdoff;\n\t\t\t\t\tif (!r->r_todisstd)\n\t\t\t\t\t\toffset = oadd(offset, save);\n\t\t\t\t\tjtime = r->r_temp;\n\t\t\t\t\tif (jtime == min_time ||\n\t\t\t\t\t\tjtime == max_time)\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\tjtime = tadd(jtime, -offset);\n\t\t\t\t\tif (k < 0 || jtime < ktime) {\n\t\t\t\t\t\tk = j;\n\t\t\t\t\t\tktime = jtime;\n\t\t\t\t\t} else if (jtime == ktime) {\n\t\t\t\t\t  char const *dup_rules_msg =\n\t\t\t\t\t    _(\"two rules for same instant\");\n\t\t\t\t\t  eats(zp->z_filenum, zp->z_linenum,\n\t\t\t\t\t       r->r_filenum, r->r_linenum);\n\t\t\t\t\t  warning(\"%s\", dup_rules_msg);\n\t\t\t\t\t  r = &zp->z_rules[k];\n\t\t\t\t\t  eats(zp->z_filenum, zp->z_linenum,\n\t\t\t\t\t       r->r_filenum, r->r_linenum);\n\t\t\t\t\t  error(\"%s\", dup_rules_msg);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (k < 0)\n\t\t\t\t\tbreak;\t/* go on to next year */\n\t\t\t\trp = &zp->z_rules[k];\n\t\t\t\trp->r_todo = false;\n\t\t\t\tif (useuntil && ktime >= untiltime) {\n\t\t\t\t\tif (!*startbuf\n\t\t\t\t\t    && (oadd(zp->z_stdoff, rp->r_save)\n\t\t\t\t\t\t== startoff))\n\t\t\t\t\t  doabbr(startbuf, zp, rp->r_abbrvar,\n\t\t\t\t\t\t rp->r_isdst, rp->r_save,\n\t\t\t\t\t\t false);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tsave = rp->r_save;\n\t\t\t\tif (usestart && ktime == starttime)\n\t\t\t\t\tusestart = false;\n\t\t\t\tif (usestart) {\n\t\t\t\t\tif (ktime < starttime) {\n\t\t\t\t\t\tstartoff = oadd(zp->z_stdoff,\n\t\t\t\t\t\t\t\tsave);\n\t\t\t\t\t\tdoabbr(startbuf, zp,\n\t\t\t\t\t\t\trp->r_abbrvar,\n\t\t\t\t\t\t\trp->r_isdst,\n\t\t\t\t\t\t\trp->r_save,\n\t\t\t\t\t\t\tfalse);\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tif (*startbuf == '\\0'\n\t\t\t\t\t    && startoff == oadd(zp->z_stdoff,\n\t\t\t\t\t\t\t\tsave)) {\n\t\t\t\t\t\t\tdoabbr(startbuf,\n\t\t\t\t\t\t\t\tzp,\n\t\t\t\t\t\t\t\trp->r_abbrvar,\n\t\t\t\t\t\t\t\trp->r_isdst,\n\t\t\t\t\t\t\t\trp->r_save,\n\t\t\t\t\t\t\t\tfalse);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\teats(zp->z_filenum, zp->z_linenum,\n\t\t\t\t     rp->r_filenum, rp->r_linenum);\n\t\t\t\tdoabbr(ab, zp, rp->r_abbrvar,\n\t\t\t\t       rp->r_isdst, rp->r_save, false);\n\t\t\t\toffset = oadd(zp->z_stdoff, rp->r_save);\n\t\t\t\ttype = addtype(offset, ab, rp->r_isdst,\n\t\t\t\t\trp->r_todisstd, rp->r_todisut);\n\t\t\t\tif (defaulttype < 0 && !rp->r_isdst)\n\t\t\t\t  defaulttype = type;\n\t\t\t\taddtt(ktime, type);\n\t\t\t\tif (nonTZlimtime < ktime\n\t\t\t\t    && (useuntil || rp->r_hiyear != ZIC_MAX)) {\n\t\t\t\t  nonTZlimtime = ktime;\n\t\t\t\t  nonTZlimtype = type;\n\t\t\t\t}\n\t\t\t}\n\t\t  }\n\t\t}\n\t\tif (usestart) {\n\t\t\tbool isdst = startoff != zp->z_stdoff;\n\t\t\tif (*startbuf == '\\0' && zp->z_format)\n\t\t\t  doabbr(startbuf, zp, disable_percent_s,\n\t\t\t\t isdst, save, false);\n\t\t\teat(zp->z_filenum, zp->z_linenum);\n\t\t\tif (*startbuf == '\\0')\n\t\t\t  error(_(\"can't determine time zone abbreviation\"\n\t\t\t\t  \" to use just after until time\"));\n\t\t\telse {\n\t\t\t  int type = addtype(startoff, startbuf, isdst,\n\t\t\t\t\t     startttisstd, startttisut);\n\t\t\t  if (defaulttype < 0 && !isdst)\n\t\t\t    defaulttype = type;\n\t\t\t  addtt(starttime, type);\n\t\t\t}\n\t\t}\n\t\t/*\n\t\t** Now we may get to set starttime for the next zone line.\n\t\t*/\n\t\tif (useuntil) {\n\t\t\tstartttisstd = zp->z_untilrule.r_todisstd;\n\t\t\tstartttisut = zp->z_untilrule.r_todisut;\n\t\t\tstarttime = zp->z_untiltime;\n\t\t\tif (!startttisstd)\n\t\t\t  starttime = tadd(starttime, -save);\n\t\t\tif (!startttisut)\n\t\t\t  starttime = tadd(starttime, -stdoff);\n\t\t}\n\t}\n\tif (defaulttype < 0)\n\t  defaulttype = 0;\n\tif (!do_extend && !want_bloat()) {\n\t  /* Keep trailing transitions that are no greater than this.  */\n\t  zic_t keep_at_max;\n\n\t  /* The earliest transition into a time governed by the TZ string.  */\n\t  zic_t TZstarttime = ZIC_MAX;\n\t  for (i = 0; i < timecnt; i++) {\n\t    zic_t at = attypes[i].at;\n\t    if (nonTZlimtime < at && at < TZstarttime)\n\t      TZstarttime = at;\n\t  }\n\t  if (TZstarttime == ZIC_MAX)\n\t    TZstarttime = nonTZlimtime;\n\n\t  /* Omit trailing transitions deducible from the TZ string,\n\t     and not needed for -r or -R.  */\n\t  keep_at_max = max(TZstarttime, redundant_time);\n\t  for (i = j = 0; i < timecnt; i++)\n\t    if (attypes[i].at <= keep_at_max) {\n\t      attypes[j].at = attypes[i].at;\n\t      attypes[j].dontmerge = (attypes[i].at == TZstarttime\n\t\t\t\t      && (nonTZlimtype != attypes[i].type\n\t\t\t\t\t  || strchr(envvar, ',')));\n\t      attypes[j].type = attypes[i].type;\n\t      j++;\n\t    }\n\t  timecnt = j;\n\t}\n\tif (do_extend) {\n\t\t/*\n\t\t** If we're extending the explicitly listed observations for\n\t\t** 400 years because we can't fill the proleptic TZ field,\n\t\t** check whether we actually ended up explicitly listing\n\t\t** observations through that period.  If there aren't any\n\t\t** near the end of the 400-year period, add a redundant\n\t\t** one at the end of the final year, to make it clear\n\t\t** that we are claiming to have definite knowledge of\n\t\t** the lack of transitions up to that point.\n\t\t*/\n\t\tstruct rule xr;\n\t\tstruct attype *lastat;\n\t\txr.r_month = TM_JANUARY;\n\t\txr.r_dycode = DC_DOM;\n\t\txr.r_dayofmonth = 1;\n\t\txr.r_tod = 0;\n\t\tfor (lastat = attypes, i = 1; i < timecnt; i++)\n\t\t\tif (attypes[i].at > lastat->at)\n\t\t\t\tlastat = &attypes[i];\n\t\tif (!lastat || lastat->at < rpytime(&xr, max_year - 1)) {\n\t\t\taddtt(rpytime(&xr, max_year + 1),\n\t\t\t      lastat ? lastat->type : defaulttype);\n\t\t\tattypes[timecnt - 1].dontmerge = true;\n\t\t}\n\t}\n\twritezone(zpfirst->z_name, envvar, version, defaulttype);\n\tfree(startbuf);\n\tfree(ab);\n\tfree(envvar);\n}\n\nstatic void\naddtt(zic_t starttime, int type)\n{\n\tattypes = growalloc(attypes, sizeof *attypes, timecnt, &timecnt_alloc);\n\tattypes[timecnt].at = starttime;\n\tattypes[timecnt].dontmerge = false;\n\tattypes[timecnt].type = type;\n\t++timecnt;\n}\n\nstatic int\naddtype(zic_t utoff, char const *abbr, bool isdst, bool ttisstd, bool ttisut)\n{\n\tregister int\ti, j;\n\n\tif (! (-1L - 2147483647L <= utoff && utoff <= 2147483647L)) {\n\t\terror(_(\"UT offset out of range\"));\n\t\texit(EXIT_FAILURE);\n\t}\n\tif (!want_bloat())\n\t  ttisstd = ttisut = false;\n\n\tfor (j = 0; j < charcnt; ++j)\n\t\tif (strcmp(&chars[j], abbr) == 0)\n\t\t\tbreak;\n\tif (j == charcnt)\n\t\tnewabbr(abbr);\n\telse {\n\t  /* If there's already an entry, return its index.  */\n\t  for (i = 0; i < typecnt; i++)\n\t    if (utoff == utoffs[i] && isdst == isdsts[i] && j == desigidx[i]\n\t\t&& ttisstd == ttisstds[i] && ttisut == ttisuts[i])\n\t      return i;\n\t}\n\t/*\n\t** There isn't one; add a new one, unless there are already too\n\t** many.\n\t*/\n\tif (typecnt >= TZ_MAX_TYPES) {\n\t\terror(_(\"too many local time types\"));\n\t\texit(EXIT_FAILURE);\n\t}\n\ti = typecnt++;\n\tutoffs[i] = utoff;\n\tisdsts[i] = isdst;\n\tttisstds[i] = ttisstd;\n\tttisuts[i] = ttisut;\n\tdesigidx[i] = j;\n\treturn i;\n}\n\nstatic void\nleapadd(zic_t t, int correction, int rolling)\n{\n\tregister int i;\n\n\tif (TZ_MAX_LEAPS <= leapcnt) {\n\t\terror(_(\"too many leap seconds\"));\n\t\texit(EXIT_FAILURE);\n\t}\n\tif (rolling && (lo_time != min_time || hi_time != max_time)) {\n\t  error(_(\"Rolling leap seconds not supported with -r\"));\n\t  exit(EXIT_FAILURE);\n\t}\n\tfor (i = 0; i < leapcnt; ++i)\n\t\tif (t <= trans[i])\n\t\t\tbreak;\n\tmemmove(&trans[i + 1], &trans[i], (leapcnt - i) * sizeof *trans);\n\tmemmove(&corr[i + 1], &corr[i], (leapcnt - i) * sizeof *corr);\n\tmemmove(&roll[i + 1], &roll[i], (leapcnt - i) * sizeof *roll);\n\ttrans[i] = t;\n\tcorr[i] = correction;\n\troll[i] = rolling;\n\t++leapcnt;\n}\n\nstatic void\nadjleap(void)\n{\n\tregister int\ti;\n\tregister zic_t\tlast = 0;\n\tregister zic_t\tprevtrans = 0;\n\n\t/*\n\t** propagate leap seconds forward\n\t*/\n\tfor (i = 0; i < leapcnt; ++i) {\n\t\tif (trans[i] - prevtrans < 28 * SECSPERDAY) {\n\t\t  error(_(\"Leap seconds too close together\"));\n\t\t  exit(EXIT_FAILURE);\n\t\t}\n\t\tprevtrans = trans[i];\n\t\ttrans[i] = tadd(trans[i], last);\n\t\tlast = corr[i] += last;\n\t}\n\n\tif (0 <= leapexpires) {\n\t  leapexpires = oadd(leapexpires, last);\n\t  if (! (leapcnt == 0 || (trans[leapcnt - 1] < leapexpires))) {\n\t    error(_(\"last Leap time does not precede Expires time\"));\n\t    exit(EXIT_FAILURE);\n\t  }\n\t}\n}\n\n/* Is A a space character in the C locale?  */\nstatic bool\nis_space(char a)\n{\n\tswitch (a) {\n\t  default:\n\t\treturn false;\n\t  case ' ': case '\\f': case '\\n': case '\\r': case '\\t': case '\\v':\n\t\treturn true;\n\t}\n}\n\n/* Is A an alphabetic character in the C locale?  */\nstatic bool\nis_alpha(char a)\n{\n\tswitch (a) {\n\t  default:\n\t\treturn false;\n\t  case 'A': case 'B': case 'C': case 'D': case 'E': case 'F': case 'G':\n\t  case 'H': case 'I': case 'J': case 'K': case 'L': case 'M': case 'N':\n\t  case 'O': case 'P': case 'Q': case 'R': case 'S': case 'T': case 'U':\n\t  case 'V': case 'W': case 'X': case 'Y': case 'Z':\n\t  case 'a': case 'b': case 'c': case 'd': case 'e': case 'f': case 'g':\n\t  case 'h': case 'i': case 'j': case 'k': case 'l': case 'm': case 'n':\n\t  case 'o': case 'p': case 'q': case 'r': case 's': case 't': case 'u':\n\t  case 'v': case 'w': case 'x': case 'y': case 'z':\n\t\treturn true;\n\t}\n}\n\n/* If A is an uppercase character in the C locale, return its lowercase\n   counterpart.  Otherwise, return A.  */\nstatic char\nlowerit(char a)\n{\n\tswitch (a) {\n\t  default: return a;\n\t  case 'A': return 'a'; case 'B': return 'b'; case 'C': return 'c';\n\t  case 'D': return 'd'; case 'E': return 'e'; case 'F': return 'f';\n\t  case 'G': return 'g'; case 'H': return 'h'; case 'I': return 'i';\n\t  case 'J': return 'j'; case 'K': return 'k'; case 'L': return 'l';\n\t  case 'M': return 'm'; case 'N': return 'n'; case 'O': return 'o';\n\t  case 'P': return 'p'; case 'Q': return 'q'; case 'R': return 'r';\n\t  case 'S': return 's'; case 'T': return 't'; case 'U': return 'u';\n\t  case 'V': return 'v'; case 'W': return 'w'; case 'X': return 'x';\n\t  case 'Y': return 'y'; case 'Z': return 'z';\n\t}\n}\n\n/* case-insensitive equality */\nATTRIBUTE_PURE_114833 static bool\nciequal(register const char *ap, register const char *bp)\n{\n\twhile (lowerit(*ap) == lowerit(*bp++))\n\t\tif (*ap++ == '\\0')\n\t\t\treturn true;\n\treturn false;\n}\n\nATTRIBUTE_PURE_114833 static bool\nitsabbr(register const char *abbr, register const char *word)\n{\n\tif (lowerit(*abbr) != lowerit(*word))\n\t\treturn false;\n\t++word;\n\twhile (*++abbr != '\\0')\n\t\tdo {\n\t\t\tif (*word == '\\0')\n\t\t\t\treturn false;\n\t\t} while (lowerit(*word++) != lowerit(*abbr));\n\treturn true;\n}\n\n/* Return true if ABBR is an initial prefix of WORD, ignoring ASCII case.  */\n\nATTRIBUTE_PURE_114833 static bool\nciprefix(char const *abbr, char const *word)\n{\n  do\n    if (!*abbr)\n      return true;\n  while (lowerit(*abbr++) == lowerit(*word++));\n\n  return false;\n}\n\nstatic const struct lookup *\nbyword(const char *word, const struct lookup *table)\n{\n\tregister const struct lookup *\tfoundlp;\n\tregister const struct lookup *\tlp;\n\n\tif (word == NULL || table == NULL)\n\t\treturn NULL;\n\n\t/* If TABLE is LASTS and the word starts with \"last\" followed\n\t   by a non-'-', skip the \"last\" and look in WDAY_NAMES instead.\n\t   Warn about any usage of the undocumented prefix \"last-\".  */\n\tif (table == lasts && ciprefix(\"last\", word) && word[4]) {\n\t  if (word[4] == '-')\n\t    warning(_(\"\\\"%s\\\" is undocumented; use \\\"last%s\\\" instead\"),\n\t\t    word, word + 5);\n\t  else {\n\t    word += 4;\n\t    table = wday_names;\n\t  }\n\t}\n\n\t/*\n\t** Look for exact match.\n\t*/\n\tfor (lp = table; lp->l_word != NULL; ++lp)\n\t\tif (ciequal(word, lp->l_word))\n\t\t\treturn lp;\n\t/*\n\t** Look for inexact match.\n\t*/\n\tfoundlp = NULL;\n\tfor (lp = table; lp->l_word != NULL; ++lp)\n\t\tif (ciprefix(word, lp->l_word)) {\n\t\t\tif (foundlp == NULL)\n\t\t\t\tfoundlp = lp;\n\t\t\telse\treturn NULL;\t/* multiple inexact matches */\n\t\t}\n\n\tif (foundlp && noise) {\n\t  /* Warn about any backward-compatibility issue with pre-2017c zic.  */\n\t  bool pre_2017c_match = false;\n\t  for (lp = table; lp->l_word; lp++)\n\t    if (itsabbr(word, lp->l_word)) {\n\t      if (pre_2017c_match) {\n\t\twarning(_(\"\\\"%s\\\" is ambiguous in pre-2017c zic\"), word);\n\t\tbreak;\n\t      }\n\t      pre_2017c_match = true;\n\t    }\n\t}\n\n\treturn foundlp;\n}\n\nstatic int\ngetfields(char *cp, char **array, int arrayelts)\n{\n\tregister char *\t\tdp;\n\tregister int\t\tnsubs;\n\n\tnsubs = 0;\n\tfor ( ; ; ) {\n\t\tchar *dstart;\n\t\twhile (is_space(*cp))\n\t\t\t\t++cp;\n\t\tif (*cp == '\\0' || *cp == '#')\n\t\t\tbreak;\n\t\tdstart = dp = cp;\n\t\tdo {\n\t\t\tif ((*dp = *cp++) != '\"')\n\t\t\t\t++dp;\n\t\t\telse while ((*dp = *cp++) != '\"')\n\t\t\t\tif (*dp != '\\0')\n\t\t\t\t\t++dp;\n\t\t\t\telse {\n\t\t\t\t  error(_(\"Odd number of quotation marks\"));\n\t\t\t\t  exit(EXIT_FAILURE);\n\t\t\t\t}\n\t\t} while (*cp && *cp != '#' && !is_space(*cp));\n\t\tif (is_space(*cp))\n\t\t\t++cp;\n\t\t*dp = '\\0';\n\t\tif (nsubs == arrayelts) {\n\t\t  error(_(\"Too many input fields\"));\n\t\t  exit(EXIT_FAILURE);\n\t\t}\n\t\tarray[nsubs++] = dstart + (*dstart == '-' && dp == dstart + 1);\n\t}\n\treturn nsubs;\n}\n\nATTRIBUTE_NORETURN static void\ntime_overflow(void)\n{\n  error(_(\"time overflow\"));\n  exit(EXIT_FAILURE);\n}\n\nATTRIBUTE_PURE_114833 static zic_t\noadd(zic_t t1, zic_t t2)\n{\n#ifdef ckd_add\n  zic_t sum;\n  if (!ckd_add(&sum, t1, t2))\n    return sum;\n#else\n  if (t1 < 0 ? ZIC_MIN - t1 <= t2 : t2 <= ZIC_MAX - t1)\n    return t1 + t2;\n#endif\n  time_overflow();\n}\n\nATTRIBUTE_PURE_114833 static zic_t\ntadd(zic_t t1, zic_t t2)\n{\n#ifdef ckd_add\n  zic_t sum;\n  if (!ckd_add(&sum, t1, t2) && min_time <= sum && sum <= max_time)\n    return sum;\n#else\n  if (t1 < 0 ? min_time - t1 <= t2 : t2 <= max_time - t1)\n    return t1 + t2;\n#endif\n  if (t1 == min_time || t1 == max_time)\n    return t1;\n  time_overflow();\n}\n\n/*\n** Given a rule, and a year, compute the date (in seconds since January 1,\n** 1970, 00:00 LOCAL time) in that year that the rule refers to.\n*/\n\nstatic zic_t\nrpytime(const struct rule *rp, zic_t wantedy)\n{\n\tregister int\tm, i;\n\tregister zic_t\tdayoff;\t\t\t/* with a nod to Margaret O. */\n\tregister zic_t\tt, y;\n\tint yrem;\n\n\tif (wantedy == ZIC_MIN)\n\t\treturn min_time;\n\tif (wantedy == ZIC_MAX)\n\t\treturn max_time;\n\tm = TM_JANUARY;\n\ty = EPOCH_YEAR;\n\n\t/* dayoff = floor((wantedy - y) / YEARSPERREPEAT) * DAYSPERREPEAT,\n\t   sans overflow.  */\n\tyrem = wantedy % YEARSPERREPEAT - y % YEARSPERREPEAT;\n\tdayoff = ((wantedy / YEARSPERREPEAT - y / YEARSPERREPEAT\n\t\t   + yrem / YEARSPERREPEAT - (yrem % YEARSPERREPEAT < 0))\n\t\t  * DAYSPERREPEAT);\n\t/* wantedy = y + ((wantedy - y) mod YEARSPERREPEAT), sans overflow.  */\n\twantedy = y + (yrem + 2 * YEARSPERREPEAT) % YEARSPERREPEAT;\n\n\twhile (wantedy != y) {\n\t\ti = len_years[isleap(y)];\n\t\tdayoff = oadd(dayoff, i);\n\t\ty++;\n\t}\n\twhile (m != rp->r_month) {\n\t\ti = len_months[isleap(y)][m];\n\t\tdayoff = oadd(dayoff, i);\n\t\t++m;\n\t}\n\ti = rp->r_dayofmonth;\n\tif (m == TM_FEBRUARY && i == 29 && !isleap(y)) {\n\t\tif (rp->r_dycode == DC_DOWLEQ)\n\t\t\t--i;\n\t\telse {\n\t\t\terror(_(\"use of 2/29 in non leap-year\"));\n\t\t\texit(EXIT_FAILURE);\n\t\t}\n\t}\n\t--i;\n\tdayoff = oadd(dayoff, i);\n\tif (rp->r_dycode == DC_DOWGEQ || rp->r_dycode == DC_DOWLEQ) {\n\t\t/*\n\t\t** Don't trust mod of negative numbers.\n\t\t*/\n\t\tzic_t wday = ((EPOCH_WDAY + dayoff % DAYSPERWEEK + DAYSPERWEEK)\n\t\t\t      % DAYSPERWEEK);\n\t\twhile (wday != rp->r_wday)\n\t\t\tif (rp->r_dycode == DC_DOWGEQ) {\n\t\t\t\tdayoff = oadd(dayoff, 1);\n\t\t\t\tif (++wday >= DAYSPERWEEK)\n\t\t\t\t\twday = 0;\n\t\t\t\t++i;\n\t\t\t} else {\n\t\t\t\tdayoff = oadd(dayoff, -1);\n\t\t\t\tif (--wday < 0)\n\t\t\t\t\twday = DAYSPERWEEK - 1;\n\t\t\t\t--i;\n\t\t\t}\n\t\tif (i < 0 || i >= len_months[isleap(y)][m]) {\n\t\t\tif (noise)\n\t\t\t\twarning(_(\"rule goes past start/end of month; \\\nwill not work with pre-2004 versions of zic\"));\n\t\t}\n\t}\n\tif (dayoff < min_time / SECSPERDAY)\n\t\treturn min_time;\n\tif (dayoff > max_time / SECSPERDAY)\n\t\treturn max_time;\n\tt = (zic_t) dayoff * SECSPERDAY;\n\treturn tadd(t, rp->r_tod);\n}\n\nstatic void\nnewabbr(const char *string)\n{\n\tregister int\ti;\n\n\tif (strcmp(string, GRANDPARENTED) != 0) {\n\t\tregister const char *\tcp;\n\t\tconst char *\t\tmp;\n\n\t\tcp = string;\n\t\tmp = NULL;\n\t\twhile (is_alpha(*cp) || ('0' <= *cp && *cp <= '9')\n\t\t       || *cp == '-' || *cp == '+')\n\t\t\t\t++cp;\n\t\tif (noise && cp - string < 3)\n\t\t  mp = _(\"time zone abbreviation has fewer than 3 characters\");\n\t\tif (cp - string > ZIC_MAX_ABBR_LEN_WO_WARN)\n\t\t  mp = _(\"time zone abbreviation has too many characters\");\n\t\tif (*cp != '\\0')\nmp = _(\"time zone abbreviation differs from POSIX standard\");\n\t\tif (mp != NULL)\n\t\t\twarning(\"%s (%s)\", mp, string);\n\t}\n\ti = strlen(string) + 1;\n\tif (charcnt + i > TZ_MAX_CHARS) {\n\t\terror(_(\"too many, or too long, time zone abbreviations\"));\n\t\texit(EXIT_FAILURE);\n\t}\n\tstrcpy(&chars[charcnt], string);\n\tcharcnt += i;\n}\n\n/* Ensure that the directories of ARGNAME exist, by making any missing\n   ones.  If ANCESTORS, do this only for ARGNAME's ancestors; otherwise,\n   do it for ARGNAME too.  Exit with failure if there is trouble.\n   Do not consider an existing file to be trouble.  */\nstatic void\nmkdirs(char const *argname, bool ancestors)\n{\n\tchar *name = xstrdup(argname);\n\tchar *cp = name;\n\n\t/* On MS-Windows systems, do not worry about drive letters or\n\t   backslashes, as this should suffice in practice.  Time zone\n\t   names do not use drive letters and backslashes.  If the -d\n\t   option of zic does not name an already-existing directory,\n\t   it can use slashes to separate the already-existing\n\t   ancestor prefix from the to-be-created subdirectories.  */\n\n\t/* Do not mkdir a root directory, as it must exist.  */\n\twhile (*cp == '/')\n\t  cp++;\n\n\twhile (cp && ((cp = strchr(cp, '/')) || !ancestors)) {\n\t\tif (cp)\n\t\t  *cp = '\\0';\n\t\t/*\n\t\t** Try to create it.  It's OK if creation fails because\n\t\t** the directory already exists, perhaps because some\n\t\t** other process just created it.  For simplicity do\n\t\t** not check first whether it already exists, as that\n\t\t** is checked anyway if the mkdir fails.\n\t\t*/\n\t\tif (mkdir(name, MKDIR_UMASK) != 0) {\n\t\t\t/* Do not report an error if err == EEXIST, because\n\t\t\t   some other process might have made the directory\n\t\t\t   in the meantime.  Likewise for ENOSYS, because\n\t\t\t   Solaris 10 mkdir fails with ENOSYS if the\n\t\t\t   directory is an automounted mount point.\n\t\t\t   Likewise for EACCES, since mkdir can fail\n\t\t\t   with EACCES merely because the parent directory\n\t\t\t   is unwritable.  Likewise for most other error\n\t\t\t   numbers.  */\n\t\t\tint err = errno;\n\t\t\tif (err == ELOOP || err == ENAMETOOLONG\n\t\t\t    || err == ENOENT || err == ENOTDIR) {\n\t\t\t\terror(_(\"%s: Can't create directory %s: %s\"),\n\t\t\t\t      progname, name, strerror(err));\n\t\t\t\texit(EXIT_FAILURE);\n\t\t\t}\n\t\t}\n\t\tif (cp)\n\t\t  *cp++ = '/';\n\t}\n\tfree(name);\n}\n"
        },
        {
          "name": "ziguard.awk",
          "type": "blob",
          "size": 11.283203125,
          "content": "# Convert tzdata source into vanguard or rearguard form.\n\n# Contributed by Paul Eggert.  This file is in the public domain.\n\n# This is not a general-purpose converter; it is designed for current tzdata.\n# It just converts from current source to main, vanguard, and rearguard forms.\n# Although it might be nice for it to be idempotent, or to be useful\n# for converting back and forth between formats,\n# it does not do these nonessential tasks now.\n#\n# This script can convert from main to vanguard form and vice versa.\n# There is no need to convert rearguard to other forms.\n#\n# When converting to vanguard form, the output can use the line\n# \"Zone GMT 0 - GMT\" which TZUpdater 2.3.2 mistakenly rejects.\n#\n# When converting to vanguard form, the output can use negative SAVE\n# values.\n#\n# When converting to rearguard form, the output uses only nonnegative\n# SAVE values.  The idea is for the output data to simulate the behavior\n# of the input data as best it can within the constraints of the\n# rearguard format.\n\n# Given a FIELD like \"-0:30\", return a minute count like -30.\nfunction get_minutes(field, \\\n\t\t     sign, hours, minutes)\n{\n  sign = field ~ /^-/ ? -1 : 1\n  hours = +field\n  if (field ~ /:/) {\n    minutes = field\n    sub(/[^:]*:/, \"\", minutes)\n  }\n  return 60 * hours + sign * minutes\n}\n\n# Given an OFFSET, which is a minute count like 300 or 330,\n# return a %z-style abbreviation like \"+05\" or \"+0530\".\nfunction offset_abbr(offset, \\\n\t\t     hours, minutes, sign)\n{\n  hours = int(offset / 60)\n  minutes = offset % 60\n  if (minutes) {\n    return sprintf(\"%+.4d\", hours * 100 + minutes);\n  } else {\n    return sprintf(\"%+.2d\", hours)\n  }\n}\n\n# Round TIMESTAMP (a +-hh:mm:ss.dddd string) to the nearest second.\nfunction round_to_second(timestamp, \\\n\t\t\t hh, mm, ss, seconds, dot_dddd, subseconds)\n{\n  dot_dddd = timestamp\n  if (!sub(/^[+-]?[0-9]+:[0-9]+:[0-9]+\\./, \".\", dot_dddd))\n    return timestamp\n  hh = mm = ss = timestamp\n  sub(/^[-+]?[0-9]+:[0-9]+:/, \"\", ss)\n  sub(/^[-+]?[0-9]+:/, \"\", mm)\n  sub(/^[-+]?/, \"\", hh)\n  seconds = 3600 * hh + 60 * mm + ss\n  subseconds = +dot_dddd\n  seconds += 0.5 < subseconds || ((subseconds == 0.5) && (seconds % 2));\n  return sprintf(\"%s%d:%.2d:%.2d\", timestamp ~ /^-/ ? \"-\" : \"\", \\\n\t\t seconds / 3600, seconds / 60 % 60, seconds % 60)\n}\n\nBEGIN {\n  dataform_type[\"vanguard\"] = 1\n  dataform_type[\"main\"] = 1\n  dataform_type[\"rearguard\"] = 1\n\n  if (PACKRATLIST) {\n    while (getline <PACKRATLIST) {\n      if ($0 ~ /^#/) continue\n      packratlist[$3] = 1\n    }\n  }\n\n  # The command line should set DATAFORM.\n  if (!dataform_type[DATAFORM]) exit 1\n}\n\n$1 == \"#PACKRATLIST\" && $2 == PACKRATLIST {\n  sub(/^#PACKRATLIST[\\t ]+[^\\t ]+[\\t ]+/, \"\")\n}\n\n/^Zone/ { zone = $2 }\n\nDATAFORM != \"main\" {\n  in_comment = $0 ~ /^#/\n  uncomment = comment_out = 0\n\n  # If this line should differ due to Czechoslovakia using negative SAVE values,\n  # uncomment the desired version and comment out the undesired one.\n  if (zone == \"Europe/Prague\" && $0 ~ /^#?[\\t ]+[01]:00[\\t ]/ \\\n      && $0 ~ /1947 Feb 23/) {\n    if (($(in_comment + 2) != \"-\") == (DATAFORM != \"rearguard\")) {\n      uncomment = in_comment\n    } else {\n      comment_out = !in_comment\n    }\n  }\n\n  # If this line should differ due to Ireland using negative SAVE values,\n  # uncomment the desired version and comment out the undesired one.\n  Rule_Eire = $0 ~ /^#?Rule[\\t ]+Eire[\\t ]/\n  Zone_Dublin_post_1968 \\\n    = (zone == \"Europe/Dublin\" && $0 ~ /^#?[\\t ]+[01]:00[\\t ]/ \\\n       && (!$(in_comment + 4) || 1968 < $(in_comment + 4)))\n  if (Rule_Eire || Zone_Dublin_post_1968) {\n    if ((Rule_Eire \\\n\t || (Zone_Dublin_post_1968 && $(in_comment + 3) == \"IST/GMT\"))\t\\\n\t== (DATAFORM != \"rearguard\")) {\n      uncomment = in_comment\n    } else {\n      comment_out = !in_comment\n    }\n  }\n\n  # If this line should differ due to Namibia using negative SAVE values,\n  # uncomment the desired version and comment out the undesired one.\n  Rule_Namibia = $0 ~ /^#?Rule[\\t ]+Namibia[\\t ]/\n  Zone_using_Namibia_rule \\\n    = (zone == \"Africa/Windhoek\" && $0 ~ /^#?[\\t ]+[12]:00[\\t ]/ \\\n       && ($(in_comment + 2) == \"Namibia\" \\\n\t   || ($(in_comment + 2) == \"-\" && $(in_comment + 3) == \"CAT\" \\\n\t       && ((1994 <= $(in_comment + 4) && $(in_comment + 4) <= 2017) \\\n\t\t   || in_comment + 3 == NF))))\n  if (Rule_Namibia || Zone_using_Namibia_rule) {\n    if ((Rule_Namibia \\\n\t ? ($9 ~ /^-/ || ($9 == 0 && $10 == \"CAT\")) \\\n\t : $(in_comment + 1) == \"2:00\" && $(in_comment + 2) == \"Namibia\") \\\n\t== (DATAFORM != \"rearguard\")) {\n      uncomment = in_comment\n    } else {\n      comment_out = !in_comment\n    }\n  }\n\n  # If this line should differ due to Portugal benefiting from %z if supported,\n  # comment out the undesired version and uncomment the desired one.\n  if ($0 ~ /^#?[\\t ]+-[12]:00[\\t ]+((Port|W-Eur)[\\t ]+[%+-]|-[\\t ]+(%z|-01)[\\t ]+1982 Mar 28)/) {\n    if (($0 ~ /%z/) == (DATAFORM == \"rearguard\")) {\n      comment_out = !in_comment\n    } else {\n      uncomment = in_comment\n    }\n  }\n\n  # In vanguard form, use the line \"Zone GMT 0 - GMT\" instead of\n  # \"Zone Etc/GMT 0 - GMT\" and adjust Link lines accordingly.\n  # This works around a bug in TZUpdater 2.3.2.\n  if (/^#?(Zone|Link)[\\t ]+(Etc\\/)?GMT[\\t ]/) {\n    if (($2 == \"GMT\") == (DATAFORM == \"vanguard\")) {\n      uncomment = in_comment\n    } else {\n      comment_out = !in_comment\n    }\n  }\n\n  if (uncomment) {\n    sub(/^#/, \"\")\n  }\n  if (comment_out) {\n    sub(/^/, \"#\")\n  }\n\n  # Prefer explicit abbreviations in rearguard form, %z otherwise.\n  if (DATAFORM == \"rearguard\") {\n    if ($0 ~ /^[^#]*%z/) {\n      stdoff_column = 2 * ($0 ~ /^Zone/) + 1\n      rules_column = stdoff_column + 1\n      stdoff = get_minutes($stdoff_column)\n      rules = $rules_column\n      stdabbr = offset_abbr(stdoff)\n      if (rules == \"-\") {\n\tabbr = stdabbr\n      } else {\n\tdstabbr_only = rules ~ /^[+0-9-]/\n\tif (dstabbr_only) {\n\t  dstoff = get_minutes(rules)\n\t} else {\n\t  # The DST offset is normally an hour, but there are special cases.\n\t  if (rules == \"Morocco\" && NF == 3) {\n\t    dstoff = -60\n\t  } else if (rules == \"NBorneo\") {\n\t    dstoff = 20\n\t  } else if (((rules == \"Cook\" || rules == \"LH\") && NF == 3) \\\n\t\t     || (rules == \"Uruguay\" \\\n\t\t\t && $0 ~ /[\\t ](1942 Dec 14|1960|1970|1974 Dec 22)$/)) {\n\t    dstoff = 30\n\t  } else if (rules == \"Uruguay\" && $0 ~ /[\\t ]1974 Mar 10$/) {\n\t    dstoff = 90\n\t  } else {\n\t    dstoff = 60\n\t  }\n\t}\n\tdstabbr = offset_abbr(stdoff + dstoff)\n\tif (dstabbr_only) {\n\t  abbr = dstabbr\n\t} else {\n\t  abbr = stdabbr \"/\" dstabbr\n\t}\n      }\n      sub(/%z/, abbr)\n    }\n  } else {\n    sub(/^(Zone[\\t ]+[^\\t ]+)?[\\t ]+[^\\t ]+[\\t ]+[^\\t ]+[\\t ]+[-+][^\\t ]+/, \\\n\t\"&CHANGE-TO-%z\")\n    sub(/-00CHANGE-TO-%z/, \"-00\")\n    sub(/[-+][^\\t ]+CHANGE-TO-/, \"\")\n  }\n\n  # Normally, prefer whole seconds.  However, prefer subseconds\n  # if generating vanguard form and the otherwise-undocumented\n  # VANGUARD_SUBSECONDS environment variable is set.\n  # This relies on #STDOFF comment lines in the data.\n  # It is for hypothetical clients that support UT offsets that are\n  # not integer multiples of one second (e.g., Europe/Lisbon, 1884 to 1912).\n  # No known clients need this currently, and this experimental\n  # feature may be changed or withdrawn in future releases.\n  if ($1 == \"#STDOFF\") {\n    stdoff = $2\n    rounded_stdoff = round_to_second(stdoff)\n    if (DATAFORM == \"vanguard\" && ENVIRON[\"VANGUARD_SUBSECONDS\"]) {\n      stdoff_subst[0] = rounded_stdoff\n      stdoff_subst[1] = stdoff\n    } else {\n      stdoff_subst[0] = stdoff\n      stdoff_subst[1] = rounded_stdoff\n    }\n  } else if (stdoff_subst[0]) {\n    stdoff_column = 2 * ($0 ~ /^Zone/) + 1\n    stdoff_column_val = $stdoff_column\n    if (stdoff_column_val == stdoff_subst[0]) {\n      sub(stdoff_subst[0], stdoff_subst[1])\n    } else if (stdoff_column_val != stdoff_subst[1]) {\n      stdoff_subst[0] = 0\n    }\n  }\n\n  # In rearguard form, change the Japan rule line with \"Sat>=8 25:00\"\n  # to \"Sun>=9 1:00\", to cater to zic before 2007 and to older Java.\n  if ($0 ~ /^Rule/ && $2 == \"Japan\") {\n    if (DATAFORM == \"rearguard\") {\n      if ($7 == \"Sat>=8\" && $8 == \"25:00\") {\n\tsub(/Sat>=8/, \"Sun>=9\")\n\tsub(/25:00/, \" 1:00\")\n      }\n    } else {\n      if ($7 == \"Sun>=9\" && $8 == \"1:00\") {\n\tsub(/Sun>=9/, \"Sat>=8\")\n\tsub(/ 1:00/, \"25:00\")\n      }\n    }\n  }\n\n  # In rearguard form, change the Morocco lines with negative SAVE values\n  # to use positive SAVE values.\n  if ($2 == \"Morocco\") {\n    if ($0 ~ /^Rule/) {\n      if ($4 ~ /^201[78]$/ && $6 == \"Oct\") {\n\tif (DATAFORM == \"rearguard\") {\n\t  sub(/\\t2018\\t/, \"\\t2017\\t\")\n\t} else {\n\t  sub(/\\t2017\\t/, \"\\t2018\\t\")\n\t}\n      }\n\n      if (2019 <= $3) {\n\tif ($8 == \"2:00\") {\n\t  if (DATAFORM == \"rearguard\") {\n\t    sub(/\\t0\\t/, \"\\t1:00\\t\")\n\t  } else {\n\t    sub(/\\t1:00\\t/, \"\\t0\\t\")\n\t  }\n\t} else {\n\t  if (DATAFORM == \"rearguard\") {\n\t    sub(/\\t-1:00\\t/, \"\\t0\\t\")\n\t  } else {\n\t    sub(/\\t0\\t/, \"\\t-1:00\\t\")\n\t  }\n\t}\n      }\n    }\n    if ($1 ~ /^[+0-9-]/ && NF == 3) {\n      if (DATAFORM == \"rearguard\") {\n\tsub(/1:00\\tMorocco/, \"0:00\\tMorocco\")\n\tsub(/\\t\\+01\\/\\+00$/, \"\\t+00/+01\")\n      } else {\n\tsub(/0:00\\tMorocco/, \"1:00\\tMorocco\")\n\tsub(/\\t\\+00\\/+01$/, \"\\t+01/+00\")\n      }\n    }\n  }\n}\n\n/^Zone/ {\n  packrat_ignored = FILENAME == PACKRATDATA && PACKRATLIST && !packratlist[$2];\n}\n{\n  if (packrat_ignored && $0 !~ /^Rule/) {\n    sub(/^/, \"#\")\n  }\n}\n\n# Return a link line resulting by changing OLDLINE to link to TARGET\n# from LINKNAME, instead of linking to OLDTARGET from LINKNAME.\n# Align data columns the same as they were in OLDLINE.\n# Also, replace any existing white space followed by comment with COMMENT.\nfunction make_linkline(oldline, target, linkname, oldtarget, comment, \\\n\t\t       oldprefix, oldprefixlen, oldtargettabs, \\\n\t\t       replsuffix, targettabs)\n{\n  oldprefix = \"Link\\t\" oldtarget \"\\t\"\n  oldprefixlen = length(oldprefix)\n  if (substr(oldline, 1, oldprefixlen) == oldprefix) {\n    # Use tab stops to preserve LINKNAME's column.\n    replsuffix = substr(oldline, oldprefixlen + 1)\n    sub(/[\\t ]*#.*/, \"\", replsuffix)\n    oldtargettabs = int(length(oldtarget) / 8) + 1\n    targettabs = int(length(target) / 8) + 1\n    for (; targettabs < oldtargettabs; targettabs++) {\n      replsuffix = \"\\t\" replsuffix\n    }\n    for (; oldtargettabs < targettabs && replsuffix ~ /^\\t/; targettabs--) {\n      replsuffix = substr(replsuffix, 2)\n    }\n  } else {\n    # Odd format line; don't bother lining up its replacement nicely.\n    replsuffix = linkname\n  }\n  return \"Link\\t\" target \"\\t\" replsuffix comment\n}\n\n/^Link/ && $4 == \"#=\" && DATAFORM == \"vanguard\" {\n  $0 = make_linkline($0, $5, $3, $2)\n}\n\n# If a Link line is followed by a Link or Zone line for the same data, comment\n# out the Link line.  This can happen if backzone overrides a Link\n# with a Zone or a different Link.\n/^Zone/ {\n  sub(/^Link/, \"#Link\", line[linkline[$2]])\n}\n/^Link/ {\n  sub(/^Link/, \"#Link\", line[linkline[$3]])\n  linkline[$3] = NR\n  linktarget[$3] = $2\n}\n\n{ line[NR] = $0 }\n\nfunction cut_link_chains_short( \\\n\t\t\t       l, linkname, t, target)\n{\n  for (linkname in linktarget) {\n    target = linktarget[linkname]\n    t = linktarget[target]\n    if (t) {\n      # TARGET is itself a link name.  Replace the line \"Link TARGET LINKNAME\"\n      # with \"Link T LINKNAME #= TARGET\", where T is at the end of the chain\n      # of links that LINKNAME points to.\n      while ((u = linktarget[t])) {\n\tt = u\n      }\n      l = linkline[linkname]\n      line[l] = make_linkline(line[l], t, linkname, target, \"\\t#= \" target)\n    }\n  }\n}\n\nEND {\n  if (DATAFORM != \"vanguard\") {\n    cut_link_chains_short()\n  }\n  for (i = 1; i <= NR; i++)\n    print line[i]\n}\n"
        },
        {
          "name": "zishrink.awk",
          "type": "blob",
          "size": 10.0703125,
          "content": "# Convert tzdata source into a smaller version of itself.\n\n# Contributed by Paul Eggert.  This file is in the public domain.\n\n# This is not a general-purpose converter; it is designed for current tzdata.\n# 'zic' should treat this script's output as if it were identical to\n# this script's input.\n\n# Record a hash N for the new name NAME, checking for collisions.\n\nfunction record_hash(n, name)\n{\n  if (used_hashes[n]) {\n    printf \"# ! collision: %s %s\\n\", used_hashes[n], name\n    exit 1\n  }\n  used_hashes[n] = name\n}\n\n# Return a shortened rule name representing NAME,\n# and record this relationship to the hash table.\n\nfunction gen_rule_name(name, \\\n\t\t       n)\n{\n  # Use a simple mnemonic: the first two letters.\n  n = substr(name, 1, 2)\n  record_hash(n, name)\n  # printf \"# %s = %s\\n\", n, name\n  return n\n}\n\nfunction prehash_rule_names( \\\n\t\t\t    name)\n{\n  # Rule names are not part of the tzdb API, so substitute shorter\n  # ones.  Shortening them consistently from one release to the next\n  # simplifies comparison of the output.  That being said, the\n  # 1-letter names below are not standardized in any way, and can\n  # change arbitrarily from one release to the next, as the main goal\n  # here is compression not comparison.\n\n  # Abbreviating these rules names to one letter saved the most space\n  # circa 2018e.\n  rule[\"Arg\"] = \"A\"\n  rule[\"Brazil\"] = \"B\"\n  rule[\"Canada\"] = \"C\"\n  rule[\"Denmark\"] = \"D\"\n  rule[\"EU\"] = \"E\"\n  rule[\"France\"] = \"F\"\n  rule[\"GB-Eire\"] = \"G\"\n  rule[\"Halifax\"] = \"H\"\n  rule[\"Italy\"] = \"I\"\n  rule[\"Jordan\"] = \"J\"\n  rule[\"Egypt\"] = \"K\" # \"Kemet\" in ancient Egyptian\n  rule[\"Libya\"] = \"L\"\n  rule[\"Morocco\"] = \"M\"\n  rule[\"Neth\"] = \"N\"\n  rule[\"Poland\"] = \"O\" # arbitrary\n  rule[\"Palestine\"] = \"P\"\n  rule[\"Cuba\"] = \"Q\" # Its start sounds like \"Q\".\n  rule[\"Russia\"] = \"R\"\n  rule[\"Syria\"] = \"S\"\n  rule[\"Turkey\"] = \"T\"\n  rule[\"Uruguay\"] = \"U\"\n  rule[\"Vincennes\"] = \"V\"\n  rule[\"Winn\"] = \"W\"\n  rule[\"Mongol\"] = \"X\" # arbitrary\n  rule[\"NT_YK\"] = \"Y\"\n  rule[\"Zion\"] = \"Z\"\n  rule[\"Austria\"] = \"a\"\n  rule[\"Belgium\"] = \"b\"\n  rule[\"C-Eur\"] = \"c\"\n  rule[\"Algeria\"] = \"d\" # country code DZ\n  rule[\"E-Eur\"] = \"e\"\n  rule[\"Taiwan\"] = \"f\" # Formosa\n  rule[\"Greece\"] = \"g\"\n  rule[\"Hungary\"] = \"h\"\n  rule[\"Iran\"] = \"i\"\n  rule[\"StJohns\"] = \"j\"\n  rule[\"Chatham\"] = \"k\" # arbitrary\n  rule[\"Lebanon\"] = \"l\"\n  rule[\"Mexico\"] = \"m\"\n  rule[\"Tunisia\"] = \"n\" # country code TN\n  rule[\"Moncton\"] = \"o\" # arbitrary\n  rule[\"Port\"] = \"p\"\n  rule[\"Albania\"] = \"q\" # arbitrary\n  rule[\"Regina\"] = \"r\"\n  rule[\"Spain\"] = \"s\"\n  rule[\"Toronto\"] = \"t\"\n  rule[\"US\"] = \"u\"\n  rule[\"Louisville\"] = \"v\" # ville\n  rule[\"Iceland\"] = \"w\" # arbitrary\n  rule[\"Chile\"] = \"x\" # arbitrary\n  rule[\"Para\"] = \"y\" # country code PY\n  rule[\"Romania\"] = \"z\" # arbitrary\n  rule[\"Macau\"] = \"_\" # arbitrary\n\n  # Use ISO 3166 alpha-2 country codes for remaining names that are countries.\n  # This is more systematic, and avoids collisions (e.g., Malta and Moldova).\n  rule[\"Armenia\"] = \"AM\"\n  rule[\"Aus\"] = \"AU\"\n  rule[\"Azer\"] = \"AZ\"\n  rule[\"Barb\"] = \"BB\"\n  rule[\"Dhaka\"] = \"BD\"\n  rule[\"Bulg\"] = \"BG\"\n  rule[\"Bahamas\"] = \"BS\"\n  rule[\"Belize\"] = \"BZ\"\n  rule[\"Swiss\"] = \"CH\"\n  rule[\"Cook\"] = \"CK\"\n  rule[\"PRC\"] = \"CN\"\n  rule[\"Cyprus\"] = \"CY\"\n  rule[\"Czech\"] = \"CZ\"\n  rule[\"Germany\"] = \"DE\"\n  rule[\"DR\"] = \"DO\"\n  rule[\"Ecuador\"] = \"EC\"\n  rule[\"Finland\"] = \"FI\"\n  rule[\"Fiji\"] = \"FJ\"\n  rule[\"Falk\"] = \"FK\"\n  rule[\"Ghana\"] = \"GH\"\n  rule[\"Guat\"] = \"GT\"\n  rule[\"Hond\"] = \"HN\"\n  rule[\"Haiti\"] = \"HT\"\n  rule[\"Eire\"] = \"IE\"\n  rule[\"Iraq\"] = \"IQ\"\n  rule[\"Japan\"] = \"JP\"\n  rule[\"Kyrgyz\"] = \"KG\"\n  rule[\"ROK\"] = \"KR\"\n  rule[\"Latvia\"] = \"LV\"\n  rule[\"Lux\"] = \"LX\"\n  rule[\"Moldova\"] = \"MD\"\n  rule[\"Malta\"] = \"MT\"\n  rule[\"Mauritius\"] = \"MU\"\n  rule[\"Namibia\"] = \"NA\"\n  rule[\"Nic\"] = \"NI\"\n  rule[\"Norway\"] = \"NO\"\n  rule[\"Peru\"] = \"PE\"\n  rule[\"Phil\"] = \"PH\"\n  rule[\"Pakistan\"] = \"PK\"\n  rule[\"Sudan\"] = \"SD\"\n  rule[\"Salv\"] = \"SV\"\n  rule[\"Tonga\"] = \"TO\"\n  rule[\"Vanuatu\"] = \"VU\"\n\n  # Avoid collisions.\n  rule[\"Detroit\"] = \"Dt\" # De = Denver\n\n  for (name in rule) {\n    record_hash(rule[name], name)\n  }\n}\n\nfunction make_line(n, field, \\\n\t\t   f, r)\n{\n  r = field[1]\n  for (f = 2; f <= n; f++)\n    r = r \" \" field[f]\n  return r\n}\n\n# Process the input line LINE and save it for later output.\n\nfunction process_input_line(line, \\\n\t\t\t    f, field, end, n, outline, r, \\\n\t\t\t    linkline, ruleline, zoneline)\n{\n  # Remove comments, normalize spaces, and append a space to each line.\n  sub(/#.*/, \"\", line)\n  line = line \" \"\n  gsub(/[\\t ]+/, \" \", line)\n\n  # Abbreviate keywords and determine line type.\n  linkline = sub(/^Link /, \"L \", line)\n  ruleline = sub(/^Rule /, \"R \", line)\n  zoneline = sub(/^Zone /, \"Z \", line)\n\n  # Replace FooAsia rules with the same rules without \"Asia\", as they\n  # are duplicates.\n  if (match(line, /[^ ]Asia /)) {\n    if (ruleline) return\n    line = substr(line, 1, RSTART) substr(line, RSTART + 5)\n  }\n\n  # Abbreviate times.\n  while (match(line, /[: ]0+[0-9]/))\n    line = substr(line, 1, RSTART) substr(line, RSTART + RLENGTH - 1)\n  while (match(line, /:0[^:]/))\n    line = substr(line, 1, RSTART - 1) substr(line, RSTART + 2)\n\n  # Abbreviate weekday names.\n  while (match(line, / (last)?(Mon|Wed|Fri)[ <>]/)) {\n    end = RSTART + RLENGTH\n    line = substr(line, 1, end - 4) substr(line, end - 1)\n  }\n  while (match(line, / (last)?(Sun|Tue|Thu|Sat)[ <>]/)) {\n    end = RSTART + RLENGTH\n    line = substr(line, 1, end - 3) substr(line, end - 1)\n  }\n\n  # Abbreviate \"max\", \"min\", \"only\" and month names.\n  # Although \"max\" and \"min\" can both be abbreviated to just \"m\",\n  # the longer forms \"ma\" and \"mi\" are needed with zic 2023d and earlier.\n  gsub(/ max /, dataform == \"vanguard\" ? \" m \" : \" ma \", line)\n  gsub(/ min /, dataform == \"vanguard\" ? \" m \" : \" mi \", line)\n  gsub(/ only /, \" o \", line)\n  gsub(/ Jan /, \" Ja \", line)\n  gsub(/ Feb /, \" F \", line)\n  gsub(/ Apr /, \" Ap \", line)\n  gsub(/ Aug /, \" Au \", line)\n  gsub(/ Sep /, \" S \", line)\n  gsub(/ Oct /, \" O \", line)\n  gsub(/ Nov /, \" N \", line)\n  gsub(/ Dec /, \" D \", line)\n\n  # Strip leading and trailing space.\n  sub(/^ /, \"\", line)\n  sub(/ $/, \"\", line)\n\n  # Remove unnecessary trailing zero fields.\n  sub(/ 0+$/, \"\", line)\n\n  # Remove unnecessary trailing days-of-month \"1\".\n  if (match(line, /[A-Za-z] 1$/))\n    line = substr(line, 1, RSTART)\n\n  # Remove unnecessary trailing \" Ja\" (for January).\n  sub(/ Ja$/, \"\", line)\n\n  n = split(line, field)\n\n  # Record which rule names are used, and generate their abbreviations.\n  f = zoneline ? 4 : linkline || ruleline ? 0 : 2\n  r = field[f]\n  if (r ~ /^[^-+0-9]/) {\n    rule_used[r] = 1\n  }\n\n  if (zoneline)\n    zonename = startdef = field[2]\n  else if (linkline)\n    zonename = startdef = field[3]\n  else if (ruleline)\n    zonename = \"\"\n\n  # Save the information for later output.\n  outline = make_line(n, field)\n  if (ruleline)\n    rule_output_line[nrule_out++] = outline\n  else if (linkline) {\n    # In vanguard format with Gawk, links are output sorted by destination.\n    if (dataform == \"vanguard\" && PROCINFO[\"version\"])\n      linkdef[zonename] = field[2]\n    else\n      link_output_line[nlink_out++] = outline\n  }else\n    zonedef[zonename] = (zoneline ? \"\" : zonedef[zonename] \"\\n\") outline\n}\n\nfunction omit_unused_rules( \\\n\t\t\t   i, field)\n{\n  for (i = 0; i < nrule_out; i++) {\n    split(rule_output_line[i], field)\n    if (!rule_used[field[2]])\n      rule_output_line[i] = \"\"\n  }\n}\n\nfunction abbreviate_rule_names( \\\n\t\t\t       abbr, f, field, i, n, newdef, newline, r, \\\n\t\t\t       zoneline, zonelines, zonename)\n{\n  for (i = 0; i < nrule_out; i++) {\n    n = split(rule_output_line[i], field)\n    if (n) {\n      r = field[2]\n      if (r ~ /^[^-+0-9]/) {\n\tabbr = rule[r]\n\tif (!abbr) {\n\t  rule[r] = abbr = gen_rule_name(r)\n\t}\n\tfield[2] = abbr\n\trule_output_line[i] = make_line(n, field)\n      }\n    }\n  }\n  for (zonename in zonedef) {\n    zonelines = split(zonedef[zonename], zoneline, /\\n/)\n    newdef = \"\"\n    for (i = 1; i <= zonelines; i++) {\n      newline = zoneline[i]\n      n = split(newline, field)\n      f = i == 1 ? 4 : 2\n      r = rule[field[f]]\n      if (r) {\n\tfield[f] = r\n\tnewline = make_line(n, field)\n      }\n      newdef = (newdef ? newdef \"\\n\" : \"\") newline\n    }\n    zonedef[zonename] = newdef\n  }\n}\n\nfunction output_saved_lines( \\\n\t\t\t    i, zonename)\n{\n  for (i = 0; i < nrule_out; i++)\n    if (rule_output_line[i])\n      print rule_output_line[i]\n\n  # When using gawk, output zones sorted by name.\n  # This makes the output a bit more compressible.\n  PROCINFO[\"sorted_in\"] = \"@ind_str_asc\"\n  for (zonename in zonedef)\n    print zonedef[zonename]\n\n  if (nlink_out)\n    for (i = 0; i < nlink_out; i++)\n      print link_output_line[i]\n  else {\n    # When using gawk, output links sorted by destination.\n    # This also helps compressibility a bit.\n    PROCINFO[\"sorted_in\"] = \"@val_type_asc\"\n    for (zonename in linkdef)\n      printf \"L %s %s\\n\", linkdef[zonename], zonename\n  }\n}\n\nBEGIN {\n  # Files that the output normally depends on.\n  default_dep[\"africa\"] = 1\n  default_dep[\"antarctica\"] = 1\n  default_dep[\"asia\"] = 1\n  default_dep[\"australasia\"] = 1\n  default_dep[\"backward\"] = 1\n  default_dep[\"etcetera\"] = 1\n  default_dep[\"europe\"] = 1\n  default_dep[\"factory\"] = 1\n  default_dep[\"northamerica\"] = 1\n  default_dep[\"southamerica\"] = 1\n  default_dep[\"ziguard.awk\"] = 1\n  default_dep[\"zishrink.awk\"] = 1\n\n  # Output a version string from 'version' and related configuration variables\n  # supported by tzdb's Makefile.  If you change the makefile or any other files\n  # that affect the output of this script, you should append '-SOMETHING'\n  # to the contents of 'version', where SOMETHING identifies what was changed.\n\n  ndeps = split(deps, dep)\n  ddeps = \"\"\n  for (i = 1; i <= ndeps; i++) {\n    if (default_dep[dep[i]]) {\n      default_dep[dep[i]]++\n    } else {\n      ddeps = ddeps \" \" dep[i]\n    }\n  }\n  for (d in default_dep) {\n    if (default_dep[d] == 1) {\n      ddeps = ddeps \" !\" d\n    }\n  }\n  print \"# version\", version\n  if (dataform != \"main\") {\n    print \"# dataform\", dataform\n  }\n  if (redo != \"posix_right\") {\n    print \"# redo \" redo\n  }\n  if (ddeps) {\n    print \"# ddeps\" ddeps\n  }\n  print \"# This zic input file is in the public domain.\"\n\n  prehash_rule_names()\n}\n\n/^[\\t ]*[^#\\t ]/ {\n  process_input_line($0)\n}\n\nEND {\n  omit_unused_rules()\n  abbreviate_rule_names()\n  output_saved_lines()\n}\n"
        },
        {
          "name": "zone.tab",
          "type": "blob",
          "size": 18.3388671875,
          "content": "# tzdb timezone descriptions (deprecated version)\n#\n# This file is in the public domain, so clarified as of\n# 2009-05-17 by Arthur David Olson.\n#\n# From Paul Eggert (2021-09-20):\n# This file is intended as a backward-compatibility aid for older programs.\n# New programs should use zone1970.tab.  This file is like zone1970.tab (see\n# zone1970.tab's comments), but with the following additional restrictions:\n#\n# 1.  This file contains only ASCII characters.\n# 2.  The first data column contains exactly one country code.\n#\n# Because of (2), each row stands for an area that is the intersection\n# of a region identified by a country code and of a timezone where civil\n# clocks have agreed since 1970; this is a narrower definition than\n# that of zone1970.tab.\n#\n# Unlike zone1970.tab, a row's third column can be a Link from\n# 'backward' instead of a Zone.\n#\n# This table is intended as an aid for users, to help them select timezones\n# appropriate for their practical needs.  It is not intended to take or\n# endorse any position on legal or territorial claims.\n#\n#country-\n#code\tcoordinates\tTZ\t\t\tcomments\nAD\t+4230+00131\tEurope/Andorra\nAE\t+2518+05518\tAsia/Dubai\nAF\t+3431+06912\tAsia/Kabul\nAG\t+1703-06148\tAmerica/Antigua\nAI\t+1812-06304\tAmerica/Anguilla\nAL\t+4120+01950\tEurope/Tirane\nAM\t+4011+04430\tAsia/Yerevan\nAO\t-0848+01314\tAfrica/Luanda\nAQ\t-7750+16636\tAntarctica/McMurdo\tNew Zealand time - McMurdo, South Pole\nAQ\t-6617+11031\tAntarctica/Casey\tCasey\nAQ\t-6835+07758\tAntarctica/Davis\tDavis\nAQ\t-6640+14001\tAntarctica/DumontDUrville\tDumont-d'Urville\nAQ\t-6736+06253\tAntarctica/Mawson\tMawson\nAQ\t-6448-06406\tAntarctica/Palmer\tPalmer\nAQ\t-6734-06808\tAntarctica/Rothera\tRothera\nAQ\t-690022+0393524\tAntarctica/Syowa\tSyowa\nAQ\t-720041+0023206\tAntarctica/Troll\tTroll\nAQ\t-7824+10654\tAntarctica/Vostok\tVostok\nAR\t-3436-05827\tAmerica/Argentina/Buenos_Aires\tBuenos Aires (BA, CF)\nAR\t-3124-06411\tAmerica/Argentina/Cordoba\tArgentina (most areas: CB, CC, CN, ER, FM, MN, SE, SF)\nAR\t-2447-06525\tAmerica/Argentina/Salta\tSalta (SA, LP, NQ, RN)\nAR\t-2411-06518\tAmerica/Argentina/Jujuy\tJujuy (JY)\nAR\t-2649-06513\tAmerica/Argentina/Tucuman\tTucuman (TM)\nAR\t-2828-06547\tAmerica/Argentina/Catamarca\tCatamarca (CT), Chubut (CH)\nAR\t-2926-06651\tAmerica/Argentina/La_Rioja\tLa Rioja (LR)\nAR\t-3132-06831\tAmerica/Argentina/San_Juan\tSan Juan (SJ)\nAR\t-3253-06849\tAmerica/Argentina/Mendoza\tMendoza (MZ)\nAR\t-3319-06621\tAmerica/Argentina/San_Luis\tSan Luis (SL)\nAR\t-5138-06913\tAmerica/Argentina/Rio_Gallegos\tSanta Cruz (SC)\nAR\t-5448-06818\tAmerica/Argentina/Ushuaia\tTierra del Fuego (TF)\nAS\t-1416-17042\tPacific/Pago_Pago\nAT\t+4813+01620\tEurope/Vienna\nAU\t-3133+15905\tAustralia/Lord_Howe\tLord Howe Island\nAU\t-5430+15857\tAntarctica/Macquarie\tMacquarie Island\nAU\t-4253+14719\tAustralia/Hobart\tTasmania\nAU\t-3749+14458\tAustralia/Melbourne\tVictoria\nAU\t-3352+15113\tAustralia/Sydney\tNew South Wales (most areas)\nAU\t-3157+14127\tAustralia/Broken_Hill\tNew South Wales (Yancowinna)\nAU\t-2728+15302\tAustralia/Brisbane\tQueensland (most areas)\nAU\t-2016+14900\tAustralia/Lindeman\tQueensland (Whitsunday Islands)\nAU\t-3455+13835\tAustralia/Adelaide\tSouth Australia\nAU\t-1228+13050\tAustralia/Darwin\tNorthern Territory\nAU\t-3157+11551\tAustralia/Perth\tWestern Australia (most areas)\nAU\t-3143+12852\tAustralia/Eucla\tWestern Australia (Eucla)\nAW\t+1230-06958\tAmerica/Aruba\nAX\t+6006+01957\tEurope/Mariehamn\nAZ\t+4023+04951\tAsia/Baku\nBA\t+4352+01825\tEurope/Sarajevo\nBB\t+1306-05937\tAmerica/Barbados\nBD\t+2343+09025\tAsia/Dhaka\nBE\t+5050+00420\tEurope/Brussels\nBF\t+1222-00131\tAfrica/Ouagadougou\nBG\t+4241+02319\tEurope/Sofia\nBH\t+2623+05035\tAsia/Bahrain\nBI\t-0323+02922\tAfrica/Bujumbura\nBJ\t+0629+00237\tAfrica/Porto-Novo\nBL\t+1753-06251\tAmerica/St_Barthelemy\nBM\t+3217-06446\tAtlantic/Bermuda\nBN\t+0456+11455\tAsia/Brunei\nBO\t-1630-06809\tAmerica/La_Paz\nBQ\t+120903-0681636\tAmerica/Kralendijk\nBR\t-0351-03225\tAmerica/Noronha\tAtlantic islands\nBR\t-0127-04829\tAmerica/Belem\tPara (east), Amapa\nBR\t-0343-03830\tAmerica/Fortaleza\tBrazil (northeast: MA, PI, CE, RN, PB)\nBR\t-0803-03454\tAmerica/Recife\tPernambuco\nBR\t-0712-04812\tAmerica/Araguaina\tTocantins\nBR\t-0940-03543\tAmerica/Maceio\tAlagoas, Sergipe\nBR\t-1259-03831\tAmerica/Bahia\tBahia\nBR\t-2332-04637\tAmerica/Sao_Paulo\tBrazil (southeast: GO, DF, MG, ES, RJ, SP, PR, SC, RS)\nBR\t-2027-05437\tAmerica/Campo_Grande\tMato Grosso do Sul\nBR\t-1535-05605\tAmerica/Cuiaba\tMato Grosso\nBR\t-0226-05452\tAmerica/Santarem\tPara (west)\nBR\t-0846-06354\tAmerica/Porto_Velho\tRondonia\nBR\t+0249-06040\tAmerica/Boa_Vista\tRoraima\nBR\t-0308-06001\tAmerica/Manaus\tAmazonas (east)\nBR\t-0640-06952\tAmerica/Eirunepe\tAmazonas (west)\nBR\t-0958-06748\tAmerica/Rio_Branco\tAcre\nBS\t+2505-07721\tAmerica/Nassau\nBT\t+2728+08939\tAsia/Thimphu\nBW\t-2439+02555\tAfrica/Gaborone\nBY\t+5354+02734\tEurope/Minsk\nBZ\t+1730-08812\tAmerica/Belize\nCA\t+4734-05243\tAmerica/St_Johns\tNewfoundland, Labrador (SE)\nCA\t+4439-06336\tAmerica/Halifax\tAtlantic - NS (most areas), PE\nCA\t+4612-05957\tAmerica/Glace_Bay\tAtlantic - NS (Cape Breton)\nCA\t+4606-06447\tAmerica/Moncton\tAtlantic - New Brunswick\nCA\t+5320-06025\tAmerica/Goose_Bay\tAtlantic - Labrador (most areas)\nCA\t+5125-05707\tAmerica/Blanc-Sablon\tAST - QC (Lower North Shore)\nCA\t+4339-07923\tAmerica/Toronto\tEastern - ON & QC (most areas)\nCA\t+6344-06828\tAmerica/Iqaluit\tEastern - NU (most areas)\nCA\t+484531-0913718\tAmerica/Atikokan\tEST - ON (Atikokan), NU (Coral H)\nCA\t+4953-09709\tAmerica/Winnipeg\tCentral - ON (west), Manitoba\nCA\t+744144-0944945\tAmerica/Resolute\tCentral - NU (Resolute)\nCA\t+624900-0920459\tAmerica/Rankin_Inlet\tCentral - NU (central)\nCA\t+5024-10439\tAmerica/Regina\tCST - SK (most areas)\nCA\t+5017-10750\tAmerica/Swift_Current\tCST - SK (midwest)\nCA\t+5333-11328\tAmerica/Edmonton\tMountain - AB, BC(E), NT(E), SK(W)\nCA\t+690650-1050310\tAmerica/Cambridge_Bay\tMountain - NU (west)\nCA\t+682059-1334300\tAmerica/Inuvik\tMountain - NT (west)\nCA\t+4906-11631\tAmerica/Creston\tMST - BC (Creston)\nCA\t+5546-12014\tAmerica/Dawson_Creek\tMST - BC (Dawson Cr, Ft St John)\nCA\t+5848-12242\tAmerica/Fort_Nelson\tMST - BC (Ft Nelson)\nCA\t+6043-13503\tAmerica/Whitehorse\tMST - Yukon (east)\nCA\t+6404-13925\tAmerica/Dawson\tMST - Yukon (west)\nCA\t+4916-12307\tAmerica/Vancouver\tPacific - BC (most areas)\nCC\t-1210+09655\tIndian/Cocos\nCD\t-0418+01518\tAfrica/Kinshasa\tDem. Rep. of Congo (west)\nCD\t-1140+02728\tAfrica/Lubumbashi\tDem. Rep. of Congo (east)\nCF\t+0422+01835\tAfrica/Bangui\nCG\t-0416+01517\tAfrica/Brazzaville\nCH\t+4723+00832\tEurope/Zurich\nCI\t+0519-00402\tAfrica/Abidjan\nCK\t-2114-15946\tPacific/Rarotonga\nCL\t-3327-07040\tAmerica/Santiago\tmost of Chile\nCL\t-5309-07055\tAmerica/Punta_Arenas\tRegion of Magallanes\nCL\t-2709-10926\tPacific/Easter\tEaster Island\nCM\t+0403+00942\tAfrica/Douala\nCN\t+3114+12128\tAsia/Shanghai\tBeijing Time\nCN\t+4348+08735\tAsia/Urumqi\tXinjiang Time\nCO\t+0436-07405\tAmerica/Bogota\nCR\t+0956-08405\tAmerica/Costa_Rica\nCU\t+2308-08222\tAmerica/Havana\nCV\t+1455-02331\tAtlantic/Cape_Verde\nCW\t+1211-06900\tAmerica/Curacao\nCX\t-1025+10543\tIndian/Christmas\nCY\t+3510+03322\tAsia/Nicosia\tmost of Cyprus\nCY\t+3507+03357\tAsia/Famagusta\tNorthern Cyprus\nCZ\t+5005+01426\tEurope/Prague\nDE\t+5230+01322\tEurope/Berlin\tmost of Germany\nDE\t+4742+00841\tEurope/Busingen\tBusingen\nDJ\t+1136+04309\tAfrica/Djibouti\nDK\t+5540+01235\tEurope/Copenhagen\nDM\t+1518-06124\tAmerica/Dominica\nDO\t+1828-06954\tAmerica/Santo_Domingo\nDZ\t+3647+00303\tAfrica/Algiers\nEC\t-0210-07950\tAmerica/Guayaquil\tEcuador (mainland)\nEC\t-0054-08936\tPacific/Galapagos\tGalapagos Islands\nEE\t+5925+02445\tEurope/Tallinn\nEG\t+3003+03115\tAfrica/Cairo\nEH\t+2709-01312\tAfrica/El_Aaiun\nER\t+1520+03853\tAfrica/Asmara\nES\t+4024-00341\tEurope/Madrid\tSpain (mainland)\nES\t+3553-00519\tAfrica/Ceuta\tCeuta, Melilla\nES\t+2806-01524\tAtlantic/Canary\tCanary Islands\nET\t+0902+03842\tAfrica/Addis_Ababa\nFI\t+6010+02458\tEurope/Helsinki\nFJ\t-1808+17825\tPacific/Fiji\nFK\t-5142-05751\tAtlantic/Stanley\nFM\t+0725+15147\tPacific/Chuuk\tChuuk/Truk, Yap\nFM\t+0658+15813\tPacific/Pohnpei\tPohnpei/Ponape\nFM\t+0519+16259\tPacific/Kosrae\tKosrae\nFO\t+6201-00646\tAtlantic/Faroe\nFR\t+4852+00220\tEurope/Paris\nGA\t+0023+00927\tAfrica/Libreville\nGB\t+513030-0000731\tEurope/London\nGD\t+1203-06145\tAmerica/Grenada\nGE\t+4143+04449\tAsia/Tbilisi\nGF\t+0456-05220\tAmerica/Cayenne\nGG\t+492717-0023210\tEurope/Guernsey\nGH\t+0533-00013\tAfrica/Accra\nGI\t+3608-00521\tEurope/Gibraltar\nGL\t+6411-05144\tAmerica/Nuuk\tmost of Greenland\nGL\t+7646-01840\tAmerica/Danmarkshavn\tNational Park (east coast)\nGL\t+7029-02158\tAmerica/Scoresbysund\tScoresbysund/Ittoqqortoormiit\nGL\t+7634-06847\tAmerica/Thule\tThule/Pituffik\nGM\t+1328-01639\tAfrica/Banjul\nGN\t+0931-01343\tAfrica/Conakry\nGP\t+1614-06132\tAmerica/Guadeloupe\nGQ\t+0345+00847\tAfrica/Malabo\nGR\t+3758+02343\tEurope/Athens\nGS\t-5416-03632\tAtlantic/South_Georgia\nGT\t+1438-09031\tAmerica/Guatemala\nGU\t+1328+14445\tPacific/Guam\nGW\t+1151-01535\tAfrica/Bissau\nGY\t+0648-05810\tAmerica/Guyana\nHK\t+2217+11409\tAsia/Hong_Kong\nHN\t+1406-08713\tAmerica/Tegucigalpa\nHR\t+4548+01558\tEurope/Zagreb\nHT\t+1832-07220\tAmerica/Port-au-Prince\nHU\t+4730+01905\tEurope/Budapest\nID\t-0610+10648\tAsia/Jakarta\tJava, Sumatra\nID\t-0002+10920\tAsia/Pontianak\tBorneo (west, central)\nID\t-0507+11924\tAsia/Makassar\tBorneo (east, south), Sulawesi/Celebes, Bali, Nusa Tengarra, Timor (west)\nID\t-0232+14042\tAsia/Jayapura\tNew Guinea (West Papua / Irian Jaya), Malukus/Moluccas\nIE\t+5320-00615\tEurope/Dublin\nIL\t+314650+0351326\tAsia/Jerusalem\nIM\t+5409-00428\tEurope/Isle_of_Man\nIN\t+2232+08822\tAsia/Kolkata\nIO\t-0720+07225\tIndian/Chagos\nIQ\t+3321+04425\tAsia/Baghdad\nIR\t+3540+05126\tAsia/Tehran\nIS\t+6409-02151\tAtlantic/Reykjavik\nIT\t+4154+01229\tEurope/Rome\nJE\t+491101-0020624\tEurope/Jersey\nJM\t+175805-0764736\tAmerica/Jamaica\nJO\t+3157+03556\tAsia/Amman\nJP\t+353916+1394441\tAsia/Tokyo\nKE\t-0117+03649\tAfrica/Nairobi\nKG\t+4254+07436\tAsia/Bishkek\nKH\t+1133+10455\tAsia/Phnom_Penh\nKI\t+0125+17300\tPacific/Tarawa\tGilbert Islands\nKI\t-0247-17143\tPacific/Kanton\tPhoenix Islands\nKI\t+0152-15720\tPacific/Kiritimati\tLine Islands\nKM\t-1141+04316\tIndian/Comoro\nKN\t+1718-06243\tAmerica/St_Kitts\nKP\t+3901+12545\tAsia/Pyongyang\nKR\t+3733+12658\tAsia/Seoul\nKW\t+2920+04759\tAsia/Kuwait\nKY\t+1918-08123\tAmerica/Cayman\nKZ\t+4315+07657\tAsia/Almaty\tmost of Kazakhstan\nKZ\t+4448+06528\tAsia/Qyzylorda\tQyzylorda/Kyzylorda/Kzyl-Orda\nKZ\t+5312+06337\tAsia/Qostanay\tQostanay/Kostanay/Kustanay\nKZ\t+5017+05710\tAsia/Aqtobe\tAqtobe/Aktobe\nKZ\t+4431+05016\tAsia/Aqtau\tMangghystau/Mankistau\nKZ\t+4707+05156\tAsia/Atyrau\tAtyrau/Atirau/Gur'yev\nKZ\t+5113+05121\tAsia/Oral\tWest Kazakhstan\nLA\t+1758+10236\tAsia/Vientiane\nLB\t+3353+03530\tAsia/Beirut\nLC\t+1401-06100\tAmerica/St_Lucia\nLI\t+4709+00931\tEurope/Vaduz\nLK\t+0656+07951\tAsia/Colombo\nLR\t+0618-01047\tAfrica/Monrovia\nLS\t-2928+02730\tAfrica/Maseru\nLT\t+5441+02519\tEurope/Vilnius\nLU\t+4936+00609\tEurope/Luxembourg\nLV\t+5657+02406\tEurope/Riga\nLY\t+3254+01311\tAfrica/Tripoli\nMA\t+3339-00735\tAfrica/Casablanca\nMC\t+4342+00723\tEurope/Monaco\nMD\t+4700+02850\tEurope/Chisinau\nME\t+4226+01916\tEurope/Podgorica\nMF\t+1804-06305\tAmerica/Marigot\nMG\t-1855+04731\tIndian/Antananarivo\nMH\t+0709+17112\tPacific/Majuro\tmost of Marshall Islands\nMH\t+0905+16720\tPacific/Kwajalein\tKwajalein\nMK\t+4159+02126\tEurope/Skopje\nML\t+1239-00800\tAfrica/Bamako\nMM\t+1647+09610\tAsia/Yangon\nMN\t+4755+10653\tAsia/Ulaanbaatar\tmost of Mongolia\nMN\t+4801+09139\tAsia/Hovd\tBayan-Olgii, Hovd, Uvs\nMO\t+221150+1133230\tAsia/Macau\nMP\t+1512+14545\tPacific/Saipan\nMQ\t+1436-06105\tAmerica/Martinique\nMR\t+1806-01557\tAfrica/Nouakchott\nMS\t+1643-06213\tAmerica/Montserrat\nMT\t+3554+01431\tEurope/Malta\nMU\t-2010+05730\tIndian/Mauritius\nMV\t+0410+07330\tIndian/Maldives\nMW\t-1547+03500\tAfrica/Blantyre\nMX\t+1924-09909\tAmerica/Mexico_City\tCentral Mexico\nMX\t+2105-08646\tAmerica/Cancun\tQuintana Roo\nMX\t+2058-08937\tAmerica/Merida\tCampeche, Yucatan\nMX\t+2540-10019\tAmerica/Monterrey\tDurango; Coahuila, Nuevo Leon, Tamaulipas (most areas)\nMX\t+2550-09730\tAmerica/Matamoros\tCoahuila, Nuevo Leon, Tamaulipas (US border)\nMX\t+2838-10605\tAmerica/Chihuahua\tChihuahua (most areas)\nMX\t+3144-10629\tAmerica/Ciudad_Juarez\tChihuahua (US border - west)\nMX\t+2934-10425\tAmerica/Ojinaga\tChihuahua (US border - east)\nMX\t+2313-10625\tAmerica/Mazatlan\tBaja California Sur, Nayarit (most areas), Sinaloa\nMX\t+2048-10515\tAmerica/Bahia_Banderas\tBahia de Banderas\nMX\t+2904-11058\tAmerica/Hermosillo\tSonora\nMX\t+3232-11701\tAmerica/Tijuana\tBaja California\nMY\t+0310+10142\tAsia/Kuala_Lumpur\tMalaysia (peninsula)\nMY\t+0133+11020\tAsia/Kuching\tSabah, Sarawak\nMZ\t-2558+03235\tAfrica/Maputo\nNA\t-2234+01706\tAfrica/Windhoek\nNC\t-2216+16627\tPacific/Noumea\nNE\t+1331+00207\tAfrica/Niamey\nNF\t-2903+16758\tPacific/Norfolk\nNG\t+0627+00324\tAfrica/Lagos\nNI\t+1209-08617\tAmerica/Managua\nNL\t+5222+00454\tEurope/Amsterdam\nNO\t+5955+01045\tEurope/Oslo\nNP\t+2743+08519\tAsia/Kathmandu\nNR\t-0031+16655\tPacific/Nauru\nNU\t-1901-16955\tPacific/Niue\nNZ\t-3652+17446\tPacific/Auckland\tmost of New Zealand\nNZ\t-4357-17633\tPacific/Chatham\tChatham Islands\nOM\t+2336+05835\tAsia/Muscat\nPA\t+0858-07932\tAmerica/Panama\nPE\t-1203-07703\tAmerica/Lima\nPF\t-1732-14934\tPacific/Tahiti\tSociety Islands\nPF\t-0900-13930\tPacific/Marquesas\tMarquesas Islands\nPF\t-2308-13457\tPacific/Gambier\tGambier Islands\nPG\t-0930+14710\tPacific/Port_Moresby\tmost of Papua New Guinea\nPG\t-0613+15534\tPacific/Bougainville\tBougainville\nPH\t+143512+1205804\tAsia/Manila\nPK\t+2452+06703\tAsia/Karachi\nPL\t+5215+02100\tEurope/Warsaw\nPM\t+4703-05620\tAmerica/Miquelon\nPN\t-2504-13005\tPacific/Pitcairn\nPR\t+182806-0660622\tAmerica/Puerto_Rico\nPS\t+3130+03428\tAsia/Gaza\tGaza Strip\nPS\t+313200+0350542\tAsia/Hebron\tWest Bank\nPT\t+3843-00908\tEurope/Lisbon\tPortugal (mainland)\nPT\t+3238-01654\tAtlantic/Madeira\tMadeira Islands\nPT\t+3744-02540\tAtlantic/Azores\tAzores\nPW\t+0720+13429\tPacific/Palau\nPY\t-2516-05740\tAmerica/Asuncion\nQA\t+2517+05132\tAsia/Qatar\nRE\t-2052+05528\tIndian/Reunion\nRO\t+4426+02606\tEurope/Bucharest\nRS\t+4450+02030\tEurope/Belgrade\nRU\t+5443+02030\tEurope/Kaliningrad\tMSK-01 - Kaliningrad\nRU\t+554521+0373704\tEurope/Moscow\tMSK+00 - Moscow area\n# The obsolescent zone.tab format cannot represent Europe/Simferopol well.\n# Put it in RU section and list as UA.  See \"territorial claims\" above.\n# Programs should use zone1970.tab instead; see above.\nUA\t+4457+03406\tEurope/Simferopol\tCrimea\nRU\t+5836+04939\tEurope/Kirov\tMSK+00 - Kirov\nRU\t+4844+04425\tEurope/Volgograd\tMSK+00 - Volgograd\nRU\t+4621+04803\tEurope/Astrakhan\tMSK+01 - Astrakhan\nRU\t+5134+04602\tEurope/Saratov\tMSK+01 - Saratov\nRU\t+5420+04824\tEurope/Ulyanovsk\tMSK+01 - Ulyanovsk\nRU\t+5312+05009\tEurope/Samara\tMSK+01 - Samara, Udmurtia\nRU\t+5651+06036\tAsia/Yekaterinburg\tMSK+02 - Urals\nRU\t+5500+07324\tAsia/Omsk\tMSK+03 - Omsk\nRU\t+5502+08255\tAsia/Novosibirsk\tMSK+04 - Novosibirsk\nRU\t+5322+08345\tAsia/Barnaul\tMSK+04 - Altai\nRU\t+5630+08458\tAsia/Tomsk\tMSK+04 - Tomsk\nRU\t+5345+08707\tAsia/Novokuznetsk\tMSK+04 - Kemerovo\nRU\t+5601+09250\tAsia/Krasnoyarsk\tMSK+04 - Krasnoyarsk area\nRU\t+5216+10420\tAsia/Irkutsk\tMSK+05 - Irkutsk, Buryatia\nRU\t+5203+11328\tAsia/Chita\tMSK+06 - Zabaykalsky\nRU\t+6200+12940\tAsia/Yakutsk\tMSK+06 - Lena River\nRU\t+623923+1353314\tAsia/Khandyga\tMSK+06 - Tomponsky, Ust-Maysky\nRU\t+4310+13156\tAsia/Vladivostok\tMSK+07 - Amur River\nRU\t+643337+1431336\tAsia/Ust-Nera\tMSK+07 - Oymyakonsky\nRU\t+5934+15048\tAsia/Magadan\tMSK+08 - Magadan\nRU\t+4658+14242\tAsia/Sakhalin\tMSK+08 - Sakhalin Island\nRU\t+6728+15343\tAsia/Srednekolymsk\tMSK+08 - Sakha (E), N Kuril Is\nRU\t+5301+15839\tAsia/Kamchatka\tMSK+09 - Kamchatka\nRU\t+6445+17729\tAsia/Anadyr\tMSK+09 - Bering Sea\nRW\t-0157+03004\tAfrica/Kigali\nSA\t+2438+04643\tAsia/Riyadh\nSB\t-0932+16012\tPacific/Guadalcanal\nSC\t-0440+05528\tIndian/Mahe\nSD\t+1536+03232\tAfrica/Khartoum\nSE\t+5920+01803\tEurope/Stockholm\nSG\t+0117+10351\tAsia/Singapore\nSH\t-1555-00542\tAtlantic/St_Helena\nSI\t+4603+01431\tEurope/Ljubljana\nSJ\t+7800+01600\tArctic/Longyearbyen\nSK\t+4809+01707\tEurope/Bratislava\nSL\t+0830-01315\tAfrica/Freetown\nSM\t+4355+01228\tEurope/San_Marino\nSN\t+1440-01726\tAfrica/Dakar\nSO\t+0204+04522\tAfrica/Mogadishu\nSR\t+0550-05510\tAmerica/Paramaribo\nSS\t+0451+03137\tAfrica/Juba\nST\t+0020+00644\tAfrica/Sao_Tome\nSV\t+1342-08912\tAmerica/El_Salvador\nSX\t+180305-0630250\tAmerica/Lower_Princes\nSY\t+3330+03618\tAsia/Damascus\nSZ\t-2618+03106\tAfrica/Mbabane\nTC\t+2128-07108\tAmerica/Grand_Turk\nTD\t+1207+01503\tAfrica/Ndjamena\nTF\t-492110+0701303\tIndian/Kerguelen\nTG\t+0608+00113\tAfrica/Lome\nTH\t+1345+10031\tAsia/Bangkok\nTJ\t+3835+06848\tAsia/Dushanbe\nTK\t-0922-17114\tPacific/Fakaofo\nTL\t-0833+12535\tAsia/Dili\nTM\t+3757+05823\tAsia/Ashgabat\nTN\t+3648+01011\tAfrica/Tunis\nTO\t-210800-1751200\tPacific/Tongatapu\nTR\t+4101+02858\tEurope/Istanbul\nTT\t+1039-06131\tAmerica/Port_of_Spain\nTV\t-0831+17913\tPacific/Funafuti\nTW\t+2503+12130\tAsia/Taipei\nTZ\t-0648+03917\tAfrica/Dar_es_Salaam\nUA\t+5026+03031\tEurope/Kyiv\tmost of Ukraine\nUG\t+0019+03225\tAfrica/Kampala\nUM\t+2813-17722\tPacific/Midway\tMidway Islands\nUM\t+1917+16637\tPacific/Wake\tWake Island\nUS\t+404251-0740023\tAmerica/New_York\tEastern (most areas)\nUS\t+421953-0830245\tAmerica/Detroit\tEastern - MI (most areas)\nUS\t+381515-0854534\tAmerica/Kentucky/Louisville\tEastern - KY (Louisville area)\nUS\t+364947-0845057\tAmerica/Kentucky/Monticello\tEastern - KY (Wayne)\nUS\t+394606-0860929\tAmerica/Indiana/Indianapolis\tEastern - IN (most areas)\nUS\t+384038-0873143\tAmerica/Indiana/Vincennes\tEastern - IN (Da, Du, K, Mn)\nUS\t+410305-0863611\tAmerica/Indiana/Winamac\tEastern - IN (Pulaski)\nUS\t+382232-0862041\tAmerica/Indiana/Marengo\tEastern - IN (Crawford)\nUS\t+382931-0871643\tAmerica/Indiana/Petersburg\tEastern - IN (Pike)\nUS\t+384452-0850402\tAmerica/Indiana/Vevay\tEastern - IN (Switzerland)\nUS\t+415100-0873900\tAmerica/Chicago\tCentral (most areas)\nUS\t+375711-0864541\tAmerica/Indiana/Tell_City\tCentral - IN (Perry)\nUS\t+411745-0863730\tAmerica/Indiana/Knox\tCentral - IN (Starke)\nUS\t+450628-0873651\tAmerica/Menominee\tCentral - MI (Wisconsin border)\nUS\t+470659-1011757\tAmerica/North_Dakota/Center\tCentral - ND (Oliver)\nUS\t+465042-1012439\tAmerica/North_Dakota/New_Salem\tCentral - ND (Morton rural)\nUS\t+471551-1014640\tAmerica/North_Dakota/Beulah\tCentral - ND (Mercer)\nUS\t+394421-1045903\tAmerica/Denver\tMountain (most areas)\nUS\t+433649-1161209\tAmerica/Boise\tMountain - ID (south), OR (east)\nUS\t+332654-1120424\tAmerica/Phoenix\tMST - AZ (except Navajo)\nUS\t+340308-1181434\tAmerica/Los_Angeles\tPacific\nUS\t+611305-1495401\tAmerica/Anchorage\tAlaska (most areas)\nUS\t+581807-1342511\tAmerica/Juneau\tAlaska - Juneau area\nUS\t+571035-1351807\tAmerica/Sitka\tAlaska - Sitka area\nUS\t+550737-1313435\tAmerica/Metlakatla\tAlaska - Annette Island\nUS\t+593249-1394338\tAmerica/Yakutat\tAlaska - Yakutat\nUS\t+643004-1652423\tAmerica/Nome\tAlaska (west)\nUS\t+515248-1763929\tAmerica/Adak\tAlaska - western Aleutians\nUS\t+211825-1575130\tPacific/Honolulu\tHawaii\nUY\t-345433-0561245\tAmerica/Montevideo\nUZ\t+3940+06648\tAsia/Samarkand\tUzbekistan (west)\nUZ\t+4120+06918\tAsia/Tashkent\tUzbekistan (east)\nVA\t+415408+0122711\tEurope/Vatican\nVC\t+1309-06114\tAmerica/St_Vincent\nVE\t+1030-06656\tAmerica/Caracas\nVG\t+1827-06437\tAmerica/Tortola\nVI\t+1821-06456\tAmerica/St_Thomas\nVN\t+1045+10640\tAsia/Ho_Chi_Minh\nVU\t-1740+16825\tPacific/Efate\nWF\t-1318-17610\tPacific/Wallis\nWS\t-1350-17144\tPacific/Apia\nYE\t+1245+04512\tAsia/Aden\nYT\t-1247+04514\tIndian/Mayotte\nZA\t-2615+02800\tAfrica/Johannesburg\nZM\t-1525+02817\tAfrica/Lusaka\nZW\t-1750+03103\tAfrica/Harare\n"
        },
        {
          "name": "zone1970.tab",
          "type": "blob",
          "size": 17.1416015625,
          "content": "# tzdb timezone descriptions\n#\n# This file is in the public domain.\n#\n# From Paul Eggert (2018-06-27):\n# This file contains a table where each row stands for a timezone where\n# civil timestamps have agreed since 1970.  Columns are separated by\n# a single tab.  Lines beginning with '#' are comments.  All text uses\n# UTF-8 encoding.  The columns of the table are as follows:\n#\n# 1.  The countries that overlap the timezone, as a comma-separated list\n#     of ISO 3166 2-character country codes.  See the file 'iso3166.tab'.\n# 2.  Latitude and longitude of the timezone's principal location\n#     in ISO 6709 sign-degrees-minutes-seconds format,\n#     either ±DDMM±DDDMM or ±DDMMSS±DDDMMSS,\n#     first latitude (+ is north), then longitude (+ is east).\n# 3.  Timezone name used in value of TZ environment variable.\n#     Please see the theory.html file for how these names are chosen.\n#     If multiple timezones overlap a country, each has a row in the\n#     table, with each column 1 containing the country code.\n# 4.  Comments; present if and only if countries have multiple timezones,\n#     and useful only for those countries.  For example, the comments\n#     for the row with countries CH,DE,LI and name Europe/Zurich\n#     are useful only for DE, since CH and LI have no other timezones.\n#\n# If a timezone covers multiple countries, the most-populous city is used,\n# and that country is listed first in column 1; any other countries\n# are listed alphabetically by country code.  The table is sorted\n# first by country code, then (if possible) by an order within the\n# country that (1) makes some geographical sense, and (2) puts the\n# most populous timezones first, where that does not contradict (1).\n#\n# This table is intended as an aid for users, to help them select timezones\n# appropriate for their practical needs.  It is not intended to take or\n# endorse any position on legal or territorial claims.\n#\n#country-\n#codes\tcoordinates\tTZ\tcomments\nAD\t+4230+00131\tEurope/Andorra\nAE,OM,RE,SC,TF\t+2518+05518\tAsia/Dubai\tCrozet\nAF\t+3431+06912\tAsia/Kabul\nAL\t+4120+01950\tEurope/Tirane\nAM\t+4011+04430\tAsia/Yerevan\nAQ\t-6617+11031\tAntarctica/Casey\tCasey\nAQ\t-6835+07758\tAntarctica/Davis\tDavis\nAQ\t-6736+06253\tAntarctica/Mawson\tMawson\nAQ\t-6448-06406\tAntarctica/Palmer\tPalmer\nAQ\t-6734-06808\tAntarctica/Rothera\tRothera\nAQ\t-720041+0023206\tAntarctica/Troll\tTroll\nAQ\t-7824+10654\tAntarctica/Vostok\tVostok\nAR\t-3436-05827\tAmerica/Argentina/Buenos_Aires\tBuenos Aires (BA, CF)\nAR\t-3124-06411\tAmerica/Argentina/Cordoba\tmost areas: CB, CC, CN, ER, FM, MN, SE, SF\nAR\t-2447-06525\tAmerica/Argentina/Salta\tSalta (SA, LP, NQ, RN)\nAR\t-2411-06518\tAmerica/Argentina/Jujuy\tJujuy (JY)\nAR\t-2649-06513\tAmerica/Argentina/Tucuman\tTucumán (TM)\nAR\t-2828-06547\tAmerica/Argentina/Catamarca\tCatamarca (CT), Chubut (CH)\nAR\t-2926-06651\tAmerica/Argentina/La_Rioja\tLa Rioja (LR)\nAR\t-3132-06831\tAmerica/Argentina/San_Juan\tSan Juan (SJ)\nAR\t-3253-06849\tAmerica/Argentina/Mendoza\tMendoza (MZ)\nAR\t-3319-06621\tAmerica/Argentina/San_Luis\tSan Luis (SL)\nAR\t-5138-06913\tAmerica/Argentina/Rio_Gallegos\tSanta Cruz (SC)\nAR\t-5448-06818\tAmerica/Argentina/Ushuaia\tTierra del Fuego (TF)\nAS,UM\t-1416-17042\tPacific/Pago_Pago\tMidway\nAT\t+4813+01620\tEurope/Vienna\nAU\t-3133+15905\tAustralia/Lord_Howe\tLord Howe Island\nAU\t-5430+15857\tAntarctica/Macquarie\tMacquarie Island\nAU\t-4253+14719\tAustralia/Hobart\tTasmania\nAU\t-3749+14458\tAustralia/Melbourne\tVictoria\nAU\t-3352+15113\tAustralia/Sydney\tNew South Wales (most areas)\nAU\t-3157+14127\tAustralia/Broken_Hill\tNew South Wales (Yancowinna)\nAU\t-2728+15302\tAustralia/Brisbane\tQueensland (most areas)\nAU\t-2016+14900\tAustralia/Lindeman\tQueensland (Whitsunday Islands)\nAU\t-3455+13835\tAustralia/Adelaide\tSouth Australia\nAU\t-1228+13050\tAustralia/Darwin\tNorthern Territory\nAU\t-3157+11551\tAustralia/Perth\tWestern Australia (most areas)\nAU\t-3143+12852\tAustralia/Eucla\tWestern Australia (Eucla)\nAZ\t+4023+04951\tAsia/Baku\nBB\t+1306-05937\tAmerica/Barbados\nBD\t+2343+09025\tAsia/Dhaka\nBE,LU,NL\t+5050+00420\tEurope/Brussels\nBG\t+4241+02319\tEurope/Sofia\nBM\t+3217-06446\tAtlantic/Bermuda\nBO\t-1630-06809\tAmerica/La_Paz\nBR\t-0351-03225\tAmerica/Noronha\tAtlantic islands\nBR\t-0127-04829\tAmerica/Belem\tPará (east), Amapá\nBR\t-0343-03830\tAmerica/Fortaleza\tBrazil (northeast: MA, PI, CE, RN, PB)\nBR\t-0803-03454\tAmerica/Recife\tPernambuco\nBR\t-0712-04812\tAmerica/Araguaina\tTocantins\nBR\t-0940-03543\tAmerica/Maceio\tAlagoas, Sergipe\nBR\t-1259-03831\tAmerica/Bahia\tBahia\nBR\t-2332-04637\tAmerica/Sao_Paulo\tBrazil (southeast: GO, DF, MG, ES, RJ, SP, PR, SC, RS)\nBR\t-2027-05437\tAmerica/Campo_Grande\tMato Grosso do Sul\nBR\t-1535-05605\tAmerica/Cuiaba\tMato Grosso\nBR\t-0226-05452\tAmerica/Santarem\tPará (west)\nBR\t-0846-06354\tAmerica/Porto_Velho\tRondônia\nBR\t+0249-06040\tAmerica/Boa_Vista\tRoraima\nBR\t-0308-06001\tAmerica/Manaus\tAmazonas (east)\nBR\t-0640-06952\tAmerica/Eirunepe\tAmazonas (west)\nBR\t-0958-06748\tAmerica/Rio_Branco\tAcre\nBT\t+2728+08939\tAsia/Thimphu\nBY\t+5354+02734\tEurope/Minsk\nBZ\t+1730-08812\tAmerica/Belize\nCA\t+4734-05243\tAmerica/St_Johns\tNewfoundland, Labrador (SE)\nCA\t+4439-06336\tAmerica/Halifax\tAtlantic - NS (most areas), PE\nCA\t+4612-05957\tAmerica/Glace_Bay\tAtlantic - NS (Cape Breton)\nCA\t+4606-06447\tAmerica/Moncton\tAtlantic - New Brunswick\nCA\t+5320-06025\tAmerica/Goose_Bay\tAtlantic - Labrador (most areas)\nCA,BS\t+4339-07923\tAmerica/Toronto\tEastern - ON & QC (most areas)\nCA\t+6344-06828\tAmerica/Iqaluit\tEastern - NU (most areas)\nCA\t+4953-09709\tAmerica/Winnipeg\tCentral - ON (west), Manitoba\nCA\t+744144-0944945\tAmerica/Resolute\tCentral - NU (Resolute)\nCA\t+624900-0920459\tAmerica/Rankin_Inlet\tCentral - NU (central)\nCA\t+5024-10439\tAmerica/Regina\tCST - SK (most areas)\nCA\t+5017-10750\tAmerica/Swift_Current\tCST - SK (midwest)\nCA\t+5333-11328\tAmerica/Edmonton\tMountain - AB, BC(E), NT(E), SK(W)\nCA\t+690650-1050310\tAmerica/Cambridge_Bay\tMountain - NU (west)\nCA\t+682059-1334300\tAmerica/Inuvik\tMountain - NT (west)\nCA\t+5546-12014\tAmerica/Dawson_Creek\tMST - BC (Dawson Cr, Ft St John)\nCA\t+5848-12242\tAmerica/Fort_Nelson\tMST - BC (Ft Nelson)\nCA\t+6043-13503\tAmerica/Whitehorse\tMST - Yukon (east)\nCA\t+6404-13925\tAmerica/Dawson\tMST - Yukon (west)\nCA\t+4916-12307\tAmerica/Vancouver\tPacific - BC (most areas)\nCH,DE,LI\t+4723+00832\tEurope/Zurich\tBüsingen\nCI,BF,GH,GM,GN,IS,ML,MR,SH,SL,SN,TG\t+0519-00402\tAfrica/Abidjan\nCK\t-2114-15946\tPacific/Rarotonga\nCL\t-3327-07040\tAmerica/Santiago\tmost of Chile\nCL\t-5309-07055\tAmerica/Punta_Arenas\tRegion of Magallanes\nCL\t-2709-10926\tPacific/Easter\tEaster Island\nCN\t+3114+12128\tAsia/Shanghai\tBeijing Time\nCN\t+4348+08735\tAsia/Urumqi\tXinjiang Time\nCO\t+0436-07405\tAmerica/Bogota\nCR\t+0956-08405\tAmerica/Costa_Rica\nCU\t+2308-08222\tAmerica/Havana\nCV\t+1455-02331\tAtlantic/Cape_Verde\nCY\t+3510+03322\tAsia/Nicosia\tmost of Cyprus\nCY\t+3507+03357\tAsia/Famagusta\tNorthern Cyprus\nCZ,SK\t+5005+01426\tEurope/Prague\nDE,DK,NO,SE,SJ\t+5230+01322\tEurope/Berlin\tmost of Germany\nDO\t+1828-06954\tAmerica/Santo_Domingo\nDZ\t+3647+00303\tAfrica/Algiers\nEC\t-0210-07950\tAmerica/Guayaquil\tEcuador (mainland)\nEC\t-0054-08936\tPacific/Galapagos\tGalápagos Islands\nEE\t+5925+02445\tEurope/Tallinn\nEG\t+3003+03115\tAfrica/Cairo\nEH\t+2709-01312\tAfrica/El_Aaiun\nES\t+4024-00341\tEurope/Madrid\tSpain (mainland)\nES\t+3553-00519\tAfrica/Ceuta\tCeuta, Melilla\nES\t+2806-01524\tAtlantic/Canary\tCanary Islands\nFI,AX\t+6010+02458\tEurope/Helsinki\nFJ\t-1808+17825\tPacific/Fiji\nFK\t-5142-05751\tAtlantic/Stanley\nFM\t+0519+16259\tPacific/Kosrae\tKosrae\nFO\t+6201-00646\tAtlantic/Faroe\nFR,MC\t+4852+00220\tEurope/Paris\nGB,GG,IM,JE\t+513030-0000731\tEurope/London\nGE\t+4143+04449\tAsia/Tbilisi\nGF\t+0456-05220\tAmerica/Cayenne\nGI\t+3608-00521\tEurope/Gibraltar\nGL\t+6411-05144\tAmerica/Nuuk\tmost of Greenland\nGL\t+7646-01840\tAmerica/Danmarkshavn\tNational Park (east coast)\nGL\t+7029-02158\tAmerica/Scoresbysund\tScoresbysund/Ittoqqortoormiit\nGL\t+7634-06847\tAmerica/Thule\tThule/Pituffik\nGR\t+3758+02343\tEurope/Athens\nGS\t-5416-03632\tAtlantic/South_Georgia\nGT\t+1438-09031\tAmerica/Guatemala\nGU,MP\t+1328+14445\tPacific/Guam\nGW\t+1151-01535\tAfrica/Bissau\nGY\t+0648-05810\tAmerica/Guyana\nHK\t+2217+11409\tAsia/Hong_Kong\nHN\t+1406-08713\tAmerica/Tegucigalpa\nHT\t+1832-07220\tAmerica/Port-au-Prince\nHU\t+4730+01905\tEurope/Budapest\nID\t-0610+10648\tAsia/Jakarta\tJava, Sumatra\nID\t-0002+10920\tAsia/Pontianak\tBorneo (west, central)\nID\t-0507+11924\tAsia/Makassar\tBorneo (east, south), Sulawesi/Celebes, Bali, Nusa Tengarra, Timor (west)\nID\t-0232+14042\tAsia/Jayapura\tNew Guinea (West Papua / Irian Jaya), Malukus/Moluccas\nIE\t+5320-00615\tEurope/Dublin\nIL\t+314650+0351326\tAsia/Jerusalem\nIN\t+2232+08822\tAsia/Kolkata\nIO\t-0720+07225\tIndian/Chagos\nIQ\t+3321+04425\tAsia/Baghdad\nIR\t+3540+05126\tAsia/Tehran\nIT,SM,VA\t+4154+01229\tEurope/Rome\nJM\t+175805-0764736\tAmerica/Jamaica\nJO\t+3157+03556\tAsia/Amman\nJP,AU\t+353916+1394441\tAsia/Tokyo\tEyre Bird Observatory\nKE,DJ,ER,ET,KM,MG,SO,TZ,UG,YT\t-0117+03649\tAfrica/Nairobi\nKG\t+4254+07436\tAsia/Bishkek\nKI,MH,TV,UM,WF\t+0125+17300\tPacific/Tarawa\tGilberts, Marshalls, Wake\nKI\t-0247-17143\tPacific/Kanton\tPhoenix Islands\nKI\t+0152-15720\tPacific/Kiritimati\tLine Islands\nKP\t+3901+12545\tAsia/Pyongyang\nKR\t+3733+12658\tAsia/Seoul\nKZ\t+4315+07657\tAsia/Almaty\tmost of Kazakhstan\nKZ\t+4448+06528\tAsia/Qyzylorda\tQyzylorda/Kyzylorda/Kzyl-Orda\nKZ\t+5312+06337\tAsia/Qostanay\tQostanay/Kostanay/Kustanay\nKZ\t+5017+05710\tAsia/Aqtobe\tAqtöbe/Aktobe\nKZ\t+4431+05016\tAsia/Aqtau\tMangghystaū/Mankistau\nKZ\t+4707+05156\tAsia/Atyrau\tAtyraū/Atirau/Gur'yev\nKZ\t+5113+05121\tAsia/Oral\tWest Kazakhstan\nLB\t+3353+03530\tAsia/Beirut\nLK\t+0656+07951\tAsia/Colombo\nLR\t+0618-01047\tAfrica/Monrovia\nLT\t+5441+02519\tEurope/Vilnius\nLV\t+5657+02406\tEurope/Riga\nLY\t+3254+01311\tAfrica/Tripoli\nMA\t+3339-00735\tAfrica/Casablanca\nMD\t+4700+02850\tEurope/Chisinau\nMH\t+0905+16720\tPacific/Kwajalein\tKwajalein\nMM,CC\t+1647+09610\tAsia/Yangon\nMN\t+4755+10653\tAsia/Ulaanbaatar\tmost of Mongolia\nMN\t+4801+09139\tAsia/Hovd\tBayan-Ölgii, Hovd, Uvs\nMO\t+221150+1133230\tAsia/Macau\nMQ\t+1436-06105\tAmerica/Martinique\nMT\t+3554+01431\tEurope/Malta\nMU\t-2010+05730\tIndian/Mauritius\nMV,TF\t+0410+07330\tIndian/Maldives\tKerguelen, St Paul I, Amsterdam I\nMX\t+1924-09909\tAmerica/Mexico_City\tCentral Mexico\nMX\t+2105-08646\tAmerica/Cancun\tQuintana Roo\nMX\t+2058-08937\tAmerica/Merida\tCampeche, Yucatán\nMX\t+2540-10019\tAmerica/Monterrey\tDurango; Coahuila, Nuevo León, Tamaulipas (most areas)\nMX\t+2550-09730\tAmerica/Matamoros\tCoahuila, Nuevo León, Tamaulipas (US border)\nMX\t+2838-10605\tAmerica/Chihuahua\tChihuahua (most areas)\nMX\t+3144-10629\tAmerica/Ciudad_Juarez\tChihuahua (US border - west)\nMX\t+2934-10425\tAmerica/Ojinaga\tChihuahua (US border - east)\nMX\t+2313-10625\tAmerica/Mazatlan\tBaja California Sur, Nayarit (most areas), Sinaloa\nMX\t+2048-10515\tAmerica/Bahia_Banderas\tBahía de Banderas\nMX\t+2904-11058\tAmerica/Hermosillo\tSonora\nMX\t+3232-11701\tAmerica/Tijuana\tBaja California\nMY,BN\t+0133+11020\tAsia/Kuching\tSabah, Sarawak\nMZ,BI,BW,CD,MW,RW,ZM,ZW\t-2558+03235\tAfrica/Maputo\tCentral Africa Time\nNA\t-2234+01706\tAfrica/Windhoek\nNC\t-2216+16627\tPacific/Noumea\nNF\t-2903+16758\tPacific/Norfolk\nNG,AO,BJ,CD,CF,CG,CM,GA,GQ,NE\t+0627+00324\tAfrica/Lagos\tWest Africa Time\nNI\t+1209-08617\tAmerica/Managua\nNP\t+2743+08519\tAsia/Kathmandu\nNR\t-0031+16655\tPacific/Nauru\nNU\t-1901-16955\tPacific/Niue\nNZ,AQ\t-3652+17446\tPacific/Auckland\tNew Zealand time\nNZ\t-4357-17633\tPacific/Chatham\tChatham Islands\nPA,CA,KY\t+0858-07932\tAmerica/Panama\tEST - ON (Atikokan), NU (Coral H)\nPE\t-1203-07703\tAmerica/Lima\nPF\t-1732-14934\tPacific/Tahiti\tSociety Islands\nPF\t-0900-13930\tPacific/Marquesas\tMarquesas Islands\nPF\t-2308-13457\tPacific/Gambier\tGambier Islands\nPG,AQ,FM\t-0930+14710\tPacific/Port_Moresby\tPapua New Guinea (most areas), Chuuk, Yap, Dumont d'Urville\nPG\t-0613+15534\tPacific/Bougainville\tBougainville\nPH\t+143512+1205804\tAsia/Manila\nPK\t+2452+06703\tAsia/Karachi\nPL\t+5215+02100\tEurope/Warsaw\nPM\t+4703-05620\tAmerica/Miquelon\nPN\t-2504-13005\tPacific/Pitcairn\nPR,AG,CA,AI,AW,BL,BQ,CW,DM,GD,GP,KN,LC,MF,MS,SX,TT,VC,VG,VI\t+182806-0660622\tAmerica/Puerto_Rico\tAST - QC (Lower North Shore)\nPS\t+3130+03428\tAsia/Gaza\tGaza Strip\nPS\t+313200+0350542\tAsia/Hebron\tWest Bank\nPT\t+3843-00908\tEurope/Lisbon\tPortugal (mainland)\nPT\t+3238-01654\tAtlantic/Madeira\tMadeira Islands\nPT\t+3744-02540\tAtlantic/Azores\tAzores\nPW\t+0720+13429\tPacific/Palau\nPY\t-2516-05740\tAmerica/Asuncion\nQA,BH\t+2517+05132\tAsia/Qatar\nRO\t+4426+02606\tEurope/Bucharest\nRS,BA,HR,ME,MK,SI\t+4450+02030\tEurope/Belgrade\nRU\t+5443+02030\tEurope/Kaliningrad\tMSK-01 - Kaliningrad\nRU\t+554521+0373704\tEurope/Moscow\tMSK+00 - Moscow area\n# Mention RU and UA alphabetically.  See \"territorial claims\" above.\nRU,UA\t+4457+03406\tEurope/Simferopol\tCrimea\nRU\t+5836+04939\tEurope/Kirov\tMSK+00 - Kirov\nRU\t+4844+04425\tEurope/Volgograd\tMSK+00 - Volgograd\nRU\t+4621+04803\tEurope/Astrakhan\tMSK+01 - Astrakhan\nRU\t+5134+04602\tEurope/Saratov\tMSK+01 - Saratov\nRU\t+5420+04824\tEurope/Ulyanovsk\tMSK+01 - Ulyanovsk\nRU\t+5312+05009\tEurope/Samara\tMSK+01 - Samara, Udmurtia\nRU\t+5651+06036\tAsia/Yekaterinburg\tMSK+02 - Urals\nRU\t+5500+07324\tAsia/Omsk\tMSK+03 - Omsk\nRU\t+5502+08255\tAsia/Novosibirsk\tMSK+04 - Novosibirsk\nRU\t+5322+08345\tAsia/Barnaul\tMSK+04 - Altai\nRU\t+5630+08458\tAsia/Tomsk\tMSK+04 - Tomsk\nRU\t+5345+08707\tAsia/Novokuznetsk\tMSK+04 - Kemerovo\nRU\t+5601+09250\tAsia/Krasnoyarsk\tMSK+04 - Krasnoyarsk area\nRU\t+5216+10420\tAsia/Irkutsk\tMSK+05 - Irkutsk, Buryatia\nRU\t+5203+11328\tAsia/Chita\tMSK+06 - Zabaykalsky\nRU\t+6200+12940\tAsia/Yakutsk\tMSK+06 - Lena River\nRU\t+623923+1353314\tAsia/Khandyga\tMSK+06 - Tomponsky, Ust-Maysky\nRU\t+4310+13156\tAsia/Vladivostok\tMSK+07 - Amur River\nRU\t+643337+1431336\tAsia/Ust-Nera\tMSK+07 - Oymyakonsky\nRU\t+5934+15048\tAsia/Magadan\tMSK+08 - Magadan\nRU\t+4658+14242\tAsia/Sakhalin\tMSK+08 - Sakhalin Island\nRU\t+6728+15343\tAsia/Srednekolymsk\tMSK+08 - Sakha (E), N Kuril Is\nRU\t+5301+15839\tAsia/Kamchatka\tMSK+09 - Kamchatka\nRU\t+6445+17729\tAsia/Anadyr\tMSK+09 - Bering Sea\nSA,AQ,KW,YE\t+2438+04643\tAsia/Riyadh\tSyowa\nSB,FM\t-0932+16012\tPacific/Guadalcanal\tPohnpei\nSD\t+1536+03232\tAfrica/Khartoum\nSG,AQ,MY\t+0117+10351\tAsia/Singapore\tpeninsular Malaysia, Concordia\nSR\t+0550-05510\tAmerica/Paramaribo\nSS\t+0451+03137\tAfrica/Juba\nST\t+0020+00644\tAfrica/Sao_Tome\nSV\t+1342-08912\tAmerica/El_Salvador\nSY\t+3330+03618\tAsia/Damascus\nTC\t+2128-07108\tAmerica/Grand_Turk\nTD\t+1207+01503\tAfrica/Ndjamena\nTH,CX,KH,LA,VN\t+1345+10031\tAsia/Bangkok\tnorth Vietnam\nTJ\t+3835+06848\tAsia/Dushanbe\nTK\t-0922-17114\tPacific/Fakaofo\nTL\t-0833+12535\tAsia/Dili\nTM\t+3757+05823\tAsia/Ashgabat\nTN\t+3648+01011\tAfrica/Tunis\nTO\t-210800-1751200\tPacific/Tongatapu\nTR\t+4101+02858\tEurope/Istanbul\nTW\t+2503+12130\tAsia/Taipei\nUA\t+5026+03031\tEurope/Kyiv\tmost of Ukraine\nUS\t+404251-0740023\tAmerica/New_York\tEastern (most areas)\nUS\t+421953-0830245\tAmerica/Detroit\tEastern - MI (most areas)\nUS\t+381515-0854534\tAmerica/Kentucky/Louisville\tEastern - KY (Louisville area)\nUS\t+364947-0845057\tAmerica/Kentucky/Monticello\tEastern - KY (Wayne)\nUS\t+394606-0860929\tAmerica/Indiana/Indianapolis\tEastern - IN (most areas)\nUS\t+384038-0873143\tAmerica/Indiana/Vincennes\tEastern - IN (Da, Du, K, Mn)\nUS\t+410305-0863611\tAmerica/Indiana/Winamac\tEastern - IN (Pulaski)\nUS\t+382232-0862041\tAmerica/Indiana/Marengo\tEastern - IN (Crawford)\nUS\t+382931-0871643\tAmerica/Indiana/Petersburg\tEastern - IN (Pike)\nUS\t+384452-0850402\tAmerica/Indiana/Vevay\tEastern - IN (Switzerland)\nUS\t+415100-0873900\tAmerica/Chicago\tCentral (most areas)\nUS\t+375711-0864541\tAmerica/Indiana/Tell_City\tCentral - IN (Perry)\nUS\t+411745-0863730\tAmerica/Indiana/Knox\tCentral - IN (Starke)\nUS\t+450628-0873651\tAmerica/Menominee\tCentral - MI (Wisconsin border)\nUS\t+470659-1011757\tAmerica/North_Dakota/Center\tCentral - ND (Oliver)\nUS\t+465042-1012439\tAmerica/North_Dakota/New_Salem\tCentral - ND (Morton rural)\nUS\t+471551-1014640\tAmerica/North_Dakota/Beulah\tCentral - ND (Mercer)\nUS\t+394421-1045903\tAmerica/Denver\tMountain (most areas)\nUS\t+433649-1161209\tAmerica/Boise\tMountain - ID (south), OR (east)\nUS,CA\t+332654-1120424\tAmerica/Phoenix\tMST - AZ (most areas), Creston BC\nUS\t+340308-1181434\tAmerica/Los_Angeles\tPacific\nUS\t+611305-1495401\tAmerica/Anchorage\tAlaska (most areas)\nUS\t+581807-1342511\tAmerica/Juneau\tAlaska - Juneau area\nUS\t+571035-1351807\tAmerica/Sitka\tAlaska - Sitka area\nUS\t+550737-1313435\tAmerica/Metlakatla\tAlaska - Annette Island\nUS\t+593249-1394338\tAmerica/Yakutat\tAlaska - Yakutat\nUS\t+643004-1652423\tAmerica/Nome\tAlaska (west)\nUS\t+515248-1763929\tAmerica/Adak\tAlaska - western Aleutians\nUS\t+211825-1575130\tPacific/Honolulu\tHawaii\nUY\t-345433-0561245\tAmerica/Montevideo\nUZ\t+3940+06648\tAsia/Samarkand\tUzbekistan (west)\nUZ\t+4120+06918\tAsia/Tashkent\tUzbekistan (east)\nVE\t+1030-06656\tAmerica/Caracas\nVN\t+1045+10640\tAsia/Ho_Chi_Minh\tsouth Vietnam\nVU\t-1740+16825\tPacific/Efate\nWS\t-1350-17144\tPacific/Apia\nZA,LS,SZ\t-2615+02800\tAfrica/Johannesburg\n#\n# The next section contains experimental tab-separated comments for\n# use by user agents like tzselect that identify continents and oceans.\n#\n# For example, the comment \"#@AQ<tab>Antarctica/\" means the country code\n# AQ is in the continent Antarctica regardless of the Zone name,\n# so Pacific/Auckland should be listed under Antarctica as well as\n# under the Pacific because its line's country codes include AQ.\n#\n# If more than one country code is affected each is listed separated\n# by commas, e.g., #@IS,SH<tab>Atlantic/\".  If a country code is in\n# more than one continent or ocean, each is listed separated by\n# commas, e.g., the second column of \"#@CY,TR<tab>Asia/,Europe/\".\n#\n# These experimental comments are present only for country codes where\n# the continent or ocean is not already obvious from the Zone name.\n# For example, there is no such comment for RU since it already\n# corresponds to Zone names starting with both \"Europe/\" and \"Asia/\".\n#\n#@AQ\tAntarctica/\n#@IS,SH\tAtlantic/\n#@CY,TR\tAsia/,Europe/\n#@SJ\tArctic/\n#@CC,CX,KM,MG,YT\tIndian/\n"
        },
        {
          "name": "zonenow.tab",
          "type": "blob",
          "size": 7.8818359375,
          "content": "# tzdb timezone descriptions, for users who do not care about old timestamps\n#\n# This file is in the public domain.\n#\n# From Paul Eggert (2023-12-18):\n# This file contains a table where each row stands for a timezone\n# where civil timestamps are predicted to agree from now on.\n# This file is like zone1970.tab (see zone1970.tab's comments),\n# but with the following changes:\n#\n# 1.  Each timezone corresponds to a set of clocks that are planned\n#     to agree from now on.  This is a larger set of clocks than in\n#     zone1970.tab, where each timezone's clocks must agree from 1970 on.\n# 2.  The first column is irrelevant and ignored.\n# 3.  The table is sorted in a different way:\n#     first by standard time UTC offset;\n#     then, if DST is used, by daylight saving UTC offset;\n#     then by time zone abbreviation.\n# 4.  Every timezone has a nonempty comments column, with wording\n#     distinguishing the timezone only from other timezones with the\n#     same UTC offset at some point during the year.\n#\n# The format of this table is experimental, and may change in future versions.\n#\n# This table is intended as an aid for users, to help them select timezones\n# appropriate for their practical needs.  It is not intended to take or\n# endorse any position on legal or territorial claims.\n#\n#XX\tcoordinates\tTZ\tcomments\n#\n# -11 - SST\nXX\t-1416-17042\tPacific/Pago_Pago\tMidway; Samoa (\"SST\")\n#\n# -11\nXX\t-1901-16955\tPacific/Niue\tNiue\n#\n# -10 - HST\nXX\t+211825-1575130\tPacific/Honolulu\tHawaii (\"HST\")\n#\n# -10\nXX\t-1732-14934\tPacific/Tahiti\tTahiti; Cook Islands\n#\n# -10/-09 - HST / HDT (North America DST)\nXX\t+515248-1763929\tAmerica/Adak\twestern Aleutians in Alaska (\"HST/HDT\")\n#\n# -09:30\nXX\t-0900-13930\tPacific/Marquesas\tMarquesas\n#\n# -09\nXX\t-2308-13457\tPacific/Gambier\tGambier\n#\n# -09/-08 - AKST/AKDT (North America DST)\nXX\t+611305-1495401\tAmerica/Anchorage\tmost of Alaska (\"AKST/AKDT\")\n#\n# -08\nXX\t-2504-13005\tPacific/Pitcairn\tPitcairn\n#\n# -08/-07 - PST/PDT (North America DST)\nXX\t+340308-1181434\tAmerica/Los_Angeles\tPacific (\"PST/PDT\") - US & Canada; Mexico near US border\n#\n# -07 - MST\nXX\t+332654-1120424\tAmerica/Phoenix\tMountain Standard (\"MST\") - Arizona; western Mexico; Yukon\n#\n# -07/-06 - MST/MDT (North America DST)\nXX\t+394421-1045903\tAmerica/Denver\tMountain (\"MST/MDT\") - US & Canada; Mexico near US border\n#\n# -06\nXX\t-0054-08936\tPacific/Galapagos\tGalápagos\n#\n# -06 - CST\nXX\t+1924-09909\tAmerica/Mexico_City\tCentral Standard (\"CST\") - Saskatchewan; central Mexico; Central America\n#\n# -06/-05 (Chile DST)\nXX\t-2709-10926\tPacific/Easter\tEaster Island\n#\n# -06/-05 - CST/CDT (North America DST)\nXX\t+415100-0873900\tAmerica/Chicago\tCentral (\"CST/CDT\") - US & Canada; Mexico near US border\n#\n# -05\nXX\t-1203-07703\tAmerica/Lima\teastern South America\n#\n# -05 - EST\nXX\t+175805-0764736\tAmerica/Jamaica\tEastern Standard (\"EST\") - Caymans; Jamaica; eastern Mexico; Panama\n#\n# -05/-04 - CST/CDT (Cuba DST)\nXX\t+2308-08222\tAmerica/Havana\tCuba\n#\n# -05/-04 - EST/EDT (North America DST)\nXX\t+404251-0740023\tAmerica/New_York\tEastern (\"EST/EDT\") - US & Canada\n#\n# -04\nXX\t+1030-06656\tAmerica/Caracas\twestern South America\n#\n# -04 - AST\nXX\t+1828-06954\tAmerica/Santo_Domingo\tAtlantic Standard (\"AST\") - eastern Caribbean\n#\n# -04/-03 (Chile DST)\nXX\t-3327-07040\tAmerica/Santiago\tmost of Chile\n#\n# -04/-03 - AST/ADT (North America DST)\nXX\t+4439-06336\tAmerica/Halifax\tAtlantic (\"AST/ADT\") - Canada; Bermuda\n#\n# -03:30/-02:30 - NST/NDT (North America DST)\nXX\t+4734-05243\tAmerica/St_Johns\tNewfoundland (\"NST/NDT\")\n#\n# -03\nXX\t-2332-04637\tAmerica/Sao_Paulo\teastern South America\n#\n# -03/-02 (North America DST)\nXX\t+4703-05620\tAmerica/Miquelon\tSt Pierre & Miquelon\n#\n# -02\nXX\t-0351-03225\tAmerica/Noronha\tFernando de Noronha; South Georgia\n#\n# -02/-01 (EU DST)\nXX\t+6411-05144\tAmerica/Nuuk\tmost of Greenland\n#\n# -01\nXX\t+1455-02331\tAtlantic/Cape_Verde\tCape Verde\n#\n# -01/+00 (EU DST)\nXX\t+3744-02540\tAtlantic/Azores\tAzores\n#\n# +00 - GMT\nXX\t+0519-00402\tAfrica/Abidjan\tfar western Africa; Iceland (\"GMT\")\n#\n# +00/+01 - GMT/BST (EU DST)\nXX\t+513030-0000731\tEurope/London\tUnited Kingdom (\"GMT/BST\")\n#\n# +00/+01 - WET/WEST (EU DST)\nXX\t+3843-00908\tEurope/Lisbon\twestern Europe (\"WET/WEST\")\n#\n# +00/+02 - Troll DST\nXX\t-720041+0023206\tAntarctica/Troll\tTroll Station in Antarctica\n#\n# +01 - CET\nXX\t+3647+00303\tAfrica/Algiers\tAlgeria, Tunisia (\"CET\")\n#\n# +01 - WAT\nXX\t+0627+00324\tAfrica/Lagos\twestern Africa (\"WAT\")\n#\n# +01/+00 - IST/GMT (EU DST in reverse)\nXX\t+5320-00615\tEurope/Dublin\tIreland (\"IST/GMT\")\n#\n# +01/+00 - (Morocco DST)\nXX\t+3339-00735\tAfrica/Casablanca\tMorocco\n#\n# +01/+02 - CET/CEST (EU DST)\nXX\t+4852+00220\tEurope/Paris\tcentral Europe (\"CET/CEST\")\n#\n# +02 - CAT\nXX\t-2558+03235\tAfrica/Maputo\tcentral Africa (\"CAT\")\n#\n# +02 - EET\nXX\t+3254+01311\tAfrica/Tripoli\tLibya; Kaliningrad (\"EET\")\n#\n# +02 - SAST\nXX\t-2615+02800\tAfrica/Johannesburg\tsouthern Africa (\"SAST\")\n#\n# +02/+03 - EET/EEST (EU DST)\nXX\t+3758+02343\tEurope/Athens\teastern Europe (\"EET/EEST\")\n#\n# +02/+03 - EET/EEST (Egypt DST)\nXX\t+3003+03115\tAfrica/Cairo\tEgypt\n#\n# +02/+03 - EET/EEST (Lebanon DST)\nXX\t+3353+03530\tAsia/Beirut\tLebanon\n#\n# +02/+03 - EET/EEST (Moldova DST)\nXX\t+4700+02850\tEurope/Chisinau\tMoldova\n#\n# +02/+03 - EET/EEST (Palestine DST)\nXX\t+3130+03428\tAsia/Gaza\tPalestine\n#\n# +02/+03 - IST/IDT (Israel DST)\nXX\t+314650+0351326\tAsia/Jerusalem\tIsrael\n#\n# +03\nXX\t+4101+02858\tEurope/Istanbul\tNear East; Belarus\n#\n# +03 - EAT\nXX\t-0117+03649\tAfrica/Nairobi\teastern Africa (\"EAT\")\n#\n# +03 - MSK\nXX\t+554521+0373704\tEurope/Moscow\tMoscow (\"MSK\")\n#\n# +03:30\nXX\t+3540+05126\tAsia/Tehran\tIran\n#\n# +04\nXX\t+2518+05518\tAsia/Dubai\tRussia; Caucasus; Persian Gulf; Seychelles; Réunion\n#\n# +04:30\nXX\t+3431+06912\tAsia/Kabul\tAfghanistan\n#\n# +05\nXX\t+4120+06918\tAsia/Tashkent\tRussia; Kazakhstan; Tajikistan; Turkmenistan; Uzbekistan; Maldives\n#\n# +05 - PKT\nXX\t+2452+06703\tAsia/Karachi\tPakistan (\"PKT\")\n#\n# +05:30\nXX\t+0656+07951\tAsia/Colombo\tSri Lanka\n#\n# +05:30 - IST\nXX\t+2232+08822\tAsia/Kolkata\tIndia (\"IST\")\n#\n# +05:45\nXX\t+2743+08519\tAsia/Kathmandu\tNepal\n#\n# +06\nXX\t+2343+09025\tAsia/Dhaka\tRussia; Kyrgyzstan; Bhutan; Bangladesh; Chagos\n#\n# +06:30\nXX\t+1647+09610\tAsia/Yangon\tMyanmar; Cocos\n#\n# +07\nXX\t+1345+10031\tAsia/Bangkok\tRussia; Indochina; Christmas Island\n#\n# +07 - WIB\nXX\t-0610+10648\tAsia/Jakarta\tIndonesia (\"WIB\")\n#\n# +08\nXX\t+0117+10351\tAsia/Singapore\tRussia; Brunei; Malaysia; Singapore; Concordia\n#\n# +08 - AWST\nXX\t-3157+11551\tAustralia/Perth\tWestern Australia (\"AWST\")\n#\n# +08 - CST\nXX\t+3114+12128\tAsia/Shanghai\tChina (\"CST\")\n#\n# +08 - HKT\nXX\t+2217+11409\tAsia/Hong_Kong\tHong Kong (\"HKT\")\n#\n# +08 - PHT\nXX\t+143512+1205804\tAsia/Manila\tPhilippines (\"PHT\")\n#\n# +08 - WITA\nXX\t-0507+11924\tAsia/Makassar\tIndonesia (\"WITA\")\n#\n# +08:45\nXX\t-3143+12852\tAustralia/Eucla\tEucla\n#\n# +09\nXX\t+5203+11328\tAsia/Chita\tRussia; Palau; East Timor\n#\n# +09 - JST\nXX\t+353916+1394441\tAsia/Tokyo\tJapan (\"JST\"); Eyre Bird Observatory\n#\n# +09 - KST\nXX\t+3733+12658\tAsia/Seoul\tKorea (\"KST\")\n#\n# +09 - WIT\nXX\t-0232+14042\tAsia/Jayapura\tIndonesia (\"WIT\")\n#\n# +09:30 - ACST\nXX\t-1228+13050\tAustralia/Darwin\tNorthern Territory (\"ACST\")\n#\n# +09:30/+10:30 - ACST/ACDT (Australia DST)\nXX\t-3455+13835\tAustralia/Adelaide\tSouth Australia (\"ACST/ACDT\")\n#\n# +10\nXX\t+4310+13156\tAsia/Vladivostok\tRussia; Yap; Chuuk; Papua New Guinea; Dumont d'Urville\n#\n# +10 - AEST\nXX\t-2728+15302\tAustralia/Brisbane\tQueensland (\"AEST\")\n#\n# +10 - ChST\nXX\t+1328+14445\tPacific/Guam\tMariana Islands (\"ChST\")\n#\n# +10/+11 - AEST/AEDT (Australia DST)\nXX\t-3352+15113\tAustralia/Sydney\tsoutheast Australia (\"AEST/AEDT\")\n#\n# +10:30/+11\nXX\t-3133+15905\tAustralia/Lord_Howe\tLord Howe Island\n#\n# +11\nXX\t-0613+15534\tPacific/Bougainville\tRussia; Kosrae; Bougainville; Solomons\n#\n# +11/+12 (Australia DST)\nXX\t-2903+16758\tPacific/Norfolk\tNorfolk Island\n#\n# +12\nXX\t+5301+15839\tAsia/Kamchatka\tRussia; Tuvalu; Fiji; etc.\n#\n# +12/+13 (New Zealand DST)\nXX\t-3652+17446\tPacific/Auckland\tNew Zealand (\"NZST/NZDT\")\n#\n# +12:45/+13:45 (Chatham DST)\nXX\t-4357-17633\tPacific/Chatham\tChatham Islands\n#\n# +13\nXX\t-210800-1751200\tPacific/Tongatapu\tKanton; Tokelau; Samoa (western); Tonga\n#\n# +14\nXX\t+0152-15720\tPacific/Kiritimati\tKiritimati\n"
        }
      ]
    }
  ]
}