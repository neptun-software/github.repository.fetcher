{
  "metadata": {
    "timestamp": 1736710165229,
    "page": 842,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "xiph/flac",
      "stars": 1717,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.5390625,
          "content": "BasedOnStyle: WebKit\nAlignAfterOpenBracket: Align\nAlignEscapedNewlines: DontAlign\nAlignOperands: true\nBraceWrapping:\n  AfterFunction: true\n  BeforeElse: true\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Custom\nBreakBeforeInheritanceComma: true\nBreakConstructorInitializers: BeforeComma\nDerivePointerAlignment: false\nIndentCaseLabels: true\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: All\nPointerAlignment: Right\nSortIncludes: false\nSpaceBeforeCtorInitializerColon: true\nSpaceBeforeParens: Never\nTabWidth: 4\nUseTab: ForContinuationAndIndentation\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.6298828125,
          "content": "*.a\n*.la\n*.lo\n*.o\n*.so\n*.dll\n*.dylib\n*.exe\n.deps\n.libs\naclocal.m4\nar-lib\nautom4te.cache/\ncompile\nconfig.guess\nconfig.h\nconfig.h.in\nconfig.log\nconfig.rpath\nconfig.status\nconfig.sub\nconfigure\ndepcomp\ndoc/Doxyfile\ndoc/FLAC.tag\ndoc/api/\nexamples/c/decode/file/example_c_decode_file\nexamples/c/encode/file/example_c_encode_file\nexamples/cpp/decode/file/example_cpp_decode_file\nexamples/cpp/encode/file/example_cpp_encode_file\ninstall-sh\nlibtool\nlibtool-disable-static\nltmain.sh\nm4/libtool.m4\nm4/ltoptions.m4\nm4/ltsugar.m4\nm4/ltversion.m4\nm4/lt~obsolete.m4\nman/flac.1\nman/flac.html\nman/metaflac.1\nman/metaflac.html\nmissing\nobjs/debug\nobjs/release\nsrc/flac/flac\nsrc/libFLAC++/flac++.pc\nsrc/libFLAC/flac.pc\nsrc/metaflac/metaflac\nsrc/share/getopt/libgetopt.a\nsrc/test_grabbag/cuesheet/test_cuesheet\nsrc/test_grabbag/picture/test_picture\nsrc/test_libFLAC++/test_libFLAC++\nsrc/test_libFLAC/test_libFLAC\nsrc/test_seeking/test_seeking\nsrc/test_streams/test_streams\nstamp-h1\ntest/*.aiff\ntest/*.aifc\ntest/*.cmp\ntest/*.cue\ntest/*.flac\ntest/*.log\ntest/*.oga\ntest/*.raw\ntest/*.rf64\ntest/*.w64\ntest/*.wav\ntest/common.sh\ntest/cuesheet.diff\ntest/cuesheet.log\ntest/metaflac-test-files/out.meta\ntest/metaflac.flac\ntest/picture.diff\ntest/picture.log\n.dirstamp\n/ogg/\noss-fuzz/fuzzer_decoder\noss-fuzz/fuzzer_seek\noss-fuzz/fuzzer_metadata\noss-fuzz/fuzzer_encoder\noss-fuzz/fuzzer_encoder_v2\noss-fuzz/fuzzer_reencoder\noss-fuzz/fuzzer_tool_flac\noss-fuzz/fuzzer_tool_metaflac\n\n/*[Bb]uild*/\n/out/\nCMakeSettings.json\nCMakeLists.txt.user\nCMakeCache.txt\nCMakeFiles\nCMakeScripts\nTesting\nMakefile\nMakefile.in\ncmake_install.cmake\ninstall_manifest.txt\ncompile_commands.json\nCTestTestfile.cmake\n_deps\n\n/.vs*/\n"
        },
        {
          "name": ".gitlab-ci.yml",
          "type": "blob",
          "size": 0.9287109375,
          "content": "default:\n  tags:\n    - docker\n  # Image from https://hub.docker.com/_/gcc/ based on Debian\n  image: gcc:9\n\nautotools:\n  stage: build\n  before_script:\n    - apt-get update &&\n      apt-get install -y libogg-dev\n        libtool-bin gettext zip\n        doxygen graphviz pandoc\n    # Create an unpriviledged user, required for tests.\n    - adduser --disabled-password --gecos \"Gitlab CI\" flac\n  script:\n    - ./autogen.sh\n    - ./configure\n    - make\n    - su -c 'make distcheck' flac\n\ncmake:\n  stage: build\n  before_script:\n    - apt-get update &&\n      apt-get install -y libogg-dev\n        cmake ninja-build\n        doxygen graphviz pandoc\n    # Create an unpriviledged user, required for tests.\n    - adduser --disabled-password --gecos \"Gitlab CI\" flac\n  script:\n    - mkdir _build\n    - cmake -S . -B _build -G \"Ninja\" -DCMAKE_BUILD_TYPE=Release\n    - chown -R flac .\n    - su -c 'cmake --build _build' flac\n    - su -c 'cd _build && ctest -V' flac\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 1.7783203125,
          "content": "language: c\n\njobs:\n  include:\n  - os: linux\n    dist: focal\n    arch: arm64\n    compiler: gcc\n    env: BUILD_SYSTEM=\"cmake\" CONFIGURE_OPTS=-DWITH_ASM=0\n  - os: linux\n    dist: focal\n    arch: arm64\n    compiler: gcc\n    env: BUILD_SYSTEM=\"cmake\" CONFIGURE_OPTS=\n  - os: linux\n    dist: focal\n    arch: arm64\n    compiler: gcc\n    env: BUILD_SYSTEM=\"autotools\" CONFIGURE_OPTS=\n#  - os: linux\n#    dist: focal\n#    arch: arm64\n#    compiler: clang\n#    env: BUILD_SYSTEM=\"cmake\" CONFIGURE_OPTS=-DWITH_STACK_PROTECTOR=OFF # Clang on focal arm64 seems broken, can't find a way to reproduce this on my machine\n  - os: linux\n    dist: focal\n    arch: arm64\n    compiler: gcc\n    env: BUILD_SYSTEM=\"cmake\" CONFIGURE_OPTS=-DENABLE_64_BIT_WORDS=OFF\n  - os: linux\n    dist: focal\n    arch: ppc64le\n    compiler: gcc\n    env: BUILD_SYSTEM=\"cmake\" CONFIGURE_OPTS=-DWITH_ASM=0\n  - os: linux\n    dist: focal\n    arch: ppc64le\n    compiler: gcc\n    env: BUILD_SYSTEM=\"cmake\" CONFIGURE_OPTS=\n  - os: linux\n    dist: focal\n    arch: ppc64le\n    compiler: gcc\n    env: BUILD_SYSTEM=\"autotools\" CONFIGURE_OPTS=\n  - os: linux\n    dist: focal\n    arch: ppc64le\n    compiler: clang\n    env: BUILD_SYSTEM=\"cmake\" CONFIGURE_OPTS=\n  - os: linux\n    dist: focal\n    arch: ppc64le\n    compiler: gcc\n    env: BUILD_SYSTEM=\"cmake\" CONFIGURE_OPTS=-DENABLE_64_BIT_WORDS=OFF\n\ninstall:\n  - if [ $TRAVIS_OS_NAME = linux ]; then sudo apt-get -y install libtool-bin libogg-dev; fi\n\nscript:\n  - if [[ \"${BUILD_SYSTEM}\" == \"autotools\" ]]; then ./autogen.sh && ./configure $CONFIGURE_OPTS && make && make check; fi\n  - if [[ \"${BUILD_SYSTEM}\" == \"cmake\" ]]; then mkdir cmake-build && cd cmake-build && cmake .. -DCMAKE_BUILD_TYPE=Release -DINSTALL_MANPAGES=OFF $CONFIGURE_OPTS && cat config.h && cmake --build . && travis_wait 30 ctest --output-on-failure; fi\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 2.298828125,
          "content": "/* FLAC - Free Lossless Audio Codec\n * Copyright (C) 2001-2009  Josh Coalson\n * Copyright (C) 2011-2024  Xiph.Org Foundation\n *\n * This file is part the FLAC project.  FLAC is comprised of several\n * components distributed under different licenses.  The codec libraries\n * are distributed under Xiph.Org's BSD-like license (see the file\n * COPYING.Xiph in this distribution).  All other programs, libraries, and\n * plugins are distributed under the GPL (see COPYING.GPL).  The documentation\n * is distributed under the Gnu FDL (see COPYING.FDL).  Each file in the\n * FLAC distribution contains at the top the terms under which it may be\n * distributed.\n *\n * Since this particular file is relevant to all components of FLAC,\n * it may be distributed under the Xiph.Org license, which is the least\n * restrictive of those mentioned above.  See the file COPYING.Xiph in this\n * distribution.\n */\n\nThis file lists major contributors to the FLAC project. This list is not\nexhaustive. For an exhaustive list, run the command `git shortlog -s` on\nthe git repo or visit https://gitlab.xiph.org/xiph/flac/-/graphs/master\n\nFor a complete list of contributions, run the command `git log` on the\ngit repo, visit https://github.com/xiph/flac/commits or visit\nhttps://gitlab.xiph.org/xiph/flac/commits\n\nOriginal author: Josh Coalson <jcoalson@users.sourceforge.net>\nMaintainer 2012-2020: Erik de Castro Lopo <erikd@mega-nerd.com>\nMaintainer from 2022: Martijn van Beurden <mvanb1@gmail.com>\n\nWebsite : https://www.xiph.org/flac/\n\nOther major contributors and their contributions:\n\n\"lvqcl\" <lvqcl@users.sourceforge.net>\n* Visual Studio build system.\n* Optimisations in the encoder and decoder.\n\n\"Janne Hyvärinen\" <cse@sci.fi>\n* Visual Studio build system.\n* Unicode handling on Windows.\n\n\"Andrey Astafiev\" <andrei@tvcell.ru>\n* Russian translation of the HTML documentation\n\n\"Miroslav Lichvar\" <lichvarm@phoenix.inf.upol.cz>\n* IA-32 assembly versions of several libFLAC routines\n\n\"Brady Patterson\" <bpat@users.sourceforge.net>\n* AIFF file support, PPC assembly versions of libFLAC routines\n\n\"Daisuke Shimamura\" <Daisuke_Shimamura@nifty.com>\n* i18n support in the XMMS plugin\n\n\"X-Fixer\" <x-fixer@narod.ru>\n* Configuration system, tag editing, and file info in the Winamp2 plugin\n\n\"Matt Zimmerman\" <mdz@debian.org>\n* Libtool/autoconf/automake make system, flac man page\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 82.689453125,
          "content": "# Changelog\n\nThis changelog is not exhaustive, review [the git commit log](https://github.com/xiph/flac/commits) for an exhaustive list of changes.\n\n## git as of 18-12-2024\n\nAs there have been additions to the libFLAC interfaces, the libFLAC version number is incremented to 14. The libFLAC++ version number is incremented to 11.\n\n* General\n\t* Multithreaded encoding is now possible in libFLAC and through the flac command line tool\n\t* The GFDL license file is updated to version 1.3\n\t* The markdown tool documentation is now also converted to HTML, for bundling with systems that do not read manpages (e.g. Windows)\n\t* Decoding of chained Ogg FLAC files is now possible (philippe44, Martijn van Beurden)\n\t* Various fixes (Sam James, Miroslav Lichvar, Cristian Rodríguez, manxorist, kgroeneveld, Lee Carré, Jevin Sweval)\n\t* Is is now possible in libFLAC, libFLAC++ and metaflac to write to a new file when changing metadata, instead of needing to overwrite an existing file\n* flac\n\t* Testing mode (flac -t) now parses all metadata blocks and warns the user when ID3v1 metadata is detected\n\t* A warning is displayed when frame numbers do not increase correctly throughout a file\n\t* The explain option (-H or --explain) is now removed, use the manpage or html tool documentation instead\n\t* Built-in help and tool documentation are improved (H2Swine)\n\t* When re-encoding a FLAC file from an existing FLAC file, a check is added that the MD5 sums of both files are the same\n* libFLAC and libFLAC++\n\t* The library interfaces have been extended. See the porting guide ***TODO TODO TODO***\n\t* An error is sent when a frame is missing\n\t* The algorithm of the 'loose mid side' option has changed. Instead of checking every few frames which option is best and keeping that for the next few frames, a fast heuristic is now used. This was necessary to enable multithreading\n\t* Most level 0 metadata interface functions now also work with Ogg FLAC files\n\t* When encoding Ogg FLAC files, the callback now returns a number of samples instead of always 0 (Jesper Larsson, ziplantil)\n\t* When changing metadata, libFLAC now detects when an input file is a symlink, and will refuse to write data to it when an in-place rewrite of the metadata cannot happen\n   \t* When encoding using seektable templates, unused seekpoints (with a sample number higher than the total number of samples) are converted to placeholders\n* Build system\n\t* Fix building on Android with API version < 24 (Steve Lhomme)\n\t* The microbench utility has been removed\n\t* Enable building with emscripten (werner mendizabal)\n\t* Minimum CMake version required (when building with CMake) is now formally 3.12\n* Testing/validation\n\t* Improve fuzzing of allocation failures\n\t* Various other fuzzing improvements\n* Documentation\n\t* The foreign metadata storage format used by the flac command line tool is now properly documented\n\n## FLAC 1.4.3 (23-Jun-2023)\n\nAs there have been additions to the libFLAC interfaces, the libFLAC version number is incremented to 13. The libFLAC++ version number stays at 10.\n\n* General\n\t* All PowerPC-specific code has been removed, as it turned out those improvements didn't actually improve anything\n\t* Large improvements in encoder speed for all presets. The largest change is for the fastest presets and for 24-bit and 32-bit inputs.\n\t* Small improvement in decoder speed for BMI2-capable CPUs\n\t* Various documentation fixes and cleanups (Mark Grassi, Jake Schmidt)\n\t* Various fixes (Ozkan Sezer, Zhipeng Xue, orbea, Sam James, Harish Mahendrakar)\n\t* Fix building on Universal Windows Platform (Dmitry Kostjučenko)\n* flac\n\t* A lot of small fixes for bugs found by fuzzing\n\t* Various improvements to the --keep-foreign-metadata and --keep-foreign-metadata-if-present options on decoding\n\t\t* The output format (WAV/AIFF/RF64 etc.) is now automatically selected based on what kind of foreign metadata is stored\n\t\t* Decoded file is checked afterwards, to see whether stored foreign format data agrees with FLAC audio properties\n\t\t* AIFF-C sowt data can now be restored\n\t* Add --force-legacy-wave-format option, to decode to WAV with WAVEFORMATPCM where WAVE_FORMAT_EXTENSIBLE would be more appropriate\n\t* Add --force-aiff-c-none-format and --force-aiff-c-sowt-format to decode to AIFF-C\n\t* The storage of WAVEFORMATEXTENSIBLE_CHANNEL_MASK is no longer restricted to known channel orderings\n\t* Throw an error when WAV or AIFF files are over 4GiB in length and the --ignore-chunk-sizes option is not set\n\t* Warn on testing files when ID3v2 tags are found\n\t* Warn when data trails the audio data of a WAV/AIFF/RF64/W64 file\n\t* Fix output file not being deleted after error on Windows\n\t* Removal of the --sector--align option\n* metaflac\n\t* A lot of small fixes for bugs found by fuzzing\n\t* Added options --append and --data-format, which makes it possible to copy metadata blocks from one FLAC file to another\n\t* Added option --remove-all-tags-except\n\t* Added option --show-all-tags (harridu, Martijn van Beurden)\n* libFLAC\n\t* No longer write seektables to Ogg, even when specifically asked for. Seektables in Ogg are not defined\n\t* Add functions FLAC__metadata_object_set_raw and FLAC__metadata_object_get_raw to convert between blob and FLAC__StreamMetadata\n* Build system\n\t* Autoconf (configure)\n\t\t* The option --enable-64-bit-words is now on by default\n\t* CMake\n\t\t* The option ENABLE_64_BIT_WORDS is now on by default\n* Testing/validation\n\t* Fuzzers were added for the flac and metaflac command line tools\n\t* Fuzzer coverage was improved\n\n## FLAC 1.4.2 (22-Oct-2022)\n\nOnce again, this release only has a few changes. A problem with FLAC playback in GStreamer (and possibly other libFLAC users) was the reason for the short time since the last release\n\n* General\n    * Remove xmms plugin (Martijn van Beurden, TokyoBlackHole)\n    * Remove all pure assembler, removing build dependency on nasm\n    * Made console output more uniform across different platforms and CPUs\n    * Improve ability to tune compile for a certain system (for example with -march=native) when combining with --disable-asm-optimizations: plain C functions can now be better optimized\n* Build system\n    * Default CFLAGS are now prepended instead of dropped when user CFLAGS are set\n    * -msse2 is no longer added by default (was only applicable to x86)\n    * Fix cross-compiling and out-of-tree building when pandoc and doxygen are not available\n    * Fix issue with Clang not compiling functions with intrinsics\n    * Fix detection of bswap intrinsics (Ozkan Sezer)\n    * Improve search for libssp on MinGW (Ozkan Sezer, Martijn van Beurden)\n* libFLAC\n    * Fix issue when the libFLAC user seeks in a file instead of libFLAC itself\n\n## FLAC 1.4.1 (22-Sep-2022)\n\nThis release only has a few changes. It was triggered by a problem in the 1.4.0 tarball: man pages were empty and api documentation missing\n\n* CMake fixes (Tomasz Kłoczko)\n* Add checks that man pages and api docs end up in tarball\n* Enable installation of prebuilt man pages and api docs\n* Fix compiler warnings (Johannes Kauffmann, Ozkan Sezer)\n* Fix format specifier (manxorist)\n* Enable building on Universal Windows Platform (Steve Lhomme)\n* Fix versioning from git\n\n## FLAC 1.4.0 (09-Sep-2022)\n\nAs there have been changes to the library interfaces, the libFLAC version number is incremented to 12, the libFLAC++ version number is incremented to 10. As some changes were breaking, the version age numbers (see [libtool versioning](https://www.gnu.org/software/libtool/manual/libtool.html#Libtool-versioning)) have been reset to 0. For more details on the changes to the API, see the [porting guide](https://xiph.org/flac/api/group__porting__1__3__4__to__1__4__0.html).\n\nThe XMMS plugin and 'common' plugin code (used only by the XMMS plugin) are deprecated, they will be removed in a future release.\n\n* General:\n    * It is now possible to limit the minimum bitrate of a FLAC file generated by libFLAC and with the `flac` tool to 1 bit/sample. This function can be used to aid live streaming, for example for internet radio\n    * Encoding files with sample rates up to 1'048'575Hz is now possible. (Con Kolivas)\n    * Compression of preset -3 through -8 was slightly improved at the cost of a small decrease in encoding speed by increasing the precision with which autocorrelation was calculated (Martijn van Beurden)\n    * Encoding speed of preset -0, -1 and -2 was slightly improved\n    * Compression of presets -1 and -4 was slighly improved on certain material by changing the adaptive mid-side heuristics\n    * Speedups specifically targeting 64-bit ARMv8 devices using NEON were integrated (Ronen Gvili, Martijn van Beurden)\n    * Speedups for x86_64 CPUs having the FMA instruction set extention are added\n    * Encoding and decoding of 32-bit PCM is now possible\n* (Ogg) FLAC format:\n    * The FLAC format document is being rewritten by the IETF CELLAR working group. The latest draft can be found on [https://datatracker.ietf.org/doc/draft-ietf-cellar-flac/](https://datatracker.ietf.org/doc/draft-ietf-cellar-flac/)\n    * The FLAC format document specifies no bounds for the residual. In other to match current decoder implementations, it is proposed to bound the residual to the range provided by a 32-bit int signed two's complement. This limit must be checked by FLAC encoders as to keep FLAC decoders free from the complexity of being to decode a residual exceeding a 32-bit int.\n    * There is now a set of files available to test whether a FLAC decoder implements the format correctly. This FLAC decoder testbench can be found at [https://github.com/ietf-wg-cellar/flac-test-files](https://github.com/ietf-wg-cellar/flac-test-files). Also, results of testing hard- and software can be found here at [https://wiki.hydrogenaud.io/index.php?title=FLAC_decoder_testbench](https://wiki.hydrogenaud.io/index.php?title=FLAC_decoder_testbench).\n* flac:\n    * The option --limit-min-bitrate was added to aid streaming, see [github #264](https://github.com/xiph/flac/pull/264)\n    * The option --keep-foreign-metadata-if-present is added. This option works the same as --keep-foreign-metadata, but does return a warning instead of an error if no foreign metadata was found to store or restore\n    * The warning returned by the foreign metadata handling is now clearer in case a user tries to restore foreign metadata of the wrong type, for example decoding a FLAC file containing AIFF foreign metadata to a WAV file\n    * A problem when using the analyse function causing the first frame to have a wrong size and offset was fixed\n    * Fix bug where channel mask of a file is unintentionally reused when several files are processed with one command\n    * The order of compression-related commands is no longer important, i.e. -8ep gives the same result as -ep8. Previously, a compression level (like -8) would override a more specific setting (like -e or -p). This is no longer the case\n    * flac now checks the block-align property of WAV files to ensure non-standard WAV files (for which flac has no handling) are not mangled\n* metaflac:\n    * (none)\n* build system:\n    * MSVC and Makefile.lite build system files have been removed. Building with MSVC (Visual Studio) can be done by using CMake\n    * Various CMake improvements, especially for creating MSVC build files (Martijn van Beurden, martinRenou, CookiePLMonster, David Callu, Tyler Dunn, Cameron Cawley)\n    * Various fixes for MinGW (Martijn van Beurden, Cameron Cawley)\n    * Removed obsolete autotools macro's to silence warnings\n    * Fixes for FreeBSD PowerPC (pkubaj)\n    * Fixed some compiler warnings (Martijn van Beurden, Tyler Dunn)\n    * Fix building with uclibc (Fabrice Fontaine)\n* testing/validation:\n    * Addition of new encoder fuzzer, adding fuzzing for 8, 24 and 32-bit inputs\n    * Addition of new decoder fuzzer, adding coverage of seeking code\n    * Addition of metadata fuzzer, adding coverage of metadata APIs\n    * Various improvements to fuzzers to improve code coverage, fuzzing speed and stability\n    * Many changes to test suite to improve cross-platform compatibility (Rosen Penev)\n    * Windows CI now also builds the whole test suite\n    * Clang-format file added (Rosen Penev)\n    * Add warning on using v141_xp platform toolset with /MT (Martijn van Beurden, Paul Sanders)\n* libraries:\n    * Various seeking fixes (Martijn van Beurden, Robert Kausch)\n    * Various bugs fixed found by fuzzing\n    * On decoding, it is now checked whether residuals can be contained by a 32-bit int, preventing integer overflow\n    * Add check that samples supplied to libFLAC actually fall within the bps set\n    * Add checks when parsing metadata blocks to not allocate excessive amounts of memory and not overread\n    * Undocumented Windows-only utf8 functions are no longer exported to the DLL interface\n    * Removed all assembler and intrinsics code from the decoder to improve fuzzing, as they provided only a small speed benefit \n    * The bitwriter buffer is limited in size to 2^24 bytes, so it cannot write excessively large files. This is a backup in case another bug in this area creeps (back) in.\n    * The metadata iterations should now never return a vorbiscomment entry with NULL as an entry, now always at least an empty string is returned\n* documentation:\n    * Removed html documentation and generate man pages from markdown\n* Interface changes:\n    * libFLAC:\n        * Addition of FLAC__stream_encoder_set_limit_min_bitrate() and FLAC__stream_encoder_get_limit_min_bitrate(), see [github #264](https://github.com/xiph/flac/pull/264)\n        * get_client_data_from_decoder is renamed FLAC__get_decoder_client_data(), see [github #124](https://github.com/xiph/flac/pull/124)\n        * All API functions taking a filename as an argument now take UTF-8 filenames on Windows, and no longer accept filenames using the current codepage\n        * FLAC__Frame struct has changed: warmup samples are now stored in FLAC__int64 instead of FLAC__int32 types, and verbatim samples can now be stored in either FLAC__int32 or FLAC__int64 depending on whether samples fix the former or latter\n        * The FLAC__StreamMetadata struct now has a tag, so it can be forward declared\n    * libFLAC++:\n        * Addition of ::set_limit_min_bitrate() and ::get_limit_min_bitrate(), see [github #264](https://github.com/xiph/flac/pull/264)\n        * All API functions taking a filename as an argument now take UTF-8 filenames on Windows, and no longer accept filenames using the current codepage\n        * The ::FLAC__Frame struct has changed, see the libFLAC interface change.\n\n## FLAC 1.3.4 (20-Feb-2022)\n\nThis release mostly fixes (security related) bugs. When building with MSVC, using CMake is preferred, see the README under \"Building with CMake\" for more information. Building with MSVC using solution files is deprecated and these files will be removed in the future. As there have been no changes to the library interfaces, the libFLAC version number remains 11, and libFLAC++ version number remains 9.\n\n* General:\n    * Fix 12 decoder bugs found by oss-fuzz, including CVE-2020-0499 (erikd, Martijn van Beurden)\n    * Fix encoder bug CVE-2021-0561 (NeelkamalSemwal)\n    * Integrate oss-fuzzers (erikd, Guido Vranken)\n    * Seeking fixes (NeelkamalSemwal, Robert Kausch)\n    * Various fixes and improvements (Andrei Astafev, Rosen Penev, Håkan Kvist, oreo639, erikd, Tamás Zahola, Ulrik Mikaelsson, Tyler Dunn, tmkk)\n* FLAC format:\n    * (none)\n* Ogg FLAC format:\n    * (none)\n* flac:\n    * Various fixes and improvements (Andrei Astafev, Martijn van Beurden)\n* metaflac:\n    * (none)\n* build system:\n    * CMake improvements (evpobr, Vitaliy Kirsanov, erikd, Ozkan Sezer, Tyler Dunn, tg-m DeadSix27, ericLemanissier, Chocobo1).\n    * Fixes for MinGW and MSVC (Ozkan Sezer).\n    * Fix for clang (Ozkan Sezer)\n    * Fix for PowerPC (Peter Seiderer, Thomas BERNARD)\n    * Fix for FreeBSD PowerPC (pkubaj).\n* testing/validation:\n    * Add Windows target to CI, improve logging (Ralph Giles)\n    * CI improvements (Ralph Giles, Ewout ter Hoeven)\n* documentation:\n    * Doxygen fixes (Tyler Dunn)\n    * Fix typos (Tim Gates, maxz)\n* Interface changes:\n    * libFLAC:\n        * (none)\n    * libFLAC++:\n        * (none)\n\n## FLAC 1.3.3 (4-Augs-2019)  \n\n* General:\n    * Fix CPU detection (Janne Hyvärinen).\n    * Switch from unsigned types to uint32_t (erikd).\n    * CppCheck fixes (erikd).\n    * Improve SIMD decoding of 24 bit files (lvqcl).\n    * POWER* amnd POWER9 improvements (Anton Blanchard).\n    * More tests.\n* FLAC format:\n    * (none)\n* Ogg FLAC format:\n    * (none)\n* flac:\n    * When converting to WAV, use WAVEFORMATEXTENSIBLE when bits per second is not 8 or 16 (erikd).\n    * Fix --output-prefix with input-files in sub-directories (orbea).\n* metaflac:\n    * (none)\n* plugins:\n    * (none)\n* build system:\n    * Cmake support (Vitaliy Kirsanov, evpobr).\n    * Visual Studio updates (Janne Hyvärinen).\n    * Fix for MSVC when UNICODE is enabled (lvqcl).\n    * Fix for OpenBSD/i386 (Christian Weisgerber).\n* documentation:\n    * (none)\n* libraries:\n    * (none).\n* Interface changes:\n    * libFLAC:\n        * (none)\n    * libFLAC++:\n        * (none)\n\n## FLAC 1.3.2 (01-Jan-2017)  \n\n* General:\n    * Fix undefined behaviour using GCC/Clang UBSAN (erikd).\n    * General hardening via fuzz testing with AFL (erikd and others).\n    * General code improvements (lvqcl, erikd and others).\n    * Add FLAC in MP4 specification docs (Ralph Giles).\n    * MSVS build cleanups (lvqcl).\n    * Fix some cppcheck warnings (erikd).\n    * Assume all currently used OSes support SSE2.\n* FLAC format:\n    * (none)\n* Ogg FLAC format:\n    * (none)\n* flac:\n    * Fix potential infinite loop on flac-to-flac conversion (erikd).\n    * Add WAVEFORMATEXTENSIBLE to WAV (as needed) when decoding (lvqcl).\n    * Only write vorbis-comments if they are non-empty.\n    * Error out if decoding RAW with bits != (8|16|24).\n* metaflac:\n    * Add --scan-replay-gain option.\n* plugins:\n    * (none)\n* build system:\n    * Fixes for MSVC and Makefile.lite build systems.\n* documentation:\n    * (none)\n* libraries:\n    * CPU detection cleanup and fixes (Julian Calaby, erikd and lvqcl).\n    * Fix two stream decoder bugs (Max Kellermann).\n    * Fix a NULL dereference bug (on a malformed file).\n    * Changed the LPC order guess for a slight compression improvement, particularly for classical music (Martijn van Beurden).\n    * Improved encoding speed on older Intel CPUs.\n    * Fixed a seeking bug when decoding certain files (Miroslav Lichvar).\n    * Put an upper bound (32768) on the number of seek points.\n    * Fix potential memory leaks.\n    * Support 64bit brword/bwword allowing FLAC__BYTES_PER_WORD to be set to 8 (disabled by default).\n    * Fix an out-of-bounds heap read.\n    * Win32: Only use large buffers when writing to disk.\n* Interface changes:\n    * libFLAC:\n        * (none)\n    * libFLAC++:\n        * (none)\n\n## FLAC 1.3.1 (25-Nov-2014)  \n\n* General:\n    * Improved decoding efficiency of all bit depths but especially so for 24 bits for IA32 architecture (lvqcl and Miroslav Lichvar).\n    * Faster encoding using SSE and AVX (lvqcl).\n    * Fixed bartlett, bartlett_hann and triangle functions.\n    * New apodization functions partial_tukey and punchout_tukey for improved compression (Martijn van Beurden).\n    * Retuned compression presets to incorporate new apodization functions (Martijn van Beurden).\n    * Fix -Wcast-align warnings on armhf architecture (Erik de Castro Lopo).\n* FLAC format:\n    * (none)\n* Ogg FLAC format:\n    * (none)\n* flac:\n    * Help output documentation improvements.\n    * I/O buffering improvements on Windows to reduce disk fragmentation when writing files.\n    * Only write vorbis-comments if they are non-empty.\n* metaflac:\n    * (none)\n* plugins:\n    * Fix symbol visibility in XMMS plugin.\n* build system:\n    * Many fixes and improvements across all the build systems.\n* documentation:\n    * Document new [apodization windows](https://xiph.org/flac/documentation_tools_flac.html#flac_options_apodization).\n* libraries:\n    * Fix CVE-2014-9028 (heap write overflow) and CVE-2014-8962 (heap read overflow) (Erik de Castro Lopo).\n* Interface changes:\n    * libFLAC:\n        * (none)\n    * libFLAC++:\n        * (none)\n\n## FLAC 1.3.0 (26-May-2013)  \n\n* General:\n    * Move development to Xiph.org git repository.\n    * The <span class=\"argument\">[--sector-align](https://xiph.org/flac/documentation_tools_flac.html#flac_options_sector_align)</span> option of <span class=\"commandname\">flac</span> has been deprecated and may not exist in future versions. [shntool](http://www.etree.org/shnutils/shntool/) provides similar functionality.\n    * Support for the RF64 and Wave64 formats in <span class=\"commandname\">flac</span> (see below).\n    * Better handling of cuesheets with non-CD-DA sample rates.\n    * The <span class=\"argument\">[--ignore-chunk-sizes](https://xiph.org/flac/documentation_tools_flac.html#flac_options_ignore_chunk_sizes)</span> option has been added to the <span class=\"commandname\">flac</span> command line tool.\n* FLAC format:\n    * (none)\n* Ogg FLAC format:\n    * (none)\n* flac:\n    * Added support for encoding from and decoding to the RF64 format, and a new corresponding option <span class=\"argument\">[--force-rf64-format](https://xiph.org/flac/documentation_tools_flac.html#flac_options_force_rf64_format)</span>. ([SF #1762502](http://sourceforge.net/p/flac/feature-requests/78/)). <span class=\"argument\">[--keep-foreign-metadata](https://xiph.org/flac/documentation_tools_flac.html#flac_options_keep_foreign_metadata)</span> is also supported.\n    * Added support for encoding from and decoding to the Sony Wave64 format, and a new corresponding option <span class=\"argument\">[--force-wave64-format](https://xiph.org/flac/documentation_tools_flac.html#flac_options_force_wave64_format)</span>. ([SF #1769582](http://sourceforge.net/p/flac/feature-requests/79/)). <span class=\"argument\">[--keep-foreign-metadata](https://xiph.org/flac/documentation_tools_flac.html#flac_options_keep_foreign_metadata)</span> is also supported.\n    * Added new options <span class=\"argument\">[--preserve-modtime](https://xiph.org/flac/documentation_tools_flac.html#flac_options_preserve_modtime)</span> and <span class=\"argument\">[--no-preserve-modtime](https://xiph.org/flac/documentation_tools_flac.html#negative_options)</span> to specify whether or not output files should copy the timestamp and permissions from their input files. The default is <span class=\"argument\">[--preserve-modtime](https://xiph.org/flac/documentation_tools_flac.html#flac_options_preserve_modtime)</span> as in previous versions. ([SF #1805428](http://sourceforge.net/p/flac/feature-requests/85/)).\n    * Allow MM:SS:FF and MM:SS.SS time formats in non-CD-DA cuesheets. ([SF #1947353](http://sourceforge.net/p/flac/feature-requests/95/), [SF #2182432](http://sourceforge.net/p/flac/bugs/338/))\n    * The <span class=\"argument\">[--sector-align](https://xiph.org/flac/documentation_tools_flac.html#flac_options_sector_align)</span> option of <span class=\"commandname\">flac</span> has been deprecated and may not exist in future versions. [shntool](http://www.etree.org/shnutils/shntool/) provides similar functionality. ([SF #1805946](http://sourceforge.net/p/flac/feature-requests/86/))\n    * Improved error message when user attempts to decode a non-FLAC file ([SF #2222789](http://sourceforge.net/p/flac/bugs/341/)).\n    * Fix bug where <span class=\"commandname\">flac</span> was disallowing use of <span class=\"argument\">--replay-gain</span> when encoding from stdin ([SF #1840124](http://sourceforge.net/p/flac/bugs/313/)).\n    * Fix bug with fractional seconds on some locales ([SF #1815517](http://sourceforge.net/p/flac/bugs/309/), [SF #1858012](http://sourceforge.net/p/flac/bugs/321/)).\n    * Read and write appropriate channel masks for 6.1 and 7.1 surround input WAV files. Documentation was also updated.\n    * Correct Wave64 GUIDs.\n    * Support 56kHz to 192kHz gain analysis (patch from Earl Chew)\n    * Add ability to handle unicode filenames on Windows (large set of patches from Janne Hyvärinen)\n* metaflac:\n    * Allow MM:SS:FF and MM:SS.SS time formats in non-CD-DA cuesheets. ([SF #1947353](http://sourceforge.net/p/flac/feature-requests/95/), [SF #2182432](http://sourceforge.net/p/flac/bugs/338/))\n* plugins:\n    * Minor updates for XMMS plugin.\n    * Winamp2 plugin was dropped because Nullsoft has provided native FLAC support since 2006.\n* build system:\n    * Fixes for autotools (including [SF #1859664](http://sourceforge.net/p/flac/patches/28/)).\n    * Fixes for MinGW (including [SF #2000973](http://sourceforge.net/p/flac/bugs/), [SF #2209829](http://sourceforge.net/p/flac/bugs/)).\n    * Fixes for gcc (including [SF #1834168](http://sourceforge.net/p/flac/bugs/), [SF #2002481](http://sourceforge.net/p/flac/bugs/334/)).\n    * Fixes for Sun Studio/Forte ([SF #1701960](http://sourceforge.net/p/flac/patches/22/)).\n    * Fixes for windows builds (including [SF #1676822](http://sourceforge.net/p/flac/bugs/257/), [SF #1756624](http://sourceforge.net/p/flac/feature-requests/73/), [SF #1809863](http://sourceforge.net/p/flac/bugs/307/), [SF #1911149](http://sourceforge.net/p/flac/feature-requests/)).\n    * Fixes for FreeBSD and OpenBSD.\n    * Compile with GNU gcc _FORTIFY_SOURCE=2 and stack protection where those features are detected.\n    * Enable a bunch of GCC compiler warnings and fix code that generates warnings.\n* documentation:\n    * Document <span class=\"argument\">[--ignore-chunk-sizes](https://xiph.org/flac/documentation_tools_flac.html#flac_options_ignore_chunk_sizes)</span> and <span class=\"argument\">[--apply-replaygain-which-is-not-lossless](https://xiph.org/flac/documentation_tools_flac.html#flac_options_apply_replaygain_which_is_not_lossless)</span> option for <span class=\"commandname\">flac</span>.\n* libraries:\n    * libFLAC encoder was defaulting to level 0 compression instead of 5 ([SF #1816825](http://sourceforge.net/p/flac/bugs/310/)).\n    * Fix bug in bitreader handling of read callback returning a short count ([SF #2490454](http://sourceforge.net/p/flac/bugs/345/)).\n    * Improve decoder's ability to distinguish between a FLAC sync code and an MPEG one ([SF #2491433](http://sourceforge.net/p/flac/bugs/346/)).\n* Interface changes:\n    * libFLAC:\n        * **Added** FLAC__format_blocksize_is_subset()\n    * libFLAC++:\n        * Add a number of convenience methods.\n\n## FLAC 1.2.1 (17-Sep-2007)  \n\n* General:\n    * With the new <span class=\"argument\">[--keep-foreign-metadata](https://xiph.org/flac/documentation_tools_flac.html#flac_options_keep_foreign_metadata)</span> in <span class=\"commandname\">flac</span>, non-audio RIFF and AIFF chunks can be stored in FLAC files and recreated when decoding. This allows, among other, things support for archiving BWF files and other WAVE files from editing tools that preserves all the metadata.\n* FLAC format:\n    * Specified 2 new APPLICATION metadata blocks for storing WAVE and AIFF chunks (for use with [--keep-foreign-metadata](https://xiph.org/flac/documentation_tools_flac.html#flac_options_keep_foreign_metadata) in <span class=\"commandname\">flac</span>).\n    * The lead-out track number for non-CDDA cuesheets now must be 255.\n* Ogg FLAC format:\n    * This is not a format change, but changed default extension for Ogg FLAC from .ogg to .oga, according to new Xiph [specification](http://wiki.xiph.org/index.php/MIME_Types_and_File_Extensions) ([SF #1762492](http://sourceforge.net/p/flac/bugs/283/)).\n* flac:\n    * Added a new option <span class=\"argument\">[--no-utf8-convert](https://xiph.org/flac/documentation_tools_flac.html#flac_options_no_utf8_convert)</span> which works like it does in <span class=\"commandname\">metaflac</span> ([SF #973740](http://sourceforge.net/p/flac/feature-requests/35/)).\n    * Added a new option <span class=\"argument\">[--keep-foreign-metadata](https://xiph.org/flac/documentation_tools_flac.html#flac_options_keep_foreign_metadata)</span> which can save/restore RIFF and AIFF chunks to/from FLAC files ([SF #363478](http://sourceforge.net/p/flac/feature-requests/9/)).\n    * Changed default extension for Ogg FLAC from .ogg to .oga, according to new Xiph [specification](http://wiki.xiph.org/index.php/MIME_Types_and_File_Extensions) ([SF #1762492](http://sourceforge.net/p/flac/bugs/283/)).\n    * Fixed bug where using <span class=\"argument\">--replay-gain</span> without any padding option caused only a small PADDING block to be created ([SF #1760790](http://sourceforge.net/p/flac/bugs/282/)).\n    * Fixed bug where encoding from stdin on Windows could fail if WAVE/AIFF contained unknown chunks ([SF #1776803](http://sourceforge.net/p/flac/bugs/290/)).\n    * Fixed bug where importing non-CDDA cuesheets would cause an invalid lead-out track number ([SF #1764105](http://sourceforge.net/p/flac/bugs/286/)).\n* metaflac:\n    * Changed default extension for Ogg FLAC from .ogg to .oga, according to new Xiph [specification](http://wiki.xiph.org/index.php/MIME_Types_and_File_Extensions) ([SF #1762492](http://sourceforge.net/p/flac/bugs/283/)).\n    * Fixed bug where importing non-CDDA cuesheets would cause an invalid lead-out track number ([SF #1764105](http://sourceforge.net/p/flac/bugs/286/)).\n* plugins:\n    * (none)\n* build system:\n    * New configure option <span class=\"argument\">--disable-cpplibs</span> to prevent building libFLAC++ ([SF #1723295](http://sourceforge.net/p/flac/patches/23/)).\n    * Fixed bug compiling <span class=\"commandname\">flac</span> without Ogg support ([SF #1760786](http://sourceforge.net/p/flac/bugs/281/)).\n    * Fixed bug where sometimes an existing installation of flac could interfere with the build process ([SF #1763690](http://sourceforge.net/p/flac/bugs/285/)).\n    * OS X fixes ([SF #1786225](http://sourceforge.net/p/flac/patches/25/)).\n    * MinGW fixes ([SF #1684879](http://sourceforge.net/p/flac/bugs/264/)).\n    * Solaris 10 fixes ([SF #1783225](http://sourceforge.net/p/flac/bugs/294/) [SF #1783630](http://sourceforge.net/p/flac/bugs/295/)).\n    * OS/2 fixes ([SF #1771378](http://sourceforge.net/p/flac/bugs/287/) [SF #1229495](http://sourceforge.net/p/flac/bugs/174/)).\n    * automake-1.10 fixes ([SF #1791361](http://sourceforge.net/p/flac/bugs/300/) [SF #1792179](http://sourceforge.net/p/flac/bugs/302/)).\n* documentation:\n    * Added new [tutorial](https://xiph.org/flac/documentation_tools_flac.html#tutorial) section for <span class=\"commandname\">flac</span>.\n    * Added [example code](https://xiph.org/flac/documentation_example_code.html) section for using libFLAC/libFLAC++.\n* libraries:\n    * libFLAC: Fixed very rare seek bug ([SF #1684049](http://sourceforge.net/p/flac/bugs/263/)).\n    * libFLAC: Fixed seek bug with Ogg FLAC and small streams ([SF #1792172](http://sourceforge.net/p/flac/bugs/301/)).\n    * libFLAC: 64-bit fixes ([SF #1790872](http://sourceforge.net/p/flac/bugs/299/)).\n    * libFLAC: Fix assembler code to be position independent.\n    * libFLAC: Optimization of a number of inner loop functions.\n    * Added support for encoding the residual coding method introduced in libFLAC 1.2.0 (RESIDUAL_CODING_METHOD_PARTITIONED_RICE2) which will encode 24-bit files more efficiently.\n* Interface changes:\n    * libFLAC:\n        * **Added** FLAC__metadata_simple_iterator_is_last()\n        * **Added** FLAC__metadata_simple_iterator_get_block_offset()\n        * **Added** FLAC__metadata_simple_iterator_get_block_length()\n        * **Added** FLAC__metadata_simple_iterator_get_application_id()\n    * libFLAC++:\n        * **Added** FLAC::Metadata::SimpleIterator::is_last()\n        * **Added** FLAC::Metadata::SimpleIterator::get_block_offset()\n        * **Added** FLAC::Metadata::SimpleIterator::get_block_length()\n        * **Added** FLAC::Metadata::SimpleIterator::get_application_id()\n\n## FLAC 1.2.0 (23-Jul-2007)  \n\n* General:\n    * Small encoding speedups for all modes.\n* FLAC format:\n    * One of the reserved bits in the FLAC frame header has been assigned for future use; make sure to refer to the [porting guide](https://xiph.org/flac/api/group__porting__1__1__4__to__1__2__0.html) if you parse FLAC streams manually.\n* Ogg FLAC format:\n    * (none)\n* flac:\n    * Added runtime detection of SSE OS support for most operating systems.\n    * Added a new undocumented option <span class=\"argument\">--ignore-chunk-sizes</span> for ignoring the size of the 'data' chunk (WAVE) or 'SSND' chunk (AIFF). Can be used to encode files with bogus data sizes (e.g. with WAV files piped from foobar2000 to flac.exe as an external encoder). **Use with caution**: all subsequent data is treated as audio, so the data/SSND chunk must be the last or the following data/tags will be treated as audio and encoded.\n* metaflac:\n    * (none)\n* plugins:\n    * (none)\n* build system:\n    * Added solution and project files for building with VC++ 2005.\n* libraries:\n    * Added runtime detection of SSE OS support for most operating systems.\n    * Fixed bug where invalid seek tables could cause some seeks to fail.\n    * Added support for decoding the new residual coding method (RESIDUAL_CODING_METHOD_PARTITIONED_RICE2).\n* Interface changes (see also the [porting guide](https://xiph.org/flac/api/group__porting__1__1__4__to__1__2__0.html) for specific instructions on porting to FLAC 1.2.0):\n    * libFLAC:\n        * **Added** FLAC__format_sample_rate_is_subset()\n    * libFLAC++:\n        * **Added** FLAC::Decoder::Stream::get_decode_position()\n\n## FLAC 1.1.4 (13-Feb-2007)  \n\n* General:\n    * Improved compression with no change to format or decrease in speed.\n    * Encoding and decoding speedups for all modes. Encoding at -8 is twice as fast.\n* FLAC format:\n    * (none)\n* Ogg FLAC format:\n    * (none)\n* flac:\n    * Improved compression with no change to format or decrease in speed.\n    * Encoding and decoding speedups for all modes. Encoding at -8 is twice as fast.\n    * Added a new option <span class=\"argument\">[-w,--warnings-as-errors](https://xiph.org/flac/documentation_tools_flac.html#flac_options_warnings_as_errors)</span> for treating all warnings as errors.\n    * Allow <span class=\"argument\">[--picture](https://xiph.org/flac/documentation_tools_flac.html#flac_options_picture)</span> option to take only a filename, and have all other attributes extracted from the file itself.\n    * Fixed a bug that caused suboptimal default compression settings in some locales ([SF #1608883](http://sourceforge.net/p/flac/bugs/237/)).\n    * Fixed a bug where FLAC-to-FLAC transcoding of a corrupted FLAC file would truncate the transcoded file at the first error ([SF #1615019](http://sourceforge.net/p/flac/bugs/241/)).\n    * Fixed a bug where using <span class=\"argument\">[-F](https://xiph.org/flac/documentation_tools_flac.html#flac_options_decode_through_errors)</span> with FLAC-to-FLAC transcoding of a corrupted FLAC would have no effect ([SF #1615391](http://sourceforge.net/p/flac/bugs/242/)).\n    * Fixed a bug where new PICTURE metadata blocks specified with <span class=\"argument\">[--picture](https://xiph.org/flac/documentation_tools_flac.html#flac_options_picture)</span> would not be transferred during FLAC-to-FLAC transcoding ([SF #1627993](http://sourceforge.net/p/flac/bugs/246/)).\n* metaflac:\n    * Allow <span class=\"argument\">[--import-picture-from](https://xiph.org/flac/documentation_tools_metaflac.html#metaflac_shorthand_import_picture_from)</span> option to take only a filename, and have all other attributes extracted from the file itself.\n* plugins:\n    * Fixed a bug in the XMMS plugin where Ctrl-3 (file info) would cause a crash if the file did not exist ([SF #1634941](http://sourceforge.net/p/flac/patches/20/)).\n* build system:\n    * Fixed a makefile linkage bug with libogg ([SF #1611414](http://sourceforge.net/p/flac/bugs/239/)).\n    * Added pkg-config files for libFLAC and libFLAC++ ([SF #1647881](http://sourceforge.net/p/flac/patches/21/)).\n    * Added <span class=\"argument\">--disable-ogg</span> option for building without Ogg support even if libogg is installed ([SF #1196996](http://sourceforge.net/p/flac/bugs/165/)).\n* libraries:\n    * Completely rewritten bitbuffer which uses native machine word size instead of bytes for dramatic speed improvements. The speedup should be most dramatic on CPUs with slower byte manipulation capability and big-endian machines.\n    * Much faster Rice partition size estimation which greatly speeds encoding in higher modes.\n    * Increased compression for all modes.\n    * Reduced memory requirements for encoder and decoder.\n    * Fixed a bug with default apodization settings that were erroneous in some locales ([SF #1608883](http://sourceforge.net/p/flac/bugs/237/)).\n* Interface changes:\n    * libFLAC:\n        * (behavior only) FLAC__stream_encoder_set_metadata() now makes a copy of the \"metadata\" array of pointers (but still not copies of the objects themselves) so the client does not need to maintain its copy of the array after the call.\n    * libFLAC++:\n        * (none)\n\n## FLAC 1.1.3 (27-Nov-2006)  \n\n* General:\n    * Improved compression with no impact on format or decoding speed.\n    * Much better recovery for corrupted files\n    * Better multichannel support\n    * Large file (>2GB) support everywhere\n    * <span class=\"commandname\">flac</span> now supports FLAC and Ogg FLAC as input to the encoder (e.g. can re-encode FLAC to FLAC) and preserve all the metadata like tags, etc.\n    * New <span class=\"code\">[PICTURE](https://xiph.org/flac/format.html#def_PICTURE)</span> metadata block for storing things like cover art, new <span class=\"argument\">[--picture](https://xiph.org/flac/documentation_tools_flac.html#flac_options_picture)</span> option to <span class=\"commandname\">flac</span> and <span class=\"argument\">[--import-picture-from](https://xiph.org/flac/documentation_tools_metaflac.html#metaflac_shorthand_import_picture_from)</span> option to <span class=\"commandname\">metaflac</span> for importing pictures, new <span class=\"argument\">[--export-picture-to](https://xiph.org/flac/documentation_tools_metaflac.html#metaflac_shorthand_export_picture_to)</span> option to <span class=\"commandname\">metaflac</span> for exporting pictures, and metadata API [additions](https://xiph.org/flac/api/group__flac__metadata__level0.html#ga3) for searching for suitable pictures based on type, size and color constraints.\n    * Support for new <tt>REPLAYGAIN_REFERENCE_LOUDNESS</tt> tag.\n    * Fixed a bug in Ogg FLAC encoding where metadata was not being updated properly. Existing Ogg FLAC files should be recoded to fix up the metadata, e.g. <span class=\"command\">flac -Vf -S 10s --ogg file.ogg</span>\n    * In the developer libraries, the interface has been simplfied by merging the three decoding layers into a single class; ditto for the encoders. Also, libOggFLAC has been merged into libFLAC and libOggFLAC++ has been merged into libFLAC++ so there is a single API supporting both native FLAC and Ogg FLAC.\n* FLAC format:\n    * New <span class=\"code\">[PICTURE](https://xiph.org/flac/format.html#def_PICTURE)</span> metadata block for storing things like cover art.\n    * Speaker assignments and channel orders for 3-6 channels (see [frame header](https://xiph.org/flac/format.html#frame_header)).\n    * Further restrictions on the [FLAC subset](https://xiph.org/flac/format.html#subset) when the sample rate is <=48kHz; in this case the maximum LPC order is now 12 and maximum blocksize is 4608\\. This is to further limit the processing and memory requirements for hardware implementations while not measurably affecting compression.\n* Ogg FLAC format:\n    * (none)\n* flac:\n    * Improved the <span class=\"argument\">[-F](https://xiph.org/flac/documentation_tools_flac.html#flac_options_decode_through_errors)</span> option to allow decoding of FLAC files whose metadata is corrupted, and other kinds of severe corruption.\n    * Encoder can now take FLAC and Ogg FLAC as input. The output FLAC file will have all the same metadata as the original unless overridden with options on the command line.\n    * Encoder can now take WAVEFORMATEXTENSIBLE WAVE files as input; decoder will output WAVEFORMATEXTENSIBLE WAVE files when necessary to conform to the latest Microsoft specifications.\n    * Now properly supports AIFF and WAVEFORMATEXTENSIBLE multichannel input, performing necessary channel reordering both for encoding and decoding. WAVEFORMATEXTENSIBLE channel mask is also saved to a tag on encoding and restored on decoding for situations when there is no natural mapping to FLAC channel assignments.\n    * Expanded support for \"odd\" sample resolutions to WAVE and AIFF input; all resolutions from 4 to 24 bits-per-sample now supported for all input types.\n    * Added a new option <span class=\"argument\">[--tag-from-file](https://xiph.org/flac/documentation_tools_flac.html#flac_options_tag_from_file)</span> for setting a tag from file (e.g. for importing a cuesheet as a tag).\n    * Added a new option <span class=\"argument\">[--picture](https://xiph.org/flac/documentation_tools_flac.html#flac_options_picture)</span> for adding pictures.\n    * Added a new option <span class=\"argument\">[--apodization](https://xiph.org/flac/documentation_tools_flac.html#flac_options_apodization)</span> for specifying the window function(s) to be used in LPC analysis.\n    * Added support for encoding from non-compressed AIFF-C ([SF #1090933](http://sourceforge.net/p/flac/bugs/143/)).\n    * Importing of non-CDDA-compliant cuesheets now only issues a warning, not an error (see [here](http://www.hydrogenaud.io/forums/index.php?showtopic=31282)).\n    * MD5 comparison failures on decoding are now an error instead of a warning and will also return a non-zero exit code ([SF #1493725](http://sourceforge.net/p/flac/bugs/221/)).\n    * The default padding size is now 8K, or 64K if the input audio stream is more than 20 minutes long.\n    * Fixed a bug in cuesheet parsing where it would return an error if the last line of the cuesheet did not end with a newline.\n    * Fixed a bug that caused a crash when <span class=\"argument\">-a</span> and <span class=\"argument\">-t</span> were used together ([SF #1229481](http://sourceforge.net/p/flac/bugs/173/)).\n    * Fixed a bug with --sector-align where appended samples were not always totally silent ([SF #1237707](http://sourceforge.net/p/flac/bugs/179/)).\n    * Fixed bugs with --sector-align and raw input files.\n    * Fixed a bug printing out unknown AIFF subchunk names ([SF #1267476](http://sourceforge.net/p/flac/bugs/186/)).\n    * Fixed a bug where WAVE files with \"data\" subchunks of size 0 where accepted ([SF #1293830](http://sourceforge.net/p/flac/bugs/190/)).\n    * Fixed a bug where sync error at end-of-stream of truncated files was not being caught ([SF #1244071](http://sourceforge.net/p/flac/bugs/183/)).\n    * Fixed a problem with filename parsing if file does not have extension but also has a . in the path ([SF #1161916](http://sourceforge.net/p/flac/bugs/159/)).\n    * Fixed a problem with fractional-second parsing for <span class=\"argument\">--skip</span>/<span class=\"argument\">--until</span> in some locales ([SF #1031043](http://sourceforge.net/p/flac/bugs/125/)).\n    * Increase progress report rate when -p and -e are used together ([SF #1580122](http://sourceforge.net/p/flac/bugs/229/)).\n* metaflac:\n    * Added support for read-only operations on Ogg FLAC files.\n    * Added a new option <span class=\"argument\">[--set-tag-from-file](https://xiph.org/flac/documentation_tools_metaflac.html#metaflac_shorthand_set_tag_from_file)</span> for setting a tag from file (e.g. for importing a cuesheet as a tag).\n    * Added a new option <span class=\"argument\">[--import-picture-from](https://xiph.org/flac/documentation_tools_metaflac.html#metaflac_shorthand_import_picture_from)</span> for importing pictures.\n    * Added a new option <span class=\"argument\">[--export-picture-to](https://xiph.org/flac/documentation_tools_metaflac.html#metaflac_shorthand_export_picture_to)</span> for exporting pictures.\n    * Added shorthand operation <span class=\"argument\">[--remove-replay-gain](https://xiph.org/flac/documentation_tools_metaflac.html#metaflac_shorthand_remove_replay_gain)</span> for removing ReplayGain tags.\n    * <span class=\"argument\">[--export-cuesheet-to](https://xiph.org/flac/documentation_tools_metaflac.html#metaflac_shorthand_export_cuesheet_to)</span> now properly specifies the FLAC file name ([SF #1272825](http://sourceforge.net/p/flac/feature-requests/46/)).\n    * Importing of non-CDDA-compliant cuesheets now issues a warning.\n    * Removed the following deprecated tag editing options; you should use the new option names shown instead:\n        * Removed <span class=\"argument\">--show-vc-vendor</span>; use <span class=\"argument\">--show-vendor-tag</span>\n        * Removed <span class=\"argument\">--show-vc-field</span>; use <span class=\"argument\">--show-tag</span>\n        * Removed <span class=\"argument\">--remove-vc-all</span>; use <span class=\"argument\">--remove-all-tags</span>\n        * Removed <span class=\"argument\">--remove-vc-field</span>; use <span class=\"argument\">--remove-tag</span>\n        * Removed <span class=\"argument\">--remove-vc-firstfield</span>; use <span class=\"argument\">--remove-first-tag</span>\n        * Removed <span class=\"argument\">--set-vc-field</span>; use <span class=\"argument\">--set-tag</span>\n        * Removed <span class=\"argument\">--import-vc-from</span>; use <span class=\"argument\">--import-tags-from</span>\n        * Removed <span class=\"argument\">--export-vc-to</span>; use <span class=\"argument\">--export-tags-to</span>\n    * Disallow multiple input FLAC files when --import-tags-from=- is used ([SF #1082577](http://sourceforge.net/p/flac/bugs/141/)).\n* plugins:\n    * When ReplayGain is on, if tags for the preferred kind of gain (album/track) are not in a stream, the other kind will be used.\n    * Added ReplayGain info to file info box in XMMS plugin\n    * Fixed UTF-8 decoder to disallow non-shortest-form and surrogate sequences (see [here](http://www.unicode.org/versions/corrigendum1.html)).\n* build system:\n    * Added support for building on OS/2 with EMX ([SF #1229495](http://sourceforge.net/p/flac/bugs/174/))\n    * Added support for building with Borland C++ ([SF #1599018](http://sourceforge.net/p/flac/patches/17/))\n    * Added a <span class=\"argument\">--disable-xmms-plugin</span> option to <span class=\"command\">configure</span> to prevent building the XMMS plugin ([SF #930494](http://sourceforge.net/p/flac/feature-requests/33/)).\n    * Added a <span class=\"argument\">--disable-doxygen-docs</span> option to <span class=\"command\">configure</span> for disabling Doxygen-based API doc generation ([SF #1365935](http://sourceforge.net/p/flac/patches/12/)).\n    * Added a <span class=\"argument\">--disable-thorough-tests</span> option to <span class=\"command\">configure</span> to do the basic library, stream, and tool tests in a reasonable time ([SF #1077948](http://sourceforge.net/p/flac/feature-requests/40/)).\n    * Added large file support with <span class=\"argument\">AC_SYS_LARGEFILE</span>; use <span class=\"argument\">--disable-largefile</span> with <span class=\"command\">configure</span> to disable.\n* libraries:\n    * Merged libOggFLAC into libFLAC; both formats are now supported through the same API.\n    * Merged libOggFLAC++ into libFLAC++; both formats are now supported through the same API.\n    * libFLAC and libFLAC++: Simplified encoder setup with new <span class=\"argument\">FLAC__stream_encoder_set_compression_level()</span> function.\n    * libFLAC: Improved compression with no impact on FLAC format or decoding time by adding a windowing stage before LPC analysis.\n    * libFLAC: Fixed a bug where missing STREAMINFO fields (min/max framesize, total samples, MD5 sum) and seek point offsets were not getting rewritten back to Ogg FLAC file ([SF #1338969](http://sourceforge.net/p/flac/bugs/197/)).\n    * libFLAC: Fixed a bug in cuesheet parsing where it would return an error if the last line of the cuesheet did not end with a newline.\n    * libFLAC: Fixed UTF-8 decoder to disallow non-shortest-form and surrogate sequences (see [here](http://www.unicode.org/versions/corrigendum1.html)).\n    * libFLAC: Fixed a bug in the return value for <span class=\"argument\">FLAC__stream_decoder_set_metadata_respond_application()</span> and <span class=\"argument\">FLAC__stream_decoder_set_metadata_ignore_application()</span> when there was a memory allocation error ([SF #1235005](http://sourceforge.net/p/flac/bugs/176/)).\n* Interface changes (see also the [porting guide](https://xiph.org/flac/api/group__porting__1__1__2__to__1__1__3.html) for specific instructions on porting to FLAC 1.1.3):\n    * all libraries;\n        * Merged libOggFLAC into libFLAC; both formats are now supported through the same API.\n        * Merged libOggFLAC++ into libFLAC++; both formats are now supported through the same API.\n        * Merged seekable stream decoder and file decoder into the stream decoder.\n        * Merged seekable stream encoder and file encoder into the stream encoder.\n        * Added #defines for the API version number to make porting easier; see <tt>include/lib*FLAC*/export.h</tt>.\n    * libFLAC:\n        * **Added** FLAC__stream_encoder_set_apodization()\n        * **Added** FLAC__stream_encoder_set_compression_level()\n        * **Added** FLAC__metadata_object_cuesheet_calculate_cddb_id()\n        * **Added** FLAC__metadata_get_cuesheet()\n        * **Added** FLAC__metadata_get_picture()\n        * **Added** FLAC__metadata_chain_read_ogg() and FLAC__metadata_chain_read_ogg_with_callbacks()\n        * **Changed** FLAC__stream_encoder_finish() now returns a FLAC__bool to signal a verify failure, or error processing last frame or updating metadata.\n        * **Changed** FLAC__StreamDecoderState: removed state FLAC__STREAM_DECODER_UNPARSEABLE_STREAM\n        * **Changed** FLAC__StreamDecoderErrorStatus: new error code FLAC__STREAM_DECODER_ERROR_STATUS_UNPARSEABLE_STREAM\n        * The above two changes mean that when the decoder encounters what it thinks are unparseable frames from a future decoder, instead of returning a fatal error with the FLAC__STREAM_DECODER_UNPARSEABLE_STREAM state, it just calls the error callback with FLAC__STREAM_DECODER_ERROR_STATUS_UNPARSEABLE_STREAM and leaves the behavior up to the application.\n    * libFLAC++:\n        * **Added** FLAC::Metadata::Picture\n        * **Added** FLAC::Encoder::Stream::set_apodization()\n        * **Added** FLAC::Encoder::Stream::set_compression_level()\n        * **Added** FLAC::Metadata::CueSheet::calculate_cddb_id()\n        * **Added** FLAC::Metadata::get_cuesheet()\n        * **Added** FLAC::Metadata::get_picture()\n        * **Changed** FLAC::Metadata::Chain::read() to accept a flag denoting Ogg FLAC input\n        * **Changed** FLAC::Decoder::Stream::finish() now returns a bool to signal an MD5 failure like FLAC__stream_decoder_finish() does.\n        * **Changed** FLAC::Encoder::Stream::finish() now returns a bool to signal a verify failure, or error processing last frame or updating metadata.\n    * libOggFLAC:\n        * Merged into libFLAC.\n    * libOggFLAC++:\n        * Merged into libFLAC++.\n\n## FLAC 1.1.2 (05-Feb-2005)  \n\n* General:\n    * Sped up decoding by a few percent overall.\n    * Sped up encoding when not using LPC (i.e. when using <span class=\"commandname\">flac</span> options <span class=\"argument\">-0</span>, <span class=\"argument\">-1</span>, <span class=\"argument\">-2</span>, or <span class=\"argument\">-l 0</span>).\n    * Fixed a decoding bug that could cause sync errors with some ID3v1-tagged FLAC files.\n    * Added [HTML documentation for metaflac](https://xiph.org/flac/documentation_tools_metaflac.html#metaflac).\n* FLAC format:\n    * (none)\n* Ogg FLAC format:\n    * (none)\n* flac:\n    * New option <span class=\"argument\">[--input-size](https://xiph.org/flac/documentation_tools_flac.html#flac_options_input_size)</span> to manually specify the input size when encoding raw samples from stdin.\n* metaflac:\n    * (none)\n* plugins:\n    * Added support for HTTP streaming in XMMS plugin. **NOTE**: there is a bug in the XMMS mpg123 plugin that hijacks FLAC streams; to fix it you will need to add the '.flac' extension to the list of exceptions in <span class=\"code\">Input/mpg123/mpg123.c:is_our_file()</span> in the XMMS sources and recompile.\n* build system:\n    * (none)\n* libraries:\n    * libFLAC: Sped up Rice block decoding in the bitbuffer, resulting in decoding speed gains of a few percent.\n    * libFLAC: Sped up encoding when not using LPC (i.e. <span class=\"code\">max_lpc_order == 0</span>).\n    * libFLAC: Trailing NUL characters maintained on Vorbis comment entries so they can be treated like C strings.\n    * libFLAC: More FLAC tag (i.e. Vorbis comment) validation.\n    * libFLAC: Fixed a bug in the logic that determines the frame or sample number in a frame header; the bug could cause sync errors with some ID3v1-tagged FLAC files.\n    * libFLAC, libOggFLAC: Can now be compiled to use only integer instructions, including encoding. The decoder is almost completely integer anyway but there were a couple places that needed a fixed-point replacement. There is no fixed-point version of LPC analysis yet, so if libFLAC is compiled integer-only, the encoder will behave as if the max LPC order is 0 (i.e. used fixed predictors only). LPC decoding is supported in all cases as it always was integer-only.\n* Interface changes:\n    * libFLAC:\n        * **Changed:** Metadata object interface now maintains a trailing NUL on Vorbis comment entries for convenience.\n        * **Changed:** Metadata object interface now validates all Vorbis comment entries on input and returns false if an entry does not conform to the Vorbis comment spec.\n        * **Added** FLAC__format_vorbiscomment_entry_name_is_legal()\n        * **Added** FLAC__format_vorbiscomment_entry_value_is_legal()\n        * **Added** FLAC__format_vorbiscomment_entry_is_legal()\n        * **Added** FLAC__metadata_object_vorbiscomment_entry_from_name_value_pair()\n        * **Added** FLAC__metadata_object_vorbiscomment_entry_to_name_value_pair()\n        * **Changed** the signature of FLAC__metadata_object_vorbiscomment_entry_matches(): the first argument is now <span class=\"code\">FLAC__StreamMetadata_VorbisComment_Entry entry</span> (was <span class=\"code\">const FLAC__StreamMetadata_VorbisComment_Entry \\*entry</span>), i.e. <span class=\"code\">entry</span> is now pass-by-value.\n    * libFLAC++:\n        * **Changed:** Metadata object interface now maintains a trailing NUL on Vorbis comment values for convenience.\n        * **Changed:** Metadata object interface now validates all Vorbis comment entries on input and returns false if an entry does not conform to the Vorbis comment spec.\n        * **Changed:** All Metadata objects' operator=() methods now return a reference to themselves.\n        * **Added** methods to FLAC::Metadata::VorbisComment::Entry for setting comment values from null-terminated strings:\n            * Entry(const char \\*field)\n            * Entry(const char \\*field_name, const char \\*field_value)\n            * bool set_field(const char \\*field)\n            * bool set_field_value(const char \\*field_value)\n        * **Changed** the signature of FLAC::Metadata::VorbisComment::get_vendor_string() and FLAC::Metadata::VorbisComment::set_vendor_string() to use a UTF-8, NUL-terminated string <span class=\"code\">const FLAC__byte *</span> for the vendor string instead of <span class=\"code\">FLAC::Metadata::VorbisComment::Entry</span>.\n        * **Added** FLAC::Metadata::*::assign() to all Metadata objects.\n        * **Added** bool FLAC::Metadata::get_tags(const char \\*filename, VorbisComment &tags)\n    * libOggFLAC:\n        * (none)\n    * libOggFLAC++:\n        * (none)\n\n## FLAC 1.1.1 (01-Oct-2004)  \n\n* General:\n    * Ogg FLAC seeking now works\n    * New optimizations almost double the decoding speed on PowerPC (e.g. Mac G4/G5)\n    * A native OS X release thanks to updated Project Builder and autotools files\n* FLAC format:\n    * Made invalid the metadata block type 127 so that audio frames can always be distinguished from metadata by seeing 0xff as the first byte. (This was also required for the Ogg FLAC mapping.)\n* Ogg FLAC format:\n    * First official FLAC->Ogg bitstream mapping standardized (see new [FLAC-to-Ogg mapping specification](ogg_mapping.html)). See the documentation for the <span class=\"argument\">[--ogg](https://xiph.org/flac/documentation_tools_flac.html#flac_options_ogg)</span> switch about having to re-encode older Ogg FLAC files.\n* flac:\n    * Print an error when output file already exists instead of automatically overwriting.\n    * New option <span class=\"argument\">[-f](https://xiph.org/flac/documentation_tools_flac.html#flac_options_force)</span> (<span class=\"argument\">[--force](https://xiph.org/flac/documentation_tools_flac.html#flac_options_force)</span>) to force overwriting if the output file already exists.\n    * New option <span class=\"argument\">[--cue](https://xiph.org/flac/documentation_tools_flac.html#flac_options_cue)</span> to select a specific section to decode using cuesheet track/index points.\n    * New option <span class=\"argument\">[--totally-silent](https://xiph.org/flac/documentation_tools_flac.html#flac_options_totally_silent)</span> to suppress all output.\n    * New (but undocumented) option <span class=\"argument\">--apply-replaygain-which-is-not-lossless</span> which applies ReplayGain to the decoded output. See [this thread](http://www.hydrogenaud.io/forums/index.php?showtopic=17293&st=11) for usage and caveats.\n    * When encoding to Ogg FLAC, use a random serial number (instead of 0 as was done before) when a serial number is not specified.\n    * When encoding multiple Ogg FLAC streams, <span class=\"argument\">--serial-number</span> or random serial number sets the first number, which is then incremented for subsequent streams (before, the same serial number was used for all streams).\n    * Decoder no longer exits with an error when writing to stdout and the pipe is broken.\n    * Better explanation of common error messages.\n    * Default extension when writing AIFF files is .aif (before, it was .aiff).\n    * Write more common representation of SANE numbers in AIFF files.\n    * Bug fix: calculating ReplayGain on 48kHz streams.\n    * Bug fix: check for supported block alignments in WAVE files.\n    * Bug fix: \"offset\" field in AIFF SSND chunk properly handled.\n    * Bug fix: [#679166](http://sourceforge.net/p/flac/bugs/77/): flac doesn't respect RIFF subchunk padding byte.\n    * Bug fix: [#828391](http://sourceforge.net/p/flac/bugs/90/): --add-replay-gain segfaults.\n    * Bug fix: [#851155](http://sourceforge.net/p/flac/bugs/96/): Can't seek to position in flac file.\n    * Bug fix: [#851756](http://sourceforge.net/p/flac/bugs/97/): flac --skip --until reads entire file.\n    * Bug fix: [#877122](http://sourceforge.net/p/flac/bugs/100/): problem parsing cuesheet with CATALOG entry.\n    * Bug fix: [#896057](http://sourceforge.net/p/flac/bugs/104/): parsing ISRC number from cuesheet.\n* metaflac:\n    * Renamed the tag editing options as follows (the <span class=\"argument\">...-vc-...</span> options still work but are deprecated):\n        * <span class=\"argument\">--show-vc-vendor</span> becomes <span class=\"argument\">--show-vendor-tag</span>\n        * <span class=\"argument\">--show-vc-field</span> becomes <span class=\"argument\">--show-tag</span>\n        * <span class=\"argument\">--remove-vc-all</span> becomes <span class=\"argument\">--remove-all-tags</span>\n        * <span class=\"argument\">--remove-vc-field</span> becomes <span class=\"argument\">--remove-tag</span>\n        * <span class=\"argument\">--remove-vc-firstfield</span> becomes <span class=\"argument\">--remove-first-tag</span>\n        * <span class=\"argument\">--set-vc-field</span> becomes <span class=\"argument\">--set-tag</span>\n        * <span class=\"argument\">--import-vc-from</span> becomes <span class=\"argument\">--import-tags-from</span>\n        * <span class=\"argument\">--export-vc-to</span> becomes <span class=\"argument\">--export-tags-to</span>\n    * Better explanation of common error messages.\n    * Bug fix: calculating ReplayGain on 48kHz streams.\n    * Bug fix: incorrect numbers when printing seek points.\n* plugins:\n    * Speed optimization in ReplayGain synthesis.\n    * Speed optimization in XMMS playback.\n    * Support for big-endian architectures in XMMS plugin.\n    * Removed support for ID3 tags.\n    * Bug fix: make hard limiter default to off in XMMS plugin.\n    * Bug fix: stream length calculation bug in XMMS plugin, debian bug #200435\n    * Bug fix: small memory leak in XMMS plugin.\n* build system:\n    * <span class=\"code\">ordinals.h</span> is now static, not a build-generated file anymore.\n* libraries:\n    * libFLAC: PPC+Altivec optimizations of some decoder routines.\n    * libFLAC: Make stream encoder encode the blocksize and sample rate in the frame header if at all possible (not in STREAMINFO), even if subset encoding was not requested.\n    * libFLAC: Bug fix: fixed seek routine where infinite loop could happen when seeking past end of stream.\n    * libFLAC, libFLAC++: added methods to skip single frames, useful for quickly finding frame boundaries (see interface changes below).\n    * libOggFLAC, libOggFLAC++: New seekable-stream and file encoder and decoder APIs to match native FLAC APIs (see interface changes below).\n* Interface changes:\n    * libFLAC:\n        * **Added** FLAC__metadata_get_tags()\n        * **Added** callback-based versions of metadata editing functions:\n            * FLAC__metadata_chain_read_with_callbacks()\n            * FLAC__metadata_chain_write_with_callbacks()\n            * FLAC__metadata_chain_write_with_callbacks_and_tempfile()\n            * FLAC__metadata_chain_check_if_tempfile_needed()\n        * **Added** decoder functions for skipping single frames, also useful for quickly finding frame boundaries:\n            * FLAC__stream_decoder_skip_single_frame()\n            * FLAC__seekable_stream_decoder_skip_single_frame()\n            * FLAC__file_decoder_skip_single_frame()\n        * **Added** new required tell callback on seekable stream encoder:\n            * FLAC__SeekableStreamEncoderTellStatus and FLAC__SeekableStreamEncoderTellStatusString\\[\\]\n            * FLAC__SeekableStreamEncoderTellCallback\n            * FLAC__seekable_stream_encoder_set_tell_callback()\n        * **Changed** FLAC__SeekableStreamEncoderState by adding FLAC__SEEKABLE_STREAM_ENCODER_TELL_ERROR\n        * **Changed** Tell callback is now required to initialize seekable stream encoder\n        * **Deleted** erroneous and unimplemented FLAC__file_decoder_process_remaining_frames()\n    * libFLAC++:\n        * **Added** FLAC::Metadata::get_tags()\n        * **Added** decoder functions for skipping single frames, also useful for quickly finding frame boundaries:\n            * FLAC::Decoder::Stream::skip_single_frame()\n            * FLAC::Decoder::SeekableStream::skip_single_frame()\n            * FLAC::Decoder::File::skip_single_frame()\n        * **Added** encoder functions for setting metadata:\n            * FLAC::Encoder::Stream::set_metadata(FLAC::Metadata::Prototype **metadata, unsigned num_blocks)\n            * FLAC::Encoder::SeekableStream::set_metadata(FLAC::Metadata::Prototype **metadata, unsigned num_blocks)\n            * FLAC::Encoder::File::set_metadata(FLAC::Metadata::Prototype **metadata, unsigned num_blocks)\n        * **Added** new required tell callback on seekable stream encoder:\n            * pure virtual FLAC::Encoder::SeekableStream::tell_callback()\n        * **Changed** Tell callback is now required to initialize seekable stream encoder\n        * **Deleted** the following methods:\n            * FLAC::Decoder::Stream::State::resolved_as_cstring()\n            * FLAC::Encoder::Stream::State::resolved_as_cstring()\n    * libOggFLAC:\n        * **Added** OggFLAC__SeekableStreamDecoder interface\n        * **Added** OggFLAC__FileDecoder interface\n        * **Added** OggFLAC__SeekableStreamEncoder interface\n        * **Added** OggFLAC__FileEncoder interface\n        * **Added** OggFLAC__stream_decoder_get_resolved_state_string()\n        * **Added** OggFLAC__stream_encoder_get_resolved_state_string()\n        * **Added** OggFLAC__stream_encoder_set_metadata_callback()\n        * **Changed** OggFLAC__StreamDecoderState by adding OggFLAC__STREAM_DECODER_END_OF_STREAM\n    * libOggFLAC++:\n        * **Added** OggFLAC::Decoder::SeekableStream interface\n        * **Added** OggFLAC::Decoder::File interface\n        * **Added** OggFLAC::Encoder::SeekableStream interface\n        * **Added** OggFLAC::Encoder::File interface\n        * **Added** OggFLAC::Decoder::Stream::get_resolved_state_string()\n        * **Added** OggFLAC::Encoder::Stream::get_resolved_state_string()\n        * **Added** pure virtual OggFLAC::Encoder::Stream::metadata_callback()\n\n## FLAC 1.1.0 (26-Jan-2003)  \n\nGeneral:\n\n* All code is now [Valgrind](http://valgrind.org/)-clean!\n* New [CUESHEET](https://xiph.org/flac/format.html#def_CUESHEET) metadata block for storing CD TOC and index point information. Now a CD can be completely backed up to a single FLAC file for archival.\n* [ReplayGain](http://www.replaygain.org/) support.\n* Better compression of 24-bit files.\n* More complete AIFF support.\n* 3DNow! optimizations enabled by default.\n* Complete MSVC build system with .dsp projects for everything, which can build both static libs and DLLs, and in debug or release mode, all in the same source tree.\n    \n<span class=\"commandname\">flac</span>:\n\n* Can now decode FLAC to AIFF; new <span class=\"argument\">--force-aiff-format</span> option.\n* New <span class=\"argument\">--cuesheet</span> option for reading and storing a cuesheet when encoding a whole CD. Automatically creates seek points for track and index points unless <span class=\"argument\">--no-cued-seekpoints</span> is used.\n* New <span class=\"argument\">--replay-gain</span> option for calculating ReplayGain values and storing them as tags.\n* New <span class=\"argument\">--until</span> option complements <span class=\"argument\">--skip</span> to stop decoding at a specified point in the stream.\n* <span class=\"argument\">--skip</span> and <span class=\"argument\">--until</span> now also accept mm:ss.ss format.\n* New <span class=\"argument\">-S #s</span> flavor to specify seekpoints every '#' number of seconds.\n* <span class=\"commandname\">flac</span> now defaults to <span class=\"argument\">-S 10s</span> instead of <span class=\"argument\">-S 100x</span> for the seek table.\n* <span class=\"commandname\">flac</span> now adds a 4k PADDING block by default (turn off with <span class=\"argument\">--no-padding</span>).\n* Fixed a bug with --skip and AIFF-to-FLAC encoding.\n* Fixed a bug where decoding a FLAC file whose total_samples==0 in the STREAMINFO would corrupt the WAVE header.\n\n<span class=\"commandname\">metaflac</span>:\n\n* New <span class=\"argument\">--import-cuesheet-from</span> option for reading and storing a cuesheet to a FLAC-encoded CD. Automatically creates seek points for track and index points unless <span class=\"argument\">--no-cued-seekpoints</span> is used.\n* New <span class=\"argument\">--export-cuesheet-to</span> option for writing a cuesheet from a FLAC file for use with CD authoring software.\n* New <span class=\"argument\">--add-replay-gain</span> option for calculating ReplayGain values and storing them as tags.\n* New <span class=\"argument\">--add-seekpoint</span> option to add seekpoints to an existing FLAC file. Includes new <span class=\"argument\">--add-seekpoint=#s</span> flavor to add seekpoints every '#' number of seconds.\n\nXMMS plugin:\n\n* Configurable sample resolution conversion with dither.\n* ReplayGain support with customizable noise shaping, pre-amp, and optional hard limiter.\n* New Vorbis comment editor.\n* File info now works.\n* Bitrate now shows the smoothed instantaneous bitrate.\n* Uses the ARTIST tag if there is no PERFORMER tag.\n\nWinamp2 plugin:\n\n* Configurable sample resolution conversion with dither.\n* ReplayGain support with customizable noise shaping, pre-amp, and optional hard limiter.\n* File info now works.\n* Uses the ARTIST tag if there is no PERFORMER tag.\n\nLibraries (developers take note!):\n\n* All code and tests are instrumented for Valgrind. All tests run Valgrind-clean, meaning no memory leaks or buffer over/under-runs.\n* Separate 64-bit datapath through the filter in <span class=\"commandname\">libFLAC</span> for better compression of >16 bps files.\n* <span class=\"code\">FLAC__metadata_object_new(FLAC__METADATA_TYPE_VORBIS_COMMENT)</span> now sets the vendor string.\n* The documentation on the usage of <span class=\"code\">FLAC::Iterator::get_block()</span> in <span class=\"commandname\">libFLAC++</span> has an important correction. If you use this class make sure to read [this](https://xiph.org/flac/api/group__flacpp__metadata__level2.html).\n\n## FLAC 1.0.4 (24-Sep-2002)  \n\nPlugins:\n\n* Support for Vorbis comments, ID3 v1 and v2 tags.\n* Configurable title formatting and charset conversion in XMMS plugin.\n* Support for 8- and 24-bit FLAC files. There is a compile-time option for raw 24-bit output or 24bps-to-16bps linear dithering (the default).\n\n<span class=\"commandname\">flac</span>:\n\n* Improved option parser (now uses getopt).\n* AIFF input support (thanks to Brady Patterson).\n* Small decoder speedup.\n* <span class=\"argument\">--sector-align</span> now supported for raw input files.\n* New -T, --tag options for adding Vorbis comments while encoding.\n* New --serial-number option for use with --ogg.\n* Automatically writes vendor string in Vorbis comments.\n* Drastically reduced memory requirements.\n* Fixed bug where extra fmt/data chunks that were supposed to be skipped were not getting skipped.\n* Fixed bug in granulepos setting for Ogg FLAC streams.\n* Fixed memory leak when encoding multiple files with -V.\n\n<span class=\"commandname\">metaflac</span>:\n\n* UTF-8 support in Vorbis comments.\n* New --import-vc-from and --export-vc-to commands for importing/exporting Vorbis comments from/to a file. For example, the following can be used to copy tags back and forth:  \n<span class=\"code\">metaflac --export-vc-to=- --no-utf8-convert file.flac | vorbiscomment --raw -w file.ogg  \nvorbiscomment --raw -l file.ogg | metaflac --import-vc-from=- --no-utf8-convert file.flac  \n</span>\n* Fixed [bug #606796](http://sourceforge.net/p/flac/bugs/54/) where <span class=\"commandname\">metaflac</span> was failing on read-only files.\n\nLibraries:\n\n* All APIs now meticulously documented via Doxygen. [See here](https://xiph.org/flac/api/index.html).\n* New <span class=\"commandname\">libOggFLAC</span> and <span class=\"commandname\">libOggFLAC++</span> libraries. These wrap around <span class=\"commandname\">libFLAC</span> to provide encoding and decoding of Ogg FLAC streams, providing interfaces similar to the ones of the native FLAC libraries. These are also documented via Doxygen.\n* New FLAC__SeekableStreamEncoder and FLAC__FileEncoder in <span class=\"commandname\">libFLAC</span> simplify common encoding tasks.\n* New verify mode in all encoders.\n* FLAC__stream_encoder_finish() now resets the defaults just like the stream decoders.\n* Drastically reduced memory requirements of encoders and decoders.\n* Encoder now automatically writes vendor string in VORBIS_COMMENT block.\n* Encoding speedup of fixed predictors and MD5 speedup for 16bps mono/stereo signals on x86 (thanks to Miroslav Lichvar).\n* Fixed bug in metadata interface where a bps in STREAMINFO > 16 was incorrectly parsed.\n* Fixed bug where aborting stream decoder could cause infinite loop.\n* Behavior change: simplified decoder \\*_process() commands.\n* Behavior change: calling FLAC__stream_encoder_init() calls write callback once for \"fLaC\" signature and once for each metadata block.\n    * Behavior change: deprecated do_escape_coding and rice_parameter_search_distance in encoder.\n\n## FLAC 1.0.3 (03-Jul-2002)  \n\nNew features:\n\n* 24-bit input support restored in <span class=\"commandname\">flac</span>.\n* Decoder speedup in <span class=\"commandname\">libFLAC</span>, which is directly passed on to the command-line decoder and plugins.\n* New <span class=\"argument\">-F</span> option to <span class=\"commandname\">flac</span> to continue decoding in spite of errors.\n* Correctly set granulepos in Ogg packets so seeking Ogg FLAC streams will be easier.\n* New [VORBIS_COMMENT](https://xiph.org/flac/format.html#metadata_block_vorbis_comment) metadata block for tagging with Vorbis-style comments.\n* Vastly improved <span class=\"commandname\">metaflac</span>, now with many editing and tagging options.\n* Partial id3v1 support in Winamp plugins.\n* Updated Winamp 3 plugin.\n* Note: new semantics for -P option in <span class=\"commandname\">flac</span>.\n* Note: removed -R option in <span class=\"commandname\">flac</span>.\n\nNew library features:\n\n* Previously mentioned decoder speedup in <span class=\"commandname\">libFLAC</span>.\n* New metadata interface to <span class=\"commandname\">libFLAC</span> for manipulating metadata in FLAC files.\n* New <span class=\"commandname\">libFLAC++</span> API, an object wrapper around <span class=\"commandname\">libFLAC</span>.\n* New [VORBIS_COMMENT](https://xiph.org/flac/format.html#metadata_block_vorbis_comment) metadata block for tagging with Vorbis-style comments.\n* Customizable metadata filtering by type in decoders.\n* Stream encoder can take an arbitrary list of metadata blocks, instead of just one SEEKTABLE and/or PADDING block.\n\nBugs fixed:\n\n* Fixed bug with using pipes under Windows.\n* Fixed several bugs in the plugins and made them more robust in general.\n* Fixed bug in <span class=\"commandname\">flac</span> where decoding to WAVE of a FLAC file with 0 for total_samples in the STREAMINFO block yielded a WAVE chunk of 0 size.\n* Fixed bug in Ogg packet numbering.\n\n## FLAC 1.0.2 (03-Dec-2001)  \n\n* This release is only to fix a bug that was causing some of the plugins to crash sporadically. It can also affect <span class=\"commandname\">libFLAC</span> users that reuse one file decoder instance for multiple files\n\n## FLAC 1.0.1 (14-Nov-2001)  \n\nNew features for users:\n\n* Support for Ogg-FLAC, i.e. <span class=\"commandname\">flac</span> can now read and write FLAC streams using Ogg as the transport layer.\n* New Winamp 3 plugin based on the Wasabi Beta 1 SDK.\n* New utilities for adding FLAC support to the Monkey's Audio GUI (see [how](https://xiph.org/flac/documentation_tasks.html#monkey)).\n* Mac OS X support. The download area now contains an OS X binary release.\n* Mingw32 support.\n* Better handling of MS-specific 'fmt' chunks in WAVE files.\n\nNew features for developers:\n\n* Added a SeekableStreamDecoder layer between StreamDecoder and FileDecoder. This makes it easier to use libFLAC in situations where files have been abstracted away. See the latest [documentation](https://xiph.org/flac/api/index.html) for more. The interface for the StreamDecoder and FileDecoder remain the same and are still binary-compatible with libFLAC 1.0.\n* Drastically reduced the stack requirements of the encoder.\n\nBug fixes:\n\n* Fixed a serious bug with <span class=\"commandname\">flac</span> and raw input where the encoder was trying to rewind when it shouldn't, which would add 12 junk samples to the encoded file. This was not present in WAVE encoding.\n* Fixed a minor bug in <span class=\"commandname\">libFLAC</span> with setting the file name to stdin on a file decoder.\n* Fixed a minor bug in <span class=\"commandname\">libFLAC</span> where multiple calls to setting the file name on a file decoder caused leaked memory.\n* Fixed a minor bug in <span class=\"commandname\">metaflac</span>, now correctly skips an id3v2 tag if present.\n* Fixed a minor bug in <span class=\"commandname\">metaflac</span>, now correctly skips long metadata blocks.\n\n## FLAC 1.0 (20-Jul-2001)  \n\nIt's finally here. There are a few new features but mostly it is minor bug fixes since 0.10:\n\n* New '--sector-align' option to <span class=\"commandname\">flac</span> which aligns a group of encoded files on CD audio sector boundaries.\n* New '--output-prefix' option to <span class=\"commandname\">flac</span> to allow the user to prepend a prefix to all output filenames (useful, for example, for encoding/decoding to a different directory).\n* Better WAVE autodetection (doesn't rely on ungetc() anymore).\n* Cleaner one-line encoding/decoding stats.\n* Changes to the libFLAC interface and type names to make binary compatibility easier to maintain in the future.\n* New '--sse-os' option to 'configure' to enable faster SSE-based routines.\n* Another (hopefully last) fix to the Winamp 2 plugin.\n* Slightly improved Rice parameter estimation.\n* Bug fixes for some very rare corner cases when encoding.\n\n## FLAC 0.10 (07-Jun-2001)  \n\nThis is probably the final beta. There have been many improvements in the last two months:\n\n* Both the encoder and decoder have been significantly sped up. Aside from C improvements, the code base now has an assembly infrastructure that allows assembly routines for different architectures to be easily integrated. Many key routines have now have faster IA-32 implementations (thanks to Miroslav).\n* A new metadata block [SEEKTABLE](https://xiph.org/flac/format.html#def_SEEKTABLE) has been defined to hold an arbitrary number of seek points, which speeds up seeking within a stream.\n* <span class=\"commandname\">flac</span> now has a command-line usage similar to 'gzip'; make sure to see the latest [documentation](https://xiph.org/flac/documentation.html) for the new usage. It also attempts to preserve the input file's timestamp and permissions.\n* The -# options in <span class=\"commandname\">flac</span> have been tweaked to yield the best compression-to-encode-time ratios. The new default is -5.\n* <span class=\"commandname\">flac</span> can now usually autodetect WAVE files when encoding so that -fw is usually not needed when encoding from stdin.\n* The WAVE reader in <span class=\"commandname\">flac</span> now just ignores (with a warning) unsupported sub-chunks instead of aborting with an error.\n* Added an option '--delete-input-file' to <span class=\"commandname\">flac</span> which automatically deletes the input after a successful encode/decode.\n* Added an option '-o' to <span class=\"commandname\">flac</span> to force the output file name (the old usage of \"flac - outputfilename\" is no longer supported).\n* Changed the XMMS plugin to send smaller chunks of samples (now 512) so that visualization is not slow.\n* Fixed a bug in the stream decoder where the decoded samples counter got corrupted after a seek.\n\n## FLAC 0.9 (31-Mar-2001)  \n\nBug fixes and some new features:\n\n* FLAC's sync code has been lengthened to 14 bits from 9 bits. This should enable a faster and more robust synchronization mechanism.\n* Two reserved bits were added to the frame header.\n* A CRC-16 was added to the FLAC frame footer, and the decoder now does frame integrity checking based on the CRC.\n* The format now includes a new subframe field to indicate when a subblock has one or more 0 LSBs for all samples. This increases compression on some kinds of data.\n* Added two options to the analysis mode, one for including the residual signal in the analysis file, and one for generating gnuplot files of each subframe's residual distribution with some statistics. See the latest [documentation](https://xiph.org/flac/documentation.html#analysis_options).\n* XMMS plugin now supports 8-bit files.\n* Fixed a bug in the Winamp2 plugin where the audio sounded garbled.\n* Fixed a bug in the Winamp2 plugin where Winamp would hang sporadically at the end of a track (c.f. [bug #231197](http://sourceforge.net/projects/flac/&atid=113478)).\n\n## FLAC 0.8 (05-Mar-2001)  \n\nChanges since 0.7:\n\n* Created a new utility called <span class=\"commandname\">metaflac</span>. It is a metadata editor for .flac files. Right now it just lists the contents of the metadata blocks but eventually it will allow update/insertion/deletion.\n* Added two new metadata blocks: PADDING which has an obvious function, and APPLICATION, which is meant to be open to third party applications. See the [latest format docs](https://xiph.org/flac/format.html#def_APPLICATION) for more info, or the new [id registration page](https://xiph.org/flac/id.html).\n* Added a <span class=\"argument\">-P</span> option to <span class=\"commandname\">flac</span> to reserve a PADDING block when encoding.\n* Added support for 24-bit files to <span class=\"commandname\">flac</span> (the FLAC format always supported it).\n* Started the Winamp3 plugin.\n* Greatly expanded the test suite, adding more streams (24-bit streams, noise streams, non-audio streams, more patterns) and more option combinations to the encoder. The test suite runs about 30 streams and over 5000 encodings now.\n* Fixed a bug in <span class=\"commandname\">libFLAC</span> that happened when using an exhaustive LPC coefficient quantization search with 8 bps input.\n* Fixed a bug in <span class=\"commandname\">libFLAC</span> where the error estimation in the fixed predictor could overflow.\n* Fixed a bug in <span class=\"commandname\">libFLAC</span> where LPC was attempted even when the autocorrelation coefficients implied it wouldn't help.\n* Reworked the LPC coefficient quantizer, which also fixed another bug that might occur in rare cases.\n* Really fixed the '-V overflow' bug (c.f. [bug #231976](http://sourceforge.net/p/flac/bugs/5/)).\n* Fixed a bug in <span class=\"commandname\">flac</span> related to the decode buffer sizing.FLAC is very close to being ready for an official release. The only known problems left are with the Winamp plugins, which should be fixed soon, and pipes with MSVC.\n\n## FLAC 0.7 (12-Feb-2001)  \n\nChanges:\n \n* Fixed a bug that happened when both -fr and --seek were used at the same time.\n* Fixed a bug with -p (c.f. [bug #230992](http://sourceforge.net/p/flac/bugs/1/)).\n* Fixed a bug that happened when using large (>32K) blocksizes and -V (c.f. [bug #231976](http://sourceforge.net/p/flac/bugs/5/)).\n* Fixed a bug where encoder was double-closing a file.\n* Expanded the test suite.\n* Added more optimization flags for gcc, which should speed up flac.\n\n## FLAC 0.6 (28-Jan-2001)  \n\nThe encoder is now much faster. The -m option has been sped up by 4x and -r improved, meaning that in the default compression mode (-6), encoding should be at least 3 times faster. Other changes:\n\n* Some bugs related to <span class=\"commandname\">flac</span> and pipes were fixed\n* A \"loose mid-side\" (<span class=\"argument\">-M</span>) option to the encoder has been added, which adaptively switches between independent and mid-side coding, instead of the exhaustive search that <span class=\"argument\">-m</span> does.\n* An analyze mode (<span class=\"argument\">-a</span>) has been added to <span class=\"commandname\">flac</span>. This is useful mainly for developers; currently it will dump info about each frame and subframe to a file. It's a text file in a format that can be easily processed by scripts; a separate analysis program is in the works.\n* The source now has an autoconf/libtool-based build system. This should allow the source to build \"out-of-the-box\" on many more platforms.\n\n## FLAC 0.5 (15-Jan-2001)  \n\nThis is the first beta version of FLAC. Being beta, there will be no changes to the format that will break older streams, unless a serious bug involving the format is found. What this means is that, barring such a bug, streams created with 0.5 will be decodable by future versions. This version also includes some new features:\n\n* An [MD5 signature](http://userpages.umbc.edu/~mabzug1/cs/md5/md5.html) of the unencoded audio is computed during encoding, and stored in the Encoding metadata block in the stream header. When decoding, <span class=\"commandname\">flac</span> will now compute the MD5 signature of the decoded data and compare it against the signature in the stream header.\n* A test mode (<span class=\"argument\">-t</span>) has been added to <span class=\"commandname\">flac</span>. It works like decode mode but doesn't write an output file.\n\n## FLAC 0.4 (23-Dec-2000)  \n\nThis version fixes a bug in the constant subframe detection. More importantly, a verify option (-V) has been added to <span class=\"commandname\">flac</span> that verifies the encoding process. With this option turned on, <span class=\"commandname\">flac</span> will create a parallel decoder while encoding to make sure that the encoded output decodes to exactly match the original input. In this way, any unknown bug in the encoder will be caught and <span class=\"commandname\">flac</span> will abort with an error message.\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 11.62890625,
          "content": "cmake_minimum_required(VERSION 3.12...3.31)\n\nif(NOT (CMAKE_BUILD_TYPE OR CMAKE_CONFIGURATION_TYPES OR DEFINED ENV{CFLAGS} OR DEFINED ENV{CXXFLAGS}))\n    set(CMAKE_BUILD_TYPE Release CACHE STRING \"Choose the type of build, options are: None Debug Release RelWithDebInfo\")\nendif()\n\nproject(FLAC VERSION 1.4.3) # HOMEPAGE_URL \"https://www.xiph.org/flac/\")\n\nlist(APPEND CMAKE_MODULE_PATH \"${CMAKE_CURRENT_SOURCE_DIR}/cmake\")\n\noption(BUILD_CXXLIBS \"Build libFLAC++\" ON)\noption(BUILD_PROGRAMS \"Build and install programs\" ON)\noption(BUILD_EXAMPLES \"Build and install examples\" ON)\noption(BUILD_TESTING \"Build tests\" ON)\noption(BUILD_DOCS \"Build and install doxygen documents\" ON)\noption(WITH_FORTIFY_SOURCE \"Enable protection against buffer overflows\" ON)\noption(WITH_STACK_PROTECTOR \"Enable GNU GCC stack smash protection\" ON)\noption(INSTALL_MANPAGES \"Install MAN pages\" ON)\noption(INSTALL_PKGCONFIG_MODULES \"Install PkgConfig modules\" ON)\noption(INSTALL_CMAKE_CONFIG_MODULE \"Install CMake package-config module\" ON)\noption(WITH_OGG \"ogg support (default: test for libogg)\" ON)\noption(BUILD_SHARED_LIBS \"Build shared instead of static libraries\" OFF)\noption(ENABLE_MULTITHREADING \"Enable multithreading if pthreads is available\" ON)\n\nset(VERSION ${PROJECT_VERSION})\n\nif(NOT UNIX)\n    # This is to make sure testing works when building with a DLL\n    set (CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/objs)\n    set (CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/objs)\nendif()\n\nif(WITH_OGG)\n    if(IS_DIRECTORY \"${CMAKE_CURRENT_SOURCE_DIR}/ogg\")\n        add_subdirectory(\"ogg\")\n        set(OGG_FOUND 1 CACHE INTERNAL \"ogg has been added as subdirectory\")\n        set_target_properties(ogg PROPERTIES FOLDER Libraries)\n        if(BUILD_TESTING)\n            set_target_properties(test_bitwise test_framing PROPERTIES FOLDER Tests)\n        endif()\n    else()\n        if(NOT TARGET Ogg::ogg)\n            find_package(Ogg REQUIRED)\n        else()\n            set(OGG_FOUND 1 CACHE INTERNAL \"ogg has already been built\")\n        endif()\n        set(OGG_PACKAGE \"ogg\")\n    endif()\nendif()\n\nfind_program (HAVE_GIT git)\n\nif(HAVE_GIT)\n    execute_process(\n        COMMAND git --git-dir=.git describe --tags --exact-match\n        WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}\n        OUTPUT_VARIABLE GIT_COMMIT_TAG\n        OUTPUT_STRIP_TRAILING_WHITESPACE\n        ERROR_QUIET\n        )\n    execute_process(\n        COMMAND git --git-dir=.git log -1 --pretty=format:%h\n        WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}\n        OUTPUT_VARIABLE GIT_COMMIT_HASH\n        OUTPUT_STRIP_TRAILING_WHITESPACE\n        ERROR_QUIET\n        )\n    execute_process(\n        COMMAND git --git-dir=.git log -1 --pretty=format:%cd --date=format:%Y%m%d\n        WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}\n        OUTPUT_VARIABLE GIT_COMMIT_DATE\n        OUTPUT_STRIP_TRAILING_WHITESPACE\n        ERROR_QUIET\n        )\nendif()\n\nif(NOT WIN32)\n    find_package(Iconv)\n    set(HAVE_ICONV ${Iconv_FOUND})\nendif()\n\nif(CMAKE_C_COMPILER_ID MATCHES \"GNU|Clang\")\n    set(CMAKE_C_FLAGS \"-Wall -Wextra -Wstrict-prototypes -Wmissing-prototypes -Waggregate-return -Wcast-align -Wnested-externs -Wshadow -Wundef -Wmissing-declarations -Winline ${CMAKE_C_FLAGS}\")\n    set(CMAKE_C_FLAGS_RELEASE \"-DNDEBUG ${CMAKE_C_FLAGS_RELEASE}\")\nendif()\nif(CMAKE_CXX_COMPILER_ID MATCHES \"GNU|Clang\")\n    set(CMAKE_CXX_FLAGS \"-Wall -Wextra -Wcast-align -Wshadow -Wwrite-strings -Wctor-dtor-privacy -Wnon-virtual-dtor -Wreorder -Wsign-promo -Wundef ${CMAKE_CXX_FLAGS}\")\n    set(CMAKE_CXX_FLAGS_RELEASE \"-DNDEBUG ${CMAKE_CXX_FLAGS_RELEASE}\")\nendif()\nif(MSVC)\n    set(CMAKE_C_FLAGS_RELEASE \"/O2 /Ob2 /Oi /Ot /Oy /DNDEBUG ${CMAKE_C_FLAGS_RELEASE}\")\nendif()\n\ninclude(CMakePackageConfigHelpers)\ninclude(CheckCCompilerFlag)\ninclude(CheckCXXCompilerFlag)\ninclude(CheckSymbolExists)\ninclude(CheckFunctionExists)\ninclude(CheckIncludeFile)\ninclude(CheckCSourceCompiles)\ninclude(CheckCXXSourceCompiles)\ninclude(CheckLibraryExists)\ninclude(GNUInstallDirs)\ninclude(UseSystemExtensions)\ninclude(TestBigEndian)\nenable_testing()\n\ncheck_include_file(\"byteswap.h\" HAVE_BYTESWAP_H)\ncheck_include_file(\"inttypes.h\" HAVE_INTTYPES_H)\ncheck_include_file(\"stdint.h\" HAVE_STDINT_H)\ncheck_include_file(\"stdbool.h\" HAVE_STDBOOL_H)\ncheck_include_file(\"arm_neon.h\" FLAC__HAS_NEONINTRIN)\n\nif(NOT HAVE_STDINT_H OR NOT HAVE_STDBOOL_H)\n    message(SEND_ERROR \"Header stdint.h and/or stdbool.h not found\")\nendif()\n\nif(MSVC)\n    check_include_file(\"intrin.h\" FLAC__HAS_X86INTRIN)\nelse()\n    check_include_file(\"x86intrin.h\" FLAC__HAS_X86INTRIN)\nendif()\n\n\nif(ANDROID AND CMAKE_SYSTEM_VERSION VERSION_LESS 24 AND (CMAKE_SYSTEM_PROCESSOR MATCHES \"i686\" OR CMAKE_SYSTEM_PROCESSOR MATCHES \"armv7-a\"))\n    # fseeko/ftello may link, but it's not usable before Android API 24 on 32-bit Android\n    # https://android.googlesource.com/platform/bionic/+/main/docs/32-bit-abi.md\n    message(STATUS \"Disabling fseeko/ftello for 32-bit Android before API 24\")\n    set(HAVE_FSEEKO 0 CACHE INTERNAL \"\")\nelse()\n    check_function_exists(fseeko HAVE_FSEEKO)\nendif()\n\ncheck_c_source_compiles(\"int main() { return __builtin_bswap16 (0) ; }\" HAVE_BSWAP16)\ncheck_c_source_compiles(\"int main() { return __builtin_bswap32 (0) ; }\" HAVE_BSWAP32)\ncheck_c_source_compiles(\"\n    #include <langinfo.h>\n    int main()\n    {\n        char* cs = nl_langinfo(CODESET);\n        return !cs;\n    }\"\n    HAVE_LANGINFO_CODESET)\n\ntest_big_endian(CPU_IS_BIG_ENDIAN)\n\ncheck_c_compiler_flag(-Werror HAVE_WERROR_FLAG)\ncheck_c_compiler_flag(-Wdeclaration-after-statement HAVE_DECL_AFTER_STMT_FLAG)\ncheck_c_compiler_flag(-mstackrealign HAVE_STACKREALIGN_FLAG)\ncheck_cxx_compiler_flag(-Weffc++ HAVE_WEFFCXX_FLAG)\n\nif(MINGW AND (WITH_FORTIFY_SOURCE OR WITH_STACK_PROTECTOR))\n  check_library_exists(\"ssp.a\"  __stack_chk_fail \"\" HAVE_LIBSSP)\n  if(NOT HAVE_LIBSSP)\n    message(WARNING \"Could not find libssp in MinGW, stack protection and/or FORTIFY_SOURCE are unavailable\")\n  else()\n    link_libraries(\"ssp.a\")\n    # static libraries don't carry over other static libraries in mingw\n    # we need to export it in the pkg-config\n    set(FLAC_STATIC_LIBS \"-lssp\")\n  endif()\nelseif(NOT MSVC)\n  set(HAVE_LIBSSP 1)\nendif()\n\nif(WITH_STACK_PROTECTOR)\n  if(NOT MSVC AND NOT EMSCRIPTEN)\n    check_c_compiler_flag(\"-fstack-protector-strong\" HAVE_STACK_PROTECTOR_FLAG)\n  endif()\nendif()\n\nif(HAVE_WERROR_FLAG)\n    option(ENABLE_WERROR \"Enable -Werror in all Makefiles\" OFF)\nendif()\n\nadd_compile_options(\n    $<$<BOOL:${MSVC}>:/wd4267>\n    $<$<BOOL:${MSVC}>:/wd4996>\n    $<$<BOOL:${ENABLE_WERROR}>:-Werror>\n    $<$<AND:$<COMPILE_LANGUAGE:CXX>,$<BOOL:${HAVE_WEFFCXX_FLAG}>>:-Weffc++>\n    $<$<AND:$<COMPILE_LANGUAGE:C>,$<BOOL:${HAVE_DECL_AFTER_STMT_FLAG}>>:-Wdeclaration-after-statement>)\n\nif(WITH_FORTIFY_SOURCE AND HAVE_LIBSSP)\n  add_definitions(-D_FORTIFY_SOURCE=2)\nendif()\n\nif(HAVE_STACK_PROTECTOR_FLAG AND HAVE_LIBSSP)\n    add_compile_options($<$<OR:$<COMPILE_LANGUAGE:C>,$<COMPILE_LANGUAGE:CXX>>:-fstack-protector-strong>)\nendif()\n\nif(CMAKE_SYSTEM_PROCESSOR STREQUAL \"i686\" AND HAVE_STACKREALIGN_FLAG)\n    add_compile_options($<$<OR:$<COMPILE_LANGUAGE:C>,$<COMPILE_LANGUAGE:CXX>>:-mstackrealign>)\nendif()\n\ninclude_directories(\"include\")\n\ninclude_directories(\"${CMAKE_CURRENT_BINARY_DIR}\")\nadd_definitions(-DHAVE_CONFIG_H)\n\nif(MSVC)\n    add_definitions(\n        -D_CRT_SECURE_NO_WARNINGS\n        -D_USE_MATH_DEFINES)\nendif()\nif(CMAKE_BUILD_TYPE STREQUAL Debug OR CMAKE_BUILD_TYPE STREQUAL RelWithDebInfo)\n    add_definitions(-DFLAC__OVERFLOW_DETECT)\nendif()\n\nif(ENABLE_MULTITHREADING)\n    set(CMAKE_THREAD_PREFER_PTHREAD TRUE)\n    set(THREADS_PREFER_PTHREAD_FLAG TRUE)\n    find_package(Threads)\n    if(CMAKE_USE_PTHREADS_INIT)\n        set(HAVE_PTHREAD 1)\n    endif()\nendif()\n\nadd_subdirectory(\"src\")\nif(BUILD_DOCS)\n    add_subdirectory(\"doc\")\nendif()\nif(BUILD_EXAMPLES)\n    add_subdirectory(\"examples\")\nendif()\nif(BUILD_TESTING)\n    add_subdirectory(\"test\")\nendif()\n\n# The following folder layout is mostly for MSVC\nset_property(GLOBAL PROPERTY USE_FOLDERS ON)\n\nset_target_properties(FLAC grabbag getopt replaygain_analysis replaygain_synthesis utf8 PROPERTIES FOLDER Libraries)\nif(BUILD_CXXLIBS)\n    set_target_properties(FLAC++ PROPERTIES FOLDER Libraries)\nendif()\nif(BUILD_PROGRAMS)\n    set_target_properties(flacapp metaflac PROPERTIES FOLDER Programs)\nendif()\nif(BUILD_TESTING)\n    set_target_properties(test_libFLAC test_libs_common test_picture test_seeking test_streams test_cuesheet PROPERTIES FOLDER Tests)\n\tif(BUILD_CXXLIBS)\n\t    set_target_properties(test_libFLAC++ PROPERTIES FOLDER Tests)\n\tendif()\nendif()\nif(BUILD_EXAMPLES)\n    set_target_properties(decode_file encode_file PROPERTIES FOLDER Examples)\n    if(BUILD_CXXLIBS)\n        set_target_properties(decode_file_cxx encode_file_cxx PROPERTIES FOLDER Examples)\n    endif()\nendif()\nif(BUILD_UTILS)\n    set_target_properties(flacdiff flactimer PROPERTIES FOLDER Utils)\nendif()\n\nconfigure_file(config.cmake.h.in config.h)\n\nif(INSTALL_CMAKE_CONFIG_MODULE)\n    install(\n        EXPORT targets\n        DESTINATION \"${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME}\"\n        NAMESPACE FLAC::)\n    export(EXPORT targets NAMESPACE FLAC:: FILE FLACTargets.cmake)\n\n    configure_package_config_file(\n        ${PROJECT_SOURCE_DIR}/flac-config.cmake.in ${CMAKE_CURRENT_BINARY_DIR}/flac-config.cmake\n        INSTALL_DESTINATION \"${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME}\")\n    write_basic_package_version_file(\n        ${CMAKE_CURRENT_BINARY_DIR}/flac-config-version.cmake COMPATIBILITY AnyNewerVersion)\n\n    install(\n        FILES ${CMAKE_CURRENT_BINARY_DIR}/flac-config.cmake ${CMAKE_CURRENT_BINARY_DIR}/flac-config-version.cmake\n        DESTINATION \"${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME}\"\n    )\n\n    install(\n        FILES\n            \"${CMAKE_CURRENT_BINARY_DIR}/flac-config.cmake\"\n            \"${CMAKE_CURRENT_BINARY_DIR}/flac-config-version.cmake\"\n        DESTINATION \"${CMAKE_INSTALL_LIBDIR}/cmake/${PROJECT_NAME}\")\nendif()\n\nfile(GLOB FLAC_HEADERS \"include/FLAC/*.h\")\nfile(GLOB FLAC++_HEADERS \"include/FLAC++/*.h\")\ninstall(FILES ${FLAC_HEADERS} DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/FLAC\")\ninstall(FILES ${FLAC++_HEADERS} DESTINATION \"${CMAKE_INSTALL_INCLUDEDIR}/FLAC++\")\nif(INSTALL_MANPAGES)\n    find_program (HAVE_PANDOC pandoc)\n    if(HAVE_PANDOC)\n        file(MAKE_DIRECTORY \"${CMAKE_BINARY_DIR}/man\")\n        add_custom_command(\n            OUTPUT man/flac.1\n            COMMAND pandoc --standalone --to man \"${CMAKE_SOURCE_DIR}/man/flac.md\" > man/flac.1\n            )\n        add_custom_command(\n            OUTPUT man/metaflac.1\n            COMMAND pandoc --standalone --to man \"${CMAKE_SOURCE_DIR}/man/metaflac.md\" > man/metaflac.1\n            )\n        add_custom_command(\n            OUTPUT man/flac.html\n            COMMAND pandoc --standalone --embed-resources --to html \"${CMAKE_SOURCE_DIR}/man/flac.md\" > man/flac.html || pandoc --self-contained --to html \"${CMAKE_SOURCE_DIR}/man/flac.md\" > man/flac.html\n            )\n        add_custom_command(\n            OUTPUT man/metaflac.html\n            COMMAND pandoc --standalone --embed-resources --to html \"${CMAKE_SOURCE_DIR}/man/metaflac.md\" > man/metaflac.html || pandoc --self-contained --to html \"${CMAKE_SOURCE_DIR}/man/metaflac.md\" > man/metaflac.html\n            )\n        add_custom_target(man ALL DEPENDS man/flac.1 man/metaflac.1 man/flac.html man/metaflac.html)\n        install(FILES \"${CMAKE_BINARY_DIR}/man/flac.1\" \"${CMAKE_BINARY_DIR}/man/metaflac.1\" DESTINATION \"${CMAKE_INSTALL_MANDIR}/man1\")\n    else()\n        if(EXISTS \"${CMAKE_SOURCE_DIR}/man/flac.1\" AND EXISTS \"${CMAKE_SOURCE_DIR}/man/metaflac.1\")\n            install(FILES \"man/flac.1\" \"man/metaflac.1\" DESTINATION \"${CMAKE_INSTALL_MANDIR}/man1\")\n        else()\n            message(SEND_ERROR \"Pandoc nor prebuild manpages are found. Cannot install manpages. Set INSTALL_MANPAGES to OFF to build without man pages\")\n        endif()\n    endif()\nendif()\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.0556640625,
          "content": "Thanks for considering contributing to the FLAC project!\n\nContributing to FLAC is possible in many ways. Among them are\n\n- Reporting bugs or other issues at https://github.com/xiph/flac/issues\n- Submitting patches at https://github.com/xiph/flac/pulls\n- Testing FLAC playing devices and software at\n  https://wiki.hydrogenaud.io/index.php?title=FLAC_decoder_testbench\n\nGeneral communication not specific to issues is generally done through\nthe FLAC mailing lists:\n\n- For user questions and discussions:\n  https://lists.xiph.org/mailman/listinfo/flac \n- For developer questions and discussions:\n  https://lists.xiph.org/mailman/listinfo/flac-dev\n\n## Goals\n\nSince FLAC is an open-source project, it's important to have a set of\ngoals that everyone works to. They may change slightly from time to time\nbut they're a good guideline. Changes should be in line with the goals\nand should not attempt to embrace any of the anti-goals.\n\n**Goals**\n\n- FLAC should be and stay an open format with an open-source reference\n  implementation.\n- FLAC should be lossless. This seems obvious but lossy compression\n  seems to creep into every audio codec. This goal also means that flac\n  should stay archival quality and be truly lossless for all input.\n  Testing of releases should be thorough.\n- FLAC should yield respectable compression, on par or better than other\n  lossless codecs.\n- FLAC should allow at least realtime decoding on even modest hardware.\n- FLAC should support fast sample-accurate seeking.\n- FLAC should allow gapless playback of consecutive streams. This follows from the lossless goal.\n- The FLAC project owes a lot to the many people who have advanced the\n  audio compression field so freely, and aims also to contribute through\n  the open-source development of new ideas.\n\n**Anti-goals**\n\n- Lossy compression. There are already many suitable lossy formats (Ogg\n  Vorbis, MP3, etc.).\n- Copy prevention, DRM, etc. There is no intention to add any copy\n  prevention methods. Of course, we can't stop someone from encrypting a\n  FLAC stream in another container (e.g. the way Apple encrypts AAC in\n  MP4 with FairPlay), that is the choice of the user.\n\n\n## Contributing patches\n\nContributions to FLAC should be licensed with the same license as the\npart of the FLAC project the contribution belongs to. These are\n\n- libFLAC and libFLAC++ are licensed under Xiph.org's\n  BSD-like license (see COPYING.Xiph), so contributions to these\n  libraries should also be licensed under this license, otherwise they\n  cannot be accepted\n- the flac and metaflac command line programs are licensed under GPLv2, \n  see COPYING.GPL\n- the helper libraries for flac and metaflac (which are in src/share)\n  are licensed under varying licenses, see the license preamble for each\n  file to see how they are licensed\n\nPatches can be contributed through GitHub as a Pull Request.\nAlternatively you can supply patches through the mailing list.\n\n## Code style\n\nFLAC does have its own peculiar coding style that does not seem to fit\ngeneral categories. You can use `git clang-format` to have your patch\nauto-formatted similar to the rest of the code.\n"
        },
        {
          "name": "COPYING.FDL",
          "type": "blob",
          "size": 22.416015625,
          "content": "\n                GNU Free Documentation License\n                 Version 1.3, 3 November 2008\n\n\n Copyright (C) 2000, 2001, 2002, 2007, 2008 Free Software Foundation, Inc.\n     <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n0. PREAMBLE\n\nThe purpose of this License is to make a manual, textbook, or other\nfunctional and useful document \"free\" in the sense of freedom: to\nassure everyone the effective freedom to copy and redistribute it,\nwith or without modifying it, either commercially or noncommercially.\nSecondarily, this License preserves for the author and publisher a way\nto get credit for their work, while not being considered responsible\nfor modifications made by others.\n\nThis License is a kind of \"copyleft\", which means that derivative\nworks of the document must themselves be free in the same sense.  It\ncomplements the GNU General Public License, which is a copyleft\nlicense designed for free software.\n\nWe have designed this License in order to use it for manuals for free\nsoftware, because free software needs free documentation: a free\nprogram should come with manuals providing the same freedoms that the\nsoftware does.  But this License is not limited to software manuals;\nit can be used for any textual work, regardless of subject matter or\nwhether it is published as a printed book.  We recommend this License\nprincipally for works whose purpose is instruction or reference.\n\n\n1. APPLICABILITY AND DEFINITIONS\n\nThis License applies to any manual or other work, in any medium, that\ncontains a notice placed by the copyright holder saying it can be\ndistributed under the terms of this License.  Such a notice grants a\nworld-wide, royalty-free license, unlimited in duration, to use that\nwork under the conditions stated herein.  The \"Document\", below,\nrefers to any such manual or work.  Any member of the public is a\nlicensee, and is addressed as \"you\".  You accept the license if you\ncopy, modify or distribute the work in a way requiring permission\nunder copyright law.\n\nA \"Modified Version\" of the Document means any work containing the\nDocument or a portion of it, either copied verbatim, or with\nmodifications and/or translated into another language.\n\nA \"Secondary Section\" is a named appendix or a front-matter section of\nthe Document that deals exclusively with the relationship of the\npublishers or authors of the Document to the Document's overall\nsubject (or to related matters) and contains nothing that could fall\ndirectly within that overall subject.  (Thus, if the Document is in\npart a textbook of mathematics, a Secondary Section may not explain\nany mathematics.)  The relationship could be a matter of historical\nconnection with the subject or with related matters, or of legal,\ncommercial, philosophical, ethical or political position regarding\nthem.\n\nThe \"Invariant Sections\" are certain Secondary Sections whose titles\nare designated, as being those of Invariant Sections, in the notice\nthat says that the Document is released under this License.  If a\nsection does not fit the above definition of Secondary then it is not\nallowed to be designated as Invariant.  The Document may contain zero\nInvariant Sections.  If the Document does not identify any Invariant\nSections then there are none.\n\nThe \"Cover Texts\" are certain short passages of text that are listed,\nas Front-Cover Texts or Back-Cover Texts, in the notice that says that\nthe Document is released under this License.  A Front-Cover Text may\nbe at most 5 words, and a Back-Cover Text may be at most 25 words.\n\nA \"Transparent\" copy of the Document means a machine-readable copy,\nrepresented in a format whose specification is available to the\ngeneral public, that is suitable for revising the document\nstraightforwardly with generic text editors or (for images composed of\npixels) generic paint programs or (for drawings) some widely available\ndrawing editor, and that is suitable for input to text formatters or\nfor automatic translation to a variety of formats suitable for input\nto text formatters.  A copy made in an otherwise Transparent file\nformat whose markup, or absence of markup, has been arranged to thwart\nor discourage subsequent modification by readers is not Transparent.\nAn image format is not Transparent if used for any substantial amount\nof text.  A copy that is not \"Transparent\" is called \"Opaque\".\n\nExamples of suitable formats for Transparent copies include plain\nASCII without markup, Texinfo input format, LaTeX input format, SGML\nor XML using a publicly available DTD, and standard-conforming simple\nHTML, PostScript or PDF designed for human modification.  Examples of\ntransparent image formats include PNG, XCF and JPG.  Opaque formats\ninclude proprietary formats that can be read and edited only by\nproprietary word processors, SGML or XML for which the DTD and/or\nprocessing tools are not generally available, and the\nmachine-generated HTML, PostScript or PDF produced by some word\nprocessors for output purposes only.\n\nThe \"Title Page\" means, for a printed book, the title page itself,\nplus such following pages as are needed to hold, legibly, the material\nthis License requires to appear in the title page.  For works in\nformats which do not have any title page as such, \"Title Page\" means\nthe text near the most prominent appearance of the work's title,\npreceding the beginning of the body of the text.\n\nThe \"publisher\" means any person or entity that distributes copies of\nthe Document to the public.\n\nA section \"Entitled XYZ\" means a named subunit of the Document whose\ntitle either is precisely XYZ or contains XYZ in parentheses following\ntext that translates XYZ in another language.  (Here XYZ stands for a\nspecific section name mentioned below, such as \"Acknowledgements\",\n\"Dedications\", \"Endorsements\", or \"History\".)  To \"Preserve the Title\"\nof such a section when you modify the Document means that it remains a\nsection \"Entitled XYZ\" according to this definition.\n\nThe Document may include Warranty Disclaimers next to the notice which\nstates that this License applies to the Document.  These Warranty\nDisclaimers are considered to be included by reference in this\nLicense, but only as regards disclaiming warranties: any other\nimplication that these Warranty Disclaimers may have is void and has\nno effect on the meaning of this License.\n\n2. VERBATIM COPYING\n\nYou may copy and distribute the Document in any medium, either\ncommercially or noncommercially, provided that this License, the\ncopyright notices, and the license notice saying this License applies\nto the Document are reproduced in all copies, and that you add no\nother conditions whatsoever to those of this License.  You may not use\ntechnical measures to obstruct or control the reading or further\ncopying of the copies you make or distribute.  However, you may accept\ncompensation in exchange for copies.  If you distribute a large enough\nnumber of copies you must also follow the conditions in section 3.\n\nYou may also lend copies, under the same conditions stated above, and\nyou may publicly display copies.\n\n\n3. COPYING IN QUANTITY\n\nIf you publish printed copies (or copies in media that commonly have\nprinted covers) of the Document, numbering more than 100, and the\nDocument's license notice requires Cover Texts, you must enclose the\ncopies in covers that carry, clearly and legibly, all these Cover\nTexts: Front-Cover Texts on the front cover, and Back-Cover Texts on\nthe back cover.  Both covers must also clearly and legibly identify\nyou as the publisher of these copies.  The front cover must present\nthe full title with all words of the title equally prominent and\nvisible.  You may add other material on the covers in addition.\nCopying with changes limited to the covers, as long as they preserve\nthe title of the Document and satisfy these conditions, can be treated\nas verbatim copying in other respects.\n\nIf the required texts for either cover are too voluminous to fit\nlegibly, you should put the first ones listed (as many as fit\nreasonably) on the actual cover, and continue the rest onto adjacent\npages.\n\nIf you publish or distribute Opaque copies of the Document numbering\nmore than 100, you must either include a machine-readable Transparent\ncopy along with each Opaque copy, or state in or with each Opaque copy\na computer-network location from which the general network-using\npublic has access to download using public-standard network protocols\na complete Transparent copy of the Document, free of added material.\nIf you use the latter option, you must take reasonably prudent steps,\nwhen you begin distribution of Opaque copies in quantity, to ensure\nthat this Transparent copy will remain thus accessible at the stated\nlocation until at least one year after the last time you distribute an\nOpaque copy (directly or through your agents or retailers) of that\nedition to the public.\n\nIt is requested, but not required, that you contact the authors of the\nDocument well before redistributing any large number of copies, to\ngive them a chance to provide you with an updated version of the\nDocument.\n\n\n4. MODIFICATIONS\n\nYou may copy and distribute a Modified Version of the Document under\nthe conditions of sections 2 and 3 above, provided that you release\nthe Modified Version under precisely this License, with the Modified\nVersion filling the role of the Document, thus licensing distribution\nand modification of the Modified Version to whoever possesses a copy\nof it.  In addition, you must do these things in the Modified Version:\n\nA. Use in the Title Page (and on the covers, if any) a title distinct\n   from that of the Document, and from those of previous versions\n   (which should, if there were any, be listed in the History section\n   of the Document).  You may use the same title as a previous version\n   if the original publisher of that version gives permission.\nB. List on the Title Page, as authors, one or more persons or entities\n   responsible for authorship of the modifications in the Modified\n   Version, together with at least five of the principal authors of the\n   Document (all of its principal authors, if it has fewer than five),\n   unless they release you from this requirement.\nC. State on the Title page the name of the publisher of the\n   Modified Version, as the publisher.\nD. Preserve all the copyright notices of the Document.\nE. Add an appropriate copyright notice for your modifications\n   adjacent to the other copyright notices.\nF. Include, immediately after the copyright notices, a license notice\n   giving the public permission to use the Modified Version under the\n   terms of this License, in the form shown in the Addendum below.\nG. Preserve in that license notice the full lists of Invariant Sections\n   and required Cover Texts given in the Document's license notice.\nH. Include an unaltered copy of this License.\nI. Preserve the section Entitled \"History\", Preserve its Title, and add\n   to it an item stating at least the title, year, new authors, and\n   publisher of the Modified Version as given on the Title Page.  If\n   there is no section Entitled \"History\" in the Document, create one\n   stating the title, year, authors, and publisher of the Document as\n   given on its Title Page, then add an item describing the Modified\n   Version as stated in the previous sentence.\nJ. Preserve the network location, if any, given in the Document for\n   public access to a Transparent copy of the Document, and likewise\n   the network locations given in the Document for previous versions\n   it was based on.  These may be placed in the \"History\" section.\n   You may omit a network location for a work that was published at\n   least four years before the Document itself, or if the original\n   publisher of the version it refers to gives permission.\nK. For any section Entitled \"Acknowledgements\" or \"Dedications\",\n   Preserve the Title of the section, and preserve in the section all\n   the substance and tone of each of the contributor acknowledgements\n   and/or dedications given therein.\nL. Preserve all the Invariant Sections of the Document,\n   unaltered in their text and in their titles.  Section numbers\n   or the equivalent are not considered part of the section titles.\nM. Delete any section Entitled \"Endorsements\".  Such a section\n   may not be included in the Modified Version.\nN. Do not retitle any existing section to be Entitled \"Endorsements\"\n   or to conflict in title with any Invariant Section.\nO. Preserve any Warranty Disclaimers.\n\nIf the Modified Version includes new front-matter sections or\nappendices that qualify as Secondary Sections and contain no material\ncopied from the Document, you may at your option designate some or all\nof these sections as invariant.  To do this, add their titles to the\nlist of Invariant Sections in the Modified Version's license notice.\nThese titles must be distinct from any other section titles.\n\nYou may add a section Entitled \"Endorsements\", provided it contains\nnothing but endorsements of your Modified Version by various\nparties--for example, statements of peer review or that the text has\nbeen approved by an organization as the authoritative definition of a\nstandard.\n\nYou may add a passage of up to five words as a Front-Cover Text, and a\npassage of up to 25 words as a Back-Cover Text, to the end of the list\nof Cover Texts in the Modified Version.  Only one passage of\nFront-Cover Text and one of Back-Cover Text may be added by (or\nthrough arrangements made by) any one entity.  If the Document already\nincludes a cover text for the same cover, previously added by you or\nby arrangement made by the same entity you are acting on behalf of,\nyou may not add another; but you may replace the old one, on explicit\npermission from the previous publisher that added the old one.\n\nThe author(s) and publisher(s) of the Document do not by this License\ngive permission to use their names for publicity for or to assert or\nimply endorsement of any Modified Version.\n\n\n5. COMBINING DOCUMENTS\n\nYou may combine the Document with other documents released under this\nLicense, under the terms defined in section 4 above for modified\nversions, provided that you include in the combination all of the\nInvariant Sections of all of the original documents, unmodified, and\nlist them all as Invariant Sections of your combined work in its\nlicense notice, and that you preserve all their Warranty Disclaimers.\n\nThe combined work need only contain one copy of this License, and\nmultiple identical Invariant Sections may be replaced with a single\ncopy.  If there are multiple Invariant Sections with the same name but\ndifferent contents, make the title of each such section unique by\nadding at the end of it, in parentheses, the name of the original\nauthor or publisher of that section if known, or else a unique number.\nMake the same adjustment to the section titles in the list of\nInvariant Sections in the license notice of the combined work.\n\nIn the combination, you must combine any sections Entitled \"History\"\nin the various original documents, forming one section Entitled\n\"History\"; likewise combine any sections Entitled \"Acknowledgements\",\nand any sections Entitled \"Dedications\".  You must delete all sections\nEntitled \"Endorsements\".\n\n\n6. COLLECTIONS OF DOCUMENTS\n\nYou may make a collection consisting of the Document and other\ndocuments released under this License, and replace the individual\ncopies of this License in the various documents with a single copy\nthat is included in the collection, provided that you follow the rules\nof this License for verbatim copying of each of the documents in all\nother respects.\n\nYou may extract a single document from such a collection, and\ndistribute it individually under this License, provided you insert a\ncopy of this License into the extracted document, and follow this\nLicense in all other respects regarding verbatim copying of that\ndocument.\n\n\n7. AGGREGATION WITH INDEPENDENT WORKS\n\nA compilation of the Document or its derivatives with other separate\nand independent documents or works, in or on a volume of a storage or\ndistribution medium, is called an \"aggregate\" if the copyright\nresulting from the compilation is not used to limit the legal rights\nof the compilation's users beyond what the individual works permit.\nWhen the Document is included in an aggregate, this License does not\napply to the other works in the aggregate which are not themselves\nderivative works of the Document.\n\nIf the Cover Text requirement of section 3 is applicable to these\ncopies of the Document, then if the Document is less than one half of\nthe entire aggregate, the Document's Cover Texts may be placed on\ncovers that bracket the Document within the aggregate, or the\nelectronic equivalent of covers if the Document is in electronic form.\nOtherwise they must appear on printed covers that bracket the whole\naggregate.\n\n\n8. TRANSLATION\n\nTranslation is considered a kind of modification, so you may\ndistribute translations of the Document under the terms of section 4.\nReplacing Invariant Sections with translations requires special\npermission from their copyright holders, but you may include\ntranslations of some or all Invariant Sections in addition to the\noriginal versions of these Invariant Sections.  You may include a\ntranslation of this License, and all the license notices in the\nDocument, and any Warranty Disclaimers, provided that you also include\nthe original English version of this License and the original versions\nof those notices and disclaimers.  In case of a disagreement between\nthe translation and the original version of this License or a notice\nor disclaimer, the original version will prevail.\n\nIf a section in the Document is Entitled \"Acknowledgements\",\n\"Dedications\", or \"History\", the requirement (section 4) to Preserve\nits Title (section 1) will typically require changing the actual\ntitle.\n\n\n9. TERMINATION\n\nYou may not copy, modify, sublicense, or distribute the Document\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense, or distribute it is void, and\nwill automatically terminate your rights under this License.\n\nHowever, if you cease all violation of this License, then your license\nfrom a particular copyright holder is reinstated (a) provisionally,\nunless and until the copyright holder explicitly and finally\nterminates your license, and (b) permanently, if the copyright holder\nfails to notify you of the violation by some reasonable means prior to\n60 days after the cessation.\n\nMoreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\nTermination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, receipt of a copy of some or all of the same material does\nnot give you any rights to use it.\n\n\n10. FUTURE REVISIONS OF THIS LICENSE\n\nThe Free Software Foundation may publish new, revised versions of the\nGNU Free Documentation License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in\ndetail to address new problems or concerns.  See\nhttps://www.gnu.org/licenses/.\n\nEach version of the License is given a distinguishing version number.\nIf the Document specifies that a particular numbered version of this\nLicense \"or any later version\" applies to it, you have the option of\nfollowing the terms and conditions either of that specified version or\nof any later version that has been published (not as a draft) by the\nFree Software Foundation.  If the Document does not specify a version\nnumber of this License, you may choose any version ever published (not\nas a draft) by the Free Software Foundation.  If the Document\nspecifies that a proxy can decide which future versions of this\nLicense can be used, that proxy's public statement of acceptance of a\nversion permanently authorizes you to choose that version for the\nDocument.\n\n11. RELICENSING\n\n\"Massive Multiauthor Collaboration Site\" (or \"MMC Site\") means any\nWorld Wide Web server that publishes copyrightable works and also\nprovides prominent facilities for anybody to edit those works.  A\npublic wiki that anybody can edit is an example of such a server.  A\n\"Massive Multiauthor Collaboration\" (or \"MMC\") contained in the site\nmeans any set of copyrightable works thus published on the MMC site.\n\n\"CC-BY-SA\" means the Creative Commons Attribution-Share Alike 3.0\nlicense published by Creative Commons Corporation, a not-for-profit\ncorporation with a principal place of business in San Francisco,\nCalifornia, as well as future copyleft versions of that license\npublished by that same organization.\n\n\"Incorporate\" means to publish or republish a Document, in whole or in\npart, as part of another Document.\n\nAn MMC is \"eligible for relicensing\" if it is licensed under this\nLicense, and if all works that were first published under this License\nsomewhere other than this MMC, and subsequently incorporated in whole or\nin part into the MMC, (1) had no cover texts or invariant sections, and\n(2) were thus incorporated prior to November 1, 2008.\n\nThe operator of an MMC Site may republish an MMC contained in the site\nunder CC-BY-SA on the same site at any time before August 1, 2009,\nprovided the MMC is eligible for relicensing.\n\n\nADDENDUM: How to use this License for your documents\n\nTo use this License in a document you have written, include a copy of\nthe License in the document and put the following copyright and\nlicense notices just after the title page:\n\n    Copyright (c)  YEAR  YOUR NAME.\n    Permission is granted to copy, distribute and/or modify this document\n    under the terms of the GNU Free Documentation License, Version 1.3\n    or any later version published by the Free Software Foundation;\n    with no Invariant Sections, no Front-Cover Texts, and no Back-Cover Texts.\n    A copy of the license is included in the section entitled \"GNU\n    Free Documentation License\".\n\nIf you have Invariant Sections, Front-Cover Texts and Back-Cover Texts,\nreplace the \"with...Texts.\" line with this:\n\n    with the Invariant Sections being LIST THEIR TITLES, with the\n    Front-Cover Texts being LIST, and with the Back-Cover Texts being LIST.\n\nIf you have Invariant Sections without Cover Texts, or some other\ncombination of the three, merge those two alternatives to suit the\nsituation.\n\nIf your document contains nontrivial examples of program code, we\nrecommend releasing these examples in parallel under your choice of\nfree software license, such as the GNU General Public License,\nto permit their use in free software."
        },
        {
          "name": "COPYING.GPL",
          "type": "blob",
          "size": 17.66796875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "COPYING.LGPL",
          "type": "blob",
          "size": 25.81640625,
          "content": "\t\t  GNU LESSER GENERAL PUBLIC LICENSE\n\t\t       Version 2.1, February 1999\n\n Copyright (C) 1991, 1999 Free Software Foundation, Inc.\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n[This is the first released version of the Lesser GPL.  It also counts\n as the successor of the GNU Library Public License, version 2, hence\n the version number 2.1.]\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicenses are intended to guarantee your freedom to share and change\nfree software--to make sure the software is free for all its users.\n\n  This license, the Lesser General Public License, applies to some\nspecially designated software packages--typically libraries--of the\nFree Software Foundation and other authors who decide to use it.  You\ncan use it too, but we suggest you first think carefully about whether\nthis license or the ordinary General Public License is the better\nstrategy to use in any particular case, based on the explanations below.\n\n  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n\n  To protect your rights, we need to make restrictions that forbid\ndistributors to deny you these rights or to ask you to surrender these\nrights.  These restrictions translate to certain responsibilities for\nyou if you distribute copies of the library or if you modify it.\n\n  For example, if you distribute copies of the library, whether gratis\nor for a fee, you must give the recipients all the rights that we gave\nyou.  You must make sure that they, too, receive or can get the source\ncode.  If you link other code with the library, you must provide\ncomplete object files to the recipients, so that they can relink them\nwith the library after making changes to the library and recompiling\nit.  And you must show them these terms so they know their rights.\n\n  We protect your rights with a two-step method: (1) we copyright the\nlibrary, and (2) we offer you this license, which gives you legal\npermission to copy, distribute and/or modify the library.\n\n  To protect each distributor, we want to make it very clear that\nthere is no warranty for the free library.  Also, if the library is\nmodified by someone else and passed on, the recipients should know\nthat what they have is not the original version, so that the original\nauthor's reputation will not be affected by problems that might be\nintroduced by others.\n\f\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\nconsistent with the full freedom of use specified in this license.\n\n  Most GNU software, including some libraries, is covered by the\nordinary GNU General Public License.  This license, the GNU Lesser\nGeneral Public License, applies to certain designated libraries, and\nis quite different from the ordinary General Public License.  We use\nthis license for certain libraries in order to permit linking those\nlibraries into non-free programs.\n\n  When a program is linked with a library, whether statically or using\na shared library, the combination of the two is legally speaking a\ncombined work, a derivative of the original library.  The ordinary\nGeneral Public License therefore permits such linking only if the\nentire combination fits its criteria of freedom.  The Lesser General\nPublic License permits more lax criteria for linking other code with\nthe library.\n\n  We call this license the \"Lesser\" General Public License because it\ndoes Less to protect the user's freedom than the ordinary General\nPublic License.  It also provides other free software developers Less\nof an advantage over competing non-free programs.  These disadvantages\nare the reason we use the ordinary General Public License for many\nlibraries.  However, the Lesser license provides advantages in certain\nspecial circumstances.\n\n  For example, on rare occasions, there may be a special need to\nencourage the widest possible use of a certain library, so that it becomes\na de-facto standard.  To achieve this, non-free programs must be\nallowed to use the library.  A more frequent case is that a free\nlibrary does the same job as widely used non-free libraries.  In this\ncase, there is little to gain by limiting the free library to free\nsoftware only, so we use the Lesser General Public License.\n\n  In other cases, permission to use a particular library in non-free\nprograms enables a greater number of people to use a large body of\nfree software.  For example, permission to use the GNU C Library in\nnon-free programs enables many more people to use the whole GNU\noperating system, as well as its variant, the GNU/Linux operating\nsystem.\n\n  Although the Lesser General Public License is Less protective of the\nusers' freedom, it does ensure that the user of a program that is\nlinked with the Library has the freedom and the wherewithal to run\nthat program using a modified version of the Library.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.  Pay close attention to the difference between a\n\"work based on the library\" and a \"work that uses the library\".  The\nformer contains code derived from the library, whereas the latter must\nbe combined with the library in order to run.\n\f\n\t\t  GNU LESSER GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License Agreement applies to any software library or other\nprogram which contains a notice placed by the copyright holder or\nother authorized party saying it may be distributed under the terms of\nthis Lesser General Public License (also called \"this License\").\nEach licensee is addressed as \"you\".\n\n  A \"library\" means a collection of software functions and/or data\nprepared so as to be conveniently linked with application programs\n(which use some of those functions and data) to form executables.\n\n  The \"Library\", below, refers to any such software library or work\nwhich has been distributed under these terms.  A \"work based on the\nLibrary\" means either the Library or any derivative work under\ncopyright law: that is to say, a work containing the Library or a\nportion of it, either verbatim or with modifications and/or translated\nstraightforwardly into another language.  (Hereinafter, translation is\nincluded without limitation in the term \"modification\".)\n\n  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning a program using the Library is not restricted, and output from\nsuch a program is covered only if its contents constitute a work based\non the Library (independent of the use of the Library in a tool for\nwriting it).  Whether that is true depends on what the Library does\nand what the program that uses the Library does.\n  \n  1. You may copy and distribute verbatim copies of the Library's\ncomplete source code as you receive it, in any medium, provided that\nyou conspicuously and appropriately publish on each copy an\nappropriate copyright notice and disclaimer of warranty; keep intact\nall the notices that refer to this License and to the absence of any\nwarranty; and distribute a copy of this License along with the\nLibrary.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\nof it, thus forming a work based on the Library, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) The modified work must itself be a software library.\n\n    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n    table of data to be supplied by an application program that uses\n    the facility, other than as an argument passed when the facility\n    is invoked, then you must make a good faith effort to ensure that,\n    in the event an application does not supply such function or\n    table, the facility still operates, and performs whatever part of\n    its purpose remains meaningful.\n\n    (For example, a function in a library to compute square roots has\n    a purpose that is entirely well-defined independent of the\n    application.  Therefore, Subsection 2d requires that any\n    application-supplied function or table used by this function must\n    be optional: if the application does not supply it, the square\n    root function must still compute square roots.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Library,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Library, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\nwith the Library (or with a work based on the Library) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may opt to apply the terms of the ordinary GNU General Public\nLicense instead of this License to a given copy of the Library.  To do\nthis, you must alter all the notices that refer to this License, so\nthat they refer to the ordinary GNU General Public License, version 2,\ninstead of to this License.  (If a newer version than version 2 of the\nordinary GNU General Public License has appeared, then you can specify\nthat version instead if you wish.)  Do not make any other change in\nthese notices.\n\f\n  Once this change is made in a given copy, it is irreversible for\nthat copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\nderivative of it, under Section 2) in object code or executable form\nunder the terms of Sections 1 and 2 above provided that you accompany\nit with the complete corresponding machine-readable source code, which\nmust be distributed under the terms of Sections 1 and 2 above on a\nmedium customarily used for software interchange.\n\n  If distribution of object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the\nsource code from the same place satisfies the requirement to\ndistribute the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  5. A program that contains no derivative of any portion of the\nLibrary, but is designed to work with the Library by being compiled or\nlinked with it, is called a \"work that uses the Library\".  Such a\nwork, in isolation, is not a derivative work of the Library, and\ntherefore falls outside the scope of this License.\n\n  However, linking a \"work that uses the Library\" with the Library\ncreates an executable that is a derivative of the Library (because it\ncontains portions of the Library), rather than a \"work that uses the\nlibrary\".  The executable is therefore covered by this License.\nSection 6 states terms for distribution of such executables.\n\n  When a \"work that uses the Library\" uses material from a header file\nthat is part of the Library, the object code for the work may be a\nderivative work of the Library even though the source code is not.\nWhether this is true is especially significant if the work can be\nlinked without the Library, or if the work is itself a library.  The\nthreshold for this to be true is not precisely defined by law.\n\n  If such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small inline\nfunctions (ten lines or less in length), then the use of the object\nfile is unrestricted, regardless of whether it is legally a derivative\nwork.  (Executables containing this object code plus portions of the\nLibrary will still fall under Section 6.)\n\n  Otherwise, if the work is a derivative of the Library, you may\ndistribute the object code for the work under the terms of Section 6.\nAny executables containing that work also fall under Section 6,\nwhether or not they are linked directly with the Library itself.\n\f\n  6. As an exception to the Sections above, you may also combine or\nlink a \"work that uses the Library\" with the Library to produce a\nwork containing portions of the Library, and distribute that work\nunder terms of your choice, provided that the terms permit\nmodification of the work for the customer's own use and reverse\nengineering for debugging such modifications.\n\n  You must give prominent notice with each copy of the work that the\nLibrary is used in it and that the Library and its use are covered by\nthis License.  You must supply a copy of this License.  If the work\nduring execution displays copyright notices, you must include the\ncopyright notice for the Library among them, as well as a reference\ndirecting the user to the copy of this License.  Also, you must do one\nof these things:\n\n    a) Accompany the work with the complete corresponding\n    machine-readable source code for the Library including whatever\n    changes were used in the work (which must be distributed under\n    Sections 1 and 2 above); and, if the work is an executable linked\n    with the Library, with the complete machine-readable \"work that\n    uses the Library\", as object code and/or source code, so that the\n    user can modify the Library and then relink to produce a modified\n    executable containing the modified Library.  (It is understood\n    that the user who changes the contents of definitions files in the\n    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n    d) If distribution of the work is made by offering access to copy\n    from a designated place, offer equivalent access to copy the above\n    specified materials from the same place.\n\n    e) Verify that the user has already received a copy of these\n    materials or that you have already sent this user a copy.\n\n  For an executable, the required form of the \"work that uses the\nLibrary\" must include any data and utility programs needed for\nreproducing the executable from it.  However, as a special exception,\nthe materials to be distributed need not include anything that is\nnormally distributed (in either source or binary form) with the major\ncomponents (compiler, kernel, and so on) of the operating system on\nwhich the executable runs, unless that component itself accompanies\nthe executable.\n\n  It may happen that this requirement contradicts the license\nrestrictions of other proprietary libraries that do not normally\naccompany the operating system.  Such a contradiction means you cannot\nuse both them and the Library together in an executable that you\ndistribute.\n\f\n  7. You may place library facilities that are a work based on the\nLibrary side-by-side in a single library together with other library\nfacilities not covered by this License, and distribute such a combined\nlibrary, provided that the separate distribution of the work based on\nthe Library and of the other library facilities is otherwise\npermitted, and provided that you do these two things:\n\n    a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities.  This must be distributed under the terms of the\n    Sections above.\n\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\nattempt otherwise to copy, modify, sublicense, link with, or\ndistribute the Library is void, and will automatically terminate your\nrights under this License.  However, parties who have received copies,\nor rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n\n  9. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Library or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Library (or any work based on the\nLibrary), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties with\nthis License.\n\f\n  11. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Library.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply,\nand the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  12. If the distribution and/or use of the Library is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Library under this License may add\nan explicit geographical distribution limitation excluding those countries,\nso that distribution is permitted only in or among countries not thus\nexcluded.  In such case, this License incorporates the limitation as if\nwritten in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Library\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation.  If the Library does not specify a\nlicense version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\nSoftware Foundation; we sometimes make exceptions for this.  Our\ndecision will be guided by the two goals of preserving the free status\nof all derivatives of our free software and of promoting the sharing\nand reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n\f\n           How to Apply These Terms to Your New Libraries\n\n  If you develop a new library, and you want it to be of the greatest\npossible use to the public, we recommend making it free software that\neveryone can redistribute and change.  You can do so by permitting\nredistribution under these terms (or, alternatively, under the terms of the\nordinary General Public License).\n\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2.1 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public\n    License along with this library; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\nAlso add information on how to contact you by electronic and paper mail.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the library, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the\n  library `Frob' (a library for tweaking knobs) written by James Random Hacker.\n\n  <signature of Ty Coon>, 1 April 1990\n  Ty Coon, President of Vice\n\nThat's all there is to it!\n\n\n"
        },
        {
          "name": "COPYING.Xiph",
          "type": "blob",
          "size": 1.4736328125,
          "content": "Copyright (C) 2000-2009  Josh Coalson\nCopyright (C) 2011-2024  Xiph.Org Foundation\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions\nare met:\n\n- Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n\n- Redistributions in binary form must reproduce the above copyright\nnotice, this list of conditions and the following disclaimer in the\ndocumentation and/or other materials provided with the distribution.\n\n- Neither the name of the Xiph.Org Foundation nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR\nCONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\nEXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\nPROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\nLIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\nNEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 1.6982421875,
          "content": "#  FLAC - Free Lossless Audio Codec\n#  Copyright (C) 2001-2009  Josh Coalson\n#  Copyright (C) 2011-2024  Xiph.Org Foundation\n#\n#  This file is part the FLAC project.  FLAC is comprised of several\n#  components distributed under different licenses.  The codec libraries\n#  are distributed under Xiph.Org's BSD-like license (see the file\n#  COPYING.Xiph in this distribution).  All other programs, libraries, and\n#  plugins are distributed under the GPL (see COPYING.GPL).  The documentation\n#  is distributed under the Gnu FDL (see COPYING.FDL).  Each file in the\n#  FLAC distribution contains at the top the terms under which it may be\n#  distributed.\n#\n#  Since this particular file is relevant to all components of FLAC,\n#  it may be distributed under the Xiph.Org license, which is the least\n#  restrictive of those mentioned above.  See the file COPYING.Xiph in this\n#  distribution.\n\n#\n# automake provides the following useful targets:\n#\n# all: build all programs and libraries using the current\n# configuration (set by configure)\n#\n# check: build and run all self-tests\n#\n# clean: remove everything except what's required to build everything\n#\n# distclean: remove everything except what goes in the distribution\n#\n\nACLOCAL_AMFLAGS = -I m4\n\nSUBDIRS = doc include m4 man src test oss-fuzz\n\nif EXAMPLES\nSUBDIRS += examples\nendif\n\nEXTRA_DIST = \\\n\tCMakeLists.txt \\\n\tconfig.cmake.h.in \\\n\tflac-config.cmake.in \\\n\tcmake/CheckA64NEON.c.in \\\n\tcmake/CheckA64NEON.cmake \\\n\tcmake/CheckCPUArch.c.in \\\n\tcmake/CheckCPUArch.cmake \\\n\tcmake/FindOgg.cmake \\\n\tcmake/UseSystemExtensions.cmake \\\n\tCHANGELOG.md \\\n\tCOPYING.FDL \\\n\tCOPYING.GPL \\\n\tCOPYING.LGPL \\\n\tCOPYING.Xiph \\\n\tREADME.md \\\n\tautogen.sh \\\n\tconfig.rpath \\\n\tdepcomp \\\n\tltmain.sh\n\nCLEANFILES = *~\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.638671875,
          "content": "<!---\n/* FLAC - Free Lossless Audio Codec\n * Copyright (C) 2001-2009  Josh Coalson\n * Copyright (C) 2011-2024  Xiph.Org Foundation\n *\n * This file is part the FLAC project.  FLAC is comprised of several\n * components distributed under different licenses.  The codec libraries\n * are distributed under Xiph.Org's BSD-like license (see the file\n * COPYING.Xiph in this distribution).  All other programs, libraries, and\n * plugins are distributed under the LGPL or GPL (see COPYING.LGPL and\n * COPYING.GPL).  The documentation is distributed under the Gnu FDL (see\n * COPYING.FDL).  Each file in the FLAC distribution contains at the top the\n * terms under which it may be distributed.\n *\n * Since this particular file is relevant to all components of FLAC,\n * it may be distributed under the Xiph.Org license, which is the least\n * restrictive of those mentioned above.  See the file COPYING.Xiph in this\n * distribution.\n */\n--->\n\n# Free Lossless Audio Codec (FLAC)\n\nFLAC is open source software that can reduce the amount of storage space\nneeded to store digital audio signals without needing to remove\ninformation in doing so.\n\nThe files read and produced by this software are called FLAC files. As\nthese files (which follow the [FLAC format](https://xiph.org/flac/format.html))\ncan be read from and written to by other software as well, this software\nis often referred to as the FLAC reference implementation.\n\nFLAC has been developed by volunteers. If you want to help out, see\nCONTRIBUTING.md for more information.\n\n## Components\n\nFLAC is comprised of\n  * libFLAC, a library which implements reference encoders and\n    decoders for native FLAC and Ogg FLAC, and a metadata interface\n  * libFLAC++, a C++ object wrapper library around libFLAC\n  * `flac`, a command-line program for encoding and decoding files\n  * `metaflac`, a command-line program for viewing and editing FLAC\n    metadata\n  * user and API documentation\n\nThe libraries (libFLAC, libFLAC++) are licensed under Xiph.org's\nBSD-like license (see COPYING.Xiph). All other programs and plugins are\nlicensed under the GNU General Public License (see COPYING.GPL). The\ndocumentation is licensed under the GNU Free Documentation License\n(see COPYING.FDL).\n\n## Documentation\n\nFor documentation of the `flac` and `metaflac` command line tools, see\nthe directory man, which contains the files flac.md and metaflac.md\n\nThe API documentation is in html and is generated by Doxygen. It can be\nfound in the directory doc/html/api. It is included in a release tarball\nand must be build with Doxygen when the source is taken directly from\ngit.\n\nThe directory examples contains example source code on using libFLAC and\nlibFLAC++.\n\nDocumentation concerning the FLAC format itself (which can be used to\ncreate software reading and writing FLAC software independent from\nlibFLAC) was included in previous releases, but can now be found on\nhttps://datatracker.ietf.org/doc/draft-ietf-cellar-flac/ Additionally\na set of files for conformance testing called the FLAC decoder testbench\ncan be found at https://github.com/ietf-wg-cellar/flac-test-files\n\nIf you have questions about FLAC that this document does not answer,\nplease submit them at the following tracker so this document can be\nimproved:\n\nhttps://github.com/xiph/flac/issues\n\n## Building FLAC\n\nAll components of the FLAC project can be build with a variety of\ncompilers (including GCC, Clang, Visual Studio, Intel C++ Compiler) on\nmany architectures (inluding x86, x86_64, ARMv7, ARMv8 and PowerPC)\nfor many different operating systems.\n\nTo do this, FLAC provides two build systems: one using GNU's autotools\nand one with CMake. Both differ slighly in configuration options, but\nshould be considered equivalent for most use cases.\n\nFLAC used to provide files specifically for building with Visual Studio,\nbut these have been removed in favor of using CMake.\n\n## Building with CMake\n\nCMake is a cross-platform build system. FLAC can be built on Windows,\nLinux, Mac OS X using CMake.\n\nYou can use either CMake's CLI or GUI. We recommend you to have a\nseparate build folder outside the repository in order to not spoil it\nwith generated files. It is possible however to do a so-called in-tree\nbuild, in that case /path/to/flac-build in the following examples is\nequal to /path/to/flac-source.\n\n### CMake CLI\n\nGo to your build folder and run something like this:\n\n```\n/path/to/flac-build$ cmake /path/to/flac-source\n```\n\nor e.g. in Windows shell\n\n```\nC:\\path\\to\\flac-build> cmake \\path\\to\\flac-source\n```\n\n(provided that cmake is in your %PATH% variable)\n\nThat will generate build scripts for the default build system (e.g.\nMakefiles for UNIX). After that you start build with a command like\nthis:\n\n```\n/path/to/flac-build$ make\n```\n\nAnd afterwards you can run tests or install the built libraries and\nheaders\n\n```\n/path/to/flac-build$ make test\n/path/to/flac-build$ make install\n```\n\nIf you want use a build system other than default add -G flag to cmake,\ne.g.:\n\n```\n/path/to/flac-build$ cmake /path/to/flac-source -GNinja\n/path/to/flac-build$ ninja\n```\n\nor:\n\n```\n/path/to/flac-build$ cmake /path/to/flac-source -GXcode\n```\n\nUse cmake --help to see the list of available generators.\n\nBy default CMake will search for OGG. If CMake fails to find it you can\nhelp CMake by specifying the exact path:\n\n```\n/path/to/flac-build$ cmake /path/to/flac-source -DOGG_ROOT=/path/to/ogg\n```\n\nIf you would like CMake to build OGG alongside FLAC, you can place the\nogg sources directly in the flac source directory as a subdirectory with\nthe name ogg, for example:\n\n```\n/path/to/flac-source/ogg\n```\n\nIf you don't want to build flac with OGG support you can tell CMake not\nto look for OGG:\n\n```\n/path/to/flac-build$ cmake /path/to/flac-source -DWITH_OGG=OFF\n```\n\nOther FLAC's options (e.g. building C++ lib or docs) can also be put to\ncmake through -D flag. If you want to know what options are available,\nuse -LH:\n\n```\n/path/to/flac-build$ cmake /path/to/flac-source -LH\n```\n\n### CMake GUI (for Visual Studio)\nIt is likely that you would prefer to use the CMake GUI if you use\nVisual Studio to build FLAC. It's in essence the same process as\nbuilding using CLI.\n\nOpen cmake-gui. In the window select a source directory (the\nrepository's root), a build directory (some other directory outside the\nrepository). Then press button \"Configure\". CMake will ask you which\nbuild system you prefer. Choose that version of Visual Studio which you\nhave on your system, choose whether you want to build for Win32 or x64.\nPress OK.\n\nAfter CMake finishes you can change the configuration to your liking and\nif you change anything, run Configure again. With the \"Generate\" button,\nCMake creates Visual Studio files, which can be opened from Visual\nStudio. With the button \"Open Project\" CMake will launch Visual Studio\nand open the generated solution. You can use the project files as usual\nbut remember that they were generated by CMake. That means that your\nchanges (e.g. some additional compile flags) will be lost when you run\nCMake next time.\n\nCMake searches by default for OGG on your system and returns an error\nif it cannot find it. If you want to build OGG alongside FLAC, you can\ndownload the OGG sources and extract them in a subdirectory of the FLAC\nsource directory with the name ogg (i.e. /path/to/flac-source/ogg)\nbefore running CMake. If you don't want to build FLAC with OGG support,\nuntick the box following WITH_OGG flag in the list of variables in\ncmake-gui window and run \"Configure\" again.\n\nIf CMake fails to find MSVC compiler then running cmake-gui from MS\nDeveloper comand prompt should help.\n\n## Building with GNU autotools\n\nFLAC uses autoconf and libtool for configuring and building. To\nconfigure a build, open a commmand line/terminal and run `./configure`\nYou can provide options to this command, which are listed by running\n`./configure --help`.\n\nIn case the configure script is not present (for example when building\nfrom git and not from a release tarball), it can be generated by running\n`./autogen.sh`. This may require a libtool development package though.\n\nAfter configuration, build with `make`, verify the build with\n`make check` and install with `make install`. Installation might require\nadministrator priviledged, i.e. `sudo make install`.\n\nThe 'make check' step is optional; omit it to skip all the tests, which\ncan take about an hour to complete. Even though it will stop with an\nexplicit message on any failure, it does print out a lot of stuff so you\nmight want to capture the output to a file if you're having a problem.\nAlso, don't run 'make check' as root because it confuses some of the\ntests.\n\nSummarizing:\n\n```\n./configure\nmake && make check\nsudo make install\n```\n\n## Note to embedded developers\n\nlibFLAC has grown larger over time as more functionality has been\nincluded, but much of it may be unnecessary for a particular embedded\nimplementation.  Unused parts may be pruned by some simple editing of\nconfigure.ac and src/libFLAC/Makefile.am; the following dependency\ngraph shows which modules may be pruned without breaking things\nfurther down:\n\n```\nmetadata.h\n    stream_decoder.h\n    format.h\n\nstream_encoder.h\n    stream_decoder.h\n    format.h\n\nstream_decoder.h\n    format.h\n```\n\nIn other words, for pure decoding applications, both the stream encoder\nand metadata editing interfaces can be safely removed. Note that this\nis specific to building the libraries for embedded use. The command line\ntools do not provide such compartmentalization, and require a complete\nlibFLAC build to function.\n\nThere is a section dedicated to embedded use in the libFLAC API\nHTML documentation (see doc/html/api/index.html).\n\nAlso, there are several places in the libFLAC code with comments marked\nwith \"OPT:\" where a #define can be changed to enable code that might be\nfaster on a specific platform.  Experimenting with these can yield\nfaster binaries.\n"
        },
        {
          "name": "autogen.sh",
          "type": "blob",
          "size": 1.576171875,
          "content": "#!/bin/sh\n# Run this to set up the build system: configure, makefiles, etc.\n# We trust that the user has a recent enough autoconf & automake setup\n# (not older than a few years...)\n\nuse_symlinks=\" --symlink\"\n\ncase $1 in\n\t--no-symlink*)\n\t\tuse_symlinks=\"\"\n\t\techo \"Copying autotool files instead of using symlinks.\"\n\t\t;;\n\t*)\n\t\techo \"Using symlinks to autotool files (use --no-symlinks to copy instead).\"\n\t\t;;\n\tesac\n\ntest_program_errors=0\n\ntest_program () {\n\tif ! command -v $1 >/dev/null 2>&1 ; then\n\t\techo \"Missing program '$1'.\"\n\t\ttest_program_errors=1\n\t\tfi\n}\n\nfor prog in autoconf automake libtool pkg-config ; do\n\ttest_program $prog\n\tdone\n\nif test $(uname -s) != \"Darwin\" ; then\n\ttest_program gettext\n\tfi\n\ntest $test_program_errors -ne 1 || exit 1\n\n#-------------------------------------------------------------------------------\n\nset -e\n\nif test $(uname -s) = \"OpenBSD\" ; then\n\t# OpenBSD needs these environment variables set.\n\tif test -z \"$AUTOCONF_VERSION\" ; then\n\t\tAUTOCONF_VERSION=2.69\n\t\texport AUTOCONF_VERSION\n\t\techo \"Defaulting to use AUTOCONF_VERSION version ${AUTOCONF_VERSION}.\"\n\telse\n\t\techo \"Using AUTOCONF_VERSION version ${AUTOCONF_VERSION}.\"\n\t\tfi\n\tif test -z \"$AUTOMAKE_VERSION\" ; then\n\t\tAUTOMAKE_VERSION=1.15\n\t\texport AUTOMAKE_VERSION\n\t\techo \"Defaulting to use AUTOMAKE_VERSION version ${AUTOMAKE_VERSION}.\"\n\telse\n\t\techo \"Using AUTOMAKE_VERSION version ${AUTOMAKE_VERSION}.\"\n\t\tfi\n\tfi\n\nsrcdir=`dirname $0`\ntest -n \"$srcdir\" && cd \"$srcdir\"\n\necho \"Updating build configuration files for FLAC, please wait....\"\n\ntouch config.rpath\nautoreconf --install $use_symlinks --force\n#./configure \"$@\" && echo\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "config.cmake.h.in",
          "type": "blob",
          "size": 6.044921875,
          "content": "/* config.h.in.  Generated from configure.ac by autoheader.  */\n\n/* Define if building universal (internal helper macro) */\n#cmakedefine AC_APPLE_UNIVERSAL_BUILD\n\n/* Target processor is big endian. */\n#cmakedefine01 CPU_IS_BIG_ENDIAN\n\n/* Target processor ARM64 */\n#cmakedefine FLAC__CPU_ARM64\n\n/* Set FLAC__BYTES_PER_WORD to 8 (4 is the default) */\n#cmakedefine01 ENABLE_64_BIT_WORDS\n\n/* define to align allocated memory on 32-byte boundaries */\n#cmakedefine FLAC__ALIGN_MALLOC_DATA\n\n/* define if you have docbook-to-man or docbook2man */\n#cmakedefine FLAC__HAS_DOCBOOK_TO_MAN\n\n/* define if you have the ogg library */\n#cmakedefine01 OGG_FOUND\n#define FLAC__HAS_OGG OGG_FOUND\n\n/* Set to 1 if <x86intrin.h> is available. */\n#cmakedefine01 FLAC__HAS_X86INTRIN\n\n/* Set to 1 if <arm_neon.h> is available. */\n#cmakedefine01 FLAC__HAS_NEONINTRIN\n\n/* Set to 1 if <arm_neon.h> contains A64 intrinsics */\n#cmakedefine01 FLAC__HAS_A64NEONINTRIN\n\n/* define if building for Darwin / MacOS X */\n#cmakedefine FLAC__SYS_DARWIN\n\n/* define if building for Linux */\n#cmakedefine FLAC__SYS_LINUX\n\n/* define to enable use of AVX instructions */\n#cmakedefine WITH_AVX\n#ifdef WITH_AVX\n  #define FLAC__USE_AVX\n#endif\n\n/* Define to the commit date of the current git HEAD */\n#cmakedefine GIT_COMMIT_DATE \"@GIT_COMMIT_DATE@\"\n\n/* Define to the short hash of the current git HEAD */\n#cmakedefine GIT_COMMIT_HASH \"@GIT_COMMIT_HASH@\"\n\n/* Define to the tag of the current git HEAD */\n#cmakedefine GIT_COMMIT_TAG \"@GIT_COMMIT_TAG@\"\n\n/* Compiler has the __builtin_bswap16 intrinsic */\n#cmakedefine HAVE_BSWAP16\n\n/* Compiler has the __builtin_bswap32 intrinsic */\n#cmakedefine HAVE_BSWAP32\n\n/* Define to 1 if you have the <byteswap.h> header file. */\n#cmakedefine HAVE_BYTESWAP_H\n\n/* define if you have clock_gettime */\n#cmakedefine HAVE_CLOCK_GETTIME\n\n/* Define to 1 if you have the <cpuid.h> header file. */\n#cmakedefine HAVE_CPUID_H\n\n/* Define to 1 if fseeko (and presumably ftello) exists and is declared. */\n#cmakedefine HAVE_FSEEKO\n\n/* Define to 1 if you have the `getopt_long' function. */\n#cmakedefine HAVE_GETOPT_LONG\n\n/* Define if you have the iconv() function and it works. */\n#cmakedefine HAVE_ICONV\n\n/* Define to 1 if you have the <inttypes.h> header file. */\n#cmakedefine HAVE_INTTYPES_H\n\n/* Define if you have <langinfo.h> and nl_langinfo(CODESET). */\n#cmakedefine HAVE_LANGINFO_CODESET\n\n/* lround support */\n#cmakedefine01 HAVE_LROUND\n\n/* Define to 1 if you have the <memory.h> header file. */\n#cmakedefine HAVE_MEMORY_H\n\n/* Define if multithreading is enabled */\n#cmakedefine HAVE_PTHREAD 1\n\n/* Define to 1 if you have the <stdint.h> header file. */\n#cmakedefine HAVE_STDINT_H\n\n/* Define to 1 if you have the <stdlib.h> header file. */\n#cmakedefine HAVE_STDLIB_H\n\n/* Define to 1 if you have the <string.h> header file. */\n#cmakedefine HAVE_STRING_H\n\n/* Define to 1 if you have the <sys/ioctl.h> header file. */\n#cmakedefine HAVE_SYS_IOCTL_H\n\n/* Define to 1 if you have the <sys/param.h> header file. */\n#cmakedefine HAVE_SYS_PARAM_H\n\n/* Define to 1 if you have the <sys/stat.h> header file. */\n#cmakedefine HAVE_SYS_STAT_H\n\n/* Define to 1 if you have the <sys/time.h> header file. */\n#cmakedefine HAVE_SYS_TIME_H\n\n/* Define to 1 if you have the <sys/types.h> header file. */\n#cmakedefine HAVE_SYS_TYPES_H\n\n/* Define to 1 if you have the <termios.h> header file. */\n#cmakedefine HAVE_TERMIOS_H\n\n/* Define to 1 if typeof works with your compiler. */\n#cmakedefine HAVE_TYPEOF\n\n/* Define to 1 if you have the <unistd.h> header file. */\n#cmakedefine HAVE_UNISTD_H\n\n/* Define to 1 if you have the <x86intrin.h> header file. */\n#cmakedefine HAVE_X86INTRIN_H\n\n/* Define as const if the declaration of iconv() needs const. */\n#cmakedefine ICONV_CONST\n\n/* Define if debugging is disabled */\n#cmakedefine NDEBUG\n\n/* Name of package */\n#cmakedefine PACKAGE\n\n/* Define to the address where bug reports for this package should be sent. */\n#cmakedefine PACKAGE_BUGREPORT\n\n/* Define to the full name of this package. */\n#cmakedefine PACKAGE_NAME\n\n/* Define to the full name and version of this package. */\n#cmakedefine PACKAGE_STRING\n\n/* Define to the one symbol short name of this package. */\n#cmakedefine PACKAGE_TARNAME\n\n/* Define to the home page for this package. */\n#cmakedefine PACKAGE_URL\n\n/* Define to the version of this package. */\n#define PACKAGE_VERSION \"@PROJECT_VERSION@\"\n\n/* The size of `off_t', as computed by sizeof. */\n#cmakedefine SIZEOF_OFF_T\n\n/* The size of `void*', as computed by sizeof. */\n#cmakedefine SIZEOF_VOIDP\n\n/* Enable extensions on AIX 3, Interix.  */\n#ifndef _ALL_SOURCE\n#define _ALL_SOURCE\n#endif\n\n/* Enable GNU extensions on systems that have them.  */\n#ifndef _GNU_SOURCE\n#define _GNU_SOURCE\n#endif\n\n#ifndef _XOPEN_SOURCE\n#cmakedefine DODEFINE_XOPEN_SOURCE 500\n#ifdef DODEFINE_XOPEN_SOURCE\n#define _XOPEN_SOURCE DODEFINE_XOPEN_SOURCE\n#endif\n#endif\n\n/* Enable threading extensions on Solaris.  */\n#ifndef _POSIX_PTHREAD_SEMANTICS\n#cmakedefine _POSIX_PTHREAD_SEMANTICS\n#endif\n/* Enable extensions on HP NonStop.  */\n#ifndef _TANDEM_SOURCE\n#cmakedefine _TANDEM_SOURCE\n#endif\n/* Enable general extensions on Solaris.  */\n#ifndef __EXTENSIONS__\n#cmakedefine DODEFINE_EXTENSIONS\n#ifdef DODEFINE_EXTENSIONS\n#define __EXTENSIONS__ DODEFINE_EXTENSIONS\n#endif\n#endif\n\n\n/* Target processor is big endian. */\n#define WORDS_BIGENDIAN CPU_IS_BIG_ENDIAN\n\n/* Enable large inode numbers on Mac OS X 10.5.  */\n#ifndef _DARWIN_USE_64_BIT_INODE\n# define _DARWIN_USE_64_BIT_INODE 1\n#endif\n\n/* Number of bits in a file offset, on hosts where this is settable. */\n#ifndef _FILE_OFFSET_BITS\n# define _FILE_OFFSET_BITS 64\n#endif\n\n/* Define to 1 to make fseeko visible on some hosts (e.g. glibc 2.2). */\n#ifndef _LARGEFILE_SOURCE\n# define _LARGEFILE_SOURCE\n#endif\n\n/* Define for large files, on AIX-style hosts. */\n#cmakedefine _LARGE_FILES\n\n/* Define to 1 if on MINIX. */\n#cmakedefine _MINIX\n\n/* Define to 2 if the system does not provide POSIX.1 features except with\n   this defined. */\n#cmakedefine _POSIX_1_SOURCE\n\n/* Define to 1 if you need to in order for `stat' and other things to work. */\n#cmakedefine _POSIX_SOURCE\n\n/* Define to __typeof__ if your compiler spells it that way. */\n#cmakedefine typeof\n"
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 21.0068359375,
          "content": "#  FLAC - Free Lossless Audio Codec\n#  Copyright (C) 2001-2009  Josh Coalson\n#  Copyright (C) 2011-2024  Xiph.Org Foundation\n#\n#  This file is part the FLAC project.  FLAC is comprised of several\n#  components distributed under different licenses.  The codec libraries\n#  are distributed under Xiph.Org's BSD-like license (see the file\n#  COPYING.Xiph in this distribution).  All other programs, libraries, and\n#  plugins are distributed under the GPL (see COPYING.GPL).  The documentation\n#  is distributed under the Gnu FDL (see COPYING.FDL).  Each file in the\n#  FLAC distribution contains at the top the terms under which it may be\n#  distributed.\n#\n#  Since this particular file is relevant to all components of FLAC,\n#  it may be distributed under the Xiph.Org license, which is the least\n#  restrictive of those mentioned above.  See the file COPYING.Xiph in this\n#  distribution.\n\n# NOTE that for many of the AM_CONDITIONALs we use the prefix FLaC__\n# instead of FLAC__ since autoconf triggers off 'AC_' in strings\n\nAC_PREREQ(2.60)\nAC_INIT([flac],[1.4.3],[flac-dev@xiph.org],[flac],[https://www.xiph.org/flac/])\nAC_CONFIG_HEADERS([config.h])\nAC_CONFIG_SRCDIR([src/flac/main.c])\nAC_CONFIG_MACRO_DIR([m4])\nAM_INIT_AUTOMAKE([foreign 1.10 -Wall tar-pax no-dist-gzip dist-xz subdir-objects])\nm4_ifdef([AM_SILENT_RULES], [AM_SILENT_RULES([yes])])\n\nAX_CHECK_ENABLE_DEBUG\nuser_cflags=$CFLAGS\n\n#Prefer whatever the current ISO standard is.\nAC_PROG_CC\nAC_USE_SYSTEM_EXTENSIONS\nm4_ifdef([AM_PROG_AR], [AM_PROG_AR])\nLT_INIT([win32-dll disable-static pic-only])\nAM_PROG_AS\nAC_PROG_CXX\nXIPH_C_COMPILER_IS_CLANG\nXIPH_GCC_REALLY_IS_GCC\nAC_PROG_MAKE_SET\nAC_PROG_MKDIR_P\n\nAC_SYS_LARGEFILE\nAC_FUNC_FSEEKO\n\nAC_CHECK_SIZEOF(off_t,1)\t# Fake default value.\nAC_CHECK_SIZEOF([void*])\nAC_SEARCH_LIBS([lround],[m], [AC_DEFINE(HAVE_LROUND,1,lround support)])\n\nAM_PROG_CC_C_O\nAC_C_INLINE\nAC_C_TYPEOF\n\nAC_CHECK_HEADERS([stdint.h stdbool.h inttypes.h byteswap.h sys/auxv.h sys/param.h sys/ioctl.h sys/time.h termios.h x86intrin.h cpuid.h arm_neon.h])\n\nif test \"x$ac_cv_header_stdint_h\" != xyes -o \"x$ac_cv_header_stdbool_h\" != xyes; then\nAC_MSG_ERROR(\"Header stdint.h and/or stdbool.h not found\")\nfi\n\n\nXIPH_C_BSWAP32\nXIPH_C_BSWAP16\n\nac_cv_c_big_endian=0\nac_cv_c_little_endian=0\nAC_C_BIGENDIAN([ac_cv_c_big_endian=1], [ac_cv_c_little_endian=1], [\n\tAC_MSG_WARN([[*****************************************************************]])\n\tAC_MSG_WARN([[*** Not able to determine endian-ness of target processor.       ]])\n\tAC_MSG_WARN([[*** The constants CPU_IS_BIG_ENDIAN and CPU_IS_LITTLE_ENDIAN in  ]])\n\tAC_MSG_WARN([[*** config.h may need to be hand editied.                        ]])\n\tAC_MSG_WARN([[*****************************************************************]])\n])\nAC_DEFINE_UNQUOTED(CPU_IS_BIG_ENDIAN, ${ac_cv_c_big_endian},\n\t\t\t\t\t[Target processor is big endian.])\nAC_DEFINE_UNQUOTED(CPU_IS_LITTLE_ENDIAN, ${ac_cv_c_little_endian},\n\t\t\t\t\t[Target processor is little endian.])\nAC_DEFINE_UNQUOTED(WORDS_BIGENDIAN, ${ac_cv_c_big_endian},\n\t\t\t\t\t[Target processor is big endian.])\n\nAC_ARG_ENABLE(asm-optimizations, AS_HELP_STRING([--disable-asm-optimizations],[Do not use any CPU specific optimization routines]), asm_opt=${enableval}, asm_opt=yes)\nAM_CONDITIONAL(FLaC__NO_ASM, test \"x$asm_opt\" = xno)\nif test \"x$asm_opt\" = xno ; then\nAC_DEFINE(FLAC__NO_ASM)\nAH_TEMPLATE(FLAC__NO_ASM, [define to disable use of assembly code])\nfi\n\ndnl check for getauxval in standard library\nAC_CHECK_FUNCS(getauxval)\n\ndnl check for getopt in standard library\ndnl AC_CHECK_FUNCS(getopt_long , , [LIBOBJS=\"$LIBOBJS getopt.o getopt1.o\"] )\nAC_CHECK_FUNCS(getopt_long, [], [])\n\nAC_CHECK_SIZEOF(void*,1)\n\nasm_optimisation=no\ncase \"$host_cpu\" in\n\tamd64|x86_64)\n\t\tcase \"$host\" in\n\t\t\t*gnux32)\n\t\t\t\t# x32 user space and 64 bit kernel.\n\t\t\t\tcpu_x86_64=true\n\t\t\t\tAC_DEFINE(FLAC__CPU_X86_64)\n\t\t\t\tAH_TEMPLATE(FLAC__CPU_X86_64, [define if building for x86_64])\n\t\t\t\t;;\n\t\t\t*)\n\t\t\t\tif test $ac_cv_sizeof_voidp = 4 ; then\n\t\t\t\t\t# This must be a 32 bit user space running on 64 bit kernel so treat\n\t\t\t\t\t# this as ia32.\n\t\t\t\t\tcpu_ia32=true\n\t\t\t\t\tAC_DEFINE(FLAC__CPU_IA32)\n\t\t\t\t\tAH_TEMPLATE(FLAC__CPU_IA32, [define if building for ia32/i386])\n\t\t\telse\n\t\t\t\t\t# x86_64 user space and kernel.\n\t\t\t\t\tcpu_x86_64=true\n\t\t\t\t\tAC_DEFINE(FLAC__CPU_X86_64)\n\t\t\t\t\tAH_TEMPLATE(FLAC__CPU_X86_64, [define if building for x86_64])\n\t\t\t\tfi\n\t\t\t\t;;\n\t\tesac\n\t\t;;\n\ti*86)\n\t\tcpu_ia32=true\n\t\tAC_DEFINE(FLAC__CPU_IA32)\n\t\tAH_TEMPLATE(FLAC__CPU_IA32, [define if building for ia32/i386])\n\t\t;;\n\tarm64|aarch64)\n\t\tcpu_arm64=true\n\t\tAC_DEFINE(FLAC__CPU_ARM64)\n\t\tAH_TEMPLATE(FLAC__CPU_ARM64, [define if building for ARM])\n\t\t;;\nesac\nAM_CONDITIONAL(FLAC__CPU_X86_64, test \"x$cpu_x86_64\" = xtrue)\nAM_CONDITIONAL(FLaC__CPU_IA32, test \"x$cpu_ia32\" = xtrue)\nAM_CONDITIONAL(FLAC__CPU_ARM64, test \"x$cpu_arm64\" = xtrue)\n\nif test \"x$ac_cv_header_x86intrin_h\" = xyes -a \"x$asm_opt\" = xyes; then\n  AC_DEFINE([FLAC__HAS_X86INTRIN], 1, [Set to 1 if <x86intrin.h> is available.])\n  asm_optimisation=yes\nelse\n  AC_DEFINE([FLAC__HAS_X86INTRIN], 0)\nfi\n\nif test \"x$ac_cv_header_arm_neon_h\" = xyes -a \"x$asm_opt\" = xyes; then\n  AC_DEFINE([FLAC__HAS_NEONINTRIN], 1, [Set to 1 if <arm_neon.h> is available.])\n  AC_MSG_CHECKING([whether arm_neon.h has A64 functions])\n  AC_COMPILE_IFELSE(\n\t[AC_LANG_PROGRAM([[#include <arm_neon.h>]],\n\t[[float64x2_t sum5; sum5 = vdupq_n_f64(0.0f);]])],\n\t[AC_MSG_RESULT([yes])\n\t has_a64neon=yes],\n\t[AC_MSG_RESULT([no])])\n  if test \"x$has_a64neon\" = xyes; then\n    AC_DEFINE([FLAC__HAS_A64NEONINTRIN], 1, [Set to 1 if <arm_neon.h> has A64 instructions.])\n    asm_optimisation=yes\n  else\n    AC_DEFINE([FLAC__HAS_A64NEONINTRIN], 0)\n  fi\nelse\n  AC_DEFINE([FLAC__HAS_NEONINTRIN], 0)\nfi\n\ncase \"$host\" in\n\ti386-*-openbsd3.[[0-3]]) OBJ_FORMAT=aoutb ;;\n\t*-*-cygwin|*mingw*) OBJ_FORMAT=win32 ;;\n\t*-*-darwin*) OBJ_FORMAT=macho ;;\n\t*emx*) OBJ_FORMAT=aout ;;\n\t*djgpp) OBJ_FORMAT=coff ;;\n\t*) OBJ_FORMAT=elf ;;\nesac\nAC_SUBST(OBJ_FORMAT)\n\nos_is_windows=no\ncase \"$host\" in\n\t*mingw*)\n\t\tos_is_windows=yes\n\t\tAC_CHECK_TOOL(RC,[windres],[:])\n\t\t;;\nesac\n\nAM_CONDITIONAL(OS_IS_WINDOWS, test \"x$os_is_windows\" = xyes)\nAM_CONDITIONAL(HAVE_WINDRES, test \"x$RC\" != \"x:\")\n\ncase \"$host\" in\n\t*-linux-*)\n\t\tsys_linux=true\n\t\tAC_DEFINE(FLAC__SYS_LINUX)\n\t\tAH_TEMPLATE(FLAC__SYS_LINUX, [define if building for Linux])\n\t\t;;\n\t*-*-darwin*)\n\t\tsys_darwin=true\n\t\tAC_DEFINE(FLAC__SYS_DARWIN)\n\t\tAH_TEMPLATE(FLAC__SYS_DARWIN, [define if building for Darwin / MacOS X])\n\t\t;;\nesac\nAM_CONDITIONAL(FLaC__SYS_DARWIN, test \"x$sys_darwin\" = xtrue)\nAM_CONDITIONAL(FLaC__SYS_LINUX, test \"x$sys_linux\" = xtrue)\n\nif test \"x$cpu_ia32\" = xtrue || test \"x$cpu_x86_64\" = xtrue ; then\nAC_DEFINE(FLAC__ALIGN_MALLOC_DATA)\nAH_TEMPLATE(FLAC__ALIGN_MALLOC_DATA, [define to align allocated memory on 32-byte boundaries])\nfi\n\nAM_CONDITIONAL([DEBUG], [test \"x${ax_enable_debug}\" = \"xyes\" || test \"x${ax_enable_debug}\" = \"xinfo\"])\n\nAC_ARG_ENABLE(avx,\nAS_HELP_STRING([--disable-avx],[Disable AVX, AVX2 optimizations. There is runtime detection of CPU features, so disabling is only necessary when a compiler does not know about them]),\n[case \"${enableval}\" in\n\tyes) use_avx=true ;;\n\tno)  use_avx=false ;;\n\t*) AC_MSG_ERROR(bad value ${enableval} for --enable-avx) ;;\nesac],[use_avx=true])\nAM_CONDITIONAL(FLaC__USE_AVX, test \"x$use_avx\" = xtrue)\nif test \"x$use_avx\" = xtrue ; then\nAC_DEFINE(FLAC__USE_AVX)\nAH_TEMPLATE(FLAC__USE_AVX, [define to enable use of AVX instructions])\nfi\n\nAC_ARG_ENABLE(thorough-tests,\nAS_HELP_STRING([--disable-thorough-tests],[Disable thorough (long) testing, do only basic tests]),\n[case \"${enableval}\" in\n\tyes) thorough_tests=true ;;\n\tno)  thorough_tests=false ;;\n\t*) AC_MSG_ERROR(bad value ${enableval} for --enable-thorough-tests) ;;\nesac],[thorough_tests=true])\nAC_ARG_ENABLE(exhaustive-tests,\nAS_HELP_STRING([--enable-exhaustive-tests],[Enable exhaustive testing (VERY long)]),\n[case \"${enableval}\" in\n\tyes) exhaustive_tests=true ;;\n\tno)  exhaustive_tests=false ;;\n\t*) AC_MSG_ERROR(bad value ${enableval} for --enable-exhaustive-tests) ;;\nesac],[exhaustive_tests=false])\nif test \"x$thorough_tests\" = xfalse ; then\nFLAC__TEST_LEVEL=0\nelif test \"x$exhaustive_tests\" = xfalse ; then\nFLAC__TEST_LEVEL=1\nelse\nFLAC__TEST_LEVEL=2\nfi\nAC_SUBST(FLAC__TEST_LEVEL)\n\nAC_ARG_ENABLE(werror,\n\tAS_HELP_STRING([--enable-werror],[Enable -Werror in all Makefiles]))\n\nAC_ARG_ENABLE([stack-smash-protection],\n    [AS_HELP_STRING([--disable-stack-smash-protection],[Disable GNU GCC stack smash protection])],,\n    [AS_IF([test \"$ac_cv_c_compiler_gnu\" = \"yes\"],\n        [enable_stack_smash_protection=yes],[enable_stack_smash_protection=no])])\n\nAC_ARG_ENABLE([fortify-source],\n    [AS_HELP_STRING([--disable-fortify-source],[Disable _FORTIFY_SOURCE buffer overflow protection])],,\n    [AS_IF([test \"$ac_cv_c_compiler_gnu\" = \"yes\"],\n        [enable_fortify_source=yes],[enable_fortify_source=no])])\n\ncase \"$host\" in\n\t*mingw*)\n\t\tif test \"$enable_fortify_source\" = \"yes\"; then\n\t\t\tAC_SEARCH_LIBS(__memset_chk, ssp, , mingw_has_memset_chk=no)\n\t\tfi\n\t\tif test \"$enable_stack_smash_protection\" = \"yes\"; then\n\t\t\tAC_SEARCH_LIBS(__stack_chk_fail, ssp, , mingw_has_stack_chk_fail=no)\n\t\tfi\n\t;;\nesac\n\n\nAC_ARG_ENABLE(64-bit-words,\n\tAS_HELP_STRING([--disable-64-bit-words],[Set FLAC__BYTES_PER_WORD to 4 (8 is the default)]))\nif test \"x$enable_64_bit_words\" = xno ; then\n\tAC_DEFINE_UNQUOTED([ENABLE_64_BIT_WORDS],0,[Set FLAC__BYTES_PER_WORD to 8 (this is the default)])\nelse\n\tAC_DEFINE_UNQUOTED([ENABLE_64_BIT_WORDS],1)\nfi\nAC_SUBST(ENABLE_64_BIT_WORDS)\n\nAC_ARG_ENABLE(valgrind-testing,\nAS_HELP_STRING([--enable-valgrind-testing],[Run all tests inside Valgrind]),\n[case \"${enableval}\" in\n\tyes) FLAC__TEST_WITH_VALGRIND=yes ;;\n\tno)  FLAC__TEST_WITH_VALGRIND=no ;;\n\t*) AC_MSG_ERROR(bad value ${enableval} for --enable-valgrind-testing) ;;\nesac],[FLAC__TEST_WITH_VALGRIND=no])\nAC_SUBST(FLAC__TEST_WITH_VALGRIND)\n\nAC_ARG_ENABLE(doxygen-docs,\nAS_HELP_STRING([--disable-doxygen-docs],[Disable API documentation building via Doxygen]),\n[case \"${enableval}\" in\n\tyes) enable_doxygen_docs=true ;;\n\tno)  enable_doxygen_docs=false ;;\n\t*) AC_MSG_ERROR(bad value ${enableval} for --enable-doxygen-docs) ;;\nesac],[enable_doxygen_docs=true])\nif test \"x$enable_doxygen_docs\" != xfalse ; then\n\tAC_CHECK_PROGS(DOXYGEN, doxygen)\nfi\nAM_CONDITIONAL(FLaC__HAS_DOXYGEN, test -n \"$DOXYGEN\")\n\nif test ! -n \"$DOXYGEN\" && test -f \"$srcdir/doc/FLAC.tag\" && test -f \"$srcdir/doc/api/modules.html\" ; then\n\tHAS_PREBUILT_DOXYGEN=yes\nfi\nAM_CONDITIONAL(FLaC__HAS_PREBUILT_DOXYGEN, test \"x$HAS_PREBUILT_DOXYGEN\" = xyes)\n\ndnl build FLAC++ or not\nAC_ARG_ENABLE([cpplibs],\nAS_HELP_STRING([--disable-cpplibs],[Do not build libFLAC++]),\n[case \"${enableval}\" in\n\tyes) disable_cpplibs=false ;;\n\tno)  disable_cpplibs=true ;;\n\t*)   AC_MSG_ERROR(bad value ${enableval} for --enable-cpplibs) ;;\nesac], [disable_cpplibs=false])\nAM_CONDITIONAL(FLaC__WITH_CPPLIBS, [test \"x$disable_cpplibs\" != xtrue])\n\nAC_ARG_ENABLE([oss-fuzzers],\n  [AS_HELP_STRING([--enable-oss-fuzzers],\n    [Whether to generate the fuzzers for OSS-Fuzz (Clang only)])],\n  [have_oss_fuzzers=yes], [have_oss_fuzzers=no])\n\nif test \"x$have_oss_fuzzers\" = \"xyes\"; then\n  if test \"x$xiph_cv_c_compiler_clang\" = \"xyes\" ; then\n    AM_CONDITIONAL([USE_OSSFUZZERS], [test \"x$have_oss_fuzzers\" = \"xyes\"])\n    if test \"x$LIB_FUZZING_ENGINE\" = \"x\" ; then\n      # Only set this if it is empty.\n\t  LIB_FUZZING_ENGINE=-fsanitize=fuzzer\n    fi\n  else\n    AM_CONDITIONAL([USE_OSSFUZZERS], [test \"false\" = \"true\"])\n    # Disable fuzzer if the compiler is not Clang.\n    AC_MSG_WARN([*** Ozz-Fuzz is disabled because that requires the Clang compiler.])\n    have_oss_fuzzers=\"no (compiler is not Clang)\"\n  fi\nelse\n  AM_CONDITIONAL([USE_OSSFUZZERS], [test \"false\" = \"true\"])\nfi\n\nAC_SUBST([LIB_FUZZING_ENGINE])\n\ndnl check for ogg library\nAC_ARG_ENABLE([ogg],\n\tAS_HELP_STRING([--disable-ogg],[Disable ogg support (default: test for libogg)]),\n\t[ want_ogg=$enableval ], [ want_ogg=yes ] )\n\nif test \"x$want_ogg\" != \"xno\"; then\n\tXIPH_PATH_OGG(have_ogg=yes, AC_MSG_WARN([*** Ogg development environment not installed - Ogg support will not be built]))\nfi\n\nFLAC__HAS_OGG=0\nAM_CONDITIONAL(FLaC__HAS_OGG, [test \"x$have_ogg\" = xyes])\nif test \"x$have_ogg\" = xyes ; then\n\tFLAC__HAS_OGG=1\n\tOGG_PACKAGE=\"ogg\"\nelse\n\thave_ogg=no\nfi\nAC_DEFINE_UNQUOTED([FLAC__HAS_OGG],$FLAC__HAS_OGG,[define if you have the ogg library])\nAC_SUBST(FLAC__HAS_OGG)\nAC_SUBST(OGG_PACKAGE)\n\ndnl Build programs?\nAC_ARG_ENABLE([programs],\n\tAS_HELP_STRING([--disable-programs], [Do not build and install flac and metaflac]))\nAM_CONDITIONAL(FLaC__WITH_PROGRAMS, [test \"x$enable_programs\" != \"xno\"])\n\ndnl Build examples?\nAC_ARG_ENABLE([examples],\n\tAS_HELP_STRING([--disable-examples], [Do not build and install examples]))\nAM_CONDITIONAL([EXAMPLES], [test \"x$enable_examples\" != \"xno\"])\n\ndnl Ask git which version FLAC is\nAC_ARG_ENABLE([version-from-git],\n\tAS_HELP_STRING([--disable-version-from-git], [Do not use git tag, commit hash and commit date for version number]),\n       [ enable_version_from_git=$enableval ], [ enable_version_from_git=yes ])\n\ndnl Build with multithreading?\nAC_ARG_ENABLE([multithreading],\n\tAS_HELP_STRING([--disable-multithreading], [Disable multithreading in libFLAC]))\n\nHAVE_PTHREAD=no\nif test \"x$enable_multithreading\" != \"xno\" ; then\n\tAX_PTHREAD([\n\t\tHAVE_PTHREAD=yes\n\t\tAC_DEFINE(HAVE_PTHREAD,1,[Define if pthread is enabled])\n\t\tLIBS=\"$PTHREAD_LIBS $LIBS\"\n\t\tCFLAGS=\"$CFLAGS $PTHREAD_CFLAGS\"\n\t\tCXXFLAGS=\"$CXXFLAGS $PTHREAD_CFLAGS\"\n\t\tCC=\"$PTHREAD_CC\"\n\t\tCXX=\"$PTHREAD_CXX\"\n\t\t],[HAVE_PTHREAD=no])\n\tif test \"x${HAVE_PTHREAD}\" == \"xno\"; then\n\t\tAC_MSG_WARN(\"pthread support, needed for multithreading, is not found\")\n\tfi\nfi\n\ndnl check for i18n(internationalization); these are from libiconv/gettext\nAM_ICONV\nAM_LANGINFO_CODESET\n\nAC_CHECK_PROGS(PANDOC, pandoc)\nAM_CONDITIONAL(FLaC__HAS_PANDOC, test -n \"$PANDOC\")\nif test -n \"$PANDOC\" ; then\n\tAC_DEFINE(FLAC__HAS_PANDOC)\n\tAH_TEMPLATE(FLAC__HAS_PANDOC, [define if you have pandoc])\nelse\nif test -f \"$srcdir/man/flac.1\" && test -f \"$srcdir/man/metaflac.1\" ; then\n\tHAS_PREBUILT_MANPAGES=yes\nfi\nfi\nAM_CONDITIONAL(FLaC__HAS_PREBUILT_MANPAGES, test \"x$HAS_PREBUILT_MANPAGES\" = \"xyes\")\n\nAC_CHECK_LIB(rt, clock_gettime,\n        LIB_CLOCK_GETTIME=-lrt\n        AC_DEFINE(HAVE_CLOCK_GETTIME)\n        AH_TEMPLATE(HAVE_CLOCK_GETTIME, [define if you have clock_gettime]))\nAC_SUBST(LIB_CLOCK_GETTIME)\n\nXIPH_GCC_VERSION dnl Sets a non-zero GCC_XXX_VERSION for gcc, not clang. checks below rely on that..\n\nif test x$ac_cv_c_compiler_gnu = xyes -o x$xiph_cv_c_compiler_clang = xyes ; then\n\tdnl Prepend defaults to CFLAGS for GCC and Clang\n\tAS_IF([test \"x${ax_enable_debug}\" = \"xno\"], [\n\t\tCFLAGS=\"-O3 -funroll-loops $CFLAGS\"\n\t\tCXXFLAGS=\"-O3 $CXXFLAGS\"\n\t])\n\n\tCFLAGS=\"$CFLAGS -Wall -Wextra -Wstrict-prototypes -Wmissing-prototypes -Waggregate-return -Wcast-align -Wnested-externs -Wshadow -Wundef -Wmissing-declarations -Winline \" # -Wcast-qual -Wbad-function-cast -Wwrite-strings -Wconversion\n\tCXXFLAGS=\"$CXXFLAGS -Wall -Wextra -Wcast-align -Wshadow -Wwrite-strings -Wctor-dtor-privacy -Wnon-virtual-dtor -Wreorder -Wsign-promo -Wundef \" # -Wcast-qual -Wbad-function-cast -Wwrite-strings -Woverloaded-virtual -Wmissing-declarations\n\n\tXIPH_ADD_CFLAGS([-Wdeclaration-after-statement])\n\n\tdnl some distributions (such as Gentoo) have _FORTIFY_SOURCE always\n\tdnl enabled. We test for this situation in order to prevent polluting\n\tdnl the console with messages of macro redefinitions.\n\n\tif test \"$enable_fortify_source\" = \"yes\" && test \"x$mingw_has_memset_chk\" != \"xno\"\n\tthen\n\t\tAX_ADD_FORTIFY_SOURCE\n\tfi\n\n\tAC_LANG_PUSH([C++])\n\tXIPH_ADD_CXXFLAGS([-Weffc++])\n\tAC_LANG_POP([C++])\n\n\tif test x$xiph_cv_c_compiler_clang = xyes -a \"$OBJ_FORMAT\" = elf; then\n\t\tCPPFLAGS=\"$CPPFLAGS -DFLAC__USE_VISIBILITY_ATTR\"\n\t\tCFLAGS=\"$CFLAGS -fvisibility=hidden\"\n\t\tCXXFLAGS=\"$CXXFLAGS -fvisibility=hidden\"\n\telif test \"$GCC_MAJOR_VERSION\" -ge 4 && test \"$OBJ_FORMAT\" = elf; then\n\t\tCPPFLAGS=\"$CPPFLAGS -DFLAC__USE_VISIBILITY_ATTR\"\n\t\tCFLAGS=\"$CFLAGS -fvisibility=hidden\"\n\t\tCXXFLAGS=\"$CXXFLAGS -fvisibility=hidden\"\n\t\tfi\n\n\n\tif test x$xiph_cv_c_compiler_clang = xyes -a \"$OBJ_FORMAT\" = macho; then\n\t\tCPPFLAGS=\"$CPPFLAGS -DFLAC__USE_VISIBILITY_ATTR\"\n\t\tCFLAGS=\"$CFLAGS -fvisibility=hidden\"\n\t\tCXXFLAGS=\"$CXXFLAGS -fvisibility=hidden\"\n\telif test \"$GCC_MAJOR_VERSION\" -ge 4 && test \"$OBJ_FORMAT\" = macho; then\n\t\tCPPFLAGS=\"$CPPFLAGS -DFLAC__USE_VISIBILITY_ATTR\"\n\t\tCFLAGS=\"$CFLAGS -fvisibility=hidden\"\n\t\tCXXFLAGS=\"$CXXFLAGS -fvisibility=hidden\"\n\t\tfi\n\n\tif test \"x$GCC_MAJOR_VERSION$GCC_MINOR_VERSION\" = \"x42\" ; then\n\t\tXIPH_ADD_CFLAGS([-fgnu89-inline])\n\t\tfi\n\n\tif test \"x$GCC_MAJOR_VERSION$GCC_MINOR_VERSION\" = \"x47\" ; then\n\t\tXIPH_ADD_CFLAGS([-fno-inline-small-functions])\n\t\tfi\n\n\tfi\n\ncase \"$host_os\" in\n\t\"mingw32\"|\"os2\")\n\tif test \"$host_cpu\" = \"i686\"; then\n\t\tXIPH_ADD_CFLAGS([-mstackrealign])\n\t\tfi\n\tesac\n\nif test x$enable_werror = \"xyes\" ; then\n\tXIPH_ADD_CFLAGS([-Werror])\n\tAC_LANG_PUSH([C++])\n\tXIPH_ADD_CXXFLAGS([-Werror])\n\tAC_LANG_POP([C++])\n\tfi\n\nif test x$enable_stack_smash_protection = \"xyes\" && test \"x$mingw_has_stack_chk_fail\" != \"xno\" ; then\n\tXIPH_GCC_STACK_PROTECTOR\n\tXIPH_GXX_STACK_PROTECTOR\nelse\n\tenable_stack_smash_protection=no\nfi\n\nAH_VERBATIM([FLAC_API_EXPORTS],\n[/* libtool defines DLL_EXPORT for windows dll builds,\n   but flac code relies on FLAC_API_EXPORTS instead. */\n#ifdef DLL_EXPORT\n#ifdef __cplusplus\n# define FLACPP_API_EXPORTS\n#else\n# define FLAC_API_EXPORTS\n#endif\n#endif])\n\nif test x$enable_static = \"xyes\" ; then\ndnl for correct FLAC_API\n\tCPPFLAGS=\"-DFLAC__NO_DLL $CPPFLAGS\"\n\tfi\n\nAC_CHECK_PROG(GIT_FOUND,git,yes)\n\nif test x$GIT_FOUND$enable_version_from_git = \"xyesyes\"; then\n\tGIT_COMMIT_TAG=`git -C $srcdir --git-dir=.git describe --tags --exact-match 2>/dev/null`\n\tGIT_COMMIT_HASH=`git -C $srcdir --git-dir=.git log -1 --pretty=format:%h 2>/dev/null`\n\tGIT_COMMIT_DATE=`git -C $srcdir --git-dir=.git log -1 --pretty=format:%cd --date=format:%Y%m%d 2>/dev/null`\n\tif test ${#GIT_COMMIT_HASH} = 8 && test ${#GIT_COMMIT_DATE} = 8; then\n\t\tGIT_COMMIT_VERSION_AVAIL=yes\n\t\tif test ${#GIT_COMMIT_TAG} != 0 ; then\n\t\t\tGIT_COMMIT_TAG_AVAIL=yes\n\t\t\tAC_DEFINE_UNQUOTED(GIT_COMMIT_TAG, \"${GIT_COMMIT_TAG}\", \"Define to the tag of the current git HEAD\")\n\t\telse\n\t\t\tGIT_COMMIT_VERSION_HASH=yes\n\t\tfi\n\t\tAC_DEFINE_UNQUOTED(GIT_COMMIT_HASH, \"${GIT_COMMIT_HASH}\", \"Define to the short hash of the current git HEAD\")\n\t\tAC_DEFINE_UNQUOTED(GIT_COMMIT_DATE, \"${GIT_COMMIT_DATE}\", \"Define to the commit date of the current git HEAD\")\n\tfi\nfi\n\nAC_SUBST(GIT_COMMIT_VERSION_HASH)\n\nAX_CHECK_COMPILE_FLAG([-fassociative-math -fno-signed-zeros -fno-trapping-math -freciprocal-math],HAVE_ASSOC_MATH=yes)\nAM_CONDITIONAL(ASSOC_MATH_AVAILABLE, test \"x$HAVE_ASSOC_MATH\" = \"xyes\")\n\nAC_SUBST(FLAC_STATIC_LIBS) dnl unused here\n\nAC_CONFIG_FILES([ \\\n\tMakefile \\\n\tsrc/Makefile \\\n\tsrc/libFLAC/Makefile \\\n\tsrc/libFLAC/flac.pc \\\n\tsrc/libFLAC/include/Makefile \\\n\tsrc/libFLAC/include/private/Makefile \\\n\tsrc/libFLAC/include/protected/Makefile \\\n\tsrc/libFLAC++/Makefile \\\n\tsrc/libFLAC++/flac++.pc \\\n\tsrc/flac/Makefile \\\n\tsrc/metaflac/Makefile \\\n\tsrc/share/Makefile \\\n\tsrc/test_grabbag/Makefile \\\n\tsrc/test_grabbag/cuesheet/Makefile \\\n\tsrc/test_grabbag/picture/Makefile \\\n\tsrc/test_libs_common/Makefile \\\n\tsrc/test_libFLAC/Makefile \\\n\tsrc/test_libFLAC++/Makefile \\\n\tsrc/test_seeking/Makefile \\\n\tsrc/test_streams/Makefile \\\n\tsrc/utils/Makefile \\\n\tsrc/utils/flacdiff/Makefile \\\n\tsrc/utils/flactimer/Makefile \\\n\texamples/Makefile \\\n\texamples/c/Makefile \\\n\texamples/c/decode/Makefile \\\n\texamples/c/decode/file/Makefile \\\n\texamples/c/encode/Makefile \\\n\texamples/c/encode/file/Makefile \\\n\texamples/cpp/Makefile \\\n\texamples/cpp/decode/Makefile \\\n\texamples/cpp/decode/file/Makefile \\\n\texamples/cpp/encode/Makefile \\\n\texamples/cpp/encode/file/Makefile \\\n\tinclude/Makefile \\\n\tinclude/FLAC/Makefile \\\n\tinclude/FLAC++/Makefile \\\n\tinclude/share/Makefile \\\n\tinclude/share/grabbag/Makefile \\\n\tinclude/test_libs_common/Makefile \\\n\tdoc/Doxyfile \\\n\tdoc/Makefile \\\n\tdoc/images/Makefile \\\n\tm4/Makefile \\\n\tman/Makefile \\\n\ttest/common.sh \\\n\ttest/Makefile \\\n\ttest/cuesheets/Makefile \\\n\ttest/foreign-metadata-test-files/Makefile \\\n\ttest/flac-to-flac-metadata-test-files/Makefile \\\n\ttest/metaflac-test-files/Makefile \\\n\ttest/pictures/Makefile \\\n\toss-fuzz/Makefile\n])\nAC_OUTPUT\n\nAC_MSG_RESULT([\n-=-=-=-=-=-=-=-=-=-= Configuration Complete =-=-=-=-=-=-=-=-=-=-\n\n  Configuration summary :\n\n    FLAC version : ............................ ${VERSION}\n\n    Host CPU : ................................ ${host_cpu}\n    Host Vendor : ............................. ${host_vendor}\n    Host OS : ................................. ${host_os}\n])\n\nif test x$GIT_COMMIT_TAG_AVAIL = xyes ; then\n\techo \"    Version string : reference libFLAC ${GIT_COMMIT_TAG} ${GIT_COMMIT_DATE}\"\nelif test x$GIT_COMMIT_VERSION_AVAIL = xyes ; then\n\techo \"    Version string : reference libFLAC git-${GIT_COMMIT_HASH} ${GIT_COMMIT_DATE}\"\nfi\n\techo \"\"\n\techo \"    Compiler is GCC : ......................... ${ac_cv_c_compiler_gnu}\"\nif test x$ac_cv_c_compiler_gnu = xyes ; then\n\techo \"    GCC version : ............................. ${GCC_VERSION}\"\nfi\n\techo \"    Compiler is Clang : ....................... ${xiph_cv_c_compiler_clang}\"\n\techo \"    Asm optimizations : ....................... ${asm_optimisation}\"\n\techo \"    Ogg/FLAC support : ........................ ${have_ogg}\"\n\techo \"    Multithreading   : ........................ ${HAVE_PTHREAD}\"\n\techo \"    Stack protector  : ........................ ${enable_stack_smash_protection}\"\n\techo \"    Fuzzing support (Clang only) : ............ ${have_oss_fuzzers}\"\necho\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "flac-config.cmake.in",
          "type": "blob",
          "size": 0.3037109375,
          "content": "@PACKAGE_INIT@\n\ninclude(CMakeFindDependencyMacro)\nif(NOT TARGET Ogg::ogg)\n    find_dependency(Ogg)\nendif()\n\ninclude(\"${CMAKE_CURRENT_LIST_DIR}/targets.cmake\")\n\nif(TARGET FLAC::FLAC)\n    set(FLAC_FLAC_FOUND 1)\nendif()\nif(TARGET FLAC::FLAC++)\n    set(FLAC_FLAC++_FOUND 1)\nendif()\n\ncheck_required_components(FLAC)\n"
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "m4",
          "type": "tree",
          "content": null
        },
        {
          "name": "man",
          "type": "tree",
          "content": null
        },
        {
          "name": "oss-fuzz",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}