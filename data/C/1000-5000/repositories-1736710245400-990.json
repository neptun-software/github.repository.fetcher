{
  "metadata": {
    "timestamp": 1736710245400,
    "page": 990,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "ClassiCube/ClassiCube",
      "stars": 1542,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.046875,
          "content": "*.c linguist-language=C\r\n*.h linguist-language=C"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.0234375,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# Visual studio User-specific files\n*.suo\n*.user\n*.sln.docstates\n\n# Visual studio files\n*.VC.db\n*.VC.VC.opendb\n\n# Android build results\nandroid/.cxx/\nandroid/.idea/\nandroid/.gradle/\nandroid/build/\nandroid/app/build/\nandroid/app/.externalNativeBuild/\nandroid/local.properties\n*.iml\n\n#XCode stuff\nproject.xcworkspace/\nxcuserdata/\n\n# Nintendo Console build results\nbuild-3ds/\nbuild-nds/\nbuild-dsi/\nbuild-n64/\nbuild-gc/\nbuild-wii/\nbuild-wiiu/\nbuild-switch/\nclassicube.nds\n\n# SEGA console build results\nbuild-32x/\nbuild-saturn/\nbuild-dc/\nIP.BIN\nISO_FILES/\nthird_party/gldc/libGLdc.a\ncd/\n\n# Microsoft console build results\nbuild-360/\nmain.exe\nmain.lib\nmisc/xbox/ps_coloured.inl\nmisc/xbox/ps_textured.inl\nmisc/xbox/vs_coloured.inl\nmisc/xbox/vs_textured.inl\n\n# Sony console build results\nbuild-ps2/\nbuild-ps3/\nbuild-psp/\nbuild-vita/\nEBOOT.PBP\nPARAM.SFO\nparam.sfo\neboot.bin\n\n# Desktop build results\nbuild-amiga-68k/\n\n# Build results\n[Dd]ebug/\n[Rr]elease/\nx64/\nx86/\nbuild/\n[Bb]in/\n[Oo]bj/\n[Oo]utput/\n[Pp]rofilingSessions/\nsrc/.vs/\n\n# ClassiCube game files\nsrc/audio\nsrc/texpacks\nsrc/maps\nsrc/texturecache\nsrc/logs\nsrc/options.txt\nsrc/ClassiCube*\nsrc/screenshots\nsrc/fontscache.txt\n\n# ClassiCube game files\naudio\ntexpacks\nmaps\ntexturecache\nlogs\noptions.txt\nClassiCube*\nscreenshots\nfontscache.txt\n\n# DOS files\nCWSDPMI.EXE\nCWSDPMI.SWP\nOPTIONS.TXT\n\n# Android source files need to be included\n!android/app/src/main/java/com/classicube\n\n# Flatpak wrapper which needs to be included\n!misc/flatpak/ClassiCubeLauncher\n\n# CMake files\nCMakeFiles/\nCMakeCache.txt\n\n#GCC object files\n*.o\n# Build dependency files\n*.d\n\n# Roslyn cache directories\n*.ide/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n#NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n# Mac classic\nretro68scripts/\n\n# PS2\nopenvcl/\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n*.map\n\n# Binary files\n*.bin\n*.elf\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opensdf\n*.sdf\n*.cachefile\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# Installshield output folder\n[Ee]xpress/\n\n# NuGet Packages\n*.nupkg\n# The packages folder can be ignored because of Package Restore\n**/packages/*\n# except build/, which is used as an MSBuild target.\n!**/packages/build/\n# If using the old MSBuild-Integrated Package Restore, uncomment this:\n#!**/packages/repositories.config\n\n# Windows Azure Build Output\ncsx/\n*.build.csdef\n\n# Windows Store app package directory\nAppPackages/\n\n# Others\nsql/\n*.Cache\nClientBin/\n[Ss]tyle[Cc]op.*\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.pfx\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 7.75,
          "content": "SOURCE_DIR  = src\nBUILD_DIR   = build\nC_SOURCES   = $(wildcard $(SOURCE_DIR)/*.c)\nC_OBJECTS   = $(patsubst $(SOURCE_DIR)/%.c, $(BUILD_DIR)/%.o, $(C_SOURCES))\n\nOBJECTS = $(C_OBJECTS)\n# Flags passed to the C compiler\nCFLAGS  = -pipe -fno-math-errno -Werror -Wno-error=missing-braces -Wno-error=strict-aliasing\n# Flags passed to the linker\nLDFLAGS = -g -rdynamic\n# Name of the main executable\nENAME   = ClassiCube\n# Name of the final target file\n# (usually this is the executable, but e.g. is app bundle on macOS)\nTARGET := $(ENAME)\n\nifndef RM\n\t# No prefined RM variable, try to guess OS default\n\tifeq ($(OS),Windows_NT)\n\t\tRM = del\n\telse\n\t\tRM = rm -f\n\tendif\nendif\n\n# Enables dependency tracking (https://make.mad-scientist.net/papers/advanced-auto-dependency-generation/)\n# This ensures that changing a .h file automatically results in the .c files using it being auto recompiled when next running make\n# On older systems the required GCC options may not be supported - in which case just change TRACK_DEPENDENCIES to 0\nTRACK_DEPENDENCIES=1\n\nifndef $(PLAT)\n\tifeq ($(OS),Windows_NT)\n\t\tPLAT = mingw\n\telse\n\t\tPLAT = $(shell uname -s | tr '[:upper:]' '[:lower:]')\n\tendif\nendif\n\nifeq ($(PLAT),web)\n\tCC      = emcc\n\tOEXT    = .html\n\tCFLAGS  = -g\n\tLDFLAGS = -g -s WASM=1 -s NO_EXIT_RUNTIME=1 -s ABORTING_MALLOC=0 -s ALLOW_MEMORY_GROWTH=1 -s TOTAL_STACK=256Kb --js-library $(SOURCE_DIR)/interop_web.js\n\tBUILD_DIR = build-web\nendif\n\nifeq ($(PLAT),mingw)\n\tCC      =  gcc\n\tOEXT    =  .exe\n\tCFLAGS  += -DUNICODE\n\tLDFLAGS =  -g\n\tLIBS    =  -mwindows -lwinmm\n\tBUILD_DIR = build-win\nendif\n\nifeq ($(PLAT),linux)\n\tCFLAGS  += -DCC_BUILD_ICON\n\tLIBS    =  -lX11 -lXi -lpthread -lGL -ldl\n\tBUILD_DIR = build-linux\nendif\n\nifeq ($(PLAT),sunos)\n\tCFLAGS  += -DCC_BUILD_ICON\n\tLIBS    =  -lsocket -lX11 -lXi -lGL\n\tBUILD_DIR = build-solaris\nendif\n\nifeq ($(PLAT),hp-ux)\n\tCC      = gcc\n\tCFLAGS  = -DCC_BUILD_ICON\n\tLDFLAGS =\n\tLIBS    = -lm -lX11 -lXi -lXext -L/opt/graphics/OpenGL/lib -lGL -lpthread\n\tBUILD_DIR = build-hpux\nendif\n\nifeq ($(PLAT),darwin)\n\tOBJECTS += $(BUILD_DIR)/Window_cocoa.o\n\tCFLAGS  += -DCC_BUILD_ICON\n\tLIBS    =\n\tLDFLAGS =  -rdynamic -framework Cocoa -framework OpenGL -framework IOKit -lobjc\n\tBUILD_DIR = build-macos\n\tTARGET  = $(ENAME).app\nendif\n\nifeq ($(PLAT),freebsd)\n\tCFLAGS  += -I /usr/local/include -DCC_BUILD_ICON\n\tLDFLAGS =  -L /usr/local/lib -rdynamic\n\tLIBS    =  -lexecinfo -lGL -lX11 -lXi -lpthread\n\tBUILD_DIR = build-freebsd\nendif\n\nifeq ($(PLAT),openbsd)\n\tCFLAGS  += -I /usr/X11R6/include -I /usr/local/include -DCC_BUILD_ICON\n\tLDFLAGS =  -L /usr/X11R6/lib -L /usr/local/lib -rdynamic\n\tLIBS    =  -lexecinfo -lGL -lX11 -lXi -lpthread\n\tBUILD_DIR = build-openbsd\nendif\n\nifeq ($(PLAT),netbsd)\n\tCFLAGS  += -I /usr/X11R7/include -I /usr/pkg/include -DCC_BUILD_ICON\n\tLDFLAGS =  -L /usr/X11R7/lib -L /usr/pkg/lib -rdynamic\n\tLIBS    =  -lexecinfo -lGL -lX11 -lXi -lpthread\n\tBUILD_DIR = build-netbsd\nendif\n\nifeq ($(PLAT),dragonfly)\n\tCFLAGS  += -I /usr/local/include -DCC_BUILD_ICON\n\tLDFLAGS =  -L /usr/local/lib -rdynamic\n\tLIBS    =  -lexecinfo -lGL -lX11 -lXi -lpthread\n\tBUILD_DIR = build-flybsd\nendif\n\nifeq ($(PLAT),haiku)\n\tOBJECTS += $(BUILD_DIR)/Platform_BeOS.o $(BUILD_DIR)/Window_BeOS.o\n\tCFLAGS  = -pipe -fno-math-errno\n\tLDFLAGS = -g\n\tLINK    = $(CXX)\n\tLIBS    = -lGL -lnetwork -lbe -lgame -ltracker\n\tBUILD_DIR = build-haiku\nendif\n\nifeq ($(PLAT),beos)\n\tOBJECTS += $(BUILD_DIR)/Platform_BeOS.o $(BUILD_DIR)/Window_BeOS.o\n\tCFLAGS  = -pipe\n\tLDFLAGS = -g\n\tLINK    = $(CXX)\n\tLIBS    = -lGL -lnetwork -lbe -lgame -ltracker\n\tBUILD_DIR = build-beos\n\tTRACK_DEPENDENCIES=0\nendif\n\nifeq ($(PLAT),serenityos)\n\tLIBS    = -lgl -lSDL2\n\tBUILD_DIR = build-serenity\nendif\n\nifeq ($(PLAT),irix)\n\tCC      = gcc\n\tLIBS    = -lGL -lX11 -lXi -lpthread -ldl\n\tBUILD_DIR = build-irix\nendif\n\nifeq ($(PLAT),dos)\n\tCC\t=  i586-pc-msdosdjgpp-gcc \n\tLIBS    =\n\tLDFLAGS = -g\n\tOEXT    =  .exe\n\tBUILD_DIR = build-dos\nendif\n\n\nifdef SDL2\n\tCFLAGS += -DCC_WIN_BACKEND=CC_WIN_BACKEND_SDL2\n\tLIBS += -lSDL2\nendif\nifdef SDL3\n\tCFLAGS += -DCC_WIN_BACKEND=CC_WIN_BACKEND_SDL3\n\tLIBS += -lSDL3\nendif\nifdef TERMINAL\n\tCFLAGS += -DCC_WIN_BACKEND=CC_WIN_BACKEND_TERMINAL -DCC_GFX_BACKEND=CC_GFX_BACKEND_SOFTGPU\n\tLIBS := $(subst mwindows,mconsole,$(LIBS))\nendif\n\nifdef BEARSSL\n\tBEARSSL_SOURCES = $(wildcard third_party/bearssl/src/*.c)\n\tBEARSSL_OBJECTS = $(patsubst third_party/bearssl/src/%.c, $(BUILD_DIR)/%.o, $(BEARSSL_SOURCES))\n\tOBJECTS += $(BEARSSL_OBJECTS)\n\tCFLAGS  += -Ithird_party/bearssl/inc -DCC_SSL_BACKEND=CC_SSL_BACKEND_BEARSSL -DCC_NET_BACKEND=CC_NET_BACKEND_BUILTIN\nendif\n\nifdef RELEASE\n\tCFLAGS += -O1\nelse\n\tCFLAGS += -g\nendif\n\n# link with CC by default\nLINK ?= $(CC)\n\ndefault: $(PLAT)\n\nweb:\n\t$(MAKE) $(TARGET) PLAT=web\nlinux:\n\t$(MAKE) $(TARGET) PLAT=linux\nmingw:\n\t$(MAKE) $(TARGET) PLAT=mingw\nsunos:\n\t$(MAKE) $(TARGET) PLAT=sunos\nhp-ux:\n\t$(MAKE) $(TARGET) PLAT=hp-ux\ndarwin:\n\t$(MAKE) $(TARGET) PLAT=darwin\nfreebsd:\n\t$(MAKE) $(TARGET) PLAT=freebsd\nopenbsd:\n\t$(MAKE) $(TARGET) PLAT=openbsd\nnetbsd:\n\t$(MAKE) $(TARGET) PLAT=netbsd\ndragonfly:\n\t$(MAKE) $(TARGET) PLAT=dragonfly\nhaiku:\n\t$(MAKE) $(TARGET) PLAT=haiku\nbeos:\n\t$(MAKE) $(TARGET) PLAT=beos\nserenityos:\n\t$(MAKE) $(TARGET) PLAT=serenityos\nirix:\n\t$(MAKE) $(TARGET) PLAT=irix\ndos:\n\t$(MAKE) $(TARGET) PLAT=dos\n# Default overrides\nsdl2:\n\t$(MAKE) $(TARGET) SDL2=1\nsdl3:\n\t$(MAKE) $(TARGET) SDL3=1\nterminal:\n\t$(MAKE) $(TARGET) TERMINAL=1\nrelease:\n\t$(MAKE) $(TARGET) RELEASE=1\n\n# Some builds require more complex handling, so are moved to\n#  separate makefiles to avoid having one giant messy makefile\n32x:\n\t$(MAKE) -f misc/32x/Makefile\nsaturn:\n\t$(MAKE) -f misc/saturn/Makefile\ndreamcast:\n\t$(MAKE) -f misc/dreamcast/Makefile\npsp:\n\t$(MAKE) -f misc/psp/Makefile\nvita:\n\t$(MAKE) -f misc/vita/Makefile\nps1:\n\tcmake --preset default misc/ps1\n\tcmake --build misc/ps1/build\nps2:\n\t$(MAKE) -f misc/ps2/Makefile\nps3:\n\t$(MAKE) -f misc/ps3/Makefile\nxbox:\n\t$(MAKE) -f misc/xbox/Makefile\nxbox360:\n\t$(MAKE) -f misc/xbox360/Makefile\nn64:\n\t$(MAKE) -f misc/n64/Makefile\nds:\n\t$(MAKE) -f misc/ds/Makefile\n3ds:\n\t$(MAKE) -f misc/3ds/Makefile\ngamecube:\n\t$(MAKE) -f misc/gc/Makefile\nwii:\n\t$(MAKE) -f misc/wii/Makefile\nwiiu:\n\t$(MAKE) -f misc/wiiu/Makefile\nswitch:\n\t$(MAKE) -f misc/switch/Makefile\nos/2:\n\t$(MAKE) -f misc/os2/Makefile\nmacclassic_68k:\n\t$(MAKE) -f misc/macclassic/Makefile_68k\nmacclassic_ppc:\n\t$(MAKE) -f misc/macclassic/Makefile_ppc\namiga_68k:\n\t$(MAKE) -f misc/amiga/Makefile_68k\namiga_ppc:\n\t$(MAKE) -f misc/amiga/Makefile_ppc\n\nclean:\n\t$(RM) $(OBJECTS)\n\n$(BUILD_DIR):\n\tmkdir -p $(BUILD_DIR)\n$(ENAME): $(BUILD_DIR) $(OBJECTS)\n\t$(LINK) $(LDFLAGS) -o $@$(OEXT) $(OBJECTS) $(EXTRA_LIBS) $(LIBS)\n\n\n# macOS app bundle\n$(ENAME).app : $(ENAME)\n\tmkdir -p $(TARGET)/Contents/MacOS\n\tmkdir -p $(TARGET)/Contents/Resources\n\tcp $(ENAME) $(TARGET)/Contents/MacOS/$(ENAME)\n\tcp misc/macOS/Info.plist   $(TARGET)/Contents/Info.plist\n\tcp misc/macOS/appicon.icns $(TARGET)/Contents/Resources/appicon.icns\n\n\n# === Compiling with dependency tracking ===\n# NOTE: Tracking dependencies might not work on older systems - disable this if so\nifeq ($(TRACK_DEPENDENCIES), 1)\nDEPFLAGS = -MT $@ -MMD -MP -MF $(BUILD_DIR)/$*.d\nDEPFILES := $(patsubst $(SOURCE_DIR)/%.c, $(BUILD_DIR)/%.d, $(C_SOURCES))\n$(DEPFILES):\n\n$(C_OBJECTS): $(BUILD_DIR)/%.o : $(SOURCE_DIR)/%.c $(BUILD_DIR)/%.d\n\t$(CC) $(CFLAGS) $(EXTRA_CFLAGS) $(DEPFLAGS) -c $< -o $@\n\ninclude $(wildcard $(DEPFILES))\n# === Compiling WITHOUT dependency tracking ===\nelse\n$(C_OBJECTS): $(BUILD_DIR)/%.o : $(SOURCE_DIR)/%.c\n\t$(CC) $(CFLAGS) $(EXTRA_CFLAGS) -c $< -o $@\nendif\n\t\n# === Platform specific file compiling ===\n$(BUILD_DIR)/%.o: $(SOURCE_DIR)/%.m\n\t$(CC) $(CFLAGS) $(EXTRA_CFLAGS) -c $< -o $@\n\t\n$(BUILD_DIR)/%.o: $(SOURCE_DIR)/%.cpp\n\t$(CC) $(CFLAGS) $(EXTRA_CFLAGS) -c $< -o $@\n\t\n$(BUILD_DIR)/%.o: third_party/bearssl/src/%.c\n\t$(CC) $(CFLAGS) $(EXTRA_CFLAGS) -c $< -o $@\n\n# EXTRA_CFLAGS and EXTRA_LIBS are not defined in the makefile intentionally -\n# define them on the command line as a simple way of adding CFLAGS/LIBS\n"
        },
        {
          "name": "android",
          "type": "tree",
          "content": null
        },
        {
          "name": "credits.txt",
          "type": "blob",
          "size": 1.5439453125,
          "content": "* Goodlyay - many suggestions, and being a great second pairs of eyes for issues and \r\n  improvements with character modelling, animating, and view bobbing. Also designed the icons.\r\n  Also designed all the textures in the web client. Big thanks!\r\n* AndrewPH - Advice on how to improve ui of both client and launcher, multiple \r\n  suggestions, and hosting the automatic build bot for ClassiCube.\r\n* 123DMWM - many suggestions, and assistance in identifying bugs and their causes.\r\n* video_error - Allowing remote use of an macOS machine, pointing out many flaws in the plugin API.\r\n  The macOS port would not have been possible without you, thanks!\r\n* Jerralish - reverse engineering and documenting the original classic map generation algorithm.\r\n* Cybertoon - Adding water animation, better metal step/dig sounds, identifying multiple flaws\r\n* Cheesse - multiple suggestions, testing ClassicalSharp on AMD graphics cards.\r\n* Hemsindor - testing ClassicalSharp on macOS.\r\n* headshotnoby - developing the Switch port.\r\n* Beyond_5D - identifying many differences from original Classic\r\n\r\nAnd a big thanks to everyone else in the ClassiCube community (who I didn't mention here),\r\nwho in the past have provided many suggestions and assisted in identifying bugs.\r\n\r\n* Portions of the FreeType project (https://www.freetype.org/) are used for text rendering\r\n  Some functionality has been removed compared to original FreeType source code.\r\n  Additionally, the base .c files have an #ifdef to disable compiling for emscripten\r\n  The source code of FreeType is otherwise unmodified.  \r\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "license.txt",
          "type": "blob",
          "size": 15.703125,
          "content": "﻿Copyright (c) 2014 - 2024, UnknownShadow200\r\nAll rights reserved.\r\n\r\nRedistribution and use in source and binary forms, with or without modification, \r\nare permitted provided that the following conditions are met:\r\n\r\n1. Redistributions of source code must retain the above copyright notice, this \r\nlist of conditions and the following disclaimer.\r\n\r\n2. Redistributions in binary form must reproduce the above copyright notice, this \r\nlist of conditions and the following disclaimer in the documentation and/or other \r\nmaterials provided with the distribution.\r\n\r\n3. Neither the name of ClassiCube nor the names of its contributors may be \r\nused to endorse or promote products derived from this software without specific prior \r\nwritten permission.\r\n\r\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY \r\nEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES \r\nOF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT \r\nSHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, \r\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT \r\nOF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) \r\nHOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT \r\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, \r\nEVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n\r\n\r\nOther function licenses\r\n=======================\r\n\r\nRay-box intersection algorithm comes from:\r\n\"An efficient and robust ray-box intersection algorithm\", Williams, Barrus, Morley & Shirley, Journal of Graphics Tools, 2005\"\r\nC++ source at http://www.cs.utah.edu/~awilliam/box/ does not appear to have an attached license.\r\n\r\n\r\nCell traversal of rays based on code I found that was in turn from http://www.xnawiki.com/index.php/Voxel_traversal\r\nThe archived about page (http://web.archive.org/web/20090412065116/http://www.xnawiki.com/index.php/XNAWiki:About) states\r\nthat \"All code found on the wiki is considered public domain\".\r\n\r\n\r\nFrustum culling was based on the code from http://www.crownandcutlass.com/features/technicaldetails/frustum.html,\r\nwhich is in turn archived from (now defunct) http://www.markmorley.com/\r\n\"This page and its contents are Copyright 2000 by Mark Morley\r\nUnless otherwise noted, you may use any and all code examples provided herein in any way you want.\"\r\n\r\n\r\nOpenTK license\r\n===============\r\nCopyright (c) 2006 - 2010 The Open Toolkit library.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy \r\nof this software and associated documentation files (the \"Software\"), to deal \r\nin the Software without restriction, including without limitation the rights \r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell \r\ncopies of the Software, and to permit persons to whom the Software is \r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, \r\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR \r\nIN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n\r\nOpenTK.Platform.Windows and OpenTK.Platform.X11 include portions of the Mono class library. \r\nThese portions are covered by the following license:\r\n\r\nCopyright (c) 2004 Novell, Inc.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy \r\nof this software and associated documentation files (the \"Software\"), to deal \r\nin the Software without restriction, including without limitation the rights \r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell \r\ncopies of the Software, and to permit persons to whom the Software is \r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in \r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR \r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, \r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE \r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, \r\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR \r\nIN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n\r\n\r\nEmscripten license\r\n==============================================================================\r\n\r\nCopyright (c) 2010-2014 Emscripten authors, see AUTHORS file.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in\r\nall copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\r\nTHE SOFTWARE.\r\n\r\n==============================================================================\r\n\r\nCopyright (c) 2010-2014 Emscripten authors, see AUTHORS file.\r\nAll rights reserved.\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a\r\ncopy of this software and associated documentation files (the\r\n\"Software\"), to deal with the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\n    Redistributions of source code must retain the above copyright\r\n    notice, this list of conditions and the following disclaimers.\r\n\r\n    Redistributions in binary form must reproduce the above\r\n    copyright notice, this list of conditions and the following disclaimers\r\n    in the documentation and/or other materials provided with the\r\n    distribution.\r\n\r\n    Neither the names of Mozilla,\r\n    nor the names of its contributors may be used to endorse\r\n    or promote products derived from this Software without specific prior\r\n    written permission. \r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\nIN NO EVENT SHALL THE CONTRIBUTORS OR COPYRIGHT HOLDERS BE LIABLE FOR\r\nANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\nSOFTWARE OR THE USE OR OTHER DEALINGS WITH THE SOFTWARE.\r\n\r\n==============================================================================\r\n\r\n\r\nBearSSL license\r\n==============================================================================\r\nCopyright (c) 2016 Thomas Pornin <pornin@bolet.org>\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining \r\na copy of this software and associated documentation files (the\r\n\"Software\"), to deal in the Software without restriction, including\r\nwithout limitation the rights to use, copy, modify, merge, publish,\r\ndistribute, sublicense, and/or sell copies of the Software, and to\r\npermit persons to whom the Software is furnished to do so, subject to\r\nthe following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be \r\nincluded in all copies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, \r\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND \r\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS\r\nBE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\r\nACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\r\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n==============================================================================\r\n\r\n\r\n\r\nFreeType license\r\n==================\r\n                    The FreeType Project LICENSE\r\n                    ----------------------------\r\n\r\n                            2006-Jan-27\r\n\r\n                    Copyright 1996-2002, 2006 by\r\n          David Turner, Robert Wilhelm, and Werner Lemberg\r\n\r\n\r\n\r\nIntroduction\r\n============\r\n\r\n  The FreeType  Project is distributed in  several archive packages;\r\n  some of them may contain, in addition to the FreeType font engine,\r\n  various tools and  contributions which rely on, or  relate to, the\r\n  FreeType Project.\r\n\r\n  This  license applies  to all  files found  in such  packages, and\r\n  which do not  fall under their own explicit  license.  The license\r\n  affects  thus  the  FreeType   font  engine,  the  test  programs,\r\n  documentation and makefiles, at the very least.\r\n\r\n  This  license   was  inspired  by  the  BSD,   Artistic,  and  IJG\r\n  (Independent JPEG  Group) licenses, which  all encourage inclusion\r\n  and  use of  free  software in  commercial  and freeware  products\r\n  alike.  As a consequence, its main points are that:\r\n\r\n    o We don't promise that this software works. However, we will be\r\n      interested in any kind of bug reports. (`as is' distribution)\r\n\r\n    o You can  use this software for whatever you  want, in parts or\r\n      full form, without having to pay us. (`royalty-free' usage)\r\n\r\n    o You may not pretend that  you wrote this software.  If you use\r\n      it, or  only parts of it,  in a program,  you must acknowledge\r\n      somewhere  in  your  documentation  that  you  have  used  the\r\n      FreeType code. (`credits')\r\n\r\n  We  specifically  permit  and  encourage  the  inclusion  of  this\r\n  software, with  or without modifications,  in commercial products.\r\n  We  disclaim  all warranties  covering  The  FreeType Project  and\r\n  assume no liability related to The FreeType Project.\r\n\r\n\r\n  Finally,  many  people  asked  us  for  a  preferred  form  for  a\r\n  credit/disclaimer to use in compliance with this license.  We thus\r\n  encourage you to use the following text:\r\n\r\n   \"\"\"\r\n    Portions of this software are copyright © <year> The FreeType\r\n    Project (www.freetype.org).  All rights reserved.\r\n   \"\"\"\r\n\r\n  Please replace <year> with the value from the FreeType version you\r\n  actually use.\r\n\r\n\r\nLegal Terms\r\n===========\r\n\r\n0. Definitions\r\n--------------\r\n\r\n  Throughout this license,  the terms `package', `FreeType Project',\r\n  and  `FreeType  archive' refer  to  the  set  of files  originally\r\n  distributed  by the  authors  (David Turner,  Robert Wilhelm,  and\r\n  Werner Lemberg) as the `FreeType Project', be they named as alpha,\r\n  beta or final release.\r\n\r\n  `You' refers to  the licensee, or person using  the project, where\r\n  `using' is a generic term including compiling the project's source\r\n  code as  well as linking it  to form a  `program' or `executable'.\r\n  This  program is  referred to  as  `a program  using the  FreeType\r\n  engine'.\r\n\r\n  This  license applies  to all  files distributed  in  the original\r\n  FreeType  Project,   including  all  source   code,  binaries  and\r\n  documentation,  unless  otherwise  stated   in  the  file  in  its\r\n  original, unmodified form as  distributed in the original archive.\r\n  If you are  unsure whether or not a particular  file is covered by\r\n  this license, you must contact us to verify this.\r\n\r\n  The FreeType  Project is copyright (C) 1996-2000  by David Turner,\r\n  Robert Wilhelm, and Werner Lemberg.  All rights reserved except as\r\n  specified below.\r\n\r\n1. No Warranty\r\n--------------\r\n\r\n  THE FREETYPE PROJECT  IS PROVIDED `AS IS' WITHOUT  WARRANTY OF ANY\r\n  KIND, EITHER  EXPRESS OR IMPLIED,  INCLUDING, BUT NOT  LIMITED TO,\r\n  WARRANTIES  OF  MERCHANTABILITY   AND  FITNESS  FOR  A  PARTICULAR\r\n  PURPOSE.  IN NO EVENT WILL ANY OF THE AUTHORS OR COPYRIGHT HOLDERS\r\n  BE LIABLE  FOR ANY DAMAGES CAUSED  BY THE USE OR  THE INABILITY TO\r\n  USE, OF THE FREETYPE PROJECT.\r\n\r\n2. Redistribution\r\n-----------------\r\n\r\n  This  license  grants  a  worldwide, royalty-free,  perpetual  and\r\n  irrevocable right  and license to use,  execute, perform, compile,\r\n  display,  copy,   create  derivative  works   of,  distribute  and\r\n  sublicense the  FreeType Project (in  both source and  object code\r\n  forms)  and  derivative works  thereof  for  any  purpose; and  to\r\n  authorize others  to exercise  some or all  of the  rights granted\r\n  herein, subject to the following conditions:\r\n\r\n    o Redistribution of  source code  must retain this  license file\r\n      (`FTL.TXT') unaltered; any  additions, deletions or changes to\r\n      the original  files must be clearly  indicated in accompanying\r\n      documentation.   The  copyright   notices  of  the  unaltered,\r\n      original  files must  be  preserved in  all  copies of  source\r\n      files.\r\n\r\n    o Redistribution in binary form must provide a  disclaimer  that\r\n      states  that  the software is based in part of the work of the\r\n      FreeType Team,  in  the  distribution  documentation.  We also\r\n      encourage you to put an URL to the FreeType web page  in  your\r\n      documentation, though this isn't mandatory.\r\n\r\n  These conditions  apply to any  software derived from or  based on\r\n  the FreeType Project,  not just the unmodified files.   If you use\r\n  our work, you  must acknowledge us.  However, no  fee need be paid\r\n  to us.\r\n\r\n3. Advertising\r\n--------------\r\n\r\n  Neither the  FreeType authors and  contributors nor you  shall use\r\n  the name of the  other for commercial, advertising, or promotional\r\n  purposes without specific prior written permission.\r\n\r\n  We suggest,  but do not require, that  you use one or  more of the\r\n  following phrases to refer  to this software in your documentation\r\n  or advertising  materials: `FreeType Project',  `FreeType Engine',\r\n  `FreeType library', or `FreeType Distribution'.\r\n\r\n  As  you have  not signed  this license,  you are  not  required to\r\n  accept  it.   However,  as  the FreeType  Project  is  copyrighted\r\n  material, only  this license, or  another one contracted  with the\r\n  authors, grants you  the right to use, distribute,  and modify it.\r\n  Therefore,  by  using,  distributing,  or modifying  the  FreeType\r\n  Project, you indicate that you understand and accept all the terms\r\n  of this license.\r\n\r\n4. Contacts\r\n-----------\r\n\r\n  There are two mailing lists related to FreeType:\r\n\r\n    o freetype@nongnu.org\r\n\r\n      Discusses general use and applications of FreeType, as well as\r\n      future and  wanted additions to the  library and distribution.\r\n      If  you are looking  for support,  start in  this list  if you\r\n      haven't found anything to help you in the documentation.\r\n\r\n    o freetype-devel@nongnu.org\r\n\r\n      Discusses bugs,  as well  as engine internals,  design issues,\r\n      specific licenses, porting, etc.\r\n\r\n  Our home page can be found at\r\n\r\n    https://www.freetype.org\r\n\r\n\r\n--- end of FTL.TXT ---\r\n"
        },
        {
          "name": "misc",
          "type": "tree",
          "content": null
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 21.2685546875,
          "content": "ClassiCube is a custom Minecraft Classic compatible client written in C from scratch.<br>\r\n> [!IMPORTANT]\r\n**ClassiCube is not affiliated with (or supported by) Mojang AB, Minecraft, or Microsoft in any way.** <br><br>\r\n**ClassiCube is not trying to replicate modern Minecraft.**<br>\r\n**It will never support survival, Minecraft accounts, or modern Minecraft servers.**\r\n\r\n# What ClassiCube is\r\n\r\nClassiCube aims to replicate the 2009 Minecraft Classic client while offering **optional** enhancements to improve gameplay. ClassiCube can run on [many systems](#supported-systems), including desktop, web, mobile, and even some consoles.\r\n<details>\r\n<summary><b>Features (click to expand)</b></summary>\r\n\r\n* Much better performance and minimal memory usage compared to original Minecraft Classic\r\n* Optional enhancements including custom blocks, models, and environment colors\r\n* Partially supports some features of Minecraft Classic versions before 0.30\r\n* Works with effectively all graphics cards that support OpenGL or Direct3D 9\r\n* Runs on Windows, macOS, Linux, Android, iOS, and in a web browser\r\n* Also runs on OpenBSD, FreeBSD, NetBSD, Solaris, Haiku, IRIX, SerenityOS\r\n* Although in various stages of early development, also runs on various consoles\r\n\r\n</details>\r\n\r\nYou can **download ClassiCube** [here](https://www.classicube.net/download/) and the very latest builds [here](https://www.classicube.net/nightlies/).\r\n\r\n![classic](https://github.com/ClassiCube/ClassiCube/assets/6509348/eedee53f-f53e-456f-b51c-92c62079eee0)\r\n\r\n![enhanced](https://github.com/ClassiCube/ClassiCube/assets/6509348/b2fe0e2b-5d76-41ab-909f-048d0ad15f37)\r\n\r\n\r\n# We need your help\r\n\r\nClassiCube strives to replicate the original Minecraft Classic experience by **strictly adhering to [clean room](https://en.wikipedia.org/wiki/Clean_room_design) reverse engineering approach**.\r\n\r\nIf you're interested in documenting or verifying the behaviour of the original Minecraft Classic, please get in contact on the [ClassiCube Discord](https://classicube.net/discord)\r\n\r\n\r\n# How to play\r\nInitially, you will need to run ClassiCube.exe to download the required assets from minecraft.net and classicube.net.<br>\r\nJust click 'OK' to the dialog menu that appears when you start the launcher.\r\n\r\n> **Note:** When running from within VirtualBox, disable Mouse Integration, otherwise the in-game camera won't work properly.\r\n\r\n**Singleplayer mode**\r\nRun ClassiCube.exe, then click Singleplayer at the main menu.\r\n\r\n**Multiplayer mode**\r\nRun ClassiCube.exe. You can connect to LAN/locally hosted servers, and classicube.net servers if you have a [ClassiCube account](https://www.classicube.net/).\r\n\r\n#### *Stuck on OpenGL 1.1?*\r\nThe most common reason for being stuck on OpenGL 1.1 is non-working GPU drivers - so if possible, you should try either installing or updating the drivers for your GPU.\r\n\r\nOtherwise:\r\n* On Windows, you can still run the OpenGL build of ClassiCube anyways. <br> \r\n(You can try downloading and using the MESA software renderer from [here](http://download.qt.io/development_releases/prebuilt/llvmpipe/windows/) for slightly better performance though)\r\n* On other operating systems, you will have to [compile the game yourself](#Compiling). <br> \r\nDon't forget to add `-DCC_BUILD_GL11` to the compilation command line so that the compiled game supports OpenGL 1.1.\r\n\r\n# Supported systems\r\n\r\nClassiCube runs on:\r\n* Windows - 95 and later\r\n* macOS - 10.5 or later (can be compiled for 10.3/10.4 though)\r\n* Linux - needs `libcurl` and `libopenal`\r\n* Android - 2.3 or later\r\n* iOS - 8.0 or later\r\n* Most web browsers (even runs on IE11)\r\n\r\nAnd also runs on:\r\n* Raspberry Pi - needs <code>libcurl</code> and <code>libopenal</code>\r\n* FreeBSD - needs <code>libexecinfo</code>, <code>curl</code> and <code>openal-soft</code> packages (can [download from here](https://www.classicube.net/download/#dl-fbsd))\r\n* NetBSD - needs <code>libexecinfo</code>, <code>curl</code> and <code>openal-soft</code> packages (can [download from here](https://www.classicube.net/download/#dl-nbsd))\r\n* OpenBSD - needs <code>libexecinfo</code>, <code>curl</code> and <code>openal</code> packages\r\n* Solaris - needs <code>curl</code> and <code>openal</code> packages\r\n* Haiku - needs <code>openal</code> package (if you have a GitHub account, can [download from here](https://github.com/ClassiCube/ClassiCube/actions/workflows/build_haiku.yml))\r\n* BeOS - untested on actual hardware\r\n* IRIX - needs <code>curl</code> and <code>openal</code> packages\r\n* SerenityOS - needs <code>SDL2</code>\r\n* Classic Mac OS (System 7 and later)\r\n* Dreamcast - unfinished, but usable (can [download from here](https://www.classicube.net/download/dreamcast))\r\n* Saturn - unfinished, major rendering and **stability issues** (can [download from here](https://www.classicube.net/download/saturn))\r\n* Switch - unfinished, but usable (can [download from here](https://www.classicube.net/download/switch))\r\n* Wii U - unfinished, major issues, **broken on real hardware** (can [download from here](https://www.classicube.net/download/wiiu))\r\n* Wii - unfinished, but usable (can [download from here](https://www.classicube.net/download/wii))\r\n* GameCube - unfinished, but usable (can [download from here](https://www.classicube.net/download/gamecube))\r\n* Nintendo 64 - unfinished, moderate rendering issues (can [download from here](https://www.classicube.net/download/n64))\r\n* 3DS - unfinished, but usable (can [download from here](https://www.classicube.net/download/3ds))\r\n* DS/DSi - unfinished, rendering issues  (can [download from here](https://www.classicube.net/download/nds))\r\n* PS Vita - unfinished, rendering issues (can [download from here](https://www.classicube.net/download/vita))\r\n* PSP - unfinished, rendering issues (can [download from here](https://www.classicube.net/download/psp))\r\n* PS3 - unfinished, rendering issues (can [download from here](https://www.classicube.net/download/ps3))\r\n* PS2 - unfinished, major rendering and **stability issues** (can [download from here](https://www.classicube.net/download/ps2))\r\n* PS1 - unfinished, major rendering and **stability issues** (can [download from here](https://www.classicube.net/download/ps1))\r\n* Xbox 360 - completely unfinished, **broken on real hardware** (can [download from here](https://www.classicube.net/download/360))\r\n* Xbox - unfinished, major rendering issues (can [download from here](https://www.classicube.net/download/xbox))\r\n\r\n# Compiling \r\n\r\n*Note: The instructions below automatically compile ClassiCube with the recommended defaults for the platform. <br>\r\nIf you (not recommended) want to override the defaults (e.g. to compile OpenGL build on Windows), see [here](doc/overriding-defaults.md) for details.*\r\n\r\n## Compiling - Windows\r\n\r\n##### Using Visual Studio\r\n1. Open ClassiCube.sln *(File -> Open -> Project/Solution)*\r\n2. Compile/Build it *(Build -> Build Solution)*.\r\n\r\nIf you get a `The Windows SDK version 5.1 was not found` compilation error, [see here for how to fix](doc/compile-fixes.md#visual-studio-unsupported-platform-toolset)\r\n\r\n##### Using Visual Studio (command line)\r\n1. Use 'Developer Tools for Visual Studio' from Start Menu\r\n2. Navigate to the directory with ClassiCube's source code\r\n3. Run `cl.exe *.c /link user32.lib gdi32.lib winmm.lib dbghelp.lib shell32.lib comdlg32.lib /out:ClassiCube.exe`\r\n\r\n##### Using MinGW-w64\r\nAssuming that you used the installer from https://sourceforge.net/projects/mingw-w64/ :\r\n1. Install MinGW-W64\r\n2. Use either *Run Terminal* from Start Menu or run *mingw-w64.bat* in the installation folder\r\n3. Navigate to the directory with ClassiCube's source code\r\n4. Run `gcc -fno-math-errno *.c -o ClassiCube.exe -mwindows -lwinmm`\r\n\r\n##### Using MinGW\r\nAssuming that you used the installer from https://osdn.net/projects/mingw/ :\r\n1. Install MinGW. You need mingw32-base-bin and msys-base-bin packages.\r\n2. Run *msys.bat* in the *C:\\MinGW\\msys\\1.0* folder.\r\n2. Navigate to the directory with ClassiCube's source code\r\n4. Run `gcc -fno-math-errno *.c -o ClassiCube.exe -mwindows -lwinmm`\r\n\r\n##### Using TCC (Tiny C Compiler)\r\nSetting up TCC:\r\n1. Download and extract `tcc-0.9.27-win64-bin.zip` from https://bellard.org/tcc/\r\n2. Download `winapi-full-for-0.9.27.zip` from https://bellard.org/tcc/ \r\n3. Copy `winapi` folder and `_mingw_dxhelper.h` from `winapi-full-for-0.9.27.zip` into TCC's `include` folder\r\n\r\nCompiling with TCC:\r\n1. Navigate to the directory with ClassiCube's source code\r\n2. In `ExtMath.c`, change `fabsf` to `fabs` and `sqrtf` to `sqrt`\r\n3. Run `tcc.exe -o ClassiCube.exe *.c -lwinmm -lgdi32 -luser32 -lcomdlg32 -lshell32`<br>\r\n(Note: You may need to specify the full path to `tcc.exe` instead of just `tcc.exe`)\r\n\r\n## Compiling - Linux\r\n\r\n##### Using gcc/clang\r\n1. Install X11, XInput2, and OpenGL development libraries if necessary. <br>\r\nFor Ubuntu, these are the `libx11-dev`, `libxi-dev` and `libgl1-mesa-dev` packages\r\n2. Run either:\r\n    * `make linux` or\r\n    * `cc -fno-math-errno src/*.c -o ClassiCube -rdynamic -lpthread -lX11 -lXi -lGL -ldl`\r\n\r\n##### Cross compiling for Windows (32 bit):\r\n1. Install MinGW-w64 if necessary. (Ubuntu: `gcc-mingw-w64` package)\r\n2. Run ```i686-w64-mingw32-gcc -fno-math-errno src/*.c -o ClassiCube.exe -mwindows -lwinmm```\r\n\r\n##### Cross compiling for Windows (64 bit):\r\n1. Install MinGW-w64 if necessary. (Ubuntu: `gcc-mingw-w64` package)\r\n2. Run ```x86_64-w64-mingw32-gcc -fno-math-errno src/*.c -o ClassiCube.exe -mwindows -lwinmm```\r\n\r\n##### Raspberry Pi\r\nAlthough the regular linux compiliation flags will work fine, to take full advantage of the hardware:\r\n\r\n```gcc -fno-math-errno src/*.c -o ClassiCube -DCC_BUILD_RPI -rdynamic -lpthread -lX11 -lXi -lEGL -lGLESv2 -ldl```\r\n\r\n## Compiling - macOS\r\n1. Install a C compiler if necessary. The easiest way of obtaining one is by installing **Xcode**.\r\n2. Run either:\r\n    * `make darwin` or\r\n    * `cc -fno-math-errno src/*.c src/*.m -o ClassiCube -framework Cocoa -framework OpenGL -framework IOKit -lobjc`\r\n\r\n##### Using Xcode GUI\r\n\r\n1. Open the `misc/macOS/CCMAC.xcodeproj` project in Xcode\r\n2. Compile the project\r\n\r\n## Compiling - for Android\r\n\r\nNOTE: If you are distributing a modified version, **please change the package ID from `com.classicube.android.client` to something else** - otherwise Android users won't be able to have both ClassiCube and your modified version installed at the same time on their Android device\r\n\r\n##### Using Android Studio GUI\r\n\r\nOpen `android` folder in Android Studio (TODO explain more detailed)\r\n\r\n##### Using command line (gradle)\r\n\r\nRun `gradlew` in android folder (TODO explain more detailed)\r\n\r\n## Compiling - for iOS\r\n\r\niOS version will have issues as it's incomplete and only tested in iOS Simulator\r\n\r\nNOTE: If you are distributing a modified version, **please change the bundle ID from `com.classicube.ios.client` to something else** - otherwise iOS users won't be able to have both ClassiCube and your modified version installed at the same time on their iOS device\r\n\r\n##### Using Xcode GUI\r\n\r\n1. Open the `misc/ios/CCIOS.xcodeproj` project in Xcode\r\n2. Compile the project\r\n\r\n##### Using command line (Xcode)\r\n\r\n`xcodebuild -sdk iphoneos -configuration Debug` (TODO explain more detailed)\r\n\r\n## Compiling - webclient\r\n\r\n1. Install emscripten if necessary.\r\n2. Run either:\r\n    * `make web` or\r\n    * `emcc src/*.c -s ALLOW_MEMORY_GROWTH=1 -s TOTAL_STACK=1Mb --js-library interop_web.js`\r\n\r\nThe generated javascript file has some issues. [See here for how to fix](doc/compile-fixes.md#webclient-patches)\r\n\r\nFor details on how to integrate the webclient into a website, see [here](doc/hosting-webclient.md)\r\n\r\n<details>\r\n<summary><h2>Compiling - consoles</h2></summary>\r\n\r\nAll console ports need assistance from someone experienced with homebrew development - if you're interested, please get in contact on the [ClassiCube Discord.](https://classicube.net/discord)\r\n\r\n<details>\r\n<summary><h3>Nintendo consoles (click to expand)</h3></summary>\r\n\r\n#### Switch\r\n\r\nRun `make switch`. You'll need [libnx](https://github.com/switchbrew/libnx) and [mesa](https://github.com/devkitPro/mesa)\r\n\r\n**NOTE: It is highly recommended that you install the precompiled devkitpro packages from [here](https://devkitpro.org/wiki/Getting_Started) - you need the `switch-dev` group and the `switch-mesa switch-glm` packages)**\r\n\r\n#### Wii U\r\n\r\nRun `make wiiu`. You'll need [wut](https://github.com/devkitPro/wut/)\r\n\r\n**NOTE: It is highly recommended that you install the precompiled devkitpro packages from [here](https://devkitpro.org/wiki/Getting_Started) - you need the `wiiu-dev` group)**\r\n\r\n#### 3DS\r\n\r\nRun `make 3ds`. You'll need [libctru](https://github.com/devkitPro/libctru)\r\n\r\n**NOTE: It is highly recommended that you install the precompiled devkitpro packages from [here](https://devkitpro.org/wiki/Getting_Started) - you need the `3ds-dev` group)**\r\n\r\n#### Wii\r\n\r\nRun `make wii`. You'll need [libogc](https://github.com/devkitPro/libogc)\r\n\r\n**NOTE: It is highly recommended that you install the precompiled devkitpro packages from [here](https://devkitpro.org/wiki/Getting_Started) - you need the `wii-dev` group)**\r\n\r\n#### GameCube\r\n\r\nRun `make gamecube`. You'll need [libogc](https://github.com/devkitPro/libogc)\r\n\r\n**NOTE: It is highly recommended that you install the precompiled devkitpro packages from [here](https://devkitpro.org/wiki/Getting_Started) - you need the `gamecube-dev` group)**\r\n\r\n#### Nintendo DS/DSi\r\n\r\nRun `make ds`. You'll need [BlocksDS](https://github.com/blocksds/sdk)\r\n\r\n#### Nintendo 64\r\n\r\nRun `make n64`. You'll need the opengl branch of [libdragon](https://github.com/DragonMinded/libdragon/tree/opengl)\r\n\r\n</details>\r\n\r\n\r\n<details>\r\n<summary><h3>Sony consoles (click to expand)</h3></summary>\r\n\r\n#### PlayStation Vita\r\n\r\nRun `make vita`. You'll need [vitasdk](https://vitasdk.org/)\r\n\r\n#### PlayStation Portable\r\n\r\nRun `make psp`. You'll need [pspsdk](https://github.com/pspdev/pspsdk)\r\n\r\n**NOTE: It is recommended that you install the precompiled pspsdk version from [here](https://github.com/pspdev/pspdev/releases)**\r\n\r\n#### PlayStation 3\r\n\r\nRun `make ps3`. You'll need [PSL1GHT](https://github.com/ps3dev/PSL1GHT)\r\n\r\n#### PlayStation 2\r\n\r\nRun `make ps2`. You'll need [ps2sdk](https://github.com/ps2dev/ps2sdk)\r\n\r\n#### PlayStation 1\r\n\r\nRun `make ps1`. You'll need [PSn00bSDK](https://github.com/Lameguy64/PSn00bSDK/)\r\n\r\n</details>\r\n\r\n\r\n<details>\r\n<summary><h3>Microsoft consoles (click to expand)</h3></summary>\r\n\r\n#### Xbox 360\r\n\r\nRun `make 360`. You'll need [libxenon](https://github.com/Free60Project/libxenon)\r\n\r\n#### Xbox (original)\r\n\r\nRun `make xbox`. You'll need [nxdk](https://github.com/XboxDev/nxdk)\r\n\r\n</details>\r\n\r\n\r\n<details>\r\n<summary><h3>SEGA consoles (click to expand)</h3></summary>\r\n\r\n### SEGA consoles\r\n\r\n#### Dreamcast\r\n\r\nRun `make dreamcast`. You'll need [KallistiOS](https://github.com/KallistiOS/KallistiOS)\r\n\r\n#### Saturn\r\n\r\nRun `make saturn`. You'll need [libyaul](https://github.com/yaul-org/libyaul)\r\n\r\n</details>\r\n\r\n</details>\r\n\r\n\r\n<details>\r\n<summary><h2>Compiling - other platforms (click to expand)</h2></summary>\r\n\r\n#### FreeBSD\r\n\r\n1. Install `libxi`, `libexecinfo`, `curl` and `openal-soft` packages if needed\r\n2. Run either:\r\n    * `make freebsd` or\r\n    * `cc src/*.c -o ClassiCube -I /usr/local/include -L /usr/local/lib -lm -lpthread -lX11 -lXi -lGL -lexecinfo`\r\n\r\n#### OpenBSD\r\n\r\n1. Install `libexecinfo`, `curl` and `openal` packages if needed\r\n2. Run either:\r\n    * `make opensd` or\r\n    * `cc src/*.c -o ClassiCube -I /usr/X11R6/include -I /usr/local/include -L /usr/X11R6/lib -L /usr/local/lib -lm -lpthread -lX11 -lXi -lGL -lexecinfo`\r\n\r\n#### NetBSD\r\n\r\n1. Install `libexecinfo`, `curl` and `openal-soft` packages if needed\r\n2. Run either:\r\n    * `make netbsd` or\r\n    * `cc src/*.c -o ClassiCube -I /usr/X11R7/include -I /usr/pkg/include -L /usr/X11R7/lib -L /usr/pkg/lib  -lpthread -lX11 -lXi -lGL -lexecinfo`\r\n\r\n#### DragonflyBSD\r\n\r\n1. Install `libxi`, `libexecinfo`, `curl` and `openal-soft` packages if needed\r\n2. Run either:\r\n    * `make dragonfly` or\r\n    * `cc src/*.c -o ClassiCube -I /usr/local/include -L /usr/local/lib -lm -lpthread -lX11 -lXi -lGL -lexecinfo`\r\n\r\n#### Solaris\r\n\r\n1. Install required packages if needed\r\n2. Run either:\r\n    * `make sunos` or\r\n    * `gcc -fno-math-errno src/*.c -o ClassiCube -lsocket -lX11 -lXi -lGL`\r\n\r\n#### Haiku\r\n\r\n1. Install `gcc`, `haiku_devel`, `openal_devel` packages if needed\r\n2. Run either:\r\n    * `make haiku` or\r\n    * `cc -fno-math-errno src/*.c src/*.cpp -o ClassiCube -lGL -lnetwork -lstdc++ -lbe -lgame -ltracker`\r\n\r\n#### BeOS\r\n\r\n1. Install a C compiler\r\n2. Run either:\r\n    * `make beos` or\r\n    * `cc -fno-math-errno src/*.c src/*.cpp -o ClassiCube -lGL -lbe -lgame -ltracker`\r\n\r\n#### IRIX\r\n\r\n1. Install required packages if needed\r\n2. Run either:\r\n    * `make irix` or\r\n    * gcc -fno-math-errno src/*.c -o ClassiCube -lGL -lX11 -lXi -lpthread -ldl`\r\n\r\n#### SerenityOS\r\n\r\n1. Install SDL2 port if needed\r\n2. Run either:\r\n    * `make serenityos` or\r\n    * `cc src/*.c -o ClassiCube -lgl -lSDL2`\r\n\r\n#### Classic Mac OS\r\n\r\n1. Install Retro68\r\n2. Run either\r\n    * ```make macclassic_68k``` (For a M68k build)\r\n    * ```make macclassic_ppc``` (For a PPC build)\r\n\r\nThe PowerPC build will usually perform much better\r\n\r\n#### Other systems\r\n\r\nYou'll have to write the necessary code. You should read `portability.md` in doc folder.\r\n\r\n</details>\r\n\r\n## Documentation\r\n\r\nFunctions and variables in .h files are mostly documented.\r\n\r\nFurther information (e.g. style) for ClassiCube's source code can be found in the doc and misc folders.\r\n\r\n#### Known compilation errors\r\n\r\n[Fixes for compilation errors when using musl or old glibc for C standard library](doc/compile-fixes.md#common-compilation-errors)\r\n\r\n#### Tips\r\n* Press escape (after joining a world) or pause to switch to the pause menu.\r\n* Pause menu -> Options -> Controls lists all of the key combinations used by the client. \r\n* Note that toggling 'vsync' to on will minimise CPU usage, while off will maximimise chunk loading speed.\r\n* Press F to cycle view distance. Lower view distances can improve performance.\r\n\r\n* If the server has disabled hacks, key combinations such as fly and speed will not do anything.\r\n* To see the list of built in commands, type `/client`.\r\n* To see help for a given built in command, type `/client help <command name>`.\r\n\r\n\r\n<details>\r\n<summary><h2>Open source technologies (click to expand)</h2></summary>\r\n\r\n* [curl](https://curl.se/) - HTTP/HTTPS for linux and macOS\r\n* [FreeType](https://www.freetype.org/) - Font handling for all platforms\r\n* [GCC](https://gcc.gnu.org/) - Compiles client for linux\r\n* [MinGW-w64](http://mingw-w64.org/doku.php) - Compiles client for windows\r\n* [Clang](https://clang.llvm.org/) - Compiles client for macOS\r\n* [Emscripten](https://emscripten.org/) - Compiles client for web\r\n* [RenderDoc](https://renderdoc.org/) - Graphics debugging\r\n* [BearSSL](https://www.bearssl.org/) - SSL/TLS support on consoles\r\n* [libnx](https://github.com/switchbrew/libnx) - Backend for Switch\r\n* [Ryujinx](https://github.com/Ryujinx/Ryujinx) - Emulator used to test Switch port\r\n* [wut](https://github.com/devkitPro/wut/) - Backend for Wii U\r\n* [Cemu](https://github.com/cemu-project/Cemu) - Emulator used to test Wii U port\r\n* [libctru](https://github.com/devkitPro/libctru) - Backend for 3DS\r\n* [citro3D](https://github.com/devkitPro/citro3d) - Rendering backend for 3DS\r\n* [Citra](https://github.com/citra-emu/citra) - Emulator used to test 3DS port\r\n* [libogc](https://github.com/devkitPro/libogc) - Backend for Wii and GameCube\r\n* [libfat](https://github.com/devkitPro/libfat) - Filesystem backend for Wii/GC\r\n* [Dolphin](https://github.com/dolphin-emu/dolphin) - Emulator used to test Wii/GC port\r\n* [libdragon](https://github.com/DragonMinded/libdragon) - Backend for Nintendo 64\r\n* [ares](https://github.com/ares-emulator/ares) - Emulator used to test Nintendo 64 port\r\n* [BlocksDS](https://github.com/blocksds/sdk) - Backend for Nintendo DS\r\n* [melonDS](https://github.com/melonDS-emu/melonDS) - Emulator used to test Nintendo DS port\r\n* [vitasdk](https://github.com/vitasdk) - Backend for PS Vita\r\n* [Vita3K](https://github.com/Vita3K/Vita3K) - Emulator used to test Vita port\r\n* [pspsdk](https://github.com/pspdev/pspsdk) - Backend for PSP\r\n* [PPSSPP](https://github.com/hrydgard/ppsspp) - Emulator used to test PSP port\r\n* [PSL1GHT](https://github.com/ps3dev/PSL1GHT) - Backend for PS3\r\n* [RPCS3](https://github.com/RPCS3/rpcs3) - Emulator used to test PS3 port\r\n* [ps2sdk](https://github.com/ps2dev/ps2sdk) - Backend for PS2\r\n* [PCSX2](https://github.com/PCSX2/pcsx2) - Emulator used to test PS2 port\r\n* [PSn00bSDK](https://github.com/Lameguy64/PSn00bSDK/) - Backend for PS1\r\n* [duckstation](https://github.com/stenzek/duckstation) - Emulator used to test PS1 port\r\n* [libxenon](https://github.com/Free60Project/libxenon) - Backend for Xbox 360\r\n* [nxdk](https://github.com/XboxDev/nxdk) - Backend for Xbox\r\n* [xemu](https://github.com/xemu-project/xemu) - Emulator used to test Xbox port\r\n* [cxbx-reloaded](https://github.com/Cxbx-Reloaded/Cxbx-Reloaded) - Emulator used to test Xbox port\r\n* [KallistiOS](https://github.com/KallistiOS/KallistiOS) - Backend for Dreamcast\r\n* [GLdc](https://github.com/Kazade/GLdc) - Basis of rendering backend for Dreamcast\r\n* [flycast](https://github.com/flyinghead/flycast) - Emulator used to test Dreamcast port\r\n* [libyaul](https://github.com/yaul-org/libyaul) - Backend for Saturn\r\n* [mednafen](https://mednafen.github.io/) - Emulator used to test Saturn port\r\n\r\n</details>\r\n\r\n## Sound Credits\r\nClassiCube uses sounds from [Freesound.org](https://freesound.org)<br>\r\nFull credits are listed in [doc/sound-credits.md](doc/sound-credits.md)\r\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "third_party",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}