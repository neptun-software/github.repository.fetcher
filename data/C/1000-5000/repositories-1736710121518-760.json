{
  "metadata": {
    "timestamp": 1736710121518,
    "page": 760,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jarikomppa/soloud",
      "stars": 1827,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.37890625,
          "content": "Debug/\n_UpgradeReport_Files/\n*.ipch\n*.opensdf\n*.sdf\n*.old\n*.filters\nbuild/\n*.aux\n*.out\n*.gz\n*.toc\n*.o\nincoming/\nexperiments/\nscripts/*.log\nlib/*\nrel/*\ndoc/*\nbin/audio/\nbin/\nlib/*.ilk\nlib/*.lib\nlib/*.dll\nout/\n*.pyc\n*.exp\ndocsrc/xelatex_output.txt\ndocsrc/kindlegen_output.txt\n*.idb\n*.pdb\ndocsrc/20*\nglue/*\nscripts/soloud_codegen.py\nglue/rpgmaker_soloud.rb\n*.lastcodeanalysissucceeded\n*.bak\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.1015625,
          "content": "[submodule \"ext/libmodplug\"]\n\tpath = ext/libmodplug\n\turl = https://github.com/jarikomppa/libmodplug.git\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 1.6845703125,
          "content": "﻿If you wish to contribute code to SoLoud, add your name to\r\nthis list when sending a pull request. All code must be\r\neither public domain, CC0, wtfpl, zlib/libpng licensed, or\r\nsimilarly free to use (without attribution, or (l)gpl-like\r\nlimitations.\r\n\r\nJari Komppa http://iki.fi/sol/\r\nTom V�h�-Salo tomvahasalo@gmail.com\r\nTrygve Vea trygve.vea@gmail.com\r\ndorgonman dorgonman@hotmail.com\r\nGabriel Teles Bastos http://mundorpgmaker.com.br\r\nr-lyeh https://github.com/r-lyeh\r\nColden Cullen https://github.com/ColdenCullen\r\nCosku Bas cosku.bas@gmail.com\r\nNeil Richardson https://github.com/neilogd\r\nPetri Häkkinen\r\nOmar Cornut\r\namir ramezani <amir.ramezani1370@gmail.com> http://shaberoshan.ir\r\nLuke San Antonio Bialecki lukesanantonio@gmail.com\r\nKonstantin S. Matveyev kos@eligovision.ru\r\nEduardo Doria Lima https://github.com/eduardodoria\r\nIlya Zhuravlev https://github.com/xyzz\r\nJussi Sammaltupa\r\nTam Toucn https://github.com/TamToucan\r\nlamelizard\r\nTapio Vierros https://github.com/tapio\r\nDanny Angelo Carminati Grein https://github.com/fungos\r\nIgor Ivanov https://github.com/laptabrok\r\nMatthew O'Connell https://github.com/matthew-oconnell\r\nBoris Carvajal https://github.com/BorisCarvajal\r\nOsman Turan https://osmanturan.com\r\nSamson Close https://github.com/qwertysam\r\nBruce A Henderson https://github.com/woollybah\r\nPhilip Bennefall https://github.com/blastbay/\r\nSebastian Hartte https://github.com/shartte/\r\nJean-Luc Mackail https://github.com/fuzzyquills\r\nHumanGamer https://github.com/HumanGamer/\r\nAles Mlakar https://github.com/jazzbre\r\nlexander Yashin https://github.com/yashin-alexander\r\nNils Duval https://github.com/nlsdvl\r\nJackRedstonia jackredstonia64@gmail.com\r\nDavid Bullock https://github.com/dwbullock\r\n"
        },
        {
          "name": "CONTRIBUTING",
          "type": "blob",
          "size": 1.6298828125,
          "content": "Here's some guidelines on contributing to the SoLoud project.\n\n- SoLoud is extremely liberally licensed. All submitted code\n  must follow suit to keep it that way.\n  (public domain, CC0, wtfpl, zlib/libpng, unlicense, or similar\n  no-attribution and definitely no viral licenses).\n\n- When submitting the first time, add your name in AUTHORS.\n\n- Many small commits are better than few huge ones.\n\n- Try to follow the coding convention of the surrounding code.\n  If stand alone (such as platform or output device specific),\n  this isn't as important.\n  \n- All optimized code (such as SSE or assembler) must be \n  accompanied by plain 'c' version, because:\n  a) optimizations come and go, porting 30 years from now\n     can be really painful.\n  b) plain 'c' version works as documentation of the\n     optimized code.\n     \n- When doing platform specific code or otherwise optionally\n  compiled code, it's often better to have some duplicate\n  code inside large ifdef block than to have tons of hard\n  to follow small ifdef blocks.\n\n- Unless there's a really, really good reason, no templates,\n  including funkycast<foobar>. foo = (int)bar works fine.\n  \n- Unless performance critical, always try to write for readability.\n \nCoding convention in brief:\n\n- On naming:\n      aFunctionParameter\n      mMemberVariable\n      gGlobalVariable\n      localVariable\n      CONSTANT_VALUE\n      ClassName\n      functionName\n\nint ExampleClass::example(int aFoo)\n{\n    if (aFoo)\n    {\n        int i;\n        for (i = 0; i < mBarCycles; i++)\n        {\n            bar();\n        }\n        switch (gBah)\n        {\n        case BOO:\n            return HISS;\n        }\n    }\n    return 0;\n}\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.142578125,
          "content": "SoLoud contains various third party libraries which vary in licenses,\nbut are all extremely liberal; no attribution in binary form is required.\nFor more information, see SoLoud manual or http://soloud-audio.com/legal.html\n\nSoLoud proper is licensed under the zlib/libpng license:\n\nSoLoud audio engine\nCopyright (c) 2013-2018 Jari Komppa\n\nThis software is provided 'as-is', without any express or implied\nwarranty. In no event will the authors be held liable for any damages\narising from the use of this software.\n\nPermission is granted to anyone to use this software for any purpose,\nincluding commercial applications, and to alter it and redistribute it\nfreely, subject to the following restrictions:\n\n   1. The origin of this software must not be misrepresented; you must not\n   claim that you wrote the original software. If you use this software\n   in a product, an acknowledgment in the product documentation would be\n   appreciated but is not required.\n\n   2. Altered source versions must be plainly marked as such, and must not be\n   misrepresented as being the original software.\n\n   3. This notice may not be removed or altered from any source\n   distribution.\n"
        },
        {
          "name": "PULL_REQUEST_TEMPLATE.md",
          "type": "blob",
          "size": 1.1142578125,
          "content": "> 1. Remove this template before submitting\n>\n> 2. SoLoud project requires extremely liberal licensing, i.e, no attribution is required for binary forms.\n>    Patches should come under zlib, cc0, unlicense or wtfpl license, or if you wish to not retain any\n>    rights, don't include a license and the rights of your patch are released to the project owner and\n>    included under the SoLoud zlib/libpng licensing for anyone to (ab)use.\n>\n> 3. Code should generally follow the coding conventions in SoLoud, meaning formatting that's basically \n>    the ANSI format in Artistic Style formatter (or just read some of the code and make yours look the\n>    same).\n>\n> 4. Code should generally follow \"Orthodox C++\" rules, i.e, not \"modern c++\". This means minimal template\n>    use and basically no \"new\" c++ features.\n>\n> 5. Platform-specific code (i.e, backends / sinks) are pretty much expected to break the 3. and 4. above.\n>\n> 6. To show that you understand and accept the rules above, add your name to the AUTHORS file.\n>\n> TL;DR: make code similar to what's in SoLoud, don't add new licensing requirements, sign the AUTHORS file, thanks.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 0.26953125,
          "content": "SoLoud\n======\n\nSoLoud is an easy to use, free, portable c/c++ audio engine for games.\n\n![ScreenShot](https://raw.github.com/jarikomppa/soloud/master/soloud.png)\n\nZlib/LibPng licensed. Portable. Easy.\n\nOfficial site with documentation can be found at:\n http://soloud-audio.com\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "demos",
          "type": "tree",
          "content": null
        },
        {
          "name": "docsrc",
          "type": "tree",
          "content": null
        },
        {
          "name": "glue",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "issue_template.md",
          "type": "blob",
          "size": 0.455078125,
          "content": "> Expected behavior:\n\n\n> Actual behavior:\n\n\n> Steps to reproduce the problem:\n\n\n> SoLoud version, operating system, backend used, any other potentially useful information:\n\n\n[//]: # ( You don't need to follow the above template if you do not want to; feel free to start from scratch. )\n[//]: # ( Following the template leads to problem reports that are helpful to the developers. )\n[//]: # ( ...yes, this weird syntax is how one writes comments in a markdown file )\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "soloud.png",
          "type": "blob",
          "size": 9.412109375,
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}