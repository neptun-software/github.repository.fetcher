{
  "metadata": {
    "timestamp": 1736710492706,
    "page": 2,
    "hasNextPage": false,
    "endCursor": "Y3Vyc29yOjI=",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Genymobile/scrcpy",
      "stars": 115966,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.095703125,
          "content": "build/\n/dist/\n/build-*/\n/build_*/\n/release-*/\n.idea/\n.gradle/\n/x/\nlocal.properties\n/scrcpy-server\n"
        },
        {
          "name": "FAQ.md",
          "type": "blob",
          "size": 6.4208984375,
          "content": "# Frequently Asked Questions\n\n[Read in another language](#translations)\n\nHere are the common reported problems and their status.\n\nIf you encounter any error, the first step is to upgrade to the latest version.\n\n\n## `adb` and USB issues\n\n`scrcpy` execute `adb` commands to initialize the connection with the device. If\n`adb` fails, then scrcpy will not work.\n\nThis is typically not a bug in _scrcpy_, but a problem in your environment.\n\n\n### `adb` not found\n\nYou need `adb` accessible from your `PATH`.\n\nOn Windows, the current directory is in your `PATH`, and `adb.exe` is included\nin the release, so it should work out-of-the-box.\n\n\n### Device not detected\n\n>     ERROR: Could not find any ADB device\n\nCheck that you correctly enabled [adb debugging][enable-adb].\n\nYour device must be detected by `adb`:\n\n```\nadb devices\n```\n\nIf your device is not detected, you may need some [drivers] (on Windows). There is a separate [USB driver for Google devices][google-usb-driver].\n\n[enable-adb]: https://developer.android.com/studio/command-line/adb.html#Enabling\n[drivers]: https://developer.android.com/studio/run/oem-usb.html\n[google-usb-driver]: https://developer.android.com/studio/run/win-usb\n\n\n### Device unauthorized\n\n>     ERROR: Device is unauthorized:\n>     ERROR:     -->   (usb)  0123456789abcdef          unauthorized\n>     ERROR: A popup should open on the device to request authorization.\n\nWhen connecting, a popup should open on the device. You must authorize USB\ndebugging.\n\nIf it does not open, check [stackoverflow][device-unauthorized].\n\n[device-unauthorized]: https://stackoverflow.com/questions/23081263/adb-android-device-unauthorized\n\n\n### Several devices connected\n\nIf several devices are connected, you will encounter this error:\n\n>     ERROR: Multiple (2) ADB devices:\n>     ERROR:     -->   (usb)  0123456789abcdef                device  Nexus_5\n>     ERROR:     --> (tcpip)  192.168.1.5:5555                device  GM1913\n>     ERROR: Select a device via -s (--serial), -d (--select-usb) or -e (--select-tcpip)\n\nIn that case, you can either provide the identifier of the device you want to\nmirror:\n\n```bash\nscrcpy -s 0123456789abcdef\n```\n\nOr request the single USB (or TCP/IP) device:\n\n```bash\nscrcpy -d  # USB device\nscrcpy -e  # TCP/IP device\n```\n\nNote that if your device is connected over TCP/IP, you might get this message:\n\n>     adb: error: more than one device/emulator\n>     ERROR: \"adb reverse\" returned with value 1\n>     WARN: 'adb reverse' failed, fallback to 'adb forward'\n\nThis is expected (due to a bug on old Android versions, see [#5]), but in that\ncase, scrcpy fallbacks to a different method, which should work.\n\n[#5]: https://github.com/Genymobile/scrcpy/issues/5\n\n\n### Conflicts between adb versions\n\n>     adb server version (41) doesn't match this client (39); killing...\n\nThis error occurs when you use several `adb` versions simultaneously. You must\nfind the program using a different `adb` version, and use the same `adb` version\neverywhere.\n\nYou could overwrite the `adb` binary in the other program, or ask _scrcpy_ to\nuse a specific `adb` binary, by setting the `ADB` environment variable:\n\n```bash\n# in bash\nexport ADB=/path/to/your/adb\nscrcpy\n```\n\n```cmd\n:: in cmd\nset ADB=C:\\path\\to\\your\\adb.exe\nscrcpy\n```\n\n```powershell\n# in PowerShell\n$env:ADB = 'C:\\path\\to\\your\\adb.exe'\nscrcpy\n```\n\n\n### Device disconnected\n\nIf _scrcpy_ stops itself with the warning \"Device disconnected\", then the\n`adb` connection has been closed.\n\nTry with another USB cable or plug it into another USB port. See [#281] and\n[#283].\n\n[#281]: https://github.com/Genymobile/scrcpy/issues/281\n[#283]: https://github.com/Genymobile/scrcpy/issues/283\n\n\n## OTG issues on Windows\n\nOn Windows, if `scrcpy --otg` (or `--keyboard=aoa`/`--mouse=aoa`) results in:\n\n>     ERROR: Could not find any USB device\n\n(or if only unrelated USB devices are detected), there might be drivers issues.\n\nPlease read [#3654], in particular [this comment][#3654-comment1] and [the next\none][#3654-comment2].\n\n[#3654]: https://github.com/Genymobile/scrcpy/issues/3654\n[#3654-comment1]: https://github.com/Genymobile/scrcpy/issues/3654#issuecomment-1369278232\n[#3654-comment2]: https://github.com/Genymobile/scrcpy/issues/3654#issuecomment-1369295011\n\n\n## Control issues\n\n### Mouse and keyboard do not work\n\nOn some devices, you may need to enable an option to allow [simulating input].\nIn developer options, enable:\n\n> **USB debugging (Security settings)**  \n> _Allow granting permissions and simulating input via USB debugging_\n\nRebooting the device is necessary once this option is set.\n\n[simulating input]: https://github.com/Genymobile/scrcpy/issues/70#issuecomment-373286323\n\n\n### Special characters do not work\n\nThe default text injection method is [limited to ASCII characters][text-input].\nA trick allows to also inject some [accented characters][accented-characters],\nbut that's all. See [#37].\n\nTo avoid the problem, [change the keyboard mode to simulate a physical\nkeyboard][hid].\n\n[text-input]: https://github.com/Genymobile/scrcpy/issues?q=is%3Aopen+is%3Aissue+label%3Aunicode\n[accented-characters]: https://blog.rom1v.com/2018/03/introducing-scrcpy/#handle-accented-characters\n[#37]: https://github.com/Genymobile/scrcpy/issues/37\n[hid]: doc/keyboard.md#physical-keyboard-simulation\n\n\n## Client issues\n\n### Issue with Wayland\n\nBy default, SDL uses x11 on Linux. The [video driver] can be changed via the\n`SDL_VIDEODRIVER` environment variable:\n\n[video driver]: https://wiki.libsdl.org/FAQUsingSDL#how_do_i_choose_a_specific_video_driver\n\n```bash\nexport SDL_VIDEODRIVER=wayland\nscrcpy\n```\n\nOn some distributions (at least Fedora), the package `libdecor` must be\ninstalled manually.\n\nSee issues [#2554] and [#2559].\n\n[#2554]: https://github.com/Genymobile/scrcpy/issues/2554\n[#2559]: https://github.com/Genymobile/scrcpy/issues/2559\n\n\n### KWin compositor crashes\n\nOn Plasma Desktop, compositor is disabled while _scrcpy_ is running.\n\nAs a workaround, [disable \"Block compositing\"][kwin].\n\n[kwin]: https://github.com/Genymobile/scrcpy/issues/114#issuecomment-378778613\n\n\n## Crashes\n\n### Exception\n\nIf you get any exception related to `MediaCodec`:\n\n```\nERROR: Exception on thread Thread[main,5,main]\njava.lang.IllegalStateException\n        at android.media.MediaCodec.native_dequeueOutputBuffer(Native Method)\n```\n\nthen try with another [encoder](doc/video.md#encoder).\n\n\n## Translations\n\nTranslations of this FAQ in other languages are available in the [wiki].\n\n[wiki]: https://github.com/Genymobile/scrcpy/wiki\n\nOnly this FAQ file is guaranteed to be up-to-date.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.1201171875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright (C) 2018 Genymobile\n   Copyright (C) 2018-2025 Romain Vimont\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.3203125,
          "content": "**This GitHub repo (<https://github.com/Genymobile/scrcpy>) is the only official\nsource for the project. Do not download releases from random websites, even if\ntheir name contains `scrcpy`.**\n\n# scrcpy (v3.1)\n\n<img src=\"app/data/icon.svg\" width=\"128\" height=\"128\" alt=\"scrcpy\" align=\"right\" />\n\n_pronounced \"**scr**een **c**o**py**\"_\n\nThis application mirrors Android devices (video and audio) connected via\nUSB or [over TCP/IP](doc/connection.md#tcpip-wireless), and allows to control the\ndevice with the keyboard and the mouse of the computer. It does not require any\n_root_ access. It works on _Linux_, _Windows_ and _macOS_.\n\n![screenshot](assets/screenshot-debian-600.jpg)\n\nIt focuses on:\n\n - **lightness**: native, displays only the device screen\n - **performance**: 30~120fps, depending on the device\n - **quality**: 1920×1080 or above\n - **low latency**: [35~70ms][lowlatency]\n - **low startup time**: ~1 second to display the first image\n - **non-intrusiveness**: nothing is left installed on the Android device\n - **user benefits**: no account, no ads, no internet required\n - **freedom**: free and open source software\n\n[lowlatency]: https://github.com/Genymobile/scrcpy/pull/646\n\nIts features include:\n - [audio forwarding](doc/audio.md) (Android 11+)\n - [recording](doc/recording.md)\n - [virtual display](doc/virtual_display.md)\n - mirroring with [Android device screen off](doc/device.md#turn-screen-off)\n - [copy-paste](doc/control.md#copy-paste) in both directions\n - [configurable quality](doc/video.md)\n - [camera mirroring](doc/camera.md) (Android 12+)\n - [mirroring as a webcam (V4L2)](doc/v4l2.md) (Linux-only)\n - physical [keyboard][hid-keyboard] and [mouse][hid-mouse] simulation (HID)\n - [gamepad](doc/gamepad.md) support\n - [OTG mode](doc/otg.md)\n - and more…\n\n[hid-keyboard]: doc/keyboard.md#physical-keyboard-simulation\n[hid-mouse]: doc/mouse.md#physical-mouse-simulation\n\n## Prerequisites\n\nThe Android device requires at least API 21 (Android 5.0).\n\n[Audio forwarding](doc/audio.md) is supported for API >= 30 (Android 11+).\n\nMake sure you [enabled USB debugging][enable-adb] on your device(s).\n\n[enable-adb]: https://developer.android.com/studio/debug/dev-options#enable\n\nOn some devices (especially Xiaomi), you might get the following error:\n\n```\njava.lang.SecurityException: Injecting input events requires the caller (or the source of the instrumentation, if any) to have the INJECT_EVENTS permission.\n```\n\nIn that case, you need to enable [an additional option][control] `USB debugging\n(Security Settings)` (this is an item different from `USB debugging`) to control\nit using a keyboard and mouse. Rebooting the device is necessary once this\noption is set.\n\n[control]: https://github.com/Genymobile/scrcpy/issues/70#issuecomment-373286323\n\nNote that USB debugging is not required to run scrcpy in [OTG mode](doc/otg.md).\n\n\n## Get the app\n\n - [Linux](doc/linux.md)\n - [Windows](doc/windows.md) (read [how to run](doc/windows.md#run))\n - [macOS](doc/macos.md)\n\n\n## Must-know tips\n\n - [Reducing resolution](doc/video.md#size) may greatly improve performance\n   (`scrcpy -m1024`)\n - [_Right-click_](doc/mouse.md#mouse-bindings) triggers `BACK`\n - [_Middle-click_](doc/mouse.md#mouse-bindings) triggers `HOME`\n - <kbd>Alt</kbd>+<kbd>f</kbd> toggles [fullscreen](doc/window.md#fullscreen)\n - There are many other [shortcuts](doc/shortcuts.md)\n\n\n## Usage examples\n\nThere are a lot of options, [documented](#user-documentation) in separate pages.\nHere are just some common examples.\n\n - Capture the screen in H.265 (better quality), limit the size to 1920, limit\n   the frame rate to 60fps, disable audio, and control the device by simulating\n   a physical keyboard:\n\n    ```bash\n    scrcpy --video-codec=h265 --max-size=1920 --max-fps=60 --no-audio --keyboard=uhid\n    scrcpy --video-codec=h265 -m1920 --max-fps=60 --no-audio -K  # short version\n    ```\n\n - Start VLC in a new virtual display (separate from the device display):\n\n    ```bash\n    scrcpy --new-display=1920x1080 --start-app=org.videolan.vlc\n    ```\n\n - Record the device camera in H.265 at 1920x1080 (and microphone) to an MP4\n   file:\n\n    ```bash\n    scrcpy --video-source=camera --video-codec=h265 --camera-size=1920x1080 --record=file.mp4\n    ```\n\n - Capture the device front camera and expose it as a webcam on the computer (on\n   Linux):\n\n    ```bash\n    scrcpy --video-source=camera --camera-size=1920x1080 --camera-facing=front --v4l2-sink=/dev/video2 --no-playback\n    ```\n\n - Control the device without mirroring by simulating a physical keyboard and\n   mouse (USB debugging not required):\n\n    ```bash\n    scrcpy --otg\n    ```\n\n - Control the device using gamepad controllers plugged into the computer:\n\n    ```bash\n    scrcpy --gamepad=uhid\n    scrcpy -G  # short version\n    ```\n\n## User documentation\n\nThe application provides a lot of features and configuration options. They are\ndocumented in the following pages:\n\n - [Connection](doc/connection.md)\n - [Video](doc/video.md)\n - [Audio](doc/audio.md)\n - [Control](doc/control.md)\n - [Keyboard](doc/keyboard.md)\n - [Mouse](doc/mouse.md)\n - [Gamepad](doc/gamepad.md)\n - [Device](doc/device.md)\n - [Window](doc/window.md)\n - [Recording](doc/recording.md)\n - [Virtual display](doc/virtual_display.md)\n - [Tunnels](doc/tunnels.md)\n - [OTG](doc/otg.md)\n - [Camera](doc/camera.md)\n - [Video4Linux](doc/v4l2.md)\n - [Shortcuts](doc/shortcuts.md)\n\n\n## Resources\n\n - [FAQ](FAQ.md)\n - [Translations][wiki] (not necessarily up to date)\n - [Build instructions](doc/build.md)\n - [Developers](doc/develop.md)\n\n[wiki]: https://github.com/Genymobile/scrcpy/wiki\n\n\n## Articles\n\n- [Introducing scrcpy][article-intro]\n- [Scrcpy now works wirelessly][article-tcpip]\n- [Scrcpy 2.0, with audio][article-scrcpy2]\n\n[article-intro]: https://blog.rom1v.com/2018/03/introducing-scrcpy/\n[article-tcpip]: https://www.genymotion.com/blog/open-source-project-scrcpy-now-works-wirelessly/\n[article-scrcpy2]: https://blog.rom1v.com/2023/03/scrcpy-2-0-with-audio/\n\n## Contact\n\nYou can open an [issue] for bug reports, feature requests or general questions.\n\nFor bug reports, please read the [FAQ](FAQ.md) first, you might find a solution\nto your problem immediately.\n\n[issue]: https://github.com/Genymobile/scrcpy/issues\n\nYou can also use:\n\n - Reddit: [`r/scrcpy`](https://www.reddit.com/r/scrcpy)\n - BlueSky: [`@scrcpy.bsky.social`](https://bsky.app/profile/scrcpy.bsky.social)\n - Twitter: [`@scrcpy_app`](https://twitter.com/scrcpy_app)\n\n\n## Donate\n\nI'm [@rom1v](https://github.com/rom1v), the author and maintainer of _scrcpy_.\n\nIf you appreciate this application, you can [support my open source\nwork][donate]:\n - [GitHub Sponsors](https://github.com/sponsors/rom1v)\n - [Liberapay](https://liberapay.com/rom1v/)\n - [PayPal](https://paypal.me/rom2v)\n\n[donate]: https://blog.rom1v.com/about/#support-my-open-source-work\n\n## Licence\n\n    Copyright (C) 2018 Genymobile\n    Copyright (C) 2018-2025 Romain Vimont\n\n    Licensed under the Apache License, Version 2.0 (the \"License\");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n        http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an \"AS IS\" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 0.560546875,
          "content": "// Top-level build file where you can add configuration options common to all sub-projects/modules.\n\nbuildscript {\n\n    repositories {\n        google()\n        mavenCentral()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:8.7.1'\n\n        // NOTE: Do not place your application dependencies here; they belong\n        // in the individual module build.gradle files\n    }\n}\n\nallprojects {\n    repositories {\n        google()\n        mavenCentral()\n    }\n    tasks.withType(JavaCompile) {\n        options.compilerArgs << \"-Xlint:deprecation\"\n    }\n}\n"
        },
        {
          "name": "bump_version",
          "type": "blob",
          "size": 0.9130859375,
          "content": "#!/usr/bin/env bash\n#\n# This script bump scrcpy version by editing all the necessary files.\n#\n# Usage:\n#\n#     ./bump_version 1.23.4\n#\n# Then check the diff manually to confirm that everything is ok.\n\nset -e\n\nif [[ $# != 1 ]]\nthen\n    echo \"Syntax: $0 <version>\" >&2\n    exit 1\nfi\n\nVERSION=\"$1\"\n\na=( ${VERSION//./ } )\nMAJOR=\"${a[0]:-0}\"\nMINOR=\"${a[1]:-0}\"\nPATCH=\"${a[2]:-0}\"\n\n# If VERSION is 1.23.4, then VERSION_CODE is 12304\nVERSION_CODE=\"$(( $MAJOR * 10000 + $MINOR * 100 + \"$PATCH\" ))\"\n\necho \"$VERSION: major=$MAJOR minor=$MINOR patch=$PATCH [versionCode=$VERSION_CODE]\"\nsed -i \"s/^\\(\\s*version: \\)'[^']*'/\\1'$VERSION'/\" meson.build\nsed -i \"s/^\\(\\s*versionCode \\).*/\\1$VERSION_CODE/;s/^\\(\\s*versionName \\).*/\\1\\\"$VERSION\\\"/\" server/build.gradle\nsed -i \"s/^\\(SCRCPY_VERSION_NAME=\\).*/\\1$VERSION/\" server/build_without_gradle.sh\nsed -i \"s/^\\(\\s*VALUE \\\"ProductVersion\\\", \\)\\\"[^\\\"]*\\\"/\\1\\\"$VERSION\\\"/\" app/scrcpy-windows.rc\necho done\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "cross_win32.txt",
          "type": "blob",
          "size": 0.33984375,
          "content": "# apt install mingw-w64 mingw-w64-tools\n\n[binaries]\nname = 'mingw'\nc = 'i686-w64-mingw32-gcc'\ncpp = 'i686-w64-mingw32-g++'\nar = 'i686-w64-mingw32-ar'\nstrip = 'i686-w64-mingw32-strip'\npkg-config = 'i686-w64-mingw32-pkg-config'\nwindres = 'i686-w64-mingw32-windres'\n\n[host_machine]\nsystem = 'windows'\ncpu_family = 'x86'\ncpu = 'i686'\nendian = 'little'\n"
        },
        {
          "name": "cross_win64.txt",
          "type": "blob",
          "size": 0.353515625,
          "content": "# apt install mingw-w64 mingw-w64-tools\n\n[binaries]\nname = 'mingw'\nc = 'x86_64-w64-mingw32-gcc'\ncpp = 'x86_64-w64-mingw32-g++'\nar = 'x86_64-w64-mingw32-ar'\nstrip = 'x86_64-w64-mingw32-strip'\npkg-config = 'x86_64-w64-mingw32-pkg-config'\nwindres = 'x86_64-w64-mingw32-windres'\n\n[host_machine]\nsystem = 'windows'\ncpu_family = 'x86'\ncpu = 'x86_64'\nendian = 'little'\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 0.7138671875,
          "content": "# Project-wide Gradle settings.\n\n# IDE (e.g. Android Studio) users:\n# Gradle settings configured through the IDE *will override*\n# any settings specified in this file.\n\n# For more details on how to configure your build environment visit\n# http://www.gradle.org/docs/current/userguide/build_environment.html\n\n# Specifies the JVM arguments used for the daemon process.\n# The setting is particularly useful for tweaking memory settings.\norg.gradle.jvmargs=-Xmx1536m\n\n# When configured, Gradle will run in incubating parallel mode.\n# This option should only be used with decoupled projects. More details, visit\n# http://www.gradle.org/docs/current/userguide/multi_project_builds.html#sec:decoupled_projects\n# org.gradle.parallel=true\n\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 5.62890625,
          "content": "#!/usr/bin/env sh\n\n#\n# Copyright 2015 the original author or authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n##############################################################################\n##\n##  Gradle start up script for UN*X\n##\n##############################################################################\n\n# Attempt to set APP_HOME\n# Resolve links: $0 may be a link\nPRG=\"$0\"\n# Need this for relative symlinks.\nwhile [ -h \"$PRG\" ] ; do\n    ls=`ls -ld \"$PRG\"`\n    link=`expr \"$ls\" : '.*-> \\(.*\\)$'`\n    if expr \"$link\" : '/.*' > /dev/null; then\n        PRG=\"$link\"\n    else\n        PRG=`dirname \"$PRG\"`\"/$link\"\n    fi\ndone\nSAVED=\"`pwd`\"\ncd \"`dirname \\\"$PRG\\\"`/\" >/dev/null\nAPP_HOME=\"`pwd -P`\"\ncd \"$SAVED\" >/dev/null\n\nAPP_NAME=\"Gradle\"\nAPP_BASE_NAME=`basename \"$0\"`\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=\"maximum\"\n\nwarn () {\n    echo \"$*\"\n}\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n}\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"`uname`\" in\n  CYGWIN* )\n    cygwin=true\n    ;;\n  Darwin* )\n    darwin=true\n    ;;\n  MINGW* )\n    msys=true\n    ;;\n  NONSTOP* )\n    nonstop=true\n    ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=\"$JAVA_HOME/jre/sh/java\"\n    else\n        JAVACMD=\"$JAVA_HOME/bin/java\"\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=\"java\"\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif [ \"$cygwin\" = \"false\" -a \"$darwin\" = \"false\" -a \"$nonstop\" = \"false\" ] ; then\n    MAX_FD_LIMIT=`ulimit -H -n`\n    if [ $? -eq 0 ] ; then\n        if [ \"$MAX_FD\" = \"maximum\" -o \"$MAX_FD\" = \"max\" ] ; then\n            MAX_FD=\"$MAX_FD_LIMIT\"\n        fi\n        ulimit -n $MAX_FD\n        if [ $? -ne 0 ] ; then\n            warn \"Could not set maximum file descriptor limit: $MAX_FD\"\n        fi\n    else\n        warn \"Could not query maximum file descriptor limit: $MAX_FD_LIMIT\"\n    fi\nfi\n\n# For Darwin, add options to specify how the application appears in the dock\nif $darwin; then\n    GRADLE_OPTS=\"$GRADLE_OPTS \\\"-Xdock:name=$APP_NAME\\\" \\\"-Xdock:icon=$APP_HOME/media/gradle.icns\\\"\"\nfi\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif [ \"$cygwin\" = \"true\" -o \"$msys\" = \"true\" ] ; then\n    APP_HOME=`cygpath --path --mixed \"$APP_HOME\"`\n    CLASSPATH=`cygpath --path --mixed \"$CLASSPATH\"`\n    JAVACMD=`cygpath --unix \"$JAVACMD\"`\n\n    # We build the pattern for arguments to be converted via cygpath\n    ROOTDIRSRAW=`find -L / -maxdepth 1 -mindepth 1 -type d 2>/dev/null`\n    SEP=\"\"\n    for dir in $ROOTDIRSRAW ; do\n        ROOTDIRS=\"$ROOTDIRS$SEP$dir\"\n        SEP=\"|\"\n    done\n    OURCYGPATTERN=\"(^($ROOTDIRS))\"\n    # Add a user-defined pattern to the cygpath arguments\n    if [ \"$GRADLE_CYGPATTERN\" != \"\" ] ; then\n        OURCYGPATTERN=\"$OURCYGPATTERN|($GRADLE_CYGPATTERN)\"\n    fi\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    i=0\n    for arg in \"$@\" ; do\n        CHECK=`echo \"$arg\"|egrep -c \"$OURCYGPATTERN\" -`\n        CHECK2=`echo \"$arg\"|egrep -c \"^-\"`                                 ### Determine if an option\n\n        if [ $CHECK -ne 0 ] && [ $CHECK2 -eq 0 ] ; then                    ### Added a condition\n            eval `echo args$i`=`cygpath --path --ignore --mixed \"$arg\"`\n        else\n            eval `echo args$i`=\"\\\"$arg\\\"\"\n        fi\n        i=`expr $i + 1`\n    done\n    case $i in\n        0) set -- ;;\n        1) set -- \"$args0\" ;;\n        2) set -- \"$args0\" \"$args1\" ;;\n        3) set -- \"$args0\" \"$args1\" \"$args2\" ;;\n        4) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" ;;\n        5) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" ;;\n        6) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" ;;\n        7) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" ;;\n        8) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" ;;\n        9) set -- \"$args0\" \"$args1\" \"$args2\" \"$args3\" \"$args4\" \"$args5\" \"$args6\" \"$args7\" \"$args8\" ;;\n    esac\nfi\n\n# Escape application args\nsave () {\n    for i do printf %s\\\\n \"$i\" | sed \"s/'/'\\\\\\\\''/g;1s/^/'/;\\$s/\\$/' \\\\\\\\/\" ; done\n    echo \" \"\n}\nAPP_ARGS=`save \"$@\"`\n\n# Collect all arguments for the java command, following the shell quoting and substitution rules\neval set -- $DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS \"\\\"-Dorg.gradle.appname=$APP_BASE_NAME\\\"\" -classpath \"\\\"$CLASSPATH\\\"\" org.gradle.wrapper.GradleWrapperMain \"$APP_ARGS\"\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.984375,
          "content": "@rem\r\n@rem Copyright 2015 the original author or authors.\r\n@rem\r\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\r\n@rem you may not use this file except in compliance with the License.\r\n@rem You may obtain a copy of the License at\r\n@rem\r\n@rem      https://www.apache.org/licenses/LICENSE-2.0\r\n@rem\r\n@rem Unless required by applicable law or agreed to in writing, software\r\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\r\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n@rem See the License for the specific language governing permissions and\r\n@rem limitations under the License.\r\n@rem\r\n\r\n@if \"%DEBUG%\" == \"\" @echo off\r\n@rem ##########################################################################\r\n@rem\r\n@rem  Gradle startup script for Windows\r\n@rem\r\n@rem ##########################################################################\r\n\r\n@rem Set local scope for the variables with windows NT shell\r\nif \"%OS%\"==\"Windows_NT\" setlocal\r\n\r\nset DIRNAME=%~dp0\r\nif \"%DIRNAME%\" == \"\" set DIRNAME=.\r\nset APP_BASE_NAME=%~n0\r\nset APP_HOME=%DIRNAME%\r\n\r\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\r\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\r\n\r\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\r\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\r\n\r\n@rem Find java.exe\r\nif defined JAVA_HOME goto findJavaFromJavaHome\r\n\r\nset JAVA_EXE=java.exe\r\n%JAVA_EXE% -version >NUL 2>&1\r\nif \"%ERRORLEVEL%\" == \"0\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:findJavaFromJavaHome\r\nset JAVA_HOME=%JAVA_HOME:\"=%\r\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\r\n\r\nif exist \"%JAVA_EXE%\" goto init\r\n\r\necho.\r\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\r\necho.\r\necho Please set the JAVA_HOME variable in your environment to match the\r\necho location of your Java installation.\r\n\r\ngoto fail\r\n\r\n:init\r\n@rem Get command-line arguments, handling Windows variants\r\n\r\nif not \"%OS%\" == \"Windows_NT\" goto win9xME_args\r\n\r\n:win9xME_args\r\n@rem Slurp the command line arguments.\r\nset CMD_LINE_ARGS=\r\nset _SKIP=2\r\n\r\n:win9xME_args_slurp\r\nif \"x%~1\" == \"x\" goto execute\r\n\r\nset CMD_LINE_ARGS=%*\r\n\r\n:execute\r\n@rem Setup the command line\r\n\r\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\r\n\r\n@rem Execute Gradle\r\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%\r\n\r\n:end\r\n@rem End local scope for the variables with windows NT shell\r\nif \"%ERRORLEVEL%\"==\"0\" goto mainEnd\r\n\r\n:fail\r\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\r\nrem the _cmd.exe /c_ return code!\r\nif  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\r\nexit /b 1\r\n\r\n:mainEnd\r\nif \"%OS%\"==\"Windows_NT\" endlocal\r\n\r\n:omega\r\n"
        },
        {
          "name": "install_release.sh",
          "type": "blob",
          "size": 0.6591796875,
          "content": "#!/usr/bin/env bash\nset -e\n\nBUILDDIR=build-auto\nPREBUILT_SERVER_URL=https://github.com/Genymobile/scrcpy/releases/download/v3.1/scrcpy-server-v3.1\nPREBUILT_SERVER_SHA256=958f0944a62f23b1f33a16e9eb14844c1a04b882ca175a738c16d23cb22b86c0\n\necho \"[scrcpy] Downloading prebuilt server...\"\nwget \"$PREBUILT_SERVER_URL\" -O scrcpy-server\necho \"[scrcpy] Verifying prebuilt server...\"\necho \"$PREBUILT_SERVER_SHA256  scrcpy-server\" | sha256sum --check\n\necho \"[scrcpy] Building client...\"\nrm -rf \"$BUILDDIR\"\nmeson setup \"$BUILDDIR\" --buildtype=release --strip -Db_lto=true \\\n    -Dprebuilt_server=scrcpy-server\ncd \"$BUILDDIR\"\nninja\n\necho \"[scrcpy] Installing (sudo)...\"\nsudo ninja install\n"
        },
        {
          "name": "meson.build",
          "type": "blob",
          "size": 0.376953125,
          "content": "project('scrcpy', 'c',\n        version: '3.1',\n        meson_version: '>= 0.48',\n        default_options: [\n            'c_std=c11',\n            'warning_level=2',\n            'b_ndebug=if-release',\n        ])\n\nadd_project_arguments('-Wmissing-prototypes', language: 'c')\n\nif get_option('compile_app')\n    subdir('app')\nendif\n\nif get_option('compile_server')\n    subdir('server')\nendif\n"
        },
        {
          "name": "meson_options.txt",
          "type": "blob",
          "size": 0.7880859375,
          "content": "option('compile_app', type: 'boolean', value: true, description: 'Build the client')\noption('compile_server', type: 'boolean', value: true, description: 'Build the server')\noption('prebuilt_server', type: 'string', description: 'Path of the prebuilt server')\noption('portable', type: 'boolean', value: false, description: 'Use scrcpy-server from the same directory as the scrcpy executable')\noption('static', type: 'boolean', value: false, description: 'Use static dependencies')\noption('server_debugger', type: 'boolean', value: false, description: 'Run a server debugger and wait for a client to be attached')\noption('v4l2', type: 'boolean', value: true, description: 'Enable V4L2 feature when supported')\noption('usb', type: 'boolean', value: true, description: 'Enable HID/OTG features when supported')\n"
        },
        {
          "name": "release",
          "type": "tree",
          "content": null
        },
        {
          "name": "run",
          "type": "blob",
          "size": 0.548828125,
          "content": "#!/usr/bin/env bash\n# Run scrcpy generated in the specified BUILDDIR.\n#\n# This provides the same feature as \"ninja run\", except that it is possible to\n# pass arguments to scrcpy.\n#\n# Syntax: ./run BUILDDIR <scrcpy options ...>\nif [[ $# = 0 ]]\nthen\n    echo \"Syntax: $0 BUILDDIR <scrcpy options>\" >&2\n    exit 1\nfi\n\nBUILDDIR=\"$1\"\nshift\n\nif [[ ! -d \"$BUILDDIR\" ]]\nthen\n    echo \"The build dir \\\"$BUILDDIR\\\" does not exist.\" >&2\n    exit 1\nfi\n\nSCRCPY_ICON_PATH=\"app/data/icon.png\" \\\nSCRCPY_SERVER_PATH=\"$BUILDDIR/server/scrcpy-server\" \\\n\"$BUILDDIR/app/scrcpy\" \"$@\"\n"
        },
        {
          "name": "server",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 0.017578125,
          "content": "include ':server'\n"
        }
      ]
    }
  ]
}