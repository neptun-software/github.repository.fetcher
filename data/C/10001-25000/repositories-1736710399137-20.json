{
  "metadata": {
    "timestamp": 1736710399137,
    "page": 20,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "allinurl/goaccess",
      "stars": 18847,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".codespellrc",
          "type": "blob",
          "size": 0.2138671875,
          "content": "[codespell]\nskip=./.git,./po,./resources/js/*.min.js,./resources/css/*.min.css\ncheck-hidden=\ncheck-filenames=\nbuiltin=clear,rare,informal,usage,code,names\nignore-words-list=master,thead,referer,cros,hastable,musl,stdio\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.451171875,
          "content": "#custom section\nconfig.status\nconfig.guess\nconfig.sub\nconfig.rpath\nconfigure~\n**/.deps/\n/INSTALL\n/Makefile\nsrc/.dirstamp\nsrc/config.h\nsrc/config.h.in\nsrc/config.h.in~\nsrc/config.log\nsrc/config.status\nsrc/.deps/\nsrc/stamp-h1\ngoaccess\nbin2c\n# font selection\nselection.json\n#merged from https://raw.github.com/github/gitignore/master/Autotools.gitignore\n# http://www.gnu.org/software/automake\n\nMakefile.in\n\n# http://www.gnu.org/software/autoconf\n\n/autom4te.cache\n/aclocal.m4\n/compile\n/configure\n/depcomp\n/install-sh\n/missing\n\n# VIM\n*.*.swp\n*.log\n\n# Object files\n*.o\n*.ko\n*.obj\n*.elf\n\n# Precompiled Headers\n*.gch\n*.pch\n\n# Libraries\n*.lib\n*.a\n*.la\n*.lo\n\n# Shared objects (inc. Windows DLLs)\n*.dll\n*.so\n*.so.*\n*.dylib\n\n# Executables\n*.exe\n*.out\n*.app\n*.i*86\n*.x86_64\n*.hex\n\n# Vagrant\n.vagrant\n\n# M4 macros\n/m4/*\n\n# I18n stuff\n/ABOUT-NLS\n/po/*.gmo\n/po/*.header\n/po/*.mo\n/po/*.sed\n/po/*.sin\n/po/Makefile.in.in\n/po/Makevars.template\n/po/POTFILES\n/po/Rules-quot\n/po/Makefile\n/po/stamp-po\n\n# compiled resources\n/src/appcss.h\n/src/appjs.h\n/src/bootstrapcss.h\n/src/chartsjs.h\n/src/d3js.h\n/src/facss.h\n/src/hoganjs.h\n/src/tpls.h\n/src/countries110m.h\n/src/topojsonjs.h\n\n# intermediate resources\n/resources/css/app.css.tmp\n/resources/css/bootstrap.min.css.tmp\n/resources/css/fa.min.css.tmp\n/resources/js/app.js.tmp\n/resources/js/charts.js.tmp\n/resources/js/d3.v?.min.js.tmp\n/resources/js/hogan.min.js.tmp\n/resources/tpls.html.tmp\n/resources/countries-110m.json.tmp\n/resources/js/topojson.v3.min.js.tmp\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 6.4384765625,
          "content": "GoAccess was designed and developed by Gerardo Orellana <goaccess@prosoftcorp.com>\n\nSpecial thanks to the following individuals for their great contributions:\n\n  * 0bi-w6n-K3nobi <71027865+0bi-w6n-K3nob@users.noreply.github.com>\n  * Aaditya Bagga <noreply@github.com>\n  * abgit <francisco.j.azevedo@gmail.com>\n  * Adam Monsen <haircut@gmail.com>\n  * Adam Števko <adam.stevko@gmail.com>\n  * Adam Weinberger <adamw@adamw.org>\n  * Adrian <totcha@gazeta.pl>\n  * aishikoyo <aixxx033@umn.edu>\n  * Alan Placidina <noreply@github.com>\n  * Alexander Eifler <noreply@github.com>\n  * Alexandre GUIOT--VALENTIN <contact@alexandregv.fr>\n  * Alexandre Perrin <noreply@github.com>\n  * Amos Hayes <ahayes@gcrc.carleton.ca>\n  * A. Nackov <anackov@gmail.com>\n  * Anders Johansson <47452862+tellustheguru@users.noreply.github.com>\n  * Andreas Sommer <andreas.sommer@ppro.com>\n  * Andreas Weigel <andreaswe@securepoint.de>\n  * Andrew Kvalheim <Andrew@Kvalhe.im>\n  * Andrew Minion <andrew@andrewrminion.com>\n  * Antonio Terceiro <terceiro@softwarelivre.org>\n  * Arnaud Rebillout <elboulangero@gmail.com>\n  * Arnie97 <arnie97@gmail.com>\n  * as0n <n.was.here@gmail.com>\n  * Aslak Raanes <noreply@github.com>\n  * Axel Wehner <mail@axelwehner.de>\n  * bbbboom <bwdyxg@gmail.com>\n  * Bbertatum <bertrand@2backup.fr>\n  * Benjamin Bach <benjamin@overtag.dk>\n  * Bjørnar Hansen <noreply@github.com>\n  * Bob Black <git@riblack.com>\n  * Bo Cai <charpty@gmail.com>\n  * Brandon Coleman <metrix1978@gmail.com>\n  * Carlos Duelo <noreply@github.com>\n  * Celso Providelo <celso.providelo@gmail.com>\n  * ChangMo Yang <dcyang@unist.ac.kr>\n  * Chang Zhao <noreply@github.com>\n  * Chilledheart <rwindz0@gmail.com>\n  * Chris Downs <noreply@github.com>\n  * Christian Göttsche <cgzones@googlemail.com>\n  * Christian Hermann <c.hermann@bitbeans.de>\n  * Christian Moelders <christian.moelders@storeplus.de>\n  * Christopher Meng <i@cicku.me>\n  * Clément Hermann <nodens@nodens.org>\n  * cristianpb <felipebrokate@gmail.com>\n  * Cthulhux <github@tuxproject.de>\n  * Daniel Aleksandersen <code@daniel.priv.no>\n  * Daniel Aleksandersen <noreply@github.com>\n  * Daniel (dmilith) Dettlaff <dmilith@me.com>\n  * Danila Vershinin <noreply@github.com>\n  * Danny Kirkham <danny@kirkham.dev>\n  * Darek Kay <hello@darekkay.com>\n  * David Carlier <devnexen@gmail.com>\n  * David Geistert <d3f3kt@scripts4u.net>\n  * d_dandrew <dragonandy@foxmail.com>\n  * ElXreno <elxreno@gmail.com>\n  * Enrique Becerra <kabeza@gmail.com>\n  * evitalis <evitalis@users.noreply.github.com>\n  * Felix Häberle <34959078+felixhaeberle@users.noreply.github.com>\n  * Florian Forster <ff@octo.it>\n  * forDream <noreply@github.com>\n  * fqbuild <fqbuild@FutureQuest.net>\n  * Frederic Cambus <fcambus@users.sourceforge.net>\n  * gemmaro <gemmaro.dev@gmail.com>\n  * Genki Sugawara <sugawara@cookpad.com>\n  * Gerald Combs <gerald@zing.org>\n  * Geraldo Alves <junior.alves.2007@gmail.com>\n  * gitqlt <noreply@github.com>\n  * Hiroki Kamino <46459949+err931@users.noreply.github.com>\n  * holys <chendahui007@gmail.com>\n  * Izzy <izzy@qumran.org>\n  * JackDesBwa <jackdesbwa@gmail.com>\n  * Jannes Blobel <72493222+jannesblobel@users.noreply.github.com>\n  * Jeffery Wilkins <goaccess@prosoftcorp.com>\n  * Jeremy Burks <jeremy@zomgwat.com>\n  * Jeremy Lin <jeremy.lin@gmail.com>\n  * Joaquín de la Zerda <joaquin@itbaf.com>\n  * Joe Groocock <me@frebib.net>\n  * Joe Winett <noreply@github.com>\n  * Jonas Kittner <jonas.kittner@rub.de>\n  * Joona <joona.paivahonka@gmail.com>\n  * Jordan Trask <jtrask@gmail.com>\n  * Julian Xhokaxhiu <xhokaxhiujulian@gmail.com>\n  * Justin Mills <justin.mills@utah.edu>\n  * Kamino Hiroki <37243867+4f8p@users.noreply.github.com>\n  * Kit Westneat <kit.westneat@gmail.com>\n  * kokke <spam@rowdy.dk>\n  * kyle sloan <kyle@ifsight.com>\n  * LeoAttn <leo.massonnat@hotmail.fr>\n  * Magnus Groß <magnus@mggross.com>\n  * Maksim Losev <mlosev@beget.ru>\n  * mario-donnarumma <mario.donnarumma.97@gmail.com>\n  * markiewb <noreply@github.com>\n  * Mark J. Berger <mark.berger.j@gmail.com>\n  * Martins Polakovs <martins.polakovs@gmail.com>\n  * Massimiliano Torromeo <massimiliano.torromeo@gmail.com>\n  * Mathieu Aubin <noreply@github.com>\n  * Mathieu Thoretton <mathieu.thoretton@getyourguide.com>\n  * Max Christian Pohle <goaccess@prosoftcorp.com>\n  * metrix78 <metrix1978@gmail.com>\n  * Michael Vetter <jubalh@iodoru.org>\n  * Mika Raunio <mika@diago.global>\n  * Moritz Schott <unsafe@nurfuerspam.de>\n  * m-r-r <raybaudroigm@gmail.com>\n  * mynameiscfed <christopherfederico@gmail.com>\n  * Newbe36524 <newbe36524@qq.com>\n  * Nicolas Le Manchet <nicolas@lemanchet.fr>\n  * Nicolas <noreply@github.com>\n  * Ophir LOJKINE <pere.jobs@gmail.com>\n  * Otto Kekäläinen <otto.kekalainen@seravo.fi>\n  * Panos Stavrianos <panos-stavrianos@users.noreply.github.com>\n  * pitilux <pitilux@elinar.fr>\n  * Pixelcode <52963327+realpixelcode@users.noreply.github.com>\n  * Placidina <alanplacidina@gmail.com>\n  * pravdomil <noreply@github.com>\n  * rachid-debu <rachid.debu@yahoo.fr>\n  * radoslawc <radoslawc@gmail.com>\n  * rahra <bf@abenteuerland.at>\n  * Ramires Viana <59319979+ramiresviana@users.noreply.github.com>\n  * rgriebl <robert@griebl.org>\n  * Roy Marples <roy@marples.name>\n  * rtmkrlv <artyom.karlov@gmail.com>\n  * Ryow <ryow@midgen.asia>\n  * schoonc <noreply@github.com>\n  * Sean Cross <sean@xobs.io>\n  * Sean Wei <me@sean.taipei>\n  * Sebastian Wiedenroth <wiedi@frubar.net>\n  * Simon Gardling <Titaniumtown@gmail.com>\n  * SjonHortensius <noreply@github.com>\n  * Steely Wing <noreply@github.com>\n  * Stéphane Péchard <stephanepechard@gmail.com>\n  * Stephen Wade <stephen@stephenwade.me>\n  * Stoyan Dimov <s.dimov@codelogic.eu>\n  * Stuart Henderson <noreply@github.com>\n  * Sveinbjorn Thordarson <sveinbjorn@sveinbjorn.org>\n  * Tatsuyuki Ishi <noreply@github.com>\n  * Thomas Gläßle <t_glaessle@gmx.de>\n  * Thomas Jost <schnouki@schnouki.net>\n  * Thomas Lange <code@nerdmind.de>\n  * throwaway1037 <noreply@github.com>\n  * Tim Gates <tim.gates@iress.com>\n  * Timothy Quilling <teqed@shatteredsky.net>\n  * Tom Samstag <github@modtwo.com>\n  * ugola <urvika.gola@gmail.com>\n  * Ulrich Schwarz <ulmi@absatzen.de>\n  * Viktor Szépe <noreply@github.com>\n  * Viktor Szépe <viktor@szepe.net>\n  * Ville Skyttä <ville.skytta@iki.fi>\n  * Vincent Bernat <vincent@bernat.ch>\n  * Vladimir Pavljuchenkov <spiderx@spiderx.dp.ua>\n  * William Muir <wamuir@gmail.com>\n  * Wladimir Palant <noreply@github.com>\n  * wodev <wodev@fischer-net.net>\n  * woobee <support.developpement@gmail.com>\n  * Yuri D'Elia <wavexx@thregr.org>\n  * Yuriy M. Kaminskiy <yumkam@gmail.com>\n  * zeke <zhenkai0605@gmail.com>\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 1.083984375,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2009-2022 Gerardo Orellana <hello @ goaccess.io>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "ChangeLog",
          "type": "blob",
          "size": 58.3916015625,
          "content": "Changes to GoAccess 1.9.3 - Friday, May 31, 2024\n\n  - Added additional common bots to the list.\n  - Added Address Sanitizer via '--enable-asan' to the configure options for\n    debugging purposes.\n  - Fixed inability to parse JSON keys containing dots.\n  - Fixed out-of-bounds access for invalid HTTP status codes.\n  - Fixed out-of-bounds access when parsing a log in serial processing mode.\n  - Fixed regression introduced in 8f570c, which caused duplicate counts upon\n    restoring from disk via '--restore'.\n\nChanges to GoAccess 1.9.2 - Friday, April 12, 2024\n\n  - Added World Map to the Geo Location panel on the HTML report.\n  - Added additional non-official/standard HTTP status codes such as Caddy's 0\n    HTTP status among others.\n  - Added support for '%z' on strptime for non-glibc systems, such as musl libc\n    in Alpine Linux (Docker container), enabling the use of '--tz'\n  - Changed the '--hide/ignore-referrer' options to filter by hostname directly\n    without the use of wildcards, e.g., '--ignore-referrer=wiki.google.com'.\n  - Fixed inability to parse duplicate specifiers during log format parsing.\n  - Fixed regression which previously hindered the ability to modify log, date,\n    and time formats within the TUI dialog. i.e., '# goaccess access.log -c'.\n  - Replaced 'remote_ip' with 'client_ip' for Caddy's JSON format, allowing the\n    use of trusted proxies.\n  - Updated Caddy JSON example log format to handle headers correctly.\n  - Updated Swedish i18n.\n\nChanges to GoAccess 1.9.1 - Tuesday, February 05, 2024\n\n  - Added support for macOS to the OS detection.\n  - Fixed C99 mode issue with initial declarations [CentOS7].\n  - Fixed minor typographical, orthographic, and grammatical errors in the\n    German translation.\n  - Fixed a regression issue wherein parsing would halt at the first empty log\n    file.\n\nChanges to GoAccess 1.9 - Tuesday, January 30, 2024\n\n  - Added multi-threaded log processing with '--jobs=<num>' for a boost in\n    parsing speed, achieving an improvement ranging from 1.26 to 3.65x faster.\n  - Added the 'SEARCH' method to the list of HTTP request methods.\n  - Added compatibility to include the Traefik log format.\n  - Added the ability to gracefully handle SIGQUIT as a signal for shutdown.\n  - Altered WebSocket server initialization, ensuring it takes place after\n    log-format checks.\n  - Deprecated '--output-format'; now, only the '--output' option is\n    permissible.\n  - Implemented mutex locking to prevent a TZ environment race condition.\n  - Fixed a potential heap overflow when checking a request for bots.\n  - Fixed sorting of child items on HTML panels when sorting a column via the\n    UI.\n  - Fixed an issue where, in some cases, the referer host wouldn't be extracted\n    properly\n  - Fixed the miscategorization of Android 12.1 under operating systems.\n  - Fixed TUI and temporarily ignored SIGINT during subdialog execution via\n    Ctrl+C.\n  - Updated the list of browsers/bots.\n\nChanges to GoAccess 1.8.1 - Tuesday, October 31, 2023\n\n  - Added latest Android and macOS versions to the list of OSs.\n  - Fixed issue when trying to apply a regex on an invalid value (HTML report).\n  - Fixed issue with D3.js xScale.domain() going out of boundaries in certain\n    cases.\n  - Prevent setting default static files when no static-file options are\n    defined in config file.\n\nChanges to GoAccess 1.8 - Saturday, September 30, 2023\n\n  - Added dual-stack support to the WebSocket server.\n  - Added Debian Bookworm to the official deb repo.\n  - Added Ubuntu Lunar to the official deb repo.\n  - Fixed compiler error on macOS 10.12.\n  - Updated bootstrap to v3.4.\n  - Updated FontAwesome with additional icons for upcoming major release.\n  - Updated Japanese translation.\n  - Updated OS display from Macintosh to macOS.\n  - Updated to D3.js v7 (latest) including charts.js code.\n\nChanges to GoAccess 1.7.2 - Friday, March 31, 2023\n\n  - Added a color-coding scheme to HTTP status codes.\n  - Added '--external-assets' command line option to output external JS+CSS\n    files. Great when used with Content Security Policy (CSP).\n  - Ensure there's a fallback for 'Windows' if it appears on the user-agent.\n  - Ensure we construct the WebSocket URL in a way that supports multiple use\n    cases when used along '--ws-url' and '--port'.\n  - Fixed a segfault due to a null pointer exception on FreeBSD.\n  - Fixed build with '--disable-nls'.\n  - Fixed invalid read (heap-buffer-overflow) when parsing an XFF spec via\n    JSON.\n  - Fixed segfault when parsing a specific XFF specifier.\n\nChanges to GoAccess 1.7.1 - Tuesday, February 28, 2023\n\n  - Added 'inlang' for easy localization (i18n) updates.\n    https://inlang.com/editor/github.com/allinurl/goaccess\n  - Added nanosecond parsing option via the '%n' specifier. Great for parsing\n    'Traefik' JSON logs duration field.\n  - Changed Docker workflow to build a docker image on different architectures\n    {'arm64' & 'amd64'}.\n  - Fixed issue with '--unknowns-as-crawlers' where it did not process them as\n    such.\n\nChanges to GoAccess 1.7 - Saturday, December 31, 2022\n\n  - Added an option to classify unknown OS and browsers as crawlers using\n    `--unknowns-as-crawlers`.\n  - Added highlighting to certain metrics on the HTML report for readability.\n  - Added a new panel that displays ASN data for GeoIP2 and legacy databases.\n    Great for detecting malicious traffic and blocking accordingly.\n  - Added an ASN metric per IP/host.\n  - Changed and prioritize user's browsers list over heuristics.\n  - Ensure `--geoip-database=<path>` can be used multiple times to support\n    different databases.\n  - Fixed invalid read when loading the list of agents for an IP.\n  - Fixed issue where a file containing a NUL `\\0` character would crash the\n    program.\n  - Updated Swedish i18n.\n\nChanges to GoAccess 1.6.5 - Monday, October 31, 2022\n\n  - Updated Dockerfile build stage to use alpine:3.\n  - Updated deb build to use the right libncursesw6 dependency.\n\nChanges to GoAccess 1.6.4 - Friday, September 30, 2022\n\n  - Added Korean translation (i18n).\n  - Added the ability to use filenames as virtualhosts using\n    '--fname-as-vhost=<regex>'.\n  - Enabled crawlers/bots under the OSs panel instead of being shown as\n    'Unknown'.\n  - Updated the format on the command-line help output.\n\nChanges to GoAccess 1.6.3 - Thursday, August 31, 2022\n\n  - Enabled DNS thread when resolving a host and outputting real-time HTML.\n    This helps avoid stalling the WS server on busy connections.\n  - Fixed issue where it would not properly parse an XFF if the '%h' specifier\n    was already set.\n  - Fixed possible XSS issues when using '--html-custom-css' and\n    '--html-custom-js' by allowing valid filenames.\n\nChanges to GoAccess 1.6.2 - Thursday, July 14, 2022\n\n  - Added `Android 12` to the list of OSs.\n  - Added `macOS 12 Ventura` to the list of OSs.\n  - Fixed implicit declaration build issue due to `timegm(3)` on `BSDs` and `macOS`.\n  - Fixed issue where timezone conversion would be performed twice on a given\n    date.\n\nChanges to GoAccess 1.6.1 - Thursday, June 30, 2022\n\n  - Added a `--ping-interval=<secs>` in an attempt to keep the WebSocket\n    connection opened.\n  - Added support for timezone conversion via `--datetime-format=<format>` and\n    `--tz=<timezone>`.\n  - Added the ability to reconnect to the WebSocket server after 1 sec with\n    exponential backoff (x20).\n  - Fixed issue where an invalid client connection would stall data out to\n    clients via the WebSocket server.\n  - Fixed an issue where real-time data would be parsed multiple times under `Cygwin`.\n\nChanges to GoAccess 1.6 - Tuesday, May 31, 2022\n\n  - Changed slightly how the XFF field is specified. See man page for details.\n  - Ensure city is displayed with the DBIP City Lite database.\n  - Ensure no 'cleaning up resources' message  is displayed if `--no-progress`\n    is passed.\n  - Ensure the maximum number of items per panel defaults to 1440 (24hrs) when\n    passing `--date-spec=min`.\n  - Fixed issue when parsing a delimited XFF field followed by a host IP.\n  - Fixed issue where some data was buffered on the WebSocket server before it\n    was sent to each client.\n  - Fixed issue where the WebSocket server would fail with POLLNVAL consuming\n    100% CPU.\n  - Fixed segfault when attempting to open an unresolved IP on mac/BSDs.\n\nChanges to GoAccess 1.5.7 - Thursday, April 28, 2022\n\n  - Updated Caddy's JSON format. This should address CADDY's v2.5.0 change.\n  - Updated Chinese translation (i18n).\n  - Updated GeoIP module so it defaults to native language name (i18n) or\n    fall-back to English.\n  - Updated Russian translation (i18n).\n  - Updated Ukrainian translation (i18n).\n\nChanges to GoAccess 1.5.6 - Wednesday, March 30, 2022\n\n  - Added `--anonymize-level=<1|2|3>` option to specify IP anonymization level.\n  - Added minute specificity to the Visitors panel via `--date-spec=min`.\n  - Added the ability to toggle on/off panels on the HTML report.\n  - Changed stderr to stdout on non-error output when exiting goaccess.\n\nChanges to GoAccess 1.5.5 - Monday, January 31, 2022\n\n  - Added mechanism to automatically parse additional bots.\n  - Changed area chart interpolation to 'monotone'. This should avoid the issue\n    where the interpolated curve has a bend into the negative space.\n  - Changed build to use debugging symbols even for release builds.\n  - Changed order on which we verify bots to be the first thing we check. This\n    adds a slight improvement on parsing time.\n  - Ensure we initialize DNS resolver conditions and mutexes before they're used.\n  - Fixed possible buffer over-read for cases where a '\\0' could be reached\n    early when parsing a log line.\n  - Fixed possible data race on UI spinner thread.\n  - Fixed regression where a lot of robots were not detected by GoAccess.\n\nChanges to GoAccess 1.5.4 - Saturday, December 25, 2021\n\n  - Added AWS ALB to the predefined logs format list --log-format=AWSALB.\n  - Ensure we lock our pipe/websocket writer before broadcasting message.\n  - Ensure we require a valid host token even when we're not validating the IP.\n  - Ensure we simply update the TUI once after tailing multiple files.\n  - Ensure we simply update the UI once after tailing multiple files.\n  - Fixed buffer overflow when checking if an HTTP code was a 404 on an empty\n    status code.\n  - Optimized terminal and HTML UI output when tailing multiple files.\n  - Updated DB PATH error message to be more descriptive.\n\nChanges to GoAccess 1.5.3 - Thursday, November 25, 2021\n\n  - Added additional crawlers to the default list.\n  - Added Italian translation (i18n).\n  - Added 'macOS 12' to the list of OS.\n  - Fixed buffer overflow caused by an excessive number of invalid requests\n    with multiple logs.\n  - Fixed visualization issue on the HTML report for panels with disabled\n    chart.\n\nChanges to GoAccess 1.5.2 - Tuesday, September 28, 2021\n\n  - Added .avi to the list of static requests/extensions.\n  - Changed label from 'Init. Proc. Time' to 'Log Parsing Time'.\n  - Fixed issue where lengthy static-file extension wouldn't account certain\n    valid requests.\n  - Fixed possible buffer underflow when checking static-file extension.\n  - Fixed segfault when attempting to parse an invalid JSON log while using a\n    JSON log format.\n  - Fixed segfault when ignoring a status code and processing a line > '4096'\n    chars.\n\nChanges to GoAccess 1.5.1 - Wednesday, June 30, 2021\n\n  - Changed official deb repo so it now builds '--with-getline' in order to\n    support request lines longer than 4096.\n  - Ensure there's no tail delay if the log file hasn't changed.\n  - Fixed data race when writing to a self-pipe and attempting to stop the WS server.\n  - Fixed inability to close expanded panel when pressing 'q' on TUI.\n  - Fixed possible data race during parsing spinner label assignment.\n  - Increased the maximum number of files to monitor from '512' to '3072'.\n\nChanges to GoAccess 1.5 - Wednesday, May 26, 2021\n\n  - Added a Docker container based isolated build environment (Debian).\n  - Added Dark Mode detection to the HTML report.\n  - Added the ability for the WebSocket server to bind to a Unix-domain socket.\n  - Added the ability to parse IPs enclosed within brackets (e.g., IPv6).\n  - Changed categorization of requests containing 'CFNetwork' to 'iOS' when\n    applicable.\n  - Changed command line option from '--hide-referer' to '--hide-referrer'.\n  - Changed command line option from '--ignore-referer' to '--ignore-referrer'.\n  - Fixed a potential division by zero.\n  - Fixed inability to parse IPv6 when using a 'CADDY' log format.\n  - Fixed issue where a 'BSD' OS could be displayed as Linux with certain\n    user-agents.\n  - Fixed memory leak when a JSON value contained an empty string (e.g.,\n    JSON/CADDY format).\n  - Fixed possible buffer overflow on a WS packet coming from the browser.\n  - Refactored a substantial part of the storage codebase for upcoming\n    filtering/search capabilities (issue #117).\n  - Refactored DB storage to minimize memory consumption up to '35%'.\n  - Updated default 'AWS Elastic Load Balancing' log format.\n  - Updated German translation.\n  - Updated page size to 24 on the HTML report.\n  - Updated UNIX OS categories.\n\nChanges to GoAccess 1.4.6 - Sunday, February 28, 2021\n\n  - Added additional feed reader clients.\n  - Added additional browsers and bots to the main list.\n  - Added command line option '--unknowns-log' to log unknown browsers and\n    OSs.\n  - Added 'Referer' to the pre-defined 'Caddy JSON' log format.\n  - Added support for real-time piping as non-root user.\n  - Added the ability to Handle case when IPv4 is encoded as IPv6 in\n    GeoIP1/legacy.\n  - Ensure we capture linux (lowercase) when extracting an OS.\n  - Fixed a regression in parsing Google Cloud Storage or possibly other\n    non-JSON formats.\n  - Fixed inability to parse escaped formats.\n  - Fixed issue when using '%s' with 'strptime(3)' under musl libc. This\n    addresses mostly the Docker image.\n  - Fixed possible buffer over-read for certain log-format patterns.\n  - Fixed segfault when attempting to process a malformed JSON string.\n  - Fixed segfault when setting an empty log-format from the TUI dialog.\n  - Fixed sorting on hits and visitors when larger than INT_MAX.\n  - Updated CloudFront pre-defined log-format to reflect the latest fields.\n  - Updated 'Dockerfile' image to use 'alpine:3.13' instead of edge due to\n    compatibility issue with the GNU coreutils.\n\nChanges to GoAccess 1.4.5 - Tuesday, January 26, 2021\n\n  - Fixed build issue due to initial declarations only allowed in C99 mode\n    (e.g., CentOS7).\n\nChanges to GoAccess 1.4.4 - Monday, January 25, 2021\n\n  - Added 'Caddy' to the list of pre-defined log formats.\n  - Added command line option '--no-strict-status' to disable status validation.\n  - Added native support to parse JSON logs.\n  - Added the ability to process timestamps in milliseconds using '%*'.\n  - Ensure TUI/CSV/HTML reports are able to output 'uint64_t' data.\n  - Ensure we allow UI render if the rate at which data is being read is\n    greater than '8192' req/s.\n  - Ensure we don't re-render Term/HTML output if no data was read/piped.\n  - Fixed build configure to work on NetBSD.\n  - Fixed issue where it would send data via socket each second when managed\n    by systemd.\n  - Fixed issue where parser was unable to parse syslog date with padding.\n  - Fixed issue where some items under browsers.list were not tab separated.\n  - Fixed issue where the format parser was unable to properly parse logs\n    delimited by a pipe.\n  - Fixed issue where T.X. Amount metrics were not shown when data was piped.\n  - Fixed issue where XFF parser could swallow an additional field.\n  - Fixed memory leak when using '%x' as date/time specifier.\n  - Replaced select(2) with poll(2) as it is more efficient and a lot faster\n    than select(2).\n  - Updated Swedish i18n.\n\nChanges to GoAccess 1.4.3 - Friday, December 04, 2020\n\n  - Added the ability to set how often goaccess will parse data and output to\n    the HTML report via '--html-refresh=<secs>'.\n  - Changed how TLS is parsed so the Cypher uses a separate specifier.\n    It now uses '%K' for the TLS version and '%k' for the Cypher.\n  - Fixed issue where real-time output would double count a rotated log. This\n    was due to the change of inode upon rotating the log.\n  - Updated man page to reflect proper way of 'tail -f' a remote access log.\n\nChanges to GoAccess 1.4.2 - Monday, November 16, 2020\n\n  - Added the ability to show 'Encryption Settings' such as 'TLSv1.2' and\n    Cipher Suites on its own panel.\n  - Added the ability to show 'MIME Types' such as 'application/javascript' on\n    its own panel.\n  - Changed Debian build to use mmdb instead of libgeoip (legacy).\n  - Ensure the HTML report defaults to widescreen if viewport is larger than\n    '2560px'.\n  - Fixed inability to properly process multiple logs in real-time.\n  - Fixed issue where named PIPEs were not properly seed upon generating\n    filename.\n  - Fixed issue where served time metrics were not shown when data was piped.\n  - Removed unnecessary padding from SVG charts. Improves readability on mobile.\n\nChanges to GoAccess 1.4.1 - Monday, November 09, 2020\n\n  - Added additional browsers and bots to the main list.\n  - Added 'Android 11' to the list of OSs.\n  - Added 'macOS 11.0 Big Sur' to the list of OSs.\n  - Added 'average' to each panel overall metrics.\n  - Added '.dmg', '.xz', and '.zst' to the static list.\n  - Added extra check to ensure restoring from disk verifies the content of the\n    log against previous runs.\n  - Added Russian translation (i18n).\n  - Added Ukrainian translation (i18n).\n  - Added support for HTTP status code '308'.\n  - Added the ability for 'get_home ()' to return NULL on error, instead of\n    terminating the process. Great if using through systemd.\n  - Added the ability to read lowercase predefined log formats. For instance,\n    '--log-format=COMBINED' or '--log-format=combined'.\n  - Changed how FIFOs are created and avoid using predictable filenames under\n    '/tmp'.\n  - Changed '--ignore-referer' to use whole referrer instead of referring site.\n  - Ensure Cache Status can be parsed without sensitivity to case.\n  - Ensure restored data enforces '--keep-last' if used by truncating\n    accordingly.\n  - Fixed a few memory leaks when restoring from disk.\n  - Fixed blank time distribution panel when using timestamps.\n  - Fixed build issue due to lack of 'mmap' on 'Win'/'Cygwin'/'MinGW'.\n  - Fixed crash in mouse enabled mode.\n  - Fixed double free on data restore.\n  - Fixed inability to keep processing a log when using '--keep-last'.\n  - Fixed inability to properly parse truncated logs.\n  - Fixed inability to properly count certain requests when restoring from\n    disk.\n  - Fixed issue where it would not parse subsequent requests coming from stdin (tail).\n  - Fixed issue where log truncation could prevent accurate number counting.\n  - Fixed issue where parsed date range was not rendered with '--date-spec'.\n  - Fixed issue where parser would stop regardless of a valid '--num-test' value.\n  - Fixed issue where restoring from disk would increment 'MAX.TS'.\n  - Fixed possible incremental issue when log rotation occurs.\n  - Fixed possible XSS when getting real-time data into the HTML report.\n  - Fixed potential memory leak when failing to get root node.\n  - Fixed real-time hits count issue for certain scenarios.\n  - Fixed segfault in 'Docker' due to a bad allocation when generating FIFOs.\n  - Fixed 'Unknown' Operating Systems with 'W3C' format.\n  - Removed unnecessary include from parser.c so it builds in macOS.\n  - Updated each panel overall UI to be more streamlined.\n  - Updated French translation.\n  - Updated German translation.\n  - Updated Spanish translation.\n  - Updated sigsegv handler.\n\nChanges to GoAccess 1.4 - Monday, May 18, 2020\n\n  - Added a caching storage mechanism to improve parsing raw data and data\n    rendering.\n  - Added a mechanism to avoid counting duplicate data when restoring persisted\n    data from disk.\n  - Added additional option to the HTML report to set a maximum number of items\n    per page to 3.\n  - Added a list of podcast-related user agents under '%sysconfdir%'.\n  - Added 'Android 10' to the list of Android codenames.\n  - Added a 'widescreen' layout to the HTML report (e.g., 4K TV/KPI Dashboard).\n  - Added 'Beaker', 'Brave', and 'Firefox Focus' to the list of browsers\n  - Added command line option --user-name=username to avoid running GoAccess as\n    root when outputting a real-time report.\n  - Added 'DuckDuckGo' and 'MSNBot' browsers to the browsers.list.\n  - Added 'facebookexternalhit' to the default crawler list.\n  - Added German translation (DE).\n  - Added Kubernetes Nginx Ingress Log Format to the default config file.\n  - Added 'macOS Catalina' to the list of OSX codenames.\n  - Added minor CSS updates to HTML report.\n  - Added missing header '<sys/socket.h>' to fix FreeBSD build\n  - Added new 'Edg' token to the list of browsers.\n  - Added '--no-ip-validation' command line to disable client IP validation\n  - Added '--persist' and '--restore' options to persist to disk and restore a\n    dump from disk.\n  - Added Portuguese translation (pt-BR)\n  - Added Swedish translation (SV)\n  - Added the ability to parse server cache status and a new panel to display\n    those metrics.\n  - Changed accumulated time to work by default on '--persist' and '--restore'.\n  - Changed back how the hits and visitors percentage is calculated to be more\n    intuitive.\n  - Changed Geo Location panel display default to show only if database file is\n    provided ('LIBMAXMINDDB').\n  - Changed initial processing time from secs to HH:MM:SS in HTML output.\n  - Changed '--max-items' for the static HTML report to allow no limit on\n    output entries.\n  - Changed required 'gettext' version to 0.19\n  - Changed to ignore 'SIGPIPE' with 'SIG_IGN'\n  - Changed version to 10.15 for 'macOS Catalina'.\n  - Ensure proper escaping on default AWSELB log format.\n  - Ensure valid requests counter is not affected on duplicate entries when\n    restoring data.\n  - Fixed issue preventing Ctrl-C (SIGINT) for the curses interface to stop the\n    program.\n  - Fixed issue where HTML report wouldn't update the tables when changing per\n    page option.\n  - Fixed issue where it wouldn't find either the user's or global config file.\n  - Fixed issue where changing the number of items per page in the HTML report\n    would not automatically refresh the tables.\n  - Fixed issue where last updated label was not updated in real-time.\n  - Fixed issue where overall date range wasn't showing the right start/end parse\n    dates.\n  - Fixed issue where tailing a file could potentially re-parse part of the log.\n  - Fixed memory leak when fetching country/continent while using 'LIBMAXMINDDB'.\n  - Fixed several '-Wcast-qual' warnings.\n  - Fixed unwanted added characters to the HTML output.\n  - Fixed websocket issue returning a 400 due to request header size.\n  - Increased 'MAX_LINE_CONF' so a JSON string can be properly parsed from the\n    config file.\n  - Removed deprecated option '--geoip-city-data' from config file.\n  - Removed unnecessary dependency from snapcraft.yaml.\n  - Removed Vagrantfile per #1410\n  - Removed some old browsers from the default curated list.\n  - Replaced TokyoCabinet storage for a non-dependency in-memory persistent\n    storage.\n  - Updated Dockerfile.\n\nChanges to GoAccess 1.3 - Friday, November 23, 2018\n\n  - Added ability to store accumulated processing time into DB_GEN_STATS tcb\n    file via '--accumulated-time' command line option.\n  - Added additional Apache status codes to the list.\n  - Added a few feed readers to the list.\n  - Added 'Android 8 Oreo' to the list of OSs.\n  - Added 'Android Pie 9' to the list of OSs.\n  - Added --anonymize-ip command line option to anonymize ip addresses.\n  - Added --browsers-file command line option to load a list of crawlers from a\n    text file.\n  - Added byte unit (PiB) to C formatter and refactored code.\n  - Added byte unit (PiB) to JS formatter.\n  - Added Chinese translation (i18n).\n  - Added French translation (i18n).\n  - Added '%h' date specifier to the allowed date character specifiers.\n  - Added \"HeadlessChrome\" to the list of browsers.\n  - Added --hide-referer command line option to hide referrers from report.\n  - Added HTTP status code 429 (TOO MANY REQUESTS).\n  - Added IGNORE_LEVEL_PANEL and IGNORE_LEVEL_REQ definitions.\n  - Added Japanese translation (i18n).\n  - Added macOS 10.14 Mojave to the list of OSs.\n  - Added \"Mastodon\" user-agent to the list of crawlers/unix-like.\n  - Added new fontawesome icons and use angle arrows in HTML paging.\n  - Added new purple theme to HTML report and default to it.\n  - Added --no-parsing-spinner command line option to switch off parsing\n    spinner.\n  - Added .ogv and ogg static file extension (ogg video, Ogg Vorbis audio).\n  - Added OS X version numbers when outputting with --real-os.\n  - Added parsing mechanism in an attempt capture more bots and to include\n    unspecified bots/crawlers.\n  - Added --pidfile command line option to the default config file.\n  - Added Spanish translation (i18n).\n  - Added SSL support for Docker goaccess build.\n  - Added support to the WebSocket server for openssl-1.1*.\n  - Added the ability to show/hide a chart per panel in the HTML report.\n  - Added transparency to the navigation bar of the HTML report.\n  - Added \"WhatsApp\" user-agent to the list of crawlers.\n  - Changed default db folder so it adds the process id (PID). --db-path is\n    required now when using --load-from-disk.\n  - Changed Dockerfile to build from the current source.\n  - Changed 'hits' to be right-aligned on TUI.\n  - Changed to use faster slide animations on HTML report.\n  - Changed wording from 'Bandwidth' to the proper term 'Tx. Amount'.\n  - Ensure database filenames used by btree are less predictable.\n  - Ensure HTML templates, CSS and JS files are minified when outputting\n    report.\n  - Ensure key phrases from Google are added even when https is used.\n  - Ensure live report updates data & charts if tab/document has focus.\n  - Ensure multiple 'Yandex' crawlers are properly parsed.\n  - Ensure Safari has priority over most crawlers except the ones that are\n    known to have it.\n  - Ensure the request protocol on its own is properly parsed.\n  - Ensure the right number of tests are performed against the given log.\n  - Ensure user configuration is parsed first when available.\n  - Ensure wss:// is used when connecting via HTTPS.\n  - Ensure XFF parser takes into account escaped braces.\n  - Fixed a regression where fifo-in/out would fail with ENXIO.\n  - Fixed a regression where it would return EXIT_FAILURE on an empty log.\n  - Fixed a (ssh) pipeline problem with fgetline()/fgets() when there is a race\n    for data on stdin.\n  - Fixed broken X-Forwarded-For (XFF) %~ specifier in certain parsing cases.\n  - Fixed conf.filenames duplication problem if logs are via pipe.\n  - Fixed float percent value on JSON/HTML output for locales using decimal comma.\n  - Fixed issue where it was not possible to establish a Web Socket connection\n    when attempting to parse and extract HTTP method.\n  - Fixed issue where log formats with pipe delimiter were not properly parsed.\n  - Fixed memory leak after config file path has been set (housekeeping).\n  - Fixed memory leak when adding host to holder introduced in c052d1ea.\n  - Fixed possible memory leak when hiding specific referrers.\n  - Fixed several JS jshint warnings.\n  - Fixed sudo installs on TravisCI.\n  - Fixed UNDEFINED time range in HTML report when VISITORS panel was ignored.\n  - Fixed unnecessary closing span tags from template.\n  - Fixed use-after-free when two color items were found on color_list.\n\nChanges to GoAccess 1.2 - Tuesday, March 07, 2017\n\n  - Added a Dockerfile.\n  - Added Amazon S3 bucket name as a VirtualHost (server block).\n  - Added a replacement for GNU getline() to dynamically expand line buffer\n    while maintaining real-time output.\n  - Added --daemonize command line option to run GoAccess as daemon.\n  - Added several improvements to the HTML report on small-screen devices.\n  - Added option to the HTML report to auto-hide tables on small-screen\n    devices.\n  - Added --process-and-exit command line option to parse log and exit.\n  - Added several feed readers to the list of browsers.\n  - Added \"-\" single dash per convention to read from the standard input.\n  - Added support for MaxMind GeoIP2.\n  - Added the ability to read and follow from a pipe such as\n    \"tail -f access.log | goaccess -\"\n  - Added the ability to specify multiple logs as input sources, e.g.:\n    \"goaccess access.log access.log.1\" while maintaining real-time output.\n  - Added time unit (seconds) to the processed time label in the HTML/terminal\n    output.\n  - Added visitors' percent column to the terminal dashboard.\n  - Changed D3 charts to dim Y-axis on mouseover.\n  - Changed D3 charts to reflect HTML column sort.\n  - Changed D3 charts to render only if within the viewport. This improves the\n    overall real-time HTML performance.\n  - Changed HTML report tables to render only if within the viewport.\n  - Changed percentage calculation to be based on the total within each panel.\n  - Ensure start/end dates are updated real-time in the HTML output.\n  - Ensure \"window.location.hostname\" is used as the default WS server host.\n    In most cases, this should avoid the need for specifying \"--ws-url=host\".\n    Simply using \"--real-time-html\" should suffice.\n  - Fixed issue on HTML report to avoid outputting scientific notation for all\n    byte sizes.\n  - Fixed integer overflow when calculating bar graph length on terminal\n    output.\n  - Fixed issue where global config file would override command line arguments.\n  - Fixed issue where it wouldn't allow loading from disk without specifying a\n    file when executed from the cron.\n  - Fixed issue where parser couldn't read some X-Forwarded-For (XFF) formats.\n    Note that this breaks compatibility with the original implementation of\n    parsing XFF, but at the same time it gives much more flexibility on different\n    formats.\n  - Fixed issue where specifying fifo-in/out wouldn't allow HTML real-time\n    output.\n  - Fixed issue where the wrong number of parsed lines upon erroring out was\n    displayed.\n  - Fixed issue where the WebSocket server prevented to establish a connection\n    with a client due to invalid UTF-8 sequences.\n  - Fixed percent issue when calculating visitors field.\n  - Updated the list of crawlers.\n\nChanges to GoAccess 1.1.1 - Wednesday, November 23, 2016\n\n  - Added data metric's \"unique\" count on each panel to the JSON/HTML outputs.\n  - Changed D3 bar charts to use .rangeBands and avoid extra outer padding.\n  - Fixed mouseover offset position issue on D3 bar charts.\n  - Fixed possible heap overflow when an invalid status code was parsed and\n    processed. This also ensures that only valid HTTP status codes are parsed\n    >=100 or <= 599.\n  - Fixed sluggish D3 chart re-rendering by changing how x-axis labels are\n    displayed in the HTML report.\n\nChanges to GoAccess 1.1 - Tuesday, November 08, 2016\n\n  - Added a new layout to the HTML report and additional settings and changes.\n  - Added --crawlers-only command line option to display crawlers/bots only.\n  - Added --fifo-in and --fifo-out command line options to set websocket FIFO\n    reader/writer.\n  - Added --no-html-last-updated command line option.\n  - Added --num-tests command line option.\n  - Added --html-prefs command line option to to set default preferences for\n    the HTML report.\n  - Added \"Amazon S3\" Log Format to the list of predefined options.\n  - Added \"Android 7.1 Nougat\" to the list of OSs.\n  - Added \"Android Marshmallow 6.0.1\" to the list of OSs.\n  - Added \"Android Nougat 7.0\" to the list of OSs.\n  - Added \"Feed Wrangler\" to the list of feeds.\n  - Added \"Go-http-client\" to the list of browsers.\n  - Added \"MicroMessenger\" (WeChat) to the list of browsers.\n  - Added \"SemrushBot\" to the list of crawlers.\n  - Added \"Remote User\" panel to capture HTTP authentication requests. Use %e\n    within the log-format variable to enable this panel.\n  - Added tebibyte unit to the byte to string function converter.\n  - Added the ability to parse reverse proxy logs that have multiple IPs. This\n    adds the ability to parse the \"X-Forwarded-For\" field in a reverse proxy\n    setup.\n  - Added the ability to show which token didn't match log/date/time pattern.\n    This also ensures that in the absence of data, its output is not treated as\n    error but instead it produces an empty report.\n  - Added the ability to specify a WebSocket protocol (ws|wss) through\n    --ws-url.\n  - Added the request query string to the W3C format.\n  - Added TLS/SSL support to the HTML real-time report.\n  - Changed browser classification for Google Cloud Clients.\n  - Changed how \"Darwin\" OS was reported to display AppName instead.\n  - Changed default W3C log format to use the URL path instead of full request.\n  - Changed HTML default number of items on each table to 7.\n  - Changed request parser to allow empty query strings.\n  - Changed default HTML output theme to darkBlue.\n  - Ensure every version of iOS is broken down under the OS panel.\n  - Ensure latest JSON data is fast-forwarded when connection is opened.\n    GoAccess now sends the latest JSON data to the client as soon as the\n    WebSocket connection is opened.\n  - Ensure localStorage is supported and enabled in the HTML report\n  - Ensure unknown countries/continents are listed.\n  - Fixed D3 chart width overflow issue on Edge.\n  - Fixed integer to string key conversion for unique visitors. This fixes the\n    issue where resulting keys would collide with existing keys and thus not\n    keeping the right visitors count on certain panels.\n  - Fixed memory leak when unable to URL decode %q specifier.\n  - Fixed memory leak when unable to URL decode %U specifier.\n  - Fixed month name abbreviation on app.js.\n  - Fixed percentage integer overflow with large numbers on 32bits platforms.\n  - Fixed percent calculation due to integer division rounding to zero.\n  - Fixed possible code injection when outputting an HTML report.\n  - Fixed segfault when using options -H or -M without an argument.\n  - Removed timestamp from the HTML report title tag.\n\nChanges to GoAccess 1.0.2 - Tuesday, July 05, 2016\n\n  - Added minor changes to the HTML report stylesheet.\n  - Added the ability to specify the WebSocket port within --ws-url.\n  - Added the proper byte swap functions used by Sun Solaris.\n  - Added the proper default --http-method/protocol values on the config file.\n  - Changed bar transition to scale delay dynamically to the length of the\n    dataset.\n  - Fixed build issue on platforms lacking of open_memstream() by refactoring\n    the JSON module to use its own memory buffer.\n  - Fixed issue where the server wouldn't send cached buffer to slow clients.\n  - Fixed OS X build check of ncursesw.\n  - Implemented a throttle mechanism for slow clients to avoid caching too much\n    data on the server-side.\n  - Removed flickering on D3 line and bar chart redraw.\n\nChanges to GoAccess 1.0.1 - Friday, June 17, 2016\n\n  - Added Android version number along with the codename when using --real-os,\n    e.g., \"Lollipop 5.1\".\n  - Added some missing headers and function checks to configure.ac.\n  - Fixed a regression where it wouldn't allow abbreviated date and time\n    formats such as %F or %T.\n  - Fixed build issues on systems running GLIBC older than 2.9, such as RHEL <= 5.\n  - Fixed issue where it wouldn't send the whole buffer to a socket causing the\n    real-time-html WebSocket server to progressively consume a lot more memory.\n  - Fixed memory leak when using getline and follow mode enabled.\n  - Fixed some buffer initialization issues on read_line() and\n    perform_tail_follow().\n  - Fixed uint types in sha1 files.\n\nChanges to GoAccess 1.0 - Thursday, June 09, 2016\n\n  - Added --enable-panel=<PANEL> command line option to display the given\n    module.\n  - Added --json-pretty-print command line option to output pretty json.\n  - Added --log-format=<format> command-line shortcuts for standard log\n    formats.\n  - Added --origin command line option to match the origin WebSocket header.\n  - Added --output=<file.[html|csv|json]> as a shortcut to --output-format.\n  - Added a complete real-time functionality to the HTML output.\n  - Added an option to set the max number of items to show per panel.\n  - Added D3 Visualziations to the HTML dashboard.\n  - Added metadata metrics to the each of the panels (JSON output)\n  - Added option to specify time distribution specificity.\n  - Added the ability to download a JSON file from the HTML report.\n  - Added the ability to output multiple formats on a single log parse.\n  - Added the ability to set the date specificity in hours.\n  - Added the ability to sort all HTML tables on all panels.\n  - Added the ability to specify a custom CSS and JS file to the HTML report.\n  - Added user-agents to the JSON output per each host.\n  - Added \"Vivaldi\" to the list of browsers.\n  - Bootstrapify the HTML dashboard.\n  - Changed configure.ac to use LDFLAGS instead of CFLAGS where applicable.\n  - Changed default terminal color scheme to 256 Monokai if terminal supports 256 colors.\n  - Changed GoAccess license to The MIT License (MIT)\n  - Changed the visitors panel to display its dates continuously instead of top.\n  - Default to 256 Monokai color scheme if terminal supports 256 colors.\n  - Default to display HTTP method/protocol (if applicable).\n  - Display the children's Max. T.S. as the parent's top Max. T.S.\n  - Ensure the parent's Avg. T.S. displays parent's Cum. T.S. over parent's Hits.\n  - Fixed color issue when switching from the color scheme dialog.\n  - Fixed cross platform build issue when ncurses is built with and without\n    termlib=tinfo.\n  - Fixed curses header window issue where it wouldn't clear out on small\n    window sizes.\n  - Fixed issue where tail mode wouldn't parse full lines using getline().\n  - Fixed minor background color issue when using ncurses 6.\n  - Fixed possible division by zero when calculating percentage.\n  - Fixed singly link list node removal.\n  - Fixed still reachable memory leak on GeoIP cleanup (geoip legacy >= 1.4.7).\n  - Fixed various Valgrind's still reachable memory leaks.\n  - Removed -Wredundant-decls.\n\nChanges to GoAccess 0.9.8 - Monday, February 29, 2016\n\n  - Added a more complete list of static extensions to the config file.\n  - Added \"Android 6.0 Marshmallow\" to the list of OSs.\n  - Added --no-tab-scroll command line option to disable scroll through panels\n    on TAB.\n  - Added the first and last log dates to the overall statistics panel.\n  - Ensure GoAccess links correctly against libtinfo.\n  - Ensure static content is case-insensitive verified.\n  - Fixed bandwidth overflow issue (numbers > 2GB on non-x86_64 arch).\n  - Fixed broken HTML layout when html-method/protocol is missing in config file.\n  - Refactored parsing and display of available modules/panels.\n\nChanges to GoAccess 0.9.7 - Monday, December 21, 2015\n\n  - Added \"Squid native\" log format to the config file.\n  - Fixed integer overflow when getting total bandwidth using the on-disk\n    storage.\n  - Fixed issue where a timestamp was stored as date under the visitors panel.\n  - Fixed issue where config dialog fields were not cleared out on select.\n  - Fixed issue where \"Virtual Hosts\" menu item wasn't shown in the HTML sidebar.\n\nChanges to GoAccess 0.9.6 - Tuesday, October 27, 2015\n\n  - Added --dcf command line option to view the default config file path.\n  - Added --ignore-status the ability to ignore parsing status codes.\n  - Added \"Darwin\" to the list of OSs.\n  - Fixed segfault when appending data to a log (follow) without virtualhosts.\n\nChanges to GoAccess 0.9.5 - Thursday, October 22, 2015\n\n  - Added major performance improvements to the default storage when parsing and\n    storing data (~%44 less memory, ~37% faster).\n  - Added the ability to parse virtual hosts and a new panel to display metrics\n    per virtual host.\n  - Added the ability to parse HTTP/2 requests.\n  - Added the ability to use GNU getline() to parse full line requests.\n  - Added the ability to output debug info if a log file is specified, even\n    without --enable-debug.\n  - Added OS X \"El Capitan\".\n  - Added WebDav HTTP methods and HTTP status from RFC 2518 and  RFC 3253.\n  - Fixed detection of some Googlebots.\n  - Fixed issue where time served metrics were not shown when loading persisted\n    data.\n  - Fixed linker error on OSX: ld: library not found for -lrt.\n  - Fixed percentage on the HTML output when excluding IPs.\n  - Removed GLib dependency and refactored storage functionality. By removing\n    this dependency, GoAccess is able to store data in a more efficient manner,\n    for instance, it avoids storing integer data as void* (generic typing), thus\n    greatly improving memory consumption for integers.\n\nChanges to GoAccess 0.9.4 - Tuesday, September 08, 2015\n\n  - Added --all-static-files command line option to parse static files\n    containing a query string.\n  - Added --invalid-requests command line option to log invalid requests to a file.\n  - Added additional overall metric - total valid requests.\n  - Added \"%~\" specifier to move forward through a log string until a non-space\n    char is found.\n  - Added the ability to parse native Squid access.log format.\n  - Fixed a few issues in the configuration script.\n  - Fixed inability to parse color due to a missing POSIX extension.\n    \"ERR:Invalid bg/fg color pairs\"\n\nChanges to GoAccess 0.9.3 - Wednesday, August 26, 2015\n\n  - Added --no-column-names command line option to disable column name metrics.\n  - Added a default color palette (Monokai) to the config file.\n  - Added AWS Elastic Load Balancing to the list of predefined log/date/time\n    formats.\n  - Added CloudFlare status codes.\n  - Added column headers for every enabled metric on each panel.\n  - Added cumulative time served metric.\n  - Added \"DragonFly\" BSD to the list of OSs.\n  - Added maximum time served metric (slowest running requests).\n  - Added \"Slackbot\" to the list of crawlers/browsers.\n  - Added the ability to parse the query string specifier \"%q\" from a log file.\n  - Added the ability to process logs incrementally.\n  - Added the ability to set custom colors on the terminal output.\n  - Disabled REFERRERS by default.\n  - Ensure bandwidth metric is displayed only if %b specifier is parsed.\n  - Fixed issue where the --sort-panel option wouldn't sort certain panels.\n  - Fixed several compiler warnings.\n  - Set predefined static files when no config file is used.\n  - Updated \"Windows 10\" user agent from 6.4 (wrong) to 10.0.(actual)\n\nChanges to GoAccess 0.9.2 - Monday, July 06, 2015\n\n  - Added ability to fully parse browsers that contain spaces within a token.\n  - Added multiple user agents to the list of browsers.\n  - Added the ability to handle time served in milliseconds as a decimal number\n    `%L`.\n  - Added the ability to parse a timestamp in microseconds.\n  - Added the ability to parse Google Cloud Storage access logs.\n  - Added the ability to set a custom title and header in the HTML report.\n  - Added \"%x\" as timestamp log-format specifier.\n  - Ensure agents\" hash table is destroyed upon exiting the program.\n  - Ensure \"Game Systems\" are processed correctly.\n  - Ensure visitors panel header is updated depending if crawlers are parsed or\n    not.\n  - Fixed issue where the date value was set as time value  in the config\n    dialog.\n  - Fixed memory leak in the hits metrics when using the in-memory storage\n    (GLib).\n\nChanges to GoAccess 0.9.1 - Tuesday, May 26, 2015\n\n  - Added --hl-header command line option to highlight active panel.\n  - Added \"Applebot\" to the list of web crawlers.\n  - Added \"Microsoft Edge\" to the list of browsers.\n  - Added additional Nginx-specific status codes.\n  - Ensure dump_struct is used only if using __GLIBC__.\n  - Ensure goaccess image has an alt attribute on the HTML output for valid\n    HTML5.\n  - Ensure the config file path is displayed when something goes wrong (FATAL).\n  - Ensure there is a character indicator to see which panel is active.\n  - Fixed Cygwin compile issue attempting to use -rdynamic.\n  - Fixed issue where a single IP did not get excluded after an IP range.\n  - Fixed issue where requests showed up in the wrong view even when\n    --no-query-string was used.\n  - Fixed issue where some browsers were not recognized or marked as \"unknown\".\n  - Fixed memory leak when excluding an IP range.\n  - Fixed overflows on sort comparison functions.\n  - Fixed segfault when using on-disk storage and loading persisted data with -a.\n  - Removed keyphrases menu item from HTML output.\n  - Split iOS devices from Mac OS X.\n\nChanges to GoAccess 0.9 - Thursday, March 19, 2015\n\n  - Added --geoip-database command line option for GeoIP Country/City IPv6.\n  - Added \"Windows 10 (v6.4)\" to the real windows user agents.\n  - Added ability to double decode an HTTP referer and agent.\n  - Added ability to sort views through the command line on initial load.\n  - Added additional data values to the backtrace report.\n  - Added additional graph to represent the visitors metric on the HTML output.\n  - Added AM_PROG_CC_C_O to configure.ac\n  - Added \"Android Lollipop\" to the list of operating systems.\n  - Added \"average time served\" metric to all panels.\n  - Added \"bandwidth\" metric to all panels.\n  - Added command line option to disable summary metrics on the CSV output.\n  - Added numeric formatting to the HTML output to improve readability.\n  - Added request method specifier to the default W3C log format.\n  - Added the ability to ignore parsing and displaying given panel(s).\n  - Added the ability to ignore referer sites from being counted. A good case\n    scenario is to ignore own domains. i.e., owndomain.tld. This also allows\n    ignoring hosts using wildcards. For instance, *.mydomain.tld or www.mydomain.*\n    or www?.mydomain.tld\n  - Added time/hour distribution module. e.g., 00-23.\n  - Added \"visitors\" metrics to all panels.\n  - Changed AC_PREREQ macro version so it builds on old versions of autoconf.\n  - Changed GEOIP database load to GEOIP_MEMORY_CACHE for faster lookups.\n  - Changed maximum number of choices to display per panel to 366 from 300.\n  - Ensure config file is read from home dir if unable to open it from\n    %sysconfdir% path.\n  - Fixed array overflows when exceeding MAX_* limits on command line options.\n  - Fixed a SEGFAULT where sscanf could not handle special chars within the\n    referer.\n  - Fixed character encoding on geolocation output (ISO-8859 to UTF8).\n  - Fixed issue on wild cards containing \"?\" at the end of the string.\n  - Fixed issue where a \"Nothing valid to process\" error was triggered when the\n    number of invalid hits was equal to the number of valid hits.\n  - Fixed issue where outputting to a file left a zero-byte file in pwd.\n  - Improved parsing of operating systems.\n  - Refactored log parser so it allows with ease the addition of new modules.\n    This also attempts to decouple the core functionality from the rendering\n    functions. It also gives the flexibility to add children metrics to root\n    metrics for any module. e.g., Request A was visited by IP1, IP2, IP3, etc.\n  - Restyled HTML output.\n\nChanges to GoAccess 0.8.5 - Sunday, September 14, 2014\n\n  - Fixed SEGFAULT when parsing a malformed request that doesn't have HTTP\n    status.\n\nChanges to GoAccess 0.8.4 - Monday, September 08, 2014\n\n  - Added --444-as-404 command line option to handle nginx non-standard status\n    code 444 as 404.\n  - Added --4xx-to-unique-count command line option to count client errors (4xx)\n    to the unique visitors count.  Now by default it omits client errors (4xx)\n    from being added to the unique visitors count as they are probably not welcomed\n    visitors. 4xx errors are always counted in panels other than visitors, OS &\n    browsers.\n  - Added and updated operating systems, and browsers.\n  - Added excluded IP hits count to the general statistics panel on all reports.\n  - Added HTTP nonstandard code \"444\" to the status code list.\n  - Fixed compile error due to missing include <sys/types.h> for type\n    off_t (gcc 4.1).\n  - Fixed issue when excluding IPv4/v6 ranges.\n  - Removed request status field restriction. This allows parsing logs that\n    contain only a valid date, IPv4/6 and host.\n\nChanges to GoAccess 0.8.3 - Monday, July 28, 2014\n\n  - Fixed SEGFAULT when parsing a CLF log format and using --ignore-crawlers.\n  - Fixed parsing conflict between some Opera browsers and Chrome.\n  - Fixed parsing of several feed readers that are Firefox/Safari-based.\n  - Fixed Steam detection.\n  - Added Huawei to the browser's list and removed it from the OS's list.\n\nChanges to GoAccess 0.8.2 - Monday, July 20, 2014\n\n  - Added --version command line option.\n  - Added --ignore-crawlers command line option to ignore crawlers.\n  - Added ability to parse dates containing whitespaces in between,\n    e.g., \"Jul 15 20:13:59\" (syslog format).\n  - Added a variety of browsers, game systems, feed readers, and podcasts.\n  - Added missing up/down arrows to the help section.\n  - Added the ability to ignore multiple IPv4/v6 and IP ranges.\n  - Added the PATCH method according to RFC 5789.\n  - Fixed GeoLocation percent issue for the JSON, CSV and HTML outputs.\n  - Fixed memory leak when excluding one or multiple IPs.\n\nChanges to GoAccess 0.8.1 - Monday, June 16, 2014\n\n  - Added ability to add/remove static files by extension through the config\n    file.\n  - Added ability to print backtrace on segmentation fault.\n  - Escaped JSON strings correctly according to [RFC4627].\n  - Fixed encoding issue when extracting keyphrases for some HTTP referrers.\n  - Fixed issue where HTML bar graphs were not shown due to numeric locale.\n  - Fixed issue with URIs containing \"\\r?\\n\" thus breaking the corresponding\n    output.\n  - Make sure request string is URL decoded on all outputs.\n\nChanges to GoAccess 0.8 - Tuesday, May 20, 2014\n\n  - Added APT-HTTP to the list of browsers.\n  - Added data persistence and ability to load data from disk.\n  - Added IE11 to the list of browsers.\n  - Added IEMobile to the list of browsers.\n  - Added multiple command line options.\n  - Added Nagios check_http to the list of browsers.\n  - Added parsing progress metrics - total requests / requests per second.\n  - Added the ability to parse a GeoLiteCity.dat to get the city given an IPv4.\n  - Changed the way the configuration file is parsed. This will parse all\n    configuration options under ~/.goaccessrc or the specified config file and\n    will feed getopt_long with the extracted key/value pairs. This also allows the\n    ability to have comments on the config file which won't be overwritten.\n  - Ensure autoconf determines the location of ncurses headers.\n  - Fixed issue where geo_location_data was NULL.\n  - Fixed issue where GoAccess did not run without a tty allocated to it.\n  - Fixed potential memory leak on --log-file realpath().\n  - Fixed Solaris build errors.\n  - Implemented an on-memory hash database using Tokyo Cabinet. This\n    implementation allows GoAccess not to rely on GLib's hash table if one is\n    needed.\n  - Implemented large file support using an on-disk B+ Tree database. This\n    implementation allows GoAccess not to hold everything in memory but instead\n    it uses an on-disk B+ Tree database.\n  - Trimmed leading and trailing whitespaces from keyphrases module.\n\nChanges to GoAccess 0.7.1 - Monday, February 17, 2014\n\n  - Added --no-color command line option to turn off color output.\n  - Added --real-os command line option to get real OS names, e.g.,\n    \"Android, Windows, Mac\".\n  - Added ability to log debug messages to a file.\n  - Added ability to parse tab-separated log format strings.\n  - Added ability to support terminals without colors.\n  - Added command line option to append HTTP method to request.\n  - Added command line option to append HTTP protocol to request.\n  - Added long options to command-line.\n  - Added missing \"Win 9x 4.90\" (Windows Me) user-agent.\n  - Added missing Windows RT user-agent.\n  - Ensure mouse click does not reset expanded module if it is the same.\n  - Fixed Amazon CloudFront tab-separated log format.\n  - Fixed \"FreeBSD style\" ncursesw built into system.\n  - Fixed HTML report issue where data cell would not wrap.\n  - Fixed issue when isatty() could not find a valid file descriptor.\n  - Fixed SymbianOS user-agent and retrieve its version.\n\nChanges to GoAccess 0.7 - Monday, December 15, 2013\n\n  - Added a command line option to ignore request query strings.\n  - Added additional compiler flags & fixed several warnings.\n  - Added additional static file extensions.\n  - Added country per IP to HOSTS module (HTML & JSON).\n  - Added DEBUG mode to Makefile & -O2 to default release.\n  - Added GEOLOCATION report to all outputs - includes continents/countries.\n  - Added IP resolver to HTML and JSON output.\n  - Added module numbers to each module header.\n  - Added the ability to output JSON and CSV.\n  - Added Windows NT 6.3 (Win 8.1) to the list.\n  - Fixed buffer overflow issue with realpath.\n  - New HTML report - HTML5 + CSS styles.\n  - Properly split request line into the three request modules.\n\nChanges to GoAccess 0.6.1 - Monday, October 07, 2013\n\n  - Added active module indication by name.\n  - Added additional crawlers to the list.\n  - Added custom configuration file option.\n  - Added human-readable string when unable to open log.\n  - Added missing include when compiling on OSX 10.6.\n  - Added optional mouse support to the main dashboard.\n  - Added the ability to select active module by number (keys).\n  - Added the rest of HTTP methods according to RFC2616.\n  - Changed referring site sscanf format to process multiple URLs.\n  - Changed the default color scheme to monochrome.\n  - Fixed issue where %T was not processing floating-point numbers.\n  - Fixed percentage issue for browsers and os modules.\n  - Fixed SIGSEGV when reading from stdin to stdout.\n  - Improved performance when expanding a module.\n  - Reduced memory consumption by decreasing number of dns threads.\n  - Removed ^UP/^DOWN due to a key mapping conflict.\n\nChanges to GoAccess 0.6 - Monday, July 15, 2013\n\n  - Added a bunch of minor fixes and changes.\n  - Added and updated list of browsers and operating systems.\n  - Added a predefined log format/date for the Amazon CloudFront (Download\n    Distribution).\n  - Added parsing/processing indicators.\n  - Added the ability to independently sort each module.\n  - Added the ability to search across the whole dashboard with the option to\n    use regular expressions.\n  - Config window now accepts [ENTER] to continue or F10.\n  - Fixed issue where Opera +15 was identified as Chrome.\n  - Implemented the ability to parse the time taken to serve the request, in\n    microseconds and seconds.\n  - Improved memory usage and better performance in general.\n  - Moved away from the original pop-up UI to a new expandable dashboard\n    allowing data to be processed in real-time.\n  - Sanitized HTML output with html entities for special chars.\n  - Updated the hosts module so it shows the reverse DNS as a sub node.\n\nChanges to GoAccess 0.5 - Monday, June 04, 2012\n\n  - Added ability to output a full stats report to a file.\n  - Added a key shortcut to scroll top/bottom.\n  - Added a new include sys/socket.h - BSD\n  - Added support for IPv6\n  - Added the ability to parse a custom format string.\n  - Fixed google cache key-phrases.\n  - Fixed issue on empty Google query strings.\n  - Fixed issue on Opera agents where version was not recognized correctly.\n  - Fixed other minor fixes and changes.\n\nChanges to GoAccess 0.4.2 - Monday, January 03, 2011\n\n  - Added UTF-8 support. Now it should handle properly wide-character/UTF-8.\n    Run ./configure --enable-utf8\n  - Fixed a minor bug when adding monthly totals on visitors subwin.\n  - Removed -lrt since GoAccess does not link to librt. (OS X doesn't include\n    librt)\n\nChanges to GoAccess 0.4.1 - Monday, December 13, 2010\n\n  - Added more flexibility when resizing the terminal. Should work fine with\n    the standard 80x24.\n  - Added the ability to pass a flag to ./configure so GeoIP can be enabled if\n    needed.\n  - Implemented a pipeline from stdin, so the input doesn't have to be only a\n    file.\n\nChanges to GoAccess 0.4 - Tuesday, November 30, 2010\n\n  - Added graphs to the unique_visitors subwin.\n  - Implemented bandwidth per day, and host.\n  - Implemented list of agents for specific hosts.\n  - Rewrote hash tables iterative code to avoid the use of GHashTableIter, this\n    way it works with all GLib > 2.0.0.\n  - Various bug fixes and code cleanups (mainly in the subwin modules).\n\nChanges to GoAccess 0.3.3 - Monday, September 27, 2010\n\n  - Changed tarball's filename.\n  - Fixed a request size parsing issue. Due to malformed syntax on the HTTP\n    protocol, bandwidth was reset to 0. Ex. \"HEAD /\" 400 20392\n  - Fixed a segfault when goaccess was executed without any options but with an\n    additional unknown argument.\n\nChanges to GoAccess 0.3.2 - Thursday, September 09, 2010\n\n  - Fixed an agent parsing issue. As a result, operating systems were not\n    properly counted.\n\nChanges to GoAccess 0.3.1 - Friday, September 03, 2010\n\n  - Added a color scheme implementation\n\nChanges to GoAccess 0.3 - Sunday, August 29, 2010\n\n  - Added a counter for total requests since initial parse was implemented\n  - Added a more detailed and comprehensive browser and os report\n  - Added bandwidth details for requested files\n  - Added percentage details on modules 2, 3, 4, 5, 10, 11\n  - Code cleanups\n  - Fixed a potential segmentation fault when resizing main window\n  - Fixed a segmentation fault on pop-up window search if haystack was null\n  - Fixed invalid entries when parsing status codes\n  - Implemented a real support for LFS - Handles files larger than 2 GiB on\n    32-bit systems\n  - Implemented support for \"vhost_combined\" log format\n  - Changed position of data/graphs depending on # of hits\n\nChanges to GoAccess 0.2 - Sunday, July 25, 2010\n\n  - Added a keyphrases report coming from Google search engine. This includes,\n    raw, cache, and translation queries.\n  - Fixed a memory leak when invalid entries were parsed\n  - Fixed a potential buffer overflow.\n  - Implemented real-time statistics (RTS). Data will be appended as the log\n    file grows. Equivalent to \"tail -f\" on Unix systems\n  - Implemented screen resize functionality\n  - Simplified creation of the \"unique visitors\" hash-key.\n  - Simplified the \"process_unique_data\" function\n  - Various small speed increases & code cleanup\n\nChanges to GoAccess 0.1.2 - Monday, July 12, 2010\n\n  - Fixed a segmentation fault when parsing logs with unusual request type. Ex.\n    \"GET HTTP/1.1 HTTP/1.1\"\n\nChanges to GoAccess 0.1.1 - Saturday, July 10, 2010\n\n  - Added an enhanced error handling\n  - Added an extra macro on configure.ac to check against GHashTableIter.\n    ./configure might not check for glib 2.16 that introduced \"GHashTableIter\".\n  - Added Glibc LFS\n  - Cleaned up code a little bit\n  - Fixed a segmentation fault when displaying the help text on x86_64.\n  - Fixed assignments in conditions. In case the assignment is actually intended\n    put extra parenthesis around it. This will shut GCC (and others) up.\n  - Fixed casts associated with \"g_hash_table_iter_next\".\n  - Fixed comparison between signed and unsigned integer types.\n  - Fixed function declarations.\n  - Fixed includes.\n  - Fixed two format strings. (If the error was ever triggered, it'd most\n    likely lead to a segfault)\n\nChanges to GoAccess 0.1 - Tuesday, July 06, 2010\n\n  - Initial release 0.1\n"
        },
        {
          "name": "DOCKER.md",
          "type": "blob",
          "size": 1.1728515625,
          "content": "\n# Docker image features\n\n* This command uses the language set for this system. If that does not support it will be output in English. [**Supported Language**](https://github.com/allinurl/goaccess/raw/master/po/LINGUAS)\n\n* This image supports building on the ARM architecture (e.g. Raspberry Pi)\n\n* Do you want to change the timezone? Use the `-e` option to pass the time-zone setting to Docker. (e.g. `-e TZ=\"America/New_York\"`)\n\n* The container is built with geo-location support (see [the manual](https://goaccess.io/man#options)). To enable the respective panel, mount the geolocation database using `-v /path/to/GeoLite2-City.mmdb:/GeoLite2-City.mmdb` and specify `--geoip-database /GeoLite2-City.mmdb` when running GoAccess.\n\n* If you made changes to the config file after building the image, you don't have to rebuild from scratch. Simply restart the container:\n\n```\n    docker restart goaccess\n```\n\n* If you had already run the container, you may have to stop and remove it first:\n\n```\n    docker stop goaccess\n    docker rm goaccess\n```\n\n* The container and image can be completely removed as follows:\n\n```\n    docker stop goaccess\n    docker rm goaccess\n    docker rmi allinurl/goaccess\n```\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.7451171875,
          "content": "FROM alpine:3 AS builds\nRUN apk add --no-cache \\\n    autoconf \\\n    automake \\\n    build-base \\\n    clang \\\n    clang-static \\\n    gettext-dev \\\n    gettext-static \\\n    git \\\n    libmaxminddb-dev \\\n    libmaxminddb-static \\\n    libressl-dev \\\n    linux-headers \\\n    ncurses-dev \\\n    ncurses-static \\\n    tzdata\n\n# GoAccess\nCOPY . /goaccess\nWORKDIR /goaccess\nRUN autoreconf -fiv\nRUN CC=\"clang\" CFLAGS=\"-O3 -static\" LIBS=\"$(pkg-config --libs openssl)\" ./configure --prefix=\"\" --enable-utf8 --with-openssl --enable-geoip=mmdb\nRUN make && make DESTDIR=/dist install\n\n# Container\nFROM busybox:musl\nCOPY --from=builds /dist /\nCOPY --from=builds /usr/share/zoneinfo /usr/share/zoneinfo\nVOLUME /var/www/goaccess\nEXPOSE 7890\nENTRYPOINT [\"/bin/goaccess\"]\nCMD [\"--help\"]\n"
        },
        {
          "name": "Dockerfile.debian-12",
          "type": "blob",
          "size": 0.3115234375,
          "content": "# Used to have all compile dependencies isolated in a container image.\nFROM debian:12\n\nRUN apt update -qqq\nRUN apt install -y \\\n    libncurses-dev \\\n    libssl-dev \\\n    libmaxminddb-dev \\\n    build-essential \\\n    autoconf \\\n    gettext \\\n    autopoint\n\n# GoAccess\nWORKDIR /goaccess\n\nENTRYPOINT [\"./build-dynamic.sh\"]\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 8.2607421875,
          "content": "#AUTOMAKE_OPTIONS = foreign\nbin_PROGRAMS = goaccess\nAUTOMAKE_OPTIONS = subdir-objects\n\ndist_noinst_DATA =                 \\\n  resources/tpls.html              \\\n  resources/css/app.css            \\\n  resources/css/bootstrap.min.css  \\\n  resources/css/fa.min.css         \\\n  resources/js/app.js              \\\n  resources/js/charts.js           \\\n  resources/countries-110m.json    \\\n  resources/js/d3.v7.min.js        \\\n  resources/js/topojson.v3.min.js  \\\n  resources/js/hogan.min.js\n\nnoinst_PROGRAMS = bin2c\nbin2c_SOURCES = src/bin2c.c\n\nBUILT_SOURCES =       \\\n  src/tpls.h          \\\n  src/bootstrapcss.h  \\\n  src/facss.h         \\\n  src/appcss.h        \\\n  src/d3js.h          \\\n  src/topojsonjs.h    \\\n  src/hoganjs.h       \\\n  src/countries110m.h \\\n  src/chartsjs.h      \\\n  src/appjs.h\n\nCLEANFILES =                          \\\n  src/tpls.h                          \\\n  src/bootstrapcss.h                  \\\n  src/facss.h                         \\\n  src/appcss.h                        \\\n  src/d3js.h                          \\\n  src/topojsonjs.h                    \\\n  src/hoganjs.h                       \\\n  src/countries110m.h                 \\\n  src/chartsjs.h                      \\\n  src/appjs.h                         \\\n  resources/tpls.html.tmp             \\\n  resources/countries-110m.json.tmp   \\\n  resources/css/bootstrap.min.css.tmp \\\n  resources/css/fa.min.css.tmp        \\\n  resources/css/app.css.tmp           \\\n  resources/js/d3.v7.min.js.tmp       \\\n  resources/js/topojson.v3.min.js.tmp \\\n  resources/js/hogan.min.js.tmp       \\\n  resources/js/charts.js.tmp          \\\n  resources/js/app.js.tmp\n\n# Tpls\nsrc/tpls.h: bin2c$(EXEEXT) $(srcdir)/resources/tpls.html\nif HAS_SEDTR\n\tcat $(srcdir)/resources/tpls.html | sed \"s/^[[:space:]]*//\" | sed \"/^$$/d\" | tr -d \"\\r\\n\" > $(srcdir)/resources/tpls.html.tmp\n\t./bin2c $(srcdir)/resources/tpls.html.tmp src/tpls.h tpls\nelse\n\t./bin2c $(srcdir)/resources/tpls.html src/tpls.h tpls\nendif\n# countries.json\nsrc/countries110m.h: bin2c$(EXEEXT) $(srcdir)/resources/countries-110m.json\nif HAS_SEDTR\n\tcat $(srcdir)/resources/countries-110m.json | sed \"s/^[[:space:]]*//\" | sed \"/^$$/d\" | tr -d \"\\r\\n\" > $(srcdir)/resources/countries-110m.json.tmp\n\t./bin2c $(srcdir)/resources/countries-110m.json.tmp src/countries110m.h countries_json\nelse\n\t./bin2c $(srcdir)/resources/countries-110m.json src/countries110m.h countries_json\nendif\n# Bootstrap\nsrc/bootstrapcss.h: bin2c$(EXEEXT) $(srcdir)/resources/css/bootstrap.min.css\nif HAS_SEDTR\n\tcat $(srcdir)/resources/css/bootstrap.min.css | sed \"s/^[[:space:]]*//\" | sed \"/^$$/d\" | tr -d \"\\r\\n\" > $(srcdir)/resources/css/bootstrap.min.css.tmp\n\t./bin2c $(srcdir)/resources/css/bootstrap.min.css.tmp src/bootstrapcss.h bootstrap_css\nelse\n\t./bin2c $(srcdir)/resources/css/bootstrap.min.css src/bootstrapcss.h bootstrap_css\nendif\n# Font Awesome\nsrc/facss.h: bin2c$(EXEEXT) $(srcdir)/resources/css/fa.min.css\nif HAS_SEDTR\n\tcat $(srcdir)/resources/css/fa.min.css | sed \"s/^[[:space:]]*//\" | sed \"/^$$/d\" | tr -d \"\\r\\n\" > $(srcdir)/resources/css/fa.min.css.tmp\n\t./bin2c $(srcdir)/resources/css/fa.min.css.tmp src/facss.h fa_css\nelse\n\t./bin2c $(srcdir)/resources/css/fa.min.css src/facss.h fa_css\nendif\n# App.css\nsrc/appcss.h: bin2c$(EXEEXT) $(srcdir)/resources/css/app.css\nif HAS_SEDTR\n\tcat $(srcdir)/resources/css/app.css | sed \"s/^[[:space:]]*//\" | sed \"/^$$/d\" | tr -d \"\\r\\n\" > $(srcdir)/resources/css/app.css.tmp\n\t./bin2c $(srcdir)/resources/css/app.css.tmp src/appcss.h app_css\nelse\n\t./bin2c $(srcdir)/resources/css/app.css src/appcss.h app_css\nendif\n# D3.js\nsrc/d3js.h: bin2c$(EXEEXT) $(srcdir)/resources/js/d3.v7.min.js\nif HAS_SEDTR\n\tcat $(srcdir)/resources/js/d3.v7.min.js | sed \"s/^[[:space:]]*//\" | sed \"/^$$/d\" | tr -d \"\\r\\n\" > $(srcdir)/resources/js/d3.v7.min.js.tmp\n\t./bin2c $(srcdir)/resources/js/d3.v7.min.js.tmp src/d3js.h d3_js\nelse\n\t./bin2c $(srcdir)/resources/js/d3.v7.min.js src/d3js.h d3_js\nendif\n# topojson.js\nsrc/topojsonjs.h: bin2c$(EXEEXT) $(srcdir)/resources/js/topojson.v3.min.js\nif HAS_SEDTR\n\tcat $(srcdir)/resources/js/topojson.v3.min.js | sed \"s/^[[:space:]]*//\" | sed \"/^$$/d\" | tr -d \"\\r\\n\" > $(srcdir)/resources/js/topojson.v3.min.js.tmp\n\t./bin2c $(srcdir)/resources/js/topojson.v3.min.js.tmp src/topojsonjs.h topojson_js\nelse\n\t./bin2c $(srcdir)/resources/js/topojson.v3.min.js src/topojsonjs.h topojson_js\nendif\n# Hogan.js\nsrc/hoganjs.h: bin2c$(EXEEXT) $(srcdir)/resources/js/hogan.min.js\nif HAS_SEDTR\n\tcat $(srcdir)/resources/js/hogan.min.js | sed \"s/^[[:space:]]*//\" | sed \"/^$$/d\" | tr -d \"\\r\\n\" > $(srcdir)/resources/js/hogan.min.js.tmp\n\t./bin2c $(srcdir)/resources/js/hogan.min.js.tmp src/hoganjs.h hogan_js\nelse\n\t./bin2c $(srcdir)/resources/js/hogan.min.js src/hoganjs.h hogan_js\nendif\n# Charts.js\nsrc/chartsjs.h: bin2c$(EXEEXT) $(srcdir)/resources/js/charts.js\nif HAS_SEDTR\n\tcat $(srcdir)/resources/js/charts.js | sed -E \"s@(,|;)[[:space:]]*//..*@\\1@g\" | sed -E \"s@^[[:space:]]*//..*@@g\" | sed \"s/^[[:space:]]*//\" | sed \"/^$$/d\" | tr -d \"\\r\\n\" > $(srcdir)/resources/js/charts.js.tmp\n\t./bin2c $(srcdir)/resources/js/charts.js.tmp src/chartsjs.h charts_js\nelse\n\t./bin2c $(srcdir)/resources/js/charts.js src/chartsjs.h charts_js\nendif\nif DEBUG\n\t./bin2c $(srcdir)/resources/js/charts.js src/chartsjs.h charts_js\nendif\n# App.js\nsrc/appjs.h: bin2c$(EXEEXT) $(srcdir)/resources/js/app.js\nif HAS_SEDTR\n\tcat $(srcdir)/resources/js/app.js | sed -E \"s@(,|;)[[:space:]]*//..*@\\1@g\" | sed -E \"s@^[[:space:]]*//..*@@g\" | sed \"s/^[[:space:]]*//\" | sed \"/^$$/d\" | tr -d \"\\r\\n\" > $(srcdir)/resources/js/app.js.tmp\n\t./bin2c $(srcdir)/resources/js/app.js.tmp src/appjs.h app_js\nelse\n\t./bin2c $(srcdir)/resources/js/app.js src/appjs.h app_js\nendif\nif DEBUG\n\t./bin2c $(srcdir)/resources/js/app.js src/appjs.h app_js\nendif\n\nconfdir = $(sysconfdir)/goaccess\ndist_conf_DATA = config/goaccess.conf\ndist_conf_DATA += config/browsers.list\ndist_conf_DATA += config/podcast.list\n\ngoaccess_SOURCES = \\\n   src/base64.c        \\\n   src/base64.h        \\\n   src/browsers.c      \\\n   src/browsers.h      \\\n   src/color.c         \\\n   src/color.h         \\\n   src/commons.c       \\\n   src/commons.h       \\\n   src/csv.c           \\\n   src/csv.h           \\\n   src/error.c         \\\n   src/error.h         \\\n   src/gdashboard.c    \\\n   src/gdashboard.h    \\\n   src/gdns.c          \\\n   src/gdns.h          \\\n   src/gholder.c       \\\n   src/gholder.h       \\\n   src/gkhash.c        \\\n   src/gkhash.h        \\\n   src/gkmhash.c       \\\n   src/gkmhash.h       \\\n   src/gmenu.c         \\\n   src/gmenu.h         \\\n   src/goaccess.c      \\\n   src/goaccess.h      \\\n   src/gslist.c        \\\n   src/gslist.h        \\\n   src/gstorage.c      \\\n   src/gstorage.h      \\\n   src/gwsocket.c      \\\n   src/gwsocket.h      \\\n   src/json.c          \\\n   src/json.h          \\\n   src/khash.h         \\\n   src/labels.h        \\\n   src/opesys.c        \\\n   src/opesys.h        \\\n   src/options.c       \\\n   src/options.h       \\\n   src/output.c        \\\n   src/output.h        \\\n   src/parser.c        \\\n   src/parser.h        \\\n   src/persistence.c   \\\n   src/persistence.h   \\\n   src/pdjson.c        \\\n   src/pdjson.h        \\\n   src/settings.c      \\\n   src/settings.h      \\\n   src/sort.c          \\\n   src/sort.h          \\\n   src/tpl.c           \\\n   src/tpl.h           \\\n   src/ui.c            \\\n   src/ui.h            \\\n   src/util.c          \\\n   src/util.h          \\\n   src/websocket.c     \\\n   src/websocket.h     \\\n   src/xmalloc.c       \\\n   src/xmalloc.h\n\nif USE_SHA1\ngoaccess_SOURCES +=  \\\n   src/sha1.c        \\\n   src/sha1.h\nendif\n\nif USE_MMAP\ngoaccess_SOURCES +=  \\\n   src/win/mman.h    \\\n   src/win/mmap.c\nendif\n\nif GEOIP_LEGACY\ngoaccess_SOURCES +=  \\\n  src/geoip1.c       \\\n  src/geoip1.h\nendif\n\nif GEOIP_MMDB\ngoaccess_SOURCES +=  \\\n   src/geoip2.c      \\\n   src/geoip1.h\nendif\n\nif DEBUG\nAM_CFLAGS = -DDEBUG -O0 -DSYSCONFDIR=\\\"$(sysconfdir)\\\"\nelse\nAM_CFLAGS = -O2 -DSYSCONFDIR=\\\"$(sysconfdir)\\\"\nendif\n\nif WITH_RDYNAMIC\nAM_LDFLAGS = -rdynamic\nendif\n\nAM_CFLAGS += -Wall -Wextra -Wnested-externs -Wformat=2 -g\nAM_CFLAGS += -Wmissing-prototypes -Wstrict-prototypes -Wmissing-declarations\nAM_CFLAGS += -Wwrite-strings -Wshadow -Wpointer-arith -Wsign-compare\nAM_CFLAGS += -Wbad-function-cast -Wcast-align\nAM_CFLAGS += -Wdeclaration-after-statement -Wshadow -Wold-style-definition\n\nif WITH_ASAN\nAM_CFLAGS += -fsanitize=address\nendif\n\ndist_man_MANS = goaccess.1\n\nSUBDIRS = po\n\nACLOCAL_AMFLAGS = -I m4\n\nDEFS = -DLOCALEDIR=\\\"$(localedir)\\\" @DEFS@\n\nEXTRA_DIST = config.rpath\n"
        },
        {
          "name": "NEWS",
          "type": "blob",
          "size": 7.7392578125,
          "content": "Copyright (C) 2009-2024\nGerardo Orellana <goaccess@prosoftcorp.com>\n\n* Version history:\n    - 1.9.3 [Friday, May 31, 2024]\n        . GoAccess 1.9.3 Released. See ChangeLog for new features/bug-fixes.\n    - 1.9.2 [Friday, April 12, 2024]\n        . GoAccess 1.9.2 Released. See ChangeLog for new features/bug-fixes.\n    - 1.9.1 [Tuesday, February 05, 2024]\n        . GoAccess 1.9.1 Released. See ChangeLog for new features/bug-fixes.\n    - 1.9 [Tuesday, January 30, 2024]\n        . GoAccess 1.9 Released. See ChangeLog for new features/bug-fixes.\n    - 1.8.1 [Tuesday, October 31, 2023]\n        . GoAccess 1.8.1 Released. See ChangeLog for new features/bug-fixes.\n    - 1.8 [Saturday, September 30, 2023]\n        . GoAccess 1.8 Released. See ChangeLog for new features/bug-fixes.\n    - 1.7.2 [Friday, March 31, 2023]\n        . GoAccess 1.7.2 Released. See ChangeLog for new features/bug-fixes.\n    - 1.7.1 [Tuesday, February 28, 2023]\n        . GoAccess 1.7.1 Released. See ChangeLog for new features/bug-fixes.\n    - 1.7 [Saturday, December 31 , 2022]\n        . GoAccess 1.7 Released. See ChangeLog for new features/bug-fixes.\n    - 1.6.5 [Monday, October 31 , 2022]\n        . GoAccess 1.6.5 Released. See ChangeLog for new features/bug-fixes.\n    - 1.6.4 [Friday, September 30 , 2022]\n        . GoAccess 1.6.4 Released. See ChangeLog for new features/bug-fixes.\n    - 1.6.3 [Thursday, August 31 , 2022]\n        . GoAccess 1.6.3 Released. See ChangeLog for new features/bug-fixes.\n    - 1.6.2 [Thursday, July 14 , 2022]\n        . GoAccess 1.6.2 Released. See ChangeLog for new features/bug-fixes.\n    - 1.6.1 [Thursday, June 30 , 2022]\n        . GoAccess 1.6.1 Released. See ChangeLog for new features/bug-fixes.\n    - 1.6 [Tuesday, May 31 , 2022]\n        . GoAccess 1.6 Released. See ChangeLog for new features/bug-fixes.\n    - 1.5.7 [Thursday, April 28 , 2022]\n        . GoAccess 1.5.7 Released. See ChangeLog for new features/bug-fixes.\n    - 1.5.6 [Wednesday, March 30, 2022]\n        . GoAccess 1.5.6 Released. See ChangeLog for new features/bug-fixes.\n    - 1.5.5 [Monday, January 31, 2022]\n        . GoAccess 1.5.5 Released. See ChangeLog for new features/bug-fixes.\n    - 1.5.4 [Saturday, December 25, 2021]\n        . GoAccess 1.5.4 Released. See ChangeLog for new features/bug-fixes.\n    - 1.5.3 [Thursday, November 25, 2021]\n        . GoAccess 1.5.3 Released. See ChangeLog for new features/bug-fixes.\n    - 1.5.2 [Tuesday, Sep 28, 2021]\n        . GoAccess 1.5.2 Released. See ChangeLog for new features/bug-fixes.\n    - 1.5.1 [Wednesday, Jun 30, 2021]\n        . GoAccess 1.5.1 Released. See ChangeLog for new features/bug-fixes.\n    - 1.5 [Wednesday, May 26, 2021]\n        . GoAccess 1.5 Released. See ChangeLog for new features/bug-fixes.\n    - 1.4.6 [Sunday, February 28, 2021]\n        . GoAccess 1.4.6 Released. See ChangeLog for new features/bug-fixes.\n    - 1.4.5 [Tuesday, January 26, 2021]\n        . GoAccess 1.4.5 Released. See ChangeLog for new features/bug-fixes.\n    - 1.4.4 [Monday, January 25, 2021]\n        . GoAccess 1.4.4 Released. See ChangeLog for new features/bug-fixes.\n    - 1.4.3 [Friday, December 04, 2020]\n        . GoAccess 1.4.3 Released. See ChangeLog for new features/bug-fixes.\n    - 1.4.2 [Monday, November 16, 2020]\n        . GoAccess 1.4.2 Released. See ChangeLog for new features/bug-fixes.\n    - 1.4.1 [Monday, November 09, 2020]\n        . GoAccess 1.4.1 Released. See ChangeLog for new features/bug-fixes.\n    - 1.4 [Monday, May 18, 2020]\n        . GoAccess 1.4 Released. See ChangeLog for new features/bug-fixes.\n    - 1.3 [Friday, November 23, 2018]\n        . GoAccess 1.3 Released. See ChangeLog for new features/bug-fixes.\n    - 1.2  [Tuesday, March 07, 2017]\n        . GoAccess 1.2 Released. See ChangeLog for new features/bug-fixes.\n    - 1.1.1  [Wednesday, November 23, 2016]\n        . GoAccess 1.1.1 Released. See ChangeLog for new features/bug-fixes.\n    - 1.1  [Tuesday, November 08, 2016]\n        . GoAccess 1.1 Released. See ChangeLog for new features/bug-fixes.\n    - 1.0.2  [Tuesday, July 05, 2016]\n        . GoAccess 1.0.2 Released. See ChangeLog for new features/bug-fixes.\n    - 1.0.1  [Friday, June 17, 2016]\n        . GoAccess 1.0.1 Released. See ChangeLog for new features/bug-fixes.\n    - 1.0  [Thursday, June 09, 2016]\n        . GoAccess 1.0 Released. See ChangeLog for new features/bug-fixes.\n    - 0.9.8  [Monday, February 29, 2016]\n        . GoAccess 0.9.8 Released. See ChangeLog for new features/bug-fixes.\n    - 0.9.7  [Monday, December 21, 2015]\n        . GoAccess 0.9.7 Released. See ChangeLog for new features/bug-fixes.\n    - 0.9.6  [Tuesday, October 27, 2015]\n        . GoAccess 0.9.6 Released. See ChangeLog for new features/bug-fixes.\n    - 0.9.5  [Thursday, October 22, 2015]\n        . GoAccess 0.9.5 Released. See ChangeLog for new features/bug-fixes.\n    - 0.9.4  [Tuesday, September 08 , 2015]\n        . GoAccess 0.9.4 Released. See ChangeLog for new features/bug-fixes.\n    - 0.9.3  [Wednesday, August 28, 2015]\n        . GoAccess 0.9.3 Released. See ChangeLog for new features/bug-fixes.\n    - 0.9.2  [Monday, July 06, 2015]\n        . GoAccess 0.9.2 Released. See ChangeLog for new features/bug-fixes.\n    - 0.9.1  [Tuesday, May 26, 2015]\n        . GoAccess 0.9.1 Released. See ChangeLog for new features/bug-fixes.\n    - 0.9  [Thursday, March 19, 2015]\n        . GoAccess 0.9 Released. See ChangeLog for new features/bug-fixes.\n    - 0.8.5  [Sunday, September 14, 2014]\n        . GoAccess 0.8.5 Released. See ChangeLog for new features/bug-fixes.\n    - 0.8.4  [Monday, September 08, 2014]\n        . GoAccess 0.8.4 Released. See ChangeLog for new features/bug-fixes.\n    - 0.8.3  [Monday, July 28, 2014]\n        . GoAccess 0.8.3 Released. See ChangeLog for new features/bug-fixes.\n    - 0.8.2  [Monday, July 21, 2014]\n        . GoAccess 0.8.2 Released. See ChangeLog for new features/bug-fixes.\n    - 0.8.1  [Monday, June 16, 2014]\n        . GoAccess 0.8.1 Released. See ChangeLog for new features/bug-fixes.\n    - 0.8  [Monday, May 20, 2013]\n        . GoAccess 0.8 Released. See ChangeLog for new features/bug-fixes.\n    - 0.7.1  [Monday, February 17, 2014]\n        . GoAccess 0.7.1 Released. See ChangeLog for new features/bug-fixes.\n    - 0.7  [Monday, December 16, 2013]\n        . GoAccess 0.7 Released. See ChangeLog for new features/bug-fixes.\n    - 0.6.1  [Monday, October 07, 2013]\n        . GoAccess 0.6.1 Released. See ChangeLog for new features/bug-fixes.\n    - 0.6  [Monday, July 15, 2013]\n        . GoAccess 0.6 Released. See ChangeLog for new features/bug-fixes.\n    - 0.5  [Monday, June 04, 2012]\n        . GoAccess 0.5 Released. See ChangeLog for new features/bug-fixes.\n    - 0.4.2  [Monday, January 03, 2011]\n        . GoAccess 0.4.2 Released. See ChangeLog for new features/bug-fixes.\n    - 0.4.1  [Monday, December 13, 2010]\n        . GoAccess 0.4.1 Released. See ChangeLog for new features/bug-fixes.\n    - 0.4  [Tuesday, November 30, 2010]\n        . GoAccess 0.4 Released. See ChangeLog for new features/bug-fixes.\n    - 0.3.3  [Monday, September 27, 2010]\n        . GoAccess 0.3.3 Released. See ChangeLog for new features/bug-fixes.\n    - 0.3.2  [Thursday, September 09 2010]\n        . GoAccess 0.3.2 Released. See ChangeLog for new features/bug-fixes.\n    - 0.3.1  [Friday, September 03, 2010]\n        . GoAccess 0.3.1 Released. See ChangeLog for new features/bug-fixes.\n    - 0.3    [Sunday, August 29, 2010]\n        . GoAccess 0.3 Released. See ChangeLog for new features/bug-fixes.\n    - 0.2    [Sunday, July 25, 2010]\n        . GoAccess 0.2 Released. See ChangeLog for new features/bug-fixes.\n    - 0.1.2  [Tuesday, July 13, 2010]\n        . GoAccess 0.1.2 Released. See ChangeLog for new features/bug-fixes.\n    - 0.1.1  [Saturday, July 10, 2010]\n        . GoAccess 0.1.1 Released. See ChangeLog for new features/bug-fixes.\n    - 0.1    [Wednesday, July 07, 2010]\n        . Welcome to the GoAccess 0.1 Released.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 18.779296875,
          "content": "GoAccess [![C build](https://github.com/allinurl/goaccess/actions/workflows/build-test.yml/badge.svg)](https://github.com/allinurl/goaccess/actions/workflows/build-test.yml) [![GoAccess](https://goaccess.io/badge)](https://goaccess.io)\n========\n\n## What is it? ##\nGoAccess is an open source **real-time web log analyzer** and interactive\nviewer that runs in a **terminal** on &ast;nix systems or through your\n**browser**. It provides **fast** and valuable HTTP statistics for system\nadministrators that require a visual server report on the fly.\nMore info at: [https://goaccess.io](https://goaccess.io/?src=gh).\n\n[![GoAccess Terminal Dashboard](https://goaccess.io/images/goaccess-real-time-term-gh.png?2022011901)](https://goaccess.io/)\n[![GoAccess HTML Dashboard](https://goaccess.io/images/goaccess-real-time-html-gh.png?202201190)](https://rt.goaccess.io/?src=gh)\n\n## Features ##\nGoAccess parses the specified web log file and outputs the data to the X\nterminal. Features include:\n\n* **Completely Real Time**<br>\n  All panels and metrics are timed to be updated every 200 ms on the terminal\n  output and every second on the HTML output.\n\n* **Minimal Configuration needed**<br>\n  You can just run it against your access log file, pick the log format and let\n  GoAccess parse the access log and show you the stats.\n\n* **Track Application Response Time**<br>\n  Track the time taken to serve the request. Extremely useful if you want to\n  track pages that are slowing down your site.\n\n* **Nearly All Web Log Formats**<br>\n  GoAccess allows any custom log format string.  Predefined options include,\n  Apache, Nginx, Amazon S3, Elastic Load Balancing, CloudFront, etc.\n\n* **Incremental Log Processing**<br>\n  Need data persistence? GoAccess has the ability to process logs incrementally\n  through the on-disk persistence options.\n\n* **Only one dependency**<br>\n  GoAccess is written in C. To run it, you only need ncurses as a dependency.\n  That's it. It even features its own Web Socket server — http://gwsocket.io/.\n\n* **Visitors**<br>\n  Determine the amount of hits, visitors, bandwidth, and metrics for slowest\n  running requests by the hour, or date.\n\n* **Metrics per Virtual Host**<br>\n  Have multiple Virtual Hosts (Server Blocks)? It features a panel that\n  displays which virtual host is consuming most of the web server resources.\n\n* **ASN (Autonomous System Number mapping)**<br>\n  Great for detecting malicious traffic patterns and block them accordingly.\n\n* **Color Scheme Customizable**<br>\n  Tailor GoAccess to suit your own color taste/schemes. Either through the\n  terminal, or by simply applying the stylesheet on the HTML output.\n\n* **Support for Large Datasets**<br>\n  GoAccess features the ability to parse large logs due to its optimized\n  in-memory hash tables. It has very good memory usage and pretty good\n  performance. This storage has support for on-disk persistence as well.\n\n* **Docker Support**<br>\n  Ability to build GoAccess' Docker image from upstream. You can still fully\n  configure it, by using Volume mapping and editing `goaccess.conf`.  See\n  [Docker](https://github.com/allinurl/goaccess#docker) section below.\n\n### Nearly all web log formats... ###\nGoAccess allows any custom log format string. Predefined options include, but\nnot limited to:\n\n* Amazon CloudFront (Download Distribution).\n* Amazon Simple Storage Service (S3)\n* AWS Elastic Load Balancing\n* Combined Log Format (XLF/ELF) Apache | Nginx\n* Common Log Format (CLF) Apache\n* Google Cloud Storage.\n* Apache virtual hosts\n* Squid Native Format.\n* W3C format (IIS).\n* Caddy's JSON Structured format.\n* Traefik's CLF flavor\n\n## Why GoAccess? ##\nGoAccess was designed to be a fast, terminal-based log analyzer. Its core idea\nis to quickly analyze and view web server statistics in real time without\nneeding to use your browser (_great if you want to do a quick analysis of your\naccess log via SSH, or if you simply love working in the terminal_).\n\nWhile the terminal output is the default output, it has the capability to\ngenerate a complete, self-contained, real-time [**`HTML`**](https://rt.goaccess.io/?src=gh)\nreport, as well as a [**`JSON`**](https://goaccess.io/json?src=gh), and\n[**`CSV`**](https://goaccess.io/goaccess_csv_report.csv?src=gh) report.\n\nYou can see it more of a monitor command tool than anything else.\n\n## Installation ##\n\n### Build from release\n\nGoAccess can be compiled and used on *nix systems.\n\nDownload, extract and compile GoAccess with:\n\n    $ wget https://tar.goaccess.io/goaccess-1.9.3.tar.gz\n    $ tar -xzvf goaccess-1.9.3.tar.gz\n    $ cd goaccess-1.9.3/\n    $ ./configure --enable-utf8 --enable-geoip=mmdb\n    $ make\n    # make install\n\n### Build from GitHub (Development) ###\n\n    $ git clone https://github.com/allinurl/goaccess.git\n    $ cd goaccess\n    $ autoreconf -fiv\n    $ ./configure --enable-utf8 --enable-geoip=mmdb\n    $ make\n    # make install\n\n### Distributions ###\n\nIt is easiest to install GoAccess on GNU+Linux using the preferred package manager\nof your GNU+Linux distribution. Please note that not all distributions will have\nthe latest version of GoAccess available.\n\n#### Debian/Ubuntu ####\n\n    # apt-get install goaccess\n\n**Note:** It is likely this will install an outdated version of GoAccess. To\nmake sure that you're running the latest stable version of GoAccess see\nalternative option below.\n\n#### Official GoAccess Debian & Ubuntu repository ####\n\n    $ wget -O - https://deb.goaccess.io/gnugpg.key | gpg --dearmor | sudo tee /usr/share/keyrings/goaccess.gpg >/dev/null\n    $ echo \"deb [signed-by=/usr/share/keyrings/goaccess.gpg arch=$(dpkg --print-architecture)] https://deb.goaccess.io/ $(lsb_release -cs) main\" | sudo tee /etc/apt/sources.list.d/goaccess.list\n    $ sudo apt-get update\n    $ sudo apt-get install goaccess\n\n**Note**:\n* `.deb` packages in the official repo are available through HTTPS as well. You may need to install `apt-transport-https`.\n\n#### Fedora ####\n\n    # yum install goaccess\n\n#### Arch ####\n\n    # pacman -S goaccess\n\n#### Gentoo ####\n\n    # emerge net-analyzer/goaccess\n\n#### OS X / Homebrew ####\n\n    # brew install goaccess\n\n#### FreeBSD ####\n\n    # cd /usr/ports/sysutils/goaccess/ && make install clean\n    # pkg install sysutils/goaccess\n\n#### OpenBSD ####\n\n    # cd /usr/ports/www/goaccess && make install clean\n    # pkg_add goaccess\n\n#### openSUSE  ####\n\n    # zypper ar -f obs://server:http http\n    # zypper in goaccess\n\n#### OpenIndiana ####\n\n    # pkg install goaccess\n\n#### pkgsrc (NetBSD, Solaris, SmartOS, ...) ####\n\n    # pkgin install goaccess\n\n#### Windows ####\n\nGoAccess can be used in Windows through Cygwin. See Cygwin's <a\nhref=\"https://goaccess.io/faq#installation\">packages</a>.  Or through the\nGNU+Linux Subsystem on Windows 10.\n\n#### Distribution Packages ####\n\nGoAccess has minimal requirements, it's written in C and requires only ncurses.\nHowever, below is a table of some optional dependencies in some distros to\nbuild GoAccess from source.\n\n| Distro                 | NCurses          | GeoIP (opt)      | GeoIP2 (opt)          |  OpenSSL (opt)     |\n| ---------------------- | ---------------- | ---------------- | --------------------- | -------------------|\n| **Ubuntu/Debian**      | libncurses-dev   | libgeoip-dev     | libmaxminddb-dev      |  libssl-dev        |\n| **RHEL/CentOS**        | ncurses-devel    | geoip-devel      | libmaxminddb-devel    |  openssl-devel     |\n| **Arch**               | ncurses          | geoip            | libmaxminddb          |  openssl           |\n| **Gentoo**             | sys-libs/ncurses | dev-libs/geoip   | dev-libs/libmaxminddb |  dev-libs/openssl  |\n| **Slackware**          | ncurses          | GeoIP            | libmaxminddb          |  openssl           |\n\n**Note**: You may need to install build tools like `gcc`, `autoconf`,\n`gettext`, `autopoint` etc. for compiling/building software from source. e.g.,\n`base-devel`, `build-essential`, `\"Development Tools\"`.\n\n#### Docker ####\n\nA Docker image has been updated, capable of directing output from an access log. If you only want to output a report, you can pipe a log from the external environment to a Docker-based process:\n\n    touch report.html\n    cat access.log | docker run --rm -i -v ./report.html:/report.html -e LANG=$LANG allinurl/goaccess -a -o report.html --log-format COMBINED -\n\nOR real-time\n\n    tail -F access.log | docker run -p 7890:7890 --rm -i -e LANG=$LANG allinurl/goaccess -a -o report.html --log-format COMBINED --real-time-html -\n\n##### Build in isolated container\n\nYou can also build the binary for Debian based systems in an isolated container environment to prevent cluttering your local system with the development libraries:\n\n    $ curl -L \"https://github.com/allinurl/goaccess/archive/refs/heads/master.tar.gz\" | tar -xz && cd goaccess-master\n    $ docker build -t goaccess/build.debian-12 -f Dockerfile.debian-12 .\n    $ docker run -i --rm -v $PWD:/goaccess goaccess/build.debian-12 > goaccess\n\nYou can read more about using the docker image in [DOCKER.md](https://github.com/allinurl/goaccess/blob/master/DOCKER.md).\n\n## Storage ##\n\n#### Default Hash Tables ####\n\nIn-memory storage provides better performance at the cost of limiting the\ndataset size to the amount of available physical memory. GoAccess uses\nin-memory hash tables.  It has very good memory usage and pretty good\nperformance. This storage has support for on-disk persistence as well.\n\n## Command Line / Config Options ##\nSee [**options**](https://goaccess.io/man#options) that can be supplied to the command or\nspecified in the configuration file. If specified in the configuration file, long\noptions need to be used without prepending `--`.\n\n## Usage / Examples ##\n**Note**: Piping data into GoAccess won't prompt a log/date/time\nconfiguration dialog, you will need to previously define it in your\nconfiguration file or in the command line.\n\n### Getting Started ###\n\nTo output to a terminal and generate an interactive report:\n\n    # goaccess access.log\n\nTo generate an HTML report:\n\n    # goaccess access.log -a > report.html\n\nTo generate a JSON report file:\n\n    # goaccess access.log -a -d -o report.json\n\nTo generate a CSV report to stdout:\n\n    # goaccess access.log --no-csv-summary -o csv\n\nGoAccess also allows great flexibility for real-time filtering and parsing. For\ninstance, to quickly diagnose issues by monitoring logs since goaccess was\nstarted:\n\n    # tail -f access.log | goaccess -\n\nAnd even better, to filter while maintaining opened a pipe to preserve\nreal-time analysis, we can make use of `tail -f` and a matching pattern tool\nsuch as `grep`, `awk`, `sed`, etc.:\n\n    # tail -f access.log | grep -i --line-buffered 'firefox' | goaccess --log-format=COMBINED -\n\nor to parse from the beginning of the file while maintaining the pipe opened\nand applying a filter\n\n    # tail -f -n +0 access.log | grep -i --line-buffered 'firefox' | goaccess -o report.html --real-time-html -\n\n\n### Multiple Log files ###\n\nThere are several ways to parse multiple logs with GoAccess. The simplest is to\npass multiple log files to the command line:\n\n    # goaccess access.log access.log.1\n\nIt's even possible to parse files from a pipe while reading regular files:\n\n    # cat access.log.2 | goaccess access.log access.log.1 -\n\n**Note**: the single dash is appended to the command line to let GoAccess\nknow that it should read from the pipe.\n\nNow if we want to add more flexibility to GoAccess, we can use `zcat --force`\nto read compressed and uncompressed files. For instance, if we would\nlike to process all log files `access.log*`, we can do:\n\n    # zcat --force access.log* | goaccess -\n\n_Note_: On Mac OS X, use `gunzip -c` instead of `zcat`.\n\n### Multi-thread Support ###\n\nUse `--jobs=<count>` (or `-j`) to enable multi-thread parsing. For example:\n\n    # goaccess access.log -o report.html -j 4\n\n\nAnd use `--chunk-size=<256-32768>` to adjust chunk size, the default chunk size is 1024. For example:\n\n    # goaccess access.log -o report.html -j 4 --chunk-size=8192\n\n\n### Real-time HTML outputs ###\n\nGoAccess has the ability the output real-time data in the HTML report. You can\neven email the HTML file since it is composed of a single file with no external\nfile dependencies, how neat is that!\n\nThe process of generating a real-time HTML report is very similar to the\nprocess of creating a static report. Only `--real-time-html` is needed to make\nit real-time.\n\n    # goaccess access.log -o /usr/share/nginx/html/your_site/report.html --real-time-html\n\nTo view the report you can navigate to `http://your_site/report.html`.\n\nBy default, GoAccess will use the host name of the generated report.\nOptionally, you can specify the URL to which the client's browser will connect\nto. See [FAQ](https://goaccess.io/faq) for a more detailed example.\n\n    # goaccess access.log -o report.html --real-time-html --ws-url=goaccess.io\n\nBy default, GoAccess listens on port 7890, to use a different port other than\n7890, you can specify it as (make sure the port is opened):\n\n    # goaccess access.log -o report.html --real-time-html --port=9870\n\nAnd to bind the WebSocket server to a different address other than 0.0.0.0, you\ncan specify it as:\n\n    # goaccess access.log -o report.html --real-time-html --addr=127.0.0.1\n\n**Note**: To output real time data over a TLS/SSL connection, you need to use\n`--ssl-cert=<cert.crt>` and `--ssl-key=<priv.key>`.\n\n### Filtering ###\n\n#### Working with dates ####\n\nAnother useful pipe would be filtering dates out of the web log\n\nThe following will get all HTTP requests starting on `05/Dec/2010` until the\nend of the file.\n\n    # sed -n '/05\\/Dec\\/2010/,$ p' access.log | goaccess -a -\n\nor using relative dates such as yesterdays or tomorrows day:\n\n    # sed -n '/'$(date '+%d\\/%b\\/%Y' -d '1 week ago')'/,$ p' access.log | goaccess -a -\n\nIf we want to parse only a certain time-frame from DATE a to DATE b, we can do:\n\n    # sed -n '/5\\/Nov\\/2010/,/5\\/Dec\\/2010/ p' access.log | goaccess -a -\n\nIf we want to preserve only certain amount of data and recycle storage, we can\nkeep only a certain number of days. For instance to keep & show the last 5\ndays:\n\n    # goaccess access.log --keep-last=5\n\n#### Virtual hosts ####\n\nAssuming your log contains the virtual host field. For instance:\n\n    vhost.io:80 8.8.4.4 - - [02/Mar/2016:08:14:04 -0600] \"GET /shop HTTP/1.1\" 200 615 \"-\" \"Googlebot-Image/1.0\"\n\nAnd you would like to append the virtual host to the request in order to see\nwhich virtual host the top urls belong to:\n\n    awk '$8=$1$8' access.log | goaccess -a -\n\nTo do the same, but also use real-time filtering and parsing:\n\n    tail -f  access.log | unbuffer -p awk '$8=$1$8' | goaccess -a -\n\nTo exclude a list of virtual hosts you can do the following:\n\n    # grep -v \"`cat exclude_vhost_list_file`\" vhost_access.log | goaccess -\n\n#### Files, status codes and bots ####\n\nTo parse specific pages, e.g., page views, `html`, `htm`, `php`, etc. within a\nrequest:\n\n    # awk '$7~/\\.html|\\.htm|\\.php/' access.log | goaccess -\n\nNote, `$7` is the request field for the common and combined log format,\n(without Virtual Host), if your log includes Virtual Host, then you probably\nwant to use `$8` instead. It's best to check which field you are shooting for,\ne.g.:\n\n    # tail -10 access.log | awk '{print $8}'\n\nOr to parse a specific status code, e.g., 500 (Internal Server Error):\n\n    # awk '$9~/500/' access.log | goaccess -\n\nOr multiple status codes, e.g., all 3xx and 5xx:\n\n    # tail -f -n +0 access.log | awk '$9~/3[0-9]{2}|5[0-9]{2}/' | goaccess -o out.html -\n\nAnd to get an estimated overview of how many bots (crawlers) are hitting your server:\n\n    # tail -F -n +0 access.log | grep -i --line-buffered 'bot' | goaccess -\n\n### Tips ###\n\nAlso, it is worth pointing out that if we want to run GoAccess at lower\npriority, we can run it as:\n\n    # nice -n 19 goaccess -f access.log -a\n\nand if you don't want to install it on your server, you can still run it from\nyour local machine!\n\n    # ssh -n root@server 'tail -f /var/log/apache2/access.log' | goaccess -\n\n**Note:** SSH requires `-n` so GoAccess can read from stdin. Also, make sure to\nuse SSH keys for authentication as it won't work if a passphrase is required.\n\n#### Troubleshooting ####\n\nWe receive many questions and issues that have been answered previously.\n\n* Date/time matching problems? Check that your log format and the system locale in which you run GoAccess match. See [#1571](https://github.com/allinurl/goaccess/issues/1571#issuecomment-543186858)\n* Problems with pattern matching? Spaces are often a problem, see for instance [#136](https://github.com/allinurl/goaccess/issues/136), [#1579](https://github.com/allinurl/goaccess/issues/1579)\n* Other issues matching log entries: See [>200 closed issues regarding log/date/time formats](https://github.com/allinurl/goaccess/issues?q=is%3Aissue+is%3Aclosed+label%3A%22log%2Fdate%2Ftime+format%22)\n* Problems with log processing? See [>111 issues regarding log processing](https://github.com/allinurl/goaccess/issues?q=is%3Aissue+is%3Aclosed+label%3Alog-processing)\n\n\n#### Incremental log processing ####\n\nGoAccess has the ability to process logs incrementally through its internal\nstorage and dump its data to disk. It works in the following way:\n\n1. A dataset must be persisted first with `--persist`, then the same dataset\ncan be loaded with.\n2. `--restore`.  If new data is passed (piped or through a log file), it will\nappend it to the original dataset.\n\n##### NOTES #####\n\nGoAccess keeps track of inodes of all the files processed (assuming files will\nstay on the same partition), in addition, it extracts a snippet of data from\nthe log along with the last line parsed of each file and the timestamp of the\nlast line parsed. e.g., `inode:29627417|line:20012|ts:20171231235059`\n\nFirst, it compares if the snippet matches the log being parsed, if it does, it\nassumes the log hasn't changed drastically, e.g., hasn't been truncated. If\nthe inode does not match the current file, it parses all lines. If the current\nfile matches the inode, it then reads the remaining lines and updates the count\nof lines parsed and the timestamp. As an extra precaution, it won't parse log\nlines with a timestamp ≤ than the one stored.\n\nPiped  data works based off the timestamp of the last line read. For instance,\nit will parse and discard all incoming entries until it finds a timestamp >=\nthan the one stored.\n\n##### Examples #####\n\n    // last month access log\n    # goaccess access.log.1 --persist\n\nthen, load it with\n\n    // append this month access log, and preserve new data\n    # goaccess access.log --restore --persist\n\nTo read persisted data only (without parsing new data)\n\n    # goaccess --restore\n\n## Contributing ##\n\nAny help on GoAccess is welcome. The most helpful way is to try it out and give\nfeedback. Feel free to use the GitHub issue tracker and pull requests to\ndiscuss and submit code changes.\n\nYou can contribute to our translations by editing the .po files direct on GitHub or using the visual interface [inlang.com](https://inlang.com/editor/github.com/allinurl/goaccess)\n\n[![translation badge](https://inlang.com/badge?url=github.com/allinurl/goaccess)](https://inlang.com/editor/github.com/allinurl/goaccess?ref=badge)\n\nEnjoy!\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.2802734375,
          "content": "# Security Policy\n\nFound a security issue in [GoAccess](https://github.com/allinurl/goaccess)?\nRead on.\n\n## Reporting a Vulnerability\n\nGoAccess takes all security bugs seriously. Thank you for improving the\nsecurity of `goaccess`. I appreciate your efforts and responsible disclosure\nand will make every effort to acknowledge your contributions.\n\nVulnerabilities should be reported to [hello@goaccess.io](mailto:hello@goaccess.io) which is a private,\nmaintainer-only email address.\n\n\nWhen I receive a security bug report, I will work on the fix and prepare a\nrelease including the following steps:\n\n  * Confirm the problem and determine the affected versions.\n  * Audit the code to find any potential similar problems.\n\n## Comments on this Policy\n\nIf you have suggestions on how this process could be improved please submit a\npull request.\n\nWhen reporting an issue, where possible, please provide the following (if\npossible):\n\n* Commit version where the issue was introduced.\n* A proof of concept (plaintext; or ideally send a patch to same email address)\n* Steps to reproduce\n* Your recommended fixes, if any.\n\n> Note: Please do not open public issues for security issues, as GitHub does\n> not provide facility for private issues, and deleting the issue makes it hard\n> to triage/respond back to the reporter.\n"
        },
        {
          "name": "TODO",
          "type": "blob",
          "size": 0.3544921875,
          "content": "1Copyright (C) 2009-2024\n6erardo Orellana <goaccess@prosoftcorp.com>\n\nFor a more comprehensive list of to-do items, please refer to the GitHub site.\nhttps://github.com/allinurl/goaccess/issues\n\nor visit https://goaccess.io/faq#todo\n\nIf you are interested in working on any of the items listed in there, email\ngoaccess@prosoftcorp.com or better, open a new issue:\n"
        },
        {
          "name": "build-dynamic.sh",
          "type": "blob",
          "size": 0.4658203125,
          "content": "#!/usr/bin/env sh\n# Build dynamic linked binaries on Debian.\nset -o nounset   ## set -u : exit the script if you try to use an uninitialised variable\nset -o errexit   ## set -e : exit the script if any statement returns a non-true return value\n\n# should be either of \"mmdb\" or \"legacy\"\ngeoip=${1:-\"mmdb\"}\n\nautoreconf -fi > /dev/null 2>&1\n./configure CFLAGS=-Werror --enable-utf8 --with-openssl --with-getline --enable-geoip=\"$geoip\" >/dev/null\nmake -j > /dev/null\ncat goaccess\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 7.99609375,
          "content": "#                                               -*- Autoconf -*-\n# Process this file with autoconf to produce a configure script.\n\nAC_PREREQ([2.69])\nAC_INIT([goaccess],[1.9.3],[hello@goaccess.io],[],[https://goaccess.io])\nAM_INIT_AUTOMAKE([foreign])\nAC_CONFIG_SRCDIR([src/goaccess.c])\nAC_CONFIG_HEADERS([src/config.h])\n\n# Use empty CFLAGS by default so autoconf does not add\n# CFLAGS=\"-O2 -g\"\n# NOTE: Needs to go after AC_INIT and before AC_PROG_CC to select an\n# empty default instead.\n: ${CFLAGS=\"\"}\n\n# Prefer host default compiler\nAC_PROG_CC([cc gcc clang])\nAM_PROG_CC_C_O\n\n# Check for programs\nAM_GNU_GETTEXT([external])\nAM_GNU_GETTEXT_VERSION([0.19])\n# Fix `undefined reference to `libintl_gettext'` on docker:\nAC_CHECK_LIB([intl], [libintl_dgettext])\n# Fix undefined reference to dgettext on NetBSD\nAC_CHECK_LIB([intl], [dgettext])\n\n# pthread\nAC_CHECK_LIB([pthread], [pthread_create], [], [AC_MSG_ERROR([pthread is missing])])\nCFLAGS=\"$CFLAGS -pthread\"\n\n# DEBUG\nAC_ARG_ENABLE([debug],[AS_HELP_STRING([--enable-debug],[Create a debug build. Default is disabled])],[debug=\"$enableval\"],[debug=no])\n\nif test \"$debug\" = \"yes\"; then\n  AC_DEFINE([_DEBUG], 1, [Debug option])\nfi\nAM_CONDITIONAL([DEBUG], [test \"x$debug\" = \"xyes\"])\n\n# Handle rdynamic only on systems using GNU ld\nAC_CANONICAL_HOST\nAC_MSG_CHECKING([whether to build with rdynamic for GNU ld])\nwith_rdyanimc=yes\ncase \"$host_os\" in\n  *darwin*|*cygwin*|*aix*|*mingw*) with_rdyanimc=no\n  ;;\nesac\nAC_MSG_RESULT([$with_rdyanimc])\nAM_CONDITIONAL([WITH_RDYNAMIC], [test \"x$with_rdyanimc\" = \"xyes\"])\n\n# Add ASAN\nAC_CANONICAL_HOST\nAC_ARG_ENABLE([asan],\n  [AS_HELP_STRING([--enable-asan], [Enable address sanitizer])],\n  [with_asan=$enableval], [with_asan=no])\nAC_MSG_CHECKING([whether to build with address sanitizer])\ncase \"$host_os\" in\n  *cygwin*|*aix*|*mingw*) with_asan=no\n  ;;\nesac\nAC_MSG_RESULT([$with_asan])\nAM_CONDITIONAL([WITH_ASAN], [test \"x$with_asan\" = \"xyes\"])\n\n# Check for libc implementation on NetBSD\nAC_CHECK_HEADERS([sha.h sha1.h])\nAC_CHECK_FUNCS([SHA1Init])\nAM_CONDITIONAL([USE_SHA1], [test \"x$ac_cv_func_SHA1Init\" != \"xyes\"])\n\n# Build with OpenSSL\nAC_ARG_WITH([openssl],[AS_HELP_STRING([--with-openssl],[Build with OpenSSL support. Default is disabled])],[openssl=\"$withval\"],[openssl=\"no\"])\n\nif test \"$openssl\" = 'yes'; then\n  AC_CHECK_LIB([ssl], [SSL_CTX_new],,[AC_MSG_ERROR([ssl library missing])])\n  AC_CHECK_LIB([crypto], [CRYPTO_free],,[AC_MSG_ERROR([crypto library missing])])\n  AC_CHECK_LIB([ssl], [SSL_CIPHER_standard_name], [AC_DEFINE([HAVE_CIPHER_STD_NAME], 1, [HAVE_CIPHER_STD_NAME])])\nfi\n\n# GeoIP\nAC_ARG_ENABLE([geoip],[AS_HELP_STRING([--enable-geoip],[Enable GeoIP country lookup. Supported types: mmdb, legacy. Default is disabled])],[geoip=\"$enableval\"],[geoip=no])\n\ngeolocation=\"N/A\"\nif test \"$geoip\" = \"mmdb\"; then\n  AC_CHECK_LIB([maxminddb], [MMDB_open], [], [AC_MSG_ERROR([\n    *** Missing development files for libmaxminddb library.\n  ])])\n  geolocation=\"GeoIP2\"\n  AC_DEFINE([HAVE_GEOLOCATION], 1, [Build using GeoIP.])\nelif test \"$geoip\" = \"legacy\"; then\n  AC_CHECK_LIB([GeoIP], [GeoIP_new], [], [AC_MSG_ERROR([\n    *** Missing development files for the GeoIP library\n  ])])\n  geolocation=\"GeoIP Legacy\"\n  AC_DEFINE([HAVE_GEOLOCATION], 1, [Build using GeoIP.])\nelif test \"$geoip\" != \"no\"; then\n  AC_MSG_ERROR([*** Invalid argument for GeoIP: $geoip])\nfi\nAM_CONDITIONAL([GEOIP_LEGACY], [test \"x$geoip\" = \"xlegacy\"])\nAM_CONDITIONAL([GEOIP_MMDB], [test \"x$geoip\" = \"xmmdb\"])\n\n# GNU getline / POSIX.1-2008\nAC_ARG_WITH([getline],[AS_HELP_STRING([--with-getline],[Build using dynamic line buffer. Default is disabled])],[with_getline=$withval],[with_getline=no])\n\nif test \"$with_getline\" = \"yes\"; then\n  AC_DEFINE([WITH_GETLINE], 1, [Build using GNU getline.])\nfi\n\n# UTF8\nAC_ARG_ENABLE([utf8],[AS_HELP_STRING([--enable-utf8],[Enable ncurses library that handles wide characters. Default is disabled])],[utf8=\"$enableval\"],[utf8=no])\n\nif test \"$utf8\" = \"yes\"; then\n  libncursesw=ncursesw\n  # Simply called libncurses on OS X\n  case \"$host_os\" in\n    *darwin*) libncursesw=ncurses\n    ;;\n  esac\n\n  AC_CHECK_LIB([$libncursesw], [mvaddwstr], [],\n      [AC_MSG_ERROR([*** Missing development libraries for ncursesw])])\n  AC_SEARCH_LIBS([tputs], [tinfow], ,[AC_MSG_ERROR([Cannot find a library providing tputs])])\n  AC_DEFINE([HAVE_LIBNCURSESW], [1], [\"ncursesw is present.\"])\n\n  have_ncurses=\"yes\"\n  AC_CHECK_HEADERS([ncursesw/ncurses.h],[have_ncurses=yes], [], [\n  #ifdef HAVE_NCURSESW_NCURSES_H\n  #include <ncursesw/ncurses.h>\n  #endif\n  ])\n\n  AC_CHECK_HEADERS([ncurses.h],[have_ncurses=yes], [], [\n  #ifdef HAVE_NCURSES_H\n  #include <ncurses.h>\n  #endif\n  ])\n\n  if test \"$have_ncurses\" != \"yes\"; then\n    AC_MSG_ERROR([Missing ncursesw header file])\n  fi\nelse\n  AC_CHECK_LIB([ncurses], [refresh], [],\n    [AC_CHECK_LIB([curses], [refresh], [],\n    [AC_MSG_ERROR([*** Missing development libraries for ncurses])])])\n  AC_SEARCH_LIBS([tputs], [tinfo], ,[AC_MSG_ERROR([Cannot find a library providing tputs])])\n\n  have_ncurses=\"yes\"\n  AC_CHECK_HEADERS([ncurses/ncurses.h],[have_ncurses=yes], [], [\n  #ifdef HAVE_NCURSES_NCURSES_H\n  #include <ncurses/ncurses.h>\n  #endif\n  ])\n\n  AC_CHECK_HEADERS([ncurses.h],[have_ncurses=yes], [], [\n  #ifdef HAVE_NCURSES_H\n  #include <ncurses.h>\n  #endif\n  ])\n\n  AC_CHECK_HEADERS([curses.h],[have_ncurses=yes], [], [\n  #ifdef HAVE_CURSES_H\n  #include <curses.h>\n  #endif\n  ])\n\n  if test \"$have_ncurses\" != \"yes\"; then\n    AC_MSG_ERROR([Missing ncurses header file])\n  fi\nfi\n\n# Default Hash\nstorage=\"In-Memory with On-Disk Persistent Storage\"\n\nHAS_SEDTR=no\nAC_CHECK_PROG([SED_CHECK],[sed],[yes],[no])\nif test x\"$SED_CHECK\" = x\"yes\" ; then\n  AC_CHECK_PROG([TR_CHECK],[tr],[yes],[no])\n  if test x\"$TR_CHECK\" = x\"yes\" ; then\n    HAS_SEDTR=yes\n  fi\nfi\nAM_CONDITIONAL([HAS_SEDTR], [test \"x$HAS_SEDTR\" = xyes])\n\n# detect Cygwin or MinGW and use mmap family replacements\nUSE_MMAP=no\ncase $host in\n  *-*-mingw32* | *-*-cygwin* | *-*-windows*)\n  USE_MMAP=yes\n  AC_MSG_NOTICE([using custom mmap for Cygwin/MinGW])\n  ;;\nesac\nAM_CONDITIONAL([USE_MMAP], [test \"x$USE_MMAP\" = xyes])\n\n# Solaris\nAC_CHECK_LIB([nsl], [gethostbyname])\nAC_CHECK_LIB([socket], [socket])\n\n# Checks for header files.\nAC_HEADER_STDC\nAC_CHECK_HEADERS([arpa/inet.h])\nAC_CHECK_HEADERS([fcntl.h])\nAC_CHECK_HEADERS([inttypes.h])\nAC_CHECK_HEADERS([limits.h])\nAC_CHECK_HEADERS([locale.h])\nAC_CHECK_HEADERS([netdb.h])\nAC_CHECK_HEADERS([netinet/in.h])\nAC_CHECK_HEADERS([stddef.h])\nAC_CHECK_HEADERS([stdint.h])\nAC_CHECK_HEADERS([stdlib.h])\nAC_CHECK_HEADERS([string.h])\nAC_CHECK_HEADERS([strings.h])\nAC_CHECK_HEADERS([sys/socket.h])\nAC_CHECK_HEADERS([sys/time.h])\nAC_CHECK_HEADERS([unistd.h])\n\n# Checks for typedefs, structures, and compiler characteristics.\nAC_C_CONST\nAC_CHECK_TYPES([ptrdiff_t])\nAC_STRUCT_TM\nAC_TYPE_INT64_T\nAC_TYPE_INT8_T\nAC_TYPE_OFF_T\nAC_TYPE_SIZE_T\nAC_TYPE_UINT32_T\nAC_TYPE_UINT64_T\nAC_TYPE_UINT8_T\n\n# Checks for library functions.\nAC_FUNC_FSEEKO\nAC_FUNC_MEMCMP\nAC_FUNC_MKTIME\nAC_FUNC_STAT\nAC_FUNC_STRFTIME\nAC_FUNC_STRTOD\nAC_CHECK_FUNCS([floor])\nAC_CHECK_FUNCS([gethostbyaddr])\nAC_CHECK_FUNCS([gethostbyname])\nAC_CHECK_FUNCS([gettimeofday])\nAC_CHECK_FUNCS([malloc])\nAC_CHECK_FUNCS([memmove])\nAC_CHECK_FUNCS([memset])\nAC_CHECK_FUNCS([mkfifo])\nAC_CHECK_FUNCS([poll])\nAC_CHECK_FUNCS([realloc])\nAC_CHECK_FUNCS([realpath])\nAC_CHECK_FUNCS([regcomp])\nAC_CHECK_FUNCS([setlocale])\nAC_CHECK_FUNCS([socket])\nAC_CHECK_FUNCS([strcasecmp])\nAC_CHECK_FUNCS([strchr])\nAC_CHECK_FUNCS([strcspn])\nAC_CHECK_FUNCS([strdup])\nAC_CHECK_FUNCS([strerror])\nAC_CHECK_FUNCS([strncasecmp])\nAC_CHECK_FUNCS([strpbrk])\nAC_CHECK_FUNCS([strrchr])\nAC_CHECK_FUNCS([strspn])\nAC_CHECK_FUNCS([strstr])\nAC_CHECK_FUNCS([strtol])\nAC_CHECK_FUNCS([strtoull])\nAC_CHECK_FUNCS([timegm])\n\nAC_CONFIG_FILES([Makefile po/Makefile.in])\nAC_OUTPUT\n\ncat << EOF\n\nYour build configuration:\n\n  Prefix         : $prefix\n  Package        : $PACKAGE_NAME\n  Version        : $VERSION\n  Compiler flags : $CFLAGS\n  Linker flags   : $LIBS $LDFLAGS\n  UTF-8 support  : $utf8\n  Dynamic buffer : $with_getline\n  ASan           : $with_asan\n  Geolocation    : $geolocation\n  Storage method : $storage\n  TLS/SSL        : $openssl\n  Bugs           : $PACKAGE_BUGREPORT\n\nEOF\n"
        },
        {
          "name": "goaccess.1",
          "type": "blob",
          "size": 42.4384765625,
          "content": ".TH goaccess 1 \"MAY 2024\" GNU+Linux \"User Manuals\"\n.SH NAME\ngoaccess \\- fast web log analyzer and interactive viewer.\n.SH SYNOPSIS\n.LP\n.B goaccess [filename] [options...] [-c][-M][-H][-q][-d][...]\n.SH DESCRIPTION\n.B goaccess\nGoAccess is an open source real-time web log analyzer and interactive viewer\nthat runs in a\n.I terminal\nin *nix systems or through your\n.I browser.\n.P\nIt provides fast and valuable HTTP statistics for system administrators that\nrequire a visual server report on the fly.\n.P\nGoAccess parses the specified web log file and outputs the data to the X\nterminal. Features include:\n\n.IP \"General Statistics:\"\nThis panel gives a summary of several metrics, such as the number of valid and\ninvalid requests, time taken to analyze the dataset, unique visitors, requested\nfiles, static files (CSS, ICO, JPG, etc) HTTP referrers, 404s, size of the\nparsed log file and bandwidth consumption.\n.IP \"Unique visitors\"\nThis panel shows metrics such as hits, unique visitors and cumulative bandwidth\nper date. HTTP requests containing the same IP, the same date, and the same\nuser agent are considered a unique visitor. By default, it includes web\ncrawlers/spiders.\n.IP\nOptionally, date specificity can be set to the hour level using\n.I --date-spec=hr\nwhich will display dates such as 05/Jun/2016:16, or to the minute level\nproducing 05/Jun/2016:16:59. This is great if you want to track your daily\ntraffic at the hour or minute level.\n.IP \"Requested files\"\nThis panel displays the most requested (non-static) files on your web server.\nIt shows hits, unique visitors, and percentage, along with the cumulative\nbandwidth, protocol, and the request method used.\n.IP \"Requested static files\"\nLists the most frequently static files such as: JPG, CSS, SWF, JS, GIF, and PNG\nfile types, along with the same metrics as the last panel. Additional static\nfiles can be added to the configuration file.\n.IP \"404 or Not Found\"\nDisplays the same metrics as the previous request panels, however, its data\ncontains all pages that were not found on the server, or commonly known as 404\nstatus code.\n.IP \"Hosts\"\nThis panel has detailed information on the hosts themselves. This is great for\nspotting aggressive crawlers and identifying who's eating your bandwidth.\n\nExpanding the panel can display more information such as host's reverse DNS\nlookup result, country of origin and city. If the\n.I -a\nargument is enabled, a list of user agents can be displayed by selecting the\ndesired IP address, and then pressing ENTER.\n.IP \"Operating Systems\"\nThis panel will report which operating system the host used when it hit the\nserver. It attempts to provide the most specific version of each operating\nsystem.\n.IP \"Browsers\"\nThis panel will report which browser the host used when it hit the server. It\nattempts to provide the most specific version of each browser.\n.IP \"Visit Times\"\nThis panel will display an hourly report. This option displays 24 data points,\none for each hour of the day.\n.IP\nOptionally, hour specificity can be set to the tenth of an hour level using\n.I --hour-spec=min\nwhich will display hours as 16:4 This is great if you want to spot peaks of\ntraffic on your server.\n.IP \"Virtual Hosts\"\nThis panel will display all the different virtual hosts parsed from the access\nlog. This panel is displayed if\n.I %v\nis used within the log-format string.\n.IP \"Referrers URLs\"\nIf the host in question accessed the site via another resource, or was\nlinked/diverted to you from another host, the URL they were referred from will\nbe provided in this panel. See `--ignore-panel` in your configuration file to\nenable it.\n.I disabled\nby default.\n.IP \"Referring Sites\"\nThis panel will display only the host part but not the whole URL. The URL where\nthe request came from.\n.IP \"Keyphrases\"\nIt reports keyphrases used on Google search, Google cache, and Google translate\nthat have lead to your web server. At present, it only supports Google search\nqueries via HTTP. See `--ignore-panel` in your configuration file to enable it.\n.I disabled\nby default.\n.IP \"Geo Location\"\nDetermines where an IP address is geographically located. Statistics are broken\ndown by continent and country. It needs to be compiled with GeoLocation\nsupport.\n.IP \"HTTP Status Codes\"\nThe values of the numeric status code to HTTP requests.\n.IP \"ASN\"\nThis panel displays ASN (Autonomous System Numbers) data for GeoIP2 and legacy\ndatabases. Great for detecting malicious traffic and blocking accordingly.\n.IP \"Remote User (HTTP authentication)\"\nThis is the userid of the person requesting the document as determined by HTTP\nauthentication. If the document is not password protected, this part will be\n\"-\" just like the previous one. This panel is not enabled unless\n.I %e\nis given within the log-format variable.\n.IP \"Cache Status\"\nIf you are using caching on your server, you may be at the point where you\nwant to know if your request is being cached and served from the cache. This\npanel shows the cache status of the object the server served. This panel is not\nenabled unless\n.I %C\nis given within the log-format variable. The status can be either\n `MISS`, `BYPASS`, `EXPIRED`, `STALE`, `UPDATING`, `REVALIDATED` or `HIT`\n.IP \"MIME Types\"\nThis panel specifies Media Types (formerly known as MIME types) and Media\nSubtypes which will be assigned and listed underneath. This panel is not\nenabled unless\n.I %M\nis given within the log-format variable. See\nhttps://www.iana.org/assignments/media-types/media-types.xhtml for more\ndetails.\n.IP \"Encryption Settings\"\nThis panel shows the SSL/TLS protocol used along the Cipher Suites. This panel\nis not enabled unless\n.I %K\nis given within the log-format variable.\n\n.P\n.I NOTE:\nOptionally and if configured, all panels can display the average time taken to\nserve the request.\n\n.SH STORAGE\n.P\nThere are three storage options that can be used with GoAccess. Choosing one\nwill depend on your environment and needs.\n.TP\nDefault Hash Tables\nIn-memory storage provides better performance at the cost of limiting the\ndataset size to the amount of available physical memory. GoAccess uses\nin-memory hash tables. It has very good memory usage and pretty good\nperformance. This storage has support for on-disk persistence.\n.SH CONFIGURATION\n.P\nMultiple options can be used to configure GoAccess. For a complete up-to-date\nlist of configure options, run\n.I ./configure --help\n.TP\n\\fB\\-\\-enable-debug\nCompile with debugging symbols and turn off compiler optimizations.\n.TP\n\\fB\\-\\-enable-utf8\nCompile with wide character support. Ncursesw is required.\n.TP\n\\fB\\-\\-enable-geoip=<legacy|mmdb>\nCompile with GeoLocation support. MaxMind's GeoIP is required.\n.I legacy\nwill utilize the original GeoIP databases.\n.I mmdb\nwill utilize the enhanced GeoIP2 databases.\n.TP\n\\fB\\-\\-with-getline\nDynamically expands line buffer in order to parse full line requests instead of\nusing a fixed size buffer of 4096.\n.TP\n\\fB\\-\\-with-openssl\nCompile GoAccess with OpenSSL support for its WebSocket server.\n.SH OPTIONS\n.P\nThe following options can be supplied to the command or specified in the\nconfiguration file. If specified in the configuration file, long options need\nto be used without prepending -- and without using the equal sign =.\n.SS\nLOG/DATE/TIME FORMAT\n.TP\n\\fB\\-\\-time-format=<timeformat>\nThe time-format variable followed by a space, specifies the log format time\ncontaining either a name of a predefined format (see options below) or any\ncombination of regular characters and special format specifiers.\n.IP\nThey all begin with a percentage (%) sign. See `man strftime`.\n.I %T or %H:%M:%S.\n.IP\nNote that if a timestamp is given in microseconds,\n.I %f\nmust be used as time-format.\nIf the timestamp is given in milliseconds\n.I %*\nmust be used as time-format.\n.TP\n\\fB\\-\\-date-format=<dateformat>\nThe date-format variable followed by a space, specifies the log format time\ncontaining either a name of a predefined format (see options below) or any\ncombination of regular characters and special format specifiers.\n.IP\nThey all begin with a percentage (%) sign. See `man strftime`.\n.I %Y-%m-%d.\n.IP\nNote that if a timestamp is given in microseconds,\n.I\n%f\nmust be used as date-format.\nIf the timestamp is given in milliseconds\n.I %*\nmust be used as date-format.\n.TP\n\\fB\\-\\-datetime-format=<date_time_format>\nThe date and time format combines the two variables into a single option. This\ngives the ability to get the timezone from a request and convert it to another\ntimezone for output. See\n.I --tz=<timezone>\n.IP\nThey all begin with a percentage (%) sign. See `man strftime`. e.g.,\n.I %d/%b/%Y:%H:%M:%S %z.\n.IP\nNote that if --datetime-format is used,\n.I %x\nmust be passed in the log-format variable to represent the date and time field.\n.TP\n\\fB\\-\\-log-format=<logformat>\nThe log-format variable followed by a space or\n.I \\\\\\\\t\nfor tab-delimited, specifies the log format string.\n\nNote that if there are spaces within the format, the string needs to be\nenclosed in single/double quotes. Inner quotes need to be escaped.\n.IP\nIn addition to specifying the raw log/date/time formats, for simplicity, any of\nthe following predefined log format names can be supplied to the\nlog/date/time-format variables. GoAccess can also handle one predefined name in\none variable and another predefined name in another variable.\n.IP\n  COMBINED     - Combined Log Format,\n  VCOMBINED    - Combined Log Format with Virtual Host,\n  COMMON       - Common Log Format,\n  VCOMMON      - Common Log Format with Virtual Host,\n  W3C          - W3C Extended Log File Format,\n  SQUID        - Native Squid Log Format,\n  CLOUDFRONT   - Amazon CloudFront Web Distribution,\n  CLOUDSTORAGE - Google Cloud Storage,\n  AWSELB       - Amazon Elastic Load Balancing,\n  AWSS3        - Amazon Simple Storage Service (S3)\n  AWSALB       - Amazon Application Load Balancer\n  CADDY        - Caddy's JSON Structured format (local/info format)\n  TRAEFIKCLF   - Traefik's CLF flavor\n.IP\n.I Note:\nGenerally, you need quotes around values that include white spaces, commas,\npipes, quotes, and/or brackets. Inner quotes must be escaped.\n.IP\n.I Note:\nPiping data into GoAccess won't prompt a log/date/time configuration dialog,\nyou will need to previously define it in your configuration file or in the\ncommand line.\n.IP\n.I Note:\nThe default GoAccess format for CADDY is the 'local/info' format. Nevertheless,\nif needed, you have the option to utilize a custom GoAccess log format to match\nyour particular configuration.\n.SS\nUSER INTERFACE OPTIONS\n.TP\n\\fB\\-c \\-\\-config-dialog\nPrompt log/time/date configuration window on program start. Only when curses is\ninitialized.\n.TP\n\\fB\\-i \\-\\-hl-header\nColor highlight active terminal panel.\n.TP\n\\fB\\-m \\-\\-with-mouse\nEnable mouse support on main terminal dashboard.\n.TP\n\\fB\\-\\-\\-color=<fg:bg[attrs, PANEL]>\nSpecify custom colors for the terminal output.\n\n.I Color Syntax\n  DEFINITION space/tab colorFG#:colorBG# [attributes,PANEL]\n\n FG# = foreground color [-1...255] (-1 = default term color)\n BG# = background color [-1...255] (-1 = default term color)\n\nOptionally, it is possible to apply color attributes (multiple attributes are\ncomma separated), such as:\n.I bold,\n.I underline,\n.I normal,\n.I reverse,\n.I blink\n\nIf desired, it is possible to apply custom colors per panel, that is, a metric\nin the REQUESTS panel can be of color A, while the same metric in the BROWSERS\npanel can be of color B.\n\n.I Available color definitions:\n  COLOR_MTRC_HITS\n  COLOR_MTRC_VISITORS\n  COLOR_MTRC_DATA\n  COLOR_MTRC_BW\n  COLOR_MTRC_AVGTS\n  COLOR_MTRC_CUMTS\n  COLOR_MTRC_MAXTS\n  COLOR_MTRC_PROT\n  COLOR_MTRC_MTHD\n  COLOR_MTRC_HITS_PERC\n  COLOR_MTRC_HITS_PERC_MAX\n  COLOR_MTRC_VISITORS_PERC\n  COLOR_MTRC_VISITORS_PERC_MAX\n  COLOR_PANEL_COLS\n  COLOR_BARS\n  COLOR_ERROR\n  COLOR_SELECTED\n  COLOR_PANEL_ACTIVE\n  COLOR_PANEL_HEADER\n  COLOR_PANEL_DESC\n  COLOR_OVERALL_LBLS\n  COLOR_OVERALL_VALS\n  COLOR_OVERALL_PATH\n  COLOR_ACTIVE_LABEL\n  COLOR_BG\n  COLOR_DEFAULT\n  COLOR_PROGRESS\n\nSee configuration file for a sample color scheme.\n.TP\n\\fB\\-\\-color-scheme=<1|2|3>\nChoose among color schemes.\n.I 1\nfor the default grey scheme.\n.I 2\nfor the green scheme.\n.I 3\nfor the Monokai scheme (shown only if terminal supports 256 colors).\n.TP\n\\fB\\-\\-crawlers-only\nParse and display only crawlers (bots).\n.TP\n\\fB\\-\\-html-custom-css=<path/custom.css>\nSpecifies a custom CSS file path to load in the HTML report.\n.TP\n\\fB\\-\\-html-custom-js=<path/custom.js>\nSpecifies a custom JS file path to load in the HTML report.\n.TP\n\\fB\\-\\-html-report-title=<title>\nSet HTML report page title and header.\n.TP\n\\fB\\-\\-html-refresh=<secs>\nRefresh the HTML report every X seconds. The value has to be between 1 and 60\nseconds. The default is set to refresh the HTML report every 1 second.\n.TP\n\\fB\\-\\-html-prefs=<JSON>\nSet HTML report default preferences. Supply a valid JSON object containing the\nHTML preferences. It allows the ability to customize each panel plot. See\nexample below.\n.IP\n.I Note:\nThe JSON object passed needs to be a one line JSON string. For instance,\n.IP\n.nf\n\\-\\-html-prefs='{\"theme\":\"bright\",\"perPage\":5,\"layout\":\"horizontal\",\"showTables\":true,\"visitors\":{\"plot\":{\"chartType\":\"bar\"}}}'\n.fi\n.TP\n\\fB\\-\\-json-pretty-print\nFormat JSON output using tabs and newlines.\n.IP\n.I Note:\nThis is not recommended when outputting a real-time HTML report since the\nWebSocket payload will much much larger.\n.TP\n\\fB\\-\\-max-items=<number>\nThe maximum number of items to display per panel. The maximum can be a number\nbetween 1 and n.\n.IP\n.I Note:\nOnly the CSV and JSON output allow a maximum number greater than the default\nvalue of 366 (or 50 in the real-time HTML output) items per panel.\n.TP\n\\fB\\-\\-no-color\nTurn off colored output. This is the default output on terminals that do not\nsupport colors.\n.TP\n\\fB\\-\\-no-column-names\nDon't write column names in the terminal output. By default, it displays column\nnames for each available metric in every panel.\n.TP\n\\fB\\-\\-no-csv-summary\nDisable summary metrics on the CSV output.\n.TP\n\\fB\\-\\-no-progress\nDisable progress metrics [total requests/requests per second].\n.TP\n\\fB\\-\\-no-tab-scroll\nDisable scrolling through panels when TAB is pressed or when a panel is\nselected using a numeric key.\n.TP\n\\fB\\-\\-no-html-last-updated\nDo not show the last updated field displayed in the HTML generated report.\n.TP\n\\fB\\-\\-no-parsing-spinner\nDo now show the progress metrics and parsing spinner.\n.TP\n\\fB\\-\\-tz=<timezone>\nOutputs the report date/time data in the given timezone. Note that it uses the\ncanonical timezone name. e.g.,\n.I Europe/Berlin\nor\n.I America/Chicago\nor\n.I Africa/Cairo\nIf an invalid timezone name is given, the output will be in GMT. See\n.I --datetime-format\nin order to properly specify a timezone in the date/time format.\n.SS\nSERVER OPTIONS\n.P\n.I Note\nThis is just a WebSocket server to provide the raw real-time data.\nIt is not a WebServer itself. To access your reports html file, you will\nstill need your own HTTP server, place the generated report in it's document\nroot dir and open the html file in your browser. The browser will then open\nanother WebSocket-connection to the ws-server you may setup here,\nto keep the dashboard up-to-date.\n.TP\n\\fB\\-\\-addr\nSpecify IP address to bind the server to. Otherwise it binds to 0.0.0.0.\n.IP\nUsually there is no need to specify the address, unless you intentionally would\nlike to bind the server to a different address within your server.\n.TP\n\\fB\\-\\-daemonize\nRun GoAccess as daemon (only if \\fB\\-\\-real-time-html enabled).\n.IP\nNote: It's important to make use of absolute paths across GoAccess'\nconfiguration.\n.TP\n\\fB\\-\\-user-name=<username>\nRun GoAccess as the specified user.\n.IP\nNote: It's important to ensure the user or the users' group can access the\ninput and output files as well as any other files needed.\nOther groups the user belongs to will be ignored.\nAs such it's advised to run GoAccess behind a SSL proxy as it's unlikely this\nuser can access the SSL certificates.\n.TP\n\\fB\\-\\-origin=<url>\nEnsure clients send the specified origin header upon the WebSocket handshake.\n.TP\n\\fB\\-\\-pid-file=<path/goaccess.pid>\nWrite the daemon PID to a file when used along the --daemonize option.\n.TP\n\\fB\\-\\-port=<port>\nSpecify the port to use. By default GoAccess' WebSocket server listens on port\n7890.\n.TP\n\\fB\\-\\-real-time-html\nEnable real-time HTML output.\n.IP\nGoAccess uses its own WebSocket server to push the data from the server to the\nclient. See http://gwsocket.io for more details how the WebSocket server works.\n.TP\n\\fB\\-\\-ws-url=<[scheme://]url[:port]>\nURL to which the WebSocket server responds. This is the URL supplied to the\nWebSocket constructor on the client side.\n.IP\nOptionally, it is possible to specify the WebSocket URI scheme, such as\n.I ws://\nor\n.I wss://\nfor unencrypted and encrypted connections. e.g.,\n.I\nwss://goaccess.io\n.IP\nIf GoAccess is running behind a proxy, you could set the client side to connect\nto a different port by specifying the host followed by a colon and the port.\ne.g.,\n.I goaccess.io:9999\n.IP\nBy default, it will attempt to connect to the generated report's hostname. If\nGoAccess is running on a remote server, the host of the remote server should be\nspecified here. Also, make sure it is a valid host and NOT an http address.\n.TP\n\\fB\\-\\-ping-interval=<secs>\nEnable WebSocket ping with specified interval in seconds. This helps prevent\nidle connections getting disconnected.\n.TP\n\\fB\\-\\-fifo-in=<path/file>\nCreates a named pipe (FIFO) that reads from on the given path/file.\n.TP\n\\fB\\-\\-fifo-out=<path/file>\nCreates a named pipe (FIFO) that writes to the given path/file.\n.TP\n\\fB\\-\\-ssl-cert=<cert.crt>\nPath to TLS/SSL certificate. In order to enable TLS/SSL support, GoAccess\nrequires that \\-\\-ssl-cert and \\-\\-ssl-key are used.\n\nOnly if configured using --with-openssl\n.TP\n\\fB\\-\\-ssl-key=<priv.key>\nPath to TLS/SSL private key. In order to enable TLS/SSL support, GoAccess\nrequires that \\-\\-ssl-cert and \\-\\-ssl-key are used.\n\nOnly if configured using --with-openssl\n.SS\nFILE OPTIONS\n.TP\n\\fB\\-\nThe log file to parse is read from stdin.\n.TP\n\\fB\\-f \\-\\-log-file=<logfile>\nSpecify the path to the input log file. If set in the config file, it will take\npriority over -f from the command line.\n.TP\n\\fB\\-S \\-\\-log-size=<bytes>\nSpecify the log size in bytes. This is useful when piping in logs for\nprocessing in which the log size can be explicitly set.\n.TP\n\\fB\\-l \\-\\-debug-file=<debugfile>\nSend all debug messages to the specified file.\n.TP\n\\fB\\-p \\-\\-config-file=<configfile>\nSpecify a custom configuration file to use. If set, it will take priority over\nthe global configuration file (if any).\n.TP\n\\fB\\-\\-external-assets\nOutput HTML assets to external JS/CSS files. Great if you are setting up\nContent Security Policy (CSP). This will create two separate files,\n.I goaccess.js\nand\n.I goaccess.css\n, in the same directory as your report.html file.\n.TP\n\\fB\\-\\-invalid-requests=<filename>\nLog invalid requests to the specified file.\n.TP\n\\fB\\-\\-unknowns-log=<filename>\nLog unknown browsers and OSs to the specified file.\n.TP\n\\fB\\-\\-no-global-config\nDo not load the global configuration file. This directory should normally be\n/usr/local/etc, unless specified with\n.I --sysconfdir=/dir.\nSee --dcf option for finding the default configuration file.\n.SS\nPARSE OPTIONS\n.TP\n\\fB\\-a \\-\\-agent-list\nEnable a list of user-agents by host. For faster parsing, do not enable this\nflag.\n.TP\n\\fB\\-d \\-\\-with-output-resolver\nEnable IP resolver on HTML|JSON output.\n.TP\n\\fB\\-e \\-\\-exclude-ip=<IP|IP-range>\nExclude an IPv4 or IPv6 from being counted. Applicable solely during access log\ndata processing, it does not exclude persisted data.\nRanges can be included as well using a dash in between the IPs (start-end).\n.IP\n.I Examples:\n  exclude-ip 127.0.0.1\n  exclude-ip 192.168.0.1-192.168.0.100\n  exclude-ip ::1\n  exclude-ip 0:0:0:0:0:ffff:808:804-0:0:0:0:0:ffff:808:808\n.TP\n\\fB\\-j \\-\\-jobs=<1-6>\nThis specifies the number of parallel processing threads to be used during the\nexecution of the program. It determines the degree of concurrency when\nanalyzing log data, allowing for parallel processing of multiple tasks\nsimultaneously. It defaults to 1 thread. It's common to set the number of jobs\nbased on the available hardware resources, such as the number of CPU cores.\n.TP\n\\fB\\-H \\-\\-http-protocol=<yes|no>\nSet/unset HTTP request protocol. This will create a request key containing the\nrequest protocol + the actual request.\n.TP\n\\fB\\-M \\-\\-http-method=<yes|no>\nSet/unset HTTP request method. This will create a request key containing the\nrequest method + the actual request.\n.TP\n\\fB\\-o \\-\\-output=<path/file.[json|csv|html]>\nWrite output to stdout given one of the following files and the corresponding\nextension for the output format:\n.IP\n  /path/file.csv - Comma-separated values (CSV)\n  /path/file.json - JSON (JavaScript Object Notation)\n  /path/file.html - HTML\n.TP\n\\fB\\-q \\-\\-no-query-string\nIgnore request's query string. i.e., www.google.com/page.htm?query =>\nwww.google.com/page.htm.\n.IP\n.I Note:\nRemoving the query string can greatly decrease memory consumption, especially\non timestamped requests.\n.TP\n\\fB\\-r \\-\\-no-term-resolver\nDisable IP resolver on terminal output.\n.TP\n\\fB\\-\\-444-as-404\nTreat non-standard status code 444 as 404.\n.TP\n\\fB\\-\\-4xx-to-unique-count\nAdd 4xx client errors to the unique visitors count.\n.TP\n\\fB\\-\\-anonymize-ip\nAnonymize the client IP address. The IP anonymization option sets the last\noctet of IPv4 user IP addresses and the last 80 bits of IPv6 addresses to\nzeros.\ne.g., 192.168.20.100 => 192.168.20.0\ne.g., 2a03:2880:2110:df07:face:b00c::1 => 2a03:2880:2110:df07::\n.IP\n.I Note:\nThis deactivates -a.\n.TP\n\\fB\\-\\-chunk-size=<256-32768>\nThis determines the number of lines that form a chunk. This parameter\ninfluences the size of the data processed concurrently by each thread, allowing\nfor parallelization of the file reading and processing tasks. The value of\nchunk-size affects the efficiency of the parallel processing and can be\nadjusted based on factors such as system resources and the characteristics of\nthe input data.\n\n.IP\nLow Values: If chunk-size is set too low, it might result in inefficient\nprocessing. For instance, if each chunk contains a very small number of lines,\nthe overhead of managing and coordinating parallel processing might outweigh\nthe benefits.\n\n.IP\nLarge Values: Conversely, if chunk-size is set too high, it could lead to\nresource exhaustion. Each chunk represents a portion of data that a thread\nprocesses in parallel. Setting chunk-size to an excessively large value might\ncause memory issues, particularly if there are many parallel threads running\nsimultaneously.\n.TP\n\\fB\\-\\-anonymize-level\nSpecifies the anonymization levels: 1 => default, 2 => strong, 3 => pedantic.\n.TS\nallbox;\nlb lb lb lb\nl l l l.\nBits-hidden\tLevel 1\tLevel 2\tLevel 3\nT{\n.BR IPv4\nT}\t8\t16\t24\nT{\n.BR IPv6\nT}\t64\t80\t96\n.TE\n\n.TP\n\\fB\\-\\-all-static-files\nInclude static files that contain a query string. e.g.,\n/fonts/fontawesome-webfont.woff?v=4.0.3\n.TP\n\\fB\\-\\-browsers-file=<path>\nBy default GoAccess parses an \"essential/basic\" curated list of browsers &\ncrawlers. If you need to add additional browsers, use this option.\nInclude an additional delimited list of browsers/crawlers/feeds etc.\nSee config/browsers.list for an example or\nhttps://raw.githubusercontent.com/allinurl/goaccess/master/config/browsers.list\n.TP\n\\fB\\-\\-date-spec=<date|hr|min>\nSet the date specificity to either date (default), hr to display hours or min\nto display minutes appended to the date.\n.IP\nThis is used in the visitors panel. It's useful for tracking visitors at the\nhour level. For instance, an hour specificity would yield to display traffic as\n18/Dec/2010:19 or minute specificity 18/Dec/2010:19:59.\n.TP\n\\fB\\-\\-double-decode\nDecode double-encoded values. This includes, user-agent, request, and referrer.\n.TP\n\\fB\\-\\-enable-panel=<PANEL>\nEnable parsing and displaying the given panel.\n.IP\n.I Available panels:\n  VISITORS\n  REQUESTS\n  REQUESTS_STATIC\n  NOT_FOUND\n  HOSTS\n  OS\n  BROWSERS\n  VISIT_TIMES\n  VIRTUAL_HOSTS\n  REFERRERS\n  REFERRING_SITES\n  KEYPHRASES\n  STATUS_CODES\n  REMOTE_USER\n  CACHE_STATUS\n  GEO_LOCATION\n  MIME_TYPE\n  TLS_TYPE\n.TP\n\\fB\\-\\-fname-as-vhost=<regex>\nUse log filename(s) as virtual host(s). POSIX regex is passed to extract\nthe virtual host from the filename. e.g.,\n.I --fname-as-vhost='[a-z]*\\.[a-z]*'\ncan be used to extract awesome.com.log => awesome.com.\n.TP\n\\fB\\-\\-hide-referrer=<NEEDLE>\nHide a referrer but still count it. Wild cards are allowed in the needle. i.e.,\n*.bing.com.\n.TP\n\\fB\\-\\-hour-spec=<hr|min>\nSet the time specificity to either hour (default) or min to display the tenth\nof an hour appended to the hour.\n.IP\nThis is used in the time distribution panel. It's useful for tracking peaks of\ntraffic on your server at specific times.\n.TP\n\\fB\\-\\-ignore-crawlers\nIgnore crawlers from being counted.\n.TP\n\\fB\\-\\-unknowns-as-crawlers\nClassify unknown OS and browsers as crawlers.\n.TP\n\\fB\\-\\-ignore-panel=<PANEL>\nIgnore parsing and displaying the given panel.\n.IP\n.I Available panels:\n  VISITORS\n  REQUESTS\n  REQUESTS_STATIC\n  NOT_FOUND\n  HOSTS\n  OS\n  BROWSERS\n  VISIT_TIMES\n  VIRTUAL_HOSTS\n  REFERRERS\n  REFERRING_SITES\n  KEYPHRASES\n  STATUS_CODES\n  REMOTE_USER\n  CACHE_STATUS\n  GEO_LOCATION\n  MIME_TYPE\n  TLS_TYPE\n.TP\n\\fB\\-\\-ignore-referrer=<referrer>\nIgnore referrers from being counted. Wildcards allowed. e.g.,\n.I\n*.domain.com\n.I\nww?.domain.*\n.TP\n\\fB\\-\\-ignore-statics=<req|panel>\nIgnore static file requests.\n\n.I req\n  Only ignore request from valid requests\n\n.I panels\n  Ignore request from panels.\n\n  Note that it will count them towards the total number of requests\n.TP\n\\fB\\-\\-ignore-status=<CODE>\nIgnore parsing and displaying one or multiple status code(s). For multiple\nstatus codes, use this option multiple times.\n.TP\n\\fB\\-\\-keep-last=<num_days>\nKeep the last specified number of days in storage. This will recycle the storage tables. e.g., keep & show only the last 7 days.\n.TP\n\\fB\\-\\-no-ip-validation\nDisable client IP validation. Useful if IP addresses have been obfuscated before\nbeing logged.\nThe log still needs to contain a placeholder for\n.I %h\nusually it's a resolved IP. e.g.\n.I ord37s19-in-f14.1e100.net.\n.TP\n\\fB\\-\\-no-strict-status\nDisable HTTP status code validation. Some servers would record this value only\nif a connection was established to the target and the target sent a response.\nOtherwise, it could be recorded as -.\n.TP\n\\fB\\-\\-num-tests=<number>\nNumber of lines from the access log to test against the provided log/date/time\nformat. By default, the parser is set to test 10 lines. If set to 0, the parser\nwon't test any lines and will parse the whole access log. If a line matches the\ngiven log/date/time format before it reaches\n.I <number>,\nthe parser will consider the log to be valid, otherwise GoAccess will return\nEXIT_FAILURE and display the relevant error messages.\n.TP\n\\fB\\-\\-process-and-exit\nParse log and exit without outputting data. Useful if we are looking to only\nadd new data to the on-disk database without outputting to a file or a\nterminal.\n.TP\n\\fB\\-\\-real-os\nDisplay real OS names. e.g, Windows XP, Snow Leopard.\n.TP\n\\fB\\-\\-sort-panel=<PANEL,FIELD,ORDER>\nSort panel on initial load. Sort options are separated by comma. Options are in\nthe form: PANEL,METRIC,ORDER\n.IP\n.I Available metrics:\n  BY_HITS     - Sort by hits\n  BY_VISITORS - Sort by unique visitors\n  BY_DATA     - Sort by data\n  BY_BW       - Sort by bandwidth\n  BY_AVGTS    - Sort by average time served\n  BY_CUMTS    - Sort by cumulative time served\n  BY_MAXTS    - Sort by maximum time served\n  BY_PROT     - Sort by http protocol\n  BY_MTHD     - Sort by http method\n.IP\n.I Available orders:\n  ASC\n  DESC\n.TP\n\\fB\\-\\-static-file=<extension>\nAdd static file extension. e.g.:\n.I .mp3\nExtensions are case sensitive.\n.SS\nGEOLOCATION OPTIONS\n.TP\n\\fB\\-g \\-\\-std-geoip\nStandard GeoIP database for less memory usage.\n.TP\n\\fB\\-\\-geoip-database=<geofile>\nSpecify path to GeoIP database file. i.e., GeoLiteCity.dat.\n\nIf using GeoIP2, you will need to download the GeoLite2 City or Country\ndatabase from MaxMind.com and use the option --geoip-database to specify the\ndatabase. You can also get updated database files for GeoIP legacy, you can\nfind these as GeoLite Legacy Databases from MaxMind.com. IPv4 and IPv6 files\nare supported as well. For updated DB URLs, please see the default GoAccess\nconfiguration file.\n\n.I Note:\n--geoip-city-data is an alias of --geoip-database.\n.SS\nOTHER OPTIONS\n.TP\n\\fB\\-h \\-\\-help\nThe help.\n.TP\n\\fB\\-s \\-\\-storage\nDisplay current storage method. i.e., B+ Tree, Hash.\n.TP\n\\fB\\-V \\-\\-version\nDisplay version information and exit.\n.TP\n\\fB\\-\\-dcf\nDisplay the path of the default config file when `-p` is not used.\n.SS\nPERSISTENCE STORAGE OPTIONS\n.TP\n\\fB\\-\\-persist\nPersist parsed data into disk. If database files exist, files will be\noverwritten. This should be set to the first dataset. See examples below.\n.TP\n\\fB\\-\\-restore\nLoad previously stored data from disk. If reading persisted data only, the\ndatabase files need to exist. See\n.I --persist\nand examples below.\n.TP\n\\fB\\-\\-db-path=<dir>\nPath where the on-disk database files are stored. The default value is the\n.I /tmp\ndirectory.\n\n.SH CUSTOM LOG/DATE FORMAT\nGoAccess can parse virtually any web log format.\n.P\nPredefined options include, Common Log Format (CLF), Combined Log Format\n(XLF/ELF), including virtual host, Amazon CloudFront (Download Distribution),\nGoogle Cloud Storage and W3C format (IIS).\n.P\nGoAccess allows any custom format string as well.\n.P\nThere are two ways to configure the log format.\nThe easiest is to run GoAccess with\n.I -c\nto prompt a configuration window. Otherwise, it can be configured under\n~/.goaccessrc or the %sysconfdir%.\n.IP \"time-format\"\nThe\n.I time-format\nvariable followed by a space, specifies the log format time\ncontaining any combination of regular characters and special format specifiers.\nThey all begin with a percentage (%) sign. See `man strftime`.\n.I %T or %H:%M:%S.\n.IP\n.I Note:\nIf a timestamp is given in microseconds,\n.I\n%f\nmust be used as\n.I\ntime-format\nor\n.I\n%*\nif the timestamp is given in milliseconds.\n.IP \"date-format\"\nThe\n.I date-format\nvariable followed by a space, specifies the log format date containing any\ncombination of regular characters and special format specifiers. They all begin\nwith a percentage (%) sign. See `man strftime`. e.g.,\n.I %Y-%m-%d.\n.IP\n.I Note:\nIf a timestamp is given in microseconds,\n.I\n%f\nmust be used as\n.I\ndate-format\nor\n.I\n%*\nif the timestamp is given in milliseconds.\n.IP \"log-format\"\nThe\n.I log-format\nvariable followed by a space or\n.I \\\\\\\\t\n, specifies the log format string.\n.IP %x\nA date and time field matching the\n.I time-format\nand\n.I date-format\nvariables. This is used when given a timestamp or the date & time are\nconcatenated as a single string (e.g., 1501647332 or 20170801235000) instead of\nthe date and time being in two separated variables.\n.IP %t\ntime field matching the\n.I time-format\nvariable.\n.IP %d\ndate field matching the\n.I date-format\nvariable.\n.IP %v\nThe canonical Server Name of the server serving the request (Virtual Host).\n.IP %e\nThis is the userid of the person requesting the document as determined by HTTP\nauthentication.\n.IP %C\nThe cache status of the object the server served.\n.IP %h\nhost (the client IP address, either IPv4 or IPv6)\n.IP %r\nThe request line from the client. This requires specific delimiters around the\nrequest (as single quotes, double quotes, or anything else) to be parsable. If\nnot, we have to use a combination of special format specifiers as %m %U %H.\n.IP %q\nThe query string.\n.IP %m\nThe request method.\n.IP %U\nThe URL path requested.\n\n.I Note:\nIf the query string is in %U, there is no need to use\n.I %q.\nHowever, if the URL path, does not include any query string, you may use\n.I %q\nand the query string will be appended to the request.\n.IP %H\nThe request protocol.\n.IP %s\nThe status code that the server sends back to the client.\n.IP %b\nThe size of the object returned to the client.\n.IP %R\nThe \"Referrer\" HTTP request header.\n.IP %u\nThe user-agent HTTP request header.\n.IP %K\nThe TLS encryption settings chosen for the connection. (In Apache LogFormat: %{SSL_PROTOCOL}x)\n.IP %k\nThe TLS encryption settings chosen for the connection. (In Apache LogFormat: %{SSL_CIPHER}x)\n.IP %M\nThe MIME-type of the requested resource. (In Apache LogFormat: %{Content-Type}o)\n.IP %D\nThe time taken to serve the request, in microseconds as a decimal number.\n.IP %T\nThe time taken to serve the request, in seconds with milliseconds resolution.\n.IP %L\nThe time taken to serve the request, in milliseconds as a decimal number.\n.IP %n\nThe time taken to serve the request, in nanoseconds.\n.IP %^\nIgnore this field.\n.IP %~\nMove forward through the log string until a non-space (!isspace) char is found.\n.IP ~h\nThe host (the client IP address, either IPv4 or IPv6) in a X-Forwarded-For (XFF) field.\n\nIt uses a special specifier which consists of a tilde before the host\nspecifier, followed by the character(s) that delimit the XFF field, which are\nenclosed by curly braces. i.e., \"~h{, }\n\nFor example, \"~h{, }\" is used in order to parse \"11.25.11.53, 17.68.33.17\" field\nwhich is delimited by a comma and a space (enclosed by double quotes).\n\n.TS\nallbox;\nlb lb\nl l.\nXFF field\tspecifier\nT{\n.BR \\[dq]192.1.2.3, \\~192.68.33.17,\\~192.1.1.2\\[dq]\nT}\t\\[dq]~h{, }\\[dq]\nT{\n.BR \\[dq]192.1.2.12\\[dq],\\~\\[dq]192.68.33.17\\[dq]\nT}\t~h{\\[dq], }\nT{\n.BR 192.1.2.12,\\~192.68.33.17\nT}\t~h{, }\nT{\n.BR 192.1.2.14\\~192.68.33.17\\~192.1.1.2\nT}\t~h{ }\n.TE\n\n\n.P\n.I Note:\nIn order to get the average, cumulative and maximum time served in GoAccess,\nyou will need to start logging response times in your web server. In Nginx you\ncan add\n.I $request_time\nto your log format, or\n.I %D\nin Apache.\n.P\n.I Important:\nIf multiple time served specifiers are used at the same time, the first option\nspecified in the format string will take priority over the other specifiers.\n.P\nGoAccess\n.I requires\nthe following fields:\n.IP\n.I %h\na valid IPv4/6\n.IP\n.I %d\na valid date\n.IP\n.I %r\nthe request\n.SH INTERACTIVE MENU\n.IP \"F1 or h\"\nMain help.\n.IP \"F5\"\nRedraw main window.\n.IP \"q\"\nQuit the program, current window or collapse active module\n.IP \"o or ENTER\"\nExpand selected module or open window\n.IP \"0-9 and Shift + 0\"\nSet selected module to active\n.IP \"j\"\nScroll down within expanded module\n.IP \"k\"\nScroll up within expanded module\n.IP \"c\"\nSet or change scheme color.\n.IP \"TAB\"\nForward iteration of modules. Starts from current active module.\n.IP \"SHIFT + TAB\"\nBackward iteration of modules. Starts from current active module.\n.IP \"^f\"\nScroll forward one screen within an active module.\n.IP \"^b\"\nScroll backward one screen within an active module.\n.IP \"s\"\nSort options for active module\n.IP \"/\"\nSearch across all modules (regex allowed)\n.IP \"n\"\nFind the position of the next occurrence across all modules.\n.IP \"g\"\nMove to the first item or top of screen.\n.IP \"G\"\nMove to the last item or bottom of screen.\n.SH EXAMPLES\n.I Note:\nPiping data into GoAccess won't prompt a log/date/time configuration dialog,\nyou will need to previously define it in your configuration file or in the\ncommand line.\n\n.SS\nDIFFERENT OUTPUTS\n.P\nTo output to a terminal and generate an interactive report:\n.IP\n# goaccess access.log\n.P\nTo generate an HTML report:\n.IP\n# goaccess access.log -a -o report.html\n.P\nTo generate a JSON report:\n.IP\n# goaccess access.log -a -d -o report.json\n.P\nTo generate a CSV file:\n.IP\n# goaccess access.log --no-csv-summary -o report.csv\n.P\nGoAccess also allows great flexibility for real-time filtering and parsing. For\ninstance, to quickly diagnose issues by monitoring logs since goaccess was\nstarted:\n.IP\n# tail -f access.log | goaccess -\n.P\nAnd even better, to filter while maintaining opened a pipe to preserve\nreal-time analysis, we can make use of\n.I tail -f\nand\na matching pattern tool such as\n.I grep, awk, sed,\netc:\n.IP\n# tail -f access.log | grep -i --line-buffered 'firefox' | goaccess --log-format=COMBINED -\n.P\nor to parse from the beginning of the file while maintaining the pipe opened\nand applying a filter\n.IP\n# tail -f -n +0 access.log | grep -i --line-buffered 'firefox' | goaccess --log-format=COMBINED -o report.html --real-time-html -\n.P\nor to convert the log date timezone to a different timezone, e.g., Europe/Berlin\n.IP\n# goaccess access.log --log-format='%h %^[%x] \"%r\" %s %b \"%R\" \"%u\"' --datetime-format='%d/%b/%Y:%H:%M:%S %z' --tz=Europe/Berlin --date-spec=min\n.SS\nMULTIPLE LOG FILES\n.P\nThere are several ways to parse multiple logs with GoAccess. The simplest is to\npass multiple log files to the command line:\n.IP\n# goaccess access.log access.log.1\n.P\nIt's even possible to parse files from a pipe while reading regular files:\n.IP\n# cat access.log.2 | goaccess access.log access.log.1 -\n.P\n.I Note\nthat the single dash is appended to the command line to let GoAccess know that\nit should read from the pipe.\n.P\nNow if we want to add more flexibility to GoAccess, we can do a series of\npipes. For instance, if we would like to process all compressed log files\n.I access.log.*.gz\nin addition to the current log file, we can do:\n.IP\n# zcat access.log.*.gz | goaccess access.log -\n.P\n.I Note:\nOn Mac OS X, use gunzip -c instead of zcat.\n.SS\nREAL TIME HTML OUTPUT\n.P\nGoAccess has the ability to output real-time data in the HTML report. You can\neven email the HTML file since it is composed of a single file with no external\nfile dependencies, how neat is that!\n.P\nThe process of generating a real-time HTML report is very similar to the\nprocess of creating a static report. Only --real-time-html is needed to make it\nreal-time.\n.IP\n# goaccess access.log -o /usr/share/nginx/html/site/report.html --real-time-html\n.P\nBy default, GoAccess will use the host name of the generated report.\nOptionally, you can specify the URL to which the client's browser will connect\nto. See https://goaccess.io/faq for a more detailed example.\n.IP\n# goaccess access.log -o report.html --real-time-html --ws-url=goaccess.io\n.P\nBy default, GoAccess listens on port 7890, to use a different port other than\n7890, you can specify it as (make sure the port is opened):\n.IP\n# goaccess access.log -o report.html --real-time-html --port=9870\n.P\nAnd to bind the WebSocket server to a different address other than 0.0.0.0, you\ncan specify it as:\n.IP\n# goaccess access.log -o report.html --real-time-html --addr=127.0.0.1\n.P\n.I Note:\nTo output real time data over a TLS/SSL connection, you need to use\n.I --ssl-cert=<cert.crt>\nand\n.I --ssl-key=<priv.key>.\n.SS\nWORKING WITH DATES\n.P\nAnother useful pipe would be filtering dates out of the web log\n.P\nThe following will get all HTTP requests starting on 05/Dec/2010 until the end\nof the file.\n.IP\n# sed -n '/05\\/Dec\\/2010/,$ p' access.log | goaccess -a -\n.P\nor using relative dates such as yesterdays or tomorrows day:\n.IP\n# sed -n '/'$(date '+%d\\/%b\\/%Y' -d '1 week ago')'/,$ p' access.log | goaccess -a -\n.P\nIf we want to parse only a certain time-frame from DATE a to DATE b, we can do:\n.IP\n# sed -n '/5\\/Nov\\/2010/,/5\\/Dec\\/2010/ p' access.log | goaccess -a -\n.P\nIf we want to preserve only certain amount of data and recycle storage, we can\nkeep only a certain number of days. For instance to keep & show the last 5\ndays:\n.IP\n# goaccess access.log --keep-last=5\n.SS\nVIRTUAL HOSTS\n.P\nAssuming your log contains the virtual host (server blocks) field. For\ninstance:\n.IP\nvhost.com:80 10.131.40.139 - - [02/Mar/2016:08:14:04 -0600] \"GET /shop/bag-p-20\nHTTP/1.1\" 200 6715 \"-\" \"Apache (internal dummy connection)\"\n.P\nAnd you would like to append the virtual host to the request in order to see\nwhich virtual host the top urls belong to\n.IP\nawk '$8=$1$8' access.log | goaccess -a -\n.P\nTo exclude a list of virtual hosts you can do the following:\n.IP\n# grep -v \"`cat exclude_vhost_list_file`\" vhost_access.log | goaccess -\n.SS\nFILES & STATUS CODES\n.P\nTo parse specific pages, e.g., page views, html, htm, php, etc. within a\nrequest:\n.IP\n# awk '$7~/\\.html|\\.htm|\\.php/' access.log | goaccess -\n.P\nNote,\n.I $7\nis the request field for the common and combined log format, (without Virtual\nHost), if your log includes Virtual Host, then you probably want to use\n.I $8\ninstead. It's best to check which field you are shooting for, e.g.:\n.IP\n# tail -10 access.log | awk '{print $8}'\n.P\nOr to parse a specific status code, e.g., 500 (Internal Server Error):\n.IP\n# awk '$9~/500/' access.log | goaccess -\n.SS\nSERVER\n.P\nAlso, it is worth pointing out that if we want to run GoAccess at lower\npriority, we can run it as:\n.IP\n# nice -n 19 goaccess -f access.log -a\n.P\nand if you don't want to install it on your server, you can still run it from\nyour local machine:\n.IP\n# ssh -n root@server 'tail -f /var/log/apache2/access.log' | goaccess -\n.P\nNote: SSH requires\n.I -n\nso GoAccess can read from stdin. Also, make sure to use SSH keys for\nauthentication as it won't work if a passphrase is required.\n.SS\nINCREMENTAL LOG PROCESSING\n.P\nGoAccess has the ability to process logs incrementally through its internal\nstorage and dump its data to disk. It works in the following way:\n\n.nr step 1 1\n.IP \\n[step] 3\nA dataset must be persisted first with\n.I --persist,\nthen the same dataset can be loaded with\n.IP \\n+[step]\n.I --restore.\nIf new data is passed (piped or through a log file), it will append it to the\noriginal dataset.\n\n.P\nNOTES\n\nGoAccess keeps track of inodes of all the files processed (assuming files will\nstay on the same partition), in addition, it extracts a snippet of data from\nthe log along with the last line parsed of each file and the timestamp of the\nlast line parsed. e.g.,\ninode:29627417|line:20012|ts:20171231235059\n\nFirst it compares if the snippet matches the log being parsed, if it does, it\nassumes the log hasn't changed dramatically, e.g., hasn't been truncated. If\nthe inode does not match the current file, it parses all lines. If the current\nfile matches the inode, it then reads the remaining lines and updates the count\nof lines parsed and the timestamp. As an extra precaution, it won't parse log\nlines with a timestamp ≤ than the one stored.\n\nPiped data works based off the timestamp of the last line read. For instance,\nit will parse and discard all incoming entries until it finds a timestamp >=\nthan the one stored.\n\n.P\nFor instance:\n.IP\n// last month access log\n.br\n# goaccess access.log.1 --persist\n.P\nthen, load it with\n.IP\n// append this month access log, and preserve new data\n.br\n# goaccess access.log --restore --persist\n.P\nTo read persisted data only (without parsing new data)\n.IP\n# goaccess --restore\n.P\n.SH NOTES\nEach active panel has a total of 366 items or 50 in the real-time HTML report.\nThe number of items is customizable using\n.I max-items\nNote that HTML, CSV and JSON output allow a maximum number greater than the\ndefault value of 366 items per panel.\n.P\nA hit is a request (line in the access log), e.g., 10 requests = 10 hits. HTTP\nrequests with the same IP, date, and user agent are considered a unique visit.\n.P\n\nIf you want to enable dual-stack support, please use\n.I --addr=::\ninstead of the default\n.I --addr=0.0.0.0.\n.P\nThe generated report will attempt to reconnect to the WebSocket server after 1\nsecond with exponential backoff. It will attempt to connect 20 times.\n.SH BUGS\nIf you think you have found a bug, please send me an email to\n.I goaccess@prosoftcorp.com\nor use the issue tracker in https://github.com/allinurl/goaccess/issues\n.SH AUTHOR\nGerardo Orellana <hello@goaccess.io>\nFor more details about it, or new releases, please visit\nhttps://goaccess.io\n"
        },
        {
          "name": "inlang.config.js",
          "type": "blob",
          "size": 1.3525390625,
          "content": "// init the inlang.config\n\n/**\n * @type {import(\"@inlang/core/config\").DefineConfig}\n */\nexport async function defineConfig(env) {\n  // importing plugin from local file for testing purposes\n  const plugin = await env.$import(\n    \"https://cdn.jsdelivr.net/gh/jannesblobel/inlang-plugin-po@1/dist/index.js\"\n  );\n  const pluginConfig = {\n    // language mean the name of you file\n    pathPattern: \"./po/{language}.po\",\n    referenceResourcePath: \"./po/goaccess.pot\",\n  };\n\n  return {\n    // if your project use a pot file use the pot as the reference Language\n    // !! do not add the pot file in the Languages array\n    /**\n * @example\n * example files: en.pot, de.po, es.po, fr.po\n *  referenceLanguage: \"en\",\n    languages: [\"de\",\"es\",\"fr\"],\n */\n    referenceLanguage: \"en\",\n    languages: await getLanguages(env),\n    readResources: (args) =>\n      plugin.readResources({ ...args, ...env, pluginConfig }),\n    writeResources: (args) =>\n      plugin.writeResources({ ...args, ...env, pluginConfig }),\n  };\n}\n\n/**\n * Automatically derives the languages in this repository.\n */\nasync function getLanguages(env) {\n  const files = await env.$fs.readdir(\"./po\");\n  // files that end with .json\n  // remove the .json extension to only get language name\n  const languages = files\n    .filter((name) => name.endsWith(\".po\"))\n    .map((name) => name.replace(\".po\", \"\"));\n  return languages;\n}\n"
        },
        {
          "name": "po",
          "type": "tree",
          "content": null
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "snap",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}