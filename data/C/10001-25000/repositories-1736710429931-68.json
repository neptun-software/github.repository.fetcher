{
  "metadata": {
    "timestamp": 1736710429931,
    "page": 68,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "fastfetch-cli/fastfetch",
      "stars": 11818,
      "defaultBranch": "dev",
      "files": [
        {
          "name": ".codespellrc",
          "type": "blob",
          "size": 0.265625,
          "content": "[codespell]\ncheck-filenames =\nbuiltin = clear,rare,usage,informal\nskip = */.git,*/cmake-build-*,*/.idea,*/completions,*/presets,*/screenshots,*/tests,*/3rdparty,*/logo/ascii\nignore-words-list = iterm,compiletime,unknwn,pengwin,siduction,master,slave,sur,doas,conexant,ags\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2255859375,
          "content": "root = true\n\n[*]\nend_of_line = lf\nindent_style = space\ntab_width = 4\ninsert_final_newline = true\ntrim_trailing_whitespace = true\n\n[*.md]\ntrim_trailing_whitespace = false\n\n[*.txt]\ninsert_final_newline = false\n\n[*.yml]\ntab_width = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.046875,
          "content": "*.h linguist-language=c\n*.c linguist-language=c\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0966796875,
          "content": "build/\n.vs/\n.vscode/\n.cache/\n.kdev4/\n.DS_Store\ncscope.*\ntags\nfastfetch.kdev4\n*.user\n*.user.*\n*.swp\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 87.669921875,
          "content": "# 2.34.0\n\nChanges:\n* We now print distro pretty name if available (OS)\n    * This is a long requested feature. However, it may break some distros. File a bug with the content of `/etc/os-release` if it breaks your distro.\n\nBugfixes:\n* Fix thunderbolt version of new MBPs (#1465, Host, macOS)\n* Fix backlight name detection on FreeBSD (Brightness, FreeBSD)\n* Fix Terminal detection when running fastfetch in `pk-command-not-found` (#1467, Terminal, Linux)\n* Relax detection of terminals in NixOS (#1479, Terminal, Linux)\n    * Should fix konsole, ghostty and maybe others\n* Fix core count output in multi-package platforms (CPU)\n* Don't suppress the output of `preRun` (#1489)\n* Fix battery percentage detection (Battery, NetBSD)\n\nFeatures:\n* Support ghostty terminal font detection (TerminalFont, Linux / macOS)\n* Support `kitty-icat` image protocol, which uses `kitten icat` to generate image data\n    * Pros: support tmux; support gif animations; good performance\n    * Cons: due to the limitation of `kitten icat`, we need to clear the screen before displaying the image logo\n* Support WM version detection (WM)\n    * In Linux, Hyprland & sway are supported currently\n* Improve performance when stdout is redirected (TerminalSize)\n* Report thermal zone temp if CPU temp is not available (CPU, Linux)\n* Report sound server (Pipewire or PulseAudio) if available (#1454, Sound, Linux)\n* Enable OpenGL & OpenCL detection on Android (OpenGL / OpenCL, Android)\n* Detect & report MediaTek Dimensity 9000+ SOC name (CPU, Android)\n* Support appman (am-user) package manager detection (Packages, Linux)\n\nLogo:\n* Add Lubuntu\n* Update Xray_os\n* Add SnigdhaOS\n* Add Rhino Linux\n\n# 2.33.0\n\nChanges:\n* Introduce a new CMake flag `-DBUILD_FLASHFETCH=OFF` to disable building flashfetch binaries\n    * Package managers are encouraged to enable it. See <https://github.com/fastfetch-cli/fastfetch/discussions/627> for detail\n\nBugfixes:\n* Fix interconnect type detection (#1453, PhysicalDisk, Linux)\n    * Regression of v2.28\n* Don't report `proot` as terminal (Terminal, Android)\n* Remove a debug output (DiskIO, OpenBSD)\n* Fix media detection for some players (#1461, Media, Linux)\n    * Regression of v2.32\n\nFeatures:\n* Use `$POWERSHELL_VERSION` as PowerShell version if available (Shell, Windows)\n    * Fetching Windows PowerShell version can be very slow. Add `$env:POWERSHELL_VERSION = $PSVersionTable.PSVersion.ToString()` in `$PROFILE` before running `fastfetch` to improve the performance of `Shell` module\n* Add support for ubuntu-based armbian detection (#1447, OS, Linux)\n* Improve performance of Bluetooth detection (Bluetooth)\n    * We no longer report disconnected bluetooth devices in `--format json` when `--bluetooth-show-disconnected` isn't specified\n* Support brightness level detection for builtin displays (Brightness, OpenBSD / NetBSD)\n    * Requires root permission on OpenBSD\n* Support battery level detection (Battery, OpenBSD / NetBSD)\n* Support CPU temperature detection in NetBSD (CPU, NetBSD)\n* Hard code path of `libvulkan.so` for Android\n    * So that users don't need to install the vulkan-loader wrapper of termux\n\nLogo:\n* Add NurOS\n* Add GoralixOS\n\n# 2.32.1\n\nA hotfix for OpenBSD. No changes to other platforms.\n\nBugfixes:\n* Fix package count detection on OpenBSD (Packages, OpenBSD)\n\n# 2.32.0\n\nBugfixes:\n* Fix `pci.ids` file location on OpenBSD (GPU, OpenBSD)\n    * It's normally unused because enumerating PCI devices on OpenBSD requires root privileges\n* Fix bssid formatting (Wifi, Linux)\n* Fix Linux Lite distro detection (#1434, OS, Linux)\n* Suppress XE driver warnings from Mesa (#1435, OpenGL, Linux)\n* Fix format parameter name (#1443, Version)\n* Don't report useless information when Wifi is disabled (Wifi, FreeBSD)\n    * Currently there are issues when the SSID contains whitespaces. More fixes are expected in the future.\n* Always use physical size reported by X11 server to avoid inconsistent results (#1444, Display, Linux)\n\nFeatures:\n* Randomly select one if the logo source expands to multiple files (#1426, Logo)\n* Report mac product name when running Linux in MacBook (Host, Linux / FreeBSD)\n* Use screen size reported in DTD if make sense (Display)\n* Detect Virtualized Apple Silicon CPUs (CPU, Linux)\n* Add detection support for fvwm and ctwm (WM, OpenBSD / NetBSD)\n* Add Armbian-unofficial detection (OS, Linux)\n* Prefer surfaceless display when connect EGL (OpenGL)\n* Improve accuracy of WM detection on FreeBSD (WM, FreeBSD)\n* Add ratpoison window manager (WM, Linux)\n\nLogo:\n* Update Linux Lite\n* Add Serpent OS\n* Add Ultramarine Small\n* Update Debian\n\n# 2.31.0\n\nBugfixes:\n* Improve performance of media detection; fix musikcube detection (Media, Linux)\n    * After the change, `general.processingTimeout` will also control the timeout of dbus remote calls\n* Fix invalid variable names (#1408, Users)\n* Change physical size detection to use basic display parameters (#1406)\n* Fix possible sigfaults when detecting displays (#1393)\n* Fix Nvidia card type detection\n* Fix wl-restart parsing (#1422, WM, Linux)\n* Fix syntax error in completion file (#1421)\n* Fix hunging when using `ssh-agent` as command text (#1418, Command, macOS)\n\nFeatures:\n* Remove support of xcb & xlib and xrandr extension is always required (Display)\n* Support preferred resolution & refresh rate detection\n    * On macOS there is no preferred resolution reported and maximum available resolution is reported instead.\n    * `--display-format {preferred-width}x{preferred-height}@{preferred-refresh-rate}`\n* Report scale factor in custom format (Display)\n    * `--display-format {scale-factor}`\n* Detect current Wi-Fi channel and maximum frequency (Wifi)\n* Report processor package count (#1413, CPU)\n* Remove duplicate whitespaces in CPU name\n* Support sakura terminal version & font detection (Terminal / TerminalFont, Linux)\n\nLogo:\n* Fix LMDE\n* Update MidOS\n* Add Windows Server 2025\n\n# 2.30.1\n\nBugfixes:\n* Fix the destination where `fastfetch.1` is generated (#1403)\n\n# 2.30.0\n\nChanges:\n* Percent: bar type must be enabled in `percent.type` before using percent bar in custom format\n\nFeatures:\n* Port to MidnightBSD; add mport package manager support\n* Support bluetooth battery detection for macOS and Windows (Bluetooth, macOS / Windows)\n* Support M4 model detection (Host, macOS)\n* Support CPU temperature detection on OpenBSD (CPU, OpenBSD)\n* Display Android icon in Android devices (OS, Android)\n* Support qi package manager detection (Packages, Linux)\n* Detect WM / DE by enumerating running processes (WM / DE, NetBSD)\n* Generate manual pages from `help.json` (Doc)\n* Detect marketing name of vivo smartphone (Host, Android)\n* Add txDrops detection if supported (NetIO, *BSD)\n* Support tilix version detection (Terminal, Linux)\n* Support percent type config in module level. Example: \n\n```json\n{\n    \"type\": \"memory\",\n    \"percent\": {\n        \"green\": 20, // [0%, 20%) will be displayed in green\n        \"yellow\": 40, // [20, 40) will be displayed in yellow and [40, 100] will be displayed in red\n        \"type\": [ // Display percent value in monochrome bar, same as 10\n            \"bar\",\n            \"bar-monochrome\"\n        ]\n    }\n}\n```\n\nBugfixes:\n* Don't display `()` in key if display name is not available (Display)\n* Fix & normalize bluetooth mac address detection (Bluetooth, macOS / Windows)\n* Don't print index in multi-battery devices (Battery)\n* Fix segfault in macOS (#1388, macOS)\n* Fix `CFStringGetCString() failed` errors (#1394, Media, macOS)\n* Fix CPU frequency detection on Apple M4 (#1394, CPU, macOS)\n* Fix exe path detection on macOS (Shell / Terminal, macOS)\n* Fix logo fails to load from symlinked files on macOS (#1395, Logo, macOS)\n* Fix 32-bit truncation (NetIO, macOS)\n\nLogos:\n* Fix Lilidog\n* Add MidnightBSD\n* Add Unifi\n* Add Cosmic DE\n* Update openSUSE Tumbleweed\n\n# 2.29.0\n\nChanges:\n* Due to [the upstream removal of MSYS2 CLANG32 environment](https://www.msys2.org/news/#2024-09-23-starting-to-drop-the-clang32-environment), we dropped fastfetch-windows-i686 support. v2.27.1 was the last version supporting it.\n    * Note: fastfetch built with MSVCRT has known bug that DateTime module doesn't work because of its bad support of [strftime](https://en.cppreference.com/w/c/chrono/strftime). Don't use it.\n\nFeatures:\n* Port to NetBSD and DragonFly BSD\n    * Fastfetch now supports all major BSD variants\n* Support DiskIO, NetIO, GPU and Users module on OpenBSD\n* Report SD8E SOC name (CPU, Android)\n* On Windows, try loading dlls from current exe path (Windows)\n    * Fix Media module when installed with winget\n\nBugfixes:\n* Fix the VIM version detection on Ubuntu (Editor, Linux)\n* Improve performance of OS version detection on Proxmox (#1370, OS, Linux)\n\nLogo:\n* Update OpenSuse Tumbleweed\n* Add XCP-ng\n* Add SummitOS\n* Add Lilidog\n* Update PikaOS\n* Update OpenSUSE Leap\n* Update aperture\n\n# 2.28.0\n\nFeatures:\n* Add new module `Mouse` and `Keyboard` which display connected mice and keyboards\n* Support remaining time detection (Battery)\n* Report if AC is connected (Battery, Linux)\n* Report platform API used for display detection for debugging (Display)\n* Report Wine version when running in Wine (Kernel, Windows)\n* Add option `waitTime` in modules `CPUUsage`, `DiskIO` and `NetIO`\n\nBugfixes:\n* Fix used memory size detection (Memory, OpenBSD)\n* Don't report invalid fragmentation percentage when fails to detect it (Zpool)\n* Fix unexpected errors when running fastfetch in parallel (#1346, Windows)\n* Don't report obviously invalid temperature values (PhysicalDisk, Linux)\n\nLogos:\n* Add eweOS\n* Add MidOS\n* Update XeroArch\n\n# 2.27.1\n\nBugfixes:\n* Fix invalid display name detection on GNOME, wayland (Display, Linux)\n\n# 2.27.0\n\nChanges:\n* We now print `\"` instead of `″` when displaying diagonal length in inches, so that the character can be correctly displayed in Linux console (Display)\n* All detection code of `monitor` module is merged into `display` module. Now `monitor` just prints the same information as `display` with different format. Notably:\n    * The resolution reported by `monitor` module is now current resolution instead of native / maximum resolution. PPI is calculated based on current resolution too.\n    * The refresh rate reported by `monitor` module is the current refresh rate.\n\nFeatures:\n* Add basic, highly experimental support of OpenBSD (OpenBSD)\n* Improve support for Raspberry pi (CPU / GPU, Linux)\n* Detect SOC name, instead of displaying components used in the SOC, if available (CPU, Linux)\n* Add option `--brightness-compact` to display multiple brightness values in one line (Brightness)\n* Add `day-pretty` (#1305, DateTime)\n* Support network interface adapter flag detection (#1315, LocalIP)\n    * Enable it with `--localip-show-flags`\n\nBugfixes:\n* Remove trailing newline in GPU name for Raspberry pi (#1303, GPU, Linux)\n* Fix a possible buffer overflow (GPU, Linux)\n* Fix CPU temp incorrectly reported as 0 celsius (#1308, CPU, Linux)\n* Correctly report `TPM device is not found` error (#1314, TPM, Windows)\n* Fix errors when triggering shell completion with python3 uninstalled (#1310)\n    * To package managers: as shell completion scripts of fastfetch use python3, it should be added as an optional dependency of fastfetch\n* Fix possible crashes when detecting term font of kitty (#1321, TerminalFont, Linux)\n\nLogos:\n* Add XeroArch\n* Add ValhallaOS\n\n# 2.26.1\n\nFeatures:\n* Allow to disable pacstall packager detection in CMake\n\nBugfixes:\n* Fix uninitialized variables (GPU, Windows)\n\n# 2.26.0\n\nChanges:\n* To be consistent to other platforms, CPU frequency detection on Linux no longer checks `bios_limit`\n\nFeatures:\n* Detect GPU index (#1267, GPU)\n* Count Flatpak runtime packages (#1085, Packages, Linux)\n* Support pacstall package manager (Packages, Linux)\n* Support CU core count, max frequency, VMEM usage detection for AMD cards on Linux (GPU, Linux)\n    * Requires `--gpu-driver-specific`\n* Support EU core count, VMEM size detection Intel cards on Linux (GPU, Linux)\n    * Requires `--gpu-driver-specific`. VMEM usage detection requires root permissions.\n* Add new module `TPM` to print TPM (Trusted Platform Module) version if available (TPM)\n* Support GPU driver version detection (GPU, macOS)\n* Add new CMake option `-DENABLE_EMBEDDED_PCIIDS=ON`.\n    * If enabled, fastfetch will download the newest [`pci.ids`](https://pci-ids.ucw.cz/) file, [transform it into C code](https://github.com/fastfetch-cli/fastfetch/blob/dev/scripts/gen-pciids.py) and compile it into fastfetch binaries.\n\nBugfixes:\n* Fix font size detecton of foot terminal (#1276, TerminalFont, Linux)\n* Ignore `su` and `sudo` when detecting terminal (#1283, Terminal, Linux)\n* Always print inches in integer (Display)\n* Fix Wifi connection protocol detection on macOS Sequoia (Wifi, macOS)\n* Fix hanging when font name is long when detecting kitty term font (#1289, TerminalFont)\n* Detect all enabled or connected connectors (#1301, Display, Linux)\n\nLogos:\n* Add FoxOS\n* Add GXDE OS\n\n# 2.25.0\n\nFeatures:\n* Moore Threads GPU add support to query number of cores (#1259, GPU)\n* Cache detection result based on last modification time (Packages)\n* Add cmake options to disable certain package managers at compile time\n    * Package managers are encouraged to disable some package managers by passing `-DPACKAGES_DISABLE_` when running `cmake`. For example, when building for Arch Linux, `-DPACKAGES_DISABLE_APK=ON -DPACKAGES_DISABLE_DPKG=ON -DPACKAGES_DISABLE_RPM=ON ...` should be specified.\n    * See all available options by [running `cmake -L | grep PACKAGES_DISABLE_`](https://github.com/fastfetch-cli/fastfetch/blob/dev/CMakeLists.txt#L91)\n    * This option does NOT remove the detection code. It just disables the detection at runtime. One can still use `--packages-disabled \"\"` to enable all package managers.\n* Add new option `--show-localip-{speed,mtu}` (LocalIP)\n* Add new module `Btrfs`, which prints all mounted Btrfs volumes, like `Zpool` module (#1262, Linux)\n* Improve Wifi module support for macOS Sequoia (Wifi, macOS)\n    * Currently it uses `system_profiler` which costs about 2 seconds on my MBP. I suggest disabling it for now until a better solution is found.\n\nBugfixes:\n* Fix invalid CPU temperature detection on FreeBSD (#1260, CPU, FreeBSD)\n* Remove `showPeCoreCount` support on FreeBSD (#1260, CPU, FreeBSD)\n* Don't use Wifi speed as Ethernet speed (LocalIP, FreeBSD)\n* Fix compiling with old linux headers (Camera, Linux)\n* Fix detecting public ipv6 address (PublicIP, Windows)\n\nLogo:\n* Fix parrot logo detection\n* Rename TorizonCore to Torizon OS\n\n# 2.24.0\n\nChanges:\n* Support of `--lib-XXX` is removed\n    * If fastfetch fails to load some `.so` `.dylib` libraries, `LD_LIBRARY_PATH` should be used.\n\nFeatures:\n* Support sixel image protocol on Windows (Logo, Windows)\n    * Requires imagemagick7 to be installed. MSYS2 is recommended.\n* Improve terminal query on Windows (Windows)\n    * TerminalSize, TerminalTheme\n* Detect more ARM microarchitectures and SOC names (CPU, Linux)\n* Detect the number of online cores (CPU, FreeBSD)\n* Support board name detection for Asahi Linux (Board, Linux)\n* Add new option `--command-param` to customize the parameters when running shell\n* Support syntax of sub string in `--<module>-format`: `{variable~startIndex,endIndex}`\n    * See `fastfetch -h format` for detail\n\nBugfixes:\n* Fix tests building when system yyjson is used (#1244)\n* Fix dinit detection; support dinit version detection (#1245, InitSystem, Linux)\n* Fix signal quality, refresh rate and maybe others in custom format (#1241)\n* Fix boot time calculation (#1249, Uptime, Linux)\n* Fix custom format for boolean values\n    * `{?false-value}This should not print{?}{?true-value}This should print{?}` will print `This should print`\n* Fix possible hanging when running fastfetch in screen 5.0 (TerminalTheme, macOS)\n\nLogos:\n* Add Lliurex\n\n# 2.23.0\n\nFeatures:\n* Support unity version detection (DE, Linux)\n* Print model name in Battery keys if available (Battery)\n* Add module `Zpool`\n* Improve performance (Shell / Terminal, Linux)\n* Support syntax of padded strings in `--<module>-format`. `{variable<padlength}` and `{variable>padlength}` are supported.\n    * If pad length is greater than the length of the variable, the variable will be padded with spaces.\n        * `fastfetch -l none -s command --command-text 'echo 12345' --command-format 'output({1<20})'` prints `Command: output(12345               )`\n        * `fastfetch -l none -s command --command-text 'echo 12345' --command-format 'output({1>20})'` prints `Command: output(               12345)`\n    * If pad length is less than the length of the variable, the variable will be truncated.\n\nBugfixes:\n* Fix broken `--list-presets`\n* Update zsh completion script\n* Don't print `*` if `defaultRouteOnly` is set (NetIO)\n* Fix Camera module incorrectly disabled on FreeBSD (Camera, FreeBSD)\n* Fix hanging on screen 5.0 (Terminal)\n* Improve image logo support on Windows (Logo, Windows)\n\nLogos:\n* Update AmogOS\n* Add Magix\n* Make ubuntu logo colorable\n* Add Steam Deck Logo\n* add Huawei Cloud EulerOS\n\n# 2.22.0\n\nFeatures:\n* Small performance improvements (Terminal, Editor)\n* Improve arm32 and loongarch support (CPU, Linux)\n* Ignore the parent process if env `$FFTS_IGNORE_PARENT` is set to `1` (Shell)\n* Add code name of Apple M4 (CPU, Linux)\n* Add ethernet speed rate detection support (LocalIP)\n* Add zsh completion script\n* Add Linglong package manager detection support (Packages, Linux)\n\nBugfixes:\n* Fix building on macOS 10.14\n* Fix tmux in linux TTY (Colors)\n* Fix hang in WSL when custom format is used (Disk, Linux)\n* Fix `/proc/loadavg` parsing (Loadavg, Linux)\n* Disable use of `LC_NUMERIC` locale settings to fix parsing of decimal numbers\n* Fix possible segfault (DiskIO, Linux)\n* Honor `preciseRefreshRate` in custom format (Display)\n\nLogos:\n* Add Lingmo OS\n* Add Sleeper OS\n\n# 2.21.3\n\nBugfixes:\n* Fix bad Intel Arc GPU name detection, which was supposed to be fixed in the last version but the change was reverted accidentally (#1177, GPU, Linux)\n* Fix arm32 CPU name detection no longer work. Regression of 2.21.2 (CPU, Linux)\n\n# 2.21.2\n\nFeatures:\n* Support `--stat <num_in_ms>` to display long running modules in yellow or red\n\nBugfixes:\n* Fix bad Intel Arc GPU name and type detection (GPU, Linux)\n* Fix uninited struct fields (GPU, Linux)\n* Skip cpu model smbios detection on ARM platforms (CPU, Linux)\n* Always use `CurrentControlSet` instead of `ControlSet001` when querying registry (Windows)\n* Fix NVIDIA GPUs are missing in GPU detection sometimes (GPU, Windows)\n* Fixing detection of `pthread_timedjoin_np` (Linux)\n\nLogos:\n* Add HyprOS\n* Add GoldenDog Linux\n\n# 2.21.1\n\nHotfix for a regression that breaks WM detection when running `startx` from TTY (Regression from 2.21.0, #1172 / #1162)\n\nChanges:\n* On Linux, FreeBSD and SunOS, a new recommended dependency `libelf` is introduced to extract strings in ELF binary, used for\n    * st term font detection when the term font is compiled directly into the binary\n    * fast path of systemd version detection\n\nFeatures:\n* Improve performance of\n    * kitty version detection (Terminal, Linux)\n    * st term font detection (TerminalFont, Linux)\n    * systemd version detection (InitSystem, Linux)\n\nBugfixes:\n* Fix building error without `linux/wireless.h` (Wifi, Linux)\n* Fix wrong GPU max frequency on Asahi Linux (GPU, Linux)\n* Don't rely `$XDG_SESSION_TYPE` for detecting wm protocol (#1172 / #1162, WM, Linux)\n* Fix light color doesn't work on Linux console (Colors, Linux)\n* `LC_ALL`, if set, overrides every other locale-related environment variable (Locale)\n* Increase timeout of DBus calls (Linux)\n\nLogos:\n* Add vanilla_small and vanilla2\n* Add LFS (Linux From Scratch)\n\n# 2.21.0\n\nChanges:\n* We no longer use `libnm` for Wifi detection on Linux. Instead, we use `libdbus` to communicate with NetworkManager directly\n    * To package managers: libnm dependency should be removed\n\nFeatures:\n* Add module `BluetoothRadio` that prints bluetooth radios installed on the system\n    * Don't confuse with module `Bluetooth` which lists connected bluetooth devices\n* Detect more information when `--gpu-driver-specific` is used (GPU)\n* Detect which type of nvidia driver (open source or proprietary) is used (GPU, Linux)\n* `--gpu-driver-specific` adds supports for Moore Threads GPU (#1142, GPU, Linux / Windows)\n* Use SetupAPI for detecting GPUs to support GPU detection when running fastfetch as a Windows Service (GPU, Windows)\n    * See https://github.com/gpustack/gpustack/pull/97#issuecomment-2264699787 for detail\n* Detect playback status (Media, Linux)\n\nBugfixes:\n* Don't try to connect display server in tty mode (Linux, #1110)\n* Improve ssh detection\n* Fix max frequency printing in custom format (CPU)\n* Fix displaying random characters when detecting kitty term font (#1136 / #1145, TerminalFont, Linux)\n* Make sure to detect all physical memory devices (#1137)\n* Don't detect `wl-restart` as WM (#1135, WM, Linux)\n* Use PCI bus ID to match Nvidia cards; fix multi-GPU detection (GPU)\n* Ignore invalid GPU (#1066, GPU, macOS)\n* Print error when invalid color code is found (#1138)\n* Fix invalid refresh rate detection on old macOS versions (Display, macOS)\n* Fix disk size detection on 32-bit systems (Disk, BSD)\n* Don't ignore disabled GPUs (#1140, GPU, Linux)\n* Fix GPU type detection on FreeBSD (GPU, FreeBSD)\n* Remove shell version detection for unknown shells (#1144, Shell)\n* Don't detect hyfetch as shell on NixOS (Shell, NixOS)\n\nLogos:\n* Update EndeavourOS_small\n* Add QTS\n\n# 2.20.0\n\nThis release fixes regression of `2.19.0` on M1 MacBook Air. It also introduces a new option `--key-type icon` to display predefined icons in keys (requires newest nerd font). See `fastfetch -h key-type` for detail.\n\nChanges:\n* JSON option `display.keyWidth` has been renamed to `display.key.width`\n    * Previously: `{ \"display\": { \"keyWidth\": 3 } }`\n    * Now: `{ \"display\": { \"key\": { \"width\": 3 } } }`\n* Windows Terminal font detection **in WSL** has been removed due to [issue #1113](https://github.com/fastfetch-cli/fastfetch/issues/1113)\n\nFeatures:\n* Add option `display.key.type: <enum>` to print icons in keys\n    * Supported value `string`, `icon` and `both`. Default to `string` (don't display icons)\n    * Example: `{ \"display\": { \"key\": { \"type\": \"icon\" } } }`\n* Add option `display.key.paddingLeft: <num>` to print left padding (whitespaces) in keys\n    * Example: `{ \"display\": { \"key\": { \"paddingLeft\": 2 } } }`\n* Add option `modules.keyIcon` to set icon for specified module\n    * Example: `{ \"modules\": { \"type\": \"command\", \"keyIcon\": \"🔑\" } }`\n* Report system mono font name for Terminator if used (TerminalFont, Linux)\n* Don't require logo height to be set when using `--logo-position right`\n* Report Snapdragon SOC marketing name for newer Android phones (CPU, Android)\n* Detect MTK SOC part name (CPU, Android)\n\nBugfixes:\n* Don't wake up suspended GPUs when using `--ds-force-drm` (Display, Linux)\n* Fix printing editor type in JSON result (Editor)\n* Fix `--logo-padding-*` not working correctly (#1121, Logo)\n* Fix possible segfault when detecting GPU frequency (#1121, macOS, GPU)\n\n# 2.19.1\n\nBugfixes\n* Fix frequency value printing when using custom format (#1111, CPU / GPU)\n* Fix display detection for XiaoMi Android phone (Display, Android)\n\nFeatures:\n* Display if HDR mode is enabled for screens (Display)\n    * Supported in Windows and Linux (KDE) correctly\n\n# 2.19.0\n\nChanges:\n* JSON option `modules.cpu.freqNdigits` has been renamed and moved to `display.freq.ndigits`\n    * Previously: `{ \"modules\": { \"type\": \"cpu\", \"freqNdigits\": 2 } }`\n    * Now: `{ \"display\": { \"freq\": { \"ndigits\": 2 } } }`\n    * This option now affects GPU frequency too\n    * By default, frequencies are displayed in *GHz*. Set `display.freq.ndigits` to `-1` to display them in *MHz*\n* JSON option `display.binaryPrefix` has been moved to `display.size.binaryPrefix`\n    * Previously: `{ \"display\": { \"binaryPrefix\": \"IEC\" } }`\n    * Now: `{ \"display\": { \"size\": { \"binaryPrefix\": \"IEC\" } } }`\n\nFeatures:\n* Print physical diagonal length if supported (Display)\n* Detect display type in X11 mode (Display)\n* Assume displays connected via DisplayPort are external monitors (Display, Linux)\n* Support GPU frequency detection for Intel XE driver (GPU, Linux)\n* Detect init system on Android (InitSystem, Android)\n* Use background to display color blocks (Colors)\n    * To fix weird vertical black lines in some terminals and match the behavior of neofetch (#1094)\n    * Can be reverted to old behavior with `--colors-symbol block`\n* Support Zed terminal version detection (Terminal)\n* Improve wezterm font detection (TerminalFont)\n* Add option `--separator-length`\n* Support GPU frequency detection for Apple Silicon (GPU, macOS)\n* Detect maximum refresh rate (#1101, Monitor)\n* Detect if HDR mode is supported and enabled (Windows, Display / Monitor)\n* Support physical monitor info detection for FreeBSD and SunOS (Monitor)\n* Support defining constant strings in JSON config file, which can be used to dedupe formattion strings\n```jsonc\n{\n    \"display\": {\n        \"constants\": [\n            \"Hello\", // {$1}\n            \"world\"  // {$2}\n        ]\n    },\n    \"modules\": [\n        {\n            \"type\": \"custom\",\n            \"format\": \"{$1} {$2}!\" // print \"Hello world!\"\n        },\n        {\n            \"type\": \"custom\",\n            \"format\": \"{$2} {$1}\" // print \"world Hello\"\n        }\n    ]\n}\n```\n\nBugfixes:\n* Fix some presets\n* Better detection for XTerm terminal fonts (#1095, TerminalFont, Linux)\n* Remove debug output (#1097, Windows)\n* Fix command line option `--gpu-hide-type` doesn't work (#1098, GPU)\n* Fix wrong date on Raspbian 10 (#1108, DateTime, Linux)\n* Use `brightness` instead of `actuall_brightness` when detecting current brightness level (Brightness, Linux)\n    * Ref: https://bugzilla.kernel.org/show_bug.cgi?id=203905\n* Fix buffer overflow with long font family names when detecting kitty term font (TerminalFont)\n* Fix some typos\n\nLogos:\n* Update void_small\n* Add ALT Linux\n\n# 2.18.1\n\nFix a regression introduced in v2.18.0\n\nChanges:\n* `--ts-version` has been renamed to `--detect-version`\n    * `general.detectVersion` in JSON config file\n\nBugfixes:\n* Fix and improve GPU driver detection (#1084, GPU, Linux)\n\n# 2.18.0\n\nChanges:\n* `yyjson 0.10.0` is required\n* Fastfetch no longer prints `*` (which means it's the default route) if `defaultRouteOnly` is set (LocalIP)\n\nBugfixes:\n* Fix some memory leaks\n* Fix compatibility with old Python versions\n* Don't detect frequency for AMD cards (GPU, Linux)\n    * Fix possible hang with discrete AMD cards (#1077)\n* Don't print colors in `--pipe` mode (Separator)\n* Don't print `(null)` in property `locator` (PhysicalMemory)\n* Ignore disabled PCI devices (GPU)\n* Fix flag `--opengl-library` doesn't work (OpenGL)\n\nFeatures:\n* Detect revision of USB drives (#1048, Disk)\n* Support fractional scale factor detection (Display, Linux)\n* Support primary display detection for KDE and GNOME (Display, Linux)\n* Support percent bar in custom formatting\n* Print signal quality by default (Wifi)\n* Detect used OpenGL library version (OpenGL)\n* Support detecting OpenGL version by `EGL` (ANGLE) on Windows (OpenGL)\n\nLogos:\n* Add Arkane Linux\n* Add Opak\n\n# 2.17.2\n\nChanges:\n* Flatpak package count no longer takes runtime packages into account (Packages, Linux)\n\nBugfixes:\n* Fix formattion with multiple batteries (Battery)\n* Fix incorrect size value for large memory sticks (PhysicalMemory)\n* Fix spelling of `Qt` and `LXQt`\n* Fix building on SunOS if imagemagick support is enabled (Logo, SunOS)\n* Fix typos\n\nFeatures:\n* Support Ptyxis terminal version and font detection (Terminal / TerminalFont, Linux)\n* Improve Cinnamon version detection (DE)\n* Support `cinnamon-wayland` (WMTheme)\n* `--ts-version false` will disable editor version detection (Editor)\n\n# 2.17.1\n\nHotfix for a regression that breaks Qt font detection\n\nBugfixes:\n* Don't generate and install `libffwinrt.dll.a` on MinGW (Windows)\n* Fix building on Windows when imagemagick support is enabled (Logo, Windows)\n* Don't print GPU frequency with `--gpu-temp` for Nvidia cards (#1052, GPU)\n    * `--gpu-driver-specific` needs to be specified\n* Print formatted size when `--gpu-format` is used (#1052, GPU)\n* Ignore QVariant format; fix unreadable Qt font (#1053, Theme, Linux)\n* Fix segfaults with `--show-errors` and an invalid module (#1055)\n\n# 2.17.0\n\nChanges:\n* CMake option `ENABLE_PROPRIETARY_GPU_DRIVER_API` is removed. The GPU driver APIs are now enabled by default.\n    * The option was introduced to reduce the license concerns. Since all non MIT proprietary code has been rewritten manually from scratch, it is no longer necessary.\n    * See <https://github.com/fastfetch-cli/fastfetch/issues/533#issuecomment-2122830958> for detail\n* Option `--logo-separate true` is changed to `--logo-position top` for better readability\n    * Builtin ascii logos can be positioned on the right side now with`--logo-position right`\n\nFeatures:\n* Add support for `--gpu-detection-method opencl` which uses OpenCL to detect GPUs.\n* Support detecting CPU cache size by using SMBIOS as fallback (CPUCache)\n* Support GPU detection (SunOS)\n* Support GPU type detection with AMD GPU driver (GPU, Windows)\n* Add fast path of version and font detection for kitty (Terminal / TerminalFont)\n* Make sure `stdin` and `stdout` are TTYs when querying terminal\n    * So modules like `TerminalSize` should work when `stdin` or `stdout` is redirected\n* Support argument truncation in `--<module>-format` (#1043)\n    * See `fastfetch --help format` for detail\n* Improve Qt theme detection (#1047, Theme, Linux)\n* Add new JSON config option `general.preRun`, which is executed before fastfetch prints output.\n    * It can be used to generate a temp logo file. For example  \n```jsonc\n{\n    \"general\": {\n        \"preRun\": \"kitten icat --align=left /path/to/image > /tmp/logo.kitty\"\n    },\n    \"logo\": {\n        \"source\": \"/tmp/logo.kitty\",\n        \"type\": \"raw\"\n    }\n}\n```\n\nBugfixes:\n* Fix invalid path (#1031, LM, Linux)\n* Fix VMEM detection for Nvidia GPU (requires `--gpu-driver-specific`) (GPU)\n* Fix AMD `--gpu-driver-specific` for AMD cards (#1032, GPU, Windows)\n* Use Coordinated Universal Time rather than timezone-varying local date (#1046)\n\nLogo:\n* Fix colors of Asahi Linux\n\n# 2.16.0\n\nThis release added basic support for SunOS (Solaris, illumos). The binaries provided in the release lack a few useful features (such as Display detection). People who use SunOS should consider building fastfetch themselves.\n\nChanges:\n* Fastfetch now prefers `/etc/os-release` over `/etc/lsb-release` when detecting distro info. \n    * This may break some distros (notably some debian based distros). File a bug with the content of `os-release` and `lsb-release` if it breaks your distro.\n\nFeatures:\n* Support Media detection in Windows (Media / Player, Windows)\n    * Requires Windows 10 and later\n* Add new option `--users-myself-only` to display current login user only (Users)\n* Add code name of macOS Sequoia (OS, macOS)\n* Add new module `DNS` to show active DNS servers (DNS)\n* Add new option `--loadavg-compact`. Defaults to true (Loadavg)\n    * Use `--loadavg-compact false` to display load averages in different lines\n* Detect MTU size (LocalIP)\n* Support version detection of pluma, which is the default editor of OpenIndiana (Editor)\n* Print used OGL library, eg EGL, GLX or OSMesa (OpenGL)\n\nBugfixes:\n* Report error if cache size is unavailable (CPUCache, Android)\n* Trim white spaces in device name (Sound, Linux, #1005)\n* Fix `display.bar.border{Left,Right}` doesn't work in JSON config files (Config)\n* Fix invalid call to `realpath(3)` (Platform, Linux)\n* Fix result calculation (CPUUsage, FreeBSD)\n\nLogos:\n* Add Mauna\n* Add Tuxdeo\n* Add Manjaro ARM\n* Add RedOS\n* Add Arch3\n\n# 2.15.0\n\nChanges:\n* `--bar-border <?bool>` has been changed to `--bar-border-left <string>` and `--bar-border-right <string>`, which are used for customizing the style of bar border.\n    * `--bar-border-left '' --bar-border-right ''` can be used to disable the border\n\nFeatures:\n* Add ability to skip installing license with INSTALL_LICENSE option (CMake)\n* Make it possible to shorten the theme and icons output (Theme / Icons)\n* Support `-l '?'` to show a question mark\n* Add new module `CPUCache` to display CPU cache sizes (CPUCache)\n* In `--<module>-format`, `{#keys}` and `{#title}` can be used to reference the color of keys and title\n* Improve speed of Guix package detection (Packages, Linux)\n* Assume wm plugins are daemon processes to improve performance (WM, macOS)\n\nBugfixes:\n* Remove shebangs from completions (#980)\n* Fix while chars not visible in terminal of light theme (Logo)\n* Normalize bright colors to fix color display in Apple Terminal (#991, Colors)\n* Correctly capitalize GNOME (#997, DE, Linux)\n* Fix segfault on system using turkish language (#995, InitSystem, Linux)\n* Fix kubuntu detection (#1000, OS, Linux)\n* Don't display duplicate entries (OS, Linux)\n\n# 2.14.0\n\nFeatures:\n* Support monochrome bar type (#960)\n* Support editor version detection on Windows (Editor, Windows)\n* Apply default color palettes in `--file` and `--data` (Logo)\n* Print all presets in `--list-presets` for better Windows support (Windows)\n* Support for guix package manager detection (Packages, Linux)\n* Support named variable placeholders in custom module formattion string (#796)\n    * `--title-format '{user-name-colored}{at-symbol-colored}{host-name-colored}'` is now equivalent to `--title-format '{6}{7}{8}'`\n* Support named color placeholders in custom module formattion string\n    * `--<module>-format '{#red}'` is now equivalent to `--<module>-format '{#31}'`\n    * `'{#red}'` or `'{#31}'` is preferred over `\\u001b[31m` because is more readable and `--pipe` aware (will be ignored in pipe mode)\n    * Supported in `Custom` module too\n    * See `fastfetch -h format` for detail\n* Add new module `InitSystem`, which detects the name of init system\n    * i.e. process name of pid1. `init`, `systemd`, etc\n* Add option `--color-separator` to set the color of key-value separators\n* Support Guix package manager count (#792, Packages, Linux)\n* Improve python based shell detection (#977, Shell, macOS)\n* Print error reason when vulkan init fails (Vulkan)\n\nBugfixes:\n* Don't detect `.conf` files in `--list-config-paths`\n* Don't try to detect terminals in MSYS shell with process backtracing (Windows)\n* Fix `outputColor` doesn't work if module keys are disabled\n\nLogos:\n* Add Cereus Linux\n* Re-add special handling of Loc-OS\n\n# 2.13.2\n\nAnother hotfix release :(\n\nBugfixes:\n* Remove DRM driver version detection feature, which caused a performance regression for nouveau drivers (#956, Display, Linux)\n* Fix compatibility for old python versions. Regression of `2.13.0`\n* Don't use `*-unknown` as display name for Wayland protocol (Display, Linux)\n\nFeatures:\n* Add new module `Editor` which prints information of the default editor, i.e. $VISUAL or $EDITOR (#430, Editor)\n\nLogos:\n* Added CuerdOS\n* Remove special handling of Loc-OS\n\n# 2.13.1\n\nFix a regression introduced in v2.13.0\n\nBugfixes:\n* Fix CPU frequency not displayed if `bios_limit` is not available (CPU, Linux)\n\nFeatures:\n* Add `--cpu-show-pe-core-count` to detect and display core count for performance / efficiency cores (CPU, FreeBSD)\n\n# 2.13.0\n\nChanges:\n* Option `--gpu-force-vulkan <?bool>` has been changed to `--gpu-detection-method <enum>`\n    * Use `--gpu-detection-method vulkan` to get the old behavior\n    * See `fastfetch -h gpu-detection-method` for detail\n* In Linux, BIOS limited CPU frequency is printed by default to match the behavior of neofetch (CPU, Linux, #947)\n\nFeatures:\n* Add new module `Bootmgr` which prints information of stage 2 bootloader (grub, system-boot, etc)\n    * Requires root permission to work on Windows and FreeBSD\n    * Requires booting in UEFI mode\n* Add package manager lpkg and lpkg-build support (Packages, Linux)\n* Improve macOS 10.13 compatibility (macOS)\n* Detect core count for performance / efficiency cores (CPU)\n    * Test it with `fastfetch -s cpu --cpu-format '{9}'`\n* Support min / max frequency and physical core count detection in FreeBSD, if kernel supports it (CPU, FreeBSD)\n* Detect DRM driver version if DRM detection method is used (GPU, Linux)\n\nBugfixes:\n* Don't detect `clifm` and `valgrind` as a terminal (Terminal, Linux)\n* Improve stability (PhysicalMemory, FreeBSD)\n* Fix bssid & status detection (Wifi, FreeBSD)\n* Ensure createTime is correctly initialized (Disk, FreeBSD / macOS)\n* Fix `--cpu-freq-ndigits` not working if `--cpu-format` is used\n* Fix `nix-user` package count detection (Packages, Linux)\n* Fix some memory leaks\n\nLogos:\n* Fix Manjaro logo not displayed\n* Add SpoinkOS\n* Add Loc-OS\n* Add Furreto Linux\n* Fix TorizonCore logo colors\n* Fix KDE neon logo not displayed\n\n# 2.12.0\n\nChanges:\n* The long deprecated flag based config files are removed.\n    * They can still be used with `xargs fastfetch < /path/to/config.conf`\n    * `--gen-config` can be used to migrate them to json based config files\n* The long deprecated options `--set` and `--set-keyless` are removed.\n* `Kernel` module now prints kernel name by default\n\nFeatures:\n* Support `st` terminal font detection for font configuration compiled in `st` binary (TerminalFont, Linux)\n* Add option `--color-output` to change output color of all modules except `Title`, `Separator`\n    * `display.color.output` in JSONC config file\n* Add option `--<module>-output-color` to change output color of one specified module, which overrides the global option `--color-output`\n* Add option `--publicip-ipv6` to print IPv6 address (PublicIP)\n* Add new module `Loadavg` to print load averages (Loadavg)\n* Add new module `PhysicalMemory` to print information of physical memory devices (PhysicalMemory)\n    * Requires root permission to work on Linux and FreeBSD\n* Support specifying `--logo-width` only for `--kitty-direct` and `--iterm` (Logo)\n* Add option `--localip-show-all-ips` to show all IPs assigned to the same interface (LocalIP)\n    * Default to `false`\n* Improve compatibility with `(*term)` (#909, Terminal, macOS)\n* Support GPU core count and frequency detection for Asahi Linux (GPU, Linux)\n\nBugfixes:\n* Rename option `--temperature-unit` to `--temp-unit` as documented in help messages\n* Fix alternate logo doesn't work with `{ \"type\": \"builtin\" }` (#914, Logo)\n\nLogos:\n* Fix DahliaOS detection\n* Add openSUSE Slowroll\n* Add macOS3\n* Add Quirinux\n\n# 2.11.5\n\nBugfix:\n* Fix logo printing for OpenMandriva (#896)\n* Remove `--os-file` in help messages\n\n# 2.11.4\n\nChanges:\n* Fastfetch will print a colorless ascii logo in `--pipe` mode for better `lolcat` compatibility. `fastfetch | lolcat` should work and no `--pipe false` needed.\n    * Previously the logo would be disabled in `--pipe` mode.\n    * Use `--pipe -l none` to get the old beheavior\n* `--os-file` was removed and CMake option `-DCUSTOM_OS_RELEASE_PATH=/path/to/os-release` was introduced for configuring at compile time by package managers if needed. This option should not used in most cases.\n\nBugfixes:\n* Fix possible out-of-bound memory access (#868)\n* Fix Apple Terminal detection (#878, macOS, Terminal)\n* Fix deprecation warning for macOS 14.0 hopefully (#860, macOS, Camera)\n* Fix memory leaks when passing informative options (#888)\n* Fix JSON config `size.ndigits` doesn't work \n\nFeatures:\n* Enable `--pipe` mode if environment variable `$NO_COLOR` is set\n* Support Armbian and Proxmox distro detection (OS, Linux)\n\nLogo:\n* Add Armbian\n\n# 2.11.3\n\nHotfix for nix (https://github.com/NixOS/nixpkgs/issues/308849#issuecomment-2093962376)\n\nFeatures:\n* Add cmake option `CUSTOM_AMDGPU_IDS_PATH` for specifying custom path of `amdgpu.ids`\n\nBugfixes:\n* Fix hanging when detecting disconnected network drive (Disk, Windows)\n* Ensure line ending is printed when printing image logo errors (Logo)\n* Revert image logo limitation change in 2.11.2; allow image logo in SSH session and tmux again (#861, Logo)\n* Fix doubled output in custom formation (PhysicalDisk, Windows)\n\n# 2.11.2\n\nHotfix for Debian 11\n\nChanges:\n* Error messages when trying to print image logo will only be printed with `--show-errors`\n* When generating JSON output, fastfetch will generate an empty array when no result is detected, instead of an error.\n\nBugfixes:\n* Fix segfault in Debian 11 and some old kernels. Regression introduced in 2.11.0 (#845, GPU, Linux)\n* Don't try detecting version of raw `sh` shell (#849, Shell, Linux)\n* Trim `\\r` on Windows\n\nFeatures:\n* Check xdg state home for nix user packages (#837, Packages, Linux)\n* Disable image logos in ssh and tmux sessions (#839)\n* Support MX Linux distro detection (#847, OS, Linux)\n\nLogo:\n* Add KernelOS\n* Fix name of DraugerOS\n* Add missing `FF_LOGO_LINE_TYPE_SMALL_BIT` flags\n* Add MX2\n\n# 2.11.1\n\nHotfix for Android\n\nBugfixes:\n* Fix uninitialized variables which can cause crashes (#760 #838, Battery, Android)\n* Don't detect hyfetch as shell when used as backend of [hyfetch](https://github.com/hykilpikonna/hyfetch)\n* Fix incorrect information in man page (#828)\n\nFeatures:\n* Support sorcery package manager detection (Packages, Linux)\n* Make `--custom-format` optional (Custom)\n* Make `/` an alias of `C:\\` for `--disk-folders` (Disk, Windows)\n* Build for Linux armv7\n\nLogo:\n* Fix colors of Source Mage logo\n\n# 2.11.0\n\nChanges:\n* Default `hideCursor` to false. It doesn't make much difference but makes user's terminal unusable if fastfetch is not exited correctly.\n* Linux amd64 binaries are built with Ubuntu 20.04 again (#808)\n\nBugfixes:\n* Fix swap usage detection in x86-32 build (Windows, Swap)\n* Fix minimum cmake version support (#810)\n* Fix wifi detection on platforms that don't use NetworkManager (#811, Wifi, Linux)\n* Fix NixOS wrapped process name (#814, Terminal, Linux)\n* Fix GPU type detection for AMD cards (#816, GPU, Linux)\n* Silence system deprecation warnings (#822, Camera, macOS)\n\nFeatures:\n* Add basic support DE detection support for UKUI (DE, Linux)\n* Support printing total number of nix / flatpak / brew packages (Packages)\n    * See `fastfetch -h packages-format` for detail\n* Better max CPU frequency detection support with `CPUID / 16H` instruction (CPU, Windows)\n    * This requires Intel Core I Gen 6 or newer, and with `Virtual Machine Platform` Windows feature disabled. X86 only.\n* Improve performance of nix packages detection (Packages, Linux)\n* Make config specified in JSONC overridable by command line flags\n    * Note this change only make global config overridable; module configs are still not\n* Suggest increasing `--processing-timeout` when child process timeouts\n* Only detect folders that specified by `--disk-folders`\n    * Previously `--disk-folders` only omits unmatched disks from output\n    * This option can be used to improve detection performance by ignoring slow network drives\n\n# 2.10.2\n\nBugfixes:\n* Fix a regression that detect x11 as wayland (#805, WM, Linux)\n\n# 2.10.1\n\nBugfixes:\n* Fix build with `-DENABLE_DBUS=OFF` (Linux)\n\n# 2.10.0\n\nChanges:\n* We now always detect max frequency of GPUs for consistent, instead of current frequency\n\nFeatures:\n* Improve display detection for wlroots based WMs. Fastfetch now correctly reports fractional scale factors in hyprland (Display, Linux)\n* Improve GPU detection on Linux (GPU, Linux)\n    * Support GPU memory usage detection for AMD GPUs\n    * Support GPU frequency detection for Intel GPUs\n* Improve performance of GNOME version detection (DE, Linux)\n* Improve performance of kitty version detection (Terminal, Linux)\n* Detect refresh rate when using `--ds-force-drm sysfs-only` (Display, Linux)\n* Add option `--ts-version` to disable terminal and shell version detection. Mainly for benchmarking purposes\n* Improve performance of detecting WSL version (Host, Linux)\n\nBugfixes:\n* Correctly detect `/bin/sh` as current shell if it's used as default shell (#798, Shell, Linux)\n* Work around an issue which CPU module reports incorrect CPU frequency that is too high (#800, CPU, Linux)\n* Don't print ANSI escape codes in `--pipe` mode\n\n# 2.9.2\n\nChanges:\n* To make use of the newly introduced `yyjson` flag `YYJSON_WRITE_NEWLINE_AT_END`, fastfetch now requires `yyjson` 0.9.0 or later\n\nFeatures:\n* Always add a final new-line when generating JSON output\n* Detect partition create time, which can be used as OS installation time (Disk)\n* Print time string when generating JSON result instead of UNIX epoch time number, which is more human-readable\n\nBugfixes:\n* Fix a memory leak\n* Better portable mode detection of Windows Terminal (TerminalFont, Windows)\n* Fix parsing of option `--packages-disabled` (Packages)\n* Don't use command `time` as a shell (Shell)\n\nLogos:\n* Add openSUSE MicroOS\n* Fix color of AOSC OS\n\n# 2.9.1\n\nFeatures:\n* Support weston-terminal (missed commit in v2.9.0) (TerminalFont, Linux)\n* Support hyprcursor detection (#776, Cursor, Linux)\n\nBugfixes:\n* Fix `fastfetch --gen-config` raises SIGSEGV when `~/.config/fastfetch` doesn't exist. Regression of `2.9.0` (#778)\n\n# 2.9.0\n\nFeatures:\n* Support Lxterminal version detection (Terminal, Linux)\n* Support weston-terminal version detection (Terminal, Linux)\n* Support `am` package manager detection (#771, Packages, Linux)\n* Support network prefix length detection for IPv6 (LocalIP)\n* Display all IPs when multiple IPs are assigned to the same interface (LocalIP)\n* Add option `--localip-show-prefix-len` to show network prefix length for both IPv4 and IPv6. Defaults to `true` (LocalIP)\n\nBugfixes:\n* Fix network prefix length detection when the value is greater than 24 (#773, LocalIP, Linux)\n* For xfce4-terminal, use system mono font if no config file is found (TerminalFont, Linux)\n\n# 2.8.10\n\nBugfixes:\n* Don't display 0.00 GHz (CPU, FreeBSD)\n* Don't detect manufactor of Qualcomm as ARM (CPU, Android)\n* Ignore `chezmoi` (Terminal, Linux)\n* Trim trailing possible whitespaces (PublicIP)\n* Fix detection compatibility for KDE 6 (Font, Linux)\n* Always use Metal API to detect vmem size (GPU, macOS)\n\nFeatures:\n* Improve stability; print more useful error message; avoid misuse (PublicIP / Weather)\n* Use MS-DOS device name as mountFrom result, instead of useless GUID volume name (Windows, Disk)\n* Some adjustments to Terminal detection (Terminal, Windows)\n    * Don't pretty print CMD\n    * Print conhost as Windows Console\n    * Don't detect `wininit` as Terminal\n\nLogo:\n* Fix color of Arco Linux\n\n# 2.8.9\n\nBugfixes:\n* Don't detect `SessionLeader` as terminal, actually (Terminal, Linux)\n* Fix blurry chafa result when specifying both width and height (#757, Logo)\n\nFeatures:\n* Support new MacBook Air (Host, macOS)\n* Distinguish min frequency and base frequency (CPU)\n\nLogo:\n* Fix proxmox\n\n# 2.8.8\n\nBugfixes:\n* Fix old fish version compatibility (#744)\n* Fix truncated texts in `--help format` (#745)\n* Fix old vulkan-header and libdrm library compatibility (#748, Linux)\n* Fix possible segfaults in `--help *-format` (#749)\n* Fix invalid resolution detection when using libdrm (Linux, Display)\n* Fix segfault when `/sys/devices/system/cpu/cpufreq/` doesn't exist (#750, CPU, Linux)\n* Don't detect `SessionLeader` as terminal (Terminal, Linux)\n* Fix detection of client IP (Users, Linux)\n\n# 2.8.7\n\nBugfixes:\n* Fix max CPU frequency detection for some cases (CPU, Linux)\n* Fix some memory leaks\n* Fix ddcutil 2.1 compatibility (Brightness, Linux)\n* Workaround `permission denied` error when reading `/proc/uptime` (Uptime, Android)\n\nFeatures:\n* Support zellij version detection (Linux, Terminal)\n\nLogo:\n* Fix PostMarketOS\n\n# 2.8.6\n\nChanges:\n* Due to newly introduced configs, JSONC option `{ \"temperatureUnit\": \"C\" }` has been changed to `{ \"temp\": { \"unit\": \"C\" } }`\n\nBugfixes:\n* Fix incorrect GPU name detection for Intel iGPU on Linux (#736, GPU, Linux)\n\nFeatures:\n* Support additional temperature formatting options (#737)\n    * `{ \"temp\": { \"ndigits\": 1 } }`\n    * `{ \"temp\": { \"color\": { \"green\": \"green\", \"yellow\": \"yellow\", \"red\": \"red\" } } }`\n* Support specifying custom `pci.ids` path for Linux (GPU, Linux)\n* Support warp-linux terminal version & terminal font detection (Terminal, Linux)\n\n# 2.8.5\n\nBugfixes:\n* Fix uninitialized variables\n\n# 2.8.4\n\nBugfixes:\n* Fix segfault if we fail to find `Vendor ID` in `lscpu` (#718, CPU, Linux)\n* Fix multi-device bcachefs filesystem compatibility (#731, Disk, Linux)\n\nFeatures:\n* Support portable Windows Terminal settings (#720, Terminal, Windows)\n* Support `--color-block-width` and `--color-block-range` (#721, Colors)\n* Support `--diskio-detect-total` to show total bytes read/written (DiskIO)\n* Support `--netio-detect-total` to show total bytes received/sent (NetIO)\n* Support `--packages-disabled` to disable specified package manager (#729, Packages)\n* Support `--display-order` to sort multiple displays in a specific order (Display)\n* Support `--display-compact-type original-with-refresh-rate` to show refresh rates in compact (oneline) mode (Display)\n\n# 2.8.3\n\nBugfixes:\n* Fix GPU name detection for AMD graphic cards (GPU, Linux / FreeBSD)\n\n# 2.8.2\n\nChanges:\n* The linux binaries are now built with glibc 2.35, which means they no longer support Debian 11 and Ubuntu 20.04. Users using these distros may download the artifacts `fastfetch-linux-old` from GitHub Actions.\n\nFeatures:\n* Rewrite GPU module, drop libpci dependency (GPU, Linux)\n* Detect marketing name of Apple Silicon CPUs for asahi linux (CPU, Linux)\n* Add new module `Camera`, which prints the name and resolution of connected cameras\n\nBugfixes:\n* Fix compatibility with packages installed by flatpak (Terminal, Linux)\n* Don't show an empty battery if no battery is detected (macOS, Battery)\n* Don't show `not connected` if no power adapter is found (macOS / Linux, PowerAdapter)\n* Make format of battery status be consistent with other platforms (Linux, Battery)\n\nLogo:\n* Print Asahi logo in asahi linux (Logo, Linux)\n* Add Asahi2, z/OS, Tatra, PikaOS\n\n# 2.7.1\n\nFeatures:\n* Config presets in app folder now work with symlinks\n\nBugfixes:\n* Fix a possible segfault when detecting terminal (Terminal, Linux)\n\n# 2.7.0\n\nFeatures:\n* Add new module `TerminalTheme`, which prints the foreground and background color of the current terminal window. Currently doesn't work on Windows.\n* Allow command substitution when expanding paths. For example, now it's possible to use `\"source\": \"$(ls ~/path/to/images/*.png | shuf -n 1)\"` in JSONC config file to randomly choose an image to display. (#698)\n* Use native methods instead of pciutils to detect GPUs in FreeBSD. (GPU, FreeBSD)\n\nBugfixes:\n* Fix text formatting (Wifi, Linux)\n* Fix terminal detection in some cases (Terminal)\n* Remove trailing `\\0` in JSON results (FreeBSD)\n* Fix uninitialized variables (GPU, Linux)\n* Fix a possible segfault (OpenCL)\n\nLogo:\n* Add ASCII logos for fedora immutable variants (#700)\n\n# 2.6.3\n\nBugfixes:\n* Fix module not working (Bluetooth)\n\n# 2.6.2\n\nBugfixes:\n* Fix building for GCC in Windows (Windows)\n\n# 2.6.1\n\nFeatures:\n* Improve xonsh shell detection (Shell)\n* Support colored percentage values (Bluetooth / Gamepad / Sound)\n* Add `--<module>-percent-[green|yellow]` options to specify threshold of percentage colors\n    * eg. `--disk-percent-green 20 --disk-percent-yellow 50` will show green if disk usage is less than 20%, yellow if disk usage is less then 50%, and red otherwise.\n* Add `--percent-color-[green|yellow|red]` options to specify color of different percent value states.\n    * eg. `--percent-color-green blue` will show blue color if percent value falls in green state.\n* Improve Intel macbook support (macOS)\n\nBugfixes:\n* Fix segfault in CPU module when running in aarch64 machine without `lscpu` installed (CPU, Linux)\n* Don't use `login` as terminal process (Terminal, Linux)\n* Silence warnings when building in 32bit machines.\n* Create sub folders when writing config file (#690)\n* Improve user specific locale detection; fix locale detection in Windows 7 (Locale)\n* Fix GPU type detection (GPU, macOS)\n\n# 2.6.0\n\nChanges:\n* Remove support of option `--battery-dir`. We detect a lot of things in `/sys/class/*` and only module `Battery` supports specifying a custom directory for some reason, which is weird.\n* Remove `--chassis-use-wmi` which is no longer used.\n\nFeatures:\n* Add `ENABLE_PROPRIETARY_GPU_DRIVER_API` cmake option to disable using of proprietary GPU driver APIs (GPU)\n* Support wallpaper detection for macOS Sonoma (Wallpaper, macOS)\n* Support power adapter detection for Asahi Linux (PowerAdapter, Linux)\n* Support battery serial number and manufacturer date detection (Battery)\n* Support host serial number and UUID detection (Host)\n* Support battery level detection for gamepads where possible (Gamepad)\n* Support maximum CPU clock detection. Previously base clock was printed (CPU, Windows)\n* Support manufacture date and serial number detection for physical monitors (Monitor)\n* Support ash (default shell of BusyBox) version detection (Shell, Linux)\n* Sound module in FreeBSD now uses native `ioctl`s. Pulseaudio dependency is no longer used.\n* Locale module in Windows now prints the same format as in Linux and other posix systems.\n\nBugfixes:\n* Fix overall memory leaks (macOS)\n* Remove trailing `\\0` in JSON results (FreeBSD)\n* Fix physical monitor detection with Nvidia drivers (Monitor, Linux)\n* Don't print llvmpipe in vulkan module (Vulkan)\n* Fix system yyjson usage in `fastfetch.c`. Previously embedded `3rdparty/yyjson/yyjson.h` was used in `fastfetch.c` even if `ENABLE_SYSTEM_YYJSON` was set (CMake)\n* Fix locale module printing unexpected results in specific environments (Locale)\n* Fix battery temperature detection in Windows. Note only smart batteries report temperatures but few laptops uses smart battery (Battery, Windows)\n* Print device name if no backlight name is available, so we don't print empty parentheses (Brightness, FreeBSD)\n\n# 2.5.0\n\nChanges:\n* `--gpu-use-nvml` has been renamed to `--gpu-driver-specific` due to using of `IGCL` and `AGS`\n* We now detect external partitions more conservatively in Linux. USB partitions will not be detected as external always ( eg. The Linux kernel itself is installed in a USB drive )\n\nFeatures:\n* Support more authentication type detection for macOS Sonoma (Wifi, macOS)\n* Default preset names to `.jsonc`. For example, `fastfetch -c all` will load `presets/all.jsonc` (#666)\n* Use Intel Graphics Control Library (IGCL) to detect more GPU information. Windows only (GPU, Windows)\n* Improve support of Asahi Linux (Brightness / CPU / GPU / Disk, Linux)\n* Support more properties of physical disks (PhysicalDisk)\n* Support SSD temperature detection with `--physicaldisk-temp` (PhysicalDisk)\n* Support partition label detection (Disk, FreeBSD)\n* Support platform specific graphic API version detection (GPU, macOS / Windows)\n\nBugfixes:\n* Fix Windows partition detection for WSL2 (Linux, Disk)\n* Fix Btrfs subvolumes being detected as external partitions some times (Linux, Disk)\n* Fix battery cycle counts in some places (Battery)\n* Fix CodeWhisperer compatibility (#676, Terminal, macOS)\n\n# 2.4.0\n\n**We are deprecating flags based config files (will be removed in v3.0.0). We suggest you migrate to json based config files.** One may use `-c /path/to/config.conf --gen-config` to migrate existing flag based config files.\n\nChanges:\n* All flag based presets are removed\n\nFeatures:\n* Improve performance of detecting rpm and pkg package count (Packages, Linux / FreeBSD)\n* Support Apple M3X temperature detection (CPU / GPU, macOS)\n* `--ds-force-drm` support a new option `sysfs-only`\n* Improve xfce4 version detection\n* Detect WM and DE by enumerating running processes (WM / DE, FreeBSD)\n* Add a new module `Physical Disk`, which detects product name, full size, serial number and so on.\n\nBugfixes:\n* Fix crashes sometimes when `--logo-padding-top` is not set (Logo)\n* Fix memory usage counting algorithm (Memory, macOS)\n* Fix the behavior of `--no-buffer` in Windows\n* Fix possible segfault in some devices (Display, Linux)\n* Fix segfaults on first use of new images with Sixel flag (Image) \n\nLogo:\n* Remove unnecessary escaping for Adelie logo\n* Add EshanizedOS\n\n# 2.3.4\n\nBugfixes:\n* Fix `--help` doesn't work when built without python\n\nFeatures:\n* Use `MemAvailable` if available (Memory, Linux)\n* Improve performance of detecting dpkg package count (Packages, Linux)\n\n# 2.3.3\n\nBugfixes:\n* Fix `--help` doesn't work in Windows and some other platforms\n\n# 2.3.2\n\nBugfixes:\n* Fix fish completion script, and install the script correctly\n\nLogo:\n* Fix Xray-OS logo name\n\n# 2.3.1\n\nBugfixes:\n* Fix man page install location\n\n# 2.3.0\n\n**We are deprecating flags based config files (will be removed in v3.0.0). We suggest you migrate to json based config files.**\n\nConfig related changes:\n* The deprecated flag `--gen-config conf` is removed\n* Flag `--gen-config` now does the same thing as `--migrate-config`, which can be used as config migration and default config file generation. Flag `--migrate-config` is removed\n* Fastfetch now searches for config files in the order of `fastfetch --list-config-paths`, and won't load other config if one is found.\n* The undocumented flag `--load-user-config` is removed. As an alternative, `--config none` can be used to disable loading config files.\n* `--config` (previously named `--load-config`) is now supported for command line arguments only. If specified, other config files won't be loaded, which works like other programs.\n* Config files will always be loaded before other command line flags being parsed. That is to say, command line flags will always override options defined in config files.\n* the value of GPUType `integrated` contained a typo and was fixed. Existing config files may need to be updated.\n\nFeatures:\n* Support Oils and elvish shell version detection (Shell)\n* Support Windows Server Core (Windows)\n* Better ddcutil 2.x compatibility (Brightness, Linux)\n* Add completion support for fish (natively) and nushell (via [carapace-bin](https://github.com/rsteube/carapace-bin))\n* Support nix in macOS (Packages, macOS)\n* Print module description for `--list-modules`\n* Support `alacritty.toml` (TerminalFont)\n* Support board detection on macOS. It simplily prints machine model identifier as for now (Board, macOS)\n* Add general method to query product name (Host, macOS)\n* Use `libdrm` as a better fall back for detecting displays, which correctly detects current mode; supports refresh rate detection and maybe also faster than using `/sys/class/drm` (Display, Linux)\n* Support physical disk size detection (DiskIO)\n* Support physical disk name and type detection (DiskIO, FreeBSD)\n\nBugfixes:\n* End `va_list` before returning (@VoltrexKeyva)\n* Don't use background color when printing blocks (Color)\n* Fix lots of typos\n* Fix compatibility with Linux containers (Linux)\n* Don't report disabled monitors when using DRM (Linux)\n* Fix bad performance in some cases when using X11 (Display, Linux)\n* Fix some memory leaks\n* Fix used swap space detection (Swap, FreeBSD)\n* Don't leak fds to child processes (Linux)\n* Fix possible issues when reading procfs (Linux, @apocelipes)\n\nLogos:\n* Add Adelie, Ironclad\n* Update parch\n\n# 2.2.3\n\nFeatures:\n* Update the latest mac models (Host, macOS)\n\nBugfixes:\n* Fix local ips detection on Android. Regression from `2.0.0` (LocalIP, Android)\n* Fix terminal detection on NixOS (Terminal)\n\n# 2.2.2\n\nChanges:\n* `--percent-type` now defaults to 9 (colored percentage numbers)\n* `fastfetch` now prints LocalIp module by default\n\nFeatures:\n* LocalIP module now prints netmask in CIDR format for IPv4 (LocalIP)\n* Bios module now detects system firmware type (Bios)\n* Improve detection of `Battery`\n    * Detect cycle count on supported platforms\n    * Detect temperature on Linux when supported\n    * Status detection on macOS has been adjusted to be consistent with other platforms\n* Linux binaries are built with imagemagick7 support\n\nBugfixes:\n* Fix uninitialized variables (#609)\n* Fix spelling of `--preserve-aspect-ratio` (#614)\n\nLogos:\n\n* Update NixOS_small\n\n# 2.2.1\n\nHotfix release for #606\n\nBugfixes:\n* Fix broken presets due to the breaking changes introduced in 2.2.0\n\nFeatures:\n* Pretty print `fastfetch --help`\n\n# 2.2.0\n\nThis release introduces a new option `--migrate-config`, which migrates old flag based config file to new JSONC format\n\nChanges:\n* `--pipe` and `--stat` are moved from `general` options to `display` options. This affects cjson configuration.\n* Display keys `percent*` and `size*` in JSON config are restructured. e.g. `{ \"sizeNdigits\": 1 }` is now `{ \"size\": { \"ndigits\": 1 } }`\n* With the introduction of `--migrate-config`, the old flag based config file is deprecated, and will be removed in 3.0.0 (next major version)\n* Support of `--gen-config conf` is deprecated accordingly, and will be removed in 2.3.0 (next minor version)\n* The global flag `--allow-slow-operations` is split into some explicit flags in different modules\n    * `--packages-winget`: control whether `winget` packages count should be detected. Note it's a very slow operation, please enable it with caution.\n    * `--chassis-use-wmi`: control whether `WMI` query should be used to detect chassis type, which detects more information, but slower. This flag only affects `--chassis-format` and `--format json`.\n    * `--battery-use-setup-api`: control whether `SetupAPI` should be used on Windows to detect battery info, which supports multi batteries, but slower.\n    * `--wm-detect-plugin`: control whether WM plugins should be detected. Note it's implemented with global processes enumeration and can report false results.\n    * `--de-slow-version-detection`: control DE version should be detected with slow operations. It's usually not necessary and only provided as a backup.\n* `--localip-default-route-only` and `--netio-default-route-only` defaults to true to avoid large number of results\n\nFeatures:\n* Quirks for MIPS platforms (CPU, Linux)\n* Use devicetree path for OBP hosts (Host, Linux)\n* Detect `tmux: server` as tmux (Terminal, Linux)\n* Support urxvt version detection (Terminal, Linux)\n* Support st version detection (Terminal, Linux)\n* Support st terminal font detection (TerminalFont, Linux)\n* Support xfce4-terminal 1.1.0+ terminal font detection (TerminalFont, Linux)\n* Add option `--migrate-config <?target-file-path>`\n* Support Nvidia GPU temp and cuda core count detection via nvml. Use `--gpu-use-nvml` to enable it (GPU)\n* Try supporting Wifi authentication type detection in macOS Sonoma. Please file a feature request if you get `to be supported (num)` with result of `/System/Library/PrivateFrameworks/Apple80211.framework/Resources/airport -I | grep auth` (Wifi, macOS)\n\nBugfixes:\n* Better GPU memory and type detection (GPU, Windows)\n* Don't print display type twice (Display)\n* Detect BSSID instead of Wifi MAC address to align with other platforms (Wifi, macOS)\n* Remove support of used GPU memory detection, which is not reliable and only supported with `--gpu-force-vulkan`. (GPU)\n* Fix flag `--brightness-ddcci-sleep` (Brightness, Linux)\n* Fix hanging if a child process prints to both stdout and stderr (Linux)\n\nLogos:\n* Add Black Mesa\n* Add cycledream\n* Add Evolinx\n* Add azos\n* Add Interix\n\n# 2.1.2\n\nBugfixes:\n* Fix icon detection on Windows. It shows enabled system icons in desktop (`This PC`, `Recycle Bin`, etc) (Icon, Windows)\n* Fix compatibility with ddcutil 2.0 (Brightness, Linux)\n* Fix a compile warning (CPUUsage, FreeBSD)\n\n# 2.1.1\n\nFeatures:\n* Support opkg (Packages, Linux)\n* Support GNOME Console terminal version and font detection (Terminal, Linux)\n* Add `--cpu-freq-ndigits` to set number of digits for CPU frequency (CPU)\n* New module to detect physical disk I/O usage (DiskIO)\n* Add `--cpuusage-separate` to display CPU usage per CPU logical core\n* Add `--brightness-ddcci-sleep` to set the sleep times (in ms) when sending DDC/CI requests (Brightness, #580)\n\nBugfixes:\n* Fix possible crashes on Windows 7 (Disk, Windows)\n* Fix possible crashes caused by uninitialized strings (Users, Windows)\n* Improve support of `--help *-format` and several bugs are found and fixed\n* Don't incorrectly print `No active sound devices found` when using a non-controllable sound device (Sound, macOS)\n* Fix implementation processes counting (Processes, Linux)\n* Work around a issue that SSID cannot be detected on macOS Sonoma (Wifi, macOS)\n\nLogo:\n* Add Chimera Linux\n* Add EndeavourSmall\n* Add Xenia\n* Add MainsailOS\n* Fix phyOS\n\n# 2.1.0\n\nThis release introduces a new output format: JSON result\n\nChanges:\n* Users module detects and prints user login time by default. Specifying `--users-compact` to disable it\n* Fastfetch now requires yyjson 0.8.0 or later, which is embedded in fastfetch source tree. If you build fastfetch with `-DENABLE_SYSTEM_YYJSON` cmake option, you must upgrade your yyjson package\n* Reduced information supported by `--terminal-format`, `--shell-format`\n* Some config presets (`devinfo` and `verbose`) are obsolete and removed. They are barely maintained and can be replaced with `--format json` now.\n* Custom strings in `--module-key` and `--module-format` are no longer trimmed.\n* `/boot` is hidden by default (FreeBSD, Disk)\n\nFeatures:\n* Add `--format json`, which prints system information as JSON format\n* Add fast path for xfce4 version detection (DE, FreeBSD)\n* Support contour terminal version and font detection (Terminal / TerminalFont)\n* Support `kitty-direct` / `iterm` without specifying logo width / height. Note: in this case, the entre screen will be cleared.\n* Support new flag `--logo-separate`. If true, print modules at bottom of the logo\n* Support Apple Silicon CPU frequency detection (CPU, macOS)\n* Support user login time detection (Users)\n* Support winget package manager detection, guarded behind `--allow-slow-operations` (Packages, Windows)\n* Print monitor type (built-in or external) (Display)\n* Support full GPU detection in WSL (Linux, GPU)\n* Add `--module-key \" \"` as a special case for hiding keys\n* Support `--title-format`. See `fastfetch --help title-format` for detail\n* Support `--colors-key` (Colors)\n* Add `-c` as a shortcut of `--load-config`. Note it was used as the shortcut of `--color` before 2.0.5\n* Support Windows Service Pack version detection (Kernel, Windows)\n* Support Debian point releases detection (OS, Linux)\n* Add new module `NetIO` which prints network throughput (usage) of specified interface. Note this module costs about 1 second to finish.\n* Use `lscpu` to detect CPU name for ARM CPUs (CPU, Linux)\n\nBugfixes:\n* Fix fastfetch hanging in specific environment (#561)\n* Fix short read when reading from stdin (Logo)\n* Fix `poll() timeout or failed` error when image is very large (Logo)\n* Fix Termux Monet terminal version detection (Terminal)\n* Fix zpool volumes detection (Disk, Linux)\n* Fix external volumes detection (Disk, Linux)\n* Fix snap package number detection on systems other than Ubuntu (Packages, Linux)\n* Fix dpkg / apt package number detection (Packages, Linux)\n* Fix bluetooth mac address detection (Bluetooth, Windows)\n\nLogo:\n* Add Afterglow\n* Add Elbrus\n* Update EvolutionOS\n* Update AOSC OS\n* Update Ubuntu_old\n* Update Windows 11_small\n* Add Amazon Linux\n* Add LainOS\n* Fix colors of Slackware\n\n# 2.0.5\n\nBugfixes:\n* Fix segfault when using libxrandr (#544, Display, Linux)\n* Don't print 0px (#544, Cursor)\n\nFeatures:\n* Add option `--disk-use-available` (#543)\n* Add option `--disk-show-readonly`\n\n# 2.0.4\n\nBugfixes:\n* Fix building on 32-bit FreeBSD (Memory, FreeBSD)\n* Fix `--file-raw` doesn't work (Logo)\n\nFeatures:\n* Trait `-` as an alias for `/dev/stdin`. Available for `--file`, `--file-raw` and `--raw` (Logo)\n\n# 2.0.3\n\nBugfixes:\n* Fix typo in config parsing for --color-title (#534)\n* Fix percent formatting for `--*-format` (#535)\n* Fix loading presets for homebrew (macOS)\n\nFeatures:\n* Add option `--percent-ndigits`\n* Add command flag `--config` as an alias of `--load-config`\n* Windows packages now include presets (Windows)\n\n# 2.0.2\n\nBugfixes:\n* Workaround [a compiler bug of GCC](https://gcc.gnu.org/bugzilla/show_bug.cgi?id=85282) (Windows)\n* Fix presets not detected by file name (#529)\n\nLogo:\n* Add Tuxedo OS\n\n# 2.0.1\n\nFirst stable release of Fastfetch V2\n\nChanges:\n* Unescape strings only when parsing `.conf` files\n    * Previously: `$ NO_CONFIG=1 fastfetch --os-key \\\\\\\\ -s os -l none` prints `\\: *`. Note the backslashes are unescaped twice (once by shell and once by fastfetch).\n    * Now: `$ NO_CONFIG=1 fastfetch --os-key \\\\\\\\ -s os -l none` prints `\\\\: *`\n* Remove option shortcut `-c` (alias of `--color`), which is more commonly used as alias of `--config`\n* Rename `--recache` to `--logo-recache` (which is used for regenerate image logo cache). Remove option shortcut `-r` (alias of `--recache`).\n* Detecting brightness of external displays with DDC/CI is no longer guarded behind `--allow-slow-operations` (Brightness)\n\nFeatures:\n* Add `--key-width` for aligning the left edge of values, supported both for global `--key-width` and specific module `--module-key-width`\n* Add `--bar-char-elapsed`, `--bar-char-total`, `--bar-width` and `--bar-border` options\n* Add CMake option `ENABLE_SYSTEM_YYJSON`, which allow building fastfetch with system-provided yyjson (for package managers)\n* Add new module `Version`, which prints fastfetch version (like `fastfetch --version`)\n\nBugfixes:\n* Fix label detection. Use `--disk-key 'Disk ({2})'` to display it (Disk, Linux)\n* Fix some module options were not inited\n* Fix terminal version and font detection on NixOS (Terminal, Linux)\n\n# 2.0.0-beta\n\nFastfetch v2 introduces a new configuration file format: JSON config. Please refer to <https://github.com/fastfetch-cli/fastfetch/wiki/Configuration> for details.\n\nChanges:\n* Drop the dependency of cJSON. We now use [yyjson](https://ibireme.github.io/yyjson/doc/doxygen/html/index.html) to parse JSON documents.\n* Remove `--shell-version` and `--terminal-version`. They are always enabled (Terminal / Shell)\n* Remove `--*-error-format`, which seems to be useless\n* Remove `--display-detect-name`. Display name is always detected, and will be printed if multiple displays are detected\n* Deprecate `--set` and `--set-keyless`; they may be removed in future releases. Use JSON config with Custom module instead\n* Remove the special handling of Command module (it can be set once in the triditional `config.conf`). Use JSON config with Command module instead\n* Change `--wm-theme-*` to `--wmtheme-*`. Affect `key` and `format` (WMTheme)\n* Change `--terminal-font-*` to `--terminalfont-*`. Affect `key` and `format` (TerminalFont)\n* Module `Command` uses `/bin/sh` as the default shell on systems other than Windows (Command)\n* Fix M2 CPU temperature detection (CPU, macOS)\n* Detect monitor name when available, instead of using DRM connector name (Display / Brightness, Linux)\n\nFeatures:\n* FreeBSD support is improved greatly, and actually tested in a physical machine\n* Add `--no-buffer` option for easier debugging. CMake option `ENABLE_BUFFER` is removed and always enabled.\n* Support `--*-key-color` option to change the key color of specified module\n* Support `--colors-symbol` and `--colors-padding-left` (Colors)\n* Add LM (Login Manager) module. Currently requires systemd installed (thus Linux only)\n* Add `--wmi-timeout` option (Windows)\n* Add `--logo-type small` to search for small logos\n* Support detecting brightness of external displays with DDC/CI (guard behind `--allow-slow-operations`) (Brightness)\n* Add option `--size-ndigits` and `--size-max-prefix` (#494)\n* Add option `--processing-timeout` to the timeout when waiting for child processes.\n* Public IP module prints the IP location if `--publicip-url` is not set (PublicIP)\n* Add option `--localip-default-route-only` (LocalIP)\n* Add option `--weather-location` (Weather)\n* Support iTerm non-ascii font detection (Terminal, macOS)\n* Add option `--title-color-user`, `--title-color-at` and `--title-color-host` (Title)\n* Add Exherbo logo and package manager count (Packages, Linux, #503)\n* Add module `Terminal Size` which prints the number of terminal width and height in characters and pixels\n* Add new option `--temperature-unit`\n* Better CPU and Host detection for Android (Android)\n* Support yakuake terminal version & font detection (Terminal, Linux)\n* Add new option `--bright-color` which can be used to disable the default bright color of keys, title and ASCII logo.\n* Add module `Monitor` which prints physical parameters (native resolutions and dimensions) of connected monitors\n* Support path with environment variables for `--logo-source` and `--load-config`.\n\nBugfixes:\n* Fix possible hanging (TerminalFont, #493)\n* Fix heap-buffer-overflow reading (DisplayServer, Linux)\n* Fix false errors when built without libnm support (Wifi, Linux)\n* Properly detect CPU on POWER (CPU, Linux)\n* Fix compatibility with Fig (Terminal, macOS)\n* Fix option `--title-fqdn` doesn't work (Title)\n* Fix used spaces calculation (Disk, Linux / BSD / macOS, #508)\n* Fix `--brightness-format` (Brightness)\n* Fix specifying `--set-keyless` with the same key second time won't override the value set before (#517)\n* Fix specifying `--color` second time won't clear the value set before (#517)\n\nLogo:\n* Change the special handling of `kitty` protocol with `.png` image file to a new image protocol `kitty-direct`. This is the fastest image protocol because fastfetch doesn't need to pre-encode the image to base64 or something and the image content doesn't need to be transmitted via tty. Note:\n    1. Although konsole was said to support `kitty` image protocol, it doesn't support `kitty-direct`\n    2. wezterm support more image formats other than `.png` (tested with `.jpg` and `.webp`)\n* Port all logos supported by neo(wo)fetch. Fastfetch now has 350 builtin logos in total.\n\n# 1.12.2\n\nFeatures:\n* Support terminator terminal version detection (Linux, Terminal)\n* Support `pkgtool` package manager detection (Linux, Packages)\n* Support `Far` shell version detection (Windows, Shell)\n\nBugfixes:\n* Fix ConEmu terminal detection in some special cases (Windows, Terminal, #488)\n* Fix incorrect Host on M2 Mac Studio with M2 Max CPU (macOS, Host, #490)\n\n# 1.12.1\n\nBugfixes:\n* Fix compiling error on Apple Slicon (Bios, macOS)\n\n# 1.12.0\n\nThis release backports some changes from dev branch, and fixes 2 crashing issues\n\nFeatures:\n* Support KDE / LXQt / MATE / Cinnamon wallpaper detection (Wallpaper, Linux)\n* Support QTerminal version & terminal font detection\n* Support MATE Terminal version & terminal font detection\n* Set `--pipe true` automatically if stdout is not a tty\n* Detect new macs released on WWDC 2023 (macOS, Host)\n* Count cached memory as free memory (FreeBSD, Memory)\n* Support sound detection (FreeBSD, Sound)\n\nBugfixes:\n* Fix DE detection on Windows 8.1 (Windows, DE)\n* Fix `--logo-padding-left` doesn't work when `--logo-padding-top` is set (Logo)\n* Fix KDE version detection on Fedora (DE)\n* Include limits.h when needed (Linux, #472)\n* Fix Windows drives detection in WSL (Linux, Disk)\n* Fix CPU temp detection (FreeBSD, CPU)\n* Fix disk detection (Android, Disk)\n* Fix GNOME Terminal version and font detection (FreeBSD, TerminalFont)\n* Fix crash on newer wayland desktops (Linux, Display, #477)\n* Fix vendor detection for Intel GPU (macOS, GPU)\n* Fix possible crashes on Windows Server (Windows, GPU, #484)\n\nLogo:\n* Add bsd, freebsd_small, ghostbsd\n* Make Windows 11 logo colorable\n\n# 1.11.3\n\nBugfixes:\n* Fix a segfault bug, regression of `1.11.1` (Linux, wmtheme, #467)\n\n# 1.11.2\n\nThis release should be the last version of fastfetch 1.x (if no serious bugs found, hopefully)\n\nFeatures:\n* Support display name, type, rotation detection on Wayland (Linux, Display)\n* Print more useful display name instead of intel_backlight (Linux, Brightness)\n* Icons module supports Windows (Windows, Icons)\n* Add Wallpaper module which shows the current wallpaper image path\n* Add mac address detection `--localip-show-mac` (LocalIP, #451)\n\nBugfixes:\n* Fix GNOME version detection on Fedora (DE)\n* Fix Windows drives detection in WSL (Disk)\n\nChanges:\n* In order to make Icons module consistent between different platforms, `--icons-format` no longer supports individual GTK / Qt icon params.\n* `--theme-format` no longer supports individual GTK / plasma theme params.\n* `--local-ip-*` and `--public-ip-*` have been changed to `--localip-*` and `--publicip-*`\n* `--localip-compact-type` is no longer supported. Fastfetch now display IPs as `--localip-compat-type multiline` by default, with `--local-compact true` can be set as an alias of `--localip-compact-type oneline`\n* `--localip-v6first` is no longer supported.\n\n# 1.11.1\n\nFeatures:\n* Support xonsh detection (TerminalShell)\n* Support Tabby version / terminal font detection (TerminalFont)\n\nBugfixes:\n* Fix name of Pro Controller (Gamepad, Windows)\n* Fix compile error with imagemagick enabled (Windows)\n* Fix copy-and-paste errors (Gamepad)\n* Flatpak: Fix user package count\n* Flatpak: Count runtime packages too (#441)\n* Fix flatpak package count (#441)\n* Don't print white color blocks with `--pipe` (#450)\n* Fix iTerm being detected as iTermServer-* sometimes\n* Fix sound device volume being incorrectly detected as muted sometimes (Sound)\n* Fix memleaks reported by LeakSanitizer (Linux)\n* Fix potential memory corruption bug in unicode.c (Windows)\n\nLogo:\n* Update Windows 11 ASCII logo to look more visually consistent (#445)\n* Add another font color index to arch icon (#446)\n* Add SteamOS\n* Add macOS small / small2\n\n# 1.11.0\n\nFeatures:\n* Support linuxbrew (Packages, Linux)\n* Support foot terminal (#431, Linux)\n* Support cursor size detection on Windows (Cursor, Windows)\n* Support cursor detection on macOS (Cursor, macOS)\n* Support display name, display type and decimal refresh rate detection (Display, macOS / Windows)\n* Support `--display-compact-type` to display multiple resolutions in one line (Display)\n* Support flatpak-user (Packages, Linux, #436)\n* Support `--gpu-force-vulkan` to force using vulkan to detect GPUs, which support video memory usage detection with `--allow-slow-operations` (GPU)\n\nBugfixes:\n* Fix date time format\n* Fix compiling with musl (Wifi, Linux, #429)\n* Don't exit if libpci is failed to init (GPU, Linux, #433)\n* Names of most well-known gamepads are correctly printed instead of `Wireless Controller` on Windows\n\nLogo:\n* Small update for nobara logo (#435, @regulargvy13)\n\n# 1.10.3\n\nBugfixes:\n* Fix uninitialized variables (GPU, Windows)\n* Fix compiling errors (Windows)\n\nImprovements:\n* Improve performance (WmTheme amd Font, Windows and macOS)\n* Enable nonblocking public-ip / weather detection (Android)\n\n# 1.10.2\n\nBugfixes:\n* Handle `kAudioObjectPropertyElementMain` for macOS **SDK** < 12 (#425, @nandahkrishna)\n* Add missing `NULL` for `ffProcessAppendStdOut` (#421)\n\n# 1.10.1\n\nNew release for debugging #421\n\n# 1.10.0\n\nNotable Changes:\n\n* With the support of Win32 platform, original Windows 64bit artifact file is renamed to Win64 to avoid possible confusion\n\nFeatures:\n* Bluetooth module\n* Sound module\n* Gamepad module\n* Support colored percentage numbers output (#409)\n* Support `--localip-compact-type` option (#408)\n* Terminator terminal font detection (@Zerogiven, #415)\n* Windows 32bit compatibility\n* Support global configuration in MSYS2 environment (Windows)\n* Support GPU driver version detection on Windows 11\n* Support scaled resolution detection for wayland (Linux)\n\nBugfixes:\n\n* Fix build with older libnm versions\n* Fix a rare case that fails to detect terminal\n* Fix Muffin detection (@Zerogiven, #411)\n* Fix IPv6 detection (Windows)\n* Fix scoop package count detection when scoop is installed in non-default path (Windows, #417)\n* Fix UB reported by clang\n* Honor $SCOOP when detecting scoop packages (#417)\n\nOther:\n\n* Simplified wmtheme output format (Windows)\n* Improved GPU detection performance on Windows 11\n* Latest Mac model identifier support (macOS)\n\n# 1.9.1\n\nBugfixes:\n\n* Fix builds on s390x (@jonathanspw, #402)\n* Fix zero refresh rate on some monitors (macOS)\n* Fix default formatting of Wifi module\n\n# 1.9.0\n\nNotable Changes:\n* fastfetch no longer creates a sample config file silently. Use `--gen-config` to generate one.\n* fastfetch now search for user config file in the order of `fastfetch --list-config-paths`\n* Unknown disks are hidden by default.\n* `Resolution` module is renamed to `Display`. (#393)\n\nFeatures:\n* `--logo-padding-top` option (@CarterLi, #372)\n* Raw image file as logo support (@CarterLi)\n* Look for config files in `$APPDATA` ([RoamingAppData](https://superuser.com/questions/21458/why-are-there-directories-called-local-locallow-and-roaming-under-users-user#answer-21462)) (Windows)\n* Look for config files in `~/Library/Preferences` (macOS)\n* Add `--list-config-paths` option which list search paths of config files\n* Add `--list-data-paths` option which list search paths for presets and logos\n* Add `Brightness` module support\n* Add `Battery` module support for FreeBSD\n* Add `--disk-show-unknown` option for Disk module\n* Add `--disk-show-subvolumes` option for Disk module\n* Add `--gpu-hide-integrated` option (#379)\n* Add `--gpu-hide-discrete` option (#379)\n* Detect terminal version when available\n* Support `WezTerm` terminal font detection (requires [`wezterm` executable](https://wezfurlong.org/wezterm/cli/general.html) being available)\n* Add `--shell-version` and `--terminal-version` options to disable shell / terminal version detection\n* Enhance `--percent-type` to allow hiding other texts (#387)\n* Add Wifi module support for Linux\n* Detect scaled resolutions (Windows, macOS)\n* Optimise font module printing (Windows)\n* Detect pacman package count inside MSYS2 environment (Windows)\n* Add Wifi / Battery module support for Android\n* Disk name support for Linux\n\nLogos:\n* Raspbian (@IamNoRobot, #373)\n\nBugfixes:\n* `--logo-type` now does accept `iterm` too (@CarterLi, #374)\n* Fix mintty terminal font detection (Windows)\n* Fix bug that line buffering doesn't work properly (Windows)\n* Fix rpm package count detection (Linux)\n* Fix cpu temp detection (Linux)\n\nOther:\n* Fixed a Typo in iterm error message (@jessebot, #376)\n* Don't try to load config file in `/etc` (Windows)\n\n# 1.8.2\n\nBugfixes:\n\n* Fix memleaks Users module (Windows)\n* Fix shell detection when installed with scoop (Windows)\n* Don't use libcJSON as wlanapi's dll name (Windows)\n* Align artifact names to other platforms (Windows)\n\n# 1.8.1\n\nNotable Changes:\n\n* `Song` was used as an alias to `Media` module. It's removed to avoid confusion. All song related flags (`--song-key`, etc) should change to media (`--media-key`, etc). (@CarterLi)\n\nBugfixes:\n\n* Mountpoint paths on linux get decoded correctly (#364)\n* Color parsing once again works (@IanManske, #365)\n* Using a custom key with a placeholder for the local ip module now does work correctly if multiple interfaces are present (#368)\n\n# 1.8.0\n\nThis release introduces Windows support! Fastfetch now fully support all major desktop OSes (Linux, macOS, Windows and FreeBSD)\n\nNotable Changes:\n* Bios / Board / Chassis modules are split against Host module for performance reasons\n* Caching is removed. Option `--nocache` is removed accordingly\n\nFeatures:\n* Windows (7 and newer) is officially and fully supported\n* FreeBSD support is improved greatly (Bios, Cpu Temp, Cpu Usage, Disk, Host, Processes, Swap, Terminal / Shell, Uptime)\n* Adds a new flag `--stat`, which prints time usage for individual modules\n* Adds Wifi module which supports Windows and macOS\n* Adds data source option for logo printing\n* Detects Homebrew Cellar and Cask separately\n* Detects WSL version\n* Detects disk based on mount point\n* Exposes more chafa configs\n* Improves performance for Cpu Usage, Public IP, Weather modules\n* Improves performance for Kitty image protocol when both image width / height specified\n* Improves performance for large file loading\n* Improves performance for macOS WM and Host detection\n* Improves shell and terminal detection on macOS\n* Supports Deepin Terminal terminal font\n* Supports GPU detection on Android\n* Supports Kitty Terminal terminal font\n* Supports bar output for percentage values\n* Supports Bios module on macOS\n* Supports eopkg package manager detection\n* Supports iTerm image logo protocol\n* Supports image logo printing on macOS\n* Supports tcsh version detection\n* Vulkan module on macOS no longer requires vulkan-loader to work\n\nLogos:\n* Alpine\n* CRUX\n* EndeavourOS\n* Enso\n* Garuda small\n* Nobara\n* OpenMandriva\n* Parabola GNU/Linux-libre\n* Rocky\n* Rosa\n* Solus\n* Univalent\n* Vanilla OS\n\nBugfixes:\n* Fixes disk size detection on 32bit Linux (#337)\n* Fixes cpu freq detection in WSL\n* Fixes internal bug of FFstrbuf\n* Fixes some memory leaks\n* Fixes segfault if 0 is given as argument index\n* Lots of code refactors\n\n# 1.7.5\n\nFixes a crash on linux that could happen when getting zsh version (#285)\n\n# 1.7.4\n\nThe last element in the default structure (currently the color blocks) is now printed again (#283)\n\n# 1.7.3\n\nA lot of small improvements for MacOS & BSD platforms.\n\nFeatures:\n* BSD is now officially supported (#228)\n* MacPorts package manager support (@SladeGetz, #234)\n* Battery support for MacOS (@CarterLi, #235)\n* Processes, swap & terminal font support for MacOS(@CarterLi, #237)\n* Media support for MacOS (@CarterLi, #242)\n* Player support for MacOS (@CarterLi, #245)\n* WM theme support for MacOS (@CarterLi, #246)\n* CPU usage support for MacOS (@CarterLi, #247)\n* Power Adapter module (@CarterLi, #249)\n* Windows terminal font for WSL (@CarterLi, #254)\n* Temps & Font support for MacOS (@CarterLi, #258)\n* Terminal font support for Termux (@CarterLi, #263)\n* Weather module (@CarterLi, #266)\n\nLogos\n* Crystal linux (@AloneER0, #239)\n* FreeBSD (@draumaz, #244)\n* New Ubuntu (@AloneER0, #259)\n\nBugfixes:\n* Don't segfault in GPU code on Intel Macs (@CarterLi, #236)\n* Don't use hardcoded size units in presets (@dr460nf1r3, #255)\n* Don't crash with some format strings (#252)\n* --logo none keeps key color now (#264)\n\n# 1.7.2\n\nFixes the bash completions\n\n# 1.7.1\n\nThis release brings a lot of bug fixes and improvements for MacOS. Big thanks to @CarterLi for the help on this!\n\nFeatures:\n* The color of the title and the keys can now be configured individually, using `--color-keys` and `--color-title` respectively. Some distros have different defaults now, similar to neofetch\n* Swap module, similar to the Memory module, but for swap. Add `Swap` to your structure to enable it (#225)\n\nLogos:\n* Slackware (#227)\n\nBugfixes:\n* Used disk space is now calculated much more accurately\n* On Linux, GPU names are no longer truncated, if they are longer than 32 characters (#224)\n* On Linux, NVIDIA GPUs once again have a proper name\n\n* On M1 platforms, showing the GPU name no longer crashes the program (#222)\n* Brew package count does now work on M1 platforms too\n* The Vulkan module now does work on MacOS too\n* The OpenGL and OpenCL modules now work on MacOS too (@CarterLi, #226)\n* The LocalIp module now works on MacOS too (@CarterLi, #232)\n* Detecting custom WMs on MacOS does now work\n\nOther:\n* GitHub actions now builds a dmg file for MacOS, as you can see in the release page\n\n# 1.7.0\n\nThis release brings support for MacOS!\nThe basics things are working, but it is far from feature parity with Linux.\nI developed this in a VM, so bugs on real hardware are likely.\nIf you have a Mac and no idea what to do with your free time, i am very happy to accept pull requests / work on issues.\n\nA lot of things were changed under the hood to make this possible, which should bring better performance and stability on all platforms.\n\nBesides that, the following things have changed:\n\nFeatures:\n* The binary prefix used can now be configured, and is used consistently across all modules. Set `--binary-prefix` to `iec` (default), `si` or `jedec`.\n* AMD GPUs now have a much better name, if the file `/usr/share/libdrm/amdgpu.ids` exists. For example my dedicated GPU, which was displayed as `AMD/ATI Radeon RX 5600 OEM/5600 XT / 5700/5700 XT`, is now `AMD Radeon RX 5600M`.\n\nLogos:\n* MacOS\n* CachyOS small (@sirlucjan, #220)\n* MSYS2 (#219)\n\nBugfixes:\n* the `--file` option, which can be used to display the contents of a file as the logo, is now working again.\n\n# 1.6.5\n\nFixes parsing quoted values in config files\n\n# 1.6.4\n\nReleasing this, so fedora can package fastfetch. Thanks to @jonathanspw for doing that!\n\nFeatures:\n* --set-keyless option (#215)\n* Replace `\\n`, `\\t`, `\\e` and `\\\\` in user provided strings, just like c would do it (#215)\n* APK (Alpine Package Keeper) support (@mxkrsv, #216)\n\nLogos:\n* Alma Linux (@jonathanspw, #214)\n\nBugfixes:\n* replace deprecated gethostbyname call with getaddrinfo (#217)\n\n# 1.6.3\n\nFixes installing presets in their own directory (@ceamac, #212)\n\n# 1.6.2\n\nReleasing this, so void linux can package fastfetch.\n\nLogos:\n* Rosa linux (#206)\n* KISS linux (@draumaz, #207)\n* LangitKetujuh (@hervyqa, #208)\n\nBugfixes:\n* Using musl as libc does work now (#210)\n* XBPS packages are once again printed (#209)\n* configured target dirs are applied to install directories too\n* empty XDG_* env vars don't cause a crash anymore\n\n# 1.6.1\n\nFixes build on android (#205)\n\n# 1.6.0\n\nFeatures:\n* Detect Qt on more DEs than just KDE Plasma. The [Plasma] category was therefore renamed to [Qt]\n* Alacritty font detection\n* Load `/etc/fastfetch/config.conf` before user config\n* Disk: print one decimal point if size < 100GB\n* `--title-fqdn` option, to print fully qualified domain name instead of host name in title\n\nLogos:\n* updated old NixOS logo\n\nBugfixes:\n* Correctly detect GTK on DEs that store their settings in dconf\n* Correctly detect NixOS packages\n* Mutter WM detected once again\n* Show full NixOS version in OS output\n* Don't segfault if an invalid structure is given\n* WSL doesn't output GPU anymore, as the name is always meaningless\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 68.697265625,
          "content": "cmake_minimum_required(VERSION 3.12.0) # target_link_libraries with OBJECT libs & project homepage url\n\nproject(fastfetch\n    VERSION 2.34.0\n    LANGUAGES C\n    DESCRIPTION \"Fast neofetch-like system information tool\"\n    HOMEPAGE_URL \"https://github.com/fastfetch-cli/fastfetch\"\n)\n\nset(PROJECT_LICENSE \"MIT license\")\n\n###################\n# Target Platform #\n###################\nif(ANDROID)\n    set(LINUX FALSE)\nelseif(\"${CMAKE_SYSTEM_NAME}\" STREQUAL \"Linux\")\n    set(LINUX TRUE CACHE BOOL \"...\" FORCE) # LINUX means GNU/Linux, not just the kernel\nelseif(\"${CMAKE_SYSTEM_NAME}\" STREQUAL \"FreeBSD\")\n    set(FreeBSD TRUE CACHE BOOL \"...\" FORCE)\nelseif(\"${CMAKE_SYSTEM_NAME}\" STREQUAL \"OpenBSD\")\n    set(OpenBSD TRUE CACHE BOOL \"...\" FORCE)\nelseif(\"${CMAKE_SYSTEM_NAME}\" STREQUAL \"MidnightBSD\")\n    set(FreeBSD TRUE CACHE BOOL \"...\" FORCE)\n    set(MidnightBSD TRUE CACHE BOOL \"...\" FORCE)\nelseif(\"${CMAKE_SYSTEM_NAME}\" STREQUAL \"NetBSD\")\n    set(NetBSD TRUE CACHE BOOL \"...\" FORCE)\nelseif(\"${CMAKE_SYSTEM_NAME}\" STREQUAL \"DragonFly\")\n    set(FreeBSD TRUE CACHE BOOL \"...\" FORCE)\n    set(DragonFly TRUE CACHE BOOL \"...\" FORCE)\nelseif(\"${CMAKE_SYSTEM_NAME}\" STREQUAL \"SunOS\")\n    set(SunOS TRUE CACHE BOOL \"...\" FORCE)\nelseif(NOT APPLE AND NOT WIN32)\n    message(FATAL_ERROR \"Unsupported platform: ${CMAKE_SYSTEM_NAME}\")\nendif()\n\n#############################\n# Compile time dependencies #\n#############################\n\nset(THREADS_PREFER_PTHREAD_FLAG NOT WIN32)\nfind_package(Threads)\n\nfind_package(PkgConfig)\nif(NOT PKG_CONFIG_FOUND)\n    message(WARNING \"pkg-config not found, library detection might be limited\")\nendif()\n\ninclude(CheckIncludeFile)\n\n#####################\n# Configure options #\n#####################\n\ninclude(CMakeDependentOption)\n\ncmake_dependent_option(ENABLE_VULKAN \"Enable vulkan\" ON \"LINUX OR APPLE OR FreeBSD OR OpenBSD OR NetBSD OR WIN32 OR ANDROID OR SunOS\" OFF)\ncmake_dependent_option(ENABLE_WAYLAND \"Enable wayland-client\" ON \"LINUX OR FreeBSD OR OpenBSD OR NetBSD\" OFF)\ncmake_dependent_option(ENABLE_XCB_RANDR \"Enable xcb-randr\" ON \"LINUX OR FreeBSD OR OpenBSD OR NetBSD OR SunOS\" OFF)\ncmake_dependent_option(ENABLE_XRANDR \"Enable xrandr\" ON \"LINUX OR FreeBSD OR OpenBSD OR NetBSD OR SunOS\" OFF)\ncmake_dependent_option(ENABLE_DRM \"Enable libdrm\" ON \"LINUX OR FreeBSD OR OpenBSD OR NetBSD OR SunOS\" OFF)\ncmake_dependent_option(ENABLE_DRM_AMDGPU \"Enable libdrm_amdgpu\" ON \"LINUX\" OFF)\ncmake_dependent_option(ENABLE_GIO \"Enable gio-2.0\" ON \"LINUX OR FreeBSD OR OpenBSD OR NetBSD OR SunOS\" OFF)\ncmake_dependent_option(ENABLE_DCONF \"Enable dconf\" ON \"LINUX OR FreeBSD OR OpenBSD OR NetBSD OR SunOS\" OFF)\ncmake_dependent_option(ENABLE_DBUS \"Enable dbus-1\" ON \"LINUX OR FreeBSD OR OpenBSD OR NetBSD OR SunOS\" OFF)\ncmake_dependent_option(ENABLE_XFCONF \"Enable libxfconf-0\" ON \"LINUX OR FreeBSD OR OpenBSD OR NetBSD OR SunOS\" OFF)\ncmake_dependent_option(ENABLE_SQLITE3 \"Enable sqlite3\" ON \"LINUX OR FreeBSD OR APPLE OR OpenBSD OR NetBSD OR SunOS\" OFF)\ncmake_dependent_option(ENABLE_RPM \"Enable rpm\" ON \"LINUX\" OFF)\ncmake_dependent_option(ENABLE_IMAGEMAGICK7 \"Enable imagemagick 7\" ON \"LINUX OR FreeBSD OR OpenBSD OR NetBSD OR APPLE OR WIN32 OR SunOS\" OFF)\ncmake_dependent_option(ENABLE_IMAGEMAGICK6 \"Enable imagemagick 6\" ON \"LINUX OR FreeBSD OR OpenBSD OR NetBSD OR APPLE OR SunOS\" OFF)\ncmake_dependent_option(ENABLE_CHAFA \"Enable chafa\" ON \"ENABLE_IMAGEMAGICK6 OR ENABLE_IMAGEMAGICK7\" OFF)\ncmake_dependent_option(ENABLE_ZLIB \"Enable zlib\" ON \"ENABLE_IMAGEMAGICK6 OR ENABLE_IMAGEMAGICK7\" OFF)\ncmake_dependent_option(ENABLE_EGL \"Enable egl\" ON \"LINUX OR FreeBSD OR OpenBSD OR NetBSD OR ANDROID OR WIN32 OR SunOS\" OFF)\ncmake_dependent_option(ENABLE_GLX \"Enable glx\" ON \"LINUX OR FreeBSD OR OpenBSD OR NetBSD OR ANDROID OR SunOS\" OFF)\ncmake_dependent_option(ENABLE_OSMESA \"Enable osmesa\" ON \"LINUX OR FreeBSD OR OpenBSD OR NetBSD OR SunOS\" OFF)\ncmake_dependent_option(ENABLE_OPENCL \"Enable opencl\" ON \"LINUX OR FreeBSD OR OpenBSD OR NetBSD OR WIN32 OR ANDROID OR SunOS\" OFF)\ncmake_dependent_option(ENABLE_FREETYPE \"Enable freetype\" ON \"ANDROID\" OFF)\ncmake_dependent_option(ENABLE_PULSE \"Enable pulse\" ON \"LINUX OR OpenBSD OR NetBSD OR SunOS\" OFF)\ncmake_dependent_option(ENABLE_DDCUTIL \"Enable ddcutil\" ON \"LINUX\" OFF)\ncmake_dependent_option(ENABLE_DIRECTX_HEADERS \"Enable DirectX headers for WSL\" ON \"LINUX\" OFF)\ncmake_dependent_option(ENABLE_ELF \"Enable libelf\" ON \"LINUX OR ANDROID OR DragonFly\" OFF)\ncmake_dependent_option(ENABLE_THREADS \"Enable multithreading\" ON \"Threads_FOUND\" OFF)\ncmake_dependent_option(ENABLE_LIBZFS \"Enable libzfs\" ON \"LINUX OR FreeBSD OR SunOS\" OFF)\ncmake_dependent_option(ENABLE_PCIACCESS \"Enable libpciaccess\" ON \"NetBSD OR OpenBSD OR SunOS\" OFF)\n\noption(ENABLE_SYSTEM_YYJSON \"Use system provided (instead of fastfetch embedded) yyjson library\" OFF)\noption(ENABLE_ASAN \"Build fastfetch with ASAN (address sanitizer)\" OFF)\noption(ENABLE_LTO \"Enable link-time optimization in release mode if supported\" ON)\noption(BUILD_FLASHFETCH \"Build flashfetch\" ON) # Also build the flashfetch binary\noption(BUILD_TESTS \"Build tests\" OFF) # Also create test executables\noption(SET_TWEAK \"Add tweak to project version\" ON) # This is set to off by github actions for release builds\noption(IS_MUSL \"Build with musl libc\" OFF) # Used by Github Actions\noption(INSTALL_LICENSE \"Install license into /usr/share/licenses\" ON)\noption(ENABLE_EMBEDDED_PCIIDS \"Embed pci.ids into fastfetch, requires `python`\" OFF)\n\nset(BINARY_LINK_TYPE_OPTIONS dlopen dynamic static)\nset(BINARY_LINK_TYPE dlopen CACHE STRING \"How to link fastfetch\")\nset_property(CACHE BINARY_LINK_TYPE PROPERTY STRINGS ${BINARY_LINK_TYPE_OPTIONS})\nif(NOT BINARY_LINK_TYPE IN_LIST BINARY_LINK_TYPE_OPTIONS)\n    message(FATAL_ERROR \"BINARY_LINK_TYPE must be one of ${BINARY_LINK_TYPE_OPTIONS}\")\nendif()\n\nset(PACKAGE_MANAGERS AM APK BREW CHOCO DPKG EMERGE EOPKG FLATPAK GUIX LINGLONG LPKG LPKGBUILD MACPORTS NIX OPKG PACMAN PACSTALL PALUDIS PKG PKGTOOL RPM SCOOP SNAP SORCERY WINGET XBPS)\nforeach(package_manager ${PACKAGE_MANAGERS})\n    if(package_manager STREQUAL \"WINGET\")\n        option(PACKAGES_DISABLE_${package_manager} \"Disable ${package_manager} package manager detection by default\" ON)\n    else()\n        option(PACKAGES_DISABLE_${package_manager} \"Disable ${package_manager} package manager detection by default\" OFF)\n    endif()\nendforeach()\n\nif (LINUX)\n    set(CUSTOM_PCI_IDS_PATH \"\" CACHE STRING \"Custom path to file pci.ids, defaults to `/usr/share/hwdata/pci.ids`\")\n    set(CUSTOM_AMDGPU_IDS_PATH \"\" CACHE STRING \"Custom path to file amdgpu.ids, defaults to `/usr/share/libdrm/amdgpu.ids`\")\n    set(CUSTOM_OS_RELEASE_PATH \"\" CACHE STRING \"Custom path to file os-release, defaults to `/etc/os-release`\")\nendif()\n\n####################\n# Compiler options #\n####################\n\nif(NOT CMAKE_BUILD_TYPE)\n    set(CMAKE_BUILD_TYPE RelWithDebInfo)\nendif()\n\nmessage(STATUS \"Build type: ${CMAKE_BUILD_TYPE}\")\nif(ENABLE_THREADS)\n    if(CMAKE_USE_WIN32_THREADS_INIT)\n        message(STATUS \"Threads type: Win32 thread\")\n    elseif(CMAKE_USE_PTHREADS_INIT)\n        message(STATUS \"Threads type: pthread\")\n    endif()\nelse()\n    message(STATUS \"Threads type: disabled\")\nendif()\n\nset(WARNING_FLAGS \"-Wall -Wextra -Wconversion -Werror=uninitialized -Werror=return-type\")\n\nset(CMAKE_C_STANDARD 11)\nset(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} ${WARNING_FLAGS} -Werror=incompatible-pointer-types -Werror=implicit-function-declaration -Werror=int-conversion\")\n\nif(WIN32 OR ENABLE_DIRECTX_HEADERS)\n    enable_language(CXX)\n    set(CMAKE_CXX_STANDARD 17)\n    set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} ${WARNING_FLAGS}\")\nendif()\n\nif(WIN32)\n    set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -Wl,--tsaware -Wl,--build-id -Wl,--subsystem,console:6.1,--major-os-version,6,--minor-os-version,1\")\nelseif(APPLE AND CMAKE_C_COMPILER_ID MATCHES \"Clang\")\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -fobjc-arc\")\nendif()\n\nset(FASTFETCH_FLAGS_DEBUG \"-fno-omit-frame-pointer\")\nif(ENABLE_ASAN)\n    message(STATUS \"Address sanitizer enabled (DEBUG only)\")\n    set(FASTFETCH_FLAGS_DEBUG \"${FASTFETCH_FLAGS_DEBUG} -fsanitize=address\")\nendif()\nset(CMAKE_C_FLAGS_DEBUG \"${CMAKE_C_FLAGS_DEBUG} ${FASTFETCH_FLAGS_DEBUG}\")\nset(CMAKE_EXE_LINKER_FLAGS_DEBUG \"${CMAKE_EXE_LINKER_FLAGS_DEBUG} ${FASTFETCH_FLAGS_DEBUG} -fstack-protector-all -fno-delete-null-pointer-checks\")\nif(NOT WIN32)\n    set(CMAKE_EXE_LINKER_FLAGS_DEBUG \"${CMAKE_EXE_LINKER_FLAGS_DEBUG} -rdynamic\")\nendif()\n\nif(ENABLE_LTO AND NOT CMAKE_BUILD_TYPE STREQUAL \"Debug\")\n    message(STATUS \"Enabling LTO\")\n    include(CheckIPOSupported)\n    check_ipo_supported(RESULT IPO_SUPPORTED)\n    if(IPO_SUPPORTED)\n        set(CMAKE_INTERPROCEDURAL_OPTIMIZATION TRUE)\n    endif()\nendif()\n\n#######################\n# Target FS structure #\n#######################\n\nif(NOT TARGET_DIR_ROOT)\n    if(NOT ANDROID)\n        set(TARGET_DIR_ROOT \"\")\n    else()\n        set(TARGET_DIR_ROOT \"/data/data/com.termux/files/usr\")\n    endif()\nendif()\n\nif(NOT TARGET_DIR_USR)\n    if(NOT ANDROID)\n        set(TARGET_DIR_USR \"${TARGET_DIR_ROOT}/usr\")\n    else()\n        set(TARGET_DIR_USR \"${TARGET_DIR_ROOT}\")\n    endif()\nendif()\n\nif(NOT TARGET_DIR_HOME)\n    if(APPLE)\n        set(TARGET_DIR_HOME \"${TARGET_DIR_ROOT}/Users\")\n    elseif(ANDROID)\n        set(TARGET_DIR_HOME \"/data/data/com.termux/files/home\")\n    else()\n        set(TARGET_DIR_HOME \"${TARGET_DIR_ROOT}/home\")\n    endif()\nendif()\n\nif(NOT TARGET_DIR_ETC)\n    set(TARGET_DIR_ETC \"${TARGET_DIR_ROOT}/etc\")\nendif()\n\nmessage(STATUS \"Target dirs: ROOT=\\\"${TARGET_DIR_ROOT}\\\" USR=\\\"${TARGET_DIR_USR}\\\" HOME=\\\"${TARGET_DIR_HOME}\\\" ETC=\\\"${TARGET_DIR_ETC}\\\"\")\n\n#https://cmake.org/cmake/help/latest/variable/CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT.html\nif(CMAKE_INSTALL_PREFIX_INITIALIZED_TO_DEFAULT)\n    set(CMAKE_INSTALL_PREFIX \"${TARGET_DIR_USR}\" CACHE PATH \"...\" FORCE)\nendif()\n\nif(NOT CMAKE_INSTALL_SYSCONFDIR)\n    set(CMAKE_INSTALL_SYSCONFDIR \"${TARGET_DIR_ETC}\" CACHE PATH \"...\" FORCE)\nendif()\n\n#################\n# Tweak version #\n#################\n\nif (SET_TWEAK AND EXISTS \"${CMAKE_SOURCE_DIR}/.git\")\n    execute_process(\n        COMMAND git describe --tags\n        WORKING_DIRECTORY \"${CMAKE_SOURCE_DIR}\"\n        OUTPUT_VARIABLE PROJECT_VERSION_GIT\n        OUTPUT_STRIP_TRAILING_WHITESPACE\n    )\n    string(REGEX MATCH \"-[0-9]+\" PROJECT_VERSION_TWEAK \"${PROJECT_VERSION_GIT}\")\nendif()\nif(PROJECT_VERSION_TWEAK)\n    string(REGEX MATCH \"[0-9]+\" PROJECT_VERSION_TWEAK_NUM \"${PROJECT_VERSION_TWEAK}\")\nelse()\n    set(PROJECT_VERSION_TWEAK_NUM 0)\nendif()\n\n#############\n# Text data #\n#############\n\nfunction(fastfetch_encode_c_string STR OUTVAR)\n    string(REGEX REPLACE \"\\n$\" \"\" TEMP \"${STR}\")  # Remove trailing newline\n    string(REPLACE \"\\\\\" \"\\\\\\\\\" TEMP \"${TEMP}\")    # Escape backslashes\n    string(REPLACE \"\\n\" \"\\\\n\" TEMP \"${TEMP}\")     # Replace newlines with \\n\n    string(REPLACE \"\\\"\" \"\\\\\\\"\" TEMP \"${TEMP}\")    # Replace quotes with \\\"\n    set(${OUTVAR} \"\\\"${TEMP}\\\"\" PARENT_SCOPE)\nendfunction(fastfetch_encode_c_string)\n\nfunction(fastfetch_load_text FILENAME OUTVAR)\n    file(READ \"${FILENAME}\" TEMP)\n    fastfetch_encode_c_string(\"${TEMP}\" TEMP)\n    set(${OUTVAR} \"${TEMP}\" PARENT_SCOPE)\nendfunction(fastfetch_load_text)\n\nfind_package(Python)\nif(Python_FOUND)\n    message(STATUS \"Minifying 'help.json'\")\n    execute_process(COMMAND ${Python_EXECUTABLE} -c \"import json,sys;json.dump(json.load(sys.stdin),sys.stdout,separators=(',',':'))\"\n                    INPUT_FILE \"${CMAKE_CURRENT_SOURCE_DIR}/src/data/help.json\"\n                    OUTPUT_VARIABLE DATATEXT_JSON_HELP)\n    if(DATATEXT_JSON_HELP STREQUAL \"\")\n        message(ERROR \"DATATEXT_JSON_HELP is empty, which should not happen!\")\n    endif()\nelse()\n    message(WARNING \"Python3 is not found, 'help.json' will not be minified\")\n    file(READ \"src/data/help.json\" DATATEXT_JSON_HELP)\nendif()\n\nif(ENABLE_EMBEDDED_PCIIDS AND NOT EXISTS \"${PROJECT_BINARY_DIR}/fastfetch_pciids.c.inc\")\n    if(Python_FOUND)\n        message(STATUS \"Generating 'fastfetch_pciids.c.inc'\")\n        execute_process(COMMAND ${Python_EXECUTABLE} \"${CMAKE_CURRENT_SOURCE_DIR}/scripts/gen-pciids.py\"\n                        OUTPUT_FILE \"${PROJECT_BINARY_DIR}/fastfetch_pciids.c.inc\"\n                        RESULT_VARIABLE PYTHON_PCIIDS_RETCODE)\n        if(NOT PYTHON_PCIIDS_RETCODE EQUAL 0)\n            message(FATAL_ERROR \"Failed to generate 'fastfetch_pciids.c.inc'\")\n        endif()\n    else()\n        message(WARNING \"Python3 is not found, 'fastfetch_pciids.c.inc' will not be generated\")\n        set(ENABLE_EMBEDDED_PCIIDS OFF)\n    endif()\nendif()\n\nif(Python_FOUND)\n    message(STATUS \"Generating 'fastfetch.1'\")\n    execute_process(COMMAND ${Python_EXECUTABLE} \"${CMAKE_CURRENT_SOURCE_DIR}/scripts/gen-man.py\"\n                    OUTPUT_FILE \"${PROJECT_BINARY_DIR}/fastfetch.1\"\n                    RESULT_VARIABLE PYTHON_MANPAGE_RETCODE)\n        if(NOT PYTHON_MANPAGE_RETCODE EQUAL 0)\n            message(FATAL_ERROR \"Failed to generate 'fastfetch.1'\")\n        endif()\nelse()\n    message(WARNING \"Python3 is not found, use basic 'fastfetch.1.in' instead\")\n    string(TIMESTAMP FASTFETCH_BUILD_DATE \"%d %B %Y\" UTC)\n    configure_file(doc/fastfetch.1.in fastfetch.1 @ONLY)\nendif()\n\nfastfetch_encode_c_string(\"${DATATEXT_JSON_HELP}\" DATATEXT_JSON_HELP)\nfastfetch_load_text(src/data/structure.txt DATATEXT_STRUCTURE)\nfastfetch_load_text(src/data/help_footer.txt DATATEXT_HELP_FOOTER)\nfastfetch_load_text(src/data/help_color.txt DATATEXT_HELP_COLOR)\nfastfetch_load_text(src/data/help_format.txt DATATEXT_HELP_FORMAT)\n\nconfigure_file(src/fastfetch_config.h.in fastfetch_config.h @ONLY)\nconfigure_file(src/fastfetch_datatext.h.in fastfetch_datatext.h @ONLY)\nif(APPLE)\n    configure_file(src/util/apple/Info.plist.in Info.plist @ONLY)\nendif()\n\n####################\n# Ascii image data #\n####################\n\nfile(GLOB LOGO_FILES \"src/logo/ascii/*.txt\")\nset(LOGO_BUILTIN_H \"#pragma once\\n#pragma GCC diagnostic ignored \\\"-Wtrigraphs\\\"\\n\\n\")\nforeach(file ${LOGO_FILES})\n    fastfetch_load_text(\"${file}\" content)\n    get_filename_component(file \"${file}\" NAME_WE)\n    string(TOUPPER \"${file}\" file)\n    string(REGEX REPLACE \"\\\\$\\\\{c([0-9]+)\\\\}\" \"$\\\\1\" content \"${content}\")\n    set(LOGO_BUILTIN_H \"${LOGO_BUILTIN_H}#define FASTFETCH_DATATEXT_LOGO_${file} ${content}\\n\")\nendforeach()\nfile(GENERATE OUTPUT logo_builtin.h CONTENT \"${LOGO_BUILTIN_H}\")\n\n#######################\n# libfastfetch target #\n#######################\n\nset(LIBFASTFETCH_SRC\n    src/common/percent.c\n    src/common/commandoption.c\n    src/common/font.c\n    src/common/format.c\n    src/common/init.c\n    src/common/jsonconfig.c\n    src/common/library.c\n    src/common/modules.c\n    src/common/netif/netif.c\n    src/common/option.c\n    src/common/parsing.c\n    src/common/printing.c\n    src/common/properties.c\n    src/common/settings.c\n    src/common/temps.c\n    src/detection/bluetoothradio/bluetoothradio.c\n    src/detection/bootmgr/bootmgr.c\n    src/detection/chassis/chassis.c\n    src/detection/cpu/cpu.c\n    src/detection/cpuusage/cpuusage.c\n    src/detection/disk/disk.c\n    src/detection/diskio/diskio.c\n    src/detection/displayserver/displayserver.c\n    src/detection/editor/editor.c\n    src/detection/font/font.c\n    src/detection/gpu/gpu.c\n    src/detection/media/media.c\n    src/detection/netio/netio.c\n    src/detection/opencl/opencl.c\n    src/detection/opengl/opengl_shared.c\n    src/detection/os/os.c\n    src/detection/packages/packages.c\n    src/detection/physicalmemory/physicalmemory.c\n    src/detection/publicip/publicip.c\n    src/detection/terminaltheme/terminaltheme.c\n    src/detection/terminalfont/terminalfont.c\n    src/detection/terminalshell/terminalshell.c\n    src/detection/version/version.c\n    src/detection/vulkan/vulkan.c\n    src/detection/weather/weather.c\n    src/logo/builtin.c\n    src/logo/image/im6.c\n    src/logo/image/im7.c\n    src/logo/image/image.c\n    src/logo/logo.c\n    src/modules/battery/battery.c\n    src/modules/bios/bios.c\n    src/modules/bluetooth/bluetooth.c\n    src/modules/bluetoothradio/bluetoothradio.c\n    src/modules/board/board.c\n    src/modules/bootmgr/bootmgr.c\n    src/modules/brightness/brightness.c\n    src/modules/break/break.c\n    src/modules/btrfs/btrfs.c\n    src/modules/camera/camera.c\n    src/modules/chassis/chassis.c\n    src/modules/colors/colors.c\n    src/modules/cpu/cpu.c\n    src/modules/cpucache/cpucache.c\n    src/modules/cpuusage/cpuusage.c\n    src/modules/cursor/cursor.c\n    src/modules/custom/custom.c\n    src/modules/command/command.c\n    src/modules/datetime/datetime.c\n    src/modules/de/de.c\n    src/modules/disk/disk.c\n    src/modules/diskio/diskio.c\n    src/modules/dns/dns.c\n    src/modules/editor/editor.c\n    src/modules/font/font.c\n    src/modules/gpu/gpu.c\n    src/modules/host/host.c\n    src/modules/icons/icons.c\n    src/modules/initsystem/initsystem.c\n    src/modules/gamepad/gamepad.c\n    src/modules/kernel/kernel.c\n    src/modules/keyboard/keyboard.c\n    src/modules/lm/lm.c\n    src/modules/loadavg/loadavg.c\n    src/modules/locale/locale.c\n    src/modules/localip/localip.c\n    src/modules/memory/memory.c\n    src/modules/monitor/monitor.c\n    src/modules/netio/netio.c\n    src/modules/opencl/opencl.c\n    src/modules/opengl/opengl.c\n    src/modules/os/os.c\n    src/modules/packages/packages.c\n    src/modules/physicaldisk/physicaldisk.c\n    src/modules/physicalmemory/physicalmemory.c\n    src/modules/processes/processes.c\n    src/modules/player/player.c\n    src/modules/poweradapter/poweradapter.c\n    src/modules/publicip/publicip.c\n    src/modules/display/display.c\n    src/modules/separator/separator.c\n    src/modules/shell/shell.c\n    src/modules/sound/sound.c\n    src/modules/swap/swap.c\n    src/modules/media/media.c\n    src/modules/mouse/mouse.c\n    src/modules/terminal/terminal.c\n    src/modules/terminaltheme/terminaltheme.c\n    src/modules/terminalfont/terminalfont.c\n    src/modules/terminalsize/terminalsize.c\n    src/modules/theme/theme.c\n    src/modules/title/title.c\n    src/modules/tpm/tpm.c\n    src/modules/uptime/uptime.c\n    src/modules/users/users.c\n    src/modules/version/version.c\n    src/modules/vulkan/vulkan.c\n    src/modules/wallpaper/wallpaper.c\n    src/modules/weather/weather.c\n    src/modules/wifi/wifi.c\n    src/modules/wm/wm.c\n    src/modules/wmtheme/wmtheme.c\n    src/modules/zpool/zpool.c\n    src/options/display.c\n    src/options/modules.c\n    src/options/logo.c\n    src/options/general.c\n    src/util/edidHelper.c\n    src/util/base64.c\n    src/util/FFlist.c\n    src/util/FFstrbuf.c\n    src/util/kmod.c\n    src/util/path.c\n    src/util/platform/FFPlatform.c\n    src/util/smbiosHelper.c\n)\n\nif(LINUX)\n    list(APPEND LIBFASTFETCH_SRC\n        src/common/dbus.c\n        src/common/io/io_unix.c\n        src/common/netif/netif_linux.c\n        src/common/networking_linux.c\n        src/common/processing_linux.c\n        src/detection/battery/battery_linux.c\n        src/detection/bios/bios_linux.c\n        src/detection/board/board_linux.c\n        src/detection/bootmgr/bootmgr_linux.c\n        src/detection/brightness/brightness_linux.c\n        src/detection/btrfs/btrfs_linux.c\n        src/detection/chassis/chassis_linux.c\n        src/detection/cpu/cpu_linux.c\n        src/detection/cpucache/cpucache_linux.c\n        src/detection/cpuusage/cpuusage_linux.c\n        src/detection/cursor/cursor_linux.c\n        src/detection/bluetooth/bluetooth_linux.c\n        src/detection/bluetoothradio/bluetoothradio_linux.c\n        src/detection/disk/disk_linux.c\n        src/detection/dns/dns_linux.c\n        src/detection/physicaldisk/physicaldisk_linux.c\n        src/detection/physicalmemory/physicalmemory_linux.c\n        src/detection/diskio/diskio_linux.c\n        src/detection/displayserver/linux/displayserver_linux.c\n        src/detection/displayserver/linux/drm.c\n        src/detection/displayserver/linux/wayland/wayland.c\n        src/detection/displayserver/linux/wayland/global-output.c\n        src/detection/displayserver/linux/wayland/zwlr-output.c\n        src/detection/displayserver/linux/wayland/kde-output.c\n        src/detection/displayserver/linux/wayland/wlr-output-management-unstable-v1-protocol.c\n        src/detection/displayserver/linux/wayland/kde-output-device-v2-protocol.c\n        src/detection/displayserver/linux/wayland/kde-output-order-v1-protocol.c\n        src/detection/displayserver/linux/wayland/xdg-output-unstable-v1-protocol.c\n        src/detection/displayserver/linux/wmde.c\n        src/detection/displayserver/linux/xcb.c\n        src/detection/displayserver/linux/xlib.c\n        src/detection/font/font_linux.c\n        src/detection/gpu/gpu_linux.c\n        src/detection/gpu/gpu_pci.c\n        src/detection/gtk_qt/gtk.c\n        src/detection/host/host_linux.c\n        src/detection/host/host_mac.c\n        src/detection/icons/icons_linux.c\n        src/detection/initsystem/initsystem_linux.c\n        src/detection/keyboard/keyboard_linux.c\n        src/detection/libc/libc_linux.c\n        src/detection/lm/lm_linux.c\n        src/detection/loadavg/loadavg_linux.c\n        src/detection/locale/locale_linux.c\n        src/detection/localip/localip_linux.c\n        src/detection/gamepad/gamepad_linux.c\n        src/detection/media/media_linux.c\n        src/detection/memory/memory_linux.c\n        src/detection/mouse/mouse_linux.c\n        src/detection/netio/netio_linux.c\n        src/detection/opengl/opengl_linux.c\n        src/detection/os/os_linux.c\n        src/detection/packages/packages_linux.c\n        src/detection/poweradapter/poweradapter_linux.c\n        src/detection/processes/processes_linux.c\n        src/detection/gtk_qt/qt.c\n        src/detection/sound/sound_linux.c\n        src/detection/swap/swap_linux.c\n        src/detection/terminalfont/terminalfont_linux.c\n        src/detection/terminalshell/terminalshell_linux.c\n        src/detection/terminalsize/terminalsize_linux.c\n        src/detection/theme/theme_linux.c\n        src/detection/tpm/tpm_linux.c\n        src/detection/uptime/uptime_linux.c\n        src/detection/users/users_linux.c\n        src/detection/wallpaper/wallpaper_linux.c\n        src/detection/wifi/wifi_linux.c\n        src/detection/wm/wm_linux.c\n        src/detection/de/de_linux.c\n        src/detection/wmtheme/wmtheme_linux.c\n        src/detection/camera/camera_linux.c\n        src/detection/zpool/zpool_linux.c\n        src/util/platform/FFPlatform_unix.c\n        src/util/binary_linux.c\n    )\nelseif(ANDROID)\n    list(APPEND LIBFASTFETCH_SRC\n        src/common/io/io_unix.c\n        src/common/netif/netif_linux.c\n        src/common/networking_linux.c\n        src/common/processing_linux.c\n        src/detection/battery/battery_android.c\n        src/detection/bios/bios_android.c\n        src/detection/bluetooth/bluetooth_nosupport.c\n        src/detection/bluetoothradio/bluetoothradio_nosupport.c\n        src/detection/board/board_android.c\n        src/detection/bootmgr/bootmgr_nosupport.c\n        src/detection/brightness/brightness_nosupport.c\n        src/detection/btrfs/btrfs_nosupport.c\n        src/detection/chassis/chassis_nosupport.c\n        src/detection/cpu/cpu_linux.c\n        src/detection/cpucache/cpucache_linux.c\n        src/detection/cursor/cursor_nosupport.c\n        src/detection/cpuusage/cpuusage_linux.c\n        src/detection/disk/disk_linux.c\n        src/detection/dns/dns_linux.c\n        src/detection/physicaldisk/physicaldisk_linux.c\n        src/detection/physicalmemory/physicalmemory_nosupport.c\n        src/detection/diskio/diskio_linux.c\n        src/detection/displayserver/displayserver_android.c\n        src/detection/font/font_nosupport.c\n        src/detection/gpu/gpu_nosupport.c\n        src/detection/host/host_android.c\n        src/detection/icons/icons_nosupport.c\n        src/detection/initsystem/initsystem_linux.c\n        src/detection/keyboard/keyboard_nosupport.c\n        src/detection/libc/libc_android.c\n        src/detection/lm/lm_nosupport.c\n        src/detection/loadavg/loadavg_linux.c\n        src/detection/locale/locale_linux.c\n        src/detection/localip/localip_linux.c\n        src/detection/gamepad/gamepad_nosupport.c\n        src/detection/media/media_nosupport.c\n        src/detection/memory/memory_linux.c\n        src/detection/mouse/mouse_nosupport.c\n        src/detection/netio/netio_linux.c\n        src/detection/opengl/opengl_linux.c\n        src/detection/os/os_android.c\n        src/detection/packages/packages_linux.c\n        src/detection/poweradapter/poweradapter_nosupport.c\n        src/detection/processes/processes_linux.c\n        src/detection/sound/sound_nosupport.c\n        src/detection/swap/swap_linux.c\n        src/detection/terminalfont/terminalfont_android.c\n        src/detection/terminalshell/terminalshell_linux.c\n        src/detection/terminalsize/terminalsize_linux.c\n        src/detection/theme/theme_nosupport.c\n        src/detection/tpm/tpm_nosupport.c\n        src/detection/uptime/uptime_linux.c\n        src/detection/users/users_linux.c\n        src/detection/wallpaper/wallpaper_nosupport.c\n        src/detection/wifi/wifi_android.c\n        src/detection/wm/wm_nosupport.c\n        src/detection/de/de_nosupport.c\n        src/detection/wmtheme/wmtheme_nosupport.c\n        src/detection/camera/camera_android.c\n        src/detection/zpool/zpool_nosupport.c\n        src/util/platform/FFPlatform_unix.c\n        src/util/binary_linux.c\n    )\nelseif(FreeBSD)\n    list(APPEND LIBFASTFETCH_SRC\n        src/common/dbus.c\n        src/common/io/io_unix.c\n        src/common/netif/netif_bsd.c\n        src/common/networking_linux.c\n        src/common/processing_linux.c\n        src/common/sysctl.c\n        src/detection/battery/battery_bsd.c\n        src/detection/bios/bios_bsd.c\n        src/detection/bluetoothradio/bluetoothradio_nosupport.c\n        src/detection/board/board_bsd.c\n        src/detection/bootmgr/bootmgr_bsd.c\n        src/detection/brightness/brightness_bsd.c\n        src/detection/btrfs/btrfs_nosupport.c\n        src/detection/chassis/chassis_bsd.c\n        src/detection/cpu/cpu_bsd.c\n        src/detection/cpucache/cpucache_shared.c\n        src/detection/cpuusage/cpuusage_bsd.c\n        src/detection/cursor/cursor_linux.c\n        src/detection/disk/disk_bsd.c\n        src/detection/dns/dns_linux.c\n        src/detection/physicaldisk/physicaldisk_bsd.c\n        src/detection/physicalmemory/physicalmemory_linux.c\n        src/detection/diskio/diskio_bsd.c\n        src/detection/displayserver/linux/displayserver_linux.c\n        src/detection/displayserver/linux/drm.c\n        src/detection/displayserver/linux/wayland/wayland.c\n        src/detection/displayserver/linux/wayland/global-output.c\n        src/detection/displayserver/linux/wayland/zwlr-output.c\n        src/detection/displayserver/linux/wayland/kde-output.c\n        src/detection/displayserver/linux/wayland/wlr-output-management-unstable-v1-protocol.c\n        src/detection/displayserver/linux/wayland/kde-output-device-v2-protocol.c\n        src/detection/displayserver/linux/wayland/kde-output-order-v1-protocol.c\n        src/detection/displayserver/linux/wayland/xdg-output-unstable-v1-protocol.c\n        src/detection/displayserver/linux/wmde.c\n        src/detection/displayserver/linux/xcb.c\n        src/detection/displayserver/linux/xlib.c\n        src/detection/font/font_linux.c\n        src/detection/gpu/gpu_bsd.c\n        src/detection/gpu/gpu_pci.c\n        src/detection/gtk_qt/gtk.c\n        src/detection/host/host_bsd.c\n        src/detection/host/host_mac.c\n        src/detection/lm/lm_linux.c\n        src/detection/icons/icons_linux.c\n        src/detection/initsystem/initsystem_linux.c\n        src/detection/keyboard/keyboard_bsd.c\n        src/detection/libc/libc_bsd.c\n        src/detection/loadavg/loadavg_bsd.c\n        src/detection/locale/locale_linux.c\n        src/detection/localip/localip_linux.c\n        src/detection/gamepad/gamepad_bsd.c\n        src/detection/media/media_linux.c\n        src/detection/memory/memory_bsd.c\n        src/detection/mouse/mouse_bsd.c\n        src/detection/netio/netio_bsd.c\n        src/detection/opengl/opengl_linux.c\n        src/detection/os/os_linux.c\n        src/detection/packages/packages_bsd.c\n        src/detection/poweradapter/poweradapter_nosupport.c\n        src/detection/processes/processes_bsd.c\n        src/detection/gtk_qt/qt.c\n        src/detection/sound/sound_bsd.c\n        src/detection/swap/swap_bsd.c\n        src/detection/terminalfont/terminalfont_linux.c\n        src/detection/terminalshell/terminalshell_linux.c\n        src/detection/terminalsize/terminalsize_linux.c\n        src/detection/theme/theme_linux.c\n        src/detection/tpm/tpm_bsd.c\n        src/detection/uptime/uptime_bsd.c\n        src/detection/users/users_linux.c\n        src/detection/wallpaper/wallpaper_linux.c\n        src/detection/wifi/wifi_bsd.c\n        src/detection/wm/wm_nosupport.c\n        src/detection/de/de_linux.c\n        src/detection/wmtheme/wmtheme_linux.c\n        src/detection/camera/camera_linux.c\n        src/detection/zpool/zpool_linux.c\n        src/util/platform/FFPlatform_unix.c\n        src/util/binary_linux.c\n    )\n    if(DragonFly)\n        list(APPEND LIBFASTFETCH_SRC\n            src/detection/bluetooth/bluetooth_nosupport.c\n        )\n    else()\n        list(APPEND LIBFASTFETCH_SRC\n            src/detection/bluetooth/bluetooth_bsd.c\n        )\n    endif()\nelseif(NetBSD)\n    list(APPEND LIBFASTFETCH_SRC\n        src/common/dbus.c\n        src/common/io/io_unix.c\n        src/common/netif/netif_bsd.c\n        src/common/networking_linux.c\n        src/common/processing_linux.c\n        src/common/sysctl.c\n        src/detection/battery/battery_nbsd.c\n        src/detection/bios/bios_nbsd.c\n        src/detection/bluetooth/bluetooth_nosupport.c\n        src/detection/bluetoothradio/bluetoothradio_nosupport.c\n        src/detection/board/board_nbsd.c\n        src/detection/bootmgr/bootmgr_nosupport.c\n        src/detection/brightness/brightness_nbsd.c\n        src/detection/btrfs/btrfs_nosupport.c\n        src/detection/chassis/chassis_nbsd.c\n        src/detection/cpu/cpu_nbsd.c\n        src/detection/cpucache/cpucache_nosupport.c\n        src/detection/cpuusage/cpuusage_bsd.c\n        src/detection/cursor/cursor_linux.c\n        src/detection/disk/disk_bsd.c\n        src/detection/dns/dns_linux.c\n        src/detection/physicaldisk/physicaldisk_nosupport.c\n        src/detection/physicalmemory/physicalmemory_nosupport.c\n        src/detection/diskio/diskio_nbsd.c\n        src/detection/displayserver/linux/displayserver_linux.c\n        src/detection/displayserver/linux/drm.c\n        src/detection/displayserver/linux/wayland/wayland.c\n        src/detection/displayserver/linux/wayland/global-output.c\n        src/detection/displayserver/linux/wayland/zwlr-output.c\n        src/detection/displayserver/linux/wayland/kde-output.c\n        src/detection/displayserver/linux/wayland/wlr-output-management-unstable-v1-protocol.c\n        src/detection/displayserver/linux/wayland/kde-output-device-v2-protocol.c\n        src/detection/displayserver/linux/wayland/kde-output-order-v1-protocol.c\n        src/detection/displayserver/linux/wayland/xdg-output-unstable-v1-protocol.c\n        src/detection/displayserver/linux/wmde.c\n        src/detection/displayserver/linux/xcb.c\n        src/detection/displayserver/linux/xlib.c\n        src/detection/font/font_linux.c\n        src/detection/gpu/gpu_general.c\n        src/detection/gpu/gpu_pci.c\n        src/detection/gtk_qt/gtk.c\n        src/detection/host/host_nbsd.c\n        src/detection/lm/lm_linux.c\n        src/detection/icons/icons_linux.c\n        src/detection/initsystem/initsystem_linux.c\n        src/detection/keyboard/keyboard_nosupport.c\n        src/detection/libc/libc_nosupport.c\n        src/detection/loadavg/loadavg_bsd.c\n        src/detection/locale/locale_linux.c\n        src/detection/localip/localip_linux.c\n        src/detection/gamepad/gamepad_nosupport.c\n        src/detection/media/media_linux.c\n        src/detection/memory/memory_obsd.c\n        src/detection/mouse/mouse_nosupport.c\n        src/detection/netio/netio_bsd.c\n        src/detection/opengl/opengl_linux.c\n        src/detection/os/os_nbsd.c\n        src/detection/packages/packages_obsd.c\n        src/detection/poweradapter/poweradapter_nosupport.c\n        src/detection/processes/processes_nbsd.c\n        src/detection/gtk_qt/qt.c\n        src/detection/sound/sound_linux.c\n        src/detection/swap/swap_obsd.c\n        src/detection/terminalfont/terminalfont_linux.c\n        src/detection/terminalshell/terminalshell_linux.c\n        src/detection/terminalsize/terminalsize_linux.c\n        src/detection/theme/theme_linux.c\n        src/detection/tpm/tpm_nosupport.c\n        src/detection/uptime/uptime_bsd.c\n        src/detection/users/users_linux.c\n        src/detection/wallpaper/wallpaper_linux.c\n        src/detection/wifi/wifi_nosupport.c\n        src/detection/wm/wm_nosupport.c\n        src/detection/de/de_linux.c\n        src/detection/wmtheme/wmtheme_linux.c\n        src/detection/camera/camera_linux.c\n        src/detection/zpool/zpool_linux.c\n        src/util/platform/FFPlatform_unix.c\n        src/util/binary_linux.c\n    )\nelseif(OpenBSD)\n    list(APPEND LIBFASTFETCH_SRC\n        src/common/dbus.c\n        src/common/io/io_unix.c\n        src/common/netif/netif_bsd.c\n        src/common/networking_linux.c\n        src/common/processing_linux.c\n        src/common/sysctl.c\n        src/detection/battery/battery_obsd.c\n        src/detection/bios/bios_nosupport.c\n        src/detection/bluetooth/bluetooth_nosupport.c\n        src/detection/bluetoothradio/bluetoothradio_nosupport.c\n        src/detection/board/board_nosupport.c\n        src/detection/bootmgr/bootmgr_nosupport.c\n        src/detection/brightness/brightness_obsd.c\n        src/detection/btrfs/btrfs_nosupport.c\n        src/detection/chassis/chassis_nosupport.c\n        src/detection/cpu/cpu_obsd.c\n        src/detection/cpucache/cpucache_nosupport.c\n        src/detection/cpuusage/cpuusage_bsd.c\n        src/detection/cursor/cursor_linux.c\n        src/detection/disk/disk_bsd.c\n        src/detection/dns/dns_linux.c\n        src/detection/physicaldisk/physicaldisk_nosupport.c\n        src/detection/physicalmemory/physicalmemory_nosupport.c\n        src/detection/diskio/diskio_obsd.c\n        src/detection/displayserver/linux/displayserver_linux.c\n        src/detection/displayserver/linux/drm.c\n        src/detection/displayserver/linux/wayland/wayland.c\n        src/detection/displayserver/linux/wayland/global-output.c\n        src/detection/displayserver/linux/wayland/zwlr-output.c\n        src/detection/displayserver/linux/wayland/kde-output.c\n        src/detection/displayserver/linux/wayland/wlr-output-management-unstable-v1-protocol.c\n        src/detection/displayserver/linux/wayland/kde-output-device-v2-protocol.c\n        src/detection/displayserver/linux/wayland/kde-output-order-v1-protocol.c\n        src/detection/displayserver/linux/wayland/xdg-output-unstable-v1-protocol.c\n        src/detection/displayserver/linux/wmde.c\n        src/detection/displayserver/linux/xcb.c\n        src/detection/displayserver/linux/xlib.c\n        src/detection/font/font_linux.c\n        src/detection/gpu/gpu_pci.c\n        src/detection/gpu/gpu_general.c\n        src/detection/gtk_qt/gtk.c\n        src/detection/host/host_obsd.c\n        src/detection/lm/lm_nosupport.c\n        src/detection/icons/icons_linux.c\n        src/detection/initsystem/initsystem_linux.c\n        src/detection/keyboard/keyboard_nosupport.c\n        src/detection/libc/libc_nosupport.c\n        src/detection/loadavg/loadavg_bsd.c\n        src/detection/locale/locale_linux.c\n        src/detection/localip/localip_linux.c\n        src/detection/gamepad/gamepad_nosupport.c\n        src/detection/media/media_linux.c\n        src/detection/memory/memory_obsd.c\n        src/detection/mouse/mouse_nosupport.c\n        src/detection/netio/netio_bsd.c\n        src/detection/opengl/opengl_linux.c\n        src/detection/os/os_obsd.c\n        src/detection/packages/packages_obsd.c\n        src/detection/poweradapter/poweradapter_nosupport.c\n        src/detection/processes/processes_obsd.c\n        src/detection/gtk_qt/qt.c\n        src/detection/sound/sound_linux.c\n        src/detection/swap/swap_obsd.c\n        src/detection/terminalfont/terminalfont_linux.c\n        src/detection/terminalshell/terminalshell_linux.c\n        src/detection/terminalsize/terminalsize_linux.c\n        src/detection/theme/theme_linux.c\n        src/detection/tpm/tpm_nosupport.c\n        src/detection/uptime/uptime_bsd.c\n        src/detection/users/users_obsd.c\n        src/detection/wallpaper/wallpaper_linux.c\n        src/detection/wifi/wifi_nosupport.c\n        src/detection/wm/wm_nosupport.c\n        src/detection/de/de_linux.c\n        src/detection/wmtheme/wmtheme_linux.c\n        src/detection/camera/camera_linux.c\n        src/detection/zpool/zpool_nosupport.c\n        src/util/platform/FFPlatform_unix.c\n        src/util/binary_linux.c\n    )\nelseif(APPLE)\n    list(APPEND LIBFASTFETCH_SRC\n        src/common/io/io_unix.c\n        src/common/netif/netif_bsd.c\n        src/common/networking_linux.c\n        src/common/processing_linux.c\n        src/common/sysctl.c\n        src/detection/battery/battery_apple.c\n        src/detection/bios/bios_apple.c\n        src/detection/bluetooth/bluetooth_apple.m\n        src/detection/bluetoothradio/bluetoothradio_apple.m\n        src/detection/board/board_apple.c\n        src/detection/bootmgr/bootmgr_apple.c\n        src/detection/brightness/brightness_apple.c\n        src/detection/btrfs/btrfs_nosupport.c\n        src/detection/chassis/chassis_nosupport.c\n        src/detection/cpu/cpu_apple.c\n        src/detection/cpucache/cpucache_apple.c\n        src/detection/cpuusage/cpuusage_apple.c\n        src/detection/cursor/cursor_apple.m\n        src/detection/disk/disk_bsd.c\n        src/detection/dns/dns_linux.c\n        src/detection/physicaldisk/physicaldisk_apple.c\n        src/detection/physicalmemory/physicalmemory_apple.m\n        src/detection/diskio/diskio_apple.c\n        src/detection/displayserver/displayserver_apple.c\n        src/detection/font/font_apple.m\n        src/detection/gpu/gpu_apple.c\n        src/detection/gpu/gpu_apple.m\n        src/detection/host/host_apple.c\n        src/detection/host/host_mac.c\n        src/detection/icons/icons_nosupport.c\n        src/detection/initsystem/initsystem_linux.c\n        src/detection/keyboard/keyboard_apple.c\n        src/detection/lm/lm_nosupport.c\n        src/detection/loadavg/loadavg_bsd.c\n        src/detection/libc/libc_apple.c\n        src/detection/locale/locale_linux.c\n        src/detection/localip/localip_linux.c\n        src/detection/gamepad/gamepad_apple.c\n        src/detection/media/media_apple.m\n        src/detection/memory/memory_apple.c\n        src/detection/mouse/mouse_apple.c\n        src/detection/netio/netio_apple.c\n        src/detection/opengl/opengl_apple.c\n        src/detection/os/os_apple.m\n        src/detection/packages/packages_apple.c\n        src/detection/poweradapter/poweradapter_apple.c\n        src/detection/processes/processes_bsd.c\n        src/detection/sound/sound_apple.c\n        src/detection/swap/swap_apple.c\n        src/detection/terminalfont/terminalfont_apple.m\n        src/detection/terminalshell/terminalshell_linux.c\n        src/detection/terminalsize/terminalsize_linux.c\n        src/detection/theme/theme_nosupport.c\n        src/detection/tpm/tpm_nosupport.c\n        src/detection/uptime/uptime_bsd.c\n        src/detection/users/users_linux.c\n        src/detection/wallpaper/wallpaper_apple.m\n        src/detection/wifi/wifi_apple.m\n        src/detection/wm/wm_apple.m\n        src/detection/de/de_nosupport.c\n        src/detection/wmtheme/wmtheme_apple.m\n        src/detection/camera/camera_apple.m\n        src/detection/zpool/zpool_nosupport.c\n        src/util/apple/cf_helpers.c\n        src/util/apple/osascript.m\n        src/util/apple/smc_temps.c\n        src/util/platform/FFPlatform_unix.c\n        src/util/binary_apple.c\n    )\nelseif(WIN32)\n    list(APPEND LIBFASTFETCH_SRC\n        src/common/io/io_windows.c\n        src/common/netif/netif_windows.c\n        src/common/networking_windows.c\n        src/common/processing_windows.c\n        src/detection/battery/battery_windows.c\n        src/detection/bios/bios_windows.c\n        src/detection/bluetooth/bluetooth_windows.c\n        src/detection/bluetooth/bluetooth_windows.cpp\n        src/detection/bluetoothradio/bluetoothradio_windows.c\n        src/detection/board/board_windows.c\n        src/detection/bootmgr/bootmgr_windows.c\n        src/detection/brightness/brightness_windows.cpp\n        src/detection/btrfs/btrfs_nosupport.c\n        src/detection/chassis/chassis_windows.c\n        src/detection/cpu/cpu_windows.c\n        src/detection/cpu/cpu_windows.cpp\n        src/detection/cpucache/cpucache_windows.c\n        src/detection/cpuusage/cpuusage_windows.c\n        src/detection/cursor/cursor_windows.c\n        src/detection/disk/disk_windows.c\n        src/detection/physicaldisk/physicaldisk_windows.c\n        src/detection/diskio/diskio_windows.c\n        src/detection/displayserver/displayserver_windows.c\n        src/detection/dns/dns_windows.c\n        src/detection/font/font_windows.c\n        src/detection/gpu/gpu_windows.c\n        src/detection/host/host_mac.c\n        src/detection/host/host_windows.c\n        src/detection/icons/icons_windows.c\n        src/detection/initsystem/initsystem_nosupport.c\n        src/detection/keyboard/keyboard_windows.c\n        src/detection/libc/libc_windows.cpp\n        src/detection/lm/lm_nosupport.c\n        src/detection/loadavg/loadavg_nosupport.c\n        src/detection/locale/locale_windows.c\n        src/detection/localip/localip_windows.c\n        src/detection/gamepad/gamepad_windows.c\n        src/detection/media/media_windows.c\n        src/detection/memory/memory_windows.c\n        src/detection/mouse/mouse_windows.c\n        src/detection/physicalmemory/physicalmemory_linux.c\n        src/detection/netio/netio_windows.c\n        src/detection/opengl/opengl_windows.c\n        src/detection/os/os_windows.c\n        src/detection/packages/packages_windows.c\n        src/detection/poweradapter/poweradapter_nosupport.c\n        src/detection/processes/processes_windows.c\n        src/detection/sound/sound_windows.cpp\n        src/detection/swap/swap_windows.c\n        src/detection/terminalfont/terminalfont_windows.c\n        src/detection/terminalshell/terminalshell_windows.c\n        src/detection/terminalsize/terminalsize_windows.c\n        src/detection/theme/theme_nosupport.c\n        src/detection/tpm/tpm_windows.c\n        src/detection/uptime/uptime_windows.c\n        src/detection/users/users_windows.c\n        src/detection/wallpaper/wallpaper_windows.c\n        src/detection/wifi/wifi_windows.c\n        src/detection/wm/wm_windows.cpp\n        src/detection/de/de_nosupport.c\n        src/detection/wmtheme/wmtheme_windows.c\n        src/detection/camera/camera_windows.cpp\n        src/detection/zpool/zpool_nosupport.c\n        src/util/windows/getline.c\n        src/util/windows/com.cpp\n        src/util/windows/registry.c\n        src/util/windows/unicode.c\n        src/util/windows/wmi.cpp\n        src/util/windows/version.c\n        src/util/platform/FFPlatform_windows.c\n        src/util/binary_windows.c\n    )\nelseif(SunOS)\n    list(APPEND LIBFASTFETCH_SRC\n        src/common/dbus.c\n        src/common/io/io_unix.c\n        src/common/netif/netif_bsd.c\n        src/common/networking_linux.c\n        src/common/processing_linux.c\n        src/detection/battery/battery_nosupport.c\n        src/detection/bios/bios_windows.c\n        src/detection/board/board_windows.c\n        src/detection/bootmgr/bootmgr_nosupport.c\n        src/detection/brightness/brightness_nosupport.c\n        src/detection/btrfs/btrfs_nosupport.c\n        src/detection/chassis/chassis_windows.c\n        src/detection/cpu/cpu_sunos.c\n        src/detection/cpucache/cpucache_shared.c\n        src/detection/cpuusage/cpuusage_sunos.c\n        src/detection/cursor/cursor_linux.c\n        src/detection/bluetooth/bluetooth_nosupport.c\n        src/detection/bluetoothradio/bluetoothradio_nosupport.c\n        src/detection/disk/disk_sunos.c\n        src/detection/dns/dns_linux.c\n        src/detection/physicaldisk/physicaldisk_nosupport.c\n        src/detection/physicalmemory/physicalmemory_linux.c\n        src/detection/diskio/diskio_sunos.c\n        src/detection/displayserver/linux/displayserver_linux.c\n        src/detection/displayserver/linux/drm.c\n        src/detection/displayserver/linux/wayland/wayland.c\n        src/detection/displayserver/linux/wayland/global-output.c\n        src/detection/displayserver/linux/wayland/zwlr-output.c\n        src/detection/displayserver/linux/wayland/kde-output.c\n        src/detection/displayserver/linux/wayland/wlr-output-management-unstable-v1-protocol.c\n        src/detection/displayserver/linux/wayland/kde-output-device-v2-protocol.c\n        src/detection/displayserver/linux/wayland/kde-output-order-v1-protocol.c\n        src/detection/displayserver/linux/wayland/xdg-output-unstable-v1-protocol.c\n        src/detection/displayserver/linux/wmde.c\n        src/detection/displayserver/linux/xcb.c\n        src/detection/displayserver/linux/xlib.c\n        src/detection/font/font_linux.c\n        src/detection/gpu/gpu_sunos.c\n        src/detection/gpu/gpu_pci.c\n        src/detection/gtk_qt/gtk.c\n        src/detection/host/host_windows.c\n        src/detection/icons/icons_linux.c\n        src/detection/initsystem/initsystem_linux.c\n        src/detection/keyboard/keyboard_nosupport.c\n        src/detection/libc/libc_nosupport.c\n        src/detection/lm/lm_nosupport.c\n        src/detection/loadavg/loadavg_sunos.c\n        src/detection/locale/locale_linux.c\n        src/detection/localip/localip_linux.c\n        src/detection/gamepad/gamepad_nosupport.c\n        src/detection/media/media_linux.c\n        src/detection/memory/memory_sunos.c\n        src/detection/mouse/mouse_nosupport.c\n        src/detection/netio/netio_sunos.c\n        src/detection/opengl/opengl_linux.c\n        src/detection/os/os_sunos.c\n        src/detection/packages/packages_sunos.c\n        src/detection/poweradapter/poweradapter_nosupport.c\n        src/detection/processes/processes_linux.c\n        src/detection/gtk_qt/qt.c\n        src/detection/sound/sound_linux.c\n        src/detection/swap/swap_sunos.c\n        src/detection/terminalfont/terminalfont_linux.c\n        src/detection/terminalshell/terminalshell_linux.c\n        src/detection/terminalsize/terminalsize_linux.c\n        src/detection/theme/theme_linux.c\n        src/detection/tpm/tpm_nosupport.c\n        src/detection/uptime/uptime_sunos.c\n        src/detection/users/users_linux.c\n        src/detection/wallpaper/wallpaper_linux.c\n        src/detection/wifi/wifi_nosupport.c\n        src/detection/wm/wm_nosupport.c\n        src/detection/de/de_linux.c\n        src/detection/wmtheme/wmtheme_linux.c\n        src/detection/camera/camera_nosupport.c\n        src/detection/zpool/zpool_linux.c\n        src/util/platform/FFPlatform_unix.c\n        src/util/binary_linux.c\n    )\nendif()\n\nif(ENABLE_DIRECTX_HEADERS)\n    message(STATUS \"Enabling DirectX headers for WSL\")\n    list(APPEND LIBFASTFETCH_SRC src/detection/gpu/gpu_wsl.cpp)\nendif()\n\n# Proprietary GPU driver APIs\nif(LINUX OR FreeBSD OR WIN32)\n    list(APPEND LIBFASTFETCH_SRC src/detection/gpu/gpu_nvidia.c)\n    list(APPEND LIBFASTFETCH_SRC src/detection/gpu/gpu_mthreads.c)\nendif()\nif(WIN32)\n    list(APPEND LIBFASTFETCH_SRC src/detection/gpu/gpu_intel.c)\n    list(APPEND LIBFASTFETCH_SRC src/detection/gpu/gpu_amd.c)\nendif()\ninclude(CheckFunctionExists)\ncheck_function_exists(wcwidth HAVE_WCWIDTH)\nif(NOT HAVE_WCWIDTH)\n    list(APPEND LIBFASTFETCH_SRC src/3rdparty/mk_wcwidch/wcwidth.c)\nendif()\nif(LINUX)\n    check_function_exists(statx HAVE_STATX)\nendif()\n\nif(ENABLE_SYSTEM_YYJSON)\n    find_package(yyjson)\n    if(yyjson_FOUND)\n        message(STATUS \"System provided yyjson is used\")\n    else()\n        message(FATAL_ERROR \"ENABLE_SYSTEM_YYJSON is set but system provided yyjson is not found\")\n    endif()\nelse()\n    list(APPEND LIBFASTFETCH_SRC\n        src/3rdparty/yyjson/yyjson.c\n    )\nendif()\n\nadd_library(libfastfetch OBJECT\n    ${LIBFASTFETCH_SRC}\n)\n\nif(yyjson_FOUND)\n    target_compile_definitions(libfastfetch PUBLIC FF_USE_SYSTEM_YYJSON)\n    target_link_libraries(libfastfetch PUBLIC yyjson::yyjson)\n    # `target_link_libraries(yyjson::yyjson)` sets rpath implicitly\nelse()\n    # Used for dlopen finding dylibs installed by homebrew\n    # `/opt/homebrew/lib` is not on in dlopen search path by default\n    if(APPLE)\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -Wl,-rpath,/opt/homebrew/lib -Wl,-rpath,/usr/local/lib\")\n    endif()\nendif()\n\nif(ANDROID)\n    if(CMAKE_SIZEOF_VOID_P EQUAL 8)\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -Wl,-rpath,/vendor/lib64 -Wl,-rpath,/system/lib64\")\n    else()\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -Wl,-rpath,/vendor/lib -Wl,-rpath,/system/lib\")\n    endif()\nendif()\n\nif(LINUX AND EXISTS \"/lib/ld-musl-${CMAKE_HOST_SYSTEM_PROCESSOR}.so.1\")\n    execute_process(COMMAND \"/lib/ld-musl-${CMAKE_HOST_SYSTEM_PROCESSOR}.so.1\"\n                    ERROR_VARIABLE LD_MUSL_RESULT)\n    if(\"${LD_MUSL_RESULT}\" MATCHES \"Version ([0-9]+\\\\.[0-9]+\\\\.[0-9]+)\")\n        target_compile_definitions(libfastfetch PUBLIC FF_MUSL_VERSION=\"${CMAKE_MATCH_1}\")\n    endif()\nendif()\nif(APPLE AND EXISTS \"/usr/bin/otool\")\n    execute_process(COMMAND /usr/bin/otool -L /usr/bin/otool\n                    OUTPUT_VARIABLE OTOOL_OTOOL_RESULT)\n    if(\"${OTOOL_OTOOL_RESULT}\" MATCHES \"libSystem\\\\.B\\\\.dylib \\\\(.*current version ([0-9]+\\\\.[0-9]+\\\\.[0-9]+)\\\\)\")\n        target_compile_definitions(libfastfetch PUBLIC FF_LIBSYSTEM_VERSION=\"${CMAKE_MATCH_1}\")\n    endif()\nendif()\nif(MidnightBSD AND EXISTS \"/usr/bin/objdump\")\n    execute_process(COMMAND /bin/sh -c \"/usr/bin/objdump -T /lib/libc.so.* | grep 'FBSD_[0-9][0-9]*\\\\.[0-9][0-9]*' -o | sort -Vru | head -1\"\n                    OUTPUT_VARIABLE OBJDUMP_T_RESULT)\n    if(\"${OBJDUMP_T_RESULT}\" MATCHES \"FBSD_([0-9]+\\\\.[0-9]+)\")\n        message(STATUS \"Found FBSD ${CMAKE_MATCH_1}\")\n        target_compile_definitions(libfastfetch PUBLIC FF_FBSD_VERSION=\"${CMAKE_MATCH_1}\")\n    endif()\nelseif(FreeBSD AND EXISTS \"/usr/local/bin/objdump\")\n    execute_process(COMMAND /bin/sh -c \"/usr/local/bin/objdump -T /lib/libc.so.* | grep 'FBSD_[0-9][0-9]*\\\\.[0-9][0-9]*' -o | sort -Vru | head -1\"\n                    OUTPUT_VARIABLE OBJDUMP_T_RESULT)\n    if(\"${OBJDUMP_T_RESULT}\" MATCHES \"FBSD_([0-9]+\\\\.[0-9]+)\")\n        message(STATUS \"Found FBSD ${CMAKE_MATCH_1}\")\n        target_compile_definitions(libfastfetch PUBLIC FF_FBSD_VERSION=\"${CMAKE_MATCH_1}\")\n    endif()\nelseif(DragonFly AND EXISTS \"/usr/local/bin/objdump\")\n    execute_process(COMMAND /bin/sh -c \"/usr/local/bin/objdump -T /lib/libc.so.* | grep 'DF[0-9][0-9]*\\\\.[0-9][0-9]*' -o | sort -Vru | head -1\"\n                    OUTPUT_VARIABLE OBJDUMP_T_RESULT)\n    if(\"${OBJDUMP_T_RESULT}\" MATCHES \"DF([0-9]+\\\\.[0-9]+)\")\n        message(STATUS \"Found DF ${CMAKE_MATCH_1}\")\n        target_compile_definitions(libfastfetch PUBLIC FF_DF_VERSION=\"${CMAKE_MATCH_1}\")\n    endif()\nendif()\n\nif(LINUX)\n    target_compile_definitions(libfastfetch PUBLIC _GNU_SOURCE _XOPEN_SOURCE _ATFILE_SOURCE __STDC_WANT_LIB_EXT1__ _FILE_OFFSET_BITS=64 _TIME_BITS=64) # \"$<$<CONFIG:Release>:_FORTIFY_SOURCE=3>\"\nelseif(ANDROID)\n    target_compile_definitions(libfastfetch PUBLIC _GNU_SOURCE _XOPEN_SOURCE _FILE_OFFSET_BITS=64 \"$<$<CONFIG:DEBUG>:__BIONIC_FORTIFY>\" \"$<$<CONFIG:DEBUG>:__BIONIC_FORTIFY_RUNTIME_CHECKS_ENABLED>\")\nelseif(WIN32)\n    target_compile_definitions(libfastfetch PUBLIC _GNU_SOURCE WIN32_LEAN_AND_MEAN _WIN32_WINNT=0x0A00 NOMINMAX UNICODE) # \"$<$<CONFIG:Release>:_FORTIFY_SOURCE=3>\"\nelseif(APPLE)\n    target_compile_definitions(libfastfetch PUBLIC _GNU_SOURCE _XOPEN_SOURCE __STDC_WANT_LIB_EXT1__ _FILE_OFFSET_BITS=64 _DARWIN_C_SOURCE)\nelseif(OpenBSD)\n    target_compile_definitions(libfastfetch PUBLIC _XOPEN_SOURCE=700 _FILE_OFFSET_BITS=64 _BSD_SOURCE)\n    set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -Wl,-rpath,/usr/X11R6/lib\") # detect x11 lib path automatically\nelseif(DragonFly)\n    target_compile_definitions(libfastfetch PUBLIC __FreeBSD__)\nelseif(SunOS)\n    target_compile_definitions(libfastfetch PUBLIC _GNU_SOURCE _XOPEN_SOURCE __STDC_WANT_LIB_EXT1__ _FILE_OFFSET_BITS=64 __EXTENSIONS__ _POSIX_C_SOURCE)\nelseif(NetBSD)\n    target_compile_definitions(libfastfetch PUBLIC _GNU_SOURCE)\n    set(CMAKE_C_FLAGS \"${CMAKE_C_FLAGS} -Wno-char-subscripts\")\n    set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -Wl,-rpath,/usr/X11R7/lib -Wl,-rpath,/usr/pkg/lib\") # ditto\nendif()\n\nif(FreeBSD OR OpenBSD OR NetBSD)\n    include(CheckStructHasMember)\n    set(CMAKE_REQUIRED_DEFINITIONS \"-D_IFI_OQDROPS=1\")\n    CHECK_STRUCT_HAS_MEMBER(\"struct if_data\" ifi_oqdrops net/if.h HAVE_IFI_OQDROPS LANGUAGE C)\n    if(HAVE_IFI_OQDROPS)\n    target_compile_definitions(libfastfetch PUBLIC _IFI_OQDROPS FF_HAVE_IFI_OQDROPS)\n    endif()\n    unset(CMAKE_REQUIRED_DEFINITIONS)\nendif()\n\nif(HAVE_STATX)\n    target_compile_definitions(libfastfetch PUBLIC FF_HAVE_STATX)\nendif()\n\nif(HAVE_WCWIDTH)\n    target_compile_definitions(libfastfetch PUBLIC FF_HAVE_WCWIDTH)\nendif()\n\nif(NOT \"${CUSTOM_PCI_IDS_PATH}\" STREQUAL \"\")\n    message(STATUS \"Custom file path of pci.ids: ${CUSTOM_PCI_IDS_PATH}\")\n    target_compile_definitions(libfastfetch PRIVATE FF_CUSTOM_PCI_IDS_PATH=${CUSTOM_PCI_IDS_PATH})\nendif()\nif(NOT \"${CUSTOM_AMDGPU_IDS_PATH}\" STREQUAL \"\")\n    message(STATUS \"Custom file path of amdgpu.ids: ${CUSTOM_AMDGPU_IDS_PATH}\")\n    target_compile_definitions(libfastfetch PRIVATE FF_CUSTOM_AMDGPU_IDS_PATH=${CUSTOM_AMDGPU_IDS_PATH})\nendif()\nif(NOT \"${CUSTOM_OS_RELEASE_PATH}\" STREQUAL \"\")\n    message(STATUS \"Custom file path of os_release: ${CUSTOM_OS_RELEASE_PATH}\")\n    target_compile_definitions(libfastfetch PRIVATE FF_CUSTOM_OS_RELEASE_PATH=${CUSTOM_OS_RELEASE_PATH})\nendif()\n\nif(NOT BINARY_LINK_TYPE STREQUAL \"dlopen\")\n    message(STATUS \"Enabling custom link type: ${BINARY_LINK_TYPE}\")\n    target_compile_definitions(libfastfetch PRIVATE FF_DISABLE_DLOPEN=1)\n    if(NOT WIN32)\n        set(CMAKE_EXE_LINKER_FLAGS \"${CMAKE_EXE_LINKER_FLAGS} -Wl,--copy-dt-needed-entries\")\n    endif()\nendif()\n\nfunction(ff_lib_enable VARNAME PKGCONFIG_NAMES CMAKE_NAME)\n    if(NOT ENABLE_${VARNAME})\n        return()\n    endif()\n\n    if(PKG_CONFIG_FOUND)\n        pkg_search_module(${VARNAME} QUIET ${PKGCONFIG_NAMES})\n    endif()\n\n    if(NOT ${VARNAME}_FOUND)\n        find_package(${CMAKE_NAME} QUIET)\n\n        set(${VARNAME}_FOUND ${${CMAKE_NAME}_FOUND})\n        set(${VARNAME}_INCLUDE_DIRS ${${CMAKE_NAME}_INCLUDE_DIRS})\n        set(${VARNAME}_LIBRARIES ${${CMAKE_NAME}_LIBRARIES})\n        set(${VARNAME}_CFLAGS_OTHER ${${CMAKE_NAME}_CFLAGS_OTHER})\n    endif()\n\n    if(NOT ${VARNAME}_FOUND)\n        message(STATUS \"Library: missing: ${VARNAME}\")\n        return()\n    endif()\n\n    message(STATUS \"Library: found ${VARNAME}\")\n\n    target_compile_definitions(libfastfetch PRIVATE FF_HAVE_${VARNAME}=1)\n    target_include_directories(libfastfetch PRIVATE ${${VARNAME}_INCLUDE_DIRS})\n\n    if(NOT BINARY_LINK_TYPE STREQUAL \"dlopen\")\n        target_link_directories(libfastfetch PUBLIC ${${VARNAME}_LIBRARY_DIRS})\n        target_link_libraries(libfastfetch PRIVATE ${${VARNAME}_LIBRARIES})\n    endif()\n\n    foreach(FLAG ${${VARNAME}_CFLAGS_OTHER})\n        if(FLAG MATCHES \"-D.*\")\n            string(SUBSTRING ${FLAG} 2 -1 FLAG)\n            target_compile_definitions(libfastfetch PRIVATE ${FLAG})\n        endif()\n    endforeach()\nendfunction()\n\nff_lib_enable(VULKAN\n    \"vulkan\"\n    \"Vulkan\"\n)\nff_lib_enable(WAYLAND\n    \"wayland-client\"\n    \"WaylandClient\"\n)\nff_lib_enable(XCB_RANDR\n    \"xcb-randr\"\n    \"XcbRandr\"\n)\nff_lib_enable(XRANDR\n    \"xrandr\"\n    \"XRandr\"\n)\nff_lib_enable(DRM\n    \"libdrm\"\n    \"Libdrm\"\n)\nff_lib_enable(DRM_AMDGPU\n    \"libdrm_amdgpu\"\n    \"Libdrm_Amdgpu\"\n)\nff_lib_enable(GIO\n    \"gio-2.0\"\n    \"GIO\"\n)\nff_lib_enable(DCONF\n    \"dconf\"\n    \"DConf\"\n)\nff_lib_enable(DBUS\n    \"dbus-1\"\n    \"DBus\"\n)\nff_lib_enable(XFCONF\n    \"libxfconf-0\"\n    \"XFConf\"\n)\nff_lib_enable(SQLITE3\n    \"sqlite3\"\n    \"SQLite3\"\n)\nff_lib_enable(RPM\n    \"rpm\"\n    \"RPM\"\n)\nff_lib_enable(IMAGEMAGICK7\n    \"MagickCore-7.Q16HDRI;MagickCore-7.Q16;MagickCore-7;/usr/lib/imagemagick7/pkgconfig/MagickCore-7.Q16HDRI.pc;/usr/lib/imagemagick7/pkgconfig/MagickCore-7.Q16.pc;/usr/lib/imagemagick7/pkgconfig/MagickCore-7.pc\"\n    \"ImageMagick7\"\n)\nff_lib_enable(IMAGEMAGICK6\n    \"MagickCore-6.Q16HDRI;MagickCore-6.Q16;MagickCore-6;/usr/lib/imagemagick6/pkgconfig/MagickCore-6.Q16HDRI.pc;/usr/lib/imagemagick6/pkgconfig/MagickCore-6.Q16.pc;/usr/lib/imagemagick6/pkgconfig/MagickCore-6.pc\"\n    \"ImageMagick6\"\n)\nff_lib_enable(ZLIB\n    \"zlib\"\n    \"ZLIB\"\n)\nff_lib_enable(CHAFA\n    \"chafa>=1.10\"\n    \"Chafa\"\n)\nff_lib_enable(EGL\n    \"egl\"\n    \"EGL\"\n)\nif(NOT OpenBSD AND NOT NetBSD)\n    ff_lib_enable(GLX\n        \"glx\"\n        \"GLX\"\n    )\nelse()\n    ff_lib_enable(GLX\n        \"gl\"\n        \"GL\"\n    )\nendif()\nff_lib_enable(OSMESA\n    \"osmesa\"\n    \"OSMesa\"\n)\nff_lib_enable(OPENCL\n    \"OpenCL\"\n    \"OpenCL\"\n)\nff_lib_enable(FREETYPE\n    \"freetype2\"\n    \"FreeType2\"\n)\nff_lib_enable(PULSE\n    \"libpulse\"\n    \"Pulse\"\n)\nff_lib_enable(DDCUTIL\n    \"ddcutil\"\n    \"Ddcutil\"\n)\nff_lib_enable(ELF\n    \"libelf\"\n    \"libelf\"\n)\nff_lib_enable(DIRECTX_HEADERS\n    \"DirectX-Headers\"\n    \"DirectX-Headers\"\n)\nff_lib_enable(PCIACCESS\n    \"pciaccess\"\n    \"pciaccess\"\n)\n# The system <libzfs.h> is only usable on SunOS. We provide our local copy of it so it's always available.\nif(ENABLE_LIBZFS)\n    if(BINARY_LINK_TYPE STREQUAL \"dlopen\")\n        target_compile_definitions(libfastfetch PRIVATE FF_HAVE_LIBZFS=1)\n    else()\n        set(CMAKE_REQUIRED_LIBRARIES_BACKUP ${CMAKE_REQUIRED_LIBRARIES})\n        set(CMAKE_REQUIRED_LIBRARIES ${CMAKE_REQUIRED_LIBRARIES} zfs)\n        check_function_exists(\"libzfs_init\" LIBZFS_FOUND)\n        set(CMAKE_REQUIRED_LIBRARIES ${CMAKE_REQUIRED_LIBRARIES_BACKUP})\n        if(NOT LIBZFS_FOUND)\n            message(STATUS \"Library: missing: LIBZFS\")\n        else()\n            message(STATUS \"Library: found LIBZFS\")\n            target_compile_definitions(libfastfetch PRIVATE FF_HAVE_LIBZFS=1)\n            target_link_libraries(libfastfetch PRIVATE zfs)\n        endif()\n    endif()\nendif()\n\nif(ENABLE_THREADS)\n    target_compile_definitions(libfastfetch PRIVATE FF_HAVE_THREADS=1)\n    if(CMAKE_USE_PTHREADS_INIT) #Threads::Threads is not set for WIN32\n        target_link_libraries(libfastfetch PRIVATE Threads::Threads)\n    endif()\nendif()\n\nif(ENABLE_EMBEDDED_PCIIDS)\n    target_compile_definitions(libfastfetch PRIVATE FF_HAVE_EMBEDDED_PCIIDS=1)\nendif()\n\nif(LINUX)\n    target_link_libraries(libfastfetch\n        PRIVATE \"m\"\n    )\n\n    if(ENABLE_DIRECTX_HEADERS)\n        if(NOT BINARY_LINK_TYPE STREQUAL \"dlopen\")\n            target_link_libraries(libfastfetch\n                PRIVATE \"/usr/lib/wsl/lib/libdxcore.so\"\n            )\n        endif()\n    endif()\nelseif(APPLE)\n    target_link_libraries(libfastfetch\n        PRIVATE \"-framework AVFoundation\"\n        PRIVATE \"-framework Cocoa\"\n        PRIVATE \"-framework CoreFoundation\"\n        PRIVATE \"-framework CoreAudio\"\n        PRIVATE \"-framework CoreMedia\"\n        PRIVATE \"-framework CoreVideo\"\n        PRIVATE \"-framework CoreWLAN\"\n        PRIVATE \"-framework IOBluetooth\"\n        PRIVATE \"-framework IOKit\"\n        PRIVATE \"-framework Metal\"\n        PRIVATE \"-framework OpenGL\"\n        PRIVATE \"-framework OpenCL\"\n        PRIVATE \"-framework SystemConfiguration\"\n        PRIVATE \"-weak_framework CoreDisplay\"\n\n        PRIVATE \"-F /System/Library/PrivateFrameworks\"\n        PRIVATE \"-weak_framework DisplayServices\"\n        PRIVATE \"-weak_framework MediaRemote\"\n        PRIVATE \"-weak_framework Apple80211\"\n    )\nelseif(WIN32)\n    target_link_libraries(libfastfetch\n        PRIVATE \"dwmapi\"\n        PRIVATE \"gdi32\"\n        PRIVATE \"iphlpapi\"\n        PRIVATE \"ole32\"\n        PRIVATE \"oleaut32\"\n        PRIVATE \"ws2_32\"\n        PRIVATE \"ntdll\"\n        PRIVATE \"version\"\n        PRIVATE \"setupapi\"\n        PRIVATE \"hid\"\n        PRIVATE \"wtsapi32\"\n        PRIVATE \"imagehlp\"\n        PRIVATE \"cfgmgr32\"\n        PRIVATE \"winbrand\"\n        PRIVATE \"propsys\"\n    )\nelseif(FreeBSD)\n    target_link_libraries(libfastfetch\n        PRIVATE \"m\"\n        PRIVATE \"usbhid\"\n        PRIVATE \"bluetooth\"\n    )\n    if(NOT DragonFly)\n        target_link_libraries(libfastfetch\n            PRIVATE \"geom\"\n        )\n    else()\n        target_link_libraries(libfastfetch\n            PRIVATE \"devstat\"\n        )\n    endif()\nelseif(OpenBSD)\n    target_link_libraries(libfastfetch\n        PRIVATE \"m\"\n        PRIVATE \"kvm\"\n    )\nelseif(NetBSD)\n    target_link_libraries(libfastfetch\n        PRIVATE \"m\"\n        PRIVATE \"prop\"\n    )\nelseif(SunOS)\n    target_link_libraries(libfastfetch\n        PRIVATE \"m\"\n        PRIVATE \"socket\"\n        PRIVATE \"kstat\"\n        PRIVATE \"proc\"\n        PRIVATE \"zfs\"\n        PRIVATE \"nvpair\"\n    )\nelseif(ANDROID)\n    CHECK_LIBRARY_EXISTS(-l:libandroid-wordexp.a wordexp \"\" HAVE_LIBANDROID_WORDEXP_STATIC)\n    if(HAVE_LIBANDROID_WORDEXP_STATIC)\n        target_link_libraries(libfastfetch\n            PRIVATE -l:libandroid-wordexp.a\n        )\n    else()\n        CHECK_LIBRARY_EXISTS(android-wordexp wordexp \"\" HAVE_LIBANDROID_WORDEXP)\n        if(HAVE_LIBANDROID_WORDEXP)\n            target_link_libraries(libfastfetch\n                PRIVATE android-wordexp\n            )\n        endif()\n    endif()\nendif()\n\ntarget_include_directories(libfastfetch\n    PUBLIC ${PROJECT_BINARY_DIR}\n    PUBLIC ${PROJECT_SOURCE_DIR}/src\n)\n\ntarget_link_libraries(libfastfetch\n    PRIVATE ${CMAKE_DL_LIBS}\n)\n\ntarget_compile_options(libfastfetch PRIVATE\n    $<$<COMPILE_LANGUAGE:CXX>:-fno-exceptions -fno-rtti>)\n\nif(WIN32)\n    set(CMAKE_CXX_STANDARD 20)\n    include(CheckIncludeFileCXX)\n    CHECK_INCLUDE_FILE_CXX(\"winrt/Windows.Foundation.h\" HAVE_WINRT)\n    if(HAVE_WINRT)\n        add_library(ffwinrt MODULE src/detection/media/media_windows.dll.cpp)\n        target_link_libraries(ffwinrt PRIVATE \"RuntimeObject\")\n        target_compile_definitions(ffwinrt PRIVATE WIN32_LEAN_AND_MEAN=1 WINRT_LEAN_AND_MEAN=1)\n        target_link_options(ffwinrt\n            PRIVATE \"-static\" # stdc++, winpthread, gcc_s, etc.\n        )\n    endif()\n    set(CMAKE_CXX_STANDARD 17)\nendif()\nif(FreeBSD)\n    set(CMAKE_REQUIRED_INCLUDES \"/usr/local/include\" \"/usr/include\")\nendif()\nif(LINUX OR FreeBSD OR OpenBSD OR NetBSD)\n    CHECK_INCLUDE_FILE(\"linux/videodev2.h\" HAVE_LINUX_VIDEODEV2)\n    if(HAVE_LINUX_VIDEODEV2)\n        target_compile_definitions(libfastfetch PRIVATE FF_HAVE_LINUX_VIDEODEV2=1)\n    endif()\nendif()\nif(LINUX)\n    CHECK_INCLUDE_FILE(\"linux/wireless.h\" HAVE_LINUX_WIRELESS)\n    if(HAVE_LINUX_WIRELESS)\n        target_compile_definitions(libfastfetch PRIVATE FF_HAVE_LINUX_WIRELESS=1)\n    endif()\nendif()\nif(NOT WIN32)\n    CHECK_INCLUDE_FILE(\"utmpx.h\" HAVE_UTMPX)\n    if(HAVE_UTMPX)\n        target_compile_definitions(libfastfetch PRIVATE FF_HAVE_UTMPX=1)\n    endif()\n    CHECK_INCLUDE_FILE(\"wordexp.h\" HAVE_WORDEXP)\n    if(HAVE_WORDEXP)\n        target_compile_definitions(libfastfetch PRIVATE FF_HAVE_WORDEXP=1)\n    endif()\n    CHECK_INCLUDE_FILE(\"glob.h\" HAVE_GLOB)\n    if(HAVE_GLOB)\n        target_compile_definitions(libfastfetch PRIVATE FF_HAVE_GLOB=1)\n    endif()\n    if(ENABLE_THREADS AND CMAKE_USE_PTHREADS_INIT)\n        CHECK_INCLUDE_FILE(\"pthread_np.h\" HAVE_PTHREAD_NP)\n        if(HAVE_PTHREAD_NP)\n            target_compile_definitions(libfastfetch PRIVATE FF_HAVE_PTHREAD_NP=1)\n            set(CMAKE_REQUIRED_INCLUDES ${CMAKE_REQUIRED_INCLUDES} pthread_np.h)\n        endif()\n        set(CMAKE_REQUIRED_LIBRARIES ${CMAKE_REQUIRED_LIBRARIES} Threads::Threads)\n        check_function_exists(\"pthread_timedjoin_np\" HAVE_TIMEDJOIN_NP)\n        if(HAVE_TIMEDJOIN_NP)\n            target_compile_definitions(libfastfetch PRIVATE FF_HAVE_TIMEDJOIN_NP=1)\n        else()\n            message(WARNING \"pthread_timedjoin_np was not found; networking timeout will not work\")\n        endif()\n    endif()\nendif()\n\nset(PACKAGES_DISABLE_LIST \"\")\nforeach(package_manager ${PACKAGE_MANAGERS})\n    if(PACKAGES_DISABLE_${package_manager})\n        list(APPEND PACKAGES_DISABLE_LIST \"${package_manager}\")\n    endif()\nendforeach()\nif(\"${PACKAGES_DISABLE_LIST}\" STREQUAL \"\")\n    set(PACKAGES_DISABLE_LIST \"FF_PACKAGES_FLAG_NONE\")\nelse()\n    message(STATUS \"Disabled package managers: ${PACKAGES_DISABLE_LIST}\")\n    list(TRANSFORM PACKAGES_DISABLE_LIST PREPEND \"FF_PACKAGES_FLAG_\")\n    list(TRANSFORM PACKAGES_DISABLE_LIST APPEND \"_BIT\")\n    list(JOIN PACKAGES_DISABLE_LIST \" | \" PACKAGES_DISABLE_LIST)\nendif()\ntarget_compile_definitions(libfastfetch PRIVATE FF_PACKAGES_DISABLE_LIST=${PACKAGES_DISABLE_LIST})\n\n######################\n# Executable targets #\n######################\n\nadd_executable(fastfetch\n    src/fastfetch.c\n)\ntarget_compile_definitions(fastfetch\n    PRIVATE FASTFETCH_TARGET_BINARY_NAME=fastfetch\n)\ntarget_link_libraries(fastfetch\n    PRIVATE libfastfetch\n)\n\n# Prevent fastfetch from linking to libstdc++\nset(CMAKE_CXX_IMPLICIT_LINK_LIBRARIES \"\")\nset(CMAKE_CXX_IMPLICIT_LINK_DIRECTORIES \"\")\nset_target_properties(fastfetch PROPERTIES LINKER_LANGUAGE C)\n\nif(WIN32)\n    target_sources(fastfetch\n        PRIVATE src/util/windows/version.rc\n    )\nelseif(APPLE)\n    target_link_options(fastfetch\n        PRIVATE LINKER:-sectcreate,__TEXT,__info_plist,Info.plist\n    )\nendif()\n\nif(BINARY_LINK_TYPE STREQUAL \"static\")\n    target_link_options(fastfetch PRIVATE \"-static\")\nendif()\n\n# Apply all above parameters to flashfetch if it is built\nif (BUILD_FLASHFETCH)\n    add_executable(flashfetch\n        src/flashfetch.c\n    )\n    target_compile_definitions(flashfetch\n        PRIVATE FASTFETCH_TARGET_BINARY_NAME=flashfetch\n    )\n    target_link_libraries(flashfetch\n        PRIVATE libfastfetch\n    )\n\n    set_target_properties(flashfetch PROPERTIES LINKER_LANGUAGE C)\n\n    if(WIN32)\n        target_sources(flashfetch\n            PRIVATE src/util/windows/version.rc\n        )\n    elseif(APPLE)\n        target_link_options(flashfetch\n            PRIVATE LINKER:-sectcreate,__TEXT,__info_plist,Info.plist\n        )\n    endif()\n\n    if(BINARY_LINK_TYPE STREQUAL \"static\")\n        target_link_options(flashfetch PRIVATE \"-static\")\n    endif()\nendif()\n\n###################\n# Testing targets #\n###################\n\nif (BUILD_TESTS)\n    add_executable(fastfetch-test-strbuf\n        tests/strbuf.c\n    )\n    target_link_libraries(fastfetch-test-strbuf\n        PRIVATE libfastfetch\n    )\n\n    add_executable(fastfetch-test-list\n        tests/list.c\n    )\n    target_link_libraries(fastfetch-test-list\n        PRIVATE libfastfetch\n    )\n\n    add_executable(fastfetch-test-format\n        tests/format.c\n    )\n    target_link_libraries(fastfetch-test-format\n        PRIVATE libfastfetch\n    )\n\n    enable_testing()\n    add_test(NAME test-strbuf COMMAND fastfetch-test-strbuf)\n    add_test(NAME test-list COMMAND fastfetch-test-list)\n    add_test(NAME test-format COMMAND fastfetch-test-format)\nendif()\n\n##################\n# install target #\n##################\n\ninclude(GNUInstallDirs)\n\ninstall(\n    TARGETS fastfetch\n    DESTINATION \"${CMAKE_INSTALL_BINDIR}\"\n)\n\nif (TARGET flashfetch)\n    install(\n        TARGETS flashfetch\n        DESTINATION \"${CMAKE_INSTALL_BINDIR}\"\n    )\nendif()\n\nif (TARGET ffwinrt)\n    install(\n        TARGETS ffwinrt\n        DESTINATION \"${CMAKE_INSTALL_BINDIR}\"\n    )\nendif()\n\ninstall(\n    FILES \"${CMAKE_SOURCE_DIR}/completions/${CMAKE_PROJECT_NAME}.bash\"\n    DESTINATION \"${CMAKE_INSTALL_DATAROOTDIR}/bash-completion/completions\"\n    RENAME \"${CMAKE_PROJECT_NAME}\"\n)\n\ninstall(\n    FILES \"${CMAKE_SOURCE_DIR}/completions/${CMAKE_PROJECT_NAME}.zsh\"\n    DESTINATION \"${CMAKE_INSTALL_DATAROOTDIR}/zsh/site-functions\"\n    RENAME \"_${CMAKE_PROJECT_NAME}\"\n)\n\ninstall(\n    FILES \"${CMAKE_SOURCE_DIR}/completions/${CMAKE_PROJECT_NAME}.fish\"\n    DESTINATION \"${CMAKE_INSTALL_DATAROOTDIR}/fish/vendor_completions.d\"\n    RENAME \"${CMAKE_PROJECT_NAME}.fish\"\n)\n\ninstall(\n    DIRECTORY \"${CMAKE_SOURCE_DIR}/presets\"\n    DESTINATION \"${CMAKE_INSTALL_DATAROOTDIR}/${CMAKE_PROJECT_NAME}\"\n)\n\nif(INSTALL_LICENSE)\n    install(\n        FILES \"${CMAKE_SOURCE_DIR}/LICENSE\"\n        DESTINATION \"${CMAKE_INSTALL_DATAROOTDIR}/licenses/${CMAKE_PROJECT_NAME}\"\n    )\nendif()\n\ninstall(\n    FILES \"${PROJECT_BINARY_DIR}/fastfetch.1\"\n    DESTINATION \"${CMAKE_INSTALL_MANDIR}/man1\"\n)\n\n##################\n# package target #\n##################\n\nset(CPACK_GENERATOR \"TGZ;ZIP\")\nif(APPLE)\n    string(TOLOWER \"${CMAKE_PROJECT_NAME}-macos-universal\" CPACK_PACKAGE_FILE_NAME)\nelse() # We don't use this in Windows\n    if(CMAKE_SYSTEM_PROCESSOR STREQUAL \"x86_64\")\n        set(CMAKE_SYSTEM_PROCESSOR \"amd64\")\n    endif()\n    if(IS_MUSL)\n        string(TOLOWER \"${CMAKE_PROJECT_NAME}-musl-${CMAKE_SYSTEM_PROCESSOR}\" CPACK_PACKAGE_FILE_NAME)\n    else()\n        string(TOLOWER \"${CMAKE_PROJECT_NAME}-${CMAKE_SYSTEM_NAME}-${CMAKE_SYSTEM_PROCESSOR}\" CPACK_PACKAGE_FILE_NAME)\n    endif()\nendif()\n\nif(LINUX)\n    find_program(HAVE_DPKG \"dpkg\")\n    if(HAVE_DPKG)\n        set(CPACK_GENERATOR \"${CPACK_GENERATOR};DEB\")\n\n        set(CPACK_DEBIAN_PACKAGE_SECTION, \"utils\")\n        set(CPACK_DEBIAN_PACKAGE_PRIORITY \"optional\")\n\n        if(NOT IS_MUSL)\n            EXECUTE_PROCESS(\n                COMMAND getconf GNU_LIBC_VERSION\n                OUTPUT_VARIABLE GLIBC_VERSION\n                OUTPUT_STRIP_TRAILING_WHITESPACE)\n            if(GLIBC_VERSION)\n                STRING(REPLACE \"glibc \" \"\" GLIBC_VERSION ${GLIBC_VERSION})\n                set(CPACK_DEBIAN_PACKAGE_DEPENDS \"libc6 (>= ${GLIBC_VERSION})\")\n                message(STATUS \"found glibc ${GLIBC_VERSION}\")\n            else()\n                message(WARNING \"Could not determine glibc version. If `musl` is used, `-DIS_MUSL=ON` should be set\")\n            endif()\n        endif()\n    endif()\n\n    find_program(HAVE_RPMBUILD \"rpmbuild\")\n    if(HAVE_RPMBUILD)\n        set(CPACK_GENERATOR \"${CPACK_GENERATOR};RPM\")\n\n        set(CPACK_RPM_PACKAGE_LICENSE \"MIT\")\n    endif()\nendif()\n\nset(CPACK_SET_DESTDIR ON)\n\nset(CPACK_PACKAGE_CONTACT \"Linus Dierheimer <Linus@Dierheimer.de>\")\nset(CPACK_PACKAGE_DESCRIPTION \"\\\nfastfetch is a neofetch-like tool for fetching system information and displaying them in a pretty way. \\\nIt is written mostly in C to achieve much better performance.\\\n\")\n\ninclude(CPack)\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.359375,
          "content": "\n# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, caste, color, religion, or sexual\nidentity and orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the overall\n  community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or advances of\n  any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email address,\n  without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official email address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\n[INSERT CONTACT METHOD].\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series of\nactions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or permanent\nban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior, harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within the\ncommunity.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.1, available at\n[https://www.contributor-covenant.org/version/2/1/code_of_conduct.html][v2.1].\n\nCommunity Impact Guidelines were inspired by\n[Mozilla's code of conduct enforcement ladder][Mozilla CoC].\n\nFor answers to common questions about this code of conduct, see the FAQ at\n[https://www.contributor-covenant.org/faq][FAQ]. Translations are available at\n[https://www.contributor-covenant.org/translations][translations].\n\n[homepage]: https://www.contributor-covenant.org\n[v2.1]: https://www.contributor-covenant.org/version/2/1/code_of_conduct.html\n[Mozilla CoC]: https://github.com/mozilla/diversity\n[FAQ]: https://www.contributor-covenant.org/faq\n[translations]: https://www.contributor-covenant.org/translations\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0859375,
          "content": "MIT License\n\nCopyright (c) 2021-2023 Linus Dierheimer\nCopyright (c) 2022-2024 Carter Li\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 13.849609375,
          "content": "# Fastfetch\n\n[![GitHub Workflow Status (with event)](https://img.shields.io/github/actions/workflow/status/fastfetch-cli/fastfetch/ci.yml)](https://github.com/fastfetch-cli/fastfetch/actions)\n[![GitHub license](https://img.shields.io/github/license/fastfetch-cli/fastfetch)](https://github.com/fastfetch-cli/fastfetch/blob/dev/LICENSE)\n[![GitHub contributors](https://img.shields.io/github/contributors/fastfetch-cli/fastfetch)](https://github.com/fastfetch-cli/fastfetch/graphs/contributors)\n[![GitHub top language](https://img.shields.io/github/languages/top/fastfetch-cli/fastfetch?logo=c&label=)](https://github.com/fastfetch-cli/fastfetch/blob/dev/CMakeLists.txt#L5)\n[![GitHub commit activity (branch)](https://img.shields.io/github/commit-activity/m/fastfetch-cli/fastfetch)](https://github.com/fastfetch-cli/fastfetch/commits)  \n[![homebrew downloads](https://img.shields.io/homebrew/installs/dm/fastfetch?logo=homebrew)](https://formulae.brew.sh/formula/fastfetch#default)\n[![GitHub all releases](https://img.shields.io/github/downloads/fastfetch-cli/fastfetch/total?logo=github)](https://github.com/fastfetch-cli/fastfetch/releases)  \n[![GitHub release (with filter)](https://img.shields.io/github/v/release/fastfetch-cli/fastfetch?logo=github)](https://github.com/fastfetch-cli/fastfetch/releases)\n[![latest packaged version(s)](https://repology.org/badge/latest-versions/fastfetch.svg)](https://repology.org/project/fastfetch/versions)\n[![Packaging status](https://repology.org/badge/tiny-repos/fastfetch.svg)](https://repology.org/project/fastfetch/versions)\n\nFastfetch is a [neofetch](https://github.com/dylanaraps/neofetch)-like tool for fetching system information and displaying it prettily. It is written mainly in C, with performance and customizability in mind. Currently, Linux, Android, FreeBSD, macOS, SunOS and Windows 7+ are supported.\n\n<img src=\"screenshots/example1.png\" width=\"49%\" align=\"left\" />\n<img src=\"https://upload.wikimedia.org/wikipedia/commons/2/24/Transparent_Square_Tiles_Texture.png\" width=\"49%\" height=\"16px\" align=\"left\" />\n<img src=\"screenshots/example4.png\" width=\"49%\" align=\"left\" />\n<img src=\"https://upload.wikimedia.org/wikipedia/commons/2/24/Transparent_Square_Tiles_Texture.png\" width=\"49%\" height=\"16px\" align=\"left\" />\n<img src=\"screenshots/example2.png\" width=\"48%\" align=\"top\" />\n<img src=\"screenshots/example3.png\" width=\"48%\" align=\"top\" />\n<img src=\"screenshots/example5.png\" height=\"15%\" align=\"top\" />\n\nThere are [screenshots on different platforms](https://github.com/fastfetch-cli/fastfetch/wiki).\n\n## Installation\n\n### Linux\n\nSome distros package an outdated fastfetch version. Older versions receive no support, so please try always to use the latest version.\n\n* Ubuntu: [`ppa:zhangsongcui3371/fastfetch`](https://launchpad.net/~zhangsongcui3371/+archive/ubuntu/fastfetch) (for Ubuntu 22.04 or newer)\n* Debian: `apt install fastfetch` (for Debian 13 or newer)\n* Debian / Ubuntu: Download `fastfetch-linux-<proper architecture>.deb` from [Github release page](https://github.com/fastfetch-cli/fastfetch/releases/latest) and double-click it (for Ubuntu 20.04 or newer and Debian 11 or newer).\n* Arch Linux: `pacman -S fastfetch`\n* Fedora: `dnf install fastfetch`\n* Gentoo: `emerge --ask app-misc/fastfetch`\n* Alpine: `apk add --upgrade fastfetch`\n* NixOS: `nix-shell -p fastfetch`\n* openSUSE: `zypper install fastfetch`\n* ALT Linux: `apt-get install fastfetch`\n* Exherbo: `cave resolve --execute app-misc/fastfetch`\n* Solus: `eopkg install fastfetch`\n* Slackware: `sbopkg -i fastfetch`\n* Void Linux: `xbps-install fastfetch`\n* Venom Linux: `scratch install fastfetch`\n\nYou may need `sudo`, `doas` or `sup` to run these commands.\n\n[See also if fastfetch has been packaged for your favorite Linux distro](#Packaging).\n\nIf fastfetch is not packaged for your distro or an outdated version is packaged, [linuxbrew](https://brew.sh/) is a good alternative: `brew install fastfetch`\n\n### macOS\n\n* [HomeBrew](https://formulae.brew.sh/formula/fastfetch#default): `brew install fastfetch`\n* [MacPorts](https://ports.macports.org/port/fastfetch/): `sudo port install fastfetch`\n\n### Windows\n\n* [scoop](https://scoop.sh/#/apps?q=fastfetch): `scoop install fastfetch`\n* [Chocolatey](https://community.chocolatey.org/packages/fastfetch): `choco install fastfetch`\n* [winget](https://github.com/microsoft/winget-pkgs/tree/master/manifests/f/Fastfetch-cli/Fastfetch): `winget install fastfetch`\n* [MSYS2 MinGW](https://packages.msys2.org/base/mingw-w64-fastfetch): `pacman -S mingw-w64-<subsystem>-<arch>-fastfetch`\n\nYou may also download the program directly from [the GitHub releases page](https://github.com/fastfetch-cli/fastfetch/releases/latest) in the form of an archive file.\n\n### FreeBSD\n\n* `pkg install fastfetch`\n\n### Android (Termux)\n\n* `pkg install fastfetch`\n\n## Build from source\n\nSee Wiki: https://github.com/fastfetch-cli/fastfetch/wiki/Building\n\n## Usage\n\n* Run it with default configuration: `fastfetch`\n* Run it with [all supported modules](https://github.com/fastfetch-cli/fastfetch/wiki/Support+Status#available-modules) and find what interests you: `fastfetch -c all.jsonc`\n* Find all data that fastfetch detects: `fastfetch -s <module> --format json`\n* Display help messages: `fastfetch --help`\n* Generate config file based on command line arguments: `fastfetch --arg1 --arg2 --gen-config`\n\n## Customization\n\nFastfetch uses the JSONC (or JSON with comments) for configuration. [See Wiki for detail](https://github.com/fastfetch-cli/fastfetch/wiki/Configuration). There are some premade config files in [`presets`](presets), including the ones used for the screenshots above. You can load them using `-c <filename>`. Those files can serve as examples of the configuration syntax.\n\nLogos can also be heavily customized; see the [logo documentation](https://github.com/fastfetch-cli/fastfetch/wiki/Logo-options) for more information.\n\n\n## Packaging\n\n### Repositories\n\n[![Packaging status](https://repology.org/badge/vertical-allrepos/fastfetch.svg?header=)](https://repology.org/project/fastfetch/versions)\n\n### Manual\n\n* DEB / RPM package: `cmake --build . --target package`\n* Install directly: `cmake --install . --prefix /usr/local`\n\n## FAQ\n\n### Q: Neofetch is good enough. Why do I need fastfetch?\n\n1. Fastfetch is actively maintained.\n2. Fastfetch is faster. As the name suggests.\n3. Fastfetch has a greater number of features, though by default fastfetch only has a few modules enabled; use `fastfetch -c all` to find what you want.\n4. Fastfetch is more configurable. You can find more information in the Wiki: <https://github.com/fastfetch-cli/fastfetch/wiki/Configuration>.\n5. Fastfetch is more polished. For example, neofetch prints `555 MiB` in the Memory module and `23 G` in the Disk module, whereas fastfetch prints `555.00 MiB` and `22.97 GiB` respectively.\n6. Fastfetch is more accurate. For example, [neofetch never actually supports the Wayland protocol](https://github.com/dylanaraps/neofetch/pull/2395).\n\n### Q: Fastfetch shows my local IP address. It leaks my privacy!\n\nA local IP (10.x.x.x, 172.x.x.x, 192.168.x.x) has nothing to do with privacy. It only makes sense if you are on the same network, for example, if you connect to the same Wi-Fi network.\n\nActually the `Local IP` module is the most useful module for me personally. I (@CarterLi) have several VMs installed to test fastfetch and often need to SSH into them. I have fastfetch running on shell startup and I never need to type `ip addr` manually.\n\nIf you really don't like it, you can disable the `Local IP` module in `config.jsonc`.\n\n### Q: Where is the config file? I can't find it.\n\n`Fastfetch` does not generate config file automatically. You can use `fastfetch --gen-config` to generate one. The config file will be saved in `~/.config/fastfetch/config.jsonc` by default. See [Wiki for detail](https://github.com/fastfetch-cli/fastfetch/wiki/Configuration).\n\n### Q: The configuration is so complex. Where is the documentation?\n\nFastfetch uses JSON (with comments) for configuration. I suggest you use an IDE with JSON schema support (like VSCode) to edit it.\n\nAlternatively, you can refer to the presets in [`presets` directory](https://github.com/fastfetch-cli/fastfetch/tree/dev/presets).\n\nThe **correct** way to edit the configuration:\n\nThis is an example that [changes size prefix from MiB / GiB to MB / GB](https://github.com/fastfetch-cli/fastfetch/discussions/1014). Editor used: [helix](https://github.com/helix-editor/helix)\n\n[![asciicast](https://asciinema.org/a/1uF6sTPGKrHKI1MVaFcikINSQ.svg)](https://asciinema.org/a/1uF6sTPGKrHKI1MVaFcikINSQ)\n\n### Q: I WANT THE DOCUMENTATION!\n\n[Here is the documentation](https://github.com/fastfetch-cli/fastfetch/wiki/Json-Schema). It is generated from [JSON schema](https://github.com/fastfetch-cli/fastfetch/blob/dev/doc/json_schema.json) but you won't like it.\n\n### Q: How can I customize the module output?\n\nFastfetch uses `format` to generate output. For example, to make the `GPU` module show only the GPU name (leaving other information undisplayed), you can use\n\n```jsonc\n{\n    \"modules\": [\n        {\n            \"type\": \"gpu\",\n            \"format\": \"{name}\" // See `fastfetch -h gpu-format` for detail\n        }\n    ]\n}\n```\n\n. . which is equivalent to `fastfetch -s gpu --gpu-format '{name}'`\n\nSee `fastfetch -h format` for information on basic usage. For module specific formattion, see `fastfetch -h <module>-format`\n\n### Q: I have my own ascii-art / image file. How can I show it with fastfetch?\n\nTry `fastfetch -l /path/to/logo`. See [logo documentation](https://github.com/fastfetch-cli/fastfetch/wiki/Logo-options) for detail.\n\nIf you just want to display distro name in [FIGlet text](https://github.com/pwaller/pyfiglet):\n\n```bash\n# install pyfiglet and jq first\npyfiglet -s -f small_slant $(fastfetch -s os --format json | jq -r '.[0].result.name') && fastfetch -l none\n```\n\n![image](https://github.com/fastfetch-cli/fastfetch/assets/6134068/6466524e-ab8c-484f-848d-eec7ddeb7df2)\n\n### Q: My image logo behaves weird. How can I fix it?\n\nSee troubleshooting section: <https://github.com/fastfetch-cli/fastfetch/wiki/Logo-options#troubleshooting>\n\n### Q: Fastfetch runs in white and black on shell startup. Why?\n\nThis issue usually happens when using fastfetch with `p10k`. There are known incompatibility between fastfetch and p10k instant prompt.\nThe p10k doc clearly states that you should NOT print anything to stdout after `p10k-instant-prompt` is initialized. You should either put `fastfetch` before initialization of `p10k-instant-prompt` (recommended)\n\nYou can always use `fastfetch --pipe false` to force fastfetch running in colorful mode.\n\n### Q: Why do fastfetch and neofetch show different memory usage result?\n\nSee [#1096](https://github.com/fastfetch-cli/fastfetch/issues/1096).\n\n### Q: Fastfetch shows less dpkg packages than neofetch, is it a bug?\n\nNeofetch incorrectly counts `rc` packages ( the package has been removed, but that the configuration files remain ). Bug https://github.com/dylanaraps/neofetch/issues/2278\n\n### Q: I use Debian / Ubuntu / Debian derived distro. My GPU is detected as `XXXX Device XXXX (VGA compatible)`. Is it a bug?\n\nTry upgrading `pci.ids`: Download <https://pci-ids.ucw.cz/v2.2/pci.ids> and overwrite file `/usr/share/hwdata/pci.ids`. For AMD GPUs, you should also upgrade `amdgpu.ids`: Download <https://gitlab.freedesktop.org/mesa/drm/-/raw/main/data/amdgpu.ids> and overwrite file `/usr/share/libdrm/amdgpu.ids`\n\nAlternatively, you may try to use `fastfetch --gpu-driver-specific`, so that `fastfetch` will try to ask the driver for GPU name if supported.\n\n### Q: I get error `Authorization required, but no authorization protocol specified` when running fastfetch in root\n\nTry `export XAUTHORITY=$HOME/.Xauthority`\n\n### Q: Fastfetch cannot detect my awesome 3rd-party macOS window manager!\n\nTry `fastfetch --wm-detect-plugin`. See also [#984](https://github.com/fastfetch-cli/fastfetch/issues/984)\n\n### Q: How can I change the colors of my ASCII logo?\n\nTry `fastfetch --logo-color-[1-9] <color>`. `[1-9]` is the index of color placeholders.\n\nFor example: `fastfetch --logo-color-1 red --logo-color-2 green`.\n\nIn JSONC, you can use:\n\n```jsonc\n{\n    \"logo\": {\n        \"color\": {\n            \"1\": \"red\",\n            \"2\": \"green\"\n        }\n    }\n}\n```\n\n### Q: How to hide a key?\n\nSet the key to a white space.\n\n```jsonc\n{\n    \"key\": \" \"\n}\n```\n\n### Q: I want feature A / B / C. Will fastfetch support it?\n\nFastfetch is a system information tool. We only accept hardware or system level software feature requests. For most personal uses, I recommend using `Command` module to detect it yourself, which can be used to grab output from a custom shell script:\n\n```jsonc\n// This module shows the default editor\n{\n    \"modules\": [\n        {\n            \"type\": \"command\",\n            \"text\": \"$EDITOR --version | head -1\",\n            \"key\": \"Editor\"\n        }\n    ]\n}\n```\n\nOtherwise, open a feature request in [GitHub Issues](https://github.com/fastfetch-cli/fastfetch/issues).\n\n### Q: I have questions. Where can I get help?\n\n* For usage questions, please start a discussion in [GitHub Discussions](https://github.com/fastfetch-cli/fastfetch/discussions).\n* For possible bugs, please open an issue in [GitHub Issues](https://github.com/fastfetch-cli/fastfetch/issues). Be sure to fill the bug-report template carefully for developers to investigate.\n\n## Donate\n\nIf you find Fastfetch to be useful, please consider donating.\n\n* Current maintainer: [@CarterLi](https://paypal.me/zhangsongcui)\n* Original author: [@LinusDierheimer](https://github.com/sponsors/LinusDierheimer)\n\n## Star History\n\nGive it a star to support us!\n\n<a href=\"https://star-history.com/#fastfetch-cli/fastfetch&Date\">\n  <picture>\n    <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://api.star-history.com/svg?repos=fastfetch-cli/fastfetch&type=Date&theme=dark\" />\n    <source media=\"(prefers-color-scheme: light)\" srcset=\"https://api.star-history.com/svg?repos=fastfetch-cli/fastfetch&type=Date\" />\n    <img alt=\"Star History Chart\" src=\"https://api.star-history.com/svg?repos=fastfetch-cli/fastfetch&type=Date\" />\n  </picture>\n</a>\n"
        },
        {
          "name": "completions",
          "type": "tree",
          "content": null
        },
        {
          "name": "debian",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "presets",
          "type": "tree",
          "content": null
        },
        {
          "name": "run.sh",
          "type": "blob",
          "size": 0.404296875,
          "content": "#!/usr/bin/env sh\n\nset -e\n\nmkdir -p build/\ncd build/\n\ncmake ..\n\nkernel_name=\"$(uname -s)\"\n\ncase \"${kernel_name}\" in\n    \"Linux\" | \"MINGW\"*)\n        cmake_build_args=\"-j$(nproc)\"\n        ;;\n    \"Darwin\" | *\"BSD\" | \"DragonFly\")\n        cmake_build_args=\"-j$(sysctl -n hw.ncpu)\"\n        ;;\n    *)\n        cmake_build_args=\"\"\n        ;;\nesac\n\ncmake --build . --target fastfetch \"${cmake_build_args}\"\n\n./fastfetch \"$@\"\n"
        },
        {
          "name": "screenshots",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}