{
  "metadata": {
    "timestamp": 1736710418046,
    "page": 48,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "systemd/systemd",
      "stars": 13573,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 3.7705078125,
          "content": "# This configuration file can be used to auto-format the code base.\n# Not all guidelines specified in CODING_STYLE are followed, so the\n# result MUST NOT be committed indiscriminately, but each automated\n# change should be reviewed and only the appropriate ones committed.\n#\n# The easiest way to apply the formatting to your changes ONLY,\n# is to use the git-clang-format script (usually installed with clang-format).\n#\n# -  Fix up formatting before committing\n# 1. Edit and stage your files.\n# 2. Run `git clang-format`.\n# 3. Verify + correct + (un)stage changes.\n# 4. Commit.\n#\n# -  Fix up formatting after committing\n# 1. Commit your changes.\n# 2. Run `git clang-format HEAD~` - Refer the commit *before* your changes here.\n# 3. Verify + correct changes, `git difftool -d` can help here.\n# 4. Stage + commit, potentially with `--amend` (means to fixup the last commit).\n#\n# To run clang-format on all sourcefiles, use the following line:\n# $ git ls-files 'src/*.[ch]' 'src/*.cc' | xargs clang-format -i -style=file\n#\n# You can find more information on the different config parameters in this file here:\n# https://clang.llvm.org/docs/ClangFormatStyleOptions.html\n---\nAccessModifierOffset: -4\nAlignAfterOpenBracket: AlwaysBreak\nAlignArrayOfStructures: Right\nAlignEscapedNewlines: Left\nAlignOperands: false\nAllowShortFunctionsOnASingleLine: None\nAlwaysBreakBeforeMultilineStrings: true\nAlwaysBreakTemplateDeclarations: Yes\nBinPackArguments: false\nBinPackParameters: false\nBraceWrapping:\n  AfterEnum: false\n  SplitEmptyFunction: false\n  SplitEmptyRecord: false\n  SplitEmptyNamespace: false\nBreakBeforeBraces: Custom\nBreakBeforeTernaryOperators: false\nBreakInheritanceList: BeforeComma\nBreakStringLiterals: false\nColumnLimit: 109\nCompactNamespaces: true\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nConstructorInitializerIndentWidth: 8\nContinuationIndentWidth: 16\nCpp11BracedListStyle: false\nForEachMacros:\n  - BITMAP_FOREACH\n  - CMSG_FOREACH\n  - _DNS_ANSWER_FOREACH\n  - DNS_ANSWER_FOREACH\n  - _DNS_ANSWER_FOREACH_FLAGS\n  - DNS_ANSWER_FOREACH_FLAGS\n  - _DNS_ANSWER_FOREACH_FULL\n  - DNS_ANSWER_FOREACH_FULL\n  - _DNS_ANSWER_FOREACH_IFINDEX\n  - DNS_ANSWER_FOREACH_IFINDEX\n  - _DNS_QUESTION_FOREACH\n  - DNS_QUESTION_FOREACH\n  - FDSET_FOREACH\n  - FOREACH_BTRFS_IOCTL_SEARCH_HEADER\n  - FOREACH_DEVICE\n  - FOREACH_DEVICE_AND_SUBSYSTEM\n  - FOREACH_DEVICE_DEVLINK\n  - FOREACH_DEVICE_PROPERTY\n  - FOREACH_DEVICE_SYSATTR\n  - FOREACH_DEVICE_TAG\n  - FOREACH_DIRENT\n  - FOREACH_DIRENT_ALL\n  - FOREACH_INOTIFY_EVENT\n  - FOREACH_STRING\n  - FOREACH_SUBSYSTEM\n  - HASHMAP_FOREACH\n  - HASHMAP_FOREACH_IDX\n  - HASHMAP_FOREACH_KEY\n  - JOURNAL_FOREACH_DATA_RETVAL\n  - JSON_VARIANT_ARRAY_FOREACH\n  - JSON_VARIANT_OBJECT_FOREACH\n  - LIST_FOREACH\n  - LIST_FOREACH_AFTER\n  - LIST_FOREACH_BEFORE\n  - LIST_FOREACH_OTHERS\n  - LIST_FOREACH_SAFE\n  - MESSAGE_FOREACH_PART\n  - NULSTR_FOREACH\n  - NULSTR_FOREACH_PAIR\n  - OBJECT_PATH_FOREACH_PREFIX\n  - ORDERED_HASHMAP_FOREACH\n  - ORDERED_HASHMAP_FOREACH_KEY\n  - ORDERED_SET_FOREACH\n  - PATH_FOREACH_PREFIX\n  - PATH_FOREACH_PREFIX_MORE\n  - SD_HWDB_FOREACH_PROPERTY\n  - SD_JOURNAL_FOREACH\n  - SD_JOURNAL_FOREACH_BACKWARDS\n  - SD_JOURNAL_FOREACH_DATA\n  - SD_JOURNAL_FOREACH_FIELD\n  - SD_JOURNAL_FOREACH_UNIQUE\n  - SECCOMP_FOREACH_LOCAL_ARCH\n  - SET_FOREACH\n  - SET_FOREACH_MOVE\n  - STRV_FOREACH\n  - STRV_FOREACH_BACKWARDS\n  - STRV_FOREACH_PAIR\nIndentPPDirectives: AfterHash\nIndentWidth: 8\nIndentWrappedFunctionNames: true\nMaxEmptyLinesToKeep: 2\nPenaltyBreakAssignment: 65\nPenaltyBreakBeforeFirstCallParameter: 16\nPenaltyBreakComment: 320\nPenaltyBreakFirstLessLess: 50\nPenaltyBreakString: 0\nPenaltyExcessCharacter: 10\nPenaltyReturnTypeOnItsOwnLine: 100\nPointerAlignment: Right\nSpaceAfterCStyleCast: true\nSpaceAroundPointerQualifiers: Both\nSpaceBeforeParens: ControlStatementsExceptForEachMacros\nSpacesInAngles: true\nTabWidth: 8\nUseCRLF: false\n"
        },
        {
          "name": ".clusterfuzzlite",
          "type": "tree",
          "content": null
        },
        {
          "name": ".ctags",
          "type": "blob",
          "size": 0.0107421875,
          "content": "--links=no\n"
        },
        {
          "name": ".dir-locals.el",
          "type": "blob",
          "size": 1.1591796875,
          "content": "; Sets emacs variables based on mode.\n; A list of (major-mode . ((var1 . value1) (var2 . value2)))\n; Mode can be nil, which gives default values.\n\n; Note that we set a line width of 109 for .c and XML files, but for everything\n; else (such as journal catalog files, unit files, README files) we stick to a\n; more conservative 79 characters.\n\n; NOTE: If you update this file make sure to update .vimrc and .editorconfig,\n; too.\n\n((c-mode . ((fill-column . 109)\n            (c-basic-offset . 8)\n            (eval . (c-set-offset 'substatement-open 0))\n            (eval . (c-set-offset 'statement-case-open 0))\n            (eval . (c-set-offset 'case-label 0))\n            (eval . (c-set-offset 'arglist-intro '++))\n            (eval . (c-set-offset 'arglist-close 0))\n            (eval . (c-set-offset 'arglist-cont-nonempty '(c-lineup-gcc-asm-reg c-lineup-arglist)))))\n (nxml-mode . ((nxml-child-indent . 2)\n               (fill-column . 109)))\n (meson-mode . ((meson-indent-basic . 8)))\n (sh-mode . ((sh-basic-offset . 4)\n             (sh-indentation . 4)))\n (awk-mode . ((c-basic-offset . 8)))\n (nil . ((indent-tabs-mode . nil)\n         (tab-width . 8)\n         (fill-column . 79))) )\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.8408203125,
          "content": "# EditorConfig configuration for systemd\n# http://EditorConfig.org\n\n# NOTE: If you update this file make sure to update .dir-locals.el and .vimrc,\n# too.\n\n# Top-most EditorConfig file\nroot = true\n\n# Unix-style newlines with a newline ending every file, utf-8 charset\n[*]\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true\ncharset = utf-8\n\n[NEWS]\nindent_style = space\nindent_size = 4\n\n# Match config files, set indent to spaces with width of eight\n[*.{c,h}]\nindent_style = space\nindent_size = 8\nmax_line_length = 109\n\n[*.sh,mkosi.build,mkosi.prepare,mkosi.postinst]\nindent_style = space\nindent_size = 4\n\n[meson.build]\nindent_style = space\nindent_size = 8\n\n[man/*.xml]\nindent_size = 2\nindent_style = space\nmax_line_length = 109\n\n[docs/**/*.css]\nindent_style = space\nindent_size = 2\n\n[docs/**/*.html]\nindent_style = space\nindent_size = 2\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.4541015625,
          "content": "*.[ch] whitespace=tab-in-indent,trailing-space\n*.gpg  binary generated\n*.bmp  binary\n*.base64 generated\n\n# Mark files as \"generated\", i.e. no license applies to them.\n# This includes output from programs, directive lists generated by grepping\n# for all possibilities, samples from fuzzers, files from /proc, packet samples,\n# and anything else where no copyright can be asserted.\n#\n# Use 'git check-attr generated -- <path>' to query the attribute.\n[attr]generated\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.451171875,
          "content": "*.cache\n*.plist\n*.py[co]\n*.swp\n*.trs\n*~\n.config.args\n.gdb_history\n.deps/\n.venv/\n.mypy_cache/\n__pycache__/\n/*.gcda\n/*.gcno\n/*.tar.bz2\n/*.tar.gz\n/*.tar.xz\n/GPATH\n/GRTAGS\n/GSYMS\n/GTAGS\n/TAGS\n/ID\n/build*\n/coverage/\n/image.raw\n/.#image.raw.lck\n/image.raw.cache-pre-dev\n/image.raw.cache-pre-inst\n/image.raw.manifest\n/install-tree\n/.mkosi-*\n/mkosi.builddir/\n/mkosi.output/\n/mkosi.installdir/\n/mkosi.key\n/mkosi.crt\nmkosi.local.conf\n/tags\n.dir-locals-2.el\n.vscode/\n/pkg/\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 10.8984375,
          "content": "Alan Jenkins <alan.christopher.jenkins@googlemail.com>\nAlan Jenkins <alan.christopher.jenkins@googlemail.com> <alan-jenkins@tuffmail.co.uk>\nAlan Robertson <aroberts@zen.iomart.com> <alanjrobertson@gmail.com>\nAlexander Kochetkov <al.kochet@gmail.com>\nAlexander Kuleshov <kuleshovmail@gmail.com> <0xAX@users.noreply.github.com>\nAlexander Kurtz <alexander@kurtz.be>\nAlexandros Frantzis <alexandros.frantzis@canonical.com>\nAnanth N Mavinakayanahalli <ananth@in.ibm.com>\nAnanth N Mavinakayanahalli <ananth@in.ibm.com> <ananthmg@rediffmail.com>\nAndreas Henriksson <andreas@fatal.se>\nAndrey Yashkin <38919268+AndreyYashkin@users.noreply.github.com>\nAnthony Parsons <flussence@users.noreply.github.com>\nAntoine Eiche <lewo@abesis.fr>\nArnd Bergmann <arnd@arndb.de>\nAtul Sabharwal <atul.sabharwal@intel.com>\nBart Rulon <barron@lexmark.com>\nBastien Nocera <hadess@hadess.net> <hadess@users.noreply.github.com>\nBaybal Ni <nikulinpi@gmail.com>\nBeniamino Galvani <bgalvani@redhat.com> <bengal@users.noreply.github.com>\nBill Yodlowsky <bill@redhat.com> <itsbill@users.noreply.github.com>\nBrian Boylston <brian.boylston@hpe.com>\nCharles (Chas) Williams <ciwillia@brocade.com>\nChen Qi <Qi.Chen@windriver.com> <40684930+ChenQi1989@users.noreply.github.com>\nChristophe Varoqui <christophe.varoqui@free.fr>\nColin Guthrie <ColinGuthrie@web>\nCristian Rodr√≠guez <cristian@rodriguez.im> <crodriguez@owncloud.com>\nDaniel Elstner  <daniel.kitta@gmail.com> <danielk@openismus.com>\nDaniel Gorbea <danielgorbea@hotmail.com>\nDaniel J Walsh <dwalsh@redhat.com>\nDaniel Kahn Gillmor <dkg@fifthhorseman.net>\nDaniel Machon <Danielmachon@live.dk>\nDaniel P. Berrang√© <berrange@redhat.com>\nDaniel Rusek <mail@asciiwolf.com>\nDaniel Stekloff <dsteklof@us.ibm.com>\nDaniel »òerbƒÉnescu <dasj19@users.noreply.github.com>\nDann Frazier <dann.frazier@canonical.com>\nDave Reisner <dreisner@archlinux.org> <d@falconindy.com>\nDavid Santamar√≠a Rogado <howl.nsp@gmail.com>\nDavid Zeuthen <david@fubar.dk>\nDavid Zeuthen <david@fubar.dk> <davidz@redhat.com>\nDavid Zeuthen <david@fubar.dk> <zeuthen@gmail.com>\nDavide Cavalca <dcavalca@fb.com> <davide125@tiscali.it>\nDennis Wassenberg <dennis.wassenberg@secunet.com>\nDiego Canuhe <dcanuhe@gmail.com> <46734128+dcanuhe@users.noreply.github.com>\nDiego Elio Petten√≤ <flameeyes@gmail.com>\nDmitriy Geels <dmitriy.geels@gmail.com>\nDmitry Khlebnikov <dmitry.khlebnikov@rea-group.com> <galaxy4public@users.noreply.github.com>\nDouglas Christman <DouglasChristman@gmail.com>\nEmil Soleyman <emil@soleyman.com>\nEric Cook <llua@users.noreply.github.com>\nEvgeny Vereshchagin <evvers@ya.ru>\nFabiano Fid√™ncio <fabianofidencio@gmail.com> Fabiano Fidencio <fidencio@profusion.mobi>\nFaizal Luthfi <zalluth@gmail.com>\nFederico Di Pierro <nierro92@gmail.com>\nFionn Cleary <clearyf@tcd.ie>\nFrantisek Sumsal <frantisek@sumsal.cz> <fsumsal@redhat.com>\nFrederic Crozat <fcrozat@suse.com> <fcrozat@mandriva.com>\nGautier Husson <admin_github@liberasys.com>\nGa√´l PORTAY <gael.portay@collabora.com> <gael.portay@rtone.fr>\nGeorge Gaydarov <git@gg7.io> <gg7@users.noreply.github.com>\nGianluca Boiano <morf3089@gmail.com>\nGreg Kroah-Hartman <greg@kroah.com>\nGreg Kroah-Hartman <greg@kroah.com> <greg@bucket.kroah.org>\nGreg Kroah-Hartman <greg@kroah.com> <greg@kroah.com>\nGreg Kroah-Hartman <greg@kroah.com> <greg@press.(none)>\nGreg Kroah-Hartman <greg@kroah.com> <gregkh@linuxfoundation.org>\nGreg Kroah-Hartman <greg@kroah.com> <gregkh@suse.de>\nGwendal Grignou <gwendal@chromium.org>\nHannes Reinecke <hare@suse.de>\nHarald Hoyer <harald@redhat.com>\nHarald Hoyer <harald@redhat.com> <harald@hoyer.xyz>\nHeikki Kemppainen <heikki.kemppainen@nokia.com>\nHendrik Brueckner <hbrueckner@users.noreply.github.com>\nHendrik Westerberg <hendrik@gestorf.com>\nIan Campbell <ijc@hellion.org.uk> <Ian.Campbell@citrix.com>\nInsun Pyo <insun.pyo@samsung.com>\nInsun Pyo <insun.pyo@samsung.com> <iplayinsun@gmail.com>\nJay Burger <jay.burger@fujitsu.com> <root@new-host-3.home>\nJerone Young <jyoung@redhat.com> <jerone.young@canonical.com>\nJiuyang Liu <liujiuyang1994@gmail.com>\nJi≈ô√≠ P√≠rko <jiri@mellanox.com>\nJohn Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de>\nJohn Paul Adrian Glaubitz <glaubitz@physik.fu-berlin.de> <glaubitz@suse.com>\nJon Ringle <jringle@gridpoint.com> <ringlej@users.noreply.github.com>\nJonas Dorel <jonas.dorel@laposte.net>\nJonathon Kowalski <bl0pbl33p@gmail.com>\nJosef Andersson <josef.andersson@fripost.org>\nJosef Andersson <l10nl18nsweja@gmail.com>\nJos√© Bollo <jose.bollo@iot.bzh> <jobol@nonadev.net>\nJun Bo Bi <jambonmcyeah@gmail.com>\nJustin Capella <justincapella@gmail.com> <b1tninja@users.noreply.github.com>\nJ√©r√©my Rosen <jeremy.rosen@enst-bretagne.fr>\nJ√ºrg Billeter <j@bitron.ch>\nKarl Kraus <karl.kraus@tum.de> <laqueray@gmail.com>\nKay Sievers <kay@vrfy.org>\nKay Sievers <kay@vrfy.org> <kay.sievers@suse.de>\nKay Sievers <kay@vrfy.org> <kay.sievers@vrfy.org>\nKay Sievers <kay@vrfy.org> <kay@pim.off.vrfy.org>\nKay Sievers <kay@vrfy.org> <kay@pim>\nKay Sievers <kay@vrfy.org> <kay@yik.fritz.box>\nKevin Becker <kevin@kevinbecker.org>\nKrzysztof Jackiewicz <k.jackiewicz@samsung.com> <kjackiewicz@users.noreply.github.com>\nLarry Bernstone <lbernstone@gmail.com>\nLennart Poettering <lennart@poettering.net> <LennartPoettering@web>\nLennart Poettering <lennart@poettering.net> <lennart@bf9bc1cc-28ce-0310-abfb-9041aa761afb>\nLennart Poettering <lennart@poettering.net> <mzninuv@0pointer.de>\nLeonard K√∂nig <leonard.r.koenig@googlemail.com>\nLuca BRUNO <luca.bruno@coreos.com>\nLuis Felipe Strano Moraes <luis.strano@gmail.com> <lfelipe@profusion.mobi>\nLuk√°≈° Nykr√Ωn <lnykryn@redhat.com>\nLuk√°≈° ≈ò√≠ha <cedel@centrum.cz>\nMao Huang <littlecvr@gmail.com>\nMarc-Andr√© Lureau <marcandre.lureau@gmail.com>\nMarco d'Itri <md@linux.it> <md@Linux.IT>\nMarcus Cooper <marcusc@axis.com> <codekipper@gmail.com>\nMario Limonciello <mario_limonciello@dell.com> <Mario_Limonciello@dell.com>\nMartin Pitt <martin@piware.de> <martinpitt@users.noreply.github.com>\nMartin Pitt <martinpitt@gnome.org>\nMartin Pitt <martinpitt@gnome.org> <martin.pitt@ubuntu.com>\nMartin Steuer <martinsteuer@gmx.de>\nMarty Plummer <ntzrmtthihu777@gmail.com>\nMatthew Leeds <matthew.leeds@endlessm.com> <mwl458@gmail.com>\nMatthew McGinn <mamcgi@gmail.com> <xginn8@users.noreply.github.com>\nMatthias Clasen <mclasen@redhat.com> <matthias.clasen@gmail.com>\nMatthias-Christian Ott <ott@mirix.org> <ott@users.noreply.github.com>\nMichael Biebl <biebl@debian.org> <mbiebl@gmail.com>\nMichael Buesch <mbuesch@freenet.de>\nMichael Hoy <rimmington@gmail.com>\nMichael Olbrich <m.olbrich@pengutronix.de>\nMichael Trapp <michael.trapp@sap.com>\nMichal SekletaÃÅr <msekleta@redhat.com>\nMichal SekletaÃÅr <msekleta@redhat.com> <msekletar@users.noreply.github.com>\nMichal Soltys <soltys@ziu.info> <nozo@ziu.info>\nMichal Suchanek <msuchanek@suse.de> <hramrach@gmail.com>\nMicha≈Ç Szczepa≈Ñski <skrzatu@hotmail.com> <skrzatu@gmail.com>\nMichel Kraus <github@demonsphere.de> <27o@users.noreply.github.com>\nMichele Guerini Rocco <rnhmjoj@inventati.org>\nMike Auty <mike.auty@gmail.com>\nMiklos Vajna <vmiklos@frugalware.org> <vmiklos@gmail.com>\nMilan P√§ssler <me@petabyteboy.de>\nNeal Gompa („Éã„Éº„É´„Éª„Ç¥„É≥„Éë) <ngompa13@gmail.com>\nNiklas Tibbling <niklasti@axis.com> <45659916+tibbling@users.noreply.github.com>\nNikolas Nyby <nnyby@columbia.edu>\nNogisaka Sadata <ngsksdt@gmail.com>\nOlaf Hering <olh@suse.de>\nOmojola Joshua <omojolajoshua@gmail.com>\nOmojola Joshua <omojolajoshua@gmail.com> <109356020+1awesomeJ@users.noreply.github.com>\nOtto Wallenius <otto_026@hotmail.com>\nPablo Lezaeta Reyes <prflr88@gmail.com>\nPaolo Giangrandi <paolo@luccalug.it>\nPatrick Mansfield <patmans@us.ibm.com>\nPatryk Kocielnik <longer44@gmail.com>\nPaul Mundt <lethal@linux-sh.org>\nPavel Hrdina <phrdina@redhat.com>\nPerry Yuan <perry_yuan@dell.com>\nPeter D'Hoye <peter.dhoye@gmail.com>\nPiotr Szyde≈Çko <wiertel@users.sourceforge.net>\nPiter PUNK <piterpunk@slackware.com> <piterpk@terra.com.br>\nReid Price <reid.price@gmail.com>\nReinhold Mueller <mueller.reinhold@web.de>\nRichard Hughes <richard@hughsie.com> <hughsient@gmail.com>\nRichard W.M. Jones <rjones@redhat.com>\nRobby Workman <rw@rlworkman.net> <rworkman@slackware.com>\nRobert Gerus <ar@bash.org.pl> Robert \"arachnist\" Gerus <ar@bash.org.pl>\nRobert Kolchmeyer <rkolchmeyer@google.com> <rkolchmeyer@users.noreply.github.com>\nRobert Love <rml@tech9.net>\nRoger James <roger@beardandsandals.co.uk>\nRoman Stingler <coolx67@gmx.at>\nRonald Tschal√§r <ronald@innovation.ch>\nRub√©n Su√°rez Alvarez <rubensa@tluportatil082> <rubensa@gmail.com>\nSalvo Tomaselli <ltworf@users.noreply.github.com>\nSandy Carter <bwrsandman@gmail.com>\nScott James Remnant <scott@netsplit.com>\nScott James Remnant <scott@netsplit.com>  <scott@ubuntu.com>\nSeraphime Kirkovski <kirkseraph@gmail.com>\nShawn Landden <shawnlandden@gmail.com> <shawn@churchofgit.com>\nShawn Landden <slandden@gmail.com>\nShawn Landden <slandden@gmail.com> <shawn@git.icu>\nSilvio Knizek <killermoehre@gmx.net>\nSimon Peeters <peeters.simon@gmail.com>\nSjoerd Simons <sjoerd.simons@collabora.co.uk>\nStanislav Angeloviƒç <angelovic.s@gmail.com>\nStasiek Michalski <hellcp@opensuse.org>\nStefan Pietsch <mail.ipv4v6@gmail.com>\nStefan Schweter <stefan@schweter.it>\nStephan Edel <se@se-it.eu>\nStuart McLaren <stuart.mclaren@hp.com>\nSusant Sahani <ssahani@gmail.com> <145210+ssahani@users.noreply.github.com>\nSusant Sahani <ssahani@gmail.com> <susant@redhat.com>\nSylvain Plantefeve <sylvain.plantefeve@gmail.com>\nS√©bastien Bacher <seb128@ubuntu.com>\nTanu Kaskinen <TanuKaskinen@web>\nTed Ts'o <tytso@mit.edu>\nTed Wood <ted.l.wood@gmail.com>\nTed Wood <ted@mailchimp.com>\nThomas Blume <Thomas.Blume@suse.com>\nThomas H. P. Andersen <phomes@gmail.com>\nTiago Levit <liamgliam@gmail.com>\nTibor Nagy <xnagytibor@gmail.com>\nTinu Weber <takeya@bluewin.ch>\nTobias Jungel <tobias.jungel@bisdn.de> <Tobias.Jungel@gmail.com>\nTobias Klauser <tklauser@distanz.ch>\nTobias Klauser <tklauser@distanz.ch> <klauser@access.unizh.ch>\nTobias Klauser <tklauser@distanz.ch> <tklauser@access.unizh.chbk>\nTobias Klauser <tklauser@distanz.ch> <tklauser@distanz.ch>\nTobias Klauser <tklauser@distanz.ch> <tklauser@nuerscht.ch>\nTom Rini <trini@kernel.crashing.org>\nTom Yan <tom.ty89@gmail.com>\nTomasz Bachorski <tomasz.bachorski@x7f.io> <34866781+nulsoh@users.noreply.github.com>\nTomasz Pala <gotar@polanet.pl>\nTorsten Hilbrich <torsten.hilbrich@gmx.net>\nUmut Tezduyar Lindskog <umut@tezduyar.com>\nVasilis Liaskovitis <vliaskov@gmail.com>\nViktar Va≈≠ƒçkieviƒç <victorenator@gmail.com>\nVladislav Vishnyakov <split7fire@yandex.ru>\nWeblate <noreply@weblate.org>\nWilliam Jon McCann <jmccann@redhat.com> <william.jon.mccann@gmail.com>\nWim van Mourik <wvanmourik@computest.nl> <githubw@use.startmail.com>\nYann E. Morin <yann.morin.1998@free.fr>\nYao Wei (È≠èÈäòÂª∑) <yao.wei@canonical.com>\nYi Gao <ymuemc@163.com>\nYin Kangkai <kangkai.yin@intel.com> <kangkai.yin@linux.intel.com>\nZachary Winnerman <33329648+winnerman-pythian@users.noreply.github.com>\nZbigniew Jƒôdrzejewski-Szmek <zbyszek@in.waw.pl>\nZbigniew Jƒôdrzejewski-Szmek <zbyszek@in.waw.pl> <you@example.com>\nmsizanoen <msizanoen@qtmlabs.xyz>\n≈Åukasz Stelmach <l.stelmach@samsung.com> <stlman@poczta.fm>\n–î–∞–º—ò–∞–Ω –ì–µ–æ—Ä–≥–∏–µ–≤—Å–∫–∏ <gdamjan@gmail.com>\n"
        },
        {
          "name": ".obs",
          "type": "tree",
          "content": null
        },
        {
          "name": ".packit.yml",
          "type": "blob",
          "size": 1.5419921875,
          "content": "---\n# SPDX-License-Identifier: LGPL-2.1-or-later\n# Docs: https://packit.dev/docs/\n\nspecfile_path: .packit_rpm/systemd.spec\nfiles_to_sync:\n  - .packit.yml\n  - src: .packit_rpm/systemd.spec\n    dest: systemd.spec\n# `git describe` returns in systemd's case 'v245-xxx' which breaks RPM version\n# detection (that expects 245-xxxx'). Let's tweak the version string accordingly\nupstream_tag_template: \"v{version}\"\nsrpm_build_deps: []\n\nactions:\n  get-current-version:\n    # Show the closest matching tag for the checked out revision, otherwise\n    # Packit tries to get the latest tag by creation date, which doesn't work\n    # well in the systemd-stable repo. We also need to sanitize it manually\n    # since \"upstream_tag_template\" defined above doesn't apply here.\n    - \"bash -ec 'git describe --tags --abbrev=0 | cut -b 2-'\"\n\n  post-upstream-clone:\n    # Use the Fedora Rawhide specfile\n    - git clone https://src.fedoraproject.org/rpms/systemd .packit_rpm --depth=1\n    - bash -c 'echo \"%bcond upstream 1\" > .packit_rpm/systemd.spec.new'\n    - bash -c 'echo \"%define meson_extra_configure_options --werror\" >> .packit_rpm/systemd.spec.new'\n    - bash -c 'cat .packit_rpm/systemd.spec >> .packit_rpm/systemd.spec.new'\n    - mv .packit_rpm/systemd.spec.new .packit_rpm/systemd.spec\n\njobs:\n- job: copr_build\n  trigger: pull_request\n  targets:\n  - fedora-rawhide-aarch64\n  - fedora-rawhide-i386\n  - fedora-rawhide-ppc64le\n  - fedora-rawhide-s390x\n  - fedora-rawhide-x86_64\n\n- job: tests\n  trigger: pull_request\n  fmf_path: test/fmf\n  tmt_plan: ci\n  targets:\n  - fedora-rawhide-x86_64\n"
        },
        {
          "name": ".pylintrc",
          "type": "blob",
          "size": 0.6103515625,
          "content": "[MAIN]\nextension-pkg-allow-list=lxml\n\n[MESSAGES CONTROL]\ndisable=fixme,\n        invalid-name,\n        line-too-long,\n        missing-class-docstring,\n        missing-docstring,\n        missing-function-docstring,\n        missing-module-docstring,\n        too-few-public-methods,\n        too-many-arguments,\n        too-many-boolean-expressions,\n        too-many-branches,\n        too-many-instance-attributes,\n        too-many-instance-attributes,\n        too-many-lines,\n        too-many-locals,\n        too-many-public-methods,\n        too-many-return-statements,\n        too-many-statements,\n        unspecified-encoding,\n"
        },
        {
          "name": ".semaphore",
          "type": "tree",
          "content": null
        },
        {
          "name": ".vimrc",
          "type": "blob",
          "size": 0.8056640625,
          "content": "\" 'set exrc' in ~/.vimrc will read .vimrc from the current directory\n\" Warning: Enabling exrc is dangerous! You can do nearly everything from a\n\" vimrc configuration file, including write operations and shell execution.\n\" You should consider setting 'set secure' as well, which is highly\n\" recommended!\n\n\" Note that we set a line width of 109 for .c and XML files, but for everything\n\" else (such as journal catalog files, unit files, README files) we stick to a\n\" more conservative 79 characters.\n\n\" NOTE: If you update this file make sure to update .dir-locals.el and\n\" .editorconfig, too.\n\nset tabstop=8\nset shiftwidth=8\nset expandtab\nset makeprg=GCC_COLORS=\\ make\nset tw=79\nau BufRead,BufNewFile *.xml set tw=109 shiftwidth=2 smarttab\nau FileType sh set tw=109 shiftwidth=4 smarttab\nau FileType c set tw=109 shiftwidth=8\n"
        },
        {
          "name": ".ycm_extra_conf.py",
          "type": "blob",
          "size": 8.212890625,
          "content": "#!/usr/bin/env python\n\n# SPDX-License-Identifier: Unlicense\n#\n# Based on the template file provided by the 'YCM-Generator' project authored by\n# Reuben D'Netto.\n# Jiahui Xie has re-reformatted and expanded the original script in accordance\n# to the requirements of the PEP 8 style guide and 'systemd' project,\n# respectively.\n#\n# The original license is preserved as it is.\n#\n#\n# This is free and unencumbered software released into the public domain.\n#\n# Anyone is free to copy, modify, publish, use, compile, sell, or\n# distribute this software, either in source code form or as a compiled\n# binary, for any purpose, commercial or non-commercial, and by any\n# means.\n#\n# In jurisdictions that recognize copyright laws, the author or authors\n# of this software dedicate any and all copyright interest in the\n# software to the public domain. We make this dedication for the benefit\n# of the public at large and to the detriment of our heirs and\n# successors. We intend this dedication to be an overt act of\n# relinquishment in perpetuity of all present and future rights to this\n# software under copyright law.\n#\n# THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n# IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR\n# OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,\n# ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n# OTHER DEALINGS IN THE SOFTWARE.\n#\n# For more information, please refer to <http://unlicense.org/>\n\n\"\"\"\nYouCompleteMe configuration file tailored to support the 'meson' build system\nused by the 'systemd' project.\n\"\"\"\n\nimport glob\nimport os\nimport ycm_core\n\n\nSOURCE_EXTENSIONS = (\".C\", \".cpp\", \".cxx\", \".cc\", \".c\", \".m\", \".mm\")\nHEADER_EXTENSIONS = (\".H\", \".h\", \".hxx\", \".hpp\", \".hh\")\n\n\ndef DirectoryOfThisScript():\n    \"\"\"\n    Return the absolute path of the parent directory containing this\n    script.\n    \"\"\"\n    return os.path.dirname(os.path.abspath(__file__))\n\n\ndef GuessBuildDirectory():\n    \"\"\"\n    Guess the build directory using the following heuristics:\n\n    1. Returns the current directory of this script plus 'build'\n    subdirectory in absolute path if this subdirectory exists.\n\n    2. Otherwise, probes whether there exists any directory\n    containing '.ninja_log' file two levels above the current directory;\n    returns this single directory only if there is one candidate.\n    \"\"\"\n    result = os.path.join(DirectoryOfThisScript(), \"build\")\n\n    if os.path.exists(result):\n        return result\n\n    result = glob.glob(os.path.join(DirectoryOfThisScript(),\n                                    \"..\", \"..\", \"*\", \".ninja_log\"))\n\n    if not result:\n        return \"\"\n\n    if 1 != len(result):\n        return \"\"\n\n    return os.path.split(result[0])[0]\n\n\ndef TraverseByDepth(root, include_extensions):\n    \"\"\"\n    Return a set of child directories of the 'root' containing file\n    extensions specified in 'include_extensions'.\n\n    NOTE:\n        1. The 'root' directory itself is excluded from the result set.\n        2. No subdirectories would be excluded if 'include_extensions' is left\n           to 'None'.\n        3. Each entry in 'include_extensions' must begin with string '.'.\n    \"\"\"\n    is_root = True\n    result = set()\n    # Perform a depth first top down traverse of the given directory tree.\n    for root_dir, subdirs, file_list in os.walk(root):\n        if not is_root:\n            # print(\"Relative Root: \", root_dir)\n            # print(subdirs)\n            if include_extensions:\n                get_ext = os.path.splitext\n                subdir_extensions = {\n                    get_ext(f)[-1] for f in file_list if get_ext(f)[-1]\n                }\n                if subdir_extensions & include_extensions:\n                    result.add(root_dir)\n            else:\n                result.add(root_dir)\n        else:\n            is_root = False\n\n    return result\n\n\n_project_src_dir = os.path.join(DirectoryOfThisScript(), \"src\")\n_include_dirs_set = TraverseByDepth(_project_src_dir, frozenset({\".h\"}))\nflags = [\n    \"-x\",\n    \"c\"\n    # The following flags are partially redundant due to the existence of\n    # 'compile_commands.json'.\n    #    '-Wall',\n    #    '-Wextra',\n    #    '-Wfloat-equal',\n    #    '-Wpointer-arith',\n    #    '-Wshadow',\n    #    '-std=gnu99',\n]\n\nfor include_dir in _include_dirs_set:\n    flags.append(\"-I\" + include_dir)\n\n# Set this to the absolute path to the folder (NOT the file!) containing the\n# compile_commands.json file to use that instead of 'flags'. See here for\n# more details: http://clang.llvm.org/docs/JSONCompilationDatabase.html\n#\n# You can get CMake to generate this file for you by adding:\n#   set( CMAKE_EXPORT_COMPILE_COMMANDS 1 )\n# to your CMakeLists.txt file.\n#\n# Most projects will NOT need to set this to anything; you can just change the\n# 'flags' list of compilation flags. Notice that YCM itself uses that approach.\ncompilation_database_folder = GuessBuildDirectory()\n\nif os.path.exists(compilation_database_folder):\n    database = ycm_core.CompilationDatabase(compilation_database_folder)\nelse:\n    database = None\n\n\ndef MakeRelativePathsInFlagsAbsolute(flags, working_directory):\n    \"\"\"\n    Iterate through 'flags' and replace the relative paths prefixed by\n    '-isystem', '-I', '-iquote', '--sysroot=' with absolute paths\n    start with 'working_directory'.\n    \"\"\"\n    if not working_directory:\n        return list(flags)\n    new_flags = []\n    make_next_absolute = False\n    path_flags = [\"-isystem\", \"-I\", \"-iquote\", \"--sysroot=\"]\n    for flag in flags:\n        new_flag = flag\n\n        if make_next_absolute:\n            make_next_absolute = False\n            if not flag.startswith(\"/\"):\n                new_flag = os.path.join(working_directory, flag)\n\n        for path_flag in path_flags:\n            if flag == path_flag:\n                make_next_absolute = True\n                break\n\n            if flag.startswith(path_flag):\n                path = flag[len(path_flag):]\n                new_flag = path_flag + os.path.join(working_directory, path)\n                break\n\n        if new_flag:\n            new_flags.append(new_flag)\n    return new_flags\n\n\ndef IsHeaderFile(filename):\n    \"\"\"\n    Check whether 'filename' is considered as a header file.\n    \"\"\"\n    extension = os.path.splitext(filename)[1]\n    return extension in HEADER_EXTENSIONS\n\n\ndef GetCompilationInfoForFile(filename):\n    \"\"\"\n    Helper function to look up compilation info of 'filename' in the 'database'.\n    \"\"\"\n    # The compilation_commands.json file generated by CMake does not have\n    # entries for header files. So we do our best by asking the db for flags for\n    # a corresponding source file, if any. If one exists, the flags for that\n    # file should be good enough.\n    if not database:\n        return None\n\n    if IsHeaderFile(filename):\n        basename = os.path.splitext(filename)[0]\n        for extension in SOURCE_EXTENSIONS:\n            replacement_file = basename + extension\n            if os.path.exists(replacement_file):\n                compilation_info = \\\n                    database.GetCompilationInfoForFile(replacement_file)\n                if compilation_info.compiler_flags_:\n                    return compilation_info\n        return None\n    return database.GetCompilationInfoForFile(filename)\n\n\ndef FlagsForFile(filename, **kwargs):\n    \"\"\"\n    Callback function to be invoked by YouCompleteMe in order to get the\n    information necessary to compile 'filename'.\n\n    It returns a dictionary with a single element 'flags'. This element is a\n    list of compiler flags to pass to libclang for the file 'filename'.\n    \"\"\"\n    if database:\n        # Bear in mind that compilation_info.compiler_flags_ does NOT return a\n        # python list, but a \"list-like\" StringVec object\n        compilation_info = GetCompilationInfoForFile(filename)\n        if not compilation_info:\n            return None\n\n        final_flags = MakeRelativePathsInFlagsAbsolute(\n            compilation_info.compiler_flags_,\n            compilation_info.compiler_working_dir_)\n\n    else:\n        relative_to = DirectoryOfThisScript()\n        final_flags = MakeRelativePathsInFlagsAbsolute(flags, relative_to)\n\n    return {\n        \"flags\": final_flags,\n        \"do_cache\": True\n    }\n"
        },
        {
          "name": "LICENSE.GPL2",
          "type": "blob",
          "size": 17.5654296875,
          "content": "\t\t    GNU GENERAL PUBLIC LICENSE\n\t\t       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n\t\t    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n\n\t    How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "LICENSE.LGPL2.1",
          "type": "blob",
          "size": 25.908203125,
          "content": "                  GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 2.1, February 1999\n\n Copyright (C) 1991, 1999 Free Software Foundation, Inc.\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n[This is the first released version of the Lesser GPL.  It also counts\n as the successor of the GNU Library Public License, version 2, hence\n the version number 2.1.]\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicenses are intended to guarantee your freedom to share and change\nfree software--to make sure the software is free for all its users.\n\n  This license, the Lesser General Public License, applies to some\nspecially designated software packages--typically libraries--of the\nFree Software Foundation and other authors who decide to use it.  You\ncan use it too, but we suggest you first think carefully about whether\nthis license or the ordinary General Public License is the better\nstrategy to use in any particular case, based on the explanations below.\n\n  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n\n  To protect your rights, we need to make restrictions that forbid\ndistributors to deny you these rights or to ask you to surrender these\nrights.  These restrictions translate to certain responsibilities for\nyou if you distribute copies of the library or if you modify it.\n\n  For example, if you distribute copies of the library, whether gratis\nor for a fee, you must give the recipients all the rights that we gave\nyou.  You must make sure that they, too, receive or can get the source\ncode.  If you link other code with the library, you must provide\ncomplete object files to the recipients, so that they can relink them\nwith the library after making changes to the library and recompiling\nit.  And you must show them these terms so they know their rights.\n\n  We protect your rights with a two-step method: (1) we copyright the\nlibrary, and (2) we offer you this license, which gives you legal\npermission to copy, distribute and/or modify the library.\n\n  To protect each distributor, we want to make it very clear that\nthere is no warranty for the free library.  Also, if the library is\nmodified by someone else and passed on, the recipients should know\nthat what they have is not the original version, so that the original\nauthor's reputation will not be affected by problems that might be\nintroduced by others.\n\f\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\nconsistent with the full freedom of use specified in this license.\n\n  Most GNU software, including some libraries, is covered by the\nordinary GNU General Public License.  This license, the GNU Lesser\nGeneral Public License, applies to certain designated libraries, and\nis quite different from the ordinary General Public License.  We use\nthis license for certain libraries in order to permit linking those\nlibraries into non-free programs.\n\n  When a program is linked with a library, whether statically or using\na shared library, the combination of the two is legally speaking a\ncombined work, a derivative of the original library.  The ordinary\nGeneral Public License therefore permits such linking only if the\nentire combination fits its criteria of freedom.  The Lesser General\nPublic License permits more lax criteria for linking other code with\nthe library.\n\n  We call this license the \"Lesser\" General Public License because it\ndoes Less to protect the user's freedom than the ordinary General\nPublic License.  It also provides other free software developers Less\nof an advantage over competing non-free programs.  These disadvantages\nare the reason we use the ordinary General Public License for many\nlibraries.  However, the Lesser license provides advantages in certain\nspecial circumstances.\n\n  For example, on rare occasions, there may be a special need to\nencourage the widest possible use of a certain library, so that it becomes\na de-facto standard.  To achieve this, non-free programs must be\nallowed to use the library.  A more frequent case is that a free\nlibrary does the same job as widely used non-free libraries.  In this\ncase, there is little to gain by limiting the free library to free\nsoftware only, so we use the Lesser General Public License.\n\n  In other cases, permission to use a particular library in non-free\nprograms enables a greater number of people to use a large body of\nfree software.  For example, permission to use the GNU C Library in\nnon-free programs enables many more people to use the whole GNU\noperating system, as well as its variant, the GNU/Linux operating\nsystem.\n\n  Although the Lesser General Public License is Less protective of the\nusers' freedom, it does ensure that the user of a program that is\nlinked with the Library has the freedom and the wherewithal to run\nthat program using a modified version of the Library.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.  Pay close attention to the difference between a\n\"work based on the library\" and a \"work that uses the library\".  The\nformer contains code derived from the library, whereas the latter must\nbe combined with the library in order to run.\n\f\n                  GNU LESSER GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License Agreement applies to any software library or other\nprogram which contains a notice placed by the copyright holder or\nother authorized party saying it may be distributed under the terms of\nthis Lesser General Public License (also called \"this License\").\nEach licensee is addressed as \"you\".\n\n  A \"library\" means a collection of software functions and/or data\nprepared so as to be conveniently linked with application programs\n(which use some of those functions and data) to form executables.\n\n  The \"Library\", below, refers to any such software library or work\nwhich has been distributed under these terms.  A \"work based on the\nLibrary\" means either the Library or any derivative work under\ncopyright law: that is to say, a work containing the Library or a\nportion of it, either verbatim or with modifications and/or translated\nstraightforwardly into another language.  (Hereinafter, translation is\nincluded without limitation in the term \"modification\".)\n\n  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning a program using the Library is not restricted, and output from\nsuch a program is covered only if its contents constitute a work based\non the Library (independent of the use of the Library in a tool for\nwriting it).  Whether that is true depends on what the Library does\nand what the program that uses the Library does.\n\n  1. You may copy and distribute verbatim copies of the Library's\ncomplete source code as you receive it, in any medium, provided that\nyou conspicuously and appropriately publish on each copy an\nappropriate copyright notice and disclaimer of warranty; keep intact\nall the notices that refer to this License and to the absence of any\nwarranty; and distribute a copy of this License along with the\nLibrary.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\nof it, thus forming a work based on the Library, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) The modified work must itself be a software library.\n\n    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n    table of data to be supplied by an application program that uses\n    the facility, other than as an argument passed when the facility\n    is invoked, then you must make a good faith effort to ensure that,\n    in the event an application does not supply such function or\n    table, the facility still operates, and performs whatever part of\n    its purpose remains meaningful.\n\n    (For example, a function in a library to compute square roots has\n    a purpose that is entirely well-defined independent of the\n    application.  Therefore, Subsection 2d requires that any\n    application-supplied function or table used by this function must\n    be optional: if the application does not supply it, the square\n    root function must still compute square roots.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Library,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Library, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\nwith the Library (or with a work based on the Library) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may opt to apply the terms of the ordinary GNU General Public\nLicense instead of this License to a given copy of the Library.  To do\nthis, you must alter all the notices that refer to this License, so\nthat they refer to the ordinary GNU General Public License, version 2,\ninstead of to this License.  (If a newer version than version 2 of the\nordinary GNU General Public License has appeared, then you can specify\nthat version instead if you wish.)  Do not make any other change in\nthese notices.\n\f\n  Once this change is made in a given copy, it is irreversible for\nthat copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\nderivative of it, under Section 2) in object code or executable form\nunder the terms of Sections 1 and 2 above provided that you accompany\nit with the complete corresponding machine-readable source code, which\nmust be distributed under the terms of Sections 1 and 2 above on a\nmedium customarily used for software interchange.\n\n  If distribution of object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the\nsource code from the same place satisfies the requirement to\ndistribute the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  5. A program that contains no derivative of any portion of the\nLibrary, but is designed to work with the Library by being compiled or\nlinked with it, is called a \"work that uses the Library\".  Such a\nwork, in isolation, is not a derivative work of the Library, and\ntherefore falls outside the scope of this License.\n\n  However, linking a \"work that uses the Library\" with the Library\ncreates an executable that is a derivative of the Library (because it\ncontains portions of the Library), rather than a \"work that uses the\nlibrary\".  The executable is therefore covered by this License.\nSection 6 states terms for distribution of such executables.\n\n  When a \"work that uses the Library\" uses material from a header file\nthat is part of the Library, the object code for the work may be a\nderivative work of the Library even though the source code is not.\nWhether this is true is especially significant if the work can be\nlinked without the Library, or if the work is itself a library.  The\nthreshold for this to be true is not precisely defined by law.\n\n  If such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small inline\nfunctions (ten lines or less in length), then the use of the object\nfile is unrestricted, regardless of whether it is legally a derivative\nwork.  (Executables containing this object code plus portions of the\nLibrary will still fall under Section 6.)\n\n  Otherwise, if the work is a derivative of the Library, you may\ndistribute the object code for the work under the terms of Section 6.\nAny executables containing that work also fall under Section 6,\nwhether or not they are linked directly with the Library itself.\n\f\n  6. As an exception to the Sections above, you may also combine or\nlink a \"work that uses the Library\" with the Library to produce a\nwork containing portions of the Library, and distribute that work\nunder terms of your choice, provided that the terms permit\nmodification of the work for the customer's own use and reverse\nengineering for debugging such modifications.\n\n  You must give prominent notice with each copy of the work that the\nLibrary is used in it and that the Library and its use are covered by\nthis License.  You must supply a copy of this License.  If the work\nduring execution displays copyright notices, you must include the\ncopyright notice for the Library among them, as well as a reference\ndirecting the user to the copy of this License.  Also, you must do one\nof these things:\n\n    a) Accompany the work with the complete corresponding\n    machine-readable source code for the Library including whatever\n    changes were used in the work (which must be distributed under\n    Sections 1 and 2 above); and, if the work is an executable linked\n    with the Library, with the complete machine-readable \"work that\n    uses the Library\", as object code and/or source code, so that the\n    user can modify the Library and then relink to produce a modified\n    executable containing the modified Library.  (It is understood\n    that the user who changes the contents of definitions files in the\n    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n    d) If distribution of the work is made by offering access to copy\n    from a designated place, offer equivalent access to copy the above\n    specified materials from the same place.\n\n    e) Verify that the user has already received a copy of these\n    materials or that you have already sent this user a copy.\n\n  For an executable, the required form of the \"work that uses the\nLibrary\" must include any data and utility programs needed for\nreproducing the executable from it.  However, as a special exception,\nthe materials to be distributed need not include anything that is\nnormally distributed (in either source or binary form) with the major\ncomponents (compiler, kernel, and so on) of the operating system on\nwhich the executable runs, unless that component itself accompanies\nthe executable.\n\n  It may happen that this requirement contradicts the license\nrestrictions of other proprietary libraries that do not normally\naccompany the operating system.  Such a contradiction means you cannot\nuse both them and the Library together in an executable that you\ndistribute.\n\f\n  7. You may place library facilities that are a work based on the\nLibrary side-by-side in a single library together with other library\nfacilities not covered by this License, and distribute such a combined\nlibrary, provided that the separate distribution of the work based on\nthe Library and of the other library facilities is otherwise\npermitted, and provided that you do these two things:\n\n    a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities.  This must be distributed under the terms of the\n    Sections above.\n\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\nattempt otherwise to copy, modify, sublicense, link with, or\ndistribute the Library is void, and will automatically terminate your\nrights under this License.  However, parties who have received copies,\nor rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n\n  9. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Library or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Library (or any work based on the\nLibrary), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties with\nthis License.\n\f\n  11. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Library.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply,\nand the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  12. If the distribution and/or use of the Library is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Library under this License may add\nan explicit geographical distribution limitation excluding those countries,\nso that distribution is permitted only in or among countries not thus\nexcluded.  In such case, this License incorporates the limitation as if\nwritten in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Library\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation.  If the Library does not specify a\nlicense version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\nSoftware Foundation; we sometimes make exceptions for this.  Our\ndecision will be guided by the two goals of preserving the free status\nof all derivatives of our free software and of promoting the sharing\nand reuse of software generally.\n\n                            NO WARRANTY\n\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\f\n           How to Apply These Terms to Your New Libraries\n\n  If you develop a new library, and you want it to be of the greatest\npossible use to the public, we recommend making it free software that\neveryone can redistribute and change.  You can do so by permitting\nredistribution under these terms (or, alternatively, under the terms of the\nordinary General Public License).\n\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2.1 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public\n    License along with this library; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\nAlso add information on how to contact you by electronic and paper mail.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the library, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the\n  library `Frob' (a library for tweaking knobs) written by James Random Hacker.\n\n  <signature of Ty Coon>, 1 April 1990\n  Ty Coon, President of Vice\n\nThat's all there is to it!\n"
        },
        {
          "name": "LICENSES",
          "type": "tree",
          "content": null
        },
        {
          "name": "NEWS",
          "type": "blob",
          "size": 1006.1416015625,
          "content": "systemd System and Service Manager\n\nCHANGES WITH 258 in spe:\n\n        Incompatible changes:\n\n        * The default access mode of tty/pts device nodes has been changed to\n          0600, which was 0620 in the older releases, due to general security\n          concerns about terminals being written to by other users. To restore\n          the old default access mode, use '-Dtty-mode=0620' meson build option.\n\n        * systemd-run's --expand-environment= switch, which was disabled\n          by default when combined with --scope, has been changed to to be\n          enabled by default. This brings cmdline expansion of transient\n          scopes on par with services.\n\n        Announcements of Future Feature Removals:\n\n        * The D-Bus method org.freedesktop.systemd1.StartAuxiliaryScope() is\n          deprecated because accounting data and such cannot be reasonably\n          migrated between cgroups. It is likely to be fully removed in a\n          future release (reach out if you have use cases).\n\n        * The recommended kernel baseline version has been bumped to v5.4\n          (released in 2019). Expect limited testing on older kernel versions,\n          where \"old-kernel\" taint flag would also be set. Support for them\n          will be phased out in a future release in 2025, i.e. we expect to bump\n          the minimum baseline to v5.4 then too.\n\n        * The complete removal of support for cgroup v1 ('legacy' and 'hybrid'\n          hierarchies) is scheduled for v258.\n\n        * Support for System V service scripts is deprecated and will be\n          removed in v258. Please make sure to update your software\n          *now* to include a native systemd unit file instead of a legacy\n          System V script to retain compatibility with future systemd releases.\n\n        * To work around limitations of X11's keyboard handling systemd's\n          keyboard mapping hardware database (hwdb.d/60-keyboard.hwdb) so far\n          mapped the microphone mute and touchpad on/off/toggle keys to the\n          function keys F20, F21, F22, F23 instead of their correct key codes.\n          This key code mangling will be removed in the next systemd release.\n          To maintain compatibility with X11 applications that rely on the old\n          function key code mappings, this mangling has now been moved to the\n          relevant X11 keyboard driver modules. In order to ensure these keys\n          continue to work, update to xf86-input-evdev >= 2.11.0 and\n          xf86-input-libinput >= 1.5.0 before updating to systemd >= 258.\n\n        * Support for the SystemdOptions EFI variable is deprecated.\n          'bootctl systemd-efi-options' will emit a warning when used. It seems\n          that this feature is little-used and it is better to use alternative\n          approaches like credentials and confexts. The plan is to drop support\n          altogether at a later point, but this might be revisited based on\n          user feedback.\n\n        ‚Äî <place>, <date>\n\nCHANGES WITH 257:\n\n        Incompatible changes:\n\n        * The --purge switch of systemd-tmpfiles (which was added in v256) has\n          been reworked: it will now only apply to tmpfiles.d/ lines marked\n          with the new \"$\" flag. This is an incompatible change, and means any\n          tmpfiles.d/ files which shall be used together with --purge need to\n          be updated accordingly. This change has been made to make it harder\n          to accidentally delete too many files when using --purge incorrectly.\n\n        * The systemd-creds 'cat' verb now expects base64-encoded encrypted\n          credentials as input, for consistency with the 'decrypt' verb and the\n          LoadCredentialEncrypted= service setting. Previously it could only\n          read raw, unencoded binary data.\n\n        * Support for automatic flushing of the nscd user/group database caches\n          has been dropped.\n\n        * The FileDescriptorName= setting for socket units is now honored by\n          Accept=yes sockets too, where it was previously silently ignored and\n          \"connection\" was used unconditionally.\n\n        * systemd-logind now always obeys block inhibitor locks, where previously\n          it ignored locks taken by the caller or when the caller was root. A\n          privileged caller can always close the other sessions, remove the\n          inhibitor locks, or use --force or --check-inhibitors=no to ignore the\n          inhibitors. This change thus doesn't affect security, since everything\n          that was possible before at a given privilege level is still possible,\n          but it should make the inhibitor logic easier to use and understand,\n          and also help avoiding accidental reboots and shutdowns. New 'block-weak'\n          inhibitor modes were added, if taken they will make the inhibitor lock\n          work as in the previous versions. Inhibitor locks can also be taken by\n          remote users (subject to polkit policy).\n\n        * systemd-nspawn will now mount the unified cgroup hierarchy into a\n          container if no systemd installation is found in a container's root\n          filesystem. $SYSTEMD_NSPAWN_UNIFIED_HIERARCHY=0 can be used to override\n          this behavior.\n\n        * /dev/disk/by-id/nvme-* block device symlinks without an NVMe\n          namespace identifier are now fixed to namespace 1 of the device. If\n          no namespace 1 exists for a device no such symlink is\n          created. Previously, these symlinks would point to an unspecified\n          namespace, and thus not be strictly stable references to\n          multi-namespace NVMe devices. These un-namespaced symlinks are mostly\n          obsolete, users and applications should always use the ones with\n          encoded namespace information instead. This change should not affect\n          too many systems, because most NVMe devices only know a namespace 1\n          by default.\n\n        * Support for cgroup v1 ('legacy' and 'hybrid' hierarchies) is now\n          considered obsolete and systemd by default will ignore configuration\n          that enables them. To forcibly reenable cgroup v1 support,\n          SYSTEMD_CGROUP_ENABLE_LEGACY_FORCE=1 must additionally be set on the\n          kernel command line.\n\n       Announcements of Future Feature Removals:\n\n        * The D-Bus method org.freedesktop.systemd1.StartAuxiliaryScope() is\n          deprecated because accounting data and such cannot be reasonably\n          migrated between cgroups. It is likely to be fully removed in a\n          future release (reach out if you have use cases).\n\n        * The recommended kernel baseline version has been bumped to v5.4\n          (released in 2019). Expect limited testing on older kernel versions,\n          where \"old-kernel\" taint flag would also be set. Support for them\n          will be phased out in a future release in 2025, i.e. we expect to bump\n          the minimum baseline to v5.4 then too.\n\n        * The complete removal of support for cgroup v1 ('legacy' and 'hybrid'\n          hierarchies) is scheduled for v258.\n\n        * Support for System V service scripts is deprecated and will be\n          removed in v258. Please make sure to update your software\n          *now* to include a native systemd unit file instead of a legacy\n          System V script to retain compatibility with future systemd releases.\n\n        * To work around limitations of X11's keyboard handling systemd's\n          keyboard mapping hardware database (hwdb.d/60-keyboard.hwdb) so far\n          mapped the microphone mute and touchpad on/off/toggle keys to the\n          function keys F20, F21, F22, F23 instead of their correct key codes.\n          This key code mangling will be removed in the next systemd release.\n          To maintain compatibility with X11 applications that rely on the old\n          function key code mappings, this mangling has now been moved to the\n          relevant X11 keyboard driver modules. In order to ensure these keys\n          continue to work, update to xf86-input-evdev >= 2.11.0 and\n          xf86-input-libinput >= 1.5.0 before updating to systemd >= 258.\n\n        * Support for the SystemdOptions EFI variable is deprecated.\n          'bootctl systemd-efi-options' will emit a warning when used. It seems\n          that this feature is little-used and it is better to use alternative\n          approaches like credentials and confexts. The plan is to drop support\n          altogether at a later point, but this might be revisited based on\n          user feedback.\n\n        * systemd-run's switch --expand-environment= which currently is disabled\n          by default when combined with --scope, will be changed in a future\n          release to be enabled by default.\n\n        libsystemd:\n\n        * systemd's JSON API is now available as public interface of\n          libsystemd, under the name \"sd-json\". The purpose of the library is\n          to allow structures to be conveniently created in C code and\n          serialized to JSON, and for JSON to be conveniently deserialized into\n          in-memory structures, using callbacks to handle specific\n          keys. Various data types like integers, floats, booleans, strings,\n          UUIDs, base64-encoded and hex-encoded binary data, and arrays are\n          supported natively. The library has been part of systemd for a while\n          as internal component, and is now made publicly available. One major\n          user of sd-json is sd-varlink (see below). Note that the\n          documentation of sd-json is very much incomplete for now, but the\n          systemd codebase provides plenty real-life code examples.\n\n        * systemd's Varlink IPC API is now available as part of libsystemd,\n          under the name \"sd-varlink\". This library is a C implementation of\n          the Varlink IPC system (https://varlink.org/) that has been adopted\n          by systemd for various interfaces. It relies on the sd-json JSON\n          component, see above. Note that the documentation of sd-varlink is\n          very much incomplete for now, but the systemd codebase provides\n          plenty real-life code examples.\n\n        * sd-bus gained a new call sd_bus_pending_method_calls() which returns\n          the number of currently open asynchronous method calls initiated on\n          this connection towards peers.\n\n        * sd-device gained a new call sd_device_monitor_is_running() that\n          returns whether the specified monitor object is already running. It\n          also gained sd_device_monitor_get_fd(),\n          sd_device_monitor_get_events(), sd_device_monitor_get_timeout() and\n          sd_device_monitor_receive() to permit sd-device to run on top of a\n          foreign event loop implementation. It also gained\n          sd_device_get_driver_subsystem() which returns the subsystem of\n          driver objects. The new sd_device_get_device_id() call returns a\n          short string identifying the device record.\n\n        System and Service Management:\n\n        * The environment variable $REMOTE_ADDR is now set when using\n          per-connection socket activation for AF_UNIX stream sockets. It\n          contains the AF_UNIX peer address of the connection. (Previously the\n          environment variable was only set for IP sockets.)\n\n        * Multipath TCP (MPTCP) is now supported as a socket protocol for\n          .socket units.\n\n        * A new /etc/fstab option x-systemd.wants= creates \"Wants=\"\n          dependencies.  (This is similar to the previously available\n          x-systemd.requires=.)\n\n        * The initialization of the system clock during boot and updates has\n          been simplified: both PID 1 or systemd-timesyncd will pick the latest\n          minimum time as indicated by the compiled-in epoch,\n          /usr/lib/clock-epoch, and /var/lib/systemd/timesync/clock. See\n          systemd(1) for an detailed updated description.\n\n        * The kernel's Ctrl-Alt-Delete handling is re-enabled during late\n          shutdown, so that the user may use it to initiate a reboot if the\n          system freezes otherwise.\n\n        * The new value \"identity\" for the unit setting PrivateUsers= may be\n          used to request a user namespace with an identity mapping for the\n          first 65536 UIDs/GIDs.  This is analogous to the systemd-nspawn's\n          --private-users=identity.\n\n        * The new value \"disconnected\" for the unit setting PrivateTmp= may be\n          used to specify that a separate tmpfs instance should be used for\n          /tmp/ and /var/tmp/ for the unit.\n\n        * The server manager (and various other tools too) use pidfds in more\n          places to refer to processes.\n\n        * A build option -D link-executor-shared=false can be used to build\n          the systemd-executor binary (added in a previous release) in a way\n          where it does not link to shared libsystemd-shared-‚Ä¶.so library.\n          PID1 holds a reference to the executor binary that was on disk when\n          the manager was started or restarted, but the shared libraries it is\n          linked to are not loaded until the executor binary needs to be used.\n          This partial static linking is a workaround for the issue where,\n          during upgrades, the old libsystemd-shared-‚Ä¶.so may have already\n          been removed and the pinned executor binary will just fail to\n          execute.\n\n        * The systemd.machine_id= kernel command line parameter interpreted by\n          PID 1 now supports an additional special value: if set to \"firmware\"\n          the machine ID is initialized from the SMBIOS/DeviceTree system\n          UUID. (Previously this was already done automatically in VM\n          environments, this extends the concept to any system, but only on\n          explicit request via this option.)\n\n        * The ImportCredential= setting in service unit files now permits\n          renaming of credentials as they are imported.\n\n        * The RestartMode= setting gained a new \"debug\" value. If specified and\n          the service fails so that it shall be restarted it is invoked in\n          \"debugging mode\". Debugging mode means that the $DEBUG_INVOCATION\n          environment variable will be set to \"1\" for the new\n          invocation. Moreover, any setting LogLevelMax= will be temporarily\n          changed to \"debug\" for the next invocation. This mode is useful to\n          automatically repeat invocation of tools in case they fail ‚Äì but with\n          additional logging or testing routines enabled.\n\n        * A new service setting BindLogSockets= has been added that\n          controls whether the AF_UNIX sockets required for logging shall be\n          bind mounted to the mount sandbox allocated for the service.\n\n        * At early boot, PID 1 will now optionally load a policy for the new\n          Linux IPE LSM.\n\n        * Transient services (as invoked by the StartTransientUnit() D-Bus\n          method) may now receive additional, arbitrary file descriptors to\n          pass to executed service processes during activation using the new\n          ExtraFileDescriptor= unit property.\n\n        * Calendar .timer units gained a new boolean DeferReactivation=\n          option. If enabled and the repetitive calendar timer elapses again\n          while the service the timer activates is still running, immediate\n          reactivation of the service once it finishes is skipped, and the\n          timer has to elapse again before the service is reactivated.\n\n        * Generator processes invoked by the service manager will now receive a\n          new environment variable $SYSTEMD_SOFT_REBOOTS_COUNT that indicates\n          how many times the system has been soft-rebooted since the kernel\n          initialized.\n\n        * A new service property ManagedOOMMemoryPressureDurationSec= has been\n          added that complements the existing\n          ManagedOOMMemoryPressureDurationLimit= and specifies the PSI\n          measurement interval for the specific unit.\n\n        * The sd_notify() protocol has been extended to allow changing the main\n          PID of a process by providing a pidfd of the new main process, or by\n          specifying the pidfd inode number. Previously this was only supported\n          by specifying the classic UNIX PID, which of course is racy.\n\n        * The SocketUser=/SocketGroup= settings of .socket units are now also\n          applied to POSIX message queues.\n\n        * The ProtectControlGroups= unit file setting now supports two\n          additional values: if set to \"private\" a new cgroup namespace is\n          allocated for the service and cgroupfs mounted accordingly; if set to\n          \"strict\" a new cgroup namespace is allocated for the service, and\n          cgroupfs is mounted read-only for the service.\n\n        * The StateDirectory=, RuntimeDirectory=, CacheDirectory=,\n          LogsDirectory=, and ConfigurationDirectory= settings gained support\n          for configuring the respective directories as read-only, via a ':ro'\n          flag that can be appended to each setting's value.\n\n        * When DynamicUser= is combined with\n          StateDirectory=/RuntimeDirectory=/CacheDirectory=/LogsDirectory= and\n          ID mapped mounts are available on the referenced path, the data in\n          there is now preferably made available by establishing ID mapped from\n          the \"nobody\" user to the dynamic user, rather than via recursive\n          chown()ing.\n\n        * A new service property PrivatePIDs= has been added that runs executed\n          processes as PID 1 - the init process - within their own PID\n          namespace.  PrivatePIDs= also mounts /proc/ so only processes within\n          the new PID namespace are visible.\n\n        systemd-udevd:\n\n        * udev rules now set 'uaccess' for /dev/udmabuf, giving locally\n          logged-in users access to the hardware. This is useful in order to\n          support IPMI cameras with libcamera.\n\n        * Serial port devices will no longer show up as systemd units, unless\n          they have an IO port or memory assigned to them. This means that only\n          serial ports that actually exist should show up as .device units now.\n\n        * mtd devices (i.e. certain kinds of flash memory devices) will now\n          show up as .device units in systemd.\n\n        * The firmware_node/sun sysfs attribute will now be used (if available)\n          for naming slot-based network interfaces, i.e. ID_NET_NAME_SLOT.\n          Moreover the interface aliases specified in DeviceTree are now\n          searched for both on the interface's parent device (as before) and\n          the device itself (new).\n\n        * Various USB hardware wallets are now recognized by udev via a .hwdb\n          file, and get the ID_HARDWARE_WALLET= property set, which enables\n          \"uaccess\" for them, i.e. direct unprivileged access.\n\n        * udevadm info will now output the device ID string in lines prefixed\n          with \"J:\", and the driver subsystem in lines prefixed with \"B:\".\n\n        * udev rules files now support case-insensitive attribute matching\n          (e.g. ATTR{foo}==i\"abcd\")\n\n        systemd-logind:\n\n        * New DesignatedMaintenanceTime= configuration option allows shutdowns\n          to be automatically scheduled at the specified time.\n\n        * logind now reacts to Ctrl-Alt-Shift-Esc being pressed. It will send\n          out a org.freedesktop.login1.SecureAttentionKey signal, indicating a\n          request by the user for the system to display a secure login dialog.\n          The handling of SAK can be suppressed in logind configuration.\n\n        * logind now supports handing off session-managed access to hidraw\n          devices via its D-Bus APIs, the same way it already supports that for\n          DRM and evdev input devices. This permits unprivileged clients to get\n          hidraw fds for a device, that are automatically suspended when the\n          session switches away.\n\n        * systemd-logind now exposes two D-Bus properties CanLock and CanIdle\n          for all sessions. These properties indicate whether the session's\n          class supports screen locking and idleness detection.\n\n        * systemd-inhibit now allows interactive polkit authorization. It\n          gained a --no-ask-password option to suppress it.\n\n        systemd-machined:\n\n        * Unprivileged clients are now allowed to register VMs and containers.\n          Machines started via the systemd-vmspawn@.service unit will now be\n          registered with systemd-machined.\n\n        * systemd-machined gained a pretty complete set of Varlink APIs\n          exposing its functionality. This is an alternative to the\n          pre-existing D-Bus interface.\n\n        systemd-resolved:\n\n        * The resolvconf command now supports '-p' switch. If specified, the\n          interface will not be used as the default route for domain name\n          lookups.\n\n        * resolvectl now enables interactive polkit authorization. It gained a\n          --no-ask-password option to suppress it.\n\n        systemd-networkd and networkctl:\n\n        * IPv6 address labels can be also configured in a new [IPv6AddressLabel]\n          section with Prefix= and Label= settings in networkd.conf. Please see\n          networkd.conf(5) for more details.\n\n        * 'networkctl edit' can now read the new file contents from standard\n          input with the new --stdin option.\n\n        * 'networkctl edit' and 'cat' now support editing/showing .netdev files\n          by link. 'networkctl cat' can also list all configuration files\n          associated with an interface at once with ':all'.\n\n        * networkctl gained a --no-ask-password option to suppress interactive\n          polkit authorization.\n\n        * \"mac\" has been added to the default AlternativeNamesPolicy= setting\n          for network links (via 99-default.link). This means \"enx*\" interface\n          names will now be added to the list of alternative interface names by\n          default, for all interfaces that have a MAC address assigned\n          by hardware.\n\n        * networkd .netdev bridge devices gained a new setting FDBMaxLearned=\n          for setting a limit on the number of dynamically learned FDB entries.\n\n        * networkd .network files for bridge devices now support Layer 2 (in\n          addition to the pre-existing Layer 3) MDB entries, via\n          MulticastGroupAddress=.\n\n        * systemd-networkd will now log when per-network sysctls belonging to\n          network interfaces managed by it are changed outside of networkd,\n          thus highlighting conflict of ownership/management of these knobs.\n\n        * systemd-networkd will now make RFC9463 DNR fields available to\n          systemd-resolved, for automatic DNS DoT configuration, and similar.\n\n        * The \"dhcp\" and \"dhcp-on-stop\" values for KeepConfiguration= setting in\n          .network file are replaced with \"dynamic\" and \"dynamic-on-stop\",\n          respectively. When specified, systemd-networkd will preserve all\n          dynamic configurations via DHCPv4, DHCPv6, NDISC, and IPv4LL with\n          ACD, while previously only DHCPv4 configurations were kept. Also,\n          when systemd-networkd is restarted, regardless of the setting, these\n          dynamic configurations are unconditionally kept. So, systemd-networkd\n          can be restarted without disturbing ongoing connections.\n\n        * systemd-networkd now updates traffic control configuration without\n          clearing existing settings. Thus, those settings can be updated by\n          editing relevant .network files and triggering 'networkctl reload'.\n\n        * systemd-networkd now gracefully updates netdev settings specified in\n          .netdev files when 'networkctl reload' is called. Previously, if the\n          relevant interfaces existed, new settings would not be applied. Now,\n          new settings will be applied if possible. Some settings cannot be\n          updated after a netdev is configured, e.g. VLAN ID can be only\n          specified on creation. To change such settings, user needs to remove\n          existing interfaces, and invoke 'networkctl reload' or restart\n          systemd-networkd.\n\n        systemd-boot, systemd-stub, and related tools:\n\n        * The EFI stub now supports loading of .ucode sections with microcode\n          from PE add-on files. It also now supports loading .initrd sections\n          from PE add-on files.\n\n        * A new .profile PE section type is now documented and supported in\n          systemd-measure, ukify, systemd-stub and systemd-boot. These new\n          sections allow multiple \"profiles\" to be stored together in the UKI,\n          where each .profile section creates groupings of sections in the UKI,\n          allowing some sections to be shared and other sections like .cmdline\n          or .initrd unique to the profile. This may be used to provide a\n          single UKI that synthesizes multiple menu items in the boot menu (for\n          example, a regular one to boot, plus a debugging one, or a factory\n          reset one, and so on ‚Äì which only differ in kernel command line, but\n          nothing else).\n\n        * New .dtbauto and .hwids sections are now documented and supported in\n          systemd-measure, ukify, systemd-stub, and systemd-boot. A single UKI\n          can contain multiple .dtbauto sections, and the 'compatible' string\n          therein will be compared with the equivalent field in the DTB\n          provided by the firmware, if present. If absent, SMBIOS will be used\n          to calculate hardware IDs (CHIDs) and look them up in the content of\n          .hwids, hopefully revealing an fallback 'compatible' string. This\n          allows including multiple DTBs in a single UKI, with systemd-stub\n          automatically loading the correct one for the current hardware.\n\n        * ukify gained an --extend switch to import an existing UKI to\n          be extended, and a --measure-base= switch to support measurement\n          of multi-profile UKIs.\n\n        * ukify gained a --certificate-provider switch to use an OpenSSL\n          provider to load the certificate used to sign artifacts, instead of\n          having to provide the path to a file on disk.\n\n        * bootctl, systemd-keyutil, systemd-measure, systemd-repart, and\n          systemd-sbsign gained a new --certificate-source switch that allows\n          loading the X.509 certificate from an OpenSSL provider instead of a\n          file system path.\n\n        * systemd-boot's menu will now react to volume up/down rocker presses\n          the same way as to arrow up/down presses: they move the menu item up\n          or down. This is useful on device form factors that have only a\n          volume rocker but no arrow keys (e.g. phones).\n\n        * systemd-stub will report the partition UUID and image identifier its\n          UKI executable is placed on separately from the data systemd-boot\n          provides about where to find its own executable, via EFI\n          variables. This is useful when systemd-boot and UKIs are placed on\n          distinct partitions (i.e. ESP and XBOOTLDR).\n\n        * bootctl gained new switches --print-loader-path and --print-stub-path\n          that output the path to the boot loader or UKI used for the current\n          boot.\n\n        * bootctl kernel-identify now recognizes EFI add-ons.\n\n        * bootctl gained a --random-seed=yes|no option to control provisioning\n          of the random seed file in the ESP. (This is useful when producing an\n          image that will be used in multiple instances.)\n\n        * bootctl now optionally supports installing UEFI Secure Boot databases\n          (i.e. db/dbx/‚Ä¶  databases in ESL format) for systemd-boot to pick up\n          and automatically enroll if the system is booted in Setup Mode. This\n          is controlled via bootctl's new --secure-boot-auto-enroll=yes switch\n          (and some auxiliary ones). A certificate can be provided in DER\n          format, and is automatically converted into an ESL, as needed.\n\n        * bootctl, systemd-measure, systemd-repart when referencing signing\n          keys on OpenSSL engines may now query for PINs and similar via\n          systemd's native systemd-ask-password logic (and take benefit of its\n          caching and UI).\n\n        * A new systemd-sbsign tool has been added, that can be used to sign\n          EFI binaries (PE) for Secure Boot. This tool supports OpenSSL engines\n          and providers, with pin caching support for PKCS11. ukify supports it\n          as an alternative to sbsigntool and pesign.\n\n        * A new systemd-keyutil tool has been added, that can be used to perform\n          various operations on private keys and X.509 certificates.\n\n        The journal:\n\n        * journalctl can now list invocations of a unit with the\n          --list-invocation options and show logs for a specific invocation\n          with the new --invocation/-I option. (This is analogous to the\n          --list-boots/--boot/-b options.)\n\n        systemd-sysupdate and related tools:\n\n        * systemd-sysupdated has been added as system service, allowing\n          unprivileged clients to update the system via D-Bus calls. Note that\n          for now the systemd-sysupdated API is considered experimental, and is\n          not considered stable yet.\n\n          A new updatectl command-line tool can be used to control the\n          service.\n\n        * systemd-sysupdate gained a new --offline option to force it to\n          operate locally. This is useful when listing locally installed\n          versions.\n\n        * systemd-sysupdate gained a new --transfer-source= option to set the\n          directory to which transfer sources configured with\n          PathRelativeTo=explicit will be interpreted.\n\n        * systemd-sysupdate now reports download progress via sd_notify().\n\n        * systemd-sysupdate now supports output in JSON mode for all commands.\n\n        * systemd-sysupdate definitions may now carry references to ChangeLog\n          and AppStream metadata.\n\n        * Transfer definitions for systemd-sysupdate are supposed to carry the\n          \".transfer\" suffix now, changing from \".conf\". The latter remains\n          supported for compatibility, but it's recommended to rename all files\n          reflecting this suffix change.\n\n        * systemd-sysupdate now supports new \".feature\" files that may be\n          used in conjunction with \".transfer\" files to group them together, and\n          allow them to be turned off or on, individually per group.\n\n        TPM & systemd-cryptsetup:\n\n        * The 'has-tpm2' verb which reports whether TPM2 functionality is\n          available has been moved from systemd-creds to systemd-analyze.\n\n        * systemd-tpm2-setup will gracefully handle TPMs that have a PIN set on\n          the TPM, and not attempt to automatically set up a Storage Root Key\n          (SRK) in that case.\n\n        * New crypttab option password-cache=yes|no|read-only can be used to\n          customize password caching.\n\n        * New crypttab options fido2-pin=, fido2-up=, fido2-uv= can be used to\n          enable/disable the PIN query, User Presence check, and User\n          Verification.\n\n        * systemd-cryptenroll gained new options --fido2-salt-file= and\n          --fido2-parameters-in-header= to simplify manual enrollment of FIDO2\n          tokens.\n\n        * systemd-cryptenroll, systemd-repart, and systemd-storagetm gained a\n          new --list-devices option to list appropriate candidate block\n          devices.\n\n        * systemd-cryptenroll/systemd-cryptsetup now support combined signed\n          PCR policies and local systemd-pcrlock policies for unlocking a\n          disk. Or in other words, it's now possible to bind unlocking of a\n          local disk to a specific OS vendor *and* a locally managed set of\n          measurements describing the local system.\n\n        varlinkctl:\n\n        * varlinkctl gained a new verb 'list-methods' to show a list of\n          methods implemented by a service.\n\n        * varlinkctl gained a --quiet/-q option to suppress method call\n          replies.\n\n        * varlinkctl gained a --graceful= option to suppress specific Varlink\n          errors, and treat them as success.\n\n        * varlinkctl gained a --timeout= option to limit how long the\n          invocation can take.\n\n        * varlinkctl allows remote invocations over ssh, via the new\n          \"ssh-exec:\" address specification. It'll make an ssh connection,\n          start the specified executable on the remote side, and communicate\n          with the remote process using the Varlink protocol.\n\n          The \"ssh:\" address specification has been renamed to \"ssh-unix:\"\n          (reflecting the fact it is used to connect to a remote AF_UNIX socket\n          via SSH). The old syntax is still supported for backwards\n          compatibility.\n\n        * varlinkctl's 'introspect' verb no longer requires specification of an\n          interface name. If none is specified all interfaces exposed by the\n          service are shown. Moreover, more than one interface name may be\n          specified now, in which case all specified ones are displayed.\n\n        systemd-repart:\n\n        * systemd-repart's CopyBlocks= directive can now use a character device\n          as source (in addition to previously supported regular files and\n          block devices). This is useful for initializing a partition from\n          /dev/urandom or similar.\n\n        * systemd-repart gained new Compression= and CompressionLevel= settings\n          to enable internal compression in filesystems created offline.\n\n        * systemd-repart understands a new MakeSymlinks= option to create one\n          or more symlinks (each specified as a symlink name and target) within\n          a newly formatted file system.\n\n        * systemd-repart gained a new SupplementFor= setting that allows\n          allocating a partition only if some other existing partition cannot\n          be adjusted to match the constraints defined for it. This is useful\n          to generate an XBOOTLDR partition if and only if an ESP already\n          exists that is too small for the required constraints.\n\n        * The default size of verity hash partitions is now automatically\n          derived from SizeMaxBytes= of the data partition it is protecting.\n\n        systemd-ssh-proxy:\n\n        * systemd-ssh-proxy now also supports the AF_UNIX-based \"VSOCK MUX\"\n          protocol used by CloudHypervisor/Firecracker to expose AF_VSOCK\n          sockets of the VM on the host. Or in other words: it's now possible\n          to directly connect to ssh via AF_VSOCK from hosts to VMs of these\n          two hypervisors (previously this was only supported for hypervisors\n          which expose AF_VSOCK on the host as AF_VSOCK, such as qemu).\n\n        * systemd-ssh-proxy can now reference local VMs by their name: connect\n          to any local VM \"foobar\" registered with systemd-machined via \"ssh\n          machine/foobar\" using the AF_VSOCK protocol.\n\n        systemd-analyze:\n\n        * systemd-analyze will now show the SMBIOS #11 vendor strings set for\n          the machine with a new 'smbios11' verb.\n\n        * systemd-analyze gained a new --instance= option that can be used to\n          provide an instance name to analyze multiple templates instantiated\n          with the same instance name.\n\n        * systemd-analyze's \"capability\" verb now gained a new --mask\n          parameter. If specified a numeric capbality mask can be specified\n          which is decoded for its contained capabilities.\n\n        * systemd-analyze's \"plot\" verb gained two new settings: --scale-svg=\n          allows the X axis of the split to be stritched by a factor. If\n          --detailed is specified activation timestamps are shown in the plot.\n\n        busctl:\n\n        * 'busctl monitor' gained new options --limit-messages= and --timeout=\n          to set the number of matches or limit the runtime of the command.\n\n        * busctl now supports doing method calls with embedded unix file\n          descriptors.\n\n        * busctl acquired a new \"wait\" command to wait for a specific signal to\n          arrive.\n\n        systemd-nspawn:\n\n        * systemd-nspawn --bind-user= will now propagate the bound user's SSH\n          public key (if included in the user record) into the container,\n          ensuring that any such bound user is directly accessible via ssh.\n\n        * systemd-nspawn now supports unprivileged FUSE inside containers.\n\n        systemd-importd:\n\n        * A new generator sytemd-import-generator has been added to synthesize\n          image download jobs. This provides functionality similar to\n          importctl, but is configured via the kernel command line and system\n          credentials. It may be used to automatically download sysext,\n          confext, portable service, nspawn container or vmspawn VM images at\n          boot.\n\n        * systemd-importd now provides a Varlink IPC interface, in addition to\n          its existing D-Bus IPC interface.\n\n        * The individual import/export tools will now display a nice progress\n          bar when downloading files.\n\n        systemd-userdb & systemd-homed:\n\n        * userdbctl gained a pair of switches --uid-min= and --uid-max= to\n          filter the UID/GID range of the listed users or groups. It also\n          gained a new switch --disposition= to filter them by disposition\n          (i.e. show only system users or only regular users, and so on). It\n          also gained a new switch --fuzzy that permits a \"fuzzy\" search for a\n          user, i.e. doing a substring and string distance search, and looking\n          into the real name field of the user and other similar fields. It\n          gained a new switch --boundaries=no for disabling display of the\n          UID/GID range boundaries in its output.\n\n        * User records learnt a new set of fields that may list field names\n          that may be changed by the user themselves without requiring\n          administrator authentication. This new field is honoured by\n          systemd-homed to allow users to change selected properties of their\n          own user records.\n\n        systemd-run & run0:\n\n        * run0 gained a new pair of settings --pty and --pipe that control\n          whether to invoke the specified binary on a freshly allocated pseudo\n          TTY, or whether to pass the client's STDIN/STDOUT/STDERR through\n          directly.\n\n        * run0 gained a new switch --shell-prompt-prefix= that permits passing\n          in a string to display on each shell prompt as prefix. If not\n          specified otherwise this will show a superhero emoji (ü¶∏), in order\n          to visually communicate the temporarily elevated privileges a run0\n          session provides. This makes use of the $SHELL_PROMPT_PREFIX\n          environment variables mentioned below.\n\n        * systemd-run can output some of its runtime data in JSON format via\n          the new --json= option.\n\n        systemd-tmpfiles:\n\n        * systemd-tmpfiles --purge switch now requires specification of at\n          least one tmpfiles.d/ drop-in file.\n\n        * tmpfiles.d/ files gained a new '?' specifier for the 'L' line type to\n          create a symlink only if the source exists, and gracefully skip the\n          line otherwise.\n\n        Miscellaneous:\n\n        * systemctl now supports the --now option with the 'reenable' verb.\n\n        * systemd-mount can now output JSON with a new --json= switch, for use\n          with --list-devices. It also shows the \"diskseq\" property in the\n          block device list.\n\n        * systemd-id128 gained a new 'var-partition-uuid' verb to calculate\n          the DPS UUID for /var/ keyed by the local machine-id.\n\n        * localectl gained a -l/--full option to show output without\n          ellipsization.\n\n        * timedatectl now supports interactive polkit authorization.\n\n        * The new Linux mseal(), listmount(), statmount() syscalls have been\n          added to relevant system call groups.\n\n        * The systemd-ask-password logic has been extended with a per-user\n          scope, i.e. user programs may now ask for passwords via the same\n          mechanism and the previously system-wide only mechanism.\n\n        * A new set of system/service credentials are added:\n          shell.prompt.prefix, shell.prompt.suffix and shell.welcome. At login\n          time these are propagated into the $SHELL_PROMPT_PREFIX,\n          $SHELL_PROMPT_SUFFIX, $SHELL_PROMPT_WELCOME environment\n          variables. These in turn are included in the shell prompt of\n          interactive shells and shown at login time, via\n          /etc/profile.d/70-systemd-shell-extra.sh. This functionality is\n          useful to visually highlight the fact a specific shell prompt\n          originates from a specific system, execution context or tool. These\n          credentials and environment variables are supposed to be generically\n          useful within and outside of the immediate systemd context. It is\n          also used by 'run0', see above.\n\n        * New RELEASE_TYPE=, EXPERIMENT=, EXPERIMENT_URL= fields have been\n          defined for the /etc/os-release file. For example,\n          \"RELEASE_TYPE=development|stable|lts\" can be used to indicate various\n          stages of the release life cycle, and \"RELEASE_TYPE=experimental\" can\n          indicate experimental builds, with the EXPERIMENT= field providing a\n          human-readable description of the nature of the experiment.\n\n        * A new sleep.conf HibernateOnACPower= option has been added, which\n          when disabled will suppress hibernation in suspend-then-hibernate\n          mode until the system is disconnected from a power source.\n\n        * A bunch of patches to ease building against musl have been merged.\n\n        * The various components that display progress bars\n          (i.e. systemd-repart, systemd-sysupdate/updatectl, importctl), will\n          now also issue the ANSI sequences for progress reports that Windows\n          Terminal understands. Most Linux terminals currently do not support\n          this sequence (and ignore it), but hopefully this will change one\n          day. The progress information is used to display a nice progress\n          animation in the terminal tab and icon. For details about the ANSI\n          sequence and its effects, see:\n\n          https://github.com/microsoft/terminal/pull/8055\n          https://conemu.github.io/en/AnsiEscapeCodes.html#ConEmu_specific_OSC\n\n        * systemd-sysusers is now able to create fully locked user\n          accounts. For compatibility it so far created accounts with a locked\n          (i.e. invalid) password, but not marked locked as a whole. With the\n          new \"!\" modifier for \"u\" lines, it is now possible to create fully\n          locked accounts. The distinction between accounts with a locked\n          password and fully locked accounts is relevant when considering\n          non-password forms of authentication, i.e. SSH and such. It is\n          strongly recommended to make use of this new feature for almost all\n          system accounts, since they usually do not require (and should not\n          permit) interactive logins. All of systemd's own system users have\n          been changed to be marked as fully locked.\n\n        * systemd-coredump now supports a new EnterNamespace= option, which\n          defaults to off. If enabled systemd-coredump will access the mount\n          namespace of any crashed process to acquire debug symbol information,\n          in order to be able to symbolize backtraces. This option is useful to\n          improve backtraces of processes of containerized applications. (Note\n          that the host systemd-coredump preferably dispatches coredump\n          processing to the container itself, if it supports that. Only full-OS\n          containers which run systemd inside will support this however, in\n          other cases EnterNamespace= might be an suitable approach to acquire\n          symbolized backtraces.)\n\n        Special thanks to Nick Owens for bringing attention to and testing\n        fixes for issue #34516.\n\n        Contributions from: 12paper, A.¬†Wilcox, Abderrahim¬†Kitouni,\n        Adrian¬†Vovk, Alain¬†Greppin, Allison¬†Karlitskaya, Alyssa¬†Ross,\n        Anders¬†Jonsson, Andika¬†Triwidada, Andreas¬†Schwab, Andres¬†Beltran,\n        Ani¬†Sinha, Anouk¬†Ceyssens, Anselm¬†Schueler, Anton¬†Golubev,\n        Antonio¬†Alvarez¬†Feijoo, Arian¬†van¬†Putten, Arnaud¬†Patard,\n        Arthur¬†Shau, Bastien¬†Nocera, Benjamin¬†ROBIN, Brenton¬†Simpson,\n        Bryan¬†Gurney, ButterflyOfFire, Carlo¬†Teubner, Celeste¬†Liu,\n        Chen¬†Guanqiao, Chen¬†Qi, Chengen¬†Du, Christian¬†Hesse,\n        Christoph¬†Anton¬†Mitterer, Colin¬†Foster, Collin¬†L,\n        Cristian¬†Rodr√≠guez, Daan¬†De¬†Meyer, Dan¬†Nicholson, Daniel¬†Dawson,\n        Daniel¬†Martinez, Daniel¬†P.¬†Berrang√©, Daniel¬†Rusek,\n        Darsey¬†Litzenberger, David¬†Joaqu√≠n¬†Shourabi¬†Porcel,\n        David¬†Michael, David¬†Rheinsberg, David¬†Tardon, Davide¬†Cavalca,\n        Derek¬†J.¬†Clark, Diego¬†Viola, Dimitrys¬†Meliates, Diogo¬†Ivo,\n        Dmytro¬†Markevych, DocNITE, Dominique¬†Martinet,\n        Dr.¬†David¬†Alan¬†Gilbert, Edson¬†Juliano¬†Drosdeck, Erik¬†Sj√∂lund,\n        Etienne¬†Champetier, Etienne¬†Cordonnier, Ettore¬†Atalan,\n        Eugeny¬†Shcheglov, Excited-bore, Fabian¬†Vogt, Federico¬†Giovanardi,\n        Filip¬†Lewi≈Ñski, Florian¬†Schmaus, Franck¬†Bui, Frantisek¬†Sumsal,\n        F√°bio¬†Rodrigues¬†Ribeiro, Gabriel¬†Elyas, Ga√´l¬†PORTAY,\n        Geraldo¬†S.¬†Simi√£o¬†Kutz, Giovanni¬†Baratta, Greg¬†Heartsfield,\n        Gregor¬†Herburger, Gregory¬†Arenius, GwynBleidD, G√∂ran¬†Uddeborg,\n        Hans¬†de¬†Goede, Helmut¬†Grohne, Henry¬†Chen, Ian¬†Abbott, Integral,\n        Ivan¬†Kruglov, Ivan¬†Shapovalov, James¬†Coglan, James¬†Hilliard,\n        James¬†Muir, Jason¬†Yundt, Jeffrey¬†Bosboom, Jian¬†Zhang,\n        Jiri¬†Gr√∂nroos, Johannes¬†Schneider, John¬†A.¬†Leuenhagen,\n        Jose¬†Ignacio¬†Tornos¬†Martinez, JoseskVolpe, Joshua¬†Grisham,\n        J√∂rg¬†Behrmann, Kai-Chuan¬†Hsieh, Kamil¬†Szczƒôk, Karel¬†Zak,\n        Kornilios¬†Kourtis, Kuntal¬†Majumder, Lennart¬†Poettering,\n        Lidong¬†Zhong, Luca¬†Boccassi, Lucas¬†Adriano¬†Salles,\n        Lucas¬†Werkmeister, Ludwig¬†Nussel, Luke¬†T.¬†Shumaker,\n        Luk√°≈°¬†Nykr√Ωn, Luna¬†Jernberg, L√©ane¬†GRASSER, Maanya¬†Goenka,\n        Mantas¬†Mikulƒónas, Marc¬†Reisner, Marcel¬†Hellwig, Marco¬†Tomaschett,\n        Marin¬†Kresic, Marius¬†Hoch, Martin¬†Srebotnjak, Martin¬†Wilck,\n        Mary¬†Strodl, Matteo¬†Croce, Matthias¬†Lisin, Matthias¬†Schiffer,\n        Matthieu¬†Baerts¬†(NGI0), Matthieu¬†CHARETTE,\n        Mauri¬†de¬†Souza¬†Meneguzzo, Maximilian¬†Wilhelm, Merlin¬†Jehli,\n        Michael¬†Ferrari, Michal¬†Koutn√Ω, Michal¬†SekletaÃÅr, Micha≈Ç¬†G√≥rny,\n        Michele¬†Dionisio, Michiel, Micka√´l¬†Sala√ºn, Mike¬†Gilbert,\n        Mike¬†Yuan, MkKvcs, Nick¬†Cao, Nick¬†Rosbrook, Nils¬†K, Nova840,\n        Oƒüuz¬†Ersen, Pavel¬†Borecki, PavlNekrasov, Peter¬†Hutterer,\n        Peter¬†Rajnoha, Piotr¬†DrƒÖg, Rapha√´l¬†M√©lotte, Renan¬†Guilherme,\n        Renjaya¬†Raga¬†Zenta, Ricky¬†Tigg, Riku, Robin¬†Lee, Ronan¬†Pigott,\n        Ryan¬†Wilson, Sam¬†James, Sascha¬†Mester, Sean¬†Rhodes,\n        Sebastian¬†Gross, Septatrix, Sergey¬†A, ShreyasMahangade,\n        Simon¬†Pilkington, Skye¬†Chappelle, Steve¬†Traylen, Stuart¬†Hayhurst,\n        SuhailAhmedVelorum, Susant¬†Sahani, Takeo¬†Kondo, Temuri¬†Doghonadze,\n        Thomas¬†Blume, Thorsten¬†Kukuk, Thorsten¬†Scherer, Tobias¬†Fleig,\n        Tobias¬†Zimmermann, Tom¬†Coldrick, Tom¬†Yan, Tomas¬†Bzatek,\n        Topi¬†Miettinen, Tristan¬†F.-R., Uday¬†Shankar, Valentin¬†David,\n        Vasiliy¬†Kovalev, Vitaly¬†Kuznetsov, Vito¬†Caputo, Vladimir¬†Panteleev,\n        Vursc, Will¬†Fancher, WilliButz, Winterhuman, Xeonacid, Xuanjun¬†Wen,\n        Yanqing¬†Jing, Yaron¬†Shahrabani, Yu¬†Watanabe, Yuri¬†Chornoivan,\n        ZHANG¬†Yuntian, Zbigniew¬†Jƒôdrzejewski-Szmek, Zhou¬†Qiankang,\n        andre4ik3, anonymix007, bryango, chayleaf, chenjiayi, csp5me, cvlc12,\n        fwfy, gerblesh, hugo303, jan@neighbourhood.ie, jauge-technica,\n        lumingzh, maia¬†x., marginaldev, migleeson, nerdopolis, oldherl,\n        pyfisch, q66, rajmohan¬†r, reDBo0n, rhellstrom, rindeal, samuelvw01,\n        sinus-x, tfg13, vdovhanych, xujing, ≈Åukasz¬†Stelmach,\n        ≈†tƒõp√°n¬†Nƒõmec, –î–∞–º—ò–∞–Ω¬†–ì–µ–æ—Ä–≥–∏–µ–≤—Å–∫–∏, ÁôΩ‰∏ÄÁôæ\n\n        ‚Äî Edinburgh, 2024-12-10\n\nCHANGES WITH 256:\n\n        Announcements of Future Feature Removals and Incompatible Changes:\n\n        * Support for automatic flushing of the nscd user/group database caches\n          will be dropped in a future release.\n\n        * Support for cgroup v1 ('legacy' and 'hybrid' hierarchies) is now\n          considered obsolete and systemd by default will refuse to boot under\n          it. To forcibly reenable cgroup v1 support,\n          SYSTEMD_CGROUP_ENABLE_LEGACY_FORCE=1 must be set on kernel command\n          line. The meson option 'default-hierarchy=' is also deprecated, i.e.\n          only cgroup v2 ('unified' hierarchy) can be selected as build-time\n          default.\n\n        * Support for System V service scripts is deprecated and will be\n          removed in a future release. Please make sure to update your software\n          *now* to include a native systemd unit file instead of a legacy\n          System V script to retain compatibility with future systemd releases.\n\n        * Support for the SystemdOptions EFI variable is deprecated.\n          'bootctl systemd-efi-options' will emit a warning when used. It seems\n          that this feature is little-used and it is better to use alternative\n          approaches like credentials and confexts. The plan is to drop support\n          altogether at a later point, but this might be revisited based on\n          user feedback.\n\n        * systemd-run's switch --expand-environment= which currently is disabled\n          by default when combined with --scope, will be changed in a future\n          release to be enabled by default.\n\n        * Previously, systemd-networkd did not explicitly remove any bridge\n          VLAN IDs assigned on bridge master and ports. Since version 256, if a\n          .network file for an interface has at least one valid setting in the\n          [BridgeVLAN] section, then all assigned VLAN IDs on the interface\n          that are not configured in the .network file are removed.\n\n        * IPForward= setting in .network file is deprecated and replaced with\n          IPv4Forwarding= and IPv6Forwarding= settings. These new settings are\n          supported both in .network file and networkd.conf. If specified in a\n          .network file, they control corresponding per-link settings. If\n          specified in networkd.conf, they control corresponding global\n          settings. Note, previously IPv6SendRA= and IPMasquerade= implied\n          IPForward=, but now they imply the new per-link settings. One of the\n          simplest ways to migrate configurations, that worked as a router with\n          the previous version, is enabling both IPv4Forwarding= and\n          IPv6Forwarding= in networkd.conf. See systemd.network(5) and\n          networkd.conf(5) for more details.\n\n        * systemd-gpt-auto-generator will stop generating units for ESP or\n          XBOOTLDR partitions if it finds mount entries for or below the /boot/\n          or /efi/ hierarchies in /etc/fstab. This is to prevent the generator\n          from interfering with systems where the ESP is explicitly configured\n          to be mounted at some path, for example /boot/efi/ (this type of\n          setup is obsolete, but still commonly found).\n\n        * The behavior of systemd-sleep and systemd-homed has been updated to\n          freeze user sessions when entering the various sleep modes or when\n          locking a homed-managed home area. This is known to cause issues with\n          the proprietary NVIDIA drivers. Packagers of the NVIDIA proprietary\n          drivers may want to add drop-in configuration files that set\n          SYSTEMD_SLEEP_FREEZE_USER_SESSIONS=false for systemd-suspend.service\n          and related services, and SYSTEMD_HOME_LOCK_FREEZE_SESSION=false for\n          systemd-homed.service.\n\n        * systemd-tmpfiles and systemd-sysusers, when given a relative\n          configuration file path (with at least one directory separator '/'),\n          will open the file directly, instead of searching for the given\n          partial path in the standard locations. The old mode wasn't useful\n          because tmpfiles.d/ and sysusers.d/ configuration has a flat\n          structure with no subdirectories under the standard locations and\n          this change makes it easier to work with local files with those\n          tools.\n\n        * systemd-tmpfiles now properly applies nested configuration to 'R' and\n          'D' stanzas. For example, with the combination of 'R /foo' and 'x\n          /foo/bar', /foo/bar will now be excluded from removal.\n\n        * systemd.crash_reboot and related settings are deprecated in favor of\n          systemd.crash_action=.\n\n        * Stable releases for version v256 and newer will now be pushed in the\n          main repository. The systemd-stable repository will be used for existing\n          stable branches (v255-stable and lower), and when they reach EOL it will\n          be archived.\n\n        General Changes and New Features:\n\n        * Various programs will now attempt to load the main configuration file\n          from locations below /usr/lib/, /usr/local/lib/, and /run/, not just\n          below /etc/. For example, systemd-logind will look for\n          /etc/systemd/logind.conf, /run/systemd/logind.conf,\n          /usr/local/lib/systemd/logind.conf, and /usr/lib/systemd/logind.conf,\n          and use the first file that is found.  This means that the search\n          logic for the main config file and for drop-ins is now the same.\n\n          Similarly, kernel-install will look for the config files in\n          /usr/lib/kernel/ and the other search locations, and now also\n          supports drop-ins.\n\n          systemd-udevd now supports drop-ins for udev.conf.\n\n        * A new 'systemd-vpick' binary has been added. It implements the new\n          vpick protocol, where a \"*.v/\" directory may contain multiple files\n          which have versions (following the UAPI version format specification)\n          embedded in the file name. The files are ordered by version and\n          the newest one is selected.\n\n          systemd-nspawn --image=/--directory=, systemd-dissect,\n          systemd-portabled, and the RootDirectory=, RootImage=,\n          ExtensionImages=, and ExtensionDirectories= settings for units now\n          support the vpick protocol and allow the latest version to be\n          selected automatically if a \"*.v/\" directory is specified as the\n          source.\n\n        * Encrypted service credentials can now be made accessible to\n          unprivileged users. systemd-creds gained new options --user/--uid=\n          for encrypting/decrypting a credential for a specific user.\n\n        * New command-line tool 'importctl' to download, import, and export\n          disk images via systemd-importd is added with the following verbs:\n          pull-tar, pull-raw, import-tar, import-raw, import-fs, export-tar,\n          export-raw, list-transfers, and cancel-transfer. This functionality\n          was previously available in \"machinectl\", where it was used\n          exclusively for machine images. The new \"importctl\" generalizes this\n          for sysext, confext, and portable service images.\n\n        * The systemd sources may now be compiled cleanly with all OpenSSL 3.0\n          deprecations removed, including the OpenSSL engine logic turned off.\n\n        Service Management:\n\n        * New system manager setting ProtectSystem= has been added. It is\n          analogous to the unit setting, but applies to the whole system. It is\n          enabled by default in the initrd.\n\n          Note that this means that code executed in the initrd cannot naively\n          expect to be able to write to /usr/ during boot. This affects\n          dracut¬†<=¬†101, which wrote \"hooks\" to /lib/dracut/hooks/. See\n          https://github.com/dracut-ng/dracut-ng/commit/a45048b80c27ee5a45a380.\n\n        * New unit setting WantsMountsFor= has been added. It is analogous to\n          RequiresMountsFor=, but creates a Wants= dependency instead of\n          Requires=. This new logic is now used in various places where mounts\n          were added as dependencies for other settings (WorkingDirectory=-‚Ä¶,\n          PrivateTmp=yes, cryptsetup lines with 'nofail').\n\n        * New unit setting MemoryZSwapWriteback= can be used to control the new\n          memory.zswap.writeback cgroup knob added in kernel 6.8.\n\n        * The manager gained a org.freedesktop.systemd1.StartAuxiliaryScope()\n          D-Bus method to devolve some processes from a service into a new\n          scope. This new scope will remain running, even when the original\n          service unit is restarted or stopped. This allows a service unit to\n          split out some worker processes which need to continue running.\n          Control group properties of the new scope are copied from the\n          originating unit, so various limits are retained.\n\n        * Units now expose properties EffectiveMemoryMax=,\n          EffectiveMemoryHigh=, and EffectiveTasksMax=, which report the\n          most stringent limit systemd is aware of for the given unit.\n\n        * A new unit file specifier %D expands to $XDG_DATA_HOME (for user\n          services) or /usr/share/ (for system services).\n\n        * AllowedCPUs= now supports specifier expansion.\n\n        * What= setting in .mount and .swap units now accepts fstab-style\n          identifiers, for example UUID=‚Ä¶ or LABEL=‚Ä¶.\n\n        * RestrictNetworkInterfaces= now supports alternative network interface\n          names.\n\n        * PAMName= now implies SetLoginEnvironment=yes.\n\n        * systemd.firstboot=no can be used on the kernel command-line to\n          disable interactive queries, but allow other first boot configuration\n          to happen based on credentials.\n\n        * The system's hostname can be configured via the systemd.hostname\n          system credential.\n\n        * The systemd binary will no longer chainload sysvinit's \"telinit\"\n          binary when called under the init/telinit name on a system that isn't\n          booted with systemd. This previously has been supported to make sure\n          a distribution that has both init systems installed can reasonably\n          switch from one to the other via a simple reboot. Distributions\n          apparently have lost interest in this, and the functionality has not\n          been supported on the primary distribution this was still intended\n          for a long time, and hence has been removed now.\n\n        * A new concept called \"capsules\" has been introduced. \"Capsules\" wrap\n          additional per-user service managers, whose users are transient and\n          are only defined as long as the service manager is running. (This is\n          implemented via DynamicUser=1), allowing a user manager to be used to\n          manage a group of processes without needing to create an actual user\n          account. These service managers run with home directories of\n          /var/lib/capsules/<capsule-name> and can contain regular services and\n          other units. A capsule is started via a simple \"systemctl start\n          capsule@<name>.service\". See the capsule@.service(5) man page for\n          further details.\n\n          Various systemd tools (including, and most importantly, systemctl and\n          systemd-run) have been updated to interact with capsules via the new\n          \"--capsule=\"/\"-C\" switch.\n\n        * .socket units gained a new setting PassFileDescriptorsToExec=, taking\n          a boolean value. If set to true the file descriptors the socket unit\n          encapsulates are passed to the ExecStartPost=, ExecStopPre=,\n          ExecStopPost= using the usual $LISTEN_FDS interface. This may be used\n          for doing additional initializations on the sockets once they are\n          allocated. (For example, to install an additional eBPF program on\n          them).\n\n        * The .socket setting MaxConnectionsPerSource= (which so far put a\n          limit on concurrent connections per IP in Accept=yes socket units),\n          now also has an effect on AF_UNIX sockets: it will put a limit on the\n          number of simultaneous connections from the same source UID (as\n          determined via SO_PEERCRED). This is useful for implementing IPC\n          services in a simple Accept=yes mode.\n\n        * The service manager will now maintain a counter of soft reboot cycles\n          the system went through. It may be queried via the D-Bus APIs.\n\n        * systemd's execution logic now supports the new pidfd_spawn() API\n          introduced by glibc 2.39, which allows us to invoke a subprocess in a\n          target cgroup and get a pidfd back in a single operation.\n\n        * systemd/PID¬†1 will now send an additional sd_notify() message to its\n          supervising VMM or container manager reporting the selected hostname\n          (\"X_SYSTEMD_HOSTNAME=\") and machine ID (\"X_SYSTEMD_MACHINE_ID=\") at\n          boot. Moreover, the service manager will send additional sd_notify()\n          messages (\"X_SYSTEMD_UNIT_ACTIVE=\") whenever a target unit is\n          reached. This can be used by VMMs/container managers to schedule\n          access to the system precisely. For example, the moment a system\n          reports \"ssh-access.target\" being reached a VMM/container manager\n          knows it can now connect to the system via SSH. Finally, a new\n          sd_notify() message (\"X_SYSTEMD_SIGNALS_LEVEL=2\") is sent the moment\n          PID¬†1 has successfully completed installation of its various UNIX\n          process signal handlers (i.e. the moment where SIGRTMIN+4 sent to\n          PID¬†1 will start to have the effect of shutting down the system\n          cleanly). X_SYSTEMD_SHUTDOWN= is sent shortly before the system shuts\n          down, and carries a string identifying the type of shutdown,\n          i.e. \"poweroff\", \"halt\", \"reboot\". X_SYSTEMD_REBOOT_PARAMETER= is\n          sent at the same time and carries the string passed to \"systemctl\n          --reboot-argument=\" if there was one.\n\n        * New D-Bus properties ExecMainHandoffTimestamp and\n          ExecMainHandoffTimestampMonotonic are now published by services\n          units. This timestamp is taken as the very last operation before\n          handing off control to invoked binaries. This information is\n          available for other unit types that fork off processes (i.e. mount,\n          swap, socket units), but currently only via \"systemd-analyze dump\".\n\n        * An additional timestamp is now taken by the service manager when a\n          system shutdown operation is initiated. It can be queried via D-Bus\n          during the shutdown phase. It's passed to the following service\n          manager invocation on soft reboots, which will then use it to log the\n          overall \"grey-out\" time of the soft reboot operation, i.e. the time\n          when the shutdown began until the system is fully up again.\n\n        * \"systemctl status\" will now display the invocation ID in its usual\n          output, i.e. the 128bit ID uniquely assigned to the current runtime\n          cycle of the unit. The ID has been supported for a long time, but is\n          now more prominently displayed, as it is a very useful handle to a\n          specific invocation of a service.\n\n        * systemd now generates a new \"taint\" string \"unmerged-bin\" for systems\n          that have /usr/bin/ and /usr/sbin/ separate. It's generally\n          recommended to make the latter a symlink to the former these days.\n\n        * A new systemd.crash_action= kernel command line option has been added\n          that configures what to do after the system manager (PID 1) crashes.\n          This can also be configured through CrashAction= in systemd.conf.\n\n        * \"systemctl kill\" now supports --wait which will make the command wait\n          until the signalled services terminate.\n\n        Journal:\n\n        * systemd-journald can now forward journal entries to a socket\n          (AF_INET, AF_INET6, AF_UNIX, or AF_VSOCK). The socket can be\n          specified in journald.conf via a new option ForwardToSocket= or via\n          the 'journald.forward_to_socket' credential. Log records are sent in\n          the Journal Export Format. A related setting MaxLevelSocket= has been\n          added to control the maximum log levels for the messages sent to this\n          socket.\n\n        * systemd-journald now also reads the journal.storage credential when\n          determining where to store journal files.\n\n        * systemd-vmspawn gained a new --forward-journal= option to forward the\n          virtual machine's journal entries to the host. This is done over a\n          AF_VSOCK socket, i.e. it does not require networking in the guest.\n\n        * journalctl gained option '-i' as a shortcut for --file=.\n\n        * journalctl gained a new -T/--exclude-identifier= option to filter\n          out certain syslog identifiers.\n\n        * journalctl gained a new --list-namespaces option.\n\n        * systemd-journal-remote now also accepts AF_VSOCK and AF_UNIX sockets\n          (so it can be used to receive entries forwarded by systemd-journald).\n\n        * systemd-journal-gatewayd allows restricting the time range of\n          retrieved entries with a new \"realtime=[<since>]:[<until>]\" URL\n          parameter.\n\n        * systemd-cat gained a new option --namespace= to specify the target\n          journal namespace to which the output shall be connected.\n\n        * systemd-bsod gained a new option --tty= to specify the output TTY\n\n        Device Management:\n\n        * /dev/ now contains symlinks that combine by-path and by-{label,uuid}\n          information:\n\n              /dev/disk/by-path/<path>/by-<label|uuid|‚Ä¶>/<label|uuid|‚Ä¶>\n\n          This allows distinguishing partitions with identical contents on\n          multiple storage devices. This is useful, for example, when copying\n          raw disk contents between devices.\n\n        * systemd-udevd now creates persistent /dev/media/by-path/ symlinks for\n          media controllers. For example, the uvcvideo driver may create\n          /dev/media0 which will be linked as\n          /dev/media/by-path/pci-0000:04:00.3-usb-0:1:1.0-media-controller.\n\n        * A new unit systemd-udev-load-credentials.service has been added\n          to pick up udev.conf drop-ins and udev rules from credentials.\n\n        * 'udevadm test' and 'udevadm test-builtin' commands now do not change\n          any settings; sysfs attributes, sysctls, udev database and so on.\n          E.g. 'udevadm test-builtin net_setup_link /sys/class/net/INTERFACE'\n          does not change any interface settings, but only prints which .link\n          file matches the interface. So, even privileged users can safely\n          invoke the commands.\n\n        * An allowlist/denylist may be specified to filter which sysfs\n          attributes are used when crafting network interface names. Those\n          lists are stored as hwdb entries\n            ID_NET_NAME_ALLOW_<sysfsattr>=0|1\n          and\n            ID_NET_NAME_ALLOW=0|1.\n\n          The goal is to avoid unexpected changes to interface names when the\n          kernel is updated and new sysfs attributes become visible.\n\n        * A new unit tpm2.target has been added to provide a synchronization\n          point for units which expect the TPM hardware to be available. A new\n          generator \"systemd-tpm2-generator\" has been added that will insert\n          this target whenever it detects that the firmware has initialized a\n          TPM, but Linux hasn't loaded a driver for it yet.\n\n        * systemd-backlight now properly supports numbered devices which the\n          kernel creates to avoid collisions in the leds subsystem.\n\n        * systemd-hwdb update operation can be disabled with a new environment\n          variable SYSTEMD_HWDB_UPDATE_BYPASS=1.\n\n        systemd-hostnamed:\n\n        * systemd-hostnamed now exposes the machine ID and boot ID via\n          D-Bus. It also exposes the hosts AF_VSOCK CID, if available.\n\n        * systemd-hostnamed now provides a basic Varlink interface.\n\n        * systemd-hostnamed exports the full data in os-release(5) and\n          machine-info(5) via D-Bus and Varlink.\n\n        * hostnamectl now shows the system's product UUID and hardware serial\n          number if known.\n\n        Network Management:\n\n        * systemd-networkd now provides a basic Varlink interface.\n\n        * systemd-networkd's ARP proxy support gained a new option to configure\n          a private VLAN variant of the proxy ARP supported by the kernel under\n          the name IPv4ProxyARPPrivateVLAN=.\n\n        * systemd-networkd now exports the NamespaceId and NamespaceNSID\n          properties via D-Bus and Varlink. (which expose the inode and NSID of\n          the network namespace the networkd instance manages)\n\n        * systemd-networkd now supports IPv6RetransmissionTimeSec= and\n          UseRetransmissionTime= settings in .network files to configure\n          retransmission time for IPv6 neighbor solicitation messages.\n\n        * networkctl gained new verbs 'mask' and 'unmask' for masking networkd\n          configuration files such as .network files.\n\n        * 'networkctl edit --runtime' allows editing volatile configuration\n          under /run/systemd/network/.\n\n        * The implementation behind TTLPropagate= network setting has been\n          removed and the setting is now ignored.\n\n        * systemd-network-generator will now pick up .netdev/.link/.network/\n          networkd.conf configuration from system credentials.\n\n        * systemd-networkd will now pick up wireguard secrets from\n          credentials.\n\n        * systemd-networkd's Varlink API now supports enumerating LLDP peers.\n\n        * .link files now support new Property=, ImportProperty=,\n          UnsetProperty= fields for setting udev properties on a link.\n\n        * The various .link files that systemd ships for interfaces that are\n          supposed to be managed by systemd-networkd only now carry a\n          ID_NET_MANAGED_BY=io.systemd.Network udev property ensuring that\n          other network management solutions honouring this udev property do\n          not come into conflict with networkd, trying to manage these\n          interfaces.\n\n        * .link files now support a new ReceivePacketSteeringCPUMask= setting\n          for configuring which CPUs to steer incoming packets to.\n\n        * The [Network] section in .network files gained a new setting\n          UseDomains=, which is a single generic knob for controlling the\n          settings of the same name in the [DHCPv4], [DHCPv6] and\n          [IPv6AcceptRA].\n\n        * The 99-default.link file we ship by default (that defines the policy\n          for all network devices to which no other .link file applies) now\n          lists \"mac\" among AlternativeNamesPolicy=. This means that network\n          interfaces will now by default gain an additional MAC-address based\n          alternative device name. (i.e. enx‚Ä¶)\n\n        systemd-nspawn:\n\n        * systemd-nspawn now provides a /run/systemd/nspawn/unix-export/\n          directory where the container payload can expose AF_UNIX sockets to\n          allow them to be accessed from outside.\n\n        * systemd-nspawn will tint the terminal background for containers in a\n          blueish color. This can be controller with the new --background=\n          switch or the new $SYSTEMD_TINT_BACKGROUND environment variable.\n\n        * systemd-nspawn gained support for the 'owneridmap' option for --bind=\n          mounts to map the target directory owner from inside the container to\n          the owner of the directory bound from the host filesystem.\n\n        * systemd-nspawn now supports moving Wi-Fi network devices into a\n          container, just like other network interfaces.\n\n        systemd-resolved:\n\n        * systemd-resolved now reads RFC 8914 EDE error codes provided by\n          upstream DNS services.\n\n        * systemd-resolved and resolvectl now support RFC 9460 SVCB and HTTPS\n          records, as well as RFC 2915 NAPTR records.\n\n        * resolvectl gained a new option --relax-single-label= to allow\n          querying single-label hostnames via unicast DNS on a per-query basis.\n\n        * systemd-resolved's Varlink IPC interface now supports resolving\n          DNS-SD services as well as an API for resolving raw DNS RRs.\n\n        * systemd-resolved's .dnssd DNS_SD service description files now\n          support DNS-SD \"subtypes\" via the new SubType= setting.\n\n        * systemd-resolved's configuration may now be reloaded without\n          restarting the service. (i.e. \"systemctl reload systemd-resolved\" is\n          now supported)\n\n        SSH Integration:\n\n        * An sshd_config drop-in to allow ssh keys acquired via userdbctl (for\n          example expose by homed accounts) to be used for authorization of\n          incoming SSH connections. This uses the AuthorizedKeysCommand stanza\n          of sshd_config. Note that sshd only allows a single command to be\n          configured this way, hence this drop-in might conflict with other\n          uses of the logic. It is possible to chainload another, similar tool\n          of another subsystem via the --chain switch of userdbctl, to support\n          both in parallel. See the \"INTEGRATION WITH SSH\" section in\n          userdbctl(1) for details on this. Our recommendation how to combine\n          other subsystem's use of the SSH authorized keys logic with systemd's\n          userbctl functionality however is to implement the APIs described\n          here: https://systemd.io/USER_GROUP_API ‚Äì in that case this newly\n          added sshd_config integration would just work and do the right thing\n          for all backends.\n\n        * A small new unit generator \"systemd-ssh-generator\" has been added. It\n          checks if the sshd binary is installed. If so, it binds it via\n          per-connection socket activation to various sockets depending on the\n          execution context:\n\n            ‚Ä¢ If the system is run in a VM providing AF_VSOCK support, it\n              automatically binds sshd to AF_VSOCK port 22.\n\n            ‚Ä¢ If the system is invoked as a full-OS container and the container\n              manager pre-mounts a directory /run/host/unix-export/, it will\n              bind sshd to an AF_UNIX socket /run/host/unix-export/ssh. The\n              idea is the container manager bind mounts the directory to an\n              appropriate place on the host as well, so that the AF_UNIX socket\n              may be used to easily connect from the host to the container.\n\n            ‚Ä¢ sshd is also bound to an AF_UNIX socket\n              /run/ssh-unix-local/socket, which may be to use ssh/sftp in a\n              \"sudo\"-like fashion to access resources of other local users.\n\n            ‚Ä¢ Via the kernel command line option \"systemd.ssh_listen=\" and the\n              system credential \"ssh.listen\" sshd may be bound to additional,\n              explicitly configured options, including AF_INET/AF_INET6 ports.\n\n          In particular the first two mechanisms should make dealing with local\n          VMs and full OS containers a lot easier, as SSH connections will\n          *just* *work* from the host ‚Äì even if no networking is available\n          whatsoever.\n\n          systemd-ssh-generator optionally generates a per-connection\n          socket activation service file wrapping sshd. This is only done if\n          the distribution does not provide one on its own under the name\n          \"sshd@.service\". The generated unit only works correctly if the SSH\n          privilege separation (\"privsep\") directory exists. Unfortunately\n          distributions vary wildly where they place this directory. An\n          incomprehensive list:\n\n            ‚Ä¢ /usr/share/empty.sshd/  (new fedora)\n            ‚Ä¢ /var/empty/\n            ‚Ä¢ /var/empty/sshd/\n            ‚Ä¢ /run/sshd/              (debian/ubuntu?)\n\n          If the SSH privsep directory is placed below /var/ or /run/ care\n          needs to be taken that the directory is created automatically at boot\n          if needed, since these directories possibly or always come up\n          empty. This can be done via a tmpfiles.d/ drop-in. You may use the\n          \"sshdprivsepdir\" meson option provided by systemd to configure the\n          directory, in case you want systemd to create the directory as needed\n          automatically, if your distribution does not cover this natively.\n\n          Recommendations to distributions, in order to make things just work:\n\n            ‚Ä¢ Please provide a per-connection SSH service file under the name\n              \"sshd@.service\".\n\n            ‚Ä¢ Please move the SSH privsep dir into /usr/ (so that it is truly\n              immutable on image-based operating systems, is strictly under\n              package manager control, and never requires recreation if the\n              system boots up with an empty /run/ or /var/).\n\n            ‚Ä¢ As an extension of this: please consider following Fedora's lead\n              here, and use /usr/share/empty.sshd/ to minimize needless\n              differences between distributions.\n\n            ‚Ä¢ If your distribution insists on placing the directory in /var/ or\n              /run/ then please at least provide a tmpfiles.d/ drop-in to\n              recreate it automatically at boot, so that the sshd binary just\n              works, regardless in which context it is called.\n\n        * A small tool \"systemd-ssh-proxy\" has been added, which is supposed to\n          act as counterpart to \"systemd-ssh-generator\". It's a small plug-in\n          for the SSH client (via ProxyCommand/ProxyUseFdpass) to allow it to\n          connect to AF_VSOCK or AF_UNIX sockets. Example: \"ssh vsock/4711\"\n          connects to a local VM with cid 4711, or \"ssh\n          unix/run/ssh-unix-local/socket\" to connect to the local host via the\n          AF_UNIX socket /run/ssh-unix-local/socket.\n\n        systemd-boot and systemd-stub and Related Tools:\n\n        * TPM 1.2 PCR measurement support has been removed from systemd-stub.\n          TPM 1.2 is obsolete and ‚Äì due to the (by today's standards) weak\n          cryptographic algorithms it only supports ‚Äì does not actually provide\n          the security benefits it's supposed to provide. Given that the rest\n          of systemd's codebase never supported TPM 1.2, the support has now\n          been removed from systemd-stub as well.\n\n        * systemd-stub will now measure its payload via the new EFI\n          Confidential Computing APIs (CC), in addition to the pre-existing\n          measurements to TPM.\n\n        * confexts are loaded by systemd-stub from the ESP as well.\n\n        * kernel-install gained support for --root= for the 'list' verb.\n\n        * bootctl now provides a basic Varlink interface and can be run as a\n          daemon via a template unit.\n\n        * systemd-measure gained new options --certificate=, --private-key=,\n          and --private-key-source= to allow using OpenSSL's \"engines\" or\n          \"providers\" as the signing mechanism to use when creating signed\n          TPM2 PCR measurement values.\n\n        * ukify gained support for signing of PCR signatures via OpenSSL's\n          engines and providers.\n\n        * ukify now supports zboot kernels.\n\n        * systemd-boot now supports passing additional kernel command line\n          switches to invoked kernels via an SMBIOS Type #11 string\n          \"io.systemd.boot.kernel-cmdline-extra\". This is similar to the\n          pre-existing support for this in systemd-stub, but also applies to\n          Type #1 Boot Loader Specification Entries.\n\n        * systemd-boot's automatic SecureBoot enrollment support gained support\n          for enrolling \"dbx\" too (Previously, only db/KEK/PK enrollment was\n          supported). It also now supports UEFI \"Custom\" and \"Audit\" modes.\n\n        * The pcrlock policy is saved in an unencrypted credential file\n          \"pcrlock.<entry-token>.cred\" under XBOOTLDR/ESP in the\n          /loader/credentials/ directory. It will be picked up at boot by\n          systemd-stub and passed to the initrd, where it can be used to unlock\n          the root file system.\n\n        * systemd-pcrlock gained an --entry-token= option to configure the\n          entry-token.\n\n        * systemd-pcrlock now provides a basic Varlink interface and can be run\n          as a daemon via a template unit.\n\n        * systemd-pcrlock's TPM nvindex access policy has been modified, this\n          means that previous pcrlock policies stored in nvindexes are\n          invalidated. They must be removed (systemd-pcrlock remove-policy) and\n          recreated (systemd-pcrlock make-policy). For the time being\n          systemd-pcrlock remains an experimental feature, but it is expected\n          to become stable in the next release, i.e. v257.\n\n        * systemd-pcrlock's --recovery-pin= switch now takes three values:\n          \"hide\", \"show\", \"query\". If \"show\" is selected the automatically\n          generated recovery PIN is shown to the user. If \"query\" is selected\n          then the PIN is queried from the user.\n\n        * sd-stub gained support for the new \".ucode\" PE section in UKIs, that\n          may contain CPU microcode data. When control is handed over to the\n          Linux kernel this data is prepended to the set of initrds passed.\n\n        systemd-run/run0:\n\n        * systemd-run is now a multi-call binary. When invoked as 'run0', it\n          provides as interface similar to 'sudo', with all arguments starting\n          at the first non-option parameter being treated the command to invoke\n          as root. Unlike 'sudo' and similar tools, it does not make use of\n          setuid binaries or other privilege escalation methods, but instead\n          runs the specified command as a transient unit, which is started by\n          the system service manager, so privileges are dropped, rather than\n          gained, thus implementing a much more robust and safe security\n          model. As usual, authorization is managed via Polkit.\n\n        * systemd-run/run0 will now tint the terminal background on supported\n          terminals: in a reddish tone when invoking a root service, in a\n          yellowish tone otherwise. This may be controlled and turned off via\n          the new --background= switch or the new $SYSTEMD_TINT_BACKGROUND\n          environment variable.\n\n        * systemd-run gained a new option '--ignore-failure' to suppress\n          command failures.\n\n        Command-line tools:\n\n        * 'systemctl edit --stdin' allows creation of unit files and drop-ins\n          with contents supplied via standard input. This is useful when creating\n          configuration programmatically; the tool takes care of figuring out\n          the file name, creating any directories, and reloading the manager\n          afterwards.\n\n        * 'systemctl disable --now' and 'systemctl mask --now' now work\n          correctly with template units.\n\n        * 'systemd-analyze architectures' lists known CPU architectures.\n\n        * 'systemd-analyze --json=‚Ä¶' is supported for 'architectures',\n          'capability', 'exit-status'.\n\n        * 'systemd-tmpfiles --purge' will purge (remove) all files and\n          directories created via tmpfiles.d configuration.\n\n        * systemd-id128 gained new options --no-pager, --no-legend, and\n          -j/--json=.\n\n        * hostnamectl gained '-j' as shortcut for '--json=pretty' or\n          '--json=short'.\n\n        * loginctl now supports -j/--json=.\n\n        * resolvectl now supports -j/--json= for --type=.\n\n        * systemd-tmpfiles gained a new option --dry-run to print what would be\n          done without actually taking action.\n\n        * varlinkctl gained a new --collect switch to collect all responses of\n          a method call that supports multiple replies and turns it into a\n          single JSON array.\n\n        * systemd-dissect gained a new --make-archive option to generate an\n          archive file (tar.gz and similar) from a disk image.\n\n        systemd-vmspawn:\n\n        * systemd-vmspawn gained a new --firmware= option to configure or list\n          firmware definitions for Qemu, a new --tpm= option to enable or\n          disable the use of a software TPM, a new --linux= option to specify a\n          kernel binary for direct kernel boot, a new --initrd= option to\n          specify an initrd for direct kernel boot, a new -D/--directory option\n          to use a plain directory as the root file system, a new\n          --private-users option similar to the one in systemd-nspawn, new\n          options --bind= and --bind-ro= to bind part of the host's file system\n          hierarchy into the guest, a new --extra-drive= option to attach\n          additional storage, and -n/--network-tap/--network-user-mode to\n          configure networking.\n\n        * A new systemd-vmspawn@.service can be used to launch systemd-vmspawn\n          as a service.\n\n        * systemd-vmspawn gained the new --console= and --background= switches\n          that control how to interact with the VM. As before, by default an\n          interactive terminal interface is provided, but now with a background\n          tinted with a greenish hue.\n\n        * systemd-vmspawn can now register its VMs with systemd-machined,\n          controlled via the --register= switch.\n\n        * machinectl's start command (and related) can now invoke images either\n          as containers via `systemd-nspawn` (switch is --runner=nspawn, the\n          default) or as VMs via `systemd-vmspawn` (switch is --runner=vmspawn,\n          or short -V).\n\n        * systemd-vmspawn now supports two switches --pass-ssh-key= and\n          --ssh-key-type= to optionally set up transient SSH keys to pass to the\n          invoked VMs in order to be able to SSH into them once booted.\n\n        * systemd-vmspawn will now enable various \"HyperV enlightenments\" and\n          the \"VM Generation ID\" on the VMs.\n\n        * A new environment variable $SYSTEMD_VMSPAWN_QEMU_EXTRA may carry\n          additional qemu command line options to pass to qemu.\n\n        * systemd-machined gained a new GetMachineSSHInfo() D-Bus method that is\n          used by systemd-vmspawn to fetch the information needed to ssh into the\n          machine.\n\n        * systemd-machined gained a new Varlink interface that is used by\n          systemd-vmspawn to register machines with additional information and\n          metadata.\n\n        systemd-repart:\n\n        * systemd-repart gained new options --generate-fstab= and\n          --generate-crypttab= to write out fstab and crypttab files matching the\n          generated partitions.\n\n        * systemd-repart gained a new option --private-key-source= to allow\n          using OpenSSL's \"engines\" or \"providers\" as the signing mechanism to\n          use when creating verity signature partitions.\n\n        * systemd-repart gained a new DefaultSubvolume= setting in repart.d/\n          drop-ins that allow configuring the default btrfs subvolume for newly\n          formatted btrfs file systems.\n\n        Libraries:\n\n        * libsystemd gained new call sd_bus_creds_new_from_pidfd() to get a\n          credentials object for a pidfd and sd_bus_creds_get_pidfd_dup() to\n          retrieve the pidfd from a credentials object.\n\n        * sd-bus' credentials logic will now also acquire peer's UNIX group\n          lists and peer's pidfd if supported and requested.\n\n        * RPM macro %_kernel_install_dir has been added with the path\n          to the directory for kernel-install plugins.\n\n        * The liblz4, libzstd, liblzma, libkmod, libgcrypt dependencies have\n          been changed from regular shared library dependencies into dlopen()\n          based ones.\n\n          Note that this means that those libraries might not be automatically\n          pulled in when ELF dependencies are resolved. In particular lack of\n          libkmod might cause problems with boot. This affects dracut¬†<=¬†101,\n          see https://github.com/dracut-ng/dracut-ng/commit/04b362d713235459cf.\n\n        * systemd ELF binaries that use libraries via dlopen() are now built with\n          a new ELF header note section, following a new specification defined at\n          docs/ELF_DLOPEN_METADATA.md, that provides information about which\n          sonames are loaded and used if found at runtime. This allows tools and\n          packagers to programmatically discover the list of optional\n          dependencies used by all systemd ELF binaries. A parser with packaging\n          integration tools is available at\n          https://github.com/systemd/package-notes\n\n        * The sd-journal API gained a new call\n          sd_journal_stream_fd_with_namespace() which is just like\n          sd_journal_stream_fd() but creates a log stream targeted at a\n          specific log namespace.\n\n        * The sd-id128 API gained a new API call\n          sd_id128_get_invocation_app_specific() for acquiring an app-specific\n          ID that is derived from the service invocation ID.\n\n        * The sd-event API gained a new API call\n          sd_event_source_get_inotify_path() that returns the file system path\n          an inotify event source was created for.\n\n        systemd-cryptsetup/systemd-cryptenroll:\n\n        * The device node argument to systemd-cryptenroll is now optional. If\n          omitted it will be derived automatically from the backing block\n          device of /var/ (which quite likely is the same as the root file\n          system, hence effectively means if you don't specify things otherwise\n          the tool will now default to enrolling a key into the root file\n          system's LUKS device).\n\n        * systemd-cryptenroll can now enroll directly with a PKCS11 public key\n          (instead of a certificate).\n\n        * systemd-cryptsetup/systemd-cryptenroll now may lock a disk against a\n          PKCS#11 provided EC key (before it only supported RSA).\n\n        * systemd-cryptsetup gained support for crypttab option\n          link-volume-key= to link the volume key into the kernel keyring when\n          the volume is opened.\n\n        * systemd-cryptenroll will no longer enable Dictionary Attack\n          Protection (i.e. turn on NO_DA) for TPM enrollments that do not\n          involve a PIN. DA should not be necessary in that case (since key\n          entropy is high enough to make this unnecessary), but risks\n          accidental lock-out in case of unexpected PCR changes.\n\n        * systemd-cryptenroll now supports enrolling a new slot while unlocking\n          the old slot via TPM2 (previously unlocking only worked via password\n          or FIDO2).\n\n        Documentation:\n\n        * The remaining documentation that was on\n          https://freedesktop.org/wiki/Software/systemd/ has been moved to\n          https://systemd.io/.\n\n        * A new text describing the VM integration interfaces of systemd has\n          been added:\n\n          https://systemd.io/VM_INTERFACE\n\n        * The sd_notify() man page has gained examples with C and Python code\n          that shows how to implement the interface in those languages without\n          involving libsystemd.\n\n        systemd-homed, systemd-logind, systemd-userdbd:\n\n        * systemd-homed now supports unlocking of home directories when logging\n          in via SSH. Previously home directories needed to be unlocked before\n          an SSH login is attempted.\n\n        * JSON User Records have been extended with a separate public storage\n          area called \"User Record Blob Directories\". This is intended to store\n          the user's background image, avatar picture, and other similar items\n          which are too large to fit into the User Record itself.\n\n          systemd-homed, userdbctl, and homectl gained support for blob\n          directories. homectl gained --avatar= and --login-background= to\n          control two specific items of the blob directories.\n\n        * A new \"additionalLanguages\" field has been added to JSON user records\n          (as supported by systemd-homed and systemd-userdbd), which is closely\n          related to the pre-existing \"preferredLanguage\", and allows\n          specifying multiple additional languages for the user account. It is\n          used to initialize the $LANGUAGES environment variable when used.\n\n        * A new pair of \"preferredSessionType\" and \"preferredSessionLauncher\"\n          fields have been added to JSON user records, that may be used to\n          control which kind of desktop session to preferable activate on\n          logins of the user.\n\n        * homectl gained a new verb 'firstboot', and a new\n          systemd-homed-firstboot.service unit uses this verb to create users\n          in a first boot environment, either from system credentials or by\n          querying interactively.\n\n        * systemd-logind now supports a new \"background-light\" session class\n          which does not pull in the user@.service unit. This is intended in\n          particular for lighter weight per-user cron jobs which do require any\n          per-user service manager to be around.\n\n        * The per-user service manager will now be tracked as a distinct \"manager\"\n          session type among logind sessions of each user.\n\n        * homectl now supports an --offline mode, by which certain account\n          properties can be changed without unlocking the home directory.\n\n        * systemd-logind gained a new\n          org.freedesktop.login1.Manager.ListSessionsEx() method that provides\n          additional metadata compared to ListSessions(). loginctl makes use of\n          this to list additional fields in list-sessions.\n\n        * systemd-logind gained a new org.freedesktop.login1.Manager.Sleep()\n          method that automatically redirects to SuspendThenHibernate(),\n          Suspend(), HybridSleep(), or Hibernate(), depending on what is\n          supported and configured, a new configuration setting SleepOperation=,\n          and an accompanying helper method\n          org.freedesktop.login1.Manager.CanSleep() and property\n          org.freedesktop.login1.Manager.SleepOperation.\n\n          'systemctl sleep' calls the new method to automatically put the\n          machine to sleep in the most appropriate way.\n\n        Credential Management:\n\n        * systemd-creds now provides a Varlink IPC API for encrypting and\n          decrypting credentials.\n\n        * systemd-creds' \"tpm2-absent\" key selection has been renamed to\n          \"null\", since that's what it actually does: \"encrypt\" and \"sign\"\n          with a fixed null key. --with-key=null should only be used in very\n          specific cases, as it provides zero integrity or confidentiality\n          protections. (i.e. it's only safe to use as fallback in environments\n          lacking both a TPM and access to the root fs to use the host\n          encryption key, or when integrity is provided some other way.)\n\n        * systemd-creds gained a new switch --allow-null. If specified, the\n          \"decrypt\" verb will decode encrypted credentials that use the \"null\"\n          key (by default this is refused, since using the \"null\" key defeats\n          the authenticated encryption normally done).\n\n        Suspend & Hibernate:\n\n        * The sleep.conf configuration file gained a new MemorySleepMode=\n          setting for configuring the sleep mode in more detail.\n\n        * A tiny new service systemd-hibernate-clear.service has been added\n          which clears hibernation information from the HibernateLocation EFI\n          variable, in case the resume device is gone. Normally, this variable\n          is supposed to be cleaned up by the code that initiates the resume\n          from hibernation image. But when the device is missing and that code\n          doesn't run, this service will now do the necessary work, ensuring\n          that no outdated hibernation image information remains on subsequent\n          boots.\n\n        Unprivileged User Namespaces & Mounts:\n\n        * A small new service systemd-nsresourced.service has been added. It\n          provides a Varlink IPC API that assigns a free, transiently allocated\n          64K UID/GID range to an uninitialized user namespace a client\n          provides. It may be used to implement unprivileged container managers\n          and other programs that need dynamic user ID ranges. It also provides\n          interfaces to then delegate mount file descriptors, control groups\n          and network interfaces to user namespaces set up this way.\n\n        * A small new service systemd-mountfsd.service has been added. It\n          provides a Varlink IPC API for mounting DDI images, and returning a set\n          of mount file descriptors for it. If a user namespace fd is provided\n          as input, then the mounts are registered with the user namespace. To\n          ensure trust in the image it must provide Verity information (or\n          alternatively interactive polkit authentication is required).\n\n        * The systemd-dissect tool now can access DDIs fully unprivileged by\n          using systemd-nsresourced/systemd-mountfsd.\n\n        * If the service manager runs unprivileged (i.e. systemd --user) it now\n          supports RootImage= for accessing DDI images, also implemented via\n          the systemd-nsresourced/systemd-mountfsd.\n\n        * systemd-nspawn may now operate without privileges, if a suitable DDI\n          is provided via --image=, again implemented via\n          systemd-nsresourced/systemd-mountfsd.\n\n        Other:\n\n        * timedatectl and machinectl gained option '-P', an alias for\n          '--value --property=‚Ä¶'.\n\n        * Various tools that pretty-print config files will now highlight\n          configuration directives.\n\n        * varlinkctl gained support for the \"ssh:\" transport. This requires\n          OpenSSH 9.4 or newer.\n\n        * systemd-sysext gained support for enabling system extensions in\n          mutable fashion, where a writeable upperdir is stored under\n          /var/lib/extensions.mutable/, and a new --mutable= option to\n          configure this behaviour. An \"ephemeral\" mode is not also supported\n          where the mutable layer is configured to be a tmpfs that is\n          automatically released when the system extensions are reattached.\n\n        * Coredumps are now retained for two weeks by default (instead of three\n          days, as before).\n\n        * portablectl --copy= parameter gained a new 'mixed' argument, that will\n          result in resources owned by the OS (e.g.: portable profiles) to be linked\n          but resources owned by the portable image (e.g.: the unit files and the\n          images themselves) to be copied.\n\n        * systemd will now register MIME types for various of its file types\n          (e.g. journal files, DDIs, encrypted credentials ‚Ä¶) via the XDG\n          shared-mime-info infrastructure. (Files of these types will thus be\n          recognized as their own thing in desktop file managers such as GNOME\n          Files.)\n\n        * systemd-dissect will now show the detected sector size of a given DDI\n          in its default output.\n\n        * systemd-portabled now generates recognizable structured log messages\n          whenever a portable service is attached or detached.\n\n        * Verity signature checking in userspace (i.e. checking against\n          /etc/verity.d/ keys) when activating DDIs can now be turned on/off\n          via a kernel command line option systemd.allow_userspace_verity= and\n          an environment variable SYSTEMD_ALLOW_USERSPACE_VERITY=.\n\n        * ext4/xfs file system quota handling has been reworked, so that\n          quotacheck and quotaon are now invoked as per-file-system templated\n          services (as opposed to single system-wide singletons), similar in\n          style to the fsck, growfs, pcrfs logic. This means file systems with\n          quota enabled can now be reasonably enabled at runtime of the system,\n          not just at boot.\n\n        * \"systemd-analyze dot\" will now also show BindsTo= dependencies.\n\n        * systemd-debug-generator gained the ability add in arbitrary units\n          based on them being passed in via system credentials.\n\n        * A new kernel command-line option systemd.default_debug_tty= can be\n          used to specify the TTY for the debug shell, independently of\n          enabling or disabling it.\n\n        * portablectl gained a new --clean switch that clears a portable\n          service's data (cache, logs, state, runtime, fdstore) when detaching\n          it.\n\n        Contributions from: A¬†S¬†Alam, AKHIL¬†KUMAR,\n        Abraham¬†Samuel¬†Adekunle, Adrian¬†Vovk, Adrian¬†Wannenmacher,\n        Alan¬†Liang, Alberto¬†Planas, Alexander¬†Zavyalov, Anders¬†Jonsson,\n        Andika¬†Triwidada, Andres¬†Beltran, Andrew¬†Sayers,\n        Antonio¬†Alvarez¬†Feijoo, Arian¬†van¬†Putten, Arthur¬†Zamarin,\n        Artur¬†Pak, AtariDreams, Benjamin¬†Franzke, Bernhard¬†M.¬†Wiedemann,\n        Black-Hole1, Bryan¬†Jacobs, Burak¬†Gerz, Carlos¬†Garnacho,\n        Chandra¬†Pratap, Chris¬†Hofstaedtler, Chris¬†Packham, Chris¬†Simons,\n        Christian¬†G√∂ttsche, Christian¬†Wesselhoeft, Clayton¬†Craft,\n        Colin¬†Geniet, Colin¬†Walters, Colin¬†Watson, Costa¬†Tsaousis,\n        Cristian¬†Rodr√≠guez, Daan¬†De¬†Meyer, Damien¬†Challet, Dan¬†Streetman,\n        Daniel¬†Winzen, Daniele¬†Medri, David¬†Seifert, David¬†Tardon,\n        David¬†Venhoek, Diego¬†Viola, Dionna¬†Amalie¬†Glaze,\n        Dmitry¬†Konishchev, Dmitry¬†V.¬†Levin, Edson¬†Juliano¬†Drosdeck,\n        Eisuke¬†Kawashima, Eli¬†Schwartz, Emanuele¬†Giuseppe¬†Esposito,\n        Eric¬†Daigle, Evgeny¬†Vereshchagin, Felix¬†Riemann,\n        Fernando¬†Fernandez¬†Mancera, Florian¬†Fainelli, Florian¬†Schmaus,\n        Franck¬†Bui, Frantisek¬†Sumsal, Friedrich¬†Altheide,\n        Gabr√≠el¬†Arth√∫r¬†P√©tursson, Ga√´l¬†Donval, Georges¬†Basile¬†Stavracas¬†Neto,\n        Gerd¬†Hoffmann, GNOME Foundation, Guido¬†Leenders,\n        Guilhem¬†Lettron, G√∂ran¬†Uddeborg, Hans¬†de¬†Goede, Harald¬†Brinkmann,\n        Heinrich¬†Schuchardt, Helmut¬†Grohne, Henry¬†Li, Heran¬†Yang,\n        Holger¬†Assmann, Ivan¬†Kruglov, Ivan¬†Shapovalov, Jakub¬†Sitnicki,\n        James¬†Muir, Jan¬†Engelhardt, Jan¬†Macku, Jarne¬†F√∂rster, Jeff¬†King,\n        Jian-Hong¬†Pan, JmbFountain, Joakim¬†Nohlg√•rd, Jonathan¬†Conder,\n        Julius¬†Alexandre, J√∂rg¬†Behrmann, Kai¬†Lueke, Kamil¬†Szczƒôk,\n        KayJay7, Keian, Kirk, Kristian¬†Klausen, Krzesimir¬†Nowak,\n        Lain¬†\"Fearyncess\"¬†Yang, Lars¬†Ellenberg, Lennart¬†Poettering,\n        Leonard, Luca¬†Boccassi, Lucas¬†Salles, Ludwig¬†Nussel,\n        Luk√°≈°¬†Nykr√Ωn, Luna¬†Jernberg, Luxiter, Maanya¬†Goenka,\n        Maciej¬†S.¬†Szmigiero, Mariano¬†Gim√©nez, Markus¬†Merklinger,\n        Martin¬†Ivicic, Martin¬†Srebotnjak, Martin¬†Trigaux, Martin¬†Wilck,\n        Mathias¬†Lang, Matt¬†Layher, Matt¬†Muggeridge, Matteo¬†Croce,\n        Matthias¬†Lisin, Max¬†Gautier, Max¬†Staudt, MaxHearnden,\n        Michael¬†Biebl, Michal¬†Koutn√Ω, Michal¬†SekletaÃÅr, Micha≈Ç¬†Kopeƒá,\n        Mike¬†Gilbert, Mike¬†Yuan, Mikko¬†Ylinen, MkfsSion, Moritz¬†Sanft,\n        MrSm√∂r, Nandakumar¬†Raghavan, Nicholas¬†Little, Nick¬†Cao,\n        Nick¬†Rosbrook, Nicolas¬†Bouchinet, Norbert¬†Lange,\n        Ole¬†Peder¬†Brandtz√¶g, Ondrej¬†Kozina, Oƒüuz¬†Ersen,\n        Pablo¬†M√©ndez¬†Hern√°ndez, Pierre¬†GRASSER, Piotr¬†DrƒÖg, QuonXF,\n        Radoslav¬†Kolev, Rafa√´l¬†Kooi, Raito¬†Bezarius, Rasmus¬†Villemoes,\n        Reid¬†Wahl, Renjaya¬†Raga¬†Zenta, Richard¬†Maw, Roland¬†Hieber,\n        Ronan¬†Pigott, Rose, Ross¬†Burton, Saliba-san, Sam¬†Leonard,\n        Samuel¬†BF, Sarvajith¬†Adyanthaya, Scrambled¬†777,\n        Sebastian¬†Pucilowski, Sergei¬†Zhmylev, Sergey¬†A, Shulhan,\n        SidhuRupinder, Simon¬†Fowler, Skia, Sludge, Stuart¬†Hayhurst,\n        Susant¬†Sahani, Takashi¬†Sakamoto, Temuri¬†Doghonadze, Thayne¬†McCombs,\n        Thilo¬†Fromm, Thomas¬†Blume, Tiago¬†Rocha¬†Cunha, Timo¬†Rothenpieler,\n        TobiPeterG, Tobias¬†Fleig, Tom√°≈°¬†Pecka, Topi¬†Miettinen,\n        Tycho¬†Andersen, Unique-Usman, Usman¬†Akinyemi, Vasiliy¬†Kovalev,\n        Vasiliy¬†Stelmachenok, Victor¬†Berchet, Vishal¬†Chillara¬†Srinivas,\n        Vitaly¬†Kuznetsov, Vito¬†Caputo, Vladimir¬†Stoiakin, Werner¬†Sembach,\n        Will¬†Springer, Winterhuman, Xiaotian¬†Wu, Yu¬†Watanabe,\n        Yuri¬†Chornoivan, Zbigniew¬†Jƒôdrzejewski-Szmek, Zmyeir, anphir,\n        aslepykh, chenjiayi, cpackham-atlnz, cunshunxia, djantti, drewbug,\n        hanjinpeng, hfavisado, hulkoba, hydrargyrum, ksaleem, mburucuyapy,\n        medusalix, mille-feuille, mkubiak, mooo, msizanoen, networkException,\n        nl6720, r-vdp, runiq, sam-leonard-ct, samuelvw01, sharad3001, spdfnet,\n        sushmbha, wangyuhang, zeroskyx, zzywysm, ƒ∞.¬†Ensar¬†G√ºl≈üen,\n        ≈Åukasz¬†Stelmach, ≈†tƒõp√°n¬†Nƒõmec, ÊàëË∂ÖÂéâÂÆ≥, ÍπÄÏù∏Ïàò\n\n        ‚Äî Edinburgh, 2024-06-11\n\nCHANGES WITH 255:\n\n        Announcements of Future Feature Removals and Incompatible Changes:\n\n        * Support for split-usr (/usr/ mounted separately during late boot,\n          instead of being mounted by the initrd before switching to the rootfs)\n          and unmerged-usr (parallel directories /bin/ and /usr/bin/, /lib/ and\n          /usr/lib/, ‚Ä¶) has been removed. For more details, see:\n          https://lists.freedesktop.org/archives/systemd-devel/2022-September/048352.html\n\n        * We intend to remove cgroup v1 support from a systemd release after\n          the end of 2023. If you run services that make explicit use of\n          cgroup¬†v1 features (i.e. the \"legacy hierarchy\" with separate\n          hierarchies for each controller), please implement compatibility with\n          cgroup¬†v2 (i.e. the \"unified hierarchy\") sooner rather than later.\n          Most of Linux userspace has been ported over already.\n\n        * Support for System V service scripts is now deprecated and will be\n          removed in a future release. Please make sure to update your software\n          *now* to include a native systemd unit file instead of a legacy\n          System V script to retain compatibility with future systemd releases.\n\n        * Support for the SystemdOptions EFI variable is deprecated.\n          'bootctl systemd-efi-options' will emit a warning when used. It seems\n          that this feature is little-used and it is better to use alternative\n          approaches like credentials and confexts. The plan is to drop support\n          altogether at a later point, but this might be revisited based on\n          user feedback.\n\n        * systemd-run's switch --expand-environment= which currently is disabled\n          by default when combined with --scope, will be changed in a future\n          release to be enabled by default.\n\n        * \"systemctl switch-root\" is now restricted to initrd transitions only.\n\n          Transitions between real systems should be done with\n          \"systemctl¬†soft-reboot\" instead.\n\n        * The \"ip=off\" and \"ip=none\" kernel command line options interpreted by\n          systemd-network-generator will now result in IPv6RA + link-local\n          addressing being disabled, too. Previously DHCP was turned off, but\n          IPv6RA and IPv6 link-local addressing was left enabled.\n\n        * The NAMING_BRIDGE_MULTIFUNCTION_SLOT naming scheme has been deprecated\n          and is now disabled.\n\n        * SuspendMode=, HibernateState= and HybridSleepState= in the [Sleep]\n          section of systemd-sleep.conf are now deprecated and have no effect.\n          They did not (and could not) take any value other than the respective\n          default. HybridSleepMode= is also deprecated, and will now always use\n          the 'suspend' disk mode.\n\n        Service Manager:\n\n        * The way services are spawned has been overhauled. Previously, a\n          process was forked that shared all of the manager's memory (via\n          copy-on-write) while doing all the required setup (e.g.: mount\n          namespaces, CGroup configuration, etc.) before exec'ing the target\n          executable. This was problematic for various reasons: several glibc\n          APIs were called that are not supposed to be used after a fork but\n          before an exec, copy-on-write meant that if either process (the\n          manager or the child) touched a memory page a copy was triggered, and\n          also the memory footprint of the child process was that of the\n          manager, but with the memory limits of the service. From this version\n          onward, the new process is spawned using CLONE_VM and CLONE_VFORK\n          semantics via posix_spawn(3), and it immediately execs a new internal\n          binary, systemd-executor, that receives the configuration to apply\n          via memfd, and sets up the process before exec'ing the target\n          executable. The systemd-executor binary is pinned by file descriptor\n          by each manager instance (system and users), and the reference is\n          updated on daemon-reexec - it is thus important to reexec all running\n          manager instances when the systemd-executor and/or libsystemd*\n          libraries are updated on the filesystem.\n\n        * Most of the internal process tracking is being changed to use PIDFDs\n          instead of PIDs when the kernel supports it, to improve robustness\n          and reliability.\n\n        * A new option SurviveFinalKillSignal= can be used to configure the\n          unit to be skipped in the final SIGTERM/SIGKILL spree on shutdown.\n          This is part of the required configuration to let a unit's processes\n          survive a soft-reboot operation.\n\n        * System extension images (sysext) can now set\n          EXTENSION_RELOAD_MANAGER=1 in their extension-release files to\n          automatically reload the service manager (PID 1) when\n          merging/refreshing/unmerging on boot. Generally, while this can be\n          used to ship services in system extension images it's recommended to\n          do that via portable services instead.\n\n        * The ExtensionImages= and ExtensionDirectories= options now support\n          confexts images/directories.\n\n        * A new option CoredumpReceive= can be set for service and scope units,\n          together with Delegate=yes, to make systemd-coredump on the host\n          forward core files from processes crashing inside the delegated\n          CGroup subtree to systemd-coredump running in the container. This new\n          option is by default used by systemd-nspawn containers that use the\n          \"--boot\" switch.\n\n        * A new ConditionSecurity=measured-uki option is now available, to ensure\n          a unit can only run when the system has been booted from a measured UKI.\n\n        * MemoryAvailable= now considers physical memory if there are no CGroup\n          memory limits set anywhere in the tree.\n\n        * The $USER environment variable is now always set for services, while\n          previously it was only set if User= was specified. A new option\n          SetLoginEnvironment= is now supported to determine whether to also set\n          $HOME, $LOGNAME, and $SHELL.\n\n        * Socket units now support a new pair of\n          PollLimitBurst=/PollLimitInterval= options to configure a limit on\n          how often polling events on the file descriptors backing this unit\n          will be considered within a time window.\n\n        * Scope units can now be created using PIDFDs instead of PIDs to select\n          the processes they should include.\n\n        * Sending SIGRTMIN+18 with 0x500 as sigqueue() value will now cause the\n          manager to dump the list of currently pending jobs.\n\n        * If the kernel supports MOVE_MOUNT_BENEATH, the systemctl and\n          machinectl bind and mount-image verbs will now cause the new mount to\n          replace the old mount (if any), instead of overmounting it.\n\n        * Units now have MemoryPeak, MemorySwapPeak, MemorySwapCurrent and\n          MemoryZSwapCurrent properties, which respectively contain the values\n          of the cgroup v2's memory.peak, memory.swap.peak, memory.swap.current\n          and memory.zswap.current properties. This information is also shown in\n          \"systemctl status\" output, if available.\n\n        TPM2 Support + Disk Encryption & Authentication:\n\n        * systemd-cryptenroll now allows specifying a PCR bank and explicit hash\n          value in the --tpm2-pcrs= option.\n\n        * systemd-cryptenroll now allows specifying a TPM2 key handle (nv\n          index) to be used instead of the default SRK via the new\n          --tpm2-seal-key-handle= option.\n\n        * systemd-cryptenroll now allows TPM2 enrollment using only a TPM2\n          public key (in TPM2B_PUBLIC format) ‚Äì without access to the TPM2\n          device itself ‚Äì which enables offline sealing of LUKS images for a\n          specific TPM2 chip, as long as the SRK public key is known. Pass the\n          public to the tool via the new --tpm2-device-key= switch.\n\n        * systemd-cryptsetup is now installed in /usr/bin/ and is no longer an\n          internal-only executable.\n\n        * The TPM2 Storage Root Key will now be set up, if not already present,\n          by a new systemd-tpm2-setup.service early boot service. The SRK will\n          be stored in PEM format and TPM2_PUBLIC format (the latter is useful\n          for systemd-cryptenroll --tpm2-device-key=, as mentioned above) for\n          easier access. A new \"srk\" verb has been added to systemd-analyze to\n          allow extracting it on demand if it is already set up.\n\n        * The internal systemd-pcrphase executable has been renamed to\n          systemd-pcrextend.\n\n        * The systemd-pcrextend tool gained a new --pcr= switch to override\n          which PCR to measure into.\n\n        * systemd-pcrextend now exposes a Varlink interface at\n          io.systemd.PCRExtend that can be used to do measurements and event\n          logging on demand.\n\n        * TPM measurements are now also written to an event log at\n          /run/log/systemd/tpm2-measure.log, using a derivative of the TCG\n          Canonical Event Log format. Previously we'd only log them to the\n          journal, where they however were subject to rotation and similar.\n\n        * A new component \"systemd-pcrlock\" has been added that allows managing\n          local TPM2 PCR policies for PCRs¬†0-7 and similar, which are hard to\n          predict by the OS vendor because of the inherently local nature of\n          what measurements they contain, such as firmware versions of the\n          system and extension cards and suchlike. pcrlock can predict PCR\n          measurements ahead of time based on various inputs, such as the local\n          TPM2 event log, GPT partition tables, PE binaries, UKI kernels, and\n          various other things. It can then pre-calculate a TPM2 policy from\n          this, which it stores in an TPM2 NV index. TPM2 objects (such as disk\n          encryption keys) can be locked against this NV index, so that they\n          are locked against a specific combination of system firmware and\n          state. Alternatives for each component are supported to allowlist\n          multiple kernel versions or boot loader version simultaneously\n          without losing access to the disk encryption keys. The tool can also\n          be used to analyze and validate the local TPM2 event log.\n          systemd-cryptsetup, systemd-cryptenroll, systemd-repart have all been\n          updated to support such policies. There's currently no support for\n          locking the system's root disk against a pcrlock policy, this will be\n          added soon. Moreover, it is currently not possible to combine a\n          pcrlock policy with a signed PCR policy. This component is\n          experimental and its public interface is subject to change.\n\n        systemd-boot, systemd-stub, ukify, bootctl, kernel-install:\n\n        * bootctl will now show whether the system was booted from a UKI in its\n          status output.\n\n        * systemd-boot and systemd-stub now use different project keys in their\n          respective SBAT sections, so that they can be revoked individually if\n          needed.\n\n        * systemd-boot will no longer load unverified DeviceTree blobs when UEFI\n          SecureBoot is enabled. For more details see:\n          https://github.com/systemd/systemd/security/advisories/GHSA-6m6p-rjcq-334c\n\n        * systemd-boot gained new hotkeys to reboot and power off the system\n          from the boot menu (\"B\" and \"O\"). If the \"auto-poweroff\" and\n          \"auto-reboot\" options in loader.conf are set these entries are also\n          shown as menu items (which is useful on devices lacking a regular\n          keyboard).\n\n        * systemd-boot gained a new configuration value \"menu-disabled\" for the\n          set-timeout option, to allow completely disabling the boot menu,\n          including the hotkey.\n\n        * systemd-boot will now measure the content of loader.conf in TPM2\n          PCR¬†5.\n\n        * systemd-stub will now concatenate the content of all kernel\n          command-line addons before measuring them in TPM2 PCR¬†12, in a single\n          measurement, instead of measuring them individually.\n\n        * systemd-stub will now measure and load DeviceTree Blob addons, which\n          are searched and loaded following the same model as the existing\n          kernel command-line addons.\n\n        * systemd-stub will now ignore unauthenticated kernel command line options\n          passed from systemd-boot when running inside Confidential VMs with UEFI\n          SecureBoot enabled.\n\n        * systemd-stub will now load a DeviceTree blob even if the firmware did\n          not load any beforehand (e.g.: for ACPI systems).\n\n        * ukify is no longer considered experimental, and now ships in /usr/bin/.\n\n        * ukify gained a new verb inspect to describe the sections of a UKI and\n          print the contents of the well-known sections.\n\n        * ukify gained a new verb genkey to generate a set of key pairs for\n          signing UKIs and their PCR data.\n\n        * The 90-loaderentry kernel-install hook now supports installing device\n          trees.\n\n        * kernel-install now supports the --json=, --root=, --image=, and\n          --image-policy= options for the inspect verb.\n\n        * kernel-install now supports new list and add-all verbs. The former\n          lists all installed kernel images (if those are available in\n          /usr/lib/modules/). The latter will install all the kernels it can\n          find to the ESP.\n\n        systemd-repart:\n\n        * A new option --copy-from= has been added that synthesizes partition\n          definitions from the given image, which are then applied by the\n          systemd-repart algorithm.\n\n        * A new option --copy-source= has been added, which can be used to specify\n          a directory to which CopyFiles= is considered relative to.\n\n        * New --make-ddi=confext, --make-ddi=sysext, and --make-ddi=portable\n          options have been added to make it easier to generate these types of\n          DDIs, without having to provide repart.d definitions for them.\n\n        * The dm-verity salt and UUID will now be derived from the specified\n          seed value.\n\n        * New VerityDataBlockSizeBytes= and VerityHashBlockSizeBytes= can now be\n          configured in repart.d/ configuration files.\n\n        * A new Subvolumes= setting is now supported in repart.d/ configuration\n          files, to indicate which directories in the target partition should be\n          btrfs subvolumes.\n\n        * A new --tpm2-device-key= option can be used to lock a disk against a\n          specific TPM2 public key. This matches the same switch the\n          systemd-cryptenroll tool now supports (see above).\n\n        Journal:\n\n        * The journalctl --lines= parameter now accepts +N to show the oldest N\n          entries instead of the newest.\n\n        * journald now ensures that sealing happens once per epoch, and sets a\n          new compatibility flag to distinguish old journal files that were\n          created before this change, for backward compatibility.\n\n        Device Management:\n\n        * udev will now create symlinks to loopback block devices in the\n          /dev/disk/by-loop-ref/ directory that are based on the .lo_file_name\n          string field selected during allocation. The systemd-dissect tool and\n          the util-linux losetup command now supports a complementing new switch\n          --loop-ref= for selecting the string. This means a loopback block\n          device may now be allocated under a caller-chosen reference and can\n          subsequently be referenced without first having to look up the block\n          device name the caller ended up with.\n\n        * udev also creates symlinks to loopback block devices in the\n          /dev/disk/by-loop-inode/ directory based on the .st_dev/st_ino fields\n          of the inode attached to the loopback block device. This means that\n          attaching a file to a loopback device will implicitly make a handle\n          available to be found via that file's inode information.\n\n        * udevadm info gained support for JSON output via a new --json= flag, and\n          for filtering output using the same mechanism that udevadm trigger\n          already implements.\n\n        * The predictable network interface naming logic is extended to include\n          the SR-IOV-R \"representor\" information in network interface names.\n          This feature was intended for v254, but even though the code was\n          merged, the part that actually enabled the feature was forgotten.\n          It is now enabled by default and is part of the new \"v255\" naming\n          scheme.\n\n        * A new hwdb/rules file has been added that sets the\n          ID_NET_AUTO_LINK_LOCAL_ONLY=1 udev property on all network interfaces\n          that should usually only be configured with link-local addressing\n          (IPv4LL + IPv6LL), i.e. for PC-to-PC cables (\"laplink\") or\n          Thunderbolt networking. systemd-networkd and NetworkManager (soon)\n          will make use of this information to apply an appropriate network\n          configuration by default.\n\n        * The ID_NET_DRIVER property on network interfaces is now set\n          relatively early in the udev rule set so that other rules may rely on\n          its use. This is implemented in a new \"net-driver\" udev built-in.\n\n        Network Management:\n\n        * The \"duid-only\" option for DHCPv4 client's ClientIdentifier= setting\n          is now dropped, as it never worked, hence it should not be used by\n          anyone.\n\n        * The 'prefixstable' ipv6 address generation mode now considers the SSID\n          when generating stable addresses, so that a different stable address\n          is used when roaming between wireless networks. If you already use\n          'prefixstable' addresses with wireless networks, the stable address\n          will be changed by the update.\n\n        * The DHCPv4 client gained a RapidCommit option, true by default, which\n          enables RFC4039 Rapid Commit behavior to obtain a lease in a\n          simplified 2-message exchange instead of the typical 4-message\n          exchange, if also supported by the DHCP server.\n\n        * The DHCPv4 client gained new InitialCongestionWindow= and\n          InitialAdvertisedReceiveWindow= options for route configurations.\n\n        * The DHCPv4 client gained a new RequestAddress= option that allows\n          to send a preferred IP address in the initial DHCPDISCOVER message.\n\n        * The DHCPv4 server and client gained support for IPv6-only mode\n          (RFC8925).\n\n        * The SendHostname= and Hostname= options are now available for the\n          DHCPv6 client, independently of the DHCPv4= option, so that these\n          configuration values can be set independently for each client.\n\n        * The DHCPv4 and DHCPv6 client state can now be queried via D-Bus,\n          including lease information.\n\n        * The DHCPv6 client can now be configured to use a custom DUID type.\n\n        * .network files gained a new IPv4ReversePathFilter= setting in the\n          [Network] section, to control sysctl's rp_filter setting.\n\n        * .network files gaiend a new HopLimit= setting in the [Route] section,\n          to configure a per-route hop limit.\n\n        * .network files gained a new TCPRetransmissionTimeoutSec= setting in\n          the [Route] section, to configure a per-route TCP retransmission\n          timeout.\n\n        * A new directive NFTSet= provides a method for integrating network\n          configuration into firewall rules with NFT sets. The benefit of using\n          this setting is that static network configuration or dynamically\n          obtained network addresses can be used in firewall rules with the\n          indirection of NFT set types.\n\n        * The [IPv6AcceptRA] section supports the following new options:\n          UsePREF64=, UseHopLimit=, UseICMP6RateLimit=, and NFTSet=.\n\n        * The [IPv6SendRA] section supports the following new options:\n          RetransmitSec=, HopLimit=, HomeAgent=, HomeAgentLifetimeSec=, and\n          HomeAgentPreference=.\n\n        * A new [IPv6PREF64Prefix] set of options, containing Prefix= and\n          LifetimeSec=, has been introduced to append pref64 options in router\n          advertisements (RFC8781).\n\n        * The network generator now configures the interfaces with only\n          link-local addressing if \"ip=link-local\" is specified on the kernel\n          command line.\n\n        * The prefix of the configuration files generated by the network\n          generator from the kernel command line is now prefixed with '70-',\n          to make them have higher precedence over the default configuration\n          files.\n\n        * Added a new -Ddefault-network=BOOL meson option, that causes more\n          .network files to be installed as enabled by default. These configuration\n          files will which match generic setups, e.g. 89-ethernet.network matches\n          all Ethernet interfaces and enables both DHCPv4 and DHCPv6 clients.\n\n        * If a ID_NET_MANAGED_BY= udev property is set on a network device and\n          it is any other string than \"io.systemd.Network\" then networkd will\n          not manage this device. This may be used to allow multiple network\n          management services to run in parallel and assign ownership of\n          specific devices explicitly. NetworkManager will soon implement a\n          similar logic.\n\n        * .network files gained a new MulticastIGMPVersion= setting in the\n          [Network] section, to control sysctl's\n          /proc/sys/net/ipv4/conf/INTERFACE/force_igmp_version setting.\n\n        systemctl:\n\n        * systemctl is-failed now checks the system state if no unit is\n          specified.\n\n        * systemctl will now automatically soft-reboot if a new root file system\n          is found under /run/nextroot/ when a reboot operation is invoked.\n\n        Login management:\n\n        * Wall messages now work even when utmp support is disabled, using\n          systemd-logind to query the necessary information.\n\n        * systemd-logind now sends a new PrepareForShutdownWithMetadata D-Bus\n          signal before shutdown/reboot/soft-reboot that includes additional\n          information compared to the PrepareForShutdown signal. Currently the\n          additional information is the type of operation that is about to be\n          executed.\n\n        Hibernation & Suspend:\n\n        * The kernel and OS versions will no longer be checked on resume from\n          hibernation.\n\n        * Hibernation into swap files backed by btrfs is now supported.\n          (Previously this was supported only for other file systems.)\n\n        Other:\n\n        * A new systemd-vmspawn tool has been added, that aims to provide for VMs\n          the same interfaces and functionality that systemd-nspawn provides for\n          containers. For now it supports QEMU as a backend, and exposes some of\n          its options to the user. This component is experimental and its public\n          interface is subject to change.\n\n        * \"systemd-analyze plot\" has gained tooltips on each unit name with\n          related-unit information in its svg output, such as Before=,\n          Requires=, and similar properties.\n\n        * A new varlinkctl tool has been added to allow interfacing with\n          Varlink services, and introspection has been added to all such\n          services. This component is experimental and its public interface is\n          subject to change.\n\n        * systemd-sysext and systemd-confext now expose a Varlink service\n          at io.systemd.sysext.\n\n        * portable services now accept confexts as extensions.\n\n        * systemd-sysupdate now accepts directories in the MatchPattern= option.\n\n        * systemd-run will now output the invocation ID of the launched\n          transient unit and its peak memory usage.\n\n        * systemd-analyze, systemd-tmpfiles, systemd-sysusers, systemd-sysctl,\n          and systemd-binfmt gained a new --tldr option that can be used instead\n          of --cat-config to suppress uninteresting configuration lines, such as\n          comments and whitespace.\n\n        * resolvectl gained a new \"show-server-state\" command that shows\n          current statistics of the resolver. This is backed by a new\n          DumpStatistics() Varlink method provided by systemd-resolved.\n\n        * systemd-timesyncd will now emit a D-Bus signal when the LinkNTPServers\n          property changes.\n\n        * vconsole now supports KEYMAP=@kernel for preserving the kernel keymap\n          as-is.\n\n        * seccomp now supports the LoongArch64 architecture.\n\n        * seccomp may now be enabled for services running as a non-root User=\n          without NoNewPrivileges=yes.\n\n        * systemd-id128 now supports a new -P option to show only values. The\n          combination of -P and --app options is also supported.\n\n        * A new pam_systemd_loadkey.so PAM module is now available, which will\n          automatically fetch the passphrase used by cryptsetup to unlock the\n          root file system and set it as the PAM authtok. This enables, among\n          other things, configuring auto-unlock of the GNOME Keyring / KDE\n          Wallet when autologin is configured.\n\n        * Many meson options now use the 'feature' type, which means they\n          take enabled/disabled/auto as values.\n\n        * A new meson option -Dconfigfiledir= can be used to change where\n          configuration files with default values are installed to.\n\n        * Options and verbs in man pages are now tagged with the version they\n          were first introduced in.\n\n        * A new component \"systemd-storagetm\" has been added, which exposes all\n          local block devices as NVMe-TCP devices, fully automatically. It's\n          hooked into a new target unit storage-target-mode.target that is\n          suppsoed to be booted into via\n          rd.systemd.unit=storage-target-mode.target on the kernel command\n          line. This is intended to be used for installers and debugging to\n          quickly get access to the local disk. It's inspired by MacOS \"target\n          disk mode\". This component is experimental and its public interface is\n          subject to change.\n\n        * A new component \"systemd-bsod\" has been added, which can show logged\n          error messages full screen, if they have a log level of LOG_EMERG log\n          level. This component is experimental and its public interface is\n          subject to change.\n\n        * The systemd-dissect tool's --with command will now set the\n          $SYSTEMD_DISSECT_DEVICE environment variable to the block device it\n          operates on for the invoked process.\n\n        * The systemd-mount tool gained a new --tmpfs switch for mounting a new\n          'tmpfs' instance. This is useful since it does so via .mount units\n          and thus can be executed remotely or in containers.\n\n        * The various tools in systemd that take \"verbs\" (such as systemctl,\n          loginctl, machinectl, ‚Ä¶) now will suggest a close verb name in case\n          the user specified an unrecognized one.\n\n        * libsystemd now exports a new function sd_id128_get_app_specific()\n          that generates \"app-specific\" 128bit IDs from any ID. It's similar to\n          sd_id128_get_machine_app_specific() and\n          sd_id128_get_boot_app_specific() but takes the ID to base calculation\n          on as input. This new functionality is also exposed in the\n          \"systemd-id128\" tool where you can now combine --app= with `show`.\n\n        * All tools that parse timestamps now can also parse RFC3339 style\n          timestamps that include the \"T\" and Z\" characters.\n\n        * New documentation has been added:\n\n          https://systemd.io/FILE_DESCRIPTOR_STORE\n          https://systemd.io/TPM2_PCR_MEASUREMENTS\n          https://systemd.io/MOUNT_REQUIREMENTS\n\n        * The codebase now recognizes the suffix .confext.raw and .sysext.raw\n          as alternative to the .raw suffix generally accepted for DDIs. It is\n          recommended to name configuration extensions and system extensions\n          with such suffixes, to indicate their purpose in the name.\n\n        * The sd-device API gained a new function\n          sd_device_enumerator_add_match_property_required() which allows\n          configuring matches on properties that are strictly required. This is\n          different from the existing sd_device_enumerator_add_match_property()\n          matches of which one needs to apply.\n\n        * The MAC address the veth side of an nspawn container shall get\n          assigned may now be controlled via the $SYSTEMD_NSPAWN_NETWORK_MAC\n          environment variable.\n\n        * The libiptc dependency is now implemented via dlopen(), so that tools\n          such as networkd and nspawn no longer have a hard dependency on the\n          shared library when compiled with support for libiptc.\n\n        * New rpm macros have been added: %systemd_user_daemon_reexec does\n          daemon-reexec for all user managers, and %systemd_postun_with_reload\n          and %systemd_user_postun_with_reload do a reload for system and user\n          units on upgrades.\n\n        * coredumpctl now propagates SIGTERM to the debugger process.\n\n        Contributions from: ÍπÄÏù∏Ïàò, Abderrahim¬†Kitouni, Adam¬†Goldman,\n        Adam¬†Williamson, Alexandre¬†Peixoto¬†Ferreira, Alex¬†Hudspith,\n        Alvin¬†Alvarado, Andr√©¬†Paiusco, Antonio¬†Alvarez¬†Feijoo,\n        Anton¬†Lundin, Arian¬†van¬†Putten, Arseny¬†Maslennikov, Arthur¬†Shau,\n        Bal√°zs¬†√ör, beh_10257, Benjamin¬†Peterson, Bertrand¬†Jacquin,\n        Brian¬†Norris, Charles¬†Lee, Cheng-Chia¬†Tseng, Chris¬†Patterson,\n        Christian¬†Hergert, Christian¬†Hesse, Christian¬†Kirbach,\n        Clayton¬†Craft, commondservice, cunshunxia, Curtis¬†Klein, cvlc12,\n        Daan¬†De¬†Meyer, Daniele¬†Medri, Daniel¬†P.¬†Berrang√©, Daniel¬†Rusek,\n        Daniel¬†Thompson, Dan¬†Nicholson, Dan¬†Streetman, David¬†Rheinsberg,\n        David¬†Santamar√≠a¬†Rogado, David¬†Tardon, dependabot[bot],\n        Diego¬†Viola, Dmitry¬†V.¬†Levin, Emanuele¬†Giuseppe¬†Esposito,\n        Emil¬†Renner¬†Berthing, Emil¬†Velikov, Etienne¬†Dechamps, Fabian¬†Vogt,\n        felixdoerre, Felix¬†D√∂rre, Florian¬†Schmaus, Franck¬†Bui,\n        Frantisek¬†Sumsal, G2-Games, Gioele¬†Barabucci, Hugo¬†Carvalho,\n        huyubiao, Iago¬†L√≥pez¬†Galeiras, IllusionMan1212, Jade¬†Lovelace,\n        janana, Jan¬†Janssen, Jan¬†Kuparinen, Jan¬†Macku, Jeremy¬†Fleischman,\n        Jin¬†Liu, jjimbo137, Joerg¬†Behrmann, Johannes¬†Segitz, Jordan¬†Rome,\n        Jordan¬†Williams, Julien¬†Malka, Juno¬†Computers, Khem¬†Raj, khm,\n        Kingbom¬†Dou, Kiran¬†Vemula, Krzesimir¬†Nowak, Laszlo¬†Gombos,\n        Lennart¬†Poettering, linuxlion, Luca¬†Boccassi, Lucas¬†Adriano¬†Salles,\n        Lukas, Luk√°≈°¬†Nykr√Ωn, Maanya¬†Goenka, Maarten, Malte¬†Poll,\n        Marc¬†Pervaz¬†Boocha, Martin¬†Bene≈°, Martin¬†Joerg, Martin¬†Wilck,\n        Mathieu¬†Tortuyaux, Matthias¬†Schiffer, Maxim¬†Mikityanskiy,\n        Max¬†Kellermann, Michael¬†A¬†Cassaniti, Michael¬†Biebl, Michael¬†Kuhn,\n        Michael¬†Vasseur, Michal¬†Koutn√Ω, Michal¬†SekletaÃÅr, Mike¬†Yuan,\n        Milton¬†D.¬†Miller¬†II, mordner, msizanoen, NAHO, Nandakumar¬†Raghavan,\n        Neil¬†Wilson, Nick¬†Rosbrook, Nils¬†K, NRK, Oƒüuz¬†Ersen,\n        Omojola¬†Joshua, onenowy, Paul¬†Meyer, Paymon¬†MARANDI, pelaufer,\n        Peter¬†Hutterer, PhylLu, Pierre¬†GRASSER, Piotr¬†DrƒÖg, Priit¬†Laes,\n        Rahil¬†Bhimjiani, Raito¬†Bezarius, Raul¬†Cheleguini, Reto¬†Schneider,\n        Richard¬†Maw, Robby¬†Red, RoepLuke, Roland¬†Hieber, Roland¬†Singer,\n        Ronan¬†Pigott, Sam¬†James, Sam¬†Leonard, Sergey¬†A, Susant¬†Sahani,\n        Sven¬†Joachim, Tad¬†Fisher, Takashi¬†Sakamoto, Thorsten¬†Kukuk, Tj,\n        Tomasz¬†≈öwiƒÖtek, Topi¬†Miettinen, Valentin¬†David,\n        Valentin¬†Lefebvre, Victor¬†Westerhuis, Vincent¬†Haupert,\n        Vishal¬†Chillara¬†Srinivas, Vito¬†Caputo, Warren, Weblate,\n        Xiaotian¬†Wu, xinpeng¬†wang, Yaron¬†Shahrabani, Yo-Jung¬†Lin,\n        Yu¬†Watanabe, Zbigniew¬†Jƒôdrzejewski-Szmek, zeroskyx,\n        –î–∞–º—ò–∞–Ω¬†–ì–µ–æ—Ä–≥–∏–µ–≤—Å–∫–∏, –Ω–∞–±\n\n        ‚Äî Edinburgh, 2023-12-06\n\nCHANGES WITH 254:\n\n        Announcements of Future Feature Removals and Incompatible Changes:\n\n        * The next release (v255) will remove support for split-usr (/usr/\n          mounted separately during late boot, instead of being mounted by the\n          initrd before switching to the rootfs) and unmerged-usr (parallel\n          directories /bin/ and /usr/bin/, /lib/ and /usr/lib/, ‚Ä¶). For more\n          details, see:\n          https://lists.freedesktop.org/archives/systemd-devel/2022-September/048352.html\n\n        * We intend to remove cgroup v1 support from a systemd release after\n          the end of 2023. If you run services that make explicit use of\n          cgroup¬†v1 features (i.e. the \"legacy hierarchy\" with separate\n          hierarchies for each controller), please implement compatibility with\n          cgroup¬†v2 (i.e. the \"unified hierarchy\") sooner rather than later.\n          Most of Linux userspace has been ported over already.\n\n        * Support for System V service scripts is now deprecated and will be\n          removed in a future release. Please make sure to update your software\n          *now* to include a native systemd unit file instead of a legacy\n          System V script to retain compatibility with future systemd releases.\n\n        * Support for the SystemdOptions EFI variable is deprecated.\n          'bootctl systemd-efi-options' will emit a warning when used. It seems\n          that this feature is little-used and it is better to use alternative\n          approaches like credentials and confexts. The plan is to drop support\n          altogether at a later point, but this might be revisited based on\n          user feedback.\n\n        * EnvironmentFile= now treats the line following a comment line\n          trailing with escape as a non comment line. For details, see:\n          https://github.com/systemd/systemd/issues/27975\n\n        * PrivateNetwork=yes and NetworkNamespacePath= now imply\n          PrivateMounts=yes unless PrivateMounts=no is explicitly specified.\n\n        * Behaviour of sandboxing options for the per-user service manager\n          units has changed. They now imply PrivateUsers=yes, which means user\n          namespaces will be implicitly enabled when a sandboxing option is\n          enabled in a user unit. Enabling user namespaces has the drawback\n          that system users will no longer be visible (and processes/files will\n          appear as owned by 'nobody') in the user unit.\n\n          By definition a sandboxed user unit should run with reduced\n          privileges, so impact should be small. This will remove a great\n          source of confusion that has been reported by users over the years,\n          due to how these options require an extra setting to be manually\n          enabled when used in the per-user service manager, which is not\n          needed in the system service manager. For more details, see:\n          https://lists.freedesktop.org/archives/systemd-devel/2022-December/048682.html\n\n        * systemd-run's switch --expand-environment= which currently is disabled\n          by default when combined with --scope, will be changed in a future\n          release to be enabled by default.\n\n        Security Relevant Changes:\n\n        * pam_systemd will now by default pass the CAP_WAKE_ALARM ambient\n          process capability to invoked session processes of regular users on\n          local seats (as well as to systemd --user), unless configured\n          otherwise via data from JSON user records, or via the PAM module's\n          parameter list. This is useful in order allow desktop tools such as\n          GNOME's Alarm Clock application to set a timer for\n          CLOCK_REALTIME_ALARM that wakes up the system when it elapses. A\n          per-user service unit file may thus use AmbientCapability= to pass\n          the capability to invoked processes. Note that this capability is\n          relatively narrow in focus (in particular compared to other process\n          capabilities such as CAP_SYS_ADMIN) and we already ‚Äî by default ‚Äî\n          permit more impactful operations such as system suspend to local\n          users.\n\n        Service Manager:\n\n        * Memory limits that apply while the unit is activating are now\n          supported. Previously IO and CPU settings were already supported via\n          StartupCPUWeight= and similar. The same logic has been added for the\n          various manager and unit memory settings (DefaultStartupMemoryLow=,\n          StartupMemoryLow=, StartupMemoryHigh=, StartupMemoryMax=,\n          StartupMemorySwapMax=, StartupMemoryZSwapMax=).\n\n        * The service manager gained support for enqueuing POSIX signals to\n          services that carry an additional integer value, exposing the\n          sigqueue() system call. This is accessible via new D-Bus calls\n          org.freedesktop.systemd1.Manager.QueueSignalUnit() and\n          org.freedesktop.systemd1.Unit.QueueSignal(), as well as in systemctl\n          via the new --kill-value= option.\n\n        * systemctl gained a new \"list-paths\" verb, which shows all currently\n          active .path units, similarly to how \"systemctl list-timers\" shows\n          active timers, and \"systemctl list-sockets\" shows active sockets.\n\n        * systemctl gained a new --when= switch which is honoured by the various\n          forms of shutdown (i.e. reboot, kexec, poweroff, halt) and allows\n          scheduling these operations by time, similar in fashion to how this\n          has been supported by SysV shutdown.\n\n        * If MemoryDenyWriteExecute= is enabled for a service and the kernel\n          supports the new PR_SET_MDWE prctl() call, it is used instead of the\n          seccomp()-based system call filter to achieve the same effect.\n\n        * A new set of kernel command line options is now understood:\n          systemd.tty.term.<name>=, systemd.tty.rows.<name>=,\n          systemd.tty.columns.<name>= allow configuring the TTY type and\n          dimensions for the tty specified via <name>. When systemd invokes a\n          service on a tty (via TTYName=) it will look for these and configure\n          the TTY accordingly. This is particularly useful in VM environments\n          to propagate host terminal settings into the appropriate TTYs of the\n          guest.\n\n        * A new RootEphemeral= setting is now understood in service units. It\n          takes a boolean argument. If enabled for services that use RootImage=\n          or RootDirectory= an ephemeral copy of the disk image or directory\n          tree is made when the service is started. It is removed automatically\n          when the service is stopped. That ephemeral copy is made using\n          btrfs/xfs reflinks or btrfs snapshots, if available.\n\n        * The service activation logic gained new settings RestartSteps= and\n          RestartMaxDelaySec= which allow exponentially-growing restart\n          intervals for Restart=.\n\n        * The service activation logic gained a new setting RestartMode= which\n          can be set to 'direct' to skip the inactive/failed states when\n          restarting, so that dependent units are not notified until the service\n          converges to a final (successful or failed) state. For example, this\n          means that OnSuccess=/OnFailure= units will not be triggered until the\n          service state has converged.\n\n        * PID 1 will now automatically load the virtio_console kernel module\n          during early initialization if running in a suitable VM. This is done\n          so that early-boot logging can be written to the console if available.\n\n        * Similarly, virtio-vsock support is loaded early in suitable VM\n          environments. PID 1 will send sd_notify() notifications via AF_VSOCK\n          to the VMM if configured, thus loading this early is beneficial.\n\n        * A new verb \"fdstore\" has been added to systemd-analyze to show the\n          current contents of the file descriptor store of a unit. This is\n          backed by a new D-Bus call DumpUnitFileDescriptorStore() provided by\n          the service manager.\n\n        * The service manager will now set a new $FDSTORE environment variable\n          when invoking processes for services that have the file descriptor\n          store enabled.\n\n        * A new service option FileDescriptorStorePreserve= has been added that\n          allows tuning the lifecycle of the per-service file descriptor store.\n          If set to \"yes\", the entries in the fd store are retained even after\n          the service has been fully stopped.\n\n        * The \"systemctl clean\" command may now be used to clear the fdstore of\n          a service.\n\n        * Unit *.preset files gained a new directive \"ignore\", in addition to\n          the existing \"enable\" and \"disable\". As the name suggests, matching\n          units are left unchanged, i.e. neither enabled nor disabled.\n\n        * Service units gained a new setting DelegateSubgroup=. It takes the\n          name of a sub-cgroup to place any processes the service manager forks\n          off in. Previously, the service manager would place all service\n          processes directly in the top-level cgroup it created for the\n          service. This usually meant that main process in a service with\n          delegation enabled would first have to create a subgroup and move\n          itself down into it, in order to not conflict with the \"no processes\n          in inner cgroups\" rule of cgroup¬†v2. With this option, this step is\n          now handled by PID 1.\n\n        * The service manager will now look for .upholds/ directories,\n          similarly to the existing support for .wants/ and .requires/\n          directories. Symlinks in this directory result in Upholds=\n          dependencies.\n\n          The [Install] section of unit files gained support for a new\n          UpheldBy= directive to generate .upholds/ symlinks automatically when\n          a unit is enabled.\n\n        * The service manager now supports a new kernel command line option\n          systemd.default_device_timeout_sec=, which may be used to override\n          the default timeout for .device units.\n\n        * A new \"soft-reboot\" mechanism has been added to the service manager.\n          A \"soft reboot\" is similar to a regular reboot, except that it\n          affects userspace only: the service manager shuts down any running\n          services and other units, then optionally switches into a new root\n          file system (mounted to /run/nextroot/), and then passes control to a\n          systemd instance in the new file system which then starts the system\n          up again. The kernel is not rebooted and neither is the hardware,\n          firmware or boot loader. This provides a fast, lightweight mechanism\n          to quickly reset or update userspace, without the latency that a full\n          system reset involves. Moreover, open file descriptors may be passed\n          across the soft reboot into the new system where they will be passed\n          back to the originating services. This allows pinning resources\n          across the reboot, thus minimizing grey-out time further. This new\n          reboot mechanism is accessible via the new \"systemctl soft-reboot\"\n          command.\n\n        * Services using RootDirectory= or RootImage= will now have read-only\n          access to a copy of the host's os-release file under\n          /run/host/os-release, which will be kept up-to-date on 'soft-reboot'.\n          This was already the case for Portable Services, and the feature has\n          now been extended to all services that do not run off the host's\n          root filesystem.\n\n        * A new service setting MemoryKSM= has been added to enable kernel\n          same-page merging individually for services.\n\n        * A new service setting ImportCredentials= has been added that augments\n          LoadCredential= and LoadCredentialEncrypted= and searches for\n          credentials to import from the system, and supports globbing.\n\n        * A new job mode \"restart-dependencies\" has been added to the service\n          manager (exposed via systemctl --job-mode=). It is only valid when\n          used with \"start\" jobs, and has the effect that the \"start\" job will\n          be propagated as \"restart\" jobs to currently running units that have\n          a BindsTo= or Requires= dependency on the started unit.\n\n        * A new verb \"whoami\" has been added to \"systemctl\" which determines as\n          part of which unit the command is being invoked. It writes the unit\n          name to standard output. If one or more PIDs are specified reports\n          the unit names the processes referenced by the PIDs belong to.\n\n        * The system and service credential logic has been improved: there's\n          now a clearly defined place where system provisioning tools running\n          in the initrd can place credentials that will be imported into the\n          system's set of credentials during the initrd ‚Üí host transition: the\n          /run/credentials/@initrd/ directory. Once the credentials placed\n          there are imported into the system credential set they are deleted\n          from this directory, and the directory itself is deleted afterwards\n          too.\n\n        * A new kernel command line option systemd.set_credential_binary= has\n          been added, that is similar to the pre-existing\n          systemd.set_credential= but accepts arbitrary binary credential data,\n          encoded in Base64. Note that the kernel command line is not a\n          recommend way to transfer credentials into a system, since it is\n          world-readable from userspace.\n\n        * The default machine ID to use may now be configured via the\n          system.machine_id system credential. It will only be used if no\n          machine ID was set yet on the host.\n\n        * On Linux kernel 6.4 and newer system and service credentials will now\n          be placed in a tmpfs instance that has the \"noswap\" mount option\n          set. Previously, a \"ramfs\" instance was used. By switching to tmpfs\n          ACL support and overall size limits can now be enforced, without\n          compromising on security, as the memory is never paged out either\n          way.\n\n        * The service manager now can detect when it is running in a\n          'Confidential Virtual Machine', and a corresponding 'cvm' value is now\n          accepted by ConditionSecurity= for units that want to conditionalize\n          themselves on this. systemd-detect-virt gained new 'cvm' and\n          '--list-cvm' switches to respectively perform the detection or list\n          all known flavours of confidential VM, depending on the vendor. The\n          manager will publish a 'ConfidentialVirtualization' D-Bus property,\n          and will also set a SYSTEMD_CONFIDENTIAL_VIRTUALIZATION= environment\n          variable for unit generators. Finally, udev rules can match on a new\n          'cvm' key that will be set when in a confidential VM.\n          Additionally, when running in a 'Confidential Virtual Machine', SMBIOS\n          strings and QEMU's fw_cfg protocol will not be used to import\n          credentials and kernel command line parameters by the system manager,\n          systemd-boot and systemd-stub, because the hypervisor is considered\n          untrusted in this particular setting.\n\n        Journal:\n\n        * The sd-journal API gained a new call sd_journal_get_seqnum() to\n          retrieve the current log record's sequence number and sequence number\n          ID, which allows applications to order records the same way as\n          journal does internally. The sequence number is now also exported in\n          the JSON and \"export\" output of the journal.\n\n        * journalctl gained a new switch --truncate-newline. If specified\n          multi-line log records will be truncated at the first newline,\n          i.e. only the first line of each log message will be shown.\n\n        * systemd-journal-upload gained support for --namespace=, similar to\n          the switch of the same name of journalctl.\n\n        systemd-repart:\n\n        * systemd-repart's drop-in files gained a new ExcludeFiles= option which\n          may be used to exclude certain files from the effect of CopyFiles=.\n\n        * systemd-repart's Verity support now implements the Minimize= setting\n          to minimize the size of the resulting partition.\n\n        * systemd-repart gained a new --offline= switch, which may be used to\n          control whether images shall be built \"online\" or \"offline\",\n          i.e. whether to make use of kernel facilities such as loopback block\n          devices and device mapper or not.\n\n        * If systemd-repart is told to populate a newly created ESP or XBOOTLDR\n          partition with some files, it will now default to VFAT rather than\n          ext4.\n\n        * systemd-repart gained a new --architecture= switch. If specified, the\n          per-architecture GPT partition types (i.e. the root and /usr/\n          partitions) configured in the partition drop-in files are\n          automatically adjusted to match the specified CPU architecture, in\n          order to simplify cross-architecture DDI building.\n\n        * systemd-repart will now default to a minimum size of 300MB for XFS\n          filesystems if no size parameter is specified. This matches what the\n          XFS tools (xfsprogs) can support.\n\n        systemd-boot, systemd-stub, ukify, bootctl, kernel-install:\n\n        * gnu-efi is no longer required to build systemd-boot and systemd-stub.\n          Instead, pyelftools is now needed, and it will be used to perform the\n          ELF -> PE relocations at build time.\n\n        * bootctl gained a new switch --print-root-device/-R that prints the\n          block device the root file system is backed by. If specified twice,\n          it returns the whole disk block device (as opposed to partition block\n          device) the root file system is on. It's useful for invocations such\n          as \"cfdisk $(bootctl -RR)\" to quickly show the partition table of the\n          running OS.\n\n        * systemd-stub will now look for the SMBIOS Type 1 field\n          \"io.systemd.stub.kernel-cmdline-extra\" and append its value to the\n          kernel command line it invokes. This is useful for VMMs such as qemu\n          to pass additional kernel command lines into the system even when\n          booting via full UEFI. The contents of the field are measured into\n          TPM PCR¬†12.\n\n        * The KERNEL_INSTALL_LAYOUT= setting for kernel-install gained a new\n          value \"auto\". With this value, a kernel will be automatically\n          analyzed, and if it qualifies as UKI, it will be installed as if the\n          setting was to set to \"uki\", otherwise as \"bls\".\n\n        * systemd-stub can now optionally load UEFI PE \"add-on\" images that may\n          contain additional kernel command line information. These \"add-ons\"\n          superficially look like a regular UEFI executable, and are expected\n          to be signed via SecureBoot/shim. However, they do not actually\n          contain code, but instead a subset of the PE sections that UKIs\n          support. They are supposed to provide a way to extend UKIs with\n          additional resources in a secure and authenticated way. Currently,\n          only the .cmdline PE section may be used in add-ons, in which case\n          any specified string is appended to the command line embedded into\n          the UKI itself. A new 'addon<EFI-ARCH>.efi.stub' is now provided that\n          can be used to trivially create addons, via 'ukify' or 'objcopy'. In\n          the future we expect other sections to be made extensible like this as\n          well.\n\n        * ukify has been updated to allow building these UEFI PE \"add-on\"\n          images, using the new 'addon<EFI-ARCH>.efi.stub'.\n\n        * ukify now accepts SBAT information to place in the .sbat PE section\n          of UKIs and addons. If a UKI is built the SBAT information from the\n          inner kernel is merged with any SBAT information associated with\n          systemd-stub and the SBAT data specified on the ukify command line.\n\n        * The kernel-install script has been rewritten in C, and reuses much of\n          the infrastructure of existing tools such as bootctl. It also gained\n          --esp-path= and --boot-path= options to override the path to the ESP,\n          and the $BOOT partition. Options --make-entry-directory= and\n          --entry-token= have been added as well, similar to bootctl's options\n          of the same name.\n\n        * A new kernel-install plugin 60-ukify has been added which will\n          combine kernel/initrd locally into a UKI and optionally sign them\n          with a local key. This may be used to switch to UKI mode even on\n          systems where a local kernel or initrd is used. (Typically UKIs are\n          built and signed by the vendor.)\n\n        * The ukify tool now supports \"pesign\" in addition to the pre-existing\n          \"sbsign\" for signing UKIs.\n\n        * systemd-measure and systemd-stub now look for the .uname PE section\n          that should contain the kernel's \"uname -r\" string.\n\n        * systemd-measure and ukify now calculate expected PCR hashes for a UKI\n          \"offline\", i.e. without access to a TPM (physical or\n          software-emulated).\n\n        Memory Pressure & Control:\n\n        * The sd-event API gained new calls sd_event_add_memory_pressure(),\n          sd_event_source_set_memory_pressure_type(),\n          sd_event_source_set_memory_pressure_period() to create and configure\n          an event source that is called whenever the OS signals memory\n          pressure. Another call sd_event_trim_memory() is provided that\n          compacts the process' memory use by releasing allocated but unused\n          malloc() memory back to the kernel. Services can also provide their\n          own custom callback to do memory trimming. This should improve system\n          behaviour under memory pressure, as on Linux traditionally provided\n          no mechanism to return process memory back to the kernel if the\n          kernel was under memory pressure. This makes use of the kernel's PSI\n          interface. Most long-running services in systemd have been hooked up\n          with this, and in particular systems with low memory should benefit\n          from this.\n\n        * Service units gained new settings MemoryPressureWatch= and\n          MemoryPressureThresholdSec= to configure the PSI memory pressure\n          logic individually. If these options are used, the\n          $MEMORY_PRESSURE_WATCH and $MEMORY_PRESSURE_WRITE environment\n          variables will be set for the invoked processes to inform them about\n          the requested memory pressure behaviour. (This is used by the\n          aforementioned sd-events API additions, if set.)\n\n        * systemd-analyze gained a new \"malloc\" verb that shows the output\n          generated by glibc's malloc_info() on services that support it. Right\n          now, only the service manager has been updated accordingly. This\n          call requires privileges.\n\n        User & Session Management:\n\n        * The sd-login API gained a new call sd_session_get_username() to\n          return the user name of the owner of a login session. It also gained\n          a new call sd_session_get_start_time() to retrieve the time the login\n          session started. A new call sd_session_get_leader() has been added to\n          return the PID of the \"leader\" process of a session. A new call\n          sd_uid_get_login_time() returns the time since the specified user has\n          most recently been continuously logged in with at least one session.\n\n        * JSON user records gained a new set of fields capabilityAmbientSet and\n          capabilityBoundingSet which contain a list of POSIX capabilities to\n          set for the logged in users in the ambient and bounding sets,\n          respectively. homectl gained the ability to configure these two sets\n          for users via --capability-bounding-set=/--capability-ambient-set=.\n\n        * pam_systemd learnt two new module options\n          default-capability-bounding-set= and default-capability-ambient-set=,\n          which configure the default bounding sets for users as they are\n          logging in, if the JSON user record doesn't specify this explicitly\n          (see above). The built-in default for the ambient set now contains\n          the CAP_WAKE_ALARM, thus allowing regular users who may log in\n          locally to resume from a system suspend via a timer.\n\n        * The Session D-Bus objects systemd-logind gained a new SetTTY() method\n          call to update the TTY of a session after it has been allocated. This\n          is useful for SSH sessions which are typically allocated first, and\n          for which a TTY is added later.\n\n        * The sd-login API gained a new call sd_pid_notifyf_with_fds() which\n          combines the various other sd_pid_notify() flavours into one: takes a\n          format string, an overriding PID, and a set of file descriptors to\n          send. It also gained a new call sd_pid_notify_barrier() call which is\n          equivalent to sd_notify_barrier() but allows the originating PID to\n          be specified.\n\n        * \"loginctl list-users\" and \"loginctl list-sessions\" will now show the\n          state of each logged in user/session in their tabular output. It will\n          also show the current idle state of sessions.\n\n        DDIs:\n\n        * systemd-dissect will now show the intended CPU architecture of an\n          inspected DDI.\n\n        * systemd-dissect will now install itself as mount helper for the \"ddi\"\n          pseudo-file system type. This means you may now mount DDIs directly\n          via /bin/mount or /etc/fstab, making full use of embedded Verity\n          information and all other DDI features.\n\n          Example: mount -t ddi myimage.raw /some/where\n\n        * The systemd-dissect tool gained the new switches --attach/--detach to\n          attach/detach a DDI to a loopback block device without mounting it.\n          It will automatically derive the right sector size from the image\n          and set up Verity and similar, but not mount the file systems in it.\n\n        * When systemd-gpt-auto-generator or the DDI mounting logic mount an\n          ESP or XBOOTLDR partition the MS_NOSYMFOLLOW mount option is now\n          implied. Given that these file systems are typically untrusted, this\n          should make mounting them automatically have less of a security\n          impact.\n\n        * All tools that parse DDIs (such as systemd-nspawn, systemd-dissect,\n          systemd-tmpfiles, ‚Ä¶) now understand a new switch --image-policy= which\n          takes a string encoding image dissection policy. With this mechanism\n          automatic discovery and use of specific partition types and the\n          cryptographic requirements on the partitions (Verity, LUKS, ‚Ä¶) can be\n          restricted, permitting better control of the exposed attack surfaces\n          when mounting disk images. systemd-gpt-auto-generator will honour such\n          an image policy too, configurable via the systemd.image_policy= kernel\n          command line option. Unit files gained the RootImagePolicy=,\n          MountImagePolicy= and ExtensionImagePolicy= to configure the same for\n          disk images a service runs off.\n\n        * systemd-analyze gained a new verb \"image-policy\" to validate and\n          parse image policy strings.\n\n        * systemd-dissect gained support for a new --validate switch to\n          superficially validate DDI structure, and check whether a specific\n          image policy allows the DDI.\n\n        * systemd-dissect gained support for a new --mtree-hash switch to\n          optionally disable calculating mtree hashes, which can be slow on\n          large images.\n\n        * systemd-dissect --copy-to, --copy-from, --list and --mtree switches\n          are now able to operate on directories too, other than images.\n\n        Network Management:\n\n        * networkd's GENEVE support as gained a new .network option\n          InheritInnerProtocol=.\n\n        * The [Tunnel] section in .netdev files has gained a new setting\n          IgnoreDontFragment for controlling the IPv4 \"DF\" flag of datagrams.\n\n        * A new global IPv6PrivacyExtensions= setting has been added that\n          selects the default value of the per-network setting of the same\n          name.\n\n        * The predictable network interface naming logic was extended to\n          include SR-IOV-R \"representor\" information in network interface\n          names. Unfortunately, this feature was not enabled by default and can\n          only be enabled at compilation time by setting\n          -Ddefault-net-naming-scheme=v254.\n\n        * The DHCPv4 + DHCPv6 + IPv6 RA logic in networkd gained support for\n          the RFC8910 captive portal option.\n\n        Device Management:\n\n        * udevadm gained the new \"verify\" verb for validating udev rules files\n          offline.\n\n        * udev gained a new tool \"iocost\" that can be used to configure QoS IO\n          cost data based on hwdb information onto suitable block devices. Also\n          see https://github.com/iocost-benchmark/iocost-benchmarks.\n\n        TPM2 Support + Disk Encryption & Authentication:\n\n        * systemd-cryptenroll/systemd-cryptsetup will now install a TPM2 SRK\n          (\"Storage Root Key\") as first step in the TPM2, and then use that\n          for binding FDE to, if TPM2 support is used. This matches\n          recommendations of TCG (see\n          https://trustedcomputinggroup.org/wp-content/uploads/TCG-TPM-v2.0-Provisioning-Guidance-Published-v1r1.pdf)\n\n        * systemd-cryptenroll and other tools that take TPM2 PCR parameters now\n          understand textual identifiers for these PCRs.\n\n        * systemd-veritysetup + /etc/veritytab gained support for a series of\n          new options: hash-offset=, superblock=, format=, data-block-size=,\n          hash-block-size=, data-blocks=, salt=, uuid=, hash=, fec-device=,\n          fec-offset=, fec-roots= to configure various aspects of a Verity\n          volume.\n\n        * systemd-cryptsetup + /etc/crypttab gained support for a new\n          veracrypt-pim= option for setting the Personal Iteration Multiplier\n          of veracrypt volumes.\n\n        * systemd-integritysetup + /etc/integritytab gained support for a new\n          mode= setting for controlling the dm-integrity mode (journal, bitmap,\n          direct) for the volume.\n\n        * systemd-analyze gained a new verb \"pcrs\" that shows the known TPM PCR\n          registers, their symbolic names and current values.\n\n        systemd-tmpfiles:\n\n        * The ACL support in tmpfiles.d/ has been updated: if an uppercase \"X\"\n          access right is specified this is equivalent to \"x\" but only if the\n          inode in question already has the executable bit set for at least\n          some user/group. Otherwise the \"x\" bit will be turned off.\n\n        * tmpfiles.d/'s C line type now understands a new modifier \"+\": a line\n          with C+ will result in a \"merge\" copy, i.e. all files of the source\n          tree are copied into the target tree, even if that tree already\n          exists, resulting in a combined tree of files already present in the\n          target tree and those copied in.\n\n        * systemd-tmpfiles gained a new --graceful switch. If specified lines\n          with unknown users/groups will silently be skipped.\n\n        systemd-notify:\n\n        * systemd-notify gained two new options --fd= and --fdname= for sending\n          arbitrary file descriptors to the service manager (while specifying an\n          explicit name for it).\n\n        * systemd-notify gained a new --exec switch, which makes it execute the\n          specified command line after sending the requested messages. This is\n          useful for sending out READY=1 first, and then continuing invocation\n          without changing process ID, so that the tool can be nicely used\n          within an ExecStart= line of a unit file that uses Type=notify.\n\n        sd-event + sd-bus APIs:\n\n        * The sd-event API gained a new call sd_event_source_leave_ratelimit()\n          which may be used to explicitly end a rate-limit state an event\n          source might be in, resetting all rate limiting counters.\n\n        * When the sd-bus library is used to make connections to AF_UNIX D-Bus\n          sockets, it will now encode the \"description\" set via\n          sd_bus_set_description() into the source socket address. It will also\n          look for this information when accepting a connection. This is useful\n          to track individual D-Bus connections on a D-Bus broker for debug\n          purposes.\n\n        systemd-resolved:\n\n        * systemd-resolved gained a new resolved.conf setting\n          StateRetentionSec= which may be used to retain cached DNS records\n          even after their nominal TTL, and use them in case upstream DNS\n          servers cannot be reached. This can be used to make name resolution\n          more resilient in case of network problems.\n\n        * resolvectl gained a new verb \"show-cache\" to show the current cache\n          contents of systemd-resolved. This verb communicates with the\n          systemd-resolved daemon and requires privileges.\n\n        Other:\n\n        * Meson >= 0.60.0 is now required to build systemd.\n\n        * The default keymap to apply may now be chosen at build-time via the\n          new -Ddefault-keymap= meson option.\n\n        * Most of systemd's long-running services now have a generic handler of\n          the SIGRTMIN+18 signal handler which executes various operations\n          depending on the sigqueue() parameter sent along. For example, values\n          0x100‚Ä¶0x107 allow changing the maximum log level of such\n          services. 0x200‚Ä¶0x203 allow changing the log target of such\n          services. 0x300 make the services trim their memory similarly to the\n          automatic PSI-triggered action, see above. 0x301 make the services\n          output their malloc_info() data to the logs.\n\n        * machinectl gained new \"edit\" and \"cat\" verbs for editing .nspawn\n          files, inspired by systemctl's verbs of the same name which edit unit\n          files. Similarly, networkctl gained the same verbs for editing\n          .network, .netdev, .link files.\n\n        * A new syscall filter group \"@sandbox\" has been added that contains\n          syscalls for sandboxing system calls such as those for seccomp and\n          Landlock.\n\n        * New documentation has been added:\n\n          https://systemd.io/COREDUMP\n          https://systemd.io/MEMORY_PRESSURE\n          smbios-type-11(7)\n\n        * systemd-firstboot gained a new --reset option. If specified, the\n          settings in /etc/ it knows how to initialize are reset.\n\n        * systemd-sysext is now a multi-call binary and is also installed under\n          the systemd-confext alias name (via a symlink). When invoked that way\n          it will operate on /etc/ instead of /usr/ + /opt/. It thus becomes a\n          powerful, atomic, secure configuration management of sorts, that\n          locally can merge configuration from multiple confext configuration\n          images into a single immutable tree.\n\n        * The --network-macvlan=, --network-ipvlan=, --network-interface=\n          switches of systemd-nspawn may now optionally take the intended\n          network interface inside the container.\n\n        * All our programs will now send an sd_notify() message with their exit\n          status in the EXIT_STATUS= field when exiting, using the usual\n          protocol, including PID 1. This is useful for VMMs and container\n          managers to collect an exit status from a system as it shuts down, as\n          set via \"systemctl exit ‚Ä¶\". This is particularly useful in test cases\n          and similar, as invocations via a VM can now nicely propagate an exit\n          status to the host, similar to local processes.\n\n        * systemd-run gained a new switch --expand-environment=no to disable\n          server-side environment variable expansion in specified command\n          lines. Expansion defaults to enabled for all execution types except\n          --scope, where it defaults to off (and prints a warning) for backward\n          compatibility reasons. --scope will be flipped to enabled by default\n          too in a future release. If you are using --scope and passing a '$'\n          character in the payload you should start explicitly using\n          --expand-environment=yes/no according to the use case.\n\n        * The systemd-system-update-generator has been updated to also look for\n          the special flag file /etc/system-update in addition to the existing\n          support for /system-update to decide whether to enter system update\n          mode.\n\n        * The /dev/hugepages/ file system is now mounted with nosuid + nodev\n          mount options by default.\n\n        * systemd-fstab-generator now understands two new kernel command line\n          options systemd.mount-extra= and systemd.swap-extra=, which configure\n          additional mounts or swaps in a format similar to /etc/fstab. 'fsck'\n          will be ran on these block devices, like it already happens for\n          'root='. It also now supports the new fstab.extra and\n          fstab.extra.initrd credentials that may contain additional /etc/fstab\n          lines to apply at boot.\n\n        * systemd-getty-generator now understands two new credentials\n          getty.ttys.container and getty.ttys.serial. These credentials may\n          contain a list of TTY devices ‚Äì one per line ‚Äì to instantiate\n          container-getty@.service and serial-getty@.service on.\n\n        * The getty/serial-getty/container-getty units now import the 'agetty.*'\n          and 'login.*' credentials, which are consumed by the 'login' and\n          'agetty' programs starting from util-linux v2.40.\n\n        * systemd-sysupdate's sysupdate.d/ drop-ins gained a new setting\n          PathRelativeTo=, which can be set to \"esp\", \"xbootldr\", \"boot\", in\n          which case the Path= setting is taken relative to the ESP or XBOOTLDR\n          partitions, rather than the system's root directory /. The relevant\n          directories are automatically discovered.\n\n        * The systemd-ac-power tool gained a new switch --low, which reports\n          whether the battery charge is considered \"low\", similar to how the\n          s2h suspend logic checks this state to decide whether to enter system\n          suspend or hibernation.\n\n        * The /etc/os-release file can now have two new optional fields\n          VENDOR_NAME= and VENDOR_URL= to carry information about the vendor of\n          the OS.\n\n        * When the system hibernates, information about the device and offset\n          used is now written to a non-volatile EFI variable. On next boot the\n          system will attempt to resume from the location indicated in this EFI\n          variable. This should make hibernation a lot more robust, while\n          requiring no manual configuration of the resume location.\n\n        * The $XDG_STATE_HOME environment variable (added in more recent\n          versions of the XDG basedir specification) is now honoured to\n          implement the StateDirectory= setting in user services.\n\n        * A new component \"systemd-battery-check\" has been added. It may run\n          during early boot (usually in the initrd), and checks the battery\n          charge level of the system. In case the charge level is very low the\n          user is notified (graphically via Plymouth ‚Äì if available ‚Äì as well\n          as in text form on the console), and the system is turned off after a\n          10s delay. The feature can be disabled by passing\n          systemd.battery_check=0 through the kernel command line.\n\n        * The 'passwdqc' library is now supported as an alternative to the\n          'pwquality' library and can be selected at build time.\n\n        Contributions from: ÍπÄÏù∏Ïàò, 07416, Addison¬†Snelling, Adrian¬†Vovk,\n        Aidan¬†Dang, Alexander¬†Krabler, Alfred¬†Klomp, Anatoli¬†Babenia,\n        Andrei¬†Stepanov, Andrew¬†Baxter, Antonio¬†Alvarez¬†Feijoo,\n        Arian¬†van¬†Putten, Arthur¬†Shau, A¬†S¬†Alam,\n        Asier¬†Sarasua¬†Garmendia, Ball√≥¬†Gy√∂rgy, Bastien¬†Nocera,\n        Benjamin¬†Herrenschmidt, Benjamin¬†Raison, Bill¬†Peterson,\n        Brad¬†Fitzpatrick, Brett¬†Holman, bri, Chen¬†Qi, Chitoku,\n        Christian¬†Hesse, Christoph¬†Anton¬†Mitterer, Christopher¬†Gurnee,\n        Colin¬†Walters, Cornelius¬†Hoffmann, Cristian¬†Rodr√≠guez, cunshunxia,\n        cvlc12, Cyril¬†Roelandt, Daan¬†De¬†Meyer, Daniele¬†Medri,\n        Daniel¬†P.¬†Berrang√©, Daniel¬†Rusek, Dan¬†Streetman, David¬†Edmundson,\n        David¬†Schroeder, David¬†Tardon, dependabot[bot],\n        Dimitri¬†John¬†Ledkov, Dmitrii¬†Fomchenkov, Dmitry¬†V.¬†Levin, dmkUK,\n        Dominique¬†Martinet, don¬†bright, drosdeck, Edson¬†Juliano¬†Drosdeck,\n        Egor¬†Ignatov, EinBaum, Emanuele¬†Giuseppe¬†Esposito, Eric¬†Curtin,\n        Erik¬†Sj√∂lund, Evgeny¬†Vereshchagin, Florian¬†Klink, Franck¬†Bui,\n        Fran√ßois¬†Rigault, Fran¬†Di√©guez, Franklin¬†Yu, Frantisek¬†Sumsal,\n        Fuminobu¬†TAKEYAMA, Ga√´l¬†PORTAY, Gerd¬†Hoffmann, Gertalitec,\n        Gibeom¬†Gwon, Gustavo¬†Noronha¬†Silva, Hannu¬†Lounento,\n        Hans¬†de¬†Goede, Haochen¬†Tong, HATAYAMA¬†Daisuke, Henrik¬†Holst,\n        Hoe¬†Hao¬†Cheng, Igor¬†Tsiglyar, Ivan¬†Vecera, James¬†Hilliard,\n        Jan¬†Engelhardt, Jan¬†Janssen, Jan¬†Luebbe, Jan¬†Macku, Janne¬†Sir√©n,\n        jcg, Jeidnx, Joan¬†Bruguera, Joerg¬†Behrmann, jonathanmetzman,\n        Jordan¬†Rome, Josef¬†Miegl, Joshua¬†Goins, Joyce, Joyce¬†Brum,\n        Juno¬†Computers, Kai¬†Lueke, Kevin¬†P.¬†Fleming, Kiran¬†Vemula, Klaus,\n        Klaus¬†Zipfel, Lawrence¬†Thorpe, Lennart¬†Poettering, licunlong,\n        Lily¬†Foster, Luca¬†Boccassi, Ludwig¬†Nussel, Luna¬†Jernberg,\n        maanyagoenka, Maanya¬†Goenka, Maksim¬†Kliazovich, Malte¬†Poll,\n        Marko¬†Korhonen, Masatake¬†YAMATO, Mateusz¬†Poliwczak, Matt¬†Johnston,\n        Miao¬†Wang, Micah¬†Abbott, Michael¬†A¬†Cassaniti, Michal¬†Koutn√Ω,\n        Michal¬†SekletaÃÅr, Mike¬†Yuan, mooo, Morten¬†Linderud, msizanoen,\n        Nick¬†Rosbrook, nikstur, Olivier¬†Gayot, Omojola¬†Joshua,\n        Paolo¬†Velati, Paul¬†Barker, Pavel¬†Borecki, Petr¬†Men≈°√≠k,\n        Philipp¬†Kern, Philip¬†Withnall, Piotr¬†DrƒÖg, Quintin¬†Hill,\n        Rene¬†Hollander, Richard¬†Phibel, Robert¬†Meijers, Robert¬†Scheck,\n        Roger¬†Gammans, Romain¬†Geissler, Ronan¬†Pigott, Russell¬†Harmon,\n        saikat0511, Samanta¬†Navarro, Sam¬†James, Sam¬†Morris,\n        Simon¬†Braunschmidt, Sjoerd¬†Simons, Sorah¬†Fukumori,\n        Stanislaw¬†Gruszka, Stefan¬†Roesch, Steven¬†Luo, Steve¬†Ramage,\n        Susant¬†Sahani, taniishkaaa, Tanishka, Temuri¬†Doghonadze,\n        Thierry¬†Martin, Thomas¬†Blume, Thomas¬†Genty, Thomas¬†Wei√üschuh,\n        Thorsten¬†Kukuk, Times-Z, Tobias¬†Powalowski, tofylion,\n        Topi¬†Miettinen, Uwe¬†Kleine-K√∂nig, Velislav¬†Ivanov,\n        Vitaly¬†Kuznetsov, V√≠t¬†Zikmund, Weblate, Will¬†Fancher,\n        William¬†Roberts, Winterhuman, Wolfgang¬†M√ºller, Xeonacid,\n        Xiaotian¬†Wu, Xi¬†Ruoyao, Yuri¬†Chornoivan, Yu¬†Watanabe, Yuxiang¬†Zhu,\n        Zbigniew¬†Jƒôdrzejewski-Szmek, zhmylove, ZjYwMj,\n        –î–∞–º—ò–∞–Ω¬†–ì–µ–æ—Ä–≥–∏–µ–≤—Å–∫–∏, –Ω–∞–±\n\n        ‚Äî Edinburgh, 2023-07-28\n\nCHANGES WITH 253:\n\n        Announcements of Future Feature Removals and Incompatible Changes:\n\n        * We intend to remove cgroup v1 support from systemd release after the\n          end of 2023. If you run services that make explicit use of cgroup v1\n          features (i.e. the \"legacy hierarchy\" with separate hierarchies for\n          each controller), please implement compatibility with cgroup v2 (i.e.\n          the \"unified hierarchy\") sooner rather than later. Most of Linux\n          userspace has been ported over already.\n\n        * We intend to remove support for split-usr (/usr mounted separately\n          during boot) and unmerged-usr (parallel directories /bin and\n          /usr/bin, /lib and /usr/lib, etc). This will happen in the second\n          half of 2023, in the first release that falls into that time window.\n          For more details, see:\n          https://lists.freedesktop.org/archives/systemd-devel/2022-September/048352.html\n\n        * We intend to change behaviour w.r.t. units of the per-user service\n          manager and sandboxing options, so that they work without having to\n          manually enable PrivateUsers= as well, which is not required for\n          system units. To make this work, we will implicitly enable user\n          namespaces (PrivateUsers=yes) when a sandboxing option is enabled in a\n          user unit. The drawback is that system users will no longer be visible\n          (and appear as 'nobody') to the user unit when a sandboxing option is\n          enabled. By definition a sandboxed user unit should run with reduced\n          privileges, so impact should be small. This will remove a great source\n          of confusion that has been reported by users over the years, due to\n          how these options require an extra setting to be manually enabled when\n          used in the per-user service manager, as opposed as to the system\n          service manager. We plan to enable this change in the next release\n          later this year. For more details, see:\n          https://lists.freedesktop.org/archives/systemd-devel/2022-December/048682.html\n\n        Deprecations and incompatible changes:\n\n        * systemctl will now warn when invoked without /proc/ mounted\n          (e.g. when invoked after chroot() into an directory tree without the\n          API mount points like /proc/ being set up.)  Operation in such an\n          environment is not fully supported.\n\n        * The return value of 'systemctl is-active|is-enabled|is-failed' for\n          unknown units is changed: previously 1 or 3 were returned, but now 4\n          (EXIT_PROGRAM_OR_SERVICES_STATUS_UNKNOWN) is used as documented.\n\n        * 'udevadm hwdb' subcommand is deprecated and will emit a warning.\n          systemd-hwdb (added in 2014) should be used instead.\n\n        * 'bootctl --json' now outputs a single JSON array, instead of a stream\n          of newline-separated JSON objects.\n\n        * Udev rules in 60-evdev.rules have been changed to load hwdb\n          properties for all modalias patterns. Previously only the first\n          matching pattern was used. This could change what properties are\n          assigned if the user has more and less specific patterns that could\n          match the same device, but it is expected that the change will have\n          no effect for most users.\n\n        * systemd-networkd-wait-online exits successfully when all interfaces\n          are ready or unmanaged. Previously, if neither '--any' nor\n          '--interface=' options were used, at least one interface had to be in\n          configured state. This change allows the case where systemd-networkd\n          is enabled, but no interfaces are configured, to be handled\n          gracefully. It may occur in particular when a different network\n          manager is also enabled and used.\n\n        * Some compatibility helpers were dropped: EmergencyAction= in the user\n          manager, as well as measuring kernel command line into PCR¬†8 in\n          systemd-stub, along with the -Defi-tpm-pcr-compat compile-time\n          option.\n\n        * The '-Dupdate-helper-user-timeout=' build-time option has been\n          renamed to '-Dupdate-helper-user-timeout-sec=', and now takes an\n          integer as parameter instead of a string.\n\n        * The DDI image dissection logic (which backs RootImage= in service\n          unit files, the --image= switch in various tools such as\n          systemd-nspawn, as well as systemd-dissect) will now only mount file\n          systems of types btrfs, ext4, xfs, erofs, squashfs, vfat. This list\n          can be overridden via the $SYSTEMD_DISSECT_FILE_SYSTEMS environment\n          variable. These file systems are fairly well supported and maintained\n          in current kernels, while others are usually more niche, exotic or\n          legacy and thus typically do not receive the same level of security\n          support and fixes.\n\n        * The default per-link multicast DNS mode is changed to \"yes\"\n          (that was previously \"no\"). As the default global multicast DNS mode\n          has been \"yes\" (but can be changed by the build option), now the\n          multicast DNS is enabled on all links by default. You can disable the\n          multicast DNS on all links by setting MulticastDNS= in resolved.conf,\n          or on an interface by calling \"resolvectl mdns INTERFACE no\".\n\n        New components:\n\n        * A tool 'ukify' tool to build, measure, and sign Unified Kernel Images\n          (UKIs) has been added. This replaces functionality provided by\n          'dracut --uefi' and extends it with automatic calculation of PE file\n          offsets, insertion of signed PCR policies generated by\n          systemd-measure, support for initrd concatenation, signing of the\n          embedded Linux image and the combined image with sbsign, and\n          heuristics to autodetect the kernel uname and verify the splash\n          image.\n\n        Changes in systemd and units:\n\n        * A new service type Type=notify-reload is defined. When such a unit is\n          reloaded a UNIX process signal (typically SIGHUP) is sent to the main\n          service process. The manager will then wait until it receives a\n          \"RELOADING=1\" followed by a \"READY=1\" notification from the unit as\n          response (via sd_notify()). Otherwise, this type is the same as\n          Type=notify. A new setting ReloadSignal= may be used to change the\n          signal to send from the default of SIGHUP.\n\n          user@.service, systemd-networkd.service, systemd-udevd.service, and\n          systemd-logind have been updated to this type.\n\n        * Initrd environments which are not on a pure memory file system (e.g.\n          overlayfs combination as opposed to tmpfs) are now supported. With\n          this change, during the initrd ‚Üí host transition (\"switch root\")\n          systemd will erase all files of the initrd only when the initrd is\n          backed by a memory file system such as tmpfs.\n\n        * New per-unit MemoryZSwapMax= option has been added to configure\n          memory.zswap.max cgroup properties (the maximum amount of zswap\n          used).\n\n        * A new LogFilterPatterns= option has been added for units. It may be\n          used to specify accept/deny regular expressions for log messages\n          generated by the unit, that shall be enforced by systemd-journald.\n          Rejected messages are neither stored in the journal nor forwarded.\n          This option may be used to suppress noisy or uninteresting messages\n          from units.\n\n        * The manager has a new\n          org.freedesktop.systemd1.Manager.GetUnitByPIDFD() D-Bus method to\n          query process ownership via a PIDFD, which is more resilient against\n          PID recycling issues.\n\n        * Scope units now support OOMPolicy=. Login session scopes default to\n          OOMPolicy=continue, allowing login scopes to survive the OOM killer\n          terminating some processes in the scope.\n\n        * systemd-fstab-generator now supports x-systemd.makefs option for\n          /sysroot/ (in the initrd).\n\n        * The maximum rate at which daemon reloads are executed can now be\n          limited with the new ReloadLimitIntervalSec=/ReloadLimitBurst=\n          options. (Or the equivalent on the kernel command line:\n          systemd.reload_limit_interval_sec=/systemd.reload_limit_burst=). In\n          addition, systemd now logs the originating unit and PID when a reload\n          request is received over D-Bus.\n\n        * When enabling a swap device systemd will now reinitialize the device\n          when the page size of the swap space does not match the page size of\n          the running kernel. Note that this requires the 'swapon' utility to\n          provide the '--fixpgsz' option, as implemented by util-linux, and it\n          is not supported by busybox at the time of writing.\n\n        * systemd now executes generator programs in a mount namespace\n          \"sandbox\" with most of the file system read-only and write access\n          restricted to the output directories, and with a temporary /tmp/\n          mount provided. This provides a safeguard against programming errors\n          in the generators, but also fixes here-docs in shells, which\n          previously didn't work in early boot when /tmp/ wasn't available\n          yet. (This feature has no security implications, because the code is\n          still privileged and can trivially exit the sandbox.)\n\n        * The system manager will now parse a new \"vmm.notify_socket\"\n          system credential, which may be supplied to a VM via SMBIOS. If\n          found, the manager will send a \"READY=1\" notification on the\n          specified socket after boot is complete. This allows readiness\n          notification to be sent from a VM guest to the VM host over a VSOCK\n          socket.\n\n        * The sample PAM configuration file for systemd-user@.service now\n          includes a call to pam_namespace. This puts children of user@.service\n          in the expected namespace. (Many distributions replace their file\n          with something custom, so this change has limited effect.)\n\n        * A new environment variable $SYSTEMD_DEFAULT_MOUNT_RATE_LIMIT_BURST\n          can be used to override the mount units burst late limit for\n          parsing '/proc/self/mountinfo', which was introduced in v249.\n          Defaults to 5.\n\n        * Drop-ins for init.scope changing control group resource limits are\n          now applied, while they were previously ignored.\n\n        * New build-time configuration options '-Ddefault-timeout-sec=' and\n          '-Ddefault-user-timeout-sec=' have been added, to let distributions\n          choose the default timeout for starting/stopping/aborting system and\n          user units respectively.\n\n        * Service units gained a new setting OpenFile= which may be used to\n          open arbitrary files in the file system (or connect to arbitrary\n          AF_UNIX sockets in the file system), and pass the open file\n          descriptor to the invoked process via the usual file descriptor\n          passing protocol. This is useful to give unprivileged services access\n          to select files which have restrictive access modes that would\n          normally not allow this. It's also useful in case RootDirectory= or\n          RootImage= is used to allow access to files from the host environment\n          (which is after all not visible from the service if these two options\n          are used.)\n\n        Changes in udev:\n\n        * The new net naming scheme \"v253\" has been introduced. In the new\n          scheme, ID_NET_NAME_PATH is also set for USB devices not connected via\n          a PCI bus. This extends the coverage of predictable interface names\n          in some embedded systems.\n\n          The \"amba\" bus path is now included in ID_NET_NAME_PATH, resulting in\n          a more informative path on some embedded systems.\n\n        * Partition block devices will now also get symlinks in\n          /dev/disk/by-diskseq/<seq>-part<n>, which may be used to reference\n          block device nodes via the kernel's \"diskseq\" value. Previously those\n          symlinks were only created for the main block device.\n\n        * A new operator '-=' is supported for SYMLINK variables. This allows\n          symlinks to be unconfigured even if an earlier rule added them.\n\n        * 'udevadm --trigger --settle' now also works for network devices\n          that are being renamed.\n\n        Changes in sd-boot, bootctl, and the Boot Loader Specification:\n\n        * systemd-boot now passes its random seed directly to the kernel's RNG\n          via the LINUX_EFI_RANDOM_SEED_TABLE_GUID configuration table, which\n          means the RNG gets seeded very early in boot before userspace has\n          started.\n\n        * systemd-boot will pass a disk-backed random seed ‚Äì even when secure\n          boot is enabled ‚Äì if it can additionally get a random seed from EFI\n          itself (via EFI's RNG protocol), or a prior seed in\n          LINUX_EFI_RANDOM_SEED_TABLE_GUID from a preceding bootloader.\n\n        * systemd-boot-system-token.service was renamed to\n          systemd-boot-random-seed.service and extended to always save a random\n          seed to ESP on every boot when a compatible boot loader is used. This\n          allows a refreshed random seed to be used in the boot loader.\n\n        * systemd-boot handles various seed inputs using a domain- and\n          field-separated hashing scheme.\n\n        * systemd-boot's 'random-seed-mode' option has been removed. A system\n          token is now always required to be present for random seeds to be\n          used.\n\n        * systemd-boot now supports being loaded from other locations than the\n          ESP, for example for direct kernel boot under QEMU or when embedded\n          into the firmware.\n\n        * systemd-boot now parses SMBIOS information to detect\n          virtualization. This information is used to skip some warnings which\n          are not useful in a VM and to conditionalize other aspects of\n          behaviour.\n\n        * systemd-boot now supports a new 'if-safe' mode that will perform UEFI\n          Secure Boot automated certificate enrollment from the ESP only if it\n          is considered 'safe' to do so. At the moment 'safe' means running in\n          a virtual machine.\n\n        * systemd-stub now processes random seeds in the same way as\n          systemd-boot already does, in case a unified kernel image is being\n          used from a different bootloader than systemd-boot, or without any\n          boot load at all.\n\n        * bootctl will now generate a system token on all EFI systems, even\n          virtualized ones, and is activated in the case that the system token\n          is missing from either sd-boot and sd-stub booted systems.\n\n        * bootctl now implements two new verbs: 'kernel-identify' prints the\n          type of a kernel image file, and 'kernel-inspect' provides\n          information about the embedded command line and kernel version of\n          UKIs.\n\n        * bootctl now honours $KERNEL_INSTALL_CONF_ROOT with the same meaning\n          as for kernel-install.\n\n        * The JSON output of \"bootctl list\" will now contain two more fields:\n          isDefault and isSelected are boolean fields set to true on the\n          default and currently booted boot menu entries.\n\n        * bootctl gained a new verb \"unlink\" for removing a boot loader entry\n          type #1 file from disk in a safe and robust way.\n\n        * bootctl also gained a new verb \"cleanup\" that automatically removes\n          all files from the ESP's and XBOOTLDR's \"entry-token\" directory, that\n          is not referenced anymore by any installed Type #1 boot loader\n          specification entry. This is particularly useful in environments where\n          a large number of entries reference the same or partly the same\n          resources (for example, for snapshot-based setups).\n\n        Changes in kernel-install:\n\n        * A new \"installation layout\" can be configured as layout=uki. With\n          this setting, a Boot Loader Specification Type#1 entry will not be\n          created. Instead, a new kernel-install plugin 90-uki-copy.install\n          will copy any .efi files from the staging area into the boot\n          partition. A plugin to generate the UKI .efi file must be provided\n          separately.\n\n        Changes in systemctl:\n\n        * 'systemctl reboot' has dropped support for accepting a positional\n          argument as the argument to the reboot(2) syscall. Please use the\n          --reboot-argument= option instead.\n\n        * 'systemctl disable' will now warn when called on units without\n          install information. A new --no-warn option has been added that\n          silences this warning.\n\n        * New option '--drop-in=' can be used to tell 'systemctl edit' the name\n          of the drop-in to edit. (Previously, 'override.conf' was always\n          used.)\n\n        * 'systemctl list-dependencies' now respects --type= and --state=.\n\n        * 'systemctl kexec' now supports XEN VMM environments.\n\n        * 'systemctl edit' will now tell the invoked editor to jump into the\n          first line with actual unit file data, skipping over synthesized\n          comments.\n\n        Changes in systemd-networkd and related tools:\n\n        * The [DHCPv4] section in .network file gained new SocketPriority=\n          setting that assigns the Linux socket priority used by the DHCPv4 raw\n          socket. This may be used in conjunction with the\n          EgressQOSMaps=setting in [VLAN] section of .netdev file to send the\n          desired ethernet 802.1Q frame priority for DHCPv4 initial\n          packets. This cannot be achieved with netfilter mangle tables because\n          of the raw socket bypass.\n\n        * The [DHCPv4] and [IPv6AcceptRA] sections in .network file gained a\n          new QuickAck= boolean setting that enables the TCP quick ACK mode for\n          the routes configured by the acquired DHCPv4 lease or received router\n          advertisements (RAs).\n\n        * The RouteMetric= option (for DHCPv4, DHCPv6, and IPv6 advertised\n          routes) now accepts three values, for high, medium, and low preference\n          of the router (which can be set with the RouterPreference=) setting.\n\n        * systemd-networkd-wait-online now supports matching via alternative\n          interface names.\n\n        * The [DHCPv6] section in .network file gained new SendRelease=\n          setting which enables the DHCPv6 client to send release when\n          it stops. This is the analog of the [DHCPv4] SendRelease= setting.\n          It is enabled by default.\n\n        * If the Address= setting in [Network] or [Address] sections in .network\n          specified without its prefix length, then now systemd-networkd assumes\n          /32 for IPv4 or /128 for IPv6 addresses.\n\n        * networkctl shows network and link file dropins in status output.\n\n        Changes in systemd-dissect:\n\n        * systemd-dissect gained a new option --list, to print the paths of\n          all files and directories in a DDI.\n\n        * systemd-dissect gained a new option --mtree, to generate a file\n          manifest compatible with BSD mtree(5) of a DDI\n\n        * systemd-dissect gained a new option --with, to execute a command with\n          the specified DDI temporarily mounted and used as working\n          directory. This is for example useful to convert a DDI to \"tar\"\n          simply by running it within a \"systemd-dissect --with\" invocation.\n\n        * systemd-dissect gained a new option --discover, to search for\n          Discoverable Disk Images (DDIs) in well-known directories of the\n          system. This will list machine, portable service and system extension\n          disk images.\n\n        * systemd-dissect now understands 2nd stage initrd images stored as a\n          Discoverable Disk Image (DDI).\n\n        * systemd-dissect will now display the main UUID of GPT DDIs (i.e. the\n          disk UUID stored in the GPT header) among the other data it can show.\n\n        * systemd-dissect gained a new --in-memory switch to operate on an\n          in-memory copy of the specified DDI file. This is useful to access a\n          DDI with write access without persisting any changes. It's also\n          useful for accessing a DDI without keeping the originating file\n          system busy.\n\n        * The DDI dissection logic will now automatically detect the intended\n          sector size of disk images stored in files, based on the GPT\n          partition table arrangement. Loopback block devices for such DDIs\n          will then be configured automatically for the right sector size. This\n          is useful to make dealing with modern 4K sector size DDIs fully\n          automatic. The systemd-dissect tool will now show the detected sector\n          size among the other DDI information in its output.\n\n        Changes in systemd-repart:\n\n        * systemd-repart gained new options --include-partitions= and\n          --exclude-partitions= to filter operation on partitions by type UUID.\n          This allows systemd-repart to be used to build images in which the\n          type of one partition is set based on the contents of another\n          partition (for example when the boot partition shall include a verity\n          hash of the root partition).\n\n        * systemd-repart also gained a --defer-partitions= option that is\n          similar to --exclude-partitions=, but the size of the partition is\n          still taken into account when sizing partitions, but without\n          populating it.\n\n        * systemd-repart gained a new --sector-size= option to specify what\n          sector size should be used when an image is created.\n\n        * systemd-repart now supports generating erofs file systems via\n          CopyFiles= (a read-only file system similar to squashfs).\n\n        * The Minimize= option was extended to accept \"best\" (which means the\n          most minimal image possible, but may require multiple attempts) and\n          \"guess\" (which means a reasonably small image).\n\n        * The systemd-growfs binary now comes with a regular unit file template\n          systemd-growfs@.service which can be instantiated directly for any\n          desired file system. (Previously, the unit was generated dynamically\n          by various generators, but no regular unit file template was\n          available.)\n\n        Changes in journal tools:\n\n        * Various systemd tools will append extra fields to log messages when\n          in debug mode, or when SYSTEMD_ENABLE_LOG_CONTEXT=1 is set. Currently\n          this includes information about D-Bus messages when sd-bus is used,\n          e.g. DBUS_SENDER=, DBUS_DESTINATION=, and DBUS_PATH=, and information\n          about devices when sd-device is used, e.g. DEVNAME= and DRIVER=.\n          Details of what is logged and when are subject to change.\n\n        * The systemd-journald-audit.socket can now be disabled via the usual\n          \"systemctl disable\" mechanism to stop collection of audit\n          messages. Please note that it is not enabled statically anymore and\n          must be handled by the preset/enablement logic in package\n          installation scripts.\n\n        * New options MaxUse=, KeepFree=, MaxFileSize=, and MaxFiles= can\n          be used to curtail disk use by systemd-journal-remote. This is\n          similar to the options supported by systemd-journald.\n\n        Changes in systemd-cryptenroll, systemd-cryptsetup, and related\n        components:\n\n        * When enrolling new keys systemd-cryptenroll now supports unlocking\n          via FIDO2 tokens (option --unlock-fido2-device=). Previously, a\n          password was strictly required to be specified.\n\n        * systemd-cryptsetup now supports pre-flight requests for FIDO2 tokens\n          (except for tokens with user verification, UV) to identify tokens\n          before authentication. Multiple FIDO2 tokens can now be enrolled at\n          the same time, and systemd-cryptsetup will automatically select one\n          that corresponds to one of the available LUKS key slots.\n\n        * systemd-cryptsetup now supports new options tpm2-measure-bank= and\n          tpm2-measure-pcr= in crypttab(5). These allow specifying the TPM2 PCR\n          bank and number into which the volume key should be measured. This is\n          automatically enabled for the encrypted root volume discovered and\n          activated by systemd-gpt-auto-generator.\n\n        * systemd-gpt-auto-generator mounts the ESP and XBOOTLDR partitions with\n          \"noexec,nosuid,nodev\".\n\n        * systemd-gpt-auto-generator will now honour the rootfstype= and\n          rootflags= kernel command line switches for root file systems it\n          discovers, to match behaviour in case an explicit root fs is\n          specified via root=.\n\n        * systemd-pcrphase gained new options --machine-id and --file-system=\n          to measure the machine-id and mount point information into PCR¬†15.\n          New service unit files systemd-pcrmachine.service and\n          systemd-pcrfs@.service have been added that invoke the tool with\n          these switches during early boot.\n\n        * systemd-pcrphase gained a --graceful switch will make it exit cleanly\n          with a success exit code even if no TPM device is detected.\n\n        * systemd-cryptenroll now stores the user-supplied PIN with a salt,\n          making it harder to brute-force.\n\n        Changes in other tools:\n\n        * systemd-homed gained support for luksPbkdfForceIterations (the\n          intended number of iterations for the PBKDF operation on LUKS).\n\n        * Environment variables $SYSTEMD_HOME_MKFS_OPTIONS_BTRFS,\n          $SYSTEMD_HOME_MKFS_OPTIONS_EXT4, and $SYSTEMD_HOME_MKFS_OPTIONS_XFS\n          may now be used to specify additional arguments for mkfs when\n          systemd-homed formats a file system.\n\n        * systemd-hostnamed now exports the contents of\n          /sys/class/dmi/id/bios_vendor and /sys/class/dmi/id/bios_date via two\n          new D-Bus properties: FirmwareVendor and FirmwareDate. This allows\n          unprivileged code to access those values.\n\n          systemd-hostnamed also exports the SUPPORT_END= field from\n          os-release(5) as OperatingSystemSupportEnd. hostnamectl make uses of\n          this to show the status of the installed system.\n\n        * systemd-measure gained an --append= option to sign multiple phase\n          paths with different signing keys. This allows secrets to be\n          accessible only in certain parts of the boot sequence. Note that\n          'ukify' provides similar functionality in a more accessible form.\n\n        * systemd-timesyncd will now write a structured log message with\n          MESSAGE_ID set to SD_MESSAGE_TIME_BUMP when it bumps the clock based\n          on a on-disk timestamp, similarly to what it did when reaching\n          synchronization via NTP.\n\n        * systemd-timesyncd will now update the on-disk timestamp file on each\n          boot at least once, making it more likely that the system time\n          increases in subsequent boots.\n\n        * systemd-vconsole-setup gained support for system/service credentials:\n          vconsole.keymap/vconsole.keymap_toggle and\n          vconsole.font/vconsole.font_map/vconsole.font_unimap are analogous\n          the similarly-named options in vconsole.conf.\n\n        * systemd-localed will now save the XKB keyboard configuration to\n          /etc/vconsole.conf, and also read it from there with a higher\n          preference than the /etc/X11/xorg.conf.d/00-keyboard.conf config\n          file. Previously, this information was stored in the former file in\n          converted form, and only in latter file in the original form. Tools\n          which want to access keyboard configuration can now do so from a\n          standard location.\n\n        * systemd-resolved gained support for configuring the nameservers and\n          search domains via kernel command line (nameserver=, domain=) and\n          credentials (network.dns, network.search_domains).\n\n        * systemd-resolved will now synthesize host names for the DNS stub\n          addresses it supports. Specifically when \"_localdnsstub\" is resolved,\n          127.0.0.53 is returned, and if \"_localdnsproxy\" is resolved\n          127.0.0.54 is returned.\n\n        * systemd-notify will now send a \"RELOADING=1\" notification when called\n          with --reloading, and \"STOPPING=1\" when called with --stopping. This\n          can be used to implement notifications from units where it's easier\n          to call a program than to use the sd-daemon library.\n\n        * systemd-analyze's 'plot' command can now output its information in\n          JSON, controlled via the --json= switch. Also, new --table, and\n          --no-legend options have been added.\n\n        * 'machinectl enable' will now automatically enable machines.target\n          unit in addition to adding the machine unit to the target.\n\n          Similarly, 'machinectl start|stop' gained a --now option to enable or\n          disable the machine unit when starting or stopping it.\n\n        * systemd-sysusers will now create /etc/ if it is missing.\n\n        * systemd-sleep 'HibernateDelaySec=' setting is changed back to\n          pre-v252's behaviour, and a new 'SuspendEstimationSec=' setting is\n          added to provide the new initial value for the new automated battery\n          estimation functionality. If 'HibernateDelaySec=' is set to any value,\n          the automated estimate (and thus the automated hibernation on low\n          battery to avoid data loss) functionality will be disabled.\n\n        * Default tmpfiles.d/ configuration will now automatically create\n          credentials storage directory '/etc/credstore/' with the appropriate,\n          secure permissions. If '/run/credstore/' exists, its permissions will\n          be fixed too in case they are not correct.\n\n        Changes in libsystemd and shared code:\n\n        * sd-bus gained new convenience functions sd_bus_emit_signal_to(),\n          sd_bus_emit_signal_tov(), and sd_bus_message_new_signal_to().\n\n        * sd-id128 functions now return -EUCLEAN (instead of -EIO) when the\n          128-bit ID in files such as /etc/machine-id has an invalid\n          format. They also accept NULL as output parameter in more places,\n          which is useful when the caller only wants to validate the inputs and\n          does not need the output value.\n\n        * sd-login gained new functions sd_pidfd_get_session(),\n          sd_pidfd_get_owner_uid(), sd_pidfd_get_unit(),\n          sd_pidfd_get_user_unit(), sd_pidfd_get_slice(),\n          sd_pidfd_get_user_slice(), sd_pidfd_get_machine_name(), and\n          sd_pidfd_get_cgroup(), that are analogous to sd_pid_get_*(),\n          but accept a PIDFD instead of a PID.\n\n        * sd-path (and systemd-path) now export four new paths:\n          SD_PATH_SYSTEMD_SYSTEM_ENVIRONMENT_GENERATOR,\n          SD_PATH_SYSTEMD_USER_ENVIRONMENT_GENERATOR,\n          SD_PATH_SYSTEMD_SEARCH_SYSTEM_ENVIRONMENT_GENERATOR, and\n          SD_PATH_SYSTEMD_SEARCH_USER_ENVIRONMENT_GENERATOR,\n\n        * sd_notify() now supports AF_VSOCK as transport for notification\n          messages (in addition to the existing AF_UNIX support). This is\n          enabled if $NOTIFY_SOCKET is set in a \"vsock:CID:port\" format.\n\n        * Detection of chroot() environments now works if /proc/ is not\n          mounted. This affects systemd-detect-virt --chroot, but also means\n          that systemd tools will silently skip various operations in such an\n          environment.\n\n        * \"Lockheed Martin Hardened Security for Intel Processors\" (HS SRE)\n          virtualization is now detected.\n\n        Changes in the build system:\n\n        * Standalone variants of systemd-repart and systemd-shutdown may now be\n          built (if -Dstandalone=true).\n\n        * systemd-ac-power has been moved from /usr/lib/ to /usr/bin/, to, for\n          example, allow scripts to conditionalize execution on AC power\n          supply.\n\n        * The libp11kit library is now loaded through dlopen(3).\n\n        Changes in the documentation:\n\n        * Specifications that are not closely tied to systemd have moved to\n          https://uapi-group.org/specifications/: the Boot Loader Specification\n          and the Discoverable Partitions Specification.\n\n        Contributions from: ÍπÄÏù∏Ïàò, 13r0ck, Aidan¬†Dang, Alberto¬†Planas,\n        Alvin¬†≈†ipraga, Andika¬†Triwidada, AndyChi, angus-p, Anita¬†Zhang,\n        Antonio¬†Alvarez¬†Feijoo, Arsen¬†Arsenoviƒá, asavah, Benjamin¬†Fogle,\n        Benjamin¬†Tissoires, berenddeschouwer, BerndAdameit,\n        Bernd¬†Steinhauser, blutch112, cake03, Callum¬†Farmer, Carlo¬†Teubner,\n        Charles¬†Hardin, chris, Christian¬†Brauner, Christian¬†G√∂ttsche,\n        Cristian¬†Rodr√≠guez, Daan¬†De¬†Meyer, Dan¬†Streetman, DaPigGuy,\n        Darrell¬†Kavanagh, David¬†Tardon, dependabot[bot], Dirk¬†Su,\n        Dmitry¬†V.¬†Levin, drosdeck, Edson¬†Juliano¬†Drosdeck, edupont,\n        Eric¬†DeVolder, Erik¬†Moqvist, Evgeny¬†Vereshchagin, Fabian¬†Gurtner,\n        Felix¬†Riemann, Franck¬†Bui, Frantisek¬†Sumsal, Geert¬†Lorang,\n        Gerd¬†Hoffmann, Gio, Hannoskaj, Hans¬†de¬†Goede, Hugo¬†Carvalho,\n        igo95862, Ilya¬†Leoshkevich, Ivan¬†Shapovalov, Jacek¬†Migacz,\n        Jade¬†Lovelace, Jan¬†Engelhardt, Jan¬†Janssen, Jan¬†Macku, January,\n        Jason¬†A.¬†Donenfeld, jcg, Jean-Tiare¬†Le¬†Bigot, Jelle¬†van¬†der¬†Waa,\n        Jeremy¬†Linton, Jian¬†Zhang, Jiayi¬†Chen, Jia¬†Zhang, Joerg¬†Behrmann,\n        J√∂rg¬†Thalheim, Joshua¬†Goins, joshuazivkovic, Joshua¬†Zivkovic,\n        Kai-Chuan¬†Hsieh, Khem¬†Raj, Koba¬†Ko, Lennart¬†Poettering, lichao,\n        Li¬†kunyu, Luca¬†Boccassi, Luca¬†BRUNO, Ludwig¬†Nussel,\n        ≈Åukasz¬†Stelmach, Lycowolf, marcel151, Marcus¬†Sch√§fer, Marek¬†Vasut,\n        Mark¬†Laws, Michael¬†Biebl, Micha≈Ç¬†Kotyla, Michal¬†Koutn√Ω,\n        Michal¬†SekletaÃÅr, Mike¬†Gilbert, Mike¬†Yuan, MkfsSion, ml,\n        msizanoen1, mvzlb, MVZ¬†Ludwigsburg, Neil¬†Moore, Nick¬†Rosbrook,\n        noodlejetski, Pasha¬†Vorobyev, Peter¬†Cai, p-fpv, Phaedrus¬†Leeds,\n        Philipp¬†Jungkamp, Quentin¬†Deslandes, Raul¬†Tambre, Ray¬†Strode,\n        reuben¬†olinsky, Richard¬†E.¬†van¬†der¬†Luit, Richard¬†Phibel,\n        Ricky¬†Tigg, Robin¬†Humble, rogg, Rudi¬†Heitbaum, Sam¬†James,\n        Samuel¬†Cabrero, Samuel¬†Thibault, Siddhesh¬†Poyarekar, Simon¬†Brand,\n        Space¬†Meyer, Spindle¬†Security, Steve¬†Ramage, Takashi¬†Sakamoto,\n        Thomas¬†Haller, Tonƒái¬†Galiƒá, Topi¬†Miettinen, Torsten¬†Hilbrich,\n        Tuetuopay, uerdogan, Ulrich¬†√ñlmann, Valentin¬†David,\n        Vitaly¬†Kuznetsov, Vito¬†Caputo, Waltibaba, Will¬†Fancher,\n        William¬†Roberts, wouter¬†bolsterlee, Youfu¬†Zhang, Yu¬†Watanabe,\n        Zbigniew¬†Jƒôdrzejewski-Szmek, –î–∞–º—ò–∞–Ω¬†–ì–µ–æ—Ä–≥–∏–µ–≤—Å–∫–∏,\n        –Ω–∞–±\n\n        ‚Äî Warsaw, 2023-02-15\n\nCHANGES WITH 252 üéÉ:\n\n        Announcements of Future Feature Removals:\n\n        * We intend to remove cgroup v1 support from systemd release after the\n          end of 2023. If you run services that make explicit use of cgroup v1\n          features (i.e. the \"legacy hierarchy\" with separate hierarchies for\n          each controller), please implement compatibility with cgroup v2 (i.e.\n          the \"unified hierarchy\") sooner rather than later. Most of Linux\n          userspace has been ported over already.\n\n        * We intend to remove support for split-usr (/usr mounted separately\n          during boot) and unmerged-usr (parallel directories /bin and\n          /usr/bin, /lib and /usr/lib, etc). This will happen in the second\n          half of 2023, in the first release that falls into that time window.\n          For more details, see:\n          https://lists.freedesktop.org/archives/systemd-devel/2022-September/048352.html\n\n        Compatibility Breaks:\n\n        * ConditionKernelVersion= checks that use the '=' or '!=' operators\n          will now do simple string comparisons (instead of version comparisons\n          √† la stverscmp()). Version comparisons are still done for the\n          ordering operators '<', '>', '<=', '>='. Moreover, if no operator is\n          specified, a shell-style glob match is now done. This creates a minor\n          incompatibility compared to older systemd versions when the '*', '?',\n          '[', ']' characters are used, as these will now match as shell globs\n          instead of literally. Given that kernel version strings typically do\n          not include these characters we expect little breakage through this\n          change.\n\n        * The service manager will now read the SELinux label used for SELinux\n          access checks from the unit file at the time it loads the file.\n          Previously, the label would be read at the moment of the access\n          check, which was problematic since at that time the unit file might\n          already have been updated or removed.\n\n        New Features:\n\n        * systemd-measure is a new tool for calculating and signing expected\n          TPM2 PCR values for a given unified kernel image (UKI) booted via\n          sd-stub. The public key used for the signature and the signed\n          expected PCR information can be embedded inside the UKI. This\n          information can be extracted from the UKI by external tools and code\n          in the image itself and is made available to userspace in the booted\n          kernel.\n\n          systemd-cryptsetup, systemd-cryptenroll, and systemd-creds have been\n          updated to make use of this information if available in the booted\n          kernel: when locking an encrypted volume/credential to the TPM\n          systemd-cryptenroll/systemd-creds will use the public key to bind the\n          volume/credential to any kernel that carries PCR information signed\n          by the same key pair. When unlocking such volumes/credentials\n          systemd-cryptsetup/systemd-creds will use the signature embedded in\n          the booted UKI to gain access.\n\n          Binding TPM-based disk encryption to public keys/signatures of PCR\n          values ‚Äî instead of literal PCR values ‚Äî addresses the inherent\n          \"brittleness\" of traditional PCR-bound TPM disk encryption schemes:\n          disks remain accessible even if the UKI is updated, without any TPM\n          specific preparation during the OS update ‚Äî as long as each UKI\n          carries the necessary PCR signature information.\n\n          Net effect: if you boot a properly prepared kernel, TPM-bound disk\n          encryption now defaults to be locked to kernels which carry PCR\n          signatures from the same key pair. Example: if a hypothetical distro\n          FooOS prepares its UKIs like this, TPM-based disk encryption is now ‚Äì\n          by default ‚Äì bound to only FooOS kernels, and encrypted volumes bound\n          to the TPM cannot be unlocked on kernels from other sources. (But do\n          note this behaviour requires preparation/enabling in the UKI, and of\n          course users can always enroll non-TPM ways to unlock the volume.)\n\n        * systemd-pcrphase is a new tool that is invoked at six places during\n          system runtime, and measures additional words into TPM2 PCR¬†11, to\n          mark milestones of the boot process. This allows binding access to\n          specific TPM2-encrypted secrets to specific phases of the boot\n          process. (Example: LUKS2 disk encryption key only accessible in the\n          initrd, but not later.)\n\n        Changes in systemd itself, i.e. the manager and units\n\n        * The cpu controller is delegated to user manager units by default, and\n          CPUWeight= settings are applied to the top-level user slice units\n          (app.slice, background.slice, session.slice). This provides a degree\n          of resource isolation between different user services competing for\n          the CPU.\n\n        * Systemd can optionally do a full preset in the \"first boot\" condition\n          (instead of just enable-only). This behaviour is controlled by the\n          compile-time option -Dfirst-boot-full-preset. Right now it defaults\n          to 'false', but the plan is to switch it to 'true' for the subsequent\n          release.\n\n        * Drop-ins are now allowed for transient units too.\n\n        * Systemd will set the taint flag 'support-ended' if it detects that\n          the OS image is past its end-of-support date. This date is declared\n          in a new /etc/os-release field SUPPORT_END= described below.\n\n        * Two new settings ConditionCredential= and AssertCredential= can be\n          used to skip or fail units if a certain system credential is not\n          provided.\n\n        * ConditionMemory= accepts size suffixes (K, M, G, T, ‚Ä¶).\n\n        * DefaultSmackProcessLabel= can be used in system.conf and user.conf to\n          specify the SMACK security label to use when not specified in a unit\n          file.\n\n        * DefaultDeviceTimeoutSec= can be used in system.conf and user.conf to\n          specify the default timeout when waiting for device units to\n          activate.\n\n        * C.UTF-8 is used as the default locale if nothing else has been\n          configured.\n\n        * [Condition|Assert]Firmware= have been extended to support certain\n          SMBIOS fields. For example\n\n            ConditionFirmware=smbios-field(board_name = \"Custom Board\")\n\n          conditionalizes the unit to run only when\n          /sys/class/dmi/id/board_name contains \"Custom Board\" (without the\n          quotes).\n\n        * ConditionFirstBoot= now correctly evaluates as true only during the\n          boot phase of the first boot. A unit executed later, after booting\n          has completed, will no longer evaluate this condition as true.\n\n        * Socket units will now create sockets in the SELinuxContext= of the\n          associated service unit, if any.\n\n        * Boot phase transitions (start initrd ‚Üí exit initrd ‚Üí boot complete ‚Üí\n          shutdown) will be measured into TPM2 PCR¬†11, so that secrets can be\n          bound to a specific runtime phase. E.g.: a LUKS encryption key can be\n          unsealed only in the initrd.\n\n        * Service credentials (i.e. SetCredential=/LoadCredential=/‚Ä¶) will now\n          also be provided to ExecStartPre= processes.\n\n        * Various units are now correctly ordered against\n          initrd-switch-root.target where previously a conflict without\n          ordering was configured. A stop job for those units would be queued,\n          but without the ordering it could be executed only after\n          initrd-switch-root.service, leading to units not being restarted in\n          the host system as expected.\n\n        * In order to fully support the IPMI watchdog driver, which has not yet\n          been ported to the new common watchdog device interface,\n          /dev/watchdog0 will be tried first and systemd will silently fallback\n          to /dev/watchdog if it is not found.\n\n        * New watchdog-related D-Bus properties are now published by systemd:\n          WatchdogDevice, WatchdogLastPingTimestamp,\n          WatchdogLastPingTimestampMonotonic.\n\n        * At shutdown, API virtual files systems (proc, sys, etc.) will be\n          unmounted lazily.\n\n        * At shutdown, systemd will now log about processes blocking unmounting\n          of file systems.\n\n        * A new meson build option 'clock-valid-range-usec-max' was added to\n          allow disabling system time correction if RTC returns a timestamp far\n          in the future.\n\n        * Propagated restart jobs will no longer be discarded while a unit is\n          activating.\n\n        * PID 1 will now import system credentials from SMBIOS Type 11 fields\n          (\"OEM vendor strings\"), in addition to qemu_fwcfg. This provides a\n          simple, fast and generic path for supplying credentials to a VM,\n          without involving external tools such as cloud-init/ignition.\n\n        * The CPUWeight= setting of unit files now accepts a new special value\n          \"idle\", which configures \"idle\" level scheduling for the unit.\n\n        * Service processes that are activated due to a .timer or .path unit\n          triggering will now receive information about this via environment\n          variables. Note that this is information is lossy, as activation\n          might be coalesced and only one of the activating triggers will be\n          reported. This is hence more suited for debugging or tracing rather\n          than for behaviour decisions.\n\n        * The riscv_flush_icache(2) system call has been added to the list of\n          system calls allowed by default when SystemCallFilter= is used.\n\n        * The selinux context derived from the target executable, instead of\n          'init_t' used for the manager itself, is now used when creating\n          listening sockets for units that specify SELinuxContextFromNet=yes.\n\n        Changes in sd-boot, bootctl, and the Boot Loader Specification:\n\n        * The Boot Loader Specification has been cleaned up and clarified.\n          Various corner cases in version string comparisons have been fixed\n          (e.g. comparisons for empty strings). Boot counting is now part of\n          the main specification.\n\n        * New PCRs measurements are performed during boot: PCR¬†11 for the\n          kernel+initrd combo, PCR¬†13 for any sysext images. If a measurement\n          took place this is now reported to userspace via the new\n          StubPcrKernelImage and StubPcrInitRDSysExts EFI variables.\n\n        * As before, systemd-stub will measure kernel parameters and system\n          credentials into PCR¬†12. It will now report this fact via the\n          StubPcrKernelParameters EFI variable to userspace.\n\n        * The UEFI monotonic boot counter is now included in the updated random\n          seed file maintained by sd-boot, providing some additional entropy.\n\n        * sd-stub will use LoadImage/StartImage to execute the kernel, instead\n          of arranging the image manually and jumping to the kernel entry\n          point. sd-stub also installs a temporary UEFI SecurityOverride to\n          allow the (unsigned) nested image to be booted. This is safe because\n          the outer (signed) stub+kernel binary must have been verified before\n          the stub was executed.\n\n        * Booting in EFI mixed mode (a 64-bit kernel over 32-bit UEFI firmware)\n          is now supported by sd-boot.\n\n        * bootctl gained a bunch of new options: --all-architectures to install\n          binaries for all supported EFI architectures, --root= and --image=\n          options to operate on a directory or disk image, and\n          --install-source= to specify the source for binaries to install,\n          --efi-boot-option-description= to control the name of the boot entry.\n\n        * The sd-boot stub exports a StubFeatures flag, which is used by\n          bootctl to show features supported by the stub that was used to boot.\n\n        * The PE section offsets that are used by tools that assemble unified\n          kernel images have historically been hard-coded. This may lead to\n          overlapping PE sections which may break on boot. The UKI will now try\n          to detect and warn about this.\n\n          Any tools that assemble UKIs must update to calculate these offsets\n          dynamically. Future sd-stub versions may use offsets that will not\n          work with the currently used set of hard-coded offsets!\n\n        * sd-stub now accepts (and passes to the initrd and then to the full\n          OS) new PE sections '.pcrsig' and '.pcrkey' that can be used to embed\n          signatures of expected PCR values, to allow sealing secrets via the\n          TPM2 against pre-calculated PCR measurements.\n\n        Changes in the hardware database:\n\n        * 'systemd-hwdb query' now supports the --root= option.\n\n        Changes in systemctl:\n\n        * systemctl now supports --state= and --type= options for the 'show'\n          and 'status' verbs.\n\n        * systemctl gained a new verb 'list-automounts' to list automount\n          points.\n\n        * systemctl gained support for a new --image= switch to be able to\n          operate on the specified disk image (similar to the existing --root=\n          which operates relative to some directory).\n\n        Changes in systemd-networkd:\n\n        * networkd can set Linux NetLabel labels for integration with the\n          network control in security modules via a new NetLabel= option.\n\n        * The RapidCommit= is (re-)introduced to enable faster configuration\n          via DHCPv6 (RFC 3315).\n\n        * networkd gained a new option TCPCongestionControlAlgorithm= that\n          allows setting a per-route TCP algorithm.\n\n        * networkd gained a new option KeepFileDescriptor= to allow keeping a\n          reference (file descriptor) open on TUN/TAP interfaces, which is\n          useful to avoid link flaps while the underlying service providing the\n          interface is being serviced.\n\n        * RouteTable= now also accepts route table names.\n\n        Changes in systemd-nspawn:\n\n        * The --bind= and --overlay= options now support relative paths.\n\n        * The --bind= option now supports a 'rootidmap' value, which will\n          use id-mapped mounts to map the root user inside the container to the\n          owner of the mounted directory on the host.\n\n        Changes in systemd-resolved:\n\n        * systemd-resolved now persists DNSOverTLS in its state file too. This\n          fixes a problem when used in combination with NetworkManager, which\n          sends the setting only once, causing it to be lost if resolved was\n          restarted at any point.\n\n        * systemd-resolved now exposes a Varlink socket at\n          /run/systemd/resolve/io.systemd.Resolve.Monitor, accessible only for\n          root. Processed DNS requests in a JSON format will be published to\n          any clients connected to this socket.\n\n          resolvectl gained a 'monitor' verb to make use of this.\n\n        * systemd-resolved now treats unsupported DNSSEC algorithms as INSECURE\n          instead of returning SERVFAIL, as per RFC:\n          https://datatracker.ietf.org/doc/html/rfc6840#section-5.2\n\n        * OpenSSL is the default crypto backend for systemd-resolved. (gnutls\n          is still supported.)\n\n        Changes in libsystemd and other libraries:\n\n        * libsystemd now exports sd_bus_error_setfv() (a convenience function\n          for setting bus errors), sd_id128_string_equal (a convenience\n          function for 128-bit ID string comparisons), and\n          sd_bus_message_read_strv_extend() (a function to incrementally read\n          string arrays).\n\n        * libsystemd now exports sd_device_get_child_first()/_next() as a\n          high-level interface for enumerating child devices. It also supports\n          sd_device_new_child() for opening a child device given a device\n          object.\n\n        * libsystemd now exports sd_device_monitor_set()/get_description()\n          which allow setting a custom description that will be used in log\n          messages by sd_device_monitor*.\n\n        * Private shared libraries (libsystemd-shared-nnn.so,\n          libsystemd-core-nnn.so) are now installed into arch-specific\n          directories to allow multi-arch installs.\n\n        * A new sd-gpt.h header is now published, listing GUIDs from the\n          Discoverable Partitions specification. For more details see:\n          https://systemd.io/DISCOVERABLE_PARTITIONS/\n\n        * A new function sd_hwdb_new_from_path() has been added to open a hwdb\n          database given an explicit path to the file.\n\n        * The signal number argument to sd_event_add_signal() now can now be\n          ORed with the SD_EVENT_SIGNAL_PROCMASK flag, causing sigprocmask() to\n          be automatically invoked to block the specified signal. This is\n          useful to simplify invocations as the caller doesn't have to do this\n          manually.\n\n        * A new convenience call sd_event_set_signal_exit() has been added to\n          sd-event to set up signal handling so that the event loop\n          automatically terminates cleanly on SIGTERM/SIGINT.\n\n        Changes in other components:\n\n        * systemd-sysusers, systemd-tmpfiles, and systemd-sysctl configuration\n          can now be provided via the credential mechanism.\n\n        * systemd-analyze gained a new verb 'compare-versions' that implements\n          comparisons for versions strings (similarly to 'rpmdev-vercmp' and\n          'dpkg --compare-versions').\n\n        * 'systemd-analyze dump' is extended to accept glob patterns for unit\n          names to limit the output to matching units.\n\n        * tmpfiles.d/ lines can read file contents to write from a credential.\n          The new modifier char '^' is used to specify that the argument is a\n          credential name. This mechanism is used to automatically populate\n          /etc/motd, /etc/issue, and /etc/hosts from credentials.\n\n        * tmpfiles.d/ may now be configured to avoid changing uid/gid/mode of\n          an inode if the specification is prefixed with ':' and the inode\n          already exists.\n\n        * Default tmpfiles.d/ configuration now carries a line to automatically\n          use an 'ssh.authorized_keys.root' credential if provided to set up\n          the SSH authorized_keys file for the root user.\n\n        * systemd-tmpfiles will now gracefully handle absent source of \"C\" copy\n          lines.\n\n        * tmpfiles.d/ F/w lines now optionally permit encoding of the payload\n          in base64. This is useful to write arbitrary binary data into files.\n\n        * The pkgconfig and rpm macros files now export the directory for user\n          units as 'user_tmpfiles_dir' and '%_user_tmpfilesdir'.\n\n        * Detection of Apple Virtualization and detection of Parallels and\n          KubeVirt virtualization on non-x86 archs have been added.\n\n        * os-release gained a new field SUPPORT_END=YYYY-MM-DD to inform the\n          user when their system will become unsupported.\n\n        * When performing suspend-then-hibernate, the system will estimate the\n          discharge rate and use that to set the delay until hibernation and\n          hibernate immediately instead of suspending when running from a\n          battery and the capacity is below 5%.\n\n        * systemd-sysctl gained a --strict option to fail when a sysctl\n          setting is unknown to the kernel.\n\n        * machinectl supports --force for the 'copy-to' and 'copy-from'\n          verbs.\n\n        * coredumpctl gained the --root and --image options to look for journal\n          files under the specified root directory, image, or block device.\n\n        * 'journalctl -o' and similar commands now implement a new output mode\n          \"short-delta\". It is similar to \"short-monotonic\", but also shows the\n          time delta between subsequent messages.\n\n        * journalctl now respects the --quiet flag when verifying consistency\n          of journal files.\n\n        * Journal log messages gained a new implicit field _RUNTIME_SCOPE= that\n          will indicate whether a message was logged in the 'initrd' phase or\n          in the 'system' phase of the boot process.\n\n        * Journal files gained a new compatibility flag\n          'HEADER_INCOMPATIBLE_COMPACT'. Files with this flag implement changes\n          to the storage format that allow reducing size on disk. As with other\n          compatibility flags, older journalctl versions will not be able to\n          read journal files using this new format. The environment variable\n          'SYSTEMD_JOURNAL_COMPACT=0' can be passed to systemd-journald to\n          disable this functionality. It is enabled by default.\n\n        * systemd-run's --working-directory= switch now works when used in\n          combination with --scope.\n\n        * portablectl gained a --force flag to skip certain sanity checks. This\n          is implemented using new flags accepted by systemd-portabled for the\n          *WithExtensions() D-Bus methods: SD_SYSTEMD_PORTABLE_FORCE_ATTACH\n          flag now means that the attach/detach checks whether the units are\n          already present and running will be skipped. Similarly,\n          SD_SYSTEMD_PORTABLE_FORCE_SYSEXT flag means that the check whether\n          image name matches the name declared inside of the image will be\n          skipped. Callers must be sure to do those checks themselves if\n          appropriate.\n\n        * systemd-portabled will now use the original filename to check\n          extension-release.NAME for correctness, in case it is passed a\n          symlink.\n\n        * systemd-portabled now uses PrivateTmp=yes in the 'trusted' profile\n          too.\n\n        * sysext's extension-release files now support '_any' as a special\n          value for the ID= field, to allow distribution-independent extensions\n          (e.g.: fully statically compiled binaries, scripts). It also gained\n          support for a new ARCHITECTURE= field that may be used to explicitly\n          restrict an image to hosts of a specific architecture.\n\n        * systemd-repart now supports creating squashfs partitions. This\n          requires mksquashfs from squashfs-tools.\n\n        * systemd-repart gained a --split flag to also generate split\n          artifacts, i.e. a separate file for each partition. This is useful in\n          conjunction with systemd-sysupdate or other tools, or to generate\n          split dm-verity artifacts.\n\n        * systemd-repart is now able to generate dm-verity partitions, including\n          signatures.\n\n        * systemd-repart can now set a partition UUID to zero, allowing it to\n          be filled in later, such as when using verity partitions.\n\n        * systemd-repart now supports drop-ins for its configuration files.\n\n        * Package metadata logged by systemd-coredump in the system journal is\n          now more compact.\n\n        * xdg-autostart-service now expands 'tilde' characters in Exec lines.\n\n        * systemd-oomd now automatically links against libatomic, if available.\n\n        * systemd-oomd now sends out a 'Killed' D-Bus signal when a cgroup is\n          killed.\n\n        * scope units now also provide oom-kill status.\n\n        * systemd-pstore will now try to load only the efi_pstore kernel module\n          before running, ensuring that pstore can be used.\n\n        * systemd-logind gained a new StopIdleSessionSec= option to stop an idle\n          session after a preconfigure timeout.\n\n        * systemd-homed will now wait up to 30 seconds for workers to terminate,\n          rather than indefinitely.\n\n        * homectl gained a new '--luks-sector-size=' flag that allows users to\n          select the preferred LUKS sector size. Must be a power of 2 between 512\n          and 4096. systemd-userdbd records gained a corresponding field.\n\n        * systemd-sysusers will now respect the 'SOURCE_DATE_EPOCH' environment\n          variable when generating the 'sp_lstchg' field, to ensure an image\n          build can be reproducible.\n\n        * 'udevadm wait' will now listen to kernel uevents too when called with\n          --initialized=no.\n\n        * When naming network devices udev will now consult the DeviceTree\n          \"alias\" fields for the device.\n\n        * systemd-udev will now create infiniband/by-path and\n          infiniband/by-ibdev links for Infiniband verbs devices.\n\n        * systemd-udev-trigger.service will now also prioritize input devices.\n\n        * ConditionACPower= and systemd-ac-power will now assume the system is\n          running on AC power if no battery can be found.\n\n        * All features and tools using the TPM2 will now communicate with it\n          using a bind key. Beforehand, the tpm2 support used encrypted sessions\n          by creating a primary key that was used to encrypt traffic. This\n          creates a problem as the key created for encrypting the traffic could\n          be faked by an active interposer on the bus. In cases when a pin is\n          used, a bind key will be used. The pin is used as the auth value for\n          the seal key, aka the disk encryption key, and that auth value will be\n          used in the session establishment. An attacker would need the pin\n          value to create the secure session and thus an active interposer\n          without the pin cannot interpose on TPM2 traffic.\n\n        * systemd-growfs no longer requires udev to run.\n\n        * systemd-backlight now will better support systems with multiple\n          graphic cards.\n\n        * systemd-cryptsetup's keyfile-timeout= option now also works when a\n          device is used as a keyfile.\n\n        * systemd-cryptenroll gained a new --unlock-key-file= option to get the\n          unlocking key from a key file (instead of prompting the user). Note\n          that this is the key for unlocking the volume in order to be able to\n          enroll a new key, but it is not the key that is enrolled.\n\n        * systemd-dissect gained a new --umount switch that will safely and\n          synchronously unmount all partitions of an image previously mounted\n          with 'systemd-dissect --mount'.\n\n        * When using gcrypt, all systemd tools and services will now configure\n          it to prefer the OS random number generator if present.\n\n        * All example code shipped with documentation has been relicensed from CC0\n          to MIT-0.\n\n        * Unit tests will no longer fail when running on a system without\n          /etc/machine-id.\n\n        Experimental features:\n\n        * BPF programs can now be compiled with bpf-gcc (requires libbpf >= 1.0\n          and bpftool >= 7.0).\n\n        * sd-boot can automatically enroll SecureBoot keys from files found on\n          the ESP. This enrollment can be either automatic ('force' mode) or\n          controlled by the user ('manual' mode). It is sufficient to place the\n          SecureBoot keys in the right place in the ESP and they will be picked\n          up by sd-boot and shown in the boot menu.\n\n        * The mkosi config in systemd gained support for automatically\n          compiling a kernel with the configuration appropriate for testing\n          systemd. This may be useful when developing or testing systemd in\n          tandem with the kernel.\n\n        Contributions from: ÍπÄÏù∏Ïàò, Adam¬†Williamson, adrian5, Aidan¬†Dang,\n        Akihiko¬†Odaki, Alban¬†Bedel, Albert¬†Mikaelyan, Aleksey¬†Vasenev,\n        Alexander¬†Graf, Alexander¬†Shopov, Alexander¬†Wilson,\n        Alper¬†Nebi¬†Yasak, anarcat, Anders¬†Jonsson, Andre¬†Kalb,\n        Andrew¬†Stone, Andrey¬†Albershteyn, Anita¬†Zhang, Ansgar¬†Burchardt,\n        Antonio¬†Alvarez¬†Feijoo, Arnaud¬†Ferraris, Aryan¬†singh, asavah,\n        Avamander, Avram¬†Lubkin, Bal√°zs¬†Mesk√≥, Bastien¬†Nocera,\n        Benjamin¬†Franzke, BerndAdameit, bin456789, Celeste¬†Liu,\n        Chih-Hsuan¬†Yen, Christian¬†Brauner, Christian¬†G√∂ttsche,\n        Christian¬†Hesse, Clyde¬†Byrd¬†III, codefiles, Colin¬†Walters,\n        Cristian¬†Rodr√≠guez, Daan¬†De¬†Meyer, Daniel¬†Braunwarth,\n        Daniel¬†Rusek, Dan¬†Streetman, Darsey¬†Litzenberger, David¬†Edmundson,\n        David¬†Ja≈°a, David¬†Rheinsberg, David¬†Seifert, David¬†Tardon,\n        dependabot[bot], Devendra¬†Tewari, Dominique¬†Martinet, drosdeck,\n        Edson¬†Juliano¬†Drosdeck, Eduard¬†Tolosa, eggfly, Einsler¬†Lee,\n        Elias¬†Probst, Eli¬†Schwartz, Evgeny¬†Vereshchagin, exploide, Fei¬†Li,\n        Foster¬†Snowhill, Franck¬†Bui, Frank¬†Dana, Frantisek¬†Sumsal,\n        Gerd¬†Hoffmann, Gio, Goffredo¬†Baroncelli, gtwang01,\n        Guillaume¬†W.¬†Bres, H¬†A, Hans¬†de¬†Goede, Heinrich¬†Schuchardt,\n        Hugo¬†Carvalho, i-do-cpp, igo95862, j00512545, Jacek¬†Migacz,\n        Jade¬†Bilkey, James¬†Hilliard, Jan¬†B, Janis¬†Goldschmidt,\n        Jan¬†Janssen, Jan¬†Kuparinen, Jan¬†Luebbe, Jan¬†Macku,\n        Jason¬†A.¬†Donenfeld, Javkhlanbayar¬†Khongorzul, Jeremy¬†Soller,\n        JeroenHD, jiangchuangang, Jo√£o¬†Loureiro,\n        Joaqu√≠n¬†Ignacio¬†Aramend√≠a, Jochen¬†Sprickerhof,\n        Johannes¬†Schauer¬†Marin¬†Rodrigues, Jonas¬†K√ºmmerlin,\n        Jonas¬†Witschel, Jonathan¬†Kang, Jonathan¬†Lebon, Joost¬†Heitbrink,\n        J√∂rg¬†Thalheim, josh-gordon-fb, Joyce, Kai¬†Lueke, lastkrick,\n        Lennart¬†Poettering, Leon¬†M.¬†George, licunlong, Li¬†kunyu,\n        LockBlock-dev, Lo√Øc¬†Collignon, Lubomir¬†Rintel, Luca¬†Boccassi,\n        Luca¬†BRUNO, Ludwig¬†Nussel, ≈Åukasz¬†Stelmach, Maccraft123,\n        Marc¬†Kleine-Budde, Marius¬†Vollmer, Martin¬†Wilck, matoro,\n        Matthias¬†Lisin, Max¬†Gautier, Maxim¬†Mikityanskiy, Michael¬†Biebl,\n        Michal¬†Koutn√Ω, Michal¬†SekletaÃÅr, Michal¬†Stanke, Mike¬†Gilbert,\n        Mitchell¬†Freiderich, msizanoen1, Nick¬†Rosbrook, nl6720, Oƒüuz¬†Ersen,\n        Oleg¬†Solovyov, Olga¬†Smirnova, Pablo¬†Ceballos, Pavel¬†Zhukov,\n        Phaedrus¬†Leeds, Philipp¬†Gortan, Piotr¬†DrƒÖg, Pyfisch,\n        Quentin¬†Deslandes, Rahil¬†Bhimjiani, Rene¬†Hollander, Richard¬†Huang,\n        Richard¬†Phibel, Rudi¬†Heitbaum, Sam¬†James, Sarah¬†Brofeldt,\n        Sean¬†Anderson, Sebastian¬†Scheibner, Shreenidhi¬†Shedi,\n        Sonali¬†Srivastava, Steve¬†Ramage, Suraj¬†Krishnan, Swapnil¬†Devesh,\n        Takashi¬†Sakamoto, Ted¬†X.¬†Toth, Temuri¬†Doghonadze, Thomas¬†Blume,\n        Thomas¬†Haller, Thomas¬†Hebb, Tom√°≈°¬†Hnyk, Tomasz¬†Pawe≈Ç¬†Gajc,\n        Topi¬†Miettinen, Ulrich¬†√ñlmann, undef, Uriel¬†Corfa,\n        Victor¬†Westerhuis, Vincent¬†Dagonneau, Vishal¬†Chillara¬†Srinivas,\n        Vito¬†Caputo, Weblate, Wenchao¬†Hao, William¬†Roberts, williamsumendap,\n        wineway, xiaoyang, Yuri¬†Chornoivan, Yu¬†Watanabe,\n        Zbigniew¬†Jƒôdrzejewski-Szmek, Zhaofeng¬†Li, –Ω–∞–±\n\n        ‚Äì The Great Beyond, 2022-10-31 üëª\n\nCHANGES WITH 251:\n\n        Backwards-incompatible changes:\n\n        * The minimum kernel version required has been bumped from 3.13 to 4.15,\n          and CLOCK_BOOTTIME is now assumed to always exist.\n\n        * C11 with GNU extensions (aka \"gnu11\") is now used to build our\n          components. Public API headers are still restricted to ISO C89.\n\n        * In v250, a systemd-networkd feature that automatically configures\n          routes to addresses specified in AllowedIPs= was added and enabled by\n          default. However, this causes network connectivity issues in many\n          existing setups. Hence, it has been disabled by default since\n          systemd-stable 250.3. The feature can still be used by explicitly\n          configuring RouteTable= setting in .netdev files.\n\n        * Jobs started via StartUnitWithFlags() will no longer return 'skipped'\n          when a Condition*= check does not succeed, restoring the JobRemoved\n          signal to the behaviour it had before v250.\n\n        * The org.freedesktop.portable1 methods GetMetadataWithExtensions() and\n          GetImageMetadataWithExtensions() have been fixed to provide an extra\n          return parameter, containing the actual extension release metadata.\n          The current implementation was judged to be broken and unusable, and\n          thus the usual procedure of adding a new set of methods was skipped,\n          and backward compatibility broken instead on the assumption that\n          nobody can be affected given the current state of this interface.\n\n        * All kernels supported by systemd mix bytes returned by RDRAND (or\n          similar) into the entropy pool at early boot. This means that on\n          those systems, even if /dev/urandom is not yet initialized, it still\n          returns bytes that are of at least RDRAND quality. For that reason,\n          we no longer have reason to invoke RDRAND from systemd itself, which\n          has historically been a source of bugs. Furthermore, kernels ‚â•5.6\n          provide the getrandom(GRND_INSECURE) interface for returning random\n          bytes before the entropy pool is initialized without warning into\n          kmsg, which is what we attempt to use if available. systemd's direct\n          usage of RDRAND has been removed. x86 systems ‚â•Broadwell that are\n          running an older kernel may experience kmsg warnings that were not\n          seen with 250. For newer kernels, non-x86 systems, or older x86\n          systems, there should be no visible changes.\n\n        * sd-boot will now measure the kernel command line into TPM PCR¬†12\n          rather than PCR¬†8. This improves usefulness of the measurements on\n          systems where sd-boot is chainloaded from Grub. Grub measures all\n          commands its executes into PCR¬†8, which makes it very hard to use\n          reasonably, hence separate ourselves from that and use PCR¬†12\n          instead, which is what certain Ubuntu editions already do. To retain\n          compatibility with systems running older systemd systems a new meson\n          option 'efi-tpm-pcr-compat' has been added (which defaults to false).\n          If enabled, the measurement is done twice: into the new-style PCR¬†12\n          *and* the old-style PCR¬†8. It's strongly advised to migrate all users\n          to PCR¬†12 for this purpose in the long run, as we intend to remove\n          this compatibility feature in two years' time.\n\n        * busctl capture now writes output in the newer pcapng format instead\n          of pcap.\n\n        * A udev rule that imported hwdb matches for USB devices with lowercase\n          hexadecimal vendor/product ID digits was added in systemd 250. This\n          has been reverted, since uppercase hexadecimal digits are supposed to\n          be used, and we already had a rule with the appropriate match.\n\n          Users might need to adjust their local hwdb entries.\n\n        * arch_prctl(2) has been moved to the @default set in the syscall filters\n          (as exposed via the SystemCallFilter= setting in service unit files).\n          It is apparently used by the linker now.\n\n        * The tmpfiles entries that create the /run/systemd/netif directory and\n          its subdirectories were moved from tmpfiles.d/systemd.conf to\n          tmpfiles.d/systemd-network.conf.\n\n          Users might need to adjust their files that override tmpfiles.d/systemd.conf\n          to account for this change.\n\n        * The requirement for Portable Services images to contain a well-formed\n          os-release file (i.e.: contain at least an ID field) is now enforced.\n          This applies to base images and extensions, and also to systemd-sysext.\n\n        Changes in the Boot Loader Specification, kernel-install and sd-boot:\n\n        * kernel-install's and bootctl's Boot Loader Specification Type #1\n          entry generation logic has been reworked. The user may now pick\n          explicitly by which \"token\" string to name the installation's boot\n          entries, via the new /etc/kernel/entry-token file or the new\n          --entry-token= switch to bootctl. By default ‚Äî as before ‚Äî the\n          entries are named after the local machine ID. However, in \"golden\n          image\" environments, where the machine ID shall be initialized on\n          first boot (as opposed to at installation time before first boot) the\n          machine ID will not be available at build time. In this case the\n          --entry-token= switch to bootctl (or the /etc/kernel/entry-token\n          file) may be used to override the \"token\" for the entries, for\n          example the IMAGE_ID= or ID= fields from /etc/os-release. This will\n          make the OS images independent of any machine ID, and ensure that the\n          images will not carry any identifiable information before first boot,\n          but on the other hand means that multiple parallel installations of\n          the very same image on the same disk cannot be supported.\n\n          Summary: if you are building golden images that shall acquire\n          identity information exclusively on first boot, make sure to both\n          remove /etc/machine-id *and* to write /etc/kernel/entry-token to the\n          value of the IMAGE_ID= or ID= field of /etc/os-release or another\n          suitable identifier before deploying the image.\n\n        * The Boot Loader Specification has been extended with\n          /loader/entries.srel file located in the EFI System Partition (ESP)\n          that disambiguates the format of the entries in the /loader/entries/\n          directory (in order to discern them from incompatible uses of this\n          directory by other projects). For entries that follow the\n          Specification, the string \"type1\" is stored in this file.\n\n          bootctl will now write this file automatically when installing the\n          systemd-boot boot loader.\n\n        * kernel-install supports a new initrd_generator= setting in\n          /etc/kernel/install.conf, that is exported as\n          $KERNEL_INSTALL_INITRD_GENERATOR to kernel-install plugins. This\n          allows choosing different initrd generators.\n\n        * kernel-install will now create a \"staging area\" (an initially-empty\n          directory to gather files for a Boot Loader Specification Type #1\n          entry). The path to this directory is exported as\n          $KERNEL_INSTALL_STAGING_AREA to kernel-install plugins, which should\n          drop files there instead of writing them directly to the final\n          location. kernel-install will move them when all files have been\n          prepared successfully.\n\n        * New option sort-key= has been added to the Boot Loader Specification\n          to override the sorting order of the entries in the boot menu. It is\n          read by sd-boot and bootctl, and will be written by kernel-install,\n          with the default value of IMAGE_ID= or ID= fields from\n          os-release. Together, this means that on multiboot installations,\n          entries should be grouped and sorted in a predictable way.\n\n        * The sort order of boot entries has been updated: entries which have\n          the new field sort-key= are sorted by it first, and all entries\n          without it are ordered later. After that, entries are sorted by\n          version so that newest entries are towards the beginning of the list.\n\n        * The kernel-install tool gained a new 'inspect' verb which shows the\n          paths and other settings used.\n\n        * sd-boot can now optionally beep when the menu is shown and menu\n          entries are selected, which can be useful on machines without a\n          working display. (Controllable via a loader.conf setting.)\n\n        * The --make-machine-id-directory= switch to bootctl has been replaced\n          by --make-entry-directory=, given that the entry directory is not\n          necessarily named after the machine ID, but after some other suitable\n          ID as selected via --entry-token= described above. The old name of\n          the option is still understood to maximize compatibility.\n\n        * 'bootctl list' gained support for a new --json= switch to output boot\n          menu entries in JSON format.\n\n        * 'bootctl is-installed' now supports the --graceful, and various verbs\n          omit output with the new option --quiet.\n\n        Changes in systemd-homed:\n\n        * Starting with v250 systemd-homed uses UID/GID mapping on the mounts\n          of activated home directories it manages (if the kernel and selected\n          file systems support it). So far it mapped three UID ranges: the\n          range from 0‚Ä¶60000, the user's own UID, and the range 60514‚Ä¶65534,\n          leaving everything else unmapped (in other words, the 16-bit UID range\n          is mapped almost fully, with the exception of the UID subrange used\n          for systemd-homed users, with one exception: the user's own UID).\n          Unmapped UIDs may not be used for file ownership in the home\n          directory ‚Äî any chown() attempts with them will fail. With this\n          release a fourth range is added to these mappings:\n          524288‚Ä¶1879048191. This range is the UID range intended for container\n          uses, see:\n\n                  https://systemd.io/UIDS-GIDS\n\n          This range may be used for container managers that place container OS\n          trees in the home directory (which is a questionable approach, for\n          quota, permission, SUID handling and network file system\n          compatibility reasons, but nonetheless apparently commonplace). Note\n          that this mapping is mapped 1:1 in a pass-through fashion, i.e. the\n          UID assignments from the range are not managed or mapped by\n          `systemd-homed`, and must be managed with other mechanisms, in the\n          context of the local system.\n\n          Typically, a better approach to user namespacing in relevant\n          container managers would be to leave container OS trees on disk at\n          UID offset 0, but then map them to a dynamically allocated runtime\n          UID range via another UID mount map at container invocation\n          time. That way user namespace UID ranges become strictly a runtime\n          concept, and do not leak into persistent file systems, persistent\n          user databases or persistent configuration, thus greatly simplifying\n          handling, and improving compatibility with home directories intended\n          to be portable like the ones managed by systemd-homed.\n\n        Changes in shared libraries:\n\n        * A new libsystemd-core-<version>.so private shared library is\n          installed under /usr/lib/systemd/system, mirroring the existing\n          libsystemd-shared-<version>.so library. This allows the total\n          installation size to be reduced by binary code reuse.\n\n        * The <version> tag used in the name of libsystemd-shared.so and\n          libsystemd-core.so can be configured via the meson option\n          'shared-lib-tag'. Distributions may build subsequent versions of the\n          systemd package with unique tags (e.g. the full package version),\n          thus allowing multiple installations of those shared libraries to be\n          available at the same time. This is intended to fix an issue where\n          programs that link to those libraries would fail to execute because\n          they were installed earlier or later than the appropriate version of\n          the library.\n\n        * The sd-id128 API gained a new call sd_id128_to_uuid_string() that is\n          similar to sd_id128_to_string() but formats the ID in RFC 4122 UUID\n          format instead of as a simple series of hex characters.\n\n        * The sd-device API gained two new calls sd_device_new_from_devname()\n          and sd_device_new_from_path() which permit allocating an sd_device\n          object from a device node name or file system path.\n\n        * sd-device also gained a new call sd_device_open() which will open the\n          device node associated with a device for which an sd_device object\n          has been allocated. The call is supposed to address races around\n          device nodes being removed/recycled due to hotplug events, or media\n          change events: the call checks internally whether the major/minor of\n          the device node and the \"diskseq\" (in case of block devices) match\n          with the metadata loaded in the sd_device object, thus ensuring that\n          the device once opened really matches the provided sd_device object.\n\n        Changes in PID1, systemctl, and systemd-oomd:\n\n        * A new set of service monitor environment variables will be passed to\n          OnFailure=/OnSuccess= handlers, but only if exactly one unit lists the\n          handler unit as OnFailure=/OnSuccess=. The variables are:\n          $MONITOR_SERVICE_RESULT, $MONITOR_EXIT_CODE, $MONITOR_EXIT_STATUS,\n          $MONITOR_INVOCATION_ID and $MONITOR_UNIT. For cases when a single\n          handler needs to watch multiple units, use a templated handler.\n\n        * A new ExtensionDirectories= setting in service unit files allows\n          system extensions to be loaded from a directory. (It is similar to\n          ExtensionImages=, but takes paths to directories, instead of\n          disk image files.)\n\n          'portablectl attach --extension=' now also accepts directory paths.\n\n        * The user.delegate and user.invocation_id extended attributes on\n          cgroups are used in addition to trusted.delegate and\n          trusted.invocation_id. The latter pair requires privileges to set,\n          but the former doesn't and can be also set by the unprivileged user\n          manager.\n\n          (Only supported on kernels ‚â•5.6.)\n\n        * Units that were killed by systemd-oomd will now have a service result\n          of 'oom-kill'. The number of times a service was killed is tallied\n          in the 'user.oomd_ooms' extended attribute.\n\n          The OOMPolicy= unit file setting is now also honoured by\n          systemd-oomd.\n\n        * In unit files the new %y/%Y specifiers can be used to refer to\n          normalized unit file path, which is particularly useful for symlinked\n          unit files.\n\n          The new %q specifier resolves to the pretty hostname\n          (i.e. PRETTY_HOSTNAME= from /etc/machine-info).\n\n          The new %d specifier resolves to the credentials directory of a\n          service (same as $CREDENTIALS_DIRECTORY).\n\n        * The RootDirectory=, MountAPIVFS=, ExtensionDirectories=,\n          *Capabilities*=, ProtectHome=, *Directory=, TemporaryFileSystem=,\n          PrivateTmp=, PrivateDevices=, PrivateNetwork=, NetworkNamespacePath=,\n          PrivateIPC=, IPCNamespacePath=, PrivateUsers=, ProtectClock=,\n          ProtectKernelTunables=, ProtectKernelModules=, ProtectKernelLogs=,\n          MountFlags= service settings now also work in unprivileged user\n          services, i.e. those run by the user's --user service manager, as long\n          as user namespaces are enabled on the system.\n\n        * Services with Restart=always and a failing ExecCondition= will no\n          longer be restarted, to bring ExecCondition= behaviour in line with\n          Condition*= settings.\n\n        * LoadCredential= now accepts a directory as the argument; all files\n          from the directory will be loaded as credentials.\n\n        * A new D-Bus property ControlGroupId is now exposed on service units,\n          that encapsulates the service's numeric cgroup ID that newer kernels\n          assign to each cgroup.\n\n        * PID 1 gained support for configuring the \"pre-timeout\" of watchdog\n          devices and the associated governor, via the new\n          RuntimeWatchdogPreSec= and RuntimeWatchdogPreGovernor= configuration\n          options in /etc/systemd/system.conf.\n\n        * systemctl's --timestamp= option gained a new choice \"unix\", to show\n          timestamp as unix times, i.e. seconds since 1970, Jan 1st.\n\n        * A new \"taint\" flag named \"old-kernel\" is introduced which is set when\n          the kernel systemd runs on is older then the current baseline version\n          (see above). The flag is shown in \"systemctl status\" output.\n\n        * Two additional taint flags \"short-uid-range\" and \"short-gid-range\"\n          have been added as well, which are set when systemd notices it is run\n          within a userns namespace that does not define the full 0‚Ä¶65535 UID\n          range\n\n        * A new \"unmerged-usr\" taint flag has been added that is set whenever\n          running on systems where /bin/ + /sbin/ are *not* symlinks to their\n          counterparts in /usr/, i.e. on systems where the /usr/-merge has not\n          been completed.\n\n        * Generators invoked by PID 1 will now have a couple of useful\n          environment variables set describing the execution context a\n          bit. $SYSTEMD_SCOPE encodes whether the generator is called from the\n          system service manager, or from the per-user service\n          manager. $SYSTEMD_IN_INITRD encodes whether the generator is invoked\n          in initrd context or on the host. $SYSTEMD_FIRST_BOOT encodes whether\n          systemd considers the current boot to be a \"first\"\n          boot. $SYSTEMD_VIRTUALIZATION encode whether virtualization is\n          detected and which type of hypervisor/container\n          manager. $SYSTEMD_ARCHITECTURE indicates which architecture the\n          kernel is built for.\n\n        * PID 1 will now automatically pick up system credentials from qemu's\n          fw_cfg interface, thus allowing passing arbitrary data into VM\n          systems similar to how this is already supported for passing them\n          into `systemd-nspawn` containers. Credentials may now also be passed\n          in via the new kernel command line option `systemd.set_credential=`\n          (note that kernel command line options are world-readable during\n          runtime, and only useful for credentials that require no\n          confidentiality). The credentials that can be passed to unified\n          kernels that use the `systemd-stub` UEFI stub are now similarly\n          picked up automatically. Automatic importing of system credentials\n          this way can be turned off via the new\n          `systemd.import_credentials=no` kernel command line option.\n\n        * LoadCredential= will now automatically look for credentials in the\n          /etc/credstore/, /run/credstore/, /usr/lib/credstore/ directories if\n          the argument is not an absolute path. Similarly,\n          LoadCredentialEncrypted= will check the same directories plus\n          /etc/credstore.encrypted/, /run/credstore.encrypted/ and\n          /usr/lib/credstore.encrypted/. The idea is to use those directories\n          as the system-wide location for credentials that services should pick\n          up automatically.\n\n        * System and service credentials are described in great detail in a new\n          document:\n\n          https://systemd.io/CREDENTIALS\n\n        Changes in systemd-journald:\n\n        * The journal JSON export format has been added to listed of stable\n          interfaces (https://systemd.io/PORTABILITY_AND_STABILITY/).\n\n        * journalctl --list-boots now supports JSON output and the --reverse option.\n\n        * Under docs/: JOURNAL_EXPORT_FORMATS was imported from the wiki and\n          updated, BUILDING_IMAGES is new:\n\n          https://systemd.io/JOURNAL_EXPORT_FORMATS\n          https://systemd.io/BUILDING_IMAGES\n\n        Changes in udev:\n\n        * Two new hwdb files have been added. One lists \"handhelds\" (PDAs,\n          calculators, etc.), the other AV production devices (DJ tables,\n          keypads, etc.) that should accessible to the seat owner user by\n          default.\n\n        * udevadm trigger gained a new --prioritized-subsystem= option to\n          process certain subsystems (and all their parent devices) earlier.\n\n          systemd-udev-trigger.service now uses this new option to trigger\n          block and TPM devices first, hopefully making the boot a bit faster.\n\n        * udevadm trigger now implements --type=all, --initialized-match,\n          --initialized-nomatch to trigger both subsystems and devices, only\n          already-initialized devices, and only devices which haven't been\n          initialized yet, respectively.\n\n        * udevadm gained a new \"wait\" command for safely waiting for a specific\n          device to show up in the udev device database. This is useful in\n          scripts that asynchronously allocate a block device (e.g. through\n          repartitioning, or allocating a loopback device or similar) and need\n          to synchronize on the creation to complete.\n\n        * udevadm gained a new \"lock\" command for locking one or more block\n          devices while formatting it or writing a partition table to it. It is\n          an implementation of https://systemd.io/BLOCK_DEVICE_LOCKING and\n          usable in scripts dealing with block devices.\n\n        * udevadm info will show a couple of additional device fields in its\n          output, and will not apply a limited set of coloring to line types.\n\n        * udevadm info --tree will now show a tree of objects (i.e. devices and\n          suchlike) in the /sys/ hierarchy.\n\n        * Block devices will now get a new set of device symlinks in\n          /dev/disk/by-diskseq/<nr>, which may be used to reference block\n          device nodes via the kernel's \"diskseq\" value. Note that this does\n          not guarantee that opening a device by a symlink like this will\n          guarantee that the opened device actually matches the specified\n          diskseq value. To be safe against races, the actual diskseq value of\n          the opened device (BLKGETDISKSEQ ioctl()) must still be compred with\n          the one in the symlink path.\n\n        * .link files gained support for setting MDI/MID-X on a link.\n\n        * .link files gained support for [Match] Firmware= setting to match on\n          the device firmware description string. By mistake, it was previously\n          only supported in .network files.\n\n        * .link files gained support for [Link] SR-IOVVirtualFunctions= setting\n          and [SR-IOV] section to configure SR-IOV virtual functions.\n\n        Changes in systemd-networkd:\n\n        * The default scope for unicast routes configured through [Route]\n          section is changed to \"link\", to make the behavior consistent with\n          \"ip route\" command. The manual configuration of [Route] Scope= is\n          still honored.\n\n        * A new unit systemd-networkd-wait-online@<interface>.service has been\n          added that can be used to wait for a specific network interface to be\n          up.\n\n        * systemd-networkd gained a new [Bridge] Isolated=true|false setting\n          that configures the eponymous kernel attribute on the bridge.\n\n        * .netdev files now can be used to create virtual WLAN devices, and\n          configure various settings on them, via the [WLAN] section.\n\n        * .link/.network files gained support for [Match] Kind= setting to match\n          on device kind (\"bond\", \"bridge\", \"gre\", \"tun\", \"veth\", etc.)\n\n          This value is also shown by 'networkctl status'.\n\n        * The Local= setting in .netdev files for various virtual network\n          devices gained support for specifying, in addition to the network\n          address, the name of a local interface which must have the specified\n          address.\n\n        * systemd-networkd gained a new [Tunnel] External= setting in .netdev\n          files, to configure tunnels in external mode (a.k.a. collect metadata\n          mode).\n\n        * [Network] L2TP= setting was removed. Please use interface specifier in\n          Local= setting in .netdev files of corresponding L2TP interface.\n\n        * New [DHCPServer] BootServerName=, BootServerAddress=, and\n          BootFilename= settings can be used to configure the server address,\n          server name, and file name sent in the DHCP packet (e.g. to configure\n          PXE boot).\n\n        Changes in systemd-resolved:\n\n        * systemd-resolved is started earlier (in sysinit.target), so it\n          available earlier and will also be started in the initrd if installed\n          there.\n\n        Changes in disk encryption:\n\n        * systemd-cryptenroll can now control whether to require the user to\n          enter a PIN when using TPM-based unlocking of a volume via the new\n          --tpm2-with-pin= option.\n\n          Option tpm2-pin= can be used in /etc/crypttab.\n\n        * When unlocking devices via TPM, TPM2 parameter encryption is now\n          used, to ensure that communication between CPU and discrete TPM chips\n          cannot be eavesdropped to acquire disk encryption keys.\n\n        * A new switch --fido2-credential-algorithm= has been added to\n          systemd-cryptenroll allowing selection of the credential algorithm to\n          use when binding encryption to FIDO2 tokens.\n\n        Changes in systemd-hostnamed:\n\n        * HARDWARE_VENDOR= and HARDWARE_MODEL= can be set in /etc/machine-info\n          to override the values gleaned from the hwdb.\n\n        * A ID_CHASSIS property can be set in the hwdb (for the DMI device\n          /sys/class/dmi/id) to override the chassis that is reported by\n          hostnamed.\n\n        * hostnamed's D-Bus interface gained a new method GetHardwareSerial()\n          for reading the hardware serial number, as reportd by DMI. It also\n          exposes a new method D-Bus property FirmwareVersion that encode the\n          firmware version of the system.\n\n        Changes in other components:\n\n        * /etc/locale.conf is now populated through tmpfiles.d factory /etc/\n          handling with the values that were configured during systemd build\n          (if /etc/locale.conf has not been created through some other\n          mechanism). This means that /etc/locale.conf should always have\n          reasonable contents and we avoid a potential mismatch in defaults.\n\n        * The userdbctl tool will now show UID range information as part of the\n          list of known users.\n\n        * A new build-time configuration setting default-user-shell= can be\n          used to set the default shell for user records and nspawn shell\n          invocations (instead of the default /bin/bash).\n\n        * systemd-timesyncd now provides a D-Bus API for receiving NTP server\n          information dynamically at runtime via IPC.\n\n        * The systemd-creds tool gained a new \"has-tpm2\" verb, which reports\n          whether a functioning TPM2 infrastructure is available, i.e. if\n          firmware, kernel driver and systemd all have TPM2 support enabled and\n          a device found.\n\n        * The systemd-creds tool gained support for generating encrypted\n          credentials that are using an empty encryption key. While this\n          provides no integrity nor confidentiality it's useful to implement\n          codeflows that work the same on TPM-ful and TPM2-less systems. The\n          service manager will only accept credentials \"encrypted\" that way if\n          a TPM2 device cannot be detected, to ensure that credentials\n          \"encrypted\" like that cannot be used to trick TPM2 systems.\n\n        * When deciding whether to colorize output, all systemd programs now\n          also check $COLORTERM (in addition to $NO_COLOR, $SYSTEMD_COLORS, and\n          $TERM).\n\n        * Meson's new install_tag feature is now in use for several components,\n          allowing to build and install select binaries only: pam, nss, devel\n          (pkg-config files), systemd-boot, libsystemd, libudev. Example:\n           $ meson build systemd-boot\n           $ meson install --tags systemd-boot --no-rebuild\n          https://mesonbuild.com/Installing.html#installation-tags\n\n        * A new build configuration option has been added, to allow selecting the\n          default compression algorithm used by systemd-journald and systemd-coredump.\n          This allows to build-in support for decompressing all supported formats,\n          but choose a specific one for compression. E.g.:\n           $ meson -Ddefault-compression=xz\n\n        Experimental features:\n\n        * sd-boot gained a new *experimental* setting \"reboot-for-bitlocker\" in\n          loader.conf that implements booting Microsoft Windows from the\n          sd-boot in a way that first reboots the system, to reset the TPM\n          PCRs. This improves compatibility with BitLocker's TPM use, as the\n          PCRs will only record the Windows boot process, and not sd-boot\n          itself, thus retaining the PCR measurements not involving sd-boot.\n          Note that this feature is experimental for now, and is likely going\n          to be generalized and renamed in a future release, without retaining\n          compatibility with the current implementation.\n\n        * A new systemd-sysupdate component has been added that automatically\n          discovers, downloads, and installs A/B-style updates for the host\n          installation itself, or container images, portable service images,\n          and other assets. See the new systemd-sysupdate man page for updates.\n\n        Contributions from: 4piu, Adam¬†Williamson, adrian5, Albert¬†Brox,\n        AlexCatze, Alex¬†Henrie, Alfonso¬†S√°nchez-Beato, Alice¬†S,\n        Alvin¬†≈†ipraga, amarjargal, Amarjargal, Andrea¬†Pappacoda,\n        Andreas¬†Rammhold, Andy¬†Chi, Anita¬†Zhang, Antonio¬†Alvarez¬†Feijoo,\n        Arfrever¬†Frehtes¬†Taifersar¬†Arahesis, ash, Bastien¬†Nocera, Be,\n        bearhoney, Ben¬†Efros, Benjamin¬†Berg, Benjamin¬†Franzke,\n        Brett¬†Holman, Christian¬†Brauner, Clyde¬†Byrd¬†III, Curtis¬†Klein,\n        Daan¬†De¬†Meyer, Daniele¬†Medri, Daniel¬†Mack, Danilo¬†Krummrich,\n        David, David¬†Bond, Davide¬†Cavalca, David¬†Tardon, davijosw,\n        dependabot[bot], Donald¬†Chan, Dorian¬†Clay, Eduard¬†Tolosa,\n        Elias¬†Probst, Eli¬†Schwartz, Erik¬†Sj√∂lund, Evgeny¬†Vereshchagin,\n        Federico¬†Ceratto, Franck¬†Bui, Frantisek¬†Sumsal, Ga√´l¬†PORTAY,\n        Georges¬†Basile¬†Stavracas¬†Neto, Gibeom¬†Gwon, Goffredo¬†Baroncelli,\n        Grigori¬†Goronzy, Hans¬†de¬†Goede, Heiko¬†Becker, Hugo¬†Carvalho,\n        Jakob¬†Lell, James¬†Hilliard, Jan¬†Janssen, Jason¬†A.¬†Donenfeld,\n        Joan¬†Bruguera, Joerie¬†de¬†Gram, Josh¬†Triplett, Julia¬†Kartseva,\n        Kazuo¬†Moriwaka, Khem¬†Raj, ksa678491784, Lance, Lan¬†Tian,\n        Laura¬†Barcziova, Lennart¬†Poettering, Leviticoh, licunlong,\n        Lidong¬†Zhong, lincoln¬†auster, Lubomir¬†Rintel, Luca¬†Boccassi,\n        Luca¬†BRUNO, lucagoc, Ludwig¬†Nussel, Marcel¬†Hellwig, march1993,\n        Marco¬†Scardovi, Mario¬†Limonciello, Mariusz¬†Tkaczyk,\n        Markus¬†Weippert, Martin, Martin¬†Liska, Martin¬†Wilck, Matija¬†Skala,\n        Matthew¬†Blythe, Matthias¬†Lisin, Matthijs¬†van¬†Duin, Matt¬†Walton,\n        Max¬†Gautier, Michael¬†Biebl, Michael¬†Olbrich, Michal¬†Koutn√Ω,\n        Michal¬†SekletaÃÅr, Mike¬†Gilbert, MkfsSion, Morten¬†Linderud,\n        Nick¬†Rosbrook, Nikolai¬†Grigoriev, Nikolai¬†Kostrigin,\n        Nishal¬†Kulkarni, Noel¬†Kuntze, Pablo¬†Ceballos, Peter¬†Hutterer,\n        Peter¬†Morrow, Pigmy-penguin, Piotr¬†DrƒÖg, prumian, Richard¬†Neill,\n        Rike-Benjamin¬†Schuppner, rodin-ia, Romain¬†Naour, Ruben¬†Kerkhof,\n        Ryan¬†Hendrickson, Santa¬†Wiryaman, Sebastian¬†Pucilowski, Seth¬†Falco,\n        Simon¬†Ellmann, Sonali¬†Srivastava, Stefan¬†Seering,\n        Stephen¬†Hemminger, tawefogo, techtino, Temuri¬†Doghonadze,\n        Thomas¬†Batten, Thomas¬†Haller, Thomas¬†Wei√üschuh, Tobias¬†Stoeckmann,\n        Tomasz¬†Pala, Tyson¬†Whitehead, Vishal¬†Chillara¬†Srinivas,\n        Vivien¬†Didelot, w30023233, wangyuhang, Weblate, Xiaotian¬†Wu,\n        yangmingtai, YmrDtnJu, Yonathan¬†Randolph, Yutsuten, Yu¬†Watanabe,\n        Zbigniew¬†Jƒôdrzejewski-Szmek, –Ω–∞–±\n\n        ‚Äî Edinburgh, 2022-05-21\n\nCHANGES WITH 250:\n\n        * Support for encrypted and authenticated credentials has been added.\n          This extends the credential logic introduced with v247 to support\n          non-interactive symmetric encryption and authentication, based on a\n          key that is stored on the /var/ file system or in the TPM2 chip (if\n          available), or the combination of both (by default if a TPM2 chip\n          exists the combination is used, otherwise the /var/ key only). The\n          credentials are automatically decrypted at the moment a service is\n          started, and are made accessible to the service itself in unencrypted\n          form. A new tool 'systemd-creds' encrypts credentials for this\n          purpose, and two new service file settings LoadCredentialEncrypted=\n          and SetCredentialEncrypted= configure such credentials.\n\n          This feature is useful to store sensitive material such as SSL\n          certificates, passwords and similar securely at rest and only decrypt\n          them when needed, and in a way that is tied to the local OS\n          installation or hardware.\n\n        * systemd-gpt-auto-generator can now automatically set up discoverable\n          LUKS2 encrypted swap partitions.\n\n        * The GPT Discoverable Partitions Specification has been substantially\n          extended with support for root and /usr/ partitions for the majority\n          of architectures systemd supports. This includes platforms that do\n          not natively support UEFI, because even though GPT is specified under\n          UEFI umbrella, it is useful on other systems too. Specifically,\n          systemd-nspawn, systemd-sysext, systemd-gpt-auto-generator and\n          Portable Services use the concept without requiring UEFI.\n\n        * The GPT Discoverable Partitions Specifications has been extended with\n          a new set of partitions that may carry PKCS#7 signatures for Verity\n          partitions, encoded in a simple JSON format. This implements a simple\n          mechanism for building disk images that are fully authenticated and\n          can be tested against a set of cryptographic certificates. This is\n          now implemented for the various systemd tools that can operate with\n          disk images, such as systemd-nspawn, systemd-sysext, systemd-dissect,\n          Portable services/RootImage=, systemd-tmpfiles, and systemd-sysusers.\n          The PKCS#7 signatures are passed to the kernel (where they are\n          checked against certificates from the kernel keyring), or can be\n          verified against certificates provided in userspace (via a simple\n          drop-in file mechanism).\n\n        * systemd-dissect's inspection logic will now report for which uses a\n          disk image is intended. Specifically, it will display whether an\n          image is suitable for booting on UEFI or in a container (using\n          systemd-nspawn's --image= switch), whether it can be used as portable\n          service, or attached as system extension.\n\n        * The system-extension.d/ drop-in files now support a new field\n          SYSEXT_SCOPE= that may encode which purpose a system extension image\n          is for: one of \"initrd\", \"system\" or \"portable\". This is useful to\n          make images more self-descriptive, and to ensure system extensions\n          cannot be attached in the wrong contexts.\n\n        * The os-release file learnt a new PORTABLE_PREFIXES= field which may\n          be used in portable service images to indicate which unit prefixes\n          are supported.\n\n        * The GPT image dissection logic in systemd-nspawn/systemd-dissect/‚Ä¶\n          now is able to decode images for non-native architectures as well.\n          This allows systemd-nspawn to boot images of non-native architectures\n          if the corresponding user mode emulator is installed and\n          systemd-binfmtd is running.\n\n        * systemd-logind gained new settings HandlePowerKeyLongPress=,\n          HandleRebootKeyLongPress=, HandleSuspendKeyLongPress= and\n          HandleHibernateKeyLongPress= which may be used to configure actions\n          when the relevant keys are pressed for more than 5s. This is useful\n          on devices that only have hardware for a subset of these keys. By\n          default, if the reboot key is pressed long the poweroff operation is\n          now triggered, and when the suspend key is pressed long the hibernate\n          operation is triggered. Long pressing the other two keys currently\n          does not trigger any operation by default.\n\n        * When showing unit status updates on the console during boot and\n          shutdown, and a service is slow to start so that the cylon animation\n          is shown, the most recent sd_notify() STATUS= text is now shown as\n          well. Services may use this to make the boot/shutdown output easier\n          to understand, and to indicate what precisely a service that is slow\n          to start or stop is waiting for. In particular, the per-user service\n          manager instance now reports what it is doing and which service it is\n          waiting for this way to the system service manager.\n\n        * The service manager will now re-execute on reception of the\n          SIGRTMIN+25 signal. It previously already did that on SIGTERM ‚Äî but\n          only when running as PID 1. There was no signal to request this when\n          running as per-user service manager, i.e. as any other PID than 1.\n          SIGRTMIN+25 works for both system and user managers.\n\n        * The hardware watchdog logic in PID 1 gained support for operating\n          with the default timeout configured in the hardware, instead of\n          insisting on re-configuring it. Set RuntimeWatchdogSec=default to\n          request this behavior.\n\n        * A new kernel command line option systemd.watchdog_sec= is now\n          understood which may be used to override the hardware watchdog\n          timeout for the boot.\n\n        * A new setting DefaultOOMScoreAdjust= is now supported in\n          /etc/systemd/system.conf and /etc/systemd/user.conf. It may be used\n          to set the default process OOM score adjustment value for processes\n          started by the service manager. For per-user service managers this\n          now defaults to 100, but for per-system service managers is left as\n          is. This means that by default now services forked off the user\n          service manager are more likely to be killed by the OOM killer than\n          system services or the managers themselves.\n\n        * A new per-service setting RestrictFileSystems= as been added that\n          restricts the file systems a service has access to by their type.\n          This is based on the new BPF LSM of the Linux kernel. It provides an\n          effective way to make certain API file systems unavailable to\n          services (and thus minimizing attack surface). A new command\n          \"systemd-analyze filesystems\" has been added that lists all known\n          file system types (and how they are grouped together under useful\n          group handles).\n\n        * Services now support a new setting RestrictNetworkInterfaces= for\n          restricting access to specific network interfaces.\n\n        * Service unit files gained new settings StartupAllowedCPUs= and\n          StartupAllowedMemoryNodes=. These are similar to their counterparts\n          without the \"Startup\" prefix and apply during the boot process\n          only. This is useful to improve boot-time behavior of the system and\n          assign resources differently during boot than during regular\n          runtime. This is similar to the preexisting StartupCPUWeight=\n          vs. CPUWeight.\n\n        * Related to this: the various StartupXYZ= settings\n          (i.e. StartupCPUWeight=, StartupAllowedCPUs=, ‚Ä¶) are now also applied\n          during shutdown. The settings not prefixed with \"Startup\" hence apply\n          during regular runtime, and those that are prefixed like that apply\n          during boot and shutdown.\n\n        * A new per-unit set of conditions/asserts\n          [Condition|Assert][Memory|CPU|IO]Pressure= have been added to make a\n          unit skip/fail activation if the system's (or a slice's) memory/cpu/io\n          pressure is above the configured threshold, using the kernel PSI\n          feature. For more details see systemd.unit(5) and\n          https://docs.kernel.org/accounting/psi.html\n\n        * The combination of ProcSubset=pid and ProtectKernelTunables=yes and/or\n          ProtectKernelLogs=yes can now be used.\n\n        * The default maximum numbers of inodes have been raised from 64k to 1M\n          for /dev/, and from 400k to 1M for /tmp/.\n\n        * The per-user service manager learnt support for communicating with\n          systemd-oomd to acquire OOM kill information.\n\n        * A new service setting ExecSearchPath= has been added that allows\n          changing the search path for executables for services. It affects\n          where we look for the binaries specified in ExecStart= and similar,\n          and the specified directories are also added the $PATH environment\n          variable passed to invoked processes.\n\n        * A new setting RuntimeRandomizedExtraSec= has been added for service\n          and scope units that allows extending the runtime timeout as\n          configured by RuntimeMaxSec= with a randomized amount.\n\n        * The syntax of the service unit settings RuntimeDirectory=,\n          StateDirectory=, CacheDirectory=, LogsDirectory= has been extended:\n          if the specified value is now suffixed with a colon, followed by\n          another filename, the latter will be created as symbolic link to the\n          specified directory. This allows creating these service directories\n          together with alias symlinks to make them available under multiple\n          names.\n\n        * Service unit files gained two new settings TTYRows=/TTYColumns= for\n          configuring rows/columns of the TTY device passed to\n          stdin/stdout/stderr of the service. This is useful to propagate TTY\n          dimensions to a virtual machine.\n\n        * A new service unit file setting ExitType= has been added that\n          specifies when to assume a service has exited. By default systemd\n          only watches the main process of a service. By setting\n          ExitType=cgroup it can be told to wait for the last process in a\n          cgroup instead.\n\n        * Automount unit files gained a new setting ExtraOptions= that can be\n          used to configure additional mount options to pass to the kernel when\n          mounting the autofs instance.\n\n        * \"Urlification\" (generation of ESC sequences that generate clickable\n          hyperlinks in modern terminals) may now be turned off altogether\n          during build-time.\n\n        * Path units gained new TriggerLimitBurst= and TriggerLimitIntervalSec=\n          settings that default to 200 and 2 s respectively. The ratelimit\n          ensures that a path unit cannot cause PID1 to busy-loop when it is\n          trying to trigger a service that is skipped because of a Condition*=\n          not being satisfied. This matches the configuration and behaviour of\n          socket units.\n\n        * The TPM2/FIDO2/PKCS11 support in systemd-cryptsetup is now also built\n          as a plug-in for cryptsetup. This means the plain cryptsetup command\n          may now be used to unlock volumes set up this way.\n\n        * The TPM2 logic in cryptsetup will now automatically detect systems\n          where the TPM2 chip advertises SHA256 PCR banks but the firmware only\n          updates the SHA1 banks. In such a case PCR policies will be\n          automatically bound to the latter, not the former. This makes the PCR\n          policies reliable, but of course do not provide the same level of\n          trust as SHA256 banks.\n\n        * The TPM2 logic in systemd-cryptsetup/systemd-cryptsetup now supports\n          RSA primary keys in addition to ECC, improving compatibility with\n          TPM2 chips that do not support ECC. RSA keys are much slower to use\n          than ECC, and hence are only used if ECC is not available.\n\n        * /etc/crypttab gained support for a new token-timeout= setting for\n          encrypted volumes that allows configuration of the maximum time to\n          wait for PKCS#11/FIDO2 tokens to be plugged in. If the time elapses\n          the logic will query the user for a regular passphrase/recovery key\n          instead.\n\n        * Support for activating dm-integrity volumes at boot via a new file\n          /etc/integritytab and the tool systemd-integritysetup have been\n          added. This is similar to /etc/crypttab and /etc/veritytab, but deals\n          with dm-integrity instead of dm-crypt/dm-verity.\n\n        * The systemd-veritysetup-generator now understands a new usrhash=\n          kernel command line option for specifying the Verity root hash for\n          the partition backing the /usr/ file system. A matching set of\n          systemd.verity_usr_* kernel command line options has been added as\n          well. These all work similar to the corresponding options for the\n          root partition.\n\n        * The sd-device API gained a new API call sd_device_get_diskseq() to\n          return the DISKSEQ property of a device structure. The \"disk\n          sequence\" concept is a new feature recently introduced to the Linux\n          kernel that allows detecting reuse cycles of block devices, i.e. can\n          be used to recognize when loopback block devices are reused for a\n          different purpose or CD-ROM drives get their media changed.\n\n        * A new unit systemd-boot-update.service has been added. If enabled\n          (the default) and the sd-boot loader is detected to be installed, it\n          is automatically updated to the newest version when out of date. This\n          is useful to ensure the boot loader remains up-to-date, and updates\n          automatically propagate from the OS tree in /usr/.\n\n        * sd-boot will now build with SBAT by default in order to facilitate\n          working with recent versions of Shim that require it to be present.\n\n        * sd-boot can now parse Microsoft Windows' Boot Configuration Data.\n          This is used to robustly generate boot entry titles for Windows.\n\n        * A new generic target unit factory-reset.target has been added. It is\n          hooked into systemd-logind similar in fashion to\n          reboot/poweroff/suspend/hibernate, and is supposed to be used to\n          initiate a factory reset operation. What precisely this operation\n          entails is up for the implementer to decide, the primary goal of the\n          new unit is provide a framework where to plug in the implementation\n          and how to trigger it.\n\n        * A new meson build-time option 'clock-valid-range-usec-max' has been\n          added which takes a time in ¬µs and defaults to 15 years. If the RTC\n          time is noticed to be more than the specified time ahead of the\n          built-in epoch of systemd (which by default is the release timestamp\n          of systemd) it is assumed that the RTC is not working correctly, and\n          the RTC is reset to the epoch. (It already is reset to the epoch when\n          noticed to be before it.) This should increase the chance that time\n          doesn't accidentally jump too far ahead due to faulty hardware or\n          batteries.\n\n        * A new setting SaveIntervalSec= has been added to systemd-timesyncd,\n          which may be used to automatically save the current system time to\n          disk in regular intervals. This is useful to maintain a roughly\n          monotonic clock even without RTC hardware and with some robustness\n          against abnormal system shutdown.\n\n        * systemd-analyze verify gained support for a pair of new --image= +\n          --root= switches for verifying units below a specific root\n          directory/image instead of on the host.\n\n        * systemd-analyze verify gained support for verifying unit files under\n          an explicitly specified unit name, independently of what the filename\n          actually is.\n\n        * systemd-analyze verify gained a new switch --recursive-errors= which\n          controls whether to only fail on errors found in the specified units\n          or recursively any dependent units.\n\n        * systemd-analyze security now supports a new --offline mode for\n          analyzing unit files stored on disk instead of loaded units. It may\n          be combined with --root=/--image to analyze unit files under a root\n          directory or disk image. It also learnt a new --threshold= parameter\n          for specifying an exposure level threshold: if the exposure level\n          exceeds the specified value the call will fail. It also gained a new\n          --security-policy= switch for configuring security policies to\n          enforce on the units. A policy is a JSON file that lists which tests\n          shall be weighted how much to determine the overall exposure\n          level. Altogether these new features are useful for fully automatic\n          analysis and enforcement of security policies on unit files.\n\n        * systemd-analyze security gain a new --json= switch for JSON output.\n\n        * systemd-analyze learnt a new --quiet switch for reducing\n          non-essential output. It's honored by the \"dot\", \"syscall-filter\",\n          \"filesystems\" commands.\n\n        * systemd-analyze security gained a --profile= option that can be used\n          to take into account a portable profile when analyzing portable\n          services, since a lot of the security-related settings are enabled\n          through them.\n\n        * systemd-analyze learnt a new inspect-elf verb that parses ELF core\n          files, binaries and executables and prints metadata information,\n          including the build-id and other info described on:\n          https://systemd.io/COREDUMP_PACKAGE_METADATA/\n\n        * .network files gained a new UplinkInterface= in the [IPv6SendRA]\n          section, for automatically propagating DNS settings from other\n          interfaces.\n\n        * The static lease DHCP server logic in systemd-networkd may now serve\n          IP addresses outside of the configured IP pool range for the server.\n\n        * CAN support in systemd-networkd gained four new settings Loopback=,\n          OneShot=, PresumeAck=, ClassicDataLengthCode= for tweaking CAN\n          control modes. It gained a number of further settings for tweaking\n          CAN timing quanta.\n\n        * The [CAN] section in .network file gained new TimeQuantaNSec=,\n          PropagationSegment=, PhaseBufferSegment1=, PhaseBufferSegment2=,\n          SyncJumpWidth=, DataTimeQuantaNSec=, DataPropagationSegment=,\n          DataPhaseBufferSegment1=, DataPhaseBufferSegment2=, and\n          DataSyncJumpWidth= settings to control bit-timing processed by the\n          CAN interface.\n\n        * DHCPv4 client support in systemd-networkd learnt a new Label= option\n          for configuring the address label to apply to configure IPv4\n          addresses.\n\n        * The [IPv6AcceptRA] section of .network files gained support for a new\n          UseMTU= setting that may be used to control whether to apply the\n          announced MTU settings to the local interface.\n\n        * The [DHCPv4] section in .network file gained a new Use6RD= boolean\n          setting to control whether the DHCPv4 client request and process the\n          DHCP 6RD option.\n\n        * The [DHCPv6PrefixDelegation] section in .network file is renamed to\n          [DHCPPrefixDelegation], as now the prefix delegation is also supported\n          with DHCPv4 protocol by enabling the Use6RD= setting.\n\n        * The [DHCPPrefixDelegation] section in .network file gained a new\n          setting UplinkInterface= to specify the upstream interface.\n\n        * The [DHCPv6] section in .network file gained a new setting\n          UseDelegatedPrefix= to control whether the delegated prefixes will be\n          propagated to the downstream interfaces.\n\n        * The [IPv6AcceptRA] section of .network files now understands two new\n          settings UseGateway=/UseRoutePrefix= for explicitly configuring\n          whether to use the relevant fields from the IPv6 Router Advertisement\n          records.\n\n        * The ForceDHCPv6PDOtherInformation= setting in the [DHCPv6] section\n          has been removed. Please use the WithoutRA= and UseDelegatedPrefix=\n          settings in the [DHCPv6] section and the DHCPv6Client= setting in the\n          [IPv6AcceptRA] section to control when the DHCPv6 client is started\n          and how the delegated prefixes are handled by the DHCPv6 client.\n\n        * The IPv6Token= section in the [Network] section is deprecated, and\n          the [IPv6AcceptRA] section gained the Token= setting for its\n          replacement. The [IPv6Prefix] section also gained the Token= setting.\n          The Token= setting gained 'eui64' mode to explicitly configure an\n          address with the EUI64 algorithm based on the interface MAC address.\n          The 'prefixstable' mode can now optionally take a secret key. The\n          Token= setting in the [DHCPPrefixDelegation] section now supports all\n          algorithms supported by the same settings in the other sections.\n\n        * The [RoutingPolicyRule] section of .network file gained a new\n          SuppressInterfaceGroup= setting.\n\n        * The IgnoreCarrierLoss= setting in the [Network] section of .network\n          files now allows a duration to be specified, controlling how long to\n          wait before reacting to carrier loss.\n\n        * The [DHCPServer] section of .network file gained a new Router=\n          setting to specify the router address.\n\n        * The [CAKE] section of .network files gained various new settings\n          AutoRateIngress=, CompensationMode=, FlowIsolationMode=, NAT=,\n          MPUBytes=, PriorityQueueingPreset=, FirewallMark=, Wash=, SplitGSO=,\n          and UseRawPacketSize= for configuring CAKE.\n\n        * systemd-networkd now ships with new default .network files:\n          80-container-vb.network which matches host-side network bridge device\n          created by systemd-nspawn's --network-bridge or --network-zone\n          switch, and 80-6rd-tunnel.network which matches automatically created\n          sit tunnel with 6rd prefix when the DHCP 6RD option is received.\n\n        * systemd-networkd's handling of Endpoint= resolution for WireGuard\n          interfaces has been improved.\n\n        * systemd-networkd will now automatically configure routes to addresses\n          specified in AllowedIPs=. This feature can be controlled via\n          RouteTable= and RouteMetric= settings in [WireGuard] or\n          [WireGuardPeer] sections.\n\n        * systemd-networkd will now once again automatically generate persistent\n          MAC addresses for batadv and bridge interfaces. Users can disable this\n          by using MACAddress=none in .netdev files.\n\n        * systemd-networkd and systemd-udevd now support IP over InfiniBand\n          interfaces. The Kind= setting in .netdev file accepts \"ipoib\". And\n          systemd.netdev files gained the [IPoIB] section.\n\n        * systemd-networkd and systemd-udevd now support net.ifname_policy=\n          option on the kernel command-line. This is implemented through the\n          systemd-network-generator service that automatically generates\n          appropriate .link, .network, and .netdev files.\n\n        * The various systemd-udevd \"ethtool\" buffer settings now understand\n          the special value \"max\" to configure the buffers to the maximum the\n          hardware supports.\n\n        * systemd-udevd's .link files may now configure a large variety of\n          NIC coalescing settings, plus more hardware offload settings.\n\n        * .link files gained a new WakeOnLanPassword= setting in the [Link]\n          section that allows to specify a WoL \"SecureOn\" password on hardware\n          that supports this.\n\n        * systemd-nspawn's --setenv= switch now supports an additional syntax:\n          if only a variable name is specified (i.e. without being suffixed by\n          a '=' character and a value) the current value of the environment\n          variable is propagated to the container. e.g. --setenv=FOO will\n          lookup the current value of $FOO in the environment, and pass it down\n          to the container. Similar behavior has been added to homectl's,\n          machinectl's and systemd-run's --setenv= switch.\n\n        * systemd-nspawn gained a new switch --suppress-sync= which may be used\n          to optionally suppress the effect of the sync()/fsync()/fdatasync()\n          system calls for the container payload. This is useful for build\n          system environments where safety against abnormal system shutdown is\n          not essential as all build artifacts can be regenerated any time, but\n          the performance win is beneficial.\n\n        * systemd-nspawn will now raise the RLIMIT_NOFILE hard limit to the\n          same value that PID 1 uses for most forked off processes.\n\n        * systemd-nspawn's --bind=/--bind-ro= switches now optionally take\n          uidmap/nouidmap options as last parameter. If \"uidmap\" is used the\n          bind mounts are created with UID mapping taking place that ensures\n          the host's file ownerships are mapped 1:1 to container file\n          ownerships, even if user namespacing is used. This way\n          files/directories bound into containers will no longer show up as\n          owned by the nobody user as they typically did if no special care was\n          taken to shift them manually.\n\n        * When discovering Windows installations sd-boot will now attempt to\n          show the Windows version.\n\n        * The color scheme to use in sd-boot may now be configured at\n          build-time.\n\n        * sd-boot gained the ability to change screen resolution during\n          boot-time, by hitting the \"r\" key. This will cycle through available\n          resolutions and save the last selection.\n\n        * sd-boot learnt a new hotkey \"f\". When pressed the system will enter\n          firmware setup. This is useful in environments where it is difficult\n          to hit the right keys early enough to enter the firmware, and works\n          on any firmware regardless which key it natively uses.\n\n        * sd-boot gained support for automatically booting into the menu item\n          selected on the last boot (using the \"@saved\" identifier for menu\n          items).\n\n        * sd-boot gained support for automatically loading all EFI drivers\n          placed in the /EFI/systemd/drivers/ subdirectory of the EFI System\n          Partition (ESP). These drivers are loaded before the menu entries are\n          loaded. This is useful e.g. to load additional file system drivers\n          for the XBOOTLDR partition.\n\n        * systemd-boot will now paint the input cursor on its own instead of\n          relying on the firmware to do so, increasing compatibility with broken\n          firmware that doesn't make the cursor reasonably visible.\n\n        * sd-boot now embeds a .osrel PE section like we expect from Boot\n          Loader Specification Type #2 Unified Kernels. This means sd-boot\n          itself may be used in place of a Type #2 Unified Kernel. This is\n          useful for debugging purposes as it allows chain-loading one a\n          (development) sd-boot instance from another.\n\n        * sd-boot now supports a new \"devicetree\" field in Boot Loader\n          Specification Type #1 entries: if configured the specified device\n          tree file is installed before the kernel is invoked. This is useful\n          for installing/applying new devicetree files without updating the\n          kernel image.\n\n        * Similarly, sd-stub now can read devicetree data from a PE section\n          \".dtb\" and apply it before invoking the kernel.\n\n        * sd-stub (the EFI stub that can be glued in front of a Linux kernel)\n          gained the ability to pick up credentials and sysext files, wrap them\n          in a cpio archive, and pass as an additional initrd to the invoked\n          Linux kernel, in effect placing those files in the /.extra/ directory\n          of the initrd environment. This is useful to implement trusted initrd\n          environments which are fully authenticated but still can be extended\n          (via sysexts) and parameterized (via encrypted/authenticated\n          credentials, see above).\n\n          Credentials can be located next to the kernel image file (credentials\n          specific to a single boot entry), or in one of the shared directories\n          (credentials applicable to multiple boot entries).\n\n        * sd-stub now comes with a full man page, that explains its feature set\n          and how to combine a kernel image, an initrd and the stub to build a\n          complete EFI unified kernel image, implementing Boot Loader\n          Specification Type #2.\n\n        * sd-stub may now provide the initrd to the executed kernel via the\n          LINUX_EFI_INITRD_MEDIA_GUID EFI protocol, adding compatibility for\n          non-x86 architectures.\n\n        * bootctl learnt new set-timeout and set-timeout-oneshot commands that\n          may be used to set the boot menu timeout of the boot loader (for all\n          or just the subsequent boot).\n\n        * bootctl and kernel-install will now read variables\n          KERNEL_INSTALL_LAYOUT= from /etc/machine-info and layout= from\n          /etc/kernel/install.conf. When set, it specifies the layout to use\n          for installation directories on the boot partition, so that tools\n          don't need to guess it based on the already-existing directories. The\n          only value that is defined natively is \"bls\", corresponding to the\n          layout specified in\n          https://systemd.io/BOOT_LOADER_SPECIFICATION/. Plugins for\n          kernel-install that implement a different layout can declare other\n          values for this variable.\n\n          'bootctl install' will now write KERNEL_INSTALL_LAYOUT=bls, on the\n          assumption that if the user installed sd-boot to the ESP, they intend\n          to use the entry layout understood by sd-boot. It'll also write\n          KERNEL_INSTALL_MACHINE_ID= if it creates any directories using the ID\n          (and it wasn't specified in the config file yet). Similarly,\n          kernel-install will now write KERNEL_INSTALL_MACHINE_ID= (if it\n          wasn't specified in the config file yet). Effectively, those changes\n          mean that the machine-id used for boot loader entry installation is\n          \"frozen\" upon first use and becomes independent of the actual\n          machine-id.\n\n          Configuring KERNEL_INSTALL_MACHINE_ID fixes the following problem:\n          images created for distribution (\"golden images\") are built with no\n          machine-id, so that a unique machine-id can be created on the first\n          boot. But those images may contain boot loader entries with the\n          machine-id used during build included in paths. Using a \"frozen\"\n          value allows unambiguously identifying entries that match the\n          specific installation, while still permitting parallel installations\n          without conflict.\n\n          Configuring KERNEL_INSTALL_LAYOUT obviates the need for\n          kernel-install to guess the installation layout. This fixes the\n          problem where a (possibly empty) directory in the boot partition is\n          created from a different layout causing kernel-install plugins to\n          assume the wrong layout. A particular example of how this may happen\n          is the grub2 package in Fedora which includes directories under /boot\n          directly in its file list. Various other packages pull in grub2 as a\n          dependency, so it may be installed even if unused, breaking\n          installations that use the bls layout.\n\n        * bootctl and systemd-bless-boot can now be linked statically.\n\n        * systemd-sysext now optionally doesn't insist on extension-release.d/\n          files being placed in the image under the image's file name. If the\n          file system xattr user.extension-release.strict is set on the\n          extension release file, it is accepted regardless of its name. This\n          relaxes security restrictions a bit, as system extension may be\n          attached under a wrong name this way.\n\n        * udevadm's test-builtin command learnt a new --action= switch for\n          testing the built-in with the specified action (in place of the\n          default 'add').\n\n        * udevadm info gained new switches --property=/--value for showing only\n          specific udev properties/values instead of all.\n\n        * A new hwdb database has been added that contains matches for various\n          types of signal analyzers (protocol analyzers, logic analyzers,\n          oscilloscopes, multimeters, bench power supplies, etc.) that should\n          be accessible to regular users.\n\n        * A new hwdb database entry has been added that carries information\n          about types of cameras (regular or infrared), and in which direction\n          they point (front or back).\n\n        * A new rule to allow console users access to rfkill by default has been\n          added to hwdb.\n\n        * Device nodes for the Software Guard eXtension enclaves (sgx_vepc) are\n          now also owned by the system group \"sgx\".\n\n        * A new build-time meson option \"extra-net-naming-schemes=\" has been\n          added to define additional naming schemes for udev's network\n          interface naming logic. This is useful for enterprise distributions\n          and similar which want to pin the schemes of certain distribution\n          releases under a specific name and previously had to patch the\n          sources to introduce new named schemes.\n\n        * The predictable naming logic for network interfaces has been extended\n          to generate stable names from Xen netfront device information.\n\n        * hostnamed's chassis property can now be sourced from chassis-type\n          field encoded in devicetree (in addition to the existing DMI\n          support).\n\n        * systemd-cgls now optionally displays cgroup IDs and extended\n          attributes for each cgroup. (Controllable via the new --xattr= +\n          --cgroup-id= switches.)\n\n        * coredumpctl gained a new --all switch for operating on all\n          Journal files instead of just the local ones.\n\n        * systemd-coredump will now use libdw/libelf via dlopen() rather than\n          directly linking, allowing users to easily opt-out of backtrace/metadata\n          analysis of core files, and reduce image sizes when this is not needed.\n\n        * systemd-coredump will now analyze core files with libdw/libelf in a\n          forked, sandboxed process.\n\n        * systemd-homed will now try to unmount an activate home area in\n          regular intervals once the user logged out fully. Previously this was\n          attempted exactly once but if the home directory was busy for some\n          reason it was not tried again.\n\n        * systemd-homed's LUKS2 home area backend will now create a BSD file\n          system lock on the image file while the home area is active\n          (i.e. mounted). If a home area is found to be locked, logins are\n          politely refused. This should improve behavior when using home areas\n          images that are accessible via the network from multiple clients, and\n          reduce the chance of accidental file system corruption in that case.\n\n        * Optionally, systemd-homed will now drop the kernel buffer cache once\n          a user has fully logged out, configurable via the new --drop-caches=\n          homectl switch.\n\n        * systemd-homed now makes use of UID mapped mounts for the home areas.\n          If the kernel and used file system support it, files are now\n          internally owned by the \"nobody\" user (i.e. the user typically used\n          for indicating \"this ownership is not mapped\"), and dynamically\n          mapped to the UID used locally on the system via the UID mapping\n          mount logic of recent kernels. This makes migrating home areas\n          between different systems cheaper because recursively chown()ing file\n          system trees is no longer necessary.\n\n        * systemd-homed's CIFS backend now optionally supports CIFS service\n          names with a directory suffix, in order to place home directories in\n          a subdirectory of a CIFS share, instead of the top-level directory.\n\n        * systemd-homed's CIFS backend gained support for specifying additional\n          mount options in the JSON user record (cifsExtraMountOptions field,\n          and --cifs-extra-mount-options= homectl switch). This is for example\n          useful for configuring mount options such as \"noserverino\" that some\n          SMB3 services require (use that to run a homed home directory from a\n          FritzBox SMB3 share this way).\n\n        * systemd-homed will now default to btrfs' zstd compression for home\n          areas. This is inspired by Fedora's recent decision to switch to zstd\n          by default.\n\n        * Additional mount options to use when mounting the file system of\n          LUKS2 volumes in systemd-homed has been added. Via the\n          $SYSTEMD_HOME_MOUNT_OPTIONS_BTRFS, $SYSTEMD_HOME_MOUNT_OPTIONS_EXT4,\n          $SYSTEMD_HOME_MOUNT_OPTIONS_XFS environment variables to\n          systemd-homed or via the luksExtraMountOptions user record JSON\n          property. (Exposed via homectl --luks-extra-mount-options)\n\n        * homectl's resize command now takes the special size specifications\n          \"min\" and \"max\" to shrink/grow the home area to the minimum/maximum\n          size possible, taking disk usage/space constraints and file system\n          limitations into account. Resizing is now generally graceful: the\n          logic will try to get as close to the specified size as possible, but\n          not consider it a failure if the request couldn't be fulfilled\n          precisely.\n\n        * systemd-homed gained the ability to automatically shrink home areas\n          on logout to their minimal size and grow them again on next\n          login. This ensures that while inactive, a home area only takes up\n          the minimal space necessary, but once activated, it provides\n          sufficient space for the user's needs. This behavior is only\n          supported if btrfs is used as file system inside the home area\n          (because only for btrfs online growing/shrinking is implemented in\n          the kernel). This behavior is now enabled by default, but may be\n          controlled via the new --auto-resize-mode= setting of homectl.\n\n        * systemd-homed gained support for automatically re-balancing free disk\n          space among active home areas, in case the LUKS2 backends are used,\n          and no explicit disk size was requested. This way disk space is\n          automatically managed and home areas resized in regular intervals and\n          manual resizing when disk space becomes scarce should not be\n          necessary anymore. This behavior is only supported if btrfs is used\n          within the home areas (as only then online shrinking and growing is\n          supported), and may be configured via the new rebalanceWeight JSON\n          user record field (as exposed via the new --rebalance-weight= homectl\n          setting). Re-balancing is mostly automatic, but can also be requested\n          explicitly via \"homectl rebalance\", which is synchronous, and thus\n          may be used to wait until the rebalance run is complete.\n\n        * userdbctl gained a --json= switch for configured the JSON formatting\n          to use when outputting user or group records.\n\n        * userdbctl gained a new --multiplexer= switch for explicitly\n          configuring whether to use the systemd-userdbd server side user\n          record resolution logic.\n\n        * userdbctl's ssh-authorized-keys command learnt a new --chain switch,\n          for chaining up another command to execute after completing the\n          look-up. Since the OpenSSH's AuthorizedKeysCommand only allows\n          configuration of a single command to invoke, this maybe used to\n          invoke multiple: first userdbctl's own implementation, and then any\n          other also configured in the command line.\n\n        * The sd-event API gained a new function sd_event_add_inotify_fd() that\n          is similar to sd_event_add_inotify() but accepts a file descriptor\n          instead of a path in the file system for referencing the inode to\n          watch.\n\n        * The sd-event API gained a new function\n          sd_event_source_set_ratelimit_expire_callback() that may be used to\n          define a callback function that is called whenever an event source\n          leaves the rate limiting phase.\n\n        * New documentation has been added explaining which steps are necessary\n          to port systemd to a new architecture:\n\n          https://systemd.io/PORTING_TO_NEW_ARCHITECTURES\n\n        * The x-systemd.makefs option in /etc/fstab now explicitly supports\n          ext2, ext3, and f2fs file systems.\n\n        * Mount units and units generated from /etc/fstab entries with 'noauto'\n          are now ordered the same as other units. Effectively, they will be\n          started earlier (if something actually pulled them in) and stopped\n          later, similarly to normal mount units that are part of\n          fs-local.target. This change should be invisible to users, but\n          should prevent those units from being stopped too early during\n          shutdown.\n\n        * The systemd-getty-generator now honors a new kernel command line\n          argument systemd.getty_auto= and a new environment variable\n          $SYSTEMD_GETTY_AUTO that allows turning it off at boot. This is for\n          example useful to turn off gettys inside of containers or similar\n          environments.\n\n        * systemd-resolved now listens on a second DNS stub address: 127.0.0.54\n          (in addition to 127.0.0.53, as before). If DNS requests are sent to\n          this address they are propagated in \"bypass\" mode only, i.e. are\n          almost not processed locally, but mostly forwarded as-is to the\n          current upstream DNS servers. This provides a stable DNS server\n          address that proxies all requests dynamically to the right upstream\n          DNS servers even if these dynamically change. This stub does not do\n          mDNS/LLMNR resolution. However, it will translate look-ups to\n          DNS-over-TLS if necessary. This new stub is particularly useful in\n          container/VM environments, or for tethering setups: use DNAT to\n          redirect traffic to any IP address to this stub.\n\n        * systemd-importd now honors new environment variables\n          $SYSTEMD_IMPORT_BTRFS_SUBVOL, $SYSTEMD_IMPORT_BTRFS_QUOTA,\n          $SYSTEMD_IMPORT_SYNC, which may be used disable btrfs subvolume\n          generation, btrfs quota setup and disk synchronization.\n\n        * systemd-importd and systemd-resolved can now be optionally built with\n          OpenSSL instead of libgcrypt.\n\n        * systemd-repart no longer requires OpenSSL.\n\n        * systemd-sysusers will no longer create the redundant 'nobody' group\n          by default, as the 'nobody' user is already created with an\n          appropriate primary group.\n\n        * If a unit uses RuntimeMaxSec, systemctl show will now display it.\n\n        * systemctl show-environment gained support for --output=json.\n\n        * pam_systemd will now first try to use the X11 abstract socket, and\n          fallback to the socket file in /tmp/.X11-unix/ only if that does not\n          work.\n\n        * systemd-journald will no longer go back to volatile storage\n          regardless of configuration when its unit is restarted.\n\n        * Initial support for the LoongArch architecture has been added (system\n          call lists, GPT partition table UUIDs, etc).\n\n        * systemd-journald's own logging messages are now also logged to the\n          journal itself when systemd-journald logs to /dev/kmsg.\n\n        * systemd-journald now re-enables COW for archived journal files on\n          filesystems that support COW. One benefit of this change is that\n          archived journal files will now get compressed on btrfs filesystems\n          that have compression enabled.\n\n        * systemd-journald now deduplicates fields in a single log message\n          before adding it to the journal. In archived journal files, it will\n          also punch holes for unused parts and truncate the file as\n          appropriate, leading to reductions in disk usage.\n\n        * journalctl --verify was extended with more informative error\n          messages.\n\n        * More of sd-journal's functions are now resistant against journal file\n          corruption.\n\n        * The shutdown command learnt a new option --show, to display the\n          scheduled shutdown.\n\n        * A LICENSES/ directory is now included in the git tree. It contains a\n          README.md file that explains the licenses used by source files in\n          this repository. It also contains the text of all applicable\n          licenses as they appear on spdx.org.\n\n        Contributions from: Aakash¬†Singh, acsfer, Adolfo¬†Jayme¬†Barrientos,\n        Adrian¬†Vovk, Albert¬†Brox, Alberto¬†Mardegan, Alexander¬†Kanavin,\n        alexlzhu, Alfonso¬†S√°nchez-Beato, Alvin¬†≈†ipraga, Alyssa¬†Ross,\n        Amir¬†Omidi, Anatol¬†Pomozov, Andika¬†Triwidada, Andreas¬†Rammhold,\n        Andreas¬†Valder, Andrej¬†Lajovic, Andrew¬†Soutar, Andrew¬†Stone, Andy¬†Chi,\n        Anita¬†Zhang, Anssi¬†Hannula, Antonio¬†Alvarez¬†Feijoo,\n        Antony¬†Deepak¬†Thomas, Arnaud¬†Ferraris, Arvid¬†E.¬†Picciani,\n        Bastien¬†Nocera, Benjamin¬†Berg, Benjamin¬†Herrenschmidt, Ben¬†Stockett,\n        Bogdan¬†Seniuc, Boqun¬†Feng, Carl¬†Lei, chlorophyll-zz, Chris¬†Packham,\n        Christian¬†Brauner, Christian¬†G√∂ttsche, Christian¬†Wehrli,\n        Christoph¬†Anton¬†Mitterer, Cristian¬†Rodr√≠guez, Daan¬†De¬†Meyer,\n        Daniel¬†Maixner, Dann¬†Frazier, Dan¬†Streetman, Davide¬†Cavalca,\n        David¬†Seifert, David¬†Tardon, dependabot[bot], Dimitri¬†John¬†Ledkov,\n        Dimitri¬†Papadopoulos, Dimitry¬†Ishenko, Dmitry¬†Khlebnikov,\n        Dominique¬†Martinet, duament, Egor, Egor¬†Ignatov, Emil¬†Renner¬†Berthing,\n        Emily¬†Gonyer, Ettore¬†Atalan, Evgeny¬†Vereshchagin, Florian¬†Klink,\n        Franck¬†Bui, Frantisek¬†Sumsal, Geass-LL, Gibeom¬†Gwon, GnunuX,\n        Gogo¬†Gogsi, gregzuro, Greg¬†Zuro, Gustavo¬†Costa, Hans¬†de¬†Goede,\n        Hela¬†Basa, Henri¬†Chain, hikigaya58, Hugo¬†Carvalho,\n        Hugo¬†Osvaldo¬†Barrera, Iago¬†Lopez¬†Galeiras, Iago¬†L√≥pez¬†Galeiras,\n        I-dont-need-name, igo95862, Jack¬†D√§hn, James¬†Hilliard, Jan¬†Janssen,\n        Jan¬†Kuparinen, Jan¬†Macku, Jan¬†Palus, Jarkko¬†Sakkinen, Jayce¬†Fayne,\n        jiangchuangang, jlempen, John¬†Lindgren, Jonas¬†Dre√üler, Jonas¬†Jelten,\n        Jonas¬†Witschel, Joris¬†Hartog, Jos√©¬†Exp√≥sito, Julia¬†Kartseva,\n        Kai-Heng¬†Feng, Kai¬†Wohlfahrt, Kay¬†Siver¬†B√∏, KennthStailey,\n        Kevin¬†Kuehler, Kevin¬†Orr, Khem¬†Raj, Kristian¬†Klausen, Kyle¬†Laker,\n        lainahai, LaserEyess, Lennart¬†Poettering, Lia¬†Lenckowski, longpanda,\n        Luca¬†Boccassi, Luca¬†BRUNO, Ludwig¬†Nussel, Lukas¬†Senionis,\n        Maanya¬†Goenka, Maciek¬†Borzecki, Marcel¬†Menzel, Marco¬†Scardovi,\n        Marcus¬†Harrison, Mark¬†Boudreau, Matthijs¬†van¬†Duin, Mauricio¬†V√°squez,\n        Maxime¬†de¬†Roucy, Max¬†Resch, MertsA, Michael¬†Biebl, Michael¬†Catanzaro,\n        Michal¬†Koutn√Ω, Michal¬†SekletaÃÅr, Miika¬†Karanki, Mike¬†Gilbert,\n        Milo¬†Turner, ml, monosans, Nacho¬†Barrientos, nassir90, Nishal¬†Kulkarni,\n        nl6720, Ondrej¬†Kozina, Paulo¬†Neves, Pavel¬†B≈ôezina, pedro¬†martelletto,\n        Peter¬†Hutterer, Peter¬†Morrow, Piotr¬†DrƒÖg, Rasmus¬†Villemoes, ratijas,\n        Raul¬†Tambre, rene, Riccardo¬†Schirone, Robert-L-Turner, Robert¬†Scheck,\n        Ross¬†Jennings, saikat0511, Scott¬†Lamb, Scott¬†Worley,\n        Sergei¬†Trofimovich, Sho¬†Iizuka, Slava¬†Bacherikov, Slimane¬†Selyan¬†Amiri,\n        StefanBruens, Steven¬†Siloti, svonohr, Taiki¬†Sugawara, Takashi¬†Sakamoto,\n        Takuro¬†Onoue, Thomas¬†Blume, Thomas¬†Haller, Thomas¬†M√ºhlbacher,\n        Tianlu¬†Shao, Toke¬†H√∏iland-J√∏rgensen, Tom¬†Yan, Tony¬†Asleson,\n        Topi¬†Miettinen, Ulrich¬†√ñlmann, Urs¬†Ritzmann, Vincent¬†Bernat,\n        Vito¬†Caputo, Vladimir¬†Panteleev, WANG¬†Xuerui, Wind/owZ, Wu¬†Xiaotian,\n        xdavidwu, Xiaotian¬†Wu, xujing, yangmingtai, Yao¬†Wei, Yao¬†Wei¬†(È≠èÈäòÂª∑),\n        Yegor¬†Alexeyev, Yu¬†Watanabe, Zbigniew¬†Jƒôdrzejewski-Szmek,\n        –î–∞–º—ò–∞–Ω¬†–ì–µ–æ—Ä–≥–∏–µ–≤—Å–∫–∏, –Ω–∞–±\n\n        ‚Äî Warsaw, 2021-12-23\n\nCHANGES WITH 249:\n\n        * When operating on disk images via the --image= switch of various\n          tools (such as systemd-nspawn or systemd-dissect), or when udev finds\n          no 'root=' parameter on the kernel command line, and multiple\n          suitable root or /usr/ partitions exist in the image, then a simple\n          comparison inspired by strverscmp() is done on the GPT partition\n          label, and the newest partition is picked. This permits a simple and\n          generic whole-file-system A/B update logic where new operating system\n          versions are dropped into partitions whose label is then updated with\n          a matching version identifier.\n\n        * systemd-sysusers now supports querying the passwords to set for the\n          users it creates via the \"credentials\" logic introduced in v247: the\n          passwd.hashed-password.<user> and passwd.plaintext-password.<user>\n          credentials are consulted for the password to use (either in UNIX\n          hashed form, or literally). By default these credentials are inherited\n          down from PID1 (which in turn imports it from a container manager if\n          there is one). This permits easy configuration of user passwords\n          during first boot. Example:\n\n          # systemd-nspawn -i foo.raw --volatile=yes --set-credential=passwd.plaintext-password.root:foo\n\n          Note that systemd-sysusers operates in purely additive mode: it\n          executes no operation if the declared users already exist, and hence\n          doesn't set any passwords as effect of the command line above if the\n          specified root user exists already in the image. (Note that\n          --volatile=yes ensures it doesn't, though.)\n\n        * systemd-firstboot now also supports querying various system\n          parameters via the credential subsystems. Thus, as above this may be\n          used to initialize important system parameters on first boot of\n          previously unprovisioned images (i.e. images with a mostly empty\n          /etc/).\n\n        * PID 1 may now show both the unit name and the unit description\n          strings in its status output during boot. This may be configured with\n          StatusUnitFormat=combined in system.conf or\n          systemd.status-unit-format=combined on the kernel command line.\n\n        * The systemd-machine-id-setup tool now supports a --image= switch for\n          provisioning a machine ID file into an OS disk image, similar to how\n          --root= operates on an OS file tree. This matches the existing switch\n          of the same name for systemd-tmpfiles, systemd-firstboot, and\n          systemd-sysusers tools.\n\n        * Similarly, systemd-repart gained support for the --image= switch too.\n          In combination with the existing --size= option, this makes the tool\n          particularly useful for easily growing disk images in a single\n          invocation, following the declarative rules included in the image\n          itself.\n\n        * systemd-repart's partition configuration files gained support for a\n          new switch MakeDirectories= which may be used to create arbitrary\n          directories inside file systems that are created, before registering\n          them in the partition table. This is useful in particular for root\n          partitions to create mount point directories for other partitions\n          included in the image. For example, a disk image that contains a\n          root, /home/, and /var/ partitions, may set MakeDirectories=yes to\n          create /home/ and /var/ as empty directories in the root file system\n          on its creation, so that the resulting image can be mounted\n          immediately, even in read-only mode.\n\n        * systemd-repart's CopyBlocks= setting gained support for the special\n          value \"auto\". If used, a suitable matching partition on the booted OS\n          is found as source to copy blocks from. This is useful when\n          implementing replicating installers, that are booted from one medium\n          and then stream their own root partition onto the target medium.\n\n        * systemd-repart's partition configuration files gained support for a\n          Flags=, a ReadOnly= and a NoAuto= setting, allowing control of these\n          GPT partition flags for the created partitions: this is useful for\n          marking newly created partitions as read-only, or as not being\n          subject for automatic mounting from creation on.\n\n        * The /etc/os-release file has been extended with two new (optional)\n          variables IMAGE_VERSION= and IMAGE_ID=, carrying identity and version\n          information for OS images that are updated comprehensively and\n          atomically as one image. Two new specifiers %M, %A now resolve to\n          these two fields in the various configuration options that resolve\n          specifiers.\n\n        * portablectl gained a new switch --extension= for enabling portable\n          service images with extensions that follow the extension image\n          concept introduced with v248, and thus allows layering multiple\n          images when setting up the root filesystem of the service.\n\n        * systemd-coredump will now extract ELF build-id information from\n          processes dumping core and include it in the coredump report.\n          Moreover, it will look for ELF .note.package sections with\n          distribution packaging meta-information about the crashing process.\n          This is useful to directly embed the rpm or deb (or any other)\n          package name and version in ELF files, making it easy to match\n          coredump reports with the specific package for which the software was\n          compiled. This is particularly useful on environments with ELF files\n          from multiple vendors, different distributions and versions, as is\n          common today in our containerized and sand-boxed world. For further\n          information, see:\n\n          https://systemd.io/COREDUMP_PACKAGE_METADATA\n\n        * A new udev hardware database has been added for FireWire devices\n          (IEEE 1394).\n\n        * The \"net_id\" built-in of udev has been updated with three\n          backwards-incompatible changes:\n\n          - PCI hotplug slot names on s390 systems are now parsed as\n            hexadecimal numbers. They were incorrectly parsed as decimal\n            previously, or ignored if the name was not a valid decimal\n            number.\n\n          - PCI onboard indices up to 65535 are allowed. Previously, numbers\n            above 16383 were rejected. This primarily impacts s390 systems,\n            where values up to 65535 are used.\n\n          - Invalid characters in interface names are replaced with \"_\".\n\n          The new version of the net naming scheme is \"v249\". The previous\n          scheme can be selected via the \"net.naming_scheme=v247\" kernel\n          command line parameter.\n\n        * sd-bus' sd_bus_is_ready() and sd_bus_is_open() calls now accept a\n          NULL bus object, for which they will return false. Or in other words,\n          an unallocated bus connection is neither ready nor open.\n\n        * The sd-device API acquired a new API function\n          sd_device_get_usec_initialized() that returns the monotonic time when\n          the udev device first appeared in the database.\n\n        * sd-device gained a new APIs sd_device_trigger_with_uuid() and\n          sd_device_get_trigger_uuid(). The former is similar to\n          sd_device_trigger() but returns a randomly generated UUID that is\n          associated with the synthetic uevent generated by the call. This UUID\n          may be read from the sd_device object a monitor eventually receives,\n          via the sd_device_get_trigger_uuid(). This interface requires kernel\n          4.13 or above to work, and allows tracking a synthetic uevent through\n          the entire device management stack. The \"udevadm trigger --settle\"\n          logic has been updated to make use of this concept if available to\n          wait precisely for the uevents it generates. \"udevadm trigger\" also\n          gained a new parameter --uuid that prints the UUID for each generated\n          uevent.\n\n        * sd-device also gained new APIs sd_device_new_from_ifname() and\n          sd_device_new_from_ifindex() for allocating an sd-device object for\n          the specified network interface. The former accepts an interface name\n          (either a primary or an alternative name), the latter an interface\n          index.\n\n        * The native Journal protocol has been documented. Clients may talk\n          this as alternative to the classic BSD syslog protocol for locally\n          delivering log records to the Journal. The protocol has been stable\n          for a long time and in fact been implemented already in a variety\n          of alternative client libraries. This documentation makes the support\n          for that official:\n\n          https://systemd.io/JOURNAL_NATIVE_PROTOCOL\n\n        * A new BPFProgram= setting has been added to service files. It may be\n          set to a path to a loaded kernel BPF program, i.e. a path to a bpffs\n          file, or a bind mount or symlink to one. This may be used to upload\n          and manage BPF programs externally and then hook arbitrary systemd\n          services into them.\n\n        * The \"home.arpa\" domain that has been officially declared as the\n          choice for domain for local home networks per RFC 8375 has been added\n          to the default NTA list of resolved, since DNSSEC is generally not\n          available on private domains.\n\n        * The CPUAffinity= setting of unit files now resolves \"%\" specifiers.\n\n        * A new ManageForeignRoutingPolicyRules= setting has been added to\n          .network files which may be used to exclude foreign-created routing\n          policy rules from systemd-networkd management.\n\n        * systemd-network-wait-online gained two new switches -4 and -6 that\n          may be used to tweak whether to wait for only IPv4 or only IPv6\n          connectivity.\n\n        * .network files gained a new RequiredFamilyForOnline= setting to\n          fine-tune whether to require an IPv4 or IPv6 address in order to\n          consider an interface \"online\".\n\n        * networkctl will now show an over-all \"online\" state in the per-link\n          information.\n\n        * In .network files a new OutgoingInterface= setting has been added to\n          specify the output interface in bridge FDB setups.\n\n        * In .network files the Multipath group ID may now be configured for\n          [NextHop] entries, via the new Group= setting.\n\n        * The DHCP server logic configured in .network files gained a new\n          setting RelayTarget= that turns the server into a DHCP server relay.\n          The RelayAgentCircuitId= and RelayAgentRemoteId= settings may be used\n          to further tweak the DHCP relay behaviour.\n\n        * The DHCP server logic also gained a new ServerAddress= setting in\n          .network files that explicitly specifies the server IP address to\n          use. If not specified, the address is determined automatically, as\n          before.\n\n        * The DHCP server logic in systemd-networkd gained support for static\n          DHCP leases, configurable via the [DHCPServerStaticLease]\n          section. This allows explicitly mapping specific MAC addresses to\n          fixed IP addresses and vice versa.\n\n        * The RestrictAddressFamilies= setting in service files now supports a\n          new special value \"none\". If specified sockets of all address\n          families will be made unavailable to services configured that way.\n\n        * systemd-fstab-generator and systemd-repart have been updated to\n          support booting from disks that carry only a /usr/ partition but no\n          root partition yet, and where systemd-repart can add it in on the\n          first boot. This is useful for implementing systems that ship with a\n          single /usr/ file system, and whose root file system shall be set up\n          and formatted on a LUKS-encrypted volume whose key is generated\n          locally (and possibly enrolled in the TPM) during the first boot.\n\n        * The [Address] section of .network files now accepts a new\n          RouteMetric= setting that configures the routing metric to use for\n          the prefix route created as effect of the address configuration.\n          Similarly, the [DHCPv6PrefixDelegation] and [IPv6Prefix] sections\n          gained matching settings for their prefix routes. (The option of the\n          same name in the [DHCPv6] section is moved to [IPv6AcceptRA], since\n          it conceptually belongs there; the old option is still understood for\n          compatibility.)\n\n        * The DHCPv6 IAID and DUID are now explicitly configurable in .network\n          files.\n\n        * A new udev property ID_NET_DHCP_BROADCAST on network interface\n          devices is now honoured by systemd-networkd, controlling whether to\n          issue DHCP offers via broadcasting. This is used to ensure that s390\n          layer 3 network interfaces work out-of-the-box with systemd-networkd.\n\n        * nss-myhostname and systemd-resolved will now synthesize address\n          records for a new special hostname \"_outbound\". The name will always\n          resolve to the local IP addresses most likely used for outbound\n          connections towards the default routes. On multi-homed hosts this is\n          useful to have a stable handle referring to \"the\" local IP address\n          that matters most, to the point where this is defined.\n\n        * The Discoverable Partition Specification has been updated with a new\n          GPT partition flag \"grow-file-system\" defined for its partition\n          types. Whenever partitions with this flag set are automatically\n          mounted (i.e. via systemd-gpt-auto-generator or the --image= switch\n          of systemd-nspawn or other tools; and as opposed to explicit mounting\n          via /etc/fstab), the file system within the partition is\n          automatically grown to the full size of the partition. If the file\n          system size already matches the partition size this flag has no\n          effect. Previously, this functionality has been available via the\n          explicit x-systemd.growfs mount option, and this new flag extends\n          this to automatically discovered mounts. A new GrowFileSystem=\n          setting has been added to systemd-repart drop-in files that allows\n          configuring this partition flag. This new flag defaults to on for\n          partitions automatically created by systemd-repart, except if they\n          are marked read-only. See the specification for further details:\n\n          https://systemd.io/DISCOVERABLE_PARTITIONS\n\n        * .network files gained a new setting RoutesToNTP= in the [DHCPv4]\n          section. If enabled (which is the default), and an NTP server address\n          is acquired through a DHCP lease on this interface an explicit route\n          to this address is created on this interface to ensure that NTP\n          traffic to the NTP server acquired on an interface is also routed\n          through that interface. The pre-existing RoutesToDNS= setting that\n          implements the same for DNS servers is now enabled by default.\n\n        * A pair of service settings SocketBindAllow= + SocketBindDeny= have\n          been added that may be used to restrict the network interfaces\n          sockets created by the service may be bound to. This is implemented\n          via BPF.\n\n        * A new ConditionFirmware= setting has been added to unit files to\n          conditionalize on certain firmware features. At the moment it may\n          check whether running on a UEFI system, a device.tree system, or if\n          the system is compatible with some specified device-tree feature.\n\n        * A new ConditionOSRelease= setting has been added to unit files to\n          check os-release(5) fields. The \"=\", \"!=\", \"<\", \"<=\", \">=\", \">\"\n          operators may be used to check if some field has some specific value\n          or do an alphanumerical comparison. Equality comparisons are useful\n          for fields like ID, but relative comparisons for fields like\n          VERSION_ID or IMAGE_VERSION.\n\n        * hostnamed gained a new Describe() D-Bus method that returns a JSON\n          serialization of the host data it exposes. This is exposed via\n          \"hostnamectl --json=\" to acquire a host identity description in JSON.\n          It's our intention to add a similar features to most services and\n          objects systemd manages, in order to simplify integration with\n          program code that can consume JSON.\n\n        * Similarly, networkd gained a Describe() method on its Manager and\n          Link bus objects. This is exposed via \"networkctl --json=\".\n\n        * hostnamectl's various \"get-xyz\"/\"set-xyz\" verb pairs\n          (e.g. \"hostnamectl get-hostname\", \"hostnamectl \"set-hostname\") have\n          been replaced by a single \"xyz\" verb (e.g. \"hostnamectl hostname\")\n          that is used both to get the value (when no argument is given), and\n          to set the value (when an argument is specified). The old names\n          continue to be supported for compatibility.\n\n        * systemd-detect-virt and ConditionVirtualization= are now able to\n          correctly identify Amazon EC2 environments.\n\n        * The LogLevelMax= setting of unit files now applies not only to log\n          messages generated *by* the service, but also to log messages\n          generated *about* the service by PID 1. To suppress logs concerning a\n          specific service comprehensively, set this option to a high log\n          level.\n\n        * bootctl gained support for a new --make-machine-id-directory= switch\n          that allows precise control on whether to create the top-level\n          per-machine directory in the boot partition that typically contains\n          Type 1 boot loader entries.\n\n        * During build SBAT data to include in the systemd-boot EFI PE binaries\n          may be specified now.\n\n        * /etc/crypttab learnt a new option \"headless\". If specified any\n          requests to query the user interactively for passwords or PINs will\n          be skipped. This is useful on systems that are headless, i.e. where\n          an interactive user is generally not present.\n\n        * /etc/crypttab also learnt a new option \"password-echo=\" that allows\n          configuring whether the encryption password prompt shall echo the\n          typed password and if so, do so literally or via asterisks. (The\n          default is the same behaviour as before: provide echo feedback via\n          asterisks.)\n\n        * FIDO2 support in systemd-cryptenroll/systemd-cryptsetup and\n          systemd-homed has been updated to allow explicit configuration of the\n          \"user presence\" and \"user verification\" checks, as well as whether a\n          PIN is required for authentication, via the new switches\n          --fido2-with-user-presence=, --fido2-with-user-verification=,\n          --fido2-with-client-pin= to systemd-cryptenroll and homectl. Which\n          features are available, and may be enabled or disabled depends on the\n          used FIDO2 token.\n\n        * systemd-nspawn's --private-user= switch now accepts the special value\n          \"identity\" which configures a user namespacing environment with an\n          identity mapping of 65535 UIDs. This means the container UID 0 is\n          mapped to the host UID 0, and the UID 1 to host UID 1. On first look\n          this doesn't appear to be useful, however it does reduce the attack\n          surface a bit, since the resulting container will possess process\n          capabilities only within its namespace and not on the host.\n\n        * systemd-nspawn's --private-user-chown switch has been replaced by a\n          more generic --private-user-ownership= switch that accepts one of\n          three values: \"chown\" is equivalent to the old --private-user-chown,\n          and \"off\" is equivalent to the absence of the old switch. The value\n          \"map\" uses the new UID mapping mounts of Linux 5.12 to map ownership\n          of files and directories of the underlying image to the chosen UID\n          range for the container. \"auto\" is equivalent to \"map\" if UID mapping\n          mount are supported, otherwise it is equivalent to \"chown\". The short\n          -U switch systemd-nspawn now implies --private-user-ownership=auto\n          instead of the old --private-user-chown. Effectively this means: if\n          the backing file system supports UID mapping mounts the feature is\n          now used by default if -U is used. Generally, it's a good idea to use\n          UID mapping mounts instead of recursive chown()ing, since it allows\n          running containers off immutable images (since no modifications of\n          the images need to take place), and share images between multiple\n          instances. Moreover, the recursive chown()ing operation is slow and\n          can be avoided. Conceptually it's also a good thing if transient UID\n          range uses do not leak into persistent file ownership anymore. TLDR:\n          finally, the last major drawback of user namespacing has been\n          removed, and -U should always be used (unless you use btrfs, where\n          UID mapped mounts do not exist; or your container actually needs\n          privileges on the host).\n\n        * nss-systemd now synthesizes user and group shadow records in addition\n          to the main user and group records. Thus, hashed passwords managed by\n          systemd-homed are now accessible via the shadow database.\n\n        * The userdb logic (and thus nss-systemd, and so on) now read\n          additional user/group definitions in JSON format from the drop-in\n          directories /etc/userdb/, /run/userdb/, /run/host/userdb/ and\n          /usr/lib/userdb/. This is a simple and powerful mechanism for making\n          additional users available to the system, with full integration into\n          NSS including the shadow databases. Since the full JSON user/group\n          record format is supported this may also be used to define users with\n          resource management settings and other runtime settings that\n          pam_systemd and systemd-logind enforce at login.\n\n        * The userdbctl tool gained two new switches --with-dropin= and\n          --with-varlink= which can be used to fine-tune the sources used for\n          user database lookups.\n\n        * systemd-nspawn gained a new switch --bind-user= for binding a host\n          user account into the container. This does three things: the user's\n          home directory is bind mounted from the host into the container,\n          below the /run/userdb/home/ hierarchy. A free UID is picked in the\n          container, and a user namespacing UID mapping to the host user's UID\n          installed. And finally, a minimal JSON user and group record (along\n          with its hashed password) is dropped into /run/host/userdb/. These\n          records are picked up automatically by the userdb drop-in logic\n          describe above, and allow the user to login with the same password as\n          on the host. Effectively this means: if host and container run new\n          enough systemd versions making a host user available to the container\n          is trivially simple.\n\n        * systemd-journal-gatewayd now supports the switches --user, --system,\n          --merge, --file= that are equivalent to the same switches of\n          journalctl, and permit exposing only the specified subset of the\n          Journal records.\n\n        * The OnFailure= dependency between units is now augmented with a\n          implicit reverse dependency OnFailureOf= (this new dependency cannot\n          be configured directly it's only created as effect of an OnFailure=\n          dependency in the reverse order ‚Äî it's visible in \"systemctl show\"\n          however). Similar, Slice= now has an reverse dependency SliceOf=,\n          that is also not configurable directly, but useful to determine all\n          units that are members of a slice.\n\n        * A pair of new dependency types between units PropagatesStopTo= +\n          StopPropagatedFrom= has been added, that allows propagation of unit\n          stop events between two units. It operates similar to the existing\n          PropagatesReloadTo= + ReloadPropagatedFrom= dependencies.\n\n        * A new dependency type OnSuccess= has been added (plus the reverse\n          dependency OnSuccessOf=, which cannot be configured directly, but\n          exists only as effect of the reverse OnSuccess=). It is similar to\n          OnFailure=, but triggers in the opposite case: when a service exits\n          cleanly. This allows \"chaining up\" of services where one or more\n          services are started once another service has successfully completed.\n\n        * A new dependency type Upholds= has been added (plus the reverse\n          dependency UpheldBy=, which cannot be configured directly, but exists\n          only as effect of Upholds=). This dependency type is a stronger form\n          of Wants=: if a unit has an UpHolds= dependency on some other unit\n          and the former is active then the latter is started whenever it is\n          found inactive (and no job is queued for it). This is an alternative\n          to Restart= inside service units, but less configurable, and the\n          request to uphold a unit is not encoded in the unit itself but in\n          another unit that intends to uphold it.\n\n        * The systemd-ask-password tool now also supports reading passwords\n          from the credentials subsystem, via the new --credential= switch.\n\n        * The systemd-ask-password tool learnt a new switch --emoji= which may\n          be used to explicit control whether the lock and key emoji (üîê) is\n          shown in the password prompt on suitable TTYs.\n\n        * The --echo switch of systemd-ask-password now optionally takes a\n          parameter that controls character echo. It may either show asterisks\n          (default, as before), turn echo off entirely, or echo the typed\n          characters literally.\n\n        * The systemd-ask-password tool also gained a new -n switch for\n          suppressing output of a trailing newline character when writing the\n          acquired password to standard output, similar to /bin/echo's -n\n          switch.\n\n        * New documentation has been added that describes the organization of\n          the systemd source code tree:\n\n          https://systemd.io/ARCHITECTURE\n\n        * Units using ConditionNeedsUpdate= will no longer be activated in\n          the initrd.\n\n        * It is now possible to list a template unit in the WantedBy= or\n          RequiredBy= settings of the [Install] section of another template\n          unit, which will be instantiated using the same instance name.\n\n        * A new MemoryAvailable property is available for units. If the unit,\n          or the slices it is part of, have a memory limit set via MemoryMax=/\n          MemoryHigh=, MemoryAvailable will indicate how much more memory the\n          unit can claim before hitting the limits.\n\n        * systemd-coredump will now try to stay below the cgroup memory limit\n          placed on itself or one of the slices it runs under, if the storage\n          area for core files (/var/lib/systemd/coredump/) is placed on a tmpfs,\n          since files written on such filesystems count toward the cgroup memory\n          limit. If there is not enough available memory in such cases to store\n          the core file uncompressed, systemd-coredump will skip to compressed\n          storage directly (if enabled) and it will avoid analyzing the core file\n          to print backtrace and metadata in the journal.\n\n        * tmpfiles.d/ drop-ins gained a new '=' modifier to check if the type\n          of a path matches the configured expectations, and remove it if not.\n\n        * tmpfiles.d/'s 'Age' now accepts an 'age-by' argument, which allows to\n          specify which of the several available filesystem timestamps (access\n          time, birth time, change time, modification time) to look at when\n          deciding whether a path has aged enough to be cleaned.\n\n        * A new IPv6StableSecretAddress= setting has been added to .network\n          files, which takes an IPv6 address to use as secret for IPv6 address\n          generation.\n\n        * The [DHCPServer] logic in .network files gained support for a new\n          UplinkInterface= setting that permits configuration of the uplink\n          interface name to propagate DHCP lease information from.\n\n        * The WakeOnLan= setting in .link files now accepts a list of flags\n          instead of a single one, to configure multiple wake-on-LAN policies.\n\n        * User-space defined tracepoints (USDT) have been added to udev at\n          strategic locations. This is useful for tracing udev behaviour and\n          performance with bpftrace and similar tools.\n\n        * systemd-journald-upload gained a new NetworkTimeoutSec= option for\n          setting a network timeout time.\n\n        * If a system service is running in a new mount namespace (RootDirectory=\n          and friends), all file systems will be mounted with MS_NOSUID by\n          default, unless the system is running with SELinux enabled.\n\n        * When enumerating time zones the timedatectl tool will now consult the\n          'tzdata.zi' file shipped by the IANA time zone database package, in\n          addition to 'zone1970.tab', as before. This makes sure time zone\n          aliases are now correctly supported. Some distributions so far did\n          not install this additional file, most do however. If you\n          distribution does not install it yet, it might make sense to change\n          that.\n\n        * Intel HID rfkill event is no longer masked, since it's the only\n          source of rfkill event on newer HP laptops. To have both backward and\n          forward compatibility, userspace daemon needs to debounce duplicated\n          events in a short time window.\n\n        Contributions from: Aakash¬†Singh, adrian5, Albert¬†Brox,\n        Alexander¬†Sverdlin, Alexander¬†Tsoy, Alexey¬†Rubtsov, alexlzhu,\n        Allen¬†Webb, Alvin¬†≈†ipraga, Alyssa¬†Ross, Anders¬†Wenhaug,\n        Andrea¬†Pappacoda, Anita¬†Zhang, asavah, Balint¬†Reczey, Bertrand¬†Jacquin,\n        borna-blazevic, caoxia2008cxx, Carlo¬†Teubner, Christian¬†G√∂ttsche,\n        Christian¬†Hesse, Daniel¬†Schaefer, Dan¬†Streetman,\n        David¬†Santamar√≠a¬†Rogado, David¬†Tardon, Deepak¬†Rawat, dgcampea,\n        Dimitri¬†John¬†Ledkov, ei-ke, Emilio¬†Herrera, Emil¬†Renner¬†Berthing,\n        Eric¬†Cook, Flos¬†Lonicerae, Franck¬†Bui, Francois¬†Gervais,\n        Frantisek¬†Sumsal, Gibeom¬†Gwon, gitm0, Hamish Moffatt, Hans¬†de¬†Goede,\n        Harsh¬†Barsaiyan, Henri¬†Chain, Hristo¬†Venev, Icenowy¬†Zheng, Igor¬†Zhbanov,\n        imayoda, Jakub¬†Warczarek, James¬†Buren, Jan¬†Janssen, Jan¬†Macku,\n        Jan¬†Synacek, Jason¬†Francis, Jayanth¬†Ananthapadmanaban, Jeremy¬†Szu,\n        J√©r√¥me¬†Carretero, Jesse¬†Stricker, jiangchuangang, Joerg¬†Behrmann,\n        J√≥hann¬†B.¬†Gu√∞mundsson, J√∂rg¬†Deckert, J√∂rg¬†Thalheim, Juergen¬†Hoetzel,\n        Julia¬†Kartseva, Kai-Heng¬†Feng, Khem¬†Raj, KoyamaSohei, laineantti,\n        Lennart¬†Poettering, LetzteInstanz, Luca¬†Adrian¬†L, Luca¬†Boccassi,\n        Lucas¬†Magasweran, Mantas¬†Mikulƒónas, Marco¬†Antonio¬†Mauro, Mark¬†Wielaard,\n        Masahiro¬†Matsuya, Matt¬†Johnston, Michael¬†Catanzaro, Michal¬†Koutn√Ω,\n        Michal¬†SekletaÃÅr, Mike¬†Crowe, Mike¬†Kazantsev, Milan, milaq,\n        Miroslav¬†Such√Ω, Morten¬†Linderud, nerdopolis, nl6720, Noah¬†Meyerhans,\n        Oleg¬†Popov, Olle¬†Lundberg, Ondrej¬†Kozina, Pawe≈Ç¬†Marciniak, Perry.Yuan,\n        Peter¬†Hutterer, Peter¬†Kjellerstedt, Peter¬†Morrow, Phaedrus¬†Leeds,\n        plattrap, qhill, Raul¬†Tambre, Roman¬†Beranek, Roshan¬†Shariff,\n        Ryan¬†Hendrickson, Samuel¬†BF, scootergrisen, Sebastian¬†Blunt,\n        Seong-ho¬†Cho, Sergey¬†Bugaev, Sevan¬†Janiyan, Sibo¬†Dong, simmon,\n        Simon¬†Watts, Srinidhi¬†Kaushik, ≈†tƒõp√°n¬†Nƒõmec, Steve¬†Bonds, Susant¬†Sahani,\n        sverdlin, syyhao1994, Takashi¬†Sakamoto, Topi¬†Miettinen, tramsay,\n        Trent¬†Piepho, Uwe¬†Kleine-K√∂nig, Viktor¬†Mihajlovski, Vincent¬†Dechenaux,\n        Vito¬†Caputo, William¬†A.¬†Kennington¬†III, Yangyang¬†Shen, Yegor¬†Alexeyev,\n        Yi¬†Gao, Yu¬†Watanabe, Zbigniew¬†Jƒôdrzejewski-Szmek, zsien, –Ω–∞–±\n\n        ‚Äî Edinburgh, 2021-07-07\n\nCHANGES WITH 248:\n\n        * A concept of system extension images is introduced. Such images may\n          be used to extend the /usr/ and /opt/ directory hierarchies at\n          runtime with additional files (even if the file system is read-only).\n          When a system extension image is activated, its /usr/ and /opt/\n          hierarchies and os-release information are combined via overlayfs\n          with the file system hierarchy of the host OS.\n\n          A new systemd-sysext tool can be used to merge, unmerge, list, and\n          refresh system extension hierarchies. See\n          https://www.freedesktop.org/software/systemd/man/systemd-sysext.html.\n\n          The systemd-sysext.service automatically merges installed system\n          extensions during boot (before basic.target, but not in very early\n          boot, since various file systems have to be mounted first).\n\n          The SYSEXT_LEVEL= field in os-release(5) may be used to specify the\n          supported system extension level.\n\n        * A new ExtensionImages= unit setting can be used to apply the same\n          system extension image concept from systemd-sysext to the namespaced\n          file hierarchy of specific services, following the same rules and\n          constraints.\n\n        * Support for a new special \"root=tmpfs\" kernel command-line option has\n          been added. When specified, a tmpfs is mounted on /, and mount.usr=\n          should be used to point to the operating system implementation.\n\n        * A new configuration file /etc/veritytab may be used to configure\n          dm-verity integrity protection for block devices. Each line is in the\n          format \"volume-name data-device hash-device roothash options\",\n          similar to /etc/crypttab.\n\n        * A new kernel command-line option systemd.verity.root_options= may be\n          used to configure dm-verity behaviour for the root device.\n\n        * The key file specified in /etc/crypttab (the third field) may now\n          refer to an AF_UNIX/SOCK_STREAM socket in the file system. The key is\n          acquired by connecting to that socket and reading from it. This\n          allows the implementation of a service to provide key information\n          dynamically, at the moment when it is needed.\n\n        * When the hostname is set explicitly to \"localhost\", systemd-hostnamed\n          will respect this. Previously such a setting would be mostly silently\n          ignored. The goal is to honour configuration as specified by the\n          user.\n\n        * The fallback hostname that will be used by the system manager and\n          systemd-hostnamed can now be configured in two new ways: by setting\n          DEFAULT_HOSTNAME= in os-release(5), or by setting\n          $SYSTEMD_DEFAULT_HOSTNAME in the environment block. As before, it can\n          also be configured during compilation. The environment variable is\n          intended for testing and local overrides, the os-release(5) field is\n          intended to allow customization by different variants of a\n          distribution that share the same compiled packages.\n\n        * The environment block of the manager itself may be configured through\n          a new ManagerEnvironment= setting in system.conf or user.conf. This\n          complements existing ways to set the environment block (the kernel\n          command line for the system manager, the inherited environment and\n          user@.service unit file settings for the user manager).\n\n        * systemd-hostnamed now exports the default hostname and the source of\n          the configured hostname (\"static\", \"transient\", or \"default\") as\n          D-Bus properties.\n\n        * systemd-hostnamed now exports the \"HardwareVendor\" and\n          \"HardwareModel\" D-Bus properties, which are supposed to contain a\n          pair of cleaned up, human readable strings describing the system's\n          vendor and model. It's typically sourced from the firmware's DMI\n          tables, but may be augmented from a new hwdb database. hostnamectl\n          shows this in the status output.\n\n        * Support has been added to systemd-cryptsetup for extracting the\n          PKCS#11 token URI and encrypted key from the LUKS2 JSON embedded\n          metadata header. This allows the information how to open the\n          encrypted device to be embedded directly in the device and obviates\n          the need for configuration in an external file.\n\n        * systemd-cryptsetup gained support for unlocking LUKS2 volumes using\n          TPM2 hardware, as well as FIDO2 security tokens (in addition to the\n          pre-existing support for PKCS#11 security tokens).\n\n        * systemd-repart may enroll encrypted partitions using TPM2\n          hardware. This may be useful for example to create an encrypted /var\n          partition bound to the machine on first boot.\n\n        * A new systemd-cryptenroll tool has been added to enroll TPM2, FIDO2\n          and PKCS#11 security tokens to LUKS volumes, list and destroy\n          them. See:\n\n          https://0pointer.net/blog/unlocking-luks2-volumes-with-tpm2-fido2-pkcs11-security-hardware-on-systemd-248.html\n\n          It also supports enrolling \"recovery keys\" and regular passphrases.\n\n        * The libfido2 dependency is now based on dlopen(), so that the library\n          is used at runtime when installed, but is not a hard runtime\n          dependency.\n\n        * systemd-cryptsetup gained support for two new options in\n          /etc/crypttab: \"no-write-workqueue\" and \"no-read-workqueue\" which\n          request synchronous processing of encryption/decryption IO.\n\n        * The manager may be configured at compile time to use the fexecve()\n          instead of the execve() system call when spawning processes. Using\n          fexecve() closes a window between checking the security context of an\n          executable and spawning it, but unfortunately the kernel displays\n          stale information in the process' \"comm\" field, which impacts ps\n          output and such.\n\n        * The configuration option -Dcompat-gateway-hostname has been dropped.\n          \"_gateway\" is now the only supported name.\n\n        * The ConditionSecurity=tpm2 unit file setting may be used to check if\n          the system has at least one TPM2 (tpmrm class) device.\n\n        * A new ConditionCPUFeature= has been added that may be used to\n          conditionalize units based on CPU features. For example,\n          ConditionCPUFeature=rdrand will condition a unit so that it is only\n          run when the system CPU supports the RDRAND opcode.\n\n        * The existing ConditionControlGroupController= setting has been\n          extended with two new values \"v1\" and \"v2\". \"v2\" means that the\n          unified v2 cgroup hierarchy is used, and \"v1\" means that legacy v1\n          hierarchy or the hybrid hierarchy are used.\n\n        * A new PrivateIPC= setting on a unit file allows executed processes to\n          be moved into a private IPC namespace, with separate System V IPC\n          identifiers and POSIX message queues.\n\n          A new IPCNamespacePath= allows the unit to be joined to an existing\n          IPC namespace.\n\n        * The tables of system calls in seccomp filters are now automatically\n          generated from kernel lists exported on\n          https://fedora.juszkiewicz.com.pl/syscalls.html.\n\n          The following architectures should now have complete lists:\n          alpha, arc, arm64, arm, i386, ia64, m68k, mips64n32, mips64, mipso32,\n          powerpc, powerpc64, s390, s390x, tilegx, sparc, x86_64, x32.\n\n        * The MountAPIVFS= service file setting now additionally mounts a tmpfs\n          on /run/ if it is not already a mount point. A writable /run/ has\n          always been a requirement for a functioning system, but this was not\n          guaranteed when using a read-only image.\n\n          Users can always specify BindPaths= or InaccessiblePaths= as\n          overrides, and they will take precedence. If the host's root mount\n          point is used, there is no change in behaviour.\n\n        * New bind mounts and file system image mounts may be injected into the\n          mount namespace of a service (without restarting it). This is exposed\n          respectively as 'systemctl bind <unit> <path>‚Ä¶' and\n          'systemctl mount-image <unit> <image>‚Ä¶'.\n\n        * The StandardOutput= and StandardError= settings can now specify files\n          to be truncated for output (as \"truncate:<path>\").\n\n        * The ExecPaths= and NoExecPaths= settings may be used to specify\n          noexec for parts of the file system.\n\n        * sd-bus has a new function sd_bus_open_user_machine() to open a\n          connection to the session bus of a specific user in a local container\n          or on the local host. This is exposed in the existing -M switch to\n          systemctl and similar tools:\n\n              systemctl --user -M lennart@foobar start foo\n\n          This will connect to the user bus of a user \"lennart\" in container\n          \"foobar\". If no container name is specified, the specified user on\n          the host itself is connected to\n\n              systemctl --user -M lennart@ start quux\n\n        * sd-bus also gained a convenience function sd_bus_message_send() to\n          simplify invocations of sd_bus_send(), taking only a single\n          parameter: the message to send.\n\n        * sd-event allows rate limits to be set on event sources, for dealing\n          with high-priority event sources that might starve out others. See\n          the new man page sd_event_source_set_ratelimit(3) for details.\n\n        * systemd.link files gained a [Link] Promiscuous= switch, which allows\n          the device to be raised in promiscuous mode.\n\n          New [Link] TransmitQueues= and ReceiveQueues= settings allow the\n          number of TX and RX queues to be configured.\n\n          New [Link] TransmitQueueLength= setting allows the size of the TX\n          queue to be configured.\n\n          New [Link] GenericSegmentOffloadMaxBytes= and\n          GenericSegmentOffloadMaxSegments= allow capping the packet size and\n          the number of segments accepted in Generic Segment Offload.\n\n        * systemd-networkd gained support for the \"B.A.T.M.A.N. advanced\"\n          wireless routing protocol that operates on ISO/OSI Layer 2 only and\n          uses ethernet frames to route/bridge packets. This encompasses a new\n          \"batadv\" netdev Type=, a new [BatmanAdvanced] section with a bunch of\n          new settings in .netdev files, and a new BatmanAdvanced= setting in\n          .network files.\n\n        * systemd.network files gained a [Network] RouteTable= configuration\n          switch to select the routing policy table.\n\n          systemd.network files gained a [RoutingPolicyRule] Type=\n          configuration switch (one of \"blackhole, \"unreachable\", \"prohibit\").\n\n          systemd.network files gained a [IPv6AcceptRA] RouteDenyList= and\n          RouteAllowList= settings to ignore/accept route advertisements from\n          routers matching specified prefixes. The DenyList= setting has been\n          renamed to PrefixDenyList= and a new PrefixAllowList= option has been\n          added.\n\n          systemd.network files gained a [DHCPv6] UseAddress= setting to\n          optionally ignore the address provided in the lease.\n\n          systemd.network files gained a [DHCPv6PrefixDelegation]\n          ManageTemporaryAddress= switch.\n\n          systemd.network files gained a new ActivationPolicy= setting which\n          allows configuring how the UP state of an interface shall be managed,\n          i.e. whether the interface is always upped, always downed, or may be\n          upped/downed by the user using \"ip link set dev\".\n\n        * The default for the Broadcast= setting in .network files has slightly\n          changed: the broadcast address will not be configured for wireguard\n          devices.\n\n        * systemd.netdev files gained a [VLAN] Protocol=, IngressQOSMaps=,\n          EgressQOSMaps=, and [MACVLAN] BroadcastMulticastQueueLength=\n          configuration options for VLAN packet handling.\n\n        * udev rules may now set log_level= option. This allows debug logs to\n          be enabled for select events, e.g. just for a specific subsystem or\n          even a single device.\n\n        * udev now exports the VOLUME_ID, LOGICAL_VOLUME_ID, VOLUME_SET_ID, and\n          DATA_PREPARED_ID properties for block devices with ISO9660 file\n          systems.\n\n        * udev now exports decoded DMI information about installed memory slots\n          as device properties under the /sys/class/dmi/id/ pseudo device.\n\n        * /dev/ is not mounted noexec anymore. This didn't provide any\n          significant security benefits and would conflict with the executable\n          mappings used with /dev/sgx device nodes. The previous behaviour can\n          be restored for individual services with NoExecPaths=/dev (or by allow-\n          listing and excluding /dev from ExecPaths=).\n\n        * Permissions for /dev/vsock are now set to 0o666, and /dev/vhost-vsock\n          and /dev/vhost-net are owned by the kvm group.\n\n        * The hardware database has been extended with a list of fingerprint\n          readers that correctly support USB auto-suspend using data from\n          libfprint.\n\n        * systemd-resolved can now answer DNSSEC questions through the stub\n          resolver interface in a way that allows local clients to do DNSSEC\n          validation themselves. For a question with DO+CD set, it'll proxy the\n          DNS query and respond with a mostly unmodified packet received from\n          the upstream server.\n\n        * systemd-resolved learnt a new boolean option CacheFromLocalhost= in\n          resolved.conf. If true the service will provide caching even for DNS\n          lookups made to an upstream DNS server on the 127.0.0.1/::1\n          addresses. By default (and when the option is false) systemd-resolved\n          will not cache such lookups, in order to avoid duplicate local\n          caching, under the assumption the local upstream server caches\n          anyway.\n\n        * systemd-resolved now implements RFC5001 NSID in its local DNS\n          stub. This may be used by local clients to determine whether they are\n          talking to the DNS resolver stub or a different DNS server.\n\n        * When resolving host names and other records resolvectl will now\n          report where the data was acquired from (i.e. the local cache, the\n          network, locally synthesized, ‚Ä¶) and whether the network traffic it\n          effected was encrypted or not. Moreover the tool acquired a number of\n          new options --cache=, --synthesize=, --network=, --zone=,\n          --trust-anchor=, --validate= that take booleans and may be used to\n          tweak a lookup, i.e. whether it may be answered from cached\n          information, locally synthesized information, information acquired\n          through the network, the local mDNS/LLMNR zone, the DNSSEC trust\n          anchor, and whether DNSSEC validation shall be executed for the\n          lookup.\n\n        * systemd-nspawn gained a new --ambient-capability= setting\n          (AmbientCapability= in .nspawn files) to configure ambient\n          capabilities passed to the container payload.\n\n        * systemd-nspawn gained the ability to configure the firewall using the\n          nftables subsystem (in addition to the existing iptables support).\n          Similarly, systemd-networkd's IPMasquerade= option now supports\n          nftables as back-end, too. In both cases NAT on IPv6 is now supported\n          too, in addition to IPv4 (the iptables back-end still is IPv4-only).\n\n          \"IPMasquerade=yes\", which was the same as \"IPMasquerade=ipv4\" before,\n          retains its meaning, but has been deprecated. Please switch to either\n          \"ivp4\" or \"both\" (if covering IPv6 is desired).\n\n        * systemd-importd will now download .verity and .roothash.p7s files\n          along with the machine image (as exposed via machinectl pull-raw).\n\n        * systemd-oomd now gained a new DefaultMemoryPressureDurationSec=\n          setting to configure the time a unit's cgroup needs to exceed memory\n          pressure limits before action will be taken, and a new\n          ManagedOOMPreference=none|avoid|omit setting to avoid killing certain\n          units.\n\n          systemd-oomd is now considered fully supported (the usual\n          backwards-compatibility promises apply). Swap is not required for\n          operation, but it is still recommended.\n\n        * systemd-timesyncd gained a new ConnectionRetrySec= setting which\n          configures the retry delay when trying to contact servers.\n\n        * systemd-stdio-bridge gained --system/--user options to connect to the\n          system bus (previous default) or the user session bus.\n\n        * systemd-localed may now call locale-gen to generate missing locales\n          on-demand (UTF-8-only). This improves integration with Debian-based\n          distributions (Debian/Ubuntu/PureOS/Tanglu/...) and Arch Linux.\n\n        * systemctl --check-inhibitors=true may now be used to obey inhibitors\n          even when invoked non-interactively. The old --ignore-inhibitors\n          switch is now deprecated and replaced by --check-inhibitors=false.\n\n        * systemctl import-environment will now emit a warning when called\n          without any arguments (i.e. to import the full environment block of\n          the called program). This command will usually be invoked from a\n          shell, which means that it'll inherit a bunch of variables which are\n          specific to that shell, and usually to the TTY the shell is connected\n          to, and don't have any meaning in the global context of the system or\n          user service manager. Instead, only specific variables should be\n          imported into the manager environment block.\n\n          Similarly, programs which update the manager environment block by\n          directly calling the D-Bus API of the manager, should also push\n          specific variables, and not the full inherited environment.\n\n        * systemctl's status output now shows unit state with a more careful\n          choice of Unicode characters: units in maintenance show a \"‚óã\" symbol\n          instead of the usual \"‚óè\", failed units show \"√ó\", and services being\n          reloaded \"‚Üª\".\n\n        * coredumpctl gained a --debugger-arguments= switch to pass arguments\n          to the debugger. It also gained support for showing coredump info in\n          a simple JSON format.\n\n        * systemctl/loginctl/machinectl's --signal= option now accept a special\n          value \"list\", which may be used to show a brief table with known\n          process signals and their numbers.\n\n        * networkctl now shows the link activation policy in status.\n\n        * Various tools gained --pager/--no-pager/--json= switches to\n          enable/disable the pager and provide JSON output.\n\n        * Various tools now accept two new values for the SYSTEMD_COLORS\n          environment variable: \"16\" and \"256\", to configure how many terminal\n          colors are used in output.\n\n        * less 568 or newer is now required for the auto-paging logic of the\n          various tools. Hyperlink ANSI sequences in terminal output are now\n          used even if a pager is used, and older versions of less are not able\n          to display these sequences correctly. SYSTEMD_URLIFY=0 may be used to\n          disable this output again.\n\n        * Builds with support for separate / and /usr/ hierarchies (\"split-usr\"\n          builds, non-merged-usr builds) are now officially deprecated. A\n          warning is emitted during build. Support is slated to be removed in\n          about a year (when the Debian Bookworm release development starts).\n\n        * Systems with the legacy cgroup v1 hierarchy are now marked as\n          \"tainted\", to make it clearer that using the legacy hierarchy is not\n          recommended.\n\n        * systemd-localed will now refuse to configure a keymap which is not\n          installed in the file system. This is intended as a bug fix, but\n          could break cases where systemd-localed was used to configure the\n          keymap in advanced of it being installed. It is necessary to install\n          the keymap file first.\n\n        * The main git development branch has been renamed to 'main'.\n\n        * mmcblk[0-9]boot[0-9] devices will no longer be probed automatically\n          for partitions, as in the vast majority of cases they contain none\n          and are used internally by the bootloader (eg: uboot).\n\n        * systemd will now set the $SYSTEMD_EXEC_PID environment variable for\n          spawned processes to the PID of the process itself. This may be used\n          by programs for detecting whether they were forked off by the service\n          manager itself or are a process forked off further down the tree.\n\n        * The sd-device API gained four new calls: sd_device_get_action() to\n          determine the uevent add/remove/change/‚Ä¶ action the device object has\n          been seen for, sd_device_get_seqno() to determine the uevent sequence\n          number, sd_device_new_from_stat_rdev() to allocate a new sd_device\n          object from stat(2) data of a device node, and sd_device_trigger() to\n          write to the 'uevent' attribute of a device.\n\n        * For most tools the --no-legend= switch has been replaced by\n          --legend=no and --legend=yes, to force whether tables are shown with\n          headers/legends.\n\n        * Units acquired a new property \"Markers\" that takes a list of zero,\n          one or two of the following strings: \"needs-reload\" and\n          \"needs-restart\". These markers may be set via \"systemctl\n          set-property\". Once a marker is set, \"systemctl reload-or-restart\n          --marked\" may be invoked to execute the operation the units are\n          marked for. This is useful for package managers that want to mark\n          units for restart/reload while updating, but effect the actual\n          operations at a later step at once.\n\n        * The sd_bus_message_read_strv() API call of sd-bus may now also be\n          used to parse arrays of D-Bus signatures and D-Bus paths, in addition\n          to regular strings.\n\n        * bootctl will now report whether the UEFI firmware used a TPM2 device\n          and measured the boot process into it.\n\n        * systemd-tmpfiles learnt support for a new environment variable\n          $SYSTEMD_TMPFILES_FORCE_SUBVOL which takes a boolean value. If true\n          the v/q/Q lines in tmpfiles.d/ snippets will create btrfs subvolumes\n          even if the root fs of the system is not itself a btrfs volume.\n\n        * systemd-detect-virt/ConditionVirtualization= will now explicitly\n          detect Docker/Podman environments where possible. Moreover, they\n          should be able to generically detect any container manager as long as\n          it assigns the container a cgroup.\n\n        * portablectl gained a new \"reattach\" verb for detaching/reattaching a\n          portable service image, useful for updating images on-the-fly.\n\n        * Intel SGX enclave device nodes (which expose a security feature of\n          newer Intel CPUs) will now be owned by a new system group \"sgx\".\n\n        Contributions from: Adam¬†Nielsen, Adrian¬†Vovk, AJ¬†Jordan, Alan¬†Perry,\n        Alastair¬†Pharo, Alexander¬†Batischev, Ali¬†Abdallah, Andrew¬†Balmos,\n        Anita¬†Zhang, Annika¬†Wickert, Ansgar¬†Burchardt, Antonio¬†Terceiro,\n        Antonius¬†Frie, Ardy, Arian¬†van¬†Putten, Ariel¬†Fermani, Arnaud¬†T,\n        A¬†S¬†Alam, Bastien¬†Nocera, Benjamin¬†Berg, Benjamin¬†Robin, Bj√∂rn¬†Daase,\n        caoxia, Carlo¬†Wood, Charles¬†Lee, ChopperRob, chri2, Christian¬†Ehrhardt,\n        Christian¬†Hesse, Christopher¬†Obbard, clayton¬†craft, corvusnix, cprn,\n        Daan¬†De¬†Meyer, Daniele¬†Medri, Daniel¬†Rusek, Dan¬†Sanders, Dan¬†Streetman,\n        Darren¬†Ng, David¬†Edmundson, David¬†Tardon, Deepak¬†Rawat, Devon¬†Pringle,\n        Dmitry¬†Borodaenko, dropsignal, Einsler¬†Lee, Endre¬†Szabo,\n        Evgeny¬†Vereshchagin, Fabian¬†Affolter, Fangrui¬†Song, Felipe¬†Borges,\n        feliperodriguesfr, Felix¬†Stupp, Florian¬†H√ºlsmann, Florian¬†Klink,\n        Florian¬†Westphal, Franck¬†Bui, Frantisek¬†Sumsal, Gablegritule,\n        Ga√´l¬†PORTAY, Gaurav, Giedrius¬†Statkeviƒçius, Greg¬†Depoire-Ferrer,\n        Gustavo¬†Costa, Hans¬†de¬†Goede, Hela¬†Basa, heretoenhance, hide,\n        Iago¬†L√≥pez¬†Galeiras, igo95862, Ilya¬†Dmitrichenko, Jameer¬†Pathan,\n        Jan¬†Tojnar, Jiehong, Jinyuan¬†Si, Joerg¬†Behrmann, John¬†Slade,\n        Jonathan¬†G.¬†Underwood, Jonathan¬†McDowell, Josh¬†Triplett, Joshua¬†Watt,\n        Julia¬†Cartwright, Julien¬†Humbert, Kairui¬†Song, Karel¬†Zak,\n        Kevin¬†Backhouse, Kevin¬†P.¬†Fleming, Khem¬†Raj, Konomi, krissgjeng,\n        l4gfcm, Lajos¬†Veres, Lennart¬†Poettering, Lincoln¬†Ramsay, Luca¬†Boccassi,\n        Luca¬†BRUNO, Lucas¬†Werkmeister, Luka¬†Kudra, Luna¬†Jernberg,\n        Marc-Andr√©¬†Lureau, Martin¬†Wilck, Matthias¬†Klumpp, Matt¬†Turner,\n        Michael¬†Gisbers, Michael¬†Marley, Michael¬†Trapp, Michal¬†Fabik,\n        Micha≈Ç¬†Kopeƒá, Michal¬†Koutn√Ω, Michal¬†SekletaÃÅr, Michele¬†Guerini¬†Rocco,\n        Mike¬†Gilbert, milovlad, moson-mo, Nick, nihilix-melix, Oƒüuz¬†Ersen,\n        Ondrej¬†Mosnacek, pali, Pavel¬†Hrdina, Pavel¬†Sapezhko, Perry¬†Yuan,\n        Peter¬†Hutterer, Pierre¬†Dubouilh, Piotr¬†DrƒÖg, Pjotr¬†Vertaalt,\n        Richard¬†Laager, RussianNeuroMancer, Sam¬†Lunt, Sebastiaan¬†van¬†Stijn,\n        Sergey¬†Bugaev, shenyangyang4, simmon, Simonas¬†Kazlauskas,\n        Slimane¬†Selyan¬†Amiri, Stefan¬†Agner, Steve¬†Ramage, Susant¬†Sahani,\n        Sven¬†Mueller, Tad¬†Fisher, Takashi¬†Iwai, Thomas¬†Haller, Tom¬†Shield,\n        Topi¬†Miettinen, Torsten¬†Hilbrich, tpgxyz, Tyler¬†Hicks, ulf-f,\n        Ulrich¬†√ñlmann, Vincent¬†Pelletier, Vinnie¬†Magro, Vito¬†Caputo, Vlad,\n        walbit-de, Whired¬†Planck, wouter¬†bolsterlee, X‚Ñπ¬†Ruoyao, Yangyang¬†Shen,\n        Yuri¬†Chornoivan, Yu¬†Watanabe, Zach¬†Smith, Zbigniew¬†Jƒôdrzejewski-Szmek,\n        Zmicer¬†Turok, –î–∞–º—ò–∞–Ω¬†–ì–µ–æ—Ä–≥–∏–µ–≤—Å–∫–∏\n\n        ‚Äî Berlin, 2021-03-30\n\nCHANGES WITH 247:\n\n        * KERNEL API INCOMPATIBILITY: Linux 4.14 introduced two new uevents\n          \"bind\" and \"unbind\" to the Linux device model. When this kernel\n          change was made, systemd-udevd was only minimally updated to handle\n          and propagate these new event types. The introduction of these new\n          uevents (which are typically generated for USB devices and devices\n          needing a firmware upload before being functional) resulted in a\n          number of issues which we so far didn't address. We hoped the kernel\n          maintainers would themselves address these issues in some form, but\n          that did not happen. To handle them properly, many (if not most) udev\n          rules files shipped in various packages need updating, and so do many\n          programs that monitor or enumerate devices with libudev or sd-device,\n          or otherwise process uevents. Please note that this incompatibility\n          is not fault of systemd or udev, but caused by an incompatible kernel\n          change that happened back in Linux 4.14, but is becoming more and\n          more visible as the new uevents are generated by more kernel drivers.\n\n          To minimize issues resulting from this kernel change (but not avoid\n          them entirely) starting with systemd-udevd 247 the udev \"tags\"\n          concept (which is a concept for marking and filtering devices during\n          enumeration and monitoring) has been reworked: udev tags are now\n          \"sticky\", meaning that once a tag is assigned to a device it will not\n          be removed from the device again until the device itself is removed\n          (i.e. unplugged). This makes sure that any application monitoring\n          devices that match a specific tag is guaranteed to both see uevents\n          where the device starts being relevant, and those where it stops\n          being relevant (the latter now regularly happening due to the new\n          \"unbind\" uevent type). The udev tags concept is hence now a concept\n          tied to a *device* instead of a device *event* ‚Äî unlike for example\n          udev properties whose lifecycle (as before) is generally tied to a\n          device event, meaning that the previously determined properties are\n          forgotten whenever a new uevent is processed.\n\n          With the newly redefined udev tags concept, sometimes it's necessary\n          to determine which tags are the ones applied by the most recent\n          uevent/database update, in order to discern them from those\n          originating from earlier uevents/database updates of the same\n          device. To accommodate for this a new automatic property CURRENT_TAGS\n          has been added that works similar to the existing TAGS property but\n          only lists tags set by the most recent uevent/database\n          update. Similarly, the libudev/sd-device API has been updated with\n          new functions to enumerate these 'current' tags, in addition to the\n          existing APIs that now enumerate the 'sticky' ones.\n\n          To properly handle \"bind\"/\"unbind\" on Linux 4.14 and newer it is\n          essential that all udev rules files and applications are updated to\n          handle the new events. Specifically:\n\n          ‚Ä¢ All rule files that currently use a header guard similar to\n            ACTION!=\"add|change\",GOTO=\"xyz_end\" should be updated to use\n            ACTION==\"remove\",GOTO=\"xyz_end\" instead, so that the\n            properties/tags they add are also applied whenever \"bind\" (or\n            \"unbind\") is seen. (This is most important for all physical device\n            types ‚Äî those for which \"bind\" and \"unbind\" are currently\n            generated, for all other device types this change is still\n            recommended but not as important ‚Äî but certainly prepares for\n            future kernel uevent type additions).\n\n          ‚Ä¢ Similarly, all code monitoring devices that contains an 'if' branch\n            discerning the \"add\" + \"change\" uevent actions from all other\n            uevents actions (i.e. considering devices only relevant after \"add\"\n            or \"change\", and irrelevant on all other events) should be reworked\n            to instead negatively check for \"remove\" only (i.e. considering\n            devices relevant after all event types, except for \"remove\", which\n            invalidates the device). Note that this also means that devices\n            should be considered relevant on \"unbind\", even though conceptually\n            this ‚Äî in some form ‚Äî invalidates the device. Since the precise\n            effect of \"unbind\" is not generically defined, devices should be\n            considered relevant even after \"unbind\", however I/O errors\n            accessing the device should then be handled gracefully.\n\n          ‚Ä¢ Any code that uses device tags for deciding whether a device is\n            relevant or not most likely needs to be updated to use the new\n            udev_device_has_current_tag() API (or sd_device_has_current_tag()\n            in case sd-device is used), to check whether the tag is set at the\n            moment an uevent is seen (as opposed to the existing\n            udev_device_has_tag() API which checks if the tag ever existed on\n            the device, following the API concept redefinition explained\n            above).\n\n          We are very sorry for this breakage and the requirement to update\n          packages using these interfaces. We'd again like to underline that\n          this is not caused by systemd/udev changes, but result of a kernel\n          behaviour change.\n\n        * UPCOMING INCOMPATIBILITY: So far most downstream distribution\n          packages have not retriggered devices once the udev package (or any\n          auxiliary package installing additional udev rules) is updated. We\n          intend to work with major distributions to change this, so that\n          \"udevadm trigger -c change\" is issued on such upgrades, ensuring that\n          the updated ruleset is applied to the devices already discovered, so\n          that (asynchronously) after the upgrade completed the udev database\n          is consistent with the updated rule set. This means udev rules must\n          be ready to be retriggered with a \"change\" action any time, and\n          result in correct and complete udev database entries. While the\n          majority of udev rule files known to us currently get this right,\n          some don't. Specifically, there are udev rules files included in\n          various packages that only set udev properties on the \"add\" action,\n          but do not handle the \"change\" action. If a device matching those\n          rules is retriggered with the \"change\" action (as is intended here)\n          it would suddenly lose the relevant properties. This always has been\n          problematic, but as soon as all udev devices are triggered on relevant\n          package upgrades this will become particularly so. It is strongly\n          recommended to fix offending rules so that they can handle a \"change\"\n          action at any time, and acquire all necessary udev properties even\n          then. Or in other words: the header guard mentioned above\n          (ACTION==\"remove\",GOTO=\"xyz_end\") is the correct approach to handle\n          this, as it makes sure rules are rerun on \"change\" correctly, and\n          accumulate the correct and complete set of udev properties. udev rule\n          definitions that cannot handle \"change\" events being triggered at\n          arbitrary times should be considered buggy.\n\n        * The MountAPIVFS= service file setting now defaults to on if\n          RootImage= and RootDirectory= are used, which means that with those\n          two settings /proc/, /sys/ and /dev/ are automatically properly set\n          up for services. Previous behaviour may be restored by explicitly\n          setting MountAPIVFS=off.\n\n        * Since PAM 1.2.0 (2015) configuration snippets may be placed in\n          /usr/lib/pam.d/ in addition to /etc/pam.d/. If a file exists in the\n          latter it takes precedence over the former, similar to how most of\n          systemd's own configuration is handled. Given that PAM stack\n          definitions are primarily put together by OS vendors/distributions\n          (though possibly overridden by users), this systemd release moves its\n          own PAM stack configuration for the \"systemd-user\" PAM service (i.e.\n          for the PAM session invoked by the per-user user@.service instance)\n          from /etc/pam.d/ to /usr/lib/pam.d/. We recommend moving all\n          packages' vendor versions of their PAM stack definitions from\n          /etc/pam.d/ to /usr/lib/pam.d/, but if such OS-wide migration is not\n          desired the location to which systemd installs its PAM stack\n          configuration may be changed via the -Dpamconfdir Meson option.\n\n        * The runtime dependencies on libqrencode, libpcre2, libidn/libidn2,\n          libpwquality and libcryptsetup have been changed to be based on\n          dlopen(): instead of regular dynamic library dependencies declared in\n          the binary ELF headers, these libraries are now loaded on demand\n          only, if they are available. If the libraries cannot be found the\n          relevant operations will fail gracefully, or a suitable fallback\n          logic is chosen. This is supposed to be useful for general purpose\n          distributions, as it allows minimizing the list of dependencies the\n          systemd packages pull in, permitting building of more minimal OS\n          images, while still making use of these \"weak\" dependencies should\n          they be installed. Since many package managers automatically\n          synthesize package dependencies from ELF shared library dependencies,\n          some additional manual packaging work has to be done now to replace\n          those (slightly downgraded from \"required\" to \"recommended\" or\n          whatever is conceptually suitable for the package manager). Note that\n          this change does not alter build-time behaviour: as before the\n          build-time dependencies have to be installed during build, even if\n          they now are optional during runtime.\n\n        * sd-event.h gained a new call sd_event_add_time_relative() for\n          installing timers relative to the current time. This is mostly a\n          convenience wrapper around the pre-existing sd_event_add_time() call\n          which installs absolute timers.\n\n        * sd-event event sources may now be placed in a new \"exit-on-failure\"\n          mode, which may be controlled via the new\n          sd_event_source_get_exit_on_failure() and\n          sd_event_source_set_exit_on_failure() functions. If enabled, any\n          failure returned by the event source handler functions will result in\n          exiting the event loop (unlike the default behaviour of just\n          disabling the event source but continuing with the event loop). This\n          feature is useful to set for all event sources that define \"primary\"\n          program behaviour (where failure should be fatal) in contrast to\n          \"auxiliary\" behaviour (where failure should remain local).\n\n        * Most event source types sd-event supports now accept a NULL handler\n          function, in which case the event loop is exited once the event\n          source is to be dispatched, using the userdata pointer ‚Äî converted to\n          a signed integer ‚Äî as exit code of the event loop. Previously this\n          was supported for IO and signal event sources already. Exit event\n          sources still do not support this (simply because it makes little\n          sense there, as the event loop is already exiting when they are\n          dispatched).\n\n        * A new per-unit setting RootImageOptions= has been added which allows\n          tweaking the mount options for any file system mounted as effect of\n          the RootImage= setting.\n\n        * Another new per-unit setting MountImages= has been added, that allows\n          mounting additional disk images into the file system tree accessible\n          to the service.\n\n        * Timer units gained a new FixedRandomDelay= boolean setting. If\n          enabled, the random delay configured with RandomizedDelaySec= is\n          selected in a way that is stable on a given system (though still\n          different for different units).\n\n        * Socket units gained a new setting Timestamping= that takes \"us\", \"ns\"\n          or \"off\". This controls the SO_TIMESTAMP/SO_TIMESTAMPNS socket\n          options.\n\n        * systemd-repart now generates JSON output when requested with the new\n          --json= switch.\n\n        * systemd-machined's OpenMachineShell() bus call will now pass\n          additional policy metadata data fields to the PolicyKit\n          authentication request.\n\n        * systemd-tmpfiles gained a new -E switch, which is equivalent to\n          --exclude-prefix=/dev --exclude-prefix=/proc --exclude=/run\n          --exclude=/sys. It's particularly useful in combination with --root=,\n          when operating on OS trees that do not have any of these four runtime\n          directories mounted, as this means no files below these subtrees are\n          created or modified, since those mount points should probably remain\n          empty.\n\n        * systemd-tmpfiles gained a new --image= switch which is like --root=,\n          but takes a disk image instead of a directory as argument. The\n          specified disk image is mounted inside a temporary mount namespace\n          and the tmpfiles.d/ drop-ins stored in the image are executed and\n          applied to the image. systemd-sysusers similarly gained a new\n          --image= switch, that allows the sysusers.d/ drop-ins stored in the\n          image to be applied onto the image.\n\n        * Similarly, the journalctl command also gained an --image= switch,\n          which is a quick one-step solution to look at the log data included\n          in OS disk images.\n\n        * journalctl's --output=cat option (which outputs the log content\n          without any metadata, just the pure text messages) will now make use\n          of terminal colors when run on a suitable terminal, similarly to the\n          other output modes.\n\n        * JSON group records now support a \"description\" string that may be\n          used to add a human-readable textual description to such groups. This\n          is supposed to match the user's GECOS field which traditionally\n          didn't have a counterpart for group records.\n\n        * The \"systemd-dissect\" tool that may be used to inspect OS disk images\n          and that was previously installed to /usr/lib/systemd/ has now been\n          moved to /usr/bin/, reflecting its updated status of an officially\n          supported tool with a stable interface. It gained support for a new\n          --mkdir switch which when combined with --mount has the effect of\n          creating the directory to mount the image to if it is missing\n          first. It also gained two new commands --copy-from and --copy-to for\n          copying files and directories in and out of an OS image without the\n          need to manually mount it. It also acquired support for a new option\n          --json= to generate JSON output when inspecting an OS image.\n\n        * The cgroup2 file system is now mounted with the\n          \"memory_recursiveprot\" mount option, supported since kernel 5.7. This\n          means that the MemoryLow= and MemoryMin= unit file settings now apply\n          recursively to whole subtrees.\n\n        * systemd-homed now defaults to using the btrfs file system ‚Äî if\n          available ‚Äî when creating home directories in LUKS volumes. This may\n          be changed with the DefaultFileSystemType= setting in homed.conf.\n          It's now the default file system in various major distributions and\n          has the major benefit for homed that it can be grown and shrunk while\n          mounted, unlike the other contenders ext4 and xfs, which can both be\n          grown online, but not shrunk (in fact xfs is the technically most\n          limited option here, as it cannot be shrunk at all).\n\n        * JSON user records managed by systemd-homed gained support for\n          \"recovery keys\". These are basically secondary passphrases that can\n          unlock user accounts/home directories. They are computer-generated\n          rather than user-chosen, and typically have greater entropy.\n          homectl's --recovery-key= option may be used to add a recovery key to\n          a user account. The generated recovery key is displayed as a QR code,\n          so that it can be scanned to be kept in a safe place. This feature is\n          particularly useful in combination with systemd-homed's support for\n          FIDO2 or PKCS#11 authentication, as a secure fallback in case the\n          security tokens are lost. Recovery keys may be entered wherever the\n          system asks for a password.\n\n        * systemd-homed now maintains a \"dirty\" flag for each LUKS encrypted\n          home directory which indicates that a home directory has not been\n          deactivated cleanly when offline. This flag is useful to identify\n          home directories for which the offline discard logic did not run when\n          offlining, and where it would be a good idea to log in again to catch\n          up.\n\n        * systemctl gained a new parameter --timestamp= which may be used to\n          change the style in which timestamps are output, i.e. whether to show\n          them in local timezone or UTC, or whether to show ¬µs granularity.\n\n        * Alibaba's \"pouch\" container manager is now detected by\n          systemd-detect-virt, ConditionVirtualization= and similar\n          constructs. Similar, they now also recognize IBM PowerVM machine\n          virtualization.\n\n        * systemd-nspawn has been reworked to use the /run/host/incoming/ as\n          place to use for propagating external mounts into the\n          container. Similarly /run/host/notify is now used as the socket path\n          for container payloads to communicate with the container manager\n          using sd_notify(). The container manager now uses the\n          /run/host/inaccessible/ directory to place \"inaccessible\" file nodes\n          of all relevant types which may be used by the container payload as\n          bind mount source to over-mount inodes to make them inaccessible.\n          /run/host/container-manager will now be initialized with the same\n          string as the $container environment variable passed to the\n          container's PID 1. /run/host/container-uuid will be initialized with\n          the same string as $container_uuid. This means the /run/host/\n          hierarchy is now the primary way to make host resources available to\n          the container. The Container Interface documents these new files and\n          directories:\n\n          https://systemd.io/CONTAINER_INTERFACE\n\n        * Support for the \"ConditionNull=\" unit file condition has been\n          deprecated and undocumented for 6 years. systemd started to warn\n          about its use 1.5 years ago. It has now been removed entirely.\n\n        * sd-bus.h gained a new API call sd_bus_error_has_names(), which takes\n          a sd_bus_error struct and a list of error names, and checks if the\n          error matches one of these names. It's a convenience wrapper that is\n          useful in cases where multiple errors shall be handled the same way.\n\n        * A new system call filter list \"@known\" has been added, that contains\n          all system calls known at the time systemd was built.\n\n        * Behaviour of system call filter allow lists has changed slightly:\n          system calls that are contained in @known will result in EPERM by\n          default, while those not contained in it result in ENOSYS. This\n          should improve compatibility because known system calls will thus be\n          communicated as prohibited, while unknown (and thus newer ones) will\n          be communicated as not implemented, which hopefully has the greatest\n          chance of triggering the right fallback code paths in client\n          applications.\n\n        * \"systemd-analyze syscall-filter\" will now show two separate sections\n          at the bottom of the output: system calls known during systemd build\n          time but not included in any of the filter groups shown above, and\n          system calls defined on the local kernel but known during systemd\n          build time.\n\n        * If the $SYSTEMD_LOG_SECCOMP=1 environment variable is set for\n          systemd-nspawn all system call filter violations will be logged by\n          the kernel (audit). This is useful for tracking down system calls\n          invoked by container payloads that are prohibited by the container's\n          system call filter policy.\n\n        * If the $SYSTEMD_SECCOMP=0 environment variable is set for\n          systemd-nspawn (and other programs that use seccomp) all seccomp\n          filtering is turned off.\n\n        * Two new unit file settings ProtectProc= and ProcSubset= have been\n          added that expose the hidepid= and subset= mount options of procfs.\n          All processes of the unit will only see processes in /proc that are\n          are owned by the unit's user. This is an important new sandboxing\n          option that is recommended to be set on all system services. All\n          long-running system services that are included in systemd itself set\n          this option now. This option is only supported on kernel 5.8 and\n          above, since the hidepid= option supported on older kernels was not a\n          per-mount option but actually applied to the whole PID namespace.\n\n        * Socket units gained a new boolean setting FlushPending=. If enabled\n          all pending socket data/connections are flushed whenever the socket\n          unit enters the \"listening\" state, i.e. after the associated service\n          exited.\n\n        * The unit file setting NUMAMask= gained a new \"all\" value: when used,\n          all existing NUMA nodes are added to the NUMA mask.\n\n        * A new \"credentials\" logic has been added to system services. This is\n          a simple mechanism to pass privileged data to services in a safe and\n          secure way. It's supposed to be used to pass per-service secret data\n          such as passwords or cryptographic keys but also associated less\n          private information such as user names, certificates, and similar to\n          system services. Each credential is identified by a short user-chosen\n          name and may contain arbitrary binary data. Two new unit file\n          settings have been added: SetCredential= and LoadCredential=. The\n          former allows setting a credential to a literal string, the latter\n          sets a credential to the contents of a file (or data read from a\n          user-chosen AF_UNIX stream socket). Credentials are passed to the\n          service via a special credentials directory, one file for each\n          credential. The path to the credentials directory is passed in a new\n          $CREDENTIALS_DIRECTORY environment variable. Since the credentials\n          are passed in the file system they may be easily referenced in\n          ExecStart= command lines too, thus no explicit support for the\n          credentials logic in daemons is required (though ideally daemons\n          would look for the bits they need in $CREDENTIALS_DIRECTORY\n          themselves automatically, if set). The $CREDENTIALS_DIRECTORY is\n          backed by unswappable memory if privileges allow it, immutable if\n          privileges allow it, is accessible only to the service's UID, and is\n          automatically destroyed when the service stops.\n\n        * systemd-nspawn supports the same credentials logic. It can both\n          consume credentials passed to it via the aforementioned\n          $CREDENTIALS_DIRECTORY protocol as well as pass these credentials on\n          to its payload. The service manager/PID 1 has been updated to match\n          this: it can also accept credentials from the container manager that\n          invokes it (in fact: any process that invokes it), and passes them on\n          to its services. Thus, credentials can be propagated recursively down\n          the tree: from a system's service manager to a systemd-nspawn\n          service, to the service manager that runs as container payload and to\n          the service it runs below. Credentials may also be added on the\n          systemd-nspawn command line, using new --set-credential= and\n          --load-credential= command line switches that match the\n          aforementioned service settings.\n\n        * systemd-repart gained new settings Format=, Encrypt=, CopyFiles= in\n          the partition drop-ins which may be used to format/LUKS\n          encrypt/populate any created partitions. The partitions are\n          encrypted/formatted/populated before they are registered in the\n          partition table, so that they appear atomically: either the\n          partitions do not exist yet or they exist fully encrypted, formatted,\n          and populated ‚Äî there is no time window where they are\n          \"half-initialized\". Thus the system is robust to abrupt shutdown: if\n          the tool is terminated half-way during its operations on next boot it\n          will start from the beginning.\n\n        * systemd-repart's --size= operation gained a new \"auto\" value. If\n          specified, and operating on a loopback file it is automatically sized\n          to the minimal size the size constraints permit. This is useful to\n          use \"systemd-repart\" as an image builder for minimally sized images.\n\n        * systemd-resolved now gained a third IPC interface for requesting name\n          resolution: besides D-Bus and local DNS to 127.0.0.53 a Varlink\n          interface is now supported. The nss-resolve NSS module has been\n          modified to use this new interface instead of D-Bus. Using Varlink\n          has a major benefit over D-Bus: it works without a broker service,\n          and thus already during earliest boot, before the dbus daemon has\n          been started. This means name resolution via systemd-resolved now\n          works at the same time systemd-networkd operates: from earliest boot\n          on, including in the initrd.\n\n        * systemd-resolved gained support for a new DNSStubListenerExtra=\n          configuration file setting which may be used to specify additional IP\n          addresses the built-in DNS stub shall listen on, in addition to the\n          main one on 127.0.0.53:53.\n\n        * Name lookups issued via systemd-resolved's D-Bus and Varlink\n          interfaces (and thus also via glibc NSS if nss-resolve is used) will\n          now honour a trailing dot in the hostname: if specified the search\n          path logic is turned off. Thus \"resolvectl query foo.\" is now\n          equivalent to \"resolvectl query --search=off foo.\".\n\n        * systemd-resolved gained a new D-Bus property \"ResolvConfMode\" that\n          exposes how /etc/resolv.conf is currently managed: by resolved (and\n          in which mode if so) or another subsystem. \"resolvctl\" will display\n          this property in its status output.\n\n        * The resolv.conf snippets systemd-resolved provides will now set \".\"\n          as the search domain if no other search domain is known. This turns\n          off the derivation of an implicit search domain by nss-dns for the\n          hostname, when the hostname is set to an FQDN. This change is done to\n          make nss-dns using resolv.conf provided by systemd-resolved behave\n          more similarly to nss-resolve.\n\n        * systemd-tmpfiles' file \"aging\" logic (i.e. the automatic clean-up of\n          /tmp/ and /var/tmp/ based on file timestamps) now looks at the\n          \"birth\" time (btime) of a file in addition to the atime, mtime, and\n          ctime.\n\n        * systemd-analyze gained a new verb \"capability\" that lists all known\n          capabilities by the systemd build and by the kernel.\n\n        * If a file /usr/lib/clock-epoch exists, PID 1 will read its mtime and\n          advance the system clock to it at boot if it is noticed to be before\n          that time. Previously, PID 1 would only advance the time to an epoch\n          time that is set during build-time. With this new file OS builders\n          can change this epoch timestamp on individual OS images without\n          having to rebuild systemd.\n\n        * systemd-logind will now listen to the KEY_RESTART key from the Linux\n          input layer and reboot the system if it is pressed, similarly to how\n          it already handles KEY_POWER, KEY_SUSPEND or KEY_SLEEP. KEY_RESTART\n          was originally defined in the Multimedia context (to restart playback\n          of a song or film), but is now primarily used in various embedded\n          devices for \"Reboot\" buttons. Accordingly, systemd-logind will now\n          honour it as such. This may configured in more detail via the new\n          HandleRebootKey= and RebootKeyIgnoreInhibited=.\n\n        * systemd-nspawn/systemd-machined will now reconstruct hardlinks when\n          copying OS trees, for example in \"systemd-nspawn --ephemeral\",\n          \"systemd-nspawn --template=\", \"machinectl clone\" and similar. This is\n          useful when operating with OSTree images, which use hardlinks heavily\n          throughout, and where such copies previously resulting in \"exploding\"\n          hardlinks.\n\n        * systemd-nspawn's --console= setting gained support for a new\n          \"autopipe\" value, which is identical to \"interactive\" when invoked on\n          a TTY, and \"pipe\" otherwise.\n\n        * systemd-networkd's .network files gained support for explicitly\n          configuring the multicast membership entries of bridge devices in the\n          [BridgeMDB] section. It also gained support for the PIE queuing\n          discipline in the [FlowQueuePIE] sections.\n\n        * systemd-networkd's .netdev files may now be used to create \"BareUDP\"\n          tunnels, configured in the new [BareUDP] setting.\n\n        * systemd-networkd's Gateway= setting in .network files now accepts the\n          special values \"_dhcp4\" and \"_ipv6ra\" to configure additional,\n          locally defined, explicit routes to the gateway acquired via DHCP or\n          IPv6 Router Advertisements. The old setting \"_dhcp\" is deprecated,\n          but still accepted for backwards compatibility.\n\n        * systemd-networkd's [IPv6PrefixDelegation] section and\n          IPv6PrefixDelegation= options have been renamed as [IPv6SendRA] and\n          IPv6SendRA= (the old names are still accepted for backwards\n          compatibility).\n\n        * systemd-networkd's .network files gained the DHCPv6PrefixDelegation=\n          boolean setting in [Network] section. If enabled, the delegated prefix\n          gained by another link will be configured, and an address within the\n          prefix will be assigned.\n\n        * systemd-networkd's .network files gained the Announce= boolean setting\n          in [DHCPv6PrefixDelegation] section. When enabled, the delegated\n          prefix will be announced through IPv6 router advertisement (IPv6 RA).\n          The setting is enabled by default.\n\n        * VXLAN tunnels may now be marked as independent of any underlying\n          network interface via the new Independent= boolean setting.\n\n        * systemctl gained support for two new verbs: \"service-log-level\" and\n          \"service-log-target\" may be used on services that implement the\n          generic org.freedesktop.LogControl1 D-Bus interface to dynamically\n          adjust the log level and target. All of systemd's long-running\n          services support this now, but ideally all system services would\n          implement this interface to make the system more uniformly\n          debuggable.\n\n        * The SystemCallErrorNumber= unit file setting now accepts the new\n          \"kill\" and \"log\" actions, in addition to arbitrary error number\n          specifications as before. If \"kill\" the processes are killed on the\n          event, if \"log\" the offending system call is audit logged.\n\n        * A new SystemCallLog= unit file setting has been added that accepts a\n          list of system calls that shall be logged about (audit).\n\n        * The OS image dissection logic (as used by RootImage= in unit files or\n          systemd-nspawn's --image= switch) has gained support for identifying\n          and mounting explicit /usr/ partitions, which are now defined in the\n          discoverable partition specification. This should be useful for\n          environments where the root file system is\n          generated/formatted/populated dynamically on first boot and combined\n          with an immutable /usr/ tree that is supplied by the vendor.\n\n        * In the final phase of shutdown, within the systemd-shutdown binary\n          we'll now try to detach MD devices (i.e software RAID) in addition to\n          loopback block devices and DM devices as before. This is supposed to\n          be a safety net only, in order to increase robustness if things go\n          wrong. Storage subsystems are expected to properly detach their\n          storage volumes during regular shutdown already (or in case of\n          storage backing the root file system: in the initrd hook we return to\n          later).\n\n        * If the SYSTEMD_LOG_TID environment variable is set all systemd tools\n          will now log the thread ID in their log output. This is useful when\n          working with heavily threaded programs.\n\n        * If the SYSTEMD_RDRAND environment variable is set to \"0\", systemd will\n          not use the RDRAND CPU instruction. This is useful in environments\n          such as replay debuggers where non-deterministic behaviour is not\n          desirable.\n\n        * The autopaging logic in systemd's various tools (such as systemctl)\n          has been updated to turn on \"secure\" mode in \"less\"\n          (i.e. $LESSECURE=1) if execution in a \"sudo\" environment is\n          detected. This disables invoking external programs from the pager,\n          via the pipe logic. This behaviour may be overridden via the new\n          $SYSTEMD_PAGERSECURE environment variable.\n\n        * Units which have resource limits (.service, .mount, .swap, .slice,\n          .socket, and .slice) gained new configuration settings\n          ManagedOOMSwap=, ManagedOOMMemoryPressure=, and\n          ManagedOOMMemoryPressureLimitPercent= that specify resource pressure\n          limits and optional action taken by systemd-oomd.\n\n        * A new service systemd-oomd has been added. It monitors resource\n          contention for selected parts of the unit hierarchy using the PSI\n          information reported by the kernel, and kills processes when memory\n          or swap pressure is above configured limits. This service is only\n          enabled by default in developer mode (see below) and should be\n          considered a preview in this release. Behaviour details and option\n          names are subject to change without the usual backwards-compatibility\n          promises.\n\n        * A new helper oomctl has been added to introspect systemd-oomd state.\n          It is only enabled by default in developer mode and should be\n          considered a preview without the usual backwards-compatibility\n          promises.\n\n        * New meson option -Dcompat-mutable-uid-boundaries= has been added. If\n          enabled, systemd reads the system UID boundaries from /etc/login.defs\n          at runtime, instead of using the built-in values selected during\n          build. This is an option to improve compatibility for upgrades from\n          old systems. It's strongly recommended not to make use of this\n          functionality on new systems (or even enable it during build), as it\n          makes something runtime-configurable that is mostly an implementation\n          detail of the OS, and permits avoidable differences in deployments\n          that create all kinds of problems in the long run.\n\n        * New meson option '-Dmode=developer|release' has been added. When\n          'developer', additional checks and features are enabled that are\n          relevant during upstream development, e.g. verification that\n          semi-automatically-generated documentation has been properly updated\n          following API changes. Those checks are considered hints for\n          developers and are not actionable in downstream builds. In addition,\n          extra features that are not ready for general consumption may be\n          enabled in developer mode. It is thus recommended to set\n          '-Dmode=release' in end-user and distro builds.\n\n        * systemd-cryptsetup gained support for processing detached LUKS\n          headers specified on the kernel command line via the header=\n          parameter of the luks.options= kernel command line option. The same\n          device/path syntax as for key files is supported for header files\n          like this.\n\n        * The \"net_id\" built-in of udev has been updated to ignore ACPI _SUN\n          slot index data for devices that are connected through a PCI bridge\n          where the _SUN index is associated with the bridge instead of the\n          network device itself. Previously this would create ambiguous device\n          naming if multiple network interfaces were connected to the same PCI\n          bridge. Since this is a naming scheme incompatibility on systems that\n          possess hardware like this it has been introduced as new naming\n          scheme \"v247\". The previous scheme can be selected via the\n          \"net.naming_scheme=v245\" kernel command line parameter.\n\n        * ConditionFirstBoot= semantics have been modified to be safe towards\n          abnormal system power-off during first boot. Specifically, the\n          \"systemd-machine-id-commit.service\" service now acts as boot\n          milestone indicating when the first boot process is sufficiently\n          complete in order to not consider the next following boot also a\n          first boot. If the system is reset before this unit is reached the\n          first time, the next boot will still be considered a first boot; once\n          it has been reached, no further boots will be considered a first\n          boot. The \"first-boot-complete.target\" unit now acts as official hook\n          point to order against this. If a service shall be run on every boot\n          until the first boot fully succeeds it may thus be ordered before\n          this target unit (and pull it in) and carry ConditionFirstBoot=\n          appropriately.\n\n        * bootctl's set-default and set-oneshot commands now accept the three\n          special strings \"@default\", \"@oneshot\", \"@current\" in place of a boot\n          entry id. These strings are resolved to the current default and\n          oneshot boot loader entry, as well as the currently booted one. Thus\n          a command \"bootctl set-default @current\" may be used to make the\n          currently boot menu item the new default for all subsequent boots.\n\n        * \"systemctl edit\" has been updated to show the original effective unit\n          contents in commented form in the text editor.\n\n        * Units in user mode are now segregated into three new slices:\n          session.slice (units that form the core of graphical session),\n          app.slice (\"normal\" user applications), and background.slice\n          (low-priority tasks). Unless otherwise configured, user units are\n          placed in app.slice. The plan is to add resource limits and\n          protections for the different slices in the future.\n\n        * New GPT partition types for RISCV32/64 for the root and /usr\n          partitions, and their associated Verity partitions have been defined,\n          and are now understood by systemd-gpt-auto-generator, and the OS\n          image dissection logic.\n\n        Contributions from: Adolfo Jayme Barrientos, afg, Alec Moskvin, Alyssa\n        Ross, Amitanand Chikorde, Andrew Hangsleben, Anita Zhang, Ansgar\n        Burchardt, Arian van Putten, Aurelien Jarno, Axel Rasmussen, bauen1,\n        Beniamino Galvani, Benjamin Berg, Bj√∏rn Mork, brainrom, Chandradeep\n        Dey, Charles Lee, Chris Down, Christian G√∂ttsche, Christof Efkemann,\n        Christoph Ruegge, Clemens Gruber, Daan De Meyer, Daniele Medri, Daniel\n        Mack, Daniel Rusek, Dan Streetman, David Tardon, Dimitri John Ledkov,\n        Dmitry Borodaenko, Elias Probst, Elisei Roca, ErrantSpore, Etienne\n        Doms, Fabrice Fontaine, fangxiuning, Felix Riemann, Florian Klink,\n        Franck Bui, Frantisek Sumsal, fwSmit, George Rawlinson, germanztz,\n        Gibeom Gwon, Glen Whitney, Gogo Gogsi, G√∂ran Uddeborg, Grant Mathews,\n        Hans de Goede, Hans Ulrich Niedermann, Haochen Tong, Harald Seiler,\n        huangyong, Hubert Kario, igo95862, Ikey Doherty, Insun Pyo, Jan Chren,\n        Jan Schl√ºter, J√©r√©my Nouhaud, Jian-Hong Pan, Joerg Behrmann, Jonathan\n        Lebon, J√∂rg Thalheim, Josh Brobst, Juergen Hoetzel, Julien Humbert,\n        Kai-Chuan Hsieh, Kairui Song, Kamil Dudka, Kir Kolyshkin, Kristijan\n        Gjoshev, Kyle Huey, Kyle Russell, Lee Whalen, Lennart Poettering,\n        lichangze, Luca Boccassi, Lucas Werkmeister, Luca Weiss, Marc\n        Kleine-Budde, Marco Wang, Martin Wilck, Marti Raudsepp, masmullin2000,\n        M√°t√© Pozsgay, Matt Fenwick, Michael Biebl, Michael Scherer, Michal\n        Koutn√Ω, Michal SekletaÃÅr, Michal Suchanek, Mikael Szreder, Milo\n        Casagrande, mirabilos, Mitsuha_QuQ, mog422, Muhammet Kara, Nazar\n        Vinnichuk, Nicholas Narsing, Nicolas Fella, Njibhu, nl6720, Oƒüuz Ersen,\n        Olivier Le Moal, Ondrej Kozina, onlybugreports, Pass Automated Testing\n        Suite, Pat Coulthard, Pavel Sapezhko, Pedro Ruiz, perry_yuan, Peter\n        Hutterer, Phaedrus Leeds, PhoenixDiscord, Piotr DrƒÖg, Plan C,\n        Purushottam choudhary, Rasmus Villemoes, Renaud M√©trich, Robert Marko,\n        Roman Beranek, Ronan Pigott, Roy Chen (Èô≥ÂΩ•Âª∑), RussianNeuroMancer,\n        Samanta Navarro, Samuel BF, scootergrisen, Sorin Ionescu, Steve Dodd,\n        Susant Sahani, Timo Rothenpieler, Tobias Hunger, Tobias Kaufmann, Topi\n        Miettinen, vanou, Vito Caputo, Weblate, Wen Yang, Whired Planck,\n        williamvds, Yu, Li-Yu, Yuri Chornoivan, Yu Watanabe, Zbigniew\n        Jƒôdrzejewski-Szmek, Zmicer Turok, –î–∞–º—ò–∞–Ω –ì–µ–æ—Ä–≥–∏–µ–≤—Å–∫–∏\n\n        ‚Äì Warsaw, 2020-11-26\n\nCHANGES WITH 246:\n\n        * The service manager gained basic support for cgroup v2 freezer. Units\n          can now be suspended or resumed either using new systemctl verbs,\n          freeze and thaw respectively, or via D-Bus.\n\n        * PID 1 may now automatically load pre-compiled AppArmor policies from\n          /etc/apparmor/earlypolicy during early boot.\n\n        * The CPUAffinity= setting in service unit files now supports a new\n          special value \"numa\" that causes the CPU affinity masked to be set\n          based on the NUMA mask.\n\n        * systemd will now log about all left-over processes remaining in a\n          unit when the unit is stopped. It will now warn about services using\n          KillMode=none, as this is generally an unsafe thing to make use of.\n\n        * Two new unit file settings\n          ConditionPathIsEncrypted=/AssertPathIsEncrypted= have been\n          added. They may be used to check whether a specific file system path\n          resides on a block device that is encrypted on the block level\n          (i.e. using dm-crypt/LUKS).\n\n        * Another pair of new settings ConditionEnvironment=/AssertEnvironment=\n          has been added that may be used for simple environment checks. This\n          is particularly useful when passing in environment variables from a\n          container manager (or from PAM in case of the systemd --user\n          instance).\n\n        * .service unit files now accept a new setting CoredumpFilter= which\n          allows configuration of the memory sections coredumps of the\n          service's processes shall include.\n\n        * .mount units gained a new ReadWriteOnly= boolean option. If set\n          it will not be attempted to mount a file system read-only if mounting\n          in read-write mode doesn't succeed. An option x-systemd.rw-only is\n          available in /etc/fstab to control the same.\n\n        * .socket units gained a new boolean setting PassPacketInfo=. If\n          enabled, the kernel will attach additional per-packet metadata to all\n          packets read from the socket, as an ancillary message. This controls\n          the IP_PKTINFO, IPV6_RECVPKTINFO, NETLINK_PKTINFO socket options,\n          depending on socket type.\n\n        * .service units gained a new setting RootHash= which may be used to\n          specify the root hash for verity enabled disk images which are\n          specified in RootImage=. RootVerity= may be used to specify a path to\n          the Verity data matching a RootImage= file system. (The latter is\n          only useful for images that do not contain the Verity data embedded\n          into the same image that carries a GPT partition table following the\n          Discoverable Partition Specification). Similarly, systemd-nspawn\n          gained a new switch --verity-data= that takes a path to a file with\n          the verity data of the disk image supplied in --image=, if the image\n          doesn't contain the verity data itself.\n\n        * .service units gained a new setting RootHashSignature= which takes\n          either a base64 encoded PKCS#7 signature of the root hash specified\n          with RootHash=, or a path to a file to read the signature from. This\n          allows validation of the root hash against public keys available in\n          the kernel keyring, and is only supported on recent kernels\n          (>= 5.4)/libcryptsetup (>= 2.30). A similar switch has been added to\n          systemd-nspawn and systemd-dissect (--root-hash-sig=). Support for\n          this mechanism has also been added to systemd-veritysetup.\n\n        * .service unit files gained two new options\n          TimeoutStartFailureMode=/TimeoutStopFailureMode= that may be used to\n          tune behaviour if a start or stop timeout is hit, i.e. whether to\n          terminate the service with SIGTERM, SIGABRT or SIGKILL.\n\n        * Most options in systemd that accept hexadecimal values prefixed with\n          0x in additional to the usual decimal notation now also support octal\n          notation when the 0o prefix is used and binary notation if the 0b\n          prefix is used.\n\n        * Various command line parameters and configuration file settings that\n          configure key or certificate files now optionally take paths to\n          AF_UNIX sockets in the file system. If configured that way a stream\n          connection is made to the socket and the required data read from\n          it. This is a simple and natural extension to the existing regular\n          file logic, and permits other software to provide keys or\n          certificates via simple IPC services, for example when unencrypted\n          storage on disk is not desired. Specifically, systemd-networkd's\n          Wireguard and MACSEC key file settings as well as\n          systemd-journal-gatewayd's and systemd-journal-remote's PEM\n          key/certificate parameters support this now.\n\n        * Unit files, tmpfiles.d/ snippets, sysusers.d/ snippets and other\n          configuration files that support specifier expansion learnt six new\n          specifiers: %a resolves to the current architecture, %o/%w/%B/%W\n          resolve to the various ID fields from /etc/os-release, %l resolves to\n          the \"short\" hostname of the system, i.e. the hostname configured in\n          the kernel truncated at the first dot.\n\n        * Support for the .include syntax in unit files has been removed. The\n          concept has been obsolete for 6 years and we started warning about\n          its pending removal 2 years ago (also see NEWS file below). It's\n          finally gone now.\n\n        * StandardError= and StandardOutput= in unit files no longer support\n          the \"syslog\" and \"syslog-console\" switches. They were long removed\n          from the documentation, but will now result in warnings when used,\n          and be converted to \"journal\" and \"journal+console\" automatically.\n\n        * If the service setting User= is set to the \"nobody\" user, a warning\n          message is now written to the logs (but the value is nonetheless\n          accepted). Setting User=nobody is unsafe, since the primary purpose\n          of the \"nobody\" user is to own all files whose owner cannot be mapped\n          locally. It's in particular used by the NFS subsystem and in user\n          namespacing. By running a service under this user's UID it might get\n          read and even write access to all these otherwise unmappable files,\n          which is quite likely a major security problem.\n\n        * tmpfs mounts automatically created by systemd (/tmp, /run, /dev/shm,\n          and others) now have a size and inode limits applied (50% of RAM for\n          /tmp and /dev/shm, 10% of RAM for other mounts, etc.). Please note\n          that the implicit kernel default is 50% too, so there is no change\n          in the size limit for /tmp and /dev/shm.\n\n        * nss-mymachines lost support for resolution of users and groups, and\n          now only does resolution of hostnames. This functionality is now\n          provided by nss-systemd. Thus, the 'mymachines' entry should be\n          removed from the 'passwd:' and 'group:' lines in /etc/nsswitch.conf\n          (and 'systemd' added if it is not already there).\n\n        * A new kernel command line option systemd.hostname= has been added\n          that allows controlling the hostname that is initialized early during\n          boot.\n\n        * A kernel command line option \"udev.blockdev_read_only\" has been\n          added. If specified all hardware block devices that show up are\n          immediately marked as read-only by udev. This option is useful for\n          making sure that a specific boot under no circumstances modifies data\n          on disk. Use \"blockdev --setrw\" to undo the effect of this, per\n          device.\n\n        * A new boolean kernel command line option systemd.swap= has been\n          added, which may be used to turn off automatic activation of swap\n          devices listed in /etc/fstab.\n\n        * New kernel command line options systemd.condition_needs_update= and\n          systemd.condition_first_boot= have been added, which override the\n          result of the ConditionNeedsUpdate= and ConditionFirstBoot=\n          conditions.\n\n        * A new kernel command line option systemd.clock_usec= has been added\n          that allows setting the system clock to the specified time in ¬µs\n          since Jan 1st, 1970 early during boot. This is in particular useful\n          in order to make test cases more reliable.\n\n        * The fs.suid_dumpable sysctl is set to 2 / \"suidsafe\". This allows\n          systemd-coredump to save core files for suid processes. When saving\n          the core file, systemd-coredump will use the effective uid and gid of\n          the process that faulted.\n\n        * The /sys/module/kernel/parameters/crash_kexec_post_notifiers file is\n          now automatically set to \"Y\" at boot, in order to enable pstore\n          generation for collection with systemd-pstore.\n\n        * We provide a set of udev rules to enable auto-suspend on PCI and USB\n          devices that were tested to correctly support it. Previously, this\n          was distributed as a set of udev rules, but has now been replaced by\n          by a set of hwdb entries (and a much shorter udev rule to take action\n          if the device modalias matches one of the new hwdb entries).\n\n          As before, entries are periodically imported from the database\n          maintained by the ChromiumOS project. If you have a device that\n          supports auto-suspend correctly and where it should be enabled by\n          default, please submit a patch that adds it to the database (see\n          /usr/lib/udev/hwdb.d/60-autosuspend.hwdb).\n\n        * systemd-udevd gained the new configuration option timeout_signal= as well\n          as a corresponding kernel command line option udev.timeout_signal=.\n          The option can be used to configure the UNIX signal that the main\n          daemon sends to the worker processes on timeout. Setting the signal\n          to SIGABRT is useful for debugging.\n\n        * .link files managed by systemd-udevd gained options RxFlowControl=,\n          TxFlowControl=, AutoNegotiationFlowControl= in the [Link] section, in\n          order to configure various flow control parameters. They also gained\n          RxMiniBufferSize= and RxJumboBufferSize= in order to configure jumbo\n          frame ring buffer sizes.\n\n        * networkd.conf gained a new boolean setting ManageForeignRoutes=. If\n          enabled systemd-networkd manages all routes configured by other tools.\n\n        * .network files managed by systemd-networkd gained a new section\n          [SR-IOV], in order to configure SR-IOV capable network devices.\n\n        * systemd-networkd's [IPv6Prefix] section in .network files gained a\n          new boolean setting Assign=. If enabled an address from the prefix is\n          automatically assigned to the interface.\n\n        * systemd-networkd gained a new section [DHCPv6PrefixDelegation] which\n          controls delegated prefixes assigned by DHCPv6 client. The section\n          has three settings: SubnetID=, Assign=, and Token=. The setting\n          SubnetID= allows explicit configuration of the preferred subnet that\n          systemd-networkd's Prefix Delegation logic assigns to interfaces. If\n          Assign= is enabled (which is the default) an address from any acquired\n          delegated prefix is automatically chosen and assigned to the\n          interface. The setting Token= specifies an optional address generation\n          mode for Assign=.\n\n        * systemd-networkd's [Network] section gained a new setting\n          IPv4AcceptLocal=. If enabled the interface accepts packets with local\n          source addresses.\n\n        * systemd-networkd gained support for configuring the HTB queuing\n          discipline in the [HierarchyTokenBucket] and\n          [HierarchyTokenBucketClass] sections. Similar the \"pfifo\" qdisc may\n          be configured in the [PFIFO] section, \"GRED\" in\n          [GenericRandomEarlyDetection], \"SFB\" in [StochasticFairBlue], \"cake\"\n          in [CAKE], \"PIE\" in [PIE], \"DRR\" in [DeficitRoundRobinScheduler] and\n          [DeficitRoundRobinSchedulerClass], \"BFIFO\" in [BFIFO],\n          \"PFIFOHeadDrop\" in [PFIFOHeadDrop], \"PFIFOFast\" in [PFIFOFast], \"HHF\"\n          in [HeavyHitterFilter], \"ETS\" in [EnhancedTransmissionSelection] and\n          \"QFQ\" in [QuickFairQueueing] and [QuickFairQueueingClass].\n\n        * systemd-networkd gained support for a new Termination= setting in the\n          [CAN] section for configuring the termination resistor. It also\n          gained a new ListenOnly= setting for controlling whether to only\n          listen on CAN interfaces, without interfering with traffic otherwise\n          (which is useful for debugging/monitoring CAN network\n          traffic). DataBitRate=, DataSamplePoint=, FDMode=, FDNonISO= have\n          been added to configure various CAN-FD aspects.\n\n        * systemd-networkd's [DHCPv6] section gained a new option WithoutRA=.\n          When enabled, DHCPv6 will be attempted right-away without requiring an\n          Router Advertisement packet suggesting it first (i.e. without the 'M'\n          or 'O' flags set). The [IPv6AcceptRA] section gained a boolean option\n          DHCPv6Client= that may be used to turn off the DHCPv6 client even if\n          the RA packets suggest it.\n\n        * systemd-networkd's [DHCPv4] section gained a new setting UseGateway=\n          which may be used to turn off use of the gateway information provided\n          by the DHCP lease. A new FallbackLeaseLifetimeSec= setting may be\n          used to configure how to process leases that lack a lifetime option.\n\n        * systemd-networkd's [DHCPv4] and [DHCPServer] sections gained a new\n          setting SendVendorOption= allowing configuration of additional vendor\n          options to send in the DHCP requests/responses. The [DHCPv6] section\n          gained a new SendOption= setting for sending arbitrary DHCP\n          options. RequestOptions= has been added to request arbitrary options\n          from the server. UserClass= has been added to set the DHCP user class\n          field.\n\n        * systemd-networkd's [DHCPServer] section gained a new set of options\n          EmitPOP3=/POP3=, EmitSMTP=/SMTP=, EmitLPR=/LPR= for including server\n          information about these three protocols in the DHCP lease. It also\n          gained support for including \"MUD\" URLs (\"Manufacturer Usage\n          Description\"). Support for \"MUD\" URLs was also added to the LLDP\n          stack, configurable in the [LLDP] section in .network files.\n\n        * The Mode= settings in [MACVLAN] and [MACVTAP] now support 'source'\n          mode. Also, the sections now support a new setting SourceMACAddress=.\n\n        * systemd-networkd's .netdev files now support a new setting\n          VLANProtocol= in the [Bridge] section that allows configuration of\n          the VLAN protocol to use.\n\n        * systemd-networkd supports a new Group= setting in the [Link] section\n          of the .network files, to control the link group.\n\n        * systemd-networkd's [Network] section gained a new\n          IPv6LinkLocalAddressGenerationMode= setting, which specifies how IPv6\n          link local address is generated.\n\n        * A new default .network file is now shipped that matches TUN/TAP\n          devices that begin with \"vt-\" in their name. Such interfaces will\n          have IP routing onto the host links set up automatically. This is\n          supposed to be used by VM managers to trivially acquire a network\n          interface which is fully set up for host communication, simply by\n          carefully picking an interface name to use.\n\n        * systemd-networkd's [DHCPv6] section gained a new setting RouteMetric=\n          which sets the route priority for routes specified by the DHCP server.\n\n        * systemd-networkd's [DHCPv6] section gained a new setting VendorClass=\n          which configures the vendor class information sent to DHCP server.\n\n        * The BlackList= settings in .network files' [DHCPv4] and\n          [IPv6AcceptRA] sections have been renamed DenyList=. The old names\n          are still understood to provide compatibility.\n\n        * networkctl gained the new \"forcerenew\" command for forcing all DHCP\n          server clients to renew their lease. The interface \"status\" output\n          will now show numerous additional fields of information about an\n          interface. There are new \"up\" and \"down\" commands to bring specific\n          interfaces up or down.\n\n        * systemd-resolved's DNS= configuration option now optionally accepts a\n          port number (after \":\") and a host name (after \"#\"). When the host\n          name is specified, the DNS-over-TLS certificate is validated to match\n          the specified hostname. Additionally, in case of IPv6 addresses, an\n          interface may be specified (after \"%\").\n\n        * systemd-resolved may be configured to forward single-label DNS names.\n          This is not standard-conformant, but may make sense in setups where\n          public DNS servers are not used.\n\n        * systemd-resolved's DNS-over-TLS support gained SNI validation.\n\n        * systemd-nspawn's --resolv-conf= switch gained a number of new\n          supported values. Specifically, options starting with \"replace-\" are\n          like those prefixed \"copy-\" but replace any existing resolv.conf\n          file. And options ending in \"-uplink\" and \"-stub\" can now be used to\n          propagate other flavours of resolv.conf into the container (as\n          defined by systemd-resolved).\n\n        * The various programs included in systemd can now optionally output\n          their log messages on stderr prefixed with a timestamp, controlled by\n          the $SYSTEMD_LOG_TIME environment variable.\n\n        * systemctl gained a new \"-P\" switch that is a shortcut for \"--value\n          --property=‚Ä¶\".\n\n        * \"systemctl list-units\" and \"systemctl list-machines\" no longer hide\n          their first output column with --no-legend. To hide the first column,\n          use --plain.\n\n        * \"systemctl reboot\" takes the option \"--reboot-argument=\".\n          The optional positional argument to \"systemctl reboot\" is now\n          being deprecated in favor of this option.\n\n        * systemd-run gained a new switch --slice-inherit. If specified the\n          unit it generates is placed in the same slice as the systemd-run\n          process itself.\n\n        * systemd-journald gained support for zstd compression of large fields\n          in journal files. The hash tables in journal files have been hardened\n          against hash collisions. This is an incompatible change and means\n          that journal files created with new systemd versions are not readable\n          with old versions. If the $SYSTEMD_JOURNAL_KEYED_HASH boolean\n          environment variable for systemd-journald.service is set to 0 this\n          new hardening functionality may be turned off, so that generated\n          journal files remain compatible with older journalctl\n          implementations.\n\n        * journalctl will now include a clickable link in the default output for\n          each log message for which a URL with further documentation is\n          known. This is only supported on terminal emulators that support\n          clickable hyperlinks, and is turned off if a pager is used (since\n          \"less\" still doesn't support hyperlinks,\n          unfortunately). Documentation URLs may be included in log messages\n          either by including a DOCUMENTATION= journal field in it, or by\n          associating a journal message catalog entry with the log message's\n          MESSAGE_ID, which then carries a \"Documentation:\" tag.\n\n        * journald.conf gained a new boolean setting Audit= that may be used to\n          control whether systemd-journald will enable audit during\n          initialization.\n\n        * when systemd-journald's log stream is broken up into multiple lines\n          because the PID of the sender changed this is indicated in the\n          generated log records via the _LINE_BREAK=pid-change field.\n\n        * journalctl's \"-o cat\" output mode will now show one or more journal\n          fields specified with --output-fields= instead of unconditionally\n          MESSAGE=. This is useful to retrieve a very specific set of fields\n          without any decoration.\n\n        * The sd-journal.h API gained two new functions:\n          sd_journal_enumerate_available_unique() and\n          sd_journal_enumerate_available_data() that operate like their\n          counterparts that lack the _available_ in the name, but skip items\n          that cannot be read and processed by the local implementation\n          (i.e. are compressed in an unsupported format or such),\n\n        * coredumpctl gained a new --file= switch, matching the same one in\n          journalctl: a specific journal file may be specified to read the\n          coredump data from.\n\n        * coredumps collected by systemd-coredump may now be compressed using\n          the zstd algorithm.\n\n        * systemd-binfmt gained a new switch --unregister for unregistering all\n          registered entries at once. This is now invoked automatically at\n          shutdown, so that binary formats registered with the \"F\" flag will\n          not block clean file system unmounting.\n\n        * systemd-notify's --pid= switch gained new values: \"parent\", \"self\",\n          \"auto\" for controlling which PID to send to the service manager: the\n          systemd-notify process' PID, or the one of the process invoking it.\n\n        * systemd-logind's Session bus object learnt a new method call\n          SetType() for temporarily updating the session type of an already\n          allocated session. This is useful for upgrading tty sessions to\n          graphical ones once a compositor is invoked.\n\n        * systemd-socket-proxy gained a new switch --exit-idle-time= for\n          configuring an exit-on-idle time.\n\n        * systemd-repart's --empty= setting gained a new value \"create\". If\n          specified a new empty regular disk image file is created under the\n          specified name. Its size may be specified with the new --size=\n          option. The latter is also supported without the \"create\" mode, in\n          order to grow existing disk image files to the specified size. These\n          two new options are useful when creating or manipulating disk images\n          instead of operating on actual block devices.\n\n        * systemd-repart drop-ins now support a new UUID= setting to control\n          the UUID to assign to a newly created partition.\n\n        * systemd-repart's SizeMin= per-partition parameter now defaults to 10M\n          instead of 0.\n\n        * systemd-repart's Label= setting now support the usual, simple\n          specifier expansion.\n\n        * systemd-homed's LUKS backend gained the ability to discard empty file\n          system blocks automatically when the user logs out. This is enabled\n          by default to ensure that home directories take minimal space when\n          logged out but get full size guarantees when logged in. This may be\n          controlled with the new --luks-offline-discard= switch to homectl.\n\n        * If systemd-homed detects that /home/ is encrypted as a whole it will\n          now default to the directory or subvolume backends instead of the\n          LUKS backend, in order to avoid double encryption. The default\n          storage and file system may now be configured explicitly, too, via\n          the new /etc/systemd/homed.conf configuration file.\n\n        * systemd-homed now supports unlocking home directories with FIDO2\n          security tokens that support the 'hmac-secret' extension, in addition\n          to the existing support for PKCS#11 security token unlocking\n          support. Note that many recent hardware security tokens support both\n          interfaces. The FIDO2 support is accessible via homectl's\n          --fido2-device= option.\n\n        * homectl's --pkcs11-uri= setting now accepts two special parameters:\n          if \"auto\" is specified and only one suitable PKCS#11 security token\n          is plugged in, its URL is automatically determined and enrolled for\n          unlocking the home directory. If \"list\" is specified a brief table of\n          suitable PKCS#11 security tokens is shown. Similar, the new\n          --fido2-device= option also supports these two special values, for\n          automatically selecting and listing suitable FIDO2 devices.\n\n        * The /etc/crypttab tmp option now optionally takes an argument\n          selecting the file system to use. Moreover, the default is now\n          changed from ext2 to ext4.\n\n        * There's a new /etc/crypttab option \"keyfile-erase\". If specified the\n          key file listed in the same line is removed after use, regardless if\n          volume activation was successful or not. This is useful if the key\n          file is only acquired transiently at runtime and shall be erased\n          before the system continues to boot.\n\n        * There's also a new /etc/crypttab option \"try-empty-password\". If\n          specified, before asking the user for a password it is attempted to\n          unlock the volume with an empty password. This is useful for\n          installing encrypted images whose password shall be set on first boot\n          instead of at installation time.\n\n        * systemd-cryptsetup will now attempt to load the keys to unlock\n          volumes with automatically from files in\n          /etc/cryptsetup-keys.d/<volume>.key and\n          /run/cryptsetup-keys.d/<volume>.key, if any of these files exist.\n\n        * systemd-cryptsetup may now activate Microsoft BitLocker volumes via\n          /etc/crypttab, during boot.\n\n        * logind.conf gained a new RuntimeDirectoryInodesMax= setting to\n          control the inode limit for the per-user $XDG_RUNTIME_DIR tmpfs\n          instance.\n\n        * A new generator systemd-xdg-autostart-generator has been added. It\n          generates systemd unit files from XDG autostart .desktop files, and\n          may be used to let the systemd user instance manage services that are\n          started automatically as part of the desktop session.\n\n        * \"bootctl\" gained a new verb \"reboot-to-firmware\" that may be used\n          to query and change the firmware's 'Reboot Into Firmware Interface'\n          setup flag.\n\n        * systemd-firstboot gained a new switch --kernel-command-line= that may\n          be used to initialize the /etc/kernel/cmdline file of the image. It\n          also gained a new switch --root-password-hashed= which is like\n          --root-password= but accepts a pre-hashed UNIX password as\n          argument. The new option --delete-root-password may be used to unset\n          any password for the root user (dangerous!). The --root-shell= switch\n          may be used to control the shell to use for the root account. A new\n          --force option may be used to override any already set settings with\n          the parameters specified on the command line (by default, the tool\n          will not override what has already been set before, i.e. is purely\n          incremental).\n\n        * systemd-firstboot gained support for a new --image= switch, which is\n          similar to --root= but accepts the path to a disk image file, on\n          which it then operates.\n\n        * A new sd-path.h API has been added to libsystemd. It provides a\n          simple API for retrieving various search paths and primary\n          directories for various resources.\n\n        * A new call sd_notify_barrier() has been added to the sd-daemon.h\n          API. The call will block until all previously sent sd_notify()\n          messages have been processed by the service manager. This is useful\n          to remove races caused by a process already having disappeared at the\n          time a notification message is processed by the service manager,\n          making correct attribution impossible. The systemd-notify tool will\n          now make use of this call implicitly, but this can be turned off again\n          via the new --no-block switch.\n\n        * When sending a file descriptor (fd) to the service manager to keep\n          track of, using the sd_notify() mechanism, a new parameter FDPOLL=0\n          may be specified. If passed the service manager will refrain from\n          poll()ing on the file descriptor. Traditionally (and when the\n          parameter is not specified), the service manager will poll it for\n          POLLHUP or POLLERR events, and immediately close the fds in that\n          case.\n\n        * The service manager (PID1) gained a new D-Bus method call\n          SetShowStatus() which may be used to control whether it shall show\n          boot-time status output on the console. This method has a similar\n          effect to sending SIGRTMIN+20/SIGRTMIN+21 to PID 1.\n\n        * The sd-bus API gained a number of convenience functions that take\n          va_list arguments rather than \"...\". For example, there's now\n          sd_bus_call_methodv() to match sd_bus_call_method(). Those calls make\n          it easier to build wrappers that accept variadic arguments and want\n          to pass a ready va_list structure to sd-bus.\n\n        * sd-bus vtable entries can have a new SD_BUS_VTABLE_ABSOLUTE_OFFSET\n          flag which alters how the userdata pointer to pass to the callbacks\n          is determined. When the flag is set, the offset field is converted\n          as-is into a pointer, without adding it to the object pointer the\n          vtable is associated with.\n\n        * sd-bus now exposes four new functions:\n          sd_bus_interface_name_is_valid() + sd_bus_service_name_is_valid() +\n          sd_bus_member_name_is_valid() + sd_bus_object_path_is_valid() will\n          validate strings to check if they qualify as various D-Bus concepts.\n\n        * The sd-bus API gained the SD_BUS_METHOD_WITH_ARGS(),\n          SD_BUS_METHOD_WITH_ARGS_OFFSET() and SD_BUS_SIGNAL_WITH_ARGS() macros\n          that simplify adding argument names to D-Bus methods and signals.\n\n        * The man pages for the sd-bus and sd-hwdb APIs have been completed.\n\n        * Various D-Bus APIs of systemd daemons now have man pages that\n          document the methods, signals and properties.\n\n        * The expectations on user/group name syntax are now documented in\n          detail; documentation on how classic home directories may be\n          converted into home directories managed by homed has been added;\n          documentation regarding integration of homed/userdb functionality in\n          desktops has been added:\n\n              https://systemd.io/USER_NAMES\n              https://systemd.io/CONVERTING_TO_HOMED\n              https://systemd.io/USERDB_AND_DESKTOPS\n\n        * Documentation for the on-disk Journal file format has been updated\n          and has now moved to:\n\n              https://systemd.io/JOURNAL_FILE_FORMAT\n\n        * The interface for containers (https://systemd.io/CONTAINER_INTERFACE)\n          has been extended by a set of environment variables that expose\n          select fields from the host's os-release file to the container\n          payload. Similarly, host's os-release files can be mounted into the\n          container underneath /run/host. Together, those mechanisms provide a\n          standardized way to expose information about the host to the\n          container payload. Both interfaces are implemented in systemd-nspawn.\n\n        * All D-Bus services shipped in systemd now implement the generic\n          LogControl1 D-Bus API which allows clients to change log level +\n          target of the service during runtime.\n\n        * Only relevant for developers: the mkosi.default symlink has been\n          dropped from version control. Please create a symlink to one of the\n          distribution-specific defaults in .mkosi/ based on your preference.\n\n        Contributions from: 24bisquitz, Adam Nielsen, Alan Perry, Alexander\n        Malafeev, Amitanand.Chikorde, Alin Popa, Alvin ≈†ipraga, Amos Bird,\n        Andreas Rammhold, AndreRH, Andrew Doran, Anita Zhang, Ankit Jain,\n        antznin, Arnaud Ferraris, Arthur Moraes do Lago, Arusekk, Balaji\n        Punnuru, Balint Reczey, Bastien Nocera, bemarek, Benjamin Berg,\n        Benjamin Dahlhoff, Benjamin Robin, Chris Down, Chris Kerr, Christian\n        G√∂ttsche, Christian Hesse, Christian Oder, Ciprian Hacman, Clinton Roy,\n        codicodi, Corey Hinshaw, Daan De Meyer, Dana Olson, Dan Callaghan,\n        Daniel Fullmer, Daniel Rusek, Dan Streetman, Dave Reisner, David\n        Edmundson, David Wood, Denis Pronin, Diego Escalante Urrelo, Dimitri\n        John Ledkov, dolphrundgren, duguxy, Einsler Lee, Elisei Roca, Emmanuel\n        Garette, Eric Anderson, Eric DeVolder, Evgeny Vereshchagin,\n        ExtinctFire, fangxiuning, Ferran Pallar√®s Roca, Filipe Brandenburger,\n        Filippo Falezza, Finn, Florian Klink, Florian Mayer, Franck Bui,\n        Frantisek Sumsal, gaurav, Georg M√ºller, Gergely Polonkai, Giedrius\n        Statkeviƒçius, Gigadoc2, gogogogi, Gaurav Singh, gzjsgdsb, Hans de\n        Goede, Haochen Tong, ianhi, ignapk, Jakov Smolic, James T. Lee, Jan\n        Janssen, Jan Kl√∂tzke, Jan Palus, Jay Burger, Jeremy Cline, J√©r√©my\n        Rosen, Jian-Hong Pan, Jiri Slaby, Joel Shapiro, Joerg Behrmann, J√∂rg\n        Thalheim, Jouke Witteveen, Kai-Heng Feng, Kenny Levinsen, Kevin\n        Kuehler, Kumar Kartikeya Dwivedi, layderv, laydervus, L√©na√Øc Huard,\n        Lennart Poettering, Lidong Zhong, Luca Boccassi, Luca BRUNO, Lucas\n        Werkmeister, Lukas Klingsbo, Luk√°≈° Nykr√Ωn, ≈Åukasz Stelmach, Maciej\n        S. Szmigiero, MadMcCrow, Marc-Andr√© Lureau, Marcel Holtmann, Marc\n        Kleine-Budde, Martin Hundeb√∏ll, Matthew Leeds, Matt Ranostay, Maxim\n        Fomin, MaxVerevkin, Michael Biebl, Michael Chapman, Michael Gubbels,\n        Michael Marley, Micha≈Ç Bartoszkiewicz, Michal Koutn√Ω, Michal SekletaÃÅr,\n        Mike Gilbert, Mike Kazantsev, Mikhail Novosyolov, ml, Motiejus Jak≈°tys,\n        nabijaczleweli, nerdopolis, Niccol√≤ Maggioni, Niklas Hamb√ºchen, Norbert\n        Lange, Paul Cercueil, pelzvieh, Peter Hutterer, Piero La Terza, Pieter\n        Lexis, Piotr DrƒÖg, Rafael Fontenelle, Richard Petri, Ronan Pigott, Ross\n        Lagerwall, Rubens Figueiredo, satmandu, Sean-StarLabs, Sebastian\n        Jennen, sterlinghughes, Surhud More, Susant Sahani, szb512, Thomas\n        Haller, Tobias Hunger, Tom, Tom√°≈° Posp√≠≈°ek, Tomer Shechner, Tom Hughes,\n        Topi Miettinen, Tudor Roman, Uwe Kleine-K√∂nig, Valery0xff, Vito Caputo,\n        Vladimir Panteleev, Vladyslav Tronko, Wen Yang, Yegor Vialov, Yigal\n        Korman, Yi Gao, YmrDtnJu, Yuri Chornoivan, Yu Watanabe, Zbigniew\n        Jƒôdrzejewski-Szmek, Zhu Li, –î–∞–º—ò–∞–Ω –ì–µ–æ—Ä–≥–∏–µ–≤—Å–∫–∏, –Ω–∞–±\n\n        ‚Äì Warsaw, 2020-07-30\n\nCHANGES WITH 245:\n\n        * A new tool \"systemd-repart\" has been added, that operates as an\n          idempotent declarative repartitioner for GPT partition tables.\n          Specifically, a set of partitions that must or may exist can be\n          configured via drop-in files, and during every boot the partition\n          table on disk is compared with these files, creating missing\n          partitions or growing existing ones based on configurable relative\n          and absolute size constraints. The tool is strictly incremental,\n          i.e. does not delete, shrink or move partitions, but only adds and\n          grows them. The primary use-case is OS images that ship in minimized\n          form, that on first boot are grown to the size of the underlying\n          block device or augmented with additional partitions. For example,\n          the root partition could be extended to cover the whole disk, or a\n          swap or /home partitions could be added on first boot. It can also be\n          used for systems that use an A/B update scheme but ship images with\n          just the A partition, with B added on first boot. The tool is\n          primarily intended to be run in the initrd, shortly before\n          transitioning into the host OS, but can also be run after the\n          transition took place. It automatically discovers the disk backing\n          the root file system, and should hence not require any additional\n          configuration besides the partition definition drop-ins. If no\n          configuration drop-ins are present, no action is taken.\n\n        * A new component \"userdb\" has been added, along with a small daemon\n          \"systemd-userdbd.service\" and a client tool \"userdbctl\". The framework\n          allows defining rich user and group records in a JSON format,\n          extending on the classic \"struct passwd\" and \"struct group\"\n          structures. Various components in systemd have been updated to\n          process records in this format, including systemd-logind and\n          pam-systemd. The user records are intended to be extensible, and\n          allow setting various resource management, security and runtime\n          parameters that shall be applied to processes and sessions of the\n          user as they log in. This facility is intended to allow associating\n          such metadata directly with user/group records so that they can be\n          produced, extended and consumed in unified form. We hope that\n          eventually frameworks such as sssd will generate records this way, so\n          that for the first time resource management and various other\n          per-user settings can be configured in LDAP directories and then\n          provided to systemd (specifically to systemd-logind and pam-system)\n          to apply on login. For further details see:\n\n          https://systemd.io/USER_RECORD\n          https://systemd.io/GROUP_RECORD\n          https://systemd.io/USER_GROUP_API\n\n        * A small new service systemd-homed.service has been added, that may be\n          used to securely manage home directories with built-in encryption.\n          The complete user record data is unified with the home directory,\n          thus making home directories naturally migratable. Its primary\n          back-end is based on LUKS volumes, but fscrypt, plain directories,\n          and other storage schemes are also supported. This solves a couple of\n          problems we saw with traditional ways to manage home directories, in\n          particular when it comes to encryption. For further discussion of\n          this, see the video of Lennart's talk at AllSystemsGo! 2019:\n\n          https://media.ccc.de/v/ASG2019-164-reinventing-home-directories\n\n          For further details about the format and expectations on home\n          directories this new daemon makes, see:\n\n          https://systemd.io/HOME_DIRECTORY\n\n        * systemd-journald is now multi-instantiable. In addition to the main\n          instance systemd-journald.service there's now a template unit\n          systemd-journald@.service, with each instance defining a new named\n          log 'namespace' (whose name is specified via the instance part of the\n          unit name). A new unit file setting LogNamespace= has been added,\n          taking such a namespace name, that assigns services to the specified\n          log namespaces. As each log namespace is serviced by its own\n          independent journal daemon, this functionality may be used to improve\n          performance and increase isolation of applications, at the price of\n          losing global message ordering. Each instance of journald has a\n          separate set of configuration files, with possibly different disk\n          usage limitations and other settings.\n\n          journalctl now takes a new option --namespace= to show logs from a\n          specific log namespace. The sd-journal.h API gained\n          sd_journal_open_namespace() for opening the log stream of a specific\n          log namespace. systemd-journald also gained the ability to exit on\n          idle, which is useful in the context of log namespaces, as this means\n          log daemons for log namespaces can be activated automatically on\n          demand and will stop automatically when no longer used, minimizing\n          resource usage.\n\n        * When systemd-tmpfiles copies a file tree using the 'C' line type it\n          will now label every copied file according to the SELinux database.\n\n        * When systemd/PID 1 detects it is used in the initrd it will now boot\n          into initrd.target rather than default.target by default. This should\n          make it simpler to build initrds with systemd as for many cases the\n          only difference between a host OS image and an initrd image now is\n          the presence of the /etc/initrd-release file.\n\n        * A new kernel command line option systemd.cpu_affinity= is now\n          understood. It's equivalent to the CPUAffinity= option in\n          /etc/systemd/system.conf and allows setting the CPU mask for PID 1\n          itself and the default for all other processes.\n\n        * When systemd/PID 1 is reloaded (with systemctl daemon-reload or\n          equivalent), the SELinux database is now reloaded, ensuring that\n          sockets and other file system objects are generated taking the new\n          database into account.\n\n        * systemd/PID 1 accepts a new \"systemd.show-status=error\" setting, and\n          \"quiet\" has been changed to imply that instead of\n          \"systemd.show-status=auto\". In this mode, only messages about errors\n          and significant delays in boot are shown on the console.\n\n        * The sd-event.h API gained native support for the new Linux \"pidfd\"\n          concept. This permits watching processes using file descriptors\n          instead of PID numbers, which fixes a number of races and makes\n          process supervision more robust and efficient. All of systemd's\n          components will now use pidfds if the kernel supports it for process\n          watching, with the exception of PID 1 itself, unfortunately. We hope\n          to move PID 1 to exclusively using pidfds too eventually, but this\n          requires some more kernel work first. (Background: PID 1 watches\n          processes using waitid() with the P_ALL flag, and that does not play\n          together nicely with pidfds yet.)\n\n        * Closely related to this, the sd-event.h API gained two new calls\n          sd_event_source_send_child_signal() (for sending a signal to a\n          watched process) and sd_event_source_get_child_process_own() (for\n          marking a process so that it is killed automatically whenever the\n          event source watching it is freed).\n\n        * systemd-networkd gained support for configuring Token Bucket Filter\n          (TBF) parameters in its qdisc configuration support. Similarly,\n          support for Stochastic Fairness Queuing (SFQ), Controlled-Delay\n          Active Queue Management (CoDel), and Fair Queue (FQ) has been added.\n\n        * systemd-networkd gained support for Intermediate Functional Block\n          (IFB) network devices.\n\n        * systemd-networkd gained support for configuring multi-path IP routes,\n          using the new MultiPathRoute= setting in the [Route] section.\n\n        * systemd-networkd's DHCPv4 client has been updated to support a new\n          SendDecline= option. If enabled, duplicate address detection is done\n          after a DHCP offer is received from the server. If a conflict is\n          detected, the address is declined. The DHCPv4 client also gained\n          support for a new RouteMTUBytes= setting that allows to configure the\n          MTU size to be used for routes generated from DHCPv4 leases.\n\n        * The PrefixRoute= setting in systemd-networkd's [Address] section of\n          .network files has been deprecated, and replaced by AddPrefixRoute=,\n          with its sense inverted.\n\n        * The Gateway= setting of [Route] sections of .network files gained\n          support for a special new value \"_dhcp\". If set, the configured\n          static route uses the gateway host configured via DHCP.\n\n        * New User= and SuppressPrefixLength= settings have been implemented\n          for the [RoutingPolicyRule] section of .network files to configure\n          source routing based on UID ranges and prefix length, respectively.\n\n        * The Type= match property of .link files has been generalized to\n          always match the device type shown by 'networkctl status', even for\n          devices where udev does not set DEVTYPE=. This allows e.g. Type=ether\n          to be used.\n\n        * sd-bus gained a new API call sd_bus_message_sensitive() that marks a\n          D-Bus message object as \"sensitive\". Those objects are erased from\n          memory when they are freed. This concept is intended to be used for\n          messages that contain security sensitive data. A new flag\n          SD_BUS_VTABLE_SENSITIVE has been introduced as well to mark methods\n          in sd-bus vtables, causing any incoming and outgoing messages of\n          those methods to be implicitly marked as \"sensitive\".\n\n        * sd-bus gained a new API call sd_bus_message_dump() for dumping the\n          contents of a message (or parts thereof) to standard output for\n          debugging purposes.\n\n        * systemd-sysusers gained support for creating users with the primary\n          group named differently than the user.\n\n        * systemd-growfs (i.e. the x-systemd.growfs mount option in /etc/fstab)\n          gained support for growing XFS partitions. Previously it supported\n          only ext4 and btrfs partitions.\n\n        * The support for /etc/crypttab gained a new x-initrd.attach option. If\n          set, the specified encrypted volume is unlocked already in the\n          initrd. This concept corresponds to the x-initrd.mount option in\n          /etc/fstab.\n\n        * systemd-cryptsetup gained native support for unlocking encrypted\n          volumes utilizing PKCS#11 smartcards, i.e. for example to bind\n          encryption of volumes to YubiKeys. This is exposed in the new\n          pkcs11-uri= option in /etc/crypttab.\n\n        * The /etc/fstab support in systemd now supports two new mount options\n          x-systemd.{required,wanted}-by=, for explicitly configuring the units\n          that the specified mount shall be pulled in by, in place of\n          the usual local-fs.target/remote-fs.target.\n\n        * The https://systemd.io/ web site has been relaunched, directly\n          populated with most of the documentation included in the systemd\n          repository. systemd also acquired a new logo, thanks to Tobias\n          Bernard.\n\n        * systemd-udevd gained support for managing \"alternative\" network\n          interface names, as supported by new Linux kernels. For the first\n          time this permits assigning multiple (and longer!) names to a network\n          interface. systemd-udevd will now by default assign the names\n          generated via all supported naming schemes to each interface. This\n          may be further tweaked with .link files and the AlternativeName= and\n          AlternativeNamesPolicy= settings. Other components of systemd have\n          been updated to support the new alternative names wherever\n          appropriate. For example, systemd-nspawn will now generate\n          alternative interface names for the host-facing side of container\n          veth links based on the full container name without truncation.\n\n        * systemd-nspawn interface naming logic has been updated in another way\n          too: if the main interface name (i.e. as opposed to new-style\n          \"alternative\" names) based on the container name is truncated, a\n          simple hashing scheme is used to give different interface names to\n          multiple containers whose names all begin with the same prefix. Since\n          this changes the primary interface names pointing to containers if\n          truncation happens, the old scheme may still be requested by\n          selecting an older naming scheme, via the net.naming_scheme= kernel\n          command line option.\n\n        * PrivateUsers= in service files now works in services run by the\n          systemd --user per-user instance of the service manager.\n\n        * A new per-service sandboxing option ProtectClock= has been added that\n          locks down write access to the system clock. It takes away device\n          node access to /dev/rtc as well as the system calls that set the\n          system clock and the CAP_SYS_TIME and CAP_WAKE_ALARM capabilities.\n          Note that this option does not affect access to auxiliary services\n          that allow changing the clock, for example access to\n          systemd-timedated.\n\n        * The systemd-id128 tool gained a new \"show\" verb for listing or\n          resolving a number of well-known UUIDs/128-bit IDs, currently mostly\n          GPT partition table types.\n\n        * The Discoverable Partitions Specification has been updated to support\n          /var and /var/tmp partition discovery. Support for this has been\n          added to systemd-gpt-auto-generator. For details see:\n\n          https://systemd.io/DISCOVERABLE_PARTITIONS\n\n        * \"systemctl list-unit-files\" has been updated to show a new column\n          with the suggested enablement state based on the vendor preset files\n          for the respective units.\n\n        * \"systemctl\" gained a new option \"--with-dependencies\". If specified\n          commands such as \"systemctl status\" or \"systemctl cat\" will now show\n          all specified units along with all units they depend on.\n\n        * networkctl gained support for showing per-interface logs in its\n          \"status\" output.\n\n        * systemd-networkd-wait-online gained support for specifying the maximum\n          operational state to wait for, and to wait for interfaces to\n          disappear.\n\n        * The [Match] section of .link and .network files now supports a new\n          option PermanentMACAddress= which may be used to check against the\n          permanent MAC address of a network device even if a randomized MAC\n          address is used.\n\n        * The [TrafficControlQueueingDiscipline] section in .network files has\n          been renamed to [NetworkEmulator] with the \"NetworkEmulator\" prefix\n          dropped from the individual setting names.\n\n        * Any .link and .network files that have an empty [Match] section (this\n          also includes empty and commented-out files) will now be\n          rejected. systemd-udev and systemd-networkd started warning about\n          such files in version 243.\n\n        * systemd-logind will now validate access to the operation of changing\n          the virtual terminal via a polkit action. By default, only users\n          with at least one session on a local VT are granted permission.\n\n        * When systemd sets up PAM sessions that invoked service processes\n          shall run in, the pam_setcred() API is now invoked, thus permitting\n          PAM modules to set additional credentials for the processes.\n\n        * portablectl attach/detach verbs now accept --now and --enable options\n          to combine attachment with enablement and invocation, or detachment\n          with stopping and disablement.\n\n        * UPGRADE ISSUE: a bug where some jobs were trimmed as redundant was\n          fixed, which in turn exposed bugs in unit configuration of services\n          which have Type=oneshot and should only run once, but do not have\n          RemainAfterExit=yes set. Without RemainAfterExit=yes, a one-shot\n          service may be started again after exiting successfully, for example\n          as a dependency in another transaction. Affected services included\n          some internal systemd services (most notably\n          systemd-vconsole-setup.service, which was updated to have\n          RemainAfterExit=yes), and plymouth-start.service. Please ensure that\n          plymouth has been suitably updated or patched before upgrading to\n          this systemd release. See\n          https://bugzilla.redhat.com/show_bug.cgi?id=1807771 for some\n          additional discussion.\n\n        Contributions from: AJ Bagwell, Alin Popa, Andreas Rammhold, Anita\n        Zhang, Ansgar Burchardt, Antonio Russo, Arian van Putten, Ashley Davis,\n        Balint Reczey, Bart Willems, Bastien Nocera, Benjamin Dahlhoff, Charles\n        (Chas) Williams, cheese1, Chris Down, Chris Murphy, Christian Ehrhardt,\n        Christian G√∂ttsche, cvoinf, Daan De Meyer, Daniele Medri, Daniel Rusek,\n        Daniel Shahaf, Dann Frazier, Dan Streetman, Dariusz Gadomski, David\n        Michael, Dimitri John Ledkov, Emmanuel Bourg, Evgeny Vereshchagin,\n        ezst036, Felipe Sateler, Filipe Brandenburger, Florian Klink, Franck\n        Bui, Fran Dieguez, Frantisek Sumsal, Greg \"GothAck\" Miell, Guilhem\n        Lettron, Guillaume Dou√©zan-Grard, Hans de Goede, HATAYAMA Daisuke, Iain\n        Lane, James Buren, Jan Alexander Steffens (heftig), J√©r√©my Rosen, Jin\n        Park, Jun'ichi Nomura, Kai Krakow, Kevin Kuehler, Kevin P. Fleming,\n        Lennart Poettering, Leonid Bloch, Leonid Evdokimov, lothrond, Luca\n        Boccassi, Lukas K, Lynn Kirby, Mario Limonciello, Mark Deneen, Matthew\n        Leeds, Michael Biebl, Michal Koutn√Ω, Michal SekletaÃÅr, Mike Auty, Mike\n        Gilbert, mtron, nabijaczleweli, Na√Øm Favier, Nate Jones, Norbert Lange,\n        Oliver Giles, Paul Davey, Paul Menzel, Peter Hutterer, Piotr DrƒÖg, Rafa\n        Couto, Raphael, rhn, Robert Scheck, Rocka, Romain Naour, Ryan Attard,\n        Sascha Dewald, Shengjing Zhu, Slava Kardakov, Spencer Michaels, Sylvain\n        Plantefeve, Stanislav Angeloviƒç, Susant Sahani, Thomas Haller, Thomas\n        Schmitt, Timo Schl√º√üler, Timo Wilken, Tobias Bernard, Tobias Klauser,\n        Tobias Stoeckmann, Topi Miettinen, tsia, WataruMatsuoka, Wieland\n        Hoffmann, Wilhelm Schuster, Will Fleming, xduugu, Yong Cong Sin, Yuri\n        Chornoivan, Yu Watanabe, Zach Smith, Zbigniew Jƒôdrzejewski-Szmek, Zeyu\n        DONG\n\n        ‚Äì Warsaw, 2020-03-06\n\nCHANGES WITH 244:\n\n        * Support for the cpuset cgroups v2 controller has been added.\n          Processes may be restricted to specific CPUs using the new\n          AllowedCPUs= setting, and to specific memory NUMA nodes using the new\n          AllowedMemoryNodes= setting.\n\n        * The signal used in restart jobs (as opposed to e.g. stop jobs) may\n          now be configured using a new RestartKillSignal= setting. This\n          allows units which signals to request termination to implement\n          different behaviour when stopping in preparation for a restart.\n\n        * \"systemctl clean\" may now be used also for socket, mount, and swap\n          units.\n\n        * systemd will also read configuration options from the EFI variable\n          SystemdOptions. This may be used to configure systemd behaviour when\n          modifying the kernel command line is inconvenient, but configuration\n          on disk is read too late, for example for the options related to\n          cgroup hierarchy setup. 'bootctl systemd-efi-options' may be used to\n          set the EFI variable.\n\n        * systemd will now disable printk ratelimits in early boot. This should\n          allow us to capture more logs from the early boot phase where normal\n          storage is not available and the kernel ring buffer is used for\n          logging. Configuration on the kernel command line has higher priority\n          and overrides the systemd setting.\n\n          systemd programs which log to /dev/kmsg directly use internal\n          ratelimits to prevent runaway logging. (Normally this is only used\n          during early boot, so in practice this change has very little\n          effect.)\n\n        * Unit files now support top level dropin directories of the form\n          <unit_type>.d/ (e.g. service.d/) that may be used to add configuration\n          that affects all corresponding unit files.\n\n        * systemctl gained support for 'stop --job-mode=triggering' which will\n          stop the specified unit and any units which could trigger it.\n\n        * Unit status display now includes units triggering and triggered by\n          the unit being shown.\n\n        * The RuntimeMaxSec= setting is now supported by scopes, not just\n          .service units. This is particularly useful for PAM sessions which\n          create a scope unit for the user login. systemd.runtime_max_sec=\n          setting may used with the pam_systemd module to limit the duration\n          of the PAM session, for example for time-limited logins.\n\n        * A new @pkey system call group is now defined to make it easier to\n          allow-list memory protection syscalls for containers and services\n          which need to use them.\n\n        * systemd-udevd: removed the 30s timeout for killing stale workers on\n          exit. systemd-udevd now waits for workers to finish. The hard-coded\n          exit timeout of 30s was too short for some large installations, where\n          driver initialization could be prematurely interrupted during initrd\n          processing if the root file system had been mounted and init was\n          preparing to switch root. If udevd is run without systemd and workers\n          are hanging while udevd receives an exit signal, udevd will now exit\n          when udev.event_timeout is reached for the last hanging worker. With\n          systemd, the exit timeout can additionally be configured using\n          TimeoutStopSec= in systemd-udevd.service.\n\n        * udev now provides a program (fido_id) that identifies FIDO CTAP1\n          (\"U2F\")/CTAP2 security tokens based on the usage declared in their\n          report and descriptor and outputs suitable environment variables.\n          This replaces the externally maintained allow lists of all known\n          security tokens that were used previously.\n\n        * Automatically generated autosuspend udev rules for allow-listed\n          devices have been imported from the Chromium OS project. This should\n          improve power saving with many more devices.\n\n        * udev gained a new \"CONST{key}=value\" setting that allows matching\n          against system-wide constants without forking a helper binary.\n          Currently \"arch\" and \"virt\" keys are supported.\n\n        * udev now opens CDROMs in non-exclusive mode when querying their\n          capabilities. This should fix issues where other programs trying to\n          use the CDROM cannot gain access to it, but carries a risk of\n          interfering with programs writing to the disk, if they did not open\n          the device in exclusive mode as they should.\n\n        * systemd-networkd does not create a default route for IPv4 link local\n          addressing anymore. The creation of the route was unexpected and was\n          breaking routing in various cases, but people who rely on it being\n          created implicitly will need to adjust. Such a route may be requested\n          with DefaultRouteOnDevice=yes.\n\n          Similarly, systemd-networkd will not assign a link-local IPv6 address\n          when IPv6 link-local routing is not enabled.\n\n        * Receive and transmit buffers may now be configured on links with\n          the new RxBufferSize= and TxBufferSize= settings.\n\n        * systemd-networkd may now advertise additional IPv6 routes. A new\n          [IPv6RoutePrefix] section with Route= and LifetimeSec= options is\n          now supported.\n\n        * systemd-networkd may now configure \"next hop\" routes using the\n          [NextHop] section and Gateway= and Id= settings.\n\n        * systemd-networkd will now retain DHCP config on restarts by default\n          (but this may be overridden using the KeepConfiguration= setting).\n          The default for SendRelease= has been changed to true.\n\n        * The DHCPv4 client now uses the OPTION_INFORMATION_REFRESH_TIME option\n          received from the server.\n\n          The client will use the received SIP server list if UseSIP=yes is\n          set.\n\n          The client may be configured to request specific options from the\n          server using a new RequestOptions= setting.\n\n          The client may be configured to send arbitrary options to the server\n          using a new SendOption= setting.\n\n          A new IPServiceType= setting has been added to configure the \"IP\n          service type\" value used by the client.\n\n        * The DHCPv6 client learnt a new PrefixDelegationHint= option to\n          request prefix hints in the DHCPv6 solicitation.\n\n        * The DHCPv4 server may be configured to send arbitrary options using\n          a new SendOption= setting.\n\n        * The DHCPv4 server may now be configured to emit SIP server list using\n          the new EmitSIP= and SIP= settings.\n\n        * systemd-networkd and networkctl may now renew DHCP leases on demand.\n          networkctl has a new 'networkctl renew' verb.\n\n        * systemd-networkd may now reconfigure links on demand. networkctl\n          gained two new verbs: \"reload\" will reload the configuration, and\n          \"reconfigure DEVICE‚Ä¶\" will reconfigure one or more devices.\n\n        * .network files may now match on SSID and BSSID of a wireless network,\n          i.e. the access point name and hardware address using the new SSID=\n          and BSSID= options. networkctl will display the current SSID and\n          BSSID for wireless links.\n\n          .network files may also match on the wireless network type using the\n          new WLANInterfaceType= option.\n\n        * systemd-networkd now includes default configuration that enables\n          link-local addressing when connected to an ad-hoc wireless network.\n\n        * systemd-networkd may configure the Traffic Control queueing\n          disciplines in the kernel using the new\n          [TrafficControlQueueingDiscipline] section and Parent=,\n          NetworkEmulatorDelaySec=, NetworkEmulatorDelayJitterSec=,\n          NetworkEmulatorPacketLimit=, NetworkEmulatorLossRate=,\n          NetworkEmulatorDuplicateRate= settings.\n\n        * systemd-tmpfiles gained a new w+ setting to append to files.\n\n        * systemd-analyze dump will now report when the memory configuration in\n          the kernel does not match what systemd has configured (usually,\n          because some external program has modified the kernel configuration\n          on its own).\n\n        * systemd-analyze gained a new --base-time= switch instructs the\n          'calendar' verb to resolve times relative to that timestamp instead\n          of the present time.\n\n        * journalctl --update-catalog now produces deterministic output (making\n          reproducible image builds easier).\n\n        * A new devicetree-overlay setting is now documented in the Boot Loader\n          Specification.\n\n        * The default value of the WatchdogSec= setting used in systemd\n          services (the ones bundled with the project itself) may be set at\n          configuration time using the -Dservice-watchdog= setting. If set to\n          empty, the watchdogs will be disabled.\n\n        * systemd-resolved validates IP addresses in certificates now when GnuTLS\n          is being used.\n\n        * libcryptsetup >= 2.0.1 is now required.\n\n        * A configuration option -Duser-path= may be used to override the $PATH\n          used by the user service manager. The default is again to use the same\n          path as the system manager.\n\n        * The systemd-id128 tool gained a new switch \"-u\" (or \"--uuid\") for\n          outputting the 128-bit IDs in UUID format (i.e. in the \"canonical\n          representation\").\n\n        * Service units gained a new sandboxing option ProtectKernelLogs= which\n          makes sure the program cannot get direct access to the kernel log\n          buffer anymore, i.e. the syslog() system call (not to be confused\n          with the API of the same name in libc, which is not affected), the\n          /proc/kmsg and /dev/kmsg nodes and the CAP_SYSLOG capability are made\n          inaccessible to the service. It's recommended to enable this setting\n          for all services that should not be able to read from or write to the\n          kernel log buffer, which are probably almost all.\n\n        Contributions from: Aaron Plattner, Alcaro, Anita Zhang, Balint Reczey,\n        Bastien Nocera, Baybal Ni, Benjamin Bouvier, Benjamin Gilbert, Carlo\n        Teubner, cbzxt, Chen Qi, Chris Down, Christian Rebischke, Claudio\n        Zumbo, ClydeByrdIII, crashfistfight, Cyprien Laplace, Daniel Edgecumbe,\n        Daniel Gorbea, Daniel Rusek, Daniel Stuart, Dan Streetman, David\n        Pedersen, David Tardon, Dimitri John Ledkov, Dominique Martinet, Donald\n        A. Cupp Jr, Evgeny Vereshchagin, Fabian Henneke, Filipe Brandenburger,\n        Franck Bui, Frantisek Sumsal, Georg M√ºller, Hans de Goede, Haochen\n        Tong, HATAYAMA Daisuke, Iwan Timmer, Jan Janssen, Jan Kundr√°t, Jan\n        Synacek, Jan Tojnar, Jay Strict, J√©r√©my Rosen, J√≥hann B. Gu√∞mundsson,\n        Jonas Jelten, Jonas Thelemann, Justin Trudell, J. Xing, Kai-Heng Feng,\n        Kenneth D'souza, Kevin Becker, Kevin Kuehler, Lennart Poettering,\n        L√©onard G√©rard, Lorenz Bauer, Luca Boccassi, Maciej Stanczew, Mario\n        Limonciello, Marko Myllynen, Mark Stosberg, Martin Wilck, matthiasroos,\n        Michael Biebl, Michael Olbrich, Michael Tretter, Michal Sekletar,\n        Michal SekletaÃÅr, Michal Suchanek, Mike Gilbert, Mike Kazantsev, Nicolas\n        Douma, nikolas, Norbert Lange, pan93412, Pascal de Bruijn, Paul Menzel,\n        Pavel Hrdina, Peter Wu, Philip Withnall, Piotr DrƒÖg, Rafael Fontenelle,\n        Renaud M√©trich, Riccardo Schirone, RoadrunnerWMC, Ronan Pigott, Ryan\n        Attard, Sebastian Wick, Serge, Siddharth Chandrasekara, Steve Ramage,\n        Steve Traylen, Susant Sahani, Thibault N√©lis, Tim Teichmann, Tom\n        Fitzhenry, Tommy J, Torsten Hilbrich, Vito Caputo, ypf791, Yu Watanabe,\n        Zach Smith, Zbigniew Jƒôdrzejewski-Szmek\n\n        ‚Äì Warsaw, 2019-11-29\n\nCHANGES WITH 243:\n\n        * This release enables unprivileged programs (i.e. requiring neither\n          setuid nor file capabilities) to send ICMP Echo (i.e. ping) requests\n          by turning on the \"net.ipv4.ping_group_range\" sysctl of the Linux\n          kernel for the whole UNIX group range, i.e. all processes. This\n          change should be reasonably safe, as the kernel support for it was\n          specifically implemented to allow safe access to ICMP Echo for\n          processes lacking any privileges. If this is not desirable, it can be\n          disabled again by setting the parameter to \"1 0\".\n\n        * Previously, filters defined with SystemCallFilter= would have the\n          effect that any calling of an offending system call would terminate\n          the calling thread. This behaviour never made much sense, since\n          killing individual threads of unsuspecting processes is likely to\n          create more problems than it solves. With this release the default\n          action changed from killing the thread to killing the whole\n          process. For this to work correctly both a kernel version (>= 4.14)\n          and a libseccomp version (>= 2.4.0) supporting this new seccomp\n          action is required. If an older kernel or libseccomp is used the old\n          behaviour continues to be used. This change does not affect any\n          services that have no system call filters defined, or that use\n          SystemCallErrorNumber= (and thus see EPERM or another error instead\n          of being killed when calling an offending system call). Note that\n          systemd documentation always claimed that the whole process is\n          killed. With this change behaviour is thus adjusted to match the\n          documentation.\n\n        * On 64 bit systems, the \"kernel.pid_max\" sysctl is now bumped to\n          4194304 by default, i.e. the full 22bit range the kernel allows, up\n          from the old 16-bit range. This should improve security and\n          robustness, as PID collisions are made less likely (though certainly\n          still possible). There are rumours this might create compatibility\n          problems, though at this moment no practical ones are known to\n          us. Downstream distributions are hence advised to undo this change in\n          their builds if they are concerned about maximum compatibility, but\n          for everybody else we recommend leaving the value bumped. Besides\n          improving security and robustness this should also simplify things as\n          the maximum number of allowed concurrent tasks was previously bounded\n          by both \"kernel.pid_max\" and \"kernel.threads-max\" and now effectively\n          only a single knob is left (\"kernel.threads-max\"). There have been\n          concerns that usability is affected by this change because larger PID\n          numbers are harder to type, but we believe the change from 5 digits\n          to 7 digits doesn't hamper usability.\n\n        * MemoryLow= and MemoryMin= gained hierarchy-aware counterparts,\n          DefaultMemoryLow= and DefaultMemoryMin=, which can be used to\n          hierarchically set default memory protection values for a particular\n          subtree of the unit hierarchy.\n\n        * Memory protection directives can now take a value of zero, allowing\n          explicit opting out of a default value propagated by an ancestor.\n\n        * systemd now defaults to the \"unified\" cgroup hierarchy setup during\n          build-time, i.e. -Ddefault-hierarchy=unified is now the build-time\n          default. Previously, -Ddefault-hierarchy=hybrid was the default. This\n          change reflects the fact that cgroupsv2 support has matured\n          substantially in both systemd and in the kernel, and is clearly the\n          way forward. Downstream production distributions might want to\n          continue to use -Ddefault-hierarchy=hybrid (or even =legacy) for\n          their builds as unfortunately the popular container managers have not\n          caught up with the kernel API changes.\n\n        * Man pages are not built by default anymore (html pages were already\n          disabled by default), to make development builds quicker. When\n          building systemd for a full installation with documentation, meson\n          should be called with -Dman=true and/or -Dhtml=true as appropriate.\n          The default was changed based on the assumption that quick one-off or\n          repeated development builds are much more common than full optimized\n          builds for installation, and people need to pass various other\n          options to when doing \"proper\" builds anyway, so the gain from making\n          development builds quicker is bigger than the one time disruption for\n          packagers.\n\n          Two scripts are created in the *build* directory to generate and\n          preview man and html pages on demand, e.g.:\n\n          build/man/man systemctl\n          build/man/html systemd.index\n\n        * libidn2 is used by default if both libidn2 and libidn are installed.\n          Please use -Dlibidn=true if libidn is preferred.\n\n        * The D-Bus \"wire format\" of the CPUAffinity= attribute is changed on\n          big-endian machines. Before, bytes were written and read in native\n          machine order as exposed by the native libc __cpu_mask interface.\n          Now, little-endian order is always used (CPUs 0‚Äì7 are described by\n          bits 0‚Äì7 in byte 0, CPUs 8‚Äì15 are described by byte 1, and so on).\n          This change fixes D-Bus calls that cross endianness boundary.\n\n          The presentation format used for CPUAffinity= by \"systemctl show\" and\n          \"systemd-analyze dump\" is changed to present CPU indices instead of\n          the raw __cpu_mask bitmask. For example, CPUAffinity=0-1 would be\n          shown as CPUAffinity=03000000000000000000000000000‚Ä¶ (on\n          little-endian) or CPUAffinity=00000000000000300000000000000‚Ä¶ (on\n          64-bit big-endian), and is now shown as CPUAffinity=0-1, matching the\n          input format. The maximum integer that will be printed in the new\n          format is 8191 (four digits), while the old format always used a very\n          long number (with the length varying by architecture), so they can be\n          unambiguously distinguished.\n\n        * /usr/sbin/halt.local is no longer supported. Implementation in\n          distributions was inconsistent and it seems this functionality was\n          very rarely used.\n\n          To replace this functionality, users should:\n          - either define a new unit and make it a dependency of final.target\n            (systemctl add-wants final.target my-halt-local.service)\n          - or move the shutdown script to /usr/lib/systemd/system-shutdown/\n            and ensure that it accepts \"halt\", \"poweroff\", \"reboot\", and\n            \"kexec\" as an argument, see the description in systemd-shutdown(8).\n\n        * When a [Match] section in .link or .network file is empty (contains\n          no match patterns), a warning will be emitted. Please add any \"match\n          all\" pattern instead, e.g. OriginalName=* or Name=* in case all\n          interfaces should really be matched.\n\n        * A new setting NUMAPolicy= may be used to set process memory\n          allocation policy. This setting can be specified in\n          /etc/systemd/system.conf and hence will set the default policy for\n          PID1. The default policy can be overridden on a per-service\n          basis. The related setting NUMAMask= is used to specify NUMA node\n          mask that should be associated with the selected policy.\n\n        * PID 1 will now listen to Out-Of-Memory (OOM) events the kernel\n          generates when processes it manages are reaching their memory limits,\n          and will place their units in a special state, and optionally kill or\n          stop the whole unit.\n\n        * The service manager will now expose bus properties for the IO\n          resources used by units. This information is also shown in \"systemctl\n          status\" now (for services that have IOAccounting=yes set). Moreover,\n          the IO accounting data is included in the resource log message\n          generated whenever a unit stops.\n\n        * Units may now configure an explicit timeout to wait for when killed\n          with SIGABRT, for example when a service watchdog is hit. Previously,\n          the regular TimeoutStopSec= timeout was applied in this case too ‚Äî\n          now a separate timeout may be set using TimeoutAbortSec=.\n\n        * Services may now send a special WATCHDOG=trigger message with\n          sd_notify() to trigger an immediate \"watchdog missed\" event, and thus\n          trigger service termination. This is useful both for testing watchdog\n          handling, but also for defining error paths in services, that shall\n          be handled the same way as watchdog events.\n\n        * There are two new per-unit settings IPIngressFilterPath= and\n          IPEgressFilterPath= which allow configuration of a BPF program\n          (usually by specifying a path to a program uploaded to /sys/fs/bpf/)\n          to apply to the IP packet ingress/egress path of all processes of a\n          unit. This is useful to allow running systemd services with BPF\n          programs set up externally.\n\n        * systemctl gained a new \"clean\" verb for removing the state, cache,\n          runtime or logs directories of a service while it is terminated. The\n          new verb may also be used to remove the state maintained on disk for\n          timer units that have Persistent= configured.\n\n        * During the last phase of shutdown systemd will now automatically\n          increase the log level configured in the \"kernel.printk\" sysctl so\n          that any relevant loggable events happening during late shutdown are\n          made visible. Previously, loggable events happening so late during\n          shutdown were generally lost if the \"kernel.printk\" sysctl was set to\n          high thresholds, as regular logging daemons are terminated at that\n          time and thus nothing is written to disk.\n\n        * If processes terminated during the last phase of shutdown do not exit\n          quickly systemd will now show their names after a short time, to make\n          debugging easier. After a longer timeout they are forcibly killed,\n          as before.\n\n        * journalctl (and the other tools that display logs) will now highlight\n          warnings in yellow (previously, both LOG_NOTICE and LOG_WARNING where\n          shown in bright bold, now only LOG_NOTICE is). Moreover, audit logs\n          are now shown in blue color, to separate them visually from regular\n          logs. References to configuration files are now turned into clickable\n          links on terminals that support that.\n\n        * systemd-journald will now stop logging to /var/log/journal during\n          shutdown when /var/ is on a separate mount, so that it can be\n          unmounted safely during shutdown.\n\n        * systemd-resolved gained support for a new 'strict' DNS-over-TLS mode.\n\n        * systemd-resolved \"Cache=\" configuration option in resolved.conf has\n          been extended to also accept the 'no-negative' value. Previously,\n          only a boolean option was allowed (yes/no), having yes as the\n          default. If this option is set to 'no-negative', negative answers are\n          not cached while the old cache heuristics are used positive answers.\n          The default remains unchanged.\n\n        * The predictable naming scheme for network devices now supports\n          generating predictable names for \"netdevsim\" devices.\n\n          Moreover, the \"en\" prefix was dropped from the ID_NET_NAME_ONBOARD\n          udev property.\n\n          Those two changes form a new net.naming_scheme= entry.  Distributions\n          which want to preserve naming stability may want to set the\n          -Ddefault-net-naming-scheme= configuration option.\n\n        * systemd-networkd now supports MACsec, nlmon, IPVTAP and Xfrm\n          interfaces natively.\n\n        * systemd-networkd's bridge FDB support now allows configuration of a\n          destination address for each entry (Destination=), as well as the\n          VXLAN VNI (VNI=), as well as an option to declare what an entry is\n          associated with (AssociatedWith=).\n\n        * systemd-networkd's DHCPv4 support now understands a new MaxAttempts=\n          option for configuring the maximum number of DHCP lease requests. It\n          also learnt a new BlackList= option for deny-listing DHCP servers (a\n          similar setting has also been added to the IPv6 RA client), as well\n          as a SendRelease= option for configuring whether to send a DHCP\n          RELEASE message when terminating.\n\n        * systemd-networkd's DHCPv4 and DHCPv6 stacks can now be configured\n          separately in the [DHCPv4] and [DHCPv6] sections.\n\n        * systemd-networkd's DHCP support will now optionally create an\n          implicit host route to the DNS server specified in the DHCP lease, in\n          addition to the routes listed explicitly in the lease. This should\n          ensure that in multi-homed systems DNS traffic leaves the systems on\n          the interface that acquired the DNS server information even if other\n          routes such as default routes exist. This behaviour may be turned on\n          with the new RoutesToDNS= option.\n\n        * systemd-networkd's VXLAN support gained a new option\n          GenericProtocolExtension= for enabling VXLAN Generic Protocol\n          Extension support, as well as IPDoNotFragment= for setting the IP\n          \"Don't fragment\" bit on outgoing packets. A similar option has been\n          added to the GENEVE support.\n\n        * In systemd-networkd's [Route] section you may now configure\n          FastOpenNoCookie= for "
        },
        {
          "name": "README",
          "type": "blob",
          "size": 21.4853515625,
          "content": "systemd System and Service Manager\n\nWEB SITE:\n        https://systemd.io\n\nGIT:\n        git@github.com:systemd/systemd.git\n        https://github.com/systemd/systemd\n\nMAILING LIST:\n        https://lists.freedesktop.org/mailman/listinfo/systemd-devel\n\nIRC:\n        #systemd on irc.libera.chat\n\nBUG REPORTS:\n        https://github.com/systemd/systemd/issues\n\nOLDER DOCUMENTATION:\n        https://0pointer.de/blog/projects/systemd.html\n        https://www.freedesktop.org/wiki/Software/systemd\n\nAUTHOR:\n        Lennart Poettering\n        Kay Sievers\n        ...and many others\n\nLICENSE:\n        LGPL-2.1-or-later for all code, exceptions noted in LICENSES/README.md\n\nREQUIREMENTS:\n        Linux kernel ‚â• 3.15 for timerfd_create() CLOCK_BOOTTIME support\n                     ‚â• 3.17 for memfd_create() and getrandom()\n                     ‚â• 4.3 for ambient capabilities\n                     ‚â• 4.5 for pids controller in cgroup v2\n                     ‚â• 4.6 for cgroup namespaces\n                     ‚â• 4.9 for RENAME_NOREPLACE support in vfat\n                     ‚â• 4.10 for cgroup-bpf egress and ingress hooks\n                     ‚â• 4.11 for nsfs NS_GET_NSTYPE\n                     ‚â• 4.15 for cgroup-bpf device hook and cpu controller in cgroup v2\n                     ‚â• 4.17 for cgroup-bpf socket address hooks and /sys/power/resume_offset\n                     ‚â• 4.20 for PSI (used by systemd-oomd)\n                     ‚â• 5.2 for cgroup freezer\n                     ‚â• 5.3 for bounded loops in BPF program\n                     ‚â• 5.4 for pidfd, new mount API, and signed Verity images\n\n        ‚õî Kernel versions below 5.4 (\"minimum baseline\") are not supported at all,\n           and are missing required functionality as listed above.\n           # FIXME: actually drop compat glue before v258\n\n        Linux kernel ‚â• 5.6 for getrandom() GRND_INSECURE\n                     ‚â• 5.7 for CLONE_INTO_CGROUP, BPF links and the BPF LSM hook\n\n        ‚ö†Ô∏è Kernel versions below 5.7 (\"recommended baseline\") have significant gaps\n           in functionality and are not recommended for use with this version\n           of systemd. Taint flag 'old-kernel' will be set. systemd will most likely\n           still function, but upstream support and testing are limited.\n\n        Linux kernel ‚â• 5.8 for LOOP_CONFIGURE and STATX_ATTR_MOUNT_ROOT\n                     ‚â• 5.9 for close_range()\n                     ‚â• 5.14 for cgroup.kill\n                     ‚â• 6.3 for MFD_EXEC/MFD_NOEXEC_SEAL and tmpfs noswap option\n                     ‚â• 6.5 for name_to_handle_at() AT_HANDLE_FID, SO_PEERPIDFD/SO_PASSPIDFD,\n                               and MOVE_MOUNT_BENEATH\n                     ‚â• 6.9 for pidfs\n\n        ‚úÖ systemd utilizes several new kernel APIs, but will fall back gracefully\n           when unavailable.\n\n        Kernel Config Options:\n          CONFIG_DEVTMPFS\n          CONFIG_CGROUPS (it is OK to disable all controllers)\n          CONFIG_INOTIFY_USER\n          CONFIG_SIGNALFD\n          CONFIG_TIMERFD\n          CONFIG_EPOLL\n          CONFIG_UNIX (it requires CONFIG_NET, but every other flag in it is not necessary)\n          CONFIG_SYSFS\n          CONFIG_PROC_FS\n          CONFIG_FHANDLE (libudev, mount and bind mount handling)\n\n        udev will fail to work with the legacy sysfs layout:\n          CONFIG_SYSFS_DEPRECATED=n\n\n        Legacy hotplug slows down the system and confuses udev:\n          CONFIG_UEVENT_HELPER_PATH=\"\"\n\n        Userspace firmware loading is not supported and should be disabled in\n        the kernel:\n          CONFIG_FW_LOADER_USER_HELPER=n\n\n        Some udev rules and virtualization detection relies on it:\n          CONFIG_DMIID\n\n        Support for some SCSI devices serial number retrieval, to create\n        additional symlinks in /dev/disk/ and /dev/tape:\n          CONFIG_BLK_DEV_BSG\n\n        Required for PrivateNetwork= in service units:\n          CONFIG_NET_NS\n        Note that systemd-localed.service and other systemd units use\n        PrivateNetwork so this is effectively required.\n\n        Required for PrivateUsers= in service units:\n          CONFIG_USER_NS\n\n        Optional but strongly recommended:\n          CONFIG_IPV6\n          CONFIG_AUTOFS_FS\n          CONFIG_TMPFS_XATTR\n          CONFIG_{TMPFS,EXT4_FS,XFS,BTRFS_FS,...}_POSIX_ACL\n          CONFIG_SECCOMP\n          CONFIG_SECCOMP_FILTER (required for seccomp support)\n          CONFIG_KCMP (for the kcmp() syscall, used to be under\n                       CONFIG_CHECKPOINT_RESTORE before ~5.12)\n          CONFIG_NET_SCHED\n          CONFIG_NET_SCH_FQ_CODEL\n\n        Required for CPUShares= in resource control unit settings:\n          CONFIG_CGROUP_SCHED\n          CONFIG_FAIR_GROUP_SCHED\n\n        Required for CPUQuota= in resource control unit settings:\n          CONFIG_CFS_BANDWIDTH\n\n        Required for IPAddressDeny=, IPAddressAllow=, IPIngressFilterPath=,\n        IPEgressFilterPath= in resource control unit settings unit settings:\n          CONFIG_BPF\n          CONFIG_BPF_SYSCALL\n          CONFIG_BPF_JIT\n          CONFIG_HAVE_EBPF_JIT\n          CONFIG_CGROUP_BPF\n\n        Required for SocketBind{Allow|Deny}=, RestrictNetworkInterfaces= in\n        resource control unit settings:\n          CONFIG_BPF\n          CONFIG_BPF_SYSCALL\n          CONFIG_BPF_JIT\n          CONFIG_HAVE_EBPF_JIT\n          CONFIG_CGROUP_BPF\n\n        For UEFI systems:\n          CONFIG_EFIVAR_FS\n          CONFIG_EFI_PARTITION\n\n        Required for signed Verity images support:\n          CONFIG_DM_VERITY_VERIFY_ROOTHASH_SIG\n        Required to verify signed Verity images using keys enrolled in the MOK\n        (Machine-Owner Key) and DB UEFI certificate stores:\n          CONFIG_DM_VERITY_VERIFY_ROOTHASH_SIG_SECONDARY_KEYRING\n          CONFIG_DM_VERITY_VERIFY_ROOTHASH_SIG_PLATFORM_KEYRING\n          CONFIG_IMA_ARCH_POLICY\n          CONFIG_INTEGRITY_MACHINE_KEYRING\n\n        Required for reading credentials from SMBIOS:\n          CONFIG_DMI\n          CONFIG_DMI_SYSFS\n\n        Required for RestrictFileSystems= in service units:\n          CONFIG_BPF\n          CONFIG_BPF_SYSCALL\n          CONFIG_BPF_LSM\n          CONFIG_DEBUG_INFO_BTF\n          CONFIG_LSM=\"...,bpf\" or kernel booted with lsm=\"...,bpf\".\n\n        We recommend to turn off Real-Time group scheduling in the kernel when\n        using systemd. RT group scheduling effectively makes RT scheduling\n        unavailable for most userspace, since it requires explicit assignment of\n        RT budgets to each unit whose processes making use of RT. As there's no\n        sensible way to assign these budgets automatically this cannot really be\n        fixed, and it's best to disable group scheduling hence:\n           CONFIG_RT_GROUP_SCHED=n\n\n        It's a good idea to disable the implicit creation of networking bonding\n        devices by the kernel networking bonding module, so that the\n        automatically created \"bond0\" interface doesn't conflict with any such\n        device created by systemd-networkd (or other tools). Ideally there would\n        be a kernel compile-time option for this, but there currently isn't. The\n        next best thing is to make this change through a modprobe.d drop-in.\n        This is shipped by default, see modprobe.d/systemd.conf.\n\n        Required for systemd-nspawn:\n          CONFIG_DEVPTS_MULTIPLE_INSTANCES or Linux kernel >= 4.7\n\n        Required for systemd-oomd:\n          CONFIG_PSI\n          CONFIG_MEMCG\n\n        Note that kernel auditing is broken when used with systemd's container\n        code. When using systemd in conjunction with containers, please make\n        sure to either turn off auditing at runtime using the kernel command\n        line option \"audit=0\", or turn it off at kernel compile time using:\n          CONFIG_AUDIT=n\n\n        If systemd is compiled with libseccomp support on architectures which do\n        not use socketcall() and where seccomp is supported (this effectively\n        means x86-64 and ARM, but excludes 32-bit x86!), then nspawn will now\n        install a work-around seccomp filter that makes containers boot even\n        with audit being enabled. This works correctly only on kernels 3.14 and\n        newer though. TL;DR: turn audit off, still.\n\n        glibc >= 2.16\n        libcap\n        libmount >= 2.30 (from util-linux)\n                (util-linux *must* be built without --enable-libmount-support-mtab)\n        libseccomp >= 2.3.1 (optional)\n        libblkid >= 2.24 (from util-linux) (optional)\n        libkmod >= 15 (optional)\n        PAM >= 1.1.2 (optional)\n        libcryptsetup (optional), >= 2.3.0 required for signed Verity images support\n        libaudit (optional)\n        libacl (optional)\n        libbpf >= 0.1.0 (optional)\n        libfdisk >= 2.32 (from util-linux) (optional)\n        libselinux (optional)\n        liblzma (optional)\n        liblz4 >= 1.3.0 / 130 (optional)\n        libzstd >= 1.4.0 (optional)\n        libgcrypt (optional)\n        libqrencode (optional)\n        libmicrohttpd (optional)\n        libidn2 or libidn (optional)\n        gnutls >= 3.1.4 (optional, >= 3.6.0 is required to support DNS-over-TLS with gnutls)\n        openssl >= 1.1.0 (optional, required to support DNS-over-TLS with openssl)\n        elfutils >= 158 (optional)\n        polkit (optional)\n        tzdata >= 2014f (optional)\n        pkg-config\n        gperf\n        docbook-xsl (optional, required for documentation)\n        xsltproc    (optional, required for documentation)\n        python >= 3.7 (required by meson too, >= 3.9 is required for ukify)\n        python-jinja2\n        python-pefile (optional, required for ukify)\n        python-lxml (optional, required to build the indices)\n        pyelftools (optional, required for systemd-boot)\n        meson >= 0.60.0\n        ninja\n        gcc >= 8.4\n        awk, sed, grep, and similar tools\n        clang >= 10.0, llvm >= 10.0 (optional, required to build BPF programs\n                from source code in C)\n\n        During runtime, you need the following additional\n        dependencies:\n\n        util-linux >= v2.27.1 required (including but not limited to: mount,\n                                        umount, swapon, swapoff, sulogin,\n                                        agetty, fsck)\n        dbus >= 1.4.0 (strictly speaking optional, but recommended)\n                NOTE: If using dbus < 1.9.18, you should override the default\n                policy directory (--with-dbuspolicydir=/etc/dbus-1/system.d).\n        polkit (optional)\n\n        To build in directory build/:\n          meson setup build/ && ninja -C build/\n\n        Any configuration options can be specified as -Darg=value... arguments\n        to meson. After the build directory is initially configured, meson will\n        refuse to run again, and options must be changed with:\n          meson configure -Darg=value build/\n        meson configure without any arguments will print out available options and\n        their current values.\n\n        Useful commands:\n          ninja -C build -v some/target\n          meson test -C build/\n          sudo meson install -C build/ --no-rebuild\n          DESTDIR=... meson install -C build/\n\n        A tarball can be created with:\n          v=250 && git archive --prefix=systemd-$v/ v$v | zstd >systemd-$v.tar.zstd\n\n        When systemd-hostnamed is used, it is strongly recommended to install\n        nss-myhostname to ensure that, in a world of dynamically changing\n        hostnames, the hostname stays resolvable under all circumstances. In\n        fact, systemd-hostnamed will warn if nss-myhostname is not installed.\n\n        nss-systemd must be enabled on systemd systems, as that's required for\n        DynamicUser= to work. Note that we ship services out-of-the-box that\n        make use of DynamicUser= now, hence enabling nss-systemd is not\n        optional.\n\n        Note that the build prefix for systemd must be /usr/. (Moreover, packages\n        systemd relies on ‚Äî such as D-Bus ‚Äî really should use the same prefix,\n        otherwise you are on your own.) Split-usr and unmerged-usr systems are no\n        longer supported, and moving everything under /usr/ is required. Systems\n        with a separate /usr/ partition must mount it before transitioning into it\n        (i.e.: from the initrd). For more information see:\n        https://systemd.io/SEPARATE_USR_IS_BROKEN\n        https://systemd.io/THE_CASE_FOR_THE_USR_MERGE\n\n        Additional packages are necessary to run some tests:\n        - nc                 (used by test/TEST-12-ISSUE-3171)\n        - python             (test-udev which is installed is in python)\n        - python-pyparsing\n        - python-evdev       (used by hwdb parsing tests)\n        - strace             (used by test/test-functions)\n        - capsh              (optional, used by test-execute)\n\nPOLICY FOR SUPPORT OF DISTRIBUTIONS AND ARCHITECTURES:\n        systemd main branch and latest major or stable releases are generally\n        expected to compile on current versions of popular distributions (at\n        least all non-EOL versions of Fedora, Debian unstable/testing/stable,\n        latest Ubuntu LTS and non-LTS releases, openSUSE Tumbleweed/Leap,\n        CentOS Stream 9 and 10, up-to-date Arch, etc.)  We will generally\n        attempt to support also other non-EOL versions of various distros.\n        Features which would break compilation on slightly older distributions\n        will only be introduced if there are significant reasons for this\n        (i.e. supporting them interferes with development or requires too many\n        resources to support). In some cases backports of specific libraries or\n        tools might be required.\n\n        The policy is similar for architecture support. systemd is regularly\n        tested on popular architectures (currently amd64, i386, arm64, ppc64el,\n        and s390x), but should compile and work also on other architectures, for\n        which support has been added. systemd will emit warnings when\n        architecture-specific constants are not defined.\n\nSTATIC COMPILATION AND \"STANDALONE\" BINARIES:\n        systemd provides a public shared libraries libsystemd.so and\n        libudev.so. The latter is deprecated, and the sd-device APIs in\n        libsystemd should be used instead for new code. In addition, systemd is\n        built with a private shared library, libsystemd-shared-<suffix>.so,\n        that also includes the libsystemd code, and by default most systemd\n        binaries are linked to it. Using shared libraries saves disk space and\n        memory at runtime, because only one copy of the code is needed.\n\n        It is possible to build static versions of systemd public shared\n        libraries (via the configuration options '-Dstatic-libsystemd' and\n        '-Dstatic-libudev'). This allows the libsystemd and libudev code to be\n        linked statically into programs. Note that mixing & matching different\n        versions of libsystemd and systemd is generally not recommended, since\n        various of its APIs wrap internal state and protocols of systemd\n        (e.g. logind and udev databases), which are not considered\n        stable. Hence, using static libraries is not recommended since it\n        generally means that version of the static libsystemd linked into\n        applications and the host systemd are not in sync, and will thus create\n        compatibility problems.\n\n        In addition, it is possible to disable the use of\n        libsystemd-shared-<suffix>.so for various components (via the\n        configuration options '-Dlink-*-shared'). In this mode, the libsystemd\n        and libsystemd-shared code is linked statically into selected\n        binaries. This option is intended for systems where some of the\n        components are intended to be delivered independently of the main\n        systemd package. Finally, some binaries can be compiled in a second\n        version (via the configuration option '-Dstandalone-binaries'). The\n        version suffixed with \".standalone\" has the libsystemd and\n        libsystemd-shared code linked statically. Those binaries are intended\n        as replacements to be used in limited installations where the full\n        systemd suite is not installed. Yet another option is to rebuild\n        systemd with a different '-Dshared-lib-tag' setting, allowing different\n        systemd binaries to be linked to instances of the private shared\n        library that can be installed in parallel.\n\n        Again: Using the default shared linking is recommended, building static\n        or \"standalone\" versions is not. Mixing versions of systemd components\n        that would normally be built and used together (in particular various\n        daemons and the manager) is not recommended: we do not test such\n        combinations upstream and cannot provide support. Distributors making\n        use of those options are responsible if things do not work as expected.\n\nUSERS AND GROUPS:\n        Default udev rules use the following standard system group names, which\n        need to be resolvable by getgrnam() at any time, even in the very early\n        boot stages, where no other databases and network are available:\n\n        audio, cdrom, dialout, disk, input, kmem, kvm, lp, render, tape, tty, video\n\n        During runtime, the journal daemon requires the \"systemd-journal\" system\n        group to exist. New journal files will be readable by this group (but\n        not writable), which may be used to grant specific users read access. In\n        addition, system groups \"wheel\" and \"adm\" will be given read-only access\n        to journal files using systemd-tmpfiles-setup.service.\n\n        The journal remote daemon requires the \"systemd-journal-remote\" system\n        user and group to exist. During execution this network facing service\n        will drop privileges and assume this uid/gid for security reasons.\n\n        Similarly, the network management daemon requires the \"systemd-network\"\n        system user and group to exist.\n\n        Similarly, the name resolution daemon requires the \"systemd-resolve\"\n        system user and group to exist.\n\n        Similarly, the coredump support requires the \"systemd-coredump\" system\n        user and group to exist.\n\nGLIBC NSS:\n        systemd ships with four glibc NSS modules:\n\n        nss-myhostname resolves the local hostname to locally configured IP\n        addresses, as well as \"localhost\" to 127.0.0.1/::1.\n\n        nss-resolve enables DNS resolution via the systemd-resolved DNS/LLMNR\n        caching stub resolver \"systemd-resolved\".\n\n        nss-mymachines enables resolution of all local containers registered\n        with machined to their respective IP addresses.\n\n        nss-systemd enables resolution of users/group registered via the\n        User/Group Record Lookup API (https://systemd.io/USER_GROUP_API),\n        including all dynamically allocated service users. (See the\n        DynamicUser= setting in unit files.)\n\n        To make use of these NSS modules, please add them to the \"hosts:\",\n        \"passwd:\", \"group:\", \"shadow:\" and \"gshadow:\" lines in\n        /etc/nsswitch.conf.\n\n        The four modules should be used in the following order:\n\n                passwd: files systemd\n                group: files [SUCCESS=merge] systemd\n                shadow: files systemd\n                gshadow: files systemd\n                hosts: mymachines resolve [!UNAVAIL=return] files myhostname dns\n\nSYSV INIT.D SCRIPTS:\n        When calling \"systemctl enable/disable/is-enabled\" on a unit which is a\n        SysV init.d script, it calls /usr/lib/systemd/systemd-sysv-install;\n        this needs to translate the action into the distribution specific\n        mechanism such as chkconfig or update-rc.d. Packagers need to provide\n        this script if you need this functionality (you don't if you disabled\n        SysV init support).\n\n        Please see src/systemctl/systemd-sysv-install.SKELETON for how this\n        needs to look like, and provide an implementation at the marked places.\n\nWARNINGS and TAINT FLAGS:\n        systemd requires that the /run mount point exists. systemd also\n        requires that /var/run is a symlink to /run. Taint flag 'var-run-bad'\n        will be set when this condition is detected.\n\n        Systemd will also warn when the cgroup support is unavailable in the\n        kernel (taint flag 'cgroups-missing'), the system is using the old\n        cgroup hierarchy (taint flag 'cgroupsv1'), the hardware clock is\n        running in non-UTC mode (taint flag 'local-hwclock'), the kernel\n        overflow UID or GID are not 65534 (taint flags 'overflowuid-not-65534'\n        and 'overflowgid-not-65534'), the UID or GID range assigned to the\n        running systemd instance covers less than 0‚Ä¶65534 (taint flags\n        'short-uid-range' and 'short-gid-range').\n\n        Taint conditions are logged during boot, but may also be checked at any\n        time with:\n\n          busctl get-property org.freedesktop.systemd1 /org/freedesktop/systemd1 org.freedesktop.systemd1.Manager Tainted\n\n        See org.freedesktop.systemd1(5) for more information.\n\nVALGRIND:\n        To run systemd under valgrind, compile systemd with the valgrind\n        development headers available (i.e. valgrind-devel or equivalent).\n        Otherwise, false positives will be triggered by code which violates\n        some rules but is actually safe. Note that valgrind generates nice\n        output only on exit(), hence on shutdown we don't execve()\n        systemd-shutdown.\n\nSTABLE BRANCHES AND BACKPORTS:\n        Stable branches with backported patches are available in the\n        systemd-stable repo at https://github.com/systemd/systemd-stable.\n\n        Stable branches are started for certain releases of systemd and named\n        after them, e.g. v238-stable. Stable branches are managed by\n        distribution maintainers on an as needed basis. See\n        https://systemd.io/BACKPORTS for some more information and examples.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.3896484375,
          "content": "![Systemd](http://brand.systemd.io/assets/page-logo.png)\n\nSystem and Service Manager\n\n[![OBS Packages Status](https://build.opensuse.org/projects/home:bluca:systemd/packages/systemd/badge.svg?type=default)](https://build.opensuse.org/project/show/home:bluca:systemd)<br/>\n[![Semaphore CI 2.0 Build Status](https://the-real-systemd.semaphoreci.com/badges/systemd/branches/main.svg?style=shields)](https://the-real-systemd.semaphoreci.com/projects/systemd)<br/>\n[![Coverity Scan Status](https://scan.coverity.com/projects/350/badge.svg)](https://scan.coverity.com/projects/350)<br/>\n[![OSS-Fuzz Status](https://oss-fuzz-build-logs.storage.googleapis.com/badges/systemd.svg)](https://oss-fuzz-build-logs.storage.googleapis.com/index.html#systemd)<br/>\n[![CIFuzz](https://github.com/systemd/systemd/workflows/CIFuzz/badge.svg)](https://github.com/systemd/systemd/actions)<br/>\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/1369/badge)](https://bestpractices.coreinfrastructure.org/projects/1369)<br/>\n[![Fossies codespell report](https://fossies.org/linux/test/systemd-main.tar.gz/codespell.svg)](https://fossies.org/linux/test/systemd-main.tar.gz/codespell.html)</br>\n[![Weblate](https://translate.fedoraproject.org/widgets/systemd/-/master/svg-badge.svg)](https://translate.fedoraproject.org/engage/systemd/)</br>\n[![Coverage Status](https://coveralls.io/repos/github/systemd/systemd/badge.svg?branch=main)](https://coveralls.io/github/systemd/systemd?branch=main)</br>\n[![Packaging status](https://repology.org/badge/tiny-repos/systemd.svg)](https://repology.org/project/systemd/versions)</br>\n[![OpenSSF Scorecard](https://api.securityscorecards.dev/projects/github.com/systemd/systemd/badge)](https://securityscorecards.dev/viewer/?platform=github.com&org=systemd&repo=systemd)\n\n## Details\n\nMost documentation is available on [systemd's web site](https://systemd.io/).\n\nAssorted, older, general information about systemd can be found in the [systemd Wiki](https://www.freedesktop.org/wiki/Software/systemd).\n\nInformation about build requirements is provided in the [README file](README).\n\nConsult our [NEWS file](NEWS) for information about what's new in the most recent systemd versions.\n\nPlease see the [Code Map](docs/ARCHITECTURE.md) for information about this repository's layout and content.\n\nPlease see the [Hacking guide](docs/HACKING.md) for information on how to hack on systemd and test your modifications.\n\nPlease see our [Contribution Guidelines](docs/CONTRIBUTING.md) for more information about filing GitHub Issues and posting GitHub Pull Requests.\n\nWhen preparing patches for systemd, please follow our [Coding Style Guidelines](docs/CODING_STYLE.md).\n\nIf you are looking for support, please contact our [mailing list](https://lists.freedesktop.org/mailman/listinfo/systemd-devel), join our [IRC channel #systemd on libera.chat](https://web.libera.chat/#systemd) or [Matrix channel](https://matrix.to/#/#systemd-project:matrix.org)\n\nStable branches with backported patches are available in the [stable repo](https://github.com/systemd/systemd-stable).\n\nWe have a security bug bounty program sponsored by the [Sovereign Tech Fund](https://www.sovereigntechfund.de/) hosted on [YesWeHack](https://yeswehack.com/programs/systemd-bug-bounty-program)\n\nRepositories with distribution packages built from git main are [available on OBS](https://software.opensuse.org//download.html?project=home%3Abluca%3Asystemd&package=systemd)\n"
        },
        {
          "name": "TODO",
          "type": "blob",
          "size": 135.1962890625,
          "content": "Bugfixes:\n\n* Many manager configuration settings that are only applicable to user\n  manager or system manager can be always set. It would be better to reject\n  them when parsing config.\n\n* Jun 01 09:43:02 krowka systemd[1]: Unit user@1000.service has alias user@.service.\n  Jun 01 09:43:02 krowka systemd[1]: Unit user@6.service has alias user@.service.\n  Jun 01 09:43:02 krowka systemd[1]: Unit user-runtime-dir@6.service has alias user-runtime-dir@.service.\n\nExternal:\n\n* Fedora: add an rpmlint check that verifies that all unit files in the RPM are listed in %systemd_post macros.\n\n* dbus:\n   - natively watch for dbus-*.service symlinks (PENDING)\n   - teach dbus to activate all services it finds in /etc/systemd/services/org-*.service\n\n* fedora: suggest auto-restart on failure, but not on success and not on coredump. also, ask people to think about changing the start limit logic. Also point people to RestartPreventExitStatus=, SuccessExitStatus=\n\n* neither pkexec nor sudo initialize environ[] from the PAM environment?\n\n* fedora: update policy to declare access mode and ownership of unit files to root:root 0644, and add an rpmlint check for it\n\n* register catalog database signature as file magic\n\n* zsh shell completion:\n  - <command> <verb> -<TAB> should complete options, but currently does not\n  - systemctl add-wants,add-requires\n  - systemctl reboot --boot-loader-entry=\n\n* systemctl status should know about 'systemd-analyze calendar ... --iterations='\n* If timer has just OnInactiveSec=..., it should fire after a specified time\n  after being started.\n\n* write blog stories about:\n  - hwdb: what belongs into it, lsusb\n  - enabling dbus services\n  - how to make changes to sysctl and sysfs attributes\n  - remote access\n  - how to pass throw-away units to systemd, or dynamically change properties of existing units\n  - auto-restart\n  - how to develop against journal browsing APIs\n  - the journal HTTP iface\n  - non-cgroup resource management\n  - dynamic resource management with cgroups\n  - refreshed, longer missions statement\n  - calendar time events\n  - init=/bin/sh vs. \"emergency\" mode, vs. \"rescue\" mode, vs. \"multi-user\" mode, vs. \"graphical\" mode, and the debug shell\n  - how to create your own target\n  - instantiated apache, dovecot and so on\n  - hooking a script into various stages of shutdown/early boot\n\nRegularly:\n\n* look for close() vs. close_nointr() vs. close_nointr_nofail()\n\n* check for strerror(r) instead of strerror(-r)\n\n* pahole\n\n* set_put(), hashmap_put() return values check. i.e. == 0 does not free()!\n\n* use secure_getenv() instead of getenv() where appropriate\n\n* link up selected blog stories from man pages and unit files Documentation= fields\n\nJanitorial Clean-ups:\n\n* rework mount.c and swap.c to follow proper state enumeration/deserialization\n  semantics, like we do for device.c now\n\n* get rid of prefix_roota() and similar, only use chase() and related\n  calls instead.\n\n* get rid of basename() and replace by path_extract_filename()\n\n* Replace our fstype_is_network() with a call to libmount's mnt_fstype_is_netfs()?\n  Having two lists is not nice, but maybe it's now worth making a dependency on\n  libmount for something so trivial.\n\n* drop set_free_free() and switch things over from string_hash_ops to\n  string_hash_ops_free everywhere, so that destruction is implicit rather than\n  explicit. Similar, for other special hashmap/set/ordered_hashmap destructors.\n\n* generators sometimes apply C escaping and sometimes specifier escaping to\n  paths and similar strings they write out. Sometimes both. We should clean\n  this up, and should probably always apply both, i.e. introduce\n  unit_file_escape() or so, which applies both.\n\n* xopenat() should pin the parent dir of the inode it creates before doing its\n  thing, so that it can create, open, label somewhat atomically.\n\nDeprecations and removals:\n\n* Remove any support for booting without /usr pre-mounted in the initrd entirely.\n  Update INITRD_INTERFACE.md accordingly.\n\n* remove cgroups v1 support EOY 2023. As per\n  https://lists.freedesktop.org/archives/systemd-devel/2022-July/048120.html\n  and then rework cgroupsv2 support around fds, i.e. keep one fd per active\n  unit around, and always operate on that, instead of cgroup fs paths.\n\n* drop support for getrandom()-less kernels. (GRND_INSECURE means once kernel\n  5.6 becomes our baseline). See\n  https://github.com/systemd/systemd/pull/24101#issuecomment-1193966468 for\n  details. Maybe before that: at taint-flags/warn about kernels that lack\n  getrandom()/environments where it is blocked.\n\n* drop support for LOOP_CONFIGURE-less loopback block devices, once kernel\n  baseline is 5.8.\n\n* drop fd_is_mount_point() fallback mess once we can rely on\n  STATX_ATTR_MOUNT_ROOT to exist i.e. kernel baseline 5.8\n\n* Remove /dev/mem ACPI FPDT parsing when /sys/firmware/acpi/fpdt is ubiquitous.\n  That requires distros to enable CONFIG_ACPI_FPDT, and have kernels v5.12 for\n  x86 and v6.2 for arm.\n\n* Once baseline is 4.13, remove support for INTERFACE_OLD= checks in \"udevadm\n  trigger\"'s waiting logic, since we can then rely on uuid-tagged uevents\n\nFeatures:\n\n* logind: introduce \"user-light\" session class, that is to \"user\" what\n  \"background-light\" is to \"background\". Then, in logind, if no user class is\n  specified, and we are not logging in graphically default to this session\n  class for non-regular users.  Effect: if you log into a system user for some\n  reason, yu won't get the service manager by default.\n\n* in pid1: include ExecStart= cmdlines (and other Exec*= cmdlines) in polkit\n  request, so that policies can match against command lines.\n\n* in pid1: before processing subscribed_as_strv when we come back from a\n  bus disconnect, let's check the bus 128bit id reported by the bus driver: if\n  it doesn't equal the one from before we should skip reinstalling the bus\n  tracker objects.\n\n* account number of units currently in activating/active/deactivating state in\n  each slice, and expose this as a property of the slice, given this is a key\n  metric of the resource management entity that a slice is. (maybe add a 2nd\n  metric for units assigned to the slice, that also includes those with pending\n  jobs)\n\n* maybe allow putting a \"soft\" limit on the number concurrently active units in\n  a slice, as per the previous item. When the limit is reached delay further\n  activations until number is below the threshold again, leaving the unit in\n  the job queue. Thus, multiple resource intensive tasks can be scheduled as\n  units in the same slice and they will be executed with an upper limit on\n  concurrently running tasks.\n\n* importd: introduce a per-user instance, that downloads into per-user DDI dirs\n\n* sysupdated: similar\n\n* portabled: similar\n\n* machined: implement a per-user instance, that manages per-user DDI dirs for\n  images. systemd-nspawn/systemd-vmspawn should probably register with both the\n  system and the user scoped machined instance. The former to get the machine\n  name registered as hostname, and the latter so that the image stuff is nicely\n  per-user managed.\n\n* resolved: make resolved process DNR DHCP info\n\n* Teach systemd-ssh-generator to generated an /run/issue.d/ drop-in telling\n  users how to connect to the system via the AF_VSOCK, as per:\n  https://github.com/systemd/systemd/issues/35071#issuecomment-2462803142\n\n* maybe introduce an OSC sequence that signals when we ask for a password, so\n  that terminal emulators can maybe connect a password manager or so, and\n  highlight things specially.\n\n* start using STATX_SUBVOL in btrfs_is_subvol(). Also, make use of it\n  generically, so that image discovery recognizes bcachefs subvols too.\n\n* format-table: introduce new cell type for strings with ansi sequences in\n  them. display them in regular output mode (via strip_tab_ansi()), but\n  suppress them in json mode.\n\n* machined: when registering a machine, also take a relative cgroup path,\n  relative to the machine's unit. This is useful when registering unpriv\n  machines, as they might sit down the cgroup tree, below a cgroup delegation\n  boundary. Then, install an inotify watch on that cgroup to track when the\n  machine's local cgroup goes down.\n\n* resolved: report ttl in resolution replies if we know it. This data is useful\n  for tools such as wireguard which want to periodically re-resolve DNS names,\n  and might want to use the TTL has hint for that.\n\n* journald: beef up ClientContext logic to store pidfd_id of peer, to validate\n  we really use the right cache entry\n\n* journald: log client's pidfd id as a new automatic field _PIDFDID= or so.\n\n* journald: split up ClientContext cache in two: one cache keyed by pid/pidfdid\n  with process information, and another one keyed by cgroup path/cgroupid with\n  cgroup information. This way if a service consisting of many logging\n  processes can take benefit of the cgroup caching.\n\n* system lsmbpf policy that prohibits creating files owned by \"nobody\"\n  system-wide\n\n* system lsmpbf policy that prohibits creating or opening device nodes outside\n  of devtmpfs/tmpfs, except if they are the pseudo-devices /dev/null,\n  /dev/zero, /dev/urandom and so on.\n\n* system lsmbpf policy that enforces that block device backed mounts may only\n  be established on top of dm-crypt or dm-verity devices, or an allowlist of\n  file systems (which should probably include vfat, for compat with the ESP)\n\n* $LISTEN_PID, $MAINPID and $SYSTEMD_EXECPID env vars that the service manager\n  sets should be augmented with $LISTEN_PIDFDID, $MAINPIDFDID and\n  $SYSTEMD_EXECPIDFD (and similar for other env vars we might send).\n\n* port copy.c over to use LabelOps for all labelling.\n\n* port remaining getmntent() users over to libmount. There are subtle\n  differences in the parsers (see #25371 for example), and it hence makes sense\n  if we stick to one set of parsers on this, not mix both.\n\n* get rid of compat with libidn.so.11 (retain only for libidn.so.12)\n\n* get rid of compat with libbpf.so.0 (retainly only for libbpf.so.1)\n\n* define a generic \"report\" varlink interface, which services can implement to\n  provide health/statistics data about themselves. then define a dir somewhere\n  in /run/ where components can bind such sockets. Then make journald, logind,\n  and pid1 itself implement this and expose various stats on things there. Then\n  issue parallel calls to these interfaces from the systemd-report tool,\n  combine into one json document, and include measurement logs and tpm\n  quote. tpm quote should protect the json doc via the nonce field\n  studd. Allow shipping this off elsewhere for analyze.\n\n* The bind(AF_UNSPEC) construct (for resetting sockets to their initial state)\n  should be blocked in many cases because it punches holes in many sandboxes.\n\n* find a nice way to opt-in into auto-masking SIGCHLD on first\n  sd_event_add_child(), and then get rid of many more explicit sigprocmask()\n  calls.\n\n* introduce new structure Tpm2CombinedPolicy, that combines the various TPm2\n  policy bits into one structure, i.e. public key info, pcr masks, pcrlock\n  stuff, pin and so on. Then pass that around in tpm2_seal() and tpm2_unseal().\n\n* look at nsresourced, mountfsd, homed, importd, and try to come up with a way\n  how the forked off worker processes can be moved into transient services with\n  sandboxing, without breaking notify socket stuff and so on.\n\n* replace all \\x1b, \\x1B, \\033 C string escape sequences in our codebase with a\n  more readable \\e. It's a GNU extension, but a ton more readable than the\n  others, and most importantly it doesn't result in confusing errors if you\n  suffix the escape sequence with one more decimal digit, because compilers\n  think you might actually specify a value outside the 8bit range with that.\n\n* homed: allow login via username + realm on getty/login prompt. Then rewrite\n  the user name in the PAM stack\n\n* homed/userdb: add \"aliases\" field to user record, which can alternatively be\n  used for logging in. Rewrite user name in the PAM stack once acquired.\n\n* confext/sysext: instead of mounting the overlayfs directly on /etc/ + /usr/,\n  insert an intermediary bind mount on itself there. This has the benefit that\n  services where mount propagation from the root fs is off, an still have\n  confext/sysext propagated in.\n\n* generic interface for varlink for setting log level and stuff that all our daemons can implement\n\n* maybe teach repart.d/ dropins a new setting MakeMountNodes= or so, which is\n  just like MakeDirectories=, but uses an access mode of 0000 and sets the +i\n  chattr bit. This is useful as protection against early uses of /var/ or /tmp/\n  before their contents is mounted.\n\n* go through all uses of table_new() in our codebase, and make sure we support\n  all three of:\n  1. --no-legend properly\n  2. --json= properly\n  3. --no-pager properly\n\n* go through all --help texts in our codebases, and make sure:\n  1. the one sentence description of the tool is highlighted via ANSI how we\n     usually do it\n  2. If more than one or two commands are supported (as opposed to switches),\n     separate commands + switches from each other, using underlined --help sections.\n  3. If there are many switches, consider adding additional --help sections.\n\n* go through our codebase, and convert \"vertical tables\" (i.e. things such as\n  \"systemctl status\") to use table_new_vertical() for output\n\n* pcrlock: add support for multi-profile UKIs\n\n* logind: when logging in use new tmpfs quota support to configure quota on\n  /tmp/ + /dev/shm/. But do so only in case of tmpfs, because otherwise quota\n  is persistent and any persistent settings mean we don#t have to reapply them.\n\n* initrd: when transitioning from initrd to host, validate that\n  /lib/modules/`uname -r` exists, refuse otherwise\n\n* signed bpf loading: to address need for signature verification for bpf\n  programs when they are loaded, and given the bpf folks don't think this is\n  realistic in kernel space, maybe add small daemon that facilitates this\n  loading on request of clients, validates signatures and then loads the\n  programs. This daemon should be the only daemon with privs to do load BPF on\n  the system. It might be a good idea to run this daemon already in the initrd,\n  and leave it around during the initrd transition, to continue serve requests.\n  Should then live in its own fs namespace that inherits from the initrd's\n  fs tree, not from the host, to isolate it properly. Should set\n  PR_SET_DUMPABLE so that it cannot be ptraced from the host. Should have\n  CAP_SYS_BPF as only service around.\n\n* add a mechanism we can drop capabilities from pid1 *before* transitioning\n  from initrd to host. i.e. before we transition into the slightly lower trust\n  domain that is the host systems we might want to get rid of some caps.\n  Example: CAP_SYS_BPF in the signed bpf loading logic above. (We already have\n  CapabilityBoundingSet= in system.conf, but that is enforced when pid 1\n  initializes, rather then when it transitions to the next.)\n\n* maybe add a new standard slice where process that are started in the initrd\n  and stick around for the whole system runtime (i.e. root fs storage daemons,\n  the bpf loader daemon discussed above, and such) are placed. maybe\n  protected.slice or so? Then write docs that suggest that services like this\n  set Slice=protected.sice, RefuseManualStart=yes, RefuseManualStop=yes and a\n  couple of other things.\n\n* rough proposed implementation design for remote attestation infra: add a tool\n  that generates a quote of local PCRs and NvPCRs, along with synchronous log\n  snapshot. use \"audit session\" logic for that, so that we get read-outs and\n  signature in one step. Then turn this into a JSON object. Use the \"TCG TSS 2.0\n  JSON Data Types and Policy Language\" format to encode the signature. And CEL\n  for the measurement log.\n\n* creds: add a new cred format that reused the JSON structures we use in the\n  LUKS header, so that we get the various newer policies for free.\n\n* drop PCR 7 from default PCR mask in credentials and LUKS2 enrollments\n\n* systemd-analyze: port \"pcrs\" verb to talk directly to TPM device, instead of\n  using sysfs interface (well, or maybe not, as that would require privileges?)\n\n* pcrextend/tpm2-util: add a concept of \"rotation\" to event log. i.e. allow\n  trailing parts of the logs if time or disk space limit is hit. Protect the\n  boot-time measurements however (i.e. up to some point where things are\n  settled), since we need those for pcrlock measurements and similar. When\n  deleting entries for rotation, place an event that declares how many items\n  have been dropped, and what the hash before and after that.\n\n* measure information about all DDIs as we activate them to an NvPCR. We\n  probably should measure the dm-verity root hash from the kernel side, but\n  DDI meta info from userspace.\n\n* use name_to_handle_at() with AT_HANDLE_FID instead of .st_ino (inode\n  number) for identifying inodes, for example in copy.c when finding hard\n  links, or loop-util.c for tracking backing files, and other places.\n\n* cryptenroll/cryptsetup/homed: add unlock mechanism that combines tpm2 and\n  fido2, as well as tpm2 + ssh-agent, inspired by ChromeOS' logic: encrypt the\n  volume key with the TPM, with a policy that insists that a nonce is signed by\n  the fido2 device's key or ssh-agent key. Thus, add unlock/login time the TPM\n  generates a nonce, which is sent as a challenge to the fido2/ssh-agent, which\n  returns a signature which is handed to the tpm, which then reveals the volume\n  key to the PC.\n\n* cryptenroll/cryptsetup/homed: similar to this, implement TOTP backed by TPM.\n\n* expose the handoff timestamp fully via the D-Bus properties that contain\n  ExecStatus information\n\n* properly serialize the ExecStatus data from all ExecCommand objects\n  associated with services, sockets, mounts and swaps. Currently, the data is\n  flushed out on reload, which is quite a limitation.\n\n* Clean up \"reboot argument\" handling, i.e. set it through some IPC service\n  instead of directly via /run/, so that it can be sensible set remotely.\n\n* userdb: add concept for user \"aliases\", to cover for cases where you can log\n  in under the name lennart@somenetworkfsserver, and it would automatically\n  generate a local user, and from the one both names can be used to allow\n  logins into the same account.\n\n* systemd-tpm2-support: add a some logic that detects if system is in DA\n  lockout mode, and queries the user for TPM recovery PIN then.\n\n* systemd-repart should probably enable btrfs' \"temp_fsid\" feature for all file\n  systems it creates, as we have no interest in RAID for repart, and it should\n  make sure that we can mount them trivially everywhere.\n\n* systemd-nspawn should get the same SSH key support that vmspawn now has.\n\n* move documentation about our common env vars (SYSTEMD_LOG_LEVEL,\n  SYSTEMD_PAGER, ‚Ä¶) into a man page of its own, and just link it from our\n  various man pages that so far embed the whole list again and again, in an\n  attempt to reduce clutter and noise a bid.\n\n* vmspawn switch default swtpm PCR bank to SHA384-only (away from SHA256), at\n  least on 64bit archs, simply because SHA384 is typically double the hashing\n  speed than SHA256 on 64bit archs (since based on 64bit words unlike SHA256\n  which uses 32bit words).\n\n* In vmspawn/nspawn/machined wait for X_SYSTEMD_UNIT_ACTIVE=ssh-active.target\n  and X_SYSTEMD_SIGNALS_LEVEL=2 as indication whether/when SSH and the POSIX\n  signals are available. Similar for D-Bus (but just use sockets.target for\n  that). Report as property for the machine.\n\n* teach nspawn/machined a new bus call/verb that gets you a\n  shell in containers that have no sensible pid1, via joining the container,\n  and invoking a shell directly. Then provide another new bus call/vern that is\n  somewhat automatic: if we detect that pid1 is running and fully booted up we\n  provide a proper login shell, otherwise just a joined shell. Then expose that\n  as primary way into the container.\n\n* make vmspawn/nspawn/importd/machined a bit more usable in a WSL-like\n  fashion. i.e. teach unpriv systemd-vmspawn/systemd-nspawn a reasonable\n  --bind-user= behaviour that mounts the calling user through into the\n  machine. Then, ship importd with a small database of well known distro images\n  along with their pinned signature keys. Then add some minimal glue that binds\n  this together: downloads a suitable image if not done so yet, starts it in\n  the bg via vmspawn/nspawn if not done so yet and then requests a shell inside\n  it for the invoking user.\n\n* add a new specifier to unit files that figures out the DDI the unit file is\n  from, tracing through overlayfs, DM, loopback block device.\n\n* importd/importctl\n  - port tar handling to libarchive\n  - complete varlink interface\n  - download images into .v/ dirs\n\n* in os-release define a field that can be initialized at build time from\n  SOURCE_DATE_EPOCH (maybe even under that name?). Would then be used to\n  initialize the timestamp logic of ConditionNeedsUpdate=.\n\n* nspawn/vmspawn/pid1: add ability to easily insert fully booted VMs/FOSC into\n  shell pipelines, i.e. add easy to use switch that turns off console status\n  output, and generates the right credentials for systemd-run-generator so that\n  a program is invoked, and its output captured, with correct EOF handling and\n  exit code propagation\n\n* new systemd-analyze \"join\" verb or so, for debugging services. Would be\n  nsenter on steroids, i.e invoke a shell or command line in an environment as\n  close as we can make it for the MainPID of a service. Should be built around\n  pidfd, so that we can reasonably robustly do this. Would only cover the\n  execution environment like namespaces, but not the privilege settings.\n\n* Introduce a CGroupRef structure, inspired by PidRef. Should contain cgroup\n  path, cgroup id, and cgroup fd. Use it to continuously pin all v2 cgroups via\n  a cgroup_ref field in the CGroupRuntime structure. Eventually switch things\n  over to do all cgroupfs access only via that structure's fd.\n\n* Get rid of the symlinks in /run/systemd/units/* and exclusively use cgroupfs\n  xattrs to convey info about invocation ids, logging settings and so on.\n  support for cgroupfs xattrs in the \"trusted.\" namespace was added in linux\n  3.7, i.e. which we don't pretend to support anymore.\n\n* rewrite bpf-devices in libbpf/C code, rather than home-grown BPF assembly, to\n  match bpf-restrict-fs, bpf-restrict-ifaces, bpf-socket-bind\n\n* ditto: rewrite bpf-firewall in libbpf/C code\n\n* credentials: if we ever acquire a secure way to derive cgroup id of socket\n  peers (i.e. SO_PEERCGROUPID), then extend the \"scoped\" credential logic to\n  allow cgroup-scoped (i.e. app or service scoped) credentials. Then, as next\n  step use this to implement per-app/per-service encrypted directories, where\n  we set up fscrypt on the StateDirectory= with a randomized key which is\n  stored as xattr on the directory, encrypted as a credential.\n\n* credentials: optionally include a per-user secret in scoped user-credential\n  encryption keys. should come from homed in some way, derived from the luks\n  volume key or fscrypt directory key.\n\n* credentials: add a flag to the scoped credentials that if set require PK\n  reauthentication when unlocking a secret.\n\n* extend the smbios11 logic for passing credentials so that instead of passing\n  the credential data literally it can also just reference an AF_VSOCK CID/port\n  to read them from. This way the data doesn't remain in the SMBIOS blob during\n  runtime, but only in the credentials fs.\n\n* machined: optionally track nspawn unix-export/ runtime for each machined, and\n  then update systemd-ssh-proxy so that it can connect to that.\n\n* add a new ExecStart= flag that inserts the configured user's shell as first\n  word in the command line. (maybe use character '.'). Usecase: tool such as\n  run0 can use that to spawn the target user's default shell.\n\n* introduce mntid_t, and make it 64bit, as apparently the kernel switched to\n  64bit mount ids\n\n* mountfsd/nsresourced\n  - userdb: maybe allow callers to map one uid to their own uid\n  - bpflsm: allow writes if resulting UID on disk would be userns' owner UID\n  - make encrypted DDIs work (password‚Ä¶)\n  - add API for creating a new file system from scratch (together with some\n    dm-integrity/HMAC key). Should probably work using systemd-repart (access\n    via varlink).\n  - add api to make an existing file \"trusted\" via dm-integry/HMAC key\n  - port: portabled\n  - port: tmpfiles, sysusers and similar\n  - lets see if we can make runtime bind mounts into unpriv nspawn work\n\n* add a kernel cmdline switch (and cred?) for marking a system to be\n  \"headless\", in which case we never open /dev/console for reading, only for\n  writing. This would then mean: systemd-firstboot would process creds but not\n  ask interactively, getty would not be started and so on.\n\n* cryptsetup: new crypttab option to auto-grow a luks device to its backing\n  partition size. new crypttab option to reencrypt a luks device with a new\n  volume key.\n\n* we probably should have some infrastructure to acquire sysexts with\n  drivers/firmware for local hardware automatically. Idea: reuse the modalias\n  logic of the kernel for this: make the main OS image install a hwdb file\n  that matches against local modalias strings, and adds properties to relevant\n  devices listing names of sysexts needed to support the hw. Then provide some\n  tool that goes through all devices and tries to acquire/download the\n  specified images.\n\n* repart + cryptsetup: support file systems that are encrypted and use verity\n  on top. Usecase: confexts that shall be signed by the admin but also be\n  confidential. Then, add a new --make-ddi=confext-encrypted for this.\n\n* tmpfiles: add new line type for moving files from some source dir to some\n  target dir. then use that to move sysexts/confexts and stuff from initrd\n  tmpfs to /run/, so that host can pick things up.\n\n* tiny varlink service that takes a fd passed in and serves it via http. Then\n  make use of that in networkd, and expose some EFI binary of choice for\n  DHCP/HTTP base EFI boot.\n\n* bootctl: add reboot-to-disk which takes a block device name, and\n  automatically sets things up so that system reboots into that device next.\n\n* maybe: in PID1, when we detect we run in an initrd, make superblock read-only\n  early on, but provide opt-out via kernel cmdline.\n\n* systemd-pcrextend:\n  - support measuring to nvindex with PCR update semantics (\"fake PCRs\")\n  - add api for \"allocating\" such an nvindex\n  - once we have that start measuring every sysext we apply, every confext,\n    every RootImage= we apply, every nspawn and so on. All in separate fake\n    PCRs.\n\n* vmspawn:\n  - run in scope unit when invoked from command line, and machined registration is off\n  - sd_notify support\n  - --ephemeral support\n  - --read-only support\n  - automatically suspend/resume the VM if the host suspends. Use logind\n    suspend inhibitor to implement this. request clean suspend by generating\n    suspend key presses.\n  - support for \"real\" networking via \"-n\" and --network-bridge=\n  - translate SIGTERM to clean ACPI shutdown event\n\n* systemd-pcrmachine should probably also measure the SMBIOS system UUID.\n\n* sd-boot: allow synthesizing additional type1 entries via SMBIOS vendor strings\n\n* storagetm:\n  - add USB mass storage device logic, so that all local disks are also exposed\n    as mass storage devices on systems that have a USB controller that can\n    operate in device mode\n  - add NVMe authentication\n\n* add support for activating nvme-oF devices at boot automatically via kernel\n  cmdline, and maybe even support a syntax such as\n  root=nvme:<trtype>:<traddr>:<trsvcid>:<nqn>:<partition> to boot directly from\n  nvme-oF\n\n* pcrlock:\n  - add kernel-install plugin that automatically creates UKI .pcrlock file when\n    UKI is installed, and removes it when it is removed again\n  - automatically install PE measurement of sd-boot on \"bootctl install\"\n  - pre-calc sysext + kernel cmdline measurements\n  - pre-calc cryptsetup root key measurement\n  - maybe make systemd-repart generate .pcrlock for old and new GPT header in\n    /run?\n  - Add support for more than 8 branches per PCR OR\n  - add \"systemd-pcrlock lock-kernel-current\" or so which synthesizes .pcrlock\n    policy from currently booted kernel/event log, to close gap for first boot\n    for pre-built images\n\n* in sd-boot and sd-stub measure the SMBIOS vendor strings to some PCR (at\n  least some subset of them that look like systemd stuff), because apparently\n  some firmware does not, but systemd honours it. avoid duplicate measurement\n  by sd-boot and sd-stub by adding LoaderFeatures/StubFeatures flag for this,\n  so that sd-stub can avoid it if sd-boot already did it.\n\n* cryptsetup: a mechanism that allows signing a volume key with some key that\n  has to be present in the kernel keyring, or similar, to ensure that confext\n  DDIs can be encrypted against the local SRK but signed with the admin's key\n  and thus can authenticated locally before they are decrypted.\n\n* image policy should be extended to allow dictating *how* a disk is unlocked,\n  i.e. root=encrypted-tpm2+encrypted-fido2 would mean \"root fs must be\n  encrypted and unlocked via fido2 or tpm2, but not otherwise\"\n\n* systemd-repart: add support for formatting dm-crypt + dm-integrity file\n  systems.\n\n* homed: use systemd-storagetm to expose home dirs via nvme-tcp. Then,\n  teach homed/pam_systemd_homed with a user name such as\n  lennart%nvme_tcp_192.168.100.77_8787 to log in from any linux host with the\n  same home dir. Similar maybe for nbd, iscsi? this should then first ask for\n  the local root pw, to authenticate that logging in like this is ok, and would\n  then be followed by another password prompt asking for the user's own\n  password. Also, do something similar for CIFS: if you log in via\n  lennart%cifs-someserver_someshare, then set up the homed dir for it\n  automatically. The PAM module should update the user name used for login to\n  the short version once it set up the user. Some care should be taken, so that\n  the long version can be still be resolved via NSS afterwards, to deal with\n  PAM clients that do not support PAM sessions where PAM_USER changes half-way.\n\n* redefine /var/lib/extensions/ as the dir one can place all three of sysext,\n  confext as well is multi-modal DDIs that qualify as both. Then introduce\n  /var/lib/sysexts/ which can be used to place only DDIs that shall be used as\n  sysext\n\n* Varlinkification of the following command line tools, to open them up to\n  other programs via IPC:\n  - bootctl\n  - journalctl (allowing journal read access via IPC)\n  - coredumpcl\n  - systemd-bless-boot\n  - systemd-measure\n  - systemd-cryptenroll (to allow UIs to enroll FIDO2 keys and such)\n  - systemd-dissect\n  - systemd-sysupdate\n  - systemd-analyze\n  - kernel-install\n  - systemd-mount (with PK so that desktop environments could use it to mount disks)\n\n* enumerate virtiofs devices during boot-up in a generator, and synthesize\n  mounts for rootfs, /usr/, /home/, /srv/ and some others from it, depending on\n  the \"tag\". (waits for: https://gitlab.com/virtio-fs/virtiofsd/-/issues/128)\n\n* automatically mount one virtiofs during early boot phase to /run/host/,\n  similar to how we do that for nspawn, based on some clear tag.\n\n* add some service that makes an atomic snapshot of PCR state and event log up\n  to that point available, possibly even with quote by the TPM.\n\n* encode type1 entries in some UKI section to add additional entries to the\n  menu.\n\n* Add ACL-based access management to .socket units. i.e. add AllowPeerUser= +\n  AllowPeerGroup= that installs additional user/group ACL entries on AF_UNIX\n  sockets.\n\n* systemd-tpm2-setup should probably have a factory reset logic, i.e. when some\n  kernel command line option is set we reset the TPM (equivalent of tpm2_clear\n  -c owner? or rather echo 5 >/sys/class/tpm/tpm0/ppi/request?).\n\n* systemd-tpm2-setup should support a mode where we refuse booting if the SRK\n  changed. (Must be opt-in, to not break systems which are supposed to be\n  migratable between PCs)\n\n* when systemd-sysext learns mutable /usr/ (and systemd-confext mutable /etc/)\n  then allow them to store the result in a .v/ versioned subdir, for some basic\n  snapshot logic\n\n* add a new PE binary section \".mokkeys\" or so which sd-stub will insert into\n  Mok keyring, by overriding/extending whatever shim sets in the EFI\n  var. Benefit: we can extend the kernel module keyring at ukify time,\n  i.e. without recompiling the kernel, taking an upstream OS' kernel and adding\n  a local key to it.\n\n* PidRef conversion work:\n  - cg_pid_get_xyz()\n  - pid_from_same_root_fs()\n  - get_ctty_devnr()\n  - actually wait for POLLIN on pidref's pidfd in service logic\n  - openpt_allocate_in_namespace()\n  - unit_attach_pid_to_cgroup_via_bus()\n  - cg_attach() ‚Äì requires new kernel feature\n  - journald's process cache\n\n* ddi must be listed as block device fstype\n\n* measure some string via pcrphase whenever we end up booting into emergency\n  mode.\n\n* similar, measure some string via pcrphase whenever we resume from hibernate\n\n* homed: add a basic form of secrets management to homed, that stores\n  secrets in $HOME somewhere, is protected by the accounts own authentication\n  mechanisms. Should implement something PKCS#11-like that can be used to\n  implement emulated FIDO2 in unpriv userspace on top (which should happen\n  outside of homed), emulated PKCS11, and libsecrets support. Operate with a\n  2nd key derived from volume key of the user, with which to wrap all\n  keys. maintain keys in kernel keyring if possible.\n\n* use sd-event ratelimit feature optionally for journal stream clients that log\n  too much\n\n* systemd-mount should only consider modern file systems when mounting, similar\n  to systemd-dissect\n\n* add another PE section \".fname\" or so that encodes the intended filename for\n  PE file, and validate that when loading add-ons and similar before using\n  it. This is particularly relevant when we load multiple add-ons and want to\n  sort them to apply them in a define order. The order should not be under\n  control of the attacker.\n\n* also include packaging metadata (√° la\n  https://systemd.io/PACKAGE_METADATA_FOR_EXECUTABLE_FILES/) in our UEFI PE\n  binaries, using the same JSON format.\n\n* make \"bootctl install\" + \"bootctl update\" useful for installing shim too. For\n  that introduce new dir /usr/lib/systemd/efi/extra/ which we copy mostly 1:1\n  into the ESP at install time. Then make the logic smart enough so that we\n  don't overwrite bootx64.efi with our own if the extra tree already contains\n  one. Also, follow symlinks when copying, so that shim rpm can symlink their\n  stuff into our dir (which is safe since the target ESP is generally VFAT and\n  thus does not have symlinks anyway). Later, teach the update logic to look at\n  the ELF package metadata (which we also should include in all PE files, see\n  above) for version info in all *.EFI files, and use it to only update if\n  newer.\n\n* in sd-stub: optionally add support for a new PE section .keyring or so that\n  contains additional certificates to include in the Mok keyring, extending\n  what shim might have placed there. why? let's say I use \"ukify\" to build +\n  sign my own fedora-based UKIs, and only enroll my personal lennart key via\n  shim.  Then, I want to include the fedora keyring in it, so that kmods work.\n  But I might not want to enroll the fedora key in shim, because this would\n  also mean that the key would be in effect whenever I boot an archlinux UKI\n  built the same way, signed with the same lennart key.\n\n* resolved: take possession of some IPv6 ULA address (let's say\n  fd00:5353:5353:5353:5353:5353:5353:5353), and listen on port 53 on it for the\n  local stubs, so that we can make the stub available via ipv6 too.\n\n* Maybe add SwitchRootEx() as new bus call that takes env vars to set for new\n  PID 1 as argument. When adding SwitchRootEx() we should maybe also add a\n  flags param that allows disabling and enabling whether serialization is\n  requested during switch root.\n\n* introduce a .acpitable section for early ACPI table override\n\n* add proper .osrel matching for PE addons. i.e. refuse applying an addon\n  intended for a different OS. Take inspiration from how confext/sysext are\n  matched against OS.\n\n* figure out what to do about credentials sealed to PCRs in kexec + soft-reboot\n  scenarios. Maybe insist sealing is done additionally against some keypair in\n  the TPM to which access is updated on each boot, for the next, or so?\n\n* logind: when logging in, always take an fd to the home dir, to keep the dir\n  busy, so that autofs release can never happen. (this is generally a good\n  idea, and specifically works around the fact the autofs ignores busy by mount\n  namespaces)\n\n* mount most file systems with a restrictive uidmap. e.g. mount /usr/ with a\n  uidmap that blocks out anything outside 0‚Ä¶1000 (i.e. system users) and similar.\n\n* mount the root fs with MS_NOSUID by default, and then mount /usr/ without\n  both so that suid executables can only be placed there. Do this already in\n  the initrd. If /usr/ is not split out create a bind mount automatically.\n\n* fix our various hwdb lookup keys to end with \":\" again. The original idea was\n  that hwdb patterns can match arbitrary fields with expressions like\n  \"*:foobar:*\", to wildcard match both the start and the end of the string.\n  This only works safely for later extensions of the string if the strings\n  always end in a colon. This requires updating our udev rules, as well as\n  checking if the various hwdb files are fine with that.\n\n* mount /tmp/ and /var/tmp with a uidmap applied that blocks out \"nobody\" user\n  among other things such as dynamic uid ranges for containers and so on. That\n  way no one can create files there with these uids and we enforce they are only\n  used transiently, never persistently.\n\n* rework loopback support in fstab: when \"loop\" option is used, then\n  instantiate a new systemd-loop@.service for the source path, set the\n  lo_file_name field for it to something recognizable derived from the fstab\n  line, and then generate a mount unit for it using a udev generated symlink\n  based on lo_file_name.\n\n* teach systemd-nspawn the boot assessment logic: hook up vpick's try counters\n  with success notifications from nspawn payloads. When this is enabled,\n  automatically support reverting back to older OS version images if newer ones\n  fail to boot.\n\n* implement new \"systemd-fsrebind\" tool that works like gpt-auto-generator but\n  looks at a root dir and then applies vpick on various dirs/images to pick a\n  root tree, a /usr/ tree, a /home/, a /srv/, a /var/ tree and so on. Dirs\n  could also be btrfs subvols (combine with btrfs auto-snapshort approach for\n  creating versions like these automatically).\n\n* remove tomoyo support, it's obsolete and unmaintained apparently\n\n* In .socket units, add ConnectStream=, ConnectDatagram=,\n  ConnectSequentialPacket= that create a socket, and then *connect to* rather than\n  listen on some socket. Then, add a new setting WriteData= that takes some\n  base64 data that systemd will write into the socket early on. This can then\n  be used to create connections to arbitrary services and issue requests into\n  them, as long as the data is static. This can then be combined with the\n  aforementioned journald subscription varlink service, to enable\n  activation-by-message id and similar.\n\n* .service with invalid Sockets= starts successfully.\n\n* landlock: lock down RuntimeDirectory= via landlock, so that services lose\n  ability to write anywhere else below /run/. Similar for\n  StateDirectory=. Benefit would be clear delegation via unit files: services\n  get the directories they get, and nothing else even if they wanted to.\n\n* landlock: for unprivileged systemd (i.e. systemd --user), use landlock to\n  implement ProtectSystem=, ProtectHome= and so on. Landlock does not require\n  privs, and we can implement pretty similar behaviour. Also, maybe add a mode\n  where ProtectSystem= combined with an explicit PrivateMounts=no could request\n  similar behaviour for system services, too.\n\n* Add systemd-mount@.service which is instantiated for a block device and\n  invokes systemd-mount and exits. This is then useful to use in\n  ENV{SYSTEMD_WANTS} in udev rules, and a bit prettier than using RUN+=\n\n* udevd: extend memory pressure logic: also kill any idle worker processes\n\n* udevadm: to make symlink querying with udevadm nicer:\n  - do not enable the pager for queries like 'udevadm info -q symlink -r'\n  - add mode with newlines instead of spaces (for grep)?\n\n* SIGRTMIN+18 and memory pressure handling should still be added to: hostnamed,\n  localed, oomd, timedated.\n\n* repart/gpt-auto/DDIs: maybe introduce a concept of \"extension\" partitions,\n  that have a new type uuid and can \"extend\" earlier partitions, to work around\n  the fact that systemd-repart can only grow the last partition defined. During\n  activation we'd simply set up a dm-linear mapping to merge them again. A\n  partition that is to be extended would just set a bit in the partition flags\n  field to indicate that there's another extension partition to look for. The\n  identifying UUID of the extension partition would be hashed in counter mode\n  from the uuid of the original partition it extends. Inspiration for this is\n  the \"dynamic partitions\" concept of new Android. This would be a minimalistic\n  concept of a volume manager, with the extents it manages being exposes as GPT\n  partitions. I a partition is extended multiple times they should probably\n  grow exponentially in size to ensure O(log(n)) time for finding them on\n  access.\n\n* Make nspawn to a frontend for systemd-executor, so that we have to ways into\n  the executor: via unit files/dbus/varlink through PID1 and via cmdline/OCI\n  through nspawn.\n\n* sd-stub: detect if we are running with uefi console output on serial, and if so\n  automatically add console= to kernel cmdline matching the same port.\n\n* add a utility that can be used with the kernel's\n  CONFIG_STATIC_USERMODEHELPER_PATH and then handles them within pid1 so that\n  security, resource management and cgroup settings can be enforced properly\n  for all umh processes.\n\n* homed: when resizing an fs don't sync identity beforehand there might simply\n  not be enough disk space for that. try to be defensive and sync only after\n  resize.\n\n* homed: if for some reason the partition ended up being much smaller than\n  whole disk, recover from that, and grow it again.\n\n* timesyncd: when saving/restoring clock try to take boot time into account.\n  Specifically, along with the saved clock, store the current boot ID. When\n  starting, check if the boot id matches. If so, don't do anything (we are on\n  the same boot and clock just kept running anyway). If not, then read\n  CLOCK_BOOTTIME (which started at boot), and add it to the saved clock\n  timestamp, to compensate for the time we spent booting. If EFI timestamps are\n  available, also include that in the calculation. With this we'll then only\n  miss the time spent during shutdown after timesync stopped and before the\n  system actually reset.\n\n* systemd-stub: maybe store a \"boot counter\" in the ESP, and pass it down to\n  userspace to allow ordering boots (for example in journalctl). The counter\n  would be monotonically increased on every boot.\n\n* pam_systemd_home: add module parameter to control whether to only accept\n  only password or only pcks11/fido2 auth, and then use this to hook nicely\n  into two of the three PAM stacks gdm provides.\n  See discussion at https://github.com/authselect/authselect/pull/311\n\n* sd-boot: make boot loader spec type #1 accept http urls in \"linux\"\n  lines. Then, do the uefi http dance to download kernels and boot them. This\n  is then useful for network boot, by embedding a cpio with type #1 snippets\n  in sd-boot, which reference remote kernels.\n\n* maybe prohibit setuid() to the nobody user, to lock things down, via seccomp.\n  the nobody is not a user any code should run under, ever, as that user would\n  possibly get a lot of access to resources it really shouldn't be getting\n  access to due to the userns + nfs semantics of the user. Alternatively: use\n  the seccomp log action, and allow it.\n\n* sd-boot: add a new PE section .bls or so that carries a cpio with additional\n  boot loader entries (both type1 and type2). Then when initializing, find this\n  section, iterate through it and populate menu with it. cpio is simple enough\n  to make a parser for this reasonably robust. use same path structures as in\n  the ESP. Similar add one for signature key drop-ins.\n\n* sd-boot: also allow passing in the cpio as in the previous item via SMBIOS\n\n* add a new EFI tool \"sd-fetch\" or so. It looks in a PE section \".url\" for an\n  URL, then downloads the file from it using UEFI HTTP APIs, and executes it.\n  Use case: provide a minimal ESP with sd-boot and a couple of these sd-fetch\n  binaries in place of UKIs, and download them on-the-fly.\n\n* maybe: systemd-loop-generator that sets up loopback devices if requested via kernel\n  cmdline. use case: include encrypted/verity root fs in UKI.\n\n* systemd-gpt-auto-generator: add kernel cmdline option to override block\n  device to dissect. also support dissecting a regular file. useccase: include\n  encrypted/verity root fs in UKI.\n\n* sd-stub: add \".bootcfg\" section for kernel bootconfig data (as per\n  https://docs.kernel.org/admin-guide/bootconfig.html)\n\n* tpm2: add (optional) support for generating a local signing key from PCR 15\n  state. use private key part to sign PCR 7+14 policies. stash signatures for\n  expected PCR7+14 policies in EFI var. use public key part in disk encryption.\n  generate new sigs whenever db/dbx/mok/mokx gets updated. that way we can\n  securely bind against SecureBoot/shim state, without having to renroll\n  everything on each update (but we still have to generate one sig on each\n  update, but that should be robust/idempotent). needs rollback protection, as\n  usual.\n\n* Lennart: big blog story about DDIs\n\n* Lennart: big blog story about building initrds\n\n* Lennart: big blog story about \"why systemd-boot\"\n\n* bpf: see if we can use BPF to solve the syslog message cgroup source problem:\n  one idea would be to patch source sockaddr of all AF_UNIX/SOCK_DGRAM to\n  implicitly contain the source cgroup id. Another idea would be to patch\n  sendto()/connect()/sendmsg() sockaddr on-the-fly to use a different target\n  sockaddr.\n\n* bpf: see if we can address opportunistic inode sharing of immutable fs images\n  with BPF. i.e. if bpf gives us power to hook into openat() and return a\n  different inode than is requested for which we however it has same contents\n  then we can use that to implement opportunistic inode sharing among DDIs:\n  make all DDIs ship xattr on all reg files with a SHA256 hash. Then, also\n  dictate that DDIs should come with a top-level subdir where all reg files are\n  linked into by their SHA256 sum. Then, whenever an inode is opened with the\n  xattr set, check bpf table to find dirs with hashes for other prior DDIs and\n  try to use inode from there.\n\n* extend the verity signature partition to permit multiple signatures for the\n  same root hash, so that people can sign a single image with multiple keys.\n\n* consider adding a new partition type, just for /opt/ for usage in system\n  extensions\n\n* gpt-auto-discovery: also use the pkcs7 signature stuff, and pass signature to\n  kernel. So far we only did this for the various --image= switches, but not\n  for the root fs or /usr/.\n\n* dissection policy should enforce that unlocking can only take place by\n  certain means, i.e. only via pw, only via tpm2, or only via fido, or a\n  combination thereof.\n\n* make the systemd-repart \"seed\" value provisionable via credentials, so that\n  confidential computing environments can set it and deterministically\n  enforce the uuids for partitions created, so that they can calculate PCR 15\n  ahead of time.\n\n* systemd-repart: also derive the volume key from the seed value, for the\n  aforementioned purpose.\n\n* in the initrd: derive the default machine ID to pass to the host PID 1 via\n  $machine_id from the same seed credential.\n\n* Add systemd-sysupdate-initrd.service or so that runs systemd-sysupdate in the\n  initrd to bootstrap the initrd to populate the initial partitions. Some things\n  to figure out:\n  - Should it run on firstboot or on every boot?\n  - If run on every boot, should it use the sysupdate config from the host on\n    subsequent boots?\n\n* revisit default PCR bindings in cryptenroll and systemd-creds. Currently they\n  use PCR 7 which should contain secureboot state db/dbx. Which sounded like a\n  safe bet, given that it should change only on policy changes, and not\n  software updates. But that's wrong. Recent fwupd (rightfully) contains code\n  for updating the dbx denylist. This means even without any active policy\n  change PCR 7 might change. Hence, better idea might be in systemd-creds to\n  default to PCR 15 at least if sd-stub is used (i.e. bind to system identity),\n  and in cryptsetup simply the empty list? Also, PCR 14 almost certainly should\n  be included as much as PCR 7 (as it contains shim's policy, which is\n  certainly as relevant as PCR 7 on many systems)\n\n* To mimic the new tpm2-measure-pcr= crypttab option add the same to veritytab\n  (measuring the root hash) and integritytab (measuring the HMAC key if one is\n  used)\n\n* We should start measuring all services, containers, and system extensions we\n  activate. probably into PCR 13. i.e. add --tpm2-measure-pcr= or so to\n  systemd-nspawn, and MeasurePCR= to unit files. Should contain a measurement\n  of the activated configuration and the image that is being activated (in case\n  verity is used, hash of the root hash).\n\n* bootspec: permit graceful \"update\" from type #2 to type #1. If both a type #1\n  and a type #2 entry exist under otherwise the exact same name, then use the\n  type #1 entry, and ignore the type #2 entry. This way, people can \"upgrade\"\n  from the UKI with all parameters baked in to a Type #1 .conf file with manual\n  parametrization, if needed. This matches our usual rule that admin config\n  should win over vendor defaults.\n\n* write a \"search path\" spec, that documents the prefixes to search in\n  (i.e. the usual /etc/, /run/, /usr/lib/ dance, potentially /usr/etc/), how to\n  sort found entries, how masking works and overriding.\n\n* automatic boot assessment: add one more default success check that just waits\n  for a bit after boot, and blesses the boot if the system stayed up that long.\n\n* systemd-repart: add support for generating ISO9660 images\n\n* systemd-repart: in addition to the existing \"factory reset\" mode (which\n  simply empties existing partitions marked for that). add a mode where\n  partitions marked for it are entirely removed. Use case: remove secondary OS\n  copy, and redundant partitions entirely, and recreate them anew.\n\n* systemd-boot: maybe add support for collapsing menu entries of the same OS\n  into one item that can be opened (like in a \"tree view\" UI element) or\n  collapsed. If only a single OS is installed, disable this mode, but if\n  multiple OSes are installed might make sense to default to it, so that user\n  is not immediately bombarded with a multitude of Linux kernel versions but\n  only one for each OS.\n\n* systemd-repart: if the GPT *disk* UUID (i.e. the one global for the entire\n  disk) is set to all FFFFF then use this as trigger for factory reset, in\n  addition to the existing mechanisms via EFI variables and kernel command\n  line. Benefit: works also on non-EFI systems, and can be requested on one\n  boot, for the next.\n\n* systemd-sysupdate: make transport pluggable, so people can plug casync or\n  similar behind it, instead of http.\n\n* systemd-tmpfiles: add concept for conditionalizing lines on factory reset\n  boot, or on first boot.\n\n* we probably needs .pcrpkeyrd or so as additional PE section in UKIs,\n  which contains a separate public key for PCR values that only apply in the\n  initrd, i.e. in the boot phase \"enter-initrd\". Then, consumers in userspace\n  can easily bind resources to just the initrd. Similar, maybe one more for\n  \"enter-initrd:leave-initrd\" for resources that shall be accessible only\n  before unprivileged user code is allowed. (we only need this for .pcrpkey,\n  not for .pcrsig, since the latter is a list of signatures anyway). With that,\n  when you enroll a LUKS volume or similar, pick either the .pcrkey (for\n  coverage through all phases of the boot, but excluding shutdown), the\n  .pcrpkeyrd (for coverage in the initrd only) and .pcrpkeybt (for coverage\n  until users are allowed to log in).\n\n* Once the root fs LUKS volume key is measured into PCR 15, default to binding\n  credentials to PCR 15 in \"systemd-creds\"\n\n* add support for asymmetric LUKS2 TPM based encryption. i.e. allow preparing\n  an encrypted image on some host given a public key belonging to a specific\n  other host, so that only hosts possessing the private key in the TPM2 chip\n  can decrypt the volume key and activate the volume. Use case: systemd-confext\n  for a central orchestrator to generate confext images securely that can only\n  be activated on one specific host (which can be used for installing a bunch\n  of creds in /etc/credstore/ for example). Extending on this: allow binding\n  LUKS2 TPM based encryption also to the TPM2 internal clock. Net result:\n  prepare a confext image that can only be activated on a specific host that\n  runs a specific software in a specific time window. confext would be\n  automatically invalidated outside of it.\n\n* maybe add a \"systemd-report\" tool, that generates a TPM2-backed \"report\" of\n  current system state, i.e. a combination of PCR information, local system\n  time and TPM clock, running services, recent high-priority log\n  messages/coredumps, system load/PSI, signed by the local TPM chip, to form an\n  enhanced remote attestation quote. Use case: a simple orchestrator could use\n  this: have the report tool upload these reports every 3min somewhere. Then\n  have the orchestrator collect these reports centrally over a 3min time\n  window, and use them to determine what which node should now start/stop what,\n  and generate a small confext for each node, that uses Uphold= to pin services\n  on each node.  The confext would be encrypted using the asymmetric encryption\n  proposed above, so that it can only be activated on the specific host, if the\n  software is in a good state, and within a specific time frame. Then run a\n  loop on each node that sends report to orchestrator and then sysupdate to\n  update confext.  Orchestrator would be stateless, i.e. operate on desired\n  config and collected reports in the last 3min time window only, and thus can\n  be trivially scaled up since all instances of the orchestrator should come to\n  the same conclusions given the same inputs of reports/desired workload info.\n  Could also be used to deliver Wireguard secrets and thus to clients, thus\n  permitting zero-trust networking: secrets are rolled over via confext updates,\n  and via the time window TPM logic invalidated if node doesn't keep itself\n  updated, or becomes corrupted in some way.\n\n* in the initrd, once the rootfs encryption key has been measured to PCR 15,\n  derive default machine ID to use from it, and pass it to host PID 1.\n\n* sd-boot: for each installed OS, grey out older entries (i.e. all but the\n  newest), to indicate they are obsolete\n\n* automatically propagate LUKS password credential into cryptsetup from host\n  (i.e. SMBIOS type #11, ‚Ä¶), so that one can unlock LUKS via VM hypervisor\n  supplied password.\n\n* add ability to path_is_valid() to classify paths that refer to a dir from\n  those which may refer to anything, and use that in various places to filter\n  early. i.e. stuff ending in \"/\", \"/.\" and \"/..\" definitely refers to a\n  directory, and paths ending that way can be refused early in many contexts.\n\n* systemd-measure: add --pcrpkey-auto as an alternative to --pcrpkey=, where it\n  would just use the same public key specified with --public-key= (or the one\n  automatically derived from --private-key=).\n\n* Add \"purpose\" flag to partition flags in discoverable partition spec that\n  indicate if partition is intended for sysext, for portable service, for\n  booting and so on. Then, when dissecting DDI allow specifying a purpose to\n  use as additional search condition. Use case: images that combined a sysext\n  partition with a portable service partition in one.\n\n* On boot, auto-generate an asymmetric key pair from the TPM,\n  and use it for validating DDIs and credentials. Maybe upload it to the kernel\n  keyring, so that the kernel does this validation for us for verity and kernel\n  modules\n\n* lock down acceptable encrypted credentials at boot, via simple allowlist,\n  maybe on kernel command line:\n  systemd.import_encrypted_creds=foobar.waldo,tmpfiles.extra to protect locked\n  down kernels from credentials generated on the host with a weak kernel\n\n* Merge systemd-creds options --uid= (which accepts user names) and --user.\n\n* Add support for extra verity configuration options to systemd-repart (FEC,\n  hash type, etc)\n\n* chase(): take inspiration from path_extract_filename() and return\n  O_DIRECTORY if input path contains trailing slash.\n\n* chase(): refuse resolution if trailing slash is specified on input,\n  but final node is not a directory\n\n* document in boot loader spec that symlinks in XBOOTLDR/ESP are not OK even if\n  non-VFAT fs is used.\n\n* measure credentials picked up from SMBIOS to some suitable PCR\n\n* measure GPT and LUKS headers somewhere when we use them (i.e. in\n  systemd-gpt-auto-generator/systemd-repart and in systemd-cryptsetup?)\n\n* pick up creds from EFI vars\n\n* Add and pickup tpm2 metadata for creds structure.\n\n* sd-boot: we probably should include all BootXY EFI variable defined boot\n  entries in our menu, and then suppress ourselves. Benefit: instant\n  compatibility with all other OSes which register things there, in particular\n  on other disks. Always boot into them via NextBoot EFI variable, to not\n  affect PCR values.\n\n* systemd-measure tool:\n  - pre-calculate PCR 12 (command line) + PCR 13 (sysext) the same way we can precalculate PCR 11\n\n* in sd-boot: load EFI drivers from a new PE section. That way, one can have a\n  \"supercharged\" sd-boot binary, that could carry ext4 drivers built-in.\n\n* sd-device: add an API for acquiring list of child devices, given a device\n  objects (i.e. all child dirents that dirs or symlinks to dirs)\n\n* sd-device: maybe pin the sysfs dir with an fd, during the entire runtime of\n  an sd_device, then always work based on that.\n\n* maybe add new flags to gpt partition tables for rootfs and usrfs indicating\n  purpose, i.e. whether something is supposed to be bootable in a VM, on\n  baremetal, on an nspawn-style container, if it is a portable service image,\n  or a sysext for initrd, for host os, or for portable container. Then hook\n  portabled/‚Ä¶ up to udev to watch block devices coming up with the flags set, and\n  use it.\n\n* sd-boot should look for information what to boot in SMBIOS, too, so that VM\n  managers can tell sd-boot what to boot into and suchlike\n\n* add \"systemd-sysext identify\" verb, that you can point on any file in /usr/\n  and that determines from which overlayfs layer it originates, which image, and with\n  what it was signed.\n\n* systemd-creds: extend encryption logic to support asymmetric\n  encryption/authentication. Idea: add new verb \"systemd-creds public-key\"\n  which generates a priv/pub key pair on the TPM2 and stores the priv key\n  locally in /var. It then outputs a certificate for the pub part to stdout.\n  This can then be copied/taken elsewhere, and can be used for encrypting creds\n  that only the host on its specific hw can decrypt. Then, support a drop-in\n  dir with certificates that can be used to authenticate credentials. Flow of\n  operations is then this: build image with owner certificate, then after\n  boot up issue \"systemd-creds public-key\" to acquire pubkey of the machine.\n  Then, when passing data to the machine, sign with privkey belonging to one of\n  the dropped in certs and encrypted with machine pubkey, and pass to machine.\n  Machine is then able to authenticate you, and confidentiality is guaranteed.\n\n* building on top of the above, the pub/priv key pair generated on the TPM2\n  should probably also one you can use to get a remote attestation quote.\n\n* Process credentials in:\n  ‚Ä¢ crypttab-generator: allow defining additional crypttab-like volumes via\n    credentials (similar: verity-generator, integrity-generator). Use\n    fstab-generator logic as inspiration.\n  ‚Ä¢ run-generator: allow defining additional commands to run via a credential\n  ‚Ä¢ resolved: allow defining additional /etc/hosts entries via a credential (it\n    might make sense to then synthesize a new combined /etc/hosts file in /run\n    and bind mount it on /etc/hosts for other clients that want to read it.\n  ‚Ä¢ repart: allow defining additional partitions via credential\n  ‚Ä¢ timesyncd: pick NTP server info from credential\n  ‚Ä¢ portabled: read a credential \"portable.extra\" or so, that takes a list of\n    file system paths to enable on start.\n  ‚Ä¢ make systemd-fstab-generator look for a system credential encoding root= or\n    usr=\n  ‚Ä¢ in gpt-auto-generator: check partition uuids against such uuids supplied via\n    sd-stub credentials. That way, we can support parallel OS installations with\n    pre-built kernels.\n\n* define a JSON format for units, separating out unit definitions from unit\n  runtime state. Then, expose it:\n\n  1. Add Describe() method to Unit D-Bus object that returns a JSON object\n     about the unit.\n  2. Expose this natively via Varlink, in similar style\n  3. Use it when invoking binaries (i.e. make PID 1 fork off systemd-executor\n     binary which reads the JSON definition and runs it), to address the cow\n     trap issue and the fact that NSS is actually forbidden in\n     forked-but-not-exec'ed children\n  4. Add varlink API to run transient units based on provided JSON definitions\n\n* Add SUPPORT_END_URL= field to os-release with more *actionable* information\n  what to do if support ended\n\n* pam_systemd: on interactive logins, maybe show SUPPORT_END information at\n  login time, √† la motd\n\n* sd-boot: instead of unconditionally deriving the ESP to search boot loader\n  spec entries in from the paths of sd-boot binary, let's optionally allow it\n  to be configured on sd-boot cmdline + efi var. Use case: embed sd-boot in the\n  UEFI firmware (for example, ovmf supports that via qemu cmdline option), and\n  use it to load stuff from the ESP.\n\n* mount /var/ from initrd, so that we can apply sysext and stuff before the\n  initrd transition. Specifically:\n  1. There should be a var= kernel cmdline option, matching root= and usr=\n  2. systemd-gpt-auto-generator should auto-mount /var if it finds it on disk\n  3. mount.x-initrd mount option in fstab should be implied for /var\n\n* make persistent restarts easier by adding a new setting OpenPersistentFile=\n  or so, which allows opening one or more files that is \"persistent\" across\n  service restarts, hot reboot, cold reboots (depending on configuration): the\n  files are created empty on first invocation, and on subsequent invocations\n  the files are reboot. The files would be backed by tmpfs, pmem or /var\n  depending on desired level of persistency.\n\n* sd-event: add ability to \"chain\" event sources. Specifically, add a call\n  sd_event_source_chain(x, y), which will automatically enable event source y\n  in oneshot mode once x is triggered. Use case: in src/core/mount.c implement\n  the /proc/self/mountinfo rescan on SIGCHLD with this: whenever a SIGCHLD is\n  seen, trigger the rescan defer event source automatically, and allow it to be\n  dispatched *before* the SIGCHLD is handled (based on priorities). Benefit:\n  dispatch order is strictly controlled by priorities again. (next step: chain\n  event sources to the ratelimit being over)\n\n* if we fork of a service with StandardOutput=journal, and it forks off a\n  subprocess that quickly dies, we might not be able to identify the cgroup it\n  comes from, but we can still derive that from the stdin socket its output\n  came from. We apparently don't do that right now.\n\n* add ability to set hostname with suffix derived from machine id at boot\n\n* add PR_SET_DUMPABLE service setting\n\n* homed/userdb: maybe define a \"companion\" dir for home directories where apps\n  can safely put privileged stuff in. Would not be writable by the user, but\n  still conceptually belong to the user. Would be included in user's quota if\n  possible, even if files are not owned by UID of user. Use case: container\n  images that owned by arbitrary UIDs, and are owned/managed by the users, but\n  are not directly belonging to the user's UID. Goal: we shouldn't place more\n  privileged dirs inside of unprivileged dirs, and thus containers really\n  should not be placed inside of traditional UNIX home dirs (which are owned by\n  users themselves) but somewhere else, that is separate, but still close\n  by. Inform user code about path to this companion dir via env var, so that\n  container managers find it. the ~/.identity file is also a candidate for a\n  file to move there, since it is managed by privileged code (i.e. homed) and\n  not unprivileged code.\n\n* maybe add support for binding and connecting AF_UNIX sockets in the file\n  system outside of the 108ch limit. When connecting, open O_PATH fd to socket\n  inode first, then connect to /proc/self/fd/XYZ. When binding, create symlink\n  to target dir in /tmp, and bind through it.\n\n* add a proper concept of a \"developer\" mode, i.e. where cryptographic\n  protections of the root OS are weakened after interactive confirmation, to\n  allow hackers to allow their own stuff. idea: allow entering developer mode\n  only via explicit choice in boot menu: i.e. add explicit boot menu item for\n  it. When developer mode is entered, generate a key pair in the TPM2, and add\n  the public part of it automatically to keychain of valid code signature keys\n  on subsequent boots. Then provide a tool to sign code with the key in the\n  TPM2. Ensure that boot menu item is the only way to enter developer mode, by\n  binding it to locality/PCRs so that keys cannot be generated otherwise.\n\n* services: add support for cryptographically unlocking per-service directories\n  via TPM2. Specifically, for StateDirectory= (and related dirs) use fscrypt to\n  set up the directory so that it can only be accessed if host and app are in\n  order.\n\n* update HACKING.md to suggest developing systemd with the ideas from:\n  https://0pointer.net/blog/testing-my-system-code-in-usr-without-modifying-usr.html\n  https://0pointer.net/blog/running-an-container-off-the-host-usr.html\n\n* sd-event: compat wd reuse in inotify code: keep a set of removed watch\n  descriptors, and clear this set piecemeal when we see the IN_IGNORED event\n  for it, or when read() returns EAGAIN or on IN_Q_OVERFLOW. Then, whenever we\n  see an inotify wd event check against this set, and if it is contained ignore\n  the event. (to be fully correct this would have to count the occurrences, in\n  case the same wd is reused multiple times before we start processing\n  IN_IGNORED again)\n\n* for vendor-built signed initrds:\n  - kernel-install should be able to install encrypted creds automatically for\n    machine id, root pw, rootfs uuid, resume partition uuid, and place next to\n    EFI kernel, for sd-stub to pick them up. These creds should be locked to\n    the TPM, and bind to the right PCR the kernel is measured to.\n  - kernel-install should be able to pick up initrd sysexts automatically and\n    place them next to EFI kernel, for sd-stub to pick them up.\n  - systemd-fstab-generator should look for rootfs device to mount in creds\n  - systemd-resume-generator should look for resume partition uuid in creds\n  - sd-stub: automatically pick up microcode from ESP (/loader/microcode/*)\n    and synthesize initrd from it, and measure it. Signing is not necessary, as\n    microcode does that on its own. Pass as first initrd to kernel.\n\n* Maybe extend the service protocol to support handling of some specific SIGRT\n  signal for setting service log level, that carries the level via the\n  sigqueue() data parameter. Enable this via unit file setting.\n\n* sd_notify/vsock: maybe support binding to AF_VSOCK in Type=notify services,\n  then passing $NOTIFY_SOCKET and $NOTIFY_GUESTCID with PID1's cid (typically\n  fixed to \"2\", i.e. the official host cid) and the expected guest cid, for the\n  two sides of the channel. The latter env var could then be used in an\n  appropriate qemu cmdline. That way qemu payloads could talk sd_notify()\n  directly to host service manager.\n\n* sd-device should return the devnum type (i.e. 'b' or 'c') via some API for an\n  sd_device object, so that data passed into sd_device_new_from_devnum() can\n  also be queried.\n\n* sd-event: optionally, if per-event source rate limit is hit, downgrade\n  priority, but leave enabled, and once ratelimit window is over, upgrade\n  priority again. That way we can combat event source starvation without\n  stopping processing events from one source entirely.\n\n* sd-event: similar to existing inotify support add fanotify support (given\n  that apparently new features in this area are only going to be added to the\n  latter).\n\n* sd-event: add 1st class event source for clock changes\n\n* sd-event: add 1st class event source for timezone changes\n\n* support uefi/http boots with sd-boot: instead of looking for dropin files in\n  /loader/entries/ dir, look for a file /loader/entries/SHA256SUMS and use that\n  as directory manifest. The file would be a standard directory listing as\n  generated by GNU sha256sums.\n\n* sd-boot: maybe add support for embedding the various auxiliary resources we\n  look for right in the sd-boot binary. i.e. take inspiration from sd-stub\n  logic: allow combining sd-boot via ukify with kernels to enumerate, .conf\n  files, drivers, keys to enroll and so on. Then, add whatever we find that way\n  to the menu. Use case: allow building a single PE image you can boot into via\n  UEFI HTTP boot.\n\n* maybe add a new UEFI stub binary \"sd-http\". It works similar to sd-stub, but\n  all it does is download a file from a http server, and execute it, after\n  optionally checking its hash sum. idea would be: combine this \"sd-http\" stub\n  binary with some minimal info about a URL + hash sum, plus .osrel data, and\n  drop it into the unified kernel dir in the ESP. And bam you have something\n  that is tiny, feels a lot like a unified kernel, but all it does is chainload\n  the real kernel. benefit: downloading these stubs would be tiny and quick,\n  hence cheap for enumeration.\n\n* sysext: measure all activated sysext into a TPM PCR\n\n* systemd-dissect: show available versions inside of a disk image, i.e. if\n  multiple versions are around of the same resource, show which ones. (in other\n  words: show partition labels).\n\n* systemd-dissect: add --cat switch for dumping files such as /etc/os-release\n\n* per-service sandboxing option: ProtectIds=. If used, will overmount\n  /etc/machine-id and /proc/sys/kernel/random/boot_id with synthetic files, to\n  make it harder for the service to identify the host. Depending on the user\n  setting it should be fully randomized at invocation time, or a hash of the\n  real thing, keyed by the unit name or so. Of course, there are other ways to\n  get these IDs (e.g. journal) or similar ids (e.g. MAC addresses, DMI ids, CPU\n  ids), so this knob would only be useful in combination with other lockdown\n  options. Particularly useful for portable services, and anything else that\n  uses RootDirectory= or RootImage=. (Might also over-mount\n  /sys/class/dmi/id/*{uuid,serial} with /dev/null).\n\n* doc: prep a document explaining resolved's internal objects, i.e. Query\n  vs. Question vs. Transaction vs. Stream and so on.\n\n* doc: prep a document explaining PID 1's internal logic, i.e. transactions,\n  jobs, units\n\n* automatically ignore threaded cgroups in cg_xyz().\n\n* add linker script that implicitly adds symbol for build ID and new coredump\n  json package metadata, and use that when logging\n\n* Enable RestrictFileSystems= for all our long-running services (similar:\n  RestrictNetworkInterfaces=)\n\n* Add systemd-analyze security checks for RestrictFileSystems= and\n  RestrictNetworkInterfaces=\n\n* cryptsetup/homed: implement TOTP authentication backed by TPM2 and its\n  internal clock.\n\n* man: rework os-release(5), and clearly separate our extension-release.d/ and\n  initrd-release parts, i.e. list explicitly which fields are about what.\n\n* sysext: before applying a sysext, do a superficial validation run so that\n  things are not rearranged to wildy. I.e. protect against accidental fuckups,\n  such as masking out /usr/lib/ or so. We should probably refuse if existing\n  inodes are replaced by other types of inodes or so.\n\n* userdb: when synthesizing NSS records, pick \"best\" password from defined\n  passwords, not just the first. i.e. if there are multiple defined, prefer\n  unlocked over locked and prefer non-empty over empty.\n\n* homed: if the homed shell fallback thing has access to an SSH agent, try to\n  use it to unlock home dir (if ssh-agent forwarding is enabled). We\n  could implement SSH unlocking of a homedir with that: when enrolling a new\n  ssh pubkey in a user record we'd ask the ssh-agent to sign some random value\n  with the privkey, then use that as luks key to unlock the home dir. Will not\n  work for ECDSA keys since their signatures contain a random component, but\n  will work for RSA and Ed25519 keys.\n\n* add tiny service that decrypts encrypted user records passed via initrd\n  credential logic and drops them into /run where nss-systemd can pick them up,\n  similar to /run/host/userdb/. Use case: drop a root user JSON record there,\n  and use it in the initrd to log in as root with locally selected password,\n  for debugging purposes. Other use case: boot into qemu with regular user\n  mounted from host. maybe put this in systemd-user-sessions.service?\n\n* drop dependency on libcap, replace by direct syscalls based on\n  CapabilityQuintet we already have. (This likely allows us to drop libcap\n  dep in the base OS image)\n\n* userdbd: implement an additional varlink service socket that provides the\n  host user db in restricted form, then allow this to be bind mounted into\n  sandboxed environments that want the host database in minimal form. All\n  records would be stripped of all meta info, except the basic UID/name\n  info. Then use this in portabled environments that do not use PrivateUsers=1.\n\n* portabled: when extracting unit files and copying to system.attached, if a\n  .p7s is available in the image, use it to protect the system.attached copy\n  with fs-verity, so that it cannot be tampered with\n\n* /etc/veritytab: allow that the roothash column can be specified as fs path\n  including a path to an AF_UNIX path, similar to how we do things with the\n  keys of /etc/crypttab. That way people can store/provide the roothash\n  externally and provide to us on demand only.\n\n* we probably should extend the root verity hash of the root fs into some PCR\n  on boot. (i.e. maybe add a veritytab option tpm2-measure=12 or so to measure\n  it into PCR 12); Similar: we probably should extend the LUKS volume key of\n  the root fs into some PCR on boot. (i.e. maybe add a crypttab option\n  tpm2-measure=15 or so to measure it into PCR 15); once both are in place\n  update gpt-auto-discovery to generate these by default for the partitions it\n  discovers. Static vendor stuff should probably end up in PCR 12 (i.e. the\n  verity hash), with local keys in PCR 15 (i.e. the encryption volume\n  key). That way, we nicely distinguish resources supplied by the OS vendor\n  (i.e. sysext, root verity) from those inherently local (i.e. encryption key),\n  which is useful if they shall be signed separately.\n\n* in uefi stub: query firmware regarding which PCR banks are being used, store\n  that in EFI var. then use this when enrolling TPM2 in cryptsetup to verify\n  that the selected PCRs actually are used by firmware.\n\n* rework recursive read-only remount to use new mount API\n\n* PAM: pick up authentication token from credentials\n\n* when mounting disk images: if IMAGE_ID/IMAGE_VERSION is set in os-release\n  data in the image, make sure the image filename actually matches this, so\n  that images cannot be misused.\n\n* New udev block device symlink names:\n  /dev/disk/by-parttypelabel/<pttype>-<ptlabel>. Use case: if pt label is used\n  as partition image version string, this is a safe way to reference a specific\n  version of a specific partition type, in particular where related partitions\n  are processed (e.g. verity + rootfs both named \"LennartOS_0.7\").\n\n* sysupdate:\n  - add fuzzing to the pattern parser\n  - support casync as download mechanism\n  - \"systemd-sysupdate update --all\" support, that iterates through all components\n    defined on the host, plus all images installed into /var/lib/machines/,\n    /var/lib/portable/ and so on.\n  - Allow invocation with a single transfer definition, i.e. with\n    --definitions= pointing to a file rather than a dir.\n  - add ability to disable implicit decompression of downloaded artifacts,\n    i.e. a Compress=no option in the transfer definitions\n\n* in sd-id128: also parse UUIDs in RFC4122 URN syntax (i.e. chop off urn:uuid: prefix)\n\n* systemd-sysext: optionally, run it in initrd already, before transitioning\n  into host, to open up possibility for services shipped like that.\n\n* introduce /dev/disk/root/* symlinks that allow referencing partitions on the\n  disk the rootfs is on in a reasonably secure way. (or maybe: add\n  /dev/gpt-auto-{home,srv,boot,‚Ä¶} similar in style to /dev/gpt-auto-root as we\n  already have it.\n\n* whenever we receive fds via SCM_RIGHTS make sure none got dropped due to the\n  reception limit the kernel silently enforces.\n\n* Add service unit setting ConnectStream= which takes IP addresses and connects to them.\n\n* Similar, Load= which takes literal data in text or base64 format, and puts it\n  into a memfd, and passes that. This enables some fun stuff, such as embedding\n  bash scripts in unit files, by combining Load= with ExecStart=/bin/bash\n  /proc/self/fd/3\n\n* add a ConnectSocket= setting to service unit files, that may reference a\n  socket unit, and which will connect to the socket defined therein, and pass\n  the resulting fd to the service program via socket activation proto.\n\n* Add a concept of ListenStream=anonymous to socket units: listen on a socket\n  that is deleted in the fs. Use case would be with ConnectSocket= above.\n\n* importd: support image signature verification with PKCS#7 + OpenBSD signify\n  logic, as alternative to crummy gpg\n\n* add \"systemd-analyze debug\" + AttachDebugger= in unit files: The former\n  specifies a command to execute; the latter specifies that an already running\n  \"systemd-analyze debug\" instance shall be contacted and execution paused\n  until it gives an OK. That way, tools like gdb or strace can be safely be\n  invoked on processes forked off PID 1.\n\n* expose MS_NOSYMFOLLOW in various places\n\n* credentials system:\n  - acquire from EFI variable?\n  - acquire via ask-password?\n  - acquire creds via keyring?\n  - pass creds via keyring?\n  - pass creds via memfd?\n  - acquire + decrypt creds from pkcs11?\n  - make PAMName= acquire pw via creds logic\n  - make macsec code in networkd read key via creds logic (copy logic from\n    wireguard)\n  - make gatewayd/remote read key via creds logic\n  - add sd_notify() command for flushing out creds not needed anymore\n\n* TPM2: auto-reenroll in cryptsetup, as fallback for hosed firmware upgrades\n  and such\n\n* introduce a new group to own TPM devices\n\n* cryptsetup: add option for automatically removing empty password slot on boot\n\n* cryptsetup: optionally, when run during boot-up and password is never\n  entered, and we are on battery power (or so), power off machine again\n\n* cryptsetup: when waiting for FIDO2/PKCS#11 token, tell plymouth that, and\n  allow plymouth to abort the waiting and enter pw instead\n\n* make cryptsetup lower --iter-time\n\n* cryptsetup: allow encoding key directly in /etc/crypttab, maybe with a\n  \"base64:\" prefix. Useful in particular for pkcs11 mode.\n\n* cryptsetup: reimplement the mkswap/mke2fs in cryptsetup-generator to use\n  systemd-makefs.service instead.\n\n* cryptsetup:\n  - cryptsetup-generator: allow specification of passwords in crypttab itself\n  - support rd.luks.allow-discards= kernel cmdline params in cryptsetup generator\n\n* systemd-analyze netif that explains predictable interface (or networkctl)\n\n* systemd-analyze inspect-elf should show other notes too, at least build-id.\n\n* Figure out naming of verbs in systemd-analyze: we have (singular) capability,\n  exit-status, but (plural) filesystems, architectures.\n\n* Add service setting to run a service within the specified VRF. i.e. do the\n  equivalent of \"ip vrf exec\".\n\n* special case some calls of chase() to use openat2() internally, so\n  that the kernel does what we otherwise do.\n\n* add a new flag to chase() that stops chasing once the first missing\n  component is found and then allows the caller to create the rest.\n\n* make use of new glibc 2.32 APIs sigabbrev_np().\n\n* if /usr/bin/swapoff fails due to OOM, log a friendly explanatory message about it\n\n* pid1: also remove PID files of a service when the service starts, not just\n  when it exits\n\n* make us use dynamically fewer deps for containers in general purpose distros:\n  o turn into dlopen() deps:\n    - libblkid (only in RootImage= handling in PID 1, but not elsewhere)\n    - libpam (only when called from PID 1)\n\n* seccomp: maybe use seccomp_merge() to merge our filters per-arch if we can.\n  Apparently kernel performance is much better with fewer larger seccomp\n  filters than with more smaller seccomp filters.\n\n* systemd-path: Add \"private\" runtime/state/cache dir enum, mapping to\n  $RUNTIME_DIRECTORY, $STATE_DIRECTORY and such\n\n* seccomp: by default mask x32 ABI system wide on x86-64. it's on its way out\n\n* seccomp: don't install filters for ABIs that are masked anyway for the\n  specific service\n\n* busctl: maybe expose a verb \"ping\" for pinging a dbus service to see if it\n  exists and responds.\n\n* socket units: allow creating a udev monitor socket with ListenDevices= or so,\n  with matches, then activate app through that passing socket over\n\n* unify on openssl:\n  - kill gnutls support in resolved\n  - figure out what to do about libmicrohttpd, which has a hard dependency on\n    gnutls\n  - port fsprg over to a dlopen lib, then switch it to openssl\n\n* add growvol and makevol options for /etc/crypttab, similar to\n  x-systemd.growfs and x-systemd-makefs.\n\n* userdb: allow username prefix searches in varlink API, allow realname and\n  realname substr searches in varlink API\n\n* userdb: allow uid/gid range checks\n\n* userdb: allow existence checks\n\n* pid1: activation by journal search expression\n\n* when switching root from initrd to host, set the machine_id env var so that\n  if the host has no machine ID set yet we continue to use the random one the\n  initrd had set.\n\n* sd-event: add native support for P_ALL waitid() watching, then move PID 1 to\n  it for reaping assigned but unknown children. This needs to some special care\n  to operate somewhat sensibly in light of priorities: P_ALL will return\n  arbitrary processes, regardless of the priority we want to watch them with,\n  hence on each event loop iteration check all processes which we shall watch\n  with higher prio explicitly, and then watch the entire rest with P_ALL.\n\n* tweak sd-event's child watching: keep a prioq of children to watch and use\n  waitid() only on the children with the highest priority until one is waitable\n  and ignore all lower-prio ones from that point on\n\n* maybe introduce xattrs that can be set on the root dir of the root fs\n  partition that declare the volatility mode to use the image in. Previously I\n  thought marking this via GPT partition flags but that's not ideal since\n  that's outside of the LUKS encryption/verity verification, and we probably\n  shouldn't operate in a volatile mode unless we got told so from a trusted\n  source.\n\n* coredump: maybe when coredumping read a new xattr from /proc/$PID/exe that\n  may be used to mark a whole binary as non-coredumpable. Would fix:\n  https://bugs.freedesktop.org/show_bug.cgi?id=69447\n\n* teach parse_timestamp() timezones like the calendar spec already knows it\n\n* We should probably replace /etc/rc.d/README with a symlink to doc\n  content. After all it is constant vendor data.\n\n* maybe add kernel cmdline params: to force random seed crediting\n\n* let's not GC a unit while its ratelimits are still pending\n\n* when killing due to service watchdog timeout maybe detect whether target\n  process is under ptracing and then log loudly and continue instead.\n\n* make rfkill uaccess controllable by default, i.e. steal rule from\n  gnome-bluetooth and friends\n\n* make MAINPID= message reception checks even stricter: if service uses User=,\n  then check sending UID and ignore message if it doesn't match the user or\n  root.\n\n* maybe trigger a uevent \"change\" on a device if \"systemctl reload xyz.device\"\n  is issued.\n\n* when importing an fs tree with machined, optionally apply userns-rec-chown\n\n* when importing an fs tree with machined, complain if image is not an OS\n\n* Maybe introduce a helper safe_exec() or so, which is to execve() which\n  safe_fork() is to fork(). And then make revert the RLIMIT_NOFILE soft limit\n  to 1K implicitly, unless explicitly opted-out.\n\n* rework seccomp/nnp logic that even if User= is used in combination with\n  a seccomp option we don't have to set NNP. For that, change uid first whil\n  keeping CAP_SYS_ADMIN, then apply seccomp, the drop cap.\n\n* when no locale is configured, default to UEFI's PlatformLang variable\n\n* add a new syscall group \"@esoteric\" for more esoteric stuff such as bpf() and\n  usefaultd() and make systemd-analyze check for it.\n\n* paranoia: whenever we process passwords, call mlock() on the memory\n  first. i.e. look for all places we use free_and_erasep() and\n  augment them with mlock(). Also use MADV_DONTDUMP.\n  Alternatively (preferably?) use memfd_secret().\n\n* Move RestrictAddressFamily= to the new cgroup create socket\n\n* optionally: turn on cgroup delegation for per-session scope units\n\n* sd-boot: optionally, show boot menu when previous default boot item has\n  non-zero \"tries done\" count\n\n* augment CODE_FILE=, CODE_LINE= with something like CODE_BASE= or so which\n  contains some identifier for the project, which allows us to include\n  clickable links to source files generating these log messages. The identifier\n  could be some abberviated URL prefix or so (taking inspiration from Go\n  imports). For example, for systemd we could use\n  CODE_BASE=github.com/systemd/systemd/blob/98b0b1123cc or so which is\n  sufficient to build a link by prefixing \"http://\" and suffixing the\n  CODE_FILE.\n\n* Augment MESSAGE_ID with MESSAGE_BASE, in a similar fashion so that we can\n  make clickable links from log messages carrying a MESSAGE_ID, that lead to\n  some explanatory text online.\n\n* maybe extend .path units to expose fanotify() per-mount change events\n\n* hibernate/s2h: if swap is on weird storage and refuse if so\n\n* cgroups: use inotify to get notified when somebody else modifies cgroups\n  owned by us, then log a friendly warning.\n\n* beef up log.c with support for stripping ANSI sequences from strings, so that\n  it is OK to include them in log strings. This would be particularly useful so\n  that our log messages could contain clickable links for example for unit\n  files and suchlike we operate on.\n\n* add support for \"portablectl attach http://foobar.com/waaa.raw (i.e. importd integration)\n\n* sync dynamic uids/gids between host+portable srvice (i.e. if DynamicUser=1 is set for a service, make sure that the\n  selected user is resolvable in the service even if it ships its own /etc/passwd)\n\n* Fix DECIMAL_STR_MAX or DECIMAL_STR_WIDTH. One includes a trailing NUL, the\n  other doesn't. What a disaster. Probably to exclude it.\n\n* Check that users of inotify's IN_DELETE_SELF flag are using it properly, as\n  usually IN_ATTRIB is the right way to watch deleted files, as the former only\n  fires when a file is actually removed from disk, i.e. the link count drops to\n  zero and is not open anymore, while the latter happens when a file is\n  unlinked from any dir.\n\n* systemctl, machinectl, loginctl: port \"status\" commands over to\n  format-table.c's vertical output logic.\n\n* pid1: lock image configured with RootDirectory=/RootImage= using the usual nspawn semantics while the unit is up\n\n* add --vacuum-xyz options to coredumpctl, matching those journalctl already has.\n\n* add CopyFile= or so as unit file setting that may be used to copy files or\n  directory trees from the host to the services RootImage= and RootDirectory=\n  environment. Which we can use for /etc/machine-id and in particular\n  /etc/resolv.conf. Should be smart and do something useful on read-only\n  images, for example fall back to read-only bind mounting the file instead.\n\n* bypass SIGTERM state in unit files if KillSignal is SIGKILL\n\n* add proper dbus APIs for the various sd_notify() commands, such as MAINPID=1\n  and so on, which would mean we could report errors and such.\n\n* introduce DefaultSlice= or so in system.conf that allows changing where we\n  place our units by default, i.e. change system.slice to something\n  else. Similar, ManagerSlice= should exist so that PID1's own scope unit could\n  be moved somewhere else too. Finally machined and logind should get similar\n  options so that it is possible to move user session scopes and machines to a\n  different slice too by default. Use case: people who want to put resources on\n  the entire system, with the exception of one specific service. See:\n  https://lists.freedesktop.org/archives/systemd-devel/2018-February/040369.html\n\n* calenderspec: add support for week numbers and day numbers within a\n  year. This would allow us to define \"bi-weekly\" triggers safely.\n\n* sd-bus: add vtable flag, that may be used to request client creds implicitly\n  and asynchronously before dispatching the operation\n\n* sd-bus: parse addresses given in sd_bus_set_addresses immediately and not\n  only when used. Add unit tests.\n\n* make use of ethtool veth peer info in machined, for automatically finding out\n  host-side interface pointing to the container.\n\n* add some special mode to LogsDirectory=/StateDirectory=‚Ä¶ that allows\n  declaring these directories without necessarily pulling in deps for them, or\n  creating them when starting up. That way, we could declare that\n  systemd-journald writes to /var/log/journal, which could be useful when we\n  doing disk usage calculations and so on.\n\n* deprecate RootDirectoryStartOnly= in favour of a new ExecStart= prefix char\n\n* support projid-based quota in machinectl for containers\n\n* add a way to lock down cgroup migration: a boolean, which when set for a unit\n  makes sure the processes in it can never migrate out of it\n\n* blog about fd store and restartable services\n\n* document Environment=SYSTEMD_LOG_LEVEL=debug drop-in in debugging document\n\n* rework ExecOutput and ExecInput enums so that EXEC_OUTPUT_NULL loses its\n  magic meaning and is no longer upgraded to something else if set explicitly.\n\n* in the long run: permit a system with /etc/machine-id linked to /dev/null, to\n  make it lose its identity, i.e. be anonymous. For this we'd have to patch\n  through the whole tree to make all code deal with the case where no machine\n  ID is available.\n\n* optionally, collect cgroup resource data, and store it in per-unit RRD files,\n  suitable for processing with rrdtool. Add bus API to access this data, and\n  possibly implement a CPULoad property based on it.\n\n* beef up pam_systemd to take unit file settings such as cgroups properties as\n  parameters\n\n* maybe hook up xfs/ext4 quotactl() with services? i.e. automatically manage\n  the quota of the user indicated in User= via unit file settings, like the\n  other resource management concepts. Would mix nicely with DynamicUser=1. Or\n  alternatively, do this with projids, so that we can also cover services\n  running as root. Quota should probably cover all the special dirs such as\n  StateDirectory=, LogsDirectory=, CacheDirectory=, as well as RootDirectory= if it\n  is set, plus the whole disk space any image configured with RootImage=.\n\n* In DynamicUser= mode: before selecting a UID, use disk quota APIs on relevant\n  disks to see if the UID is already in use.\n\n* Add AddUser= setting to unit files, similar to DynamicUser=1 which however\n  creates a static, persistent user rather than a dynamic, transient user. We\n  can leverage code from sysusers.d for this.\n\n* add some optional flag to ReadWritePaths= and friends, that has the effect\n  that we create the dir in question when the service is started. Example:\n\n  ReadWritePaths=:/var/lib/foobar\n\n* Add ExecMonitor= setting. May be used multiple times. Forks off a process in\n  the service cgroup, which is supposed to monitor the service, and when it\n  exits the service is considered failed by its monitor.\n\n* track the per-service PAM process properly (i.e. as an additional control\n  process), so that it may be queried on the bus and everything.\n\n* add a new \"debug\" job mode, that is propagated to unit_start() and for\n  services results in two things: we raise SIGSTOP right before invoking\n  execve() and turn off watchdog support. Then, use that to implement\n  \"systemd-gdb\" for attaching to the start-up of any system service in its\n  natural habitat.\n\n* gpt-auto logic: support encrypted swap, add kernel cmdline option to force\n  it, and honour a gpt bit about it, plus maybe a configuration file\n\n* add a percentage syntax for TimeoutStopSec=, e.g. TimeoutStopSec=150%, and\n  then use that for the setting used in user@.service. It should be understood\n  relative to the configured default value.\n\n* enable LockMLOCK to take a percentage value relative to physical memory\n\n* Permit masking specific netlink APIs with RestrictAddressFamily=\n\n* define gpt header bits to select volatility mode\n\n* ProtectClock= (drops CAP_SYS_TIMES, adds seecomp filters for settimeofday, adjtimex), sets DeviceAllow o /dev/rtc\n\n* ProtectTracing= (drops CAP_SYS_PTRACE, blocks ptrace syscall, makes /sys/kernel/tracing go away)\n\n* ProtectMount= (drop mount/umount/pivot_root from seccomp, disallow fuse via DeviceAllow, imply Mountflags=slave)\n\n* ProtectKeyRing= to take keyring calls away\n\n* RemoveKeyRing= to remove all keyring entries of the specified user\n\n* ProtectReboot= that masks reboot() and kexec_load() syscalls, prohibits kill\n  on PID 1 with the relevant signals, and makes relevant files in /sys and\n  /proc (such as the sysrq stuff) unavailable\n\n* Support ReadWritePaths/ReadOnlyPaths/InaccessiblePaths in systemd --user instances\n  via the new unprivileged Landlock LSM (https://landlock.io)\n\n* make sure the ratelimit object can deal with USEC_INFINITY as way to turn off things\n\n* in nss-systemd, if we run inside of RootDirectory= with PrivateUsers= set,\n  find a way to map the User=/Group= of the service to the right name. This way\n  a user/group for a service only has to exist on the host for the right\n  mapping to work.\n\n* add bus API for creating unit files in /etc, reusing the code for transient units\n\n* add bus API to remove unit files from /etc\n\n* add bus API to retrieve current unit file contents (i.e. implement \"systemctl cat\" on the bus only)\n\n* rework fopen_temporary() to make use of open_tmpfile_linkable() (problem: the\n  kernel doesn't support linkat() that replaces existing files, currently)\n\n* transient units: don't bother with actually setting unit properties, we\n  reload the unit file anyway\n\n* optionally, also require WATCHDOG=1 notifications during service start-up and shutdown\n\n* cache sd_event_now() result from before the first iteration...\n\n* PID1: find a way how we can reload unit file configuration for\n  specific units only, without reloading the whole of systemd\n\n* add an explicit parser for LimitRTPRIO= that verifies\n  the specified range and generates sane error messages for incorrect\n  specifications.\n\n* when we detect that there are waiting jobs but no running jobs, do something\n\n* PID 1 should send out sd_notify(\"WATCHDOG=1\") messages (for usage in the --user mode, and when run via nspawn)\n\n* there's probably something wrong with having user mounts below /sys,\n  as we have for debugfs. for example, src/core/mount.c handles mounts\n  prefixed with /sys generally special.\n  https://lists.freedesktop.org/archives/systemd-devel/2015-June/032962.html\n\n* fstab-generator: default to tmpfs-as-root if only usr= is specified on the kernel cmdline\n\n* docs: bring https://systemd.io/MY_SERVICE_CANT_GET_REALTIME up to date\n\n* add a job mode that will fail if a transaction would mean stopping\n  running units. Use this in timedated to manage the NTP service\n  state.\n  https://lists.freedesktop.org/archives/systemd-devel/2015-April/030229.html\n\n* The udev blkid built-in should expose a property that reflects\n  whether media was sensed in USB CF/SD card readers. This should then\n  be used to control SYSTEMD_READY=1/0 so that USB card readers aren't\n  picked up by systemd unless they contain a medium. This would mirror\n  the behaviour we already have for CD drives.\n\n* hostnamectl: show root image uuid\n\n* Find a solution for SMACK capabilities stuff:\n  https://lists.freedesktop.org/archives/systemd-devel/2014-December/026188.html\n\n* synchronize console access with BSD locks:\n  https://lists.freedesktop.org/archives/systemd-devel/2014-October/024582.html\n\n* as soon as we have sender timestamps, revisit coalescing multiple parallel daemon reloads:\n  https://lists.freedesktop.org/archives/systemd-devel/2014-December/025862.html\n\n* figure out when we can use the coarse timers\n\n* maybe allow timer units with an empty Units= setting, so that they\n  can be used for resuming the system but nothing else.\n\n* what to do about udev db binary stability for apps? (raw access is not an option)\n\n* exponential backoff in timesyncd when we cannot reach a server\n\n* timesyncd: add ugly bus calls to set NTP servers per-interface, for usage by NM\n\n* add systemd.abort_on_kill or some other such flag to send SIGABRT instead of SIGKILL\n  (throughout the codebase, not only PID1)\n\n* drop nss-myhostname in favour of nss-resolve?\n\n* resolved:\n  - mDNS/DNS-SD\n        - service registration\n        - service/domain/types browsing\n        - avahi compat\n  - DNS-SD service registration from socket units\n  - resolved should optionally register additional per-interface LLMNR\n    names, so that for the container case we can establish the same name\n    (maybe \"host\") for referencing the server, everywhere.\n  - allow clients to request DNSSEC for a single lookup even if DNSSEC is off (?)\n  - hook up resolved with machined-based address resolution\n\n* refcounting in sd-resolve is borked\n\n* add new gpt type for btrfs volumes\n\n* generator that automatically discovers btrfs subvolumes, identifies their purpose based on some xattr on them.\n\n* a way for container managers to turn off getty starting via $container_headless= or so...\n\n* figure out a nice way how we can let the admin know what child/sibling unit causes cgroup membership for a specific unit\n\n* For timer units: add some mechanisms so that timer units that trigger immediately on boot do not have the services\n  they run added to the initial transaction and thus confuse Type=idle.\n\n* add bus api to query unit file's X fields.\n\n* gpt-auto-generator:\n  - Define new partition type for encrypted swap? Support probed LUKS for encrypted swap?\n  - Make /home automount rather than mount?\n\n* add generator that pulls in systemd-network from containers when\n  CAP_NET_ADMIN is set, more than the loopback device is defined, even\n  when it is otherwise off\n\n* MessageQueueMessageSize= (and suchlike) should use parse_iec_size().\n\n* implement Distribute= in socket units to allow running multiple\n  service instances processing the listening socket, and open this up\n  for ReusePort=\n\n* cgroups:\n  - implement per-slice CPUFairScheduling=1 switch\n  - introduce high-level settings for RT budget, swappiness\n  - how to reset dynamically changed unit cgroup attributes sanely?\n  - when reloading configuration, apply new cgroup configuration\n  - when recursively showing the cgroup hierarchy, optionally also show\n    the hierarchies of child processes\n  - add settings for cgroup.max.descendants and cgroup.max.depth,\n    maybe use them for user@.service\n\n* transient units:\n  - add field to transient units that indicate whether systemd or somebody else saves/restores its settings, for integration with libvirt\n\n* libsystemd-journal, libsystemd-login, libudev: add calls to easily attach these objects to sd-event event loops\n\n* be more careful what we export on the bus as (usec_t) 0 and (usec_t) -1\n\n* rfkill,backlight: we probably should run the load tools inside of the udev rules so that the state is properly initialized by the time other software sees it\n\n* If we try to find a unit via a dangling symlink, generate a clean\n  error. Currently, we just ignore it and read the unit from the search\n  path anyway.\n\n* refuse boot if /usr/lib/os-release is missing or /etc/machine-id cannot be set up\n\n* man: the documentation of Restart= currently is very misleading and suggests the tools from ExecStartPre= might get restarted.\n\n* There's currently no way to cancel fsck (used to be possible via C-c or c on the console)\n\n* add option to sockets to avoid activation. Instead just drop packets/connections, see http://cyberelk.net/tim/2012/02/15/portreserve-systemd-solution/\n\n* make sure systemd-ask-password-wall does not shutdown systemd-ask-password-console too early\n\n* verify that the AF_UNIX sockets of a service in the fs still exist\n  when we start a service in order to avoid confusion when a user\n  assumes starting a service is enough to make it accessible\n\n* Make it possible to set the keymap independently from the font on\n  the kernel cmdline. Right now setting one resets also the other.\n\n* and a dbus call to generate target from current state\n\n* investigate whether the gnome pty helper should be moved into systemd, to provide cgroup support.\n\n* dot output for --test showing the 'initial transaction'\n\n* be able to specify a forced restart of service A where service B depends on, in case B\n  needs to be auto-respawned?\n\n* pid1:\n  - When logging about multiple units (stopping BoundTo units, conflicts, etc.),\n    log both units as UNIT=, so that journalctl -u triggers on both.\n  - generate better errors when people try to set transient properties\n    that are not supported...\n    https://lists.freedesktop.org/archives/systemd-devel/2015-February/028076.html\n  - recreate systemd's D-Bus private socket file on SIGUSR2\n  - when we automatically restart a service, ensure we restart its rdeps, too.\n  - hide PAM options in fragment parser when compile time disabled\n  - Support --test based on current system state\n  - If we show an error about a unit (such as not showing up) and it has no Description string, then show a description string generated form the reverse of unit_name_mangle().\n  - after deserializing sockets in socket.c we should reapply sockopts and things\n  - drop PID 1 reloading, only do reexecing (difficult: Reload()\n    currently is properly synchronous, Reexec() is weird, because we\n    cannot delay the response properly until we are back, so instead of\n    being properly synchronous we just keep open the fd and close it\n    when done. That means clients do not get a successful method reply,\n    but much rather a disconnect on success.\n  - when breaking cycles drop sysv services first, then services from /run, then from /etc, then from /usr\n  - when a bus name of a service disappears from the bus make sure to queue further activation requests\n  - maybe introduce CoreScheduling=yes/no to optionally set a PR_SCHED_CORE cookie, so that all\n    processes in a service's cgroup share the same cookie and are guaranteed not to share SMT cores\n    with other units https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git/tree/Documentation/admin-guide/hw-vuln/core-scheduling.rst\n  - ExtensionImages= deduplication for services is currently only applied to disk images without GPT envelope.\n    This should be extended to work with proper DDIs too, as well as directory confext/sysext. Moreover,\n    system-wide confext/sysext should support this too.\n  - Pin the mount namespace via FD by sending it back from sd-exec to the manager, and use it\n    for live mounting, instead of doing it via PID\n\n* unit files:\n  - allow port=0 in .socket units\n  - maybe introduce ExecRestartPre=\n  - implement Register= switch in .socket units to enable registration\n    in Avahi, RPC and other socket registration services.\n  - allow Type=simple with PIDFile=\n    https://bugzilla.redhat.com/show_bug.cgi?id=723942\n  - allow writing multiple conditions in unit files on one line\n  - introduce Type=pid-file\n  - add a concept of RemainAfterExit= to scope units\n  - Allow multiple ExecStart= for all Type= settings, so that we can cover rescue.service nicely\n  - add verification of [Install] section to systemd-analyze verify\n\n* timer units:\n  - timer units should get the ability to trigger when DST changes\n  - Modulate timer frequency based on battery state\n\n* add libsystemd-password or so to query passwords during boot using the password agent logic\n\n* clean up date formatting and parsing so that all absolute/relative timestamps we format can also be parsed\n\n* on shutdown: move utmp, wall, audit logic all into PID 1 (or logind?), get rid of systemd-update-utmp-runlevel\n\n* make repeated alt-ctrl-del presses printing a dump\n\n* currently x-systemd.timeout is lost in the initrd, since crypttab is copied into dracut, but fstab is not\n\n* add a pam module that on password changes updates any LUKS slot where the password matches\n\n* test/:\n  - add unit tests for config_parse_device_allow()\n\n* seems that when we follow symlinks to units we prefer the symlink\n  destination path over /etc and /usr. We should not do that. Instead\n  /etc should always override /run+/usr and also any symlink\n  destination.\n\n* when isolating, try to figure out a way how we implicitly can order\n  all units we stop before the isolating unit...\n\n* teach ConditionKernelCommandLine= globs or regexes (in order to match foobar={no,0,off})\n\n* Add ConditionDirectoryNotEmpty= handle non-absoute paths as a search path or add\n  ConditionConfigSearchPathNotEmpty= or different syntax? See the discussion starting at\n  https://github.com/systemd/systemd/pull/15109#issuecomment-607740136.\n\n* BootLoaderSpec: Define a way how an installer can figure out whether a BLS\n  compliant boot loader is installed.\n\n* think about requeuing jobs when daemon-reload is issued? use case:\n  the initrd issues a reload after fstab from the host is accessible\n  and we might want to requeue the mounts local-fs acquired through\n  that automatically.\n\n* systemd-inhibit: make taking delay locks useful: support sending SIGINT or SIGTERM on PrepareForSleep()\n\n* remove any syslog support from log.c ‚Äî we probably cannot do this before split-off udev is gone for good\n\n* shutdown logging: store to EFI var, and store to USB stick?\n\n* merge unit_kill_common() and unit_kill_context()\n\n* add a dependency on standard-conf.xml and other included files to man pages\n\n* MountFlags=shared acts as MountFlags=slave right now.\n\n* properly handle loop back mounts via fstab, especially regards to fsck/passno\n\n* initialize the hostname from the fs label of /, if /etc/hostname does not exist?\n\n* sd-bus:\n  - EBADSLT handling\n  - GetAllProperties() on a non-existing object does not result in a failure currently\n  - port to sd-resolve for connecting to TCP dbus servers\n  - see if we can introduce a new sd_bus_get_owner_machine_id() call to retrieve the machine ID of the machine of the bus itself\n  - see if we can drop more message validation on the sending side\n  - add API to clone sd_bus_message objects\n  - longer term: priority inheritance\n  - dbus spec updates:\n       - NameLost/NameAcquired obsolete\n       - path escaping\n  - update systemd.special(7) to mention that dbus.socket is only about the compatibility socket now\n\n* sd-event\n  - allow multiple signal handlers per signal?\n  - document chaining of signal handler for SIGCHLD and child handlers\n  - define more intervals where we will shift wakeup intervals around in, 1h, 6h, 24h, ...\n  - maybe support iouring as backend, so that we allow hooking read and write\n    operations instead of IO ready events into event loops. See considerations\n    here:\n    http://blog.vmsplice.net/2020/07/rethinking-event-loop-integration-for.html\n\n* dbus: when a unit failed to load (i.e. is in UNIT_ERROR state), we\n  should be able to safely try another attempt when the bus call LoadUnit() is invoked.\n\n* document org.freedesktop.MemoryAllocation1\n\n* maybe do not install getty@tty1.service symlink in /etc but in /usr?\n\n* print a nicer explanation if people use variable/specifier expansion in ExecStart= for the first word\n\n* mount: turn dependency information from /proc/self/mountinfo into dependency information between systemd units.\n\n* EFI:\n  - honor language efi variables for default language selection (if there are any?)\n  - honor timezone efi variables for default timezone selection (if there are any?)\n* bootctl\n  - recognize the case when not booted on EFI\n\n* bootctl:\n  - show whether UEFI audit mode is available\n  - teach it to prepare an ESP wholesale, i.e. with mkfs.vfat invocation\n  - teach it to copy in unified kernel images and maybe type #1 boot loader spec entries from host\n\n* logind:\n  - logind: optionally, ignore idle-hint logic for autosuspend, block suspend as long as a session is around\n  - logind: wakelock/opportunistic suspend support\n  - Add pretty name for seats in logind\n  - logind: allow showing logout dialog from system?\n  - add Suspend() bus calls which take timestamps to fix double suspend issues when somebody hits suspend and closes laptop quickly.\n  - if pam_systemd is invoked by su from a process that is outside of a\n    any session we should probably just become a NOP, since that's\n    usually not a real user session but just some system code that just\n    needs setuid().\n  - logind: make the Suspend()/Hibernate() bus calls wait for the for\n    the job to be completed. before returning, so that clients can wait\n    for \"systemctl suspend\" to finish to know when the suspending is\n    complete.\n  - logind: when the power button is pressed short, just popup a\n    logout dialog. If it is pressed for 1s, do the usual\n    shutdown. Inspiration are Macs here.\n  - expose \"Locked\" property on logind session objects\n  - maybe allow configuration of the StopTimeout for session scopes\n  - rename session scope so that it includes the UID. THat way\n    the session scope can be arranged freely in slices and we don't have\n    make assumptions about their slice anymore.\n  - follow PropertiesChanged state more closely, to deal with quick logouts and\n    relogins\n  - (optionally?) spawn seat-manager@$SEAT.service whenever a seat shows up that as CanGraphical set\n\n* move multiseat vid/pid matches from logind udev rule to hwdb\n\n* delay activation of logind until somebody logs in, or when /dev/tty0 pulls it\n  in or lingering is on (so that containers don't bother with it until PAM is used). also exit-on-idle\n\n* journal:\n  - consider introducing implicit _TTY= + _PPID= + _EUID= + _EGID= + _FSUID= + _FSGID= fields\n  - journald: also get thread ID from client, plus thread name\n  - journal: when waiting for journal additions in the client always sleep at least 1s or so, in order to minimize wakeups\n  - add API to close/reopen/get fd for journal client fd in libsystemd-journal.\n  - fall back to /dev/log based logging in libsystemd-journal, if we cannot log natively?\n  - declare the local journal protocol stable in the wiki interface chart\n  - sd-journal: speed up sd_journal_get_data() with transparent hash table in bg\n  - journald: when dropping msgs due to ratelimit make sure to write\n    \"dropped %u messages\" not only when we are about to print the next\n    message that works, but already after a short timeout\n  - check if we can make journalctl by default use --follow mode inside of less if called without args?\n  - maybe add API to send pairs of iovecs via sd_journal_send\n  - journal: add a setgid \"systemd-journal\" utility to invoke from libsystemd-journal, which passes fds via STDOUT and does PK access\n  - journalctl: support negative filtering, i.e. FOOBAR!=\"waldo\",\n    and !FOOBAR for events without FOOBAR.\n  - journal: store timestamp of journal_file_set_offline() in the header,\n    so it is possible to display when the file was last synced.\n  - journal-send.c, log.c: when the log socket is clogged, and we drop, count this and write a message about this when it gets unclogged again.\n  - journal: find a way to allow dropping history early, based on priority, other rules\n  - journal: When used on NFS, check payload hashes\n  - journald: add kernel cmdline option to disable ratelimiting for debug purposes\n  - refuse taking lower-case variable names in sd_journal_send() and friends.\n  - journald: we currently rotate only after MaxUse+MaxFilesize has been reached.\n  - journal: deal nicely with byte-by-byte copied files, especially regards header\n  - journal: sanely deal with entries which are larger than the individual file size, but where the components would fit\n  - Replace utmp, wtmp, btmp, and lastlog completely with journal\n  - journalctl: instead --after-cursor= maybe have a --cursor=XYZ+1 syntax?\n  - when a kernel driver logs in a tight loop, we should ratelimit that too.\n  - journald: optionally, log debug messages to /run but everything else to /var\n  - journald: when we drop syslog messages because the syslog socket is\n    full, make sure to write how many messages are lost as first thing\n    to syslog when it works again.\n  - journald: allow per-priority and per-service retention times when rotating/vacuuming\n  - journald: make use of uid-range.h to manage uid ranges to split\n    journals in.\n  - journalctl: add the ability to look for the most recent process of a binary.\n                journalctl /usr/bin/X11 --invocation=-1\n  - systemctl: change 'status' to show logs for the last invocation, not a fixed\n    number of lines\n  - systemctl: expand --wait to show logs for the invocation with a new switch\n  - improve journalctl performance by loading journal files\n    lazily. Encode just enough information in the file name, so that we\n    do not have to open it to know that it is not interesting for us, for\n    the most common operations.\n  - man: document that corrupted journal files is nothing to act on\n  - rework journald sigbus stuff to use mutex\n  - Set RLIMIT_NPROC for systemd-journal-xyz, and all other of our\n    services that run under their own user ids, and use User= (but only\n    in a world where userns is ubiquitous since otherwise we cannot\n    invoke those daemons on the host AND in a container anymore). Also,\n    if LimitNPROC= is used without User= we should warn and refuse\n    operation.\n  - journalctl --verify: don't show files that are currently being\n    written to as FAIL, but instead show that they are being written to.\n  - add journalctl -H that talks via ssh to a remote peer and passes through\n    binary logs data\n  - add a version of --merge which also merges /var/log/journal/remote\n  - journalctl: -m should access container journals directly by enumerating\n    them via machined, and also watch containers coming and going.\n    Benefit: nspawn --ephemeral would start working nicely with the journal.\n  - assign MESSAGE_ID to log messages about failed services\n  - check if loop in decompress_blob_xz() is necessary\n\n* journald: support RFC3164 fully for the incoming syslog transport, see\n  https://github.com/systemd/systemd/issues/19251#issuecomment-816601955\n\n* Hook up journald's FSS logic with TPM2: seal the verification disk by\n  time-based policy, so that the verification key can remain on host and ve\n  validated via TPM.\n\n* rework journalctl -M to be based on a machined method that generates a mount\n  fd of the relevant journal dirs in the container with uidmapping applied to\n  allow the host to read it, while making everything read-only.\n\n* journald: add varlink service that allows subscribing to certain log events,\n  for example matching by message ID, or log level returns a list of journal\n  cursors as they happen.\n\n* journald: also collect CLOCK_BOOTTIME timestamps per log entry. Then, derive\n  \"corrected\" CLOCK_REALTIME information on display from that and the timestamp\n  info of the newest entry of the specific boot (as identified by the boot\n  ID). This way, if a system comes up without a valid clock but acquires a\n  better clock later, we can \"fix\" older entry timestamps on display, by\n  calculating backwards. We cannot use CLOCK_MONOTONIC for this, since it does\n  not account for suspend phases. This would then also enable us to correct the\n  kmsg timestamping we consume (where we erroneously assume the clock was in\n  CLOCK_MONOTONIC, but it actually is CLOCK_BOOTTIME as per kernel).\n\n* in journald, write out a recognizable log record whenever the system clock is\n  changed (\"stepped\"), and in timesyncd whenever we acquire an NTP fix\n  (\"slewing\"). Then, in journalctl for each boot time we come across, find\n  these records, and use the structured info they include to display\n  \"corrected\" wallclock time, as calculated from the monotonic timestamp in the\n  log record, adjusted by the delta declared in the structured log record.\n\n* in journald: whenever we start a new journal file because the boot ID\n  changed, let's generate a recognizable log record containing info about old\n  and new ID. Then, when displaying log stream in journalctl look for these\n  records, to be able to order them.\n\n* journald: generate recognizable log events whenever we shutdown journald\n  cleanly, and when we migrate run ‚Üí var. This way tools can verify that a\n  previous boot terminated cleanly, because either of these two messages must\n  be safely written to disk, then.\n\n* hook up journald with TPMs? measure new journal records to the TPM in regular\n  intervals, validate the journal against current TPM state with that. (taking\n  inspiration from IMA log)\n\n* sd-journal puts a limit on parallel journal files to view at once. journald\n  should probably honour that same limit (JOURNAL_FILES_MAX) when vacuuming to\n  ensure we never generate more files than we can actually view.\n\n* bsod: maybe use graphical mode. Use DRM APIs directly, see\n  https://github.com/dvdhrm/docs/blob/master/drm-howto/modeset.c for an example\n  for doing that.\n\n* maybe implicitly attach monotonic+realtime timestamps to outgoing messages in\n  log.c and sd-journal-send\n\n* journalctl/timesyncd: whenever timesyncd acquires a synchronization from NTP,\n  create a structured log entry that contains boot ID, monotonic clock and\n  realtime clock (I mean, this requires no special work, as these three fields\n  are implicit). Then in journalctl when attempting to display the realtime\n  timestamp of a log entry, first search for the closest later log entry\n  of this kinda that has a matching boot id, and convert the monotonic clock\n  timestamp of the entry to the realtime clock using this info. This way we can\n  retroactively correct the wallclock timestamps, in particular for systems\n  without RTC, i.e. where initially wallclock timestamps carry rubbish, until\n  an NTP sync is acquired.\n\n* introduce per-unit (i.e. per-slice, per-service) journal log size limits.\n\n* journald: do journal file writing out-of-process, with one writer process per\n  client UID, so that synthetic hash table collisions can slow down a specific\n  user's journal stream down but not the others.\n\n* tweak journald context caching. In addition to caching per-process attributes\n  keyed by PID, cache per-cgroup attributes (i.e. the various xattrs we read)\n  keyed by cgroup path, and guarded by ctime changes. This should provide us\n  with a nice speed-up on services that have many processes running in the same\n  cgroup.\n\n* maybe add call sd_journal_set_block_timeout() or so to set SO_SNDTIMEO for\n  the sd-journal logging socket, and, if the timeout is set to 0, sets\n  O_NONBLOCK on it. That way people can control if and when to block for\n  logging.\n\n* journalctl: make sure -f ends when the container indicated by -M terminates\n\n* journald: sigbus API via a signal-handler safe function that people may call\n  from the SIGBUS handler\n\n* add a test if all entries in the catalog are properly formatted.\n    (Adding dashes in a catalog entry currently results in the catalog entry\n     being silently skipped. journalctl --update-catalog must warn about this,\n     and we should also have a unit test to check that all our message are OK.)\n\n* build short web pages out of each catalog entry, build them along with man\n  pages, and include hyperlinks to them in the journal output\n\n* homed:\n  - when user tries to log into record signed by unrecognized key, automatically add key to our chain after polkit auth\n  - rollback when resize fails mid-operation\n  - GNOME's side for forget key on suspend (requires rework so that lock screen runs outside of uid)\n  - update LUKS password on login if we find there's a password that unlocks the JSON record but not the LUKS device.\n  - create on activate?\n  - properties: icon url?, administrator bool (which translates to 'wheel' membership)?, address?, telephone?, vcard?, samba stuff?, parental controls?\n  - communicate clearly when usb stick is safe to remove. probably involves\n    beefing up logind to make pam session close hook synchronous and wait until\n    systemd --user is shut down.\n  - logind: maybe keep a \"busy fd\" as long as there's a non-released session around or the user@.service\n  - maybe make automatic, read-only, time-based reflink-copies of LUKS disk\n    images (and btrfs snapshots of subvolumes) (think: time machine)\n  - distinguish destroy / remove (i.e. currently we can unregister a user, unregister+remove their home directory, but not just remove their home directory)\n  - in systemd's PAMName= logic: query passwords with ssh-askpassword, so that we can make \"loginctl set-linger\" mode work\n  - fingerprint authentication, pattern authentication, ‚Ä¶\n  - make sure \"classic\" user records can also be managed by homed\n  - make size of $XDG_RUNTIME_DIR configurable in user record\n  - move acct mgmt stuff from pam_systemd_home to pam_systemd?\n  - when \"homectl --pkcs11-token-uri=\" is used, synthesize ssh-authorized-keys records for all keys we have private keys on the stick for\n  - make slice for users configurable (requires logind rework)\n  - logind: populate auto-login list bus property from PKCS#11 token\n  - when determining state of a LUKS home directory, check DM suspended sysfs file\n  - when homed is in use, maybe start the user session manager in a mount namespace with MS_SLAVE,\n    so that mounts propagate down but not up - eg, user A setting up a backup volume\n    doesn't mean user B sees it\n  - use credentials logic/TPM2 logic to store homed signing key\n  - permit multiple user record signing keys to be used locally, and pick\n    the right one for signing records automatically depending on a pre-existing\n    signature\n  - add a way to \"adopt\" a home directory, i.e. strip foreign signatures\n    and insert a local signature instead.\n  - as an extension to the directory+subvolume backend: if located on\n    especially marked fs, then sync down password into LUKS header of that fs,\n    and always verify passwords against it too. Bootstrapping is a problem\n    though: if no one is logged in (or no other user even exists yet), how do you\n    unlock the volume in order to create the first user and add the first pw.\n  - support new FS_IOC_ADD_ENCRYPTION_KEY ioctl for setting up fscrypt\n  - maybe pre-create ~/.cache as subvol so that it can have separate quota\n    easily?\n  - store PKCS#11 + FIDO2 token info in LUKS2 header, compatible with\n    systemd-cryptsetup, so that it can unlock homed volumes\n  - maybe make all *.home files owned by `systemd-home` user or so, so that we\n    can easily set overall quota for all users\n  - on login, if we can't fallocate initially, but rebalance is on, then allow\n    login in discard mode, then immediately rebalance, then turn off discard\n  - add \"homectl unbind\" command to remove local user record of an inactive\n    home dir\n\n* add a new switch --auto-definitions=yes/no or so to systemd-repart. If\n  specified, synthesize a definition automatically if we can: enlarge last\n  partition on disk, but only if it is marked for growing and not read-only.\n\n* systemd-repart: read LUKS encryption key from $CREDENTIALS_DIRECTORY\n\n* systemd-repart: add a switch to factory reset the partition table without\n  immediately applying the new configuration again. i.e. --factory-reset=leave\n  or so. (this is useful to factory reset an image, then putting it into\n  another machine, ensuring that luks key is generated on new machine, not old)\n\n* systemd-repart: support setting up dm-integrity with HMAC\n\n* systemd-repart: maybe remove half-initialized image on failure. It fails\n  if the output file exists, so a repeated invocation will usually fail if\n  something goes wrong on the way.\n\n* systemd-repart: by default generate minimized partition tables (i.e. tables\n  that only cover the space actually used, excluding any free space at the\n  end), in order to maximize dd'ability. Requires libfdisk work, see\n  https://github.com/karelzak/util-linux/issues/907\n\n* systemd-repart: MBR partition table support. Care needs to be taken regarding\n  Type=, so that partition definitions can sanely apply to both the GPT and the\n  MBR case. Idea: accept syntax \"Type=gpt:home mbr:0x83\" for setting the types\n  for the two partition types explicitly. And provide an internal mapping so\n  that \"Type=linux-generic\" maps to the right types for both partition tables\n  automatically.\n\n* systemd-repart: allow sizing partitions as factor of available RAM, so that\n  we can reasonably size swap partitions for hibernation.\n\n* systemd-repart: allow boolean option that ensures that if existing partition\n  doesn't exist within the configured size bounds the whole command fails. This\n  is useful to implement ESP vs. XBOOTLDR schemes in installers: have one set\n  of repart files for the case where ESP is large enough and one where it isn't\n  and XBOOTLDR is added in instead.  Then apply the former first, and if it\n  fails to apply use the latter.\n\n* systemd-repart: add per-partition option to never reuse existing partition\n  and always create anew even if matching partition already exists.\n\n* systemd-repart: add per-partition option to fail if partition already exist,\n  i.e. is not added new. Similar, add option to fail if partition does not exist yet.\n\n* systemd-repart: allow disabling growing of specific partitions, or making\n  them (think ESP: we don't ever want to grow it, since we cannot resize vfat)\n  Also add option to disable operation via kernel command line.\n\n* systemd-repart: make it a static checker during early boot for existence and\n  absence of other partitions for trusted boot environments\n\n* systemd-repart: add support for SD_GPT_FLAG_GROWFS also on real systems, i.e.\n  generate some unit to actually enlarge the fs after growing the partition\n  during boot.\n\n* systemd-repart: do not print \"Successfully resized ‚Ä¶\" when no change was done.\n\n* document:\n  - document that deps in [Unit] sections ignore Alias= fields in\n    [Install] units of other units, unless those units are disabled\n  - man: clarify that time-sync.target is not only sysv compat but also useful otherwise. Same for similar targets\n  - document that service reload may be implemented as service reexec\n  - add a man page containing packaging guidelines and recommending usage of things like Documentation=, PrivateTmp=, PrivateNetwork= and ReadOnlyDirectories=/etc /usr.\n  - document systemd-journal-flush.service properly\n  - documentation: recommend to connect the timer units of a service to the service via Also= in [Install]\n  - man: document the very specific env the shutdown drop-in tools live in\n  - man: add more examples to man pages,\n  -      in particular an example how to do the equivalent of switching runlevels\n  - man: maybe sort directives in man pages, and take sections from --help and apply them to man too\n  - document root=gpt-auto properly\n\n* systemctl:\n  - add systemctl switch to dump transaction without executing it\n  - Add a verbose mode to \"systemctl start\" and friends that explains what is being done or not done\n  - print nice message from systemctl --failed if there are no entries shown, and hook that into ExecStartPre of rescue.service/emergency.service\n  - add new command to systemctl: \"systemctl system-reexec\" which reexecs as many daemons as virtually possible\n  - systemctl enable: fail if target to alias into does not exist? maybe show how many units are enabled afterwards?\n  - systemctl: \"Journal has been rotated since unit was started.\" message is misleading\n\n* introduce an option (or replacement) for \"systemctl show\" that outputs all\n  properties as JSON, similar to busctl's new JSON output. In contrast to that\n  it should skip the variant type string though.\n\n* Add a \"systemctl list-units --by-slice\" mode or so, which rearranges the\n  output of \"systemctl list-units\" slightly by showing the tree structure of\n  the slices, and the units attached to them.\n\n* add \"systemctl wait\" or so, which does what \"systemd-run --wait\" does, but\n  for all units. It should be both a way to pin units into memory as well as a\n  wait to retrieve their exit data.\n\n* show whether a service has out-of-date configuration in \"systemctl status\" by\n  using mtime data of ConfigurationDirectory=.\n\n* \"systemctl preset-all\" should probably order the unit files it\n  operates on lexicographically before starting to work, in order to\n  ensure deterministic behaviour if two unit files conflict (like DMs\n  do, for example)\n\n* add \"systemctl start -v foobar.service\" that shows logs of a service\n  while the start command runs. This is non-trivial to do without\n  races though, since we should flush out all journal messages before\n  returning from the \"systemctl stop\".\n\n* systemctl: if some operation fails, show log output?\n\n* Add a new verb \"systemctl top\"\n\n* unit install:\n  - \"systemctl mask\" should find all names by which a unit is accessible\n    (i.e. by scanning for symlinks to it) and link them all to /dev/null\n\n* nspawn:\n  - emulate /dev/kmsg using CUSE and turn off the syslog syscall\n    with seccomp. That should provide us with a useful log buffer that\n    systemd can log to during early boot, and disconnect container logs\n    from the kernel's logs.\n  - as soon as networkd has a bus interface, hook up --network-interface=,\n    --network-bridge= with networkd, to trigger netdev creation should an\n    interface be missing\n  - a nice way to boot up without machine id set, so that it is set at boot\n    automatically for supporting --ephemeral. Maybe hash the host machine id\n    together with the machine name to generate the machine id for the container\n  - fix logic always print a final newline on output.\n    https://github.com/systemd/systemd/pull/272#issuecomment-113153176\n  - should optionally support receiving WATCHDOG=1 messages from its payload\n    PID 1...\n  - optionally automatically add FORWARD rules to iptables whenever nspawn is\n    running, remove them when shut down.\n  - add support for sysext extensions, too. i.e. a new --extension= switch that\n    takes one or more arguments, and applies the extensions already during\n    startup.\n  - when main nspawn supervisor process gets suspended due to SIGSTOP/SIGTTOU\n    or so, freeze the payload too.\n  - support time namespaces\n  - on cgroupsv1 issue cgroup empty handler process based on host events, so\n    that we make cgroup agent logic safe\n  - add API to invoke binary in container, then use that as fallback in\n    \"machinectl shell\"\n  - make nspawn suitable for shell pipelines: instead of triggering a hangup\n    when input is finished, send ^D, which synthesizes an EOF. Then wait for\n    hangup or ^D before passing on the EOF.\n  - greater control over selinux label?\n  - support that /proc, /sys/, /dev are pre-mounted\n  - maybe allow TPM passthrough, backed by swtpm, and measure --image= hash\n    into its PCR 11, so that nspawn instances can be TPM enabled, and partake\n    in measurements/remote attestation and such. swtpm would run outside of\n    control of container, and ideally would itself bind its encryption keys to\n    host TPM.\n  - make boot assessment do something sensible in a container. i.e send an\n    sd_notify() from payload to container manager once boot-up is completed\n    successfully, and use that in nspawn for dealing with boot counting,\n    implemented in the partition table labels and directory names.\n  - optionally set up nftables/iptables routes that forward UDP/TCP traffic on\n    port 53 to resolved stub 127.0.0.54\n  - maybe optionally insert .nspawn file as GPT partition into images, so that\n    such container images are entirely stand-alone and can be updated as one.\n  - The subreaper logic we currently have seems overly complex. We should\n    investigate whether creating the inner child with CLONE_PARENT isn't better.\n  - Reduce the number of sockets that are currently in use and just rely on one\n    or two sockets.\n  - Support running nspawn as an unprivileged user.\n\n* machined:\n  - add an API so that libvirt-lxc can inform us about network interfaces being\n    removed or added to an existing machine\n  - \"machinectl migrate\" or similar to copy a container from or to a\n    difference host, via ssh\n  - introduce systemd-nspawn-ephemeral@.service, and hook it into\n    \"machinectl start\" with a new --ephemeral switch\n  - \"machinectl status\" should also show internal logs of the container in\n    question\n  - \"machinectl history\"\n  - \"machinectl diff\"\n  - \"machinectl commit\" that takes a writable snapshot of a tree, invokes a\n    shell in it, and marks it read-only after use\n\n* udev:\n  - move to LGPL\n  - kill scsi_id\n  - add trigger --subsystem-match=usb/usb_device device\n  - reimport udev db after MOVE events for devices without dev_t\n  - re-enable ProtectClock= once only cgroupsv2 is supported.\n    See f562abe2963bad241d34e0b308e48cf114672c84.\n\n* coredump:\n  - save coredump in Windows/Mozilla minidump format\n  - when truncating coredumps, also log the full size that the process had, and make a metadata field so we can report truncated coredumps\n  - add examples for other distros in PACKAGE_METADATA_FOR_EXECUTABLE_FILES\n\n* support crash reporting operation modes (https://live.gnome.org/GnomeOS/Design/Whiteboards/ProblemReporting)\n\n* tmpfiles:\n  - allow time-based cleanup in r and R too\n  - instead of ignoring unknown fields, reject them.\n  - creating new directories/subvolumes/fifos/device nodes\n    should not follow symlinks. None of the other adjustment or creation\n    calls follow symlinks.\n  - teach tmpfiles.d q/Q logic something sensible in the context of XFS/ext4\n    project quota\n  - teach tmpfiles.d m/M to move / atomic move + symlink old -> new\n  - add new line type for setting btrfs subvolume attributes (i.e. rw/ro)\n  - tmpfiles: add new line type for setting fcaps\n  - add -n as shortcut for --dry-run in tmpfiles & sysusers & possibly other places\n\n* udev-link-config:\n   - Make sure ID_PATH is always exported and complete for\n     network devices where possible, so we can safely rely\n     on Path= matching\n\n* sd-rtnl:\n   - add support for more attribute types\n   - inbuilt piping support (essentially degenerate async)? see loopback-setup.c and other places\n\n* networkd:\n   - add more keys to [Route] and [Address] sections\n   - add support for more DHCPv4 options (and, longer term, other kinds of dynamic config)\n   - add reduced [Link] support to .network files\n   - properly handle routerless dhcp leases\n   - work with non-Ethernet devices\n   - dhcp: do we allow configuring dhcp routes on interfaces that are not the one we got the dhcp info from?\n   - the DHCP lease data (such as NTP/DNS) is still made available when\n     a carrier is lost on a link. It should be removed instantly.\n   - expose in the API the following bits:\n         - option 15, domain name\n         - option 12, hostname and/or option 81, fqdn\n         - option 123, 144, geolocation\n         - option 252, configure http proxy (PAC/wpad)\n   - provide a way to define a per-network interface default metric value\n     for all routes to it. possibly a second default for DHCP routes.\n   - allow Name= to be specified repeatedly in the [Match] section. Maybe also\n     support Name=foo*|bar*|baz ?\n   - whenever uplink info changes, make DHCP server send out FORCERENEW\n\n* in networkd, when matching device types, fix up DEVTYPE rubbish the kernel passes to us\n\n* Figure out how to do unittests of networkd's state serialization\n\n* dhcp:\n   - figure out how much we can increase Maximum Message Size\n\n* dhcp6:\n   - add functions to set previously stored IPv6 addresses on startup and get\n     them at shutdown; store them in client->ia_na\n   - write more test cases\n   - implement reconfigure support, see 5.3., 15.11. and 22.20.\n   - implement support for temporary addresses (IA_TA)\n   - implement dhcpv6 authentication\n   - investigate the usefulness of Confirm messages; i.e. are there any\n     situations where the link changes without any loss in carrier detection\n     or interface down\n   - some servers don't do rapid commit without a filled in IA_NA, verify\n     this behavior\n   - RouteTable= ?\n\n* shared/wall: Once more programs are taught to prefer sd-login over utmp,\n  switch the default wall implementation to wall_logind\n  (https://github.com/systemd/systemd/pull/29051#issuecomment-1704917074)\n"
        },
        {
          "name": "catalog",
          "type": "tree",
          "content": null
        },
        {
          "name": "coccinelle",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "factory",
          "type": "tree",
          "content": null
        },
        {
          "name": "hwdb.d",
          "type": "tree",
          "content": null
        },
        {
          "name": "man",
          "type": "tree",
          "content": null
        },
        {
          "name": "meson.build",
          "type": "blob",
          "size": 122.1689453125,
          "content": "# SPDX-License-Identifier: LGPL-2.1-or-later\n\nproject('systemd', 'c',\n        version : files('meson.version'),\n        license : 'LGPLv2+',\n        default_options: [\n                'c_std=gnu11',\n                'prefix=/usr',\n                'sysconfdir=/etc',\n                'localstatedir=/var',\n                'warning_level=2',\n        ],\n        meson_version : '>= 0.60.0',\n       )\n\nproject_major_version = meson.project_version().split('.')[0].split('~')[0]\nif meson.project_version().contains('.')\n        project_minor_version = meson.project_version().split('.')[-1].split('~')[0]\nelse\n        project_minor_version = '0'\nendif\n\nlibsystemd_version = '0.40.0'\nlibudev_version = '1.7.10'\n\nconf = configuration_data()\nconf.set_quoted('PROJECT_URL', 'https://systemd.io/')\nconf.set('PROJECT_VERSION', project_major_version,\n         description : 'Numerical project version (used where a simple number is expected)')\nconf.set_quoted('PROJECT_VERSION_FULL', meson.project_version(), description : 'Full project version')\n\n# This is to be used instead of meson.source_root(), as the latter will return\n# the wrong result when systemd is being built as a meson subproject\nproject_source_root = meson.current_source_dir()\nproject_build_root = meson.current_build_dir()\nrelative_source_path = run_command('realpath',\n                                   '--relative-to=@0@'.format(project_build_root),\n                                   project_source_root,\n                                   check : true).stdout().strip()\nconf.set_quoted('RELATIVE_SOURCE_PATH', relative_source_path)\n\nconf.set10('BUILD_MODE_DEVELOPER', get_option('mode') == 'developer',\n           description : 'tailor build to development or release builds')\n\nfeature = get_option('log-message-verification')\nif feature.auto()\n        have = conf.get('BUILD_MODE_DEVELOPER') == 1\nelse\n        have = feature.enabled()\nendif\nconf.set10('LOG_MESSAGE_VERIFICATION', have)\n\nwant_ossfuzz = get_option('oss-fuzz')\nwant_libfuzzer = get_option('llvm-fuzz')\nif want_ossfuzz and want_libfuzzer\n        error('only one of oss-fuzz or llvm-fuzz can be specified')\nendif\n\nfuzzer_build = want_ossfuzz or want_libfuzzer\n\n# If we're building *not* for actual fuzzing, allow input samples of any size\n# (for testing and for reproduction of issues discovered with previously-higher\n# limits).\nconf.set10('FUZZ_USE_SIZE_LIMIT', fuzzer_build)\n\n# We'll set this to '1' for EFI builds in a different place.\nconf.set10('SD_BOOT', false)\n\n# Create a title-less summary section early, so it ends up first in the output.\n# More items are added later after they have been detected.\nsummary({'build mode' : get_option('mode')})\n\n#####################################################################\n\n# Try to install the git pre-commit hook\ngit_setup_sh = find_program('tools/git-setup.sh', required : false)\nif git_setup_sh.found()\n        git_hook = run_command(git_setup_sh, check : false)\n        if git_hook.returncode() == 0\n                message(git_hook.stdout().strip())\n        endif\nendif\n\n#####################################################################\n\nfs = import('fs')\nif get_option('split-bin') == 'auto'\n        split_bin = not fs.is_symlink('/usr/sbin')\nelse\n        split_bin = get_option('split-bin') == 'true'\nendif\nconf.set10('HAVE_SPLIT_BIN', split_bin,\n           description : 'bin and sbin directories are separate')\n\nhave_standalone_binaries = get_option('standalone-binaries')\n\nsysvinit_path = get_option('sysvinit-path')\nsysvrcnd_path = get_option('sysvrcnd-path')\nconf.set10('HAVE_SYSV_COMPAT', sysvinit_path != '' and sysvrcnd_path != '',\n           description : 'SysV init scripts and rcN.d links are supported')\nconf.set10('CREATE_LOG_DIRS', get_option('create-log-dirs'))\n\nif get_option('hibernate') and not get_option('initrd')\n        error('hibernate depends on initrd')\nendif\n\nconf.set10('BUMP_PROC_SYS_FS_FILE_MAX', get_option('bump-proc-sys-fs-file-max'))\nconf.set10('BUMP_PROC_SYS_FS_NR_OPEN',  get_option('bump-proc-sys-fs-nr-open'))\nconf.set('HIGH_RLIMIT_NOFILE',          512*1024)\n\n# Meson ignores the preceding arguments when joining paths if an absolute\n# component is encountered, so this should canonicalize various paths when they\n# are absolute or relative.\nprefixdir = get_option('prefix')\nif not prefixdir.startswith('/')\n        error('Prefix is not absolute: \"@0@\"'.format(prefixdir))\nendif\n\nprefixdir_noslash = '/' + prefixdir.strip('/')\nbindir = prefixdir / get_option('bindir')\nsbindir = prefixdir / (split_bin ? 'sbin' : 'bin')\nsbin_to_bin = split_bin ? '../bin/' : ''\nlibdir = prefixdir / get_option('libdir')\nsysconfdir = prefixdir / get_option('sysconfdir')\nincludedir = prefixdir / get_option('includedir')\ndatadir = prefixdir / get_option('datadir')\nlocalstatedir = '/' / get_option('localstatedir')\n\nlibexecdir = prefixdir / 'lib/systemd'\npkglibdir = libdir / 'systemd'\n\ninstall_sysconfdir = get_option('install-sysconfdir') != 'false'\ninstall_sysconfdir_samples = get_option('install-sysconfdir') == 'true'\n# Dirs of external packages\npkgconfigdatadir = get_option('pkgconfigdatadir') != '' ? get_option('pkgconfigdatadir') : datadir / 'pkgconfig'\npkgconfiglibdir = get_option('pkgconfiglibdir') != '' ? get_option('pkgconfiglibdir') : libdir / 'pkgconfig'\npolkitpolicydir = datadir / 'polkit-1/actions'\npolkitrulesdir = datadir / 'polkit-1/rules.d'\npolkitpkladir = localstatedir / 'lib/polkit-1/localauthority/10-vendor.d'\nxinitrcdir = get_option('xinitrcdir') != '' ? get_option('xinitrcdir') : sysconfdir / 'X11/xinit/xinitrc.d'\nrpmmacrosdir = get_option('rpmmacrosdir')\nif rpmmacrosdir != 'no'\n        rpmmacrosdir = prefixdir / rpmmacrosdir\nendif\nmodprobedir = prefixdir / 'lib/modprobe.d'\n\n# Our own paths\npkgdatadir = datadir / 'systemd'\nenvironmentdir = prefixdir / 'lib/environment.d'\npkgsysconfdir = sysconfdir / 'systemd'\nuserunitdir = prefixdir / 'lib/systemd/user'\nuserpresetdir = prefixdir / 'lib/systemd/user-preset'\ntmpfilesdir = prefixdir / 'lib/tmpfiles.d'\nusertmpfilesdir = prefixdir / 'share/user-tmpfiles.d'\nsysusersdir = prefixdir / 'lib/sysusers.d'\nsysctldir = prefixdir / 'lib/sysctl.d'\nbinfmtdir = prefixdir / 'lib/binfmt.d'\nmodulesloaddir = prefixdir / 'lib/modules-load.d'\nnetworkdir = prefixdir / 'lib/systemd/network'\nsystemgeneratordir = libexecdir / 'system-generators'\nusergeneratordir = prefixdir / 'lib/systemd/user-generators'\nsystemenvgeneratordir = prefixdir / 'lib/systemd/system-environment-generators'\nuserenvgeneratordir = prefixdir / 'lib/systemd/user-environment-generators'\nsystemshutdowndir = libexecdir / 'system-shutdown'\nsystemsleepdir = libexecdir / 'system-sleep'\nsystemunitdir = prefixdir / 'lib/systemd/system'\nsystempresetdir = prefixdir / 'lib/systemd/system-preset'\nudevlibexecdir = prefixdir / 'lib/udev'\nudevrulesdir = udevlibexecdir / 'rules.d'\nudevhwdbdir = udevlibexecdir / 'hwdb.d'\ncatalogdir = prefixdir / 'lib/systemd/catalog'\nkerneldir = prefixdir / 'lib/kernel'\nkernelinstalldir = kerneldir / 'install.d'\nfactorydir = datadir / 'factory'\nbootlibdir = prefixdir / 'lib/systemd/boot/efi'\ntestsdir = prefixdir / 'lib/systemd/tests'\nunittestsdir = testsdir / 'unit-tests'\ntestdata_dir = testsdir / 'testdata'\nsystemdstatedir = localstatedir / 'lib/systemd'\ncatalogstatedir = systemdstatedir / 'catalog'\nrandomseeddir = localstatedir / 'lib/systemd'\nprofiledir = libexecdir / 'portable' / 'profile'\nrepartdefinitionsdir = libexecdir / 'repart/definitions'\nntpservicelistdir = prefixdir / 'lib/systemd/ntp-units.d'\ncredstoredir = prefixdir / 'lib/credstore'\npcrlockdir = prefixdir / 'lib/pcrlock.d'\nmimepackagesdir = prefixdir / 'share/mime/packages'\n\nconfigfiledir = get_option('configfiledir')\nif configfiledir == ''\n        configfiledir = sysconfdir\nendif\npkgconfigfiledir = configfiledir / 'systemd'\n\ndocdir = get_option('docdir')\nif docdir == ''\n        docdir = datadir / 'doc/systemd'\nendif\n\npamlibdir = get_option('pamlibdir')\nif pamlibdir == ''\n        pamlibdir = libdir / 'security'\nendif\n\npamconfdir = get_option('pamconfdir')\nif pamconfdir == ''\n        pamconfdir = prefixdir / 'lib/pam.d'\nendif\n\nsshconfdir = get_option('sshconfdir')\nif sshconfdir == ''\n        sshconfdir = sysconfdir / 'ssh/ssh_config.d'\nendif\nconf.set10('LINK_SSH_PROXY_DROPIN', sshconfdir != 'no' and not sshconfdir.startswith('/usr/'))\n\nsshdconfdir = get_option('sshdconfdir')\nif sshdconfdir == ''\n        sshdconfdir = sysconfdir / 'ssh/sshd_config.d'\nendif\nconf.set10('LINK_SSHD_USERDB_DROPIN', sshdconfdir != 'no' and not sshdconfdir.startswith('/usr/'))\n\nsshdprivsepdir = get_option('sshdprivsepdir')\nconf.set10('CREATE_SSHDPRIVSEPDIR', sshdprivsepdir != 'no' and not sshdprivsepdir.startswith('/usr/'))\nconf.set('SSHDPRIVSEPDIR', sshdprivsepdir, description : 'SSH privilege separation directory')\n\nlibcryptsetup_plugins_dir = get_option('libcryptsetup-plugins-dir')\nif libcryptsetup_plugins_dir == ''\n        libcryptsetup_plugins_dir = libdir / 'cryptsetup'\nendif\n\nshellprofiledir = get_option('shellprofiledir')\nif shellprofiledir == ''\n        shellprofiledir = sysconfdir / 'profile.d'\nendif\nconf.set10('LINK_SHELL_EXTRA_DROPIN', shellprofiledir != 'no' and not shellprofiledir.startswith('/usr/'))\nconf.set('SHELLPROFILEDIR', shellprofiledir, description : 'shell profile directory')\n\nmemory_accounting_default = get_option('memory-accounting-default')\nstatus_unit_format_default = get_option('status-unit-format-default')\nif status_unit_format_default == 'auto'\n        status_unit_format_default = conf.get('BUILD_MODE_DEVELOPER') == 1 ? 'name' : 'description'\nendif\n\nconf.set_quoted('BINDIR',                                     bindir)\nconf.set_quoted('BINFMT_DIR',                                 binfmtdir)\nconf.set_quoted('BOOTLIBDIR',                                 bootlibdir)\nconf.set_quoted('CATALOG_DATABASE',                           catalogstatedir / 'database')\nconf.set_quoted('CERTIFICATE_ROOT',                           get_option('certificate-root'))\nconf.set_quoted('DOC_DIR',                                    docdir)\nconf.set_quoted('DOCUMENT_ROOT',                              pkgdatadir / 'gatewayd')\nconf.set_quoted('ENVIRONMENT_DIR',                            environmentdir)\nconf.set_quoted('INCLUDE_DIR',                                includedir)\nconf.set_quoted('LIBDIR',                                     libdir)\nconf.set_quoted('LIBEXECDIR',                                 libexecdir)\nconf.set_quoted('KERNEL_INSTALL_DIR',                         kernelinstalldir)\nconf.set_quoted('MODPROBE_DIR',                               modprobedir)\nconf.set_quoted('MODULESLOAD_DIR',                            modulesloaddir)\nconf.set_quoted('PKGSYSCONFDIR',                              pkgsysconfdir)\nconf.set_quoted('POLKIT_AGENT_BINARY_PATH',                   bindir / 'pkttyagent')\nconf.set_quoted('PREFIX',                                     prefixdir)\nconf.set_quoted('PREFIX_NOSLASH',                             prefixdir_noslash)\nconf.set_quoted('RANDOM_SEED',                                randomseeddir / 'random-seed')\nconf.set_quoted('RANDOM_SEED_DIR',                            randomseeddir)\nconf.set_quoted('RC_LOCAL_PATH',                              get_option('rc-local'))\nconf.set_quoted('SSHCONFDIR',                                 sshconfdir)\nconf.set_quoted('SSHDCONFDIR',                                sshdconfdir)\nconf.set_quoted('SHELLPROFILEDIR',                            shellprofiledir)\nconf.set_quoted('SYSCONF_DIR',                                sysconfdir)\nconf.set_quoted('SYSCTL_DIR',                                 sysctldir)\nconf.set_quoted('SYSTEMCTL_BINARY_PATH',                      bindir / 'systemctl')\nconf.set_quoted('SYSTEMD_BINARY_PATH',                        libexecdir / 'systemd')\nconf.set_quoted('SYSTEMD_EXECUTOR_BINARY_PATH',               libexecdir / 'systemd-executor')\nconf.set_quoted('SYSTEMD_CATALOG_DIR',                        catalogdir)\nconf.set_quoted('SYSTEMD_CGROUPS_AGENT_PATH',                 libexecdir / 'systemd-cgroups-agent')\nconf.set_quoted('SYSTEMD_CRYPTSETUP_PATH',                    bindir / 'systemd-cryptsetup')\nconf.set_quoted('SYSTEMD_EXPORT_PATH',                        libexecdir / 'systemd-export')\nconf.set_quoted('SYSTEMD_FSCK_PATH',                          libexecdir / 'systemd-fsck')\nconf.set_quoted('SYSTEMD_GROWFS_PATH',                        libexecdir / 'systemd-growfs')\nconf.set_quoted('SYSTEMD_HOMEWORK_PATH',                      libexecdir / 'systemd-homework')\nconf.set_quoted('SYSTEMD_IMPORT_FS_PATH',                     libexecdir / 'systemd-import-fs')\nconf.set_quoted('SYSTEMD_IMPORT_PATH',                        libexecdir / 'systemd-import')\nconf.set_quoted('SYSTEMD_INTEGRITYSETUP_PATH',                libexecdir / 'systemd-integritysetup')\nconf.set_quoted('SYSTEMD_KBD_MODEL_MAP',                      pkgdatadir / 'kbd-model-map')\nconf.set_quoted('SYSTEMD_LANGUAGE_FALLBACK_MAP',              pkgdatadir / 'language-fallback-map')\nconf.set_quoted('SYSTEMD_MAKEFS_PATH',                        libexecdir / 'systemd-makefs')\nconf.set_quoted('SYSTEMD_PULL_PATH',                          libexecdir / 'systemd-pull')\nconf.set_quoted('SYSTEMD_SHUTDOWN_BINARY_PATH',               libexecdir / 'systemd-shutdown')\nconf.set_quoted('SYSTEMD_SYSUPDATE_PATH',                     libexecdir / 'systemd-sysupdate')\nconf.set_quoted('SYSTEMD_TEST_DATA',                          testdata_dir)\nconf.set_quoted('SYSTEMD_TTY_ASK_PASSWORD_AGENT_BINARY_PATH', bindir / 'systemd-tty-ask-password-agent')\nconf.set_quoted('SYSTEMD_UPDATE_HELPER_PATH',                 libexecdir / 'systemd-update-helper')\nconf.set_quoted('SYSTEMD_USERWORK_PATH',                      libexecdir / 'systemd-userwork')\nconf.set_quoted('SYSTEMD_MOUNTWORK_PATH',                     libexecdir / 'systemd-mountwork')\nconf.set_quoted('SYSTEMD_NSRESOURCEWORK_PATH',                libexecdir / 'systemd-nsresourcework')\nconf.set_quoted('SYSTEMD_VERITYSETUP_PATH',                   libexecdir / 'systemd-veritysetup')\nconf.set_quoted('SYSTEM_CONFIG_UNIT_DIR',                     pkgsysconfdir / 'system')\nconf.set_quoted('SYSTEM_DATA_UNIT_DIR',                       systemunitdir)\nconf.set_quoted('SYSTEM_ENV_GENERATOR_DIR',                   systemenvgeneratordir)\nconf.set_quoted('SYSTEM_GENERATOR_DIR',                       systemgeneratordir)\nconf.set_quoted('SYSTEM_PRESET_DIR',                          systempresetdir)\nconf.set_quoted('SYSTEM_SHUTDOWN_PATH',                       systemshutdowndir)\nconf.set_quoted('SYSTEM_SLEEP_PATH',                          systemsleepdir)\nconf.set_quoted('SYSTEM_SYSVINIT_PATH',                       sysvinit_path)\nconf.set_quoted('SYSTEM_SYSVRCND_PATH',                       sysvrcnd_path)\nconf.set_quoted('SYSUSERS_DIR',                               sysusersdir)\nconf.set_quoted('TMPFILES_DIR',                               tmpfilesdir)\nconf.set_quoted('USER_TMPFILES_DIR',                          usertmpfilesdir)\nconf.set_quoted('UDEVLIBEXECDIR',                             udevlibexecdir)\nconf.set_quoted('UDEV_HWDB_DIR',                              udevhwdbdir)\nconf.set_quoted('UDEV_RULES_DIR',                             udevrulesdir)\nconf.set_quoted('USER_CONFIG_UNIT_DIR',                       pkgsysconfdir / 'user')\nconf.set_quoted('USER_DATA_UNIT_DIR',                         userunitdir)\nconf.set_quoted('USER_ENV_GENERATOR_DIR',                     userenvgeneratordir)\nconf.set_quoted('USER_GENERATOR_DIR',                         usergeneratordir)\nconf.set_quoted('USER_KEYRING_PATH',                          pkgsysconfdir / 'import-pubring.gpg')\nconf.set_quoted('USER_PRESET_DIR',                            userpresetdir)\nconf.set_quoted('VENDOR_KEYRING_PATH',                        libexecdir / 'import-pubring.gpg')\n\nconf.set('ANSI_OK_COLOR',                                     'ANSI_' + get_option('ok-color').underscorify().to_upper())\nconf.set10('ENABLE_URLIFY',                                   get_option('urlify'))\nconf.set10('ENABLE_FEXECVE',                                  get_option('fexecve'))\nconf.set10('MEMORY_ACCOUNTING_DEFAULT',                       memory_accounting_default)\nconf.set('STATUS_UNIT_FORMAT_DEFAULT',                        'STATUS_UNIT_FORMAT_' + status_unit_format_default.to_upper())\nconf.set_quoted('STATUS_UNIT_FORMAT_DEFAULT_STR',             status_unit_format_default)\n\nconf.set('DEFAULT_TIMEOUT_SEC',                               get_option('default-timeout-sec'))\nconf.set('DEFAULT_USER_TIMEOUT_SEC',                          get_option('default-user-timeout-sec'))\nconf.set('UPDATE_HELPER_USER_TIMEOUT_SEC',                    get_option('update-helper-user-timeout-sec'))\n\nconf.set10('ENABLE_FIRST_BOOT_FULL_PRESET',                   get_option('first-boot-full-preset'))\n\n#####################################################################\n\ncc = meson.get_compiler('c')\nuserspace_c_args = []\nuserspace_c_ld_args = []\nmeson_build_sh = find_program('tools/meson-build.sh')\n\nwant_tests = get_option('tests')\nwant_slow_tests = want_tests != 'false' and get_option('slow-tests')\nwant_fuzz_tests = want_tests != 'false' and get_option('fuzz-tests')\nwant_integration_tests = want_tests != 'false' and get_option('integration-tests')\ninstall_tests = want_tests != 'false' and get_option('install-tests')\n\nif add_languages('cpp', native : false, required : fuzzer_build)\n        #  Used only for tests\n        cxx = meson.get_compiler('cpp')\n        cxx_cmd = ' '.join(cxx.cmd_array())\nelse\n        cxx_cmd = ''\nendif\n\nif want_libfuzzer\n        fuzzing_engine = meson.get_compiler('cpp').find_library('Fuzzer', required : false)\n        if fuzzing_engine.found()\n                userspace_c_args += '-fsanitize-coverage=trace-pc-guard,trace-cmp'\n        elif cc.has_argument('-fsanitize=fuzzer-no-link')\n                userspace_c_args += '-fsanitize=fuzzer-no-link'\n        else\n                error('Looks like neither libFuzzer nor -fsanitize=fuzzer-no-link is supported')\n        endif\nelif want_ossfuzz\n        fuzzing_engine = meson.get_compiler('cpp').find_library('FuzzingEngine')\nendif\n\n# Those generate many false positives, and we do not want to change the code to\n# avoid them.\nbasic_disabled_warnings = [\n        '-Wno-missing-field-initializers',\n        '-Wno-unknown-warning-option',\n        '-Wno-unused-parameter',\n        '-Wno-nonnull-compare',\n]\n\npossible_common_cc_flags = [\n        '-Warray-bounds',     # clang\n        '-Warray-bounds=2',\n        '-Wdate-time',\n        '-Wendif-labels',\n        '-Werror=format=2',\n        '-Werror=format-signedness',\n        '-Werror=implicit-function-declaration',\n        '-Werror=implicit-int',\n        '-Werror=incompatible-pointer-types',\n        '-Werror=int-conversion',\n        '-Werror=missing-declarations',\n        '-Werror=missing-prototypes',\n        '-Werror=overflow',\n        '-Werror=override-init',\n        '-Werror=return-type',\n        '-Werror=shift-count-overflow',\n        '-Werror=shift-overflow=2',\n        '-Werror=strict-flex-arrays',\n        '-Werror=undef',\n        '-Wfloat-equal',\n        # gperf prevents us from enabling this because it does not emit fallthrough\n        # attribute with clang.\n        #'-Wimplicit-fallthrough',\n        '-Wimplicit-fallthrough=5',\n        '-Winit-self',\n        '-Wlogical-op',\n        '-Wmissing-include-dirs',\n        '-Wmissing-noreturn',\n        '-Wnested-externs',\n        '-Wold-style-definition',\n        '-Wpointer-arith',\n        '-Wredundant-decls',\n        '-Wshadow',\n        '-Wstrict-aliasing=2',\n        '-Wstrict-prototypes',\n        '-Wsuggest-attribute=noreturn',\n        '-Wunterminated-string-initialization',\n        '-Wunused-function',\n        '-Wwrite-strings',\n        '-Wzero-length-bounds',\n\n        # negative arguments are correctly detected starting with meson 0.46.\n        '-Wno-error=#warnings',  # clang\n        '-Wno-string-plus-int',  # clang\n\n        '-fdiagnostics-show-option',\n        '-fno-common',\n        '-fstack-protector',\n        '-fstack-protector-strong',\n        '-fstrict-flex-arrays=3',\n        '--param=ssp-buffer-size=4',\n]\n\npossible_common_link_flags = [\n        '-fstack-protector',\n]\n\nc_args = get_option('c_args')\n\n# Our json library does not support -ffinite-math-only, which is enabled by -Ofast or -ffast-math.\nif (('-Ofast' in c_args or '-ffast-math' in c_args or '-ffinite-math-only' in c_args) and '-fno-finite-math-only' not in c_args)\n        error('-Ofast, -ffast-math, or -ffinite-math-only is specified in c_args.')\nendif\n\n# Disable -Wmaybe-uninitialized when compiling with -Os/-O1/-O3/etc. There are\n# too many false positives with gcc >= 8. Effectively, we only test with -O0\n# and -O2; this should be enough to catch most important cases without too much\n# busywork. See https://github.com/systemd/systemd/pull/19226.\nif cc.get_id() == 'gcc' and (not '02'.contains(get_option('optimization')) or\n                             cc.version().version_compare('<10') or\n                             '-Os' in c_args or\n                             '-O1' in c_args or\n                             '-O3' in c_args or\n                             '-Og' in c_args)\n        possible_common_cc_flags += '-Wno-maybe-uninitialized'\nendif\n\n# Disable -Wno-unused-result with gcc, see\n# https://gcc.gnu.org/bugzilla/show_bug.cgi?id=66425.\nif cc.get_id() == 'gcc'\n        possible_common_cc_flags += '-Wno-unused-result'\nendif\n\n# --as-needed and --no-undefined are provided by meson by default,\n# run 'meson configure' to see what is enabled\npossible_link_flags = [\n        '-Wl,--fatal-warnings',\n        '-Wl,-z,now',\n        '-Wl,-z,relro',\n]\n\nif get_option('b_sanitize') == 'none'\n        possible_link_flags += '-Wl,--warn-common'\nendif\n\nif cc.get_id() == 'clang'\n        possible_common_cc_flags += [\n                '-Wno-typedef-redefinition',\n                '-Wno-gnu-variable-sized-type-not-at-end',\n        ]\nendif\n\nif get_option('mode') == 'release'\n        # We could enable 'pattern' for developer mode, but that can interfere with\n        # valgrind and sanitizer builds. Also, clang does not zero-initialize unions,\n        # breaking some of our code (https://reviews.llvm.org/D68115).\n        possible_common_cc_flags += '-ftrivial-auto-var-init=zero'\nendif\n\npossible_cc_flags = [\n        '-fno-strict-aliasing',\n        '-fstrict-flex-arrays=1',\n        '-fvisibility=hidden',\n]\n\nif get_option('buildtype') != 'debug'\n        possible_cc_flags += [\n                '-ffunction-sections',\n                '-fdata-sections',\n        ]\n\n        possible_link_flags += '-Wl,--gc-sections'\nendif\n\nif get_option('mode') == 'developer'\n        possible_cc_flags += '-fno-omit-frame-pointer'\nendif\n\nadd_project_arguments(\n        cc.get_supported_arguments(\n                basic_disabled_warnings,\n                possible_common_cc_flags\n        ),\n        language : 'c')\n\nadd_project_link_arguments(\n        cc.get_supported_link_arguments(possible_common_link_flags),\n        language : 'c')\n\nuserspace_c_args += cc.get_supported_arguments(possible_cc_flags)\nuserspace_c_ld_args += cc.get_supported_link_arguments(possible_link_flags)\n\nhave = cc.has_argument('-Wzero-length-bounds')\nconf.set10('HAVE_ZERO_LENGTH_BOUNDS', have)\n\nif cc.compiles('''\n   #include <time.h>\n   #include <inttypes.h>\n   typedef uint64_t usec_t;\n   usec_t now(clockid_t clock);\n   int main(void) {\n           struct timespec now;\n           return 0;\n   }\n''', args: '-Werror=shadow', name : '-Werror=shadow with local shadowing')\n        add_project_arguments('-Werror=shadow', language : 'c')\nendif\n\nif cxx_cmd != ''\n        add_project_arguments(cxx.get_supported_arguments(basic_disabled_warnings), language : 'cpp')\nendif\n\ncpp = ' '.join(cc.cmd_array() + get_option('c_args')) + ' -E'\n\nhas_wstringop_truncation = cc.has_argument('-Wstringop-truncation')\n\n#####################################################################\n# compilation result tests\n\nconf.set('_GNU_SOURCE', 1)\nconf.set('__SANE_USERSPACE_TYPES__', true)\nconf.set10('HAVE_WSTRINGOP_TRUNCATION', has_wstringop_truncation)\n\nconf.set('SIZEOF_DEV_T', cc.sizeof('dev_t', prefix : '#include <sys/types.h>'))\nconf.set('SIZEOF_INO_T', cc.sizeof('ino_t', prefix : '#include <sys/types.h>'))\nconf.set('SIZEOF_RLIM_T', cc.sizeof('rlim_t', prefix : '#include <sys/resource.h>'))\nconf.set('SIZEOF_TIME_T', cc.sizeof('time_t', prefix : '#include <sys/time.h>'))\nconf.set('SIZEOF_TIMEX_MEMBER', cc.sizeof('typeof(((struct timex *)0)->freq)', prefix : '#include <sys/timex.h>'))\n\nlong_max = cc.compute_int(\n        'LONG_MAX',\n        prefix : '#include <limits.h>',\n        guess : 0x7FFFFFFFFFFFFFFF,\n        high : 0x7FFFFFFFFFFFFFFF)\nassert(long_max > 100000)\nconf.set_quoted('LONG_MAX_STR', '@0@'.format(long_max))\n\ndecl_headers = '''\n#include <dirent.h>\n#include <sched.h>\n#include <sys/mount.h>\n#include <sys/stat.h>\n#include <uchar.h>\n'''\n\nforeach decl : ['char16_t',\n                'char32_t',\n                'struct mount_attr',\n                'struct statx',\n                'struct dirent64',\n                'struct sched_attr',\n               ]\n\n        # We get -1 if the size cannot be determined\n        have = cc.sizeof(decl, prefix : decl_headers, args : '-D_GNU_SOURCE') > 0\n\n        if decl == 'struct mount_attr'\n                if have\n                        want_linux_fs_h = false\n                else\n                        have = cc.sizeof(decl,\n                                         prefix : decl_headers + '#include <linux/fs.h>',\n                                         args : '-D_GNU_SOURCE') > 0\n                        want_linux_fs_h = have\n                endif\n        endif\n\n        if decl == 'struct statx'\n                if have\n                        want_linux_stat_h = false\n                else\n                        have = cc.sizeof(decl,\n                                         prefix : decl_headers + '#include <linux/stat.h>',\n                                         args : '-D_GNU_SOURCE') > 0\n                        want_linux_stat_h = have\n                endif\n        endif\n\n        conf.set10('HAVE_' + decl.underscorify().to_upper(), have)\nendforeach\n\nconf.set10('WANT_LINUX_STAT_H', want_linux_stat_h)\nconf.set10('WANT_LINUX_FS_H', want_linux_fs_h)\n\nforeach ident : ['secure_getenv', '__secure_getenv']\n        conf.set10('HAVE_' + ident.to_upper(), cc.has_function(ident))\nendforeach\n\nforeach ident : [\n        ['memfd_create',      '''#include <sys/mman.h>'''],\n        ['gettid',            '''#include <sys/types.h>\n                                 #include <unistd.h>'''],\n        ['fchmodat2',         '''#include <stdlib.h>\n                                 #include <fcntl.h>'''],      # no known header declares fchmodat2\n        ['pivot_root',        '''#include <stdlib.h>\n                                 #include <unistd.h>'''],     # no known header declares pivot_root\n        ['ioprio_get',        '''#include <sched.h>'''],      # no known header declares ioprio_get\n        ['ioprio_set',        '''#include <sched.h>'''],      # no known header declares ioprio_set\n        ['sched_setattr',     '''#include <sched.h>'''],      # no known header declares sched_setattr\n        ['name_to_handle_at', '''#include <sys/types.h>\n                                 #include <sys/stat.h>\n                                 #include <fcntl.h>'''],\n        ['setns',             '''#include <sched.h>'''],\n        ['renameat2',         '''#include <stdio.h>\n                                 #include <fcntl.h>'''],\n        ['kcmp',              '''#include <linux/kcmp.h>'''],\n        ['keyctl',            '''#include <sys/types.h>\n                                 #include <keyutils.h>'''],\n        ['copy_file_range',   '''#include <sys/syscall.h>\n                                 #include <unistd.h>'''],\n        ['bpf',               '''#include <sys/syscall.h>\n                                 #include <unistd.h>'''],\n        ['statx',             '''#include <sys/types.h>\n                                 #include <sys/stat.h>\n                                 #include <unistd.h>'''],\n        ['explicit_bzero' ,   '''#include <string.h>'''],\n        ['reallocarray',      '''#include <stdlib.h>'''],\n        ['set_mempolicy',     '''#include <stdlib.h>\n                                 #include <unistd.h>'''],\n        ['get_mempolicy',     '''#include <stdlib.h>\n                                 #include <unistd.h>'''],\n        ['pidfd_send_signal', '''#include <stdlib.h>\n                                 #include <unistd.h>\n                                 #include <signal.h>\n                                 #include <sys/wait.h>\n                                 #include <sys/pidfd.h>'''],\n        ['pidfd_open',        '''#include <stdlib.h>\n                                 #include <unistd.h>\n                                 #include <signal.h>\n                                 #include <sys/wait.h>\n                                 #include <sys/pidfd.h>'''],\n        ['rt_sigqueueinfo',   '''#include <stdlib.h>\n                                 #include <unistd.h>\n                                 #include <signal.h>\n                                 #include <sys/wait.h>'''],\n        ['rt_tgsigqueueinfo', '''#include <stdlib.h>\n                                 #include <unistd.h>\n                                 #include <signal.h>\n                                 #include <sys/wait.h>'''],\n        ['mallinfo',          '''#include <malloc.h>'''],\n        ['mallinfo2',         '''#include <malloc.h>'''],\n        ['execveat',          '''#include <unistd.h>'''],\n        ['close_range',       '''#include <unistd.h>'''],\n        ['epoll_pwait2',      '''#include <sys/epoll.h>'''],\n        ['mount_setattr',     '''#include <sys/mount.h>'''],\n        ['move_mount',        '''#include <sys/mount.h>'''],\n        ['open_tree',         '''#include <sys/mount.h>'''],\n        ['fsopen',            '''#include <sys/mount.h>'''],\n        ['fsconfig',          '''#include <sys/mount.h>'''],\n        ['fsmount',           '''#include <sys/mount.h>'''],\n        ['getdents64',        '''#include <dirent.h>'''],\n        ['pidfd_spawn',       '''#include <spawn.h>'''],\n        ['strerrorname_np',   '''#include <string.h>'''],\n        ['getrandom',         '''#include <sys/random.h>'''],\n]\n\n        have = cc.has_function(ident[0], prefix : ident[1], args : '-D_GNU_SOURCE')\n        conf.set10('HAVE_' + ident[0].to_upper(), have)\nendforeach\n\n#####################################################################\n\nsh = find_program('sh')\necho = find_program('echo')\nsed = find_program('sed')\nawk = find_program('awk')\nstat = find_program('stat')\nln = find_program('ln')\ngit = find_program('git', required : false)\nenv = find_program('env')\nrsync = find_program('rsync', required : false)\ndiff = find_program('diff')\nfind = find_program('find')\n\nln_s = ln.full_path() + ' -frsT -- \"${DESTDIR:-}@0@\" \"${DESTDIR:-}@1@\"'\n\n# If -Dxxx-path option is found, use that. Otherwise, check in $PATH,\n# /usr/sbin, /sbin, and fall back to the default from middle column.\nprogs = [['quotaon',    '/usr/sbin/quotaon'    ],\n         ['quotacheck', '/usr/sbin/quotacheck' ],\n         ['kmod',       '/usr/bin/kmod'        ],\n         ['kexec',      '/usr/sbin/kexec'      ],\n         ['sulogin',    '/usr/sbin/sulogin'    ],\n         ['mount',      '/usr/bin/mount',      'MOUNT_PATH'],\n         ['umount',     '/usr/bin/umount',     'UMOUNT_PATH'],\n         ['loadkeys',   '/usr/bin/loadkeys',   'KBD_LOADKEYS'],\n         ['setfont',    '/usr/bin/setfont',    'KBD_SETFONT'],\n         ['nologin',    '/usr/sbin/nologin',   ],\n        ]\nforeach prog : progs\n        path = get_option(prog[0] + '-path')\n        if path != ''\n                message('Using @1@ for @0@'.format(prog[0], path))\n        else\n                exe = find_program(prog[0],\n                                   '/usr/sbin/' + prog[0],\n                                   '/sbin/' + prog[0],\n                                   required: false)\n                path = exe.found() ? exe.full_path() : prog[1]\n        endif\n        name = prog.length() > 2 ? prog[2] : prog[0].to_upper()\n        conf.set_quoted(name, path)\nendforeach\n\nif run_command(ln, '--relative', '--help', check : false).returncode() != 0\n        error('ln does not support --relative (added in coreutils 8.16)')\nendif\n\n#####################################################################\n\ngperf = find_program('gperf')\n\ngperf_test_format = '''\n#include <string.h>\nconst char* in_word_set(const char *, @0@);\n@1@\n'''\ngperf_snippet = run_command(sh, '-c', 'echo foo,bar | \"$1\" -L ANSI-C', '_', gperf,\n                            check : true)\ngperf_test = gperf_test_format.format('size_t', gperf_snippet.stdout())\nif cc.compiles(gperf_test)\n        gperf_len_type = 'size_t'\nelse\n        gperf_test = gperf_test_format.format('unsigned', gperf_snippet.stdout())\n        if cc.compiles(gperf_test)\n                gperf_len_type = 'unsigned'\n        else\n                error('unable to determine gperf len type')\n        endif\nendif\nmessage('gperf len type is @0@'.format(gperf_len_type))\nconf.set('GPERF_LEN_TYPE', gperf_len_type,\n         description : 'The type of gperf \"len\" parameter')\n\n#####################################################################\n\nif not cc.has_header('sys/capability.h')\n        error('POSIX caps headers not found')\nendif\nforeach header : ['crypt.h',\n                  'linux/ioprio.h',\n                  'linux/time_types.h',\n                  'sys/sdt.h',\n                  'threads.h',\n                  'valgrind/memcheck.h',\n                  'valgrind/valgrind.h',\n                 ]\n\n        conf.set10('HAVE_' + header.underscorify().to_upper(),\n                   cc.has_header(header))\nendforeach\n\n#####################################################################\n\nfallback_hostname = get_option('fallback-hostname')\nif fallback_hostname == '' or fallback_hostname[0] == '.' or fallback_hostname[0] == '-'\n        error('Invalid fallback-hostname configuration')\n        # A more extensive test is done in test-hostname-util. Let's catch\n        # the most obvious errors here so we don't fail with an assert later.\nendif\nconf.set_quoted('FALLBACK_HOSTNAME', fallback_hostname)\n\nextra_net_naming_schemes = []\nextra_net_naming_map = []\nforeach scheme: get_option('extra-net-naming-schemes').split(',')\n        if scheme != ''\n                name = scheme.split('=')[0]\n                value = scheme.split('=')[1]\n                NAME = name.underscorify().to_upper()\n                VALUE = []\n                foreach field: value.split('+')\n                        VALUE += 'NAMING_' + field.underscorify().to_upper()\n                endforeach\n                extra_net_naming_schemes += 'NAMING_@0@ = @1@,'.format(NAME, '|'.join(VALUE))\n                extra_net_naming_map += '{ \"@0@\", NAMING_@1@ },'.format(name, NAME)\n        endif\nendforeach\nconf.set('EXTRA_NET_NAMING_SCHEMES', ' '.join(extra_net_naming_schemes))\nconf.set('EXTRA_NET_NAMING_MAP', ' '.join(extra_net_naming_map))\n\ndefault_net_naming_scheme = get_option('default-net-naming-scheme')\nconf.set_quoted('DEFAULT_NET_NAMING_SCHEME', default_net_naming_scheme,\n                description : 'Default naming scheme as a string')\nif default_net_naming_scheme != 'latest'\n        conf.set('_DEFAULT_NET_NAMING_SCHEME',\n                 'NAMING_' + default_net_naming_scheme.underscorify().to_upper(),\n                 description : 'Default naming scheme as a constant')\nendif\n\ntime_epoch = get_option('time-epoch')\nif time_epoch <= 0\n        time_epoch = run_command(sh, '-c', 'echo \"$SOURCE_DATE_EPOCH\"', check : true).stdout().strip()\n        if time_epoch == '' and git.found() and fs.is_dir('.git')\n                # If we're in a git repository, use the creation time of the latest git tag.\n                latest_tag = run_command(git, 'describe', '--abbrev=0', '--tags',\n                                         check : false)\n                if latest_tag.returncode() == 0\n                        time_epoch = run_command(\n                                git, 'log', '--no-show-signature', '-1', '--format=%at',\n                                     latest_tag.stdout().strip(),\n                                check : false).stdout()\n                endif\n        endif\n        if time_epoch == ''\n                NEWS = files('NEWS')\n                time_epoch = run_command(stat, '-c', '%Y', NEWS,\n                                         check : true).stdout()\n        endif\n        time_epoch = time_epoch.strip().to_int()\nendif\nconf.set('TIME_EPOCH', time_epoch)\n\nconf.set('CLOCK_VALID_RANGE_USEC_MAX', get_option('clock-valid-range-usec-max'))\n\ndefault_user_shell = get_option('default-user-shell')\nconf.set_quoted('DEFAULT_USER_SHELL',      default_user_shell)\nconf.set_quoted('DEFAULT_USER_SHELL_NAME', fs.name(default_user_shell))\n\nforeach tuple : [['system-alloc-uid-min', 'SYS_UID_MIN', 1],  # Also see login.defs(5).\n                 ['system-uid-max',       'SYS_UID_MAX', 999],\n                 ['system-alloc-gid-min', 'SYS_GID_MIN', 1],\n                 ['system-gid-max',       'SYS_GID_MAX', 999]]\n        v = get_option(tuple[0])\n        if v <= 0\n                v = run_command(\n                        awk,\n                        '/^\\s*@0@\\s+/ { uid=$2 } END { print uid }'.format(tuple[1]),\n                        '/etc/login.defs',\n                        check : false).stdout().strip()\n                if v == ''\n                        v = tuple[2]\n                else\n                        v = v.to_int()\n                endif\n        endif\n        conf.set(tuple[0].underscorify().to_upper(), v)\nendforeach\nif conf.get('SYSTEM_ALLOC_UID_MIN') >= conf.get('SYSTEM_UID_MAX')\n        error('Invalid uid allocation range')\nendif\nif conf.get('SYSTEM_ALLOC_GID_MIN') >= conf.get('SYSTEM_GID_MAX')\n        error('Invalid gid allocation range')\nendif\n\ndynamic_uid_min = get_option('dynamic-uid-min')\ndynamic_uid_max = get_option('dynamic-uid-max')\nconf.set('DYNAMIC_UID_MIN', dynamic_uid_min)\nconf.set('DYNAMIC_UID_MAX', dynamic_uid_max)\n\ncontainer_uid_base_min = get_option('container-uid-base-min')\ncontainer_uid_base_max = get_option('container-uid-base-max')\nconf.set('CONTAINER_UID_BASE_MIN', container_uid_base_min)\nconf.set('CONTAINER_UID_BASE_MAX', container_uid_base_max)\n\nforeign_uid_base = get_option('foreign-uid-base')\nconf.set('FOREIGN_UID_BASE', foreign_uid_base)\n\nnobody_user = get_option('nobody-user')\nnobody_group = get_option('nobody-group')\n\nif not meson.is_cross_build()\n        getent_result = run_command('getent', 'passwd', '65534', check : false)\n        if getent_result.returncode() == 0\n                name = getent_result.stdout().split(':')[0]\n                if name != nobody_user\n                        warning('\\n' +\n                                'The local user with the UID 65534 does not match the configured user name \"@0@\" of the nobody user (its name is @1@).\\n'.format(nobody_user, name) +\n                                'Your build will result in an user table setup that is incompatible with the local system.')\n                endif\n        endif\n        id_result = run_command('id', '-u', nobody_user, check : false)\n        if id_result.returncode() == 0\n                id = id_result.stdout().strip().to_int()\n                if id != 65534\n                        warning('\\n' +\n                                'The local user with the configured user name \"@0@\" of the nobody user does not have UID 65534 (it has @1@).\\n'.format(nobody_user, id) +\n                                'Your build will result in an user table setup that is incompatible with the local system.')\n                endif\n        endif\n\n        getent_result = run_command('getent', 'group', '65534', check : false)\n        if getent_result.returncode() == 0\n                name = getent_result.stdout().split(':')[0]\n                if name != nobody_group\n                        warning('\\n' +\n                                'The local group with the GID 65534 does not match the configured group name \"@0@\" of the nobody group (its name is @1@).\\n'.format(nobody_group, name) +\n                                'Your build will result in an group table setup that is incompatible with the local system.')\n                endif\n        endif\n        id_result = run_command('id', '-g', nobody_group, check : false)\n        if id_result.returncode() == 0\n                id = id_result.stdout().strip().to_int()\n                if id != 65534\n                        warning('\\n' +\n                                'The local group with the configured group name \"@0@\" of the nobody group does not have GID 65534 (it has @1@).\\n'.format(nobody_group, id) +\n                                'Your build will result in an group table setup that is incompatible with the local system.')\n                endif\n        endif\nendif\nif nobody_user != nobody_group and not (nobody_user == 'nobody' and nobody_group == 'nogroup')\n        warning('\\n' +\n                'The configured user name \"@0@\" and group name \"@1@\" of the nobody user/group are not equivalent.\\n'.format(nobody_user, nobody_group) +\n                'Please re-check that both \"nobody-user\" and \"nobody-group\" options are correctly set.')\nendif\n\nconf.set_quoted('NOBODY_USER_NAME', nobody_user)\nconf.set_quoted('NOBODY_GROUP_NAME', nobody_group)\n\nstatic_ugids = []\nforeach option : ['adm-gid',\n                  'audio-gid',\n                  'cdrom-gid',\n                  'dialout-gid',\n                  'disk-gid',\n                  'input-gid',\n                  'kmem-gid',\n                  'kvm-gid',\n                  'lp-gid',\n                  'render-gid',\n                  'sgx-gid',\n                  'tape-gid',\n                  'tty-gid',\n                  'users-gid',\n                  'utmp-gid',\n                  'video-gid',\n                  'wheel-gid',\n                  'systemd-journal-gid',\n                  'systemd-network-uid',\n                  'systemd-resolve-uid',\n                  'systemd-timesync-uid']\n        name = option.underscorify().to_upper()\n        val = get_option(option)\n\n        # Ensure provided GID argument is positive, otherwise fall back to default assignment\n        conf.set(name, val > 0 ? val : '-')\n        if val > 0\n                static_ugids += '@0@:@1@'.format(option, val)\n        endif\nendforeach\n\nconf.set10('ENABLE_ADM_GROUP', get_option('adm-group'))\nconf.set10('ENABLE_WHEEL_GROUP', get_option('wheel-group'))\n\ndev_kvm_mode = get_option('dev-kvm-mode')\nconf.set_quoted('DEV_KVM_MODE', dev_kvm_mode) # FIXME: convert to 0o‚Ä¶ notation\nconf.set10('DEV_KVM_UACCESS', dev_kvm_mode != '0666')\ngroup_render_mode = get_option('group-render-mode')\nconf.set_quoted('GROUP_RENDER_MODE', group_render_mode)\nconf.set10('GROUP_RENDER_UACCESS', group_render_mode != '0666')\ntty_mode = get_option('tty-mode')\n# The setting is used as both octal integer and string through STRINGIFY().\n# Here, only check if the value starts with '06', and further check will be done in terminal-util.h.\nif not tty_mode.startswith('06')\n        error('Unexpected access mode \"@0@\" is specified for TTY/PTS device nodes, it must be \"06xx\".'.format(tty_mode))\nelif tty_mode != '0600' and tty_mode != '0620'\n        warning('Unexpected access mode \"@0@\" is specified for TTY/PTS device nodes, typically it should be \"0600\" or \"0620\", proceeding anyway.'.format(tty_mode))\nendif\n# Do not use set_quoted() here, so that the value is available as an integer.\nconf.set('TTY_MODE', tty_mode)\n\nkill_user_processes = get_option('default-kill-user-processes')\nconf.set10('KILL_USER_PROCESSES', kill_user_processes)\n\ndns_servers = get_option('dns-servers')\nconf.set_quoted('DNS_SERVERS', dns_servers)\n\nntp_servers = get_option('ntp-servers')\nconf.set_quoted('NTP_SERVERS', ntp_servers)\n\ndefault_locale = get_option('default-locale')\nconf.set_quoted('SYSTEMD_DEFAULT_LOCALE', default_locale)\n\nnspawn_locale = get_option('nspawn-locale')\nconf.set_quoted('SYSTEMD_NSPAWN_LOCALE', nspawn_locale)\n\ndefault_keymap = get_option('default-keymap')\nif default_keymap == ''\n        # We canonicalize empty keymap to '@kernel', as it makes the default value\n        # in the factory provided /etc/vconsole.conf more obvious.\n        default_keymap = '@kernel'\nendif\nconf.set_quoted('SYSTEMD_DEFAULT_KEYMAP', default_keymap)\n\nlocalegen_path = get_option('localegen-path')\nif localegen_path != ''\n        conf.set_quoted('LOCALEGEN_PATH', localegen_path)\nendif\nconf.set10('HAVE_LOCALEGEN', localegen_path != '')\n\nconf.set_quoted('GETTEXT_PACKAGE', meson.project_name())\n\nservice_watchdog = get_option('service-watchdog')\nwatchdog_value = service_watchdog == '' ? '' : 'WatchdogSec=' + service_watchdog\nconf.set_quoted('SERVICE_WATCHDOG', watchdog_value)\n\nconf.set_quoted('SUSHELL', get_option('debug-shell'))\nconf.set_quoted('DEBUGTTY', get_option('debug-tty'))\n\nenable_debug_hashmap = false\nenable_debug_mmap_cache = false\nenable_debug_siphash = false\nforeach name : get_option('debug-extra')\n        if name == 'hashmap'\n                enable_debug_hashmap = true\n        elif name == 'mmap-cache'\n                enable_debug_mmap_cache = true\n        elif name == 'siphash'\n                enable_debug_siphash = true\n        else\n                message('unknown debug option \"@0@\", ignoring'.format(name))\n        endif\nendforeach\nconf.set10('ENABLE_DEBUG_HASHMAP', enable_debug_hashmap)\nconf.set10('ENABLE_DEBUG_MMAP_CACHE', enable_debug_mmap_cache)\nconf.set10('ENABLE_DEBUG_SIPHASH', enable_debug_siphash)\nconf.set10('LOG_TRACE', get_option('log-trace'))\n\ndefault_user_path = get_option('user-path')\nif default_user_path != ''\n        conf.set_quoted('DEFAULT_USER_PATH', default_user_path)\nendif\n\n#####################################################################\n\nthreads = dependency('threads')\nlibrt = cc.find_library('rt')\nlibm = cc.find_library('m')\nlibdl = cc.find_library('dl')\nlibcrypt = dependency('libcrypt', 'libxcrypt', required : false)\nif not libcrypt.found()\n        # fallback to use find_library() if libcrypt is provided by glibc, e.g. for LibreELEC.\n        libcrypt = cc.find_library('crypt')\nendif\nlibcap = dependency('libcap')\n\n# On some architectures, libatomic is required. But on some installations,\n# it is found, but actual linking fails. So let's try to use it opportunistically.\n# If it is installed, but not needed, it will be dropped because of --as-needed.\nif cc.links('''int main(int argc, char **argv) { return 0; }''',\n            args : '-latomic',\n            name : 'libatomic')\n        libatomic = declare_dependency(link_args : '-latomic')\nelse\n        libatomic = []\nendif\n\ncrypt_header = conf.get('HAVE_CRYPT_H') == 1 ? '''#include <crypt.h>''' : '''#include <unistd.h>'''\nforeach ident : [\n        ['crypt_ra',               crypt_header],\n        ['crypt_preferred_method', crypt_header],\n        ['crypt_gensalt_ra',       crypt_header]]\n\n        have = cc.has_function(ident[0], prefix : ident[1], args : '-D_GNU_SOURCE',\n                               dependencies : libcrypt)\n        conf.set10('HAVE_' + ident[0].to_upper(), have)\nendforeach\n\nbpf_framework = get_option('bpf-framework')\nbpf_compiler = get_option('bpf-compiler')\nlibbpf = dependency('libbpf',\n                    required : bpf_framework,\n                    version : bpf_compiler == 'gcc' ? '>= 1.4.0' : '>= 0.1.0')\nconf.set10('HAVE_LIBBPF', libbpf.found())\n\nif not libbpf.found()\n        conf.set10('BPF_FRAMEWORK', false)\nelse\n        clang_found = false\n        clang_supports_bpf = false\n        bpf_gcc_found = false\n        bpftool_strip = false\n        deps_found = false\n\n        if bpf_compiler == 'clang'\n                # Support 'versioned' clang/llvm-strip binaries, as seen on Debian/Ubuntu\n                # (like clang-10/llvm-strip-10)\n                if meson.is_cross_build() or cc.get_id() != 'clang' or cc.cmd_array()[0].contains('afl-clang') or cc.cmd_array()[0].contains('hfuzz-clang')\n                        r = find_program('clang',\n                                         required : bpf_framework,\n                                         version : '>= 10.0.0')\n                        clang_found = r.found()\n                        if clang_found\n                                clang = r.full_path()\n                        endif\n                else\n                        clang_found = true\n                        clang = cc.cmd_array()\n                endif\n\n                if clang_found\n                        # Check if 'clang -target bpf' is supported.\n                        clang_supports_bpf = run_command(clang, '-target', 'bpf', '--print-supported-cpus', check : false).returncode() == 0\n                endif\n                if bpf_framework.enabled() and not clang_supports_bpf\n                        error('bpf-framework was enabled but clang does not support bpf')\n                endif\n        elif bpf_compiler == 'gcc'\n                bpf_gcc = find_program('bpf-gcc',\n                                       'bpf-none-gcc',\n                                       'bpf-unknown-none-gcc',\n                                       required : true,\n                                       version : '>= 13.1.0')\n                bpf_gcc_found = bpf_gcc.found()\n        endif\n\n        if clang_supports_bpf or bpf_gcc_found\n                # Debian installs this in /usr/sbin/ which is not in $PATH.\n                # We check for 'bpftool' first, honouring $PATH, and in /usr/sbin/ for Debian.\n                # We use 'bpftool gen object' subcommand for bpftool strip, it was added by d80b2fcbe0a023619e0fc73112f2a02c2662f6ab (v5.13).\n                bpftool = find_program('bpftool',\n                                       '/usr/sbin/bpftool',\n                                       required : bpf_framework.enabled() and bpf_compiler == 'gcc',\n                                       version : bpf_compiler == 'gcc' ? '>= 7.0.0' : '>= 5.13.0')\n\n                if bpftool.found()\n                        bpftool_strip = true\n                        deps_found = true\n                elif bpf_compiler == 'clang'\n                        # We require the 'bpftool gen skeleton' subcommand, it was added by 985ead416df39d6fe8e89580cc1db6aa273e0175 (v5.6).\n                        bpftool = find_program('bpftool',\n                                               '/usr/sbin/bpftool',\n                                               required : bpf_framework,\n                                               version : '>= 5.6.0')\n                endif\n\n                # We use `llvm-strip` as a fallback if `bpftool gen object` strip support is not available.\n                if not bpftool_strip and bpftool.found() and clang_supports_bpf\n                        if not meson.is_cross_build()\n                                llvm_strip_bin = run_command(clang, '--print-prog-name', 'llvm-strip',\n                                                             check : true).stdout().strip()\n                        else\n                                llvm_strip_bin = 'llvm-strip'\n                        endif\n                        llvm_strip = find_program(llvm_strip_bin,\n                                                  required : bpf_framework,\n                                                  version : '>= 10.0.0')\n                        deps_found = llvm_strip.found()\n                endif\n        endif\n\n        # Can build BPF program from source code in restricted C\n        conf.set10('BPF_FRAMEWORK', deps_found)\nendif\n\nlibmount = dependency('mount',\n                      version : fuzzer_build ? '>= 0' : '>= 2.30')\n\nlibfdisk = dependency('fdisk',\n                      version : '>= 2.32',\n                      disabler : true,\n                      required : get_option('fdisk'))\nconf.set10('HAVE_LIBFDISK', libfdisk.found())\n\n# This prefers pwquality if both are enabled or auto.\nfeature = get_option('pwquality').disable_auto_if(get_option('passwdqc').enabled())\nlibpwquality = dependency('pwquality',\n                          version : '>= 1.4.1',\n                          required : feature)\nhave = libpwquality.found()\nif not have\n        # libpwquality is used for both features for simplicity\n        libpwquality = dependency('passwdqc',\n                                  required : get_option('passwdqc'))\nendif\nconf.set10('HAVE_PWQUALITY', have)\nconf.set10('HAVE_PASSWDQC', not have and libpwquality.found())\n\nlibseccomp = dependency('libseccomp',\n                        version : '>= 2.3.1',\n                        required : get_option('seccomp'))\nconf.set10('HAVE_SECCOMP', libseccomp.found())\n\nlibselinux = dependency('libselinux',\n                        version : '>= 2.1.9',\n                        required : get_option('selinux'))\nconf.set10('HAVE_SELINUX', libselinux.found())\n\nlibapparmor = dependency('libapparmor',\n                         version : '>= 2.13',\n                         required : get_option('apparmor'))\nconf.set10('HAVE_APPARMOR', libapparmor.found())\n\nhave = get_option('smack') and get_option('smack-run-label') != ''\nconf.set10('HAVE_SMACK_RUN_LABEL', have)\nif have\n        conf.set_quoted('SMACK_RUN_LABEL', get_option('smack-run-label'))\nendif\n\nhave = get_option('smack') and get_option('smack-default-process-label') != ''\nif have\n        conf.set_quoted('SMACK_DEFAULT_PROCESS_LABEL', get_option('smack-default-process-label'))\nendif\n\nfeature = get_option('polkit')\nlibpolkit = dependency('polkit-gobject-1',\n                       required : feature.disabled() ? feature : false)\ninstall_polkit = feature.allowed()\ninstall_polkit_pkla = libpolkit.found() and libpolkit.version().version_compare('< 0.106')\nif install_polkit_pkla\n        message('Old polkit detected, will install pkla files')\nendif\nconf.set10('ENABLE_POLKIT', install_polkit)\n\nlibacl = dependency('libacl',\n                    required : get_option('acl'))\nconf.set10('HAVE_ACL', libacl.found())\n\nlibaudit = dependency('audit',\n                      required : get_option('audit'))\nconf.set10('HAVE_AUDIT', libaudit.found())\n\nlibblkid = dependency('blkid',\n                      required : get_option('blkid'))\nconf.set10('HAVE_BLKID', libblkid.found())\nconf.set10('HAVE_BLKID_PROBE_SET_HINT',\n           libblkid.found() and cc.has_function('blkid_probe_set_hint', dependencies : libblkid))\n\nlibkmod = dependency('libkmod',\n                     version : '>= 15',\n                     required : get_option('kmod'))\nconf.set10('HAVE_KMOD', libkmod.found())\nlibkmod_cflags = libkmod.partial_dependency(includes: true, compile_args: true)\n\nlibxenctrl = dependency('xencontrol',\n                        version : '>= 4.9',\n                        required : get_option('xenctrl'))\nconf.set10('HAVE_XENCTRL', libxenctrl.found())\nlibxenctrl_cflags = libxenctrl.partial_dependency(includes: true, compile_args: true)\n\nfeature = get_option('pam')\nlibpam = dependency('pam',\n                    required : feature.disabled() ? feature : false)\nif not libpam.found()\n        # Debian older than bookworm and Ubuntu older than 22.10 do not provide the .pc file.\n        libpam = cc.find_library('pam', required : feature)\nendif\nlibpam_misc = dependency('pam_misc',\n                         required : feature.disabled() ? feature : false)\nif not libpam_misc.found()\n        libpam_misc = cc.find_library('pam_misc', required : feature)\nendif\nconf.set10('HAVE_PAM', libpam.found() and libpam_misc.found())\n\nlibmicrohttpd = dependency('libmicrohttpd',\n                           version : '>= 0.9.33',\n                           required : get_option('microhttpd'))\nconf.set10('HAVE_MICROHTTPD', libmicrohttpd.found())\n\nlibcryptsetup = get_option('libcryptsetup')\nlibcryptsetup_plugins = get_option('libcryptsetup-plugins')\nif libcryptsetup_plugins.enabled()\n        if libcryptsetup.disabled()\n                error('libcryptsetup-plugins cannot be requested without libcryptsetup')\n        endif\n        libcryptsetup = libcryptsetup_plugins\nendif\n\nlibcryptsetup = dependency('libcryptsetup',\n                           version : libcryptsetup_plugins.enabled() ? '>= 2.4.0' : '>= 2.0.1',\n                           required : libcryptsetup)\n\nhave = libcryptsetup.found()\nforeach ident : ['crypt_set_metadata_size',\n                 'crypt_activate_by_signed_key',\n                 'crypt_token_max',\n                 'crypt_reencrypt_init_by_passphrase',\n                 'crypt_reencrypt',\n                 'crypt_reencrypt_run',\n                 'crypt_set_data_offset',\n                 'crypt_set_keyring_to_link',\n                 'crypt_resume_by_volume_key',\n                 'crypt_token_set_external_path']\n        have_ident = have and cc.has_function(\n                ident,\n                prefix : '#include <libcryptsetup.h>',\n                # crypt_reencrypt() raises a deprecation warning so make sure -Wno-deprecated-declarations is\n                # specified otherwise we fail to detect crypt_reencrypt() if -Werror is used.\n                args : '-Wno-deprecated-declarations',\n                dependencies : libcryptsetup)\n        conf.set10('HAVE_' + ident.to_upper(), have_ident)\nendforeach\nconf.set10('HAVE_LIBCRYPTSETUP', have)\n\n# TODO: Use has_function(required : libcryptsetup_plugins) with meson >= 1.3.0\nif libcryptsetup_plugins.allowed()\n        have = (cc.has_function(\n                        'crypt_activate_by_token_pin',\n                        prefix : '#include <libcryptsetup.h>',\n                        dependencies : libcryptsetup) and\n                cc.has_function(\n                        'crypt_token_external_path',\n                        prefix : '#include <libcryptsetup.h>',\n                        dependencies : libcryptsetup))\nelse\n        have = false\nendif\nconf.set10('HAVE_LIBCRYPTSETUP_PLUGINS', have)\n\nlibcurl = dependency('libcurl',\n                     version : '>= 7.32.0',\n                     required : get_option('libcurl'))\nconf.set10('HAVE_LIBCURL', libcurl.found())\nconf.set10('CURL_NO_OLDIES', conf.get('BUILD_MODE_DEVELOPER') == 1)\n\nfeature = get_option('libidn2').disable_auto_if(get_option('libidn').enabled())\nlibidn = dependency('libidn2',\n                    required : feature)\nhave = libidn.found()\nif not have\n        # libidn is used for both libidn and libidn2 objects\n        libidn = dependency('libidn',\n                            required : get_option('libidn'))\nendif\nconf.set10('HAVE_LIBIDN', not have and libidn.found())\nconf.set10('HAVE_LIBIDN2', have)\n\nlibiptc = dependency('libiptc',\n                     required : get_option('libiptc'))\nconf.set10('HAVE_LIBIPTC', libiptc.found())\nlibiptc_cflags = libiptc.partial_dependency(includes: true, compile_args: true)\n\nlibqrencode = dependency('libqrencode',\n                         version : '>= 3',\n                         required : get_option('qrencode'))\nconf.set10('HAVE_QRENCODE', libqrencode.found())\n\nfeature = get_option('gcrypt')\nlibgcrypt = dependency('libgcrypt',\n                       required : feature)\nlibgpg_error = dependency('gpg-error',\n                          required : feature.disabled() ? feature : false)\n\nhave = libgcrypt.found() and libgpg_error.found()\nif not have\n        # link to neither of the libs if one is not found\n        libgcrypt = []\n        libgpg_error = []\n        libgcrypt_cflags = []\nelse\n        libgcrypt_cflags = libgcrypt.partial_dependency(includes: true, compile_args: true)\nendif\nconf.set10('HAVE_GCRYPT', have)\n\nlibgnutls = dependency('gnutls',\n                       version : '>= 3.1.4',\n                       required : get_option('gnutls'))\nconf.set10('HAVE_GNUTLS', libgnutls.found())\n\nlibopenssl = dependency('openssl',\n                        version : '>= 1.1.0',\n                        required : get_option('openssl'))\nconf.set10('HAVE_OPENSSL', libopenssl.found())\n\nlibp11kit = dependency('p11-kit-1',\n                       version : '>= 0.23.3',\n                       required : get_option('p11kit'))\nconf.set10('HAVE_P11KIT', libp11kit.found())\nlibp11kit_cflags = libp11kit.partial_dependency(includes: true, compile_args: true)\n\nfeature = get_option('libfido2').require(\n        conf.get('HAVE_OPENSSL') == 1,\n        error_message : 'openssl required')\nlibfido2 = dependency('libfido2',\n                      required : feature)\nconf.set10('HAVE_LIBFIDO2', libfido2.found())\n\ntpm2 = dependency('tss2-esys tss2-rc tss2-mu tss2-tcti-device',\n                  required : get_option('tpm2'))\nconf.set10('HAVE_TPM2', tpm2.found())\nconf.set10('HAVE_TSS2_ESYS3', tpm2.found() and tpm2.version().version_compare('>= 3.0.0'))\n\nlibdw = dependency('libdw',\n                   required : get_option('elfutils'))\nconf.set10('HAVE_ELFUTILS', libdw.found())\n# New in elfutils 0.177\nconf.set10('HAVE_DWELF_ELF_E_MACHINE_STRING',\n           libdw.found() and cc.has_function('dwelf_elf_e_machine_string', dependencies : libdw))\n\n# New in elfutils 0.192\nconf.set10('HAVE_DWFL_SET_SYSROOT',\n           libdw.found() and cc.has_function('dwfl_set_sysroot', dependencies : libdw))\n\nlibz = dependency('zlib',\n                  required : get_option('zlib'))\nconf.set10('HAVE_ZLIB', libz.found())\n\nfeature = get_option('bzip2')\nlibbzip2 = dependency('bzip2',\n                      required : feature.disabled() ? feature : false)\nif not libbzip2.found()\n        # Debian and Ubuntu do not provide the .pc file.\n        libbzip2 = cc.find_library('bz2', required : feature)\nendif\nconf.set10('HAVE_BZIP2', libbzip2.found())\n\nlibxz = dependency('liblzma',\n                   required : get_option('xz'))\nconf.set10('HAVE_XZ', libxz.found())\nlibxz_cflags = libxz.partial_dependency(includes: true, compile_args: true)\n\nliblz4 = dependency('liblz4',\n                    version : '>= 1.3.0',\n                    required : get_option('lz4'))\nconf.set10('HAVE_LZ4', liblz4.found())\nliblz4_cflags = liblz4.partial_dependency(includes: true, compile_args: true)\n\nlibzstd = dependency('libzstd',\n                     version : '>= 1.4.0',\n                     required : get_option('zstd'))\nconf.set10('HAVE_ZSTD', libzstd.found())\nlibzstd_cflags = libzstd.partial_dependency(includes: true, compile_args: true)\n\nconf.set10('HAVE_COMPRESSION', libxz.found() or liblz4.found() or libzstd.found())\n\ncompression = get_option('default-compression')\nif compression == 'auto'\n        if libzstd.found()\n                compression = 'zstd'\n        elif liblz4.found()\n                compression = 'lz4'\n        elif libxz.found()\n                compression = 'xz'\n        else\n                compression = 'none'\n        endif\nelif compression == 'zstd' and not libzstd.found()\n        error('default-compression=zstd requires zstd')\nelif compression == 'lz4' and not liblz4.found()\n        error('default-compression=lz4 requires lz4')\nelif compression == 'xz' and not libxz.found()\n        error('default-compression=xz requires xz')\nendif\n# In the dlopen ELF note we save the default compression library with a\n# higher priority, so that packages can give it priority over the\n# secondary libraries.\nconf.set_quoted('COMPRESSION_PRIORITY_ZSTD',\n                compression == 'zstd' ? 'recommended' : 'suggested')\nconf.set_quoted('COMPRESSION_PRIORITY_LZ4',\n                compression == 'lz4' ? 'recommended' : 'suggested')\nconf.set_quoted('COMPRESSION_PRIORITY_XZ',\n                compression == 'xz' ? 'recommended' : 'suggested')\nconf.set('DEFAULT_COMPRESSION', 'COMPRESSION_@0@'.format(compression.to_upper()))\n\nlibarchive = dependency('libarchive',\n                        version : '>= 3.0',\n                        required : get_option('libarchive'))\nconf.set10('HAVE_LIBARCHIVE', libarchive.found())\n\nlibxkbcommon = dependency('xkbcommon',\n                          version : '>= 0.3.0',\n                          required : get_option('xkbcommon'))\nconf.set10('HAVE_XKBCOMMON', libxkbcommon.found())\n\nlibpcre2 = dependency('libpcre2-8',\n                      required : get_option('pcre2'))\nconf.set10('HAVE_PCRE2', libpcre2.found())\n\nlibglib =    dependency('glib-2.0',\n                        version : '>= 2.22.0',\n                        required : get_option('glib'))\nlibgobject = dependency('gobject-2.0',\n                        version : '>= 2.22.0',\n                        required : get_option('glib'))\nlibgio =     dependency('gio-2.0',\n                        required : get_option('glib'))\nconf.set10('HAVE_GLIB', libglib.found() and libgobject.found() and libgio.found())\n\nlibdbus = dependency('dbus-1',\n                     version : '>= 1.3.2',\n                     required : get_option('dbus'))\nconf.set10('HAVE_DBUS', libdbus.found())\n\ndbusdatadir = libdbus.get_variable(pkgconfig: 'datadir', default_value: datadir) / 'dbus-1'\n\ndbuspolicydir = get_option('dbuspolicydir')\nif dbuspolicydir == ''\n        dbuspolicydir = dbusdatadir / 'system.d'\nendif\n\ndbussessionservicedir = get_option('dbussessionservicedir')\nif dbussessionservicedir == ''\n        dbussessionservicedir = libdbus.get_variable(pkgconfig: 'session_bus_services_dir', default_value: dbusdatadir / 'services')\nendif\n\ndbussystemservicedir = get_option('dbussystemservicedir')\nif dbussystemservicedir == ''\n        dbussystemservicedir = libdbus.get_variable(pkgconfig: 'system_bus_services_dir', default_value: dbusdatadir / 'system-services')\nendif\n\ndbus_interfaces_dir = get_option('dbus-interfaces-dir')\nif dbus_interfaces_dir == '' or dbus_interfaces_dir == 'yes'\n        if meson.is_cross_build() and dbus_interfaces_dir != 'yes'\n                dbus_interfaces_dir = 'no'\n                warning('Exporting D-Bus interface XML files is disabled during cross build. Pass path or \"yes\" to force enable.')\n        else\n                dbus_interfaces_dir = libdbus.get_variable(pkgconfig: 'interfaces_dir', default_value: dbusdatadir / 'interfaces')\n        endif\nendif\n\ndmi_arches = ['x86', 'x86_64', 'aarch64', 'arm', 'ia64', 'loongarch64', 'mips', 'riscv64']\nconf.set10('HAVE_DMI', host_machine.cpu_family() in dmi_arches)\n\n# We support one or the other. If gcrypt is available, we assume it's there to\n# be used, and use it in preference.\nopt = get_option('cryptolib')\nif opt == 'openssl' and conf.get('HAVE_OPENSSL') == 0\n        error('openssl requested as the default cryptolib, but not available')\nendif\nconf.set10('PREFER_OPENSSL',\n           opt == 'openssl' or (opt == 'auto' and conf.get('HAVE_OPENSSL') == 1 and conf.get('HAVE_GCRYPT') == 0))\nconf.set10('HAVE_OPENSSL_OR_GCRYPT',\n           conf.get('HAVE_OPENSSL') == 1 or conf.get('HAVE_GCRYPT') == 1)\nlib_openssl_or_gcrypt = conf.get('PREFER_OPENSSL') == 1 ? [libopenssl] : [libgcrypt, libgpg_error]\n\ndns_over_tls = get_option('dns-over-tls')\nif dns_over_tls != 'false'\n        if dns_over_tls == 'gnutls' and conf.get('PREFER_OPENSSL') == 1\n                error('Sorry, -Ddns-over-tls=gnutls is not supported when openssl is used as the cryptolib')\n        endif\n\n        if dns_over_tls == 'gnutls'\n                have_openssl = false\n        else\n                have_openssl = conf.get('HAVE_OPENSSL') == 1\n                if dns_over_tls == 'openssl' and not have_openssl\n                        error('DNS-over-TLS support was requested with openssl, but dependencies are not available')\n                endif\n        endif\n        if dns_over_tls == 'openssl' or have_openssl\n                have_gnutls = false\n        else\n                have_gnutls = conf.get('HAVE_GNUTLS') == 1 and libgnutls.version().version_compare('>= 3.6.0')\n                if dns_over_tls != 'auto' and not have_gnutls\n                        str = dns_over_tls == 'gnutls' ? ' with gnutls' : ''\n                        error('DNS-over-TLS support was requested@0@, but dependencies are not available'.format(str))\n                endif\n        endif\n        have = have_gnutls or have_openssl\nelse\n        have = false\n        have_gnutls = false\n        have_openssl = false\nendif\nconf.set10('ENABLE_DNS_OVER_TLS', have)\nconf.set10('DNS_OVER_TLS_USE_GNUTLS', have_gnutls)\nconf.set10('DNS_OVER_TLS_USE_OPENSSL', have_openssl)\n\ndefault_dns_over_tls = get_option('default-dns-over-tls')\nif default_dns_over_tls != 'no' and conf.get('ENABLE_DNS_OVER_TLS') == 0\n        message('default-dns-over-tls cannot be enabled or set to opportunistic when DNS-over-TLS support is disabled. Setting default-dns-over-tls to no.')\n        default_dns_over_tls = 'no'\nendif\nconf.set('DEFAULT_DNS_OVER_TLS_MODE',\n         'DNS_OVER_TLS_' + default_dns_over_tls.underscorify().to_upper())\nconf.set_quoted('DEFAULT_DNS_OVER_TLS_MODE_STR', default_dns_over_tls)\n\ndefault_mdns = get_option('default-mdns')\nconf.set('DEFAULT_MDNS_MODE',\n         'RESOLVE_SUPPORT_' + default_mdns.to_upper())\nconf.set_quoted('DEFAULT_MDNS_MODE_STR', default_mdns)\n\ndefault_llmnr = get_option('default-llmnr')\nconf.set('DEFAULT_LLMNR_MODE',\n         'RESOLVE_SUPPORT_' + default_llmnr.to_upper())\nconf.set_quoted('DEFAULT_LLMNR_MODE_STR', default_llmnr)\n\nhave = get_option('repart').require(\n        conf.get('HAVE_LIBFDISK') == 1,\n        error_message : 'fdisk required').allowed()\nconf.set10('ENABLE_REPART', have)\n\ndefault_dnssec = get_option('default-dnssec')\nif default_dnssec != 'no' and conf.get('HAVE_OPENSSL_OR_GCRYPT') == 0\n        message('default-dnssec cannot be set to yes or allow-downgrade openssl and gcrypt are disabled. Setting default-dnssec to no.')\n        default_dnssec = 'no'\nendif\nconf.set('DEFAULT_DNSSEC_MODE',\n         'DNSSEC_' + default_dnssec.underscorify().to_upper())\nconf.set_quoted('DEFAULT_DNSSEC_MODE_STR', default_dnssec)\n\nhave = get_option('sysupdate').require(\n        conf.get('HAVE_OPENSSL') == 1 and\n        conf.get('HAVE_LIBFDISK') == 1,\n        error_message : 'fdisk and openssl required').allowed()\nconf.set10('ENABLE_SYSUPDATE', have)\n\nhave2 = get_option('sysupdated')\nif have2 == 'enabled'\n        if have\n                have2 = true\n        else\n                error('sysupdated requires sysupdate to be enabled')\n        endif\nelif have2 == 'auto'\n        have2 = have and conf.get('BUILD_MODE_DEVELOPER') == 1\nelse\n        have2 = false\nendif\nconf.set10('ENABLE_SYSUPDATED', have2)\n\nconf.set10('ENABLE_STORAGETM', get_option('storagetm'))\n\nhave = get_option('importd').require(\n        conf.get('HAVE_LIBCURL') == 1 and\n        conf.get('HAVE_OPENSSL_OR_GCRYPT') == 1 and\n        conf.get('HAVE_ZLIB') == 1 and\n        conf.get('HAVE_XZ') == 1,\n        error_message : 'curl, openssl/grypt, zlib and xz required').allowed()\nconf.set10('ENABLE_IMPORTD', have)\n\nhave = get_option('homed').require(\n        conf.get('HAVE_OPENSSL') == 1 and\n        conf.get('HAVE_LIBFDISK') == 1 and\n        conf.get('HAVE_LIBCRYPTSETUP') == 1 and\n        conf.get('HAVE_CRYPT_RESUME_BY_VOLUME_KEY') == 1,\n        error_message : 'openssl, fdisk and libcryptsetup required').allowed()\nconf.set10('ENABLE_HOMED', have)\n\nhave = have and conf.get('HAVE_PAM') == 1\nconf.set10('ENABLE_PAM_HOME', have)\n\nfeature = get_option('remote')\nhave_deps = [conf.get('HAVE_MICROHTTPD') == 1,\n             conf.get('HAVE_LIBCURL') == 1]\n# sd-j-remote requires ¬µhttpd, and sd-j-upload requires libcurl, so\n# it's possible to build one without the other. Complain only if\n# support was explicitly requested. The auxiliary files like sysusers\n# config should be installed when any of the programs are built.\nif feature.enabled() and not (have_deps[0] and have_deps[1])\n        error('remote support was requested, but dependencies are not available')\nendif\nhave = feature.allowed() and (have_deps[0] or have_deps[1])\nconf.set10('ENABLE_REMOTE', have)\n\nfeature = get_option('vmspawn').disable_auto_if(conf.get('BUILD_MODE_DEVELOPER') == 0)\nconf.set10('ENABLE_VMSPAWN', feature.allowed())\n\nconf.set10('DEFAULT_MOUNTFSD_TRUSTED_DIRECTORIES', get_option('default-mountfsd-trusted-directories'))\n\nforeach term : ['analyze',\n                'backlight',\n                'binfmt',\n                'compat-mutable-uid-boundaries',\n                'coredump',\n                'efi',\n                'environment-d',\n                'firstboot',\n                'gshadow',\n                'hibernate',\n                'hostnamed',\n                'hwdb',\n                'idn',\n                'ima',\n                'ipe',\n                'initrd',\n                'kernel-install',\n                'ldconfig',\n                'localed',\n                'logind',\n                'machined',\n                'mountfsd',\n                'networkd',\n                'nsresourced',\n                'nss-myhostname',\n                'nss-systemd',\n                'oomd',\n                'portabled',\n                'pstore',\n                'quotacheck',\n                'randomseed',\n                'resolve',\n                'rfkill',\n                'smack',\n                'sysext',\n                'sysusers',\n                'timedated',\n                'timesyncd',\n                'tmpfiles',\n                'tpm',\n                'userdb',\n                'utmp',\n                'vconsole',\n                'xdg-autostart']\n        have = get_option(term)\n        name = 'ENABLE_' + term.underscorify().to_upper()\n        conf.set10(name, have)\nendforeach\n\nenable_sysusers = conf.get('ENABLE_SYSUSERS') == 1\n\nforeach tuple : [['nss-mymachines', 'machined'],\n                 ['nss-resolve',    'resolve']]\n        want = get_option(tuple[0])\n        if want.allowed()\n                have = get_option(tuple[1])\n                if want.enabled() and not have\n                        error('@0@ is requested but @1@ is disabled'.format(tuple[0], tuple[1]))\n                endif\n        else\n                have = false\n        endif\n        name = 'ENABLE_' + tuple[0].underscorify().to_upper()\n        conf.set10(name, have)\nendforeach\n\nenable_nss = false\nforeach term : ['ENABLE_NSS_MYHOSTNAME',\n                'ENABLE_NSS_MYMACHINES',\n                'ENABLE_NSS_RESOLVE',\n                'ENABLE_NSS_SYSTEMD']\n        if conf.get(term) == 1\n                enable_nss = true\n        endif\nendforeach\nconf.set10('ENABLE_NSS', enable_nss)\n\nconf.set10('ENABLE_TIMEDATECTL', get_option('timedated') or get_option('timesyncd'))\n\nconf.set10('ENABLE_SSH_PROXY_CONFIG', sshconfdir != 'no')\nconf.set10('ENABLE_SSH_USERDB_CONFIG', conf.get('ENABLE_USERDB') == 1 and sshdconfdir != 'no')\n\nconf.set10('SYSTEMD_SLOW_TESTS_DEFAULT', want_slow_tests)\n\n#####################################################################\n\npymod = import('python')\npython = pymod.find_installation('python3', required : true, modules : ['jinja2'])\npython_39 = python.language_version().version_compare('>=3.9')\n\n#####################################################################\n\nif conf.get('BPF_FRAMEWORK') == 1\n        bpf_clang_flags = [\n                '-std=gnu11',\n                '-Wno-compare-distinct-pointer-types',\n                '-fno-stack-protector',\n                '-O2',\n                '-target',\n                'bpf',\n                '-g',\n                '-c',\n        ]\n\n        bpf_gcc_flags = [\n                '-std=gnu11',\n                '-fno-stack-protector',\n                '-fno-ssa-phiopt',\n                '-O2',\n                '-mcpu=v3',\n                '-mco-re',\n                '-gbtf',\n                '-c',\n        ]\n\n        # If c_args contains these flags copy them along with the values, in order to avoid breaking\n        # reproducible builds and other functionality\n        propagate_cflags = [\n                '-ffile-prefix-map=',\n                '-fdebug-prefix-map=',\n                '-fmacro-prefix-map=',\n                '--sysroot=',\n        ]\n\n        foreach opt : c_args\n                foreach flag : propagate_cflags\n                        if opt.startswith(flag)\n                                bpf_clang_flags += [opt]\n                                bpf_gcc_flags += [opt]\n                                break\n                        endif\n                endforeach\n        endforeach\n\n        # Generate defines that are appropriate to tell the compiler what architecture\n        # we're compiling for. By default we just map meson's cpu_family to __<cpu_family>__.\n        # This dictionary contains the exceptions where this doesn't work.\n        #\n        # C.f. https://mesonbuild.com/Reference-tables.html#cpu-families\n        # and src/basic/missing_syscall_def.h.\n        cpu_arch_defines = {\n                'ppc'         : ['-D__powerpc__', '-D__TARGET_ARCH_powerpc'],\n                'ppc64'       : ['-D__powerpc64__', '-D__TARGET_ARCH_powerpc', '-D_CALL_ELF=2'],\n                'riscv32'     : ['-D__riscv', '-D__riscv_xlen=32', '-D__TARGET_ARCH_riscv'],\n                'riscv64'     : ['-D__riscv', '-D__riscv_xlen=64', '-D__TARGET_ARCH_riscv'],\n                'x86'         : ['-D__i386__', '-D__TARGET_ARCH_x86'],\n                's390x'       : ['-D__s390__', '-D__s390x__', '-D__TARGET_ARCH_s390'],\n\n                # For arm, assume hardware fp is available.\n                'arm'         : ['-D__arm__', '-D__ARM_PCS_VFP', '-D__TARGET_ARCH_arm'],\n                'loongarch64' : ['-D__loongarch__', '-D__loongarch_grlen=64', '-D__TARGET_ARCH_loongarch']\n        }\n\n        bpf_arch_flags = cpu_arch_defines.get(host_machine.cpu_family(),\n                                              ['-D__@0@__'.format(host_machine.cpu_family())])\n        if bpf_compiler == 'gcc'\n                bpf_arch_flags += ['-m' + host_machine.endian() + '-endian']\n        endif\n\n        libbpf_include_dir = libbpf.get_variable(pkgconfig : 'includedir')\n\n        bpf_o_unstripped_cmd = []\n        if bpf_compiler == 'clang'\n                bpf_o_unstripped_cmd += [\n                        clang,\n                        bpf_clang_flags,\n                        bpf_arch_flags,\n                ]\n        elif bpf_compiler == 'gcc'\n                bpf_o_unstripped_cmd += [\n                        bpf_gcc,\n                        bpf_gcc_flags,\n                        bpf_arch_flags,\n                ]\n        endif\n\n        bpf_o_unstripped_cmd += ['-I.']\n\n        if cc.get_id() == 'gcc' or meson.is_cross_build()\n                if cc.get_id() != 'gcc'\n                        warning('Cross compiler is not gcc. Guessing the target triplet for bpf likely fails.')\n                endif\n                target_triplet_cmd = run_command(cc.cmd_array(), '-print-multiarch', check: false)\n        else\n                # clang does not support -print-multiarch (D133170) and its -dump-machine\n                # does not match multiarch. Query gcc instead.\n                target_triplet_cmd = run_command('gcc', '-print-multiarch', check: false)\n        endif\n        if target_triplet_cmd.returncode() == 0\n                target_triplet = target_triplet_cmd.stdout().strip()\n                bpf_o_unstripped_cmd += [\n                        '-isystem',\n                        '/usr/include/@0@'.format(target_triplet)\n                ]\n        endif\n\n        bpf_o_unstripped_cmd += [\n                '-idirafter',\n                libbpf_include_dir,\n                '@INPUT@',\n                '-o',\n                '@OUTPUT@'\n        ]\n\n        if bpftool_strip\n                bpf_o_cmd = [\n                        bpftool,\n                        'gen',\n                        'object',\n                        '@OUTPUT@',\n                        '@INPUT@'\n                ]\n        elif bpf_compiler == 'clang'\n                bpf_o_cmd = [\n                        llvm_strip,\n                        '-g',\n                        '@INPUT@',\n                        '-o',\n                        '@OUTPUT@'\n                ]\n        endif\n\n        skel_h_cmd = [\n                bpftool,\n                'gen',\n                'skeleton',\n                '@INPUT@'\n        ]\nendif\n\n#####################################################################\n\nefi_arch = {\n        'aarch64'     : 'aa64',\n        'arm'         : 'arm',\n        'loongarch32' : 'loongarch32',\n        'loongarch64' : 'loongarch64',\n        'riscv32'     : 'riscv32',\n        'riscv64'     : 'riscv64',\n        'x86_64'      : 'x64',\n        'x86'         : 'ia32',\n}.get(host_machine.cpu_family(), '')\n\npyelftools = pymod.find_installation('python3',\n                                     required : get_option('bootloader'),\n                                     modules : ['elftools'])\n\nhave = get_option('bootloader').require(\n        pyelftools.found() and get_option('efi') and efi_arch != '',\n        error_message : 'unsupported EFI arch or EFI support is disabled').allowed()\nconf.set10('ENABLE_BOOTLOADER', have)\nconf.set_quoted('EFI_MACHINE_TYPE_NAME', have ? efi_arch : '')\n\nefi_arch_alt = ''\nefi_cpu_family_alt = ''\nif have and efi_arch == 'x64' and cc.links('''\n                #include <limits.h>\n                int main(int argc, char *argv[]) {\n                        return __builtin_popcount(argc - CHAR_MAX);\n                }''', args : ['-m32', '-march=i686'], name : '32bit build possible')\n        efi_arch_alt = 'ia32'\n        efi_cpu_family_alt = 'x86'\nendif\n\npefile = pymod.find_installation('python3', required: false, modules : ['pefile'])\n\nwant_ukify = get_option('ukify').require(python_39 and (want_tests != 'true' or pefile.found()), error_message : 'Python >= 3.9 and pefile required').allowed()\nconf.set10('ENABLE_UKIFY', want_ukify)\n\n#####################################################################\n\ncheck_efi_alignment_py = find_program('tools/check-efi-alignment.py')\n\n#####################################################################\n\nuse_provided_vmlinux_h = false\nuse_generated_vmlinux_h = false\nprovided_vmlinux_h_path = get_option('vmlinux-h-path')\n\n# For the more complex BPF programs we really want a vmlinux.h (which is arch\n# specific, but only somewhat bound to kernel version). Ideally the kernel\n# development headers would ship that, but right now they don't. Hence address\n# this in two ways:\n#\n# 1. Provide a vmlinux.h at build time\n# 2. Generate the file on the fly where possible (which requires /sys/ to be mounted)\n#\n# We generally prefer the former (to support reproducible builds), but will\n# fallback to the latter.\n\nif conf.get('BPF_FRAMEWORK') == 1\n        enable_vmlinux_h = get_option('vmlinux-h')\n\n        if enable_vmlinux_h == 'auto'\n                if provided_vmlinux_h_path != ''\n                        use_provided_vmlinux_h = true\n                elif fs.exists('/sys/kernel/btf/vmlinux') and \\\n                                bpftool.found() and \\\n                                (host_machine.cpu_family() == build_machine.cpu_family()) and \\\n                                host_machine.cpu_family() in ['x86_64', 'aarch64']\n\n                        # We will only generate a vmlinux.h from the running\n                        # kernel if the host and build machine are of the same\n                        # family. Also for now we focus on x86_64 and aarch64,\n                        # since other archs don't seem to be ready yet.\n\n                        use_generated_vmlinux_h = true\n                endif\n        elif enable_vmlinux_h == 'provided'\n                use_provided_vmlinux_h = true\n        elif enable_vmlinux_h == 'generated'\n                if not fs.exists('/sys/kernel/btf/vmlinux')\n                        error('BTF data from kernel not available (/sys/kernel/btf/vmlinux missing), cannot generate vmlinux.h, but was asked to.')\n                endif\n                if not bpftool.found()\n                        error('bpftool not available, cannot generate vmlinux.h, but was asked to.')\n                endif\n                use_generated_vmlinux_h = true\n        endif\nendif\n\nif use_provided_vmlinux_h\n        if not fs.exists(provided_vmlinux_h_path)\n                error('Path to provided vmlinux.h does not exist.')\n        endif\n        vmlinux_h_dependency = []\n        bpf_o_unstripped_cmd += ['-I' + fs.parent(provided_vmlinux_h_path)]\n        message('Using provided @0@'.format(provided_vmlinux_h_path))\nelif use_generated_vmlinux_h\n        vmlinux_h_dependency = custom_target(\n                'vmlinux.h',\n                output: 'vmlinux.h',\n                command : [ bpftool, 'btf', 'dump', 'file', '/sys/kernel/btf/vmlinux', 'format', 'c' ],\n                capture : true)\n\n        bpf_o_unstripped_cmd += ['-I' + fs.parent(vmlinux_h_dependency.full_path())]\n        message('Using generated @0@'.format(vmlinux_h_dependency.full_path()))\nelse\n        message('Using neither provided nor generated vmlinux.h, some features will not be available.')\nendif\n\nconf.set10('HAVE_VMLINUX_H', use_provided_vmlinux_h or use_generated_vmlinux_h)\n\n#####################################################################\n\ncheck_version_history_py = find_program('tools/check-version-history.py')\nelf2efi_py = find_program('tools/elf2efi.py')\nexport_dbus_interfaces_py = find_program('tools/dbus_exporter.py')\ngenerate_gperfs = find_program('tools/generate-gperfs.py')\nmake_autosuspend_rules_py = find_program('tools/make-autosuspend-rules.py')\nmake_directive_index_py = find_program('tools/make-directive-index.py')\nsync_docs_py = find_program('tools/sync-docs.py')\nmake_man_index_py = find_program('tools/make-man-index.py')\nmeson_render_jinja2 = find_program('tools/meson-render-jinja2.py')\nupdate_dbus_docs_py = find_program('tools/update-dbus-docs.py')\nupdate_hwdb_autosuspend_sh = find_program('tools/update-hwdb-autosuspend.sh')\nupdate_hwdb_sh = find_program('tools/update-hwdb.sh')\nupdate_man_rules_py = find_program('tools/update-man-rules.py')\nupdate_syscall_tables_sh = find_program('tools/update-syscall-tables.sh')\nxml_helper_py = find_program('tools/xml_helper.py')\n\n#####################################################################\n\nversion_tag = get_option('version-tag')\nif version_tag == ''\n        version_tag = meson.project_version()\nendif\n\nconf.set_quoted('VERSION_TAG', version_tag)\n\nvcs_tag = get_option('vcs-tag')\nversion_h = vcs_tag(\n        input : 'src/version/version.h.in',\n        output : 'version.h',\n        fallback : '',\n        command : [vcs_tag ? 'tools/vcs-tag.sh' : 'true', get_option('mode')],\n)\n\nshared_lib_tag = get_option('shared-lib-tag')\nif shared_lib_tag == ''\n        shared_lib_tag = project_major_version\nendif\n\n#####################################################################\n\nif get_option('b_coverage')\n        userspace_c_args += ['-include', 'src/basic/coverage.h']\nendif\n\n#####################################################################\n\nconfig_h = configure_file(\n        output : 'config.h',\n        configuration : conf)\n\nuserspace_c_args += ['-include', 'config.h']\n\njinja2_cmdline = [meson_render_jinja2, config_h]\n\nuserspace = declare_dependency(\n        compile_args : userspace_c_args,\n        link_args : userspace_c_ld_args,\n        sources : version_h,\n)\n\nman_page_depends = []\n\n#####################################################################\n\nsimple_tests = []\nlibsystemd_tests = []\nsimple_fuzzers = []\ncatalogs = []\nmodules = [] # nss, pam, and other plugins\nexecutables = []\nexecutables_by_name = {}\nfuzzer_exes = []\n\n# binaries that have --help and are intended for use by humans,\n# usually, but not always, installed in /bin.\npublic_programs = []\n\n# D-Bus introspection XML export\ndbus_programs = []\n\n# A list of boot stubs. Required for testing of ukify.\nboot_stubs = []\n\nbuild_dir_include = include_directories('.')\n\nbasic_includes = include_directories(\n        'src/basic',\n        'src/fundamental',\n        'src/systemd',\n        '.')\n\nlibsystemd_includes = [basic_includes, include_directories(\n        'src/libsystemd/sd-bus',\n        'src/libsystemd/sd-device',\n        'src/libsystemd/sd-event',\n        'src/libsystemd/sd-hwdb',\n        'src/libsystemd/sd-id128',\n        'src/libsystemd/sd-journal',\n        'src/libsystemd/sd-json',\n        'src/libsystemd/sd-netlink',\n        'src/libsystemd/sd-network',\n        'src/libsystemd/sd-path',\n        'src/libsystemd/sd-resolve',\n        'src/libsystemd/sd-varlink')]\n\nincludes = [libsystemd_includes, include_directories('src/shared')]\n\nsubdir('po')\nsubdir('catalog')\nsubdir('src/fundamental')\nsubdir('src/basic')\nsubdir('src/libsystemd')\nsubdir('src/shared')\nsubdir('src/libudev')\n\nlibsystemd = shared_library(\n        'systemd',\n        version : libsystemd_version,\n        include_directories : libsystemd_includes,\n        link_args : ['-shared',\n                     # Make sure our library is never deleted from memory, so that our open logging fds don't leak on dlopen/dlclose cycles.\n                     '-z', 'nodelete',\n                     '-Wl,--version-script=' + libsystemd_sym_path],\n        link_with : [libbasic_static],\n        link_whole : [libsystemd_static],\n        dependencies : [librt,\n                        threads,\n                        userspace],\n        link_depends : libsystemd_sym,\n        install : true,\n        install_tag: 'libsystemd',\n        install_dir : libdir)\n\ninstall_libsystemd_static = static_library(\n        'systemd',\n        libsystemd_sources,\n        basic_sources,\n        fundamental_sources,\n        include_directories : libsystemd_includes,\n        build_by_default : static_libsystemd != 'false',\n        install : static_libsystemd != 'false',\n        install_tag: 'libsystemd',\n        install_dir : libdir,\n        pic : static_libsystemd_pic,\n        dependencies : [libblkid,\n                        libcap,\n                        libdl,\n                        libgcrypt_cflags,\n                        liblz4_cflags,\n                        libm,\n                        libmount,\n                        libopenssl,\n                        librt,\n                        libxz_cflags,\n                        libzstd_cflags,\n                        threads,\n                        userspace],\n        c_args : libsystemd_c_args + (static_libsystemd_pic ? [] : ['-fno-PIC']))\n\nif static_libsystemd != 'false'\n        alias_target('libsystemd', libsystemd, install_libsystemd_static)\nelse\n        alias_target('libsystemd', libsystemd)\nendif\n\nlibudev = shared_library(\n        'udev',\n        version : libudev_version,\n        include_directories : includes,\n        link_args : ['-shared',\n                     '-Wl,--version-script=' + libudev_sym_path],\n        link_with : [libsystemd_static, libshared_static],\n        link_whole : libudev_basic,\n        dependencies : [threads,\n                        userspace],\n        link_depends : libudev_sym,\n        install : true,\n        install_tag: 'libudev',\n        install_dir : libdir)\n\ninstall_libudev_static = static_library(\n        'udev',\n        basic_sources,\n        fundamental_sources,\n        shared_sources,\n        libsystemd_sources,\n        libudev_sources,\n        include_directories : includes,\n        build_by_default : static_libudev != 'false',\n        install : static_libudev != 'false',\n        install_tag: 'libudev',\n        install_dir : libdir,\n        link_depends : libudev_sym,\n        dependencies : [libmount,\n                        libshared_deps,\n                        userspace],\n        c_args : static_libudev_pic ? [] : ['-fno-PIC'],\n        pic : static_libudev_pic)\n\nif static_libudev != 'false'\n        alias_target('libudev', libudev, install_libudev_static)\nelse\n        alias_target('libudev', libudev)\nendif\n\n#####################################################################\n\nruntest_env = custom_target(\n        'systemd-runtest.env',\n        output : 'systemd-runtest.env',\n        command : [sh, '-c',\n                   '{ echo SYSTEMD_TEST_DATA=@0@; echo SYSTEMD_CATALOG_DIR=@1@; } >@OUTPUT@'.format(\n                           project_source_root / 'test',\n                           project_build_root / 'catalog')],\n        depends : catalogs,\n        build_by_default : true)\n\ntest_cflags = ['-DTEST_CODE=1']\n# We intentionally do not do inline initializations with definitions for a\n# bunch of _cleanup_ variables in tests, to ensure valgrind is triggered if we\n# use the variable unexpectedly. This triggers a lot of maybe-uninitialized\n# false positives when the combination of -O2 and -flto is used. Suppress them.\nif '-O2' in c_args and '-flto=auto' in c_args\n        test_cflags += cc.first_supported_argument('-Wno-maybe-uninitialized')\nendif\n\n#####################################################################\n\nexecutable_template = {\n        'include_directories' : includes,\n        'link_with' : libshared,\n        'install_rpath' : pkglibdir,\n        'install' : true,\n}\n\ngenerator_template = executable_template + {\n        'install_dir' : systemgeneratordir,\n}\n\nlibexec_template = executable_template + {\n        'install_dir' : libexecdir,\n}\n\nexecutable_additional_kwargs = {\n        'dependencies' : userspace,\n}\n\ntest_template = executable_template + {\n        'build_by_default' : want_tests != 'false',\n        'install' : install_tests,\n        'install_dir' : unittestsdir,\n}\n\ntest_additional_kwargs = {\n        'c_args' : test_cflags,\n        'link_depends' : runtest_env,\n}\n\nfuzz_template = executable_template + {\n        'build_by_default' : fuzzer_build,\n        'install' : false,\n}\n\nif want_ossfuzz or (want_libfuzzer and fuzzing_engine.found())\n        fuzz_additional_kwargs = {\n                'dependencies' : fuzzing_engine,\n        }\nelif want_libfuzzer and not fuzzing_engine.found()\n        fuzz_additional_kwargs = {\n                'link_args' : ['-fsanitize=fuzzer'],\n        }\nelse\n        fuzz_additional_kwargs = {\n                'sources' : files('src/fuzz/fuzz-main.c'),\n        }\nendif\nfuzz_additional_kwargs += {\n        'include_directories' : include_directories('src/fuzz'),\n        'c_args' : test_cflags,\n}\n\nnss_template = {\n        'version' : '2',\n        'include_directories' : includes,\n        # Note that we link NSS modules with '-z nodelete' so that mempools never get orphaned\n        'link_args' : ['-z', 'nodelete'],\n        'link_with' : [\n                libsystemd_static,\n                libshared_static,\n                libbasic_static,\n        ],\n        'dependencies' : [\n                librt,\n                threads,\n        ],\n        'install' : true,\n        'install_tag' : 'nss',\n        'install_dir' : libdir,\n}\n\npam_template = {\n        'name_prefix' : '',\n        'include_directories' : includes,\n        'link_with' : [\n                libsystemd_static,\n                libshared_static,\n        ],\n        'dependencies' : [\n                libpam_misc,\n                libpam,\n                threads,\n        ],\n        'install' : true,\n        'install_tag' : 'pam',\n        'install_dir' : pamlibdir,\n}\n\nmodule_additional_kwargs = {\n        'link_args' : ['-shared'],\n        'dependencies' : userspace,\n}\n\n#####################################################################\n\n# systemd-analyze requires 'libcore'\nsubdir('src/core')\n# systemd-networkd requires 'libsystemd_network'\nsubdir('src/libsystemd-network')\n# hwdb requires 'udev_link_with' and 'udev_rpath'\nsubdir('src/udev')\n\nsubdir('src/ac-power')\nsubdir('src/analyze')\nsubdir('src/ask-password')\nsubdir('src/backlight')\nsubdir('src/battery-check')\nsubdir('src/binfmt')\nsubdir('src/bless-boot')\nsubdir('src/boot')\nsubdir('src/bootctl')\nsubdir('src/busctl')\nsubdir('src/cgls')\nsubdir('src/cgroups-agent')\nsubdir('src/cgtop')\nsubdir('src/coredump')\nsubdir('src/creds')\nsubdir('src/cryptenroll')\nsubdir('src/cryptsetup')\nsubdir('src/debug-generator')\nsubdir('src/delta')\nsubdir('src/detect-virt')\nsubdir('src/dissect')\nsubdir('src/environment-d-generator')\nsubdir('src/escape')\nsubdir('src/firstboot')\nsubdir('src/fsck')\nsubdir('src/fstab-generator')\nsubdir('src/getty-generator')\nsubdir('src/gpt-auto-generator')\nsubdir('src/growfs')\nsubdir('src/hibernate-resume')\nsubdir('src/home')\nsubdir('src/hostname')\nsubdir('src/hwdb')\nsubdir('src/id128')\nsubdir('src/import')\nsubdir('src/initctl')\nsubdir('src/integritysetup')\nsubdir('src/journal')\nsubdir('src/journal-remote')\nsubdir('src/kernel-install')\nsubdir('src/keyutil')\nsubdir('src/locale')\nsubdir('src/login')\nsubdir('src/machine')\nsubdir('src/machine-id-setup')\nsubdir('src/measure')\nsubdir('src/mountfsd')\nsubdir('src/modules-load')\nsubdir('src/mount')\nsubdir('src/network')\nsubdir('src/notify')\nsubdir('src/nspawn')\nsubdir('src/nsresourced')\nsubdir('src/nss-myhostname')\nsubdir('src/nss-mymachines')\nsubdir('src/nss-resolve')\nsubdir('src/nss-systemd')\nsubdir('src/oom')\nsubdir('src/path')\nsubdir('src/pcrextend')\nsubdir('src/pcrlock')\nsubdir('src/portable')\nsubdir('src/pstore')\nsubdir('src/ptyfwd')\nsubdir('src/quotacheck')\nsubdir('src/random-seed')\nsubdir('src/rc-local-generator')\nsubdir('src/remount-fs')\nsubdir('src/repart')\nsubdir('src/reply-password')\nsubdir('src/resolve')\nsubdir('src/rfkill')\nsubdir('src/rpm')\nsubdir('src/run')\nsubdir('src/run-generator')\nsubdir('src/sbsign')\nsubdir('src/shutdown')\nsubdir('src/sleep')\nsubdir('src/socket-activate')\nsubdir('src/socket-proxy')\nsubdir('src/ssh-generator')\nsubdir('src/stdio-bridge')\nsubdir('src/sulogin-shell')\nsubdir('src/sysctl')\nsubdir('src/sysext')\nsubdir('src/system-update-generator')\nsubdir('src/systemctl')\nsubdir('src/sysupdate')\nsubdir('src/sysusers')\nsubdir('src/sysv-generator')\nsubdir('src/storagetm')\nsubdir('src/timedate')\nsubdir('src/timesync')\nsubdir('src/tmpfiles')\nsubdir('src/tpm2-setup')\nsubdir('src/tty-ask-password-agent')\nsubdir('src/update-done')\nsubdir('src/update-utmp')\nsubdir('src/user-sessions')\nsubdir('src/userdb')\nsubdir('src/varlinkctl')\nsubdir('src/vconsole')\nsubdir('src/veritysetup')\nsubdir('src/vmspawn')\nsubdir('src/volatile-root')\nsubdir('src/vpick')\nsubdir('src/xdg-autostart-generator')\n\nsubdir('src/systemd')\n\nsubdir('src/test')\nsubdir('src/fuzz')\nsubdir('src/ukify/test')  # needs to be last for test_env variable\nsubdir('test/fuzz')\n\nsubdir('mime')\n\nalias_target('devel', libsystemd_pc, libudev_pc, systemd_pc, udev_pc)\n\n#####################################################################\n\nforeach test : simple_tests\n        executables += test_template + { 'sources' : [test] }\nendforeach\n\nforeach test : libsystemd_tests\n        executables += test_template + test\nendforeach\n\nforeach fuzzer : simple_fuzzers\n        executables += fuzz_template + { 'sources' : [fuzzer] }\nendforeach\n\nforeach dict : executables\n        name = dict.get('name', '')\n        if name == ''\n                name = fs.stem(dict.get('sources')[0])\n                assert(name.split('-')[0] in ['test', 'fuzz'])\n        endif\n\n        is_test = name.startswith('test-')\n        is_fuzz = name.startswith('fuzz-')\n\n        build = true\n        foreach cond : dict.get('conditions', [])\n                if conf.get(cond) != 1\n                        build = false\n                        break\n                endif\n        endforeach\n        if not build\n                continue\n        endif\n\n        kwargs = {}\n        foreach key, val : dict\n                if key in ['name', 'dbus', 'public', 'conditions',\n                           'type', 'suite', 'timeout', 'parallel']\n                        continue\n                endif\n\n                kwargs += { key : val }\n        endforeach\n\n        foreach key, val : executable_additional_kwargs\n                kwargs += { key : [ kwargs.get(key, []), val ]}\n        endforeach\n\n        if is_test\n                kwargs += { 'install_dir' : kwargs.get('install_dir') / dict.get('type', '') }\n                foreach key, val : test_additional_kwargs\n                        kwargs += { key : [ kwargs.get(key, []), val ] }\n                endforeach\n        endif\n\n        if is_fuzz\n                foreach key, val : fuzz_additional_kwargs\n                        kwargs += { key : [ kwargs.get(key, []), val ] }\n                endforeach\n        endif\n\n        exe = executable(\n                name,\n                kwargs : kwargs,\n        )\n\n        executables_by_name += { name : exe }\n\n        if dict.get('build_by_default', true)\n                if dict.get('dbus', false)\n                        dbus_programs += exe\n                endif\n                if dict.get('public', false)\n                        public_programs += exe\n                endif\n        endif\n\n        if is_test\n                type = dict.get('type', '')\n                suite = dict.get('suite', '')\n                if suite == ''\n                        suite = fs.name(fs.parent(dict.get('sources')[0]))\n                        if suite.startswith('sd-')\n                                suite = 'libsystemd'\n                        endif\n                endif\n\n                if type == 'manual'\n                        message('@0@/@1@ is a manual test'.format(suite, name))\n                elif type == 'unsafe' and want_tests != 'unsafe'\n                        message('@0@/@1@ is an unsafe test'.format(suite, name))\n                elif dict.get('build_by_default')\n                        test(name, exe,\n                             env : test_env,\n                             timeout : dict.get('timeout', 30),\n                             suite : suite,\n                             is_parallel : dict.get('parallel', true))\n                endif\n        endif\n\n        if is_fuzz\n                fuzzer_exes += exe\n\n                if want_tests != 'false'\n                        # Run the fuzz regression tests without any sanitizers enabled.\n                        # Additional invocations with sanitizers may get added below.\n                        fuzz_ins = fuzz_regression_tests.get(name, {})\n                        foreach directive : fuzz_ins.get('directives', [])\n                                tt = '@0@_@1@'.format(name, fs.name(directive.full_path()))\n                                if tt.substring(45) != ''\n                                        error('Directive sample name is too long:', directive.full_path())\n                                endif\n\n                                test(tt,\n                                     exe,\n                                     suite : 'fuzz',\n                                     args : directive.full_path(),\n                                     depends : directive)\n                        endforeach\n                        foreach file : fuzz_ins.get('files', [])\n                                tt = '@0@_@1@'.format(name, fs.name(file))\n                                if tt.substring(45) != ''\n                                        error('Fuzz sample name is too long:', fs.name(file))\n                                endif\n\n                                test(tt,\n                                     exe,\n                                     suite : 'fuzz',\n                                     args : file)\n                        endforeach\n                endif\n        endif\nendforeach\n\nalias_target('fuzzers', fuzzer_exes)\n\n#####################################################################\n\ntest_dlopen = executables_by_name.get('test-dlopen')\n\nnss_targets = []\npam_targets = []\nforeach dict : modules\n        name = dict.get('name')\n        is_nss = name.startswith('nss_')\n        is_pam = name.startswith('pam_')\n\n        build = true\n        foreach cond : dict.get('conditions', [])\n                if conf.get(cond) != 1\n                        build = false\n                        break\n                endif\n        endforeach\n        if not build\n                continue\n        endif\n\n        kwargs = {}\n        foreach key, val : dict\n                if key in ['name', 'conditions', 'version-script']\n                        continue\n                endif\n                kwargs += { key : val }\n        endforeach\n\n        kwargs += {\n                'link_args' : [\n                        kwargs.get('link_args', []),\n                        '-Wl,--version-script=' + dict.get('version-script'),\n                ],\n                'link_depends' : [\n                        kwargs.get('link_depends', []),\n                        dict.get('version-script'),\n                ],\n        }\n        foreach key, val : module_additional_kwargs\n                kwargs += { key : [ kwargs.get(key, []), val ]}\n        endforeach\n\n        lib = shared_library(\n                name,\n                kwargs : kwargs,\n        )\n\n        if is_nss\n                # We cannot use shared_module because it does not support version suffix.\n                # Unfortunately shared_library insists on creating the symlink‚Ä¶\n                meson.add_install_script(sh, '-c', 'rm $DESTDIR@0@/lib@1@.so'.format(libdir, name),\n                                         install_tag : 'nss')\n                nss_targets += lib\n        endif\n\n        if is_pam\n                pam_targets += lib\n        endif\n\n        if want_tests != 'false' and (is_nss or is_pam)\n                test('dlopen-' + name,\n                     test_dlopen,\n                     # path to dlopen must include a slash\n                     args : lib.full_path(),\n                     depends : lib,\n                     suite : is_nss ? 'nss' : 'pam')\n        endif\nendforeach\n\n# We need the actual targets to build aliases\nif nss_targets.length() > 0\n        alias_target('nss', nss_targets)\nendif\nif pam_targets.length() > 0\n        alias_target('pam', pam_targets)\nendif\n\n#####################################################################\n\nukify_depends = []\n\nforeach executable : ['systemd-measure', 'systemd-sbsign', 'systemd-keyutil']\n        if executable in executables_by_name\n                ukify_depends += [executables_by_name[executable]]\n        endif\nendforeach\n\nukify = custom_target(\n        'ukify',\n        input : 'src/ukify/ukify.py',\n        output : 'ukify',\n        command : [jinja2_cmdline, '@INPUT@', '@OUTPUT@'],\n        install : want_ukify,\n        install_mode : 'rwxr-xr-x',\n        depends : ukify_depends,\n        install_dir : bindir)\nif want_ukify\n        public_programs += ukify\n\n        # symlink for backwards compatibility after rename\n        meson.add_install_script(sh, '-c',\n                                 ln_s.format(bindir / 'ukify',\n                                             libexecdir / 'ukify'))\nendif\n\n#####################################################################\n\nmkosi = find_program('mkosi', required : false)\nif want_integration_tests and not mkosi.found()\n        error('Could not find mkosi which is required to run the integration tests')\nendif\n\nmkosi_depends = public_programs\n\nforeach executable : ['systemd-journal-remote', 'systemd-sbsign', 'systemd-keyutil']\n        if executable in executables_by_name\n                mkosi_depends += [executables_by_name[executable]]\n        endif\nendforeach\n\nif mkosi.found()\n        custom_target('mkosi',\n                build_always_stale : true,\n                build_by_default: false,\n                console : true,\n                output : '.',\n                command : [\n                        mkosi,\n                        '--directory', meson.current_source_dir(),\n                        '--output-dir', meson.current_build_dir() / 'mkosi.output',\n                        '--cache-dir', meson.current_build_dir() / 'mkosi.cache',\n                        '--build-dir', meson.current_build_dir() / 'mkosi.builddir',\n                        '--extra-search-path', meson.current_build_dir(),\n                        '--force',\n                        'build',\n                ],\n                depends : mkosi_depends,\n        )\nendif\n\n############################################################\n\nsubdir('rules.d')\nsubdir('test')\n\n#####################################################################\n\nsubdir('docs/sysvinit')\nsubdir('docs/var-log')\nsubdir('hwdb.d')\nsubdir('man')\nsubdir('modprobe.d')\nsubdir('network')\nsubdir('presets')\nsubdir('profile.d')\nsubdir('shell-completion/bash')\nsubdir('shell-completion/zsh')\nsubdir('sysctl.d')\nsubdir('sysusers.d')\nsubdir('tmpfiles.d')\nsubdir('units')\n\ninstall_subdir('factory/etc',\n               install_dir : factorydir)\nsubdir('factory/templates')\n\nif install_sysconfdir\n        install_data('xorg/50-systemd-user.sh',\n                     install_dir : xinitrcdir)\nendif\ninstall_data('LICENSE.GPL2',\n             'LICENSE.LGPL2.1',\n             'NEWS',\n             'README',\n             'docs/ENVIRONMENT.md',\n             'docs/TRANSIENT-SETTINGS.md',\n             'docs/UIDS-GIDS.md',\n             install_dir : docdir)\n\ninstall_subdir('LICENSES',\n               install_dir : docdir)\n\ninstall_emptydir(systemdstatedir)\n\n#####################################################################\n\n# Ensure that changes to the docs/ directory do not break the\n# basic Github pages build. But only run it in developer mode,\n# as it might be fragile due to changes in the tooling, and it is\n# not generally useful for users.\njekyll = find_program('jekyll', required : false)\nif get_option('mode') == 'developer' and want_tests != 'false' and jekyll.found()\n        test('github-pages',\n             jekyll,\n             suite : 'dist',\n             args : ['build',\n                     '--source', project_source_root / 'docs',\n                     '--destination', project_build_root / '_site'])\nendif\n\n#####################################################################\n\ncheck_help = find_program('tools/check-help.sh')\ncheck_version = find_program('tools/check-version.sh')\n\nforeach exec : public_programs\n        name = fs.name(exec.full_path())\n        if want_tests != 'false'\n                test('check-help-' + name,\n                     check_help,\n                     suite : 'dist',\n                     args : exec.full_path(),\n                     depends: exec)\n\n                test('check-version-' + name,\n                     check_version,\n                     suite : 'dist',\n                     args : [exec.full_path(),\n                             project_major_version],\n                     depends: exec)\n        endif\nendforeach\n\n# Enable tests for all supported sanitizers\nforeach tuple : fuzz_sanitizers\n        sanitizer = tuple[0]\n        build = tuple[1]\n\n        if cc.has_link_argument('-fsanitize=@0@'.format(sanitizer))\n                foreach fuzzer, fuzz_ins : fuzz_regression_tests\n                        name = '@0@:@1@'.format(fuzzer, sanitizer)\n                        if want_tests == 'false'\n                                message('Not compiling @0@ because tests is set to false'.format(name))\n                                continue\n                        endif\n                        if not want_fuzz_tests\n                                message('Not compiling @0@ because fuzz-tests is set to false'.format(name))\n                                continue\n                        endif\n                        exe = custom_target(\n                                name,\n                                output : name,\n                                depends : build,\n                                command : [ln, '-fs',\n                                           build.full_path() / fuzzer,\n                                           '@OUTPUT@'],\n                                build_by_default : true)\n\n                        foreach directive : fuzz_ins.get('directives', [])\n                                test('@0@_@1@_@2@'.format(fuzzer, fs.name(directive.full_path()), sanitizer),\n                                     env,\n                                     suite : 'fuzz+san',\n                                     env : ['UBSAN_OPTIONS=print_stacktrace=1:print_summary=1:halt_on_error=1'],\n                                     timeout : 60,\n                                     args : [exe.full_path(), directive.full_path()],\n                                     depends : directive)\n                        endforeach\n                        foreach file : fuzz_ins.get('files', [])\n                                test('@0@_@1@_@2@'.format(fuzzer, fs.name(file), sanitizer),\n                                     env,\n                                     suite : 'fuzz+san',\n                                     env : ['UBSAN_OPTIONS=print_stacktrace=1:print_summary=1:halt_on_error=1'],\n                                     timeout : 60,\n                                     args : [exe.full_path(), file])\n                        endforeach\n                endforeach\n        endif\nendforeach\n\n#####################################################################\n\nif git.found()\n        all_files = run_command(\n                env, '-u', 'GIT_WORK_TREE',\n                git, '--git-dir=@0@/.git'.format(project_source_root),\n                     'ls-files', ':/*.[ch]', ':/*.cc',\n                check : false)\n        if all_files.returncode() == 0\n                all_files = files(all_files.stdout().split())\n\n                custom_target(\n                        'tags',\n                        output : 'tags',\n                        command : [env, 'etags', '-o', '@0@/TAGS'.format(project_source_root)] + all_files)\n                run_target(\n                        'ctags',\n                        command : [env, 'ctags', '--tag-relative=never', '-o', '@0@/tags'.format(project_source_root)] + all_files)\n\n                ############################################\n\n                if want_tests != 'false' and conf.get('BUILD_MODE_DEVELOPER') == 1\n                        test('check-includes',\n                             files('tools/check-includes.py'),\n                             args: all_files,\n                             env : ['PROJECT_SOURCE_ROOT=@0@'.format(project_source_root)],\n                             suite : 'headers')\n                endif\n        endif\n\n        ####################################################\n\n        git_contrib_sh = find_program('tools/git-contrib.sh')\n        run_target(\n                'git-contrib',\n                command : [git_contrib_sh])\n\n        ####################################################\n\n        git_head = run_command(\n                git, '--git-dir=@0@/.git'.format(project_source_root),\n                     'rev-parse', 'HEAD',\n                check : false).stdout().strip()\n        git_head_short = run_command(\n                git, '--git-dir=@0@/.git'.format(project_source_root),\n                     'rev-parse', '--short=7', 'HEAD',\n                check : false).stdout().strip()\n\n        run_target(\n                'git-snapshot',\n                command : [git, 'archive',\n                           '-o', '@0@/systemd-@1@.tar.gz'.format(project_source_root,\n                                                                 git_head_short),\n                           '--prefix', 'systemd-@0@/'.format(git_head),\n                           'HEAD'])\nendif\n\n#####################################################################\n\ncheck_api_docs_sh = find_program('tools/check-api-docs.sh')\nrun_target(\n        'check-api-docs',\n        depends : [man, libsystemd, libudev],\n        command : [check_api_docs_sh, libsystemd.full_path(), libudev.full_path()])\n\nalias_target('update-dbus-docs', update_dbus_docs)\nalias_target('update-man-rules', update_man_rules)\n\nif not meson.is_cross_build()\n        custom_target(\n                'export-dbus-interfaces',\n                output : fs.name(dbus_interfaces_dir),\n                install : dbus_interfaces_dir != 'no',\n                install_dir : fs.parent(dbus_interfaces_dir),\n                command : [export_dbus_interfaces_py, '@OUTPUT@', dbus_programs])\nendif\n\nmeson_extract_unit_files = find_program('tools/meson-extract-unit-files.py')\ncustom_target('installed-unit-files.txt',\n              output : 'installed-unit-files.txt',\n              capture : true,\n              install : want_tests != 'no' and install_tests,\n              install_dir : testdata_dir,\n              command : [meson_extract_unit_files, project_build_root])\n\n#####################################################################\n\nalt_time_epoch = run_command('date', '-Is', '-u', '-d', '@@0@'.format(time_epoch),\n                             check : true).stdout().strip()\n\nsummary({\n        'split bin-sbin' :                  split_bin,\n        'prefix directory' :                prefixdir,\n        'sysconf directory' :               sysconfdir,\n        'include directory' :               includedir,\n        'lib directory' :                   libdir,\n        'SysV init scripts' :               sysvinit_path,\n        'SysV rc?.d directories' :          sysvrcnd_path,\n        'PAM modules directory' :           pamlibdir,\n        'PAM configuration directory' :     pamconfdir,\n        'ssh server configuration directory' : sshdconfdir,\n        'ssh server privilege separation directory' : sshdprivsepdir,\n        'ssh client configuration directory' : sshconfdir,\n        'libcryptsetup plugins directory' : libcryptsetup_plugins_dir,\n        'Shell profile directory' :         shellprofiledir,\n        'RPM macros directory' :            rpmmacrosdir,\n        'modprobe.d directory' :            modprobedir,\n        'D-Bus policy directory' :          dbuspolicydir,\n        'D-Bus session directory' :         dbussessionservicedir,\n        'D-Bus system directory' :          dbussystemservicedir,\n        'D-Bus interfaces directory' :      dbus_interfaces_dir,\n        'bash completions directory' :      bashcompletiondir,\n        'zsh completions directory' :       zshcompletiondir,\n        'private shared lib version tag' :  shared_lib_tag,\n        'extra start script' :              get_option('rc-local'),\n        'debug shell' :                     '@0@ @ @1@'.format(get_option('debug-shell'),\n                                                               get_option('debug-tty')),\n        'system UIDs' :                     '<=@0@ (alloc >=@1@)'.format(conf.get('SYSTEM_UID_MAX'),\n                                                                         conf.get('SYSTEM_ALLOC_UID_MIN')),\n        'system GIDs' :                     '<=@0@ (alloc >=@1@)'.format(conf.get('SYSTEM_GID_MAX'),\n                                                                         conf.get('SYSTEM_ALLOC_GID_MIN')),\n        'dynamic UIDs' :                    '@0@‚Ä¶@1@'.format(dynamic_uid_min, dynamic_uid_max),\n        'container UID bases' :             '@0@‚Ä¶@1@'.format(container_uid_base_min, container_uid_base_max),\n        'foreign UID base' :                '@0@'.format(foreign_uid_base),\n        'static UID/GID allocations' :      ' '.join(static_ugids),\n        '/dev/kvm access mode' :            get_option('dev-kvm-mode'),\n        'render group access mode' :        get_option('group-render-mode'),\n        'certificate root directory' :      get_option('certificate-root'),\n        'support URL' :                     support_url,\n        'nobody user name' :                nobody_user,\n        'nobody group name' :               nobody_group,\n        'fallback hostname' :               get_option('fallback-hostname'),\n        'default compression method' :      compression,\n        'default DNSSEC mode' :             default_dnssec,\n        'default DNS-over-TLS mode' :       default_dns_over_tls,\n        'default mDNS mode' :               default_mdns,\n        'default LLMNR mode' :              default_llmnr,\n        'default DNS servers' :             dns_servers.split(' '),\n        'default NTP servers' :             ntp_servers.split(' '),\n        'default net.naming_scheme= value': default_net_naming_scheme,\n        'default KillUserProcesses= value': kill_user_processes,\n        'default locale' :                  default_locale,\n        'default nspawn locale' :           nspawn_locale,\n        'default status unit format' :      status_unit_format_default,\n        'default user $PATH' :\n                default_user_path != '' ? default_user_path : '(same as system services)',\n        'systemd service watchdog' :        service_watchdog == '' ? 'disabled' : service_watchdog,\n        'time epoch' :                      '@0@ (@1@)'.format(time_epoch, alt_time_epoch)})\n\n# TODO:\n# CFLAGS:   ${OUR_CFLAGS} ${CFLAGS}\n# CPPFLAGS: ${OUR_CPPFLAGS} ${CPPFLAGS}\n# LDFLAGS:  ${OUR_LDFLAGS} ${LDFLAGS}\n\nfound = []\nmissing = []\n\nforeach tuple : [\n        # dependencies\n        ['ACL'],\n        ['AUDIT'],\n        ['AppArmor'],\n        ['IMA'],\n        ['IPE'],\n        ['PAM'],\n        ['SECCOMP'],\n        ['SELinux'],\n        ['SMACK'],\n        ['blkid'],\n        ['elfutils'],\n        ['gcrypt'],\n        ['gnutls'],\n        ['libarchive'],\n        ['libbpf'],\n        ['libcryptsetup'],\n        ['libcryptsetup-plugins'],\n        ['libcurl'],\n        ['libfdisk'],\n        ['libfido2'],\n        ['libidn'],\n        ['libidn2'],\n        ['libiptc'],\n        ['microhttpd'],\n        ['openssl'],\n        ['p11kit'],\n        ['passwdqc'],\n        ['pcre2'],\n        ['pwquality'],\n        ['qrencode'],\n        ['tpm2'],\n        ['xkbcommon'],\n\n        # compression libs\n        ['zstd'],\n        ['lz4'],\n        ['xz'],\n        ['zlib'],\n        ['bzip2'],\n\n        # components\n        ['backlight'],\n        ['binfmt'],\n        ['bootloader'],\n        ['bpf-framework',          conf.get('BPF_FRAMEWORK') == 1],\n        ['coredump'],\n        ['efi'],\n        ['environment.d'],\n        ['firstboot'],\n        ['hibernate'],\n        ['homed'],\n        ['hostnamed'],\n        ['hwdb'],\n        ['importd'],\n        ['initrd'],\n        ['kernel-install'],\n        ['localed'],\n        ['logind'],\n        ['machined'],\n        ['mountfsd'],\n        ['networkd'],\n        ['nsresourced'],\n        ['nss-myhostname'],\n        ['nss-mymachines'],\n        ['nss-resolve'],\n        ['nss-systemd'],\n        ['oomd'],\n        ['portabled'],\n        ['pstore'],\n        ['quotacheck'],\n        ['randomseed'],\n        ['repart'],\n        ['resolve'],\n        ['rfkill'],\n        ['sysext'],\n        ['systemd-analyze',        conf.get('ENABLE_ANALYZE') == 1],\n        ['sysupdate'],\n        ['sysupdated'],\n        ['sysusers'],\n        ['storagetm'],\n        ['timedated'],\n        ['timesyncd'],\n        ['tmpfiles'],\n        ['userdb'],\n        ['vconsole'],\n        ['vmspawn'],\n        ['xdg-autostart'],\n\n        # optional features\n        ['dmi'],\n        ['idn'],\n        ['polkit'],\n        ['legacy-pkla',            install_polkit_pkla],\n        ['kmod'],\n        ['xenctrl'],\n        ['dbus'],\n        ['glib'],\n        ['tpm'],\n        ['man pages',              want_man],\n        ['html pages',             want_html],\n        ['man page indices',       want_man and have_lxml],\n        ['SysV compat'],\n        ['compat-mutable-uid-boundaries'],\n        ['utmp'],\n        ['ldconfig'],\n        ['adm group',              get_option('adm-group')],\n        ['wheel group',            get_option('wheel-group')],\n        ['gshadow'],\n        ['debug hashmap'],\n        ['debug mmap cache'],\n        ['debug siphash'],\n        ['trace logging',          conf.get('LOG_TRACE') == 1],\n        ['slow tests',             want_slow_tests],\n        ['fuzz tests',             want_fuzz_tests],\n        ['install tests',          install_tests],\n        ['link-udev-shared',       get_option('link-udev-shared')],\n        ['link-systemctl-shared',  get_option('link-systemctl-shared')],\n        ['link-networkd-shared',   get_option('link-networkd-shared')],\n        ['link-timesyncd-shared',  get_option('link-timesyncd-shared')],\n        ['link-journalctl-shared', get_option('link-journalctl-shared')],\n        ['link-boot-shared',       get_option('link-boot-shared')],\n        ['link-portabled-shared',  get_option('link-portabled-shared')],\n        ['first-boot-full-preset'],\n        ['fexecve'],\n        ['standalone-binaries',    get_option('standalone-binaries')],\n        ['coverage',               get_option('b_coverage')],\n]\n\n        if tuple.length() >= 2\n                cond = tuple[1]\n        else\n                ident1 = 'HAVE_' + tuple[0].underscorify().to_upper()\n                ident2 = 'ENABLE_' + tuple[0].underscorify().to_upper()\n                cond = conf.get(ident1, 0) == 1 or conf.get(ident2, 0) == 1\n        endif\n        if cond\n                found += tuple[0]\n        else\n                missing += tuple[0]\n        endif\nendforeach\n\nif static_libsystemd == 'false'\n        missing += 'static-libsystemd'\nelse\n        found += 'static-libsystemd(@0@)'.format(static_libsystemd)\nendif\n\nif static_libudev == 'false'\n        missing += 'static-libudev'\nelse\n        found += 'static-libudev(@0@)'.format(static_libudev)\nendif\n\nif conf.get('HAVE_OPENSSL_OR_GCRYPT') == 1 and conf.get('PREFER_OPENSSL') == 1\n        found += 'cryptolib(openssl)'\nelif conf.get('HAVE_OPENSSL_OR_GCRYPT') == 1\n        found += 'cryptolib(gcrypt)'\nelse\n        missing += 'cryptolib'\nendif\n\nif conf.get('DNS_OVER_TLS_USE_GNUTLS') == 1\n        found += 'DNS-over-TLS(gnutls)'\nelif conf.get('DNS_OVER_TLS_USE_OPENSSL') == 1\n        found += 'DNS-over-TLS(openssl)'\nelse\n        missing += 'DNS-over-TLS'\nendif\n\nsummary({\n        'enabled' :  ', '.join(found),\n        'disabled' : ', '.join(missing)},\n        section : 'Features')\n"
        },
        {
          "name": "meson.version",
          "type": "blob",
          "size": 0.009765625,
          "content": "258~devel\n"
        },
        {
          "name": "meson_options.txt",
          "type": "blob",
          "size": 31.7314453125,
          "content": "# -*- mode: meson -*-\n# SPDX-License-Identifier: LGPL-2.1-or-later\n\noption('version-tag', type : 'string',\n       description : 'set the extended version string (defaults to project version)')\noption('shared-lib-tag', type : 'string',\n       description : 'override the private shared library version tag (defaults to project version)')\noption('vcs-tag', type : 'boolean', value : true,\n       description : 'append current git commit to version output when git information is available')\n\noption('mode', type : 'combo', choices : ['developer', 'release'],\n       description : 'autoenable features suitable for systemd development/release builds')\n\noption('split-usr', type : 'combo', choices : ['auto', 'true', 'false'], deprecated: true,\n       description : 'This option is deprecated and will be removed in a future release')\noption('split-bin', type : 'combo', choices : ['auto', 'true', 'false'],\n       description : 'sbin is not a symlink to bin')\noption('rootlibdir', type : 'string', deprecated: true,\n       description : 'This option is deprecated and will be removed in a future release')\noption('rootprefix', type : 'string', deprecated: true,\n       description : 'This option is deprecated and will be removed in a future release')\noption('link-udev-shared', type : 'boolean',\n       description : 'link systemd-udevd and its helpers to libsystemd-shared.so')\noption('link-executor-shared', type : 'boolean',\n       description : 'link systemd-executor to libsystemd-shared.so and libsystemd-core.so')\noption('link-systemctl-shared', type: 'boolean',\n       description : 'link systemctl against libsystemd-shared.so')\noption('link-networkd-shared', type: 'boolean',\n       description : 'link systemd-networkd and its helpers to libsystemd-shared.so')\noption('link-timesyncd-shared', type: 'boolean',\n       description : 'link systemd-timesyncd and its helpers to libsystemd-shared.so')\noption('link-journalctl-shared', type: 'boolean',\n       description : 'link journalctl against libsystemd-shared.so')\noption('link-boot-shared', type: 'boolean',\n       description : 'link bootctl and systemd-bless-boot against libsystemd-shared.so')\noption('link-portabled-shared', type: 'boolean',\n       description : 'link systemd-portabled and its helpers to libsystemd-shared.so')\noption('first-boot-full-preset', type: 'boolean', value: false,\n       description : 'during first boot, do full preset-all (default will be changed to true later)')\n\noption('static-libsystemd', type : 'combo',\n       choices : ['false', 'true', 'pic', 'no-pic'],\n       description : 'install a static library for libsystemd')\noption('static-libudev', type : 'combo',\n       choices : ['false', 'true', 'pic', 'no-pic'],\n       description : 'install a static library for libudev')\noption('standalone-binaries', type : 'boolean', value : false,\n       description : 'also build standalone versions of supported binaries')\n\noption('sysvinit-path', type : 'string', value : '/etc/init.d',\n       description : 'the directory where the SysV init scripts are located')\noption('sysvrcnd-path', type : 'string', value : '/etc/rc.d',\n       description : 'the base directory for SysV rcN.d directories')\noption('rc-local', type : 'string',\n       value : '/etc/rc.local')\noption('initrd', type : 'boolean',\n       description : 'install services for use when running systemd in initrd')\noption('compat-mutable-uid-boundaries', type : 'boolean', value : false,\n       description : 'look at uid boundaries in /etc/login.defs for compatibility')\noption('nscd', type : 'boolean',\n       description : 'This option is deprecated and will be removed in a future release')\n\noption('quotaon-path', type : 'string', description : 'path to quotaon')\noption('quotacheck-path', type : 'string', description : 'path to quotacheck')\noption('kmod-path', type : 'string', description : 'path to kmod')\noption('kexec-path', type : 'string', description : 'path to kexec')\noption('sulogin-path', type : 'string', description : 'path to sulogin')\noption('mount-path', type : 'string', description : 'path to mount')\noption('umount-path', type : 'string', description : 'path to umount')\noption('loadkeys-path', type : 'string', description : 'path to loadkeys')\noption('setfont-path', type : 'string', description : 'path to setfont')\noption('nologin-path', type : 'string', description : 'path to nologin')\n\noption('debug-shell', type : 'string', value : '/bin/sh',\n       description : 'path to debug shell binary')\noption('debug-tty', type : 'string', value : '/dev/tty9',\n       description : 'specify the tty device for debug shell')\noption('debug-extra', type : 'array', choices : ['hashmap', 'mmap-cache', 'siphash'], value : [],\n       description : 'enable extra debugging')\noption('memory-accounting-default', type : 'boolean',\n       description : 'enable MemoryAccounting= by default')\noption('bump-proc-sys-fs-file-max', type : 'boolean',\n       description : 'bump /proc/sys/fs/file-max to LONG_MAX')\noption('bump-proc-sys-fs-nr-open', type : 'boolean',\n       description : 'bump /proc/sys/fs/nr_open to INT_MAX')\noption('log-trace', type : 'boolean', value : false,\n       description : 'enable low level debug logging')\noption('user-path', type : 'string',\n       description : '$PATH to use for user sessions')\n\noption('utmp', type : 'boolean',\n       description : 'support for utmp/wtmp log handling')\noption('hibernate', type : 'boolean',\n       description : 'support for hibernation')\noption('ldconfig', type : 'boolean',\n       description : 'support for dynamic linker cache creation')\noption('resolve', type : 'boolean',\n       description : 'systemd-resolved stack')\noption('efi', type : 'boolean',\n       description : 'enable EFI support')\noption('tpm', type : 'boolean',\n       description : 'TPM should be used to log events and extend the registers')\noption('environment-d', type : 'boolean',\n       description : 'support for environment.d')\noption('binfmt', type : 'boolean',\n       description : 'support for custom binary formats')\noption('repart', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'install the systemd-repart tool')\noption('sysupdate', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'install the systemd-sysupdate tool')\noption('sysupdated', type: 'combo', value : 'auto',\n       choices : ['auto', 'enabled', 'disabled'],\n       description : 'install the systemd-sysupdated service')\n\noption('coredump', type : 'boolean',\n       description : 'install the coredump handler')\noption('pstore', type : 'boolean',\n       description : 'install the pstore archival tool')\noption('oomd', type : 'boolean',\n       description : 'install the userspace oom killer')\noption('logind', type : 'boolean',\n       description : 'install the systemd-logind stack')\noption('hostnamed', type : 'boolean',\n       description : 'install the systemd-hostnamed stack')\noption('localed', type : 'boolean',\n       description : 'install the systemd-localed stack')\noption('machined', type : 'boolean',\n       description : 'install the systemd-machined stack')\noption('portabled', type : 'boolean',\n       description : 'install the systemd-portabled stack')\noption('sysext', type : 'boolean',\n       description : 'install the systemd-sysext stack')\noption('mountfsd', type : 'boolean',\n       description : 'install the systemd-mountfsd stack')\noption('userdb', type : 'boolean',\n       description : 'install the systemd-userdbd stack')\noption('homed', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'install the systemd-homed stack')\noption('networkd', type : 'boolean',\n       description : 'install the systemd-networkd stack')\noption('default-network', type : 'boolean', value : false,\n       description : 'install default .network files')\noption('timedated', type : 'boolean',\n       description : 'install the systemd-timedated daemon')\noption('timesyncd', type : 'boolean',\n       description : 'install the systemd-timesyncd daemon')\noption('remote', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'support for \"journal over the network\"')\noption('create-log-dirs', type : 'boolean',\n       description : 'create /var/log/journal{,/remote}')\noption('nsresourced', type : 'boolean',\n       description : 'install the systemd-nsresourced stack')\noption('nss-myhostname', type : 'boolean',\n       description : 'install nss-myhostname module')\noption('nss-mymachines', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'install nss-mymachines module')\noption('nss-resolve', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'install nss-resolve module')\noption('nss-systemd', type : 'boolean',\n       description : 'install nss-systemd module')\noption('firstboot', type : 'boolean',\n       description : 'support for firstboot mechanism')\noption('randomseed', type : 'boolean',\n       description : 'support for restoring random seed')\noption('backlight', type : 'boolean',\n       description : 'support for restoring backlight state')\noption('vconsole', type : 'boolean',\n       description : 'support for vconsole configuration')\noption('vmspawn', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'install the systemd-vmspawn tool')\noption('quotacheck', type : 'boolean',\n       description : 'support for the quotacheck tools')\noption('sysusers', type : 'boolean',\n       description : 'support for the sysusers configuration')\noption('storagetm', type : 'boolean',\n       description : 'support for Storage Target Mode')\noption('tmpfiles', type : 'boolean',\n       description : 'support for tmpfiles.d')\noption('importd', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'install the systemd-importd daemon')\noption('hwdb', type : 'boolean',\n       description : 'support for the hardware database')\noption('rfkill', type : 'boolean',\n       description : 'support for the rfkill tools')\noption('xdg-autostart', type : 'boolean',\n       description : 'install the xdg-autostart-generator and unit')\noption('man', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       value : 'disabled',\n       description : 'build and install man pages')\noption('html', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       value : 'disabled',\n       description : 'build and install html pages')\noption('translations', type : 'boolean', value : true,\n       description : 'build and install translations')\n\noption('certificate-root', type : 'string', value : '/etc/ssl',\n       description : 'the prefix for TLS certificates')\noption('dbuspolicydir', type : 'string',\n       description : 'D-Bus policy directory')\noption('dbussessionservicedir', type : 'string',\n       description : 'D-Bus session service directory')\noption('dbussystemservicedir', type : 'string',\n       description : 'D-Bus system service directory')\noption('dbus-interfaces-dir', type : 'string',\n       description : 'export D-Bus introspection XML as standalone files')\noption('default-timeout-sec', type : 'integer', value : 90,\n       description : 'default timeout for system unit start/stop')\noption('default-user-timeout-sec', type : 'integer', value : 90,\n       description : 'default timeout for user unit start/stop')\noption('pkgconfigdatadir', type : 'string', value : '',\n       description : 'directory for arch-independent pkg-config files')\noption('pkgconfiglibdir', type : 'string', value : '',\n       description : 'directory for standard pkg-config files')\noption('xinitrcdir', type : 'string', value : '',\n       description : 'directory for xinitrc files')\noption('rpmmacrosdir', type : 'string', value : 'lib/rpm/macros.d',\n       description : 'directory for rpm macros [\"no\" disables]')\noption('update-helper-user-timeout-sec', type : 'integer', value : 15,\n       description : 'timeout for user manager package operations')\noption('pamlibdir', type : 'string',\n       description : 'directory for PAM modules')\noption('pamconfdir', type : 'string',\n       description : 'directory for PAM configuration [\"no\" disables]')\noption('sshconfdir', type : 'string',\n       description : 'directory for SSH client configuration [\"no\" disables]')\noption('sshdconfdir', type : 'string',\n       description : 'directory for SSH server configuration [\"no\" disables]')\noption('sshdprivsepdir', type : 'string',\n       description : 'directory for SSH privilege separation [\"no\" disables]', value : '/run/sshd')\noption('libcryptsetup-plugins-dir', type : 'string',\n       description : 'directory for libcryptsetup plugins')\noption('shellprofiledir', type : 'string',\n       description : 'directory for Shell profile drop-ins [\"no\" disables]')\noption('docdir', type : 'string',\n       description : 'documentation directory')\noption('install-sysconfdir', type : 'combo', choices : ['true', 'no-samples', 'false'], value : 'true',\n       description : 'install configuration files and directories')\noption('configfiledir', type : 'string', value : '',\n       description : 'directory for configuration files')\n\noption('fallback-hostname', type : 'string', value : 'localhost',\n       description : 'the hostname used if none configured')\noption('default-hierarchy', type : 'combo',\n       choices : ['legacy', 'hybrid', 'unified'], deprecated : true,\n       description : 'This option is deprecated and will be removed in a future release')\noption('extra-net-naming-schemes', type : 'string',\n       description : 'comma-separated list of extra net.naming_scheme= definitions')\noption('default-net-naming-scheme', type : 'string', value : 'latest',\n       description : 'default net.naming_scheme= value')\noption('status-unit-format-default', type : 'combo',\n       choices : ['auto', 'description', 'name', 'combined'],\n       description : 'use unit name or description in messages by default')\noption('time-epoch', type : 'integer', value : 0,\n       description : 'time epoch for time clients')\noption('clock-valid-range-usec-max', type : 'integer', value : 473364000000000, # 15 years\n       description : 'maximum value in microseconds for the difference between RTC and epoch, exceeding which is considered an RTC error [\"0\" disables]')\noption('default-user-shell', type : 'string', value : '/bin/bash',\n       description : 'default interactive shell')\n\noption('system-alloc-uid-min', type : 'integer', value : 0,\n       description : 'minimum system UID used when allocating')\noption('system-alloc-gid-min', type : 'integer', value : 0,\n       description : 'minimum system GID used when allocating')\noption('system-uid-max', type : 'integer', value : 0,\n       description : 'maximum system UID')\noption('system-gid-max', type : 'integer', value : 0,\n       description : 'maximum system GID')\noption('dynamic-uid-min', type : 'integer', value : 0x0000EF00,\n       description : 'minimum dynamic UID')\noption('dynamic-uid-max', type : 'integer', value : 0x0000FFEF,\n       description : 'maximum dynamic UID')\noption('container-uid-base-min', type : 'integer', value : 0x00080000,\n       description : 'minimum container UID base')\noption('container-uid-base-max', type : 'integer', value : 0x6FFF0000,\n       description : 'maximum container UID base')\noption('foreign-uid-base', type : 'integer', value : 0x7FFE0000,\n       description : 'foreign OS image UID base')\noption('adm-group', type : 'boolean',\n       description : 'the ACL for adm group should be added')\noption('wheel-group', type : 'boolean',\n       description : 'the ACL for wheel group should be added')\noption('nobody-user', type : 'string',\n       description : 'The name of the nobody user (the one with UID 65534)',\n       value : 'nobody')\noption('nobody-group', type : 'string',\n       description : 'The name of the nobody group (the one with GID 65534)',\n       value : 'nobody')\noption('adm-gid', type : 'integer', value : 0,\n       description : 'soft-static allocation for the \"adm\" group')\noption('audio-gid', type : 'integer', value : 0,\n       description : 'soft-static allocation for the \"audio\" group')\noption('cdrom-gid', type : 'integer', value : 0,\n       description : 'soft-static allocation for the \"cdrom\" group')\noption('dialout-gid', type : 'integer', value : 0,\n       description : 'soft-static allocation for the \"dialout\" group')\noption('disk-gid', type : 'integer', value : 0,\n       description : 'soft-static allocation for the \"disk\" group')\noption('input-gid', type : 'integer', value : 0,\n       description : 'soft-static allocation for the \"input\" group')\noption('kmem-gid', type : 'integer', value : 0,\n       description : 'soft-static allocation for the \"kmem\" group')\noption('kvm-gid', type : 'integer', value : 0,\n       description : 'soft-static allocation for the \"kvm\" group')\noption('lp-gid', type : 'integer', value : 0,\n       description : 'soft-static allocation for the \"lp\" group')\noption('render-gid', type : 'integer', value : 0,\n       description : 'soft-static allocation for the \"render\" group')\noption('sgx-gid', type : 'integer', value : 0,\n       description : 'soft-static allocation for the \"sgx\" group')\noption('tape-gid', type : 'integer', value : 0,\n       description : 'soft-static allocation for the \"tape\" group')\noption('tty-gid', type : 'integer', value : 5,\n       description : 'the numeric GID of the \"tty\" group')\noption('users-gid', type : 'integer', value : 0,\n       description : 'soft-static allocation for the \"users\" group')\noption('utmp-gid', type : 'integer', value : 0,\n       description : 'soft-static allocation for the \"utmp\" group')\noption('video-gid', type : 'integer', value : 0,\n       description : 'soft-static allocation for the \"video\" group')\noption('wheel-gid', type : 'integer', value : 0,\n       description : 'soft-static allocation for the \"wheel\" group')\noption('systemd-journal-gid', type : 'integer', value : 0,\n       description : 'soft-static allocation for the systemd-journal group')\noption('systemd-network-uid', type : 'integer', value : 0,\n       description : 'soft-static allocation for the systemd-network user')\noption('systemd-resolve-uid', type : 'integer', value : 0,\n       description : 'soft-static allocation for the systemd-resolve user')\noption('systemd-timesync-uid', type : 'integer', value : 0,\n       description : 'soft-static allocation for the systemd-timesync user')\n\noption('dev-kvm-mode', type : 'string', value : '0666',\n       description : '/dev/kvm access mode')\noption('group-render-mode', type : 'string', value : '0666',\n       description : 'Access mode for devices owned by render group (e.g. /dev/dri/renderD*, /dev/kfd).')\noption('tty-mode', type : 'string', value : '0600',\n       description : 'Access mode for tty/pts device nodes.')\noption('default-kill-user-processes', type : 'boolean',\n       description : 'the default value for KillUserProcesses= setting')\noption('gshadow', type : 'boolean',\n       description : 'support for shadow group')\noption('default-locale', type : 'string', value : 'C.UTF-8',\n       description : 'default locale used when /etc/locale.conf does not exist')\noption('nspawn-locale', type : 'string', value : 'C.UTF-8',\n       description : 'default locale used by systemd-nspawn when executing commands in a container')\noption('default-keymap', type : 'string', value : 'us',\n       description : 'default keymap used when populating /etc/vconsole.conf')\noption('localegen-path', type : 'string', value : '',\n       description : 'absolute path to the locale-gen binary in case the system is using locale-gen')\noption('service-watchdog', type : 'string', value : '3min',\n       description : 'default watchdog setting for systemd services')\n\noption('default-dnssec', type : 'combo',\n       description : 'default DNSSEC mode',\n       choices : ['yes', 'allow-downgrade', 'no'],\n       value : 'allow-downgrade')\noption('default-dns-over-tls', type : 'combo',\n       description : 'default DNS-over-TLS mode',\n       choices : ['yes', 'opportunistic', 'no'],\n       value : 'no')\noption('default-mdns', type : 'combo',\n       choices : ['yes', 'resolve', 'no'],\n       description : 'default MulticastDNS mode',\n       value : 'yes')\noption('default-llmnr', type : 'combo',\n       choices : ['yes', 'resolve', 'no'],\n       description : 'default LLMNR mode',\n       value : 'yes')\noption('dns-over-tls', type : 'combo', choices : ['auto', 'gnutls', 'openssl', 'true', 'false'],\n       description : 'DNS-over-TLS support')\noption('dns-servers', type : 'string',\n       description : 'space-separated list of default DNS servers',\n       value : '1.1.1.1#cloudflare-dns.com 8.8.8.8#dns.google 1.0.0.1#cloudflare-dns.com 8.8.4.4#dns.google 2606:4700:4700::1111#cloudflare-dns.com 2001:4860:4860::8888#dns.google 2606:4700:4700::1001#cloudflare-dns.com 2001:4860:4860::8844#dns.google')\noption('ntp-servers', type : 'string',\n       description : 'space-separated list of default NTP servers',\n       value : 'time1.google.com time2.google.com time3.google.com time4.google.com')\noption('support-url', type : 'string',\n       description : 'the support URL to show in catalog entries included in systemd',\n       value : 'https://lists.freedesktop.org/mailman/listinfo/systemd-devel')\noption('www-target', type : 'string',\n       description : 'the address and dir to upload docs too',\n       value : 'www.freedesktop.org:/srv/www.freedesktop.org/www/software/systemd')\n\noption('seccomp', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'SECCOMP support')\noption('selinux', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'SELinux support')\noption('apparmor', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'AppArmor support')\noption('smack', type : 'boolean',\n       description : 'SMACK support')\noption('smack-run-label', type : 'string',\n       description : 'run systemd --system itself with a specific SMACK label')\noption('smack-default-process-label', type : 'string',\n       description : 'default SMACK label for executed processes')\noption('polkit', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'polkit support')\noption('ima', type : 'boolean',\n       description : 'IMA support')\noption('ipe', type : 'boolean',\n       description : 'IPE support')\n\noption('acl', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'libacl support')\noption('audit', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'libaudit support')\noption('blkid', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'libblkid support')\noption('fdisk', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'libfdisk support')\noption('kmod', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'support for loadable modules')\noption('xenctrl', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'support for Xen kexec')\noption('pam', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'PAM support')\noption('passwdqc', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'libpasswdqc support')\noption('pwquality', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'libpwquality support')\noption('microhttpd', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'lib¬µhttpd support')\noption('libcryptsetup', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'libcryptsetup support')\noption('libcryptsetup-plugins', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'libcryptsetup LUKS2 external token handlers support (plugins)')\noption('libcurl', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'libcurl support')\noption('idn', type : 'boolean',\n       description : 'use IDN when printing hostnames')\noption('libidn2', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'libidn2 support')\noption('libidn', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'libidn support')\noption('libiptc', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'libiptc support')\noption('qrencode', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'libqrencode support')\noption('gcrypt', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'gcrypt support')\noption('gnutls', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'gnutls support')\noption('openssl', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'openssl support')\noption('cryptolib', type : 'combo', choices : ['auto', 'openssl', 'gcrypt'],\n       description : 'whether to use openssl or gcrypt where both are supported')\noption('p11kit', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'p11kit support')\noption('libfido2', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'FIDO2 support')\noption('tpm2', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'TPM2 support')\noption('elfutils', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'elfutils support')\noption('zlib', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'zlib compression support')\noption('bzip2', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'bzip2 compression support')\noption('xz', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'xz compression support')\noption('lz4', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'lz4 compression support')\noption('zstd', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'zstd compression support')\noption('default-compression', type : 'combo', choices : ['auto', 'zstd', 'lz4', 'xz'], value: 'auto',\n       description : 'default compression algorithm')\noption('xkbcommon', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'xkbcommon keymap support')\noption('pcre2', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'regexp matching support using pcre2')\noption('glib', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'libglib support (for tests only)')\noption('dbus', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'libdbus support (for tests only)')\noption('libarchive', type : 'feature',\n       description : 'libarchive support')\n\noption('bootloader', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'sd-boot/stub and userspace tools')\noption('sbat-distro', type : 'string', value : 'auto',\n       description : 'SBAT distribution ID, e.g. fedora, or auto for autodetection')\noption('sbat-distro-generation', type : 'integer', value : 1,\n       description : 'SBAT distribution generation')\noption('sbat-distro-summary', type : 'string',\n       description : 'SBAT distribution summary, e.g. Fedora')\noption('sbat-distro-pkgname', type : 'string',\n       description : 'SBAT distribution package name, e.g. systemd')\noption('sbat-distro-version', type : 'string',\n       description : 'SBAT distribution package version, e.g. 248-7.fc34')\noption('sbat-distro-url', type : 'string',\n       description : 'SBAT distribution URL, e.g. https://src.fedoraproject.org/rpms/systemd')\noption('efi-color-normal', type : 'string', value : 'lightgray,black',\n       description : 'general boot loader color in \"foreground,background\" form, see constants from eficon.h')\noption('efi-color-entry', type : 'string', value : 'lightgray,black',\n       description : 'boot loader color for entries')\noption('efi-color-highlight', type : 'string', value : 'black,lightgray',\n       description : 'boot loader color for selected entries')\noption('efi-color-edit', type : 'string', value : 'black,lightgray',\n       description : 'boot loader color for option line edit')\noption('efi-stub-extra-sections', type : 'integer', value : 30,\n       description : 'minimum number of sections to keep free in stub PE header')\noption('efi-addon-extra-sections', type : 'integer', value : 15,\n       description : 'minimum number of sections to keep free in addon PE header')\n\noption('bashcompletiondir', type : 'string',\n       description : 'directory for bash completion scripts [\"no\" disables]')\noption('zshcompletiondir', type : 'string',\n       description : 'directory for zsh completion scripts [\"no\" disables]')\n\noption('tests', type : 'combo', choices : ['true', 'unsafe', 'false'],\n       description : 'enable extra tests with =unsafe')\noption('slow-tests', type : 'boolean', value : false,\n       description : 'run the slow tests by default')\noption('fuzz-tests', type : 'boolean', value : false,\n       description : 'run the fuzzer regression tests by default (with sanitizers)')\noption('install-tests', type : 'boolean', value : false,\n       description : 'install test executables')\noption('log-message-verification', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'do fake printf() calls to verify format strings')\noption('integration-tests', type : 'boolean', value : false,\n       description : 'run the integration tests')\n\noption('ok-color', type : 'combo',\n       choices : ['black', 'red', 'green', 'yellow', 'blue', 'magenta', 'cyan',\n                  'white', 'highlight-black', 'highlight-red', 'highlight-green',\n                  'highlight-yellow', 'highlight-blue', 'highlight-magenta',\n                  'highlight-cyan', 'highlight-white'],\n       value : 'green',\n       description: 'color of the \"OK\" status message')\noption('urlify', type : 'boolean', value : true,\n       description : 'enable pager Hyperlink ANSI sequence support')\noption('fexecve', type : 'boolean', value : false,\n       description : 'use fexecve() to spawn children')\n\noption('oss-fuzz', type : 'boolean', value : false,\n       description : 'build against oss-fuzz')\noption('llvm-fuzz', type : 'boolean', value : false,\n       description : 'build against LLVM libFuzzer')\noption('kernel-install', type: 'boolean', value: true,\n       description : 'install kernel-install and associated files')\noption('ukify', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'install ukify')\noption('analyze', type: 'boolean', value: true,\n       description : 'install systemd-analyze')\n\noption('bpf-compiler', type : 'combo', choices : ['clang', 'gcc'],\n       description : 'compiler used to build BPF programs')\noption('bpf-framework', type : 'feature', deprecated : { 'true' : 'enabled', 'false' : 'disabled' },\n       description : 'build BPF programs from source code in restricted C')\noption('vmlinux-h', type : 'combo', choices : ['auto', 'provided', 'generated', 'disabled'],\n       description : 'which vmlinux.h to use')\noption('vmlinux-h-path', type : 'string', value : '',\n       description : 'path to vmlinux.h to use')\n\noption('default-mountfsd-trusted-directories', type : 'boolean', value: false,\n       description : 'controls whether mountfsd should apply a relaxed policy on DDIs in system DDI directories')\n"
        },
        {
          "name": "mime",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkosi.clangd",
          "type": "blob",
          "size": 0.7705078125,
          "content": "#!/bin/bash\n# SPDX-License-Identifier: LGPL-2.1-or-later\nset -e\n\nif command -v flatpak-spawn >/dev/null; then\n    SPAWN=(flatpak-spawn --host)\nelse\n    SPAWN=()\nfi\n\nMKOSI_CONFIG=\"$(\"${SPAWN[@]}\" mkosi --json summary | jq -r .Images[-1])\"\nDISTRIBUTION=\"$(jq -r .Distribution <<< \"$MKOSI_CONFIG\")\"\nRELEASE=\"$(jq -r .Release <<< \"$MKOSI_CONFIG\")\"\nARCH=\"$(jq -r .Architecture <<< \"$MKOSI_CONFIG\")\"\n\nexec \"${SPAWN[@]}\" mkosi \\\n    --incremental=strict \\\n    --build-sources-ephemeral=no \\\n    --format=none \\\n    build \\\n    clangd \\\n    --compile-commands-dir=/work/build \\\n    --path-mappings=\"\\\n$(pwd)=/work/src,\\\n$(pwd)/build/mkosi.builddir/$DISTRIBUTION~$RELEASE~$ARCH/=/work/build,\\\n$(pwd)/build/mkosi.cache/$DISTRIBUTION~$RELEASE~$ARCH~build.cache/usr/include/=/usr/include\" \\\n    \"$@\"\n\n"
        },
        {
          "name": "mkosi.clean",
          "type": "blob",
          "size": 0.1416015625,
          "content": "#!/bin/bash\n# SPDX-License-Identifier: LGPL-2.1-or-later\n\nset -e\nset -o nounset\n\nrm -f \"$OUTPUTDIR\"/*.{rpm,deb,pkg.tar} \"$OUTPUTDIR\"/systemd.raw\n"
        },
        {
          "name": "mkosi.conf",
          "type": "blob",
          "size": 3.4404296875,
          "content": "# SPDX-License-Identifier: LGPL-2.1-or-later\n\n[Config]\nMinimumVersion=25~devel\nDependencies=\n        exitrd\n        initrd\n        minimal-base\n        minimal-0\n        minimal-1\n\nPassEnvironment=\n        NO_BUILD\n        NO_SYNC\n        WIPE\n        SANITIZERS\n        CFLAGS\n        LDFLAGS\n        LLVM\n        MESON_VERBOSE\n        MESON_OPTIONS\n        SYSEXT\n        WITH_DEBUG\n        ASAN_OPTIONS\n        COVERAGE\n\n[Output]\nRepartDirectories=mkosi.repart\nOutputDirectory=build/mkosi.output\n\n[Build]\nToolsTree=default\nBuildDirectory=build/mkosi.builddir\nCacheDirectory=build/mkosi.cache\nBuildSourcesEphemeral=yes\nIncremental=yes\n\n[Validation]\nSignExpectedPcr=yes\n\n[Content]\nExtraTrees=\n        mkosi.extra.common\n        mkosi.crt:/usr/lib/verity.d/mkosi.crt # sysext verification key\n        %O/minimal-0.root-%a.raw:/usr/share/minimal_0.raw\n        %O/minimal-0.root-%a-verity.raw:/usr/share/minimal_0.verity\n        %O/minimal-0.root-%a-verity-sig.raw:/usr/share/minimal_0.verity.sig\n        %O/minimal-1.root-%a.raw:/usr/share/minimal_1.raw\n        %O/minimal-1.root-%a-verity.raw:/usr/share/minimal_1.verity\n        %O/minimal-1.root-%a-verity-sig.raw:/usr/share/minimal_1.verity.sig\n        %O/minimal-base:/usr/share/TEST-13-NSPAWN-container-template\n        %O/exitrd:/exitrd\n\nInitrds=%O/initrd\n\n# Disable relabeling by default as it only matters for TEST-06-SELINUX, takes a non-trivial amount of time\n# and results in lots of errors when building images as a regular user.\nSELinuxRelabel=no\n\n# Adding more kernel command line arguments is likely to hit the kernel command line limit (512 bytes) in\n# various scenarios. Consider adding support for a credential instead if possible and using that.\nKernelCommandLine=\n        systemd.crash_shell\n        systemd.log_level=debug,console:info\n        systemd.log_ratelimit_kmsg=0\n        # Disable the kernel's ratelimiting on userspace logging to kmsg.\n        printk.devkmsg=on\n        # Make sure /sysroot is mounted rw in the initrd.\n        rw\n        # Make sure no LSMs are enabled by default.\n        selinux=0\n        systemd.early_core_pattern=/core\n        systemd.firstboot=no\n        raid=noautodetect\n        oops=panic\n        panic=-1\n        softlockup_panic=1\n        # Disabled due to BTRFS issue, waiting for the fix to become available\n        panic_on_warn=0\n        psi=1\n\nKernelModulesInitrdExclude=.*\nKernelModulesInitrdInclude=default\n\nPackages=\n        acl\n        attr\n        bash-completion\n        binutils\n        coreutils\n        curl\n        diffutils\n        dnsmasq\n        dosfstools\n        e2fsprogs\n        findutils\n        gdb\n        grep\n        gzip\n        jq\n        kbd\n        kexec-tools\n        kmod\n        less\n        llvm\n        lsof\n        lvm2\n        man\n        mdadm\n        mtools\n        nano\n        nftables\n        nvme-cli\n        opensc\n        openssl\n        p11-kit\n        pciutils\n        python3\n        radvd\n        rsync\n        sed\n        socat\n        strace\n        tar\n        tmux\n        tree\n        util-linux\n        valgrind\n        which\n        wireguard-tools\n        xfsprogs\n        zsh\n        zstd\n\n[Runtime]\nCredentials=\n        journal.storage=persistent\n        tty.serial.hvc0.agetty.autologin=root\n        tty.serial.hvc0.login.noauth=yes\n        tty.console.agetty.autologin=root\n        tty.console.login.noauth=yes\nRuntimeBuildSources=yes\nRuntimeScratch=no\nCPUs=2\nTPM=yes\nVSock=yes\nKVM=yes\n\n[Include]\nInclude=%D/mkosi.sanitizers\n        %D/mkosi.coverage\n"
        },
        {
          "name": "mkosi.conf.d",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkosi.coverage",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkosi.extra.common",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkosi.extra",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkosi.functions",
          "type": "blob",
          "size": 1.21484375,
          "content": "# SPDX-License-Identifier: LGPL-2.1-or-later\n\nmake_sysext_unsigned() {\n    if ! ((SYSEXT)); then\n        return\n    fi\n\n    mkdir -p /usr/lib/systemd/repart/definitions/sysext-unsigned.repart.d\n    cat >/usr/lib/systemd/repart/definitions/sysext-unsigned.repart.d/10-root.conf <<EOF\n[Partition]\nType=root\nFormat=erofs\nCopyFiles=/usr/\nMinimize=best\nEOF\n\n    . /usr/lib/os-release\n\n    mkdir -p \"$1\"/usr/lib/extension-release.d\n    cat >\"$1\"/usr/lib/extension-release.d/extension-release.systemd <<EOF\nID=$ID\nSYSEXT_ID=systemd\nSYSEXT_SCOPE=system\nARCHITECTURE=$ARCHITECTURE\nEOF\n\n    if [[ -n \"$VERSION_ID\" ]]; then\n        cat >>\"$1\"/usr/lib/extension-release.d/extension-release.systemd <<EOF\nVERSION_ID=$VERSION_ID\nEOF\n    fi\n\n    if [[ -n \"$SYSEXT_LEVEL\" ]]; then\n        cat >>\"$1\"/usr/lib/extension-release.d/extension-release.systemd <<EOF\nSYSEXT_LEVEL=$SYSEXT_LEVEL\nEOF\n    fi\n\n    rm -f \"$BUILDDIR\"/systemd.raw\n\n    local fstype\n\n    if command -v mkfs.erofs; then\n        fstype=erofs\n    else\n        fstype=squashfs\n    fi\n\n    env SYSTEMD_REPART_OVERRIDE_FSTYPE_ROOT=\"$fstype\" \\\n    \"$BUILDDIR\"/systemd-repart \\\n        --make-ddi=sysext-unsigned \\\n        --copy-source=\"$1\" \\\n        --pretty=no \\\n        \"$BUILDDIR\"/systemd.raw\n}\n"
        },
        {
          "name": "mkosi.images",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkosi.postinst.chroot",
          "type": "blob",
          "size": 6.59765625,
          "content": "#!/bin/bash\n# SPDX-License-Identifier: LGPL-2.1-or-later\nset -e\nset -o nounset\n\nfind \"$BUILDDIR\" \\( -name \"*.rpm\" -o -name \"*.deb\" -o -name \"*.pkg.tar\" -o -name systemd.raw \\) -exec cp -t \"$OUTPUTDIR\" {} \\;\n\nuseradd \\\n    --uid 4711 \\\n    --user-group \\\n    --create-home \\\n    --password \"$(openssl passwd -1 testuser)\" \\\n    --shell /bin/bash \\\n    testuser\n\nif command -v authselect >/dev/null; then\n    # authselect 1.5.0 renamed the minimal profile to the local profile without keeping backwards compat so\n    # let's use the new name if it exists.\n    if [ -d /usr/share/authselect/default/local ]; then\n        PROFILE=local\n    else\n        PROFILE=minimal\n    fi\n\n    authselect select \"$PROFILE\"\n\n    if authselect list-features \"$PROFILE\" | grep -q \"with-systemd-homed\"; then\n        authselect enable-feature with-systemd-homed\n    fi\nfi\n\n# Let tmpfiles.d/systemd-resolve.conf handle the symlink. /etc/resolv.conf might be mounted over so undo that\n# if that's the case.\nmountpoint -q /etc/resolv.conf && umount /etc/resolv.conf\nrm -f /etc/resolv.conf\n\nfor f in \"$BUILDROOT\"/usr/share/*.verity.sig; do\n    jq --join-output '.rootHash' \"$f\" >\"${f%.verity.sig}.roothash\"\ndone\n\n# We want /var/log/journal to be created on first boot so it can be created with the right chattr settings by\n# systemd-journald.\nrm -rf \"$BUILDROOT/var/log/journal\"\n\nrm -f /etc/nsswitch.conf\ncp \"$SRCDIR/factory/etc/nsswitch.conf\" /etc/nsswitch.conf\n\n# Remove to make TEST-73-LOCALE pass on Ubuntu.\nrm -f /etc/default/keyboard\n\n# These don't ship proper units with [Install] directives so we have to mask them instead.\nsystemctl mask isc-dhcp-server.service\nsystemctl mask mdmonitor.service\n\n# This is executed inside the chroot so no need to disable any features as the default features will match\n# the kernel's supported features.\nSYSTEMD_REPART_MKFS_OPTIONS_EXT4=\"\" \\\n    systemd-repart \\\n    --empty=create \\\n    --dry-run=no \\\n    --size=auto \\\n    --offline=true \\\n    --root test/TEST-24-CRYPTSETUP \\\n    --definitions test/TEST-24-CRYPTSETUP/keydev.repart \\\n    \"$OUTPUTDIR/keydev.raw\"\n\ncan_test_pkcs11() {\n    if ! command -v \"softhsm2-util\" >/dev/null; then\n        echo \"softhsm2-util not available, skipping the PKCS#11 test\" >&2\n        return 1\n    fi\n    if ! command -v \"pkcs11-tool\" >/dev/null; then\n        echo \"pkcs11-tool not available, skipping the PKCS#11 test\" >&2\n        return 1\n    fi\n    if ! command -v \"certtool\" >/dev/null; then\n        echo \"certtool not available, skipping the PKCS#11 test\" >&2\n        return 1\n    fi\n    if ! systemctl --version | grep -q \"+P11KIT\"; then\n        echo \"Support for p11-kit is disabled, skipping the PKCS#11 test\" >&2\n        return 1\n    fi\n    if ! systemctl --version | grep -q \"+OPENSSL\"; then\n        echo \"Support for openssl is disabled, skipping the PKCS#11 test\" >&2\n        return 1\n    fi\n    if ! systemctl --version | grep -q \"+LIBCRYPTSETUP\\b\"; then\n        echo \"Support for libcryptsetup is disabled, skipping the PKCS#11 test\" >&2\n        return 1\n    fi\n    if ! systemctl --version | grep -q \"+LIBCRYPTSETUP_PLUGINS\"; then\n        echo \"Support for libcryptsetup plugins is disabled, skipping the PKCS#11 test\" >&2\n        return 1\n    fi\n\n    return 0\n}\n\nsetup_pkcs11_token() {\n    echo \"Setup PKCS#11 token\" >&2\n    local P11_MODULE_CONFIGS_DIR P11_MODULE_DIR SOFTHSM_MODULE\n\n    export SOFTHSM2_CONF=\"/tmp/softhsm2.conf\"\n    mkdir -p /usr/lib/softhsm/tokens/\n    cat >$SOFTHSM2_CONF <<EOF\ndirectories.tokendir = /usr/lib/softhsm/tokens/\nobjectstore.backend = file\nslots.removable = false\nslots.mechanisms = ALL\nEOF\n    export GNUTLS_PIN=\"1234\"\n    export GNUTLS_SO_PIN=\"12345678\"\n    softhsm2-util --init-token --free --label \"TestToken\" --pin \"$GNUTLS_PIN\" --so-pin \"$GNUTLS_SO_PIN\"\n\n    if ! P11_MODULE_CONFIGS_DIR=$(pkg-config --variable=p11_module_configs p11-kit-1); then\n        echo \"WARNING! Cannot get p11_module_configs from p11-kit-1.pc, assuming /usr/share/p11-kit/modules\" >&2\n        P11_MODULE_CONFIGS_DIR=\"/usr/share/p11-kit/modules\"\n    fi\n\n    if ! P11_MODULE_DIR=$(pkg-config --variable=p11_module_path p11-kit-1); then\n        echo \"WARNING! Cannot get p11_module_path from p11-kit-1.pc, assuming /usr/lib/pkcs11\" >&2\n        P11_MODULE_DIR=\"/usr/lib/pkcs11\"\n    fi\n\n    SOFTHSM_MODULE=$(grep -F 'module:' \"$P11_MODULE_CONFIGS_DIR/softhsm2.module\"| cut -d ':' -f 2| xargs)\n    if [[ \"$SOFTHSM_MODULE\" =~ ^[^/] ]]; then\n        SOFTHSM_MODULE=\"$P11_MODULE_DIR/$SOFTHSM_MODULE\"\n    fi\n\n    # RSA #####################################################\n    pkcs11-tool --module \"$SOFTHSM_MODULE\" --token-label \"TestToken\" --pin \"env:GNUTLS_PIN\" --so-pin \"env:GNUTLS_SO_PIN\" --keypairgen --key-type \"RSA:2048\" --label \"RSATestKey\" --usage-decrypt\n\n    certtool --generate-self-signed \\\n      --load-privkey=\"pkcs11:token=TestToken;object=RSATestKey;type=private\" \\\n      --load-pubkey=\"pkcs11:token=TestToken;object=RSATestKey;type=public\" \\\n      --template \"test/TEST-24-CRYPTSETUP/template.cfg\" \\\n      --outder --outfile \"/tmp/rsa_test.crt\"\n\n    pkcs11-tool --module \"$SOFTHSM_MODULE\" --token-label \"TestToken\" --pin \"env:GNUTLS_PIN\" --so-pin \"env:GNUTLS_SO_PIN\" --write-object \"/tmp/rsa_test.crt\" --type cert --label \"RSATestKey\"\n    rm \"/tmp/rsa_test.crt\"\n\n    # prime256v1 ##############################################\n    pkcs11-tool --module \"$SOFTHSM_MODULE\" --token-label \"TestToken\" --pin \"env:GNUTLS_PIN\" --so-pin \"env:GNUTLS_SO_PIN\" --keypairgen --key-type \"EC:prime256v1\" --label \"ECTestKey\" --usage-derive\n\n    certtool --generate-self-signed \\\n      --load-privkey=\"pkcs11:token=TestToken;object=ECTestKey;type=private\" \\\n      --load-pubkey=\"pkcs11:token=TestToken;object=ECTestKey;type=public\" \\\n      --template \"test/TEST-24-CRYPTSETUP/template.cfg\" \\\n      --outder --outfile \"/tmp/ec_test.crt\"\n\n    pkcs11-tool --module \"$SOFTHSM_MODULE\" --token-label \"TestToken\" --pin \"env:GNUTLS_PIN\" --so-pin \"env:GNUTLS_SO_PIN\" --write-object \"/tmp/ec_test.crt\" --type cert --label \"ECTestKey\"\n    rm \"/tmp/ec_test.crt\"\n\n    ###########################################################\n    rm \"$SOFTHSM2_CONF\"\n    unset SOFTHSM2_CONF\n\n    cat >/etc/softhsm2.conf <<EOF\ndirectories.tokendir = /usr/lib/softhsm/tokens/\nobjectstore.backend = file\nslots.removable = false\nslots.mechanisms = ALL\nlog.level = INFO\nEOF\n\n    mkdir -p /etc/systemd/system/systemd-cryptsetup@.service.d\n    cat >/etc/systemd/system/systemd-cryptsetup@.service.d/PKCS11.conf <<EOF\n[Unit]\n# Make sure we can start systemd-cryptsetup@empty_pkcs11_auto.service many times\nStartLimitBurst=10\n\n[Service]\nEnvironment=\"SOFTHSM2_CONF=/etc/softhsm2.conf\"\nEnvironment=\"PIN=$GNUTLS_PIN\"\nEOF\n\n    unset GNUTLS_PIN\n    unset GNUTLS_SO_PIN\n}\n\nif can_test_pkcs11; then\n    setup_pkcs11_token\nfi\n"
        },
        {
          "name": "mkosi.repart",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkosi.sanitizers",
          "type": "tree",
          "content": null
        },
        {
          "name": "mkosi.uki-profiles",
          "type": "tree",
          "content": null
        },
        {
          "name": "modprobe.d",
          "type": "tree",
          "content": null
        },
        {
          "name": "mypy.ini",
          "type": "blob",
          "size": 0.5576171875,
          "content": "[mypy]\npython_version = 3.9\n# belonging to --strict\nwarn_unused_configs = true\ndisallow_any_generics = true\ndisallow_subclassing_any = true\ndisallow_untyped_calls = true\ndisallow_untyped_defs = true\ndisallow_untyped_decorators = true\ndisallow_incomplete_defs = true\ncheck_untyped_defs = true\nno_implicit_optional = true\nwarn_redundant_casts = true\nwarn_unused_ignores = false\nwarn_return_any = true\nno_implicit_reexport = true\n# extra options not in --strict\npretty = true\nshow_error_codes = true\nshow_column_numbers = true\nwarn_unreachable = true\nstrict_equality = true\n"
        },
        {
          "name": "network",
          "type": "tree",
          "content": null
        },
        {
          "name": "po",
          "type": "tree",
          "content": null
        },
        {
          "name": "presets",
          "type": "tree",
          "content": null
        },
        {
          "name": "profile.d",
          "type": "tree",
          "content": null
        },
        {
          "name": "ruff.toml",
          "type": "blob",
          "size": 0.1083984375,
          "content": "target-version = \"py39\"\nline-length = 109\nlint.select = [\"E\", \"F\", \"I\", \"UP\"]\n\n[format]\nquote-style = \"single\"\n"
        },
        {
          "name": "rules.d",
          "type": "tree",
          "content": null
        },
        {
          "name": "shell-completion",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "sysctl.d",
          "type": "tree",
          "content": null
        },
        {
          "name": "sysusers.d",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tmpfiles.d",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "units",
          "type": "tree",
          "content": null
        },
        {
          "name": "xorg",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}