{
  "metadata": {
    "timestamp": 1736710391930,
    "page": 7,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "taosdata/TDengine",
      "stars": 23513,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 2.5615234375,
          "content": "---\nLanguage:        Cpp\n# BasedOnStyle:  Google\nAccessModifierOffset: -1\nAlignAfterOpenBracket: Align\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: true\nAlignConsecutiveMacros: true\nAlignEscapedNewlinesLeft: true\nAlignOperands:   true\nAlignTrailingComments: true\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortBlocksOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: All\nAllowShortIfStatementsOnASingleLine: true\nAllowShortLoopsOnASingleLine: true\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: true\nAlwaysBreakTemplateDeclarations: true\nBinPackArguments: true\nBinPackParameters: true\nBraceWrapping:   \n  AfterClass:      false\n  AfterControlStatement: false\n  AfterEnum:       false\n  AfterFunction:   false\n  AfterNamespace:  false\n  AfterObjCDeclaration: false\n  AfterStruct:     false\n  AfterUnion:      false\n  BeforeCatch:     false\n  BeforeElse:      false\n  IndentBraces:    false\nBreakBeforeBinaryOperators: None\nBreakBeforeBraces: Attach\nBreakBeforeTernaryOperators: true\nBreakConstructorInitializersBeforeComma: false\nColumnLimit:     120\nCommentPragmas:  '^ IWYU pragma:'\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nConstructorInitializerIndentWidth: 4\nContinuationIndentWidth: 4\nCpp11BracedListStyle: true\nDerivePointerAlignment: true\nDisableFormat:   false\nExperimentalAutoDetectBinPacking: false\nForEachMacros:   [ foreach, Q_FOREACH, BOOST_FOREACH ]\nIncludeCategories: \n  - Regex:           '^<.*\\.h>'\n    Priority:        1\n  - Regex:           '^<.*'\n    Priority:        2\n  - Regex:           '.*'\n    Priority:        3\nIndentCaseLabels: true\nIndentWidth:     2\nIndentWrappedFunctionNames: false\nKeepEmptyLinesAtTheStartOfBlocks: false\nMacroBlockBegin: ''\nMacroBlockEnd:   ''\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nObjCBlockIndentWidth: 2\nObjCSpaceAfterProperty: false\nObjCSpaceBeforeProtocolList: false\nPenaltyBreakBeforeFirstCallParameter: 1\nPenaltyBreakComment: 300\nPenaltyBreakFirstLessLess: 120\nPenaltyBreakString: 1000\nPenaltyExcessCharacter: 1000000\nPenaltyReturnTypeOnItsOwnLine: 200\nPointerAlignment: Right\nReflowComments:  true\nSortIncludes:    true\nSpaceAfterCStyleCast: false\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeParens: ControlStatements\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 2\nSpacesInAngles:  false\nSpacesInContainerLiterals: true\nSpacesInCStyleCastParentheses: false\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard:        Auto\nTabWidth:        8\nUseTab:          Never\n...\n"
        },
        {
          "name": ".codecov.yml",
          "type": "blob",
          "size": 0.2275390625,
          "content": "coverage:\n  precision: 2\n  notify:\n    email:\n      default:\n        to:\n          - sdsang@taosdata.com\n          - &author\n        only_pulls: false\n        layout: reach, diff, flags, files\n        flags: null\n        paths: null\n"
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0302734375,
          "content": "*.py linguist-detectable=false\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.708984375,
          "content": "*build/\ncompile_commands.json\nCMakeSettings.json\n.cache\n.ycm_extra_conf.py\n.tasks\n.vimspector.json\n.vscode/\n.vscode\n.idea/\ncmake-build-debug/\ncmake-build-release/\ncscope.out\ncscope.files\n.DS_Store\ndebug/\nrelease/\ntarget/\ndebs/\nrpms/\nmac/\n*.pyc\n.mypy_cache\n*.tmp\n*.swp\n*.swo\n*.orig\nsrc/connector/nodejs/node_modules/\nsrc/connector/nodejs/out/\ntests/taoshebei/\ntests/taoscsv/\ntests/taosdalipu/\ntests/jenkins/\ntests/hdfs/\n*.iml\n*.class\nnmake/\nsln/\nhdfs/\ntaoshebei/\ntaosdalipu/\nTarget/\n*.failed\n*.sql\nsim\nsim/\npsim/\npysim/\n*.out\n*DS_Store\ntests/script/api/batchprepare\ntaosadapter\ntaosadapter-debug\ntools/taos-tools/*\ntools/taosws-rs/*\ntools/taosadapter/*\ntools/upx*\n\n# Doxygen Generated files\nhtml/\n/.vs\n/CMakeFiles/3.10.2\n/CMakeCache.txt\n/Makefile\n/*.cmake\n/src/cq/test/CMakeFiles/cqtest.dir/*.cmake\n*.cmake\n/src/cq/test/CMakeFiles/cqtest.dir/*.make\n*.make\nlink.txt\n*.internal\n*.includecache\n*.marks\nMakefile\nCMakeError.log\n*.log\n/CMakeFiles/CMakeRuleHashes.txt\n/CMakeFiles/Makefile2\n/CMakeFiles/TargetDirectories.txt\n/CMakeFiles/cmake.check_cache\n/out/isenseconfig/WSL-Clang-Debug\n/out/isenseconfig/WSL-GCC-Debug\n/test/cfg\n/src/.vs\n*.o\nversion.c\ntaos.rc\nsrc/connector/jdbc/.classpath\nsrc/connector/jdbc/.project\nsrc/connector/jdbc/.settings/\ntests/comparisonTest/cassandra/cassandratest/.classpath\ntests/comparisonTest/cassandra/cassandratest/.project\ntests/comparisonTest/cassandra/cassandratest/.settings/\ntests/comparisonTest/opentsdb/opentsdbtest/.classpath\ntests/comparisonTest/opentsdb/opentsdbtest/.factorypath\ntests/comparisonTest/opentsdb/opentsdbtest/.project\ntests/comparisonTest/opentsdb/opentsdbtest/.settings/\ntests/examples/JDBC/JDBCDemo/.classpath\ntests/examples/JDBC/JDBCDemo/.project\ntests/examples/JDBC/JDBCDemo/.settings/\nsource/libs/parser/inc/sql.*\nsource/os/src/timezone/\ntests/script/tmqResult.txt\ntests/system-test/case_to_run.txt\ntests/develop-test/case_to_run.txt\ntests/scripts/case_to_run.txt\ntests/tmqResult.txt\ntests/script/jenkins/basic.txt\n\n# Emacs\n# -*- mode: gitignore; -*-\n*~\n\\#*\\#\n/.emacs.desktop\n/.emacs.desktop.lock\n*.elc\nauto-save-list\ntramp\n.\\#*\nTAGS\n\ncontrib/*\n!contrib/CMakeLists.txt\n!contrib/test\n!contrib/azure-cmake\nsql\ndebug*/\n.env\ntools/README\ntools/LICENSE\ntools/README.1ST\ntools/THANKS\ntools/NEWS\ntools/COPYING\ntools/BUGS\ntools/taos-tools\ntools/taosws-rs\ntags\n.clangd\n*CMakeCache*\n*CMakeFiles*\n.history/\n*.txt\n*.tcl\n*.pc\ncontrib/geos\ncontrib/libuv\ncontrib/pcre2\ncontrib/zlib\ndeps_tmp_CMakeLists.txt.in\n*.a\n*.ctest\npcre2-config\npcre2_test.sh\npcre2_grep_test.sh\npcre2_chartables.c\ngeos-config\nconfig.h\npcre2.h\nzconf.h\nversion.h\ngeos_c.h\nsource/libs/parser/src/sql.c\ninclude/common/ttokenauto.h\n!packaging/smokeTest/pytest_require.txt\ntdengine-test-dir/\nlocaltime.c\nprivate.h\nstrftime.c\ntzdir.h\ntzfile.h\ncoverage.info\ntaos\ntaosd\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.521484375,
          "content": "repos:\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v2.3.0\n    hooks:\n      - id: check-yaml\n      - id: check-json\n      - id: end-of-file-fixer\n      - id: trailing-whitespace\n\nrepos:\n  - repo: https://github.com/psf/black\n    rev: stable\n    hooks:\n      - id: black\n\nrepos:\n  - repo: https://github.com/pocc/pre-commit-hooks\n    rev: master\n    hooks:\n      - id: cppcheck\n        args: [\"--error-exitcode=0\"]\n\nrepos:\n  - repo: https://github.com/crate-ci/typos\n    rev: v1.15.7\n    hooks:\n      - id: typos\n\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 1.015625,
          "content": "cmake_minimum_required(VERSION 3.0)\n\nproject(\n  TDengine\n  VERSION 3.0\n  DESCRIPTION \"An open-source big data platform designed and optimized for the Internet of Things(IOT)\"\n)\n\nif(NOT DEFINED TD_SOURCE_DIR)\n  set(TD_SOURCE_DIR ${PROJECT_SOURCE_DIR})\nendif()\n\nSET(TD_COMMUNITY_DIR ${PROJECT_SOURCE_DIR})\n\nset(TD_SUPPORT_DIR \"${TD_SOURCE_DIR}/cmake\")\nset(TD_CONTRIB_DIR \"${TD_SOURCE_DIR}/contrib\")\n\ninclude(${TD_SUPPORT_DIR}/cmake.platform)\ninclude(${TD_SUPPORT_DIR}/cmake.define)\ninclude(${TD_SUPPORT_DIR}/cmake.options)\ninclude(${TD_SUPPORT_DIR}/cmake.version)\n\n# contrib\nadd_subdirectory(contrib)\n\nset_property(GLOBAL PROPERTY GLOBAL_DEPENDS_NO_CYCLES OFF)\n\n# api\nadd_library(api INTERFACE)\ntarget_include_directories(api INTERFACE \"include/client\")\n\n# src\nif(${BUILD_TEST})\n  include(CTest)\n  enable_testing()\nendif(${BUILD_TEST})\n\nadd_subdirectory(source)\nadd_subdirectory(tools)\nadd_subdirectory(utils)\nadd_subdirectory(examples/c)\nadd_subdirectory(tests)\ninclude(${TD_SUPPORT_DIR}/cmake.install)\n\n# docs\nadd_subdirectory(docs/doxgen)\n"
        },
        {
          "name": "CODE_OF_CONDUCT-CN.md",
          "type": "blob",
          "size": 2.5732421875,
          "content": "# 贡献者契约行为准则\n\n[![Contributor Covenant](https://img.shields.io/badge/Contributor%20Covenant-v1.4%20adopted-ff69b4.svg)](code_of_conduct.md)\n\n## 我们的承诺\n\n为了营造一个开放和热情的环境，作为贡献者和维护者，我们承诺让每个人参与我们的项目和社区成为一种无骚扰的体验，无论年龄、体型、残疾、种族、性别特征、性别认同和表达、经验水平、教育、社会经济地位、国籍、个人外表、种族、宗教或性认同和取向如何。\n\n## 我们的标准\n\n有助于创造积极环境的行为示例包括：\n\n- 使用热情和包容的语言\n- 尊重不同的观点和经历\n- 优雅地接受建设性的批评\n- 专注于对社区最有利的事情 \n- 对其他社区成员表示同情\n\n参与者不可接受的行为示例包括：\n\n- 使用性感的语言或图像以及不受欢迎的性关注或进步\n- 拖钓、侮辱/贬损评论以及人身或政治攻击\n- 公共或私人骚扰\n- 未经明确许可发布他人的私人信息，例如物理地址或电子地址\n- 在专业环境中可能被合理认为不适当的其他行为\n\n## 我们的责任\n\n项目维护人员负责阐明可接受行为的标准，并期望针对任何不可接受行为的情况采取适当和公平的纠正措施。\n\n项目维护者有权利和责任删除、编辑或拒绝评论、提交、代码、wiki 编辑、问题和其他不符合本行为准则的贡献，或暂时或永久禁止任何贡献者从事他们认为不适当、威胁、冒犯或有害的其他行为。\n\n## 范围\n\n本行为准则适用于所有项目空间，也适用于个人在公共场所代表项目或其社区时。 代表项目或社区的示例包括使用官方项目电子邮件地址、通过官方社交媒体帐户发布信息或在在线或离线活动中担任指定代表。 项目的表示可以由项目维护者进一步定义和澄清。\n\n## 执法\n\n可以通过 support@taosdata.com 联系项目团队来报告辱骂、骚扰或其他不可接受的行为。 所有投诉都将被审查和调查，并将产生被认为必要且适合具体情况的回应。 项目团队有义务对事件的报告者保密。 具体执行政策的更多细节可能会单独发布。\n\n不善意遵守或执行行为准则的项目维护者可能会面临由项目领导的其他成员确定的临时或永久影响。\n\n## 来源\n\n本行为准则改编自贡献者公约 1.4 版，可在 https://www.contributor-covenant.org/version/1/4/code-of-conduct.html 获取\n\n有关此行为准则的常见问题的答案，请参阅 https://www.contributor-covenant.org/faq"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.4150390625,
          "content": "# Contributor Covenant Code of Conduct\n[![Contributor Covenant](https://img.shields.io/badge/Contributor%20Covenant-v1.4%20adopted-ff69b4.svg)](code_of_conduct.md)\n\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies within all project spaces, and it also applies when\nan individual is representing the project or its community in public spaces.\nExamples of representing a project or community include using an official\nproject e-mail address, posting via an official social media account, or acting\nas an appointed representative at an online or offline event. Representation of\na project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at support@taosdata.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n"
        },
        {
          "name": "CONTRIBUTING-CN.md",
          "type": "blob",
          "size": 2.390625,
          "content": "# 贡献指南\n\n我们感谢所有开发者提交贡献。随时关注我们，Fork 存储库，报告错误，以及在 GitHub 上提交您的代码。但是，我们希望开发者遵循我们的指南，才能更好的做出贡献。\n\n## 报告错误\n\n- 任何用户都可以通过 **[GitHub issue tracker](https://github.com/taosdata/TDengine/issues)** 向我们报告错误。请您对所遇到的问题进行**详细描述**，最好提供重现错误的详细步骤。\n- 欢迎提供包含由 Bug 生成的日志文件的附录。\n\n## 代码提交规则\n\n1. 在提交代码之前，需要**同意贡献者许可协议（CLA）**。点击 [TaosData CLA](https://cla-assistant.io/taosdata/TDengine) 阅读并签署协议。如果您不接受该协议，请停止提交。\n2. 请在 [GitHub issue tracker](https://github.com/taosdata/TDengine/issues) 中解决问题或添加注册功能。\n   如果在 [GitHub issue tracker](https://github.com/taosdata/TDengine/issues) 中没有找到相应的问题或功能，请**创建一个新的 issue**。\n   将代码提交到我们的存储库时，请创建**包含问题编号的 PR**。\n3. 将TDengine仓库库fork到自己的账户中并创建分支(branch)。\n   注意：默认分支`main`不能直接接受PR，请基于开发分支`3.0`创建自己的分支。\n   注意：修改文档的分支要以`docs/`为开头，以免进行不必要的测试。\n4. 创建pull request，将自己的分支合并到开发分支`3.0`，我们开发团队将尽快审核。\n\n如遇任何问题，请添加官方微信 tdengine1。我们的团队会帮忙解决。\n\n## 给贡献者的礼品\n\n只要您是为 TDengine 做贡献的开发者，不管是代码贡献、修复 bug 或功能请求，还是文档更改，您都将会获得一份**特别的贡献者纪念品礼物**！\n\n<p align=\"left\">\n  <img\n    src=\"docs/assets/contributing-cup.jpg\"\n    alt=\"\"\n    width=\"200\"\n  />\n  <img\n    src=\"docs/assets/contributing-notebook.jpg\"\n    alt=\"\"\n    width=\"200\"\n  />\n  <img\n    src=\"docs/assets/contributing-shirt.jpg\"\n    alt=\"\"\n    width=\"200\"\n    />\n\nTDengine 社区致力于让更多的开发者理解和使用它。\n请填写**贡献者提交表**以选择您想收到的礼物。\n\n- [贡献者提交表](https://page.ma.scrmtech.com/form/index?pf_uid=27715_2095&id=12100)\n\n## 联系我们\n\n如果您有什么问题需要解决，或者有什么问题需要解答，可以添加微信：tdengine1。\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.2587890625,
          "content": "# Contributing to TDengine\n\nTDengine Community Edition is free, open-source software. Its development is led by the TDengine Team, but we welcome contributions from all community members and open-source developers. This document describes how you can contribute, no matter whether you're a user or a developer yourself.\n\n## Bug reports\n\nAll users can report bugs to us through the **[GitHub issue tracker](https://github.com/taosdata/TDengine/issues)**. To ensure that the development team can locate and resolve the issue that you experienced, please include the following in your bug report:\n\n- A detailed description of the issue, including the steps to reproduce it.\n- Any log files that may be relevant to the issue.\n\n## Code contributions\n\nDevelopers are encouraged to submit patches to the project, and all contributions, from minor documentation changes to bug fixes, are appreciated by our team. To ensure that your code can be merged successfully and improve the experience for other community members, we ask that you go through the following procedure before submitting a pull request: \n\n1. Read and accept the terms of the TAOS Data Contributor License Agreement (CLA) located at [https://cla-assistant.io/taosdata/TDengine](https://cla-assistant.io/taosdata/TDengine).\n\n2. For bug fixes, search the [GitHub issue tracker](https://github.com/taosdata/TDengine/issues) to check whether the bug has already been filed.\n   - If the bug that you want to fix already exists in the issue tracker, review the previous discussion before submitting your patch.\n   - If the bug that you want to fix does not exist in the issue tracker, click **New issue** and file a report.\n   - Ensure that you note the issue number in your pull request when you submit your patch.\n\t\n3. Fork our repository to your GitHub account and create a branch for your patch.\n   **Important:** The `main` branch is for stable versions and cannot accept patches directly. For all code and documentation changes, create your own branch from the development branch `3.0` and not from `main`.\n   Note: For a documentation change, ensure that the branch name starts with `docs/` so that the change can be merged without running tests.\n   \n4. Create a pull request to merge your changes into the development branch `3.0`, and our team members will review the request as soon as possible.\n\nIf you encounter any difficulties or problems in contributing your code, you can join our [Discord server](https://discord.com/invite/VZdSuUg4pS) and receive assistance from members of the TDengine Team.\n\n## Expressing our thanks\n\nTo thank community members for your support, we are offering a free gift to any developer who submits at least one contribution. You can choose one of the following items:\n\n<p align=\"left\">\n  <img\n    src=\"docs/assets/contributing-cup.jpg\"\n    alt=\"\"\n    width=\"200\"\n  />\n  <img\n    src=\"docs/assets/contributing-notebook.jpg\"\n    alt=\"\"\n    width=\"200\"\n  />\n  <img\n    src=\"docs/assets/contributing-shirt.jpg\"\n    alt=\"\"\n    width=\"200\"\n    />\n\nIf you would like to claim your gift, send an email to [developer@tdengine.com](mailto:developer@tdengine.com?subject=Claiming&20my%20developer%20gift) including the following information:\n\n- Your GitHub account name\n- Your name and mailing address\n- Your preferred gift\n\nNote: Limit one per person."
        },
        {
          "name": "Jenkinsfile",
          "type": "blob",
          "size": 6.455078125,
          "content": "import hudson.model.Result\nimport hudson.model.*;\nimport jenkins.model.CauseOfInterruption\nnode {\n}\n\ndef skipbuild=0\ndef win_stop=0\n\ndef abortPreviousBuilds() {\n  def currentJobName = env.JOB_NAME\n  def currentBuildNumber = env.BUILD_NUMBER.toInteger()\n  def jobs = Jenkins.instance.getItemByFullName(currentJobName)\n  def builds = jobs.getBuilds()\n\n  for (build in builds) {\n    if (!build.isBuilding()) {\n      continue;\n    }\n\n    if (currentBuildNumber == build.getNumber().toInteger()) {\n      continue;\n    }\n\n    build.doKill()    //doTerm(),doKill(),doTerm()\n  }\n}\n//  abort previous build\nabortPreviousBuilds()\ndef abort_previous(){\n  def buildNumber = env.BUILD_NUMBER as int\n  if (buildNumber > 1) milestone(buildNumber - 1)\n  milestone(buildNumber)\n}\ndef pre_test(){\n    sh'hostname'\n    sh '''\n    sudo rmtaos || echo \"taosd has not installed\"\n    '''\n    sh '''\n    killall -9 taosd ||echo \"no taosd running\"\n    killall -9 gdb || echo \"no gdb running\"\n    killall -9 python3.8 || echo \"no python program running\"\n    cd ${WKC}\n    '''\n    script {\n      if (env.CHANGE_TARGET == 'master') {\n        sh '''\n        cd ${WKC}\n        git checkout master\n        '''\n        }\n      else if(env.CHANGE_TARGET == '2.0'){\n        sh '''\n        cd ${WKC}\n        git checkout 2.0\n        '''\n      }\n      else if(env.CHANGE_TARGET == '3.0'){\n        sh '''\n        cd ${WKC}\n        git checkout 3.0\n        '''\n      } \n      else{\n        sh '''\n        cd ${WKC}\n        git checkout develop\n        '''\n      }\n    }\n    sh'''\n    cd ${WKC}\n    git pull >/dev/null\n    git fetch origin +refs/pull/${CHANGE_ID}/merge\n    git checkout -qf FETCH_HEAD\n    export TZ=Asia/Harbin\n    date\n    rm -rf debug\n    mkdir debug\n    cd debug\n    cmake .. -DBUILD_TEST=true > /dev/null\n    make -j4> /dev/null\n\n    '''\n    return 1\n}\n\npipeline {\n  agent none\n  options { skipDefaultCheckout() } \n  environment{\n      WK = '/var/lib/jenkins/workspace/TDinternal'\n      WKC= '/var/lib/jenkins/workspace/TDengine'\n  }\n  stages {\n      stage('pre_build'){\n          agent{label 'slave3_0'}\n          options { skipDefaultCheckout() } \n          when {\n              changeRequest()\n          }\n          steps {\n            script{\n              abort_previous()\n              abortPreviousBuilds()\n            }\n            timeout(time: 45, unit: 'MINUTES'){\n              pre_test()\n              sh'''\n              cd ${WKC}/tests\n              ./test-all.sh b1fq\n              '''\n              sh'''\n              cd ${WKC}/debug\n              ctest -VV\n              '''\n            }\n          }\n      }\n  }\n  post {  \n        success {\n            emailext (\n                subject: \"PR-result: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' SUCCESS\",\n                body: \"\"\"<!DOCTYPE html>\n                <html>\n                <head>\n                <meta charset=\"UTF-8\">\n                </head>\n                <body leftmargin=\"8\" marginwidth=\"0\" topmargin=\"8\" marginheight=\"4\" offset=\"0\">\n                    <table width=\"95%\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 16pt; font-family: Tahoma, Arial, Helvetica, sans-serif\">\n                        <tr>\n                            <td><br />\n                                <b><font color=\"#0B610B\"><font size=\"6\">构建信息</font></font></b>\n                                <hr size=\"2\" width=\"100%\" align=\"center\" /></td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <ul>\n                                <div style=\"font-size:18px\">\n                                    <li>构建名称>>分支：${env.BRANCH_NAME}</li>\n                                    <li>构建结果：<span style=\"color:green\"> Successful </span></li>\n                                    <li>构建编号：${BUILD_NUMBER}</li>\n                                    <li>触发用户：${env.CHANGE_AUTHOR}</li>\n                                    <li>提交信息：${env.CHANGE_TITLE}</li>\n                                    <li>构建地址：<a href=${BUILD_URL}>${BUILD_URL}</a></li>\n                                    <li>构建日志：<a href=${BUILD_URL}console>${BUILD_URL}console</a></li>\n                                    \n                                </div>\n                                </ul>\n                            </td>\n                        </tr>\n                    </table></font>\n                </body>\n                </html>\"\"\",\n                to: \"${env.CHANGE_AUTHOR_EMAIL}\",\n                from: \"support@taosdata.com\"\n            )\n        }\n        failure {\n            emailext (\n                subject: \"PR-result: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' FAIL\",\n                body: \"\"\"<!DOCTYPE html>\n                <html>\n                <head>\n                <meta charset=\"UTF-8\">\n                </head>\n                <body leftmargin=\"8\" marginwidth=\"0\" topmargin=\"8\" marginheight=\"4\" offset=\"0\">\n                    <table width=\"95%\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 16pt; font-family: Tahoma, Arial, Helvetica, sans-serif\">\n                        <tr>\n                            <td><br />\n                                <b><font color=\"#0B610B\"><font size=\"6\">构建信息</font></font></b>\n                                <hr size=\"2\" width=\"100%\" align=\"center\" /></td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <ul>\n                                <div style=\"font-size:18px\">\n                                    <li>构建名称>>分支：${env.BRANCH_NAME}</li>\n                                    <li>构建结果：<span style=\"color:red\"> Failure </span></li>\n                                    <li>构建编号：${BUILD_NUMBER}</li>\n                                    <li>触发用户：${env.CHANGE_AUTHOR}</li>\n                                    <li>提交信息：${env.CHANGE_TITLE}</li>\n                                    <li>构建地址：<a href=${BUILD_URL}>${BUILD_URL}</a></li>\n                                    <li>构建日志：<a href=${BUILD_URL}console>${BUILD_URL}console</a></li>\n                                    \n                                </div>\n                                </ul>\n                            </td>\n                        </tr>\n                    </table></font>\n                </body>\n                </html>\"\"\",\n                to: \"${env.CHANGE_AUTHOR_EMAIL}\",\n                from: \"support@taosdata.com\"\n            )\n        }\n    } \n}\n"
        },
        {
          "name": "Jenkinsfile2",
          "type": "blob",
          "size": 24.41796875,
          "content": "import hudson.model.Result\nimport hudson.model.*;\nimport jenkins.model.CauseOfInterruption\nnode {\n}\nfile_zh_changed = ''\nfile_en_changed = ''\nfile_no_doc_changed = '1'\nfile_only_tdgpt_change_except = '1'\ntdgpt_file = \"forecastoperator.c|anomalywindowoperator.c|tanalytics.h|tanalytics.c|tdgpt_cases.task|analytics\"\n\n\ndef abortPreviousBuilds() {\n    def currentJobName = env.JOB_NAME\n    def currentBuildNumber = env.BUILD_NUMBER.toInteger()\n    def jobs = Jenkins.instance.getItemByFullName(currentJobName)\n    def builds = jobs.getBuilds()\n\n    for (build in builds) {\n        if (!build.isBuilding()) {\n            continue;\n        }\n\n        if (currentBuildNumber == build.getNumber().toInteger()) {\n            continue;\n        }\n\n        build.doKill()    //doTerm(),doKill(),doTerm()\n    }\n}\n//  abort previous build\nabortPreviousBuilds()\ndef abort_previous(){\n    def buildNumber = env.BUILD_NUMBER as int\n    if (buildNumber > 1) milestone(buildNumber - 1)\n    milestone(buildNumber)\n}\ndef check_docs(){\n    if (env.CHANGE_URL =~ /\\/TDengine\\//) {\n        sh '''\n            hostname\n            date\n            env\n        '''\n        sh '''\n            cd ${WKC}\n            git reset --hard\n            git clean -f\n            git remote prune origin\n            git fetch\n            git checkout ''' + env.CHANGE_TARGET + '''\n            git pull >/dev/null\n            git fetch origin +refs/pull/${CHANGE_ID}/merge\n            git checkout -qf FETCH_HEAD \n        '''\n\n        file_zh_changed = sh (\n            script: '''\n                cd ${WKC}\n                git --no-pager diff --name-only FETCH_HEAD `git merge-base FETCH_HEAD ${CHANGE_TARGET}`|grep  \"^docs/zh/\" || :\n            ''',\n            returnStdout: true\n        )\n\n        file_en_changed = sh (\n            script: '''\n                cd ${WKC}\n                git --no-pager diff --name-only FETCH_HEAD `git merge-base FETCH_HEAD ${CHANGE_TARGET}`|grep  \"^docs/en/\" || :\n            ''',\n            returnStdout: true\n        )\n        \n        def file_no_doc_changed = sh (\n            script: '''\n                cd ${WKC}\n                git --no-pager diff --name-only FETCH_HEAD `git merge-base FETCH_HEAD ${CHANGE_TARGET}`|grep -v \"^docs/en/\"|grep -v \"^docs/zh/\"|grep -v \".md$\" || :\n            ''',\n            returnStdout: true\n        ).trim()\n\n        file_only_tdgpt_change_except = sh (\n            script: '''\n                cd ${WKC}\n                git --no-pager diff --name-only FETCH_HEAD `git merge-base FETCH_HEAD ${CHANGE_TARGET}`|grep -v \"^docs/en/\"|grep -v \"^docs/zh/\"|grep -v \".md$\" | grep -Ev \"forecastoperator.c|anomalywindowoperator.c|tanalytics.h|tanalytics.c|tdgpt_cases.task|analytics\" ||:\n            ''',\n            returnStdout: true\n        ).trim()\n\n        echo \"file_zh_changed: ${file_zh_changed}\"\n        echo \"file_en_changed: ${file_en_changed}\"\n        echo \"file_no_doc_changed: ${file_no_doc_changed}\"\n        echo \"file_only_tdgpt_change_except: ${file_only_tdgpt_change_except}\"\n    }\n}\n\ndef build_pre_docs(){\n    if (env.CHANGE_URL =~ /\\/TDengine\\//) {\n        sh '''\n            hostname\n            date\n            env\n        '''\n        \n        sh '''\n            cd ${DOC_WKC}/${td_repo}\n            git reset --hard\n            git clean -f\n            git remote prune origin\n            git fetch\n            git checkout ''' + env.CHANGE_TARGET + '''\n            git pull >/dev/null\n            git fetch origin +refs/pull/${CHANGE_ID}/merge\n            git checkout -qf FETCH_HEAD \n        '''\n\n        sh '''\n             cd ${DOC_WKC}/${tools_repo}\n            git reset --hard\n            git clean -f\n            git fetch\n            git remote prune origin\n            git checkout ''' + env.CHANGE_TARGET + '''\n            git pull >/dev/null\n        '''\n    }\n}\n\ndef build_zh_docs(){\n    sh '''\n        cd ${DOC_WKC}/${zh_doc_repo}\n        # git pull \n        yarn ass local\n        yarn build\n    '''\n}\n\ndef build_en_docs(){\n    sh '''\n        cd ${DOC_WKC}/${en_doc_repo}\n        # git pull \n        yarn ass local\n        yarn build\n    '''\n}\n\n\ndef pre_test(){\n    sh '''\n        hostname\n        date\n        env\n    '''\n    sh '''\n        cd ${WK}\n        git reset --hard\n        git remote prune origin\n        git fetch\n        cd ${WKC}\n        git reset --hard\n        git clean -f\n        rm -rf examples/rust/\n        git remote prune origin\n        git fetch\n    '''\n    script {\n        sh '''\n            cd ${WK}\n            git checkout ''' + env.CHANGE_TARGET + '''\n            cd ${WKC}\n            git checkout ''' + env.CHANGE_TARGET + '''\n        '''\n    }\n    if (env.CHANGE_URL =~ /\\/TDengine\\//) {\n        sh '''\n            cd ${WKC}\n            git remote prune origin\n            git pull >/dev/null\n            git log -5\n            echo \"`date \"+%Y%m%d-%H%M%S\"` ${JOB_NAME}:${BRANCH_NAME}:${BUILD_ID}:${CHANGE_TARGET}\" >>${WKDIR}/jenkins.log\n            echo \"CHANGE_BRANCH:${CHANGE_BRANCH}\" >>${WKDIR}/jenkins.log\n            echo \"community log: `git log -5`\" >>${WKDIR}/jenkins.log\n            git fetch origin +refs/pull/${CHANGE_ID}/merge\n            git checkout -qf FETCH_HEAD\n            git log -5\n            echo \"community log merged: `git log -5`\" >>${WKDIR}/jenkins.log\n            cd ${WK}\n            git pull >/dev/null\n            git log -5\n            echo \"tdinternal log: `git log -5`\" >>${WKDIR}/jenkins.log\n        '''\n    } else if (env.CHANGE_URL =~ /\\/TDinternal\\//) {\n        sh '''\n            cd ${WK}\n            git pull >/dev/null\n            git log -5\n            echo \"`date \"+%Y%m%d-%H%M%S\"` ${JOB_NAME}:${BRANCH_NAME}:${BUILD_ID}:${CHANGE_TARGET}\" >>${WKDIR}/jenkins.log\n            echo \"CHANGE_BRANCH:${CHANGE_BRANCH}\" >>${WKDIR}/jenkins.log\n            echo \"tdinternal log: `git log -5`\" >>${WKDIR}/jenkins.log\n            git fetch origin +refs/pull/${CHANGE_ID}/merge\n            git checkout -qf FETCH_HEAD\n            git log -5\n            echo \"tdinternal log merged: `git log -5`\" >>${WKDIR}/jenkins.log\n            cd ${WKC}\n            git remote prune origin\n            git pull >/dev/null\n            git log -5\n            echo \"community log: `git log -5`\" >>${WKDIR}/jenkins.log\n        '''\n    } else {\n        sh '''\n            echo \"unmatched repository ${CHANGE_URL}\"\n        '''\n    }\n    sh '''\n        cd ${WKC}\n        git rm --cached tools/taos-tools 2>/dev/null || :\n        git rm --cached tools/taosadapter 2>/dev/null || :\n        git rm --cached tools/taosws-rs 2>/dev/null || :\n        git rm --cached examples/rust 2>/dev/null || :\n    '''\n    sh '''\n        cd ${WKC}\n        git submodule update --init --recursive\n    '''\n    return 1\n}\n\ndef pre_test_build_mac() {\n    sh '''\n        hostname\n        date\n    '''\n    sh '''\n        cd ${WK}\n        rm -rf debug\n        mkdir debug\n    '''\n    sh '''\n        cd ${WK}/debug\n        cmake .. -DBUILD_TEST=true -DBUILD_HTTPS=false  -DCMAKE_BUILD_TYPE=Release\n        make -j10\n        ctest -j10 || exit 7\n    '''\n    sh '''\n        date\n    '''\n}\n\ndef pre_test_win(){\n    bat '''\n        hostname\n        taskkill /f /t /im python.exe\n        taskkill /f /t /im bash.exe\n        taskkill /f /t /im taosd.exe\n        ipconfig\n        set\n        date /t\n        time /t\n        rd /s /Q %WIN_INTERNAL_ROOT%\\\\debug || exit 0\n    '''\n    bat '''\n        cd %WIN_INTERNAL_ROOT%\n        git reset --hard\n        git remote prune origin\n        git fetch\n    '''\n    bat '''\n        cd %WIN_COMMUNITY_ROOT%\n        git clean -f\n        git reset --hard\n        git remote prune origin\n        git fetch\n    '''\n    script {\n        bat '''\n            cd %WIN_INTERNAL_ROOT%\n            git checkout ''' + env.CHANGE_TARGET + '''\n        '''\n        bat '''\n            cd %WIN_COMMUNITY_ROOT%\n            git checkout ''' + env.CHANGE_TARGET + '''\n        '''\n    }\n    script {\n        if (env.CHANGE_URL =~ /\\/TDengine\\//) {\n            bat '''\n                cd %WIN_INTERNAL_ROOT%\n                git pull origin ''' + env.CHANGE_TARGET + '''\n            '''\n            bat '''\n                cd %WIN_COMMUNITY_ROOT%\n                git remote prune origin\n                git pull  origin ''' + env.CHANGE_TARGET + '''\n            '''\n            bat '''\n                cd %WIN_COMMUNITY_ROOT%\n                git fetch origin +refs/pull/%CHANGE_ID%/merge\n            '''\n            bat '''\n                cd %WIN_COMMUNITY_ROOT%\n                git checkout -qf FETCH_HEAD\n            '''\n        } else if (env.CHANGE_URL =~ /\\/TDinternal\\//) {\n            bat '''\n                cd %WIN_INTERNAL_ROOT%\n                git pull origin ''' + env.CHANGE_TARGET + '''\n            '''\n            bat '''\n                cd %WIN_INTERNAL_ROOT%\n                git fetch origin +refs/pull/%CHANGE_ID%/merge\n            '''\n            bat '''\n                cd %WIN_INTERNAL_ROOT%\n                git checkout -qf FETCH_HEAD\n            '''\n            bat '''\n                cd %WIN_COMMUNITY_ROOT%\n                git remote prune origin\n                git pull\n            '''\n        } else {\n            bat '''\n                echo \"unmatched repository %CHANGE_URL%\"\n            '''\n        }\n    }\n    bat '''\n        cd %WIN_INTERNAL_ROOT%\n        git branch\n        git log -5\n    '''\n    bat '''\n        cd %WIN_COMMUNITY_ROOT%\n        git branch\n        git log -5\n    '''\n    bat '''\n        cd %WIN_COMMUNITY_ROOT%\n        git rm --cached tools/taos-tools 2>nul\n        git rm --cached tools/taosadapter 2>nul\n        git rm --cached tools/taosws-rs 2>nul\n        git rm --cached examples/rust 2>nul\n        exit 0\n    '''\n    bat '''\n        cd %WIN_COMMUNITY_ROOT%\n        git submodule update --init --recursive\n    '''\n}\n\ndef pre_test_build_win() {\n    bat '''\n        echo \"building ...\"\n        time /t\n        cd %WIN_INTERNAL_ROOT%\n        mkdir debug\n        cd debug\n        time /t\n        call \"C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2017\\\\Community\\\\VC\\\\Auxiliary\\\\Build\\\\vcvarsall.bat\" x64\n        set CL=/MP8\n        echo \">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> cmake\"\n        time /t\n        cmake .. -G \"NMake Makefiles JOM\" -DBUILD_TEST=true -DBUILD_TOOLS=true || exit 7\n        echo \">>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>> jom -j 6\"\n        time /t\n        jom -j 6 || exit 8\n        time /t\n    '''\n    bat '''\n        cd %WIN_COMMUNITY_ROOT%/tests/ci\n        pip3 install taospy==2.7.21 \n        pip3 install taos-ws-py==0.3.8\n        xcopy /e/y/i/f %WIN_INTERNAL_ROOT%\\\\debug\\\\build\\\\lib\\\\taos.dll C:\\\\Windows\\\\System32\n    '''\n    return 1\n}\n\ndef run_win_ctest() {\n    bat '''\n        echo \"windows ctest ...\"\n        time /t\n        cd %WIN_INTERNAL_ROOT%\\\\debug\n        ctest -j 1 || exit 7\n        time /t\n    '''\n}\n\ndef run_win_test() {\n    bat '''\n        echo \"windows test ...\"\n        xcopy /e/y/i/f %WIN_INTERNAL_ROOT%\\\\debug\\\\build\\\\lib\\\\taos.dll C:\\\\Windows\\\\System32\n        ls -l C:\\\\Windows\\\\System32\\\\taos.dll\n        time /t\n        cd %WIN_SYSTEM_TEST_ROOT%\n        echo \"testing ...\"\n        test-all.bat ci\n        time /t\n    '''\n}\n\npipeline {\n    agent any\n    options { skipDefaultCheckout() } \n    environment{\n        WKDIR = '/var/lib/jenkins/workspace'\n        WK = '/var/lib/jenkins/workspace/TDinternal'\n        WKC = '/var/lib/jenkins/workspace/TDinternal/community'\n        WKPY = '/var/lib/jenkins/workspace/taos-connector-python'\n        DOC_WKC = '/root/doc_ci_work'\n        td_repo = 'TDengine'\n        zh_doc_repo = 'docs.taosdata.com'\n        en_doc_repo = 'docs.tdengine.com'\n        tools_repo = 'taos-tools'\n    }\n    stages {\n        stage ('check doc file changed') {\n            agent{label \" slave1_47 || slave1_48 || slave1_49 || slave1_50 || slave1_52  || slave1_59 || slave1_63 ||  worker03 || slave215 || slave217 || slave219 || Mac_catalina \"}            \n            steps {\n                check_docs()\n            }\n        }\n        \n        stage ('pre for build docs') {\n            when {\n                beforeAgent true\n                expression { env.CHANGE_BRANCH =~ /(?i)doc.*/ || file_zh_changed != '' || file_en_changed != '' }\n            }\n            agent{label \"doc_build_0_30\"}\n            steps {\n                build_pre_docs()\n            }\n        }\n\n        stage('build Docs') {\n            when {\n                beforeAgent true\n                expression { env.CHANGE_BRANCH =~ /(?i)doc.*/ || file_zh_changed != '' || file_en_changed != '' }\n            }\n            parallel {\n                stage('build zh docs') {\n                    agent{label \"doc_build_0_30\"}\n                    when {\n                        expression { file_zh_changed != '' }\n                    }\n                    steps {\n                        build_zh_docs()\n                    }\n                }\n                stage('build en docs') {\n                    agent{label \"doc_build_0_30\"}\n                    when {\n                        expression { file_en_changed != '' }\n                    }\n                    steps {\n                        build_en_docs()\n                    }\n                }\n            }\n            post {\n                unsuccessful {\n                    error('build docs stage failed, terminating pipeline.')\n                }\n            }\n        }\n\n        stage('run test') {\n            when {\n                expression {\n                    file_no_doc_changed != '' && env.CHANGE_TARGET != 'docs-cloud'\n                }\n            }\n            parallel {\n                stage('windows test') {\n                    agent{label \" windows10_01 || windows10_02 || windows10_03 || windows10_04 \"}\n                    environment{\n                        WIN_INTERNAL_ROOT=\"C:\\\\workspace\\\\${env.EXECUTOR_NUMBER}\\\\TDinternal\"\n                        WIN_COMMUNITY_ROOT=\"C:\\\\workspace\\\\${env.EXECUTOR_NUMBER}\\\\TDinternal\\\\community\"\n                        WIN_SYSTEM_TEST_ROOT=\"C:\\\\workspace\\\\${env.EXECUTOR_NUMBER}\\\\TDinternal\\\\community\\\\tests\\\\system-test\"\n                    }\n                    when {\n                        beforeAgent true\n                        expression { file_only_tdgpt_change_except != '' }\n                    }\n                    steps {\n                        catchError(buildResult: 'FAILURE', stageResult: 'FAILURE') {\n                            timeout(time: 126, unit: 'MINUTES'){\n                                    pre_test_win()\n                                    pre_test_build_win()\n                                    run_win_ctest()\n                                    run_win_test()\n                            }\n                        }\n                    }\n                }\n                stage('mac test') {\n                    agent{label \" Mac_catalina \"}\n                    when {\n                        beforeAgent true\n                        expression { file_only_tdgpt_change_except != '' }\n                    }\n                    steps {\n                        catchError(buildResult: 'FAILURE', stageResult: 'FAILURE') {\n                            timeout(time: 60, unit: 'MINUTES'){\n                                pre_test()\n                                pre_test_build_mac()\n                            }\n                        }\n                    }\n                }\n                stage('linux test') {\n                    agent{label \"slave1_47 || slave1_48 || slave1_49 || slave1_50 || slave1_52 || slave1_59 || slave1_63 || worker03 || slave215 || slave217 || slave219 \"}\n                    options { skipDefaultCheckout() } \n                    when {\n                        changeRequest()\n                    }\n                    steps {\n                        script {\n                            def linux_node_ip = sh (\n                                script: 'ip addr|grep 192|grep -v virbr|awk \"{print \\\\\\$2}\"|sed \"s/\\\\/.*//\"',\n                                returnStdout: true\n                            ).trim()\n                            echo \"${linux_node_ip}\"\n                            echo \"${WKDIR}/restore.sh -p ${BRANCH_NAME} -n ${BUILD_ID} -c {container name}\"\n                        }\n                        catchError(buildResult: 'FAILURE', stageResult: 'FAILURE') {\n                            timeout(time: 200, unit: 'MINUTES'){\n                                pre_test()\n                                script {\n                                    sh '''\n                                    mkdir -p ${WKDIR}/tmp/${BRANCH_NAME}_${BUILD_ID}\n                                    echo \"''' + file_no_doc_changed + '''\" > ${WKDIR}/tmp/${BRANCH_NAME}_${BUILD_ID}/docs_changed.txt\n                                    '''\n                                    sh '''\n                                       cd ${WKC}/tests/parallel_test\n                                       ./run_check_assert_container.sh -d ${WKDIR}\n                                    '''\n                                    sh '''\n                                       cd ${WKC}/tests/parallel_test\n                                       ./run_check_void_container.sh -d ${WKDIR}\n                                    '''\n                                    sh '''\n                                        date\n                                        rm -rf ${WKC}/debug\n                                        cd ${WKC}/tests/parallel_test\n                                        time ./container_build.sh -w ${WKDIR} -e\n                                    '''\n                                    def extra_param = \"\"\n                                    def log_server_file = \"/home/log_server.json\"\n                                    def timeout_cmd = \"\"\n                                    if (fileExists(log_server_file)) {\n                                        def log_server_enabled = sh (\n                                            script: 'jq .enabled ' + log_server_file,\n                                            returnStdout: true\n                                        ).trim()\n                                        def timeout_param = sh (\n                                            script: 'jq .timeout ' + log_server_file,\n                                            returnStdout: true\n                                        ).trim()\n                                        if (timeout_param != \"null\" &&  timeout_param != \"0\") {\n                                            timeout_cmd = \"timeout \" + timeout_param\n                                        }\n                                        if (log_server_enabled == \"1\") {\n                                            def log_server = sh (\n                                                script: 'jq .server ' + log_server_file + ' | sed \"s/\\\\\\\"//g\"',\n                                                returnStdout: true\n                                            ).trim()\n                                            if (log_server != \"null\" && log_server != \"\") { \n                                                extra_param = \"-w \" + log_server\n                                            }\n                                        }\n                                    }\n                                    sh '''\n                                       cd ${WKC}/tests/parallel_test\n                                       ./run_scan_container.sh -d ${WKDIR} -b ${BRANCH_NAME}_${BUILD_ID}  -f ${WKDIR}/tmp/${BRANCH_NAME}_${BUILD_ID}/docs_changed.txt ''' + extra_param + '''\n                                    '''\n                                     if ( file_no_doc_changed =~ /forecastoperator.c|anomalywindowoperator.c|tanalytics.h|tanalytics.c|tdgpt_cases.task|analytics/ ) {\n                                        sh '''\n                                            cd ${WKC}/tests/parallel_test\n                                            export DEFAULT_RETRY_TIME=2\n                                            date\n                                            timeout 600 time ./run.sh -e -m /home/m.json -t tdgpt_cases.task -b ${BRANCH_NAME}_${BUILD_ID} -l ${WKDIR}/log -o 300 ''' + extra_param + '''\n                                        '''\n                                    }\n                                    if ( file_only_tdgpt_change_except != '' ) {\n                                        sh '''\n                                            cd ${WKC}/tests/parallel_test\n                                            export DEFAULT_RETRY_TIME=2\n                                            date\n                                            ''' + timeout_cmd + ''' time ./run.sh -e -m /home/m.json -t cases.task -b ${BRANCH_NAME}_${BUILD_ID} -l ${WKDIR}/log -o 1200 ''' + extra_param + '''\n                                        '''\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    post {  \n        success {\n            emailext (\n                subject: \"PR-result: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' SUCCESS\",\n                body: \"\"\"<!DOCTYPE html>\n                <html>\n                <head>\n                <meta charset=\"UTF-8\">\n                </head>\n                <body leftmargin=\"8\" marginwidth=\"0\" topmargin=\"8\" marginheight=\"4\" offset=\"0\">\n                    <table width=\"95%\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 16pt; font-family: Tahoma, Arial, Helvetica, sans-serif\">\n                        <tr>\n                            <td><br />\n                                <b><font color=\"#0B610B\"><font size=\"6\">构建信息</font></font></b>\n                                <hr size=\"2\" width=\"100%\" align=\"center\" /></td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <ul>\n                                <div style=\"font-size:18px\">\n                                    <li>构建名称>>分支：${env.BRANCH_NAME}</li>\n                                    <li>构建结果：<span style=\"color:green\"> Successful </span></li>\n                                    <li>构建编号：${BUILD_NUMBER}</li>\n                                    <li>触发用户：${env.CHANGE_AUTHOR}</li>\n                                    <li>提交信息：${env.CHANGE_TITLE}</li>\n                                    <li>构建地址：<a href=${BUILD_URL}>${BUILD_URL}</a></li>\n                                    <li>构建日志：<a href=${BUILD_URL}console>${BUILD_URL}console</a></li>\n                                    \n                                </div>\n                                </ul>\n                            </td>\n                        </tr>\n                    </table></font>\n                </body>\n                </html>\"\"\",\n                to: \"${env.CHANGE_AUTHOR_EMAIL}\",\n                from: \"support@taosdata.com\"\n            )\n        }\n        failure {\n            emailext (\n                subject: \"PR-result: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]' FAIL\",\n                body: \"\"\"<!DOCTYPE html>\n                <html>\n                <head>\n                <meta charset=\"UTF-8\">\n                </head>\n                <body leftmargin=\"8\" marginwidth=\"0\" topmargin=\"8\" marginheight=\"4\" offset=\"0\">\n                    <table width=\"95%\" cellpadding=\"0\" cellspacing=\"0\" style=\"font-size: 16pt; font-family: Tahoma, Arial, Helvetica, sans-serif\">\n                        <tr>\n                            <td><br />\n                                <b><font color=\"#0B610B\"><font size=\"6\">构建信息</font></font></b>\n                                <hr size=\"2\" width=\"100%\" align=\"center\" /></td>\n                        </tr>\n                        <tr>\n                            <td>\n                                <ul>\n                                <div style=\"font-size:18px\">\n                                    <li>构建名称>>分支：${env.BRANCH_NAME}</li>\n                                    <li>构建结果：<span style=\"color:red\"> Failure </span></li>\n                                    <li>构建编号：${BUILD_NUMBER}</li>\n                                    <li>触发用户：${env.CHANGE_AUTHOR}</li>\n                                    <li>提交信息：${env.CHANGE_TITLE}</li>\n                                    <li>构建地址：<a href=${BUILD_URL}>${BUILD_URL}</a></li>\n                                    <li>构建日志：<a href=${BUILD_URL}console>${BUILD_URL}console</a></li>\n                                    \n                                </div>\n                                </ul>\n                            </td>\n                        </tr>\n                    </table></font>\n                </body>\n                </html>\"\"\",\n                to: \"${env.CHANGE_AUTHOR_EMAIL}\",\n                from: \"support@taosdata.com\"\n            )\n        }\n    } \n}\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 33.7138671875,
          "content": "                    GNU AFFERO GENERAL PUBLIC LICENSE\n                       Version 3, 19 November 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Remote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as published\n    by the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\n<https://www.gnu.org/licenses/>.\n"
        },
        {
          "name": "README-CN.md",
          "type": "blob",
          "size": 12.158203125,
          "content": "<p align=\"center\">\n  <a href=\"https://www.taosdata.com\" target=\"_blank\">\n  <img\n    src=\"docs/assets/tdengine.svg\"\n    alt=\"TDengine\"\n    width=\"500\"\n  />\n  </a>\n</p>\n\n简体中文 | [English](README.md) | [TDengine 云服务](https://cloud.taosdata.com/?utm_medium=cn&utm_source=github) | 很多职位正在热招中，请看[这里](https://www.taosdata.com/careers/)\n\n# TDengine 简介\n\nTDengine 是一款开源、高性能、云原生的时序数据库 (Time-Series Database, TSDB)。TDengine 能被广泛运用于物联网、工业互联网、车联网、IT 运维、金融等领域。除核心的时序数据库功能外，TDengine 还提供缓存、数据订阅、流式计算等功能，是一极简的时序数据处理平台，最大程度的减小系统设计的复杂度，降低研发和运营成本。与其他时序数据库相比，TDengine 的主要优势如下：\n\n- **高性能**：通过创新的存储引擎设计，无论是数据写入还是查询，TDengine 的性能比通用数据库快 10 倍以上，也远超其他时序数据库，存储空间不及通用数据库的1/10。\n\n- **云原生**：通过原生分布式的设计，充分利用云平台的优势，TDengine 提供了水平扩展能力，具备弹性、韧性和可观测性，支持k8s部署，可运行在公有云、私有云和混合云上。\n\n- **极简时序数据平台**：TDengine 内建消息队列、缓存、流式计算等功能，应用无需再集成 Kafka/Redis/HBase/Spark 等软件，大幅降低系统的复杂度，降低应用开发和运营成本。\n\n- **分析能力**：支持 SQL，同时为时序数据特有的分析提供SQL扩展。通过超级表、存储计算分离、分区分片、预计算、自定义函数等技术，TDengine 具备强大的分析能力。\n\n- **简单易用**：无任何依赖，安装、集群几秒搞定；提供REST以及各种语言连接器，与众多第三方工具无缝集成；提供命令行程序，便于管理和即席查询；提供各种运维工具。\n\n- **核心开源**：TDengine 的核心代码包括集群功能全部开源，截止到2022年8月1日，全球超过 135.9k 个运行实例，GitHub Star 18.7k，Fork 4.4k，社区活跃。\n\n# 文档\n\n关于完整的使用手册，系统架构和更多细节，请参考 [TDengine 文档](https://docs.taosdata.com) 或者  [TDengine Documentation](https://docs.tdengine.com)。\n\n# 构建\n\nTDengine 目前可以在 Linux、 Windows、macOS 等平台上安装和运行。任何 OS 的应用也可以选择 taosAdapter 的 RESTful 接口连接服务端 taosd。CPU 支持 X64/ARM64，后续会支持 MIPS64、Alpha64、ARM32、RISC-V 等 CPU 架构。目前不支持使用交叉编译器构建。\n\n用户可根据需求选择通过源码、[容器](https://docs.taosdata.com/get-started/docker/)、[安装包](https://docs.taosdata.com/get-started/package/)或[Kubernetes](https://docs.taosdata.com/deployment/k8s/)来安装。本快速指南仅适用于通过源码安装。\n  \nTDengine 还提供一组辅助工具软件 taosTools，目前它包含 taosBenchmark（曾命名为 taosdemo）和 taosdump 两个软件。默认 TDengine 编译不包含 taosTools, 您可以在编译 TDengine 时使用`cmake .. -DBUILD_TOOLS=true` 来同时编译 taosTools。\n\n为了构建TDengine, 请使用 [CMake](https://cmake.org/) 3.13.0 或者更高版本。\n\n## 安装工具\n\n### Ubuntu 18.04 及以上版本 & Debian：\n\n```bash\nsudo apt-get install -y gcc cmake build-essential git libssl-dev libgflags2.2 libgflags-dev\n```\n\n#### 为 taos-tools 安装编译需要的软件\n\n为了在 Ubuntu/Debian 系统上编译 [taos-tools](https://github.com/taosdata/taos-tools) 需要安装如下软件：\n\n```bash\nsudo apt install build-essential libjansson-dev libsnappy-dev liblzma-dev libz-dev zlib1g pkg-config\n```\n\n### CentOS 7.9\n\n```bash\nsudo yum install epel-release\nsudo yum update\nsudo yum install -y gcc gcc-c++ make cmake3 gflags git openssl-devel\nsudo ln -sf /usr/bin/cmake3 /usr/bin/cmake\n```\n\n### CentOS 8/Fedora/Rocky Linux\n\n```bash\nsudo dnf install -y gcc gcc-c++ gflags make cmake epel-release git openssl-devel\n```\n\n#### 在 CentOS 上构建 taosTools 安装依赖软件\n\n\n#### CentOS 7.9\n\n\n```\nsudo yum install -y zlib-devel zlib-static xz-devel snappy-devel jansson jansson-devel pkgconfig libatomic libatomic-static libstdc++-static openssl-devel\n```\n\n#### CentOS 8/Fedora/Rocky Linux \n\n```\nsudo yum install -y epel-release\nsudo yum install -y dnf-plugins-core\nsudo yum config-manager --set-enabled powertools\nsudo yum install -y zlib-devel zlib-static xz-devel snappy-devel jansson jansson-devel pkgconfig libatomic libatomic-static libstdc++-static openssl-devel\n```\n\n注意：由于 snappy 缺乏 pkg-config 支持（参考 [链接](https://github.com/google/snappy/pull/86)），会导致 cmake 提示无法发现 libsnappy，实际上工作正常。\n\n若 powertools 安装失败，可以尝试改用：\n```\nsudo yum config-manager --set-enabled powertools\n```\n\n#### CentOS + devtoolset\n\n除上述编译依赖包，需要执行以下命令：\n\n```\nsudo yum install centos-release-scl\nsudo yum install devtoolset-9 devtoolset-9-libatomic-devel\nscl enable devtoolset-9 -- bash\n```\n\n### macOS\n\n```\nbrew install argp-standalone gflags pkgconfig\n```\n\n### 设置 golang 开发环境\n\nTDengine 包含数个使用 Go 语言开发的组件，比如taosAdapter, 请参考 golang.org 官方文档设置 go 开发环境。\n\n请使用 1.20 及以上版本。对于中国用户，我们建议使用代理来加速软件包下载。\n\n```\ngo env -w GO111MODULE=on\ngo env -w GOPROXY=https://goproxy.cn,direct\n```\n\n缺省是不会构建 taosAdapter, 但您可以使用以下命令选择构建 taosAdapter 作为 RESTful 接口的服务。\n\n```\ncmake .. -DBUILD_HTTP=false\n```\n\n### 设置 rust 开发环境\n\nTDengine 包含数个使用 Rust 语言开发的组件. 请参考 rust-lang.org 官方文档设置 rust 开发环境。\n\n## 获取源码\n\n首先，你需要从 GitHub 克隆源码：\n\n```bash\ngit clone https://github.com/taosdata/TDengine.git\ncd TDengine\n```\n如果使用 https 协议下载比较慢，可以通过修改 ~/.gitconfig 文件添加以下两行设置使用 ssh 协议下载。需要首先上传 ssh 密钥到 GitHub，详细方法请参考 GitHub 官方文档。\n\n```\n[url \"git@github.com:\"]\n    insteadOf = https://github.com/\n```\n## 特别说明\n\n[JDBC 连接器](https://github.com/taosdata/taos-connector-jdbc)， [Go 连接器](https://github.com/taosdata/driver-go)，[Python 连接器](https://github.com/taosdata/taos-connector-python)，[Node.js 连接器](https://github.com/taosdata/taos-connector-node)，[C# 连接器](https://github.com/taosdata/taos-connector-dotnet) ，[Rust 连接器](https://github.com/taosdata/taos-connector-rust) 和 [Grafana 插件](https://github.com/taosdata/grafanaplugin)已移到独立仓库。\n\n\n## 构建 TDengine\n\n### Linux 系统\n\n可以运行代码仓库中的 `build.sh` 脚本编译出 TDengine 和 taosTools（包含 taosBenchmark 和 taosdump）。\n\n```bash\n./build.sh\n```\n\n这个脚本等价于执行如下命令：\n\n```bash\nmkdir debug\ncd debug\ncmake .. -DBUILD_TOOLS=true -DBUILD_CONTRIB=true\nmake\n```\n\n您也可以选择使用 jemalloc 作为内存分配器，替代默认的 glibc：\n\n```bash\napt install autoconf\ncmake .. -DJEMALLOC_ENABLED=true\n```\n\n在 X86-64、X86、arm64 平台上，TDengine 生成脚本可以自动检测机器架构。也可以手动配置 CPUTYPE 参数来指定 CPU 类型，如 aarch64 等。\n\naarch64：\n\n```bash\ncmake .. -DCPUTYPE=aarch64 && cmake --build .\n```\n\n### Windows 系统\n\n如果你使用的是 Visual Studio 2013 版本：\n\n打开 cmd.exe，执行 vcvarsall.bat 时，为 64 位操作系统指定“x86_amd64”，为 32 位操作系统指定“x86”。\n\n```bash\nmkdir debug && cd debug\n\"C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\vcvarsall.bat\" < x86_amd64 | x86 >\ncmake .. -G \"NMake Makefiles\"\nnmake\n```\n\n如果你使用的是 Visual Studio 2019 或 2017 版本：\n\n打开 cmd.exe，执行 vcvarsall.bat 时，为 64 位操作系统指定“x64”，为 32 位操作系统指定“x86”。\n\n```bash\nmkdir debug && cd debug\n\"c:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Auxiliary\\Build\\vcvarsall.bat\" < x64 | x86 >\ncmake .. -G \"NMake Makefiles\"\nnmake\n```\n\n你也可以从开始菜单中找到\"Visual Studio < 2019 | 2017 >\"菜单项，根据你的系统选择\"x64 Native Tools Command Prompt for VS < 2019 | 2017 >\"或\"x86 Native Tools Command Prompt for VS < 2019 | 2017 >\"，打开命令行窗口，执行：\n\n```bash\nmkdir debug && cd debug\ncmake .. -G \"NMake Makefiles\"\nnmake\n```\n\n### macOS 系统\n\n安装 XCode 命令行工具和 cmake. 在 Catalina 和 Big Sur 操作系统上，需要安装 XCode 11.4+ 版本。\n\n```bash\nmkdir debug && cd debug\ncmake .. && cmake --build .\n```\n\n# 安装\n\n## Linux 系统\n\n生成完成后，安装 TDengine：\n\n```bash\nsudo make install\n```\n\n用户可以在[文件目录结构](https://docs.taosdata.com/reference/directory/)中了解更多在操作系统中生成的目录或文件。\n\n从源代码安装也会为 TDengine 配置服务管理 ，用户也可以选择[从安装包中安装](https://docs.taosdata.com/get-started/package/)。\n\n安装成功后，在终端中启动 TDengine 服务：\n\n```bash\nsudo systemctl start taosd\n```\n\n用户可以使用 TDengine CLI 来连接 TDengine 服务，在终端中，输入：\n\n```bash\ntaos\n```\n\n如果 TDengine CLI 连接服务成功，将会打印出欢迎消息和版本信息。如果失败，则会打印出错误消息。\n\n## Windows 系统\n\n生成完成后，安装 TDengine：\n\n```cmd\nnmake install\n```\n\n## macOS 系统\n\n生成完成后，安装 TDengine：\n\n```bash\nsudo make install\n```\n\n用户可以在[文件目录结构](https://docs.taosdata.com/reference/directory/)中了解更多在操作系统中生成的目录或文件。\n\n从源代码安装也会为 TDengine 配置服务管理 ，用户也可以选择[从安装包中安装](https://docs.taosdata.com/get-started/package/)。\n\n安装成功后，可以在应用程序中双击 TDengine 图标启动服务，或者在终端中启动 TDengine 服务：\n\n```bash\nsudo launchctl start com.tdengine.taosd\n```\n\n用户可以使用 TDengine CLI 来连接 TDengine 服务，在终端中，输入：\n\n```bash\ntaos\n```\n\n如果 TDengine CLI 连接服务成功，将会打印出欢迎消息和版本信息。如果失败，则会打印出错误消息。\n\n## 快速运行\n\n如果不希望以服务方式运行 TDengine，也可以在终端中直接运行它。也即在生成完成后，执行以下命令（在 Windows 下，生成的可执行文件会带有 .exe 后缀，例如会名为 taosd.exe ）：\n\n```bash\n./build/bin/taosd -c test/cfg\n```\n\n在另一个终端，使用 TDengine CLI 连接服务器：\n\n```bash\n./build/bin/taos -c test/cfg\n```\n\n\"-c test/cfg\"指定系统配置文件所在目录。\n\n# 体验 TDengine\n\n在 TDengine 终端中，用户可以通过 SQL 命令来创建/删除数据库、表等，并进行插入查询操作。\n\n```sql\nCREATE DATABASE demo;\nUSE demo;\nCREATE TABLE t (ts TIMESTAMP, speed INT);\nINSERT INTO t VALUES('2019-07-15 00:00:00', 10);\nINSERT INTO t VALUES('2019-07-15 01:00:00', 20);\nSELECT * FROM t;\n          ts          |   speed   |\n===================================\n 19-07-15 00:00:00.000|         10|\n 19-07-15 01:00:00.000|         20|\nQuery OK, 2 row(s) in set (0.001700s)\n```\n\n# 应用开发\n\n## 官方连接器\n\nTDengine 提供了丰富的应用程序开发接口，其中包括 C/C++、Java、Python、Go、Node.js、C# 、RESTful 等，便于用户快速开发应用：\n\n- [Java](https://docs.taosdata.com/reference/connector/java/)\n- [C/C++](https://docs.taosdata.com/reference/connector/cpp/)\n- [Python](https://docs.taosdata.com/reference/connector/python/)\n- [Go](https://docs.taosdata.com/reference/connector/go/)\n- [Node.js](https://docs.taosdata.com/reference/connector/node/)\n- [Rust](https://docs.taosdata.com/reference/connector/rust/)\n- [C#](https://docs.taosdata.com/reference/connector/csharp/)\n- [RESTful API](https://docs.taosdata.com/reference/connector/rest-api/)\n\n# 成为社区贡献者\n\n点击 [这里](https://www.taosdata.com/contributor)，了解如何成为 TDengine 的贡献者。\n\n# 加入技术交流群\n\nTDengine 官方社群「物联网大数据群」对外开放，欢迎您加入讨论。搜索微信号 \"tdengine\"，加小 T 为好友，即可入群。\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 15.7197265625,
          "content": "<p align=\"center\">\n  <a href=\"https://tdengine.com\" target=\"_blank\">\n  <img\n    src=\"docs/assets/tdengine.svg\"\n    alt=\"TDengine\"\n    width=\"500\"\n  />\n  </a>\n</p>\n\n[![GitHub Actions Workflow Status](https://img.shields.io/github/actions/workflow/status/taosdata/tdengine/taosd-ci-build.yml)](https://github.com/taosdata/TDengine/actions/workflows/taosd-ci-build.yml)\n[![Coverage Status](https://coveralls.io/repos/github/taosdata/TDengine/badge.svg?branch=3.0)](https://coveralls.io/github/taosdata/TDengine?branch=3.0)\n![GitHub commit activity](https://img.shields.io/github/commit-activity/m/taosdata/tdengine)\n<br />\n![GitHub Release](https://img.shields.io/github/v/release/taosdata/tdengine)\n![GitHub License](https://img.shields.io/github/license/taosdata/tdengine)\n[![CII Best Practices](https://bestpractices.coreinfrastructure.org/projects/4201/badge)](https://bestpractices.coreinfrastructure.org/projects/4201)\n<br />\n[![Twitter Follow](https://img.shields.io/twitter/follow/tdenginedb?label=TDengine&style=social)](https://twitter.com/tdenginedb)\n[![YouTube Channel](https://img.shields.io/badge/Subscribe_@tdengine--white?logo=youtube&style=social)](https://www.youtube.com/@tdengine)\n[![Discord Community](https://img.shields.io/badge/Join_Discord--white?logo=discord&style=social)](https://discord.com/invite/VZdSuUg4pS)\n[![LinkedIn](https://img.shields.io/badge/Follow_LinkedIn--white?logo=linkedin&style=social)](https://www.linkedin.com/company/tdengine)\n[![StackOverflow](https://img.shields.io/badge/Ask_StackOverflow--white?logo=stackoverflow&style=social&logoColor=orange)](https://stackoverflow.com/questions/tagged/tdengine)\n\nEnglish | [简体中文](README-CN.md) | [TDengine Cloud](https://cloud.tdengine.com) | [Learn more about TSDB](https://tdengine.com/tsdb/)\n\n# Table of Contents\n\n1. [What is TDengine?](#1-what-is-tdengine)\n2. [Documentation](#2-documentation)\n3. [Building](#3-building)\n   1. [Install build tools](#31-install-build-tools)\n   1. [Get the source codes](#32-get-the-source-codes)\n   1. [Special Note](#33-special-note)\n   1. [Build TDengine](#34-build-tdengine)\n4. [Installing](#4-installing)\n   1. [On Linux platform](#41-on-linux-platform)\n   1. [On Windows platform](#42-on-windows-platform)\n   1. [On macOS platform](#43-on-macos-platform)\n   1. [Quick Run](#44-quick-run)\n5. [Try TDengine](#5-try-tdengine)\n6. [Developing with TDengine](#6-developing-with-tdengine)\n7. [Contribute to TDengine](#7-contribute-to-tdengine)\n8. [Join the TDengine Community](#8-join-the-tdengine-community)\n\n# 1. What is TDengine？\n\nTDengine is an open source, high-performance, cloud native [time-series database](https://tdengine.com/tsdb/) optimized for Internet of Things (IoT), Connected Cars, and Industrial IoT. It enables efficient, real-time data ingestion, processing, and monitoring of TB and even PB scale data per day, generated by billions of sensors and data collectors. TDengine differentiates itself from other time-series databases with the following advantages:\n\n- **[High Performance](https://tdengine.com/tdengine/high-performance-time-series-database/)**: TDengine is the only time-series database to solve the high cardinality issue to support billions of data collection points while out performing other time-series databases for data ingestion, querying and data compression.\n\n- **[Simplified Solution](https://tdengine.com/tdengine/simplified-time-series-data-solution/)**: Through built-in caching, stream processing and data subscription features, TDengine provides a simplified solution for time-series data processing. It reduces system design complexity and operation costs significantly.\n\n- **[Cloud Native](https://tdengine.com/tdengine/cloud-native-time-series-database/)**: Through native distributed design, sharding and partitioning, separation of compute and storage, RAFT, support for kubernetes deployment and full observability, TDengine is a cloud native Time-Series Database and can be deployed on public, private or hybrid clouds.\n\n- **[Ease of Use](https://tdengine.com/tdengine/easy-time-series-data-platform/)**: For administrators, TDengine significantly reduces the effort to deploy and maintain. For developers, it provides a simple interface, simplified solution and seamless integrations for third party tools. For data users, it gives easy data access.\n\n- **[Easy Data Analytics](https://tdengine.com/tdengine/time-series-data-analytics-made-easy/)**: Through super tables, storage and compute separation, data partitioning by time interval, pre-computation and other means, TDengine makes it easy to explore, format, and get access to data in a highly efficient way.\n\n- **[Open Source](https://tdengine.com/tdengine/open-source-time-series-database/)**: TDengine’s core modules, including cluster feature, are all available under open source licenses. It has gathered 19.9k stars on GitHub. There is an active developer community, and over 139k running instances worldwide.\n\nFor a full list of TDengine competitive advantages, please [check here](https://tdengine.com/tdengine/). The easiest way to experience TDengine is through [TDengine Cloud](https://cloud.tdengine.com).\n\n# 2. Documentation\n\nFor user manual, system design and architecture, please refer to [TDengine Documentation](https://docs.tdengine.com) ([TDengine 文档](https://docs.taosdata.com))\n\n# 3. Building\n\nAt the moment, TDengine server supports running on Linux/Windows/macOS systems. Any application can also choose the RESTful interface provided by taosAdapter to connect the taosd service . TDengine supports X64/ARM64 CPU, and it will support MIPS64, Alpha64, ARM32, RISC-V and other CPU architectures in the future. Right now we don't support build with cross-compiling environment.\n\nYou can choose to install through source code, [container](https://docs.tdengine.com/get-started/docker/), [installation package](https://docs.tdengine.com/get-started/package/) or [Kubernetes](https://docs.tdengine.com/deployment/k8s/). This quick guide only applies to installing from source.\n\nTDengine provide a few useful tools such as taosBenchmark (was named taosdemo) and taosdump. They were part of TDengine. By default, TDengine compiling does not include taosTools. You can use `cmake .. -DBUILD_TOOLS=true` to make them be compiled with TDengine.\n\nTo build TDengine, use [CMake](https://cmake.org/) 3.13.0 or higher versions in the project directory.\n\n## 3.1 Install build tools\n\n### Ubuntu 18.04 and above or Debian\n\n```bash\nsudo apt-get install -y gcc cmake build-essential git libssl-dev libgflags2.2 libgflags-dev\n```\n\n#### Install build dependencies for taosTools\n\nTo build the [taosTools](https://github.com/taosdata/taos-tools) on Ubuntu/Debian, the following packages need to be installed.\n\n```bash\nsudo apt install build-essential libjansson-dev libsnappy-dev liblzma-dev libz-dev zlib1g pkg-config\n```\n\n### CentOS 7.9\n\n```bash\nsudo yum install epel-release\nsudo yum update\nsudo yum install -y gcc gcc-c++ make cmake3 gflags git openssl-devel\nsudo ln -sf /usr/bin/cmake3 /usr/bin/cmake\n```\n\n### CentOS 8/Fedora/Rocky Linux\n\n```bash\nsudo dnf install -y gcc gcc-c++ make cmake epel-release gflags git openssl-devel\n```\n\n#### Install build dependencies for taosTools on CentOS\n\n#### CentOS 7.9\n\n```\nsudo yum install -y zlib-devel zlib-static xz-devel snappy-devel jansson jansson-devel pkgconfig libatomic libatomic-static libstdc++-static openssl-devel\n```\n\n#### CentOS 8/Fedora/Rocky Linux\n\n```\nsudo yum install -y epel-release\nsudo yum install -y dnf-plugins-core\nsudo yum config-manager --set-enabled powertools\nsudo yum install -y zlib-devel zlib-static xz-devel snappy-devel jansson jansson-devel pkgconfig libatomic libatomic-static libstdc++-static openssl-devel\n```\n\nNote: Since snappy lacks pkg-config support (refer to [link](https://github.com/google/snappy/pull/86)), it leads a cmake prompt libsnappy not found. But snappy still works well.\n\nIf the PowerTools installation fails, you can try to use:\n\n```\nsudo yum config-manager --set-enabled powertools\n```\n\n#### For CentOS + devtoolset\n\nBesides above dependencies, please run following commands:\n\n```\nsudo yum install centos-release-scl\nsudo yum install devtoolset-9 devtoolset-9-libatomic-devel\nscl enable devtoolset-9 -- bash\n```\n\n### macOS\n\n```\nbrew install argp-standalone gflags pkgconfig\n```\n\n### Setup golang environment\n\nTDengine includes a few components like taosAdapter developed by Go language. Please refer to golang.org official documentation for golang environment setup.\n\nPlease use version 1.20+. For the user in China, we recommend using a proxy to accelerate package downloading.\n\n```\ngo env -w GO111MODULE=on\ngo env -w GOPROXY=https://goproxy.cn,direct\n```\n\nThe default will not build taosAdapter, but you can use the following command to build taosAdapter as the service for RESTful interface.\n\n```\ncmake .. -DBUILD_HTTP=false\n```\n\n### Setup rust environment\n\nTDengine includes a few components developed by Rust language. Please refer to rust-lang.org official documentation for rust environment setup.\n\n## 3.2 Get the source codes\n\nFirst of all, you may clone the source codes from github:\n\n```bash\ngit clone https://github.com/taosdata/TDengine.git\ncd TDengine\n```\n\nYou can modify the file ~/.gitconfig to use ssh protocol instead of https for better download speed. You will need to upload ssh public key to GitHub first. Please refer to GitHub official documentation for detail.\n\n```\n[url \"git@github.com:\"]\n    insteadOf = https://github.com/\n```\n\n## 3.3 Special Note\n\n[JDBC Connector](https://github.com/taosdata/taos-connector-jdbc)， [Go Connector](https://github.com/taosdata/driver-go)，[Python Connector](https://github.com/taosdata/taos-connector-python)，[Node.js Connector](https://github.com/taosdata/taos-connector-node)，[C# Connector](https://github.com/taosdata/taos-connector-dotnet) ，[Rust Connector](https://github.com/taosdata/taos-connector-rust) and [Grafana plugin](https://github.com/taosdata/grafanaplugin) has been moved to standalone repository.\n\n## 3.4 Build TDengine\n\n### On Linux platform\n\nYou can run the bash script `build.sh` to build both TDengine and taosTools including taosBenchmark and taosdump as below:\n\n```bash\n./build.sh\n```\n\nIt equals to execute following commands:\n\n```bash\nmkdir debug\ncd debug\ncmake .. -DBUILD_TOOLS=true -DBUILD_CONTRIB=true\nmake\n```\n\nYou can use Jemalloc as memory allocator instead of glibc:\n\n```\napt install autoconf\ncmake .. -DJEMALLOC_ENABLED=true\n```\n\nTDengine build script can detect the host machine's architecture on X86-64, X86, arm64 platform.\nYou can also specify CPUTYPE option like aarch64 too if the detection result is not correct:\n\naarch64:\n\n```bash\ncmake .. -DCPUTYPE=aarch64 && cmake --build .\n```\n\n### On Windows platform\n\nIf you use the Visual Studio 2013, please open a command window by executing \"cmd.exe\".\nPlease specify \"amd64\" for 64 bits Windows or specify \"x86\" for 32 bits Windows when you execute vcvarsall.bat.\n\n```cmd\nmkdir debug && cd debug\n\"C:\\Program Files (x86)\\Microsoft Visual Studio 12.0\\VC\\vcvarsall.bat\" < amd64 | x86 >\ncmake .. -G \"NMake Makefiles\"\nnmake\n```\n\nIf you use the Visual Studio 2019 or 2017:\n\nplease open a command window by executing \"cmd.exe\".\nPlease specify \"x64\" for 64 bits Windows or specify \"x86\" for 32 bits Windows when you execute vcvarsall.bat.\n\n```cmd\nmkdir debug && cd debug\n\"c:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\Community\\VC\\Auxiliary\\Build\\vcvarsall.bat\" < x64 | x86 >\ncmake .. -G \"NMake Makefiles\"\nnmake\n```\n\nOr, you can simply open a command window by clicking Windows Start -> \"Visual Studio < 2019 | 2017 >\" folder -> \"x64 Native Tools Command Prompt for VS < 2019 | 2017 >\" or \"x86 Native Tools Command Prompt for VS < 2019 | 2017 >\" depends what architecture your Windows is, then execute commands as follows:\n\n```cmd\nmkdir debug && cd debug\ncmake .. -G \"NMake Makefiles\"\nnmake\n```\n\n### On macOS platform\n\nPlease install XCode command line tools and cmake. Verified with XCode 11.4+ on Catalina and Big Sur.\n\n```shell\nmkdir debug && cd debug\ncmake .. && cmake --build .\n```\n\n# 4. Installing\n\n## 4.1 On Linux platform\n\nAfter building successfully, TDengine can be installed by\n\n```bash\nsudo make install\n```\n\nUsers can find more information about directories installed on the system in the [directory and files](https://docs.tdengine.com/reference/directory/) section.\n\nInstalling from source code will also configure service management for TDengine.Users can also choose to [install from packages](https://docs.tdengine.com/get-started/package/) for it.\n\nTo start the service after installation, in a terminal, use:\n\n```bash\nsudo systemctl start taosd\n```\n\nThen users can use the TDengine CLI to connect the TDengine server. In a terminal, use:\n\n```bash\ntaos\n```\n\nIf TDengine CLI connects the server successfully, welcome messages and version info are printed. Otherwise, an error message is shown.\n\n## 4.2 On Windows platform\n\nAfter building successfully, TDengine can be installed by:\n\n```cmd\nnmake install\n```\n\n## 4.3 On macOS platform\n\nAfter building successfully, TDengine can be installed by:\n\n```bash\nsudo make install\n```\n\nUsers can find more information about directories installed on the system in the [directory and files](https://docs.tdengine.com/reference/directory/) section.\n\nInstalling from source code will also configure service management for TDengine.Users can also choose to [install from packages](https://docs.tdengine.com/get-started/package/) for it.\n\nTo start the service after installation, double-click the /applications/TDengine to start the program, or in a terminal, use:\n\n```bash\nsudo launchctl start com.tdengine.taosd\n```\n\nThen users can use the TDengine CLI to connect the TDengine server. In a terminal, use:\n\n```bash\ntaos\n```\n\nIf TDengine CLI connects the server successfully, welcome messages and version info are printed. Otherwise, an error message is shown.\n\n## 4.4 Quick Run\n\nIf you don't want to run TDengine as a service, you can run it in current shell. For example, to quickly start a TDengine server after building, run the command below in terminal: (We take Linux as an example, command on Windows will be `taosd.exe`)\n\n```bash\n./build/bin/taosd -c test/cfg\n```\n\nIn another terminal, use the TDengine CLI to connect the server:\n\n```bash\n./build/bin/taos -c test/cfg\n```\n\noption \"-c test/cfg\" specifies the system configuration file directory.\n\n# 5. Try TDengine\n\nIt is easy to run SQL commands from TDengine CLI which is the same as other SQL databases.\n\n```sql\nCREATE DATABASE demo;\nUSE demo;\nCREATE TABLE t (ts TIMESTAMP, speed INT);\nINSERT INTO t VALUES('2019-07-15 00:00:00', 10);\nINSERT INTO t VALUES('2019-07-15 01:00:00', 20);\nSELECT * FROM t;\n          ts          |   speed   |\n===================================\n 19-07-15 00:00:00.000|         10|\n 19-07-15 01:00:00.000|         20|\nQuery OK, 2 row(s) in set (0.001700s)\n```\n\n# 6. Developing with TDengine\n\n## Official Connectors\n\nTDengine provides abundant developing tools for users to develop on TDengine. Follow the links below to find your desired connectors and relevant documentation.\n\n- [Java](https://docs.tdengine.com/reference/connectors/java/)\n- [C/C++](https://docs.tdengine.com/reference/connectors/cpp/)\n- [Python](https://docs.tdengine.com/reference/connectors/python/)\n- [Go](https://docs.tdengine.com/reference/connectors/go/)\n- [Node.js](https://docs.tdengine.com/reference/connectors/node/)\n- [Rust](https://docs.tdengine.com/reference/connectors/rust/)\n- [C#](https://docs.tdengine.com/reference/connectors/csharp/)\n- [RESTful API](https://docs.tdengine.com/reference/connectors/rest-api/)\n\n# 7. Contribute to TDengine\n\nPlease follow the [contribution guidelines](CONTRIBUTING.md) to contribute to the project.\n\n# 8. Join the TDengine Community\n\nFor more information about TDengine, you can follow us on social media and join our Discord server:\n\n- [Discord](https://discord.com/invite/VZdSuUg4pS)\n- [Twitter](https://twitter.com/TDengineDB)\n- [LinkedIn](https://www.linkedin.com/company/tdengine/)\n- [YouTube](https://www.youtube.com/@tdengine)\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.125,
          "content": "# Security Policy\n\n## Reporting a Vulnerability\n\nPlease submit CVE to https://github.com/taosdata/TDengine/security/advisories.\n"
        },
        {
          "name": "build.sh",
          "type": "blob",
          "size": 0.1708984375,
          "content": "#!/bin/bash\n\nif [ ! -d debug ]; then\n    mkdir debug || echo -e \"failed to make directory for build\"\nfi\n\ncd debug && cmake .. -DBUILD_TOOLS=true -DBUILD_CONTRIB=true && make\n\n"
        },
        {
          "name": "cmake",
          "type": "tree",
          "content": null
        },
        {
          "name": "compile_flags.txt",
          "type": "blob",
          "size": 0.1298828125,
          "content": "-DLINUX\n-DWEBSOCKET\n-I/usr/include\n-Iinclude\n-Iinclude/os\n-Iinclude/common\n-Iinclude/util\n-Iinclude/libs/transport\n-Itools/shell/inc\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "deps",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "packaging",
          "type": "tree",
          "content": null
        },
        {
          "name": "source",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}