{
  "metadata": {
    "timestamp": 1736710422385,
    "page": 55,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "glfw/glfw",
      "stars": 13321,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".appveyor.yml",
          "type": "blob",
          "size": 1.16796875,
          "content": "image:\n    - Visual Studio 2015\nbranches:\n    only:\n        - ci\n        - master\n        - latest\n        - 3.3-stable\nskip_tags: true\nenvironment:\n    matrix:\n        - GENERATOR: MinGW Makefiles\n          BUILD_SHARED_LIBS: ON\n          CFLAGS: -Werror\n        - GENERATOR: MinGW Makefiles\n          BUILD_SHARED_LIBS: OFF\n          CFLAGS: -Werror\n        - GENERATOR: Visual Studio 12 2013\n          BUILD_SHARED_LIBS: ON\n          CFLAGS: /WX\n        - GENERATOR: Visual Studio 12 2013\n          BUILD_SHARED_LIBS: OFF\n          CFLAGS: /WX\nmatrix:\n    fast_finish: true\nfor:\n-\n    matrix:\n        only:\n            - GENERATOR: MinGW Makefiles\n    build_script:\n        - set PATH=%PATH:C:\\Program Files\\Git\\usr\\bin=C:\\MinGW\\bin%\n        - cmake -B build -G \"%GENERATOR%\" -DBUILD_SHARED_LIBS=%BUILD_SHARED_LIBS%\n        - cmake --build build\n-\n    matrix:\n        only:\n            - GENERATOR: Visual Studio 12 2013\n    build_script:\n        - cmake -B build -G \"%GENERATOR%\" -DBUILD_SHARED_LIBS=%BUILD_SHARED_LIBS%\n        - cmake --build build --target glfw\nnotifications:\n    - provider: Email\n      to:\n        - ci@glfw.org\n      on_build_failure: true\n      on_build_success: false\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 1.2451171875,
          "content": "# EditorConfig for GLFW and its internal dependencies\n#\n# All files created by GLFW should indent with four spaces unless their format requires\n# otherwise.  A few files still use other indent styles for historical reasons.\n#\n# Dependencies have (what seemed to be) their existing styles described.  Those with\n# existing trailing whitespace have it preserved to avoid cluttering future commits.\n\nroot = true\n\n[*]\ncharset = utf-8\nend_of_line = lf\n\n[include/GLFW/*.h]\nindent_style = space\nindent_size = 4\n\n[{src,examples,tests}/*.{c,m,h,rc,in}]\nindent_style = space\nindent_size = 4\n\n[CMakeLists.txt]\nindent_style = space\nindent_size = 4\n\n[CMake/**.{cmake,in}]\nindent_style = space\nindent_size = 4\n\n[*.{md}]\nindent_style = space\nindent_size = 4\ntrim_trailing_whitespace = false\n\n[DoxygenLayout.xml]\nindent_style = space\nindent_size = 2\n\n[docs/*.{scss,html}]\nindent_style = tab\nindent_size = unset\n\n[deps/mingw/*.h]\nindent_style = space\nindent_size = 4\ntab_width = 8\ntrim_trailing_whitespace = false\n\n[deps/getopt.{c,h}]\nindent_style = space\nindent_size = 2\n\n[deps/linmath.h]\nindent_style = tab\ntab_width = 4\nindent_size = 4\ntrim_trailing_whitespace = false\n\n[deps/nuklear*.h]\nindent_style = space\nindent_size = 4\n\n[deps/tinycthread.{c,h}]\nindent_style = space\nindent_size = 2\n\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.138671875,
          "content": "*.m linguist-language=Objective-C\n.gitignore export-ignore\n.gitattributes export-ignore\n.travis.yml export-ignore\n.appveyor.yml export-ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.4150390625,
          "content": "# The canonical out-of-tree build subdirectory\nbuild\nbuild-*\n\n# Visual Studio clutter\n_ReSharper*\n*.sdf\n*.suo\n*.dir\n*.vcxproj*\n*.sln\n.vs\nCMakeSettings.json\nWin32\nx64\nDebug\nRelease\nMinSizeRel\nRelWithDebInfo\n*.opensdf\n\n# Xcode clutter\nGLFW.build\nGLFW.xcodeproj\n\n# macOS clutter\n.DS_Store\n\n# Makefile generator clutter\nMakefile\n\n# Ninja generator clutter\nbuild.ninja\nrules.ninja\n.ninja_deps\n.ninja_log\n\n# CMake clutter\nCMakeCache.txt\nCMakeFiles\nCMakeScripts\nCMakeDoxyfile.in\nCMakeDoxygenDefaults.cmake\ncmake_install.cmake\ncmake_uninstall.cmake\n\n# Generated files\ndocs/Doxyfile\ndocs/html\ndocs/warnings.txt\ndocs/doxygen_sqlite3.db\nsrc/glfw_config.h\nsrc/glfw3.pc\nsrc/glfw3Config.cmake\nsrc/glfw3ConfigVersion.cmake\n\n# Compiled binaries\nsrc/libglfw.so\nsrc/libglfw.so.3\nsrc/libglfw.so.3.5\nsrc/libglfw.dylib\nsrc/libglfw.dylib\nsrc/libglfw.3.dylib\nsrc/libglfw.3.5.dylib\nsrc/libglfw3.a\nsrc/glfw3.lib\nsrc/glfw3.dll\nsrc/glfw3dll.lib\nsrc/libglfw3dll.a\nexamples/*.app\nexamples/*.exe\nexamples/boing\nexamples/gears\nexamples/heightmap\nexamples/offscreen\nexamples/particles\nexamples/splitview\nexamples/sharing\nexamples/triangle-opengl\nexamples/wave\nexamples/windows\ntests/*.app\ntests/*.exe\ntests/clipboard\ntests/cursor\ntests/empty\ntests/events\ntests/gamma\ntests/glfwinfo\ntests/icon\ntests/iconify\ntests/inputlag\ntests/joysticks\ntests/monitors\ntests/msaa\ntests/reopen\ntests/tearing\ntests/threads\ntests/timeout\ntests/title\ntests/triangle-vulkan\ntests/window\ntests/windows\n\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 0.375,
          "content": "Camilla Löwy <elmindreda@glfw.org> <elmindreda@users.sourceforge.net>\nCamilla Löwy <elmindreda@glfw.org> <elmindreda@elmindreda.org>\nCamilla Löwy <elmindreda@glfw.org>\n\nEmmanuel Gil Peyrot <linkmauve@linkmauve.fr>\n\nMarcus Geelnard <m@bitsnbites.eu> <marcus256@users.sourceforge.net>\nMarcus Geelnard <m@bitsnbites.eu> <marcus@geelnards-pc.(none)>\nMarcus Geelnard <m@bitsnbites.eu>\n\n"
        },
        {
          "name": "CMake",
          "type": "tree",
          "content": null
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 5.169921875,
          "content": "cmake_minimum_required(VERSION 3.16...3.28 FATAL_ERROR)\n\nproject(GLFW VERSION 3.5.0 LANGUAGES C HOMEPAGE_URL \"https://www.glfw.org/\")\n\nset_property(GLOBAL PROPERTY USE_FOLDERS ON)\n\nstring(COMPARE EQUAL \"${CMAKE_CURRENT_SOURCE_DIR}\" \"${CMAKE_SOURCE_DIR}\" GLFW_STANDALONE)\n\noption(BUILD_SHARED_LIBS \"Build shared libraries\" OFF)\noption(GLFW_BUILD_EXAMPLES \"Build the GLFW example programs\" ${GLFW_STANDALONE})\noption(GLFW_BUILD_TESTS \"Build the GLFW test programs\" ${GLFW_STANDALONE})\noption(GLFW_BUILD_DOCS \"Build the GLFW documentation\" ON)\noption(GLFW_INSTALL \"Generate installation target\" ON)\n\ninclude(GNUInstallDirs)\ninclude(CMakeDependentOption)\n\nif (GLFW_USE_OSMESA)\n    message(FATAL_ERROR \"GLFW_USE_OSMESA has been removed; set the GLFW_PLATFORM init hint\")\nendif()\n\nif (DEFINED GLFW_USE_WAYLAND AND UNIX AND NOT APPLE)\n    message(FATAL_ERROR\n        \"GLFW_USE_WAYLAND has been removed; delete the CMake cache and set GLFW_BUILD_WAYLAND and GLFW_BUILD_X11 instead\")\nendif()\n\ncmake_dependent_option(GLFW_BUILD_WIN32 \"Build support for Win32\" ON \"WIN32\" OFF)\ncmake_dependent_option(GLFW_BUILD_COCOA \"Build support for Cocoa\" ON \"APPLE\" OFF)\ncmake_dependent_option(GLFW_BUILD_X11 \"Build support for X11\" ON \"UNIX;NOT APPLE\" OFF)\ncmake_dependent_option(GLFW_BUILD_WAYLAND \"Build support for Wayland\" ON \"UNIX;NOT APPLE\" OFF)\n\ncmake_dependent_option(GLFW_USE_HYBRID_HPG \"Force use of high-performance GPU on hybrid systems\" OFF\n                       \"WIN32\" OFF)\ncmake_dependent_option(USE_MSVC_RUNTIME_LIBRARY_DLL \"Use MSVC runtime library DLL\" ON\n                       \"MSVC\" OFF)\n\nset(GLFW_LIBRARY_TYPE \"${GLFW_LIBRARY_TYPE}\" CACHE STRING\n    \"Library type override for GLFW (SHARED, STATIC, OBJECT, or empty to follow BUILD_SHARED_LIBS)\")\n\nif (GLFW_LIBRARY_TYPE)\n    if (GLFW_LIBRARY_TYPE STREQUAL \"SHARED\")\n        set(GLFW_BUILD_SHARED_LIBRARY TRUE)\n    else()\n        set(GLFW_BUILD_SHARED_LIBRARY FALSE)\n    endif()\nelse()\n    set(GLFW_BUILD_SHARED_LIBRARY ${BUILD_SHARED_LIBS})\nendif()\n\nlist(APPEND CMAKE_MODULE_PATH \"${GLFW_SOURCE_DIR}/CMake/modules\")\n\nfind_package(Threads REQUIRED)\n\n#--------------------------------------------------------------------\n# Report backend selection\n#--------------------------------------------------------------------\nif (GLFW_BUILD_WIN32)\n    message(STATUS \"Including Win32 support\")\nendif()\nif (GLFW_BUILD_COCOA)\n    message(STATUS \"Including Cocoa support\")\nendif()\nif (GLFW_BUILD_WAYLAND)\n    message(STATUS \"Including Wayland support\")\nendif()\nif (GLFW_BUILD_X11)\n    message(STATUS \"Including X11 support\")\nendif()\n\n#--------------------------------------------------------------------\n# Apply Microsoft C runtime library option\n# This is here because it also applies to tests and examples\n#--------------------------------------------------------------------\nif (MSVC AND NOT USE_MSVC_RUNTIME_LIBRARY_DLL)\n    set(CMAKE_MSVC_RUNTIME_LIBRARY \"MultiThreaded$<$<CONFIG:Debug>:Debug>\")\nendif()\n\n#--------------------------------------------------------------------\n# Create generated files\n#--------------------------------------------------------------------\ninclude(CMakePackageConfigHelpers)\n\nset(GLFW_CONFIG_PATH \"${CMAKE_INSTALL_LIBDIR}/cmake/glfw3\")\n\nconfigure_package_config_file(CMake/glfw3Config.cmake.in\n                              src/glfw3Config.cmake\n                              INSTALL_DESTINATION \"${GLFW_CONFIG_PATH}\"\n                              NO_CHECK_REQUIRED_COMPONENTS_MACRO)\n\nwrite_basic_package_version_file(src/glfw3ConfigVersion.cmake\n                                 VERSION ${GLFW_VERSION}\n                                 COMPATIBILITY SameMajorVersion)\n\n#--------------------------------------------------------------------\n# Add subdirectories\n#--------------------------------------------------------------------\nadd_subdirectory(src)\n\nif (GLFW_BUILD_EXAMPLES)\n    add_subdirectory(examples)\nendif()\n\nif (GLFW_BUILD_TESTS)\n    add_subdirectory(tests)\nendif()\n\nif (GLFW_BUILD_DOCS)\n    add_subdirectory(docs)\nendif()\n\n#--------------------------------------------------------------------\n# Install files other than the library\n# The library is installed by src/CMakeLists.txt\n#--------------------------------------------------------------------\nif (GLFW_INSTALL)\n    install(DIRECTORY include/GLFW DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}\n            FILES_MATCHING PATTERN glfw3.h PATTERN glfw3native.h)\n\n    install(FILES \"${GLFW_BINARY_DIR}/src/glfw3Config.cmake\"\n                  \"${GLFW_BINARY_DIR}/src/glfw3ConfigVersion.cmake\"\n            DESTINATION \"${GLFW_CONFIG_PATH}\")\n\n    install(EXPORT glfwTargets FILE glfw3Targets.cmake\n            EXPORT_LINK_INTERFACE_LIBRARIES\n            DESTINATION \"${GLFW_CONFIG_PATH}\")\n    install(FILES \"${GLFW_BINARY_DIR}/src/glfw3.pc\"\n            DESTINATION \"${CMAKE_INSTALL_LIBDIR}/pkgconfig\")\n\n    # Only generate this target if no higher-level project already has\n    if (NOT TARGET uninstall)\n        configure_file(CMake/cmake_uninstall.cmake.in\n                       cmake_uninstall.cmake IMMEDIATE @ONLY)\n\n        add_custom_target(uninstall\n                          \"${CMAKE_COMMAND}\" -P\n                          \"${GLFW_BINARY_DIR}/cmake_uninstall.cmake\")\n        set_target_properties(uninstall PROPERTIES FOLDER \"GLFW3\")\n    endif()\nendif()\n\n"
        },
        {
          "name": "CONTRIBUTORS.md",
          "type": "blob",
          "size": 5.2451171875,
          "content": "# Acknowledgements\n\nGLFW exists because people around the world donated their time and lent their\nskills.  This list only includes contributions to the main repository and\nexcludes other invaluable contributions like language bindings and text and\nvideo tutorials.\n\n - Bobyshev Alexander\n - Laurent Aphecetche\n - Matt Arsenault\n - Takuro Ashie\n - ashishgamedev\n - David Avedissian\n - Luca Bacci\n - Keith Bauer\n - John Bartholomew\n - Coşku Baş\n - Bayemite\n - Niklas Behrens\n - Andrew Belt\n - Nevyn Bengtsson\n - Niklas Bergström\n - Denis Bernard\n - BiBi\n - Doug Binks\n - blanco\n - Waris Boonyasiriwat\n - Kyle Brenneman\n - Rok Breulj\n - TheBrokenRail\n - Kai Burjack\n - Martin Capitanio\n - Nicolas Caramelli\n - David Carlier\n - Arturo Castro\n - Jose Luis Cercós Pita\n - Chi-kwan Chan\n - Victor Chernyakin\n - TheChocolateOre\n - Ali Chraghi\n - Joseph Chua\n - Ian Clarkson\n - Michał Cichoń\n - Lambert Clara\n - Anna Clarke\n - Josh Codd\n - Yaron Cohen-Tal\n - Omar Cornut\n - Andrew Corrigan\n - Bailey Cosier\n - Noel Cower\n - James Cowgill\n - CuriouserThing\n - Bill Currie\n - Jason Daly\n - danhambleton\n - Jarrod Davis\n - Olivier Delannoy\n - Paul R. Deppe\n - Michael Dickens\n - Роман Донченко\n - Mario Dorn\n - Wolfgang Draxinger\n - Jonathan Dummer\n - Ralph Eastwood\n - Fredrik Ehnbom\n - Robin Eklind\n - Jan Ekström\n - Siavash Eliasi\n - Ahmad Fatoum\n - Nikita Fediuchin\n - Felipe Ferreira\n - Michael Fogleman\n - forworldm\n - Jason Francis\n - Gerald Franz\n - Mário Freitas\n - GeO4d\n - Marcus Geelnard\n - Gegy\n - ghuser404\n - Charles Giessen\n - Ryan C. Gordon\n - Stephen Gowen\n - Kovid Goyal\n - Kevin Grandemange\n - Eloi Marín Gratacós\n - Grzesiek11\n - Stefan Gustavson\n - Andrew Gutekanst\n - Stephen Gutekanst\n - Jonathan Hale\n - Daniel Hauser\n - hdf89shfdfs\n - Moritz Heinemann\n - Sylvain Hellegouarch\n - Björn Hempel\n - Matthew Henry\n - heromyth\n - Lucas Hinderberger\n - Paul Holden\n - Hajime Hoshi\n - Warren Hu\n - Charles Huber\n - Brent Huisman\n - Florian Hülsmann\n - illustris\n - InKryption\n - IntellectualKitty\n - Aaron Jacobs\n - JannikGM\n - Erik S. V. Jansson\n - jjYBdx4IL\n - Peter Johnson\n - Toni Jovanoski\n - Arseny Kapoulkine\n - Cem Karan\n - Osman Keskin\n - Koray Kilinc\n - Josh Kilmer\n - Byunghoon Kim\n - Cameron King\n - Peter Knut\n - Christoph Kubisch\n - Yuri Kunde Schlesner\n - Rokas Kupstys\n - Konstantin Käfer\n - Eric Larson\n - Guillaume Lebrun\n - Francis Lecavalier\n - Jong Won Lee\n - Robin Leffmann\n - Glenn Lewis\n - Shane Liesegang\n - Anders Lindqvist\n - Leon Linhart\n - Marco Lizza\n - lo-v-ol\n - Eyal Lotem\n - Aaron Loucks\n - Ned Loynd\n - Luflosi\n - lukect\n - Tristam MacDonald\n - Jean-Luc Mackail\n - Hans Mackowiak\n - Ramiro Magno\n - Дмитри Малышев\n - Zbigniew Mandziejewicz\n - Adam Marcus\n - Célestin Marot\n - Kyle McDonald\n - David V. McKay\n - David Medlock\n - Bryce Mehring\n - Jonathan Mercier\n - Marcel Metz\n - Liam Middlebrook\n - mightgoyardstill\n - Ave Milia\n - Icyllis Milica\n - Jonathan Miller\n - Kenneth Miller\n - Bruce Mitchener\n - Jack Moffitt\n - Ravi Mohan\n - Jeff Molofee\n - Alexander Monakov\n - Pierre Morel\n - Jon Morton\n - Pierre Moulon\n - Martins Mozeiko\n - Pascal Muetschard\n - James Murphy\n - Julian Møller\n - Julius Häger\n - Nat!\n - NateIsStalling\n - ndogxj\n - F. Nedelec\n - n3rdopolis\n - Kristian Nielsen\n - Joel Niemelä\n - Victor Nova\n - Kamil Nowakowski\n - onox\n - Denis Ovod\n - Ozzy\n - Andri Pálsson\n - luz paz\n - Peoro\n - Braden Pellett\n - Christopher Pelloux\n - Michael Pennington\n - Arturo J. Pérez\n - Vladimir Perminov\n - Olivier Perret\n - Anthony Pesch\n - Orson Peters\n - Emmanuel Gil Peyrot\n - Cyril Pichard\n - Pilzschaf\n - Keith Pitt\n - Stanislav Podgorskiy\n - Konstantin Podsvirov\n - Nathan Poirier\n - Pokechu22\n - Alexandre Pretyman\n - Pablo Prietz\n - przemekmirek\n - pthom\n - Martin Pulec\n - Guillaume Racicot\n - Juan Ramos\n - Christian Rauch\n - Philip Rideout\n - Eddie Ringle\n - Max Risuhin\n - Joe Roback\n - Jorge Rodriguez\n - Jari Ronkainen\n - Luca Rood\n - Ed Ropple\n - Aleksey Rybalkin\n - Mikko Rytkönen\n - Riku Salminen\n - Yoshinori Sano\n - Brandon Schaefer\n - Sebastian Schuberth\n - Scr3amer\n - Jan Schuerkamp\n - Christian Sdunek\n - Matt Sealey\n - Steve Sexton\n - Arkady Shapkin\n - Mingjie Shen\n - Ali Sherief\n - Yoshiki Shibukawa\n - Dmitri Shuralyov\n - Joao da Silva\n - Daniel Sieger\n - Daljit Singh\n - Michael Skec\n - Daniel Skorupski\n - Slemmie\n - Anthony Smith\n - Bradley Smith\n - Cliff Smolinsky\n - Patrick Snape\n - Erlend Sogge Heggen\n - Olivier Sohn\n - Julian Squires\n - Johannes Stein\n - Pontus Stenetorp\n - Michael Stocker\n - Justin Stoecker\n - Elviss Strazdins\n - Paul Sultana\n - Nathan Sweet\n - TTK-Bandit\n - Nuno Teixeira\n - Jared Tiala\n - Sergey Tikhomirov\n - Arthur Tombs\n - TronicLabs\n - Ioannis Tsakpinis\n - Samuli Tuomola\n - Matthew Turner\n - urraka\n - Elias Vanderstuyft\n - Stef Velzel\n - Jari Vetoniemi\n - Ricardo Vieira\n - Nicholas Vitovitch\n - Vladimír Vondruš\n - Simon Voordouw\n - Corentin Wallez\n - Torsten Walluhn\n - Patrick Walton\n - Jim Wang\n - Xo Wang\n - Andre Weissflog\n - Jay Weisskopf\n - Frank Wille\n - Andy Williams\n - Joel Winarske\n - Richard A. Wilkes\n - Tatsuya Yatagawa\n - Ryogo Yoshimura\n - Lukas Zanner\n - Andrey Zholos\n - Aihui Zhu\n - Santi Zupancic\n - Jonas Ådahl\n - Lasse Öörni\n - Leonard König\n - All the unmentioned and anonymous contributors in the GLFW community, for bug\n   reports, patches, feedback, testing and encouragement\n\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 0.8828125,
          "content": "Copyright (c) 2002-2006 Marcus Geelnard\n\nCopyright (c) 2006-2019 Camilla Löwy\n\nThis software is provided 'as-is', without any express or implied\nwarranty. In no event will the authors be held liable for any damages\narising from the use of this software.\n\nPermission is granted to anyone to use this software for any purpose,\nincluding commercial applications, and to alter it and redistribute it\nfreely, subject to the following restrictions:\n\n1. The origin of this software must not be misrepresented; you must not\n   claim that you wrote the original software. If you use this software\n   in a product, an acknowledgment in the product documentation would\n   be appreciated but is not required.\n\n2. Altered source versions must be plainly marked as such, and must not\n   be misrepresented as being the original software.\n\n3. This notice may not be removed or altered from any source\n   distribution.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.259765625,
          "content": "# GLFW\n\n[![Build status](https://github.com/glfw/glfw/actions/workflows/build.yml/badge.svg)](https://github.com/glfw/glfw/actions)\n[![Build status](https://ci.appveyor.com/api/projects/status/0kf0ct9831i5l6sp/branch/master?svg=true)](https://ci.appveyor.com/project/elmindreda/glfw)\n\n## Introduction\n\nGLFW is an Open Source, multi-platform library for OpenGL, OpenGL ES and Vulkan\napplication development.  It provides a simple, platform-independent API for\ncreating windows, contexts and surfaces, reading input, handling events, etc.\n\nGLFW natively supports Windows, macOS and Linux and other Unix-like systems.  On\nLinux both Wayland and X11 are supported.\n\nGLFW is licensed under the [zlib/libpng\nlicense](https://www.glfw.org/license.html).\n\nYou can [download](https://www.glfw.org/download.html) the latest stable release\nas source or Windows binaries.  Each release starting with 3.0 also has\na corresponding [annotated tag](https://github.com/glfw/glfw/releases) with\nsource and binary archives.\n\nThe [documentation](https://www.glfw.org/docs/latest/) is available online and is\nincluded in all source and binary archives.  See the [release\nnotes](https://www.glfw.org/docs/latest/news.html) for new features, caveats and\ndeprecations in the latest release.  For more details see the [version\nhistory](https://www.glfw.org/changelog.html).\n\nThe `master` branch is the stable integration branch and _should_ always compile\nand run on all supported platforms, although details of newly added features may\nchange until they have been included in a release.  New features and many bug\nfixes live in [other branches](https://github.com/glfw/glfw/branches/all) until\nthey are stable enough to merge.\n\nIf you are new to GLFW, you may find the\n[tutorial](https://www.glfw.org/docs/latest/quick.html) for GLFW 3 useful.  If\nyou have used GLFW 2 in the past, there is a [transition\nguide](https://www.glfw.org/docs/latest/moving.html) for moving to the GLFW\n3 API.\n\nGLFW exists because of the contributions of [many people](CONTRIBUTORS.md)\naround the world, whether by reporting bugs, providing community support, adding\nfeatures, reviewing or testing code, debugging, proofreading docs, suggesting\nfeatures or fixing bugs.\n\n\n## Compiling GLFW\n\nGLFW is written primarily in C99, with parts of macOS support being written in\nObjective-C.  GLFW itself requires only the headers and libraries for your OS\nand window system.  It does not need any additional headers for context creation\nAPIs (WGL, GLX, EGL, NSGL, OSMesa) or rendering APIs (OpenGL, OpenGL ES, Vulkan)\nto enable support for them.\n\nGLFW supports compilation on Windows with Visual C++ 2013 and later, MinGW and\nMinGW-w64, on macOS with Clang and on Linux and other Unix-like systems with GCC\nand Clang.  It will likely compile in other environments as well, but this is\nnot regularly tested.\n\nThere are [pre-compiled binaries](https://www.glfw.org/download.html) available\nfor all supported compilers on Windows and macOS.\n\nSee the [compilation guide](https://www.glfw.org/docs/latest/compile.html) for\nmore information about how to compile GLFW yourself.\n\n\n## Using GLFW\n\nSee the [documentation](https://www.glfw.org/docs/latest/) for tutorials, guides\nand the API reference.\n\n\n## Contributing to GLFW\n\nSee the [contribution\nguide](https://github.com/glfw/glfw/blob/master/docs/CONTRIBUTING.md) for\nmore information.\n\n\n## System requirements\n\nGLFW supports Windows XP and later and macOS 10.11 and later.  Linux and other\nUnix-like systems running the X Window System are supported even without\na desktop environment or modern extensions, although some features require\na running window or clipboard manager.  The OSMesa backend requires Mesa 6.3.\n\nSee the [compatibility guide](https://www.glfw.org/docs/latest/compat.html)\nin the documentation for more information.\n\n\n## Dependencies\n\nGLFW itself needs only CMake 3.16 or later and the headers and libraries for your\nOS and window system.\n\nThe examples and test programs depend on a number of tiny libraries.  These are\nlocated in the `deps/` directory.\n\n - [getopt\\_port](https://github.com/kimgr/getopt_port/) for examples\n   with command-line options\n - [TinyCThread](https://github.com/tinycthread/tinycthread) for threaded\n   examples\n - [glad2](https://github.com/Dav1dde/glad) for loading OpenGL and Vulkan\n   functions\n - [linmath.h](https://github.com/datenwolf/linmath.h) for linear algebra in\n   examples\n - [Nuklear](https://github.com/Immediate-Mode-UI/Nuklear) for test and example UI\n - [stb\\_image\\_write](https://github.com/nothings/stb) for writing images to disk\n\nThe documentation is generated with [Doxygen](https://doxygen.org/) if CMake can\nfind that tool.\n\n\n## Reporting bugs\n\nBugs are reported to our [issue tracker](https://github.com/glfw/glfw/issues).\nPlease check the [contribution\nguide](https://github.com/glfw/glfw/blob/master/docs/CONTRIBUTING.md) for\ninformation on what to include when reporting a bug.\n\n\n## Changelog since 3.4\n\n - Added `GLFW_UNLIMITED_MOUSE_BUTTONS` input mode that allows mouse buttons beyond\n   the limit of the mouse button tokens to be reported (#2423)\n - Updated minimum CMake version to 3.16 (#2541)\n - [Cocoa] Added `QuartzCore` framework as link-time dependency\n - [Cocoa] Removed support for OS X 10.10 Yosemite and earlier (#2506)\n - [Wayland] Bugfix: The fractional scaling related objects were not destroyed\n - [Wayland] Bugfix: `glfwInit` would segfault on compositor with no seat (#2517)\n - [Wayland] Bugfix: A drag entering a non-GLFW surface could cause a segfault\n - [Null] Added Vulkan 'window' surface creation via `VK_EXT_headless_surface`\n - [Null] Added EGL context creation on Mesa via `EGL_MESA_platform_surfaceless`\n - [EGL] Allowed native access on Wayland with `GLFW_CONTEXT_CREATION_API` set to\n   `GLFW_NATIVE_CONTEXT_API` (#2518)\n\n\n## Contact\n\nOn [glfw.org](https://www.glfw.org/) you can find the latest version of GLFW, as\nwell as news, documentation and other information about the project.\n\nIf you have questions related to the use of GLFW, we have a\n[forum](https://discourse.glfw.org/).\n\nIf you have a bug to report, a patch to submit or a feature you'd like to\nrequest, please file it in the\n[issue tracker](https://github.com/glfw/glfw/issues) on GitHub.\n\nFinally, if you're interested in helping out with the development of GLFW or\nporting it to your favorite platform, join us on the forum or GitHub.\n\n"
        },
        {
          "name": "deps",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}