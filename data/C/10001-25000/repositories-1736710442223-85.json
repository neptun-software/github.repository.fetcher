{
  "metadata": {
    "timestamp": 1736710442223,
    "page": 85,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "citusdata/citus",
      "stars": 10818,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".codeclimate.yml",
          "type": "blob",
          "size": 0.25390625,
          "content": "exclude_patterns:\n  - \"src/backend/distributed/utils/citus_outfuncs.c\"\n  - \"src/backend/distributed/deparser/ruleutils_*.c\"\n  - \"src/include/distributed/citus_nodes.h\"\n  - \"src/backend/distributed/safeclib\"\n  - \"src/backend/columnar/safeclib\"\n  - \"**/vendor/\"\n"
        },
        {
          "name": ".codecov.yml",
          "type": "blob",
          "size": 0.6494140625,
          "content": "codecov:\n  notify:\n    require_ci_to_pass: yes\n\ncoverage:\n  precision: 2\n  round: down\n  range: \"70...100\"\n\n  ignore:\n    - \"src/backend/distributed/utils/citus_outfuncs.c\"\n    - \"src/backend/distributed/deparser/ruleutils_*.c\"\n    - \"src/include/distributed/citus_nodes.h\"\n    - \"src/backend/distributed/safeclib\"\n    - \"vendor\"\n\n  status:\n    project:\n      default:\n        target: 87.5\n        threshold: 0.5\n\n    patch:\n      default:\n        target: 75\n\n    changes: no\n\nparsers:\n  gcov:\n    branch_detection:\n      conditional: yes\n      loop: yes\n      method: no\n      macro: no\n\ncomment:\n  layout: \"header, diff\"\n  behavior: default\n  require_changes: no\n"
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.50390625,
          "content": "# top-most EditorConfig file\nroot = true\n\n# rules for all files\n# we use tabs with indent size 4\n[*]\nindent_style = tab\nindent_size = 4\ntab_width = 4\nend_of_line = lf\ninsert_final_newline = true\ncharset = utf-8\ntrim_trailing_whitespace = true\n\n# Don't change test output files, pngs or test data files\n[*.{out,png,data}]\ninsert_final_newline = unset\ntrim_trailing_whitespace = unset\n\n[*.{sql,sh,py,toml}]\nindent_style = space\nindent_size = 4\ntab_width = 4\n\n[*.yml]\nindent_style = space\nindent_size = 2\ntab_width = 2\n"
        },
        {
          "name": ".flake8",
          "type": "blob",
          "size": 0.2626953125,
          "content": "[flake8]\n# E203 is ignored for black\nextend-ignore = E203\n# black will truncate to 88 characters usually, but long string literals it\n# might keep. That's fine in most cases unless it gets really excessive.\nmax-line-length = 150\nexclude = .git,__pycache__,vendor,tmp_*\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 1.5517578125,
          "content": "*\t\twhitespace=space-before-tab,trailing-space\n*.[chly]\twhitespace=space-before-tab,trailing-space,indent-with-non-tab,tabwidth=4\n*.dsl\t\twhitespace=space-before-tab,trailing-space,tab-in-indent\n*.patch\t\t-whitespace\n*.pl\t\twhitespace=space-before-tab,trailing-space,tabwidth=4\n*.po\t\twhitespace=space-before-tab,trailing-space,tab-in-indent,-blank-at-eof\n*.sgml\t\twhitespace=space-before-tab,trailing-space,tab-in-indent,-blank-at-eol\n*.x[ms]l\twhitespace=space-before-tab,trailing-space,tab-in-indent\n\n# Avoid confusing ASCII underlines with leftover merge conflict markers\nREADME\t\tconflict-marker-size=32\nREADME.*\tconflict-marker-size=32\n\n# Certain data files that contain special whitespace, and other special cases\n*.data\t\t\t\t\t\t-whitespace\n\n# Test output files that contain extra whitespace\n*.out\t\t\t\t\t-whitespace\n\n# These files are maintained or generated elsewhere.  We take them as is.\nconfigure\t\t\t\t-whitespace\n\n# all C files (implementation and header) use our style...\n*.[ch] citus-style\n\n# except these exceptions...\nsrc/backend/distributed/utils/citus_outfuncs.c -citus-style\nsrc/backend/distributed/deparser/ruleutils_13.c -citus-style\nsrc/backend/distributed/deparser/ruleutils_14.c -citus-style\nsrc/backend/distributed/deparser/ruleutils_15.c -citus-style\nsrc/backend/distributed/deparser/ruleutils_16.c -citus-style\nsrc/backend/distributed/commands/index_pg_source.c -citus-style\n\nsrc/include/distributed/citus_nodes.h -citus-style\n/vendor/** -citus-style\n\n# Hide diff on github by default for copied udfs\nsrc/backend/distributed/sql/udfs/*/[123456789]*.sql linguist-generated=true\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.7890625,
          "content": "# Global excludes across all subdirectories\n*.o\n*.so\n*.so.[0-9]\n*.so.[0-9].[0-9]\n*.sl\n*.sl.[0-9]\n*.sl.[0-9].[0-9]\n*.dylib\n*.dll\n*.a\n*.mo\n*.pot\nobjfiles.txt\n.deps/\n*.gcno\n*.gcda\n*.gcov\n*.gcov.out\nlcov.info\ncoverage/\n*.vcproj\n*.vcxproj\nwin32ver.rc\n*.exe\nlib*dll.def\nlib*.pc\n*.bc\n\n# Local excludes in root directory\n/config.log\n/config.status\n/pgsql.sln\n/pgsql.sln.cache\n/Debug/\n/Release/\n/autom4te.cache\n/Makefile.global\n/src/Makefile.custom\n/compile_commands.json\n/src/backend/distributed/cdc/build-cdc-*/*\n/src/test/cdc/tmp_check/*\n\n\n# temporary files vim creates\n*.swp\n\n# vscode\n.vscode/*\n\n# output from diff normalization that shouldn't be commited\n*.unmodified\n*.modified\n\n# style related temporary outputs\n*.uncrustify\n.venv\n\n# added output when modifying check_gucs_are_alphabetically_sorted.sh\nguc.out\n"
        },
        {
          "name": ".ignore",
          "type": "blob",
          "size": 0.0078125,
          "content": "/vendor\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 107.5576171875,
          "content": "### citus v12.1.6 (Nov 14, 2024) ###\n\n* Propagates `SECURITY LABEL .. ON ROLE` statements (#7304)\n\n* Fixes crash caused by running queries with window partition (#7718)\n\n### citus v12.1.5 (July 17, 2024) ###\n\n* Adds support for MERGE commands with single shard distributed target tables\n  (#7643)\n\n* Fixes an error with MERGE commands when insert value does not have source\n  distribution column (#7627)\n\n### citus v12.1.4 (May 28, 2024) ###\n\n* Adds null check for node in HasRangeTableRef (#7604)\n\n### citus v12.1.3 (April 18, 2024) ###\n\n* Allows overwriting host name for all inter-node connections by\n  supporting \"host\" parameter in citus.node_conninfo (#7541)\n\n* Changes the order in which the locks are acquired for the target and\n  reference tables, when a modify request is initiated from a worker\n  node that is not the \"FirstWorkerNode\" (#7542)\n\n* Fixes a performance issue when distributing a table that depends on an\n  extension (#7574)\n\n* Fixes a performance issue when using \"\\d tablename\" on a server with\n  many tables (#7577)\n\n* Fixes a crash caused by some form of ALTER TABLE ADD COLUMN\n  statements. When adding multiple columns, if one of the ADD COLUMN\n  statements contains a FOREIGN constraint omitting the referenced\n  columns in the statement, a SEGFAULT was occurring. (#7522)\n\n* Fixes a performance issue when creating distributed tables if many\n  already exist (#7575, #7579)\n\n* Fixes a bug when hostname in pg_dist_node resolves to multiple IPs\n  (#7377)\n\n* Fixes performance issue when tracking foreign key constraints on\n  systems with many constraints (#7578)\n\n* Fixes segmentation fault when using CASE WHEN in DO block within\n  functions. (#7554)\n\n* Fixes undefined behavior in master_disable_node due to argument\n  mismatch (#7492)\n\n* Fixes some potential bugs by correctly marking some variables as\n  volatile (#7570)\n\n* Logs username in the failed connection message (#7432)\n\n### citus v11.0.10 (February 15, 2024) ###\n\n* Removes pg_send_cancellation and all references (#7135)\n\n### citus v12.1.2 (February 12, 2024) ###\n\n* Fixes the incorrect column count after ALTER TABLE (#7379)\n\n### citus v12.0.1 (July 11, 2023) ###\n\n* Fixes incorrect default value assumption for VACUUM(PROCESS_TOAST) #7122)\n\n* Fixes a bug that causes an unexpected error when adding a column\n  with a NULL constraint (#7093)\n\n* Fixes a bug that could cause COPY logic to skip data in case of OOM (#7152)\n\n* Fixes a bug with deleting colocation groups (#6929)\n\n* Fixes memory and memory contexts leaks in Foreign Constraint Graphs (#7236)\n\n* Fixes shard size bug with too many shards (#7018)\n\n* Fixes the incorrect column count after ALTER TABLE (#7379)\n\n* Improves citus_tables view performance (#7050)\n\n* Makes sure to disallow creating a replicated distributed table\n  concurrently (#7219)\n\n* Removes pg_send_cancellation and all references (#7135)\n\n### citus v11.3.1 (February 12, 2024) ###\n\n* Disallows MERGE when the query prunes down to zero shards (#6946)\n\n* Fixes a bug related to non-existent objects in DDL commands (#6984)\n\n* Fixes a bug that could cause COPY logic to skip data in case of OOM (#7152)\n\n* Fixes a bug with deleting colocation groups (#6929)\n\n* Fixes incorrect results on fetching scrollable with hold cursors (#7014)\n\n* Fixes memory and memory context leaks in Foreign Constraint Graphs (#7236)\n\n* Fixes replicate reference tables task fail when user is superuser (#6930)\n\n* Fixes the incorrect column count after ALTER TABLE (#7379)\n\n* Improves citus_shard_sizes performance (#7050)\n\n* Makes sure to disallow creating a replicated distributed table\n  concurrently (#7219)\n\n* Removes pg_send_cancellation and all references (#7135)\n\n### citus v11.2.2 (February 12, 2024) ###\n\n* Fixes a bug in background shard rebalancer where the replicate\n  reference tables task fails if the current user is not a superuser (#6930)\n\n* Fixes a bug related to non-existent objects in DDL commands (#6984)\n\n* Fixes a bug that could cause COPY logic to skip data in case of OOM (#7152)\n\n* Fixes a bug with deleting colocation groups (#6929)\n\n* Fixes incorrect results on fetching scrollable with hold cursors (#7014)\n\n* Fixes memory and memory context leaks in Foreign Constraint Graphs (#7236)\n\n* Fixes the incorrect column count after ALTER TABLE (#7379)\n\n* Improves failure handling of distributed execution (#7090)\n\n* Makes sure to disallow creating a replicated distributed table\n  concurrently (#7219)\n\n* Removes pg_send_cancellation (#7135)\n\n### citus v11.1.7 (February 12, 2024) ###\n\n* Fixes memory and memory context leaks in Foreign Constraint Graphs (#7236)\n\n* Fixes a bug related to non-existent objects in DDL commands (#6984)\n\n* Fixes a bug that could cause COPY logic to skip data in case of OOM (#7152)\n\n* Fixes a bug with deleting colocation groups (#6929)\n\n* Fixes incorrect results on fetching scrollable with hold cursors (#7014)\n\n* Fixes the incorrect column count after ALTER TABLE (#7379)\n\n* Improves failure handling of distributed execution (#7090)\n\n* Makes sure to disallow creating a replicated distributed table\n  concurrently (#7219)\n\n* Removes pg_send_cancellation and all references (#7135)\n\n### citus v11.0.9 (February 12, 2024) ###\n\n* Fixes a bug that could cause COPY logic to skip data in case of OOM (#7152)\n\n* Fixes a bug with deleting colocation groups (#6929)\n\n* Fixes memory and memory context leaks in Foreign Constraint Graphs (#7236)\n\n* Fixes the incorrect column count after ALTER TABLE (#7462)\n\n* Improve failure handling of distributed execution (#7090)\n\n### citus v12.1.1 (November 9, 2023) ###\n\n* Fixes leaking of memory and memory contexts in Citus foreign key cache\n  (#7236)\n\n* Makes sure to disallow creating a replicated distributed table concurrently\n  (#7219)\n\n### citus v12.1.0 (September 12, 2023) ###\n\n* Adds support for PostgreSQL 16.0 (#7173)\n\n* Add `citus_schema_move()` function which moves tables within a\n  distributed schema to another node (#7180)\n\n* Adds `citus_pause_node_within_txn()` UDF that allows pausing the node with\n  given id (#7089)\n\n* Makes sure to enforce shard level colocation with the GUC\n  `citus.enable_non_colocated_router_query_pushdown` (#7076)\n\n* Allows creating reference / distributed-schema tables from local tables added\n  to metadata and that use identity columns (#7131)\n\n* Propagates `BUFFER_USAGE_LIMIT` option in `VACUUM` and `ANALYZE` (#7114)\n\n* Propagates `PROCESS_MAIN`, `SKIP_DATABASE_STATS`, `ONLY_DATABASE_STATS`\n  options in `VACUUM` (#7114)\n\n* Propagates `GENERIC_PLAN` option in `EXPLAIN` (#7141)\n\n* Propagates \"rules\" option in `CREATE COLLATION` (#7185)\n\n* Propagates `GRANT`/ `REVOKE` for database privileges (#7109)\n\n* Adds TRUNCATE trigger support on Citus foreign tables (#7170)\n\n* Removes `pg_send_cancellation` (#7135)\n\n* Prevents unnecessarily pulling the data into coordinator for some\n  `INSERT .. SELECT` queries that target a single-shard group (#7077)\n\n* Makes sure that rebalancer throws an error if replication factor is greater\n  than the shard allowed node count. Also makes sure to avoid moving a shard\n  to a node that it already exists on. (#7074)\n\n* Fixes a bug that may appear during 2PC recovery when there are multiple\n  databases (#7174)\n\n* Fixes a bug that could cause `COPY` logic to skip data in case of\n  out-of-memory (#7152)\n\n* Fixes a bug that causes an unexpected error when adding a column with\n  a `NULL` constraint (#7093)\n\n* Fixes `PROCESS_TOAST` default value to `true` (#7122)\n\n* Improves the error thrown when there is datatype mismatch in `MERGE ON`\n  (#7081)\n\n### citus v12.0.0 (July 11, 2023) ###\n\n* Adds support for schema-based sharding.\n  While `citus.enable_schema_based_sharding` GUC allows sharding the database\n  based on newly created schemas, `citus_schema_distribute()` allows doing so\n  for the existing schemas. Distributed schemas used for sharding the database\n  can be listed by using the view `citus_schemas`, monitored by using the view\n  `citus_stat_schemas`, and undistributed by using the udf\n  `citus_schema_undistribute()`\n  (#6866, #6979, #6933, #6936 and many others)\n\n* Supports MERGE command across non-colocated distributed tables/subqueries,\n  reference tables and joins on non-distribution columns (#6927)\n\n* Drops PG13 Support (#7002, #7007)\n\n* Changes default rebalance strategy to by_disk_size (#7033)\n\n* Changes by_disk_size rebalance strategy to have a base size (#7035)\n\n* Improves citus_tables view performance (#7018)\n\n* Improves tenant monitoring performance (#6868)\n\n* Introduces the GUC `citus.stat_tenants_untracked_sample_rate` for sampling in\n  tenant monitoring (#7026)\n\n* Adds CPU usage to citus_stat_tenants (#6844)\n\n* Propagates `ALTER SCHEMA .. OWNER TO ..` commands to worker (#6987)\n\n* Allows `ADD COLUMN` in command string with other commands (#7032)\n\n* Allows `DROP CONSTRAINT` in command string with other commands (#7012)\n\n* Makes sure to properly handle index storage options for `ADD CONSTRAINT\n  `/ COLUMN commands (#7032)\n\n* Makes sure to properly handle `IF NOT EXISTS` for `ADD COLUMN` commands\n  (#7032)\n\n* Allows using generated identity column based on int/smallint when creating\n  a distributed table with the limitation of not being able perform DMLs on\n  identity columns from worker nodes (#7008)\n\n* Supports custom cast from / to timestamptz in time partition management UDFs\n  (#6923)\n\n* Optimizes pushdown planner on memory and cpu (#6945)\n\n* Changes citus_shard_sizes view's table_name column to shard_id (#7003)\n\n* The GUC search_path is now reported when it is updated (#6983)\n\n* Disables citus.enable_non_colocated_router_query_pushdown GUC by default to\n  ensure generating a consistent distributed plan for the queries that\n  reference non-colocated distributed tables (#6909)\n\n* Disallows MERGE with filters that prune down to zero shards (#6946)\n\n* Makes sure to take `shouldhaveshards` setting into account for a node when\n  planning rebalance steps (#6887)\n\n* Improves the compatibility with other extension by forwarding to existing\n  emit_log_hook in our log hook (#6877)\n\n* Fixes wrong result when using `NOT MATCHED` with MERGE command (#6943)\n\n* Fixes querying the view `citus_shard_sizes` when there are too many shards\n  (#7018)\n\n* Fixes a bug related to type casts from other types to text/varchar (#6391)\n\n* Fixes propagating `CREATE SCHEMA AUTHORIZATION ..` with no schema name\n  (#7015)\n\n* Fixes an error when creating a FOREIGN KEY without a name referencing a schema\n  qualified table (#6986)\n\n* Fixes a rare bug which mostly happens with queries that contain both outer\n  join and where clauses  (#6857)\n\n* Fixes a bug related to propagation of schemas when pg_dist_node is empty\n  (#6900)\n\n* Fixes a crash when a query is locally executed with explain analyze (#6892)\n\n### citus v11.3.0 (May 2, 2023) ###\n\n* Introduces CDC implementation for Citus using logical replication\n  (#6623, #6810, #6827)\n\n* Adds support for `MERGE` command on co-located distributed tables joined on\n  distribution column (#6696, #6733)\n\n* Adds the view `citus_stat_tenants` that monitor statistics on tenant usages\n  (#6725)\n\n* Adds the GUC `citus.max_background_task_executors_per_node` to control number\n  of background task executors involving a node (#6771)\n\n* Allows parallel shard moves in background rebalancer (#6756)\n\n* Introduces the GUC `citus.metadata_sync_mode` that introduces nontransactional\n  mode for metadata sync (#6728, #6889)\n\n* Propagates CREATE/ALTER/DROP PUBLICATION statements for distributed tables\n  (#6776)\n\n* Adds the GUC `citus.enable_non_colocated_router_query_pushdown` to ensure\n  generating a consistent distributed plan for the queries that reference\n  non-colocated distributed tables when set to \"false\" (#6793)\n\n* Checks if all moves are able to be done via logical replication for rebalancer\n  (#6754)\n\n* Correctly reports shard size in `citus_shards` view (#6748)\n\n* Fixes a bug in shard copy operations (#6721)\n\n* Fixes a bug that prevents enforcing identity column restrictions on worker\n  nodes (#6738)\n\n* Fixes a bug with `INSERT .. SELECT` queries with identity columns (#6802)\n\n* Fixes an issue that caused some queries with custom aggregates to fail (#6805)\n\n* Fixes an issue when `citus_set_coordinator_host` is called more than once\n  (#6837)\n\n* Fixes an uninitialized memory access in shard split API (#6845)\n\n* Fixes memory leak and max allocation block errors during metadata syncing\n  (#6728)\n\n* Fixes memory leak in `undistribute_table` (#6693)\n\n* Fixes memory leak in `alter_distributed_table` (#6726)\n\n* Fixes memory leak in `create_distributed_table` (#6722)\n\n* Fixes memory leak issue with query results that returns single row (#6724)\n\n* Improves rebalancer when shard groups have placement count less than worker\n  count (#6739)\n\n* Makes sure to stop maintenance daemon when dropping a database even without\n  Citus extension (#6688)\n\n* Prevents using `alter_distributed_table` and `undistribute_table` UDFs when a\n  table has identity columns (#6738)\n\n* Prevents using identity columns on data types other than `bigint` on\n  distributed tables (#6738)\n\n### citus v11.2.1 (April 20, 2023) ###\n\n* Correctly reports shard size in `citus_shards` view (#6748)\n\n* Fixes a bug in shard copy operations (#6721)\n\n* Fixes a bug with `INSERT .. SELECT` queries with identity columns (#6802)\n\n* Fixes an uninitialized memory access in shard split API (#6845)\n\n* Fixes compilation for PG13.10 and PG14.7 (#6711)\n\n* Fixes memory leak in `alter_distributed_table` (#6726)\n\n* Fixes memory leak issue with query results that returns single row (#6724)\n\n* Prevents using `alter_distributed_table` and `undistribute_table` UDFs when a\n  table has identity columns (#6738)\n\n* Prevents using identity columns on data types other than `bigint` on\n  distributed tables (#6738)\n\n### citus v11.1.6 (April 20, 2023) ###\n\n* Correctly reports shard size in `citus_shards` view (#6748)\n\n* Fixes a bug in shard copy operations (#6721)\n\n* Fixes a bug that breaks pg upgrades if the user has a columnar table (#6624)\n\n* Fixes a bug that causes background rebalancer to fail when a reference table\n  doesn't have a primary key (#6682)\n\n* Fixes a regression in allowed foreign keys on distributed tables (#6550)\n\n* Fixes a use-after-free bug in connection management (#6685)\n\n* Fixes an unexpected foreign table error by disallowing to drop the\n  `table_name` option (#6669)\n\n* Fixes an uninitialized memory access in shard split API (#6845)\n\n* Fixes compilation for PG13.10 and PG14.7 (#6711)\n\n* Fixes crash that happens when trying to replicate a reference table that is\n  actually dropped (#6595)\n\n* Fixes memory leak issue with query results that returns single row (#6724)\n\n* Fixes the modifiers for subscription and role creation (#6603)\n\n* Makes sure to quote all identifiers used for logical replication to prevent\n  potential issues (#6604)\n\n* Makes sure to skip foreign key validations at the end of shard moves (#6640)\n\n### citus v11.0.8 (April 20, 2023) ###\n\n* Correctly reports shard size in `citus_shards` view (#6748)\n\n* Fixes a bug that breaks pg upgrades if the user has a columnar table (#6624)\n\n* Fixes an unexpected foreign table error by disallowing to drop the\n  `table_name` option (#6669)\n\n* Fixes compilation warning on PG13 + OpenSSL 3.0 (#6038, #6502)\n\n* Fixes crash that happens when trying to replicate a reference table that is\n  actually dropped (#6595)\n\n* Fixes memory leak issue with query results that returns single row (#6724)\n\n* Fixes the modifiers for subscription and role creation (#6603)\n\n* Fixes two potential dangling pointer issues (#6504, #6507)\n\n* Makes sure to quote all identifiers used for logical replication to prevent\n  potential issues (#6604)\n\n### citus v10.2.9 (April 20, 2023) ###\n\n* Correctly reports shard size in `citus_shards` view (#6748)\n\n* Fixes a bug in `ALTER EXTENSION citus UPDATE` (#6383)\n\n* Fixes a bug that breaks pg upgrades if the user has a columnar table (#6624)\n\n* Fixes a bug that prevents retaining columnar table options after a\n  table-rewrite (#6337)\n\n* Fixes memory leak issue with query results that returns single row (#6724)\n\n* Raises memory limits in columnar from 256MB to 1GB for reads and writes\n  (#6419)\n\n### citus v10.1.6 (April 20, 2023) ###\n\n* Fixes a crash that occurs when the aggregate that cannot be pushed-down\n  returns empty result from a worker (#5679)\n\n* Fixes columnar freezing/wraparound bug (#5962)\n\n* Fixes memory leak issue with query results that returns single row (#6724)\n\n* Prevents alter table functions from dropping extensions (#5974)\n\n### citus v10.0.8 (April 20, 2023) ###\n\n* Fixes a bug that could break `DROP SCHEMA/EXTENSON` commands when there is a\n  columnar table (#5458)\n\n* Fixes a crash that occurs when the aggregate that cannot be pushed-down\n  returns empty result from a worker (#5679)\n\n* Fixes columnar freezing/wraparound bug (#5962)\n\n* Fixes memory leak issue with query results that returns single row (#6724)\n\n* Prevents alter table functions from dropping extensions (#5974)\n\n### citus v9.5.12 (April 20, 2023) ###\n\n* Fixes a crash that occurs when the aggregate that cannot be pushed-down\n  returns empty result from a worker (#5679)\n\n* Fixes memory leak issue with query results that returns single row (#6724)\n\n* Prevents alter table functions from dropping extensions (#5974)\n\n### citus v11.2.0 (January 30, 2023) ###\n\n* Adds support for outer joins with reference tables / complex subquery-CTEs\n  in the outer side of the join (e.g., \\<reference table\\> LEFT JOIN\n  \\<distributed table\\>)\n\n* Adds support for creating `PRIMARY KEY`s and `UNIQUE`/`EXCLUSION`/`CHECK`/\n  `FOREIGN KEY` constraints via `ALTER TABLE` command without providing a\n  constraint name\n\n* Adds support for using identity columns on Citus tables\n\n* Adds support for `MERGE` command on local tables\n\n* Adds `citus_job_list()`, `citus_job_status()` and `citus_rebalance_status()`\n  UDFs that allow monitoring rebalancer progress\n\n* Adds `citus_task_wait()` UDF to wait on desired task status\n\n* Adds `source_lsn`, `target_lsn` and `status` fields into\n  `get_rebalance_progress()`\n\n* Introduces `citus_copy_shard_placement()` UDF with node id\n\n* Introduces `citus_move_shard_placement()` UDF with node id\n\n* Propagates `BEGIN` properties to worker nodes\n\n* Propagates `DROP OWNED BY` to worker nodes\n\n* Deprecates `citus.replicate_reference_tables_on_activate` and makes it\n  always `off`\n\n* Drops GUC `citus.defer_drop_after_shard_move`\n\n* Drops GUC `citus.defer_drop_after_shard_split`\n\n* Drops `SHARD_STATE_TO_DELETE` state and uses the cleanup records instead\n\n* Allows `citus_update_node()` to work with nodes from different clusters\n\n* Adds signal handlers for queue monitor to gracefully shutdown, cancel and to\n  see config changes\n\n* Defers cleanup after a failure in shard move or split\n\n* Extends cleanup process for replication artifacts\n\n* Improves a query that terminates compelling backends from\n  `citus_update_node()`\n\n* Includes Citus global pid in all internal `application_name`s\n\n* Avoids leaking `search_path` to workers when executing DDL commands\n\n* Fixes `alter_table_set_access_method error()` for views\n\n* Fixes `citus_drain_node()` to allow draining the specified worker only\n\n* Fixes a bug in global pid assignment for connections opened by rebalancer\n  internally\n\n* Fixes a bug that causes background rebalancer to fail when a reference table\n  doesn't have a primary key\n\n* Fixes a bug that might cause failing to query the views based on tables that\n  have renamed columns\n\n* Fixes a bug that might cause incorrectly planning the sublinks in query tree\n\n* Fixes a floating point exception during\n  `create_distributed_table_concurrently()`\n\n* Fixes a rebalancer failure due to integer overflow in subscription and role\n  creation\n\n* Fixes a regression in allowed foreign keys on distributed tables\n\n* Fixes a use-after-free bug in connection management\n\n* Fixes an unexpected foreign table error by disallowing to drop the\n  table_name option\n\n* Fixes an uninitialized memory access in `create_distributed_function()`\n\n* Fixes crash that happens when trying to replicate a reference table that is\n  actually dropped\n\n* Make sure to cleanup the shard on the target node in case of a\n  failed/aborted shard move\n\n* Makes sure to create replication artifacts with unique names\n\n* Makes sure to disallow triggers that depend on extensions\n\n* Makes sure to quote all identifiers used for logical replication to prevent\n  potential issues\n\n* Makes sure to skip foreign key validations at the end of shard moves\n\n* Prevents crashes on `UPDATE` with certain `RETURNING` clauses\n\n* Propagates column aliases in the shard-level commands\n\n### citus v11.1.5 (December 12, 2022) ###\n\n* Fixes two potential dangling pointer issues\n\n* Fixes compilation warning on PG13 + OpenSSL 3.0\n\n### citus v11.0.7 (November 8, 2022) ###\n\n* Adds the GUC `citus.allow_unsafe_constraints` to allow unique/exclusion/\n  primary key constraints without distribution column\n\n* Allows `citus_internal` `application_name` with additional suffix\n\n* Disallows having `ON DELETE/UPDATE SET DEFAULT` actions on columns that\n  default to sequences\n\n* Fixes a bug in `ALTER EXTENSION citus UPDATE`\n\n* Fixes a bug that causes a crash with empty/null password\n\n* Fixes a bug that causes not retaining trigger enable/disable settings when\n  re-creating them on shards\n\n* Fixes a bug that might cause inserting incorrect `DEFAULT` values when\n  applying foreign key actions\n\n* Fixes a bug that prevents retaining columnar table options after a\n  table-rewrite\n\n* Fixes a bug that prevents setting colocation group of a partitioned\n  distributed table to `none`\n\n* Fixes an issue that can cause logical reference table replication to fail\n\n* Raises memory limits in columnar from 256MB to 1GB for reads and writes\n\n### citus v11.1.4 (October 24, 2022) ###\n\n* Fixes an upgrade problem for `worker_fetch_foreign_file` when upgrade path\n  starts from 8.3 up to 11.1\n\n* Fixes an upgrade problem for `worker_repartition_cleanup` when upgrade path\n  starts from 9.1 up to 11.1\n\n### citus v11.1.3 (October 14, 2022) ###\n\n* Adds support for PostgreSQL 15.0\n\n* Fixes a bug in `ALTER EXTENSION citus UPDATE`\n\n* Fixes a bug that causes a crash with empty/null password\n\n* Fixes a bug that causes not retaining trigger enable/disable settings when\n  re-creating them on shards\n\n* Fixes a bug that prevents retaining columnar table options after a\n  table-rewrite\n\n* Raises memory limits in columnar from 256MB to 1GB for reads and writes\n\n### citus v11.1.2 (September 30, 2022) ###\n\n* Adds support for PostgreSQL 15rc1\n\n* Disallows having `ON DELETE/UPDATE SET DEFAULT` actions on columns that\n  default to sequences\n\n* Fixes a bug that might cause inserting incorrect `DEFAULT` values when\n  applying foreign key actions\n\n* Fixes a performance issue related to shard-moves by creating replica\n  identities before copying shards\n\n* Improves logging during shard-splits and resource cleanup\n\n* Makes sure to reuse connections for shard-splits and logical replication\n\n* Makes sure to try dropping replication slots a few more times after a failure\n  at the end of the shard-split\n\n### citus v11.1.1 (September 16, 2022) ###\n\n* Fixes a bug that prevents `create_distributed_table_concurrently()` working\n  on an empty node\n\n### citus v11.1.0 (September 15, 2022) ###\n\n* Adds support for PostgreSQL 15beta4\n\n* Adds ability to run shard rebalancer in the background\n\n* Adds `create_distributed_table_concurrently()` UDF to distribute tables\n  without interrupting the application\n\n* Adds `citus_split_shard_by_split_points()` UDF that allows\n  splitting a shard to specified set of nodes without blocking writes\n  and based on given split points\n\n* Adds support for non-blocking tenant isolation\n\n* Adds support for isolation tenants that use partitioned tables\n  or columnar tables\n\n* Separates columnar table access method into a separate logical extension\n\n* Adds support for online replication in `replicate_reference_tables()`\n\n* Improves performance of blocking shard moves\n\n* Improves non-blocking shard moves with a faster custom copy logic\n\n* Creates all foreign keys quickly at the end of a shard move\n\n* Limits `get_rebalance_progress()` to show shards in moving state\n\n* Makes `citus_move_shard_placement()` idempotent if shard already exists\n  on target node\n\n* Shows `citus_copy_shard_placement()` progress in `get_rebalance_progres()`\n\n* Supports changing CPU priorities for backends and shard moves\n\n* Adds the GUC `citus.allow_unsafe_constraints` to allow unique/exclusion/\n  primary key constraints without distribution column\n\n* Introduces GUC `citus.skip_constraint_validation`\n\n* Introduces `citus_locks` view\n\n* Improves `citus_tables` view by showing local tables added to metadata\n\n* Improves columnar table access method by moving old catalog tables into\n  an internal schema and introduces more secure & informative views based\n  on them\n\n* Adds support for `GRANT/REVOKE` on aggregates\n\n* Adds support for `NULLS NOT DISTINCT` clauses for indexes for PG15+\n\n* Adds support for setting relation options for columnar tables using\n  `ALTER TABLE`\n\n* Adds support for unlogged distributed sequences\n\n* Removes `do_repair` option from `citus_copy_shard_placement()`\n\n* Removes deprecated re-partitioning functions like\n  `worker_hash_partition_table()`\n\n* Drops support for isolation tenants that use replicated tables\n\n* Checks existence of the shards before insert, delete, and update\n\n* Hides tables owned by extensions from `citus_tables` and `citus_shards`\n\n* Propagates `VACUUM` and `ANALYZE` to worker nodes\n\n* Makes non-partitioned table size calculation quicker\n\n* Improves `create_distributed_table()` by creating new colocation entries when\n  using `colocate_with => 'none'`\n\n* Ensures that `SELECT .. FOR UPDATE` opens a transaction block when used in\n  a function call\n\n* Prevents a segfault by disallowing usage of SQL functions referencing to a\n  distributed table\n\n* Prevents creating a new colocation entry when replicating reference tables\n\n* Fixes a bug in query escaping in `undistribute_table()` and\n  `alter_distributed_table()`\n\n* Fixes a bug preventing the usage of `isolate_tenant_to_new_shard()` with text\n  column\n\n* Fixes a bug that may cause `GRANT` to propagate within `CREATE EXTENSION`\n\n* Fixes a bug that causes incorrectly marking `metadatasynced` flag for\n  coordinator\n\n* Fixes a bug that may prevent Citus from creating function in transaction\n  block properly\n\n* Fixes a bug that prevents promoting read-replicas as primaries\n\n* Fixes a bug that prevents setting colocation group of a partitioned\n  distributed table to `none`\n\n* Fixes a bug that prevents using `AUTO` option for `VACUUM (INDEX_CLEANUP)`\n  operation\n\n* Fixes a segfault in `citus_copy_shard_placement()`\n\n* Fixes an issue that can cause logical reference table replication to fail\n\n* Fixes schema name qualification for `RENAME SEQUENCE` statement\n\n* Fixes several small memory leaks\n\n* Fixes the transaction timestamp column of the `get_current_transaction_id()`\n  on coordinator\n\n* Maps any unused parameters to a generic type in prepared statements\n\n### citus v10.2.8 (August 19, 2022) ###\n\n* Fixes compilation warning caused by latest upgrade script changes\n\n* Fixes compilation warning on PG13 + OpenSSL 3.0\n\n### citus v11.0.6 (August 19, 2022) ###\n\n* Fixes a bug that could cause failures in `CREATE ROLE` statement\n\n* Fixes a bug that could cause failures in `create_distributed_table`\n\n* Fixes a bug that prevents distributing tables that depend on sequences\n\n* Fixes reference table lock contention\n\n* Fixes upgrade paths for 11.0\n\n### citus v10.2.7 (August 19, 2022) ###\n\n* Fixes a bug that could cause failures in `INSERT INTO .. SELECT`\n\n* Fixes a bug that could cause leaking files when materialized views are\n  refreshed\n\n* Fixes an unexpected error for foreign tables when upgrading Postgres\n\n* Fixes columnar freezing/wraparound bug\n\n* Fixes reference table lock contention\n\n* Prevents alter table functions from dropping extensions\n\n### citus v11.0.5 (August 1, 2022) ###\n\n* Avoids possible information leakage about existing users\n\n* Allows using `WITH HOLD` cursors with parameters\n\n* Fixes a bug that could cause failures in `INSERT INTO .. SELECT`\n\n* Fixes a bug that prevents pushing down `IN` expressions when using columnar\n  custom scan\n\n* Fixes a concurrency bug between creating a co-located distributed table and\n  shard moves\n\n* Fixes a crash that can happen due to catalog read in `shmem_exit`\n\n* Fixes an unexpected error caused by constraints when moving shards\n\n* Fixes an unexpected error for foreign tables when upgrading Postgres\n\n* Prevents adding local table into metadata if there is a view with circular\n  dependencies on it\n\n* Reduces memory consumption of index name fix for partitioned tables\n\n### citus v11.0.4 (July 13, 2022) ###\n\n* Fixes a bug that prevents promoting read-replicas as primaries\n\n### citus v11.0.3 (July 5, 2022) ###\n\n* Fixes a bug that prevents adding local tables with materialized views to\n  Citus metadata\n\n* Fixes a bug that prevents using `COMPRESSION` and `CONSTRAINT` on a column\n\n* Fixes upgrades to Citus 11 when there are no nodes in the metadata\n\n### citus v11.0.2 (June 15, 2022) ###\n\n* Drops support for PostgreSQL 12\n\n* Open sources enterprise features, see the rest of changelog items\n\n* Turns metadata syncing on by default\n\n* Introduces `citus_finish_citus_upgrade()` procedure which is necessary to\n  upgrade from earlier versions\n\n* Open sources non-blocking shard moves/shard rebalancer\n  (`citus.logical_replication_timeout`)\n\n* Open sources propagation of `CREATE/DROP/ALTER ROLE` statements\n\n* Open sources propagation of `GRANT` statements\n\n* Open sources propagation of `CLUSTER` statements\n\n* Open sources propagation of `ALTER DATABASE ... OWNER TO ...`\n\n* Open sources optimization for `COPY` when loading `JSON` to avoid double\n  parsing of the `JSON` object (`citus.skip_jsonb_validation_in_copy`)\n\n* Open sources support for row level security\n\n* Open sources support for `pg_dist_authinfo`, which allows storing different\n  authentication options for different users, e.g. you can store\n  passwords or certificates here.\n\n* Open sources support for `pg_dist_poolinfo`, which allows using connection\n  poolers in between coordinator and workers\n\n* Open sources tracking distributed query execution times using\n  citus_stat_statements (`citus.stat_statements_max`,\n  `citus.stat_statements_purge_interval`,\n  `citus.stat_statements_track`). This is disabled by default.\n\n* Open sources tenant_isolation\n\n* Open sources support for `sslkey` and `sslcert` in `citus.node_conninfo`\n\n* Adds `citus.max_client_connections` GUC to limit non-Citus connections\n\n* Allows locally creating objects having a dependency that cannot be distributed\n\n* Distributes aggregates with `CREATE AGGREGATE` command\n\n* Distributes functions with `CREATE FUNCTION` command\n\n* Adds `citus.create_object_propagation` GUC to control DDL creation behaviour\n  in transactions\n\n* Hides shards based on `application_name` prefix\n\n* Prevents specifying `application_name` via `citus.node_conninfo`\n\n* Starts identifying rebalancer backends by `application_name=citus_rebalancer`\n\n* Starts identifying internal backends by `application_name=citus_internal`\n\n* Adds `citus.enable_unsafe_triggers` flag to enable unsafe triggers on\n  distributed tables\n\n* Adds `fix_partition_shard_index_names` UDF to fix currently broken names\n\n* Adds propagation for foreign server commands\n\n* Adds propagation of `DOMAIN` objects\n\n* Adds propagation of `TEXT SEARCH CONFIGURATION` objects\n\n* Adds propagation of `TEXT SEARCH DICTIONARY` objects\n\n* Adds support for `ALTER FUNCTION ... SUPPORT ...` commands\n\n* Adds support for `CREATE SCHEMA AUTHORIZATION` statements without schema name\n\n* Adds support for `CREATE/DROP/ALTER VIEW` commands\n\n* Adds support for `TRUNCATE` for foreign tables\n\n* Adds support for adding local tables to metadata using\n  `citus_add_local_table_to_metadata()` UDF\n\n* Adds support for adding partitioned local tables to Citus metadata\n\n* Adds support for automatic binary encoding in re-partition joins when possible\n\n* Adds support for foreign tables in MX\n\n* Adds support for operator class parameters in indexes\n\n* Adds support for re-partition joins in transaction blocks\n\n* Adds support for re-partition joins on followers\n\n* Adds support for shard replication > 1 hash distributed tables on Citus MX\n\n* Adds support for `LOCK` commands on distributed tables from worker nodes\n\n* Adds support for `TABLESAMPLE`\n\n* Adds support for propagating views when syncing Citus table metadata\n\n* Improves handling of `IN`, `OUT` and `INOUT` parameters for functions\n\n* Introduces `citus_backend_gpid()` UDF to get global pid of the current backend\n\n* Introduces `citus_check_cluster_node_health` UDF to check cluster connectivity\n\n* Introduces `citus_check_connection_to_node` UDF to check node connectivity\n\n* Introduces `citus_coordinator_nodeid` UDF to find the node id of the\n  coordinator node\n\n* Introduces `citus_stat_activity` view and drops `citus_worker_stat_activity`\n  UDF\n\n* Introduces `citus.use_citus_managed_tables` GUC to add local tables to Citus\n  metadata automatically\n\n* Introduces a new flag `force_delegation` in `create_distributed_function()`\n\n* Introduces `run_command_on_coordinator` UDF\n\n* Introduces `synchronous` option to `citus_disable_node()` UDF\n\n* Introduces `citus_is_coordinator` UDF to check whether a node is the\n  coordinator\n\n* Allows adding a unique constraint with an index\n\n* Allows `create_distributed_function()` on a function owned by an extension\n\n* Allows creating distributed tables in sequential mode\n\n* Allows disabling nodes when multiple failures happen\n\n* Allows `lock_table_if_exits` to be called outside of a transaction blocks\n\n* Adds support for pushing procedures with `OUT` arguments down to the worker\n  nodes\n\n* Overrides `pg_cancel_backend()` and `pg_terminate_backend()` to run with\n  global pid\n\n* Delegates function calls of the form `SELECT .. FROM func()`\n\n* Adds propagation of `CREATE SCHEMA .. GRANT ON SCHEMA ..` commands\n\n* Propagates `pg_dist_object` to worker nodes\n\n* Adds propagation of `SCHEMA` operations\n\n* Adds missing version-mismatch checks for columnar tables\n\n* Adds missing version-mismatch checks for internal functions\n\n* `citus_shard_indexes_on_worker` shows all local shard indexes regardless of\n  `search_path`\n\n* `citus_shards_on_worker` shows all local shards regardless of `search_path`\n\n* Enables distributed execution from `run_command_on_*` functions\n\n* Deprecates inactive shard state, never marks any placement inactive\n\n* Disables distributed & reference foreign tables\n\n* Prevents propagating objects having a circular dependency\n\n* Prevents propagating objects having a dependency to an object with unsupported\n  type\n\n* Deprecates `master_get_table_metadata` UDF\n\n* Disallows remote execution from queries on shards\n\n* Drops `citus.enable_cte_inlining` GUC\n\n* Drops `citus.single_shard_commit_protocol` GUC, defaults to 2PC\n\n* Drops support for `citus.multi_shard_commit_protocol`, always use 2PC\n\n* Avoids unnecessary errors for `ALTER STATISTICS IF EXISTS` when the statistics\n  does not exist\n\n* Fixes a bug that prevents dropping/altering indexes\n\n* Fixes a bug that prevents non-client backends from accessing shards\n\n* Fixes columnar freezing/wraparound bug\n\n* Fixes `invalid read of size 1` memory error with `citus_add_node`\n\n* Fixes schema name qualification for `ALTER/DROP SEQUENCE`\n\n* Fixes schema name qualification for `ALTER/DROP STATISTICS`\n\n* Fixes schema name qualification for `CREATE STATISTICS`\n\n* Fixes a bug that causes columnar storage pages to have zero LSN\n\n* Fixes a bug that causes issues while create dependencies from multiple\n  sessions\n\n* Fixes a bug that causes reading columnar metapage as all-zeros when\n  writing to a columnar table\n\n* Fixes a bug that could break `DROP SCHEMA/EXTENSON` commands when there is a\n  columnar table\n\n* Fixes a bug that could break pg upgrades due to missing `pg_depend` records\n  for columnar table access method\n\n* Fixes a bug that could cause `CREATE INDEX` to fail for expressions when using\n  custom `search_path`\n\n* Fixes a bug that could cause `worker_save_query_explain_analyze` to fail on\n  custom types\n\n* Fixes a bug that could cause failed re-partition joins to leak result tables\n\n* Fixes a bug that could cause prerequisite columnar table access method\n  objects being not created during pg upgrades\n\n* Fixes a bug that could cause re-partition joins involving local shards to fail\n\n* Fixes a bug that could cause false positive distributed deadlocks due to local\n  execution\n\n* Fixes a bug that could cause leaking files when materialized views are\n  refreshed\n\n* Fixes a bug that could cause unqualified `DROP DOMAIN IF EXISTS` to fail\n\n* Fixes a bug that could cause wrong schema and ownership after\n  `alter_distributed_table`\n\n* Fixes a bug that could cause `EXPLAIN ANALYZE` to fail for prepared statements\n  with custom type\n\n* Fixes a bug that could cause Citus not to create function in transaction block\n  properly\n\n* Fixes a bug that could cause returning invalid JSON when running\n  `EXPLAIN ANALYZE` with subplans\n\n* Fixes a bug that limits usage of sequences in non-int columns\n\n* Fixes a bug that prevents `DROP SCHEMA CASCADE`\n\n* Fixes a build error that happens when `lz4` is not installed\n\n* Fixes a clog lookup failure that could occur when writing to a columnar table\n\n* Fixes a crash that occurs when the aggregate that cannot be pushed-down\n  returns empty result from a worker\n\n* Fixes a missing `FROM` clause entry error\n\n* Fixes a possible segfault that could happen when reporting distributed\n  deadlock\n\n* Fixes an issue that could cause unexpected errors when there is an in-progress\n  write to a columnar table\n\n* Fixes an unexpected error that occurs due to aborted writes to a columnar\n  table with an index\n\n* Fixes an unexpected error that occurs when writing to a columnar table created\n  in older version\n\n* Fixes issue when compiling Citus from source with some compilers\n\n* Fixes issues on `ATTACH PARTITION` logic\n\n* Fixes naming issues of newly created partitioned indexes\n\n* Honors `enable_metadata_sync` in node operations\n\n* Improves nested execution checks and adds GUC to control\n  (`citus.allow_nested_distributed_execution`)\n\n* Improves self-deadlock prevention for `CREATE INDEX / REINDEX CONCURRENTLY`\n  commands for builds using PG14 or higher\n\n* Moves `pg_dist_object` to `pg_catalog` schema\n\n* Parallelizes metadata syncing on node activation\n\n* Partitions shards to be co-located with the parent shards\n\n* Prevents Citus table functions from being called on shards\n\n* Prevents creating distributed functions when there are out of sync nodes\n\n* Prevents alter table functions from dropping extensions\n\n* Refrains reading the metadata cache for all tables during upgrade\n\n* Provides notice message for idempotent `create_distributed_function` calls\n\n* Reinstates optimisation for uniform shard interval ranges\n\n* Relaxes table ownership check to privileges check while acquiring lock\n\n* Drops support for `citus.shard_placement_policy` GUC\n\n* Drops `master_append_table_to_shard` UDF\n\n* Drops `master_apply_delete_command` UDF\n\n* Removes copy into new shard logic for append-distributed tables\n\n* Drops support for distributed `cstore_fdw` tables in favor of Citus\n  columnar table access method\n\n* Removes support for dropping distributed and local indexes in the same\n  statement\n\n* Replaces `citus.enable_object_propagation` GUC with\n  `citus.enable_metadata_sync`\n\n* Requires superuser for `citus_add_node()` and `citus_activate_node()` UDFs\n\n* Revokes read access to `columnar.chunk` from unprivileged user\n\n* Disallows unsupported lateral subqueries on distributed tables\n\n* Stops updating shard range in `citus_update_shard_statistics` for append\n  tables\n\n### citus v10.2.5 (March 15, 2022) ###\n\n* Fixes a bug that could cause `worker_save_query_explain_analyze` to fail on\n  custom types\n\n* Fixes a bug that limits usage of sequences in non-integer columns\n\n* Fixes a crash that occurs when the aggregate that cannot be pushed-down\n  returns empty result from a worker\n\n* Improves concurrent metadata syncing and metadata changing DDL operations\n\n### citus v10.2.4 (February 1, 2022) ###\n\n* Adds support for operator class parameters in indexes\n\n* Fixes a bug with distributed functions that have `OUT` parameters or\n  return `TABLE`\n\n* Fixes a build error that happens when `lz4` is not installed\n\n* Improves self-deadlock prevention for `CREATE INDEX` &\n  `REINDEX CONCURRENTLY` commands for builds using PG14 or higher\n\n* Fixes a bug that causes commands to fail when `application_name` is set\n\n### citus v10.1.4 (February 1, 2022) ###\n\n* Adds missing version checks for columnar tables\n\n* Fixes a bug that could break `DROP SCHEMA/EXTENSION` commands when there is\n  a columnar table\n\n* Fixes a build error that happens when `lz4` is not installed\n\n* Fixes a missing `FROM` clause entry error\n\n* Reinstates optimisation for uniform shard interval ranges\n\n* Fixes a bug that causes commands to fail when `application_name` is set\n\n### citus v10.2.3 (November 29, 2021) ###\n\n* Adds `fix_partition_shard_index_names` udf to fix currently broken\n  partition index names\n\n* Fixes a bug that could break `DROP SCHEMA/EXTENSION` commands when there is\n  a columnar table\n\n* Fixes a bug that could break pg upgrades due to missing `pg_depend` records\n  for columnar table access method\n\n* Fixes a missing `FROM` clause entry error\n\n* Fixes an unexpected error that occurs when writing to a columnar table\n  created in older versions\n\n* Fixes issue when compiling Citus from source with some compilers\n\n* Reinstates optimisation for uniform shard interval ranges\n\n* Relaxes table ownership check to privileges check while acquiring lock\n\n### citus v10.0.6 (November 12, 2021) ###\n\n* Adds missing version checks for columnar tables\n\n* Fixes a bug that caused `worker_append_table_to_shard` to write as superuser\n\n* Fixes a bug with local cached plans on tables with dropped columns\n\n* Fixes a missing `FROM` clause entry error\n\n* Fixes a use after free issue that could happen when altering a distributed\n  table\n\n* Reinstates optimisation for uniform shard interval ranges\n\n### citus v9.5.10 (November 8, 2021) ###\n\n* Fixes a release problem in 9.5.9\n\n### citus v9.5.9 (November 8, 2021) ###\n\n* Fixes a bug preventing `INSERT SELECT .. ON CONFLICT` with a constraint name\n  on local shards\n\n* Fixes a bug with local cached plans on tables with dropped columns\n\n* Fixes a crash in queries with a modifying `CTE` and a `SELECT`\n  without `FROM`\n\n* Fixes a missing `FROM` clause entry error\n\n* Fixes a missing intermediate result when coordinator is in metadata\n\n* Reinstates optimisation for uniform shard interval ranges\n\n### citus v9.2.8 (November 4, 2021) ###\n\n* Adds a configure flag to enforce security\n\n### citus v9.2.7 (November 3, 2021) ###\n\n* Fixes `ALTER TABLE IF EXISTS SET SCHEMA` with non-existing table bug\n\n* Fixes `CREATE INDEX CONCURRENTLY` with no index name on a postgres table bug\n\n* Fixes a bug that could cause crashes with certain compile flags\n\n* Fixes a crash because of overflow in partition id with certain compile flags\n\n* Fixes a memory leak in subtransaction memory handling\n\n* Fixes deparsing for queries with anonymous column references\n\n### citus v10.2.2 (October 14, 2021) ###\n\n* Fixes a bug that causes reading columnar metapage as all-zeros when\n  writing to a columnar table\n\n* Fixes a bug that could cause prerequisite columnar table access method\n  objects being not created during pg upgrades\n\n* Fixes a bug that could cause `CREATE INDEX` to fail for expressions when\n  using custom `search_path`\n\n* Fixes an unexpected error that occurs due to aborted writes to a columnar\n  table with an index\n\n### citus v10.2.1 (September 24, 2021) ###\n\n* Adds missing version-mismatch checks for columnar tables\n\n* Adds missing version-mismatch checks for internal functions\n\n* Fixes a bug that could cause partition shards being not co-located with\n  parent shards\n\n* Fixes a bug that prevents pushing down boolean expressions when using\n  columnar custom scan\n\n* Fixes a clog lookup failure that could occur when writing to a columnar table\n\n* Fixes an issue that could cause unexpected errors when there is an\n  in-progress write to a columnar table\n\n* Revokes read access to `columnar.chunk` from unprivileged user\n\n### citus v10.1.3 (September 17, 2021) ###\n\n* Fixes a bug that caused `worker_append_table_to_shard` to write as superuser\n\n* Fixes a crash in shard rebalancer when no distributed tables exist\n\n* Fixes a use after free issue that could happen when altering a distributed\n  table\n\n### citus v9.5.8 (September 15, 2021) ###\n\n* Fixes a bug that caused `worker_append_table_to_shard` to write as superuser\n\n* Fixes a use after free issue that could happen when altering a distributed\n  table\n\n### citus v10.2.0 (September 14, 2021) ###\n\n* Adds PostgreSQL 14 support\n\n* Adds hash & btree index support for columnar tables\n\n* Adds helper UDFs for easy time partition management:\n  `get_missing_time_partition_ranges`, `create_time_partitions`, and\n  `drop_old_time_partitions`\n\n* Adds propagation of ALTER SEQUENCE\n\n* Adds support for ALTER INDEX ATTACH PARTITION\n\n* Adds support for CREATE INDEX ON ONLY\n\n* Allows more graceful failovers when replication factor > 1\n\n* Enables chunk group filtering to work with Params for columnar tables\n\n* Enables qual push down for joins including columnar tables\n\n* Enables transferring of data using binary encoding by default on PG14\n\n* Improves `master_update_table_statistics` and provides distributed deadlock\n  detection\n\n* Includes `data_type` and `cache` in sequence definition on worker\n\n* Makes start/stop_metadata_sync_to_node() transactional\n\n* Makes sure that table exists before updating table statistics\n\n* Prevents errors with concurrent `citus_update_table_statistics` and DROP table\n\n* Reduces memory usage of columnar table scans by freeing the memory used for\n  last stripe read\n\n* Shows projected columns for columnar tables in EXPLAIN output\n\n* Speeds up dropping partitioned tables\n\n* Synchronizes hasmetadata flag on mx workers\n\n* Uses current user while syncing metadata\n\n* Adds a parameter to cleanup metadata when metadata syncing is stopped\n\n* Fixes a bug about int and smallint sequences on MX\n\n* Fixes a bug that cause partitions to have wrong distribution key after\n  DROP COLUMN\n\n* Fixes a bug that caused `worker_append_table_to_shard` to write as superuser\n\n* Fixes a bug that caused `worker_create_or_alter_role` to crash with NULL input\n\n* Fixes a bug that causes pruning incorrect shard of a range distributed table\n\n* Fixes a bug that may cause crash while aborting transaction\n\n* Fixes a bug that prevents attaching partitions when colocated foreign key\n  exists\n\n* Fixes a bug with `nextval('seq_name'::text)`\n\n* Fixes a crash in shard rebalancer when no distributed tables exist\n\n* Fixes a segfault caused by use after free in when using a cached connection\n\n* Fixes a UNION pushdown issue\n\n* Fixes a use after free issue that could happen when altering a distributed\n  table\n\n* Fixes showing target shard size in the rebalance progress monitor\n\n### citus v10.1.2 (August 16, 2021) ###\n\n* Allows more graceful failovers when replication factor > 1\n\n* Fixes a bug that causes partitions to have wrong distribution key after\n  `DROP COLUMN`\n\n### citus v10.0.5 (August 16, 2021) ###\n\n* Allows more graceful failovers when replication factor > 1\n\n* Fixes a bug that causes partitions to have wrong distribution key after\n  `DROP COLUMN`\n\n* Improves citus_update_table_statistics and provides distributed deadlock\n  detection\n\n### citus v9.5.7 (August 16, 2021) ###\n\n* Allows more graceful failovers when replication factor > 1\n\n* Fixes a bug that causes partitions to have wrong distribution key after\n  `DROP COLUMN`\n\n* Improves master_update_table_statistics and provides distributed deadlock\n  detection\n\n### citus v9.4.6 (August 8, 2021) ###\n\n* Allows more graceful failovers when replication factor > 1\n\n* Improves master_update_table_statistics and provides distributed deadlock\n  detection\n\n### citus v10.1.1 (August 5, 2021) ###\n\n* Improves citus_update_table_statistics and provides distributed deadlock\n  detection\n\n* Fixes showing target shard size in the rebalance progress monitor\n\n### citus v10.1.0 (July 14, 2021) ###\n\n* Drops support for PostgreSQL 11\n\n* Adds `shard_count` parameter to `create_distributed_table` function\n\n* Adds support for `ALTER DATABASE OWNER`\n\n* Adds support for temporary columnar tables\n\n* Adds support for using sequences as column default values when syncing\n  metadata\n\n* `alter_columnar_table_set` enforces columnar table option constraints\n\n* Continues to remove shards after failure in `DropMarkedShards`\n\n* Deprecates the `citus.replication_model` GUC\n\n* Enables `citus.defer_drop_after_shard_move` by default\n\n* Ensures free disk space before moving a shard\n\n* Fetches shard size on the fly for the rebalance monitor\n\n* Ignores old placements when disabling or removing a node\n\n* Implements `improvement_threshold` at shard rebalancer moves\n\n* Improves orphaned shard cleanup logic\n\n* Improves performance of `citus_shards`\n\n* Introduces `citus.local_hostname` GUC for connections to the current node\n\n* Makes sure connection is closed after each shard move\n\n* Makes sure that target node in shard moves is eligible for shard move\n\n* Optimizes partitioned disk size calculation for shard rebalancer\n\n* Prevents connection errors by properly terminating connections\n\n* Prevents inheriting a distributed table\n\n* Prevents users from dropping & truncating known shards\n\n* Pushes down `VALUES` clause as long as not in outer part of a `JOIN`\n\n* Reduces memory usage for multi-row inserts\n\n* Reduces memory usage while rebalancing shards\n\n* Removes length limits around partition names\n\n* Removes dependencies on the existence of public schema\n\n* Executor avoids opening extra connections\n\n* Excludes orphaned shards while finding shard placements\n\n* Preserves access method of materialized views when undistributing\n  or altering distributed tables\n\n* Fixes a bug that allowed moving of shards belonging to a reference table\n\n* Fixes a bug that can cause a crash when DEBUG4 logging is enabled\n\n* Fixes a bug that causes pruning incorrect shard of a range distributed table\n\n* Fixes a bug that causes worker_create_or_alter_role to crash with NULL input\n\n* Fixes a bug where foreign key to reference table was disallowed\n\n* Fixes a bug with local cached plans on tables with dropped columns\n\n* Fixes data race in `get_rebalance_progress`\n\n* Fixes `FROM ONLY` queries on partitioned tables\n\n* Fixes an issue that could cause citus_finish_pg_upgrade to fail\n\n* Fixes error message for local table joins\n\n* Fixes issues caused by omitting public schema in queries\n\n* Fixes nested `SELECT` query with `UNION` bug\n\n* Fixes null relationName bug at parallel execution\n\n* Fixes possible segfaults when using Citus in the middle of an upgrade\n\n* Fixes problems with concurrent calls of `DropMarkedShards`\n\n* Fixes shared dependencies that are not resident in a database\n\n* Fixes stale hostnames bug in prepared statements after `master_update_node`\n\n* Fixes the relation size bug during rebalancing\n\n* Fixes two race conditions in the get_rebalance_progress\n\n* Fixes using 2PC when it might be necessary\n\n### citus v10.0.4 (July 14, 2021) ###\n\n* Introduces `citus.local_hostname` GUC for connections to the current node\n\n* Removes dependencies on the existence of public schema\n\n* Removes limits around long partition names\n\n* Fixes a bug that can cause a crash when DEBUG4 logging is enabled\n\n* Fixes a bug that causes pruning incorrect shard of a range distributed table\n\n* Fixes an issue that could cause citus_finish_pg_upgrade to fail\n\n* Fixes FROM ONLY queries on partitioned tables\n\n* Fixes issues caused by public schema being omitted in queries\n\n* Fixes problems with concurrent calls of DropMarkedShards\n\n* Fixes relname null bug when using parallel execution\n\n* Fixes two race conditions in the get_rebalance_progress\n\n### citus v9.5.6 (July 8, 2021) ###\n\n* Fixes minor bug in `citus_prepare_pg_upgrade` that caused it to lose its\n  idempotency\n\n### citus v9.5.5 (July 7, 2021) ###\n\n* Adds a configure flag to enforce security\n\n* Fixes a bug that causes pruning incorrect shard of a range distributed table\n\n* Fixes an issue that could cause citus_finish_pg_upgrade to fail\n\n### citus v9.4.5 (July 7, 2021) ###\n\n* Adds a configure flag to enforce security\n\n* Avoids re-using connections for intermediate results\n\n* Fixes a bug that causes pruning incorrect shard of a range distributed table\n\n* Fixes a bug that might cause self-deadlocks when COPY used in TX block\n\n* Fixes an issue that could cause citus_finish_pg_upgrade to fail\n\n### citus v8.3.3 (March 23, 2021) ###\n\n* Fixes a bug that leads to various issues when a connection is lost\n\n* Fixes a bug where one could create a foreign key between non-colocated tables\n\n* Fixes a deadlock during transaction recovery\n\n* Fixes a memory leak in adaptive executor when query returns many columns\n\n### citus v10.0.3 (March 16, 2021) ###\n\n* Prevents infinite recursion for queries that involve `UNION ALL`\n  below `JOIN`\n\n* Fixes a crash in queries with a modifying `CTE` and a `SELECT`\n  without `FROM`\n\n* Fixes upgrade and downgrade paths for `citus_update_table_statistics`\n\n* Fixes a bug that causes `SELECT` queries to use 2PC unnecessarily\n\n* Fixes a bug that might cause self-deadlocks with\n  `CREATE INDEX` / `REINDEX CONCURRENTLY` commands\n\n* Adds `citus.max_cached_connection_lifetime` GUC to set maximum connection\n  lifetime\n\n* Adds `citus.remote_copy_flush_threshold` GUC that controls\n  per-shard memory usages by `COPY`\n\n* Adds `citus_get_active_worker_nodes` UDF to deprecate\n  `master_get_active_worker_nodes`\n\n* Skips 2PC for readonly connections in a transaction\n\n* Makes sure that local execution starts coordinated transaction\n\n* Removes open temporary file warning when cancelling a query with\n  an open tuple store\n\n* Relaxes the locks when adding an existing node\n\n### citus v10.0.2 (March 3, 2021) ###\n\n* Adds a configure flag to enforce security\n\n* Fixes a bug due to cross join without target list\n\n* Fixes a bug with `UNION ALL` on PG 13\n\n* Fixes a compatibility issue with pg_audit in utility calls\n\n* Fixes insert query with CTEs/sublinks/subqueries etc\n\n* Grants `SELECT` permission on `citus_tables` view to `public`\n\n* Grants `SELECT` permission on columnar metadata tables to `public`\n\n* Improves `citus_update_table_statistics` and provides distributed deadlock\n  detection\n\n* Preserves colocation with procedures in `alter_distributed_table`\n\n* Prevents using `alter_columnar_table_set` and `alter_columnar_table_reset`\n  on a columnar table not owned by the user\n\n* Removes limits around long table names\n\n### citus v9.5.4 (February 19, 2021) ###\n\n* Fixes a compatibility issue with pg_audit in utility calls\n\n### citus v10.0.1 (February 19, 2021) ###\n\n* Fixes an issue in creation of `pg_catalog.time_partitions` view\n\n### citus v9.5.3 (February 16, 2021) ###\n\n* Avoids re-using connections for intermediate results\n\n* Fixes a bug that might cause self-deadlocks when `COPY` used in xact block\n\n* Fixes a crash that occurs when distributing table after dropping foreign key\n\n### citus v10.0.0 (February 16, 2021) ###\n\n* Adds support for per-table option for columnar storage\n\n* Adds `rebalance_table_shards` to rebalance the shards across the nodes\n\n* Adds `citus_drain_node` to move all shards away from any node\n\n* Enables single-node Citus for production workloads\n\n* Adds support for local table and distributed table/subquery joins\n\n* Enables foreign keys between reference tables and local tables\n  (`citus.enable_local_reference_table_foreign_keys`)\n\n* Adds support for co-located/recurring correlated subqueries\n\n* Adds support for co-located/recurring sublinks in the target list\n\n* Adds `alter_distributed_table` and `alter_table_set_access_method` UDFs\n\n* Adds `alter_old_partitions_set_access_method` UDF to compress old partitions\n\n* Adds cascade option to `undistribute_table` UDF for foreign key connected\n  relations\n\n* Allows distributed table creation immediately after CREATE EXTENSION citus\n\n* Automatically adds coordinator to the metadata before the first distributed\n  table created\n\n* Introduces adaptive connection management for local nodes\n\n* Adds support for local execution in `INSERT..SELECT` commands that perform\n  re-partitioning\n\n* Adds `public.citus_tables` view\n\n* Adds `pg_catalog.citus_shards`, `pg_catalog.citus_shards_on_worker` and\n  `pg_catalog.citus_shard_indexes_on_worker` views\n\n* Adds `pg_catalog.time_partitions` view for simple (time) partitions and their\n  access methods\n\n* Adds `remove_local_tables_from_metadata` UDF for local tables automatically\n  added to metadata when defining foreign keys with reference tables\n\n* Adds support for `CREATE INDEX` commands without index name on citus tables\n\n* Adds support for `CREATE TABLE ... USING table_access_method` statements\n\n* Propagates `ALTER TABLE .. SET LOGGED/UNLOGGED` statements\n\n* Propagates `ALTER INDEX .. SET STATISTICS` statements\n\n* Propagates `ALTER SCHEMA RENAME` statements\n\n* Propagates `CREATE STATISTICS` statements across workers.\n\n* Propagates `DROP STATISTICS` statements across the workers\n\n* Propagates all types of `ALTER STATISTICS` statements.\n\n* Avoids establishing new connections until the previous ones are finalized\n\n* Avoids re-using connections for intermediate results\n\n* Improves performance in some subquery pushdown cases\n\n* Removes unused `citus.binary_master_copy_format` GUC\n\n* Removes unused `citus.expire_cached_shards` GUC\n\n* Removes unused `citus.large_table_shard_count` GUC\n\n* Removes unused `citus.max_assign_task_batch_size` GUC\n\n* Removes unused `citus.max_running_tasks_per_node` GUC\n\n* Removes unused `citus.max_task_string_size` GUC\n\n* Removes unused `citus.max_tracked_tasks_per_node` GUC\n\n* Removes unused `citus.sslmode` GUC\n\n* Removes unused `citus.task_tracker_delay` GUC\n\n* Removes the word 'master' from Citus UDFs\n\n* Removes unused UDF `mark_tables_colocated`\n\n* Removes `upgrade_to_reference_table` UDF\n\n* Renames 'master' to 'distributed' for columns of `citus_dist_stat_activity`\n\n* Renames 'master' to 'distributed' for columns of `citus_worker_stat_activity`\n\n* Chooses the default co-location group deterministically\n\n* Deletes distributed transaction entries when removing a node\n\n* Drops support for `create_citus_local_table` in favor of\n  `citus_add_local_table_to_metadata`\n\n* Fixes `EXPLAIN ANALYZE` error when query returns no columns\n\n* Fixes a bug preventing `INSERT SELECT .. ON CONFLICT` with a constraint name\n  on local shards\n\n* Fixes a bug related to correctness of multiple joins\n\n* Fixes a bug that might cause self-deadlocks when `COPY` used in xact block\n\n* Fixes a bug with partitioned tables that block new partition creation due to\n  wrong constraint names on workers\n\n* Fixes a crash that occurs when distributing table after dropping foreign key\n\n* Fixes a crash when adding/dropping foreign keys from reference to local\n  tables added to metadata\n\n* Fixes an unexpected error when executing `CREATE TABLE IF NOT EXISTS\n  PARTITION OF` commands\n\n* Fixes deadlock issue for `CREATE INDEX` in single node\n\n* Fixes distributed deadlock detection being blocked by metadata sync\n\n* Fixes handling indexes when adding local table to metadata\n\n* Fixes `undistribute_table` when table has column with `GENERATED ALWAYS AS\n  STORED` expressions\n\n* Improves concurrent index creation failure message\n\n* Prevents empty placement creation in the coordinator when executing\n  `master_create_empty_shard()`\n\n### citus v9.5.2 (January 26, 2021) ###\n\n* Fixes distributed deadlock detection being blocked by metadata sync\n\n* Prevents segfaults when SAVEPOINT handling cannot recover from connection\n  failures\n\n* Fixes possible issues that might occur with single shard distributed tables\n\n### citus v9.4.4 (December 28, 2020) ###\n\n* Fixes a bug that could cause router queries with local tables to be pushed\n  down\n\n* Fixes a segfault in connection management due to invalid connection hash\n  entries\n\n* Fixes possible issues that might occur with single shard distributed tables\n\n### citus v9.5.1 (December 1, 2020) ###\n\n* Enables PostgreSQL's parallel queries on EXPLAIN ANALYZE\n\n* Fixes a bug that could cause excessive memory consumption when a partition is\n  created\n\n* Fixes a bug that triggers subplan executions unnecessarily with cursors\n\n* Fixes a segfault in connection management due to invalid connection hash\n  entries\n\n### citus v9.4.3 (November 24, 2020) ###\n\n* Enables PostgreSQL's parallel queries on EXPLAIN ANALYZE\n\n* Fixes a bug that triggers subplan executions unnecessarily with cursors\n\n### citus v9.5.0 (November 10, 2020) ###\n\n* Adds support for PostgreSQL 13\n\n* Removes the task-tracker executor\n\n* Introduces citus local tables\n\n* Introduces `undistribute_table` UDF to convert tables back to postgres tables\n\n* Adds support for `EXPLAIN (ANALYZE) EXECUTE` and `EXPLAIN EXECUTE`\n\n* Adds support for `EXPLAIN (ANALYZE, WAL)` for PG13\n\n* Sorts the output of `EXPLAIN (ANALYZE)` by execution duration.\n\n* Adds support for CREATE TABLE ... USING table_access_method\n\n* Adds support for `WITH TIES` option in SELECT and INSERT SELECT queries\n\n* Avoids taking multi-shard locks on workers\n\n* Enforces `citus.max_shared_pool_size` config in COPY queries\n\n* Enables custom aggregates with multiple parameters to be executed on workers\n\n* Enforces `citus.max_intermediate_result_size` in local execution\n\n* Improves cost estimation of INSERT SELECT plans\n\n* Introduces delegation of procedures that read from reference tables\n\n* Prevents pull-push execution for simple pushdownable subqueries\n\n* Improves error message when creating a foreign key to a local table\n\n* Makes `citus_prepare_pg_upgrade` idempotent by dropping transition tables\n\n* Disallows `ON TRUE` outer joins with reference & distributed tables when\n  reference table is outer relation to avoid incorrect results\n\n* Disallows field indirection in INSERT/UPDATE queries to avoid incorrect\n  results\n\n* Disallows volatile functions in UPDATE subqueries to avoid incorrect results\n\n* Fixes CREATE INDEX CONCURRENTLY crash with local execution\n\n* Fixes `citus_finish_pg_upgrade` to drop all backup tables\n\n* Fixes a bug that cause failures when `RECURSIVE VIEW` joined reference table\n\n* Fixes DROP SEQUENCE failures when metadata syncing is enabled\n\n* Fixes a bug that caused CREATE TABLE with CHECK constraint to fail\n\n* Fixes a bug that could cause VACUUM to deadlock\n\n* Fixes master_update_node failure when no background worker slots are available\n\n* Fixes a bug that caused replica identity to not be propagated on shard repair\n\n* Fixes a bug that could cause crashes after connection timeouts\n\n* Fixes a bug that could cause crashes with certain compile flags\n\n* Fixes a bug that could cause deadlocks on CREATE INDEX\n\n* Fixes a bug with genetic query optimization in outer joins\n\n* Fixes a crash when aggregating empty tables\n\n* Fixes a crash with inserting domain constrained composite types\n\n* Fixes a crash with multi-row & router INSERT's in local execution\n\n* Fixes a possibility of doing temporary file cleanup more than once\n\n* Fixes incorrect setting of join related fields\n\n* Fixes memory issues around deparsing index commands\n\n* Fixes reference table access tracking for sequential execution\n\n* Fixes removal of a single node with only reference tables\n\n* Fixes sending commands to coordinator when it is added as a worker\n\n* Fixes write queries with const expressions and COLLATE in various places\n\n* Fixes wrong cancellation message about distributed deadlock\n\n### citus v9.4.2 (October 21, 2020) ###\n\n* Fixes a bug that could lead to multiple maintenance daemons\n\n* Fixes an issue preventing views in reference table modifications\n\n### citus v9.4.1 (September 30, 2020) ###\n\n* Fixes EXPLAIN ANALYZE output truncation\n\n* Fixes a deadlock during transaction recovery\n\n### citus v9.4.0 (July 28, 2020) ###\n\n* Improves COPY by honoring max_adaptive_executor_pool_size config\n\n* Adds support for insert into local table select from distributed table\n\n* Adds support to partially push down tdigest aggregates\n\n* Adds support for receiving binary encoded results from workers using\n  citus.enable_binary_protocol\n\n* Enables joins between local tables and CTEs\n\n* Adds showing query text in EXPLAIN output when explain verbose is true\n\n* Adds support for showing CTE statistics in EXPLAIN ANALYZE\n\n* Adds support for showing amount of data received in EXPLAIN ANALYZE\n\n* Introduces downgrade paths in migration scripts\n\n* Avoids returning incorrect results when changing roles in a transaction\n\n* Fixes `ALTER TABLE IF EXISTS SET SCHEMA` with non-existing table bug\n\n* Fixes `CREATE INDEX CONCURRENTLY` with no index name on a postgres table bug\n\n* Fixes a bug that could cause crashes with certain compile flags\n\n* Fixes a bug with lists of configuration values in ALTER ROLE SET statements\n\n* Fixes a bug that occurs when coordinator is added as a worker node\n\n* Fixes a crash because of overflow in partition id with certain compile flags\n\n* Fixes a crash that may happen if no worker nodes are added\n\n* Fixes a crash that occurs when inserting implicitly coerced constants\n\n* Fixes a crash when aggregating empty tables\n\n* Fixes a memory leak in subtransaction memory handling\n\n* Fixes crash when using rollback to savepoint after cancellation of DML\n\n* Fixes deparsing for queries with anonymous column references\n\n* Fixes distribution of composite types failing to include typemods\n\n* Fixes explain analyze on adaptive executor repartitions\n\n* Fixes possible error throwing in abort handle\n\n* Fixes segfault when evaluating func calls with default params on coordinator\n\n* Fixes several EXPLAIN ANALYZE issues\n\n* Fixes write queries with const expressions and COLLATE in various places\n\n* Fixes wrong cancellation message about distributed deadlocks\n\n* Reports correct INSERT/SELECT method in EXPLAIN\n\n* Disallows triggers on citus tables\n\n### citus v9.3.5 (July 24, 2020) ###\n\n* Fixes `ALTER TABLE IF EXISTS SET SCHEMA` with non-existing table bug\n\n* Fixes `CREATE INDEX CONCURRENTLY` with no index name on a postgres table bug\n\n* Fixes a crash because of overflow in partition id with certain compile flags\n\n### citus v9.3.4 (July 21, 2020) ###\n\n* Fixes a bug that could cause crashes with certain compile flags\n\n* Fixes a bug with lists of configuration values in ALTER ROLE SET statements\n\n* Fixes deparsing for queries with anonymous column references\n\n### citus v9.3.3 (July 10, 2020) ###\n\n* Fixes a memory leak in subtransaction memory handling\n\n### citus v9.3.2 (Jun 22, 2020) ###\n\n* Fixes a version bump issue in 9.3.1\n\n### citus v9.2.6 (Jun 22, 2020) ###\n\n* Fixes a version bump issue in 9.2.5\n\n### citus v9.3.1 (Jun 17, 2020) ###\n\n* Adds support to partially push down tdigest aggregates\n\n* Fixes a crash that occurs when inserting implicitly coerced constants\n\n### citus v9.2.5 (Jun 17, 2020) ###\n\n* Adds support to partially push down tdigest aggregates\n\n* Fixes an issue with distributing tables having generated cols not at the end\n\n### citus v9.3.0 (May 6, 2020) ###\n\n* Adds `max_shared_pool_size` to control number of connections across sessions\n\n* Adds support for window functions on coordinator\n\n* Improves shard pruning logic to understand OR-conditions\n\n* Prevents using an extra connection for intermediate result multi-casts\n\n* Adds propagation of `ALTER ROLE .. SET` statements\n\n* Adds `update_distributed_table_colocation` UDF to update colocation of tables\n\n* Introduces a UDF to truncate local data after distributing a table\n\n* Adds support for creating temp schemas in parallel\n\n* Adds support for evaluation of `nextval` in the target list on coordinator\n\n* Adds support for local execution of `COPY/TRUNCATE/DROP/DDL` commands\n\n* Adds support for local execution of shard creation\n\n* Uses local execution in a transaction block\n\n* Adds support for querying distributed table sizes concurrently\n\n* Allows `master_copy_shard_placement` to replicate placements to new nodes\n\n* Allows table type to be used in target list\n\n* Avoids having multiple maintenance daemons active for a single database\n\n* Defers reference table replication to shard creation time\n\n* Enables joins between local tables and reference tables in transaction blocks\n\n* Ignores pruned target list entries in coordinator plan\n\n* Improves `SIGTERM` handling of maintenance daemon\n\n* Increases the default of `citus.node_connection_timeout` to 30 seconds\n\n* Fixes a bug that occurs when creating remote tasks in local execution\n\n* Fixes a bug that causes some DML queries containing aggregates to fail\n\n* Fixes a bug that could cause failures in queries with subqueries or CTEs\n\n* Fixes a bug that may cause some connection failures to throw errors\n\n* Fixes a bug which caused queries with SRFs and function evalution to fail\n\n* Fixes a bug with generated columns when executing `COPY dist_table TO file`\n\n* Fixes a crash when using non-constant limit clauses\n\n* Fixes a failure when composite types used in prepared statements\n\n* Fixes a possible segfault when dropping dist. table in a transaction block\n\n* Fixes a possible segfault when non-pushdownable aggs are solely used in HAVING\n\n* Fixes a segfault when executing queries using `GROUPING`\n\n* Fixes an error when using `LEFT JOIN with GROUP BY` on primary key\n\n* Fixes an issue with distributing tables having generated cols not at the end\n\n* Fixes automatic SSL permission issue when using \"initdb --allow-group-access\"\n\n* Fixes errors which could occur when subqueries are parameters to aggregates\n\n* Fixes possible issues by invalidating the plan cache in `master_update_node`\n\n* Fixes timing issues which could be caused by changing system clock\n\n### citus v9.2.4 (March 30, 2020) ###\n\n* Fixes a release problem in 9.2.3\n\n### citus v9.2.3 (March 25, 2020) ###\n\n* Do not use C functions that have been banned by Microsoft\n\n* Fixes a bug that causes wrong results with complex outer joins\n\n* Fixes issues found using static analysis\n\n* Fixes left join shard pruning in pushdown planner\n\n* Fixes possibility for segmentation fault in internal aggregate functions\n\n* Fixes possible segfault when non pushdownable aggregates are used in `HAVING`\n\n* Improves correctness of planning subqueries in `HAVING`\n\n* Prevents using old connections for security if `citus.node_conninfo` changed\n\n* Uses Microsoft approved cipher string for default TLS setup\n\n### citus v9.0.2 (March 6, 2020) ###\n\n* Fixes build errors on EL/OL 6 based distros\n\n* Fixes a bug that caused maintenance daemon to fail on standby nodes\n\n* Disallows distributed function creation when replication_model is `statement`\n\n### citus v9.2.2 (March 5, 2020) ###\n\n* Fixes a bug that caused some prepared stmts with function calls to fail\n\n* Fixes a bug that caused some prepared stmts with composite types to fail\n\n* Fixes a bug that caused missing subplan results in workers\n\n* Improves performance of re-partition joins\n\n### citus v9.2.1 (February 14, 2020) ###\n\n* Fixes a bug that could cause crashes if distribution key is NULL\n\n### citus v9.2.0 (February 10, 2020) ###\n\n* Adds support for `INSERT...SELECT` queries with re-partitioning\n\n* Adds `citus.coordinator_aggregation_strategy` to support more aggregates\n\n* Adds caching of local plans on shards for Citus MX\n\n* Adds compatibility support for dist. object infrastructure from old versions\n\n* Adds defering shard-pruning for fast-path router queries to execution\n\n* Adds propagation of `GRANT ... ON SCHEMA` queries\n\n* Adds support for CTE pushdown via CTE inlining in distributed planning\n\n* Adds support for `ALTER TABLE ... SET SCHEMA` propagation.\n\n* Adds support for `DROP ROUTINE` & `ALTER ROUTINE` commands\n\n* Adds support for any inner join on a reference table\n\n* Changes `citus.log_remote_commands` level to `NOTICE`\n\n* Disallows marking ref. table shards unhealthy in the presence of savepoints\n\n* Disallows placing new shards with shards in TO_DELETE state\n\n* Enables local execution of queries that do not need any data access\n\n* Fixes Makefile trying to cleanup PG directory during install\n\n* Fixes a bug causing errors when planning a query with multiple subqueries\n\n* Fixes a possible deadlock that could happen during shard moves\n\n* Fixes a problem when adding a new node due to tables referenced in func body\n\n* Fixes an issue that could cause joins with reference tables to be slow\n\n* Fixes cached metadata for shard is inconsistent issue\n\n* Fixes inserting multiple composite types as partition key in VALUES\n\n* Fixes unnecessary repartition on joins with more than 4 tables\n\n* Prevents wrong results for replicated partitioned tables after failure\n\n* Restricts LIMIT approximation for non-commutative aggregates\n\n### citus v9.1.2 (December 30, 2019) ###\n\n* Fixes a bug that prevents installation from source\n\n### citus v9.1.1 (December 18, 2019) ###\n\n* Fixes a bug causing SQL-executing UDFs to crash when passing in DDL\n\n* Fixes a bug that caused column_to_column_name to crash for invalid input\n\n* Fixes a bug that caused inserts into local tables w/ dist. subqueries to crash\n\n* Fixes a bug that caused some noop DML statements to fail\n\n* Fixes a bug that prevents dropping reference table columns\n\n* Fixes a crash in IN (.., NULL) queries\n\n* Fixes a crash when calling a distributed function from PL/pgSQL\n\n* Fixes an issue that caused CTEs to sometimes leak connections\n\n* Fixes strange errors in DML with unreachable sublinks\n\n* Prevents statements in SQL functions to run outside of a transaction\n\n### citus v9.1.0 (November 21, 2019) ###\n\n* Adds extensions to distributed object propagation infrastructure\n\n* Adds support for ALTER ROLE propagation\n\n* Adds support for aggregates in create_distributed_function\n\n* Adds support for expressions in reference joins\n\n* Adds support for returning RECORD in multi-shard queries\n\n* Adds support for simple IN subqueries on unique cols in repartition joins\n\n* Adds support for subqueries in HAVING clauses\n\n* Automatically distributes unary aggs w/ combinefunc and non-internal stype\n\n* Disallows distributed func creation when replication_model is 'statement'\n\n* Drops support for deprecated real-time and router executors\n\n* Fixes a bug in local execution that could cause missing rows in RETURNING\n\n* Fixes a bug that caused maintenance daemon to fail on standby nodes\n\n* Fixes a bug that caused other CREATE EXTENSION commands to take longer\n\n* Fixes a bug that prevented REFRESH MATERIALIZED VIEW\n\n* Fixes a bug when view is used in modify statements\n\n* Fixes a memory leak in adaptive executor when query returns many columns\n\n* Fixes underflow init of default values in worker extended op node creation\n\n* Fixes potential segfault in standard_planner inlining functions\n\n* Fixes an issue that caused failures in RHEL 6 builds\n\n* Fixes queries with repartition joins and group by unique column\n\n* Improves CTE/Subquery performance by pruning intermediate rslt broadcasting\n\n* Removes `citus.worker_list_file` GUC\n\n* Revokes usage from the citus schema from public\n\n### citus v9.0.1 (October 25, 2019) ###\n\n* Fixes a memory leak in the executor\n\n* Revokes usage from the citus schema from public\n\n### citus v9.0.0 (October 7, 2019) ###\n\n* Adds support for PostgreSQL 12\n\n* Adds UDFs to help with PostgreSQL upgrades\n\n* Distributes types to worker nodes\n\n* Introduces `create_distributed_function` UDF\n\n* Introduces local query execution for Citus MX\n\n* Implements infrastructure for routing `CALL` to MX workers\n\n* Implements infrastructure for routing `SELECT function()` to MX workers\n\n* Adds support for foreign key constraints between reference tables\n\n* Adds a feature flag to turn off `CREATE TYPE` propagation\n\n* Adds option `citus.single_shard_commit_protocol`\n\n* Adds support for `EXPLAIN SUMMARY`\n\n* Adds support for `GENERATE ALWAYS AS STORED`\n\n* Adds support for `serial` and `smallserial` in MX mode\n\n* Adds support for anon composite types on the target list in router queries\n\n* Avoids race condition between `create_reference_table` & `master_add_node`\n\n* Fixes a bug in schemas of distributed sequence definitions\n\n* Fixes a bug that caused `run_command_on_colocated_placements` to fail\n\n* Fixes a bug that leads to various issues when a connection is lost\n\n* Fixes a schema leak on `CREATE INDEX` statement\n\n* Fixes assert failure in bare `SELECT FROM reference table FOR UPDATE` in MX\n\n* Makes `master_update_node` MX compatible\n\n* Prevents `pg_dist_colocation` from multiple records for reference tables\n\n* Prevents segfault in `worker_partition_protocol` edgecase\n\n* Propagates `ALTER FUNCTION` statements for distributed functions\n\n* Propagates `CREATE OR REPLACE FUNCTION` for distributed functions\n\n* Propagates `REINDEX` on tables & indexes\n\n* Provides a GUC to turn of the new dependency propagation functionality\n\n* Uses 2PC in adaptive executor when dealing with replication factors above 1\n\n### citus v8.3.2 (August 09, 2019) ###\n\n* Fixes performance issues by skipping unnecessary relation access recordings\n\n### citus v8.3.1 (July 29, 2019) ###\n\n* Improves Adaptive Executor performance\n\n### citus v8.3.0 (July 10, 2019) ###\n\n* Adds a new distributed executor: Adaptive Executor\n\n* citus.enable_statistics_collection defaults to off (opt-in)\n\n* Adds support for CTEs in router planner for modification queries\n\n* Adds support for propagating SET LOCAL at xact start\n\n* Adds option to force master_update_node during failover\n\n* Deprecates master_modify_multiple_shards\n\n* Improves round robin logic on router queries\n\n* Creates all distributed schemas as superuser on a separate connection\n\n* Makes COPY adapt to connection use behaviour of previous commands\n\n* Replaces SESSION_LIFESPAN with configurable number of connections at xact end\n\n* Propagates ALTER FOREIGN TABLE commands to workers\n\n* Don't schedule tasks on inactive nodes\n\n* Makes DROP/VALIDATE CONSTRAINT tolerant of ambiguous shard extension\n\n* Fixes an issue with subquery map merge jobs as non-root\n\n* Fixes null pointers caused by partial initialization of ConnParamsHashEntry\n\n* Fixes errors caused by joins with shadowed aliases\n\n* Fixes a regression in outer joining subqueries introduced in 8.2.0\n\n* Fixes a crash that can occur under high memory load\n\n* Fixes a bug that selects wrong worker when using round-robin assignment\n\n* Fixes savepoint rollback after multi-shard modify/copy failure\n\n* Fixes bad foreign constraint name search\n\n* Fixes a bug that prevents stack size to be adjusted\n\n### citus v8.2.2 (June 11, 2019) ###\n\n* Fixes a bug in outer joins wrapped in subqueries\n\n### citus v8.2.1 (April 03, 2019) ###\n\n* Fixes a bug that prevents stack size to be adjusted\n\n### citus v8.1.2 (April 03, 2019) ###\n\n* Don't do redundant ALTER TABLE consistency checks at coordinator\n\n* Fixes a bug that prevents stack size to be adjusted\n\n* Fix an issue with some DECLARE .. CURSOR WITH HOLD commands\n\n### citus v8.2.0 (March 28, 2019) ###\n\n* Removes support and code for PostgreSQL 9.6\n\n* Enable more outer joins with reference tables\n\n* Execute CREATE INDEX CONCURRENTLY in parallel\n\n* Treat functions as transaction blocks\n\n* Add support for column aliases on join clauses\n\n* Skip standard_planner() for trivial queries\n\n* Added support for function calls in joins\n\n* Round-robin task assignment policy relies on local transaction id\n\n* Relax subquery union pushdown restrictions for reference tables\n\n* Speed-up run_command_on_shards()\n\n* Address some memory issues in connection config\n\n* Restrict visibility of get_*_active_transactions functions to pg_monitor\n\n* Don't do redundant ALTER TABLE consistency checks at coordinator\n\n* Queries with only intermediate results do not rely on task assignment policy\n\n* Finish connection establishment in parallel for multiple connections\n\n* Fixes a bug related to pruning shards using a coerced value\n\n* Fix an issue with some DECLARE .. CURSOR WITH HOLD commands\n\n* Fixes a bug that could lead to infinite recursion during recursive planning\n\n* Fixes a bug that could prevent planning full outer joins with using clause\n\n* Fixes a bug that could lead to memory leak on `citus_relation_size`\n\n* Fixes a problem that could cause segmentation fault with recursive planning\n\n* Switch CI solution to CircleCI\n\n### citus v8.0.3 (January 9, 2019) ###\n\n* Fixes maintenance daemon panic due to unreleased spinlock\n\n* Fixes an issue with having clause when used with complex joins\n\n### citus v8.1.1 (January 7, 2019) ###\n\n* Fixes maintenance daemon panic due to unreleased spinlock\n\n* Fixes an issue with having clause when used with complex joins\n\n### citus v8.1.0 (December 17, 2018) ###\n\n* Turns on ssl by default for new installations of citus\n\n* Restricts SSL Ciphers to TLS1.2 and above\n\n* Adds support for INSERT INTO SELECT..ON CONFLICT/RETURNING via coordinator\n\n* Adds support for round-robin task assignment for queries to reference tables\n\n* Adds support for SQL tasks using worker_execute_sql_task UDF with task-tracker\n\n* Adds support for VALIDATE CONSTRAINT queries\n\n* Adds support for disabling hash aggregate with HLL\n\n* Adds user ID suffix to intermediate files generated by task-tracker\n\n* Only allow transmit from pgsql_job_cache directory\n\n* Disallows GROUPING SET clauses in subqueries\n\n* Removes restriction on user-defined group ID in node addition functions\n\n* Relaxes multi-shard modify locks when enable_deadlock_prevention is disabled\n\n* Improves security in task-tracker protocol\n\n* Improves permission checks in internal DROP TABLE functions\n\n* Improves permission checks in cluster management functions\n\n* Cleans up UDFs and fixes permission checks\n\n* Fixes crashes caused by stack size increase under high memory load\n\n* Fixes a bug that could cause maintenance daemon panic\n\n### citus v8.0.2 (December 13, 2018) ###\n\n* Fixes a bug that could cause maintenance daemon panic\n\n* Fixes crashes caused by stack size increase under high memory load\n\n### citus v7.5.4 (December 11, 2018) ###\n\n* Fixes a bug that could cause maintenance daemon panic\n\n### citus v8.0.1 (November 27, 2018) ###\n\n* Execute SQL tasks using worker_execute_sql_task UDF when using task-tracker\n\n### citus v7.5.3 (November 27, 2018) ###\n\n* Execute SQL tasks using worker_execute_sql_task UDF when using task-tracker\n\n### citus v7.5.2 (November 14, 2018) ###\n\n* Fixes inconsistent metadata error when shard metadata caching get interrupted\n\n* Fixes a bug that could cause memory leak\n\n* Fixes a bug that prevents recovering wrong transactions in MX\n\n* Fixes a bug to prevent wrong memory accesses on Citus MX under very high load\n\n* Fixes crashes caused by stack size increase under high memory load\n\n### citus v8.0.0 (October 31, 2018) ###\n\n* Adds support for PostgreSQL 11\n\n* Adds support for applying DML operations on reference tables from MX nodes\n\n* Adds distributed locking to truncated MX tables\n\n* Adds support for running TRUNCATE command from MX worker nodes\n\n* Adds views to provide insight about the distributed transactions\n\n* Adds support for TABLESAMPLE in router queries\n\n* Adds support for INCLUDE option in index creation\n\n* Adds option to allow simple DML commands from hot standby\n\n* Adds support for partitioned tables with replication factor > 1\n\n* Prevents a deadlock on concurrent DROP TABLE and SELECT on Citus MX\n\n* Fixes a bug that prevents recovering wrong transactions in MX\n\n* Fixes a bug to prevent wrong memory accesses on Citus MX under very high load\n\n* Fixes a bug in MX mode, calling DROP SCHEMA with existing partitioned table\n\n* Fixes a bug that could cause modifying CTEs to select wrong execution mode\n\n* Fixes a bug preventing rollback in CREATE PROCEDURE\n\n* Fixes a bug on not being able to drop index on a partitioned table\n\n* Fixes a bug on TRUNCATE when there is a foreign key to a reference table\n\n* Fixes a performance issue in prepared INSERT..SELECT\n\n* Fixes a bug which causes errors on DROP DATABASE IF EXISTS\n\n* Fixes a bug to remove intermediate result directory in pull-push execution\n\n* Improves query pushdown planning performance\n\n* Evaluate functions anywhere in query\n\n### citus v7.5.1 (August 28, 2018) ###\n\n* Improves query pushdown planning performance\n\n* Fixes a bug that could cause modifying CTEs to select wrong execution mode\n\n### citus v7.4.2 (July 27, 2018) ###\n\n* Fixes a segfault in real-time executor during online shard move\n\n### citus v7.5.0 (July 25, 2018) ###\n\n* Adds foreign key support from hash distributed to reference tables\n\n* Adds SELECT ... FOR UPDATE support for router plannable queries\n\n* Adds support for non-partition columns in count distinct\n\n* Fixes a segfault in real-time executor during online shard move\n\n* Fixes ALTER TABLE ADD COLUMN constraint check\n\n* Fixes a bug where INSERT ... SELECT was allowed to update distribution column\n\n* Allows DDL commands to be sequentialized via `citus.multi_shard_modify_mode`\n\n* Adds support for topn_union_agg and topn_add_agg across shards\n\n* Adds support for hll_union_agg and hll_add_agg across shards\n\n* Fixes a bug that might cause shards to have a wrong owner\n\n* GUC select_opens_transaction_block defers opening transaction block on workers\n\n* Utils to implement DDLs for policies in future, warn about being unsupported\n\n* Intermediate results use separate connections to avoid interfering with tasks\n\n* Adds a node_conninfo GUC to set outgoing connection settings\n\n### citus v6.2.6 (July 06, 2018) ###\n\n* Adds support for respecting enable_hashagg in the master planner\n\n### citus v7.4.1 (June 20, 2018) ###\n\n* Fixes a bug that could cause transactions to incorrectly proceed after failure\n\n* Fixes a bug on INSERT ... SELECT queries in prepared statements\n\n### citus v7.4.0 (May 15, 2018) ###\n\n* Adds support for non-pushdownable subqueries and CTEs in UPDATE/DELETE queries\n\n* Adds support for pushdownable subqueries and joins in UPDATE/DELETE queries\n\n* Adds faster shard pruning for subqueries\n\n* Adds partitioning support to MX table\n\n* Adds support for (VACUUM | ANALYZE) VERBOSE\n\n* Adds support for multiple ANDs in `HAVING` for pushdown planner\n\n* Adds support for quotation needy schema names\n\n* Improves operator check time in physical planner for custom data types\n\n* Removes broadcast join logic\n\n* Deprecates `large_table_shard_count` and `master_expire_table_cache()`\n\n* Modifies master_update_node to lock write on shards hosted by node over update\n\n* `DROP TABLE` now drops shards as the currrent user instead of the superuser\n\n* Adds specialised error codes for connection failures\n\n* Improves error messages on connection failure\n\n* Fixes issue which prevented multiple `citus_table_size` calls per query\n\n* Tests are updated to use `create_distributed_table`\n\n### citus v7.2.2 (May 4, 2018) ###\n\n* Fixes a bug that could cause SELECTs to crash during a rebalance\n\n### citus v7.3.0 (March 15, 2018) ###\n\n* Adds support for non-colocated joins between subqueries\n\n* Adds support for window functions that can be pushed down to worker\n\n* Adds support for modifying CTEs\n\n* Adds recursive plan for subqueries in WHERE clause with recurring FROM clause\n\n* Adds support for bool_ and bit_ aggregates\n\n* Adds support for Postgres `jsonb` and `json` aggregation functions\n\n* Adds support for respecting enable_hashagg in the master plan\n\n* Adds support for renaming a distributed table\n\n* Adds support for ALTER INDEX (SET|RESET|RENAME TO) commands\n\n* Adds support for setting storage parameters on distributed tables\n\n* Performance improvements to reduce distributed planning time\n\n* Fixes a bug on planner when aggregate is used in ORDER BY\n\n* Fixes a bug on planner when DISTINCT (ON) clause is used with GROUP BY\n\n* Fixes a bug of creating coordinator planner with distinct and aggregate clause\n\n* Fixes a bug that could open a new connection on every table size function call\n\n* Fixes a bug canceling backends that are not involved in distributed deadlocks\n\n* Fixes count distinct bug on column expressions when used with subqueries\n\n* Improves error handling on worker node failures\n\n* Improves error messages for INSERT queries that have subqueries\n\n### citus v7.2.1 (February 6, 2018) ###\n\n* Fixes count distinct bug on column expressions when used with subqueries\n\n* Adds support for respecting enable_hashagg in the master plan\n\n* Fixes a bug canceling backends that are not involved in distributed deadlocks\n\n### citus v7.2.0 (January 16, 2018) ###\n\n* Adds support for CTEs\n\n* Adds support for subqueries that require merge step\n\n* Adds support for set operations (UNION, INTERSECT, ...)\n\n* Adds support for 2PC auto-recovery\n\n* Adds support for querying local tables in CTEs and subqueries\n\n* Adds support for more SQL coverage in subqueries for reference tables\n\n* Adds support for count(distinct) in queries with a subquery\n\n* Adds support for non-equijoins when there is already an equijoin for queries\n\n* Adds support for non-equijoins when there is already an equijoin for subquery\n\n* Adds support for real-time executor to run in transaction blocks\n\n* Adds infrastructure for storing intermediate distributed query results\n\n* Adds a new GUC named `enable_repartition_joins` for auto executor switch\n\n* Adds support for limiting the intermediate result size\n\n* Improves support for queries with unions containing filters\n\n* Improves support for queries with unions containing joins\n\n* Improves support for subqueries in the `WHERE` clause\n\n* Increases `COPY` throughput\n\n* Enables pushing down queries containing only recurring tuples and `GROUP BY`\n\n* Load-balance queries that read from 0 shards\n\n* Improves support for using functions in subqueries\n\n* Fixes a bug that could cause real-time executor to crash during cancellation\n\n* Fixes a bug that could cause real-time executor to get stuck on cancellation\n\n* Fixes a bug that could block modification queries unnecessarily\n\n* Fixes a bug that could cause assigning wrong IDs to transactions\n\n* Fixes a bug that could cause an assert failure with `ANALYZE` statements\n\n* Fixes a bug that could allow pushing down wrong set operations in subqueries\n\n* Fixes a bug that could cause a deadlock in create_distributed_table\n\n* Fixes a bug that could confuse user about `ANALYZE` usage\n\n* Fixes a bug that could lead to false positive distributed deadlock detections\n\n* Relaxes the locking for DDL commands on partitioned tables\n\n* Relaxes the locking on `COPY` with replication\n\n* Logs more remote commands when citus.log_remote_commands is set\n\n### citus v6.2.5 (January 11, 2018) ###\n\n* Fixes a bug that could crash the coordinator while reporting a remote error\n\n### citus v7.1.2 (January 4, 2018) ###\n\n* Fixes a bug that could cause assigning wrong IDs to transactions\n\n* Increases `COPY` throughput\n\n### citus v7.1.1 (December 1, 2017) ###\n\n* Fixes a bug that could prevent pushing down subqueries with reference tables\n\n* Fixes a bug that could create false positive distributed deadlocks\n\n* Fixes a bug that could prevent running concurrent COPY and multi-shard DDL\n\n* Fixes a bug that could mislead users about `ANALYZE` queries\n\n### citus v7.1.0 (November 14, 2017) ###\n\n* Adds support for native queries with multi shard `UPDATE`/`DELETE` queries\n\n* Expands reference table support in subquery pushdown\n\n* Adds window function support for subqueries and `INSERT ... SELECT` queries\n\n* Adds support for `COUNT(DISTINCT) [ON]` queries on non-partition columns\n\n* Adds support for `DISTINCT [ON]` queries on non-partition columns\n\n* Introduces basic usage statistic collector\n\n* Adds support for setting replica identity while creating distributed tables\n\n* Adds support for `ALTER TABLE ... REPLICA IDENTITY` queries\n\n* Adds pushdown support for `LIMIT` and `HAVING` grouped by partition key\n\n* Adds support for `INSERT ... SELECT` queries via worker nodes on MX clusters\n\n* Adds support for adding primary key using already defined index\n\n* Adds parameter to shard copy functions to support distinct replication models\n\n* Changes `shard_name` UDF to omit public schema name\n\n* Adds `master_move_node` UDF to make changes on nodename/nodeport more easy\n\n* Fixes a bug that could cause casting error with `INSERT ... SELECT` queries\n\n* Fixes a bug that could prevent upgrading servers from Citus 6.1\n\n* Fixes a bug that could prevent attaching partitions to a table in schema\n\n* Fixes a bug that could prevent adding a node to cluster with reference table\n\n* Fixes a bug that could cause a crash with `INSERT ... SELECT` queries\n\n* Fixes a bug that could prevent creating a partitoned table on Cloud\n\n* Implements various performance improvements\n\n* Adds internal infrastructures and tests to improve development process\n\n* Addresses various race conditions and deadlocks\n\n* Improves and standardizes error messages\n\n### citus v7.0.3 (October 16, 2017) ###\n\n* Fixes several bugs that could cause crash\n\n* Fixes a bug that could cause deadlock while creating reference tables\n\n* Fixes a bug that could cause false-positives in deadlock detection\n\n* Fixes a bug that could cause  2PC recovery not to work from MX workers\n\n* Fixes a bug that could cause cache incohorency\n\n* Fixes a bug that could cause maintenance daemon to skip cache invalidations\n\n* Improves performance of transaction recovery by using correct index\n\n### citus v7.0.2 (September 28, 2017) ###\n\n* Updates task-tracker to limit file access\n\n### citus v6.2.4 (September 28, 2017) ###\n\n* Updates task-tracker to limit file access\n\n### citus v6.1.3 (September 28, 2017) ###\n\n* Updates task-tracker to limit file access\n\n### citus v7.0.1 (September 12, 2017) ###\n\n* Fixes a bug that could cause memory leaks in `INSERT ... SELECT` queries\n\n* Fixes a bug that could cause incorrect execution of prepared statements\n\n* Fixes a bug that could cause excessive memory usage during COPY\n\n* Incorporates latest changes from core PostgreSQL code\n\n### citus v7.0.0 (August 28, 2017) ###\n\n* Adds support for PostgreSQL 10\n\n* Drops support for PostgreSQL 9.5\n\n* Adds support for multi-row `INSERT`\n\n* Adds support for router `UPDATE` and `DELETE` queries with subqueries\n\n* Adds infrastructure for distributed deadlock detection\n\n* Deprecates `enable_deadlock_prevention` flag\n\n* Adds support for partitioned tables\n\n* Adds support for creating `UNLOGGED` tables\n\n* Adds support for `SAVEPOINT`\n\n* Adds UDF `citus_create_restore_point` for taking distributed snapshots\n\n* Adds support for evaluating non-pushable `INSERT ... SELECT` queries\n\n* Adds support for subquery pushdown on reference tables\n\n* Adds shard pruning support for `IN` and `ANY`\n\n* Adds support for `UPDATE` and `DELETE` commands that prune down to 0 shard\n\n* Enhances transaction support by relaxing some transaction restrictions\n\n* Fixes a bug causing crash if distributed table has no shards\n\n* Fixes a bug causing crash when removing inactive node\n\n* Fixes a bug causing failure during `COPY` on tables with dropped columns\n\n* Fixes a bug causing failure during `DROP EXTENSION`\n\n* Fixes a bug preventing executing `VACUUM` and `INSERT` concurrently\n\n* Fixes a bug in prepared `INSERT` statements containing an implicit cast\n\n* Fixes several issues related to statement cancellations and connections\n\n* Fixes several 2PC related issues\n\n* Removes an unnecessary dependency causing warning messages in pg_dump\n\n* Adds internal infrastructure for follower clusters\n\n* Adds internal infrastructure for progress tracking\n\n* Implements various performance improvements\n\n* Adds internal infrastructures and tests to improve development process\n\n* Addresses various race conditions and deadlocks\n\n* Improves and standardizes error messages\n\n### citus v6.2.3 (July 13, 2017) ###\n\n* Fixes a crash during execution of local CREATE INDEX CONCURRENTLY\n\n* Fixes a bug preventing usage of quoted column names in COPY\n\n* Fixes a bug in prepared INSERTs with implicit cast in partition column\n\n* Relaxes locks in VACUUM to ensure concurrent execution with INSERT\n\n### citus v6.2.2 (May 31, 2017) ###\n\n* Fixes a common cause of deadlocks when repairing tables with foreign keys\n\n### citus v6.2.1 (May 24, 2017) ###\n\n* Relaxes version-check logic to avoid breaking non-distributed commands\n\n### citus v6.2.0 (May 16, 2017) ###\n\n* Increases SQL subquery coverage by pushing down more kinds of queries\n\n* Adds CustomScan API support to allow read-only transactions\n\n* Adds support for `CREATE/DROP INDEX CONCURRENTLY`\n\n* Adds support for `ALTER TABLE ... ADD CONSTRAINT`\n\n* Adds support for `ALTER TABLE ... RENAME COLUMN`\n\n* Adds support for `DISABLE/ENABLE TRIGGER ALL`\n\n* Adds support for expressions in the partition column in INSERTs\n\n* Adds support for query parameters in combination with function evaluation\n\n* Adds support for creating distributed tables from non-empty local tables\n\n* Adds UDFs to get size of distributed tables\n\n* Adds UDFs to add a new node without replicating reference tables\n\n* Adds checks to prevent running Citus binaries with wrong metadata tables\n\n* Improves shard pruning performance for range queries\n\n* Improves planner performance for joins involving co-located tables\n\n* Improves shard copy performance by creating indexes after copy\n\n* Improves task-tracker performance by batching several status checks\n\n* Enables router planner for queries on range partitioned table\n\n* Changes `TRUNCATE` to drop local data only if `enable_ddl_propagation` is off\n\n* Starts to execute DDL on coordinator before workers\n\n* Fixes a bug causing incorrectly reading invalidated cache\n\n* Fixes a bug related to creation of schemas of in workers with incorrect owner\n\n* Fixes a bug related to concurrent run of shard drop functions\n\n* Fixes a bug related to `EXPLAIN ANALYZE` with DML queries\n\n* Fixes a bug related to SQL functions in FROM clause\n\n* Adds a GUC variable to report cross shard queries\n\n* Fixes a bug related to partition columns without native hash function\n\n* Adds internal infrastructures and tests to improve development process\n\n* Addresses various race conditions and deadlocks\n\n* Improves and standardizes error messages\n\n### citus v6.1.2 (May 31, 2017) ###\n\n* Fixes a common cause of deadlocks when repairing tables with foreign keys\n\n### citus v6.1.1 (May 5, 2017) ###\n\n* Fixes a crash caused by router executor use after connection timeouts\n\n* Fixes a crash caused by relation cache invalidation during COPY\n\n* Fixes bug related to DDL use within PL/pgSQL functions\n\n* Fixes a COPY bug related to types lacking binary output functions\n\n* Fixes a bug related to modifications with parameterized partition values\n\n* Fixes improper value interpolation in worker sequence generation\n\n* Guards shard pruning logic against zero-shard tables\n\n* Fixes possible NULL pointer dereference and buffer underflow (via PVS-Studio)\n\n* Fixes a INSERT ... SELECT bug that could push down non-partition column JOINs\n\n### citus v6.1.0 (February 9, 2017) ###\n\n* Implements _reference tables_, transactionally replicated to all nodes\n\n* Adds `upgrade_to_reference_table` UDF to upgrade pre-6.1 reference tables\n\n* Expands prepared statement support to nearly all statements\n\n* Adds support for creating `VIEW`s which reference distributed tables\n\n* Adds targeted `VACUUM`/`ANALYZE` support\n\n* Adds support for the `FILTER` clause in aggregate expressions\n\n* Adds support for function evaluation within `INSERT INTO ... SELECT`\n\n* Adds support for creating foreign key constraints with `ALTER TABLE`\n\n* Adds logic to choose router planner for all queries it supports\n\n* Enhances `create_distributed_table` with parameter for explicit colocation\n\n* Adds generally useful utility UDFs previously available as \"Citus Tools\"\n\n* Adds user-facing UDFs for locking shard resources and metadata\n\n* Refactors connection and transaction management; giving consistent experience\n\n* Enhances `COPY` with fully transactional semantics\n\n* Improves support for cancellation for a number of queries and commands\n\n* Adds `column_to_column_name` UDF to help users understand `partkey` values\n\n* Adds `master_disable_node` UDF for temporarily disabling nodes\n\n* Adds proper MX (\"masterless\") metadata propagation logic\n\n* Adds `start_metadata_sync_to_node` UDF to propagate metadata changes to nodes\n\n* Enhances `SERIAL` compatibility with MX tables\n\n* Adds `node_connection_timeout` parameter to control node connection timeouts\n\n* Adds `enable_deadlock_prevention` setting to permit multi-node transactions\n\n* Adds a `replication_model` setting to specify replication of new tables\n\n* Changes the `shard_replication_factor` setting's default value to one\n\n* Adds code to automatically set `max_prepared_transactions` if not configured\n\n* Accelerates lookup of colocated shard placements\n\n* Fixes a bug affecting `INSERT INTO ... SELECT` queries using constant values\n\n* Fixes a bug by ensuring `COPY` does not mark placements inactive\n\n* Fixes a bug affecting reads from `pg_dist_shard_placement` table\n\n* Fixes a crash triggered by creating a foreign key without a column\n\n* Fixes a crash related to accessing catalog tables after aborted transactions\n\n* Fixes a bug affecting JOIN queries requiring repartitions\n\n* Fixes a bug affecting node insertions to `pg_dist_node` table\n\n* Fixes a crash triggered by queries with modifying common table expressions\n\n* Fixes a bug affecting workloads with concurrent shard appends and deletions\n\n* Addresses various race conditions and deadlocks\n\n* Improves and standardizes error messages\n\n### citus v6.0.1 (November 29, 2016) ###\n\n* Fixes a bug causing failures during pg_upgrade\n\n* Fixes a bug preventing DML queries during colocated table creation\n\n* Fixes a bug that caused NULL parameters to be incorrectly passed as text\n\n### citus v6.0.0 (November 7, 2016) ###\n\n* Adds compatibility with PostgreSQL 9.6, now the recommended version\n\n* Removes the `pg_worker_list.conf` file in favor of a `pg_dist_node` table\n\n* Adds `master_add_node` and `master_add_node` UDFs to manage membership\n\n* Removes the `\\stage` command and corresponding csql binary in favor of `COPY`\n\n* Removes `copy_to_distributed_table` in favor of first-class `COPY` support\n\n* Adds support for multiple DDL statements within a transaction\n\n* Adds support for certain foreign key constraints\n\n* Adds support for parallel `INSERT INTO ... SELECT` against colocated tables\n\n* Adds support for the `TRUNCATE` command\n\n* Adds support for `HAVING` clauses in `SELECT` queries\n\n* Adds support for `EXCLUDE` constraints which include the partition column\n\n* Adds support for system columns in queries (`tableoid`, `ctid`, etc.)\n\n* Adds support for relation name extension within `INDEX` definitions\n\n* Adds support for no-op `UPDATE`s of the partition column\n\n* Adds several general-purpose utility UDFs to aid in Citus maintenance\n\n* Adds `master_expire_table_cache` UDF to forcibly expire cached shards\n\n* Parallelizes the processing of DDL commands which affect distributed tables\n\n* Adds support for repartition jobs using composite or custom types\n\n* Enhances object name extension to handle long names and large shard counts\n\n* Parallelizes the `master_modify_multiple_shards` UDF\n\n* Changes distributed table creation to error if the target table is not empty\n\n* Changes the `pg_dist_shard.logicalrelid` column from an `oid` to `regclass`\n\n* Adds a `placementid` column to `pg_dist_shard_placement`, replacing Oid use\n\n* Removes the `pg_dist_shard.shardalias` distribution metadata column\n\n* Adds `pg_dist_partition.repmodel` to track tables using streaming replication\n\n* Adds internal infrastructure to take snapshots of distribution metadata\n\n* Addresses the need to invalidate prepared statements on metadata changes\n\n* Adds a `mark_tables_colocated` UDF for denoting pre-6.0 manual colocation\n\n* Fixes a bug affecting prepared statement execution within PL/pgSQL\n\n* Fixes a bug affecting `COPY` commands using composite types\n\n* Fixes a bug that could cause crashes during `EXPLAIN EXECUTE`\n\n* Separates worker and master job temporary folders\n\n* Eliminates race condition between distributed modification and repair\n\n* Relaxes the requirement that shard repairs also repair colocated shards\n\n* Implements internal functions to track which tables' shards are colocated\n\n* Adds `pg_dist_partition.colocationid` to track colocation group membership\n\n* Extends shard copy and move operations to respect colocation settings\n\n* Adds `pg_dist_local_group` to prepare for future MX-related changes\n\n* Adds `create_distributed_table` to easily create shards and infer colocation\n\n### citus v5.2.2 (November 7, 2016) ###\n\n* Adds support for `IF NOT EXISTS` clause of `CREATE INDEX` command\n\n* Adds support for `RETURN QUERY` and `FOR ... IN` PL/pgSQL features\n\n* Extends the router planner to handle more queries\n\n* Changes `COUNT` of zero-row sets to return `0` rather than an empty result\n\n* Reduces the minimum permitted `task_tracker_delay` to a single millisecond\n\n* Fixes a bug that caused crashes during joins with a `WHERE false` clause\n\n* Fixes a bug triggered by unique violation errors raised in long transactions\n\n* Fixes a bug resulting in multiple registration of transaction callbacks\n\n* Fixes a bug which could result in stale reads of distribution metadata\n\n* Fixes a bug preventing distributed modifications in some PL/pgSQL functions\n\n* Fixes some code paths that could hypothetically read uninitialized memory\n\n* Lowers log level of _waiting for activity_ messages\n\n### citus v5.2.1 (September 6, 2016) ###\n\n* Fixes subquery pushdown to properly extract outer join qualifiers\n\n* Addresses possible memory leak during multi-shard transactions\n\n### citus v5.2.0 (August 15, 2016) ###\n\n* Drops support for PostgreSQL 9.4; PostgreSQL 9.5 is required\n\n* Adds schema support for tables, other named objects (types, operators, etc.)\n\n* Evaluates non-immutable functions on master in all modification commands\n\n* Adds support for SERIAL types in non-partition columns\n\n* Adds support for RETURNING clause in INSERT, UPDATE, and DELETE commands\n\n* Adds support for multi-statement transactions involving a fixed set of nodes\n\n* Full SQL support for SELECT queries which can be executed on a single worker\n\n* Adds option to perform DDL changes using prepared transactions (2PC)\n\n* Adds an `enable_ddl_propagation` parameter to control DDL propagation\n\n* Accelerates shard pruning during merges\n\n* Adds `master_modify_multiple_shards` UDF to modify many shards at once\n\n* Adds COPY support for arrays of user-defined types\n\n* Now supports parameterized prepared statements for certain use cases\n\n* Extends LIMIT/OFFSET support to all executor types\n\n* Constraint violations now fail fast rather than hitting all placements\n\n* Makes `master_create_empty_shard` aware of shard placement policy\n\n* Reduces unnecessary sleep during queries processed by real-time executor\n\n* Improves task tracker executor's task cleanup logic\n\n* Relaxes restrictions on cancellation of DDL commands\n\n* Removes ONLY keyword from worker SELECT queries\n\n* Error message improvements and standardization\n\n* Moves `master_update_shard_statistics` function to `pg_catalog` schema\n\n* Fixes a bug where hash-partitioned anti-joins could return incorrect results\n\n* Now sets storage type correctly for foreign table-backed shards\n\n* Fixes `master_update_shard_statistics` issue with hash-partitioned tables\n\n* Fixes an issue related to extending table names that require escaping\n\n* Reduces risk of row counter overflows during modifications\n\n* Fixes a crash related to FILTER clause use in COUNT DISTINCT subqueries\n\n* Fixes crashes related to partition columns with high attribute numbers\n\n* Fixes certain subquery and join crashes\n\n* Detects flex for build even if PostgreSQL was built without it\n\n* Fixes assert-enabled crash when `all_modifications_commutative` is true\n\n### citus v5.2.0-rc.1 (August 1, 2016) ###\n\n* Initial 5.2.0 candidate\n\n### citus v5.1.1 (June 17, 2016) ###\n\n* Adds complex count distinct expression support in repartitioned subqueries\n\n* Improves task tracker job cleanup logic, addressing a memory leak\n\n* Fixes bug that generated incorrect results for LEFT JOIN queries\n\n* Improves compatibility with Debian's reproducible builds project\n\n* Fixes build issues on FreeBSD platforms\n\n### citus v5.1.0 (May 17, 2016) ###\n\n* Adds distributed COPY to rapidly populate distributed tables\n\n* Adds support for using EXPLAIN on distributed queries\n\n* Recognizes and fast-paths single-shard SELECT statements automatically\n\n* Increases INSERT throughput via shard pruning optimizations\n\n* Improves planner performance for joins involving tables with many shards\n\n* Adds ability to pass columns as arguments to function calls in UPDATEs\n\n* Introduces transaction manager for use by multi-shard commands\n\n* Adds COUNT(DISTINCT ...) pushdown optimization for hash-partitioned tables\n\n* Adds support for certain UNIQUE indexes on hash- or range-partitioned tables\n\n* Deprecates \\stage in favor of using COPY for append-partition tables\n\n* Deprecates `copy_to_distributed_table` in favor of first-class COPY support\n\n* Fixes build problems when using non-packaged PostgreSQL installs\n\n* Fixes bug that sometimes skipped pruning when partitioned by a VARCHAR column\n\n* Fixes bug impeding use of user-defined functions in repartitioned subqueries\n\n* Fixes bug involving queries with equality comparisons of boolean types\n\n* Fixes crash that prevented use alongside `pg_stat_statements`\n\n* Fixes crash arising from SELECT queries that lack a target list\n\n* Improves warning and error messages\n\n### citus v5.1.0-rc.2 (May 10, 2016) ###\n\n* Fixes test failures\n\n* Fixes EXPLAIN output when FORMAT JSON in use\n\n### citus v5.1.0-rc.1 (May 4, 2016) ###\n\n* Initial 5.1.0 candidate\n\n### citus v5.0.1 (April 15, 2016) ###\n\n* Fixes issues on 32-bit systems\n\n### citus v5.0.0 (March 24, 2016) ###\n\n* Public release under AGPLv3\n\n* PostgreSQL extension compatible with PostgreSQL 9.5 and 9.4\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.43359375,
          "content": "# Microsoft Open Source Code of Conduct\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\n\nResources:\n\n- [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/)\n- [Microsoft Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/)\n- Contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with questions or concerns\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 11.5908203125,
          "content": "# Contributing to Citus\n\nWe're happy you want to contribute! You can help us in different ways:\n\n* Open an [issue](https://github.com/citusdata/citus/issues) with\n  suggestions for improvements\n* Fork this repository and submit a pull request\n\nBefore accepting any code contributions we ask that contributors\nsign a Contributor License Agreement (CLA). For an explanation of\nwhy we ask this as well as instructions for how to proceed, see the\n[Microsoft CLA](https://cla.opensource.microsoft.com/).\n\n### Devcontainer / Github Codespaces\n\nThe easiest way to start contributing is via our devcontainer. This container works both locally in visual studio code with docker-desktop/docker-for-mac as well as [Github Codespaces](https://github.com/features/codespaces). To open the project in vscode you will need the [Dev Containers extension](https://marketplace.visualstudio.com/items?itemName=ms-vscode-remote.remote-containers). For codespaces you will need to [create a new codespace](https://codespace.new/citusdata/citus).\n\nWith the extension installed you can run the following from the command pallet to get started\n\n```\n> Dev Containers: Clone Repository in Container Volume...\n```\n\nIn the subsequent popup paste the url to the repo and hit enter.\n\n```\nhttps://github.com/citusdata/citus\n```\n\nThis will create an isolated Workspace in vscode, complete with all tools required to build, test and run the Citus extension. We keep this container up to date with the supported postgres versions as well as the exact versions of tooling we use.\n\nTo quickly start we suggest splitting your terminal once to have two shells. The left one in the `/workspaces/citus`, the second one changed to `/data`. The left terminal will be used to interact with the project, the right one with a testing cluster.\n\nTo get citus installed from source we run `make install -s` in the first terminal. Once installed you can start a Citus cluster in the second terminal via `citus_dev make citus`. The cluster will run in the background, and can be interacted with via `citus_dev`. To get an overview of the available commands.\n\nWith the Citus cluster running you can connect to the coordinator in the first terminal via `psql -p9700`. Because the coordinator is the most common entrypoint the `PGPORT` environment is set accordingly, so a simple `psql` will connect directly to the coordinator.\n\n### Debugging in the VS code\n\n1. Start Debugging: Press F5 in VS Code to start debugging. When prompted, you'll need to attach the debugger to the appropriate PostgreSQL process.\n\n2. Identify the Process: If you're running a psql command, take note of the PID that appears in your psql prompt. For example:\n```\n[local] citus@citus:9700 (PID: 5436)=#\n```\nThis PID (5436 in this case) indicates the process that you should attach the debugger to.\nIf you are uncertain about which process to attach, you can list all running PostgreSQL processes using the following command:\n```\nps aux | grep postgres\n```\n\nLook for the process associated with the PID you noted. For example:\n```\ncitus      5436  0.0  0.0  0  0 ?        S    14:00   0:00 postgres: citus citus\n```\n4. Attach the Debugger: Once you've identified the correct PID, select that process when prompted in VS Code to attach the debugger. You should now be able to debug the PostgreSQL session tied to the psql command.\n\n5. Set Breakpoints and Debug: With the debugger attached, you can set breakpoints within the code. This allows you to step through the code execution, inspect variables, and fully debug the PostgreSQL instance running in your container.\n\n### Getting and building\n\n[PostgreSQL documentation](https://www.postgresql.org/support/versioning/) has a\nsection on upgrade policy.\n\n\tWe always recommend that all users run the latest available minor release [for PostgreSQL] for whatever major version is in use.\n\nWe expect Citus users to honor this recommendation and use latest available\nPostgreSQL minor release. Failure to do so may result in failures in our test\nsuite. There are some known improvements in PG test architecture such as\n[this commit](https://github.com/postgres/postgres/commit/3f323956128ff8589ce4d3a14e8b950837831803)\nthat are missing in earlier minor versions.\n\n#### Mac\n\n1. Install Xcode\n2. Install packages with Homebrew\n\n  ```bash\n  brew update\n  brew install git postgresql python\n  ```\n\n3. Get, build, and test the code\n\n  ```bash\n  git clone https://github.com/citusdata/citus.git\n\n  cd citus\n  ./configure\n  # If you have already installed the project, you need to clean it first\n  make clean\n  make\n  make install\n  # Optionally, you might instead want to use `make install-all`\n  # since `multi_extension` regression test would fail due to missing downgrade scripts.\n  cd src/test/regress\n\n  pip install pipenv\n  pipenv --rm\n  pipenv install\n  pipenv shell\n\n  make check\n  ```\n\n#### Debian-based Linux (Ubuntu, Debian)\n\n1. Install build dependencies\n\n  ```bash\n  echo \"deb http://apt.postgresql.org/pub/repos/apt/ $(lsb_release -cs)-pgdg main\" | \\\n       sudo tee /etc/apt/sources.list.d/pgdg.list\n  wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | \\\n       sudo apt-key add -\n  sudo apt-get update\n\n  sudo apt-get install -y postgresql-server-dev-14 postgresql-14 \\\n                          autoconf flex git libcurl4-gnutls-dev libicu-dev \\\n                          libkrb5-dev liblz4-dev libpam0g-dev libreadline-dev \\\n                          libselinux1-dev libssl-dev libxslt1-dev libzstd-dev \\\n                          make uuid-dev\n  ```\n\n2. Get, build, and test the code\n\n  ```bash\n  git clone https://github.com/citusdata/citus.git\n  cd citus\n  ./configure\n  # If you have already installed the project previously, you need to clean it first\n  make clean\n  make\n  sudo make install\n  # Optionally, you might instead want to use `sudo make install-all`\n  # since `multi_extension` regression test would fail due to missing downgrade scripts.\n  cd src/test/regress\n\n  pip install pipenv\n  pipenv --rm\n  pipenv install\n  pipenv shell\n\n  make check\n  ```\n\n#### Red Hat-based Linux (RHEL, CentOS, Fedora)\n\n1. Find the RPM URL for your repo at [yum.postgresql.org](http://yum.postgresql.org/repopackages.php)\n2. Register its contents with Yum:\n\n  ```bash\n  sudo yum install -y <url>\n  ```\n\n3. Register EPEL and SCL repositories for your distro.\n\n  On CentOS:\n\n  ```bash\n  yum install -y centos-release-scl-rh epel-release\n  ```\n\n  On RHEL, see [this RedHat blog post](https://developers.redhat.com/blog/2018/07/07/yum-install-gcc7-clang/) to install set-up SCL first. Then run:\n\n  ```bash\n  yum install -y epel-release\n  ```\n\n4. Install build dependencies\n\n  ```bash\n  sudo yum update -y\n  sudo yum groupinstall -y 'Development Tools'\n  sudo yum install -y postgresql14-devel postgresql14-server     \\\n                      git libcurl-devel libxml2-devel libxslt-devel \\\n                      libzstd-devel llvm-toolset-7-clang llvm5.0 lz4-devel \\\n                      openssl-devel pam-devel readline-devel\n\n  git clone https://github.com/citusdata/citus.git\n  cd citus\n  PG_CONFIG=/usr/pgsql-14/bin/pg_config ./configure\n  # If you have already installed the project previously, you need to clean it first\n  make clean\n  make\n  sudo make install\n  # Optionally, you might instead want to use `sudo make install-all`\n  # since `multi_extension` regression test would fail due to missing downgrade scripts.\n  cd src/test/regress\n\n  pip install pipenv\n  pipenv --rm\n  pipenv install\n  pipenv shell\n\n  make check\n  ```\n\n### Following our coding conventions\n\nCI pipeline will automatically reject any PRs which do not follow our coding\nconventions. The easiest way to ensure your PR adheres to those conventions is\nto use the [citus_indent](https://github.com/citusdata/tools/tree/develop/uncrustify)\ntool. This tool uses `uncrustify` under the hood.\n\n```bash\n# Uncrustify changes the way it formats code every release a bit. To make sure\n# everyone formats consistently we use version 0.68.1:\ncurl -L https://github.com/uncrustify/uncrustify/archive/uncrustify-0.68.1.tar.gz | tar xz\ncd uncrustify-uncrustify-0.68.1/\nmkdir build\ncd build\ncmake ..\nmake -j5\nsudo make install\ncd ../..\n\ngit clone https://github.com/citusdata/tools.git\ncd tools\nmake uncrustify/.install\n```\n\nOnce you've done that, you can run the `make reindent` command from the top\ndirectory to recursively check and correct the style of any source files in the\ncurrent directory. Under the hood, `make reindent` will run `citus_indent` and\nsome other style corrections for you.\n\nYou can also run the following in the directory of this repository to\nautomatically format all the files that you have changed before committing:\n\n```bash\ncat > .git/hooks/pre-commit << __EOF__\n#!/bin/bash\ncitus_indent --check --diff || { citus_indent --diff; exit 1; }\n__EOF__\nchmod +x .git/hooks/pre-commit\n```\n\n### Making SQL changes\n\nSometimes you need to make change to the SQL that the citus extension runs upon\ncreations. The way this is done is by changing the last file in\n`src/backend/distributed/sql`, or creating it if the last file is from a\npublished release. If you needed to create a new file, also change the\n`default_version` field in `src/backend/distributed/citus.control` to match your\nnew version. All the files in this directory are run in order based on\ntheir name. See [this page in the Postgres\ndocs](https://www.postgresql.org/docs/current/extend-extensions.html) for more\ninformation on how Postgres runs these files.\n\n#### Changing or creating functions\n\nIf you need to change any functions defined by Citus. You should check inside\n`src/backend/distributed/sql/udfs` to see if there is already a directory for\nthis function, if not create one. Then change or create the file called\n`latest.sql` in that directory to match how it should create the function. This\nshould be including any DROP (IF EXISTS), COMMENT and REVOKE statements for this\nfunction.\n\nThen copy the `latest.sql` file to `{version}.sql`, where `{version}` is the\nversion for which this sql change is, e.g. `{9.0-1.sql}`. Now that you've\ncreated this stable snapshot of the function definition for your version you\nshould use it in your actual sql file, e.g.\n`src/backend/distributed/sql/citus--8.3-1--9.0-1.sql`. You do this by using C\nstyle `#include` statements like this:\n```\n#include \"udfs/myudf/9.0-1.sql\"\n```\n\n#### Other SQL\n\nAny other SQL you can put directly in the main sql file, e.g.\n`src/backend/distributed/sql/citus--8.3-1--9.0-1.sql`.\n\n### Backporting a commit to a release branch\n\n1. Check out the release branch that you want to backport to `git checkout release-11.3`\n2. Make sure you have the latest changes `git pull`\n3. Create a new release branch with a unique name `git checkout -b release-11.3-<yourname>`\n4. Cherry-pick the commit that you want to backport `git cherry-pick -x <sha>` (the `-x` is important)\n5. Push the branch `git push`\n6. Wait for tests to pass\n7. If the cherry-pick required non-trivial merge conflicts, create a PR and ask\n   for a review.\n8. After the tests pass on CI, fast-forward the release branch `git push origin release-11.3-<yourname>:release-11.3`\n\n### Running tests\n\nSee [`src/test/regress/README.md`](https://github.com/citusdata/citus/blob/master/src/test/regress/README.md)\n\n### Documentation\n\nUser-facing documentation is published on [docs.citusdata.com](https://docs.citusdata.com/). When adding a new feature, function, or setting, you can open a pull request or issue against the [Citus docs repo](https://github.com/citusdata/citus_docs/).\n\nDetailed descriptions of the implementation for Citus developers are provided in the [Citus Technical Documentation](src/backend/distributed/README.md). It is currently a single file for ease of searching. Please update the documentation if you make any changes that affect the design or add major new features.\n"
        },
        {
          "name": "DEVCONTAINER.md",
          "type": "blob",
          "size": 3.1181640625,
          "content": "# Devcontainer\n\n## Coredumps\nWhen postgres/citus crashes, there is the option to create a coredump. This is useful for debugging the issue. Coredumps are enabled in the devcontainer by default. However, not all environments are configured correctly out of the box. The most important configuration that is not standardized is the `core_pattern`. The configuration can be verified from the container, however, you cannot change this setting from inside the container as the filesystem containing this setting is in read only mode while inside the container.\n\nTo verify if corefiles are written run the following command in a terminal. This shows the filename pattern with which the corefile will be written.\n```bash\ncat /proc/sys/kernel/core_pattern\n```\n\nThis should be configured with a relative path or simply a simple filename, such as `core`. When your environment shows an absolute path you will need to change this setting. How to change this setting depends highly on the underlying system as the setting needs to be changed on the kernel of the host running the container.\n\nYou can put any pattern in `/proc/sys/kernel/core_pattern` as you see fit. eg. You can add the PID to the core pattern in one of two ways;\n- You either include `%p` in the core_pattern. This gets substituted with the PID of the crashing process.\n- Alternatively you could set `/proc/sys/kernel/core_uses_pid` to `1` in the same way as you set `core_pattern`. This will append the PID to the corefile if `%p` is not explicitly contained in the core_pattern.\n\nWhen a coredump is written you can use the debug/launch configuration `Open core file` which is preconfigured in the devcontainer. This will open a fileprompt that lists all coredumps that are found in your workspace. When you want to debug coredumps from `citus_dev` that are run in your `/data` directory, you can add the data directory to your workspace. In the command pallet of vscode you can run `>Workspace: Add Folder to Workspace...` and select the `/data` directory. This will allow you to open the coredumps from the `/data` directory in the `Open core file` debug configuration.\n\n### Windows (docker desktop)\nWhen running in docker desktop on windows you will most likely need to change this setting. The linux guest in WSL2 that runs your container is the `docker-desktop` environment. The easiest way to get onto the host, where you can change this setting, is to open a powershell window and verify you have the docker-desktop environment listed.\n\n```powershell\nwsl --list\n```\n\nAmong others this should list both `docker-desktop` and `docker-desktop-data`. You can then open a shell in the `docker-desktop` environment.\n\n```powershell\nwsl -d docker-desktop\n```\n\nInside this shell you can verify that you have the right environment by running\n\n```bash\ncat /proc/sys/kernel/core_pattern\n```\n\nThis should show the same configuration as the one you see inside the devcontainer. You can then change the setting by running the following command.\nThis will change the setting for the current session. If you want to make the change permanent you will need to add this to a startup script.\n\n```bash\necho \"core\" > /proc/sys/kernel/core_pattern\n```\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 33.7109375,
          "content": "                    GNU AFFERO GENERAL PUBLIC LICENSE\n                       Version 3, 19 November 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Remote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as published\n    by the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\n<http://www.gnu.org/licenses/>.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 2.0087890625,
          "content": "# Citus toplevel Makefile\n\ncitus_subdir = .\ncitus_top_builddir = .\nextension_dir = $(shell $(PG_CONFIG) --sharedir)/extension\n\n# Hint that configure should be run first\nifeq (,$(wildcard Makefile.global))\n  $(error ./configure needs to be run before compiling Citus)\nendif\n\ninclude Makefile.global\n\nall: extension\n\n\n# build columnar only\ncolumnar:\n\t$(MAKE) -C src/backend/columnar all\n# build extension\nextension: $(citus_top_builddir)/src/include/citus_version.h columnar\n\t$(MAKE) -C src/backend/distributed/ all\ninstall-columnar: columnar\n\t$(MAKE) -C src/backend/columnar install\ninstall-extension: extension install-columnar\n\t$(MAKE) -C src/backend/distributed/ install\ninstall-headers: extension\n\t$(MKDIR_P) '$(DESTDIR)$(includedir_server)/distributed/'\n# generated headers are located in the build directory\n\t$(INSTALL_DATA) $(citus_top_builddir)/src/include/citus_version.h '$(DESTDIR)$(includedir_server)/'\n# the rest in the source tree\n\t$(INSTALL_DATA) $(citus_abs_srcdir)/src/include/distributed/*.h '$(DESTDIR)$(includedir_server)/distributed/'\n\nclean-extension:\n\t$(MAKE) -C src/backend/distributed/ clean\n\t$(MAKE) -C src/backend/columnar/ clean\nclean-full:\n\t$(MAKE) -C src/backend/distributed/ clean-full\n.PHONY: extension install-extension clean-extension clean-full\n\ninstall-downgrades:\n\t$(MAKE) -C src/backend/distributed/ install-downgrades\ninstall-all: install-headers\n\t$(MAKE) -C src/backend/columnar/ install-all\n\t$(MAKE) -C src/backend/distributed/ install-all\n\n\n# Add to generic targets\ninstall: install-extension install-headers\nclean: clean-extension\n\n# apply or check style\nreindent:\n\t${citus_abs_top_srcdir}/ci/fix_style.sh\ncheck-style:\n\tblack . --check --quiet\n\tisort . --check --quiet\n\tflake8\n\tcd ${citus_abs_top_srcdir} && citus_indent --quiet --check\n.PHONY: reindent check-style\n\n# depend on install-all so that downgrade scripts are installed as well\ncheck: all install-all\n\t# explicetely does not use $(MAKE) to avoid parallelism\n\tmake -C src/test/regress check\n\n.PHONY: all check clean install install-downgrades install-all\n"
        },
        {
          "name": "Makefile.global.in",
          "type": "blob",
          "size": 3.9130859375,
          "content": "# -*-makefile-*-\n# @configure_input@\n# Makefile.global.in - Makefile to be included by all submakes\n#\n# This file is converted by configure into an actual Makefile,\n# replacing the @varname@ placeholders by actual values.\n#\n# This files is intended to contain infrastructure needed by several\n# makefiles, particulary central handling of compilation flags and\n# rules.\n\ncitus_abs_srcdir:=@abs_top_srcdir@/${citus_subdir}\ncitus_abs_top_srcdir:=@abs_top_srcdir@\npostgres_abs_srcdir:=@POSTGRES_SRCDIR@\npostgres_abs_builddir:=@POSTGRES_BUILDDIR@\n\nPG_CONFIG:=@PG_CONFIG@\nPGXS:=$(shell $(PG_CONFIG) --pgxs)\n\n# if both, git is installed and there is a .git directory in the working dir we set the\n# GIT_VERSION to a human readable gitref that resembles the version from which citus is\n# built. During releases it will show the tagname which by convention is the verion of the\n# release\nifneq (@GIT_BIN@,)\nifneq (@HAS_DOTGIT@,)\n\t# try to find a tag that exactly matches the current branch, swallow the error if cannot find such a tag\n\tGIT_VERSION := \"$(shell @GIT_BIN@ describe --exact-match --dirty --always --tags 2>/dev/null)\"\n\n\t# if there is not a tag that exactly matches the branch, then GIT_VERSION would still be empty\n\t# in that case, set GIT_VERSION with current branch's name and the short sha of the HEAD\nifeq ($(GIT_VERSION),\"\")\n\tGIT_VERSION := \"$(shell @GIT_BIN@ rev-parse --abbrev-ref HEAD)(sha: $(shell @GIT_BIN@ rev-parse --short HEAD))\"\nendif\nendif\nendif\n\n# Support for VPATH builds (i.e. builds from outside the source tree)\nvpath_build=@vpath_build@\nifeq ($(vpath_build),yes)\n\toverride VPATH:=$(citus_abs_srcdir)\n\tUSE_VPATH:=$(VPATH)\n\tcitus_top_srcdir:=$(citus_abs_top_srcdir)\n\toverride srcdir=$(VPATH)\nelse\n\tcitus_top_srcdir:=$(citus_top_builddir)\nendif\n\n# Citus is built using PostgreSQL's pgxs\nUSE_PGXS=1\ninclude $(PGXS)\n\n# Remake Makefile.global from Makefile.global.in if the latter\n# changed. In order to trigger this rule, the including file must\n# write `include $(citus_top_builddir)/Makefile.global', not some\n# shortcut thereof.  This makes it less likely to accidentally run\n# with some outdated Makefile.global.\n# Make internally restarts whenever included Makefiles are\n# regenerated.\n$(citus_top_builddir)/Makefile.global: $(citus_abs_top_srcdir)/configure $(citus_top_builddir)/Makefile.global.in $(citus_top_builddir)/config.status\n\tcd @abs_top_builddir@ && ./config.status Makefile.global\n\n# Ensure configuration is generated by the most recent configure,\n# useful for longer existing build directories.\n$(citus_top_builddir)/config.status: $(citus_abs_top_srcdir)/configure $(citus_abs_top_srcdir)/src/backend/distributed/citus.control\n\tcd @abs_top_builddir@ && ./config.status --recheck && ./config.status\n\n# Regenerate configure if configure.ac changed\n$(citus_abs_top_srcdir)/configure: $(citus_abs_top_srcdir)/configure.ac\n\tcd ${citus_abs_top_srcdir} && ./autogen.sh\n\n# If specified via configure, replace the default compiler. Normally\n# we'll build with the one postgres was built with. But it's useful to\n# be able to use a different one, especially when building against\n# distribution packages.\nifneq (@CC@,)\n    override CC=@CC@\nendif\n\n# If detected by our configure script, override the FLEX postgres\n# detected.  That allows to compile citus against a postgres which was\n# built without flex available (possible because generated files are\n# included)\nifneq (@FLEX@,)\n    override FLEX=@FLEX@\nendif\n\n# Add options passed to configure or computed therein, to CFLAGS/CPPFLAGS/...\noverride CFLAGS += @CFLAGS@ @CITUS_CFLAGS@\noverride BITCODE_CFLAGS := $(BITCODE_CFLAGS) @CITUS_BITCODE_CFLAGS@\nifneq ($(GIT_VERSION),)\n    override CFLAGS += -DGIT_VERSION=\\\"$(GIT_VERSION)\\\"\nendif\noverride CPPFLAGS := @CPPFLAGS@ @CITUS_CPPFLAGS@ -I '${citus_abs_top_srcdir}/src/include' -I'${citus_top_builddir}/src/include' $(CPPFLAGS)\noverride LDFLAGS += @LDFLAGS@ @CITUS_LDFLAGS@\n\n# optional file with user defined, additional, rules\n-include ${citus_abs_srcdir}/src/Makefile.custom\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 4.3134765625,
          "content": "NOTICES AND INFORMATION\nDo Not Translate or Localize\n\nThis software incorporates material from third parties.\nMicrosoft makes certain open source code available at https://3rdpartysource.microsoft.com,\nor you may send a check or money order for US $5.00, including the product name,\nthe open source component name, platform, and version number, to:\n\nSource Code Compliance Team\nMicrosoft Corporation\nOne Microsoft Way\nRedmond, WA 98052\nUSA\n\nNotwithstanding any other terms, you may reverse engineer this software to the extent\nrequired to debug changes to any libraries licensed under the GNU Lesser General Public License.\n\n---------------------------------------------------------\n\n---------------------------------------------------------\n\nintel/safestringlib 245c4b8cff1d2e7338b7f3a82828fc8e72b29549 - MIT\n\nCopyright (c) 2014-2018 Intel Corporation\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n================================================================================\n\nCopyright (C) 2012, 2013 Cisco Systems\nAll rights reserved.\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or\nsell copies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT.  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n---------------------------------------------------------\n\n\npostgres/postgres 29be9983a64c011eac0b9ee29895cce71e15ea77\n\n\nPostgreSQL Database Management System\n(formerly known as Postgres, then as Postgres95)\n\nPortions Copyright (c) 1996-2020, PostgreSQL Global Development Group\n\nPortions Copyright (c) 1994, The Regents of the University of California\n\nPermission to use, copy, modify, and distribute this software and its\ndocumentation for any purpose, without fee, and without a written agreement\nis hereby granted, provided that the above copyright notice and this\nparagraph and the following two paragraphs appear in all copies.\n\nIN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY FOR\nDIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING\nLOST PROFITS, ARISING OUT OF THE USE OF THIS SOFTWARE AND ITS\nDOCUMENTATION, EVEN IF THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.\n\nTHE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES,\nINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS FOR A PARTICULAR PURPOSE.  THE SOFTWARE PROVIDED HEREUNDER IS\nON AN \"AS IS\" BASIS, AND THE UNIVERSITY OF CALIFORNIA HAS NO OBLIGATIONS TO\nPROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.\n\n---------------------------------------------------------\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 33.525390625,
          "content": "| **<br/>The Citus database is 100% open source.<br/><img width=1000/><br/>Learn what's new in the [Citus 12.1 release blog](https://www.citusdata.com/blog/2023/09/22/adding-postgres-16-support-to-citus-12-1/) and the [Citus Updates page](https://www.citusdata.com/updates/).<br/><br/>**|\n|---|\n<br/>\n\n\n\n![Citus Banner](images/citus-readme-banner.png)\n\n[![Latest Docs](https://img.shields.io/badge/docs-latest-brightgreen.svg)](https://docs.citusdata.com/)\n[![Stack Overflow](https://img.shields.io/badge/Stack%20Overflow-%20-545353?logo=Stack%20Overflow)](https://stackoverflow.com/questions/tagged/citus)\n[![Slack](https://cituscdn.azureedge.net/images/social/slack-badge.svg)](https://slack.citusdata.com/)\n[![Code Coverage](https://codecov.io/gh/citusdata/citus/branch/master/graph/badge.svg)](https://app.codecov.io/gh/citusdata/citus)\n[![Twitter](https://img.shields.io/twitter/follow/citusdata.svg?label=Follow%20@citusdata)](https://twitter.com/intent/follow?screen_name=citusdata)\n\n[![Citus Deb Packages](https://img.shields.io/badge/deb-packagecloud.io-844fec.svg)](https://packagecloud.io/app/citusdata/community/search?q=&filter=debs)\n[![Citus Rpm Packages](https://img.shields.io/badge/rpm-packagecloud.io-844fec.svg)](https://packagecloud.io/app/citusdata/community/search?q=&filter=rpms)\n\n## What is Citus?\n\nCitus is a [PostgreSQL extension](https://www.citusdata.com/blog/2017/10/25/what-it-means-to-be-a-postgresql-extension/) that transforms Postgres into a distributed database—so you can achieve high performance at any scale.\n\nWith Citus, you extend your PostgreSQL database with new superpowers:\n\n- **Distributed tables** are sharded across a cluster of PostgreSQL nodes to combine their CPU, memory, storage and I/O capacity.\n- **References tables** are replicated to all nodes for joins and foreign keys from distributed tables and maximum read performance.\n- **Distributed query engine** routes and parallelizes SELECT, DML, and other operations on distributed tables across the cluster.\n- **Columnar storage** compresses data, speeds up scans, and supports fast projections, both on regular and distributed tables.\n- **Query from any node** enables you to utilize the full capacity of your cluster for distributed queries\n\nYou can use these Citus superpowers to make your Postgres database scale-out ready on a single Citus node. Or you can build a large cluster capable of handling **high transaction throughputs**, especially in **multi-tenant apps**, run **fast analytical queries**, and process large amounts of **time series** or **IoT data** for **real-time analytics**. When your data size and volume grow, you can easily add more worker nodes to the cluster and rebalance the shards.\n\nOur [SIGMOD '21](https://2021.sigmod.org/) paper [Citus: Distributed PostgreSQL for Data-Intensive Applications](https://doi.org/10.1145/3448016.3457551) gives a more detailed look into what Citus is, how it works, and why it works that way.\n\n![Citus scales out from a single node](images/citus-scale-out.png)\n\nSince Citus is an extension to Postgres, you can use Citus with the latest Postgres versions. And Citus works seamlessly with the PostgreSQL tools and extensions you are already familiar with.\n\n- [Why Citus?](#why-citus)\n- [Getting Started](#getting-started)\n- [Using Citus](#using-citus)\n- [Schema-based sharding](#schema-based-sharding)\n- [Setting up with High Availability](#setting-up-with-high-availability)\n- [Documentation](#documentation)\n- [Architecture](#architecture)\n- [When to Use Citus](#when-to-use-citus)\n- [Need Help?](#need-help)\n- [Contributing](#contributing)\n- [Stay Connected](#stay-connected)\n\n## Why Citus?\n\nDevelopers choose Citus for two reasons:\n\n1. Your application is outgrowing a single PostgreSQL node\n\n\tIf the size and volume of your data increases over time, you may start seeing any number of performance and scalability problems on a single PostgreSQL node. For example: High CPU utilization and I/O wait times slow down your queries, SQL queries return out of memory errors, autovacuum cannot keep up and increases table bloat, etc.\n\n\tWith Citus you can distribute and optionally compress your tables to always have enough memory, CPU, and I/O capacity to achieve high performance at scale. The distributed query engine can efficiently route transactions across the cluster, while parallelizing analytical queries and batch operations across all cores. Moreover, you can still use the PostgreSQL features and tools you know and love.\n\n2. PostgreSQL can do things other systems can’t\n\n\tThere are many data processing systems that are built to scale out, but few have as many powerful capabilities as PostgreSQL, including: Advanced joins and subqueries, user-defined functions, update/delete/upsert, constraints and foreign keys, powerful extensions (e.g. PostGIS, HyperLogLog), many types of indexes, time-partitioning, and sophisticated JSON support.\n\n\tCitus makes PostgreSQL’s most powerful capabilities work at any scale, allowing you to handle complex data-intensive workloads on a single database system.\n\n## Getting Started\n\nThe quickest way to get started with Citus is to use the [Azure Cosmos DB for PostgreSQL](https://learn.microsoft.com/azure/cosmos-db/postgresql/quickstart-create-portal) managed service in the cloud—or [set up Citus locally](https://docs.citusdata.com/en/stable/installation/single_node.html).\n\n### Citus Managed Service on Azure\n\nYou can get a fully-managed Citus cluster in minutes through the [Azure Cosmos DB for PostgreSQL portal](https://azure.microsoft.com/products/cosmos-db/). Azure will manage your backups, high availability through auto-failover, software updates, monitoring, and more for all of your servers. To get started Citus on Azure, use the [Azure Cosmos DB for PostgreSQL Quickstart](https://learn.microsoft.com/azure/cosmos-db/postgresql/quickstart-create-portal).\n\n### Running Citus using Docker\n\nThe smallest possible Citus cluster is a single PostgreSQL node with the Citus extension, which means you can try out Citus by running a single Docker container.\n\n```bash\n# run PostgreSQL with Citus on port 5500\ndocker run -d --name citus -p 5500:5432 -e POSTGRES_PASSWORD=mypassword citusdata/citus\n\n# connect using psql within the Docker container\ndocker exec -it citus psql -U postgres\n\n# or, connect using local psql\npsql -U postgres -d postgres -h localhost -p 5500\n```\n\n### Install Citus locally\n\nIf you already have a local PostgreSQL installation, the easiest way to install Citus is to use our packaging repo\n\nInstall packages on Ubuntu / Debian:\n\n```bash\ncurl https://install.citusdata.com/community/deb.sh > add-citus-repo.sh\nsudo bash add-citus-repo.sh\nsudo apt-get -y install postgresql-16-citus-12.1\n```\n\nInstall packages on CentOS / Red Hat:\n```bash\ncurl https://install.citusdata.com/community/rpm.sh > add-citus-repo.sh\nsudo bash add-citus-repo.sh\nsudo yum install -y citus121_16\n```\n\nTo add Citus to your local PostgreSQL database, add the following to `postgresql.conf`:\n\n```\nshared_preload_libraries = 'citus'\n```\n\nAfter restarting PostgreSQL, connect using `psql` and run:\n\n```sql\nCREATE EXTENSION citus;\n````\nYou’re now ready to get started and use Citus tables on a single node.\n\n### Install Citus on multiple nodes\n\nIf you want to set up a multi-node cluster, you can also set up additional PostgreSQL nodes with the Citus extensions and add them to form a Citus cluster:\n\n```sql\n-- before adding the first worker node, tell future worker nodes how to reach the coordinator\nSELECT citus_set_coordinator_host('10.0.0.1', 5432);\n\n-- add worker nodes\nSELECT citus_add_node('10.0.0.2', 5432);\nSELECT citus_add_node('10.0.0.3', 5432);\n\n-- rebalance the shards over the new worker nodes\nSELECT rebalance_table_shards();\n```\n\nFor more details, see our [documentation on how to set up a multi-node Citus cluster](https://docs.citusdata.com/en/stable/installation/multi_node.html) on various operating systems.\n\n## Using Citus\n\nOnce you have your Citus cluster, you can start creating distributed tables, reference tables and use columnar storage.\n\n### Creating Distributed Tables\n\nThe `create_distributed_table` UDF will transparently shard your table locally or across the worker nodes:\n\n```sql\nCREATE TABLE events (\n  device_id bigint,\n  event_id bigserial,\n  event_time timestamptz default now(),\n  data jsonb not null,\n  PRIMARY KEY (device_id, event_id)\n);\n\n-- distribute the events table across shards placed locally or on the worker nodes\nSELECT create_distributed_table('events', 'device_id');\n```\n\nAfter this operation, queries for a specific device ID will be efficiently routed to a single worker node, while queries across device IDs will be parallelized across the cluster.\n\n```sql\n-- insert some events\nINSERT INTO events (device_id, data)\nSELECT s % 100, ('{\"measurement\":'||random()||'}')::jsonb FROM generate_series(1,1000000) s;\n\n-- get the last 3 events for device 1, routed to a single node\nSELECT * FROM events WHERE device_id = 1 ORDER BY event_time DESC, event_id DESC LIMIT 3;\n┌───────────┬──────────┬───────────────────────────────┬───────────────────────────────────────┐\n│ device_id │ event_id │          event_time           │                 data                  │\n├───────────┼──────────┼───────────────────────────────┼───────────────────────────────────────┤\n│         1 │  1999901 │ 2021-03-04 16:00:31.189963+00 │ {\"measurement\": 0.88722643925054}     │\n│         1 │  1999801 │ 2021-03-04 16:00:31.189963+00 │ {\"measurement\": 0.6512231304621992}   │\n│         1 │  1999701 │ 2021-03-04 16:00:31.189963+00 │ {\"measurement\": 0.019368766051897524} │\n└───────────┴──────────┴───────────────────────────────┴───────────────────────────────────────┘\n(3 rows)\n\nTime: 4.588 ms\n\n-- explain plan for a query that is parallelized across shards, which shows the plan for\n-- a query one of the shards and how the aggregation across shards is done\nEXPLAIN (VERBOSE ON) SELECT count(*) FROM events;\n┌────────────────────────────────────────────────────────────────────────────────────┐\n│                                     QUERY PLAN                                     │\n├────────────────────────────────────────────────────────────────────────────────────┤\n│ Aggregate                                                                          │\n│   Output: COALESCE((pg_catalog.sum(remote_scan.count))::bigint, '0'::bigint)       │\n│   ->  Custom Scan (Citus Adaptive)                                                 │\n│         ...                                                                        │\n│         ->  Task                                                                   │\n│               Query: SELECT count(*) AS count FROM events_102008 events WHERE true │\n│               Node: host=localhost port=5432 dbname=postgres                       │\n│               ->  Aggregate                                                        │\n│                     ->  Seq Scan on public.events_102008 events                    │\n└────────────────────────────────────────────────────────────────────────────────────┘\n```\n\n### Creating Distributed Tables with Co-location\n\nDistributed tables that have the same distribution column can be co-located to enable high performance distributed joins and foreign keys between distributed tables.\nBy default, distributed tables will be co-located based on the type of the distribution column, but you define co-location explicitly with the `colocate_with` argument in `create_distributed_table`.\n\n```sql\nCREATE TABLE devices (\n  device_id bigint primary key,\n  device_name text,\n  device_type_id int\n);\nCREATE INDEX ON devices (device_type_id);\n\n-- co-locate the devices table with the events table\nSELECT create_distributed_table('devices', 'device_id', colocate_with := 'events');\n\n-- insert device metadata\nINSERT INTO devices (device_id, device_name, device_type_id)\nSELECT s, 'device-'||s, 55 FROM generate_series(0, 99) s;\n\n-- optionally: make sure the application can only insert events for a known device\nALTER TABLE events ADD CONSTRAINT device_id_fk\nFOREIGN KEY (device_id) REFERENCES devices (device_id);\n\n-- get the average measurement across all devices of type 55, parallelized across shards\nSELECT avg((data->>'measurement')::double precision)\nFROM events JOIN devices USING (device_id)\nWHERE device_type_id = 55;\n\n┌────────────────────┐\n│        avg         │\n├────────────────────┤\n│ 0.5000191877513974 │\n└────────────────────┘\n(1 row)\n\nTime: 209.961 ms\n```\n\nCo-location also helps you scale [INSERT..SELECT](https://docs.citusdata.com/en/stable/articles/aggregation.html), [stored procedures](https://www.citusdata.com/blog/2020/11/21/making-postgres-stored-procedures-9x-faster-in-citus/), and [distributed transactions](https://www.citusdata.com/blog/2017/06/02/scaling-complex-sql-transactions/).\n\n### Distributing Tables without interrupting the application\n\n\nSome of you already start with Postgres, and decide to distribute tables later on while your application using the tables. In that case, you want to avoid downtime for both reads and writes. `create_distributed_table` command block writes (e.g., DML commands) on the table until the command is finished. Instead, with `create_distributed_table_concurrently` command, your application can continue to read and write the data even during the command.\n\n\n```sql\nCREATE TABLE device_logs (\n  device_id bigint primary key,\n  log text\n);\n\n-- insert device logs\nINSERT INTO device_logs (device_id, log)\nSELECT s, 'device log:'||s FROM generate_series(0, 99) s;\n\n-- convert device_logs into a distributed table without interrupting the application\nSELECT create_distributed_table_concurrently('device_logs', 'device_id', colocate_with := 'devices');\n\n\n-- get the count of the logs, parallelized across shards\nSELECT count(*) FROM device_logs;\n\n┌───────┐\n│ count │\n├───────┤\n│   100 │\n└───────┘\n(1 row)\n\nTime: 48.734 ms\n```\n\n\n\n### Creating Reference Tables\n\nWhen you need fast joins or foreign keys that do not include the distribution column, you can use `create_reference_table` to replicate a table across all nodes in the cluster.\n\n```sql\nCREATE TABLE device_types (\n  device_type_id int primary key,\n  device_type_name text not null unique\n);\n\n-- replicate the table across all nodes to enable foreign keys and joins on any column\nSELECT create_reference_table('device_types');\n\n-- insert a device type\nINSERT INTO device_types (device_type_id, device_type_name) VALUES (55, 'laptop');\n\n-- optionally: make sure the application can only insert devices with known types\nALTER TABLE devices ADD CONSTRAINT device_type_fk\nFOREIGN KEY (device_type_id) REFERENCES device_types (device_type_id);\n\n-- get the last 3 events for devices whose type name starts with laptop, parallelized across shards\nSELECT device_id, event_time, data->>'measurement' AS value, device_name, device_type_name\nFROM events JOIN devices USING (device_id) JOIN device_types USING (device_type_id)\nWHERE device_type_name LIKE 'laptop%' ORDER BY event_time DESC LIMIT 3;\n\n┌───────────┬───────────────────────────────┬─────────────────────┬─────────────┬──────────────────┐\n│ device_id │          event_time           │        value        │ device_name │ device_type_name │\n├───────────┼───────────────────────────────┼─────────────────────┼─────────────┼──────────────────┤\n│        60 │ 2021-03-04 16:00:31.189963+00 │ 0.28902084163415864 │ device-60   │ laptop           │\n│         8 │ 2021-03-04 16:00:31.189963+00 │ 0.8723803076285073  │ device-8    │ laptop           │\n│        20 │ 2021-03-04 16:00:31.189963+00 │ 0.8177634801548557  │ device-20   │ laptop           │\n└───────────┴───────────────────────────────┴─────────────────────┴─────────────┴──────────────────┘\n(3 rows)\n\nTime: 146.063 ms\n```\n\nReference tables enable you to scale out complex data models and take full advantage of relational database features.\n\n### Creating Tables with Columnar Storage\n\nTo use columnar storage in your PostgreSQL database, all you need to do is add `USING columnar` to your `CREATE TABLE` statements and your data will be automatically compressed using the columnar access method.\n\n```sql\nCREATE TABLE events_columnar (\n  device_id bigint,\n  event_id bigserial,\n  event_time timestamptz default now(),\n  data jsonb not null\n)\nUSING columnar;\n\n-- insert some data\nINSERT INTO events_columnar (device_id, data)\nSELECT d, '{\"hello\":\"columnar\"}' FROM generate_series(1,10000000) d;\n\n-- create a row-based table to compare\nCREATE TABLE events_row AS SELECT * FROM events_columnar;\n\n-- see the huge size difference!\n\\d+\n                                          List of relations\n┌────────┬──────────────────────────────┬──────────┬───────┬─────────────┬────────────┬─────────────┐\n│ Schema │             Name             │   Type   │ Owner │ Persistence │    Size    │ Description │\n├────────┼──────────────────────────────┼──────────┼───────┼─────────────┼────────────┼─────────────┤\n│ public │ events_columnar              │ table    │ marco │ permanent   │ 25 MB      │             │\n│ public │ events_row                   │ table    │ marco │ permanent   │ 651 MB     │             │\n└────────┴──────────────────────────────┴──────────┴───────┴─────────────┴────────────┴─────────────┘\n(2 rows)\n```\n\nYou can use columnar storage by itself, or in a distributed table to combine the benefits of compression and the distributed query engine.\n\nWhen using columnar storage, you should only load data in batch using `COPY` or `INSERT..SELECT` to achieve good  compression. Update, delete, and foreign keys are currently unsupported on columnar tables. However, you can use partitioned tables in which newer partitions use row-based storage, and older partitions are compressed using columnar storage.\n\nTo learn more about columnar storage, check out the [columnar storage README](https://github.com/citusdata/citus/blob/master/src/backend/columnar/README.md).\n\n## Schema-based sharding\n\nAvailable since Citus 12.0, [schema-based sharding](https://docs.citusdata.com/en/stable/get_started/concepts.html#schema-based-sharding) is the shared database, separate schema model, the schema becomes the logical shard within the database. Multi-tenant apps can a use a schema per tenant to easily shard along the tenant dimension. Query changes are not required and the application usually only needs a small modification to set the proper search_path when switching tenants. Schema-based sharding is an ideal solution for microservices, and for ISVs deploying applications that cannot undergo the changes required to onboard row-based sharding.\n\n### Creating distributed schemas\n\nYou can turn an existing schema into a distributed schema by calling `citus_schema_distribute`:\n\n```sql\nSELECT citus_schema_distribute('user_service');\n```\n\nAlternatively, you can set `citus.enable_schema_based_sharding` to have all newly created schemas be automatically converted into distributed schemas:\n\n```sql\nSET citus.enable_schema_based_sharding TO ON;\n\nCREATE SCHEMA AUTHORIZATION user_service;\nCREATE SCHEMA AUTHORIZATION time_service;\nCREATE SCHEMA AUTHORIZATION ping_service;\n```\n\n### Running queries\n\nQueries will be properly routed to schemas based on `search_path` or by explicitly using the schema name in the query.\n\nFor [microservices](https://docs.citusdata.com/en/stable/get_started/tutorial_microservices.html) you would create a USER per service matching the schema name, hence the default `search_path` would contain the schema name. When connected the user queries would be automatically routed and no changes to the microservice would be required.\n\n```sql\nCREATE USER user_service;\nCREATE SCHEMA AUTHORIZATION user_service;\n```\n\nFor typical multi-tenant applications, you would set the search path to the tenant schema name in your application:\n\n```sql\nSET search_path = tenant_name, public;\n```\n\n## Setting up with High Availability\n\nOne of the most popular high availability solutions for PostgreSQL, [Patroni 3.0](https://github.com/zalando/patroni), has [first class support for Citus 10.0 and above](https://patroni.readthedocs.io/en/latest/citus.html#citus), additionally since Citus 11.2 ships with improvements for smoother node switchover in Patroni.\n\nAn example of patronictl list output for the Citus cluster:\n\n```bash\npostgres@coord1:~$ patronictl list demo\n```\n\n```text\n+ Citus cluster: demo ----------+--------------+---------+----+-----------+\n| Group | Member  | Host        | Role         | State   | TL | Lag in MB |\n+-------+---------+-------------+--------------+---------+----+-----------+\n|     0 | coord1  | 172.27.0.10 | Replica      | running |  1 |         0 |\n|     0 | coord2  | 172.27.0.6  | Sync Standby | running |  1 |         0 |\n|     0 | coord3  | 172.27.0.4  | Leader       | running |  1 |           |\n|     1 | work1-1 | 172.27.0.8  | Sync Standby | running |  1 |         0 |\n|     1 | work1-2 | 172.27.0.2  | Leader       | running |  1 |           |\n|     2 | work2-1 | 172.27.0.5  | Sync Standby | running |  1 |         0 |\n|     2 | work2-2 | 172.27.0.7  | Leader       | running |  1 |           |\n+-------+---------+-------------+--------------+---------+----+-----------+\n```\n\n## Documentation\n\nIf you’re ready to get started with Citus or want to know more, we recommend reading the [Citus open source documentation](https://docs.citusdata.com/en/stable/). Or, if you are using Citus on Azure, then the [Azure Cosmos DB for PostgreSQL](https://learn.microsoft.com/azure/cosmos-db/postgresql/introduction) is the place to start.\n\nOur Citus docs contain comprehensive use case guides on how to build a [multi-tenant SaaS application](https://docs.citusdata.com/en/stable/use_cases/multi_tenant.html), [real-time analytics dashboard]( https://docs.citusdata.com/en/stable/use_cases/realtime_analytics.html), or work with [time series data](https://docs.citusdata.com/en/stable/use_cases/timeseries.html).\n\n## Architecture\n\nA Citus database cluster grows from a single PostgreSQL node into a cluster by adding worker nodes. In a Citus cluster, the original node to which the application connects is referred to as the coordinator node. The Citus coordinator contains both the metadata of distributed tables and reference tables, as well as regular (local) tables, sequences, and other database objects (e.g. foreign tables).\n\nData in distributed tables is stored in “shards”, which are actually just regular PostgreSQL tables on the worker nodes. When querying a distributed table on the coordinator node, Citus will send regular SQL queries to the worker nodes. That way, all the usual PostgreSQL optimizations and extensions can automatically be used with Citus.\n\n![Citus architecture](images/citus-architecture.png)\n\nWhen you send a query in which all (co-located) distributed tables have the same filter on the distribution column, Citus will automatically detect that and send the whole query to the worker node that stores the data. That way, arbitrarily complex queries are supported with minimal routing overhead, which is especially useful for scaling transactional workloads. If queries do not have a specific filter, each shard is queried in parallel, which is especially useful in analytical workloads. The Citus distributed executor is adaptive and is designed to handle both query types at the same time on the same system under high concurrency, which enables large-scale mixed workloads.\n\nThe schema and metadata of distributed tables and reference tables are automatically synchronized to all the nodes in the cluster. That way, you can connect to any node to run distributed queries. Schema changes and cluster administration still need to go through the coordinator.\n\nDetailed descriptions of the implementation for Citus developers are provided in the [Citus Technical Documentation](src/backend/distributed/README.md).\n\n## When to use Citus\n\nCitus is uniquely capable of scaling both analytical and transactional workloads with up to petabytes of data. Use cases in which Citus is commonly used:\n\n- **[Customer-facing analytics dashboards](http://docs.citusdata.com/en/stable/use_cases/realtime_analytics.html)**:\n  Citus enables you to build analytics dashboards that simultaneously ingest and process large amounts of data in the database and give sub-second response times even with a large number of concurrent users.\n\n  The advanced parallel, distributed query engine in Citus combined with PostgreSQL features such as [array types](https://www.postgresql.org/docs/current/arrays.html), [JSONB](https://www.postgresql.org/docs/current/datatype-json.html), [lateral joins](https://heap.io/blog/engineering/postgresqls-powerful-new-join-type-lateral), and extensions like [HyperLogLog](https://github.com/citusdata/postgresql-hll) and [TopN](https://github.com/citusdata/postgresql-topn) allow you to build responsive analytics dashboards no matter how many customers or how much data you have.\n\n  Example real-time analytics users: [Algolia](https://www.citusdata.com/customers/algolia)\n\n- **[Time series data](http://docs.citusdata.com/en/stable/use_cases/timeseries.html)**:\n  Citus enables you to process and analyze very large amounts of time series data. The biggest Citus clusters store well over a petabyte of time series data and ingest terabytes per day.\n\n  Citus integrates seamlessly with [Postgres table partitioning](https://www.postgresql.org/docs/current/ddl-partitioning.html) and has [built-in functions for partitioning by time](https://www.citusdata.com/blog/2021/10/22/how-to-scale-postgres-for-time-series-data-with-citus/), which can speed up queries and writes on time series tables. You can take advantage of Citus’s parallel, distributed query engine for fast analytical queries, and use the built-in *columnar storage* to compress old partitions.\n\n  Example users: [MixRank](https://www.citusdata.com/customers/mixrank)\n\n- **[Software-as-a-service (SaaS) applications](http://docs.citusdata.com/en/stable/use_cases/multi_tenant.html)**:\n  SaaS and other multi-tenant applications need to be able to scale their database as the number of tenants/customers grows. Citus enables you to transparently shard a complex data model by the tenant dimension, so your database can grow along with your business.\n\n  By distributing tables along a tenant ID column and co-locating data for the same tenant, Citus can horizontally scale complex (tenant-scoped) queries, transactions, and foreign key graphs. Reference tables and distributed DDL commands make database management a breeze compared to manual sharding. On top of that, you have a built-in distributed query engine for doing cross-tenant analytics inside the database.\n\n  Example multi-tenant SaaS users: [Salesloft](https://fivetran.com/case-studies/replicating-sharded-databases-a-case-study-of-salesloft-citus-data-and-fivetran), [ConvertFlow](https://www.citusdata.com/customers/convertflow)\n\n- **[Microservices](https://docs.citusdata.com/en/stable/get_started/tutorial_microservices.html)**: Citus supports schema based sharding, which allows distributing regular database schemas across many machines. This sharding methodology fits nicely with typical Microservices architecture, where storage is fully owned by the service hence can’t share the same schema definition with other tenants. Citus allows distributing horizontally scalable state across services, solving one of the [main problems](https://stackoverflow.blog/2020/11/23/the-macro-problem-with-microservices/) of microservices.\n\n- **Geospatial**:\n  Because of the powerful [PostGIS](https://postgis.net/) extension to Postgres that adds support for geographic objects into Postgres, many people run spatial/GIS applications on top of Postgres. And since spatial location information has become part of our daily life, well, there are more geospatial applications than ever. When your Postgres database needs to scale out to handle an increased workload, Citus is a good fit.\n\n  Example geospatial users: [Helsinki Regional Transportation Authority (HSL)](https://customers.microsoft.com/story/845146-transit-authority-improves-traffic-monitoring-with-azure-database-for-postgresql-hyperscale), [MobilityDB](https://www.citusdata.com/blog/2020/11/09/analyzing-gps-trajectories-at-scale-with-postgres-mobilitydb/).\n\n## Need Help?\n\n- **Slack**: Ask questions in our Citus community [Slack channel](https://slack.citusdata.com).\n- **GitHub issues**: Please submit issues via [GitHub issues](https://github.com/citusdata/citus/issues).\n- **Documentation**: Our [Citus docs](https://docs.citusdata.com ) have a wealth of resources, including sections on [query performance tuning](https://docs.citusdata.com/en/stable/performance/performance_tuning.html), [useful diagnostic queries](https://docs.citusdata.com/en/stable/admin_guide/diagnostic_queries.html), and [common error messages](https://docs.citusdata.com/en/stable/reference/common_errors.html).\n- **Docs issues**: You can also submit documentation issues via [GitHub issues for our Citus docs](https://github.com/citusdata/citus_docs/issues).\n- **Updates & Release Notes**: Learn about what's new in each Citus version on the [Citus Updates page](https://www.citusdata.com/updates/).\n\n## Contributing\n\nCitus is built on and of open source, and we welcome your contributions. The [CONTRIBUTING.md](CONTRIBUTING.md) file explains how to get started developing the Citus extension itself and our code quality guidelines.\n\n## Code of Conduct\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\nFor more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or\ncontact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n\n## Stay Connected\n\n- **Twitter**: Follow us [@citusdata](https://twitter.com/citusdata) to track the latest posts & updates on what’s happening.\n- **Citus Blog**: Read our popular [Citus Open Source Blog](https://www.citusdata.com/blog/) for posts about PostgreSQL and Citus.\n- **Citus Newsletter**: Subscribe to our monthly technical [Citus Newsletter](https://www.citusdata.com/join-newsletter) to get a curated collection of our favorite posts, videos, docs, talks, & other Postgres goodies.\n- **Slack**: Our [Citus Public slack](https://slack.citusdata.com/) is a good way to stay connected, not just with us but with other Citus users.\n- **Sister Blog**: Read the PostgreSQL posts on the [Azure Cosmos DB for PostgreSQL blog](https://devblogs.microsoft.com/cosmosdb/category/postgresql/) about our managed service on Azure.\n- **Videos**: Check out this [YouTube playlist](https://www.youtube.com/playlist?list=PLixnExCn6lRq261O0iwo4ClYxHpM9qfVy) of some of our favorite Citus videos and demos. If you want to deep dive into how Citus extends PostgreSQL, you might want to check out Marco Slot’s talk at Carnegie Mellon titled [Citus: Distributed PostgreSQL as an Extension](https://youtu.be/X-aAgXJZRqM) that was part of Andy Pavlo’s Vaccination Database Talks series at CMUDB.\n- **Our other Postgres projects**: Our team also works on other awesome PostgreSQL open source extensions & projects, including: [pg_cron](https://github.com/citusdata/pg_cron), [HyperLogLog](https://github.com/citusdata/postgresql-hll), [TopN](https://github.com/citusdata/postgresql-topn), [pg_auto_failover](https://github.com/citusdata/pg_auto_failover), [activerecord-multi-tenant](https://github.com/citusdata/activerecord-multi-tenant), and [django-multitenant](https://github.com/citusdata/django-multitenant).\n\n___\n\nCopyright © Citus Data, Inc.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 2.69140625,
          "content": "<!-- BEGIN MICROSOFT SECURITY.MD V0.0.8 BLOCK -->\n\n## Security\n\nMicrosoft takes the security of our software products and services seriously, which includes all source code repositories managed through our GitHub organizations, which include [Microsoft](https://github.com/microsoft), [Azure](https://github.com/Azure), [DotNet](https://github.com/dotnet), [AspNet](https://github.com/aspnet), [Xamarin](https://github.com/xamarin), and [our GitHub organizations](https://opensource.microsoft.com/).\n\nIf you believe you have found a security vulnerability in any Microsoft-owned repository that meets [Microsoft's definition of a security vulnerability](https://aka.ms/opensource/security/definition), please report it to us as described below.\n\n## Reporting Security Issues\n\n**Please do not report security vulnerabilities through public GitHub issues.**\n\nInstead, please report them to the Microsoft Security Response Center (MSRC) at [https://msrc.microsoft.com/create-report](https://aka.ms/opensource/security/create-report).\n\nIf you prefer to submit without logging in, send email to [secure@microsoft.com](mailto:secure@microsoft.com).  If possible, encrypt your message with our PGP key; please download it from the [Microsoft Security Response Center PGP Key page](https://aka.ms/opensource/security/pgpkey).\n\nYou should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Additional information can be found at [microsoft.com/msrc](https://aka.ms/opensource/security/msrc).\n\nPlease include the requested information listed below (as much as you can provide) to help us better understand the nature and scope of the possible issue:\n\n  * Type of issue (e.g. buffer overflow, SQL injection, cross-site scripting, etc.)\n  * Full paths of source file(s) related to the manifestation of the issue\n  * The location of the affected source code (tag/branch/commit or direct URL)\n  * Any special configuration required to reproduce the issue\n  * Step-by-step instructions to reproduce the issue\n  * Proof-of-concept or exploit code (if possible)\n  * Impact of the issue, including how an attacker might exploit the issue\n\nThis information will help us triage your report more quickly.\n\nIf you are reporting for a bug bounty, more complete reports can contribute to a higher bounty award. Please visit our [Microsoft Bug Bounty Program](https://aka.ms/opensource/security/bounty) page for more details about our active programs.\n\n## Preferred Languages\n\nWe prefer all communications to be in English.\n\n## Policy\n\nMicrosoft follows the principle of [Coordinated Vulnerability Disclosure](https://aka.ms/opensource/security/cvd).\n\n<!-- END MICROSOFT SECURITY.MD BLOCK -->\n"
        },
        {
          "name": "aclocal.m4",
          "type": "blob",
          "size": 0.0458984375,
          "content": "dnl aclocal.m4\nm4_include([config/general.m4])\n"
        },
        {
          "name": "autogen.sh",
          "type": "blob",
          "size": 0.2080078125,
          "content": "#!/bin/bash\n#\n# autogen.sh converts configure.ac to configure and creates\n# citus_config.h.in. The resuting resulting files are checked into\n# the SCM, to avoid everyone needing autoconf installed.\n\nautoreconf -f\n"
        },
        {
          "name": "cgmanifest.json",
          "type": "blob",
          "size": 2.1884765625,
          "content": "{\n    \"Registrations\": [\n        {\n            \"Component\": {\n                \"Type\": \"git\",\n                \"git\": {\n                    \"RepositoryUrl\": \"https://github.com/intel/safestringlib\",\n                    \"CommitHash\": \"245c4b8cff1d2e7338b7f3a82828fc8e72b29549\"\n                }\n            },\n            \"DevelopmentDependency\": false\n        },\n        {\n            \"Component\": {\n                \"Type\": \"git\",\n                \"git\": {\n                    \"RepositoryUrl\": \"https://github.com/postgres/postgres\",\n                    \"CommitHash\": \"29be9983a64c011eac0b9ee29895cce71e15ea77\"\n                }\n            },\n            \"license\": \"PostgreSQL\",\n            \"licenseDetail\": [\n\t\t\t\t\"Portions Copyright (c) 1996-2010, The PostgreSQL Global Development Group\",\n\t\t\t\t\"\",\n\t\t\t\t\"Portions Copyright (c) 1994, The Regents of the University of California\",\n                \"\",\n                \"Permission to use, copy, modify, and distribute this software and its documentation for \",\n                \"any purpose, without fee, and without a written agreement is hereby granted, provided \",\n                \"that the above copyright notice and this paragraph and the following two paragraphs appear \",\n                \"in all copies.\",\n                \"\",\n                \"IN NO EVENT SHALL THE UNIVERSITY OF CALIFORNIA BE LIABLE TO ANY PARTY FOR DIRECT, INDIRECT, SPECIAL, \",\n                \"INCIDENTAL, OR CONSEQUENTIAL DAMAGES, INCLUDING LOST PROFITS, ARISING OUT OF THE USE OF THIS \",\n                \"SOFTWARE AND ITS DOCUMENTATION, EVEN IF THE UNIVERSITY OF CALIFORNIA HAS BEEN ADVISED OF THE \",\n                \"POSSIBILITY OF SUCH DAMAGE.\",\n                \"\",\n                \"THE UNIVERSITY OF CALIFORNIA SPECIFICALLY DISCLAIMS ANY WARRANTIES, INCLUDING, BUT NOT LIMITED TO, \",\n                \"THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE SOFTWARE PROVIDED \",\n                \"HEREUNDER IS ON AN \\\"AS IS\\\" BASIS, AND THE UNIVERSITY OF CALIFORNIA HAS NO OBLIGATIONS TO PROVIDE \",\n                \"MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS, OR MODIFICATIONS.\"\n            ],\n            \"version\": \"0.0.1\",\n            \"DevelopmentDependency\": false\n        }\n\n    ]\n}\n"
        },
        {
          "name": "ci",
          "type": "tree",
          "content": null
        },
        {
          "name": "citus-tools",
          "type": "commit",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "configure",
          "type": "blob",
          "size": 175.021484375,
          "content": "#! /bin/sh\n# Guess values for system-dependent variables and create Makefiles.\n# Generated by GNU Autoconf 2.69 for Citus 12.2devel.\n#\n#\n# Copyright (C) 1992-1996, 1998-2012 Free Software Foundation, Inc.\n#\n#\n# This configure script is free software; the Free Software Foundation\n# gives unlimited permission to copy, distribute and modify it.\n#\n# Copyright (c) Citus Data, Inc.\n## -------------------- ##\n## M4sh Initialization. ##\n## -------------------- ##\n\n# Be more Bourne compatible\nDUALCASE=1; export DUALCASE # for MKS sh\nif test -n \"${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then :\n  emulate sh\n  NULLCMD=:\n  # Pre-4.2 versions of Zsh do word splitting on ${1+\"$@\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '${1+\"$@\"}'='\"$@\"'\n  setopt NO_GLOB_SUBST\nelse\n  case `(set -o) 2>/dev/null` in #(\n  *posix*) :\n    set -o posix ;; #(\n  *) :\n     ;;\nesac\nfi\n\n\nas_nl='\n'\nexport as_nl\n# Printing a long string crashes Solaris 7 /usr/bin/printf.\nas_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\nas_echo=$as_echo$as_echo$as_echo$as_echo$as_echo\nas_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo\n# Prefer a ksh shell builtin over an external printf program on Solaris,\n# but without wasting forks for bash or zsh.\nif test -z \"$BASH_VERSION$ZSH_VERSION\" \\\n    && (test \"X`print -r -- $as_echo`\" = \"X$as_echo\") 2>/dev/null; then\n  as_echo='print -r --'\n  as_echo_n='print -rn --'\nelif (test \"X`printf %s $as_echo`\" = \"X$as_echo\") 2>/dev/null; then\n  as_echo='printf %s\\n'\n  as_echo_n='printf %s'\nelse\n  if test \"X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`\" = \"X-n $as_echo\"; then\n    as_echo_body='eval /usr/ucb/echo -n \"$1$as_nl\"'\n    as_echo_n='/usr/ucb/echo -n'\n  else\n    as_echo_body='eval expr \"X$1\" : \"X\\\\(.*\\\\)\"'\n    as_echo_n_body='eval\n      arg=$1;\n      case $arg in #(\n      *\"$as_nl\"*)\n\texpr \"X$arg\" : \"X\\\\(.*\\\\)$as_nl\";\n\targ=`expr \"X$arg\" : \".*$as_nl\\\\(.*\\\\)\"`;;\n      esac;\n      expr \"X$arg\" : \"X\\\\(.*\\\\)\" | tr -d \"$as_nl\"\n    '\n    export as_echo_n_body\n    as_echo_n='sh -c $as_echo_n_body as_echo'\n  fi\n  export as_echo_body\n  as_echo='sh -c $as_echo_body as_echo'\nfi\n\n# The user is always right.\nif test \"${PATH_SEPARATOR+set}\" != set; then\n  PATH_SEPARATOR=:\n  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {\n    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||\n      PATH_SEPARATOR=';'\n  }\nfi\n\n\n# IFS\n# We need space, tab and new line, in precisely that order.  Quoting is\n# there to prevent editors from complaining about space-tab.\n# (If _AS_PATH_WALK were called with IFS unset, it would disable word\n# splitting by setting IFS to empty value.)\nIFS=\" \"\"\t$as_nl\"\n\n# Find who we are.  Look in the path if we contain no directory separator.\nas_myself=\ncase $0 in #((\n  *[\\\\/]* ) as_myself=$0 ;;\n  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    test -r \"$as_dir/$0\" && as_myself=$as_dir/$0 && break\n  done\nIFS=$as_save_IFS\n\n     ;;\nesac\n# We did not find ourselves, most probably we were run as `sh COMMAND'\n# in which case we are not to be found in the path.\nif test \"x$as_myself\" = x; then\n  as_myself=$0\nfi\nif test ! -f \"$as_myself\"; then\n  $as_echo \"$as_myself: error: cannot find myself; rerun with an absolute file name\" >&2\n  exit 1\nfi\n\n# Unset variables that we do not need and which cause bugs (e.g. in\n# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the \"|| exit 1\"\n# suppresses any \"Segmentation fault\" message there.  '((' could\n# trigger a bug in pdksh 5.2.14.\nfor as_var in BASH_ENV ENV MAIL MAILPATH\ndo eval test x\\${$as_var+set} = xset \\\n  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :\ndone\nPS1='$ '\nPS2='> '\nPS4='+ '\n\n# NLS nuisances.\nLC_ALL=C\nexport LC_ALL\nLANGUAGE=C\nexport LANGUAGE\n\n# CDPATH.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\n# Use a proper internal environment variable to ensure we don't fall\n  # into an infinite loop, continuously re-executing ourselves.\n  if test x\"${_as_can_reexec}\" != xno && test \"x$CONFIG_SHELL\" != x; then\n    _as_can_reexec=no; export _as_can_reexec;\n    # We cannot yet assume a decent shell, so we have to provide a\n# neutralization value for shells without unset; and this also\n# works around shells that cannot unset nonexistent variables.\n# Preserve -v and -x to the replacement shell.\nBASH_ENV=/dev/null\nENV=/dev/null\n(unset BASH_ENV) >/dev/null 2>&1 && unset BASH_ENV ENV\ncase $- in # ((((\n  *v*x* | *x*v* ) as_opts=-vx ;;\n  *v* ) as_opts=-v ;;\n  *x* ) as_opts=-x ;;\n  * ) as_opts= ;;\nesac\nexec $CONFIG_SHELL $as_opts \"$as_myself\" ${1+\"$@\"}\n# Admittedly, this is quite paranoid, since all the known shells bail\n# out after a failed `exec'.\n$as_echo \"$0: could not re-execute with $CONFIG_SHELL\" >&2\nas_fn_exit 255\n  fi\n  # We don't want this to propagate to other subprocesses.\n          { _as_can_reexec=; unset _as_can_reexec;}\nif test \"x$CONFIG_SHELL\" = x; then\n  as_bourne_compatible=\"if test -n \\\"\\${ZSH_VERSION+set}\\\" && (emulate sh) >/dev/null 2>&1; then :\n  emulate sh\n  NULLCMD=:\n  # Pre-4.2 versions of Zsh do word splitting on \\${1+\\\"\\$@\\\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '\\${1+\\\"\\$@\\\"}'='\\\"\\$@\\\"'\n  setopt NO_GLOB_SUBST\nelse\n  case \\`(set -o) 2>/dev/null\\` in #(\n  *posix*) :\n    set -o posix ;; #(\n  *) :\n     ;;\nesac\nfi\n\"\n  as_required=\"as_fn_return () { (exit \\$1); }\nas_fn_success () { as_fn_return 0; }\nas_fn_failure () { as_fn_return 1; }\nas_fn_ret_success () { return 0; }\nas_fn_ret_failure () { return 1; }\n\nexitcode=0\nas_fn_success || { exitcode=1; echo as_fn_success failed.; }\nas_fn_failure && { exitcode=1; echo as_fn_failure succeeded.; }\nas_fn_ret_success || { exitcode=1; echo as_fn_ret_success failed.; }\nas_fn_ret_failure && { exitcode=1; echo as_fn_ret_failure succeeded.; }\nif ( set x; as_fn_ret_success y && test x = \\\"\\$1\\\" ); then :\n\nelse\n  exitcode=1; echo positional parameters were not saved.\nfi\ntest x\\$exitcode = x0 || exit 1\ntest -x / || exit 1\"\n  as_suggested=\"  as_lineno_1=\";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested\" as_lineno_1a=\\$LINENO\n  as_lineno_2=\";as_suggested=$as_suggested$LINENO;as_suggested=$as_suggested\" as_lineno_2a=\\$LINENO\n  eval 'test \\\"x\\$as_lineno_1'\\$as_run'\\\" != \\\"x\\$as_lineno_2'\\$as_run'\\\" &&\n  test \\\"x\\`expr \\$as_lineno_1'\\$as_run' + 1\\`\\\" = \\\"x\\$as_lineno_2'\\$as_run'\\\"' || exit 1\ntest \\$(( 1 + 1 )) = 2 || exit 1\"\n  if (eval \"$as_required\") 2>/dev/null; then :\n  as_have_required=yes\nelse\n  as_have_required=no\nfi\n  if test x$as_have_required = xyes && (eval \"$as_suggested\") 2>/dev/null; then :\n\nelse\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nas_found=false\nfor as_dir in /bin$PATH_SEPARATOR/usr/bin$PATH_SEPARATOR$PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n  as_found=:\n  case $as_dir in #(\n\t /*)\n\t   for as_base in sh bash ksh sh5; do\n\t     # Try only shells that exist, to save several forks.\n\t     as_shell=$as_dir/$as_base\n\t     if { test -f \"$as_shell\" || test -f \"$as_shell.exe\"; } &&\n\t\t    { $as_echo \"$as_bourne_compatible\"\"$as_required\" | as_run=a \"$as_shell\"; } 2>/dev/null; then :\n  CONFIG_SHELL=$as_shell as_have_required=yes\n\t\t   if { $as_echo \"$as_bourne_compatible\"\"$as_suggested\" | as_run=a \"$as_shell\"; } 2>/dev/null; then :\n  break 2\nfi\nfi\n\t   done;;\n       esac\n  as_found=false\ndone\n$as_found || { if { test -f \"$SHELL\" || test -f \"$SHELL.exe\"; } &&\n\t      { $as_echo \"$as_bourne_compatible\"\"$as_required\" | as_run=a \"$SHELL\"; } 2>/dev/null; then :\n  CONFIG_SHELL=$SHELL as_have_required=yes\nfi; }\nIFS=$as_save_IFS\n\n\n      if test \"x$CONFIG_SHELL\" != x; then :\n  export CONFIG_SHELL\n             # We cannot yet assume a decent shell, so we have to provide a\n# neutralization value for shells without unset; and this also\n# works around shells that cannot unset nonexistent variables.\n# Preserve -v and -x to the replacement shell.\nBASH_ENV=/dev/null\nENV=/dev/null\n(unset BASH_ENV) >/dev/null 2>&1 && unset BASH_ENV ENV\ncase $- in # ((((\n  *v*x* | *x*v* ) as_opts=-vx ;;\n  *v* ) as_opts=-v ;;\n  *x* ) as_opts=-x ;;\n  * ) as_opts= ;;\nesac\nexec $CONFIG_SHELL $as_opts \"$as_myself\" ${1+\"$@\"}\n# Admittedly, this is quite paranoid, since all the known shells bail\n# out after a failed `exec'.\n$as_echo \"$0: could not re-execute with $CONFIG_SHELL\" >&2\nexit 255\nfi\n\n    if test x$as_have_required = xno; then :\n  $as_echo \"$0: This script requires a shell more modern than all\"\n  $as_echo \"$0: the shells that I found on your system.\"\n  if test x${ZSH_VERSION+set} = xset ; then\n    $as_echo \"$0: In particular, zsh $ZSH_VERSION has bugs and should\"\n    $as_echo \"$0: be upgraded to zsh 4.3.4 or later.\"\n  else\n    $as_echo \"$0: Please tell bug-autoconf@gnu.org about your system,\n$0: including any error possibly output before this\n$0: message. Then install a modern shell, or manually run\n$0: the script under such a shell if you do have one.\"\n  fi\n  exit 1\nfi\nfi\nfi\nSHELL=${CONFIG_SHELL-/bin/sh}\nexport SHELL\n# Unset more variables known to interfere with behavior of common tools.\nCLICOLOR_FORCE= GREP_OPTIONS=\nunset CLICOLOR_FORCE GREP_OPTIONS\n\n## --------------------- ##\n## M4sh Shell Functions. ##\n## --------------------- ##\n# as_fn_unset VAR\n# ---------------\n# Portably unset VAR.\nas_fn_unset ()\n{\n  { eval $1=; unset $1;}\n}\nas_unset=as_fn_unset\n\n# as_fn_set_status STATUS\n# -----------------------\n# Set $? to STATUS, without forking.\nas_fn_set_status ()\n{\n  return $1\n} # as_fn_set_status\n\n# as_fn_exit STATUS\n# -----------------\n# Exit the shell with STATUS, even in a \"trap 0\" or \"set -e\" context.\nas_fn_exit ()\n{\n  set +e\n  as_fn_set_status $1\n  exit $1\n} # as_fn_exit\n\n# as_fn_mkdir_p\n# -------------\n# Create \"$as_dir\" as a directory, including parents if necessary.\nas_fn_mkdir_p ()\n{\n\n  case $as_dir in #(\n  -*) as_dir=./$as_dir;;\n  esac\n  test -d \"$as_dir\" || eval $as_mkdir_p || {\n    as_dirs=\n    while :; do\n      case $as_dir in #(\n      *\\'*) as_qdir=`$as_echo \"$as_dir\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"`;; #'(\n      *) as_qdir=$as_dir;;\n      esac\n      as_dirs=\"'$as_qdir' $as_dirs\"\n      as_dir=`$as_dirname -- \"$as_dir\" ||\n$as_expr X\"$as_dir\" : 'X\\(.*[^/]\\)//*[^/][^/]*/*$' \\| \\\n\t X\"$as_dir\" : 'X\\(//\\)[^/]' \\| \\\n\t X\"$as_dir\" : 'X\\(//\\)$' \\| \\\n\t X\"$as_dir\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n$as_echo X\"$as_dir\" |\n    sed '/^X\\(.*[^/]\\)\\/\\/*[^/][^/]*\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)[^/].*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n      test -d \"$as_dir\" && break\n    done\n    test -z \"$as_dirs\" || eval \"mkdir $as_dirs\"\n  } || test -d \"$as_dir\" || as_fn_error $? \"cannot create directory $as_dir\"\n\n\n} # as_fn_mkdir_p\n\n# as_fn_executable_p FILE\n# -----------------------\n# Test if FILE is an executable regular file.\nas_fn_executable_p ()\n{\n  test -f \"$1\" && test -x \"$1\"\n} # as_fn_executable_p\n# as_fn_append VAR VALUE\n# ----------------------\n# Append the text in VALUE to the end of the definition contained in VAR. Take\n# advantage of any shell optimizations that allow amortized linear growth over\n# repeated appends, instead of the typical quadratic growth present in naive\n# implementations.\nif (eval \"as_var=1; as_var+=2; test x\\$as_var = x12\") 2>/dev/null; then :\n  eval 'as_fn_append ()\n  {\n    eval $1+=\\$2\n  }'\nelse\n  as_fn_append ()\n  {\n    eval $1=\\$$1\\$2\n  }\nfi # as_fn_append\n\n# as_fn_arith ARG...\n# ------------------\n# Perform arithmetic evaluation on the ARGs, and store the result in the\n# global $as_val. Take advantage of shells that can avoid forks. The arguments\n# must be portable across $(()) and expr.\nif (eval \"test \\$(( 1 + 1 )) = 2\") 2>/dev/null; then :\n  eval 'as_fn_arith ()\n  {\n    as_val=$(( $* ))\n  }'\nelse\n  as_fn_arith ()\n  {\n    as_val=`expr \"$@\" || test $? -eq 1`\n  }\nfi # as_fn_arith\n\n\n# as_fn_error STATUS ERROR [LINENO LOG_FD]\n# ----------------------------------------\n# Output \"`basename $0`: error: ERROR\" to stderr. If LINENO and LOG_FD are\n# provided, also output the error to LOG_FD, referencing LINENO. Then exit the\n# script with STATUS, using 1 if that was 0.\nas_fn_error ()\n{\n  as_status=$1; test $as_status -eq 0 && as_status=1\n  if test \"$4\"; then\n    as_lineno=${as_lineno-\"$3\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n    $as_echo \"$as_me:${as_lineno-$LINENO}: error: $2\" >&$4\n  fi\n  $as_echo \"$as_me: error: $2\" >&2\n  as_fn_exit $as_status\n} # as_fn_error\n\nif expr a : '\\(a\\)' >/dev/null 2>&1 &&\n   test \"X`expr 00001 : '.*\\(...\\)'`\" = X001; then\n  as_expr=expr\nelse\n  as_expr=false\nfi\n\nif (basename -- /) >/dev/null 2>&1 && test \"X`basename -- / 2>&1`\" = \"X/\"; then\n  as_basename=basename\nelse\n  as_basename=false\nfi\n\nif (as_dir=`dirname -- /` && test \"X$as_dir\" = X/) >/dev/null 2>&1; then\n  as_dirname=dirname\nelse\n  as_dirname=false\nfi\n\nas_me=`$as_basename -- \"$0\" ||\n$as_expr X/\"$0\" : '.*/\\([^/][^/]*\\)/*$' \\| \\\n\t X\"$0\" : 'X\\(//\\)$' \\| \\\n\t X\"$0\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n$as_echo X/\"$0\" |\n    sed '/^.*\\/\\([^/][^/]*\\)\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\/\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\/\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n\n# Avoid depending upon Character Ranges.\nas_cr_letters='abcdefghijklmnopqrstuvwxyz'\nas_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nas_cr_Letters=$as_cr_letters$as_cr_LETTERS\nas_cr_digits='0123456789'\nas_cr_alnum=$as_cr_Letters$as_cr_digits\n\n\n  as_lineno_1=$LINENO as_lineno_1a=$LINENO\n  as_lineno_2=$LINENO as_lineno_2a=$LINENO\n  eval 'test \"x$as_lineno_1'$as_run'\" != \"x$as_lineno_2'$as_run'\" &&\n  test \"x`expr $as_lineno_1'$as_run' + 1`\" = \"x$as_lineno_2'$as_run'\"' || {\n  # Blame Lee E. McMahon (1931-1989) for sed's syntax.  :-)\n  sed -n '\n    p\n    /[$]LINENO/=\n  ' <$as_myself |\n    sed '\n      s/[$]LINENO.*/&-/\n      t lineno\n      b\n      :lineno\n      N\n      :loop\n      s/[$]LINENO\\([^'$as_cr_alnum'_].*\\n\\)\\(.*\\)/\\2\\1\\2/\n      t loop\n      s/-\\n.*//\n    ' >$as_me.lineno &&\n  chmod +x \"$as_me.lineno\" ||\n    { $as_echo \"$as_me: error: cannot create $as_me.lineno; rerun with a POSIX shell\" >&2; as_fn_exit 1; }\n\n  # If we had to re-execute with $CONFIG_SHELL, we're ensured to have\n  # already done that, so ensure we don't try to do so again and fall\n  # in an infinite loop.  This has already happened in practice.\n  _as_can_reexec=no; export _as_can_reexec\n  # Don't try to exec as it changes $[0], causing all sort of problems\n  # (the dirname of $[0] is not the place where we might find the\n  # original and so on.  Autoconf is especially sensitive to this).\n  . \"./$as_me.lineno\"\n  # Exit status is that of the last command.\n  exit\n}\n\nECHO_C= ECHO_N= ECHO_T=\ncase `echo -n x` in #(((((\n-n*)\n  case `echo 'xy\\c'` in\n  *c*) ECHO_T='\t';;\t# ECHO_T is single tab character.\n  xy)  ECHO_C='\\c';;\n  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null\n       ECHO_T='\t';;\n  esac;;\n*)\n  ECHO_N='-n';;\nesac\n\nrm -f conf$$ conf$$.exe conf$$.file\nif test -d conf$$.dir; then\n  rm -f conf$$.dir/conf$$.file\nelse\n  rm -f conf$$.dir\n  mkdir conf$$.dir 2>/dev/null\nfi\nif (echo >conf$$.file) 2>/dev/null; then\n  if ln -s conf$$.file conf$$ 2>/dev/null; then\n    as_ln_s='ln -s'\n    # ... but there are two gotchas:\n    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.\n    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.\n    # In both cases, we have to default to `cp -pR'.\n    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||\n      as_ln_s='cp -pR'\n  elif ln conf$$.file conf$$ 2>/dev/null; then\n    as_ln_s=ln\n  else\n    as_ln_s='cp -pR'\n  fi\nelse\n  as_ln_s='cp -pR'\nfi\nrm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file\nrmdir conf$$.dir 2>/dev/null\n\nif mkdir -p . 2>/dev/null; then\n  as_mkdir_p='mkdir -p \"$as_dir\"'\nelse\n  test -d ./-p && rmdir ./-p\n  as_mkdir_p=false\nfi\n\nas_test_x='test -x'\nas_executable_p=as_fn_executable_p\n\n# Sed expression to map a string onto a valid CPP name.\nas_tr_cpp=\"eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'\"\n\n# Sed expression to map a string onto a valid variable name.\nas_tr_sh=\"eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'\"\n\n\ntest -n \"$DJDIR\" || exec 7<&0 </dev/null\nexec 6>&1\n\n# Name of the host.\n# hostname on some systems (SVR3.2, old GNU/Linux) returns a bogus exit status,\n# so uname gets run too.\nac_hostname=`(hostname || uname -n) 2>/dev/null | sed 1q`\n\n#\n# Initializations.\n#\nac_default_prefix=/usr/local\nac_clean_files=\nac_config_libobj_dir=.\nLIBOBJS=\ncross_compiling=no\nsubdirs=\nMFLAGS=\nMAKEFLAGS=\n\n# Identity of this package.\nPACKAGE_NAME='Citus'\nPACKAGE_TARNAME='citus'\nPACKAGE_VERSION='12.2devel'\nPACKAGE_STRING='Citus 12.2devel'\nPACKAGE_BUGREPORT=''\nPACKAGE_URL=''\n\n# Factoring default headers for most tests.\nac_includes_default=\"\\\n#include <stdio.h>\n#ifdef HAVE_SYS_TYPES_H\n# include <sys/types.h>\n#endif\n#ifdef HAVE_SYS_STAT_H\n# include <sys/stat.h>\n#endif\n#ifdef STDC_HEADERS\n# include <stdlib.h>\n# include <stddef.h>\n#else\n# ifdef HAVE_STDLIB_H\n#  include <stdlib.h>\n# endif\n#endif\n#ifdef HAVE_STRING_H\n# if !defined STDC_HEADERS && defined HAVE_MEMORY_H\n#  include <memory.h>\n# endif\n# include <string.h>\n#endif\n#ifdef HAVE_STRINGS_H\n# include <strings.h>\n#endif\n#ifdef HAVE_INTTYPES_H\n# include <inttypes.h>\n#endif\n#ifdef HAVE_STDINT_H\n# include <stdint.h>\n#endif\n#ifdef HAVE_UNISTD_H\n# include <unistd.h>\n#endif\"\n\nac_subst_vars='LTLIBOBJS\nLIBOBJS\nHAS_DOTGIT\nPOSTGRES_BUILDDIR\nPOSTGRES_SRCDIR\nCITUS_LDFLAGS\nCITUS_CPPFLAGS\nCITUS_BITCODE_CFLAGS\nCITUS_CFLAGS\nGIT_BIN\nwith_security_flags\nwith_zstd\nwith_lz4\nEGREP\nGREP\nCPP\nOBJEXT\nEXEEXT\nac_ct_CC\nCPPFLAGS\nLDFLAGS\nCFLAGS\nCC\nvpath_build\nwith_pg_version_check\nPATH\nPG_CONFIG\nFLEX\nAWK\nSED\ntarget_alias\nhost_alias\nbuild_alias\nLIBS\nECHO_T\nECHO_N\nECHO_C\nDEFS\nmandir\nlocaledir\nlibdir\npsdir\npdfdir\ndvidir\nhtmldir\ninfodir\ndocdir\noldincludedir\nincludedir\nrunstatedir\nlocalstatedir\nsharedstatedir\nsysconfdir\ndatadir\ndatarootdir\nlibexecdir\nsbindir\nbindir\nprogram_transform_name\nprefix\nexec_prefix\nPACKAGE_URL\nPACKAGE_BUGREPORT\nPACKAGE_STRING\nPACKAGE_VERSION\nPACKAGE_TARNAME\nPACKAGE_NAME\nPATH_SEPARATOR\nSHELL'\nac_subst_files=''\nac_user_opts='\nenable_option_checking\nwith_extra_version\nwith_pg_version_check\nenable_coverage\nwith_libcurl\nwith_reports_hostname\nwith_lz4\nwith_zstd\nwith_security_flags\n'\n      ac_precious_vars='build_alias\nhost_alias\ntarget_alias\nPG_CONFIG\nPATH\nCC\nCFLAGS\nLDFLAGS\nLIBS\nCPPFLAGS\nCPP'\n\n\n# Initialize some variables set by options.\nac_init_help=\nac_init_version=false\nac_unrecognized_opts=\nac_unrecognized_sep=\n# The variables have the same names as the options, with\n# dashes changed to underlines.\ncache_file=/dev/null\nexec_prefix=NONE\nno_create=\nno_recursion=\nprefix=NONE\nprogram_prefix=NONE\nprogram_suffix=NONE\nprogram_transform_name=s,x,x,\nsilent=\nsite=\nsrcdir=\nverbose=\nx_includes=NONE\nx_libraries=NONE\n\n# Installation directory options.\n# These are left unexpanded so users can \"make install exec_prefix=/foo\"\n# and all the variables that are supposed to be based on exec_prefix\n# by default will actually change.\n# Use braces instead of parens because sh, perl, etc. also accept them.\n# (The list follows the same order as the GNU Coding Standards.)\nbindir='${exec_prefix}/bin'\nsbindir='${exec_prefix}/sbin'\nlibexecdir='${exec_prefix}/libexec'\ndatarootdir='${prefix}/share'\ndatadir='${datarootdir}'\nsysconfdir='${prefix}/etc'\nsharedstatedir='${prefix}/com'\nlocalstatedir='${prefix}/var'\nrunstatedir='${localstatedir}/run'\nincludedir='${prefix}/include'\noldincludedir='/usr/include'\ndocdir='${datarootdir}/doc/${PACKAGE_TARNAME}'\ninfodir='${datarootdir}/info'\nhtmldir='${docdir}'\ndvidir='${docdir}'\npdfdir='${docdir}'\npsdir='${docdir}'\nlibdir='${exec_prefix}/lib'\nlocaledir='${datarootdir}/locale'\nmandir='${datarootdir}/man'\n\nac_prev=\nac_dashdash=\nfor ac_option\ndo\n  # If the previous option needs an argument, assign it.\n  if test -n \"$ac_prev\"; then\n    eval $ac_prev=\\$ac_option\n    ac_prev=\n    continue\n  fi\n\n  case $ac_option in\n  *=?*) ac_optarg=`expr \"X$ac_option\" : '[^=]*=\\(.*\\)'` ;;\n  *=)   ac_optarg= ;;\n  *)    ac_optarg=yes ;;\n  esac\n\n  # Accept the important Cygnus configure options, so we can diagnose typos.\n\n  case $ac_dashdash$ac_option in\n  --)\n    ac_dashdash=yes ;;\n\n  -bindir | --bindir | --bindi | --bind | --bin | --bi)\n    ac_prev=bindir ;;\n  -bindir=* | --bindir=* | --bindi=* | --bind=* | --bin=* | --bi=*)\n    bindir=$ac_optarg ;;\n\n  -build | --build | --buil | --bui | --bu)\n    ac_prev=build_alias ;;\n  -build=* | --build=* | --buil=* | --bui=* | --bu=*)\n    build_alias=$ac_optarg ;;\n\n  -cache-file | --cache-file | --cache-fil | --cache-fi \\\n  | --cache-f | --cache- | --cache | --cach | --cac | --ca | --c)\n    ac_prev=cache_file ;;\n  -cache-file=* | --cache-file=* | --cache-fil=* | --cache-fi=* \\\n  | --cache-f=* | --cache-=* | --cache=* | --cach=* | --cac=* | --ca=* | --c=*)\n    cache_file=$ac_optarg ;;\n\n  --config-cache | -C)\n    cache_file=config.cache ;;\n\n  -datadir | --datadir | --datadi | --datad)\n    ac_prev=datadir ;;\n  -datadir=* | --datadir=* | --datadi=* | --datad=*)\n    datadir=$ac_optarg ;;\n\n  -datarootdir | --datarootdir | --datarootdi | --datarootd | --dataroot \\\n  | --dataroo | --dataro | --datar)\n    ac_prev=datarootdir ;;\n  -datarootdir=* | --datarootdir=* | --datarootdi=* | --datarootd=* \\\n  | --dataroot=* | --dataroo=* | --dataro=* | --datar=*)\n    datarootdir=$ac_optarg ;;\n\n  -disable-* | --disable-*)\n    ac_useropt=`expr \"x$ac_option\" : 'x-*disable-\\(.*\\)'`\n    # Reject names that are not valid shell variable names.\n    expr \"x$ac_useropt\" : \".*[^-+._$as_cr_alnum]\" >/dev/null &&\n      as_fn_error $? \"invalid feature name: $ac_useropt\"\n    ac_useropt_orig=$ac_useropt\n    ac_useropt=`$as_echo \"$ac_useropt\" | sed 's/[-+.]/_/g'`\n    case $ac_user_opts in\n      *\"\n\"enable_$ac_useropt\"\n\"*) ;;\n      *) ac_unrecognized_opts=\"$ac_unrecognized_opts$ac_unrecognized_sep--disable-$ac_useropt_orig\"\n\t ac_unrecognized_sep=', ';;\n    esac\n    eval enable_$ac_useropt=no ;;\n\n  -docdir | --docdir | --docdi | --doc | --do)\n    ac_prev=docdir ;;\n  -docdir=* | --docdir=* | --docdi=* | --doc=* | --do=*)\n    docdir=$ac_optarg ;;\n\n  -dvidir | --dvidir | --dvidi | --dvid | --dvi | --dv)\n    ac_prev=dvidir ;;\n  -dvidir=* | --dvidir=* | --dvidi=* | --dvid=* | --dvi=* | --dv=*)\n    dvidir=$ac_optarg ;;\n\n  -enable-* | --enable-*)\n    ac_useropt=`expr \"x$ac_option\" : 'x-*enable-\\([^=]*\\)'`\n    # Reject names that are not valid shell variable names.\n    expr \"x$ac_useropt\" : \".*[^-+._$as_cr_alnum]\" >/dev/null &&\n      as_fn_error $? \"invalid feature name: $ac_useropt\"\n    ac_useropt_orig=$ac_useropt\n    ac_useropt=`$as_echo \"$ac_useropt\" | sed 's/[-+.]/_/g'`\n    case $ac_user_opts in\n      *\"\n\"enable_$ac_useropt\"\n\"*) ;;\n      *) ac_unrecognized_opts=\"$ac_unrecognized_opts$ac_unrecognized_sep--enable-$ac_useropt_orig\"\n\t ac_unrecognized_sep=', ';;\n    esac\n    eval enable_$ac_useropt=\\$ac_optarg ;;\n\n  -exec-prefix | --exec_prefix | --exec-prefix | --exec-prefi \\\n  | --exec-pref | --exec-pre | --exec-pr | --exec-p | --exec- \\\n  | --exec | --exe | --ex)\n    ac_prev=exec_prefix ;;\n  -exec-prefix=* | --exec_prefix=* | --exec-prefix=* | --exec-prefi=* \\\n  | --exec-pref=* | --exec-pre=* | --exec-pr=* | --exec-p=* | --exec-=* \\\n  | --exec=* | --exe=* | --ex=*)\n    exec_prefix=$ac_optarg ;;\n\n  -gas | --gas | --ga | --g)\n    # Obsolete; use --with-gas.\n    with_gas=yes ;;\n\n  -help | --help | --hel | --he | -h)\n    ac_init_help=long ;;\n  -help=r* | --help=r* | --hel=r* | --he=r* | -hr*)\n    ac_init_help=recursive ;;\n  -help=s* | --help=s* | --hel=s* | --he=s* | -hs*)\n    ac_init_help=short ;;\n\n  -host | --host | --hos | --ho)\n    ac_prev=host_alias ;;\n  -host=* | --host=* | --hos=* | --ho=*)\n    host_alias=$ac_optarg ;;\n\n  -htmldir | --htmldir | --htmldi | --htmld | --html | --htm | --ht)\n    ac_prev=htmldir ;;\n  -htmldir=* | --htmldir=* | --htmldi=* | --htmld=* | --html=* | --htm=* \\\n  | --ht=*)\n    htmldir=$ac_optarg ;;\n\n  -includedir | --includedir | --includedi | --included | --include \\\n  | --includ | --inclu | --incl | --inc)\n    ac_prev=includedir ;;\n  -includedir=* | --includedir=* | --includedi=* | --included=* | --include=* \\\n  | --includ=* | --inclu=* | --incl=* | --inc=*)\n    includedir=$ac_optarg ;;\n\n  -infodir | --infodir | --infodi | --infod | --info | --inf)\n    ac_prev=infodir ;;\n  -infodir=* | --infodir=* | --infodi=* | --infod=* | --info=* | --inf=*)\n    infodir=$ac_optarg ;;\n\n  -libdir | --libdir | --libdi | --libd)\n    ac_prev=libdir ;;\n  -libdir=* | --libdir=* | --libdi=* | --libd=*)\n    libdir=$ac_optarg ;;\n\n  -libexecdir | --libexecdir | --libexecdi | --libexecd | --libexec \\\n  | --libexe | --libex | --libe)\n    ac_prev=libexecdir ;;\n  -libexecdir=* | --libexecdir=* | --libexecdi=* | --libexecd=* | --libexec=* \\\n  | --libexe=* | --libex=* | --libe=*)\n    libexecdir=$ac_optarg ;;\n\n  -localedir | --localedir | --localedi | --localed | --locale)\n    ac_prev=localedir ;;\n  -localedir=* | --localedir=* | --localedi=* | --localed=* | --locale=*)\n    localedir=$ac_optarg ;;\n\n  -localstatedir | --localstatedir | --localstatedi | --localstated \\\n  | --localstate | --localstat | --localsta | --localst | --locals)\n    ac_prev=localstatedir ;;\n  -localstatedir=* | --localstatedir=* | --localstatedi=* | --localstated=* \\\n  | --localstate=* | --localstat=* | --localsta=* | --localst=* | --locals=*)\n    localstatedir=$ac_optarg ;;\n\n  -mandir | --mandir | --mandi | --mand | --man | --ma | --m)\n    ac_prev=mandir ;;\n  -mandir=* | --mandir=* | --mandi=* | --mand=* | --man=* | --ma=* | --m=*)\n    mandir=$ac_optarg ;;\n\n  -nfp | --nfp | --nf)\n    # Obsolete; use --without-fp.\n    with_fp=no ;;\n\n  -no-create | --no-create | --no-creat | --no-crea | --no-cre \\\n  | --no-cr | --no-c | -n)\n    no_create=yes ;;\n\n  -no-recursion | --no-recursion | --no-recursio | --no-recursi \\\n  | --no-recurs | --no-recur | --no-recu | --no-rec | --no-re | --no-r)\n    no_recursion=yes ;;\n\n  -oldincludedir | --oldincludedir | --oldincludedi | --oldincluded \\\n  | --oldinclude | --oldinclud | --oldinclu | --oldincl | --oldinc \\\n  | --oldin | --oldi | --old | --ol | --o)\n    ac_prev=oldincludedir ;;\n  -oldincludedir=* | --oldincludedir=* | --oldincludedi=* | --oldincluded=* \\\n  | --oldinclude=* | --oldinclud=* | --oldinclu=* | --oldincl=* | --oldinc=* \\\n  | --oldin=* | --oldi=* | --old=* | --ol=* | --o=*)\n    oldincludedir=$ac_optarg ;;\n\n  -prefix | --prefix | --prefi | --pref | --pre | --pr | --p)\n    ac_prev=prefix ;;\n  -prefix=* | --prefix=* | --prefi=* | --pref=* | --pre=* | --pr=* | --p=*)\n    prefix=$ac_optarg ;;\n\n  -program-prefix | --program-prefix | --program-prefi | --program-pref \\\n  | --program-pre | --program-pr | --program-p)\n    ac_prev=program_prefix ;;\n  -program-prefix=* | --program-prefix=* | --program-prefi=* \\\n  | --program-pref=* | --program-pre=* | --program-pr=* | --program-p=*)\n    program_prefix=$ac_optarg ;;\n\n  -program-suffix | --program-suffix | --program-suffi | --program-suff \\\n  | --program-suf | --program-su | --program-s)\n    ac_prev=program_suffix ;;\n  -program-suffix=* | --program-suffix=* | --program-suffi=* \\\n  | --program-suff=* | --program-suf=* | --program-su=* | --program-s=*)\n    program_suffix=$ac_optarg ;;\n\n  -program-transform-name | --program-transform-name \\\n  | --program-transform-nam | --program-transform-na \\\n  | --program-transform-n | --program-transform- \\\n  | --program-transform | --program-transfor \\\n  | --program-transfo | --program-transf \\\n  | --program-trans | --program-tran \\\n  | --progr-tra | --program-tr | --program-t)\n    ac_prev=program_transform_name ;;\n  -program-transform-name=* | --program-transform-name=* \\\n  | --program-transform-nam=* | --program-transform-na=* \\\n  | --program-transform-n=* | --program-transform-=* \\\n  | --program-transform=* | --program-transfor=* \\\n  | --program-transfo=* | --program-transf=* \\\n  | --program-trans=* | --program-tran=* \\\n  | --progr-tra=* | --program-tr=* | --program-t=*)\n    program_transform_name=$ac_optarg ;;\n\n  -pdfdir | --pdfdir | --pdfdi | --pdfd | --pdf | --pd)\n    ac_prev=pdfdir ;;\n  -pdfdir=* | --pdfdir=* | --pdfdi=* | --pdfd=* | --pdf=* | --pd=*)\n    pdfdir=$ac_optarg ;;\n\n  -psdir | --psdir | --psdi | --psd | --ps)\n    ac_prev=psdir ;;\n  -psdir=* | --psdir=* | --psdi=* | --psd=* | --ps=*)\n    psdir=$ac_optarg ;;\n\n  -q | -quiet | --quiet | --quie | --qui | --qu | --q \\\n  | -silent | --silent | --silen | --sile | --sil)\n    silent=yes ;;\n\n  -runstatedir | --runstatedir | --runstatedi | --runstated \\\n  | --runstate | --runstat | --runsta | --runst | --runs \\\n  | --run | --ru | --r)\n    ac_prev=runstatedir ;;\n  -runstatedir=* | --runstatedir=* | --runstatedi=* | --runstated=* \\\n  | --runstate=* | --runstat=* | --runsta=* | --runst=* | --runs=* \\\n  | --run=* | --ru=* | --r=*)\n    runstatedir=$ac_optarg ;;\n\n  -sbindir | --sbindir | --sbindi | --sbind | --sbin | --sbi | --sb)\n    ac_prev=sbindir ;;\n  -sbindir=* | --sbindir=* | --sbindi=* | --sbind=* | --sbin=* \\\n  | --sbi=* | --sb=*)\n    sbindir=$ac_optarg ;;\n\n  -sharedstatedir | --sharedstatedir | --sharedstatedi \\\n  | --sharedstated | --sharedstate | --sharedstat | --sharedsta \\\n  | --sharedst | --shareds | --shared | --share | --shar \\\n  | --sha | --sh)\n    ac_prev=sharedstatedir ;;\n  -sharedstatedir=* | --sharedstatedir=* | --sharedstatedi=* \\\n  | --sharedstated=* | --sharedstate=* | --sharedstat=* | --sharedsta=* \\\n  | --sharedst=* | --shareds=* | --shared=* | --share=* | --shar=* \\\n  | --sha=* | --sh=*)\n    sharedstatedir=$ac_optarg ;;\n\n  -site | --site | --sit)\n    ac_prev=site ;;\n  -site=* | --site=* | --sit=*)\n    site=$ac_optarg ;;\n\n  -srcdir | --srcdir | --srcdi | --srcd | --src | --sr)\n    ac_prev=srcdir ;;\n  -srcdir=* | --srcdir=* | --srcdi=* | --srcd=* | --src=* | --sr=*)\n    srcdir=$ac_optarg ;;\n\n  -sysconfdir | --sysconfdir | --sysconfdi | --sysconfd | --sysconf \\\n  | --syscon | --sysco | --sysc | --sys | --sy)\n    ac_prev=sysconfdir ;;\n  -sysconfdir=* | --sysconfdir=* | --sysconfdi=* | --sysconfd=* | --sysconf=* \\\n  | --syscon=* | --sysco=* | --sysc=* | --sys=* | --sy=*)\n    sysconfdir=$ac_optarg ;;\n\n  -target | --target | --targe | --targ | --tar | --ta | --t)\n    ac_prev=target_alias ;;\n  -target=* | --target=* | --targe=* | --targ=* | --tar=* | --ta=* | --t=*)\n    target_alias=$ac_optarg ;;\n\n  -v | -verbose | --verbose | --verbos | --verbo | --verb)\n    verbose=yes ;;\n\n  -version | --version | --versio | --versi | --vers | -V)\n    ac_init_version=: ;;\n\n  -with-* | --with-*)\n    ac_useropt=`expr \"x$ac_option\" : 'x-*with-\\([^=]*\\)'`\n    # Reject names that are not valid shell variable names.\n    expr \"x$ac_useropt\" : \".*[^-+._$as_cr_alnum]\" >/dev/null &&\n      as_fn_error $? \"invalid package name: $ac_useropt\"\n    ac_useropt_orig=$ac_useropt\n    ac_useropt=`$as_echo \"$ac_useropt\" | sed 's/[-+.]/_/g'`\n    case $ac_user_opts in\n      *\"\n\"with_$ac_useropt\"\n\"*) ;;\n      *) ac_unrecognized_opts=\"$ac_unrecognized_opts$ac_unrecognized_sep--with-$ac_useropt_orig\"\n\t ac_unrecognized_sep=', ';;\n    esac\n    eval with_$ac_useropt=\\$ac_optarg ;;\n\n  -without-* | --without-*)\n    ac_useropt=`expr \"x$ac_option\" : 'x-*without-\\(.*\\)'`\n    # Reject names that are not valid shell variable names.\n    expr \"x$ac_useropt\" : \".*[^-+._$as_cr_alnum]\" >/dev/null &&\n      as_fn_error $? \"invalid package name: $ac_useropt\"\n    ac_useropt_orig=$ac_useropt\n    ac_useropt=`$as_echo \"$ac_useropt\" | sed 's/[-+.]/_/g'`\n    case $ac_user_opts in\n      *\"\n\"with_$ac_useropt\"\n\"*) ;;\n      *) ac_unrecognized_opts=\"$ac_unrecognized_opts$ac_unrecognized_sep--without-$ac_useropt_orig\"\n\t ac_unrecognized_sep=', ';;\n    esac\n    eval with_$ac_useropt=no ;;\n\n  --x)\n    # Obsolete; use --with-x.\n    with_x=yes ;;\n\n  -x-includes | --x-includes | --x-include | --x-includ | --x-inclu \\\n  | --x-incl | --x-inc | --x-in | --x-i)\n    ac_prev=x_includes ;;\n  -x-includes=* | --x-includes=* | --x-include=* | --x-includ=* | --x-inclu=* \\\n  | --x-incl=* | --x-inc=* | --x-in=* | --x-i=*)\n    x_includes=$ac_optarg ;;\n\n  -x-libraries | --x-libraries | --x-librarie | --x-librari \\\n  | --x-librar | --x-libra | --x-libr | --x-lib | --x-li | --x-l)\n    ac_prev=x_libraries ;;\n  -x-libraries=* | --x-libraries=* | --x-librarie=* | --x-librari=* \\\n  | --x-librar=* | --x-libra=* | --x-libr=* | --x-lib=* | --x-li=* | --x-l=*)\n    x_libraries=$ac_optarg ;;\n\n  -*) as_fn_error $? \"unrecognized option: \\`$ac_option'\nTry \\`$0 --help' for more information\"\n    ;;\n\n  *=*)\n    ac_envvar=`expr \"x$ac_option\" : 'x\\([^=]*\\)='`\n    # Reject names that are not valid shell variable names.\n    case $ac_envvar in #(\n      '' | [0-9]* | *[!_$as_cr_alnum]* )\n      as_fn_error $? \"invalid variable name: \\`$ac_envvar'\" ;;\n    esac\n    eval $ac_envvar=\\$ac_optarg\n    export $ac_envvar ;;\n\n  *)\n    # FIXME: should be removed in autoconf 3.0.\n    $as_echo \"$as_me: WARNING: you should use --build, --host, --target\" >&2\n    expr \"x$ac_option\" : \".*[^-._$as_cr_alnum]\" >/dev/null &&\n      $as_echo \"$as_me: WARNING: invalid host type: $ac_option\" >&2\n    : \"${build_alias=$ac_option} ${host_alias=$ac_option} ${target_alias=$ac_option}\"\n    ;;\n\n  esac\ndone\n\nif test -n \"$ac_prev\"; then\n  ac_option=--`echo $ac_prev | sed 's/_/-/g'`\n  as_fn_error $? \"missing argument to $ac_option\"\nfi\n\nif test -n \"$ac_unrecognized_opts\"; then\n  case $enable_option_checking in\n    no) ;;\n    fatal) as_fn_error $? \"unrecognized options: $ac_unrecognized_opts\" ;;\n    *)     $as_echo \"$as_me: WARNING: unrecognized options: $ac_unrecognized_opts\" >&2 ;;\n  esac\nfi\n\n# Check all directory arguments for consistency.\nfor ac_var in\texec_prefix prefix bindir sbindir libexecdir datarootdir \\\n\t\tdatadir sysconfdir sharedstatedir localstatedir includedir \\\n\t\toldincludedir docdir infodir htmldir dvidir pdfdir psdir \\\n\t\tlibdir localedir mandir runstatedir\ndo\n  eval ac_val=\\$$ac_var\n  # Remove trailing slashes.\n  case $ac_val in\n    */ )\n      ac_val=`expr \"X$ac_val\" : 'X\\(.*[^/]\\)' \\| \"X$ac_val\" : 'X\\(.*\\)'`\n      eval $ac_var=\\$ac_val;;\n  esac\n  # Be sure to have absolute directory names.\n  case $ac_val in\n    [\\\\/$]* | ?:[\\\\/]* )  continue;;\n    NONE | '' ) case $ac_var in *prefix ) continue;; esac;;\n  esac\n  as_fn_error $? \"expected an absolute directory name for --$ac_var: $ac_val\"\ndone\n\n# There might be people who depend on the old broken behavior: `$host'\n# used to hold the argument of --host etc.\n# FIXME: To remove some day.\nbuild=$build_alias\nhost=$host_alias\ntarget=$target_alias\n\n# FIXME: To remove some day.\nif test \"x$host_alias\" != x; then\n  if test \"x$build_alias\" = x; then\n    cross_compiling=maybe\n  elif test \"x$build_alias\" != \"x$host_alias\"; then\n    cross_compiling=yes\n  fi\nfi\n\nac_tool_prefix=\ntest -n \"$host_alias\" && ac_tool_prefix=$host_alias-\n\ntest \"$silent\" = yes && exec 6>/dev/null\n\n\nac_pwd=`pwd` && test -n \"$ac_pwd\" &&\nac_ls_di=`ls -di .` &&\nac_pwd_ls_di=`cd \"$ac_pwd\" && ls -di .` ||\n  as_fn_error $? \"working directory cannot be determined\"\ntest \"X$ac_ls_di\" = \"X$ac_pwd_ls_di\" ||\n  as_fn_error $? \"pwd does not report name of working directory\"\n\n\n# Find the source files, if location was not specified.\nif test -z \"$srcdir\"; then\n  ac_srcdir_defaulted=yes\n  # Try the directory containing this script, then the parent directory.\n  ac_confdir=`$as_dirname -- \"$as_myself\" ||\n$as_expr X\"$as_myself\" : 'X\\(.*[^/]\\)//*[^/][^/]*/*$' \\| \\\n\t X\"$as_myself\" : 'X\\(//\\)[^/]' \\| \\\n\t X\"$as_myself\" : 'X\\(//\\)$' \\| \\\n\t X\"$as_myself\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n$as_echo X\"$as_myself\" |\n    sed '/^X\\(.*[^/]\\)\\/\\/*[^/][^/]*\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)[^/].*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n  srcdir=$ac_confdir\n  if test ! -r \"$srcdir/$ac_unique_file\"; then\n    srcdir=..\n  fi\nelse\n  ac_srcdir_defaulted=no\nfi\nif test ! -r \"$srcdir/$ac_unique_file\"; then\n  test \"$ac_srcdir_defaulted\" = yes && srcdir=\"$ac_confdir or ..\"\n  as_fn_error $? \"cannot find sources ($ac_unique_file) in $srcdir\"\nfi\nac_msg=\"sources are in $srcdir, but \\`cd $srcdir' does not work\"\nac_abs_confdir=`(\n\tcd \"$srcdir\" && test -r \"./$ac_unique_file\" || as_fn_error $? \"$ac_msg\"\n\tpwd)`\n# When building in place, set srcdir=.\nif test \"$ac_abs_confdir\" = \"$ac_pwd\"; then\n  srcdir=.\nfi\n# Remove unnecessary trailing slashes from srcdir.\n# Double slashes in file names in object file debugging info\n# mess up M-x gdb in Emacs.\ncase $srcdir in\n*/) srcdir=`expr \"X$srcdir\" : 'X\\(.*[^/]\\)' \\| \"X$srcdir\" : 'X\\(.*\\)'`;;\nesac\nfor ac_var in $ac_precious_vars; do\n  eval ac_env_${ac_var}_set=\\${${ac_var}+set}\n  eval ac_env_${ac_var}_value=\\$${ac_var}\n  eval ac_cv_env_${ac_var}_set=\\${${ac_var}+set}\n  eval ac_cv_env_${ac_var}_value=\\$${ac_var}\ndone\n\n#\n# Report the --help message.\n#\nif test \"$ac_init_help\" = \"long\"; then\n  # Omit some internal or obsolete options to make the list less imposing.\n  # This message is too long to be a string in the A/UX 3.1 sh.\n  cat <<_ACEOF\n\\`configure' configures Citus 12.2devel to adapt to many kinds of systems.\n\nUsage: $0 [OPTION]... [VAR=VALUE]...\n\nTo assign environment variables (e.g., CC, CFLAGS...), specify them as\nVAR=VALUE.  See below for descriptions of some of the useful variables.\n\nDefaults for the options are specified in brackets.\n\nConfiguration:\n  -h, --help              display this help and exit\n      --help=short        display options specific to this package\n      --help=recursive    display the short help of all the included packages\n  -V, --version           display version information and exit\n  -q, --quiet, --silent   do not print \\`checking ...' messages\n      --cache-file=FILE   cache test results in FILE [disabled]\n  -C, --config-cache      alias for \\`--cache-file=config.cache'\n  -n, --no-create         do not create output files\n      --srcdir=DIR        find the sources in DIR [configure dir or \\`..']\n\nInstallation directories:\n  --prefix=PREFIX         install architecture-independent files in PREFIX\n                          [$ac_default_prefix]\n  --exec-prefix=EPREFIX   install architecture-dependent files in EPREFIX\n                          [PREFIX]\n\nBy default, \\`make install' will install all the files in\n\\`$ac_default_prefix/bin', \\`$ac_default_prefix/lib' etc.  You can specify\nan installation prefix other than \\`$ac_default_prefix' using \\`--prefix',\nfor instance \\`--prefix=\\$HOME'.\n\nFor better control, use the options below.\n\nFine tuning of the installation directories:\n  --bindir=DIR            user executables [EPREFIX/bin]\n  --sbindir=DIR           system admin executables [EPREFIX/sbin]\n  --libexecdir=DIR        program executables [EPREFIX/libexec]\n  --sysconfdir=DIR        read-only single-machine data [PREFIX/etc]\n  --sharedstatedir=DIR    modifiable architecture-independent data [PREFIX/com]\n  --localstatedir=DIR     modifiable single-machine data [PREFIX/var]\n  --runstatedir=DIR       modifiable per-process data [LOCALSTATEDIR/run]\n  --libdir=DIR            object code libraries [EPREFIX/lib]\n  --includedir=DIR        C header files [PREFIX/include]\n  --oldincludedir=DIR     C header files for non-gcc [/usr/include]\n  --datarootdir=DIR       read-only arch.-independent data root [PREFIX/share]\n  --datadir=DIR           read-only architecture-independent data [DATAROOTDIR]\n  --infodir=DIR           info documentation [DATAROOTDIR/info]\n  --localedir=DIR         locale-dependent data [DATAROOTDIR/locale]\n  --mandir=DIR            man documentation [DATAROOTDIR/man]\n  --docdir=DIR            documentation root [DATAROOTDIR/doc/citus]\n  --htmldir=DIR           html documentation [DOCDIR]\n  --dvidir=DIR            dvi documentation [DOCDIR]\n  --pdfdir=DIR            pdf documentation [DOCDIR]\n  --psdir=DIR             ps documentation [DOCDIR]\n_ACEOF\n\n  cat <<\\_ACEOF\n_ACEOF\nfi\n\nif test -n \"$ac_init_help\"; then\n  case $ac_init_help in\n     short | recursive ) echo \"Configuration of Citus 12.2devel:\";;\n   esac\n  cat <<\\_ACEOF\n\nOptional Features:\n  --disable-option-checking  ignore unrecognized --enable/--with options\n  --disable-FEATURE       do not include FEATURE (same as --enable-FEATURE=no)\n  --enable-FEATURE[=ARG]  include FEATURE [ARG=yes]\n  --enable-coverage       build with coverage testing instrumentation\n\nOptional Packages:\n  --with-PACKAGE[=ARG]    use PACKAGE [ARG=yes]\n  --without-PACKAGE       do not use PACKAGE (same as --with-PACKAGE=no)\n  --with-extra-version=STRING\n                          append STRING to version\n  --without-pg-version-check\n                          do not check postgres version during configure\n  --without-libcurl       do not use libcurl for anonymous statistics\n                          collection\n  --with-reports-hostname=HOSTNAME\n                          Use HOSTNAME as hostname for statistics collection\n                          and update checks\n  --without-lz4           do not use lz4\n  --without-zstd          do not use zstd\n  --with-security-flags   use security flags\n\nSome influential environment variables:\n  PG_CONFIG   Location to find pg_config for target PostgreSQL instalation\n              (default PATH)\n  PATH        PATH for target PostgreSQL install pg_config\n  CC          C compiler command\n  CFLAGS      C compiler flags\n  LDFLAGS     linker flags, e.g. -L<lib dir> if you have libraries in a\n              nonstandard directory <lib dir>\n  LIBS        libraries to pass to the linker, e.g. -l<library>\n  CPPFLAGS    (Objective) C/C++ preprocessor flags, e.g. -I<include dir> if\n              you have headers in a nonstandard directory <include dir>\n  CPP         C preprocessor\n\nUse these variables to override the choices made by `configure' or to help\nit to find libraries and programs with nonstandard names/locations.\n\nReport bugs to the package provider.\n_ACEOF\nac_status=$?\nfi\n\nif test \"$ac_init_help\" = \"recursive\"; then\n  # If there are subdirs, report their specific --help.\n  for ac_dir in : $ac_subdirs_all; do test \"x$ac_dir\" = x: && continue\n    test -d \"$ac_dir\" ||\n      { cd \"$srcdir\" && ac_pwd=`pwd` && srcdir=. && test -d \"$ac_dir\"; } ||\n      continue\n    ac_builddir=.\n\ncase \"$ac_dir\" in\n.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;\n*)\n  ac_dir_suffix=/`$as_echo \"$ac_dir\" | sed 's|^\\.[\\\\/]||'`\n  # A \"..\" for each directory in $ac_dir_suffix.\n  ac_top_builddir_sub=`$as_echo \"$ac_dir_suffix\" | sed 's|/[^\\\\/]*|/..|g;s|/||'`\n  case $ac_top_builddir_sub in\n  \"\") ac_top_builddir_sub=. ac_top_build_prefix= ;;\n  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;\n  esac ;;\nesac\nac_abs_top_builddir=$ac_pwd\nac_abs_builddir=$ac_pwd$ac_dir_suffix\n# for backward compatibility:\nac_top_builddir=$ac_top_build_prefix\n\ncase $srcdir in\n  .)  # We are building in place.\n    ac_srcdir=.\n    ac_top_srcdir=$ac_top_builddir_sub\n    ac_abs_top_srcdir=$ac_pwd ;;\n  [\\\\/]* | ?:[\\\\/]* )  # Absolute name.\n    ac_srcdir=$srcdir$ac_dir_suffix;\n    ac_top_srcdir=$srcdir\n    ac_abs_top_srcdir=$srcdir ;;\n  *) # Relative name.\n    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix\n    ac_top_srcdir=$ac_top_build_prefix$srcdir\n    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;\nesac\nac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix\n\n    cd \"$ac_dir\" || { ac_status=$?; continue; }\n    # Check for guested configure.\n    if test -f \"$ac_srcdir/configure.gnu\"; then\n      echo &&\n      $SHELL \"$ac_srcdir/configure.gnu\" --help=recursive\n    elif test -f \"$ac_srcdir/configure\"; then\n      echo &&\n      $SHELL \"$ac_srcdir/configure\" --help=recursive\n    else\n      $as_echo \"$as_me: WARNING: no configuration information is in $ac_dir\" >&2\n    fi || ac_status=$?\n    cd \"$ac_pwd\" || { ac_status=$?; break; }\n  done\nfi\n\ntest -n \"$ac_init_help\" && exit $ac_status\nif $ac_init_version; then\n  cat <<\\_ACEOF\nCitus configure 12.2devel\ngenerated by GNU Autoconf 2.69\n\nCopyright (C) 2012 Free Software Foundation, Inc.\nThis configure script is free software; the Free Software Foundation\ngives unlimited permission to copy, distribute and modify it.\n\nCopyright (c) Citus Data, Inc.\n_ACEOF\n  exit\nfi\n\n## ------------------------ ##\n## Autoconf initialization. ##\n## ------------------------ ##\n\n# ac_fn_c_try_compile LINENO\n# --------------------------\n# Try to compile conftest.$ac_ext, and return whether this succeeded.\nac_fn_c_try_compile ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  rm -f conftest.$ac_objext\n  if { { ac_try=\"$ac_compile\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_compile\") 2>conftest.err\n  ac_status=$?\n  if test -s conftest.err; then\n    grep -v '^ *+' conftest.err >conftest.er1\n    cat conftest.er1 >&5\n    mv -f conftest.er1 conftest.err\n  fi\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } && {\n\t test -z \"$ac_c_werror_flag\" ||\n\t test ! -s conftest.err\n       } && test -s conftest.$ac_objext; then :\n  ac_retval=0\nelse\n  $as_echo \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n\tac_retval=1\nfi\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n  as_fn_set_status $ac_retval\n\n} # ac_fn_c_try_compile\n\n# ac_fn_c_try_run LINENO\n# ----------------------\n# Try to link conftest.$ac_ext, and return whether this succeeded. Assumes\n# that executables *can* be run.\nac_fn_c_try_run ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  if { { ac_try=\"$ac_link\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_link\") 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } && { ac_try='./conftest$ac_exeext'\n  { { case \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_try\") 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; }; then :\n  ac_retval=0\nelse\n  $as_echo \"$as_me: program exited with status $ac_status\" >&5\n       $as_echo \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n       ac_retval=$ac_status\nfi\n  rm -rf conftest.dSYM conftest_ipa8_conftest.oo\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n  as_fn_set_status $ac_retval\n\n} # ac_fn_c_try_run\n\n# ac_fn_c_compute_int LINENO EXPR VAR INCLUDES\n# --------------------------------------------\n# Tries to find the compile-time value of EXPR in a program that includes\n# INCLUDES, setting VAR accordingly. Returns whether the value could be\n# computed\nac_fn_c_compute_int ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  if test \"$cross_compiling\" = yes; then\n    # Depending upon the size, compute the lo and hi bounds.\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$4\nint\nmain ()\n{\nstatic int test_array [1 - 2 * !(($2) >= 0)];\ntest_array [0] = 0;\nreturn test_array [0];\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_lo=0 ac_mid=0\n  while :; do\n    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$4\nint\nmain ()\n{\nstatic int test_array [1 - 2 * !(($2) <= $ac_mid)];\ntest_array [0] = 0;\nreturn test_array [0];\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_hi=$ac_mid; break\nelse\n  as_fn_arith $ac_mid + 1 && ac_lo=$as_val\n\t\t\tif test $ac_lo -le $ac_mid; then\n\t\t\t  ac_lo= ac_hi=\n\t\t\t  break\n\t\t\tfi\n\t\t\tas_fn_arith 2 '*' $ac_mid + 1 && ac_mid=$as_val\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n  done\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$4\nint\nmain ()\n{\nstatic int test_array [1 - 2 * !(($2) < 0)];\ntest_array [0] = 0;\nreturn test_array [0];\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_hi=-1 ac_mid=-1\n  while :; do\n    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$4\nint\nmain ()\n{\nstatic int test_array [1 - 2 * !(($2) >= $ac_mid)];\ntest_array [0] = 0;\nreturn test_array [0];\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_lo=$ac_mid; break\nelse\n  as_fn_arith '(' $ac_mid ')' - 1 && ac_hi=$as_val\n\t\t\tif test $ac_mid -le $ac_hi; then\n\t\t\t  ac_lo= ac_hi=\n\t\t\t  break\n\t\t\tfi\n\t\t\tas_fn_arith 2 '*' $ac_mid && ac_mid=$as_val\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n  done\nelse\n  ac_lo= ac_hi=\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n# Binary search between lo and hi bounds.\nwhile test \"x$ac_lo\" != \"x$ac_hi\"; do\n  as_fn_arith '(' $ac_hi - $ac_lo ')' / 2 + $ac_lo && ac_mid=$as_val\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$4\nint\nmain ()\n{\nstatic int test_array [1 - 2 * !(($2) <= $ac_mid)];\ntest_array [0] = 0;\nreturn test_array [0];\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_hi=$ac_mid\nelse\n  as_fn_arith '(' $ac_mid ')' + 1 && ac_lo=$as_val\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\ndone\ncase $ac_lo in #((\n?*) eval \"$3=\\$ac_lo\"; ac_retval=0 ;;\n'') ac_retval=1 ;;\nesac\n  else\n    cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$4\nstatic long int longval () { return $2; }\nstatic unsigned long int ulongval () { return $2; }\n#include <stdio.h>\n#include <stdlib.h>\nint\nmain ()\n{\n\n  FILE *f = fopen (\"conftest.val\", \"w\");\n  if (! f)\n    return 1;\n  if (($2) < 0)\n    {\n      long int i = longval ();\n      if (i != ($2))\n\treturn 1;\n      fprintf (f, \"%ld\", i);\n    }\n  else\n    {\n      unsigned long int i = ulongval ();\n      if (i != ($2))\n\treturn 1;\n      fprintf (f, \"%lu\", i);\n    }\n  /* Do not output a trailing newline, as this causes \\r\\n confusion\n     on some platforms.  */\n  return ferror (f) || fclose (f) != 0;\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_run \"$LINENO\"; then :\n  echo >>conftest.val; read $3 <conftest.val; ac_retval=0\nelse\n  ac_retval=1\nfi\nrm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \\\n  conftest.$ac_objext conftest.beam conftest.$ac_ext\nrm -f conftest.val\n\n  fi\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n  as_fn_set_status $ac_retval\n\n} # ac_fn_c_compute_int\n\n# ac_fn_c_try_cpp LINENO\n# ----------------------\n# Try to preprocess conftest.$ac_ext, and return whether this succeeded.\nac_fn_c_try_cpp ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  if { { ac_try=\"$ac_cpp conftest.$ac_ext\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_cpp conftest.$ac_ext\") 2>conftest.err\n  ac_status=$?\n  if test -s conftest.err; then\n    grep -v '^ *+' conftest.err >conftest.er1\n    cat conftest.er1 >&5\n    mv -f conftest.er1 conftest.err\n  fi\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } > conftest.i && {\n\t test -z \"$ac_c_preproc_warn_flag$ac_c_werror_flag\" ||\n\t test ! -s conftest.err\n       }; then :\n  ac_retval=0\nelse\n  $as_echo \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n    ac_retval=1\nfi\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n  as_fn_set_status $ac_retval\n\n} # ac_fn_c_try_cpp\n\n# ac_fn_c_check_header_compile LINENO HEADER VAR INCLUDES\n# -------------------------------------------------------\n# Tests whether HEADER exists and can be compiled using the include files in\n# INCLUDES, setting the cache variable VAR accordingly.\nac_fn_c_check_header_compile ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $2\" >&5\n$as_echo_n \"checking for $2... \" >&6; }\nif eval \\${$3+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$4\n#include <$2>\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  eval \"$3=yes\"\nelse\n  eval \"$3=no\"\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nfi\neval ac_res=\\$$3\n\t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n$as_echo \"$ac_res\" >&6; }\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n\n} # ac_fn_c_check_header_compile\n\n# ac_fn_c_try_link LINENO\n# -----------------------\n# Try to link conftest.$ac_ext, and return whether this succeeded.\nac_fn_c_try_link ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  rm -f conftest.$ac_objext conftest$ac_exeext\n  if { { ac_try=\"$ac_link\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_link\") 2>conftest.err\n  ac_status=$?\n  if test -s conftest.err; then\n    grep -v '^ *+' conftest.err >conftest.er1\n    cat conftest.er1 >&5\n    mv -f conftest.er1 conftest.err\n  fi\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; } && {\n\t test -z \"$ac_c_werror_flag\" ||\n\t test ! -s conftest.err\n       } && test -s conftest$ac_exeext && {\n\t test \"$cross_compiling\" = yes ||\n\t test -x conftest$ac_exeext\n       }; then :\n  ac_retval=0\nelse\n  $as_echo \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n\tac_retval=1\nfi\n  # Delete the IPA/IPO (Inter Procedural Analysis/Optimization) information\n  # created by the PGI compiler (conftest_ipa8_conftest.oo), as it would\n  # interfere with the next link command; also delete a directory that is\n  # left behind by Apple's compiler.  We do this before executing the actions.\n  rm -rf conftest.dSYM conftest_ipa8_conftest.oo\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n  as_fn_set_status $ac_retval\n\n} # ac_fn_c_try_link\n\n# ac_fn_c_check_header_mongrel LINENO HEADER VAR INCLUDES\n# -------------------------------------------------------\n# Tests whether HEADER exists, giving a warning if it cannot be compiled using\n# the include files in INCLUDES and setting the cache variable VAR\n# accordingly.\nac_fn_c_check_header_mongrel ()\n{\n  as_lineno=${as_lineno-\"$1\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n  if eval \\${$3+:} false; then :\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $2\" >&5\n$as_echo_n \"checking for $2... \" >&6; }\nif eval \\${$3+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nfi\neval ac_res=\\$$3\n\t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n$as_echo \"$ac_res\" >&6; }\nelse\n  # Is the header compilable?\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking $2 usability\" >&5\n$as_echo_n \"checking $2 usability... \" >&6; }\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n$4\n#include <$2>\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_header_compiler=yes\nelse\n  ac_header_compiler=no\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_header_compiler\" >&5\n$as_echo \"$ac_header_compiler\" >&6; }\n\n# Is the header present?\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking $2 presence\" >&5\n$as_echo_n \"checking $2 presence... \" >&6; }\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <$2>\n_ACEOF\nif ac_fn_c_try_cpp \"$LINENO\"; then :\n  ac_header_preproc=yes\nelse\n  ac_header_preproc=no\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_header_preproc\" >&5\n$as_echo \"$ac_header_preproc\" >&6; }\n\n# So?  What about this header?\ncase $ac_header_compiler:$ac_header_preproc:$ac_c_preproc_warn_flag in #((\n  yes:no: )\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: $2: accepted by the compiler, rejected by the preprocessor!\" >&5\n$as_echo \"$as_me: WARNING: $2: accepted by the compiler, rejected by the preprocessor!\" >&2;}\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: $2: proceeding with the compiler's result\" >&5\n$as_echo \"$as_me: WARNING: $2: proceeding with the compiler's result\" >&2;}\n    ;;\n  no:yes:* )\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: $2: present but cannot be compiled\" >&5\n$as_echo \"$as_me: WARNING: $2: present but cannot be compiled\" >&2;}\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: $2:     check for missing prerequisite headers?\" >&5\n$as_echo \"$as_me: WARNING: $2:     check for missing prerequisite headers?\" >&2;}\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: $2: see the Autoconf documentation\" >&5\n$as_echo \"$as_me: WARNING: $2: see the Autoconf documentation\" >&2;}\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: $2:     section \\\"Present But Cannot Be Compiled\\\"\" >&5\n$as_echo \"$as_me: WARNING: $2:     section \\\"Present But Cannot Be Compiled\\\"\" >&2;}\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: $2: proceeding with the compiler's result\" >&5\n$as_echo \"$as_me: WARNING: $2: proceeding with the compiler's result\" >&2;}\n    ;;\nesac\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $2\" >&5\n$as_echo_n \"checking for $2... \" >&6; }\nif eval \\${$3+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  eval \"$3=\\$ac_header_compiler\"\nfi\neval ac_res=\\$$3\n\t       { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_res\" >&5\n$as_echo \"$ac_res\" >&6; }\nfi\n  eval $as_lineno_stack; ${as_lineno_stack:+:} unset as_lineno\n\n} # ac_fn_c_check_header_mongrel\ncat >config.log <<_ACEOF\nThis file contains any messages produced by compilers while\nrunning configure, to aid debugging if configure makes a mistake.\n\nIt was created by Citus $as_me 12.2devel, which was\ngenerated by GNU Autoconf 2.69.  Invocation command line was\n\n  $ $0 $@\n\n_ACEOF\nexec 5>>config.log\n{\ncat <<_ASUNAME\n## --------- ##\n## Platform. ##\n## --------- ##\n\nhostname = `(hostname || uname -n) 2>/dev/null | sed 1q`\nuname -m = `(uname -m) 2>/dev/null || echo unknown`\nuname -r = `(uname -r) 2>/dev/null || echo unknown`\nuname -s = `(uname -s) 2>/dev/null || echo unknown`\nuname -v = `(uname -v) 2>/dev/null || echo unknown`\n\n/usr/bin/uname -p = `(/usr/bin/uname -p) 2>/dev/null || echo unknown`\n/bin/uname -X     = `(/bin/uname -X) 2>/dev/null     || echo unknown`\n\n/bin/arch              = `(/bin/arch) 2>/dev/null              || echo unknown`\n/usr/bin/arch -k       = `(/usr/bin/arch -k) 2>/dev/null       || echo unknown`\n/usr/convex/getsysinfo = `(/usr/convex/getsysinfo) 2>/dev/null || echo unknown`\n/usr/bin/hostinfo      = `(/usr/bin/hostinfo) 2>/dev/null      || echo unknown`\n/bin/machine           = `(/bin/machine) 2>/dev/null           || echo unknown`\n/usr/bin/oslevel       = `(/usr/bin/oslevel) 2>/dev/null       || echo unknown`\n/bin/universe          = `(/bin/universe) 2>/dev/null          || echo unknown`\n\n_ASUNAME\n\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    $as_echo \"PATH: $as_dir\"\n  done\nIFS=$as_save_IFS\n\n} >&5\n\ncat >&5 <<_ACEOF\n\n\n## ----------- ##\n## Core tests. ##\n## ----------- ##\n\n_ACEOF\n\n\n# Keep a trace of the command line.\n# Strip out --no-create and --no-recursion so they do not pile up.\n# Strip out --silent because we don't want to record it for future runs.\n# Also quote any args containing shell meta-characters.\n# Make two passes to allow for proper duplicate-argument suppression.\nac_configure_args=\nac_configure_args0=\nac_configure_args1=\nac_must_keep_next=false\nfor ac_pass in 1 2\ndo\n  for ac_arg\n  do\n    case $ac_arg in\n    -no-create | --no-c* | -n | -no-recursion | --no-r*) continue ;;\n    -q | -quiet | --quiet | --quie | --qui | --qu | --q \\\n    | -silent | --silent | --silen | --sile | --sil)\n      continue ;;\n    *\\'*)\n      ac_arg=`$as_echo \"$ac_arg\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"` ;;\n    esac\n    case $ac_pass in\n    1) as_fn_append ac_configure_args0 \" '$ac_arg'\" ;;\n    2)\n      as_fn_append ac_configure_args1 \" '$ac_arg'\"\n      if test $ac_must_keep_next = true; then\n\tac_must_keep_next=false # Got value, back to normal.\n      else\n\tcase $ac_arg in\n\t  *=* | --config-cache | -C | -disable-* | --disable-* \\\n\t  | -enable-* | --enable-* | -gas | --g* | -nfp | --nf* \\\n\t  | -q | -quiet | --q* | -silent | --sil* | -v | -verb* \\\n\t  | -with-* | --with-* | -without-* | --without-* | --x)\n\t    case \"$ac_configure_args0 \" in\n\t      \"$ac_configure_args1\"*\" '$ac_arg' \"* ) continue ;;\n\t    esac\n\t    ;;\n\t  -* ) ac_must_keep_next=true ;;\n\tesac\n      fi\n      as_fn_append ac_configure_args \" '$ac_arg'\"\n      ;;\n    esac\n  done\ndone\n{ ac_configure_args0=; unset ac_configure_args0;}\n{ ac_configure_args1=; unset ac_configure_args1;}\n\n# When interrupted or exit'd, cleanup temporary files, and complete\n# config.log.  We remove comments because anyway the quotes in there\n# would cause problems or look ugly.\n# WARNING: Use '\\'' to represent an apostrophe within the trap.\n# WARNING: Do not start the trap code with a newline, due to a FreeBSD 4.0 bug.\ntrap 'exit_status=$?\n  # Save into config.log some information that might help in debugging.\n  {\n    echo\n\n    $as_echo \"## ---------------- ##\n## Cache variables. ##\n## ---------------- ##\"\n    echo\n    # The following way of writing the cache mishandles newlines in values,\n(\n  for ac_var in `(set) 2>&1 | sed -n '\\''s/^\\([a-zA-Z_][a-zA-Z0-9_]*\\)=.*/\\1/p'\\''`; do\n    eval ac_val=\\$$ac_var\n    case $ac_val in #(\n    *${as_nl}*)\n      case $ac_var in #(\n      *_cv_*) { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: cache variable $ac_var contains a newline\" >&5\n$as_echo \"$as_me: WARNING: cache variable $ac_var contains a newline\" >&2;} ;;\n      esac\n      case $ac_var in #(\n      _ | IFS | as_nl) ;; #(\n      BASH_ARGV | BASH_SOURCE) eval $ac_var= ;; #(\n      *) { eval $ac_var=; unset $ac_var;} ;;\n      esac ;;\n    esac\n  done\n  (set) 2>&1 |\n    case $as_nl`(ac_space='\\'' '\\''; set) 2>&1` in #(\n    *${as_nl}ac_space=\\ *)\n      sed -n \\\n\t\"s/'\\''/'\\''\\\\\\\\'\\'''\\''/g;\n\t  s/^\\\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\\\)=\\\\(.*\\\\)/\\\\1='\\''\\\\2'\\''/p\"\n      ;; #(\n    *)\n      sed -n \"/^[_$as_cr_alnum]*_cv_[_$as_cr_alnum]*=/p\"\n      ;;\n    esac |\n    sort\n)\n    echo\n\n    $as_echo \"## ----------------- ##\n## Output variables. ##\n## ----------------- ##\"\n    echo\n    for ac_var in $ac_subst_vars\n    do\n      eval ac_val=\\$$ac_var\n      case $ac_val in\n      *\\'\\''*) ac_val=`$as_echo \"$ac_val\" | sed \"s/'\\''/'\\''\\\\\\\\\\\\\\\\'\\'''\\''/g\"`;;\n      esac\n      $as_echo \"$ac_var='\\''$ac_val'\\''\"\n    done | sort\n    echo\n\n    if test -n \"$ac_subst_files\"; then\n      $as_echo \"## ------------------- ##\n## File substitutions. ##\n## ------------------- ##\"\n      echo\n      for ac_var in $ac_subst_files\n      do\n\teval ac_val=\\$$ac_var\n\tcase $ac_val in\n\t*\\'\\''*) ac_val=`$as_echo \"$ac_val\" | sed \"s/'\\''/'\\''\\\\\\\\\\\\\\\\'\\'''\\''/g\"`;;\n\tesac\n\t$as_echo \"$ac_var='\\''$ac_val'\\''\"\n      done | sort\n      echo\n    fi\n\n    if test -s confdefs.h; then\n      $as_echo \"## ----------- ##\n## confdefs.h. ##\n## ----------- ##\"\n      echo\n      cat confdefs.h\n      echo\n    fi\n    test \"$ac_signal\" != 0 &&\n      $as_echo \"$as_me: caught signal $ac_signal\"\n    $as_echo \"$as_me: exit $exit_status\"\n  } >&5\n  rm -f core *.core core.conftest.* &&\n    rm -f -r conftest* confdefs* conf$$* $ac_clean_files &&\n    exit $exit_status\n' 0\nfor ac_signal in 1 2 13 15; do\n  trap 'ac_signal='$ac_signal'; as_fn_exit 1' $ac_signal\ndone\nac_signal=0\n\n# confdefs.h avoids OS command line length limits that DEFS can exceed.\nrm -f -r conftest* confdefs.h\n\n$as_echo \"/* confdefs.h */\" > confdefs.h\n\n# Predefined preprocessor variables.\n\ncat >>confdefs.h <<_ACEOF\n#define PACKAGE_NAME \"$PACKAGE_NAME\"\n_ACEOF\n\ncat >>confdefs.h <<_ACEOF\n#define PACKAGE_TARNAME \"$PACKAGE_TARNAME\"\n_ACEOF\n\ncat >>confdefs.h <<_ACEOF\n#define PACKAGE_VERSION \"$PACKAGE_VERSION\"\n_ACEOF\n\ncat >>confdefs.h <<_ACEOF\n#define PACKAGE_STRING \"$PACKAGE_STRING\"\n_ACEOF\n\ncat >>confdefs.h <<_ACEOF\n#define PACKAGE_BUGREPORT \"$PACKAGE_BUGREPORT\"\n_ACEOF\n\ncat >>confdefs.h <<_ACEOF\n#define PACKAGE_URL \"$PACKAGE_URL\"\n_ACEOF\n\n\n# Let the site file select an alternate cache file if it wants to.\n# Prefer an explicitly selected file to automatically selected ones.\nac_site_file1=NONE\nac_site_file2=NONE\nif test -n \"$CONFIG_SITE\"; then\n  # We do not want a PATH search for config.site.\n  case $CONFIG_SITE in #((\n    -*)  ac_site_file1=./$CONFIG_SITE;;\n    */*) ac_site_file1=$CONFIG_SITE;;\n    *)   ac_site_file1=./$CONFIG_SITE;;\n  esac\nelif test \"x$prefix\" != xNONE; then\n  ac_site_file1=$prefix/share/config.site\n  ac_site_file2=$prefix/etc/config.site\nelse\n  ac_site_file1=$ac_default_prefix/share/config.site\n  ac_site_file2=$ac_default_prefix/etc/config.site\nfi\nfor ac_site_file in \"$ac_site_file1\" \"$ac_site_file2\"\ndo\n  test \"x$ac_site_file\" = xNONE && continue\n  if test /dev/null != \"$ac_site_file\" && test -r \"$ac_site_file\"; then\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: loading site script $ac_site_file\" >&5\n$as_echo \"$as_me: loading site script $ac_site_file\" >&6;}\n    sed 's/^/| /' \"$ac_site_file\" >&5\n    . \"$ac_site_file\" \\\n      || { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\nas_fn_error $? \"failed to load site script $ac_site_file\nSee \\`config.log' for more details\" \"$LINENO\" 5; }\n  fi\ndone\n\nif test -r \"$cache_file\"; then\n  # Some versions of bash will fail to source /dev/null (special files\n  # actually), so we avoid doing that.  DJGPP emulates it as a regular file.\n  if test /dev/null != \"$cache_file\" && test -f \"$cache_file\"; then\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: loading cache $cache_file\" >&5\n$as_echo \"$as_me: loading cache $cache_file\" >&6;}\n    case $cache_file in\n      [\\\\/]* | ?:[\\\\/]* ) . \"$cache_file\";;\n      *)                      . \"./$cache_file\";;\n    esac\n  fi\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: creating cache $cache_file\" >&5\n$as_echo \"$as_me: creating cache $cache_file\" >&6;}\n  >$cache_file\nfi\n\n# Check that the precious variables saved in the cache have kept the same\n# value.\nac_cache_corrupted=false\nfor ac_var in $ac_precious_vars; do\n  eval ac_old_set=\\$ac_cv_env_${ac_var}_set\n  eval ac_new_set=\\$ac_env_${ac_var}_set\n  eval ac_old_val=\\$ac_cv_env_${ac_var}_value\n  eval ac_new_val=\\$ac_env_${ac_var}_value\n  case $ac_old_set,$ac_new_set in\n    set,)\n      { $as_echo \"$as_me:${as_lineno-$LINENO}: error: \\`$ac_var' was set to \\`$ac_old_val' in the previous run\" >&5\n$as_echo \"$as_me: error: \\`$ac_var' was set to \\`$ac_old_val' in the previous run\" >&2;}\n      ac_cache_corrupted=: ;;\n    ,set)\n      { $as_echo \"$as_me:${as_lineno-$LINENO}: error: \\`$ac_var' was not set in the previous run\" >&5\n$as_echo \"$as_me: error: \\`$ac_var' was not set in the previous run\" >&2;}\n      ac_cache_corrupted=: ;;\n    ,);;\n    *)\n      if test \"x$ac_old_val\" != \"x$ac_new_val\"; then\n\t# differences in whitespace do not lead to failure.\n\tac_old_val_w=`echo x $ac_old_val`\n\tac_new_val_w=`echo x $ac_new_val`\n\tif test \"$ac_old_val_w\" != \"$ac_new_val_w\"; then\n\t  { $as_echo \"$as_me:${as_lineno-$LINENO}: error: \\`$ac_var' has changed since the previous run:\" >&5\n$as_echo \"$as_me: error: \\`$ac_var' has changed since the previous run:\" >&2;}\n\t  ac_cache_corrupted=:\n\telse\n\t  { $as_echo \"$as_me:${as_lineno-$LINENO}: warning: ignoring whitespace changes in \\`$ac_var' since the previous run:\" >&5\n$as_echo \"$as_me: warning: ignoring whitespace changes in \\`$ac_var' since the previous run:\" >&2;}\n\t  eval $ac_var=\\$ac_old_val\n\tfi\n\t{ $as_echo \"$as_me:${as_lineno-$LINENO}:   former value:  \\`$ac_old_val'\" >&5\n$as_echo \"$as_me:   former value:  \\`$ac_old_val'\" >&2;}\n\t{ $as_echo \"$as_me:${as_lineno-$LINENO}:   current value: \\`$ac_new_val'\" >&5\n$as_echo \"$as_me:   current value: \\`$ac_new_val'\" >&2;}\n      fi;;\n  esac\n  # Pass precious variables to config.status.\n  if test \"$ac_new_set\" = set; then\n    case $ac_new_val in\n    *\\'*) ac_arg=$ac_var=`$as_echo \"$ac_new_val\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"` ;;\n    *) ac_arg=$ac_var=$ac_new_val ;;\n    esac\n    case \" $ac_configure_args \" in\n      *\" '$ac_arg' \"*) ;; # Avoid dups.  Use of quotes ensures accuracy.\n      *) as_fn_append ac_configure_args \" '$ac_arg'\" ;;\n    esac\n  fi\ndone\nif $ac_cache_corrupted; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: error: changes in the environment can compromise the build\" >&5\n$as_echo \"$as_me: error: changes in the environment can compromise the build\" >&2;}\n  as_fn_error $? \"run \\`make distclean' and/or \\`rm $cache_file' and start over\" \"$LINENO\" 5\nfi\n## -------------------- ##\n## Main body of script. ##\n## -------------------- ##\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n\n\n\n# we'll need sed and awk for some of the version commands\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for a sed that does not truncate output\" >&5\n$as_echo_n \"checking for a sed that does not truncate output... \" >&6; }\nif ${ac_cv_path_SED+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n            ac_script=s/aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa/bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb/\n     for ac_i in 1 2 3 4 5 6 7; do\n       ac_script=\"$ac_script$as_nl$ac_script\"\n     done\n     echo \"$ac_script\" 2>/dev/null | sed 99q >conftest.sed\n     { ac_script=; unset ac_script;}\n     if test -z \"$SED\"; then\n  ac_path_SED_found=false\n  # Loop through the user's path and test for each of PROGNAME-LIST\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_prog in sed gsed; do\n    for ac_exec_ext in '' $ac_executable_extensions; do\n      ac_path_SED=\"$as_dir/$ac_prog$ac_exec_ext\"\n      as_fn_executable_p \"$ac_path_SED\" || continue\n# Check for GNU ac_path_SED and select it if it is found.\n  # Check for GNU $ac_path_SED\ncase `\"$ac_path_SED\" --version 2>&1` in\n*GNU*)\n  ac_cv_path_SED=\"$ac_path_SED\" ac_path_SED_found=:;;\n*)\n  ac_count=0\n  $as_echo_n 0123456789 >\"conftest.in\"\n  while :\n  do\n    cat \"conftest.in\" \"conftest.in\" >\"conftest.tmp\"\n    mv \"conftest.tmp\" \"conftest.in\"\n    cp \"conftest.in\" \"conftest.nl\"\n    $as_echo '' >> \"conftest.nl\"\n    \"$ac_path_SED\" -f conftest.sed < \"conftest.nl\" >\"conftest.out\" 2>/dev/null || break\n    diff \"conftest.out\" \"conftest.nl\" >/dev/null 2>&1 || break\n    as_fn_arith $ac_count + 1 && ac_count=$as_val\n    if test $ac_count -gt ${ac_path_SED_max-0}; then\n      # Best one so far, save it but keep looking for a better one\n      ac_cv_path_SED=\"$ac_path_SED\"\n      ac_path_SED_max=$ac_count\n    fi\n    # 10*(2^10) chars as input seems more than enough\n    test $ac_count -gt 10 && break\n  done\n  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;\nesac\n\n      $ac_path_SED_found && break 3\n    done\n  done\n  done\nIFS=$as_save_IFS\n  if test -z \"$ac_cv_path_SED\"; then\n    as_fn_error $? \"no acceptable sed could be found in \\$PATH\" \"$LINENO\" 5\n  fi\nelse\n  ac_cv_path_SED=$SED\nfi\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_SED\" >&5\n$as_echo \"$ac_cv_path_SED\" >&6; }\n SED=\"$ac_cv_path_SED\"\n  rm -f conftest.sed\n\nfor ac_prog in gawk mawk nawk awk\ndo\n  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\nset dummy $ac_prog; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_AWK+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$AWK\"; then\n  ac_cv_prog_AWK=\"$AWK\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_AWK=\"$ac_prog\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nAWK=$ac_cv_prog_AWK\nif test -n \"$AWK\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $AWK\" >&5\n$as_echo \"$AWK\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n  test -n \"$AWK\" && break\ndone\n\n\n# CITUS_NAME definition\n\ncat >>confdefs.h <<_ACEOF\n#define CITUS_NAME \"$PACKAGE_NAME\"\n_ACEOF\n\n\ncase $PACKAGE_NAME in\n  'Citus Enterprise') citus_edition=enterprise ;;\n               Citus) citus_edition=community ;;\n                   *) as_fn_error $? \"Unrecognized package name.\" \"$LINENO\" 5 ;;\nesac\n\n# CITUS_EDITION definition\n\ncat >>confdefs.h <<_ACEOF\n#define CITUS_EDITION \"$citus_edition\"\n_ACEOF\n\n\n# CITUS_MAJORVERSION definition\nCITUS_MAJORVERSION=`expr \"$PACKAGE_VERSION\" : '\\([0-9][0-9]*\\.[0-9][0-9]*\\)'`\n\ncat >>confdefs.h <<_ACEOF\n#define CITUS_MAJORVERSION \"$CITUS_MAJORVERSION\"\n_ACEOF\n\n\n# CITUS_VERSION definition\n\n\n\n# Check whether --with-extra-version was given.\nif test \"${with_extra_version+set}\" = set; then :\n  withval=$with_extra_version;\n  case $withval in\n    yes)\n      as_fn_error $? \"argument required for --with-extra-version option\" \"$LINENO\" 5\n      ;;\n    no)\n      as_fn_error $? \"argument required for --with-extra-version option\" \"$LINENO\" 5\n      ;;\n    *)\n      CITUS_VERSION=\"$PACKAGE_VERSION$withval\"\n      ;;\n  esac\n\nelse\n  CITUS_VERSION=\"$PACKAGE_VERSION\"\nfi\n\n\n\ncat >>confdefs.h <<_ACEOF\n#define CITUS_VERSION \"$CITUS_VERSION\"\n_ACEOF\n\n\n# CITUS_VERSION_NUM definition\n# awk -F is a regex on some platforms, and not on others, so make \".\" a tab\nCITUS_VERSION_NUM=\"`echo \"$PACKAGE_VERSION\" | sed 's/[A-Za-z].*$//' |\ntr '.' '\t' |\n$AWK '{printf \"%d%02d%02d\", $1, $2, (NF >= 3) ? $3 : 0}'`\"\n\ncat >>confdefs.h <<_ACEOF\n#define CITUS_VERSION_NUM $CITUS_VERSION_NUM\n_ACEOF\n\n\n# CITUS_EXTENSIONVERSION definition\nCITUS_EXTENSIONVERSION=\"`grep '^default_version' $srcdir/src/backend/distributed/citus.control | cut -d\\' -f2`\"\n\ncat >>confdefs.h <<_ACEOF\n#define CITUS_EXTENSIONVERSION \"$CITUS_EXTENSIONVERSION\"\n_ACEOF\n\n\n# Re-check for flex. That allows to compile citus against a postgres\n# which was built without flex available (possible because generated\n# files are included)\n# Extract the first word of \"flex\", so it can be a program name with args.\nset dummy flex; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_path_FLEX+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  case $FLEX in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_FLEX=\"$FLEX\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_path_FLEX=\"$as_dir/$ac_word$ac_exec_ext\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  ;;\nesac\nfi\nFLEX=$ac_cv_path_FLEX\nif test -n \"$FLEX\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $FLEX\" >&5\n$as_echo \"$FLEX\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n\n# Locate pg_config binary\n\n\n\nif test -z \"$PG_CONFIG\"; then\n  # Extract the first word of \"pg_config\", so it can be a program name with args.\nset dummy pg_config; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_path_PG_CONFIG+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  case $PG_CONFIG in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_PG_CONFIG=\"$PG_CONFIG\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_path_PG_CONFIG=\"$as_dir/$ac_word$ac_exec_ext\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  ;;\nesac\nfi\nPG_CONFIG=$ac_cv_path_PG_CONFIG\nif test -n \"$PG_CONFIG\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $PG_CONFIG\" >&5\n$as_echo \"$PG_CONFIG\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\nfi\n\nif test -z \"$PG_CONFIG\"; then\n   as_fn_error $? \"Could not find pg_config. Set PG_CONFIG or PATH.\" \"$LINENO\" 5\nfi\n\n# check we're building against a supported version of PostgreSQL\ncitusac_pg_config_version=$($PG_CONFIG --version 2>/dev/null)\nversion_num=$(echo \"$citusac_pg_config_version\"|\n              $SED -e 's/^PostgreSQL \\([0-9]*\\)\\(\\.[0-9]*\\)\\{0,1\\}\\(.*\\)$/\\1\\2/')\n\n# if PostgreSQL version starts with two digits, the major version is those digits\nversion_num=$(echo \"$version_num\"| $SED -e 's/^\\([0-9]\\{2\\}\\)\\(.*\\)$/\\1/')\n\nif test -z \"$version_num\"; then\n  as_fn_error $? \"Could not detect PostgreSQL version from pg_config.\" \"$LINENO\" 5\nfi\n\n\n\n\n# Check whether --with-pg-version-check was given.\nif test \"${with_pg_version_check+set}\" = set; then :\n  withval=$with_pg_version_check;\n  case $withval in\n    yes)\n      :\n      ;;\n    no)\n      :\n      ;;\n    *)\n      as_fn_error $? \"no argument expected for --with-pg-version-check option\" \"$LINENO\" 5\n      ;;\n  esac\n\nelse\n  with_pg_version_check=yes\n\nfi\n\n\n\n\nif test \"$with_pg_version_check\" = no; then\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: building against PostgreSQL $version_num (skipped compatibility check)\" >&5\n$as_echo \"$as_me: building against PostgreSQL $version_num (skipped compatibility check)\" >&6;}\nelif test \"$version_num\" != '14' -a \"$version_num\" != '15' -a  \"$version_num\" != '16'; then\n   as_fn_error $? \"Citus is not compatible with the detected PostgreSQL version ${version_num}.\" \"$LINENO\" 5\nelse\n   { $as_echo \"$as_me:${as_lineno-$LINENO}: building against PostgreSQL $version_num\" >&5\n$as_echo \"$as_me: building against PostgreSQL $version_num\" >&6;}\nfi;\n\n# Check whether we're building inside the source tree, if not, prepare\n# the build directory.\nif test \"$srcdir\" -ef '.' ; then\n  vpath_build=no\nelse\n  vpath_build=yes\n  $as_echo_n \"preparing build tree... \" >&6\n  citusac_abs_top_srcdir=`cd \"$srcdir\" && pwd`\n  $SHELL \"$citusac_abs_top_srcdir/prep_buildtree\" \"$citusac_abs_top_srcdir\" \".\" \\\n      || as_fn_error $? \"failed\" \"$LINENO\" 5\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: done\" >&5\n$as_echo \"done\" >&6; }\nfi\n\n\n# Allow to overwrite the C compiler, default to the one postgres was\n# compiled with. We don't want autoconf's default CFLAGS though, so save\n# those.\nSAVE_CFLAGS=\"$CFLAGS\"\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\nif test -n \"$ac_tool_prefix\"; then\n  for ac_prog in $($PG_CONFIG --cc)\n  do\n    # Extract the first word of \"$ac_tool_prefix$ac_prog\", so it can be a program name with args.\nset dummy $ac_tool_prefix$ac_prog; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_CC+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$CC\"; then\n  ac_cv_prog_CC=\"$CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_CC=\"$ac_tool_prefix$ac_prog\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nCC=$ac_cv_prog_CC\nif test -n \"$CC\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $CC\" >&5\n$as_echo \"$CC\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n    test -n \"$CC\" && break\n  done\nfi\nif test -z \"$CC\"; then\n  ac_ct_CC=$CC\n  for ac_prog in $($PG_CONFIG --cc)\ndo\n  # Extract the first word of \"$ac_prog\", so it can be a program name with args.\nset dummy $ac_prog; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_prog_ac_ct_CC+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -n \"$ac_ct_CC\"; then\n  ac_cv_prog_ac_ct_CC=\"$ac_ct_CC\" # Let the user override the test.\nelse\nas_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_prog_ac_ct_CC=\"$ac_prog\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\nfi\nfi\nac_ct_CC=$ac_cv_prog_ac_ct_CC\nif test -n \"$ac_ct_CC\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_ct_CC\" >&5\n$as_echo \"$ac_ct_CC\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n  test -n \"$ac_ct_CC\" && break\ndone\n\n  if test \"x$ac_ct_CC\" = x; then\n    CC=\"\"\n  else\n    case $cross_compiling:$ac_tool_warned in\nyes:)\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: using cross tools not prefixed with host triplet\" >&5\n$as_echo \"$as_me: WARNING: using cross tools not prefixed with host triplet\" >&2;}\nac_tool_warned=yes ;;\nesac\n    CC=$ac_ct_CC\n  fi\nfi\n\n\ntest -z \"$CC\" && { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\nas_fn_error $? \"no acceptable C compiler found in \\$PATH\nSee \\`config.log' for more details\" \"$LINENO\" 5; }\n\n# Provide some information about the compiler.\n$as_echo \"$as_me:${as_lineno-$LINENO}: checking for C compiler version\" >&5\nset X $ac_compile\nac_compiler=$2\nfor ac_option in --version -v -V -qversion; do\n  { { ac_try=\"$ac_compiler $ac_option >&5\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_compiler $ac_option >&5\") 2>conftest.err\n  ac_status=$?\n  if test -s conftest.err; then\n    sed '10a\\\n... rest of stderr output deleted ...\n         10q' conftest.err >conftest.er1\n    cat conftest.er1 >&5\n  fi\n  rm -f conftest.er1 conftest.err\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }\ndone\n\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nac_clean_files_save=$ac_clean_files\nac_clean_files=\"$ac_clean_files a.out a.out.dSYM a.exe b.out\"\n# Try to create an executable without -o first, disregard a.out.\n# It will help us diagnose broken compilers, and finding out an intuition\n# of exeext.\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether the C compiler works\" >&5\n$as_echo_n \"checking whether the C compiler works... \" >&6; }\nac_link_default=`$as_echo \"$ac_link\" | sed 's/ -o *conftest[^ ]*//'`\n\n# The possible output files:\nac_files=\"a.out conftest.exe conftest a.exe a_out.exe b.out conftest.*\"\n\nac_rmfiles=\nfor ac_file in $ac_files\ndo\n  case $ac_file in\n    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj ) ;;\n    * ) ac_rmfiles=\"$ac_rmfiles $ac_file\";;\n  esac\ndone\nrm -f $ac_rmfiles\n\nif { { ac_try=\"$ac_link_default\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_link_default\") 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; then :\n  # Autoconf-2.13 could set the ac_cv_exeext variable to `no'.\n# So ignore a value of `no', otherwise this would lead to `EXEEXT = no'\n# in a Makefile.  We should not override ac_cv_exeext if it was cached,\n# so that the user can short-circuit this test for compilers unknown to\n# Autoconf.\nfor ac_file in $ac_files ''\ndo\n  test -f \"$ac_file\" || continue\n  case $ac_file in\n    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj )\n\t;;\n    [ab].out )\n\t# We found the default executable, but exeext='' is most\n\t# certainly right.\n\tbreak;;\n    *.* )\n\tif test \"${ac_cv_exeext+set}\" = set && test \"$ac_cv_exeext\" != no;\n\tthen :; else\n\t   ac_cv_exeext=`expr \"$ac_file\" : '[^.]*\\(\\..*\\)'`\n\tfi\n\t# We set ac_cv_exeext here because the later test for it is not\n\t# safe: cross compilers may not add the suffix if given an `-o'\n\t# argument, so we may need to know it at that point already.\n\t# Even if this section looks crufty: it has the advantage of\n\t# actually working.\n\tbreak;;\n    * )\n\tbreak;;\n  esac\ndone\ntest \"$ac_cv_exeext\" = no && ac_cv_exeext=\n\nelse\n  ac_file=''\nfi\nif test -z \"$ac_file\"; then :\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\n$as_echo \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n{ { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\nas_fn_error 77 \"C compiler cannot create executables\nSee \\`config.log' for more details\" \"$LINENO\" 5; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: yes\" >&5\n$as_echo \"yes\" >&6; }\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for C compiler default output file name\" >&5\n$as_echo_n \"checking for C compiler default output file name... \" >&6; }\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_file\" >&5\n$as_echo \"$ac_file\" >&6; }\nac_exeext=$ac_cv_exeext\n\nrm -f -r a.out a.out.dSYM a.exe conftest$ac_cv_exeext b.out\nac_clean_files=$ac_clean_files_save\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for suffix of executables\" >&5\n$as_echo_n \"checking for suffix of executables... \" >&6; }\nif { { ac_try=\"$ac_link\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_link\") 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; then :\n  # If both `conftest.exe' and `conftest' are `present' (well, observable)\n# catch `conftest.exe'.  For instance with Cygwin, `ls conftest' will\n# work properly (i.e., refer to `conftest.exe'), while it won't with\n# `rm'.\nfor ac_file in conftest.exe conftest conftest.*; do\n  test -f \"$ac_file\" || continue\n  case $ac_file in\n    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM | *.o | *.obj ) ;;\n    *.* ) ac_cv_exeext=`expr \"$ac_file\" : '[^.]*\\(\\..*\\)'`\n\t  break;;\n    * ) break;;\n  esac\ndone\nelse\n  { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\nas_fn_error $? \"cannot compute suffix of executables: cannot compile and link\nSee \\`config.log' for more details\" \"$LINENO\" 5; }\nfi\nrm -f conftest conftest$ac_cv_exeext\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_exeext\" >&5\n$as_echo \"$ac_cv_exeext\" >&6; }\n\nrm -f conftest.$ac_ext\nEXEEXT=$ac_cv_exeext\nac_exeext=$EXEEXT\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <stdio.h>\nint\nmain ()\n{\nFILE *f = fopen (\"conftest.out\", \"w\");\n return ferror (f) || fclose (f) != 0;\n\n  ;\n  return 0;\n}\n_ACEOF\nac_clean_files=\"$ac_clean_files conftest.out\"\n# Check that the compiler produces executables we can run.  If not, either\n# the compiler is broken, or we cross compile.\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether we are cross compiling\" >&5\n$as_echo_n \"checking whether we are cross compiling... \" >&6; }\nif test \"$cross_compiling\" != yes; then\n  { { ac_try=\"$ac_link\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_link\") 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }\n  if { ac_try='./conftest$ac_cv_exeext'\n  { { case \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_try\") 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; }; then\n    cross_compiling=no\n  else\n    if test \"$cross_compiling\" = maybe; then\n\tcross_compiling=yes\n    else\n\t{ { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\nas_fn_error $? \"cannot run C compiled programs.\nIf you meant to cross compile, use \\`--host'.\nSee \\`config.log' for more details\" \"$LINENO\" 5; }\n    fi\n  fi\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $cross_compiling\" >&5\n$as_echo \"$cross_compiling\" >&6; }\n\nrm -f conftest.$ac_ext conftest$ac_cv_exeext conftest.out\nac_clean_files=$ac_clean_files_save\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for suffix of object files\" >&5\n$as_echo_n \"checking for suffix of object files... \" >&6; }\nif ${ac_cv_objext+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nrm -f conftest.o conftest.obj\nif { { ac_try=\"$ac_compile\"\ncase \"(($ac_try\" in\n  *\\\"* | *\\`* | *\\\\*) ac_try_echo=\\$ac_try;;\n  *) ac_try_echo=$ac_try;;\nesac\neval ac_try_echo=\"\\\"\\$as_me:${as_lineno-$LINENO}: $ac_try_echo\\\"\"\n$as_echo \"$ac_try_echo\"; } >&5\n  (eval \"$ac_compile\") 2>&5\n  ac_status=$?\n  $as_echo \"$as_me:${as_lineno-$LINENO}: \\$? = $ac_status\" >&5\n  test $ac_status = 0; }; then :\n  for ac_file in conftest.o conftest.obj conftest.*; do\n  test -f \"$ac_file\" || continue;\n  case $ac_file in\n    *.$ac_ext | *.xcoff | *.tds | *.d | *.pdb | *.xSYM | *.bb | *.bbg | *.map | *.inf | *.dSYM ) ;;\n    *) ac_cv_objext=`expr \"$ac_file\" : '.*\\.\\(.*\\)'`\n       break;;\n  esac\ndone\nelse\n  $as_echo \"$as_me: failed program was:\" >&5\nsed 's/^/| /' conftest.$ac_ext >&5\n\n{ { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\nas_fn_error $? \"cannot compute suffix of object files: cannot compile\nSee \\`config.log' for more details\" \"$LINENO\" 5; }\nfi\nrm -f conftest.$ac_cv_objext conftest.$ac_ext\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_objext\" >&5\n$as_echo \"$ac_cv_objext\" >&6; }\nOBJEXT=$ac_cv_objext\nac_objext=$OBJEXT\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether we are using the GNU C compiler\" >&5\n$as_echo_n \"checking whether we are using the GNU C compiler... \" >&6; }\nif ${ac_cv_c_compiler_gnu+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n#ifndef __GNUC__\n       choke me\n#endif\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_compiler_gnu=yes\nelse\n  ac_compiler_gnu=no\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nac_cv_c_compiler_gnu=$ac_compiler_gnu\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_c_compiler_gnu\" >&5\n$as_echo \"$ac_cv_c_compiler_gnu\" >&6; }\nif test $ac_compiler_gnu = yes; then\n  GCC=yes\nelse\n  GCC=\nfi\nac_test_CFLAGS=${CFLAGS+set}\nac_save_CFLAGS=$CFLAGS\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC accepts -g\" >&5\n$as_echo_n \"checking whether $CC accepts -g... \" >&6; }\nif ${ac_cv_prog_cc_g+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_save_c_werror_flag=$ac_c_werror_flag\n   ac_c_werror_flag=yes\n   ac_cv_prog_cc_g=no\n   CFLAGS=\"-g\"\n   cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_cv_prog_cc_g=yes\nelse\n  CFLAGS=\"\"\n      cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n\nelse\n  ac_c_werror_flag=$ac_save_c_werror_flag\n\t CFLAGS=\"-g\"\n\t cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_cv_prog_cc_g=yes\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n   ac_c_werror_flag=$ac_save_c_werror_flag\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_g\" >&5\n$as_echo \"$ac_cv_prog_cc_g\" >&6; }\nif test \"$ac_test_CFLAGS\" = set; then\n  CFLAGS=$ac_save_CFLAGS\nelif test $ac_cv_prog_cc_g = yes; then\n  if test \"$GCC\" = yes; then\n    CFLAGS=\"-g -O2\"\n  else\n    CFLAGS=\"-g\"\n  fi\nelse\n  if test \"$GCC\" = yes; then\n    CFLAGS=\"-O2\"\n  else\n    CFLAGS=\n  fi\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $CC option to accept ISO C89\" >&5\n$as_echo_n \"checking for $CC option to accept ISO C89... \" >&6; }\nif ${ac_cv_prog_cc_c89+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_cv_prog_cc_c89=no\nac_save_CC=$CC\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <stdarg.h>\n#include <stdio.h>\nstruct stat;\n/* Most of the following tests are stolen from RCS 5.7's src/conf.sh.  */\nstruct buf { int x; };\nFILE * (*rcsopen) (struct buf *, struct stat *, int);\nstatic char *e (p, i)\n     char **p;\n     int i;\n{\n  return p[i];\n}\nstatic char *f (char * (*g) (char **, int), char **p, ...)\n{\n  char *s;\n  va_list v;\n  va_start (v,p);\n  s = g (p, va_arg (v,int));\n  va_end (v);\n  return s;\n}\n\n/* OSF 4.0 Compaq cc is some sort of almost-ANSI by default.  It has\n   function prototypes and stuff, but not '\\xHH' hex character constants.\n   These don't provoke an error unfortunately, instead are silently treated\n   as 'x'.  The following induces an error, until -std is added to get\n   proper ANSI mode.  Curiously '\\x00'!='x' always comes out true, for an\n   array size at least.  It's necessary to write '\\x00'==0 to get something\n   that's true only with -std.  */\nint osf4_cc_array ['\\x00' == 0 ? 1 : -1];\n\n/* IBM C 6 for AIX is almost-ANSI by default, but it replaces macro parameters\n   inside strings and character constants.  */\n#define FOO(x) 'x'\nint xlc6_cc_array[FOO(a) == 'x' ? 1 : -1];\n\nint test (int i, double x);\nstruct s1 {int (*f) (int a);};\nstruct s2 {int (*f) (double a);};\nint pairnames (int, char **, FILE *(*)(struct buf *, struct stat *, int), int, int);\nint argc;\nchar **argv;\nint\nmain ()\n{\nreturn f (e, argv, 0) != argv[0]  ||  f (e, argv, 1) != argv[1];\n  ;\n  return 0;\n}\n_ACEOF\nfor ac_arg in '' -qlanglvl=extc89 -qlanglvl=ansi -std \\\n\t-Ae \"-Aa -D_HPUX_SOURCE\" \"-Xc -D__EXTENSIONS__\"\ndo\n  CC=\"$ac_save_CC $ac_arg\"\n  if ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_cv_prog_cc_c89=$ac_arg\nfi\nrm -f core conftest.err conftest.$ac_objext\n  test \"x$ac_cv_prog_cc_c89\" != \"xno\" && break\ndone\nrm -f conftest.$ac_ext\nCC=$ac_save_CC\n\nfi\n# AC_CACHE_VAL\ncase \"x$ac_cv_prog_cc_c89\" in\n  x)\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: none needed\" >&5\n$as_echo \"none needed\" >&6; } ;;\n  xno)\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: unsupported\" >&5\n$as_echo \"unsupported\" >&6; } ;;\n  *)\n    CC=\"$CC $ac_cv_prog_cc_c89\"\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_prog_cc_c89\" >&5\n$as_echo \"$ac_cv_prog_cc_c89\" >&6; } ;;\nesac\nif test \"x$ac_cv_prog_cc_c89\" != xno; then :\n\nfi\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\nCFLAGS=\"$SAVE_CFLAGS\"\n\nhost_guess=`${SHELL} $srcdir/config/config.guess`\n\n# Create compiler version string\nif test x\"$GCC\" = x\"yes\" ; then\n  cc_string=`${CC} --version | sed q`\n  case $cc_string in [A-Za-z]*) ;; *) cc_string=\"GCC $cc_string\";; esac\nelif test x\"$SUN_STUDIO_CC\" = x\"yes\" ; then\n  cc_string=`${CC} -V 2>&1 | sed q`\nelse\n  cc_string=$CC\nfi\n\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking how to run the C preprocessor\" >&5\n$as_echo_n \"checking how to run the C preprocessor... \" >&6; }\n# On Suns, sometimes $CPP names a directory.\nif test -n \"$CPP\" && test -d \"$CPP\"; then\n  CPP=\nfi\nif test -z \"$CPP\"; then\n  if ${ac_cv_prog_CPP+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n      # Double quotes because CPP needs to be expanded\n    for CPP in \"$CC -E\" \"$CC -E -traditional-cpp\" \"/lib/cpp\"\n    do\n      ac_preproc_ok=false\nfor ac_c_preproc_warn_flag in '' yes\ndo\n  # Use a header file that comes with gcc, so configuring glibc\n  # with a fresh cross-compiler works.\n  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since\n  # <limits.h> exists even on freestanding compilers.\n  # On the NeXT, cc -E runs the code through the compiler's parser,\n  # not just through cpp. \"Syntax error\" is here to catch this case.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#ifdef __STDC__\n# include <limits.h>\n#else\n# include <assert.h>\n#endif\n\t\t     Syntax error\n_ACEOF\nif ac_fn_c_try_cpp \"$LINENO\"; then :\n\nelse\n  # Broken: fails on valid input.\ncontinue\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n\n  # OK, works on sane cases.  Now check whether nonexistent headers\n  # can be detected and how.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <ac_nonexistent.h>\n_ACEOF\nif ac_fn_c_try_cpp \"$LINENO\"; then :\n  # Broken: success on invalid input.\ncontinue\nelse\n  # Passes both tests.\nac_preproc_ok=:\nbreak\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n\ndone\n# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.\nrm -f conftest.i conftest.err conftest.$ac_ext\nif $ac_preproc_ok; then :\n  break\nfi\n\n    done\n    ac_cv_prog_CPP=$CPP\n\nfi\n  CPP=$ac_cv_prog_CPP\nelse\n  ac_cv_prog_CPP=$CPP\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $CPP\" >&5\n$as_echo \"$CPP\" >&6; }\nac_preproc_ok=false\nfor ac_c_preproc_warn_flag in '' yes\ndo\n  # Use a header file that comes with gcc, so configuring glibc\n  # with a fresh cross-compiler works.\n  # Prefer <limits.h> to <assert.h> if __STDC__ is defined, since\n  # <limits.h> exists even on freestanding compilers.\n  # On the NeXT, cc -E runs the code through the compiler's parser,\n  # not just through cpp. \"Syntax error\" is here to catch this case.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#ifdef __STDC__\n# include <limits.h>\n#else\n# include <assert.h>\n#endif\n\t\t     Syntax error\n_ACEOF\nif ac_fn_c_try_cpp \"$LINENO\"; then :\n\nelse\n  # Broken: fails on valid input.\ncontinue\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n\n  # OK, works on sane cases.  Now check whether nonexistent headers\n  # can be detected and how.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <ac_nonexistent.h>\n_ACEOF\nif ac_fn_c_try_cpp \"$LINENO\"; then :\n  # Broken: success on invalid input.\ncontinue\nelse\n  # Passes both tests.\nac_preproc_ok=:\nbreak\nfi\nrm -f conftest.err conftest.i conftest.$ac_ext\n\ndone\n# Because of `break', _AC_PREPROC_IFELSE's cleaning code was skipped.\nrm -f conftest.i conftest.err conftest.$ac_ext\nif $ac_preproc_ok; then :\n\nelse\n  { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\nas_fn_error $? \"C preprocessor \\\"$CPP\\\" fails sanity check\nSee \\`config.log' for more details\" \"$LINENO\" 5; }\nfi\n\nac_ext=c\nac_cpp='$CPP $CPPFLAGS'\nac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'\nac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'\nac_compiler_gnu=$ac_cv_c_compiler_gnu\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for grep that handles long lines and -e\" >&5\n$as_echo_n \"checking for grep that handles long lines and -e... \" >&6; }\nif ${ac_cv_path_GREP+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if test -z \"$GREP\"; then\n  ac_path_GREP_found=false\n  # Loop through the user's path and test for each of PROGNAME-LIST\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_prog in grep ggrep; do\n    for ac_exec_ext in '' $ac_executable_extensions; do\n      ac_path_GREP=\"$as_dir/$ac_prog$ac_exec_ext\"\n      as_fn_executable_p \"$ac_path_GREP\" || continue\n# Check for GNU ac_path_GREP and select it if it is found.\n  # Check for GNU $ac_path_GREP\ncase `\"$ac_path_GREP\" --version 2>&1` in\n*GNU*)\n  ac_cv_path_GREP=\"$ac_path_GREP\" ac_path_GREP_found=:;;\n*)\n  ac_count=0\n  $as_echo_n 0123456789 >\"conftest.in\"\n  while :\n  do\n    cat \"conftest.in\" \"conftest.in\" >\"conftest.tmp\"\n    mv \"conftest.tmp\" \"conftest.in\"\n    cp \"conftest.in\" \"conftest.nl\"\n    $as_echo 'GREP' >> \"conftest.nl\"\n    \"$ac_path_GREP\" -e 'GREP$' -e '-(cannot match)-' < \"conftest.nl\" >\"conftest.out\" 2>/dev/null || break\n    diff \"conftest.out\" \"conftest.nl\" >/dev/null 2>&1 || break\n    as_fn_arith $ac_count + 1 && ac_count=$as_val\n    if test $ac_count -gt ${ac_path_GREP_max-0}; then\n      # Best one so far, save it but keep looking for a better one\n      ac_cv_path_GREP=\"$ac_path_GREP\"\n      ac_path_GREP_max=$ac_count\n    fi\n    # 10*(2^10) chars as input seems more than enough\n    test $ac_count -gt 10 && break\n  done\n  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;\nesac\n\n      $ac_path_GREP_found && break 3\n    done\n  done\n  done\nIFS=$as_save_IFS\n  if test -z \"$ac_cv_path_GREP\"; then\n    as_fn_error $? \"no acceptable grep could be found in $PATH$PATH_SEPARATOR/usr/xpg4/bin\" \"$LINENO\" 5\n  fi\nelse\n  ac_cv_path_GREP=$GREP\nfi\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_GREP\" >&5\n$as_echo \"$ac_cv_path_GREP\" >&6; }\n GREP=\"$ac_cv_path_GREP\"\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for egrep\" >&5\n$as_echo_n \"checking for egrep... \" >&6; }\nif ${ac_cv_path_EGREP+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if echo a | $GREP -E '(a|b)' >/dev/null 2>&1\n   then ac_cv_path_EGREP=\"$GREP -E\"\n   else\n     if test -z \"$EGREP\"; then\n  ac_path_EGREP_found=false\n  # Loop through the user's path and test for each of PROGNAME-LIST\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH$PATH_SEPARATOR/usr/xpg4/bin\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_prog in egrep; do\n    for ac_exec_ext in '' $ac_executable_extensions; do\n      ac_path_EGREP=\"$as_dir/$ac_prog$ac_exec_ext\"\n      as_fn_executable_p \"$ac_path_EGREP\" || continue\n# Check for GNU ac_path_EGREP and select it if it is found.\n  # Check for GNU $ac_path_EGREP\ncase `\"$ac_path_EGREP\" --version 2>&1` in\n*GNU*)\n  ac_cv_path_EGREP=\"$ac_path_EGREP\" ac_path_EGREP_found=:;;\n*)\n  ac_count=0\n  $as_echo_n 0123456789 >\"conftest.in\"\n  while :\n  do\n    cat \"conftest.in\" \"conftest.in\" >\"conftest.tmp\"\n    mv \"conftest.tmp\" \"conftest.in\"\n    cp \"conftest.in\" \"conftest.nl\"\n    $as_echo 'EGREP' >> \"conftest.nl\"\n    \"$ac_path_EGREP\" 'EGREP$' < \"conftest.nl\" >\"conftest.out\" 2>/dev/null || break\n    diff \"conftest.out\" \"conftest.nl\" >/dev/null 2>&1 || break\n    as_fn_arith $ac_count + 1 && ac_count=$as_val\n    if test $ac_count -gt ${ac_path_EGREP_max-0}; then\n      # Best one so far, save it but keep looking for a better one\n      ac_cv_path_EGREP=\"$ac_path_EGREP\"\n      ac_path_EGREP_max=$ac_count\n    fi\n    # 10*(2^10) chars as input seems more than enough\n    test $ac_count -gt 10 && break\n  done\n  rm -f conftest.in conftest.tmp conftest.nl conftest.out;;\nesac\n\n      $ac_path_EGREP_found && break 3\n    done\n  done\n  done\nIFS=$as_save_IFS\n  if test -z \"$ac_cv_path_EGREP\"; then\n    as_fn_error $? \"no acceptable egrep could be found in $PATH$PATH_SEPARATOR/usr/xpg4/bin\" \"$LINENO\" 5\n  fi\nelse\n  ac_cv_path_EGREP=$EGREP\nfi\n\n   fi\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_path_EGREP\" >&5\n$as_echo \"$ac_cv_path_EGREP\" >&6; }\n EGREP=\"$ac_cv_path_EGREP\"\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ANSI C header files\" >&5\n$as_echo_n \"checking for ANSI C header files... \" >&6; }\nif ${ac_cv_header_stdc+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <stdlib.h>\n#include <stdarg.h>\n#include <string.h>\n#include <float.h>\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  ac_cv_header_stdc=yes\nelse\n  ac_cv_header_stdc=no\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\n\nif test $ac_cv_header_stdc = yes; then\n  # SunOS 4.x string.h does not declare mem*, contrary to ANSI.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <string.h>\n\n_ACEOF\nif (eval \"$ac_cpp conftest.$ac_ext\") 2>&5 |\n  $EGREP \"memchr\" >/dev/null 2>&1; then :\n\nelse\n  ac_cv_header_stdc=no\nfi\nrm -f conftest*\n\nfi\n\nif test $ac_cv_header_stdc = yes; then\n  # ISC 2.0.2 stdlib.h does not declare free, contrary to ANSI.\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <stdlib.h>\n\n_ACEOF\nif (eval \"$ac_cpp conftest.$ac_ext\") 2>&5 |\n  $EGREP \"free\" >/dev/null 2>&1; then :\n\nelse\n  ac_cv_header_stdc=no\nfi\nrm -f conftest*\n\nfi\n\nif test $ac_cv_header_stdc = yes; then\n  # /bin/cc in Irix-4.0.5 gets non-ANSI ctype macros unless using -ansi.\n  if test \"$cross_compiling\" = yes; then :\n  :\nelse\n  cat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n#include <ctype.h>\n#include <stdlib.h>\n#if ((' ' & 0x0FF) == 0x020)\n# define ISLOWER(c) ('a' <= (c) && (c) <= 'z')\n# define TOUPPER(c) (ISLOWER(c) ? 'A' + ((c) - 'a') : (c))\n#else\n# define ISLOWER(c) \\\n\t\t   (('a' <= (c) && (c) <= 'i') \\\n\t\t     || ('j' <= (c) && (c) <= 'r') \\\n\t\t     || ('s' <= (c) && (c) <= 'z'))\n# define TOUPPER(c) (ISLOWER(c) ? ((c) | 0x40) : (c))\n#endif\n\n#define XOR(e, f) (((e) && !(f)) || (!(e) && (f)))\nint\nmain ()\n{\n  int i;\n  for (i = 0; i < 256; i++)\n    if (XOR (islower (i), ISLOWER (i))\n\t|| toupper (i) != TOUPPER (i))\n      return 2;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_run \"$LINENO\"; then :\n\nelse\n  ac_cv_header_stdc=no\nfi\nrm -f core *.core core.conftest.* gmon.out bb.out conftest$ac_exeext \\\n  conftest.$ac_objext conftest.beam conftest.$ac_ext\nfi\n\nfi\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_header_stdc\" >&5\n$as_echo \"$ac_cv_header_stdc\" >&6; }\nif test $ac_cv_header_stdc = yes; then\n\n$as_echo \"#define STDC_HEADERS 1\" >>confdefs.h\n\nfi\n\n# On IRIX 5.3, sys/types and inttypes.h are conflicting.\nfor ac_header in sys/types.h sys/stat.h stdlib.h string.h memory.h strings.h \\\n\t\t  inttypes.h stdint.h unistd.h\ndo :\n  as_ac_Header=`$as_echo \"ac_cv_header_$ac_header\" | $as_tr_sh`\nac_fn_c_check_header_compile \"$LINENO\" \"$ac_header\" \"$as_ac_Header\" \"$ac_includes_default\n\"\nif eval test \\\"x\\$\"$as_ac_Header\"\\\" = x\"yes\"; then :\n  cat >>confdefs.h <<_ACEOF\n#define `$as_echo \"HAVE_$ac_header\" | $as_tr_cpp` 1\n_ACEOF\n\nfi\n\ndone\n\n\n# The cast to long int works around a bug in the HP C Compiler\n# version HP92453-01 B.11.11.23709.GP, which incorrectly rejects\n# declarations like `int a3[[(sizeof (unsigned char)) >= 0]];'.\n# This bug is HP SR number 8606223364.\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking size of void *\" >&5\n$as_echo_n \"checking size of void *... \" >&6; }\nif ${ac_cv_sizeof_void_p+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  if ac_fn_c_compute_int \"$LINENO\" \"(long int) (sizeof (void *))\" \"ac_cv_sizeof_void_p\"        \"$ac_includes_default\"; then :\n\nelse\n  if test \"$ac_cv_type_void_p\" = yes; then\n     { { $as_echo \"$as_me:${as_lineno-$LINENO}: error: in \\`$ac_pwd':\" >&5\n$as_echo \"$as_me: error: in \\`$ac_pwd':\" >&2;}\nas_fn_error 77 \"cannot compute sizeof (void *)\nSee \\`config.log' for more details\" \"$LINENO\" 5; }\n   else\n     ac_cv_sizeof_void_p=0\n   fi\nfi\n\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_sizeof_void_p\" >&5\n$as_echo \"$ac_cv_sizeof_void_p\" >&6; }\n\n\n\ncat >>confdefs.h <<_ACEOF\n#define SIZEOF_VOID_P $ac_cv_sizeof_void_p\n_ACEOF\n\n\n\n\ncat >>confdefs.h <<_ACEOF\n#define CITUS_VERSION_STR \"$PACKAGE_NAME $CITUS_VERSION on $host_guess, compiled by $cc_string, `expr $ac_cv_sizeof_void_p \\* 8`-bit\"\n_ACEOF\n\n\n# Locate source and build directory of the postgres we're building\n# against. Can't rely on either still being present, but e.g. optional\n# test infrastructure can rely on it.\nPOSTGRES_SRCDIR=$(grep ^abs_top_srcdir $(dirname $($PG_CONFIG --pgxs))/../Makefile.global|cut -d ' ' -f3-)\nPOSTGRES_BUILDDIR=$(grep ^abs_top_builddir $(dirname $($PG_CONFIG --pgxs))/../Makefile.global|cut -d ' ' -f3-)\n\n\n# check for a number of CFLAGS that make development easier\n\n# CITUSAC_PROG_CC_CFLAGS_OPT\n# -----------------------\n# Given a string, check if the compiler supports the string as a\n# command-line option. If it does, add the string to CFLAGS.\n# CITUSAC_PROG_CC_CFLAGS_OPT\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports -std=gnu99\" >&5\n$as_echo_n \"checking whether $CC supports -std=gnu99... \" >&6; }\nif ${citusac_cv_prog_cc_cflags__std_gnu99+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  citusac_save_CFLAGS=$CFLAGS\nflag=-std=gnu99\ncase $flag in -Wno*)\n\t flag=-W$(echo $flag | cut -c 6-)\nesac\nCFLAGS=\"$citusac_save_CFLAGS $flag\"\nac_save_c_werror_flag=$ac_c_werror_flag\nac_c_werror_flag=yes\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  citusac_cv_prog_cc_cflags__std_gnu99=yes\nelse\n  citusac_cv_prog_cc_cflags__std_gnu99=no\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nac_c_werror_flag=$ac_save_c_werror_flag\nCFLAGS=\"$citusac_save_CFLAGS\"\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $citusac_cv_prog_cc_cflags__std_gnu99\" >&5\n$as_echo \"$citusac_cv_prog_cc_cflags__std_gnu99\" >&6; }\nif test x\"$citusac_cv_prog_cc_cflags__std_gnu99\" = x\"yes\"; then\n  CITUS_CFLAGS=\"$CITUS_CFLAGS -std=gnu99\"\nfi\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports -Wall\" >&5\n$as_echo_n \"checking whether $CC supports -Wall... \" >&6; }\nif ${citusac_cv_prog_cc_cflags__Wall+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  citusac_save_CFLAGS=$CFLAGS\nflag=-Wall\ncase $flag in -Wno*)\n\t flag=-W$(echo $flag | cut -c 6-)\nesac\nCFLAGS=\"$citusac_save_CFLAGS $flag\"\nac_save_c_werror_flag=$ac_c_werror_flag\nac_c_werror_flag=yes\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  citusac_cv_prog_cc_cflags__Wall=yes\nelse\n  citusac_cv_prog_cc_cflags__Wall=no\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nac_c_werror_flag=$ac_save_c_werror_flag\nCFLAGS=\"$citusac_save_CFLAGS\"\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $citusac_cv_prog_cc_cflags__Wall\" >&5\n$as_echo \"$citusac_cv_prog_cc_cflags__Wall\" >&6; }\nif test x\"$citusac_cv_prog_cc_cflags__Wall\" = x\"yes\"; then\n  CITUS_CFLAGS=\"$CITUS_CFLAGS -Wall\"\nfi\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports -Wextra\" >&5\n$as_echo_n \"checking whether $CC supports -Wextra... \" >&6; }\nif ${citusac_cv_prog_cc_cflags__Wextra+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  citusac_save_CFLAGS=$CFLAGS\nflag=-Wextra\ncase $flag in -Wno*)\n\t flag=-W$(echo $flag | cut -c 6-)\nesac\nCFLAGS=\"$citusac_save_CFLAGS $flag\"\nac_save_c_werror_flag=$ac_c_werror_flag\nac_c_werror_flag=yes\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  citusac_cv_prog_cc_cflags__Wextra=yes\nelse\n  citusac_cv_prog_cc_cflags__Wextra=no\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nac_c_werror_flag=$ac_save_c_werror_flag\nCFLAGS=\"$citusac_save_CFLAGS\"\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $citusac_cv_prog_cc_cflags__Wextra\" >&5\n$as_echo \"$citusac_cv_prog_cc_cflags__Wextra\" >&6; }\nif test x\"$citusac_cv_prog_cc_cflags__Wextra\" = x\"yes\"; then\n  CITUS_CFLAGS=\"$CITUS_CFLAGS -Wextra\"\nfi\n\n# disarm options included in the above, which are too noisy for now\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports -Wno-unused-parameter\" >&5\n$as_echo_n \"checking whether $CC supports -Wno-unused-parameter... \" >&6; }\nif ${citusac_cv_prog_cc_cflags__Wno_unused_parameter+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  citusac_save_CFLAGS=$CFLAGS\nflag=-Wno-unused-parameter\ncase $flag in -Wno*)\n\t flag=-W$(echo $flag | cut -c 6-)\nesac\nCFLAGS=\"$citusac_save_CFLAGS $flag\"\nac_save_c_werror_flag=$ac_c_werror_flag\nac_c_werror_flag=yes\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  citusac_cv_prog_cc_cflags__Wno_unused_parameter=yes\nelse\n  citusac_cv_prog_cc_cflags__Wno_unused_parameter=no\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nac_c_werror_flag=$ac_save_c_werror_flag\nCFLAGS=\"$citusac_save_CFLAGS\"\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $citusac_cv_prog_cc_cflags__Wno_unused_parameter\" >&5\n$as_echo \"$citusac_cv_prog_cc_cflags__Wno_unused_parameter\" >&6; }\nif test x\"$citusac_cv_prog_cc_cflags__Wno_unused_parameter\" = x\"yes\"; then\n  CITUS_CFLAGS=\"$CITUS_CFLAGS -Wno-unused-parameter\"\nfi\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports -Wno-sign-compare\" >&5\n$as_echo_n \"checking whether $CC supports -Wno-sign-compare... \" >&6; }\nif ${citusac_cv_prog_cc_cflags__Wno_sign_compare+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  citusac_save_CFLAGS=$CFLAGS\nflag=-Wno-sign-compare\ncase $flag in -Wno*)\n\t flag=-W$(echo $flag | cut -c 6-)\nesac\nCFLAGS=\"$citusac_save_CFLAGS $flag\"\nac_save_c_werror_flag=$ac_c_werror_flag\nac_c_werror_flag=yes\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  citusac_cv_prog_cc_cflags__Wno_sign_compare=yes\nelse\n  citusac_cv_prog_cc_cflags__Wno_sign_compare=no\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nac_c_werror_flag=$ac_save_c_werror_flag\nCFLAGS=\"$citusac_save_CFLAGS\"\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $citusac_cv_prog_cc_cflags__Wno_sign_compare\" >&5\n$as_echo \"$citusac_cv_prog_cc_cflags__Wno_sign_compare\" >&6; }\nif test x\"$citusac_cv_prog_cc_cflags__Wno_sign_compare\" = x\"yes\"; then\n  CITUS_CFLAGS=\"$CITUS_CFLAGS -Wno-sign-compare\"\nfi\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports -Wno-missing-field-initializers\" >&5\n$as_echo_n \"checking whether $CC supports -Wno-missing-field-initializers... \" >&6; }\nif ${citusac_cv_prog_cc_cflags__Wno_missing_field_initializers+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  citusac_save_CFLAGS=$CFLAGS\nflag=-Wno-missing-field-initializers\ncase $flag in -Wno*)\n\t flag=-W$(echo $flag | cut -c 6-)\nesac\nCFLAGS=\"$citusac_save_CFLAGS $flag\"\nac_save_c_werror_flag=$ac_c_werror_flag\nac_c_werror_flag=yes\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  citusac_cv_prog_cc_cflags__Wno_missing_field_initializers=yes\nelse\n  citusac_cv_prog_cc_cflags__Wno_missing_field_initializers=no\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nac_c_werror_flag=$ac_save_c_werror_flag\nCFLAGS=\"$citusac_save_CFLAGS\"\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $citusac_cv_prog_cc_cflags__Wno_missing_field_initializers\" >&5\n$as_echo \"$citusac_cv_prog_cc_cflags__Wno_missing_field_initializers\" >&6; }\nif test x\"$citusac_cv_prog_cc_cflags__Wno_missing_field_initializers\" = x\"yes\"; then\n  CITUS_CFLAGS=\"$CITUS_CFLAGS -Wno-missing-field-initializers\"\nfi\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports -Wno-clobbered\" >&5\n$as_echo_n \"checking whether $CC supports -Wno-clobbered... \" >&6; }\nif ${citusac_cv_prog_cc_cflags__Wno_clobbered+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  citusac_save_CFLAGS=$CFLAGS\nflag=-Wno-clobbered\ncase $flag in -Wno*)\n\t flag=-W$(echo $flag | cut -c 6-)\nesac\nCFLAGS=\"$citusac_save_CFLAGS $flag\"\nac_save_c_werror_flag=$ac_c_werror_flag\nac_c_werror_flag=yes\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  citusac_cv_prog_cc_cflags__Wno_clobbered=yes\nelse\n  citusac_cv_prog_cc_cflags__Wno_clobbered=no\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nac_c_werror_flag=$ac_save_c_werror_flag\nCFLAGS=\"$citusac_save_CFLAGS\"\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $citusac_cv_prog_cc_cflags__Wno_clobbered\" >&5\n$as_echo \"$citusac_cv_prog_cc_cflags__Wno_clobbered\" >&6; }\nif test x\"$citusac_cv_prog_cc_cflags__Wno_clobbered\" = x\"yes\"; then\n  CITUS_CFLAGS=\"$CITUS_CFLAGS -Wno-clobbered\"\nfi\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports -Wno-gnu-variable-sized-type-not-at-end\" >&5\n$as_echo_n \"checking whether $CC supports -Wno-gnu-variable-sized-type-not-at-end... \" >&6; }\nif ${citusac_cv_prog_cc_cflags__Wno_gnu_variable_sized_type_not_at_end+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  citusac_save_CFLAGS=$CFLAGS\nflag=-Wno-gnu-variable-sized-type-not-at-end\ncase $flag in -Wno*)\n\t flag=-W$(echo $flag | cut -c 6-)\nesac\nCFLAGS=\"$citusac_save_CFLAGS $flag\"\nac_save_c_werror_flag=$ac_c_werror_flag\nac_c_werror_flag=yes\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  citusac_cv_prog_cc_cflags__Wno_gnu_variable_sized_type_not_at_end=yes\nelse\n  citusac_cv_prog_cc_cflags__Wno_gnu_variable_sized_type_not_at_end=no\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nac_c_werror_flag=$ac_save_c_werror_flag\nCFLAGS=\"$citusac_save_CFLAGS\"\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $citusac_cv_prog_cc_cflags__Wno_gnu_variable_sized_type_not_at_end\" >&5\n$as_echo \"$citusac_cv_prog_cc_cflags__Wno_gnu_variable_sized_type_not_at_end\" >&6; }\nif test x\"$citusac_cv_prog_cc_cflags__Wno_gnu_variable_sized_type_not_at_end\" = x\"yes\"; then\n  CITUS_CFLAGS=\"$CITUS_CFLAGS -Wno-gnu-variable-sized-type-not-at-end\"\nfi\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports -Wno-declaration-after-statement\" >&5\n$as_echo_n \"checking whether $CC supports -Wno-declaration-after-statement... \" >&6; }\nif ${citusac_cv_prog_cc_cflags__Wno_declaration_after_statement+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  citusac_save_CFLAGS=$CFLAGS\nflag=-Wno-declaration-after-statement\ncase $flag in -Wno*)\n\t flag=-W$(echo $flag | cut -c 6-)\nesac\nCFLAGS=\"$citusac_save_CFLAGS $flag\"\nac_save_c_werror_flag=$ac_c_werror_flag\nac_c_werror_flag=yes\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  citusac_cv_prog_cc_cflags__Wno_declaration_after_statement=yes\nelse\n  citusac_cv_prog_cc_cflags__Wno_declaration_after_statement=no\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nac_c_werror_flag=$ac_save_c_werror_flag\nCFLAGS=\"$citusac_save_CFLAGS\"\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $citusac_cv_prog_cc_cflags__Wno_declaration_after_statement\" >&5\n$as_echo \"$citusac_cv_prog_cc_cflags__Wno_declaration_after_statement\" >&6; }\nif test x\"$citusac_cv_prog_cc_cflags__Wno_declaration_after_statement\" = x\"yes\"; then\n  CITUS_CFLAGS=\"$CITUS_CFLAGS -Wno-declaration-after-statement\"\nfi\n\n# And add a few extra warnings\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports -Wendif-labels\" >&5\n$as_echo_n \"checking whether $CC supports -Wendif-labels... \" >&6; }\nif ${citusac_cv_prog_cc_cflags__Wendif_labels+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  citusac_save_CFLAGS=$CFLAGS\nflag=-Wendif-labels\ncase $flag in -Wno*)\n\t flag=-W$(echo $flag | cut -c 6-)\nesac\nCFLAGS=\"$citusac_save_CFLAGS $flag\"\nac_save_c_werror_flag=$ac_c_werror_flag\nac_c_werror_flag=yes\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  citusac_cv_prog_cc_cflags__Wendif_labels=yes\nelse\n  citusac_cv_prog_cc_cflags__Wendif_labels=no\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nac_c_werror_flag=$ac_save_c_werror_flag\nCFLAGS=\"$citusac_save_CFLAGS\"\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $citusac_cv_prog_cc_cflags__Wendif_labels\" >&5\n$as_echo \"$citusac_cv_prog_cc_cflags__Wendif_labels\" >&6; }\nif test x\"$citusac_cv_prog_cc_cflags__Wendif_labels\" = x\"yes\"; then\n  CITUS_CFLAGS=\"$CITUS_CFLAGS -Wendif-labels\"\nfi\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports -Wmissing-format-attribute\" >&5\n$as_echo_n \"checking whether $CC supports -Wmissing-format-attribute... \" >&6; }\nif ${citusac_cv_prog_cc_cflags__Wmissing_format_attribute+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  citusac_save_CFLAGS=$CFLAGS\nflag=-Wmissing-format-attribute\ncase $flag in -Wno*)\n\t flag=-W$(echo $flag | cut -c 6-)\nesac\nCFLAGS=\"$citusac_save_CFLAGS $flag\"\nac_save_c_werror_flag=$ac_c_werror_flag\nac_c_werror_flag=yes\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  citusac_cv_prog_cc_cflags__Wmissing_format_attribute=yes\nelse\n  citusac_cv_prog_cc_cflags__Wmissing_format_attribute=no\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nac_c_werror_flag=$ac_save_c_werror_flag\nCFLAGS=\"$citusac_save_CFLAGS\"\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $citusac_cv_prog_cc_cflags__Wmissing_format_attribute\" >&5\n$as_echo \"$citusac_cv_prog_cc_cflags__Wmissing_format_attribute\" >&6; }\nif test x\"$citusac_cv_prog_cc_cflags__Wmissing_format_attribute\" = x\"yes\"; then\n  CITUS_CFLAGS=\"$CITUS_CFLAGS -Wmissing-format-attribute\"\nfi\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports -Wmissing-declarations\" >&5\n$as_echo_n \"checking whether $CC supports -Wmissing-declarations... \" >&6; }\nif ${citusac_cv_prog_cc_cflags__Wmissing_declarations+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  citusac_save_CFLAGS=$CFLAGS\nflag=-Wmissing-declarations\ncase $flag in -Wno*)\n\t flag=-W$(echo $flag | cut -c 6-)\nesac\nCFLAGS=\"$citusac_save_CFLAGS $flag\"\nac_save_c_werror_flag=$ac_c_werror_flag\nac_c_werror_flag=yes\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  citusac_cv_prog_cc_cflags__Wmissing_declarations=yes\nelse\n  citusac_cv_prog_cc_cflags__Wmissing_declarations=no\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nac_c_werror_flag=$ac_save_c_werror_flag\nCFLAGS=\"$citusac_save_CFLAGS\"\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $citusac_cv_prog_cc_cflags__Wmissing_declarations\" >&5\n$as_echo \"$citusac_cv_prog_cc_cflags__Wmissing_declarations\" >&6; }\nif test x\"$citusac_cv_prog_cc_cflags__Wmissing_declarations\" = x\"yes\"; then\n  CITUS_CFLAGS=\"$CITUS_CFLAGS -Wmissing-declarations\"\nfi\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports -Wmissing-prototypes\" >&5\n$as_echo_n \"checking whether $CC supports -Wmissing-prototypes... \" >&6; }\nif ${citusac_cv_prog_cc_cflags__Wmissing_prototypes+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  citusac_save_CFLAGS=$CFLAGS\nflag=-Wmissing-prototypes\ncase $flag in -Wno*)\n\t flag=-W$(echo $flag | cut -c 6-)\nesac\nCFLAGS=\"$citusac_save_CFLAGS $flag\"\nac_save_c_werror_flag=$ac_c_werror_flag\nac_c_werror_flag=yes\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  citusac_cv_prog_cc_cflags__Wmissing_prototypes=yes\nelse\n  citusac_cv_prog_cc_cflags__Wmissing_prototypes=no\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nac_c_werror_flag=$ac_save_c_werror_flag\nCFLAGS=\"$citusac_save_CFLAGS\"\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $citusac_cv_prog_cc_cflags__Wmissing_prototypes\" >&5\n$as_echo \"$citusac_cv_prog_cc_cflags__Wmissing_prototypes\" >&6; }\nif test x\"$citusac_cv_prog_cc_cflags__Wmissing_prototypes\" = x\"yes\"; then\n  CITUS_CFLAGS=\"$CITUS_CFLAGS -Wmissing-prototypes\"\nfi\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports -Wshadow\" >&5\n$as_echo_n \"checking whether $CC supports -Wshadow... \" >&6; }\nif ${citusac_cv_prog_cc_cflags__Wshadow+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  citusac_save_CFLAGS=$CFLAGS\nflag=-Wshadow\ncase $flag in -Wno*)\n\t flag=-W$(echo $flag | cut -c 6-)\nesac\nCFLAGS=\"$citusac_save_CFLAGS $flag\"\nac_save_c_werror_flag=$ac_c_werror_flag\nac_c_werror_flag=yes\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  citusac_cv_prog_cc_cflags__Wshadow=yes\nelse\n  citusac_cv_prog_cc_cflags__Wshadow=no\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nac_c_werror_flag=$ac_save_c_werror_flag\nCFLAGS=\"$citusac_save_CFLAGS\"\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $citusac_cv_prog_cc_cflags__Wshadow\" >&5\n$as_echo \"$citusac_cv_prog_cc_cflags__Wshadow\" >&6; }\nif test x\"$citusac_cv_prog_cc_cflags__Wshadow\" = x\"yes\"; then\n  CITUS_CFLAGS=\"$CITUS_CFLAGS -Wshadow\"\nfi\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports -Werror=vla\" >&5\n$as_echo_n \"checking whether $CC supports -Werror=vla... \" >&6; }\nif ${citusac_cv_prog_cc_cflags__Werror_vla+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  citusac_save_CFLAGS=$CFLAGS\nflag=-Werror=vla\ncase $flag in -Wno*)\n\t flag=-W$(echo $flag | cut -c 6-)\nesac\nCFLAGS=\"$citusac_save_CFLAGS $flag\"\nac_save_c_werror_flag=$ac_c_werror_flag\nac_c_werror_flag=yes\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  citusac_cv_prog_cc_cflags__Werror_vla=yes\nelse\n  citusac_cv_prog_cc_cflags__Werror_vla=no\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nac_c_werror_flag=$ac_save_c_werror_flag\nCFLAGS=\"$citusac_save_CFLAGS\"\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $citusac_cv_prog_cc_cflags__Werror_vla\" >&5\n$as_echo \"$citusac_cv_prog_cc_cflags__Werror_vla\" >&6; }\nif test x\"$citusac_cv_prog_cc_cflags__Werror_vla\" = x\"yes\"; then\n  CITUS_CFLAGS=\"$CITUS_CFLAGS -Werror=vla\"\nfi\n  # visual studio does not support these\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports -Werror=implicit-int\" >&5\n$as_echo_n \"checking whether $CC supports -Werror=implicit-int... \" >&6; }\nif ${citusac_cv_prog_cc_cflags__Werror_implicit_int+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  citusac_save_CFLAGS=$CFLAGS\nflag=-Werror=implicit-int\ncase $flag in -Wno*)\n\t flag=-W$(echo $flag | cut -c 6-)\nesac\nCFLAGS=\"$citusac_save_CFLAGS $flag\"\nac_save_c_werror_flag=$ac_c_werror_flag\nac_c_werror_flag=yes\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  citusac_cv_prog_cc_cflags__Werror_implicit_int=yes\nelse\n  citusac_cv_prog_cc_cflags__Werror_implicit_int=no\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nac_c_werror_flag=$ac_save_c_werror_flag\nCFLAGS=\"$citusac_save_CFLAGS\"\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $citusac_cv_prog_cc_cflags__Werror_implicit_int\" >&5\n$as_echo \"$citusac_cv_prog_cc_cflags__Werror_implicit_int\" >&6; }\nif test x\"$citusac_cv_prog_cc_cflags__Werror_implicit_int\" = x\"yes\"; then\n  CITUS_CFLAGS=\"$CITUS_CFLAGS -Werror=implicit-int\"\nfi\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports -Werror=implicit-function-declaration\" >&5\n$as_echo_n \"checking whether $CC supports -Werror=implicit-function-declaration... \" >&6; }\nif ${citusac_cv_prog_cc_cflags__Werror_implicit_function_declaration+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  citusac_save_CFLAGS=$CFLAGS\nflag=-Werror=implicit-function-declaration\ncase $flag in -Wno*)\n\t flag=-W$(echo $flag | cut -c 6-)\nesac\nCFLAGS=\"$citusac_save_CFLAGS $flag\"\nac_save_c_werror_flag=$ac_c_werror_flag\nac_c_werror_flag=yes\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  citusac_cv_prog_cc_cflags__Werror_implicit_function_declaration=yes\nelse\n  citusac_cv_prog_cc_cflags__Werror_implicit_function_declaration=no\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nac_c_werror_flag=$ac_save_c_werror_flag\nCFLAGS=\"$citusac_save_CFLAGS\"\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $citusac_cv_prog_cc_cflags__Werror_implicit_function_declaration\" >&5\n$as_echo \"$citusac_cv_prog_cc_cflags__Werror_implicit_function_declaration\" >&6; }\nif test x\"$citusac_cv_prog_cc_cflags__Werror_implicit_function_declaration\" = x\"yes\"; then\n  CITUS_CFLAGS=\"$CITUS_CFLAGS -Werror=implicit-function-declaration\"\nfi\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports -Werror=return-type\" >&5\n$as_echo_n \"checking whether $CC supports -Werror=return-type... \" >&6; }\nif ${citusac_cv_prog_cc_cflags__Werror_return_type+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  citusac_save_CFLAGS=$CFLAGS\nflag=-Werror=return-type\ncase $flag in -Wno*)\n\t flag=-W$(echo $flag | cut -c 6-)\nesac\nCFLAGS=\"$citusac_save_CFLAGS $flag\"\nac_save_c_werror_flag=$ac_c_werror_flag\nac_c_werror_flag=yes\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  citusac_cv_prog_cc_cflags__Werror_return_type=yes\nelse\n  citusac_cv_prog_cc_cflags__Werror_return_type=no\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nac_c_werror_flag=$ac_save_c_werror_flag\nCFLAGS=\"$citusac_save_CFLAGS\"\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $citusac_cv_prog_cc_cflags__Werror_return_type\" >&5\n$as_echo \"$citusac_cv_prog_cc_cflags__Werror_return_type\" >&6; }\nif test x\"$citusac_cv_prog_cc_cflags__Werror_return_type\" = x\"yes\"; then\n  CITUS_CFLAGS=\"$CITUS_CFLAGS -Werror=return-type\"\nfi\n\n# Security flags\n# Flags taken from: https://liquid.microsoft.com/Web/Object/Read/ms.security/Requirements/Microsoft.Security.SystemsADM.10203#guide\n# We do not enforce the following flag because it is only available on GCC>=8\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking whether $CC supports -fstack-clash-protection\" >&5\n$as_echo_n \"checking whether $CC supports -fstack-clash-protection... \" >&6; }\nif ${citusac_cv_prog_cc_cflags__fstack_clash_protection+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  citusac_save_CFLAGS=$CFLAGS\nflag=-fstack-clash-protection\ncase $flag in -Wno*)\n\t flag=-W$(echo $flag | cut -c 6-)\nesac\nCFLAGS=\"$citusac_save_CFLAGS $flag\"\nac_save_c_werror_flag=$ac_c_werror_flag\nac_c_werror_flag=yes\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\nint\nmain ()\n{\n\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_compile \"$LINENO\"; then :\n  citusac_cv_prog_cc_cflags__fstack_clash_protection=yes\nelse\n  citusac_cv_prog_cc_cflags__fstack_clash_protection=no\nfi\nrm -f core conftest.err conftest.$ac_objext conftest.$ac_ext\nac_c_werror_flag=$ac_save_c_werror_flag\nCFLAGS=\"$citusac_save_CFLAGS\"\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $citusac_cv_prog_cc_cflags__fstack_clash_protection\" >&5\n$as_echo \"$citusac_cv_prog_cc_cflags__fstack_clash_protection\" >&6; }\nif test x\"$citusac_cv_prog_cc_cflags__fstack_clash_protection\" = x\"yes\"; then\n  CITUS_CFLAGS=\"$CITUS_CFLAGS -fstack-clash-protection\"\nfi\n\n\n#\n# --enable-coverage enables generation of code coverage metrics with gcov\n#\n# Check whether --enable-coverage was given.\nif test \"${enable_coverage+set}\" = set; then :\n  enableval=$enable_coverage;\nfi\n\nif test \"$enable_coverage\" = yes; then\n    CITUS_CFLAGS=\"$CITUS_CFLAGS -O0 -g --coverage\"\n    CITUS_CPPFLAGS=\"$CITUS_CPPFLAGS -DNDEBUG\"\n    CITUS_LDFLAGS=\"$CITUS_LDFLAGS --coverage\"\nfi\n\n#\n# libcurl\n#\n\n\n\n# Check whether --with-libcurl was given.\nif test \"${with_libcurl+set}\" = set; then :\n  withval=$with_libcurl;\n  case $withval in\n    yes)\n\n$as_echo \"#define HAVE_LIBCURL 1\" >>confdefs.h\n\n      ;;\n    no)\n      :\n      ;;\n    *)\n      as_fn_error $? \"no argument expected for --with-libcurl option\" \"$LINENO\" 5\n      ;;\n  esac\n\nelse\n  with_libcurl=yes\n\n$as_echo \"#define HAVE_LIBCURL 1\" >>confdefs.h\n\nfi\n\n\n\nif test \"$with_libcurl\" = yes; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for curl_global_init in -lcurl\" >&5\n$as_echo_n \"checking for curl_global_init in -lcurl... \" >&6; }\nif ${ac_cv_lib_curl_curl_global_init+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_check_lib_save_LIBS=$LIBS\nLIBS=\"-lcurl  $LIBS\"\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n/* Override any GCC internal prototype to avoid an error.\n   Use char because int might match the return type of a GCC\n   builtin and then its argument prototype would still apply.  */\n#ifdef __cplusplus\nextern \"C\"\n#endif\nchar curl_global_init ();\nint\nmain ()\n{\nreturn curl_global_init ();\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n  ac_cv_lib_curl_curl_global_init=yes\nelse\n  ac_cv_lib_curl_curl_global_init=no\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\nLIBS=$ac_check_lib_save_LIBS\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_curl_curl_global_init\" >&5\n$as_echo \"$ac_cv_lib_curl_curl_global_init\" >&6; }\nif test \"x$ac_cv_lib_curl_curl_global_init\" = xyes; then :\n  cat >>confdefs.h <<_ACEOF\n#define HAVE_LIBCURL 1\n_ACEOF\n\n  LIBS=\"-lcurl $LIBS\"\n\nelse\n  as_fn_error $? \"libcurl not found\nIf you have libcurl already installed, see config.log for details on the\nfailure. It is possible the compiler isn't looking in the proper directory.\nUse --without-libcurl to disable anonymous statistics collection.\" \"$LINENO\" 5\nfi\n\n  ac_fn_c_check_header_mongrel \"$LINENO\" \"curl/curl.h\" \"ac_cv_header_curl_curl_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_curl_curl_h\" = xyes; then :\n\nelse\n  as_fn_error $? \"libcurl header not found\nIf you have libcurl already installed, see config.log for details on the\nfailure.  It is possible the compiler isn't looking in the proper directory.\nUse --without-libcurl to disable libcurl support.\" \"$LINENO\" 5\nfi\n\n\nfi\n\n# REPORTS_BASE_URL definition\n\n\n\n# Check whether --with-reports-hostname was given.\nif test \"${with_reports_hostname+set}\" = set; then :\n  withval=$with_reports_hostname;\n  case $withval in\n    yes)\n      as_fn_error $? \"argument required for --with-reports-hostname option\" \"$LINENO\" 5\n      ;;\n    no)\n      as_fn_error $? \"argument required for --with-reports-hostname option\" \"$LINENO\" 5\n      ;;\n    *)\n      REPORTS_BASE_URL=\"https://${withval}\"\n      ;;\n  esac\n\nelse\n  REPORTS_BASE_URL=\"https://reports.citusdata.com\"\nfi\n\n\n\ncat >>confdefs.h <<_ACEOF\n#define REPORTS_BASE_URL \"$REPORTS_BASE_URL\"\n_ACEOF\n\n\n#\n# LZ4\n#\n\n\n\n# Check whether --with-lz4 was given.\nif test \"${with_lz4+set}\" = set; then :\n  withval=$with_lz4;\n  case $withval in\n    yes)\n\n$as_echo \"#define HAVE_CITUS_LIBLZ4 1\" >>confdefs.h\n\n      ;;\n    no)\n      :\n      ;;\n    *)\n      as_fn_error $? \"no argument expected for --with-lz4 option\" \"$LINENO\" 5\n      ;;\n  esac\n\nelse\n  with_lz4=yes\n\n$as_echo \"#define HAVE_CITUS_LIBLZ4 1\" >>confdefs.h\n\nfi\n\n\n\n\nif test \"$with_lz4\" = yes; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for LZ4_compress_default in -llz4\" >&5\n$as_echo_n \"checking for LZ4_compress_default in -llz4... \" >&6; }\nif ${ac_cv_lib_lz4_LZ4_compress_default+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_check_lib_save_LIBS=$LIBS\nLIBS=\"-llz4  $LIBS\"\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n/* Override any GCC internal prototype to avoid an error.\n   Use char because int might match the return type of a GCC\n   builtin and then its argument prototype would still apply.  */\n#ifdef __cplusplus\nextern \"C\"\n#endif\nchar LZ4_compress_default ();\nint\nmain ()\n{\nreturn LZ4_compress_default ();\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n  ac_cv_lib_lz4_LZ4_compress_default=yes\nelse\n  ac_cv_lib_lz4_LZ4_compress_default=no\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\nLIBS=$ac_check_lib_save_LIBS\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_lz4_LZ4_compress_default\" >&5\n$as_echo \"$ac_cv_lib_lz4_LZ4_compress_default\" >&6; }\nif test \"x$ac_cv_lib_lz4_LZ4_compress_default\" = xyes; then :\n  cat >>confdefs.h <<_ACEOF\n#define HAVE_LIBLZ4 1\n_ACEOF\n\n  LIBS=\"-llz4 $LIBS\"\n\nelse\n  as_fn_error $? \"lz4 library not found\nIf you have lz4 installed, see config.log for details on the\nfailure.  It is possible the compiler isn't looking in the proper directory.\nUse --without-lz4 to disable lz4 support.\" \"$LINENO\" 5\nfi\n\n  ac_fn_c_check_header_mongrel \"$LINENO\" \"lz4.h\" \"ac_cv_header_lz4_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_lz4_h\" = xyes; then :\n\nelse\n  as_fn_error $? \"lz4 header not found\nIf you have lz4 already installed, see config.log for details on the\nfailure.  It is possible the compiler isn't looking in the proper directory.\nUse --without-lz4 to disable lz4 support.\" \"$LINENO\" 5\nfi\n\n\nfi\n\n#\n# ZSTD\n#\n\n\n\n# Check whether --with-zstd was given.\nif test \"${with_zstd+set}\" = set; then :\n  withval=$with_zstd;\n  case $withval in\n    yes)\n      :\n      ;;\n    no)\n      :\n      ;;\n    *)\n      as_fn_error $? \"no argument expected for --with-zstd option\" \"$LINENO\" 5\n      ;;\n  esac\n\nelse\n  with_zstd=yes\n\nfi\n\n\n\n\nif test \"$with_zstd\" = yes; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: checking for ZSTD_decompress in -lzstd\" >&5\n$as_echo_n \"checking for ZSTD_decompress in -lzstd... \" >&6; }\nif ${ac_cv_lib_zstd_ZSTD_decompress+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  ac_check_lib_save_LIBS=$LIBS\nLIBS=\"-lzstd  $LIBS\"\ncat confdefs.h - <<_ACEOF >conftest.$ac_ext\n/* end confdefs.h.  */\n\n/* Override any GCC internal prototype to avoid an error.\n   Use char because int might match the return type of a GCC\n   builtin and then its argument prototype would still apply.  */\n#ifdef __cplusplus\nextern \"C\"\n#endif\nchar ZSTD_decompress ();\nint\nmain ()\n{\nreturn ZSTD_decompress ();\n  ;\n  return 0;\n}\n_ACEOF\nif ac_fn_c_try_link \"$LINENO\"; then :\n  ac_cv_lib_zstd_ZSTD_decompress=yes\nelse\n  ac_cv_lib_zstd_ZSTD_decompress=no\nfi\nrm -f core conftest.err conftest.$ac_objext \\\n    conftest$ac_exeext conftest.$ac_ext\nLIBS=$ac_check_lib_save_LIBS\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_zstd_ZSTD_decompress\" >&5\n$as_echo \"$ac_cv_lib_zstd_ZSTD_decompress\" >&6; }\nif test \"x$ac_cv_lib_zstd_ZSTD_decompress\" = xyes; then :\n  cat >>confdefs.h <<_ACEOF\n#define HAVE_LIBZSTD 1\n_ACEOF\n\n  LIBS=\"-lzstd $LIBS\"\n\nelse\n  as_fn_error $? \"zstd library not found\nIf you have zstd installed, see config.log for details on the\nfailure.  It is possible the compiler isn't looking in the proper directory.\nUse --without-zstd to disable zstd support.\" \"$LINENO\" 5\nfi\n\n  ac_fn_c_check_header_mongrel \"$LINENO\" \"zstd.h\" \"ac_cv_header_zstd_h\" \"$ac_includes_default\"\nif test \"x$ac_cv_header_zstd_h\" = xyes; then :\n\nelse\n  as_fn_error $? \"zstd header not found\nIf you have zstd already installed, see config.log for details on the\nfailure.  It is possible the compiler isn't looking in the proper directory.\nUse --without-zstd to disable zstd support.\" \"$LINENO\" 5\nfi\n\n\nfi\n\n\n\n\n\n# Check whether --with-security-flags was given.\nif test \"${with_security_flags+set}\" = set; then :\n  withval=$with_security_flags;\n  case $withval in\n    yes)\n      :\n      ;;\n    no)\n      :\n      ;;\n    *)\n      as_fn_error $? \"no argument expected for --with-security-flags option\" \"$LINENO\" 5\n      ;;\n  esac\n\nelse\n  with_security_flags=no\n\nfi\n\n\n\n\nif test \"$with_security_flags\" = yes; then\n# Flags taken from: https://liquid.microsoft.com/Web/Object/Read/ms.security/Requirements/Microsoft.Security.SystemsADM.10203#guide\n\n# We always want to have some compiler flags for security concerns.\nSECURITY_CFLAGS=\"-fstack-protector-strong -D_FORTIFY_SOURCE=2 -O2 -z noexecstack -fpic -shared -Wl,-z,relro -Wl,-z,now -Wformat -Wformat-security -Werror=format-security\"\nCITUS_CFLAGS=\"$CITUS_CFLAGS $SECURITY_CFLAGS\"\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: Blindly added security flags for linker: $SECURITY_CFLAGS\" >&5\n$as_echo \"$as_me: Blindly added security flags for linker: $SECURITY_CFLAGS\" >&6;}\n\n# We always want to have some clang flags for security concerns.\n# This doesn't include \"-Wl,-z,relro -Wl,-z,now\" on purpuse, because bitcode is not linked.\n# This doesn't include -fsanitize=cfi because it breaks builds on many distros including\n# Debian/Buster, Debian/Stretch, Ubuntu/Bionic, Ubuntu/Xenial and EL7.\nSECURITY_BITCODE_CFLAGS=\"-fsanitize=safe-stack -fstack-protector-strong -flto -fPIC -Wformat -Wformat-security -Werror=format-security\"\nCITUS_BITCODE_CFLAGS=\"$CITUS_BITCODE_CFLAGS $SECURITY_BITCODE_CFLAGS\"\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: Blindly added security flags for llvm: $SECURITY_BITCODE_CFLAGS\" >&5\n$as_echo \"$as_me: Blindly added security flags for llvm: $SECURITY_BITCODE_CFLAGS\" >&6;}\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: If you run into issues during linking or bitcode compilation, you can use --without-security-flags.\" >&5\n$as_echo \"$as_me: WARNING: If you run into issues during linking or bitcode compilation, you can use --without-security-flags.\" >&2;}\nfi\n\n# Check if git is installed, when installed the gitref of the checkout will be baked in the application\n# Extract the first word of \"git\", so it can be a program name with args.\nset dummy git; ac_word=$2\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for $ac_word\" >&5\n$as_echo_n \"checking for $ac_word... \" >&6; }\nif ${ac_cv_path_GIT_BIN+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  case $GIT_BIN in\n  [\\\\/]* | ?:[\\\\/]*)\n  ac_cv_path_GIT_BIN=\"$GIT_BIN\" # Let the user override the test with a path.\n  ;;\n  *)\n  as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    for ac_exec_ext in '' $ac_executable_extensions; do\n  if as_fn_executable_p \"$as_dir/$ac_word$ac_exec_ext\"; then\n    ac_cv_path_GIT_BIN=\"$as_dir/$ac_word$ac_exec_ext\"\n    $as_echo \"$as_me:${as_lineno-$LINENO}: found $as_dir/$ac_word$ac_exec_ext\" >&5\n    break 2\n  fi\ndone\n  done\nIFS=$as_save_IFS\n\n  ;;\nesac\nfi\nGIT_BIN=$ac_cv_path_GIT_BIN\nif test -n \"$GIT_BIN\"; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: $GIT_BIN\" >&5\n$as_echo \"$GIT_BIN\" >&6; }\nelse\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: result: no\" >&5\n$as_echo \"no\" >&6; }\nfi\n\n\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: checking for .git\" >&5\n$as_echo_n \"checking for .git... \" >&6; }\nif ${ac_cv_file__git+:} false; then :\n  $as_echo_n \"(cached) \" >&6\nelse\n  test \"$cross_compiling\" = yes &&\n  as_fn_error $? \"cannot check for file existence when cross compiling\" \"$LINENO\" 5\nif test -r \".git\"; then\n  ac_cv_file__git=yes\nelse\n  ac_cv_file__git=no\nfi\nfi\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: result: $ac_cv_file__git\" >&5\n$as_echo \"$ac_cv_file__git\" >&6; }\nif test \"x$ac_cv_file__git\" = xyes; then :\n  HAS_DOTGIT=yes\nelse\n  HAS_DOTGIT=\nfi\n\n\nCITUS_CFLAGS=\"$CITUS_CFLAGS\"\n\nCITUS_BITCODE_CFLAGS=\"$CITUS_BITCODE_CFLAGS\"\n\nCITUS_CPPFLAGS=\"$CITUS_CPPFLAGS\"\n\nCITUS_LDFLAGS=\"$LIBS $CITUS_LDFLAGS\"\n\nPOSTGRES_SRCDIR=\"$POSTGRES_SRCDIR\"\n\nPOSTGRES_BUILDDIR=\"$POSTGRES_BUILDDIR\"\n\nHAS_DOTGIT=\"$HAS_DOTGIT\"\n\n\nac_config_files=\"$ac_config_files Makefile.global\"\n\nac_config_headers=\"$ac_config_headers src/include/citus_config.h src/include/citus_version.h\"\n\n\ncat >confcache <<\\_ACEOF\n# This file is a shell script that caches the results of configure\n# tests run on this system so they can be shared between configure\n# scripts and configure runs, see configure's option --config-cache.\n# It is not useful on other systems.  If it contains results you don't\n# want to keep, you may remove or edit it.\n#\n# config.status only pays attention to the cache file if you give it\n# the --recheck option to rerun configure.\n#\n# `ac_cv_env_foo' variables (set or unset) will be overridden when\n# loading this file, other *unset* `ac_cv_foo' will be assigned the\n# following values.\n\n_ACEOF\n\n# The following way of writing the cache mishandles newlines in values,\n# but we know of no workaround that is simple, portable, and efficient.\n# So, we kill variables containing newlines.\n# Ultrix sh set writes to stderr and can't be redirected directly,\n# and sets the high bit in the cache file unless we assign to the vars.\n(\n  for ac_var in `(set) 2>&1 | sed -n 's/^\\([a-zA-Z_][a-zA-Z0-9_]*\\)=.*/\\1/p'`; do\n    eval ac_val=\\$$ac_var\n    case $ac_val in #(\n    *${as_nl}*)\n      case $ac_var in #(\n      *_cv_*) { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: cache variable $ac_var contains a newline\" >&5\n$as_echo \"$as_me: WARNING: cache variable $ac_var contains a newline\" >&2;} ;;\n      esac\n      case $ac_var in #(\n      _ | IFS | as_nl) ;; #(\n      BASH_ARGV | BASH_SOURCE) eval $ac_var= ;; #(\n      *) { eval $ac_var=; unset $ac_var;} ;;\n      esac ;;\n    esac\n  done\n\n  (set) 2>&1 |\n    case $as_nl`(ac_space=' '; set) 2>&1` in #(\n    *${as_nl}ac_space=\\ *)\n      # `set' does not quote correctly, so add quotes: double-quote\n      # substitution turns \\\\\\\\ into \\\\, and sed turns \\\\ into \\.\n      sed -n \\\n\t\"s/'/'\\\\\\\\''/g;\n\t  s/^\\\\([_$as_cr_alnum]*_cv_[_$as_cr_alnum]*\\\\)=\\\\(.*\\\\)/\\\\1='\\\\2'/p\"\n      ;; #(\n    *)\n      # `set' quotes correctly as required by POSIX, so do not add quotes.\n      sed -n \"/^[_$as_cr_alnum]*_cv_[_$as_cr_alnum]*=/p\"\n      ;;\n    esac |\n    sort\n) |\n  sed '\n     /^ac_cv_env_/b end\n     t clear\n     :clear\n     s/^\\([^=]*\\)=\\(.*[{}].*\\)$/test \"${\\1+set}\" = set || &/\n     t end\n     s/^\\([^=]*\\)=\\(.*\\)$/\\1=${\\1=\\2}/\n     :end' >>confcache\nif diff \"$cache_file\" confcache >/dev/null 2>&1; then :; else\n  if test -w \"$cache_file\"; then\n    if test \"x$cache_file\" != \"x/dev/null\"; then\n      { $as_echo \"$as_me:${as_lineno-$LINENO}: updating cache $cache_file\" >&5\n$as_echo \"$as_me: updating cache $cache_file\" >&6;}\n      if test ! -f \"$cache_file\" || test -h \"$cache_file\"; then\n\tcat confcache >\"$cache_file\"\n      else\n        case $cache_file in #(\n        */* | ?:*)\n\t  mv -f confcache \"$cache_file\"$$ &&\n\t  mv -f \"$cache_file\"$$ \"$cache_file\" ;; #(\n        *)\n\t  mv -f confcache \"$cache_file\" ;;\n\tesac\n      fi\n    fi\n  else\n    { $as_echo \"$as_me:${as_lineno-$LINENO}: not updating unwritable cache $cache_file\" >&5\n$as_echo \"$as_me: not updating unwritable cache $cache_file\" >&6;}\n  fi\nfi\nrm -f confcache\n\ntest \"x$prefix\" = xNONE && prefix=$ac_default_prefix\n# Let make expand exec_prefix.\ntest \"x$exec_prefix\" = xNONE && exec_prefix='${prefix}'\n\nDEFS=-DHAVE_CONFIG_H\n\nac_libobjs=\nac_ltlibobjs=\nU=\nfor ac_i in : $LIBOBJS; do test \"x$ac_i\" = x: && continue\n  # 1. Remove the extension, and $U if already installed.\n  ac_script='s/\\$U\\././;s/\\.o$//;s/\\.obj$//'\n  ac_i=`$as_echo \"$ac_i\" | sed \"$ac_script\"`\n  # 2. Prepend LIBOBJDIR.  When used with automake>=1.10 LIBOBJDIR\n  #    will be set to the directory where LIBOBJS objects are built.\n  as_fn_append ac_libobjs \" \\${LIBOBJDIR}$ac_i\\$U.$ac_objext\"\n  as_fn_append ac_ltlibobjs \" \\${LIBOBJDIR}$ac_i\"'$U.lo'\ndone\nLIBOBJS=$ac_libobjs\n\nLTLIBOBJS=$ac_ltlibobjs\n\n\n\n: \"${CONFIG_STATUS=./config.status}\"\nac_write_fail=0\nac_clean_files_save=$ac_clean_files\nac_clean_files=\"$ac_clean_files $CONFIG_STATUS\"\n{ $as_echo \"$as_me:${as_lineno-$LINENO}: creating $CONFIG_STATUS\" >&5\n$as_echo \"$as_me: creating $CONFIG_STATUS\" >&6;}\nas_write_fail=0\ncat >$CONFIG_STATUS <<_ASEOF || as_write_fail=1\n#! $SHELL\n# Generated by $as_me.\n# Run this file to recreate the current configuration.\n# Compiler output produced by configure, useful for debugging\n# configure, is in config.log if it exists.\n\ndebug=false\nac_cs_recheck=false\nac_cs_silent=false\n\nSHELL=\\${CONFIG_SHELL-$SHELL}\nexport SHELL\n_ASEOF\ncat >>$CONFIG_STATUS <<\\_ASEOF || as_write_fail=1\n## -------------------- ##\n## M4sh Initialization. ##\n## -------------------- ##\n\n# Be more Bourne compatible\nDUALCASE=1; export DUALCASE # for MKS sh\nif test -n \"${ZSH_VERSION+set}\" && (emulate sh) >/dev/null 2>&1; then :\n  emulate sh\n  NULLCMD=:\n  # Pre-4.2 versions of Zsh do word splitting on ${1+\"$@\"}, which\n  # is contrary to our usage.  Disable this feature.\n  alias -g '${1+\"$@\"}'='\"$@\"'\n  setopt NO_GLOB_SUBST\nelse\n  case `(set -o) 2>/dev/null` in #(\n  *posix*) :\n    set -o posix ;; #(\n  *) :\n     ;;\nesac\nfi\n\n\nas_nl='\n'\nexport as_nl\n# Printing a long string crashes Solaris 7 /usr/bin/printf.\nas_echo='\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'\nas_echo=$as_echo$as_echo$as_echo$as_echo$as_echo\nas_echo=$as_echo$as_echo$as_echo$as_echo$as_echo$as_echo\n# Prefer a ksh shell builtin over an external printf program on Solaris,\n# but without wasting forks for bash or zsh.\nif test -z \"$BASH_VERSION$ZSH_VERSION\" \\\n    && (test \"X`print -r -- $as_echo`\" = \"X$as_echo\") 2>/dev/null; then\n  as_echo='print -r --'\n  as_echo_n='print -rn --'\nelif (test \"X`printf %s $as_echo`\" = \"X$as_echo\") 2>/dev/null; then\n  as_echo='printf %s\\n'\n  as_echo_n='printf %s'\nelse\n  if test \"X`(/usr/ucb/echo -n -n $as_echo) 2>/dev/null`\" = \"X-n $as_echo\"; then\n    as_echo_body='eval /usr/ucb/echo -n \"$1$as_nl\"'\n    as_echo_n='/usr/ucb/echo -n'\n  else\n    as_echo_body='eval expr \"X$1\" : \"X\\\\(.*\\\\)\"'\n    as_echo_n_body='eval\n      arg=$1;\n      case $arg in #(\n      *\"$as_nl\"*)\n\texpr \"X$arg\" : \"X\\\\(.*\\\\)$as_nl\";\n\targ=`expr \"X$arg\" : \".*$as_nl\\\\(.*\\\\)\"`;;\n      esac;\n      expr \"X$arg\" : \"X\\\\(.*\\\\)\" | tr -d \"$as_nl\"\n    '\n    export as_echo_n_body\n    as_echo_n='sh -c $as_echo_n_body as_echo'\n  fi\n  export as_echo_body\n  as_echo='sh -c $as_echo_body as_echo'\nfi\n\n# The user is always right.\nif test \"${PATH_SEPARATOR+set}\" != set; then\n  PATH_SEPARATOR=:\n  (PATH='/bin;/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 && {\n    (PATH='/bin:/bin'; FPATH=$PATH; sh -c :) >/dev/null 2>&1 ||\n      PATH_SEPARATOR=';'\n  }\nfi\n\n\n# IFS\n# We need space, tab and new line, in precisely that order.  Quoting is\n# there to prevent editors from complaining about space-tab.\n# (If _AS_PATH_WALK were called with IFS unset, it would disable word\n# splitting by setting IFS to empty value.)\nIFS=\" \"\"\t$as_nl\"\n\n# Find who we are.  Look in the path if we contain no directory separator.\nas_myself=\ncase $0 in #((\n  *[\\\\/]* ) as_myself=$0 ;;\n  *) as_save_IFS=$IFS; IFS=$PATH_SEPARATOR\nfor as_dir in $PATH\ndo\n  IFS=$as_save_IFS\n  test -z \"$as_dir\" && as_dir=.\n    test -r \"$as_dir/$0\" && as_myself=$as_dir/$0 && break\n  done\nIFS=$as_save_IFS\n\n     ;;\nesac\n# We did not find ourselves, most probably we were run as `sh COMMAND'\n# in which case we are not to be found in the path.\nif test \"x$as_myself\" = x; then\n  as_myself=$0\nfi\nif test ! -f \"$as_myself\"; then\n  $as_echo \"$as_myself: error: cannot find myself; rerun with an absolute file name\" >&2\n  exit 1\nfi\n\n# Unset variables that we do not need and which cause bugs (e.g. in\n# pre-3.0 UWIN ksh).  But do not cause bugs in bash 2.01; the \"|| exit 1\"\n# suppresses any \"Segmentation fault\" message there.  '((' could\n# trigger a bug in pdksh 5.2.14.\nfor as_var in BASH_ENV ENV MAIL MAILPATH\ndo eval test x\\${$as_var+set} = xset \\\n  && ( (unset $as_var) || exit 1) >/dev/null 2>&1 && unset $as_var || :\ndone\nPS1='$ '\nPS2='> '\nPS4='+ '\n\n# NLS nuisances.\nLC_ALL=C\nexport LC_ALL\nLANGUAGE=C\nexport LANGUAGE\n\n# CDPATH.\n(unset CDPATH) >/dev/null 2>&1 && unset CDPATH\n\n\n# as_fn_error STATUS ERROR [LINENO LOG_FD]\n# ----------------------------------------\n# Output \"`basename $0`: error: ERROR\" to stderr. If LINENO and LOG_FD are\n# provided, also output the error to LOG_FD, referencing LINENO. Then exit the\n# script with STATUS, using 1 if that was 0.\nas_fn_error ()\n{\n  as_status=$1; test $as_status -eq 0 && as_status=1\n  if test \"$4\"; then\n    as_lineno=${as_lineno-\"$3\"} as_lineno_stack=as_lineno_stack=$as_lineno_stack\n    $as_echo \"$as_me:${as_lineno-$LINENO}: error: $2\" >&$4\n  fi\n  $as_echo \"$as_me: error: $2\" >&2\n  as_fn_exit $as_status\n} # as_fn_error\n\n\n# as_fn_set_status STATUS\n# -----------------------\n# Set $? to STATUS, without forking.\nas_fn_set_status ()\n{\n  return $1\n} # as_fn_set_status\n\n# as_fn_exit STATUS\n# -----------------\n# Exit the shell with STATUS, even in a \"trap 0\" or \"set -e\" context.\nas_fn_exit ()\n{\n  set +e\n  as_fn_set_status $1\n  exit $1\n} # as_fn_exit\n\n# as_fn_unset VAR\n# ---------------\n# Portably unset VAR.\nas_fn_unset ()\n{\n  { eval $1=; unset $1;}\n}\nas_unset=as_fn_unset\n# as_fn_append VAR VALUE\n# ----------------------\n# Append the text in VALUE to the end of the definition contained in VAR. Take\n# advantage of any shell optimizations that allow amortized linear growth over\n# repeated appends, instead of the typical quadratic growth present in naive\n# implementations.\nif (eval \"as_var=1; as_var+=2; test x\\$as_var = x12\") 2>/dev/null; then :\n  eval 'as_fn_append ()\n  {\n    eval $1+=\\$2\n  }'\nelse\n  as_fn_append ()\n  {\n    eval $1=\\$$1\\$2\n  }\nfi # as_fn_append\n\n# as_fn_arith ARG...\n# ------------------\n# Perform arithmetic evaluation on the ARGs, and store the result in the\n# global $as_val. Take advantage of shells that can avoid forks. The arguments\n# must be portable across $(()) and expr.\nif (eval \"test \\$(( 1 + 1 )) = 2\") 2>/dev/null; then :\n  eval 'as_fn_arith ()\n  {\n    as_val=$(( $* ))\n  }'\nelse\n  as_fn_arith ()\n  {\n    as_val=`expr \"$@\" || test $? -eq 1`\n  }\nfi # as_fn_arith\n\n\nif expr a : '\\(a\\)' >/dev/null 2>&1 &&\n   test \"X`expr 00001 : '.*\\(...\\)'`\" = X001; then\n  as_expr=expr\nelse\n  as_expr=false\nfi\n\nif (basename -- /) >/dev/null 2>&1 && test \"X`basename -- / 2>&1`\" = \"X/\"; then\n  as_basename=basename\nelse\n  as_basename=false\nfi\n\nif (as_dir=`dirname -- /` && test \"X$as_dir\" = X/) >/dev/null 2>&1; then\n  as_dirname=dirname\nelse\n  as_dirname=false\nfi\n\nas_me=`$as_basename -- \"$0\" ||\n$as_expr X/\"$0\" : '.*/\\([^/][^/]*\\)/*$' \\| \\\n\t X\"$0\" : 'X\\(//\\)$' \\| \\\n\t X\"$0\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n$as_echo X/\"$0\" |\n    sed '/^.*\\/\\([^/][^/]*\\)\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\/\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\/\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n\n# Avoid depending upon Character Ranges.\nas_cr_letters='abcdefghijklmnopqrstuvwxyz'\nas_cr_LETTERS='ABCDEFGHIJKLMNOPQRSTUVWXYZ'\nas_cr_Letters=$as_cr_letters$as_cr_LETTERS\nas_cr_digits='0123456789'\nas_cr_alnum=$as_cr_Letters$as_cr_digits\n\nECHO_C= ECHO_N= ECHO_T=\ncase `echo -n x` in #(((((\n-n*)\n  case `echo 'xy\\c'` in\n  *c*) ECHO_T='\t';;\t# ECHO_T is single tab character.\n  xy)  ECHO_C='\\c';;\n  *)   echo `echo ksh88 bug on AIX 6.1` > /dev/null\n       ECHO_T='\t';;\n  esac;;\n*)\n  ECHO_N='-n';;\nesac\n\nrm -f conf$$ conf$$.exe conf$$.file\nif test -d conf$$.dir; then\n  rm -f conf$$.dir/conf$$.file\nelse\n  rm -f conf$$.dir\n  mkdir conf$$.dir 2>/dev/null\nfi\nif (echo >conf$$.file) 2>/dev/null; then\n  if ln -s conf$$.file conf$$ 2>/dev/null; then\n    as_ln_s='ln -s'\n    # ... but there are two gotchas:\n    # 1) On MSYS, both `ln -s file dir' and `ln file dir' fail.\n    # 2) DJGPP < 2.04 has no symlinks; `ln -s' creates a wrapper executable.\n    # In both cases, we have to default to `cp -pR'.\n    ln -s conf$$.file conf$$.dir 2>/dev/null && test ! -f conf$$.exe ||\n      as_ln_s='cp -pR'\n  elif ln conf$$.file conf$$ 2>/dev/null; then\n    as_ln_s=ln\n  else\n    as_ln_s='cp -pR'\n  fi\nelse\n  as_ln_s='cp -pR'\nfi\nrm -f conf$$ conf$$.exe conf$$.dir/conf$$.file conf$$.file\nrmdir conf$$.dir 2>/dev/null\n\n\n# as_fn_mkdir_p\n# -------------\n# Create \"$as_dir\" as a directory, including parents if necessary.\nas_fn_mkdir_p ()\n{\n\n  case $as_dir in #(\n  -*) as_dir=./$as_dir;;\n  esac\n  test -d \"$as_dir\" || eval $as_mkdir_p || {\n    as_dirs=\n    while :; do\n      case $as_dir in #(\n      *\\'*) as_qdir=`$as_echo \"$as_dir\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"`;; #'(\n      *) as_qdir=$as_dir;;\n      esac\n      as_dirs=\"'$as_qdir' $as_dirs\"\n      as_dir=`$as_dirname -- \"$as_dir\" ||\n$as_expr X\"$as_dir\" : 'X\\(.*[^/]\\)//*[^/][^/]*/*$' \\| \\\n\t X\"$as_dir\" : 'X\\(//\\)[^/]' \\| \\\n\t X\"$as_dir\" : 'X\\(//\\)$' \\| \\\n\t X\"$as_dir\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n$as_echo X\"$as_dir\" |\n    sed '/^X\\(.*[^/]\\)\\/\\/*[^/][^/]*\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)[^/].*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n      test -d \"$as_dir\" && break\n    done\n    test -z \"$as_dirs\" || eval \"mkdir $as_dirs\"\n  } || test -d \"$as_dir\" || as_fn_error $? \"cannot create directory $as_dir\"\n\n\n} # as_fn_mkdir_p\nif mkdir -p . 2>/dev/null; then\n  as_mkdir_p='mkdir -p \"$as_dir\"'\nelse\n  test -d ./-p && rmdir ./-p\n  as_mkdir_p=false\nfi\n\n\n# as_fn_executable_p FILE\n# -----------------------\n# Test if FILE is an executable regular file.\nas_fn_executable_p ()\n{\n  test -f \"$1\" && test -x \"$1\"\n} # as_fn_executable_p\nas_test_x='test -x'\nas_executable_p=as_fn_executable_p\n\n# Sed expression to map a string onto a valid CPP name.\nas_tr_cpp=\"eval sed 'y%*$as_cr_letters%P$as_cr_LETTERS%;s%[^_$as_cr_alnum]%_%g'\"\n\n# Sed expression to map a string onto a valid variable name.\nas_tr_sh=\"eval sed 'y%*+%pp%;s%[^_$as_cr_alnum]%_%g'\"\n\n\nexec 6>&1\n## ----------------------------------- ##\n## Main body of $CONFIG_STATUS script. ##\n## ----------------------------------- ##\n_ASEOF\ntest $as_write_fail = 0 && chmod +x $CONFIG_STATUS || ac_write_fail=1\n\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n# Save the log message, to keep $0 and so on meaningful, and to\n# report actual input values of CONFIG_FILES etc. instead of their\n# values after options handling.\nac_log=\"\nThis file was extended by Citus $as_me 12.2devel, which was\ngenerated by GNU Autoconf 2.69.  Invocation command line was\n\n  CONFIG_FILES    = $CONFIG_FILES\n  CONFIG_HEADERS  = $CONFIG_HEADERS\n  CONFIG_LINKS    = $CONFIG_LINKS\n  CONFIG_COMMANDS = $CONFIG_COMMANDS\n  $ $0 $@\n\non `(hostname || uname -n) 2>/dev/null | sed 1q`\n\"\n\n_ACEOF\n\ncase $ac_config_files in *\"\n\"*) set x $ac_config_files; shift; ac_config_files=$*;;\nesac\n\ncase $ac_config_headers in *\"\n\"*) set x $ac_config_headers; shift; ac_config_headers=$*;;\nesac\n\n\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\n# Files that config.status was made for.\nconfig_files=\"$ac_config_files\"\nconfig_headers=\"$ac_config_headers\"\n\n_ACEOF\n\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\nac_cs_usage=\"\\\n\\`$as_me' instantiates files and other configuration actions\nfrom templates according to the current configuration.  Unless the files\nand actions are specified as TAGs, all are instantiated by default.\n\nUsage: $0 [OPTION]... [TAG]...\n\n  -h, --help       print this help, then exit\n  -V, --version    print version number and configuration settings, then exit\n      --config     print configuration, then exit\n  -q, --quiet, --silent\n                   do not print progress messages\n  -d, --debug      don't remove temporary files\n      --recheck    update $as_me by reconfiguring in the same conditions\n      --file=FILE[:TEMPLATE]\n                   instantiate the configuration file FILE\n      --header=FILE[:TEMPLATE]\n                   instantiate the configuration header FILE\n\nConfiguration files:\n$config_files\n\nConfiguration headers:\n$config_headers\n\nReport bugs to the package provider.\"\n\n_ACEOF\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\nac_cs_config=\"`$as_echo \"$ac_configure_args\" | sed 's/^ //; s/[\\\\\"\"\\`\\$]/\\\\\\\\&/g'`\"\nac_cs_version=\"\\\\\nCitus config.status 12.2devel\nconfigured by $0, generated by GNU Autoconf 2.69,\n  with options \\\\\"\\$ac_cs_config\\\\\"\n\nCopyright (C) 2012 Free Software Foundation, Inc.\nThis config.status script is free software; the Free Software Foundation\ngives unlimited permission to copy, distribute and modify it.\"\n\nac_pwd='$ac_pwd'\nsrcdir='$srcdir'\nAWK='$AWK'\ntest -n \"\\$AWK\" || AWK=awk\n_ACEOF\n\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n# The default lists apply if the user does not specify any file.\nac_need_defaults=:\nwhile test $# != 0\ndo\n  case $1 in\n  --*=?*)\n    ac_option=`expr \"X$1\" : 'X\\([^=]*\\)='`\n    ac_optarg=`expr \"X$1\" : 'X[^=]*=\\(.*\\)'`\n    ac_shift=:\n    ;;\n  --*=)\n    ac_option=`expr \"X$1\" : 'X\\([^=]*\\)='`\n    ac_optarg=\n    ac_shift=:\n    ;;\n  *)\n    ac_option=$1\n    ac_optarg=$2\n    ac_shift=shift\n    ;;\n  esac\n\n  case $ac_option in\n  # Handling of the options.\n  -recheck | --recheck | --rechec | --reche | --rech | --rec | --re | --r)\n    ac_cs_recheck=: ;;\n  --version | --versio | --versi | --vers | --ver | --ve | --v | -V )\n    $as_echo \"$ac_cs_version\"; exit ;;\n  --config | --confi | --conf | --con | --co | --c )\n    $as_echo \"$ac_cs_config\"; exit ;;\n  --debug | --debu | --deb | --de | --d | -d )\n    debug=: ;;\n  --file | --fil | --fi | --f )\n    $ac_shift\n    case $ac_optarg in\n    *\\'*) ac_optarg=`$as_echo \"$ac_optarg\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"` ;;\n    '') as_fn_error $? \"missing file argument\" ;;\n    esac\n    as_fn_append CONFIG_FILES \" '$ac_optarg'\"\n    ac_need_defaults=false;;\n  --header | --heade | --head | --hea )\n    $ac_shift\n    case $ac_optarg in\n    *\\'*) ac_optarg=`$as_echo \"$ac_optarg\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"` ;;\n    esac\n    as_fn_append CONFIG_HEADERS \" '$ac_optarg'\"\n    ac_need_defaults=false;;\n  --he | --h)\n    # Conflict between --help and --header\n    as_fn_error $? \"ambiguous option: \\`$1'\nTry \\`$0 --help' for more information.\";;\n  --help | --hel | -h )\n    $as_echo \"$ac_cs_usage\"; exit ;;\n  -q | -quiet | --quiet | --quie | --qui | --qu | --q \\\n  | -silent | --silent | --silen | --sile | --sil | --si | --s)\n    ac_cs_silent=: ;;\n\n  # This is an error.\n  -*) as_fn_error $? \"unrecognized option: \\`$1'\nTry \\`$0 --help' for more information.\" ;;\n\n  *) as_fn_append ac_config_targets \" $1\"\n     ac_need_defaults=false ;;\n\n  esac\n  shift\ndone\n\nac_configure_extra_args=\n\nif $ac_cs_silent; then\n  exec 6>/dev/null\n  ac_configure_extra_args=\"$ac_configure_extra_args --silent\"\nfi\n\n_ACEOF\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\nif \\$ac_cs_recheck; then\n  set X $SHELL '$0' $ac_configure_args \\$ac_configure_extra_args --no-create --no-recursion\n  shift\n  \\$as_echo \"running CONFIG_SHELL=$SHELL \\$*\" >&6\n  CONFIG_SHELL='$SHELL'\n  export CONFIG_SHELL\n  exec \"\\$@\"\nfi\n\n_ACEOF\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\nexec 5>>config.log\n{\n  echo\n  sed 'h;s/./-/g;s/^.../## /;s/...$/ ##/;p;x;p;x' <<_ASBOX\n## Running $as_me. ##\n_ASBOX\n  $as_echo \"$ac_log\"\n} >&5\n\n_ACEOF\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\n_ACEOF\n\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n\n# Handling of arguments.\nfor ac_config_target in $ac_config_targets\ndo\n  case $ac_config_target in\n    \"Makefile.global\") CONFIG_FILES=\"$CONFIG_FILES Makefile.global\" ;;\n    \"src/include/citus_config.h\") CONFIG_HEADERS=\"$CONFIG_HEADERS src/include/citus_config.h\" ;;\n    \"src/include/citus_version.h\") CONFIG_HEADERS=\"$CONFIG_HEADERS src/include/citus_version.h\" ;;\n\n  *) as_fn_error $? \"invalid argument: \\`$ac_config_target'\" \"$LINENO\" 5;;\n  esac\ndone\n\n\n# If the user did not use the arguments to specify the items to instantiate,\n# then the envvar interface is used.  Set only those that are not.\n# We use the long form for the default assignment because of an extremely\n# bizarre bug on SunOS 4.1.3.\nif $ac_need_defaults; then\n  test \"${CONFIG_FILES+set}\" = set || CONFIG_FILES=$config_files\n  test \"${CONFIG_HEADERS+set}\" = set || CONFIG_HEADERS=$config_headers\nfi\n\n# Have a temporary directory for convenience.  Make it in the build tree\n# simply because there is no reason against having it here, and in addition,\n# creating and moving files from /tmp can sometimes cause problems.\n# Hook for its removal unless debugging.\n# Note that there is a small window in which the directory will not be cleaned:\n# after its creation but before its name has been assigned to `$tmp'.\n$debug ||\n{\n  tmp= ac_tmp=\n  trap 'exit_status=$?\n  : \"${ac_tmp:=$tmp}\"\n  { test ! -d \"$ac_tmp\" || rm -fr \"$ac_tmp\"; } && exit $exit_status\n' 0\n  trap 'as_fn_exit 1' 1 2 13 15\n}\n# Create a (secure) tmp directory for tmp files.\n\n{\n  tmp=`(umask 077 && mktemp -d \"./confXXXXXX\") 2>/dev/null` &&\n  test -d \"$tmp\"\n}  ||\n{\n  tmp=./conf$$-$RANDOM\n  (umask 077 && mkdir \"$tmp\")\n} || as_fn_error $? \"cannot create a temporary directory in .\" \"$LINENO\" 5\nac_tmp=$tmp\n\n# Set up the scripts for CONFIG_FILES section.\n# No need to generate them if there are no CONFIG_FILES.\n# This happens for instance with `./config.status config.h'.\nif test -n \"$CONFIG_FILES\"; then\n\n\nac_cr=`echo X | tr X '\\015'`\n# On cygwin, bash can eat \\r inside `` if the user requested igncr.\n# But we know of no other shell where ac_cr would be empty at this\n# point, so we can use a bashism as a fallback.\nif test \"x$ac_cr\" = x; then\n  eval ac_cr=\\$\\'\\\\r\\'\nfi\nac_cs_awk_cr=`$AWK 'BEGIN { print \"a\\rb\" }' </dev/null 2>/dev/null`\nif test \"$ac_cs_awk_cr\" = \"a${ac_cr}b\"; then\n  ac_cs_awk_cr='\\\\r'\nelse\n  ac_cs_awk_cr=$ac_cr\nfi\n\necho 'BEGIN {' >\"$ac_tmp/subs1.awk\" &&\n_ACEOF\n\n\n{\n  echo \"cat >conf$$subs.awk <<_ACEOF\" &&\n  echo \"$ac_subst_vars\" | sed 's/.*/&!$&$ac_delim/' &&\n  echo \"_ACEOF\"\n} >conf$$subs.sh ||\n  as_fn_error $? \"could not make $CONFIG_STATUS\" \"$LINENO\" 5\nac_delim_num=`echo \"$ac_subst_vars\" | grep -c '^'`\nac_delim='%!_!# '\nfor ac_last_try in false false false false false :; do\n  . ./conf$$subs.sh ||\n    as_fn_error $? \"could not make $CONFIG_STATUS\" \"$LINENO\" 5\n\n  ac_delim_n=`sed -n \"s/.*$ac_delim\\$/X/p\" conf$$subs.awk | grep -c X`\n  if test $ac_delim_n = $ac_delim_num; then\n    break\n  elif $ac_last_try; then\n    as_fn_error $? \"could not make $CONFIG_STATUS\" \"$LINENO\" 5\n  else\n    ac_delim=\"$ac_delim!$ac_delim _$ac_delim!! \"\n  fi\ndone\nrm -f conf$$subs.sh\n\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\ncat >>\"\\$ac_tmp/subs1.awk\" <<\\\\_ACAWK &&\n_ACEOF\nsed -n '\nh\ns/^/S[\"/; s/!.*/\"]=/\np\ng\ns/^[^!]*!//\n:repl\nt repl\ns/'\"$ac_delim\"'$//\nt delim\n:nl\nh\ns/\\(.\\{148\\}\\)..*/\\1/\nt more1\ns/[\"\\\\]/\\\\&/g; s/^/\"/; s/$/\\\\n\"\\\\/\np\nn\nb repl\n:more1\ns/[\"\\\\]/\\\\&/g; s/^/\"/; s/$/\"\\\\/\np\ng\ns/.\\{148\\}//\nt nl\n:delim\nh\ns/\\(.\\{148\\}\\)..*/\\1/\nt more2\ns/[\"\\\\]/\\\\&/g; s/^/\"/; s/$/\"/\np\nb\n:more2\ns/[\"\\\\]/\\\\&/g; s/^/\"/; s/$/\"\\\\/\np\ng\ns/.\\{148\\}//\nt delim\n' <conf$$subs.awk | sed '\n/^[^\"\"]/{\n  N\n  s/\\n//\n}\n' >>$CONFIG_STATUS || ac_write_fail=1\nrm -f conf$$subs.awk\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\n_ACAWK\ncat >>\"\\$ac_tmp/subs1.awk\" <<_ACAWK &&\n  for (key in S) S_is_set[key] = 1\n  FS = \"\u0007\"\n\n}\n{\n  line = $ 0\n  nfields = split(line, field, \"@\")\n  substed = 0\n  len = length(field[1])\n  for (i = 2; i < nfields; i++) {\n    key = field[i]\n    keylen = length(key)\n    if (S_is_set[key]) {\n      value = S[key]\n      line = substr(line, 1, len) \"\" value \"\" substr(line, len + keylen + 3)\n      len += length(value) + length(field[++i])\n      substed = 1\n    } else\n      len += 1 + keylen\n  }\n\n  print line\n}\n\n_ACAWK\n_ACEOF\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\nif sed \"s/$ac_cr//\" < /dev/null > /dev/null 2>&1; then\n  sed \"s/$ac_cr\\$//; s/$ac_cr/$ac_cs_awk_cr/g\"\nelse\n  cat\nfi < \"$ac_tmp/subs1.awk\" > \"$ac_tmp/subs.awk\" \\\n  || as_fn_error $? \"could not setup config files machinery\" \"$LINENO\" 5\n_ACEOF\n\n# VPATH may cause trouble with some makes, so we remove sole $(srcdir),\n# ${srcdir} and @srcdir@ entries from VPATH if srcdir is \".\", strip leading and\n# trailing colons and then remove the whole line if VPATH becomes empty\n# (actually we leave an empty line to preserve line numbers).\nif test \"x$srcdir\" = x.; then\n  ac_vpsub='/^[\t ]*VPATH[\t ]*=[\t ]*/{\nh\ns///\ns/^/:/\ns/[\t ]*$/:/\ns/:\\$(srcdir):/:/g\ns/:\\${srcdir}:/:/g\ns/:@srcdir@:/:/g\ns/^:*//\ns/:*$//\nx\ns/\\(=[\t ]*\\).*/\\1/\nG\ns/\\n//\ns/^[^=]*=[\t ]*$//\n}'\nfi\n\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\nfi # test -n \"$CONFIG_FILES\"\n\n# Set up the scripts for CONFIG_HEADERS section.\n# No need to generate them if there are no CONFIG_HEADERS.\n# This happens for instance with `./config.status Makefile'.\nif test -n \"$CONFIG_HEADERS\"; then\ncat >\"$ac_tmp/defines.awk\" <<\\_ACAWK ||\nBEGIN {\n_ACEOF\n\n# Transform confdefs.h into an awk script `defines.awk', embedded as\n# here-document in config.status, that substitutes the proper values into\n# config.h.in to produce config.h.\n\n# Create a delimiter string that does not exist in confdefs.h, to ease\n# handling of long lines.\nac_delim='%!_!# '\nfor ac_last_try in false false :; do\n  ac_tt=`sed -n \"/$ac_delim/p\" confdefs.h`\n  if test -z \"$ac_tt\"; then\n    break\n  elif $ac_last_try; then\n    as_fn_error $? \"could not make $CONFIG_HEADERS\" \"$LINENO\" 5\n  else\n    ac_delim=\"$ac_delim!$ac_delim _$ac_delim!! \"\n  fi\ndone\n\n# For the awk script, D is an array of macro values keyed by name,\n# likewise P contains macro parameters if any.  Preserve backslash\n# newline sequences.\n\nac_word_re=[_$as_cr_Letters][_$as_cr_alnum]*\nsed -n '\ns/.\\{148\\}/&'\"$ac_delim\"'/g\nt rset\n:rset\ns/^[\t ]*#[\t ]*define[\t ][\t ]*/ /\nt def\nd\n:def\ns/\\\\$//\nt bsnl\ns/[\"\\\\]/\\\\&/g\ns/^ \\('\"$ac_word_re\"'\\)\\(([^()]*)\\)[\t ]*\\(.*\\)/P[\"\\1\"]=\"\\2\"\\\nD[\"\\1\"]=\" \\3\"/p\ns/^ \\('\"$ac_word_re\"'\\)[\t ]*\\(.*\\)/D[\"\\1\"]=\" \\2\"/p\nd\n:bsnl\ns/[\"\\\\]/\\\\&/g\ns/^ \\('\"$ac_word_re\"'\\)\\(([^()]*)\\)[\t ]*\\(.*\\)/P[\"\\1\"]=\"\\2\"\\\nD[\"\\1\"]=\" \\3\\\\\\\\\\\\n\"\\\\/p\nt cont\ns/^ \\('\"$ac_word_re\"'\\)[\t ]*\\(.*\\)/D[\"\\1\"]=\" \\2\\\\\\\\\\\\n\"\\\\/p\nt cont\nd\n:cont\nn\ns/.\\{148\\}/&'\"$ac_delim\"'/g\nt clear\n:clear\ns/\\\\$//\nt bsnlc\ns/[\"\\\\]/\\\\&/g; s/^/\"/; s/$/\"/p\nd\n:bsnlc\ns/[\"\\\\]/\\\\&/g; s/^/\"/; s/$/\\\\\\\\\\\\n\"\\\\/p\nb cont\n' <confdefs.h | sed '\ns/'\"$ac_delim\"'/\"\\\\\\\n\"/g' >>$CONFIG_STATUS || ac_write_fail=1\n\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\n  for (key in D) D_is_set[key] = 1\n  FS = \"\u0007\"\n}\n/^[\\t ]*#[\\t ]*(define|undef)[\\t ]+$ac_word_re([\\t (]|\\$)/ {\n  line = \\$ 0\n  split(line, arg, \" \")\n  if (arg[1] == \"#\") {\n    defundef = arg[2]\n    mac1 = arg[3]\n  } else {\n    defundef = substr(arg[1], 2)\n    mac1 = arg[2]\n  }\n  split(mac1, mac2, \"(\") #)\n  macro = mac2[1]\n  prefix = substr(line, 1, index(line, defundef) - 1)\n  if (D_is_set[macro]) {\n    # Preserve the white space surrounding the \"#\".\n    print prefix \"define\", macro P[macro] D[macro]\n    next\n  } else {\n    # Replace #undef with comments.  This is necessary, for example,\n    # in the case of _POSIX_SOURCE, which is predefined and required\n    # on some systems where configure will not decide to define it.\n    if (defundef == \"undef\") {\n      print \"/*\", prefix defundef, macro, \"*/\"\n      next\n    }\n  }\n}\n{ print }\n_ACAWK\n_ACEOF\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n  as_fn_error $? \"could not setup config headers machinery\" \"$LINENO\" 5\nfi # test -n \"$CONFIG_HEADERS\"\n\n\neval set X \"  :F $CONFIG_FILES  :H $CONFIG_HEADERS    \"\nshift\nfor ac_tag\ndo\n  case $ac_tag in\n  :[FHLC]) ac_mode=$ac_tag; continue;;\n  esac\n  case $ac_mode$ac_tag in\n  :[FHL]*:*);;\n  :L* | :C*:*) as_fn_error $? \"invalid tag \\`$ac_tag'\" \"$LINENO\" 5;;\n  :[FH]-) ac_tag=-:-;;\n  :[FH]*) ac_tag=$ac_tag:$ac_tag.in;;\n  esac\n  ac_save_IFS=$IFS\n  IFS=:\n  set x $ac_tag\n  IFS=$ac_save_IFS\n  shift\n  ac_file=$1\n  shift\n\n  case $ac_mode in\n  :L) ac_source=$1;;\n  :[FH])\n    ac_file_inputs=\n    for ac_f\n    do\n      case $ac_f in\n      -) ac_f=\"$ac_tmp/stdin\";;\n      *) # Look for the file first in the build tree, then in the source tree\n\t # (if the path is not absolute).  The absolute path cannot be DOS-style,\n\t # because $ac_f cannot contain `:'.\n\t test -f \"$ac_f\" ||\n\t   case $ac_f in\n\t   [\\\\/$]*) false;;\n\t   *) test -f \"$srcdir/$ac_f\" && ac_f=\"$srcdir/$ac_f\";;\n\t   esac ||\n\t   as_fn_error 1 \"cannot find input file: \\`$ac_f'\" \"$LINENO\" 5;;\n      esac\n      case $ac_f in *\\'*) ac_f=`$as_echo \"$ac_f\" | sed \"s/'/'\\\\\\\\\\\\\\\\''/g\"`;; esac\n      as_fn_append ac_file_inputs \" '$ac_f'\"\n    done\n\n    # Let's still pretend it is `configure' which instantiates (i.e., don't\n    # use $as_me), people would be surprised to read:\n    #    /* config.h.  Generated by config.status.  */\n    configure_input='Generated from '`\n\t  $as_echo \"$*\" | sed 's|^[^:]*/||;s|:[^:]*/|, |g'\n\t`' by configure.'\n    if test x\"$ac_file\" != x-; then\n      configure_input=\"$ac_file.  $configure_input\"\n      { $as_echo \"$as_me:${as_lineno-$LINENO}: creating $ac_file\" >&5\n$as_echo \"$as_me: creating $ac_file\" >&6;}\n    fi\n    # Neutralize special characters interpreted by sed in replacement strings.\n    case $configure_input in #(\n    *\\&* | *\\|* | *\\\\* )\n       ac_sed_conf_input=`$as_echo \"$configure_input\" |\n       sed 's/[\\\\\\\\&|]/\\\\\\\\&/g'`;; #(\n    *) ac_sed_conf_input=$configure_input;;\n    esac\n\n    case $ac_tag in\n    *:-:* | *:-) cat >\"$ac_tmp/stdin\" \\\n      || as_fn_error $? \"could not create $ac_file\" \"$LINENO\" 5 ;;\n    esac\n    ;;\n  esac\n\n  ac_dir=`$as_dirname -- \"$ac_file\" ||\n$as_expr X\"$ac_file\" : 'X\\(.*[^/]\\)//*[^/][^/]*/*$' \\| \\\n\t X\"$ac_file\" : 'X\\(//\\)[^/]' \\| \\\n\t X\"$ac_file\" : 'X\\(//\\)$' \\| \\\n\t X\"$ac_file\" : 'X\\(/\\)' \\| . 2>/dev/null ||\n$as_echo X\"$ac_file\" |\n    sed '/^X\\(.*[^/]\\)\\/\\/*[^/][^/]*\\/*$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)[^/].*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\/\\)$/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  /^X\\(\\/\\).*/{\n\t    s//\\1/\n\t    q\n\t  }\n\t  s/.*/./; q'`\n  as_dir=\"$ac_dir\"; as_fn_mkdir_p\n  ac_builddir=.\n\ncase \"$ac_dir\" in\n.) ac_dir_suffix= ac_top_builddir_sub=. ac_top_build_prefix= ;;\n*)\n  ac_dir_suffix=/`$as_echo \"$ac_dir\" | sed 's|^\\.[\\\\/]||'`\n  # A \"..\" for each directory in $ac_dir_suffix.\n  ac_top_builddir_sub=`$as_echo \"$ac_dir_suffix\" | sed 's|/[^\\\\/]*|/..|g;s|/||'`\n  case $ac_top_builddir_sub in\n  \"\") ac_top_builddir_sub=. ac_top_build_prefix= ;;\n  *)  ac_top_build_prefix=$ac_top_builddir_sub/ ;;\n  esac ;;\nesac\nac_abs_top_builddir=$ac_pwd\nac_abs_builddir=$ac_pwd$ac_dir_suffix\n# for backward compatibility:\nac_top_builddir=$ac_top_build_prefix\n\ncase $srcdir in\n  .)  # We are building in place.\n    ac_srcdir=.\n    ac_top_srcdir=$ac_top_builddir_sub\n    ac_abs_top_srcdir=$ac_pwd ;;\n  [\\\\/]* | ?:[\\\\/]* )  # Absolute name.\n    ac_srcdir=$srcdir$ac_dir_suffix;\n    ac_top_srcdir=$srcdir\n    ac_abs_top_srcdir=$srcdir ;;\n  *) # Relative name.\n    ac_srcdir=$ac_top_build_prefix$srcdir$ac_dir_suffix\n    ac_top_srcdir=$ac_top_build_prefix$srcdir\n    ac_abs_top_srcdir=$ac_pwd/$srcdir ;;\nesac\nac_abs_srcdir=$ac_abs_top_srcdir$ac_dir_suffix\n\n\n  case $ac_mode in\n  :F)\n  #\n  # CONFIG_FILE\n  #\n\n_ACEOF\n\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n# If the template does not know about datarootdir, expand it.\n# FIXME: This hack should be removed a few years after 2.60.\nac_datarootdir_hack=; ac_datarootdir_seen=\nac_sed_dataroot='\n/datarootdir/ {\n  p\n  q\n}\n/@datadir@/p\n/@docdir@/p\n/@infodir@/p\n/@localedir@/p\n/@mandir@/p'\ncase `eval \"sed -n \\\"\\$ac_sed_dataroot\\\" $ac_file_inputs\"` in\n*datarootdir*) ac_datarootdir_seen=yes;;\n*@datadir@*|*@docdir@*|*@infodir@*|*@localedir@*|*@mandir@*)\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting\" >&5\n$as_echo \"$as_me: WARNING: $ac_file_inputs seems to ignore the --datarootdir setting\" >&2;}\n_ACEOF\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\n  ac_datarootdir_hack='\n  s&@datadir@&$datadir&g\n  s&@docdir@&$docdir&g\n  s&@infodir@&$infodir&g\n  s&@localedir@&$localedir&g\n  s&@mandir@&$mandir&g\n  s&\\\\\\${datarootdir}&$datarootdir&g' ;;\nesac\n_ACEOF\n\n# Neutralize VPATH when `$srcdir' = `.'.\n# Shell code in configure.ac might set extrasub.\n# FIXME: do we really want to maintain this feature?\ncat >>$CONFIG_STATUS <<_ACEOF || ac_write_fail=1\nac_sed_extra=\"$ac_vpsub\n$extrasub\n_ACEOF\ncat >>$CONFIG_STATUS <<\\_ACEOF || ac_write_fail=1\n:t\n/@[a-zA-Z_][a-zA-Z_0-9]*@/!b\ns|@configure_input@|$ac_sed_conf_input|;t t\ns&@top_builddir@&$ac_top_builddir_sub&;t t\ns&@top_build_prefix@&$ac_top_build_prefix&;t t\ns&@srcdir@&$ac_srcdir&;t t\ns&@abs_srcdir@&$ac_abs_srcdir&;t t\ns&@top_srcdir@&$ac_top_srcdir&;t t\ns&@abs_top_srcdir@&$ac_abs_top_srcdir&;t t\ns&@builddir@&$ac_builddir&;t t\ns&@abs_builddir@&$ac_abs_builddir&;t t\ns&@abs_top_builddir@&$ac_abs_top_builddir&;t t\n$ac_datarootdir_hack\n\"\neval sed \\\"\\$ac_sed_extra\\\" \"$ac_file_inputs\" | $AWK -f \"$ac_tmp/subs.awk\" \\\n  >$ac_tmp/out || as_fn_error $? \"could not create $ac_file\" \"$LINENO\" 5\n\ntest -z \"$ac_datarootdir_hack$ac_datarootdir_seen\" &&\n  { ac_out=`sed -n '/\\${datarootdir}/p' \"$ac_tmp/out\"`; test -n \"$ac_out\"; } &&\n  { ac_out=`sed -n '/^[\t ]*datarootdir[\t ]*:*=/p' \\\n      \"$ac_tmp/out\"`; test -z \"$ac_out\"; } &&\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: $ac_file contains a reference to the variable \\`datarootdir'\nwhich seems to be undefined.  Please make sure it is defined\" >&5\n$as_echo \"$as_me: WARNING: $ac_file contains a reference to the variable \\`datarootdir'\nwhich seems to be undefined.  Please make sure it is defined\" >&2;}\n\n  rm -f \"$ac_tmp/stdin\"\n  case $ac_file in\n  -) cat \"$ac_tmp/out\" && rm -f \"$ac_tmp/out\";;\n  *) rm -f \"$ac_file\" && mv \"$ac_tmp/out\" \"$ac_file\";;\n  esac \\\n  || as_fn_error $? \"could not create $ac_file\" \"$LINENO\" 5\n ;;\n  :H)\n  #\n  # CONFIG_HEADER\n  #\n  if test x\"$ac_file\" != x-; then\n    {\n      $as_echo \"/* $configure_input  */\" \\\n      && eval '$AWK -f \"$ac_tmp/defines.awk\"' \"$ac_file_inputs\"\n    } >\"$ac_tmp/config.h\" \\\n      || as_fn_error $? \"could not create $ac_file\" \"$LINENO\" 5\n    if diff \"$ac_file\" \"$ac_tmp/config.h\" >/dev/null 2>&1; then\n      { $as_echo \"$as_me:${as_lineno-$LINENO}: $ac_file is unchanged\" >&5\n$as_echo \"$as_me: $ac_file is unchanged\" >&6;}\n    else\n      rm -f \"$ac_file\"\n      mv \"$ac_tmp/config.h\" \"$ac_file\" \\\n\t|| as_fn_error $? \"could not create $ac_file\" \"$LINENO\" 5\n    fi\n  else\n    $as_echo \"/* $configure_input  */\" \\\n      && eval '$AWK -f \"$ac_tmp/defines.awk\"' \"$ac_file_inputs\" \\\n      || as_fn_error $? \"could not create -\" \"$LINENO\" 5\n  fi\n ;;\n\n\n  esac\n\ndone # for ac_tag\n\n\nas_fn_exit 0\n_ACEOF\nac_clean_files=$ac_clean_files_save\n\ntest $ac_write_fail = 0 ||\n  as_fn_error $? \"write failure creating $CONFIG_STATUS\" \"$LINENO\" 5\n\n\n# configure is writing to config.log, and then calls config.status.\n# config.status does its own redirection, appending to config.log.\n# Unfortunately, on DOS this fails, as config.log is still kept open\n# by configure, so config.status won't be able to write to it; its\n# output is simply discarded.  So we exec the FD to /dev/null,\n# effectively closing config.log, so it can be properly (re)opened and\n# appended to by config.status.  When coming back to configure, we\n# need to make the FD available again.\nif test \"$no_create\" != yes; then\n  ac_cs_success=:\n  ac_config_status_args=\n  test \"$silent\" = yes &&\n    ac_config_status_args=\"$ac_config_status_args --quiet\"\n  exec 5>/dev/null\n  $SHELL $CONFIG_STATUS $ac_config_status_args || ac_cs_success=false\n  exec 5>>config.log\n  # Use ||, not &&, to avoid exiting from the if with $? = 1, which\n  # would make configure fail if this is the last instruction.\n  $ac_cs_success || as_fn_exit 1\nfi\nif test -n \"$ac_unrecognized_opts\" && test \"$enable_option_checking\" != no; then\n  { $as_echo \"$as_me:${as_lineno-$LINENO}: WARNING: unrecognized options: $ac_unrecognized_opts\" >&5\n$as_echo \"$as_me: WARNING: unrecognized options: $ac_unrecognized_opts\" >&2;}\nfi\n\n"
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 12.494140625,
          "content": "# Citus autoconf input script.\n#\n# Converted into an actual configure script by autogen.sh. This\n# conversion only has to be done when configure.in changes. To avoid\n# everyone needing autoconf installed, the resulting files are checked\n# into the SCM.\n\nAC_INIT([Citus], [12.2devel])\nAC_COPYRIGHT([Copyright (c) Citus Data, Inc.])\n\n# we'll need sed and awk for some of the version commands\nAC_PROG_SED\nAC_PROG_AWK\n\n# CITUS_NAME definition\nAC_DEFINE_UNQUOTED(CITUS_NAME, \"$PACKAGE_NAME\", [Citus full name as a string])\n\ncase $PACKAGE_NAME in\n  'Citus Enterprise') citus_edition=enterprise ;;\n               Citus) citus_edition=community ;;\n                   *) AC_MSG_ERROR([Unrecognized package name.]) ;;\nesac\n\n# CITUS_EDITION definition\nAC_DEFINE_UNQUOTED(CITUS_EDITION, \"$citus_edition\", [Citus edition as a string])\n\n# CITUS_MAJORVERSION definition\n[CITUS_MAJORVERSION=`expr \"$PACKAGE_VERSION\" : '\\([0-9][0-9]*\\.[0-9][0-9]*\\)'`]\nAC_DEFINE_UNQUOTED(CITUS_MAJORVERSION, \"$CITUS_MAJORVERSION\", [Citus major version as a string])\n\n# CITUS_VERSION definition\nPGAC_ARG_REQ(with, extra-version, [STRING], [append STRING to version],\n             [CITUS_VERSION=\"$PACKAGE_VERSION$withval\"],\n             [CITUS_VERSION=\"$PACKAGE_VERSION\"])\nAC_DEFINE_UNQUOTED(CITUS_VERSION, \"$CITUS_VERSION\", [Citus version as a string])\n\n# CITUS_VERSION_NUM definition\n# awk -F is a regex on some platforms, and not on others, so make \".\" a tab\n[CITUS_VERSION_NUM=\"`echo \"$PACKAGE_VERSION\" | sed 's/[A-Za-z].*$//' |\ntr '.' '\t' |\n$AWK '{printf \"%d%02d%02d\", $1, $2, (NF >= 3) ? $3 : 0}'`\"]\nAC_DEFINE_UNQUOTED(CITUS_VERSION_NUM, $CITUS_VERSION_NUM, [Citus version as a number])\n\n# CITUS_EXTENSIONVERSION definition\n[CITUS_EXTENSIONVERSION=\"`grep '^default_version' $srcdir/src/backend/distributed/citus.control | cut -d\\' -f2`\"]\nAC_DEFINE_UNQUOTED([CITUS_EXTENSIONVERSION], \"$CITUS_EXTENSIONVERSION\", [Extension version expected by this Citus build])\n\n# Re-check for flex. That allows to compile citus against a postgres\n# which was built without flex available (possible because generated\n# files are included)\nAC_PATH_PROG([FLEX], [flex])\n\n# Locate pg_config binary\nAC_ARG_VAR([PG_CONFIG], [Location to find pg_config for target PostgreSQL instalation (default PATH)])\nAC_ARG_VAR([PATH], [PATH for target PostgreSQL install pg_config])\n\nif test -z \"$PG_CONFIG\"; then\n  AC_PATH_PROG(PG_CONFIG, pg_config)\nfi\n\nif test -z \"$PG_CONFIG\"; then\n   AC_MSG_ERROR([Could not find pg_config. Set PG_CONFIG or PATH.])\nfi\n\n# check we're building against a supported version of PostgreSQL\ncitusac_pg_config_version=$($PG_CONFIG --version 2>/dev/null)\nversion_num=$(echo \"$citusac_pg_config_version\"|\n              $SED -e 's/^PostgreSQL \\([[0-9]]*\\)\\(\\.[[0-9]]*\\)\\{0,1\\}\\(.*\\)$/\\1\\2/')\n\n# if PostgreSQL version starts with two digits, the major version is those digits\nversion_num=$(echo \"$version_num\"| $SED -e 's/^\\([[0-9]]\\{2\\}\\)\\(.*\\)$/\\1/')\n\nif test -z \"$version_num\"; then\n  AC_MSG_ERROR([Could not detect PostgreSQL version from pg_config.])\nfi\n\nPGAC_ARG_BOOL(with, pg-version-check, yes,\n              [do not check postgres version during configure])\nAC_SUBST(with_pg_version_check)\n\nif test \"$with_pg_version_check\" = no; then\n    AC_MSG_NOTICE([building against PostgreSQL $version_num (skipped compatibility check)])\nelif test \"$version_num\" != '14' -a \"$version_num\" != '15' -a  \"$version_num\" != '16'; then\n   AC_MSG_ERROR([Citus is not compatible with the detected PostgreSQL version ${version_num}.])\nelse\n   AC_MSG_NOTICE([building against PostgreSQL $version_num])\nfi;\n\n# Check whether we're building inside the source tree, if not, prepare\n# the build directory.\nif test \"$srcdir\" -ef '.' ; then\n  vpath_build=no\nelse\n  vpath_build=yes\n  _AS_ECHO_N([preparing build tree... ])\n  citusac_abs_top_srcdir=`cd \"$srcdir\" && pwd`\n  $SHELL \"$citusac_abs_top_srcdir/prep_buildtree\" \"$citusac_abs_top_srcdir\" \".\" \\\n      || AC_MSG_ERROR(failed)\n  AC_MSG_RESULT(done)\nfi\nAC_SUBST(vpath_build)\n\n# Allow to overwrite the C compiler, default to the one postgres was\n# compiled with. We don't want autoconf's default CFLAGS though, so save\n# those.\nSAVE_CFLAGS=\"$CFLAGS\"\nAC_PROG_CC([$($PG_CONFIG --cc)])\nCFLAGS=\"$SAVE_CFLAGS\"\n\nhost_guess=`${SHELL} $srcdir/config/config.guess`\n\n# Create compiler version string\nif test x\"$GCC\" = x\"yes\" ; then\n  cc_string=`${CC} --version | sed q`\n  case $cc_string in [[A-Za-z]]*) ;; *) cc_string=\"GCC $cc_string\";; esac\nelif test x\"$SUN_STUDIO_CC\" = x\"yes\" ; then\n  cc_string=`${CC} -V 2>&1 | sed q`\nelse\n  cc_string=$CC\nfi\n\nAC_CHECK_SIZEOF([void *])\n\nAC_DEFINE_UNQUOTED(CITUS_VERSION_STR,\n                   [\"$PACKAGE_NAME $CITUS_VERSION on $host_guess, compiled by $cc_string, `expr $ac_cv_sizeof_void_p \\* 8`-bit\"],\n                   [A string containing the version number, platform, and C compiler])\n\n# Locate source and build directory of the postgres we're building\n# against. Can't rely on either still being present, but e.g. optional\n# test infrastructure can rely on it.\nPOSTGRES_SRCDIR=$(grep ^abs_top_srcdir $(dirname $($PG_CONFIG --pgxs))/../Makefile.global|cut -d ' ' -f3-)\nPOSTGRES_BUILDDIR=$(grep ^abs_top_builddir $(dirname $($PG_CONFIG --pgxs))/../Makefile.global|cut -d ' ' -f3-)\n\n\n# check for a number of CFLAGS that make development easier\n\n# CITUSAC_PROG_CC_CFLAGS_OPT\n# -----------------------\n# Given a string, check if the compiler supports the string as a\n# command-line option. If it does, add the string to CFLAGS.\nAC_DEFUN([CITUSAC_PROG_CC_CFLAGS_OPT],\n[define([Ac_cachevar], [AS_TR_SH([citusac_cv_prog_cc_cflags_$1])])dnl\nAC_CACHE_CHECK([whether $CC supports $1], [Ac_cachevar],\n[citusac_save_CFLAGS=$CFLAGS\nflag=$1\ncase $flag in -Wno*)\n\t flag=-W$(echo $flag | cut -c 6-)\nesac\nCFLAGS=\"$citusac_save_CFLAGS $flag\"\nac_save_c_werror_flag=$ac_c_werror_flag\nac_c_werror_flag=yes\n_AC_COMPILE_IFELSE([AC_LANG_PROGRAM()],\n                   [Ac_cachevar=yes],\n                   [Ac_cachevar=no])\nac_c_werror_flag=$ac_save_c_werror_flag\nCFLAGS=\"$citusac_save_CFLAGS\"])\nif test x\"$Ac_cachevar\" = x\"yes\"; then\n  CITUS_CFLAGS=\"$CITUS_CFLAGS $1\"\nfi\nundefine([Ac_cachevar])dnl\n])# CITUSAC_PROG_CC_CFLAGS_OPT\n\nCITUSAC_PROG_CC_CFLAGS_OPT([-std=gnu99])\nCITUSAC_PROG_CC_CFLAGS_OPT([-Wall])\nCITUSAC_PROG_CC_CFLAGS_OPT([-Wextra])\n# disarm options included in the above, which are too noisy for now\nCITUSAC_PROG_CC_CFLAGS_OPT([-Wno-unused-parameter])\nCITUSAC_PROG_CC_CFLAGS_OPT([-Wno-sign-compare])\nCITUSAC_PROG_CC_CFLAGS_OPT([-Wno-missing-field-initializers])\nCITUSAC_PROG_CC_CFLAGS_OPT([-Wno-clobbered])\nCITUSAC_PROG_CC_CFLAGS_OPT([-Wno-gnu-variable-sized-type-not-at-end])\nCITUSAC_PROG_CC_CFLAGS_OPT([-Wno-declaration-after-statement])\n# And add a few extra warnings\nCITUSAC_PROG_CC_CFLAGS_OPT([-Wendif-labels])\nCITUSAC_PROG_CC_CFLAGS_OPT([-Wmissing-format-attribute])\nCITUSAC_PROG_CC_CFLAGS_OPT([-Wmissing-declarations])\nCITUSAC_PROG_CC_CFLAGS_OPT([-Wmissing-prototypes])\nCITUSAC_PROG_CC_CFLAGS_OPT([-Wshadow])\nCITUSAC_PROG_CC_CFLAGS_OPT([-Werror=vla])  # visual studio does not support these\nCITUSAC_PROG_CC_CFLAGS_OPT([-Werror=implicit-int])\nCITUSAC_PROG_CC_CFLAGS_OPT([-Werror=implicit-function-declaration])\nCITUSAC_PROG_CC_CFLAGS_OPT([-Werror=return-type])\n# Security flags\n# Flags taken from: https://liquid.microsoft.com/Web/Object/Read/ms.security/Requirements/Microsoft.Security.SystemsADM.10203#guide\n# We do not enforce the following flag because it is only available on GCC>=8\nCITUSAC_PROG_CC_CFLAGS_OPT([-fstack-clash-protection])\n\n#\n# --enable-coverage enables generation of code coverage metrics with gcov\n#\nAC_ARG_ENABLE([coverage], AS_HELP_STRING([--enable-coverage], [build with coverage testing instrumentation]))\nif test \"$enable_coverage\" = yes; then\n    CITUS_CFLAGS=\"$CITUS_CFLAGS -O0 -g --coverage\"\n    CITUS_CPPFLAGS=\"$CITUS_CPPFLAGS -DNDEBUG\"\n    CITUS_LDFLAGS=\"$CITUS_LDFLAGS --coverage\"\nfi\n\n#\n# libcurl\n#\nPGAC_ARG_BOOL(with, libcurl, yes,\n              [do not use libcurl for anonymous statistics collection],\n              [AC_DEFINE([HAVE_LIBCURL], 1, [Define to 1 to build with libcurl support. (--with-libcurl)])])\n\nif test \"$with_libcurl\" = yes; then\n  AC_CHECK_LIB(curl, curl_global_init, [],\n              [AC_MSG_ERROR([libcurl not found\nIf you have libcurl already installed, see config.log for details on the\nfailure. It is possible the compiler isn't looking in the proper directory.\nUse --without-libcurl to disable anonymous statistics collection.])])\n  AC_CHECK_HEADER(curl/curl.h, [], [AC_MSG_ERROR([libcurl header not found\nIf you have libcurl already installed, see config.log for details on the\nfailure.  It is possible the compiler isn't looking in the proper directory.\nUse --without-libcurl to disable libcurl support.])])\nfi\n\n# REPORTS_BASE_URL definition\nPGAC_ARG_REQ(with, reports-hostname, [HOSTNAME],\n             [Use HOSTNAME as hostname for statistics collection and update checks],\n             [REPORTS_BASE_URL=\"https://${withval}\"],\n             [REPORTS_BASE_URL=\"https://reports.citusdata.com\"])\nAC_DEFINE_UNQUOTED(REPORTS_BASE_URL, \"$REPORTS_BASE_URL\",\n                   [Base URL for statistics collection and update checks])\n\n#\n# LZ4\n#\nPGAC_ARG_BOOL(with, lz4, yes,\n              [do not use lz4],\n              [AC_DEFINE([HAVE_CITUS_LIBLZ4], 1, [Define to 1 to build with lz4 support. (--with-lz4)])])\nAC_SUBST(with_lz4)\n\nif test \"$with_lz4\" = yes; then\n  AC_CHECK_LIB(lz4, LZ4_compress_default, [],\n              [AC_MSG_ERROR([lz4 library not found\nIf you have lz4 installed, see config.log for details on the\nfailure.  It is possible the compiler isn't looking in the proper directory.\nUse --without-lz4 to disable lz4 support.])])\n  AC_CHECK_HEADER(lz4.h, [], [AC_MSG_ERROR([lz4 header not found\nIf you have lz4 already installed, see config.log for details on the\nfailure.  It is possible the compiler isn't looking in the proper directory.\nUse --without-lz4 to disable lz4 support.])])\nfi\n\n#\n# ZSTD\n#\nPGAC_ARG_BOOL(with, zstd, yes,\n              [do not use zstd])\nAC_SUBST(with_zstd)\n\nif test \"$with_zstd\" = yes; then\n  AC_CHECK_LIB(zstd, ZSTD_decompress, [],\n              [AC_MSG_ERROR([zstd library not found\nIf you have zstd installed, see config.log for details on the\nfailure.  It is possible the compiler isn't looking in the proper directory.\nUse --without-zstd to disable zstd support.])])\n  AC_CHECK_HEADER(zstd.h, [], [AC_MSG_ERROR([zstd header not found\nIf you have zstd already installed, see config.log for details on the\nfailure.  It is possible the compiler isn't looking in the proper directory.\nUse --without-zstd to disable zstd support.])])\nfi\n\n\nPGAC_ARG_BOOL(with, security-flags, no,\n              [use security flags])\nAC_SUBST(with_security_flags)\n\nif test \"$with_security_flags\" = yes; then\n# Flags taken from: https://liquid.microsoft.com/Web/Object/Read/ms.security/Requirements/Microsoft.Security.SystemsADM.10203#guide\n\n# We always want to have some compiler flags for security concerns.\nSECURITY_CFLAGS=\"-fstack-protector-strong -D_FORTIFY_SOURCE=2 -O2 -z noexecstack -fpic -shared -Wl,-z,relro -Wl,-z,now -Wformat -Wformat-security -Werror=format-security\"\nCITUS_CFLAGS=\"$CITUS_CFLAGS $SECURITY_CFLAGS\"\nAC_MSG_NOTICE([Blindly added security flags for linker: $SECURITY_CFLAGS])\n\n# We always want to have some clang flags for security concerns.\n# This doesn't include \"-Wl,-z,relro -Wl,-z,now\" on purpuse, because bitcode is not linked.\n# This doesn't include -fsanitize=cfi because it breaks builds on many distros including\n# Debian/Buster, Debian/Stretch, Ubuntu/Bionic, Ubuntu/Xenial and EL7.\nSECURITY_BITCODE_CFLAGS=\"-fsanitize=safe-stack -fstack-protector-strong -flto -fPIC -Wformat -Wformat-security -Werror=format-security\"\nCITUS_BITCODE_CFLAGS=\"$CITUS_BITCODE_CFLAGS $SECURITY_BITCODE_CFLAGS\"\nAC_MSG_NOTICE([Blindly added security flags for llvm: $SECURITY_BITCODE_CFLAGS])\n\nAC_MSG_WARN([If you run into issues during linking or bitcode compilation, you can use --without-security-flags.])\nfi\n\n# Check if git is installed, when installed the gitref of the checkout will be baked in the application\nAC_PATH_PROG(GIT_BIN, git)\nAC_CHECK_FILE(.git,[HAS_DOTGIT=yes], [HAS_DOTGIT=])\n\nAC_SUBST(CITUS_CFLAGS, \"$CITUS_CFLAGS\")\nAC_SUBST(CITUS_BITCODE_CFLAGS, \"$CITUS_BITCODE_CFLAGS\")\nAC_SUBST(CITUS_CPPFLAGS, \"$CITUS_CPPFLAGS\")\nAC_SUBST(CITUS_LDFLAGS, \"$LIBS $CITUS_LDFLAGS\")\nAC_SUBST(POSTGRES_SRCDIR, \"$POSTGRES_SRCDIR\")\nAC_SUBST(POSTGRES_BUILDDIR, \"$POSTGRES_BUILDDIR\")\nAC_SUBST(HAS_DOTGIT, \"$HAS_DOTGIT\")\n\nAC_CONFIG_FILES([Makefile.global])\nAC_CONFIG_HEADERS([src/include/citus_config.h] [src/include/citus_version.h])\nAH_TOP([\n/*\n * citus_config.h.in is generated by autoconf/autoheader and\n * converted into citus_config.h by configure.  Include when code needs to\n * depend on determinations made by configure.\n *\n * Do not manually edit!\n */\n])\nAC_OUTPUT\n"
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "prep_buildtree",
          "type": "blob",
          "size": 1.3310546875,
          "content": "#! /bin/sh\n#\n# Citus copy of PostgreSQL's config/prep_buildtree\n#\n# This script prepares a Citus build tree for an out-of-tree/VPATH\n# build.  It is intended to be run by the configure script.\n\nme=`basename $0`\n\nhelp=\"\\\nUsage: $me sourcetree [buildtree]\"\n\nif test -z \"$1\"; then\n    echo \"$help\" 1>&2\n    exit 1\nelif test x\"$1\" = x\"--help\"; then\n    echo \"$help\"\n    exit 0\nfi\n\nunset CDPATH\n\nsourcetree=`cd $1 && pwd`\n\nbuildtree=`cd ${2:-'.'} && pwd`\n\n# We must not auto-create the subdirectories holding built documentation.\n# If we did, it would interfere with installation of prebuilt docs from\n# the source tree, if a VPATH build is done from a distribution tarball.\n# See bug #5595.\nfor item in `find \"$sourcetree\" -type d \\( \\( -name CVS -prune \\) -o \\( -name .git -prune \\) -o -print \\) | grep -v \"$sourcetree/doc/src/sgml/\\+\"`; do\n    subdir=`expr \"$item\" : \"$sourcetree\\(.*\\)\"`\n    if test ! -d \"$buildtree/$subdir\"; then\n        mkdir -p \"$buildtree/$subdir\" || exit 1\n    fi\ndone\n\nfor item in `find \"$sourcetree\" -not -path '*/.git/hg/*' \\( -name Makefile -print -o -name GNUmakefile -print \\)`; do\n    filename=`expr \"$item\" : \"$sourcetree\\(.*\\)\"`\n    if test ! -f \"${item}.in\"; then\n        if cmp \"$item\" \"$buildtree/$filename\" >/dev/null 2>&1; then : ; else\n            ln -fs \"$item\" \"$buildtree/$filename\" || exit 1\n        fi\n    fi\ndone\n\nexit 0\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 0.771484375,
          "content": "[tool.isort]\nprofile = 'black'\n\n[tool.black]\ninclude = '(src/test/regress/bin/diff-filter|\\.pyi?|\\.ipynb)$'\n\n[tool.pytest.ini_options]\naddopts = [\n    \"--import-mode=importlib\",\n    \"--showlocals\",\n    \"--tb=short\",\n]\npythonpath = 'src/test/regress/citus_tests'\nasyncio_mode = 'auto'\n\n# Make test discovery quicker from the root dir of the repo\ntestpaths = ['src/test/regress/citus_tests/test']\n\n# Make test discovery quicker from other directories than root directory\nnorecursedirs = [\n    '*.egg',\n    '.*',\n    'build',\n    'venv',\n    'ci',\n    'vendor',\n    'backend',\n    'bin',\n    'include',\n    'tmp_*',\n    'results',\n    'expected',\n    'sql',\n    'spec',\n    'data',\n    '__pycache__',\n]\n\n# Don't find files with test at the end such as run_test.py\npython_files = ['test_*.py']\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "vendor",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}