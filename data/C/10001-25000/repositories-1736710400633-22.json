{
  "metadata": {
    "timestamp": 1736710400633,
    "page": 22,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "qmk/qmk_firmware",
      "stars": 18571,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 0.80859375,
          "content": "---\nBasedOnStyle: Google\nAlignAfterOpenBracket: Align\nAlignConsecutiveAssignments: 'true'\nAlignConsecutiveDeclarations: 'true'\nAlignOperands: 'true'\nAllowAllParametersOfDeclarationOnNextLine: 'false'\nAllowShortCaseLabelsOnASingleLine: 'false'\nAllowShortFunctionsOnASingleLine: Empty\nAllowShortLoopsOnASingleLine: 'false'\nAlwaysBreakAfterDefinitionReturnType: None\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: 'false'\nBinPackArguments: 'true'\nBinPackParameters: 'true'\nColumnLimit: '1000'\nIndentCaseLabels: 'true'\nIndentPPDirectives: AfterHash\nIndentWidth: '4'\nMaxEmptyLinesToKeep: '1'\nPointerAlignment: Right\nSortIncludes: 'false'\nSpaceBeforeAssignmentOperators: 'true'\nSpaceBeforeParens: ControlStatements\nSpaceInEmptyParentheses: 'false'\nSpacesBeforeTrailingComments: 1\nTabWidth: '4'\nUseTab: Never\n\n...\n"
        },
        {
          "name": ".clangd",
          "type": "blob",
          "size": 0.2353515625,
          "content": "CompileFlags:\n  Add: [-Wno-unknown-attributes, -Wno-maybe-uninitialized, -Wno-unknown-warning-option]\n  Remove: [-W*, -mmcu=*, -mcpu=*, -mfpu=*, -mfloat-abi=*, -mno-unaligned-access, -mno-thumb-interwork, -mcall-prologues]\n  Compiler: clang\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.8505859375,
          "content": "# EditorConfig helps developers define and maintain consistent coding styles between different editors and IDEs\n# editorconfig.org\n\nroot = true\n\n[*]\nend_of_line = lf\nindent_style = space\nindent_size = 4\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n # To match GitHub Actions formatting\n[*.{yaml,yml}]\nindent_size = 2\n\n[*.md]\ntrim_trailing_whitespace = false\n\n[{Makefile,*.mk}]\nindent_style = tab\n\n# Don't override anything in `lib/`...\n[lib/**]\nindent_style = unset\nindent_size = unset\ntab_width = unset\nend_of_line = unset\ncharset = unset\nspelling_language = unset\ntrim_trailing_whitespace = unset\ninsert_final_newline = unset\n\n# ...except QMK's `lib/python`.\n[{*.py,lib/python/**.py}]\nend_of_line = lf\nindent_style = space\nindent_size = 4\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\nmax_line_length = 200\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 1.8583984375,
          "content": "# auto for anything unspecified\n* text=auto\n\n# sources\n*.c      text eol=lf\n*.cc     text eol=lf\n*.cxx    text eol=lf\n*.cpp    text eol=lf\n*.c++    text eol=lf\n*.hpp    text eol=lf\n*.h      text eol=lf\n*.h++    text eol=lf\n*.hh     text eol=lf\n*.bat    text eol=crlf\n*.cmd    text eol=crlf\n*.coffee text eol=lf\n*.css    text eol=lf\n*.htm    text eol=lf\n*.html   text eol=lf\n*.inc    text eol=lf\n*.ini    text eol=crlf\n*.js     text eol=lf\n*.jsx    text eol=lf\n*.json   text eol=lf\n*.less   text eol=lf\n*.php    text eol=lf\n*.pl     text eol=lf\n*.py     text eol=lf\n*.rb     text eol=lf\n*.sass   text eol=lf\n*.scm    text eol=lf\n*.scss   text eol=lf\n*.sh     text eol=lf\n*.sql    text eol=lf\n*.styl   text eol=lf\n*.ts     text eol=lf\n*.xml    text eol=lf\n*.xhtml  text eol=lf\n\n# make files (need to always use lf for compatibility with Windows 10 bash)\nMakefile eol=lf\n*.mk     eol=lf\n\n# make files (need to always use lf for compatibility with Windows 10 bash)\n*.sh eol=lf\n\n# documentation\n*.markdown   text eol=lf\n*.md         text eol=lf\n*.mdwn       text eol=lf\n*.mdown      text eol=lf\n*.mkd        text eol=lf\n*.mkdn       text eol=lf\n*.mdtxt      text eol=lf\n*.mdtext     text eol=lf\n*.txt        text eol=lf\nAUTHORS      text eol=lf\nCHANGELOG    text eol=lf\nCHANGES      text eol=lf\nCONTRIBUTING text eol=lf\nCOPYING      text eol=lf\nINSTALL      text eol=lf\nlicense      text eol=lf\nLICENSE      text eol=lf\nNEWS         text eol=lf\nreadme       text eol=lf\n*README*     text eol=lf\nTODO         text eol=lf\n\nGRAPHICS\n*.ai   binary\n*.bmp  binary\n*.eps  binary\n*.gif  binary\n*.ico  binary\n*.jng  binary\n*.jp2  binary\n*.jpg  binary\n*.jpeg binary\n*.jpx  binary\n*.jxr  binary\n*.pdf  binary\n*.png  binary\n*.psb  binary\n*.psd  binary\n*.svg  text eol=lf\n*.svgz binary\n*.tif  binary\n*.tiff binary\n*.wbmp binary\n*.webp binary\n\n# hex files\n*.hex binary\n*.eep binary\nnix/sources.nix linguist-generated=true\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.388671875,
          "content": "# Junk files\n*.bak\n*.swp\n*~\n.DS_Store\n._*\n\n# Merge files\n*.orig\n*.rej\n\n# Build artifacts\n.clang_complete\n.build/\n*.elf\n*.log\n*.lss\n*.lst\n*.map\n*.o\n*.a\n*.so\n*.dylib\n*.dll\n*.la\n*.stackdump\n*.sym\nindex.html\nfirmware_list.json\n\n# QMK-specific\napi_data/v1\nquantum/version.h\n*.bin\n*.eep\n*.hex\n*.qmk\n*.uf2\n\n# DD config at wrong location\n/keyboards/**/keymaps/*/info.json\n/keyboards/**/keymaps/*/keyboard.json\n\n# Old-style QMK Makefiles\n/keyboards/**/Makefile\n\n# kbfirmware....\n/keyboards/**/kb.h\n/keyboards/**/kb.c\n\n# Eclipse/PyCharm/Other IDE Settings\n*.iml\n.browse.VC.db*\n.cproject\n.idea\n.idea/\n.project\n.settings/\n\n# ?\n.dep\n.history/\nbuild/\ncmake-build-debug\nCMakeLists.txt\n*.pdf\n\n# Let these ones be user specific, since we have so many different configurations\n*.code-workspace\n.stfolder\n.tags\n.vscode/c_cpp_properties.json\n.vscode/ipch/\n.vscode/last.sql\n.vscode/launch.json\n.vscode/tasks.json\n.vscode/temp.sql\ntags\n\n# Ignore image/font files\n*.bmp\n*.wbmp\n*.gif\n*.jpg\n*.jpeg\n*.png\n*.apng\n*.mng\n*.svg\n*.webp\n*.webm\n*.avi\n*.mp4\n*.mpeg\n*.ttf\n*.otf\n\n# Things Travis sees\n/.vs\nid_rsa_*\nsecrets.tar\n\n# Python things\n__pycache__\n.python-version\n.venv\n\n# Prerequisites for updating ChibiOS\n/util/fmpp*\n\n# Allow to exist but don't include it in the repo\nuser_song_list.h\n\n# clangd\ncompile_commands.json\n.clangd/\n.cache/\n\n# VIA(L) files that don't belong in QMK repo\nvia*.json\n/keyboards/**/keymaps/via/*\n/keyboards/**/keymaps/vial/*\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.7265625,
          "content": "[submodule \"lib/chibios\"]\n\tpath = lib/chibios\n\turl = https://github.com/qmk/ChibiOS\n\tbranch = master\n[submodule \"lib/chibios-contrib\"]\n\tpath = lib/chibios-contrib\n\turl = https://github.com/qmk/ChibiOS-Contrib\n\tbranch = master\n[submodule \"lib/googletest\"]\n\tpath = lib/googletest\n\turl = https://github.com/qmk/googletest\n[submodule \"lib/lufa\"]\n\tpath = lib/lufa\n\turl = https://github.com/qmk/lufa\n[submodule \"lib/vusb\"]\n\tpath = lib/vusb\n\turl = https://github.com/qmk/v-usb\n[submodule \"lib/printf\"]\n\tpath = lib/printf\n\turl = https://github.com/qmk/printf\n[submodule \"lib/pico-sdk\"]\n\tpath = lib/pico-sdk\n\turl = https://github.com/qmk/pico-sdk.git\n[submodule \"lib/lvgl\"]\n\tpath = lib/lvgl\n\turl = https://github.com/qmk/lvgl.git\n\tbranch = release/v8.2\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "Doxyfile",
          "type": "blob",
          "size": 8.4404296875,
          "content": "# Doxyfile 1.8.14\n\n# This file describes the settings to be used by the documentation system\n# doxygen (www.doxygen.org) for qmk_firmware (github.com/qmk/qmk_firmware)\n#\n# All text after a double hash (##) is considered a comment and is placed in\n# front of the TAG it is preceding.\n#\n# All text after a single hash (#) is considered a comment and will be ignored.\n# The format is:\n# TAG = value [value, ...]\n# For lists, items can also be appended using:\n# TAG += value [value, ...]\n# Values that contain spaces should be placed between quotes (\\\" \\\").\n\n#---------------------------------------------------------------------------\n# Project related configuration options\n#---------------------------------------------------------------------------\n\nDOXYFILE_ENCODING      = UTF-8\nPROJECT_NAME           = \"QMK Firmware\"\nPROJECT_NUMBER         = https://github.com/qmk/qmk_firmware\nPROJECT_BRIEF          = \"Keyboard controller firmware for Atmel AVR and ARM USB families\"\nOUTPUT_DIRECTORY       = .build/docs/static/doxygen\nALLOW_UNICODE_NAMES    = NO\nOUTPUT_LANGUAGE        = English\nBRIEF_MEMBER_DESC      = YES\nREPEAT_BRIEF           = YES\nABBREVIATE_BRIEF       = \"The $name class\" \\\n                         \"The $name widget\" \\\n                         \"The $name file\" \\\n                         is \\\n                         provides \\\n                         specifies \\\n                         contains \\\n                         represents \\\n                         a \\\n                         an \\\n                         the\nALWAYS_DETAILED_SEC    = NO\nINLINE_INHERITED_MEMB  = NO\nFULL_PATH_NAMES        = YES\nSTRIP_FROM_PATH        =\nSTRIP_FROM_INC_PATH    =\nSHORT_NAMES            = NO\nJAVADOC_AUTOBRIEF      = NO\nQT_AUTOBRIEF           = NO\nMULTILINE_CPP_IS_BRIEF = NO\nINHERIT_DOCS           = YES\nSEPARATE_MEMBER_PAGES  = NO\nTAB_SIZE               = 4\nALIASES                =\nTCL_SUBST              =\nOPTIMIZE_OUTPUT_FOR_C  = YES\nOPTIMIZE_OUTPUT_JAVA   = NO\nOPTIMIZE_FOR_FORTRAN   = NO\nOPTIMIZE_OUTPUT_VHDL   = NO\nEXTENSION_MAPPING      =\nMARKDOWN_SUPPORT       = YES\nTOC_INCLUDE_HEADINGS   = 2\nAUTOLINK_SUPPORT       = YES\nBUILTIN_STL_SUPPORT    = NO\nCPP_CLI_SUPPORT        = NO\nSIP_SUPPORT            = NO\nIDL_PROPERTY_SUPPORT   = YES\nDISTRIBUTE_GROUP_DOC   = NO\nGROUP_NESTED_COMPOUNDS = NO\nSUBGROUPING            = YES\nINLINE_GROUPED_CLASSES = NO\nINLINE_SIMPLE_STRUCTS  = NO\nTYPEDEF_HIDES_STRUCT   = NO\nLOOKUP_CACHE_SIZE      = 0\n\n#---------------------------------------------------------------------------\n# Build related configuration options\n#---------------------------------------------------------------------------\n\nEXTRACT_ALL            = NO\nEXTRACT_PRIVATE        = NO\nEXTRACT_PACKAGE        = NO\nEXTRACT_STATIC         = NO\nEXTRACT_LOCAL_CLASSES  = YES\nEXTRACT_LOCAL_METHODS  = NO\nEXTRACT_ANON_NSPACES   = NO\nHIDE_UNDOC_MEMBERS     = NO\nHIDE_UNDOC_CLASSES     = NO\nHIDE_FRIEND_COMPOUNDS  = NO\nHIDE_IN_BODY_DOCS      = NO\nINTERNAL_DOCS          = NO\nCASE_SENSE_NAMES       = NO\nHIDE_SCOPE_NAMES       = YES\nHIDE_COMPOUND_REFERENCE= NO\nSHOW_INCLUDE_FILES     = YES\nSHOW_GROUPED_MEMB_INC  = NO\nFORCE_LOCAL_INCLUDES   = NO\nINLINE_INFO            = YES\nSORT_MEMBER_DOCS       = YES\nSORT_BRIEF_DOCS        = NO\nSORT_MEMBERS_CTORS_1ST = NO\nSORT_GROUP_NAMES       = NO\nSORT_BY_SCOPE_NAME     = NO\nSTRICT_PROTO_MATCHING  = NO\nGENERATE_TODOLIST      = YES\nGENERATE_TESTLIST      = YES\nGENERATE_BUGLIST       = YES\nGENERATE_DEPRECATEDLIST= YES\nENABLED_SECTIONS       =\nMAX_INITIALIZER_LINES  = 30\nSHOW_USED_FILES        = YES\nSHOW_FILES             = YES\nSHOW_NAMESPACES        = YES\nFILE_VERSION_FILTER    =\nLAYOUT_FILE            =\nCITE_BIB_FILES         =\n\n#---------------------------------------------------------------------------\n# Configuration options related to warning and progress messages\n#---------------------------------------------------------------------------\n\nQUIET                  = NO\nWARNINGS               = YES\nWARN_IF_UNDOCUMENTED   = YES\nWARN_IF_DOC_ERROR      = YES\nWARN_NO_PARAMDOC       = NO\nWARN_AS_ERROR          = NO\nWARN_FORMAT            = \"$file:$line: $text\"\nWARN_LOGFILE           =\n\n#---------------------------------------------------------------------------\n# Configuration options related to the input files\n#---------------------------------------------------------------------------\n\nINPUT                  = tmk_core quantum drivers\nINPUT_ENCODING         = UTF-8\nFILE_PATTERNS          = *.c \\\n                         *.cc \\\n                         *.cxx \\\n                         *.cpp \\\n                         *.c++ \\\n                         *.h \\\n                         *.hh \\\n                         *.hxx \\\n                         *.hpp \\\n                         *.h++\nRECURSIVE              = YES\nEXCLUDE                =\nEXCLUDE_SYMLINKS       = NO\nEXCLUDE_PATTERNS       =\nEXCLUDE_SYMBOLS        =\nEXAMPLE_PATH           =\nEXAMPLE_PATTERNS       = *\nEXAMPLE_RECURSIVE      = NO\nIMAGE_PATH             =\nINPUT_FILTER           =\nFILTER_PATTERNS        =\nFILTER_SOURCE_FILES    = NO\nFILTER_SOURCE_PATTERNS =\nUSE_MDFILE_AS_MAINPAGE =\n\n#---------------------------------------------------------------------------\n# Configuration options related to source browsing\n#---------------------------------------------------------------------------\n\nSOURCE_BROWSER         = YES\nINLINE_SOURCES         = NO\nSTRIP_CODE_COMMENTS    = YES\nREFERENCED_BY_RELATION = NO\nREFERENCES_RELATION    = NO\nREFERENCES_LINK_SOURCE = YES\nSOURCE_TOOLTIPS        = YES\nUSE_HTAGS              = NO\nVERBATIM_HEADERS       = YES\n\n#---------------------------------------------------------------------------\n# Configuration options related to the alphabetical class index\n#---------------------------------------------------------------------------\n\nALPHABETICAL_INDEX     = YES\nCOLS_IN_ALPHA_INDEX    = 5\nIGNORE_PREFIX          =\n\n#---------------------------------------------------------------------------\n# Configuration options related to disabled outputs\n#---------------------------------------------------------------------------\n\nGENERATE_HTML          = NO\nGENERATE_LATEX         = NO\nGENERATE_RTF           = NO\nGENERATE_MAN           = NO\nGENERATE_DOCBOOK       = NO\nGENERATE_AUTOGEN_DEF   = NO\nGENERATE_PERLMOD       = NO\n\n#---------------------------------------------------------------------------\n# Configuration options related to the XML output\n#---------------------------------------------------------------------------\n\nGENERATE_XML           = YES\nXML_OUTPUT             = xml\nXML_PROGRAMLISTING     = YES\n\n#---------------------------------------------------------------------------\n# Configuration options related to the preprocessor\n#---------------------------------------------------------------------------\n\nENABLE_PREPROCESSING   = YES\nMACRO_EXPANSION        = NO\nEXPAND_ONLY_PREDEF     = NO\nSEARCH_INCLUDES        = YES\nINCLUDE_PATH           =\nINCLUDE_FILE_PATTERNS  =\nPREDEFINED             = __DOXYGEN__ PROGMEM\nEXPAND_AS_DEFINED      =\nSKIP_FUNCTION_MACROS   = YES\n\n#---------------------------------------------------------------------------\n# Configuration options related to external references\n#---------------------------------------------------------------------------\n\nTAGFILES               =\nGENERATE_TAGFILE       =\nALLEXTERNALS           = NO\nEXTERNAL_GROUPS        = YES\nEXTERNAL_PAGES         = YES\nPERL_PATH              = /usr/bin/perl\n\n#---------------------------------------------------------------------------\n# Configuration options related to the dot tool\n#---------------------------------------------------------------------------\n\nCLASS_DIAGRAMS         = YES\nMSCGEN_PATH            =\nDIA_PATH               =\nHIDE_UNDOC_RELATIONS   = YES\nHAVE_DOT               = NO\nDOT_NUM_THREADS        = 0\nDOT_FONTNAME           = Helvetica\nDOT_FONTSIZE           = 10\nDOT_FONTPATH           =\nCLASS_GRAPH            = YES\nCOLLABORATION_GRAPH    = YES\nGROUP_GRAPHS           = YES\nUML_LOOK               = NO\nUML_LIMIT_NUM_FIELDS   = 10\nTEMPLATE_RELATIONS     = NO\nINCLUDE_GRAPH          = YES\nINCLUDED_BY_GRAPH      = YES\nCALL_GRAPH             = NO\nCALLER_GRAPH           = NO\nGRAPHICAL_HIERARCHY    = YES\nDIRECTORY_GRAPH        = YES\nDOT_IMAGE_FORMAT       = png\nINTERACTIVE_SVG        = NO\nDOT_PATH               =\nDOTFILE_DIRS           =\nMSCFILE_DIRS           =\nDIAFILE_DIRS           =\nPLANTUML_JAR_PATH      =\nPLANTUML_CFG_FILE      =\nPLANTUML_INCLUDE_PATH  =\nDOT_GRAPH_MAX_NODES    = 50\nMAX_DOT_GRAPH_DEPTH    = 0\nDOT_TRANSPARENT        = NO\nDOT_MULTI_TARGETS      = NO\nGENERATE_LEGEND        = YES\nDOT_CLEANUP            = YES\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 17.66796875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 17.4150390625,
          "content": "ifndef VERBOSE\n.SILENT:\nendif\n\n# Never run this makefile in parallel, as it could screw things up\n# It won't affect the submakes, so you still get the speedup from specifying -jx\n.NOTPARALLEL:\n\n# Allow the silent with lower caps to work the same way as upper caps\nifdef silent\n    SILENT = $(silent)\nendif\n\nifdef SILENT\n    SUB_IS_SILENT := $(SILENT)\nendif\n\n# We need to make sure that silent is always turned off at the top level\n# Otherwise the [OK], [ERROR] and [WARN] messages won't be displayed correctly\noverride SILENT := false\n\nifeq ($(shell git rev-parse --is-inside-work-tree 2>/dev/null),)\n    export SKIP_GIT := yes\n    export NOT_REPO := yes\nendif\n\nifdef SKIP_VERSION\n    export SKIP_GIT := yes\nendif\n\nifndef SUB_IS_SILENT\nifndef SKIP_GIT\n    QMK_VERSION := $(shell git describe --abbrev=0 --tags 2>/dev/null)\nendif\n\nifneq ($(QMK_VERSION),)\n$(info QMK Firmware $(QMK_VERSION))\nendif\nendif\n\n# Try to determine userspace from qmk config, if set.\nifeq ($(QMK_USERSPACE),)\n    QMK_USERSPACE = $(shell qmk config -ro user.overlay_dir | cut -d= -f2 | sed -e 's@^None$$@@g')\nendif\n\n# Determine which qmk cli to use\nQMK_BIN := qmk\n\n# avoid 'Entering|Leaving directory' messages\nMAKEFLAGS += --no-print-directory\n\nON_ERROR := error_occurred=1\n\nBREAK_ON_ERRORS = no\n\nROOT_DIR := $(dir $(lastword $(MAKEFILE_LIST)))\nifeq ($(ROOT_DIR),)\n    ROOT_DIR := .\nendif\n\ninclude paths.mk\n\nTEST_OUTPUT_DIR := $(BUILD_DIR)/test\nERROR_FILE := $(BUILD_DIR)/error_occurred\n\n.DEFAULT_GOAL := all:all\n\n\n# Compare the start of the RULE variable with the first argument($1)\n# If the rules equals $1 or starts with $1:, RULE_FOUND is set to true\n#     and $1 is removed from the RULE variable\n# Otherwise the RULE_FOUND variable is set to false, and RULE left as it was\n# The function is a bit tricky, since there's no built in $(startswith) function\ndefine COMPARE_AND_REMOVE_FROM_RULE_HELPER\n    ifeq ($1,$$(RULE))\n        RULE:=\n        RULE_FOUND := true\n    else\n        STARTCOLON_REMOVED=$$(subst START$1:,,START$$(RULE))\n        ifneq ($$(STARTCOLON_REMOVED),START$$(RULE))\n            RULE_FOUND := true\n            RULE := $$(STARTCOLON_REMOVED)\n        else\n            RULE_FOUND := false\n        endif\n    endif\nendef\n\n# This makes it easier to call COMPARE_AND_REMOVE_FROM_RULE, since it makes it behave like\n# a function that returns the value\nCOMPARE_AND_REMOVE_FROM_RULE = $(eval $(call COMPARE_AND_REMOVE_FROM_RULE_HELPER,$1))$(RULE_FOUND)\n\n# Try to find a match for the start of the rule to be checked\n# $1 The list to be checked\n# If a match is found, then RULE_FOUND is set to true\n# and MATCHED_ITEM to the item that was matched\ndefine TRY_TO_MATCH_RULE_FROM_LIST_HELPER\n    # Split on \":\", padding with empty strings to avoid indexing issues\n    TOKEN1:=$$(shell python3 -c \"import sys; print((sys.argv[1].split(':',1)+[''])[0])\" $$(RULE))\n    TOKENr:=$$(shell python3 -c \"import sys; print((sys.argv[1].split(':',1)+[''])[1])\" $$(RULE))\n\n    FOUNDx:=$$(shell echo $1 | tr \" \" \"\\n\" | grep -Fx $$(TOKEN1))\n    ifneq ($$(FOUNDx),)\n        RULE := $$(TOKENr)\n        RULE_FOUND := true\n        MATCHED_ITEM := $$(TOKEN1)\n    else\n        RULE_FOUND := false\n        MATCHED_ITEM :=\n    endif\nendef\n\n# Make it easier to call TRY_TO_MATCH_RULE_FROM_LIST\nTRY_TO_MATCH_RULE_FROM_LIST = $(eval $(call TRY_TO_MATCH_RULE_FROM_LIST_HELPER,$1))$(RULE_FOUND)\n\ndefine ALL_IN_LIST_LOOP\n    OLD_RULE$1 := $$(RULE)\n    $$(eval $$(call $1,$$(ITEM$1)))\n    RULE := $$(OLD_RULE$1)\nendef\n\ndefine PARSE_ALL_IN_LIST\n    $$(foreach ITEM$1,$2,$$(eval $$(call ALL_IN_LIST_LOOP,$1)))\nendef\n\n# The entry point for rule parsing\n# parses a rule in the format <keyboard>:<keymap>:<target>\n# but this particular function only deals with the first <keyboard> part\ndefine PARSE_RULE\n    RULE := $1\n    COMMANDS :=\n    # If the rule starts with all, then continue the parsing from\n    # PARSE_ALL_KEYBOARDS\n    ifeq ($$(call COMPARE_AND_REMOVE_FROM_RULE,all),true)\n        KEYBOARD_RULE=all\n        $$(eval $$(call PARSE_ALL_KEYBOARDS))\n    else ifeq ($$(call COMPARE_AND_REMOVE_FROM_RULE,test),true)\n        $$(eval $$(call PARSE_TEST))\n    # If the rule starts with the name of a known keyboard, then continue\n    # the parsing from PARSE_KEYBOARD\n    else ifeq ($$(call TRY_TO_MATCH_RULE_FROM_LIST,$$(shell $(QMK_BIN) list-keyboards --no-resolve-defaults)),true)\n        KEYBOARD_RULE=$$(MATCHED_ITEM)\n        $$(eval $$(call PARSE_KEYBOARD,$$(MATCHED_ITEM)))\n    else\n        $$(info make: *** No rule to make target '$1'. Stop.)\n        $$(info |)\n        $$(info | QMK's make format is:)\n        $$(info |     make keyboard_folder:keymap_folder[:target])\n        $$(info |)\n        $$(info | Where `keyboard_folder` is the path to the keyboard relative to)\n        $$(info | `qmk_firmware/keyboards/`, and `keymap_folder` is the name of the)\n        $$(info | keymap folder under that board's `keymaps/` directory.)\n        $$(info |)\n        $$(info | Examples:)\n        $$(info |     keyboards/dz60, keyboards/dz60/keymaps/default)\n        $$(info |       -> make dz60:default)\n        $$(info |       -> qmk compile -kb dz60 -km default)\n        $$(info |     keyboards/planck/rev6, keyboards/planck/keymaps/default)\n        $$(info |       -> make planck/rev6:default:flash)\n        $$(info |       -> qmk flash -kb planck/rev6 -km default)\n        $$(info |)\n    endif\nendef\n\n# $1 = Keyboard\n# Parses a rule in the format <keymap>:<target>\n# the keyboard is already known when entering this function\ndefine PARSE_KEYBOARD\n    # If we want to compile the default subproject, then we need to\n    # include the correct makefile to determine the actual name of it\n    CURRENT_KB := $1\n\n    # KEYBOARD_FOLDERS := $$(subst /, , $(CURRENT_KB))\n\n    DEFAULT_FOLDER := $$(CURRENT_KB)\n\n    # We assume that every rules.mk will contain the full default value\n    $$(eval include $(ROOT_DIR)/keyboards/$$(CURRENT_KB)/rules.mk)\n    ifneq ($$(DEFAULT_FOLDER),$$(CURRENT_KB))\n        $$(eval include $(ROOT_DIR)/keyboards/$$(DEFAULT_FOLDER)/rules.mk)\n    endif\n    CURRENT_KB := $$(DEFAULT_FOLDER)\n\n    # 5/4/3/2/1\n    KEYBOARD_FOLDER_PATH_1 := $$(CURRENT_KB)\n    KEYBOARD_FOLDER_PATH_2 := $$(patsubst %/,%,$$(dir $$(KEYBOARD_FOLDER_PATH_1)))\n    KEYBOARD_FOLDER_PATH_3 := $$(patsubst %/,%,$$(dir $$(KEYBOARD_FOLDER_PATH_2)))\n    KEYBOARD_FOLDER_PATH_4 := $$(patsubst %/,%,$$(dir $$(KEYBOARD_FOLDER_PATH_3)))\n    KEYBOARD_FOLDER_PATH_5 := $$(patsubst %/,%,$$(dir $$(KEYBOARD_FOLDER_PATH_4)))\n\n    KEYMAPS :=\n    # get a list of all keymaps\n    KEYMAPS += $$(notdir $$(patsubst %/.,%,$$(wildcard $(ROOT_DIR)/keyboards/$$(KEYBOARD_FOLDER_PATH_1)/keymaps/*/.)))\n    KEYMAPS += $$(notdir $$(patsubst %/.,%,$$(wildcard $(ROOT_DIR)/keyboards/$$(KEYBOARD_FOLDER_PATH_2)/keymaps/*/.)))\n    KEYMAPS += $$(notdir $$(patsubst %/.,%,$$(wildcard $(ROOT_DIR)/keyboards/$$(KEYBOARD_FOLDER_PATH_3)/keymaps/*/.)))\n    KEYMAPS += $$(notdir $$(patsubst %/.,%,$$(wildcard $(ROOT_DIR)/keyboards/$$(KEYBOARD_FOLDER_PATH_4)/keymaps/*/.)))\n    KEYMAPS += $$(notdir $$(patsubst %/.,%,$$(wildcard $(ROOT_DIR)/keyboards/$$(KEYBOARD_FOLDER_PATH_5)/keymaps/*/.)))\n\n    ifneq ($(QMK_USERSPACE),)\n        KEYMAPS += $$(notdir $$(patsubst %/.,%,$$(wildcard $(QMK_USERSPACE)/keyboards/$$(KEYBOARD_FOLDER_PATH_1)/keymaps/*/.)))\n        KEYMAPS += $$(notdir $$(patsubst %/.,%,$$(wildcard $(QMK_USERSPACE)/keyboards/$$(KEYBOARD_FOLDER_PATH_2)/keymaps/*/.)))\n        KEYMAPS += $$(notdir $$(patsubst %/.,%,$$(wildcard $(QMK_USERSPACE)/keyboards/$$(KEYBOARD_FOLDER_PATH_3)/keymaps/*/.)))\n        KEYMAPS += $$(notdir $$(patsubst %/.,%,$$(wildcard $(QMK_USERSPACE)/keyboards/$$(KEYBOARD_FOLDER_PATH_4)/keymaps/*/.)))\n        KEYMAPS += $$(notdir $$(patsubst %/.,%,$$(wildcard $(QMK_USERSPACE)/keyboards/$$(KEYBOARD_FOLDER_PATH_5)/keymaps/*/.)))\n    endif\n\n    KEYBOARD_LAYOUTS := $(shell $(QMK_BIN) list-layouts --keyboard $1)\n    LAYOUT_KEYMAPS :=\n    $$(foreach LAYOUT,$$(KEYBOARD_LAYOUTS),$$(eval LAYOUT_KEYMAPS += $$(notdir $$(patsubst %/.,%,$$(wildcard $(ROOT_DIR)/layouts/*/$$(LAYOUT)/*/.)))))\n    ifneq ($(QMK_USERSPACE),)\n        $$(foreach LAYOUT,$$(KEYBOARD_LAYOUTS),$$(eval LAYOUT_KEYMAPS += $$(notdir $$(patsubst %/.,%,$$(wildcard $(QMK_USERSPACE)/layouts/$$(LAYOUT)/*/.)))))\n    endif\n\n    KEYMAPS := $$(sort $$(KEYMAPS) $$(LAYOUT_KEYMAPS))\n\n    # if the rule after removing the start of it is empty (we haven't specified a kemap or target)\n    # compile all the keymaps\n    ifeq ($$(RULE),)\n        $$(eval $$(call PARSE_ALL_KEYMAPS))\n    # The same if all was specified\n    else ifeq ($$(call COMPARE_AND_REMOVE_FROM_RULE,all),true)\n        $$(eval $$(call PARSE_ALL_KEYMAPS))\n    # List all keymaps for the given keyboard\n    else ifeq ($$(call COMPARE_AND_REMOVE_FROM_RULE,list-keymaps),true)\n        $$(eval $$(call LIST_ALL_KEYMAPS))\n    # Try to match the specified keyamp with the list of known keymaps\n    else ifeq ($$(call TRY_TO_MATCH_RULE_FROM_LIST,$$(KEYMAPS)),true)\n        $$(eval $$(call PARSE_KEYMAP,$$(MATCHED_ITEM)))\n    # Otherwise try to match the keymap from the current folder, or arguments to the make command\n    else ifneq ($$(KEYMAP),)\n        $$(eval $$(call PARSE_KEYMAP,$$(KEYMAP)))\n    # Otherwise if we are running make all:<user> just skip\n    else ifeq ($$(KEYBOARD_RULE),all)\n        # $$(info Skipping: No user keymap for $$(CURRENT_KB))\n    # Otherwise, make all keymaps, again this is consistent with how it works without\n    # any arguments\n    else\n        $$(eval $$(call PARSE_ALL_KEYMAPS))\n    endif\nendef\n\n# if we are going to compile all keyboards, match the rest of the rule\n# for each of them\ndefine PARSE_ALL_KEYBOARDS\n    $$(eval $$(call PARSE_ALL_IN_LIST,PARSE_KEYBOARD,$(shell $(QMK_BIN) list-keyboards --no-resolve-defaults)))\nendef\n\n# Prints a list of all known keymaps for the given keyboard\ndefine LIST_ALL_KEYMAPS\n    COMMAND_true_LIST_KEYMAPS := \\\n        printf \"$$(KEYMAPS)\\n\";\n    COMMAND_false_LIST_KEYMAPS := \\\n        printf \"$$(MSG_AVAILABLE_KEYMAPS)\\n\"; \\\n        printf \"$$(KEYMAPS)\\n\";\n    COMMANDS += LIST_KEYMAPS\nendef\n\n# $1 Keymap\n# This is the meat of compiling a keyboard, when entering this, everything is known\n# keyboard, subproject, and keymap\n# Note that we are not directly calling the command here, but instead building a list,\n# which will later be processed\ndefine PARSE_KEYMAP\n    CURRENT_KM = $1\n    # The rest of the rule is the target\n    # Remove the leading \":\" from the target, as it acts as a separator\n    MAKE_TARGET := $$(patsubst :%,%,$$(RULE))\n    # We need to generate an unique identifier to append to the COMMANDS list\n    CURRENT_KB_UNDER := $$(subst /,_,$$(CURRENT_KB))\n    COMMAND := COMMAND_KEYBOARD_$$(CURRENT_KB_UNDER)_KEYMAP_$$(CURRENT_KM)\n    # If we are compiling a keyboard without a subproject, we want to display just the name\n    # of the keyboard, otherwise keyboard/subproject\n    KB_SP := $$(CURRENT_KB)\n    # Format it in bold\n    KB_SP := $(BOLD)$$(KB_SP)$(NO_COLOR)\n    # Specify the variables that we are passing forward to submake\n    MAKE_VARS := KEYBOARD=$$(CURRENT_KB) KEYMAP=$$(CURRENT_KM) QMK_BIN=$$(QMK_BIN)\n    # And the first part of the make command\n    MAKE_CMD := $$(MAKE) -r -R -C $(ROOT_DIR) -f $(BUILDDEFS_PATH)/build_keyboard.mk $$(MAKE_TARGET)\n    # The message to display\n    MAKE_MSG := $$(MSG_MAKE_KB)\n    # We run the command differently, depending on if we want more output or not\n    # The true version for silent output and the false version otherwise\n    $$(eval $$(call BUILD))\nendef\n\ndefine BUILD\n    MAKE_VARS += VERBOSE=$(VERBOSE) COLOR=$(COLOR)\n    COMMANDS += $$(COMMAND)\n    COMMAND_true_$$(COMMAND) := \\\n        printf \"$$(MAKE_MSG)\" | \\\n        $$(MAKE_MSG_FORMAT); \\\n        LOG=$$$$($$(MAKE_CMD) $$(MAKE_VARS) SILENT=true 2>&1) ; \\\n        if [ $$$$? -gt 0 ]; \\\n            then $$(PRINT_ERROR_PLAIN); \\\n        elif [ \"$$$$LOG\" = \"skipped\" ] ; \\\n            then $$(PRINT_SKIPPED_PLAIN); \\\n        elif [ \"$$$$LOG\" != \"\" ] ; \\\n            then $$(PRINT_WARNING_PLAIN); \\\n        else \\\n            $$(PRINT_OK); \\\n        fi;\n    COMMAND_false_$$(COMMAND) := \\\n        printf \"$$(MAKE_MSG)\\n\\n\"; \\\n        $$(MAKE_CMD) $$(MAKE_VARS) SILENT=false; \\\n        if [ $$$$? -gt 0 ]; \\\n            then error_occurred=1; \\\n        fi;\nendef\n\n# Just parse all the keymaps for a specific keyboard\ndefine PARSE_ALL_KEYMAPS\n    $$(eval $$(call PARSE_ALL_IN_LIST,PARSE_KEYMAP,$$(KEYMAPS)))\nendef\n\ndefine BUILD_TEST\n    TEST_PATH := $1\n    TEST_NAME := $$(notdir $$(TEST_PATH))\n    TEST_FULL_NAME := $$(subst /,_,$$(patsubst $$(ROOT_DIR)tests/%,%,$$(TEST_PATH)))\n    MAKE_TARGET := $2\n    COMMAND := $1\n    MAKE_CMD := $$(MAKE) -r -R -C $(ROOT_DIR) -f $(BUILDDEFS_PATH)/build_test.mk $$(MAKE_TARGET)\n    MAKE_VARS := TEST=$$(TEST_NAME) TEST_OUTPUT=$$(TEST_FULL_NAME) TEST_PATH=$$(TEST_PATH) FULL_TESTS=\"$$(FULL_TESTS)\"\n    MAKE_MSG := $$(MSG_MAKE_TEST)\n    $$(eval $$(call BUILD))\n    ifneq ($$(MAKE_TARGET),clean)\n        TEST_EXECUTABLE := $$(TEST_OUTPUT_DIR)/$$(TEST_FULL_NAME).elf\n        TESTS += $$(TEST_FULL_NAME)\n        TEST_MSG := $$(MSG_TEST)\n        $$(TEST_FULL_NAME)_COMMAND := \\\n            printf \"$$(TEST_MSG)\\n\"; \\\n            $$(TEST_EXECUTABLE); \\\n            if [ $$$$? -gt 0 ]; \\\n                then error_occurred=1; \\\n            fi; \\\n            printf \"\\n\";\n    endif\nendef\n\ndefine LIST_TEST\n    include $(BUILDDEFS_PATH)/testlist.mk\n    FOUND_TESTS := $$(patsubst ./tests/%,%,$$(TEST_LIST))\n    $$(info $$(FOUND_TESTS))\nendef\n\ndefine PARSE_TEST\n    TESTS :=\n    TEST_NAME := $$(firstword $$(subst :, ,$$(RULE)))\n    TEST_TARGET := $$(subst $$(TEST_NAME),,$$(subst $$(TEST_NAME):,,$$(RULE)))\n    include $(BUILDDEFS_PATH)/testlist.mk\n    ifeq ($$(TEST_NAME),all)\n        MATCHED_TESTS := $$(TEST_LIST)\n    else\n        MATCHED_TESTS := $$(foreach TEST, $$(TEST_LIST),$$(if $$(findstring x$$(TEST_NAME)x, x$$(patsubst ./tests/%,%,$$(TEST)x)), $$(TEST),))\n    endif\n    $$(foreach TEST,$$(MATCHED_TESTS),$$(eval $$(call BUILD_TEST,$$(TEST),$$(TEST_TARGET))))\nendef\n\n\n# Set the silent mode depending on if we are trying to compile multiple keyboards or not\n# By default it's on in that case, but it can be overridden by specifying silent=false\n# from the command line\ndefine SET_SILENT_MODE\n    ifdef SUB_IS_SILENT\n        SILENT_MODE := $(SUB_IS_SILENT)\n    else ifeq ($$(words $$(COMMANDS)),1)\n        SILENT_MODE := false\n    else\n        SILENT_MODE := true\n    endif\nendef\n\ninclude $(BUILDDEFS_PATH)/message.mk\n\nifeq ($(strip $(BREAK_ON_ERRORS)), yes)\nHANDLE_ERROR = exit 1\nelse\nHANDLE_ERROR = echo $$error_occurred > $(ERROR_FILE)\nendif\n\n# The empty line is important here, as it will force a new shell to be created for each command\n# Otherwise the command line will become too long with a lot of keyboards and keymaps\ndefine RUN_COMMAND\n+error_occurred=0;\\\n$(COMMAND_$(SILENT_MODE)_$(COMMAND))\\\nif [ $$error_occurred -gt 0 ]; then $(HANDLE_ERROR); fi;\n\n\nendef\ndefine RUN_TEST\n+error_occurred=0;\\\n$($(TEST)_COMMAND)\\\nif [ $$error_occurred -gt 0 ]; then $(HANDLE_ERROR); fi;\n\n\nendef\n\n# Catch everything and parse the command line ourselves.\n.PHONY: %\n%:\n\t# Ensure that $(QMK_BIN) works.\n\tif ! $(QMK_BIN) hello 1> /dev/null 2>&1; then printf \"$(MSG_PYTHON_MISSING)\"; exit 1; fi\nifdef NOT_REPO\n\tprintf \"$(MSG_NOT_REPO)\"\nendif\nifndef SKIP_GIT\n\t$(QMK_BIN) git-submodule --sync\n\t# Check if the submodules are dirty, and display a warning if they are\n\tif ! $(QMK_BIN) git-submodule --check 1> /dev/null 2>&1; then printf \"$(MSG_SUBMODULE_DIRTY)\"; fi\nendif\n\trm -f $(ERROR_FILE) > /dev/null 2>&1\n\t$(eval $(call PARSE_RULE,$@))\n\t$(eval $(call SET_SILENT_MODE))\n\t# Run all the commands in the same shell, notice the + at the first line\n\t# it has to be there to allow parallel execution of the submake\n\t# This always tries to compile everything, even if error occurs in the middle\n\t# But we return the error code at the end, to trigger travis failures\n\t# The sort at this point is to remove duplicates\n\t$(foreach COMMAND,$(sort $(COMMANDS)),$(RUN_COMMAND))\n\tif [ -f $(ERROR_FILE) ]; then printf \"$(MSG_ERRORS)\" & exit 1; fi;\n\t$(foreach TEST,$(sort $(TESTS)),$(RUN_TEST))\n\tif [ -f $(ERROR_FILE) ]; then printf \"$(MSG_ERRORS)\" & exit 1; fi;\n\nlib/%:\n\tgit submodule sync $?\n\tgit submodule update --init $?\n\n.PHONY: git-submodule\ngit-submodule:\n\t$(QMK_BIN) git-submodule\n\n.PHONY: git-submodules\ngit-submodules: git-submodule\n\n.PHONY: list-keyboards\nlist-keyboards:\n\t$(QMK_BIN) list-keyboards --no-resolve-defaults | tr '\\n' ' '\n\n.PHONY: list-tests\nlist-tests:\n\t$(eval $(call LIST_TEST))\n\n.PHONY: generate-keyboards-file\ngenerate-keyboards-file:\n\t$(QMK_BIN) list-keyboards --no-resolve-defaults\n\n.PHONY: clean\nclean:\n\techo -n 'Deleting .build/ ... '\n\trm -rf $(BUILD_DIR)\n\techo 'done.'\n\n.PHONY: distclean distclean_qmk\ndistclean: distclean_qmk\ndistclean_qmk: clean\n\techo -n 'Deleting *.bin, *.hex, and *.uf2 ... '\n\trm -f *.bin *.hex *.uf2\n\techo 'done.'\n\nifneq ($(QMK_USERSPACE),)\n.PHONY: distclean_userspace\ndistclean: distclean_userspace\ndistclean_userspace: clean\n\techo -n 'Deleting userspace *.bin, *.hex, and *.uf2 ... '\n\trm -f $(QMK_USERSPACE)/*.bin $(QMK_USERSPACE)/*.hex $(QMK_USERSPACE)/*.uf2\n\techo 'done.'\nendif\n\n# Extra targets for formatting and/or pytest, running within the qmk/qmk_cli container to match GHA.\nCONTAINER_PREAMBLE := export HOME=\"/tmp\"; export PATH=\"/tmp/.local/bin:\\$$PATH\"; python3 -m pip install --upgrade pip; python3 -m pip install -r requirements-dev.txt\n\n.PHONY: format-core\nformat-core:\n\tRUNTIME=docker ./util/docker_cmd.sh bash -lic \"$(CONTAINER_PREAMBLE); qmk format-c --core-only -a && qmk format-python -a\"\n\n.PHONY: pytest\npytest:\n\tRUNTIME=docker ./util/docker_cmd.sh bash -lic \"$(CONTAINER_PREAMBLE); qmk pytest\"\n\n.PHONY: format-and-pytest\nformat-and-pytest:\n\tRUNTIME=docker ./util/docker_cmd.sh bash -lic \"$(CONTAINER_PREAMBLE); qmk format-c --core-only -a && qmk format-python -a && qmk pytest\"\n"
        },
        {
          "name": "builddefs",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "doxygen-todo",
          "type": "blob",
          "size": 0.271484375,
          "content": "tmk_core/protocol\ntmk_core/protocol/chibios\ntmk_core/protocol/lufa\ntmk_core/protocol/midi\ntmk_core/protocol/midi/bytequeue\ntmk_core/protocol/midi/Config\ntmk_core/protocol/usb_hid\ntmk_core/protocol/vusb\nquantum\nquantum/audio\nquantum/keymap_extras\nquantum/process_keycode\ndrivers\n"
        },
        {
          "name": "drivers",
          "type": "tree",
          "content": null
        },
        {
          "name": "keyboards",
          "type": "tree",
          "content": null
        },
        {
          "name": "layouts",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "license_GPLv2.md",
          "type": "blob",
          "size": 14.818359375,
          "content": "The GNU General Public License, Version 2, June 1991 (GPLv2)\n============================================================\n\n> Copyright (C) 1989, 1991 Free Software Foundation, Inc.\n> 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA\n\nEveryone is permitted to copy and distribute verbatim copies of this license\ndocument, but changing it is not allowed.\n\n\nPreamble\n--------\n\nThe licenses for most software are designed to take away your freedom to share\nand change it. By contrast, the GNU General Public License is intended to\nguarantee your freedom to share and change free software--to make sure the\nsoftware is free for all its users. This General Public License applies to most\nof the Free Software Foundation's software and to any other program whose\nauthors commit to using it. (Some other Free Software Foundation software is\ncovered by the GNU Lesser General Public License instead.) You can apply it to\nyour programs, too.\n\nWhen we speak of free software, we are referring to freedom, not price. Our\nGeneral Public Licenses are designed to make sure that you have the freedom to\ndistribute copies of free software (and charge for this service if you wish),\nthat you receive source code or can get it if you want it, that you can change\nthe software or use pieces of it in new free programs; and that you know you can\ndo these things.\n\nTo protect your rights, we need to make restrictions that forbid anyone to deny\nyou these rights or to ask you to surrender the rights. These restrictions\ntranslate to certain responsibilities for you if you distribute copies of the\nsoftware, or if you modify it.\n\nFor example, if you distribute copies of such a program, whether gratis or for a\nfee, you must give the recipients all the rights that you have. You must make\nsure that they, too, receive or can get the source code. And you must show them\nthese terms so they know their rights.\n\nWe protect your rights with two steps: (1) copyright the software, and (2) offer\nyou this license which gives you legal permission to copy, distribute and/or\nmodify the software.\n\nAlso, for each author's protection and ours, we want to make certain that\neveryone understands that there is no warranty for this free software. If the\nsoftware is modified by someone else and passed on, we want its recipients to\nknow that what they have is not the original, so that any problems introduced by\nothers will not reflect on the original authors' reputations.\n\nFinally, any free program is threatened constantly by software patents. We wish\nto avoid the danger that redistributors of a free program will individually\nobtain patent licenses, in effect making the program proprietary. To prevent\nthis, we have made it clear that any patent must be licensed for everyone's free\nuse or not licensed at all.\n\nThe precise terms and conditions for copying, distribution and modification\nfollow.\n\n\nTerms And Conditions For Copying, Distribution And Modification\n---------------------------------------------------------------\n\n**0.** This License applies to any program or other work which contains a notice\nplaced by the copyright holder saying it may be distributed under the terms of\nthis General Public License. The \"Program\", below, refers to any such program or\nwork, and a \"work based on the Program\" means either the Program or any\nderivative work under copyright law: that is to say, a work containing the\nProgram or a portion of it, either verbatim or with modifications and/or\ntranslated into another language. (Hereinafter, translation is included without\nlimitation in the term \"modification\".) Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not covered by\nthis License; they are outside its scope. The act of running the Program is not\nrestricted, and the output from the Program is covered only if its contents\nconstitute a work based on the Program (independent of having been made by\nrunning the Program). Whether that is true depends on what the Program does.\n\n**1.** You may copy and distribute verbatim copies of the Program's source code\nas you receive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice and\ndisclaimer of warranty; keep intact all the notices that refer to this License\nand to the absence of any warranty; and give any other recipients of the Program\na copy of this License along with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and you may at\nyour option offer warranty protection in exchange for a fee.\n\n**2.** You may modify your copy or copies of the Program or any portion of it,\nthus forming a work based on the Program, and copy and distribute such\nmodifications or work under the terms of Section 1 above, provided that you also\nmeet all of these conditions:\n\n*   **a)** You must cause the modified files to carry prominent notices stating\n    that you changed the files and the date of any change.\n\n*   **b)** You must cause any work that you distribute or publish, that in whole\n    or in part contains or is derived from the Program or any part thereof, to\n    be licensed as a whole at no charge to all third parties under the terms of\n    this License.\n\n*   **c)** If the modified program normally reads commands interactively when\n    run, you must cause it, when started running for such interactive use in the\n    most ordinary way, to print or display an announcement including an\n    appropriate copyright notice and a notice that there is no warranty (or\n    else, saying that you provide a warranty) and that users may redistribute\n    the program under these conditions, and telling the user how to view a copy\n    of this License. (Exception: if the Program itself is interactive but does\n    not normally print such an announcement, your work based on the Program is\n    not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole. If identifiable\nsections of that work are not derived from the Program, and can be reasonably\nconsidered independent and separate works in themselves, then this License, and\nits terms, do not apply to those sections when you distribute them as separate\nworks. But when you distribute the same sections as part of a whole which is a\nwork based on the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the entire whole,\nand thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest your\nrights to work written entirely by you; rather, the intent is to exercise the\nright to control the distribution of derivative or collective works based on the\nProgram.\n\nIn addition, mere aggregation of another work not based on the Program with the\nProgram (or with a work based on the Program) on a volume of a storage or\ndistribution medium does not bring the other work under the scope of this\nLicense.\n\n**3.** You may copy and distribute the Program (or a work based on it, under\nSection 2) in object code or executable form under the terms of Sections 1 and 2\nabove provided that you also do one of the following:\n\n*   **a)** Accompany it with the complete corresponding machine-readable source\n    code, which must be distributed under the terms of Sections 1 and 2 above on\n    a medium customarily used for software interchange; or,\n\n*   **b)** Accompany it with a written offer, valid for at least three years, to\n    give any third party, for a charge no more than your cost of physically\n    performing source distribution, a complete machine-readable copy of the\n    corresponding source code, to be distributed under the terms of Sections 1\n    and 2 above on a medium customarily used for software interchange; or,\n\n*   **c)** Accompany it with the information you received as to the offer to\n    distribute corresponding source code. (This alternative is allowed only for\n    noncommercial distribution and only if you received the program in object\n    code or executable form with such an offer, in accord with Subsection b\n    above.)\n\nThe source code for a work means the preferred form of the work for making\nmodifications to it. For an executable work, complete source code means all the\nsource code for all modules it contains, plus any associated interface\ndefinition files, plus the scripts used to control compilation and installation\nof the executable. However, as a special exception, the source code distributed\nneed not include anything that is normally distributed (in either source or\nbinary form) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component itself\naccompanies the executable.\n\nIf distribution of executable or object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the source code\nfrom the same place counts as distribution of the source code, even though third\nparties are not compelled to copy the source along with the object code.\n\n**4.** You may not copy, modify, sublicense, or distribute the Program except as\nexpressly provided under this License. Any attempt otherwise to copy, modify,\nsublicense or distribute the Program is void, and will automatically terminate\nyour rights under this License. However, parties who have received copies, or\nrights, from you under this License will not have their licenses terminated so\nlong as such parties remain in full compliance.\n\n**5.** You are not required to accept this License, since you have not signed\nit. However, nothing else grants you permission to modify or distribute the\nProgram or its derivative works. These actions are prohibited by law if you do\nnot accept this License. Therefore, by modifying or distributing the Program (or\nany work based on the Program), you indicate your acceptance of this License to\ndo so, and all its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n**6.** Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the original\nlicensor to copy, distribute or modify the Program subject to these terms and\nconditions. You may not impose any further restrictions on the recipients'\nexercise of the rights granted herein. You are not responsible for enforcing\ncompliance by third parties to this License.\n\n**7.** If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues), conditions\nare imposed on you (whether by court order, agreement or otherwise) that\ncontradict the conditions of this License, they do not excuse you from the\nconditions of this License. If you cannot distribute so as to satisfy\nsimultaneously your obligations under this License and any other pertinent\nobligations, then as a consequence you may not distribute the Program at all.\nFor example, if a patent license would not permit royalty-free redistribution of\nthe Program by all those who receive copies directly or indirectly through you,\nthen the only way you could satisfy both it and this License would be to refrain\nentirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply and the\nsection as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any patents or\nother property right claims or to contest validity of any such claims; this\nsection has the sole purpose of protecting the integrity of the free software\ndistribution system, which is implemented by public license practices. Many\npeople have made generous contributions to the wide range of software\ndistributed through that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing to\ndistribute software through any other system and a licensee cannot impose that\nchoice.\n\nThis section is intended to make thoroughly clear what is believed to be a\nconsequence of the rest of this License.\n\n**8.** If the distribution and/or use of the Program is restricted in certain\ncountries either by patents or by copyrighted interfaces, the original copyright\nholder who places the Program under this License may add an explicit\ngeographical distribution limitation excluding those countries, so that\ndistribution is permitted only in or among countries not thus excluded. In such\ncase, this License incorporates the limitation as if written in the body of this\nLicense.\n\n**9.** The Free Software Foundation may publish revised and/or new versions of\nthe General Public License from time to time. Such new versions will be similar\nin spirit to the present version, but may differ in detail to address new\nproblems or concerns.\n\nEach version is given a distinguishing version number. If the Program specifies\na version number of this License which applies to it and \"any later version\",\nyou have the option of following the terms and conditions either of that version\nor of any later version published by the Free Software Foundation. If the\nProgram does not specify a version number of this License, you may choose any\nversion ever published by the Free Software Foundation.\n\n**10.** If you wish to incorporate parts of the Program into other free programs\nwhose distribution conditions are different, write to the author to ask for\npermission. For software which is copyrighted by the Free Software Foundation,\nwrite to the Free Software Foundation; we sometimes make exceptions for this.\nOur decision will be guided by the two goals of preserving the free status of\nall derivatives of our free software and of promoting the sharing and reuse of\nsoftware generally.\n\n\nNo Warranty\n-----------\n\n**11.** BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR\nTHE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE\nSTATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM\n\"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING,\nBUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A\nPARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nPROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n**12.** IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR\nINABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA\nBEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER\nOR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\n"
        },
        {
          "name": "license_GPLv3.md",
          "type": "blob",
          "size": 34.236328125,
          "content": "The GNU General Public License, Version 3, 29 June 2007 (GPLv3)\n===============================================================\n\n> Copyright &copy; 2007\n> Free Software Foundation, Inc.\n> <<http://fsf.org/>>\n\nEveryone is permitted to copy and distribute verbatim copies of this license\ndocument, but changing it is not allowed.\n\n\nPreamble\n--------\n\nThe GNU General Public License is a free, copyleft license for software and\nother kinds of works.\n\nThe licenses for most software and other practical works are designed to take\naway your freedom to share and change the works. By contrast, the GNU General\nPublic License is intended to guarantee your freedom to share and change all\nversions of a program--to make sure it remains free software for all its users.\nWe, the Free Software Foundation, use the GNU General Public License for most of\nour software; it applies also to any other work released this way by its\nauthors. You can apply it to your programs, too.\n\nWhen we speak of free software, we are referring to freedom, not price. Our\nGeneral Public Licenses are designed to make sure that you have the freedom to\ndistribute copies of free software (and charge for them if you wish), that you\nreceive source code or can get it if you want it, that you can change the\nsoftware or use pieces of it in new free programs, and that you know you can do\nthese things.\n\nTo protect your rights, we need to prevent others from denying you these rights\nor asking you to surrender the rights. Therefore, you have certain\nresponsibilities if you distribute copies of the software, or if you modify it:\nresponsibilities to respect the freedom of others.\n\nFor example, if you distribute copies of such a program, whether gratis or for a\nfee, you must pass on to the recipients the same freedoms that you received. You\nmust make sure that they, too, receive or can get the source code. And you must\nshow them these terms so they know their rights.\n\nDevelopers that use the GNU GPL protect your rights with two steps: (1) assert\ncopyright on the software, and (2) offer you this License giving you legal\npermission to copy, distribute and/or modify it.\n\nFor the developers' and authors' protection, the GPL clearly explains that there\nis no warranty for this free software. For both users' and authors' sake, the\nGPL requires that modified versions be marked as changed, so that their problems\nwill not be attributed erroneously to authors of previous versions.\n\nSome devices are designed to deny users access to install or run modified\nversions of the software inside them, although the manufacturer can do so. This\nis fundamentally incompatible with the aim of protecting users' freedom to\nchange the software. The systematic pattern of such abuse occurs in the area of\nproducts for individuals to use, which is precisely where it is most\nunacceptable. Therefore, we have designed this version of the GPL to prohibit\nthe practice for those products. If such problems arise substantially in other\ndomains, we stand ready to extend this provision to those domains in future\nversions of the GPL, as needed to protect the freedom of users.\n\nFinally, every program is threatened constantly by software patents. States\nshould not allow patents to restrict development and use of software on\ngeneral-purpose computers, but in those that do, we wish to avoid the special\ndanger that patents applied to a free program could make it effectively\nproprietary. To prevent this, the GPL assures that patents cannot be used to\nrender the program non-free.\n\nThe precise terms and conditions for copying, distribution and modification\nfollow.\n\n\nTERMS AND CONDITIONS\n--------------------\n\n\n### 0. Definitions.\n\n\"This License refers to version 3 of the GNU General Public License.\n\n\"Copyright\" also means copyright-like laws that apply to other kinds of works,\nsuch as semiconductor masks.\n\n\"The Program\" refers to any copyrightable work licensed under this License. Each\nlicensee is addressed as \"you\". \"Licensees\" and \"recipients\" may be individuals\nor organizations.\n\nTo \"modify\" a work means to copy from or adapt all or part of the work in a\nfashion requiring copyright permission, other than the making of an exact copy.\nThe resulting work is called a \"modified version\" of the earlier work or a work\n\"based on\" the earlier work.\n\nA \"covered work\" means either the unmodified Program or a work based on the\nProgram.\n\nTo \"propagate\" a work means to do anything with it that, without permission,\nwould make you directly or secondarily liable for infringement under applicable\ncopyright law, except executing it on a computer or modifying a private copy.\nPropagation includes copying, distribution (with or without modification),\nmaking available to the public, and in some countries other activities as well.\n\nTo \"convey\" a work means any kind of propagation that enables other parties to\nmake or receive copies. Mere interaction with a user through a computer network,\nwith no transfer of a copy, is not conveying.\n\nAn interactive user interface displays \"Appropriate Legal Notices\" to the extent\nthat it includes a convenient and prominently visible feature that (1) displays\nan appropriate copyright notice, and (2) tells the user that there is no\nwarranty for the work (except to the extent that warranties are provided), that\nlicensees may convey the work under this License, and how to view a copy of this\nLicense. If the interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n\n### 1. Source Code.\n\nThe \"source code\" for a work means the preferred form of the work for making\nmodifications to it. \"Object code\" means any non-source form of a work.\n\nA \"Standard Interface\" means an interface that either is an official standard\ndefined by a recognized standards body, or, in the case of interfaces specified\nfor a particular programming language, one that is widely used among developers\nworking in that language.\n\nThe \"System Libraries\" of an executable work include anything, other than the\nwork as a whole, that (a) is included in the normal form of packaging a Major\nComponent, but which is not part of that Major Component, and (b) serves only to\nenable use of the work with that Major Component, or to implement a Standard\nInterface for which an implementation is available to the public in source code\nform. A \"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system (if any) on\nwhich the executable work runs, or a compiler used to produce the work, or an\nobject code interpreter used to run it.\n\nThe \"Corresponding Source\" for a work in object code form means all the source\ncode needed to generate, install, and (for an executable work) run the object\ncode and to modify the work, including scripts to control those activities.\nHowever, it does not include the work's System Libraries, or general-purpose\ntools or generally available free programs which are used unmodified in\nperforming those activities but which are not part of the work. For example,\nCorresponding Source includes interface definition files associated with source\nfiles for the work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require, such as by\nintimate data communication or control flow between those subprograms and other\nparts of the work.\n\nThe Corresponding Source need not include anything that users can regenerate\nautomatically from other parts of the Corresponding Source.\n\nThe Corresponding Source for a work in source code form is that same work.\n\n\n### 2. Basic Permissions.\n\nAll rights granted under this License are granted for the term of copyright on\nthe Program, and are irrevocable provided the stated conditions are met. This\nLicense explicitly affirms your unlimited permission to run the unmodified\nProgram. The output from running a covered work is covered by this License only\nif the output, given its content, constitutes a covered work. This License\nacknowledges your rights of fair use or other equivalent, as provided by\ncopyright law.\n\nYou may make, run and propagate covered works that you do not convey, without\nconditions so long as your license otherwise remains in force. You may convey\ncovered works to others for the sole purpose of having them make modifications\nexclusively for you, or provide you with facilities for running those works,\nprovided that you comply with the terms of this License in conveying all\nmaterial for which you do not control copyright. Those thus making or running\nthe covered works for you must do so exclusively on your behalf, under your\ndirection and control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\nConveying under any other circumstances is permitted solely under the conditions\nstated below. Sublicensing is not allowed; section 10 makes it unnecessary.\n\n\n### 3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\nNo covered work shall be deemed part of an effective technological measure under\nany applicable law fulfilling obligations under article 11 of the WIPO copyright\ntreaty adopted on 20 December 1996, or similar laws prohibiting or restricting\ncircumvention of such measures.\n\nWhen you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention is\neffected by exercising rights under this License with respect to the covered\nwork, and you disclaim any intention to limit operation or modification of the\nwork as a means of enforcing, against the work's users, your or third parties'\nlegal rights to forbid circumvention of technological measures.\n\n\n### 4. Conveying Verbatim Copies.\n\nYou may convey verbatim copies of the Program's source code as you receive it,\nin any medium, provided that you conspicuously and appropriately publish on each\ncopy an appropriate copyright notice; keep intact all notices stating that this\nLicense and any non-permissive terms added in accord with section 7 apply to the\ncode; keep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\nYou may charge any price or no price for each copy that you convey, and you may\noffer support or warranty protection for a fee.\n\n\n### 5. Conveying Modified Source Versions.\n\nYou may convey a work based on the Program, or the modifications to produce it\nfrom the Program, in the form of source code under the terms of section 4,\nprovided that you also meet all of these conditions:\n\n*   **a)** The work must carry prominent notices stating that you modified it,\n    and giving a relevant date.\n\n*   **b)** The work must carry prominent notices stating that it is released\n    under this License and any conditions added under section 7. This\n    requirement modifies the requirement in section 4 to \"keep intact all\n    notices\".\n\n*   **c)** You must license the entire work, as a whole, under this License to\n    anyone who comes into possession of a copy. This License will therefore\n    apply, along with any applicable section 7 additional terms, to the whole of\n    the work, and all its parts, regardless of how they are packaged. This\n    License gives no permission to license the work in any other way, but it\n    does not invalidate such permission if you have separately received it.\n\n*   **d)** If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your work need not\n    make them do so.\n\nA compilation of a covered work with other separate and independent works,\nwhich are not by their nature extensions of the covered work, and which are\nnot combined with it such as to form a larger program, in or on a volume of\na storage or distribution medium, is called an \"aggregate\" if the\ncompilation and its resulting copyright are not used to limit the access or\nlegal rights of the compilation's users beyond what the individual works\npermit. Inclusion of a covered work in an aggregate does not cause this\nLicense to apply to the other parts of the aggregate.\n\n\n### 6. Conveying Non-Source Forms.\n\nYou may convey a covered work in object code form under the terms of sections 4\nand 5, provided that you also convey the machine-readable Corresponding Source\nunder the terms of this License, in one of these ways:\n\n*   **a)** Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the Corresponding\n    Source fixed on a durable physical medium customarily used for software\n    interchange.\n\n*   **b)** Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a written offer,\n    valid for at least three years and valid for as long as you offer spare\n    parts or customer support for that product model, to give anyone who\n    possesses the object code either (1) a copy of the Corresponding Source for\n    all the software in the product that is covered by this License, on a\n    durable physical medium customarily used for software interchange, for a\n    price no more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the Corresponding Source from a\n    network server at no charge.\n\n*   **c)** Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source. This alternative is\n    allowed only occasionally and noncommercially, and only if you received the\n    object code with such an offer, in accord with subsection 6b.\n\n*   **d)** Convey the object code by offering access from a designated place\n    (gratis or for a charge), and offer equivalent access to the Corresponding\n    Source in the same way through the same place at no further charge. You need\n    not require recipients to copy the Corresponding Source along with the\n    object code. If the place to copy the object code is a network server, the\n    Corresponding Source may be on a different server (operated by you or a\n    third party) that supports equivalent copying facilities, provided you\n    maintain clear directions next to the object code saying where to find the\n    Corresponding Source. Regardless of what server hosts the Corresponding\n    Source, you remain obligated to ensure that it is available for as long as\n    needed to satisfy these requirements.\n\n*   **e)** Convey the object code using peer-to-peer transmission, provided you\n    inform other peers where the object code and Corresponding Source of the\n    work are being offered to the general public at no charge under subsection\n    6d.\n\nA separable portion of the object code, whose source code is excluded from\nthe Corresponding Source as a System Library, need not be included in\nconveying the object code work.\n\nA \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family, or\nhousehold purposes, or (2) anything designed or sold for incorporation into\na dwelling. In determining whether a product is a consumer product, doubtful\ncases shall be resolved in favor of coverage. For a particular product\nreceived by a particular user, \"normally used\" refers to a typical or common\nuse of that class of product, regardless of the status of the particular\nuser or of the way in which the particular user actually uses, or expects or\nis expected to use, the product. A product is a consumer product regardless\nof whether the product has substantial commercial, industrial or non-\nconsumer uses, unless such uses represent the only significant mode of use\nof the product.\n\n\"Installation Information\" for a User Product means any methods, procedures,\nauthorization keys, or other information required to install and execute\nmodified versions of a covered work in that User Product from a modified\nversion of its Corresponding Source. The information must suffice to ensure\nthat the continued functioning of the modified object code is in no case\nprevented or interfered with solely because modification has been made.\n\nIf you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as part of\na transaction in which the right of possession and use of the User Product\nis transferred to the recipient in perpetuity or for a fixed term\n(regardless of how the transaction is characterized), the Corresponding\nSource conveyed under this section must be accompanied by the Installation\nInformation. But this requirement does not apply if neither you nor any\nthird party retains the ability to install modified object code on the User\nProduct (for example, the work has been installed in ROM).\n\nThe requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates for\na work that has been modified or installed by the recipient, or for the User\nProduct in which it has been modified or installed. Access to a network may\nbe denied when the modification itself materially and adversely affects the\noperation of the network or violates the rules and protocols for\ncommunication across the network.\n\nCorresponding Source conveyed, and Installation Information provided, in\naccord with this section must be in a format that is publicly documented\n(and with an implementation available to the public in source code form),\nand must require no special password or key for unpacking, reading or\ncopying.\n\n\n### 7. Additional Terms.\n\n\"Additional permissions\" are terms that supplement the terms of this License by\nmaking exceptions from one or more of its conditions. Additional permissions\nthat are applicable to the entire Program shall be treated as though they were\nincluded in this License, to the extent that they are valid under applicable\nlaw. If additional permissions apply only to part of the Program, that part may\nbe used separately under those permissions, but the entire Program remains\ngoverned by this License without regard to the additional permissions.\n\nWhen you convey a copy of a covered work, you may at your option remove any\nadditional permissions from that copy, or from any part of it. (Additional\npermissions may be written to require their own removal in certain cases when\nyou modify the work.) You may place additional permissions on material, added by\nyou to a covered work, for which you have or can give appropriate copyright\npermission.\n\nNotwithstanding any other provision of this License, for material you add to a\ncovered work, you may (if authorized by the copyright holders of that material)\nsupplement the terms of this License with terms:\n\n*   **a)** Disclaiming warranty or limiting liability differently from the terms\n    of sections 15 and 16 of this License; or\n\n*   **b)** Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal Notices\n    displayed by works containing it; or\n\n*   **c)** Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in reasonable\n    ways as different from the original version; or\n\n*   **d)** Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n*   **e)** Declining to grant rights under trademark law for use of some trade\n    names, trademarks, or service marks; or\n\n*   **f)** Requiring indemnification of licensors and authors of that material\n    by anyone who conveys the material (or modified versions of it) with\n    contractual assumptions of liability to the recipient, for any liability\n    that these contractual assumptions directly impose on those licensors and\n    authors.\n\nAll other non-permissive additional terms are considered \"further restrictions\"\nwithin the meaning of section 10. If the Program as you received it, or any part\nof it, contains a notice stating that it is governed by this License along with\na term that is a further restriction, you may remove that term. If a license\ndocument contains a further restriction but permits relicensing or conveying\nunder this License, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does not survive\nsuch relicensing or conveying.\n\nIf you add terms to a covered work in accord with this section, you must place,\nin the relevant source files, a statement of the additional terms that apply to\nthose files, or a notice indicating where to find the applicable terms.\n\nAdditional terms, permissive or non-permissive, may be stated in the form of a\nseparately written license, or stated as exceptions; the above requirements\napply either way.\n\n\n### 8. Termination.\n\nYou may not propagate or modify a covered work except as expressly provided\nunder this License. Any attempt otherwise to propagate or modify it is void, and\nwill automatically terminate your rights under this License (including any\npatent licenses granted under the third paragraph of section 11).\n\nHowever, if you cease all violation of this License, then your license from a\nparticular copyright holder is reinstated (a) provisionally, unless and until\nthe copyright holder explicitly and finally terminates your license, and (b)\npermanently, if the copyright holder fails to notify you of the violation by\nsome reasonable means prior to 60 days after the cessation.\n\nMoreover, your license from a particular copyright holder is reinstated\npermanently if the copyright holder notifies you of the violation by some\nreasonable means, this is the first time you have received notice of violation\nof this License (for any work) from that copyright holder, and you cure the\nviolation prior to 30 days after your receipt of the notice.\n\nTermination of your rights under this section does not terminate the licenses of\nparties who have received copies or rights from you under this License. If your\nrights have been terminated and not permanently reinstated, you do not qualify\nto receive new licenses for the same material under section 10.\n\n\n### 9. Acceptance Not Required for Having Copies.\n\nYou are not required to accept this License in order to receive or run a copy of\nthe Program. Ancillary propagation of a covered work occurring solely as a\nconsequence of using peer-to-peer transmission to receive a copy likewise does\nnot require acceptance. However, nothing other than this License grants you\npermission to propagate or modify any covered work. These actions infringe\ncopyright if you do not accept this License. Therefore, by modifying or\npropagating a covered work, you indicate your acceptance of this License to do\nso.\n\n\n### 10. Automatic Licensing of Downstream Recipients.\n\nEach time you convey a covered work, the recipient automatically receives a\nlicense from the original licensors, to run, modify and propagate that work,\nsubject to this License. You are not responsible for enforcing compliance by\nthird parties with this License.\n\nAn \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations. If propagation of a covered work results\nfrom an entity transaction, each party to that transaction who receives a copy\nof the work also receives whatever licenses to the work the party's predecessor\nin interest had or could give under the previous paragraph, plus a right to\npossession of the Corresponding Source of the work from the predecessor in\ninterest, if the predecessor has it or can get it with reasonable efforts.\n\nYou may not impose any further restrictions on the exercise of the rights\ngranted or affirmed under this License. For example, you may not impose a\nlicense fee, royalty, or other charge for exercise of rights granted under this\nLicense, and you may not initiate litigation (including a cross-claim or\ncounterclaim in a lawsuit) alleging that any patent claim is infringed by\nmaking, using, selling, offering for sale, or importing the Program or any\nportion of it.\n\n\n### 11. Patents.\n\nA \"contributor\" is a copyright holder who authorizes use under this License of\nthe Program or a work on which the Program is based. The work thus licensed is\ncalled the contributor's \"contributor version\".\n\nA contributor's \"essential patent claims\" are all patent claims owned or\ncontrolled by the contributor, whether already acquired or hereafter acquired,\nthat would be infringed by some manner, permitted by this License, of making,\nusing, or selling its contributor version, but do not include claims that would\nbe infringed only as a consequence of further modification of the contributor\nversion. For purposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of this License.\n\nEach contributor grants you a non-exclusive, worldwide, royalty-free patent\nlicense under the contributor's essential patent claims, to make, use, sell,\noffer for sale, import and otherwise run, modify and propagate the contents of\nits contributor version.\n\nIn the following three paragraphs, a \"patent license\" is any express agreement\nor commitment, however denominated, not to enforce a patent (such as an express\npermission to practice a patent or covenant not to sue for patent infringement).\nTo \"grant\" such a patent license to a party means to make such an agreement or\ncommitment not to enforce a patent against the party.\n\nIf you convey a covered work, knowingly relying on a patent license, and the\nCorresponding Source of the work is not available for anyone to copy, free of\ncharge and under the terms of this License, through a publicly available network\nserver or other readily accessible means, then you must either (1) cause the\nCorresponding Source to be so available, or (2) arrange to deprive yourself of\nthe benefit of the patent license for this particular work, or (3) arrange, in a\nmanner consistent with the requirements of this License, to extend the patent\nlicense to downstream recipients. \"Knowingly relying\" means you have actual\nknowledge that, but for the patent license, your conveying the covered work in a\ncountry, or your recipient's use of the covered work in a country, would\ninfringe one or more identifiable patents in that country that you have reason\nto believe are valid.\n\nIf, pursuant to or in connection with a single transaction or arrangement, you\nconvey, or propagate by procuring conveyance of, a covered work, and grant a\npatent license to some of the parties receiving the covered work authorizing\nthem to use, propagate, modify or convey a specific copy of the covered work,\nthen the patent license you grant is automatically extended to all recipients of\nthe covered work and works based on it.\n\nA patent license is \"discriminatory\" if it does not include within the scope of\nits coverage, prohibits the exercise of, or is conditioned on the non- exercise\nof one or more of the rights that are specifically granted under this License.\nYou may not convey a covered work if you are a party to an arrangement with a\nthird party that is in the business of distributing software, under which you\nmake payment to the third party based on the extent of your activity of\nconveying the work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory patent\nlicense (a) in connection with copies of the covered work conveyed by you (or\ncopies made from those copies), or (b) primarily for and in connection with\nspecific products or compilations that contain the covered work, unless you\nentered into that arrangement, or that patent license was granted, prior to 28\nMarch 2007.\n\nNothing in this License shall be construed as excluding or limiting any implied\nlicense or other defenses to infringement that may otherwise be available to you\nunder applicable patent law.\n\n\n### 12. No Surrender of Others' Freedom.\n\nIf conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not excuse\nyou from the conditions of this License. If you cannot convey a covered work so\nas to satisfy simultaneously your obligations under this License and any other\npertinent obligations, then as a consequence you may not convey it at all. For\nexample, if you agree to terms that obligate you to collect a royalty for\nfurther conveying from those to whom you convey the Program, the only way you\ncould satisfy both those terms and this License would be to refrain entirely\nfrom conveying the Program.\n\n\n### 13. Use with the GNU Affero General Public License.\n\nNotwithstanding any other provision of this License, you have permission to link\nor combine any covered work with a work licensed under version 3 of the GNU\nAffero General Public License into a single combined work, and to convey the\nresulting work. The terms of this License will continue to apply to the part\nwhich is the covered work, but the special requirements of the GNU Affero\nGeneral Public License, section 13, concerning interaction through a network\nwill apply to the combination as such.\n\n\n### 14. Revised Versions of this License.\n\nThe Free Software Foundation may publish revised and/or new versions of the GNU\nGeneral Public License from time to time. Such new versions will be similar in\nspirit to the present version, but may differ in detail to address new problems\nor concerns.\n\nEach version is given a distinguishing version number. If the Program specifies\nthat a certain numbered version of the GNU General Public License \"or any later\nversion\" applies to it, you have the option of following the terms and\nconditions either of that numbered version or of any later version published by\nthe Free Software Foundation. If the Program does not specify a version number\nof the GNU General Public License, you may choose any version ever published by\nthe Free Software Foundation.\n\nIf the Program specifies that a proxy can decide which future versions of the\nGNU General Public License can be used, that proxy's public statement of\nacceptance of a version permanently authorizes you to choose that version for\nthe Program.\n\nLater license versions may give you additional or different permissions.\nHowever, no additional obligations are imposed on any author or copyright holder\nas a result of your choosing to follow a later version.\n\n\n### 15. Disclaimer of Warranty.\n\nTHERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER\nPARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER\nEXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE\nQUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU. SHOULD THE PROGRAM PROVE\nDEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n\n### 16. Limitation of Liability.\n\nIN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY\nCOPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS\nPERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL,\nINCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE\nTHE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED\nINACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE\nPROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY\nHAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.\n\n### 17. Interpretation of Sections 15 and 16.\n\nIf the disclaimer of warranty and limitation of liability provided above cannot\nbe given local legal effect according to their terms, reviewing courts shall\napply local law that most closely approximates an absolute waiver of all civil\nliability in connection with the Program, unless a warranty or assumption of\nliability accompanies a copy of the Program in return for a fee.\n\nEND OF TERMS AND CONDITIONS\n\n\nHow to Apply These Terms to Your New Programs\n---------------------------------------------\n\nIf you develop a new program, and you want it to be of the greatest possible use\nto the public, the best way to achieve this is to make it free software which\neveryone can redistribute and change under these terms.\n\nTo do so, attach the following notices to the program. It is safest to attach\nthem to the start of each source file to most effectively state the exclusion of\nwarranty; and each file should have at least the \"copyright\" line and a pointer\nto where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify it\n    under the terms of the GNU General Public License as published by the Free\n    Software Foundation, either version 3 of the License, or (at your option)\n    any later version.\n\n    This program is distributed in the hope that it will be useful, but WITHOUT\n    ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or\n    FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for\n    more details.\n\n    You should have received a copy of the GNU General Public License along with\n    this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program does terminal interaction, make it output a short notice like\nthis when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'.\n    This is free software, and you are welcome to redistribute it under certain\n    conditions; type 'show c' for details.\n\nThe hypothetical commands 'show w' and 'show c' should show the appropriate\nparts of the General Public License. Of course, your program's commands might be\ndifferent; for a GUI interface, you would use an \"about box\".\n\nYou should also get your employer (if you work as a programmer) or school, if\nany, to sign a \"copyright disclaimer\" for the program, if necessary. For more\ninformation on this, and how to apply and follow the GNU GPL, see\n<<http://www.gnu.org/licenses/>>.\n\nThe GNU General Public License does not permit incorporating your program into\nproprietary programs. If your program is a subroutine library, you may consider\nit more useful to permit linking proprietary applications with the library. If\nthis is what you want to do, use the GNU Lesser General Public License instead\nof this License. But first, please read\n<<http://www.gnu.org/philosophy/why-not-lgpl.html>>.\n"
        },
        {
          "name": "license_Modified_BSD.md",
          "type": "blob",
          "size": 1.64453125,
          "content": "This software is licensed with a Modified BSD License.\n\nAll of this is supposed to be Free Software, Open Source, DFSG-free,\nGPL-compatible, and OK to use in both free and proprietary applications.\nAdditions and corrections to this file are welcome.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright\n  notice, this list of conditions and the following disclaimer.\n\n* Redistributions in binary form must reproduce the above copyright\n  notice, this list of conditions and the following disclaimer in\n  the documentation and/or other materials provided with the\n  distribution.\n\n* Neither the name of the copyright holders nor the names of\n  contributors may be used to endorse or promote products derived\n  from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\nARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE\nLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\nCONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\nSUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\nINTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\nCONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "nose2.cfg",
          "type": "blob",
          "size": 0.04296875,
          "content": "[unittest]\nstart-dir = lib/python/qmk/tests\n"
        },
        {
          "name": "paths.mk",
          "type": "blob",
          "size": 0.677734375,
          "content": "# Directory common source files exist\nTOP_DIR = .\nTMK_DIR = tmk_core\nTMK_PATH = $(TMK_DIR)\n\nLIB_DIR = lib\nLIB_PATH = $(LIB_DIR)\n\nQUANTUM_DIR = quantum\nQUANTUM_PATH = $(QUANTUM_DIR)\n\nDRIVER_DIR = drivers\nDRIVER_PATH = $(DRIVER_DIR)\n\nPLATFORM_DIR = platforms\nPLATFORM_PATH = $(PLATFORM_DIR)\n\nPROTOCOL_DIR = protocol\nPROTOCOL_PATH = $(TMK_DIR)/$(PROTOCOL_DIR)\n\nBUILDDEFS_DIR = builddefs\nBUILDDEFS_PATH = $(BUILDDEFS_DIR)\n\nBUILD_DIR := .build\n\nCOMMON_VPATH := $(TOP_DIR)\nCOMMON_VPATH += $(TMK_PATH)\nCOMMON_VPATH += $(QUANTUM_PATH)\nCOMMON_VPATH += $(QUANTUM_PATH)/keymap_extras\nCOMMON_VPATH += $(QUANTUM_PATH)/process_keycode\nCOMMON_VPATH += $(QUANTUM_PATH)/sequencer\nCOMMON_VPATH += $(DRIVER_PATH)\n"
        },
        {
          "name": "platforms",
          "type": "tree",
          "content": null
        },
        {
          "name": "quantum",
          "type": "tree",
          "content": null
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 2.244140625,
          "content": "# Quantum Mechanical Keyboard Firmware\n\n[![Current Version](https://img.shields.io/github/tag/qmk/qmk_firmware.svg)](https://github.com/qmk/qmk_firmware/tags)\n[![Discord](https://img.shields.io/discord/440868230475677696.svg)](https://discord.gg/qmk)\n[![Docs Status](https://img.shields.io/badge/docs-ready-orange.svg)](https://docs.qmk.fm)\n[![GitHub contributors](https://img.shields.io/github/contributors/qmk/qmk_firmware.svg)](https://github.com/qmk/qmk_firmware/pulse/monthly)\n[![GitHub forks](https://img.shields.io/github/forks/qmk/qmk_firmware.svg?style=social&label=Fork)](https://github.com/qmk/qmk_firmware/)\n\nThis is a keyboard firmware based on the [tmk\\_keyboard firmware](https://github.com/tmk/tmk_keyboard) with some useful features for Atmel AVR and ARM controllers, and more specifically, the [OLKB product line](https://olkb.com), the [ErgoDox EZ](https://ergodox-ez.com) keyboard, and the Clueboard product line.\n\n## Documentation\n\n* [See the official documentation on docs.qmk.fm](https://docs.qmk.fm)\n\nThe docs are powered by [VitePress](https://vitepress.dev/). They are also viewable offline; see [Previewing the Documentation](https://docs.qmk.fm/#/contributing?id=previewing-the-documentation) for more details.\n\nYou can request changes by making a fork and opening a [pull request](https://github.com/qmk/qmk_firmware/pulls).\n\n## Supported Keyboards\n\n* [Planck](/keyboards/planck/)\n* [Preonic](/keyboards/preonic/)\n* [ErgoDox EZ](/keyboards/ergodox_ez/)\n* [Clueboard](/keyboards/clueboard/)\n* [Cluepad](/keyboards/clueboard/17/)\n* [Atreus](/keyboards/atreus/)\n\nThe project also includes community support for [lots of other keyboards](/keyboards/).\n\n## Maintainers\n\nQMK is developed and maintained by Jack Humbert of OLKB with contributions from the community, and of course, [Hasu](https://github.com/tmk). The OLKB product firmwares are maintained by [Jack Humbert](https://github.com/jackhumbert), the Ergodox EZ by [ZSA Technology Labs](https://github.com/zsa), the Clueboard by [Zach White](https://github.com/skullydazed), and the Atreus by [Phil Hagelberg](https://github.com/technomancy).\n\n## Official Website\n\n[qmk.fm](https://qmk.fm) is the official website of QMK, where you can find links to this page, the documentation, and the keyboards supported by QMK.\n"
        },
        {
          "name": "requirements-dev.txt",
          "type": "blob",
          "size": 0.1279296875,
          "content": "# Install the necessary requirements\n-r requirements.txt\n\n# Python development requirements\nnose2\nflake8\npep8-naming\npyflakes\nyapf\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.1328125,
          "content": "# Python requirements\n# platformdirs\nargcomplete\ncolorama\ndotty-dict\nhid\nhjson\njsonschema>=4\nmilc>=1.4.2\npygments\npyserial\npyusb\npillow\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 10.228515625,
          "content": "# Python settings for QMK\n[flake8]\nignore =\n    # QMK is ok with long lines.\n    E501\n    # Conflicts with our yapf config\n    E231\nper_file_ignores =\n    # Module imported but unused\n    **/__init__.py:F401\n    # Quantum Painter also outputs append data using bytes object arithmetic on multiple lines\n    **/painter_qgf.py:W503\n    **/painter_qff.py:W503\n\n# Let's slowly crank this down\nmax_complexity=16\n\n[yapf]\n# Align closing bracket with visual indentation.\nalign_closing_bracket_with_visual_indent=True\n\n# Allow dictionary keys to exist on multiple lines. For example:\n#\n#   x = {\n#       ('this is the first element of a tuple',\n#        'this is the second element of a tuple'):\n#            value,\n#   }\nallow_multiline_dictionary_keys=False\n\n# Allow lambdas to be formatted on more than one line.\nallow_multiline_lambdas=False\n\n# Allow splitting before a default / named assignment in an argument list.\nallow_split_before_default_or_named_assigns=True\n\n# Allow splits before the dictionary value.\nallow_split_before_dict_value=True\n\n#   Let spacing indicate operator precedence. For example:\n#\n#     a = 1 * 2 + 3 / 4\n#     b = 1 / 2 - 3 * 4\n#     c = (1 + 2) * (3 - 4)\n#     d = (1 - 2) / (3 + 4)\n#     e = 1 * 2 - 3\n#     f = 1 + 2 + 3 + 4\n#\n# will be formatted as follows to indicate precedence:\n#\n#     a = 1*2 + 3/4\n#     b = 1/2 - 3*4\n#     c = (1+2) * (3-4)\n#     d = (1-2) / (3+4)\n#     e = 1*2 - 3\n#     f = 1 + 2 + 3 + 4\n#\narithmetic_precedence_indication=False\n\n# Number of blank lines surrounding top-level function and class\n# definitions.\nblank_lines_around_top_level_definition=2\n\n# Insert a blank line before a class-level docstring.\nblank_line_before_class_docstring=False\n\n# Insert a blank line before a module docstring.\nblank_line_before_module_docstring=False\n\n# Insert a blank line before a 'def' or 'class' immediately nested\n# within another 'def' or 'class'. For example:\n#\n#   class Foo:\n#                      # <------ this blank line\n#     def method():\n#       ...\nblank_line_before_nested_class_or_def=False\n\n# Do not split consecutive brackets. Only relevant when\n# dedent_closing_brackets is set. For example:\n#\n#    call_func_that_takes_a_dict(\n#        {\n#            'key1': 'value1',\n#            'key2': 'value2',\n#        }\n#    )\n#\n# would reformat to:\n#\n#    call_func_that_takes_a_dict({\n#        'key1': 'value1',\n#        'key2': 'value2',\n#    })\ncoalesce_brackets=True\n\n# The column limit.\ncolumn_limit=256\n\n# The style for continuation alignment. Possible values are:\n#\n# - SPACE: Use spaces for continuation alignment. This is default behavior.\n# - FIXED: Use fixed number (CONTINUATION_INDENT_WIDTH) of columns\n#   (ie: CONTINUATION_INDENT_WIDTH/INDENT_WIDTH tabs) for continuation\n#   alignment.\n# - VALIGN-RIGHT: Vertically align continuation lines with indent\n#   characters. Slightly right (one more indent character) if cannot\n#   vertically align continuation lines with indent characters.\n#\n# For options FIXED, and VALIGN-RIGHT are only available when USE_TABS is\n# enabled.\ncontinuation_align_style=SPACE\n\n# Indent width used for line continuations.\ncontinuation_indent_width=4\n\n# Put closing brackets on a separate line, dedented, if the bracketed\n# expression can't fit in a single line. Applies to all kinds of brackets,\n# including function definitions and calls. For example:\n#\n#   config = {\n#       'key1': 'value1',\n#       'key2': 'value2',\n#   }        # <--- this bracket is dedented and on a separate line\n#\n#   time_series = self.remote_client.query_entity_counters(\n#       entity='dev3246.region1',\n#       key='dns.query_latency_tcp',\n#       transform=Transformation.AVERAGE(window=timedelta(seconds=60)),\n#       start_ts=now()-timedelta(days=3),\n#       end_ts=now(),\n#   )        # <--- this bracket is dedented and on a separate line\ndedent_closing_brackets=True\n\n# Disable the heuristic which places each list element on a separate line\n# if the list is comma-terminated.\ndisable_ending_comma_heuristic=False\n\n# Place each dictionary entry onto its own line.\neach_dict_entry_on_separate_line=True\n\n# The regex for an i18n comment. The presence of this comment stops\n# reformatting of that line, because the comments are required to be\n# next to the string they translate.\ni18n_comment=\n\n# The i18n function call names. The presence of this function stops\n# reformattting on that line, because the string it has cannot be moved\n# away from the i18n comment.\ni18n_function_call=\n\n# Indent blank lines.\nindent_blank_lines=False\n\n# Indent the dictionary value if it cannot fit on the same line as the\n# dictionary key. For example:\n#\n#   config = {\n#       'key1':\n#           'value1',\n#       'key2': value1 +\n#               value2,\n#   }\nindent_dictionary_value=True\n\n# The number of columns to use for indentation.\nindent_width=4\n\n# Join short lines into one line. E.g., single line 'if' statements.\njoin_multiple_lines=False\n\n# Do not include spaces around selected binary operators. For example:\n#\n#   1 + 2 * 3 - 4 / 5\n#\n# will be formatted as follows when configured with \"*,/\":\n#\n#   1 + 2*3 - 4/5\nno_spaces_around_selected_binary_operators=\n\n# Use spaces around default or named assigns.\nspaces_around_default_or_named_assign=False\n\n# Use spaces around the power operator.\nspaces_around_power_operator=False\n\n# The number of spaces required before a trailing comment.\n# This can be a single value (representing the number of spaces\n# before each trailing comment) or list of values (representing\n# alignment column values; trailing comments within a block will\n# be aligned to the first column value that is greater than the maximum\n# line length within the block). For example:\n#\n# With spaces_before_comment=5:\n#\n#   1 + 1 # Adding values\n#\n# will be formatted as:\n#\n#   1 + 1     # Adding values <-- 5 spaces between the end of the statement and comment\n#\n# With spaces_before_comment=15, 20:\n#\n#   1 + 1 # Adding values\n#   two + two # More adding\n#\n#   longer_statement # This is a longer statement\n#   short # This is a shorter statement\n#\n#   a_very_long_statement_that_extends_beyond_the_final_column # Comment\n#   short # This is a shorter statement\n#\n# will be formatted as:\n#\n#   1 + 1          # Adding values <-- end of line comments in block aligned to col 15\n#   two + two      # More adding\n#\n#   longer_statement    # This is a longer statement <-- end of line comments in block aligned to col 20\n#   short               # This is a shorter statement\n#\n#   a_very_long_statement_that_extends_beyond_the_final_column  # Comment <-- the end of line comments are aligned based on the line length\n#   short                                                       # This is a shorter statement\n#\nspaces_before_comment=2\n\n# Insert a space between the ending comma and closing bracket of a list,\n# etc.\nspace_between_ending_comma_and_closing_bracket=False\n\n# Split before arguments\nsplit_all_comma_separated_values=False\n\n# Split before arguments if the argument list is terminated by a\n# comma.\nsplit_arguments_when_comma_terminated=True\n\n# Set to True to prefer splitting before '+', '-', '*', '/', '//', or '@'\n# rather than after.\nsplit_before_arithmetic_operator=False\n\n# Set to True to prefer splitting before '&', '|' or '^' rather than\n# after.\nsplit_before_bitwise_operator=True\n\n# Split before the closing bracket if a list or dict literal doesn't fit on\n# a single line.\nsplit_before_closing_bracket=True\n\n# Split before a dictionary or set generator (comp_for). For example, note\n# the split before the 'for':\n#\n#   foo = {\n#       variable: 'Hello world, have a nice day!'\n#       for variable in bar if variable != 42\n#   }\nsplit_before_dict_set_generator=True\n\n# Split before the '.' if we need to split a longer expression:\n#\n#   foo = ('This is a really long string: {}, {}, {}, {}'.format(a, b, c, d))\n#\n# would reformat to something like:\n#\n#   foo = ('This is a really long string: {}, {}, {}, {}'\n#          .format(a, b, c, d))\nsplit_before_dot=False\n\n# Split after the opening paren which surrounds an expression if it doesn't\n# fit on a single line.\nsplit_before_expression_after_opening_paren=False\n\n# If an argument / parameter list is going to be split, then split before\n# the first argument.\nsplit_before_first_argument=False\n\n# Set to True to prefer splitting before 'and' or 'or' rather than\n# after.\nsplit_before_logical_operator=False\n\n# Split named assignments onto individual lines.\nsplit_before_named_assigns=True\n\n# Set to True to split list comprehensions and generators that have\n# non-trivial expressions and multiple clauses before each of these\n# clauses. For example:\n#\n#   result = [\n#       a_long_var + 100 for a_long_var in xrange(1000)\n#       if a_long_var % 10]\n#\n# would reformat to something like:\n#\n#   result = [\n#       a_long_var + 100\n#       for a_long_var in xrange(1000)\n#       if a_long_var % 10]\nsplit_complex_comprehension=True\n\n# The penalty for splitting right after the opening bracket.\nsplit_penalty_after_opening_bracket=300\n\n# The penalty for splitting the line after a unary operator.\nsplit_penalty_after_unary_operator=10000\n\n# The penalty of splitting the line around the '+', '-', '*', '/', '//',\n# ``%``, and '@' operators.\nsplit_penalty_arithmetic_operator=300\n\n# The penalty for splitting right before an if expression.\nsplit_penalty_before_if_expr=0\n\n# The penalty of splitting the line around the '&', '|', and '^'\n# operators.\nsplit_penalty_bitwise_operator=300\n\n# The penalty for splitting a list comprehension or generator\n# expression.\nsplit_penalty_comprehension=80\n\n# The penalty for characters over the column limit.\nsplit_penalty_excess_character=7000\n\n# The penalty incurred by adding a line split to the unwrapped line. The\n# more line splits added the higher the penalty.\nsplit_penalty_for_added_line_split=30\n\n# The penalty of splitting a list of \"import as\" names. For example:\n#\n#   from a_very_long_or_indented_module_name_yada_yad import (long_argument_1,\n#                                                             long_argument_2,\n#                                                             long_argument_3)\n#\n# would reformat to something like:\n#\n#   from a_very_long_or_indented_module_name_yada_yad import (\n#       long_argument_1, long_argument_2, long_argument_3)\nsplit_penalty_import_names=0\n\n# The penalty of splitting the line around the 'and' and 'or'\n# operators.\nsplit_penalty_logical_operator=300\n\n# Use the Tab character for indentation.\nuse_tabs=False\n"
        },
        {
          "name": "shell.nix",
          "type": "blob",
          "size": 2.5224609375,
          "content": "let\n  # We specify sources via Niv: use \"niv update nixpkgs\" to update nixpkgs, for example.\n  sources = import ./util/nix/sources.nix { };\nin\n# However, if you want to override Niv's inputs, this will let you do that.\n{ pkgs ? import sources.nixpkgs { }\n, poetry2nix ? pkgs.callPackage (import sources.poetry2nix) { }\n, avr ? true\n, arm ? true\n, teensy ? true }:\nwith pkgs;\nlet\n  avrlibc = pkgsCross.avr.libcCross;\n\n  avr_incflags = [\n    \"-isystem ${avrlibc}/avr/include\"\n    \"-B${avrlibc}/avr/lib/avr5\"\n    \"-L${avrlibc}/avr/lib/avr5\"\n    \"-B${avrlibc}/avr/lib/avr35\"\n    \"-L${avrlibc}/avr/lib/avr35\"\n    \"-B${avrlibc}/avr/lib/avr51\"\n    \"-L${avrlibc}/avr/lib/avr51\"\n  ];\n\n  # Builds the python env based on nix/pyproject.toml and\n  # nix/poetry.lock Use the \"poetry update --lock\", \"poetry add\n  # --lock\" etc. in the nix folder to adjust the contents of those\n  # files if the requirements*.txt files change\n  pythonEnv = poetry2nix.mkPoetryEnv {\n    projectDir = ./util/nix;\n    overrides = poetry2nix.overrides.withDefaults (self: super: {\n      qmk = super.qmk.overridePythonAttrs(old: {\n        # Allow QMK CLI to run \"qmk\" as a subprocess (the wrapper changes\n        # $PATH and breaks these invocations).\n        dontWrapPythonPrograms = true;\n\n        # Fix \"qmk setup\" to use the Python interpreter from the environment\n        # when invoking \"qmk doctor\" (sys.executable gets its value from\n        # $NIX_PYTHONEXECUTABLE, which is set by the \"qmk\" wrapper from the\n        # Python environment, so \"qmk doctor\" then runs with the proper\n        # $NIX_PYTHONPATH too, because sys.executable actually points to\n        # another wrapper from the same Python environment).\n        postPatch = ''\n          substituteInPlace qmk_cli/subcommands/setup.py \\\n            --replace \"[Path(sys.argv[0]).as_posix()\" \\\n              \"[Path(sys.executable).as_posix(), Path(sys.argv[0]).as_posix()\"\n        '';\n      });\n    });\n  };\nin\nmkShell {\n  name = \"qmk-firmware\";\n\n  buildInputs = [ clang-tools_11 dfu-programmer dfu-util diffutils git pythonEnv niv ]\n    ++ lib.optional avr [\n      pkgsCross.avr.buildPackages.binutils\n      pkgsCross.avr.buildPackages.gcc8\n      avrlibc\n      avrdude\n    ]\n    ++ lib.optional arm [ gcc-arm-embedded ]\n    ++ lib.optional teensy [ teensy-loader-cli ];\n\n  AVR_CFLAGS = lib.optional avr avr_incflags;\n  AVR_ASFLAGS = lib.optional avr avr_incflags;\n  shellHook = ''\n    # Prevent the avr-gcc wrapper from picking up host GCC flags\n    # like -iframework, which is problematic on Darwin\n    unset NIX_CFLAGS_COMPILE_FOR_TARGET\n  '';\n}\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tmk_core",
          "type": "tree",
          "content": null
        },
        {
          "name": "users",
          "type": "tree",
          "content": null
        },
        {
          "name": "util",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}