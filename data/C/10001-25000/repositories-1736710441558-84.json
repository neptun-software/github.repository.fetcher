{
  "metadata": {
    "timestamp": 1736710441558,
    "page": 84,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "Tencent/wcdb",
      "stars": 10905,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format",
          "type": "blob",
          "size": 2.564453125,
          "content": "---\nBasedOnStyle: LLVM\nAccessModifierOffset: -4\nAlignAfterOpenBracket: Align\nAlignConsecutiveAssignments: false\nAlignConsecutiveDeclarations: false\nAlignEscapedNewlines: Right\nAlignOperands: true\nAlignTrailingComments: true\nAllowAllParametersOfDeclarationOnNextLine: true\nAllowShortBlocksOnASingleLine: false\nAllowShortCaseLabelsOnASingleLine: false\nAllowShortFunctionsOnASingleLine: InlineOnly\nAllowShortIfStatementsOnASingleLine: true\nAllowShortLoopsOnASingleLine: true\nAlwaysBreakAfterReturnType: None\nAlwaysBreakBeforeMultilineStrings: true\nAlwaysBreakTemplateDeclarations: true\nBinPackArguments: false\nBinPackParameters: false\nBraceWrapping:\n    AfterClass: false\n    AfterControlStatement: false\n    AfterEnum: false\n    AfterFunction: true\n    AfterNamespace: false\n    AfterObjCDeclaration: false\n    AfterStruct: false\n    AfterUnion: false\n    AfterExternBlock: false\n    BeforeCatch: false\n    BeforeElse: false\n    IndentBraces: false\n    SplitEmptyFunction: true\n    SplitEmptyRecord: true\n    SplitEmptyNamespace: true\nBreakBeforeBinaryOperators: All\nBreakBeforeBraces: Custom\nBreakBeforeTernaryOperators: false\nBreakConstructorInitializers: BeforeComma\nBreakStringLiterals: false\nColumnLimit: 0\nCompactNamespaces: false\nConstructorInitializerAllOnOneLineOrOnePerLine: true\nConstructorInitializerIndentWidth: 0\nContinuationIndentWidth: 0\nCpp11BracedListStyle: false\nDerivePointerAlignment: true\nFixNamespaceComments: true\nIncludeBlocks: Preserve\nIndentCaseLabels: false\nIndentPPDirectives: None  \nIndentWidth: 4\nIndentWrappedFunctionNames: false\nKeepEmptyLinesAtTheStartOfBlocks: false\nMaxEmptyLinesToKeep: 1\nNamespaceIndentation: None\nObjCBinPackProtocolList: Auto\nObjCBlockIndentWidth: 4\nObjCSpaceAfterProperty: true\nObjCSpaceBeforeProtocolList: true\nPenaltyBreakAssignment: 1\nPenaltyBreakBeforeFirstCallParameter: 1\nPenaltyBreakComment: 1\nPenaltyBreakFirstLessLess: 1\nPenaltyBreakString: 1\nPenaltyExcessCharacter: 1\nPenaltyReturnTypeOnItsOwnLine: 1\nPointerAlignment: Right\nReflowComments: false\nSortIncludes: true\nSortUsingDeclarations: false\nSpaceAfterCStyleCast: true\nSpaceAfterTemplateKeyword: false\nSpaceBeforeAssignmentOperators: true\nSpaceBeforeCtorInitializerColon: true\nSpaceBeforeInheritanceColon: true\nSpaceBeforeParens: ControlStatements\nSpaceBeforeRangeBasedForLoopColon: true\nSpaceInEmptyParentheses: false\nSpacesBeforeTrailingComments: 1\nSpacesInAngles: false\nSpacesInCStyleCastParentheses: false\nSpacesInContainerLiterals: true\nSpacesInParentheses: false\nSpacesInSquareBrackets: false\nStandard: Auto\nTabWidth: 4\nUseTab: Never\n---\nLanguage: Cpp\nColumnLimit: 80\n---\nLanguage: ObjC\nColumnLimit: 0\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5615234375,
          "content": "# Visual Studio Code\n.vscode\n\n# Visual Studio\n.vs\n\n# Android Studio, Gradle\n*.iml\n.gradle\n.idea\n.settings\n.project\n.classpath\n.DS_Store\n.externalNativeBuild\n\n# Xcode\n*.pbxuser\nxcuserdata\nxcuserdata/*\n*.xcworkspace/*\n*.xcworkspace\nDerivedData\n\n#CMake\nsrc/build/\n\n# WCDB\nWCDB.framework\n\n# SwiftPM\n/.build\nPackage.resolved\n\n# WeChat\nWeChat/conan/*\n\n# wconan\nWeChat/.wconan2/\nWeChat/wconan_build/\nWeChat/wconan_libs/\nWeChat/wconan_local_build/\nWeChat/wconan_package.lock\nWeChat/wconan_publish.py\nWeChat/cmake-build-*/\nWeChat/compile.log\nWeChat/apple_build/\nWeChat/export_headers/"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.244140625,
          "content": "[submodule \"sqlcipher\"]\n\tpath = sqlcipher\n\turl = https://github.com/Tencent/sqlcipher.git\n[submodule \"openssl\"]\n\tpath = openssl\n\turl = https://github.com/openssl/openssl.git\n[submodule \"zstd\"]\n\tpath = zstd\n\turl = https://github.com/facebook/zstd.git\n"
        },
        {
          "name": ".swift-version",
          "type": "blob",
          "size": 0.0009765625,
          "content": "5"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 10.44140625,
          "content": "## v2.1.9\n\n* Add lite mode (Set journal mode and synchronous flag to OFF)\n* Fix memory leak and other known bug\n\n## v2.1.8\n\n* Increase migration speed\n* Fix compile error of SwiftPM in Xcode 16\n\n## v2.1.7\n\n* WCDB C++ supports OpenHarmony OS\n* Support to recompress existing data with new configuration\n* Support auto vacuum\n* Support Swift6\n* Fix some compile issues\n\n## v2.1.6\n\n* Some bugfix for data repair, Java/Kotlin ORM and Swift query\n* Fix some compile error and warning\n\n## v2.1.5\n\n* Support legacy mmicu tokenizer in WCDB Java/Kotlin\n* Support to rollback compression\n* Improve performance of vacuum\n* Add valueOr interface to Optional\n* Some bugfix for compression and vacuum\n\n## v2.1.4\n\n* Fix the compile error of WCDB Java/Koltin caused by minifyEnabled flag\n* Add regular memory verification to Zstd dict\n\n## v2.1.3\n\n* Add ProGuard config for WCDB Java/Kotlin\n* Support to build WCDB C++ as a framework on Apple platform with CMake\n* Support to insert an array of object pointers or object shared pointers in WCDB C++\n* Fix the bug that error cannot be obtained through database\n\n## v2.1.2\n\n* Some bugfix for data compression\n* Fix compile error of WCDB Objc on Carthage\n* Fix compile error of WCDB C++ when built as a CMake submodule\n\n## v2.1.1\n\n* Some bugfix for WCDB C++ and WCDB Swift\n* Fix compile error on Mac Catalyst\n\n## v2.1.0\n\n* Add WCDB Java/Kotlin\n* Support data compression\n* Support incremental data backup\n* Support to configure a filter condition for data migration\n* Support to use std::optional and std::shared_ptr in C++ ORM\n* C++ ORM supports inheritance\n* Add more monitoring capabilities\n* WCDB Swift supports Swift Package Manager\n\n## v2.0.4\n\n* Support to asynchronously interrupt database operations\n* Optimize the handle management mechanism\n* Some bugfix for WCDB C++ in Windows\n\n## v2.0.3\n\n* Transaction supports nesting\n* Some bug fix for data migration\n* Fix compile error in new Xcode\n\n## v2.0.2.5\n\n* Fix compile issue caused by header\n\n## v2.0.2\n\n* WCDB C++ supports Windows\n* Optimizie C++ ORM performance\n* Downgrade the minimum supported system version for iPhone and Apple watch\n\n## v2.0.1\n\n* Support databases created by old versions of sqlcipher\n* Fix crash of WCDB Swift in x86 emulator\n* Support insertOrIgnore\n\n## v2.0.0\n\n* Add WCDB C++\n* New implementation of WCDB Swift\n* New implementation of Winq\n* New implementation of database repair\n* Support data migration\n* Support FTS5\n\n## v1.1.0\n\n#### iOS/macOS\n* Support Swift 5 for Xcode 14.\n* Fix compile error for SQLCipher 4.1.0.\n* Fix some bug.\n\n## v1.0.8.2\n\n#### iOS/macOS\n* Support Swift 4.2 for Xcode 10.2\n\n## v1.0.8.1\n\n#### iOS/macOS\n* Fix a bug that archive failed with Xcode new build system.\n\n## v1.0.8\n\n#### Android\n\n* Support for [Room library](https://developer.android.com/topic/libraries/architecture/room) from Android Jetpack. See README and [Wiki](https://github.com/Tencent/wcdb/wiki/Android-WCDB-%E4%BD%BF%E7%94%A8-Room-ORM-%E4%B8%8E%E6%95%B0%E6%8D%AE%E7%BB%91%E5%AE%9A) for details.\n\n## v1.0.7.5\n\n#### iOS/macOS\n\n* Compatible with Swift 4.2.\n* Enable FTS5 macro for sqlcipher.\n\n## v1.0.7\n\n#### iOS/macOS\n\n* Fix nil string bug while inserting empty string.\n* Code template is not installed automatically now.\n* Reduce size of binary and provide a non-bitcode scheme for Carthage.\n* Avoid conflict between builtin SQLCipher and other SQLite based library(including system library).\n\n## v1.0.6.2\n\n#### iOS/macOS\n\nIt's a bug fixed version. Since Swift 4.1.x contains [bugs](https://github.com/Tencent/wcdb/issues/283) that make WCDB fails to compile, developers should use Xcode 10(with Swift 4.2).\n\n##### Swift\n* Compatible with Swift 4.2. The `ColumnEncodable` and `ColumnDecodable` is now changed. Check the code snippet, file template or wiki for the new usage.\n* Use `Double` column type for `Date`.\n\nFYI, a refactor is needed to fit the new conditional conformance design of Swift 4.2. We will finish it in next version.\n\n#### Android\n\n* Use C++14 and libc++_static runtime on JNI routines.\n* Fix \"no implementation found\" log on libwcdb.so initialization.\n* Fix ProGuard rules when importing from AAR package.\n\n## v1.0.6\n\n#### iOS/macOS\n\nIt's the first release for WCDB Swift, which contains exactly the same features as the ObjC version, including:\n\n* Object-Relational-Mapping based on Swift 4.0 `Codable` protocol.\n* WCDB Integrated Language Query.\n* Multithreading safety and concurrency.\n* Encryption based on SQLCipher.\n* Protection for SQL injection.\n* Full text search.\n* Corruption recovery.\n* ...\n\nFor further information, please check tutorial on wiki.\n\n#### Android\n\n* Migrate to gradle plugin 3.0.0, target API 26, and minimal API 14.\n* Support NDK r16, change default toolchain to clang.\n* Various bug fixes.\n\n## v1.0.5\n\n#### iOS/macOS\n\n* Builtin full-text search support for ORM.\n```objc\nWCTProperty *tableProperty = WCTSampleFTSData.PropertyNamed(tableNameFTS).match(\"Eng*\")];\n\n[databaseFTS getObjectsOfClass:WCTSampleFTSData.class fromTable:tableNameFTS where:tableProperty.match(\"Eng*\")];\n```\n* Support read-only databases.\n* Some minor bug fixes and code refactor.\n\n#### Android\n\n* Optimize asynchronous checkpointer, greatly improve write performance with WAL and asynchronous checkpointing.\n```java\nSQLiteDatabase db = SQLiteDatabase.openOrCreateDatabaseInWalMode(...);\ndb.setAsyncCheckpointEnabled(true);\n```\n* Add benchmark for asynchronous checkpointer.\n* Add connection pooling friendly interface. `SQLiteDatabase.setSynchronousMode()` to set database synchronization mode.\n* Enable `dbstat` virtual table while compiling.\n\n## v1.0.4\n\n#### Repair Kit\n\n* Add `sqliterk_cancel` function to cancel ongoing output operations.\n* Add corresponding Java interface to cancel operations on Android.\n\n#### iOS/macOS\n\n* Builtin `WCTColumnCoding` supports all `id<NSCoding>` objects now.\n* Compatible with iOS 11.\n* `Fullfsync` is used by default for data integrity.\n* Add `-initWithExistingTag:` for `WCTDatabase` to get existing database without path.\n\n```objc\nWCTDatabase* database = [WCTDatabase [alloc] initWithPath:path];\ndatabase.tag = 123;\nWCTDatabase* withoutPath = [[WCTDatabase alloc] initWithExistingTag:123];\n```\n\n* Some minor bug fixes, performance improvement and code refactor.\n\n#### Android\n\n* Add asynchronous checkpointing support and custom checkpointing callback. This can\n  improve performance in WAL mode.\n\n```java\nSQLiteDatabase db = SQLiteDatabase.openOrCreateDatabaseInWalMode(...);\n\n// Use asynchronous checkpointing.\ndb.setAsyncCheckpointEnabled(true);\n\n// OR use custom checkpointer.\nSQLiteCheckpointListener callback = new SQLiteCheckpointListener() {\n    //...\n};\ndb.setCheckpointCallback(callback);\n```\n\n* Add `SQLiteTrace.onConnectionObtained(...)` interface to trace concurrency performance.\n* Add cancelable version of `SQLiteDatabase.execSQL()`. See `CancellationSignal` for details.\n\n```java\nCancellationSignal signal = new CancellationSignal();\ndb.execSQL(longRunningSQL, args, signal);\n\n// on another thread\nsignal.cancel();\n```\n\n* Enable `SQLITE_ENABLE_FTS3_PARENTHESIS` compilation option on SQLCipher, which enables `AND`, `OR` operators in FTS3/4.\n* Use `CancellationSignal` for canceling `BackupKit`, `RecoverKit` and `RepairKit` operations. See repair sample for details.\n* Add callback interface for `RepairKit` to show progress to the users. See `RepairKit.Callback` and `RepairKit.setCallback()`.\n* Do not load `libwcdb.so` if it's already loaded on the first use. This makes WCDB compatible to Tinker framework.\n* Various bug fixes.\n\n## v1.0.3\n\n#### Repair Kit\n\n* Fix INTEGER PRIMARY KEY columns not properly recovered.\n\n#### iOS/macOS\n\n* Add `WCTColumnCoding` support for all `WCTValue`. Developers can use `id<WCTColumnCoding>` objects for WINQ and all interfaces.\n```objc\n//WINQ\nNSDate *now = [NSDate date];\n[database getObjectsOfClass:Message.class fromTable:tableName where:Message.modifedTime==now];\n\n//Interfaces\n[database updateAllRowsInTable:tableName \n          onProperty:Message.modifiedTime \n            withValue:[NSDate date]];\n```\n* Add monitor for all executed SQL to check WINQ correctness.\n```objc\n//SQL Execution Monitor\n[WCTStatistics SetGlobalSQLTrace:^(NSString *sql) {\n  NSLog(@\"SQL: %@\", sql);\n}];\n```\n* Update `WCTTableCoding` XCode file template for the best practice of isolating Objective C++ codes. See Wiki page for details.\n* Some minor bug fixes.\n\n#### Android\n\n* Add `CursorWindow.windowSize(int)` static method to set or get default size for cursor windows.\n* `SQLiteDatabase.dump()` reports IDs for all threads that hold database connections, to aid dead-lock debugging.\n* Fix crashing on devices fail to load ICU library.\n* Fix `SQLiteTrace.onSQLExecuted(...)` reports negative execution time.\n\n## v1.0.2\n\n#### iOS/macOS\n\n* Performance optimization and benchmark. See Wiki page for details.\n* Change builtin `NSData` or `NSMutableData` column coding to raw data format. To be compatible with earlier versions, call `[WCTCompatible sharedCompatible].builtinNSDataColumnCodingCompatibleEnabled = YES`.\n* Add `attach`, `detach`, `vacuum`, `savepoiint`, `rollback`, `release`, `reindex`, `explain` statement and SQLCipher related pragma to WINQ.\n* Remove auto increment for `insertOrReplace`.\n* Rename `updateTable` to `updateRowsInTables`, and `statictics`(typo) to `statistics`.\n* Some minor bug fixes.\n\n#### Android\n\n* Performance optimization and benchmark. See Wiki page for details.\n* Expose ProGuard rules to AAR package. Fix crash when minify is enabled in gradle.\n\n## v1.0.1\n\n#### iOS/macOS\n\n* Add CocoaPods support.\n* Add iOS 7 and macOS 10.9 support. Apps using WCDB can target iOS 7 now.\n* Fix an issue that `[WCTDatabase canOpen]` never return YES.\n* Fix an issue that the global tracer return some odd values.\n* Add `@autoreleasepool` in `runTransaction` to avoid OOM.\n\n#### Android\n\n* Add `x86_64` ABI support.\n* Publish debug version of AAR and native symbols. To reference debug version of WCDB library, modify your `build.gradle`.\n\n```gradle\ndependencies {\n    // Append \":debug@aar\" to reference debug library.\n    compile 'com.tencent.wcdb:wcdb-android:1.0.1:debug@aar'\n}\n```\n\n* **Device-locking** is available in cipher options. Databases created with device-locking enabled can be only accessed in\n  the same device where the databases are created. Device-locking is currently **in alpha stage**. You can enable it with\n  the following code:\n\n```java\nSQLiteCipherSpec cipher = new SQLiteCipherSpec()\n        // add the following line to enable device-locking\n        .setCipher(SQLiteCipherSpec.CIPHER_DEVLOCK);\nSQLiteDatabase db = SQLiteDatabase.openOrCreateDatabase(path, key, cipher, ...);\n```\n\n* Various bug fixes.\n\n## v1.0.0\n\nInitial release.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.646484375,
          "content": "# Contributing to WCDB\nWelcome to [report issues](https://github.com/Tencent/wcdb/issues) or [pull requests](https://github.com/Tencent/wcdb/pulls). It's recommended to read the following Contributing\nGuide first before contributing. \n\n## Issues\nWe use Github Issues to track public bugs and feature requests.\n\n### Search Known Issues First\nPlease search the existing issues to see if any similar issue or feature request has already been filed. You should make sure your issue isn't redundant.\n\n### Reporting New Issues\nIf you open an issue, the more information the better. Such as detailed description, screenshot or video of your problem, logcat or code blocks for your crash.\n\n## Pull Requests\nWe strongly welcome your pull request to make WCDB better. \n\n### Branch Management\nThere are three main branches here:\n\n1. `master` branch.\n\t* It is the latest (pre-)release branch. We use `master` for tags, with version number `1.1.0`, `1.2.0`, `1.3.0`...\n\t* **Don't submit any PR on `master` branch.**\n2. `dev` branch. \n\t* It is our stable developing branch. After full testing, `dev` will be merged to `master` branch for the next release.\n\t* **You are recommended to submit bugfix or feature PR on `dev` branch.**\n3. `hotfix` branch. \n\t* It is the latest tag version for hot fix. If we accept your pull request, we may just tag with version number `1.1.1`, `1.2.3`.\n\t* **Only submit urgent PR on `hotfix` branch for next specific release.**\n\nNormal bugfix or feature request should be submitted to `dev` branch. After full testing, we will merge them to `master` branch for the next release. \n\nIf you have some urgent bugfixes on a published version, but the `master` branch have already far away with the latest tag version, you can submit a PR on hotfix. And it will be cherry picked to `dev` branch if it is possible.\n\n```\nmaster\n ↑\ndev        <--- hotfix PR\n ↑ \nfeature/bugfix PR\n```  \n\n### Make Pull Requests\nThe code team will monitor all pull request, we run some code check and test on it. After all tests passed, we will accept this PR. But it won't merge to `master` branch at once, which have some delay.\n\nBefore submitting a pull request, please make sure the followings are done:\n\n1. Fork the repo and create your branch from `master` or `hotfix`.\n2. Update code or documentation if you have changed APIs.\n3. Add the copyright notice to the top of any new files you've added.\n4. Check your code lints and checkstyles.\n5. Test and test again your code.\n6. Now, you can submit your pull request on `dev` or `hotfix` branch.\n\n## License\nBy contributing to WCDB, you agree that your contributions will be licensed\nunder its [BSD LICENSE](https://github.com/Tencent/wcdb/blob/master/LICENSE.txt)"
        },
        {
          "name": "ISSUE_TEMPLATE.md",
          "type": "blob",
          "size": 0.3857421875,
          "content": "### The language of WCDB\n\n> e.g. Objective-C, Swift or Java \n\n\n\n### The version of WCDB\n\n> e.g. v1.0.5\n\n\n\n### The platform of WCDB\n\n> e.g. iOS, macOS or Android\n\n\n\n### The installation of WCDB\n\n> e.g. Cocoapods, Carthage, Maven, AAR Package or Git clone\n\n\n\n### What's the issue?\n\n> Post the outputs or screenshots for errors.\n> \n> Explain what you want by example or code **in English**.\n\n\n\n\n\n\n\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 22.21875,
          "content": "Tencent is pleased to support the open source community by making WCDB available.  \n\nCopyright (C) 2017 THL A29 Limited, a Tencent company.  All rights reserved.\nIf you have downloaded a copy of the WCDB binary from Tencent, please note that \nthe WCDB binary is licensed under the BSD 3-Clause License.\n\nIf you have downloaded a copy of the WCDB source code from Tencent, please note \nthat WCDB source code is licensed under the BSD 3-Clause License, except for \nthe third-party components listed below which are subject to different license \nterms.  Your integration of WCDB into your own projects may require compliance \nwith the BSD 3-Clause License, as well as the other licenses applicable to the \nthird-party components included within WCDB.\n\nA copy of the BSD 3-Clause License is included in this file.\nOther dependencies and licenses:\n \nOpen Source Software Licensed Under the Apache License, Version 2.0: \nThe below software in this distribution may have been modified by THL A29 Limited \n(“Tencent Modifications”). \nAll Tencent Modifications are Copyright (C) 2017 THL A29 Limited.\n\n----------------------------------------------------------------------------------------\n1. Android Source Code  4.3\nCopyright (C) 2006-2011 The Android Open Source Project \n \n \nTerms of the Apache License, Version 2.0:\n---------------------------------------------------\nApache License\n\nVersion 2.0, January 2004\n\nhttp://www.apache.org/licenses/\n \nTERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n \n1. Definitions.\n \n“License” shall mean the terms and conditions for use, reproduction, and distribution\nas defined by Sections 1 through 9 of this document.\n \n“Licensor” shall mean the copyright owner or entity authorized by the copyright owner\nthat is granting the License.\n \n“Legal Entity” shall mean the union of the acting entity and all other entities that \ncontrol, are controlled by, or are under common control with that entity. For the \npurposes of this definition, “control” means (i) the power, direct or indirect, to \ncause the direction or management of such entity, whether by contract or otherwise, \nor (ii) ownership of fifty percent (50%) or more of the outstanding shares, or \n(iii) beneficial ownership of such entity.\n \n“You” (or “Your”) shall mean an individual or Legal Entity exercising permissions \ngranted by this License.\n \n“Source” form shall mean the preferred form for making modifications, including but \nnot limited to software source code, documentation source, and configuration files.\n \n“Object” form shall mean any form resulting from mechanical transformation or \ntranslation of a Source form, including but not limited to compiled object code, \ngenerated documentation, and conversions to other media types.\n \n“Work” shall mean the work of authorship, whether in Source or Object form, made \navailable under the License, as indicated by a copyright notice that is included \nin or attached to the work (an example is provided in the Appendix below).\n \n“Derivative Works” shall mean any work, whether in Source or Object form, that is \nbased on (or derived from) the Work and for which the editorial revisions, \nannotations, elaborations, or other modifications represent, as a whole, an \noriginal work of authorship. For the purposes of this License, Derivative Works \nshall not include works that remain separable from, or merely link (or bind by \nname) to the interfaces of, the Work and Derivative Works thereof.\n \n“Contribution” shall mean any work of authorship, including the original version \nof the Work and any modifications or additions to that Work or Derivative Works \nthereof, that is intentionally submitted to Licensor for inclusion in the Work \nby the copyright owner or by an individual or Legal Entity authorized to submit \non behalf of the copyright owner. For the purposes of this definition, “submitted” \nmeans any form of electronic, verbal, or written communication sent to the \nLicensor or its representatives, including but not limited to communication on \nelectronic mailing lists, source code control systems, and issue tracking systems \nthat are managed by, or on behalf of, the Licensor for the purpose of discussing \nand improving the Work, but excluding communication that is conspicuously marked \nor otherwise designated in writing by the copyright owner as “Not a Contribution.”\n \n“Contributor” shall mean Licensor and any individual or Legal Entity on behalf \nof whom a Contribution has been received by Licensor and subsequently \nincorporated within the Work.\n \n2. Grant of Copyright License. Subject to the terms and conditions of this License, \neach Contributor hereby grants to You a perpetual, worldwide, non-exclusive, \nno-charge, royalty-free, irrevocable copyright license to reproduce, prepare \nDerivative Works of, publicly display, publicly perform, sublicense, and distribute \nthe Work and such Derivative Works in Source or Object form.\n \n3. Grant of Patent License. Subject to the terms and conditions of this License, \neach Contributor hereby grants to You a perpetual, worldwide, non-exclusive, \nno-charge, royalty-free, irrevocable (except as stated in this section) patent \nlicense to make, have made, use, offer to sell, sell, import, and otherwise transfer \nthe Work, where such license applies only to those patent claims licensable by such \nContributor that are necessarily infringed by their Contribution(s) alone or by \ncombination of their Contribution(s) with the Work to which such Contribution(s) was \nsubmitted. If You institute patent litigation against any entity (including a \ncross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution \nincorporated within the Work constitutes direct or contributory patent infringement, \nthen any patent licenses granted to You under this License for that Work shall \nterminate as of the date such litigation is filed.\n \n4. Redistribution. You may reproduce and distribute copies of the Work or Derivative \nWorks thereof in any medium, with or without modifications, and in Source or Object \nform, provided that You meet the following conditions:\n \na) You must give any other recipients of the Work or Derivative Works a copy of this \nLicense; and\n \nb) You must cause any modified files to carry prominent notices stating that You \nchanged the files; and\n \nc) You must retain, in the Source form of any Derivative Works that You distribute, \nall copyright, patent, trademark, and attribution notices from the Source form of \nthe Work, excluding those notices that do not pertain to any part of the Derivative \nWorks; and\n \nd) If the Work includes a “NOTICE” text file as part of its distribution, then any \nDerivative Works that You distribute must include a readable copy of the attribution \nnotices contained within such NOTICE file, excluding those notices that do not pertain \nto any part of the Derivative Works, in at least one of the following places: within \na NOTICE text file distributed as part of the Derivative Works; within the Source \nform or documentation, if provided along with the Derivative Works; or, within a \ndisplay generated by the Derivative Works, if and wherever such third-party notices \nnormally appear. The contents of the NOTICE file are for informational purposes only \nand do not modify the License. You may add Your own attribution notices within \nDerivative Works that You distribute, alongside or as an addendum to the NOTICE text \nfrom the Work, provided that such additional attribution notices cannot be construed \nas modifying the License. \n \nYou may add Your own copyright statement to Your modifications and may provide \nadditional or different license terms and conditions for use, reproduction, or \ndistribution of Your modifications, or for any such Derivative Works as a whole, \nprovided Your use, reproduction, and distribution of the Work otherwise complies with \nthe conditions stated in this License. \n \n5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution \nintentionally submitted for inclusion in the Work by You to the Licensor shall be under \nthe terms and conditions of this License, without any additional terms or conditions. \nNotwithstanding the above, nothing herein shall supersede or modify the terms of any \nseparate license agreement you may have executed with Licensor regarding such \nContributions.\n \n6. Trademarks. This License does not grant permission to use the trade names, trademarks, \nservice marks, or product names of the Licensor, except as required for reasonable and \ncustomary use in describing the origin of the Work and reproducing the content of the \nNOTICE file.\n \n7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, \nLicensor provides the Work (and each Contributor provides its Contributions) on an \n“AS IS” BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, \nincluding, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, \nMERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for \ndetermining the appropriateness of using or redistributing the Work and assume any risks \nassociated with Your exercise of permissions under this License.\n \n8. Limitation of Liability. In no event and under no legal theory, whether in tort \n(including negligence), contract, or otherwise, unless required by applicable law (such \nas deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor \nbe liable to You for damages, including any direct, indirect, special, incidental, or \nconsequential damages of any character arising as a result of this License or out of the \nuse or inability to use the Work (including but not limited to damages for loss of \ngoodwill, work stoppage, computer failure or malfunction, or any and all other commercial \ndamages or losses), even if such Contributor has been advised of the possibility of such \ndamages.\n\n9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative \nWorks thereof, You may choose to offer, and charge a fee for, acceptance of support, \nwarranty, indemnity, or other liability obligations and/or rights consistent with this \nLicense. However, in accepting such obligations, You may act only on Your own behalf and \non Your sole responsibility, not on behalf of any other Contributor, and only if You agree \nto indemnify, defend, and hold each Contributor harmless for any liability incurred by, or \nclaims asserted against, such Contributor by reason of your accepting any such warranty or \nadditional liability.\n \nEND OF TERMS AND CONDITIONS\n \nAPPENDIX: How to apply the Apache License to your work\nTo apply the Apache License to your work, attach the following boilerplate notice, with the \nfields enclosed by brackets \"[]\" replaced with your own identifying information. (Don't \ninclude the brackets!) The text should be enclosed in the appropriate comment syntax for \nthe file format. We also recommend that a file or class name and description of purpose be \nincluded on the same \"printed page\" as the copyright notice for easier identification within \nthird-party archives.\n \nCopyright [yyyy] [name of copyright owner]\n \nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\nhttp://www.apache.org/licenses/LICENSE-2.0\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n \n \n \nOpen Source Software Licensed Under Public Domain: \nThe below software in this distribution may have been modified by THL A29 Limited \n(“Tencent Modifications”). \nAll Tencent Modifications are Copyright (C) 2017 THL A29 Limited.\n----------------------------------------------------------------------------------------\n1. SQLite  3.11.0\n \n \n \nOpen Source Software Licensed Under the OpenSSL License: \nThe below software in this distribution may have been modified by THL A29 Limited \n(“Tencent Modifications”). \nAll Tencent Modifications are Copyright (C) 2017 THL A29 Limited.\n----------------------------------------------------------------------------------------\n1. OpenSSL  1.0.2j\nCopyright (c) 1998-2016 The OpenSSL Project.\nAll rights reserved.\nCopyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)\nAll rights reserved.\n \n \n \nTerms of the OpenSSL License:\n---------------------------------------------------\nLICENSE ISSUES:\n--------------------------------------------------------------------\n \nThe OpenSSL toolkit stays under a dual license, i.e. both the conditions of the \nOpenSSL License and the original SSLeay license apply to the toolkit.\nSee below for the actual license texts.\n \nOpenSSL License:\n--------------------------------------------------------------------\nCopyright (c) 1998-2016 The OpenSSL Project.  All rights reserved.\n \nRedistribution and use in source and binary forms, with or without modification, \nare permitted provided that the following conditions are met:\n \n1. Redistributions of source code must retain the above copyright notice, this list \nof conditions and the following disclaimer.\n \n2. Redistributions in binary form must reproduce the above copyright notice, this \nlist of conditions and the following disclaimer in the documentation and/or other \nmaterials provided with the distribution.\n \n3. All advertising materials mentioning features or use of this software must \ndisplay the following acknowledgment:\n\"This product includes software developed by the OpenSSL Project for use in the \nOpenSSL Toolkit. (http://www.openssl.org/)\"\n \n4. The names \"OpenSSL Toolkit\" and \"OpenSSL Project\" must not be used to endorse or \npromote products derived from this software without prior written permission. For \nwritten permission, please contact openssl-core@openssl.org.\n \n5. Products derived from this software may not be called \"OpenSSL\" nor may \"OpenSSL\" \nappear in their names without prior written permission of the OpenSSL Project.\n \n6. Redistributions of any form whatsoever must retain the following acknowledgment: \n\"This product includes software developed by the OpenSSL Project for use in the \nOpenSSL Toolkit (http://www.openssl.org/)\"\n \nTHIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY EXPRESSED OR \nIMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF \nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT \nSHALL THE OpenSSL PROJECT OR ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, \nINCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT \nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR \nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, \nWHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) \nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE \nPOSSIBILITY OF SUCH DAMAGE. \n====================================================================\n* This product includes cryptographic software written by Eric Young (eay@cryptsoft.com).  \nThis product includes software written by Tim Hudson (tjh@cryptsoft.com).\n \n \nOriginal SSLeay License:\n--------------------------------------------------------------------\nCopyright (C) 1995-1998 Eric Young (eay@cryptsoft.com)\nAll rights reserved.\n \nThis package is an SSL implementation written by Eric Young (eay@cryptsoft.com).\nThe implementation was written so as to conform with Netscapes SSL.\n \nThis library is free for commercial and non-commercial use as long as the following \nconditions are aheared to. The following conditions apply to all code found in this \ndistribution, be it the RC4, RSA, lhash, DES, etc., code; not just the SSL code. \nThe SSL documentation included with this distribution is covered by the same copyright \nterms except that the holder is Tim Hudson (tjh@cryptsoft.com). \n \nCopyright remains Eric Young's, and as such any Copyright notices in the code are not \nto be removed.  If this package is used in a product, Eric Young should be given \nattribution as the author of the parts of the library used. This can be in the form \nof a textual message at program startup or in documentation (online or textual) \nprovided with the package. \n  \nRedistribution and use in source and binary forms, with or without modification, are \npermitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the copyright notice, this list of \nconditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice, this list \nof conditions and the following disclaimer in the documentation and/or other materials \nprovided with the distribution.\n\n3. All advertising materials mentioning features or use of this software must display \nthe following acknowledgement:\" This product includes cryptographic software written \nby Eric Young (eay@cryptsoft.com)\" The word 'cryptographic' can be left out if the \nrouines from the library being used are not cryptographic related :-).\n\n4. If you include any Windows specific code (or a derivative thereof) from the apps \ndirectory (application code) you must include an acknowledgement: \"This product includes \nsoftware written by Tim Hudson (tjh@cryptsoft.com)\"\n \nTHIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, \nINCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR \nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE \nLIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES \n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, \nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, \nWHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING \nIN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH \nDAMAGE. \n  \nThe licence and distribution terms for any publically available version or derivative of \nthis code cannot be changed.  i.e. this code cannot simply be copied and put under another \ndistribution licence [including the GNU Public Licence.]\n \n \n \nOpen Source Software Licensed Under the ICU License: \n----------------------------------------------------------------------------------------\n1. ICU4C  50.1\nCopyright (c) 1995-2012 International Business Machines Corporation and others\nAll rights reserved.\n \n \nTerms of the ICU License:\n--------------------------------------------------------------------\nICU License - ICU 1.8.1 and later\n \nCOPYRIGHT AND PERMISSION NOTICE\n \nCopyright (c) 1995-2012 International Business Machines Corporation and others\n \nAll rights reserved.\n \nPermission is hereby granted, free of charge, to any person obtaining a copy of \nthis software and associated documentation files (the \"Software\"), to deal in the \nSoftware without restriction, including without limitation the rights to use, copy, \nmodify, merge, publish, distribute, and/or sell copies of the Software, and to permit \npersons to whom the Software is furnished to do so, provided that the above copyright \nnotice(s) and this permission notice appear in all copies of the Software and that both \nthe above copyright notice(s) and this permission notice appear in supporting \ndocumentation.\n \nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, \nINCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR \nPURPOSE AND NONINFRINGEMENT OF THIRD PARTY RIGHTS. IN NO EVENT SHALL THE COPYRIGHT HOLDER \nOR HOLDERS INCLUDED IN THIS NOTICE BE LIABLE FOR ANY CLAIM, OR ANY SPECIAL INDIRECT OR \nCONSEQUENTIAL DAMAGES, OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR \nPROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING \nOUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n \nExcept as contained in this notice, the name of a copyright holder shall not be used in \nadvertising or otherwise to promote the sale, use or other dealings in this Software \nwithout prior written authorization of the copyright holder.\n \nAll trademarks and registered trademarks mentioned herein are the property of their \nrespective owners.\n \n \nOpen Source Software Licensed Under the BSD 3-Clause License: \nThe below software in this distribution may have been modified by THL A29 Limited \n(“Tencent Modifications”). \nAll Tencent Modifications are Copyright (C) 2017 THL A29 Limited.\n----------------------------------------------------------------------------------------\n1. SQLCipher  3.4.0\nCopyright (c) 2008, ZETETIC LLC\nAll rights reserved.\n \n \n \nTerms of the BSD 3-Clause License:\n--------------------------------------------------------------------\n \nRedistribution and use in source and binary forms, with or without modification, \nare permitted provided that the following conditions are met:\n\nl  Redistributions of source code must retain the above copyright notice, this list \nof conditions and the following disclaimer.\n\nl  Redistributions in binary form must reproduce the above copyright notice, this \nlist of conditions and the following disclaimer in the documentation and/or other \nmaterials provided with the distribution.\n\nl  Neither the name of [copyright holder] nor the names of its contributors may be \nused to endorse or promote products derived from this software without specific \nprior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" \nAND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED \nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. \nIN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, \nINDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT \nNOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR \nPROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, \nWHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) \nARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE \nPOSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "Package.swift",
          "type": "blob",
          "size": 12.1826171875,
          "content": "// swift-tools-version: 5.5\n// The swift-tools-version declares the minimum version of Swift required to build this package.\n\nimport PackageDescription\n\nlet package = Package(\n    name: \"WCDBSwift\",\n    platforms: [\n        .macOS(.v10_13),\n        .watchOS(.v4),\n        .tvOS(.v12),\n        .iOS(.v12)],\n    products: [\n        .library(name: \"WCDBSwift\", targets: [\"WCDBSwift\"]),\n        .library(name: \"WCDBSwiftDynamic\", type: .dynamic, targets: [\"WCDBSwift\"]),\n    ],\n    dependencies: [\n        .package(url: \"https://github.com/Tencent/sqlcipher\", .exactItem(\"1.4.6\"))\n    ],\n    targets: [\n        .target(\n            name: \"objc-core\",\n            path: \"src/objc/core\",\n            sources: [\"WCTFileManager.mm\", \"WCTFoundation.mm\", \"WCTFTSTokenizerUtil.mm\", \"WCTOperationQueue.mm\"],\n            publicHeadersPath:\"\",\n            cSettings: [\n//                .headerSearchPath(\"../../**\"),\n                .headerSearchPath(\"../../bridge\"),\n                .headerSearchPath(\"../../objc\"),\n                .headerSearchPath(\"../../bridge/objcbridge\"),\n                .headerSearchPath(\"../../bridge/cppbridge\"),\n                .headerSearchPath(\"../../bridge/winqbridge\"),\n                .headerSearchPath(\"../../bridge/base\"),\n                .headerSearchPath(\"../../bridge/winqbridge/statement\"),\n                .headerSearchPath(\"../../bridge/winqbridge/identifier\"),\n                .headerSearchPath(\"../../common/core\"),\n                .headerSearchPath(\"../../common/platform\"),\n                .headerSearchPath(\"../../common/winq\"),\n                .headerSearchPath(\"../../common/repair\"),\n                .headerSearchPath(\"../../common/base\"),\n                .headerSearchPath(\"../../common/utility\"),\n                .headerSearchPath(\"../../common/core/config\"),\n                .headerSearchPath(\"../../common/core/assemble\"),\n                .headerSearchPath(\"../../common/core/vacuum\"),\n                .headerSearchPath(\"../../common/core/cipher\"),\n                .headerSearchPath(\"../../common/core/sqlite\"),\n                .headerSearchPath(\"../../common/core/function\"),\n                .headerSearchPath(\"../../common/core/fts\"),\n                .headerSearchPath(\"../../common/core/operate\"),\n                .headerSearchPath(\"../../common/core/compression\"),\n                .headerSearchPath(\"../../common/core/integrity\"),\n                .headerSearchPath(\"../../common/core/migration\"),\n                .headerSearchPath(\"../../common/core/function/scalar\"),\n                .headerSearchPath(\"../../common/core/fts/auxfunction\"),\n                .headerSearchPath(\"../../common/core/fts/tokenizer\"),\n                .headerSearchPath(\"../../common/winq/extension\"),\n                .headerSearchPath(\"../../common/winq/statement\"),\n                .headerSearchPath(\"../../common/winq/identifier\"),\n                .headerSearchPath(\"../../common/winq/syntax\"),\n                .headerSearchPath(\"../../common/winq/syntax/stmt\"),\n                .headerSearchPath(\"../../common/winq/syntax/const\"),\n                .headerSearchPath(\"../../common/winq/syntax/identifier\"),\n                .headerSearchPath(\"../../common/repair/mechanic\"),\n                .headerSearchPath(\"../../common/repair/parse\"),\n                .headerSearchPath(\"../../common/repair/basic\"),\n                .headerSearchPath(\"../../common/repair/sqlite\"),\n                .headerSearchPath(\"../../common/repair/crawl\"),\n                .headerSearchPath(\"../../common/repair/factory\"),\n                .headerSearchPath(\"../../common/repair/utility\"),\n                .headerSearchPath(\"../../objc/transaction\"),\n                .headerSearchPath(\"../../objc/database\"),\n                .headerSearchPath(\"../../objc/monitor\"),\n                .headerSearchPath(\"../../objc/core\"),\n                .headerSearchPath(\"../../objc/handle\"),\n                .headerSearchPath(\"../../objc/bridge\"),\n                .headerSearchPath(\"../../objc/statement\"),\n                .headerSearchPath(\"../../objc/fts\"),\n                .headerSearchPath(\"../../objc/chaincall\"),\n                .headerSearchPath(\"../../objc/table\"),\n                .headerSearchPath(\"../../objc/compression\"),\n                .headerSearchPath(\"../../objc/orm\"),\n                .headerSearchPath(\"../../objc/convenient\"),\n                .headerSearchPath(\"../../objc/migration\"),\n                .headerSearchPath(\"../../objc/builtin\"),\n                .headerSearchPath(\"../../objc/orm/accessor\"),\n                .headerSearchPath(\"../../objc/orm/binding\"),\n                .headerSearchPath(\"../../objc/orm/macro\"),\n                .headerSearchPath(\"../../objc/orm/coding\")\n            ],\n            linkerSettings: [\n                .linkedFramework(\"UIKit\", .when(platforms: [.iOS])),\n            ]\n        ),\n        .target(\n            name: \"common\",\n            dependencies: [\"sqlcipher\", .target(name: \"objc-core\")],\n            path: \"src/common\",\n            exclude: [\n                \"repair/sqlite\",\n                \"platform/WCTFileManager.cpp\",\n                \"platform/WCTOperationQueue.cpp\",\n            ],\n            publicHeadersPath:\"\",\n            cSettings: [\n                .define(\"SQLITE_WCDB\", to: \"1\"),\n                .define(\"SQLITE_WCDB_LOCK_HOOK\", to: \"1\"),\n                .define(\"SQLITE_WCDB_CHECKPOINT_HANDLER\", to: \"1\"),\n                .define(\"SQLITE_WCDB_SUSPEND\", to: \"1\"),\n                .define(\"SQLITE_WCDB_IMPROVED_CHECKPOINT\", to: \"1\"),\n                .define(\"SQLITE_HAS_CODEC\"),\n                .define(\"SQLITE_DEFAULT_PAGE_SIZE\", to: \"4096\"),\n                .define(\"SQLITE_DEFAULT_SYNCHRONOUS\", to: \"1\"),\n                .define(\"SQLITE_DEFAULT_WAL_SYNCHRONOUS\", to: \"1\"),\n                .define(\"SQLITE_DEFAULT_LOCKING_MODE\", to: \"0\"),\n                .define(\"SQLITE_DEFAULT_WAL_AUTOCHECKPOINT\", to: \"0\"),\n//                .headerSearchPath(\"**\")\n                .headerSearchPath(\"core\"),\n                .headerSearchPath(\"platform\"),\n                .headerSearchPath(\"winq\"),\n                .headerSearchPath(\"repair\"),\n                .headerSearchPath(\"base\"),\n                .headerSearchPath(\"utility\"),\n                .headerSearchPath(\"core/config\"),\n                .headerSearchPath(\"core/assemble\"),\n                .headerSearchPath(\"core/vacuum\"),\n                .headerSearchPath(\"core/cipher\"),\n                .headerSearchPath(\"core/sqlite\"),\n                .headerSearchPath(\"core/function\"),\n                .headerSearchPath(\"core/fts\"),\n                .headerSearchPath(\"core/operate\"),\n                .headerSearchPath(\"core/compression\"),\n                .headerSearchPath(\"core/integrity\"),\n                .headerSearchPath(\"core/migration\"),\n                .headerSearchPath(\"core/function/scalar\"),\n                .headerSearchPath(\"core/fts/auxfunction\"),\n                .headerSearchPath(\"core/fts/tokenizer\"),\n                .headerSearchPath(\"winq/extension\"),\n                .headerSearchPath(\"winq/statement\"),\n                .headerSearchPath(\"winq/identifier\"),\n                .headerSearchPath(\"winq/syntax\"),\n                .headerSearchPath(\"winq/syntax/stmt\"),\n                .headerSearchPath(\"winq/syntax/const\"),\n                .headerSearchPath(\"winq/syntax/identifier\"),\n                .headerSearchPath(\"repair/mechanic\"),\n                .headerSearchPath(\"repair/parse\"),\n                .headerSearchPath(\"repair/basic\"),\n                .headerSearchPath(\"repair/sqlite\"),\n                .headerSearchPath(\"repair/crawl\"),\n                .headerSearchPath(\"repair/factory\"),\n                .headerSearchPath(\"repair/utility\")\n            ],\n            linkerSettings: [\n                .linkedLibrary(\"z\"),\n            ]\n        ),\n        .target(\n            name: \"bridge\",\n            dependencies: [.target(name: \"common\")],\n            path: \"src/bridge\",\n            exclude: [\n                \"tests\",\n            ],\n            cSettings: [\n//                .headerSearchPath(\"../**\")\n                .headerSearchPath(\"../bridge\"),\n                .headerSearchPath(\"../objc\"),\n                .headerSearchPath(\"../bridge/objcbridge\"),\n                .headerSearchPath(\"../bridge/cppbridge\"),\n                .headerSearchPath(\"../bridge/winqbridge\"),\n                .headerSearchPath(\"../bridge/base\"),\n                .headerSearchPath(\"../bridge/winqbridge/statement\"),\n                .headerSearchPath(\"../bridge/winqbridge/identifier\"),\n                .headerSearchPath(\"../common/core\"),\n                .headerSearchPath(\"../common/platform\"),\n                .headerSearchPath(\"../common/winq\"),\n                .headerSearchPath(\"../common/repair\"),\n                .headerSearchPath(\"../common/base\"),\n                .headerSearchPath(\"../common/utility\"),\n                .headerSearchPath(\"../common/core/config\"),\n                .headerSearchPath(\"../common/core/assemble\"),\n                .headerSearchPath(\"../common/core/vacuum\"),\n                .headerSearchPath(\"../common/core/cipher\"),\n                .headerSearchPath(\"../common/core/sqlite\"),\n                .headerSearchPath(\"../common/core/function\"),\n                .headerSearchPath(\"../common/core/fts\"),\n                .headerSearchPath(\"../common/core/operate\"),\n                .headerSearchPath(\"../common/core/compression\"),\n                .headerSearchPath(\"../common/core/integrity\"),\n                .headerSearchPath(\"../common/core/migration\"),\n                .headerSearchPath(\"../common/core/function/scalar\"),\n                .headerSearchPath(\"../common/core/fts/auxfunction\"),\n                .headerSearchPath(\"../common/core/fts/tokenizer\"),\n                .headerSearchPath(\"../common/winq/extension\"),\n                .headerSearchPath(\"../common/winq/statement\"),\n                .headerSearchPath(\"../common/winq/identifier\"),\n                .headerSearchPath(\"../common/winq/syntax\"),\n                .headerSearchPath(\"../common/winq/syntax/stmt\"),\n                .headerSearchPath(\"../common/winq/syntax/const\"),\n                .headerSearchPath(\"../common/winq/syntax/identifier\"),\n                .headerSearchPath(\"../common/repair/mechanic\"),\n                .headerSearchPath(\"../common/repair/parse\"),\n                .headerSearchPath(\"../common/repair/basic\"),\n                .headerSearchPath(\"../common/repair/sqlite\"),\n                .headerSearchPath(\"../common/repair/crawl\"),\n                .headerSearchPath(\"../common/repair/factory\"),\n                .headerSearchPath(\"../common/repair/utility\"),\n                .headerSearchPath(\"../objc/transaction\"),\n                .headerSearchPath(\"../objc/database\"),\n                .headerSearchPath(\"../objc/monitor\"),\n                .headerSearchPath(\"../objc/core\"),\n                .headerSearchPath(\"../objc/handle\"),\n                .headerSearchPath(\"../objc/bridge\"),\n                .headerSearchPath(\"../objc/statement\"),\n                .headerSearchPath(\"../objc/fts\"),\n                .headerSearchPath(\"../objc/chaincall\"),\n                .headerSearchPath(\"../objc/table\"),\n                .headerSearchPath(\"../objc/compression\"),\n                .headerSearchPath(\"../objc/orm\"),\n                .headerSearchPath(\"../objc/convenient\"),\n                .headerSearchPath(\"../objc/migration\"),\n                .headerSearchPath(\"../objc/builtin\"),\n                .headerSearchPath(\"../objc/orm/accessor\"),\n                .headerSearchPath(\"../objc/orm/binding\"),\n                .headerSearchPath(\"../objc/orm/macro\"),\n                .headerSearchPath(\"../objc/orm/coding\")\n            ]\n        ),\n        .target(\n            name: \"WCDBSwift\",\n            dependencies: [.target(name: \"bridge\")],\n            path: \"src/swift\",\n            exclude: [\n                \"tests\"\n            ],\n            publicHeadersPath: \".\",\n            cSettings: [\n//                .headerSearchPath(\"../bridge/**\")\n                .headerSearchPath(\"../bridge\"),\n                .headerSearchPath(\"../bridge/objcbridge\"),\n                .headerSearchPath(\"../bridge/cppbridge\"),\n                .headerSearchPath(\"../bridge/winqbridge\"),\n                .headerSearchPath(\"../bridge/base\"),\n                .headerSearchPath(\"../bridge/winqbridge/statement\"),\n                .headerSearchPath(\"../bridge/winqbridge/identifier\")\n            ]\n        )\n    ],\n    cLanguageStandard: .c11,\n    cxxLanguageStandard: .cxx14\n)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.05078125,
          "content": "# WCDB\n\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg)](https://github.com/Tencent/wcdb/pulls)\n[![Release Version](https://img.shields.io/badge/Release-2.1.9-brightgreen.svg)](https://github.com/Tencent/wcdb/releases)\n[![Language](https://img.shields.io/badge/Language-%20C++%20%7C%20Java%20%7C%20Kotlin%20%7C%20Swift%20%7C%20Objc-brightgreen.svg)](https://github.com/Tencent/wcdb/wiki)[![Platform](https://img.shields.io/badge/Platform-%20iOS%20%7C%20macOS%20%7C%20Android%20%7C%20Windows%20%7C%20Linux%20%7C%20OpenHarmony-brightgreen.svg)](https://github.com/Tencent/wcdb/wiki)\n\n中文版本请参看[这里][wcdb-wiki]\n\nWCDB is an **efficient**, **complete**, **easy-to-use** mobile database framework used in the WeChat application. It's based on SQLite and SQLCipher, and supports five languages: C++, Java, Kotlin, Swift and Objective-C.\n\n# Feature\n\n## **Easy-to-use**\n\n* **ORM** (Object Relational Mapping): WCDB provides a flexible, easy-to-use ORM for creating tables, indices and constraints, as well as CRUD through C++/Java/Kotlin/Swift/Objc objects.\n* **WINQ** (WCDB language integrated query): WINQ is a native data querying capability which frees developers from writing glue code to concatenate SQL query strings.\n\nWith ORM and WINQ, you can insert, update, query and delete objects from database in one line code: \n\n```c++\n// C++\ndatabase.insertObjects<Sample>(Sample(1, \"text\"), myTable);\ndatabase.updateRow(\"text2\", WCDB_FIELD(Sample::content), myTable, WCDB_FIELD(Sample::id) == 1);\nauto objects = database.getAllObjects<Sample>(myTable, WCDB_FIELD(Sample::id) > 0);\ndatabase.deleteObjects(myTable, WCDB_FIELD(Sample::id) == 1);\n```\n\n```java\n// Java\ndatabase.insertObject(new Sample(1, \"text\"), DBSample.allFields(), myTable);\ndatabase.updateValue(\"text2\", DBSample.content, myTable, DBSample.id.eq(1));\nList<Sample> objects = database.getAllObjects(DBSample.allFields(), myTable, DBSample.id.gt(0));\ndatabase.deleteObjects(myTable, DBSample.id.eq(1));\n```\n\n```kotlin\n// Kotlin\ndatabase.insertObject<Sample>(Sample(1, \"text\"), DBSample.allFields(), myTable)\ndatabase.updateValue(\"text2\", DBSample.content, myTable, DBSample.id.eq(1))\nval objects = database.getAllObjects<Sample>(DBSample.allFields(), myTable, DBSample.id.gt(0))\ndatabase.deleteObjects(myTable, DBSample.id.eq(1))\n```\n\n```swift\n// Swift\ntry database.insert(Sample(id:1, content:\"text\"), intoTable: myTable)\ntry database.update(table: myTable,\n                    on: Sample.Properties.content,\n                    with: \"text2\"\n                    where:Sample.Properties.id == 1)\nlet objects: [Sample] = try database.getObjects(fromTable: myTable,\n                                                where: Sample.Properties.id > 0)\ntry database.delete(fromTable: myTable where: Sample.Properties.id == 1)\n```\n\n```objective-c\n// Objc\n[database insertObject:sample intoTable:myTable];\n[database updateTable:myTable\n          setProperty:Sample.content\n              toValue:@\"text2\"\n                where:Sample.id == 1];\nNSArray* objects = [database getObjectsOfClass:Sample.class\n                                     fromTable:myTable\n                                         where:Sample.id > 0];\n[database deleteFromTable:myTable where:Sample.id == 1];\n```\n\n## **Efficient**\n\nThrough the framework layer and sqlcipher source optimization, WCDB have more efficient performance.\n\n* **Multi-threaded concurrency**: WCDB supports concurrent read-read and read-write access via connection pooling.\n* **Deeply optimized**: WCDB has deeply optimized the source code and configuration of SQLite to adapt to the development scenarios of mobile terminals. At the same time, WCDB has also been optimized for common time-consuming scenarios, such as writing data in batches.\n\n## **Complete**\n\nWCDB summarizes common problems in practice to provide a more complete development experience for database development:\n\n* **Encryption Support**: WCDB supports database encryption via [SQLCipher][sqlcipher].\n* **Corruption recovery**: WCDB provides a built-in repair kit for database corruption recovery.\n* **Anti-injection**: WCDB provides a built-in protection from SQL injection.\n* **Database model upgrade**: The database model is bound to the class definition, so that the addition, deletion and modification of database fields are consistent with the definition of class variables.\n* **Full-text search**: WCDB provides an easy-to-use full-text search interface and includes tokenizers for multiple languages.\n* **Data Migration**: WCDB supports to migrate data from one databasse to another with simple configuration. And developers don't need to care about the intermediate status and progress of the migration.\n* **Data Compression**: WCDB supports to compress content via [Zstd][Zstd] within specific fields of a database table through a simple configuration. Once configured, the details of data compression and decompression become transparent to developers, and WCDB can automatically compress existing data.\n\n## **Compatibility**\n\nWCDB has interfaces in five languages: C++, Java, Kotlin, Swift, and Objc. Interfaces in different languages share the same underlying logic. The code structure of WCDB is shown in the figure below:\n\n<div align=center><img style=\"display:inline-block\" src=\"https://raw.githubusercontent.com/wiki/Tencent/wcdb/assets/common/CodeStructure-English.png\" width = 600/></div>\n\nUnder such architecture, WCDB in different languages can have the same interface structure and interface capabilities. In one project, you can write database code in different languages with one WCDB. Database logic in different languages will not conflict. Some global interfaces such as error monitoring can work on database logic in different languages at the same time. \n\n# Build and Install\n\nFollowing wikies contain the detailed instructions about building and installing of WCDB.\n\n* [Building and Installing of WCDB C++][wcdb-cpp-build-and-install]\n* [Building and Installing of WCDB Java/Kotlin][wcdb-java-build-and-install]\n* [Building and Installing of WCDB Swift][wcdb-swift-build-and-install]\n* [Building and Installing of WCDB Objc][wcdb-objc-build-and-install]\n\n# Tutorials\n\nTutorials of different languages can be found below:\n\n* [Tutorials for WCDB C++][wcdb-cpp-tutorials]\n* [Tutorials for WCDB Java/Kotlin][wcdb-java-tutorials]\n* [Tutorials for WCDB Swift][wcdb-swift-tutorials]\n* [Tutorials for WCDB Objc][wcdb-objc-tutorials]\n\n# Contributing\n\nIf you are interested in contributing, check out the [CONTRIBUTING.md], also join our [Tencent OpenSource Plan](https://opensource.tencent.com/contribution).\n\n# 信息公示\n\n* 开发者: 深圳市腾讯计算机系统有限公司\n\n* [WCDB 个人信息保护规则][wcdb-privacy]\n\n[wcdb-wiki]: https://github.com/Tencent/wcdb/wiki\n[wcdb-docs-android]: https://tencent.github.io/wcdb/references/android/index.html\n[sqlcipher]:https://www.zetetic.net/sqlcipher/\n[Zstd]:https://github.com/facebook/zstd\n[room]: https://developer.android.com/topic/libraries/architecture/room\n[room-codelabs]: https://codelabs.developers.google.com/codelabs/android-room-with-a-view\n[wcdb-cpp-build-and-install]: https://github.com/Tencent/wcdb/wiki/C++-%E5%AE%89%E8%A3%85%E4%B8%8E%E5%85%BC%E5%AE%B9%E6%80%A7\n[wcdb-java-build-and-install]:https://github.com/Tencent/wcdb/wiki/Java%7CKotlin-%e5%ae%89%e8%a3%85%e4%b8%8e%e5%85%bc%e5%ae%b9%e6%80%a7\n[wcdb-objc-build-and-install]:https://github.com/Tencent/wcdb/wiki/Objc-%E5%AE%89%E8%A3%85%E4%B8%8E%E5%85%BC%E5%AE%B9%E6%80%A7\n[wcdb-swift-build-and-install]: https://github.com/Tencent/wcdb/wiki/Swift-%E5%AE%89%E8%A3%85%E4%B8%8E%E5%85%BC%E5%AE%B9%E6%80%A7\n[wcdb-cpp-tutorials]:https://github.com/Tencent/wcdb/wiki/C++-%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8\n[wcdb-java-tutorials]:https://github.com/Tencent/wcdb/wiki/Java%7CKotlin-%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8\n[wcdb-swift-tutorials]:https://github.com/Tencent/wcdb/wiki/Swift-%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8\n[wcdb-objc-tutorials]:https://github.com/Tencent/wcdb/wiki/Objc-%E5%BF%AB%E9%80%9F%E5%85%A5%E9%97%A8\n[Benchmark-iOS]: https://github.com/Tencent/wcdb/wiki/WCDB-iOS-benchmark\n[wcdb-privacy]: https://support.weixin.qq.com/cgi-bin/mmsupportacctnodeweb-bin/pages/GepveGs4q4eAgpoh\n\n"
        },
        {
          "name": "VERSION",
          "type": "blob",
          "size": 0.0048828125,
          "content": "2.1.9"
        },
        {
          "name": "WCDB.cpp.podspec",
          "type": "blob",
          "size": 4.388671875,
          "content": "# pod repo update\n# pod repo remove trunk\n# pod lib lint --verbose --skip-import-validation --allow-warnings WCDB.cpp.podspec --sources='https://github.com/CocoaPods/Specs.git'\n# pod trunk push WCDB.cpp.podspec --verbose --skip-import-validation --allow-warnings\nPod::Spec.new do |wcdb|\n  wcdb.name         = \"WCDB.cpp\"\n  wcdb.version      = \"2.1.9\"\n  wcdb.summary      = \"WCDB is a cross-platform database framework developed by WeChat.\"\n  wcdb.description  = <<-DESC\n                      The WeChat Database, for C++. (If you want to use WCDB for Swift or Objective-C, see the \"WCDB.swift\" pod or \"WCDB.objc\" pod. If you want to use WCDB for C++/Objc/Swift in one project, see the \"WCDB\" pod)\n\n                      WCDB is an efficient, complete, easy-to-use mobile database framework used in the WeChat application.\n                      It can be a replacement for Core Data, SQLite & FMDB.\n                      DESC\n  wcdb.homepage     = \"https://github.com/Tencent/wcdb\"\n  wcdb.license      = { :type => \"BSD\", :file => \"LICENSE\" }\n  wcdb.author       = { \"Qiuwen-Chen\" => \"qwchen2008@163.com\" }\n  wcdb.module_name  = \"WCDBCpp\"\n  wcdb.ios.deployment_target = \"11.0\"\n  wcdb.osx.deployment_target = \"10.13\"\n  wcdb.watchos.deployment_target = \"6.0\"\n  wcdb.tvos.deployment_target = \"12.4\"\n  wcdb.source       = { :git => \"https://github.com/Tencent/wcdb.git\", :tag => \"v#{wcdb.version}\" }\n  wcdb.public_header_files = [\n  \t\"src/cpp/WCDBCpp.h\",\n\t\"src/cpp/**/*.{h,hpp}\",\n\t\"src/common/winq/*.{h,hpp}\",\n\t\"src/common/winq/**/*.{h,hpp}\",\n\t\"src/common/platform/SysTypes.h\",\n\t\"src/common/utility/Shadow.hpp\",\n\t\"src/common/utility/Macro.h\",\n\t\"src/common/utility/CaseInsensitiveList.hpp\",\n\t\"src/common/core/function/scalar/ScalarFunctionModule.hpp\",\n  \"src/common/core/function/scalar/ScalarFunctionTemplate.hpp\", \n\t\"src/common/core/fts/FTSConst.h\",\n\t\"src/common/core/fts/tokenizer/TokenizerModule.hpp\",\n\t\"src/common/core/fts/tokenizer/TokenizerModuleTemplate.hpp\",\n\t\"src/common/core/fts/tokenizer/BaseTokenizerUtil.hpp\",\n\t\"src/common/core/fts/tokenizer/PinyinTokenizer.hpp\",\n\t\"src/common/core/fts/tokenizer/OneOrBinaryTokenizer.hpp\",\n\t\"src/common/core/fts/auxfunction/FTS5AuxiliaryFunctionTemplate.hpp\",\n\t\"src/common/core/fts/auxfunction/AuxiliaryFunctionModule.hpp\",\n\t\"src/common/core/fts/auxfunction/SubstringMatchInfo.hpp\",\n\t\"src/common/core/fts/FTSError.hpp\",\n\t\"src/common/core/RecyclableHandle.hpp\",\n\t\"src/common/core/Tag.hpp\",\n\t\"src/common/base/Recyclable.hpp\",\n\t\"src/common/base/SharedThreadedErrorProne.hpp\",\n\t\"src/common/base/StringView.hpp\",\n\t\"src/common/base/WCDBOptional.hpp\",\n\t\"src/common/base/WCDBError.hpp\",\n\t\"src/common/base/Data.hpp\",\n\t\"src/common/base/UnsafeData.hpp\",\n\t\"src/common/base/MemberPointer.hpp\" \n  ]\n  wcdb.source_files  = [\n  \t\"src/common/**/*.{h,hpp,c,cpp}\",\n\t\"src/cpp/**/*.{h,hpp,c,cpp}\",\n\t\"src/objc/core/WCTFileManager.mm\",\n  \"src/objc/core/WCTOperationQueue.mm\",\n\t\"src/objc/core/WCTFoundation.h\",\n\t\"src/objc/core/WCTFoundation.mm\"\n  ]\n  wcdb.exclude_files = [\n  \t\"src/cpp/tests/**/*.{h,hpp,c,cpp}\",\n  \t\"src/common/platform/WCTFileManager.cpp\",\n  \t\"src/common/platform/WCTOperationQueue.cpp\",\n  ]\n  wcdb.frameworks = \"CoreFoundation\", \"Security\", \"Foundation\"\n  wcdb.ios.frameworks = \"UIKit\"\n  wcdb.libraries = \"z\", \"c++\"\n  wcdb.requires_arc = true\n  wcdb.pod_target_xcconfig = { \n    \"GCC_PREPROCESSOR_DEFINITIONS\" =>   \"SQLITE_WCDB=1 \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_WCDB_LOCK_HOOK=1 \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_WCDB_CHECKPOINT_HANDLER=1 \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_WCDB_SUSPEND=1 \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_WCDB_IMPROVED_CHECKPOINT=1 \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_HAS_CODEC \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_DEFAULT_PAGE_SIZE=4096 \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_DEFAULT_SYNCHRONOUS=1 \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_DEFAULT_WAL_SYNCHRONOUS=1 \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_DEFAULT_LOCKING_MODE=0 \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_DEFAULT_WAL_AUTOCHECKPOINT=0\",\n    \"HEADER_SEARCH_PATHS\" => \"${PODS_ROOT}/WCDB\",\n    \"LIBRARY_SEARCH_PATHS[sdk=macosx*]\" => \"$(SDKROOT)/usr/lib/system\",\n    \"CLANG_CXX_LANGUAGE_STANDARD\" => \"gnu++14\",\n    \"CLANG_CXX_LIBRARY\" => \"libc++\",\n    \"GCC_C_LANGUAGE_STANDARD\" => \"gnu11\",\n    \"VALID_ARCHS\" => \"arm64e arm64 x86_64\",\n    \"VALID_ARCHS[sdk=watchos*]\" => \"arm64_32 arm64 x86_64\",\n    \"OTHER_CFLAGS\" => \"-fvisibility-inlines-hidden\",\n    \"OTHER_CPLUSPLUSFLAGS\" => \"-fvisibility-inlines-hidden\",\n  }\n  wcdb.user_target_xcconfig = { \n    \"VALID_ARCHS\" => \"arm64e arm64 x86_64\",\n    \"VALID_ARCHS[sdk=watchos*]\" => \"arm64_32 armv7k\",\n  }\n  wcdb.header_dir = \"WCDB\"\n  wcdb.dependency 'WCDBOptimizedSQLCipher', '1.4.6'\nend\n"
        },
        {
          "name": "WCDB.objc.podspec",
          "type": "blob",
          "size": 5.666015625,
          "content": "# pod repo update\n# pod repo remove trunk\n# pod lib lint --verbose --skip-import-validation --allow-warnings WCDB.objc.podspec --sources='https://github.com/CocoaPods/Specs.git'\n# pod trunk push WCDB.objc.podspec --verbose --skip-import-validation --allow-warnings\nPod::Spec.new do |wcdb|\n  wcdb.name         = \"WCDB.objc\"\n  wcdb.version      = \"2.1.9\"\n  wcdb.summary      = \"WCDB is a cross-platform database framework developed by WeChat.\"\n  wcdb.description  = <<-DESC\n                      The WeChat Database, for Objective-C. (If you want to use WCDB for Swift or C++, see the \"WCDB.swift\" pod or \"WCDB.cpp\" pod. If you want to use WCDB for C++/Objc/Swift in one project, see the \"WCDB\" pod)\n\n                      WCDB is an efficient, complete, easy-to-use mobile database framework used in the WeChat application.\n                      It can be a replacement for Core Data, SQLite & FMDB.\n                      DESC\n  wcdb.homepage     = \"https://github.com/Tencent/wcdb\"\n  wcdb.license      = { :type => \"BSD\", :file => \"LICENSE\" }\n  wcdb.author       = { \"Qiuwen-Chen\" => \"qwchen2008@163.com\" }\n  wcdb.module_name  = \"WCDBObjc\"\n  wcdb.ios.deployment_target = \"11.0\"\n  wcdb.osx.deployment_target = \"10.13\"\n  wcdb.watchos.deployment_target = \"7.0\"\n  wcdb.tvos.deployment_target = \"12.4\"\n  wcdb.source       = { :git => \"https://github.com/Tencent/wcdb.git\", :tag => \"v#{wcdb.version}\" }\n  wcdb.public_header_files = [\n  \t\"src/objc/WCDBObjc.h\", \n\t\"src/objc/Interface.h\", \n\t\"src/objc/core/*.{h,hpp}\", \n\t\"src/objc/builtin/*.{h,hpp}\", \n\t\"src/objc/statement/WCTPreparedStatement.h\", \n\t\"src/objc/migration/WCTDatabase+Migration.h\", \n\t\"src/objc/migration/WCTMigrationInfo.h\", \n\t\"src/objc/compression/WCTDatabase+Compression.h\", \n\t\"src/objc/compression/WCTCompressionInfo.h\", \n\t\"src/objc/transaction/*.{h,hpp}\", \n\t\"src/objc/handle/WCTDatabase+Handle.h\", \n\t\"src/objc/handle/WCTHandle.h\", \n\t\"src/objc/handle/WCTCancellationSignal.h\", \n\t\"src/objc/fts/*.{h,hpp}\", \n\t\"src/objc/monitor/WCTError.h\", \n\t\"src/objc/monitor/WCTDatabase+Monitor.h\", \n\t\"src/objc/monitor/WCTPerformanceInfo.h\", \n\t\"src/objc/chaincall/WCTInsert.h\", \n\t\"src/objc/chaincall/WCTDelete.h\", \n\t\"src/objc/chaincall/WCTUpdate.h\", \n\t\"src/objc/chaincall/WCTSelectable.h\", \n\t\"src/objc/chaincall/WCTSelect.h\", \n\t\"src/objc/chaincall/WCTMultiSelect.h\", \n\t\"src/objc/chaincall/WCTHandle+ChainCall.h\", \n\t\"src/objc/chaincall/WCTTable+ChainCall.h\", \n\t\"src/objc/chaincall/WCTDatabase+ChainCall.h\", \n\t\"src/objc/chaincall/WCTChainCall.h\", \n\t\"src/objc/convenient/*.{h,hpp}\", \n\t\"src/objc/database/WCTDatabase.h\", \n\t\"src/objc/database/WCTDatabase+File.h\", \n\t\"src/objc/database/WCTDatabase+Repair.h\", \n\t\"src/objc/database/WCTDatabase+Config.h\", \n\t\"src/objc/database/WCTDatabase+Memory.h\", \n\t\"src/objc/orm/*.{h,hpp}\", \n\t\"src/objc/orm/**/*.{h,hpp}\", \n\t\"src/objc/table/WCTTable.h\", \n\t\"src/objc/table/WCTTableProtocol.h\", \n\t\"src/objc/table/WCTTable+Table.h\", \n\t\"src/objc/table/WCTDatabase+Table.h\", \n\t\"src/objc/table/WCTHandle+Table.h\", \n\t\"src/objc/bridge/WCTBridgeProperty.h\", \n\t\"src/objc/bridge/WCTBridgeProperty+Cpp.h\", \n\t\"src/common/winq/*.{h,hpp}\", \n\t\"src/common/winq/**/*.{h,hpp}\", \n\t\"src/common/platform/SysTypes.h\", \n\t\"src/common/utility/Shadow.hpp\", \n\t\"src/common/utility/Macro.h\", \n\t\"src/common/utility/CaseInsensitiveList.hpp\", \n\t\"src/common/core/function/scalar/ScalarFunctionModule.hpp\", \n\t\"src/common/core/function/scalar/ScalarFunctionTemplate.hpp\", \n\t\"src/common/core/fts/tokenizer/TokenizerModule.hpp\", \n\t\"src/common/core/fts/tokenizer/TokenizerModuleTemplate.hpp\", \n\t\"src/common/core/fts/tokenizer/BaseTokenizerUtil.hpp\", \n\t\"src/common/core/fts/tokenizer/PinyinTokenizer.hpp\", \n\t\"src/common/core/fts/tokenizer/OneOrBinaryTokenizer.hpp\", \n\t\"src/common/core/fts/auxfunction/FTS5AuxiliaryFunctionTemplate.hpp\", \n\t\"src/common/core/fts/auxfunction/AuxiliaryFunctionModule.hpp\", \n\t\"src/common/core/fts/auxfunction/SubstringMatchInfo.hpp\", \n\t\"src/common/core/fts/FTSError.hpp\", \n\t\"src/common/core/RecyclableHandle.hpp\", \n\t\"src/common/core/Tag.hpp\", \n\t\"src/common/base/Recyclable.hpp\", \n\t\"src/common/base/SharedThreadedErrorProne.hpp\", \n\t\"src/common/base/StringView.hpp\", \n\t\"src/common/base/WCDBOptional.hpp\", \n\t\"src/common/base/WCDBError.hpp\", \n\t\"src/common/base/Data.hpp\", \n\t\"src/common/base/UnsafeData.hpp\", \n\t\"src/common/base/MemberPointer.hpp\"\n  ]\n  wcdb.source_files  = [\n  \t\"src/common/**/*.{h,hpp,c,cpp}\", \n\t\"src/objc/**/*.{h,hpp,c,cpp,m,mm}\", \n  ]\n  wcdb.exclude_files = [\n  \t\"src/common/platform/WCTFileManager.cpp\", \n\t\"src/common/platform/WCTOperationQueue.cpp\", \n\t\"src/objc/tests/**/*.{h,hpp,c,cpp,m,mm}\"\n  ]\n  wcdb.frameworks = \"CoreFoundation\", \"Security\", \"Foundation\"\n  wcdb.ios.frameworks = \"UIKit\"\n  wcdb.libraries = \"z\", \"c++\"\n  wcdb.requires_arc = true\n  wcdb.pod_target_xcconfig = { \n    \"GCC_PREPROCESSOR_DEFINITIONS\" =>   \"SQLITE_WCDB=1 \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_WCDB_LOCK_HOOK=1 \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_WCDB_CHECKPOINT_HANDLER=1 \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_WCDB_SUSPEND=1 \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_WCDB_IMPROVED_CHECKPOINT=1 \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_HAS_CODEC \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_DEFAULT_PAGE_SIZE=4096 \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_DEFAULT_SYNCHRONOUS=1 \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_DEFAULT_WAL_SYNCHRONOUS=1 \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_DEFAULT_LOCKING_MODE=0 \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_DEFAULT_WAL_AUTOCHECKPOINT=0\",\n    \"HEADER_SEARCH_PATHS\" => \"${PODS_ROOT}/WCDB\",\n    \"LIBRARY_SEARCH_PATHS[sdk=macosx*]\" => \"$(SDKROOT)/usr/lib/system\",\n    \"CLANG_CXX_LANGUAGE_STANDARD\" => \"gnu++14\",\n    \"CLANG_CXX_LIBRARY\" => \"libc++\",\n    \"GCC_C_LANGUAGE_STANDARD\" => \"gnu11\",\n    \"VALID_ARCHS\" => \"arm64e arm64 x86_64\",\n    \"VALID_ARCHS[sdk=watchos*]\" => \"arm64_32 arm64 x86_64\",\n    \"OTHER_CFLAGS\" => \"-fvisibility-inlines-hidden\",\n    \"OTHER_CPLUSPLUSFLAGS\" => \"-fvisibility-inlines-hidden\",\n  }\n  wcdb.header_dir = \"WCDB\"\n  wcdb.dependency 'WCDBOptimizedSQLCipher', '1.4.6'\nend\n"
        },
        {
          "name": "WCDB.podspec",
          "type": "blob",
          "size": 6.595703125,
          "content": "# pod repo update\n# pod repo remove trunk\n# pod lib lint --verbose --skip-import-validation --allow-warnings WCDB.podspec --sources='https://github.com/CocoaPods/Specs.git'\n# pod trunk push --verbose --allow-warnings WCDB.podspec --skip-import-validation\nPod::Spec.new do |wcdb|\n  wcdb.name         = \"WCDB\"\n  wcdb.version      = \"2.1.9\"\n  wcdb.summary      = \"WCDB is a cross-platform database framework developed by WeChat.\"\n  wcdb.description  = <<-DESC\n                      The WeChat Database, for Objc/Swift/C++. (If you want to use WCDB for Objc/Swift/C++ separately, see the \"WCDB.objc\", \"WCDB.swift\" or \"WCDB.cpp\" pod.)\n\n                      WCDB is an efficient, complete, easy-to-use mobile database framework used in the WeChat application.\n                      It can be a replacement for Core Data, SQLite & FMDB.\n                      DESC\n  wcdb.homepage     = \"https://github.com/Tencent/wcdb\"\n  wcdb.license      = { :type => \"BSD\", :file => \"LICENSE\" }\n  wcdb.author       = { \"Qiuwen-Chen\" => \"qwchen2008@163.com\" }\n  wcdb.module_name  = \"WCDB\"\n  wcdb.ios.deployment_target = \"11.0\"\n  wcdb.osx.deployment_target = \"10.13\"\n  wcdb.watchos.deployment_target = \"7.0\"\n  wcdb.tvos.deployment_target = \"12.4\"\n  wcdb.source       = { :git => \"https://github.com/Tencent/wcdb.git\", :tag => \"v#{wcdb.version}\" }\n  wcdb.public_header_files = [\n  \t\"src/WCDB.h\", \n\t\"src/objc/WCDBObjc.h\", \n\t\"src/objc/Interface.h\", \n\t\"src/objc/core/*.{h,hpp}\", \n\t\"src/objc/builtin/*.{h,hpp}\", \n\t\"src/objc/statement/WCTPreparedStatement.h\", \n\t\"src/objc/migration/WCTDatabase+Migration.h\", \n\t\"src/objc/migration/WCTMigrationInfo.h\", \n\t\"src/objc/compression/WCTDatabase+Compression.h\", \n\t\"src/objc/compression/WCTCompressionInfo.h\", \n\t\"src/objc/transaction/*.{h,hpp}\", \n\t\"src/objc/handle/WCTDatabase+Handle.h\", \n\t\"src/objc/handle/WCTHandle.h\", \n\t\"src/objc/handle/WCTCancellationSignal.h\", \n\t\"src/objc/fts/*.{h,hpp}\", \n\t\"src/objc/monitor/WCTError.h\", \n\t\"src/objc/monitor/WCTDatabase+Monitor.h\", \n\t\"src/objc/monitor/WCTPerformanceInfo.h\", \n\t\"src/objc/chaincall/WCTInsert.h\", \n\t\"src/objc/chaincall/WCTDelete.h\", \n\t\"src/objc/chaincall/WCTUpdate.h\", \n\t\"src/objc/chaincall/WCTSelectable.h\", \n\t\"src/objc/chaincall/WCTSelect.h\", \n\t\"src/objc/chaincall/WCTMultiSelect.h\", \n\t\"src/objc/chaincall/WCTHandle+ChainCall.h\", \n\t\"src/objc/chaincall/WCTTable+ChainCall.h\", \n\t\"src/objc/chaincall/WCTDatabase+ChainCall.h\", \n\t\"src/objc/chaincall/WCTChainCall.h\", \n\t\"src/objc/convenient/*.{h,hpp}\", \n\t\"src/objc/database/WCTDatabase.h\", \n\t\"src/objc/database/WCTDatabase+File.h\", \n\t\"src/objc/database/WCTDatabase+Repair.h\", \n\t\"src/objc/database/WCTDatabase+Config.h\", \n\t\"src/objc/database/WCTDatabase+Memory.h\", \n\t\"src/objc/orm/*.{h,hpp}\", \n\t\"src/objc/orm/**/*.{h,hpp}\", \n\t\"src/objc/table/WCTTable.h\", \n\t\"src/objc/table/WCTTableProtocol.h\", \n\t\"src/objc/table/WCTTable+Table.h\", \n\t\"src/objc/table/WCTDatabase+Table.h\", \n\t\"src/objc/table/WCTHandle+Table.h\", \n\t\"src/objc/bridge/WCTBridgeProperty.h\", \n\t\"src/objc/bridge/WCTBridgeProperty+Cpp.h\", \n\t\"src/common/winq/*.{h,hpp}\", \n\t\"src/common/winq/**/*.{h,hpp}\", \n\t\"src/common/platform/SysTypes.h\", \n\t\"src/common/utility/Shadow.hpp\", \n\t\"src/common/utility/Macro.h\", \n\t\"src/common/utility/CaseInsensitiveList.hpp\", \n\t\"src/common/core/function/scalar/ScalarFunctionModule.hpp\", \n\t\"src/common/core/function/scalar/ScalarFunctionTemplate.hpp\", \n\t\"src/common/core/fts/FTSConst.h\", \n\t\"src/common/core/fts/tokenizer/TokenizerModule.hpp\", \n\t\"src/common/core/fts/tokenizer/TokenizerModuleTemplate.hpp\", \n\t\"src/common/core/fts/tokenizer/BaseTokenizerUtil.hpp\", \n\t\"src/common/core/fts/tokenizer/PinyinTokenizer.hpp\", \n\t\"src/common/core/fts/tokenizer/OneOrBinaryTokenizer.hpp\", \n\t\"src/common/core/fts/auxfunction/FTS5AuxiliaryFunctionTemplate.hpp\", \n\t\"src/common/core/fts/auxfunction/AuxiliaryFunctionModule.hpp\", \n\t\"src/common/core/fts/auxfunction/SubstringMatchInfo.hpp\", \n\t\"src/common/core/fts/FTSError.hpp\", \n\t\"src/common/core/RecyclableHandle.hpp\", \n\t\"src/common/core/Tag.hpp\", \n\t\"src/common/base/Recyclable.hpp\", \n\t\"src/common/base/SharedThreadedErrorProne.hpp\", \n\t\"src/common/base/StringView.hpp\", \n\t\"src/common/base/WCDBOptional.hpp\", \n\t\"src/common/base/WCDBError.hpp\", \n\t\"src/common/base/Data.hpp\", \n\t\"src/common/base/UnsafeData.hpp\", \n\t\"src/common/base/MemberPointer.hpp\", \n\t\"src/cpp/WCDBCpp.h\", \n\t\"src/cpp/**/*.{h,hpp}\", \n\t\"src/bridge/objcbridge/WCTBridgeMacro.h\", \n  ]\n  wcdb.private_header_files = [\n  \t\"src/bridge/WCDBBridging.h\",\n\t\"src/bridge/base/**/*.{h}\",\n\t\"src/bridge/cppbridge/**/*.{h}\",\n\t\"src/bridge/winqbridge/**/*.{h}\",\n\t\"src/bridge/objcbridge/WCTAPIBridge.h\"\n  ]\n  wcdb.source_files  = [\n  \t\"src/WCDB.h\",\n\t\"src/common/**/*.{swift,h,hpp,c,cpp,m,mm}\",\n\t\"src/objc/**/*.{swift,h,hpp,c,cpp,m,mm}\",\n\t\"src/cpp/**/*.{swift,h,hpp,c,cpp,m,mm}\",\n\t\"src/swift/**/*.{swift,h,hpp,c,cpp,m,mm}\",\n\t\"src/bridge/**/*.{swift,h,hpp,c,cpp,m,mm}\"\n  ]\n  wcdb.exclude_files = [\n  \t\"src/common/platform/WCTFileManager.cpp\",\n\t\"src/common/platform/WCTOperationQueue.cpp\",\n\t\"src/cpp/tests/**/*.{swift,h,hpp,c,cpp,m,mm}\",\n\t\"src/objc/tests/**/*.{swift,h,hpp,c,cpp,m,mm}\",\n\t\"src/swift/tests/**/*.{swift,h,hpp,c,cpp,m,mm}\",\n\t\"src/bridge/tests/**/*.{swift,h,hpp,c,cpp,m,mm}\",\n\t\"src/bridge/include/**/*.{swift,h,hpp,c,cpp,m,mm}\",\n  ]\n  wcdb.preserve_path = \"src/support/WCDB.modulemap\"\n  wcdb.module_map = \"src/support/WCDB.modulemap\"\n  wcdb.frameworks = \"CoreFoundation\", \"Security\", \"Foundation\"\n  wcdb.ios.frameworks = \"UIKit\"\n  wcdb.libraries = \"z\", \"c++\"\n  wcdb.requires_arc = true\n  wcdb.pod_target_xcconfig = {\n    \"GCC_PREPROCESSOR_DEFINITIONS\" =>   \"SQLITE_WCDB=1 \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_WCDB_LOCK_HOOK=1 \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_WCDB_CHECKPOINT_HANDLER=1 \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_WCDB_SUSPEND=1 \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_WCDB_IMPROVED_CHECKPOINT=1 \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_HAS_CODEC \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_DEFAULT_PAGE_SIZE=4096 \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_DEFAULT_SYNCHRONOUS=1 \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_DEFAULT_WAL_SYNCHRONOUS=1 \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_DEFAULT_LOCKING_MODE=0 \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_DEFAULT_WAL_AUTOCHECKPOINT=0 \" +\n\t\t\t\t\t\t\t\t\t\t\"WCDB_SWIFT_BRIDGE_OBJC=1\",\n    \"HEADER_SEARCH_PATHS\" => \"${PODS_ROOT}/WCDB\",\n    \"LIBRARY_SEARCH_PATHS[sdk=macosx*]\" => \"$(SDKROOT)/usr/lib/system\",\n    \"CLANG_CXX_LANGUAGE_STANDARD\" => \"gnu++14\",\n    \"CLANG_CXX_LIBRARY\" => \"libc++\",\n    \"GCC_C_LANGUAGE_STANDARD\" => \"gnu11\",\n    \"VALID_ARCHS\" => \"arm64e arm64 x86_64\",\n    \"VALID_ARCHS[sdk=watchos*]\" => \"arm64_32 arm64 86_64\",\n    \"OTHER_CFLAGS\" => \"-fvisibility-inlines-hidden\",\n    \"OTHER_CPLUSPLUSFLAGS\" => \"-fvisibility-inlines-hidden\",\n    \"OTHER_SWIFT_FLAGS\" => \"-no-verify-emitted-module-interface\",\n    \"SWIFT_ACTIVE_COMPILATION_CONDITIONS\" => \"WCDB_SWIFT_BRIDGE_OBJC\",\n  }\n  wcdb.header_dir = \"WCDB\"\n  wcdb.swift_versions = '5'\n  wcdb.dependency 'WCDBOptimizedSQLCipher', '1.4.6'\nend\n"
        },
        {
          "name": "WCDB.swift.podspec",
          "type": "blob",
          "size": 3.7939453125,
          "content": "# pod repo update\n# pod repo remove trunk\n# pod lib lint --verbose --allow-warnings WCDB.swift.podspec --sources='https://github.com/CocoaPods/Specs.git'\n# pod trunk push --verbose --allow-warnings WCDB.swift.podspec\nPod::Spec.new do |wcdb|\n  wcdb.name         = \"WCDB.swift\"\n  wcdb.version      = \"2.1.9\"\n  wcdb.summary      = \"WCDB is a cross-platform database framework developed by WeChat.\"\n  wcdb.description  = <<-DESC\n                      The WeChat Database, for Swift. (If you want to use WCDB for Objective-C or C++, see the \"WCDB.objc\" pod or \"WCDB.cpp\" pod. If you want to use WCDB for C++/Objc/Swift in one project, see the \"WCDB\" pod)\n\n                      WCDB is an efficient, complete, easy-to-use mobile database framework used in the WeChat application.\n                      It can be a replacement for Core Data, SQLite & FMDB.\n                      DESC\n  wcdb.homepage     = \"https://github.com/Tencent/wcdb\"\n  wcdb.module_name  = \"WCDBSwift\"\n  wcdb.license      = { :type => \"BSD\", :file => \"LICENSE\" }\n  wcdb.author       = { \"Qiuwen-Chen\" => \"qwchen2008@163.com\" }\n  wcdb.ios.deployment_target = \"11.0\"\n  wcdb.osx.deployment_target = \"10.13\"\n  wcdb.watchos.deployment_target = \"7.0\"\n  wcdb.tvos.deployment_target = \"12.4\"\n  wcdb.source       = { :git => \"https://github.com/Tencent/wcdb.git\", :tag => \"v#{wcdb.version}\" }\n  wcdb.private_header_files = \"src/bridge/**/*.{h}\"\n  wcdb.source_files  = [\n  \t\"src/swift/**/*.{swift}\",\n  \t\"src/bridge/**/*.{swift,h,hpp,c,cpp,m,mm}\",\n  \t\"src/common/**/*.{swift,h,hpp,c,cpp,m,mm}\",\n  \t\"src/objc/core/WCTFileManager.mm\",\n    \"src/objc/core/WCTOperationQueue.mm\", \n  \t\"src/objc/core/WCTFoundation.h\",\n  \t\"src/objc/core/WCTFoundation.mm\",\n  \t\"src/objc/core/WCTFTSTokenizerUtil.h\",\n  \t\"src/objc/core/WCTFTSTokenizerUtil.mm\",\n  \t\"src/objc/core/WCTDeclaration.h\",\n  \t\"src/objc/core/WCTValue.h\",\n  \t\"src/objc/orm/coding/WCTColumnCoding.h\",\n  \t\"src/objc/orm/macro/WCTPropertyMacro.h\",\n  \t\"src/objc/orm/coding/WCTTableCoding.h\",\n  \t\"src/objc/core/WCTConvertible.h\",\n  \t\"src/objc/core/WCTCommon.h\",\n  \t\"src/objc/core/WCTOptional.h\",\n  \t\"src/objc/core/WCTTag.h\"\n  ]\n  wcdb.exclude_files = [\n  \t\"src/swift/tests/**/*.{swift,h,hpp,c,cpp,m,mm}\",\n  \t\"src/bridge/tests/**/*.{swift,h,hpp,c,cpp,m,mm}\",\n    \"src/bridge/include/**/*.{swift,h,hpp,c,cpp,m,mm}\",\n  \t\"src/common/platform/WCTFileManager.cpp\",\n  \t\"src/common/platform/WCTOperationQueue.cpp\",\n  ]\n  wcdb.requires_arc = true\n  wcdb.preserve_path = \"src/support/WCDBSwift.modulemap\"\n  wcdb.module_map = \"src/support/WCDBSwift.modulemap\"\n  wcdb.frameworks = \"CoreFoundation\", \"Security\", \"Foundation\"\n  wcdb.libraries = \"z\", \"c++\"\n  wcdb.pod_target_xcconfig = { \n    \"GCC_PREPROCESSOR_DEFINITIONS\" =>   \"SQLITE_WCDB=1 \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_WCDB_LOCK_HOOK=1 \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_WCDB_CHECKPOINT_HANDLER=1 \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_WCDB_SUSPEND=1 \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_WCDB_IMPROVED_CHECKPOINT=1 \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_HAS_CODEC \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_DEFAULT_PAGE_SIZE=4096 \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_DEFAULT_SYNCHRONOUS=1 \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_DEFAULT_WAL_SYNCHRONOUS=1 \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_DEFAULT_LOCKING_MODE=0 \" +\n\t\t\t\t\t\t\t\t\t\t\"SQLITE_DEFAULT_WAL_AUTOCHECKPOINT=0\",\n    'SWIFT_WHOLE_MODULE_OPTIMIZATION' => 'YES',\n    'APPLICATION_EXTENSION_API_ONLY' => 'YES',\n    \"HEADER_SEARCH_PATHS\" => \"${PODS_ROOT}/WCDBSwift\",\n    \"LIBRARY_SEARCH_PATHS[sdk=macosx*]\" => \"$(SDKROOT)/usr/lib/system\",\n    \"CLANG_CXX_LANGUAGE_STANDARD\" => \"gnu++14\",\n    \"CLANG_CXX_LIBRARY\" => \"libc++\",\n    \"GCC_C_LANGUAGE_STANDARD\" => \"gnu11\",\n    \"VALID_ARCHS\" => \"arm64e arm64 x86_64\",\n    \"VALID_ARCHS[sdk=watchos*]\" => \"arm64_32 arm64 x86_64\",\n    \"OTHER_CFLAGS\" => \"-fvisibility-inlines-hidden\",\n    \"OTHER_CPLUSPLUSFLAGS\" => \"-fvisibility-inlines-hidden\",\n    \"OTHER_SWIFT_FLAGS\" => \"-no-verify-emitted-module-interface\",\n  }\n  wcdb.swift_versions = '5'\n  wcdb.dependency 'WCDBOptimizedSQLCipher', '1.4.6'\nend\n"
        },
        {
          "name": "deprecated",
          "type": "tree",
          "content": null
        },
        {
          "name": "openssl",
          "type": "commit",
          "content": null
        },
        {
          "name": "sqlcipher",
          "type": "commit",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "zstd",
          "type": "commit",
          "content": null
        }
      ]
    }
  ]
}