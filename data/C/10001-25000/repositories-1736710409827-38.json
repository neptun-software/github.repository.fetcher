{
  "metadata": {
    "timestamp": 1736710409827,
    "page": 38,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "videolan/vlc",
      "stars": 14630,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.5478515625,
          "content": "*~\n*.app\n*.cache\n*.dylib\n*.lo\n*.lo?\n*.la\n*.moc.cpp\n*.o\n*.so\n*.trs\n*.pc\n*.vlt\n*.class\n*.dmg\n*.qmlc\n.DS_Store\n.deps\n.libs\n.dirstamp\nABOUT-NLS\naclocal.m4\nCargo.lock\nChangeLog\ncompile\nconfig.status\nconfig.h\nconfig.h.in\nconfig.log\nconfigure\ndoltcompile\ndoltlibtool\nINSTALL.git\nlibtool\nMakefile\nMakefile.in\nstamp-*\nvlc\nvlc.exe\nqvlc\nrvlc\nsvlc\ncvlc\nqvlc\nmvlc\nnvlc\nwxvlc\nvlc_install_dir/*\nplugins.dat\npatches/*\nshare/macosx/Info.plist\nFrameworks\n\n# Ignore build dirs\nbuild*/\ntarget*/\ncontrib-*\ninstall-*\nxcodeproj/\n!buildsystem/\n!build.rs\n!extras/package/apple/build.sh\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 7.076171875,
          "content": "# Bad (and bouncing) emails and names\nJean-Baptiste Kempf <jb@videolan.org>\n<jb@videolan.org> <jb@altair.videolan.org>\n<jb@videolan.org> <jb@ambre.(none)>\n<jb@videolan.org> <jb@sasmira.jbkempf.com>\n<jb@videolan.org> <jb@elayne.jbkempf.com>\n<jb@videolan.org> <Jean-Baptiste@ambre.(none)>\n<jb@videolan.org> <jb@sasmira.(none)>\nJean-Baptiste Kempf <jb@videolan.org> U-AMBRE\\Jean-Baptiste <Jean-Baptiste@ambre.(none)>\nJean-Baptiste Kempf <jb@videolan.org> U-SASMIRA\\jb <jb@sasmira.(none)>\n<remi@remlab.net> <remi.denis-courmont@nokia.com>\n<remi@remlab.net> <rdenis@simphalempin.com>\n<remi@remlab.net> <rem@videolan.org>\n<pdherbemont@videolan.org> <steg@nibudy.local>\n<dionoea@videolan.org> <antoine@macbook.(none)>\nFelix Paul Kühne <fkuehne@videolan.org>\n<fkuehne@videolan.org> <fpk@Bartleby.local>\n<fkuehne@videolan.org> <fpk@Felix-Kuhnes-MacBook.local>\n<fkuehne@videolan.org> <fpk@felix-kuhnes-macbook.local>\n<fkuehne@videolan.org> <felix@serioese.gmbh>\n<fkuehne@videolan.org> <felix@feepk.net>\n<jpsaman@videolan.org> <jpsaman@gandalf.(none)>\n<jpsaman@videolan.org> <jpsaman@gandalf.kpn-communicationcentre.nl>\n<jpsaman@videolan.org> <jpsaman@m2x.nl>\n<xtophe@videolan.org> <xtophe@altair.v.videolan.org>\nRafaël Carré <funman@videolan.org> <fun@kebab.(none)>\n<sigmunau@videolan.org> <sigmunau@hobbes.(none)>\n<ipkiss@videolan.org> <ipkiss@ulukai.(none)>\nErwan Tulou <erwan10@videolan.org> <brezhoneg1@yahoo.fr>\nErwan Tulou <erwan10@videolan.org> erwan <erwan@erwan-VirtualBox.(none)>\n<jleben@videolan.org> <jakob@leptop.(none)>\n<robux@videolan.org> <slhomme@matroska.org>\n<robux@videolan.org> <robux4@gmail.com>\n<robux@videolan.org> <robux4@robux4-desktop.(none)>\n<robux@videolan.org> <steve.lhomme@free.fr>\nJP Dinger <jpd@videolan.org> <jpd@m2x.nl>\nJP Dinger <jpd@videolan.org> <jpd@dsb.tudelft.nl>\nJean-Philippe André <jpeg@videolan.org> <jpeg@aena.(none)>\nJean-Philippe André <jpeg@videolan.org> <jpeg@via.ecp.fr>\nJean-Philippe André <jpeg@videolan.org> <jpeg@endymion.via.ecp.fr>\nJean-Philippe André <jpeg@videolan.org> <JPeg@videolan.org>\nJean-Philippe André <jpeg@videolan.org> <jpeg@aena.via.ecp.fr>\nSébastien Escudier <sebastien-devel@celeos.eu>\nSébastien Escudier <sebastien-devel@celeos.eu> <sebastien@sebastien-desktop.(none)>\nÉric Lassauge <lassauge@users.sourceforge.net>\nÉric Lassauge <lassauge@users.sourceforge.net> <lassauge {AT} users {dot} sourceforge {dot} net>\nÉric Lassauge <lassauge@users.sourceforge.net> <gozer@progrock.com>\nMirsal Ennaime <mirsal@mirsal.fr> <mirsal.ennaime@gmail.com>\n<mirsal@mirsal.fr> <mirsal@mirsal-laptop.(none)>\nPankaj Yadav <pankajdnapster@gmail.com>\n<pankajdnapster@gmail.com> <pk@videolan.org>\nPankaj Yadav <pankajdnapster@gmail.com> <pk@pk-desktop.(none)>\nJean-François Massol <jf.massol@gmail.com>\n<jf.massol@gmail.com> <jf@debian.(none)>\nBenjamin Poulain <ikipou@gmail.com>\nBasos G <noxelia@gmail.com>\nBasos G <noxelia@gmail.com> <noxelia 4t gmail , com>\nBasos G <noxelia@gmail.com> <noxelia 4t gmail d0t c0m>\nBasos G <noxelia@gmail.com> <noxelia 4t gmail c0m>\n<srikiraju@gmail.com> <srikiraju at gmail dot com>\n<dmenest-vlc@ofb.net> <dmenest-vlc at ofb dot net>\n<kelemeng@gnome.hu> <kelemeng at gnome dot hu>\n<tkrotoff@gmail.com> <tkrotoff at>\nAurélien Nephtali <aurelien@sitadelle.com> <aurelien sitadelle.com>\nAurélien Nephtali <aurelien.nephtali@gmail.com>\nKonstanty Bialkowski <konstanty@ieee.org> <konstanty@gmail.com>\nPavlov Konstantin <thresh@videolan.org>\n<thresh@videolan.org> <thresh@altlinux.ru>\nPavlov Konstantin <thresh@videolan.org> <thresh@altlinux.org>\n<videolan@videolan.org> <videolan@jones.via.ecp.fr>\n<videolan@videolan.org> <noreply@videolan.org>\n<jpountz@jpountz.net> <jpountz@videolan.org>\n<atmo@videolan.org> <WeberAndre@gmx.de>\nBill C. Riemers <briemers+git@redhat.com> <docbill@hartnell.local>\nBrad Smith <brad@comstyle.com>\n<cristi@secarica.ro> <cristi.secarica.ro>\n<davidf@rd.bbc.co.uk> <davidf+nntp@woaf.net>\n<davidf@rd.bbc.co.uk> <davidf@woaf.net>\nHugo Beauzée-Luyssen <hugo@beauzee.fr> <hugo@beauzee.fr>\nHugo Beauzée-Luyssen <hugo@beauzee.fr> <beauze.h@gmail.com>\nHugo Beauzée-Luyssen <hugo@beauzee.fr> <chouquette@videolan.org>\n<markfm@videolan.org> <mfmbusiness@earthlink.net>\n<markfm@videolan.org> <mfmori@hotmail.com>\nNicolas Chauvet <kwizart@gmail.com>\nRob Jonson <rob@hobbyistsoftware.com>\nSigmund Augdal Helberg <sigmunau@videolan.org>\nSigmund Augdal Helberg <sigmunau@videolan.org> Sigmund Augdal <sigmund@snap.tv>\nSigmund Augdal Helberg <sigmunau@videolan.org> Sigmund Augdal <sigmunau@hobbes.(none)>\nVincent Penquerc'h <ogg.k.ogg.k@googlemail.com>\nAnthony Loiseau <anthony.loiseau@gmail.com> <thannoy@actech-innovation.com>\nFUJISAWA Tooru <arai_a@mac.com>\nKen Self <kenself@optusnet.com.au>\nTony Gaillard <tony.gaillard@supinfo.com> <Tony.GAILLARD@supinfo.com>\nPrzemyslaw Fiala <bl4@playker.info>\nMarián Hikaník <podnety@mojepreklady.net>\nMichael McEll <mapei_@hotmail.com>\nMarian Ďurkovič <md@bts.sk>\nMarian Ďurkovič <md@bts.sk> Marian Durkovic <md@videolan.org>\n#Maybe switch to the videolan address?\nDylan Yudaken <dyudaken@gmail.com>\nMartin T. H. Sandsmark <sandsmark@samfundet.no>\n<cyril.mathe@gmail.com> <cmathe@actech-innovation.com>\n<riquedafreak@videolan.org> <enrique.osuna@gmail.com>\n<nib9@charter.net> <zaggal69@gmail.com>\nAlexander Lakhin <exclusion@gmail.com>\nDenis Arnaud <denisarnuad@yahoo.fr>\nÉric Lassauge <lassauge@users.sf.net>\nFaustino Osuna <riquedafreak@videolan.org>\nFaustino Osuna <riquedafreak@videolan.org> Faustino E. Osuna <enrique.osuna@gmail.com>\nMihkel Kirjutas <turakas@gmail.com>\nNaohiro Koriyama <nkoriyama@gmail.com>\nPredrag Ljubenović <predragljubenovic@gmail.com>\nAjith Manjula Senarathne <uthmax.sms@gmail.com>\nAndy Chenee <chenee543216@gmail.com>\n<chenee543216@gmail.com> Andy Chenee <chenee@hhcn.com>\nDominko Azdajic <domazd@mail.ru> Dominko Aždajić <domazd@web.de>\nJérôme Decoodt <djc@videolan.org>\nJérôme Decoodt <djc@videolan.org> Jérôme Decoodt <djc+git@videolan.org>\nMatej Urbančič <mateju@svn.gnome.org> Matej Urban <matej.urban@gmail.com>\nXabier Aramendi <azpidatziak@gmail.com>\nGwenole Beauchesne <gb.devel@gmail.com> <gbeauchesne@splitted-desktop.com>\nFrédéric Yhuel <fyhuel@viotech.net>\nMing Hu <tewilove@gmail.com>\nKuan-Chung Chiu <buganini@gmail.com>\nCédric Cocquebert <cedric.cocquebert@cea.fr>\nFrançois Cartegnie <fcvlcdev@free.fr>\nJean-Paul Saman <jpsaman@videolan.org>\nJean-Paul Saman <jpsaman@videolan.org> jpsaman@m2x.nl <jpsaman@m2x.nl>\nJean-Paul Saman <jpsaman@videolan.org> Jean-Paul Saman <jean-paul.saman@m2x.nl>\nSamuel Hocevar <sam@videolan.org>\nSamuel Hocevar <sam@videolan.org> Sam Hocevar <sam@zoy.org>\nSamuel Hocevar <sam@videolan.org> Sam Hocevar <sam@hocevar.net>\nYannick Bréhon <y.brehon@qiplay.com>\nRui Zhang <bbcallen@gmail.com>\nRonald Wright <logiconcepts819@gmail.com> Ron Wright <logiconcepts819@gmail.com>\nClément Lecigne <clemun@gmail.com> Clement Lecigne <clecigne@google.com>\nSiarhei Daryichau Дар'ічаў Сяргей <charnabog@gmail.com>\n#\n# Preferred emails\n<malte@tancred.com> <malte@frontbase.com>\n<xtophe@videolan.org> <xtophe@chewa.net>\n<hartman@videolan.org> <hartman@veda.student.utwente.nl>\n<etix@videolan.org> <etix@l0cal.com>\n<steven@m20.nl> <skramer@inbeeld.eu>\n<jarmo.torvinen@iki.fi> <jarmo.torvinen@jutel.fi>\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 18.7177734375,
          "content": "VideoLAN and the VLC team would like to acknowledge the following contributors:\n\nProgramming\n-----------\nRémi Denis-Courmont\nJean-Baptiste Kempf\nLaurent Aimar\nFrançois Cartegnie\nGildas Bazin\nFelix Paul Kühne\nRafaël Carré\nPierre d'Herbemont\nThomas Guillem\nRémi Duraffort\nDerk-Jan Hartman\nAntoine Cellerier\nSamuel Hocevar\nJean-Paul Saman\nSteve Lhomme\nChristophe Mutricy\nClément Stenac\nChristophe Massiot\nIlkka Ollakka\nPierre Ynard\nFilip Roséen\nDamien Fouilleul\nSigmund Augdal Helberg\nErwan Tulou\nDavid Fuhrmann\nMarvin Scholz\nOlivier Teulière\nCyril Deguet\nEric Petit\nFilippo Carone\nRocky Bernstein\nHugo Beauzée-Luyssen\nOlivier Aubert\nPavlov Konstantin\nJakob Leben\nBenjamin Pracht\nJean-Philippe André\nStéphane Borel\nJP Dinger\nGeoffroy Couprie\nMartin Storsjö\nMarian Ďurkovič\nLudovic Fauvet\nPetri Hintukainen\nYoann Peronneau\nDenis Charmet\nSébastien Escudier\nJon Lech Johansen\nKO Myung-Hun\nEdward Wang\nDennis van Amerongen\nFaustino Osuna\nMirsal Ennaime\nSean McGovern\nJérôme Decoodt\nLoïc Minier\nDavid Flynn\nFrédéric Yhuel\nKaarlo Raiha\nMark Moriarty\nChristopher Mueller\nFabio Ritrovato\nTony Castley\nSrikanth Raju\nMichel Kaempf\nJean-Marc Dressler\nJohan Bilien\nVincent Seguin\nSimon Latapie\nBernie Purcell\nHenri Fallon\nSebastien Zwickert\nChristoph Miebach\nAdrien Maglo\nEmmanuel Puig\nRenaud Dartus\nAlexis de Lattre\nVincent Penquerc'h\nArnaud de Bossoreille de Ribou\nMohammed Adnène Trojette\nSalah-Eddin Shaban\nVittorio Giovara\nBoris Dorès\nJai Menon\nAnil Daoud\nDaniel Mierswa\nNaohiro Koriyama\nRob Jonson\nPierre Baillet\nDominique Leuenberger\nAndre Pang\nZoran Turalija\nAkash Mehrotra\nAndré Weber\nAnthony Loiseau\nLukas Durfina\nXavier Marchesini\nCyril Mathé\nDevin Heitmueller\nJuho Vähä-Herttua\nKen Self\nAlexis Ballier\nJuha Jeronen\nNicolas Chauvet\nRichard Hosking\nÉric Lassauge\nMarc Ariberti\nSébastien Toque\nTobias Güntner\nBenoit Steiner\nMichel Lespinasse\nCarlo Calabrò\nCheng Sun\nMichał Trzebiatowski\nBrad Smith\nBrendon Justin\nAlexey Sokolov\nBasos G\nPhilippe Morin\nSteinar H. Gunderson\nVicente Jimenez Aguilar\nYuval Tze\nYves Duret\nBenjamin Drung\nMichael Hanselmann\nAlex Merry\nDamien Lucas\nGrigori Goronzy\nRichard Shepherd\nGaël Hendryckx\nMichael Feurstein\nStephan Assmus\nAdrien Grand\nColin Guthrie\nDavid Menestrina\nDominique Martinet\nGleb Pinigin\nJason Luka\nLuc Saillard\nLuca Barbato\nMario Speiß\nPankaj Yadav\nRamiro Polla\nRonald Wright\nRui Zhang\nCan Wu\nChristophe Courtaut\nFUJISAWA Tooru\nHannes Domani\nManol Manolov\nTimothy B. Terriberry\nAntoine Lejeune\nArnaud Schauly\nBranko Kokanovic\nDylan Yudaken\nFlorian G. Pflug\nFrançois Revol\nG Finch\nKeary Griffin\nKonstanty Bialkowski\nMing Hu\nPhilippe Coent\nPrzemyslaw Fiala\nTanguy Krotoff\nVianney BOYER\nCasian Andrei\nChris Smowton\nDavid Kaplan\nEugenio Jarosiewicz\nFabian Keil\nGuillaume Poussel\nJohn Peterson\nJustus Piater\nMark Lee\nMartin T. H. Sandsmark\nRune Botten\nSøren Bøg\nToralf Niebuhr\nTristan Matthews\nAngelo Haller\nAurélien Nephtali\nAustin Burrow\nBill C. Riemers\nColin Delacroix\nCristian Maglie\nElminster2031\nJakub Wieczorek\nJohn Freed\nMark Hassman\nMartin Briza\nMike Houben\nRomain Goyet\nAdrian Yanes\nAlexander Lakhin\nAnatoliy Anischovich\nBarry Wardell\nBen Hutchings\nBesnard Jean-Baptiste\nBrian Weaver\nClement Chesnin\nDavid Geldreich\nDiego Elio Pettenò\nDiego Fernando Nieto\nGeorgi Chorbadzhiyski\nJon Stacey\nJonathan Rosser\nJoris van Rooij\nKaloyan Kovachev\nKatsushi Kobayashi\nKelly Anderson\nLoren Merritt\nMaciej Blizinski\nMark Bidewell\nMiguel Angel Cabrera Moya\nNiles Bindel\nSamuel Pitoiset\nScott Caudle\nSean Robinson\nSergey Radionov\nSimon Hailes\nStephen Parry\nSukrit Sangwan\nThierry Reding\nXavier Martin\nAlex Converse\nAlexander Bethke\nAlexandre Ratchov\nAndres Krapf\nAndrey Utkin\nAndri Pálsson\nAndy Chenee\nAnuradha Suraparaju\nBenjamin Poulain\nBrieuc Jeunhomme\nChris Clayton\nClément Lecigne\nCédric Cocquebert\nDaniel Peng\nDanny Wood\nDavid K\nEdouard Gomez\nEmmanuel de Roux\nFrode Tennebø\nGBX\nGaurav Narula\nGeraud CONTINSOUZAS\nHugues Fruchet\nJan Winter\nJean-François Massol\nJean-Philippe Grimaldi\nJosh Watzman\nKai Lauterbach\nKonstantin Bogdanov\nKuan-Chung Chiu\nKuang Rufan\nMatthias Dahl\nMichael McEll\nMichael Ploujnikov\nMike Schrag\nNickolai Zeldovich\nNicolas Bertrand\nNiklas Hayer\nOlafs Vandāns\nOlivier Gambier\nPaul Corke\nRon Frederick\nRov Juvano\nSabourin Gilles\nSam Lade\nSandeep Kumar\nSasha Koruga\nSreng Jean\nSven Petai\nTomas Krotil\nTomer Barletz\nTristan Leteurtre\nWang Bo\nmaxime Ripard\nxxcv\nAdam Hoka\nAdrian Knoth\nAdrien Cunin\nAlan Fischer\nAlan McCosh\nAlex Helfet\nAlexander Terentyev\nAlexandre Ferreira\nAlina Friedrichsen\nAn L. Ber\nAndreas Schlick\nAndrew Schubert\nAndrey Makhnutin\nArnaud Vallat\nAsad Mehmood\nAshok Bhat\nAustin English\nBaptiste Coudurier\nBenoit Calvez\nBjörn Stenberg\nBlake Livingston\nBrandon Brooks\nBrian Johnson\nBrian Kurle\nCezar Elnazli\nChris White\nChristian Masus\nChristoph Pfister\nChristoph Seibert\nChristopher Key\nChristopher Rath\nClaudio Ortelli\nCody Russell\nCristian Morales Vega\nDan Rosenberg\nDaniel Marth\nDaniel Tisza\nDetlef Schroeder\nDiego Biurrun\nDominik 'Rathann' Mierzejewski\nDuncan Salerno\nEdward Sheldrake\nElliot Murphy\nEren Inan Canpolat\nErnest E. Teem III\nEtienne Membrives\nFargier Sylvain\nFathi Boudra\nFelix Geyer\nFilipe Azevedo\nFinn Hughes\nFlorian Hubold\nFlorian Roeske\nFrank Enderle\nFrédéric Crozat\nGeorg Seifert\nGertjan Van Droogenbroeck\nGilles Chanteperdrix\nGreg Farrell\nGregory Maxwell\nGwenole Beauchesne\nGötz Waschk\nHans-Kristian Arntzen\nHarry Sintonen\nIain Wade\nIbraheem Paredath\nIsamu Arimoto\nIsmael Luceno\nJames Bates\nJames Bond\nJames Turner\nJanne Grunau\nJanne Kujanpää\nJarmo Torvinen\nJason Scheunemann\nJeff Lu\nJeroen Ost\nJoe Taber\nJohann Ransay\nJohannes Weißl\nJohn Hendrikx\nJohn Stebbins\nJonas Gehring\nJoseph S. Atkinson\nJuergen Lock\nJulien 'Lta' BALLET\nJulien / Gellule\nJulien Humbert\nKamil Baldyga\nKamil Klimek\nKarlheinz Wohlmuth\nKevin Anthony\nKevin DuBois\nLari Natri\nLorenzo Pistone\nLucas C. Villa Real\nLukáš Lalinský\nMal Graty\nMalte Tancred\nMartin Pöhlmann\nMartin Zeman\nMarton Balint\nMathew King\nMathieu Sonet\nMatthew A. Townsend\nMatthias Bauer\nMika Tiainen\nMike Cardillo\nMounir Lamouri (volkmar)\nNatanael Copa\nNathan Phillip Brink\nNick Briggs\nNick Pope\nNil Geiswiller\nPascal Thomet\nPere Orga\nPeter Bak Nielsen\nPhil Roffe and David Grellscheid\nPhilip Sequeira\nPierre Souchay\nPiotr Fusik\nPádraig Brady\nR.M\nRalph Giles\nRamon Gabarró\nRobert Forsman\nRobert Jedrzejczyk\nRobert Paciorek\nRolf Ahrenberg\nRoman Pen\nRuud Althuizen\nSamuli Suominen\nScott Lyons\nSebastian Birk\nSergey Puzanov\nSergio Ammirata\nSharad Dixit\nSong Ye Wen\nStephan Krempel\nSteven Kramer\nSteven Sheehy\nSveinung Kvilhaugsvik\nSylvain Cadhillac\nSylver Bruneau\nTakahito HIRANO\nTheron Lewis\nThijs Alkemade\nTillmann Karras\nTimo Paulssen\nTimo Rothenpieler\nTobias Rapp\nTomasen\nTony Vankrunkelsven\nTristan Heaven\nVarphone Wong\nVasily Fomin\nVikram Narayanan\nYannick Bréhon\nYavor Doganov\nYohann Martineau\ndharani.prabhu.s\nsuheaven\nwucan\n김정은\nAdam Sampson\nAlexander Gall\nAlex Antropoff\nAlexis Guillard\nAlex Izvorski\nAmir Gouini\nAndrea Guzzo\nAndrew Flintham\nAndrew Zaikin\nAndy Lindsay\nArai/Fujisawa Tooru\nArkadiusz Miskiewicz\nArnaud Gomes-do-Vale\nArwed v. Merkatz\nBarak Ori\nBasil Achermann\nBenjamin Mironer\nBill\nBob Maguire\nBrian C. Wiles\nBrian Raymond\nBrian Robb\nCarsten Gottbehüt\nCarsten Haitzler\nCharles Hordis\nChris Clepper\nChristian Henz\nChristof Baumgaertner\nChristophe Burgalat\nChristopher Johnson\nCian Duffy\nColin Simmonds\nDamian Ivereigh\nDaniel Fischer\nDaniel Stränger\nDanko Dolch\nDennis Lou\nDermot McGahon\nDouglas West\nDugal Harris\nEmmanuel Blindauer\nEnrico Gueli\nEnrique Osuna\nEren Türkay\nEric Dudiak\nEspen Skoglund\nEthan C. Baldridge\nFrançois Seingier\nFrans van Veen\nFrédéric Ruget\nGerald Hansink\nGisle Vanem\nGlen Gray\nGoetz Waschk\nGregory Hazel\nGustaf Neumann\nHang Su\nHans Lambermont\nHans-Peter Jansen\nHarris Dugal\nHeiko Panther\nIgor Helman\nIsaac Osunkunle\nJan David Mol\nJan Gerber\nJan Van Boghout\nJasper Alias\nJean-Alexis Montignies\nJean-Baptiste Le Stang\nJeffrey Baker\nJeroen Massar\nJérôme Guilbaud\nJohannes Buchner\nJohen Michael Zorko\nJohnathan Rosser\nJohn Dalgliesh\nJohn Paul Lorenti\nJörg\nJoseph Tulou\nJulien Blache\nJulien Plissonneau Duquène\nJulien Robert\nKenneth Ostby\nKenneth Self\nKevin H. Patterson\nKoehler, Vitally\nK. Staring\nLahiru Lakmal Priyadarshana\nLaurent Mutricy\nLeo Spalteholz\nLoox Thefuture\nMarc Nolette\nMarco Munderloh\nMark Gritter\nMarkus Kern\nMarkus Kuespert\nMartin Hamrle\nMartin Kahr\nMateus Krepsky Ludwich\nMathias Kretschmer\nMats Rojestal\nMatthias P. Nowak\nMatthieu Lochegnies\nMichael Mondragon\nMichael S. Feurstein\nMichel Lanners\nMickael Hoerdt\nMiguel Angel Cabrera\nMikko Hirvonen\nMoritz Bunkus\nNilmoni Deb\nOlivier Houchard\nOlivier Pomel\nOndrej Kuda aka Albert\nØyvind Kolbu\nPascal Levesque\nPatrick Horn\nPatrick McLean\nPauline Castets\nPaul Mackerras\nPeter Surda\nPetr Vacek\nPhilippe Van Hecke\nPierre-Luc Beaudoin\nPierre Marc Dumuid\nRégis Duchesne\nRemco Poortinga\nRene Gollent\nRob Casey\nRobson Braga Araujo\nRoine Gustafsson\nRoman Bednarek\nRudolf Cornelissen\nSašo Kiselkov\nSebastian Jenny\nShane Harper\nStefán Freyr Stefánsson\nSteve Brown\nSteven M. Schultz\nTapio Hiltunen\nThomas L. Wood\nThomas Mühlgrabner\nThomas Parmelan\nTim 'O Callagha\nTim Schuerewegen\nTong Ka Man\nTorsten Spindler\nUdo Richter\nVincent Dimar\nVincent Penne\nVitalijus Slavinskas\nVitaly V. Bursov\nVladimir Chernyshov\nWade Majors\nWallace Wadge\nWatanabe Go\nWilliam Hawkins\nXavier Maillard\nYe zhang\nYuehua Zhao\nAbylay Ospan\nAdam Leggett\nAdrian Haensler\nAgo Allikmaa\nAjith Manjula Senarathne\nAlain Degreffe\nAlan Pope\nAleksandr Pasechnik\nAlexandre Fernandez\nAlexandre Pereira Nunes\nAlexandre Perraud\nAlex Peak\nAlex Warhawk\nAlex Woods\nAllan Odgaard\nAncelot Mark Pinto\nAndrea Giudiceandrea\nAndreas Hartmetz\nAndreas Mieke\nAndré Silva\nAndrew Clayton\nAndrey Gursky\nAndrii Zui\nAndy Tather\nAntti Ajanki\nAra Qadir\nArjun Sreedharan\nArne de Bruijn\nArun Pandian G\nA S Alam\nAvani Sharma\nAvishay Spitzer\nBastien Penavayre\nBenjamin Adolphi\nBen Littler\nBenoit du Payrat\nBenoît Noël du Payrat\nBernd Kuhls\nBoris Egorov\nBoy van Amstel\nBrian Schmidt\nBrion Vibber\nCameron Mozie\nCarlos Fenollosa\nCarola Nitz\nChristian Suloway\nClemens Werther\nC.W. Betts\nDaniel Amm\nDaniel Verkamp\nDarko Jankovic\nDarrell Walisser\nDavid Robison\nDavid R Robison\nDennis Hamester\nDerek Buitenhuis\nDiogo Silva\nDominko Azdajic\nDonald Campbell\nDoney den Ouden\nDuncan McNamara\nDuncan McNAMARA\nElodie Thomann\nEmeric Grange\nEric Engestrom\nEtienne BRATEAU\nEugen Geist\nFabian Yamaguchi\nFabrizio Ge\nFabrizio Gennari\nFahad Al-Saidi\nFelix Abecassis\nFlorent Pillet\nForteve Zepushisti\nFrank Praznik\nGabriel de Perthuis\nGal Vinograd\nGaurav Pruthi\nGeoffrey Métais\nGian Marco Sibilla\nGilles Sabourin\nGina Dobrescu\nGonzalo Higuera Díaz\nGoran Dokic\nGuillaume Gomez\nHarald Sitter\nHeorhi Valakhanovich\nIan Chamberlain\nIbrahima SARR\nIgor Prokopenkov\nIon Agorria\nJarrad Whitaker\nJean-Yves Avenard\nJed Smith\nJérémy Carrier\nJeremy Huddleston Sequoia\nJerome Forissier\nJim Bankoski\nJonas Lundqvist\nJonatan \"jaw\" Wallmander\nJonathan Calmels\nJonathan Heard\nJonathan McGowan\nJonathan Thambidurai\nJoni Räsänen\nJosef Andersson\nJoseph DeVore\nJulian Scheel\nJustin Kim\nKaarlo Räihä\nKamil Rytarowski\nKazuki Yamaguchi\nKonstantin K. Beliak\nKonstantinos Tsanaktsidis\nKonstantin Pavlov\nKornel Lesiński\nOlivier Langlois\nLochlin Duperron\nLukas Juhrich\nLyndon Brown\nMarc Aldorasi\nMarcel Schnirring\nMarc Etcheverry\nMariusz Wasak\nMark Becwar\nMartell Malone\nMathieu Malaterre\nMathieu Parent\nMathieu Velten\nMatthias Keiser\nMatthias Treydte\nMax Dilipovich\nMaxim Bublis\nMaxime CHAPELET\nMaxime Mouchet\nMichael Tänzer\nMiha Sokolov\nMohammed (Shaan) Huzaifa Danish\nMoti Zilberman\nNathan Egge\nNiklas Haas\nOdd-Arild Kristensen\nO. Hartmann\nOlaf Hering\nOliver Collyer\nPaul B Mahol\nPaul Clark\nPaulo Vitor Magacho da Silva\nPavol Babincak\nPaweł Stankowski\nPetter Reinholdtsen\nPhilip Höhlein\nPierre-Hugues Husson\nPierre Lamot\nPyry Kontio\nRadek Vybiral\nRafael Waldo Delgado Doblas\nRajeesh K V\nRay Tiley\nReka Inovan\nRemita Amine\nRicardo Ribalda Delgado\nRichard Diamond\nRinat Ibragimov\nRobert Mourning\nRomain Bentz\nRomain Fliedel\nRomain Vimont\nRonald S. Bultje\nRoss Finlayson\nSam Malone\nSamuel Martin\nSamuel Thibault\nSanchit Arora\nSantiago Gimeno\nSebastian Ramacher\nSebastian Roth\nSergey Bolshakov\nShaleen Jain\nShlomi Fish\nSimona-Marinela Prodea\nStanislas Plessia\nStefan Pöschel\nSteven Toth\nSushma Reddy\nTakahito Hirano\nT. Chomphuming\nThierry Foucu\nThomas Nigro\nTim Allen\nTim Walker\nTobias Conradi\nTony Gaillard\nBenoît Tuduri\nTzu-Jung Lee\nUwe L. Korn\nValentin Deniaud\nValentin Vetter\nValter Correia\nVianney Boyer\nVictorien Le Couviour--Tuffet\nVikram Fugro\nVinson Lee\nWayne McDougall\nWieland Hoffmann\nWills Wang\nXabier Aramendi\nYaşar Tay\nYidong Ren\nYuudai Yamashigi\nZhao Zhili\nأحمد المحم ودي (Ahmed El-Mahmoudy)\nБаярсайхан Энхтайван\nСергей Дарьичев\n\nArtwork\n-------\nDamien Erambert\nDaniel Dreibrodt, aka aLtgLasS\nDavid Weber\nDavor Orel\nDominic Spitaler\nDoney den Ouden\nEurodata Computer Club\nGeoffrey Roussel\nJoeri van Dooren\nkty0ne\nMax Rudberg\nRichard Øiestad\nSimon Damkjær Andersen\nTom Bigelajzen\nVincent van den Heuvel\n\nDocumentation\n-------------\nBill Eldridge\n\nLocalization\n------------\nAbdul Fousan - Tamil\nA. Decorte - Friulian\nA. Regnander - Swedish\nAdem Gunes - Turkish\nAdi Nugroho - Tagalog\nAdnan Memija - Bosnian\nairplanez - Korean\nAjith Manjula - Sinhala\nAled Powell - Welsh\nAlexander Didebulidze - Georgian\nAlexander Henket - Dutch\nAlexander Jansen - Norwegian Bokmål\nAlexander Lakhin - Russian\nAlexey Lugin - Ukrainian\nAlexey Salmin - Russian\nAlfred John - Acoli\nAmanpreet Singh Alam - Punjabi\nAndré de Barros Martins Ribeiro - Brazilian portuguese\nAndrey Brilevskiy - Russian\nAndrey Wolk - Russian\nAndri Pálsson - Icelandic\nAndriy Bandura - Ukrainian\nAnh Phan - Vietnamese\nAniket Eknath Kudale - Marathi\nAnimesh Swar - Nepalese\nAputsiaĸ Niels Janussen - Danish\nAra Bextiyar - Sorani (Kurdish)\nAri Constâncio - Portuguese\nArkadiusz Lipiec - Polish\nAsk Hjorth Larsen - Danish\nAudrey Prevost - French\nAuk Piseth - Khmer\nBayarsaikhan Enkhtaivan Баярсайхан Энхтайван - Mongolian\nBiraj Karmakar - Bengali (India)\nBruno Queirós - Portuguese\nBruno Vella - Italian\nCaner Başaran - Turkish\nCarlo Calabrò - Italian\nChandan Kumar - Hindi\nChesús Daniel Trigo - Aragonese\nChristoph Miebach - German\nChynggyz Jumaliev - Kirgyz\nCirco Radu - Romanian\nCristian Secară - Romanian\nDaniel Nylander - Swedish\nDaniel Winzen - German\nDavid González - Spanish\nDavid Planella - Catalan\nDean Lee - Simplified Chinese\nDenis Arnaud - Breton\nDerk-Jan Hartman - Dutch\nDirektX - Hungarian\nDominko Aždajić - Croatian\nDylan Aïssi - French\nĐorđe Vasiljević - Serbian\nEduard Babayan - Armenian\nEero - Estonian\nEirik U. Birkeland - Norwegian Nynorsk\nElizabeth Da Conceicao Baptista - Tetum\nEmilio Sepúlveda - Interlingua\nEmin Mastizada - Azerbaijani\nÉric Lassauge - French\nFarzaneh Sarafraz - Persian\nFlorence Tushabe - Chiga\nFouzia Bourai - Arabic\nFrank Chao - Traditional Chinese\nFreyr Gunnar Ólafsson - Icelandic\nFriedel Wolff - Afrikaans\nFumio Nakayama - Japanese\nGabor Kelemen - Hungarian\nGaurav Kumar - Hindi\nGaëtan Rousseaux - Walloon\nGhjuvan Pasquinu - Corsican\nGoce Manevski - Macedonian\nGolam Maruf Oovee - Bengali\nGonçalo Cordeiro - Galician\nGorana Milicevic - Serbian\nGoswami Hardikpuri Kishorpuri - Gujarati\nHaakon Meland Eriksen - Norwegian\nHan HoJoong - Korean\nHardik Kishorpuri Goswami - Gujarati\nHemanta Nandi - Bengali (India)\nHugo Carvalho - Portuguese\nHuw Waters - Welsh\nH.Shalitha Vikum - Sinhala\nIbrahima Sarr - Fulah\nIngmārs Dīriņš - Latvian\nIsrat Jahan - Bengali\nIvar Smolin - Estonian\nIván Seoane Pardo - Galician\nIvo Ivanov - Bulgarian\nIñaki Larrañaga Murgoitio - Basque\nIñigo Varela - Asturian; Bable\nJakub Žáček - Czech\nJames Olweny - Ganda\nJamil Ahmed - Bengali\nJavier Varela - Spanish\nJean-Pierre Kuypers - French\nJens Seidel - German\nJoao Almeida - Portuguese\nJoel Arvidsson - Swedish\njogijs - Latvian\nJonas Larsen - Danish\nJon Stødle - Norwegian Nynorsk\nJouni Kähkönen - Finnish\nJuha Jeronen - Finnish\nJulen Ruiz Aizpuru - Basque\nKai Hermann - German\nKamil Páral - Czech\nKang Jeong-Hee - Korean\nKasper Tvede - Danish\nKaya Zeren - Turkish\nKenneth Nielsen - Danish\nKhin Mi Mi Aung - Burmese\nKhoem Sokhem - Khmer\nKola - Albanian\nKypchak Kypchak - Kazakh\nLaurent Jonqueres - Occitan\nLoba Yeasmeen - Bengali\nLorena Gomes - Catalan\nLorenzo Porta - Italian\nLuqman Hakim - Indonesian\nL. Balasubramaniam - Hindi\nMahrazi Mohd Kamal - Malay\nManolis Stefanis - Modern Greek\nManuela Silva/Alfredo Silva - Portuguese\nMarián Hikaník - Slovak\nMario Siegmann - German\nMarko Uskokovic - Serbian\nMartin Srebotnjak - Slovenian\nMartin Zicha - Czech\nMatej Urbančič - Slovenian\nMathias C. Berens, welcome-soft - German\nMattias Põldaru - Estonian\nMd. Rezwan Shahid - Bengali\nMeelad Zakaria - Persian\nMichael Bauer - Scottish Gaelic\nMichal Halenka - Czech\nMichał Trzebiatowski - Polish\nMiguel Sousa - Portuguese\nMihkel Kirjutas - Estonian\nMindaugas Baranauskas - Lithuanian\nMiroslav Oujeský - Czech\nMorten Brix Pedersen - Danish\nMustafa Sandal - Czech\nMyckel Habets - Dutch\nNamhyung Kim - Korean\nNiels Fanøe - Danish\nNiklas 'Nille' Åkerström - Swedish\nOlav Dahlum - Norwegian Bokmål\nOleksandr Natalenko - Ukrainian\nOmer Ensari - Kurmanji (Kurdish)\nOsama Khalid - Arabic\nOtto Kekäläinen - Finnish\nParas Nath Chaudhary - Nepali\nPasindu Kavinda - Sinhala\nPau Iranzo - Catalan\nPaula Iglesias - Galician\nPedro Valadares - Portuguese\nPeter Jespersen - Danish\nPetr Šimáček - Czech\nPhan Anh - Vietnamese\nPhilipp Weissenbacher - German\nPittayakom Saingtong - Thai\nPrasannajit Acharya - Oriya\nPraveen Illa - Telugu\nPredrag Ljubenović - Serbian\nPyae Sone - Burmese\nRajnikant Kumbhar - Marathi\nRicardo Perdigão - Portuguese\nRicardo Pérez López - Spanish\nRoustam Ghizdatov - Russian\nRuei-Yuan Lu - Traditional Chinese\nSaad Liaquat Kiani - Urdu\nSadia Afroz - Bengali\nSaid Marjan Zazai - Pashto\nSalar Khalilzadeh - Persian\nSam Askari - Spanish\nSam Hocevar - British\nSamuel Hocevar - French\nSaúl Ortega - Spanish\nSavvas Nesseris - Modern Greek\nSayan Chowdhury - Hindi\nSeanán Ó Coistín - Irish\nSemsudin Abdic - Bosnian\nShambhu Kumar - Hindi\nShantanu Sarkar - Hindi\nShashi Ranjan - Hindi\nSiarhei Daryichau Дар'ічаў Сяргей - Belarusian\nSidney Doria - Brazilian Portuguese\nSigmund Augdal - Norwegian Bokmål\nSimos Xenitellis - Modern Greek\nSipho Sibiya - Zulu\nSok Sophea - Khmer\nSolomon Gizaw - Amharic\nSreejith P - Malayalam\nSuraj Kawade - Marathi\nStian Jørgensrud - Norwegian Bokmål\nSveinn í Felli - Icelandic\nTadashi Jokagi - Japanese\nTarsem Singh - Hindi\nThanakrit Chomphuming - Thai\nTero Pelander - Finnish\nThomas De Rocker - Dutch\nThomas Graf - gettext support, German\nTomáš Chvátal - Czech\nTòni Galhard - Occitan\nUmesh Agarwal - Bengali (India)\nUmidjon Almasov - Uzbek\nVáclav Pavlíček - Czech\nValek Filippov - Russian\nVicente Jimenez Aguilar - Spanish\nVincenzo Reale - Italian\nVít Pelčák - Czech\nviyyer - Hindi\nVladimir Yermolayev - Russian\nVojtěch Smejkal - Czech\nWei Mingzhi - Simplified Chinese\nXènia Albà Cantero - Catalan\nXuacu Saturio - Asturian\nYaron Shahrabani - Hebrew\nYaşar Tay - Turkish\nYhal Htet Aung - Burmese\nYogesh K S - Kannada\nYoyo - Simplified Chinese\nYuksel Yildirim - Turkish\nZabeeh Khan - Pashto\nZhang Tong - Chinese\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 17.66796875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "COPYING.LIB",
          "type": "blob",
          "size": 25.908203125,
          "content": "                  GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 2.1, February 1999\n\n Copyright (C) 1991, 1999 Free Software Foundation, Inc.\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n[This is the first released version of the Lesser GPL.  It also counts\n as the successor of the GNU Library Public License, version 2, hence\n the version number 2.1.]\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicenses are intended to guarantee your freedom to share and change\nfree software--to make sure the software is free for all its users.\n\n  This license, the Lesser General Public License, applies to some\nspecially designated software packages--typically libraries--of the\nFree Software Foundation and other authors who decide to use it.  You\ncan use it too, but we suggest you first think carefully about whether\nthis license or the ordinary General Public License is the better\nstrategy to use in any particular case, based on the explanations below.\n\n  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n\n  To protect your rights, we need to make restrictions that forbid\ndistributors to deny you these rights or to ask you to surrender these\nrights.  These restrictions translate to certain responsibilities for\nyou if you distribute copies of the library or if you modify it.\n\n  For example, if you distribute copies of the library, whether gratis\nor for a fee, you must give the recipients all the rights that we gave\nyou.  You must make sure that they, too, receive or can get the source\ncode.  If you link other code with the library, you must provide\ncomplete object files to the recipients, so that they can relink them\nwith the library after making changes to the library and recompiling\nit.  And you must show them these terms so they know their rights.\n\n  We protect your rights with a two-step method: (1) we copyright the\nlibrary, and (2) we offer you this license, which gives you legal\npermission to copy, distribute and/or modify the library.\n\n  To protect each distributor, we want to make it very clear that\nthere is no warranty for the free library.  Also, if the library is\nmodified by someone else and passed on, the recipients should know\nthat what they have is not the original version, so that the original\nauthor's reputation will not be affected by problems that might be\nintroduced by others.\n\f\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\nconsistent with the full freedom of use specified in this license.\n\n  Most GNU software, including some libraries, is covered by the\nordinary GNU General Public License.  This license, the GNU Lesser\nGeneral Public License, applies to certain designated libraries, and\nis quite different from the ordinary General Public License.  We use\nthis license for certain libraries in order to permit linking those\nlibraries into non-free programs.\n\n  When a program is linked with a library, whether statically or using\na shared library, the combination of the two is legally speaking a\ncombined work, a derivative of the original library.  The ordinary\nGeneral Public License therefore permits such linking only if the\nentire combination fits its criteria of freedom.  The Lesser General\nPublic License permits more lax criteria for linking other code with\nthe library.\n\n  We call this license the \"Lesser\" General Public License because it\ndoes Less to protect the user's freedom than the ordinary General\nPublic License.  It also provides other free software developers Less\nof an advantage over competing non-free programs.  These disadvantages\nare the reason we use the ordinary General Public License for many\nlibraries.  However, the Lesser license provides advantages in certain\nspecial circumstances.\n\n  For example, on rare occasions, there may be a special need to\nencourage the widest possible use of a certain library, so that it becomes\na de-facto standard.  To achieve this, non-free programs must be\nallowed to use the library.  A more frequent case is that a free\nlibrary does the same job as widely used non-free libraries.  In this\ncase, there is little to gain by limiting the free library to free\nsoftware only, so we use the Lesser General Public License.\n\n  In other cases, permission to use a particular library in non-free\nprograms enables a greater number of people to use a large body of\nfree software.  For example, permission to use the GNU C Library in\nnon-free programs enables many more people to use the whole GNU\noperating system, as well as its variant, the GNU/Linux operating\nsystem.\n\n  Although the Lesser General Public License is Less protective of the\nusers' freedom, it does ensure that the user of a program that is\nlinked with the Library has the freedom and the wherewithal to run\nthat program using a modified version of the Library.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.  Pay close attention to the difference between a\n\"work based on the library\" and a \"work that uses the library\".  The\nformer contains code derived from the library, whereas the latter must\nbe combined with the library in order to run.\n\f\n                  GNU LESSER GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License Agreement applies to any software library or other\nprogram which contains a notice placed by the copyright holder or\nother authorized party saying it may be distributed under the terms of\nthis Lesser General Public License (also called \"this License\").\nEach licensee is addressed as \"you\".\n\n  A \"library\" means a collection of software functions and/or data\nprepared so as to be conveniently linked with application programs\n(which use some of those functions and data) to form executables.\n\n  The \"Library\", below, refers to any such software library or work\nwhich has been distributed under these terms.  A \"work based on the\nLibrary\" means either the Library or any derivative work under\ncopyright law: that is to say, a work containing the Library or a\nportion of it, either verbatim or with modifications and/or translated\nstraightforwardly into another language.  (Hereinafter, translation is\nincluded without limitation in the term \"modification\".)\n\n  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning a program using the Library is not restricted, and output from\nsuch a program is covered only if its contents constitute a work based\non the Library (independent of the use of the Library in a tool for\nwriting it).  Whether that is true depends on what the Library does\nand what the program that uses the Library does.\n\n  1. You may copy and distribute verbatim copies of the Library's\ncomplete source code as you receive it, in any medium, provided that\nyou conspicuously and appropriately publish on each copy an\nappropriate copyright notice and disclaimer of warranty; keep intact\nall the notices that refer to this License and to the absence of any\nwarranty; and distribute a copy of this License along with the\nLibrary.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\nof it, thus forming a work based on the Library, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) The modified work must itself be a software library.\n\n    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n    table of data to be supplied by an application program that uses\n    the facility, other than as an argument passed when the facility\n    is invoked, then you must make a good faith effort to ensure that,\n    in the event an application does not supply such function or\n    table, the facility still operates, and performs whatever part of\n    its purpose remains meaningful.\n\n    (For example, a function in a library to compute square roots has\n    a purpose that is entirely well-defined independent of the\n    application.  Therefore, Subsection 2d requires that any\n    application-supplied function or table used by this function must\n    be optional: if the application does not supply it, the square\n    root function must still compute square roots.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Library,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Library, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\nwith the Library (or with a work based on the Library) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may opt to apply the terms of the ordinary GNU General Public\nLicense instead of this License to a given copy of the Library.  To do\nthis, you must alter all the notices that refer to this License, so\nthat they refer to the ordinary GNU General Public License, version 2,\ninstead of to this License.  (If a newer version than version 2 of the\nordinary GNU General Public License has appeared, then you can specify\nthat version instead if you wish.)  Do not make any other change in\nthese notices.\n\f\n  Once this change is made in a given copy, it is irreversible for\nthat copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\nderivative of it, under Section 2) in object code or executable form\nunder the terms of Sections 1 and 2 above provided that you accompany\nit with the complete corresponding machine-readable source code, which\nmust be distributed under the terms of Sections 1 and 2 above on a\nmedium customarily used for software interchange.\n\n  If distribution of object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the\nsource code from the same place satisfies the requirement to\ndistribute the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  5. A program that contains no derivative of any portion of the\nLibrary, but is designed to work with the Library by being compiled or\nlinked with it, is called a \"work that uses the Library\".  Such a\nwork, in isolation, is not a derivative work of the Library, and\ntherefore falls outside the scope of this License.\n\n  However, linking a \"work that uses the Library\" with the Library\ncreates an executable that is a derivative of the Library (because it\ncontains portions of the Library), rather than a \"work that uses the\nlibrary\".  The executable is therefore covered by this License.\nSection 6 states terms for distribution of such executables.\n\n  When a \"work that uses the Library\" uses material from a header file\nthat is part of the Library, the object code for the work may be a\nderivative work of the Library even though the source code is not.\nWhether this is true is especially significant if the work can be\nlinked without the Library, or if the work is itself a library.  The\nthreshold for this to be true is not precisely defined by law.\n\n  If such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small inline\nfunctions (ten lines or less in length), then the use of the object\nfile is unrestricted, regardless of whether it is legally a derivative\nwork.  (Executables containing this object code plus portions of the\nLibrary will still fall under Section 6.)\n\n  Otherwise, if the work is a derivative of the Library, you may\ndistribute the object code for the work under the terms of Section 6.\nAny executables containing that work also fall under Section 6,\nwhether or not they are linked directly with the Library itself.\n\f\n  6. As an exception to the Sections above, you may also combine or\nlink a \"work that uses the Library\" with the Library to produce a\nwork containing portions of the Library, and distribute that work\nunder terms of your choice, provided that the terms permit\nmodification of the work for the customer's own use and reverse\nengineering for debugging such modifications.\n\n  You must give prominent notice with each copy of the work that the\nLibrary is used in it and that the Library and its use are covered by\nthis License.  You must supply a copy of this License.  If the work\nduring execution displays copyright notices, you must include the\ncopyright notice for the Library among them, as well as a reference\ndirecting the user to the copy of this License.  Also, you must do one\nof these things:\n\n    a) Accompany the work with the complete corresponding\n    machine-readable source code for the Library including whatever\n    changes were used in the work (which must be distributed under\n    Sections 1 and 2 above); and, if the work is an executable linked\n    with the Library, with the complete machine-readable \"work that\n    uses the Library\", as object code and/or source code, so that the\n    user can modify the Library and then relink to produce a modified\n    executable containing the modified Library.  (It is understood\n    that the user who changes the contents of definitions files in the\n    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n    d) If distribution of the work is made by offering access to copy\n    from a designated place, offer equivalent access to copy the above\n    specified materials from the same place.\n\n    e) Verify that the user has already received a copy of these\n    materials or that you have already sent this user a copy.\n\n  For an executable, the required form of the \"work that uses the\nLibrary\" must include any data and utility programs needed for\nreproducing the executable from it.  However, as a special exception,\nthe materials to be distributed need not include anything that is\nnormally distributed (in either source or binary form) with the major\ncomponents (compiler, kernel, and so on) of the operating system on\nwhich the executable runs, unless that component itself accompanies\nthe executable.\n\n  It may happen that this requirement contradicts the license\nrestrictions of other proprietary libraries that do not normally\naccompany the operating system.  Such a contradiction means you cannot\nuse both them and the Library together in an executable that you\ndistribute.\n\f\n  7. You may place library facilities that are a work based on the\nLibrary side-by-side in a single library together with other library\nfacilities not covered by this License, and distribute such a combined\nlibrary, provided that the separate distribution of the work based on\nthe Library and of the other library facilities is otherwise\npermitted, and provided that you do these two things:\n\n    a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities.  This must be distributed under the terms of the\n    Sections above.\n\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\nattempt otherwise to copy, modify, sublicense, link with, or\ndistribute the Library is void, and will automatically terminate your\nrights under this License.  However, parties who have received copies,\nor rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n\n  9. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Library or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Library (or any work based on the\nLibrary), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties with\nthis License.\n\f\n  11. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Library.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply,\nand the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  12. If the distribution and/or use of the Library is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Library under this License may add\nan explicit geographical distribution limitation excluding those countries,\nso that distribution is permitted only in or among countries not thus\nexcluded.  In such case, this License incorporates the limitation as if\nwritten in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Library\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation.  If the Library does not specify a\nlicense version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\nSoftware Foundation; we sometimes make exceptions for this.  Our\ndecision will be guided by the two goals of preserving the free status\nof all derivatives of our free software and of promoting the sharing\nand reuse of software generally.\n\n                            NO WARRANTY\n\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\f\n           How to Apply These Terms to Your New Libraries\n\n  If you develop a new library, and you want it to be of the greatest\npossible use to the public, we recommend making it free software that\neveryone can redistribute and change.  You can do so by permitting\nredistribution under these terms (or, alternatively, under the terms of the\nordinary General Public License).\n\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2.1 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public\n    License along with this library; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n\nAlso add information on how to contact you by electronic and paper mail.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the library, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the\n  library `Frob' (a library for tweaking knobs) written by James Random Hacker.\n\n  <signature of Ty Coon>, 1 April 1990\n  Ty Coon, President of Vice\n\nThat's all there is to it!\n"
        },
        {
          "name": "Cargo.toml",
          "type": "blob",
          "size": 0.130859375,
          "content": "[workspace]\nmembers = [\n    \"src/rust/vlcrs-*\",\n]\nresolver = \"2\"\n\n[workspace.package]\nversion = \"4.0.0\"\nlicense = \"LGPL-2.1-or-later\"\n"
        },
        {
          "name": "INSTALL",
          "type": "blob",
          "size": 1.392578125,
          "content": "INSTALL file for the VLC media player\n=====================================\n\nMore extensive information for *nix, Windows and Mac OS X users can be\nfound here: http://wiki.videolan.org/Compile_VLC\n\nPeople installing VLC for Windows from source MUST read:\nhttp://wiki.videolan.org/Win32Compile\n\nBootstrapping VLC\n=================\n\nIf you retrieved VLC from the git server and do not have yet a \"configure\"\nscript, please run:\n\n    ./bootstrap\n\nConfiguring VLC\n===============\n\nA typical way to configure VLC is:\n\n   ./configure\n\nSee `./configure --help' for more information.\n\nIf you intend to debug stuff, you may want to compile with debugging\nsymbols:\n\n   make distclean ; ./configure --enable-debug\n\nWe recommend using either GCC or Clang/LLVM to build VLC. Specifically,\nGCC version 5 or higher, or Clang/LLVM version 3.4 or higher are required.\nOther compilers with compatible feature sets should also work.\n\n\nBuilding VLC\n============\n\nOnce configured, run `make' to build VLC.\n\n\nInstalling and running VLC\n==========================\n\nYou can install the VLC and its plugins by typing:\n\n   make install\n\nBut you don't need to install it if you don't want to; VLC can be launched\nfrom the current directory as well:\n\n   ./vlc\n\n\nBuilding packages\n=================\n\nTo build a Debian package, you need to get the packaging info\n   git clone git://git.debian.org/pkg-multimedia/vlc.git debian\nand then\n   git-buildpackage\n"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 6.384765625,
          "content": "###############################################################################\n# Automake targets and declarations\n###############################################################################\n\n# SUBDIRS stores the directories where a \"make\" is required when building\n# something. DIST_SUBDIRS stores the directories where nothing is built but\n# which have makefiles with distribution information.\n#  - src (libvlccore) is nedeed by modules\nSUBDIRS = compat po share src modules lib doc bin test\nDIST_SUBDIRS = m4 $(SUBDIRS)\n\nEXTRA_DIST = \\\n\tbuildsystem/cargo-test.py \\\n\tbuildsystem/check_qml_module.py \\\n\textras/include/x86/x86inc.asm \\\n\textras/include/x86/x86util.asm \\\n\textras/package/macosx/package.mak \\\n\textras/package/win32/package.mak \\\n\textras/package/npapi.am\n\ndist_noinst_SCRIPTS = bootstrap\nnodist_noinst_SCRIPTS = compile\n\nBUILT_SOURCES_distclean =\n\nBUILT_SOURCES = $(BUILT_SOURCES_distclean)\n\nSUFFIXES =\n\nAM_DISTCHECK_CONFIGURE_FLAGS = \\\n\t--enable-fast-install \\\n\t--disable-alsa \\\n\t--disable-avcodec --disable-avformat \\\n\t--disable-postproc --disable-swscale \\\n\t--disable-dbus \\\n\t--disable-mad \\\n\t--disable-faad --disable-skins2 \\\n\t--disable-live555 \\\n\t--disable-lua \\\n\t--disable-fribidi \\\n\t--with-kde-solid='$${datadir}/kde4/apps'\n\nAUTOMAKE_OPTIONS = \\\n\t1.11 \\\n\t-Wall \\\n\tcheck-news \\\n\tdist-xz \\\n\tno-dist-gzip\n#\tstd-options\n\nChangeLog: Makefile.am\n\trm -f -- \"$@\"\n\tcd doc && $(MAKE) $(AM_MAKEFLAGS) changelogs\n\t$(LN_S) -f doc/ChangeLog-2024 \"$@\"\n\n\n###############################################################################\n# tools (needed for contrib)\n##############################################################################\nEXTRA_DIST += \\\n\textras/tools/bootstrap \\\n\textras/tools/packages.mak \\\n\textras/tools/tools.mak \\\n\textras/tools/SHA512SUMS \\\n\textras/tools/automake-clang.patch \\\n\textras/tools/cmake-enable-ALPN-support-on-macOS-10.14.patch \\\n\textras/tools/libtool-2.4.7-bitcode.patch \\\n\textras/tools/libtool-2.4.7-clang-libs.patch \\\n\textras/tools/libtool-2.4.7-response-files.patch \\\n\textras/tools/libtool-2.4.7-lpthread.patch \\\n\textras/tools/libtool-2.4.7-embed-bitcode.patch\n\n###############################################################################\n# Various utilities ( editor syntax files, D-Bus controller ... )\n##############################################################################\nEXTRA_DIST += \\\n\textras/analyser/zsh_completion.sh \\\n\textras/analyser/zsh.cpp \\\n\textras/analyser/emacs.init \\\n\textras/analyser/vlc.vim \\\n\textras/analyser/valgrind.suppressions \\\n\textras/buildsystem/make.pl \\\n\textras/misc/mpris.py \\\n\textras/misc/mpris.xml\n\n###############################################################################\n# Scripts for building dependencies.\n##############################################################################\nEXTRA_DIST += \\\n\tcontrib/bootstrap \\\n\tcontrib/src\n\n###############################################################################\n# Building libvlc\n###############################################################################\n\nCLEANFILES =\nDISTCLEANFILES = $(BUILT_SOURCES_distclean) compile doltcompile doltlibtool\nMAINTAINERCLEANFILES = ChangeLog\n\n# Shortcut for developers to rebuild the core (libvlc + vlc)\n# Don't use it if you don't know what it is about.\n# Don't complain if it doesn't work. -- Courmisch\nlibcompat:\n\tcd compat && $(MAKE) $(AM_MAKEFLAGS)\n\nlibvlccore: libcompat\n\tcd src && $(MAKE) $(AM_MAKEFLAGS) libvlccore.la\n\nlibvlc: libvlccore\n\tcd lib && $(MAKE) $(AM_MAKEFLAGS) libvlc.la\n\ncore: libvlc vlc$(EXEEXT)\n\tcd bin && $(MAKE) $(AM_MAKEFLAGS) vlc$(EXEEXT) vlc-static$(EXEEXT)\n\ndoc:\n\tcd doc && $(MAKE) $(AM_MAKEFLAGS) doc\n\n.PHONY: libvlc core doc\n\n###############################################################################\n# Building aliases\n###############################################################################\n\nALL_ALIASES = cvlc rvlc svlc qvlc nvlc\nif BUILD_VLC\nbin_SCRIPTS = $(ALIASES)\nendif\nCLEANFILES += $(ALIASES) $(noinst_SCRIPTS)\nEXTRA_SCRIPTS = $(ALL_ALIASES)\n\ndist_noinst_SCRIPTS += make-alias\n\nMKALIAS = bindir=\"$(bindir)\" transform=\"$(transform)\" program_prefix=\"$(program_prefix)\" program_suffix=\"$(program_suffix)\" $(top_srcdir)/make-alias $@\n\ncvlc: make-alias Makefile\n\t$(AM_V_GEN)$(MKALIAS) dummy\n\nrvlc: make-alias Makefile\n\t$(AM_V_GEN)$(MKALIAS) rc\n\nsvlc: make-alias Makefile\n\t$(AM_V_GEN)$(MKALIAS) skins2\n\nqvlc: make-alias Makefile\n\t$(AM_V_GEN)$(MKALIAS) qt\n\nnvlc: make-alias Makefile\n\t$(AM_V_GEN)$(MKALIAS) ncurses\n\nif BUILD_VLC\nnoinst_SCRIPTS = vlc$(EXEEXT)\nendif\n\nvlc$(EXEEXT):\nif HAVE_DARWIN\n\t$(AM_V_GEN)$(LN_S) -f bin/vlc-osx-static vlc\nelse\n\t$(AM_V_GEN)$(LN_S) -f bin/vlc-static$(EXEEXT) vlc$(EXEEXT)\nendif\n\nTESTS = test/run_vlc.sh\ndist_noinst_SCRIPTS += test/run_vlc.sh\n\nif BUILD_VLC\n###############################################################################\n# Installing plugins cache\n###############################################################################\ninstall-exec-hook:\n\tif test \"$(build)\" = \"$(host)\"; then \\\n\t\tPATH=\"$(DESTDIR)$(bindir):$$PATH\" \\\n\t\tLD_LIBRARY_PATH=\"$(DESTDIR)$(libdir):$$LD_LIBRARY_PATH\" \\\n\t\tDYLD_LIBRARY_PATH=\"$(DESTDIR)$(libdir):$$DYLD_LIBRARY_PATH\" \\\n\t\t\"$(DESTDIR)$(pkglibexecdir)/vlc-cache-gen$(EXEEXT)\" \\\n\t\t\t \"$(DESTDIR)$(pkglibdir)/plugins\" ; \\\n\telse \\\n\t\techo \"Cross-compilation: cache generation skipped!\" ; \\\n\tfi\nendif\n\nuninstall-hook:\n\trm -f -- \"$(DESTDIR)$(pkglibdir)/plugins/plugins.dat\"\n\n###############################################################################\n# Test coverage\n###############################################################################\n\nlcov-raw.out:\n\t$(MAKE) $(AM_MAKEFLAGS) all\n\tlcov -z -d .\n\t$(MAKE) $(AM_MAKEFLAGS) check\n\tlcov -c -d . -o lcov-raw.out\n\nlcov.out: lcov-raw.out\n\tlcov -r lcov-raw.out -o lcov.out \\\n\t\t'*test*' 'contrib/*' '/usr/include/*' '*mock*'\n\nlcov: lcov.out\n\trm -Rf lcov lcov.tmp\n\tprefix=\"$$(cd \"$(top_srcdir)\" && pwd)\" ; \\\n\tgenhtml -p \"$$prefix\" -o lcov.tmp lcov.out >/dev/null\n\tmv lcov.tmp lcov\n\n.PHONY: lcov-raw.out\n\n\n###############################################################################\n# PO translation files update\n###############################################################################\n.PHONY: update-po\n\nupdate-po:\n\tcd po && $(MAKE) POTFILES vlc.pot update-po\n\n###############################################################################\n# OS Packaging rules\n###############################################################################\ninclude extras/package/macosx/package.mak\ninclude extras/package/win32/package.mak\ninclude extras/package/win32/msi.mak\n\n"
        },
        {
          "name": "NEWS",
          "type": "blob",
          "size": 202.931640625,
          "content": "Changes between 3.0.x and 4.0.0-dev:\n--------------------------------\n\nPlatform support changes:\n * 4.0.x requires:\n     - Windows 7/2008 R2 or later (with KB2533623 installed)\n     - macOS 10.11 or later\n     - iOS 9 or later\n     - Android 4.1.x or later (API-16)\n     - GCC 8.0 or Clang 8 (or equivalent)\n * Windows on ARM is now supported\n * Universal Windows is only supported for Windows 10 (not Windows 8 anymore)\n\nCore:\n * New output clock (internal):\n     - The input clock (PCR) or the audio output can drive the output clock\n     - By default, the audio output will drive the output clock: no more audio\n       resampling or flush when the audio is late or early\n * New medialibrary (vlc_media_library.h)\n * New player (vlc_player.h):\n     - Replace the input_thread_t API that is now internal\n     - One instance is used to play subsequent medias\n     - Allow multiple track selection\n     - Fix TOCTOU issues (the player lock is exposed)\n * New mediatree and mediasource (vlc_media_source.h)\n     - Browse local network and service discoveries\n * New playlist (vlc_playlist.h)\n     - Replace the previous one\n     - Flat, new random implementation\n     - Can't browse anymore (cf. mediatree)\n * Add support for dual subtitles selection (via the player)\n * Support of HTML help (via the vlc_plugin.h:set_help_html macro)\n\nAudio output:\n * PipeWire (native) audio output support\n * ALSA: HDMI passthrough support.\n   Use --alsa-passthrough to configure S/PDIF or HDMI passthrough.\n * Remove the DirectSound plugin (API obsolete after Windows 7)\n\nDemuxer:\n * Support for HEIF image and grid image formats\n * Support for Farbfeld images\n * Support for DASH WebM\n * Support for DVBSUB in mkv\n * Support for DAV video files\n * Improved Bluray menus, clips and stream selection\n * Support chapters in mp3 files\n * Support for DMX audio music (MUS) files\n\nCodecs:\n * Support for experimental AV1 video encoding\n * WebVTT encoder\n * Remove iomx support for Android\n * WebP image decoding\n * Support for SMPTE-TT image profile\n * Support for 16-bit greyscale\n * Support IMM4 decoder\n * Improve 708 decoder\n * Support AGM decoder\n * Support VP4 decoder\n * Add NVDEC hardware decoder\n * Remove SDL_image support\n\nAccess:\n * Enable SMB2 / SMB3 support on mobile ports with libsmb2\n * Added support for the RIST (Reliable Internet Stream Transport) Protocol\n * Added support for the AMT (Automatic Multicast Tunneling) Protocol\n * Added support for the Gopher Protocol\n * Added avaudiocapture module as a replacement for qtsound, which is removed now\n * Audio CD data tracks are now correctly detected and skipped\n * Deprecates Audio CD CDDB lookups in favor of more accurate Musicbrainz\n * Improved CD-TEXT and added Shift-JIS encoding support\n * Support for YoutubeDL (where available).\n * On-the-fly Zstandard (zstd) file decompression (where available).\n\nAccess output:\n * Added support for the RIST (Reliable Internet Stream Transport) Protocol\n * Added support for HTTP PUT (HTTP upload)\n\nVideo output:\n * Added X11 RENDER video output plugin\n * Remove aa plugin\n * Remove evas plugin\n * Remove omxil_vout plugin\n * Remove RealRTSP plugin\n * Remove Real demuxer plugin\n * Fix washed out black on NVIDIA cards with Direct3D9\n * On-Screen-Display is off by default in libvlc\n * Remove deprecated Linux framebuffer plugin\n * Removed VDPAU video output plugin (hardware decoder still present)\n\nAudio filter:\n * Add RNNoise recurrent neural network denoiser\n\nVideo filter:\n * Update yadif\n * Remove remote OSD plugin\n\nStream output:\n * New SDI output with improved audio and ancillary support.\n   Candidate for deprecation of decklink vout/aout modules.\n * Support for DLNA/UPNP renderers\n * The \"udp\" access output module has been removed.\n   Please use the UDP stream output instead, e.g.:\n     Old: '#std{access=udp,mux=ts,dst=239.255.1.2:1234,sap}'\n     New: '#udp{dst=239.255.1.2:1234,sap}'\n\nMuxers:\n * MP4 files are no longer faststart by default\n\nService discovery:\n * Support Renderer discovery with avahi\n\nmacOS:\n * Remove Growl notification support\n * Improved AppleScript API with support for playback modes, recording, rate\n\nappleOS:\n * Improved proxy configuration handling\nChanges between 3.0.12.1 and 3.0.13:\n----------------------------------\n\nDemux:\n * Adaptive: fix artefacts in HLS streams with wrong profiles/levels\n * Fix regression on some MP4 files for the audio track\n * Fix MPGA and ADTS probing in TS files\n * Fix Flac inside AVI files\n * Fix VP9/Webm artefacts when seeking\n\nCodec:\n * Support SSA text scaling\n * Fix rotation on Android rotation\n * Fix WebVTT subtitles that start at 00:00\n\nAccess:\n * Update libnfs to support NFSv4\n * Improve SMB2 integration\n * Fix Blu-ray files using Unicode names on Windows\n * Disable mcast lookups on Android for RTSP playback\n\nVideo Output:\n * Rework the D3D11 rendering wait, to fix choppiness on display\n\nInterfaces:\n * Fix VLC getting stuck on close on X11 (#21875)\n * Improve RTL on preferences on macOS\n * Add mousewheel horizontal axis control\n * Fix crash on exit on macOS\n * Fix sizing of the fullscreen controls on macOS\n\nWindows:\n * Fix subtitles/OSD under Windows XP\n\nMisc:\n * Update translations\n * Improve MIDI fonts search on Linux\n * Update Soundcloud, Youtube, liveleak\n * Fix compilation with GCC11\n * Fix input-slave option for subtitles\n\n\nChanges between 3.0.12 and 3.0.12.1:\n----------------------------------\n\nmacOS:\n * 3.0.12.1 is the first release for Apple Silicon macs\n * Version bump to allow an automatic upgrade path\n\n\nChanges between 3.0.11.1 and 3.0.12:\n----------------------------------\n\nAccess:\n * Add new RIST access module compliant with simple profile (VSF_TR-06-1)\n\nAccess Output:\n * Add new RIST access output module compliant with simple profile (VSF_TR-06-1)\n\nDemux:\n * Fixed adaptive's handling of resolution settings\n * Improve Bluray tracks support\n * Improve WMV seeking and DASH support\n * Fix crashes in AVI, MKV modules\n\nAudio output:\n * Fix audio distortion on macOS during start of playback\n\nVideo Output:\n * Direct3D11: Fix some potential crashes when using video filters\n\nmacOS:\n * Add native support for Apple Silicon / ARM-64\n * Visual UI adaptations for macOS Big Sur\n * Fix displaying EQ bands in the UI depending on which frequency\n   presets are set for the EQ in advanced preferences\n * Fix UI issues in bookmarks window\n\nMisc:\n * Several fixes in the web interface, including privacy and security\n   improvements\n * Update YouTube and Vocaroo scripts\n * Fix rotation filter mouse handling\n * Update translations\n\n\nChanges between 3.0.11 and 3.0.11.1:\n----------------------------------\n\nDemux:\n * Fixed HLS playlist update mechanism, unable to start\n   in some cases.\n * Because of broken HLS servers, adaptive no longer\n   considers Content-Type as authoritative.\n * Fixed handling of WEBM WebVTT subtitles\n * Workaround invalid ADTS in TS from Makito encoders\n * Fixed Opus when using avformat demuxer\n\nDecoders:\n * Fixed inverted explicit start/end positioning\n\nService Discovery:\n * Fix listing of media on certain Panasonic recorders discovered via UPnP\n\nmacOS:\n * Fix automatic playback resume with \"Music\" app\n * Fix possible freeze after pause, seek, unpause\n\nContribs:\n * Updated gnutls to 3.6.14\n * Updated libebml to 1.4.0\n * Updated libmatroska to 1.6.0\n * Updated mpg123 to 1.26.2\n\n\nChanges between 3.0.10 and 3.0.11:\n----------------------------------\n\nAccess:\n * rtp descriptor leak on error fix\n\nDemux:\n * Fixed regression with some encrypted HLS streams\n * Live HLS delay until first update fix\n * HLS rendition switch regression fix\n * Fix imprecise m4a seek\n\nDecoder:\n * Fixed missing captions with some capture cards\n\nAudio filters:\n * soxr resampling fixes\n\nContribs:\n * Updated libfaad to 2.9.2 (Parametric Stereo regression)\n * Updated libarchive to 3.4.2\n\nmacOS:\n * Fixed moving video window with mouse\n * Fixed UI issue showing \"permissions warning\" unnecessarily often\n * Fixed stack buffer overflow listing bluray mount points\n * Fixed potential crashes at startup\n\nAudio Output:\n * Fix sound not coming back after a pause with CoreAudio (macOS/iOS)\n\nMisc:\n * Update Youtube script\n\n\nChanges between 3.0.9.2 and 3.0.10:\n----------------------------------\n\nMisc:\n * Update Twitch & VLSub scripts\n\n\nChanges between 3.0.9.1 and 3.0.9.2:\n----------------------------------\n\nMisc:\n * Properly bump the version in configure.ac\n\n\nChanges between 3.0.9 and 3.0.9.1:\n----------------------------------\n\nMisc:\n * Fix VLSub returning 401 for earch request\n\n\nChanges between 3.0.8 and 3.0.9:\n----------------------------------\n\nCore:\n * Work around busy looping when playing an invalid item through VLM\n\nAccess:\n * Multiple dvdread and dvdnav crashs fixes\n * Fixed DVD glitches on clip change\n * Fixed dvdread commands/data sequence inversion in some cases causing\n   unwanted glitches\n * Better handling of authored as corrupted DVD\n * Added libsmb2 support for SMB2/3 shares\n\nDemux:\n * Fix TTML entities not passed to decoder\n * Fixed some WebVTT styling tags being not applied\n * Misc raw H264/HEVC frame rate fixes\n * Fix adaptive regression on TS format change (mostly HLS)\n * Fixed MP4 regression with twos/sowt PCM audio\n * Fixed some MP4 raw quicktime and ms-PCM audio\n * Fixed MP4 interlacing handling\n * Multiple adaptive stack (DASH/HLS/Smooth) fixes\n * Enabled Live seeking for HLS\n * Fixed seeking in some cases for HLS\n * Improved Live playback for Smooth and DASH\n * Fixed adaptive unwanted end of stream in some cases\n * Faster adaptive start and new buffering control options\n\nPacketizers:\n * Fixes H264/HEVC incomplete draining in some cases\n * packetizer_helper: Fix potential trailing junk on last packet\n * Added missing drain in packetizers that was causing missing\n   last frame or audio\n * Improved check to prevent fLAC synchronization drops\n\nDecoder:\n * avcodec: revector video decoder to fix incomplete drain\n * avcodec: support Codec 2 decoding\n * spudec: implemented palette updates, fixing missing subtitles\n   on some DVD\n * Fixed WebVTT CSS styling not being applied on Windows/macOS\n * Fixed Hebrew teletext pages support in zvbi\n * Fixed Dav1d aborting decoding on corrupted picture\n * Extract and display of all CEA708 subtitles\n * Update libfaad to 2.9.1\n * Add DXVA support for VP9 Profile 2 (10 bits)\n * Mediacodec aspect ratio with Amazon devices\n\nAudio output:\n * Added support for iOS audiounit audio above 48KHz\n * Added support for amem audio up to 384KHz\n\nVideo output:\n * Fix for opengl glitches in some drivers\n * Fix GMA950 opengl support on macOS\n * YUV to RGB StretchRect fixes with NVIDIA drivers\n * Use libpacebo new tone mapping desaturation algorithm\n\nText renderer:\n * Fix crashes on macOS with SSA/ASS subtitles containing emoji\n * Fixed unwanted growing background in Freetype rendering and Y padding\n\nMux:\n * Fixed some YUV mappings\n\nmacOS:\n * Use a layer based video output on 10.14 and higher, which should\n   fix various rendering issues where the vout would glitch between\n   a wrong size and the correct size.\n   Additionally this works around OpenGL issues with Macs that have a\n   dedicated NVIDIA GPU, which caused rendering artifacts in the whole\n   OS, especially when the \"Reduce transparency\" accessibility option\n   is used\n * Remove qtsound module and add avaudiocapture module as replacement\n * Fix audio capture on macOS Catalina by using avaudiocapture\n * Inform the user in case OS permissions are missing for certain actions\n * Fix Apple Remote support on macOS Catalina\n * Add support for pausing Apple Music on macOS Catalina\n * Fix UPnP discovery crash without an active network interface\n * Fix rare placement issues with fullscreen panel\n * Fix problem in audio output remembering the last device configuration\n   in digital mode\n\nService Discovery:\n * Update libmicrodns to 0.1.2\n\nMisc:\n * Update YouTube, SoundCloud and Vocaroo scripts: this restores\n   playback of YouTube URLs.\n * Add missing .wpl & .zpl file associations on Windows\n * Improved chromecast audio quality\n\n\nChanges between 3.0.7.1 and 3.0.8:\n----------------------------------\n\nCore:\n * Fix stuttering for low framerate videos\n\nDemux:\n * Fix channel ordering in some MP4 files\n * Fix glitches in TS over HLS\n * Add real probing of HLS streams\n * Fix HLS MIME type fallback\n\nDecoder:\n * Fix WebVTT subtitles rendering\n\nStream filter:\n * Improve network buffering\n\nMisc:\n * Update Youtube script\n\nAudio Output:\n * macOS/iOS: Fix stuttering or blank audio when starting or seeking when using\n   external audio devices (bluetooth for example)\n * macOS: Fix AV synchronization when using external audio devices\n\nVideo Output:\n * Direct3D11: Fix hardware acceleration for some AMD drivers\n\nStream output:\n * Fix transcoding when the decoder does not set the chroma\n\nSecurity:\n * Fix a buffer overflow in the MKV demuxer (CVE-2019-14970)\n * Fix a read buffer overflow in the avcodec decoder (CVE-2019-13962)\n * Fix a read buffer overflow in the FAAD decoder\n * Fix a read buffer overflow in the OGG demuxer (CVE-2019-14437, CVE-2019-14438)\n * Fix a read buffer overflow in the ASF demuxer (CVE-2019-14776)\n * Fix a use after free in the MKV demuxer (CVE-2019-14777, CVE-2019-14778)\n * Fix a use after free in the ASF demuxer (CVE-2019-14533)\n * Fix a couple of integer underflows in the MP4 demuxer (CVE-2019-13602)\n * Fix a null dereference in the dvdnav demuxer\n * Fix a null dereference in the ASF demuxer (CVE-2019-14534)\n * Fix a null dereference in the AVI demuxer\n * Fix a division by zero in the CAF demuxer (CVE-2019-14498)\n * Fix a division by zero in the ASF demuxer (CVE-2019-14535)\n\nContribs:\n * Update to a newer libmodplug version (0.8.9.0)\n\n\nChanges between 3.0.7 and 3.0.7.1:\n----------------------------------\n\nAccess:\n * Update libbluray to 1.1.2\n\nmacOS:\n * Fix bluray java menu playback regression in 3.0.7\n\nVideo Output:\n * Fix hardware acceleration with some AMD drivers\n * Improve direct3d11 HDR support\n\n\nChanges between 3.0.6 and 3.0.7:\n--------------------------------\n\nAccess:\n * Improve Blu-ray support\n * Fix sftp module build with libssh >= 1.8.1\n\nAudio output:\n * Fix pass-through on Android-23\n * Fix DirectSound drain\n\nDemux:\n * Improve MP4 support\n\nVideo Output:\n * Fix 12 bits sources playback with Direct3D11\n * Fix crash on iOS\n * Fix midstream aspect-ratio changes when Windows hardware decoding is on\n * Fix HLG display with Direct3D11\n\nStream Output:\n * Improve Chromecast support with new ChromeCast apps\n\nmacOS:\n * Fix UPNP service discovery, services are discovered on the highest priority\n   active network interface now\n * Fix video distortion on macOS Mojave\n\nMisc:\n * Update Youtube, Dailymotion, Vimeo, Soundcloud scripts\n * Work around busy looping when playing an invalid item with loop enabled\n\nTranslations:\n * Update of most translations\n\nSecurity:\n * Fix multiple buffer overflows in the ps demuxer\n * Fix a buffer overflow when copying a biplanar YUV image\n * Fix multiple buffer overflows in the faad decoder\n * Fix buffer overflow in the svcdsub decoder\n * Fix buffer overflows in the ogg muxer & demuxer\n * Fix buffer overflows in libavformat demuxer\n * Fix multiple buffer overflows in the MKV demuxer\n * Fix a buffer overflow in the MP4 demuxer\n * Fix a buffer overflow in the textst decoder\n * Fix a buffer overflow in the webvtt decoder\n * Fix a buffer overflow in the ASF demux\n * Fix a buffer overflow in the UPNP SD\n * Fix use after free in the ogg demuxer\n * Fix multiple use after free in the MKV demuxer\n * Fix multiple use after free in the DMO decoder\n * Fix integer underflow in the MKV demuxer\n * Fix an updater NULL pointer dereference on invalid signing keys\n * Fix NULL pointer dereference in the MKV demuxer\n * Fix an integer overflow in the spudec decoder\n * Fix an integer overflow in the nsc demuxer\n * Fix an integer overflow in the avi demuxer\n * Fix reads of uninitialized pointers in the MKV demuxer\n * Fix a floating point exception in the MKV demuxer\n * Fix an infinite loop in the flac packetizer\n\n\nChanges between 3.0.5 and 3.0.6:\n--------------------------------\n\nCore:\n * Fix potential subtitle picture allocation failures\n\nCodec:\n * Add support for 12 bits decoding of AV1\n * Fix HDR support in AV1 when the container provides the metadata\n\n\nChanges between 3.0.4 and 3.0.5:\n--------------------------------\n\nAccess:\n * Improve RTSP playback\n * BluRay fixes and improvements, notably for menus and seeking\n * Improve the UDP/RTP truncated issue\n\nCodec:\n * Add a new AV1 decoder based on dav1d library\n * Enable libaom decoder by default\n * Fix decoding of some HEVC streams with macOS hardware decoding\n\nDemux:\n * MP4: Fix reading of some HDR metadata\n * Miscellaneous AV1 demuxing improvements\n * Fix CAF integer-underflow\n * Fix an MKV crash on iOS 12.0, on iPhone XS phones\n\nPacketizer:\n * Add an AV1 packetizer\n\nmacOS:\n * Starting with VLC 3.0.5, VLC will be distributed with runtime hardening\n   enabled on macOS Mojave.\n   All external VLC plugins need to be signed by a DeveloperID certificate in order\n   to continue working with the official VLC package.\n * Update the VLC dark UI to better match the dark mode of macOS Mojave\n * Fix convert & save panel stream option\n\nAudio output:\n * Fix corking when the playback state is paused\n * Improve corking on Android\n\nVideo Output:\n * Fix Direct3D11 tone-mapping when HDR is displayed on an SDR screen\n * More accurate colors for SD sources in Direct3D11\n * Disable hardware decoding on some old Intel GPUs\n * Fix zero-copy GPU acceleration on AMD RX Vega\n * Misc Direct3D11 fixes\n\nMiscellaneaous:\n * Improve ChromeCast\n * Update numerous 3rd party libraries, including for minor security issues\n * Update Youtube support\n * Fix subtitles rendering with specific fonts with negative horizontal advance\n\n\nChanges between 3.0.3 and 3.0.4:\n--------------------------------\n\nDecoder:\n * Blacklist some intel GPU when decoding HEVC\n * Decode AV1 streams\n * Fix playback of low-fps files\n * Fix hardware decoding of low-latency sliced H.264 streams on macOS\n * Fix seeking with streams containing WebVTT subtitles\n * Fix decoding some CC-608 streams with roll-up\n * Fix crashes with LPCM streams\n * Fix colorspace of JPEG, PNG and screen inputs\n * Fix MediaCodec rotation handling\n\nDemux:\n * Improve FLV fps detection\n * Fix some ogg/flac\n * Improve support for broken HEVC inside MKV\n * Fix some AVI regression for broken files and for DVAudio\n * Support files splitted in the .mts%d pattern\n * Fixes for MKV seeking\n * Fix for MP4 disabled track selection\n * Fix playback of incomplete RAR files (downloading)\n\nAudio Output:\n * Improve iOS session management and resume-from-pause\n * Improve macOS audio performance\n * Support 44.1kHz DTS passthrough\n * Fix crashes on DirectSound output\n\nVideo Output:\n * Fix some crash in Direct3D11/Direct3D9 because of sensors\n * Fix some broken DVD subtitles rendering (OpenGL, notably)\n * Fix crashes on old mac machines, after some time\n * Fix memleaks on the EGL output (Android notably)\n * Fix misc display in Direct3D11 due to broken drivers\n * Fix potential green screen on Windows XP\n\nText renderer:\n * Fix rendering of arabic fonts fallback on macOS\n * Fix head buffer overflow on macOS with some fonts\n * Fix rendering of fonts with specific fonts\n * Fix some RTL rendering\n\nMisc:\n * Fix live555, macOS-UI, screen capture crashes\n * Change the extension registration names on Windows\n * Fix VLM 'now' date\n * Fixes on the HTTPD server\n * Fix on the NTservice registration\n * Fix --stop-time option\n * Fix ChromeCast compatibility with web interface\n * Fix subtitles alignment\n * Fix infinite recursion on directory playback\n * Fix detection SAT>IP servers\n\nQt:\n * Fix tooltip display when using Wayland\n\nmacOS:\n * macOS 10.7.5 is required now, VLC will no longer launch on earlier releases\n * Fix delay and fps setting in subtitle dialog\n * Modernized and improved support for media keys\n * Fix issues with drag and drop of playlist items\n * Fix support for audio capturing with qtsound module\n * Fix layout issues in the Convert and Save panel\n\nTranslations:\n * Update of most translations\n\n\nChanges between 3.0.2 and 3.0.3:\n--------------------------------\n\nCore:\n * Update subtitles display while paused\n\nAccess:\n * Enable srt support on binary builds\n\nDecoders:\n * Allow videotoolbox hardware decoding to be disabled\n * Disable VideoToolbox for 10bits H.264\n * Fix VideoToolbox with some invalid HEVC streams\n * Fix subsdec wide character support\n * Fix 1st order Ambisonics in AAC\n\nDemux:\n * Miscellaneous ogg improvements & bugfixes, including oggds\n * Fix forced tracks selection\n * Fix Topfield files\n * Probe AAC/ADTS inside TS\n * Fix tracks detection issues with DolbyVision and Bluray streams\n\nmacOS:\n * Fix \"Open Network Stream\" URL box focus\n * Add option to disable hardware acceleration for video decoding\n * Remove option to force dolby mode from simple preferences\n\nVideo Output:\n * Fix crashes on Direct3D11\n\nQt:\n * Fix tooltip display on some desktop environments\n * Fix spurious movement of the main Window\n * Fix playlist being displayed in fullscreen\n\nMisc:\n * Fix amem output\n * Fix numerous issues on fonts fallback and font shaping\n * Fix subtitles toggle through hotkeys\n * Fix audioscrobbling\n * Fix buffer over-read in avcodec audio encoding with non-default layouts\n * Numerous 3rd party libraries updated, fixing security issues\n\nTranslations:\n * Update of most languages\n\n\nChanges between 3.0.1 and 3.0.2:\n--------------------------------\n\nCore:\n * Fix snapshotting with subtitles when using hardware acceleration\n * Fix green/missing line/column when the picture dimensions are odd\n\nDecoders:\n * Important improvements in hardware decoding for macOS, notably faster,\n   supporting more samples and removing crashes/deadlocks\n * Improve compatibility for DxVA2 and D3D11 decoding, fix crashes when seeking\n   and fix blacklisting of broken drivers\n * Fix SSA subtitles forced alignment\n * Fix E-AC-3 stuttering\n * Fix MIDI playback on macOS\n * Add playback support for ProRes 4444 XQ\n\nDemux:\n * Fix wrong colors in some AVI files\n * Fix IFO files playback to start DVDs\n * Fix a crash with missing/invalid MPEG SDT\n * Update VP8/9/10 ISOBMFF bindings and improve HDR for those cases\n * Fix TTML inside MP4\n * Improve MP4 read of color information\n * Fix flac seeking and improve flac parsing\n * Improve mkv opening & seeking speed\n * Fix display of chapters with no name defined\n * Miscellaneous MKV crash fixes\n * Fix crash with multi-region DVDs\n * Fix audio being muted on DVD chapter change\n * Fix audio being muted when seeking in a BluRay disc\n\nAccess:\n * Avoid a crash/assert in FTP after seeking\n\nAudio output:\n * Fix mmdevice default audio device handling\n * Fix \"reset audio volume\" being forcefully deactivated\n * Allow a default device to be used by VLC\n * Only warn once about misconfiguration for AUhal devices on macOS\n * Improve resampling and latency computation for CoreAudio\n * Passthrough is now disabled by default\n\nAudio filters:\n * Fix audio stutter after unpausing with headphones\n * Fix silence when dolby-surround was mis-selected in preferences\n\nVideo output:\n * Fix OpenGL crashes or bad display with semi-planar chromas\n * Fix OpenGL interop (zero-copy) disabled for tvOS\n * Major rewrite of the iOS video output to fix numerous crashes\n * Important improvements of the D3D11 video output to use less memory\n   and less GPU for HDR tone-mapping\n * Fix crop on vertical videos with Direct3D11\n * Fix Direct3D9 filters settings not being applied properly\n * Fix transform filters with hardware decoding\n * Fix snapshot and filters with HEVC hardware decoding\n * Fix a buffer overrun during GPU/CPU image copy\n * Fix glitches on DVD menus with Direct3D11\n * Fix non-HDR content playback on HDR screens with Direct3D11\n * Fix YUV full range displayed incorrectly in Direct3D11\n * Fix miscellaneous crashes in Direct3D11\n * Fix potential black screen with 10bits videos on Direct3D11\n\nmacOS:\n * Fix Growl notifications on recent macOS versions\n * Fix conversion output file name encoding\n * Fix crash reporting on macOS 10.7 and 10.8\n * Fix crash on exit\n * Fix remember playback position\n * Fix Blu-ray disc Java menu\n * Fix swiping on time slider to change position\n * Fix problems with restoring user name from keychain\n * Fix localization issues\n\nQt:\n * Fix last folder used in open dialogs\n * Allow to customize the seek jump when using the mousewheel\n * Fix fullscreen controller positionment on multiscreen setups\n * Fix pasted URLs not being trimmed\n * Fix jump size not being configurable\n * Fix missing time labels updates\n * Fix playback speed slider not accepting 1.0x value\n * Fix raw input dump\n * Fix window size after a fullscreen playback\n\nMisc:\n * Fix lua rc & oldrc interfaces host specification\n * Fix crashes when searching for renderers\n * Relocate localedir for Linux (improves snap i18n support)\n * Fix VDPAU GLX usage on Linux\n * Improve support for NetBSD\n * Fix MSI script for Windows\n * Fix libvlc_media_list not going to next media\n * Fix character encoding on win32 consoles\n * Miscellaneous chromecast improvements\n * Fix missing OSD navigation feedback\n * Various VLSub improvements\n * lua: Fix scripts not being loaded on some filesystems\n * lua: Add vlc.io APIs to handle UTF-8 paths\n\n\nChanges between 3.0.0 and 3.0.1:\n--------------------------------\n\nCore:\n * Fix use-after-free when cleaning playlists\n * Fix crash on exit on Windows\n\nVideo output:\n * Fix HLG tone mapping on some systems like macOS.\n * Fix screensaver inhibition on Windows XP\n * Fix various Direct3D11 crashes\n * Fix HDR tone mapping in Direct3d11\n * Fix pink screen on Windows\n\nDecoder:\n * Fix potential stack buffer overflow with faad\n * Enable Cineform HD in avcodec\n\nHardware Decoder:\n * macOS: Improve HEVC 10bit performance with Videotoolbox\n * android: Add MPEG2 support via MediaCodec\n * Fix HEVC decoding with some files on Android/macOS/iOS\n * Improve Direct3D11 memory usage\n\nDemux:\n * Improve MKV seeking speed\n * Fix xspf base URL handling\n * Fix reading mp4 trun with moof based offsets\n * Fix adaptive http redirections\n * Replace old API, fixing adaptive TLS leak\n * Use mime type as fallback for HLS segment type\n * Fix subtitle (srt,ssa..) seek when having a single entry\n * Flag non default HDMV subset video streams\n * Increase TS probing amount for 4K streams\n * Miscellaneous MKV, MP4 & AVI crash fixes\n\nPacketizer:\n * Fix out of bounds read in mpeg4video\n\nStream Output:\n * Improve chromecast loading speed\n * Improve local/chromecast transition during playback\n * Fix chromecast loading with some versions of Windows\n * Fix chromecast loading with some chromecast devices (TVs and Android boxes)\n * Fix wrong first cover art when casting\n * Fix casting to VP9\n\nmacOS Interface:\n * Re-add option to disable the fullscreen controller panel\n * Auto-layout improvements\n * Remove misleading playback warning indicator\n * Fix crash with the interface for lua extensions (like VLSub)\n * Fix show sidebar setting being ignored on restart\n * Fix MKV files association\n * Fix chromecast audio detection\n\nQt Interface:\n * Improve scaling on HiDPI displays\n\nSnap:\n * Improve interface look and feel.\n\n\nChanges between 2.2.8 and 3.0.0:\n--------------------------------\n\nPlatform support changes:\n * 3.0.x will be maintained as a LTS (best-effort basis, mostly for security)\n   that will be the last working version for quite a few systems.\n\n   Indeed the 3.0.x branch will contain the last releases running on:\n     - Windows XP, Vista, and the servers equivalent of those Windows versions\n     - macOS 10.7, 10.8 & 10.9, iOS 7 & 8\n     - Android 2.x, 3.x, 4.0.x & 4.1.x\n     - Compilers before gcc 5.0 and clang 3.4, or equivalent\n\n * For the 3.0 branch, please note:\n   * The Windows XP/2003/2003R2 support for VLC is now on a best-effort basis:\n     it should work, but not without limitations.\n     libVLC support for Windows XP is deprecated.\n     You _really_ should upgrade to a more modern Windows version!\n   * Windows Vista (all versions) without Platform Upgrade is not supported.\n   * 64bit version of VLC for Windows is recommended.\n   * Linux support requires now a kernel newer than 2.6.26.\n   * Mac OS X 10.6 support is now removed. You need OS X 10.7.\n\nCore:\n * Support network browsing for distant filesystems (SMB, FTP, SFTP, NFS...)\n   and rewrite the parsing of the media files and inputs\n * Support keystores: fetch and store passwords securely (sic!) for common\n   protocols (HTTP, SMB, SFTP, FTP, RTSP ...)\n * Autodetect external audio tracks (ac3, m4a, aac, dts...) similar to subtitles\n * Support HDMI passthrough for Audio HD codecs, like E-AC3, TrueHD or DTS-HD\n * Support for 12bits codec and extended colorspaces (HDR)\n * Support output renderers, like ChromeCast\n * VLC now assumes vlcrc config file is in UTF-8\n * Support portable version of Windows build (create a \"portable/\" folder)\n * Support wayland surface type\n * Allow to start the video paused on the first frame\n * Refactor preparsing input\n * EPG rework: table and single event updates, now using network time\n * Refactor and fix subtitles es selection. Demuxers can now override\n   es category single only or multiple es behavior\n * Support for 360 video and audio, including viewpoint modification\n * Support for ambisonic audio and more than 8 audio channels\n * Support subtitles size live adjustments\n\nAccess:\n * New NFS access module using libnfs\n * New SMB access module using libdsm\n * Adaptive streaming:\n   * Rewrite MPEG-DASH (Dynamic Adaptive Streaming over HTTP) support, including\n     MPEG2TS and ISOBMFF profiles\n   * Support HDS (Http Dynamic Streaming) from Adobe (f4m, f4v, etc.)\n   * Large rework of the Smooth Streaming module\n   * Replaced httplive stream filter with new HLS demuxer, replaced smooth\n     stream filter with new Smooth demuxer, both using unified adaptive module\n   * Support HLSv4-7, including MP4 and raw muxing and ID3 tags\n * Support decompression and extraction through libarchive (tar, zip, rar...)\n * New HTTP/TLS access module for HTTP 2.0 support\n * Improvements of cookie handling (share cookies between playlist items,\n   domain / path matching, Secure cookies)\n * Support DVB-T2 on Windows BDA\n * Screen capture plugin for Wayland display\n * Support depayloading Opus from RTP\n * New UPnP access module, to list directories without infinite recursions\n * SMB/FTP/SFTP accesses can list directories\n * Support sftp username and passwords options in URL, and key authentication\n * New WASAPI audio capture module on Windows\n * New \"concat\" access module for concatenating byte streams\n * Named pipes and device nodes are no longer included in directory listings\n   by default. Use --list-special-files to include them back.\n * Support for timeout in UDP input --udp-timeout=<seconds>\n * New SAT>IP access module, to receive DVB-S via IP networks\n * Improvements on DVB scanning\n * BluRay module can open ISO over network and has full BD-J support\n * Support for DVD ISO over network\n * New SRT access module using libsrt\n\nHardware Decoder:\n * Support HEVC hardware decoding on Windows, using DxVA2 and D3D11\n * Support hardware decoding using Direct3D11, including GPU-zerocopy mode,\n   and hardware filtering, for deinterlace and adjust\n * DxVA2 GPU-zerocopy for hardware decoding and displaying on Windows,\n   and support for hardware filtering, for deinterlace and adjust\n * Support HEVC hardware decoding using OMX and MediaCodec (Android)\n * Use MediaCodec via NDK native API after Android Lollipop\n * Support MPEG-2, VC1/WMV3 on Android using MediaCodec\n * OMX GPU-zerocopy support for decoding and display on Android using OpenMax IL\n * Support 4:4:4 and 4:2:2 chroma samplings with VDPAU hw acceleration\n * Important VAAPI improvements for 10bits, HEVC, direct-rendering support\n * Support VP9 and WMV3 decoding using OMX and performance improvements\n * Important improvements for the MMAL decoder and output for rPI and rPI2\n * New hardware accelerated decoder for OS X and and iOS based on Video Toolbox\n   supporting H.263, H.264/MPEG-4 AVC, H.265/HEVC, MPEG-4 Part 2, and DV\n\nDecoders:\n * Support for experimental AV1 video\n * Support for ARIB STD-B24 subtitles\n * Support for experimental Daala video\n * New MPEG-1 & 2 audio layer I, II, III + MPEG 2.5 decoder based on libmpg123\n * New BPG decoder based on libbpg\n * Fix uncompressed DVD-Audio (AOB) LPCM decoding\n * Rewrite WPL playlists and add ZPL playlists support (Zune)\n * Support TDSC, Canopus HQX, Cineform, SpeedHQ, Pixlet, QDMC and FMVC codecs\n * TTML subtitles support, including EBU-TT-D variant\n * Rewrite of webVTT subtitles support, including CSS style support\n * Support 9-bit and 10-bit GBR planar formats\n * Support for the OggSpots video codec\n * HEVC packetization is mostly fixed\n * H264 packetizer can now generate timestamps\n * Packetizers have support for captions in SEI\n * DTS packetizer handle DTS extensions (like DTS-HD): decoders like avcodec\n   can now decode up to 8 channels\n * JPEG images correctly oriented using embedded orientation tag, if present\n * Support VPX high bit depth support\n * Extend MicroDVD support with color, fontname, size, position extensions\n * BluRay text subtitles (HDMV) are now decoded\n * Improve Closed Captions detection, notably inside the video streams\n * CEA-708 decoder\n * New MIDI decoder for macOS and iOS using the AudioToolbox framework, works\n   without a soundfont or with SoundFont2 and DLS soundfonts\n\nDemuxers:\n * Important rework of the MP4 demuxer, including:\n    * Support for fragmented MP4\n    * Support EIA-608/708 subtitles in MP4/mov\n    * Support WMV and WMAV in MP4/mov, aka Flip4Mac files\n    * Support bitmap audio channel reordering in MP4/mov\n    * Support for RTP Reception Hint Track with H.264, GSM and Speex payloads\n    * Support for XiphQT(MP4) vorbis and Flac\n    * Support for VP8/VP9/VP10/AV1 in MP4\n    * Support GoPro HiLight chapters\n    * Support for TTML and WebVTT in ISOBMFF/MP4 and DASH\n    * Add new metadata fields\n * Important rework of the TS demuxer, including:\n    * Support Opus in MPEG Transport Stream\n    * Fix program selection with recorded TS (TopField, DreamBox and others)\n    * Fix TS playback with PAT/PMT less recordings\n    * Basic support for MPEG4-SL in TS and T-DMB\n    * Support SCTE-18 / EAS inside TS\n    * Support for new descriptors and ETT tables\n    * Support for ARIB channel logos, as attachements, ARIB TR-B21/TR-B14-1\n    * Improve broken-PCR probing and fixing\n    * Improvements for scrambled state detection\n * Support HD-DVD .evo (H.264, VC-1, MPEG-2, PCM, AC-3, E-AC3, MLP, DTS)\n * Important rework of the PS demuxer, including:\n    * HEVC support\n    * Fix large number of samples, notably with PSM-less H264\n    * Partial support of PSMF\n    * Fix broken SCR samples\n    * Fix CDXA mpeg-1 support\n * Improvements on MKV:\n    * Rewrite MKV seeking\n    * Support FFv1 inside MKV\n    * Improve ADTS and LATM inside MKV\n    * Improve DVD-menus support\n * Support for lame's replaygain extension in mpeg files\n * Support Daala in Ogg\n * Improve Chained-Ogg support\n * Fixes for DTS detection in WAV and MKV files\n * Support for Creative ADPCM/alaw/ulaw/S16L in VOC files\n * Support for Creative ADPCM in AVI\n * Support WMV extended content metadata\n * Directory Demux can now sort items, ignore extensions and hidden files\n * Support AlbumArtist and DiscNumber metadata\n * Support raw H265/HEVC files\n * Support multi-channel WAV without channel-maps\n * Support SBV subtitles\n * Support for Scenarist Closed Caption\n * Fix Quicktime Mp4 inside MKV and unpacketized VC1\n * Support for isofLaC\n * Improve fLaC seeking\n * Replace --demux dvb-open option with --stream-filter dvb to parse\n   channels.conf digital TV channel list files\n\nStream filter:\n * Add an ADF stream filter\n * Add a ARIB STD-B25 TS streams decoder\n * Add a stream prebuffering plugin\n * Rewrite libarchive module as a stream_extractor\n * Remove HTTP Live streaming stream filter\n * Add a zlib (a.k.a. deflate) decompression filter\n * Add a skiptags module to help demuxers skip ID3/APE tags\n\nDemux filter:\n * Add a demuxer filter chain to filter or intercept control commands and demuxing\n * Add a demuxer filter to block seeking (--demux-filter noseek)\n\nAudio output:\n * Complete rewrite of the AudioTrack Android module, it is now the default\n   module for Android. It now supports HDMI/SPDIF passthrough for AC3/DTS/EAC3,\n   5.1/7.1 channels and float output, depending on the Android version.\n * Add Tizen audio module\n * HDMI/SPDIF pass-through support for WASAPI (AC3/DTS/DTSHD/EAC3/TRUEHD)\n * Support EAC3 and TRUEHD pass-through for PulseAudio\n * Important rework of the AudioUnit modules to share more code between iOS and macOS\n * Support Ambisonics audio with viewpoint changes\n\nAudio filters:\n * Add SoX Resampler library audio filter module (converter and resampler)\n * a52tospdif and dtstospdif audio converters are merged into tospdif,\n   this new converter can convert AC3, DTS, EAC3 and TRUEHD to a IEC61937 frame\n * Add a Spatialaudio module with 2 submodules:\n    * an Ambisonics audio renderer, supporting up to 3rd order\n    * an Binauralizer audio filter, working with Ambisonics or 5.1/7.1 streams\n * Add Headphones option in Stereo Mode: use the spatialaudio module for\n   headphones effects\n * Add a pitch shifting module\n\nVideo output:\n * Linux/BSD default video output is now OpenGL, instead of Xvideo\n * OpenGL:\n    * New OpenGL provider for Windows\n    * Drop OpenGL 1.x and OpenGL ES 1 support\n    * Direct rendering with OpenGL (starting OpenGL 4.4)\n    * Hardware direct displaying with VA-API interop\n    * Hardware direct displaying with VDPAU interop\n    * Hardware direct displaying with DxVA2/D3D9Ex interop\n    * Hardware direct displaying with VideoToolbox interop (iOS and macOS)\n    * HDR tonemapping support through libplacebo\n * Wayland shell surface window provider\n * Wayland shared memory video output\n * Large rework of the Android video outputs: there is now Surface (2.1, 2.2)\n   NativeWindow (2.3+, supports hw rotation, subpicture blending, opaque)\n * Support rotation in Android NativeWindow output and hardware decoders\n * Rename the Direct3D output module to Direct3D9\n * Add a Direct3D11 video output supporting both Windows desktop and WinRT modes,\n   supporting subpicture blending and hardware acceleration\n * Support HDR10 in Direct3D11 with Windows 10 Fall Creator Update\n * EFL Evas video output with Tizen TBM Surface support\n\nVideo filter:\n * Hardware deinterlacing on the rPI, using MMAL\n * New video filter to convert between fps rates\n * Add 9-bit and 10-bit support to image adjust filter\n * New edge detection filter uses the Sobel operator to detect edges\n * Hardware accelerated deinterlacing/adjust/sharpen/chroma with VA-API\n * Hardware accelerated adjust/invert/posterize/sepia/sharpen with CoreImage\n * Hardware accelerated deinterlacing/adjust/chroma with D3D9 and D3D11\n\nText renderer:\n * CTL support through Harfbuzz in the Freetype module\n * New font fallback algorithm on most platforms\n * More conforming EIA608 captions layout and aspect ratio\n * More styles support for TTML, WebVTT and 708\n\nStream Output:\n * Chromecast output module\n * RGB24 and YCbCr 4:2:0 RTP packetization\n\nEncoder:\n * Support for Daala video in 4:2:0 and 4:4:4\n * VP8 and VP9 encoder using libvpx\n\nMuxers:\n * Add fragmented/streamable MP4 muxer\n * Add support for muxing VC1 and WMAPro in MP4\n * Opus in MPEG Transport Stream\n * Daala in Ogg\n\nService Discovery:\n * New NetBios service discovery using libdsm\n * New mDNS services discovery using libmicrodns\n * New mDNS services discovery using Bonjour (Mac OS X, tvOS, iOS)\n * Rewrite of the UPnP service discovery\n\nMac OS X Interface\n * Drop support for Mac OS X 10.6 Snow Leopard\n * Support right-to-left user interface layout for right-to-left languages\n * New resizable fullscreen controller with improved design\n * Add status bar icon which displays metadata and play controls\n * Add support for keyboard blacklight dimming during fullscreen video playback\n * Improve and simplify preferences window\n * Huge performance improvements in playlist handling and other areas\n * New AppleScript API giving access to audio desynchronization\n * Expand AppleScript API for menu detection and navigation\n * Support for building with disabled sparkle update mechanism\n * Remove deprecated transcoding wizard, use convert and save dialog instead\n\niOS:\n * Drop support for iOS 6.x\n\nQt interface:\n * Batch convert support\n * It is now possible to specify 'stop-time' in Convert/Save dialog\n\nSkins2:\n * Support key accelerators\n\nlibVLC:\n * Add libvlc_media_new_callbacks for custom input byte streams\n * Add libvlc_audio_output_device_enum to enumerate devices of current aout\n * Split of libvlc_media_discoverer_new_from_name into libvlc_media_discoverer_new,\n   libvlc_media_discoverer_start and libvlc_media_discoverer_stop\n   This allows to attach media events between create and start\n * Add libvlc_media_get_codec_description to get a human readable description of a codec\n * Add libvlc_MediaListEndReached Event to get notified when a media list reached the end\n * Add libvlc_media_list_player_get_media_player to get the media player instance of a list player\n * Add libvlc_media_parse_with_options that uses a flag to specify parse options\n * Add libvlc_audio_output_device_get to get the currently selected audio output device\n   identifier (if there is one available)\n * Add libvlc_media_get_type to get the type of the media\n * Add libvlc_media_player_get_full_title_descriptions to get full title info of the media\n   and +libvlc_title_descriptions_release to match it\n * Add libvlc_media_player_get_full_chapter_descriptions to get full chapter info of the media\n   and libvlc_chapter_descriptions_release to match it\n * Deprecate libvlc_video_get_title_description, libvlc_video_get_chapter_description,\n   libvlc_media_player_get_agl, libvlc_media_player_set_agl\n * Add libvlc_media_player_set_android_context to integrate in an Android surface\n * Add a new libvlc dialog API to forward dialogs requests to the applications:\n   libvlc_dialog_set_context, libvlc_dialog_get_context, libvlc_dialog_set_callbacks,\n   libvlc_dialog_dismiss, libvlc_dialog_post_action, libvlc_dialog_post_login\n * Add libvlc_media_discoverer_list_get|release to list the media discoverers\n * Add libvlc_media_slaves_add, libvlc_media_slaves_clear\n   libvlc_media_slaves_get, libvlc_media_slaves_release to add and get slaves\n   from a libvlc_media\n * Add libvlc_media_player_(get|set)_role to set the media role\n * Add libvlc_media_player_add_slave to replace libvlc_video_set_subtitle_file,\n   working with MRL and supporting also audio slaves\n * Add vlc_epg_event_(New|Delete|Duplicate), vlc_epg_AddEvent, vlc_epg_Duplicate\n   and removes vlc_epg_Merge\n\nLogging\n * Support for the SystemD Journal\n * Use --syslog and --syslog-debug command line options to include debug\n   messages in syslog. With --syslog, errors and warnings will be sent only.\n * New Android module for logging\n\nMisc\n * remove langfromtelx\n * remove ZPL playlist format\n * Update libVLC doxygen modules\n * Add a text-to-speech renderer for subtitles on OS X/iOS\n * Add a text-to-speech renderer for subtitles on Windows\n * Add Gnome libsecret-based crypto keystore\n * Add KDE Kwallet-based crypto keystore\n * Add a memory keystore\n * Add a file keystore that can use a submodule to crypt secrets\n * Add Keychain based crypto keystore for iOS, Mac OS X and tvOS\n\nRemoved modules\n * Atmo video filter\n * QTCapture access module (use AVCapture instead)\n * httplive (use adaptive instead)\n * smooth (use adaptive instead)\n * Gnome-VFS access module (i.e. Gnome 2.x)\n * QuartzText text renderer module (use Freetype instead)\n * Win32 GDI text renderer module (use Freetype instead)\n * Growl notification (replaced by osx_notifications)\n * VCDX \"extended\" Video CD access module (use the normal VCD module)\n * Mac OS X Dialog Provider (use VLCKit instead)\n * iOS Dialog Provider (use MobileVLCKit / TVVLCKit instead)\n * QuickTime decoder module (use native codecs)\n * BD access module (use libbluray)\n * Direct2D module (use Direct3D11)\n * EyeTV access module\n * Rar access and stream filter: use libarchive\n * VDA decoder: use VT\n * Audioqueue: use audiounit\n * SDL video output module\n * DirectFB video output module\n * RAOP stream output module\n\n\nChanges between 2.2.7 and 2.2.8:\n--------------------------------\n\nDemuxers:\n * Fix AVI invalid pointer dereferences\n\nTranslations updates\n\n\nChanges between 2.2.6 and 2.2.7:\n--------------------------------\n\nDecoders:\n * Fix flac heap write overflow on format change\n * Fix crash in libavcodec module (heap write out-of band) (CVE-2017-10699)\n * Fix infinite loop in sami subtitle\n * Fix AAC 7.1 channels detection\n\nDemuxers:\n * Fix potential crash in ASX parser\n * Fix AVI read/write overflow\n\nMac OS X:\n * Fix compatibility with macOS High Sierra\n * Fix regression in ASS subtitle decoding\n * Fix crash during automatic update. Some users might need to manually\n   update to the newest version.\n\nVideo Output:\n * Fix Direct3D9 output with odd offsets\n\nMisc:\n * Fix crash in MTP\n * Support libupnp 1.8\n\nTranslations updates\n\n\nChanges between 2.2.5.1 and 2.2.6:\n----------------------------------\n\nVideo output:\n * Fix systematic green line on nvidia\n * Fix direct3d SPU texture offsets handling\n\nDemuxer:\n * Fix heap buffer overflows (CVE-2017-8310, 8311, 8312, 8313)\n\nChanges between 2.2.5 and 2.2.5.1:\n----------------------------------\n\nSecurity hardening for DLL hijacking environments\n\nTranslations updates\n\nMisc:\n * Update for Soundcloud, liveleak and Youtube scripts\n * Fix potential out-of-band dereference in flac decoder (CVE-2017-9300)\n * Fix potential out-of-band reads in mpeg packetizers (CVE-2017-9301)\n * Fix infinite loop in subtitles demuxer\n * Fix incorrect memory free in ogg demuxer\n * Fix potential out-of-band reads in subtitle decoders and demuxers\n * Fix green line on Windows with odd sizes\n\n\nChanges between 2.2.4 and 2.2.5:\n--------------------------------\n\nDecoder:\n * Fix mp3 playback quality regression in libmad\n * Fix video scaling in VDPAU\n * Fix playback of palettized codecs\n * Fix ADPCM heap corruption (FG-VD-16-067)\n * Fix AES3 16bps decoding\n * Fix DVD/LPCM heap corruption (FG-VD-16-090)\n * Fix SCTE-27 colors\n\nDemuxer:\n * Fix possible ASF integer overflow\n * Fix MP4, VOC, XA, SMF divide-by-zero errors\n * Fix MP4 heap buffer overflows\n * Fix Flac metadata integer overflow\n * Fix NSVf and AIFF infinite loops\n * Fix flac null-pointer dereference\n * Fix vorbis and opus comments integer overflows and leaks\n\nVideo output:\n * Fix green line on Windows with AMD drivers\n * Fix screenshots size\n\nAccess:\n * Fix crash in screen recording on Windows\n * Fix FTP scan string injection\n * Fix HTTP size handling\n\nMux:\n * Fix mp4 drift\n\nLua:\n * Fix vimeo, youtube, dailymotion, cli, appletrailers, http,\n   soundcloud scripts\n\nAudio filter:\n * Fix heap write in stereo_widen audio filter\n\nWindows:\n * The plugins loading will not load external DLLs by default.\n   Plugins will need to LoadLibrary explicitely.\n * Fix uninstaller path handling\n * Fix taskbar buttons behavior\n\nMacOS:\n * Fix scrolling sensitivity on Sierra\n * Resume points are deleted now if the user clears the list of\n   recent items\n\n\nChanges between 2.2.3 and 2.2.4:\n--------------------------------\n\nDecoder:\n * Fix crash in G.711 wav files\n * Fix mp3 crash in libmad\n * Fix out-of-bound write in adpcm QT IMA codec (CVE-2016-5108)\n\nQt:\n * Fix resizing issues\n\nWin32:\n * Fix overlay creation on Windows XP for DirectDraw video output\n\nMisc:\n * Build fixes for Hurd\n\nTranslations:\n * Update of Bulgarian, Catalan, German, French, Italian, Marathi, Norwegian\n   Bokmål, Norwegian Nynorsk, Portuguese, Slovak, Spanish (Mexico), Swedish,\n   Simplified Chinese, and Traditional Chinese translations\n\n\nChanges between 2.2.2 and 2.2.3:\n--------------------------------\n\nDemux:\n * Fix HLS quality selection and a potential stack overflow\n * Fix potential MKV infinite loop and improve MKV tags support\n * Fix WMV regression\n\nDecoder:\n * Fix hardware decoding with libvdpau-va-gl\n * Fix crashes with libvpx\n * Use libass without caching dialog\n\nVideo Output:\n * Fix green lines on Direct3D output\n\nSkins2:\n * Fix maximizing Window in multi-screen context\n\nQt:\n * Fix resume where you left off\n * Fix infinite recursion in the customize dialog\n * Fix size when switching to/from the minimal interface\n * Fix size after resume toolbar is displayed\n\nMacOS X:\n * Fix crashes in media information panel\n * Correctly respect the disable-screensaver option\n\nWin32:\n * Allow opening more than 15 elements in Explorer\n\nTranslations:\n * Update of most translations\n\n\nChanges between 2.2.1 and 2.2.2:\n--------------------------------\n\nAccess:\n * Fix SetupFormat for continuous framesize in v4l2\n * Fix off-by-one buffer overflow in RealRtsp module\n * Fix screen recording aspect-ratio, framerate and potential crash\n * Fix Windows directshow input freeze\n * Fix MMS segmentation fault/abort when server forces a large allocation\n\nDemux:\n * Fix support for ms-dvr files\n * Fix time detection in AVI files over HTTP\n * HLS: fix hang on stop, crashes and small improvements\n * Fix mp4 NULL dereference reported by by Fortinet's FortiGuard Labs\n * Fix regression for VC-1 in WMV\n * Fix MXF crashes on stop\n * Fix EAC3 detection in some TS files\n\nDecoders:\n * Fix importing surface from main memory in VDPAU\n * Fix possible double-free in ADPCM decoder\n * Support 9-bit and 10-bit GBR planar formats\n * Support GoToMeeting 2 and GoToMeeting 3 codecs\n * Fix crash in teletext (zvbi) decoder\n * Fix Bluray subtitles (PGS) timestamps\n\nAudio output:\n * Fix audio drop after a flush with pulseaudio\n * Fix audio initialization on iOS\n * Fix audio stuttering with AirPlay devices on OS X (2 sec delay needs to\n   be set manually by the user)\n * Fix pulseaudio latency computation\n * Fix alsa default device selection\n\nSkins2:\n * Fix video control that fails to show up\n * Fix UTF-8 conversion issues\n * Fix Unicode folders location failing to open the skins\n * Fix crash over malformed skins bitmaps\n * Fix fullscreen for Gnome3/Unity Window Managers\n\nOS X:\n * Support for OS X El Capitan\n * Fix code signature for releases on El Capitan\n * Improve resume dialog, starting time, preferences, lua extensions\n * Fix threads ordering, preferences crashes, URL drag'n drops\n\nQt:\n * Fix crash when opening multiple items on Windows\n * Fix recent items appending when using a playlist\n * Improve addons manager dialog, playlist\n * Fix changing the audio-device in the menu\n * Fix key and mouse event support for Qt >= 5.5 under X11\n * Fix memory leaks\n\nVideo Output:\n * Fix build if one disables XCB but activate VDPAU on Unix\n * Fix Direct3D plane allocation size to avoid colour bleeding\n * Fix some crashes in swscale resizing\n\nMisc:\n * Fix build with recent FreeRDP versions\n * Fix interface crashes when input-title-format option is empty\n * Fix MP4 mux divide-by-zero crash\n * Improve PNG encoding time\n * Fix some UPnP initialization lag\n * Rewrite of the Jamendo Service Discovery\n * Fix snapshot aspect ratio for anamorphic contents\n * Fix custom snapshot sizes\n * Dynamic generation of GnuTLS Diffie-Hellman parameters\n * Fix \"vb\" transcoding parameter\n * Fix superfluous audio channel extraction in the core\n * Fix miscellaneous crashes, double-frees, integer overflows, infinite loops,\n   read overflow, invalid frees and division by zero issues\n * Fix support for lua 5.2 and fix XSS in the http interface\n * Update and improve Soundcloud, Vimeo and Youtube scripts\n * Update of codecs and libraries to fix 3rd party security issues (like\n   TALOS-CAN-0036, TALOS-CAN-0037, CVE-2015-7981, CVE-2015-8126\n\nTranslations:\n * Add Kashmiri and Maithili languages\n * Update of most translations\n\nlibVLC:\n * Expose audio mute, cork and volume change events: libvlc_MediaPlayerCorked,\n   libvlc_MediaPlayerUncorked, libvlc_MediaPlayerMuted,\n   libvlc_MediaPlayerUnmuted and libvlc_MediaPlayerAudioVolume\n * Fix propagation of libvlc_MediaPlayerTitleChanged event\n\nTranslations:\n * Update of most translations\n\n\nChanges between 2.2.0 and 2.2.1:\n--------------------------------\n\nCodec:\n * Fix compilation with older libavcodec versions\n * Fix some VP9 decoding\n * Fix flac crashes\n * Fix lpcm channel ordering\n * Fix potential NULL dereference in dmo\n * Fix teletext framing code in DVB PES packets\n * Fix potential buffer overflow in schroendinger decoder (CVE-2014-9629)\n * Fix AAC samplerate\n\nDemuxers:\n * Fix MP4 chapters\n * Fix MKV overseeking, introducing slowness over network shares\n * Fix crash when playing SPC files\n * Fix ATRAC3 playback in MKV\n * Revert to older ASX code\n * Workaround TS issue with mpeg-audio\n\nAccess:\n * Fix sftp read and close sockets\n * Fix DTV build with Linux DVB versions < 5.8\n * Fix UDP/RTP input on Windows\n\nAudio output:\n * Fix Alsa HDMI plugs\n * Improve Alsa output, with larger buffers\n * Fix DirectSound output with multi-channel files\n\nOS X:\n * Fix numerous crashes in the UI\n * Fix video-wallpaper mode\n * Fix race when starting VLC from command line\n\nQt:\n * Fix recent items behaviour\n * Fix rotation filter activation\n * Fix mux modules names for the streaming wizard\n\nWin32:\n * Timestamp the signature of the dlls\n * Fix extensions registration during install\n * Fix extensions dialog crash\n * Default to no DxVA decoding\n\nlibVLC:\n * fix libvlc_media_get_stats\n\nTranslations:\n * Update of Afrikaans, Albanian, Azerbaijani, Catalan, Czech, Danish, Dutch,\n   English (United Kingdom), Finnish, French, German, Hebrew, Hindi, Italian,\n   Japanese, Korean, Latvian, Macedonian, Malay, Modern Greek, Norwegian Bokmål,\n   Norwegian Nynorsk, Polish, Portuguese, Russian, Scottish Gaelic, Serbian,\n   Simplified Chinese, Slovak, Slovenian, Spanish, Swedish, Tamil, Thai,\n   Traditional Chinese, Turkish, Ukrainian translations\n\n\nChanges between 2.1.6 and 2.2.0:\n--------------------------------\n\nImportant changes:\n * The licenses of more modules have changed from GPLv2+ to LGPLv2.1+,\n   notably most of the streaming output, muxers and access output modules\n\nCore:\n * Support automatic rotation using streams metadata, GPU-accelerated when possible\n * Add extensions manager and downloading from external repositories\n * Rework the metadata fetching algorithm and policies\n * Partial fix of playback of short audio samples\n\nAccess:\n * Added TLS support for ftp access and sout access\n   New schemes for implicit (ftps) and explicit (ftpes) modes\n * MMS audio selection on split audio streams\n * Blu-Ray: support overlays, preferred menu languages, region selection\n   and BD-J navigation\n * Digital Cinema Package support, including encrypted DCP with KDM\n * Partial fixes for Arccos protected DVDs\n * Fix CDDB lookups, including pregap data\n\nDecoder:\n * Support VDPAU acceleration for GPU-zerocopy decoding\n * Support MediaCodec acceleration for GPU-zerocopy decoding\n * Add Media Foundation Transform audio and video decoder\n * Add video decoder module based on GStreamer plugins\n * Add MMAL decoder for Broadcom VideoCore chips (like the RaspberryPi)\n   supporting MPEG-2 and H.264, supporting GPU-zerocopy display\n * Partial support for Voxware MetaSound\n * libvpx decoder for VP8 and VP9\n * Support MSN Audio, Atrac3+, VP7, Bink, TAK, On2 AVC, DK3, DK4, IMC, Vivo g723.1,\n   Smacker, FIC, Auravision, Canopus Lossless, and numerous videogame codecs\n * Teletext subtitles display improvements\n * Mediacodec speed improvements on x86\n * Support setting the post processing level in Theora\n * OpenMax IL improvements, notably for RaspberryPi\n * Fix channel ordering of LPCM codec in m2ts files\n * New jpeg image decoder\n * Add tx3g subtitles decoder\n * New SVG image decoder\n * Fix Speex decoding over RTP and in flv\n * Support more x264 and FFv1 RGB modes\n * Improvements on ZVBI teletext decoder, notably for speed and alignments\n\nEncoder:\n * Support for MPEG-2 encoding using x262\n * Support for HEVC/H.265 encoding using x265\n * Support for Opus encoding using libopus\n * New jpeg image encoder using libjpeg\n * New png image encoder using libpng\n\nDemuxer:\n * Support for Core Audio Format (CAF) files\n * Important rework of the Ogg demuxer, notably improving seeking,\n   streaming resilience, speex demuxing and chained Ogg\n * Important rework of the ASF/WMV demuxer, notably for seeking,\n   synchronization and tracks exclusion\n * AVI improvements for better seek-indexing in non-fastseekable situations\n * AVI fixes for uncompressed, indexed and paletized bitmaps\n * MP4 fixes for fragmented files, vobsub, duration, aspect-ratio\n   and support for rotation, covr atom and tracks exclusion\n * Support Opus in MKV\n * Support VP8 in OGG\n * Basic support for WebVTT\n * Handle support for ISO/IEC 14496-3 (AAC) Audio stream type in TS\n * Support HDPR TS files\n * Support microseconds in SubRip subtitles\n * FLAC packets validation using CRC\n * Improvements in metadata support in Ogg/Opus/Vorbis files\n * Fix encoding issues and relative paths in some XML playlist formats\n * Support THP Wii/Gamecube, RenderWare and Escape Replay game video files\n * New HEVC raw packetizer and demuxer\n * TS support for WiDi/Miracast LPCM\n * Handle MOV/MP4 tx3g styled subtitles through codec\n * Support SVG images files (on glib platforms)\n * Keep selection of tracks on segment changes in MKV\n * Support detection of SRT languages based on filename\n * Support for seeking Standard MIDI Files\n\nVideo Output:\n * Direct rendering and filtering for VDPAU hardware acceleration\n * New CoreAnimation OpenGL video output module for NPAPI plugins\n * New OpenGL ES 2.0 through EGL video output module for Android\n * New Android native window provider module\n * Direct rendering for MediaCodec Android hardware acceleration\n * Support for loading HLSL shaders in Direct3D video output\n * Add MMAL based video output for RaspberryPi\n\nVideo Filter:\n * New Oldmovie effect filter\n * New VHS effect filter\n * New Freeze effect filter\n * Support I422 and J422 in transform\n * NEON optimizations for deinterleaving chroma, notably NV12->I420\n * Fix audiobargraph activation and usage\n\nAudio Output:\n * Allow setting volume while not connected with PulseAudio\n * Audio device notifications for WASAPI\n * Fix replay of sound buffer in DirectSound\n * Split of MMDevice and WinRT audio modules\n * Numerous fixes on AUHAL, including device management and stream changes\n * Fixes for SPDIF passthru in most modules\n\nMuxers:\n * Important rework of the Ogg muxer, notably for skeleton\n * Fixes for the AVI muxer to respect the specification\n * Support VP8 in OGG\n * Add HEVC muxing in MP4 and TS\n\nStreaming:\n * Important rework of the transcoding module to fix numerous bugs\n * WebM streaming, including live sources, compatible with all major browsers\n    vlc <your-source> vlc://quit --sout  '#transcode{vcodec=VP80,vb=1000,acodec=vorb,ab=128}\n    :std{access=http{mime=video/webm},mux=webm,dst=:4212}'\n * GSM, VP8, Opus and JPEG RTP packetization\n * HLS: Allow setting the first segment number and numerous improvements\n * new stats module to output block timing values and md5 sums\n * transcode module access fps values as rationals now, eg 30000/1001\n * VLC now streams all elementary streams, you can revert to previous behaviour\n    with --no-sout-all\n * --ts-out option has been removed, it has been superceded by --demux demuxdump\n    --demuxdump-access udp --demuxdump-file 127.0.0.1:1234\n * Support Metacube protocol when streaming over HTTP\n\nlibVLC:\n * add equalizer API libvlc_audio_equalizer_* functions\n * add libvlc_media_player_program_scrambled function\n\nVisualizations:\n * Add a 3D OpenGL spectrum visualization.\n * Allow setting the FFT windowing style for 3D and normal spectrum\n\nInterfaces:\n * Add support for subtitles drag 'n drop in skins2\n * Add record button in Qt menus\n * New module for core dialogs on iOS\n * New layout for Qt buttons customization\n * Support to continue media playback where it was left off for Qt and OS X\n\nMac OS X Interface:\n * Support for OS X Yosemite\n * Avoid grey bars in fullscreen when using Mavericks with multiple monitors\n * Improve fullscreen behavior for the native and VLCs own mode\n * Fixes for advanced preferences\n * Added 'file size' column to playlist table\n * in addition to iTunes, Spotify is automatically paused on playback start\n * Option to increase playlist font size\n * Improved crash log reporting\n\nMisc:\n * New module for TLS on OS X and iOS\n * Windows installer will kill running instance before installing\n * Teletext navigation buttons support in Qt4 gui\n * Update and improve Koreus, Dailymotion, Soundcloud and Youtube scripts\n\nSecurity:\n * Numerous integer and heap overflow in Ogg, AVI, ASF, TTA and MP4 demuxers\n\nRemoved modules:\n * iOS video output: use ios2\n * OpenMash H.261 video decoder\n * dirac encoder: use schroedinger\n\nTranslations:\n * New translation in Urdu, Tatar, Silesian, Samoan, Kapampangan, N'ko,\n   Kurdish, Kabyle, Mexican Spanish, Catalan, Amharic\n * Update of all translations:\n   Traditional Chinese, Simplified Chinese, Vietnamese, Uzbek, Ukrainian,\n   Turkish, Thai, Swedish, Serbian, Albanian, Slovenian, Slovak, Russian,\n   Romanian, Brazilian Portuguese, Polish, Punjabi, Dutch, Nepali, Norwegian\n   Bokmål, Malay, Marathi, Latvian, Lithuanian, Korean, Kannada, Khmer,\n   Japanese, Italian, Icelandic, Indonesian, Hebrew, Galician, Scottish\n   Gaelic, French, Finnish, Persian, Estonian, Spanish, Modern Greek, German,\n   Danish, Welsh, Czech, Bosnian, Bengali, Asturian\n\n\nChanges between 2.1.5 and 2.1.6:\n--------------------------------\n\nAudio output:\n * Fix OSS stuttering\n\nSecurity:\n * Fix heap overflow in decomp stream filter\n * Fix buffer overflow in updater (CVE-2014-9625)\n * Fix potential buffer overflow in schroedinger encoder\n * Fix null-pointer dereference in DMO decoder\n * Fix buffer overflow in parsing of string boxes in mp4 demuxer (CVE-2014-9626,9627,9628)\n * Fix SRTP integer overflow\n * Fix potential crash in zip access\n * Fix read overflow in Ogg demuxer\n * Fix RTP overflow (CVE-2014-9630)\n\nWin32 installer:\n * Update translations and greek encoding\n\n\nChanges between 2.1.4 and 2.1.5:\n--------------------------------\n\nCore:\n * Fix compilation on OS/2\n\nAccess:\n * Stability improvements for the QTSound capture module\n\nMac OS X audio output:\n * Fix channel ordering\n * Increase the buffersize\n\nDecoders:\n * Fix DxVA2 decoding of samples needing more surfaces\n * Improve MAD resistance to broken mp3 streams\n * Fix PGS alignment in MKV\n\nQt Interface:\n * Don't rename mp3 converted files to .raw\n\nMac OS X Interface:\n * Correctly support video-on-top\n * Fix video output event propagation on Macs with retina displays\n * Stability improvements when using future VLC releases side by side\n\nStreaming:\n * Fix transcode when audio format changes\n\nSecurity contents:\n * Updated GnuTLS to 3.1.25 (CVE-2014-3466)\n * Updated libpng to 1.6.10 (CVE-2014-0333)\n\nTranslations:\n * Update British English\n\n\nChanges between 2.1.3 and 2.1.4:\n--------------------------------\n\nDemuxers:\n * Fix issue in WMV with multiple compressed payload and empty payloads\n\nVideo Output:\n * Fix subtitles size rendering on Windows\n\nMac OS X:\n * Fix DVD playback regression\n * Fix misleading error message during video playback on OS X 10.9\n * Fix hardware acceleration memleaks\n\n\nChanges between 2.1.2 and 2.1.3:\n--------------------------------\n\nCore:\n * Fix broken behaviour with SOCKSv5 proxies\n * Fix integer overflow on error when using vlc_readdir\n\nAccess:\n * Fix DVB-T2 tuning on Linux\n * Fix encrypted DVD playback\n * Fix v4l2 frequency conversion\n\nDecoders:\n * Fix numerous issues (M2TS, VC1 interlaced, Lagarith, FFv1.3, Xvid)\n   by updating codec libraries\n * Bring fluidsynth back on Mac OS X\n * Fix some Opus crashes with some filters\n * Fix teletext crash on Windows\n\nDemuxers:\n * Avoid an infinite recursion in MKV tags parsing\n * Fix an issue with some Vobsub tracks\n * Fix missing samples at the end of some wav files\n * Fix divide by 0 on ASF/WMV parsing\n\nAudio output:\n * Fix audio device selection via command line on Mac OS X\n * Fix audio crashes on Mac OS X\n\nVideo Output:\n * Fix selection of DirectDraw as the default output for XP\n * Fix transform off-by-one issue\n * Fix screensaver disabling on Windows outputs\n * Fix DirectDraw device enumeration and multi-display output\n * Fix a potential crash when playing a fullscreen game at the same time as VLC\n\nStream output:\n * Fix 24bits audio MTU alignment in RTP\n * Fix record file names\n\nQt interface:\n * Fix minimal size possible on start\n * Fix a crash with the simple volume widget\n * Fix a crash in the audio menu building\n * Fix multimedia keys issues on Windows\n * Fix opening of DVD and BD folders on Windows\n\nHTTP interface:\n * Fix album art display on Windows\n\nTranslations:\n * Update of Bulgarian, Catalan, Czech, Danish, German, Modern Greek,\n   Spanish, Basque, Finnish, French, Scottish Gaelic, Galician, Hebrew,\n   Hungarian, Italian, Japanese, Korean, Malay, Norwegian Bokmål, Nepali,\n   Dutch, Polish, Brazilian Portuguese, Portuguese, Romanian, Russian,\n   Sinhala, Slovak, Slovenian, Swedish, Telugu, Thai, Turkish, Ukrainian\n   and Simplified Chinese translations\n * Fix encoding for Windows installer translations\n\n\nChanges between 2.1.1 and 2.1.2:\n--------------------------------\n\nAudio output:\n * Fix digital playback on OS X when more than one audio device is installed\n * Fix digital playback (SPDIF/HDMI) on Windows\n * Fix stuttering or silent playback when using sound enhancers or external\n   audio devices on OS X\n * Improve responsiveness on OS X when playback starts or is being paused\n * Improve responsiveness, silent playback intervals and reliability on iOS\n\nDemuxers:\n * Fix Vimeo and DailyMotion parsing\n * Various WMV playback improvements and fixes\n\nDecoders:\n * Fix LPCM 20/24-bit decoding and 16 bits with channel padding\n * Fix playback of some HEVC samples\n\nVideo filters:\n * Fix crash on deinterlace selection\n\nQt interface:\n * Fix some streaming profiles when copy existed\n * Improve A-B loop control\n * Fix album art update when changing media\n\nMac OS X interface:\n * Add a language option in the interface\n * Option to control VLC's iTunes pausing behavior is more easy to find\n * Improved UI resetting when requested in the preferences\n * Fix issue which prevented to enable more than one video filter on Mavericks\n * Fix an issue which could prevent automatic UI language settings from working\n * Fix opening subtitles files through drag & drop or double-clicking\n * Fix crash when closing window without decorations\n * Fix issue where extra video window was resized even if this was disabled\n\nWin32 installer:\n * Kill running VLC process on uninstall/update\n\nTranslations:\n * Update of Basque, Bosnian, Bulgarian, Croatian, Czech, Danish, Estonian,\n   French, Hungarian, Icelandic, Indonesian, Italian, Kannada, Khmer,\n   Lithuanian, Occitan, Persian, Polish, Romanian, Scottish Gaelic, Sinhala,\n   Slovenian, Spanish, Swedish, Tamil, Thai, Uzbek, Welsh translations\n\n\nChanges between 2.1.0 and 2.1.1:\n--------------------------------\n\nCore:\n * Fix random and reshuffling behaviour\n * Fix recording\n * Fix some subtitles track selection\n\nDecoders:\n * VP9 support in WebM\n * HEVC/H.265 support in MKV, MP4 and raw files\n * Fix GPU decoding under Windows (DxVA2) crashes\n\nDemuxers:\n * Fix crashes on wav, mlp and mkv and modplug files\n * Support Speex in ogg files\n * Fix some .mov playlists support\n * Support Alac in mkv\n * Fix WMV3 and palette in AVI\n * Fix FLAC packetizer issues in some files\n\nAccess:\n * Fix DVB options parsing\n * Fix DeckLink HDMI input\n * Fix HTTPS connectivity on OS X by loading root certificates from Keychain\n\nAudio output:\n * Fixes for DirectSound pass-through\n * Fixes for OSS output, notably on BSD\n\nInterfaces:\n * Fix HTTP interface infinite loop\n * Fix D-Bus volume setting\n\nQt:\n * Reinstore right click subtitle menu to open a subtitle\n * Fix saving the hotkeys in preferences\n * Fix saving the audio volume on Win32, using DirectSound\n * Fix play after drag'n drop\n * Fix streaming options edition and scale parameter\n\nStream out:\n * Fix transcoding audio drift issues\n * Fix numerous audio encoding issues\n\nWin32 installer:\n * Important rewrite to fix numerous bugs, notably about updates\n * Simplification of the upgrade mechanism\n\nMac OS X interface:\n * Reintroduce the language selector known from pre-2.1 releases\n * Fix fullscreen behaviour and various crashes\n * Fix about dialog crash in Japanese\n * Fix crashes on proxy lookups\n * Fixes on the playlist and information behaviours\n * Fixes on the streaming dialogs\n * Improves interface resizings\n\nTranslations:\n * Update of Arabic, Basque, Belarusian, Czech, Danish, Dutch, French,\n   Galician, Gujarati, Hindi, Hungarian, Icelandic, Italian, Japanese, Korean,\n   Lithuanian, Marathi, Modern Greek, Norwegian Bokmål, Occitan, Persian,\n   Polish, Portuguese, Punjabi, Romanian, Sinhala, Slovak, Slovenian, Spanish,\n   Swedish, Telugu, Thai, Traditional Chinese, Turkish, Ukrainian, Uzbek\n   translations\n\n\nChanges between 2.0.9 and 2.1.0:\n--------------------------------\n\nImportant changes:\n * The licenses of numerous modules have changed from GPLv2+ to LGPLv2.1+\n * Discontinued support for PowerPC-based Macs; VLC now requires Mac OS X 10.6+\n   Moreover, the official builds will be 64bit only\n * The --with-tuning and --without-tuning options are removed; to tune\n   compilation for a specific processor type, set CFLAGS manually\n\n3rd party libraries (contrib):\n * /extras/contrib has been replaced by a cleaner build system in /contrib\n\nCore:\n * Audio core rewrite, supporting higher samplerates, better volume management,\n   better device selection, new channel layouts and new output capabilities\n * Fix support for .001, .00x split files on Windows\n * Full support for UNICODE Windows mode\n * Disable and mark obsolete --language selection\n * Port to Android\n * Port to iOS\n * Partial support for Windows Store App / WinRT\n * Add an audio fingerprinter, using AcoustID!\n * Remove SQL support\n\nDecoders:\n * Support for CDXL, Ut Video, VBLE, Dxtory codecs via libavcodec\n * Numerous improvements on the OpenMAX IL codec module\n * Support for Ulead DV audio\n * Support for TechSmith Screen Codec 2, Microsoft Expression Encoder Screen,\n   Microsoft Application Screen Decoder 1 (MSS1) and 2 (MSS2)\n * Support for Indeo Audio Coder, RealAudio Lossless\n * Add Hardware Acceleration support on OS X for H.264 based upon VDADecoder\n * Add Hardware Acceleration support on Android Jelly Bean using MediaCodec\n * Add Hardware Acceleration support on Linux using VDPAU\n * Support for SCTE-27 subtitles\n * Split G.711 decoder from Araw decoder\n * X Window system raster image dump pseudo-decoder\n * Support for Webinar GoToMeeting 4 (G2M4)\n\nEncoders:\n * high10, high422 and high444 encoding support in h264\n * QuickSyncVideo Encoding (Intel Media SDK) support using Intel GPU on Windows\n * New AAC encoder using the fdk-aac library (non-free)\n\nAccess:\n * Screen: add support for OS X Lion and later,\n           remove support for previous OS X releases\n * Major improvements in DASH support\n * Improvements in Blu-Ray module, notably for multiple video tracks support\n * Important improvements and rewrite of the v4l2 access module\n * HTTP: support for Internationalized Domain Names\n * Microsoft Smooth Streaming support (H264 and VC1) developed by Viotech.net\n * NTSC EIA-608 closed caption input support via V4L2 VBI devices\n * Add support for VNC/rfb in view only mode\n * Add support for Remote Desktop/RDP in view only mode\n * Timecode: generate a clock/timecode as a subtitle track\n   vlc video.mkv --input-slave timecode:// --timecode-fps 30/1001\n * New video capture module for OS X based on AVFoundation, named AVcapture\n * New shared memory framebuffer access module, named shm\n\nDemuxers:\n * MP4: partial support for fragmented MP4\n * Vorbis: better support for metadata and cover art\n * AVI: better support for tags and extended metadata\n * Support for FLAC, Atrac and some ADPCM in AVI\n * Support for DV data type 1 in AVI and 12 bits DV Audio\n * Support for total number of tracks in major container\n * Support for Cook and Atrac in MKV\n * AVI: support for files produced by Nikon cameras\n * Support for more MJPEG streams\n * Add support for liveleak streams\n * Add support for Wave/RF64 files\n * Prevent numerous uncaught exceptions in MKV\n * Add protection against several potential heap buffer overflow in libebml\n\nAudio output:\n * Windows Audio Session API audio output support\n * OpenBSD sndio audio output support\n * Important improvements on the Android OpenSL ES audio output\n * Android AudioTrack audio output support\n * OS X Auhal output support for 6.1, 7.1, 8.0 and 8.1 playback and layouts\n * Rewrite of OSS module to support OSSv4\n * OS X Auhal output support for multi-buffer output devices\n   This fix was facilitated through a hardware lending by TEAC Europe GmbH\n   distributing such devices under the brand \"TASCAM\" (US-122, US-144, etc.).\n * Rewrite of the AudioQueue output for iOS (and OS X)\n * New, simplified AudioUnit output for iOS\n\nAudio Filters:\n * New remapping channel filter\n * New filter to enhance stereo effect by mono suppression and delay effect\n * New VSXu visualization plugin\n * ARM NEON acceleration of volume filter\n * Rewrite of the simple downmixer filter\n * New gain audio filter\n\nVideo Outputs:\n * New output for Decklink Blackmagic cards\n * New output using OpenMAX IL hardware acceleration API\n * OpenGL: use glsl instead of ARB to do the YUV->RGB conversions\n * OpenGLES: add support for color conversation shaders on Android and iOS\n * Fix and enable the OpenGL ES1 and ES2 outputs\n * Support for subpictures in the OpenGL ES2 output\n * Fix the power management issue on Windows for standby management\n * New output module for iOS using OpenGL ES2\n * Fix performance issue on Macs with multiple graphics cards\n\nVideo Filters:\n * New anaglyph video filter which transforms side by side 3D video streams in\n   anaglyph glasses (aka red/blue) compatible images\n * Support in deinterlacing filter for most 4:2:0, 4:2:2, 4:4:4 YUV formats\n   and for bits depth higher than 8bits (like 10bits)\n * Improvements on the transform filter, to support 10bits and RGB formats\n * Revival of the openCV and openCV example filters\n * ARM NEON acceleration of chroma filters\n * New crop filter without picture copy\n\nStream Output:\n * Extended support for recording, notably for MKV and AVI\n * Options support for AVIO output module\n * Livehttp places more accurate segments durations in playlist\n * Livehttp allows setting cachin-variable in playlist\n * Livehttp stream encryption support\n * Livehttp supports changing encryption key and uri on segment change with key-loadfile option\n * Added chromaprint based audio fingerprinting\n\nFingerprinters:\n * Add AcoustID/Musicbrainz based fingerprinter\n\nInterfaces:\n * configurable password for the HTTP server\n * .hosts removed from the HTTP server\n * fix Lua command line interface console mode under Windows\n * Better support for MCE remotes on Windows\n * Hotkey support for TS program selection\n * Rewrite of D-Bus inhibit interface\n * Improvements on motion sensing interface, fix orientation, move out\n   rotate mode into the rotate video filter\n\nServices discovery:\n * UPnP A/V subtitles\n * Support for multiple UPnP resources on a single item\n\nOS X Interface:\n * Add support for multiple video outputs\n * Add accessibility support to playback windows, open panel and fullscreen\n   controller\n * Add a GUI to manage podcasts\n * Add a new panel for media conversation and streaming\n * Add a GUI for the QTSound access input to process audio captured locally\n   - This also allows to capture input from a webcam and a mic at the same time\n * Add a GUI to capture QTSound data along with the current screen content\n * Add an option to let the Apple Remote control the system volume instead of\n   VLC's internal volume level\n * Add a new Subtitles menu to change Subtitles and their properties during\n   playback\n * Add the ability to create custom equalizer presets based upon the current\n   selection and to manage the list of presets\n * Add custom profiles for video and audio effects, which let the user keep\n   multiple configuration sets of all the individual filters\n * Support for pausing iTunes during media playback with VLC\n * Add support for video filters to clone the video output or split it in parts\n * Add A->B loop feature known from the Qt interface\n * Add an option to disable skipping to next/previous file with the Apple Remote\n * Add an option to show next / previous buttons\n * Add an option to hide the shuffle and repeat buttons\n * Add an option to hide the audio effects button (default enabled)\n * Add optional playlist columns for track number, genre, album, description,\n   date and language\n * Add options to the Advanced Open File dialog for start and stop time\n * Add an option to play videos as a desktop background\n * Add support for playing video and showing audio visualizations side by side\n * improve fullscreen controller time slider with larger click target\n * rewrite of minimal macosx module for use within VLCKit\n * Add support for 'macosx-autoplay' to the Apple Event / Apple Script bindings\n   when adding new inputs - this also affects network streams opened through\n   3rd party applications\n * Add a UI to the preferences dialog to configure the default application\n   handler for ftp, mms, rtmp, rtp, rtsp, sftp, smb and udp streams\n   (system-wide settings)\n * Add support for the Video Title option\n * Add support for the Boss Key\n * The Streaming/Transcoding wizard and the open dialog's output panel are\n   deprecated now and will be removed in a future release\n\nQt:\n * Partial support for Qt5.0\n * Menus modifications and improvements\n * Playlist improvements and fixes, including PictureFlow view\n * Streaming output wizard rewrite\n * Add bitrate graph in information panels\n * Filters panels improvements, notably Equalizer and Compressor\n * EPG display fixes and improvements\n * Add SD pixmap sources\n * Preferences hotkeys management fixes\n * Display playlist total duration\n * Support for a Maximum volume in the UI\n * Add audio track fingerprinting from media info\n * New profiles format and dialog to handle filters and quality\n * Numerous fixes\n\nSkins2:\n * Port to OS/2\n * Extend sliders, offsets options\n * New bitmaps caching mechanism\n * Numerous fixes and improvements\n * Skinning of the Fullscreen controller\n\nlibVLC:\n * new libvlc_audio_output_device_list_get and libvlc_audio_output_device_list_release functions\n   to replace the deprecated libvlc_audio_output_device_count, libvlc_audio_output_device_longname\n   and libvlc_audio_output_device_id\n * libvlc_audio_output_get_device_type and libvlc_audio_output_set_device_type are now deprecated\n * new libvlc_media_tracks_get and libvlc_media_tracks_release methods to get more info about the\n   media tracks. libvlc_media_get_tracks_info is now deprecated.\n * new fingerprinter_Create and fingerprinter_Destroy for fingerprinter support\n * new libvlc_log_set, libvlc_log_set_file, libvlc_log_unset, libvlc_log_get_context and\n   libvlc_log_get_object for a better logger mechanism\n * new libvlc_set_app_id to complement libvlc_set_user_agent to set the icons\n\nRemoved modules:\n * portaudio audio output: use the native audio output instead\n * X11 On Screen Display notifications (xosd)\n * Linux Framebuffer On Screen Display interface (fbosd)\n * PVR: IVTV analog TV encoder - use V4L instead\n * RTMP access: use libavformat avio instead\n * RTMP access_output: use libavformat avio instead\n * Hildon GUI\n * MSN messenger \"now playing\" (broken and unmaintained since VLC 1.0.0)\n * Telepathy framework \"now playing\" (broken and unmaintained since VLC 1.0.0)\n * Nokia/Maemo MCE screen unblanking plugin\n * Broken crop video filter\n * Switcher module\n * OSD parser and menu\n * Xscreensaver: use xdg-screensaver\n * Removed DLL loader for non-Windows Operating Systems\n * SQL Media Library (broken and unmaintained)\n * SQL Lite (only used as SQL Media library backend)\n * htcpcp :)\n\nTranslations:\n * Update of all translations\n\n\nChanges between 2.0.8 and 2.0.9:\n--------------------------------\n\nDemux:\n * Improve handling of corrupt ASF files\n * Fix buffer overflow in the mp4a packetizer\n\nContribs:\n * Fix modplug security issues\n\n\nChanges between 2.0.7 and 2.0.8:\n--------------------------------\n\nAccess:\n * Fix ISDB-S tuning\n * Fix crash in QTsound\n * Fix screen mouse file location\n * Fix invalid memcpy in MMS access\n\nDemux:\n * Fix use after free in sgimb\n * Improve resistance and checking against malformed MKV files\n\nDecoders:\n * Fix crash in the libavcodec module\n\nMac OS X:\n * Fix interface crashes\n * Fix autostart playback option\n * Respect \"playlist-autostart\" option\n\nTranslations:\n * update Welsh translation\n * New Kannada translation\n\n\nChanges between 2.0.6 and 2.0.7:\n--------------------------------\n\nInput:\n * Fix playback termination when switching ES tracks (PowerPC only)\n * Fix memory exhaustion vulnerability when playing specifically crafted\n   playlist files\n\nDecoders:\n * Fix WMA Pro, MPEG 4 ALS, APE, MLP and ADPCM-IMA4 playback\n\nEncoders:\n * Fix audio encoding for numerous codecs, notably mp3 and aac\n\nMuxers:\n * Fix noticeable memory leak when creating AVI files\n\nVideo output:\n * Fix crash when using libvlc in 3rd party applications (Mac only)\n\nMac OS X Interface\n * Minor improvements\n * Fix issue which could lead to loss of media files created through transcoding\n\nHTTP Interface\n * Fix two xss vulnerabilities (CVE-2013-3565)\n\nTranslations:\n * Update Basque, Simplified Chinese, Ukrainian, Turkish, Portuguese, Norwegian Bokmål,\n   Burmese, Lithuanian, Italian, Hindi, Spanish, German, Czech, Danish, Welsh translations\n * New Azerbaijani, Kirgyz, Oriya translations\n\n\nChanges between 2.0.5 and 2.0.6:\n--------------------------------\n\nAccess:\n * Fix HTTPS playback with some certificates previously rejected\n\nAudio Output:\n * Improve lookup of human readable device names in AUHAL plugin (OS X)\n\nDemuxers:\n * Fix crash with broken asf files (SA-1302)\n * Fix MKV behaviour with unknown or new ebml elements\n * Fix use-after-free crash in Ogg demuxer, found by Tomi Juntunen\n * Fix regression on some paletted codecs in AVI\n * Fix ALAC in mp4 regression\n * Improvements to the vimeo playlist parser\n\nDecoders:\n * Fix GPU decoding on Intel HD 2000/3000 cards on Windows\n * Fix FLAC 6.1 and 7.1 channel layout\n * Fix crashes in HTML srt subtitles\n * 3rd party codecs updates\n\nMac OS X:\n * Fix subtitle rendering resolution when using OS X's native fullscreen mode\n * Improve fullscreen controller time slider with larger click target\n * Fix listing of the lua interfaces (web, telnet and console)\n   in the advanced preferences panel\n * Fix spatializer audio filter panel\n * Fix crash within the video output code\n * Fix BDMV folder selection issue on OS X Mountain Lion, which treats such\n   folders as a AVCHD file as soon as they include an item named INDEX.BDM\n * Fix bug which caused a hidden fullscreen panel\n * Fix various minor UI drawing issues (main window, fullscreen controller,\n   lua extensions, ...)\n * Allow VLC to be associated with .dvdmedia packages\n\nQt:\n * Fix clearing of Media Info panel on dialog exit\n\nGNU/Linux:\n * Numerous D-Bus and MPRIS2 improvements\n * Reject broken versions of PulseAudio\n\nWindows:\n * Fix uninstallation in different location than C:\\\n\nTranslations:\n * Update of Brazilian Portuguese, Traditional Chinese, Thai, Portuguese,\n   Japanese, Italian, Hebrew, Estonian, Spanish, Czech, Catalan, Bosnian,\n   Asturian, French, Romanian, Serbian, Russian, Hindi, Estonian, German\n   Slovenian Norwegian Bokmål, Khmer, Icelandic, Interlingua, Welsh, Ukrainian,\n   Dutch, Danish, translations\n * New Gujarati, Aragonese translations\n\n\nChanges between 2.0.4 and 2.0.5:\n--------------------------------\n\nAccess:\n * Fix DVB-S delivery system detection\n\nAudio Output:\n * Fix playback initial synchronization with PulseAudio\n   (however similar bugs in PulseAudio version 2.0 and later still exist)\n * Fix file output bug affecting floating point on big endian systems\n\nDemuxers:\n * Fix crash with some embedded subtitle fonts\n * Fix buffer overflow in HTML subtitles parser\n * Fix koreus lua parser\n * Improve reliability for RTSP streams sent by some IP cameras\n * Fix division by 0 in AIFF demuxer\n * Fix some MKV crashes when ordered editions have empty or broken links\n * Fix SWF potential crash on malformed files.\n\nVideo filters:\n * Fix crash in Freetype with embedded fonts\n * Fix wrong aspect ratio in some cases\n\nEncoders:\n * Fix Mpeg-2 audio and video encoders initialization\n\nMac OS X:\n * Fix Reveal-in-Finder for files with non-Western file names\n * Fix crash with local statistics disabled\n * Fix Time counter UI look\n * Fix system sleep issue on OS X 10.5\n\nWin32:\n * Fix https streaming\n\nlibVLC:\n * Fix audio and video track selection:\n   The constant track identifier is now always used. Some functions previously\n   incorrectly used the (moving) index of the track in the table of tracks.\n\nTranslations:\n * Update of Asturian, Bengali (India), Bosnian, Croatian, Czech, Danish,\n   Dutch, Estonian, French, Galician, Scottish Gaelic, German, Hebrew,\n   Italian, Japanese, Khmer, Malayalam, Polish, Slovak, Simplified Chinese,\n   Traditional Chinese, Brazilian Portuguese, Turkish, Thai translations\n * Initial translations for Welsh and Interlingua\n\n\nChanges between 2.0.3 and 2.0.4:\n--------------------------------\n\nAudio Output:\n * Improve playback synchronization with PulseAudio.\n * Fix ALSA digital pass-through (\"S/PDIF\").\n * Fix live audio device selection on Mac OS X\n * Fix detection of some 5.1 and 7.1 kits on Windows.\n * Fix audio output behavior when the output device is plugged or unplugged\n   during playback on Mac OS X\n\nAccess:\n * Fix numerous DVD (dvdnav) crashes\n * Fix HTTP playback through proxy and advertise gzip correctly\n * Fix TLS busy-loop during client-side handshake\n\nCodecs:\n * Support for Opus decoding via libopus, including multi-channel files\n * Support MSS1 and MSS2 decoding through DMO libraries\n * Fix Hebrew and Greek subtitles encoding\n * Fix crashes on malformed subtitles and malformed png files\n * Fix crashes when using hardware decoding\n\nDemuxers:\n * Fix issues in Ogg with zero length packets\n * Fix file duration of Ogg/Theora and Ogg/Vorbis files\n * Fix vimeo, koreus and youtube lua parsers\n * Support Youtube live streams\n\nWindows:\n * Fix Wallpaper mode on Windows 7/8\n\nQt:\n * Fix media info dialog update\n * Fix random/repeat preferences saving\n * Fix crashes when opening audio effects dialog, with skins and playlist\n * Fix crash on association dialog on Windows XP\n * Fix album art display at start\n\nMac OS X:\n * Fix command-line options to control the interface behavior\n * Deactivate CoreAnimation effects on Leopard\n * Fix menus display and behavior\n * Fix various crashes and small issues including bookmarks, playlist, buttons,\n   streaming wizard, video size, hotkeys and fullscreen controller\n * Fix font selection for Unicode subtitles\n * Improve system sleep behavior when playing audio-only media. The screen is\n   allowed to sleep while the system is kept awake during playback.\n * Fix code signing of Delete Preferences application\n * Add option to Audio Effects panel to activate the Karaoke filter\n\nMiscellaneous:\n * Fix Notify (D-Bus) plugin deadlock.\n * Fix buffer corruption in freetype and subtitles modules\n * Improve Blu-Ray and HLS support\n * Fix issues on selection of playlist items for WebUI\n * Codec and other 3rd party library updates\n * Fix swscale and canvas behavior with Aspect Ratio\n * Fix mime-type when streaming Webm over HTTP\n * Fix recording behaviour in Windows network environments\n * Codecs and 3rd party libary updates\n\nTranslations:\n * Updates of Norwegian Bokmål, Korean, Slovak, Serbian, Russian, Traditional\n   Chinese, Simplified Chinese, Portuguese, Walloon, Turkish, Thai, Polish,\n   Dutch, Khmer, Hindi, Japanese, Galician, Hebrew, German, Breton, Scottish\n   Gaelic, Czech, Estonian translations\n * Initial translations for Bengali, Fula, Gujarati and Bosnian\n\n\nChanges between 2.0.2 and 2.0.3:\n--------------------------------\n\nAccess:\n * Fix some HTTP request that broke some radio channels\n\nDemuxers:\n * Fix support for some flv files (notably joined)\n * Fix a crash when opening ape files with ID3v1 tags\n\nMac OS X:\n * Add GateKeeper support\n * Fix handling for some hotkeys\n * Fix fullscreen toggle over extra interfaces\n * Minor bugfixes and improvements\n\nQt:\n * Fix Windows 8 interface style\n\nTranslations:\n * Updates for Breton, Czech, Dutch, Gaelic, German, Hebrew, Hindi, Icelandic,\n   Japanese, Khmer, Korean, Polish, Russian, Simplified Chinese, Slovenian,\n   Thai, Turkish and Walloon\n * New translations to Uzbek and Marathi\n * Fix activation of Gaelic and Thai translations\n\n\nChanges between 2.0.1 and 2.0.2:\n--------------------------------\n\nVideo Output:\n * XP machine will now use DirectX mode by default, like in previous versions.\n   There were too many errors with broken drivers.\n * More accurate colourspaces conversions for YUV->RGB in OpenGL\n * Add menu support for libvlc / VLCKit applications on Mac OS X\n * Various fixes on Mac OS X, notably for crop, zoom, osd and menu support\n * Misc fixes in OpenGL module, on all platforms\n * Fix video output on PowerPC-based Macs equipped with an ATI Radeon 7500,\n   an ATI Radeon 9200 or a NVIDIA GeForceFX 5200 Ultra.\n * Fix video output of 10bit encoded contents on Intel-based Macs equipped\n   with an Intel GMA 950 chipset running OS X 10.6 or later.\n * Add support for the HiDPI mode used on recent Apple products with so-called\n   Retina Displays.\n\nAccess:\n * Rework Digital TV module for Windows. DVB-T and DVB-C should work again\n * Fixes for RAR compressed files\n * Fix DirectShow crashes on exit\n * Improve PulseAudio input latency\n * Fixes for HTTP access through a proxy\n * v4l2 webcam outputting H264 can now be used directly (use --v4l2-chroma=h264)\n * Fix subtitles auto-detection in subfolders and detection behaviour\n * IE http proxy is not used anymore by VLC on Win32\n * Accept more extensions for DVD images\n * Fix crash in VC1 packetizer\n * Improvements in Blu-Ray playback\n * Improvements and fixes in HLS support\n\nCodec:\n * Fix crashes in AAC decoder on channels changes, notably in ISDB streams\n * Fix compilation with multiple FFmpeg and libav versions\n * Fix G726 support\n * Fix MP3 free format support\n\nDemuxers:\n * Fixes for MKV segments, seeking and MKV title display\n * Fix for some mp4, voc, midi and au crashes\n * Fix for Real .ram, .f4v, .avi and .ra files support\n * Fix for DVB channels file support\n * Fixes for alac, vorbis, DTS, VC-1 and Dirac in mp4\n\nEncoders:\n * Fix for MPEG Audio encoding, use layer2 when using fourcc \"mp2 \" and \"mp2a\"\n * Fix for JPEG generation, when doing snapshots\n\nAudio filters and output:\n * Limitation of spatializer volume output\n * Fix DirectSound device selection\n * Correct PulseAudio volume control\n * Do not apply volume in file output\n * Fix sampling rate in JACK output\n * Fixes in ALSA output for latency and for broken drivers\n\nMac OS X:\n * Enable drag and drop of playlist items between the temporary playlist and\n   the persistant media library\n * Enable import of playlist items taken from the service discovery modules\n   to the media library or the temporary playlist\n * Media key support for keyboards by other manufacturers than Apple\n   This fix was facilitated through a hardware donation by ZF Friedrichshafen AG\n   manufacturing keyboards under the brand \"Cherry\".\n * Add support for the Apple Remote to set the Mac to sleep using a longer\n   press on the Play/Pause button\n * Remove libfontconfig's font cache by an Apple Type Services lookup.\n   This removes the \"Updating Cache\" dialog, before finding all fonts.\n * Re-add an option to hide the window decoration during video playback\n * Improve compatibility with other 3rd party apps using SPMediaKeyTap\n * Many Fullscreen fixes\n * Keep Aspect Ratio when resizing is back\n * Add controls to manipulate the Subtitles Duration to the Track\n   Synchronization panel\n * Hidden items in the sidebar are being retained for the next launch now\n * Fix crash when trying to open an Audio CD by drag & drop\n * Improve reliability when opening DVDs or BDs by drag & drop\n * Fix crashes on exit\n * Fix crash when mounting a device with multiple logical volumes while\n   VLC is running\n * Chosen audio output device is retained throughout multiple sessions\n * Since running the Mac OS X interface as an Extra Interface or Control\n   Interface can lead to undefined results, eventual settings will be\n   automatically reset on the first launch.\n   - This fixes issues with unresponsive playback controls and crashes on quit.\n * Update Growl plugin for use with Growl 1.3\n * Miscellaneous minor interface improvements\n\nLua Scripts:\n * Fixes for stdin/stdout and for different locale issues\n * Fixes for icecast SD\n\nQt:\n * Fix preferences for audio devices on Windows\n * Fix playlist search and selector behaviour\n * Fix multiple issues in the Open Disc dialog\n * Miscellaneous fixes in preferences, buttons, EPG, playlist and customize dialog\n * Fix tags and file names display\n * Fix various crashes, display issues and usability issues\n\nSkins2:\n * Fix mousewheel on Windows\n * Fix for key events and focus loss\n\nWeb interface:\n * Fix display of some buttons\n * Fix listing of files in the Open interface\n * Fixes for widgets behaviour and vlm dialog\n\nSecurity:\n * Fix Ogg Heap buffer overflow\n * Update taglib (CVE-2012-2396)\n * Update libavcodec and other codecs libraries\n\nTranslation:\n * Traditional Chinese, Simplified Chinese, Walloon, Slovak, Polish, Khmer,\n   Japanese, Italian, French, Czech, Belarusian, Breton, Greek, Spanish,\n   Estonian, Irish, Galician, Hungarian, Japanese, Dutch, Telugu, Ukrainian,\n   Thai translations update\n * New Scottish Gaelic translation\n\n\nChanges between 2.0.0 and 2.0.1:\n--------------------------------\n\nAccess:\n * fix and improve the CDDB information retrieval\n * fix the samba module compilation\n * fix UDP / RTP multicast stream reception on Mac OS X when using the 10.7 SDK\n * multiple fixes for HLS support, notably on Win32 and for encryption\n * multiple fixes for Bluray discs playback\n * fix for DVD decryption on some RPC-I drives\n\nCodecs:\n * Support for MXPEG files\n * limit auto-detected threads to 4 in avcodec module\n * fix quicktime audio codecs in RTSP streams\n\nDemuxers:\n * Fix multi-file splitted RAR archive support\n * Fix a crash when seeking in mka\n * Improve MKV multi-video tracks support\n\nMuxers:\n * Fix ogm header creation\n\nAudio filters:\n * limit spatializer filter distortions\n * Use fastest SinC algorithm for samplerate module\n\nAudio output:\n * Fix S/PDIF passthrough with ALSA.\n * Remove flawed ALSA channels autodetection.\n   The available ALSA channels MUST be configured now (stereo by default).\n * Fix delay when changing the volume on Mac OS X\n\nVideo filters:\n * Fix gradfun unloading on Windows platform\n\nMac OS X interface:\n * allow to hide the playlist to get a small controller window\n * allow to hide the sidebar\n * disable Lion fullscreen mode by default, since its behavior is misleading\n   - this fixes fullscreen video output on a secondary screen\n * noticebly faster launch time\n * correct a few visual glitches and accessibility support\n * re-enable visual feedback on seek and volume changes\n * improve track synchronization panel\n * fix fontconfig cache dialog, closure of the interface and numerous crashes\n * fix crop, aspect ratio handling, DVD (no menu) support and Open subtitle menu\n\nQt interface:\n * allow a native seek slider instead of the blue one\n * fixes in the playlist, the addons dialog, the menus, the main toolbar\n   the open dialogs, preferences and customization dialogs\n * fix for fontconfig cache dialog, when rebuilding ASS fonts\n\nSkins interface:\n * fix for menus display\n * Addition of $R to display current playback speed\n * documentation update\n\nWeb interface:\n * fix mobiles display for remote control mode\n * support for .drc and .3ga extensions\n\nService discovery:\n * fix SAP discovery, where an item was added multiple times\n * fix SAP discovery on Mac OS X when using the 10.7 SDK\n * Update Jamendo selections\n\nMiscellaneous:\n * fix DBus crash\n * fix build issues on BSD, Linux/PPC and Linux/Sparc\n * fix a crash on VLM close\n\nSecurity:\n * Update libpng to 1.5.9 (CVE-2011-3026)\n * Update freetype to 2.4.9 (CVE-2012-1126 up to CVE-2012-1144)\n * Fix MMS stack overflow (SA-1201 - CVE-2012-1775)\n * Fix RealRTSP heap overflow (SA-1202 - CVE-2012-1776)\n\nTranslations:\n * Update of Czech, Spanish, Swedish, Turkish and Walloon translations\n\n\nChanges between 1.1.13 and 2.0.0:\n---------------------------------\n\nImportant notes:\n * The licenses of libVLC and libVLCcore have changed from GPLv2+ to LGPLv2.1+\n * Start/end titles/chapters are now specified with # rather than @ to fix\n   conflicts with some URLs and file names. For instance, this plays a DVD\n   from the 2nd chapter of the 1st title up to the 4th chapter of the 3rd\n   title:  vlc dvd://#1:2-3:4\n * The 40+ --*-caching options were simplified and dumbed down to 4 options:\n   - --file-caching specifies caching for local files,\n   - --network-caching specifies caching for network resources,\n   - --live-caching specifies caching for capture devices and\n   - --disc-caching specifies caching for local optical media.\n   All values are expressed in milliseconds as in previous versions.\n * HTTP server IP address, port, and TLS configuration is now centralized:\n   - The --http-host option sets the address, e.g. \"--http-host=[2001:db8::1]\".\n     By default, both :: and 0.0.0.0 are used.\n   - The --http-port and --https-port options set the port numbers.\n     By default, 8080 is used for HTTP, and 8443 for HTTPS.\n   - The TLS credentials are configured with --http-cert (public certificate),\n     --http-key (private key), --http-ca (optional CA) and\n     --http-crl (optional CRL).\n * RTSP server IP address and port are updated similarly.\n   Use --rtsp-host and --rtsp-port respectively.\n * The --miface-addr option does not exist anymore. To select the multicast\n   output interface, use --miface instead, e.g. --miface=eth0.\n * The Windows version will only work with Windows XP SP2 or later.\n   Windows 2000 SP4, Windows XP < SP2, Windows 2003 SP0 are now unsupported.\n * The Mac OS version will require Quartz Extreme compatible machines.\n\nImportant changes for packagers:\n * The default builds now assume that the operating system uses UTF-8 for\n   its file systems and files content (except the Windows port). If this is\n   not acceptable, pass --enable-non-utf8 to the configure script.\n   Non-UTF-8 file systems support will be removed in future versions.\n * The VLC plugins path can be overridden with the VLC_PLUGIN_PATH environment\n   variable. The --plugin-path command line option was removed.\n * The default tarballs are now compressed with XZ/LZMA: .tar.xz\n * OSS support is not compiled on Linux by default, pass --enable-oss to the\n   configure script if you use OSSv4 or really want to use OSS emulation.\n * The webplugins have moved to: git://git.videolan.org/npapi-vlc.git\n\nCore:\n * Major Video Core and Outputs rework and rewrite:\n   Subtitles, subpictures and OSD can now be sized and blent inside outputs\n   x11 (Unix), OpenGL (Unix) and Direct3D (Windows) are such video outputs.\n * Almost every video filter can now be transcoded\n * Playback rate doesn't get resetted to 1 between items anymore\n * Option --sub-filter was renamed --sub-source\n * Port to Android, iOS, OS/2 and Win64.\n\nAccess:\n * Multiple files are now supported inside RAR files\n * Experimental support for ClearQam devices in the BDA/DTV module\n * DVB-S scanning support on Unix\n * DVB-C scanning on Unix scans correct modulation/symbolrate if needed\n * Support for freq and video standard selection in DirectShow\n * Support for VDR recordings (http://www.tvdr.de/) folders\n * Experimental Blu-Ray Discs support using libbluray\n * HTTP Live Streaming (IETF draft) playback support\n * Blackmagic DeckLink SDI cards input support (Linux only currently)\n * Linear Systems (HD-)SDI cards input support (Linux)\n * PulseAudio audio input support\n * Support for RTP dynamic payload types by specifying the payload format\n   in an option (no autodetection): only Theora supported for now\n * Basic HTCPCP implementation for Coffee Pot control\n * Support for all QTKit-compatible video input devices, aka QTCapture\n * Support for all QTKit-compatible audio input devices, aka QTSound\n * Support for capturing partially hidden windows in the X11 Screen input\n * MPEG DASH (Dynamic Adaptive Streaming over HTTP) support\n * Support for HTTPS is now fixed in the Windows port\n\nCodecs:\n * One can now use ffmpeg-mt in conjunction with vlc, to split decoding load\n   on multiple cores. H.264, VP3, VP8, JPEG-2000, Mpeg-4 ASP/DivX and RV3/RV4\n   are notably concerned.\n * Important fixes for RealVideo 3.0 and 4.0 playback, notably in MKV\n * Experimental Hardware decoding using Broadcom CrystalHD cards\n * New module for decoding EBU subtitles (.stl)\n * Support for 9bits and 10bits H.264/AVC decoding\n * Support for 20-bits PCM and DAT-12 (digital magnetic tapes) from RTP\n * New module for Dirac encoding, using the faster libschroedinger\n   The Schroedinger module should be prefered to the Dirac one\n * Support for WMV Images, aka WMVP and WVP2, as used by Photo Story\n * Support for Lagarith Lossless video codec\n * Support for ProRes 422 video codec in 10bits\n * Support for DNxHD (VC-3) and JPEG-2000 in 10bits\n * EIA-608 closed captions improvements\n * Support for JPEG-2000 and Motion JPEG-2000 in the Windows and Mac binaries\n * Experimental support of IOMX for OpenMAX IL codecs on Android\n * One can use \"mp2 \" fourcc to encode in mpeg1/2 layer 2\n\nDemuxers:\n * New images demuxer supporting jpeg, png, targa, xcf, git, tiff, bmp, pcx, lbm\n * C64 SID file playback support of using sidplay2\n * Support for images/cover art in wma/wmv/asf files\n * Improvements in .ape files metadata reading and writing\n * New demuxer module for EBU subtitles (.stl)\n * Support for caf, mtv, awb, f4v, amr, vro (DVD-VR) files\n * Ogg, flv, mxf, amr seeking improvements\n * Major improvements in Matroska (mkv) chapters/segments handling and seeking\n * Support for duration and better seeking in Mpeg-TS files (.ts, .m2ts, .mts)\n * Mov improvements, notably for aspect-ratio handling and Audio DV tracks\n * Improved support of tracker files\n * Real Media (.rm and .rmvb) demuxer is now based on libavformat\n\nInterfaces:\n * Qt: effects dialogs rework\n * Qt: new CoverFlow-like view of the playlist\n * Qt: port to MacOS X platform\n * Qt: various interface improvements, notably on the seek bar\n * Skins2 / Qt: misc improvements and usability fixes\n * Skins2: fullscreen controller support, relative placement support\n   and important cleanups and optimisations\n * Mac OS X: re-written Main Window, which also includes the Video Windows\n   It is available in 2 looks, one grey (Lion style) and one black (QTX style)\n * Mac OS X: new Audio Effects panel adding Compressor and Spatializer filters\n * Mac OS X: new Track Synchronization panel\n * Mac OS X: new Video Effects panel for color and geometry adjustments\n * Mac OS X: re-written Open Disc functionality with automatic media detection\n * Mac OS X: support for the native fullscreen mode on OS X Lion\n * Mac OS X: enhanced AppleScript support\n * Mac OS X: support for lua extensions\n * The rc and telnet lua interfaces were merged into a new \"cli\" interface\n * lua: the recommended way to run custom interface scripts is now to pass\n   -I luaintf --lua-intf myscript\n * ncurses: heavy refactor of the complete interface\n * dbus: Upgrade to an mpris2 compliant interface, see http://www.mpris.org\n * dbus: Rewrite of the main loop to use a more efficient poll-based model\n * webUI/http: Rewrite of the web interface, using jQuery\n * webUI/http: some requests are now supported in JSON in addition to XML\n * webUI/http: path values for input and output are deprecated in favour of uri\n * Qt/Win32: the update system now downloads the updates in the temp folder\n * Qt: preferences are now searchable\n * Qt: the fullscreen controller is now stackable, full-width, at the bottom\n\nVideo Output:\n * New video output based on Direct2D for Windows 7 and Vista (with Platform Update)\n * New video output for iOS platform\n * Experimental work in progress on a video output using EGL\n * Adaptation of the OpenGL layer for OpenGL ES 1.1\n * Various vmem improvements\n * OpenGL video output now accepts YUV as input and uses fragment programs for\n   chroma conversion between YUV and RGB\n * New video output for Android platform, based on Surface\n * Support for 9/10bits output in the OpenGL output\n * Updated OpenGL video output for Mac, requires a Quartz Extreme capable machine\n * New video output based on kva API for OS/2\n\nAudio Output and Filters:\n * New audio output based on AudioQueue API for iOS\n * New audio output in memory (amem)\n * Important simplification and improvements in the core audio output\n * New audio output based on OpenSL ES API for Android\n * New audio resampler using Speex (DSP)\n * New audio resampler using the Secret Rabbit Code (a.k.a. libsamplerate)\n * New Compressor filter, a dynamic range compressor\n * New simplistic Karaoke filter\n * New audio output based on kai API for OS/2\n * Automatic handover from S/PDIF to PCM with PulseAudio 1.0\n\nVideo Filter:\n * New gradfun filter for debanding videos using dithering\n * Rewrite of the grain filter, faster and with better quality\n * New posterize filter for lowering the number of colors\n * Atmo ambilight: improve Fnordlicht support up to 254 channels\n * New sepia filter for creating sepia effect in videos\n * New deinterlacer mode Phosphor, a framerate doubling CRT TV simulator\n * New deinterlacer mode IVTC, to do live inverse telecine for NTSC films\n * New subsdelay filter to change subtitles delay\n * New anti-flickering filter\n * New OpenMAX DL IPCS filter for color space conversion and resizing\n * New video filter for denoising, based on the famous hqdn3d filter\n * Major improvements in the freetype text-rendering module, notably supporting\n   blackbox and customizable shadow.\n   NB: The freetype module is now used by default on the Mac OS X instead of\n   the quartztext module, which can still be enabled manually.\n   The Win32 font selection was improved too.\n\nStream output:\n * New livehttp-module for HTTP Live Streaming (IETF draft) output\n   example: vlc inputfile :sout=\"#transcode{vcodec=h264,acodec=mp3,\n    venc=x264{profile=baseline},width=320,vb=256,ab=96}:std{\n    access=livehttp{index=public_html/iphonestream.m3u8,\n    index-url=http://url-to-iphonestreamfile-###.ts},mux=ts{use-key-frames},\n    dst=public_html/iphonestreamfile-###.ts}\"\n * Support for Vorbis and Theora in RTP\n * Major rework of VoD support\n * New delay module, to introduce delays of one ES, when streaming:\n       #delay{id=12,delay=500}:standard...\n * New setlang, setid modules to change lang or id of one ES, when streaming:\n       #setid{id=12,new-id=42}:std...\n * New langfromtelx module, to change lang of one ES, when streaming, based on\n   a telextex page: #langfromtelx{id=12,magazine=7,page=0x99,row=1}:std...\n * New select module, to replace an existing ES with another ES in the same track\n   #duplicate{dst=bridge-out{id=1},select=video,dst=bridge-out{id=0xa3},select=audio}\n   #transcode{...}:bridge-in{id-offset=0}:select{disable=0}:setid{id=0,newid=0xa3}:autodel:std{...}\n * New libavformat/avio access_output module for network streaming\n\nServices Discovery:\n * Search API to be able to query distant search APIs from the interfaces\n * Upnp module was ported to Win32\n\nlibVLC:\n * New capabilities for libVLC:\n  ** libvlc_media_player_navigate for DVD navigation\n  ** libvlc_audio_filter_list_get, libvlc_video_filter_list_get to get the\n     list of available audio and video filters\n  ** libvlc_audio_set_format, libvlc_audio_set_format_callbacks,\n     libvlc_audio_set_callbacks\n     allow grabbing audio data from a chosen memory location in real-time.\n\nRemoved modules:\n * asademux, subsass: use libass\n * fake, invmem: use the new image demuxers\n * hal, v4l, gapi, omapfb, hd1000a, hd1000v: obsolete unmaintained modules\n * id3tag: use taglib\n * upnp: use upnp_intel\n * removal of old telnet interface in favor of the new lua CLI\n * removal of http interface in favor of luahttp\n * removal of the noise filter\n * removal of the SDL audio output, use the native outputs\n * growl_udp: use Growl for local notifications on the Mac. UDP support will be\n              removed in Growl's next release, too.\n * removal of the OSSO screensave module, use the MCE one\n\nTranslations:\n * Update of translations for most languages.\n * New Telugu and Kurmanji translations.\n\n\nChanges between 1.1.12 and 1.1.13:\n----------------------------------\n\nSecurity:\n * Heap overflow in TiVo demuxer fixed.\n * Same default ACL for HTTP requests as for the rest of the HTTP interface.\n\nAudio outputs:\n * PulseAudio channels mapping (non-stereo) fix.\n * PulseAudio stream accidental overflow recovery.\n\nVideo outputs:\n * XVideo support for mixed CPU/GPU endianess (especially on PowerPC).\n * XVideo support for automatic color keying.\n * xosd Xlib initialization failure fix.\n\nDecoders:\n * Camtasia decoding fix.\n\nQt interface:\n * Rare crash while seeking fixed.\n * V4L2 video standard selection fixed.\n\nTranslations:\n * Update of Chinese simplified, Estonian, German and Polish languages.\n\n\nChanges between 1.1.11 and 1.1.12:\n----------------------------------\n\nAudio outputs:\n * Mac OS X / auhal: multiple fixes for the Digital Audio output (S/PDIF)\n                     including support for OS X Lion\n * Multiple fixes and improved synchronization for PulseAudio support\n * Support for AC-3 and DTS passthrough with PulseAudio 1.0\n\nUnix port:\n * Fix build compatibility with taglib < 1.6 and Xulrunner 1.9.1\n\nMisc:\n * Fix crashes with Japanese locale on OS X\n * Minor fixes for Webplugin under Win32, AVI demuxer, smem and AudioScrobbler\n * Fix crash in HTTP and RTSP server (stream output or Web interface)\n\nTranslations:\n * Update of Breton, Chinese Simplified and Basque\n\n\nChanges between 1.1.10 and 1.1.11:\n----------------------------------\n\nSecurity:\n * Fix buffer overflows in the RealMedia demuxer (CVE-2011-2587)\n   and the AVI one (CVE-2011-2588).\n\nMac OS X:\n * Fixed scrolling direction if the input device's signal is inverted\n * Update Auhal audio output to the latest API\n * Fix images disappearing issue on the interface\n * Reduced installation size by up to 30 MB\n * Resolved conflict between iTunes and VLC wrt Media Key handling\n\nMozilla/ActiveX webplugin:\n * Fullscreen mode is fixed on Win32\n * Very simple fullscreen controller is visible on Win32\n\nDemuxers/Meta Readers:\n * Better support for cover art embedded in mp4, wma\n\nMuxers/Output:\n * Fix AVI muxer so the generated files are readable on other players\n\nExtensions:\n * Multiple fixes for crashes and malfunctionning issues\n\nQt Interface:\n * Fix quitting on Linux\n * Fix opening of VIDEO_TS folders through the open disc dialog on Windows\n * Miscellaneous\n\nWin32 port:\n * Update of codecs, fixing the mpeg-2 decoder crash\n\nTranslations:\n * Update of Slovak, Lithunanian, Russian, Brazillian Portuguese, Serbian\n\n\nChanges between 1.1.9 and 1.1.10:\n---------------------------------\n\nWindows and Mac OS X:\n * Update of external library modplug, to address multiple security issues\n\nMac OS X Interface:\n * Improved Media Key handling based upon SPMediaKeyTap by Spotify AB\n * Fix for various crashes and small issues\n\nDemuxer:\n * Fix heap corruption / integer overflow in XSPF playlist parser\n\nAudio output:\n * PulseAudio output re-written due to unstability of the current one\n\nWin32 port:\n * Remove the fontconfig dependency from the freetype module\n\nMiscellaneous fixes in:\n * Windows 7 taskbar buttons\n * Qt interface\n * asx, live555, dvdnav demuxer\n * RTP output and XML export\n * Subtitles colours when using GPU decoding on Windows\n * v4l2 access\n\nTranslations:\n * Update of Norwegian Bokmål, Slovak, Afrikaans, Luganda,\n   Brazillian Portuguese, Irish, Thai, Estonian, Chinese, Polish,\n   Dutch, German, Galician, Bulgarian, Lithuanian and Japanese translations\n * Initial Basque, Zulu, Peul, Amharic, Acoli, Chiga translations\n\n\nChanges between 1.1.8 and 1.1.9:\n--------------------------------\n\nWindows and Mac OS X:\n * Update of external library modplug, to address a security issue\n\nDemuxers:\n * mp4: Fix heap-based buffer overflow (VideoLAN-SA-1103)\n\nMac OS X Interface:\n * Miscellaneous interface look adjustments\n * Improve Apple Remote handling\n * Fixe bugs in the Streaming / Transcoding wizard\n * Layout fixes in the Preferences and Controls windows\n * Fix incomplete list of hotkeys in the Preferences dialog\n * Fix quitting through Apple Events (Dock menu, App Switcher, AppleScript, etc.)\n\nMac OS X Port:\n * Fix Growl local notification plugin\n * VLC bundle now includes the Growl framework\n * Fixes for eyeTV\n\nTranslations:\n * Updates of Lithuanian, Estonian, Chinese, Japanese, Bengali, Dutch, Polish,\n   German, Galician, Traditional Chinese translations\n * New Luganda Translation\n\n\nChanges between 1.1.7 and 1.1.8:\n--------------------------------\n\nMac OS X Interface:\n * New UI graphics by Damien Erambert\n\nInterfaces:\n * Oldrc interface is again the default RC interface, on Windows\n * Luarc, luahttp and luatelnet fixes\n * Qt and Mac OS X fixes\n * numerous Skins2 fixes, notably winamp2 skins\n\nEncoder:\n * new libschroedinger-based Dirac codec encoder, faster than the current one\n\nAccess/Demuxers/Codecs:\n * Subtitles auto-detection is back for .txt files\n * vod/rtsp server and rtsp input fixes\n * mp4 demuxer improvements\n * ogg, rstp input, video filters minor fixes\n * taglib's replaygain is fixed for mp3\n * vobsub support has an improved auto-detection\n * fix a crash in malformed ape files\n\nMiscellaneous fixes in:\n * Pulseaudio audio output, notably for usb cards\n * Stacktraces are now limited in size on Windows\n * Video resolution is now limited to 8192x8192, for security reasons\n   See CORE-2011-0208, CVE-2010-3275, CVE-2010-3276\n * Configure and build system improvements\n * DirectShow and BDA build headers have been updated\n\nTranslations:\n * Update for Finnish, Galician, Dutch, Chinese, German, Japanese, Lithuanian,\n   Slovak, French, Polish, Estonian, Brazillian Portuguese and Hebrew\n * New icelandic translation\n\n\nChanges between 1.1.6 and 1.1.7:\n--------------------------------\n\nLinux port:\n * Integration with the KDE GUI platform is disabled due to KDE bugs\n   #234484 and #260719.\n\nMac OS X port:\n * Updated live555 library to fix playback of RTSP and Freebox streams\n * Running VLC in 64bit mode requires Mac OS X 10.6.0 or later for speed\n   and stability reasons\n\nDemuxers:\n * Fix for Matroska / WebM remote code execution vulnerability.\n   VideoLAN-SA-1102\n\nTranslations:\n * Update for Hebrew, Japanese, Danish and Russian translations\n\n\nChanges between 1.1.6 and 1.1.6.1:\n----------------------------------\n\nSource:\n * Fix libnotify, lirc, pulse compilation and packaging for Unix/Linux\n\n\nChanges between 1.1.5 and 1.1.6:\n---------------------------------\n\nAudio output:\n * Multiple fixes and improvements on PulseAudio output\n   PACKAGERS are VERY STRONGLY advised to update libpulse to 0.9.22.\n   Update is required to use PulseAudio with the Phonon-VLC backend (KDE)\n   and with the Mozilla VLC web browser plugin.\n\nAccess:\n * Fix the Audio CD crash when looking for CDDB metadata on Windows\n\nDecoders:\n * Support for MPC SV7 and SV8 on Windows and Mac OS X (Unix was already working)\n * Enabled FluidSynth MIDI playback plugin on Mac OS X\n * Faster VP8/Webm decoding with recent codecs libraries\n * Fix heap corruption in CD+G decoder - CVE-2011-0021 / VideoLAN-SA-1101\n\nDemuxers:\n * Fix Buffer overflow in Real demuxer - CVE-2010-3907 / VideoLAN-SA-1007\n * Fix some asf/wmv seeking issues, notably when seek didn't go to a keyframe\n * Support for 24-bits PCM over RTP (audio/L24)\n\nSubtitles and renderer:\n * Do not auto-detect .txt files for subtitles\n * Mark more freetype options as safe\n * Mac OS X: fixed fontconfig cache creation\n * Fix heap corruption in subtitle decoders, potentially exploitable,\n   discovered by Harry Sintonen - sintonen at iki.fi - CVE-2011-0522\n\nVisualization:\n * Fix projectM visualization for Linux in all locales\n * Fix projectM visualization support for Windows\n * Various projectM improvements: the module should be working now\n * Fix goom crash on Windows XP and Mac OS X\n\nInterfaces:\n * Qt4: fixes for media keys processing and MCE remotes\n * Qt4: various fixes and portability improvements\n\nMiscellaneous fixes:\n * KDE device solid actions\n * XDG screensaver\n * Transcode integer overflow\n * HTTP Icy metadata reading\n * Windows: revert to 1.1.4 performance timers\n\nTranslations:\n * Update translations for Chinese, Nippon, Slovak, Estonian, Spanish, Galician,\n   Swedish, Bulgarian, French, Bengalese, German, Slovak, Japanese, Dutch,\n   Polish, Hungarian, Indonesian, Sinhala and Irish\n\n\nChanges between 1.1.4.1 and 1.1.5:\n----------------------------------\n\nSecurity:\n * Fix a Windows crash on accessing Network Shared files/drives,\n   VideoLAN-SA-1006\n\nAccess:\n * Support for RTP access for H264 streams by specifying the demux in the MRL\n\nServices Discovery:\n * Integration in the playlist, of a list of web shows, provided by channels.com\n\nDemuxers:\n * Game Music Emu (GME) plugin rewritten, using the proper C API\n * DVDnav and DVDread fixes for encoding and misc issues\n * Playback of live http .Webm streams\n * Taglib thread-safety fix\n\nDecoders:\n * Fix decoding of H264 using DxVA2 using Intel IGP, thanks to the donation from\n   \"Puget Systems\"\n\nSkins:\n * Add an icon to VLC on Linux\n\nVideo Output:\n * fix a bug that could lead to 100% CPU usage on XCB\n\nInterfaces:\n * fix for Qt bug where VLC didn't exit properly on some Windows XP configuration\n * fixes on luatelnet and luarc\n\nMiscellaneous crashes and fixes in various plugins (telnet, live555, theora and\n TS-mux, Qt)\n\nlibLVC:\n * add libvlc_media_new_fd() to play directly file descriptors (not Win32/Win64)\n * Miscellaneous fixes\n\nTranslations:\n * Update translations for Walloon, Lithuanian, Spanish, Turkish, Estonian, Dutch,\n   Bengali, German, Polish, Brazillian Portuguese, Japanese, Italian, Galician,\n   French and Ukrainian\n * Major update and activation on Windows of Modern Greek\n * New Asturian translation\n\n\nChanges between 1.1.4 and 1.1.4.1:\n----------------------------------\n\nMac OS X:\n * Fixed video output on PowerPC-based Macs for videos with widths divisible\n   by 16\n * Fixed an issue with the Equalizer's 170Hz slider\n\nDemuxer:\n * Fix crash when closing rtsp streams\n\nQt interface:\n * Fix Windows 7 jumplists with Unicode files\n * Various fixes for Windows\n\nTranslations:\n * New Armenian translation\n * Update translations for Dutch, Estonian, Lithuanian, Japanese, Nynorsk,\n   Brazillian Portuguese, Armenian, Wallon\n\n\nChanges between 1.1.3 and 1.1.4:\n--------------------------------\n\nWin32:\n * Fix a security issue when loading DLLs, especially in Qt4 and dmo modules,\n   See VideoLAN-SA-1005\n * Fix folders opening from the interface\n\nTranslations:\n * Update translations for Lithuanian, Bengali, Slovak, French, Dutch, Ukrainian\n   Polish, Simplified Chinese, German and Galician\n\n\nChanges between 1.1.2 and 1.1.3:\n--------------------------------\n\nAccess and demuxers:\n * fixes for FTP relatives path and FTP directory support\n * fix for podcasts parsing\n * DVD: fix an assert error and various memory leaks\n\nTaglib:\n * fix NULL dereferences, as reported by FortiGuard Lab,\n   CVE-2010-2937 / VideoLAN-SA-1004\n\nPlaylist:\n * fix a regression where the wrong entry was played\n * fix m3u playlists exports\n\nSkins2:\n * fix video autoresize behaviour\n\nTranslations:\n * Update translations for Dutch, Sinhala, Hebrew, Estonian, Spanish and Bengali\n\nWindows and Mac:\n * Update of many codecs libraries, fixing bugs and improving speed\n\nMac:\n * architecture-specific installations will now be replaced by specific updates\n\nBSD:\n * Add AltiVec detetion for OpenBSD/powerpc\n\n\nChanges between 1.1.1 and 1.1.2:\n--------------------------------\n\nDemuxers:\n * Avformat fps displaying fix\n * TS, fix an issue where some programs would get dropped (fixes DVB issues too)\n\nAudio filters:\n * fix timestamps handling on some filters that provoked issues when playback\n   of mono streams, especially on Windows\n\nWindows:\n * fix a bug in direct3d video output with old nVidia drivers that broke video\n   playback with overlay (YUV->RGB)\n * fix console output encoding\n\nInterface and extensions:\n * Youtube and other scripts updates\n * Misc fixes in Qt4 (especially VLM and EPG dialogs) and MacOS interface\n\n\nChanges between 1.1.0 and 1.1.1:\n--------------------------------\n\nlibVLC:\n * New capabilities for libVLC:\n   * Adjust video filter control: libvlc_adjust_Enable,\n     libvlc_adjust_Contrast, libvlc_adjust_Brightness, libvlc_adjust_Hue,\n     libvlc_adjust_Saturation, libvlc_adjust_Gamma\n   * libvlc_media_player_set_pause() can force the pause state, whereas\n     libvlc_media_player_pause() would only toggle it.\n   * libvlc_set_user_agent() configures the \"user agent\" strings used for some\n     protocols (HTTP, PulseAudio...). This replaces the --http-user-agent and\n     the former --user-agent libvlc_new() parameters.\n   * libvlc_video_set_callbacks() and libvlc_video_set_format() allow grabbing\n     video frames from a chosen memory location in real-time. This replace the\n     ugly --vmem-* libvlc_new() parameters in previous versions.\n     See http://wiki.videolan.org/LibVLC_SampleCode_SDL as an example.\n   * libvlc_audio_get_delay() and libvlc_audio_set_delay() configure the delay\n     between audio and video/subpictures for the current input.\n * Various fixes and crash preventions, especially when video functions were\n   called early\n\nDecoders/Demuxers:\n * Fix performance issues with GPU decoding using DxVA2 using ATI graphic cards\n   You NEED ATI Catalyst 10.7\n * Fix :program selection in TS and DVB-T\n * Fixes and improvements for MKV, Avformat and Avcodec modules\n * Fix mod (.xm, .s3m, .it) files support on Windows and Mac builds\n\nStream output:\n * Fix h264 streaming in ts\n\nInterfaces:\n * Qt: fix preferences, hotkeys, messages and some fulscreen behaviour\n * Skins: support for mousewheel in fullscreen, fix radialsliders\n * Http: fix fullscreen toggle\n\nLinux:\n * Fix pulse closing\n * VAAPI small improvements, notably for extraction mode selection\n\nMacOS:\n * Multiple interface and crash fixes\n * Deinterlace selection is repaired\n * Crashes when playing multi-channel tracks fixes\n\nWindows:\n * Activation of DEP on XP SP3\n * Fix opening of .m3u and .pls playlists\n * Fix crash when My Document isn't available\n * Fix crash when Windows was getting into standby while playing video\n\nTranslations:\n * Update translations for Spanish, Polish, German, Sinhala, Hungarian, Khmer,\n   Brazilian Portuguese, Chinese, Hebrew, Slovak, Galician\n\n\nChanges between 1.0.6 and 1.1.0:\n--------------------------------\n\nImportant changes for users:\n * On Linux, known bugs in the ALSA library might prevent audio output.\n   Update to alsa-lib 1.0.24 or later, or use the PulseAudio output instead.\n\nImportant changes for packagers:\n * The module cache has moved to ${libdir}/vlc/. The module cache can now be\n   generated at install time except if you use staged installation. In the\n   later case, you can generate the module cache in your post-inst script\n   by invoking 'vlc-cache-gen'. If the module cache is not present and vlc\n   can't write in ${libdir}/vlc/, it will result it vlc taking a long time to\n   launch each time.\n * Most X11-related plugins now use XCB instead of Xlib. VLC now uses\n   - xproto,\n   - xcb, xcb-shm, xcb-xv, xcb-randr (from libxcb),\n   - xcb-keysyms (from xcb-utils),\n   - x11-xcb (from libx11) - only for GLX support.\n * On X11 platforms, a _working_ version of xdg-screensaver is typically\n   required to inhibit the screensaver during video playback.\n\nAccess:\n * Support for the sftp protocol\n * Support for CDDB servers for Audio-CD on the Windows port\n * New memory input (imem) access and access_demux module to feed VLC from data in memory\n * New avio module to use libavformat capabilities for network streams, like rtmp://\n * Port of the screen module from Xlib to XCB\n * Port of the dc1394 module from libdc1394 to libdc1394 v2.0\n\nDecoders:\n * Support for DxVA2 for H.264 decoding on GPU on Windows Vista and 7\n * Support for VAAPI for H.264 decoding on GPU on GNU/Linux\n * Support for Audio/Video decoders and encoders using OpenMAX IL components for DSP\n\n * Support PGS subtitles for Blu-Ray\n * Support for HD-DVB subtitles - Display Definition Segment\n * Invmem module improvements\n * Support for Atrac1 audio codec\n * Support for SSE3 and SSE4 capabilities in some codecs\n * Multiple improvements for subtitles styles in .SRT and .SSA\n * Support for native decoding of Windows Media Speech (Voice) audio codec\n * Support for AMR-NB audio codec on the Windows and Mac port\n * Support for Indeo5 video codec\n * Improvements on the FLAC format (7.1 channels and 88.2/176.4/192 kHz support)\n * Direct rendering is used more often with H.264 in avcodec module\n * Support for MPEG-4 ALS lossless audio codec\n * Support for VP8 codec\n * Support for 7.1 channels in vorbis audio\n\nDemuxers:\n * Many fixes on Matroska support (notably seeking) and support for Webm format\n * Support for .aob files from DVD-Audio (MLP and LPCM) (Full disc support is NOT present yet)\n * Support for ADPCM in .flv streams\n * Support for TwinVQ (.vqf) and AMV (.amv) files\n * Various EGP improvements\n * Support for embedded subtitles in OpenDML and legacy .avi files\n * Metadata and cover art improvements\n\nPlaylist:\n * WPL and ZPL playlist support\n * Lua scripts for Mpora, Vimeo playback and Rockbox FM radios\n * New Play-And-Pause function to stop playback on latest video image\n * Podcast images are now displayed\n\nVideo Output:\n * Rewrite of the video output core and most video outputs\n * Added desktop mode to the Direct3D output module. It differs from DirectX\n   desktop mode, because it hides the desktop icons, but reacts to mouse clicks.\n * New x11, glx and xv modules based on XCB\n * New deinterlacing modes based on yadif and yadif(x2)\n * New audio/video filter to show audio level on the video output\n * Enhanced AtmoLight filter with hardware support for\n     Classic AtmoLight (http://www.vdr-wiki.de/wiki/index.php/Atmo-plugin)\n     Quattro AtmoLight (use just 4 Classic AtmoLights as one)\n     MoMoLight (http://www.ambilight4pc.com/momolight/momolight.html)\n     Simple serial DMX controller (http://www.ulrichradig.de/ search for DMX)\n\nExtensions:\n * New content extensions lua framework\n\nAudio filters:\n * Chorus/Flanger audio filter\n * 3F1R to stereo down-mix filter\n * Dolby mixer, parameterized equalizer, trivial mixer, scaletempo, bandlimited\n   resampler, linear resampler, ugly resampler, converter_fixed, DTS to SPDIF\n   and A/52 to SPDIF filters have been upgraded to the \"audio filter2\" API\n * NEON assembly audio converter module\n * Converter filters have been rewritten and extended to support s32 as input\n\nService discovery:\n * Service discoveries can now be written in lua\n * Service discovery for Picture/Music/Video user directories\n * Service discovery based on libudev\n * Shoutcast Service discoveries are now removed\n\nEncoders:\n * x264, add psy-rd parameter and change default settings\n * x264, add profile-limitter same way as x264.exe has, for example\n    #transcode{vcodec=h264,venc=x264{profile=baseline,level=1.2},vb=384,width=320,height=176}\n * x264, defaults to crf=23 as x264.exe-does, if bitrate is given,\n   uses ABR and if qp-value is set uses CQP\n * libx264-version 0.76 or higher is required\n * x264 has tune/preset parameters supported\n\nStream output:\n * New smem module, streaming to memory\n * Allow duplicate outputs to be merged, like:\n   --sout \"#duplicate{dst=transcode{vcodec=mp2v},select=es=0,dst=transcode,select=es=1}:std{...}\"\n\nInterfaces:\n * Renamed the legacy rc, telnet and http interfaces to oldrc, oldtelnet\n   and oldhttp.\n * rc, telnet and http are now implemented using the lua interface system.\n * qt4 interface contains new iconview and listview mode for playlist\n\nVisualization:\n * Support of .milk visualization files using projectM libraries\n\nMac OS X Port:\n * Vastly improved VLCKit framework\n * A new dialog provider for libvlc-internal interaction without full interface\n * Improved update detection and installation by using the Sparkle framework\n   by Andy Matuschak et al.\n * New CoreText based text renderer replacing the former ATSUI renderer\n * New Video output module (mostly targetting VLCKit)\n * Optimised behavior when using the 2009 Apple Remote\n\nWindows port:\n * Integration in Windows 7 taskbar\n * Playback of .Midi files is supported through fluidsynth's module\n\nMaemo port:\n * Multiple improvements for N900 compliance and efficiency\n * Support for HW accelerated video decoding on N900\n * Improvements to the maemo/hildon interface\n\nMisc:\n * new sqlite module\n * --save-config command line option not supported anymore.\n * Fixed and reenabled netsync module.\n * Improved Solaris port\n\nBindings:\n * new C++ wrapper around libVLC: libVLCpp\n * phonon-VLC backend is now usable\n\nRemoved modules:\n * csri codec: use the libass module instead.\n * galaktos visualisation: use the new projectM module instead.\n * showintf: Useless in Qt and on Mac OS X\n * transrate: broken since too long\n * Xlib x11, Xlib xvideo, Xlib glx: Use the new XCB modules instead.\n * HAL: Use libudev instead.\n * gtk_main, gtk_main2, gnome_main, gnome_main2 and pda interfaces\n * WinCE, BeOS and qnx interfaces\n * opie, qte and qte_main interfaces\n * linear_resampler and trivial_resampler are removed: use the ugly one.\n * XvMC accelerated modules: use VAAPI instead.\n * MGA (Matroska) for Linux: use Linux Framebuffer (or X) instead.\n * opengllayer: use macosx_video instead.\n * cddax: use cdda instead.\n * cmml and tarkin codecs are removed because they are dead codecs.\n * realaudio codecs: use libavcodec\n * access_file removed in favor of filesystem\n * RTMP input and output: use avio module\n\n\nChanges between 1.0.5 and 1.0.6:\n--------------------------------\n\nAccess:\n * Fix crash on FTP URI with no file path\n\nDecoders/Packetizers:\n * Fix overflows in A/52, DTS, MPEG Audio and subtitles support\n\nDemuxers:\n * Update LUA script for Youtube pages\n * Fix crashes in AVI, ASF and Matroska files\n * Fix crashes on malformatted ZIP archives\n * Fix crashes and leaks in the FFmpeg/avformat plugin\n * Fix crash on invalid XSPF playlist\n\nX11 port:\n * Partial Xlib threading fixes\n   More complete fixes are available in VLC 1.1.0. Please update!\n\nInterfaces:\n * Fix crash (use after free) in Qt4 bookmarks\n * Fix a few crashes in Qt4 playlist\n\nTranslations:\n * Simplified Chinese, Estonian, French, Japanese, Korean, Spanish, Swedish\n   and Walloon translations updated\n * Sinhala translation started\n\nRemoved modules:\n * RTMP input and output are removed due to security problems. Please update\n   to VLC 1.1.0 which provides an FFmpeg-based RTMP input if needed.\n\n\nChanges between 1.0.4 and 1.0.5:\n--------------------------------\n\nDecoders:\n * SubRip extra styles improvements\n * Fix potential crashes in SSA and svg decoders\n\nMac OS X Interface:\n * Improved support for the 2009 Apple Remote\n\nWindows port:\n * Use of gcc 4.4.2 to compile instead of gcc 4.2. This might slightly\n   increase performance and fix x264 issues\n\nTranslations:\n * Portuguese Brazilian, Lithuanian, Romanian, Ukrainian, Japanese, Bengali,\n   Walloon, Galician, Danish, Khmer, Polish, Slovenian, Vietnamese, Finnish\n   Russian, Slovak translation updates\n * New Malayalam, Macedoninan, Nynorsk translations\n\n\nChanges between 1.0.3 and 1.0.4:\n--------------------------------\n\nAudio outputs:\n * Fix deadlocks in the audio output core\n * Make PulseAudio the default output if available\n\nVideo outputs:\n * Fix fullscreen mode with KDE 4.3.3 and other window managers\n * Fix incompatibility with cairo-dock and compositing\n\nInput:\n * Fix DVB scanning regression from VLC 1.0.3\n * Support for XZ-compressed byte stream (LZMA algorithm)\n\nPlaylist:\n * Support for .m3u8 playlist files (UTF-8 M3U)\n\nUnix:\n * Support for xcb-keysyms version 0.3.4 or higher\n * Fix globalhotkeys on FreeBSD\n\nQt4 interface:\n * Fix opening V4L version 1 devices\n * Fix default destination ports in the streaming wizard\n\nTranslations:\n  * New Walloon translation\n  * Swedish, Ukrainian and French translation updates\n\n\nChanges between 1.0.2 and 1.0.3:\n--------------------------------\n\nVideo outputs:\n * Fix video quality when resizing the video on Windows Vista and 7, due to\n   regressions in most popular drivers\n * New deinterlacers modules based on yadif and yadif(x2) algorithms\n\nDecoders:\n * Windows version supports now natively the WMA Professional codec, as it\n   didn't work in the packaged version of 1.0.2\n * Fix downmixing of particual 4.0 AC-3 audio tracks\n\nEncoders:\n * x264 has profile-limitter, like:\n    #transcode{vcodec=h264,venc=x264{profile=baseline,level=12}..}\n\nInput:\n * Update for appletrailers lua script\n * Fixes on the RAR stream filter\n * Fix for E-AC3 in ATSC/TS streams\n * Various fixes for v4l and v4l2\n * Fix a crash in mjpeg demuxer\n\nService discovery:\n * New udev module for linux\n\nQt4 interface:\n * Fixes on the playlist and the stream output panels\n\nTranslations:\n * French, Galician, Korean, Polish, Russian, Romanian, Slovak and Ukrainian updates\n\n\nChanges between 1.0.1 and 1.0.2:\n--------------------------------\n\nDecoders:\n * Native support for WMA Professional, without the use of the Win32 dlls\n * Fix issues in subtitles, especially SSA ones\n * Various fixes on theora and ogg\n\nDemuxers:\n * Various fixes for EPG support in MPEG-TS demuxer\n * Fixes for potential stack overflow in .avi, .mp4 and .asf demuxers\n\nAccess:\n * Fixes for v4l2 devices\n * Fixes for dvb-c channels-scanning\n\nQt Interface:\n * Fix some playlist sorting issues\n\nMac OS X Interface:\n * Fixed a crash when updating VLC\n * Fixed a crash related to QTKit when opening video files (10.6 only)\n * Added the ability to play 2nd media in sync to the primary item (input-slave)\n * Added the \"Quit after Playback\" feature\n\nMac OS X Port:\n * The \"Delete Preferences\" script is now delivered as a Universal Binary\n   with native code for PowerPC, Intel and Intel 64bit\n * Full 64bit runtime compatibility on both Mac OS X 10.5 and 10.6\n   - no support for Goom and SDL\n   - limited text rendering support\n   - This port is still considered as EXPERIMENTAL despite its binary release.\n\nEncoders:\n * MPEG2 transrate stream output removed\n * x264 default-values closer to x264.exe defaults.\n * x264 rc-behaviour fixes:\n   - if user defines qp-value, CQP-mode is used\n   - otherwise if user defines vb=0, CRF-mode is used\n   - otherwise ABR-mode is used\n * x264 set vbv-bufsize/vbv-maxsize better if user hasn't defined these:\n   - ABR mode set vbv-max-bitrate=bitrate\n   - vbv-bufsize is bitrate * seconds between keyframes (keyint/fps)\n\n\nPlaylist:\n * Lua scripts for Mpora and Vimeo playback\n\nUnix builds:\n * Various fixes to enable 1.0 to build on Solaris and OpenBSD\n\nTranslations:\n * New Kazakh and Croatian translations\n * Lithunanian translation is available on Windows\n * Galician, Korean, Nepali, Vietnamese, Ukrainian, Portuguese Brazilian,\n   Arabic and French translation updates\n\n\nChanges between 1.0.0 and 1.0.1:\n--------------------------------\n\nDemuxers:\n * Fix wmv/asf issues that caused audio to drop\n * Various fixes for ac3, mp3, dts and stability for wav format\n * Fix seek in RTSP in conformity to RFC 2326\n * Fix Dailymotion access script\n * Fix crashes in xspf files handler\n * Fix seeking and timing issues in some flv files on Windows version\n\nAccess:\n * Add extra caching for files on network shares\n * Prevent integer underflow in Real pseudo-RTSP module, discovered by tixxDZ,\n   DZCORE Labs, Algeria\n\nDecoders:\n * Fix seeking in mpeg2 video files\n * Improve SSA subtitles rendering\n * Update most codecs for the Windows and Mac version\n\nMuxers:\n * Fix sound recording of .flv files with mp3 audio\n\nQt Interface:\n * Possibility to change the opacity level of the Fullscreen controller\n * Fix various crashes and VIDEO_TS folders opening\n\nMac OS X Interface:\n * Added options to disable support for Apple Remote and Media Keys\n * Fixed options for Volume, Last.fm password and Subtitle Encoding\n * Fixed redraw issues when autosizing the video window\n * Preferences panel now includes help through tool-tips\n * More reliable Information and Messages panels\n * Fix various crashes\n\nWindows port:\n * The ZVBI module is now available for Windows, for complete teletext support\n\nTranslations updates for Brazillian, French, German, Korean, Norwegian Nynorsk,\nLithuanian\n\n\nChanges between 0.9.10 and 1.0.0:\n---------------------------------\n\nImportant notes:\n----------------\n * Alsa and OSS audio capture has been removed from the v4l and v4l2 accesses.\n   See 'Access:' for more info.\n * Support for Mac OS X 10.4.x was dropped due to its technical limitations\n\nPlayback:\n * Instantaneous pausing\n * Frame-by-Frame playback\n * Finer speed control\n * On-the-fly recording for all medias\n * Timeshift for most medias\n * RTSP trickplay support\n * Subtitles core improvements and fixes\n\nDecoders:\n * New AES3 (SMPTE 302M) decoder\n * New Dolby Digital Plus - E-AC-3 (A/52b) decoder\n * New True HD/MLP decoder and parser\n * New Blu-Ray Linear PCM decoder\n * New QCELP (Qualcomm PureVoice) decoder\n * Improved Real Video 3.0 & 4.0 decoder\n * New WMA v1/2 fixed point integer decoder\n * Closed Captions using the SCTE-20 standard are now correctly decoded\n * Improvement of WavPack decoder to support all integer modes and float mode\n * Corrections on 5.1 and 7.1 channel decoding and ordering\n\nDemuxers:\n * Support for Dirac, MLP and RealVideo in Matroska files\n * Major improvements in RealMedia files opening (.rm and .rmvb)\n * Improvements of the TS demuxer for M2TS files from Blu-Ray and AVCHD\n * Metadata for mod files are supported\n * GSM codecs in Wav files are supported\n * New raw audio demuxer supporting raw PCM streams\n * New Dirac demuxer for raw Dirac streams\n\nEncoders:\n * Dirac encoding using libdirac (supported in Ogg and in TS)\n * Shine mp3 fixed-point encoder\n\nAccess:\n * RTSP authentication with Darwin Streaming Server\n * On-the-fly gzip and bzip2 file decompression (except on Windows)\n * Playback for video in uncompressed multi-RAR archives\n * DVB-S and ATSC cards support on Windows\n * New OSS and Alsa accesses. The v4l2 and v4l modules no longer support\n   OSS or Alsa audio input. Use --input-slave alsa:// or oss:// if needed.\n * DVB scanning on linux\n * EXPERIMENTAL Blu-Ray Disc and AVCHD Folders support\n * On-the-fly zip file decompression and browsing (MRL of the form\n   zip://file.zip!/file.avi to specify the file - the development form of\n   zip://file.zip|file.avi is not supported anymore)\n * Opening of any file descriptor using 'fd://'\n * MTP device access on Unix\n * CD-Text support on the cdda module (CD-Audio)\n * :start-time and :stop-time can handle sub-second values\n\nInputs:\n * Mouse cursor support in x11 and win32 screen modules\n * Screen module now features partial screen capture and mouse following on\n   Windows and Mac OS X.\n\nPlaylist:\n * Export the playlist in HTML\n * Lua script for BBC radio playback\n * Better metadata handling and reading\n\nLinux/Windows interface:\n * Global Hotkeys on Windows and Linux\n * Various fixes for skins2 interface\n * Recently played items list\n * Interface toolbar customizations\n * Various Improvements on the Qt interface:\n    - More menus actions\n    - Finer speed slider\n    - Improvements on many dialogs\n    - New dialog for plugins listing\n    - Fixed-size mode for videos\n    - Better Teletext, trickplay and encrypted streams control\n * Better integration in GTK environments\n\nMac OS X Interface:\n * Controllable by the Media Keys on modern Apple keyboards (brushed Aluminium)\n * Reveal-in-Finder functionality for locally stored items.\n * Easy addition of subtitles through the Video menu\n * Additional usability improvements\n\nStream output:\n * Restored the old mpeg2 transrating module.\n * Multiple bridge-in instances are now possible.\n * bridge-in can be used to configure a placeholder stream.\n * Remote Audio Output Protocol (AirTunes) module.\n * Fixed mosaic memleak. Mosaics are now usable again.\n\nMaemo Port:\n * New Maemo port with:\n   - an interface based on Hildon framework.\n   - scaler based on the swscale_nokia770 library.\n\nWindows CE Port:\n EXPERIMENTAL work for the winCE port has been done.\n\nMac OS X Port:\n * EXPERIMENTAL 64bit support\n * Speed improvements by using llvm-gcc\n * New document icons by Dominic Spitaler\n * Support for latest iSight models\n\nAudio output:\n * Removed obsolete Esound and aRts plugins\n * Surround support for PulseAudio\n\nVideo output:\n * Effects (cube, torus, etc.) removed from OpenGL video output\n * Video is able to stay in original size and to zoom in fullscreen\n   (hotkey 'o') while keeping black borders\n * Image video output has been rewritten into a video-filter named 'scene'.\n   The old image video output has been removed.\n * Support for scaling and converting video chromas with FFMPEG imgresample was\n   withdrawn due to bugs. Please use the newer FFMPEG swscale instead.\n\nMiscellaneous:\n * Invmem, a fake codec to display images from external applications\n\nNew Localization:\n * Khmer\n * Mongolian\n * Sorani\n\n\nChanges between 0.9.9a and 0.9.10:\n--------------------------------------\n\nHTTP Interface:\n * Fixed default ACL\n\nMac OS X:\n * Fixed crashes on multi-screen setups\n * Corrected volume and subtitle encoding options in the Preferences\n * Improved Information panel behavior, when playlist is not displayed\n * Fixed QTCapture input support for the latest iSight models\n * Added a menu-item to unlock the video window's aspect ratio\n * Fixed redraw issues when autosizing the video window\n * Updated libpng, libgpg-error, libgcrypt, fribidi\n\nVarious fixes to the following modules:\n * access:\n   - HTTP, SMB\n   - updated and additional access scripts (BBC radio, dailymotion, ...)\n   - Prevent integer underflow in Real pseudo-RTSP module, discovered by tixxDZ,\n     DZCORE Labs, Algeria\n * stream out:\n   - RTP, RTSP VoD, Mosaic Bridge\n * decoder:\n   - TSCC\n\n\nChanges between 0.9.9 and 0.9.9a:\n---------------------------------\n\nMac OS X:\n * Updated multiple 3rd party libraries to keep in sync with the Win32 port\n * Playback fixes for PowerPC-based Macs\n\n\nChanges between 0.9.8a and 0.9.9:\n---------------------------------\n\nDecoders:\n * Experimental new decoder for Real Video 3.0 & 4.0\n\nDemuxers:\n * Various fixes related to real demuxer\n\nMac OS X Interface:\n * Fixed circumstances, which could lead to an empty Information panel\n   - Note that VLC will show information on the currently _selected_ item\n     instead of the currently _playing_ item, if the playlist is visible in the\n     main controller window.\n * Fixed multiple UTF8 issues in the Streaming / Exporting Wizard\n\nMac OS X Port:\n * Improved video playback performance on Intel-based Macs\n\nNew Localizations:\n * Indonesian\n * Bengali\n * Updates of other localizations\n\nVarious bugfixes:\n * Support for receiving RTP packets on odd port numbers.\n * Lots of small bugfixes.\n * Correct Fullscreen behaviour on Multi-Screen setups on Windows\n * Telnet fixes on Windows\n * Resampling fixes when transcoding\n\n\nChanges between 0.9.6 and 0.9.8a:\n---------------------------------\n\nSecurity update:\n * Fixed buffer overflow in Real demuxer (SA-0811, CVE-2008-5276)\n\nBunch of small bugfixes.\n\n\nChanges between 0.9.5 and 0.9.6:\n--------------------------------\nNew Localizations:\n * Ukrainian\n\nSecurity updates:\n * Fixed overflow in CUE support from VCD access (SA-0810, CVE-2008-5032)\n * Fixed overflow in RealText subtitles support (SA-0810, CVE-2008-5036)\n\n\nChanges between 0.9.4 and 0.9.5:\n--------------------------------\nSecurity updates:\n * Fixed buffer overflow in TiVo demuxer (SA-0809, CVE-2008-4686, CVE-2008-4654)\n * Fixed libpng CVE-2008-3964 in Win32 and MacOS builds\n\nFeatures:\n * Closed Caption EIA 608/708 parsing enabled for libmpeg2\n\nVarious bugfixes:\n * Fixed various potential crashes and memleaks\n * Fixed issues with reading from files (especially non-local)\n\nWindows port:\n * Fix bug where interface was \"eating\" some media keys\n * Fix some crashes in DirectShow access\n\nQt Interface:\n * Fix bug when the resetting of preferences didn't reset the dialog states\n * Right-click menu to select playlist columns reenabled\n * Various fixed in playlist\n\nAccess:\n * MMAP module is now deactivated by default\n\nTranslations:\n * Update of Brazillian, Swedish translation\n\n\nChanges between 0.9.3 and 0.9.4:\n------------------------------------\nVarious bugfixes:\n * Crashes fixed in ogg, vobsub, dvdread\n * Fixes several memory leaks.\n\nMac OS X port:\n * Apple machines without Quartz Extreme are no longer supported (use 0.9.2 or earlier )\n * Fixed a crash with deletion of old preferences.\n * Fixed targetname for downloaded updates\n\nWindows port:\n * Stability fix for the video output.\n\n\nChanges between 0.9.2 and 0.9.3:\n--------------------------------\n\nVarious bugfixes:\n * Fixed DTS channel order on 5.1 systems\n * Fixed pausing behavior for subtitles and for Audio-CD\n * Multiple subtitles and podcast fixes\n * Various crashes fixed in PS, SSA, mkv, xspf, freetype\n * Fixed update system bugs\n * Other bug fixes (dvd language selection, subtitle colours, HTTP keep-alive...+)\n\nMac OS X port:\n * Fixed ffmpeg slowness on PowerPC-based Macs\n * Fixed crash on startup when installed on old preferences\n * Fixed bug in directory opening on Mac OS X\n * Fixed font selection in the Simple Preferences\n * Thicker border to the subtitle renderer\n * Fixed the appearance of playlist items in the Streaming/Transcoding Wizard\n * Fixed AC3 passthrough on Mac OS X\n * Fixed behavior of the Volume Normalizer settings on Mac OS X\n * Removed the deprecated QuickDraw video output module to avoid crashes on\n   modern Mac OS X versions\n\nWindows port:\n * Fixed sensitivity of Fullscreen Controller\n * Fixed error messages on startup when VLC wasn't correctly uninstalled\n   before installation\n * Fix showing of controller when returning from fullscreen playback\n * Multiple directory and path location fixes.\n\nQt4 interface:\n * Added Faster/Slower icons to the controller panel\n * Fixed lost playlist columns when switching the playlist view\n * Added needed options to Simple preferences (to avoid NVIDIA drivers issues)\n * Fullscreen controller: added time label, remembering of last position\n * Fixed drag'n drop behaviour on the playlist\n * Multiple other fixes (Enter hotkey in preferences, Skins selection...)\n\n\nChanges between 0.9.1 and 0.9.2:\n--------------------------------\n\n * Restored the old behavior of --sout-keep. It is now de-activated by default.\n * Skins2 interface repaired on Windows.\n * Multiple bugfixes.\n\n\nChanges between 0.9.1 and 0.9.0:\n--------------------------------\n\n * Multiple bug fixes.\n\n\nChanges between 0.8.6i and 0.9.0:\n---------------------------------\n\nImportant notes:\n----------------\n * This release will need Windows 2000 and Mac OS X 10.4 (Tiger), or more\n   recent to work correctly\n * The HTTP interface is now only available on the local machine by default.\n   If you want to make it available from other machines, you will have to\n   edit the \".hosts\" file.\n   - On UNIX/Linux, the file is in /usr/share/vlc/http/.hosts\n     If you're using the old http interface, it's located in\n     /usr/share/vlc/http/old/.hosts\n   - On Windows they are in C:\\Program Files\\VideoLAN\\VLC\\http\\.hosts and\n     C:\\Program Files\\VideoLAN\\VLC\\http\\old\\.hosts\n   - On Mac OS X, you can find it in VLC.app/Contents/MacOS/share/http/.hosts\n     and respectively in VLC.app/Contents/MacOS/share/http/old/.hosts\n * This version of VLC contains a new interface for Windows and Linux.\n   This interface has a fullscreen controller and simplified preferences.\n   This interface lacks the \"Streaming Wizard\" that used to be present in VLC\n   0.8.6, but provides basic profiles.\n * The behavior of --sout-keep was changed. It's now activated by default.\n * The marq, mosaic and logo commands in the rc interface changed. They\n   now require a target name as their first argument. Example:\n   vlc --sub-filter \"marq@test{marquee=Hello}\" -I rc <somevideo>\n   You can then use commands like: @test marq-marquee Goodbye\n   If you didn't name the object using @test, its name will default to the\n   plugin name (hence 'marq') in this example.\n   These new commands are also available in the telnet interface.\n * The \"rtp\" access output module has been removed.\n   Please use the RTP stream output instead, e.g.:\n     Old: '#std{access=rtp,mux=ts,dst=239.255.1.2:5004,sap}'\n     New: '#rtp{mux=ts,dst=239.255.1.2,port=5004,sap}'\n * You now need to append --m3u-extvlcopt to your command line to enable\n   EXTVLCOPT options parsing in m3u playlists. Note that only a limited set\n   of options is available to m3u playlists (CVE-2007-6683).\n * The old access:url syntax is no longer supported to resolve ambiguities\n   with some file names. Use access://url instead.\n    E.g.:  vlc:quit -> vlc://quit ;\n           udp:@239.255.12.12 -> udp://@239.255.12.12\n * The ffmpeg module has been removed and replaced by the new avcodec,\n   avformat, swscale (or imgresample if you use a swscale-less ffmpeg build)\n   and postproc modules.\n * The web plugins ActiveX (IE)/Firefox/Mozilla/Safari now recognize the\n   following states: IDLE/CLOSE=0, OPENING=1, BUFFERING=2, PLAYING=3, PAUSED=4,\n   STOPPING=5, FORWARD=6, BACKWARD=7, ENDED=8, ERROR=9. With FORWARD and\n   BACKWARD being reserved for future implementations and are thus not\n   functional atm.\n * Croping and padding in transcode are now done using the croppadd video\n   filter. For example:\n   transcode{vcodec=mp2v,vfilter=croppadd{cropttop=20,cropbottom=30,paddleft=100}}\n * Canvas setting in transcode is now done using the canvas video filter.\n   For example:\n   transcode{vcodec=mp2v,vfilter=canvas{width=640,height=480}}\n * Glide video output module has been removed.\n\nChanges:\n--------\n\nSecurity updates:\n * Updated libfreetype on Windows and Mac OS X (CVE-2008-1806, CVE-2008-1806,\n   CVE-2008-1807)\n * TTA Parser improvements (CVE-2008-3732)\n * MMS Access Module improvements (CVE-2008-3794 )\n\nPlaylist:\n * Vastly improved playlist support:\n    * Media library creation to save all your playlist items\n    * \"Live search\"\n    * Shoutcast TV listings\n    * Audioscrobbler/Last.FM support\n * Album art support\n * User definable Lua playlist scripts. See share/lua/playlist/README.txt\n   (Default scripts open YouTube, DailyMotion, metacafe, Google Video and\n   lots of other URLs)\n * User definable Lua album art fetcher scripts. See share/lua/meta/README.txt\n\nInputs:\n * Video for Linux 2 (V4L2) input support\n * UDP-Lite transport for RTP/AVP\n * DCCP transport for RTP/AVP\n * Proxy support for MMSH stream\n * JACK audio input support\n * Input run time option (improved live stream recording)\n * BDA devices access module for DVB-C/S/T capture cards on Microsoft Windows\n * Re-written Screen access module for Mac OS X\n   using OpenGL instead of QuickDraw\n * Screen module now supports partial screen capture and mouse following on X11.\n * Experimental EyeTV access module\n   This requires the user to install a plugin to EyeTV.app\n   (available as a separate download).\n * Simple RTP input (with MPEG A/V, G.711 and PCM support).\n * RTMP input support\n * QTKit-based Input module for Mac OS X allowing display and streaming of video\n   taken from all iSight-labelled video cameras (no audio support)\n * HTTP access now supports gzip compressed data and Digest Access\n   Authentication.\n * New options to reduce latency between arrival of raw data and display of\n   frames. (--auto-adjust-pts-delay and --use-stream-immediate)\n\nDemuxers:\n * MP4 gpac and Apple chapter support\n * Fixed playback of AIFF stereo files\n * Fixed audio glitch on seek\n * Improved FLAC demuxer (duration / current time / meta data)\n * AAC tags support\n * APEv1/2 tags support\n * Improved ID3v2 tags support\n * Improved Ogg/Vorbis tags support\n * Raw video support\n * Standard MIDI File (types 0 & 1) support\n * TiVo Series 2 support\n * CD+G karaoke Files support\n * MXF files support\n * OMA support\n\nDecoders:\n * VP60/VP61/VP6F/VP62 support\n * Flash Screen Video support\n * CamStudio Screen Video support\n * DosBox Capture support\n * Karl Morton's Video support\n * limited atrac3 support\n * Fraps support\n * Fluidsynth MIDI software synthesis (with external sound fonts)\n * New codec FOURCCs to support more specific files:\n   Avid, FCP, Sony, Samsung, ...\n * H.264 PAFF support\n * DNxHD / VC-3 support\n * NellyMoser ASAO support\n * APE (Monkey audio) support\n * RealVideo support (with the RealVideo run-time)\n * Dirac video support using libschroedinger\n\nSubtitles:\n * Closed Caption Decoder (DVD, ReplayTV, TiVo, DVB/ATSC)\n * VBI & EBU (Teletext) support (*nix, Mac OS)\n * Ogg/Kate subtitles support\n * AQTitle subtitles support\n * MKV USF subtitles support\n * HTML-based subtitles support\n * MPSub subtitles support\n * JacoSub subtitles basic support\n * MPL2 subtitles support\n * Rewrite of ASS/SSA scripts and subtitles support\n * PowerDivx (.psb) Subtitles support\n * Realtext subtitle support\n * DKS subtitle support\n * SubViewer 1.0 (SubRip09) subtitles support\n * Correct Right-to-left languages in subtitles support\n\nEncoders:\n * Flash Screen Video support\n * Improved H.264 encoding speed\n\nVideo outputs and filters:\n * New CoreAnimation-based output module (VLCKit framework on OS X only)\n * Adjust, Invert and Distort (now split into Wave, Ripple, Gradient and\n   Psychedelic) video filters can now be streamed\n * New puzzle video output filter\n * Re-written motion detection video filter\n * New extract video filter (extract Red, Green and Blue components from a\n   video)\n * New sharpen video filter (increase the contrast of adjacent pixels)\n * New erase video filter (removes logos from a video)\n * Enhanced subtitles' renderer to support bold, italic and some HTML tags\n   (Google Summer of Code Student project)\n * Support for RGBA and I420 blending.\n   The latter improves Mosaic CPU usage *a lot*.\n * New transparency mask video filter (for use with the mosaic_bridge module).\n * New bluescreen video filter (for use with the mosaic_bridge module).\n   This was previously part of the mosaic module.\n * Fixed random characters problem in RSS filter.\n * Add rotate-deciangle for more precision on rotate filter\n * Support for Intel SSE2 instruction set in chroma converters\n * Improved use of Intel MMX instruction set in chroma converters\n * New croppadd and canvas video filters.\n\nAudio outputs and filters:\n * Replay gain support\n * Audio playback when going slower/faster (with pitch correction via\n   new scaletempo audio filter)\n * New spatializer audio filter\n * Correct DTS output via S/PDIF\n\nStream output:\n * RTSP for TS-multiplexed broadcast streams\n * New RTP payload formats:\n   * Speex voice audio codec\n   * ITU T.140 (for text, subtitles) output\n   * G.711 (both A-law and µ-law) output\n * UDP-Lite transport for RTP\n * DCCP transport for RTP\n * Lots of fixes for RTSP broadcasting\n * RTMP output\n\nInterfaces:\n * All\n   * New Simple Preferences dialogs showing the most important settings in an\n     end-user suitable way.\n   * Improved user interaction\n   * Improved mouse gestures\n   * Vastly improved Update checker\n   * Full support for meta data editing (ID3v2, Ogg/Vorbis, AAC, APEv1/2)\n * Windows/Linux\n   * Brand new interface for Linux and Windows, based on the Qt toolkit\n   * Fullscreen controller (transparency on Linux+Composite)\n * Mac OS X\n   * Improved video output features\n   * Online access to VideoLAN's Help Wiki within VLC\n   * New setting to disable the \"Recent Items\" service\n   * When playing Radio (live) streams, the current track is shown correctly\n   * Correct appearance on Macs using Aqua's graphite theme\n   * Simplified Extended Controls panel\n * Ncurses:\n   * Correctly displays wide characters when using an UTF-8 locale,\n     if libncursesw is available.\n   * Some nice colors if the terminal supports it (most do)\n * Experimental Lua interface modules. See vlc -I lua and\n   share/lua/intf/README.txt for more info.\n * Unix\n   * Option to allow only one running instance, using D-Bus interface.\n   * D-Bus Interface implementing the MPRIS\n     (Media Player Remote Interfacing specification), a common dbus control\n     interface for media players that intends to become an xdg standard when\n     finished: http://wiki.xmms2.xmms.se/index.php/Media_Player_Interfaces .\n   * Motion module using disk accelerometers to keep video horizontal\n   * Plugin to set Telepathy presence message using MissionControl\n * Fixed VLM schedule time on Linux\n\nLinux Port:\n * VLC now complies with the XDG Base Directory Specification version 0.6\n   http://standards.freedesktop.org/basedir-spec/basedir-spec-0.6.html\n   (which means that VLC doesn't use the $HOME/.vlc directory anymore)\n\nMac OS X Port:\n * Mac OS X Framework \"VLCKit\" that can be used to embed VLC in third party\n   applications (Google Summer of Code Student project, Mac OS X 10.5 only)\n * New text renderer based on Quartz replacing the existing Freetype solution\n * Complete compatibility with Mac OS X 10.5 Leopard\n   * It is now required to compile a fully featured build\n * The support of Mac OS X 10.3.9 and QuickTime 6.x was discontinued.\n\nLibVLC:\n * Event management and various improvements in libvlc\n   (Part of a Google Summer of Code Student project)\n\nNew Localizations:\n * Finnish\n * Persian\n * Polish\n * Punjabi\n * Bulgarian\n\nDevelopers:\n  * LibVLC now supports externally built plugins properly.\n    A \"vlc-plugin\" pkg-config package is provided.\n  * Java bindings are now built from a separate source.\n\n\nChanges between 0.8.6h and 0.8.6i:\n----------------------------------\n\nSecurity updates:\n * Fixed integer overflow in WAV demuxer (CVE-2008-2430)\n\nVarious bugfixes:\n * Fixed option to use shared memory within the GLX video output module\n * Improved galaktos-based audio visualizations on FreeBSD\n * Miscellaneous bugfixes in multiple modules and in libvlc\n   (transcode stream output, OSD menu video filter, VCD input,\n    SAP services discovery, http control interface)\n * Updated Polish translation\n\n\nChanges between 0.8.6g and 0.8.6h:\n----------------------------------\n\nSecurity updates:\n * Updated GnuTLS and libgcrypt on Windows and Mac OS X (CVE-2008-1948,\n   CVE-2008-1949, CVE-2008-1950)\n * Updated libxml2 on Windows and Mac OS X (CVE-2007-6284)\n\nGoodies:\n * Updated libebml and libmatroska on Mac OS X. Reliability improvements.\n * Miscellaneous bugfixes in multiple modules and in libvlc\n   (ftp access, record access filter, video filters, RC interface,\n    playlist demuxer, IP networking, MPJPEG muxer, stream outputs)\n * Improved support for MPEG2 content created by Final Cut Pro\n * More reliable audio reception for MPEG TS streams\n * Fixed a regression in 0.8.6g where usage of the snapshot feature could lead\n   to an unexpected application termination\n * New Serbian translation\n * Updated Romanian translation\n\n\nChanges between 0.8.6f and 0.8.6g:\n----------------------------------\n\nSecurity updates:\n * Removed VLC variable settings from Mozilla and ActiveX\n   (CVE-2007-6683, VideoLAN-SA-0804)\n * Removed loading plugins from the current directory\n   (CVE-2008-2147, VideoLAN-SA-0805)\n * Updated libpng on Windows and Mac OS X (CVE-2008-1382)\n * Fixed libid3tag denial of service (CVE-2008-2109)\n * Fixed libvorbis vulnerabilities (CVE-2008-1419, CVE-2008-1420, CVE-2008-1423)\n * Fixed speex insufficient boundary check (CVE-2008-1686, oCERT-2008-004)\n\nVarious bugfixes:\n * Fixed various memory leaks, improving stability when running as a server\n * Fixed compilation with recent versions of FFmpeg\n * Correctly parses SAP announcements from MPEG-TS\n * Fixed AAC resampling\n * The Fullscreen Controller appears correctly on Mac OS X,\n   if the 'Always-on-top' video option was selected.\n\n\nChanges between 0.8.6e and 0.8.6f:\n----------------------------------\n\nSecurity updates:\n * Really fixed subtitle buffer overflow (CVE-2007-6681, CVE-2008-1881)\n * Fixed Real RTSP code execution problem (CVE-2008-0073)\n * Fixed MP4 integer overflows (CVE-2008-1489, CVE-2008-1768)\n * Fixed cinepak vulnerabilities (CVE-2008-1769)\n - More information can be found in VideoLAN-SA-0801 and VideoLAN-SA-0803.\n\nVarious bugfixes:\n * The Mozilla plugin registers a usable range of MIME-types on Mac OS X\n * Improved VLC's video output behavior on multi-screen setups running Mac OS X\n * Fixed crashes in H264 packetizer\n * Close MMS access on network timeout\n * Fix some problems with AAC decoder & packetizer\n\n\nChanges between 0.8.6d and 0.8.6e:\n----------------------------------\n\nVarious bugfixes:\n * Resume playback for viewing content over FTP\n * Fixed XShm detection with remote X11\n\nSecurity updates:\n * Subtitle demuxers overflow (CVE-2007-6681)\n * HTTP listener format string injection (CVE-2007-6682)\n * Fixed buffer overflow in the SDL_image library (CVE-2006-4484)\n * Real RTSP overflows (CVE-2008-0225, CVE-2008-0295, CVE-2008-0296,\n   VideoLAN-SA-0801)\n * Arbitrary memory overwrite in the MP4 demuxer (CORE-2008-0130,\n   VideoLAN-SA-0802)\n\nAudio filter:\n * Fixed DTS to S/PDIF converter\n\nAudio output:\n * Fixed 5.1 audio on ALSA\n\nAccess:\n * Fixed some RTSP hanging and user/password passing through RTSP URLs\n\nStream output:\n * Fixed waiting for SPS/PPS problem in H.264 packetizer\n\nEncoders:\n * Improved compatibility for creating H.264 video files playable on iPhones\n * Improved detection of optimal amount of threads for multi-threaded H.264\n   encoding on multi-cpu systems\n    - Note that this is used when transcode threads is set to 0 (default)\n    - Not supported on Windows (multiple threads require manual configuration)\n\nMac OS X Interface & Port:\n * Restored compatibility with Mac OS X 10.3.9\n * Corrected behavior of the Preferences panel\n * VLC no longer crashes on quit while playing\n\nLocalization:\n * Updated Romanian and Polish translations\n\n\nChanges between 0.8.6c and 0.8.6d:\n----------------------------------\n\nVarious bugfixes:\n * Mozilla plugin: supports a reasonable amount of MIME types on Windows\n * Linux: Fixed S/PDIF passthrough with ALSA\n * Automatic recovery on unexpected stream discontinuity (clock gap) occurrences\n   in input\n * Use field order (top/bottom) for correct bob/linear deinterlacing\n * Fix invalid free in bookmarks loading code\n\nWindows and Mac OS Binaries\n * FLAC Security Update (CVE-2007-4619) to prevent multiple integer overflows\n\nActive X plugin:\n * Security update (VideoLAN-SA-0703, CVE-2007-6262)\n\nMac OS X Interface & Port:\n * Apple Remote support on Mac OS X 10.5 Leopard with enhanced functionality\n * Improved Video Output compatibility for Mac OS X 10.5 Leopard\n * Improved behavior of the Fullscreen Controller and mode changes between\n   Fullscreen and Windowed Video Output\n * Softened the white flash artifacts that may appear during the transition of\n   two different movies\n * Support for current Ogg file formats\n NOTE: This release requires Mac OS X 10.4 or higher.\n       Mac OS X 10.3.9 is not supported anymore.\n\nEncoders:\n * Improved H.264 encoding speed on Mac OS X\n\nOther changes:\n * The automatic updating facility was removed\n * You now need to append --m3u-extvlcopt to your command line to enable\n   EXTVLCOPT options parsing in m3u playlists.\n * RTSP server remote denial of service fixed (CVE-2007-6684).\n\n\nChanges between 0.8.6b and 0.8.6c:\n----------------------------------\n\nVarious bugfixes, notably:\n * Windows Vista compatibility\n * Cropping in Direct3D\n * Fullscreen change crash on Mac OS X\n * RSS filter string overflow\n * Few memory leaks\n * MKV demuxer crash (related to seeking)\n\nCDDA / Vorbis / Theora / SAP plugins:\n * Security updates (VideoLAN-SA-0702, CVE-2007-3316, US-CERT VU#200928)\n\nDemuxers:\n * Fixed a problem with detecting embedded subtitles (GAB2 format) in AVI\n * Prevent WAV file integer overflow (CVE-2007-3467 & CVE-2007-3468)\n\nDecoders:\n * Updated FLAC API compatibility\n\nInput:\n * Support for new v4l2 encoder API\n\nLocalisation:\n * New localisation: Arabic, Persian\n\n\nChanges between 0.8.6a and 0.8.6b:\n----------------------------------\n\nVarious bugfixes, notably:\n * Out-of-bound read in demuxers\n * Demuxers crashes (incl. CVE-2007-0256)\n * Mac OS X Interface crashes\n * VP31 decoding on Windows platforms\n * Direct3D Video Output modifications for Vista compatibility\n * Correct behaviour for feeding streams to Icecast or Shoutcast servers\n\nDecoders:\n * Enhanced Flash Video support incl. VP61 and VP60\n * Teletext subtitles (telx) support\n\nWebbrowser plugins:\n * Rectified behaviour and improved usability\n\nMac OS X Interface & Port:\n * Diverse usability improvements\n * New wizard option to embed subtitles\n * Screensaver/automatic sleep mode is enabled when a video is paused\n * Improved Delete-Preferences-Script\n\n\nChanges between 0.8.6 and 0.8.6a:\n---------------------------------\n\nCDDA / VCDX plugins:\n * Security updates (VideoLAN-SA-0701, CVE-2007-0017)\n\nMac OS X Interface:\n * Fullscreen controller improvements\n\n\nChanges between 0.8.5 and 0.8.6:\n--------------------------------\n\nPlaylist:\n * Shoutcast TV listings support\n\nInput:\n * Support for RTSP authentication\n * Support for adding subtitles on the fly\n * Fixed MPEG-PS duration calculation\n * ATSC support for DVB input\n * Partial reading support for DVR-ms recordings\n * Partial reading support for MXF and GXF fileformat\n * Improved support for Flash Video files\n\nDecoders:\n * Native WMV9/VC-1 support\n * WMA Speech support (through binary codecs)\n * VP5/VP6 - Flash Video support (not VP61)\n * The True Audio Lossless codec support\n * Matroska WavPack support\n * Improved H.264 support (interlaced, speed improvements etc but no PAFF)\n * Fixed a problem with MPEG2 field pictures\n * Fixed swapped colors on DVB subtitles\n\nVideo output:\n * Additional OpenGL effects (cylinder, torus, sphere, ...)\n * Experimental Direct3D 9 video output (win32). Best served on Vista :)\n * Improved libcaca support\n\nInterfaces:\n * All\n   * New hotkeys for crop and zoom\n   * Support for snapshots from the HTTP interface\n * Windows\n   * Systray support in skins\n * OS X\n   * Support for Apple Remote control\n   * Fullscreen controller panel (artwork by Simon Damkjær Andersen)\n   * New playmode buttons (artwork by Simon Damkjær Andersen)\n   * right/ctrl-click menu in video outputs\n   * Main Menu uses autohide when playing videos in fullscreen mode\n * Linux\n   * Notifications using notification-daemon\n\nWindows port:\n * Support for Unicode filenames (Windows NT and above)\n   Windows 9x/ME users:\n     - Please note that these versions of Windows are not officially supported\n     - Unicode support for Windows 9x/ME applications is available through the\n       Microsoft Layer for Unicode available from the following location:\n       http://www.microsoft.com.nsatc.net/globaldev/handson/dev/mslu_announce.mspx\n       Download the MSLU package (unicows) and extract the content into the folder\n       C:\\Windows\\System\n * Fixed IPv6 support on the client side\n * Fixed disable screensaver (Direct3D and DirectX video output)\n\nLocalization:\n * Add Czech\n * Add Slovak\n * Add Malay\n * Add Slovenian\n\nDevelopers:\n * Updates to the libvlc API\n * Fixes for the mozilla and activeX plugins\n\n\nChanges between 0.8.4a and 0.8.5\n--------------------------------\n\nCore support:\n * Statistics collection (bitrates, packets, connections, ...)\n * Support for downloading updates\n * Updated strings\n\nInput:\n * Initial support for RTSP-over-HTTP (to allow NAT traversal)\n * Linux DV (Digital Video - Firewire) input\n * Improvements to the Audio CD input\n     - Separate playlist entries for the tracks\n     - Support for CDDB\n * Support for more DVB (satellite) encryption modules\n * Improved subtitles encoding support\n * Improved support for playing MP4 files from the Web\n\nDecoders:\n * Cook (Real audio) support\n\nPlaylist / Services discovery:\n * XSPF playlist support\n * Podcast support\n * Updated Shoutcast to use new listing\n\nAudio output:\n * New JACK audio output\n\nVideo output:\n * New video filters:\n    - magnify: allows you to zoom on part of the image\n    - gradient and edge detection: \"cartoon-like\" effect\n    - bluescreen: overlay parts of a video transparently on another one\n * Logo video filter: can now loop through multiple images\n * RSS video filter: display feed images. Support for Atom feeds.\n * Improvements to the subtitles rendering\n\nStream output:\n * Initial support for throttling users on VOD streams\n\nInterfaces:\n * System to inform the user and request information\n    - HTTP authentication\n    - Fatal errors\n    - ...\n * wxWidgets\n    - VLM (VideoLAN Media Manager) control panel\n    - Improved media information panel (shows statistics, metadata, ...)\n    - Drag & Drop support in the playlist\n * Skins2\n    - New default skin\n    - Support for Winamp 2 skins\n    - Improved playlist handling\n    - Support for popup menus, animated bitmaps, equalizer, ...\n * OS X\n    - Embedded Video output\n    - new Go-To-Specific-Time feature\n    - Video cropping and aspect ratio changing while playing\n    - Improved media information panel (shows statistics, metadata, ...)\n    - support for processing multiple items with the wizard in a single run\n    - option to save selections in the wizard for a session (default enabled)\n * HTTP\n    - New default interface pages for VLC and VLM (including a mosaic wizard)\n    - A bunch of new RPN functions\n\nWindows Port:\n * MSN messenger \"Now playing\" support\n\nOS X Port:\n * Mac-Intel compatibility\n * Enhanced support of various audio output devices\n * Growl \"Now playing\" support\n\n*Nix port:\n * Ability to log to syslog\n * Root wrapper to avoid running VLC as root\n\nDevelopers:\n * New libvlc API (not finished yet)\n * Java bindings\n * A bit more automatic testing\n\n\nChanges between 0.8.4 and 0.8.4a:\n---------------------------------\n\nAudio output:\n * Fix a52 over spdif in alsa\n * SPDIF output available again in the Mac OS X Audio menu.\n\nDecoder:\n * Add support for new BMP and Cook (RealAudio G2) decoders in ffmpeg\n * Add support for some non-standard FOURCCs used for H.264/H.263\n\nDemux:\n * Fix bug with some HE-AAC audio tracks\n\nServices Discovery:\n * HAL fixes, should now work with new API\n * SAP, fix 20 second freeze on windows\n * UPnP fixes\n * Avahi 0.6 support\n\nInterfaces:\n * Mac OS X\n    - fixed encoding of H.264/H.263 content when using the wizard\n\n\nChanges between 0.8.2 and 0.8.4:\n--------------------------------\n\nCore support:\n * Internal strings handling is now UTF-8 based\n * New OSD system\n\nVideo output:\n * Fixed problems with OpenGL output\n * New --monitor-par (pixel aspect ratio) option\n * Fixed display problems with HDTV-1080 format\n\nInput:\n * Improved DVB support for satellite bands other than Ku-band\n * IPv6 and Extended passive mode support for FTP\n * IPv6 Source Specific Multicast support\n * GnomeVFS input module\n * Support for RTP packet reordering\n * Fixed syntax for FTP URLs\n\nDecoders:\n * Support for libSDL_image to import different image types\n * Musepack decoder using libmpdec\n * QDM2 audio support (needs ffmpeg from 19th Oct 2005 or later)\n\nServices discovery:\n * UPnP service discovery (Linux only at the moment)\n * Bonjour service discovery using avahi (Linux only)\n\nVideo filters:\n * RSS feed overlay\n\nAudio filters:\n* Fixes, enhancements and new options related to the Headphone Channel\n  Mixer and Dolby Surround\n\nStream output:\n * New shout output module to forward streams to icecast servers\n * Fixed several SAP and SDP announcement bugs\n * Fixed MTU handling to avoid IP fragments\n\nInterfaces:\n- new cone icon by Richard ¯iestad (Eurodata, retron.info)\n * Mac OS X\n    - New streaming and transcoding wizard\n    - New extended controls panel\n    - New bookmarks window\n    - Fixed playlist sorting\n    - Fixed drag-and-drop inside the playlist\n * wxWidgets\n    - Rename wxWindows interface in wxWidgets.\n    - All the --wxwin-* options are now --wx-*\n    - Support for RTP streaming in Stream Output dialog\n    - Now require wx2.6 with Unicode support\n * Skins2\n    - Tree playlist\n * HTTP\n    - New RPN functions to control VLC features (see play-howto)\n    - Facilities to correctly handle non-ASCII characters and spaces in\n      the names of files\n    - Include macro to include other files\n    - CGI 1.0 support\n\nActiveX plugin:\n* Should now work outside IE as well\n\nMac OS X port:\n* New script to delete the preferences automatically\n\nWindows port:\n* Fixed bandwidth problems of HTTP streaming\n* Fixed audio problems with DirectX audio output\n\nTranslations:\n The following languages were added:\n * Galician\n * Korean\n * Romanian\n * Simplified Chinese\n The following languages were re-added:\n * Swedish\n\n\nChanges between 0.8.1 and 0.8.2:\n--------------------------------\n\nCore support:\n * Rewrite of the playlist\n    - Tree structure\n    - Input preparsing (for meta-data)\n    - Grouping (by artist, ...) support\n * Preferences improvements:\n    - New organization, designed to improve usability\n    - New configuration types (list of modules, ...)\n * XML parsers\n * Core image manipulation support\n * Client-side SSL/TLS support\n * SSL Client certificates checking support (allows for secure VoD)\n * Renamed --spu-channel to --sub-track\n * Renamed --spumargin to --sub-margin\n * Renamed --audio-channel to --audio-track\n * Renamed --filter to --vout-filter\n * filters, extra interfaces, visualizations and service discovery modules are\n   now separated by ':' instead of ','\n * Access filter architecture\n * Track selection based on preferred language (--sub-language and --audio-language)\n * Zsh autocompletion for VLC's arguments\n * Many bugfixes...\n\nInput/Demuxers:\n * Support for SOCKS proxy\n * Support for Shoutcast Meta-data\n * Support for (HE-)AAC raw-audio streams\n * Support for images on a HTTP server that get refreshed on the server\n * Better support for Kasenna streams\n * RTSP UDP->TCP rollover support\n * Massive Matroska improvements\n * Support for XA and VOC audio files\n * TiVo demuxer\n * Samba (Windows shares) access module\n * Improved CDDAX module (uses several playlist items)\n * Fixes to Linux DVB support\n * Fix the \"negative subtitles delay\" bug\n * Support for FTP over IPv6\n\nDecoders / Encoders:\n * Dirac decoder and encoder\n * PNG decoder/encoder\n * Improvements to DVB subtitles encoder\n * Support for Apple Lossless Audio Codec\n\nAccess filters:\n * New Record and Timeshift filters\n\nServices discovery:\n * New type of modules, that add items to the playlist\n * Brand new SAP module\n     * To enable SAP, you now need to use \"-S sap\" or add SAP in\n       the \"Manage->Services Discovery\" menu\n     ( IPv6 SAP is now enabled by default )\n     * Non-standard support for HTTP streams SAP announces removed\n * HAL (Hardware Abstraction Layer) discovery\n * DAAP (iTunes shares) support\n * Shoutcast\n\nAudio output:\n * Support for 20/24 bits LPCM\n\nVideo output:\n * Video snapshot support (png or jpg)\n * Image file video output (png)\n * Motion detection filter (can trigger playlist actions)\n * Improvements to wall video filter\n * Support for font color and opacity\n\nStream output:\n * Muxers\n    - ASF improvements\n * VLM / VoD\n    - Ability to load a configuration file on startup\n    - Seeking support in VoD streams\n * Mosaic (picture-in-picture system)\n\nInterfaces:\n * wxWidgets\n    - Redesigned playlist : add playlist, add directory, ...\n    - Improved preferences\n    - Improvements to the wizard\n    - DVD, VCD and Audio CD navigation buttons\n * MacOS X\n    - Redesigned playlist\n    - Improved preferences\n * Skins\n    - Support for multiple actions\n    - Fixes\n * HTTP\n    - Support for the new playlist system\n * Lirc\n    - Now uses new config settings. See doc/lirc/example.lirc\n\nWindows port:\n * Screensaver disabling fix\n * DirectShow tuner configuration\n * Support for no-decoration windows\n\nMacOS X port:\n * Many Mac OS X 10.4 Tiger related fixes\n * The OpenGL video output is back\n * A new audio module that should work more reliable for analog audio output in various configurations.\n   - Supports multichannel discrete analog output\n   - Digital audio output requires you to change a preference setting because it\n     is not yet available in the new module\n   - Please read the README.MacOSX.rtf file for more information.\n\nBeOS port:\n * Support for single-buffered overlay\n\nPocket PC port:\n * Many fixes\n * New interface\n * New video output\n\nMozilla Plugin:\n * Javascript fixes\n * Mozilla plugin for MacOS X is back (not yet distributed)\n\nIE Plugin:\n * Brand new Internet Explorer ActiveX plugin\n\nTranslations:\n The following languages were added:\n * Catalan\n * Danish\n * Turkish\n\n\nChanges between 0.8.0 and 0.8.1:\n--------------------------------\n\nCore support:\n * Include TLS/SSL API (on plattforms where libgnutls is available)\n * SSL support in the HTTP daemon (HTTP stream output and HTTP interface)\n\nWindows port:\n * Fixed win32 multichannel audio output support (which was broken in 0.8.0)\n * Fixed DV and MPEG (WinTV PVR 250/350) support in the dshow input\n * Fixed spurious taskbar item after switching to fullscreen\n\nWinCE port:\n * A few more updates (we still miss an interface and a fast video output).\n\nAudio Output:\n * Portaudio audio output plugin improvements\n\nVideo Output:\n * Proper subpictures scaling using the aspect-ratio info when available\n\nDemuxers:\n * Fixed crash with ODML avi files\n * Fixed autodetection of VCD/SVCD bin files\n * Supports Kasenna VoD (MPEG2 only) and simulcast streaming\n\nStream Output:\n * Encoders:\n   * Fixed aspect ratio and interlaced support in ffmpeg encoder module\n * Stream output:\n   * Support of playlist group announcement\n\n\nChanges between 0.7.2 and 0.8.0:\n--------------------------------\n\nCore support:\n * Major work on libvlc. Changed/renamed/added functions\n * Complete switch to the new input core (better seeking, multi-input, ...)\n * New plugins cache to speed up launch time\n * New --play-and-stop feature which stops the playlist after each played item\n * Daemon mode (to run vlc in the background)\n * Major improvements to the subtitle/OSD subsystem\n\nInput:\n * New screen capture input plugin for X11, Win32, BeOS and Mac OS X\n    (Stream your desktop)\n * Improved DVD support:\n    - uses libdvdnav for playing DVDs with menus support\n    - uses libdvdread for simple playback with menus (eg. for streaming)\n * Experimental multi-input support ( use --input-slave to play with it )\n * Automatic MTU discovery for UDP streams\n * More powerful MRL syntax for DVD/VCD/CDDA access\n    (selection of titles/chapters).\n\nDemuxers:\n * Support for iTunes Music Store previews\n * Support for MJPEG webcams (i.e. AXIS cams)\n * Added initial mp4 and mpeg-ts text track support\n * Windows Media Server RTSP support\n * Support for MPEG TS streams with error correction (204/192 bytes TS packets)\n * Support for DTS audio in MPEG TS (ETSI TS 102 154 Annex G)\n * Skins2 .vlt file loader (only when skins2 is the current interface)\n * Improved Ogg demuxer\n * Support for MPEG PS streams with MPEG 4 video.\n * Support for so called AACPlus webstreams\n\nCodecs:\n * G.726 audio support\n * 14496-17 MPEG TS text support\n * MPEG-4 text support\n * Vastly improved DVB subtitles decoder (ETS 300 743)\n * Enabled color in DVB subtitles rendering\n * VobSub supported both externally and in Matroska\n\nStream Output:\n Encoders:\n  * Re-use audio/video/spu decoders in transcoder module. From now on,\n     everything that is playable by VLC should be transcodable as well\n  * Subtitles overlaying in transcoder\n  * Subpictures overlaying in transcoder (see video output)\n  * Frame rate selection in the transcoder\n  * DVB subtitles encoder\n  * MPEG 1 layer 2 audio encoder using libtoolame\n  * Improved vorbis/theora encoding\n Muxers:\n  * Text track muxing for mp4\n  * Multipart mjpeg muxing. Your video is directly viewable in a Mozilla Browser\n  * 14496-17 text track muxing for MPEG TS\n  * Support for DTS audio in MPEG TS (ETSI TS 102 154 Annex G)\n  * Teletext (0x56 descriptor) streaming support in MPEG TS.\n  * New WAV muxer (supports multi-channel audio)\n  * Improved ASF muxer\n Misc:\n  * H.263 RTP streaming support\n  * SDP generation outputs more compliant SDPs and can create SDP files now\n  * Improved RTSP and VoD server (experimental)\n\nAudio Output:\n * New audio equalizer filter\n * Very trivial volume normalizer\n * True channel downmixing when playing 5:1 material on Stereo\n * More gradual resampling which should improve the pitch changing effect\n * New audio output plugin using portaudio v19\n\nVideo Output:\n * Roku HD1000 Video output\n * Experimental generic OpenGL video output (X11, Win32, MacOS X)\n   with support for effects.\n * Improved filter and subpictures support :\n    - New filters can be streamed.\n    - \"Subpicture filters\" to overlay subpictures on video\n    - Centralized scaling and blending\n * New filters :\n    - \"time\", to display current time\n    - \"marq\", to display a marquee\n\nInterfaces:\n * OSD sliders for volume and postition information\n * OSD icons for Play and Pause\n * New Streaming Wizard for Windows and Linux default interfaces (wxWindows)\n * A few skins2 improvements\n * Added search, volume, loop and random functions to the ncurses interface\n * Added a filesystem browser to the ncurses interface\n * The remote control interface can now listen for commands on sockets\n * Improved CORBA control module\n\nMac OS X port:\n * Fixed the \"cannot set buffersize:[nope]\" coreaudio problem\n * Major speed improvements to the Quartz video output\n * The Mac OS X interface is no longer required to display video\n\nLinux port:\n * New galaktos visualization plugin (MilkDrop-compatible)\n * Experimental SVG rendering module\n * Support for DVB CAM modules.\n\nWindows port:\n * DirectX Media Object decoder (allows playing some media types, like WMV3)\n * DirectX Media Object audio and video encoder\n * Fixed long standing win32 thread handles leak\n * Fixed problem with CPU usage with subtitles rendering\n * Wallpaper mode for the DirectX video output (only in overlay mode)\n\nWinCE port:\n * Massive update (we still miss an interface and a fast video output).\n\nMozilla plugin:\n * Added a lot of Javascript accessible funtionality\n * Volume, position, length, seek etc etc etc.\n\nMisc:\n * Server/client network synchronization module\n * VBrick streams fully supported\n * Cisco IP/TV streams supported\n * VLM enhancements\n\n\nChanges between 0.7.1 and 0.7.2:\n--------------------------------\n\nCore support:\n * Bookmarks feature for easier seeking/access inside medias.\n * Support for video output embedded in interfaces.\n * Improved HTTP daemon.\n * Saved playlists now remember VLC-specific options.\n\nCodecs:\n * New Continuous Media Markup Language (CMML) codec.\n   (http://www.annodex.net/overview.html)\n * New H.261 video decoder using openmash.\n * H264 encoder, demuxer and packetizer.\n * Packetizer interfaces between demux and codec when needed\n   (allows using ffmpeg plugin to decode MPEG streams and better aac decoding).\n * Support for Theora alpha3 (both decoding and encoding).\n\nInput:\n * --start-time <sec> and --stop-time <sec> to start and stop playing a\n   file at the specified amount of seconds. Only works with a few\n   fileformats (avi, mov, mkv, mp4 )\n * Improved directory access module.\n * New \"file-cat\" option to play truncated movies.\n * Better handling of meta info (title, author, description, etc...).\n * New options to pass meta info to the input.\n * It is now possible to stream programs from a DVB-S/C/T stream\n   (satellite, cable, or digital terestrial television)\n\nDemux:\n * Annodex (http://www.annodex.net) support.\n * mmsh streaming fixes.\n * Fixed infinite loop in the AVI demux on broken/incomplete files.\n\nSubtitles:\n * Subviewer and subviewer v2 subtitles support.\n * Ability to choose autodetected subtitles path.\n * Subtitles delay can be changed in real time with hotkeys.\n\nStream output:\n * Improved session announcement system.\n * Minimize threads usage by default.\n * Added faster than realtime stream output (limited by CPU) for file output.\n * Improved MOV/MP4 muxer.\n * Improved MPEG TS muxer.\n * Improved transrater.\n * Meta info options used by the muxers.\n * New configuration system.\n * Better audio channels downmixing when transcoding.\n\nVideoLAN manager:\n * New videolan (media) manager (vlm): a little manager designed to launch\n   and manage multiple streams from within one instance of VLC.\n * Supports live streams and VoD.\n * Supports scheduling.\n * Telnet interface for vlm.\n * HTTP interface for vlm.\n\nInterfaces:\n * Skins II (Windows and Linux only)\n    - Ability to embed video output.\n    - Support for bitmap fonts.\n    - Lots of improvements.\n * wxWindows (default Windows and Linux interface)\n    - New design and set of icons.\n    - Ability to embed video output.\n    - Support for hotkeys.\n    - Support for bookmarks.\n * Mac OS X\n    - Support for 'groups' and playlist item properties.\n    - Better hotkeys handling.\n\nMac OS X port:\n * OpenGL video output is now the default when available.\n * Added FAAC encoder (mp4a).\n * Audio output fix to work with multiple streams on a HAL device.\n * Possible fix for conflict with CodeTek VirtualDesktop (untested).\n\nWin32 port:\n * DirectShow input plugin should work with more devices.\n * Disable monitor power down when watching movies.\n * Improved Windows installer.\n\nLinux port:\n * PowerPC fixes.\n\nMisc:\n * Improvements to the Goom visualisation plugin.\n * Roku HD1000 audio output.\n\n\nChanges between 0.7.1 and 0.7.1a:\n---------------------------------\n\nMac OS X:\n * Fixed the infamous 'mp3 takes twice the CPU it should take' bug\n * Playing MOD files is working now.\n\n\nChanges between 0.7.0 and 0.7.1:\n--------------------------------\n\nCore support:\n * Fixed a nasty bug that causes preferences not to be saved some times.\n * IGMPv3 support for VLC under Windows XP and Linux.\n\nCodecs:\n * Brand new DTS Coherent Acoustics audio decoder based on libdts\n   (http://www.videolan.org/dtsdec.html)\n * Fixed DTS S/PDIF output\n * SVCD (Philips OGT) and CVD subtitles\n\nPlaylist:\n * Internal improvments\n * Improved import/export\n\nInput:\n * Experimental support for Nullsoft streaming video(.nsv) and real media(.rm)\n   container formars.\n * New demux module that uses libavformat from ffmpeg. Adds support for many\n   small and strange formats.\n * New PVA demux.\n * New MOD audio demux.\n * Support for DTS and A52/AC3 wav files.\n * Support for DTS and A52/AC3 audio CD.\n * New and experimental DVD input plugin with menus support (using libdvdnav).\n * Added back DV audio support in raw DV demuxer.\n\nStream output:\n * MP4/MOV muxer improvements (fast-start, aac in mov, etc...).\n * Fixed a nasty bug in the mpeg video packetizer.\n * Improved transcoding (multithreading, more tuning, etc...).\n\nService discovery:\n * Fixed sdp in SAP.\n\nMac OS X port:\n * New opengl video output plugin.\n\nWin32 port:\n * A few improvements to the DirectShow input plugin.\n * Fixed ipv6 name resolution.\n\n\nChanges between 0.6.2 and 0.7.0:\n--------------------------------\n\nCore support:\n * Brand new decoder/packetizer api.\n   Adds a lot more flexibility while also simplifying the decoder plugins.\n * New encoder api (Ffmpeg, Vorbis, Theora, Flac and Speex encoders available).\n * Video outputs are recycled if possible.\n   This removes any 'flicker' between two similiar video files.\n * Fixed the video filters. Video should no longer go black when using filters.\n * New input core. Advantages are: better seeking, more responsive, support for\n   subtitle files at the core, and much much more.\n\nPlaylist:\n * Added a repeat mode to repeat a single file over and over.\n * Playlist sorting\n\nInput:\n * RTP/RTSP support.\n * Fixed annoying seeking problem with Ogg files (seeking would take ages).\n * Support for Flac in Ogg files.\n * MPEG TS demuxer also handles A52 and AAC audio in DVB streams.\n * Rewrite of the Flac demuxer.\n * cddax and vcdx plugins using libcdio, libvcd and libvcdinfo. (Linux only)\n * Reworked DVB tuning.\n * Better Icecast support.\n * New MPEG video elementary streams demuxer.\n * New DTS audio elementary streams demuxer.\n\nCodecs:\n * Support for Theora video encoding.\n * Support for Speex audio decoding/encoding.\n * Rewrite of the Flac decoder + encoding support.\n * Support for MPEG2 422 decoding which was recently added to libmpeg2 (cvs).\n * Support for AAC + SBR and proper multi-channel re-ordering.\n * MPEG 2.5 audio support.\n * Removed deprecated decoders (a52_old, mpeg_video and mpeg_audio).\n\nStream output:\n * Improvements to the MPEG TS muxer.\n * New transrating module for MPEG2 video.\n * Added packetization for MPEG AAC ADTS streams.\n * Added packetizers for Flac, Speex, Theora, LPCM, DTS and SPU streams.\n * Improved mp4 muxing and added AAC/MP4V support when transcoding.\n * Improved Ogg muxing and added Theora, Speex, Flac and subtitles support.\n * MPEG TS muxer follows the ATSC/DVB specs for embedded A52 audio.\n * --sout-keep option to keep the stream open while changing input.\n * Preliminary RTP support.\n * Fixes to SAP announces.\n\nInterface:\n * Skins:\n    - Bugfixes\n    - misc improvements (eg, \"stay on top\" option).\n * New standardized and customizable hotkeys.\n * wxWindows\n    - Playlist improvements (Sort, Search, mode buttons).\n    - Improvements and help in preferences\n    - New streaming wizard\n    - Revised Disc Open menu\n * HTTP\n    - Improvements of the standard pages\n    - Support for new commands\n * OSD ( OS X and hotkeys only atm ).\n\nService discovery:\n * Many fixes to the SAP module\n * SAP now supports HTTP streams\n\nSubtitles:\n * Text subtitles now have a black outline.\n * Text subtitles autodetection.\n * Text subtitles charset autodetection.\n * Text subtitles for all videofiles. Results may vary.\n * Text subtitles in Hebrew are supported. Arabic partially.\n * Automatic fontsize selection for text subtitles.\n * Fixed SAMI text subtitles support.\n * Support for subtitles in Matroska files.\n * Support for subtitles in DVB streams.\n\nMac OS X port:\n * New controller designed by Max Rudberg from www.maxthemes.com\n * Save playlist.\n * Works on 10.1.x again. Apologies for that problem.\n * Support for Panther.\n * Support for raw dumping of streams to disk.\n * Mozilla plugin for Mac OS X (experimental).\n\nWin32 port:\n * New DirectShow input module (for video acquisition cards, webcams, PVRs...).\n * VLC can be installed as a Windows NT service.\n * Allow on the fly switching of the main interface.\n * Support for 3F2R in audio output.\n * New --one-instance option to \"force\" only one running instance of VLC.\n * Mozilla plugin for Windows (experimental).\n * Multimonitor support (untested).\n * Fixed nasty timing bug on some dual-cpu / P4 with hyperthreading systems.\n\nLinux port:\n * Improved Video4Linux input. Also added support for an audio only input.\n * Support for real-time priority when running with root privileges.\n * Allow on the fly switching of the main interface.\n\niPaq port:\n * Brand new Gtk 2 interface\n\nMiscellaneous:\n * Audio visual effects filters (spectrum, scope and random).\n * Audio visual effects filter using goom.\n * Spanish, Portuguese Brazilian and Hungarian translations.\n * libcaca video output (colored ascii)\n\n\nChanges between 0.6.1 and 0.6.2:\n--------------------------------\n\nCore support:\n * Fixed a nasty regression in 0.6.1 which made some streams unplayable.\n\nStream output:\n * Transcoder now generates proper pts/dts thus should work a lot better.\n * Improved MPEG TS muxer.\n\nAccess input:\n * Support for DVB-S/C/T cards using v4l2 API for Linux 2.6.x kernels.\n * Few fixes to the VCD navigation.\n\nInterfaces:\n * Support for DVD menus navigation added to the wxWindows interface.\n\nUNIX ports:\n * ALSA multi-channel support fixed and tested.\n * Fixed fullscreen with gnome metacity.\n\nWin32 port:\n * Fixed VCD support which was broken on some machines.\n\niPaq port:\n * Familiar interface with Gtk+-1.2 and GPE support removed (deprecreated).\n\nMiscellaneous:\n * Text subtitles now centered on the picture.\n * Ffmpeg decoder now generates proper pts and can be used to play\n   mpeg1/2 videos.\n\n\nChanges between 0.6.0 and 0.6.1:\n--------------------------------\n\nCore support:\n * There should be less bogus resampling, particularly on DVDs.\n * VLC will now wait for the medium to wake up before starting its clock\n   after a pause.\n\nStream output:\n * Added vorbis audio support in Ogg streaming.\n * Added vorbis audio transcoding support.\n * Added mp3 audio transcoding support (when ffmpeg is compiled with mp3lame).\nUNIX ports:\n * ALSA multi-channel support fixed and tested.\n * Fixed fullscreen with gnome metacity.\n\nWin32 port:\n * Fixed VCD support which was broken on some machines.\n\niPaq port:\n * Familiar interface with Gtk+-1.2 and GPE support removed (deprecreated).\n\nMiscellaneous:\n * Text subtitles now centered on the picture.\n * Ffmpeg decoder now generates proper pts and can be used to play\n   mpeg1/2 videos.\n\n\nChanges between 0.6.0 and 0.6.1:\n--------------------------------\n\nCore support:\n * There should be less bogus resampling, particularly on DVDs.\n * VLC will now wait for the medium to wake up before starting its clock\n   after a pause.\n\nStream output:\n * Added vorbis audio support in Ogg streaming.\n * Added vorbis audio transcoding support.\n * Added mp3 audio transcoding support (when ffmpeg is compiled with mp3lame).\n * PS muxer can create mpeg1 files now and produce streams with system headers.\n * You can transcode a52 with more than two channels to mpga now.\n\nWin32 port:\n * Fixed DVD support which was partly broken due to a bug in libdvdcss\n * Fixed 5.1 audio support for the sblive/audigy soundcards.\n * Fixed sound on Windows NT.\n\nUNIX ports:\n * Fixed/improved ALSA support and enabled multi-channel audio output.\n * X11/Xvideo: Should now work on big endian machines, and you can now\n   use the arrow keys to browse through the DVD menus.\n\niPaq port:\n * Gtk+2 interface called PDA\n * Familiar Gtk+ is now deprecreated\n * Codec a52, Faad2 and flac added\n * Video4Linux enabled (demux and transcode)\n * Stream Out with transcode support enabled (use codecs: HuffYuvv and A-law).\n\nInterfaces:\n * Small updates/fixes to the wxWindows interface.\n * Improved HTTP remote control interface. You can now create your own HTML pages.\n * A new CORBA control plugin.\n\nInput demux:\n * Improved support for the Matroska container format.\n\nMiscellaneous:\n * Improved build system.\n * New video filter plugin to overlay logos.\n * Added support for Winamp 3 B4S files.\n * New subtitle module which uses freetype2 to render arbitrary fonts in any size.\n   Should also work with languages like russion for instance.\n\n\nChanges between 0.5.3 and 0.6.0:\n--------------------------------\n\nCore Support:\n * Channel Server support was removed (was deprecated)\n\nInput access:\n * Fixed a big bug in ftp and http access that prevented many platforms\n   (OSX most prominently) to view ftp and http streams.\n * Fixed large file support on Windows\n * Video 4 Linux support\n * CD Digital Audio support\n * Fixed IPv6 multicasting on Windows and OSX.\n\nInput demux:\n * Better detection of AAC and mp3 files\n * Support for OpenDML avi files\n * More complete .mp4/.mov support\n * Very early support for the Matroska container format (don't complain if it doesn't work ;)\n\nCodecs:\n * VLC's own MPEG1/2 decoder has been replaced with libmpeg2\n * Support for Sorenson 3 (SVQ3 or Quicktime content) via ffmpeg\n * OSX support for QDM2 and QDMC sound, often used in QT content.\n * Fixed a bug which was causing artefacts in DivX video (ffmpeg)\n * Updated our theora decoder to use the alpha 2 release of libtheora\n * If ffmpeg cannot keep up, skip and try to recover instead of stopping altogether\n * Indeo Video 3 (IV32) support for little-endian computers. (so not for OSX)\n\nInterfaces:\n * The wxWindows interface is now fully useable as well as Unicode safe\n * New HTTP remote control interface\n\nStream output:\n * New stream output scheme. It is now possible to build a chain of stream outputs\n   allowing for instance to stream and display some content at the same time.\n * The stream output now allows to transcode content on the fly.\n * Fixed major bug that prevented streaming mpeg 1/2 video with pulldown content.\n * SAP/SDP announcing support. (both IPv4 and IPv6)\n\nMiscellaneous:\n * New reset option for the preferences\n * You can set your language in the prefences\n * New video chroma conversion module using ffmpeg\n * Added a Gentoo ebuild to the distribution\n * Added a new smaller subtitles font (now the default) + scripts to generate your own\n * SAP/SDP IPv6 support\n\nUNIX ports:\n * Basic support for the X11 Xinerama extension.\n * New skinable interface ported to X11.\n * Run opie-vlc and zaurus-vlc as GuiServer\n\nMac OS X port:\n * When you add several items to the playlist, they are sorted alphabetically.\n * New about panel and revamped preferences panel.\n * Fixed the deinterlace menu.\n * Float on top, Fit to Screen and a Transparency option for video out.\n * New output dialog for transcode and display while stream capabilities.\n * New icons by Davor Orel.\n * New audio resampler. Should make VLC much faster.\n * Fixed disappearing and crackling sound (PTS is out of range bug)\n * We no longer automatically save the preferences when you quit the application\n * Arrow keys are now use to browse the menus in a DVD\n\nWin32 port:\n * the wxWindows interface is now the default interface\n * The keyboard shortcuts are now identical to the linux version\n * Fixed the \"no sound\" problem on NT4\n * Improved skinnable interface (it now uses the wxWindows interface dialogs).\n * Added support for compressed skins files (.vlt files)\n * Fixed SVCD chapters support.\n * Fixed memory leak with 5.1 audio.\n\nBeOS port:\n * Interface localization\n * Screensaver disabled if playing in fullscreen\n * A few new keyboard shortcuts\n * New full-featured Preferences window\n\n\nChanges between 0.5.2 and 0.5.3:\n--------------------------------\n\nCore Support:\n * fixed DTS S/PDIF output on little-endian machines\n * support for skins at the interface level\n * new OSD module using Freetype2\n * video outputs are now destroyed when the associated input ends\n * the video output takes into account the caching delay introduced at the\n   input level before dropping out of date frames.\n * configuration option to disable the translation of the interface\n\nInput access:\n * fixed HTTP redirects\n * support for opening an entire directory\n * EOF should be detected more reliably\n * new video4linux access plug-in\n * new kfir access plug-in designed to work around a bug in the kfir driver\n\nInput demux:\n * added stream type for some Motorola MPEG-2 video encoders\n * fix for some ogg web radio streams\n * fixed reading TS streams over HTTP\n\nCodecs:\n * support for 3ivx D4 (not previous versions)\n * support for '3ivd' and '3vid' encodings\n * support for 'MSS1' codec ( same as WMV2 )\n * support for SAMI subtitles (untested and incomplete)\n * better SSA4 subtitles recognition\n * new codec for raw I420 video\n * improvements to the libmpeg2-based MPEG video decoder\n\nInterfaces:\n * improvements to wxWindows based interface\n   (although it still misses some important features)\n * skeleton for a Gnome2/GTK2 plug-in\n\nStream output:\n * new HTTP output support\n * fixed a segfault in the AVI muxer\n * fixed AV synchronization issues\n\nMiscellaneous:\n * support for oldstyle id3 genres\n\nUNIX ports:\n * the SDL vout plug-in will now work on big-endian machines\n\nMac OS X port:\n * reorderable playlist\n * fixed the hiding of the mouse on multiple monitors\n * fixed a big issue with some USB speakers\n * support for mono audio output devices\n * reset the audio-device to its default mode before quitting VLC\n * fixed several cosmetic issues\n * you can drag the controller window by its background (as it should be)\n * the messages window remembers more lines\n * delay and fps can now be overruled with subtitles files\n * http and ogg stream output options\n * Apple menu and friends will now be translated as well\n\nWin32 port:\n * new skinnable interface\n * the directx video output doesn't crash anymore on ctrl+alt+del events.\n\niPAQ familiar Linux port:\n * support for FLAC audio format\n * the interface adapts to the screen size/rotation\n * playlist\n * network tab in the interface\n * \"apply\" handling in preferences\n\n\nChanges between 0.5.1a and 0.5.2:\n---------------------------------\n\nCore support:\n * advanced config options are now hidden by default\n * new --spdif option to use the S/PDIF audio output by default\n * fixed a 'clicking' sound when switching between streams\n * new bandlimited resampler that should improve audio quality on primarily\n   Mac OS X\n * fixed a problem with audio over http that caused some web radios to not work\n * DTS S/PDIF support\n\nCodecs:\n * support for DV audio through the ffmpeg library\n * support for FLAC audio through libflac\n * new but basic MPEG video decoder based on libmpeg2\n * fixed a major bug in LPCM code (fixes a problem with iDVD disks)\n\nStream output:\n * support for streaming DivX 1/2/3, wmv1/2, h/i263 over MPEG-2 TS\n * new --ttl option for Time To Live\n\nDVD support:\n * fixed quite a few problems with the dvd menu support\n\nUNIX ports:\n * fixed the GNU-pth support\n\nWin32 port:\n * multi-channel audio and S/PDIF support for both the DirectX and Waveout\n   plugins\n * localization support via gettext is now fully working\n * rc interface is now fully useable\n * fixed the MSVC project files generation\n\nMac OS X port:\n * several fixes for multi channel audio devices. AC3 over SPDIF with\n   M-Audio Sonica Theater still does not work. this is most likely a driver\n   bug and has been reported to M-Audio. (Sonica, Revolution, Delta, Griffin\n   iMate and MOTU firewire devices should work)\n * VLC now uses the default audio device\n * new info panel\n * very preliminary support for VLC control via applescript\n * support for mouse gestures\n * new priority scheme allowing to avoid lock-ups on low-end machines\n\nLinupy port:\n * there is a whole new port for the linupy distribution used by o.a. the\n   YOPY PDA. It is still experimental, please test it\n\nMiscellaneous:\n * improved ID3 tag detection\n * changed several errors into warnings ; the frequently reported \"this is\n   not a PS stream, continuing\" is one of these\n * mouse gestures work on windows and osx, but there still isn't any useful\n   gestures\n * some support for .pls playlists used by shoutcast\n\n\nChanges between 0.5.1 and 0.5.1a:\n---------------------------------\n\nMac OS X port:\n * fixed a problem that caused VLC to select the wrong language when\n   English was set as the preferred language\n\n\nChanges between 0.5.0 and 0.5.1:\n--------------------------------\n\nCore support:\n * new mouse gesture interface\n * audio volume can now be changed at any time, even when no file is\n   playing\n\nInput access:\n * various minor fixes on the network inputs\n * fixed some weird URL parsing problems (/Volumes/toto:tata/harry@coin.mpg)\n * VCD: fixed track number and chapter indexing\n\nInput demux:\n * fixed a bad initialization in the mp4 plug-in\n * new --buggy-psi option for TS streams which do not update their\n   continuity counter\n\nCodecs:\n * support for MPEG-2 intra slice refresh (aka. Slice-I) streams\n\nDVD support:\n * fixed a bug which turned the default interface command-line only\n   without the user consent\n\nUNIX ports:\n * GTK: fixed a crash when going fullscreen or changing volume from the\n   popup menu\n * X11: new screen saver disabling plug-in (--extraintf screensaver)\n * KDE: fixed compilation with KDE 3.1\n * ALSA: fixed mono files output\n\nMac OS X port:\n * fixed a crash on start-up on some localized systems\n * lowered real-time priorities to avoid lock-ups on slow machines\n * VLC can now be made the handler of ftp http mms and udp URLs\n * playlist enhancements\n * added half, normal and double video window menu items\n * new step forward/step backward commands\n * the dock should no longer be visible in fullscreen mode\n * the Mac OS X binary is now compiled with Ogg/Theora support\n * vlc.app is now VLC.app\n\nWin32 port:\n * fixed the \"RichEdit line insertion error\" bug\n * VLC can now be run from outside its installation directory\n * fixed a bug that prevented to find the default subtitle font\n\nBeOS port:\n * smarter BeOS priorities to avoid lock-ups\n * few enhancements in the interface (especially the Settings window)\n\nOpie port:\n * native video output is working again\n * only commandline interface support\n * support for MPEG4, DivX through ffmpeg package\n\n\nChanges between 0.4.6 and 0.5.0:\n--------------------------------\n\nCore structure:\n  * object structure which allows for full re-entrancy, known as libvlc\n  * new audio output architecture based on filter pipelines, providing\n    S/PDIF and multi-channel support\n  * localization support via gettext on most architectures\n  * new stream output architecture, allowing to use VLC to unicast,\n    multicast or broadcast a stream to another VLC (only MPEG 1, 2 and 4\n    and A/52 streams are supported)\n  * build system now uses autoconf/automake/autopoint\n\nInput access:\n  * mms:// support\n  * ftp:// support\n  * stability fixes in the HTTP access\n  * auto-detection of RTP encapsulation\n  * VCD entry points support\n  * VCD image file support\n\nInput demux:\n  * support for *.asf format\n  * improved support for *.avi, especially over an HTTP connection\n  * support for *.mp4 and *.mov format\n  * support for ogg encapsulation\n  * support for raw DV format\n  * support for *.wav format\n  * new demuxdump demux allowing to save a stream to a file\n  * raw AAC support\n\nStream discovery & playlists:\n  * support for the SAP/SDP and SLP protocols\n  * support for .m3u file format\n  * support for .asx file format\n  * hack to find the streaming sources in html-pages with embedded wmp\n\nCodecs:\n  * support for the microdvd, subrip, ssa1, ssa2-4 subtitles file formats\n    (only available with the .avi demux)\n  * support for ADPCM audio codec\n  * support for raw PCM data\n  * support for Cinepak video codec\n  * support for DV video codec via libdv or ffmpeg\n  * support for AAC audio codec via libfaad2\n  * support for Xvid codec\n  * support for Xiph.org's Vorbis audio codec\n  * support for Xiph.org's Tremor audio codec (when compiling from sources)\n  * support for Xiph.org's Tarkin and Theora video codecs (when compiling\n    from sources)\n  * new codecs supported by latest ffmpeg versions: WMV, WMA, SVQ 1, H263,\n    H263i, MJPEG A/B\n  * fixed an endianness bug in LPCM codec\n\nDVD support:\n  * experimental preliminary support for DVD menus via libdvdplay\n\nMiscellaneous:\n  * new WxWindows interface\n  * all interfaces allow to dynamically change the volume, the audio\n    device and the channels configuration\n  * headphone channel mixer with virtual spatialization effect\n  * Mozilla plugin based on libvlc for embedded playback in webpages of any\n    format that VLC can play\n  * new swedish translation\n  * enhancements of the playlist window\n  * new messages window to see debug info\n  * fixed a few crashes\n\niPaq port:\n  * slider bar in GTK+/GPE Familiar interface\n  * fixed crash on directory change in Familiar interface\n  * added qte_main module for use in all modules that need Opie or Qte support\n  * native video output module for Qt Embedded/Opie is not working\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.6484375,
          "content": "# VLC media player\n\n**VLC** is a libre and open source **media player** and **multimedia engine**,\nfocused on **playing everything**, and **running everywhere**.\n\n**VLC** can play most multimedia files, discs, streams, devices and is also able to\nconvert, encode, **stream** and manipulate streams into numerous formats.\n\nVLC is used by many over the world, on numerous platforms, for very different use cases.\n\nThe **engine of VLC** can be embedded into 3rd party applications, and is called *libVLC*.\n\n**VLC** is part of the [VideoLAN project](https://videolan.org) and\nis developed and supported by a community of volunteers.\n\nThe VideoLAN project was started at the university [École Centrale Paris](https://www.centralesupelec.fr/) who\nrelicensed VLC under the GPLv2 license in February 2001. Since then, VLC has\nbeen downloaded **billions** of times.\n\n## License\n\n**VLC** is released under the GPLv2 *(or later)* license.\n*On some platforms, it is de facto GPLv3, because of the licenses of dependencies*.\n\n**libVLC**, the engine is released under the LGPLv2 *(or later)* license. \\\nThis allows embedding the engine in 3rd party applications, while letting them to be licensed under other licenses.\n\n# Platforms\n\nVLC is available for the following platforms:\n- [Windows] *(from 7 and later, including UWP platforms and all versions of Windows 10)*\n- [macOS] *(10.10 and later)*\n- [GNU/Linux] and affiliated\n- [BSD] and affiliated\n- [Android] *(4.2 and later)*, including Android TV and Android Auto\n- [iOS] *(9 and later)*, including AppleTV and iPadOS\n- Haiku, OS/2 and a few others.\n\n[Windows]: https://www.videolan.org/vlc/download-windows.html\n[macOS]: https://www.videolan.org/vlc/download-macosx.html\n[GNU/Linux]: https://www.videolan.org/vlc/#download\n[BSD]: https://www.videolan.org/vlc/download-freebsd.html\n[Android]: https://www.videolan.org/vlc/download-android.html\n[iOS]: https://www.videolan.org/vlc/download-ios.html\n\nNot all platforms receive the same amount of care, due to our limited resources.\n\n**Nota Bene**: The [Android app](https://code.videolan.org/videolan/vlc-android/) and\nthe [iOS app](https://code.videolan.org/videolan/vlc-ios/) are located in different repositories\nthan the main one.\n\n# Contributing & Community\n\n**VLC** is maintained by a community of people, and VideoLAN is not paying any of them.\\\nThe community is composed of developers, helpers, maintainers, designers and writers that want\nthis open source project to thrive.\n\nThe main development of VLC is done in the C language, but this repository also contains\nplenty of C++, Obj-C, asm and Rust.\n\nOther repositories linked to vlc are done in languages including Kotlin/Java [(Android)](https://code.videolan.org/videolan/vlc-android/),\nSwift [(iOS)](https://code.videolan.org/videolan/vlc-ios/), and C# [(libVLCSharp)](https://code.videolan.org/videolan/libvlcsharp/).\n\nWe need help with the following tasks:\n- Coding\n- Packaging for Windows, macOS and Linux distributions\n- Technical writing for the documentation\n- Design\n- Support\n- Community management and communication.\n\nPlease contribute :)\n\nWe are on IRC. You can find us on the **#videolan** channel on *[Libera.chat]*.\n\n[Libera.chat]: https://libera.chat\n\n## Contributions\n\nContributions are now done through Merge Requests on our [GitLab repository](https://code.videolan.org/videolan/vlc/).\n\nCI and discussions should be resolved before a Merge Request can be merged.\n\n# libVLC\n\n**libVLC** is an embeddable engine for 3rd party applications and frameworks.\n\nIt runs on the same platforms as VLC *(and sometimes on more)* and can provide playback,\nstreaming and conversion of multimedia files and streams.\n\n\n**libVLC** has numerous bindings for other languages, such as C++, Python and C#.\n\n# Support\n\n## Links\n\nSome useful links that might help you:\n\n- [VLC web site](https://www.videolan.org/vlc/)\n- [Support](https://www.videolan.org/support/)\n- [Forums](https://forum.videolan.org/)\n- [Wiki](https://wiki.videolan.org/)\n- [Developer's Corner](https://wiki.videolan.org/Developers_Corner)\n- [VLC hacking guide](https://wiki.videolan.org/Hacker_Guide)\n- [Bugtracker](https://code.videolan.org/videolan/vlc/-/issues)\n- [VideoLAN web site](https://www.videolan.org/)\n\n## Source Code sitemap\n```\nABOUT-NLS          - Notes on the Free Translation Project.\nAUTHORS            - VLC authors.\nCOPYING            - The GPL license.\nCOPYING.LIB        - The LGPL license.\nINSTALL            - Installation and building instructions.\nNEWS               - Important modifications between the releases.\nREADME             - Project summary.\nTHANKS             - VLC contributors.\n\nbin/               - VLC binaries.\nbindings/          - libVLC bindings to other languages.\ncompat/            - compatibility library for operating systems missing\n                     essential functionalities.\ncontrib/           - Facilities for retrieving external libraries and building\n                     them for systems that don't have the right versions.\ndoc/               - Miscellaneous documentation.\nextras/analyser    - Code analyser and editor specific files.\nextras/buildsystem - Different build system specific files.\nextras/misc        - Files that don't fit in the other extras/ categories.\nextras/package     - VLC packaging specific files such as spec files.\nextras/tools/      - Facilities for retrieving external building tools needed\n                     for systems that don't have the right versions.\ninclude/           - Header files.\nlib/               - libVLC source code.\nmodules/           - VLC plugins and modules. Most of the code is here.\npo/                - VLC translations.\nshare/             - Common resource files.\nsrc/               - libvlccore source code.\ntest/              - Testing system.\n```\n"
        },
        {
          "name": "THANKS",
          "type": "blob",
          "size": 5.53515625,
          "content": "Some VLC plugins use external libraries and make extensive use of the\nfollowing persons' or companies' code:\n\nFAAD2 - Copyright (c) Nero AG, www.nero.com\" - GPLv2 or later\nFFmpeg - Copyright (c) 2000-2017 the FFmpeg developers - LGPLv2.1 or later\nFluidLite - Copyright (c) 2016 Robin Lobel - LGPLv2.1 or later\nFluidSynth - Copyright (c) 2003-2010 Peter Hanappe, Conrad Berhörster, Antoine\n   Schmitt, Pedro López-Cabanillas, Josh Green, David Henningsson - LGPLv2.1 or\n   later\nFontconfig - Copyright (c) 2000,2001,2002,2003,2004,2006,2007 Keith Packard,\n   (c) 2005 Patrick Lam, (c) 2009 Roozbeh Pournader, (c) 2008,2009 Red Hat,\n   Inc., (c) 2008 Danilo Šegan, (c) 2012 Google, Inc. - MIT License\nfreetype - David Turner, Robert Wilhelm, and Werner Lemberg - FreeType License\nGSM - Copyright (c) 1992 - 1994, 2009 Jutta Degener & Carsten Bormann - GSM\n   permissive license\nGNU FriBidi - Copyright (c) 2004-2012 Behdad Esfahbod, Dov Grobgeld, Roozbeh\n   Pournader - LGPLv2.1 or later\nGnuTLS - Copyright (C) 2000-2012 Free Software Foundation, Inc. - LGPLv2.1 or\n   later\nharfbuzz - Copyright (c) 2010, 2011, 2012  Google, Inc., (c) 2012  Mozilla\n   Foundation, (c) 2011 Codethink Limited, (c) 2008, 2010  Nokia Corporation\n   and/or its subsidiary(-ies), (c) 2009 Keith Stribley, (c) 2009 Martin Hosken\n   and SIL International, (c) 2007 Chris Wilson, (c) 2006 Behdad Esfahbod,\n   (c) 2005 David Turner, (c) 2004, 2007, 2008, 2009, 2010 Red Hat, Inc.,\n   (c) 1998-2004 David Turner and Werner Lemberg - Old MIT License\nliba52 - Aaron Holtzman & Michel Lespinasse, et al. - GPLv2 or later\nlibav - Copyright (c) 2000 - 2015 the libav developers - LGPLv2.1 or later\nlibass - Copyright (c) 2006-2015 Grigori Goronzy et al. - ISC License\nlibbluray - Copyright (c) 2009-2015 VideoLAN and authors - LGPLv2.1 or later\nlibcaca - Copyright (c) 2004 Sam Hocevar - WTFPL / LGPLv2.1 or later /\n   GPLv2 or later / ISC\nlibdca - Copyright (c) 2004-2007 VideoLAN and authors - GPLv2 or later\nlibdvbpsi - Copyright (c) 2001-2017 VideoLAN and authors - LGPLv2.1 or later\nlibdvdcss - Copyright (c) 2001-2017 VideoLAN and authors - GPLv2 or later\nlibdvdread - GPLv2 or later\nlibdvdnav - GPLv2 or later\nlibebml - Copyright (c) 2002-2015 Steve Lhomme - LGPLv2.1 or later\nlibFLAC - Copyright (c) 2001 - 2014 Josh Coalson et al. - Xiph.org BSD license\nlibgme - LGPLv2.1 or later\nlibgpg-error - Copyright 2003, 2004, 2005, 2006, 2007, 2013 g10 Code GmbH\n   - LGPLv2.1 or later\nlibkate - Copyright (c) 2008-2011 Vincent Penquerc'h - 3-clause BSD License\nliblive555 - Copyright (c) 1996-2015 Live Networks, Inc. - LGPLv2.1 or later\nlibmad - Copyright (c) 2000-2004 Robert Leslie, et al. - GPLv2 or later\nlibmatroska - Copyright (c) 2002-2015 Steve Lhomme - LGPLv2.1 or later\nlibmpeg2 - Aaron Holtzman & Michel Lespinasse, et al. - GPLv2 or later\nlibmodplug - Oliver Lapicque, Konstanty - Public domain\nlibogg, libvorbis - Copyright (c) 2002-2015 Xiph.org Foundation - Xiph.org BSD\n   license\nlibpostproc - Copyright (C) 2001-2015 Michael Niedermayer, et al. - GPLv2 or\n   later\nlibpng - Copyright (c) 2004, 2006-2014 Glenn Randers-Perhson, et al. - libpng\n   license\nlibsamplerate - Copyright (c) 2002-2011 Erik de Castro Lopo - GPLv2 or later\nlibschroedinger - Copyright (c) 2006 BBC and Fluendo - MIT License\nlibsdl - Copyright (c) 1997-2014 Sam Lantinga et al. - LGPLv2.1 or later\nlibshout - Copyright (c) 2012 - LGPLv2.1 or later\nlibtheora - Copyright (c) Xiph.org Foundation - Xiph.org BSD license\nlibtiff - Copyright (c) 1988-1997 Sam Leffler, (c) 1991-1997 Silicon Graphics,\n   Inc. - BSD-like\nlibtwolame - Copyright (c) 2001-2004 Michael Cheng, (c) 2004-2006 The TwoLAME\n   Project - LGPLv2.1 or later\nlibupnp - Copyright (c) 2000-2003 Intel Corporation - 3-clause BSD License\nlibvpx - Copyright (c) 2010-2015, Google Inc. - 3-clause BSD License\nlibxml2 - Copyright (c) 1998-2014 Daniel Veillard - MIT License\nlua - Copyright (c) 1994-2008 Lua.org, PUC-Rio. - MIT License\nMusepack decoder library - Copyright (c) 2005-2011, The Musepack Development\n   Team - 3-clause BSD License\nOpenJPEG - Copyright (c) 2002-2014, Communcations and Remote Sensing\n   Laboratory, UCL, Belgium - ISC License\nOpus - Copyright 2001-2013 Xiph.Org, Skype Limited, Octasic, Jean-Marc Valin,\n   Timothy B. Terriberry, CSIRO, Gregory Maxwell, Mark Borgerding,\n   Erik de Castro Lopo - Xiph.org BSD License\nSparkle — Andy Matuschak et al. - MIT License\nSpeex, Speexdsp - Copyright (c) 1992-2015 Xiph.org Foundation, Jean-Marc Valin,\n   Analog Devices Inc. Commonwealth Scientific and Industrial Research\n   Organisation, David Row, Jutta Degener, Carsten Bormann - 3-clause BSD\n   License\ntaglib - Copyright (c) 2004-2016 Scott Wheeler, et al. - LGPLv2.1 or later\nx264 - Copyright (c) 2004-2017 VideoLAN and authors - GPLv2 or later\nx265 - Copyright (c) 2004-2015 x265 project - GPLv2 or later\nZapping VBI library - Copyright (c) 2000-2003 Michael H. Schimek, Iñaki García\n   Etxebarria - LGPLv2.1 or later\nzlib - Copyright (c) 1995-2017 Jean-loup Gailly and Mark Adler - zlib license\n\nThe VideoLAN team would like to thank the following donators:\n\nJulian Cain, who made a $1000 donation\nThe French website MacBidouille gave €500 to help us buy a PowerMac G5\nThe French magazine à vos MAC gave €500 to help us buy a PowerMac G5\nLaurent Dupuy, who made a €540 donation\nThe French company Cybervia (Actech) gave €2000 to pay for webserver hosting\nDennis Perov - Hardware donation\n\n...the following active members of our user community:\n\nAlan Wright\nDavid J LaBarre \"DJ\"\nEric Adler\nJulien Bouquillon\n\n...and code auditors and testers:\n\nDavid Thiel\nPhilippe A. aka \"Lotesdelère\"\nSebastien Chaumat\n"
        },
        {
          "name": "autotools",
          "type": "tree",
          "content": null
        },
        {
          "name": "bin",
          "type": "tree",
          "content": null
        },
        {
          "name": "bootstrap",
          "type": "blob",
          "size": 2.177734375,
          "content": "#! /bin/sh\n\n##  bootstrap file for the VLC media player\n##\n## Copyright (C) 2005-2008 the VideoLAN team\n##\n##  Authors: Sam Hocevar <sam@zoy.org>\n##           Rémi Denis-Courmont\n\nset -e\n\ncd \"$(dirname \"$0\")\"\n\nif test \"$#\" != \"0\"; then\n  echo \"Usage: $0\" >&2\n  echo \"  Calls autoreconf to generate m4 macros and prepare Makefiles.\" >&2\n  exit 1\nfi\n\n# Check for tools directory\nif test -z ${VLC_TOOLS}; then\n  VLC_TOOLS=extras/tools/build\nfi\nif test -d ${VLC_TOOLS}/bin; then\n  VLC_TOOLS_PATH=\"$( cd \"${VLC_TOOLS}/bin\" ; pwd -P )\"\n  PATH=\"$VLC_TOOLS_PATH:$PATH\"\nfi\nif test -d ${VLC_TOOLS}/share/aclocal; then\n  # https://www.gnu.org/software/automake/manual/html_node/Macro-Search-Path.html\n  ACLOCAL_ARGS=\"${ACLOCAL_ARGS} -I ${VLC_TOOLS}/share/aclocal/\"\nfi\nif test -f ${VLC_TOOLS}/share/autoconf-vlc/build-aux/config.guess -a -f ${VLC_TOOLS}/share/autoconf-vlc/build-aux/config.sub; then\n  export autom4te_buildauxdir=\"$( cd \"${VLC_TOOLS}/share/autoconf-vlc/build-aux\" ; pwd -P )\"\nfi\n\n###\n###  Get a sane environment, just in case\n###\nCYGWIN=binmode\nexport CYGWIN\n\n# Check for pkg-config\nif ! \"${PKG_CONFIG:-pkg-config}\" --version >/dev/null 2>&1; then\n\techo 'Error: \"pkg-config\" is not installed.' >&2\n\texit 1\nfi\n\n# Check for autopoint (GNU gettext)\nexport AUTOPOINT\ntest \"$AUTOPOINT\" || AUTOPOINT=autopoint\nif ! \"$AUTOPOINT\" --dry-run --force >/dev/null 2>&1; then\n\tAUTOPOINT=true\n\tcat << EOF\nNOTE: autopoint (GNU gettext-tools) appears to be missing or out-of-date.\nPlease install or update GNU gettext tools.\nOtherwise, you will not be able to build a source tarball.\n==========================================================================\n\nEOF\nfi\n\n# Check for flex and bison\nif ! flex --version >/dev/null 2>&1; then\n\techo \"ERROR: flex is not installed.\" >&2\n\tif ! test -f modules/codec/webvtt/CSSLexer.c; then\n\t\texit 1\n\tfi\nfi\n\nif ! bison --version >/dev/null 2>&1; then\n\techo \"ERROR: GNU bison is not installed.\" >&2\n\tif ! test -f modules/codec/webvtt/CSSGrammar.c; then\n\t\texit 1\n\tfi\nfi\n\n###\n###  classic bootstrap stuff\n###\n\nautoreconf --install --force --verbose ${ACLOCAL_ARGS}\nrm -f po/Makevars.template\n\n##\n##  files which need to be regenerated\n##\nrm -f stamp-h*\n\n# Shut up\nset +x\necho \"Successfully bootstrapped\"\n"
        },
        {
          "name": "buildsystem",
          "type": "tree",
          "content": null
        },
        {
          "name": "compat",
          "type": "tree",
          "content": null
        },
        {
          "name": "config.h.meson",
          "type": "blob",
          "size": 16.01171875,
          "content": "/* Config template used by meson to generate config.h */\n\n/* Define to 1 to allow running VLC as root (uid 0). */\n#mesondefine ALLOW_RUN_AS_ROOT\n\n/* Define to 1 if AVX inline assembly is available. */\n#mesondefine CAN_COMPILE_AVX\n\n/* Define to 1 if AVX2 inline assembly is available. */\n#mesondefine CAN_COMPILE_AVX2\n\n/* Define to 1 if SSE2 inline assembly is available. */\n#mesondefine CAN_COMPILE_SSE2\n\n/* Define to 1 if SSE3 inline assembly is available. */\n#mesondefine CAN_COMPILE_SSE3\n\n/* Define to 1 if SSE4_1 inline assembly is available. */\n#mesondefine CAN_COMPILE_SSE4_1\n\n/* Define to 1 if SSSE3 inline assembly is available. */\n#mesondefine CAN_COMPILE_SSSE3\n\n/* The ./configure command line */\n#mesondefine CONFIGURE_LINE\n\n/* Copyright string */\n#mesondefine COPYRIGHT_MESSAGE\n\n/* The copyright years */\n#mesondefine COPYRIGHT_YEARS\n\n/* Default font family */\n#mesondefine DEFAULT_FAMILY\n\n/* Default font */\n#mesondefine DEFAULT_FONT_FILE\n\n/* Default monospace font family */\n#mesondefine DEFAULT_MONOSPACE_FAMILY\n\n/* Default monospace font */\n#mesondefine DEFAULT_MONOSPACE_FONT_FILE\n\n/* Binary specific version */\n#mesondefine DISTRO_VERSION\n\n/* Define to 1 if translation of program messages to the user's native\n   language is requested. */\n#mesondefine ENABLE_NLS\n\n/* Define to 1 for stream output support. */\n#mesondefine ENABLE_SOUT\n\n/* Define if you want the VideoLAN manager support */\n#mesondefine ENABLE_VLM\n\n/* Enable compile-time and run-time bounds-checking, and some warnings,\n   without upsetting glibc 2.15+ or toolchains predefining _FORTIFY_SOURCE */\n#if !defined _FORTIFY_SOURCE && defined __OPTIMIZE__ && __OPTIMIZE__\n# define _FORTIFY_SOURCE 2\n#endif\n\n/* Define to 1 if you have the `accept4' function. */\n#mesondefine HAVE_ACCEPT4\n\n/* Define to 1 if you have the `aligned_alloc' function. */\n#mesondefine HAVE_ALIGNED_ALLOC\n\n/* AMD HQScaler supported */\n#mesondefine HAVE_AMF_SCALER\n\n/* Define if libaribb24 is available. */\n#mesondefine HAVE_ARIBB24\n\n/* Define to 1 if you have the <arpa/inet.h> header file. */\n#mesondefine HAVE_ARPA_INET_H\n\n/* Define to 1 if you have the `asprintf' function. */\n#mesondefine HAVE_ASPRINTF\n\n/* Define to 1 if you have the `atof' function. */\n#mesondefine HAVE_ATOF\n\n/* Define to 1 if you have the `atoll' function. */\n#mesondefine HAVE_ATOLL\n\n/* Support for __attribute__((packed)) for structs */\n#mesondefine HAVE_ATTRIBUTE_PACKED\n\n/* Define to 1 if AVX2 intrinsics are available. */\n#mesondefine HAVE_AVX2_INTRINSICS\n\n/* Define to 1 if you have the `backtrace' function. */\n#mesondefine HAVE_BACKTRACE\n\n/* Defined to 1 if the qsort_r() prototype contradicts the upcoming POSIX\n   standard. */\n#mesondefine HAVE_BROKEN_QSORT_R\n\n/* Define if CSS engine is built */\n#mesondefine HAVE_CSS\n\n/* Define to 1 if C++ headers define locale_t */\n#mesondefine HAVE_CXX_LOCALE_T\n\n/* Define if the compiler supports typeof. */\n#mesondefine HAVE_CXX_TYPEOF\n\n/* Define to 1 if you have the `dirfd' function. */\n#mesondefine HAVE_DIRFD\n\n/* Define to 1 if you have the `dup3' function. */\n#mesondefine HAVE_DUP3\n\n/* Define to 1 if you have the <dxgidebug.h> header file. */\n#mesondefine HAVE_DXGIDEBUG_H\n\n/* Define to 1 if you have the `eventfd' function. */\n#mesondefine HAVE_EVENTFD\n\n/* Define to 1 if you have the <execinfo.h> header file. */\n#mesondefine HAVE_EXECINFO_H\n\n/* Define to 1 if you have the `fcntl' function. */\n#mesondefine HAVE_FCNTL\n\n/* Define to 1 if you have the `fdopendir' function. */\n#mesondefine HAVE_FDOPENDIR\n\n/* Define to 1 if you have the <features.h> header file. */\n#mesondefine HAVE_FEATURES_H\n\n/* Define to 1 if you have the `flock' function. */\n#mesondefine HAVE_FLOCK\n\n/* Define to 1 if you have the `flockfile' function. */\n#mesondefine HAVE_FLOCKFILE\n\n/* Define to 1 if you have the `fork' function. */\n#mesondefine HAVE_FORK\n\n/* Define to 1 if you have the `fstatat' function. */\n#mesondefine HAVE_FSTATAT\n\n/* Define to 1 if you have the `fstatvfs' function. */\n#mesondefine HAVE_FSTATVFS\n\n/* Define to 1 if you have the `fsync' function. */\n#mesondefine HAVE_FSYNC\n\n/* Define to 1 if you have the <sys/auxv.h> header file */\n#mesondefine HAVE_SYS_AUXV_H\n\n/* Defined if having gcrypt */\n#mesondefine HAVE_GCRYPT\n\n/* Define to 1 if you have the `getauxval' function. */\n#mesondefine HAVE_GETAUXVAL\n\n/* Define to 1 if you have the `getdelim' function. */\n#mesondefine HAVE_GETDELIM\n\n/* Define to 1 if you have the `getenv' function. */\n#mesondefine HAVE_GETENV\n\n/* Define to 1 if you have the `getmntent_r' function. */\n#mesondefine HAVE_GETMNTENT_R\n\n/* Define to 1 if you have the <getopt.h> header file. */\n#mesondefine HAVE_GETOPT_H\n\n/* Define to 1 if you have the `getpid' function. */\n#mesondefine HAVE_GETPID\n\n/* Define to 1 if you have the `getpwuid_r' function. */\n#mesondefine HAVE_GETPWUID_R\n\n/* Define if the GNU gettext() function is already present or preinstalled. */\n#mesondefine HAVE_GETTEXT\n\n/* Define to 1 if you have the `gettimeofday' function. */\n#mesondefine HAVE_GETTIMEOFDAY\n\n/* Define to 1 if you have the <GL/wglew.h> header file. */\n#mesondefine HAVE_GL_WGLEW_H\n\n/* Define to 1 if you have the `gmtime_r' function. */\n#mesondefine HAVE_GMTIME_R\n\n/* Define if you have the iconv() function and it works. */\n#mesondefine HAVE_ICONV\n\n/* Define to 1 if you have GNU libidn. */\n#mesondefine HAVE_IDN\n\n/* Define to 1 if you have the `if_nameindex' function. */\n#mesondefine HAVE_IF_NAMEINDEX\n\n/* Define to 1 if you have if_nametoindex function */\n#mesondefine HAVE_IF_NAMETOINDEX\n\n/* Define to 1 if you have inet_pton function */\n#mesondefine HAVE_INET_PTON\n\n/* Define to 1 if you have the `isatty' function. */\n#mesondefine HAVE_ISATTY\n\n/* Define to 1 if you have the `lfind' function. */\n#mesondefine HAVE_LFIND\n\n/*\n *   Type/attributes/etc macros\n */\n\n/*\n * Library check macros\n */\n\n\n\n/* Define to 1 if you have the <libavcodec/d3d11va.h> header file. */\n#mesondefine HAVE_LIBAVCODEC_D3D11VA_H\n\n/* Define to 1 if you have the <libavcodec/dxva2.h> header file. */\n#mesondefine HAVE_LIBAVCODEC_DXVA2_H\n\n/* TODO: Properly check for the avformat header\n */\n#define HAVE_LIBAVFORMAT_AVFORMAT_H 1\n\n/*\n * Header check macros\n */\n/* Define to 1 if you have the <linux/dccp.h> header file. */\n#mesondefine HAVE_LINUX_DCCP_H\n\n/* Define to 1 if you have the <linux/magic.h> header file. */\n#mesondefine HAVE_LINUX_MAGIC_H\n\n/* Define to 1 if you have the `lldiv' function. */\n#mesondefine HAVE_LLDIV\n\n/* Define to 1 if you have the `localtime_r' function. */\n#mesondefine HAVE_LOCALTIME_R\n\n/* Define to 1 if you have the lrintf function */\n#mesondefine HAVE_LRINTF\n\n/* Define to 1 if the system has the type `max_align_t'. */\n#mesondefine HAVE_MAX_ALIGN_T\n\n/* Define to 1 if you have the `memalign' function. */\n#mesondefine HAVE_MEMALIGN\n\n/* Define to 1 if you have the `memfd_create' function. */\n#mesondefine HAVE_MEMFD_CREATE\n\n/* Define to 1 if you have the `memrchr' function. */\n#mesondefine HAVE_MEMRCHR\n\n/* Define to 1 if you have the `mkostemp' function. */\n#mesondefine HAVE_MKOSTEMP\n\n/* Define to 1 if you have the `mmap' function. */\n#mesondefine HAVE_MMAP\n\n/* Define to 1 if you have the <mpc/mpcdec.h> header file. */\n#mesondefine HAVE_MPC_MPCDEC_H\n\n/* Define to 1 if you have the NANF function */\n#mesondefine HAVE_NANF\n\n/* Define to 1 if you have the <netinet/tcp.h> header file. */\n#mesondefine HAVE_NETINET_TCP_H\n\n/* Define to 1 if you have the <netinet/udplite.h> header file. */\n#mesondefine HAVE_NETINET_UDPLITE_H\n\n/* Define to 1 if you have the <net/if.h> header file. */\n#mesondefine HAVE_NET_IF_H\n\n/* Define to 1 if you have the `newlocale' function. */\n#mesondefine HAVE_NEWLOCALE\n\n/* Define to 1 if you have the `nrand48' function. */\n#mesondefine HAVE_NRAND48\n\n/* Define to 1 if you have the `open_memstream' function. */\n#mesondefine HAVE_OPEN_MEMSTREAM\n\n/* Define to 1 if you have the `pipe2' function. */\n#mesondefine HAVE_PIPE2\n\n/* Define to 1 if you have the `poll' function. */\n#mesondefine HAVE_POLL\n\n/* Define to 1 if you have the <poll.h> header file. */\n#mesondefine HAVE_POLL_H\n\n/* Define to 1 if you have the `posix_fadvise' function. */\n#mesondefine HAVE_POSIX_FADVISE\n\n/* Define to 1 if you have the `posix_memalign' function. */\n#mesondefine HAVE_POSIX_MEMALIGN\n\n/* Define to 1 if using libprojectM 2.x */\n#mesondefine HAVE_PROJECTM2\n\n/* Define to 1 if you have the <pthread.h> header file. */\n#mesondefine HAVE_PTHREAD_H\n\n/* Define to 1 if you have the `readv' function. */\n#mesondefine HAVE_READV\n\n/* Define to 1 if you have realpath function */\n#mesondefine HAVE_REALPATH\n\n/* Define to 1 if you have the `recvmmsg' function. */\n#mesondefine HAVE_RECVMMSG\n\n/* Define to 1 if you have the `recvmsg' function. */\n#mesondefine HAVE_RECVMSG\n\n/* Define to 1 if you have the `rewind' function. */\n#mesondefine HAVE_REWIND\n\n/* Define to 1 if you have the `sched_getaffinity' function. */\n#mesondefine HAVE_SCHED_GETAFFINITY\n\n/* Define to 1 if you have the <search.h> header file. */\n#mesondefine HAVE_SEARCH_H\n\n/* Define to 1 if you have the `sendmsg' function. */\n#mesondefine HAVE_SENDMSG\n\n/* Define to 1 if you have the `setenv' function. */\n#mesondefine HAVE_SETENV\n\n/* Define to 1 if you have the `setlocale' function. */\n#mesondefine HAVE_SETLOCALE\n\n/* Define to 1 if you have the sincos function. */\n#mesondefine HAVE_SINCOS\n\n/* Define to 1 if SSE2 intrinsics are available. */\n#mesondefine HAVE_SSE2_INTRINSICS\n\n/* Define to 1 if you have the `strcasecmp' function. */\n#mesondefine HAVE_STRCASECMP\n\n/* Define to 1 if you have the `strcasestr' function. */\n#mesondefine HAVE_STRCASESTR\n\n/* Define to 1 if you have the `strcoll' function and it is properly defined.\n   */\n#mesondefine HAVE_STRCOLL\n\n/* Define to 1 if you have the `strdup' function. */\n#mesondefine HAVE_STRDUP\n\n/*\n *   Function check macros\n */\n\n/* Define to 1 if you have the `strlcpy' function. */\n#mesondefine HAVE_STRLCPY\n\n/* Define to 1 if you have the `strndup' function. */\n#mesondefine HAVE_STRNDUP\n\n/* Define to 1 if you have the `strnlen' function. */\n#mesondefine HAVE_STRNLEN\n\n/* Define to 1 if you have the `strnstr' function. */\n#mesondefine HAVE_STRNSTR\n\n/* Define to 1 if you have the `strsep' function. */\n#mesondefine HAVE_STRSEP\n\n/* Define to 1 if you have the `strtof' function. */\n#mesondefine HAVE_STRTOF\n\n/* Define to 1 if you have the `strtok_r' function. */\n#mesondefine HAVE_STRTOK_R\n\n/* Define to 1 if you have the `strtoll' function. */\n#mesondefine HAVE_STRTOLL\n\n/* Define to 1 if the system has the type `struct if_nameindex'. */\n#mesondefine HAVE_STRUCT_IF_NAMEINDEX\n\n/* Define to 1 if the system has the type `struct pollfd'. */\n#mesondefine HAVE_STRUCT_POLLFD\n\n/* Define to 1 if the system has the type `struct timespec'. */\n#mesondefine HAVE_STRUCT_TIMESPEC\n\n/* Define to 1 if you have the `strverscmp' function. */\n#mesondefine HAVE_STRVERSCMP\n\n/* Define to 1 if you have the `swab' function. */\n#mesondefine HAVE_SWAB\n\n/* Define to 1 if you have the <sys/eventfd.h> header file. */\n#mesondefine HAVE_SYS_EVENTFD_H\n\n/* Define to 1 if you have the <sys/mount.h> header file. */\n#mesondefine HAVE_SYS_MOUNT_H\n\n/* Define to 1 if you have the <sys/shm.h> header file. */\n#mesondefine HAVE_SYS_SHM_H\n\n/* Define to 1 if you have the <sys/socket.h> header file. */\n#mesondefine HAVE_SYS_SOCKET_H\n\n/* Define to 1 if you have the <sys/soundcard.h> header file. */\n#mesondefine HAVE_SYS_SOUNDCARD_H\n\n/* Define to 1 if you have the <sys/uio.h> header file. */\n#mesondefine HAVE_SYS_UIO_H\n\n/* Define to 1 if you have the `tdestroy' function. */\n#mesondefine HAVE_TDESTROY\n\n/* Define to 1 if you have the `tfind' function. */\n#mesondefine HAVE_TFIND\n\n/* Define to 1 if you have the <threads.h> header file. */\n#mesondefine HAVE_THREADS_H\n\n/* Defined to 1 if C11 _Thread_local storage qualifier is supported */\n#mesondefine HAVE_THREAD_LOCAL\n\n\n/* Define to 1 if you have the `timegm' function. */\n#mesondefine HAVE_TIMEGM\n\n/* Define to 1 if you have the `timespec_get' function. */\n#mesondefine HAVE_TIMESPEC_GET\n\n/* Define to 1 if you have the `uselocale' function. */\n#mesondefine HAVE_USELOCALE\n\n/* Define to 1 if you have the <valgrind/valgrind.h> header file. */\n#mesondefine HAVE_VALGRIND_VALGRIND_H\n\n/* Define to 1 if you have the `vasprintf' function. */\n#mesondefine HAVE_VASPRINTF\n\n/* Define to 1 if you have the `vmsplice' function. */\n#mesondefine HAVE_VMSPLICE\n\n/* Define to 1 if you have the `wordexp' function. */\n#mesondefine HAVE_WORDEXP\n\n/* Define to 1 if you have the <wordexp.h> header file. */\n#mesondefine HAVE_WORDEXP_H\n\n/* Define to 1 if you have the `writev' function. */\n#mesondefine HAVE_WRITEV\n\n/* Use external asm on x86. */\n#mesondefine HAVE_X86ASM\n\n/* Define to 1 if you have the <xlocale.h> header file. */\n#mesondefine HAVE_XLOCALE_H\n\n/* Define to 1 if you have zlib. */\n#mesondefine HAVE_ZLIB\n\n/* Define to 1 if you have the <zlib.h> header file. */\n#mesondefine HAVE_ZLIB_H\n\n/* Define to 1 if you have the `_lock_file' function. */\n#mesondefine HAVE__LOCK_FILE\n\n/* Define as const if the declaration of iconv() needs const. */\n#mesondefine ICONV_CONST\n\n/* Dynamic object extension */\n#mesondefine LIBEXT\n\n/* libvlc version major number */\n#mesondefine LIBVLC_ABI_MAJOR\n\n/* libvlc version micro number */\n#mesondefine LIBVLC_ABI_MICRO\n\n/* libvlc version minor number */\n#mesondefine LIBVLC_ABI_MINOR\n\n/* Define within the LibVLC source code tree. */\n#define LIBVLC_INTERNAL_\n\n/* Define to the libdir */\n#mesondefine LIBDIR\n\n/* Define to the libexecdir */\n#mesondefine LIBEXECDIR\n\n/* Define to the pkgdatadir */\n#mesondefine PKGDATADIR\n\n/* Define to the pkglibdir */\n#mesondefine PKGLIBDIR\n\n/* Define to the pkglibexecdir */\n#mesondefine PKGLIBEXECDIR\n\n/* Define to the sysdatadir */\n#mesondefine SYSDATADIR\n\n/* Define to the localedir */\n#mesondefine LOCALEDIR\n\n/* Define if you want to optimize memory usage over performance */\n#mesondefine OPTIMIZE_MEMORY\n\n/* Name of package */\n#mesondefine PACKAGE\n\n/* Define to the full name of this package. */\n#mesondefine PACKAGE_NAME\n\n/* Define to the full name and version of this package. */\n#mesondefine PACKAGE_STRING\n\n/* Define to the version of this package. */\n#mesondefine PACKAGE_VERSION\n\n/* version development string */\n#mesondefine PACKAGE_VERSION_DEV\n\n/* version extra number */\n#mesondefine PACKAGE_VERSION_EXTRA\n\n/* version major number */\n#mesondefine PACKAGE_VERSION_MAJOR\n\n/* version minor number */\n#mesondefine PACKAGE_VERSION_MINOR\n\n/* version revision number */\n#mesondefine PACKAGE_VERSION_REVISION\n\n/* Enable GNU extensions on systems that have them.  */\n#ifndef _GNU_SOURCE\n#mesondefine _GNU_SOURCE\n#endif\n\n/* Version number of package */\n#mesondefine VERSION\n\n/* Simple version string */\n#mesondefine VERSION_MESSAGE\n\n/* compiler */\n#mesondefine VLC_COMPILER\n\n/* user who ran configure */\n#mesondefine VLC_COMPILE_BY\n\n/* host which ran configure */\n#mesondefine VLC_COMPILE_HOST\n\n#ifdef _WIN32\n\n/* Define to limit the scope of <windows.h>. */\n#define WIN32_LEAN_AND_MEAN 1\n\n/* Define to 1 for Unicode (Wide Chars) APIs. */\n#mesondefine UNICODE\n\n/* Define to '0x0601' for Windows 7 APIs. */\n#mesondefine _WIN32_WINNT\n\n/* Define to 1 to force use of MinGW provided C99 *printf over msvcrt */\n#mesondefine __USE_MINGW_ANSI_STDIO\n\n#endif /* _WIN32 */\n\n/* Define WORDS_BIGENDIAN to 1 if your processor stores words with the most\n   significant byte first (like Motorola and SPARC, unlike Intel). */\n#mesondefine WORDS_BIGENDIAN\n\n/* Define to 1 if the X Window System is missing or not being used. */\n#mesondefine X_DISPLAY_MISSING\n\n/* Define if the zvbi module is built */\n// #undef ZVBI_COMPILED\n\n/* Define to 64 for large files support. */\n#define _FILE_OFFSET_BITS 64\n\n/* Alias fdatasync() to fsync() if missing. */\n#mesondefine fdatasync\n\n/* Define to the equivalent of the C99 'restrict' keyword, or to\n   nothing if this is not supported.  Do not define if restrict is\n   supported only directly.  */\n#mesondefine restrict\n\n/* Define to `sockaddr' if <sys/socket.h> does not define. */\n#mesondefine sockaddr_storage\n\n/* Define to `sa_family' if <sys/socket.h> does not define. */\n#mesondefine ss_family\n\n/* Define to `ptrdiff_t' if <sys/types.h> does not define. */\n#mesondefine ssize_t\n#mesondefine SSIZE_MAX\n\n#include <vlc_fixups.h>\n\n\n#if defined(_MSC_VER) && !defined(__clang__)\n# pragma fenv_access(off)\n# pragma fp_contract(on)\n#elif defined(__GNUC__)\n/* Not supported so far */\n#else\n# pragma STDC FENV_ACCESS OFF\n# pragma STDC FP_CONTRACT ON\n#endif\n"
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 146.328125,
          "content": "dnl Autoconf settings for vlc\n\nAC_COPYRIGHT([Copyright 1999-2025 VLC authors and VideoLAN])\n\nAC_INIT([vlc], [4.0.0-dev])\nVERSION_MAJOR=4\nVERSION_MINOR=0\nVERSION_REVISION=0\nVERSION_EXTRA=0\nVERSION_DEV=dev\n\n# libvlc .so version values\nLIBVLC_ABI_MAJOR=12\nLIBVLC_ABI_MINOR=0\nLIBVLC_ABI_MICRO=0\n\nPKGDIR=\"vlc\"\nAC_SUBST([PKGDIR])\n\nCONFIGURE_LINE=\"`echo \"$0 $ac_configure_args\" | sed -e 's/\\\\\\/\\\\\\\\\\\\\\/g'`\"\nCODENAME=\"Otto Chriek\"\nCOPYRIGHT_YEARS=\"1996-2025\"\n\nAC_CONFIG_SRCDIR([src/libvlc.c])\nAC_CONFIG_AUX_DIR([autotools])\nAC_CONFIG_MACRO_DIR([m4])\nAC_CONFIG_LIBOBJ_DIR([compat])\nAC_CANONICAL_BUILD\nAC_CANONICAL_HOST\nAC_PRESERVE_HELP_ORDER\n\nAM_INIT_AUTOMAKE([tar-ustar color-tests foreign])\nAC_CONFIG_HEADERS([config.h])\n\nAM_SILENT_RULES([yes])\nAM_MAINTAINER_MODE([enable])\n\ndnl\ndnl Check for tools\ndnl\nAC_PROG_CC\nAC_USE_SYSTEM_EXTENSIONS\nVLC_PROG_CC_C17\nAH_VERBATIM([FORTIFY_SOURCE],\n  [/* Enable compile-time and run-time bounds-checking, and some warnings,\n   without upsetting glibc 2.15+ or toolchains predefining _FORTIFY_SOURCE */\n#if !defined _FORTIFY_SOURCE && defined __OPTIMIZE__ && __OPTIMIZE__\n# define _FORTIFY_SOURCE 2\n#endif])\nAC_DEFINE([_FILE_OFFSET_BITS], 64, [Define to 64 for large files support.])\nAC_DEFINE([LIBVLC_INTERNAL_],, [Define within the LibVLC source code tree.])\n\nAC_PROG_CXX\nAC_PROG_CPP\nAC_PROG_OBJC\nAC_PROG_EGREP\nAC_PROG_MAKE_SET\nAC_PROG_INSTALL\nAM_PROG_AS\nAC_PROG_LEX([noyywrap])\nAC_PROG_YACC\n\nAC_ARG_VAR([DESKTOP_FILE_VALIDATE], [Validator for desktop entry files])\nAC_CHECK_PROGS([DESKTOP_FILE_VALIDATE], [${DESKTOP_FILE_VALIDATE} desktop-file-validate], :)\nAC_ARG_VAR([BUILDCC], [Build system C11 or C99 compiler command])\nAC_CHECK_PROGS([BUILDCC], [c17-gcc c17 c11-gcc c11 c99-gcc c99], [false])\nAS_IF([test \"$BUILDCC\" = \"false\"], [\n  AC_MSG_ERROR([Cannot find native C99 compiler: please define BUILDCC.])\n])\n\ndnl Check for compiler properties\nAC_C_CONST\nAC_C_INLINE\nAC_C_RESTRICT\nAC_LANG_PUSH([C++])\nAX_CXX_COMPILE_STDCXX_17([noext], [mandatory])\nAX_CXX_TYPEOF\nAC_LANG_POP([C++])\n\ndnl Extend the --help string at the current spot.\nAC_DEFUN([EXTEND_HELP_STRING], [m4_divert_once([HELP_ENABLE], [$1])])\n\ndnl Allow binary package maintainer to pass a custom string to avoid\ndnl cache problem\nAC_ARG_WITH([binary-version],\n    AS_HELP_STRING([--with-binary-version=STRING],\n         [To avoid plugins cache problem between binary version]),[],[])\nAS_IF([test -n \"${with_binary_version}\"],[\n    AC_DEFINE_UNQUOTED([DISTRO_VERSION],[\"${with_binary_version}\"],\n         [Binary specific version])\n])\n\ndnl Prevent clang from accepting unknown flags with a mere warning\nAX_CHECK_COMPILE_FLAG([-Werror=invalid-command-line-argument], [\n  AX_APPEND_FLAG([-Werror=invalid-command-line-argument], [CFLAGS])\n  AX_APPEND_FLAG([-Werror=invalid-command-line-argument], [CXXFLAGS])\n  AX_APPEND_FLAG([-Werror=invalid-command-line-argument], [OBJCFLAGS])\n])\nAX_CHECK_COMPILE_FLAG([-Werror=unknown-warning-option], [\n  AX_APPEND_FLAG([-Werror=unknown-warning-option], [CFLAGS])\n  AX_APPEND_FLAG([-Werror=unknown-warning-option], [CXXFLAGS])\n  AX_APPEND_FLAG([-Werror=unknown-warning-option], [OBJCFLAGS])\n])\n\ndnl\ndnl  Check the operating system\ndnl\nHAVE_WIN64=\"0\"\nHAVE_IOS=\"0\"\nHAVE_OSX=\"0\"\nHAVE_TVOS=\"0\"\nHAVE_IOS_OR_TVOS=\"0\"\nHAVE_XROS=\"0\"\nHAVE_WATCHOS=\"0\"\n\ndnl  Set x86 asm flags and defines\nX86ASMFLAGS=\"\"\ncase \"${host_cpu}\" in\n    i?86)\n    X86ASMFLAGS=\"-f elf32\"\n    X86ASMDEFS=\"-DARCH_X86_64=0\"\n        ;;\n    x86_64)\n    X86ASMFLAGS=\"-f elf64\"\n    X86ASMDEFS=\"-DARCH_X86_64=1\"\n        ;;\nesac\n\ncase \"${host_os}\" in\n  \"\")\n    SYS=unknown\n    ;;\n  linux*)\n    SYS=linux\n    CFLAGS=\"${CFLAGS} -pthread\"\n    CXXFLAGS=\"${CXXFLAGS} -pthread\"\n    ;;\n  bsdi*)\n    SYS=bsdi\n    CFLAGS=\"${CFLAGS} -pthread\"\n    CXXFLAGS=\"${CXXFLAGS} -pthread\"\n    ;;\n  freebsd*)\n    SYS=freebsd\n    CFLAGS=\"${CFLAGS} -pthread\"\n    CXXFLAGS=\"${CXXFLAGS} -pthread\"\n    CPPFLAGS=\"${CPPFLAGS} -I/usr/local/include\"\n    LDFLAGS=\"${LDFLAGS} -L/usr/local/lib\"\n    ac_cv_ld_z_defs=no\n    ;;\n  openbsd*)\n    SYS=openbsd\n    CPPFLAGS=\"${CPPFLAGS} -I/usr/local/include -I/usr/X11R6/include\"\n    LDFLAGS=\"${LDFLAGS} -L/usr/local/lib -L/usr/X11R6/lib/\"\n    ;;\n  netbsd*)\n    SYS=netbsd\n    ;;\n  dragonfly*)\n    SYS=dragonfly\n    ;;\n  darwin*)\n    SYS=darwin\n    ac_cv_func_aligned_alloc=no\n\n    dnl Work around an Xcode 11 bug, fixed in Xcode 11.3.1\n    AX_APPEND_FLAG([-fno-stack-check], [CFLAGS])\n    AX_APPEND_FLAG([-fno-stack-check], [CXXFLAGS])\n    AX_APPEND_FLAG([-fno-stack-check], [OBJCFLAGS])\n\n    case \"${host_cpu}\" in\n      i?86)\n        X86ASMFLAGS=\"-f macho32\"\n        AX_APPEND_FLAG([-DPREFIX], [X86ASMDEFS])\n      ;;\n      x86_64)\n        X86ASMFLAGS=\"-f macho64\"\n        AX_APPEND_FLAG([-DPREFIX], [X86ASMDEFS])\n      ;;\n      arm*)\n        ac_cv_c_bigendian=\"no\"\n        ac_cv_c_attribute_packed=\"no\"\n      ;;\n    esac\n\n    AX_APPEND_FLAG([-D_INTL_REDIRECT_MACROS], [CPPFLAGS])\n    AX_APPEND_FLAG([-stdlib=libc++], [CXXFLAGS])\n    AX_APPEND_FLAG([-Werror=partial-availability], [OBJCFLAGS])\n    AX_APPEND_FLAG([-Wl,-headerpad_max_install_names], [LDFLAGS])\n\n    VLC_ADD_LIBS([libvlccore],[-Wl,-framework,CoreFoundation])\n\n    dnl This is not supported when bitcode is enabled. In that case, we need\n    dnl to disable the static bank loader.\n    AC_MSG_CHECKING([if -Wl,-U is allowed])\n    VLC_SAVE_FLAGS\n    AX_APPEND_FLAG([-Wl,-U,_my_array],[LDFLAGS])\n    AC_LINK_IFELSE(\n       [AC_LANG_PROGRAM([[\n__attribute__((visibility(\"default\"))) extern int my_array[];\nint foo() { return my_array[0]; }\n]],[[return foo();]])],\n       [\n        VLC_ADD_LDFLAGS([libvlccore],[-Wl,-U,_vlc_static_modules])\n        VLC_ADD_LDFLAGS([libvlc vlc],[-Wl,-undefined,dynamic_lookup])\n        VLC_ADD_CPPFLAGS([libvlccore],[-DHAVE_DYLIB_DYNAMIC_LOOKUP=1])\n        AC_MSG_RESULT([yes])\n       ],[AC_MSG_RESULT([no])])\n    VLC_RESTORE_FLAGS\n\n    AC_EGREP_CPP(yes,\n            [#import <TargetConditionals.h>\n             #if TARGET_OS_IPHONE\n             yes\n             #endif],\n             [HAVE_IOS=\"1\"\n             HAVE_IOS_OR_TVOS=\"1\"\n             ac_cv_func_wordexp=no],\n             [HAVE_OSX=\"1\"])\n\n    AC_EGREP_CPP(yes,\n            [#import <TargetConditionals.h>\n             #if TARGET_OS_TV\n             yes\n             #endif],\n             [HAVE_TVOS=\"1\"\n             HAVE_IOS_OR_TVOS=\"1\"\n             HAVE_IOS=\"0\"\n             HAVE_OSX=\"0\"\n             HAVE_XROS=\"0\"\n             ac_cv_func_fork=no\n             ],)\n\n    AC_EGREP_CPP(yes,\n            [#import <TargetConditionals.h>\n             #if TARGET_OS_VISION\n             yes\n             #endif],\n             [HAVE_XROS=\"1\"\n             HAVE_IOS=\"0\"\n             HAVE_OSX=\"0\"\n             HAVE_TVOS=\"0\"\n             HAVE_IOS_OR_TVOS=\"0\"\n             ac_cv_func_fork=no\n             ],)\n\n    AC_EGREP_CPP(yes,\n            [#import <TargetConditionals.h>\n             #if TARGET_OS_WATCH\n             yes\n             #endif],\n             [HAVE_WATCHOS=\"1\"\n             HAVE_IOS=\"0\"\n             HAVE_OSX=\"0\"\n             HAVE_TVOS=\"0\"\n             HAVE_IOS_OR_TVOS=\"0\"\n             ac_cv_func_fork=no\n             ],)\n\n    AS_IF([test \"${HAVE_OSX}\" = \"1\"],[VLC_ADD_LIBS([libvlccore],[-Wl,-framework,CoreServices])])\n\n    dnl\n    dnl  Handle Mac OS X SDK flags\n    dnl\n    AC_ARG_WITH(macosx-sdk,\n      AS_HELP_STRING([--with-macosx-sdk=DIR],\n        [compile using the SDK in DIR]))\n    if test \"${with_macosx_sdk}\" != \"\" ; then\n        test ! -d \"${with_macosx_sdk}\" && AC_MSG_ERROR([SDK \"${with_macosx_sdk}\" not found])\n        CPP=\"${CPP} -isysroot ${with_macosx_sdk}\"\n        CC=\"${CC} -isysroot ${with_macosx_sdk}\"\n        CXX=\"${CXX} -isysroot ${with_macosx_sdk}\"\n        OBJC=\"${OBJC} -isysroot ${with_macosx_sdk}\"\n        LD=\"${LD} -syslibroot ${with_macosx_sdk}\"\n    fi\n    AC_ARG_WITH(macosx-version-min,\n      AS_HELP_STRING([--with-macosx-version-min=VERSION],\n        [compile for Mac OS X VERSION and above]))\n    if test \"${with_macosx_version_min}\" != \"\" ; then\n        CPP=\"${CPP} -mmacosx-version-min=${with_macosx_version_min}\"\n        CC=\"${CC} -mmacosx-version-min=${with_macosx_version_min}\"\n        CXX=\"${CXX} -mmacosx-version-min=${with_macosx_version_min}\"\n        OBJC=\"${OBJC} -mmacosx-version-min=${with_macosx_version_min}\"\n        LD=\"${LD} -mmacosx_version_min=${with_macosx_version_min}\"\n    fi\n    ;;\n  *mingw32* | *cygwin* | *wince* | *mingwce*)\n    dnl Force libtool to not link to (shared) libgcc_s when detecting C++ dependencies\n    dnl When doing this test with -static-libgcc it will link on (static) libgcc_eh\n    AC_LANG_PUSH(C++)\n    AX_APPEND_COMPILE_FLAGS([-static-libgcc], [CXXFLAGS], [-Werror])\n    AC_LANG_POP(C++)\n    AC_CHECK_TOOL(WINDRES, windres, :)\n    AC_CHECK_TOOL(OBJCOPY, objcopy, :)\n    AC_PREPROC_IFELSE([AC_LANG_PROGRAM(\n      [[#ifdef _WIN32_WINNT\n       # error _WIN32_WINNT already defined\n       #else\n       # include <sdkddkver.h>\n       # if defined(_WIN32_WINNT) && _WIN32_WINNT >= 0x0601\n       #  error _WIN32_WINNT toolchain default high enough\n       # endif\n       #endif\n      ]],[[;]])\n    ],[\n      AC_DEFINE([_WIN32_WINNT], [0x0601], [Define to '0x0601' for Windows 7 APIs.])\n    ])\n    AC_MSG_CHECKING([if libsynchronization is needed])\n    AC_PREPROC_IFELSE([AC_LANG_PROGRAM(\n      [[#if _WIN32_WINNT >= 0x0602\n       # error building for Win8+ and above\n       #endif\n      ]],[[;]])\n    ],[\n      AC_MSG_RESULT([no])\n    ],[\n      AC_MSG_RESULT([yes])\n      VLC_ADD_LIBS([libvlccore], [-lsynchronization])\n    ])\n    AC_DEFINE([WIN32_LEAN_AND_MEAN],, [Define to limit the scope of <windows.h>.])\n    AC_DEFINE([UNICODE], [1], [Define to 1 for Unicode (Wide Chars) APIs.])\n\n    AC_ARG_WITH(packagedir,\n      AS_HELP_STRING([--with-packagedir=DIR],\n        [output the packaged VLC files in DIR (default vlc-$PACKAGE_VERSION)]))\n    AS_IF([test \"${with_packagedir}\" != \"\"], [\n        AS_IF([test -d \"${with_packagedir}\"], [\n            PACKAGE_DIR=`cd \"${with_packagedir}\" && pwd -P`\n        ],[\n            dnl this should be an absolute path\n            PACKAGE_DIR=\"${with_packagedir}\"\n        ])\n    ], [\n        PACKAGE_DIR=`pwd -P`\"/vlc-${PACKAGE_VERSION}\"\n    ])\n    AC_SUBST([PACKAGE_DIR])\n\n    case \"${host_os}\" in\n      *mingw32*)\n        SYS=mingw32\n        ;;\n      *cygwin*)\n        dnl Check if we are using the mno-cygwin mode in which case we are\n        dnl actually dealing with a mingw32 compiler.\n        AC_EGREP_CPP(yes,\n            [#ifdef _WIN32\n             yes\n             #endif],\n            SYS=mingw32, AC_MSG_ERROR([VLC requires -mno-cygwin]))\n        ;;\n    esac\n\n    if test \"${SYS}\" = \"mingw32\"; then\n        # DEP, ASLR, NO SEH\n        LDFLAGS=\"${LDFLAGS} -Wl,--nxcompat -Wl,--no-seh -Wl,--dynamicbase\"\n\n        AC_CHECK_PROGS(U2D, [unix2dos todos], unix2dos)\n        ac_default_prefix=\"`pwd`/_win32\"\n        DESTDIR=\"`pwd`/_win32/\"\n\n        dnl\n        dnl NSIS/MSI Installer prefix and WIN64\n        dnl\n        case \"${host_cpu}\" in\n            aarch64)\n                HAVE_WIN64=\"1\"\n                WINDOWS_ARCH=\"arm64\"\n                PROGRAMFILES=\"PROGRAMFILES64\"\n                LDFLAGS=\"${LDFLAGS} -Wl,--high-entropy-va -Wl,--image-base,0x140000000\"\n            ;;\n            amd64|x86_64)\n                HAVE_WIN64=\"1\"\n                WINDOWS_ARCH=\"x64\"\n                PROGRAMFILES=\"PROGRAMFILES64\"\n                LDFLAGS=\"${LDFLAGS} -Wl,--high-entropy-va -Wl,--image-base,0x140000000\"\n                X86ASMFLAGS=\"-f win64\"\n            ;;\n            armv7)\n                WINDOWS_ARCH=\"arm\"\n                PROGRAMFILES=\"PROGRAMFILES\"\n            ;;\n            i?86)\n                WINDOWS_ARCH=\"x86\"\n                PROGRAMFILES=\"PROGRAMFILES\"\n                X86ASMFLAGS=\"-f win32\"\n                X86ASMDEFS=\"${X86ASMDEFS} -DPREFIX\"\n                AX_APPEND_FLAG([-Wl,--large-address-aware], [LDFLAGS])\n            ;;\n            *)\n                AC_MSG_ERROR([Unsupported Windows architecture ${host_cpu}])\n            ;;\n        esac\n        AC_SUBST([WINDOWS_ARCH])\n        AC_SUBST([PROGRAMFILES])\n\n    fi\n    ;;\n  *nto*)\n    SYS=nto\n    ;;\n  solaris*)\n    SYS=solaris\n    ;;\n  hpux*)\n    SYS=hpux\n    ;;\n  *os2*)\n    SYS=os2\n    LDFLAGS=\"${LDFLAGS} -Zomf -Zbin-files -Zargs-wild -Zhigh-mem\"\n    AC_LIBOBJ([freeaddrinfo])\n    AC_LIBOBJ([gai_strerror])\n    AC_CHECK_FUNCS([if_nametoindex])\n    X86ASMFLAGS=\"-f aout\"\n    X86ASMDEFS=\"-DARCH_X86_64=0 -DPREFIX\"\n    ;;\n  *emscripten*)\n    SYS=emscripten\n    # tdestroy() is a GNU extension\n    CFLAGS=\"${CFLAGS} -pthread -D_GNU_SOURCE\"\n    CXXFLAGS=\"${CXXFLAGS} -pthread\"\n    ac_cv_func_if_nameindex=yes\n    ac_cv_header_sys_shm_h=no\n    ;;\n  *)\n    SYS=\"${host_os}\"\n    ;;\nesac\n\nANDROID_API=17\ndnl Vendor-specific configuration\ncase \"${host_os}\" in\n  linux-android*)\n    VENDOR=android\n    AC_MSG_CHECKING([Check Android API version])\n    ANDROID_API=\"`echo ${host_os} | tr -c -d '[[:digit:]]'`\"\n    AC_MSG_RESULT([${ANDROID_API}])\n\n    dnl GLESv2 and EGL are provided by android NDK without .pc files\n    GLES2_LIBS=\"-lGLESv2\"\n    GLES2_CFLAGS=\" \"\n    EGL_LIBS=\"-lEGL\"\n    EGL_CFLAGS=\" \"\n\n    AS_IF([test -n \"$ANDROID_API\" -a \"$ANDROID_API\" -lt \"26\"],[\n        ac_cv_header_sys_shm_h=no\n    ])\n\n    dnl Those functions and headers are not functional on android, use vlc_fixups instead\n    ac_cv_header_search_h=no\n    ac_cv_func_tdestroy=no\n    ac_cv_func_tfind=no\n    ;;\nesac\n\ndnl WinRT\nAC_ARG_ENABLE([winstore_app],\n     AS_HELP_STRING([--enable-winstore-app],\n                    [Build targetted for Windows Store apps (default disabled)]))\n\nvlc_winstore_app=0\nAS_IF([test \"${SYS}\" = \"mingw32\"],[\n  LIBCOM=\"-lole32 -loleaut32\"\n  AC_LANG_PUSH(C++)\n  AX_CHECK_COMPILE_FLAG([-fno-strict-aliasing], [\n        LIBCOMCXXFLAGS=\"-fno-strict-aliasing\"\n    ],[\n        # fno-strict-aliasing is necessary for WRL and IID_PPV_ARGS to work safely\n        # MSVC doesn't have this option but doesn't do pointer aliasing, so it\n        # should work too\n        AC_MSG_ERROR([-fno-strict-aliasing is necessary for Windows C++ modules])\n    ])\n  AC_LANG_POP(C++)\n  AS_IF([test \"${enable_winstore_app}\" = \"yes\"], [\n    vlc_winstore_app=1\n    LIBCOM=\"-loleaut32\"\n    LDFLAGS=\"${LDFLAGS} -lwindowsappcompat\"\n    VLC_ADD_LIBS([libvlccore], [-lruntimeobject])\n    AC_LIBOBJ([gai_strerror])\n  ],[])\n  AC_SUBST([LIBCOM])\n  AC_SUBST([LIBCOMCXXFLAGS])\n  ])\n\nvlc_build_pdb=0\nAC_ARG_ENABLE([pdb],\n     AS_HELP_STRING([--enable-pdb],\n                    [Build PDB files for windows targets (default off)]))\nAS_IF([test \"${SYS}\" = \"mingw32\"],[\n  AS_IF([test \"${enable_pdb}\" = \"yes\"], [\n    vlc_build_pdb=1\n    AX_APPEND_FLAG([-g -gcodeview],[CPPFLAGS])\n    LDFLAGS=\"${LDFLAGS} -Wl,-pdb=\"\n  ],[])\n])\n\nAM_CONDITIONAL([HAVE_FREEBSD], [test \"${SYS}\" = \"freebsd\"])\nAM_CONDITIONAL([HAVE_LINUX],   [test \"${SYS}\" = \"linux\"])\nAM_CONDITIONAL([HAVE_ANDROID], [test \"${VENDOR}\" = \"android\"])\nAM_CONDITIONAL([HAVE_OS2],     [test \"${SYS}\" = \"os2\"])\n\nAM_CONDITIONAL([HAVE_DARWIN],  [test \"${SYS}\" = \"darwin\"])\nAM_CONDITIONAL([HAVE_IOS],     [test \"${HAVE_IOS}\" = \"1\"])\nAM_CONDITIONAL([HAVE_OSX],     [test \"${HAVE_OSX}\" = \"1\"])\nAM_CONDITIONAL([HAVE_TVOS],    [test \"${HAVE_TVOS}\" = \"1\"])\nAM_CONDITIONAL([HAVE_IOS_OR_TVOS], [test \"${HAVE_IOS_OR_TVOS}\" = \"1\"])\nAM_CONDITIONAL([HAVE_XROS],    [test \"${HAVE_XROS}\" = \"1\"])\nAM_CONDITIONAL([HAVE_WATCHOS],    [test \"${HAVE_WATCHOS}\" = \"1\"])\n\nAM_CONDITIONAL([HAVE_LIBANL],  [test \"${HAVE_LIBANL}\" = \"1\"])\n\nAM_CONDITIONAL([HAVE_WIN32],   [test \"${SYS}\" = \"mingw32\"])\nAM_CONDITIONAL([HAVE_WIN64],   [test \"${HAVE_WIN64}\" = \"1\"]) dnl Only used for the packaging\nAM_CONDITIONAL([HAVE_WINSTORE], [test \"$vlc_winstore_app\" = \"1\"])\nAM_CONDITIONAL([HAVE_WIN32_DESKTOP], [test \"${SYS}\" = \"mingw32\" -a \"$vlc_winstore_app\" = \"0\"])\nAM_CONDITIONAL([ENABLE_PDB],   [test \"$vlc_build_pdb\" = \"1\"])\n\ndnl Use nasm/yasm only on x86\nAC_CHECK_PROGS(X86ASM, [nasm yasm])\nAM_CONDITIONAL([HAVE_X86ASM], [test -n \"${X86ASM}\" && test -n \"${X86ASMFLAGS}\"])\nAM_COND_IF([HAVE_X86ASM], [\n  AC_DEFINE([HAVE_X86ASM], [1], [Use external asm on x86.])\n])\n\ndnl  Because DOLT is not able to handle --with-pic\ndnl  correctly, manually add -DPIC to the options for\ndnl  nasm / yasm here.\nAS_IF([test \"$with_pic\" = \"yes\"], [X86ASMDEFS=\"${X86ASMDEFS} -DPIC\"])\n\nAC_SUBST([X86ASMFLAGS])\nAC_SUBST([X86ASMDEFS])\n\nAM_CONDITIONAL([HAVE_EMSCRIPTEN], [test \"${SYS}\" = \"emscripten\"])\n\ndnl\ndnl Sadly autoconf does not think about testing foo.exe when ask to test\ndnl for program foo on win32\ncase \"${build_os}\" in\n    cygwin|msys|mingw32)\n        ac_executable_extensions=\".exe\"\n        BUILDEXEEXT=\".exe\"\n    ;;\n    os2*)\n        BUILDEXEEXT=\".exe\"\n    ;;\n    *)\n    ;;\nesac\nAC_SUBST([BUILDEXEEXT])\n\ndnl\ndnl  Check for the contrib directory\ndnl\nAC_ARG_WITH(contrib,\n  AS_HELP_STRING([--with-contrib[=DIR]],\n    [search for 3rd party libraries in DIR/include and DIR/lib])\n)\nAC_MSG_CHECKING([for 3rd party libraries path])\nAS_IF([test -z \"${with_contrib}\" || test \"${with_contrib}\" = \"yes\"], [\n  CONTRIB_DIR=\"${srcdir}/contrib/${host}\"\n  AS_IF([test ! -d \"${CONTRIB_DIR}\"], [\n    echo \"${CONTRIB_DIR} not found\" >&AS_MESSAGE_LOG_FD\n    CONTRIB_DIR=\"${srcdir}/contrib/`$CC -dumpmachine`\"\n    AS_IF([test ! -d \"${CONTRIB_DIR}\"], [\n      echo \"${CONTRIB_DIR} not found\" >&AS_MESSAGE_LOG_FD\n      CONTRIB_DIR=\"\"\n      AC_MSG_RESULT([not found])\n    ])\n  ])\n], [\n  AS_IF([test \"${with_contrib}\" != \"no\"], [\n    CONTRIB_DIR=\"${with_contrib}\"\n    AC_MSG_RESULT([${CONTRIB_DIR}])\n  ], [\n    CONTRIB_DIR=\"\"\n    AC_MSG_RESULT([disabled])\n  ])\n])\nAS_IF([test -n \"${CONTRIB_DIR}\"], [\n  AS_IF([test -d \"${CONTRIB_DIR}/lib\"],[\n    SRC_CONTRIB_DIR=\"${CONTRIB_DIR}\"\n    CONTRIB_DIR=`cd \"${CONTRIB_DIR}\" && pwd -P`\n    AC_MSG_RESULT([${CONTRIB_DIR} from ${SRC_CONTRIB_DIR}])\n  ], [\n    echo \"${CONTRIB_DIR}/lib not found\" >&AS_MESSAGE_LOG_FD\n    CONTRIB_DIR=\"\"\n    AC_MSG_RESULT([not usable])\n  ])\n\n])\nAS_IF([test -n \"${CONTRIB_DIR}\"], [\n  CPPFLAGS=\"${CPPFLAGS} -I${CONTRIB_DIR}/include\"\n  CFLAGS=\"${CFLAGS} -I${CONTRIB_DIR}/include\"\n  CXXFLAGS=\"${CXXFLAGS} -I${CONTRIB_DIR}/include\"\n  OBJCFLAGS=\"${OBJCFLAGS} -I${CONTRIB_DIR}/include -F${CONTRIB_DIR} -F${CONTRIB_DIR}/Frameworks\"\n  PKG_CONFIG_PATH=\"${CONTRIB_DIR}/lib/pkgconfig:${CONTRIB_DIR}/share/pkgconfig:${PKG_CONFIG_PATH}\"\n  case \"${build_os}\" in\n      mingw32)\n          export PKG_CONFIG_PATH=\"$(cygpath -mp \"${PKG_CONFIG_PATH}\")\"\n      ;;\n      *)\n          export PKG_CONFIG_PATH=\"${PKG_CONFIG_PATH}\"\n      ;;\n  esac\n  LDFLAGS=\"${LDFLAGS} -L${CONTRIB_DIR}/lib\"\n\n  AS_IF([test -z \"$LUAC\"], [\n    AC_MSG_CHECKING([if contribs provide luac])\n    AS_IF([test -x \"${CONTRIB_DIR}/../bin/${host_alias}-luac${BUILDEXEEXT}\"], [\n      LUAC=\"${CONTRIB_DIR}/../bin/${host_alias}-luac${BUILDEXEEXT}\"\n      AC_MSG_RESULT([yes])\n    ],[\n      AC_MSG_RESULT([no])\n    ])\n  ])\n\n  AS_IF([test \"${SYS}\" = \"darwin\"], [\n    export LD_LIBRARY_PATH=\"${CONTRIB_DIR}/lib:$LD_LIBRARY_PATH\"\n    export DYLD_LIBRARY_PATH=\"${CONTRIB_DIR}/lib:$DYLD_LIBRARY_PATH\"\n  ])\n], [\n  AS_IF([test -n \"${with_contrib}\" && test \"${with_contrib}\" != \"no\"], [\n    AC_MSG_ERROR([Third party libraries not found!])\n  ])\n])\nAC_SUBST([CONTRIB_DIR])\n\ndnl Add extras/tools to the PATH\nTOOLS_DIR=\"${srcdir}/extras/tools/build/bin\"\nAS_IF([test -d \"${TOOLS_DIR}\"], [\n    TOOLS_DIR=\"$(cd \"${TOOLS_DIR}\" && pwd)\"\n    export PATH=\"${TOOLS_DIR}:$PATH\"\n])\n\ndnl\ndnl  Libtool\ndnl  It's very bad, but our former custom system was worst\ndnl  -- Courmisch\ndnl\n\ndnl override platform specific check for dependent libraries\ndnl otherwise libtool linking of shared libraries will\ndnl fail on anything other than pass_all.\nAC_CACHE_VAL(lt_cv_deplibs_check_method,\n    [lt_cv_deplibs_check_method=pass_all])\n\nLT_INIT([dlopen win32-dll shared disable-static])\nLT_LANG([C++])\nLT_LANG([Windows Resource])\n\nDOLT\n\nlt_cv_deplibs_check_method=pass_all\n\nAS_IF([test \"${enable_shared}\" = \"no\" -a \"${enable_vlc}\" != \"no\"], [\n  AC_MSG_ERROR([VLC is based on plugins. Shared libraries cannot be disabled.])\n])\n\ndnl\ndnl Gettext stuff\ndnl\nAM_GNU_GETTEXT_VERSION([0.21])\nAM_GNU_GETTEXT([external], [need-formatstring-macros])\n\ndnl\ndnl Iconv stuff\ndnl\nAM_ICONV\n\ndnl\ndnl checks for mingw\nAS_IF([test \"${SYS}\" = \"mingw32\"], [\n\n    dnl Check if this is a UCRT build\n    AC_MSG_CHECKING([whether compiling with Universal C Runtime])\n    win_ucrt_build=no\n    AC_PREPROC_IFELSE([AC_LANG_SOURCE([\n#include <crtdefs.h>\n#if !(defined(_UCRT) || (__MSVCRT_VERSION__ >= 0x1400) || (__MSVCRT_VERSION__ >= 0xE00 && __MSVCRT_VERSION__ < 0x1000))\n# error This is NOT a UCRT build\n#endif\n    ])], [\n        AC_MSG_RESULT([yes])\n        win_ucrt_build=yes\n    ], [\n        AC_MSG_RESULT([no])\n    ])\n\nAC_PREPROC_IFELSE([AC_LANG_SOURCE([\n#if !defined(__MINGW32__)\n# error Not compiling with mingw\n#endif\n    ])], [\n\ndnl Check for broken versions of mingw-runtime compatability library\n    AC_MSG_CHECKING(for broken mingw-runtime)\n    AC_PREPROC_IFELSE([AC_LANG_SOURCE([\n#include <_mingw.h>\n#if defined(__MINGW64_VERSION_MAJOR)\n# if __MINGW64_VERSION_MAJOR < 6\n#  error Update your mingw-w64! This one is too old.\n# endif\n#else\n# error You cannot compile with Mingw. Use Mingw-w64!\n#endif\n    ])], [\n        AC_MSG_RESULT([ok])\n    ], [\n        AC_MSG_RESULT([present])\n        AC_MSG_ERROR([LibVLC requires Mingw-w64 version 6.0 or higher!])\n    ])\n\n    AS_IF([test \"${win_ucrt_build}\" = \"no\"], [\n        dnl force use of mingw provided c99 *printf over msvcrt\n        CPPFLAGS=\"${CPPFLAGS} -D__USE_MINGW_ANSI_STDIO=1\"\n    ],[\n        dnl for UCRT build we use the standard compatibility define of UCRT\n        CPPFLAGS=\"${CPPFLAGS} -D__USE_MINGW_ANSI_STDIO=0\"\n    ])\n\n    ], [\n        AC_MSG_RESULT([Not compiling with mingw])\n    ])\n\n    dnl Check for fnative-struct or mms-bitfields support for mingw32\n    AX_CHECK_COMPILE_FLAG([-mms-bitfields], [\n        AX_APPEND_FLAG([-mms-bitfields], [CFLAGS])\n        AX_APPEND_FLAG([-mms-bitfields], [CXXFLAGS])\n        # Check for the warning flag without \"-Wno-\", GCC accepts\n        # -Wno-<anything> for unsupported warnings, which can trigger\n        # other warnings instead.\n        AX_CHECK_COMPILE_FLAG([-Wincompatible-ms-struct], [\n            AX_APPEND_FLAG([-Wno-incompatible-ms-struct], [CFLAGS])\n            AX_APPEND_FLAG([-Wno-incompatible-ms-struct], [CXXFLAGS])\n        ])\n    ], [\n        AX_CHECK_COMPILE_FLAG([-fnative-struct], [\n            AX_APPEND_FLAG([-fnative-struct], [CFLAGS])\n            AX_APPEND_FLAG([-fnative-struct], [CXXFLAGS])\n        ])\n    ])\n])\n\n\ndnl\ndnl Buggy glibc prevention. Purposedly not cached.\ndnl See sourceware.org bugs 5058 and 5443.\ndnl Ubuntu alone has 20 bug numbers for this...\ndnl\nAC_MSG_CHECKING(for buggy GNU/libc versions)\nAC_PREPROC_IFELSE([AC_LANG_SOURCE([\n#include <limits.h>\n#if defined (__GLIBC__) && (__GLIBC__ == 2) \\\n  && (__GLIBC_MINOR__ >= 5) && (__GLIBC_MINOR__ <= 7)\n# error GNU/libc with dcgettext killer bug!\n#endif\n])], [\n  AC_MSG_RESULT([not present])\n], [\n  AC_MSG_RESULT([found])\n  AS_IF([test \"${enable_nls}\" != \"no\"], [\n    AC_MSG_ERROR([Buggy GNU/libc (version 2.5 - 2.7) present. VLC would crash; there is no viable\nwork-around for this. Check with your distribution vendor on how to update the\nglibc run-time. Alternatively, build with --disable-nls.])\n  ])\n])\n\ndnl Plugin compilation stuff\n\nVLC_LIBRARY_SUFFIX\n\ndnl Check for system libs needed\nneed_libc=false\n\ndnl Check for usual libc functions\nAC_CHECK_FUNCS([accept4 dup3 fcntl flock fstatat fstatvfs fork getmntent_r getenv getpwuid_r isatty memalign mkostemp mmap open_memstream newlocale pipe2 posix_fadvise setlocale uselocale wordexp])\nAC_REPLACE_FUNCS([aligned_alloc asprintf atof atoll dirfd fdopendir flockfile fsync getdelim getpid gmtime_r lfind lldiv localtime_r memrchr nrand48 poll posix_memalign readv recvmsg rewind sendmsg setenv strcasecmp strcasestr strdup strlcpy strndup strnlen strnstr strsep strtof strtok_r strtoll swab tdestroy tfind timegm timespec_get strverscmp vasprintf writev])\nAC_REPLACE_FUNCS([gettimeofday])\nAC_CHECK_FUNC(fdatasync,,\n  [AC_DEFINE(fdatasync, fsync, [Alias fdatasync() to fsync() if missing.])\n])\n\nVLC_REPLACE_DECL([realpath], [#include <stdlib.h>])\n\n# Windows CE does not have strcoll()\nAC_FUNC_STRCOLL\n\ndnl Check for non-standard system calls\ncase \"$SYS\" in\n  \"linux\")\n    AC_CHECK_FUNCS([eventfd vmsplice sched_getaffinity recvmmsg memfd_create])\n    AC_REPLACE_FUNCS([getauxval])\n    ;;\n  \"mingw32\")\n    AC_CHECK_FUNCS([_lock_file])\n    ;;\nesac\n\nAH_BOTTOM([#include <vlc_fixups.h>])\n\ndnl Check for struct timespec\nAC_CHECK_TYPES([struct timespec],,,\n[#include <time.h>])\n\ndnl Check for max_align_t\nAC_CHECK_TYPES([max_align_t],,,\n[#include <stddef.h>])\n\ndnl Checks for socket stuff\nVLC_SAVE_FLAGS\nSOCKET_LIBS=\"\"\nAS_IF([test \"${SYS}\" = \"mingw32\"], [\n  SOCKET_LIBS=\"-lws2_32 -liphlpapi\"\n],[\n  AC_SEARCH_LIBS(connect, [socket], [\n    AS_IF([test \"$ac_cv_search_connect\" != \"none required\"], [\n      SOCKET_LIBS=\"$ac_cv_search_connect\"\n    ])\n  ])\n])\n\nAC_SEARCH_LIBS([inet_pton], [nsl], [\n AS_IF([test \"$ac_cv_search_inet_pton\" != \"none required\"], [\n    SOCKET_LIBS=\"$ac_cv_search_inet_pton $SOCKET_LIBS\"\n  ])\n],, [${SOCKET_LIBS}])\n\nLIBS=\"${LIBS} ${SOCKET_LIBS}\"\nAC_LINK_IFELSE([\n    AC_LANG_PROGRAM([#ifdef _WIN32\n        #include <ws2tcpip.h>\n        #include <windows.h>\n        #else\n        #include <sys/socket.h>\n        #include <arpa/inet.h>\n        #endif], [\n        char dst[[sizeof(struct in_addr)]];\n        inet_pton(AF_INET, \"127.0.0.1\", dst);\n    ])],[AC_DEFINE([HAVE_INET_PTON],[1],[Define to 1 if you have inet_pton function])],[AC_LIBOBJ([inet_pton])])\nAC_CHECK_TYPES([struct if_nameindex],,,[#include <net/if.h>])\nAC_CHECK_FUNCS([if_nameindex])\nVLC_RESTORE_FLAGS\nAC_SUBST([SOCKET_LIBS])\n\ndnl Check for socklen_t\nAH_TEMPLATE(socklen_t, [Define to `int' if <sys/socket.h> does not define.])\nAC_CACHE_CHECK([for socklen_t in sys/socket.h],\nac_cv_type_socklen_t,\n[AC_COMPILE_IFELSE([AC_LANG_PROGRAM([\n[#include <sys/types.h>\n#ifdef _WIN32\n# include <winsock2.h>\n# include <ws2tcpip.h>\n#else\n# include <sys/socket.h>\n#endif]], [[socklen_t len; len = 0;]])],\nac_cv_type_socklen_t=yes,\nac_cv_type_socklen_t=no)])\nAS_IF([test \"$ac_cv_type_socklen_t\" = no], [\n  AC_COMPILE_IFELSE([\n    AC_LANG_PROGRAM([[\n#include <sys/types.h>\n#ifdef _WIN32\n# include <winsock2.h>\n# include <ws2tcpip.h>\n#else\n# include <sys/socket.h>\n#endif\n    ]], [[\n_Generic(getpeername, int (*)(int, struct sockaddr *, int *): 0);\n    ]])\n  ], AC_DEFINE(socklen_t, int), AC_DEFINE(socklen_t, unsigned int))\n])\n\ndnl Check for struct sockaddr_storage\nAH_TEMPLATE(sockaddr_storage, [Define to `sockaddr' if <sys/socket.h> does not define.]) dnl ` (fix VIM syntax highlight\nAH_TEMPLATE(ss_family, [Define to `sa_family' if <sys/socket.h> does not define.]) dnl ` (fix VIM syntax highlight\nAC_CACHE_CHECK([for struct sockaddr_storage], ac_cv_struct_sockaddr_storage,\n  [AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <sys/types.h>\n     #if defined( _WIN32 )\n     # include <winsock2.h>\n     #else\n     # include <sys/socket.h>\n     #endif]], [[struct sockaddr_storage addr;]])],\n     [ac_cv_struct_sockaddr_storage=yes],\n     [ac_cv_struct_sockaddr_storage=no])])\nAS_IF([test \"${ac_cv_struct_sockaddr_storage}\" = no], [\n  AC_DEFINE(sockaddr_storage, sockaddr)\n  AC_DEFINE(ss_family, sa_family)\n])\n\ndnl FreeBSD has a gnugetopt library for this:\nGNUGETOPT_LIBS=\"\"\nAC_CHECK_FUNC(getopt_long,, [\n  AC_CHECK_LIB([gnugetopt],[getopt_long], [\n    GNUGETOPT_LIBS=\"-lgnugetopt\"\n  ])\n])\nAC_SUBST([GNUGETOPT_LIBS])\n\nAC_CHECK_LIB([m], [cos], [\n  LIBM=\"-lm\"\n], [\n  LIBM=\"\"\n])\nAC_SUBST([LIBM])\n\nAC_CHECK_LIB([m], [lrintf], [\n  AC_DEFINE(HAVE_LRINTF, 1, [Define to 1 if you have the lrintf function])\n  VLC_ADD_LIBS([skins2],[-lm])\n])\nAC_CHECK_LIB([m], [nanf],\n  AC_DEFINE(HAVE_NANF, 1, [Define to 1 if you have the NANF function])\n)\nAC_CHECK_LIB([m], [sincos], [\n  AC_DEFINE(HAVE_SINCOS, 1, [Define to 1 if you have the sincos function.])\n], [\n  AC_LIBOBJ([sincos])\n])\n\nAC_MSG_CHECKING([broken qsort_r prototype])\nAC_COMPILE_IFELSE([AC_LANG_PROGRAM([#include <stdlib.h>\n\n_Static_assert(_Generic((qsort_r),\n    void (*)(void *, size_t, size_t, void *,\n             int (*)(void *, const void *, const void *)) : 1, default: 0),\n    \"Bad prototype not matched\");\n])], [\n  AC_MSG_RESULT([broken])\n  AC_DEFINE([HAVE_BROKEN_QSORT_R], 1, [Defined to 1 if the qsort_r() prototype contradicts the upcoming POSIX standard.])\n], [\n  AC_MSG_RESULT([no])\n])\n\nAC_MSG_CHECKING([_Thread_local support])\nAC_COMPILE_IFELSE([AC_LANG_SOURCE([_Thread_local int foo = 0;\n                   int main() {}])], [\n    AC_MSG_RESULT([ok])\n    AC_DEFINE(HAVE_THREAD_LOCAL, 1, [Defined to 1 if C11 _Thread_local storage qualifier is supported])\n],[ AC_MSG_RESULT([no])])\n\ndnl __STDC_NO_THREADS__ can't be trusted on some platforms.\ndnl check for its availability explicitely\nAC_CHECK_HEADERS([threads.h])\n\nAC_CHECK_LIB([anl],[getaddrinfo_a],[])\n\ndnl Check for dynamic plugins\nLIBDL=\"\"\nhave_dynamic_objects=\"no\"\nVLC_SAVE_FLAGS\nAC_SEARCH_LIBS(dlsym, [dl svld], [\n  AS_IF([test \"$ac_cv_search_dlsym\" != \"none required\"], [\n    LIBDL=\"$ac_cv_search_dlsym\"\n  ])\n  have_dynamic_objects=\"yes\"\n])\nVLC_RESTORE_FLAGS\n\n# Windows\nAS_IF([test \"${SYS}\" = \"mingw32\"], [\n  LIBDL=\"\"\n  have_dynamic_objects=\"yes\" #assume we can use shared objects\n])\n\nAC_ARG_WITH([libfuzzer],\n    AS_HELP_STRING([--with-libfuzzer=DIR],\n        [use libFuzzer library from DIR and triggers sanitize coverage (default disabled)]),\n     [],\n     [with_libfuzzer=no])\nAS_VAR_IF(with_libfuzzer, no, [], [\n    enable_shared=no\n    enable_static=yes\n    enable_vlc=no\n])\nAM_CONDITIONAL([HAVE_LIBFUZZER], [test \"${with_libfuzzer}\" != \"no\"])\n\nAS_IF([test \"${enable_shared}\" = \"no\"], [\n  have_dynamic_objects=no\n])\nAM_CONDITIONAL([HAVE_DYNAMIC_PLUGINS], [test \"${have_dynamic_objects}\" != \"no\"])\n\nAC_SUBST([LIBDL])\n\nAS_IF([test \"${SYS}\" != \"mingw32\"], [\n  AC_SEARCH_LIBS([clock_nanosleep], [rt pthread], [\n    AS_IF([test \"$ac_cv_search_clock_nanosleep\" != \"none required\"], [\n      LIBRT=\"$ac_cv_search_clock_nanosleep\"\n    ])\n  ], [\n    AC_SEARCH_LIBS([nanosleep], [rt pthread posix4], [\n      AS_IF([test \"$ac_cv_search_nanosleep\" != \"none required\"], [\n        LIBRT=\"$ac_cv_search_nanosleep\"\n      ])\n    ])\n  ])\n])\nAC_SUBST([LIBRT])\n\ndnl  Check for clock_* functions, needs to be done here,\ndnl  after the -lrt check\nAC_REPLACE_FUNCS([clock_gettime clock_nanosleep clock_getres])\n\ndnl\ndnl Check for headers\ndnl\n\nAC_CHECK_HEADER([stdbit.h],, [\n  CPPFLAGS=\"${CPPFLAGS} -I\\$(top_srcdir)/compat/stdbit\"\n])\nAC_CHECK_HEADER([stdckdint.h],, [\n  CPPFLAGS=\"${CPPFLAGS} -I\\$(top_srcdir)/compat/stdckdint\"\n])\n\ndnl  POSIX\nAC_CHECK_HEADERS([arpa/inet.h poll.h pthread.h search.h sys/shm.h sys/socket.h sys/uio.h wordexp.h])\nAC_CHECK_HEADERS([net/if.h], [], [],\n[\n#include <sys/types.h>\n#include <sys/socket.h>\n])\nAC_CHECK_HEADER([syslog.h], [have_syslog=\"yes\"], [have_syslog=\"no\"])\nAM_CONDITIONAL([HAVE_SYSLOG], [test \"$have_syslog\" = \"yes\"])\n\ndnl  BSD\nAC_CHECK_HEADERS([netinet/tcp.h netinet/udplite.h sys/param.h sys/mount.h])\n\ndnl  GNU/Linux\nAC_CHECK_HEADERS([features.h getopt.h linux/dccp.h linux/magic.h sys/auxv.h sys/eventfd.h])\n\ndnl  MacOS\nAC_CHECK_HEADERS([xlocale.h])\n\ndnl Check for struct pollfd\nAC_CHECK_TYPES([struct pollfd],,,\n[#include <sys/types.h>\n#if HAVE_POLL_H\n# include <poll.h>\n#elif defined (_WIN32)\n# include <winsock2.h>\n#endif\n])\n\ndnl Check if C++ headers define locale_t\nAC_LANG_PUSH(C++)\nAC_CACHE_CHECK([if C++ headers define locale_t],\n  [ac_cv_cxx_locale_t],\n  [ac_cv_cxx_locale_t=no\n   AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[#include <locale>]], [[locale_t loc;]])],\n                        [ac_cv_cxx_locale_t=yes],[])])\nif test \"${ac_cv_cxx_locale_t}\" != \"no\"; then\n  AC_DEFINE(HAVE_CXX_LOCALE_T, 1, Define to 1 if C++ headers define locale_t)\nfi\nAC_LANG_POP(C++)\n\ndnl LP64 and LLP64 architectures had better define ssize_t by themselves...\nAH_TEMPLATE(ssize_t, [Define to `ptrdiff_t' if <stddef.h> does not define.]) dnl ` (fix VIM syntax highlight\nAC_CHECK_TYPE(ssize_t,, [\n  AC_DEFINE(ssize_t, ptrdiff_t)\n  AC_DEFINE([SSIZE_MAX], [PTRDIFF_MAX], [Max possible value of the ssize_t type])\n])\n\ndnl It seems that autoconf detects pkg-config only during the first\ndnl PKG_CHECK_MODULES from configure.ac - which makes sense. But in our case,\ndnl it is nested within a conditional block, so it was not working right.\nPKG_PROG_PKG_CONFIG()\n\ndnl On some OS we need static linking\nAS_IF([test -n \"${PKG_CONFIG}\" ],[\n    AS_IF([test \"${SYS}\" = \"mingw32\" -o \"${SYS}\" = \"darwin\" -o \"${SYS}\" = \"os2\" -o \"${SYS}\" = \"emscripten\" ],[\n        PKG_CONFIG=\"${PKG_CONFIG} --static\"\n    ])\n])\n\n\ndnl\ndnl Check for zlib.h and -lz if available\ndnl\nhave_zlib=\"no\"\nAC_CHECK_HEADERS([zlib.h], [\n  AC_CHECK_LIB([z], [inflate], [\n    have_zlib=yes\n    AC_DEFINE([HAVE_ZLIB], 1, [Define to 1 if you have zlib.])\n    LIBZ=\"-lz\"\n  ])\n])\nAC_SUBST([LIBZ])\nAM_CONDITIONAL([HAVE_ZLIB], [ test \"${have_zlib}\" = \"yes\" ])\n\n\ndnl\ndnl Domain name i18n support via GNU libidn\ndnl\nPKG_CHECK_MODULES([IDN], [libidn], [\n  have_libidn=\"yes\"\n  AC_DEFINE([HAVE_IDN], 1, [Define to 1 if you have GNU libidn.])\n], [\n  have_libidn=\"no\"\n])\n\n\ndnl Check for dbus\nAC_ARG_ENABLE([dbus],\n  AS_HELP_STRING([--enable-dbus],\n    [compile D-Bus message bus support (default enabled)]))\nhave_dbus=\"no\"\nAS_IF([test \"${enable_dbus}\" != \"no\"], [\n  PKG_CHECK_MODULES(DBUS, [dbus-1 >= 1.6.0], [\n    have_dbus=\"yes\"\n  ], [\n    AS_IF([test -n \"${enable_dbus}\"], [\n      AC_MSG_ERROR([${DBUS_PKG_ERRORS}.])\n    ], [\n      AC_MSG_WARN([${DBUS_PKG_ERRORS}.])\n    ])\n  ])\n])\nAM_CONDITIONAL([HAVE_DBUS], [test \"${have_dbus}\" = \"yes\"])\n\n\ndnl Check for systemd\nPKG_CHECK_MODULES([SYSTEMD], [libsystemd], [\n  have_systemd=\"yes\"\n], [\n  AC_MSG_WARN([${SYSTEMD_PKG_ERRORS}.])\n])\nAM_CONDITIONAL([HAVE_SYSTEMD], [test \"${have_systemd}\" = \"yes\"])\n\ndnl Check for sdbus\n\nhave_sdbus=\"no\"\nAS_IF([test \"${have_systemd}\" = \"yes\"], [\nSDBUS_CFLAGS=\"${SYSTEMD_CFLAGS} -DSDBUS_HEADER='<systemd/sd-bus.h>'\"\n  SDBUS_LIBS=\"${SYSTEMD_LIBS}\"\n  have_sdbus=\"yes\"\n])\n\ndnl Check for elogind\nAC_ARG_ENABLE([elogind],\n  AS_HELP_STRING([--disable-elogind], [ignore elogind as a sd-bus provider]), [],  [enable_elogind=\"yes\"])\n\nAS_IF([test \"${have_sdbus}\" != \"yes\" && test \"${enable_elogind}\" != \"no\"], [\n  PKG_CHECK_MODULES([ELOGIND], [libelogind], [\n      have_elogind=\"yes\"\n      SDBUS_CFLAGS=\"${ELOGIND_CFLAGS} -DSDBUS_HEADER='<elogind/sd-bus.h>'\"\n      SDBUS_LIBS=\"${ELOGIND_LIBS}\"\n      have_sdbus=\"yes\"\n    ], [\n      AC_MSG_WARN([${ELOGIND_PKG_ERRORS}.])\n    ])\n])\n\ndnl Check for basu\nAC_ARG_ENABLE([basu],\n  AS_HELP_STRING([--disable-basu], [ignore basu as a sd-bus provider]), [], [enable_basu=\"yes\"])\n\nAS_IF([test \"${have_sdbus}\" != \"yes\" && test \"${enable_basu}\" != \"no\"], [\n  PKG_CHECK_MODULES([BASU], [basu], [\n      have_basu=\"yes\"\n      SDBUS_CFLAGS=\"${BASU_CFLAGS} -DSDBUS_HEADER='<basu/sd-bus.h>'\"\n      SDBUS_LIBS=\"${BASU_LIBS}\"\n      have_sdbus=\"yes\"\n    ], [\n      AC_MSG_WARN([${BASU_PKG_ERRORS}.])\n    ])\n])\n\nAS_IF([test \"$have_sdbus\" = \"yes\" ], [\n  AC_SUBST([SDBUS_CFLAGS])\n  AC_SUBST([SDBUS_LIBS])\n], [\n  AC_MSG_WARN([no sd-bus provider found.])\n])\n\nAM_CONDITIONAL([HAVE_SDBUS], [test \"$have_sdbus\" = \"yes\"])\n\nEXTEND_HELP_STRING([Optimization options:])\ndnl\ndnl  Compiler warnings\ndnl\n\nAX_APPEND_COMPILE_FLAGS([-Wall -Wextra -Wsign-compare -Wundef -Wpointer-arith -Wvolatile-register-var -Wformat -Wformat-security -Wduplicated-branches -Wduplicated-cond], [CFLAGS])\nAC_LANG_PUSH(C++)\nAX_APPEND_COMPILE_FLAGS([-Wall -Wextra -Wsign-compare -Wundef -Wpointer-arith -Wvolatile-register-var -Wformat -Wformat-security -Wduplicated-branches -Wduplicated-cond], [CXXFLAGS])\nAC_LANG_POP(C++)\n\ndnl -Werror-implicit-function-declaration is used for the if_nametoindex detection with winstore\nAX_APPEND_COMPILE_FLAGS([-Wbad-function-cast -Wwrite-strings -Wmissing-prototypes -Werror-implicit-function-declaration -Winit-self -Wlogical-op -Wshadow=local -Wmultistatement-macros], [CFLAGS])\nAX_APPEND_COMPILE_FLAGS([-pipe], [CFLAGS])\n\nAC_ARG_ENABLE([extra_checks],\n     AS_HELP_STRING([--enable-extra-checks],\n                    [Turn some warnings into compilation error (default disabled)]),,\n                    [enable_extra_checks=\"no\"])\nAS_IF([test \"${enable_extra_checks}\" = \"yes\"], [\n    AX_APPEND_COMPILE_FLAGS([-Werror=missing-field-initializers -Werror=format -Werror=incompatible-pointer-types -Werror=restrict -Werror=int-conversion -Werror=implicit-int -Werror=return-mismatch -Werror=declaration-missing-parameter-type], [CFLAGS])\n    AC_LANG_PUSH(C++)\n    AX_APPEND_COMPILE_FLAGS([-Werror=missing-field-initializers -Werror=format], [CXXFLAGS])\n    AC_LANG_POP(C++)\n])\n\ndnl UWP forbidden checks\nAS_IF([test \"${SYS}\" = \"mingw32\"], [\n  AC_MSG_CHECKING(for if_nametoindex availability)\n  AC_COMPILE_IFELSE([AC_LANG_PROGRAM(\n      [[#include <windows.h>\n        #include <iphlpapi.h>\n        static void test (void) {\n          if_nametoindex(\"\");\n        }\n      ]],[[;]])\n    ],[\n      AC_MSG_RESULT([present])\n      AC_DEFINE([HAVE_IF_NAMETOINDEX], [1], [Define to 1 if you have if_nametoindex function])\n    ],[\n      AC_MSG_RESULT([not present])\n    ])\n])\n\ndnl\ndnl  Debugging mode\ndnl\nAC_ARG_ENABLE([debug],\n  AS_HELP_STRING([--disable-debug],\n    [disable run-time assertions (default enabled)]),,\n  [enable_debug=\"yes\"])\nAH_TEMPLATE(NDEBUG,\n            [Define to 1 if debug code should NOT be compiled])\nAS_IF([test \"${enable_debug}\" != \"no\"], [\n  AC_CHECK_HEADERS([valgrind/valgrind.h])\n], [\n  AC_DEFINE(NDEBUG)\n])\n\ndnl\ndnl  Profiling\ndnl\nAC_ARG_ENABLE([gprof],\n  AS_HELP_STRING([--enable-gprof],[profile with gprof (default disabled)]),,\n  [enable_gprof=\"no\"])\nAS_IF([test \"${enable_gprof}\" != \"no\"], [\n  CFLAGS=\"${CFLAGS} -pg\"\n  CXXFLAGS=\"${CXXFLAGS} -pg\"\n  OBJCFLAGS=\"${OBJCFLAGS} -pg\"\n  LDFLAGS=\"${LDFLAGS} -pg\"\n])\n\nAC_ARG_ENABLE([cprof],\n  AS_HELP_STRING([--enable-cprof],[profile with cprof (default disabled)]),,\n  [enable_cprof=\"no\"])\nAS_IF([test \"${enable_gprof}\" != \"no\"], [\n  CFLAGS=\"${CFLAGS} -finstrument-functions\"\n  CXXFLAGS=\"${CXXFLAGS} -finstrument-functions\"\n  OBJCFLAGS=\"${OBJCFLAGS} -finstrument-functions\"\n  LDFLAGS=\"${LDFLAGS} -finstrument-functions\"\n])\n\ndnl\ndnl  Test coverage\ndnl\nAC_ARG_ENABLE([coverage],\n  AS_HELP_STRING([--enable-coverage],\n    [build for test coverage (default disabled)]),,\n  [enable_coverage=\"no\"])\nAS_IF([test \"${enable_coverage}\" != \"no\"], [\n  CFLAGS=\"-fprofile-arcs -ftest-coverage ${CFLAGS}\"\n  CXXFLAGS=\"-fprofile-arcs -ftest-coverage ${CXXFLAGS}\"\n  LDFLAGS=\"-lgcov ${LDFLAGS}\"\n])\n\nAS_IF([test \"${SYS}\" != \"mingw32\" -a \"${SYS}\" != \"os2\"], [\n  VLC_SAVE_FLAGS\n  CFLAGS=\"${CFLAGS} -fvisibility=hidden\"\n  CXXFLAGS=\"${CXXFLAGS} -fvisibility=hidden\"\n  OBJCFLAGS=\"${OBJCFLAGS} -fvisibility=hidden\"\n  AC_CACHE_CHECK([if $CC accepts -fvisibility=hidden],\n                 [ac_cv_c_visibility_hidden], [\n    AC_COMPILE_IFELSE([AC_LANG_PROGRAM()], [\n      ac_cv_c_visibility_hidden=yes\n    ], [\n      ac_cv_c_visibility_hidden=no\n    ])\n  ])\n  AS_IF([test \"${ac_cv_c_visibility_hidden}\" = \"no\"], [VLC_RESTORE_FLAGS])\n])\n\ndnl\ndnl Sanitizer flags\ndnl\nAC_ARG_WITH([sanitizer],\n    AS_HELP_STRING([--with-sanitizer=(address/memory/undefined/thread)],\n        [build with sanitizer flags (default disabled)]),\n     [],\n     [with_sanitizer=no])\n\nAS_VAR_IF(with_sanitizer, no, [], [\n    AX_CHECK_COMPILE_FLAG([-fsanitize=${with_sanitizer}], [\n        AX_APPEND_FLAG([-fsanitize=${with_sanitizer}])\n        AX_APPEND_FLAG([-fsanitize=${with_sanitizer}], [CXXFLAGS])\n        AX_APPEND_FLAG([-fsanitize=${with_sanitizer}], [LDFLAGS])\n    ], [\n        AC_MSG_ERROR([\"-fsanitize=${with_sanitizer} not supported!\"])\n    ])\n    AX_APPEND_FLAG([-g])\n    AX_APPEND_FLAG([-g], [CXXFLAGS])\n\n    AS_IF([test -z \"${with_sanitizer##*address*}\" ], [\n       AX_APPEND_COMPILE_FLAGS([-fsanitize-address-use-after-scope -fno-omit-frame-pointer -fsanitize=pointer-compare -fsanitize=pointer-subtract])\n       AX_APPEND_COMPILE_FLAGS([-fsanitize-address-use-after-scope -fno-omit-frame-pointer -fsanitize=pointer-compare -fsanitize=pointer-subtract], [CXXFLAGS])\n    ])\n])\n\ndnl\ndnl  Enable/disable optimizations\ndnl\nAC_ARG_ENABLE([optimizations],\n  AS_HELP_STRING([--disable-optimizations],\n    [disable compiler optimizations (default enabled)]),,\n  [enable_optimizations=\"yes\"])\n\ndnl Check for various optimization flags\nAS_IF([test \"${enable_optimizations}\" != \"no\"], [\n\n  dnl -O3 only in production builds\n  AS_IF([test \"${enable_debug}\" = \"no\"], [\n    VLC_SAVE_FLAGS\n    CFLAGS=\"${CFLAGS} -O3\"\n    CXXFLAGS=\"${CXXFLAGS} -O3\"\n    OBJCFLAGS=\"${OBJCFLAGS} -O3\"\n    AC_CACHE_CHECK([if $CC accepts -O3],  [ac_cv_c_o3], [\n      AC_COMPILE_IFELSE([AC_LANG_PROGRAM()], [\n        ac_cv_c_o3=yes\n      ], [\n        ac_cv_c_o3=no\n      ])\n    ])\n    AS_IF([test \"${ac_cv_c_o3}\" = \"no\"], [VLC_RESTORE_FLAGS])\n  ])\n\n  dnl Check for fast maths\n  AX_APPEND_COMPILE_FLAGS([-fno-math-errno -funsafe-math-optimizations -fno-rounding-math -fno-signaling-nans -fcx-limited-range], [CFLAGS])\n  AX_APPEND_COMPILE_FLAGS([-fno-math-errno -funsafe-math-optimizations -fno-rounding-math -fno-signaling-nans -fcx-limited-range], [CXXFLAGS])\n\nAH_BOTTOM([\n#if defined(_MSC_VER) && !defined(__clang__)\n# pragma fenv_access(off)\n# pragma fp_contract(on)\n#elif defined(__GNUC__)\n/* Not supported so far */\n#else\n# pragma STDC FENV_ACCESS OFF\n# pragma STDC FP_CONTRACT ON\n#endif\n])\n\n  dnl Check for -funroll-loops\n  VLC_SAVE_FLAGS\n  CFLAGS=\"${CFLAGS} -funroll-loops\"\n  CXXFLAGS=\"${CXXFLAGS} -funroll-loops\"\n  OBJCFLAGS=\"${OBJCFLAGS} -funroll-loops\"\n  AC_CACHE_CHECK([if $CC accepts -funroll-loops], [ac_cv_c_unroll_loops], [\n    AC_COMPILE_IFELSE([AC_LANG_PROGRAM()], [\n      ac_cv_c_unroll_loops=yes\n    ], [\n      ac_cv_c_unroll_loops=no\n    ])\n  ])\n  AS_IF([test \"${ac_cv_c_unroll_loops}\" = \"no\"], [VLC_RESTORE_FLAGS])\n\n  AS_IF([test \"$enable_debug\" = \"no\"], [\n    dnl Check for -fomit-frame-pointer\n    VLC_SAVE_FLAGS\n    CFLAGS=\"${CFLAGS} -fomit-frame-pointer\"\n    CXXFLAGS=\"${CXXFLAGS} -fomit-frame-pointer\"\n    OBJCFLAGS=\"${OBJCFLAGS} -fomit-frame-pointer\"\n    AC_CACHE_CHECK([if $CC accepts -fomit-frame-pointer],\n      [ac_cv_c_omit_frame_pointer], [\n      AC_COMPILE_IFELSE([AC_LANG_PROGRAM()], [\n        ac_cv_c_omit_frame_pointer=yes\n      ], [\n        ac_cv_c_omit_frame_pointer=no\n      ])\n    ])\n    AS_IF([test \"${ac_cv_c_omit_frame_pointer}\" = \"no\"], [VLC_RESTORE_FLAGS])\n  ])\n\n])\n\nAC_ARG_ENABLE([ssp],\n  AS_HELP_STRING([--disable-ssp],\n  [disable stack smashing protection (default enabled for optimized builds)]), [],\n  [enable_ssp=\"yes\"])\n\nAS_IF([test \"${enable_ssp}\" != \"no\" -a \"${enable_optimizations}\" != \"no\"], [\n  VLC_SAVE_FLAGS\n  AX_APPEND_COMPILE_FLAGS([-fstack-protector-strong])\n  AX_APPEND_COMPILE_FLAGS([-fstack-protector-strong], [CXXFLAGS])\n  dnl Win32 requires linking to ssp for stack-protection\n  AS_IF([test \"${SYS}\" = \"mingw32\"], [\n      LDFLAGS=\"${LDFLAGS} -lssp\"\n      AC_CACHE_CHECK([if linker supports stack protectors], [ac_cv_ld_ssp], [\n        AC_LINK_IFELSE([AC_LANG_PROGRAM([[#include <stdio.h>]], [[char buf[100]; fgets(buf, sizeof(buf), stdin);]])],[\n          ac_cv_ld_ssp=\"yes\"\n        ], [\n          ac_cv_ld_ssp=\"no\"\n        ])\n      ])\n      AS_IF([test \"${ac_cv_ld_ssp}\" = \"no\"], [VLC_RESTORE_FLAGS])\n  ])\n])\n\nVLC_SAVE_FLAGS\nLDFLAGS=\"${LDFLAGS} -Wl,-Bsymbolic\"\nAC_CACHE_CHECK([if linker supports -Bsymbolic], [ac_cv_ld_bsymbolic], [\n  AC_LINK_IFELSE([AC_LANG_PROGRAM([[]], [[]])],[\n    ac_cv_ld_bsymbolic=\"-Wl,-Bsymbolic\"\n  ], [\n    ac_cv_ld_bsymbolic=\"\"\n  ])\n])\nVLC_RESTORE_FLAGS\nSYMBOLIC_LDFLAGS=\"${ac_cv_ld_bsymbolic}\"\nAC_SUBST([SYMBOLIC_LDFLAGS])\n\nVLC_SAVE_FLAGS\nLDFLAGS=\"${LDFLAGS} -Wl,-z,defs\"\nAC_CACHE_CHECK([if linker supports -z,defs], [ac_cv_ld_z_defs], [\n  AC_LINK_IFELSE([AC_LANG_PROGRAM([[]], [[]])],[\n    ac_cv_ld_z_defs=\"yes\"\n  ], [\n    ac_cv_ld_z_defs=\"no\"\n  ])\n])\nAS_IF([test \"${ac_cv_ld_z_defs}\" = \"no\"], [VLC_RESTORE_FLAGS])\n\ndnl Check for __attribute__((packed))\nAC_CACHE_CHECK([for __attribute__((packed))],\n  [ac_cv_c_attribute_packed],\n  [ac_cv_c_attribute_packed=no\n   AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[]],\n                        [[struct __attribute__((__packed__)) foo { int a; } b; (void)b;]])],\n                     [ac_cv_c_attribute_packed=yes],[])])\nif test \"${ac_cv_c_attribute_packed}\" != \"no\"; then\n  AC_DEFINE(HAVE_ATTRIBUTE_PACKED, 1, Support for __attribute__((packed)) for structs)\nfi\n\nWIN32_PATH_CMD=\nAS_IF([test \"${SYS}\" = \"mingw32\"], [\n    AC_MSG_CHECKING([how to transform windows pathes])\n    win32_path_cmd=no\n    for win_path in \"cygpath\" \"wslpath\" \"wine winepath\"\n    do\n      ac_try=\"$win_path -u c: >/dev/null\"\n      (eval \"$ac_try\") 2>&5\n      ac_status=$?\n      if test $ac_status = 0; then\n        win32_path_cmd=$win_path\n        break\n      fi\n    done\n    AS_IF([test \"${win32_path_cmd}\" != \"no\"],[\n      WIN32_PATH_CMD=${win32_path_cmd}\n      AC_MSG_RESULT([using '${win32_path_cmd}'])\n    ],[\n      AC_MSG_RESULT([not possible])\n    ])\n])\n\nAC_SUBST([WIN32_PATH_CMD])\n\nAC_ARG_WITH([wix],\n    AS_HELP_STRING([--with-wix=DIR], [location of WIX binary (default: contribs)])\n)\nAS_IF([test -z \"${with_wix}\"], [\n    AS_IF([test -n \"${CONTRIB_DIR}\"], [\n        with_wix=\"${CONTRIB_DIR}/bin\"\n    ])\n])\nAS_IF([test \"${with_wix}\" != \"no\"], [\n    WIXPATH=\"${with_wix}\"\n])\nAC_SUBST([WIXPATH])\n\ndnl\ndnl  Check the CPU\ndnl\ncase \"${host_cpu}\" in\n  \"\")\n    ARCH=unknown\n    ;;\n  armv*)\n    ARCH=\"arm\"\n    host_cpu=\"arm\"\n    ;;\n  *)\n    ARCH=\"${host_cpu}\"\n    ;;\nesac\n\ndnl Check for backtrace() support\nAC_CHECK_HEADERS([execinfo.h])\nAC_CHECK_FUNCS([backtrace],, [\n  AC_CHECK_LIB([execinfo], [backtrace], [\n    LIBEXECINFO=\"-lexecinfo\"])\n])\nAC_SUBST(LIBEXECINFO)\n\n\ndnl\ndnl  default modules\ndnl\nALIASES=\"${ALIASES} cvlc rvlc\"\n\ndnl\ndnl  Accelerated modules\ndnl\n\ndnl  Check for fully working SSE2 intrinsics\ndnl  We need support for -msse2, we need <emmintrin.h>, and we also need a\ndnl  working compiler (http://gcc.gnu.org/bugzilla/show_bug.cgi?id=23963)\nAC_ARG_ENABLE([sse],\n  AS_HELP_STRING([--disable-sse],\n    [disable SSE (2-4) optimizations (default auto)]),, [\n  case \"${host_cpu}\" in\n    i?86|x86_64)\n      enable_sse=yes\n      ;;\n    *)\n      enable_sse=no\n      ;;\n  esac\n])\nhave_sse2=\"no\"\nAS_IF([test \"${enable_sse}\" != \"no\"], [\n  ARCH=\"${ARCH} sse2\"\n\n  VLC_SAVE_FLAGS\n  CFLAGS=\"${CFLAGS} -msse2\"\n  AC_CACHE_CHECK([if $CC groks SSE2 intrinsics], [ac_cv_c_sse2_intrinsics], [\n    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([\n[#include <emmintrin.h>\n#include <stdint.h>\nuint64_t frobzor;]], [\n[__m128i a, b, c;\na = b = c = _mm_set1_epi64((__m64)frobzor);\na = _mm_slli_epi16(a, 3);\na = _mm_adds_epi16(a, b);\nc = _mm_srli_epi16(c, 8);\nc = _mm_slli_epi16(c, 3);\nb = _mm_adds_epi16(b, c);\na = _mm_unpacklo_epi8(a, b);\nfrobzor = (uint64_t)_mm_movepi64_pi64(a);]])], [\n      ac_cv_c_sse2_intrinsics=yes\n    ], [\n      ac_cv_c_sse2_intrinsics=no\n    ])\n  ])\n  VLC_RESTORE_FLAGS\n  AS_IF([test \"${ac_cv_c_sse2_intrinsics}\" != \"no\"], [\n    AC_DEFINE(HAVE_SSE2_INTRINSICS, 1, [Define to 1 if SSE2 intrinsics are available.])\n  ])\n\n  VLC_SAVE_FLAGS\n  AC_CACHE_CHECK([if $CC groks SSE2 inline assembly], [ac_cv_sse2_inline], [\n    AC_COMPILE_IFELSE([AC_LANG_PROGRAM(,[[\nvoid *p;\nasm volatile(\"punpckhqdq %%xmm1,%%xmm2\"::\"r\"(p):\"xmm1\", \"xmm2\");\n]])\n    ], [\n      ac_cv_sse2_inline=yes\n    ], [\n      ac_cv_sse2_inline=no\n    ])\n  ])\n  AS_IF([test \"${ac_cv_sse2_inline}\" != \"no\" -a \"${SYS}\" != \"solaris\"], [\n    AC_DEFINE(CAN_COMPILE_SSE2, 1, [Define to 1 if SSE2 inline assembly is available.])\n    have_sse2=\"yes\"\n  ])\n\n  # SSE3\n  AC_CACHE_CHECK([if $CC groks SSE3 inline assembly], [ac_cv_sse3_inline], [\n    AC_COMPILE_IFELSE([AC_LANG_PROGRAM(,[[\nvoid *p;\nasm volatile(\"movsldup %%xmm1,%%xmm0\"::\"r\"(p):\"xmm0\", \"xmm1\");\n]])\n    ], [\n      ac_cv_sse3_inline=yes\n    ], [\n      ac_cv_sse3_inline=no\n    ])\n  ])\n\n  AS_IF([test \"${ac_cv_sse3_inline}\" != \"no\"], [\n    AC_DEFINE(CAN_COMPILE_SSE3, 1, [Define to 1 if SSE3 inline assembly is available.]) ])\n\n  # SSSE3\n  AC_CACHE_CHECK([if $CC groks SSSE3 inline assembly], [ac_cv_ssse3_inline], [\n    AC_COMPILE_IFELSE([AC_LANG_PROGRAM(,[[\nvoid *p;\nasm volatile(\"pabsw %%xmm0,%%xmm0\"::\"r\"(p):\"xmm0\");\n]])\n    ], [\n      ac_cv_ssse3_inline=yes\n    ], [\n      ac_cv_ssse3_inline=no\n    ])\n  ])\n\n  AS_IF([test \"${ac_cv_ssse3_inline}\" != \"no\"], [\n    AC_DEFINE(CAN_COMPILE_SSSE3, 1, [Define to 1 if SSSE3 inline assembly is available.]) ])\n\n  # SSE4.1\n  AC_CACHE_CHECK([if $CC groks SSE4.1 inline assembly],\n                 [ac_cv_sse4_1_inline], [\n    AC_COMPILE_IFELSE([AC_LANG_PROGRAM(,[[\nvoid *p;\nasm volatile(\"pmaxsb %%xmm1,%%xmm0\"::\"r\"(p):\"xmm0\", \"xmm1\");\n]])\n    ], [\n      ac_cv_sse4_1_inline=yes\n    ], [\n      ac_cv_sse4_1_inline=no\n    ])\n  ])\n\n  AS_IF([test \"${ac_cv_sse4_1_inline}\" != \"no\"], [\n    AC_DEFINE(CAN_COMPILE_SSE4_1, 1, [Define to 1 if SSE4_1 inline assembly is available.]) ])\n\n  VLC_RESTORE_FLAGS\n])\nAM_CONDITIONAL([HAVE_SSE2], [test \"$have_sse2\" = \"yes\"])\n\ndnl  Check for fully working AVX2 intrinsics\ndnl  We need support for -mavx[2], we need <immintrin.h>, and we also need a\ndnl  working compiler (http://gcc.gnu.org/bugzilla/show_bug.cgi?id=23963)\nAC_ARG_ENABLE([avx],\n  AS_HELP_STRING([--disable-avx],\n    [disable AVX (1-2) optimizations (default auto)]),, [\n  case \"${host_cpu}\" in\n    i?86|x86_64)\n      enable_avx=yes\n      ;;\n    *)\n      enable_avx=no\n      ;;\n  esac\n])\nhave_avx2=\"no\"\nAS_IF([test \"${enable_avx}\" != \"no\"], [\n  ARCH=\"${ARCH} avx avx2\"\n\n  VLC_SAVE_FLAGS\n  CFLAGS=\"${CFLAGS} -mavx2\"\n  AC_CACHE_CHECK([if $CC groks AVX2 intrinsics], [ac_cv_c_avx2_intrinsics], [\n    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([\n[#include <immintrin.h>\n#include <stdint.h>\nuint64_t frobzor;]], [\n[__m256i a, b, c;\na = b = c = _mm256_set1_epi64x((int64_t)frobzor);\na = _mm256_slli_epi16(a, 3);\na = _mm256_adds_epi16(a, b);\nc = _mm256_srli_epi16(c, 8);\nc = _mm256_slli_epi16(c, 3);\nb = _mm256_adds_epi16(b, c);\na = _mm256_unpacklo_epi8(a, b);\nfrobzor = (uint64_t)_mm256_extract_epi64(a, 0);]])], [\n      ac_cv_c_avx2_intrinsics=yes\n    ], [\n      ac_cv_c_avx2_intrinsics=no\n    ])\n  ])\n  VLC_RESTORE_FLAGS\n  AS_IF([test \"${ac_cv_c_avx2_intrinsics}\" != \"no\"], [\n    AC_DEFINE(HAVE_AVX2_INTRINSICS, 1, [Define to 1 if AVX2 intrinsics are available.])\n  ])\n\n  VLC_SAVE_FLAGS\n  CFLAGS=\"${CFLAGS} -mavx\"\n  AC_CACHE_CHECK([if $CC groks AVX inline assembly], [ac_cv_avx_inline], [\n    AC_COMPILE_IFELSE([AC_LANG_PROGRAM(,[[\nvoid *p;\nasm volatile(\"vxorps %%ymm1,%%ymm2,%%ymm3\"::\"r\"(p):\"ymm1\", \"ymm2\", \"ymm3\");\n]])\n    ], [\n      ac_cv_avx_inline=yes\n    ], [\n      ac_cv_avx_inline=no\n    ])\n  ])\n\n  AS_IF([test \"${ac_cv_avx_inline}\" != \"no\" -a \"${SYS}\" != \"solaris\"], [\n    AC_DEFINE(CAN_COMPILE_AVX, 1, [Define to 1 if AVX inline assembly is available.])\n  ])\n\n  AC_CACHE_CHECK([if $CC groks AVX2 inline assembly], [ac_cv_avx2_inline], [\n    AC_COMPILE_IFELSE([AC_LANG_PROGRAM(,[[\nvoid *p;\nasm volatile(\"vpunpckhqdq %%ymm1,%%ymm2,%%ymm3\"::\"r\"(p):\"ymm1\", \"ymm2\", \"ymm3\");\n]])\n    ], [\n      ac_cv_avx2_inline=yes\n    ], [\n      ac_cv_avx2_inline=no\n    ])\n  ])\n  VLC_RESTORE_FLAGS\n  AS_IF([test \"${ac_cv_avx2_inline}\" != \"no\" -a \"${SYS}\" != \"solaris\"], [\n    AC_DEFINE(CAN_COMPILE_AVX2, 1, [Define to 1 if AVX2 inline assembly is available.])\n    have_avx2=\"yes\"\n  ])\n])\nAM_CONDITIONAL([HAVE_AVX2], [test \"$have_avx2\" = \"yes\"])\n\n\nAC_ARG_ENABLE([neon],\n  AS_HELP_STRING([--disable-neon],\n    [disable ARM NEON optimizations (default auto)]),, [\n  case \"${host_cpu}\" in\n    \"arm\")\n      enable_neon=\"32\"\n      ;;\n    \"aarch64\")\n      enable_neon=\"64\"\n      ;;\n    *)\n      enable_neon=\"no\"\n      ;;\n  esac\n])\nAS_IF([test \"${enable_neon}\" != \"no\"], [\n  VLC_SAVE_FLAGS\n  AC_CACHE_CHECK([if $CCAS groks ARM NEON assembly], [ac_cv_arm_neon], [\n    AS_IF([test \"${enable_neon}\" != \"64\"], [\n      CFLAGS=\"${CFLAGS} -mfpu=neon -mhard-float\"\n      AC_COMPILE_IFELSE([\n        AC_LANG_PROGRAM(,[[\nasm volatile(\"vqmovun.s64 d0, q1\":::\"d0\");\n]])\n      ], [\n        ac_cv_arm_neon=\"32\"\n      ], [\n        ac_cv_arm_neon=\"no\"\n      ])\n    ], [\n      CFLAGS=\"${CFLAGS} -march=armv8-a+simd\"\n      AC_COMPILE_IFELSE([\n        AC_LANG_PROGRAM(,[[\nasm volatile(\"uhadd v0.8b, v0.8b, v1.8b\":::\"v0\");\n]])\n      ], [\n        ac_cv_arm_neon=\"64\"\n      ], [\n        ac_cv_arm_neon=\"no\"\n      ])\n    ])\n  ])\n  VLC_RESTORE_FLAGS\n])\nAM_CONDITIONAL([HAVE_NEON], [test \"${ac_cv_arm_neon}\" = \"32\"])\nAM_CONDITIONAL([HAVE_ARM64], [test \"${ac_cv_arm_neon}\" = \"64\"])\n\nAC_ARG_ENABLE([sve],\n  AS_HELP_STRING([--disable-sve],\n    [disable ARM SVE optimizations (default auto)]),, [\n  AS_IF([test \"${host_cpu}\" = \"aarch64\"], [enable_sve=\"yes\"] ,[enable_sve=\"no\"])\n])\nAS_IF([test \"${enable_sve}\" != \"no\"], [\n  VLC_SAVE_FLAGS\n  CFLAGS=\"${CFLAGS} -march=armv8-a+sve\"\n  AC_CACHE_CHECK([if $CCAS groks ARM SVE assembly], [ac_cv_arm_sve], [\n    AC_COMPILE_IFELSE([\n      AC_LANG_PROGRAM(,[[\nasm volatile(\"ptrue p0.s\" ::: \"p0\");\n]])\n    ], [\n      ac_cv_arm_sve=\"yes\"\n    ], [\n      ac_cv_arm_sve=\"no\"\n    ])\n  ])\n  VLC_RESTORE_FLAGS\n])\nAM_CONDITIONAL([HAVE_SVE], [test \"${ac_cv_arm_sve}\" = \"yes\"])\n\nAC_ARG_ENABLE([branch-protection],\n  AS_HELP_STRING([--disable-branch-protection],\n    [disable AArch64 branch protection (default auto)]),, [\n  AS_IF([test \"${host_cpu}\" = \"aarch64\"],\n    [enable_branch_protection=\"yes\"], [enable_branch_protection=\"no\"])\n])\nAS_IF([test \"${enable_branch_protection}\" != \"no\"], [\n  AX_CHECK_COMPILE_FLAG([-mbranch-protection=standard], [\n    AX_APPEND_FLAG([-mbranch-protection=standard], [CPPFLAGS])\n  ])\n])\n\n\nAC_ARG_ENABLE([altivec],\n  AS_HELP_STRING([--disable-altivec],\n    [disable AltiVec optimizations (default auto)]),, [\n  AS_CASE(\"${host_cpu}\", [powerpc*],\n        [enable_altivec=yes], [enable_altivec=no])\n])\nhave_altivec=\"no\"\nAS_IF([test \"${enable_altivec}\" = \"yes\"], [\n  ARCH=\"${ARCH} altivec\";\n  VLC_SAVE_FLAGS\n  AC_CACHE_CHECK([if \\$CC groks AltiVec C extensions],\n  [ac_cv_c_altivec], [\n    CFLAGS=\"${CFLAGS} -maltivec\"\n    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([\n[#include <altivec.h>]], [\n[vec_ld(0, (unsigned char *)0);]])], [\n      ac_cv_c_altivec=\"-maltivec\"\n    ], [\n      ac_cv_c_altivec=\"no\"\n    ])\n  ])\n  VLC_RESTORE_FLAGS\n  AS_IF([test \"${ac_cv_c_altivec}\" != \"no\"], [\n    have_altivec=\"yes\"\n  ])\n  AC_CHECK_HEADERS([altivec.h])\n])\nAM_CONDITIONAL([HAVE_ALTIVEC], [test \"$have_altivec\" = \"yes\"])\n\n\nAC_ARG_ENABLE([rvv],\n  AS_HELP_STRING([--disable-rvv],\n    [disable RISC-V Vector extension (default auto)]),, [\n  AS_CASE([${host_cpu}], [riscv*], [enable_rvv=\"yes\"], [enable_rvv=\"no\"])\n])\nAS_IF([test \"${enable_rvv}\" != \"no\"], [\n  AC_CACHE_CHECK([if $CCAS groks RISC-V V assembly], [ac_cv_riscv_v], [\n    AC_COMPILE_IFELSE([\n      AC_LANG_PROGRAM(,[[\nasm volatile(\".option arch, +v\\nvsetvli x0, x0, e8\");\n]])\n    ], [\n      ac_cv_riscv_v=\"yes\"\n    ], [\n      ac_cv_riscv_v=\"no\"\n    ])\n  ])\n])\nAM_CONDITIONAL([HAVE_RVV], [test \"${ac_cv_riscv_v}\" = \"yes\"])\n\n\ndnl\ndnl  Memory usage\ndnl\nAC_ARG_ENABLE([optimize-memory],\n  AS_HELP_STRING([--enable-optimize-memory],\n    [optimize memory usage over performance]))\nif test \"${enable_optimize_memory}\" = \"yes\"; then\n  AC_DEFINE(OPTIMIZE_MEMORY, 1, Define if you want to optimize memory usage over performance)\nfi\n\ndnl\ndnl Allow running as root (useful for people running on embedded platforms)\ndnl\nAC_ARG_ENABLE([run-as-root],\n  AS_HELP_STRING([--enable-run-as-root],\n    [allow running VLC as root (default disabled)]))\nAS_IF([test \"${enable_run_as_root}\" = \"yes\"],[\n    AC_DEFINE(ALLOW_RUN_AS_ROOT, 1,\n              [Define to 1 to allow running VLC as root (uid 0).])\n])\n\ndnl\ndnl Stream output\ndnl\nAC_ARG_ENABLE([sout],\n  AS_HELP_STRING([--disable-sout],\n    [disable streaming output (default enabled)]))\nAS_IF([test \"${enable_sout}\" != \"no\"], [\n  AC_DEFINE(ENABLE_SOUT, 1, [Define to 1 for stream output support.])\n])\nAM_CONDITIONAL([ENABLE_SOUT], [test \"${enable_sout}\" != \"no\"])\n\ndnl\ndnl Rust Modules\ndnl\nAC_ARG_WITH([rust-std],\n    AS_HELP_STRING([--with-rust-std[=ARGS]],\n                   [Specify how to find Rust standard library. If ARGS is build-std=STDARGS, it forwards parameters to Cargo as -Z build-std=STDARGS. (default auto)]))\nAS_CASE([\"${with_rust_std}\"],\n        [build-std=*],  [cargo_build_std_args=-Z\"${with_rust_std}\"],\n        [auto],         [cargo_build_std_args=\"\"],\n        [\"\"],           [cargo_build_std_args=\"\"],\n        [AC_MSG_ERROR([Unknown option ${with_rust_std} for --with-rust-std=])])\nAC_SUBST([CARGO_BUILD_STD], [${cargo_build_std_args}])\n\nAC_ARG_ENABLE([rust],\n  AS_HELP_STRING([--enable-rust],\n    [enable building Rust modules (default disabled)]))\nAS_IF([test \"${enable_rust}\" = \"yes\"],[\n\n  rust_target_flags=\n  AS_IF([test \"$vlc_winstore_app\" = \"1\"],[\n    rust_target_flags=\"${rust_target_flags} --uwp\"\n  ])\n  AS_IF([test -n \"$(eval ${CC} --version 2>/dev/null | grep 'clang')\"],[\n    rust_target_flags=\"${rust_target_flags} --llvm\"\n  ])\n  AS_IF([test \"${HAVE_TVOS}\" = \"1\"],[\n    rust_target_flags=\"${rust_target_flags} --darwin=tvos\"\n  ],[\n    AS_IF([test \"${HAVE_WATCHOS}\" = \"1\"],[\n      rust_target_flags=\"${rust_target_flags} --darwin=watchos\"\n    ],[\n      AS_IF([test \"${HAVE_XROS}\" = \"1\"],[\n        rust_target_flags=\"${rust_target_flags} --darwin=xros\"\n      ],[\n        AS_IF([test \"${HAVE_IOS}\" = \"1\"],[\n          rust_target_flags=\"${rust_target_flags} --darwin=ios\"\n        ],[\n          AS_IF([test \"${HAVE_OSX}\" = \"1\"],[\n            rust_target_flags=\"${rust_target_flags} --darwin=macos\"\n          ])\n        ])\n      ])\n    ])\n  ])\n\n  AC_MSG_CHECKING([Rust target])\n  rust_target=$(${srcdir}/contrib/src/get-rust-target.sh \\\n    ${rust_target_flags} \\\n    ${host})\n  ac_status=$?\n  AS_IF([test $ac_status = 0],[\n    AC_MSG_RESULT([${rust_target}])\n    AC_SUBST([RUST_TARGET], [\"${rust_target}\"])\n  ],[\n    AC_MSG_RESULT([unsupported])\n    AC_MSG_ERROR([Unsupported Rust target for ${host}])\n  ])\n\n  AS_IF([test -z \"${CARGO_HOME}\"], [\n    dnl CARGO_HOME default to the home folder\n    dnl https://doc.rust-lang.org/cargo/guide/cargo-home.html\n    CARGO_HOME=\"${HOME}/.cargo\"\n  ])\n\n  AC_PATH_PROGS(CARGO, [cargo], [no], [${CARGO_HOME}/bin:${PATH}])\n  AS_IF([test \"$CARGO\" = \"no\"],[\n    AC_MSG_ERROR([cargo not found. cargo is required to build Rust modules])\n  ])\n])\nAM_CONDITIONAL([HAVE_RUST], [test \"${enable_rust}\" = \"yes\"])\n\ndnl Lua modules\nAC_ARG_ENABLE([lua],\n  AS_HELP_STRING([--disable-lua],\n    [disable LUA scripting support (default enabled)]))\nif test \"${enable_lua}\" != \"no\"\nthen\n  PKG_CHECK_MODULES(LUA, lua5.2, [ have_lua=yes ], [:])\n\n  AS_IF([test \"${have_lua}\" != \"yes\"], [\n    AC_MSG_WARN([${LUA_PKG_ERRORS}, trying lua 5.1 instead])\n    PKG_CHECK_MODULES(LUA, lua5.1, [ have_lua=yes ], [:]) ])\n\n  AS_IF([test \"${have_lua}\" != \"yes\"], [\n    AC_MSG_WARN([${LUA_PKG_ERRORS}, trying lua >= 5.1 instead])\n    PKG_CHECK_MODULES(LUA, lua >= 5.1, [ have_lua=yes ], [:]) ])\n\n  AS_IF([test \"${have_lua}\" != \"yes\"], [\n     AC_MSG_WARN([${LUA_PKG_ERRORS}, trying manual detection instead])\n     have_lua_lib=no\n     AC_CHECK_LIB( lua5.2 , luaL_newstate, [\n       LUA_LIBS=\"-llua5.2\"\n       have_lua_lib=yes], [])\n\n     AS_IF([test \"${have_lua_lib}\" != \"yes\"], [\n       AC_CHECK_LIB( lua5.1 , luaL_newstate, [\n         LUA_LIBS=\"-llua5.1\"\n         have_lua_lib=yes], [] ) ])\n\n     AS_IF([test \"${have_lua_lib}\" != \"yes\"], [\n       AC_CHECK_LIB( lua51 , luaL_newstate, [\n         LUA_LIBS=\"-llua51\"\n         have_lua_lib=yes], [] ) ])\n\n     AS_IF([test \"${have_lua_lib}\" != \"yes\"], [\n       AC_CHECK_LIB( lua , luaL_newstate,\n         [LUA_LIBS=\"-llua\"\n          have_lua_lib=yes],\n         [ have_lua=no ], [-lm] ) ])\n\n     dnl If we found any lib, check that we have the headers too\n     AS_IF([test \"${have_lua_lib}\" = \"yes\"], [\n       AC_CHECK_HEADERS([lua.h lauxlib.h lualib.h], [ have_lua=yes ], []) ])\n  ])\n\n  if test \"${have_lua}\" != \"yes\" ;  then\n      AC_MSG_ERROR([Could not find lua. Lua is needed for some interfaces (rc, telnet, http) as well as many other custom scripts. Use --disable-lua to ignore this error.])\n  fi\n  AC_ARG_VAR([LUAC], [LUA byte compiler])\n  AS_IF([test -z \"$LUAC\"], [\n     AC_CHECK_TOOL(LUAC, [luac], [false])\n  ])\n  AS_IF([test \"${LUAC}\" = \"false\"], [\n    AC_MSG_ERROR([Could not find the LUA byte compiler.])\n  ])\n  AS_IF([test -d \"${CONTRIB_DIR}\" -a -f \"${CONTRIB_DIR}/lib/liblua5.4.a\" -a `echo|${LUAC} -o - -|od -j 12 -N 2 -t x2|head -n 1|tr -s ' '|cut -d' ' -f2` != 0804], [\n    AC_MSG_ERROR([You need 64bit luac when using lua from contrib.])\n  ])\nfi\nAM_CONDITIONAL([BUILD_LUA], [test \"${have_lua}\" = \"yes\"])\n\n\ndnl\ndnl VideoLAN manager\ndnl\nAC_ARG_ENABLE([vlm],\n  AS_HELP_STRING([--disable-vlm],\n    [disable the stream manager (default enabled)]),,\n  [enable_vlm=\"${enable_sout}\"])\nAS_IF([test \"${enable_vlm}\" != \"no\"], [\n  AS_IF([test \"${enable_sout}\" = \"no\"], [\n    AC_MSG_ERROR([VLM requires the stream output. Do not use --disable-sout.])\n  ])\n  AC_DEFINE(ENABLE_VLM, 1, [Define if you want the VideoLAN manager support])\n])\nAM_CONDITIONAL([ENABLE_VLM], [test \"${enable_vlm}\" != \"no\"])\n\n\ndnl\ndnl Addons manager storage and repositories modules\ndnl\nAC_ARG_ENABLE([addonmanagermodules],\n  AS_HELP_STRING([--disable-addonmanagermodules],\n    [disable the addons manager modules (default enabled)]))\nAM_CONDITIONAL([ENABLE_ADDONMANAGERMODULES], [test \"${enable_addonmanagermodules}\" != \"no\"])\n\n\ndnl\ndnl  Input plugins\ndnl\n\nEXTEND_HELP_STRING([Input plugins:])\n\ndnl\ndnl  libarchive access module\ndnl\nPKG_ENABLE_MODULES_VLC([ARCHIVE], [archive], [libarchive >= 3.1.0], (libarchive support), [auto])\n\ndnl\ndnl  live555 input\ndnl\nAC_ARG_ENABLE([live555],\n  AS_HELP_STRING([--enable-live555],\n    [enable RTSP input through live555 (default enabled)]))\n\nAS_IF([test \"${enable_live555}\" != \"no\" -a -n \"${CXX}\"], [\n  PKG_CHECK_MODULES(LIVE555, live555, [\n    VLC_ADD_PLUGIN([live555])\n    VLC_ADD_CXXFLAGS([live555], [$LIVE555_CFLAGS])\n    VLC_ADD_LIBS([live555],[$LIVE555_LIBS])\n  ], [\n    AC_MSG_WARN([${LIVE555_PKG_ERRORS}.])\n\n    AC_LANG_PUSH(C++)\n    VLC_SAVE_FLAGS\n\n    dnl detect include paths\n    AS_IF([test -f \"${CONTRIB_DIR}/include/UsageEnvironment/UsageEnvironment.hh\"], [\n      CPPFLAGS_live555=\"-I${CONTRIB_DIR}/include/liveMedia -I${CONTRIB_DIR}/include/groupsock -I${CONTRIB_DIR}/include/BasicUsageEnvironment -I${CONTRIB_DIR}/include/UsageEnvironment\"\n    ], [\n      AS_IF([test \"${SYS}\" != \"os2\"], [\n        LIVE555_PREFIX=${LIVE555_PREFIX-\"/usr\"}\n        CPPFLAGS_live555=\"-I${LIVE555_PREFIX}/include/liveMedia -I${LIVE555_PREFIX}/include/groupsock -I${LIVE555_PREFIX}/include/BasicUsageEnvironment -I${LIVE555_PREFIX}/include/UsageEnvironment\"\n      ], [\n        LIVE555_PREFIX=${LIVE555_PREFIX-\"/usr/lib/live\"}\n        CPPFLAGS_live555=\"-I${LIVE555_PREFIX}/liveMedia/include -I${LIVE555_PREFIX}/groupsock/include -I${LIVE555_PREFIX}/BasicUsageEnvironment/include -I${LIVE555_PREFIX}/UsageEnvironment/include\"\n        LDFLAGS_live555=\"-L${LIVE555_PREFIX}/liveMedia -L${LIVE555_PREFIX}/groupsock -L${LIVE555_PREFIX}/BasicUsageEnvironment -L${LIVE555_PREFIX}/UsageEnvironment\"\n      ])\n    ])\n\n    dnl CPP Flags\n    AS_IF([test \"${SYS}\" = \"solaris\"], [\n      CPPFLAGS_live555=\"${CPPFLAGS_live555} -DSOLARIS\"\n    ])\n    CPPFLAGS=\"${CPPFLAGS} ${CPPFLAGS_live555}\"\n    LDFLAGS=\"${LDFLAGS} ${LDFLAGS_live555}\"\n\n    dnl version check\n    AC_CACHE_CHECK([for live555 version 1324598400 or later], [ac_cv_live555], [\n      AC_PREPROC_IFELSE([AC_LANG_PROGRAM([\n[#include <liveMedia_version.hh>\n#if !defined (LIVEMEDIA_LIBRARY_VERSION_INT) || (LIVEMEDIA_LIBRARY_VERSION_INT < 1324598400)\n# error BOOM\n#endif]])\n      ], [\n        ac_cv_live555=\"yes\"\n      ], [\n        ac_cv_live555=\"no\"\n      ])\n    ])\n\n    AS_IF([test \"$ac_cv_live555\" = \"no\"], [\n      AC_MSG_WARN([live555 is missing or its installed version is too old:\nVersion 2011.12.23 or later is required to proceed.\nYou can get an updated one from http://www.live555.com/liveMedia .])\n      AS_IF([test -n \"${enable_live555}\"], [\n        AC_MSG_ERROR([Update live555 or pass --disable-live555 to disable RTSP input support.])\n      ])\n    ], [\n      other_libs=\"-lgroupsock -lBasicUsageEnvironment -lUsageEnvironment\"\n      other_libs_pic=\"-lgroupsock_pic -lBasicUsageEnvironment_pic -lUsageEnvironment_pic\"\n      AS_IF([test \"${SYS}\" = \"mingw32\"], [\n        # add ws2_32 for closesocket, select, recv\n        other_libs=\"$other_libs -lws2_32\"\n      ])\n\n      dnl We need to check for pic because live555 does not provide shared libs\n      dnl and we want to build a plugins so we need -fPIC on some arch.\n      VLC_ADD_CXXFLAGS([live555], [${CPPFLAGS_live555}])\n      VLC_ADD_LDFLAGS([live555], [${LDFLAGS_live555}])\n      AC_CHECK_LIB([liveMedia_pic], [main], [\n        VLC_ADD_PLUGIN([live555])\n        VLC_ADD_LIBS([live555], [-lliveMedia_pic ${other_libs_pic}])\n      ],[\n        AC_CHECK_LIB([liveMedia], [main], [\n          VLC_ADD_PLUGIN([live555])\n          VLC_ADD_LIBS([live555], [-lliveMedia ${other_libs}])\n        ],[],[${other_libs}])\n      ],[${other_libs_pic}])\n    ])\n    VLC_RESTORE_FLAGS\n    AC_LANG_POP(C++)\n  ])\n])\n\ndnl\ndnl IIDC and DV FireWire input modules\ndnl\nPKG_ENABLE_MODULES_VLC([DC1394], [], [libdc1394-2 >= 2.1.0], [IIDC FireWire input module], [auto])\nPKG_ENABLE_MODULES_VLC([DV1394], [], [libraw1394 >= 2.0.1 libavc1394 >= 0.5.3], [DV FireWire input module], [auto])\n\ndnl\ndnl - linsys modules: access module check for libzvbi\ndnl\nAC_ARG_ENABLE([linsys],\n  AS_HELP_STRING([--enable-linsys],\n    [Linux Linear Systems Ltd. SDI and HD-SDI input cards (default enabled)]))\nAS_IF([test \"$SYS\" = \"linux\" -a \"${enable_linsys}\" != \"no\"], [\n  VLC_ADD_PLUGIN([linsys_hdsdi])\n  PKG_CHECK_MODULES(LINSYS_SDI, [zvbi-0.2 >= 0.2.28], [\n    VLC_ADD_PLUGIN([linsys_sdi])\n  ], [\n    AC_MSG_WARN([${LINSYS_SDI_PKG_ERRORS}.])\n  ])\n])\n\ndnl\ndnl dvdread module: check for libdvdread\ndnl\nPKG_ENABLE_MODULES_VLC([DVDREAD], [], [dvdread > 6.0.0], [dvdread input module], [auto])\n\ndnl\ndnl libdvdnav plugin\ndnl\nPKG_ENABLE_MODULES_VLC([DVDNAV], [], [dvdnav >= 6.0.0], [DVD with navigation input module (dvdnav)], [auto])\n\ndnl\ndnl  Blu-ray Disc Support with libbluray\ndnl\nPKG_ENABLE_MODULES_VLC([BLURAY], [libbluray], [libbluray >= 1.1.0], (libbluray for Blu-ray disc support ) )\n\ndnl\ndnl  OpenCV wrapper and example filters\ndnl\nPKG_ENABLE_MODULES_VLC([OPENCV], [opencv_example opencv_wrapper], [opencv > 2.0], (OpenCV (computer vision) filter), [auto])\n\n\ndnl\ndnl  libsmbclient plugin\ndnl\nPKG_ENABLE_MODULES_VLC([SMBCLIENT], [smbc], [smbclient], (SMB/CIFS support), [auto])\n\ndnl\ndnl  liBDSM access module\ndnl\nPKG_HAVE_WITH_MODULES([DSM], [libdsm >= 0.2.0], [libdsm SMB/CIFS access/sd module], [auto])\n\ndnl\ndnl sftp access support\ndnl\nPKG_ENABLE_MODULES_VLC([SFTP], [sftp], [libssh2], (support SFTP file transfer via libssh2), [auto])\n\ndnl\ndnl nfs access support\ndnl\nPKG_ENABLE_MODULES_VLC([NFS], [nfs], [libnfs >= 1.10.0], (support nfs protocol via libnfs), [auto])\n\ndnl\ndnl smb2 access support\ndnl\nPKG_ENABLE_MODULES_VLC([SMB2], [smb2], [libsmb2 >= 3.0.0], (support smb2 protocol via libsmb2), [auto])\n\ndnl\ndnl  Video4Linux 2\ndnl\nAC_ARG_ENABLE([v4l2], AS_HELP_STRING([--disable-v4l2],\n  [disable Video4Linux version 2 (default auto)]))\nhave_v4l2=\"no\"\nAS_IF([test \"$enable_v4l2\" != \"no\"], [\n  AC_CHECK_HEADERS([linux/videodev2.h sys/videoio.h], [\n    have_v4l2=\"yes\"\n  ])\n])\nAM_CONDITIONAL([HAVE_V4L2], [test \"${have_v4l2}\" != \"no\"])\n\ndnl\ndnl  NVDEC decoder/encoder\ndnl\nAC_ARG_ENABLE([nvdec], AS_HELP_STRING([--disable-nvdec],\n  [disable NVDEC decoder (default auto)]))\nhave_nvdec=\"no\"\nAS_IF([test \"$enable_nvdec\" != \"no\"], [\n  AC_CHECK_HEADERS([ffnvcodec/dynlink_loader.h], [\n    have_nvdec=\"yes\"\n  ])\n])\nAM_CONDITIONAL([HAVE_NVDEC], [test \"${have_nvdec}\" != \"no\"])\n\ndnl\ndnl  AMD Advanced Media Framework API\ndnl\nAC_ARG_ENABLE([amf-scaler], AS_HELP_STRING([--disable-amf-scaler],\n  [disable AMD Scaler API (default auto)]))\nhave_amf_scaler=\"no\"\nAS_IF([test \"$enable_amf_scaler\" != \"no\"], [\n  AC_CHECK_HEADERS([AMF/core/PropertyStorage.h AMF/components/HQScaler.h], [\n    have_amf_scaler=\"yes\"\n    AC_DEFINE(HAVE_AMF_SCALER, 1, AMD HQScaler supported)\n  ])\n])\nAM_CONDITIONAL([HAVE_AMF_SCALER], [test \"${have_amf_scaler}\" != \"no\"])\n\nAC_ARG_ENABLE([amf-enhancer], AS_HELP_STRING([--disable-amf-enhancer],\n  [disable AMD Enhancer API (default auto)]))\nhave_amf_enhancer=\"no\"\nAS_IF([test \"$enable_amf_enhancer\" != \"no\"], [\n  AC_CHECK_HEADERS([AMF/core/PropertyStorage.h AMF/components/VQEnhancer.h], [\n    have_amf_enhancer=\"yes\"\n  ])\n])\nAM_CONDITIONAL([HAVE_AMF_ENHANCER], [test \"${have_amf_enhancer}\" != \"no\"])\n\nAC_ARG_ENABLE([amf-frc], AS_HELP_STRING([--disable-amf-frc],\n  [disable AMD FRC (default auto)]))\nhave_amf_frc=\"no\"\nAS_IF([test \"$enable_amf_frc\" != \"no\"], [\n  AC_CHECK_HEADERS([AMF/core/PropertyStorage.h AMF/components/FRC.h], [\n    have_amf_frc=\"yes\"\n  ])\n])\nAM_CONDITIONAL([HAVE_AMF_FRC], [test \"${have_amf_frc}\" != \"no\"])\n\ndnl\ndnl special access module for Blackmagic SDI cards\ndnl\nAC_ARG_ENABLE([decklink],\n  AS_HELP_STRING([--disable-decklink],\n    [disable Blackmagic DeckLink SDI input (default auto)]))\nAC_ARG_WITH([decklink_sdk],\n  AS_HELP_STRING([--with-decklink-sdk=DIR],\n    [location of Blackmagic DeckLink SDI SDK]))\nhave_decklink=no\nif test \"${enable_decklink}\" != \"no\"\nthen\n  if test \"${with_decklink_sdk}\" != \"no\" -a -n \"${with_decklink_sdk}\"\n  then\n    VLC_ADD_CPPFLAGS([decklink decklinkoutput stream_out_sdi],[-I${with_decklink_sdk}/include])\n  elif test -d \"${CONTRIB_DIR}/include/decklink\"\n  then\n    VLC_ADD_CPPFLAGS([decklink decklinkoutput stream_out_sdi],[-I${CONTRIB_DIR}/include/decklink])\n  fi\n  VLC_SAVE_FLAGS\n  CPPFLAGS=\"${CPPFLAGS} ${CPPFLAGS_decklink}\"\n  AC_LANG_PUSH([C++])\n  AC_CHECK_HEADERS([DeckLinkAPI.h], [\n      have_decklink=yes\n      AS_IF([test \"${SYS}\" = \"darwin\"], [\n        VLC_ADD_LIBS([decklink decklinkoutput stream_out_sdi],[-Wl,-framework,CoreFoundation])\n      ])\n  ], [\n      AS_IF([test \"${enable_decklink}\" = \"yes\"], [\n        AC_MSG_ERROR([Blackmagic DeckLink SDI include files not found!])\n      ], [\n        AC_MSG_WARN([Blackmagic DeckLink SDI include files not found, decklink disabled])\n      ])\n  ])\n  AC_LANG_POP([C++])\n  VLC_RESTORE_FLAGS\nfi\nAM_CONDITIONAL([HAVE_DECKLINK], [ test \"${have_decklink}\" != \"no\" ])\n\n\ndnl\ndnl  Built-in CD-DA and VCD module\ndnl\nAC_ARG_ENABLE([vcd],\n  AS_HELP_STRING([--disable-vcd],\n    [disable built-in VCD and CD-DA support (default enabled)]))\n\nAC_ARG_ENABLE([libcddb],\n  AS_HELP_STRING([--disable-libcddb],\n    [disable CDDB for Audio CD (default enabled)]))\n\nif test \"${enable_vcd}\" != \"no\" -a \"${enable_winstore_app}\" != \"yes\"\nthen\n  AC_MSG_CHECKING(for cdrom_msf0 in linux/cdrom.h)\n  AC_EGREP_HEADER(cdrom_msf0,linux/cdrom.h,[\n    AC_MSG_RESULT(yes)\n    VLC_ADD_PLUGIN([vcd cdda])\n  ],[\n    AC_MSG_RESULT(no)\n  ])\n\n  AC_MSG_CHECKING(for scsireq in sys/scsiio.h)\n  AC_EGREP_HEADER(scsireq,sys/scsiio.h,[\n    AC_MSG_RESULT(yes)\n    VLC_ADD_PLUGIN([vcd cdda])\n    AC_DEFINE(HAVE_SCSIREQ_IN_SYS_SCSIIO_H, 1, For NetBSD VCD support)\n  ],[\n    AC_MSG_RESULT(no)\n  ])\n\n  AC_MSG_CHECKING(for ioc_toc_header in sys/cdio.h)\n  AC_EGREP_HEADER(ioc_toc_header ,sys/cdio.h,[\n    AC_MSG_RESULT(yes)\n    VLC_ADD_PLUGIN([vcd cdda])\n    AC_DEFINE(HAVE_IOC_TOC_HEADER_IN_SYS_CDIO_H, 1, For FreeBSD VCD support)\n  ],[\n    AC_MSG_RESULT(no)\n  ])\n\n  if test \"${SYS}\" = \"bsdi\" -o \"${SYS}\" = \"mingw32\" -o \"${SYS}\" = \"os2\" -o \"${SYS}\" = \"darwin\"\n  then\n    VLC_ADD_PLUGIN([vcd cdda])\n  fi\n\n  if test \"$enable_libcddb\" != \"no\"; then\n    PKG_CHECK_MODULES(LIBCDDB, [libcddb >= 0.9.5], [\n      HAVE_LIBCDDB=yes\n      AC_DEFINE(HAVE_LIBCDDB, 1, [Define this if you have libcddb installed])\n      VLC_ADD_LIBS([cdda],[$LIBCDDB_LIBS])\n      VLC_ADD_CFLAGS([cdda],[$LIBCDDB_CFLAGS])\n      ],:\n      [AC_MSG_WARN([${LIBCDDB_PKG_ERRORS}: CDDB access disabled.])\n      HAVE_LIBCDDB=no])\n  fi\nfi\n\ndnl\ndnl Linux DVB\ndnl\nAC_CACHE_CHECK([for Linux DVB version 5.1], [ac_cv_linux_dvb_5_1], [\n  AC_PREPROC_IFELSE([AC_LANG_PROGRAM([\n[#include <linux/dvb/version.h>\n#if (DVB_API_VERSION < 5)\n# error Linux DVB API v3.2 and older are not supported.\n#endif\n#if (DVB_API_VERSION == 5 && DVB_API_VERSION_MINOR < 1)\n# error Linux DVB API v5.0 is unsupported. Please update.\n#endif\n]])], [\n  ac_cv_linux_dvb_5_1=yes\n], [\n  ac_cv_linux_dvb_5_1=no\n])])\nAM_CONDITIONAL([HAVE_LINUX_DVB], [test \"$ac_cv_linux_dvb_5_1\" = \"yes\"])\n\ndnl\ndnl  Screen capture module\ndnl\nAC_ARG_ENABLE([screen],\n  AS_HELP_STRING([--enable-screen],\n    [disable screen capture (default enabled)]))\nif test \"${enable_screen}\" != \"no\"; then\n  if test \"${SYS}\" = \"darwin\"; then\n    AC_CHECK_HEADERS([ApplicationServices/ApplicationServices.h], [\n      VLC_ADD_PLUGIN([screen])\n    ])\n  fi\nfi\nAM_CONDITIONAL([HAVE_MAC_SCREEN], [test \"${SYS}\" = \"darwin\" -a \"${enable_screen}\" != \"no\"])\n\ndnl\ndnl  VNC/RFB access module\ndnl\nPKG_ENABLE_MODULES_VLC([VNC], [vnc], [libvncclient >= 0.9.9], (VNC/rfb client support), [auto])\n\ndnl  RDP/Remote Desktop access module\ndnl\nPKG_ENABLE_MODULES_VLC([FREERDP], [rdp], [freerdp2 >= 2.0.0], (RDP/Remote Desktop client support) )\n\ndnl\ndnl AVFoundation\nAC_SUBST([have_avfoundation], [\"no\"])\nAC_ARG_ENABLE([macosx-avfoundation],\n  AS_HELP_STRING([--enable-macosx-avfoundation], [Mac OS X avcapture (video) module (default enabled on Mac OS X)]))\nif test \"${enable_macosx_avfoundation}\" != \"no\" &&\n  (test \"${SYS}\" = \"darwin\" || test \"${enable_macosx_avfoundation}\" = \"yes\")\nthen\n  SAVED_LIBS=\"${LIBS}\"\n  LIBS=\"-framework AVFoundation\"\n  AC_LINK_IFELSE([AC_LANG_PROGRAM([[]], [])],[have_avfoundation=yes],[have_avfoundation=no])\n  LIBS=\"${SAVED_LIBS}\"\n  if test \"${have_avfoundation}\" != \"no\"\n  then\n    VLC_ADD_PLUGIN([avcapture])\n  fi\nfi\nAM_CONDITIONAL([HAVE_AVFOUNDATION], [test \"${have_avfoundation}\" != \"no\"])\n\ndnl\ndnl  DCP plugin (using asdcplib)\ndnl\nPKG_WITH_MODULES([ASDCP], [asdcplib], [have_asdcp=\"yes\"])\nAM_CONDITIONAL([HAVE_ASDCP], [test \"${have_asdcp}\" = \"yes\"])\n\ndnl\ndnl  Demux plugins\ndnl\n\nEXTEND_HELP_STRING([Mux/Demux plugins:])\n\ndnl\ndnl  libdvbpsi check for ts mux/demux\ndnl\nhave_dvbpsi=\"no\"\nPKG_WITH_MODULES([DVBPSI], [libdvbpsi >= 1.2.0], [have_dvbpsi=\"yes\"])\nAM_CONDITIONAL([HAVE_DVBPSI], [test \"${have_dvbpsi}\" = \"yes\"])\n\ndnl\ndnl  libdvbcsa check for ts mux/demux\ndnl\ndnl doesn't provide pkgconfig yet (as for 1.1.0)\nPKG_WITH_MODULES([DVBCSA], [dvbcsa], [have_dvbcsa=\"yes\"], [\n  VLC_SAVE_FLAGS\n  CPPFLAGS=\"${CPPFLAGS} ${DVBCSA_CFLAGS}\"\n  LDFLAGS=\"${LDFLAGS} ${DVBCSA_LIBS}\"\n  AC_CHECK_HEADER([dvbcsa/dvbcsa.h], [\n    AC_CHECK_LIB([dvbcsa], [dvbcsa_decrypt], [\n      have_dvbcsa=\"yes\"\n      DVBCSA_LIBS=\"${DVBCSA_LIBS} -ldvbcsa\"\n      AC_SUBST([DVBCSA_LIBS])\n    ])\n  ])\n  VLC_RESTORE_FLAGS\n])\nAS_IF([test \"${have_dvbcsa}\" = \"yes\"], [AC_DEFINE(HAVE_DVBCSA, 1, [Define if libdvbcsa is available.])])\n\ndnl\ndnl  GME demux plugin\ndnl\nPKG_ENABLE_MODULES_VLC([GME], [], [libgme], [Game Music Emu support (default auto)], [auto])\n\n\ndnl\ndnl  SIDPlay plugin\ndnl\nAC_ARG_ENABLE([sid],\n    AS_HELP_STRING([--enable-sid],[C64 sid demux support (default auto)]))\nAS_IF([test \"${enable_sid}\" != \"no\"], [\n    PKG_CHECK_MODULES(SID, [libsidplay2], [\n        AC_LANG_PUSH(C++)\n        oldCPPFLAGS=\"$CPPFLAGS\"\n        CPPFLAGS=\"$CPPFLAGS $SID_CFLAGS\"\n        AC_CHECK_HEADER([sidplay/builders/resid.h], [\n            VLC_ADD_PLUGIN([sid])\n            VLC_ADD_CXXFLAGS([sid], [$SID_CFLAGS])\n            VLC_ADD_LIBS([sid], [$SID_LIBS] [-lresid-builder])\n        ], [\n            AS_IF([test -n \"${enable_sid}\"],\n                [AC_MSG_ERROR([${SID_PKG_ERRORS} (required for sid).])],\n                [AC_MSG_WARN([${SID_PKG_ERRORS} (required for sid).])]\n                )\n        ])\n        CPPFLAGS=\"$oldCPPFLAGS\"\n        AC_LANG_POP(C++)\n    ], [\n        AS_IF([test \"${enable_sid}\" = \"yes\"],\n            [AC_MSG_ERROR([${SID_PKG_ERRORS} (required for sid).])],\n            [AC_MSG_WARN([${SID_PKG_ERRORS} (required for sid).])]\n            )\n    ])\n])\n\n\ndnl\ndnl  ogg demux plugin\ndnl\nPKG_ENABLE_MODULES_VLC([OGG], [mux_ogg], [ogg >= 1.0], [Ogg demux support], [auto])\nPKG_CHECK_MODULES(LIBVORBIS, [vorbis >= 1.1], [\n    AC_DEFINE(HAVE_LIBVORBIS, 1, [Define to 1 if you have the libvorbis])\n],[true])\nPKG_ENABLE_MODULES_VLC([OGG], [], [ogg >= 1.0], [Ogg demux support], [auto], [${LIBVORBIS_CFLAGS}], [${LIBVORBIS_LIBS}])\nif test \"${enable_sout}\" != \"no\"; then\ndnl Check for libshout\n    PKG_ENABLE_MODULES_VLC([SHOUT], [access_output_shout], [shout >= 2.4.3], [libshout output plugin], [auto])\nfi\n\ndnl\ndnl  matroska demux plugin\ndnl\nPKG_WITH_MODULES([MATROSKA], [libebml >= 1.3.6 libmatroska], [\n       VLC_ADD_PLUGIN([mkv])\n       VLC_ADD_CFLAGS([mkv], [$MATROSKA_CFLAGS])\n       VLC_ADD_LIBS([mkv], [$MATROSKA_LIBS])\n       have_matroska=\"yes\"\n   ],,[MKV format support], [auto])\nAM_CONDITIONAL([HAVE_MATROSKA], [test \"${have_matroska}\" = \"yes\"])\n\ndnl\ndnl  modplug demux plugin\ndnl\nAC_ARG_ENABLE([mod],\n  AS_HELP_STRING([--disable-mod],\n    [do not use libmodplug (default auto)]))\nif test \"${enable_mod}\" != \"no\" ; then\n    PKG_CHECK_MODULES(LIBMODPLUG, [libmodplug >= 0.8.9.0], [\n          VLC_ADD_PLUGIN([mod])\n          VLC_ADD_CXXFLAGS([mod],[$LIBMODPLUG_CFLAGS])\n          VLC_ADD_CFLAGS([mod],[$LIBMODPLUG_CFLAGS]) #modules/demux/mod.c needs CFLAGS_mod, not CXXFLAGS_mod\n          VLC_ADD_LIBS([mod],[$LIBMODPLUG_LIBS])\n    ],[\n       AS_IF([test -n \"${enable_mod}\"],\n         [AC_MSG_ERROR([${LIBMODPLUG_PKG_ERRORS}.])],\n         [AC_MSG_WARN([${LIBMODPLUG_PKG_ERRORS}.])])\n    ])\nfi\n\ndnl\ndnl  mpc demux plugin\ndnl\nAC_ARG_ENABLE([mpc],\n  AS_HELP_STRING([--disable-mpc], [do not use libmpcdec (default auto)]))\nif test \"${enable_mpc}\" != \"no\"\nthen\n    AC_CHECK_HEADERS([mpc/mpcdec.h], [\n        VLC_ADD_PLUGIN([mpc])\n        VLC_ADD_LIBS([mpc],[-lmpcdec])\n    ])\nfi\n\ndnl\ndnl  Codec plugins\ndnl\n\nEXTEND_HELP_STRING([Codec plugins:])\n\ndnl\ndnl shine encoder plugin\ndnl\nPKG_ENABLE_MODULES_VLC([SHINE], [], [shine >= 3.0.0], [MPEG Audio Layer 3 encoder], [auto], [], [], [])\n\n\ndnl\ndnl openmax il codec plugin\ndnl\nAC_ARG_ENABLE([omxil],\n  AS_HELP_STRING([--enable-omxil], [openmax il codec module (default disabled)]))\nif test \"${enable_omxil}\" = \"yes\"\nthen\n  VLC_ADD_PLUGIN([omxil])\nfi\n\ndnl\ndnl raspberry pi openmax il configuration\ndnl\nAC_ARG_ENABLE([rpi-omxil],\n  AS_HELP_STRING([--enable-rpi-omxil], [openmax il configured for raspberry pi (default disabled)]))\nif test \"${enable_rpi_omxil}\" = \"yes\"\nthen\n  VLC_ADD_PLUGIN([omxil])\n  VLC_ADD_CFLAGS([omxil],[-DRPI_OMX])\nfi\n\ndnl\ndnl  mad plugin\ndnl\nhave_mad=\"no\"\nMAD_CFLAGS=\"\"\nMAD_LIBS=\"\"\n\nAC_ARG_WITH(mad, AS_HELP_STRING([--with-mad=PATH], [path to libmad]), [\n  enable_mad=\"yes\"\n], [\n  with_mad=\"no\"\n])\nAS_IF([test \"${with_mad}\" != \"no\"], [\n  MAD_CFLAGS=\"-I${with_mad}/include\"\n  MAD_LIBS=\"-L${with_mad}/lib\"\n])\n\nAC_ARG_ENABLE([mad],\n  AS_HELP_STRING([--enable-mad], [libmad module (default enabled)]))\nAS_IF([test \"${enable_mad}\" != \"no\"], [\n  VLC_SAVE_FLAGS\n  CPPFLAGS=\"${CPPFLAGS} ${MAD_CFLAGS}\"\n  LDFLAGS=\"${LDFLAGS} ${MAD_LIBS}\"\n  AC_CHECK_HEADERS([mad.h], [\n    AC_CHECK_LIB([mad], [mad_bit_init], [\n      have_mad=\"yes\"\n      MAD_LIBS=\"${MAD_LIBS} -lmad\"\n    ])\n  ])\n  VLC_RESTORE_FLAGS\n  AS_IF([test -n \"$enable_mad\" -a \"${have_mad}\" = \"no\"], [\n    AC_MSG_ERROR([Could not find libmad. Install it or pass --disable-mad to disable it.])\n  ])\n])\nAC_SUBST([MAD_CFLAGS])\nAC_SUBST([MAD_LIBS])\nAM_CONDITIONAL([HAVE_MAD], [test \"${have_mad}\" = \"yes\"])\n\ndnl  mpg123 plugin\ndnl\ndnl\nPKG_ENABLE_MODULES_VLC([MPG123], [mpg123], [libmpg123], [libmpg123 decoder support], [auto])\n\ndnl\ndnl gstreamer stuff\ndnl\nAC_ARG_ENABLE([gst-decode],\n  AS_HELP_STRING([--enable-gst-decode], [GStreamer based decoding support (currently supports only video decoding) (default auto)]))\n\nhave_gst_decode=\"no\"\nAS_IF([test \"${enable_gst_decode}\" != \"no\"], [\n  PKG_CHECK_MODULES([GST_APP], [gstreamer-app-1.0], [\n    PKG_CHECK_MODULES([GST_VIDEO], [gstreamer-video-1.0 gstreamer-allocators-1.0], [\n      have_gst_decode=\"yes\"\n    ], [\n      AC_MSG_WARN([${GST_VIDEO_PKG_ERRORS}. GStreamer decoder module will not be built.])\n    ])\n  ], [\n    AC_MSG_WARN([${GST_APP_PKG_ERRORS}. GStreamer modules will not be built.])\n  ])\n])\nAM_CONDITIONAL([HAVE_GST_DECODE], [test \"${have_gst_decode}\" = \"yes\"])\n\ndnl\ndnl  avcodec decoder/encoder plugin\ndnl\nAC_ARG_ENABLE([merge-ffmpeg],\nAS_HELP_STRING([--enable-merge-ffmpeg], [merge FFmpeg-based plugins (default disabled)]),, [\n  enable_merge_ffmpeg=\"no\"\n])\nAM_CONDITIONAL([MERGE_FFMPEG], [test \"$enable_merge_ffmpeg\" != \"no\"])\n\ndnl We require ffmpeg >= 4.2\ndnl Ubuntu Focal (20.04 LTS) has 4.2, debian stable (bookworm) has 5.1\nPKG_HAVE_WITH_MODULES([AVCODEC], [libavcodec >= 58.54.100 libavutil >= 56.31.100],\n                       [libavcodec codec (default enabled)], [yes])\n\ndnl\ndnl libva needs avcodec\ndnl\nAC_ARG_ENABLE([libva],\n  AS_HELP_STRING([--enable-libva], [VAAPI GPU decoding support (libVA) (default auto)]))\n\nhave_vaapi=\"no\"\nhave_vaapi_drm=\"no\"\nhave_vaapi_x11=\"no\"\nhave_vaapi_wl=\"no\"\nAS_IF([test \"${enable_libva}\" != \"no\"], [\n  PKG_CHECK_MODULES([LIBVA], [libva >= 1.0], [\n    have_vaapi=\"yes\"\n  ], [\n    AS_IF([test -n \"${enable_libva}\"], [\n      AC_MSG_ERROR([${LIBVA_PKG_ERRORS}.])\n    ], [\n      AC_MSG_WARN([${LIBVA_PKG_ERRORS}.])\n    ])\n  ])\n  PKG_CHECK_MODULES([LIBVA_DRM], [libva-drm], [\n    have_vaapi_drm=\"yes\"\n  ], [\n    AC_MSG_WARN([${LIBVA_DRM_PKG_ERRORS}.])\n  ])\n  PKG_CHECK_MODULES(LIBVA_X11, [libva-x11], [\n    have_vaapi_x11=\"yes\"\n  ], [\n    AC_MSG_WARN([${LIBVA_X11_PKG_ERRORS}.])\n  ])\n  PKG_CHECK_MODULES(LIBVA_WL, [libva-wayland], [\n    have_vaapi_wl=\"yes\"\n  ], [\n    AC_MSG_WARN([${LIBVA_WL_PKG_ERRORS}.])\n  ])\n])\nAM_CONDITIONAL([HAVE_VAAPI], [test \"${have_vaapi}\" = \"yes\"])\nAM_CONDITIONAL([HAVE_VAAPI_DRM], [test \"${have_vaapi_drm}\" = \"yes\"])\nAM_CONDITIONAL([HAVE_VAAPI_X11], [test \"${have_vaapi_x11}\" = \"yes\"])\nAM_CONDITIONAL([HAVE_VAAPI_WL], [test \"${have_vaapi_wl}\" = \"yes\"])\n\ndnl\ndnl dxva2 needs avcodec\ndnl\nAC_ARG_ENABLE([dxva2],\n  AS_HELP_STRING([--enable-dxva2], [DxVA2 GPU decoding support (default auto)]))\n\nhave_avcodec_dxva2=\"no\"\nAS_IF([test \"${enable_dxva2}\" != \"no\"], [\n  AS_IF([test \"${SYS}\" = \"mingw32\"], [\n    AS_IF([test \"${enable_avcodec}\" != \"no\"], [\n        AC_CHECK_HEADERS([libavcodec/dxva2.h], [\n            AC_MSG_NOTICE([DxVA2 acceleration activated])\n            have_avcodec_dxva2=\"yes\"\n        ],[\n            AS_IF([test \"${enable_dxva2}\" = \"yes\"],[\n                AC_MSG_ERROR([dxva2 is present but libavcodec/dxva2.h is missing])\n            ],[\n                AC_MSG_WARN([dxva2 is present but libavcodec/dxva2.h is missing ])\n            ])\n        ])\n    ],[\n        AS_IF([test \"x${enable_dxva2}\" != \"x\"], [\n            AC_MSG_ERROR([--enable-dxva2 and --disable-avcodec options are mutually exclusive.])\n        ])\n    ])\n  ])\n])\nAM_CONDITIONAL([HAVE_AVCODEC_DXVA2], [test \"${have_avcodec_dxva2}\" = \"yes\"])\n\ndnl\ndnl d3d11va needs avcodec\ndnl\nAC_ARG_ENABLE([d3d11va],\n  AS_HELP_STRING([--enable-d3d11va], [D3D11 GPU decoding support (default auto)]))\n\nhave_avcodec_d3d11va=\"no\"\nAS_IF([test \"${enable_d3d11va}\" != \"no\"], [\n  AS_IF([test \"${SYS}\" = \"mingw32\"], [\n    AS_IF([test \"${enable_avcodec}\" != \"no\"], [\n        AC_CHECK_HEADERS([libavcodec/d3d11va.h], [\n            AC_MSG_NOTICE([D3D11 acceleration activated])\n            have_avcodec_d3d11va=\"yes\"\n        ],[\n            AS_IF([test \"${enable_d3d11va}\" = \"yes\"], [\n                AC_MSG_ERROR([d3d11va is present but libavcodec/d3d11va.h is missing])\n            ],[\n                AC_MSG_WARN([d3d11va is present but libavcodec/d3d11va.h is missing ])\n            ])\n        ])\n    ],[\n        AS_IF([test \"x${enable_d3d11va}\" != \"x\"], [\n          AC_MSG_ERROR([--enable-d3d11va and --disable-avcodec options are mutually exclusive.])\n        ])\n    ])\n  ])\n])\nAM_CONDITIONAL([HAVE_AVCODEC_D3D11VA], [test \"${have_avcodec_d3d11va}\" = \"yes\"])\n\ndnl\ndnl DXGI debug\ndnl\nAC_CHECK_HEADERS([dxgidebug.h])\n\ndnl\ndnl IStorageFolder\ndnl\nAS_IF([test \"$vlc_winstore_app\" = \"1\"],\n[\n    AC_MSG_CHECKING([for proper __x_ABI_CWindows_CStorage_CIStorageFolder definition])\n    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n#include <windows.storage.h>\n__x_ABI_CWindows_CStorage_CIStorageFolder *toto;\n    ]])], [\n        AC_MSG_RESULT([yes])\n    ], [\n        AC_MSG_RESULT([no])\n        AC_MSG_ERROR([IStorageFolder not properly defined, use mingw-w64 8.0.1 or higher])\n    ])\n\n    AC_MSG_CHECKING([for proper __x_ABI_CWindows_CStorage_CIApplicationData2 definition])\n    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n#include <windows.storage.h>\n__x_ABI_CWindows_CStorage_CIApplicationData2 *toto;\n    ]])], [\n        AC_MSG_RESULT([yes])\n        have_iapplication_data2=\"yes\"\n    ], [\n        AC_MSG_RESULT([no])\n    ])\n])\n\nAM_CONDITIONAL([HAVE_WINDOWS_STORAGE], [test \"${have_iapplication_data2}\" = \"yes\"])\n\ndnl\ndnl  avformat demuxer/muxer plugin\ndnl\n\nAC_ARG_ENABLE([avformat],\nAS_HELP_STRING([--enable-avformat], [libavformat containers (default enabled)]),, [\n  enable_avformat=\"${enable_avcodec}\"\n])\nhave_avformat=\"no\"\nAS_IF([test \"${enable_avformat}\" != \"no\"], [\n  PKG_CHECK_MODULES(AVFORMAT,[libavformat >= 58.29.100 libavcodec libavutil], [\n      have_avformat=\"yes\"\n      VLC_SAVE_FLAGS\n      CPPFLAGS=\"${CPPFLAGS} ${AVFORMAT_CFLAGS}\"\n      CFLAGS=\"${CFLAGS} ${AVFORMAT_CFLAGS}\"\n      AC_CHECK_HEADERS([libavformat/avformat.h libavformat/avio.h])\n      AS_IF([test \"$enable_merge_ffmpeg\" = \"no\"], [\n        have_avformat=\"no\"\n      ])\n      VLC_RESTORE_FLAGS\n    ],[\n      AC_MSG_ERROR([${AVFORMAT_PKG_ERRORS}. Pass --disable-avformat to ignore this error.])\n  ])\n])\nAM_CONDITIONAL([HAVE_AVFORMAT], [test \"${enable_avformat}\" != \"no\"])\n\ndnl\ndnl  swscale image scaling and conversion plugin\ndnl\n\nAC_ARG_ENABLE([swscale],\n  AS_HELP_STRING([--enable-swscale],[libswscale image scaling and conversion\n          (default enabled)]))\nif test \"${enable_swscale}\" != \"no\"\nthen\n  PKG_CHECK_MODULES(SWSCALE,[libswscale >= 0.5.0],\n    [\n      VLC_ADD_PLUGIN([swscale])\n      VLC_ADD_LIBS([swscale],[$SWSCALE_LIBS])\n      VLC_ADD_CFLAGS([swscale],[$SWSCALE_CFLAGS])\n    ],[\n      AC_MSG_ERROR([${SWSCALE_PKG_ERRORS}. Pass --disable-swscale to ignore this error. Proper software scaling and some video chroma conversion will be missing.])\n  ])\nfi\n\ndnl\ndnl  postproc plugin\ndnl\n\nAC_ARG_ENABLE([postproc],\nAS_HELP_STRING([--enable-postproc], [libpostproc image post-processing (default auto)]))\nif test \"${enable_postproc}\" != \"no\"\nthen\n  PKG_CHECK_MODULES(POSTPROC,[libpostproc libavutil],\n    [\n      VLC_SAVE_FLAGS\n      CPPFLAGS=\"${CPPFLAGS} ${POSTPROC_CFLAGS}\"\n      CFLAGS=\"${CFLAGS} ${POSTPROC_CFLAGS}\"\n      AC_CHECK_HEADERS([postproc/postprocess.h])\n      VLC_ADD_PLUGIN([postproc])\n      VLC_RESTORE_FLAGS\n    ],[\n      AC_MSG_WARN([${POSTPROC_PKG_ERRORS}.])\n  ])\nfi\n\ndnl\ndnl  faad decoder plugin\ndnl\nPKG_WITH_MODULES([FAAD],[faad2],\n  VLC_ADD_PLUGIN(faad)\n  VLC_ADD_CFLAGS(faad, [$FAAD_CFLAGS])\n  VLC_ADD_LIBS(faad,[$FAAD_LIBS]),\n  AS_IF([test \"${enable_faad}\" != \"no\"],[\n    AC_CHECK_HEADERS([neaacdec.h], [\n      AC_CHECK_LIB([faad], [NeAACDecOpen],[\n                      VLC_ADD_PLUGIN([faad])\n                      VLC_ADD_LIBS([faad],[-lfaad])\n                      found_faad=\"yes\"\n                   ],[], [$LIBM])\n    ])\n    AS_IF([test \"${found_faad}\" != \"yes\"],\n        AS_IF([test \"${enable_faad}\" == \"yes\"],\n            AC_MSG_ERROR([${FAAD_PKG_ERRORS}.]),\n            AC_MSG_WARN([${FAAD_PKG_ERRORS}.]))\n    )\n  ]),\n[faad AAC audio decoder])\n\ndnl\ndnl  AOM encoder/decoder plugin\ndnl\nPKG_ENABLE_MODULES_VLC([AOM], [], [aom], [libaom AV1 encoder and decoder (default auto)])\n\ndnl\ndnl  Rav1e encoder plugin\ndnl\nPKG_ENABLE_MODULES_VLC([RAV1E], [], [rav1e], [rav1e encoder module codec (default auto)])\n\ndnl\ndnl  Dav1d decoder plugin\ndnl\nPKG_ENABLE_MODULES_VLC([DAV1D], [], [dav1d >= 0.5.0], [AV1 decoder (default auto)])\n\ndnl\ndnl libvpx decoder plugin\ndnl\nAC_ARG_ENABLE([vpx],\n    AS_HELP_STRING([--enable-vpx],[libvpx VP8/VP9 encoder and decoder (default auto)]))\nAS_IF([test \"${enable_vpx}\" != \"no\"],[\n    PKG_CHECK_MODULES([VPX], [vpx >= 1.5.0], [\n        VLC_ADD_PLUGIN([vpx])\n        VLC_ADD_CPPFLAGS([vpx], [${VPX_CFLAGS}])\n        VLC_ADD_LIBS([vpx], [${VPX_LIBS}])\n        AC_CHECK_LIB([vpx],[vpx_codec_vp8_dx], [\n            VLC_ADD_CPPFLAGS([vpx], [-DENABLE_VP8_DECODER])\n        ], [], [${VPX_LIBS}])\n        AC_CHECK_LIB([vpx],[vpx_codec_vp9_dx], [\n            VLC_ADD_CPPFLAGS([vpx], [-DENABLE_VP9_DECODER])\n        ], [], [${VPX_LIBS}])\n        AC_CHECK_LIB([vpx],[vpx_codec_vp8_cx], [\n            VLC_ADD_CPPFLAGS([vpx], [-DENABLE_VP8_ENCODER])\n        ], [], [${VPX_LIBS}])\n        AC_CHECK_LIB([vpx],[vpx_codec_vp9_cx], [\n            VLC_ADD_CPPFLAGS([vpx], [-DENABLE_VP9_ENCODER])\n        ], [], [${VPX_LIBS}])\n    ], [\n    AS_IF([test \"${enable_vpx}\" = \"yes\"],[\n        AC_MSG_ERROR([libvpx 1.5.0 or higher was not found])\n    ])])\n])\n\ndnl\ndnl twolame encoder plugin\ndnl\nPKG_ENABLE_MODULES_VLC([TWOLAME], [], [twolame], [MPEG Audio Layer 2 encoder], [auto], [], [], [ -DLIBTWOLAME_STATIC])\n\ndnl\ndnl fdk-aac encoder plugin\ndnl\nPKG_ENABLE_MODULES_VLC([FDKAAC], [], [fdk-aac], [FDK-AAC encoder], [disabled])\n\ndnl\ndnl  Flac plugin\ndnl\nPKG_ENABLE_MODULES_VLC([FLAC], [], [flac], [libflac decoder/encoder support], [auto])\n\ndnl\ndnl  Vorbis plugin\ndnl\nPKG_ENABLE_MODULES_VLC([VORBIS], [], [ogg vorbis >= 1.1 vorbisenc >= 1.1], [Vorbis decoder and encoder], [auto])\n\ndnl\ndnl  Tremor plugin\ndnl\nAC_ARG_ENABLE([tremor],\n  AS_HELP_STRING([--enable-tremor], [Tremor decoder support (default disabled)]))\nif test \"${enable_tremor}\" = \"yes\"\nthen\n  AC_CHECK_HEADERS([tremor/ivorbiscodec.h], [\n    VLC_ADD_PLUGIN([tremor])\n   ],[])\nfi\n\ndnl\ndnl  Speex plugins\ndnl\nPKG_ENABLE_MODULES_VLC([SPEEX], [], [ogg speex >= 1.0.5], [Speex support], [auto])\nhave_speexdsp=\"no\"\nAS_IF([test \"${enable_speex}\" != \"no\"], [\n  PKG_CHECK_MODULES([SPEEXDSP], [speexdsp], [\n    have_speexdsp=\"yes\"\n  ], [\n    AC_MSG_WARN([${SPEEXDSP_PKG_ERRORS}.])\n  ])\n])\nAM_CONDITIONAL([HAVE_SPEEXDSP], [test \"$have_speexdsp\" = \"yes\"])\n\ndnl\ndnl  RNNoise plugin - Recurrent neural network for audio noise reduction\ndnl\nPKG_ENABLE_MODULES_VLC([RNNOISE], [], [rnnoise], [Rnnoise denoiser], [auto])\n\ndnl\ndnl  Opus plugin\ndnl\nPKG_ENABLE_MODULES_VLC([OPUS], [], [ogg opus >= 1.0.3], [Opus support], [auto])\n\ndnl\ndnl  Ambisonic channel mixer and binauralizer plugin\ndnl\nPKG_ENABLE_MODULES_VLC([SPATIALAUDIO], [], [spatialaudio], [Ambisonic channel mixer and binauralizer], [auto])\n\ndnl\ndnl  theora decoder plugin\ndnl\nPKG_ENABLE_MODULES_VLC([THEORA], [], [ogg theoradec >= 1.0 theoraenc], [experimental theora codec], [auto])\n\ndnl\ndnl  OggSpots decoder plugin\ndnl\nPKG_ENABLE_MODULES_VLC([OGGSPOTS], [], [ogg], [experimental OggSpots codec], [auto])\n\ndnl\ndnl  Daala decoder plugin\ndnl\nPKG_ENABLE_MODULES_VLC([DAALA], [], [daaladec daalaenc], [experimental daala codec], [disabled])\n\ndnl\ndnl  schroedinger decoder plugin (for dirac format video)\ndnl\nPKG_ENABLE_MODULES_VLC([SCHROEDINGER], [], [schroedinger-1.0 >= 1.0.10], [dirac decoder and encoder using schroedinger], [auto])\n\ndnl\ndnl  PNG decoder module\ndnl\nAC_ARG_ENABLE([png],\n  AS_HELP_STRING([--enable-png], [PNG support (default enabled)]))\nAS_IF([test \"${enable_png}\" != \"no\"], [\nAC_CHECK_HEADERS([png.h], [\n  VLC_SAVE_FLAGS\n  LDFLAGS=\"${LDFLAGS} -lz $LIBM\"\n  AC_CHECK_LIB([png], [png_set_alpha_mode], [\n    VLC_ADD_PLUGIN([png])\n  ], [], [-lz $LIBM])\n  VLC_RESTORE_FLAGS\n  ])\n])\n\ndnl\ndnl  JPEG decoder module\ndnl\nAC_ARG_ENABLE([jpeg],\n  AS_HELP_STRING([--enable-jpeg], [JPEG support (default enabled)]))\nAS_IF([test \"${enable_jpeg}\" != \"no\"], [\n  AC_CHECK_HEADERS([jpeglib.h], [\n    AC_MSG_CHECKING([for JPEG library source/destination support])\n    AC_PREPROC_IFELSE([AC_LANG_PROGRAM([[\n#include <jpeglib.h>\n#if (JPEG_LIB_VERSION < 80) && !defined(MEM_SRCDST_SUPPORTED)\n#error JPEG library too old\n#endif]],[[;]])\n    ],[\n      AC_MSG_RESULT([yes])\n      VLC_ADD_PLUGIN([jpeg])\n    ], [\n      AC_MSG_RESULT([no])\n    ])\n  ])\n])\n\ndnl\ndnl  BPG decoder module\ndnl\nAC_ARG_ENABLE([bpg],\n  AS_HELP_STRING([--enable-bpg], [BPG support (default disabled)]))\nAS_IF([test \"${enable_bpg}\" != \"no\"], [\nAC_CHECK_HEADERS([libbpg.h], [\n  VLC_ADD_PLUGIN([bpg])\n  ])\n])\n\ndnl\ndnl H262 encoder plugin (lib262)\ndnl\nAC_ARG_ENABLE([x262],\n  AS_HELP_STRING([--enable-x262], [H262 encoding support with static libx262 (default disabled)]))\nAS_IF([test \"${enable_x262}\" != \"no\"], [\n    PKG_CHECK_MODULES(X262, x262, [\n        VLC_ADD_PLUGIN([x262])\n        VLC_ADD_LIBS([x262],[${X262_LIBS}])\n        VLC_ADD_CFLAGS([x262],[${X262_CFLAGS}])\n    ],[\n       AS_IF([test \"${enable_x262}\" = \"yes\"], [\n        AC_MSG_ERROR([x262 module does not work without statically compiled libx262.a])\n       ])\n    ])\n])\n\ndnl x265 encoder\nPKG_ENABLE_MODULES_VLC([X265],, [x265], [HEVC/H.265 encoder], [auto])\n\ndnl\ndnl H264 encoder plugin (using libx264)\ndnl\nAC_ARG_ENABLE([x264],\n  AS_HELP_STRING([--enable-x264], [H264 encoding support with libx264 (default enabled)]))\nif test \"${enable_x264}\" != \"no\"; then\n      PKG_CHECK_MODULES(X264,x264 >= 0.148, [\n        VLC_ADD_PLUGIN([x264])\n        VLC_ADD_LIBS([x264],[${X264_LIBS}])\n        VLC_ADD_CFLAGS([x264],[${X264_CFLAGS}])\n      ],[\n        if test \"${enable_x264}\" = \"yes\"; then\n            AC_MSG_ERROR([${X264_PKG_ERRORS}: you may get it from http://www.videolan.org/x264.html])\n          fi\n      ])\nfi\n\ndnl\ndnl H264 encoder plugin (libx264 > 153)\ndnl\nAC_ARG_ENABLE([x26410b],\n  AS_HELP_STRING([--enable-x26410b], [H264 10-bit encoding support with libx264 (default enabled)]))\nif test \"${enable_x26410b}\" != \"no\"; then\n      PKG_CHECK_MODULES(X26410b,x264 >= 0.153, [\n        VLC_ADD_PLUGIN([x26410b])\n        VLC_ADD_LIBS([x26410b],[${X264_LIBS}])\n        VLC_ADD_CFLAGS([x26410b],[${X264_CFLAGS}])\n      ],[\n        if test \"${enable_x26410b}\" = \"yes\"; then\n            AC_MSG_ERROR([${X264_PKG_ERRORS}: you may get it from http://www.videolan.org/x264.html])\n          fi\n      ])\nfi\n\n\ndnl\ndnl Intel Video Processing Library\ndnl\nPKG_ENABLE_MODULES_VLC([VPL], [qsv], [vpl], [Intel Video Processing Library encoder], [auto])\n\n\ndnl\ndnl  AVS2 decoder module (davs2)\ndnl\nPKG_ENABLE_MODULES_VLC([DAVS2], [davs2], [davs2], [AVS2 video decoder with libdavs2], [auto])\n\n\ndnl\ndnl libfluidsynth (MIDI synthetizer) plugin\ndnl\nPKG_ENABLE_MODULES_VLC([FLUIDSYNTH], [], [fluidsynth >= 1.1.2], [MIDI synthetiser with libfluidsynth], [auto])\nPKG_ENABLE_MODULES_VLC([FLUIDLITE], [fluidsynth], [fluidlite], [MIDI synthetiser with libfluidsynth], [auto])\nAC_CHECK_HEADERS([fluidlite.h], [AC_SUBST([FLUIDSYNTH_LIBS], ${FLUIDLITE_LIBS})])\n\ndnl\ndnl Teletext Modules\ndnl vbi decoder plugin (using libzbvi)\ndnl telx module\ndnl uncompatible\ndnl\nAC_ARG_ENABLE([zvbi],\n  AS_HELP_STRING([--enable-zvbi],[VBI (inc. Teletext) decoding support with\n                  libzvbi (default enabled)]))\nAC_ARG_ENABLE([telx],\n  AS_HELP_STRING([--enable-telx],[Teletext decoding module (conflicting with\n                  zvbi) (default enabled if zvbi is absent)]))\n\nAS_IF( [test \"${enable_zvbi}\" != \"no\"],[\n    PKG_CHECK_MODULES(ZVBI, [zvbi-0.2 >= 0.2.28],\n        [\n          VLC_ADD_PLUGIN([zvbi])\n          AC_DEFINE(ZVBI_COMPILED, 1, [Define if the zvbi module is built])\n          have_zvbi=\"yes\"\n          AS_IF( [test \"${enable_telx}\" = \"yes\"],[\n                  AC_MSG_WARN([The zvbi and telx modules are incompatible. Using zvbi.])\n                  ])\n        ],[\n          AC_MSG_WARN([${ZVBI_PKG_ERRORS}. Enabling the telx module instead.])\n        ])\n    ])\nAM_CONDITIONAL([HAVE_ZVBI], [test \"x${have_zvbi}\" = x\"yes\"])\n\nAS_IF( [test \"${enable_telx}\" != \"no\" ],[\n  VLC_ADD_PLUGIN([telx])\n  have_telx=\"yes\"\n  AC_DEFINE(TELX_COMPILED, 1, [Define if the telx module is built])\n  ])\nAM_CONDITIONAL([HAVE_TELX], [test \"x${have_telx}\" = x\"yes\"])\n\ndnl\ndnl ARIB caption rendering module\ndnl\nPKG_ENABLE_MODULES_VLC([ARIBCAPTION], [], [libaribcaption], [ARIB caption decoder/renderer], [auto])\n\ndnl\ndnl ARIB subtitles rendering module\ndnl\nAC_ARG_ENABLE([aribsub],\n  AS_HELP_STRING([--enable-aribsub],[ARIB Subtitles support (default enabled)]))\nAS_IF( [test \"${enable_aribsub}\" != \"no\" ],[\n  PKG_CHECK_MODULES(ARIBB24, [aribb24 >= 1.0.1], [\n      have_aribb24=\"yes\"\n      VLC_ADD_PLUGIN([aribsub])\n      VLC_ADD_LIBS([aribsub],[-laribb24])\n      AC_DEFINE(HAVE_ARIBB24, 1, [Define if libaribb24 is available.])\n    ],[\n      AC_MSG_WARN(Library [aribb24] needed for [aribsub] was not found)\n      have_aribb24=\"no\"\n  ])\n])\nAM_CONDITIONAL([HAVE_ARIBB24], [test \"${have_aribb24}\" = \"yes\"])\n\ndnl\ndnl ARIB B25\ndnl\nPKG_ENABLE_MODULES_VLC([ARIBB25], [aribcam], [aribb25 >= 0.2.6], [ARIB STD-B25], [auto])\n\ndnl\ndnl  kate decoder plugin\ndnl\nPKG_ENABLE_MODULES_VLC([KATE], [], [kate >= 0.3.0], [kate codec], [auto])\n\ndnl\ndnl  tiger rendering for kate decoder plugin\ndnl\nAC_ARG_ENABLE([tiger],\nAS_HELP_STRING([--enable-tiger], [Tiger rendering library for Kate streams (default auto)]))\nAS_IF([test \"${enable_tiger}\" != \"no\"], [\n  PKG_CHECK_MODULES(TIGER,[tiger >= 0.3.1], [\n      AC_DEFINE(HAVE_TIGER, 1, [Define if libtiger is available.])],[\n        AS_IF([test -n \"${enable_tiger}\"], [\n          AC_MSG_ERROR([${TIGER_PKG_ERRORS}.])\n        ])\n  ])\n])\n\ndnl\ndnl  check if we can build the css selector engine\ndnl\nAC_ARG_ENABLE([css],\nAS_HELP_STRING([--enable-css], [CSS selector engine (default auto)]))\nAS_IF([test \"${enable_css}\" != \"no\"], [\n  with_css=\"yes\"\n  AC_DEFINE(HAVE_CSS, 1, [Define if CSS engine is built])\n])\nAM_CONDITIONAL([ENABLE_CSS], [test \"${with_css}\" = \"yes\"])\n\n\ndnl\ndnl  Video plugins\ndnl\n\nEXTEND_HELP_STRING([Video plugins:])\n\ndnl\ndnl  libplacebo support\ndnl\nAC_ARG_ENABLE([libplacebo],\n  AS_HELP_STRING([--disable-libplacebo],\n      [disable libplacebo support (default auto)]))\n\nhave_libplacebo_gl=\"no\"\nAS_IF([test \"$enable_libplacebo\" != \"no\"], [\n  PKG_CHECK_MODULES([LIBPLACEBO], [libplacebo >= 4.192], [\n    AC_DEFINE([HAVE_LIBPLACEBO], [1], [Define to 1 if libplacebo is enabled.])\n    AC_CHECK_HEADER([libplacebo/vulkan.h], [VLC_ADD_PLUGIN([placebo_vk])])\n    AC_CHECK_HEADER([libplacebo/opengl.h], [\n        AC_DEFINE([HAVE_LIBPLACEBO_GL], [1], [Define to 1 if <libplacebo/opengl.h> is available.])\n        VLC_ADD_PLUGIN([placebo_gl])\n        VLC_ADD_PLUGIN([placebo_gles2])\n        have_libplacebo_gl=\"yes\"\n    ])\n  ], [\n    AS_IF([test -n \"${enable_libplacebo}\"], [\n      AC_MSG_ERROR([${LIBPLACEBO_PKG_ERRORS}.])\n    ])\n    enable_libplacebo=\"no\"\n  ])\n])\nAM_CONDITIONAL([HAVE_LIBPLACEBO], [test \"$enable_libplacebo\" != \"no\"])\nAM_CONDITIONAL([HAVE_LIBPLACEBO_GL], [test \"$have_libplacebo_gl\" = \"yes\"])\n\ndnl\ndnl  OpenGL\ndnl\nPKG_HAVE_WITH_MODULES([EGL], [egl])\n\nhave_gl=\"no\"\nPKG_CHECK_MODULES([GL], [gl], [\n  have_gl=\"yes\"\n], [\n  AC_COMPILE_IFELSE([AC_LANG_PROGRAM([[\n#ifdef _WIN32\n# include <GL/glew.h>\n#endif\n#include <GL/gl.h>\n]], [\n    [int t0 = GL_TEXTURE0;]])\n  ], [\n    GL_CFLAGS=\"\"\n    AS_IF([test \"${SYS}\" != \"mingw32\"], [\n      AC_CHECK_LIB([GL], [glTexture2D], [\n        have_gl=\"yes\"\n        GL_LIBS=\"-lGL\"\n      ])\n    ], [\n      have_gl=\"yes\"\n      GL_LIBS=\"-lopengl32\"\n    ])\n    AC_CHECK_HEADERS([GL/glew.h], [\n      AC_CHECK_HEADERS([GL/wglew.h], [\n        VLC_ADD_PLUGIN([glwin32 wgl])\n      ], [], [\n        #include <windows.h>\n        #include <GL/glew.h>\n      ])\n    ], [], [#include <windows.h>])\n  ])\n  AC_MSG_CHECKING([for OpenGL])\n  AC_MSG_RESULT([${have_gl}])\n])\nAM_CONDITIONAL([HAVE_GL], [test \"${have_gl}\" = \"yes\"])\n\ndnl OpenGL ES 2: depends on EGL 1.1\nPKG_HAVE_WITH_MODULES([GLES2], [glesv2], [enable GLES2 support (default auto)])\n\ndnl\ndnl Vulkan\ndnl\nAC_ARG_ENABLE(vulkan,\n  [AS_HELP_STRING([--disable-vulkan],\n      [disable Vulkan support (default auto)])])\n\nAS_IF([test \"$enable_vulkan\" != \"no\"], [\n  PKG_CHECK_MODULES([VULKAN], [vulkan >= 1.0.26], [\n  ], [\n    AS_IF([test -n \"${enable_vulkan}\"], [\n      AC_MSG_ERROR([${VULKAN_PKG_ERRORS}.])\n    ])\n    enable_vulkan=\"no\"\n  ])\n])\nAM_CONDITIONAL(HAVE_VULKAN, [test \"$enable_vulkan\" != \"no\"])\n\ndnl\ndnl  Xlib\ndnl\n\nAC_PATH_XTRA()\nAM_CONDITIONAL([HAVE_X], [test \"$no_x\" != \"yes\"])\n\ndnl\ndnl  X C Bindings modules\ndnl\nAC_ARG_ENABLE([xcb],\n  AS_HELP_STRING([--enable-xcb], [X11 support with XCB (default enabled)]),, [\n  AS_IF([test \"${SYS}\" != \"mingw32\" -a \"${SYS}\" != \"darwin\"], [\n    enable_xcb=\"yes\"\n  ], [\n    enable_xcb=\"no\"\n  ])\n])\n\nhave_xcb=\"no\"\nhave_xkbcommon_x11=\"no\"\nhave_xcb_keysyms=\"no\"\nhave_xcb_damage=\"no\"\nhave_xcb_xfixes=\"no\"\nAS_IF([test \"${enable_xcb}\" != \"no\"], [\n  xcb_err=\"\"\n\n  dnl libxcb\n  PKG_CHECK_MODULES([XCB], [xcb >= 1.8],, [\n    xcb_err=\"$xcb_err ${XCB_PKG_ERRORS}.\"])\n  PKG_CHECK_MODULES([XCB_COMPOSITE], [xcb-composite],, [\n    xcb_err=\"$xcb_err ${XCB_COMPOSITE_PKG_ERRORS}.\"])\n  PKG_CHECK_MODULES([XCB_RANDR], [xcb-randr >= 1.3],, [\n    xcb_err=\"$xcb_err ${XCB_RANDR_PKG_ERRORS}.\"])\n  PKG_CHECK_MODULES([XCB_RENDER], [xcb-render],, [\n    xcb_err=\"$xcb_err ${XCB_RENDER_PKG_ERRORS}.\"])\n  PKG_CHECK_MODULES([XCB_SHM], [xcb-shm >= 1.9.2],, [\n    xcb_err=\"$xcb_err ${XCB_SHM_PKG_ERRORS}.\"])\n  PKG_CHECK_MODULES([XCB_XKB], [xcb-xkb],, [\n    xcb_err=\"$xcb_err ${XCB_XKB_PKG_ERRORS}.\"])\n\n  dnl xproto\n  PKG_CHECK_MODULES(XPROTO, [xproto],, [\n    xcb_err=\"$xcb_err ${XPROTO_PKG_ERRORS}.\"])\n\n  AS_IF([test -n \"$xcb_err\"], [\n    AC_MSG_ERROR([$xcb_err Pass --disable-xcb to skip X11 support.])\n  ])\n\n  dnl xkbcommon\n  PKG_CHECK_MODULES([XKBCOMMON_X11], [xkbcommon-x11], [\n    have_xkbcommon_x11=\"yes\"\n  ], [\n    AC_MSG_WARN([${XKBCOMMON_X11_PKG_ERRORS}. Hotkeys are disabled.])\n  ])\n\n  dnl xcb-utils\n  PKG_CHECK_MODULES([XCB_KEYSYMS], [xcb-keysyms >= 0.3.4], [\n    have_xcb_keysyms=\"yes\"\n  ], [\n    AC_MSG_WARN([${XCB_KEYSYMS_PKG_ERRORS}. Global hotkeys are disabled.])\n  ])\n\n  dnl xcb-damage\n  PKG_CHECK_MODULES([XCB_DAMAGE], [xcb-damage], [\n      have_xcb_damage=\"yes\"\n  ], [\n    AC_MSG_WARN([${XCB_DAMAGE_PKG_ERRORS}. Qt X11 composition disabled.])\n  ])\n\n  dnl xcb-fixes\n  PKG_CHECK_MODULES([XCB_XFIXES], [xcb-xfixes], [\n      have_xcb_xfixes=\"yes\"\n  ], [\n    AC_MSG_WARN([${XCB_XFIXES_PKG_ERRORS}. Qt X11 composition disabled.])\n  ])\n\n\n  have_xcb=\"yes\"\n])\nAM_CONDITIONAL([HAVE_XCB], [test \"${have_xcb}\" = \"yes\"])\nAM_CONDITIONAL([HAVE_XKBCOMMON_X11], [test \"${have_xkbcommon_x11}\" = \"yes\"])\nAM_CONDITIONAL([HAVE_XCB_KEYSYMS], [test \"${have_xcb_keysyms}\" = \"yes\"])\nAM_CONDITIONAL([HAVE_XCB_DAMAGE], [test \"${have_xcb_damage}\" = \"yes\"])\nAM_CONDITIONAL([HAVE_XCB_XFIXES], [test \"${have_xcb_xfixes}\" = \"yes\"])\n\ndnl\ndnl VDPAU needs X11\ndnl\nAC_ARG_ENABLE([vdpau],\n  [AS_HELP_STRING([--enable-vdpau], [VDPAU hardware support (default auto)])])\nhave_vdpau=\"no\"\nAS_IF([test \"${enable_vdpau}\" != \"no\"], [\n  PKG_CHECK_MODULES([VDPAU], [vdpau >= 0.6], [\n    have_vdpau=\"yes\"\n    AS_IF([test \"${no_x}\" = \"yes\"], [\n      AC_MSG_ERROR([VDPAU requires Xlib (X11).])\n    ])\n  ], [\n    AS_IF([test -n \"${enable_vdpau}\"], [\n      AC_MSG_ERROR([${VDPAU_PKG_ERRORS}.])\n    ])\n  ])\n])\nAM_CONDITIONAL([HAVE_VDPAU], [test \"${have_vdpau}\" = \"yes\"])\n\nhave_avcodec_vdpau=\"no\"\nAS_IF([test \"${have_vdpau}\" = \"yes\" -a \"${enable_avcodec}\" != \"no\"], [\n  have_avcodec_vdpau=\"yes\"\n  AC_MSG_NOTICE([VDPAU decoding acceleration activated])\n])\nAM_CONDITIONAL([HAVE_AVCODEC_VDPAU], [test \"${have_avcodec_vdpau}\" = \"yes\"])\n\n\ndnl\ndnl  Wayland\ndnl\nAC_ARG_ENABLE([wayland],\n  AS_HELP_STRING([--enable-wayland], [Wayland support (default auto)]))\n\nhave_wayland=\"no\"\nAS_IF([test \"${enable_wayland}\" != \"no\"], [\n  wl_err=\"\"\n\n  dnl wayland\n  PKG_CHECK_MODULES([WAYLAND_CLIENT], [wayland-client >= 1.19.91],, [\n    wl_err=\"$wl_err ${WAYLAND_CLIENT_PKG_ERRORS}.\"\n  ])\n  PKG_CHECK_MODULES([WAYLAND_CURSOR], [wayland-cursor],, [\n    wl_err=\"$wl_err ${WAYLAND_CURSOR_PKG_ERRORS}.\"\n  ])\n  PKG_CHECK_MODULES([WAYLAND_EGL], [wayland-egl],, [\n    wl_err=\"$wl_err ${WAYLAND_EGL_PKG_ERRORS}.\"\n  ])\n  AS_VAR_SET_IF(WAYLAND_SCANNER, [],[\n    PKG_CHECK_MODULES([WAYLAND_SCANNER], [wayland-scanner >= 1.15], [\n      WAYLAND_SCANNER=\"$(${PKG_CONFIG} wayland-scanner --variable wayland_scanner)\"\n    ], [\n      wl_err=\"$wl_err ${WAYLAND_SCANNER_PKG_ERRORS}.\"\n    ])\n  ])\n\n  dnl wayland-protocols\n  PKG_CHECK_MODULES([WAYLAND_PROTOCOLS], [wayland-protocols >= 1.15], [\n    WAYLAND_PROTOCOLS=\"$(${PKG_CONFIG} wayland-protocols --variable pkgdatadir)\"\n  ], [\n    wl_err=\"$wl_err ${WAYLAND_PROTOCOLS_PKG_ERRORS}.\"\n  ])\n\n  AS_IF([test -n \"$wl_err\"], [\n    AS_IF([test -n \"$enable_wayland\"], [\n      AC_MSG_ERROR([$wl_err])\n    ], [\n      AC_MSG_WARN([$wl_err])\n    ])\n  ], [\n    have_wayland=\"yes\"\n  ])\n\n  dnl xkbcommon\n  PKG_CHECK_MODULES([XKBCOMMON], [xkbcommon], [\n    have_xkbcommon=\"yes\"\n  ], [\n    AC_MSG_WARN([${XKBCOMMON_PKG_ERRORS}. Hotkeys are disabled.])\n  ])\n])\nAM_CONDITIONAL([HAVE_WAYLAND], [test \"${have_wayland}\" = \"yes\"])\nAC_SUBST([WAYLAND_PROTOCOLS])\nAC_SUBST([WAYLAND_SCANNER])\nAM_CONDITIONAL([HAVE_XKBCOMMON], [test \"${have_xkbcommon}\" = \"yes\"])\n\n\ndnl\ndnl  freetype module\ndnl\nAC_ARG_ENABLE([freetype],\n  AS_HELP_STRING([--enable-freetype],   [freetype support   (default auto)]))\nAC_ARG_ENABLE([fribidi],\n  AS_HELP_STRING([--enable-fribidi],    [fribidi support    (default auto)]))\nAC_ARG_ENABLE([harfbuzz],\n  AS_HELP_STRING([--enable-harfbuzz],   [harfbuzz support   (default auto)]))\nAC_ARG_ENABLE([fontconfig],\n  AS_HELP_STRING([--enable-fontconfig], [fontconfig support (default auto)]))\n\nAC_ARG_WITH([default-font],\n    AS_HELP_STRING([--with-default-font=PATH],\n        [Path to the default font]),\n        [AC_DEFINE_UNQUOTED([DEFAULT_FONT_FILE],\n            \"$withval\", [Default font])])\nAC_ARG_WITH([default-monospace-font],\n    AS_HELP_STRING([--with-default-monospace-font=PATH],\n        [Path to the default font]),\n        [AC_DEFINE_UNQUOTED([DEFAULT_MONOSPACE_FONT_FILE],\n            \"$withval\", [Default monospace font])])\n\nAC_ARG_WITH([default-font-family],\n    AS_HELP_STRING([--with-default-font-family=NAME],\n        [Name of the default font family]),\n        [AC_DEFINE_UNQUOTED([DEFAULT_FAMILY],\n            \"$withval\", [Default font family])])\nAC_ARG_WITH([default-monospace-font-family],\n    AS_HELP_STRING([--with-default-monospace-font-family=NAME],\n        [Name of the default font family]),\n        [AC_DEFINE_UNQUOTED([DEFAULT_MONOSPACE_FAMILY],\n            \"$withval\", [Default monospace font family])])\n\nhave_freetype=\"no\"\nhave_fontconfig=\"no\"\nhave_fribidi=\"no\"\nhave_harfbuzz=\"no\"\n\nif test \"${enable_freetype}\" != \"no\"; then\n   PKG_CHECK_MODULES(FREETYPE, freetype2, [\n      have_freetype=\"yes\"\n      VLC_ADD_CPPFLAGS([skins2],[${FREETYPE_CFLAGS}])\n      VLC_ADD_LIBS([skins2],[${FREETYPE_LIBS}])\n\n    dnl fontconfig support\n    AS_IF([test \"${enable_fontconfig}\" != \"no\" -a \"${SYS}\" != \"mingw32\" -a \"${SYS}\" != \"darwin\"], [\n      PKG_CHECK_MODULES(FONTCONFIG, [fontconfig >= 2.11], [\n        have_fontconfig=\"yes\"\n      ], [\n        AC_MSG_WARN([${FONTCONFIG_PKG_ERRORS}. Styles will be disabled in FreeType.])\n      ])\n    ])\n\n      dnl fribidi support\n      if test \"${enable_fribidi}\" != \"no\"; then\n        PKG_CHECK_MODULES(FRIBIDI, fribidi, [\n          have_fribidi=\"yes\"\n          VLC_ADD_CPPFLAGS([skins2], [${FRIBIDI_CFLAGS} -DHAVE_FRIBIDI])\n          VLC_ADD_LIBS([skins2], [${FRIBIDI_LIBS}])\n        ],[AC_MSG_WARN([${FRIBIDI_PKG_ERRORS}. Bidirectional text and complex scripts (Arabic, Farsi, Thai...) will be disabled in FreeType.])])\n      fi\n\n      dnl harfbuzz support\n      if test \"${have_fribidi}\" != \"no\"; then\n        if test \"${enable_harfbuzz}\" != \"no\"; then\n          PKG_CHECK_MODULES(HARFBUZZ, harfbuzz, [\n            have_harfbuzz=\"yes\"\n            VLC_ADD_CPPFLAGS([skins2], [${HARFBUZZ_CFLAGS} -DHAVE_HARFBUZZ])\n            VLC_ADD_LIBS([skins2], [${HARFBUZZ_LIBS}])\n          ],[AC_MSG_WARN([${HARFBUZZ_PKG_ERRORS}. Support for complex scripts (Arabic, Farsi, Thai...) will be disabled in FreeType.])])\n        fi\n      fi\n  ],[\n  AS_IF([test -n \"${enable_freetype}\"],[\n    AC_MSG_ERROR([${FREETYPE_PKG_ERRORS}. Install FreeType2 development or configure with --disable-freetype.])\n    ])\n  ])\nfi\n\nAM_CONDITIONAL([HAVE_FREETYPE], [test \"${have_freetype}\" = \"yes\"])\nAM_CONDITIONAL([HAVE_FONTCONFIG], [test \"${have_fontconfig}\" = \"yes\"])\nAM_CONDITIONAL([HAVE_FRIBIDI], [test \"${have_fribidi}\" = \"yes\"])\nAM_CONDITIONAL([HAVE_HARFBUZZ], [test \"${have_harfbuzz}\" = \"yes\"])\n\ndnl\ndnl libass subtitle rendering module\ndnl\nAC_ARG_ENABLE([libass],\n  AS_HELP_STRING([--enable-libass], [Subtitle support using libass (default enabled)]))\nAS_IF( [test \"${enable_libass}\" != \"no\"], [\n  PKG_CHECK_MODULES(LIBASS, [libass >= 0.9.8],\n      [\n        VLC_ADD_PLUGIN([libass])\n\n        if test \"${have_fontconfig}\" != \"no\"; then\n            VLC_ADD_CPPFLAGS([libass],[-DHAVE_FONTCONFIG])\n            VLC_ADD_LIBS([libass],[${FONTCONFIG_LIBS}])\n        fi\n      ],[\n        AC_MSG_WARN([${LIBASS_PKG_ERRORS}.])\n      ])\n  ])\n\ndnl\ndnl SAPI (text to Speech renderer for Windows)\ndnl\nAC_LANG_PUSH([C++])\nAC_CHECK_TYPES([ISpObjectToken],[\n              have_sapi=\"yes\"\n            ],[AC_MSG_WARN([sapi.h not found. Text to Speech renderer for Windows disabled])],\n              [#include <windows.h>\n               #include <sapi.h>\n               #include <sphelper.h>])\nAM_CONDITIONAL([HAVE_SAPI], [test \"${have_sapi}\" = \"yes\"])\nAC_LANG_POP([C++])\n\ndnl\ndnl  SVG module (text rendering and image decoding)\ndnl\nPKG_ENABLE_MODULES_VLC([SVG], [], [librsvg-2.0 >= 2.9.0], [SVG rendering library],[auto])\nPKG_ENABLE_MODULES_VLC([SVGDEC], [], [librsvg-2.0 >= 2.9.0 cairo >= 1.13.1], [SVG image decoder library],[auto])\n\ndnl\ndnl  Windows DirectX module\ndnl\n\nAC_ARG_ENABLE([directx],\n  AS_HELP_STRING([--enable-directx],\n    [Microsoft DirectX support (default enabled on Windows)]),, [\n  AS_IF([test \"${SYS}\" = \"mingw32\"], [\n    enable_directx=\"yes\"\n  ], [\n    enable_directx=\"no\"\n  ])\n])\nAS_IF([test \"${enable_directx}\" != \"no\"], [\n  dnl Direct3D11\n  VLC_ADD_PLUGIN([direct3d11 direct3d11_filters])\n\n  dnl Direct3D9\n  VLC_ADD_PLUGIN([direct3d9 direct3d9_filters])\n])\n\ndnl\ndnl  Direct Rendering Manager (DRM) plugins\ndnl\nAC_CHECK_HEADER([drm/drm_mode.h], [\n  have_drm=\"yes\"\n], [\n  have_drm=\"no\"\n])\nAM_CONDITIONAL([HAVE_DRM], [test \"$have_drm\" = \"yes\"])\n\nPKG_HAVE_WITH_MODULES([LIBDRM], [libdrm >= 2.4.83], [Linux kernel mode setting output], [auto])\n\ndnl\ndnl  libcaca plugin\ndnl\nPKG_ENABLE_MODULES_VLC([CACA], [], [caca >= 0.99.beta14], [libcaca output],[auto])\n\ndnl\ndnl  OS/2 KVA plugin\ndnl\nAC_ARG_ENABLE([kva],\n  AS_HELP_STRING([--enable-kva],\n    [support the K Video Accelerator KVA (default enabled on OS/2)]),, [\n  AS_IF([test \"$SYS\" = \"os2\"], [\n    enable_kva=\"yes\"\n  ])\n])\nhave_kva=\"no\"\nKVA_LIBS=\"\"\nAS_IF([test \"$enable_kva\" != \"no\"], [\n  AC_CHECK_HEADERS([kva.h], [\n    have_kva=\"yes\"\n    AC_CHECK_LIB([kva], [main], [\n      KVA_LIBS=\"-lkva\"\n    ])\n  ])\n])\nAC_SUBST([KVA_LIBS])\nAM_CONDITIONAL([HAVE_KVA], [test \"${have_kva}\" = \"yes\"])\n\ndnl\ndnl MMAL plugin\ndnl\nMMAL_CFLAGS=\"\"\nMMAL_LIBS=\"\"\nAC_ARG_ENABLE([mmal],\n  AS_HELP_STRING([--enable-mmal],\n    [Multi-Media Abstraction Layer (MMAL) hardware plugin (default enable)]))\nif test \"${enable_mmal}\" != \"no\"; then\n  VLC_SAVE_FLAGS\n  LDFLAGS=\"${LDFLAGS} -L/opt/vc/lib -lvchostif\"\n  CPPFLAGS=\"${CPPFLAGS} -isystem /opt/vc/include -isystem /opt/vc/include/interface/vcos/pthreads -isystem /opt/vc/include/interface/vmcs_host/linux\"\n  AC_CHECK_HEADERS([interface/mmal/mmal.h],\n    [ AC_CHECK_LIB([bcm_host], [vc_tv_unregister_callback_full], [\n        have_mmal=\"yes\"\n        MMAL_CFLAGS=\"-isystem /opt/vc/include -isystem /opt/vc/include/interface/vcos/pthreads -isystem /opt/vc/include/interface/vmcs_host/linux\"\n        MMAL_LIBS=\"-L/opt/vc/lib -lbcm_host -lmmal -lmmal_core -lmmal_components -lmmal_util -lvchostif -lvcsm -lvchiq_arm\"\n        ],[\n        AS_IF([test \"${enable_mmal}\" = \"yes\"],\n            [ AC_MSG_ERROR([Cannot find bcm library...]) ],\n            [ AC_MSG_WARN([Cannot find bcm library...]) ])\n          ],\n        [])\n    ] , [ AS_IF([test \"${enable_mmal}\" = \"yes\"],\n      [ AC_MSG_ERROR([Cannot find development headers for mmal...]) ],\n      [ AC_MSG_WARN([Cannot find development headers for mmal...]) ]) ])\n  VLC_RESTORE_FLAGS\nfi\nAC_SUBST([MMAL_CFLAGS])\nAC_SUBST([MMAL_LIBS])\nAM_CONDITIONAL([HAVE_MMAL], [test \"${have_mmal}\" = \"yes\"])\n\ndnl\ndnl  Audio plugins\ndnl\n\nEXTEND_HELP_STRING([Audio plugins:])\n\ndnl\ndnl  Pipewire module\ndnl\nAC_ARG_ENABLE([pipewire],\n  AS_HELP_STRING([--enable-pipewire],\n    [use the PipeWire client library (default auto)]))\nhave_pipewire=\"no\"\nAS_IF([test \"${enable_pipewire}\" != \"no\"], [\n  for v in \"0.3 >= 0.3.64\" # list of supported package versions\n  do\n    AS_IF([test \"${have_pipewire}\" = \"no\"], [\n      PKG_CHECK_MODULES([PIPEWIRE], [libpipewire-${v}], [\n        have_pipewire=\"yes\"\n      ], [true])\n    ])\n  done\n  AS_IF([test \"${enable_pipewire}\" = \"yes\" -a \"${have_pipewire}\" = \"no\"], [\n    AC_MSG_ERROR([$PIPEWIRE_PKG_ERRORS. Pipewire required.])\n  ])\n])\nAM_CONDITIONAL([HAVE_PIPEWIRE], [test \"${have_pipewire}\" = \"yes\"])\n\ndnl\ndnl  Pulseaudio module\ndnl\nAC_ARG_ENABLE([pulse],\n  AS_HELP_STRING([--enable-pulse],\n    [use the PulseAudio client library (default auto)]))\nhave_pulse=\"no\"\nAS_IF([test \"${enable_pulse}\" != \"no\"], [\n  PKG_CHECK_MODULES([PULSE], [libpulse >= 6.0], [\n    have_pulse=\"yes\"\n  ], [\n    AS_IF([test \"x${enable_pulse}\" != \"x\"], [\n      AC_MSG_ERROR([$PULSE_PKG_ERRORS. PulseAudio 6.0 or later required.])\n    ])\n  ])\n])\nAM_CONDITIONAL([HAVE_PULSE], [test \"${have_pulse}\" = \"yes\"])\n\ndnl\ndnl  ALSA module\ndnl\nAC_ARG_ENABLE([alsa],\n  AS_HELP_STRING([--enable-alsa],\n    [support the Advanced Linux Sound Architecture (default auto)]),, [\n  AS_IF([test \"$SYS\" = \"linux\" -a \"${have_pulse}\" = \"no\"], [\n    enable_alsa=\"yes\"\n  ])\n])\nhave_alsa=\"no\"\nAS_IF([test \"${enable_alsa}\" != \"no\"], [\n  PKG_CHECK_MODULES([ALSA], [alsa >= 1.0.24], [\n    have_alsa=\"yes\"\n  ], [\n    AS_IF([test \"x${enable_alsa}\" != \"x\"], [\n      AC_MSG_ERROR([$ALSA_PKG_ERRORS. alsa-lib 1.0.24 or later required. Pass --disable-alsa to ignore this error.])\n    ])\n  ])\n])\nAM_CONDITIONAL([HAVE_ALSA], [test \"${have_alsa}\" = \"yes\"])\n\ndnl\ndnl  Open Sound System module\ndnl\nAC_ARG_ENABLE([oss],\n  AS_HELP_STRING([--enable-oss],\n    [support the Open Sound System OSS (default enabled on FreeBSD/NetBSD/DragonFlyBSD)]),, [\n  AS_IF([test \"$SYS\" = \"mingw32\" -o \"$SYS\" = \"linux\"], [\n    enable_oss=\"no\"\n  ])\n])\nhave_oss=\"no\"\nOSS_LIBS=\"\"\nAS_IF([test \"$enable_oss\" != \"no\"], [\n  AC_CHECK_HEADERS([sys/soundcard.h], [\n    have_oss=\"yes\"\n    AC_CHECK_LIB([ossaudio], [main], [\n      OSS_LIBS=\"-lossaudio\"\n    ])\n  ])\n])\nAC_SUBST([OSS_LIBS])\nAM_CONDITIONAL([HAVE_OSS], [test \"${have_oss}\" = \"yes\"])\n\ndnl\ndnl  OpenBSD sndio module\ndnl\nAC_ARG_ENABLE([sndio],\n  AS_HELP_STRING([--disable-sndio],\n    [support the OpenBSD sndio (default auto)]),, [\n  AS_IF([test \"$SYS\" = \"openbsd\"], [\n    enable_sndio=\"yes\"\n  ])\n])\nhave_sndio=\"no\"\nAS_IF([test \"$enable_sndio\" != \"no\"], [\n  PKG_CHECK_MODULES([SNDIO], [sndio], [\n    have_sndio=\"yes\"\n  ], [\n    AS_IF([test -n \"$enable_sndio\"], [\n      AC_MSG_ERROR([${SNDIO_PKG_ERRORS}.)])\n    ])\n  ])\n])\nAM_CONDITIONAL([HAVE_SNDIO], [test \"${have_sndio}\" = \"yes\"])\n\ndnl\ndnl  Windows Audio Session plugin\ndnl\nAC_ARG_ENABLE([wasapi],\n  AS_HELP_STRING([--enable-wasapi],\n    [use the Windows Audio Session API (default auto)])\n)\nhave_wasapi=\"no\"\nAS_IF([test \"$enable_wasapi\" != \"no\"], [\n  AC_CHECK_HEADER([audioclient.h], [\n    have_wasapi=\"yes\"\n  ], [\n    AS_IF([test \"x${enable_wasapi}\" != \"x\"], [\n      AC_MSG_ERROR([Windows Audio Session API not found.])\n    ])\n  ])\n])\nAM_CONDITIONAL([HAVE_WASAPI], [test \"${have_wasapi}\" = \"yes\"])\n\ndnl\ndnl  JACK modules\ndnl\nAC_ARG_ENABLE([jack],\n  AS_HELP_STRING([--disable-jack],\n    [do not use jack (default auto)]))\nhave_jack=\"no\"\nAS_IF([test \"${enable_jack}\" != \"no\"], [\n    PKG_CHECK_MODULES(JACK, jack >= 1.9.7,\n      [ have_jack=yes ],\n      [\n      AC_MSG_WARN([${JACK_PKG_ERRORS}, trying jack1 instead])\n\n      PKG_CHECK_MODULES(JACK, jack >= 0.120.1 jack < 1.0,\n      [ have_jack=yes ],\n      [\n      AS_IF([test -n \"${enable_jack}\"],\n         [AC_MSG_ERROR([${JACK_PKG_ERRORS}.])],\n         [AC_MSG_WARN([${JACK_PKG_ERRORS}.])])\n      ])\n    ])\n])\nAM_CONDITIONAL([HAVE_JACK], [test \"${have_jack}\" != \"no\"])\n\ndnl\ndnl  OpenSLES Android\ndnl\nAC_ARG_ENABLE([opensles],\n  AS_HELP_STRING([--enable-opensles], [Android OpenSL ES audio module (default disabled)]))\nAS_IF([test \"${VENDOR}\" = \"android\" -a \"${enable_opensles}\" = \"yes\"],[\n  AC_CHECK_HEADERS([SLES/OpenSLES.h],\n    [ VLC_ADD_PLUGIN([opensles_android]) ],\n    [ AC_MSG_ERROR([cannot find OpenSLES headers])] )\n])\n\ndnl\ndnl libsamplerate plugin\ndnl\nPKG_ENABLE_MODULES_VLC([SAMPLERATE], [], [samplerate], [Resampler with libsamplerate], [auto])\n\ndnl\ndnl  soxr module\ndnl\nPKG_ENABLE_MODULES_VLC([SOXR], [], [soxr >= 0.1.2], [SoX Resampler library], [auto])\n\ndnl\ndnl  libebur128 module\ndnl\nPKG_ENABLE_MODULES_VLC([EBUR128], [], [libebur128 >= 1.2.4], [EBU R 128 standard for loudness normalisation], [auto])\n\ndnl\ndnl  OS/2 KAI plugin\ndnl\nAC_ARG_ENABLE([kai],\n  AS_HELP_STRING([--enable-kai],\n    [support the K Audio Interface KAI (default enabled on OS/2)]),, [\n  AS_IF([test \"$SYS\" = \"os2\"], [\n    enable_kai=\"yes\"\n  ])\n])\nhave_kai=\"no\"\nKAI_LIBS=\"\"\nAS_IF([test \"$enable_kai\" != \"no\"], [\n  AC_CHECK_HEADERS([kai.h], [\n    have_kai=\"yes\"\n    AC_CHECK_LIB([kai], [main], [\n      KAI_LIBS=\"-lkai\"\n    ])\n  ])\n])\nAC_SUBST([KAI_LIBS])\nAM_CONDITIONAL([HAVE_KAI], [test \"${have_kai}\" = \"yes\"])\n\ndnl\ndnl  chromaprint audio track fingerprinter\ndnl\nPKG_ENABLE_MODULES_VLC([CHROMAPRINT], [stream_out_chromaprint], [libchromaprint >= 0.6.0], [Chromaprint audio fingeprinter], [auto])\n\ndnl\ndnl  Chromecast streaming support\ndnl\nPKG_WITH_MODULES([CHROMECAST],[protobuf-lite], [],[\n    AS_IF([test \"${enable_chromecast}\" = \"yes\"],[\n        AC_MSG_ERROR(Library protobuf-lite needed for [chromecast] was not found)\n    ],[\n        AC_MSG_WARN(Library protobuf-lite needed for [chromecast] was not found)\n    ])\n    enable_chromecast=no\n], [(Chromecast streaming support)], [auto])\n\nAC_ARG_VAR(PROTOC, [protobuf compiler])\nAS_IF([test -n \"$PKG_CONFIG\"],[\n    AC_PATH_PROGS(PROTOC, [protoc], no, [\"${CONTRIB_DIR}/../bin:$PATH\"])\n    AS_IF([test \"${PROTOC}\" != \"no\"], [\n        dnl silently checks the protoc version matches the protobuf library\n        PROTOC_FULL_VERSION=\"$(eval ${PROTOC} --version 2>/dev/null | head -1 | sed s/'.* '//)\"\n        PROTOC_MAJ_VERSION=\"$(echo ${PROTOC_FULL_VERSION} | cut -d '.' -f -1)\"\n        AS_IF([test \"${PROTOC_MAJ_VERSION}\" -lt \"22\" ], [\n            dnl protoc x.y.z is compatible with protobuf x.y.z\n            PROTOBUF_VERSION=\"$(echo ${PROTOC_FULL_VERSION})\"\n            PROTOBUF_TEST=\"protobuf-lite == ${PROTOBUF_VERSION}\"\n        ],[\n            dnl protoc x.y is compatible with protobuf x.y.*\n            PROTOBUF_VERSION=\"$(echo ${PROTOC_FULL_VERSION} | cut -d '.' -f -2)\"\n            PROTOBUF_MAX_VERSION=\"${PROTOBUF_VERSION%.*}.$((${PROTOBUF_VERSION##*.}+1))\"\n            PROTOBUF_TEST=\"protobuf-lite >= ${PROTOBUF_VERSION} protobuf-lite < ${PROTOBUF_MAX_VERSION}\"\n        ])\n        AC_MSG_CHECKING([protobuf-lite matches ${PROTOC} version ${PROTOBUF_VERSION}])\n        ($PKG_CONFIG --exists --print-errors \"${PROTOBUF_TEST}\") 2>&AS_MESSAGE_FD\n        ac_status=$?\n        AS_IF([test $ac_status = 0],[\n            protoc_matching=yes\n            AC_MSG_RESULT([yes])\n        ],[\n            protoc_matching=no\n            AC_MSG_RESULT([no])\n        ])\n    ],[\n        protoc_matching=no\n    ])\n])\nAC_SUBST([PROTOBUF_VERSION])\nAM_CONDITIONAL([BUILD_CHROMECAST], [test \"${enable_chromecast}\" != \"no\" -a \"${protoc_matching}\" = yes])\n\ndnl\ndnl  Interface plugins\ndnl\n\nEXTEND_HELP_STRING([Interface plugins:])\n\ndnl\ndnl  KF6WindowSystem\ndnl\nPKG_CHECK_MODULES([KF6WINDOWSYSTEM], [KF6WindowSystem >= 6.0.0], [\n  have_kf6windowsystem=\"yes\"\n], [\n  have_kf6windowsystem=\"no\"\n])\nAM_CONDITIONAL([HAVE_KF6WINDOWSYSTEM], [test \"${have_kf6windowsystem}\" = \"yes\"])\n\ndnl\ndnl QT\ndnl\nAC_ARG_ENABLE([qt],\n  AS_HELP_STRING([--disable-qt], [Qt UI support (default enabled)]),, [\n  AS_IF([test \"${enable_vlc}\" != \"no\"], [enable_qt=\"yes\"])\n  AS_IF([test \"${SYS}\" = \"darwin\"], [\n    enable_qt=\"no\"\n  ])\n])\nhave_qt_gtk=\"no\"\nhave_qt_qtest=\"no\"\nhave_qt_quick_test=\"no\"\nhave_qt_gui_private=\"no\"\nhave_qt65=\"no\"\nhave_qt_zstd=\"no\"\nhave_fxc=\"no\"\nAS_IF([test \"${enable_qt}\" != \"no\"], [\n  have_qt=\"yes\"\n  dnl use any qmake that is available, including from contrib tools\n  AC_PATH_PROGS(QMAKE6, [qmake6], qmake6, [\"$PATH:${CONTRIB_DIR}/../bin\"])\n\n  AC_ARG_WITH([qtconf],\n    AS_HELP_STRING([--with-qtconf=PATH], [location of Qt6 qt.conf file (auto)])\n  )\n  AS_IF([test -z \"${with_qtconf}\"], [\n    AC_MSG_CHECKING([if contribs provide target_qt.conf])\n    AS_IF([test -e \"${CONTRIB_DIR}/bin/target_qt.conf\"], [\n      with_qtconf=${CONTRIB_DIR}/bin/target_qt.conf\n      AC_MSG_RESULT([yes])\n    ],[\n      AC_MSG_RESULT([no])\n    ])\n  ])\n\n  AS_IF([test -z \"${QMAKE6}\"], [\n    have_qt=\"no\"\n  ],[\n    AS_IF([test -n \"${with_qtconf}\"], [\n      QT_BIN_DIRECTORY=\"$(${QMAKE6} -qtconf ${with_qtconf} -query QT_HOST_BINS 2>/dev/null)\"\n      AC_MSG_CHECKING([if qmake6 is found with qtconf])\n      AS_IF([test -n \"${QT_BIN_DIRECTORY}\" -a -x \"${QT_BIN_DIRECTORY}/qmake6\"], [\n        QMAKE6=\"${QT_BIN_DIRECTORY}/qmake6\"\n        AC_MSG_RESULT([yes])\n      ],[\n        AC_MSG_RESULT([no])\n      ])\n    ])\n  ])\n\n  QT_PATHS=${QMAKE6}\n  AS_IF([test -n \"${with_qtconf}\"], [\n    QT_PATHS=\"${QMAKE6} -qtconf ${with_qtconf}\"\n  ])\n\n  QT_MINIMUM_VERSION=6.2\n  AC_MSG_CHECKING([Qt is at least ${QT_MINIMUM_VERSION}])\n  QT_VERSION_CORE=\"$(${QT_PATHS}          -query QT_VERSION 2>/dev/null)\"\n  QT_MINIMUM_MAJ=$(echo ${QT_MINIMUM_VERSION} | cut -d \".\" -f -1)\n  QT_MINIMUM_MIN=$(echo ${QT_MINIMUM_VERSION} | cut -d \".\" -f 2-2)\n  QT_VERSION_MAJ=$(echo ${QT_VERSION_CORE} | cut -d \".\" -f -1)\n  QT_VERSION_MIN=$(echo ${QT_VERSION_CORE} | cut -d \".\" -f 2-2)\n  AS_IF([test \"${QT_VERSION_MAJ:-0}\" -lt \"${QT_MINIMUM_MAJ}\" || (test \"${QT_VERSION_MAJ:-0}\" = \"${QT_MINIMUM_MAJ}\" && test \"${QT_VERSION_MIN:-0}\" -lt \"${QT_MINIMUM_MIN}\") ], [\n    AC_MSG_RESULT([(${QT_VERSION_CORE}) no])\n    have_qt=\"no\"\n  ],[\n    AC_MSG_RESULT([(${QT_VERSION_CORE}) yes])\n\n  AS_IF([test \"${QT_VERSION_MAJ:-0}\" -gt \"6\" || (test \"${QT_VERSION_MAJ:-0}\" = \"6\" && test \"${QT_VERSION_MIN:-0}\" -ge \"5\")], [\n    have_qt65=\"yes\"\n  ], [])\n\n  QT_BIN_DIRECTORY=\"$(${QT_PATHS}         -query QT_HOST_BINS 2>/dev/null)\"\n  AC_MSG_NOTICE([using ${QT_PATHS}])\n\n  AC_CHECK_PROGS(PYTHON3, [python3], [no])\n  AS_IF([test \"$PYTHON3\" == \"no\"], [\n    AC_MSG_WARN([python is required to detect Qt libraries/flags])\n    have_qt=\"no\"\n  ],[\n\n  AC_MSG_CHECKING([for Qt libraries])\n  srcdir_abs=`(cd ${srcdir} && pwd -P)`\n  QT_PKG_ERRORS=$(${PYTHON3} ${srcdir}/modules/gui/qt/scripts/static_dirs.py \\\n    --qmake \"${QMAKE6}\" --qtconf \"${with_qtconf}\" \\\n    --pro ${srcdir_abs}/modules/gui/qt/qt6.pro \\\n    --builddir ${ac_pwd}/modules/gui/qt \\\n    --libs)\n  ac_status=$?\n  AS_IF([test $ac_status = 0],[\n\n      AC_MSG_RESULT([yes])\n      QT_LIBS=${QT_PKG_ERRORS}\n      QT_CFLAGS=$(${PYTHON3} ${srcdir}/modules/gui/qt/scripts/static_dirs.py \\\n        --qmake \"${QMAKE6}\" --qtconf \"${with_qtconf}\" \\\n        --pro ${srcdir_abs}/modules/gui/qt/qt6.pro \\\n        --builddir ${ac_pwd}/modules/gui/qt \\\n        --cflags)\n      QT_LDFLAGS=$(${PYTHON3} ${srcdir}/modules/gui/qt/scripts/static_dirs.py \\\n        --qmake \"${QMAKE6}\" --qtconf \"${with_qtconf}\" \\\n        --pro ${srcdir_abs}/modules/gui/qt/qt6.pro \\\n        --builddir ${ac_pwd}/modules/gui/qt \\\n        --ldflags)\n      AC_SUBST([QT_LIBS])\n      AC_SUBST([QT_CFLAGS])\n      AC_SUBST([QT_LDFLAGS])\n\n      QT_LIBEXEC_DIRECTORY=\"$(${QT_PATHS}     -query QT_HOST_LIBEXECS 2>/dev/null)\"\n      QT_QML_LIBEXEC_DIRECTORY=${QT_LIBEXEC_DIRECTORY}\n      QT_SHADERTOOLS_BIN_DIRECTORY=${QT_BIN_DIRECTORY}\n\n      dnl check native in contribs and keep the full path if found there\n      AC_PATH_PROGS(MOC, [moc], moc, [\"${QT_LIBEXEC_DIRECTORY}\"])\n      AC_PATH_PROGS(RCC, [rcc], rcc, [\"${QT_LIBEXEC_DIRECTORY}\"])\n      AC_PATH_PROGS(UIC, [uic], uic, [\"${QT_LIBEXEC_DIRECTORY}\"])\n      AC_PATH_PROGS(QSB, [qsb], qsb, [\"${QT_SHADERTOOLS_BIN_DIRECTORY}\"])\n      AC_PATH_PROGS(QMLCACHEGEN, [qmlcachegen], no, [\"${QT_QML_LIBEXEC_DIRECTORY}\"])\n      AS_IF([test \"${QMLCACHEGEN}\" = \"no\"], [\n          AC_MSG_WARN([qmlcachegen not found])\n      ])\n\n      AC_MSG_CHECKING([if required Qt plugins are installed with ${QMAKE6} and conf ${with_qtconf}])\n\n      AS_IF([test \"${have_qt65}\" = \"yes\"], [\n        qt_qml_effects_module=\"QtQuick.Effects\"\n      ], [\n        qt_qml_effects_module=\"Qt5Compat.GraphicalEffects\"\n      ])\n      AS_IF([${PYTHON3} ${srcdir}/buildsystem/check_qml_module.py \\\n            --qmake \"${QMAKE6}\" \\\n            --qtconf \"${with_qtconf}\" \\\n            --modules \\\n            QtQml.Models=\"\" \\\n            QtQml.WorkerScript=\"\" \\\n            QtQuick.Layouts=\"\" \\\n            QtQuick.Window=\"\" \\\n            QtQuick.Controls=\"\" \\\n            ${qt_qml_effects_module}=\"\" \\\n            >&AS_MESSAGE_FD ], [\n        AC_MSG_RESULT([yes])\n      ],[\n        AC_MSG_RESULT([no])\n        AC_MSG_WARN([qt runtime dependencies are missing, disabling qt interface])\n        have_qt=\"no\"\n      ])\n\n      AC_MSG_CHECKING([if Qt can decompress zstd])\n      VLC_SAVE_FLAGS\n      CPPFLAGS=\"${CPPFLAGS} ${QT_CFLAGS}\"\n      AC_COMPILE_IFELSE(\n        [AC_LANG_PROGRAM([[#include <qconfig.h>]],[[\n        #if QT_FEATURE_zstd != 1\n        #error \"Qt can not decompress zstd. Resources are going to be compressed using zlib.\"\n        #endif\n        ]])], [\n         have_qt_zstd=\"yes\"\n         AC_MSG_RESULT([yes])\n        ],[\n         AC_MSG_RESULT([no])\n        ])\n      VLC_RESTORE_FLAGS\n\n      AC_MSG_CHECKING([for Qt QTest])\n      _QT_QTEST_LIBS=$(${PYTHON3} ${srcdir}/modules/gui/qt/scripts/static_dirs.py \\\n            --qmake \"${QMAKE6}\" --qtconf \"${with_qtconf}\" \\\n            --pro ${srcdir_abs}/modules/gui/qt/qtest.pro \\\n            --builddir ${ac_pwd}/modules/gui/qt \\\n            --libs) 2>/dev/null\n      ac_status=$?\n      AS_IF([test $ac_status = 0],[\n        AC_MSG_RESULT([yes])\n        QT_QTEST_LIBS=${_QT_QTEST_LIBS}\n        QT_QTEST_CFLAGS=$(${PYTHON3} ${srcdir}/modules/gui/qt/scripts/static_dirs.py \\\n            --qmake \"${QMAKE6}\" --qtconf \"${with_qtconf}\" \\\n            --pro ${srcdir_abs}/modules/gui/qt/qtest.pro \\\n            --builddir ${ac_pwd}/modules/gui/qt \\\n            --cflags)\n        QT_QTEST_LDFLAGS=$(${PYTHON3} ${srcdir}/modules/gui/qt/scripts/static_dirs.py \\\n            --qmake \"${QMAKE6}\" --qtconf \"${with_qtconf}\" \\\n            --pro ${srcdir_abs}/modules/gui/qt/qtest.pro \\\n            --builddir ${ac_pwd}/modules/gui/qt \\\n            --ldflags)\n        AC_SUBST([QT_QTEST_LIBS])\n        AC_SUBST([QT_QTEST_CFLAGS])\n        AC_SUBST([QT_QTEST_LDFLAGS])\n        have_qt_qtest=\"yes\"\n      ],[\n        AC_MSG_RESULT([no])\n      ])\n\n      AC_MSG_CHECKING([for QuickTest])\n      _QT_QUICK_TEST_LIBS=$(${PYTHON3} ${srcdir}/modules/gui/qt/scripts/static_dirs.py \\\n            --qmake \"${QMAKE6}\" --qtconf \"${with_qtconf}\" \\\n            --pro ${srcdir_abs}/modules/gui/qt/quicktest.pro \\\n            --builddir ${ac_pwd}/modules/gui/qt \\\n            --libs) 2>/dev/null\n      ac_status=$?\n      AS_IF([test $ac_status = 0],[\n        AS_IF([${PYTHON3} ${srcdir}/buildsystem/check_qml_module.py \\\n        --qmake \"${QMAKE6}\" \\\n        --qtconf \"${with_qtconf}\" \\\n        --modules QtTest=\"\" \\\n        >&AS_MESSAGE_FD ], [\n            AC_MSG_RESULT([yes])\n            QT_QUICK_TEST_LIBS=${_QT_QUICK_TEST_LIBS}\n            QT_QUICK_TEST_CFLAGS=$(${PYTHON3} ${srcdir}/modules/gui/qt/scripts/static_dirs.py \\\n                --qmake \"${QMAKE6}\" --qtconf \"${with_qtconf}\" \\\n                --pro ${srcdir_abs}/modules/gui/qt/quicktest.pro \\\n                --builddir ${ac_pwd}/modules/gui/qt \\\n                --cflags)\n            QT_QUICK_TEST_LDFLAGS=$(${PYTHON3} ${srcdir}/modules/gui/qt/scripts/static_dirs.py \\\n                --qmake \"${QMAKE6}\" --qtconf \"${with_qtconf}\" \\\n                --pro ${srcdir_abs}/modules/gui/qt/quicktest.pro \\\n                --builddir ${ac_pwd}/modules/gui/qt \\\n                --ldflags)\n            AC_SUBST([QT_QUICK_TEST_LIBS])\n            AC_SUBST([QT_QUICK_TEST_CFLAGS])\n            AC_SUBST([QT_QUICK_TEST_LDFLAGS])\n            have_qt_quick_test=\"yes\"\n        ], [\n            AC_MSG_RESULT([no])\n        ])\n      ],[\n        AC_MSG_RESULT([no])\n      ])\n\n      AC_PATH_PROGS(FXC, [fxc], [no], [${CONTRIB_DIR}/bin])\n      AS_IF([test \"$FXC\" != \"no\"],[\n        have_fxc=\"yes\"\n        FXC_PATH=$(echo $FXC | head -c-5)\n        AC_SUBST([FXC_PATH])\n      ])\n\n      AC_MSG_CHECKING([for Qt GUI private])\n      case $QT_CFLAGS in\n        *-DQT_GUI_PRIVATE\\ *)\n            AC_MSG_RESULT([yes])\n            have_qt_gui_private=\"yes\"\n            ;;\n        *)\n            AC_MSG_RESULT([no])\n            ;;\n      esac\n\n      dnl gtk theme provider\n      PKG_CHECK_MODULES([GTK3], [gtk+-3.0 >= 3.20], [\n        have_qt_gtk=\"yes\"\n      ], [:])\n    ], [\n      AC_MSG_RESULT([no])\n      have_qt=\"no\"\n    ])\n  ])\n  ])\n\n    AS_IF([test \"${have_qt}\" = \"no\"],[\n      AS_IF([test -n \"${enable_qt}\"],[\n        AC_MSG_ERROR([${QT_PKG_ERRORS}. If you want to build VLC without GUI, pass --disable-qt.])\n      ],[\n        AC_MSG_WARN([${QT_PKG_ERRORS}.])\n      ])\n      enable_qt=\"no\"\n    ])\n])\n\nAC_ARG_ENABLE([qt-qml-cache],\n  AS_HELP_STRING([--enable-qt-qml-cache],\n    [enable qml cache generation]))\nAM_CONDITIONAL([HAVE_QMLCACHEGEN], [test \"${enable_qt_qml_cache}\" = \"yes\" && test \"$QMLCACHEGEN\" != \"no\"])\n\nAC_ARG_ENABLE([qt-qml-debug],\n  AS_HELP_STRING([--enable-qt-qml-debug], [enable qml debugger]))\nAM_CONDITIONAL(QT_QML_DEBUG, [test \"${enable_qt_qml_debug}\" = \"yes\"])\n\nAS_IF([test \"${enable_qt}\" != \"no\"], [\n  ALIASES=\"${ALIASES} qvlc\"\n])\nAC_SUBST([QT_INDIRECT_LIBS])\nAM_CONDITIONAL([ENABLE_QT], [test \"$enable_qt\" != \"no\"])\nAM_CONDITIONAL([HAVE_QT_GTK], [test \"${have_qt_gtk}\" = \"yes\"])\nAM_CONDITIONAL([HAVE_QT_QTEST], [test \"${have_qt_qtest}\" = \"yes\"])\nAM_CONDITIONAL([HAVE_QT_QUICK_TEST], [test \"${have_qt_quick_test}\" = \"yes\"])\nAM_CONDITIONAL([HAVE_QT_GUI_PRIVATE], [test \"${have_qt_gui_private}\" = \"yes\"])\nAM_CONDITIONAL([HAVE_FXC], [test \"${have_fxc}\" = \"yes\"])\nAM_CONDITIONAL([HAVE_QT67], [test \"${QT_VERSION_MAJ:-0}\" -gt \"6\" || (test \"${QT_VERSION_MAJ:-0}\" = \"6\" && test \"${QT_VERSION_MIN:-0}\" -ge \"7\")])\nAM_CONDITIONAL([HAVE_QT65], [test \"${have_qt65}\" = \"yes\"])\nAM_CONDITIONAL([HAVE_QT_ZSTD], [test \"${have_qt_zstd}\" = \"yes\"])\n\ndnl\ndnl detect kde4-config patch (used for kde solids).\ndnl\nAC_ARG_VAR([KDE4_CONFIG], [kde4-config utility])\nAS_IF([test \"x$KDE4_CONFIG\" = \"x\"], [\n  KDE4_CONFIG=\"kde4-config\"\n])\n\ndnl\ndnl Simple test for skins2 dependency\ndnl\nAS_IF([test \"$enable_qt\" = \"no\"], [\n  AS_IF([test \"${enable_skins2}\" = \"yes\"], [\n    AC_MSG_ERROR([The skins2 module depends on the Qt interface. Without it you will not be able to open any dialog box from the interface, which makes the skins2 interface rather useless. Install the Qt development package or alternatively you can also configure with: --disable-qt --disable-skins2.])\n  ], [\n    enable_skins2=\"no\"\n    AC_MSG_WARN([The skins2 module depends on the Qt interface, Qt is not built so skins2 is disabled.])\n  ])\n])\n\ndnl\ndnl Skins2 module\ndnl\nAC_ARG_ENABLE([skins2],\n  AS_HELP_STRING([--enable-skins2], [skins interface module (default auto)]))\nAS_IF([test \"${enable_skins2}\" != \"no\"], [\n  have_skins_deps=\"yes\"\n\n  dnl Win32\n  AS_IF([test \"${SYS}\" = \"mingw32\"], [\n    VLC_ADD_CPPFLAGS([skins2],[-DWIN32_SKINS])\n    VLC_ADD_LIBS([skins2],[-lgdi32 -lole32 -luuid -lmsimg32])\n  dnl OS/2\n  ], [test \"${SYS}\" = \"os2\"], [\n    VLC_ADD_CPPFLAGS([skins2],[ -DOS2_SKINS])\n  dnl Linux/Unix\n  ], [\n    PKG_CHECK_MODULES([XPM], [xpm],, [have_skins_deps=\"no\"])\n    PKG_CHECK_MODULES([XINERAMA], [xinerama],, [have_skins_deps=\"no\"])\n    PKG_CHECK_MODULES([XCURSOR], [xcursor],, [have_skins_deps=\"no\"])\n    PKG_CHECK_MODULES([XEXT], [xext],, [have_skins_deps=\"no\"])\n    VLC_ADD_CPPFLAGS([skins2],[${X_CFLAGS} ${XEXT_CFLAGS} ${XPM_CFLAGS} -DX11_SKINS])\n    VLC_ADD_LIBS([skins2],[${X_LIBS} ${X_PRE_LIBS} ${XEXT_LIBS} ${XPM_LIBS} ${XINERAMA_LIBS} ${XCURSOR_LIBS} -lX11])\n  ])\n\n  dnl we need freetype\n  AS_IF([test \"${have_freetype}\" != \"yes\"], [\n    have_skins_deps=\"no\"\n  ])\n\n  AS_IF([test \"${have_skins_deps}\" = \"no\"], [\n    AS_IF([test \"x${enable_skins2}\" = \"x\"], [\n      AC_MSG_WARN([Skins2 interface disabled due to missing dependencies.])\n    ], [\n      AC_MSG_ERROR([Skins2 interface requires FreeType, libxcursor, libxpm, libxext and libxinerama])\n    ])\n    enable_skins2=\"no\"\n  ], [\n    ALIASES=\"${ALIASES} svlc\"\n    enable_skins2=\"yes\"\n  ])\n])\nAM_CONDITIONAL([BUILD_SKINS], [test \"${enable_skins2}\" = \"yes\"])\n\ndnl\ndnl  MacOS X gui module\ndnl\nAC_ARG_ENABLE([macosx],\n  AS_HELP_STRING([--enable-macosx], [Mac OS X gui support (default enabled on Mac OS X)]))\nif test \"${enable_macosx}\" != \"no\" -a \"${SYS}\" = \"darwin\"\nthen\n\n  dnl\n  dnl If possible, use xcrun to find the right ibtool\n  dnl\n\n  AC_PATH_PROG([XCRUN], [xcrun], [no])\n  AS_IF([test ! \"${XCRUN}\" = \"no\"], [\n    AC_MSG_CHECKING([for ibtool (using xcrun)])\n    XIB=\"$(eval $XCRUN -f ibtool 2>/dev/null || echo no)\"\n    AC_MSG_RESULT([${XIB}])\n  ], [\n    AC_MSG_WARN([Looking for tools without using xcrun])\n  ])\n\n  AS_IF([test \"${XIB}\" = \"no\"], [\n    AC_PATH_PROG(XIB, [ibtool], [no])\n    AS_IF([test \"${XIB}\" = \"no\"], [\n      AC_MSG_ERROR([ibtool was not found, but is required for --enable-macosx])\n    ])\n  ])\n\n  dnl\n  dnl If possible, use xcrun to find the right actool\n  dnl\n\n  AS_IF([test ! \"${XCRUN}\" = \"no\"], [\n    AC_MSG_CHECKING([for actool (using xcrun)])\n    ACTOOL=\"$(eval $XCRUN -f actool 2>/dev/null || echo no)\"\n    AC_MSG_RESULT([${ACTOOL}])\n  ], [\n    AC_MSG_WARN([Looking for tools without using xcrun])\n  ])\n\n  AS_IF([test \"${ACTOOL}\" = \"no\"], [\n    AC_PATH_PROG(ACTOOL, [actool], [no])\n    AS_IF([test \"${ACTOOL}\" = \"no\"], [\n      AC_MSG_ERROR([actool was not found, but is required for --enable-macosx])\n    ])\n  ])\nfi\nAM_CONDITIONAL([ENABLE_MACOSX_UI], [test \"$enable_macosx\" != \"no\" -a \"${SYS}\" = \"darwin\"])\n\ndnl\ndnl  MacOS X sparkle update support\ndnl\nAC_ARG_ENABLE([sparkle],\n  AS_HELP_STRING([--enable-sparkle], [Sparkle update support for OS X (default enabled on Mac OS X)]))\nif test \"${enable_sparkle}\" != \"no\" -a \"${HAVE_OSX}\" = \"1\"\nthen\n  if test ! -d ${CONTRIB_DIR}/Sparkle.framework -a ! -d ${CONTRIB_DIR}/Frameworks/Sparkle.framework\n  then\n    AC_MSG_ERROR([Sparkle framework is required and was not found in ${CONTRIB_DIR}])\n  fi\n\n  AC_DEFINE([HAVE_SPARKLE], [1], [Define to 1 if sparkle is enabled.])\nfi\nAM_CONDITIONAL([HAVE_SPARKLE], [test \"$enable_sparkle\" != \"no\"])\n\ndnl\ndnl  MacOS X breakpad creash reporter support\ndnl\nAC_ARG_WITH([breakpad],\n  AS_HELP_STRING([--with-breakpad=URL], [Enable Breakpad reporter using given URL]), [], [with_breakpad=no])\n\nAS_IF([test \"$with_breakpad\" != \"no\"], [\n\n  AS_IF([test \"$with_breakpad\" = \"yes\"], [\n    AC_MSG_ERROR([You need to supply the CrashDragon Server URL as value for --with-breakpad])\n  ])\n\n  AS_IF([test \"$HAVE_OSX\" = \"1\"], [\n    AC_MSG_CHECKING([for Breakpad framework])\n    AS_IF([test ! -d ${CONTRIB_DIR}/Breakpad.framework -a \\\n                ! -d ${CONTRIB_DIR}/Frameworks/Breakpad.framework], [\n      AC_MSG_RESULT([no])\n      with_breakpad=\"no\"\n      AC_MSG_ERROR([Breakpad framework is required and was not found in ${CONTRIB_DIR}])\n    ], [\n      AC_MSG_RESULT([yes])\n    ])\n  ],[\n    PKG_CHECK_MODULES([BREAKPAD], [breakpad-client], [\n      LDFLAGS=\"${LDFLAGS} -Wl,--build-id\"\n    ], [\n      AC_MSG_ERROR([\"breakpad not found\"])\n    ])\n  ])\n])\n\nAM_CONDITIONAL([HAVE_BREAKPAD], [test \"$with_breakpad\" != \"no\"])\nAS_IF([test \"$with_breakpad\" != \"no\"], [\n  AC_SUBST([BREAKPAD_URL], [\"${with_breakpad}\"])\n])\n\ndnl\ndnl  Minimal Mac OS X module\ndnl\nAC_ARG_ENABLE([minimal-macosx],\n  AS_HELP_STRING([--enable-minimal-macosx], [Minimal Mac OS X support (default disabled)]))\nif test \"${enable_minimal_macosx}\" = \"yes\" -a \"${SYS}\" = \"darwin\"\nthen\n  VLC_ADD_PLUGIN([minimal_macosx])\nfi\n\ndnl\ndnl Mac OS X fancy dmg build tool\ndnl\nif test \"${HAVE_OSX}\" = \"1\"\nthen\n  AC_PATH_PROG(DMGBUILD, dmgbuild, no)\n  AS_IF([test \"${DMGBUILD}\" = \"no\"], [\n    AC_MSG_WARN([dmgbuild not found -- unable to build fancy DMGs])\n  ])\nfi\nAM_CONDITIONAL([HAVE_DMGBUILD], [test \"$DMGBUILD\" != \"no\" -a \"${HAVE_OSX}\" = \"1\"])\n\ndnl\ndnl  ncurses module\ndnl\nAC_ARG_ENABLE([ncurses],\nAS_HELP_STRING([--disable-ncurses],[ncurses text-based interface (default auto)]))\nhave_ncurses=\"no\"\nAS_IF([test \"${enable_ncurses}\" != \"no\"] ,[\n  PKG_CHECK_MODULES([NCURSES], [ncursesw], [\n    have_ncurses=\"yes\"\n    ALIASES=\"${ALIASES} nvlc\"\n  ], [\n    AS_IF([test -n \"${enable_ncurses}\"], [\n      AC_MSG_ERROR([${NCURSES_PKG_ERRORS}.])\n    ])\n  ])\n])\nAM_CONDITIONAL([HAVE_NCURSES], [test \"${have_ncurses}\" = \"yes\"])\n\ndnl\ndnl  Lirc plugin\ndnl\nAC_ARG_ENABLE([lirc],\n  AS_HELP_STRING([--enable-lirc], [lirc support (default disabled)]))\nhave_lirc=\"no\"\nAS_IF([test \"${enable_lirc}\" = \"yes\"], [\n  AC_CHECK_HEADER(lirc/lirc_client.h, [\n    AC_CHECK_LIB([lirc_client], [lirc_init], [\n      have_lirc=\"yes\"\n    ])\n  ])\n])\nAM_CONDITIONAL([HAVE_LIRC], [test \"${have_lirc}\" = \"yes\"])\n\ndnl\ndnl  SRT plugin\ndnl\nPKG_ENABLE_MODULES_VLC([SRT], [access_srt access_output_srt], [srt >= 1.3.2], [SRT input/output plugin], [auto], [], [], [-DENABLE_SRT])\n\ndnl\ndnl  RIST plugin\ndnl\nPKG_ENABLE_MODULES_VLC([RIST], [rist access_output_rist], [librist], [RIST input/output plugin (default auto)])\n\nEXTEND_HELP_STRING([Visualisations and Video filter plugins:])\ndnl\ndnl  goom visualization plugin\ndnl\nPKG_ENABLE_MODULES_VLC([GOOM], [], [libgoom2], [goom visualization plugin], [auto])\n\ndnl\ndnl libprojectM visualization plugin\ndnl\nAC_ARG_ENABLE([projectm],\n  AS_HELP_STRING([--enable-projectm], [projectM visualization plugin (default enabled)]))\nAS_IF([test \"${enable_projectm}\" != \"no\"],\n  [\n    PKG_CHECK_MODULES(PROJECTM, libprojectM,\n    [\n      VLC_ADD_PLUGIN([projectm])\n      PKG_CHECK_EXISTS([libprojectM >= 2.0.0],\n        [ AC_DEFINE([HAVE_PROJECTM2], 1, [Define to 1 if using libprojectM 2.x]) ],\n        [ AC_MSG_WARN( [Using libprojectM version 1] )\n      ])\n    ],[\n      AC_MSG_WARN([${PROJECTM_PKG_ERRORS}.])\n    ])\n  ])\n\ndnl\ndnl Vovoid VSXu visualization plugin\ndnl\nAC_ARG_ENABLE([vsxu],\n  AS_HELP_STRING([--enable-vsxu], [Vovoid VSXu visualization plugin (default auto)]))\nAS_IF([test \"${enable_vsxu}\" != \"no\"],\n  [\n    PKG_CHECK_MODULES(VSXU, libvsxu,\n    [\n      VLC_ADD_PLUGIN([vsxu])\n    ],[\n      AC_MSG_WARN([${VSXU_PKG_ERRORS}.])\n    ])\n  ])\n\nEXTEND_HELP_STRING([Service Discovery plugins:])\ndnl\ndnl  Avahi-Zeroconf services discovery\nPKG_ENABLE_MODULES_VLC([AVAHI], [], [avahi-client >= 0.6], [Zeroconf services discovery], [auto])\n\ndnl\ndnl  libudev services discovery\nPKG_ENABLE_MODULES_VLC([UDEV], [], [libudev >= 142], [Linux udev services discovery], [auto])\n\ndnl\ndnl MTP devices services discovery\nPKG_ENABLE_MODULES_VLC([MTP], [mtp access_mtp], [libmtp >= 1.0.0], [MTP devices support], [auto])\n\ndnl\ndnl UPnP Plugin (Intel SDK)\ndnl\nPKG_ENABLE_MODULES_VLC([UPNP], [upnp], [libupnp >= 1.8.3], [Intel UPNP SDK],[auto])\n\ndnl\ndnl mDNS using libmicrodns\ndnl\nPKG_ENABLE_MODULES_VLC([MICRODNS], [], [microdns >= 0.1.2], [mDNS services discovery], [auto])\n\nEXTEND_HELP_STRING([Misc options:])\n\ndnl\ndnl  libxml2 module\ndnl\nPKG_ENABLE_MODULES_VLC([LIBXML2], [xml], [libxml-2.0 >= 2.5], [libxml2 support],[auto])\n\n\ndnl\ndnl libgcrypt\ndnl\nAC_ARG_ENABLE([libgcrypt],\n  AS_HELP_STRING([--disable-libgcrypt], [gcrypt support (default enabled)]))\nAC_ARG_VAR([GCRYPT_CFLAGS], [C compiler flags for gcrypt])\nAC_ARG_VAR([GCRYPT_LIBS], [linker flags flags for gcrypt])\n\n# require libgcrypt >= 1.6.0\nAS_IF([test \"${enable_libgcrypt}\" != \"no\"], [\n  AC_CACHE_CHECK([for gcrypt 1.6.0 or later], [ac_cv_lib_gcrypt], [\n    VLC_SAVE_FLAGS\n    CFLAGS=\"${CFLAGS} ${GCRYPT_CFLAGS}\"\n    AC_COMPILE_IFELSE([AC_LANG_PROGRAM([\n[#include <gcrypt.h>\n#if GCRYPT_VERSION_NUMBER < 0x010600\n#error\n#endif]])], [\n      ac_cv_lib_gcrypt=yes\n    ], [\n      ac_cv_lib_gcrypt=no\n    ])\n    VLC_RESTORE_FLAGS\n  ])\n\n  AS_IF([test \"${ac_cv_lib_gcrypt}\" = \"yes\"], [\n    AC_DEFINE([HAVE_GCRYPT], 1, [Defined if having gcrypt])\n  ], [\n    AS_IF([test \"${enable_libgcrypt}\" = \"yes\"], [\n      AC_MSG_ERROR([libgcrypt version 1.6.0 or higher not found. Install libgcrypt or pass --disable-libgcrypt.])\n    ])\n  ])\n])\n\nAS_IF([test -z \"$GCRYPT_LIBS\"], [\n  GCRYPT_LIBS=\"-lgcrypt -lgpg-error\"\n])\n\nAC_SUBST([GCRYPT_CFLAGS])\nAC_SUBST([GCRYPT_LIBS])\nAM_CONDITIONAL([HAVE_GCRYPT], [test \"${ac_cv_lib_gcrypt}\" = \"yes\"])\n\ndnl\ndnl TLS/SSL\ndnl\nAC_ARG_ENABLE([gnutls],\n  AS_HELP_STRING([--enable-gnutls], [GNU TLS TLS/SSL support (default enabled)]))\nAS_IF([test \"${enable_gnutls}\" != \"no\"], [\n  PKG_CHECK_MODULES(GNUTLS, [gnutls >= 3.5.0], [\n    VLC_ADD_PLUGIN([gnutls])\n  ], [\n    AS_IF([test -n \"${enable_gnutls}\"], [\n      AC_MSG_ERROR([${GNUTLS_PKG_ERRORS}.)])\n    ])\n  ])\n])\n\n\ndnl\ndnl Taglib plugin\ndnl\nhave_taglib=\"no\"\nAC_ARG_ENABLE([taglib],\n  AS_HELP_STRING([--disable-taglib],\n    [do not use TagLib (default enabled)]))\nAS_IF([test \"${enable_taglib}\" != \"no\"], [\n  PKG_CHECK_MODULES(TAGLIB, taglib >= 1.11, [\n    have_taglib=\"yes\"\n    VLC_ADD_PLUGIN([taglib])\n  ], [\n    AC_MSG_WARN([${TAGLIB_PKG_ERRORS}.])])\n])\nAM_CONDITIONAL([HAVE_TAGLIB], [test \"${have_taglib}\" = \"yes\"])\n\ndnl\ndnl  libsecret\ndnl\nPKG_ENABLE_MODULES_VLC([SECRET], [], [libsecret-1 >= 0.18], [use libsecret for keystore], [auto])\n\ndnl\ndnl  kwallet\ndnl\nAC_ARG_ENABLE([kwallet],\n  AS_HELP_STRING([--enable-kwallet],\n    [use kwallet (via D-Bus) for keystore (default enabled)]))\nAS_IF([test \"${enable_kwallet}\" != \"no\" -a \"${have_dbus}\" = \"yes\"], [\n  VLC_ADD_PLUGIN([kwallet])\n])\n\ndnl\ndnl update checking system\ndnl\nAC_ARG_ENABLE([update-check],\n  AS_HELP_STRING([--enable-update-check], [update checking system (default disabled)]))\nif test \"${enable_update_check}\" = \"yes\"\nthen\n AS_IF([test \"${ac_cv_lib_gcrypt}\" != \"yes\"],[\n    AC_MSG_ERROR([libgcrypt is required for update checking system]) ])\nfi\nAM_CONDITIONAL([UPDATE_CHECK], [test \"${enable_update_check}\" = \"yes\"])\n\ndnl\ndnl OS X notification plugin\ndnl\nAC_ARG_ENABLE([osx_notifications],\n  AS_HELP_STRING([--enable-osx-notifications],\n    [macOS notification plugin (default disabled)]),,\n  [enable_osx_notifications=no])\nAS_IF([test \"${enable_osx_notifications}\" != \"no\"], [\n  VLC_ADD_PLUGIN([osx_notifications])\n])\n\ndnl\ndnl Check for GBM\ndnl\nPKG_HAVE_WITH_MODULES([GBM], [gbm])\n\ndnl\ndnl Libnotify notification plugin\ndnl\nPKG_ENABLE_MODULES_VLC([NOTIFY], [], [libnotify], [libnotify notification], [auto])\n\nPKG_ENABLE_MODULES_VLC([MEDIALIBRARY], [medialibrary], [medialibrary >= 0.13.0], (medialibrary support), [auto])\n\ndnl\ndnl  Endianness check\ndnl\nAC_C_BIGENDIAN\nAS_IF([test \"${ac_cv_c_bigendian}\" = \"yes\"], [\n  DEFS_BIGENDIAN=\"-DWORDS_BIGENDIAN=1\"\n], [\n  DEFS_BIGENDIAN=\"\"\n])\nAC_SUBST([DEFS_BIGENDIAN])\n\ndnl\ndnl Where to install KDE solid .desktop\ndnl\nAC_ARG_WITH(kde-solid,\n  AS_HELP_STRING([--with-kde-solid=PATH],\n                 [KDE Solid actions directory (auto)]),, [\n\nif test \"${SYS}\" != \"mingw32\" -a \"${SYS}\" != \"darwin\" -a \"${VENDOR}\" != \"android\" ; then\n  with_kde_solid=\"yes\"\nfi\n])\nsoliddatadir=\"\"\nAS_IF([test \"${with_kde_solid}\" != \"no\"], [\n  AS_IF([test \"${with_kde_solid}\" = \"yes\"], [\n    kde4datadir=\"`${KDE4_CONFIG} --install data`\"\n    AS_IF([test \"x$kde4datadir\" = \"x\"], [kde4datadir='${datadir}/kde4/apps'])\n    soliddatadir=\"${kde4datadir}/solid/actions\"\n  ], [\n    soliddatadir=\"${with_kde_solid}\"\n  ])\n])\nAC_SUBST([soliddatadir])\nAM_CONDITIONAL([KDE_SOLID], [test \"x${soliddatadir}\" != \"x\"])\n\ndnl\ndnl Doxygen and documentation tools\ndnl\ndoxygen_stylesheet=\"\"\nAC_ARG_WITH([doxygen-stylesheet],\n    AS_HELP_STRING([--with-doxygen-stylesheet=PATH],\n                   [Doxygen stylesheet (default is doxygen default)]),\n                   [ doxygen_stylesheet=\"$with_doxygen_stylesheet\" ], [])\nAC_SUBST([doxygen_stylesheet])\n\n\n\ndnl\ndnl  Find tools for win32 packaging\ndnl\nAS_IF([test \"${SYS}\" = \"mingw32\"], [\n    dnl\n    dnl Find makensis required to build the NSIS installer\n    dnl\n    nsis_major_required=\"3\"\n    nsis_version_ok=\"no\"\n    AC_PATH_PROG([MAKENSIS], [makensis], [no])\n    AS_IF([test \"$MAKENSIS\" != \"no\"], [\n        # Check version\n        AC_MSG_CHECKING([makensis version])\n        nsis_version=$($MAKENSIS -VERSION)\n        AC_MSG_RESULT([$nsis_version])\n        nsis_version_major=$(echo \"$nsis_version\" | awk -F \\. '{print $1}' | sed 's/v//')\n        # Check if major version is a valid number\n        AS_IF([test -n \"$nsis_version_major\" && \\\n               test \"$nsis_version_major\" -eq \"$nsis_version_major\" 2> /dev/null], [\n            # Do the version check using major version\n            AS_IF([test \"$nsis_version_major\" -lt \"$nsis_major_required\"], [\n                AC_MSG_WARN([makensis too old, (needs ${nsis_major_required}.x, have ${nsis_version_major}.x)])\n            ], [\n                nsis_version_ok=\"yes\"\n            ])\n        ], [\n            AC_MSG_WARN([failed to check the makensis version])\n        ])\n    ])\n    dnl\n    dnl Find 7zip\n    dnl\n    AC_PATH_PROG([SEVENZIP], [7z], [7z])\n])\nAM_CONDITIONAL([HAVE_MAKENSIS], [test \"$MAKENSIS\" != \"no\" && test \"$nsis_version_ok\" = \"yes\"])\n\nEXTEND_HELP_STRING([Components:])\n\ndnl\ndnl  the VLC binary\ndnl\nAC_ARG_ENABLE([vlc],\n  AS_HELP_STRING([--enable-vlc], [build the VLC media player (default enabled)]))\nAM_CONDITIONAL([BUILD_VLC], [test \"${enable_vlc}\" != \"no\" -a \"$vlc_winstore_app\" = \"0\"])\n\ndnl\ndnl Fuzzer (at the end not to mess dependencies FLAGS)\ndnl\nAS_VAR_IF(with_libfuzzer, no, [], [\n    LIBS=\"-lstdc++ ${LIBM}\"\n    AS_IF([test \"${with_libfuzzer}\" != \"yes\"], [\n      LIBS=\"$LIBS -L${with_libfuzzer}\"\n    ])\n    LIBS=\"$LIBS -lFuzzer\"\n    AX_CHECK_COMPILE_FLAG(-fsanitize-coverage=trace-pc-guard, [\n        AX_APPEND_FLAG([-fsanitize-coverage=trace-pc-guard])\n        AX_APPEND_FLAG([-fsanitize-coverage=trace-pc-guard], [CXXFLAGS])\n        AX_APPEND_COMPILE_FLAGS([-fsanitize-coverage=trace-cmp])\n        AX_APPEND_COMPILE_FLAGS([-fsanitize-coverage=trace-cmp], [CXXFLAGS])\n    ], [\n        AX_CHECK_COMPILE_FLAG(-fsanitize-coverage=trace-pc, [\n            AX_APPEND_FLAG([-fsanitize-coverage=trace-pc])\n            AX_APPEND_FLAG([-fsanitize-coverage=trace-pc], [CXXFLAGS])\n        ], [\n            AC_MSG_ERROR([Sanitizer coverage not supported by your compiler])\n        ])\n    ])\n])\n\ndnl\ndnl  Stuff used by the program\ndnl\nVERSION_MESSAGE=\"${VERSION} ${CODENAME}\"\nCOPYRIGHT_MESSAGE=\"Copyright © ${COPYRIGHT_YEARS} the VideoLAN team\"\nAC_DEFINE_UNQUOTED([VERSION_MESSAGE], \"${VERSION_MESSAGE}\", [Simple version string])\nAC_DEFINE_UNQUOTED([COPYRIGHT_MESSAGE], \"${COPYRIGHT_MESSAGE}\", [Copyright string])\nAC_DEFINE_UNQUOTED([COPYRIGHT_YEARS], \"${COPYRIGHT_YEARS}\", [The copyright years])\nAC_DEFINE_UNQUOTED([CONFIGURE_LINE], \"${CONFIGURE_LINE}\", [The ./configure command line])\nAC_DEFINE_UNQUOTED([PACKAGE_VERSION_MAJOR],${VERSION_MAJOR}, [version major number])\nAC_DEFINE_UNQUOTED([PACKAGE_VERSION_MINOR],${VERSION_MINOR}, [version minor number])\nAC_DEFINE_UNQUOTED([PACKAGE_VERSION_REVISION],${VERSION_REVISION}, [version revision number])\nAC_DEFINE_UNQUOTED([PACKAGE_VERSION_EXTRA],${VERSION_EXTRA}, [version extra number])\nAC_DEFINE_UNQUOTED([PACKAGE_VERSION_DEV],\"${VERSION_DEV}\", [version development string])\nAC_DEFINE_UNQUOTED([LIBVLC_ABI_MAJOR],${LIBVLC_ABI_MAJOR}, [libvlc version major number])\nAC_DEFINE_UNQUOTED([LIBVLC_ABI_MINOR],${LIBVLC_ABI_MINOR}, [libvlc version minor number])\nAC_DEFINE_UNQUOTED([LIBVLC_ABI_MICRO],${LIBVLC_ABI_MICRO}, [libvlc version micro number])\nAC_SUBST([COPYRIGHT_MESSAGE])\nAC_SUBST([VERSION_MESSAGE])\nAC_SUBST([VERSION_MAJOR])\nAC_SUBST([VERSION_MINOR])\nAC_SUBST([VERSION_REVISION])\nAC_SUBST([VERSION_EXTRA])\nAC_SUBST([LIBVLC_ABI_MAJOR])\nAC_SUBST([LIBVLC_ABI_MINOR])\nAC_SUBST([LIBVLC_ABI_MICRO])\nAC_SUBST([COPYRIGHT_YEARS])\nAS_IF([test -z \"$VLC_COMPILE_BY\"],[\n   VLC_COMPILE_BY=`whoami|sed -e 's/\\\\\\/\\\\\\\\\\\\\\/g'`\n])\nAC_DEFINE_UNQUOTED([VLC_COMPILE_BY], \"$VLC_COMPILE_BY\", [user who ran configure])\nAS_IF([test -z \"$VLC_COMPILE_HOST\"],[\n   VLC_COMPILE_HOST=`hostname -f 2>/dev/null || hostname`\n])\nAC_DEFINE_UNQUOTED([VLC_COMPILE_HOST], \"$VLC_COMPILE_HOST\", [host which ran configure])\nAC_DEFINE_UNQUOTED([VLC_COMPILER], \"`$CC -v 2>&1 | tail -n 1 | sed -e 's/ *$//'`\", [compiler])\ndnl\ndnl  Handle substvars that use $(top_srcdir)\ndnl\nCPPFLAGS=\"-I\\$(top_srcdir)/include -I\\$(top_builddir)/include ${CPPFLAGS}\"\n\ndnl\ndnl  Configuration is finished\ndnl\nAC_SUBST([SYS])\nAC_SUBST([ARCH])\nAC_SUBST([ALIASES])\nAC_SUBST([ASM])\nAC_SUBST([MOC])\nAC_SUBST([RCC])\nAC_SUBST([UIC])\nAC_SUBST([QSB])\nAC_SUBST([WINDRES])\nAC_SUBST([LIBEXT])\nAC_SUBST([AM_CPPFLAGS])\nAC_SUBST([MACOSX_DEPLOYMENT_TARGET])\nAC_SUBST([FILE_LIBVLCCORE_DLL])\nAC_SUBST([FILE_LIBVLC_DLL])\n\nAC_CONFIG_FILES([\n  Makefile\n  doc/Makefile\n  modules/Makefile\n  modules/gui/qt/Makefile\n  m4/Makefile\n  po/Makefile.in\n  share/Makefile\n  compat/Makefile\n  src/Makefile\n  lib/Makefile\n  bin/Makefile\n  test/Makefile\n  share/org.videolan.vlc.appdata.xml.in\n])\n\nAM_COND_IF([HAVE_WIN32], [\n  AC_CONFIG_FILES([\n    extras/package/win32/NSIS/spad.nsi\n    extras/package/win32/NSIS/vlc.win32.nsi\n    extras/package/win32/msi/config.wxi\n  ])\n])\n\nAM_COND_IF([HAVE_DARWIN], [\n  AC_CONFIG_FILES([\n    share/macosx/Info.plist:share/Info.plist.in\n  ])\n])\n\ndnl Generate makefiles\nAC_OUTPUT\n\ndnl Do we have to use make or gmake ?\nif make --version 2>&1|grep -q GNU\nthen\n    # GNU make, all seems good\n    MAKE=make\nelse\n    # Known GNU make alias (on BSD)\n    MAKE=gmake\nfi\ndnl Shortcut to nice compile message\nif test -n $SHELL; then\n  SHELL=${CONFIG_SHELL-/bin/sh}\nfi\nrm -f compile\ncompile_top_srcdir=`sed -ne \"s/^top_srcdir *= *//p\" < Makefile`\n[printf '%s\\n' '#! '\"${SHELL}\"'\nrm -f .error$$\nERROR=0\nexport PATH=\"$PATH\" LANG=C\nif test \"$NO_COLOR\" = 1 ; then\n('\"${MAKE}\"' V=1 \"$@\" 2>&1 || touch .error$$)\nelse\n('\"${MAKE}\"' V=1 \"$@\" 2>&1 || touch .error$$)| '\"$compile_top_srcdir\"'/extras/buildsystem/make.pl\nfi\ntest -f .error$$ && ERROR=1\nrm -f .error$$\nexit $ERROR'] >compile\nchmod a+x compile\n\necho \"\nlibvlc configuration\n--------------------\nversion               : ${VERSION}\nsystem                : ${SYS}\narchitecture          : ${ARCH}\noptimizations         : ${enable_optimizations}\"\nif test \"${enable_vlc}\" != \"no\"; then\necho \"vlc aliases           :${ALIASES}\"\nelse\necho \"build vlc executable  : no\"\nfi\necho \"\nTo build vlc and its plugins, type \\`$MAKE', or \\`./compile' if you like nice colors.\"\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "extras",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "m4",
          "type": "tree",
          "content": null
        },
        {
          "name": "make-alias",
          "type": "blob",
          "size": 0.2919921875,
          "content": "#! /bin/sh\n# Interface alias build script for VLC\n# Copyright © 2007 Rémi Denis-Courmont.\n\nOUT=\"$1\"\nIFACE=\"$2\"\n\ncat > \"$OUT.tmp\" << EOF\n#! /bin/sh\nexec $bindir/`echo \"$program_prefix\"vlc\"$program_suffix\" | sed -e \"$transform\"` -I \"$IFACE\" \"\\$@\"\nEOF\n\nchmod +x \"$OUT.tmp\"\nmv -f -- \"$OUT.tmp\" \"$OUT\"\n"
        },
        {
          "name": "meson.build",
          "type": "blob",
          "size": 34.892578125,
          "content": "project('VLC', ['c', 'cpp'],\n    version: '4.0.0-dev',\n    default_options: ['c_std=gnu17', 'cpp_std=c++17'],\n    meson_version: '>=1.1.0')\n\nvlc_copyright_years = '1996-2025'\nvlc_version_codename = 'Otto Chriek'\n\n# LibVLC library (ABI) version\n# Format must be major.minor.micro\nlibvlc_abi_version = '12.0.0'\n\nlibvlc_abi_version_parts = libvlc_abi_version.split('.')\nlibvlc_abi_version_major = libvlc_abi_version_parts[0].to_int()\nlibvlc_abi_version_minor = libvlc_abi_version_parts[1].to_int()\nlibvlc_abi_version_micro = libvlc_abi_version_parts[2].to_int()\n\nvlc_version_full = meson.project_version()\n\nvlc_version_parts = vlc_version_full.split('-')[0].split('.')\nvlc_version_type  = vlc_version_full.split('-').get(1, '')\n\nif (vlc_version_parts.length() < 3 or vlc_version_parts.length() > 4)\n    error(f'Unexpected project version \"@vlc_version_full@\".',\n          'Expected a format of major.minor.revision[.extra][-dev]')\nendif\n\nvlc_version_major    = vlc_version_parts[0].to_int()\nvlc_version_minor    = vlc_version_parts[1].to_int()\nvlc_version_revision = vlc_version_parts[2].to_int()\nvlc_version_extra    = vlc_version_parts.get(3, '0').to_int()\n\n# Short version (major.minor.revision)\nvlc_version_short = f'@vlc_version_major@.@vlc_version_minor@.@vlc_version_revision@'\n\n# Normal VLC version (major.minor.revision[-dev])\nvlc_version = vlc_version_short + ((vlc_version_type != '') ? f'-@vlc_version_type@' : '')\n\nvlc_package_name = meson.project_name().to_lower()\n\nvlc_src_root = meson.current_source_dir()\nvlc_build_root = meson.current_build_dir()\n\ncdata = configuration_data()\n\ngen_vlc_about = find_program('buildsystem/gen-vlc-about.py')\nvlc_about = custom_target('vlc_about.h',\n                        input:   ['COPYING', 'THANKS', 'AUTHORS'],\n                        output:  ['vlc_about.h'],\n                        command: [gen_vlc_about,\n                                   '@INPUT0@',\n                                   '@INPUT1@',\n                                   '@INPUT2@',\n                                   '@OUTPUT@'])\n\ncargo_rustc_static_libs = find_program('buildsystem/cargo-rustc-static-libs.py')\ncargo_output = find_program('buildsystem/cargo-output.py')\n\nadd_project_arguments('-DHAVE_CONFIG_H=1', language: ['c', 'cpp', 'objc'])\n\n# If building with contribs, read the relevant paths from the machine file\n# to use it during checks (check_header, find_library) later.\ncontrib_dir = meson.get_external_property('contrib_dir', '')\n\nif contrib_dir != ''\n    message('Using contribs: ' + contrib_dir)\n\n    contrib_incdir = meson.get_external_property('contrib_incdir')\n    contrib_libdir = meson.get_external_property('contrib_libdir')\n    # TODO: Remove contrib_inc_args and use contrib_incdir directly\n    # once upstream solution to\n    # https://github.com/mesonbuild/meson/pull/1386#issuecomment-1353858080\n    # is found.\n    contrib_inc_args = [f'-I@contrib_incdir@']\n\n    # Contrib depdendency\n    # This should be used ONLY in cases where you can not otherwise\n    # form a proper dependency (by using a dependency() or find_library())\n    # to contribs. It will add the contrib include and library directory\n    # to the target it is used with.\n    contrib_dep = declare_dependency(\n        link_args: '-L' + contrib_libdir,\n        compile_args: contrib_inc_args)\nelse\n    contrib_incdir = []\n    contrib_libdir = []\n    contrib_inc_args = []\n    contrib_dep = dependency('', required: false)\nendif\n\ncc = meson.get_compiler('c')\ncpp = meson.get_compiler('cpp')\nhost_system = host_machine.system()\n\nlist_inc_dirs = ['.', 'include']\nif cc.get_id() == 'msvc' or cc.get_id() == 'clang-cl'\n    # extra POSIX headers not found in the Windows SDK\n    list_inc_dirs += 'compat/windows'\nendif\n\nif host_system == 'darwin'\n    add_languages('objc', native: false)\nendif\n\nif host_machine.cpu_family().startswith('x86')\n    if add_languages('nasm', native: false, required: false)\n        vlc_nasm_args = []\n        if host_machine.cpu_family() == 'x86'\n            vlc_nasm_args += ['-DARCH_X86_64=0']\n            if host_system in ['darwin', 'windows']\n                vlc_nasm_args += ['-DPREFIX']\n            endif\n        else\n            vlc_nasm_args += ['-DARCH_X86_64=1']\n            if host_system == 'darwin'\n                vlc_nasm_args += ['-DPREFIX']\n            endif\n        endif\n        add_project_arguments(vlc_nasm_args, language: ['nasm'])\n        cdata.set('HAVE_X86ASM', 1)\n    endif\nendif\n\n# Rust build system\ncargo_bin = find_program('cargo', required: get_option('rust'))\n\n#\n# General feature defines\n#\nvlc_conf_prefix = ''\n\nfeature_defines = [\n    ['_GNU_SOURCE', 1], # Enable GNU extensions on systems that have them\n]\n\nforeach d : feature_defines\n    cdata.set(d.get(0), d.get(1))\n    vlc_conf_prefix = vlc_conf_prefix + '#define @0@ @1@\\n'.format(d.get(0), d.get(1))\nendforeach\n\nvlc_tests = []\n\n#\n# SIMD support\n#\nsubdir('buildsystem/simd_checks')\n\n#\n# Check for global dependencies\n# These are dependencies needed by libvlc or\n# libvlccore and by some modules too.\n#\n# ATTENTION: Take care to follow the naming convetions:\n# - Libraries found with find_lirary() must be named `name_lib`\n# - Libraries (or Frameworks) found with dependency() must be\n#   named `name_dep`\n#\n\n# zlib library\nz_dep = dependency('zlib', required: false)\nif z_dep.found()\n    cdata.set('HAVE_ZLIB', 1)\nendif\n\n# Math library\nm_lib = cc.find_library('m', required: false)\n\n# Dynamic library loading library\ndl_lib = cc.find_library('dl', required: false)\n\n# iconv library\niconv_dep = dependency('iconv', required: false)\nif not iconv_dep.found()\n    # check in contribs\n    if cc.has_function('iconv_open', prefix: vlc_conf_prefix + '#include <iconv.h>',\n                       dependencies: [contrib_dep, cc.find_library('iconv', dirs: contrib_libdir, required: false)])\n        iconv_dep = declare_dependency(\n            dependencies: [contrib_dep, cc.find_library('iconv', dirs: contrib_libdir)])\n    endif\nendif\niconv_const_test = '''\n    #include <stddef.h>\n    #include <iconv.h>\n    _Static_assert(_Generic((iconv),\n        size_t (*)(iconv_t, const char **, size_t *, char **, size_t *) : 1, default: 0),\n        \"Const prototype not matched\");\n'''\n\nif iconv_dep.found()\n    cdata.set('HAVE_ICONV', 1)\n\n    # Check if iconv() prototype uses const\n    if cc.compiles(iconv_const_test, name: 'Test iconv() for const-using prototype', dependencies: iconv_dep)\n        cdata.set('ICONV_CONST', 'const')\n    else\n        cdata.set('ICONV_CONST', '')\n    endif\nendif\n\nif host_system == 'darwin'\n    corefoundation_dep = dependency('CoreFoundation', required: true)\n    foundation_dep = dependency('Foundation', required: true)\nelse\n    corefoundation_dep = []\n    foundation_dep = []\nendif\n\n# Gettext\nintl_dep = dependency('intl', required: get_option('nls'))\nif intl_dep.found()\n    cdata.set('HAVE_GETTEXT', 1)\n    cdata.set('ENABLE_NLS', 1)\n\n    subdir('po')\nendif\n\n# Domain name i18n support via GNU libidn\nidn_dep = dependency('libidn', required: false)\nif idn_dep.found()\n    cdata.set('HAVE_IDN', 1)\nendif\n\n# Threads\nthreads_dep = dependency('threads', required: true)\n\n# Check for X11\nif (get_option('x11')\n    .disable_auto_if(host_system in ['darwin', 'windows'])\n    .allowed())\n    x11_dep = dependency('x11', required: get_option('x11'))\nelse\n    x11_dep = disabler()\nendif\nif not x11_dep.found()\n    cdata.set('X_DISPLAY_MISSING', 1)\nendif\n\n#\n# Check for headers\n#\n\ncheck_c_headers = [\n    ['stdbit.h'],\n    ['stdckdint.h'],\n    ['arpa/inet.h'],\n    ['threads.h'],\n    ['netinet/tcp.h'],\n    ['search.h'],\n    ['sys/uio.h'],\n    ['sys/socket.h'],\n    ['net/if.h'],\n    ['execinfo.h'],\n    ['features.h'],\n    ['getopt.h'],\n    ['linux/dccp.h'],\n    ['linux/magic.h'],\n    ['netinet/udplite.h'],\n    ['pthread.h'],\n    ['poll.h'],\n    ['sys/auxv.h'],\n    ['sys/eventfd.h'],\n    ['sys/mount.h'],\n    ['sys/shm.h'],\n    ['sys/soundcard.h'],\n    ['valgrind/valgrind.h'],\n    ['X11/Xlib.h'],\n    ['xlocale.h'],\n    ['zlib.h', { 'args' : [contrib_inc_args] }],\n    ['wordexp.h'],\n    ['dxgidebug.h'],\n    ['GL/wglew.h',\n        { 'prefix' : ['#include <windows.h>', '#include <GL/glew.h>'],\n          'args' : [contrib_inc_args] }],\n]\n\ncheck_cpp_headers = []\n\nforeach header : check_c_headers\n    header_kwargs = header.get(1, {})\n    # TODO: Once we require meson 1.0, drop the array join here\n    # See: https://github.com/mesonbuild/meson/pull/11099\n    if cc.check_header(header[0],\n                       prefix: '\\n'.join(header_kwargs.get('prefix', [])),\n                       args: header_kwargs.get('args', []))\n        cdata.set('HAVE_' + header[0].underscorify().to_upper(), 1)\n    endif\nendforeach\n\nforeach header : check_cpp_headers\n    header_kwargs = header.get(1, {})\n    # TODO: Once we require meson 1.0, drop the array join here\n    # See: https://github.com/mesonbuild/meson/pull/11099\n    if cpp.check_header(header[0],\n                       prefix: '\\n'.join(header_kwargs.get('prefix', [])),\n                       args: header_kwargs.get('args', []))\n        cdata.set('HAVE_' + header[0].underscorify().to_upper(), 1)\n    endif\nendforeach\n\nif not cdata.has('HAVE_STDBIT_H')\n    list_inc_dirs += 'compat/stdbit'\nendif\nif not cdata.has('HAVE_STDCKDINT_H')\n    list_inc_dirs += 'compat/stdckdint'\nendif\nvlc_include_dirs = include_directories(list_inc_dirs)\n\n#\n# Darwin specific checks\n#\n\nif host_system == 'darwin'\n\n    # Check if compiling for iOS\n    have_ios = cc.get_define('TARGET_OS_IPHONE',\n        prefix: '#include <TargetConditionals.h>') == '1'\n\n    # Check if compiling for tvOS\n    have_tvos = cc.get_define('TARGET_OS_TV',\n        prefix: '#include <TargetConditionals.h>') == '1'\n\n    # If none of the above, assume compiling for macOS\n    have_osx = not have_ios and not have_tvos\n\nelse\n    have_ios = false\n    have_tvos = false\n    have_osx = false\nendif\n\nif have_osx\n    add_project_arguments('-mmacosx-version-min=10.11',\n        language: ['c', 'cpp', 'objc'])\n    add_project_link_arguments('-mmacosx-version-min=10.11',\n        language: ['c', 'cpp', 'objc'])\nendif\n\n\n#\n# Windows and MinGW checks\n#\n\nhave_mingw = false\nhave_win_desktop = false\nhave_win_store = false\nlibcom_cppflags = []\n\nif host_system == 'windows'\n\n    # Defines needed for Windows\n    windows_defines = [\n        ['UNICODE',      1], # Define to 1 for Unicode (Wide Chars) APIs\n    ]\n\nwindows_version_test = '''\n#ifdef _WIN32_WINNT\n# error _WIN32_WINNT already defined\n#else\n# include <sdkddkver.h>\n# if defined(_WIN32_WINNT) && _WIN32_WINNT >= 0x0601\n#  error _WIN32_WINNT toolchain default high enough\n# endif\n#endif\n'''\n    if cc.compiles(windows_version_test, name: 'need _WIN32_WINNT defined to Win7')\n        windows_defines += [\n            ['_WIN32_WINNT', '0x0601'] # Define for Windows 7 APIs\n        ]\n    endif\n\n    foreach d : windows_defines\n        cdata.set(d.get(0), d.get(1))\n        vlc_conf_prefix = vlc_conf_prefix + '#define @0@ @1@\\n'.format(d.get(0), d.get(1))\n    endforeach\n\n    mingw_check = '''\n    #ifndef __MINGW32__\n    # error Not compiling with mingw\n    #endif\n    '''\n\n    # Check if MinGW is used at all\n    if cc.compiles(mingw_check)\n\n        # Check which kind of MinGW\n        mingw_version_major = cc.get_define('__MINGW64_VERSION_MAJOR',\n            prefix: '#include <_mingw.h>')\n\n        if mingw_version_major == ''\n            error('Cannot compile with MinGW, use MinGW-w64 >= 6.0 instead.')\n        endif\n\n        # Check that MinGW w64 is at least 6.0\n        if mingw_version_major.to_int() < 6\n            error('MinGW-w64 6.0 or higher required!')\n        endif\n\n        have_mingw = true\n\n        mingw_version_minor = cc.get_define('__MINGW64_VERSION_MINOR',\n            prefix: '#include <_mingw.h>')\n\n        mingw_version = '@0@.@1@'.format(mingw_version_major, mingw_version_minor)\n        message('Using MinGW-w64 ' + mingw_version)\n\n        # Defines needed for MinGW\n\n        mingw_defines = []\n\nucrt_version_test = '''\n#include <crtdefs.h>\n#if !(defined(_UCRT) || (__MSVCRT_VERSION__ >= 0x1400) || (__MSVCRT_VERSION__ >= 0xE00 && __MSVCRT_VERSION__ < 0x1000))\n# error This is NOT a UCRT build\n#endif\n'''\n        if cc.compiles(ucrt_version_test, name: 'compiles with Universal C Runtime')\n            # for UCRT build we use the standard compatibility define of UCRT\n            mingw_defines += [\n                ['__USE_MINGW_ANSI_STDIO',      0],\n            ]\n        else\n            # Define to force use of MinGW printf\n            mingw_defines += [\n                ['__USE_MINGW_ANSI_STDIO',      1],\n            ]\n        endif\n\n        foreach d : mingw_defines\n            cdata.set(d.get(0), d.get(1))\n            vlc_conf_prefix = vlc_conf_prefix + '#define @0@ @1@\\n'.format(d.get(0), d.get(1))\n        endforeach\n\n        # fno-strict-aliasing is necessary for WRL and IID_PPV_ARGS to work safely\n        # MSVC doesn't have this option but doesn't do pointer aliasing, so it\n        # should work too\n        libcom_cppflags += '-fno-strict-aliasing'\n        if not cpp.has_argument(libcom_cppflags)\n            error('-fno-strict-aliasing is necessary for Windows C++ modules')\n        endif\n\n        # Check for fnative-struct or mms-bitfields support for MinGW\n        if cc.has_argument('-mms-bitfields')\n            add_project_arguments('-mms-bitfields',\n                language: ['c', 'cpp'])\n            # Check for the warning flag without \"-Wno-\", GCC accepts\n            # -Wno-<anything> for unsupported warnings, which can trigger\n            # other warnings instead.\n            if cc.has_argument('-Wincompatible-ms-struct')\n                add_project_arguments('-Wno-incompatible-ms-struct',\n                    language: ['c', 'cpp'])\n            endif\n        elif cc.has_argument('-fnative-struct')\n            add_project_arguments('-fnative-struct',\n                    language: ['c', 'cpp'])\n        endif\n\n        # DEP, ASLR, NO SEH\n        add_project_link_arguments('-Wl,--nxcompat', '-Wl,--no-seh', '-Wl,--dynamicbase',\n            language: ['c', 'cpp'])\n    endif\n\n    # Check if we are building for Windows Store\n    if get_option('winstore_app')\n        have_win_store = true\n        windowsappcompat_lib = cc.find_library('windowsappcompat')\n        add_project_dependencies(windowsappcompat_lib, language: ['c', 'cpp'])\n    else\n        have_win_desktop = true\n    endif\n\nendif\n\nadd_project_arguments(cc.get_supported_arguments([\n    '-Wno-deprecated-copy', # Some Qt version are generating tons of warning that cannot be\n                            # avoided so mute them\n]), language: ['c', 'cpp', 'objc'])\n\nadd_project_arguments(cc.get_supported_arguments([\n    '-Wextra',\n    '-Wsign-compare',\n    '-Wundef',\n    '-Wpointer-arith',\n    '-Wvolatile-register-var',\n    '-Wformat',\n    '-Wformat-security',\n    '-Wduplicated-branches',\n    '-Wduplicated-cond',\n    '-Wbad-function-cast',\n    '-Wwrite-strings',\n    '-Wmissing-prototypes',\n    '-Werror-implicit-function-declaration',\n    '-Winit-self',\n    '-Wlogical-op',\n    '-Wshadow=local',\n    '-Wmultistatement-macros',\n    '-pipe'\n]), language: ['c'])\n\nadd_project_arguments(cpp.get_supported_arguments([\n    '-Wextra',\n    '-Wsign-compare',\n    '-Wundef',\n    '-Wpointer-arith',\n    '-Wvolatile-register-var',\n    '-Wformat',\n    '-Wformat-security',\n    '-Wduplicated-branches',\n    '-Wduplicated-cond',\n]), language: ['cpp'])\n\nif get_option('extra_checks')\n    add_project_arguments(cc.get_supported_arguments([\n        '-Werror=missing-field-initializers',\n        '-Werror=format',\n        '-Werror=return-mismatch',\n        '-Werror=incompatible-pointer-types',\n        '-Werror=restrict',\n        '-Werror=int-conversion',\n        '-Werror=implicit-int',\n        '-Werror=declaration-missing-parameter-type'\n    ]), language: ['c'])\n    add_project_arguments(cpp.get_supported_arguments([\n        '-Werror=missing-field-initializers',\n        '-Werror=format',\n    ]), language: ['cpp'])\nendif\n\nif get_option('branch_protection') \\\n    .require(host_machine.cpu_family() == 'aarch64', error_message: 'Branch protection is only available for AArch64') \\\n    .require(cc.has_argument('-mbranch-protection=standard'), error_message: 'Compiler does not support `-mbranch-protection`') \\\n    .allowed()\n    add_project_arguments('-mbranch-protection=standard', language: ['c', 'cpp'])\nendif\n\nif cc.get_id() not in ['clang-cl']\n    add_project_arguments(cc.get_supported_arguments([\n        '-Wall', # too verbose with clang-cl\n    ]), language: ['c', 'cpp'])\nendif\n\nadd_project_arguments(cc.first_supported_argument(['-Werror-implicit-function-declaration', '-we4013']), language: ['c'])\n\n#\n# Check if other libs are needed\n#\nrt_lib = []\npossible_rt_libs = ['rt']\nif host_system != 'windows'\n    possible_rt_libs += ['pthread']\nendif\nforeach l : possible_rt_libs\n    possible_rt_lib_lib = cc.find_library(l, required: false)\n    if possible_rt_lib_lib.found() and \\\n       cc.has_function('clock_nanosleep', dependencies: possible_rt_lib_lib)\n        rt_lib = possible_rt_lib_lib\n        break\n    endif\nendforeach\n\n#\n# Socket library checks\n#\n\n# Check for socket library\nsocket_libs = cc.find_library('socket', required: false)\n\n# Check for function 'connect' (optionally link with socket lib if it exists)\nif not cc.has_function('connect', prefix: vlc_conf_prefix + '#include <sys/socket.h>', dependencies: socket_libs)\n\n    if host_system == 'windows'\n        # If not found and on windows:\n        socket_libs = []\n        socket_libs += cc.find_library('iphlpapi', required: true)\n        socket_libs += cc.find_library('ws2_32', required: true)\n    endif\nendif\n\n# Define some strings for the function check since the required headers\n# will differ based on the platform we're building for\nif host_system == 'windows'\n  arpa_inet_h = '#include <ws2tcpip.h>\\n#include <windows.h>'\n  net_if_h = '#include <windows.h>\\n#include <iphlpapi.h>'\n  getpid_h = '#include <process.h>'\n  swab_h   = '#include <stdlib.h>'\nelse\n  arpa_inet_h = '#include <arpa/inet.h>'\n  net_if_h = '#include <net.if.h>'\n  getpid_h = '#include <unistd.h>'\n  swab_h   = '#include <unistd.h>'\nendif\n\n#\n# Check for functions\n# Entry format: [function, prefix]\n\n# General functions\ncheck_functions = [\n    ['accept4',          '#include <sys/socket.h>'],\n    ['dup3',             '#include <unistd.h>'],\n    ['qsort_r',          '#include <stdlib.h>'],\n    ['fcntl',            '#include <fcntl.h>'],\n    ['flock',            '#include <sys/file.h>'],\n    ['fstatvfs',         '#include <sys/statvfs.h>'],\n    ['fstatat',          '#include <sys/stat.h>'],\n    ['fork',             '#include <unistd.h>'],\n    ['getmntent_r',      '#include <mntent.h>'],\n    ['getpwuid_r',       '#include <pwd.h>'],\n    ['isatty',           '#include <unistd.h>'],\n    ['isatty',           '#include <io.h>'],\n    ['memalign',         '#include <malloc.h>'],\n    ['mkostemp',         '#include <unistd.h>'],\n    ['mkostemp',         '#include <stdlib.h>'],\n    ['mmap',             '#include <sys/mman.h>'],\n    ['open_memstream',   '#include <stdio.h>'],\n    ['pipe2',            '#include <unistd.h>'],\n    ['posix_fadvise',    '#include <fcntl.h>'],\n    ['strcoll',          '#include <string.h>'],\n    ['wordexp',          '#include <wordexp.h>'],\n\n    ['uselocale',        '#include <locale.h>'],\n    ['uselocale',        '#include <xlocale.h>'],\n    ['newlocale',        '#include <locale.h>'],\n    ['newlocale',        '#include <xlocale.h>'],\n    ['setlocale',        '#include <locale.h>'],\n\n    ['getenv',           '#include <stdlib.h>'],\n\n    ['if_nametoindex',   net_if_h],\n    ['if_nameindex',     net_if_h],\n\n    ['backtrace',        '#include <execinfo.h>'],\n    ['_lock_file',       '#include <stdio.h>'],\n]\n\n# Linux specific functions\nif host_system == 'linux'\n    check_functions += [\n        ['eventfd',              '#include <sys/eventfd.h>'],\n        ['vmsplice',             '#include <fcntl.h>'],\n        ['sched_getaffinity',    '#include <sched.h>'],\n        ['recvmmsg',             '#include <sys/socket.h>'],\n        ['memfd_create',         '#include <sys/mman.h>'],\n    ]\nendif\n\n# Windows specific functions\nif host_system == 'windows'\n    check_functions += [\n        ['_lock_file',      '#include <windows.h>'],\n    ]\nendif\n\nforeach f : check_functions\n    # DO NOT SIMPLIFY this if away by moving the the has_function\n    # into the cdata.set! There are some functions checked twice\n    # in different headers, if one is found with one header and\n    # then not found using the other header, it would overwrite\n    # the previous value!\n\n    if cc.has_function(f[0], prefix: vlc_conf_prefix + f[1], dependencies: [socket_libs])\n        cdata.set('HAVE_' + f[0].underscorify().to_upper(), 1)\n    endif\nendforeach\n\n# Libcompat functions (if missing, provided in compat)\n# Entry format: [function, prefix]\nlibcompat_functions = [\n    ['aligned_alloc',    '#include <stdlib.h>'],\n    ['atof',             '#include <stdlib.h>'],\n    ['atoll',            '#include <stdlib.h>'],\n    ['dirfd',            '#include <dirent.h>'],\n    ['fdopendir',        '#include <dirent.h>'],\n    ['flockfile',        '#include <stdio.h>'],\n    ['fsync',            '#include <unistd.h>'],\n    ['getdelim',         '#include <stdio.h>'],\n    ['getpid',           getpid_h],\n    ['lfind',            '#include <search.h>'],\n    ['lldiv',            '#include <stdlib.h>'],\n    ['memrchr',          '#include <string.h>'],\n    ['nrand48',          '#include <stdlib.h>'],\n    ['poll',             '#include <poll.h>'],\n    ['posix_memalign',   '#include <stdlib.h>'],\n    ['readv',            '#include <sys/uio.h>'],\n    ['recvmsg',          '#include <sys/socket.h>'],\n    ['rewind',           '#include <stdio.h>'],\n    ['sendmsg',          '#include <sys/socket.h>'],\n    ['setenv',           '#include <stdlib.h>'],\n    ['strcasecmp',       '#include <strings.h>'],\n    ['strcasestr',       '#include <string.h>'],\n    ['strdup',           '#include <string.h>'],\n    ['strlcpy',          '#include <string.h>'],\n    ['strndup',          '#include <string.h>'],\n    ['strnlen',          '#include <string.h>'],\n    ['strnstr',          '#include <string.h>'],\n    ['strsep',           '#include <string.h>'],\n    ['strtof',           '#include <stdlib.h>'],\n    ['strtok_r',         '#include <string.h>'],\n    ['strtoll',          '#include <stdlib.h>'],\n    ['swab',             swab_h],\n    ['tdestroy',         '#include <search.h>'],\n    ['tfind',            '#include <search.h>'],\n    ['timegm',           '#include <time.h>'],\n    ['timespec_get',     '#include <time.h>'],\n    ['gmtime_r',         '#include <time.h>'],\n    ['localtime_r',      '#include <time.h>'],\n    ['strverscmp',       '#include <string.h>'],\n    ['writev',           '#include <sys/uio.h>'],\n    ['asprintf',         '#include <stdio.h>'],\n    ['vasprintf',        '#include <stdio.h>'],\n\n    ['gettimeofday',     '#include <sys/time.h>'],\n\n    ['clock_gettime',    '#include <time.h>'],\n    ['clock_nanosleep',  '#include <time.h>'],\n    ['clock_getres',     '#include <time.h>'],\n\n    ['inet_pton',        arpa_inet_h],\n    ['inet_ntop',        arpa_inet_h],\n]\n\n# Linux specific functions\nif host_system == 'linux'\n    libcompat_functions += [\n        ['getauxval',              '#include <sys/auxv.h>'],\n    ]\nendif\n\nlibcompat_sources = []\n\nif have_win_store\n    libcompat_sources += 'gai_strerror.c'\nendif\n\n# Check all functions in libcompat_functions array\nforeach f : libcompat_functions\n    if cc.has_function(f[0], prefix: vlc_conf_prefix + f[1], dependencies: [rt_lib, socket_libs])\n        cdata.set('HAVE_' + f[0].underscorify().to_upper(), 1)\n    else\n        libcompat_sources += f[0] + '.c'\n    endif\nendforeach\n\n# These functions need to be checked with has_header_symbol as\nlibcompat_functions = [\n    ['realpath',         'stdlib.h'],\n]\n\nforeach f : libcompat_functions\n    if cc.has_header_symbol(f[1], f[0], prefix: vlc_conf_prefix)\n        cdata.set('HAVE_' + f[0].underscorify().to_upper(), 1)\n    else\n        libcompat_sources += f[0] + '.c'\n    endif\nendforeach\n\n# Check for function 'nanf' (optionally link with libm if it exists)\nif cc.has_function('nanf', prefix: vlc_conf_prefix + '#include <math.h>', dependencies: m_lib)\n    cdata.set('HAVE_NANF', 1)\nendif\n\n# Check for function 'sincos' (optionally link with libm if it exists)\nif cc.has_function('sincos', prefix: vlc_conf_prefix + '#include <math.h>', dependencies: m_lib)\n    cdata.set('HAVE_SINCOS', 1)\nelse\n    libcompat_sources += 'sincos.c'\nendif\n\n# Check for function 'fdatasync' (define it to 'fsync' if missing)\nif not cc.has_function('fdatasync', prefix: vlc_conf_prefix + '#include <unistd.h>')\n    cdata.set('fdatasync', 'fsync')\nendif\n\n#\n# Additional checks\n#\n\n# Check which kind of restrict keyword is supported\n# Program based on autoconf c.m4\n#\n# Copyright (C) 2001-2012 Free Software Foundation, Inc.\n#\n# Written by David MacKenzie, with help from\n# Akim Demaille, Paul Eggert,\n# Franc,ois Pinard, Karl Berry, Richard Pixley, Ian Lance Taylor,\n# Roland McGrath, Noah Friedman, david d zuhn, and many others.\nrestrict_test = '''\n    #define restrict_kw @0@\n    typedef int * int_ptr;\n    int foo (int_ptr restrict_kw ip) { return ip[0]; }\n\n    int main() {\n        int s[1];\n        int * restrict_kw t = s;\n        t[0] = 0;\n        return foo(t);\n    }\n'''\n\n# Order is the same as in AC_C_RESTRICT\n\n# Check for __restrict support\nif cc.compiles(restrict_test.format('__restrict'), name: 'Test __restrict support')\n    cdata.set('restrict', '__restrict')\n\n# Check for __restrict__ support\nelif cc.compiles(restrict_test.format('__restrict__'), name: 'Test __restrict__ support')\n    cdata.set('restrict', '__restrict__')\n\n# Check for _Restrict support\nelif cc.compiles(restrict_test.format('_Restrict'), name: 'Test _Restrict support')\n    cdata.set('restrict', '_Restrict')\n\n# Check for restrict support\nelif not cc.compiles(restrict_test.format('restrict'), name: 'Test restrict support')\n    cdata.set('restrict', '')\nendif\n\n\n# Check for C++ typeof support\nif cpp.compiles('int a; typeof(a) foo[1];', name: 'Test C++ typeof support')\n    cdata.set('HAVE_CXX_TYPEOF', 1)\nendif\n\n# Check for __attribute__((packed)) support\nif cc.compiles('struct __attribute__((packed)) foo { int bar; };',\n               name: '__attribute__((packed))')\n    cdata.set('HAVE_ATTRIBUTE_PACKED', 1)\nendif\n\n# Check for C11 _Thread_local storage qualifier support\nif cc.compiles('_Thread_local int foo = 0;', name: 'Test _Thread_local support')\n    cdata.set('HAVE_THREAD_LOCAL', 1)\nendif\n\n# Check for wrong (non-POSIX) qsort_r prototype\nqsort_r_test = '''\n    #define _GNU_SOURCE\n    #include <stdlib.h>\n    _Static_assert(_Generic((qsort_r),\n        void (*)(void *, size_t, size_t, void *,\n                 int (*)(void *, const void *, const void *)) : 1, default: 0),\n        \"Bad prototype not matched\");\n'''\nif cc.compiles(qsort_r_test, name: 'Test qsort_r non-POSIX prototype')\n    cdata.set('HAVE_BROKEN_QSORT_R', 1)\nendif\n\n# Check for max_align_t type\nif cc.has_type('max_align_t', prefix: '#include <stddef.h>')\n    cdata.set('HAVE_MAX_ALIGN_T', 1)\nendif\n\n# Check for struct timespec\nif cc.has_type('struct timespec', prefix: '#include <time.h>')\n    cdata.set('HAVE_STRUCT_TIMESPEC', 1)\nendif\n\n# Add -fvisibility=hidden if compiler supports those\nadd_project_arguments(\n    cc.get_supported_arguments('-fvisibility=hidden'),\n    language: ['c'])\n\n# Stack smashing protection (default enabled for optimized builds)\nif (get_option('ssp')\n    .disable_auto_if(get_option('optimization') == '0')\n    .allowed())\n    add_project_arguments(\n        cc.get_supported_arguments('-fstack-protector-strong'),\n        language: ['c', 'cpp'])\n\n    if host_system == 'windows'\n        # Win32 requires linking to ssp for stack-protection\nssp_test = '''\n#include <stdio.h>\n\nint main(void) {\n    char buf[100];\n    fgets(buf, sizeof(buf), stdin);\n    return 0;\n}\n'''\n        # Check if linker supports -lssp\n        if cc.links(ssp_test, args: ['-fstack-protector-strong', '-lssp'],\n                    name: 'linker supports stack protectors')\n            add_project_link_arguments('-lssp', language: ['c', 'cpp'])\n        endif\n    endif\nendif\n\n# Check if linker supports -Bsymbolic\nsymbolic_linkargs = []\nif cc.has_link_argument('-Wl,-Bsymbolic')\n    symbolic_linkargs += '-Wl,-Bsymbolic'\nendif\n\n# Check for struct sockaddr_storage type\n# Define it to `sockaddr` if missing\nsockaddr_prefix = '#include <sys/types.h>\\n'\nif host_system == 'windows'\n    sockaddr_prefix += '#include <winsock2.h>'\nelse\n    sockaddr_prefix += '#include <sys/socket.h>'\nendif\n\nhave_sockaddr_storage = cc.has_type('struct sockaddr_storage', prefix: sockaddr_prefix)\nif not have_sockaddr_storage\n    cdata.set('sockaddr_storage', 'sockaddr')\n    cdata.set('ss_family', 'sa_family')\nendif\n\n# Check for ssize_t type\n# Define it to `ptrdiff_t` if missing\nif not cc.has_type('ssize_t', prefix: '#include <sys/types.h>')\n    cdata.set('ssize_t', 'ptrdiff_t')\n    cdata.set('SSIZE_MAX', 'PTRDIFF_MAX')\nendif\n\n# Check for struct pollfd type\n# TODO: Refactor once updating to meson 1.0.0\n# which supports prefix arrays.\npollfd_prefix = '#include <sys/types.h>\\n'\nif cdata.get('HAVE_POLL', 0) == 1\n    pollfd_prefix += '#include <poll.h>'\nelif host_system == 'windows'\n    pollfd_prefix += '#include <winsock2.h>'\nendif\n\nif cc.has_type('struct pollfd', prefix: '\\n'.join([vlc_conf_prefix, pollfd_prefix]))\n    cdata.set('HAVE_STRUCT_POLLFD', 1)\nendif\n\n# Check for if_nameindex function and struct\nif cc.has_function('if_nameindex', prefix: '#include <net/if.h>')\n  cdata.set('HAVE_IF_NAMEINDEX', 1)\nendif\n\nif cc.has_type('struct if_nameindex', prefix: '#include <net/if.h>')\n  cdata.set('HAVE_STRUCT_IF_NAMEINDEX', 1)\nendif\n\n# Check for locale_t type in C++ locale header\nif cpp.has_type('locale_t', prefix: '#include <locale>')\n    cdata.set('HAVE_CXX_LOCALE_T', 1)\nendif\n\n# Check if build machine is big endian\nif build_machine.endian() == 'big'\n    cdata.set('WORDS_BIGENDIAN', 1)\nendif\n\n# Define the shared library extension\nif host_system == 'windows'\n    cdata.set_quoted('LIBEXT', '.dll')\nelif host_system == 'darwin'\n    cdata.set_quoted('LIBEXT', '.dylib')\nelse\n    cdata.set_quoted('LIBEXT', '.so')\nendif\n\n#\n# Populate config.h with additional infos\n#\n\ncdata.set_quoted('VERSION',         vlc_version)\ncdata.set_quoted('PACKAGE_VERSION', vlc_version)\ncdata.set_quoted('VERSION_MESSAGE', f'@vlc_version@ @vlc_version_codename@')\n\ncdata.set('VERSION_MAJOR',      vlc_version_major)\ncdata.set('VERSION_MINOR',      vlc_version_minor)\ncdata.set('VERSION_REVISION',   vlc_version_revision)\ncdata.set('VERSION_EXTRA',      vlc_version_extra)\n\ncdata.set('PACKAGE_VERSION_MAJOR',      vlc_version_major)\ncdata.set('PACKAGE_VERSION_MINOR',      vlc_version_minor)\ncdata.set('PACKAGE_VERSION_REVISION',   vlc_version_revision)\ncdata.set('PACKAGE_VERSION_EXTRA',      vlc_version_extra)\ncdata.set_quoted('PACKAGE_VERSION_DEV', vlc_version_type)\n\ncdata.set('LIBVLC_ABI_MAJOR', libvlc_abi_version_major)\ncdata.set('LIBVLC_ABI_MINOR', libvlc_abi_version_minor)\ncdata.set('LIBVLC_ABI_MICRO', libvlc_abi_version_micro)\n\ncdata.set_quoted('PACKAGE',             vlc_package_name)\ncdata.set_quoted('PACKAGE_NAME',        vlc_package_name)\ncdata.set_quoted('PACKAGE_STRING',      f'@vlc_package_name@ @vlc_version@')\ncdata.set_quoted('COPYRIGHT_YEARS',     vlc_copyright_years)\ncdata.set_quoted('COPYRIGHT_MESSAGE',   f'Copyright © @vlc_copyright_years@ the VideoLAN team')\n\n# Compiler and build system info\ncdata.set_quoted('VLC_COMPILER',        cc.get_id() + ' ' + cc.version())\ncdata.set_quoted('VLC_COMPILE_BY',      '[not implemented with meson]') # TODO\ncdata.set_quoted('VLC_COMPILE_HOST',    '[not implemented with meson]') # TODO\ncdata.set_quoted('CONFIGURE_LINE',      '[not implemented with meson]') # TODO\n\n# Paths\nprefix_path = get_option('prefix')\nvlc_pkg_suffix = meson.project_name().to_lower()\n\nlibdir_path = prefix_path / get_option('libdir')\npkglibdir_path = libdir_path / vlc_pkg_suffix\nlibexecdir_path = prefix_path / get_option('libexecdir')\npkglibexecdir_path = libexecdir_path / vlc_pkg_suffix\nsysdatadir_path = prefix_path / get_option('datadir')\npkgdatadir_path = sysdatadir_path / vlc_pkg_suffix\nlocaledir_path = prefix_path / get_option('localedir')\n\ncdata.set_quoted('LIBDIR', libdir_path)\ncdata.set_quoted('PKGLIBDIR', pkglibdir_path)\ncdata.set_quoted('LIBEXECDIR', libexecdir_path)\ncdata.set_quoted('PKGLIBEXECDIR', pkglibexecdir_path)\ncdata.set_quoted('SYSDATADIR', sysdatadir_path)\ncdata.set_quoted('PKGDATADIR', pkgdatadir_path)\ncdata.set_quoted('LOCALEDIR', localedir_path)\n\n# Enable stream outputs\nif get_option('stream_outputs')\n    cdata.set('ENABLE_SOUT', 1)\nendif\n\n# Enable VLM\nif get_option('videolan_manager')\n    if not get_option('stream_outputs')\n        error('The VideoLAN manager requires stream outputs.')\n    endif\n    cdata.set('ENABLE_VLM', 1)\nendif\n\n# Allow running as root\n# (useful for people running on embedded platforms)\nif get_option('run_as_root')\n    cdata.set('ALLOW_RUN_AS_ROOT', 1)\nendif\n\n# Optimize for memory usage vs speed\nif get_option('optimize_memory')\n    cdata.set('OPTIMIZE_MEMORY', 1)\nendif\n\n# Allow binary package maintainer to pass a custom string\n# to avoid cache problem\nif get_option('binary_version') != ''\n    cdata.set_quoted('DISTRO_VERSION', get_option('binary_version'))\nendif\n\nif get_option('css_engine').allowed()\n    cdata.set('HAVE_CSS', 1)\nendif\n\n\n# Font options\nif get_option('default_font_path') != ''\n    cdata.set_quoted('DEFAULT_FONT_FILE', get_option('default_font_path'))\nendif\n\nif get_option('default_monospace_font_path') != ''\n    cdata.set_quoted('DEFAULT_MONOSPACE_FONT_FILE', get_option('default_monospace_font_path'))\nendif\n\nif get_option('default_font_family') != ''\n    cdata.set_quoted('DEFAULT_FAMILY', get_option('default_font_family'))\nendif\n\nif get_option('default_monospace_font_family') != ''\n    cdata.set_quoted('DEFAULT_MONOSPACE_FAMILY', get_option('default_monospace_font_family'))\nendif\n\ngcrypt_dep = dependency('libgcrypt',\n                         version: '>= 1.6.0',\n                         required: get_option('libgcrypt'))\nif gcrypt_dep.found()\n    cdata.set('HAVE_GCRYPT', 1)\nendif\n\n# Flex/Bison support\n# This defines the `bison_gen` and `flex_gen` generator variables to be used\n# to process Bison and Flex files respectively.\n\nflex = find_program('flex', required: false)\nbison = find_program('bison', required: false)\n\nif flex.found() and bison.found()\n    bison_gen = generator(bison,\n        output: ['@BASENAME@.c', '@BASENAME@.h'],\n        arguments: ['@INPUT@', '--defines=@OUTPUT1@', '--output=@OUTPUT0@'])\n\n    flex_gen = generator(flex,\n        output: '@PLAINNAME@.yy.c',\n        arguments: ['-o', '@OUTPUT@', '@INPUT@'])\nendif\n\n# Some missing functions are implemented in compat\nsubdir('compat')\n\n# Headers\nsubdir('include')\n\n# libvlccore\nsubdir('src')\n\n# LibVLC\nsubdir('lib')\n\n# VLC binaries\nsubdir('bin')\n\n# VLC plugins\nsubdir('modules')\n\n# Generate config.h\nconfigure_file(input: 'config.h.meson',\n  output: 'config.h',\n  configuration: cdata)\n\nif (get_option('tests').allowed())\n    # Integration and non-regression tests, some unittest are there too but the\n    # modules/, src/ and lib/ folders should be favoured for those.\n    subdir('test')\nendif\n\nif get_option('rust').allowed()\n    warning('''\n    The Rust module support is currently EXPERIMENTAL and INCOMPLETE.\n    Testing and reporting or contributing missing plugins and features is welcome!\n    ''')\nendif\n\nwarning('''\n    The Meson build system of VLC is currently EXPERIMENTAL and INCOMPLETE.\n    Testing and reporting or contributing missing plugins and features is welcome!\n''')\n"
        },
        {
          "name": "meson_options.txt",
          "type": "blob",
          "size": 17.470703125,
          "content": "# General options\n\noption('vlc',\n    type : 'boolean',\n    value : true,\n    description : 'Build the VLC executable program.')\n\noption('tests',\n    type : 'feature',\n    value : 'auto',\n    description : 'Build the VLC test executables.')\n\noption('nls',\n    type : 'feature',\n    value : 'auto',\n    description : 'Native Language Support')\n\noption('optimize_memory',\n    type : 'boolean',\n    value : false,\n    description : 'Optimize memory usage over performance')\n\noption('binary_version',\n    type : 'string',\n    value : '',\n    description : 'To avoid plugins cache problem between binary version')\n\noption('stream_outputs',\n    type : 'boolean',\n    value : true,\n    description : 'Build the VLC stream output modules')\n\noption('videolan_manager',\n    type : 'boolean',\n    value : true,\n    description : 'Build the VideoLAN manager')\n\noption('addon_manager',\n    type : 'boolean',\n    value : true,\n    description : 'Build the VLC add-on manager modules')\n\noption('run_as_root',\n    type : 'boolean',\n    value : false,\n    description : 'Allow running VLC as root')\n\noption('branch_protection',\n    type : 'feature',\n    value : 'auto',\n    description : 'AArch64 branch protection')\n\noption('ssp',\n    type : 'feature',\n    value : 'auto',\n    description : 'Stack smashing protection')\n\noption('extra_checks',\n    type : 'boolean',\n    value : false,\n    description : 'Turn some warnings into compilation error')\n\noption('winstore_app',\n    type : 'boolean',\n    value : false,\n    description : 'Build targeted for Windows Store apps')\n\noption('update-check',\n    type : 'feature',\n    value : 'disabled',\n    description : 'update checking system')\n\noption('rust',\n    type : 'feature',\n    value : 'disabled',\n    description : 'Experimental pure Rust VLC modules')\n\noption('extra_rust_flags',\n    type : 'array',\n    value : [],\n    description : 'Extra RUSTFLAGS to be passed to the compiler when compiling Rust VLC modules')\n\noption('vendored_rust_deps',\n    type : 'string',\n    value : 'no',\n    description : 'Should use vendored sources: `no`, `yes` or PATH_TO_VENDORED_SOURCES')\n\noption('sse',\n    type : 'feature',\n    value : 'auto',\n    description : 'SSE (2-4) optimizations')\n\noption('avx',\n    type : 'feature',\n    value : 'auto',\n    description : 'AVX (1-2) optimizations')\n\n# TODO: Missing neon option\n# TODO: Missing sve option\n# TODO: Missing altivec option\n\n# Font options\n\noption('default_font_path',\n    type : 'string',\n    value : '',\n    description : 'Path to the default font')\n\noption('default_monospace_font_path',\n    type : 'string',\n    value : '',\n    description : 'Path to the default monospace font')\n\noption('default_font_family',\n    type : 'string',\n    value : '',\n    description : 'Name of the default font family')\n\noption('default_monospace_font_family',\n    type : 'string',\n    value : '',\n    description : 'Name of the default monospace font family')\n\n# Module options\n\noption('vcd_module',\n    type : 'boolean',\n    value : true,\n    description : 'Built-in VCD and CD-DA support')\n\noption('css_engine',\n    type : 'feature',\n    value : 'auto',\n    description : 'CSS selector engine for WebVTT')\n\n# Dependency options\noption('chromecast',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable chromecast support')\n\noption('qt',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable Qt support')\n\noption('qt_gtk',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable Qt GTK support')\n\noption('qt_qml_debug',\n    type: 'boolean',\n    value: false,\n    description: 'Enable/disable Qt QML debugger')\n\noption('skins2',\n    type : 'feature',\n    value : 'auto',\n    description : 'skins interface module support')\n\noption('dbus',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable D-Bus message bus support')\n\noption('wayland',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable wayland support')\n\noption('x11',\n    type : 'feature',\n    value : 'auto',\n    description : 'X11 support')\n\noption('xcb',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable X11 support with XCB')\n\noption('avcodec',\n    type : 'feature',\n    value : 'enabled',\n    description : 'Enable/disable avcodec support')\n\noption('merge-ffmpeg',\n    type : 'boolean',\n    value : false,\n    description : 'merge FFmpeg-based plugins')\n\noption('libva',\n    type: 'feature',\n    value: 'auto',\n    description: 'VAAPI GPU decoding support (libVA)')\n\noption('omxil',\n    type: 'boolean',\n    value: false,\n    description: 'Enable/disable OpenMAX IL codec')\n\noption('avformat',\n    type : 'feature',\n    value : 'enabled',\n    description : 'Enable/disable avformat support')\n\noption('alsa',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable ALSA support')\n\noption('pulse',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable Pulseaudio support')\n\noption('oss',\n    type: 'feature',\n    value: 'auto',\n    description: 'Enable/disable OSS support (default-enabled on BSD)')\n\noption('ogg',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable libogg support')\n\noption('mpg123',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable libmpg123 support')\n\noption('schroedinger',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable schroedinger support')\n\noption('rsvg',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable librsvg support')\n\noption('cairo',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable libcairo support')\n\noption('freetype',\n    type : 'feature',\n    value : 'auto',\n    description : 'Font rasterization support with freetype')\n\noption('flac',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable libflac support')\n\noption('opus',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable libopus support')\n\noption('theoraenc',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable theoraenc support')\n\noption('theoradec',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable theoradec support')\n\noption('daaladec',\n    type : 'feature',\n    value : 'disabled',\n    description : 'Enable/disable experimental daaladec support')\n\noption('daalaenc',\n    type : 'feature',\n    value : 'disabled',\n    description : 'Enable/disable experimental daalaenc support')\n\noption('vorbis',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable vorbis support')\n\noption('vsxu',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable VSXU visualization support')\n\noption('x265',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable libx265 support')\n\noption('x264',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable libx264 support')\n\noption('x262',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable libx262 support')\n\noption('fdk-aac',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable fdk-aac support')\n\noption('vpx',\n    type : 'feature',\n    value : 'auto',\n    description : 'libvpx VP8/VP9 encoder and decoder')\n\noption('shine',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable shine support')\n\noption('aom',\n    type : 'feature',\n    value : 'auto',\n    description : 'libaom AV1 decoder support')\n\noption('rav1e',\n    type: 'feature',\n    value: 'auto',\n    description: 'rav1e AV1 encoder support')\n\noption('dav1d',\n    type : 'feature',\n    value : 'auto',\n    description : 'libdav1d AV1 decoder support')\n\noption('twolame',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable twolame support')\n\noption('vpl',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable libvpl support')\n\noption('spatialaudio',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable libspatialaudio support')\n\noption('samplerate',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable libsamplerate support')\n\noption('soxr',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable soxr support')\n\noption('speex',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable speex support')\n\noption('speexdsp',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable speexdsp support')\n\noption('caca',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable caca support')\n\noption('drm',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable libdrm support')\n\noption('goom2',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable goom2 visualization plugin')\n\noption('avahi',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable zeroconf (avahi) services discovery plugin')\n\noption('upnp',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable UPnP plugin (Intel SDK)')\n\noption('libxml2',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable XML support')\n\noption('medialibrary',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable medialibrary support')\n\noption('faad',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable faad support')\n\noption('fluidsynth',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable fluidsynth/fluidlite support')\n\noption('microdns',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable microdns support')\n\noption('gnutls',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable GnuTLS support')\n\noption('libsecret',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable libsecret support')\n\noption('matroska',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable matroska (MKV) support')\n\noption('libdvbpsi',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable libdvbpsi support')\n\noption('dvbcsa',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable libdvbcsa support')\n\noption('aribb24',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable aribb24 support')\n\noption('libmodplug',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable libmodplug support')\n\noption('taglib',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable taglib support')\n\noption('libcddb',\n    type : 'feature',\n    value : 'auto',\n    description : 'Enable/disable libcddb support')\n\noption('libass',\n    type : 'feature',\n    value : 'auto',\n    description : 'ASS/SSA subtitle support using libass')\n\noption('libchromaprint',\n    type : 'feature',\n    value : 'auto',\n    description : 'Audio fingerprinting support using chromaprint')\n\noption('mad',\n    type : 'feature',\n    value : 'auto',\n    description : 'MP3 decoding support using libmad')\n\noption('png',\n    type : 'feature',\n    value : 'enabled',\n    description : 'PNG support')\n\noption('jpeg',\n    type : 'feature',\n    value : 'auto',\n    description : 'JPEG support')\n\noption('bpg',\n    type : 'feature',\n    value : 'disabled',\n    description : 'BPG support')\n\noption('aribsub',\n    type : 'feature',\n    value : 'auto',\n    description : 'ARIB Subtitles support')\n\noption('telx',\n    type : 'feature',\n    value : 'auto',\n    description : 'Teletext decoding support (conflicting with zvbi, default enabled if zvbi is absent)')\n\noption('zvbi',\n    type : 'feature',\n    value : 'enabled',\n    description : 'VBI (inc. Teletext) decoding support with libzvbi')\n\noption('kate',\n    type : 'feature',\n    value : 'auto',\n    description : 'kate codec')\n\noption('tiger',\n    type : 'feature',\n    value : 'auto',\n    description : 'Tiger rendering library for Kate streams')\n\noption('libplacebo',\n    type : 'feature',\n    value : 'auto',\n    description : 'libplacebo support')\n\noption('gles2',\n    type : 'feature',\n    value : 'disabled',\n    description : 'GLES2 support')\n\noption('lua',\n    type : 'feature',\n    value : 'enabled',\n    description : 'Lua support')\n\noption('srt',\n    type : 'feature',\n    value : 'auto',\n    description : 'SRT input/output plugin')\n\noption('vulkan',\n    type : 'feature',\n    value : 'auto',\n    description : 'vulkan output')\n\noption('screen',\n    type : 'feature',\n    value : 'enabled',\n    description : 'screen capture')\n\noption('freerdp',\n    type : 'feature',\n    value : 'auto',\n    description : 'RDP/Remote Client Desktop support')\n\noption('vnc',\n    type : 'feature',\n    value : 'auto',\n    description : 'VNC/rfb client support')\n\noption('swscale',\n    type : 'feature',\n    value : 'enabled',\n    description : 'libswscale image scaling and conversion')\n\noption('postproc',\n    type : 'feature',\n    value : 'auto',\n    description : 'libpostproc image post-processing')\n\noption('ebur128',\n    type : 'feature',\n    value : 'auto',\n    description : 'EBU R 128 standard for loudness normalisation')\n\noption('rnnoise',\n    type : 'feature',\n    value : 'auto',\n    description : 'Rnnoise denoiser')\n\noption('mtp',\n    type : 'feature',\n    value : 'auto',\n    description : 'MTP devices support')\n\noption('wasapi',\n    type: 'feature',\n    value: 'auto',\n    description: 'Use the Windows Audio Session API')\n\noption('macosx_avfoundation',\n    type: 'feature',\n    value: 'auto',\n    description: 'macOS AVCapture (Video) module')\n\noption('dc1394',\n    type: 'feature',\n    value: 'auto',\n    description: 'IIDC FireWire input module')\n\noption('dv1394',\n    type: 'feature',\n    value: 'auto',\n    description: 'DV FireWire input module')\n\noption('linsys',\n    type: 'feature',\n    value: 'auto',\n    description: 'Linux Linear Systems Ltd. SDI and HD-SDI input cards')\n\noption('dvdnav',\n    type: 'feature',\n    value: 'auto',\n    description: 'DVD with navigation input module (dvdnav)')\n\noption('dvdread',\n    type: 'feature',\n    value: 'auto',\n    description: 'DVD input module (dvdread)')\n\noption('bluray',\n    type: 'feature',\n    value: 'auto',\n    description: 'Blu-ray input module (libbluray)')\n\noption('shout',\n    type: 'feature',\n    value: 'auto',\n    description: 'Icecast/Shoutcast stream output (libshout)')\n\noption('ncurses',\n    type: 'feature',\n    value: 'auto',\n    description: 'Text-based interface (ncurses)')\n\noption('minimal_macosx',\n    type: 'feature',\n    value: 'auto',\n    description: 'Minimal macOS interface support')\n\noption('udev',\n    type: 'feature',\n    value: 'auto',\n    description: 'Linux udev services discovery')\n\noption('dsm',\n    type: 'feature',\n    value: 'auto',\n    description: 'SMB/CIFS access/sd support')\n\noption('live555',\n    type: 'feature',\n    value: 'auto',\n    description: 'RTSP input through live555')\n\noption('rist',\n    type: 'feature',\n    value: 'auto',\n    description: 'librist support for access and access_output')\n\noption('libgcrypt',\n    type: 'feature',\n    value: 'auto',\n    description: 'libgcrypt support')\n\noption('fontconfig',\n    type: 'feature',\n    value: 'auto',\n    description: 'fontconfig support')\n\noption('fribidi',\n    type: 'feature',\n    value: 'auto',\n    description: 'Fribidi support')\n\noption('harfbuzz',\n    type: 'feature',\n    value: 'auto',\n    description: 'Harfbuzz support')\n\noption('d3d11va',\n    type: 'feature',\n    value: 'auto',\n    description: 'Direct3D11 avcodec support')\n\noption('dxva2',\n    type: 'feature',\n    value: 'auto',\n    description: 'DXVA2 avcodec support')\n\noption('amf_scaler',\n    type: 'feature',\n    value: 'auto',\n    description: 'AMF HQScaler support')\n\noption('amf_frc',\n    type: 'feature',\n    value: 'auto',\n    description: 'AMF Frame Doubler support')\n\noption('amf_vqenhancer',\n    type: 'feature',\n    value: 'auto',\n    description: 'AMF VQ Enhancer support')\n\noption('directx',\n    type: 'feature',\n    value: 'auto',\n    description: 'DirectX support')\n\noption('projectm',\n    type: 'feature',\n    value: 'auto',\n    description: 'projectM visualization plugin')\n\noption('libssh2',\n    type: 'feature',\n    value: 'auto',\n    description: 'libssh2 support')\n\noption('sftp',\n    type: 'feature',\n    value: 'auto',\n    description: 'SFTP file transfer via libssh2')\n\noption('archive',\n    type: 'feature',\n    value: 'auto',\n    description: 'libarchive support')\n\noption('aribb25',\n    type: 'feature',\n    value: 'auto',\n    description: 'ARIB STD-B25 support')\n\noption('aribcaption',\n    type: 'feature',\n    value: 'auto',\n    description: 'ARIB caption decoder/renderer support')\n\noption('gme',\n    type: 'feature',\n    value: 'auto',\n    description: 'Game Music Emu support')\n\noption('mpc',\n    type: 'feature',\n    value: 'auto',\n    description: 'libmpcdec support')\n\noption('sid',\n    type: 'feature',\n    value: 'auto',\n    description: 'C64 sid demux support')\n\noption('nvdec',\n    type: 'feature',\n    value: 'auto',\n    description: 'NVDEC decoder support')\n\noption('decklink',\n    type: 'feature',\n    value: 'auto',\n    description: 'DeckLink support')\n\noption('nfs',\n    type: 'feature',\n    value: 'auto',\n    description: 'support nfs protocol via libnfs')\n\n# TODO: Missing v4l2\n# TODO: Missing rpi-omxil\n# TODO: Missing gst-decode\n# TODO: Missing merge-ffmpeg\n# TODO: Missing libva\n# TODO: Missing tremor\n# TODO: Missing x26410b\n# TODO: Missing vdpau\n# TODO: Missing kva\n# TODO: Missing mmal\n# TODO: Missing sndio\n# TODO: Missing jack\n# TODO: Missing opensles\n# TODO: Missing kai\n# TODO: Missing qt-qml-cache\n# TODO: Missing qt-qml-debug\n# TODO: Missing libtar\n# TODO: Missing macosx\n# TODO: Missing sparkle\n# TODO: Missing lirc\n# TODO: Missing vsxu\n# TODO: Missing kwallet\n# TODO: Missing osx_notifications\n# TODO: Missing asdcplib\n# TODO: Missing chromecast\n"
        },
        {
          "name": "modules",
          "type": "tree",
          "content": null
        },
        {
          "name": "po",
          "type": "tree",
          "content": null
        },
        {
          "name": "rust-toolchain.toml",
          "type": "blob",
          "size": 0.05078125,
          "content": "[toolchain]\nchannel = \"nightly\"\nprofile = \"default\"\n"
        },
        {
          "name": "share",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}