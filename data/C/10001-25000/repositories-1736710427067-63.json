{
  "metadata": {
    "timestamp": 1736710427067,
    "page": 63,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "jonas/tig",
      "stars": 12546,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".bookignore",
          "type": "blob",
          "size": 0.2900390625,
          "content": "# Blacklist most files since documentation is co-located with the rest\n# of the source to avoid that GitBook copies them to the output\n# directory.\n*.*\n*-*\nCOPYING\nMakefile\ntigrc\n\n## Whitelist AsciiDoc and GitBook files\n!*.adoc\n!*.md\n!*.json\n\n# ... except the manual man-page\ndoc/tigmanual.7.adoc\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.443359375,
          "content": "*.gcno\n*.gcda\n*.html\n*.o\n*.swp\n*~\n.deps\n/_book\n/config.make\n/node_modules/\naclocal.m4\nautom4te.cache\n/compile_commands/\n/compile_commands.json\nconfig.h\nconfig.h.in\nconfig.log\nconfig.status\nconfigure\ncscope.out\nctags\ndoc/*.[157]\ndoc/*.xml\ndoc/manual.html-chunked\ndoc/manual.pdf\ndoc/manual.toc\ndoc/release-docs/\nsrc/builtin-config.c\nsrc/tig\ntags\ntest/coverage\ntest/tools/test-graph\ntest/tmp\ntig-*.tar.gz\ntig-*.tar.gz.sha256\ntig.spec\ntools/doc-gen\ntig.dSYM\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 0.203125,
          "content": "Jonas Fonseca <jonas.fonseca@gmail.com> <fonseca@diku.dk>\nJonas Fonseca <jonas.fonseca@gmail.com> <jonas.fonseca@savoirfairelinux.com>\nJonas Fonseca <jonas.fonseca@gmail.com> <fonseca@antimatter.localdomain>\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 17.66796875,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "INSTALL.adoc",
          "type": "blob",
          "size": 8.21484375,
          "content": "Installation instructions\n=========================\n:docext: adoc\n\nDownload a tarball from https://github.com/jonas/tig/releases[] or clone the Tig\nrepository https://github.com/jonas/tig[https://github.com/jonas/tig.git].\n\nThe latest version is:\nhttps://github.com/jonas/tig/releases/download/tig-2.5.10/tig-2.5.10.tar.gz[tig-2.5.10]\nhttps://github.com/jonas/tig/releases/download/tig-2.5.10/tig-2.5.10.tar.gz.sha256[(sha256)]\n\n*Note:* Do not use the tar.gz file for version 2.0 because it will fail\nto compile due to issue https://github.com/jonas/tig/pull/283[#283] and\nhttps://github.com/jonas/tig/issues/337[#337]\n\nThe quick and simple way to install Tig is:\n\n\t$ make\n\t$ make install\n\nBy default, `tig` is installed in `$HOME/bin`. To install `tig` elsewhere set\n`prefix` to the desired path:\n\n\t$ make prefix=/usr/local\n\t$ sudo make install prefix=/usr/local\n\nAdditional build options can be defined in the `config.make` file, which is\nloaded automatically when running `make` if it exists. By default,\n`contrib/config.make-$kernel_name` is loaded if it exists (currently\navailable for Linux, macOS [`Darwin`] and Cygwin but Linux users should\nprefer the `configure` script). See `contrib/config.make` for example build\noptions.\n\nDocumentation files, such as manpages, are distributed in the release tarballs,\nand can be installed using:\n\n\t$ make install-doc\n\nWhen installing directly from the Tig repository, `make install-doc` will assume\nthat the documentation tool chain is available and build the documentation\nlocally. In case you do not wish to install the required tools, documentation\ncan be installed from the 'release' branch using:\n\n\t$ make install-release-doc\n\nBefore upgrading, you are advised to read link:NEWS.{docext}[the release notes].\n\nInstallation using `configure`\n------------------------------\n\nIf you prefer an autotools-based installation process, you can use the\n`configure` script to detect dependencies and enable features. If you downloaded\nthe Tig sources from https://github.com/jonas/tig/releases/[a release tarball]\nthere's already a `configure` script. However, if you are building from the Tig\nrepository, you need to ensure that `autoconf` is installed on your system and\ngenerate the `configure` script yourself.\n\nTo install using `configure`, run the following commands:\n\n\t$ make configure # Only run if you are building from the Git repository\n\t$ ./configure\n\t$ make\n\t$ make install\n\nIf your `iconv` library is not in the default library and include path, you need\nto pass the `--with-libiconv` option to `configure` to tell it where to look.\n\nIf you have installed ncurses with brew, run configure with the following\nflags to have it properly detected (note this done out of the box if you\nbuild without `configure`):\n\n        $ ./configure LDFLAGS=-L/usr/local/opt/ncurses/lib CPPFLAGS=-I/usr/local/opt/ncurses/include\n\nInstallation using Homebrew\n---------------------------\n\nYou can use link:https://brew.sh[Homebrew] to install Tig on macOS and Linux:\n\n        $ brew install tig\n\nNote, for older installations of Tig, Homebrew does not automatically\nupdate the system-wide `tigrc` file when upgrading Tig and the\nlink:https://github.com/Homebrew/homebrew-core/commit/5600463d68620d68c9745acc490af7f8a16a75cb[behavior]\nwas changed in 2015 to install the system-wide `tigrc` in the\n`/usr/local/share/tig/examples` directory so Tig always uses the\ndefaults compiled into the binary.\n\nIf you see warnings when starting Tig after upgrading, e.g.:\n\n\ttig warning: Errors while loading /usr/local/etc/tigrc\n\nIt means you either need to manually update `/usr/local/etc/tigrc` with\nchanges from `/usr/local/share/tig/examples` rename the file if you\nnever made any changes to it.\n\n\t$ mv /usr/local/etc/tigrc{,.old}\n\n\nInstallation using Nix\n----------------------\n\nYou can use link:https://nixos.org/nix/[Nix] to install Tig on NixOS, or any Linux/macOS distribution with Nix installed:\n\n        $ nix-env -i tig\n\t\nInstallation on Linux\n---------------------\n\nDepending on your distribution, you may be able to use one of the following commands to install Tig on Linux:\n\n        $ apt-get install tig (Debian, Ubuntu)\n        $ dnf install tig (Fedora)\n        $ pacman -S tig (Arch Linux)\n        $ apk add tig (Alpine)\n\nInstallation on FreeBSD\n-----------------------\n\nYou can use link:https://man.freebsd.org/pkg/8[pkg] to install Tig on FreeBSD:\n\n        $ pkg install tig\n\nInstallation on Windows\n-----------------------\n\nEasiest way is to install link:https://gitforwindows.org/[Git-for-Windows]. As \nof version `2.14.2`, it comes bundled with `tig`.\n\nAlternatively, you can also use it by installing link:https://www.cygwin.com/[cygwin].\nYou must then install the packages `git`, `gcc-core`, `make`, `libiconv-devel`\nand `libncurses-devel`. Extract the tarball and install by using `configure`\nas explained above.\n\nIf you want to install from the sources, then you will also need the `automake`\npackage (which will also install `autoconf`). Then run `make configure` and install\nby using `configure` as explained above.\n\nBuild configuration\n-------------------\n\nBuild settings are read from the file `config.make` and for certain systems also\nfrom `contrib/config.make-$kernel`. An example of the latter is macOS, where\n`contrib/config.make-Darwin` provides out-of-the-box configuration for using the\nsystem ncurses library and linking with the iconv library. This makes it easy to\nconfigure the build without having to use the `configure` script. As a side\nnote, `configure` itself generates a `config.make` file.\n\nApart from the different standard `make` build variables (`CC`, `CFLAGS`, etc.)\nand standard `configure` variables (`prefix`, `bindir`, etc.), build settings\ncan be one of the following flags:\n\n - `NO_SETENV`: Define this variable to enable work-around for missing\n   `setenv()`.\n - `NO_MKSTEMPS`: Define this variable to enable work-around for missing\n   `mkstemps()`.\n - `NO_WORDEXP`: Define this variable to enable work-around for missing\n   `wordexp()`.\n - `NO_BUILTIN_TIGRC`: Reduce the size of the binary by not including a\n   built-in tigrc. The built-in tigrc is used as a fallback when no\n   `tigrc` is found in the system configuration directory (e.g. `/etc`).\n - `TIG_USER_CONFIG`: Allow to customize the `tigrc` path (default `~/.tigrc`).\n\nThe following example `config.make` manually configures Tig to use the ncurses\nlibrary with wide character support and include the proper ncurses header file\n(see tig.h for more information):\n\n\tLDLIBS = -lncursesw\n\tCPPFLAGS = -DHAVE_NCURSESW_CURSES_H\n\nFor more examples of build settings, see `contrib/config.make` and\n`config.make.in`.\n\nTools and packages\n------------------\n\nThe following tools and packages are needed:\n\n[cols=\"2<,8<\",options=\"header\"]\n|=============================================================================\n|Tool\t\t\t\t|Description\n|git-core\t\t\t|Tig is just a frontend for Git.\n|ncurses or ncursesw\t\t|Be sure to have the development files\n\t\t\t\t installed. Usually they are available in a\n\t\t\t\t separate package ending with `-dev`.\n\n\t\t\t\t Ncurses with wide character support (ncursesw)\n\t\t\t\t is required to properly handle UTF-8 encoded\n\t\t\t\t strings.\n\n\t\t\t\t Note for packagers: For Tig's `configure`\n\t\t\t\t script to work as expected you should avoid\n\t\t\t\t configuring and building ncurses using\n\t\t\t\t `--with-shared`.\n|iconv\t\t\t\t|If iconv is not provided by the c library\n\t\t\t\t you need to change the Makefile to link it\n\t\t\t\t into the binary.\n|=============================================================================\n\nThe following tools and packages are optional and mainly needed for creating the\nconfigure script and building documentation:\n\n[cols=\"2<,8<\",options=\"header\"]\n|=============================================================================\n|Tool\t\t\t\t|Description\n|readline\t\t\t|Adds support for completion and history in\n\t\t\t\t search and command prompts.\n|PCRE\t\t\t\t|Adds support for Perl Compatible Regular\n\t\t\t\t Expressions in searches.\n|autoconf\t\t\t|Contains autoreconf for generating configure\n\t\t\t\t from configure.ac.\n|asciidoc (>= 8.4)\t\t|Generates HTML and (DocBook) XML from text.\n|xmlto\t\t\t\t|Generates manpages and chunked HTML from XML.\n|DocBook XSL (>= 1.72.0)\t|Used by xmlto for building manpages.\n|DocBook (DSSL/Jade) tools\t|Generates PDF from XML.\n\t\t\t\t Also known as docbook-utils.\n|=============================================================================\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 14.47265625,
          "content": "## Makefile for tig\n\n# The last tagged version. Can be overridden either by the version from\n# git or from the value of the DIST_VERSION environment variable.\nVERSION\t= 2.5.10\n\nall:\n\n# Include kernel specific configuration\nkernel_name := $(shell sh -c 'uname -s 2>/dev/null || echo unknown')\n-include contrib/config.make-$(kernel_name)\n\n# Include setting from the configure script\n-include config.make\n\n# Optional defaults.\n# TIG_ variables are set by contrib/config.make-$(kernel_name).\nTIG_NCURSES ?= -lcurses\nLDFLAGS ?= $(TIG_LDFLAGS)\nCPPFLAGS ?= $(TIG_CPPFLAGS)\nLDLIBS ?= $(TIG_NCURSES) $(TIG_LDLIBS)\nCFLAGS ?= -Wall -O2 $(TIG_CFLAGS)\n\nprefix ?= $(HOME)\nbindir ?= $(prefix)/bin\ndatarootdir ?= $(prefix)/share\nsysconfdir ?= $(prefix)/etc\ndocdir ?= $(datarootdir)/doc\nmandir ?= $(datarootdir)/man\n# DESTDIR=\n\nifneq (,$(wildcard .git))\nGITDESC\t= $(subst tig-,,$(shell git describe 2>/dev/null))\nCOMMIT := $(if $(GITDESC),$(GITDESC),$(VERSION)-g$(shell git describe --always))\nWTDIRTY\t= $(if $(shell git diff-index HEAD 2>/dev/null),-dirty)\nVERSION\t= $(COMMIT)$(WTDIRTY)\nendif\nifdef DIST_VERSION\nVERSION = $(DIST_VERSION)\nendif\n\n# Split the version \"TAG-OFFSET-gSHA1-DIRTY\" into \"TAG OFFSET\"\n# and append 0 as a fallback offset for \"exact\" tagged versions.\nRPM_VERLIST = $(filter-out g% dirty,$(subst -, ,$(VERSION))) 0\nRPM_VERSION = $(word 1,$(RPM_VERLIST))\nRPM_RELEASE = $(word 2,$(RPM_VERLIST))$(if $(WTDIRTY),.dirty)\n\nDFLAGS\t= -g -DDEBUG -Werror -O0\nEXE\t= src/tig\nTOOLS\t= test/tools/test-graph tools/doc-gen\nTXTDOC\t= doc/tig.1.adoc doc/tigrc.5.adoc doc/manual.adoc NEWS.adoc README.adoc INSTALL.adoc test/API.adoc\nMANDOC\t= doc/tig.1 doc/tigrc.5 doc/tigmanual.7\nHTMLDOC = doc/tig.1.html doc/tigrc.5.html doc/manual.html README.html INSTALL.html NEWS.html\nALLDOC\t= $(MANDOC) $(HTMLDOC) doc/manual.html-chunked doc/manual.pdf\n\n# Never include the release number in the tarname for tagged\n# versions.\nifneq ($(if $(DIST_VERSION),$(words $(RPM_VERLIST))),2)\nTARNAME\t= tig-$(RPM_VERSION)-$(RPM_RELEASE)\nelse\nTARNAME\t= tig-$(RPM_VERSION)\nendif\n\noverride CPPFLAGS += '-DTIG_VERSION=\"$(VERSION)\"'\noverride CPPFLAGS += '-DSYSCONFDIR=\"$(sysconfdir)\"'\nifdef TIG_USER_CONFIG\noverride CPPFLAGS += '-DTIG_USER_CONFIG=\"$(TIG_USER_CONFIG)\"'\nendif\n\nASCIIDOC ?= asciidoc\nASCIIDOC_FLAGS = -aversion=$(VERSION) -asysconfdir=$(sysconfdir) -f doc/asciidoc.conf\nXMLTO ?= xmlto\nDOCBOOK2PDF ?= docbook2pdf\n\nLCOV ?= lcov\nGENHTML ?= genhtml\nifneq (,$(shell which gsed 2>/dev/null))\nSED ?= gsed\nelse\nSED ?= sed\nendif\nifneq (,$(shell which gtar 2>/dev/null))\nTAR ?= gtar\nelse\nTAR ?= tar\nendif\n\nGENERATE_COMPILATION_DATABASE ?= no\nifeq ($(GENERATE_COMPILATION_DATABASE),yes)\ncompdb_check = $(shell $(CC) $(ALL_CFLAGS) \\\n\t-c -MJ /dev/null \\\n\t-x c /dev/null -o /dev/null 2>&1; \\\n\techo $$?)\nifneq ($(compdb_check),0)\noverride GENERATE_COMPILATION_DATABASE = no\n$(warning GENERATE_COMPILATION_DATABASE is set to \"yes\", but your compiler does not \\\nsupport generating compilation database entries)\nendif\nelse\nifneq ($(GENERATE_COMPILATION_DATABASE),no)\n$(error please set GENERATE_COMPILATION_DATABASE to \"yes\" or \"no\" \\\n(not \"$(GENERATE_COMPILATION_DATABASE)\"))\nendif\nendif\n\ncompdb_dir = compile_commands\nifeq ($(GENERATE_COMPILATION_DATABASE),yes)\nmissing_compdb_dir = $(compdb_dir)\n$(missing_compdb_dir):\n\t@mkdir -p $@\n\ncompdb_file = $(compdb_dir)/$(subst /,-,$@.json)\ncompdb_args = -MJ $(compdb_file)\nelse\nmissing_compdb_dir = \ncompdb_args =\nendif\n\nall: $(EXE) $(TOOLS)\nall-debug: all\nall-debug: CFLAGS += $(DFLAGS)\ndoc: $(ALLDOC)\ndoc-man: $(MANDOC)\ndoc-html: $(HTMLDOC)\n\nifeq ($(GENERATE_COMPILATION_DATABASE),yes)\nall: compile_commands.json\ncompile_commands.json:\n\t$(QUIET_GEN)sed -e '1s/^/[/' -e '$$s/,$$/]/' $(compdb_dir)/*.o.json > $@+\n\t@if test -s $@+; then mv $@+ $@; else $(RM) $@+; fi\nendif\n\nexport sysconfdir\n\ninstall: all\n\t$(QUIET_INSTALL)tools/install.sh bin $(EXE) \"$(DESTDIR)$(bindir)\"\n\t$(QUIET_INSTALL)tools/install.sh data tigrc \"$(DESTDIR)$(sysconfdir)\"\n\ninstall-doc-man: doc-man\n\t$(Q)$(foreach doc, $(filter %.1, $(MANDOC)), \\\n\t\t$(QUIET_INSTALL_EACH)tools/install.sh data $(doc) \"$(DESTDIR)$(mandir)/man1\";)\n\t$(Q)$(foreach doc, $(filter %.5, $(MANDOC)), \\\n\t\t$(QUIET_INSTALL_EACH)tools/install.sh data $(doc) \"$(DESTDIR)$(mandir)/man5\";)\n\t$(Q)$(foreach doc, $(filter %.7, $(MANDOC)), \\\n\t\t$(QUIET_INSTALL_EACH)tools/install.sh data $(doc) \"$(DESTDIR)$(mandir)/man7\";)\n\ninstall-release-doc-man:\n\tGIT_INDEX_FILE=.tmp-doc-index git read-tree origin/release\n\tGIT_INDEX_FILE=.tmp-doc-index git checkout-index -f --prefix=./ $(MANDOC)\n\trm -f .tmp-doc-index\n\t$(MAKE) install-doc-man\n\ninstall-doc-html: doc-html\n\t$(Q)$(foreach doc, $(HTMLDOC), \\\n\t\t$(QUIET_INSTALL_EACH)tools/install.sh data $(doc) \"$(DESTDIR)$(docdir)/tig\";)\n\ninstall-release-doc-html:\n\tGIT_INDEX_FILE=.tmp-doc-index git read-tree origin/release\n\tGIT_INDEX_FILE=.tmp-doc-index git checkout-index -f --prefix=./ $(HTMLDOC)\n\trm -f .tmp-doc-index\n\t$(MAKE) install-doc-html\n\ninstall-doc: install-doc-man install-doc-html\ninstall-release-doc: install-release-doc-man install-release-doc-html\n\nuninstall:\n\t$(QUIET_UNINSTALL)tools/uninstall.sh \"$(DESTDIR)$(bindir)/$(EXE:src/%=%)\"\n\t$(QUIET_UNINSTALL)tools/uninstall.sh \"$(DESTDIR)$(sysconfdir)/tigrc\"\n\t$(Q)$(foreach doc, $(filter %.1, $(MANDOC:doc/%=%)), \\\n\t\t$(QUIET_UNINSTALL_EACH)tools/uninstall.sh \"$(DESTDIR)$(mandir)/man1/$(doc)\";)\n\t$(Q)$(foreach doc, $(filter %.5, $(MANDOC:doc/%=%)), \\\n\t\t$(QUIET_UNINSTALL_EACH)tools/uninstall.sh \"$(DESTDIR)$(mandir)/man5/$(doc)\";)\n\t$(Q)$(foreach doc, $(filter %.7, $(MANDOC:doc/%=%)), \\\n\t\t$(QUIET_UNINSTALL_EACH)tools/uninstall.sh \"$(DESTDIR)$(mandir)/man7/$(doc)\";)\n\t$(Q)$(foreach doc, $(HTMLDOC:doc/%=%), \\\n\t\t$(QUIET_UNINSTALL_EACH)tools/uninstall.sh \"$(DESTDIR)$(docdir)/tig/$(doc)\";)\n\nclean: clean-test clean-coverage\n\t$(Q)$(RM) -r $(TARNAME) tig-*.tar.gz tig-*.tar.gz.sha256 .deps _book node_modules\n\t$(Q)$(RM) -r $(compdb_dir) compile_commands.json\n\t$(Q)$(RM) $(EXE) $(TOOLS) $(OBJS) core doc/*.xml src/builtin-config.c\n\t$(Q)$(RM) $(OBJS:%.o=%.gcda) $(OBJS:%.o=%.gcno)\n\ndistclean: clean\n\t$(RM) -r doc/manual.html-chunked autom4te.cache\n\t$(RM) doc/*.toc configure~\n\t$(RM) config.h config.log config.make config.status config.h.in~\n\nveryclean: distclean\n\t$(RM) tig.spec $(ALLDOC) aclocal.m4 configure config.h.in\n\nspell-check:\n\tfor file in $(TXTDOC) src/tig.c; do \\\n\t\taspell --lang=en --dont-backup \\\n\t\t       --personal=./tools/aspell.dict check $$file; \\\n\tdone\n\nstrip: $(EXE)\n\tstrip $(EXE)\n\nupdate-headers:\n\t@for file in include/tig/*.h src/*.c tools/*.c test/tools/*.c; do \\\n\t\tgrep -q '/* Copyright' \"$$file\" && \\\n\t\t\t$(SED) '0,/.*\\*\\//d' < \"$$file\" | \\\n\t\t\tgrep -v '/* vim: set' > \"$$file.tmp\"; \\\n\t\t{ cat tools/header.h \"$$file.tmp\"; \\\n\t\t  echo \"/* vim: set ts=8 sw=8 noexpandtab: */\"; } > \"$$file\"; \\\n\t\trm \"$$file.tmp\"; \\\n\t\techo \"Updated $$file\"; \\\n\tdone\n\nupdate-docs: tools/doc-gen\n\tdoc=\"doc/tigrc.5.adoc\"; \\\n\t$(SED) -n '0,/ifndef::DOC_GEN_ACTIONS/p' < \"$$doc\" > \"$$doc.gen\"; \\\n\t./tools/doc-gen actions >> \"$$doc.gen\"; \\\n\t$(SED) -n '/endif::DOC_GEN_ACTIONS/,$$p' < \"$$doc\" >> \"$$doc.gen\" ; \\\n\tmv \"$$doc.gen\" \"$$doc\"\n\ndist: configure config.h.in aclocal.m4 tig.spec\n\t$(Q)mkdir -p $(TARNAME) && \\\n\tcp Makefile tig.spec configure config.h.in aclocal.m4 $(TARNAME) && \\\n\t$(SED) -i \"s/VERSION\\s\\+=\\s\\+[0-9]\\+\\([.][0-9]\\+\\)\\+/VERSION\t= $(VERSION)/\" $(TARNAME)/Makefile\n\tgit archive --format=tar --prefix=$(TARNAME)/ HEAD | \\\n\t$(TAR) --delete $(TARNAME)/Makefile > $(TARNAME).tar && \\\n\tfind $(TARNAME) -type f -print0 | LC_ALL=C sort -z | $(TAR) --mtime=$(shell git show -s --format=@%ct) --mode=o=rX,ug+rw,a-s --owner=root --group=root --null -T - -rf $(TARNAME).tar && \\\n\tgzip -f -n -9 $(TARNAME).tar && \\\n\tsha256sum $(TARNAME).tar.gz > $(TARNAME).tar.gz.sha256\n\t$(Q)$(RM) -r $(TARNAME)\n\nrpm: dist\n\trpmbuild -ta $(TARNAME).tar.gz\n\nCOVERAGE_CFLAGS ?= -fprofile-arcs -ftest-coverage\nall-coverage: all\nall-coverage: CFLAGS += $(COVERAGE_CFLAGS)\n\nCOVERAGE_DIR \t?= test/coverage\n\nclean-coverage:\n\t@$(RM) -rf $(COVERAGE_DIR)\n\nreset-coverage: clean-coverage\n\t$(LCOV) --reset-counters\n\ntest-coverage: clean-coverage all-coverage test $(COVERAGE_DIR)/index.html\n\n$(COVERAGE_DIR)/trace:\n\t@mkdir -p $(COVERAGE_DIR)\n\t$(QUIET_LCOV)$(LCOV) $(Q:@=--quiet) --capture --no-external --directory . --output-file $@\n\n$(COVERAGE_DIR)/index.html: $(COVERAGE_DIR)/trace\n\t$(QUIET_GENHTML)$(GENHTML) $(Q:@=--quiet) --output-directory $(COVERAGE_DIR) $<\n\nADDRESS_SANITIZER_CFLAGS ?= -fsanitize=address -fno-omit-frame-pointer\nall-address-sanitizer: all\nall-address-sanitizer: CFLAGS += $(ADDRESS_SANITIZER_CFLAGS)\n\ntest-address-sanitizer: clean all-address-sanitizer test\ntest-address-sanitizer: export TIG_ADDRESS_SANITIZER_ENABLED=yes\n\nTESTS  = $(sort $(shell find test -type f -name '*-test'))\nTESTS_TODO = $(sort $(shell find test -type f -name '*-test' -exec grep -l '\\(test_todo\\|-todo=\\)' {} \\+))\n\nclean-test:\n\t$(Q)$(RM) -r test/tmp\n\ntest: clean-test $(TESTS)\n\t$(QUIET_SUMMARY)test/tools/show-results.sh\n\nifneq (,$(strip $(V:@=)))\nexport MAKE_TEST_OPTS = no-indent\nelse\nexport MAKE_TEST_OPTS =\nendif\n\n$(TESTS): PATH := $(CURDIR)/test/tools:$(CURDIR)/src:$(PATH)\n$(TESTS): $(EXE) test/tools/test-graph\n\t$(QUIET_TEST)$(TEST_SHELL) $@\n\ntest-todo: MAKE_TEST_OPTS += todo\ntest-todo: $(TESTS_TODO)\n\n# Other autoconf-related rules are hidden in config.make.in so that\n# they don't confuse Make when we aren't actually using ./configure\nconfigure config.h.in aclocal.m4: configure.ac tools/*.m4\n\t$(QUIET_GEN)./autogen.sh\n\nsite:\n\tgitbook install\n\tgitbook build\n\tfind _book -type f | grep -E -v '(gitbook|json|html)' | xargs rm\n\n.PHONY: all all-coverage all-debug clean clean-coverage clean-test doc \\\n\tdoc-man doc-html dist distclean install install-doc \\\n\tinstall-doc-man install-doc-html install-release-doc-html \\\n\tinstall-release-doc-man rpm spell-check strip test \\\n\ttest-coverage update-docs update-headers veryclean $(TESTS)\n\nifdef NO_MKSTEMPS\nCOMPAT_CPPFLAGS += -DNO_MKSTEMPS\nCOMPAT_OBJS += compat/mkstemps.o\nendif\n\nifdef NO_SETENV\nCOMPAT_CPPFLAGS += -DNO_SETENV\nCOMPAT_OBJS += compat/setenv.o\nendif\n\nifdef NO_STRNDUP\nCOMPAT_CPPFLAGS += -DNO_STRNDUP\nCOMPAT_OBJS += compat/strndup.o\nendif\n\nifdef NO_WORDEXP\nCOMPAT_CPPFLAGS += -DNO_WORDEXP\nCOMPAT_OBJS += compat/wordexp.o\nendif\n\nCOMPAT_OBJS += compat/hashtab.o compat/utf8proc.o\n\noverride CPPFLAGS += $(COMPAT_CPPFLAGS)\n\nGRAPH_OBJS = src/graph.o src/graph-v1.o src/graph-v2.o\n\nTIG_OBJS = \\\n\tsrc/tig.o \\\n\tsrc/types.o \\\n\tsrc/string.o \\\n\tsrc/util.o \\\n\tsrc/map.o \\\n\tsrc/argv.o \\\n\tsrc/io.o \\\n\tsrc/refdb.o \\\n\tsrc/builtin-config.o \\\n\tsrc/request.o \\\n\tsrc/line.o \\\n\tsrc/keys.o \\\n\tsrc/repo.o \\\n\tsrc/options.o \\\n\tsrc/draw.o \\\n\tsrc/prompt.o \\\n\tsrc/display.o \\\n\tsrc/view.o \\\n\tsrc/search.o \\\n\tsrc/parse.o \\\n\tsrc/watch.o \\\n\tsrc/pager.o \\\n\tsrc/log.o \\\n\tsrc/reflog.o \\\n\tsrc/diff.o \\\n\tsrc/help.o \\\n\tsrc/tree.o \\\n\tsrc/blob.o \\\n\tsrc/blame.o \\\n\tsrc/refs.o \\\n\tsrc/status.o \\\n\tsrc/stage.o \\\n\tsrc/main.o \\\n\tsrc/stash.o \\\n\tsrc/grep.o \\\n\tsrc/ui.o \\\n\tsrc/apps.o \\\n\t$(GRAPH_OBJS) \\\n\t$(COMPAT_OBJS)\n\nsrc/tig: $(TIG_OBJS)\n\nTEST_GRAPH_OBJS = test/tools/test-graph.o src/string.o src/util.o src/io.o $(GRAPH_OBJS) $(COMPAT_OBJS)\ntest/tools/test-graph: $(TEST_GRAPH_OBJS)\n\nDOC_GEN_OBJS = tools/doc-gen.o src/string.o src/types.o src/util.o src/request.o $(COMPAT_OBJS)\ntools/doc-gen: $(DOC_GEN_OBJS)\n\nOBJS = $(sort $(TIG_OBJS) $(TEST_GRAPH_OBJS) $(DOC_GEN_OBJS))\n\nDEPS_CFLAGS ?= -MMD -MP -MF .deps/$*.d\n\n%: %.o\n\t$(QUIET_LINK)$(CC) $(CFLAGS) $(CPPFLAGS) $(LDFLAGS) $^ $(LDLIBS) -o $@\n\n%.o: %.c $(CONFIG_H) $(missing_compdb_dir)\n\t@mkdir -p .deps/$(*D)\n\t$(QUIET_CC)$(CC) -I. -Iinclude $(compdb_args) $(CFLAGS) $(DEPS_CFLAGS) $(CPPFLAGS) -c -o $@ $<\n\n-include $(OBJS:%.o=.deps/%.d)\n\nsrc/builtin-config.c: tigrc tools/make-builtin-config.sh\n\t$(QUIET_GEN)tools/make-builtin-config.sh $< > $@\n\ntig.spec: contrib/tig.spec.in\n\t$(QUIET_GEN)$(SED) -e 's/@@VERSION@@/$(RPM_VERSION)/g' \\\n\t    -e 's/@@RELEASE@@/$(RPM_RELEASE)/g' < $< > $@\n\ndoc/manual.html: doc/manual.toc\ndoc/manual.html: ASCIIDOC_FLAGS += -ainclude-manual-toc\n%.toc: %.adoc\n\t$(QUIET_GEN)$(SED) -n '/^\\[\\[/,/\\(---\\|~~~\\)/p' < $< | while read line; do \\\n\t\tcase \"$$line\" in \\\n\t\t\"----\"*)  echo \". <<$$ref>>\"; ref= ;; \\\n\t\t\"~~~~\"*)  echo \"- <<$$ref>>\"; ref= ;; \\\n\t\t\"[[\"*\"]]\") ref=\"$$line\" ;; \\\n\t\t*)\t   ref=\"$$ref, $$line\" ;; \\\n\t\tesac; done | $(SED) 's/\\[\\[\\(.*\\)\\]\\]/\\1/' > $@\n\nREADME.html: README.adoc doc/asciidoc.conf\n\t$(QUIET_ASCIIDOC)$(ASCIIDOC) $(ASCIIDOC_FLAGS) -b xhtml11 -d article -a readme $<\n\nINSTALL.html: INSTALL.adoc doc/asciidoc.conf\n\t$(QUIET_ASCIIDOC)$(ASCIIDOC) $(ASCIIDOC_FLAGS) -b xhtml11 -d article $<\n\nNEWS.html: NEWS.adoc doc/asciidoc.conf\n\t$(QUIET_ASCIIDOC)$(ASCIIDOC) $(ASCIIDOC_FLAGS) -b xhtml11 -d article $<\n\ndoc/tigmanual.7: doc/manual.adoc\n\ntest/API.adoc: test/tools/libtest.sh\n\t@printf '%s\\n%s\\n' 'Testing API' '-----------' > $@\n\t$(QUIET_ASCIIDOC)egrep '^#\\|' test/tools/libtest.sh | $(SED) 's/^#| \\{0,1\\}//' | cat -s >> $@\n\n%.1.html : %.1.adoc doc/asciidoc.conf\n\t$(QUIET_ASCIIDOC)$(ASCIIDOC) $(ASCIIDOC_FLAGS) -b xhtml11 -d manpage $<\n\n%.1.xml : %.1.adoc doc/asciidoc.conf\n\t$(QUIET_ASCIIDOC)$(ASCIIDOC) $(ASCIIDOC_FLAGS) -b docbook -d manpage $<\n\n%.5.html : %.5.adoc doc/asciidoc.conf\n\t$(QUIET_ASCIIDOC)$(ASCIIDOC) $(ASCIIDOC_FLAGS) -b xhtml11 -d manpage $<\n\n%.5.xml : %.5.adoc doc/asciidoc.conf\n\t$(QUIET_ASCIIDOC)$(ASCIIDOC) $(ASCIIDOC_FLAGS) -b docbook -d manpage $<\n\n%.7.xml : %.7.adoc doc/asciidoc.conf\n\t$(QUIET_ASCIIDOC)$(ASCIIDOC) $(ASCIIDOC_FLAGS) -b docbook -d manpage $<\n\n%.html: ASCIIDOC_FLAGS += -adocext=html\n%.html : %.adoc doc/asciidoc.conf\n\t$(QUIET_ASCIIDOC)$(ASCIIDOC) $(ASCIIDOC_FLAGS) -b xhtml11 -d article -n $<\n\n%.xml : %.adoc doc/asciidoc.conf\n\t$(QUIET_ASCIIDOC)$(ASCIIDOC) $(ASCIIDOC_FLAGS) -b docbook -d article $<\n\n% : %.xml\n\t$(QUIET_XMLTO)$(XMLTO) man -o doc $<\n\n%.html-chunked : %.xml\n\t$(QUIET_XMLTO)$(XMLTO) html -o $@ $<\n\n%.pdf : %.xml\n\t$(QUIET_DB2PDF)$(DOCBOOK2PDF) -o doc $<\n\n#############################################################################\n# Quiet make\n#############################################################################\n\nifneq ($(findstring $(MAKEFLAGS),s),s)\nV\t\t\t= @\nQ\t\t\t= $(V:1=)\nQUIET_CC\t\t= $(Q:@=@echo    '        CC  '$@;)\nQUIET_LINK\t\t= $(Q:@=@echo    '      LINK  '$@;)\nQUIET_GEN\t\t= $(Q:@=@echo    '       GEN  '$@;)\nQUIET_ASCIIDOC\t\t= $(Q:@=@echo    '  ASCIIDOC  '$@;)\nQUIET_XMLTO\t\t= $(Q:@=@echo    '     XMLTO  '$@;)\nQUIET_DB2PDF\t\t= $(Q:@=@echo    '    DB2PDF  '$@;)\n# tools/install.sh will print 'file -> $install_dir/file'\nQUIET_INSTALL\t\t= $(Q:@=@printf  '   INSTALL  ';)\nQUIET_INSTALL_EACH\t= $(Q:@=printf   '   INSTALL  ';)\nQUIET_UNINSTALL\t\t= $(Q:@=@printf  ' UNINSTALL  ';)\nQUIET_UNINSTALL_EACH\t= $(Q:@=printf   ' UNINSTALL  ';)\nQUIET_TEST\t\t= $(Q:@=@echo    '      TEST  '$@;)\nQUIET_SUMMARY\t\t= $(Q:@=@printf  '   SUMMARY  ';)\nQUIET_LCOV\t\t= $(Q:@=@echo    '      LCOV  '$@;)\nQUIET_GENHTML\t\t= $(Q:@=@echo    '   GENHTML  '$@;)\n\nexport V\nendif\n"
        },
        {
          "name": "NEWS.adoc",
          "type": "blob",
          "size": 59.19921875,
          "content": "Release notes\n=============\n\nmaster\n------\n\nIncompatibilities:\n\n - Update remote repo variables. (#1358)\n\nBug fixes:\n\n - Fix various issues with `diff.noprefix` and `--no-prefix`.\n - Fix `Ctrl-C` behavior within the Readline prompt. (#1342)\n - Fix message upon edit from diffstat without patch.\n - Fix missing dates in the refs view.\n - Don't report an error when diff-highlight is killed intentionally.\n - Fix parsing of reflog designator in timestamp format.\n\nImprovements:\n\n - Open the blob corresponding to the diff line. (#1334)\n - Keep cursor position in the main view when toggling\n   file-filter and rev-filter.\n - Make errors visible in views showing Git output. (#1346)\n - Allow different colors for all references types.\n - Enable search in sections titles. (#1043)\n - Show committer date by default in the date column. (#294)\n\ntig-2.5.10\n----------\n\nBug fixes:\n\n - Fix `stat-*` coloring file names in `tig status` instead of just\n   markers (regression in 2.5.9). (#1326)\n - Fix keybinding with +[cmd] not triggering view refreshing. (#1324)\n - Fix reopening the blame view from the main view.\n - Fix editing when stdin is redirected. (#1330)\n - Fix compilation warnings with ncurses 6.5.\n - Make `Ctrl-C` to kill only the command running in the foreground. (#1331)\n\ntig-2.5.9\n---------\n\nImprovements:\n\n - Update utf8proc to v2.9.0, supporting Unicode 15.1.\n - Also use lightweight tags in the Refs line of the diff view. (#1235)\n - Support %(text) in all views with a text column. (#1275)\n - Use HTTPS for GitHub clone URLs. (#1310)\n - Move default log view options to tigrc.\n - Allow to go to stage view without Enter. (#1284)\n - Add new \"prefetch\" reference type for refs created by `git maintenance`\n   (hidden in default config). (#1318)\n - Show the selected commit in the blame view title window.\n - Improve the blob view experience.\n - Clear keybinding from all keymaps (unbind) with `bind generic <key> none`.\n\nBug fixes:\n\n - Fix \"dangling pointer\" warning. (#1268)\n - Don't use array size in function arguments. (#1269)\n - Fix rpmbuild -ta. (#1276)\n - Initialise struct timezone. (#1291)\n - Fix NULL dereference at startup. (#1293)\n - Enforce a blank before view scroll percentage.\n - Fix refresh-mode periodic not updating branch labels. (#1270)\n - Fix display non-ascii character. (#1299)\n - Fix readline echo when stdin is redirected. (#1229)\n - Fix tig blame --reverse. (#1300)\n - Fix status view lockup.\n - Fix untracked changes and chunk staging behaviour in plain stage view.\n - Reset state variables when selecting a commit with no reference.\n - Fix parsing of `git ls-tree` for submodules. (#1282)\n\ntig-2.5.8\n---------\n\nImprovements:\n\n - Update utf8proc to v2.8.0, supporting Unicode 15.\n - Support editing from the pager and the log (-p) views. (#1243)\n - Adjust build for native Apple Silicon.\n - Autoscroll the pager view while loading. (#1223)\n - Automatically show next diff in the status view. (#413, #469)\n - Replace `Unknown` author with `Not Committed Yet`.\n - Allow use of regular expressions for coloring. (#1249)\n - Add support for option word-diff-regex. (#1252)\n - Include original blob name in temporary filename. (#1254)\n\nBug fixes:\n\n - Use %(file_old) for old filename in the blame view. (#1226)\n - Correctly report which version of libncurses was linked. (#1240, #1241)\n - Fix stage view closing when holding the ] key. (#1245)\n - Make tests work from a path with symlinks.\n - Fix encoding of very long lines. (#1227)\n - Fix diffstat color for tig log -p.\n - Clean IO before closing a view or quitting.\n\ntig-2.5.7\n---------\n\nBug fixes:\n\n - Fix running tests as root. (#1224)\n - Fix parsing of status.showUntrackedFiles. (#1219)\n - Avoid incorrect history path when $XDG_DATA_HOME is valid. (#1215, #1217)\n\ntig-2.5.6\n---------\n\nBug fixes:\n\n - Fix `:goto <tag>`. (#1178)\n - Fix typo in ui.c.\n - Revert terminal hacks and workarounds. (#748, #943, #1180, #1182)\n - Fix opening of an ambiguous ref in refs view.\n - Fix search when view is loading.\n - Use the full width for diffstat in the stage view.\n - Improve escaping of variables in external commands.\n - Fix cursor behaviour during staging. (#842, #1028)\n - Fix navigation in split tree view.\n - Enable textconv in the stage view.\n - Enable textconv in the blame view and fix blame -L. (#978, #1189)\n - Update lineno for untracked files. (#1192)\n - Fix alignment of transliterated text. (#1195)\n - Fix word diff in the stage, stash and blame views. (#1207)\n - Fix reading the value of status.showUntrackedFiles. (#1211)\n - Honor commit_title:no in view settings.\n - Fix segfault with PCRE.\n\ntig-2.5.5\n---------\n\nImprovements:\n\n - Make word-diff a toggleable option. (#1119, #1125)\n - Add Linux installation instructions. (#1121, #1126)\n - Allow :back to work across separate blame views. (#1123, #1127)\n - Add auto-refresh to log view. (#1128)\n - Expose `%(file_old)`, useful for deleted and renamed files. (#1132)\n - Enable jumping back in main view. (#628, #1138)\n - Add PCRE (Perl Compatible Regular Expressions) support. (#1137, #1143)\n - Pass command line args through to diff-files in status view. (#1152, #1155)\n - Remove quotes from TIG_LS_REMOTE to allow inline shell commands. (#1160, #1161)\n - Avoid pushing identical history state in main view.\n - Replace useless strncpy to avoid compilation warning with GCC 8.\n - Update utf8proc to v2.7.0.\n - Update distclean rule to preserve tarball contents. (#1167, #1169)\n - Add reference types stash and other. (#1160, #1172)\n - Auto refresh view upon option change.\n - Allow to toggle revision filtering. (#1173)\n\nBug fixes:\n\n - Fix null dereferences on unset format strings. (#1136, #1159)\n - Fix invalid read in log_read. (#1128)\n - Restore support for tig log --graph. (#1128)\n - Further fix to fullscreen navigation.\n - Fix blame when opened from an initial diff view. (#1135)\n - Fix stash view when using tig --all or tig revs. (#1146, #1147)\n - Avoiding null pointer dereference. (#1096)\n - Fix navigation between chunks after splitting chunk. (#1101, #1162)\n - Fix status line when toggling general options. (#1163, #1164)\n - Honor reference-format = hide:tag in diff view. (#1168, #1170)\n - Fix crash on :toggle file-args.\n\ntig-2.5.4\n---------\n\nImprovements:\n\n - Add FreeBSD installation instructions. (#1093)\n - Add TIG_EDITOR environment variable to configure editor. (#889, #1098)\n - Enable mailmap by default to match git log's behaviour. (#1104, #1105)\n - Enable tilde expansion for diff-highlight. (#1107)\n\nBug fixes:\n\n - Escape variables with %% in external commands. (#1091, #1095)\n - Fix parsing of -L argument. (#1100)\n - Bugfix: smart-case does not work when search term contains a space. (#1108)\n - Use ncursesw by default on Linux. (#920)\n - Replace obsolete macro `AC_CONFIG_HEADER' in configure.ac.\n\ntig-2.5.3\n---------\n\nBug fixes:\n\n - Fix autoconf checking for readline. (#1072)\n - Fix segfault when saving a view with no column.\n - Reset view->parent when main view is promoted.\n - Fix segfault when pressing Enter in a child main view.\n - Restore lazy navigation.\n - Format time_t values portably and fix other values too. (#1084, #1085)\n - Fix loop when wrapping line with ISO-8859-1 character. (#1087, #1088)\n\ntig-2.5.2\n---------\n\nIncompatibilities:\n\n - Change directory from the next argument, from now use `tig -C /path/to/repo`. (#1079)\n\nImprovements:\n\n - Jump from blame to commit. (#355)\n - Start blame of an uncommitted deleted line from HEAD so the line's origin can be traced. (#1008, #1009)\n - Add line-graphics = auto. (#834, #1019)\n - Allow maxwidth to be expressed in % of the view width. (#1021)\n - Pass stash args through. (#1022, #1030)\n - Make build work on IBM i. (#1051, #1052)\n - Restore fullscreen navigation. (#1053)\n - Update utf8proc to v2.6.1.\n - Add some range so control chars ^^ and ^_ are also supported. (#1041, #1058)\n - Disable ncurses extended key values so that esc-codes can be used. (#1046, #1049)\n - Use id column for commit id only. (#1025, #1056)\n - Some minor updates for scrolling and for a double-click in diff. (#1060)\n - Add scroll-half-page-up and scroll-half-page-down actions. (#531, #1075)\n - Allow to generate a compilation database. (#1064)\n - New command stage-update-part.\n - The line number before a diff was applied is exposed as `%(lineno_old)`. (#1081)\n\nBug fixes:\n\n - Fix wrapping of lines with multibyte characters. (#988)\n - Improve highlighting of search with $ regex. (#1000)\n - Update tracking branch when refreshing status view. (#1015)\n - Fix vertical lines in Putty with UTF-8 graphics. (#981, #983)\n - Fix parsing of three-way chunk headers with extra dashes.\n - Update tracking branch when refreshing status view. (#1015, #1020)\n - Handle filename with space in diff view. (#1035)\n - The stash view requires a working tree.\n - Replace useless strncpy to avoid compilation warning. (#1036)\n - Zsh completion fixes. (#940, #1047)\n - Handle undefined __git_complete. (#1011, #1055)\n - Fix help messages for half-page and page up. (#1054)\n - Let `-S`, `-G` and `--grep=` pattern override readline history.\n - Fix bash completion issue with worktrees (#1018).\n - Fix parsing of commit line from `git log --left-right` output in pager view.\n - Fix %(lineno) computation for hunk postimages that span only one line. (#1062)\n - Align relative-compact dates to the right. (#1067)\n - Fix empty split diff view when navigating quickly in the stash view.\n - Avoid depending on wcwidth in test by removing Variation Selector. (#1065)\n - Open the blob view with the cursor correctly positioned.\n - Update %(text) when navigating diff contents. (#1082)\n\ntig-2.5.1\n---------\n\nImprovements:\n\n - bash/zsh completion: reimplement and decrease runtime by factor 1863. (#795)\n - Add binding to reflog view to toggle reference display.\n - Fail if tig is given an invalid or ambiguous ref. (#980)\n - Make tig process-group leader an option. (#986, #951)\n - Handle GIT_WORK_TREE environment variable.\n - The blame view requires a working tree.\n - Fix use of deprecated vwprintw() function.\n - Update utf8proc to v2.5.0.\n - Add --word-diff=plain colorizing support. (#221)\n\nBug fixes:\n\n - Fix segmentation fault. (#971)\n - Fix cursor position after \"Move to parent\" in blame view. (#973)\n - Fix crash on adding a line to a view. (#523)\n - Fix memory leak in diff unit.\n - Fix loop after refresh or change in refs/main split view. (#991)\n - Fix occasional crash on custom key bindings. (#1001)\n\ntig-2.5.0\n---------\n\nImprovements:\n\n - Single file view enters blame mode on \"b\". (#804)\n - Show untracked files in the default view. (#762)\n - Disable graph if log.follow is enabled and there is only one pathspec. (#881)\n - Disable graph for author searches.\n - git_colors: interpret 'ul' as 'underline'.\n - Add refname variable. (#900)\n - Add -C option to specify the working directory. (#570)\n - Improve behaviour of auto and periodic refresh modes. (#389, #441, #482, #794, #888, #932)\n - Add support for repos created with git --work-tree. (#872)\n - Add diff-highlight to pager mode.\n - Show annotated commits in main view. (#819)\n - Introduce reflog view. (#538)\n - Add option to start with cursor on HEAD commit. (#755)\n - Support combined diffs with more than 2 parents.\n - Improve how a toggle option value is shown on the status line. (#879)\n - Add options to filter refs output. (#694)\n - Update utf8proc to v2.4.0. (#961)\n\nBug fixes:\n\n - Fix garbled cursor line with older ncurses versions.\n - Fix diff highlighting of removed lines starting with -- and added lines\n   starting with ++. (#871, #875)\n - Fix loop when displaying search result if regex matches an empty string. (#866)\n - Add synchronous command description in tigrc.\n - Fix parsing of git rev-parse output. (#884)\n - Propagate --first-parent to diff arguments. (#861)\n - Use proper type for hash table size. (#858)\n - Fix incorrect cppcheck warning about realloc() use.\n - Don't shift signed int by 31 bits.\n - Fix Vim going background after running Tig outside of a git repository. (#906)\n - make-builtin-config: use \"read -r\". (#912)\n - Fix segfaults with readline 8.0. (#893)\n - Reset state before closing stage view automatically.\n - Don't use a child view as previous view.\n - Force reload of VIEW_FLEX_WIDTH views only when needed.\n - Combined diff uses @@@ as hunk marker.\n - Fix memory leak induced by 'tig grep'.\n - Fix memory leak in main view.\n - Exit gracefully if refs view was defined without ref column. (#897)\n - Fix pager view not moving up when child view is open.\n - make-builtin-config: Fix unportable sed usage in read_tigrc().\n - Properly detect combined diffs. (#942)\n\ntig-2.4.1\n---------\n\nBug fixes:\n\n - Add `CURSES_CFLAGS` to `CPPFLAGS`. (#856, Linuxbrew/homebrew-core#8440)\n\ntig-2.4.0\n---------\n\nImprovements:\n\n - Add 'send-child-enter' option to control interaction with child views. (#791)\n - Update make config defaults for Cygwin to ncurses6. (#792)\n - Build against netbsd-curses. (#789)\n - Change the blame view to render more like `git blame`. (#812)\n - Improve worktree and submodule support. (#459, #781, #783)\n - Support running Tig via a Git alias. (#763)\n - Use ISO-8601 letters for short relative dates. (#759, #760)\n - Change date formatting to show time zones by default. (#428, #811)\n - Use utf8proc to handle Unicode characters. (#827)\n\nBug fixes:\n\n - Fix `file(1)` argument on Linux used for resolving encodings. (#788)\n - Fix underflow in the file search. (#800, #801)\n - Fix line numbers in grep view when scrolled. (#813)\n - Pass command line args through to the stage view. (#569, #823)\n - Fix resource leak. (#780)\n - Fix various compiler warnings and pointer arithmetic. (#799, #803)\n - Workaround potential null pointer dereferences. (#824)\n - Bind to single and double quotes by using the *<SingleQuote>* and\n   *<DoubleQuote>* key mappings. (#821)\n - Make Tig the process-group leader and clean child processes. (#828, #837)\n - Fix sh compatibility in `contrib/tig-pick`. (#832)\n - Fix incorrect behaviour of up and down keys in diff view when opened from\n   diff preview. (#802, #835)\n - Open the stage view when maximizing a split diff view of (un)staged changes.\n   (#836)\n - Use fully qualified reference name for tags when conflicting with branch\n   name. (#746, #787, #849)\n - Fix resize not working after entering command. (#845) (#846)\n - Use stack allocated memory to handle `TIG_LS_REMOTE`. (#839)\n - Fix deleted file mode line remains highlighted after hovering in diff or stage view. (#851)\n - Fix `TIG_LS_REMOTE` not working with git-ls-remote(1). (#853, #854)\n\ntig-2.3.3\n---------\n\nBug fixes:\n\n - Revert \"Handle \\n like \\r (#758)\". (GH #769)\n - Fix GH #164 by catching SIGHUP.\n - Change `refs_tags` type to `size_t`.\n\ntig-2.3.2\n---------\n\nBug fixes:\n\n - Fix busy loop detection to handle large repos. (GH #164)\n\ntig-2.3.1\n---------\n\nImprovements:\n\n - Restore TTY attributes. (GH #725)\n - Handle `\\n` like `\\r`. (GH #758)\n\nBug fixes:\n\n - Add workaround that detects busy loops when Tig loses the TTY. This may\n   happen if Tig does not receive the HUP signal (e.g. when started with\n   `nohup`). (GH #164)\n - Fix compatibility with ncurses-5.4 which caused copy-pasting to not work\n   in the prompt. (GH #767)\n - tig(1): document correct environment variable. (GH #752)\n\ntig-2.3.0\n---------\n\nIncompatibilities:\n\n - The `width` setting on the `status`, `text` and `commit-title` columns was\n   never applied and has been removed. (GH #617)\n\nImprovements:\n\n - Improve load performance by throttling screen updates. (GH #622, #629)\n - Speed up graph rendering. (GH #638)\n - Enable scroll optimizations for Terminal.app and iTerm2. (GH #637)\n - Improve the test suite portability to not depend on GNU sed. (GH #609, #614)\n - Make build reproducible. (https://reproducible-builds.org/) (GH #613)\n - Enable binding to more symbolic keys and keys with control modifier:\n   `F13`-`F19`, `ShiftLeft`, `ShiftRight`, `ShiftDel`, `ShiftHome`, `ShiftEnd`,\n   `ShiftTab`, `Ctrl-C`, `Ctrl-V`, `Ctrl-S`, and `Ctrl-@`. (GH #314, #619, #642)\n - Persist readline history to `~/.tig_history` or `$XDG_DATA_HOME/tig/history`.\n   Use `history-size` to control the number of entries to save. (GH #620, #713,\n   #714, #718)\n - Preload last search from persistent history. (GH #630)\n - Add `view-close-no-quit` action, unbound by default. (GH #607)\n - Add `mouse-wheel-cursor` option (off by default) when set to true causes\n   wheel actions to prefer moving the cursor instead of scrolling. (GH #608)\n - Add `truncation-delimiter` option, set to `~` by default. (GH #646)\n - Add `-q` parameter to `source` for \"source-if-present\". (GH #612)\n - Add `:echo` prompt command to display text in the status bar. (GH #626, #636)\n - Make `diff-highlight` colors configurable. (GH #625, #633)\n - Let Ctrl-C exit Y/N dialog, menu prompts and the file finder. (GH #632, #648)\n - Hide cursor unless at textual prompt. (GH #643)\n - Expand tilde ('~') in `:script` paths. (GH #674)\n - Show single-line output of external command in status bar. (GH #200, #557,\n   #678)\n - Disable the graph when `--no-merges` is passed. (GH #687) \n - Print backtraces on segfault in debug mode.\n - Ignore script lines starting with `#` (comment). (GH #705)\n - Complete `repo:*` variables when readline is enabled. (GH #702)\n - Incorporate XTerm's `wcwidth.c` to find Unicode widths. (GH #691)\n\nBug fixes:\n\n - Fix graph display issues. (GH #419, #638)\n - Fix and improve rendering of Unicode characters. (GH #330, #621, #644, #682)\n - Handle hyphenated directory names when listing content. (GH #602)\n - Do not jump to next match when cancelling the search prompt. (GH #627)\n - Fix clearing of the status line after `Ctrl-C`. (GH #623, #649)\n - Fix handling of width on line-number and trimmed width of 1. (GH #617)\n - Set cursor position when not updating prompt contents. (GH #647)\n - Erase status line at exit time for users without altscreen-capable terminals.\n   (GH #589)\n - Fix unexpected keys when restoring from suspend (`Ctrl-Z`). (GH #232)\n - contrib/vim.tigrc: Also bind G in the main as a workaround for limitations of\n   the `none` action. (GH #594, #599)\n - Only override `blame-options` when commands are given and fix parsing of\n   `-C`. (GH #597)\n - Fix diff name discovery to better handle prefixes.\n - Interpret button5 as wheel-down. (GH #321, #606)\n - Fix `back` / `parent` in tree view. (GH #641)\n - Fix memory corruption in `concat_argv` and file finder. (GH #634, #655)\n - Fix reading from stdin for `tig show`.\n - Document problem of outdated system-wide `tigrc` files in Homebrew. (GH #598)\n - Repaint the display when toggling `line-graphics`. (GH #527)\n - Fix custom date formatting support longer strings. (GH #522)\n - Don't segfault on \":exec\" irregular args. (GH #686)\n - Fix segfault when calling htab_empty. (GH #663, #745)\n\ntig-2.2.2\n---------\n\nUpgrade instructions:\n\n - The `status-untracked-dirs` option was renamed to\n   `status-show-untracked-dirs` to match the new `status-show-untracked-files`\n   option.\n\nImprovements:\n\n - Use `diff-options` when preparing the diff in the stage view to make the diff\n   state configurable. (GH #545)\n - Add 'status-show-untracked-files' option mirroring Git's\n   'status.showUntrackedFiles' to toggle display of untracked files.  in the\n   status view. On by default. (GH #562)\n - Update `ax_with_curses.m4` and use `pkg-config` to detect. (GH #546)\n - Add `tig-pick` script for using Tig as a commit picker. (GH #575, #580)\n - Add \"smart case\" option ('set ignore-case = smart-case') to ignore case when\n   the search string is lower-case only. (GH #320, #579)\n\nBug fixes:\n\n - Fix author ident cache being keyed by email only. (GH #424, #526, #547)\n - Fix periodic refresh mode to properly detect ref changes. (GH #430, #591)\n - Add workaround for detecting failure to start the diff-highlight process.\n - Show diffs in the stash view when `set mailmap = true`. (GH #556)\n - Fix parsing of git-log revision arguments, such as `--exclude=...` in\n   conjunction with `--all`. (GH #555)\n - Fix diff stat parsing for binary copies.\n - Fix crash when resizing terminal while search is in progress. (GH #515, #550)\n - Fix argument filtering to pass more arguments through to Git.\n - Check for termcap support in split tinfo libs. (GH #568, #585)\n\ntig-2.2.1\n---------\n\nTarballs should now be downloaded from GitHub. Either go to\nhttps://github.com/jonas/tig/releases or use the following pattern:\n\n    https://github.com/jonas/tig/releases/download/tig-VERSION/tig-VERSION.tar.gz\n\nMD5 checksums can be found at:\n\n    https://github.com/jonas/tig/releases/download/tig-VERSION/tig-VERSION.tar.gz.md5\n\nSimilarly, the home page is now also on GitHub at https://jonas.github.io/tig/.\nA big thanks to Simon L. B. Nielsen for generously hosting Tig on nitro.dk!\n\nImprovements:\n\n - Support Git's 'diff-highlight' program when `diff-highlight` is set to either\n   true or the path of the script to use for post-processing.\n - Add navigation between merge commits. (GH #525)\n - Add 'A' as a binding to apply a stash without dropping it.\n - Bind 'Ctrl-D' and 'Ctrl-U' to half-page movements by default.\n - manual: Mention how to change default Up/Down behavior in diff view.\n\nBug fixes:\n\n - Reorganize checking of libraries for termcap functions.\n - Fix `:goto <id>` error message.\n\ntig-2.2\n-------\n\nIncompatibilities:\n\n - Note that all user-defined commands are now executed at the repository root\n   instead of whatever subdirectory Tig was started in. (GH #412)\n - Remove `cmdline-args` option to avoid problems where setting it in `~/.tigrc`\n   potentially breaks other views due to its \"context-sensitive\" nature, where\n   a `git-log` option maybe cause `git-grep` to fail. (GH #431)\n\nImprovements:\n\n - Use .mailmap to show canonical name and email addresses, off by default.\n   Add `set mailmap = yes` to `~/.tigrc` to enable. (GH #411)\n - Highlight search results, configurable via `search-result` color. (GH #493)\n - Wrap around when searching, configurable via `wrap-search` setting.\n - Populate `%(file)` with file names from diff stat. (GH #404)\n - `tig --merge` implies `--boundary` similar to gitk.\n - Expose repository variables to external commands, e.g. `%(repo:head)` gives the\n   branch name of the current HEAD and `%(repo:cdup)` for the repo root path.\n - Add `make uninstall`. (GH #417)\n - Add ZSH completion file (based on Bash completion) (GH #433)\n - Expose the text of the currently selected line as the %(text) (GH #457)\n - Allow users to specify rev arguments to blame (GH #439)\n - Update OSX make config to find brew installed ncurses\n - Add sample git-flow keybinding (GH #421)\n - Add chocolate theme (GH #432)\n - Show stash diffs. (GH #328)\n - Make user tigrc location configurable. (GH #479)\n - Compact relative date display mode. (GH #331)\n - Add date column option controlling whether to show local date.\n - Move to parent commit in the main view. (GH #388)\n - Add `:goto <rev>` prompt command to go to a `git-rev-parse`d revision, e.g.\n   `:goto some/branch` or `:goto %(commit)^2`.\n - Respect the XDG standard for configuration files. (GH #513)\n - Show tracking information in `tig status` (GH #504)\n - Resolve diff paths when `diff.noprefix` is true. (GH #487, #488)\n - Support for custom `strftime(3)` date formats, e.g.:\n\n\tset main-view-date = custom\n\tset main-view-date-format = \"%Y-%m-%d\"\n\nBug fixes:\n\n - Prevent staged rename from displaying unstaged changes (GH #472, #491)\n - Fix corrupt chunk header during staging of single lines. (GH #410)\n - Fix out of bounds read in graph-v2 module. (GH #402)\n - Add currently checked out branch to `%(branch)`. (GH #416)\n - Size diff stats correctly for split views.\n - Fix `git-worktree` support by using `git-show-ref`. (GH #437)\n - Add currently checked out branch to `%(branch)` (GH #416)\n - Fix segfault when hitting return in empty file search (GH #464)\n - Remove separator on horizontal split when switching from vertical split\n - Do not expand `--all` when parsing `%(revargs)` (GH #442, #462)\n - Fix exit when the main view is reloaded due to option toggling. (GH #470)\n - Expand all whitespace and control characters to spaces. (GH #485)\n - Restore ability to unbind a default keybinding with `none`. (GH #483)\n - Fix blob view to honor the `wrap-lines` setting.\n\ntig-2.1.1\n---------\n\nImprovements:\n\n - Add support for key combos. (GH #67)\n - See `contrib/vim.tigrc` for Vim-like keybindings. (GH #273, #351)\n - Add GitHub inspired file finder to search for and open any file. (GH #342)\n - Add `search` keymap for navigating file finder search results.\n\nBug fixes:\n\n - Fix display of multiple references per commit. (GH #390, #391)\n - Sync the prompt's cursor position with readline's internal position. (GH #396)\n - Keep unstaged changes view open after an staging command. (GH #399)\n\ntig-2.1\n-------\n\nImprovements:\n\n - Improve C99 compliance so Tig compiles with the native compilers on\n   Solaris (SunStudio cc) and AIX (xlc). (GH #380)\n - Add move-half-page-up and move-half-page-down actions. (GH #323)\n - Preserve the cursor position when changing the diff context.\n - Show 'Unstaged changes' above 'Staged changes' in the main view. (GH #383)\n - Add `:exec <flags><args...>` prompt command to execute commands.\n - Add shorthand for changing the view settings of a single column,\n   eg. `set main-view-author = short`. (GH #318)\n - Show better diff context info in the stage view.\n - Add `%(lineno)` state variable. (GH #304)\n - Use hash table to speed up refs lookup. (GH #350)\n - Show the file path in the blob view when available.\n - Use `set commit-order = default` to use Git's default commit order, even when\n   the commit graph is enabled. The option will turn off automatic enabling of\n   `--topo-order` when the graph is shown in the main view. (GH #310, #324)\n - Speed up the diff view in large repos by loading git-describe info after the\n   diff content has been read. (GH #324)\n - Add the old graph rendering as an option. (GH #310, #324)\n - Add `main-options` setting for specifying default main view options.\n   Example: `set main-options = --max-count=1000`. (GH #368)\n - See `contrib/large-repo.tigrc` for settings that will help to speed up Tig in\n   large repos. (GH #368)\n - Add `:save-options <file>` prompt command to save config to file. (GH #315)\n\nBug fixes:\n\n - Update manual to reflect default keybinding changes. (GH #325)\n - Fix graph support for `--first-parent`. (GH #326)\n - Fix off-by-one error when opening editor from the grep view.\n - Fix status on-branch information.\n - Fix main view to handle the case when git-log doesn't find any commits.\n - Fix corner case when parsing diff chunk when lines information is missing.\n - Ensure main view changes commits are shown right before the current HEAD.\n - Fix rendering of boundary commits.\n - Fix compilation with GNU Make 3.80 by removing `$(abspath)`. (GH #362)\n - Fix config parsing to support shell-like quoting in user-defined command,\n   e.g. `bind generic <Ctrl-f> :!git log -G\"%(prompt Prompt: )\"` (GH #371)\n - Make diff meta information colors more consistent with Git. (GH #375)\n - Fix segfault when updating changes in a maximized stage view opened via the\n   main view. (GH #376)\n - Handle line number configs where the interval is not specified. (GH #378)\n - Fix display of error messages during startup. (GH #385)\n - Show untracked files outside the current directory like git-status. (GH #230)\n\ntig-2.0.3\n---------\n\nImprovements:\n\n - Add `:save-display <file>` prompt command to save the current display.\n - Add `:script <file>` prompt command for scripting the Tig UI.\n - Add test framework and convert existing tests to use it.\n - Add command-line option for starting in refs view: `tig refs`. (GH #309)\n - Make blame commit ID colors stable across reloads. (GH #303)\n - Increase blame ID and graph rendering color palette to 14 colors.\n - New setting 'split-view-width' controls the width for vertical splits. It\n   takes the width of the right-most view either as a number or a percentage.\n - Expose settings holding command line argument lists: `file-args`, `rev-args`,\n   and `cmdline-args`. They are mainly intended for testing purposes but also\n   allows to change the filtering arguments dynamically. (GH #306)\n - Add `log-options` setting for specifying default log view options.\n   Example: `set log-options = --pretty=fuller`.\n - Use option specific view flags to reload view after `:set` commands.\n\nBug fixes:\n\n - Refresh the current view when returning from an external command and\n   `refresh-mode=after-command`. (GH #289)\n - Fix readline completion.\n - Fix '/' to `find-next` when readline support is enabled. (GH #302)\n - Fix readline prompt to correctly handle UTF-8 characters.\n - Add warnings for more obsolete actions and colors.\n - Fix passing of commit IDS via stdin to the main view.\n - Fix commit title overflow drawing for multibyte text. (GH #307)\n - Fix installation directory permissions.\n - Handle binary files matches reported by git-grep.\n - Toggling of \"args\"-typed options without any arguments will clear the current\n   arguments. Example: `:toggle blame-options`.\n - Detect custom `pretty.format` settings that break the log view and fallback\n   to use the `medium` format. (GH #225)\n - Fix invocation of git-diff for the blame view's line tracking. (GH #316)\n - Fix blame completion of directory names. (GH #317)\n - Fix display of conflicts in the main view when 'show-changes' is enabled.\n - Fix off-by-one error when displaying line numbers in the grep view.\n - When showing the commit graph ensure that either topo, date or author-date\n   commit order is used. (Debian #757692) (GH #238)\n\ntig-2.0.2\n---------\n\nImprovements:\n\n - Use git-status for diffing the index.\n - Group toggle options together in the help view.\n\nBug fixes:\n\n - Fix refs, main and grep loading when 'gui.encoding' is set. (GH #287)\n - Ignore 'gui.encoding' and 'i18n.commitencoding' when set to 'UTF-8'.\n - Add work-around for missing strndup() on Mac OS X v10.6. (GH #286)\n - Fix spurious abbreviation of author names. (GH #288)\n - Don't show empty action groups in the help view.\n\ntig-2.0.1\n---------\n\nBug fixes:\n\n - Fix compilation in watch.c.\n - Fix parsing of key bindings mapped to '^' and '<'. (GH #280, #282)\n\ntig-2.0\n-------\n\nNote to packagers:\n\n - Add `.adoc` extension to AsciiDoc files so they show correctly on GitHub.\n   This includes `README`, `INSTALL`, and `NEWS` and files in `doc/` directory.\n - `BUGS` file has been merged into `README.adoc`.\n - Default keybindings have been moved to a system-level `tigrc` file, which is\n   installed to ${sysconfdir} by default. The content of the `tigrc` file is\n   included inside the binary as a fall-back. Pass `NO_BUILTIN_TIGRC=y` to not\n   include the system `tigrc` content and reduce the size of the binary.\n - The example `contrib/tigrc` file (made obsolete by `tigrc`) has been removed.\n - Source files have been moved to `src` and `include` and `tig.c` was split up.\n - Build output is less verbose by default; use `make V=1` for old output.\n\nIncompatibilities:\n\n - In preparation for key combo support, key mappings for symbolic keys (e.g.\n   `Up` and `Down`) must now start with `<` and end with `>`, e.g. `<Up>` and\n   `<Down>`. Furthermore, escape key combos must now use `<Esc>key` instead of\n   `^[key`, and control key mappings must now use `<Ctrl-key>` instead of\n   `^key`.\n - Only use 'diff-options' for the diff view and introduce '%(cmdlineargs)' to\n   hold non-file and non-revision flags passed on the command line. Affects all\n   user-defined commands that expect '%(diffargs)' to hold both 'diff-options'\n   arguments and those passed on the command line. (GH #228)\n - Remove built-in keybinding for `git gc`. Add the following line to `~/.tigrc`\n   to restore it: `bind generic G ?git gc`.\n - To support view specific colors, '.' can no longer be used interchangeably\n   with '-' and '_' in settings names and in particular color names.\n - Replace 'stage-next' action with prompt command using a predefined search\n   (see below) and add binding (`@` by default) to also work in the diff view.\n - Most view display options must now be set via the new `*-view` options in\n   tigrc. Existing options are no longer recognized, but a warning is shown.\n - Remap default bindings to have more consistent convention: use lower-case\n   keys primarily for view switching and non-destructive actions, use upper-case\n   keys for view-specific actions including user-defined commands. To preserve\n   old default key bindings see `contrib/bindings-v1.x.tigrc`. (GH #257)\n\nImprovements:\n\n - Add mouse support: scroll view, click line to move cursor, double click line\n   (or click again) to \"Enter\" cursor line, e.g. open commit diff. Disabled by\n   default, since it makes text selection less intuitive. If you enable this\n   remember to hold down Shift (or Option on Mac) when selecting text.\n - Rewrite and improve the rendering of the commit graph. (GH #144, #46)\n - Add completion and history support to the prompt via readline. (GH #185)\n - Options can be configured and toggled individually for each view. Use the new\n   view settings to configure the order and display options for each view\n   columns. See system tigrc and tigrc(5) for examples. (GH #89, #222)\n - Add grep view as a front-end to git-grep(1): `tig grep -p strchr`. From\n   within Tig, the key for switching or grepping is bound to 'g' by default.\n - Rename 'branch' view to 'refs' view and show tags. (GH #134)\n - Add main view pager mode that reads git-log's '--pretty=raw' data\n   from stdin, e.g. `git reflog --pretty=raw | tig --pretty=raw`.\n - Add support for `--graph` and highlight diff stats in the log view.\n - Add default command bindings: `!` to delete branch, `!` to drop stash.\n - Add 'stage-split-chunk' action for splitting chunks in the stage view.\n   Bound to '\\' by default. (GH #107)\n - Add 'back' action bound to '<' by default, which will return the blame view\n   to the previous revision and line after moving e.g. to the parent. (GH #124)\n - Auto-refresh views based on watched repository changes. Configure by setting\n   `refresh-mode` to 'manual', 'auto', 'after-command', or 'periodic'. (GH #190)\n - All default settings are in well-documented system `tigrc`.\n - Add `:toggle` prompt command to manipulate options using keybindings. For\n   example: `bind diff D :toggle diff-options --patience --notes`. (GH #69)\n - Add a new \"auto\" value for the 'vertical-split' option to let Tig choose the\n   split orientation (this is the new default behavior). Can be toggled.\n - Make it possible to toggle the display of files in untracked directories.\n - Allow Tig to be started with no default configuration by specifying an\n   alternative system `tigrc` file, e.g.: `TIGRC_SYSTEM=~/.tigrc.safe tig`. Set\n   `TIGRC_SYSTEM` to the empty string to use built-in configuration instead of\n - Key mappings can contain UTF-8 multibyte unicode keys.\n - Warn about conflicting keybindings using Ctrl, e.g. `<Ctrl-f>` and\n   `<Ctrl-F>`. (GH #218)\n - Extend key bindings for prompt commands (ie. `bind <keymap> <key> :<prompt>`)\n   to support predefined searches, eg.: `bind stage 2 :?^@@`.\n - Git color mappings can be configured in tigrc.\n - More informative configuration error messages.\n - Make reference label formatting configurable, for example:\n   `set reference-format = (branch) <tags> remote`. (GH #201)\n - Adjust author width and other view columns automatically. (GH #49)\n - Support view specific colors: `color stage.diff-add yellow default`.\n - Copy `-S`, `-G` and `--grep=` pattern to search buffer so 'find-next' and\n   'find-prev' work as expected.\n - Optionally specify custom prompt for `%(prompt)` in shell commands, e.g.\n   `bind main B ?git checkout -b \"%(prompt Enter new branch name: )\"`.\n - Add `%(remote)` and `%(tag)` symbols to complement `%(branch)`.\n - User-defined commands can now be prefixed with any of the supported flags,\n   e.g. `?git checkout -b %(branch)`.\n - Open editor at line number for combined diffs e.g. diffs of unmerged files.\n - Add build configuration for Cygwin (OS name: CYGWIN_NT-6.1). (GH #92)\n - Document the Git commands supported by the pager mode.  (GH #1)\n   system `tigrc` configuration. (GH #235)\n\nBug fixes:\n\n - Fix stash diff display when reloading the stash view after a deleting.\n - Set the commit reference when opening the blame view from the blob view.\n - Correctly identify and highlight the remote branch tracked by HEAD.\n - Pass --no-color after user defined arguments to ensure that colors do not\n   break the output parsing. (GH #191)\n - Close stdin when pager mode is not supported.\n - Show newly created branches in the main view. (GH #196)\n - File with 0 changes breaks diffstat highlighting (GH #215)\n - Update %(branch) variable in the main view. (GH #223)\n - Disable graph rendering when either of `--reverse`, `-S`, `-G`, and `--grep`\n   are passed to the main view. (GH #127)\n - Only refresh views that support it.\n - Fix author and date annotation of renamed entries in the tree view.\n - Fix use of unsafe methods in the signal handler. (GH #245)\n - Fix rendering in non-UTF8 terminals.\n - Fix stage-update-line by rewriting the diff chunk containing the line instead\n   of using `--unidiff-zero` and a diff context of zero. (GH #130)\n - Fix status-update to work for untracked directories. (GH #236)\n - Don't pass log parameters given on the command line to the diff view.\n\ntig-1.2.1\n---------\n\nIncompatibilities:\n\n - Move manual and man pages to doc/ directory and rename AsciiDoc files\n   to have .asciidoc as the extension to make them render on GitHub.\n\nImprovements:\n\n - Show blob sizes in the tree view either as bytes or using binary unit\n   prefixes. Example: `set show-file-size = units`. (GH #163)\n - Reduce main view memory usage and startup time, especially when revision\n   graph rendering is disabled. (GH #160)\n\nBug fixes:\n\n - Fix submodule-related setup to check for non-zero return value from\n   setenv(). (GH #188)\n\ntig-1.2\n-------\n\n - Tig now has its own tag on Stack Overflow, where users are invited to\n   ask questions: https://stackoverflow.com/questions/tagged/tig\n\nImprovements:\n\n - Prompt commands can be bound to keys. For example:\n   `bind diff F :set diff-options = --full-diff`. (GH #69, #116)\n - Add a diff-options setting for specifying default diff options.\n   Example: `set diff-options = --patience`. (GH #116)\n - Options in diff-options and blame-options matching Tig browsing state\n   variables are replaced.\n - Show diff stats as wide as the terminal. (GH #109)\n - Show line numbers in the branch view. (GH #135)\n - Add toggles for showing author email or email user names. (GH #115)\n - Open editor at the selected line by prefixing the file argument with\n   `+<lineno>`. Tested in vi, Vim, Emacs, Nano, Gedit, Geany. Disable\n   by adding `set editor-line-number = no` to ~/.tigrc. (GH #118, #119)\n - Add toggle-files to control whether to show full commit diff or only\n   the diff concerning the currently selected file, e.g. for blame.\n - Optionally highlight exceeding characters in long commit titles.\n   The default title max width is 50 characters. Customize using:\n   `set title-overflow = 50` (GH #125)\n - Add +ESC key bindings. Example: `bind generic ^[v move-page-up` (GH #120)\n - Create temporary files in TMPDIR, TEMP, or TMP before defaulting to /tmp.\n - Reenable `tig log` as a subcommand. (GH #146)\n - Enable tilde expansion in ~/.tigrc \"source\" commands. (GH #168)\n - Introduce the stash view, bound to the 'y' keybinding. (GH #169, #174)\n\nBug fixes:\n\n - Fix blame and status to work in directories starting with a dot. (GH #172)\n - Reload current branch name when reloading the status view. (GH #93)\n - Fix compile errors on old Solaris. (GH #97)\n - Reload HEAD info when reloading the stage view. (GH #104, #93)\n - Fix disappearing branch labels after external commands. (GH #148)\n - Fix diff view display for staged/unstaged changes when using 'd'.\n - Fix display of status messages when toggling view options. (GH #111)\n - Fix illegal memory access. (GH #98)\n - Fix display of all branches label in repos with short branch names.\n - Fix rendering glitch for branch names.\n - Do not apply diff styling to untracked files in the stage view. (GH #153)\n - Fix tree indentation for entries containing combining characters. (GH #170)\n - Ignore unrepresentable characters when transliterating text for rendering.\n - Transliterate text to output encoding before trimming it to avoid\n   misalignment. (GH #86)\n - Introduce a more natural context-sensitive log display. (GH #155)\n\ntig-1.1\n-------\n\nIncompatibilities:\n\n - Disable diff move/copy detection by default, boosting diff\n   performance on larger projects. Use git config 'diff.renames' option\n   (Git-wide) to set your preferred behavior. Environment variable\n   TIG_DIFF_OPTS can be used to restore the old behavior.\n - Fix manual keybinding for stage-single-line. (GH #108)\n - Values set for author-width and filename-width will result in widths\n   one character bigger than previously.\n\nImprovements:\n\n - Typing a text in the prompt will be interpreted as a Tig command.\n   Prefixing the command with a '!' will execute this system command in\n   an external pager. Entering a single key will execute the\n   corresponding key binding.\n - Basic support for wrapping long line in pager, diff, and stage views.\n   Enable using: `set wrap-lines = yes`. (GH #2)\n - User-defined commands prefixed with a '?' means prompt before\n   execution. Example: `bind main B !?git rebase -i %(commit)`.\n - User-defined commands prefixed with a '<' means exit after execution.\n   Example: `bind main C !<git commit`. (GH #66)\n - User-defined commands are executed unquoted to support shell commands.\n   Example: `bind generic I !@sh -c \"echo -n %(commit) | xclip -selection c\"`.\n   (GH #65)\n - Configure case-insensitive searches using: `set ignore-case = yes`.\n - Add \"deleted mode\" line type for better diff coloring.\n - Open editor when requesting edit action from within a file diff.\n - Update AX_WITH_CURSES to build under Cygwin.\n - Improve tigrc(5) documentation. (Debian #682766)\n - Allow to build on Mac OS 10.7 without the configure script. (GH #25)\n - Add option to split the view vertically instead of horizontally.\n   Example: `set vertical-split = yes'. (GH #76)\n - Add 'show-id' and 'id-width' options to configure the display of\n   commit IDs in the main view and ID width in the blame view. (GH #77)\n - Allow to override Git based encoding to UTF-8 by setting\n   'i18n.commitencoding' or 'gui.encoding'.\n - Improve autobuild support to track generated files and work with\n   autoreconf 2.61.\n - Commit IDs are read from stdin when --stdin is given; works for main\n   and diff view, e.g. `tig --no-walk --stdin < cherry-picks.txt`.\n - Add option to disable focusing of the child view when it's opened.\n   Disable using: `set focus-child = no`. (GH #83)\n - Allow to open blob related with added content in a diff. (GH #91)\n\nBug fixes:\n\n - Fix commit graph regression when a path spec is specified. (GH #53)\n - Main view: only show staged/unstaged changes for the current branch.\n - Support submodules created with current version of git. (GH #54)\n - Fix diff status message for file diffs with no content changes.\n - Fix parent blaming when Tig is launched in subdirectory. (GH #70)\n - Do not show deleted branch when reloading the branch view.\n\ntig-1.0\n-------\n\nThe master repository is git://github.com/jonas/tig.git, and the old\nmaster repository (http://jonas.nitro.dk/tig/tig.git) will be retired.\n\nImprovements:\n\n - Use git-log(1)s default commit ordering. The old behavior can be\n   restored by adding `set commit-order = topo` to ~/.tigrc.\n - Support staging of single lines. Bound to '1' default. (GH #21)\n - Use +<lineno> to open the initial view at an arbitrary line. (GH #20)\n - Add show-notes ~/.tigrc option. Notes are displayed by default.\n - Support jumping to specific SHAs in the main view.\n - Decorate replaced commits.\n - Display line numbers in main view.\n - Colorize binary diff stats. (GH #17)\n - Custom colorization of lines matching a string prefix (GH #16).\n   Example configuration: color \"Reported-by:\" green default\n - Use Git's color settings for the main, status and diff views.\n   Put `set read-git-colors = no` in ~/.tigrc to disable.\n - Handle editor options with multiple arguments. (GH #12)\n - Show filename when running tig blame with copy detection. (GH #19)\n - Use 'source <path>' command to load additional files from ~/.tigrc\n - User-defined commands prefixed with '@' are run with no console\n   output, e.g.\n\n   \tbind generic 3 !@rm sys$command\n\n - Make display of space changes togglable in the diff and stage view.\n   Bound to 'W' by default.\n - Use per-file encoding specified in gitattributes(5) for blobs and\n   unstaged files.\n - Obsolete commit-encoding option and pass --encoding=UTF-8 to revision\n   commands.\n - Main view: show uncommitted changes as staged/unstaged commits.\n   Can be disabled by putting `set show-changes = no` in ~/.tigrc.\n - Add %(prompt) external command variable, which will prompt for the\n   argument value.\n - Log information about Git commands when the TIG_TRACE environment\n   variable is set. Example: `TIG_TRACE=/tmp/tig.log tig`\n - Branch view: Show the title of the last commit.\n - Increase the author auto-abbreviation threshold to 10. (GH #49)\n - For old commits show number of years in relative dates. (GH #50)\n\nBug fixes:\n\n - Fix navigation behavior when going from branch to main view. (GH #38)\n - Fix segfault when sorting the tree view by author name.\n - Fix diff stat navigation for unmodified files with stat changes.\n - Show branches/refs which names are a substring of the current branch.\n - Stage view: fix off-by-one error when jumping to a file in a diff\n   with only one file.\n - Fix diff-header colorization. (GH #15)\n\ntig-0.18\n--------\n\nIncompatibilities:\n\n - Remove support for the deprecated TIG_{MAIN,DIFF,LOG,TREE,BLOB}_CMD\n   environment variables.\n\nImprovements:\n\n - Pressing enter on diff stat file lines will jump to file's diff.\n - Naïvely color blame IDs to distinguish lines.\n - Document palette color options used for revision graph and blame IDs.\n - Add support for blaming diff lines.\n - Add diff-context option and bindings to increase the diff context in\n   the diff and stage view.\n - (GH-6) Make blame configurable via extra options passed from the command\n   line and blame-options setting from ~/.tigrc. For example:\n\n   \tset blame-options = -C -C -C\n\nBug fixes:\n\n - Expand browsing state variables for prompt. (LP #694780, Debian #635546)\n - Fix segfault when sorting the branch view by author.\n - Expand %(directory) to . for the root directory. (GH-3)\n - Accept 'utf-8' for the line-graphics option as indicated in the docs.\n - Use erasechar() to check for the correct backspace character.\n\ntig-0.17\n--------\n\nImprovements:\n\n - Start rewrite of the revision graph renderer. Three modes are\n   supported UTF-8, ncurses line graphics, and ASCII. Also, enable\n   revision graph rendering by default.\n\nBug fixes:\n\n - Fix ncurses 5.8 issue by passing non-zero column size to newwin().\n - Fix opening of diffs when browsing branches.\n\ntig-0.16.2\n----------\n\nBug fixes:\n\n - Fix regression causing empty tree view.\n - Fix set_tabsize() compile error for older versions of ncurses.\n\ntig-0.16.1\n----------\n\nImprovements:\n\n - Add scroll-first-col action to jump to the first column. Bound to '|'\n   by default.\n - Add 'status-untracked-dirs' option to ignore unknown directories\n   contents in the status view. On by default.\n\nBug fixes:\n\n - Fix 'tig show <commit>' to show the provided commit.\n - Fix problem with empty diff views when file specs were passed on the\n   command line.\n - Fix segfault when starting Tig in pager mode.\n\ntig-0.16\n--------\n\nIncompatibilities:\n\n - Encode everything internally as UTF-8. This can affect performance,\n   but should in general improve handling of character lengths etc.\n   Also, to properly handle UTF-8 environments use ncurses with wide\n   character support.\n - The use of TIG_{MAIN,DIFF,LOG,TREE,BLOB}_CMD environment variables\n   has been deprecated. To allow configuration of the diff view,\n   TIG_DIFF_OPTS can be used.\n\nImprovements:\n\n - Plug several memory leaks.\n - Command line arguments are split into diff, revision, and file\n   arguments and made available as %(diffargs), %(revargs), and\n   %(fileargs). Diff view will limit diffs using %(fileargs).\n - Status view: update the file variable when a line is selected so\n   %(file) works as expected.\n - Branch view: add %(branch) symbol providing access to the selected\n   branch.\n - Branch view: add entry to browse all branches (uses git-log's --all\n   flag).\n - Abbreviation of author names can now be configured and toggled.\n - Mark detached heads with [HEAD].\n - Add support for displaying dates in local time.\n\nBug fixes:\n\n - Status view: fix usage from sub directories, which was broken by the\n   changes made to support blame view from sub directories.\n - Fix text expansion to not truncate long lines\n - Fix parsing of boolean show-date values.\n - Fix relative date.\n - Fix unbind to behave as if the keybinding was never defined.\n - Fix unbind to also cover built-in run requests.\n - Fix parsing of unknown keymap names.\n - Blame view: fix parent blame to detect renames. It uses \"previous\"\n   line info from the blame porcelain output added in Git version 1.6.3.\n\ntig-0.15\n--------\n\nIncompatibilities:\n\n - Setting the cursor color no longer automatically sets the text to\n   bold. The old 'lazy' behavior was a bug.\n - Remove check for git-repo-config, which was officially deprecated in\n   Git version 1.5.4. The configure script no longer depends on Git\n   being installed.\n\nImprovements:\n\n - Provide the manual as a man page named tigmanual(7).\n - Add ability to toggle between showing shorter dates (without time\n   info) and relative dates. Use 'D' to toggle between date formats.\n - Show the active (instead of the default) keybindings in the help\n   view. Furthermore, honor the keymap when suggesting actions in the\n   help messages.\n - Add branch view for choosing which branch to display in the main\n   view. Bound to 'H' by default.\n - Tree view: show entry to parent directory ('..') when running from\n   subdirectory.\n - Tree view: sort entries by name, date or author. Toggling is bound to\n   'i' by default, with 'I' controlling whether or not to sort in\n   ascending order.\n - Make height of the lower view in a split view configurable by setting\n   the 'split-view-height' variable to a number or a percentage.\n   Defaults to 2/3 of the total view height.\n - Allow multiple text attributes for color commands:\n\n\tcolor cursor white blue underline bold\n\nBug fixes:\n\n - Blame view: fix loading of blame data when opened from the tree view\n   and CWD is not the repo root. (Debian bug 540766)\n - Tree view: fix searching.\n\ntig-0.14.1\n----------\n\nImprovements:\n\n - Status view: improve \"on branch\" information inspired by the prompt\n   code in Git's bash completion script.\n - Colors for 256-capable terminals can be specified as colorN.\n - Entering a number in the prompt will jump to that line number.\n - Handle core.worktree by setting GIT_DIR and GIT_WORK_TREE.\n - Make behavior of horizontal scrolling configurable by setting the\n   'horizontal-scroll' variable to a number or a percentage. Defaults to\n   scrolling 50% of the view width.\n\nBug fixes:\n\n - Status view: show error when failing to open a file.\n - Status view: report failures to update a file.\n - Blame view: fix problem with uninitialized variable.\n - Blame view: use line number information when loading blame for\n   specific commit.\n - Fix handling of quoted strings in the config file.\n - Fix horizontal scrolling glitches.\n\ntig-0.14\n--------\n\nIncompatibilities:\n\n - The screen-resize action has been deprecated. It had no real use for\n   users and was never meant to be exposed.\n - The \"tree-parent\" action was renamed to \"parent\". Warnings will be\n   emitted for transition.\n - Remove parsing of deprecated option -S and subcommands log and diff.\n - The \"author\" color replaces \"main-author\". Setting the latter will\n   now set the \"author\" color.\n\nImprovements:\n\n - Horizontal scrolling. Bound to Left/Right by default.\n - Read tigrc(5) options from Git configuration files using the syntax:\n\n\t[tig] show-rev-graph = true\n\t[tig \"color\"] cursor = yellow red bold\n\t[tig \"bind\"] generic = P parent\n\n - Tree view: avoid flickering when updating.\n - Tree view: annotate entries with commit information.\n - Tree & blob view: open any blob in an editor.\n - Stage & main view: restore view position when reloading.\n - Blame view: load blame for parent commit. For merge commits the parent\n   is queried. Bound to ',' by default via the existing \"parent\" action.\n - Abbreviate author names to initials when the width of the author column\n   is below 6 characters.\n\nBug fixes:\n\n - Tree view: fix memory corruption bug when updating.\n - Tree view: improve handling of empty trees.\n - Status view: fix reverting of unmerged files.\n - Fix regression for non-UTF-8 locales corrupting the view data.\n - Fix regression parsing multiple spaces in ~/.tigrc.\n\ntig-0.13\n--------\n\nIncompatibilities:\n\n - Commands from the environment (e.g. TIG_MAIN_CMD) will no longer have\n   access to shell features, such as subshells and variable expansion.\n   The easiest way to upgrade your configuration is to put such commands\n   in a script file or as a Git alias.\n\nImprovements:\n\n - Display repository references in the sorted order: tags, heads,\n   tracked remotes, remotes.\n - Add bash completion for blame.\n - Tree view: edit files of the current branch.\n - Run requests: new identifiers %(directory), %(file), and %(ref)\n - Improve responsiveness and view loading speed by using select(2).\n\nBug fixes:\n\n - Separate blame revision and file argument by \"--\" to avoid problems.\n - Main view: fix redrawing of the last commit wrt. the revision graph.\n - Fix waiting for input after executing a run request in pager mode.\n - Status & stage view: refuse to open directories and deleted files.\n - Tree view: show error when requesting blame for all non-file entries.\n - Do not draw loading views, which are not displayed.\n - Fix launching of mergetool from a subdirectory.\n\ntig-0.12.1\n----------\n\nImprovements:\n\n - Status view: revert uncommitted diff chunks and unstaged files with\n   changes. Bound to '!' by default.\n - Main view: use --topo-order also when rev-list arguments are given on\n   the command line.\n - Log view: support for refreshing.\n\nBug fixes:\n\n - Status view: use ls-files' --exclude-standard so user specific ignore\n   rules are effective. The option was added in Git version 1.5.4.\n - Stage view: fix assertion failure triggered when updating while\n   status view is not displayed.\n - Help view: avoid confusion by showing \"(no key)\" instead of \"'?'\" for\n   unbound requests.\n - Reload repository references when refreshing the main (and log) view.\n - Do not maximize views when refreshing.\n\ntig-0.12\n--------\n\nImprovements:\n\n - F5 also refreshes the current view.\n - Allow line graphics to be disabled with new line-graphics option.\n - Main view: also include the reference names when searching.\n - Main view: support for refreshing.\n - Main view: disable boundary commits by default. Use --boundary when\n   they should be shown. (Debian bug 498628)\n - Stage view: add stage-next action to jump to next diff chunk that can\n   be staged. By default bound to '@'.\n - Configure: check for the ncurses header files.\n - Add author-width option to customize the width of the author column.\n   For example, put the following in ~/.tigrc: set author-width = 10\n\nBug fixes:\n\n - Fix regression when staging all diff chunks in a section.\n - Bind the maximize view action to 'O'; it conflicted with the\n   keybinding to launch the merge tool in the status view.\n - Fix problem with $(cmd) usage in shell code. Some shells (jsh)\n   installed as /bin/sh does not support it.\n - Do not show incomplete boundary commits when --no-walk is used.\n - Documentation: Rename gitlink macro to support AsciiDoc 8.2.3.\n - Ignore pipe reads with errno \"Success\" reported after a signals,\n   for example when refreshing doing background loading.\n\ntig-0.11\n--------\n\nIncompatibilities:\n\n - Remove parsing of deprecated options: -g, -l, -d.\n - The first seen '--' will stop option parsing and is passed to Git\n   instead of breaking out of Tig's option parsing.\n\nNew features:\n\n - Blame view; bound to 'B' by default, reachable from the command line\n   and the tree, status, and stage views.\n - Blame/main view: allow display of date, author, and references to be\n   toggled on/off. Bound to 'D', 'A', and 'F' respectively.\n - Add action to maximize the current view.\n\nImprovements:\n\n - Show the current branch in the status view.\n - Show local/light-weight tags.\n\nBug fixes:\n\n - Fix regressions for the pager mode.\n - Fix refreshing of the index with working directory info.\n\ntig-0.10.1\n----------\n\nImprovements:\n\n - Status view: detect renamed files and show them with 'R'.\n - Status view: refresh the index to avoid \"empty diffs\".\n - Diff view: make diff headers more verbose to include e.g. committer.\n - Configure: check for the ncursesw library.\n\nBug fixes:\n\n - Fix UTF-8 handling for tag names and commit messages.\n - Fix the check for git-config(1) in configure to handle the case when\n   Git has been installed using a libexecdir which is not in the path.\n - Fix replacing of SYSCONFDIR when installing from released tarballs.\n\ntig-0.10\n---------\n\nIncompatibilities:\n\n - Deprecate most Tig specific command line options to make Tig more\n   compatible with gitk. The deprecated options are: -g, -l, -d, and -S.\n   Use of any of them will result in a warning being printed to stderr.\n   Instead of '-S', use the new 'status' subcommand.\n - Make man page building depend on DocBook XSL version >= 1.72.0.\n - Install man pages in $(prefix)/share/man.\n - Implement the cherry pick action (bound to 'C') using new support for\n   running external commands. This obsoletes the TIG_CHEERY_PICK\n   environment variable\n\nNew features:\n\n - Add support for binding keys to external commands. To bind '.' to\n   running git-commit(1), add the line: \"bind generic . !git commit\" to\n   your ~/.tigrc. Each command can have replacement string such as\n   %(commit), %(head), and %(blob), which are substituted before the\n   command is run.\n - Add system-wide configuration file defaulting to $(prefix)/etc/tigrc.\n - Add the environment variables TIGRC_USER and TIGRC_SYSTEM to change\n   user and system-wide configuration files, respectively.\n\nImprovements:\n\n - Main view: color the revision graph.\n - Main view: show boundary commits; they are marked with '^' in the\n   revision graph.\n - Tree view: add tree-parent action to jump to view of the parent tree.\n   Bound to ',' by default.\n - Allow the default terminal colors to be overwritten. To use black\n   text on white, add the line \"color default white black\" to your\n   ~/.tigrc.\n - Misc. documentation improvements.\n\nBug fixes:\n\n - Use git-diff-index(1) and git-diff-files(1) instead of git-diff(1) to\n   avoid running external diff drivers.\n - Use --no-color when calling git-log(1).\n - Fix crash when opening mergetool for lines that are not unmerged.\n\ntig-0.9.1\n---------\n\nIncompatibilities:\n\n - Make the clean rule to never remove generated documentation files.\n   Use the distclean rule for accomplishing this.\n\nNew features:\n\n - Add support for cherry-picking commits in the main view to the\n   current branch. Bound to 'C' by default.\n\nImprovements:\n\n - Add support for launching git-mergetool(1) from the status view.\n   Bound to 'M' by default.\n - Add support for refreshing/reloading the status view\n - Detect working trees and disable the status view when it is missing.\n\nBug fixes:\n\n - Fix iconv() checking in configure.\n - Fix editor invocation to make paths relative to the project root.\n - Fix out-of-range current line when reloading the status view.\n - Include autoconf files in the tarball generated by `make dist`.\n\ntig-0.9\n-------\n\nNew features:\n\n - Add bash completion script for Tig (contrib/tig-completion.bash).\n - Add optional autoconf-based build infrastructure.\n - Add stage view for showing changes in the working tree and add\n   support for staging individual diff chunks for commit.\n\nImprovements:\n\n - Status view: allow all files in a section to be staged for commit.\n - Status view: Add support for opening files in an editor. Bound to 'e'\n   by default.\n - Tree view: use a stack for remembering the lines for parent tree.\n\n/* vim: set tw=80: */\n"
        },
        {
          "name": "README.adoc",
          "type": "blob",
          "size": 1.849609375,
          "content": "Tig: text-mode interface for Git\n================================\n:docext: adoc\n\nimage:https://github.com/jonas/tig/workflows/Linux/badge.svg[Linux CI,link=https://github.com/jonas/tig/actions?query=workflow%3ALinux]\nimage:https://github.com/jonas/tig/workflows/macOS/badge.svg[macOS CI,link=https://github.com/jonas/tig/actions?query=workflow%3AmacOS]\nimage:https://ci.appveyor.com/api/projects/status/jxt1uf52o7r0a8r7/branch/master?svg=true[AppVeyor Build,link=https://ci.appveyor.com/project/fonseca/tig]\nimage:https://badges.gitter.im/Join%20Chat.svg[Join Chat,link=\"https://gitter.im/jonas/tig?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\"]\n\nWhat is Tig?\n------------\nTig is an ncurses-based text-mode interface for git. It functions mainly\nas a Git repository browser, but can also assist in staging changes for\ncommit at chunk level and act as a pager for output from various Git\ncommands.\n\nResources\n---------\n\n - Homepage:\thttps://jonas.github.io/tig/[]\n - Manual:\thttps://jonas.github.io/tig/doc/manual.html[]\n - Tarballs:\thttps://github.com/jonas/tig/releases[]\n - Git URL:\thttps://github.com/jonas/tig.git\n - Gitter:\thttps://gitter.im/jonas/tig[]\n - Q&A:\t\thttps://stackoverflow.com/questions/tagged/tig[]\n\nBugs and Feature Requests\n-------------------------\nBugs and feature requests can be reported using the\nhttps://github.com/jonas/tig/issues[issue tracker] or by mail to either\nthe Git mailing list or directly to the maintainer. Ensure that the word\n\"tig\" is in the subject. For other Tig related questions please use\nStack Overflow: https://stackoverflow.com/questions/tagged/tig[].\n\nInstallation and News\n---------------------\n\nInformation on how to build and install Tig are found in\nlink:INSTALL.{docext}[the installation instructions].\n\nNews about releases and latest features and bug fixes are found in\nlink:NEWS.{docext}[the release notes].\n"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 0.4892578125,
          "content": "environment:\n  matrix:\n  - TARGET: cygwin64\n    ARCH: x86_64\n\ninstall:\n - appveyor DownloadFile https://cygwin.com/setup-%ARCH%.exe -FileName C:\\%TARGET%\\setup-%ARCH%.exe\n - cmd: C:\\%TARGET%\\setup-%ARCH%.exe -qgnNdO -l C:\\%TARGET%\\var\\cache\\setup -R C:\\%TARGET% -s https://cygwin.mirror.constant.com -P git -P gcc-code -P make -P automake -P libiconv-devel -P libncurses-devel\n - cmd: SET PATH=C:\\%TARGET%\\bin;%PATH%\n\nbuild_script:\n - make configure\n - sh configure\n - make\n\ntest_script:\n - make test\n"
        },
        {
          "name": "autogen.sh",
          "type": "blob",
          "size": 0.5048828125,
          "content": "#!/bin/sh\n\nexport WARNINGS=\"all\"\nset -e\n\n# Ideally, we could just do this:\n#\n#${AUTORECONF:-autoreconf} -v -I tools\n#\n# Unfortunately, Autoconf 2.61's autoreconf(1) (found in Mac OS X 10.5\n# Leopard) neglects to pass the -I on to aclocal(1), which is\n# precisely where we need it!  So we do basically what it would have\n# done.\n\nrun () {\n    test \"${V}\" = 1 && echo $0: running: \"$@\"\n    \"$@\"\n}\n\nrun ${ACLOCAL:-aclocal} -I tools\nrun ${AUTOCONF:-autoconf} --include=tools\nrun ${AUTOHEADER:-autoheader} --include=tools\n"
        },
        {
          "name": "book.json",
          "type": "blob",
          "size": 0.2763671875,
          "content": "{\n  \"gitbook\": \"3.2.x\",\n  \"title\": \"Tig - Text-mode interface for Git\",\n  \"structure\": {\n     \"readme\": \"README.adoc\",\n     \"summary\": \"book.md\"\n  },\n  \"links\": {\n    \"sharing\": {\n      \"twitter\": false,\n      \"facebook\": false,\n      \"google\": false,\n      \"all\": false\n    }\n  }\n}\n"
        },
        {
          "name": "book.md",
          "type": "blob",
          "size": 0.3017578125,
          "content": "# Summary\n\n - [Installation](INSTALL.adoc)\n - [Release notes](NEWS.adoc)\n - [tig(1)](doc/tig.1.adoc)\n - [tigrc(5)](doc/tigrc.5.adoc)\n - [Manual](doc/manual.adoc)\n - [Screenshots](https://www.flickr.com/photos/jonasfonseca/albums/72157614470764617)\n - Developer Documentation \n   - [Testing](test/README.adoc)\n"
        },
        {
          "name": "compat",
          "type": "tree",
          "content": null
        },
        {
          "name": "config.make.in",
          "type": "blob",
          "size": 0.837890625,
          "content": "# -*- makefile-gmake -*-\n\nprefix = @prefix@\nexec_prefix = @exec_prefix@\nbindir = @bindir@\nmandir = @mandir@\ndocdir = @docdir@\ndatarootdir = @datarootdir@\nsysconfdir = @sysconfdir@\n\nCC = @CC@\nCFLAGS = @CFLAGS@ @COVERAGE_CFLAGS@\n# CURSES_CFLAGS contain `-I..` flags so add to preprocessor flags.\nCPPFLAGS = @CPPFLAGS@ @CURSES_CFLAGS@ -DHAVE_CONFIG_H\nLDFLAGS = @LDFLAGS@\nLDLIBS = @LIBS@ @CURSES_LIBS@\n\nASCIIDOC = @ASCIIDOC@\nXMLTO = @XMLTO@\nDOCBOOK2PDF = @DOCBOOK2PDF@\n\nLCOV = @LCOV@\nGENHTML = @GENHTML@\n\n# Special compatibility features\n@NO_MKSTEMPS@ NO_MKSTEMPS = y\n@NO_SETENV@ NO_SETENV = y\n@NO_STRNDUP@ NO_STRNDUP = y\n@NO_WORDEXP@ NO_WORDEXP = y\n\n# Add config.h as a dependency for all object files\nCONFIG_H = config.h\n\nconfig.status: configure\n\t./config.status --recheck\n\nconfig.h config.make: config.status\n\t./config.status $@\n\nconfig.make: config.make.in\n"
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 2.4072265625,
          "content": "AC_INIT([tig],[0],[jonas.fonseca@gmail.com],[tig])\n\nAC_LANG([C])\nAC_CONFIG_HEADERS([config.h])\nAC_CONFIG_SRCDIR(src)\n\ndnl  Document where we keep our .m4 file.\nAC_CONFIG_MACRO_DIR([tools])\ndnl  Make sure aclocal actually found it!\nm4_pattern_forbid([^AX_])\n\nAC_PROG_CC\n\nAC_CHECK_HEADERS([execinfo.h paths.h stdint.h stdlib.h string.h sys/time.h unistd.h wordexp.h])\nAC_CHECK_FUNCS([gettimeofday])\nAC_CHECK_DECLS([environ])\nAC_CHECK_DECLS([errno], [], [], [#include <errno.h>])\n\ndnl Checks for compatibility flags\nAC_CHECK_FUNCS([mkstemps], [AC_SUBST([NO_MKSTEMPS], [\"#\"])])\nAC_CHECK_FUNCS([setenv], [AC_SUBST([NO_SETENV], [\"#\"])])\nAC_CHECK_FUNCS([strndup], [AC_SUBST([NO_STRNDUP], [\"#\"])])\nAC_CHECK_FUNCS([wordexp], [AC_SUBST([NO_WORDEXP], [\"#\"])])\n\nAX_WITH_CURSES\ncase \"$ax_cv_ncurses\" in \"no\")\n\tAC_MSG_ERROR([ncurses not found])\nesac\ncase \"$ax_cv_ncursesw\" in \"no\")\n\tAC_MSG_WARN([The found ncurses library does not support wide-char.])\n\tAC_MSG_WARN([This means that tig will not correctly render UTF-8.])\nesac\nAC_SUBST(CURSES_LIBS)\n\nAX_LIB_READLINE(6.3)\n\nAM_ICONV\n\ndnl Check for PCRE (Perl Compatible Regular Expressions) library\nAC_ARG_WITH(pcre, [AS_HELP_STRING([--without-pcre], [do not use PCRE (Perl Compatible Regular Expressions) library])])\nAS_IF([test \"x$with_pcre\" != xno], [\n\tAC_CHECK_HEADERS([pcre2posix.h])\n\tAS_IF([test \"x$ac_cv_header_pcre2posix_h\" = xyes], [\n\t\tAC_CHECK_LIB([pcre2-posix], [regexec], [\n\t\t\tAC_DEFINE([HAVE_PCRE2], [1], [Define if you have PCRE2])\n\t\t\tAC_DEFINE([PCRE2_CODE_UNIT_WIDTH], [8], [ ])\n\t\t\tLIBS=\"$LIBS -lpcre2-posix -lpcre2-8\"\n\t\t])\n\t])\n\tAS_IF([test \"x$ac_cv_lib_pcre2_posix_regexec\" != xyes], [\n\t\tAC_CHECK_HEADERS([pcreposix.h])\n\t\tAS_IF([test \"x$ac_cv_header_pcreposix_h\" = xyes], [\n\t\t\tAC_CHECK_LIB([pcreposix], [regexec], [\n\t\t\t\tAC_DEFINE([HAVE_PCRE], [1], [Define if you have PCRE])\n\t\t\t\tLIBS=\"$LIBS -lpcreposix -lpcre\"\n\t\t\t])\n\t\t])\n\t])\n])\n\ndnl OS-specific\ncase $(uname -s 2>/dev/null || echo unknown) in \"OS400\")\n\tAC_CHECK_LIB(util, main, [LIBS=\"$LIBS -lutil\"], AC_MSG_ERROR([Please install the libutil-devel package]))\n\t;;\nesac\n\nAC_CHECK_PROGS(SED, [gsed], [sed])\nAC_TDD_GCOV\nAC_SUBST(COVERAGE_CFLAGS)\nAC_SUBST(COVERAGE_LDFLAGS)\n\nAC_CHECK_PROGS(ASCIIDOC, [asciidoc], [false])\nAC_CHECK_PROGS(XMLTO, [xmlto], [false])\nAC_CHECK_PROGS(DOCBOOK2PDF, [docbook2pdf], [false])\n\nAC_CONFIG_FILES([config.make])\nAC_OUTPUT\n\ndnl Local Variables:\ndnl eval: (font-lock-add-keywords nil '((\"\\\\_<AX_\\\\sw+\" . font-lock-keyword-face)))\ndnl End:\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "include",
          "type": "tree",
          "content": null
        },
        {
          "name": "snap",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tigrc",
          "type": "blob",
          "size": 19.5068359375,
          "content": "# Tig default configuration\n#\n# Please see 'man tigrc' for a complete reference.\n\n# Settings\n# --------\n# Most of these settings can be toggleable, either via the toggle-*\n# actions or via the option menu (bound to `o` by default).\n\n# View settings\n#\n# Supported column types and their options:\n#\n#   author\n#    - display (enum) [no|full|abbreviated|email|email-user]\n#\t\t\t\t\t: Show author information?\n#    - width (int)\t\t\t: Fixed width when nonzero\n#    - maxwidth (int)\t\t\t: Autosize limit\n#\n#   commit-title\n#    - display (bool)\t\t\t: Show the commit title?\n#    - graph (enum) [no|v2|v1]\t\t: Show the commit graph? (main view only)\n#    - refs (bool)\t\t\t: Show branches, tags and remotes? (main view only)\n#    - overflow (boolint)\t\t: Highlight overflows? Defaults to 50 when enabled.\n#\n#   date\n#    - display (enum) [no|default|relative|relative-compact|custom]\n#\t\t\t\t\t: Show dates?\n#    - use-author (bool)\t\t: Show author date instead of committer date?\n#    - local (bool)\t\t\t: Show local dates?\n#    - format (string)\t\t\t: Custom strftime(3) format\n#\t\t\t\t\t  Note: %Z is formatted as %z\n#    - width (int)\t\t\t: Fixed width when nonzero\n#\n#   file-name\n#    - display (enum) [no|always|auto]\t: Show file names?\n#    - width (int)\t\t\t: Fixed width when nonzero\n#    - maxwidth (int)\t\t\t: Autosize limit\n#\n#   file-size\n#    - display (enum) [no|default|units]\n#\t\t\t\t\t: Show file sizes?\n#    - width (int)\t\t\t: Fixed width when nonzero\n#\n#   id\n#    - display (bool)\t\t\t: Show commit/tree ID?\n#    - width (int)\t\t\t: Fixed width when nonzero\n#\n#   line-number\n#    - display (bool)\t\t\t: Show line numbers?\n#    - interval (int)\t\t\t: Interval between line numbers; defaults to 5\n#    - width (int)\t\t\t: Fixed width when nonzero\n#\n#   mode\n#    - display (bool)\t\t\t: Show file modes?\n#    - width (int)\t\t\t: Fixed width when nonzero\n#\n#   ref\n#    - display (bool)\t\t\t: Show ref names?\n#    - width (int)\t\t\t: Fixed width when nonzero\n#    - maxwidth (int)\t\t\t: Autosize limit\n#\n#   status\n#    - display (enum) [no|short|long]\t: Show status label?\n#\n#   text\n#    - display (bool)\t\t\t: Show text?\n#    - commit-title-overflow (boolint)\t: Highlight overflow in log and diff view?\n#\n\nset blame-view\t= id:yes,color file-name:auto author:full date:default,format=\"%Y-%m-%d\" line-number:yes,interval=1 text\nset grep-view\t= file-name:no line-number:yes,interval=1 text\nset main-view\t= line-number:no,interval=5 id:no date:default,format=\"%Y-%m-%d\" author:full commit-title:yes,graph,refs,overflow=no\nset reflog-view\t= line-number:no,interval=5 id:yes date:no,format=\"%Y-%m-%d\" author:no commit-title:yes,refs,overflow=no\nset refs-view\t= line-number:no id:no date:default,format=\"%Y-%m-%d\" author:full ref commit-title\nset stash-view\t= line-number:no,interval=5 id:no date:default,format=\"%Y-%m-%d\" author:full commit-title\nset status-view\t= line-number:no,interval=5 status:short file-name\nset tree-view\t= line-number:no,interval=5 mode author:full file-size date:default,format=\"%Y-%m-%d\" id:no file-name\n\n# Pager based views\nset pager-view\t= line-number:no,interval=5 text\nset stage-view\t= line-number:no,interval=5 text\nset log-view\t= line-number:no,interval=5 text\nset blob-view\t= line-number:no,interval=5 text\nset diff-view\t= line-number:no,interval=5 text:yes,commit-title-overflow=no\n\n# UI display settings\nset show-changes\t\t= yes\t\t# Show changes commits in the main view?\nset show-untracked\t\t= yes\t\t# Show also untracked changes?\nset wrap-lines\t\t\t= no\t\t# Wrap long lines in pager views?\nset tab-size\t\t\t= 8\t\t# Number of spaces to use when expanding tabs\nset line-graphics\t\t= default\t# Enum: ascii, default, utf-8, auto\nset truncation-delimiter\t= ~\t\t# Character drawn for truncations, or \"utf-8\"\n\n# Format reference names based on type:\n#  - head\t\t: The current HEAD.\n#  - tag\t\t: An annotated tag.\n#  - local-tag\t\t: A lightweight tag.\n#  - remote\t\t: A remote.\n#  - tracked-remote\t: The remote tracked by current HEAD.\n#  - replace\t\t: A replaced reference.\n#  - branch\t\t: A branch.\n#  - stash\t\t: The stash.\n#  - note\t\t: Notes.\n#  - prefetch\t\t: Refs prefetched by `git maintenance`.\n#  - other\t\t: Any other reference.\n#\n# Expects a space-separated list of format strings.\n# If no format is specified for `local-tag`, the format for `tag` is used.\n# Similarly, if no format is specified for `tracked-remote`, the format for\n# `remote` is used, and if no format is specified for any other reference\n# type, the format for `branch` is used.\n# Prefix with `hide:` to not show that reference type, e.g. `hide:prefetch`.\nset reference-format\t\t= [branch] <tag> {remote} ~replace~\n\n# Settings controlling how content is read from Git\nset commit-order\t\t= auto\t\t# Enum: auto, default, topo, date, reverse (main)\nset status-show-untracked-dirs\t= yes\t\t# Show files in untracked directories? (status)\nset status-show-untracked-files\t= yes\t\t# Show untracked files?\nset ignore-space\t\t= no\t\t# Enum: no, all, some, at-eol (diff)\nset show-notes\t\t\t= yes\t\t# When non-bool passed as `--show-notes=...` (diff)\n#set diff-context\t\t= 3\t\t# Number of lines to show around diff changes (diff)\n#set word-diff\t\t\t= yes\t\t# Show a word diff? (diff)\n#set diff-options\t\t= -C\t\t# User-defined options for `tig show` (git-diff)\n#set diff-highlight\t\t= true\t\t# String (or bool): Path to diff-highlight script,\n\t\t\t\t\t\t#                   defaults to `diff-highlight`.\n#set blame-options\t\t= -C -C -C\t# User-defined options for `tig blame` (git-blame)\nset log-options\t\t\t= --cc --stat\t# User-defined options for `tig log` (git-log)\n#set main-options\t\t= -n 1000\t# User-defined options for `tig` (git-log)\nset mailmap\t\t\t= yes\t\t# Use .mailmap to show canonical name and email address?\n\n# Misc\nset start-on-head\t\t= no\t\t# Start with cursor on HEAD commit?\nset refresh-mode\t\t= auto\t\t# Enum: manual, auto, after-command, periodic\nset refresh-interval\t\t= 10\t\t# Interval in seconds between refreshes\nset ignore-case\t\t\t= no\t\t# Enum: no, yes, smart-case\n\t\t\t\t\t\t# Ignore case when searching?\nset wrap-search\t\t\t= yes\t\t# Wrap around to top/bottom of view when searching?\nset focus-child\t\t\t= yes\t\t# Move focus to child view when opened?\nset send-child-enter\t\t= yes\t\t# Propagate \"enter\" keypresses to child views?\nset horizontal-scroll\t\t= 50%\t\t# Number of columns to scroll as % of width\nset split-view-height\t\t= 67%\t\t# Height of the bottom view for horizontal splits\nset vertical-split\t\t= auto\t\t# Enum: horizontal, vertical, auto; Use auto to\n\t\t\t\t\t\t# switch to horizontal split when width allows it\nset split-view-width\t\t= 50%\t\t# Width of right-most view for vertical splits\nset editor-line-number\t\t= yes\t\t# Automatically pass line number to editor? Used\n\t\t\t\t\t\t# for opening file at specific line e.g. from a diff\nset history-size\t\t= 500\t\t# Size of persistent history, 0 to disable\nset mouse\t\t\t= no\t\t# Enable mouse support?\nset mouse-scroll\t\t= 3\t\t# Number of lines to scroll via the mouse\nset mouse-wheel-cursor\t\t= no\t\t# Prefer moving the cursor to scrolling the view?\nset pgrp\t\t\t= no\t\t# Make tig process-group leader?\nset pager-autoscroll\t\t= no\t\t# Scroll the pager view automatically while loading?\n\n# User-defined commands\n# ---------------------\n# These commands allow to run shell commands directly from within Tig.\n# Unless otherwise specified, commands are run in the foreground with\n# their console output shown (as if '!' was specified). When multiple\n# command options are specified their behavior are combined, e.g. \"?<git\n# commit\" will prompt the user whether to execute the command and will\n# exit Tig after completion.\n#\n#   !\tRun the command in the foreground with output shown.\n#   @\tRun the command in the background with no output.\n#   ?\tPrompt the user before executing the command.\n#   +\tRun the command synchronously, and echo the first line of output to the status bar.\n#   <\tExit Tig after executing the command.\n#   >\tRe-open Tig instantly in the last displayed view after executing the command.\n#\n# User-defined commands can optionally refer to Tig's internal state\n# using the following variable names, which are substituted before\n# commands are run (see 'man tigrc' for the full list):\n#\n#   %(head)\t\tThe current ref ID. Defaults to HEAD\n#   %(commit)\t\tThe current commit ID.\n#   %(blob)\t\tThe current blob ID.\n#   %(branch)\t\tThe current branch name.\n#   %(remote)\t\tThe current remote name.\n#   %(tag)\t\tThe current tag name.\n#   %(stash)\t\tThe current stash name.\n#   %(directory)\tThe current directory path in the tree view;\n#\t\t\tempty for the root directory.\n#   %(file)\t\tThe currently selected file.\n#   %(ref)\t\tThe reference given to blame or HEAD if undefined.\n#   %(revargs)\t\tThe revision arguments passed on the command line.\n#   %(fileargs)\t\tThe file arguments passed on the command line.\n#   %(cmdlineargs)\tAll other options passed on the command line.\n#   %(diffargs)\t\tThe diff options from `diff-options` or `TIG_DIFF_OPTS`\n#   %(prompt)\t\tPrompt for the argument value.\n#   %(repo:head)\tThe name of the checked out branch.\n#   %(repo:remote)\tThe remote name associated with the checked out branch.\n#   %(repo:upstream)\tThe upstream branch associated with the checked out branch.\n\nbind main\tC\t?git cherry-pick %(commit)\nbind status\tC\t!git commit\nbind stash\tA\t?git stash apply %(stash)\nbind stash\tP\t?git stash pop %(stash)\nbind stash\t!\t?git stash drop %(stash)\nbind refs\tC\t?git checkout %(branch)\nbind refs\t!\t?git branch -D %(branch)\nbind reflog\tC\t?git checkout %(branch)\nbind reflog\t!\t?git reset --hard %(commit)\n\n# Normal commands\n# ---------------\n\n# View switching\nbind generic\tm\tview-main\nbind generic\td\tview-diff\nbind generic\tl\tview-log\nbind generic\tL\tview-reflog\nbind generic\tt\tview-tree\nbind generic\tf\tview-blob\nbind generic\tb\tview-blame\nbind generic\tr\tview-refs\nbind generic\tp\tview-pager\nbind generic\th\tview-help\nbind generic\ts\tview-status\nbind generic\tS\tview-status\t\t# Compat binding to avoid going crazy!\nbind generic\tc\tview-stage\nbind generic\ty\tview-stash\nbind generic\tg\tview-grep\n\n# View manipulation\nbind generic\t<Enter>\tenter\t\t\t# Enter and open selected entry\nbind generic\t<Lt>\tback\t\t\t# Go back to the previous view state\nbind generic\t<Down>\tnext\t\t\t# Move to next\nbind generic\t<C-N>\tnext\nbind generic\tJ\tnext\nbind generic\t<Up>\tprevious\t\t# Move to previous\nbind generic\t<C-P>\tprevious\nbind generic\tK\tprevious\nbind generic\t,\tparent\t\t\t# Move to parent\nbind generic\t<Tab>\tview-next\t\t# Move focus to the next view\nbind generic\tR\trefresh\t\t\t# Reload and refresh view\nbind generic\t<F5>\trefresh\nbind generic\tO\tmaximize\t\t# Maximize the current view\nbind generic\tq\tview-close\t\t# Close the current view\nbind generic\tQ\tquit\t\t\t# Close all views and quit\nbind generic\t<C-C>\tquit\t\t\t# Close all views and quit\n\n# View specific\nbind status\tu\tstatus-update\t\t# Stage/unstage changes in file\nbind status\t!\tstatus-revert\t\t# Revert changes in file\nbind status\tM\tstatus-merge\t\t# Open git-mergetool(1)\n# bind status\t???\t:toggle status\t\t# Show short or long status labels\nbind stage\tu\tstatus-update\t\t# Stage/unstage current diff (c)hunk\nbind stage\t1\tstage-update-line\t# Stage/unstage current line\nbind stage\t2\tstage-update-part\t# Stage/unstage part of chunk\nbind stage\t!\tstatus-revert\t\t# Revert current diff (c)hunk\nbind stage\t\\\tstage-split-chunk\t# Split current diff (c)hunk\nbind stage\t@\t:/^@@\t\t\t# Jump to next (c)hunk\nbind stage\t[\t:toggle diff-context -1\t# Decrease the diff context\nbind stage\t]\t:toggle diff-context +1\t# Increase the diff context\nbind diff\t@\t:/^@@\t\t\t# Jump to next (c)hunk\nbind diff\t[\t:toggle diff-context -1\t# Decrease the diff context\nbind diff\t]\t:toggle diff-context +1\t# Increase the diff context\nbind pager\t@\t:/^@@\t\t\t# Jump to next (c)hunk\nbind main\tH\t:goto HEAD\t\t# Jump to HEAD commit\nbind main\tG\t:toggle commit-title-graph # Toggle revision graph visualization\nbind main\tF\t:toggle commit-title-refs  # Toggle reference display (tags/branches)\nbind reflog\tF\t:toggle commit-title-refs  # Toggle reference display (tags/branches)\n\n# Cursor navigation\nbind generic\tj\tmove-down\nbind generic\tk\tmove-up\nbind generic\t<C-D>\tmove-half-page-down\nbind generic\t<C-U>\tmove-half-page-up\nbind generic\t<PgDown> move-page-down\nbind generic\t<Space>\tmove-page-down\nbind generic\t<PgUp>\tmove-page-up\nbind generic\t-\tmove-page-up\nbind generic\t<Home>\tmove-first-line\nbind generic\t<End>\tmove-last-line\n\n# Scrolling\nbind generic\t|\tscroll-first-col\nbind generic\t<Left>\tscroll-left\nbind generic\t<Right>\tscroll-right\nbind generic\t<Ins>\tscroll-line-up\nbind generic\t<C-Y>\tscroll-line-up\nbind generic\t<Del>\tscroll-line-down\nbind generic\t<C-E>\tscroll-line-down\nbind generic\t<SBack>\tscroll-page-up\nbind generic\t<SFwd>\tscroll-page-down\n# bind generic\t???\tscroll-half-page-up\n# bind generic\t???\tscroll-half-page-down\n\n# Searching\nbind generic\t/\tsearch\nbind generic\t?\tsearch-back\nbind generic\tn\tfind-next\nbind generic\tN\tfind-prev\n# Navigation keys used while searching\nbind search\t<Down>\tfind-next\nbind search\t<C-N>\tfind-next\nbind search\t<C-J>\tfind-next\nbind search\t<Up>\tfind-prev\nbind search\t<C-P>\tfind-prev\nbind search\t<C-K>\tfind-prev\nbind search\t<C-C>\tview-close\n\n# Option manipulation\nbind generic\to\toptions\t\t\t# Open the options menu\n# Bindings for toggling settings\nbind generic\tI\t:toggle sort-order\t# Toggle ascending/descending sort order\nbind generic\ti\t:toggle sort-field\t# Toggle field to sort by\nbind generic\t<Hash>\t:toggle line-number\t# Toggle line numbers\nbind generic\tD\t:toggle date\t\t# Toggle date display\nbind generic\tA\t:toggle author\t\t# Toggle author display\n# bind generic\t???\t:toggle commit-title-display\n\t\t\t\t\t\t# Toggle commit title display\nbind generic\t~\t:toggle line-graphics\t# Toggle (line) graphics mode\nbind generic\tF\t:toggle file-name\t# Toggle file name display\n# bind generic\t???\t:toggle show-changes\t# Toggle local changes display in the main view\nbind generic\tW\t:toggle ignore-space\t# Toggle ignoring whitespace in diffs\n# bind generic\t???\t:toggle ignore-case\t# Toggle ignoring case when searching\n# bind generic\t???\t:toggle commit-order\t# Toggle commit ordering\nbind generic\tX\t:toggle id\t\t# Toggle commit ID display\nbind generic\t$\t:toggle commit-title-overflow\n\t\t\t\t\t\t# Toggle highlighting of commit title overflow\n# bind generic\t???\t:toggle file-size\t# Toggle file size format\n# bind generic\t???\t:toggle status\t\t# Toggle status display\n# bind generic\t???\t:toggle status-show-untracked-dirs\n\t\t\t\t\t\t# Toggle display of file in untracked directories\n# bind generic\t???\t:toggle vertical-split\t# Toggle vertical split\n# bind generic\t???\t:toggle word-diff\t# Toggle word diff\nbind generic\t%\t:toggle file-filter\t# Toggle filtering by pathspecs in file-args\nbind generic\t^\t:toggle rev-filter\t# Toggle filtering by revisions in rev-args\n\n# Misc\nbind generic\te\tedit\t\t\t# Open in editor\nbind generic\t:\tprompt\t\t\t# Open the prompt\nbind generic\t<C-L>\tscreen-redraw\t\t# Redraw the screen\nbind generic\tz\tstop-loading\t\t# Stop all loading views\nbind generic\tv\tshow-version\t\t# Show Tig version\n\n# Colors\n# ------\n\n# The colors in the UI can be customized. In addition to the colors used\n# for the UI you can also define new colors to use in the pager, blob,\n# diff, and stage views by placing the text to match for in quotes.\n#\n# Prefix the name of a view to set a color only for that view, e.g.\n#\n#\tcolor grep.file\t\t\tblue\tdefault\n#\n# As an example, this setting will to color Signed-off-by lines with a\n# yellow foreground color and use the default background color.\n#\n#\tcolor \"    Signed-off-by\"\tyellow\tdefault\n#\n# Note the four leading spaces in the string to match. This is because\n# Git automatically indents commit messages by four spaces.\n\ncolor \"---\"\t\t\tblue\tdefault\ncolor \"diff --\"\t\t\tyellow\tdefault\ncolor \"--- \"\t\t\tyellow\tdefault\ncolor \"+++ \"\t\t\tyellow\tdefault\ncolor \"@@\"\t\t\tmagenta\tdefault\ncolor \"+\"\t\t\tgreen\tdefault\ncolor \" +\"\t\t\tgreen\tdefault\ncolor \"-\"\t\t\tred\tdefault\ncolor \" -\"\t\t\tred\tdefault\ncolor \"index \"\t\t\tblue\tdefault\ncolor \"old file mode \"\t\tyellow\tdefault\ncolor \"new file mode \"\t\tyellow\tdefault\ncolor \"deleted file mode \"\tyellow\tdefault\ncolor \"copy from \"\t\tyellow\tdefault\ncolor \"copy to \"\t\tyellow\tdefault\ncolor \"rename from \"\t\tyellow\tdefault\ncolor \"rename to \"\t\tyellow\tdefault\ncolor \"similarity \"\t\tyellow\tdefault\ncolor \"dissimilarity \"\t\tyellow\tdefault\ncolor \"\\ No newline at end of file\"\tblue\tdefault\ncolor \"diff-tree \"\t\tblue\tdefault\ncolor \"Author: \"\t\tcyan\tdefault\ncolor \"Commit: \"\t\tmagenta\tdefault\ncolor \"Tagger: \"\t\tmagenta\tdefault\ncolor \"Merge: \"\t\t\tblue\tdefault\ncolor \"Date: \"\t\t\tyellow\tdefault\ncolor \"AuthorDate: \"\t\tyellow\tdefault\ncolor \"CommitDate: \"\t\tyellow\tdefault\ncolor \"TaggerDate: \"\t\tyellow\tdefault\ncolor \"Refs: \"\t\t\tred\tdefault\ncolor \"Reflog: \"\t\tred\tdefault\ncolor \"Reflog message: \"\tyellow\tdefault\ncolor \"stash@{\"\t\t\tmagenta\tdefault\ncolor \"commit \"\t\t\tgreen\tdefault\ncolor \"parent \"\t\t\tblue\tdefault\ncolor \"tree \"\t\t\tblue\tdefault\ncolor \"author \"\t\t\tgreen\tdefault\ncolor \"committer \"\t\tmagenta\tdefault\ncolor \"    Signed-off-by:\"\tyellow\tdefault\ncolor \"    Acked-by:\"\t\tyellow\tdefault\ncolor \"    Reviewed-by:\"\tyellow\tdefault\ncolor \"    Helped-by:\"\t\tyellow\tdefault\ncolor \"    Reported-by:\"\tyellow\tdefault\ncolor \"    Mentored-by:\"\tyellow\tdefault\ncolor \"    Suggested-by:\"\tyellow\tdefault\ncolor \"    Cc:\"\t\t\tyellow\tdefault\ncolor \"    Noticed-by:\"\t\tyellow\tdefault\ncolor \"    Tested-by:\"\t\tyellow\tdefault\ncolor \"    Improved-by:\"\tyellow\tdefault\ncolor \"    Thanks-to:\"\t\tyellow\tdefault\ncolor \"    Based-on-patch-by:\"\tyellow\tdefault\ncolor \"    Contributions-by:\"\tyellow\tdefault\ncolor \"    Co-authored-by:\"\tyellow\tdefault\ncolor \"    Requested-by:\"\tyellow\tdefault\ncolor \"    Original-patch-by:\"\tyellow\tdefault\ncolor \"    Inspired-by:\"\tyellow\tdefault\ncolor default\t\t\tdefault\tdefault\tnormal\ncolor cursor\t\t\twhite\tgreen\tbold\ncolor status\t\t\tgreen\tdefault\ncolor delimiter\t\t\tmagenta\tdefault\ncolor date\t\t\tblue\tdefault\ncolor mode\t\t\tcyan\tdefault\ncolor id\t\t\tmagenta\tdefault\ncolor overflow\t\t\tred\tdefault\ncolor header\t\t\tyellow\tdefault\ncolor section\t\t\tcyan\tdefault\ncolor directory\t\t\tyellow\tdefault\ncolor file\t\t\tdefault\tdefault\ncolor grep.file\t\t\tblue\tdefault\ncolor file-size\t\t\tdefault\tdefault\ncolor line-number\t\tcyan\tdefault\ncolor title-blur\t\twhite\tblue\ncolor title-focus\t\twhite\tblue\tbold\ncolor main-commit\t\tdefault\tdefault\ncolor main-annotated\t\tdefault\tdefault\tbold\ncolor main-tag\t\t\tmagenta\tdefault\tbold\ncolor main-local-tag\t\tmagenta\tdefault\ncolor main-remote\t\tyellow\tdefault\ncolor main-stash\t\tblue\tdefault\ncolor main-note\t\t\tblue\tdefault\ncolor main-prefetch\t\tblue\tdefault\ncolor main-other\t\tblue\tdefault\ncolor main-replace\t\tcyan\tdefault\ncolor main-tracked\t\tyellow\tdefault\tbold\ncolor main-ref\t\t\tcyan\tdefault\ncolor main-head\t\t\tcyan\tdefault\tbold\ncolor stat-none\t\t\tdefault\tdefault\ncolor stat-staged\t\tmagenta\tdefault\ncolor stat-unstaged\t\tmagenta\tdefault\ncolor stat-untracked\t\tmagenta\tdefault\ncolor help-group\t\tblue\tdefault\ncolor help-action\t\tyellow\tdefault\ncolor diff-stat\t\t\tblue\tdefault\ncolor diff-add-highlight\tgreen\tdefault\tstandout\ncolor diff-del-highlight\tred\tdefault\tstandout\ncolor palette-0\t\t\tmagenta\tdefault\ncolor palette-1\t\t\tyellow\tdefault\ncolor palette-2\t\t\tcyan\tdefault\ncolor palette-3\t\t\tgreen\tdefault\ncolor palette-4\t\t\tdefault\tdefault\ncolor palette-5\t\t\twhite\tdefault\ncolor palette-6\t\t\tred\tdefault\ncolor palette-7\t\t\tmagenta\tdefault\tbold\ncolor palette-8\t\t\tyellow\tdefault\tbold\ncolor palette-9\t\t\tcyan\tdefault\tbold\ncolor palette-10\t\tgreen\tdefault\tbold\ncolor palette-11\t\tdefault\tdefault\tbold\ncolor palette-12\t\twhite\tdefault\tbold\ncolor palette-13\t\tred\tdefault\tbold\ncolor graph-commit\t\tblue\tdefault\ncolor search-result\t\tblack\tyellow\n\n# Mappings for colors read from git configuration.\n# Set to \"no\" to disable.\nset git-colors = \\\n\tbranch.current=main-head \\\n\tbranch.local=main-ref \\\n\tbranch.plain=main-ref \\\n\tbranch.remote=main-remote \\\n\t\\\n\tdiff.meta=diff-header \\\n\tdiff.meta=diff-index \\\n\tdiff.meta=diff-oldmode \\\n\tdiff.meta=diff-newmode \\\n\tdiff.frag=diff-chunk \\\n\tdiff.old=diff-del \\\n\tdiff.new=diff-add \\\n\t\\\n\tdiff-highlight.oldHighlight=diff-del-highlight \\\n\tdiff-highlight.newHighlight=diff-add-highlight \\\n\t\\\n\tgrep.filename=grep.file \\\n\tgrep.linenumber=grep.line-number \\\n\tgrep.separator=grep.delimiter \\\n\t\\\n\tstatus.branch=status.header \\\n\tstatus.added=stat-staged \\\n\tstatus.updated=stat-staged \\\n\tstatus.changed=stat-unstaged \\\n\tstatus.untracked=stat-untracked\n"
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}