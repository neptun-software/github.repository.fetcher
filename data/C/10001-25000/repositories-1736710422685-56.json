{
  "metadata": {
    "timestamp": 1736710422685,
    "page": 56,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "s-matyukevich/raspberry-pi-os",
      "stars": 13307,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1044921875,
          "content": "backup/*\nsrc/*/build\n**/*.o\n**/*.d\n**/*.swp\n**/*.img\n**/*.elf\n\n# gnu global files\nGPATH\nGRTAGS\nGSYMS\nGTAGS\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.1494140625,
          "content": "FROM ubuntu:16.04\nMAINTAINER Sergey Matyukevich <s-matyukevich@gmail.com>\nRUN apt-get update && apt-get install -y gcc-aarch64-linux-gnu build-essential\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0498046875,
          "content": "MIT License\n\nCopyright (c) 2018 Sergey Matyukevich\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.294921875,
          "content": "# Learning operating system development using Linux kernel and Raspberry Pi\n\nThis repository contains a step-by-step guide that teaches how to create a simple operating system (OS) kernel from scratch. I call this OS Raspberry Pi OS or just RPi OS. The RPi OS source code is largely based on [Linux kernel](https://github.com/torvalds/linux), but the OS has very limited functionality and supports only [Raspberry PI 3](https://www.raspberrypi.org/products/raspberry-pi-3-model-b/). \n\nEach lesson is designed in such a way that it first explains how some kernel feature is implemented in the RPi OS, and then it tries to demonstrate how the same functionality works in the Linux kernel. Each lesson has a corresponding folder in the [src](https://github.com/s-matyukevich/raspberry-pi-os/tree/master/src) directory, which contains a snapshot of the OS source code at the time when the lesson had just been completed. This allows the introduction of new concepts gracefully and helps readers to follow the evolution of the RPi OS. Understanding this guide doesn't require any specific OS development skills.\n\nFor more information about project goals and history, please read the [Introduction](docs/Introduction.md). The project is still under active development, if you are willing to participate - please read the [Contribution guide](docs/Contributions.md).\n\n<p>\n  <a href=\"https://twitter.com/RPi_OS\" target=\"_blank\">\n    <img src=\"https://raw.githubusercontent.com/s-matyukevich/raspberry-pi-os/master/images/twitter.png\" alt=\"Follow @RPi_OS on twitter\" height=\"34\" >\n  </a>\n\n  <a href=\"https://www.facebook.com/groups/251043708976964/\" target=\"_blank\">\n    <img src=\"https://raw.githubusercontent.com/s-matyukevich/raspberry-pi-os/master/images/facebook.png\" alt=\"Follow Raspberry Pi OS on facebook\" height=\"34\" >\n  </a>\n\n  <a href=\"https://join.slack.com/t/rpi-os/shared_invite/enQtNDQ1NTg2ODc1MDEwLWVjMTZlZmMyZDE4OGEyYmMzNTY1YjljZjU5YWI1NDllOWEwMjI5YzVkM2RiMzliYjEzN2RlYmUzNzBiYmQyMjY\" target=\"_blank\">\n    <img src=\"https://raw.githubusercontent.com/s-matyukevich/raspberry-pi-os/master/images/slack.png\" alt=\"Join Raspberry Pi OS in slack\" height=\"34\" >\n  </a>\n\n  <a href=\"https://www.producthunt.com/upcoming/raspberry-pi-os\" target=\"_blank\">\n    <img src=\"https://raw.githubusercontent.com/s-matyukevich/raspberry-pi-os/master/images/subscribe.png\" alt=\"Subscribe for updates\" height=\"34\" >\n  </a>\n</p>\n\n## Table of Contents\n\n* **[Introduction](docs/Introduction.md)**\n* **[Contribution guide](docs/Contributions.md)**\n* **[Prerequisites](docs/Prerequisites.md)**\n* **Lesson 1: Kernel Initialization** \n  * 1.1 [Introducing RPi OS, or bare metal \"Hello, world!\"](docs/lesson01/rpi-os.md)\n  * Linux\n    * 1.2 [Project structure](docs/lesson01/linux/project-structure.md)\n    * 1.3 [Kernel build system](docs/lesson01/linux/build-system.md) \n    * 1.4 [Startup sequence](docs/lesson01/linux/kernel-startup.md)\n  * 1.5 [Exercises](docs/lesson01/exercises.md)\n* **Lesson 2: Processor initialization**\n  * 2.1 [RPi OS](docs/lesson02/rpi-os.md)\n  * 2.2 [Linux](docs/lesson02/linux.md)\n  * 2.3 [Exercises](docs/lesson02/exercises.md)\n* **Lesson 3: Interrupt handling**\n  * 3.1 [RPi OS](docs/lesson03/rpi-os.md)\n  * Linux\n    * 3.2 [Low level exception handling](docs/lesson03/linux/low_level-exception_handling.md) \n    * 3.3 [Interrupt controllers](docs/lesson03/linux/interrupt_controllers.md)\n    * 3.4 [Timers](docs/lesson03/linux/timer.md)\n  * 3.5 [Exercises](docs/lesson03/exercises.md)\n* **Lesson 4: Process scheduler**\n  * 4.1 [RPi OS](docs/lesson04/rpi-os.md) \n  * Linux\n    * 4.2 [Scheduler basic structures](docs/lesson04/linux/basic_structures.md)\n    * 4.3 [Forking a task](docs/lesson04/linux/fork.md)\n    * 4.4 [Scheduler](docs/lesson04/linux/scheduler.md)\n  * 4.5 [Exercises](docs/lesson04/exercises.md)\n* **Lesson 5: User processes and system calls** \n  * 5.1 [RPi OS](docs/lesson05/rpi-os.md) \n  * 5.2 [Linux](docs/lesson05/linux.md)\n  * 5.3 [Exercises](docs/lesson05/exercises.md)\n* **Lesson 6: Virtual memory management**\n  * 6.1 [RPi OS](docs/lesson06/rpi-os.md) \n  * 6.2 Linux (In progress)\n  * 6.3 [Exercises](docs/lesson06/exercises.md)\n* **Lesson 7: Signals and interrupt waiting** (To be done)\n* **Lesson 8: File systems** (To be done)\n* **Lesson 9: Executable files (ELF)** (To be done)\n* **Lesson 10: Drivers** (To be done)\n* **Lesson 11: Networking** (To be done)\n\n"
        },
        {
          "name": "_config.yml",
          "type": "blob",
          "size": 0.025390625,
          "content": "theme: jekyll-theme-hacker"
        },
        {
          "name": "_layouts",
          "type": "tree",
          "content": null
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "exercises",
          "type": "tree",
          "content": null
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "translations",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}