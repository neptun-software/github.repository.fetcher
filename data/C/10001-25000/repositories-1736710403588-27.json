{
  "metadata": {
    "timestamp": 1736710403588,
    "page": 27,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "lvgl/lvgl",
      "stars": 17987,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4404296875,
          "content": "**/*.o\n**/*bin\n**/*.swp\n**/*.swo\n**/*.gcda\n**/*.gcno\ntags\ndocs/api_doc\nscripts/cppcheck_res.txt\nscripts/built_in_font/lv_font_*\ndocs/doxygen_html\ndocs/xml\ndocs/examples.md\ndocs/out_latex\ndocs/_static/built_lv_examples\ndocs/LVGL.pdf\ndocs/env\n/docs/examples.rst\n/docs/API/\nout_html\n__pycache__\n/emscripten_builder\ntest_screenshot_error.h\nbuild/\ntests/build_*/\ntests/report/\ntests/wayland_protocols/\n.DS_Store\n.vscode\n.idea\n*.bak\ntests/test_images/\n.vs/\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 1.1708984375,
          "content": "# See https://pre-commit.com for more information\n# See https://pre-commit.com/hooks.html for more hooks\nrepos:\n-   repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v3.2.0\n    hooks:\n    -   id: trailing-whitespace\n\n-   repo: local\n    hooks:\n    # Run astyle over the staged files with c and h extension found in the directories\n    # listed in the files regex pattern. Ignoring the files in the exclude pattern.\n    -   id: format-source\n        name: Formatting source files\n        entry: astyle --options=scripts/code-format.cfg --ignore-exclude-errors\n        stages: [ commit ]\n        language: system\n        pass_filenames: true\n        verbose: true\n        files: |\n          (?x)^(\n              demos/ |\n              examples/ |\n              src/ |\n              tests/\n          )\n        exclude: |\n          (?x)^(\n              demos/high_res/fonts/ |\n              src/libs/ |\n              src/lv_conf_internal.h |\n              tests/test_images\n           )\n        types_or: [\"c\", \"header\"]\n-   repo: https://github.com/crate-ci/typos\n    rev: v1.16.20\n    hooks:\n    -   id: typos\n        exclude: |\n            (?x)^(\n                src/libs/\n             )\n"
        },
        {
          "name": ".typos.toml",
          "type": "blob",
          "size": 0.6435546875,
          "content": "[files]\nextend-exclude = [\n    \".git/\",\n    \"docs/_static/css/fontawesome.min.css\",\n    \"docs/README_*\",\n    \"src/libs/\",\n    \"docs/CHANGELOG.rst\"\n]\nignore-hidden = false\n\n[default]\nextend-ignore-re = [\n    \"\\\\bser[^a-z]\",\n    \"\\\\bfle[^a-z]\",\n    '\"Lorem ipsum .*\"',\n    'ACI',\n    \"Nam consectetur\",\n    \"U\\\\+[0-9A-F]{4}\",\n    '\\{ \"[a-z]+\", \"[^ -~]+\" \\},',\n    \"`[0-9a-f]{7} <https://\\\\S+>`__\",\n    \"Rename lv_chart_clear_serie\",\n    \"rename LV_ROLLER_MODE_INIFINITE\",\n    \"CARD_INFO_SET\\\\(&img_multilang_avatar_.*\\\\)\",\n    \"ACI\\\\)\",\n]\n\n[default.extend-words]\n# https://developer.apple.com/fonts/TrueType-Reference-Manual/RM06/Chap6loca.html\n\"loca\" = \"loca\"\n"
        },
        {
          "name": "CMakeLists.txt",
          "type": "blob",
          "size": 1.482421875,
          "content": "cmake_minimum_required(VERSION 3.12.4)\n\nset(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ON)\n\nif(NOT ESP_PLATFORM)\n  project(lvgl LANGUAGES C HOMEPAGE_URL https://github.com/lvgl/lvgl)\n  if(NOT (CMAKE_C_COMPILER_ID STREQUAL \"MSVC\"))\n    enable_language(CXX ASM)\n  else()\n    enable_language(CXX)\n  endif()\nendif()\n\nset(LVGL_ROOT_DIR ${CMAKE_CURRENT_LIST_DIR})\n\nif(ESP_PLATFORM)\n  include(${CMAKE_CURRENT_LIST_DIR}/env_support/cmake/esp.cmake)\nelseif(ZEPHYR_BASE)\n  include(${CMAKE_CURRENT_LIST_DIR}/env_support/cmake/zephyr.cmake)\nelseif(MICROPY_DIR)\n  include(${CMAKE_CURRENT_LIST_DIR}/env_support/cmake/micropython.cmake)\nelse()\n  include(${CMAKE_CURRENT_LIST_DIR}/env_support/cmake/custom.cmake)\nendif()\n\n#[[\n    unfortunately CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS does not work for global data. \n    for global data we still need decl specs.\n    Check out the docs to learn more about the limitations of CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS\n    https://cmake.org/cmake/help/latest/prop_tgt/WINDOWS_EXPORT_ALL_SYMBOLS.html#prop_tgt:WINDOWS_EXPORT_ALL_SYMBOLS\n\n    For all compiled sources within the library (i.e. basically all lvgl files) we need to use dllexport.\n    For all compiled sources from outside the library (i.e. files which include lvgl headers) we need to use dllimport.\n    We can do this by using CMakes INTERFACE and PRIVATE keyword.\n  ]]\nif (MSVC)\n  target_compile_definitions(lvgl\n    INTERFACE LV_ATTRIBUTE_EXTERN_DATA=__declspec\\(dllimport\\)\n    PRIVATE LV_ATTRIBUTE_EXTERN_DATA=__declspec\\(dllexport\\)\n  )\nendif()"
        },
        {
          "name": "CMakePresets.json",
          "type": "blob",
          "size": 2.751953125,
          "content": "{\n  \"version\": 3,\n  \"configurePresets\": [\n    {\n      \"name\": \"_base\",\n      \"hidden\": true,\n      \"cacheVariables\": {\n        \"LV_CONF_SKIP\": true\n      }\n    },\n    {\n      \"name\": \"windows-base\",\n      \"inherits\": \"_base\",\n      \"generator\": \"Visual Studio 17 2022\",\n      \"binaryDir\": \"${sourceDir}/build/${presetName}\",\n      \"installDir\": \"${sourceDir}/build/install/${presetName}\",\n      \"cacheVariables\": {\n        \"CMAKE_C_COMPILER\": \"cl.exe\",\n        \"CMAKE_CXX_COMPILER\": \"cl.exe\",\n        \"BUILD_SHARED_LIBS\": \"ON\"\n      },\n      \"condition\": {\n        \"type\": \"equals\",\n        \"lhs\": \"${hostSystemName}\",\n        \"rhs\": \"Windows\"\n      },\n      \"architecture\": {\n        \"value\": \"x64\",\n        \"strategy\": \"external\"\n      }\n    },\n    {\n      \"name\": \"linux-base\",\n      \"inherits\": \"_base\",\n      \"displayName\": \"Linux\",\n      \"description\": \"Setup WSL or native linux\",\n      \"generator\": \"Ninja Multi-Config\",\n      \"binaryDir\": \"${sourceDir}/build/${presetName}\",\n      \"installDir\": \"${sourceDir}/build/${presetName}\",\n      \"condition\": {\n        \"type\": \"equals\",\n        \"lhs\": \"${hostSystemName}\",\n        \"rhs\": \"Linux\"\n      },\n      \"vendor\": {\n        \"microsoft.com/VisualStudioRemoteSettings/CMake/1.0\": {\n          \"sourceDir\": \"$env{HOME}/.vs/$ms{projectDirName}\"\n        }\n      },\n      \"cacheVariables\": {\n        \"BUILD_SHARED_LIBS\": \"ON\"\n      }\n    }\n  ],\n  \"buildPresets\": [\n    {\n      \"name\": \"_base\",\n      \"hidden\": true,\n      \"jobs\": 12\n    },\n    {\n      \"name\": \"windows-base_dbg\",\n      \"inherits\": \"_base\",\n      \"displayName\": \"Debug\",\n      \"configurePreset\": \"windows-base\",\n      \"configuration\": \"Debug\"\n    },\n    {\n      \"name\": \"windows-base_rel\",\n      \"inherits\": \"_base\",\n      \"displayName\": \"Release\",\n      \"configurePreset\": \"windows-base\",\n      \"configuration\": \"Release\"\n    },\n    {\n      \"name\": \"linux-base_dbg\",\n      \"inherits\": \"_base\",\n      \"displayName\": \"Debug\",\n      \"configurePreset\": \"linux-base\",\n      \"configuration\": \"Debug\"\n    },\n    {\n      \"name\": \"linux-base_rel\",\n      \"inherits\": \"_base\",\n      \"displayName\": \"Release\",\n      \"configurePreset\": \"linux-base\",\n      \"configuration\": \"Release\"\n    }\n  ],\n  \"testPresets\": [\n    {\n      \"name\": \"windows-base_dbg\",\n      \"displayName\": \"Debug\",\n      \"configurePreset\": \"windows-base\",\n      \"configuration\": \"Debug\"\n    },\n    {\n      \"name\": \"windows-base_rel\",\n      \"displayName\": \"Release\",\n      \"configurePreset\": \"windows-base\",\n      \"configuration\": \"Release\"\n    },\n    {\n      \"name\": \"linux-base_dbg\",\n      \"displayName\": \"Debug\",\n      \"configurePreset\": \"linux-base\",\n      \"configuration\": \"Debug\"\n    },\n    {\n      \"name\": \"linux-base_rel\",\n      \"displayName\": \"Release\",\n      \"configurePreset\": \"linux-base\",\n      \"configuration\": \"Release\"\n    }\n  ]\n}\n"
        },
        {
          "name": "Kconfig",
          "type": "blob",
          "size": 56.669921875,
          "content": "# Kconfig file for LVGL v9.3.0-dev\n\nmenu \"LVGL configuration\"\n\n\t# Define CONFIG_LV_CONF_SKIP so we can use LVGL\n\t# without lv_conf.h file, the lv_conf_internal.h and\n\t# lv_conf_kconfig.h files are used instead.\n\tconfig LV_CONF_SKIP\n\t\tbool \"Check this to not use custom lv_conf.h\"\n\t\tdefault y\n\n\tconfig LV_CONF_MINIMAL\n\t\tbool \"LVGL minimal configuration\"\n\n\tmenu \"Color Settings\"\n\t\tchoice LV_COLOR_DEPTH\n\t\t\tprompt \"Color depth\"\n\t\t\tdefault LV_COLOR_DEPTH_16\n\t\t\thelp\n\t\t\t\tColor depth to be used.\n\n\t\t\tconfig LV_COLOR_DEPTH_32\n\t\t\t\tbool \"32: XRGB8888\"\n\t\t\tconfig LV_COLOR_DEPTH_24\n\t\t\t\tbool \"24: RGB888\"\n\t\t\tconfig LV_COLOR_DEPTH_16\n\t\t\t\tbool \"16: RGB565\"\n\t\t\tconfig LV_COLOR_DEPTH_8\n\t\t\t\tbool \"8: RGB232\"\n\t\t\tconfig LV_COLOR_DEPTH_1\n\t\t\t\tbool \"1: 1 byte per pixel\"\n\t\tendchoice\n\n\t\tconfig LV_COLOR_DEPTH\n\t\t\tint\n\t\t\tdefault 1 if LV_COLOR_DEPTH_1\n\t\t\tdefault 8 if LV_COLOR_DEPTH_8\n\t\t\tdefault 16 if LV_COLOR_DEPTH_16\n\t\t\tdefault 24 if LV_COLOR_DEPTH_24\n\t\t\tdefault 32 if LV_COLOR_DEPTH_32\n\tendmenu\n\n\tmenu \"Memory Settings\"\n\t\tchoice\n\t\t\tprompt \"Malloc functions source\"\n\t\t\tdefault LV_USE_BUILTIN_MALLOC\n\n\t\tconfig LV_USE_BUILTIN_MALLOC\n\t\t\tbool \"LVGL's built in implementation\"\n\n\t\tconfig LV_USE_CLIB_MALLOC\n\t\t\tbool \"Standard C functions malloc/realloc/free\"\n\n\t\tconfig LV_USE_MICROPYTHON_MALLOC\n\t\t\tbool \"MicroPython functions malloc/realloc/free\"\n\n\t\tconfig LV_USE_RTTHREAD_MALLOC\n\t\t\tbool \"RTThread functions malloc/realloc/free\"\n\n\t\tconfig LV_USE_CUSTOM_MALLOC\n\t\t\tbool \"Implement the functions externally\"\n\n\t\tendchoice # \"Malloc functions\"\n\n\t\tchoice\n\t\t\tprompt \"String functions source\"\n\t\t\tdefault LV_USE_BUILTIN_STRING\n\n\t\tconfig LV_USE_BUILTIN_STRING\n\t\t\tbool \"LVGL's built in implementation\"\n\n\t\tconfig LV_USE_CLIB_STRING\n\t\t\tbool \"Standard C functions memcpy/memset/strlen/strcpy\"\n\n\t\tconfig LV_USE_CUSTOM_STRING\n\t\t\tbool \"Implement the functions externally\"\n\n\t\tendchoice # \"String functions\"\n\n\t\tchoice\n\t\t\tprompt \"Sprintf functions source\"\n\t\t\tdefault LV_USE_BUILTIN_SPRINTF\n\n\t\tconfig LV_USE_BUILTIN_SPRINTF\n\t\t\tbool \"LVGL's built in implementation\"\n\n\t\tconfig LV_USE_CLIB_SPRINTF\n\t\t\tbool \"Standard C functions vsnprintf\"\n\n\t\tconfig LV_USE_CUSTOM_SPRINTF\n\t\t\tbool \"Implement the functions externally\"\n\n\t\tendchoice # \"Sprintf functions\"\n\n\t\tconfig LV_MEM_SIZE_KILOBYTES\n\t\t\tint \"Size of the memory used by `lv_malloc()` in kilobytes (>= 2kB)\"\n\t\t\tdefault 64\n\t\t\tdepends on LV_USE_BUILTIN_MALLOC\n\n\t\tconfig LV_MEM_POOL_EXPAND_SIZE_KILOBYTES\n\t\t\tint \"Size of the memory expand for `lv_malloc()` in kilobytes\"\n\t\t\tdefault 0\n\t\t\tdepends on LV_USE_BUILTIN_MALLOC\n\n\t\tconfig LV_MEM_ADR\n\t\t\thex \"Address for the memory pool instead of allocating it as a normal array\"\n\t\t\tdefault 0x0\n\t\t\tdepends on LV_USE_BUILTIN_MALLOC\n\n\tendmenu\n\n\tmenu \"HAL Settings\"\n\t\tconfig LV_DEF_REFR_PERIOD\n\t\t\tint \"Default refresh period (ms)\"\n\t\t\tdefault 33\n\t\t\thelp\n\t\t\t\tDefault display refresh, input device read and animation step period.\n\n\t\tconfig LV_DPI_DEF\n\t\t\tint \"Default Dots Per Inch (in px/inch)\"\n\t\t\tdefault 130\n\t\t\thelp\n\t\t\t\tUsed to initialize default sizes such as widgets sized, style paddings.\n\t\t\t\t(Not so important, you can adjust it to modify default sizes and spaces)\n\tendmenu\n\n\tmenu \"Operating System (OS)\"\n\t\tchoice LV_USE_OS\n\t\t\tprompt \"Default operating system to use\"\n\t\t\tdefault LV_OS_NONE\n\n\t\t\tconfig LV_OS_NONE\n\t\t\t\tbool \"0: NONE\"\n\t\t\tconfig LV_OS_PTHREAD\n\t\t\t\tbool \"1: PTHREAD\"\n\t\t\tconfig LV_OS_FREERTOS\n\t\t\t\tbool \"2: FREERTOS\"\n\t\t\tconfig LV_OS_CMSIS_RTOS2\n\t\t\t\tbool \"3: CMSIS_RTOS2\"\n\t\t\tconfig LV_OS_RTTHREAD\n\t\t\t\tbool \"4: RTTHREAD\"\n\t\t\tconfig LV_OS_WINDOWS\n\t\t\t\tbool \"5: WINDOWS\"\n\t\t\tconfig LV_OS_MQX\n\t\t\t\tbool \"6: MQX\"\n\t\t\tconfig LV_OS_CUSTOM\n\t\t\t\tbool \"255: CUSTOM\"\n\t\tendchoice\n\n\t\tconfig LV_USE_OS\n\t\t\tint\n\t\t\tdefault 0 if LV_OS_NONE\n\t\t\tdefault 1 if LV_OS_PTHREAD\n\t\t\tdefault 2 if LV_OS_FREERTOS\n\t\t\tdefault 3 if LV_OS_CMSIS_RTOS2\n\t\t\tdefault 4 if LV_OS_RTTHREAD\n\t\t\tdefault 5 if LV_OS_WINDOWS\n\t\t\tdefault 6 if LV_OS_MQX\n\t\t\tdefault 255 if LV_OS_CUSTOM\n\n\t\tconfig LV_OS_CUSTOM_INCLUDE\n\t\t\tstring \"Custom OS include header\"\n\t\t\tdefault \"stdint.h\"\n\t\t\tdepends on LV_OS_CUSTOM\n\n\t\tconfig LV_USE_FREERTOS_TASK_NOTIFY\n\t\t\tbool \"Use RTOS task with a direct notification for synchronization\"\n\t\t\tdefault y\n\t\t\tdepends on LV_OS_FREERTOS\n\t\thelp\n\t\t\tUnblocking an RTOS task with a direct notification is 45% faster and uses less RAM\n\t\t\tthan unblocking a task using an intermediary object such as a binary semaphore.\n\t\t\tRTOS task notifications can only be used when there is only one task that can be the recipient of the event.\n\tendmenu\n\n\tmenu \"Rendering Configuration\"\n\t\tconfig LV_DRAW_BUF_STRIDE_ALIGN\n\t\t\tint \"Buffer stride alignment\"\n\t\t\tdefault 1\n\t\thelp\n\t\t\tAlign the stride of all layers and images to this bytes.\n\n\t\tconfig LV_DRAW_BUF_ALIGN\n\t\t\tint \"Buffer address alignment\"\n\t\t\tdefault 4\n\t\thelp\n\t\t\tAlign the start address of draw_buf addresses to this bytes.\n\n\t\tconfig LV_DRAW_TRANSFORM_USE_MATRIX\n\t\t\tbool \"Using matrix for transformations\"\n\t\t\tdefault n\n\t\t\tdepends on LV_USE_MATRIX\n\t\t\thelp\n\t\t\t\tRequirements: The rendering engine needs to support 3x3 matrix transformations.\n\n\t\tconfig LV_DRAW_LAYER_SIMPLE_BUF_SIZE\n\t\t\tint \"Optimal size to buffer the widget with opacity\"\n\t\t\tdefault 24576\n\t\t\tdepends on LV_USE_DRAW_SW\n\t\t\thelp\n\t\t\t\tIf a widget has `style_opa < 255` (not `bg_opa`, `text_opa` etc) or not NORMAL blend mode\n\t\t\t\tit is buffered into a \"simple\" layer before rendering. The widget can be buffered in smaller chunks.\n\t\t\t\t\"Transformed layers\" (if `transform_angle/zoom` are set) use larger buffers and can't be drawn in chunks.\n\n\t\tconfig LV_DRAW_LAYER_MAX_MEMORY\n\t\t\tint \"The maximum amount of memory that can be used for layers\"\n\t\t\tdefault 0\n\t\t\thelp\n\t\t\t\tLimit the max allocated memory for simple and transformed layers.\n\t\t\t\tIt should be at least `LV_DRAW_LAYER_SIMPLE_BUF_SIZE` sized but if transformed layers are also used\n\t\t\t\tit should be enough to store the largest widget too (width x height x 4 area).\n\t\t\t\tSet it to 0 to have no limit.\n\n\t\tconfig LV_DRAW_THREAD_STACK_SIZE\n\t\t\tint \"Stack size of draw thread in bytes\"\n\t\t\tdefault 8192\n\t\t\tdepends on LV_USE_OS > 0\n\t\t\thelp\n\t\t\t\tIf FreeType or ThorVG is enabled, it is recommended to set it to 32KB or more.\n\n\t\tconfig LV_USE_DRAW_SW\n\t\t\tbool \"Enable software rendering\"\n\t\t\tdefault y\n\t\thelp\n\t\t\tRequired to draw anything on the screen.\n\n\t\tconfig LV_DRAW_SW_SUPPORT_RGB565\n\t\t\tbool \"Enable support for RGB565 color format\"\n\t\t\tdefault y\n\t\t\tdepends on LV_USE_DRAW_SW\n\n\t\tconfig LV_DRAW_SW_SUPPORT_RGB565A8\n\t\t\tbool \"Enable support for RGB565A8 color format\"\n\t\t\tdefault y\n\t\t\tdepends on LV_USE_DRAW_SW\n\n\t\tconfig LV_DRAW_SW_SUPPORT_RGB888\n\t\t\tbool \"Enable support for RGB888 color format\"\n\t\t\tdefault y\n\t\t\tdepends on LV_USE_DRAW_SW\n\n\t\tconfig LV_DRAW_SW_SUPPORT_XRGB8888\n\t\t\tbool \"Enable support for XRGB8888 color format\"\n\t\t\tdefault y\n\t\t\tdepends on LV_USE_DRAW_SW\n\n\t\tconfig LV_DRAW_SW_SUPPORT_ARGB8888\n\t\t\tbool \"Enable support for ARGB8888 color format\"\n\t\t\tdefault y\n\t\t\tdepends on LV_USE_DRAW_SW\n\n\t\tconfig LV_DRAW_SW_SUPPORT_L8\n\t\t\tbool \"Enable support for L8 color format\"\n\t\t\tdefault y\n\t\t\tdepends on LV_USE_DRAW_SW\n\n\t\tconfig LV_DRAW_SW_SUPPORT_AL88\n\t\t\tbool \"Enable support for AL88 color format\"\n\t\t\tdefault y\n\t\t\tdepends on LV_USE_DRAW_SW\n\n\t\tconfig LV_DRAW_SW_SUPPORT_A8\n\t\t\tbool \"Enable support for A8 color format\"\n\t\t\tdefault y\n\t\t\tdepends on LV_USE_DRAW_SW\n\n\t\tconfig LV_DRAW_SW_SUPPORT_I1\n\t\t\tbool \"Enable support for I1 color format\"\n\t\t\tdefault y\n\t\t\tdepends on LV_USE_DRAW_SW\n\n\t\tconfig LV_DRAW_SW_DRAW_UNIT_CNT\n\t\t\tint \"Number of draw units\"\n\t\t\tdefault 1\n\t\t\tdepends on LV_USE_DRAW_SW\n\t\t\thelp\n\t\t\t\t> 1 requires an operating system enabled in `LV_USE_OS`\n\t\t\t\t> 1 means multiply threads will render the screen in parallel\n\n\t\tconfig LV_USE_DRAW_ARM2D_SYNC\n\t\t\tbool \"Enable Arm's 2D image processing library (Arm-2D) for all Cortex-M processors\"\n\t\t\tdefault n\n\t\t\tdepends on LV_USE_DRAW_SW\n\t\t\thelp\n\t\t\t\tMust deploy arm-2d library to your project and add include PATH for \"arm_2d.h\".\n\n\t\tconfig LV_USE_NATIVE_HELIUM_ASM\n\t\t\tbool \"Enable native helium assembly\"\n\t\t\tdefault n\n\t\t\tdepends on LV_USE_DRAW_SW\n\t\t\thelp\n\t\t\t\tDisabling this allows arm2d to work on its own (for testing only)\n\n\t\tconfig LV_DRAW_SW_COMPLEX\n\t\t\tbool \"Enable complex draw engine\"\n\t\t\tdefault y\n\t\t\tdepends on LV_USE_DRAW_SW\n\t\t\thelp\n\t\t\t\t0: use a simple renderer capable of drawing only simple rectangles with gradient, images, texts, and straight lines only,\n\t\t\t\t1: use a complex renderer capable of drawing rounded corners, shadow, skew lines, and arcs too.\n\n\t\tconfig LV_USE_DRAW_SW_COMPLEX_GRADIENTS\n\t\t\tbool \"Enable drawing complex gradients in software\"\n\t\t\tdefault n\n\t\t\tdepends on LV_USE_DRAW_SW\n\t\t\thelp\n\t\t\t\t0: do not enable complex gradients\n\t\t\t\t1: enable complex gradients (linear at an angle, radial or conical)\n\n\t\tconfig LV_DRAW_SW_SHADOW_CACHE_SIZE\n\t\t\tint \"Allow buffering some shadow calculation\"\n\t\t\tdepends on LV_DRAW_SW_COMPLEX\n\t\t\tdefault 0\n\t\t\thelp\n\t\t\t\tLV_DRAW_SW_SHADOW_CACHE_SIZE is the max shadow size to buffer, where\n\t\t\t\tshadow size is `shadow_width + radius`.\n\t\t\t\tCaching has LV_DRAW_SW_SHADOW_CACHE_SIZE^2 RAM cost.\n\n\t\tconfig LV_DRAW_SW_CIRCLE_CACHE_SIZE\n\t\t\tint \"Set number of maximally cached circle data\"\n\t\t\tdepends on LV_DRAW_SW_COMPLEX\n\t\t\tdefault 4\n\t\t\thelp\n\t\t\t\tThe circumference of 1/4 circle are saved for anti-aliasing\n\t\t\t\tradius * 4 bytes are used per circle (the most often used\n\t\t\t\tradiuses are saved).\n\t\t\t\tSet to 0 to disable caching.\n\n\t\tchoice LV_USE_DRAW_SW_ASM\n\t\t\tprompt \"Asm mode in sw draw\"\n\t\t\tdefault LV_DRAW_SW_ASM_NONE\n\t\t\tdepends on LV_USE_DRAW_SW\n\t\t\thelp\n\t\t\t\tASM mode to be used\n\n\t\t\tconfig LV_DRAW_SW_ASM_NONE\n\t\t\t\tbool \"0: NONE\"\n\t\t\tconfig LV_DRAW_SW_ASM_NEON\n\t\t\t\tbool \"1: NEON\"\n\t\t\tconfig LV_DRAW_SW_ASM_HELIUM\n\t\t\t\tbool \"2: HELIUM\"\n\t\t\tconfig LV_DRAW_SW_ASM_CUSTOM\n\t\t\t\tbool \"255: CUSTOM\"\n\t\tendchoice\n\n\t\tconfig LV_USE_DRAW_SW_ASM\n\t\t\tint\n\t\t\tdefault 0 if LV_DRAW_SW_ASM_NONE\n\t\t\tdefault 1 if LV_DRAW_SW_ASM_NEON\n\t\t\tdefault 2 if LV_DRAW_SW_ASM_HELIUM\n\t\t\tdefault 255 if LV_DRAW_SW_ASM_CUSTOM\n\n\t\tconfig LV_DRAW_SW_ASM_CUSTOM_INCLUDE\n\t\t\tstring \"Set the custom asm include file\"\n\t\t\tdefault \"\"\n\t\t\tdepends on LV_DRAW_SW_ASM_CUSTOM\n\n\t\tconfig LV_USE_DRAW_VGLITE\n\t\t\tbool \"Use NXP's VG-Lite GPU on iMX RTxxx platforms\"\n\t\t\tdefault n\n\n\t\tconfig LV_USE_VGLITE_BLIT_SPLIT\n\t\t\tbool \"Enable blit quality degradation workaround recommended for screen's dimension > 352 pixels\"\n\t\t\tdepends on LV_USE_DRAW_VGLITE\n\t\t\tdefault n\n\n\t\tconfig LV_USE_VGLITE_DRAW_THREAD\n\t\t\tbool \"Use additional draw thread for VG-Lite processing\"\n\t\t\tdepends on LV_USE_DRAW_VGLITE && LV_USE_OS > 0\n\t\t\tdefault y\n\n\t\tconfig LV_USE_VGLITE_DRAW_ASYNC\n\t\t\tbool \"Enable VGLite draw async\"\n\t\t\tdepends on LV_USE_VGLITE_DRAW_THREAD\n\t\t\tdefault y\n\t\t\thelp\n\t\t\t\tQueue multiple tasks and flash them once to the GPU. The task ready state will be send asynchronous to dispatcher.\n\n\t\tconfig LV_USE_VGLITE_ASSERT\n\t\t\tbool \"Enable VGLite asserts\"\n\t\t\tdepends on LV_USE_DRAW_VGLITE\n\t\t\tdefault n\n\n\t\tconfig LV_USE_PXP\n\t\tbool \"Use NXP's PXP on iMX RTxxx platforms\"\n\t\tdefault n\n\n\t\tconfig LV_USE_DRAW_PXP\n\t\tbool \"Use PXP for drawing\"\n\t\t\tdepends on LV_USE_PXP\n\t\t\tdefault y\n\n\t\tconfig LV_USE_ROTATE_PXP\n\t\t\tbool \"Use PXP to rotate display\"\n\t\t\tdepends on LV_USE_PXP\n\t\t\tdefault n\n\n\t\tconfig LV_USE_PXP_DRAW_THREAD\n\t\t\tbool \"Use additional draw thread for PXP processing\"\n\t\t\tdepends on LV_USE_DRAW_PXP && LV_USE_OS > 0\n\t\t\tdefault y\n\n\t\tconfig LV_USE_PXP_ASSERT\n\t\t\tbool \"Enable PXP asserts\"\n\t\t\tdepends on LV_USE_DRAW_PXP\n\t\t\tdefault n\n\n\t\tconfig LV_USE_DRAW_DAVE2D\n\t\t\tbool \"Use Renesas Dave2D on RA platforms\"\n\t\t\tdefault n\n\n\t\tconfig LV_USE_DRAW_SDL\n\t\t\tbool \"Draw using cached SDL textures\"\n\t\t\tdefault n\n\t\t\thelp\n\t\t\t\tUses SDL renderer API\n\n\t\tconfig LV_USE_DRAW_VG_LITE\n\t\t\tbool \"Use VG-Lite GPU\"\n\t\t\tdefault n\n\t\t\tselect LV_USE_MATRIX\n\n\t\tconfig LV_VG_LITE_USE_GPU_INIT\n\t\t\tbool \"Enable VG-Lite custom external 'gpu_init()' function\"\n\t\t\tdefault n\n\t\t\tdepends on LV_USE_DRAW_VG_LITE\n\n\t\tconfig LV_VG_LITE_USE_ASSERT\n\t\t\tbool \"Enable VG-Lite assert\"\n\t\t\tdefault n\n\t\t\tdepends on LV_USE_DRAW_VG_LITE\n\n\t\tconfig LV_VG_LITE_FLUSH_MAX_COUNT\n\t\t\tint \"VG-Lite flush commit trigger threshold\"\n\t\t\tdefault 8\n\t\t\tdepends on LV_USE_DRAW_VG_LITE\n\t\t\thelp\n\t\t\t\tGPU will try to batch these many draw tasks\n\n\t\tconfig LV_VG_LITE_USE_BOX_SHADOW\n\t\t\tbool \"Enable border to simulate shadow\"\n\t\t\tdefault n\n\t\t\tdepends on LV_USE_DRAW_VG_LITE\n\t\t\thelp\n\t\t\t\twhich usually improves performance,\n\t\t\t\tbut does not guarantee the same rendering quality as the software.\n\n\t\tconfig LV_VG_LITE_GRAD_CACHE_CNT\n\t\t\tint \"VG-Lite gradient maximum cache number.\"\n\t\t\tdefault 32\n\t\t\tdepends on LV_USE_DRAW_VG_LITE\n\t\t\thelp\n\t\t\t\tThe memory usage of a single gradient:\n\t\t\t\t\tlinear: 4K bytes.\n\t\t\t\t\tradial: radius * 4K bytes.\n\n\t\tconfig LV_VG_LITE_STROKE_CACHE_CNT\n\t\t\tint \"VG-Lite stroke maximum cache number.\"\n\t\t\tdefault 32\n\t\t\tdepends on LV_USE_DRAW_VG_LITE\n\n\t\tconfig LV_USE_VECTOR_GRAPHIC\n\t\t\tbool \"Use Vector Graphic APIs\"\n\t\t\tdefault n\n\t\t\tselect LV_USE_MATRIX\n\t\t\thelp\n\t\t\t\tEnable drawing support vector graphic APIs.\n\n\t\tconfig LV_USE_DRAW_DMA2D\n\t\t\tbool \"Use DMA2D on the supporting STM32 platforms\"\n\t\t\tdefault n\n\t\t\thelp\n\t\t\t\tAccelerate blends, fills, image decoding, etc. with STM32 DMA2D.\n\n\t\tconfig LV_DRAW_DMA2D_HAL_INCLUDE\n\t\t\tstring \"the header file for LVGL to include for DMA2D\"\n\t\t\tdefault \"stm32h7xx_hal.h\"\n\t\t\tdepends on LV_USE_DRAW_DMA2D\n\n\t\tconfig LV_USE_DRAW_DMA2D_INTERRUPT\n\t\t\tbool \"use the DMA2D transfer complete interrupt\"\n\t\t\tdefault n\n\t\t\tdepends on LV_USE_DRAW_DMA2D\n\t\t\thelp\n\t\t\t\tif enabled, the user is required to call\n\t\t\t\t`lv_draw_dma2d_transfer_complete_interrupt_handler`\n\t\t\t\tupon receiving the DMA2D global interrupt\n\n\t\tconfig LV_USE_DRAW_OPENGLES\n\t\t\tbool \"Draw using cached OpenGLES textures\"\n\t\t\tdefault n\n\t\t\tdepends on LV_USE_OPENGLES\n\tendmenu\n\n\tmenu \"Feature Configuration\"\n\t\tmenu \"Logging\"\n\t\t\tconfig LV_USE_LOG\n\t\t\t\tbool \"Enable the log module\"\n\n\t\t\tchoice\n\t\t\t\tbool \"Default log verbosity\" if LV_USE_LOG\n\t\t\t\tdefault LV_LOG_LEVEL_WARN\n\t\t\t\thelp\n\t\t\t\t\tSpecify how important log should be added.\n\n\t\t\t\tconfig LV_LOG_LEVEL_TRACE\n\t\t\t\t\tbool \"A lot of logs to give detailed information\"\n\t\t\t\tconfig LV_LOG_LEVEL_INFO\n\t\t\t\t\tbool \"Log important events\"\n\t\t\t\tconfig LV_LOG_LEVEL_WARN\n\t\t\t\t\tbool \"Log if something unwanted happened but didn't cause a problem\"\n\t\t\t\tconfig LV_LOG_LEVEL_ERROR\n\t\t\t\t\tbool \"Only critical issues, when the system may fail\"\n\t\t\t\tconfig LV_LOG_LEVEL_USER\n\t\t\t\t\tbool \"Only logs added by the user\"\n\t\t\t\tconfig LV_LOG_LEVEL_NONE\n\t\t\t\t\tbool \"Do not log anything\"\n\t\t\tendchoice\n\n\t\t\tconfig LV_LOG_LEVEL\n\t\t\t\tint\n\t\t\t\tdefault 0 if LV_LOG_LEVEL_TRACE\n\t\t\t\tdefault 1 if LV_LOG_LEVEL_INFO\n\t\t\t\tdefault 2 if LV_LOG_LEVEL_WARN\n\t\t\t\tdefault 3 if LV_LOG_LEVEL_ERROR\n\t\t\t\tdefault 4 if LV_LOG_LEVEL_USER\n\t\t\t\tdefault 5 if LV_LOG_LEVEL_NONE\n\n\t\t\tconfig LV_LOG_PRINTF\n\t\t\t\tbool \"Print the log with 'printf'\" if LV_USE_LOG\n\t\t\t\thelp\n\t\t\t\t\tUse printf for log output.\n\t\t\t\t\tIf not set the user needs to register a callback with `lv_log_register_print_cb`.\n\n\t\t\tconfig LV_LOG_USE_TIMESTAMP\n\t\t\t\tbool \"Enable print timestamp\"\n\t\t\t\tdefault y\n\t\t\t\tdepends on LV_USE_LOG\n\n\t\t\tconfig LV_LOG_USE_FILE_LINE\n\t\t\t\tbool \"Enable print file and line number\"\n\t\t\t\tdefault y\n\t\t\t\tdepends on LV_USE_LOG\n\n\t\t\tconfig LV_LOG_TRACE_MEM\n\t\t\t\tbool \"Enable/Disable LV_LOG_TRACE in mem module\"\n\t\t\t\tdefault y\n\t\t\t\tdepends on LV_USE_LOG\n\n\t\t\tconfig LV_LOG_TRACE_TIMER\n\t\t\t\tbool \"Enable/Disable LV_LOG_TRACE in timer module\"\n\t\t\t\tdefault y\n\t\t\t\tdepends on LV_USE_LOG\n\n\t\t\tconfig LV_LOG_TRACE_INDEV\n\t\t\t\tbool \"Enable/Disable LV_LOG_TRACE in indev module\"\n\t\t\t\tdefault y\n\t\t\t\tdepends on LV_USE_LOG\n\n\t\t\tconfig LV_LOG_TRACE_DISP_REFR\n\t\t\t\tbool \"Enable/Disable LV_LOG_TRACE in disp refr module\"\n\t\t\t\tdefault y\n\t\t\t\tdepends on LV_USE_LOG\n\n\t\t\tconfig LV_LOG_TRACE_EVENT\n\t\t\t\tbool \"Enable/Disable LV_LOG_TRACE in event module\"\n\t\t\t\tdefault y\n\t\t\t\tdepends on LV_USE_LOG\n\n\t\t\tconfig LV_LOG_TRACE_OBJ_CREATE\n\t\t\t\tbool \"Enable/Disable LV_LOG_TRACE in obj create module\"\n\t\t\t\tdefault y\n\t\t\t\tdepends on LV_USE_LOG\n\n\t\t\tconfig LV_LOG_TRACE_LAYOUT\n\t\t\t\tbool \"Enable/Disable LV_LOG_TRACE in layout module\"\n\t\t\t\tdefault y\n\t\t\t\tdepends on LV_USE_LOG\n\n\t\t\tconfig LV_LOG_TRACE_ANIM\n\t\t\t\tbool \"Enable/Disable LV_LOG_TRACE in anim module\"\n\t\t\t\tdefault y\n\t\t\t\tdepends on LV_USE_LOG\n\n\t\t\tconfig LV_LOG_TRACE_CACHE\n\t\t\t\tbool \"Enable/Disable LV_LOG_TRACE in cache module\"\n\t\t\t\tdefault y\n\t\t\t\tdepends on LV_USE_LOG\n\t\tendmenu\n\n\t\tmenu \"Asserts\"\n\t\t\tconfig LV_USE_ASSERT_NULL\n\t\t\t\tbool \"Check if the parameter is NULL. (Very fast, recommended)\"\n\t\t\t\tdefault y if !LV_CONF_MINIMAL\n\n\t\t\tconfig LV_USE_ASSERT_MALLOC\n\t\t\t\tbool \"Checks if the memory is successfully allocated or no. (Very fast, recommended)\"\n\t\t\t\tdefault y if !LV_CONF_MINIMAL\n\n\t\t\tconfig LV_USE_ASSERT_STYLE\n\t\t\t\tbool \"Check if the styles are properly initialized. (Very fast, recommended)\"\n\n\t\t\tconfig LV_USE_ASSERT_MEM_INTEGRITY\n\t\t\t\tbool \"Check the integrity of `lv_mem` after critical operations. (Slow)\"\n\n\t\t\tconfig LV_USE_ASSERT_OBJ\n\t\t\t\tbool \"Check NULL, the object's type and existence (e.g. not deleted). (Slow)\"\n\n\t\t\tconfig LV_ASSERT_HANDLER_INCLUDE\n\t\t\t\tstring \"Header to include for the custom assert function\"\n\t\t\t\tdefault \"assert.h\"\n\t\t\t\thelp\n\t\t\t\t\tAdd a custom handler when assert happens e.g. to restart the MCU\n\t\tendmenu\n\n\t\tmenu \"Debug\"\n\t\t\tconfig LV_USE_REFR_DEBUG\n\t\t\t\tbool \"Draw random colored rectangles over the redrawn areas\"\n\n\t\t\tconfig LV_USE_LAYER_DEBUG\n\t\t\t\tbool \"Draw a red overlay for ARGB layers and a green overlay for RGB layers\"\n\n\t\t\tconfig LV_USE_PARALLEL_DRAW_DEBUG\n\t\t\t\tbool \"Draw overlays with different colors for each draw_unit's tasks\"\n\t\t\t\thelp\n\t\t\t\t\tAlso add the index number of the draw unit on white background.\n\t\t\t\t\tFor layers add the index number of the draw unit on black background.\n\t\tendmenu\n\n\t\tmenu \"Others\"\n\t\t\tconfig LV_ENABLE_GLOBAL_CUSTOM\n\t\t\t\tbool \"Enable 'lv_global' customization\"\n\n\t\t\tconfig LV_GLOBAL_CUSTOM_INCLUDE\n\t\t\t\tstring \"Header to include for the custom 'lv_global' function\"\n\t\t\t\tdepends on LV_ENABLE_GLOBAL_CUSTOM\n\t\t\t\tdefault \"lv_global.h\"\n\n\t\t\tconfig LV_CACHE_DEF_SIZE\n\t\t\t\tint \"Default image cache size. 0 to disable caching\"\n\t\t\t\tdefault 0\n\t\t\t\tdepends on LV_USE_DRAW_SW\n\t\t\t\thelp\n\t\t\t\t\tIf only the built-in image formats are used there is no real advantage of caching.\n\t\t\t\t\t(I.e. no new image decoder is added).\n\n\t\t\t\t\tWith complex image decoders (e.g. PNG or JPG) caching can\n\t\t\t\t\tsave the continuous open/decode of images.\n\t\t\t\t\tHowever the opened images might consume additional RAM.\n\n\t\t\tconfig LV_IMAGE_HEADER_CACHE_DEF_CNT\n\t\t\t\tint \"Default image header cache count. 0 to disable caching\"\n\t\t\t\tdefault 0\n\t\t\t\tdepends on LV_USE_DRAW_SW\n\t\t\t\thelp\n\t\t\t\t\tIf only the built-in image formats are used there is no real advantage of caching.\n\t\t\t\t\t(I.e. no new image decoder is added).\n\n\t\t\t\t\tWith complex image decoders (e.g. PNG or JPG) caching can\n\t\t\t\t\tsave the continuous getting header information of images.\n\t\t\t\t\tHowever the records of opened images headers might consume additional RAM.\n\n\t\t\tconfig LV_GRADIENT_MAX_STOPS\n\t\t\t\tint \"Number of stops allowed per gradient\"\n\t\t\t\tdefault 2\n\t\t\t\tdepends on LV_USE_DRAW_SW\n\t\t\t\thelp\n\t\t\t\t\tIncrease this to allow more stops.\n\t\t\t\t\tThis adds (sizeof(lv_color_t) + 1) bytes per additional stop\n\n\t\t\tconfig LV_COLOR_MIX_ROUND_OFS\n\t\t\t\tint \"Adjust color mix functions rounding\"\n\t\t\t\tdefault 128 if !LV_COLOR_DEPTH_32\n\t\t\t\tdefault 0 if LV_COLOR_DEPTH_32\n\t\t\t\trange 0 254\n\t\t\t\thelp\n\t\t\t\t\t0: no adjustment, get the integer part of the result (round down)\n\t\t\t\t\t64: round up from x.75\n\t\t\t\t\t128: round up from half\n\t\t\t\t\t192: round up from x.25\n\t\t\t\t\t254: round up\n\n\t\t\tconfig LV_OBJ_STYLE_CACHE\n\t\t\t\tbool \"Use cache to speed up getting object style properties\"\n\t\t\t\tdefault n\n\t\t\t\thelp\n\t\t\t\t\tAdd 2 x 32 bit variables to each lv_obj_t to speed up getting style properties\n\n\t\t\tconfig LV_USE_OBJ_ID\n\t\t\t\tbool \"Add id field to obj\"\n\t\t\t\tdefault n\n\n\t\t\tconfig LV_OBJ_ID_AUTO_ASSIGN\n\t\t\t\tbool \"Automatically assign an ID when obj is created\"\n\t\t\t\tdefault y\n\t\t\t\tdepends on LV_USE_OBJ_ID\n\n\t\t\tconfig LV_USE_OBJ_ID_BUILTIN\n\t\t\t\tbool \"Use builtin method to deal with obj ID\"\n\t\t\t\tdefault n\n\t\t\t\tdepends on LV_USE_OBJ_ID\n\n\t\t\tconfig LV_USE_OBJ_PROPERTY\n\t\t\t\tbool \"Use obj property set/get API\"\n\t\t\t\tdefault n\n\n\t\t\tconfig LV_USE_OBJ_PROPERTY_NAME\n\t\t\t\tbool \"Use name to access property\"\n\t\t\t\tdefault n\n\t\t\t\tdepends on LV_USE_OBJ_PROPERTY\n\t\t\t\thelp\n\t\t\t\t\tAdd a name table to every widget class, so the property can be accessed by name.\n\t\t\t\t\tNote, the const table will increase flash usage.\n\n\t\t\tconfig LV_USE_VG_LITE_THORVG\n\t\t\t\tbool \"VG-Lite Simulator\"\n\t\t\t\tdefault n\n\t\t\t\tdepends on LV_USE_THORVG\n\t\t\t\thelp\n\t\t\t\t\tUse thorvg to simulate VG-Lite hardware behavior, it's useful\n\t\t\t\t\tfor debugging and testing on PC simulator. Enable LV_USE_THORVG,\n\t\t\t\t\tEither internal ThorVG or external ThorVG library is required.\n\n\t\t\tconfig LV_VG_LITE_THORVG_LVGL_BLEND_SUPPORT\n\t\t\t\tbool \"Enable LVGL blend mode support\"\n\t\t\t\tdefault n\n\t\t\t\tdepends on LV_USE_VG_LITE_THORVG\n\n\t\t\tconfig LV_VG_LITE_THORVG_YUV_SUPPORT\n\t\t\t\tbool \"Enable YUV color format support\"\n\t\t\t\tdefault n\n\t\t\t\tdepends on LV_USE_VG_LITE_THORVG\n\n\t\t\tconfig LV_VG_LITE_THORVG_LINEAR_GRADIENT_EXT_SUPPORT\n\t\t\t\tbool \"Enable linear gradient extension support\"\n\t\t\t\tdefault n\n\t\t\t\tdepends on LV_USE_VG_LITE_THORVG\n\n\t\t\tconfig LV_VG_LITE_THORVG_16PIXELS_ALIGN\n\t\t\t\tbool \"Enable 16 pixels alignment\"\n\t\t\t\tdefault y\n\t\t\t\tdepends on LV_USE_VG_LITE_THORVG\n\n\t\t\tconfig LV_VG_LITE_THORVG_BUF_ADDR_ALIGN\n\t\t\t\tint \"Buffer address alignment\"\n\t\t\t\tdefault 64\n\t\t\t\tdepends on LV_USE_VG_LITE_THORVG\n\n\t\t\tconfig LV_VG_LITE_THORVG_THREAD_RENDER\n\t\t\t\tbool \"Enable multi-thread render\"\n\t\t\t\tdefault n\n\t\t\t\tdepends on LV_USE_VG_LITE_THORVG\n\n\t\t\tconfig LV_USE_GESTURE_RECOGNITION\n\t\t\t\tbool \"Enable the multi-touch gesture recognition feature\"\n\t\t\t\tdepends on LV_USE_FLOAT\n\t\t\t\tdefault n\n\t\tendmenu\n\tendmenu\n\n\tmenu \"Compiler Settings\"\n\t\tconfig LV_BIG_ENDIAN_SYSTEM\n\t\t\tbool \"For big endian systems set to 1\"\n\n\t\tconfig LV_ATTRIBUTE_MEM_ALIGN_SIZE\n\t\t\tint \"Required alignment size for buffers\"\n\t\t\tdefault 1\n\n\t\tconfig LV_ATTRIBUTE_FAST_MEM_USE_IRAM\n\t\t\tbool \"Set IRAM as LV_ATTRIBUTE_FAST_MEM\"\n\t\t\thelp\n\t\t\t\tSet this option to configure IRAM as LV_ATTRIBUTE_FAST_MEM\n\n\t\tconfig LV_USE_FLOAT\n\t\t\tbool \"Use float as lv_value_precise_t\"\n\t\t\tdefault n\n\n\t\tconfig LV_USE_MATRIX\n\t\t\tbool \"Enable matrix support\"\n\t\t\tdefault n\n\t\t\tselect LV_USE_FLOAT\n\n\t\tconfig LV_USE_PRIVATE_API\n\t\t\tbool \"Include `lvgl_private.h` in `lvgl.h` to access internal data and functions by default\"\n\t\t\tdefault n\n\tendmenu\n\n\tmenu \"Font Usage\"\n\t\tmenu \"Enable built-in fonts\"\n\t\t\tconfig LV_FONT_MONTSERRAT_8\n\t\t\t\tbool \"Enable Montserrat 8\"\n\t\t\tconfig LV_FONT_MONTSERRAT_10\n\t\t\t\tbool \"Enable Montserrat 10\"\n\t\t\tconfig LV_FONT_MONTSERRAT_12\n\t\t\t\tbool \"Enable Montserrat 12\"\n\t\t\tconfig LV_FONT_MONTSERRAT_14\n\t\t\t\tbool \"Enable Montserrat 14\"\n\t\t\t\tdefault y if !LV_CONF_MINIMAL\n\t\t\tconfig LV_FONT_MONTSERRAT_16\n\t\t\t\tbool \"Enable Montserrat 16\"\n\t\t\tconfig LV_FONT_MONTSERRAT_18\n\t\t\t\tbool \"Enable Montserrat 18\"\n\t\t\tconfig LV_FONT_MONTSERRAT_20\n\t\t\t\tbool \"Enable Montserrat 20\"\n\t\t\tconfig LV_FONT_MONTSERRAT_22\n\t\t\t\tbool \"Enable Montserrat 22\"\n\t\t\tconfig LV_FONT_MONTSERRAT_24\n\t\t\t\tbool \"Enable Montserrat 24\"\n\t\t\tconfig LV_FONT_MONTSERRAT_26\n\t\t\t\tbool \"Enable Montserrat 26\"\n\t\t\tconfig LV_FONT_MONTSERRAT_28\n\t\t\t\tbool \"Enable Montserrat 28\"\n\t\t\tconfig LV_FONT_MONTSERRAT_30\n\t\t\t\tbool \"Enable Montserrat 30\"\n\t\t\tconfig LV_FONT_MONTSERRAT_32\n\t\t\t\tbool \"Enable Montserrat 32\"\n\t\t\tconfig LV_FONT_MONTSERRAT_34\n\t\t\t\tbool \"Enable Montserrat 34\"\n\t\t\tconfig LV_FONT_MONTSERRAT_36\n\t\t\t\tbool \"Enable Montserrat 36\"\n\t\t\tconfig LV_FONT_MONTSERRAT_38\n\t\t\t\tbool \"Enable Montserrat 38\"\n\t\t\tconfig LV_FONT_MONTSERRAT_40\n\t\t\t\tbool \"Enable Montserrat 40\"\n\t\t\tconfig LV_FONT_MONTSERRAT_42\n\t\t\t\tbool \"Enable Montserrat 42\"\n\t\t\tconfig LV_FONT_MONTSERRAT_44\n\t\t\t\tbool \"Enable Montserrat 44\"\n\t\t\tconfig LV_FONT_MONTSERRAT_46\n\t\t\t\tbool \"Enable Montserrat 46\"\n\t\t\tconfig LV_FONT_MONTSERRAT_48\n\t\t\t\tbool \"Enable Montserrat 48\"\n\n\t\t\tconfig LV_FONT_MONTSERRAT_28_COMPRESSED\n\t\t\t\tbool \"Enable Montserrat 28 compressed\"\n\t\t\tconfig LV_FONT_DEJAVU_16_PERSIAN_HEBREW\n\t\t\t\tbool \"Enable Dejavu 16 Persian, Hebrew, Arabic letters\"\n\t\t\tconfig LV_FONT_SIMSUN_14_CJK\n\t\t\t\tbool \"Enable Simsun 14 CJK\"\n\t\t\tconfig LV_FONT_SIMSUN_16_CJK\n\t\t\t\tbool \"Enable Simsun 16 CJK\"\n\n\t\t\tconfig LV_FONT_UNSCII_8\n\t\t\t\tbool \"Enable UNSCII 8 (Perfect monospace font)\"\n\t\t\t\tdefault y if LV_CONF_MINIMAL\n\t\t\tconfig LV_FONT_UNSCII_16\n\t\t\t\tbool \"Enable UNSCII 16 (Perfect monospace font)\"\n\t\tendmenu\n\n\t\tchoice LV_FONT_DEFAULT\n\t\t\tprompt \"Select theme default title font\"\n\t\t\tdefault LV_FONT_DEFAULT_MONTSERRAT_14 if !LV_CONF_MINIMAL\n\t\t\tdefault LV_FONT_DEFAULT_UNSCII_8 if LV_CONF_MINIMAL\n\t\t\thelp\n\t\t\t\tSelect theme default title font\n\n\t\t\tconfig LV_FONT_DEFAULT_MONTSERRAT_8\n\t\t\t\tbool \"Montserrat 8\"\n\t\t\t\tselect LV_FONT_MONTSERRAT_8\n\t\t\tconfig LV_FONT_DEFAULT_MONTSERRAT_10\n\t\t\t\tbool \"Montserrat 10\"\n\t\t\t\tselect LV_FONT_MONTSERRAT_10\n\t\t\tconfig LV_FONT_DEFAULT_MONTSERRAT_12\n\t\t\t\tbool \"Montserrat 12\"\n\t\t\t\tselect LV_FONT_MONTSERRAT_12\n\t\t\tconfig LV_FONT_DEFAULT_MONTSERRAT_14\n\t\t\t\tbool \"Montserrat 14\"\n\t\t\t\tselect LV_FONT_MONTSERRAT_14\n\t\t\tconfig LV_FONT_DEFAULT_MONTSERRAT_16\n\t\t\t\tbool \"Montserrat 16\"\n\t\t\t\tselect LV_FONT_MONTSERRAT_16\n\t\t\tconfig LV_FONT_DEFAULT_MONTSERRAT_18\n\t\t\t\tbool \"Montserrat 18\"\n\t\t\t\tselect LV_FONT_MONTSERRAT_18\n\t\t\tconfig LV_FONT_DEFAULT_MONTSERRAT_20\n\t\t\t\tbool \"Montserrat 20\"\n\t\t\t\tselect LV_FONT_MONTSERRAT_20\n\t\t\tconfig LV_FONT_DEFAULT_MONTSERRAT_22\n\t\t\t\tbool \"Montserrat 22\"\n\t\t\t\tselect LV_FONT_MONTSERRAT_22\n\t\t\tconfig LV_FONT_DEFAULT_MONTSERRAT_24\n\t\t\t\tbool \"Montserrat 24\"\n\t\t\t\tselect LV_FONT_MONTSERRAT_24\n\t\t\tconfig LV_FONT_DEFAULT_MONTSERRAT_26\n\t\t\t\tbool \"Montserrat 26\"\n\t\t\t\tselect LV_FONT_MONTSERRAT_26\n\t\t\tconfig LV_FONT_DEFAULT_MONTSERRAT_28\n\t\t\t\tbool \"Montserrat 28\"\n\t\t\t\tselect LV_FONT_MONTSERRAT_28\n\t\t\tconfig LV_FONT_DEFAULT_MONTSERRAT_30\n\t\t\t\tbool \"Montserrat 30\"\n\t\t\t\tselect LV_FONT_MONTSERRAT_30\n\t\t\tconfig LV_FONT_DEFAULT_MONTSERRAT_32\n\t\t\t\tbool \"Montserrat 32\"\n\t\t\t\tselect LV_FONT_MONTSERRAT_32\n\t\t\tconfig LV_FONT_DEFAULT_MONTSERRAT_34\n\t\t\t\tbool \"Montserrat 34\"\n\t\t\t\tselect LV_FONT_MONTSERRAT_34\n\t\t\tconfig LV_FONT_DEFAULT_MONTSERRAT_36\n\t\t\t\tbool \"Montserrat 36\"\n\t\t\t\tselect LV_FONT_MONTSERRAT_36\n\t\t\tconfig LV_FONT_DEFAULT_MONTSERRAT_38\n\t\t\t\tbool \"Montserrat 38\"\n\t\t\t\tselect LV_FONT_MONTSERRAT_38\n\t\t\tconfig LV_FONT_DEFAULT_MONTSERRAT_40\n\t\t\t\tbool \"Montserrat 40\"\n\t\t\t\tselect LV_FONT_MONTSERRAT_40\n\t\t\tconfig LV_FONT_DEFAULT_MONTSERRAT_42\n\t\t\t\tbool \"Montserrat 42\"\n\t\t\t\tselect LV_FONT_MONTSERRAT_42\n\t\t\tconfig LV_FONT_DEFAULT_MONTSERRAT_44\n\t\t\t\tbool \"Montserrat 44\"\n\t\t\t\tselect LV_FONT_MONTSERRAT_44\n\t\t\tconfig LV_FONT_DEFAULT_MONTSERRAT_46\n\t\t\t\tbool \"Montserrat 46\"\n\t\t\t\tselect LV_FONT_MONTSERRAT_46\n\t\t\tconfig LV_FONT_DEFAULT_MONTSERRAT_48\n\t\t\t\tbool \"Montserrat 48\"\n\t\t\t\tselect LV_FONT_MONTSERRAT_48\n\t\t\tconfig LV_FONT_DEFAULT_MONTSERRAT_28_COMPRESSED\n\t\t\t\tbool \"Montserrat 28 compressed\"\n\t\t\t\tselect LV_FONT_MONTSERRAT_28_COMPRESSED\n\t\t\tconfig LV_FONT_DEFAULT_DEJAVU_16_PERSIAN_HEBREW\n\t\t\t\tbool \"Dejavu 16 Persian, Hebrew, Arabic letters\"\n\t\t\t\tselect LV_FONT_DEJAVU_16_PERSIAN_HEBREW\n\t\t\tconfig LV_FONT_DEFAULT_SIMSUN_14_CJK\n\t\t\t\tbool \"Simsun 14 CJK\"\n\t\t\t\tselect LV_FONT_SIMSUN_14_CJK\n\t\t\tconfig LV_FONT_DEFAULT_SIMSUN_16_CJK\n\t\t\t\tbool \"Simsun 16 CJK\"\n\t\t\t\tselect LV_FONT_SIMSUN_16_CJK\n\t\t\tconfig LV_FONT_DEFAULT_UNSCII_8\n\t\t\t\tbool \"UNSCII 8 (Perfect monospace font)\"\n\t\t\t\tselect LV_FONT_UNSCII_8\n\t\t\tconfig LV_FONT_DEFAULT_UNSCII_16\n\t\t\t\tbool \"UNSCII 16 (Perfect monospace font)\"\n\t\t\t\tselect LV_FONT_UNSCII_16\n\t\tendchoice\n\n\t\tconfig LV_FONT_FMT_TXT_LARGE\n\t\t\tbool \"Enable it if you have fonts with a lot of characters\"\n\t\t\thelp\n\t\t\t\tThe limit depends on the font size, font face and format\n\t\t\t\tbut with > 10,000 characters if you see issues probably you\n\t\t\t\tneed to enable it.\n\n\t\tconfig LV_USE_FONT_COMPRESSED\n\t\t\tbool \"Sets support for compressed fonts\"\n\n\t\tconfig LV_USE_FONT_PLACEHOLDER\n\t\t\tbool \"Enable drawing placeholders when glyph dsc is not found\"\n\t\t\tdefault y\n\tendmenu\n\n\tmenu \"Text Settings\"\n\t\tchoice LV_TXT_ENC\n\t\t\tprompt \"Select a character encoding for strings\"\n\t\t\thelp\n\t\t\t\tSelect a character encoding for strings. Your IDE or editor should have the same character encoding.\n\t\t\tdefault LV_TXT_ENC_UTF8 if !LV_CONF_MINIMAL\n\t\t\tdefault LV_TXT_ENC_ASCII if LV_CONF_MINIMAL\n\n\t\t\tconfig LV_TXT_ENC_UTF8\n\t\t\t\tbool \"UTF8\"\n\t\t\tconfig LV_TXT_ENC_ASCII\n\t\t\t\tbool \"ASCII\"\n\t\tendchoice\n\n\t\tconfig LV_TXT_BREAK_CHARS\n\t\t\tstring \"Can break (wrap) texts on these chars\"\n\t\t\tdefault \" ,.;:-_)}\"\n\n\t\tconfig LV_TXT_LINE_BREAK_LONG_LEN\n\t\t\tint \"Line break long length\"\n\t\t\tdefault 0\n\t\t\thelp\n\t\t\t\tIf a word is at least this long, will break wherever 'prettiest'.\n\t\t\t\tTo disable, set to a value <= 0.\n\n\t\tconfig LV_TXT_LINE_BREAK_LONG_PRE_MIN_LEN\n\t\t\tint \"Min num chars before break\"\n\t\t\tdefault 3\n\t\t\tdepends on LV_TXT_LINE_BREAK_LONG_LEN > 0\n\t\t\thelp\n\t\t\t\tMinimum number of characters in a long word to put on a line before a break.\n\n\t\tconfig LV_TXT_LINE_BREAK_LONG_POST_MIN_LEN\n\t\t\tint \"Min num chars after break\"\n\t\t\tdefault 3\n\t\t\tdepends on LV_TXT_LINE_BREAK_LONG_LEN > 0\n\t\t\thelp\n\t\t\t\tMinimum number of characters in a long word to put on a line after a break\n\n\t\tconfig LV_TXT_COLOR_CMD\n\t\t\tstring \"The control character to use for signalling text recoloring\"\n\t\t\tdefault \"#\"\n\n\t\tconfig LV_USE_BIDI\n\t\t\tbool \"Support bidirectional texts\"\n\t\t\thelp\n\t\t\t\tAllows mixing Left-to-Right and Right-to-Left texts.\n\t\t\t\tThe direction will be processed according to the Unicode Bidirectional Algorithm:\n\t\t\t\thttps://www.w3.org/International/articles/inline-bidi-markup/uba-basics\n\n\t\tchoice\n\t\t\tprompt \"Set the default BIDI direction\"\n\t\t\tdefault LV_BIDI_DIR_AUTO\n\t\t\tdepends on LV_USE_BIDI\n\n\t\t\tconfig LV_BIDI_DIR_LTR\n\t\t\t\tbool \"Left-to-Right\"\n\t\t\tconfig LV_BIDI_DIR_RTL\n\t\t\t\tbool \"Right-to-Left\"\n\t\t\tconfig LV_BIDI_DIR_AUTO\n\t\t\t\tbool \"Detect texts base direction\"\n\t\tendchoice\n\n\t\tconfig LV_USE_ARABIC_PERSIAN_CHARS\n\t\t\tbool \"Enable Arabic/Persian processing\"\n\t\t\thelp\n\t\t\t\tIn these languages characters should be replaced with\n\t\t\t\tanother form based on their position in the text.\n\tendmenu\n\n\tmenu \"Widget Usage\"\n\t\tconfig LV_WIDGETS_HAS_DEFAULT_VALUE\n\t\t\tbool \"Widgets has default value\"\n\t\t\tdefault y if !LV_CONF_MINIMAL\n\t\tconfig LV_USE_ANIMIMG\n\t\t\tbool \"Anim image\"\n\t\t\tdefault y if !LV_CONF_MINIMAL\n\t\tconfig LV_USE_ARC\n\t\t\tbool \"Arc\"\n\t\t\tdefault y if !LV_CONF_MINIMAL\n\t\tconfig LV_USE_BAR\n\t\t\tbool \"Bar\"\n\t\t\tdefault y if !LV_CONF_MINIMAL\n\t\tconfig LV_USE_BUTTON\n\t\t\tbool \"Button\"\n\t\t\tdefault y if !LV_CONF_MINIMAL\n\t\tconfig LV_USE_BUTTONMATRIX\n\t\t\tbool \"Button matrix\"\n\t\t\tdefault y if !LV_CONF_MINIMAL\n\t\tconfig LV_USE_CALENDAR\n\t\t\tbool \"Calendar\"\n\t\t\tdefault y if !LV_CONF_MINIMAL\n\t\tconfig LV_CALENDAR_WEEK_STARTS_MONDAY\n\t\t\tbool \"Calendar week starts monday\"\n\t\t\tdepends on LV_USE_CALENDAR\n\t\tconfig LV_USE_CALENDAR_HEADER_ARROW\n\t\t\tbool \"Use calendar header arrow\"\n\t\t\tdepends on LV_USE_CALENDAR\n\t\t\tdefault y\n\t\tconfig LV_USE_CALENDAR_HEADER_DROPDOWN\n\t\t\tbool \"Use calendar header dropdown\"\n\t\t\tdepends on LV_USE_CALENDAR\n\t\t\tdefault y\n\t\tconfig LV_USE_CALENDAR_CHINESE\n\t\t\tbool \"Use chinese calendar\"\n\t\t\tdepends on LV_USE_CALENDAR\n\t\tconfig LV_USE_CANVAS\n\t\t\tbool \"Canvas. Requires: lv_image\"\n\t\t\timply LV_USE_IMAGE\n\t\t\tdefault y if !LV_CONF_MINIMAL\n\t\tconfig LV_USE_CHART\n\t\t\tbool \"Chart\"\n\t\t\tdefault y if !LV_CONF_MINIMAL\n\t\tconfig LV_USE_CHECKBOX\n\t\t\tbool \"Check Box\"\n\t\t\tdefault y if !LV_CONF_MINIMAL\n\t\tconfig LV_USE_DROPDOWN\n\t\t\tbool \"Drop down list. Requires: lv_label\"\n\t\t\timply LV_USE_LABEL\n\t\t\tdefault y if !LV_CONF_MINIMAL\n\t\tconfig LV_USE_IMAGE\n\t\t\tbool \"Image. Requires: lv_label\"\n\t\t\timply LV_USE_LABEL\n\t\t\tdefault y if !LV_CONF_MINIMAL\n\t\tconfig LV_USE_IMAGEBUTTON\n\t\t\tbool \"ImageButton\"\n\t\t\tdefault y if !LV_CONF_MINIMAL\n\t\tconfig LV_USE_KEYBOARD\n\t\t\tbool \"Keyboard\"\n\t\t\tdefault y if !LV_CONF_MINIMAL\n\t\tconfig LV_USE_LABEL\n\t\t\tbool \"Label\"\n\t\t\tdefault y if !LV_CONF_MINIMAL\n\t\tconfig LV_LABEL_TEXT_SELECTION\n\t\t\tbool \"Enable selecting text of the label\"\n\t\t\tdepends on LV_USE_LABEL\n\t\t\tdefault y\n\t\tconfig LV_LABEL_LONG_TXT_HINT\n\t\t\tbool \"Store extra some info in labels (12 bytes) to speed up drawing of very long texts\"\n\t\t\tdepends on LV_USE_LABEL\n\t\t\tdefault y\n\t\tconfig LV_LABEL_WAIT_CHAR_COUNT\n\t\t\tint \"The count of wait chart\"\n\t\t\tdepends on LV_USE_LABEL\n\t\t\tdefault 3\n\t\tconfig LV_USE_LED\n\t\t\tbool \"LED\"\n\t\t\tdefault y if !LV_CONF_MINIMAL\n\t\tconfig LV_USE_LINE\n\t\t\tbool \"Line\"\n\t\t\tdefault y if !LV_CONF_MINIMAL\n\t\tconfig LV_USE_LIST\n\t\t\tbool \"List\"\n\t\t\tdefault y if !LV_CONF_MINIMAL\n\t\tconfig LV_USE_LOTTIE\n\t\t\tbool \"Lottie\"\n\t\t\tdefault n\n\t\t\tdepends on LV_USE_VECTOR_GRAPHIC && (LV_USE_THORVG_INTERNAL || LV_USE_THORVG_EXTERNAL)\n\t\t\thelp\n\t\t\t\tEnable Lottie animations. Requires LV_USE_VECTOR_GRAPHIC and LV_USE_THORVG_INTERNAL or LV_USE_THORVG_EXTERNAL.\n\t\tconfig LV_USE_MENU\n\t\t\tbool \"Menu\"\n\t\t\tdefault y if !LV_CONF_MINIMAL\n\t\tconfig LV_USE_MSGBOX\n\t\t\tbool \"Msgbox\"\n\t\t\tdefault y if !LV_CONF_MINIMAL\n\t\tconfig LV_USE_ROLLER\n\t\t\tbool \"Roller. Requires: lv_label\"\n\t\t\timply LV_USE_LABEL\n\t\t\tdefault y if !LV_CONF_MINIMAL\n\t\tconfig LV_USE_SCALE\n\t\t\tbool \"Scale\"\n\t\t\tdefault y if !LV_CONF_MINIMAL\n\t\tconfig LV_USE_SLIDER\n\t\t\tbool \"Slider. Requires: lv_bar\"\n\t\t\timply LV_USE_BAR\n\t\t\tdefault y if !LV_CONF_MINIMAL\n\t\tconfig LV_USE_SPAN\n\t\t\tbool \"Span\"\n\t\t\tdefault y if !LV_CONF_MINIMAL\n\t\tconfig LV_SPAN_SNIPPET_STACK_SIZE\n\t\t\tint \"Maximum number of span descriptor\"\n\t\t\tdefault 64\n\t\t\tdepends on LV_USE_SPAN\n\t\tconfig LV_USE_SPINBOX\n\t\t\tbool \"Spinbox\"\n\t\t\tdefault y if !LV_CONF_MINIMAL\n\t\tconfig LV_USE_SPINNER\n\t\t\tbool \"Spinner\"\n\t\t\tdefault y if !LV_CONF_MINIMAL\n\t\tconfig LV_USE_SWITCH\n\t\t\tbool \"Switch\"\n\t\t\tdefault y if !LV_CONF_MINIMAL\n\t\tconfig LV_USE_TEXTAREA\n\t\t\tbool \"Text area. Requires: lv_label\"\n\t\t\tselect LV_USE_LABEL\n\t\t\tdefault y if !LV_CONF_MINIMAL\n\t\tconfig LV_TEXTAREA_DEF_PWD_SHOW_TIME\n\t\t\tint \"Text area def. pwd show time [ms]\"\n\t\t\tdefault 1500\n\t\t\tdepends on LV_USE_TEXTAREA\n\t\tconfig LV_USE_TABLE\n\t\t\tbool \"Table\"\n\t\t\tdefault y if !LV_CONF_MINIMAL\n\t\tconfig LV_USE_TABVIEW\n\t\t\tbool \"Tabview\"\n\t\t\tdefault y if !LV_CONF_MINIMAL\n\t\tconfig LV_USE_TILEVIEW\n\t\t\tbool \"Tileview\"\n\t\t\tdefault y if !LV_CONF_MINIMAL\n\t\tconfig LV_USE_WIN\n\t\t\tbool \"Win\"\n\t\t\tdefault y if !LV_CONF_MINIMAL\n\tendmenu\n\n\tmenu \"Themes\"\n\t\tconfig LV_USE_THEME_DEFAULT\n\t\t\tbool \"A simple, impressive and very complete theme\"\n\t\t\tdefault y if !LV_COLOR_DEPTH_1 && !LV_CONF_MINIMAL\n\t\tconfig LV_THEME_DEFAULT_DARK\n\t\t\tbool \"Yes to set dark mode, No to set light mode\"\n\t\t\tdepends on LV_USE_THEME_DEFAULT\n\t\tconfig LV_THEME_DEFAULT_GROW\n\t\t\tbool \"Enable grow on press\"\n\t\t\tdefault y\n\t\t\tdepends on LV_USE_THEME_DEFAULT\n\t\tconfig LV_THEME_DEFAULT_TRANSITION_TIME\n\t\t\tint \"Default transition time in [ms]\"\n\t\t\tdefault 80\n\t\t\tdepends on LV_USE_THEME_DEFAULT\n\t\tconfig LV_USE_THEME_SIMPLE\n\t\t\tbool \"A very simple theme that is a good starting point for a custom theme\"\n\t\t\tdefault y if !LV_COLOR_DEPTH_1 && !LV_CONF_MINIMAL\n\t\tconfig LV_USE_THEME_MONO\n\t\t\tbool \"Monochrome theme, suitable for some E-paper & dot matrix displays\"\n\t\t\tdefault y if LV_COLOR_DEPTH_1 && !LV_CONF_MINIMAL\n\tendmenu\n\n\tmenu \"Layouts\"\n\t\tconfig LV_USE_FLEX\n\t\t\tbool \"A layout similar to Flexbox in CSS\"\n\t\t\tdefault y if !LV_CONF_MINIMAL\n\t\tconfig LV_USE_GRID\n\t\t\tbool \"A layout similar to Grid in CSS\"\n\t\t\tdefault y if !LV_CONF_MINIMAL\n\tendmenu\n\n\tmenu \"3rd Party Libraries\"\n\t\tconfig LV_FS_DEFAULT_DRIVER_LETTER\n\t\t\tint \"Default drive letter (e.g. 65 for 'A')\"\n\t\t\tdefault 0\n\t\t\thelp\n\t\t\t\tSetting a default drive letter allows skipping the driver prefix in filepaths\n\n\t\tconfig LV_USE_FS_STDIO\n\t\t\tbool \"File system on top of stdio API\"\n\t\tconfig LV_FS_STDIO_LETTER\n\t\t\tint \"Set an upper cased letter on which the drive will accessible (e.g. 65 for 'A')\"\n\t\t\tdefault 0\n\t\t\tdepends on LV_USE_FS_STDIO\n\t\tconfig LV_FS_STDIO_PATH\n\t\t\tstring \"Set the working directory\"\n\t\t\tdepends on LV_USE_FS_STDIO\n\t\tconfig LV_FS_STDIO_CACHE_SIZE\n\t\t\tint \">0 to cache this number of bytes in lv_fs_read()\"\n\t\t\tdefault 0\n\t\t\tdepends on LV_USE_FS_STDIO\n\n\t\tconfig LV_USE_FS_POSIX\n\t\t\tbool \"File system on top of posix API\"\n\t\tconfig LV_FS_POSIX_LETTER\n\t\t\tint \"Set an upper cased letter on which the drive will accessible (e.g. 65 for 'A')\"\n\t\t\tdefault 0\n\t\t\tdepends on LV_USE_FS_POSIX\n\t\tconfig LV_FS_POSIX_PATH\n\t\t\tstring \"Set the working directory\"\n\t\t\tdepends on LV_USE_FS_POSIX\n\t\tconfig LV_FS_POSIX_CACHE_SIZE\n\t\t\tint \">0 to cache this number of bytes in lv_fs_read()\"\n\t\t\tdefault 0\n\t\t\tdepends on LV_USE_FS_POSIX\n\n\t\tconfig LV_USE_FS_WIN32\n\t\t\tbool \"File system on top of Win32 API\"\n\t\tconfig LV_FS_WIN32_LETTER\n\t\t\tint \"Set an upper cased letter on which the drive will accessible (e.g. 65 for 'A')\"\n\t\t\tdefault 0\n\t\t\tdepends on LV_USE_FS_WIN32\n\t\tconfig LV_FS_WIN32_PATH\n\t\t\tstring \"Set the working directory\"\n\t\t\tdepends on LV_USE_FS_WIN32\n\t\tconfig LV_FS_WIN32_CACHE_SIZE\n\t\t\tint \">0 to cache this number of bytes in lv_fs_read()\"\n\t\t\tdefault 0\n\t\t\tdepends on LV_USE_FS_WIN32\n\n\t\tconfig LV_USE_FS_FATFS\n\t\t\tbool \"File system on top of FatFS\"\n\t\tconfig LV_FS_FATFS_LETTER\n\t\t\tint \"Set an upper cased letter on which the drive will accessible (e.g. 65 for 'A')\"\n\t\t\tdefault 0\n\t\t\tdepends on LV_USE_FS_FATFS\n\t\tconfig LV_FS_FATFS_PATH\n\t\t\tstring \"Set the working directory\"\n\t\t\tdepends on LV_USE_FS_FATFS\n\t\tconfig LV_FS_FATFS_CACHE_SIZE\n\t\t\tint \">0 to cache this number of bytes in lv_fs_read()\"\n\t\t\tdefault 0\n\t\t\tdepends on LV_USE_FS_FATFS\n\n\t\tconfig LV_USE_FS_MEMFS\n\t\t\tbool \"File system on top of memory-mapped API\"\n\t\tconfig LV_FS_MEMFS_LETTER\n\t\t\tint \"Set an upper cased letter on which the drive will accessible (e.g. 65 for 'A')\"\n\t\t\tdefault 0\n\t\t\tdepends on LV_USE_FS_MEMFS\n\n\t\tconfig LV_USE_FS_LITTLEFS\n\t\t\tbool \"File system on top of littlefs API\"\n\t\tconfig LV_FS_LITTLEFS_LETTER\n\t\t\tint \"Set an upper cased letter on which the drive will accessible (e.g. 65 for 'A')\"\n\t\t\tdefault 0\n\t\t\tdepends on LV_USE_FS_LITTLEFS\n\t\tconfig LV_FS_LITTLEFS_PATH\n\t\t\tstring \"Set the working directory\"\n\t\t\tdepends on LV_USE_FS_LITTLEFS\n\n\t\tconfig LV_USE_FS_ARDUINO_ESP_LITTLEFS\n\t\t\tbool \"File system on top of Arduino ESP littlefs API\"\n\t\tconfig LV_FS_ARDUINO_ESP_LITTLEFS_LETTER\n\t\t\tint \"Set an upper cased letter on which the drive will accessible (e.g. 65 for 'A')\"\n\t\t\tdefault 0\n\t\t\tdepends on LV_USE_FS_ARDUINO_ESP_LITTLEFS\n\t\tconfig LV_FS_ARDUINO_ESP_LITTLEFS_PATH\n\t\t\tstring \"Set the working directory\"\n\t\t\tdepends on LV_USE_FS_ARDUINO_ESP_LITTLEFS\n\n\t\tconfig LV_USE_FS_ARDUINO_SD\n\t\t\tbool \"File system on top of Arduino SD API\"\n\t\tconfig LV_FS_ARDUINO_SD_LETTER\n\t\t\tint \"Set an upper cased letter on which the drive will accessible (e.g. 65 for 'A')\"\n\t\t\tdefault 0\n\t\t\tdepends on LV_USE_FS_ARDUINO_SD\n\t\tconfig LV_FS_ARDUINO_SD_PATH\n\t\t\tstring \"Set the working directory\"\n\t\t\tdepends on LV_USE_FS_ARDUINO_SD\n\n\t\tconfig LV_USE_FS_UEFI\n\t\t\tbool \"File system on top of the UEFI EFI_SIMPLE_FILE_SYSTEM_PROTOCOL\"\n\t\tconfig LV_USE_FS_UEFI_LETTER\n\t\t\tint \"Set an upper cased letter on which the drive will accessible (e.g. 65 for 'A')\"\n\t\t\tdefault 0\n\t\t\tdepends on LV_USE_FS_UEFI\n\n\t\tconfig LV_USE_LODEPNG\n\t\t\tbool \"PNG decoder library\"\n\n\t\tconfig LV_USE_LIBPNG\n\t\t\tbool \"PNG decoder(libpng) library\"\n\n\t\tconfig LV_USE_BMP\n\t\t\tbool \"BMP decoder library\"\n\n\t\tconfig LV_USE_TJPGD\n\t\t\tbool \"TJPGD decoder library\"\n\n\t\tconfig LV_USE_LIBJPEG_TURBO\n\t\t\tbool \"libjpeg-turbo decoder library\"\n\n\t\tconfig LV_USE_GIF\n\t\t\tbool \"GIF decoder library\"\n\n\t\tconfig LV_GIF_CACHE_DECODE_DATA\n\t\t\tbool \"Use extra 16KB RAM to cache decoded data to accelerate\"\n\t\t\tdepends on LV_USE_GIF\n\n\t\tconfig LV_BIN_DECODER_RAM_LOAD\n\t\t\tbool \"Decode whole image to RAM for bin decoder\"\n\t\t\tdefault n\n\n\t\tconfig LV_USE_SVG\n\t\t\tbool \"SVG library\"\n\t\t\tdepends on LV_USE_VECTOR_GRAPHIC\n\n\t\tconfig LV_USE_SVG_ANIMATION\n\t\t\tbool \"SVG animation\"\n\t\t\tdepends on LV_USE_SVG\n\n\t\tconfig LV_USE_RLE\n\t\t\tbool \"LVGL's version of RLE compression method\"\n\n\t\tconfig LV_USE_QRCODE\n\t\t\tbool \"QR code library\"\n\n\t\tconfig LV_USE_BARCODE\n\t\t\tbool \"Barcode library\"\n\n\t\tconfig LV_USE_FREETYPE\n\t\t\tbool \"FreeType library\"\n\t\tconfig LV_FREETYPE_USE_LVGL_PORT\n\t\t\tbool \"Let FreeType to use LVGL memory and file porting\"\n\t\t\tdefault n\n\t\t\tdepends on LV_USE_FREETYPE\n\t\tconfig LV_FREETYPE_CACHE_FT_GLYPH_CNT\n\t\t\tint \"The maximum number of Glyph in count\"\n\t\t\tdefault 256\n\t\t\tdepends on LV_USE_FREETYPE\n\n\t\tconfig LV_USE_TINY_TTF\n\t\t\tbool \"Enable Tiny TTF decoder\"\n\t\t\tdefault n\n\t\tconfig LV_TINY_TTF_FILE_SUPPORT\n\t\t\tbool \"Enable loading Tiny TTF data from files\"\n\t\t\tdefault n\n\t\t\tdepends on LV_USE_TINY_TTF\n\t\tconfig LV_TINY_TTF_CACHE_GLYPH_CNT\n\t\t\tbool \"Tiny ttf cache entries count\"\n\t\t\tdefault 256\n\t\t\tdepends on LV_USE_TINY_TTF\n\n\t\tconfig LV_USE_RLOTTIE\n\t\t\tbool \"Lottie library\"\n\n\t\tconfig LV_USE_THORVG\n\t\t\tbool \"ThorVG library\"\n\t\t\tchoice\n\t\t\t\tprompt \"Use ThorVG config\"\n\t\t\t\tdepends on LV_USE_THORVG\n\t\t\t\tdefault LV_USE_THORVG_INTERNAL\n\t\t\t\tconfig LV_USE_THORVG_INTERNAL\n\t\t\t\t\tbool \"Use ThorVG internal\"\n\t\t\t\tconfig LV_USE_THORVG_EXTERNAL\n\t\t\t\t\tbool \"Use ThorVG external\"\n\t\t\tendchoice\n\n\t\tconfig LV_USE_LZ4\n\t\t\tbool \"Enable LZ4 compress/decompress lib\"\n\t\t\tchoice\n\t\t\t\tprompt \"Choose lvgl built-in LZ4 lib or external lib\"\n\t\t\t\tdepends on LV_USE_LZ4\n\t\t\t\tdefault LV_USE_LZ4_INTERNAL\n\t\t\t\tconfig LV_USE_LZ4_INTERNAL\n\t\t\t\t\tbool \"Use lvgl built-in LZ4 lib\"\n\t\t\t\tconfig LV_USE_LZ4_EXTERNAL\n\t\t\t\t\tbool \"Use external LZ4 library\"\n\t\t\tendchoice\n\n\t\tconfig LV_USE_FFMPEG\n\t\t\tbool \"FFmpeg library\"\n\t\tconfig LV_FFMPEG_DUMP_FORMAT\n\t\t\tbool \"Dump format\"\n\t\t\tdepends on LV_USE_FFMPEG\n\t\t\tdefault n\n\t\tconfig LV_FFMPEG_PLAYER_USE_LV_FS\n\t\t\tbool \"Use lvgl file path in FFmpeg Player widget\"\n\t\t\tdepends on LV_USE_FFMPEG\n\t\t\tdefault n\n\t\t\thelp\n\t\t\t\tYou won't be able to open URLs after enabling this feature.\n\t\t\t\tNote that FFmpeg image decoder will always use lvgl file system.\n\tendmenu\n\n\tmenu \"Others\"\n\t\tconfig LV_USE_SNAPSHOT\n\t\t\tbool \"Enable API to take snapshot\"\n\t\t\tdefault n if !LV_CONF_MINIMAL\n\n\t\tconfig LV_USE_SYSMON\n\t\t\tbool \"Enable system monitor component\"\n\t\t\tdefault n\n\n\t\tconfig LV_USE_PERF_MONITOR\n\t\t\tbool \"Show CPU usage and FPS count\"\n\t\t\tdepends on LV_USE_SYSMON\n\n\t\tchoice\n\t\t\tprompt \"Performance monitor position\"\n\t\t\tdepends on LV_USE_PERF_MONITOR\n\t\t\tdefault LV_PERF_MONITOR_ALIGN_BOTTOM_RIGHT\n\n\t\t\tconfig LV_PERF_MONITOR_ALIGN_TOP_LEFT\n\t\t\t\tbool \"Top left\"\n\t\t\tconfig LV_PERF_MONITOR_ALIGN_TOP_MID\n\t\t\t\tbool \"Top middle\"\n\t\t\tconfig LV_PERF_MONITOR_ALIGN_TOP_RIGHT\n\t\t\t\tbool \"Top right\"\n\t\t\tconfig LV_PERF_MONITOR_ALIGN_BOTTOM_LEFT\n\t\t\t\tbool \"Bottom left\"\n\t\t\tconfig LV_PERF_MONITOR_ALIGN_BOTTOM_MID\n\t\t\t\tbool \"Bottom middle\"\n\t\t\tconfig LV_PERF_MONITOR_ALIGN_BOTTOM_RIGHT\n\t\t\t\tbool \"Bottom right\"\n\t\t\tconfig LV_PERF_MONITOR_ALIGN_LEFT_MID\n\t\t\t\tbool \"Left middle\"\n\t\t\tconfig LV_PERF_MONITOR_ALIGN_RIGHT_MID\n\t\t\t\tbool \"Right middle\"\n\t\t\tconfig LV_PERF_MONITOR_ALIGN_CENTER\n\t\t\t\tbool \"Center\"\n\t\tendchoice\n\n\t\tconfig LV_USE_PERF_MONITOR_LOG_MODE\n\t\t\tbool \"Prints performance data using log\"\n\t\t\tdepends on LV_USE_PERF_MONITOR\n\t\t\tdefault n\n\n\t\tconfig LV_USE_MEM_MONITOR\n\t\t\tbool \"Show the used memory and the memory fragmentation\"\n\t\t\tdefault n\n\t\t\tdepends on LV_USE_BUILTIN_MALLOC && LV_USE_SYSMON\n\n\t\tchoice\n\t\t\tprompt \"Memory monitor position\"\n\t\t\tdepends on LV_USE_MEM_MONITOR\n\t\t\tdefault LV_MEM_MONITOR_ALIGN_BOTTOM_LEFT\n\n\t\t\tconfig LV_MEM_MONITOR_ALIGN_TOP_LEFT\n\t\t\t\tbool \"Top left\"\n\t\t\tconfig LV_MEM_MONITOR_ALIGN_TOP_MID\n\t\t\t\tbool \"Top middle\"\n\t\t\tconfig LV_MEM_MONITOR_ALIGN_TOP_RIGHT\n\t\t\t\tbool \"Top right\"\n\t\t\tconfig LV_MEM_MONITOR_ALIGN_BOTTOM_LEFT\n\t\t\t\tbool \"Bottom left\"\n\t\t\tconfig LV_MEM_MONITOR_ALIGN_BOTTOM_MID\n\t\t\t\tbool \"Bottom middle\"\n\t\t\tconfig LV_MEM_MONITOR_ALIGN_BOTTOM_RIGHT\n\t\t\t\tbool \"Bottom right\"\n\t\t\tconfig LV_MEM_MONITOR_ALIGN_LEFT_MID\n\t\t\t\tbool \"Left middle\"\n\t\t\tconfig LV_MEM_MONITOR_ALIGN_RIGHT_MID\n\t\t\t\tbool \"Right middle\"\n\t\t\tconfig LV_MEM_MONITOR_ALIGN_CENTER\n\t\t\t\tbool \"Center\"\n\t\tendchoice\n\n\t\tmenuconfig LV_USE_PROFILER\n\t\t\tbool \"Runtime performance profiler\"\n\n\t\tif LV_USE_PROFILER\n\n\t\tconfig LV_USE_PROFILER_BUILTIN\n\t\t\tbool \"Enable the built-in profiler\"\n\t\t\tdefault y\n\t\tconfig LV_PROFILER_BUILTIN_BUF_SIZE\n\t\t\tint \"Default profiler trace buffer size in bytes\"\n\t\t\tdepends on LV_USE_PROFILER_BUILTIN\n\t\t\tdefault 16384\n\t\tconfig LV_PROFILER_INCLUDE\n\t\t\tstring \"Header to include for the profiler\"\n\t\t\tdefault \"lvgl/src/misc/lv_profiler_builtin.h\"\n\n\t\tconfig LV_PROFILER_LAYOUT\n\t\t\tbool \"Enable layout profiler\"\n\t\t\tdefault y\n\n\t\tconfig LV_PROFILER_REFR\n\t\t\tbool \"Enable disp refr profiler\"\n\t\t\tdefault y\n\n\t\tconfig LV_PROFILER_DRAW\n\t\t\tbool \"Enable draw profiler\"\n\t\t\tdefault y\n\n\t\tconfig LV_PROFILER_INDEV\n\t\t\tbool \"Enable indev profiler\"\n\t\t\tdefault y\n\n\t\tconfig LV_PROFILER_DECODER\n\t\t\tbool \"Enable decoder profiler\"\n\t\t\tdefault y\n\n\t\tconfig LV_PROFILER_FONT\n\t\t\tbool \"Enable font profiler\"\n\t\t\tdefault y\n\n\t\tconfig LV_PROFILER_FS\n\t\t\tbool \"Enable fs profiler\"\n\t\t\tdefault y\n\n\t\tconfig LV_PROFILER_STYLE\n\t\t\tbool \"Enable style profiler\"\n\t\t\tdefault n\n\n\t\tconfig LV_PROFILER_TIMER\n\t\t\tbool \"Enable timer profiler\"\n\t\t\tdefault y\n\n\t\tconfig LV_PROFILER_CACHE\n\t\t\tbool \"Enable cache profiler\"\n\t\t\tdefault y\n\n\t\tconfig LV_PROFILER_EVENT\n\t\t\tbool \"Enable event profiler\"\n\t\t\tdefault y\n\n\t\tendif # LV_USE_PROFILER\n\n\t\tconfig LV_USE_MONKEY\n\t\t\tbool \"Enable Monkey test\"\n\t\t\tdefault n\n\n\t\tconfig LV_USE_GRIDNAV\n\t\t\tbool \"Enable grid navigation\"\n\t\t\tdefault n\n\n\t\tconfig LV_USE_FRAGMENT\n\t\t\tbool \"Enable lv_obj fragment\"\n\t\t\tdefault n\n\n\t\tconfig LV_USE_IMGFONT\n\t\t\tbool \"Support using images as font in label or span widgets\"\n\t\t\tdefault n\n\n\t\tconfig LV_USE_OBSERVER\n\t\t\tbool \"Observer\"\n\t\t\tdefault y\n\n\t\tconfig LV_USE_IME_PINYIN\n\t\t\tbool \"Enable Pinyin input method\"\n\t\t\tdefault n\n\t\tconfig LV_IME_PINYIN_USE_K9_MODE\n\t\t\tbool \"Enable Pinyin input method 9 key input mode\"\n\t\t\tdepends on LV_USE_IME_PINYIN\n\t\t\tdefault n\n\t\tconfig LV_IME_PINYIN_K9_CAND_TEXT_NUM\n\t\t\tint \"Maximum number of candidate panels for 9-key input mode\"\n\t\t\tdepends on LV_IME_PINYIN_USE_K9_MODE\n\t\t\tdefault 3\n\t\tconfig LV_IME_PINYIN_USE_DEFAULT_DICT\n\t\t\tbool \"Use built-in Thesaurus\"\n\t\t\tdepends on LV_USE_IME_PINYIN\n\t\t\tdefault y\n\t\t\thelp\n\t\t\t\tIf you do not use the default thesaurus, be sure to use lv_ime_pinyin after setting the thesaurus\n\t\tconfig LV_IME_PINYIN_CAND_TEXT_NUM\n\t\t\tint \"Maximum number of candidate panels\"\n\t\t\tdepends on LV_USE_IME_PINYIN\n\t\t\tdefault 6\n\t\t\thelp\n\t\t\t\tSet the maximum number of candidate panels that can be displayed.\n\t\t\t\tThis needs to be adjusted according to the size of the screen.\n\n\t\tconfig LV_USE_FILE_EXPLORER\n\t\t\tbool \"Enable file explorer\"\n\t\t\tdefault n\n\t\tconfig LV_FILE_EXPLORER_PATH_MAX_LEN\n\t\t\tint \"Maximum length of path\"\n\t\t\tdepends on LV_USE_FILE_EXPLORER\n\t\t\tdefault 128\n\t\tconfig LV_FILE_EXPLORER_QUICK_ACCESS\n\t\t\tbool \"Enable quick access bar\"\n\t\t\tdepends on LV_USE_FILE_EXPLORER\n\t\t\tdefault y\n\t\t\thelp\n\t\t\t\tThis can save some memory, but not much. After the quick access bar is created, it can be hidden by clicking the button at the top left corner of the browsing area, which is very useful for small screen devices.\n\n\t\tconfig LV_USE_FONT_MANAGER\n\t\t\tbool \"Enable freetype font manager\"\n\t\t\tdepends on LV_USE_FREETYPE\n\t\t\tdefault n\n\t\tconfig LV_FONT_MANAGER_NAME_MAX_LEN\n\t\t\tint \"Font manager name max length\"\n\t\t\tdepends on LV_USE_FONT_MANAGER\n\t\t\tdefault 32\n\t\tconfig LV_USE_XML\n\t\t\tbool \"Enable loading XML UIs runtime\"\n\t\tconfig LVGL_VERSION_MAJOR\n\t\t\tint\n\t\t\tdefault 9 # LVGL_VERSION_MAJOR\n\t\tconfig LVGL_VERSION_MINOR\n\t\t\tint\n\t\t\tdefault 3 # LVGL_VERSION_MINOR\n\t\tconfig LVGL_VERSION_PATCH\n\t\t\tint\n\t\t\tdefault 0 # LVGL_VERSION_PATCH\n\tendmenu\n\n\tmenu \"Devices\"\n\t\tconfig LV_USE_SDL\n\t\t\tbool \"Use SDL to open window on PC and handle mouse and keyboard\"\n\t\t\tdefault n\n\t\tconfig LV_SDL_INCLUDE_PATH\n\t\t\tstring \"SDL include path\"\n\t\t\tdepends on LV_USE_SDL\n\t\t\tdefault \"SDL2/SDL.h\"\n\n\t\tchoice\n\t\t\tprompt \"SDL rendering mode\"\n\t\t\tdepends on LV_USE_SDL\n\t\t\tdefault LV_SDL_RENDER_MODE_DIRECT\n\t\t\thelp\n\t\t\t\tLV_DISPLAY_RENDER_MODE_DIRECT is recommended for best performance\n\n\t\t\tconfig LV_SDL_RENDER_MODE_PARTIAL\n\t\t\t\tbool \"Use the buffer(s) to render the screen is smaller parts\"\n\n\t\t\tconfig LV_SDL_RENDER_MODE_DIRECT\n\t\t\t\tbool \"Only the changed areas will be updated with 2 screen sized buffers\"\n\n\t\t\tconfig LV_SDL_RENDER_MODE_FULL\n\t\t\t\tbool \"Always redraw the whole screen even if only one pixel has been changed with 2 screen sized buffers\"\n\t\tendchoice\n\n\t\tchoice\n\t\t\tprompt \"SDL buffer size\"\n\t\t\tdepends on LV_USE_SDL\n\t\t\tdefault LV_SDL_SINGLE_BUFFER\n\n\t\t\tconfig LV_SDL_SINGLE_BUFFER\n\t\t\t\tbool \"One screen-sized buffer\"\n\n\t\t\tconfig LV_SDL_DOUBLE_BUFFER\n\t\t\t\tbool \"Two screen-sized buffer\"\n\t\t\t\tdepends on !LV_SDL_RENDER_MODE_PARTIAL\n\n\t\t\tconfig LV_SDL_CUSTOM_BUFFER\n\t\t\t\tbool \"Custom-sized buffer\"\n\t\t\t\tdepends on LV_SDL_RENDER_MODE_PARTIAL\n\t\tendchoice\n\n\t\tconfig LV_SDL_BUFFER_COUNT\n\t\t\tint\n\t\t\tdepends on LV_USE_SDL\n\t\t\tdefault 0 if LV_SDL_CUSTOM_BUFFER\n\t\t\tdefault 1 if LV_SDL_SINGLE_BUFFER\n\t\t\tdefault 2 if LV_SDL_DOUBLE_BUFFER\n\n\t\tconfig LV_SDL_ACCELERATED\n\t\t\tbool \"Use hardware acceleration\"\n\t\t\tdepends on LV_USE_SDL\n\t\t\tdefault y\n\n\t\tconfig LV_SDL_FULLSCREEN\n\t\t\tbool \"SDL fullscreen\"\n\t\t\tdepends on LV_USE_SDL\n\t\t\tdefault n\n\n\t\tconfig LV_SDL_DIRECT_EXIT\n\t\t\tbool \"Exit the application when all SDL windows are closed\"\n\t\t\tdepends on LV_USE_SDL\n\t\t\tdefault y\n\n\t\tchoice\n\t\t\tprompt \"SDL mousewheel mode\"\n\t\t\tdepends on LV_USE_SDL\n\t\t\tdefault LV_SDL_MOUSEWHEEL_MODE_ENCODER\n\n\t\t\tconfig LV_SDL_MOUSEWHEEL_MODE_ENCODER\n\t\t\t\tbool \"The mousewheel emulates an encoder input device\"\n\n\t\t\tconfig LV_SDL_MOUSEWHEEL_MODE_CROWN\n\t\t\t\tbool \"The mousewheel emulates a smart watch crown\"\n\t\tendchoice\n\n\t\tconfig LV_SDL_MOUSEWHEEL_MODE\n\t\t\tint\n\t\t\tdepends on LV_USE_SDL\n\t\t\tdefault 0 if LV_SDL_MOUSEWHEEL_MODE_ENCODER\n\t\t\tdefault 1 if LV_SDL_MOUSEWHEEL_MODE_CROWN\n\n\t\tconfig LV_USE_X11\n\t\t\tbool \"Use X11 window manager to open window on Linux PC and handle mouse and keyboard\"\n\t\t\tdefault n\n\t\tconfig LV_X11_DOUBLE_BUFFER\n\t\t\tbool \"Use double buffers for lvgl rendering\"\n\t\t\tdepends on LV_USE_X11\n\t\t\tdefault y\n\t\tconfig LV_X11_DIRECT_EXIT\n\t\t\tbool \"Exit the application when all X11 windows have been closed\"\n\t\t\tdepends on LV_USE_X11\n\t\t\tdefault y\n\t\tchoice\n\t\t\tprompt \"X11 device render mode\"\n\t\t\tdepends on LV_USE_X11\n\t\t\tdefault LV_X11_RENDER_MODE_PARTIAL\n\n\t\t\tconfig LV_X11_RENDER_MODE_PARTIAL\n\t\t\t\tbool \"Partial render mode (preferred)\"\n\t\t\t\thelp\n\t\t\t\t\tUse the buffer(s) to render the screen is smaller parts. This way the buffers can be smaller then the display to save RAM.\n\t\t\t\t\tAppr. 1/10 screen size buffer(s) are used.\n\t\t\tconfig LV_X11_RENDER_MODE_DIRECT\n\t\t\t\tbool \"Direct render mode\"\n\t\t\t\thelp\n\t\t\t\t\tThe buffer(s) has to be screen sized and LVGL will render into the correct location of the buffer. This way the buffer always contain the whole image. Only the changed ares will be updated.\n\t\t\t\t\tWith 2 buffers the buffers' content are kept in sync automatically and in flush_cb only address change is required.\n\t\t\tconfig LV_X11_RENDER_MODE_FULL\n\t\t\t\tbool \"Full render mode\"\n\t\t\t\thelp\n\t\t\t\t\tAlways redraw the whole screen even if only one pixel has been changed.\n\t\t\t\t\tWith 2 buffers in flush_cb only and address change is required.\n\t\tendchoice\n\n\t\tconfig LV_USE_WAYLAND\n\t\t\tbool \"Use the wayland client to open a window and handle inputs on Linux or BSD\"\n\t\t\tdefault n\n\t\tconfig LV_WAYLAND_WINDOW_DECORATIONS\n\t\t\tbool \"Draw client side window decorations, only necessary on Mutter (GNOME)\"\n\t\t\tdepends on LV_USE_WAYLAND\n\t\t\tdefault n\n\t\tconfig LV_WAYLAND_WL_SHELL\n\t\t\tbool \"Support the legacy wl_shell instead of the default XDG Shell protocol\"\n\t\t\tdepends on LV_USE_WAYLAND\n\t\t\tdefault n\n\n\t\tconfig LV_USE_LINUX_FBDEV\n\t\t\tbool \"Use Linux framebuffer device\"\n\t\t\tdefault n\n\t\tconfig LV_LINUX_FBDEV_BSD\n\t\t\tbool \"Use BSD flavored framebuffer device\"\n\t\t\tdepends on LV_USE_LINUX_FBDEV\n\t\t\tdefault n\n\n\t\tchoice\n\t\t\tprompt \"Framebuffer device render mode\"\n\t\t\tdepends on LV_USE_LINUX_FBDEV\n\t\t\tdefault LV_LINUX_FBDEV_RENDER_MODE_PARTIAL\n\n\t\t\tconfig LV_LINUX_FBDEV_RENDER_MODE_PARTIAL\n\t\t\t\tbool \"Partial mode\"\n\t\t\t\thelp\n\t\t\t\t\tUse the buffer(s) to render the screen is smaller parts. This way the buffers can be smaller then the display to save RAM. At least 1/10 screen size buffer(s) are recommended.\n\n\t\t\tconfig LV_LINUX_FBDEV_RENDER_MODE_DIRECT\n\t\t\t\tbool \"Direct mode\"\n\t\t\t\thelp\n\t\t\t\t\tThe buffer(s) has to be screen sized and LVGL will render into the correct location of the buffer. This way the buffer always contain the whole image. Only the changed ares will be updated. With 2 buffers the buffers' content are kept in sync automatically and in flush_cb only address change is required.\n\n\t\t\tconfig LV_LINUX_FBDEV_RENDER_MODE_FULL\n\t\t\t\tbool \"Full mode\"\n\t\t\t\thelp\n\t\t\t\t\tAlways redraw the whole screen even if only one pixel has been changed. With 2 buffers in flush_cb only and address change is required.\n\n\t\tendchoice\n\n\t\tchoice\n\t\t\tprompt \"Framebuffer size\"\n\t\t\tdepends on LV_USE_LINUX_FBDEV\n\t\t\tdefault LV_LINUX_FBDEV_SINGLE_BUFFER\n\n\t\t\tconfig LV_LINUX_FBDEV_SINGLE_BUFFER\n\t\t\t\tbool \"One screen-sized buffer\"\n\n\t\t\tconfig LV_LINUX_FBDEV_DOUBLE_BUFFER\n\t\t\t\tbool \"Two screen-sized buffer\"\n\t\t\t\tdepends on !LV_LINUX_FBDEV_RENDER_MODE_PARTIAL\n\n\t\t\tconfig LV_LINUX_FBDEV_CUSTOM_BUFFER\n\t\t\t\tbool \"Custom-sized buffer\"\n\t\t\t\tdepends on LV_LINUX_FBDEV_RENDER_MODE_PARTIAL\n\n\t\tendchoice\n\n\t\tconfig LV_LINUX_FBDEV_BUFFER_COUNT\n\t\t\tint\n\t\t\tdepends on LV_USE_LINUX_FBDEV\n\t\t\tdefault 0 if LV_LINUX_FBDEV_CUSTOM_BUFFER\n\t\t\tdefault 1 if LV_LINUX_FBDEV_SINGLE_BUFFER\n\t\t\tdefault 2 if LV_LINUX_FBDEV_DOUBLE_BUFFER\n\n\t\tconfig LV_LINUX_FBDEV_BUFFER_SIZE\n\t\t\tint \"Custom partial buffer size (in number of rows)\"\n\t\t\tdepends on LV_USE_LINUX_FBDEV && LV_LINUX_FBDEV_CUSTOM_BUFFER\n\t\t\tdefault 60\n\n\t\tconfig LV_USE_NUTTX\n\t\t\tbool \"Use Nuttx to open window and handle touchscreen\"\n\t\t\tdefault n\n\n\t\tconfig LV_USE_NUTTX_INDEPENDENT_IMAGE_HEAP\n\t\t\tbool \"Use independent image heap\"\n\t\t\tdepends on LV_USE_NUTTX\n\t\t\tdefault n\n\n\t\tconfig LV_USE_NUTTX_LIBUV\n\t\t\tbool \"Use uv loop to replace default timer loop and other fb/indev timers\"\n\t\t\tdepends on LV_USE_NUTTX\n\t\t\tdefault n\n\n\t\tconfig LV_USE_NUTTX_CUSTOM_INIT\n\t\t\tbool \"Use Custom Nuttx init API to open window and handle touchscreen\"\n\t\t\tdepends on LV_USE_NUTTX\n\t\t\tdefault n\n\n\t\tconfig LV_USE_NUTTX_LCD\n\t\t\tbool \"Use NuttX LCD device\"\n\t\t\tdepends on LV_USE_NUTTX\n\t\t\tdefault n\n\n\t\tchoice\n\t\t\tprompt \"NuttX LCD buffer size\"\n\t\t\tdepends on LV_USE_NUTTX_LCD\n\t\t\tdefault LV_NUTTX_LCD_SINGLE_BUFFER\n\n\t\t\tconfig LV_NUTTX_LCD_SINGLE_BUFFER\n\t\t\t\tbool \"One screen-sized buffer\"\n\n\t\t\tconfig LV_NUTTX_LCD_DOUBLE_BUFFER\n\t\t\t\tbool \"Two screen-sized buffer\"\n\n\t\t\tconfig LV_NUTTX_LCD_CUSTOM_BUFFER\n\t\t\t\tbool \"Custom-sized buffer\"\n\n\t\tendchoice\n\n\t\tconfig LV_NUTTX_LCD_BUFFER_COUNT\n\t\t\tint\n\t\t\tdepends on LV_USE_NUTTX_LCD\n\t\t\tdefault 0 if LV_NUTTX_LCD_CUSTOM_BUFFER\n\t\t\tdefault 1 if LV_NUTTX_LCD_SINGLE_BUFFER\n\t\t\tdefault 2 if LV_NUTTX_LCD_DOUBLE_BUFFER\n\n\t\tconfig LV_NUTTX_LCD_BUFFER_SIZE\n\t\t\tint \"Custom partial buffer size (in number of rows)\"\n\t\t\tdepends on LV_USE_NUTTX_LCD && LV_NUTTX_LCD_CUSTOM_BUFFER\n\t\t\tdefault 60\n\n\t\tconfig LV_USE_NUTTX_TOUCHSCREEN\n\t\t\tbool \"Use NuttX touchscreen driver\"\n\t\t\tdepends on LV_USE_NUTTX\n\t\t\tdefault n\n\n\t\tconfig LV_NUTTX_TOUCHSCREEN_CURSOR_SIZE\n\t\t\tint \"Touchscreen cursor size in pixels\"\n\t\t\tdepends on LV_USE_NUTTX_TOUCHSCREEN\n\t\t\tdefault 0\n\t\t\thelp\n\t\t\t\tSet to 0 to disable cursor, or set to a value greater than 0 to set the cursor size in pixels.\n\n\t\tconfig LV_USE_LINUX_DRM\n\t\t\tbool \"Use Linux DRM device\"\n\t\t\tdefault n\n\n\t\tconfig LV_USE_TFT_ESPI\n\t\t\tbool \"Use TFT_eSPI driver\"\n\t\t\tdefault n\n\n\t\tconfig LV_USE_EVDEV\n\t\t\tbool \"Use evdev input driver\"\n\t\t\tdefault n\n\n\t\tconfig LV_USE_LIBINPUT\n\t\t\tbool \"Use libinput input driver\"\n\t\t\tdefault n\n\n\t\tconfig LV_LIBINPUT_BSD\n\t\t\tbool \"Use the BSD variant of the libinput input driver\"\n\t\t\tdepends on LV_USE_LIBINPUT\n\t\t\tdefault n\n\n\t\tconfig LV_LIBINPUT_XKB\n\t\t\tbool \"Enable full keyboard support via XKB\"\n\t\t\tdepends on LV_USE_LIBINPUT\n\t\t\tdefault n\n\n\t\tconfig LV_USE_ST7735\n\t\t\tbool \"Use ST7735 LCD driver\"\n\t\t\tdefault n\n\n\t\tconfig LV_USE_ST7789\n\t\t\tbool \"Use ST7789 LCD driver\"\n\t\t\tdefault n\n\n\t\tconfig LV_USE_ST7796\n\t\t\tbool \"Use ST7796 LCD driver\"\n\t\t\tdefault n\n\n\t\tconfig LV_USE_ILI9341\n\t\t\tbool \"Use ILI9341 LCD driver\"\n\t\t\tdefault n\n\n\t\tconfig LV_USE_GENERIC_MIPI\n\t\t\tbool \"Generic MIPI driver\"\n\t\t\tdefault y if LV_USE_ST7735 || LV_USE_ST7789 || LV_USE_ST7796 || LV_USE_ILI9341\n\n\t\tconfig LV_USE_RENESAS_GLCDC\n\t\t\tbool \"Use Renesas GLCDC driver\"\n\t\t\tdefault n\n\n\t\tconfig LV_USE_ST_LTDC\n\t\t\tbool \"Driver for ST LTDC\"\n\t\t\tdefault n\n\n\t\tconfig LV_ST_LTDC_USE_DMA2D_FLUSH\n\t\t\tbool \"Only used for created partial mode LTDC displays\"\n\t\t\tdefault n\n\t\t\tdepends on LV_USE_ST_LTDC && !LV_USE_DRAW_DMA2D\n\n\t\tconfig LV_USE_WINDOWS\n\t\t\tbool \"Use LVGL Windows backend\"\n\t\t\tdepends on LV_OS_WINDOWS\n\t\t\tdefault n\n\n\t\tconfig LV_USE_UEFI\n\t\t\tbool \"Use LVGL UEFI backend\"\n\t\t\tdefault n\n\n\t\tconfig LV_USE_UEFI_INCLUDE\n\t\t\tstring \"Header that hides the actual framework (EDK2, gnu-efi, ...)\"\n\t\t\tdepends on LV_USE_UEFI\n\t\t\tdefault \"myefi.h\"\n\n\t\tconfig LV_UEFI_USE_MEMORY_SERVICES\n\t\t\tbool \"Use the memory services from the boot services table\"\n\t\t\tdepends on LV_USE_UEFI\n\t\t\tdefault n\n\n\t\tconfig LV_USE_OPENGLES\n\t\t\tbool \"Use GLFW and OpenGL to open window on PC and handle mouse and keyboard\"\n\t\t\tdefault n\n\n\t\tconfig LV_USE_OPENGLES_DEBUG\n\t\t\tbool \"Enable debug mode for OpenGL\"\n\t\t\tdepends on LV_USE_OPENGLES\n\t\t\tdefault n\n\n\t\tconfig LV_USE_QNX\n\t\t\tbool \"Use a QNX Screen window as a display\"\n\t\t\tdefault n\n\n\t\tconfig LV_QNX_BUF_COUNT\n\t\t\tint\n\t\t\tdepends on LV_USE_QNX\n\t\t\tdefault 1\n\tendmenu\n\n\tmenu \"Examples\"\n\t\tconfig LV_BUILD_EXAMPLES\n\t\t\tbool \"Enable the examples to be built\"\n\t\t\tdefault y if !LV_CONF_MINIMAL\n\tendmenu\n\n\tmenu \"Demos\"\n\t\tconfig LV_USE_DEMO_WIDGETS\n\t\t\tbool \"Show some widget\"\n\t\t\tdefault n\n\n\t\tconfig LV_USE_DEMO_KEYPAD_AND_ENCODER\n\t\t\tbool \"Demonstrate the usage of encoder and keyboard\"\n\t\t\tdefault n\n\n\t\tconfig LV_USE_DEMO_BENCHMARK\n\t\t\tbool \"Benchmark your system\"\n\t\t\tdefault n\n\t\t\tselect LV_FONT_MONTSERRAT_14\n\t\t\tselect LV_FONT_MONTSERRAT_20\n\t\t\tselect LV_FONT_MONTSERRAT_24\n\t\t\tselect LV_FONT_MONTSERRAT_26\n\t\t\tselect LV_USE_DEMO_WIDGETS\n\t\tconfig LV_USE_DEMO_RENDER\n\t\t\tbool \"Render test for each primitives. Requires at least 480x272 display\"\n\t\t\tdefault n\n\n\t\tconfig LV_USE_DEMO_SCROLL\n\t\t\tbool \"Scroll settings test for LVGL\"\n\t\t\tdefault n\n\n\t\tconfig LV_USE_DEMO_STRESS\n\t\t\tbool \"Stress test for LVGL\"\n\t\t\tdefault n\n\n\t\tconfig LV_USE_DEMO_TRANSFORM\n\t\t\tbool \"Transform test for LVGL\"\n\t\t\tdefault n\n\t\t\tdepends on LV_FONT_MONTSERRAT_18\n\n\t\tconfig LV_USE_DEMO_MUSIC\n\t\t\tbool \"Music player demo\"\n\t\t\tdefault n\n\t\tconfig LV_DEMO_MUSIC_SQUARE\n\t\t\tbool \"Enable Square\"\n\t\t\tdepends on LV_USE_DEMO_MUSIC\n\t\t\tdefault n\n\t\tconfig LV_DEMO_MUSIC_LANDSCAPE\n\t\t\tbool \"Enable Landscape\"\n\t\t\tdepends on LV_USE_DEMO_MUSIC\n\t\t\tdefault n\n\t\tconfig LV_DEMO_MUSIC_ROUND\n\t\t\tbool \"Enable Round\"\n\t\t\tdepends on LV_USE_DEMO_MUSIC\n\t\t\tdefault n\n\t\tconfig LV_DEMO_MUSIC_LARGE\n\t\t\tbool \"Enable Large\"\n\t\t\tdepends on LV_USE_DEMO_MUSIC\n\t\t\tdefault n\n\t\tconfig LV_DEMO_MUSIC_AUTO_PLAY\n\t\t\tbool \"Enable Auto play\"\n\t\t\tdepends on LV_USE_DEMO_MUSIC\n\t\t\tdefault n\n\n\t\tconfig LV_USE_DEMO_FLEX_LAYOUT\n\t\t\tbool \"Flex layout previewer\"\n\t\t\tdefault n\n\t\tconfig LV_USE_DEMO_MULTILANG\n\t\t\tbool \"multi-language demo\"\n\t\t\tdefault n\n\t\tconfig LV_USE_DEMO_VECTOR_GRAPHIC\n\t\t\tbool \"vector graphic demo\"\n\t\t\tdefault n\n\t\t\tdepends on LV_USE_VECTOR_GRAPHIC\n\tendmenu\n\nendmenu\n"
        },
        {
          "name": "LICENCE.txt",
          "type": "blob",
          "size": 1.046875,
          "content": "MIT licence\nCopyright (c) 2021 LVGL Kft\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 22.71484375,
          "content": "\n<a href=\"https://github.com/sponsors/lvgl\" target=\"_blank\"><img align=\"left\" src=\"https://lvgl.io/github-assets/sponsor.png\" height=\"32px\"></a>\n\n<p align=\"right\">\n  <b>English</b> | <a href=\"./docs/README_zh.rst\">中文</a> | <a href=\"./docs/README_pt_BR.rst\">Português do Brasil</a> | <a href=\"./docs/README_jp.rst\">日本語</a>\n</p>\n\n<br>\n\n<p align=\"center\">\n  <img src=\"https://lvgl.io/github-assets/logo-colored.png\" width=300px>\n</p>\n\n  <h1 align=\"center\">Light and Versatile Graphics Library</h1>\n  <br>\n<div align=\"center\">\n  <img src=\"https://lvgl.io/github-assets/smartwatch-demo.gif\">\n  &nbsp;\n  <img border=\"1px\" src=\"https://lvgl.io/github-assets/widgets-demo.gif\">\n</div>\n<br>\n<p align=\"center\">\n<a href=\"https://lvgl.io\" title=\"Homepage of LVGL\">Website </a> |\n<a href=\"https://docs.lvgl.io/\" title=\"Detailed documentation with 100+ examples\">Docs</a> |\n<a href=\"https://forum.lvgl.io\" title=\"Get help and help others\">Forum</a> |\n<a href=\"https://lvgl.io/demos\" title=\"Demos running in your browser\">Demos</a> |\n<a href=\"https://lvgl.io/services\" title=\"Graphics design, UI implementation and consulting\">Services</a>\n</p>\n<br>\n\n## :ledger: Overview\n\n**Mature and Well-known**<br>\nLVGL is the most popular free and open source embedded graphics library to create beautiful UIs for any MCU, MPU and display type. It's supported by industry leading vendors and projects like  Arm, STM32, NXP, Espressif, Nuvoton, Arduino, RT-Thread, Zephyr, NuttX, Adafruit and many more.\n\n**Feature Rich**<br>\nIt has all the features to create modern and beautiful GUIs: 30+ built-in widgets, a powerful style system, web inspired layout managers, and a typography system supporting many languages. To integrate LVGL into your platform, all you need is at least 32kB RAM and 128 kB Flash, a C compiler, a frame buffer, and at least an 1/10 screen sized buffer for rendering.\n\n**Services**<br>\nOur team is ready to help you with graphics design, UI implementation and consulting services. Contact us if you need some support during the development of your next GUI project.\n\n## :rocket: Features\n\n**Free and Portable**\n  - A fully portable C (C++ compatible) library with no external dependencies.\n  - Can be compiled to any MCU or MPU, with any (RT)OS.\n  - Supports monochrome, ePaper, OLED or TFT displays, or even monitors. [Displays](https://docs.lvgl.io/master/details/main-components/display.html)\n  - Distributed under the MIT license, so you can easily use it in commercial projects too.\n  - Needs only 32kB RAM and 128 kB Flash, a frame buffer, and at least an 1/10 screen sized buffer for rendering.\n  - OS, External memory and GPU are supported but not required.\n\n**Widgets, Styles, Layouts and more**\n  - 30+ built-in [Widgets](https://docs.lvgl.io/master/details/widgets/index.html):  Button, Label, Slider, Chart, Keyboard, Meter, Arc, Table and many more.\n  - Flexible [Style system](https://docs.lvgl.io/master/details/base-widget/styles/style.html) with  ~100 style properties to customize any part of the widgets in any state.\n  - [Flexbox](https://docs.lvgl.io/master/details/base-widget/layouts/flex.html) and [Grid](https://docs.lvgl.io/master/details/base-widget/layouts/grid.html)-like layouts engines to automatically size and position the widgets in a responsive way.\n  - Texts are rendered with UTF-8 encoding supporting CJK, Thai, Hindi, Arabic, Persian writing systems.\n  - Word wrapping, kerning, text scrolling, sub-pixel rendering, Pinyin-IME Chinese input, Emojis in texts.\n  - Rendering engine supporting animations, anti-aliasing, opacity, smooth scrolling, shadows, image transformation, etc  \n  - Supports Mouse, Touchpad, Keypad, Keyboard, External buttons, Encoder [Input devices](https://docs.lvgl.io/master/details/main-components/indev.html).\n  - [Multiple display](https://docs.lvgl.io/master/details/main-components/display.html#how-many-displays-can-lvgl-use) support.\n\n**Binding and Build Support**\n  - [MicroPython Binding](https://blog.lvgl.io/2019-02-20/micropython-bindings) exposes LVGL API\n  - [PikaScript Binding](https://blog.lvgl.io/2022-08-24/pikascript-and-lvgl) python on MCU lighter and easier.\n  - No custom build system is used. You can build LVGL as you build the other files of your project.\n  - Support for Make and [CMake](https://docs.lvgl.io/master/details/integration/building/cmake.html) is included out of the box.\n  - [Develop on PC](https://docs.lvgl.io/master/details/integration/ide/pc-simulator.html) and use the same UI code on embedded hardware.\n  - Convert the C UI code to HTML file with our [Emscripten port](https://github.com/lvgl/lv_web_emscripten).\n\n**Docs, Tools, and Services**\n  - Detailed [Documentation](https://docs.lvgl.io/) with [100+ simple examples](https://docs.lvgl.io/master/examples.html)\n  - [Services](https://lvgl.io/services) such as User interface design, Implementation and Consulting to make UI development simpler and faster.\n\n## :heart: Sponsor\n\nIf LVGL saved you a lot of time and money or you just had fun using it, consider [Supporting its Development](https://github.com/sponsors/lvgl).\n\n**How do we spend the donations?**<br>\nOur goal is to provide financial compensation for people who do the most for LVGL. It means not only the maintainers but anyone who implements a great feature should get a payment from the accumulated money. We use the donations to cover our operational costs like servers and related services.\n\n**How to donate?**<br>\nWe use [GitHub Sponsors](https://github.com/sponsors/lvgl) where you can easily send one time or recurring donations. You can also see all of our expenses  in a transparent way.\n\n**How to get paid for your contribution?**<br>\nIf someone implements or fixes an issue labeled as [Sponsored](https://github.com/lvgl/lvgl/labels/Sponsored) he or she will get a payment for that work. We estimate the required time, complexity and importance of the issue and set a price accordingly. To jump in just comment on a [Sponsored](https://github.com/lvgl/lvgl/labels/Sponsored) issue saying \"Hi, I'd like to deal with it. This is how I'm planning to fix/implement it...\". A work is considered ready when it's approved and merged by a maintainer. After that you can submit and expense at [opencollective.com](https://opencollective.com/lvgl) and you will receive the payment in a few days.\n\n**Organizations supporting LVGL**<br>\n[![Sponsors of LVGL](https://opencollective.com/lvgl/organizations.svg?width=600)](https://opencollective.com/lvgl)\n\n**Individuals supporting LVGL**<br>\n[![Backers of LVGL](https://opencollective.com/lvgl/individuals.svg?width=600)](https://opencollective.com/lvgl)\n\n## :package: Packages\nLVGL is available as:\n- [Arduino library](https://docs.lvgl.io/master/details/integration/framework/arduino.html)\n- [PlatformIO package](https://registry.platformio.org/libraries/lvgl/lvgl)\n- [Zephyr library](https://docs.lvgl.io/master/details/integration/os/zephyr.html)\n- [ESP-IDF(ESP32) component](https://components.espressif.com/components/lvgl/lvgl)\n- [NXP MCUXpresso component](https://www.nxp.com/design/software/embedded-software/lvgl-open-source-graphics-library:LITTLEVGL-OPEN-SOURCE-GRAPHICS-LIBRARY)\n- [NuttX library](https://docs.lvgl.io/master/details/integration/os/nuttx.html)\n- [RT-Thread RTOS](https://docs.lvgl.io/master/details/integration/os/rt-thread.html)\n- CMSIS-Pack\n- [RIOT OS package](https://doc.riot-os.org/group__pkg__lvgl.html#details)\n\n\n## :robot: Examples\n\nSee some examples of creating widgets, using layouts and applying styles. You will find C and MicroPython code, and links to try out or edit the examples in an online MicroPython editor.\n\nFor more examples check out the [Examples](https://github.com/lvgl/lvgl/tree/master/examples) folder.\n\n\n### Hello world label\n\n![Simple Hello world label example in LVGL](https://github.com/kisvegabor/test/raw/master/readme_example_1.png)\n\n<details>\n  <summary>C code</summary>\n\n```c\n/*Change the active screen's background color*/\nlv_obj_set_style_bg_color(lv_screen_active(), lv_color_hex(0x003a57), LV_PART_MAIN);\n\n/*Create a white label, set its text and align it to the center*/\nlv_obj_t * label = lv_label_create(lv_screen_active());\nlv_label_set_text(label, \"Hello world\");\nlv_obj_set_style_text_color(label, lv_color_hex(0xffffff), LV_PART_MAIN);\nlv_obj_align(label, LV_ALIGN_CENTER, 0, 0);\n```\n</details>\n\n<details>\n  <summary>MicroPython code | <a href=\"https://sim.lvgl.io/v8.3/micropython/ports/javascript/index.html?script_direct=4ab7c40c35b0dc349aa2f0c3b00938d7d8e8ac9f\" target=\"_blank\">Online Simulator</a></summary>\n\n```python\n# Change the active screen's background color\nscr = lv.screen_active()\nscr.set_style_bg_color(lv.color_hex(0x003a57), lv.PART.MAIN)\n\n# Create a white label, set its text and align it to the center\nlabel = lv.label(lv.screen_active())\nlabel.set_text(\"Hello world\")\nlabel.set_style_text_color(lv.color_hex(0xffffff), lv.PART.MAIN)\nlabel.align(lv.ALIGN.CENTER, 0, 0)\n```\n</details>\n<br>\n\n### Button with Click Event\n\n![LVGL button with label example](https://github.com/kisvegabor/test/raw/master/readme_example_2.gif)\n\n<details>\n  <summary>C code</summary>\n\n```c\nlv_obj_t * button = lv_button_create(lv_screen_active());                   /*Add a button to the current screen*/\nlv_obj_center(button);                                             /*Set its position*/\nlv_obj_set_size(button, 100, 50);                                  /*Set its size*/\nlv_obj_add_event_cb(button, button_event_cb, LV_EVENT_CLICKED, NULL); /*Assign a callback to the button*/\n\nlv_obj_t * label = lv_label_create(button);                        /*Add a label to the button*/\nlv_label_set_text(label, \"Button\");                             /*Set the labels text*/\nlv_obj_center(label);                                           /*Align the label to the center*/\n...\n\nvoid button_event_cb(lv_event_t * e)\n{\n  printf(\"Clicked\\n\");\n}\n```\n</details>\n\n<details>\n  <summary>MicroPython code | <a href=\"https://sim.lvgl.io/v8.3/micropython/ports/javascript/index.html?script_startup=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/header.py&script=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/widgets/slider/lv_example_slider_2.py&script_direct=926bde43ec7af0146c486de470c53f11f167491e\" target=\"_blank\">Online Simulator</a></summary>\n\n```python\ndef button_event_cb(e):\n  print(\"Clicked\")\n\n# Create a Button and a Label\nbutton = lv.button(lv.screen_active())\nbutton.center()\nbutton.set_size(100, 50)\nbutton.add_event_cb(button_event_cb, lv.EVENT.CLICKED, None)\n\nlabel = lv.label(button)\nlabel.set_text(\"Button\")\nlabel.center()\n```\n</details>\n<br>\n\n### Checkboxes with Layout\n![Checkboxes with layout in LVGL](https://github.com/kisvegabor/test/raw/master/readme_example_3.gif)\n\n<details>\n  <summary>C code</summary>\n\n```c\n\nlv_obj_set_flex_flow(lv_screen_active(), LV_FLEX_FLOW_COLUMN);\nlv_obj_set_flex_align(lv_screen_active(), LV_FLEX_ALIGN_CENTER, LV_FLEX_ALIGN_START, LV_FLEX_ALIGN_CENTER);\n\nlv_obj_t * cb;\ncb = lv_checkbox_create(lv_screen_active());\nlv_checkbox_set_text(cb, \"Apple\");\nlv_obj_add_event_cb(cb, event_handler, LV_EVENT_ALL, NULL);\n\ncb = lv_checkbox_create(lv_screen_active());\nlv_checkbox_set_text(cb, \"Banana\");\nlv_obj_add_state(cb, LV_STATE_CHECKED);\nlv_obj_add_event_cb(cb, event_handler, LV_EVENT_ALL, NULL);\n\ncb = lv_checkbox_create(lv_screen_active());\nlv_checkbox_set_text(cb, \"Lemon\");\nlv_obj_add_state(cb, LV_STATE_DISABLED);\nlv_obj_add_event_cb(cb, event_handler, LV_EVENT_ALL, NULL);\n\ncb = lv_checkbox_create(lv_screen_active());\nlv_obj_add_state(cb, LV_STATE_CHECKED | LV_STATE_DISABLED);\nlv_checkbox_set_text(cb, \"Melon\\nand a new line\");\nlv_obj_add_event_cb(cb, event_handler, LV_EVENT_ALL, NULL);\n```\n\n</details>\n\n<details>\n  <summary>MicroPython code | <a href=\"https://sim.lvgl.io/v8.3/micropython/ports/javascript/index.html?script_startup=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/header.py&script=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/widgets/slider/lv_example_slider_2.py&script_direct=311d37e5f70daf1cb0d2cad24c7f72751b5f1792\" target=\"_blank\">Online Simulator</a></summary>\n\n```python\ndef event_handler(e):\n    code = e.get_code()\n    obj = e.get_target_obj()\n    if code == lv.EVENT.VALUE_CHANGED:\n        txt = obj.get_text()\n        if obj.get_state() & lv.STATE.CHECKED:\n            state = \"Checked\"\n        else:\n            state = \"Unchecked\"\n        print(txt + \":\" + state)\n\n\nlv.screen_active().set_flex_flow(lv.FLEX_FLOW.COLUMN)\nlv.screen_active().set_flex_align(lv.FLEX_ALIGN.CENTER, lv.FLEX_ALIGN.START, lv.FLEX_ALIGN.CENTER)\n\ncb = lv.checkbox(lv.screen_active())\ncb.set_text(\"Apple\")\ncb.add_event_cb(event_handler, lv.EVENT.ALL, None)\n\ncb = lv.checkbox(lv.screen_active())\ncb.set_text(\"Banana\")\ncb.add_state(lv.STATE.CHECKED)\ncb.add_event_cb(event_handler, lv.EVENT.ALL, None)\n\ncb = lv.checkbox(lv.screen_active())\ncb.set_text(\"Lemon\")\ncb.add_state(lv.STATE.DISABLED)\ncb.add_event_cb(event_handler, lv.EVENT.ALL, None)\n\ncb = lv.checkbox(lv.screen_active())\ncb.add_state(lv.STATE.CHECKED | lv.STATE.DISABLED)\ncb.set_text(\"Melon\")\ncb.add_event_cb(event_handler, lv.EVENT.ALL, None)\n```\n\n</details>\n<br>\n\n### Styling a Slider\n![Styling a slider with LVGL](https://github.com/kisvegabor/test/raw/master/readme_example_4.gif)\n\n\n<details>\n  <summary>C code</summary>\n\n```c\nlv_obj_t * slider = lv_slider_create(lv_screen_active());\nlv_slider_set_value(slider, 70, LV_ANIM_OFF);\nlv_obj_set_size(slider, 300, 20);\nlv_obj_center(slider);\n\n/*Add local styles to MAIN part (background rectangle)*/\nlv_obj_set_style_bg_color(slider, lv_color_hex(0x0F1215), LV_PART_MAIN);\nlv_obj_set_style_bg_opa(slider, 255, LV_PART_MAIN);\nlv_obj_set_style_border_color(slider, lv_color_hex(0x333943), LV_PART_MAIN);\nlv_obj_set_style_border_width(slider, 5, LV_PART_MAIN);\nlv_obj_set_style_pad_all(slider, 5, LV_PART_MAIN);\n\n/*Create a reusable style sheet for the INDICATOR part*/\nstatic lv_style_t style_indicator;\nlv_style_init(&style_indicator);\nlv_style_set_bg_color(&style_indicator, lv_color_hex(0x37B9F5));\nlv_style_set_bg_grad_color(&style_indicator, lv_color_hex(0x1464F0));\nlv_style_set_bg_grad_dir(&style_indicator, LV_GRAD_DIR_HOR);\nlv_style_set_shadow_color(&style_indicator, lv_color_hex(0x37B9F5));\nlv_style_set_shadow_width(&style_indicator, 15);\nlv_style_set_shadow_spread(&style_indicator, 5);\n4\n/*Add the style sheet to the slider's INDICATOR part*/\nlv_obj_add_style(slider, &style_indicator, LV_PART_INDICATOR);\n\n/*Add the same style to the KNOB part too and locally overwrite some properties*/\nlv_obj_add_style(slider, &style_indicator, LV_PART_KNOB);\n\nlv_obj_set_style_outline_color(slider, lv_color_hex(0x0096FF), LV_PART_KNOB);\nlv_obj_set_style_outline_width(slider, 3, LV_PART_KNOB);\nlv_obj_set_style_outline_pad(slider, -5, LV_PART_KNOB);\nlv_obj_set_style_shadow_spread(slider, 2, LV_PART_KNOB);\n```\n\n</details>\n\n<details>\n  <summary>MicroPython code |\n<a href=\"https://sim.lvgl.io/v8.3/micropython/ports/javascript/index.html?script_startup=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/header.py&script=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/widgets/slider/lv_example_slider_2.py&script_direct=c431c7b4dfd2cc0dd9c392b74365d5af6ea986f0\" target=\"_blank\">Online Simulator</a>\n</summary>\n\n\n```python\n# Create a slider and add the style\nslider = lv.slider(lv.screen_active())\nslider.set_value(70, lv.ANIM.OFF)\nslider.set_size(300, 20)\nslider.center()\n\n# Add local styles to MAIN part (background rectangle)\nslider.set_style_bg_color(lv.color_hex(0x0F1215), lv.PART.MAIN)\nslider.set_style_bg_opa(255, lv.PART.MAIN)\nslider.set_style_border_color(lv.color_hex(0x333943), lv.PART.MAIN)\nslider.set_style_border_width(5, lv.PART.MAIN)\nslider.set_style_pad_all(5, lv.PART.MAIN)\n\n# Create a reusable style sheet for the INDICATOR part\nstyle_indicator = lv.style_t()\nstyle_indicator.init()\nstyle_indicator.set_bg_color(lv.color_hex(0x37B9F5))\nstyle_indicator.set_bg_grad_color(lv.color_hex(0x1464F0))\nstyle_indicator.set_bg_grad_dir(lv.GRAD_DIR.HOR)\nstyle_indicator.set_shadow_color(lv.color_hex(0x37B9F5))\nstyle_indicator.set_shadow_width(15)\nstyle_indicator.set_shadow_spread(5)\n\n# Add the style sheet to the slider's INDICATOR part\nslider.add_style(style_indicator, lv.PART.INDICATOR)\nslider.add_style(style_indicator, lv.PART.KNOB)\n\n# Add the same style to the KNOB part too and locally overwrite some properties\nslider.set_style_outline_color(lv.color_hex(0x0096FF), lv.PART.KNOB)\nslider.set_style_outline_width(3, lv.PART.KNOB)\nslider.set_style_outline_pad(-5, lv.PART.KNOB)\nslider.set_style_shadow_spread(2, lv.PART.KNOB)\n```\n</details>\n<br>\n\n### English, Hebrew (mixed LTR-RTL) and Chinese texts\n\n![English, Hebrew and Chinese texts with LVGL](https://github.com/kisvegabor/test/raw/master/readme_example_5.png)\n\n<details>\n  <summary>C code</summary>\n\n```c\nlv_obj_t * ltr_label = lv_label_create(lv_screen_active());\nlv_label_set_text(ltr_label, \"In modern terminology, a microcontroller is similar to a system on a chip (SoC).\");\nlv_obj_set_style_text_font(ltr_label, &lv_font_montserrat_16, 0);\nlv_obj_set_width(ltr_label, 310);\nlv_obj_align(ltr_label, LV_ALIGN_TOP_LEFT, 5, 5);\n\nlv_obj_t * rtl_label = lv_label_create(lv_screen_active());\nlv_label_set_text(rtl_label,\"מעבד, או בשמו המלא יחידת עיבוד מרכזית (באנגלית: CPU - Central Processing Unit).\");\nlv_obj_set_style_base_dir(rtl_label, LV_BASE_DIR_RTL, 0);\nlv_obj_set_style_text_font(rtl_label, &lv_font_dejavu_16_persian_hebrew, 0);\nlv_obj_set_width(rtl_label, 310);\nlv_obj_align(rtl_label, LV_ALIGN_LEFT_MID, 5, 0);\n\nlv_obj_t * cz_label = lv_label_create(lv_screen_active());\nlv_label_set_text(cz_label,\n                  \"嵌入式系统（Embedded System），\\n是一种嵌入机械或电气系统内部、具有专一功能和实时计算性能的计算机系统。\");\nlv_obj_set_style_text_font(cz_label, &lv_font_simsun_16_cjk, 0);\nlv_obj_set_width(cz_label, 310);\nlv_obj_align(cz_label, LV_ALIGN_BOTTOM_LEFT, 5, -5);\n```\n\n</details>\n\n<details>\n  <summary>MicroPython code | <a href=\"https://sim.lvgl.io/v8.3/micropython/ports/javascript/index.html?script_startup=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/header.py&script=https://raw.githubusercontent.com/lvgl/lvgl/0d9ab4ee0e591aad1970e3c9164fd7c544ecce70/examples/widgets/slider/lv_example_slider_2.py&script_direct=18bb38200a64e10ead1aa17a65c977fc18131842\" target=\"_blank\">Online Simulator</a></summary>\n\n```python\nltr_label = lv.label(lv.screen_active())\nltr_label.set_text(\"In modern terminology, a microcontroller is similar to a system on a chip (SoC).\")\nltr_label.set_style_text_font(lv.font_montserrat_16, 0);\n\nltr_label.set_width(310)\nltr_label.align(lv.ALIGN.TOP_LEFT, 5, 5)\n\nrtl_label = lv.label(lv.screen_active())\nrtl_label.set_text(\"מעבד, או בשמו המלא יחידת עיבוד מרכזית (באנגלית: CPU - Central Processing Unit).\")\nrtl_label.set_style_base_dir(lv.BASE_DIR.RTL, 0)\nrtl_label.set_style_text_font(lv.font_dejavu_16_persian_hebrew, 0)\nrtl_label.set_width(310)\nrtl_label.align(lv.ALIGN.LEFT_MID, 5, 0)\n\nfont_simsun_16_cjk = lv.font_load(\"S:../../assets/font/lv_font_simsun_16_cjk.fnt\")\n\ncz_label = lv.label(lv.screen_active())\ncz_label.set_style_text_font(font_simsun_16_cjk, 0)\ncz_label.set_text(\"嵌入式系统（Embedded System），\\n是一种嵌入机械或电气系统内部、具有专一功能和实时计算性能的计算机系统。\")\ncz_label.set_width(310)\ncz_label.align(lv.ALIGN.BOTTOM_LEFT, 5, -5)\n\n```\n</details>\n\n## :arrow_forward: Get started\nThis list will guide you to get started with LVGL step-by-step.\n\n**Get Familiar with LVGL**\n\n  1. Check the [Online demos](https://lvgl.io/demos) to see LVGL in action (3 minutes).\n  2. Read the [Introduction](https://docs.lvgl.io/master/intro/index.html) page of the documentation (5 minutes).\n  3. Get familiar with the basics on the [Quick overview](https://docs.lvgl.io/master/intro/basics.html) page (15 minutes).\n\n**Start to Use LVGL**\n\n  4. Set up a [Simulator](https://docs.lvgl.io/master/details/integration/ide/pc-simulator.html#simulator) (10 minutes).\n  5. Try out some [Examples](https://github.com/lvgl/lvgl/tree/master/examples).\n  6. Port LVGL to a board. See the [Porting](https://docs.lvgl.io/master/intro/add-lvgl-to-your-project/index.html) guide or check out the ready-to-use [Projects](https://github.com/lvgl?q=lv_port_).\n\n**Become a Pro**\n\n  7. Read the [Main-Components](https://docs.lvgl.io/master/details/main-components/index.html) page to get a better understanding of the library (2-3 hours)\n  8. Check the documentation of the [Widgets](https://docs.lvgl.io/master/details/widgets/index.html) to see their features and usage\n\n**Get Help and Help Others**\n\n  9. If you have questions go to the [Forum](http://forum.lvgl.io/)\n  10. Read the [Contributing](https://docs.lvgl.io/master/CONTRIBUTING.html) guide to see how you can help to improve LVGL (15 minutes)\n\n\n## :handshake: Services\nLVGL LLC was established to provide a solid background for LVGL library and to offer several type of services to help you in UI development. With 15+ years of experience in the user interface and graphics industry we can help you the bring your UI to the next level.\n\n- **Graphics design** Our in-house graphics designers are experts in creating beautiful modern designs which fit to your product and the resources of your hardware.\n- **UI implementation** We can also implement your UI based on the design you or we have created. You can be sure that we will make the most out of your hardware and LVGL. If a feature or widget is missing from LVGL, don't worry, we will implement it for you.\n- **Consulting and Support** We can support you with consulting as well to avoid pricey and time consuming mistakes during the UI development.\n- **Board certification** For companies who are offering development boards, or production ready kits we do board certification which shows how board can run LVGL.\n\n\nCheck out our [Demos](https://lvgl.io/demos) as reference. For more information take look at the [Services page](https://lvgl.io/services).\n\n[Contact us](https://lvgl.io/#contact) and tell how we can help.\n\n\n## :star2: Contributing\nLVGL is an open project and contribution is very welcome. There are many ways to contribute from simply speaking about your project, through writing examples, improving the documentation, fixing bugs or even hosting your own project under the LVGL organization.\n\nFor a detailed description of contribution opportunities visit the [Contributing](https://docs.lvgl.io/master/CONTRIBUTING.html) section of the documentation.\n\nMore than 300 people already left their fingerprint in LVGL. Be one them! See you here! :slightly_smiling_face:\n\n<a href=\"https://github.com/lvgl/lvgl/graphs/contributors\">\n  <img src=\"https://contrib.rocks/image?repo=lvgl/lvgl&max=48\" />\n</a>\n\n... and many other.\n"
        },
        {
          "name": "SConscript",
          "type": "blob",
          "size": 0.1875,
          "content": "# RT-Thread building script for bridge\n\nimport os\nfrom building import *\n\nobjs = []\ncwd  = GetCurrentDir()\n\nobjs = objs + SConscript(cwd + '/env_support/rt-thread/SConscript')\n\nReturn('objs')\n"
        },
        {
          "name": "component.mk",
          "type": "blob",
          "size": 2.44921875,
          "content": "# ESP-IDF component file for make based commands\n\nCOMPONENT_SRCDIRS := . \\\n                  src \\\n                  src/core \\\n                  src/draw \\\n                  src/extra \\\n                  src/font \\\n                  src/hal \\\n                  src/misc \\\n                  src/widgets \\\n                  src/draw/arm2d \\\n                  src/draw/nxp \\\n                  src/draw/sdl \\\n                  src/draw/stm32_dma2d \\\n                  src/draw/sw \\\n                  src/draw/swm342_dma2d \\\n                  src/extra/layouts \\\n                  src/extra/libs \\\n                  src/extra/others \\\n                  src/extra/themes \\\n                  src/extra/widgets \\\n                  src/extra/layouts/flex \\\n                  src/extra/layouts/grid \\\n                  src/extra/libs/bmp \\\n                  src/extra/libs/ffmpeg \\\n                  src/extra/libs/freetype \\\n                  src/extra/libs/fsdrv \\\n                  src/extra/libs/gif \\\n                  src/extra/libs/png \\\n                  src/extra/libs/qrcode \\\n                  src/extra/libs/rlottie \\\n                  src/extra/libs/sjgp \\\n                  src/extra/others/fragment \\\n                  src/extra/others/gridnav \\\n                  src/extra/others/ime \\\n                  src/extra/others/imgfont \\\n                  src/extra/others/monkey \\\n                  src/extra/others/msg \\\n                  src/extra/others/snapshot \\\n                  src/extra/themes/basic \\\n                  src/extra/themes/default \\\n                  src/extra/themes/mono \\\n                  src/extra/widgets/animimg \\\n                  src/extra/widgets/calendar \\\n                  src/extra/widgets/chart \\\n                  src/extra/widgets/colorwheel \\\n                  src/extra/widgets/imgbtn \\\n                  src/extra/widgets/keyboard \\\n                  src/extra/widgets/led \\\n                  src/extra/widgets/list \\\n                  src/extra/widgets/menu \\\n                  src/extra/widgets/meter \\\n                  src/extra/widgets/msgbox \\\n                  src/extra/widgets/span \\\n                  src/extra/widgets/spinbox \\\n                  src/extra/widgets/spinner \\\n                  src/extra/widgets/tabview \\\n                  src/extra/widgets/tileview \\\n                  src/extra/widgets/win\n\nifeq ($(CONFIG_LV_USE_THORVG_INTERNAL),y)\nCOMPONENT_SRCDIRS += src/extra/libs/thorvg \nendif\n\nCOMPONENT_ADD_INCLUDEDIRS := $(COMPONENT_SRCDIRS) .\n"
        },
        {
          "name": "demos",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "env_support",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "idf_component.yml",
          "type": "blob",
          "size": 0.19921875,
          "content": "description: LVGL - Light and Versatile Graphics Library\nurl: https://lvgl.io/\nrepository: https://github.com/lvgl/lvgl.git\ndocumentation: https://docs.lvgl.io/\nissues: https://github.com/lvgl/lvgl/issues"
        },
        {
          "name": "library.json",
          "type": "blob",
          "size": 0.5166015625,
          "content": "{\n\t\"name\": \"lvgl\",\n\t\"version\": \"9.3.0-dev\",\n\t\"keywords\": \"graphics, gui, embedded, tft, lvgl\",\n\t\"description\": \"Graphics library to create embedded GUI with easy-to-use graphical elements, beautiful visual effects and low memory footprint. It offers anti-aliasing, opacity, and animations using only one frame buffer.\",\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"https://github.com/lvgl/lvgl.git\"\n\t},\n\t\"build\": {\n\t\t\"includeDir\": \".\"\n\t},\n\t\"license\": \"MIT\",\n\t\"homepage\": \"https://lvgl.io\",\n\t\"frameworks\": \"*\",\n\t\"platforms\": \"*\"\n}\n"
        },
        {
          "name": "library.properties",
          "type": "blob",
          "size": 0.384765625,
          "content": "name=lvgl\nversion=9.3.0-dev\nauthor=kisvegabor\nmaintainer=kisvegabor,embeddedt,pete-pjb\nsentence=Full-featured Graphics Library for Embedded Systems\nparagraph=Powerful and easy-to-use embedded GUI with many widgets, advanced visual effects (opacity, antialiasing, animations) and low memory requirements (16K RAM, 64K Flash).\ncategory=Display\nurl=https://lvgl.io\narchitectures=*\nincludes=lvgl.h\n"
        },
        {
          "name": "libs",
          "type": "tree",
          "content": null
        },
        {
          "name": "lv_conf_template.h",
          "type": "blob",
          "size": 43.69921875,
          "content": "/**\n * @file lv_conf.h\n * Configuration file for v9.3.0-dev\n */\n\n/*\n * Copy this file as `lv_conf.h`\n * 1. simply next to `lvgl` folder\n * 2. or to any other place and\n *    - define `LV_CONF_INCLUDE_SIMPLE`;\n *    - add the path as an include path.\n */\n\n/* clang-format off */\n#if 0 /* Set this to \"1\" to enable content */\n\n#ifndef LV_CONF_H\n#define LV_CONF_H\n\n/* If you need to include anything here, do it inside the `__ASSEMBLY__` guard */\n#if  0 && defined(__ASSEMBLY__)\n#include \"my_include.h\"\n#endif\n\n/*====================\n   COLOR SETTINGS\n *====================*/\n\n/** Color depth: 1 (I1), 8 (L8), 16 (RGB565), 24 (RGB888), 32 (XRGB8888) */\n#define LV_COLOR_DEPTH 16\n\n/*=========================\n   STDLIB WRAPPER SETTINGS\n *=========================*/\n\n/** Possible values\n * - LV_STDLIB_BUILTIN:     LVGL's built in implementation\n * - LV_STDLIB_CLIB:        Standard C functions, like malloc, strlen, etc\n * - LV_STDLIB_MICROPYTHON: MicroPython implementation\n * - LV_STDLIB_RTTHREAD:    RT-Thread implementation\n * - LV_STDLIB_CUSTOM:      Implement the functions externally\n */\n#define LV_USE_STDLIB_MALLOC    LV_STDLIB_BUILTIN\n\n/** Possible values\n * - LV_STDLIB_BUILTIN:     LVGL's built in implementation\n * - LV_STDLIB_CLIB:        Standard C functions, like malloc, strlen, etc\n * - LV_STDLIB_MICROPYTHON: MicroPython implementation\n * - LV_STDLIB_RTTHREAD:    RT-Thread implementation\n * - LV_STDLIB_CUSTOM:      Implement the functions externally\n */\n#define LV_USE_STDLIB_STRING    LV_STDLIB_BUILTIN\n\n/** Possible values\n * - LV_STDLIB_BUILTIN:     LVGL's built in implementation\n * - LV_STDLIB_CLIB:        Standard C functions, like malloc, strlen, etc\n * - LV_STDLIB_MICROPYTHON: MicroPython implementation\n * - LV_STDLIB_RTTHREAD:    RT-Thread implementation\n * - LV_STDLIB_CUSTOM:      Implement the functions externally\n */\n#define LV_USE_STDLIB_SPRINTF   LV_STDLIB_BUILTIN\n\n#define LV_STDINT_INCLUDE       <stdint.h>\n#define LV_STDDEF_INCLUDE       <stddef.h>\n#define LV_STDBOOL_INCLUDE      <stdbool.h>\n#define LV_INTTYPES_INCLUDE     <inttypes.h>\n#define LV_LIMITS_INCLUDE       <limits.h>\n#define LV_STDARG_INCLUDE       <stdarg.h>\n\n#if LV_USE_STDLIB_MALLOC == LV_STDLIB_BUILTIN\n    /** Size of memory available for `lv_malloc()` in bytes (>= 2kB) */\n    #define LV_MEM_SIZE (64 * 1024U)          /**< [bytes] */\n\n    /** Size of the memory expand for `lv_malloc()` in bytes */\n    #define LV_MEM_POOL_EXPAND_SIZE 0\n\n    /** Set an address for the memory pool instead of allocating it as a normal array. Can be in external SRAM too. */\n    #define LV_MEM_ADR 0     /**< 0: unused*/\n    /* Instead of an address give a memory allocator that will be called to get a memory pool for LVGL. E.g. my_malloc */\n    #if LV_MEM_ADR == 0\n        #undef LV_MEM_POOL_INCLUDE\n        #undef LV_MEM_POOL_ALLOC\n    #endif\n#endif  /*LV_USE_STDLIB_MALLOC == LV_STDLIB_BUILTIN*/\n\n/*====================\n   HAL SETTINGS\n *====================*/\n\n/** Default display refresh, input device read and animation step period. */\n#define LV_DEF_REFR_PERIOD  33      /**< [ms] */\n\n/** Default Dots Per Inch. Used to initialize default sizes such as widgets sized, style paddings.\n * (Not so important, you can adjust it to modify default sizes and spaces.) */\n#define LV_DPI_DEF 130              /**< [px/inch] */\n\n/*=================\n * OPERATING SYSTEM\n *=================*/\n/** Select operating system to use. Possible options:\n * - LV_OS_NONE\n * - LV_OS_PTHREAD\n * - LV_OS_FREERTOS\n * - LV_OS_CMSIS_RTOS2\n * - LV_OS_RTTHREAD\n * - LV_OS_WINDOWS\n * - LV_OS_MQX\n * - LV_OS_SDL2\n * - LV_OS_CUSTOM */\n#define LV_USE_OS   LV_OS_NONE\n\n#if LV_USE_OS == LV_OS_CUSTOM\n    #define LV_OS_CUSTOM_INCLUDE <stdint.h>\n#endif\n#if LV_USE_OS == LV_OS_FREERTOS\n\t/*\n\t * Unblocking an RTOS task with a direct notification is 45% faster and uses less RAM\n\t * than unblocking a task using an intermediary object such as a binary semaphore.\n\t * RTOS task notifications can only be used when there is only one task that can be the recipient of the event.\n\t */\n\t#define LV_USE_FREERTOS_TASK_NOTIFY 1\n#endif\n\n/*========================\n * RENDERING CONFIGURATION\n *========================*/\n\n/** Align stride of all layers and images to this bytes */\n#define LV_DRAW_BUF_STRIDE_ALIGN                1\n\n/** Align start address of draw_buf addresses to this bytes*/\n#define LV_DRAW_BUF_ALIGN                       4\n\n/** Using matrix for transformations.\n * Requirements:\n * - `LV_USE_MATRIX = 1`.\n * - Rendering engine needs to support 3x3 matrix transformations. */\n#define LV_DRAW_TRANSFORM_USE_MATRIX            0\n\n/* If a widget has `style_opa < 255` (not `bg_opa`, `text_opa` etc) or not NORMAL blend mode\n * it is buffered into a \"simple\" layer before rendering. The widget can be buffered in smaller chunks.\n * \"Transformed layers\" (if `transform_angle/zoom` are set) use larger buffers\n * and can't be drawn in chunks. */\n\n/** The target buffer size for simple layer chunks. */\n#define LV_DRAW_LAYER_SIMPLE_BUF_SIZE    (24 * 1024)    /**< [bytes]*/\n\n/* Limit the max allocated memory for simple and transformed layers.\n * It should be at least `LV_DRAW_LAYER_SIMPLE_BUF_SIZE` sized but if transformed layers are also used\n * it should be enough to store the largest widget too (width x height x 4 area).\n * Set it to 0 to have no limit. */\n#define LV_DRAW_LAYER_MAX_MEMORY 0  /**< No limit by default [bytes]*/\n\n/** Stack size of drawing thread.\n * NOTE: If FreeType or ThorVG is enabled, it is recommended to set it to 32KB or more.\n */\n#define LV_DRAW_THREAD_STACK_SIZE    (8 * 1024)         /**< [bytes]*/\n\n#define LV_USE_DRAW_SW 1\n#if LV_USE_DRAW_SW == 1\n    /*\n     * Selectively disable color format support in order to reduce code size.\n     * NOTE: some features use certain color formats internally, e.g.\n     * - gradients use RGB888\n     * - bitmaps with transparency may use ARGB8888\n     */\n    #define LV_DRAW_SW_SUPPORT_RGB565       1\n    #define LV_DRAW_SW_SUPPORT_RGB565A8     1\n    #define LV_DRAW_SW_SUPPORT_RGB888       1\n    #define LV_DRAW_SW_SUPPORT_XRGB8888     1\n    #define LV_DRAW_SW_SUPPORT_ARGB8888     1\n    #define LV_DRAW_SW_SUPPORT_L8           1\n    #define LV_DRAW_SW_SUPPORT_AL88         1\n    #define LV_DRAW_SW_SUPPORT_A8           1\n    #define LV_DRAW_SW_SUPPORT_I1           1\n\n    /** Set number of draw units.\n     *  - > 1 requires operating system to be enabled in `LV_USE_OS`.\n     *  - > 1 means multiple threads will render the screen in parallel. */\n    #define LV_DRAW_SW_DRAW_UNIT_CNT    1\n\n    /** Use Arm-2D to accelerate software (sw) rendering. */\n    #define LV_USE_DRAW_ARM2D_SYNC      0\n\n    /** Enable native helium assembly to be compiled. */\n    #define LV_USE_NATIVE_HELIUM_ASM    0\n\n    /**\n     * - 0: Use a simple renderer capable of drawing only simple rectangles with gradient, images, text, and straight lines only.\n     * - 1: Use a complex renderer capable of drawing rounded corners, shadow, skew lines, and arcs too. */\n    #define LV_DRAW_SW_COMPLEX          1\n\n    #if LV_DRAW_SW_COMPLEX == 1\n        /** Allow buffering some shadow calculation.\n         *  LV_DRAW_SW_SHADOW_CACHE_SIZE is the maximum shadow size to buffer, where shadow size is\n         *  `shadow_width + radius`.  Caching has LV_DRAW_SW_SHADOW_CACHE_SIZE^2 RAM cost. */\n        #define LV_DRAW_SW_SHADOW_CACHE_SIZE 0\n\n        /** Set number of maximally-cached circle data.\n         *  The circumference of 1/4 circle are saved for anti-aliasing.\n         *  `radius * 4` bytes are used per circle (the most often used radiuses are saved).\n         *  - 0: disables caching */\n        #define LV_DRAW_SW_CIRCLE_CACHE_SIZE 4\n    #endif\n\n    #define  LV_USE_DRAW_SW_ASM     LV_DRAW_SW_ASM_NONE\n\n    #if LV_USE_DRAW_SW_ASM == LV_DRAW_SW_ASM_CUSTOM\n        #define  LV_DRAW_SW_ASM_CUSTOM_INCLUDE \"\"\n    #endif\n\n    /** Enable drawing complex gradients in software: linear at an angle, radial or conical */\n    #define LV_USE_DRAW_SW_COMPLEX_GRADIENTS    0\n#endif\n\n/*Use TSi's aka (Think Silicon) NemaGFX */\n#define LV_USE_NEMA_GFX 0\n\n#if LV_USE_NEMA_GFX\n    /** Select which NemaGFX HAL to use. Possible options:\n     * - LV_NEMA_HAL_CUSTOM\n     * - LV_NEMA_HAL_STM32 */\n    #define LV_USE_NEMA_HAL LV_NEMA_HAL_CUSTOM\n    #if LV_USE_NEMA_HAL == LV_NEMA_HAL_STM32\n        #define LV_NEMA_STM32_HAL_INCLUDE <stm32u5xx_hal.h>\n    #endif\n\n    /*Enable Vector Graphics Operations. Available only if NemaVG library is present*/\n    #define LV_USE_NEMA_VG 0\n    #if LV_USE_NEMA_VG\n        /*Define application's resolution used for VG related buffer allocation */\n        #define LV_NEMA_GFX_MAX_RESX 800\n        #define LV_NEMA_GFX_MAX_RESY 600\n    #endif\n#endif\n\n/** Use NXP's VG-Lite GPU on iMX RTxxx platforms. */\n#define LV_USE_DRAW_VGLITE 0\n\n#if LV_USE_DRAW_VGLITE\n    /** Enable blit quality degradation workaround recommended for screen's dimension > 352 pixels. */\n    #define LV_USE_VGLITE_BLIT_SPLIT 0\n\n    #if LV_USE_OS\n        /** Use additional draw thread for VG-Lite processing. */\n        #define LV_USE_VGLITE_DRAW_THREAD 1\n\n        #if LV_USE_VGLITE_DRAW_THREAD\n            /** Enable VGLite draw async. Queue multiple tasks and flash them once to the GPU. */\n            #define LV_USE_VGLITE_DRAW_ASYNC 1\n        #endif\n    #endif\n\n    /** Enable VGLite asserts. */\n    #define LV_USE_VGLITE_ASSERT 0\n#endif\n\n/** Use NXP's PXP on iMX RTxxx platforms. */\n#define LV_USE_PXP 0\n\n#if LV_USE_PXP\n    /** Use PXP for drawing.*/\n    #define LV_USE_DRAW_PXP 1\n\n    /** Use PXP to rotate display.*/\n    #define LV_USE_ROTATE_PXP 0\n\n    #if LV_USE_DRAW_PXP && LV_USE_OS\n        /** Use additional draw thread for PXP processing.*/\n        #define LV_USE_PXP_DRAW_THREAD 1\n    #endif\n\n    /** Enable PXP asserts. */\n    #define LV_USE_PXP_ASSERT 0\n#endif\n\n/** Use Renesas Dave2D on RA  platforms. */\n#define LV_USE_DRAW_DAVE2D 0\n\n/** Draw using cached SDL textures*/\n#define LV_USE_DRAW_SDL 0\n\n/** Use VG-Lite GPU. */\n#define LV_USE_DRAW_VG_LITE 0\n\n#if LV_USE_DRAW_VG_LITE\n    /** Enable VG-Lite custom external 'gpu_init()' function */\n    #define LV_VG_LITE_USE_GPU_INIT 0\n\n    /** Enable VG-Lite assert. */\n    #define LV_VG_LITE_USE_ASSERT 0\n\n    /** VG-Lite flush commit trigger threshold. GPU will try to batch these many draw tasks. */\n    #define LV_VG_LITE_FLUSH_MAX_COUNT 8\n\n    /** Enable border to simulate shadow.\n     *  NOTE: which usually improves performance,\n     *  but does not guarantee the same rendering quality as the software. */\n    #define LV_VG_LITE_USE_BOX_SHADOW 0\n\n    /** VG-Lite gradient maximum cache number.\n     *  @note  The memory usage of a single gradient image is 4K bytes. */\n    #define LV_VG_LITE_GRAD_CACHE_CNT 32\n\n    /** VG-Lite stroke maximum cache number. */\n    #define LV_VG_LITE_STROKE_CACHE_CNT 32\n#endif\n\n/** Accelerate blends, fills, etc. with STM32 DMA2D */\n#define LV_USE_DRAW_DMA2D 0\n\n#if LV_USE_DRAW_DMA2D\n    #define LV_DRAW_DMA2D_HAL_INCLUDE \"stm32h7xx_hal.h\"\n\n    /* if enabled, the user is required to call `lv_draw_dma2d_transfer_complete_interrupt_handler`\n     * upon receiving the DMA2D global interrupt\n     */\n    #define LV_USE_DRAW_DMA2D_INTERRUPT 0\n#endif\n\n/** Draw using cached OpenGLES textures */\n#define LV_USE_DRAW_OPENGLES 0\n\n/*=======================\n * FEATURE CONFIGURATION\n *=======================*/\n\n/*-------------\n * Logging\n *-----------*/\n\n/** Enable log module */\n#define LV_USE_LOG 0\n#if LV_USE_LOG\n    /** Set value to one of the following levels of logging detail:\n     *  - LV_LOG_LEVEL_TRACE    Log detailed information.\n     *  - LV_LOG_LEVEL_INFO     Log important events.\n     *  - LV_LOG_LEVEL_WARN     Log if something unwanted happened but didn't cause a problem.\n     *  - LV_LOG_LEVEL_ERROR    Log only critical issues, when system may fail.\n     *  - LV_LOG_LEVEL_USER     Log only custom log messages added by the user.\n     *  - LV_LOG_LEVEL_NONE     Do not log anything. */\n    #define LV_LOG_LEVEL LV_LOG_LEVEL_WARN\n\n    /** - 1: Print log with 'printf';\n     *  - 0: User needs to register a callback with `lv_log_register_print_cb()`. */\n    #define LV_LOG_PRINTF 0\n\n    /** Set callback to print logs.\n     *  E.g `my_print`. The prototype should be `void my_print(lv_log_level_t level, const char * buf)`.\n     *  Can be overwritten by `lv_log_register_print_cb`. */\n    //#define LV_LOG_PRINT_CB\n\n    /** - 1: Enable printing timestamp;\n     *  - 0: Disable printing timestamp. */\n    #define LV_LOG_USE_TIMESTAMP 1\n\n    /** - 1: Print file and line number of the log;\n     *  - 0: Do not print file and line number of the log. */\n    #define LV_LOG_USE_FILE_LINE 1\n\n    /* Enable/disable LV_LOG_TRACE in modules that produces a huge number of logs. */\n    #define LV_LOG_TRACE_MEM        1   /**< Enable/disable trace logs in memory operations. */\n    #define LV_LOG_TRACE_TIMER      1   /**< Enable/disable trace logs in timer operations. */\n    #define LV_LOG_TRACE_INDEV      1   /**< Enable/disable trace logs in input device operations. */\n    #define LV_LOG_TRACE_DISP_REFR  1   /**< Enable/disable trace logs in display re-draw operations. */\n    #define LV_LOG_TRACE_EVENT      1   /**< Enable/disable trace logs in event dispatch logic. */\n    #define LV_LOG_TRACE_OBJ_CREATE 1   /**< Enable/disable trace logs in object creation (core `obj` creation plus every widget). */\n    #define LV_LOG_TRACE_LAYOUT     1   /**< Enable/disable trace logs in flex- and grid-layout operations. */\n    #define LV_LOG_TRACE_ANIM       1   /**< Enable/disable trace logs in animation logic. */\n    #define LV_LOG_TRACE_CACHE      1   /**< Enable/disable trace logs in cache operations. */\n#endif  /*LV_USE_LOG*/\n\n/*-------------\n * Asserts\n *-----------*/\n\n/* Enable assertion failures if an operation fails or invalid data is found.\n * If LV_USE_LOG is enabled, an error message will be printed on failure. */\n#define LV_USE_ASSERT_NULL          1   /**< Check if the parameter is NULL. (Very fast, recommended) */\n#define LV_USE_ASSERT_MALLOC        1   /**< Checks is the memory is successfully allocated or no. (Very fast, recommended) */\n#define LV_USE_ASSERT_STYLE         0   /**< Check if the styles are properly initialized. (Very fast, recommended) */\n#define LV_USE_ASSERT_MEM_INTEGRITY 0   /**< Check the integrity of `lv_mem` after critical operations. (Slow) */\n#define LV_USE_ASSERT_OBJ           0   /**< Check the object's type and existence (e.g. not deleted). (Slow) */\n\n/** Add a custom handler when assert happens e.g. to restart MCU. */\n#define LV_ASSERT_HANDLER_INCLUDE <stdint.h>\n#define LV_ASSERT_HANDLER while(1);     /**< Halt by default */\n\n/*-------------\n * Debug\n *-----------*/\n\n/** 1: Draw random colored rectangles over the redrawn areas. */\n#define LV_USE_REFR_DEBUG 0\n\n/** 1: Draw a red overlay for ARGB layers and a green overlay for RGB layers*/\n#define LV_USE_LAYER_DEBUG 0\n\n/** 1: Adds the following behaviors for debugging:\n *  - Draw overlays with different colors for each draw_unit's tasks.\n *  - Draw index number of draw unit on white background.\n *  - For layers, draws index number of draw unit on black background. */\n#define LV_USE_PARALLEL_DRAW_DEBUG 0\n\n/*-------------\n * Others\n *-----------*/\n\n#define LV_ENABLE_GLOBAL_CUSTOM 0\n#if LV_ENABLE_GLOBAL_CUSTOM\n    /** Header to include for custom 'lv_global' function\" */\n    #define LV_GLOBAL_CUSTOM_INCLUDE <stdint.h>\n#endif\n\n/** Default cache size in bytes.\n *  Used by image decoders such as `lv_lodepng` to keep the decoded image in memory.\n *  If size is not set to 0, the decoder will fail to decode when the cache is full.\n *  If size is 0, the cache function is not enabled and the decoded memory will be\n *  released immediately after use. */\n#define LV_CACHE_DEF_SIZE       0\n\n/** Default number of image header cache entries. The cache is used to store the headers of images\n *  The main logic is like `LV_CACHE_DEF_SIZE` but for image headers. */\n#define LV_IMAGE_HEADER_CACHE_DEF_CNT 0\n\n/** Number of stops allowed per gradient. Increase this to allow more stops.\n *  This adds (sizeof(lv_color_t) + 1) bytes per additional stop. */\n#define LV_GRADIENT_MAX_STOPS   2\n\n/** Adjust color mix functions rounding. GPUs might calculate color mix (blending) differently.\n *  - 0:   round down,\n *  - 64:  round up from x.75,\n *  - 128: round up from half,\n *  - 192: round up from x.25,\n *  - 254: round up */\n#define LV_COLOR_MIX_ROUND_OFS  0\n\n/** Add 2 x 32-bit variables to each `lv_obj_t` to speed up getting style properties */\n#define LV_OBJ_STYLE_CACHE      0\n\n/** Add `id` field to `lv_obj_t` */\n#define LV_USE_OBJ_ID           0\n\n/** Automatically assign an ID when obj is created */\n#define LV_OBJ_ID_AUTO_ASSIGN   LV_USE_OBJ_ID\n\n/** Use builtin obj ID handler functions:\n* - lv_obj_assign_id:       Called when a widget is created. Use a separate counter for each widget class as an ID.\n* - lv_obj_id_compare:      Compare the ID to decide if it matches with a requested value.\n* - lv_obj_stringify_id:    Return string-ified identifier, e.g. \"button3\".\n* - lv_obj_free_id:         Does nothing, as there is no memory allocation for the ID.\n* When disabled these functions needs to be implemented by the user.*/\n#define LV_USE_OBJ_ID_BUILTIN   1\n\n/** Use obj property set/get API. */\n#define LV_USE_OBJ_PROPERTY 0\n\n/** Enable property name support. */\n#define LV_USE_OBJ_PROPERTY_NAME 1\n\n/* Use VG-Lite Simulator.\n * - Requires: LV_USE_THORVG_INTERNAL or LV_USE_THORVG_EXTERNAL */\n#define LV_USE_VG_LITE_THORVG  0\n\n#if LV_USE_VG_LITE_THORVG\n    /** Enable LVGL's blend mode support */\n    #define LV_VG_LITE_THORVG_LVGL_BLEND_SUPPORT 0\n\n    /** Enable YUV color format support */\n    #define LV_VG_LITE_THORVG_YUV_SUPPORT 0\n\n    /** Enable Linear gradient extension support */\n    #define LV_VG_LITE_THORVG_LINEAR_GRADIENT_EXT_SUPPORT 0\n\n    /** Enable alignment on 16 pixels */\n    #define LV_VG_LITE_THORVG_16PIXELS_ALIGN 1\n\n    /** Buffer address alignment */\n    #define LV_VG_LITE_THORVG_BUF_ADDR_ALIGN 64\n\n    /** Enable multi-thread render */\n    #define LV_VG_LITE_THORVG_THREAD_RENDER 0\n#endif\n\n/* Enable the multi-touch gesture recognition feature */\n/* Gesture recognition requires the use of floats */\n#define LV_USE_GESTURE_RECOGNITION 0\n\n/*=====================\n *  COMPILER SETTINGS\n *====================*/\n\n/** For big endian systems set to 1 */\n#define LV_BIG_ENDIAN_SYSTEM 0\n\n/** Define a custom attribute for `lv_tick_inc` function */\n#define LV_ATTRIBUTE_TICK_INC\n\n/** Define a custom attribute for `lv_timer_handler` function */\n#define LV_ATTRIBUTE_TIMER_HANDLER\n\n/** Define a custom attribute for `lv_display_flush_ready` function */\n#define LV_ATTRIBUTE_FLUSH_READY\n\n/** Align VG_LITE buffers on this number of bytes.\n *  @note  vglite_src_buf_aligned() uses this value to validate alignment of passed buffer pointers. */\n#define LV_ATTRIBUTE_MEM_ALIGN_SIZE 1\n\n/** Will be added where memory needs to be aligned (with -Os data might not be aligned to boundary by default).\n *  E.g. __attribute__((aligned(4)))*/\n#define LV_ATTRIBUTE_MEM_ALIGN\n\n/** Attribute to mark large constant arrays, for example for font bitmaps */\n#define LV_ATTRIBUTE_LARGE_CONST\n\n/** Compiler prefix for a large array declaration in RAM */\n#define LV_ATTRIBUTE_LARGE_RAM_ARRAY\n\n/** Place performance critical functions into a faster memory (e.g RAM) */\n#define LV_ATTRIBUTE_FAST_MEM\n\n/** Export integer constant to binding. This macro is used with constants in the form of LV_<CONST> that\n *  should also appear on LVGL binding API such as MicroPython. */\n#define LV_EXPORT_CONST_INT(int_value) struct _silence_gcc_warning  /**< The default value just prevents GCC warning */\n\n/** Prefix all global extern data with this */\n#define LV_ATTRIBUTE_EXTERN_DATA\n\n/** Use `float` as `lv_value_precise_t` */\n#define LV_USE_FLOAT            0\n\n/** Enable matrix support\n *  - Requires `LV_USE_FLOAT = 1` */\n#define LV_USE_MATRIX           0\n\n/** Include `lvgl_private.h` in `lvgl.h` to access internal data and functions by default */\n#define LV_USE_PRIVATE_API\t\t0\n\n/*==================\n *   FONT USAGE\n *===================*/\n\n/* Montserrat fonts with ASCII range and some symbols using bpp = 4\n * https://fonts.google.com/specimen/Montserrat */\n#define LV_FONT_MONTSERRAT_8  0\n#define LV_FONT_MONTSERRAT_10 0\n#define LV_FONT_MONTSERRAT_12 0\n#define LV_FONT_MONTSERRAT_14 1\n#define LV_FONT_MONTSERRAT_16 0\n#define LV_FONT_MONTSERRAT_18 0\n#define LV_FONT_MONTSERRAT_20 0\n#define LV_FONT_MONTSERRAT_22 0\n#define LV_FONT_MONTSERRAT_24 0\n#define LV_FONT_MONTSERRAT_26 0\n#define LV_FONT_MONTSERRAT_28 0\n#define LV_FONT_MONTSERRAT_30 0\n#define LV_FONT_MONTSERRAT_32 0\n#define LV_FONT_MONTSERRAT_34 0\n#define LV_FONT_MONTSERRAT_36 0\n#define LV_FONT_MONTSERRAT_38 0\n#define LV_FONT_MONTSERRAT_40 0\n#define LV_FONT_MONTSERRAT_42 0\n#define LV_FONT_MONTSERRAT_44 0\n#define LV_FONT_MONTSERRAT_46 0\n#define LV_FONT_MONTSERRAT_48 0\n\n/* Demonstrate special features */\n#define LV_FONT_MONTSERRAT_28_COMPRESSED 0  /**< bpp = 3 */\n#define LV_FONT_DEJAVU_16_PERSIAN_HEBREW 0  /**< Hebrew, Arabic, Persian letters and all their forms */\n#define LV_FONT_SIMSUN_14_CJK            0  /**< 1000 most common CJK radicals */\n#define LV_FONT_SIMSUN_16_CJK            0  /**< 1000 most common CJK radicals */\n\n/** Pixel perfect monospaced fonts */\n#define LV_FONT_UNSCII_8  0\n#define LV_FONT_UNSCII_16 0\n\n/** Optionally declare custom fonts here.\n *\n *  You can use any of these fonts as the default font too and they will be available\n *  globally.  Example:\n *\n *  @code\n *  #define LV_FONT_CUSTOM_DECLARE   LV_FONT_DECLARE(my_font_1) LV_FONT_DECLARE(my_font_2)\n *  @endcode\n */\n#define LV_FONT_CUSTOM_DECLARE\n\n/** Always set a default font */\n#define LV_FONT_DEFAULT &lv_font_montserrat_14\n\n/** Enable handling large font and/or fonts with a lot of characters.\n *  The limit depends on the font size, font face and bpp.\n *  A compiler error will be triggered if a font needs it. */\n#define LV_FONT_FMT_TXT_LARGE 0\n\n/** Enables/disables support for compressed fonts. */\n#define LV_USE_FONT_COMPRESSED 0\n\n/** Enable drawing placeholders when glyph dsc is not found. */\n#define LV_USE_FONT_PLACEHOLDER 1\n\n/*=================\n *  TEXT SETTINGS\n *=================*/\n\n/**\n * Select a character encoding for strings.\n * Your IDE or editor should have the same character encoding.\n * - LV_TXT_ENC_UTF8\n * - LV_TXT_ENC_ASCII\n */\n#define LV_TXT_ENC LV_TXT_ENC_UTF8\n\n/** While rendering text strings, break (wrap) text on these chars. */\n#define LV_TXT_BREAK_CHARS \" ,.;:-_)]}\"\n\n/** If a word is at least this long, will break wherever \"prettiest\".\n *  To disable, set to a value <= 0. */\n#define LV_TXT_LINE_BREAK_LONG_LEN 0\n\n/** Minimum number of characters in a long word to put on a line before a break.\n *  Depends on LV_TXT_LINE_BREAK_LONG_LEN. */\n#define LV_TXT_LINE_BREAK_LONG_PRE_MIN_LEN 3\n\n/** Minimum number of characters in a long word to put on a line after a break.\n *  Depends on LV_TXT_LINE_BREAK_LONG_LEN. */\n#define LV_TXT_LINE_BREAK_LONG_POST_MIN_LEN 3\n\n/** Support bidirectional text. Allows mixing Left-to-Right and Right-to-Left text.\n *  The direction will be processed according to the Unicode Bidirectional Algorithm:\n *  https://www.w3.org/International/articles/inline-bidi-markup/uba-basics */\n#define LV_USE_BIDI 0\n#if LV_USE_BIDI\n    /*Set the default direction. Supported values:\n    *`LV_BASE_DIR_LTR` Left-to-Right\n    *`LV_BASE_DIR_RTL` Right-to-Left\n    *`LV_BASE_DIR_AUTO` detect text base direction*/\n    #define LV_BIDI_BASE_DIR_DEF LV_BASE_DIR_AUTO\n#endif\n\n/** Enable Arabic/Persian processing\n *  In these languages characters should be replaced with another form based on their position in the text */\n#define LV_USE_ARABIC_PERSIAN_CHARS 0\n\n/*The control character to use for signaling text recoloring*/\n#define LV_TXT_COLOR_CMD \"#\"\n\n/*==================\n * WIDGETS\n *================*/\n/* Documentation for widgets can be found here: https://docs.lvgl.io/latest/en/html/widgets/index.html . */\n\n/** 1: Causes these widgets to be given default values at creation time.\n *  - lv_buttonmatrix_t:  Get default maps:  {\"Btn1\", \"Btn2\", \"Btn3\", \"\\n\", \"Btn4\", \"Btn5\", \"\"}, else map not set.\n *  - lv_checkbox_t    :  String label set to \"Check box\", else set to empty string.\n *  - lv_dropdown_t    :  Options set to \"Option 1\", \"Option 2\", \"Option 3\", else no values are set.\n *  - lv_roller_t      :  Options set to \"Option 1\", \"Option 2\", \"Option 3\", \"Option 4\", \"Option 5\", else no values are set.\n *  - lv_label_t       :  Text set to \"Text\", else empty string.\n * */\n#define LV_WIDGETS_HAS_DEFAULT_VALUE  1\n\n#define LV_USE_ANIMIMG    1\n\n#define LV_USE_ARC        1\n\n#define LV_USE_BAR        1\n\n#define LV_USE_BUTTON        1\n\n#define LV_USE_BUTTONMATRIX  1\n\n#define LV_USE_CALENDAR   1\n#if LV_USE_CALENDAR\n    #define LV_CALENDAR_WEEK_STARTS_MONDAY 0\n    #if LV_CALENDAR_WEEK_STARTS_MONDAY\n        #define LV_CALENDAR_DEFAULT_DAY_NAMES {\"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\", \"Su\"}\n    #else\n        #define LV_CALENDAR_DEFAULT_DAY_NAMES {\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"}\n    #endif\n\n    #define LV_CALENDAR_DEFAULT_MONTH_NAMES {\"January\", \"February\", \"March\",  \"April\", \"May\",  \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"}\n    #define LV_USE_CALENDAR_HEADER_ARROW 1\n    #define LV_USE_CALENDAR_HEADER_DROPDOWN 1\n    #define LV_USE_CALENDAR_CHINESE 0\n#endif  /*LV_USE_CALENDAR*/\n\n#define LV_USE_CANVAS     1\n\n#define LV_USE_CHART      1\n\n#define LV_USE_CHECKBOX   1\n\n#define LV_USE_DROPDOWN   1   /**< Requires: lv_label */\n\n#define LV_USE_IMAGE      1   /**< Requires: lv_label */\n\n#define LV_USE_IMAGEBUTTON     1\n\n#define LV_USE_KEYBOARD   1\n\n#define LV_USE_LABEL      1\n#if LV_USE_LABEL\n    #define LV_LABEL_TEXT_SELECTION 1   /**< Enable selecting text of the label */\n    #define LV_LABEL_LONG_TXT_HINT 1    /**< Store some extra info in labels to speed up drawing of very long text */\n    #define LV_LABEL_WAIT_CHAR_COUNT 3  /**< The count of wait chart */\n#endif\n\n#define LV_USE_LED        1\n\n#define LV_USE_LINE       1\n\n#define LV_USE_LIST       1\n\n#define LV_USE_LOTTIE     0  /**< Requires: lv_canvas, thorvg */\n\n#define LV_USE_MENU       1\n\n#define LV_USE_MSGBOX     1\n\n#define LV_USE_ROLLER     1   /**< Requires: lv_label */\n\n#define LV_USE_SCALE      1\n\n#define LV_USE_SLIDER     1   /**< Requires: lv_bar */\n\n#define LV_USE_SPAN       1\n#if LV_USE_SPAN\n    /** A line of text can contain this maximum number of span descriptors. */\n    #define LV_SPAN_SNIPPET_STACK_SIZE 64\n#endif\n\n#define LV_USE_SPINBOX    1\n\n#define LV_USE_SPINNER    1\n\n#define LV_USE_SWITCH     1\n\n#define LV_USE_TABLE      1\n\n#define LV_USE_TABVIEW    1\n\n#define LV_USE_TEXTAREA   1   /**< Requires: lv_label */\n#if LV_USE_TEXTAREA != 0\n    #define LV_TEXTAREA_DEF_PWD_SHOW_TIME 1500    /**< [ms] */\n#endif\n\n#define LV_USE_TILEVIEW   1\n\n#define LV_USE_WIN        1\n\n/*==================\n * THEMES\n *==================*/\n/* Documentation for themes can be found here: https://docs.lvgl.io/master/overview/style.html#themes . */\n\n/** A simple, impressive and very complete theme */\n#define LV_USE_THEME_DEFAULT 1\n#if LV_USE_THEME_DEFAULT\n    /** 0: Light mode; 1: Dark mode */\n    #define LV_THEME_DEFAULT_DARK 0\n\n    /** 1: Enable grow on press */\n    #define LV_THEME_DEFAULT_GROW 1\n\n    /** Default transition time in ms. */\n    #define LV_THEME_DEFAULT_TRANSITION_TIME 80\n#endif /*LV_USE_THEME_DEFAULT*/\n\n/** A very simple theme that is a good starting point for a custom theme */\n#define LV_USE_THEME_SIMPLE 1\n\n/** A theme designed for monochrome displays */\n#define LV_USE_THEME_MONO 1\n\n/*==================\n * LAYOUTS\n *==================*/\n/* Documentation for layouts can be found here: https://docs.lvgl.io/master/layouts/index.html . */\n\n/** A layout similar to Flexbox in CSS. */\n#define LV_USE_FLEX 1\n\n/** A layout similar to Grid in CSS. */\n#define LV_USE_GRID 1\n\n/*====================\n * 3RD PARTS LIBRARIES\n *====================*/\n/* Documentation for libraries can be found here: https://docs.lvgl.io/master/libs/index.html . */\n\n/* File system interfaces for common APIs */\n\n/** Setting a default driver letter allows skipping the driver prefix in filepaths. */\n#define LV_FS_DEFAULT_DRIVER_LETTER '\\0'\n\n/** API for fopen, fread, etc. */\n#define LV_USE_FS_STDIO 0\n#if LV_USE_FS_STDIO\n    #define LV_FS_STDIO_LETTER '\\0'     /**< Set an upper cased letter on which the drive will accessible (e.g. 'A') */\n    #define LV_FS_STDIO_PATH \"\"         /**< Set the working directory. File/directory paths will be appended to it. */\n    #define LV_FS_STDIO_CACHE_SIZE 0    /**< >0 to cache this number of bytes in lv_fs_read() */\n#endif\n\n/** API for open, read, etc. */\n#define LV_USE_FS_POSIX 0\n#if LV_USE_FS_POSIX\n    #define LV_FS_POSIX_LETTER '\\0'     /**< Set an upper cased letter on which the drive will accessible (e.g. 'A') */\n    #define LV_FS_POSIX_PATH \"\"         /**< Set the working directory. File/directory paths will be appended to it. */\n    #define LV_FS_POSIX_CACHE_SIZE 0    /**< >0 to cache this number of bytes in lv_fs_read() */\n#endif\n\n/** API for CreateFile, ReadFile, etc. */\n#define LV_USE_FS_WIN32 0\n#if LV_USE_FS_WIN32\n    #define LV_FS_WIN32_LETTER '\\0'     /**< Set an upper cased letter on which the drive will accessible (e.g. 'A') */\n    #define LV_FS_WIN32_PATH \"\"         /**< Set the working directory. File/directory paths will be appended to it. */\n    #define LV_FS_WIN32_CACHE_SIZE 0    /**< >0 to cache this number of bytes in lv_fs_read() */\n#endif\n\n/** API for FATFS (needs to be added separately). Uses f_open, f_read, etc. */\n#define LV_USE_FS_FATFS 0\n#if LV_USE_FS_FATFS\n    #define LV_FS_FATFS_LETTER '\\0'     /**< Set an upper cased letter on which the drive will accessible (e.g. 'A') */\n    #define LV_FS_FATFS_PATH \"\"         /**< Set the working directory. File/directory paths will be appended to it. */\n    #define LV_FS_FATFS_CACHE_SIZE 0    /**< >0 to cache this number of bytes in lv_fs_read() */\n#endif\n\n/** API for memory-mapped file access. */\n#define LV_USE_FS_MEMFS 0\n#if LV_USE_FS_MEMFS\n    #define LV_FS_MEMFS_LETTER '\\0'     /**< Set an upper cased letter on which the drive will accessible (e.g. 'A') */\n#endif\n\n/** API for LittleFs. */\n#define LV_USE_FS_LITTLEFS 0\n#if LV_USE_FS_LITTLEFS\n    #define LV_FS_LITTLEFS_LETTER '\\0'  /**< Set an upper cased letter on which the drive will accessible (e.g. 'A') */\n    #define LV_FS_LITTLEFS_PATH \"\"         /**< Set the working directory. File/directory paths will be appended to it. */\n#endif\n\n/** API for Arduino LittleFs. */\n#define LV_USE_FS_ARDUINO_ESP_LITTLEFS 0\n#if LV_USE_FS_ARDUINO_ESP_LITTLEFS\n    #define LV_FS_ARDUINO_ESP_LITTLEFS_LETTER '\\0'     /**< Set an upper cased letter on which the drive will accessible (e.g. 'A') */\n    #define LV_FS_ARDUINO_ESP_LITTLEFS_PATH \"\"         /**< Set the working directory. File/directory paths will be appended to it. */\n#endif\n\n/** API for Arduino Sd. */\n#define LV_USE_FS_ARDUINO_SD 0\n#if LV_USE_FS_ARDUINO_SD\n    #define LV_FS_ARDUINO_SD_LETTER '\\0'          /**< Set an upper cased letter on which the drive will accessible (e.g. 'A') */\n    #define LV_FS_ARDUINO_SD_PATH \"\"         /**< Set the working directory. File/directory paths will be appended to it. */\n#endif\n\n/** API for UEFI */\n#define LV_USE_FS_UEFI 0\n#if LV_USE_FS_UEFI\n    #define LV_FS_UEFI_LETTER '\\0'          /**< Set an upper cased letter on which the drive will accessible (e.g. 'A') */\n#endif\n\n/** LODEPNG decoder library */\n#define LV_USE_LODEPNG 0\n\n/** PNG decoder(libpng) library */\n#define LV_USE_LIBPNG 0\n\n/** BMP decoder library */\n#define LV_USE_BMP 0\n\n/** JPG + split JPG decoder library.\n *  Split JPG is a custom format optimized for embedded systems. */\n#define LV_USE_TJPGD 0\n\n/** libjpeg-turbo decoder library.\n *  - Supports complete JPEG specifications and high-performance JPEG decoding. */\n#define LV_USE_LIBJPEG_TURBO 0\n\n/** GIF decoder library */\n#define LV_USE_GIF 0\n#if LV_USE_GIF\n    /** GIF decoder accelerate */\n    #define LV_GIF_CACHE_DECODE_DATA 0\n#endif\n\n\n/** Decode bin images to RAM */\n#define LV_BIN_DECODER_RAM_LOAD 0\n\n/** RLE decompress library */\n#define LV_USE_RLE 0\n\n/** QR code library */\n#define LV_USE_QRCODE 0\n\n/** Barcode code library */\n#define LV_USE_BARCODE 0\n\n/** FreeType library */\n#define LV_USE_FREETYPE 0\n#if LV_USE_FREETYPE\n    /** Let FreeType use LVGL memory and file porting */\n    #define LV_FREETYPE_USE_LVGL_PORT 0\n\n    /** Cache count of glyphs in FreeType, i.e. number of glyphs that can be cached.\n     *  The higher the value, the more memory will be used. */\n    #define LV_FREETYPE_CACHE_FT_GLYPH_CNT 256\n#endif\n\n/** Built-in TTF decoder */\n#define LV_USE_TINY_TTF 0\n#if LV_USE_TINY_TTF\n    /* Enable loading TTF data from files */\n    #define LV_TINY_TTF_FILE_SUPPORT 0\n    #define LV_TINY_TTF_CACHE_GLYPH_CNT 256\n#endif\n\n/** Rlottie library */\n#define LV_USE_RLOTTIE 0\n\n/** Enable Vector Graphic APIs\n *  - Requires `LV_USE_MATRIX = 1` */\n#define LV_USE_VECTOR_GRAPHIC  0\n\n/** Enable ThorVG (vector graphics library) from the src/libs folder */\n#define LV_USE_THORVG_INTERNAL 0\n\n/** Enable ThorVG by assuming that its installed and linked to the project */\n#define LV_USE_THORVG_EXTERNAL 0\n\n/** Use lvgl built-in LZ4 lib */\n#define LV_USE_LZ4_INTERNAL  0\n\n/** Use external LZ4 library */\n#define LV_USE_LZ4_EXTERNAL  0\n\n/*SVG library\n *  - Requires `LV_USE_VECTOR_GRAPHIC = 1` */\n#define LV_USE_SVG 0\n#define LV_USE_SVG_ANIMATION 0\n#define LV_USE_SVG_DEBUG 0\n\n/** FFmpeg library for image decoding and playing videos.\n *  Supports all major image formats so do not enable other image decoder with it. */\n#define LV_USE_FFMPEG 0\n#if LV_USE_FFMPEG\n    /** Dump input information to stderr */\n    #define LV_FFMPEG_DUMP_FORMAT 0\n    /** Use lvgl file path in FFmpeg Player widget\n     *  You won't be able to open URLs after enabling this feature.\n     *  Note that FFmpeg image decoder will always use lvgl file system. */\n    #define LV_FFMPEG_PLAYER_USE_LV_FS 0\n#endif\n\n/*==================\n * OTHERS\n *==================*/\n/* Documentation for several of the below items can be found here: https://docs.lvgl.io/master/others/index.html . */\n\n/** 1: Enable API to take snapshot for object */\n#define LV_USE_SNAPSHOT 0\n\n/** 1: Enable system monitor component */\n#define LV_USE_SYSMON   0\n#if LV_USE_SYSMON\n    /** Get the idle percentage. E.g. uint32_t my_get_idle(void); */\n    #define LV_SYSMON_GET_IDLE lv_timer_get_idle\n\n    /** 1: Show CPU usage and FPS count.\n     *  - Requires `LV_USE_SYSMON = 1` */\n    #define LV_USE_PERF_MONITOR 0\n    #if LV_USE_PERF_MONITOR\n        #define LV_USE_PERF_MONITOR_POS LV_ALIGN_BOTTOM_RIGHT\n\n        /** 0: Displays performance data on the screen; 1: Prints performance data using log. */\n        #define LV_USE_PERF_MONITOR_LOG_MODE 0\n    #endif\n\n    /** 1: Show used memory and memory fragmentation.\n     *     - Requires `LV_USE_STDLIB_MALLOC = LV_STDLIB_BUILTIN`\n     *     - Requires `LV_USE_SYSMON = 1`*/\n    #define LV_USE_MEM_MONITOR 0\n    #if LV_USE_MEM_MONITOR\n        #define LV_USE_MEM_MONITOR_POS LV_ALIGN_BOTTOM_LEFT\n    #endif\n#endif /*LV_USE_SYSMON*/\n\n/** 1: Enable runtime performance profiler */\n#define LV_USE_PROFILER 0\n#if LV_USE_PROFILER\n    /** 1: Enable the built-in profiler */\n    #define LV_USE_PROFILER_BUILTIN 1\n    #if LV_USE_PROFILER_BUILTIN\n        /** Default profiler trace buffer size */\n        #define LV_PROFILER_BUILTIN_BUF_SIZE (16 * 1024)     /**< [bytes] */\n    #endif\n\n    /** Header to include for profiler */\n    #define LV_PROFILER_INCLUDE \"lvgl/src/misc/lv_profiler_builtin.h\"\n\n    /** Profiler start point function */\n    #define LV_PROFILER_BEGIN    LV_PROFILER_BUILTIN_BEGIN\n\n    /** Profiler end point function */\n    #define LV_PROFILER_END      LV_PROFILER_BUILTIN_END\n\n    /** Profiler start point function with custom tag */\n    #define LV_PROFILER_BEGIN_TAG LV_PROFILER_BUILTIN_BEGIN_TAG\n\n    /** Profiler end point function with custom tag */\n    #define LV_PROFILER_END_TAG   LV_PROFILER_BUILTIN_END_TAG\n\n    /*Enable layout profiler*/\n    #define LV_PROFILER_LAYOUT 1\n\n    /*Enable disp refr profiler*/\n    #define LV_PROFILER_REFR 1\n\n    /*Enable draw profiler*/\n    #define LV_PROFILER_DRAW 1\n\n    /*Enable indev profiler*/\n    #define LV_PROFILER_INDEV 1\n\n    /*Enable decoder profiler*/\n    #define LV_PROFILER_DECODER 1\n\n    /*Enable font profiler*/\n    #define LV_PROFILER_FONT 1\n\n    /*Enable fs profiler*/\n    #define LV_PROFILER_FS 1\n\n    /*Enable style profiler*/\n    #define LV_PROFILER_STYLE 0\n\n    /*Enable timer profiler*/\n    #define LV_PROFILER_TIMER 1\n\n    /*Enable cache profiler*/\n    #define LV_PROFILER_CACHE 1\n\n    /*Enable event profiler*/\n    #define LV_PROFILER_EVENT 1\n#endif\n\n/** 1: Enable Monkey test */\n#define LV_USE_MONKEY 0\n\n/** 1: Enable grid navigation */\n#define LV_USE_GRIDNAV 0\n\n/** 1: Enable `lv_obj` fragment logic */\n#define LV_USE_FRAGMENT 0\n\n/** 1: Support using images as font in label or span widgets */\n#define LV_USE_IMGFONT 0\n\n/** 1: Enable an observer pattern implementation */\n#define LV_USE_OBSERVER 1\n\n/** 1: Enable Pinyin input method\n *  - Requires: lv_keyboard */\n#define LV_USE_IME_PINYIN 0\n#if LV_USE_IME_PINYIN\n    /** 1: Use default thesaurus.\n     *  @note  If you do not use the default thesaurus, be sure to use `lv_ime_pinyin` after setting the thesaurus. */\n    #define LV_IME_PINYIN_USE_DEFAULT_DICT 1\n    /** Set maximum number of candidate panels that can be displayed.\n     *  @note  This needs to be adjusted according to size of screen. */\n    #define LV_IME_PINYIN_CAND_TEXT_NUM 6\n\n    /** Use 9-key input (k9). */\n    #define LV_IME_PINYIN_USE_K9_MODE      1\n    #if LV_IME_PINYIN_USE_K9_MODE == 1\n        #define LV_IME_PINYIN_K9_CAND_TEXT_NUM 3\n    #endif /*LV_IME_PINYIN_USE_K9_MODE*/\n#endif\n\n/** 1: Enable file explorer.\n *  - Requires: lv_table */\n#define LV_USE_FILE_EXPLORER                     0\n#if LV_USE_FILE_EXPLORER\n    /** Maximum length of path */\n    #define LV_FILE_EXPLORER_PATH_MAX_LEN        (128)\n    /** Quick access bar, 1:use, 0:do not use.\n     *  - Requires: lv_list */\n    #define LV_FILE_EXPLORER_QUICK_ACCESS        1\n#endif\n\n/** 1: Enable freetype font manager\n *  - Requires: LV_USE_FREETYPE */\n#define LV_USE_FONT_MANAGER                     0\n#if LV_USE_FONT_MANAGER\n\n/**Font manager name max length*/\n#define LV_FONT_MANAGER_NAME_MAX_LEN            32\n\n#endif\n\n/** Enable loading XML UIs runtime */\n#define LV_USE_XML\t0\n\n/*==================\n * DEVICES\n *==================*/\n\n/** Use SDL to open window on PC and handle mouse and keyboard. */\n#define LV_USE_SDL              0\n#if LV_USE_SDL\n    #define LV_SDL_INCLUDE_PATH     <SDL2/SDL.h>\n    #define LV_SDL_RENDER_MODE      LV_DISPLAY_RENDER_MODE_DIRECT   /**< LV_DISPLAY_RENDER_MODE_DIRECT is recommended for best performance */\n    #define LV_SDL_BUF_COUNT        1    /**< 1 or 2 */\n    #define LV_SDL_ACCELERATED      1    /**< 1: Use hardware acceleration*/\n    #define LV_SDL_FULLSCREEN       0    /**< 1: Make the window full screen by default */\n    #define LV_SDL_DIRECT_EXIT      1    /**< 1: Exit the application when all SDL windows are closed */\n    #define LV_SDL_MOUSEWHEEL_MODE  LV_SDL_MOUSEWHEEL_MODE_ENCODER  /*LV_SDL_MOUSEWHEEL_MODE_ENCODER/CROWN*/\n#endif\n\n/** Use X11 to open window on Linux desktop and handle mouse and keyboard */\n#define LV_USE_X11              0\n#if LV_USE_X11\n    #define LV_X11_DIRECT_EXIT         1  /**< Exit application when all X11 windows have been closed */\n    #define LV_X11_DOUBLE_BUFFER       1  /**< Use double buffers for rendering */\n    /* Select only 1 of the following render modes (LV_X11_RENDER_MODE_PARTIAL preferred!). */\n    #define LV_X11_RENDER_MODE_PARTIAL 1  /**< Partial render mode (preferred) */\n    #define LV_X11_RENDER_MODE_DIRECT  0  /**< Direct render mode */\n    #define LV_X11_RENDER_MODE_FULL    0  /**< Full render mode */\n#endif\n\n/** Use Wayland to open a window and handle input on Linux or BSD desktops */\n#define LV_USE_WAYLAND          0\n#if LV_USE_WAYLAND\n    #define LV_WAYLAND_WINDOW_DECORATIONS   0    /**< Draw client side window decorations only necessary on Mutter/GNOME */\n    #define LV_WAYLAND_WL_SHELL             0    /**< Use the legacy wl_shell protocol instead of the default XDG shell */\n#endif\n\n/** Driver for /dev/fb */\n#define LV_USE_LINUX_FBDEV      0\n#if LV_USE_LINUX_FBDEV\n    #define LV_LINUX_FBDEV_BSD           0\n    #define LV_LINUX_FBDEV_RENDER_MODE   LV_DISPLAY_RENDER_MODE_PARTIAL\n    #define LV_LINUX_FBDEV_BUFFER_COUNT  0\n    #define LV_LINUX_FBDEV_BUFFER_SIZE   60\n#endif\n\n/** Use Nuttx to open window and handle touchscreen */\n#define LV_USE_NUTTX    0\n\n#if LV_USE_NUTTX\n    #define LV_USE_NUTTX_INDEPENDENT_IMAGE_HEAP 0\n\n    #define LV_USE_NUTTX_LIBUV    0\n\n    /** Use Nuttx custom init API to open window and handle touchscreen */\n    #define LV_USE_NUTTX_CUSTOM_INIT    0\n\n    /** Driver for /dev/lcd */\n    #define LV_USE_NUTTX_LCD      0\n    #if LV_USE_NUTTX_LCD\n        #define LV_NUTTX_LCD_BUFFER_COUNT    0\n        #define LV_NUTTX_LCD_BUFFER_SIZE     60\n    #endif\n\n    /** Driver for /dev/input */\n    #define LV_USE_NUTTX_TOUCHSCREEN    0\n\n    /*Touchscreen cursor size in pixels(<=0: disable cursor)*/\n    #define LV_NUTTX_TOUCHSCREEN_CURSOR_SIZE    0\n#endif\n\n/** Driver for /dev/dri/card */\n#define LV_USE_LINUX_DRM        0\n\n/** Interface for TFT_eSPI */\n#define LV_USE_TFT_ESPI         0\n\n/** Driver for evdev input devices */\n#define LV_USE_EVDEV    0\n\n/** Driver for libinput input devices */\n#define LV_USE_LIBINPUT    0\n\n#if LV_USE_LIBINPUT\n    #define LV_LIBINPUT_BSD    0\n\n    /** Full keyboard support */\n    #define LV_LIBINPUT_XKB             0\n    #if LV_LIBINPUT_XKB\n        /** \"setxkbmap -query\" can help find the right values for your keyboard */\n        #define LV_LIBINPUT_XKB_KEY_MAP { .rules = NULL, .model = \"pc101\", .layout = \"us\", .variant = NULL, .options = NULL }\n    #endif\n#endif\n\n/* Drivers for LCD devices connected via SPI/parallel port */\n#define LV_USE_ST7735        0\n#define LV_USE_ST7789        0\n#define LV_USE_ST7796        0\n#define LV_USE_ILI9341       0\n\n#define LV_USE_GENERIC_MIPI (LV_USE_ST7735 | LV_USE_ST7789 | LV_USE_ST7796 | LV_USE_ILI9341)\n\n/** Driver for Renesas GLCD */\n#define LV_USE_RENESAS_GLCDC    0\n\n/** Driver for ST LTDC */\n#define LV_USE_ST_LTDC    0\n#if LV_USE_ST_LTDC\n    /* Only used for partial. */\n    #define LV_ST_LTDC_USE_DMA2D_FLUSH 0\n#endif\n\n/** LVGL Windows backend */\n#define LV_USE_WINDOWS    0\n\n/** LVGL UEFI backend */\n#define LV_USE_UEFI 0\n#if LV_USE_UEFI\n    #define LV_USE_UEFI_INCLUDE \"myefi.h\"   /**< Header that hides the actual framework (EDK2, gnu-efi, ...) */\n    #define LV_UEFI_USE_MEMORY_SERVICES 0   /**< Use the memory functions from the boot services table */\n#endif\n\n/** Use OpenGL to open window on PC and handle mouse and keyboard */\n#define LV_USE_OPENGLES   0\n#if LV_USE_OPENGLES\n    #define LV_USE_OPENGLES_DEBUG        1    /**< Enable or disable debug for opengles */\n#endif\n\n/** QNX Screen display and input drivers */\n#define LV_USE_QNX              0\n#if LV_USE_QNX\n    #define LV_QNX_BUF_COUNT        1    /**< 1 or 2 */\n#endif\n\n/*==================\n* EXAMPLES\n*==================*/\n\n/** Enable examples to be built with the library. */\n#define LV_BUILD_EXAMPLES 1\n\n/*===================\n * DEMO USAGE\n ====================*/\n\n/** Show some widgets. This might be required to increase `LV_MEM_SIZE`. */\n#define LV_USE_DEMO_WIDGETS 0\n\n/** Demonstrate usage of encoder and keyboard. */\n#define LV_USE_DEMO_KEYPAD_AND_ENCODER 0\n\n/** Benchmark your system */\n#define LV_USE_DEMO_BENCHMARK 0\n\n/** Render test for each primitive.\n *  - Requires at least 480x272 display. */\n#define LV_USE_DEMO_RENDER 0\n\n/** Stress test for LVGL */\n#define LV_USE_DEMO_STRESS 0\n\n/** Music player demo */\n#define LV_USE_DEMO_MUSIC 0\n#if LV_USE_DEMO_MUSIC\n    #define LV_DEMO_MUSIC_SQUARE    0\n    #define LV_DEMO_MUSIC_LANDSCAPE 0\n    #define LV_DEMO_MUSIC_ROUND     0\n    #define LV_DEMO_MUSIC_LARGE     0\n    #define LV_DEMO_MUSIC_AUTO_PLAY 0\n#endif\n\n/** Flex layout demo */\n#define LV_USE_DEMO_FLEX_LAYOUT     0\n\n/** Smart-phone like multi-language demo */\n#define LV_USE_DEMO_MULTILANG       0\n\n/** Widget transformation demo */\n#define LV_USE_DEMO_TRANSFORM       0\n\n/** Demonstrate scroll settings */\n#define LV_USE_DEMO_SCROLL          0\n\n/** Vector graphic demo */\n#define LV_USE_DEMO_VECTOR_GRAPHIC  0\n\n/*E-bike demo with Lottie animations (if LV_USE_LOTTIE is enabled)*/\n#define LV_USE_DEMO_EBIKE\t\t\t0\n#if LV_USE_DEMO_EBIKE\n\t#define LV_DEMO_EBIKE_PORTRAIT  0    /*0: for 480x270..480x320, 1: for 480x800..720x1280*/\n#endif\n\n/** High-resolution demo */\n#define LV_USE_DEMO_HIGH_RES        0\n\n/*--END OF LV_CONF_H--*/\n\n#endif /*LV_CONF_H*/\n\n#endif /*End of \"Content enable\"*/\n"
        },
        {
          "name": "lv_version.h",
          "type": "blob",
          "size": 0.2509765625,
          "content": "/**\n * @file lv_version.h\n * The current version of LVGL\n */\n\n#ifndef LVGL_VERSION_H\n#define LVGL_VERSION_H\n\n#define LVGL_VERSION_MAJOR 9\n#define LVGL_VERSION_MINOR 3\n#define LVGL_VERSION_PATCH 0\n#define LVGL_VERSION_INFO \"dev\"\n\n#endif /* LVGL_VERSION_H */\n"
        },
        {
          "name": "lv_version.h.in",
          "type": "blob",
          "size": 0.3173828125,
          "content": "/**\n * @file version.h\n * The current version of LVGL\n */\n\n#ifndef LVGL_VERSION_H\n#define LVGL_VERSION_H\n\n#define LVGL_VERSION_MAJOR @LVGL_VERSION_MAJOR@\n#define LVGL_VERSION_MINOR @LVGL_VERSION_MINOR@\n#define LVGL_VERSION_PATCH @LVGL_VERSION_PATCH@\n#define LVGL_VERSION_INFO \"@LVGL_VERSION_INFO@\"\n\n#endif /*LVGL_VERSION_H*/\n"
        },
        {
          "name": "lvgl.h",
          "type": "blob",
          "size": 5.232421875,
          "content": "/**\n * @file lvgl.h\n * Include all LVGL related headers\n */\n\n#ifndef LVGL_H\n#define LVGL_H\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n/***************************\n * CURRENT VERSION OF LVGL\n ***************************/\n#include \"lv_version.h\"\n\n/*********************\n *      INCLUDES\n *********************/\n#include \"src/lv_init.h\"\n\n#include \"src/stdlib/lv_mem.h\"\n#include \"src/stdlib/lv_string.h\"\n#include \"src/stdlib/lv_sprintf.h\"\n\n#include \"src/misc/lv_log.h\"\n#include \"src/misc/lv_timer.h\"\n#include \"src/misc/lv_math.h\"\n#include \"src/misc/lv_array.h\"\n#include \"src/misc/lv_async.h\"\n#include \"src/misc/lv_anim_timeline.h\"\n#include \"src/misc/lv_profiler_builtin.h\"\n#include \"src/misc/lv_rb.h\"\n#include \"src/misc/lv_utils.h\"\n#include \"src/misc/lv_iter.h\"\n#include \"src/misc/lv_circle_buf.h\"\n#include \"src/misc/lv_tree.h\"\n#include \"src/misc/cache/lv_image_cache.h\"\n\n#include \"src/tick/lv_tick.h\"\n\n#include \"src/core/lv_obj.h\"\n#include \"src/core/lv_group.h\"\n#include \"src/indev/lv_indev.h\"\n#include \"src/indev/lv_indev_gesture.h\"\n#include \"src/core/lv_refr.h\"\n#include \"src/display/lv_display.h\"\n\n#include \"src/font/lv_font.h\"\n#include \"src/font/lv_binfont_loader.h\"\n#include \"src/font/lv_font_fmt_txt.h\"\n\n#include \"src/widgets/animimage/lv_animimage.h\"\n#include \"src/widgets/arc/lv_arc.h\"\n#include \"src/widgets/bar/lv_bar.h\"\n#include \"src/widgets/button/lv_button.h\"\n#include \"src/widgets/buttonmatrix/lv_buttonmatrix.h\"\n#include \"src/widgets/calendar/lv_calendar.h\"\n#include \"src/widgets/canvas/lv_canvas.h\"\n#include \"src/widgets/chart/lv_chart.h\"\n#include \"src/widgets/checkbox/lv_checkbox.h\"\n#include \"src/widgets/dropdown/lv_dropdown.h\"\n#include \"src/widgets/image/lv_image.h\"\n#include \"src/widgets/imagebutton/lv_imagebutton.h\"\n#include \"src/widgets/keyboard/lv_keyboard.h\"\n#include \"src/widgets/label/lv_label.h\"\n#include \"src/widgets/led/lv_led.h\"\n#include \"src/widgets/line/lv_line.h\"\n#include \"src/widgets/list/lv_list.h\"\n#include \"src/widgets/lottie/lv_lottie.h\"\n#include \"src/widgets/menu/lv_menu.h\"\n#include \"src/widgets/msgbox/lv_msgbox.h\"\n#include \"src/widgets/roller/lv_roller.h\"\n#include \"src/widgets/scale/lv_scale.h\"\n#include \"src/widgets/slider/lv_slider.h\"\n#include \"src/widgets/span/lv_span.h\"\n#include \"src/widgets/spinbox/lv_spinbox.h\"\n#include \"src/widgets/spinner/lv_spinner.h\"\n#include \"src/widgets/switch/lv_switch.h\"\n#include \"src/widgets/table/lv_table.h\"\n#include \"src/widgets/tabview/lv_tabview.h\"\n#include \"src/widgets/textarea/lv_textarea.h\"\n#include \"src/widgets/tileview/lv_tileview.h\"\n#include \"src/widgets/win/lv_win.h\"\n\n#include \"src/others/snapshot/lv_snapshot.h\"\n#include \"src/others/sysmon/lv_sysmon.h\"\n#include \"src/others/monkey/lv_monkey.h\"\n#include \"src/others/gridnav/lv_gridnav.h\"\n#include \"src/others/fragment/lv_fragment.h\"\n#include \"src/others/imgfont/lv_imgfont.h\"\n#include \"src/others/observer/lv_observer.h\"\n#include \"src/others/ime/lv_ime_pinyin.h\"\n#include \"src/others/file_explorer/lv_file_explorer.h\"\n#include \"src/others/font_manager/lv_font_manager.h\"\n#include \"src/others/xml/lv_xml.h\"\n#include \"src/others/xml/lv_xml_component.h\"\n\n#include \"src/libs/barcode/lv_barcode.h\"\n#include \"src/libs/bin_decoder/lv_bin_decoder.h\"\n#include \"src/libs/bmp/lv_bmp.h\"\n#include \"src/libs/rle/lv_rle.h\"\n#include \"src/libs/fsdrv/lv_fsdrv.h\"\n#include \"src/libs/lodepng/lv_lodepng.h\"\n#include \"src/libs/libpng/lv_libpng.h\"\n#include \"src/libs/gif/lv_gif.h\"\n#include \"src/libs/qrcode/lv_qrcode.h\"\n#include \"src/libs/tjpgd/lv_tjpgd.h\"\n#include \"src/libs/libjpeg_turbo/lv_libjpeg_turbo.h\"\n#include \"src/libs/freetype/lv_freetype.h\"\n#include \"src/libs/rlottie/lv_rlottie.h\"\n#include \"src/libs/ffmpeg/lv_ffmpeg.h\"\n#include \"src/libs/tiny_ttf/lv_tiny_ttf.h\"\n#include \"src/libs/svg/lv_svg.h\"\n#include \"src/libs/svg/lv_svg_render.h\"\n\n#include \"src/layouts/lv_layout.h\"\n\n#include \"src/draw/lv_draw_buf.h\"\n#include \"src/draw/lv_draw_vector.h\"\n#include \"src/draw/sw/lv_draw_sw_utils.h\"\n\n#include \"src/themes/lv_theme.h\"\n\n#include \"src/drivers/lv_drivers.h\"\n\n#include \"src/lv_api_map_v8.h\"\n#include \"src/lv_api_map_v9_0.h\"\n#include \"src/lv_api_map_v9_1.h\"\n\n#if LV_USE_PRIVATE_API\n#include \"src/lvgl_private.h\"\n#endif\n\n\n/*********************\n *      DEFINES\n *********************/\n\n/**********************\n *      TYPEDEFS\n **********************/\n\n/**********************\n * GLOBAL PROTOTYPES\n **********************/\n\n/**********************\n *      MACROS\n **********************/\n\n/** Gives 1 if the x.y.z version is supported in the current version\n * Usage:\n *\n * - Require v6\n * #if LV_VERSION_CHECK(6,0,0)\n *   new_func_in_v6();\n * #endif\n *\n *\n * - Require at least v5.3\n * #if LV_VERSION_CHECK(5,3,0)\n *   new_feature_from_v5_3();\n * #endif\n *\n *\n * - Require v5.3.2 bugfixes\n * #if LV_VERSION_CHECK(5,3,2)\n *   bugfix_in_v5_3_2();\n * #endif\n *\n */\n#define LV_VERSION_CHECK(x,y,z) (x == LVGL_VERSION_MAJOR && (y < LVGL_VERSION_MINOR || (y == LVGL_VERSION_MINOR && z <= LVGL_VERSION_PATCH)))\n\n/**\n * Wrapper functions for VERSION macros\n */\n\nstatic inline int lv_version_major(void)\n{\n    return LVGL_VERSION_MAJOR;\n}\n\nstatic inline int lv_version_minor(void)\n{\n    return LVGL_VERSION_MINOR;\n}\n\nstatic inline int lv_version_patch(void)\n{\n    return LVGL_VERSION_PATCH;\n}\n\nstatic inline const char * lv_version_info(void)\n{\n    return LVGL_VERSION_INFO;\n}\n\n#ifdef __cplusplus\n} /*extern \"C\"*/\n#endif\n\n#endif /*LVGL_H*/\n"
        },
        {
          "name": "lvgl.mk",
          "type": "blob",
          "size": 0.4365234375,
          "content": "LVGL_PATH ?= ${shell pwd}/lvgl\n\nASRCS += $(shell find $(LVGL_PATH)/src -type f -name '*.S')\nCSRCS += $(shell find $(LVGL_PATH)/src -type f -name '*.c')\nCSRCS += $(shell find $(LVGL_PATH)/demos -type f -name '*.c')\nCSRCS += $(shell find $(LVGL_PATH)/examples -type f -name '*.c')\nCXXEXT := .cpp\nCXXSRCS += $(shell find $(LVGL_PATH)/src -type f -name '*${CXXEXT}')\n\nAFLAGS += \"-I$(LVGL_PATH)\"\nCFLAGS += \"-I$(LVGL_PATH)\"\nCXXFLAGS += \"-I$(LVGL_PATH)\"\n"
        },
        {
          "name": "lvgl.pc.in",
          "type": "blob",
          "size": 0.2451171875,
          "content": "prefix=\"@CMAKE_INSTALL_PREFIX@\"\nincludedir=\"${prefix}/@INC_INSTALL_DIR@\"\nlibdir=${prefix}/lib\n\nName: lvgl\nDescription: Light and Versatile Graphics Library\nURL: https://lvgl.io/\nVersion: @LVGL_VERSION@\nCflags: -I${includedir}\nLibs: -L${libdir} -llvgl\n"
        },
        {
          "name": "lvgl_private.h",
          "type": "blob",
          "size": 4.484375,
          "content": "/**\n * @file lvgl_private.h\n *\n */\n\n#ifndef LVGL_PRIVATE_H\n#define LVGL_PRIVATE_H\n\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n/*********************\n *      INCLUDES\n *********************/\n#include \"src/core/lv_global.h\"\n\n#include \"src/display/lv_display_private.h\"\n#include \"src/indev/lv_indev_private.h\"\n#include \"src/misc/lv_text_private.h\"\n#include \"src/misc/cache/lv_cache_entry_private.h\"\n#include \"src/misc/cache/lv_cache_private.h\"\n#include \"src/layouts/lv_layout_private.h\"\n#include \"src/stdlib/lv_mem_private.h\"\n#include \"src/others/file_explorer/lv_file_explorer_private.h\"\n#include \"src/others/sysmon/lv_sysmon_private.h\"\n#include \"src/others/monkey/lv_monkey_private.h\"\n#include \"src/others/ime/lv_ime_pinyin_private.h\"\n#include \"src/others/fragment/lv_fragment_private.h\"\n#include \"src/others/observer/lv_observer_private.h\"\n#include \"src/others/xml/lv_xml_private.h\"\n#include \"src/libs/qrcode/lv_qrcode_private.h\"\n#include \"src/libs/barcode/lv_barcode_private.h\"\n#include \"src/libs/gif/lv_gif_private.h\"\n#include \"src/draw/lv_draw_triangle_private.h\"\n#include \"src/draw/lv_draw_private.h\"\n#include \"src/draw/lv_draw_rect_private.h\"\n#include \"src/draw/lv_draw_image_private.h\"\n#include \"src/draw/lv_image_decoder_private.h\"\n#include \"src/draw/lv_draw_label_private.h\"\n#include \"src/draw/lv_draw_vector_private.h\"\n#include \"src/draw/lv_draw_buf_private.h\"\n#include \"src/draw/lv_draw_mask_private.h\"\n#include \"src/draw/sw/lv_draw_sw_gradient_private.h\"\n#include \"src/draw/sw/lv_draw_sw_private.h\"\n#include \"src/draw/sw/lv_draw_sw_mask_private.h\"\n#include \"src/draw/sw/blend/lv_draw_sw_blend_private.h\"\n#include \"src/drivers/libinput/lv_xkb_private.h\"\n#include \"src/drivers/libinput/lv_libinput_private.h\"\n#include \"src/font/lv_font_fmt_txt_private.h\"\n#include \"src/themes/lv_theme_private.h\"\n#include \"src/core/lv_refr_private.h\"\n#include \"src/core/lv_obj_style_private.h\"\n#include \"src/core/lv_obj_private.h\"\n#include \"src/core/lv_obj_scroll_private.h\"\n#include \"src/core/lv_obj_draw_private.h\"\n#include \"src/core/lv_obj_class_private.h\"\n#include \"src/core/lv_group_private.h\"\n#include \"src/core/lv_obj_event_private.h\"\n#include \"src/misc/lv_timer_private.h\"\n#include \"src/misc/lv_area_private.h\"\n#include \"src/misc/lv_fs_private.h\"\n#include \"src/misc/lv_profiler_builtin_private.h\"\n#include \"src/misc/lv_event_private.h\"\n#include \"src/misc/lv_bidi_private.h\"\n#include \"src/misc/lv_rb_private.h\"\n#include \"src/misc/lv_style_private.h\"\n#include \"src/misc/lv_color_op_private.h\"\n#include \"src/misc/lv_anim_private.h\"\n#include \"src/widgets/msgbox/lv_msgbox_private.h\"\n#include \"src/widgets/buttonmatrix/lv_buttonmatrix_private.h\"\n#include \"src/widgets/slider/lv_slider_private.h\"\n#include \"src/widgets/switch/lv_switch_private.h\"\n#include \"src/widgets/calendar/lv_calendar_private.h\"\n#include \"src/widgets/imagebutton/lv_imagebutton_private.h\"\n#include \"src/widgets/bar/lv_bar_private.h\"\n#include \"src/widgets/image/lv_image_private.h\"\n#include \"src/widgets/textarea/lv_textarea_private.h\"\n#include \"src/widgets/table/lv_table_private.h\"\n#include \"src/widgets/checkbox/lv_checkbox_private.h\"\n#include \"src/widgets/roller/lv_roller_private.h\"\n#include \"src/widgets/win/lv_win_private.h\"\n#include \"src/widgets/keyboard/lv_keyboard_private.h\"\n#include \"src/widgets/line/lv_line_private.h\"\n#include \"src/widgets/animimage/lv_animimage_private.h\"\n#include \"src/widgets/dropdown/lv_dropdown_private.h\"\n#include \"src/widgets/menu/lv_menu_private.h\"\n#include \"src/widgets/chart/lv_chart_private.h\"\n#include \"src/widgets/button/lv_button_private.h\"\n#include \"src/widgets/scale/lv_scale_private.h\"\n#include \"src/widgets/led/lv_led_private.h\"\n#include \"src/widgets/arc/lv_arc_private.h\"\n#include \"src/widgets/tileview/lv_tileview_private.h\"\n#include \"src/widgets/spinbox/lv_spinbox_private.h\"\n#include \"src/widgets/span/lv_span_private.h\"\n#include \"src/widgets/label/lv_label_private.h\"\n#include \"src/widgets/canvas/lv_canvas_private.h\"\n#include \"src/widgets/tabview/lv_tabview_private.h\"\n#include \"src/tick/lv_tick_private.h\"\n#include \"src/stdlib/builtin/lv_tlsf_private.h\"\n#include \"src/libs/rlottie/lv_rlottie_private.h\"\n#include \"src/libs/ffmpeg/lv_ffmpeg_private.h\"\n#include \"src/widgets/lottie/lv_lottie_private.h\"\n#include \"src/osal/lv_os_private.h\"\n\n/*********************\n *      DEFINES\n *********************/\n\n/**********************\n *      TYPEDEFS\n **********************/\n\n/**********************\n * GLOBAL PROTOTYPES\n **********************/\n\n/**********************\n *      MACROS\n **********************/\n\n#ifdef __cplusplus\n} /*extern \"C\"*/\n#endif\n\n#endif /*LVGL_PRIVATE_H*/\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "xmls",
          "type": "tree",
          "content": null
        },
        {
          "name": "zephyr",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}