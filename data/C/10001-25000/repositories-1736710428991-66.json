{
  "metadata": {
    "timestamp": 1736710428991,
    "page": 66,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "twitter/twemproxy",
      "stars": 12185,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".clang-format.example",
          "type": "blob",
          "size": 2.3486328125,
          "content": "# This may be useful with https://clang.llvm.org/docs/ClangFormat.html#script-for-patch-reformatting\n# but some of clang's reformattings may conflict with notes/c-style-guide.txt, which takes precedence.\n#\n# This is deliberately named .clang-format.example instead of .clang-format to avoid editors \n# unexpectedly using this to reformatting entire files because of these shortcomings.\n# It can be copied into .clang-format to use this for local development selectively.\n#\n# Note: this clang format file has many shortcomings.\n# Attempting to apply this automatically to everything may make code less readable.\n# However, this may be useful for spot checking new code,\n# or if you're not certain of indentation style or general spacing/wrapping rules\n#\n# Known shortcomings:\n# - Some places exceed the 80 column limit deliberately for readability, e.g. help strings or error messages or function prototypes. (BreakStringLiterals helps preserve some of those)\n# - Some places deliberately put blocks on a single line when there are a lot of similar blocks.\n#   AllowShortBlocksOnASingleLine is not useful.\n# - Some places deliberately put blocks on a single line when there are a lot of similar blocks.\n# - No good way to eliminate space before and after PRIu64 and other macros for adjacent string literal concatenation\n# - clang-format is not aware of macros, some of which have different styles from functions.\n# - Function declarations are not typically aligned\n# - Some variable declarations are aligned and others aren't on a case by case basis\n# - The choice of function argument grouping should depends on which function arguments are semantically related,\n#   not just on fitting within 80 columns.\n\nAllowShortBlocksOnASingleLine: true\nBasedOnStyle: LLVM\nAlwaysBreakAfterDefinitionReturnType: All\nUseTab: Never\nIndentWidth: 4\nTabWidth: 4\nColumnLimit: 80\nBreakBeforeBraces: Linux\nSortIncludes: false\n\nBreakStringLiterals: false\n# BitFieldColonSpacing is too new to work in clang-format 11\n# https://releases.llvm.org/11.0.0/tools/clang/docs/ClangFormatStyleOptions.html\n# Latest: https://clang.llvm.org/docs/ClangFormatStyleOptions.html\n#\n# BitFieldColonSpacing: None\n#\n# XXX no way to treat the `*` indicating a value is a pointer as part of the aligned name for the declaration\n# XXX function declarations are not typically aligned\nAlignConsecutiveDeclarations: true\nAlignConsecutiveMacros: true\n"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.5263671875,
          "content": "Dockerfile*\n**/Dockerfile*\n*.gz\nsrc/nutredis\nsrc/nutcracker\ntests/_binaries/*\n\n### Entries copied from .gitignore\n# pyc\n*.pyc\n\n# Compiled Object files\n*.lo\n*.o\n\n# Compiled Dynamic libraries\n*.so\n\n# Compiled Static libraries\n*.la\n*.a\n\n# Compiled misc\n*.dep\n*.gcda\n*.gcno\n*.gcov\n\n# Packages\n*.tar.gz\n*.tar.bz2\n\n# Logs\n*.log\n\n# Temporary\n*.swp\n*.~\n*.project\n*.cproject\n\n# Core and executable\ncore*\nnutcracker\n\n# extracted yaml\n!/contrib/yaml-0.2.5.tar.gz\n\n# Autotools\n.deps\n.libs\n\n/aclocal.m4\n/autom4te.cache\n/stamp-h1\n/autoscan.log\n/libtool\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.453125,
          "content": "# https://editorconfig.org/\n\nroot = true\n\n[*]\ntrim_trailing_whitespace = true\ninsert_final_newline     = true\nend_of_line              = lf\ncharset                  = utf-8\n\n# See twemproxy/notes/c-styleguide.txt\n[*.c,*.h]\ntab_width                = 4\nindent_size              = 4\nindent_style             = space\n# indent_brace_style depends on function vs conditional\nmax_line_length          = 80\nspaces_around_brackets   = none\nspaces_around_operators  = true\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.7529296875,
          "content": "# pyc\n*.pyc\n\n# Compiled Object files\n*.lo\n*.o\n\n# Compiled Dynamic libraries\n*.so\n\n# Compiled Static libraries\n*.la\n*.a\n\n# Compiled misc\n*.dep\n*.gcda\n*.gcno\n*.gcov\n\n# Packages\n*.tar.gz\n*.tar.bz2\n\n# Logs\n*.log\n\n# Temporary\n*.swp\n*.~\n*.project\n*.cproject\n\n# Core and executable\ncore*\nnutcracker\n\n# extracted yaml\n!/contrib/yaml-0.2.5.tar.gz\n\n# Autotools\n.deps\n.libs\n\n/aclocal.m4\n/autom4te.cache\n/stamp-h1\n/autoscan.log\n/libtool\n\n/config/config.guess\n/config/config.sub\n/config/depcomp\n/config/install-sh\n/config/ltmain.sh\n/config/missing\n/config\n\n/config.h\n/config.h.in\n/config.h.in~\n/config.log\n/config.status\n/configure.scan\n/configure\n\nMakefile\nMakefile.in\n\n# The .clang-format.example file may be copied here for use with -style=file\n.clang-format\n\ntest_all\n*.trs\ntags\n\n"
        },
        {
          "name": "ChangeLog",
          "type": "blob",
          "size": 7.7060546875,
          "content": " 2021-13-07  Tyson Andre  <tysonandre775@hotmail.com>\n    * twemproxy: version 0.5.0 release\n\t  Same as 0.5.0-RC1\n\n 2021-06-07  Tyson Andre  <tysonandre775@hotmail.com>\n    * twemproxy: version 0.5.0-RC1 release\n\t  Add 'tcpkeepalive' pool boolean config flag setting\n\t  to enable tcp keepalive (charsyam, manju)\n\t  Support redis bitpos command (clark kang)\n\t  Fix parsing of redis error response for error type with no space,\n\t  add tests (tyson, tom dalton)\n\t  Update integration tests, add C unit test suite for 'make check' (tyson)\n\t  Increase the maximum host length+port+identifier to 273\n\t  in ketama_update (李广博)\n\t  Always initialize file permissions field when listening on a unix domain\n\t  socket (tyson)\n\t  Use number of servers instead of number of points on the continuum when\n\t  sharding requests to backend services to improve sharding performance\n\t  and fix potential invalid memory access when all hosts were ejected\n\t  from a pool. (tyson)\n\t  Optimize performance of deletion of single redis keys (vincentve)\n\t  Don't fragment memcache/redis get commands when they only have a single\n\t  key (improves performance and error handling of single key case) (tyson)\n\t  Don't let requests hang when there is a dns error when processing a\n\t  fragmented request (e.g. multiget with multiple keys) (tyson)\n\t  Allow extra parameters for redis spop (charsyam)\n\t  Update documentation and README (various)\n\t  Fix memory leak bug for redis mset (deep011)\n\t  Support arbitrarily deep nested redis multi-bulk\n\t  responses (nested arrays) (qingping209, tyson)\n\t  Upgrade from libyaml 0.1.4 to 0.2.5 (tyson)\n\t  Fix compiler warnings about wrong conversion specifiers in format\n\t  strings for logging (tyson)\n\t  Log the async backend used and any debug options in the\n\t  '--help'/'--version' output.\n\t  Add support for many more new redis commands and updates to existing\n\t  redis commands (tyson)\n\t  Optimization: Skip hashing and choosing server index when a pool has\n\t  exactly one server (tyson)\n\t  Support memcache 'version' requests by proxying the request to a single\n\t  backend memcache server to fetch the server version. (tyson)\n\t  Make error messages for creating the stats server during startup clearer. (tyson)\n\n 2015-22-06  Manju Rajashekhar  <manj@cs.stanford.edu>\n    * twemproxy: version 0.4.1 release\n      backend server hostnames are resolved lazily\n      redis_auth is only valid for a redis pool\n      getaddrinfo returns non-zero +ve value on error\n      fix-hang-when-command-only (charsyam)\n      fix bug crash when get command without key and whitespace (charsyam)\n      mark server as failed on protocol level transiet failures like -OOM, -LOADING, etc\n      implemented support for parsing fine grained redis error response\n      remove redundant conditional judgement in rbtree deletion (leo ma)\n      fix bug mset has invalid pair (charsyam)\n      temp fix a core on kqueue (idning)\n      support \"touch\" command for memcached (panmiaocai)\n      fix redis parse rsp bug (charsyam)\n      SORT command can take multiple arguments. So it should be part of redis_argn() and not redis_arg0()\n      remove incorrect assert because client could send data after sending a quit request which must be discarded\n      allow file permissions to be set for UNIX domain listening socket (ori liveneh)\n      return error if formatted is greater than mbuf size by using nc_vsnprintf() in msg_prepend_format()\n      fix req_make_reply on msg_get, mark it as response (idning)\n      redis database select upon connect (arne claus)\n      redis_auth (charsyam)\n      allow null key(empty key) (idning)\n      fix core on invalid mset like \"mset a a a\" (idning)\n\n2014-18-10  idning <idning@gmail.com>\n    * twemproxy: version 0.4.0 release\n      mget improve (idning)\n      many new commands supported: LEX, PFADD, PFMERGE, SORT, PING, QUIT, SCAN... (mattrobenolt, areina, idning)\n      handle max open file limit(allenlz)\n      add notice-log and use ms time in log(idning)\n      fix bug in string_compare (andyqzb)\n      fix deadlock in sighandler (idning)\n\n2013-20-12  Manju Rajashekhar  <manj@cs.stanford.edu>\n    * twemproxy: version 0.3.0 release\n      SRANDMEMBER support for the optional count argument (mkhq)\n      Handle case where server responds while the request is still being sent (jdi-tagged)\n      event ports (solaris/smartos) support\n      add timestamp when the server was ejected\n      support for set ex/px/nx/xx for redis 2.6.12 and up (ypocat)\n      kqueue (bsd) support (ferenyx)\n      fix parsing redis response to accept integer reply (charsyam)\n\n2013-23-04  Manju Rajashekhar  <manj@cs.stanford.edu>\n    * twemproxy: version 0.2.4 release\n      redis keys must be less than mbuf_data_size() in length (fifsky)\n      Adds support for DUMP/RESTORE commands in Redis (remotezygote)\n      Use of the weight value in the modula distribution (mezzatto)\n      Add support to unix socket connections to servers (mezzatto)\n      only check for duplicate server name and not 'host:port:weight' when 'name' is configured\n      crc16 hash support added (mezzatto)\n\n2013-31-01  Manju Rajashekhar  <manj@twitter.com>\n    * twemproxy: version 0.2.3 release\n      RPOPLPUSH, SDIFF, SDIFFSTORE, SINTER, SINTERSTORE, SMOVE, SUNION, SUNIONSTORE, ZINTERSTORE, and ZUNIONSTORE support (dcartoon)\n      EVAL and EVALSHA support (ferenyx)\n      exit 1 if configuration file is invalid (cofyc)\n      return non-zero exit status when nutcracker cannot start for some reason\n      use server names in stats (charsyam)\n      Fix failure to resolve long FQDN name resolve (conmame)\n      add support for hash tags\n\n2012-18-10  Manju Rajashekhar  <manj@twitter.com>\n    * twemproxy: version 0.2.2 release\n      fix the off-by-one error when calculating redis key length\n\n2012-12-10  Manju Rajashekhar  <manj@twitter.com>\n    * twemproxy: version 0.2.1 release\n      don't use buf in conf_add_server\n      allow an optional instance name for consistent hashing (charsyam)\n      add --stats-addr=S option\n      add stats-bind-any -a option (charsyam)\n\n2012-12-03  Manju Rajashekhar  <manj@twitter.com>\n    * twemproxy: version 0.2.0 release\n      add -D or --describe-stats command-line argument to print stats description\n      redis support in twemproxy\n      setup pre/post splitcopy and pre/post coalesce handlers in msg struct\n      memcache pre_splitcopy, post_splitcopy, pre_coalesce and post_coalesce handlers\n      every fragment of a msg vector keeps track of the first/last fragment, number of fragments and fragment owner\n      set up msg parser handler for memcache connections\n      refactor parsing code and create header file nc_proto.h\n      stats_listen should use st->addr as the listening address string\n      delete stats tracking memcache requests and responses; stats module no longer tracks protocol related stats\n\n2012-10-27  Manju Rajashekhar  <manj@twitter.com>\n    * twemproxy: version 0.1.20 release\n      on msg_repair, msg->pos should point to nbuf->pos and not nbuf->last\n      refactor memcache parsing code into proto directory\n      add redis option to configuration file\n      fix macro definition strXcmp error for big endian\n      fix log_hexdump and loga_hexdump\n\n2012-07-31  Manju Rajashekhar  <manj@twitter.com>\n    * twemproxy: version 0.1.19 release\n      close server connection on a stray response (yashh, bmatheny)\n\n2012-06-19  Manju Rajashekhar  <manj@twitter.com>\n    * twemproxy: version 0.1.18 release\n      command line option to set mbuf chunk size\n\n2012-05-09  Manju Rajashekhar  <manj@twitter.com>\n    * twemproxy: version 0.1.17 release\n      use _exit(0) instead of exit(0) when daemonizing\n      use loga instead of log_stderr in nc_stacktrace\n\n2012-02-09  Manju Rajashekhar  <manj@twitter.com>\n    * twemproxy: version 0.1.16 release\n      twemproxy (aka nutcracker) is a fast and lightweight proxy for memcached protocol.\n\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.18359375,
          "content": "FROM gcc\n\nCOPY . /usr/src/twemproxy\nWORKDIR /usr/src/twemproxy\nRUN \\\n  autoreconf -h && \\\n  autoreconf -fvi && \\\n  ./configure && \\\n  make && \\\n  make install\n\nENTRYPOINT [ \"nutcracker\" ]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 9.9345703125,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS"
        },
        {
          "name": "Makefile.am",
          "type": "blob",
          "size": 0.236328125,
          "content": "MAINTAINERCLEANFILES = Makefile.in aclocal.m4 configure config.h.in config.h.in~ stamp-h.in\n\nACLOCAL_AMFLAGS = -I m4\n\nSUBDIRS = contrib src\n\ndist_man_MANS = man/nutcracker.8\n\nEXTRA_DIST = README.md NOTICE LICENSE ChangeLog conf scripts notes\n"
        },
        {
          "name": "NOTICE",
          "type": "blob",
          "size": 6.16015625,
          "content": "twemproxy is a fast and lightweight proxy for memcached protocol\nCopyright (C) 2012 Twitter, Inc.\n\nPortions of twemproxy were inspired from nginx: http://nginx.org/\n\nThe implementation of generic array (nc_array.[ch]) and red black tree\n(nc_rbtree.[ch]) also comes from nginx-0.8.55.\n\n/*\n * Copyright (C) 2002-2010 Igor Sysoev\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY AUTHOR AND CONTRIBUTORS ``AS IS'' AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED.  IN NO EVENT SHALL AUTHOR OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n */\n\nThe generic queue implementation comes from BSD <sys/queue.h>\n\n/*\n * Copyright (c) 1991, 1993\n *   The Regents of the University of California.  All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions\n * are met:\n * 1. Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n * 2. Redistributions in binary form must reproduce the above copyright\n *    notice, this list of conditions and the following disclaimer in the\n *    documentation and/or other materials provided with the distribution.\n * 3. All advertising materials mentioning features or use of this software\n *    must display the following acknowledgement:\n *\tThis product includes software developed by the University of\n *\tCalifornia, Berkeley and its contributors.\n * 4. Neither the name of the University nor the names of its contributors\n *    may be used to endorse or promote products derived from this software\n *    without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS\n * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)\n * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT\n * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY\n * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF\n * SUCH DAMAGE.\n */\n\nThe implementation of consistent hashing and individual hash algorithms were\nborrowed from libmemcached.\n\nCopyright (c) 2011, Data Differential (http://datadifferential.com/)\nCopyright (c) 2007-2010, TangentOrg (Brian Aker)\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are\nmet:\n\n    * Redistributions of source code must retain the above copyright\nnotice, this list of conditions and the following disclaimer.\n\n    * Redistributions in binary form must reproduce the above\ncopyright notice, this list of conditions and the following disclaimer\nin the documentation and/or other materials provided with the\ndistribution.\n\n    * Neither the name of TangentOrg nor the names of its\ncontributors may be used to endorse or promote products derived from\nthis software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\nLIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\nA PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\nOWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\nSPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\nLIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\nDATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\nTHEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\nOF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\nThe source also includes libyaml (yaml-0.2.5) in contrib/ directory\n\nCopyright (c) 2006 Kirill Simonov\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies\nof the Software, and to permit persons to whom the Software is furnished to do\nso, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 17.19140625,
          "content": "# twemproxy (nutcracker) [![Build Status](https://github.com/twitter/twemproxy/actions/workflows/main.yml/badge.svg?branch=master)](https://github.com/twitter/twemproxy/actions/workflows/main.yml?query=branch%3Amaster)\n\n**twemproxy** (pronounced \"two-em-proxy\"), aka **nutcracker** is a fast and lightweight proxy for [memcached](http://www.memcached.org/) and [redis](http://redis.io/) protocol. It was built primarily to reduce the number of connections to the caching servers on the backend. This, together with protocol pipelining and sharding enables you to horizontally scale your distributed caching architecture.\n\n## Build\n\nTo build twemproxy 0.5.0+ from [distribution tarball](https://github.com/twitter/twemproxy/releases):\n\n    $ ./configure\n    $ make\n    $ sudo make install\n\nTo build twemproxy 0.5.0+ from [distribution tarball](https://github.com/twitter/twemproxy/releases) in _debug mode_:\n\n    $ CFLAGS=\"-ggdb3 -O0\" ./configure --enable-debug=full\n    $ make\n    $ sudo make install\n\nTo build twemproxy from source with _debug logs enabled_ and _assertions enabled_:\n\n    $ git clone git@github.com:twitter/twemproxy.git\n    $ cd twemproxy\n    $ autoreconf -fvi\n    $ ./configure --enable-debug=full\n    $ make\n    $ src/nutcracker -h\n\nA quick checklist:\n\n+ Use newer version of gcc (older version of gcc has problems)\n+ Use CFLAGS=\"-O1\" ./configure && make\n+ Use CFLAGS=\"-O3 -fno-strict-aliasing\" ./configure && make\n+ `autoreconf -fvi && ./configure` needs `automake` and `libtool` to be installed\n\n`make check` will run unit tests.\n\n### Older Releases\n\nDistribution tarballs for older twemproxy releases (<= 0.4.1) can be found on [Google Drive](https://drive.google.com/open?id=0B6pVMMV5F5dfMUdJV25abllhUWM&authuser=0).\nThe build steps are the same (`./configure; make; sudo make install`).\n\n## Features\n\n+ Fast.\n+ Lightweight.\n+ Maintains persistent server connections.\n+ Keeps connection count on the backend caching servers low.\n+ Enables pipelining of requests and responses.\n+ Supports proxying to multiple servers.\n+ Supports multiple server pools simultaneously.\n+ Shard data automatically across multiple servers.\n+ Implements the complete [memcached ascii](notes/memcache.md) and [redis](notes/redis.md) protocol.\n+ Easy configuration of server pools through a YAML file.\n+ Supports multiple hashing modes including consistent hashing and distribution.\n+ Can be configured to disable nodes on failures.\n+ Observability via stats exposed on the stats monitoring port.\n+ Works with Linux, *BSD, OS X and SmartOS (Solaris)\n\n## Help\n\n    Usage: nutcracker [-?hVdDt] [-v verbosity level] [-o output file]\n                      [-c conf file] [-s stats port] [-a stats addr]\n                      [-i stats interval] [-p pid file] [-m mbuf size]\n\n    Options:\n      -h, --help             : this help\n      -V, --version          : show version and exit\n      -t, --test-conf        : test configuration for syntax errors and exit\n      -d, --daemonize        : run as a daemon\n      -D, --describe-stats   : print stats description and exit\n      -v, --verbose=N        : set logging level (default: 5, min: 0, max: 11)\n      -o, --output=S         : set logging file (default: stderr)\n      -c, --conf-file=S      : set configuration file (default: conf/nutcracker.yml)\n      -s, --stats-port=N     : set stats monitoring port (default: 22222)\n      -a, --stats-addr=S     : set stats monitoring ip (default: 0.0.0.0)\n      -i, --stats-interval=N : set stats aggregation interval in msec (default: 30000 msec)\n      -p, --pid-file=S       : set pid file (default: off)\n      -m, --mbuf-size=N      : set size of mbuf chunk in bytes (default: 16384 bytes)\n\n## Zero Copy\n\nIn twemproxy, all the memory for incoming requests and outgoing responses is allocated in mbuf. Mbuf enables zero-copy because the same buffer on which a request was received from the client is used for forwarding it to the server. Similarly the same mbuf on which a response was received from the server is used for forwarding it to the client.\n\nFurthermore, memory for mbufs is managed using a reuse pool. This means that once mbuf is allocated, it is not deallocated, but just put back into the reuse pool. By default each mbuf chunk is set to 16K bytes in size. There is a trade-off between the mbuf size and number of concurrent connections twemproxy can support. A large mbuf size reduces the number of read syscalls made by twemproxy when reading requests or responses. However, with a large mbuf size, every active connection would use up 16K bytes of buffer which might be an issue when twemproxy is handling large number of concurrent connections from clients. When twemproxy is meant to handle a large number of concurrent client connections, you should set chunk size to a small value like 512 bytes using the -m or --mbuf-size=N argument.\n\n## Configuration\n\nTwemproxy can be configured through a YAML file specified by the -c or --conf-file command-line argument on process start. The configuration file is used to specify the server pools and the servers within each pool that twemproxy manages. The configuration files parses and understands the following keys:\n\n+ **listen**: The listening address and port (name:port or ip:port) or an absolute path to sock file (e.g. /var/run/nutcracker.sock) for this server pool.\n+ **client_connections**: The maximum number of connections allowed from redis clients. Unlimited by default, though OS-imposed limitations will still apply.\n+ **hash**: The name of the hash function. Possible values are:\n  + one_at_a_time\n  + md5\n  + crc16\n  + crc32 (crc32 implementation compatible with [libmemcached](http://libmemcached.org/))\n  + crc32a (correct crc32 implementation as per the spec)\n  + fnv1_64\n  + fnv1a_64 (default)\n  + fnv1_32\n  + fnv1a_32\n  + hsieh\n  + murmur\n  + jenkins\n+ **hash_tag**: A two character string that specifies the part of the key used for hashing. Eg \"{}\" or \"$$\". [Hash tag](notes/recommendation.md#hash-tags) enable mapping different keys to the same server as long as the part of the key within the tag is the same.\n+ **distribution**: The key distribution mode for choosing backend servers based on the computed hash value. Possible values are:\n  + ketama (default, recommended. An implementation of https://en.wikipedia.org/wiki/Consistent_hashing)\n  + modula (use hash modulo number of servers to choose the backend)\n  + random (choose a random backend for each key of each request)\n+ **timeout**: The timeout value in msec that we wait for to establish a connection to the server or receive a response from a server. By default, we wait indefinitely.\n+ **backlog**: The TCP backlog argument. Defaults to 512.\n+ **tcpkeepalive**: A boolean value that controls if tcp keepalive is enabled for connections to servers. Defaults to false.\n+ **preconnect**: A boolean value that controls if twemproxy should preconnect to all the servers in this pool on process start. Defaults to false.\n+ **redis**: A boolean value that controls if a server pool speaks redis or memcached protocol. Defaults to false.\n+ **redis_auth**: Authenticate to the Redis server on connect.\n+ **redis_db**: The DB number to use on the pool servers. Defaults to 0. Note: Twemproxy will always present itself to clients as DB 0.\n+ **server_connections**: The maximum number of connections that can be opened to each server. By default, we open at most 1 server connection.\n+ **auto_eject_hosts**: A boolean value that controls if server should be ejected temporarily when it fails consecutively server_failure_limit times. See [liveness recommendations](notes/recommendation.md#liveness) for information. Defaults to false.\n+ **server_retry_timeout**: The timeout value in msec to wait for before retrying on a temporarily ejected server, when auto_eject_hosts is set to true. Defaults to 30000 msec.\n+ **server_failure_limit**: The number of consecutive failures on a server that would lead to it being temporarily ejected when auto_eject_hosts is set to true. Defaults to 2.\n+ **servers**: A list of server address, port and weight (name:port:weight or ip:port:weight) for this server pool.\n\n\nFor example, the configuration file in [conf/nutcracker.yml](conf/nutcracker.yml), also shown below, configures 5 server pools with names - _alpha_, _beta_, _gamma_, _delta_ and omega. Clients that intend to send requests to one of the 10 servers in pool delta connect to port 22124 on 127.0.0.1. Clients that intend to send request to one of 2 servers in pool omega connect to unix path /tmp/gamma. Requests sent to pool alpha and omega have no timeout and might require timeout functionality to be implemented on the client side. On the other hand, requests sent to pool beta, gamma and delta timeout after 400 msec, 400 msec and 100 msec respectively when no response is received from the server. Of the 5 server pools, only pools alpha, gamma and delta are configured to use server ejection and hence are resilient to server failures. All the 5 server pools use ketama consistent hashing for key distribution with the key hasher for pools alpha, beta, gamma and delta set to fnv1a_64 while that for pool omega set to hsieh. Also only pool beta uses [nodes names](notes/recommendation.md#node-names-for-consistent-hashing) for consistent hashing, while pool alpha, gamma, delta and omega use 'host:port:weight' for consistent hashing. Finally, only pool alpha and beta can speak the redis protocol, while pool gamma, delta and omega speak memcached protocol.\n\n    alpha:\n      listen: 127.0.0.1:22121\n      hash: fnv1a_64\n      distribution: ketama\n      auto_eject_hosts: true\n      redis: true\n      server_retry_timeout: 2000\n      server_failure_limit: 1\n      servers:\n       - 127.0.0.1:6379:1\n\n    beta:\n      listen: 127.0.0.1:22122\n      hash: fnv1a_64\n      hash_tag: \"{}\"\n      distribution: ketama\n      auto_eject_hosts: false\n      timeout: 400\n      redis: true\n      servers:\n       - 127.0.0.1:6380:1 server1\n       - 127.0.0.1:6381:1 server2\n       - 127.0.0.1:6382:1 server3\n       - 127.0.0.1:6383:1 server4\n\n    gamma:\n      listen: 127.0.0.1:22123\n      hash: fnv1a_64\n      distribution: ketama\n      timeout: 400\n      backlog: 1024\n      preconnect: true\n      auto_eject_hosts: true\n      server_retry_timeout: 2000\n      server_failure_limit: 3\n      servers:\n       - 127.0.0.1:11212:1\n       - 127.0.0.1:11213:1\n\n    delta:\n      listen: 127.0.0.1:22124\n      hash: fnv1a_64\n      distribution: ketama\n      timeout: 100\n      auto_eject_hosts: true\n      server_retry_timeout: 2000\n      server_failure_limit: 1\n      servers:\n       - 127.0.0.1:11214:1\n       - 127.0.0.1:11215:1\n       - 127.0.0.1:11216:1\n       - 127.0.0.1:11217:1\n       - 127.0.0.1:11218:1\n       - 127.0.0.1:11219:1\n       - 127.0.0.1:11220:1\n       - 127.0.0.1:11221:1\n       - 127.0.0.1:11222:1\n       - 127.0.0.1:11223:1\n\n    omega:\n      listen: /tmp/gamma 0666\n      hash: hsieh\n      distribution: ketama\n      auto_eject_hosts: false\n      servers:\n       - 127.0.0.1:11214:100000\n       - 127.0.0.1:11215:1\n\nFinally, to make writing a syntactically correct configuration file easier, twemproxy provides a command-line argument `-t` or `--test-conf` that can be used to test the YAML configuration file for any syntax error.\n\n## Observability\n\nObservability in twemproxy is through logs and stats.\n\nTwemproxy exposes stats at the granularity of server pool and servers per pool through the stats monitoring port by responding with the raw data over TCP. The stats are essentially JSON formatted key-value pairs, with the keys corresponding to counter names. By default stats are exposed on port 22222 and aggregated every 30 seconds. Both these values can be configured on program start using the `-c` or `--conf-file` and `-i` or `--stats-interval` command-line arguments respectively. You can print the description of all stats exported by  using the `-D` or `--describe-stats` command-line argument.\n\n    $ nutcracker --describe-stats\n\n    pool stats:\n      client_eof          \"# eof on client connections\"\n      client_err          \"# errors on client connections\"\n      client_connections  \"# active client connections\"\n      server_ejects       \"# times backend server was ejected\"\n      forward_error       \"# times we encountered a forwarding error\"\n      fragments           \"# fragments created from a multi-vector request\"\n\n    server stats:\n      server_eof          \"# eof on server connections\"\n      server_err          \"# errors on server connections\"\n      server_timedout     \"# timeouts on server connections\"\n      server_connections  \"# active server connections\"\n      requests            \"# requests\"\n      request_bytes       \"total request bytes\"\n      responses           \"# responses\"\n      response_bytes      \"total response bytes\"\n      in_queue            \"# requests in incoming queue\"\n      in_queue_bytes      \"current request bytes in incoming queue\"\n      out_queue           \"# requests in outgoing queue\"\n      out_queue_bytes     \"current request bytes in outgoing queue\"\n\nSee [`notes/debug.txt`](notes/debug.txt) for examples of how to read the stats from the stats port.\n\nLogging in twemproxy is only available when twemproxy is built with logging enabled. By default logs are written to stderr. Twemproxy can also be configured to write logs to a specific file through the `-o` or `--output` command-line argument. On a running twemproxy, we can turn log levels up and down by sending it SIGTTIN and SIGTTOU signals respectively and reopen log files by sending it SIGHUP signal.\n\n## Pipelining\n\nTwemproxy enables proxying multiple client connections onto one or few server connections. This architectural setup makes it ideal for pipelining requests and responses and hence saving on the round trip time.\n\nFor example, if twemproxy is proxying three client connections onto a single server and we get requests - `get key\\r\\n`, `set key 0 0 3\\r\\nval\\r\\n` and `delete key\\r\\n` on these three connections respectively, twemproxy would try to batch these requests and send them as a single message onto the server connection as `get key\\r\\nset key 0 0 3\\r\\nval\\r\\ndelete key\\r\\n`.\n\nPipelining is the reason why twemproxy ends up doing better in terms of throughput even though it introduces an extra hop between the client and server.\n\n## Deployment\n\nIf you are deploying twemproxy in production, you might consider reading through the [recommendation document](notes/recommendation.md) to understand the parameters you could tune in twemproxy to run it efficiently in the production environment.\n\n## Utils\n+ [collectd-plugin](https://github.com/bewie/collectd-twemproxy)\n+ [munin-plugin](https://github.com/eveiga/contrib/tree/nutcracker/plugins/nutcracker)\n+ [twemproxy-ganglia-module](https://github.com/ganglia/gmond_python_modules/tree/master/twemproxy)\n+ [nagios checks](https://github.com/wanelo/nagios-checks/blob/master/check_twemproxy)\n+ [circonus](https://github.com/wanelo-chef/nad-checks/blob/master/recipes/twemproxy.rb)\n+ [puppet module](https://github.com/wuakitv/puppet-twemproxy)\n+ [nutcracker-web](https://github.com/kontera-technologies/nutcracker-web)\n+ [redis-twemproxy agent](https://github.com/Stono/redis-twemproxy-agent)\n+ [sensu-metrics](https://github.com/sensu-plugins/sensu-plugins-twemproxy/blob/master/bin/metrics-twemproxy.rb)\n+ [redis-mgr](https://github.com/idning/redis-mgr)\n+ [smitty for twemproxy failover](https://github.com/areina/smitty)\n+ [Beholder, a Python agent for twemproxy failover](https://github.com/Serekh/beholder)\n+ [chef cookbook](https://supermarket.getchef.com/cookbooks/twemproxy)\n+ [twemsentinel](https://github.com/yak0/twemsentinel)\n\n## Companies using Twemproxy in Production\n+ [Twitter](https://twitter.com/)\n+ [Wikimedia](https://www.wikimedia.org/)\n+ [Pinterest](http://pinterest.com/)\n+ [Snapchat](http://www.snapchat.com/)\n+ [Flickr](https://www.flickr.com)\n+ [Yahoo!](https://www.yahoo.com)\n+ [Tumblr](https://www.tumblr.com/)\n+ [Vine](http://vine.co/)\n+ [Wayfair](http://www.wayfair.com/)\n+ [Kiip](http://www.kiip.me/)\n+ [Wuaki.tv](https://wuaki.tv/)\n+ [Wanelo](http://wanelo.com/)\n+ [Kontera](http://kontera.com/)\n+ [Bright](http://www.bright.com/)\n+ [56.com](http://www.56.com/)\n+ [Digg](http://digg.com/)\n+ [Gawkermedia](http://advertising.gawker.com/)\n+ [3scale.net](http://3scale.net)\n+ [Ooyala](http://www.ooyala.com)\n+ [Twitch](http://twitch.tv)\n+ [Socrata](http://www.socrata.com/)\n+ [Hootsuite](http://hootsuite.com/)\n+ [Trivago](http://www.trivago.com/)\n+ [Machinezone](http://www.machinezone.com)\n+ [Path](https://path.com)\n+ [AOL](http://engineering.aol.com/)\n+ [Soysuper](https://soysuper.com/)\n+ [Vinted](http://vinted.com/)\n+ [Poshmark](https://poshmark.com/)\n+ [FanDuel](https://www.fanduel.com/)\n+ [Bloomreach](http://bloomreach.com/)\n+ [Hootsuite](https://hootsuite.com)\n+ [Tradesy](https://www.tradesy.com/)\n+ [Uber](http://uber.com) ([details](http://highscalability.com/blog/2015/9/14/how-uber-scales-their-real-time-market-platform.html))\n+ [Greta](https://greta.io/)\n\n## Issues and Support\n\nHave a bug or a question? Please create an issue here on GitHub!\n\nhttps://github.com/twitter/twemproxy/issues\n\n## Committers\n\n* Manju Rajashekhar ([@manju](https://twitter.com/manju))\n* Lin Yang ([@idning](https://github.com/idning))\n* Tyson Andre ([@TysonAndre](https://github.com/TysonAndre))\n\nThank you to all of our [contributors](https://github.com/twitter/twemproxy/graphs/contributors)!\n\n## License\n\nCopyright 2012 Twitter, Inc.\n\nLicensed under the Apache License, Version 2.0: http://www.apache.org/licenses/LICENSE-2.0\n"
        },
        {
          "name": "ci",
          "type": "tree",
          "content": null
        },
        {
          "name": "conf",
          "type": "tree",
          "content": null
        },
        {
          "name": "configure.ac",
          "type": "blob",
          "size": 5.986328125,
          "content": "# Define the package version numbers and the bug reporting address\nm4_define([NC_MAJOR], 0)\nm4_define([NC_MINOR], 5)\nm4_define([NC_PATCH], 0)\nm4_define([NC_BUGS], [https://github.com/twitter/twemproxy/issues])\n\n# Initialize autoconf\nAC_PREREQ([2.64])\nAC_INIT([nutcracker], [NC_MAJOR.NC_MINOR.NC_PATCH], [NC_BUGS])\nAC_CONFIG_SRCDIR([src/nc.c])\nAC_CONFIG_AUX_DIR([config])\nAC_CONFIG_HEADERS([config.h:config.h.in])\nAC_CONFIG_MACRO_DIR([m4])\n\n# Initialize automake\nAM_INIT_AUTOMAKE([1.9 foreign])\n\n# Define macro variables for the package version numbers\nAC_DEFINE(NC_VERSION_MAJOR, NC_MAJOR, [Define the major version number])\nAC_DEFINE(NC_VERSION_MINOR, NC_MINOR, [Define the minor version number])\nAC_DEFINE(NC_VERSION_PATCH, NC_PATCH, [Define the patch version number])\nAC_DEFINE(NC_VERSION_STRING, \"NC_MAJOR.NC_MINOR.NC_PATCH\", [Define the version string])\n\n# Checks for language\nAC_LANG([C])\n\n# Checks for programs\nAC_PROG_AWK\nAC_PROG_CC\nAC_PROG_CPP\nAC_PROG_CXX\nAC_PROG_INSTALL\nAC_PROG_LN_S\nAC_PROG_MAKE_SET\nAC_PROG_RANLIB\nAC_PROG_LIBTOOL\n\n# Checks for typedefs, structures, and compiler characteristics\nAC_C_INLINE\nAC_TYPE_INT8_T\nAC_TYPE_INT16_T\nAC_TYPE_INT32_T\nAC_TYPE_INT64_T\nAC_TYPE_INTMAX_T\nAC_TYPE_INTPTR_T\nAC_TYPE_UINT8_T\nAC_TYPE_UINT16_T\nAC_TYPE_UINT32_T\nAC_TYPE_UINT64_T\nAC_TYPE_UINTMAX_T\nAC_TYPE_UINTPTR_T\nAC_TYPE_OFF_T\nAC_TYPE_PID_T\nAC_TYPE_SIZE_T\nAC_TYPE_SSIZE_T\n\nAC_C_BIGENDIAN(\n  [],\n  [AC_DEFINE(HAVE_LITTLE_ENDIAN, 1, [Define to 1 if machine is little endian])],\n  [AC_MSG_ERROR([endianess of this machine is unknown])],\n  [AC_MSG_ERROR([universial endianess not supported])]\n)\n\n# Checks for header files\nAC_HEADER_STDBOOL\nAC_CHECK_HEADERS([fcntl.h float.h limits.h stddef.h stdlib.h string.h unistd.h])\nAC_CHECK_HEADERS([inttypes.h stdint.h])\nAC_CHECK_HEADERS([sys/ioctl.h sys/time.h sys/uio.h])\nAC_CHECK_HEADERS([sys/socket.h sys/un.h netinet/in.h arpa/inet.h netdb.h])\nAC_CHECK_HEADERS([execinfo.h],\n  [AC_DEFINE(HAVE_BACKTRACE, [1], [Define to 1 if backtrace is supported])], [])\nAC_CHECK_HEADERS([sys/epoll.h], [], [])\nAC_CHECK_HEADERS([sys/event.h], [], [])\n\n# Checks for libraries\nAC_CHECK_LIB([m], [pow])\nAC_CHECK_LIB([pthread], [pthread_create])\n\n# Checks for library functions\nAC_FUNC_FORK\nAC_FUNC_MALLOC\nAC_FUNC_REALLOC\nAC_CHECK_FUNCS([dup2 gethostname gettimeofday strerror])\nAC_CHECK_FUNCS([socket])\nAC_CHECK_FUNCS([memchr memmove memset])\nAC_CHECK_FUNCS([strchr strndup strtoul])\nAC_CHECK_FUNCS([strdup])\n\nAC_CACHE_CHECK([if epoll works], [ac_cv_epoll_works],\n  AC_TRY_RUN([\n#include <stdio.h>\n#include <stdlib.h>\n#include <sys/epoll.h>\nint\nmain(int argc, char **argv)\n{\n    int fd;\n\n    fd = epoll_create(256);\n    if (fd < 0) {\n        perror(\"epoll_create:\");\n        exit(1);\n    }\n    exit(0);\n}\n  ], [ac_cv_epoll_works=yes], [ac_cv_epoll_works=no]))\nAS_IF([test \"x$ac_cv_epoll_works\" = \"xyes\"],\n  [AC_DEFINE([HAVE_EPOLL], [1], [Define to 1 if epoll is supported])], [])\n\nAC_CACHE_CHECK([if kqueue works], [ac_cv_kqueue_works],\n  AC_TRY_RUN([\n#include <stdio.h>\n#include <stdlib.h>\n#include <sys/types.h>\n#include <sys/event.h>\n#include <sys/time.h>\nint\nmain(int argc, char **argv)\n{\n    int fd;\n\n    fd = kqueue();\n    if (fd < 0) {\n        perror(\"kqueue:\");\n        exit(1);\n    }\n    exit(0);\n}\n  ], [ac_cv_kqueue_works=yes], [ac_cv_kqueue_works=no]))\nAS_IF([test \"x$ac_cv_kqueue_works\" = \"xyes\"],\n  [AC_DEFINE([HAVE_KQUEUE], [1], [Define to 1 if kqueue is supported])], [])\n\nAC_CACHE_CHECK([if event ports works], [ac_cv_evports_works],\n  AC_TRY_RUN([\n#include <stdio.h>\n#include <stdlib.h>\n#include <port.h>\nint\nmain(int argc, char **argv)\n{\n    int fd;\n\n    fd = port_create();\n    if (fd < 0) {\n        perror(\"port_create:\");\n        exit(1);\n    }\n    exit(0);\n}\n  ], [ac_cv_evports_works=yes], [ac_cv_evports_works=no]))\nAS_IF([test \"x$ac_cv_evports_works\" = \"xyes\"],\n  [AC_DEFINE([HAVE_EVENT_PORTS], [1], [Define to 1 if event ports is supported])], [])\n\nAS_IF([test \"x$ac_cv_epoll_works\" = \"xno\" &&\n       test \"x$ac_cv_kqueue_works\" = \"xno\" &&\n       test \"x$ac_cv_evports_works\" = \"xno\"],\n  [AC_MSG_ERROR([either epoll or kqueue or event ports support is required])], [])\n\nAM_CONDITIONAL([OS_LINUX], [test \"x$ac_cv_epoll_works\" = \"xyes\"])\nAM_CONDITIONAL([OS_BSD], [test \"x$ac_cv_kqueue_works\" = \"xyes\"])\nAM_CONDITIONAL([OS_SOLARIS], [test \"x$ac_cv_evports_works\" = \"xyes\"])\nAM_CONDITIONAL([OS_FREEBSD], [test \"$(uname -v | cut -c 1-10)\" == \"FreeBSD 10\"])\n\n# Package options\nAC_MSG_CHECKING([whether to enable debug logs and asserts])\nAC_ARG_ENABLE([debug],\n  [AS_HELP_STRING(\n    [--enable-debug=@<:@full|yes|log|no@:>@],\n    [enable debug logs and asserts @<:@default=no@:>@])\n  ],\n  [],\n  [enable_debug=no])\nAS_CASE([x$enable_debug],\n  [xfull], [AC_DEFINE([HAVE_ASSERT_PANIC], [1],\n                      [Define to 1 if panic on an assert is enabled])\n            AC_DEFINE([HAVE_DEBUG_LOG], [1], [Define to 1 if debug log is enabled])\n           ],\n  [xyes], [AC_DEFINE([HAVE_ASSERT_LOG], [1],\n                     [Define to 1 if log on an assert is enabled])\n           AC_DEFINE([HAVE_DEBUG_LOG], [1], [Define to 1 if debug log is enabled])\n          ],\n  [xlog], [AC_DEFINE([HAVE_DEBUG_LOG], [1], [Define to 1 if debug log is enabled])],\n  [xno], [],\n  [AC_MSG_FAILURE([invalid value ${enable_debug} for --enable-debug])])\nAC_MSG_RESULT($enable_debug)\n\nAC_MSG_CHECKING([whether to disable stats])\nAC_ARG_ENABLE([stats],\n  [AS_HELP_STRING(\n    [--disable-stats],\n    [disable stats])\n  ],\n  [disable_stats=yes],\n  [disable_stats=no])\nAS_IF([test \"x$disable_stats\" = xyes],\n  [],\n  [AC_DEFINE([HAVE_STATS], [1], [Define to 1 if stats is not disabled])])\nAC_MSG_RESULT($disable_stats)\n\n# Untar the yaml-0.2.5 in contrib/ before config.status is rerun\nAC_CONFIG_COMMANDS_PRE([tar xvfz contrib/yaml-0.2.5.tar.gz -C contrib])\n\n# Call yaml-0.2.5 ./configure recursively\nAC_CONFIG_SUBDIRS([contrib/yaml-0.2.5])\n\n# Define Makefiles\nAC_CONFIG_FILES([Makefile\n                 contrib/Makefile\n                 src/Makefile\n                 src/hashkit/Makefile\n                 src/proto/Makefile\n                 src/event/Makefile])\n\n# Generate the \"configure\" script\nAC_OUTPUT\n"
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "m4",
          "type": "tree",
          "content": null
        },
        {
          "name": "man",
          "type": "tree",
          "content": null
        },
        {
          "name": "notes",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test_in_docker.sh",
          "type": "blob",
          "size": 1.126953125,
          "content": "#!/usr/bin/env bash\n# Main ci script for nutcracker tests\nset -xeu\n\nfunction print_usage() {\n    echo \"Usage: $0 [REDIS_VER]\" 1>&2\n    echo \"e.g.   $0 3.2.12\" 1>&2\n    exit 1\n}\n\nREDIS_VER=3.2.11\nif [[ \"$#\" > 1 ]]; then\n    echo \"Too many arguments\" 1>&2\n    print_usage\nelif [[ \"$#\" > 0 ]]; then\n\tREDIS_VER=\"$1\"\nfi\n\nPACKAGE_NAME=\"nutcrackerci\"\n\nTAG=$( git describe --always )\nDOCKER_IMG_NAME=twemproxy-build-$PACKAGE_NAME-$REDIS_VER-$TAG\n\nrm -rf twemproxy\n\nDOCKER_TAG=twemproxy-$PACKAGE_NAME-$REDIS_VER:$TAG\n\ndocker build -f ci/Dockerfile \\\n   --tag $DOCKER_TAG \\\n   --build-arg=REDIS_VER=$REDIS_VER \\\n   .\n\n# Run c unit tests\nUNIT_TEST_FAIL=no\nif ! docker run \\\n   --rm \\\n   -e REDIS_VER=$REDIS_VER \\\n   --workdir=/usr/src/twemproxy/src \\\n   --name=$DOCKER_IMG_NAME \\\n   --entrypoint=/bin/sh \\\n   $DOCKER_TAG \\\n   -c 'make test_all && ./test_all'; then\n\n    UNIT_TEST_FAIL=yes\nfi\n\n# Run nose tests\ndocker run \\\n   --rm \\\n   -e REDIS_VER=$REDIS_VER \\\n   --name=$DOCKER_IMG_NAME \\\n   $DOCKER_TAG \\\n   nosetests -v test_redis test_memcache test_system\n\nif [ $UNIT_TEST_FAIL = yes ]; then\n    echo \"See earlier output, unit tests failed\" 1>&2\n    exit 1\nfi\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}