{
  "metadata": {
    "timestamp": 1736557437944,
    "page": 447,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "LAION-AI/Open-Assistant",
      "stars": 37176,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.03,
          "content": "**/node_modules\nwebsite/.next\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.05,
          "content": "* text=auto eol=lf\n*.ipynb linguist-documentation\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.35,
          "content": ".venv*\nvenv\n.env\n*.pyc\n*.swp\n*.egg-info\n__pycache__\n.DS_Store\n\n# Generated files\nbackend/oasst-openapi.json\nbackend/openapi.json\n\n# ignore jupyter notebook checkpoints\n.ipynb_checkpoints\n\n*.log\n*.db\n\n# edit docs using obsidian.md, these files should not appear in the repo\n.obsidian/\n.pytest_cache/\n\n/docker-compose.override.yml\n\n# JetBrains PyCharm:\n.idea/\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 3.43,
          "content": "# WARNING!\n#\n# When making changes to auto-formatters used in pre-commit hooks, you are\n# likely to cause merge conflicts with main and/or other pull requests.\n# Fixing them might revert other people's work. Expect pain!\n# To avoid accidental reversions and keep it easy to review, please make sure\n# that changes here are in a pull request by themselves, that it consists of\n# two commits:\n#\n# 1. The changes to this file\n# 2. Changes made by running `python3 -m pre_commit run --all-files`.\n#\n# Then each time your pull request is blocked by a merge conflict, do the\n# following steps:\n#\n#    git reset HEAD^1 && git checkout -f    # discard the change commit\n#    git rebase main                        # re-apply other people's changes\n#    python3 -m pre_commit run --all-files  # re-run the rules\n#    git add .                              # add the newly changed files\n#    git commit -m 'apply pre-commit'       # commit it\n#    git push -f                            # force push back to your branch\n#\n# Keep in mind you may have to do this a few times, as changes here may impact\n# other pull requests. Try to keep it up-to-date so they can go in when it'll\n# cause least disruption.\n#\n# /WARNING!\n\nexclude: build|stubs|^bot/templates/$|openassistant/templates|docs/docs/api/openapi.json|scripts/postprocessing/regex_pii_detector.py\n\ndefault_language_version:\n  python: python3\n\nci:\n  autofix_prs: true\n  autoupdate_commit_msg: \"[pre-commit.ci] pre-commit suggestions\"\n  autoupdate_schedule: quarterly\n  skip: [\"next-lint-website\"] # list of hook ids to skip only in pre-commit.ci\n\nrepos:\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v4.4.0\n    hooks:\n      - id: trailing-whitespace\n      - id: check-ast\n      - id: check-yaml\n        # Always check YAML but skip a few YAML files that are auto-generated\n        # and which break the standard YAML check.  The alternative would be to\n        # skip any unsafe errors (and thus break YAML compatibility) or use\n        # some other checker that may not work in general.\n        exclude: ^copilot/.*/addons/.*$\n      - id: check-json\n      - id: check-case-conflict\n      - id: detect-private-key\n      - id: fix-encoding-pragma\n        args: [--remove]\n      - id: forbid-submodules\n      - id: mixed-line-ending\n      - id: requirements-txt-fixer\n      - id: check-executables-have-shebangs\n      - id: check-shebang-scripts-are-executable\n      - id: check-byte-order-marker\n      - id: check-symlinks\n      - id: check-merge-conflict\n      - id: check-added-large-files\n        args: [--maxkb=1024]\n      - id: end-of-file-fixer\n\n  - repo: https://github.com/psf/black\n    rev: 23.3.0\n    hooks:\n      - id: black-jupyter\n\n  - repo: https://github.com/pycqa/isort\n    rev: 5.12.0\n    hooks:\n      - id: isort\n        args: [\"--profile\", \"black\", \"--filter-files\"]\n\n  - repo: https://github.com/charliermarsh/ruff-pre-commit\n    rev: v0.0.263\n    hooks:\n      - id: ruff\n        args: [\"--fix\"]\n\n  - repo: https://github.com/pre-commit/mirrors-prettier\n    rev: v2.7.1\n    hooks:\n      - id: prettier\n        args:\n          [\n            --prose-wrap=always,\n            --write,\n            --ignore-path=./website/.prettierignore,\n          ]\n\n  - repo: local\n    hooks:\n      - id: next-lint-website\n        name: Lint website\n        files: ^website/\n        exclude: ^website/node_modules/\n        types_or: [javascript, jsx, ts, tsx]\n        language: node\n        pass_filenames: false\n        entry: website/next-lint.js\n"
        },
        {
          "name": ".python-version",
          "type": "blob",
          "size": 0.01,
          "content": "3.10.8\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 0.84,
          "content": "* @yk @andreaskoepf\n/website/ @AbdBarho @notmd @yk @andreaskoepf\n/website/src/data/team.json @yk @andreaskoepf @fozziethebeat @AbdBarho @notmd @theblackcat102 @sanagno @olliestanley @andrewm4894\n/model/ @theblackcat102 @sanagno @dvruette @andreaskoepf @yk @jordiclive @shahules786\n/copilot/ @andreaskoepf @yk\n/docs/ @andrewm4894 @olliestanley @andreaskoepf @yk\n/.devcontainer/ @andrewm4894 @andreaskoepf @yk\n/notebooks/ @andrewm4894 @olliestanley @andreaskoepf @yk\n/data @Vechtomov @bitplane @ontocord @olliestanley @sedthh\n/safety @SummerSigh @shahules786 @olliestanley\n/inference/ @yk @andreaskoepf @olliestanley @AbdBarho\n/backend/ @andreaskoepf @melvinebenezer @yk\n/oasst-data/ @andreaskoepf @yk @olliestanley\n/oasst-shared/ @andreaskoepf @melvinebenezer @yk @olliestanley @AbdBarho\ndocker-compose.yaml @andreaskoepf @melvinebenezer @yk @olliestanley @AbdBarho\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 7.71,
          "content": "<a href=\"https://github-com.translate.goog/LAION-AI/Open-Assistant/blob/main/CONTRIBUTING.md?_x_tr_sl=auto&_x_tr_tl=en&_x_tr_hl=en&_x_tr_pto=wapp\">![Translate](https://img.shields.io/badge/Translate-blue)</a>\n\n# Iâ€™m in! Now what?\n\n[Join the OpenAssistant Contributors Discord Server!](https://ykilcher.com/open-assistant-discord),\nthis is for work coordination.\n\n[Join the LAION Discord Server!](https://discord.com/invite/mVcgxMPD7e), it has\na dedicated channel and is more public.\n\n[and / or the YK Discord Server](https://ykilcher.com/discord), also has a\ndedicated, but not as active, channel.\n\n[Visit the Notion](https://ykilcher.com/open-assistant)\n\n### Taking on Tasks\n\nWe have a growing task list of\n[issues](https://github.com/LAION-AI/Open-Assistant/issues). Find an issue that\nappeals to you and make a comment that you'd like to work on it. Include in your\ncomment a brief description of how you'll solve the problem and if there are any\nopen questions you want to discuss. Once a project coordinator has assigned the\nissue to you, start working on it.\n\nIf the issue is currently unclear but you are interested, please post in Discord\nand someone can help clarify the issue in more detail.\n\n**Always Welcome:** Documentation markdowns in `docs/`, docstrings, diagrams of\nthe system architecture, and other documentation.\n\n### Submitting Work\n\nWe're all working on different parts of Open Assistant together. To make\ncontributions smoothly we recommend the following:\n\n1.  [Fork this project repository](https://docs.github.com/en/get-started/quickstart/fork-a-repo)\n    and clone it to your local machine. (Read more\n    [About Forks](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/about-forks))\n1.  Before working on any changes, try to\n    [sync the forked repository](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/working-with-forks/syncing-a-fork)\n    to keep it up-to-date with the upstream repository.\n1.  On a\n    [new branch](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-and-deleting-branches-within-your-repository)\n    in your fork (aka a \"feature branch\" and not `main`) work on a small focused\n    change that only touches on a few files.\n1.  Run `pre-commit` and make sure all files have formatting fixed. This\n    simplifies life for reviewers.\n1.  Package up a small bit of work that solves part of the problem\n    [into a Pull Request](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/creating-a-pull-request-from-a-fork)\n    and\n    [send it out for review](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/requesting-a-pull-request-review).\n    [Here](https://github.com/LAION-AI/Open-Assistant/pull/658) is an example PR\n    for this project to illustrate this flow.\n1.  If you're lucky, we can merge your change into `main` without any problems.\n    If there are changes to files you're working on, resolve them by:\n    1.  First try to rebase as suggested\n        [in these instructions](https://timwise.co.uk/2019/10/14/merge-vs-rebase/#should-you-rebase).\n    1.  If rebasing feels too painful, merge as suggested\n        [in these instructions](https://timwise.co.uk/2019/10/14/merge-vs-rebase/#should-you-merge).\n1.  Once you've resolved conflicts (if any), finish the review and\n    [squash and merge](https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/incorporating-changes-from-a-pull-request/about-pull-request-merges#squash-and-merge-your-commits)\n    your PR (when squashing try to clean up or update the individual commit\n    messages to be one sensible single one).\n1.  Merge in your change and move on to a new issue or the second step of your\n    current issue.\n\nAdditionally, if someone is working on an issue that interests you, ask if they\nneed help on it or would like suggestions on how to approach the issue. If so,\nshare wildly. If they seem to have a good handle on it, let them work on their\nsolution until a challenge comes up.\n\n#### Tips\n\n- At any point you can compare your feature branch to the upstream/main of\n  `LAION-AI/Open-Assistant` by using a URL like this:\n  https://github.com/LAION-AI/Open-Assistant/compare/main...andrewm4894:Open-Assistant:my-example-feature-branch.\n  Obviously just replace `andrewm4894` with your own GitHub user name and\n  `my-example-feature-branch` with whatever you called the feature branch you\n  are working on, so something like\n  `https://github.com/LAION-AI/Open-Assistant/compare/main...<your_github_username>:Open-Assistant:<your_branch_name>`.\n  This will show the changes that would appear in a PR, so you can check this to\n  make sure only the files you have changed or added will be part of the PR.\n- Try not to work on the `main` branch in your fork - ideally you can keep this\n  as just an updated copy of `main` from `LAION-AI/Open-Assistant`.\n- If your feature branch gets messed up, just update the `main` branch in your\n  fork and create a fresh new clean \"feature branch\" where you can add your\n  changes one by one in separate commits or all as a single commit.\n\n### When does a review finish\n\nA review finishes when all blocking comments are addressed and at least one\nowning reviewer has approved the PR. Be sure to acknowledge any non-blocking\ncomments either by making the requested change, explaining why it's not being\naddressed now, or filing an issue to handle it later.\n\n## Developer Setup\n\nWork is organized in the\n[project board](https://github.com/orgs/LAION-AI/projects/3).\n\n**Anything that is in the `Todo` column and not assigned, is up for grabs.\nMeaning we'd be happy for anyone to do these tasks.**\n\nIf you want to work on something, assign yourself to it or write a comment that\nyou want to work on it and what you plan to do.\n\n- There's an [introduction for developers](docs/docs/guides/developers.md) that\n  gives an overview of the different tools and technologies used in the project.\n- To get started with development, if you want to work on the backend, have a\n  look at `backend/README.md`.\n- If you want to work on any frontend, have a look at `website/README.md`.\n\nThere is also a minimal implementation of a frontend in the `text-frontend`\nfolder.\n\nWe are using Python 3.10 for the backend.\n\nCheck out the\n[High-Level Protocol Architecture](https://www.notion.so/High-Level-Protocol-Architecture-6f1fd3551da74213b560ead369f132dc)\n\n### Website\n\nThe website is built using Next.js and is in the `website` folder.\n\n### Pre-commit\n\nWe are using `pre-commit` to enforce code style and formatting.\n\nInstall `pre-commit` from [its website](https://pre-commit.com) and run\n`pre-commit install` to install the pre-commit hooks.\n\nIn case you haven't done this, have already committed, and CI is failing, you\ncan run `pre-commit run --all-files` to run the pre-commit hooks on all files.\n\n### Deployment\n\nUpon making a release on GitHub, all docker images are automatically built and\npushed to ghcr.io. The docker images are tagged with the release version and the\n`latest` tag. Further, the ansible playbook in `ansible/dev.yaml` is run to\nautomatically deploy the built release to the dev machine.\n\n### Contribute a Dataset\n\nSee\n[here](https://github.com/LAION-AI/Open-Assistant/blob/main/data/datasets/README.md)\n\n## Translations\n\n[![translation badge](https://inlang.com/badge?url=github.com/LAION-AI/Open-Assistant)](https://inlang.com/editor/github.com/LAION-AI/Open-Assistant?ref=badge)\n\nTo add translations, you can manually edit the JSON translation files in\n`website/public/locales`, use the [inlang](https://inlang.com/) online editor,\nor run `npm run inlang:lint` inside `website` to find missing translations.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.09,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.07,
          "content": "<h1 align=\"center\">\n    <span>Open-Assistant</span>\n  <img width=\"auto\" height=\"50px\" src=\"https://github.com/LAION-AI/Open-Assistant/blob/main/assets/logo_crop.png\"/>\n</h1>\n\n<blockquote>\n<p>:memo: <strong>NOTE</strong>: OpenAssistant is completed, and the project is now finished. Thank you to everyone who contributed! Check out our <a href=\"https://projects.laion.ai/Open-Assistant/blog/2023/10/25/open-assistant-is-completed\">blog post</a> for more information. The final published oasst2 dataset can be found on HuggingFace at <a href=\"https://huggingface.co/datasets/OpenAssistant/oasst2\">OpenAssistant/oasst2</a></p>\n</blockquote>\n\n<div align=\"center\">\n\n<a href=\"https://github.com/LAION-AI/Open-Assistant/stargazers\">![GitHub Repo stars](https://img.shields.io/github/stars/LAION-AI/Open-Assistant?style=social)</a>\n<a href=\"https://laion-ai.github.io/Open-Assistant/\">![Docs](https://img.shields.io/badge/docs-laion--ai.github.io%2FOpen--Assistant%2F-green)</a>\n<a href=\"https://github.com/LAION-AI/Open-Assistant/actions/workflows/build-frontend.yaml\">![GitHub Workflow Status](https://img.shields.io/github/actions/workflow/status/LAION-AI/Open-Assistant/build-frontend.yaml?label=build-frontend)</a>\n<a href=\"https://github.com/LAION-AI/Open-Assistant/actions/workflows/build-postgres.yaml\">![GitHub Workflow Status](https://img.shields.io/github/actions/workflow/status/LAION-AI/Open-Assistant/build-postgres.yaml?label=build-postgres)</a>\n<a href=\"https://github.com/LAION-AI/Open-Assistant/actions/workflows/pre-commit.yaml\">![GitHub Workflow Status](https://img.shields.io/github/actions/workflow/status/LAION-AI/Open-Assistant/pre-commit.yaml?label=pre-commit)</a>\n<a href=\"https://github.com/LAION-AI/Open-Assistant/actions/workflows/test-api-contract.yaml\">![GitHub Workflow Status](https://img.shields.io/github/actions/workflow/status/LAION-AI/Open-Assistant/test-api-contract.yaml?label=tests-api)</a>\n<a href=\"https://github.com/LAION-AI/Open-Assistant/actions/workflows/test-e2e.yaml\">![GitHub Workflow Status](https://img.shields.io/github/actions/workflow/status/LAION-AI/Open-Assistant/test-e2e.yaml?label=tests-web)</a>\n<a href=\"https://github.com/LAION-AI/Open-Assistant/actions/workflows/deploy-docs-site.yaml\">![GitHub Workflow Status](https://img.shields.io/github/actions/workflow/status/LAION-AI/Open-Assistant/deploy-docs-site.yaml?label=deploy-docs)</a>\n<a href=\"https://github.com/LAION-AI/Open-Assistant/actions/workflows/production-deploy.yaml\">![GitHub Workflow Status](https://img.shields.io/github/actions/workflow/status/LAION-AI/Open-Assistant/production-deploy.yaml?label=deploy-production)</a>\n<a href=\"https://github.com/LAION-AI/Open-Assistant/actions/workflows/release.yaml\">![GitHub Workflow Status](https://img.shields.io/github/actions/workflow/status/LAION-AI/Open-Assistant/release.yaml?label=deploy-release)</a>\n<a href=\"https://github.com/LAION-AI/Open-Assistant/releases\">![GitHub release (latest by date)](https://img.shields.io/github/v/release/LAION-AI/Open-Assistant)</a>\n<a href=\"https://github-com.translate.goog/LAION-AI/Open-Assistant/blob/main/README.md?_x_tr_sl=auto&_x_tr_tl=en&_x_tr_hl=en&_x_tr_pto=wapp\">![Translate](https://img.shields.io/badge/Translate-blue)</a>\n\n</div>\n\n# Table of Contents\n\n- [What is Open Assistant?](#what-is-open-assistant)\n- [Useful Links](#useful-links)\n- [How To Try It Out](#how-to-try-it-out)\n- [The Vision](#the-vision)\n- [The Plan](#the-plan)\n- [How You Can Help](#how-you-can-help)\n\n---\n\n## What is Open Assistant?\n\n<p align=\"center\">\nOpen Assistant is a project meant to give everyone access to a great chat based\nlarge language model.\n</p>\n\nWe believe that by doing this we will create a revolution in innovation in\nlanguage. In the same way that stable-diffusion helped the world make art and\nimages in new ways we hope Open Assistant can help improve the world by\nimproving language itself.\n\n# Useful Links\n\n- [Data Collection](https://open-assistant.io)\n\n- [Chat](https://open-assistant.io/chat)\n\n- [Project Documentation](https://projects.laion.ai/Open-Assistant/)\n\n## How To Try It Out\n\n### Chatting with the AI\n\nThe chat frontend is now live [here](https://open-assistant.io/chat). Log in and\nstart chatting! Please try to react with a thumbs up or down for the assistant's\nresponses when chatting.\n\n### Contributing to Data Collection\n\nThe data collection frontend is now live [here](https://open-assistant.io/). Log\nin and start taking on tasks! We want to collect a high volume of quality data.\nBy submitting, ranking, and labelling model prompts and responses you will be\ndirectly helping to improve the capabilities of Open Assistant.\n\n### Running the Development Setup Locally (without chat)\n\n**You do not need to run the project locally unless you are contributing to the\ndevelopment process. The website link above will take you to the public website\nwhere you can use the data collection app and the chat.**\n\nIf you would like to run the data collection app locally for development, you\ncan set up an entire stack needed to run **Open-Assistant**, including the\nwebsite, backend, and associated dependent services, with Docker.\n\nTo start the demo, run this in the root directory of the repository (check\n[this FAQ](https://projects.laion.ai/Open-Assistant/docs/faq#docker-compose-instead-of-docker-compose)\nif you have problems):\n\n```sh\ndocker compose --profile ci up --build --attach-dependencies\n```\n\n> **Note:** when running on MacOS with an M1 chip you have to use:\n> `DB_PLATFORM=linux/x86_64 docker compose ...`\n\nThen, navigate to `http://localhost:3000` (It may take some time to boot up) and\ninteract with the website.\n\n> **Note:** If an issue occurs with the build, please head to the\n> [FAQ](https://projects.laion.ai/Open-Assistant/docs/faq) and check out the\n> entries about Docker.\n\n> **Note:** When logging in via email, navigate to `http://localhost:1080` to\n> get the magic email login link.\n\n> **Note:** If you would like to run this in a standardized development\n> environment (a\n> [\"devcontainer\"](https://code.visualstudio.com/docs/devcontainers/containers))\n> using\n> [vscode locally](https://code.visualstudio.com/docs/devcontainers/create-dev-container#_create-a-devcontainerjson-file)\n> or in a web browser using\n> [GitHub Codespaces](https://github.com/features/codespaces), you can use the\n> provided [`.devcontainer`](.devcontainer/) folder.\n\n### Running the Development Setup Locally for Chat\n\n**You do not need to run the project locally unless you are contributing to the\ndevelopment process. The website link above will take you to the public website\nwhere you can use the data collection app and the chat.**\n\n**Also note that the local setup is only for development and is not meant to be\nused as a local chatbot, unless you know what you are doing.**\n\nIf you _do_ know what you are doing, then see the `inference` folder for getting\nthe inference system up and running, or have a look at `--profile inference` in\naddition to `--profile ci` in the above command.\n\n## The Vision\n\nWe are not going to stop at replicating ChatGPT. We want to build the assistant\nof the future, able to not only write email and cover letters, but do meaningful\nwork, use APIs, dynamically research information, and much more, with the\nability to be personalized and extended by anyone. And we want to do this in a\nway that is open and accessible, which means we must not only build a great\nassistant, but also make it small and efficient enough to run on consumer\nhardware.\n\n## The Plan\n\n##### We want to get to an initial MVP as fast as possible, by following the 3-steps outlined in the [InstructGPT paper](https://arxiv.org/abs/2203.02155)\n\n1. Collect high-quality human generated Instruction-Fulfillment samples\n   (prompt + response), goal >50k. We design a crowdsourced process to collect\n   and reviewed prompts. We do not want to train on\n   flooding/toxic/spam/junk/personal information data. We will have a\n   leaderboard to motivate the community that shows progress and the most active\n   users. Swag will be given to the top-contributors.\n2. For each of the collected prompts we will sample multiple completions.\n   Completions of one prompt will then be shown randomly to users to rank them\n   from best to worst. Again this should happen crowd-sourced, e.g. we need to\n   deal with unreliable potentially malicious users. At least multiple votes by\n   independent users have to be collected to measure the overall agreement. The\n   gathered ranking-data will be used to train a reward model.\n3. Now follows the RLHF training phase based on the prompts and the reward\n   model.\n\nWe can then take the resulting model and continue with completion sampling step\n2 for a next iteration.\n\n### Slide Decks\n\n[Vision & Roadmap](https://docs.google.com/presentation/d/1n7IrAOVOqwdYgiYrXc8Sj0He8krn5MVZO_iLkCjTtu0/edit?usp=sharing)\n\n[Important Data Structures](https://docs.google.com/presentation/d/1iaX_nxasVWlvPiSNs0cllR9L_1neZq0RJxd6MFEalUY/edit?usp=sharing)\n\n## How You Can Help\n\nAll open source projects begin with people like you. Open source is the belief\nthat if we collaborate we can together gift our knowledge and technology to the\nworld for the benefit of humanity.\n\nCheck out our [contributing guide](CONTRIBUTING.md) to get started.\n"
        },
        {
          "name": "ansible",
          "type": "tree",
          "content": null
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "backend",
          "type": "tree",
          "content": null
        },
        {
          "name": "copilot",
          "type": "tree",
          "content": null
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "deploy",
          "type": "tree",
          "content": null
        },
        {
          "name": "discord-bots",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.yaml",
          "type": "blob",
          "size": 9.73,
          "content": "version: \"3.8\"\n\nservices:\n  # Use `docker compose --profile backend-dev up --build --attach-dependencies` to start a database and work and the backend.\n\n  # Use `docker compose --profile frontend-dev up --build --attach-dependencies` to start the services needed to work on the frontend. If you want to also run the inference, add a second `--profile inference` argument.\n\n  # If you update the containers used by the inference profile, please update inference/README.md. Thank you\n\n  # The profile ci is used by CI automations. (i.e E2E testing)\n\n  # This DB is for the FastAPI Backend.\n  db:\n    platform: \"${DB_PLATFORM:-}\"\n    image: ghcr.io/laion-ai/open-assistant/oasst-postgres\n    pull_policy: always\n    restart: always\n    profiles: [\"frontend-dev\", \"backend-dev\", \"ci\", \"inference-dev\"]\n    ports:\n      - 5432:5432\n    environment:\n      POSTGRES_USER: postgres\n      POSTGRES_PASSWORD: postgres\n      POSTGRES_DB: postgres\n    healthcheck:\n      test: [\"CMD\", \"pg_isready\", \"-U\", \"postgres\"]\n      interval: 2s\n      timeout: 2s\n      retries: 10\n\n  # Redis - caching + rate limiting on BE\n  redis:\n    image: redis\n    restart: always\n    profiles: [\"frontend-dev\", \"backend-dev\", \"ci\"]\n    ports:\n      - 6379:6379\n    healthcheck:\n      test: [\"CMD-SHELL\", \"redis-cli ping | grep PONG\"]\n      interval: 2s\n      timeout: 2s\n      retries: 10\n    command: redis-server /usr/local/etc/redis/redis.conf\n    volumes:\n      - ./redis.conf:/usr/local/etc/redis/redis.conf\n  # insights host - redis:6379\n  redis-insights:\n    image: redislabs/redisinsight:latest\n    profiles: [\"backend-dev\"]\n    ports:\n      - 8001:8001\n\n  # This DB is for Web Authentication and data caching.\n  webdb:\n    image: postgres\n    restart: always\n    profiles: [\"frontend-dev\", \"ci\", \"inference-dev\"]\n    ports:\n      - 5433:5432\n    environment:\n      POSTGRES_USER: postgres\n      POSTGRES_PASSWORD: postgres\n      POSTGRES_DB: oasst_web\n    healthcheck:\n      test: [\"CMD\", \"pg_isready\", \"-U\", \"postgres\"]\n      interval: 2s\n      timeout: 2s\n      retries: 10\n\n  # This lets you manually inspect the web and backend databases.\n  adminer:\n    image: adminer\n    restart: always\n    profiles: [\"frontend-dev\", \"backend-dev\"]\n    ports:\n      - 8089:8080\n\n  # This fakes an SMTP email server used by website authentication.\n  # User registration emails can be found by going to localhost:1080 and\n  # opening the emails listed.\n  maildev:\n    image: maildev/maildev\n    restart: always\n    profiles: [\"frontend-dev\", \"ci\"]\n    environment:\n      - MAILDEV_WEB_PORT=1080\n      - MAILDEV_SMTP_PORT=1025\n    ports:\n      - \"1080:1080\"\n      - \"1025:1025\"\n\n  # The oassist backend service.\n  backend:\n    build:\n      dockerfile: docker/Dockerfile.backend\n      context: .\n    image: oasst-backend\n    environment:\n      - POSTGRES_HOST=db\n      - REDIS_HOST=redis\n      - DEBUG_USE_SEED_DATA=True\n      - DEBUG_ALLOW_SELF_LABELING=True\n      - MAX_WORKERS=1\n      - DEBUG_SKIP_TOXICITY_CALCULATION=False\n      - DEBUG_SKIP_EMBEDDING_COMPUTATION=False\n      - CELERY_BROKER_URL=redis://redis:6379/0\n      - CELERY_RESULT_BACKEND=redis://redis:6379/0\n    depends_on:\n      db:\n        condition: service_healthy\n    profiles: [\"frontend-dev\", \"ci\", \"inference-dev\"]\n    ports:\n      - \"8080:8080\"\n\n  # The oassist backend celery worker service.\n  backend-worker:\n    build:\n      dockerfile: docker/Dockerfile.backend-worker\n      context: .\n    command: celery -A oasst_backend.celery_worker worker -l info -E\n    image: oasst-backend-worker\n    environment:\n      - CELERY_BROKER_URL=redis://redis:6379/0\n      - CELERY_RESULT_BACKEND=redis://redis:6379/0\n      - POSTGRES_HOST=db\n      - REDIS_HOST=redis\n      - MAX_WORKERS=1\n    depends_on:\n      db:\n        condition: service_healthy\n      redis:\n        condition: service_healthy\n    profiles: [\"frontend-dev\", \"ci\"]\n\n  # The oassist backend celery worker service.\n  backend-worker-beat:\n    build:\n      dockerfile: docker/Dockerfile.backend-worker\n      context: .\n    command: celery -A oasst_backend.celery_worker beat -l INFO\n    image: oasst-backend-worker-beat\n    environment:\n      - CELERY_BROKER_URL=redis://redis:6379/0\n      - CELERY_RESULT_BACKEND=redis://redis:6379/0\n      - POSTGRES_HOST=db\n      - REDIS_HOST=redis\n      - MAX_WORKERS=1\n    depends_on:\n      db:\n        condition: service_healthy\n      redis:\n        condition: service_healthy\n    profiles: [\"frontend-dev\", \"ci\"]\n\n  # The oassist web service.\n  web:\n    build:\n      dockerfile: docker/Dockerfile.website\n      context: .\n    image: oasst-web\n    environment:\n      - CLOUDFLARE_CAPTCHA_SECRET_KEY=1x0000000000000000000000000000000AA\n      - CLOUDFARE_CAPTCHA_SITE_KEY=1x00000000000000000000AA\n      - DATABASE_URL=postgres://postgres:postgres@webdb/oasst_web\n      - FASTAPI_URL=http://backend:8080\n      - FASTAPI_KEY=1234\n      - NEXTAUTH_SECRET=O/M2uIbGj+lDD2oyNa8ax4jEOJqCPJzO53UbWShmq98=\n      - EMAIL_SERVER_HOST=maildev\n      - EMAIL_SERVER_PORT=1025\n      - EMAIL_FROM=info@example.com\n      - ENABLE_EMAIL_SIGNIN=true\n      - ENABLE_EMAIL_SIGNIN_CAPTCHA=false\n      - NEXTAUTH_URL=http://localhost:3000\n      - DEBUG_LOGIN=true\n      - INFERENCE_SERVER_HOST=http://inference-server:8000\n      - ENABLE_CHAT=true\n      - ENABLE_DRAFTS_WITH_PLUGINS=false\n      - NUM_GENERATED_DRAFTS=3\n    depends_on:\n      webdb:\n        condition: service_healthy\n    ports:\n      - \"3000:3000\"\n    command: bash wait-for-postgres.sh node server.js\n    profiles: [\"ci\"]\n\n  # This DB is for Inference\n  inference-db:\n    image: postgres\n    restart: always\n    ports:\n      - 5434:5432\n    environment:\n      POSTGRES_USER: postgres\n      POSTGRES_PASSWORD: postgres\n      POSTGRES_DB: oasst_inference\n    healthcheck:\n      test: [\"CMD\", \"pg_isready\", \"-U\", \"postgres\"]\n      interval: 2s\n      timeout: 2s\n      retries: 10\n    profiles: [\"inference\"]\n\n  inference-redis:\n    image: redis\n    restart: always\n    profiles: [\"inference\"]\n    ports:\n      - 6389:6379\n    healthcheck:\n      test: [\"CMD-SHELL\", \"redis-cli ping | grep PONG\"]\n      interval: 2s\n      timeout: 2s\n      retries: 10\n    command: redis-server /usr/local/etc/redis/redis.conf\n    volumes:\n      - ./redis.conf:/usr/local/etc/redis/redis.conf\n\n  inference-server:\n    build:\n      dockerfile: docker/inference/Dockerfile.server\n      context: .\n      target: dev\n    image: oasst-inference-server:dev\n    environment:\n      PORT: 8000\n      REDIS_HOST: inference-redis\n      POSTGRES_HOST: inference-db\n      POSTGRES_DB: oasst_inference\n      DEBUG_API_KEYS: \"0000\"\n      TRUSTED_CLIENT_KEYS: \"6969\"\n      ALLOW_DEBUG_AUTH: \"True\"\n      API_ROOT: \"http://localhost:8000\"\n    volumes:\n      - \"./oasst-shared:/opt/inference/lib/oasst-shared\"\n      - \"./inference/server:/opt/inference/server\"\n    restart: unless-stopped\n    ports:\n      - \"8000:8000\"\n    depends_on:\n      inference-redis:\n        condition: service_healthy\n      inference-db:\n        condition: service_healthy\n    profiles: [\"inference\"]\n\n  inference-worker:\n    build:\n      dockerfile: docker/inference/Dockerfile.worker-full\n      context: .\n    image: oasst-inference-worker:dev\n    environment:\n      API_KEY: \"0000\"\n      MODEL_CONFIG_NAME: ${MODEL_CONFIG_NAME:-distilgpt2}\n      BACKEND_URL: \"ws://inference-server:8000\"\n      PARALLELISM: 2\n    volumes:\n      - \"./oasst-shared:/opt/inference/lib/oasst-shared\"\n      - \"./inference/worker:/opt/inference/worker\"\n    deploy:\n      replicas: 1\n    profiles: [\"inference\"]\n\n  inference-safety:\n    build:\n      dockerfile: docker/inference/Dockerfile.safety\n      context: .\n    image: oasst-inference-safety:dev\n    environment:\n      PORT: 8002\n    volumes:\n      - \"./oasst-shared:/opt/inference/lib/oasst-shared\"\n      - \"./inference/safety:/opt/inference/safety\"\n    profiles: [\"inference-safety\"]\n\n  prometheus:\n    image: prom/prometheus\n    container_name: prometheus\n    command:\n      - \"--config.file=/etc/prometheus/prometheus.yml\"\n    ports:\n      - 9090:9090\n    restart: unless-stopped\n    volumes:\n      - ${PWD}/docker/prometheus:/etc/prometheus\n      - prom_data:/prometheus\n    profiles: [\"observability\"]\n\n  grafana:\n    image: grafana/grafana\n    container_name: grafana\n    ports:\n      - 2000:2000\n    restart: unless-stopped\n    environment:\n      - GF_SECURITY_ADMIN_USER=admin\n      - GF_SECURITY_ADMIN_PASSWORD=grafana\n      - GF_SERVER_HTTP_PORT=2000\n    volumes:\n      - ${PWD}/docker/grafana/datasources:/etc/grafana/provisioning/datasources\n      - ${PWD}/docker/grafana/dashboards/dashboard.yaml:/etc/grafana/provisioning/dashboards/main.yaml\n      - ${PWD}/docker/grafana/dashboards:/var/lib/grafana/dashboards\n    profiles: [\"observability\"]\n\n  netdata:\n    image: netdata/netdata\n    container_name: netdata\n    pid: host\n    hostname: oasst-netdata\n    ports:\n      - 19999:19999\n    restart: unless-stopped\n    cap_add:\n      - SYS_PTRACE\n      - SYS_ADMIN\n    security_opt:\n      - apparmor:unconfined\n    volumes:\n      - netdataconfig:/etc/netdata\n      - netdatalib:/var/lib/netdata\n      - netdatacache:/var/cache/netdata\n      - /etc/passwd:/host/etc/passwd:ro\n      - /etc/group:/host/etc/group:ro\n      - /proc:/host/proc:ro\n      - /sys:/host/sys:ro\n      - /etc/os-release:/host/etc/os-release:ro\n      - /var/run/docker.sock:/var/run/docker.sock:ro\n      - ${PWD}/docker/netdata/go.d/redis.conf:/etc/netdata/go.d/redis.conf\n      - ${PWD}/docker/netdata/go.d/postgres.conf:/etc/netdata/go.d/postgres.conf\n      - ${PWD}/docker/netdata/go.d/prometheus.conf:/etc/netdata/go.d/prometheus.conf\n    environment:\n      # useful if want to claim monitoring agents into https://www.netdata.cloud/\n      # else ignore or leave blank to just use local netdata dashboards as localhost:19999\n      - NETDATA_CLAIM_TOKEN=${NETDATA_CLAIM_TOKEN:-}\n      - NETDATA_CLAIM_URL=https://app.netdata.cloud\n    profiles: [\"observability\"]\n\nvolumes:\n  prom_data:\n  netdataconfig:\n  netdatalib:\n  netdatacache:\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "inference",
          "type": "tree",
          "content": null
        },
        {
          "name": "inlang.config.js",
          "type": "blob",
          "size": 0.5,
          "content": "export async function defineConfig(env) {\n  const { default: i18nextPlugin } = await env.$import(\n    \"https://cdn.jsdelivr.net/npm/@inlang/plugin-i18next@2/dist/index.js\"\n  );\n  const { default: standardLintRules } = await env.$import(\n    \"https://cdn.jsdelivr.net/gh/inlang/standard-lint-rules@2/dist/index.js\"\n  );\n\n  return {\n    referenceLanguage: \"en\",\n    plugins: [\n      i18nextPlugin({\n        pathPattern: \"./website/public/locales/{language}/*.json\",\n      }),\n      standardLintRules(),\n    ],\n  };\n}\n"
        },
        {
          "name": "model",
          "type": "tree",
          "content": null
        },
        {
          "name": "notebooks",
          "type": "tree",
          "content": null
        },
        {
          "name": "oasst-data",
          "type": "tree",
          "content": null
        },
        {
          "name": "oasst-shared",
          "type": "tree",
          "content": null
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 0.77,
          "content": "[tool.isort]\nprofile = \"black\"\nfilter_files = true\nmulti_line_output = 3\ninclude_trailing_comma = true\nforce_grid_wrap = 0\nuse_parentheses = true\nensure_newline_before_comments = true\nline_length = 120\n\n[tool.black]\nline-length = 120\ntarget-version = ['py310']\n\n[tool.ruff]\n line-length = 120\n select = [\n     \"E\", \"W\",  # see: https://pypi.org/project/pycodestyle\n     \"F\",  # see: https://pypi.org/project/pyflakes\n ]\n ignore = [\n    \"E501\",\n    \"E731\",\n    \"E741\",  # Ambiguous variable name: ...\n    \"E999\",  # SyntaxError: invalid syntax. Got unexpected token Newline\n ]\n exclude = [\n    \".eggs\",\n    \".git\",\n    \".ruff_cache\",\n    \"__pypackages__\",\n    \"_build\",\n    \"build\",\n    \"dist\",\n    \"docs\"\n ]\n ignore-init-module-imports = true\n\n [tool.ruff.mccabe]\n max-complexity = 10\n"
        },
        {
          "name": "redis.conf",
          "type": "blob",
          "size": 0.04,
          "content": "maxmemory 100mb\nmaxmemory-policy allkeys-lru\n"
        },
        {
          "name": "safety",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "text-frontend",
          "type": "tree",
          "content": null
        },
        {
          "name": "website",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}