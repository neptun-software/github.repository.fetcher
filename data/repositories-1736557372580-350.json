{
  "metadata": {
    "timestamp": 1736557372580,
    "page": 350,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM3MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "pocketbase/pocketbase",
      "stars": 42776,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.23,
          "content": "/.vscode/\n.idea\n\n.DS_Store\n\n# goreleaser builds folder\n/.builds/\n\n# tests coverage\ncoverage.out\n\n# plaintask todo files\n*.todo\n\n# generated markdown previews\nREADME.html\nCHANGELOG.html\nCHANGELOG_16_22.html\nCHANGELOG_8_15.html\nLICENSE.html\n"
        },
        {
          "name": ".goreleaser.yaml",
          "type": "blob",
          "size": 1.03,
          "content": "version: 2\n\nproject_name: pocketbase\n\ndist: .builds\n\nbefore:\n  hooks:\n    - go mod tidy\n\nbuilds:\n  - id: build_noncgo\n    main: ./examples/base\n    binary: pocketbase\n    ldflags:\n      - -s -w -X github.com/pocketbase/pocketbase.Version={{ .Version }}\n    env:\n      - CGO_ENABLED=0\n    goos:\n      - linux\n      - windows\n      - darwin\n    goarch:\n      - amd64\n      - arm64\n      - arm\n      - s390x\n      - ppc64le\n    goarm:\n      - 7\n    ignore:\n      - goos: windows\n        goarch: arm\n      - goos: windows\n        goarch: s390x\n      - goos: windows\n        goarch: ppc64le\n      - goos: darwin\n        goarch: arm\n      - goos: darwin\n        goarch: s390x\n      - goos: darwin\n        goarch: ppc64le\n\nrelease:\n  draft: true\n\narchives:\n  - id: archive_noncgo\n    builds: [build_noncgo]\n    format: zip\n    files:\n      - LICENSE.md\n      - CHANGELOG.md\n\nchecksum:\n  name_template: 'checksums.txt'\n\nsnapshot:\n  version_template: '{{ incpatch .Version }}-next'\n\nchangelog:\n  sort: asc\n  filters:\n    exclude:\n      - '^examples:'\n      - '^ui:'\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 16.68,
          "content": "## v0.24.2\n\n- Fixed display fields extraction when there are multiple \"Presentable\" `relation` fields in a single related collection ([#6229](https://github.com/pocketbase/pocketbase/issues/6229)).\n\n\n## v0.24.1\n\n- Added missing time macros in the UI autocomplete.\n\n- Fixed JSVM types for structs and functions with multiple generic parameters.\n\n\n## v0.24.0\n\n- ⚠️ Removed the \"dry submit\" when executing the collections Create API rule\n    (you can find more details why this change was introduced and how it could affect your app in https://github.com/pocketbase/pocketbase/discussions/6073).\n    For most users it should be non-breaking change, BUT if you have Create API rules that uses self-references or view counters you may have to adjust them manually.\n    With this change the \"multi-match\" operators are also normalized in case the targeted collection doesn't have any records\n    (_or in other words, `@collection.example.someField != \"test\"` will result to `true` if `example` collection has no records because it satisfies the condition that all available \"example\" records mustn't have `someField` equal to \"test\"_).\n    As a side-effect of all of the above minor changes, the record create API performance has been also improved ~4x times in high concurrent scenarios (500 concurrent clients inserting total of 50k records - [old (58.409064001s)](https://github.com/pocketbase/benchmarks/blob/54140be5fb0102f90034e1370c7f168fbcf0ddf0/results/hetzner_cax41_cgo.md#creating-50000-posts100k-reqs50000-conc500-rulerequestauthid----requestdatapublicisset--true) vs [new (13.580098262s)](https://github.com/pocketbase/benchmarks/blob/7df0466ac9bd62fe0a1056270d20ef82012f0234/results/hetzner_cax41_cgo.md#creating-50000-posts100k-reqs50000-conc500-rulerequestauthid----requestbodypublicisset--true)).\n\n- ⚠️ Changed the type definition of `store.Store[T any]` to `store.Store[K comparable, T any]` to allow support for custom store key types.\n    For most users it should be non-breaking change, BUT if you are calling `store.New[any](nil)` instances you'll have to specify the store key type, aka. `store.New[string, any](nil)`.\n\n- Added `@yesterday` and `@tomorrow` datetime filter macros.\n\n- Added `:lower` filter modifier (e.g. `title:lower = \"lorem\"`).\n\n- Added `mailer.Message.InlineAttachments` field for attaching inline files to an email (_aka. `cid` links_).\n\n- Added cache for the JSVM `arrayOf(m)`, `DynamicModel`, etc. dynamic `reflect` created types.\n\n- Added auth collection select for the settings \"Send test email\" popup ([#6166](https://github.com/pocketbase/pocketbase/issues/6166)).\n\n- Added `record.SetRandomPassword()` to simplify random password generation usually used in the OAuth2 or OTP record creation flows.\n    _The generated ~30 chars random password is assigned directly as bcrypt hash and ignores the `password` field plain value validators like min/max length or regex pattern._\n\n- Added option to list and trigger the registered app level cron jobs via the Web API and UI.\n\n- Added extra validators for the collection field `int64` options (e.g. `FileField.MaxSize`) restricting them to the max safe JSON number (2^53-1).\n\n- Added option to unset/overwrite the default PocketBase superuser installer using `ServeEvent.InstallerFunc`.\n\n- Added `app.FindCachedCollectionReferences(collection, excludeIds)` to speedup records cascade delete almost twice for projects with many collections.\n\n- Added `tests.NewTestAppWithConfig(config)` helper if you need more control over the test configurations like `IsDev`, the number of allowed connections, etc.\n\n- Invalidate all record tokens when the auth record email is changed programmatically or by a superuser ([#5964](https://github.com/pocketbase/pocketbase/issues/5964)).\n\n- Eagerly interrupt waiting for the email alert send in case it takes longer than 15s.\n\n- Normalized the hidden fields filter checks and allow targetting hidden fields in the List API rule.\n\n- Fixed \"Unique identify fields\" input not refreshing on unique indexes change ([#6184](https://github.com/pocketbase/pocketbase/issues/6184)).\n\n\n## v0.23.12\n\n- Added warning logs in case of mismatched `modernc.org/sqlite` and `modernc.org/libc` versions ([#6136](https://github.com/pocketbase/pocketbase/issues/6136#issuecomment-2556336962)).\n\n- Skipped the default body size limit middleware for the backup upload endpoint ([#6152](https://github.com/pocketbase/pocketbase/issues/6152)).\n\n\n## v0.23.11\n\n- Upgraded `golang.org/x/net` to 0.33.0 to fix [CVE-2024-45338](https://www.cve.org/CVERecord?id=CVE-2024-45338).\n  _PocketBase uses the vulnerable functions primarily for the auto html->text mail generation, but most applications shouldn't be affected unless you are manually embedding unrestricted user provided value in your mail templates._\n\n\n## v0.23.10\n\n- Renew the superuser file token cache when clicking on the thumb preview or download link ([#6137](https://github.com/pocketbase/pocketbase/discussions/6137)).\n\n- Upgraded `modernc.org/sqlite` to 1.34.3 to fix \"disk io\" error on arm64 systems.\n    _If you are extending PocketBase with Go and upgrading with `go get -u` make sure to manually set in your go.mod the `modernc.org/libc` indirect dependency to v1.55.3, aka. the exact same version the driver is using._\n\n\n## v0.23.9\n\n- Replaced `strconv.Itoa` with `strconv.FormatInt` to avoid the int64->int conversion overflow on 32-bit platforms ([#6132](https://github.com/pocketbase/pocketbase/discussions/6132)).\n\n\n## v0.23.8\n\n- Fixed Model->Record and Model->Collection hook events sync for nested and/or inner-hook transactions ([#6122](https://github.com/pocketbase/pocketbase/discussions/6122)).\n\n- Other minor improvements (updated Go and npm deps, added extra escaping for the default mail record params in case the emails are stored as html files, fixed code comment typos, etc.).\n\n\n## v0.23.7\n\n- Fixed JSVM exception -> Go error unwrapping when throwing errors from non-request hooks ([#6102](https://github.com/pocketbase/pocketbase/discussions/6102)).\n\n\n## v0.23.6\n\n- Fixed `$filesystem.fileFromURL` documentation and generated type ([#6058](https://github.com/pocketbase/pocketbase/issues/6058)).\n\n- Fixed `X-Forwarded-For` header typo in the suggested UI \"Common trusted proxy\" headers ([#6063](https://github.com/pocketbase/pocketbase/pull/6063)).\n\n- Updated the `text` field max length validator error message to make it more clear ([#6066](https://github.com/pocketbase/pocketbase/issues/6066)).\n\n- Other minor fixes (updated Go deps, skipped unnecessary validator check when the default primary key pattern is used, updated JSVM types, etc.).\n\n\n## v0.23.5\n\n- Fixed UI logs search not properly accounting for the \"Include requests by superusers\" toggle when multiple search expressions are used.\n\n- Fixed `text` field max validation error message ([#6053](https://github.com/pocketbase/pocketbase/issues/6053)).\n\n- Other minor fixes (comment typos, JSVM types update).\n\n- Updated Go deps and the min Go release GitHub action version to 1.23.4.\n\n\n## v0.23.4\n\n- Fixed `autodate` fields not refreshing when calling `Save` multiple times on the same `Record` instance ([#6000](https://github.com/pocketbase/pocketbase/issues/6000)).\n\n- Added more descriptive test OTP id and failure log message ([#5982](https://github.com/pocketbase/pocketbase/discussions/5982)).\n\n- Moved the default UI CSP from meta tag to response header ([#5995](https://github.com/pocketbase/pocketbase/discussions/5995)).\n\n- Updated Go and npm dependencies.\n\n\n## v0.23.3\n\n- Fixed Gzip middleware not applying when serving static files.\n\n- Fixed `Record.Fresh()`/`Record.Clone()` methods not properly cloning `autodate` fields ([#5973](https://github.com/pocketbase/pocketbase/discussions/5973)).\n\n\n## v0.23.2\n\n- Fixed `RecordQuery()` custom struct scanning ([#5958](https://github.com/pocketbase/pocketbase/discussions/5958)).\n\n- Fixed `--dev` log query print formatting.\n\n- Added support for passing more than one id in the `Hook.Unbind` method for consistency with the router.\n\n- Added collection rules change list in the confirmation popup\n  (_to avoid getting anoying during development, the rules confirmation currently is enabled only when using https_).\n\n\n## v0.23.1\n\n- Added `RequestEvent.Blob(status, contentType, bytes)` response write helper ([#5940](https://github.com/pocketbase/pocketbase/discussions/5940)).\n\n- Added more descriptive error messages.\n\n\n## v0.23.0\n\n> [!NOTE]\n> You don't have to upgrade to PocketBase v0.23.0 if you are not planning further developing\n> your existing app and/or are satisfied with the v0.22.x features set. There are no identified critical issues\n> with PocketBase v0.22.x yet and in the case of critical bugs and security vulnerabilities, the fixes\n> will be backported for at least until Q1 of 2025 (_if not longer_).\n>\n> **If you don't plan upgrading make sure to pin the SDKs version to their latest PocketBase v0.22.x compatible:**\n> - JS SDK: `<0.22.0`\n> - Dart SDK: `<0.19.0`\n\n> [!CAUTION]\n> This release introduces many Go/JSVM and Web APIs breaking changes!\n>\n> Existing `pb_data` will be automatically upgraded with the start of the new executable,\n> but custom Go or JSVM (`pb_hooks`, `pb_migrations`) and JS/Dart SDK code will have to be migrated manually.\n> Please refer to the below upgrade guides:\n> - Go:   https://pocketbase.io/v023upgrade/go/.\n> - JSVM: https://pocketbase.io/v023upgrade/jsvm/.\n>\n> If you had already switched to some of the earlier `<v0.23.0-rc14` versions and have generated a full collections snapshot migration (aka. `./pocketbase migrate collections`), then you may have to regenerate the migration file to ensure that it includes the latest changes.\n\nPocketBase v0.23.0 is a major refactor of the internals with the overall goal of making PocketBase an easier to use Go framework.\nThere are a lot of changes but to highlight some of the most notable ones:\n\n- New and more [detailed documentation](https://pocketbase.io/docs/).\n  _The old documentation could be accessed at [pocketbase.io/old](https://pocketbase.io/old/)._\n- Replaced `echo` with a new router built on top of the Go 1.22 `net/http` mux enhancements.\n- Merged `daos` packages in `core.App` to simplify the DB operations (_the `models` package structs are also migrated in `core`_).\n- Option to specify custom `DBConnect` function as part of the app configuration to allow different `database/sql` SQLite drivers (_turso/libsql, sqlcipher, etc._) and custom builds.\n  _Note that we no longer loads the `mattn/go-sqlite3` driver by default when building with `CGO_ENABLED=1` to avoid `multiple definition` linker errors in case different CGO SQLite drivers or builds are used. You can find an example how to enable it back if you want to in the [new documentation](https://pocketbase.io/docs/go-overview/#github-commattngo-sqlite3)._\n- New hooks allowing better control over the execution chain and error handling (_including wrapping an entire hook chain in a single DB transaction_).\n- Various `Record` model improvements (_support for get/set modifiers, simplfied file upload by treating the file(s) as regular field value like `record.Set(\"document\", file)`, etc._).\n- Dedicated fields structs with safer defaults to make it easier creating/updating collections programmatically.\n- Option to mark field as \"Hidden\", disallowing regular users to read or modify it (_there is also a dedicated Record hook to hide/unhide Record fields programmatically from a single place_).\n- Option to customize the default system collection fields (`id`, `email`, `password`, etc.).\n- Admins are now system `_superusers` auth records.\n- Builtin rate limiter (_supports tags, wildcards and exact routes matching_).\n- Batch/transactional Web API endpoint.\n- Impersonate Web API endpoint (_it could be also used for generating fixed/non-refreshable superuser tokens, aka. \"API keys\"_).\n- Support for custom user request activity log attributes.\n- One-Time Password (OTP) auth method (_via email code_).\n- Multi-Factor Authentication (MFA) support (_currently requires any 2 different auth methods to be used_).\n- Support for Record \"proxy/projection\" in preparation for the planned autogeneration of typed Go record models.\n- Linear OAuth2 provider ([#5909](https://github.com/pocketbase/pocketbase/pull/5909); thanks @chnfyi).\n- WakaTime OAuth2 provider ([#5829](https://github.com/pocketbase/pocketbase/pull/5829); thanks @tigawanna).\n- Notion OAuth2 provider ([#4999](https://github.com/pocketbase/pocketbase/pull/4999); thanks @s-li1).\n- monday.com OAuth2 provider ([#5346](https://github.com/pocketbase/pocketbase/pull/5346); thanks @Jaytpa01).\n- New Instagram provider compatible with the new Instagram Login APIs ([#5588](https://github.com/pocketbase/pocketbase/pull/5588); thanks @pnmcosta).\n    _The provider key is `instagram2` to prevent conflicts with existing linked users._\n- Option to retrieve the OIDC OAuth2 user info from the `id_token` payload for the cases when the provider doesn't have a dedicated user info endpoint.\n- Various minor UI improvements (_recursive `Presentable` view, slightly different collection options organization, zoom/pan for the logs chart, etc._)\n- and many more...\n\n#### Go/JSVM APIs changes\n\n> - Go:   https://pocketbase.io/v023upgrade/go/.\n> - JSVM: https://pocketbase.io/v023upgrade/jsvm/.\n\n#### SDKs changes\n\n- [JS SDK v0.22.0](https://github.com/pocketbase/js-sdk/blob/master/CHANGELOG.md)\n- [Dart SDK v0.19.0](https://github.com/pocketbase/dart-sdk/blob/master/CHANGELOG.md)\n\n#### Web APIs changes\n\n- New `POST /api/batch` endpoint.\n\n- New `GET /api/collections/meta/scaffolds` endpoint.\n\n- New `DELETE /api/collections/{collection}/truncate` endpoint.\n\n- New `POST /api/collections/{collection}/request-otp` endpoint.\n\n- New `POST /api/collections/{collection}/auth-with-otp` endpoint.\n\n- New `POST /api/collections/{collection}/impersonate/{id}` endpoint.\n\n- ⚠️ If you are constructing requests to `/api/*` routes manually remove the trailing slash (_there is no longer trailing slash removal middleware registered by default_).\n\n- ⚠️ Removed `/api/admins/*` endpoints because admins are converted to `_superusers` auth collection records.\n\n- ⚠️ Previously when uploading new files to a multiple `file` field, new files were automatically appended to the existing field values.\n     This behaviour has changed with v0.23+ and for consistency with the other multi-valued fields when uploading new files they will replace the old ones. If you want to prepend or append new files to an existing multiple `file` field value you can use the `+` prefix or suffix:\n     ```js\n     \"documents\": [file1, file2]  // => [file1_name, file2_name]\n     \"+documents\": [file1, file2] // => [file1_name, file2_name, old1_name, old2_name]\n     \"documents+\": [file1, file2] // => [old1_name, old2_name, file1_name, file2_name]\n     ```\n\n- ⚠️ Removed `GET /records/{id}/external-auths` and `DELETE /records/{id}/external-auths/{provider}` endpoints because this is now handled by sending list and delete requests to the `_externalAuths` collection.\n\n- ⚠️ Changes to the app settings model fields and response (+new options such as `trustedProxy`, `rateLimits`, `batch`, etc.). The app settings Web APIs are mostly used by the Dashboard UI and rarely by the end users, but if you want to check all settings changes please refer to the [Settings Go struct](https://github.com/pocketbase/pocketbase/blob/develop/core/settings_model.go#L121).\n\n- ⚠️ New flatten Collection model and fields structure. The Collection model Web APIs are mostly used by the Dashboard UI and rarely by the end users, but if you want to check all changes please refer to the [Collection Go struct](https://github.com/pocketbase/pocketbase/blob/develop/core/collection_model.go#L308).\n\n- ⚠️ The top level error response `code` key was renamed to `status` for consistency with the Go APIs.\n    The error field key remains `code`:\n    ```js\n    {\n        \"status\": 400, // <-- old: \"code\"\n        \"message\": \"Failed to create record.\",\n        \"data\": {\n            \"title\": {\n                \"code\": \"validation_required\",\n                \"message\": \"Missing required value.\"\n            }\n        }\n    }\n    ```\n\n- ⚠️ New fields in the `GET /api/collections/{collection}/auth-methods` response.\n    _The old `authProviders`, `usernamePassword`, `emailPassword` fields are still returned in the response but are considered deprecated and will be removed in the future._\n    ```js\n    {\n        \"mfa\": {\n            \"duration\": 100,\n            \"enabled\": true\n        },\n        \"otp\": {\n            \"duration\": 0,\n            \"enabled\": false\n        },\n        \"password\": {\n            \"enabled\": true,\n            \"identityFields\": [\"email\", \"username\"]\n        },\n        \"oauth2\": {\n            \"enabled\": true,\n            \"providers\": [{\"name\": \"gitlab\", ...}, {\"name\": \"google\", ...}]\n        },\n        // old fields...\n    }\n    ```\n\n- ⚠️ Soft-deprecated the OAuth2 auth success `meta.avatarUrl` field in favour of `meta.avatarURL`.\n"
        },
        {
          "name": "CHANGELOG_16_22.md",
          "type": "blob",
          "size": 65.19,
          "content": "> List with changes from v0.16.x to v0.22.x.\n> For the most recent versions, please refer to [CHANGELOG.md](./CHANGELOG.md)\n---\n\n## v0.22.29\n\n- (_Backported from v0.23.11_) Upgraded `golang.org/x/net` to 0.33.0 to fix [CVE-2024-45338](https://www.cve.org/CVERecord?id=CVE-2024-45338).\n  _PocketBase uses the vulnerable functions primarily for the auto html->text mail generation, but most applications shouldn't be affected unless you are manually embedding unrestricted user provided value in your mail templates._\n\n\n## v0.22.28\n\n- (_Backported from v0.23.10_) Renew the superuser file token cache when clicking on the thumb preview or download link ([#6137](https://github.com/pocketbase/pocketbase/discussions/6137)).\n\n- (_Backported from v0.23.10_) Upgraded `modernc.org/sqlite` to 1.34.3 to fix \"disk io\" error on arm64 systems.\n  _If you are extending PocketBase with Go and upgrading with `go get -u` make sure to manually set in your go.mod the `modernc.org/libc` indirect dependency to v1.55.3, aka. the exact same version the driver is using._\n\n\n## v0.22.27\n\n- Instead of unregistering the realtime clients, we now just unset their auth state on delete of the related auth record so that the clients can receive the `delete` event ([#5898](https://github.com/pocketbase/pocketbase/issues/5898)).\n\n\n## v0.22.26\n\n- (_Backported from v0.23.0-rc_) Added manual WAL checkpoints before creating the zip backup to minimize copying unnecessary data.\n\n\n## v0.22.25\n\n- Refresh the old collections state in the Import UI after successful import submission ([#5861](https://github.com/pocketbase/pocketbase/issues/5861)).\n\n- Added randomized throttle on failed filter list requests as a very rudimentary measure since some security researches raised concern regarding the possibity of eventual side-channel attacks.\n\n\n## v0.22.24\n\n- Delete new uploaded record files in case of DB persist error ([#5845](https://github.com/pocketbase/pocketbase/issues/5845)).\n\n\n## v0.22.23\n\n- Updated the hooks watcher to account for the case when hooksDir is a symlink ([#5789](https://github.com/pocketbase/pocketbase/issues/5789)).\n\n- _(Backported from v0.23.0-rc)_ Registered a default `http.Server.ErrorLog` handler to report general server connection errors as app Debug level logs (e.g. invalid TLS handshakes caused by bots trying to access your server via its IP or other similar errors).\n\n- Other minor fixes (updated npm dev deps to fix the vulnerabilities warning, added more user friendly realtime topic length error, regenerated JSVM types, etc.)\n\n\n## v0.22.22\n\n- Added deprecation log in case Instagram OAuth2 is used (_related to [#5652](https://github.com/pocketbase/pocketbase/discussions/5652)_).\n\n- Added `update` command warning to prevent unnecessary downloading PocketBase v0.23.0 since it will contain breaking changes.\n\n- Added global JSVM `toString()` helper (_successor of `readerToString()`_) to stringify any value (bool, number, multi-byte array, io.Reader, etc.).\n  _`readerToString` is still available but it is marked as deprecated. You can also use `toString` as replacement for  of `String.fromCharCode` to properly stringify multi-byte unicode characters like emojis._\n    ```js\n    decodeURIComponent(escape(String.fromCharCode(...bytes))) -> toString(bytes)\n    ```\n\n- Updated `aws-sdk-go-v2` and removed deprecated `WithEndpointResolverWithOptions`.\n\n- Backported some of the v0.23.0-rc form validators, fixes and tests.\n\n- Bumped GitHub action min Go version and dependencies.\n\n\n## v0.22.21\n\n- Lock the logs database during backup to prevent `database disk image is malformed` errors in case there is a log write running in the background ([#5541](https://github.com/pocketbase/pocketbase/discussions/5541)).\n\n\n## v0.22.20\n\n- Fixed the Admin UI `isEmpty` check to allow submitting zero uuid, datetime and date strings ([#5398](https://github.com/pocketbase/pocketbase/issues/5398)).\n\n- Updated goja and the other Go deps.\n\n\n## v0.22.19\n\n- Added additional parsing for the Apple OAuth2 `user` token response field to attempt returning the name of the authenticated user ([#5074](https://github.com/pocketbase/pocketbase/discussions/5074#discussioncomment-10317207)).\n  _Note that Apple only returns the user object the first time the user authorizes the app (at least based on [their docs](https://developer.apple.com/documentation/sign_in_with_apple/sign_in_with_apple_js/configuring_your_webpage_for_sign_in_with_apple#3331292))._\n\n\n## v0.22.18\n\n- Improved files delete performance when using the local filesystem by adding a trailing slash to the `DeletePrefix` call to ensure that the list iterator will start \"walking\" from the prefix directory and not from its parent ([#5246](https://github.com/pocketbase/pocketbase/discussions/5246)).\n\n- Updated Go deps.\n\n\n## v0.22.17\n\n- Updated the `editor` field to use the latest TinyMCE 6.8.4 and enabled `convert_unsafe_embeds:true` by default per the security advisories.\n  _The Admin UI shouldn't be affected by the older TinyMCE because we don't use directly the vulnerable options/plugins and we have a default CSP, but it is recommended to update even just for silencing the CI/CD warnings._\n\n- Disabled mouse selection when changing the sidebar width.\n  _This should also fix the reported Firefox issue when the sidebar width \"resets\" on mouse release out of the page window._\n\n- Other minor improvements (updated the logs delete check and tests, normalized internal errors formatting, updated Go deps, etc.)\n\n\n## v0.22.16\n\n- Fixed the days calculation for triggering old logs deletion ([#5179](https://github.com/pocketbase/pocketbase/pull/5179); thanks @nehmeroumani).\n  _Note that the previous versions correctly delete only the logs older than the configured setting but due to the typo the delete query is invoked unnecessary on each logs batch write._\n\n\n## v0.22.15\n\n- Added mutex to `tests.TestMailer()` to minimize tests data race warnings ([#5157](https://github.com/pocketbase/pocketbase/issues/5157)).\n\n- Updated goja and the other Go dependencies.\n\n- Bumped the min Go version in the GitHub release action to Go 1.22.5 since it comes with [`net/http` security fixes](https://github.com/golang/go/issues?q=milestone%3AGo1.22.5).\n\n\n## v0.22.14\n\n- Added OAuth2 POST redirect support (in case of `response_mode=form_post`) to allow specifying scopes for the Apple OAuth2 integration.\n\n    Note 1: If you are using the \"Manual code exchange\" flow with Apple (aka. `authWithOAuth2Code()`), you need to either update your custom\n    redirect handler to accept POST requests OR if you want to keep the old behavior and don't need the Apple user's email - replace in the Apple authorization url `response_mode=form_post` back to `response_mode=query`.\n\n    Note 2: Existing users that have already logged in with Apple may need to revoke their access in order to see the email sharing options as shown in [this screenshot](https://github.com/pocketbase/pocketbase/discussions/5074#discussioncomment-9801855).\n    If you want to force the new consent screen you could register a new Apple OAuth2 app.\n\n- ⚠️ Fixed a security vulnerability related to the OAuth2 email autolinking (thanks to @dalurness for reporting it).\n\n    Just to be safe I've also published a [GitHub security advisory](https://github.com/pocketbase/pocketbase/security/advisories/GHSA-m93w-4fxv-r35v) (_may take some time to show up in the related security databases_).\n\n    In order to be exploited you must have **both** OAuth2 and Password auth methods enabled.\n\n    A possible attack scenario could be:\n    - a malicious actor register with the targeted user's email (it is unverified)\n    - at some later point in time the targeted user stumble on your app and decides to sign-up with OAuth2 (_this step could be also initiated by the attacker by sending an invite email to the targeted user_)\n    - on successful OAuth2 auth we search for an existing PocketBase user matching with the OAuth2 user's email and associate them\n    - because we haven't changed the password of the existing PocketBase user during the linking, the malicious actor has access to the targeted user account and will be able to login with the initially created email/password\n\n    To prevent this for happening we now reset the password for this specific case if the previously created user wasn't verified (an exception to this is if the linking is explicit/manual, aka. when you send `Authorization:TOKEN` with the OAuth2 auth call).\n\n    Additionally to warn users we now send an email alert in case the user has logged in with password but has at least one OAuth2 account linked. It looks something like:\n\n    _Hello,\n    Just to let you know that someone has logged in to your Acme account using a password while you already have OAuth2 GitLab auth linked.\n    If you have recently signed in with a password, you may disregard this email.\n    **If you don't recognize the above action, you should immediately change your Acme account password.**\n    Thanks,\n    Acme team_\n\n    The flow will be further improved with the [ongoing refactoring](https://github.com/pocketbase/pocketbase/discussions/4355) and we will start sending emails for \"unrecognized device\" logins (OTP and MFA is already implemented and will be available with the next v0.23.0 release in the near future).\n\n\n## v0.22.13\n\n- Fixed rules inconsistency for text literals when inside parenthesis ([#5017](https://github.com/pocketbase/pocketbase/issues/5017)).\n\n- Updated Go deps.\n\n\n## v0.22.12\n\n- Fixed calendar picker grid layout misalignment on Firefox ([#4865](https://github.com/pocketbase/pocketbase/issues/4865)).\n\n- Updated Go deps and bumped the min Go version in the GitHub release action to Go 1.22.3 since it comes with [some minor security fixes](https://github.com/golang/go/issues?q=milestone%3AGo1.22.3).\n\n\n## v0.22.11\n\n- Load the full record in the relation picker edit panel ([#4857](https://github.com/pocketbase/pocketbase/issues/4857)).\n\n\n## v0.22.10\n\n- Updated the uploaded filename normalization to take double extensions in consideration ([#4824](https://github.com/pocketbase/pocketbase/issues/4824))\n\n- Added Collection models cache to help speed up the common List and View requests execution with ~25%.\n  _This was extracted from the ongoing work on [#4355](https://github.com/pocketbase/pocketbase/discussions/4355) and there are many other small optimizations already implemented but they will have to wait for the refactoring to be finalized._\n\n\n## v0.22.9\n\n- Fixed Admin UI OAuth2 \"Clear all fields\" btn action to properly unset all form fields ([#4737](https://github.com/pocketbase/pocketbase/issues/4737)).\n\n\n## v0.22.8\n\n- Fixed '~' auto wildcard wrapping when the param has escaped `%` character ([#4704](https://github.com/pocketbase/pocketbase/discussions/4704)).\n\n- Other minor UI improvements (added `aria-expanded=true/false` to the dropdown triggers, added contrasting border around the default mail template btn style, etc.).\n\n- Updated Go deps and bumped the min Go version in the GitHub release action to Go 1.22.2 since it comes with [some `net/http` security and bug fixes](https://github.com/golang/go/issues?q=milestone%3AGo1.22.2).\n\n\n## v0.22.7\n\n- Replaced the default `s3blob` driver with a trimmed vendored version to reduce the binary size with ~10MB.\n  _It can be further reduced with another ~10MB once we replace entirely the `aws-sdk-go-v2` dependency but I stumbled on some edge cases related to the headers signing and for now is on hold._\n\n- Other minor improvements (updated GitLab OAuth2 provider logo [#4650](https://github.com/pocketbase/pocketbase/pull/4650), normalized error messages, updated npm dependencies, etc.)\n\n\n## v0.22.6\n\n- Admin UI accessibility improvements:\n  - Fixed the dropdowns tab/enter/space keyboard navigation ([#4607](https://github.com/pocketbase/pocketbase/issues/4607)).\n  - Added `role`, `aria-label`, `aria-hidden` attributes to some of the elements in attempt to better assist screen readers.\n\n\n## v0.22.5\n\n- Minor test helpers fixes ([#4600](https://github.com/pocketbase/pocketbase/issues/4600)):\n  - Call the `OnTerminate` hook on `TestApp.Cleanup()`.\n  - Automatically run the DB migrations on initializing the test app with `tests.NewTestApp()`.\n\n- Added more elaborate warning message when restoring a backup explaining how the operation works.\n\n- Skip irregular files (symbolic links, sockets, etc.) when restoring a backup zip from the Admin UI or calling `archive.Extract(src, dst)` because they come with too many edge cases and ambiguities.\n  <details>\n    <summary><b><i>More details</i></b></summary>\n\n    This was initially reported as security issue (_thanks Harvey Spec_) but in the PocketBase context it is not something that can be exploited without an admin intervention and since the general expectations are that the PocketBase admins can do anything and they are the one who manage their server, this should be treated with the same diligence when using `scp`/`rsync`/`rclone`/etc. with untrusted file sources.\n\n    It is not possible (_or at least I'm not aware how to do that easily_) to perform virus/malicious content scanning on the uploaded backup archive files and some caution is always required when using the Admin UI or running shell commands, hence the backup-restore warning text.\n\n    **Or in other words, if someone sends you a file and tell you to upload it to your server (either as backup zip or manually via scp) obviously you shouldn't do that unless you really trust them.**\n\n    PocketBase is like any other regular application that you run on your server and there is no builtin \"sandbox\" for what the PocketBase process can execute. This is left to the developers to restrict on application or OS level depending on their needs. If you are self-hosting PocketBase you usually don't have to do that, but if you are offering PocketBase as a service and allow strangers to run their own PocketBase instances on your server then you'll need to implement the isolation mechanisms on your own.\n  </details>\n\n\n## v0.22.4\n\n- Removed conflicting styles causing the detailed codeblock log data preview to not visualize properly ([#4505](https://github.com/pocketbase/pocketbase/pull/4505)).\n\n- Minor JSVM improvements:\n  - Added `$filesystem.fileFromUrl(url, optSecTimeout)` helper.\n  - Implemented the `FormData` interface and added support for sending `multipart/form-data` requests with `$http.send()` ([#4544](https://github.com/pocketbase/pocketbase/discussions/4544)).\n\n\n## v0.22.3\n\n- Fixed the z-index of the current admin dropdown on Safari ([#4492](https://github.com/pocketbase/pocketbase/issues/4492)).\n\n- Fixed `OnAfterApiError` debug log `nil` error reference ([#4498](https://github.com/pocketbase/pocketbase/issues/4498)).\n\n- Added the field name as part of the `@request.data.someRelField.*` join to handle the case when a collection has 2 or more relation fields pointing to the same place ([#4500](https://github.com/pocketbase/pocketbase/issues/4500)).\n\n- Updated Go deps and bumped the min Go version in the GitHub release action to Go 1.22.1 since it comes with [some security fixes](https://github.com/golang/go/issues?q=milestone%3AGo1.22.1).\n\n\n## v0.22.2\n\n- Fixed a small regression introduced with v0.22.0 that was causing some missing unknown fields to always return an error instead of applying the specific `nullifyMisingField` resolver option to the query.\n\n\n## v0.22.1\n\n- Fixed Admin UI record and collection panels not reinitializing properly on browser back/forward navigation ([#4462](https://github.com/pocketbase/pocketbase/issues/4462)).\n\n- Initialize `RecordAuthWithOAuth2Event.IsNewRecord` for the `OnRecordBeforeAuthWithOAuth2Request` hook ([#4437](https://github.com/pocketbase/pocketbase/discussions/4437)).\n\n- Added error checks to the autogenerated Go migrations ([#4448](https://github.com/pocketbase/pocketbase/issues/4448)).\n\n\n## v0.22.0\n\n- Added Planning Center OAuth2 provider ([#4393](https://github.com/pocketbase/pocketbase/pull/4393); thanks @alxjsn).\n\n- Admin UI improvements:\n  - Autosync collection changes across multiple open browser tabs.\n  - Fixed vertical image popup preview scrolling.\n  - Added options to export a subset of collections.\n  - Added option to import a subset of collections without deleting the others ([#3403](https://github.com/pocketbase/pocketbase/issues/3403)).\n\n- Added support for back/indirect relation `filter`/`sort` (single and multiple).\n  The syntax to reference back relation fields is `yourCollection_via_yourRelField.*`.\n  ⚠️ To avoid excessive joins, the nested relations resolver is now limited to max 6 level depth (the same as `expand`).\n  _Note that in the future there will be also more advanced and granular options to specify a subset of the fields that are filterable/sortable._\n\n- Added support for multiple back/indirect relation `expand` and updated the keys to use the `_via_` reference syntax (`yourCollection_via_yourRelField`).\n  _To minimize the breaking changes, the old parenthesis reference syntax (`yourCollection(yourRelField)`) will still continue to work but it is soft-deprecated and there will be a console log reminding you to change it to the new one._\n\n- ⚠️ Collections and fields are no longer allowed to have `_via_` in their name to avoid collisions with the back/indirect relation reference syntax.\n\n- Added `jsvm.Config.OnInit` optional config function to allow registering custom Go bindings to the JSVM.\n\n- Added `@request.context` rule field that can be used to apply a different set of constraints based on the API rule execution context.\n  For example, to disallow user creation by an OAuth2 auth, you could set for the users Create API rule `@request.context != \"oauth2\"`.\n  The currently supported `@request.context` values are:\n  ```\n  default\n  realtime\n  protectedFile\n  oauth2\n  ```\n\n- Adjusted the `cron.Start()` to start the ticker at the `00` second of the cron interval ([#4394](https://github.com/pocketbase/pocketbase/discussions/4394)).\n  _Note that the cron format has only minute granularity and there is still no guarantee that the scheduled job will be always executed at the `00` second._\n\n- Fixed auto backups cron not reloading properly after app settings change ([#4431](https://github.com/pocketbase/pocketbase/discussions/4431)).\n\n- Upgraded to `aws-sdk-go-v2` and added special handling for GCS to workaround the previous [GCS headers signature issue](https://github.com/pocketbase/pocketbase/issues/2231) that we had with v2.\n  _This should also fix the SVG/JSON zero response when using Cloudflare R2 ([#4287](https://github.com/pocketbase/pocketbase/issues/4287#issuecomment-1925168142), [#2068](https://github.com/pocketbase/pocketbase/discussions/2068), [#2952](https://github.com/pocketbase/pocketbase/discussions/2952))._\n  _⚠️ If you are using S3 for uploaded files or backups, please verify that you have a green check in the Admin UI for your S3 configuration (I've tested the new version with GCS, MinIO, Cloudflare R2 and Wasabi)._\n\n- Added `:each` modifier support for `file` and `relation` type fields (_previously it was supported only for `select` type fields_).\n\n- Other minor improvements (updated the `ghupdate` plugin to use the configured executable name when printing to the console, fixed the error reporting of `admin update/delete` commands, etc.).\n\n\n## v0.21.3\n\n- Ignore the JS required validations for disabled OIDC providers ([#4322](https://github.com/pocketbase/pocketbase/issues/4322)).\n\n- Allow `HEAD` requests to the `/api/health` endpoint ([#4310](https://github.com/pocketbase/pocketbase/issues/4310)).\n\n- Fixed the `editor` field value when visualized inside the View collection preview panel.\n\n- Manually clear all TinyMCE events on editor removal (_workaround for [tinymce#9377](https://github.com/tinymce/tinymce/issues/9377)_).\n\n\n## v0.21.2\n\n- Fixed `@request.auth.*` initialization side-effect which caused the current authenticated user email to not being returned in the user auth response ([#2173](https://github.com/pocketbase/pocketbase/issues/2173#issuecomment-1932332038)).\n  _The current authenticated user email should be accessible always no matter of the `emailVisibility` state._\n\n- Fixed `RecordUpsert.RemoveFiles` godoc example.\n\n- Bumped to `NumCPU()+2` the `thumbGenSem` limit as some users reported that it was too restrictive.\n\n\n## v0.21.1\n\n- Small fix for the Admin UI related to the _Settings > Sync_ menu not being visible even when the \"Hide controls\" toggle is off.\n\n\n## v0.21.0\n\n- Added Bitbucket OAuth2 provider ([#3948](https://github.com/pocketbase/pocketbase/pull/3948); thanks @aabajyan).\n\n- Mark user as verified on confirm password reset ([#4066](https://github.com/pocketbase/pocketbase/issues/4066)).\n  _If the user email has changed after issuing the reset token (eg. updated by an admin), then the `verified` user state remains unchanged._\n\n- Added support for loading a serialized json payload for `multipart/form-data` requests using the special `@jsonPayload` key.\n  _This is intended to be used primarily by the SDKs to resolve [js-sdk#274](https://github.com/pocketbase/js-sdk/issues/274)._\n\n- Added graceful OAuth2 redirect error handling ([#4177](https://github.com/pocketbase/pocketbase/issues/4177)).\n  _Previously on redirect error we were returning directly a standard json error response. Now on redirect error we'll redirect to a generic OAuth2 failure screen (similar to the success one) and will attempt to auto close the OAuth2 popup._\n  _The SDKs are also updated to handle the OAuth2 redirect error and it will be returned as Promise rejection of the `authWithOAuth2()` call._\n\n- Exposed `$apis.gzip()` and `$apis.bodyLimit(bytes)` middlewares to the JSVM.\n\n- Added `TestMailer.SentMessages` field that holds all sent test app emails until cleanup.\n\n- Optimized the cascade delete of records with multiple `relation` fields.\n\n- Updated the `serve` and `admin` commands error reporting.\n\n- Minor Admin UI improvements (reduced the min table row height, added option to duplicate fields, added new TinyMCE codesample plugin languages, hide the collection sync settings when the `Settings.Meta.HideControls` is enabled, etc.)\n\n\n## v0.20.7\n\n- Fixed the Admin UI auto indexes update when renaming fields with a common prefix ([#4160](https://github.com/pocketbase/pocketbase/issues/4160)).\n\n\n## v0.20.6\n\n- Fixed JSVM types generation for functions with omitted arg types ([#4145](https://github.com/pocketbase/pocketbase/issues/4145)).\n\n- Updated Go deps.\n\n\n## v0.20.5\n\n- Minor CSS fix for the Admin UI to prevent the searchbar within a popup from expanding too much and pushing the controls out of the visible area ([#4079](https://github.com/pocketbase/pocketbase/issues/4079#issuecomment-1876994116)).\n\n\n## v0.20.4\n\n- Small fix for a regression introduced with the recent `json` field changes that was causing View collection column expressions recognized as `json` to fail to resolve ([#4072](https://github.com/pocketbase/pocketbase/issues/4072)).\n\n\n## v0.20.3\n\n- Fixed the `json` field query comparisons to work correctly with plain JSON values like `null`, `bool` `number`, etc. ([#4068](https://github.com/pocketbase/pocketbase/issues/4068)).\n  Since there are plans in the future to allow custom SQLite builds and also in some situations it may be useful to be able to distinguish `NULL` from `''`,\n  for the `json` fields (and for any other future non-standard field) we no longer apply `COALESCE` by default, aka.:\n  ```\n  Dataset:\n  1) data: json(null)\n  2) data: json('')\n\n  For the filter \"data = null\" only 1) will resolve to TRUE.\n  For the filter \"data = ''\"   only 2) will resolve to TRUE.\n  ```\n\n- Minor Go tests improvements\n  - Sorted the record cascade delete references to ensure that the delete operation will preserve the order of the fired events when running the tests.\n  - Marked some of the tests as safe for parallel execution to speed up a little the GitHub action build times.\n\n\n## v0.20.2\n\n- Added `sleep(milliseconds)` JSVM binding.\n  _It works the same way as Go `time.Sleep()`, aka. it pauses the goroutine where the JSVM code is running._\n\n- Fixed multi-line text paste in the Admin UI search bar ([#4022](https://github.com/pocketbase/pocketbase/discussions/4022)).\n\n- Fixed the monospace font loading in the Admin UI.\n\n- Fixed various reported docs and code comment typos.\n\n\n## v0.20.1\n\n- Added `--dev` flag and its accompanying `app.IsDev()` method (_in place of the previously removed `--debug`_) to assist during development ([#3918](https://github.com/pocketbase/pocketbase/discussions/3918)).\n  The `--dev` flag prints in the console \"everything\" and more specifically:\n  - the data DB SQL statements\n  - all `app.Logger().*` logs (debug, info, warning, error, etc.), no matter of the logs persistence settings in the Admin UI\n\n- Minor Admin UI fixes:\n  - Fixed the log `error` label text wrapping.\n  - Added the log `referer` (_when it is from a different source_) and `details` labels in the logs listing.\n  - Removed the blank current time entry from the logs chart because it was causing confusion when used with custom time ranges.\n  - Updated the SQL syntax highlighter and keywords autocompletion in the Admin UI to recognize `CAST(x as bool)` expressions.\n\n- Replaced the default API tests timeout with a new `ApiScenario.Timeout` option ([#3930](https://github.com/pocketbase/pocketbase/issues/3930)).\n  A negative or zero value means no tests timeout.\n  If a single API test takes more than 3s to complete it will have a log message visible when the test fails or when `go test -v` flag is used.\n\n- Added timestamp at the beginning of the generated JSVM types file to avoid creating it everytime with the app startup.\n\n\n## v0.20.0\n\n- Added `expand`, `filter`, `fields`, custom query and headers parameters support for the realtime subscriptions.\n    _Requires JS SDK v0.20.0+ or Dart SDK v0.17.0+._\n\n    ```js\n    // JS SDK v0.20.0\n    pb.collection(\"example\").subscribe(\"*\", (e) => {\n      ...\n    }, {\n      expand: \"someRelField\",\n      filter: \"status = 'active'\",\n      fields: \"id,expand.someRelField.*:excerpt(100)\",\n    })\n    ```\n\n    ```dart\n    // Dart SDK v0.17.0\n    pb.collection(\"example\").subscribe(\"*\", (e) {\n        ...\n      },\n      expand: \"someRelField\",\n      filter: \"status = 'active'\",\n      fields: \"id,expand.someRelField.*:excerpt(100)\",\n    )\n    ```\n\n- Generalized the logs to allow any kind of application logs, not just requests.\n\n    The new `app.Logger()` implements the standard [`log/slog` interfaces](https://pkg.go.dev/log/slog) available with Go 1.21.\n    ```\n    // Go: https://pocketbase.io/docs/go-logging/\n    app.Logger().Info(\"Example message\", \"total\", 123, \"details\", \"lorem ipsum...\")\n\n    // JS: https://pocketbase.io/docs/js-logging/\n    $app.logger().info(\"Example message\", \"total\", 123, \"details\", \"lorem ipsum...\")\n    ```\n\n    For better performance and to minimize blocking on hot paths, logs are currently written with\n    debounce and on batches:\n    - 3 seconds after the last debounced log write\n    - when the batch threshold is reached (currently 200)\n    - right before app termination to attempt saving everything from the existing logs queue\n\n    Some notable log related changes:\n\n    - ⚠️ Bumped the minimum required Go version to 1.21.\n\n    - ⚠️ Removed `_requests` table in favor of the generalized `_logs`.\n      _Note that existing logs will be deleted!_\n\n    - ⚠️ Renamed the following `Dao` log methods:\n      ```go\n      Dao.RequestQuery(...)      -> Dao.LogQuery(...)\n      Dao.FindRequestById(...)   -> Dao.FindLogById(...)\n      Dao.RequestsStats(...)     -> Dao.LogsStats(...)\n      Dao.DeleteOldRequests(...) -> Dao.DeleteOldLogs(...)\n      Dao.SaveRequest(...)       -> Dao.SaveLog(...)\n      ```\n    - ⚠️ Removed `app.IsDebug()` and the `--debug` flag.\n      This was done to avoid the confusion with the new logger and its debug severity level.\n      If you want to store debug logs you can set `-4` as min log level from the Admin UI.\n\n    - Refactored Admin UI Logs:\n      - Added new logs table listing.\n      - Added log settings option to toggle the IP logging for the activity logger.\n      - Added log settings option to specify a minimum log level.\n      - Added controls to export individual or bulk selected logs as json.\n      - Other minor improvements and fixes.\n\n- Added new `filesystem/System.Copy(src, dest)` method to copy existing files from one location to another.\n  _This is usually useful when duplicating records with `file` field(s) programmatically._\n\n- Added `filesystem.NewFileFromUrl(ctx, url)` helper method to construct a `*filesystem.BytesReader` file from the specified url.\n\n- OAuth2 related additions:\n\n    - Added new `PKCE()` and `SetPKCE(enable)` OAuth2 methods to indicate whether the PKCE flow is supported or not.\n      _The PKCE value is currently configurable from the UI only for the OIDC providers._\n      _This was added to accommodate OIDC providers that may throw an error if unsupported PKCE params are submitted with the auth request (eg. LinkedIn; see [#3799](https://github.com/pocketbase/pocketbase/discussions/3799#discussioncomment-7640312))._\n\n    - Added new `displayName` field for each `listAuthMethods()` OAuth2 provider item.\n      _The value of the `displayName` property is currently configurable from the UI only for the OIDC providers._\n\n    - Added `expiry` field to the OAuth2 user response containing the _optional_ expiration time of the OAuth2 access token ([#3617](https://github.com/pocketbase/pocketbase/discussions/3617)).\n\n    - Allow a single OAuth2 user to be used for authentication in multiple auth collection.\n      _⚠️ Because now you can have more than one external provider with `collectionId-provider-providerId` pair, `Dao.FindExternalAuthByProvider(provider, providerId)` method was removed in favour of the more generic `Dao.FindFirstExternalAuthByExpr(expr)`._\n\n- Added `onlyVerified` auth collection option to globally disallow authentication requests for unverified users.\n\n- Added support for single line comments (ex. `// your comment`) in the API rules and filter expressions.\n\n- Added support for specifying a collection alias in `@collection.someCollection:alias.*`.\n\n- Soft-deprecated and renamed `app.Cache()` with `app.Store()`.\n\n- Minor JSVM updates and fixes:\n\n    - Updated `$security.parseUnverifiedJWT(token)` and `$security.parseJWT(token, key)` to return the token payload result as plain object.\n\n    - Added `$apis.requireGuestOnly()` middleware JSVM binding ([#3896](https://github.com/pocketbase/pocketbase/issues/3896)).\n\n- Use `IS NOT` instead of `!=` as not-equal SQL query operator to handle the cases when comparing with nullable columns or expressions (eg. `json_extract` over `json` field).\n  _Based on my local dataset I wasn't able to find a significant difference in the performance between the 2 operators, but if you stumble on a query that you think may be affected negatively by this, please report it and I'll test it further._\n\n- Added `MaxSize` `json` field option to prevent storing large json data in the db ([#3790](https://github.com/pocketbase/pocketbase/issues/3790)).\n  _Existing `json` fields are updated with a system migration to have a ~2MB size limit (it can be adjusted from the Admin UI)._\n\n- Fixed negative string number normalization support for the `json` field type.\n\n- Trigger the `app.OnTerminate()` hook on `app.Restart()` call.\n  _A new bool `IsRestart` field was also added to the `core.TerminateEvent` event._\n\n- Fixed graceful shutdown handling and speed up a little the app termination time.\n\n- Limit the concurrent thumbs generation to avoid high CPU and memory usage in spiky scenarios ([#3794](https://github.com/pocketbase/pocketbase/pull/3794); thanks @t-muehlberger).\n  _Currently the max concurrent thumbs generation processes are limited to \"total of logical process CPUs + 1\"._\n  _This is arbitrary chosen and may change in the future depending on the users feedback and usage patterns._\n  _If you are experiencing OOM errors during large image thumb generations, especially in container environment, you can try defining the `GOMEMLIMIT=500MiB` env variable before starting the executable._\n\n- Slightly speed up (~10%) the thumbs generation by changing from cubic (`CatmullRom`) to bilinear (`Linear`) resampling filter (_the quality difference is very little_).\n\n- Added a default red colored Stderr output in case of a console command error.\n  _You can now also silence individually custom commands errors using the `cobra.Command.SilenceErrors` field._\n\n- Fixed links formatting in the autogenerated html->text mail body.\n\n- Removed incorrectly imported empty `local('')` font-face declarations.\n\n\n## v0.19.4\n\n- Fixed TinyMCE source code viewer textarea styles ([#3715](https://github.com/pocketbase/pocketbase/issues/3715)).\n\n- Fixed `text` field min/max validators to properly count multi-byte characters ([#3735](https://github.com/pocketbase/pocketbase/issues/3735)).\n\n- Allowed hyphens in `username` ([#3697](https://github.com/pocketbase/pocketbase/issues/3697)).\n  _More control over the system fields settings will be available in the future._\n\n- Updated the JSVM generated types to use directly the value type instead of `* | undefined` union in functions/methods return declarations.\n\n\n## v0.19.3\n\n- Added the release notes to the console output of `./pocketbase update` ([#3685](https://github.com/pocketbase/pocketbase/discussions/3685)).\n\n- Added missing documentation for the JSVM `$mails.*` bindings.\n\n- Relaxed the OAuth2 redirect url validation to allow any string value ([#3689](https://github.com/pocketbase/pocketbase/pull/3689); thanks @sergeypdev).\n  _Note that the redirect url format is still bound to the accepted values by the specific OAuth2 provider._\n\n\n## v0.19.2\n\n- Updated the JSVM generated types ([#3627](https://github.com/pocketbase/pocketbase/issues/3627), [#3662](https://github.com/pocketbase/pocketbase/issues/3662)).\n\n\n## v0.19.1\n\n- Fixed `tokenizer.Scan()/ScanAll()` to ignore the separators from the default trim cutset.\n  An option to return also the empty found tokens was also added via `Tokenizer.KeepEmptyTokens(true)`.\n  _This should fix the parsing of whitespace characters around view query column names when no quotes are used ([#3616](https://github.com/pocketbase/pocketbase/discussions/3616#discussioncomment-7398564))._\n\n- Fixed the `:excerpt(max, withEllipsis?)` `fields` query param modifier to properly add space to the generated text fragment after block tags.\n\n\n## v0.19.0\n\n- Added Patreon OAuth2 provider ([#3323](https://github.com/pocketbase/pocketbase/pull/3323); thanks @ghostdevv).\n\n- Added mailcow OAuth2 provider ([#3364](https://github.com/pocketbase/pocketbase/pull/3364); thanks @thisni1s).\n\n- Added support for `:excerpt(max, withEllipsis?)` `fields` modifier that will return a short plain text version of any string value (html tags are stripped).\n    This could be used to minimize the downloaded json data when listing records with large `editor` html values.\n    ```js\n    await pb.collection(\"example\").getList(1, 20, {\n      \"fields\": \"*,description:excerpt(100)\"\n    })\n    ```\n\n- Several Admin UI improvements:\n  - Count the total records separately to speed up the query execution for large datasets ([#3344](https://github.com/pocketbase/pocketbase/issues/3344)).\n  - Enclosed the listing scrolling area within the table so that the horizontal scrollbar and table header are always reachable ([#2505](https://github.com/pocketbase/pocketbase/issues/2505)).\n  - Allowed opening the record preview/update form via direct URL ([#2682](https://github.com/pocketbase/pocketbase/discussions/2682)).\n  - Reintroduced the local `date` field tooltip on hover.\n  - Speed up the listing loading times for records with large `editor` field values by initially fetching only a partial of the records data (the complete record data is loaded on record preview/update).\n  - Added \"Media library\" (collection images picker) support for the TinyMCE `editor` field.\n  - Added support to \"pin\" collections in the sidebar.\n  - Added support to manually resize the collections sidebar.\n  - More clear \"Nonempty\" field label style.\n  - Removed the legacy `.woff` and `.ttf` fonts and keep only `.woff2`.\n\n- Removed the explicit `Content-Type` charset from the realtime response due to compatibility issues with IIS ([#3461](https://github.com/pocketbase/pocketbase/issues/3461)).\n  _The `Connection:keep-alive` realtime response header was also removed as it is not really used with HTTP2 anyway._\n\n- Added new JSVM bindings:\n  - `new Cookie({ ... })` constructor for creating `*http.Cookie` equivalent value.\n  - `new SubscriptionMessage({ ... })` constructor for creating a custom realtime subscription payload.\n  - Soft-deprecated `$os.exec()` in favour of `$os.cmd()` to make it more clear that the call only prepares the command and doesn't execute it.\n\n- ⚠️ Bumped the min required Go version to 1.19.\n\n\n## v0.18.10\n\n- Added global `raw` template function to allow outputting raw/verbatim HTML content in the JSVM templates ([#3476](https://github.com/pocketbase/pocketbase/discussions/3476)).\n  ```\n  {{.description|raw}}\n  ```\n\n- Trimmed view query semicolon and allowed single quotes for column aliases ([#3450](https://github.com/pocketbase/pocketbase/issues/3450#issuecomment-1748044641)).\n  _Single quotes are usually [not a valid identifier quote characters](https://www.sqlite.org/lang_keywords.html), but for resilience and compatibility reasons SQLite allows them in some contexts where only an identifier is expected._\n\n- Bumped the GitHub action to use [min Go 1.21.2](https://github.com/golang/go/issues?q=milestone%3AGo1.21.2) (_the fixed issues are not critical as they are mostly related to the compiler/build tools_).\n\n\n## v0.18.9\n\n- Fixed empty thumbs directories not getting deleted on Windows after deleting a record img file ([#3382](https://github.com/pocketbase/pocketbase/issues/3382)).\n\n- Updated the generated JSVM typings to silent the TS warnings when trying to access a field/method in a Go->TS interface.\n\n\n## v0.18.8\n\n- Minor fix for the View collections API Preview and Admin UI listings incorrectly showing the `created` and `updated` fields as `N/A` when the view query doesn't have them.\n\n\n## v0.18.7\n\n- Fixed JS error in the Admin UI when listing records with invalid `relation` field value ([#3372](https://github.com/pocketbase/pocketbase/issues/3372)).\n  _This could happen usually only during custom SQL import scripts or when directly modifying the record field value without data validations._\n\n- Updated Go deps and the generated JSVM types.\n\n\n## v0.18.6\n\n- Return the response headers and cookies in the `$http.send()` result ([#3310](https://github.com/pocketbase/pocketbase/discussions/3310)).\n\n- Added more descriptive internal error message for missing user/admin email on password reset requests.\n\n- Updated Go deps.\n\n\n## v0.18.5\n\n- Fixed minor Admin UI JS error in the auth collection options panel introduced with the change from v0.18.4.\n\n\n## v0.18.4\n\n- Added escape character (`\\`) support in the Admin UI to allow using `select` field values with comma ([#2197](https://github.com/pocketbase/pocketbase/discussions/2197)).\n\n\n## v0.18.3\n\n- Exposed a global JSVM `readerToString(reader)` helper function to allow reading Go `io.Reader` values ([#3273](https://github.com/pocketbase/pocketbase/discussions/3273)).\n\n- Bumped the GitHub action to use [min Go 1.21.1](https://github.com/golang/go/issues?q=milestone%3AGo1.21.1+label%3ACherryPickApproved) for the prebuilt executable since it contains some minor `html/template` and `net/http` security fixes.\n\n\n## v0.18.2\n\n- Prevent breaking the record form in the Admin UI in case the browser's localStorage quota has been exceeded when uploading or storing large `editor` values ([#3265](https://github.com/pocketbase/pocketbase/issues/3265)).\n\n- Updated docs and missing JSVM typings.\n\n- Exposed additional crypto primitives under the `$security.*` JSVM namespace ([#3273](https://github.com/pocketbase/pocketbase/discussions/3273)):\n  ```js\n  // HMAC with SHA256\n  $security.hs256(\"hello\", \"secret\")\n\n  // HMAC with SHA512\n  $security.hs512(\"hello\", \"secret\")\n\n  // compare 2 strings with a constant time\n  $security.equal(hash1, hash2)\n  ```\n\n\n## v0.18.1\n\n- Excluded the local temp dir from the backups ([#3261](https://github.com/pocketbase/pocketbase/issues/3261)).\n\n\n## v0.18.0\n\n- Simplified the `serve` command to accept domain name(s) as argument to reduce any additional manual hosts setup that sometimes previously was needed when deploying on production ([#3190](https://github.com/pocketbase/pocketbase/discussions/3190)).\n  ```sh\n  ./pocketbase serve yourdomain.com\n  ```\n\n- Added `fields` wildcard (`*`) support.\n\n- Added option to upload a backup file from the Admin UI ([#2599](https://github.com/pocketbase/pocketbase/issues/2599)).\n\n- Registered a custom Deflate compressor to speedup (_nearly 2-3x_) the backups generation for the sake of a small zip size increase.\n  _Based on several local tests, `pb_data` of ~500MB (from which ~350MB+ are several hundred small files) results in a ~280MB zip generated for ~11s (previously it resulted in ~250MB zip but for ~35s)._\n\n- Added the application name as part of the autogenerated backup name for easier identification ([#3066](https://github.com/pocketbase/pocketbase/issues/3066)).\n\n- Added new `SmtpConfig.LocalName` option to specify a custom domain name (or IP address) for the initial EHLO/HELO exchange ([#3097](https://github.com/pocketbase/pocketbase/discussions/3097)).\n  _This is usually required for verification purposes only by some SMTP providers, such as on-premise [Gmail SMTP-relay](https://support.google.com/a/answer/2956491)._\n\n- Added `NoDecimal` `number` field option.\n\n- `editor` field improvements:\n    - Added new \"Strip urls domain\" option to allow controlling the default TinyMCE urls behavior (_default to `false` for new content_).\n    - Normalized pasted text while still preserving links, lists, tables, etc. formatting ([#3257](https://github.com/pocketbase/pocketbase/issues/3257)).\n\n- Added option to auto generate admin and auth record passwords from the Admin UI.\n\n- Added JSON validation and syntax highlight for the `json` field in the Admin UI ([#3191](https://github.com/pocketbase/pocketbase/issues/3191)).\n\n- Added datetime filter macros:\n  ```\n  // all macros are UTC based\n  @second     - @now second number (0-59)\n  @minute     - @now minute number (0-59)\n  @hour       - @now hour number (0-23)\n  @weekday    - @now weekday number (0-6)\n  @day        - @now day number\n  @month      - @now month number\n  @year       - @now year number\n  @todayStart - beginning of the current day as datetime string\n  @todayEnd   - end of the current day as datetime string\n  @monthStart - beginning of the current month as datetime string\n  @monthEnd   - end of the current month as datetime string\n  @yearStart  - beginning of the current year as datetime string\n  @yearEnd    - end of the current year as datetime string\n  ```\n\n- Added cron expression macros ([#3132](https://github.com/pocketbase/pocketbase/issues/3132)):\n  ```\n  @yearly   - \"0 0 1 1 *\"\n  @annually - \"0 0 1 1 *\"\n  @monthly  - \"0 0 1 * *\"\n  @weekly   - \"0 0 * * 0\"\n  @daily    - \"0 0 * * *\"\n  @midnight - \"0 0 * * *\"\n  @hourly   - \"0 * * * *\"\n  ```\n\n- ⚠️ Added offset argument `Dao.FindRecordsByFilter(collection, filter, sort, limit, offset, [params...])`.\n  _If you don't need an offset, you can set it to `0`._\n\n- To minimize the footguns with `Dao.FindFirstRecordByFilter()` and `Dao.FindRecordsByFilter()`, the functions now supports an optional placeholder params argument that is safe to be populated with untrusted user input.\n  The placeholders are in the same format as when binding regular SQL parameters.\n  ```go\n  // unsanitized and untrusted filter variables\n  status := \"...\"\n  author := \"...\"\n\n  app.Dao().FindFirstRecordByFilter(\"articles\", \"status={:status} && author={:author}\", dbx.Params{\n    \"status\": status,\n    \"author\": author,\n  })\n\n  app.Dao().FindRecordsByFilter(\"articles\", \"status={:status} && author={:author}\", \"-created\", 10, 0, dbx.Params{\n    \"status\": status,\n    \"author\": author,\n  })\n  ```\n\n- Added JSVM `$mails.*` binds for the corresponding Go [mails package](https://pkg.go.dev/github.com/pocketbase/pocketbase/mails) functions.\n\n- Added JSVM helper crypto primitives under the `$security.*` namespace:\n  ```js\n  $security.md5(text)\n  $security.sha256(text)\n  $security.sha512(text)\n  ```\n\n- ⚠️ Deprecated `RelationOptions.DisplayFields` in favor of the new `SchemaField.Presentable` option to avoid the duplication when a single collection is referenced more than once and/or by multiple other collections.\n\n- ⚠️ Fill the `LastVerificationSentAt` and `LastResetSentAt` fields only after a successfull email send ([#3121](https://github.com/pocketbase/pocketbase/issues/3121)).\n\n- ⚠️ Skip API `fields` json transformations for non 20x responses ([#3176](https://github.com/pocketbase/pocketbase/issues/3176)).\n\n- ⚠️ Changes to `tests.ApiScenario` struct:\n\n    - The `ApiScenario.AfterTestFunc` now receive as 3rd argument `*http.Response` pointer instead of `*echo.Echo` as the latter is not really useful in this context.\n      ```go\n      // old\n      AfterTestFunc: func(t *testing.T, app *tests.TestApp, e *echo.Echo)\n\n      // new\n      AfterTestFunc: func(t *testing.T, app *tests.TestApp, res *http.Response)\n      ```\n\n    - The `ApiScenario.TestAppFactory` now accept the test instance as argument and no longer expect an error as return result ([#3025](https://github.com/pocketbase/pocketbase/discussions/3025#discussioncomment-6592272)).\n      ```go\n      // old\n      TestAppFactory: func() (*tests.TestApp, error)\n\n      // new\n      TestAppFactory: func(t *testing.T) *tests.TestApp\n      ```\n      _Returning a `nil` app instance from the factory results in test failure. You can enforce a custom test failure by calling `t.Fatal(err)` inside the factory._\n\n- Bumped the min required TLS version to 1.2 in order to improve the cert reputation score.\n\n- Reduced the default JSVM prewarmed pool size to 25 to reduce the initial memory consumptions (_you can manually adjust the pool size with `--hooksPool=50` if you need to, but the default should suffice for most cases_).\n\n- Update `gocloud.dev` dependency to v0.34 and explicitly set the new `NoTempDir` fileblob option to prevent the cross-device link error introduced with v0.33.\n\n- Other minor Admin UI and docs improvements.\n\n\n## v0.17.7\n\n- Fixed the autogenerated `down` migrations to properly revert the old collection rules in case a change was made in `up` ([#3192](https://github.com/pocketbase/pocketbase/pull/3192); thanks @impact-merlinmarek).\n  _Existing `down` migrations can't be fixed but that should be ok as usually the `down` migrations are rarely used against prod environments since they can cause data loss and, while not ideal, the previous old behavior of always setting the rules to `null/nil` is safer than not updating the rules at all._\n\n- Updated some Go deps.\n\n\n## v0.17.6\n\n- Fixed JSVM `require()` file path error when using Windows-style path delimiters ([#3163](https://github.com/pocketbase/pocketbase/issues/3163#issuecomment-1685034438)).\n\n\n## v0.17.5\n\n- Added quotes around the wrapped view query columns introduced with v0.17.4.\n\n\n## v0.17.4\n\n- Fixed Views record retrieval when numeric id is used ([#3110](https://github.com/pocketbase/pocketbase/issues/3110)).\n  _With this fix we also now properly recognize `CAST(... as TEXT)` and `CAST(... as BOOLEAN)` as `text` and `bool` fields._\n\n- Fixed `relation` \"Cascade delete\" tooltip message ([#3098](https://github.com/pocketbase/pocketbase/issues/3098)).\n\n- Fixed jsvm error message prefix on failed migrations ([#3103](https://github.com/pocketbase/pocketbase/pull/3103); thanks @nzhenev).\n\n- Disabled the initial Admin UI admins counter cache when there are no initial admins to allow detecting externally created accounts (eg. with the `admin` command) ([#3106](https://github.com/pocketbase/pocketbase/issues/3106)).\n\n- Downgraded `google/go-cloud` dependency to v0.32.0 until v0.34.0 is released to prevent the `os.TempDir` `cross-device link` errors as too many users complained about it.\n\n\n## v0.17.3\n\n- Fixed Docker `cross-device link` error when creating `pb_data` backups on a local mounted volume ([#3089](https://github.com/pocketbase/pocketbase/issues/3089)).\n\n- Fixed the error messages for relation to views ([#3090](https://github.com/pocketbase/pocketbase/issues/3090)).\n\n- Always reserve space for the scrollbar to reduce the layout shifts in the Admin UI records listing due to the deprecated `overflow: overlay`.\n\n- Enabled lazy loading for the Admin UI thumb images.\n\n\n## v0.17.2\n\n- Soft-deprecated `$http.send({ data: object, ... })` in favour of `$http.send({ body: rawString, ... })`\n  to allow sending non-JSON body with the request ([#3058](https://github.com/pocketbase/pocketbase/discussions/3058)).\n  The existing `data` prop will still work, but it is recommended to use `body` instead (_to send JSON you can use `JSON.stringify(...)` as body value_).\n\n- Added `core.RealtimeConnectEvent.IdleTimeout` field to allow specifying a different realtime idle timeout duration per client basis ([#3054](https://github.com/pocketbase/pocketbase/discussions/3054)).\n\n- Fixed `apis.RequestData` deprecation log note ([#3068](https://github.com/pocketbase/pocketbase/pull/3068); thanks @gungjodi).\n\n\n## v0.17.1\n\n- Use relative path when redirecting to the OAuth2 providers page in the Admin UI to support subpath deployments ([#3026](https://github.com/pocketbase/pocketbase/pull/3026); thanks @sonyarianto).\n\n- Manually trigger the `OnBeforeServe` hook for `tests.ApiScenario` ([#3025](https://github.com/pocketbase/pocketbase/discussions/3025)).\n\n- Trigger the JSVM `cronAdd()` handler only on app `serve` to prevent unexpected (and eventually duplicated) cron handler calls when custom console commands are used ([#3024](https://github.com/pocketbase/pocketbase/discussions/3024#discussioncomment-6592703)).\n\n- The `console.log()` messages are now written to the `stdout` instead of `stderr`.\n\n\n## v0.17.0\n\n- New more detailed guides for using PocketBase as framework (both Go and JS).\n  _If you find any typos or issues with the docs please report them in https://github.com/pocketbase/site._\n\n- Added new experimental JavaScript app hooks binding via [goja](https://github.com/dop251/goja).\n  They are available by default with the prebuilt executable if you create `*.pb.js` file(s) in the `pb_hooks` directory.\n  Lower your expectations because the integration comes with some limitations. For more details please check the [Extend with JavaScript](https://pocketbase.io/docs/js-overview/) guide.\n  Optionally, you can also enable the JS app hooks as part of a custom Go build for dynamic scripting but you need to register the `jsvm` plugin manually:\n  ```go\n  jsvm.MustRegister(app core.App, config jsvm.Config{})\n  ```\n\n- Added Instagram OAuth2 provider ([#2534](https://github.com/pocketbase/pocketbase/pull/2534); thanks @pnmcosta).\n\n- Added VK OAuth2 provider ([#2533](https://github.com/pocketbase/pocketbase/pull/2533); thanks @imperatrona).\n\n- Added Yandex OAuth2 provider ([#2762](https://github.com/pocketbase/pocketbase/pull/2762); thanks @imperatrona).\n\n- Added new fields to `core.ServeEvent`:\n  ```go\n  type ServeEvent struct {\n    App    App\n    Router *echo.Echo\n    // new fields\n    Server      *http.Server      // allows adjusting the HTTP server config (global timeouts, TLS options, etc.)\n    CertManager *autocert.Manager // allows adjusting the autocert options (cache dir, host policy, etc.)\n  }\n  ```\n\n- Added `record.ExpandedOne(rel)` and `record.ExpandedAll(rel)` helpers to retrieve casted single or multiple expand relations from the already loaded \"expand\" Record data.\n\n- Added rule and filter record `Dao` helpers:\n  ```go\n  app.Dao().FindRecordsByFilter(\"posts\", \"title ~ 'lorem ipsum' && visible = true\", \"-created\", 10)\n  app.Dao().FindFirstRecordByFilter(\"posts\", \"slug='test' && active=true\")\n  app.Dao().CanAccessRecord(record, requestInfo, rule)\n  ```\n\n- Added `Dao.WithoutHooks()` helper to create a new `Dao` from the current one but without the create/update/delete hooks.\n\n- Use a default fetch function that will return all relations in case the `fetchFunc` argument of `Dao.ExpandRecord(record, expands, fetchFunc)` and `Dao.ExpandRecords(records, expands, fetchFunc)` is `nil`.\n\n- For convenience it is now possible to call `Dao.RecordQuery(collectionModelOrIdentifier)` with just the collection id or name.\n  In case an invalid collection id/name string is passed the query will be resolved with cancelled context error.\n\n- Refactored `apis.ApiError` validation errors serialization to allow `map[string]error` and `map[string]any` when generating the public safe formatted `ApiError.Data`.\n\n- Added support for wrapped API errors (_in case Go 1.20+ is used with multiple wrapped errors, the first `apis.ApiError` takes precedence_).\n\n- Added `?download=1` file query parameter to the file serving endpoint to force the browser to always download the file and not show its preview.\n\n- Added new utility `github.com/pocketbase/pocketbase/tools/template` subpackage to assist with rendering HTML templates using the standard Go `html/template` and `text/template` syntax.\n\n- Added `types.JsonMap.Get(k)` and `types.JsonMap.Set(k, v)` helpers for the cases where the type aliased direct map access is not allowed (eg. in [goja](https://pkg.go.dev/github.com/dop251/goja#hdr-Maps_with_methods)).\n\n- Soft-deprecated `security.NewToken()` in favor of `security.NewJWT()`.\n\n- `Hook.Add()` and `Hook.PreAdd` now returns a unique string identifier that could be used to remove the registered hook handler via `Hook.Remove(handlerId)`.\n\n- Changed the after* hooks to be called right before writing the user response, allowing users to return response errors from the after hooks.\n  There is also no longer need for returning explicitly `hook.StopPropagtion` when writing custom response body in a hook because we will skip the finalizer response body write if a response was already \"committed\".\n\n- ⚠️ Renamed `*Options{}` to `Config{}` for consistency and replaced the unnecessary pointers with their value equivalent to keep the applied configuration defaults isolated within their function calls:\n  ```go\n  old: pocketbase.NewWithConfig(config *pocketbase.Config) *pocketbase.PocketBase\n  new: pocketbase.NewWithConfig(config pocketbase.Config) *pocketbase.PocketBase\n\n  old: core.NewBaseApp(config *core.BaseAppConfig) *core.BaseApp\n  new: core.NewBaseApp(config core.BaseAppConfig) *core.BaseApp\n\n  old: apis.Serve(app core.App, options *apis.ServeOptions) error\n  new: apis.Serve(app core.App, config apis.ServeConfig) (*http.Server, error)\n\n  old: jsvm.MustRegisterMigrations(app core.App, options *jsvm.MigrationsOptions)\n  new: jsvm.MustRegister(app core.App, config jsvm.Config)\n\n  old: ghupdate.MustRegister(app core.App, rootCmd *cobra.Command, options *ghupdate.Options)\n  new: ghupdate.MustRegister(app core.App, rootCmd *cobra.Command, config ghupdate.Config)\n\n  old: migratecmd.MustRegister(app core.App, rootCmd *cobra.Command, options *migratecmd.Options)\n  new: migratecmd.MustRegister(app core.App, rootCmd *cobra.Command, config migratecmd.Config)\n  ```\n\n- ⚠️ Changed the type of `subscriptions.Message.Data` from `string` to `[]byte` because `Data` usually is a json bytes slice anyway.\n\n- ⚠️ Renamed `models.RequestData` to `models.RequestInfo` and soft-deprecated `apis.RequestData(c)` in favor of `apis.RequestInfo(c)` to avoid the stuttering with the `Data` field.\n  _The old `apis.RequestData()` method still works to minimize the breaking changes but it is recommended to replace it with `apis.RequestInfo(c)`._\n\n- ⚠️ Changes to the List/Search APIs\n    - Added new query parameter `?skipTotal=1` to skip the `COUNT` query performed with the list/search actions ([#2965](https://github.com/pocketbase/pocketbase/discussions/2965)).\n      If `?skipTotal=1` is set, the response fields `totalItems` and `totalPages` will have `-1` value (this is to avoid having different JSON responses and to differentiate from the zero default).\n      With the latest JS SDK 0.16+ and Dart SDK v0.11+ versions `skipTotal=1` is set by default for the `getFirstListItem()` and `getFullList()` requests.\n\n    - The count and regular select statements also now executes concurrently, meaning that we no longer perform normalization over the `page` parameter and in case the user\n      request a page that doesn't exist (eg. `?page=99999999`) we'll return empty `items` array.\n\n    - Reverted the default `COUNT` column to `id` as there are some common situations where it can negatively impact the query performance.\n      Additionally, from this version we also set `PRAGMA temp_store = MEMORY` so that also helps with the temp B-TREE creation when `id` is used.\n      _There are still scenarios where `COUNT` queries with `rowid` executes faster, but the majority of the time when nested relations lookups are used it seems to have the opposite effect (at least based on the benchmarks dataset)._\n\n- ⚠️ Disallowed relations to views **from non-view** collections ([#3000](https://github.com/pocketbase/pocketbase/issues/3000)).\n  The change was necessary because I wasn't able to find an efficient way to track view changes and the previous behavior could have too many unexpected side-effects (eg. view with computed ids).\n  There is a system migration that will convert the existing view `relation` fields to `json` (multiple) and `text` (single) fields.\n  This could be a breaking change if you have `relation` to view and use `expand` or some of the `relation` view fields as part of a collection rule.\n\n- ⚠️ Added an extra `action` argument to the `Dao` hooks to allow skipping the default persist behavior.\n  In preparation for the logs generalization, the `Dao.After*Func` methods now also allow returning an error.\n\n- Allowed `0` as `RelationOptions.MinSelect` value to avoid the ambiguity between 0 and non-filled input value ([#2817](https://github.com/pocketbase/pocketbase/discussions/2817)).\n\n- Fixed zero-default value not being used if the field is not explicitly set when manually creating records ([#2992](https://github.com/pocketbase/pocketbase/issues/2992)).\n  Additionally, `record.Get(field)` will now always return normalized value (the same as in the json serialization) for consistency and to avoid ambiguities with what is stored in the related DB table.\n  The schema fields columns `DEFAULT` definition was also updated for new collections to ensure that `NULL` values can't be accidentally inserted.\n\n- Fixed `migrate down` not returning the correct `lastAppliedMigrations()` when the stored migration applied time is in seconds.\n\n- Fixed realtime delete event to be called after the record was deleted from the DB (_including transactions and cascade delete operations_).\n\n- Other minor fixes and improvements (typos and grammar fixes, updated dependencies, removed unnecessary 404 error check in the Admin UI, etc.).\n\n\n## v0.16.10\n\n- Added multiple valued fields (`relation`, `select`, `file`) normalizations to ensure that the zero-default value of a newly created multiple field is applied for already existing data ([#2930](https://github.com/pocketbase/pocketbase/issues/2930)).\n\n\n## v0.16.9\n\n- Register the `eagerRequestInfoCache` middleware only for the internal `api` group routes to avoid conflicts with custom route handlers ([#2914](https://github.com/pocketbase/pocketbase/issues/2914)).\n\n\n## v0.16.8\n\n- Fixed unique validator detailed error message not being returned when camelCase field name is used ([#2868](https://github.com/pocketbase/pocketbase/issues/2868)).\n\n- Updated the index parser to allow no space between the table name and the columns list ([#2864](https://github.com/pocketbase/pocketbase/discussions/2864#discussioncomment-6373736)).\n\n- Updated go deps.\n\n\n## v0.16.7\n\n- Minor optimization for the list/search queries to use `rowid` with the `COUNT` statement when available.\n  _This eliminates the temp B-TREE step when executing the query and for large datasets (eg. 150k) it could have 10x improvement (from ~580ms to ~60ms)._\n\n\n## v0.16.6\n\n- Fixed collection index column sort normalization in the Admin UI ([#2681](https://github.com/pocketbase/pocketbase/pull/2681); thanks @SimonLoir).\n\n- Removed unnecessary admins count in `apis.RequireAdminAuthOnlyIfAny()` middleware ([#2726](https://github.com/pocketbase/pocketbase/pull/2726); thanks @svekko).\n\n- Fixed `multipart/form-data` request bind not populating map array values ([#2763](https://github.com/pocketbase/pocketbase/discussions/2763#discussioncomment-6278902)).\n\n- Upgraded npm and Go dependencies.\n\n\n## v0.16.5\n\n- Fixed the Admin UI serialization of implicit relation display fields ([#2675](https://github.com/pocketbase/pocketbase/issues/2675)).\n\n- Reset the Admin UI sort in case the active sort collection field is renamed or deleted.\n\n\n## v0.16.4\n\n- Fixed the selfupdate command not working on Windows due to missing `.exe` in the extracted binary path ([#2589](https://github.com/pocketbase/pocketbase/discussions/2589)).\n  _Note that the command on Windows will work from v0.16.4+ onwards, meaning that you still will have to update manually one more time to v0.16.4._\n\n- Added `int64`, `int32`, `uint`, `uint64` and `uint32` support when scanning `types.DateTime` ([#2602](https://github.com/pocketbase/pocketbase/discussions/2602))\n\n- Updated dependencies.\n\n\n## v0.16.3\n\n- Fixed schema fields sort not working on Safari/Gnome Web ([#2567](https://github.com/pocketbase/pocketbase/issues/2567)).\n\n- Fixed default `PRAGMA`s not being applied for new connections ([#2570](https://github.com/pocketbase/pocketbase/discussions/2570)).\n\n\n## v0.16.2\n\n- Fixed backups archive not excluding the local `backups` directory on Windows ([#2548](https://github.com/pocketbase/pocketbase/discussions/2548#discussioncomment-5979712)).\n\n- Changed file field to not use `dataTransfer.effectAllowed` when dropping files since it is not reliable and consistent across different OS and browsers ([#2541](https://github.com/pocketbase/pocketbase/issues/2541)).\n\n- Auto register the initial generated snapshot migration to prevent incorrectly reapplying the snapshot on Docker restart ([#2551](https://github.com/pocketbase/pocketbase/discussions/2551)).\n\n- Fixed missing view id field error message typo.\n\n\n## v0.16.1\n\n- Fixed backup restore not working in a container environment when `pb_data` is mounted as volume ([#2519](https://github.com/pocketbase/pocketbase/issues/2519)).\n\n- Fixed Dart SDK realtime API preview example ([#2523](https://github.com/pocketbase/pocketbase/pull/2523); thanks @xFrann).\n\n- Fixed typo in the backups create panel ([#2526](https://github.com/pocketbase/pocketbase/pull/2526); thanks @dschissler).\n\n- Removed unnecessary slice length check in `list.ExistInSlice` ([#2527](https://github.com/pocketbase/pocketbase/pull/2527); thanks @KunalSin9h).\n\n- Avoid mutating the cached request data on OAuth2 user create ([#2535](https://github.com/pocketbase/pocketbase/discussions/2535)).\n\n- Fixed Export Collections \"Download as JSON\" ([#2540](https://github.com/pocketbase/pocketbase/issues/2540)).\n\n- Fixed file field drag and drop not working in Firefox and Safari ([#2541](https://github.com/pocketbase/pocketbase/issues/2541)).\n\n\n## v0.16.0\n\n- Added automated backups (_+ cron rotation_) APIs and UI for the `pb_data` directory.\n  The backups can be also initialized programmatically using `app.CreateBackup(\"backup.zip\")`.\n  There is also experimental restore method - `app.RestoreBackup(\"backup.zip\")` (_currently works only on UNIX systems as it relies on execve_).\n  The backups can be stored locally or in external S3 storage (_it has its own configuration, separate from the file uploads storage filesystem_).\n\n- Added option to limit the returned API fields using the `?fields` query parameter.\n  The \"fields picker\" is applied for `SearchResult.Items` and every other JSON response. For example:\n  ```js\n  // original: {\"id\": \"RECORD_ID\", \"name\": \"abc\", \"description\": \"...something very big...\", \"items\": [\"id1\", \"id2\"], \"expand\": {\"items\": [{\"id\": \"id1\", \"name\": \"test1\"}, {\"id\": \"id2\", \"name\": \"test2\"}]}}\n  // output:   {\"name\": \"abc\", \"expand\": {\"items\": [{\"name\": \"test1\"}, {\"name\": \"test2\"}]}}\n  const result = await pb.collection(\"example\").getOne(\"RECORD_ID\", {\n    expand: \"items\",\n    fields: \"name,expand.items.name\",\n  })\n  ```\n\n- Added new `./pocketbase update` command to selfupdate the prebuilt executable (with option to generate a backup of your `pb_data`).\n\n- Added new `./pocketbase admin` console command:\n  ```sh\n  // creates new admin account\n  ./pocketbase admin create test@example.com 123456890\n\n  // changes the password of an existing admin account\n  ./pocketbase admin update test@example.com 0987654321\n\n  // deletes single admin account (if exists)\n  ./pocketbase admin delete test@example.com\n  ```\n\n- Added `apis.Serve(app, options)` helper to allow starting the API server programmatically.\n\n- Updated the schema fields Admin UI for \"tidier\" fields visualization.\n\n- Updated the logs \"real\" user IP to check for `Fly-Client-IP` header and changed the `X-Forwarded-For` header to use the first non-empty leftmost-ish IP as it the closest to the \"real IP\".\n\n- Added new `tools/archive` helper subpackage for managing archives (_currently works only with zip_).\n\n- Added new `tools/cron` helper subpackage for scheduling task using cron-like syntax (_this eventually may get exported in the future in a separate repo_).\n\n- Added new `Filesystem.List(prefix)` helper to retrieve a flat list with all files under the provided prefix.\n\n- Added new `App.NewBackupsFilesystem()` helper to create a dedicated filesystem abstraction for managing app data backups.\n\n- Added new `App.OnTerminate()` hook (_executed right before app termination, eg. on `SIGTERM` signal_).\n\n- Added `accept` file field attribute with the field MIME types ([#2466](https://github.com/pocketbase/pocketbase/pull/2466); thanks @Nikhil1920).\n\n- Added support for multiple files sort in the Admin UI ([#2445](https://github.com/pocketbase/pocketbase/issues/2445)).\n\n- Added support for multiple relations sort in the Admin UI.\n\n- Added `meta.isNew` to the OAuth2 auth JSON response to indicate a newly OAuth2 created PocketBase user.\n"
        },
        {
          "name": "CHANGELOG_8_15.md",
          "type": "blob",
          "size": 57.62,
          "content": "> List with changes from v0.8.x to v0.15.x.\n> For the most recent versions, please refer to [CHANGELOG.md](./CHANGELOG.md)\n---\n\n## v0.15.3\n\n- Updated the Admin UI to use the latest JS SDK to resolve the `isNew` record field conflict ([#2385](https://github.com/pocketbase/pocketbase/discussions/2385)).\n\n- Fixed `editor` field fullscreen `z-index` ([#2410](https://github.com/pocketbase/pocketbase/issues/2410)).\n\n- Inserts the default app settings as part of the system init migration so that they are always available when accessed from within a user defined migration ([#2423](https://github.com/pocketbase/pocketbase/discussions/2423)).\n\n\n## v0.15.2\n\n- Fixed View query `SELECT DISTINCT` identifiers parsing ([#2349-5706019](https://github.com/pocketbase/pocketbase/discussions/2349#discussioncomment-5706019)).\n\n- Fixed View collection schema incorrectly resolving multiple aliased fields originating from the same field source ([#2349-5707675](https://github.com/pocketbase/pocketbase/discussions/2349#discussioncomment-5707675)).\n\n- Added OAuth2 redirect fallback message to notify the user to go back to the app in case the browser window is not auto closed.\n\n\n## v0.15.1\n\n- Trigger the related `Record` model realtime subscription events on [custom model struct](https://pocketbase.io/docs/custom-models/) save ([#2325](https://github.com/pocketbase/pocketbase/discussions/2325)).\n\n- Fixed `Ctrl + S` in the `editor` field not propagating the quick save shortcut to the parent form.\n\n- Added `⌘ + S` alias for the record quick save shortcut (_I have no Mac device to test it but it should work based on [`e.metaKey` docs](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/metaKey)_).\n\n- Enabled RTL for the TinyMCE editor ([#2327](https://github.com/pocketbase/pocketbase/issues/2327)).\n\n- Reduced the record form vertical layout shifts and slightly improved the rendering speed when loading multiple `relation` fields.\n\n- Enabled Admin UI assets cache.\n\n\n## v0.15.0\n\n- Simplified the OAuth2 authentication flow in a single \"all in one\" call ([#55](https://github.com/pocketbase/pocketbase/issues/55)).\n  Requires JS SDK v0.14.0+ or Dart SDK v0.9.0+.\n  The manual code-token exchange flow is still supported but the SDK method is renamed to `authWithOAuth2Code()` (_to minimize the breaking changes the JS SDK has a function overload that will proxy the existing `authWithOauth2` calls to `authWithOAuth2Code`_).\n  For more details and example, you could check https://pocketbase.io/docs/authentication/#oauth2-integration.\n\n- Added support for protected files ([#215](https://github.com/pocketbase/pocketbase/issues/215)).\n  Requires JS SDK v0.14.0+ or Dart SDK v0.9.0+.\n  It works with a short lived (~5min) file token passed as query param with the file url.\n  For more details and example, you could check https://pocketbase.io/docs/files-handling/#protected-files.\n\n- ⚠️ Fixed typo in `Record.WithUnkownData()` -> `Record.WithUnknownData()`.\n\n- Added simple loose wildcard search term support in the Admin UI.\n\n- Added auto \"draft\" to allow restoring previous record state in case of accidental reload or power outage.\n\n- Added `Ctrl + S` shortcut to save the record changes without closing the panel.\n\n- Added \"drop files\" support for the file upload field.\n\n- Refreshed the OAuth2 Admin UI.\n\n\n## v0.14.5\n\n- Added checks for `nil` hooks in `forms.RecordUpsert` when used with custom `Dao` ([#2277](https://github.com/pocketbase/pocketbase/issues/2277)).\n\n- Fixed unique detailed field error not returned on record create failure ([#2287](https://github.com/pocketbase/pocketbase/discussions/2287)).\n\n\n## v0.14.4\n\n- Fixed concurrent map write pannic on `list.ExistInSliceWithRegex()` cache ([#2272](https://github.com/pocketbase/pocketbase/issues/2272)).\n\n\n## v0.14.3\n\n- Fixed Admin UI Logs `meta` visualization in Firefox ([#2221](https://github.com/pocketbase/pocketbase/issues/2221)).\n\n- Downgraded to v1 of the `aws/aws-sdk-go` package since v2 has compatibility issues with GCS ([#2231](https://github.com/pocketbase/pocketbase/issues/2231)).\n\n- Upgraded the GitHub action to use [min Go 1.20.3](https://github.com/golang/go/issues?q=milestone%3AGo1.20.3+label%3ACherryPickApproved) for the prebuilt executable since it contains some minor `net/http` security fixes.\n\n\n## v0.14.2\n\n- Reverted part of the old `COALESCE` handling as a fallback to support empty string comparison with missing joined relation fields.\n\n\n## v0.14.1\n\n- Fixed realtime events firing before the files upload completion.\n\n- Updated the underlying S3 lib to use `aws-sdk-go-v2` ([#1346](https://github.com/pocketbase/pocketbase/pull/1346); thanks @yuxiang-gao).\n\n- Updated TinyMCE to v6.4.1.\n\n- Updated the godoc of `Dao.Save*` methods.\n\n\n## v0.14.0\n\n- Added _experimental_ Apple OAuth2 integration.\n\n- Added `@request.headers.*` filter rule support.\n\n- Added support for advanced unique constraints and indexes management ([#345](https://github.com/pocketbase/pocketbase/issues/345), [#544](https://github.com/pocketbase/pocketbase/issues/544))\n\n- Simplified the collections fields UI to allow easier and quicker scaffolding of the data schema.\n\n- Deprecated `SchemaField.Unique`. Unique constraints are now managed via indexes.\n  The `Unique` field is a no-op and will be removed in future version.\n\n- Removed the `COALESCE` wrapping from some of the generated filter conditions to make better use of the indexes ([#1939](https://github.com/pocketbase/pocketbase/issues/1939)).\n\n- Detect `id` aliased view columns as single `relation` fields ([#2029](https://github.com/pocketbase/pocketbase/discussions/2029)).\n\n- Optimized single relation lookups.\n\n- Normalized record values on `maxSelect` field option change (`select`, `file`, `relation`).\n  When changing **from single to multiple** all already inserted single values are converted to an array.\n  When changing **from multiple to single** only the last item of the already inserted array items is kept.\n\n- Changed the cost/round factor of bcrypt hash generation from 13 to 12 since several users complained about the slow authWithPassword responses on lower spec hardware.\n  _The change will affect only new users. Depending on the demand, we might make it configurable from the auth options._\n\n- Simplified the default mail template styles to allow more control over the template layout ([#1904](https://github.com/pocketbase/pocketbase/issues/1904)).\n\n- Added option to explicitly set the record id from the Admin UI ([#2118](https://github.com/pocketbase/pocketbase/issues/2118)).\n\n- Added `migrate history-sync` command to clean `_migrations` history table from deleted migration files references.\n\n- Added new fields to the `core.RecordAuthWithOAuth2Event` struct:\n    ```\n    IsNewRecord     bool,          // boolean field indicating whether the OAuth2 action created a new auth record\n    ProviderName    string,        // the name of the OAuth2 provider (eg. \"google\")\n    ProviderClient  auth.Provider, // the loaded Provider client instance\n    ```\n\n- Added CGO linux target for the prebuilt executable.\n\n- ⚠️ Renamed `daos.GetTableColumns()` to `daos.TableColumns()` for consistency with the other Dao table related helpers.\n\n- ⚠️ Renamed `daos.GetTableInfo()` to `daos.TableInfo()` for consistency with the other Dao table related helpers.\n\n- ⚠️ Changed `types.JsonArray` to support specifying a generic type, aka. `types.JsonArray[T]`.\n  If you have previously used `types.JsonArray`, you'll have to update it to `types.JsonArray[any]`.\n\n- ⚠️ Registered the `RemoveTrailingSlash` middleware only for the `/api/*` routes since it is causing issues with subpath file serving endpoints ([#2072](https://github.com/pocketbase/pocketbase/issues/2072)).\n\n- ⚠️ Changed the request logs `method` value to UPPERCASE, eg. \"get\" => \"GET\" ([#1956](https://github.com/pocketbase/pocketbase/discussions/1956)).\n\n- Other minor UI improvements.\n\n\n## v0.13.4\n\n- Removed eager unique collection name check to support lazy validation during bulk import.\n\n\n## v0.13.3\n\n- Fixed view collections import ([#2044](https://github.com/pocketbase/pocketbase/issues/2044)).\n\n- Updated the records picker Admin UI to show properly view collection relations.\n\n\n## v0.13.2\n\n- Fixed Admin UI js error when selecting multiple `file` field as `relation` \"Display fields\" ([#1989](https://github.com/pocketbase/pocketbase/issues/1989)).\n\n\n## v0.13.1\n\n- Added `HEAD` request method support for the `/api/files/:collection/:recordId/:filename` route ([#1976](https://github.com/pocketbase/pocketbase/discussions/1976)).\n\n\n## v0.13.0\n\n- Added new \"View\" collection type allowing you to create a read-only collection from a custom SQL `SELECT` statement. It supports:\n  - aggregations (`COUNT()`, `MIN()`, `MAX()`, `GROUP BY`, etc.)\n  - column and table aliases\n  - CTEs and subquery expressions\n  - auto `relation` fields association\n  - `file` fields proxying (up to 5 linked relations, eg. view1->view2->...->base)\n  - `filter`, `sort` and `expand`\n  - List and View API rules\n\n- Added auto fail/retry (default to 8 attempts) for the `SELECT` queries to gracefully handle the `database is locked` errors ([#1795](https://github.com/pocketbase/pocketbase/discussions/1795#discussioncomment-4882169)).\n  _The default max attempts can be accessed or changed via `Dao.MaxLockRetries`._\n\n- Added default max query execution timeout (30s).\n  _The default timeout can be accessed or changed via `Dao.ModelQueryTimeout`._\n  _For the prebuilt executables it can be also changed via the `--queryTimeout=10` flag._\n\n- Added support for `dao.RecordQuery(collection)` to scan directly the `One()` and `All()` results in `*models.Record` or `[]*models.Record` without the need of explicit `NullStringMap`.\n\n- Added support to overwrite the default file serve headers if an explicit response header is set.\n\n- Added file thumbs when visualizing `relation` display file fields.\n\n- Added \"Min select\" `relation` field option.\n\n- Enabled `process.env` in JS migrations to allow accessing `os.Environ()`.\n\n- Added `UploadedFiles` field to the `RecordCreateEvent` and `RecordUpdateEvent` event structs.\n\n- ⚠️ Moved file upload after the record persistent to allow setting custom record id safely from the `OnModelBeforeCreate` hook.\n\n- ⚠️ Changed `System.GetFile()` to return directly `*blob.Reader` instead of the `io.ReadCloser` interface.\n\n- ⚠️ Changed `To`, `Cc` and `Bcc` of `mailer.Message` to `[]mail.Address` for consistency and to allow multiple recipients and optional name.\n\n    If you are sending custom emails, you'll have to replace:\n    ```go\n    message := &mailer.Message{\n      ...\n\n      // (old) To: mail.Address{Address: \"to@example.com\"}\n      To: []mail.Address{{Address: \"to@example.com\", Name: \"Some optional name\"}},\n\n      // (old) Cc: []string{\"cc@example.com\"}\n      Cc: []mail.Address{{Address: \"cc@example.com\", Name: \"Some optional name\"}},\n\n      // (old) Bcc: []string{\"bcc@example.com\"}\n      Bcc: []mail.Address{{Address: \"bcc@example.com\", Name: \"Some optional name\"}},\n\n      ...\n    }\n    ```\n\n- ⚠️ Refactored the Authentik integration as a more generic \"OpenID Connect\" provider (`oidc`) to support any OIDC provider (Okta, Keycloak, etc.).\n  _If you've previously used Authentik, make sure to rename the provider key in your code to `oidc`._\n  _To enable more than one OIDC provider you can use the additional `oidc2` and `oidc3` provider keys._\n\n- ⚠️ Removed the previously deprecated `Dao.Block()` and `Dao.Continue()` helpers in favor of `Dao.NonconcurrentDB()`.\n\n- Updated the internal redirects to allow easier subpath deployment when behind a reverse proxy.\n\n- Other minor Admin UI improvements.\n\n\n## v0.12.3\n\n- Fixed \"Toggle column\" reactivity when navigating between collections ([#1836](https://github.com/pocketbase/pocketbase/pull/1836)).\n\n- Logged the current datetime on server start ([#1822](https://github.com/pocketbase/pocketbase/issues/1822)).\n\n\n## v0.12.2\n\n- Fixed the \"Clear\" button of the datepicker component not clearing the value ([#1730](https://github.com/pocketbase/pocketbase/discussions/1730)).\n\n- Increased slightly the fields contrast ([#1742](https://github.com/pocketbase/pocketbase/issues/1742)).\n\n- Auto close the multi-select dropdown if \"Max select\" is reached.\n\n\n## v0.12.1\n\n- Fixed js error on empty relation save.\n\n- Fixed `overlay-active` css class not being removed on nested overlay panel close ([#1718](https://github.com/pocketbase/pocketbase/issues/1718)).\n\n- Added the collection name in the page title ([#1711](https://github.com/pocketbase/pocketbase/issues/1711)).\n\n\n## v0.12.0\n\n- Refactored the relation picker UI to allow server-side search, sort, create, update and delete of relation records ([#976](https://github.com/pocketbase/pocketbase/issues/976)).\n\n- Added new `RelationOptions.DisplayFields` option to specify custom relation field(s) visualization in the Admin UI.\n\n- Added Authentik OAuth2 provider ([#1377](https://github.com/pocketbase/pocketbase/pull/1377); thanks @pr0ton11).\n\n- Added LiveChat OAuth2 provider ([#1573](https://github.com/pocketbase/pocketbase/pull/1573); thanks @mariosant).\n\n- Added Gitea OAuth2 provider ([#1643](https://github.com/pocketbase/pocketbase/pull/1643); thanks @hlanderdev).\n\n- Added PDF file previews ([#1548](https://github.com/pocketbase/pocketbase/pull/1548); thanks @mjadobson).\n\n- Added video and audio file previews.\n\n- Added rich text editor (`editor`) field for HTML content based on TinyMCE ([#370](https://github.com/pocketbase/pocketbase/issues/370)).\n  _Currently the new field doesn't have any configuration options or validations but this may change in the future depending on how devs ended up using it._\n\n- Added \"Duplicate\" Collection and Record options in the Admin UI ([#1656](https://github.com/pocketbase/pocketbase/issues/1656)).\n\n- Added `filesystem.GetFile()` helper to read files through the FileSystem abstraction ([#1578](https://github.com/pocketbase/pocketbase/pull/1578); thanks @avarabyeu).\n\n- Added new auth event hooks for finer control and more advanced auth scenarios handling:\n\n  ```go\n  // auth record\n  OnRecordBeforeAuthWithPasswordRequest()\n  OnRecordAfterAuthWithPasswordRequest()\n  OnRecordBeforeAuthWithOAuth2Request()\n  OnRecordAfterAuthWithOAuth2Request()\n  OnRecordBeforeAuthRefreshRequest()\n  OnRecordAfterAuthRefreshRequest()\n\n  // admin\n  OnAdminBeforeAuthWithPasswordRequest()\n  OnAdminAfterAuthWithPasswordRequest()\n  OnAdminBeforeAuthRefreshRequest()\n  OnAdminAfterAuthRefreshRequest()\n  OnAdminBeforeRequestPasswordResetRequest()\n  OnAdminAfterRequestPasswordResetRequest()\n  OnAdminBeforeConfirmPasswordResetRequest()\n  OnAdminAfterConfirmPasswordResetRequest()\n  ```\n\n- Added `models.Record.CleanCopy()` helper that creates a new record copy with only the latest data state of the existing one and all other options reset to their defaults.\n\n- Added new helper `apis.RecordAuthResponse(app, httpContext, record, meta)` to return a standard Record auth API response ([#1623](https://github.com/pocketbase/pocketbase/issues/1623)).\n\n- Refactored `models.Record` expand and data change operations to be concurrent safe.\n\n- Refactored all `forms` Submit interceptors to use a generic data type as their payload.\n\n- Added several `store.Store` helpers:\n  ```go\n  store.Reset(newData map[string]T)\n  store.Length() int\n  store.GetAll() map[string]T\n  ```\n\n- Added \"tags\" support for all Record and Model related event hooks.\n\n    The \"tags\" allow registering event handlers that will be called only on matching table name(s) or colleciton id(s)/name(s).\n    For example:\n    ```go\n    app.OnRecordBeforeCreateRequest(\"articles\").Add(func(e *core.RecordCreateEvent) error {\n      // called only on \"articles\" record creation\n      log.Println(e.Record)\n      return nil\n    })\n    ```\n    For all those event hooks `*hook.Hook` was replaced with `*hooks.TaggedHook`, but the hook methods signatures are the same so it should behave as it was previously if no tags were specified.\n\n- ⚠️ Fixed the `json` field **string** value normalization ([#1703](https://github.com/pocketbase/pocketbase/issues/1703)).\n\n    In order to support seamlessly both `application/json` and `multipart/form-data`\n    requests, the following normalization rules are applied if the `json` field is a\n    **plain string value**:\n\n    - \"true\" is converted to the json `true`\n    - \"false\" is converted to the json `false`\n    - \"null\" is converted to the json `null`\n    - \"[1,2,3]\" is converted to the json `[1,2,3]`\n    - \"{\\\"a\\\":1,\\\"b\\\":2}\" is converted to the json `{\"a\":1,\"b\":2}`\n    - numeric strings are converted to json number\n    - double quoted strings are left as they are (aka. without normalizations)\n    - any other string (empty string too) is double quoted\n\n    Additionally, the \"Nonempty\" `json` field constraint now checks for `null`, `[]`, `{}` and `\"\"` (empty string).\n\n- Added `aria-label` to some of the buttons in the Admin UI for better accessibility ([#1702](https://github.com/pocketbase/pocketbase/pull/1702); thanks @ndarilek).\n\n- Updated the filename extension checks in the Admin UI to be case-insensitive ([#1707](https://github.com/pocketbase/pocketbase/pull/1707); thanks @hungcrush).\n\n- Other minor improvements (more detailed API file upload errors, UI optimizations, docs improvements, etc.)\n\n\n## v0.11.4\n\n- Fixed cascade delete for rel records with the same id as the main record ([#1689](https://github.com/pocketbase/pocketbase/issues/1689)).\n\n\n## v0.11.3\n\n- Fix realtime API panic on concurrent clients iteration ([#1628](https://github.com/pocketbase/pocketbase/issues/1628))\n\n  - `app.SubscriptionsBroker().Clients()` now returns a shallow copy of the underlying map.\n\n  - Added `Discard()` and `IsDiscarded()` helper methods to the `subscriptions.Client` interface.\n\n  - Slow clients should no longer \"block\" the main action completion.\n\n\n## v0.11.2\n\n- Fixed `fs.DeleteByPrefix()` hang on invalid S3 settings ([#1575](https://github.com/pocketbase/pocketbase/discussions/1575#discussioncomment-4661089)).\n\n- Updated file(s) delete to run in the background on record/collection delete to avoid blocking the delete model transaction.\n  _Currently the cascade files delete operation is treated as \"non-critical\" and in case of an error it is just logged during debug._\n  _This will be improved in the near future with the planned async job queue implementation._\n\n\n## v0.11.1\n\n- Unescaped path parameter values ([#1552](https://github.com/pocketbase/pocketbase/issues/1552)).\n\n\n## v0.11.0\n\n- Added `+` and `-` body field modifiers for `number`, `files`, `select` and `relation` fields.\n  ```js\n  {\n    // oldValue + 2\n    \"someNumber+\": 2,\n\n    // oldValue + [\"id1\", \"id2\"] - [\"id3\"]\n    \"someRelation+\": [\"id1\", \"id2\"],\n    \"someRelation-\": [\"id3\"],\n\n    // delete single file by its name (file fields supports only the \"-\" modifier!)\n    \"someFile-\": \"filename.png\",\n  }\n  ```\n  _Note1: `@request.data.someField` will contain the final resolved value._\n\n  _Note2: The old index (`\"field.0\":null`) and filename (`\"field.filename.png\":null`) based suffixed syntax for deleting files is still supported._\n\n- ⚠️ Added support for multi-match/match-all request data and collection multi-valued fields (`select`, `relation`) conditions.\n  If you want a \"at least one of\" type of condition, you can prefix the operator with `?`.\n  ```js\n  // for each someRelA.someRelB record require the \"status\" field to be \"active\"\n  someRelA.someRelB.status = \"active\"\n\n  // OR for \"at least one of\" condition\n  someRelA.someRelB.status ?= \"active\"\n  ```\n  _**Note: Previously the behavior for multi-valued fields was as the \"at least one of\" type.\n  The release comes with system db migration that will update your existing API rules (if needed) to preserve the compatibility.\n  If you have multi-select or multi-relation filter checks in your client-side code and want to preserve the old behavior, you'll have to prefix with `?` your operators.**_\n\n- Added support for querying `@request.data.someRelField.*` relation fields.\n  ```js\n  // example submitted data: {\"someRel\": \"REL_RECORD_ID\"}\n  @request.data.someRel.status = \"active\"\n  ```\n\n- Added `:isset` modifier for the static request data fields.\n  ```js\n  // prevent changing the \"role\" field\n  @request.data.role:isset = false\n  ```\n\n- Added `:length` modifier for the arrayable request data and collection fields (`select`, `file`, `relation`).\n  ```js\n  // example submitted data: {\"someSelectField\": [\"val1\", \"val2\"]}\n  @request.data.someSelectField:length = 2\n\n  // check existing record field length\n  someSelectField:length = 2\n  ```\n\n- Added `:each` modifier support for the multi-`select` request data and collection field.\n  ```js\n  // check if all selected rows has \"pb_\" prefix\n  roles:each ~ 'pb_%'\n  ```\n\n- Improved the Admin UI filters autocomplete.\n\n- Added `@random` sort key for `RANDOM()` sorted list results.\n\n- Added Strava OAuth2 provider ([#1443](https://github.com/pocketbase/pocketbase/pull/1443); thanks @szsascha).\n\n- Added Gitee OAuth2 provider ([#1448](https://github.com/pocketbase/pocketbase/pull/1448); thanks @yuxiang-gao).\n\n- Added IME status check to the textarea keydown handler ([#1370](https://github.com/pocketbase/pocketbase/pull/1370); thanks @tenthree).\n\n- Added `filesystem.NewFileFromBytes()` helper ([#1420](https://github.com/pocketbase/pocketbase/pull/1420); thanks @dschissler).\n\n- Added support for reordering uploaded multiple files.\n\n- Added `webp` to the default images mime type presets list ([#1469](https://github.com/pocketbase/pocketbase/pull/1469); thanks @khairulhaaziq).\n\n- Added the OAuth2 refresh token to the auth meta response ([#1487](https://github.com/pocketbase/pocketbase/issues/1487)).\n\n- Fixed the text wrapping in the Admin UI listing searchbar ([#1416](https://github.com/pocketbase/pocketbase/issues/1416)).\n\n- Fixed number field value output in the records listing ([#1447](https://github.com/pocketbase/pocketbase/issues/1447)).\n\n- Fixed duplicated settings view pages caused by uncompleted transitions ([#1498](https://github.com/pocketbase/pocketbase/issues/1498)).\n\n- Allowed sending `Authorization` header with the `/auth-with-password` record and admin login requests ([#1494](https://github.com/pocketbase/pocketbase/discussions/1494)).\n\n- `migrate down` now reverts migrations in the applied order.\n\n- Added additional list-bucket check in the S3 config test API.\n\n- Other minor improvements.\n\n\n## v0.10.4\n\n- Fixed `Record.MergeExpand` panic when the main model expand map is not initialized ([#1365](https://github.com/pocketbase/pocketbase/issues/1365)).\n\n\n## v0.10.3\n\n- ⚠️ Renamed the metadata key `original_filename` to `original-filename` due to an S3 file upload error caused by the underscore character ([#1343](https://github.com/pocketbase/pocketbase/pull/1343); thanks @yuxiang-gao).\n\n- Fixed request verification docs api url ([#1332](https://github.com/pocketbase/pocketbase/pull/1332); thanks @JoyMajumdar2001)\n\n- Excluded `collectionId` and `collectionName` from the displayable relation props list ([1322](https://github.com/pocketbase/pocketbase/issues/1322); thanks @dhall2).\n\n\n## v0.10.2\n\n- Fixed nested multiple expands with shared path ([#586](https://github.com/pocketbase/pocketbase/issues/586#issuecomment-1357784227)).\n  A new helper method `models.Record.MergeExpand(map[string]any)` was also added to simplify the expand handling and unit testing.\n\n\n## v0.10.1\n\n- Fixed nested transactions deadlock when authenticating with OAuth2 ([#1291](https://github.com/pocketbase/pocketbase/issues/1291)).\n\n\n## v0.10.0\n\n- Added `/api/health` endpoint (thanks @MarvinJWendt).\n\n- Added support for SMTP `LOGIN` auth for Microsoft/Outlook and other providers that don't support the `PLAIN` auth method ([#1217](https://github.com/pocketbase/pocketbase/discussions/1217#discussioncomment-4387970)).\n\n- Reduced memory consumption (you can expect ~20% less allocated memory).\n\n- Added support for split (concurrent and nonconcurrent) DB connections pool increasing even further the concurrent throughput without blocking reads on heavy write load.\n\n- Improved record references delete performance.\n\n- Removed the unnecessary parenthesis in the generated filter SQL query, reducing the \"_parse stack overflow_\" errors.\n\n- Fixed `~` expressions backslash literal escaping ([#1231](https://github.com/pocketbase/pocketbase/discussions/1231)).\n\n- Refactored the `core.app.Bootstrap()` to be called before starting the cobra commands ([#1267](https://github.com/pocketbase/pocketbase/discussions/1267)).\n\n- ⚠️ Changed `pocketbase.NewWithConfig(config Config)` to `pocketbase.NewWithConfig(config *Config)` and added 4 new config settings:\n  ```go\n  DataMaxOpenConns int // default to core.DefaultDataMaxOpenConns\n  DataMaxIdleConns int // default to core.DefaultDataMaxIdleConns\n  LogsMaxOpenConns int // default to core.DefaultLogsMaxOpenConns\n  LogsMaxIdleConns int // default to core.DefaultLogsMaxIdleConns\n  ```\n\n- Added new helper method `core.App.IsBootstrapped()` to check the current app bootstrap state.\n\n- ⚠️ Changed `core.NewBaseApp(dir, encryptionEnv, isDebug)` to `NewBaseApp(config *BaseAppConfig)`.\n\n- ⚠️ Removed `rest.UploadedFile` struct (see below `filesystem.File`).\n\n- Added generic file resource struct that allows loading and uploading file content from\n  different sources (at the moment multipart/form-data requests and from the local filesystem).\n  ```\n  filesystem.File{}\n  filesystem.NewFileFromPath(path)\n  filesystem.NewFileFromMultipart(multipartHeader)\n  filesystem/System.UploadFile(file)\n  ```\n\n- Refactored `forms.RecordUpsert` to allow more easily loading and removing files programmatically.\n  ```\n  forms.RecordUpsert.AddFiles(key, filesystem.File...) // add new filesystem.File to the form for upload\n  forms.RecordUpsert.RemoveFiles(key, filenames...)     // marks the filenames for deletion\n  ```\n\n- Trigger the `password` validators if any of the others password change fields is set.\n\n\n## v0.9.2\n\n- Fixed field column name conflict on record deletion ([#1220](https://github.com/pocketbase/pocketbase/discussions/1220)).\n\n\n## v0.9.1\n\n- Moved the record file upload and delete out of the db transaction to minimize the locking times.\n\n- Added `Dao` query semaphore and base fail/retry handling to improve the concurrent writes throughput ([#1187](https://github.com/pocketbase/pocketbase/issues/1187)).\n\n- Fixed records cascade deletion when there are \"A<->B\" relation references.\n\n- Replaced `c.QueryString()` with `c.QueryParams().Encode()` to allow loading middleware modified query parameters in the default crud actions ([#1210](https://github.com/pocketbase/pocketbase/discussions/1210)).\n\n- Fixed the datetime field not triggering the `onChange` event on manual field edit and added a \"Clear\" button ([#1219](https://github.com/pocketbase/pocketbase/issues/1219)).\n\n- Updated the GitHub goreleaser action to use go 1.19.4 since it comes with [some security fixes](https://github.com/golang/go/issues?q=milestone%3AGo1.19.4+label%3ACherryPickApproved).\n\n\n## v0.9.0\n\n- Fixed concurrent multi-relation cascade update/delete ([#1138](https://github.com/pocketbase/pocketbase/issues/1138)).\n\n- Added the raw OAuth2 user data (`meta.rawUser`) and OAuth2 access token (`meta.accessToken`) to the auth response ([#654](https://github.com/pocketbase/pocketbase/discussions/654)).\n\n- `BaseModel.UnmarkAsNew()` method was renamed to `BaseModel.MarkAsNotNew()`.\n  Additionally, to simplify the insert model queries with custom IDs, it is no longer required to call `MarkAsNew()` for manually initialized models with set ID since now this is the default state.\n  When the model is populated with values from the database (eg. after row `Scan`) it will be marked automatically as \"not new\".\n\n- Added `Record.OriginalCopy()` method that returns a new `Record` copy populated with the initially loaded record data (useful if you want to compare old and new field values).\n\n- Added new event hooks:\n  ```go\n  app.OnBeforeBootstrap()\n  app.OnAfterBootstrap()\n  app.OnBeforeApiError()\n  app.OnAfterApiError()\n  app.OnRealtimeDisconnectRequest()\n  app.OnRealtimeBeforeMessageSend()\n  app.OnRealtimeAfterMessageSend()\n  app.OnRecordBeforeRequestPasswordResetRequest()\n  app.OnRecordAfterRequestPasswordResetRequest()\n  app.OnRecordBeforeConfirmPasswordResetRequest()\n  app.OnRecordAfterConfirmPasswordResetRequest()\n  app.OnRecordBeforeRequestVerificationRequest()\n  app.OnRecordAfterRequestVerificationRequest()\n  app.OnRecordBeforeConfirmVerificationRequest()\n  app.OnRecordAfterConfirmVerificationRequest()\n  app.OnRecordBeforeRequestEmailChangeRequest()\n  app.OnRecordAfterRequestEmailChangeRequest()\n  app.OnRecordBeforeConfirmEmailChangeRequest()\n  app.OnRecordAfterConfirmEmailChangeRequest()\n  ```\n\n- The original uploaded file name is now stored as metadata under the `original_filename` key. It could be accessed via:\n  ```go\n  fs, _ := app.NewFilesystem()\n  defer fs.Close()\n\n  attrs, _ := fs.Attributes(fikeKey)\n  attrs.Metadata[\"original_name\"]\n  ```\n\n- Added support for `Partial/Range` file requests ([#1125](https://github.com/pocketbase/pocketbase/issues/1125)).\n  This is a minor breaking change if you are using `filesystem.Serve` (eg. as part of a custom `OnFileDownloadRequest` hook):\n  ```go\n  // old\n  filesystem.Serve(res, e.ServedPath, e.ServedName)\n\n  // new\n  filesystem.Serve(res, req, e.ServedPath, e.ServedName)\n  ```\n\n- Refactored the `migrate` command to support **external JavaScript migration files** using an embedded JS interpreter ([goja](https://github.com/dop251/goja)).\n  This allow writing custom migration scripts such as programmatically creating collections,\n  initializing default settings, running data imports, etc., with a JavaScript API very similar to the Go one (_more documentation will be available soon_).\n\n  The `migrate` command is available by default for the prebuilt executable,\n  but if you use PocketBase as framework you need register it manually:\n  ```go\n  migrationsDir := \"\" // default to \"pb_migrations\" (for js) and \"migrations\" (for go)\n\n  // load js files if you want to allow loading external JavaScript migrations\n  jsvm.MustRegisterMigrations(app, &jsvm.MigrationsOptions{\n    Dir: migrationsDir,\n  })\n\n  // register the `migrate` command\n  migratecmd.MustRegister(app, app.RootCmd, &migratecmd.Options{\n    TemplateLang: migratecmd.TemplateLangJS, // or migratecmd.TemplateLangGo (default)\n    Dir:          migrationsDir,\n    Automigrate:  true,\n  })\n  ```\n\n  **The refactoring also comes with automigrations support.**\n\n  If `Automigrate` is enabled (`true` by default for the prebuilt executable; can be disabled with `--automigrate=0`),\n  PocketBase will generate seamlessly in the background JS (or Go) migration file with your collection changes.\n  **The directory with the JS migrations can be committed to your git repo.**\n  All migrations (Go and JS) are automatically executed on server start.\n  Also note that the auto generated migrations are granural (in contrast to the `migrate collections` snapshot command)\n  and allow multiple developers to do changes on the collections independently (even editing the same collection) miniziming the eventual merge conflicts.\n  Here is a sample JS migration file that will be generated if you for example edit a single collection name:\n  ```js\n  // pb_migrations/1669663597_updated_posts_old.js\n  migrate((db) => {\n    // up\n    const dao = new Dao(db)\n    const collection = dao.findCollectionByNameOrId(\"lngf8rb3dqu86r3\")\n    collection.name = \"posts_new\"\n    return dao.saveCollection(collection)\n  }, (db) => {\n    // down\n    const dao = new Dao(db)\n    const collection = dao.findCollectionByNameOrId(\"lngf8rb3dqu86r3\")\n    collection.name = \"posts_old\"\n    return dao.saveCollection(collection)\n  })\n  ```\n\n- Added new `Dao` helpers to make it easier fetching and updating the app settings from a migration:\n  ```go\n  dao.FindSettings([optEncryptionKey])\n  dao.SaveSettings(newSettings, [optEncryptionKey])\n  ```\n\n- Moved `core.Settings` to `models/settings.Settings`:\n  ```\n  core.Settings{}           -> settings.Settings{}\n  core.NewSettings()        -> settings.New()\n  core.MetaConfig{}         -> settings.MetaConfig{}\n  core.LogsConfig{}         -> settings.LogsConfig{}\n  core.SmtpConfig{}         -> settings.SmtpConfig{}\n  core.S3Config{}           -> settings.S3Config{}\n  core.TokenConfig{}        -> settings.TokenConfig{}\n  core.AuthProviderConfig{} -> settings.AuthProviderConfig{}\n  ```\n\n- Changed the `mailer.Mailer` interface (**minor breaking if you are sending custom emails**):\n  ```go\n  // Old:\n  app.NewMailClient().Send(from, to, subject, html, attachments?)\n\n  // New:\n  app.NewMailClient().Send(&mailer.Message{\n    From: from,\n    To: to,\n    Subject: subject,\n    HTML: html,\n    Attachments: attachments,\n    // new configurable fields\n    Bcc: []string{\"bcc1@example.com\", \"bcc2@example.com\"},\n    Cc: []string{\"cc1@example.com\", \"cc2@example.com\"},\n    Headers: map[string]string{\"Custom-Header\": \"test\"},\n    Text: \"custom plain text version\",\n  })\n  ```\n  The new `*mailer.Message` struct is also now a member of the `MailerRecordEvent` and `MailerAdminEvent` events.\n\n- Other minor UI fixes and improvements\n\n\n## v0.8.0\n\n**⚠️ This release contains breaking changes and requires some manual migration steps!**\n\nThe biggest change is the merge of the `User` models and the `profiles` collection per [#376](https://github.com/pocketbase/pocketbase/issues/376).\nThere is no longer `user` type field and the users are just an \"auth\" collection (we now support **collection types**, currently only \"base\" and \"auth\").\nThis should simplify the users management and at the same time allow us to have unlimited multiple \"auth\" collections each with their own custom fields and authentication options (eg. staff, client, etc.).\n\nIn addition to the `Users` and `profiles` merge, this release comes with several other improvements:\n\n- Added indirect expand support [#312](https://github.com/pocketbase/pocketbase/issues/312#issuecomment-1242893496).\n\n- The `json` field type now supports filtering and sorting [#423](https://github.com/pocketbase/pocketbase/issues/423#issuecomment-1258302125).\n\n- The `relation` field now allows unlimited `maxSelect` (aka. without upper limit).\n\n- Added support for combined email/username + password authentication (see below `authWithPassword()`).\n\n- Added support for full _\"manager-subordinate\"_ users management, including a special API rule to allow directly changing system fields like email, password, etc. without requiring `oldPassword` or other user verification.\n\n- Enabled OAuth2 account linking on authorized request from the same auth collection (_this is useful for example if the OAuth2 provider doesn't return an email and you want to associate it with the current logged in user_).\n\n- Added option to toggle the record columns visibility from the table listing.\n\n- Added support for collection schema fields reordering.\n\n- Added several new OAuth2 providers (Microsoft Azure AD, Spotify, Twitch, Kakao).\n\n- Improved memory usage on large file uploads [#835](https://github.com/pocketbase/pocketbase/discussions/835).\n\n- More detailed API preview docs and site documentation (the repo is located at https://github.com/pocketbase/site).\n\n- Other minor performance improvements (mostly related to the search apis).\n\n### Migrate from v0.7.x\n\n- **[Data](#data)**\n- **[SDKs](#sdks)**\n- **[API](#api)**\n- **[Internals](#internals)**\n\n#### Data\n\nThe merge of users and profiles comes with several required db changes.\nThe easiest way to apply them is to use the new temporary `upgrade` command:\n\n```sh\n# make sure to have a copy of your pb_data in case something fails\ncp -r ./pb_data ./pb_data_backup\n\n# run the upgrade command\n./pocketbase08 upgrade\n\n# start the application as usual\n./pocketbase08 serve\n```\n\nThe upgrade command:\n\n- Creates a new `users` collection with merged fields from the `_users` table and the `profiles` collection.\n  The new user records will have the ids from the `profiles` collection.\n- Changes all `user` type fields to `relation` and update the references to point to the new user ids.\n- Renames all `@collection.profiles.*`, `@request.user.*` and `@request.user.profile.*` filters to `@collection.users.*` and `@request.auth.*`.\n- Appends `2` to all **schema field names** and **api filter rules** that conflicts with the new system reserved ones:\n  ```\n  collectionId   => collectionId2\n  collectionName => collectionName2\n  expand         => expand2\n\n  // only for the \"profiles\" collection fields:\n  username               => username2\n  email                  => email2\n  emailVisibility        => emailVisibility2\n  verified               => verified2\n  tokenKey               => tokenKey2\n  passwordHash           => passwordHash2\n  lastResetSentAt        => lastResetSentAt2\n  lastVerificationSentAt => lastVerificationSentAt2\n  ```\n\n#### SDKs\n\nPlease check the individual SDK package changelog and apply the necessary changes in your code:\n\n- [**JavaScript SDK changelog**](https://github.com/pocketbase/js-sdk/blob/master/CHANGELOG.md)\n  ```sh\n  npm install pocketbase@latest --save\n  ```\n\n- [**Dart SDK changelog**](https://github.com/pocketbase/dart-sdk/blob/master/CHANGELOG.md)\n\n  ```sh\n  dart pub add pocketbase:^0.5.0\n  # or with Flutter:\n  flutter pub add pocketbase:^0.5.0\n  ```\n\n#### API\n\n> _**You don't have to read this if you are using an official SDK.**_\n\n- The authorization schema is no longer necessary. Now it is auto detected from the JWT token payload:\n  <table class=\"d-table\" width=\"100%\">\n    <tr>\n      <th>Old</th>\n      <th>New</th>\n    </tr>\n    <tr valign=\"top\">\n      <td>Authorization: Admin TOKEN</td>\n      <td>Authorization: TOKEN</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>Authorization: User TOKEN</td>\n      <td>Authorization: TOKEN</td>\n    </tr>\n  </table>\n\n- All datetime stings are now returned in ISO8601 format - with _Z_ suffix and space as separator between the date and time part:\n  <table class=\"d-table\" width=\"100%\">\n    <tr>\n      <th>Old</th>\n      <th>New</th>\n    </tr>\n    <tr valign=\"top\">\n      <td>2022-01-02 03:04:05.678</td>\n      <td>2022-01-02 03:04:05.678<strong>Z</strong></td>\n    </tr>\n  </table>\n\n- Removed the `@` prefix from the system record fields for easier json parsing:\n  <table class=\"d-table\" width=\"100%\">\n    <tr>\n      <th>Old</th>\n      <th>New</th>\n    </tr>\n    <tr valign=\"top\">\n      <td><strong>@</strong>collectionId</td>\n      <td>collectionId</td>\n    </tr>\n    <tr valign=\"top\">\n      <td><strong>@</strong>collectionName</td>\n      <td>collectionName</td>\n    </tr>\n    <tr valign=\"top\">\n      <td><strong>@</strong>expand</td>\n      <td>expand</td>\n    </tr>\n  </table>\n\n- All users api handlers are moved under `/api/collections/:collection/`:\n  <table class=\"d-table\" width=\"100%\">\n    <tr>\n      <th>Old</th>\n      <th>New</th>\n    </tr>\n    <tr valign=\"top\">\n      <td>\n        <em>GET /api/<strong>users</strong>/auth-methods</em>\n      </td>\n      <td>\n        <em>GET /api/<strong>collections/:collection</strong>/auth-methods</em>\n      </td>\n    </tr>\n    <tr valign=\"top\">\n      <td>\n        <em>POST /api/<strong>users/refresh</strong></em>\n      </td>\n      <td>\n        <em>POST /api/<strong>collections/:collection/auth-refresh</strong></em>\n      </td>\n    </tr>\n    <tr valign=\"top\">\n      <td><em>POST /api/<strong>users/auth-via-oauth2</strong></em></td>\n      <td>\n        <em>POST /api/<strong>collections/:collection/auth-with-oauth2</strong></em>\n        <br/>\n        <em>You can now also pass optional <code>createData</code> object on OAuth2 sign-up.</em>\n        <br/>\n        <em>Also please note that now required user/profile fields are properly validated when creating new auth model on OAuth2 sign-up.</em>\n      </td>\n    </tr>\n    <tr valign=\"top\">\n      <td><em>POST /api/<strong>users/auth-via-email</strong></em></td>\n      <td>\n        <em>POST /api/<strong>collections/:collection/auth-with-password</strong></em>\n        <br/>\n        <em>Handles username/email + password authentication.</em>\n        <br/>\n        <code>{\"identity\": \"usernameOrEmail\", \"password\": \"123456\"}</code>\n      </td>\n    </tr>\n    <tr valign=\"top\">\n      <td><em>POST /api/<strong>users</strong>/request-password-reset</em></td>\n      <td><em>POST /api/<strong>collections/:collection</strong>/request-password-reset</em></td>\n    </tr>\n    <tr valign=\"top\">\n      <td><em>POST /api/<strong>users</strong>/confirm-password-reset</em></td>\n      <td><em>POST /api/<strong>collections/:collection</strong>/confirm-password-reset</em></td>\n    </tr>\n    <tr valign=\"top\">\n      <td><em>POST /api/<strong>users</strong>/request-verification</em></td>\n      <td><em>POST /api/<strong>collections/:collection</strong>/request-verification</em></td>\n    </tr>\n    <tr valign=\"top\">\n      <td><em>POST /api/<strong>users</strong>/confirm-verification</em></td>\n      <td><em>POST /api/<strong>collections/:collection</strong>/confirm-verification</em></td>\n    </tr>\n    <tr valign=\"top\">\n      <td><em>POST /api/<strong>users</strong>/request-email-change</em></td>\n      <td><em>POST /api/<strong>collections/:collection</strong>/request-email-change</em></td>\n    </tr>\n    <tr valign=\"top\">\n      <td><em>POST /api/<strong>users</strong>/confirm-email-change</em></td>\n      <td><em>POST /api/<strong>collections/:collection</strong>/confirm-email-change</em></td>\n    </tr>\n    <tr valign=\"top\">\n      <td><em>GET /api/<strong>users</strong></em></td>\n      <td><em>GET /api/<strong>collections/:collection/records</strong></em></td>\n    </tr>\n    <tr valign=\"top\">\n      <td><em>GET /api/<strong>users</strong>/:id</em></td>\n      <td><em>GET /api/<strong>collections/:collection/records</strong>/:id</em></td>\n    </tr>\n    <tr valign=\"top\">\n      <td><em>POST /api/<strong>users</strong></em></td>\n      <td><em>POST /api/<strong>collections/:collection/records</strong></em></td>\n    </tr>\n    <tr valign=\"top\">\n      <td><em>PATCH /api/<strong>users</strong>/:id</em></td>\n      <td><em>PATCH /api/<strong>collections/:collection/records</strong>/:id</em></td>\n    </tr>\n    <tr valign=\"top\">\n      <td><em>DELETE /api/<strong>users</strong>/:id</em></td>\n      <td><em>DELETE /api/<strong>collections/:collection/records</strong>/:id</em></td>\n    </tr>\n    <tr valign=\"top\">\n      <td><em>GET /api/<strong>users</strong>/:id/external-auths</em></td>\n      <td><em>GET /api/<strong>collections/:collection/records</strong>/:id/external-auths</em></td>\n    </tr>\n    <tr valign=\"top\">\n      <td><em>DELETE /api/<strong>users</strong>/:id/external-auths/:provider</em></td>\n      <td><em>DELETE /api/<strong>collections/:collection/records</strong>/:id/external-auths/:provider</em></td>\n    </tr>\n  </table>\n\n  _In relation to the above changes, the `user` property in the auth response is renamed to `record`._\n\n- The admins api was also updated for consistency with the users api changes:\n  <table class=\"d-table\" width=\"100%\">\n    <tr>\n      <th>Old</th>\n      <th>New</th>\n    </tr>\n    <tr valign=\"top\">\n      <td>\n        <em>POST /api/admins/<strong>refresh</strong></em>\n      </td>\n      <td>\n        <em>POST /api/admins/<strong>auth-refresh</strong></em>\n      </td>\n    </tr>\n    <tr valign=\"top\">\n      <td><em>POST /api/admins/<strong>auth-via-email</strong></em></td>\n      <td>\n        <em>POST /api/admins/<strong>auth-with-password</strong></em>\n        <br />\n        <code>{\"identity\": \"test@example.com\", \"password\": \"123456\"}</code>\n        <br />\n        (notice that the <code>email</code> body field was renamed to <code>identity</code>)\n      </td>\n    </tr>\n  </table>\n\n- To prevent confusion with the auth method responses, the following endpoints now returns 204 with empty body (previously 200 with token and auth model):\n  ```\n  POST /api/admins/confirm-password-reset\n  POST /api/collections/:collection/confirm-password-reset\n  POST /api/collections/:collection/confirm-verification\n  POST /api/collections/:collection/confirm-email-change\n  ```\n\n- Renamed the \"user\" related settings fields returned by `GET /api/settings`:\n  <table class=\"d-table\" width=\"100%\">\n    <tr>\n      <th>Old</th>\n      <th>New</th>\n    </tr>\n    <tr valign=\"top\">\n      <td><strong>user</strong>AuthToken</td>\n      <td><strong>record</strong>AuthToken</td>\n    </tr>\n    <tr valign=\"top\">\n      <td><strong>user</strong>PasswordResetToken</td>\n      <td><strong>record</strong>PasswordResetToken</td>\n    </tr>\n    <tr valign=\"top\">\n      <td><strong>user</strong>EmailChangeToken</td>\n      <td><strong>record</strong>EmailChangeToken</td>\n    </tr>\n    <tr valign=\"top\">\n      <td><strong>user</strong>VerificationToken</td>\n      <td><strong>record</strong>VerificationToken</td>\n    </tr>\n  </table>\n\n#### Internals\n\n> _**You don't have to read this if you are not using PocketBase as framework.**_\n\n- Removed `forms.New*WithConfig()` factories to minimize ambiguities.\n  If you need to pass a transaction Dao you can use the new `SetDao(dao)` method available to the form instances.\n\n- `forms.RecordUpsert.LoadData(data map[string]any)` now can bulk load external data from a map.\n  To load data from a request instance, you could use `forms.RecordUpsert.LoadRequest(r, optKeysPrefix = \"\")`.\n\n- `schema.RelationOptions.MaxSelect` has new type `*int` (_you can use the new `types.Pointer(123)` helper to assign pointer values_).\n\n- Renamed the constant `apis.ContextUserKey` (_\"user\"_) to `apis.ContextAuthRecordKey` (_\"authRecord\"_).\n\n- Replaced user related middlewares with their auth record alternative:\n  <table class=\"d-table\" width=\"100%\">\n    <tr>\n      <th>Old</th>\n      <th>New</th>\n    </tr>\n    <tr valign=\"top\">\n      <td>apis.Require<strong>User</strong>Auth()</td>\n      <td>apis.Require<strong>Record</strong>Auth(<strong>optCollectionNames ...string</strong>)</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>apis.RequireAdminOr<strong>User</strong>Auth()</td>\n      <td>apis.RequireAdminOr<strong>Record</strong>Auth(<strong>optCollectionNames ...string</strong>)</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>N/A</td>\n      <td>\n        <strong>RequireSameContextRecordAuth()</strong>\n        <br/>\n        <em>(requires the auth record to be from the same context collection)</em>\n      </td>\n    </tr>\n  </table>\n\n- The following record Dao helpers now uses the collection id or name instead of `*models.Collection` instance to reduce the verbosity when fetching records:\n  <table class=\"d-table\" width=\"100%\">\n    <tr>\n      <th>Old</th>\n      <th>New</th>\n    </tr>\n    <tr valign=\"top\">\n      <td>dao.FindRecordById(<strong>collection</strong>, ...)</td>\n      <td>dao.FindRecordById(<strong>collectionNameOrId</strong>, ...)</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>dao.FindRecordsByIds(<strong>collection</strong>, ...)</td>\n      <td>dao.FindRecordsByIds(<strong>collectionNameOrId</strong>, ...)</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>dao.FindRecordsByExpr(<strong>collection</strong>, ...)</td>\n      <td>dao.FindRecordsByExpr(<strong>collectionNameOrId</strong>, ...)</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>dao.FindFirstRecordByData(<strong>collection</strong>, ...)</td>\n      <td>dao.FindFirstRecordByData(<strong>collectionNameOrId</strong>, ...)</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>dao.IsRecordValueUnique(<strong>collection</strong>, ...)</td>\n      <td>dao.IsRecordValueUnique(<strong>collectionNameOrId</strong>, ...)</td>\n    </tr>\n  </table>\n\n- Replaced all User related Dao helpers with Record equivalents:\n  <table class=\"d-table\" width=\"100%\">\n    <tr>\n      <th>Old</th>\n      <th>New</th>\n    </tr>\n    <tr valign=\"top\">\n      <td>dao.UserQuery()</td>\n      <td>dao.RecordQuery(collection)</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>dao.FindUserById(id)</td>\n      <td>dao.FindRecordById(collectionNameOrId, id)</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>dao.FindUserByToken(token, baseKey)</td>\n      <td>dao.FindAuthRecordByToken(token, baseKey)</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>dao.FindUserByEmail(email)</td>\n      <td>dao.FindAuthRecordByEmail(collectionNameOrId, email)</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>N/A</td>\n      <td>dao.FindAuthRecordByUsername(collectionNameOrId, username)</td>\n    </tr>\n  </table>\n\n- Moved the formatted `ApiError` struct and factories to the `github.com/pocketbase/pocketbase/apis` subpackage:\n  <table class=\"d-table\" width=\"100%\">\n    <tr>\n      <th>Old</th>\n      <th>New</th>\n    </tr>\n    <tr valign=\"top\">\n      <td colspan=\"2\"><em>Import path</em></td>\n    </tr>\n    <tr valign=\"top\">\n      <td>github.com/pocketbase/pocketbase/<strong>tools/rest</strong></td>\n      <td>github.com/pocketbase/pocketbase/<strong>apis</strong></td>\n    </tr>\n    <tr valign=\"top\">\n      <td colspan=\"2\"><em>Fields</em></td>\n    </tr>\n    <tr valign=\"top\">\n      <td><strong>rest</strong>.ApiError{}</td>\n      <td><strong>apis</strong>.ApiError{}</td>\n    </tr>\n    <tr valign=\"top\">\n      <td><strong>rest</strong>.NewNotFoundError()</td>\n      <td><strong>apis</strong>.NewNotFoundError()</td>\n    </tr>\n    <tr valign=\"top\">\n      <td><strong>rest</strong>.NewBadRequestError()</td>\n      <td><strong>apis</strong>.NewBadRequestError()</td>\n    </tr>\n    <tr valign=\"top\">\n      <td><strong>rest</strong>.NewForbiddenError()</td>\n      <td><strong>apis</strong>.NewForbiddenError()</td>\n    </tr>\n    <tr valign=\"top\">\n      <td><strong>rest</strong>.NewUnauthorizedError()</td>\n      <td><strong>apis</strong>.NewUnauthorizedError()</td>\n    </tr>\n    <tr valign=\"top\">\n      <td><strong>rest</strong>.NewApiError()</td>\n      <td><strong>apis</strong>.NewApiError()</td>\n    </tr>\n  </table>\n\n- Renamed `models.Record` helper getters:\n  <table class=\"d-table\" width=\"100%\">\n    <tr>\n      <th>Old</th>\n      <th>New</th>\n    </tr>\n    <tr valign=\"top\">\n      <td>Set<strong>DataValue</strong></td>\n      <td>Set</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>Get<strong>DataValue</strong></td>\n      <td>Get</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>GetBool<strong>DataValue</strong></td>\n      <td>GetBool</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>GetString<strong>DataValue</strong></td>\n      <td>GetString</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>GetInt<strong>DataValue</strong></td>\n      <td>GetInt</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>GetFloat<strong>DataValue</strong></td>\n      <td>GetFloat</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>GetTime<strong>DataValue</strong></td>\n      <td>GetTime</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>GetDateTime<strong>DataValue</strong></td>\n      <td>GetDateTime</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>GetStringSlice<strong>DataValue</strong></td>\n      <td>GetStringSlice</td>\n    </tr>\n  </table>\n\n- Added new auth collection `models.Record` helpers:\n  ```go\n  func (m *Record) Username() string\n  func (m *Record) SetUsername(username string) error\n  func (m *Record) Email() string\n  func (m *Record) SetEmail(email string) error\n  func (m *Record) EmailVisibility() bool\n  func (m *Record) SetEmailVisibility(visible bool) error\n  func (m *Record) IgnoreEmailVisibility(state bool)\n  func (m *Record) Verified() bool\n  func (m *Record) SetVerified(verified bool) error\n  func (m *Record) TokenKey() string\n  func (m *Record) SetTokenKey(key string) error\n  func (m *Record) RefreshTokenKey() error\n  func (m *Record) LastResetSentAt() types.DateTime\n  func (m *Record) SetLastResetSentAt(dateTime types.DateTime) error\n  func (m *Record) LastVerificationSentAt() types.DateTime\n  func (m *Record) SetLastVerificationSentAt(dateTime types.DateTime) error\n  func (m *Record) ValidatePassword(password string) bool\n  func (m *Record) SetPassword(password string) error\n  ```\n\n- Added option to return serialized custom `models.Record` fields data:\n  ```go\n  func (m *Record) UnknownData() map[string]any\n  func (m *Record) WithUnknownData(state bool)\n  ```\n\n- Deleted `model.User`. Now the user data is stored as an auth `models.Record`.\n  <table class=\"d-table\" width=\"100%\">\n    <tr>\n      <th>Old</th>\n      <th>New</th>\n    </tr>\n    <tr valign=\"top\">\n      <td>User.Email</td>\n      <td>Record.Email()</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>User.TokenKey</td>\n      <td>Record.TokenKey()</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>User.Verified</td>\n      <td>Record.Verified()</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>User.SetPassword()</td>\n      <td>Record.SetPassword()</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>User.RefreshTokenKey()</td>\n      <td>Record.RefreshTokenKey()</td>\n    </tr>\n    <tr valign=\"top\">\n      <td colspan=\"2\"><em>etc.</em></td>\n    </tr>\n  </table>\n\n- Replaced `User` related event hooks with their `Record` alternative:\n  <table class=\"d-table\" width=\"100%\">\n    <tr>\n      <th>Old</th>\n      <th>New</th>\n    </tr>\n    <tr valign=\"top\">\n      <td>OnMailerBefore<strong>User</strong>ResetPasswordSend() *hook.Hook[*Mailer<strong>User</strong>Event]</td>\n      <td>OnMailerBefore<strong>Record</strong>ResetPasswordSend() *hook.Hook[*Mailer<strong>Record</strong>Event]</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>OnMailerAfter<strong>User</strong>ResetPasswordSend() *hook.Hook[*Mailer<strong>User</strong>Event]</td>\n      <td>OnMailerAfter<strong>Record</strong>ResetPasswordSend() *hook.Hook[*Mailer<strong>Record</strong>Event]</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>OnMailerBefore<strong>User</strong>VerificationSend() *hook.Hook[*Mailer<strong>User</strong>Event]</td>\n      <td>OnMailerBefore<strong>Record</strong>VerificationSend() *hook.Hook[*Mailer<strong>Record</strong>Event]</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>OnMailerAfter<strong>User</strong>VerificationSend() *hook.Hook[*Mailer<strong>User</strong>Event]</td>\n      <td>OnMailerAfter<strong>Record</strong>VerificationSend() *hook.Hook[*Mailer<strong>Record</strong>Event]</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>OnMailerBefore<strong>User</strong>ChangeEmailSend() *hook.Hook[*Mailer<strong>User</strong>Event]</td>\n      <td>OnMailerBefore<strong>Record</strong>ChangeEmailSend() *hook.Hook[*Mailer<strong>Record</strong>Event]</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>OnMailerAfter<strong>User</strong>ChangeEmailSend() *hook.Hook[*Mailer<strong>User</strong>Event]</td>\n      <td>OnMailerAfter<strong>Record</strong>ChangeEmailSend() *hook.Hook[*Mailer<strong>Record</strong>Event]</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>On<strong>Users</strong>ListRequest() *hook.Hook[*<strong>User</strong>ListEvent]</td>\n      <td>On<strong>Records</strong>ListRequest() *hook.Hook[*<strong>Records</strong>ListEvent]</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>On<strong>User</strong>ViewRequest() *hook.Hook[*<strong>User</strong>ViewEvent]</td>\n      <td>On<strong>Record</strong>ViewRequest() *hook.Hook[*<strong>Record</strong>ViewEvent]</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>On<strong>User</strong>BeforeCreateRequest() *hook.Hook[*<strong>User</strong>CreateEvent]</td>\n      <td>On<strong>Record</strong>BeforeCreateRequest() *hook.Hook[*<strong>Record</strong>CreateEvent]</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>On<strong>User</strong>AfterCreateRequest() *hook.Hook[*<strong>User</strong>CreateEvent]</td>\n      <td>On<strong>Record</strong>AfterCreateRequest() *hook.Hook[*<strong>Record</strong>CreateEvent]</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>On<strong>User</strong>BeforeUpdateRequest() *hook.Hook[*<strong>User</strong>UpdateEvent]</td>\n      <td>On<strong>Record</strong>BeforeUpdateRequest() *hook.Hook[*<strong>Record</strong>UpdateEvent]</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>On<strong>User</strong>AfterUpdateRequest() *hook.Hook[*<strong>User</strong>UpdateEvent]</td>\n      <td>On<strong>Record</strong>AfterUpdateRequest() *hook.Hook[*<strong>Record</strong>UpdateEvent]</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>On<strong>User</strong>BeforeDeleteRequest() *hook.Hook[*<strong>User</strong>DeleteEvent]</td>\n      <td>On<strong>Record</strong>BeforeDeleteRequest() *hook.Hook[*<strong>Record</strong>DeleteEvent]</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>On<strong>User</strong>AfterDeleteRequest() *hook.Hook[*<strong>User</strong>DeleteEvent]</td>\n      <td>On<strong>Record</strong>AfterDeleteRequest() *hook.Hook[*<strong>Record</strong>DeleteEvent]</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>On<strong>User</strong>AuthRequest() *hook.Hook[*<strong>User</strong>AuthEvent]</td>\n      <td>On<strong>Record</strong>AuthRequest() *hook.Hook[*<strong>Record</strong>AuthEvent]</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>On<strong>User</strong>ListExternalAuths() *hook.Hook[*<strong>User</strong>ListExternalAuthsEvent]</td>\n      <td>On<strong>Record</strong>ListExternalAuths() *hook.Hook[*<strong>Record</strong>ListExternalAuthsEvent]</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>On<strong>User</strong>BeforeUnlinkExternalAuthRequest() *hook.Hook[*<strong>User</strong>UnlinkExternalAuthEvent]</td>\n      <td>On<strong>Record</strong>BeforeUnlinkExternalAuthRequest() *hook.Hook[*<strong>Record</strong>UnlinkExternalAuthEvent]</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>On<strong>User</strong>AfterUnlinkExternalAuthRequest() *hook.Hook[*<strong>User</strong>UnlinkExternalAuthEvent]</td>\n      <td>On<strong>Record</strong>AfterUnlinkExternalAuthRequest() *hook.Hook[*<strong>Record</strong>UnlinkExternalAuthEvent]</td>\n    </tr>\n  </table>\n\n- Replaced `forms.UserEmailLogin{}` with `forms.RecordPasswordLogin{}` (for both username and email depending on which is enabled for the collection).\n\n- Renamed user related `core.Settings` fields:\n  <table class=\"d-table\" width=\"100%\">\n    <tr>\n      <th>Old</th>\n      <th>New</th>\n    </tr>\n    <tr valign=\"top\">\n      <td>core.Settings.<strong>User</strong>AuthToken{}</td>\n      <td>core.Settings.<strong>Record</strong>AuthToken{}</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>core.Settings.<strong>User</strong>PasswordResetToken{}</td>\n      <td>core.Settings.<strong>Record</strong>PasswordResetToken{}</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>core.Settings.<strong>User</strong>EmailChangeToken{}</td>\n      <td>core.Settings.<strong>Record</strong>EmailChangeToken{}</td>\n    </tr>\n    <tr valign=\"top\">\n      <td>core.Settings.<strong>User</strong>VerificationToken{}</td>\n      <td>core.Settings.<strong>Record</strong>VerificationToken{}</td>\n    </tr>\n  </table>\n\n- Marked as \"Deprecated\" and will be removed in v0.9+:\n    ```\n    core.Settings.EmailAuth{}\n    core.EmailAuthConfig{}\n    schema.FieldTypeUser\n    schema.UserOptions{}\n    ```\n\n- The second argument of `apis.StaticDirectoryHandler(fileSystem, enableIndexFallback)` now is used to enable/disable index.html forwarding on missing file (eg. in case of SPA).\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.15,
          "content": "# Contributing to PocketBase\n\nThanks for taking the time to improve PocketBase!\n\nThis document describes how to prepare a PR for a change in the main repository.\n\n- [Prerequisites](#prerequisites)\n- [Making changes in the Go code](#making-changes-in-the-go-code)\n- [Making changes in the Admin UI](#making-changes-in-the-admin-ui)\n\n## Prerequisites\n\n- Go 1.23+ (for making changes in the Go code)\n- Node 18+ (for making changes in the Admin UI)\n\nIf you haven't already, you can fork the main repository and clone your fork so that you can work locally:\n\n```\ngit clone https://github.com/your_username/pocketbase.git\n```\n\n> [!IMPORTANT]\n> It is recommended to create a new branch from master for each of your bugfixes and features.\n> This is required if you are planning to submit multiple PRs in order to keep the changes separate for review until they eventually get merged.\n\n## Making changes in the Go code\n\nPocketBase is distributed as a Go package, which means that in order to run the project you'll have to create a Go `main` program that imports the package.\n\nThe repository already includes such program, located in `examples/base`, that is also used for the prebuilt executables.\n\nSo, let's assume that you already done some changes in the PocketBase Go code and you want now to run them:\n\n1. Navigate to `examples/base`\n2. Run `go run main.go serve`\n\nThis will start a web server on `http://localhost:8090` with the embedded prebuilt Admin UI from `ui/dist`. And that's it!\n\n**Before making a PR to the main repository, it is a good idea to:**\n\n- Add unit/integration tests for your changes (we are using the standard `testing` go package).\n  To run the tests, you could execute (while in the root project directory):\n\n  ```sh\n  go test ./...\n\n  # or using the Makefile\n  make test\n  ```\n\n- Run the linter - **golangci** ([see how to install](https://golangci-lint.run/usage/install/#local-installation)):\n\n  ```sh\n  golangci-lint run -c ./golangci.yml ./...\n\n  # or using the Makefile\n  make lint\n  ```\n\n## Making changes in the Admin UI\n\nPocketBase Admin UI is a single-page application (SPA) built with Svelte and Vite.\n\nTo start the Admin UI:\n\n1. Navigate to the `ui` project directory\n2. Run `npm install` to install the node dependencies\n3. Start vite's dev server\n   ```sh\n   npm run dev\n   ```\n\nYou could open the browser and access the running Admin UI at `http://localhost:3000`.\n\nSince the Admin UI is just a client-side application, you need to have the PocketBase backend server also running in the background (either manually running the `examples/base/main.go` or download a prebuilt executable).\n\n> [!NOTE]\n> By default, the Admin UI is expecting the backend server to be started at `http://localhost:8090`, but you could change that by creating a new `ui/.env.development.local` file with `PB_BACKEND_URL = YOUR_ADDRESS` variable inside it.\n\nEvery change you make in the Admin UI should be automatically reflected in the browser at `http://localhost:3000` without reloading the page.\n\nOnce you are done with your changes, you have to build the Admin UI with `npm run build`, so that it can be embedded in the go package. And that's it - you can make your PR to the main PocketBase repository.\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.06,
          "content": "The MIT License (MIT)\nCopyright (c) 2022 - present, Gani Georgiev\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software\nand associated documentation files (the \"Software\"), to deal in the Software without restriction,\nincluding without limitation the rights to use, copy, modify, merge, publish, distribute,\nsublicense, and/or sell copies of the Software, and to permit persons to whom the Software\nis furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or\nsubstantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING\nBUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\nDAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.23,
          "content": "lint:\n\tgolangci-lint run -c ./golangci.yml ./...\n\ntest:\n\tgo test ./... -v --cover\n\njstypes:\n\tgo run ./plugins/jsvm/internal/types/types.go\n\ntest-report:\n\tgo test ./... -v --cover -coverprofile=coverage.out\n\tgo tool cover -html=coverage.out\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.94,
          "content": "<p align=\"center\">\n    <a href=\"https://pocketbase.io\" target=\"_blank\" rel=\"noopener\">\n        <img src=\"https://i.imgur.com/5qimnm5.png\" alt=\"PocketBase - open source backend in 1 file\" />\n    </a>\n</p>\n\n<p align=\"center\">\n    <a href=\"https://github.com/pocketbase/pocketbase/actions/workflows/release.yaml\" target=\"_blank\" rel=\"noopener\"><img src=\"https://github.com/pocketbase/pocketbase/actions/workflows/release.yaml/badge.svg\" alt=\"build\" /></a>\n    <a href=\"https://github.com/pocketbase/pocketbase/releases\" target=\"_blank\" rel=\"noopener\"><img src=\"https://img.shields.io/github/release/pocketbase/pocketbase.svg\" alt=\"Latest releases\" /></a>\n    <a href=\"https://pkg.go.dev/github.com/pocketbase/pocketbase\" target=\"_blank\" rel=\"noopener\"><img src=\"https://godoc.org/github.com/pocketbase/pocketbase?status.svg\" alt=\"Go package documentation\" /></a>\n</p>\n\n[PocketBase](https://pocketbase.io) is an open source Go backend that includes:\n\n- embedded database (_SQLite_) with **realtime subscriptions**\n- built-in **files and users management**\n- convenient **Admin dashboard UI**\n- and simple **REST-ish API**\n\n**For documentation and examples, please visit https://pocketbase.io/docs.**\n\n> [!WARNING]\n> Please keep in mind that PocketBase is still under active development\n> and therefore full backward compatibility is not guaranteed before reaching v1.0.0.\n\n## API SDK clients\n\nThe easiest way to interact with the API is to use one of the official SDK clients:\n\n- **JavaScript - [pocketbase/js-sdk](https://github.com/pocketbase/js-sdk)** (_browser and node_)\n- **Dart - [pocketbase/dart-sdk](https://github.com/pocketbase/dart-sdk)** (_web, mobile, desktop_)\n\n## Overview\n\n### Use as standalone app\n\nYou could download the prebuilt executable for your platform from the [Releases page](https://github.com/pocketbase/pocketbase/releases).\nOnce downloaded, extract the archive and run `./pocketbase serve` in the extracted directory.\n\nThe prebuilt executables are based on the [`examples/base/main.go` file](https://github.com/pocketbase/pocketbase/blob/master/examples/base/main.go) and comes with the JS VM plugin enabled by default which allows to extend PocketBase with JavaScript (_for more details please refer to [Extend with JavaScript](https://pocketbase.io/docs/js-overview/)_).\n\n### Use as a Go framework/toolkit\n\nPocketBase is distributed as a regular Go library package which allows you to build\nyour own custom app specific business logic and still have a single portable executable at the end.\n\nHere is a minimal example:\n\n0. [Install Go 1.23+](https://go.dev/doc/install) (_if you haven't already_)\n\n1. Create a new project directory with the following `main.go` file inside it:\n    ```go\n    package main\n\n    import (\n        \"log\"\n\n        \"github.com/pocketbase/pocketbase\"\n        \"github.com/pocketbase/pocketbase/core\"\n    )\n\n    func main() {\n        app := pocketbase.New()\n\n        app.OnServe().BindFunc(func(se *core.ServeEvent) error {\n            // registers new \"GET /hello\" route\n            se.Router.GET(\"/hello\", func(re *core.RequestEvent) error {\n                return re.String(200, \"Hello world!\")\n            })\n\n            return se.Next()\n        })\n\n        if err := app.Start(); err != nil {\n            log.Fatal(err)\n        }\n    }\n    ```\n\n2. To init the dependencies, run `go mod init myapp && go mod tidy`.\n\n3. To start the application, run `go run main.go serve`.\n\n4. To build a statically linked executable, you can run `CGO_ENABLED=0 go build` and then start the created executable with `./myapp serve`.\n\n_For more details please refer to [Extend with Go](https://pocketbase.io/docs/go-overview/)._\n\n### Building and running the repo main.go example\n\nTo build the minimal standalone executable, like the prebuilt ones in the releases page, you can simply run `go build` inside the `examples/base` directory:\n\n0. [Install Go 1.23+](https://go.dev/doc/install) (_if you haven't already_)\n1. Clone/download the repo\n2. Navigate to `examples/base`\n3. Run `GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build`\n   (_https://go.dev/doc/install/source#environment_)\n4. Start the created executable by running `./base serve`.\n\nNote that the supported build targets by the pure Go SQLite driver at the moment are:\n\n```\ndarwin  amd64\ndarwin  arm64\nfreebsd amd64\nfreebsd arm64\nlinux   386\nlinux   amd64\nlinux   arm\nlinux   arm64\nlinux   ppc64le\nlinux   riscv64\nlinux   s390x\nwindows amd64\nwindows arm64\n```\n\n### Testing\n\nPocketBase comes with mixed bag of unit and integration tests.\nTo run them, use the standard `go test` command:\n\n```sh\ngo test ./...\n```\n\nCheck also the [Testing guide](http://pocketbase.io/docs/testing) to learn how to write your own custom application tests.\n\n## Security\n\nIf you discover a security vulnerability within PocketBase, please send an e-mail to **support at pocketbase.io**.\n\nAll reports will be promptly addressed and you'll be credited in the fix release notes.\n\n## Contributing\n\nPocketBase is free and open source project licensed under the [MIT License](LICENSE.md).\nYou are free to do whatever you want with it, even offering it as a paid service.\n\nYou could help continuing its development by:\n\n- [Contribute to the source code](CONTRIBUTING.md)\n- [Suggest new features and report issues](https://github.com/pocketbase/pocketbase/issues)\n\nPRs for new OAuth2 providers, bug fixes, code optimizations and documentation improvements are more than welcome.\n\nBut please refrain creating PRs for _new features_ without previously discussing the implementation details.\nPocketBase has a [roadmap](https://github.com/orgs/pocketbase/projects/2) and I try to work on issues in specific order and such PRs often come in out of nowhere and skew all initial planning with tedious back-and-forth communication.\n\nDon't get upset if I close your PR, even if it is well executed and tested. This doesn't mean that it will never be merged.\nLater we can always refer to it and/or take pieces of your implementation when the time comes to work on the issue (don't worry you'll be credited in the release notes).\n"
        },
        {
          "name": "apis",
          "type": "tree",
          "content": null
        },
        {
          "name": "cmd",
          "type": "tree",
          "content": null
        },
        {
          "name": "core",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "forms",
          "type": "tree",
          "content": null
        },
        {
          "name": "go.mod",
          "type": "blob",
          "size": 3.96,
          "content": "module github.com/pocketbase/pocketbase\n\ngo 1.23\n\nrequire (\n\tgithub.com/AlecAivazis/survey/v2 v2.3.7\n\tgithub.com/aws/aws-sdk-go-v2 v1.32.7\n\tgithub.com/aws/aws-sdk-go-v2/config v1.28.7\n\tgithub.com/aws/aws-sdk-go-v2/credentials v1.17.48\n\tgithub.com/aws/aws-sdk-go-v2/feature/s3/manager v1.17.44\n\tgithub.com/aws/aws-sdk-go-v2/service/s3 v1.71.1\n\tgithub.com/aws/smithy-go v1.22.1\n\tgithub.com/disintegration/imaging v1.6.2\n\tgithub.com/domodwyer/mailyak/v3 v3.6.2\n\tgithub.com/dop251/goja v0.0.0-20241009100908-5f46f2705ca3\n\tgithub.com/dop251/goja_nodejs v0.0.0-20240728170619-29b559befffc\n\tgithub.com/fatih/color v1.18.0\n\tgithub.com/fsnotify/fsnotify v1.7.0\n\tgithub.com/gabriel-vasile/mimetype v1.4.7\n\tgithub.com/ganigeorgiev/fexpr v0.4.1\n\tgithub.com/go-ozzo/ozzo-validation/v4 v4.3.0\n\tgithub.com/golang-jwt/jwt/v4 v4.5.1\n\tgithub.com/pocketbase/dbx v1.11.0\n\tgithub.com/pocketbase/tygoja v0.0.0-20250103200817-ca580d8c5119\n\tgithub.com/spf13/cast v1.7.1\n\tgithub.com/spf13/cobra v1.8.1\n\tgocloud.dev v0.40.0\n\tgolang.org/x/crypto v0.31.0\n\tgolang.org/x/net v0.33.0\n\tgolang.org/x/oauth2 v0.24.0\n\tgolang.org/x/sync v0.10.0\n\tmodernc.org/sqlite v1.34.4\n)\n\nrequire (\n\tgithub.com/asaskevich/govalidator v0.0.0-20230301143203-a9d515a09cc2 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.6.7 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.22 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/configsources v1.3.26 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.26 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/ini v1.8.1 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/internal/v4a v1.3.26 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.12.1 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/internal/checksum v1.4.7 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.12.7 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/internal/s3shared v1.18.7 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/sso v1.24.8 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/ssooidc v1.28.7 // indirect\n\tgithub.com/aws/aws-sdk-go-v2/service/sts v1.33.3 // indirect\n\tgithub.com/dlclark/regexp2 v1.11.4 // indirect\n\tgithub.com/dop251/base64dec v0.0.0-20231022112746-c6c9f9a96217 // indirect\n\tgithub.com/dustin/go-humanize v1.0.1 // indirect\n\tgithub.com/go-sourcemap/sourcemap v2.1.4+incompatible // indirect\n\tgithub.com/golang/groupcache v0.0.0-20241129210726-2c02b8208cf8 // indirect\n\tgithub.com/google/pprof v0.0.0-20240727154555-813a5fbdbec8 // indirect\n\tgithub.com/google/uuid v1.6.0 // indirect\n\tgithub.com/googleapis/gax-go/v2 v2.14.1 // indirect\n\tgithub.com/hashicorp/golang-lru/v2 v2.0.7 // indirect\n\tgithub.com/inconshreveable/mousetrap v1.1.0 // indirect\n\tgithub.com/kballard/go-shellquote v0.0.0-20180428030007-95032a82bc51 // indirect\n\tgithub.com/mattn/go-colorable v0.1.13 // indirect\n\tgithub.com/mattn/go-isatty v0.0.20 // indirect\n\tgithub.com/mgutz/ansi v0.0.0-20200706080929-d51e80ef957d // indirect\n\tgithub.com/ncruces/go-strftime v0.1.9 // indirect\n\tgithub.com/remyoudompheng/bigfft v0.0.0-20230129092748-24d4a6f8daec // indirect\n\tgithub.com/spf13/pflag v1.0.5 // indirect\n\tgithub.com/stretchr/testify v1.8.2 // indirect\n\tgo.opencensus.io v0.24.0 // indirect\n\tgolang.org/x/image v0.23.0 // indirect\n\tgolang.org/x/mod v0.22.0 // indirect\n\tgolang.org/x/sys v0.28.0 // indirect\n\tgolang.org/x/term v0.27.0 // indirect\n\tgolang.org/x/text v0.21.0 // indirect\n\tgolang.org/x/tools v0.28.0 // indirect\n\tgolang.org/x/xerrors v0.0.0-20240903120638-7835f813f4da // indirect\n\tgoogle.golang.org/api v0.214.0 // indirect\n\tgoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241230172942-26aa7a208def // indirect\n\tgoogle.golang.org/grpc v1.69.2 // indirect\n\tgoogle.golang.org/protobuf v1.36.1 // indirect\n\tmodernc.org/gc/v3 v3.0.0-20241223112719-96e2e1e4408d // indirect\n\tmodernc.org/libc v1.55.3 // indirect\n\tmodernc.org/mathutil v1.7.1 // indirect\n\tmodernc.org/memory v1.8.0 // indirect\n\tmodernc.org/strutil v1.2.1 // indirect\n\tmodernc.org/token v1.1.0 // indirect\n)\n"
        },
        {
          "name": "go.sum",
          "type": "blob",
          "size": 34.41,
          "content": "cloud.google.com/go v0.26.0/go.mod h1:aQUYkXzVsufM+DwF1aE+0xfcU+56JwCaLick0ClmMTw=\ncloud.google.com/go v0.115.0 h1:CnFSK6Xo3lDYRoBKEcAtia6VSC837/ZkJuRduSFnr14=\ncloud.google.com/go v0.115.0/go.mod h1:8jIM5vVgoAEoiVxQ/O4BFTfHqulPZgs/ufEzMcFMdWU=\ncloud.google.com/go/auth v0.13.0 h1:8Fu8TZy167JkW8Tj3q7dIkr2v4cndv41ouecJx0PAHs=\ncloud.google.com/go/auth v0.13.0/go.mod h1:COOjD9gwfKNKz+IIduatIhYJQIc0mG3H102r/EMxX6Q=\ncloud.google.com/go/auth/oauth2adapt v0.2.6 h1:V6a6XDu2lTwPZWOawrAa9HUK+DB2zfJyTuciBG5hFkU=\ncloud.google.com/go/auth/oauth2adapt v0.2.6/go.mod h1:AlmsELtlEBnaNTL7jCj8VQFLy6mbZv0s4Q7NGBeQ5E8=\ncloud.google.com/go/compute/metadata v0.6.0 h1:A6hENjEsCDtC1k8byVsgwvVcioamEHvZ4j01OwKxG9I=\ncloud.google.com/go/compute/metadata v0.6.0/go.mod h1:FjyFAW1MW0C203CEOMDTu3Dk1FlqW3Rga40jzHL4hfg=\ncloud.google.com/go/iam v1.1.13 h1:7zWBXG9ERbMLrzQBRhFliAV+kjcRToDTgQT3CTwYyv4=\ncloud.google.com/go/iam v1.1.13/go.mod h1:K8mY0uSXwEXS30KrnVb+j54LB/ntfZu1dr+4zFMNbus=\ncloud.google.com/go/storage v1.43.0 h1:CcxnSohZwizt4LCzQHWvBf1/kvtHUn7gk9QERXPyXFs=\ncloud.google.com/go/storage v1.43.0/go.mod h1:ajvxEa7WmZS1PxvKRq4bq0tFT3vMd502JwstCcYv0Q0=\nfilippo.io/edwards25519 v1.1.0 h1:FNf4tywRC1HmFuKW5xopWpigGjJKiJSV0Cqo0cJWDaA=\nfilippo.io/edwards25519 v1.1.0/go.mod h1:BxyFTGdWcka3PhytdK4V28tE5sGfRvvvRV7EaN4VDT4=\ngithub.com/AlecAivazis/survey/v2 v2.3.7 h1:6I/u8FvytdGsgonrYsVn2t8t4QiRnh6QSTqkkhIiSjQ=\ngithub.com/AlecAivazis/survey/v2 v2.3.7/go.mod h1:xUTIdE4KCOIjsBAE1JYsUPoCqYdZ1reCfTwbto0Fduo=\ngithub.com/BurntSushi/toml v0.3.1/go.mod h1:xHWCNGjB5oqiDr8zfno3MHue2Ht5sIBksp03qcyfWMU=\ngithub.com/Masterminds/semver/v3 v3.2.1 h1:RN9w6+7QoMeJVGyfmbcgs28Br8cvmnucEXnY0rYXWg0=\ngithub.com/Masterminds/semver/v3 v3.2.1/go.mod h1:qvl/7zhW3nngYb5+80sSMF+FG2BjYrf8m9wsX0PNOMQ=\ngithub.com/Netflix/go-expect v0.0.0-20220104043353-73e0943537d2 h1:+vx7roKuyA63nhn5WAunQHLTznkw5W8b1Xc0dNjp83s=\ngithub.com/Netflix/go-expect v0.0.0-20220104043353-73e0943537d2/go.mod h1:HBCaDeC1lPdgDeDbhX8XFpy1jqjK0IBG8W5K+xYqA0w=\ngithub.com/asaskevich/govalidator v0.0.0-20200108200545-475eaeb16496/go.mod h1:oGkLhpf+kjZl6xBf758TQhh5XrAeiJv/7FRz/2spLIg=\ngithub.com/asaskevich/govalidator v0.0.0-20230301143203-a9d515a09cc2 h1:DklsrG3dyBCFEj5IhUbnKptjxatkF07cF2ak3yi77so=\ngithub.com/asaskevich/govalidator v0.0.0-20230301143203-a9d515a09cc2/go.mod h1:WaHUgvxTVq04UNunO+XhnAqY/wQc+bxr74GqbsZ/Jqw=\ngithub.com/aws/aws-sdk-go v1.55.5 h1:KKUZBfBoyqy5d3swXyiC7Q76ic40rYcbqH7qjh59kzU=\ngithub.com/aws/aws-sdk-go v1.55.5/go.mod h1:eRwEWoyTWFMVYVQzKMNHWP5/RV4xIUGMQfXQHfHkpNU=\ngithub.com/aws/aws-sdk-go-v2 v1.32.7 h1:ky5o35oENWi0JYWUZkB7WYvVPP+bcRF5/Iq7JWSb5Rw=\ngithub.com/aws/aws-sdk-go-v2 v1.32.7/go.mod h1:P5WJBrYqqbWVaOxgH0X/FYYD47/nooaPOZPlQdmiN2U=\ngithub.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.6.7 h1:lL7IfaFzngfx0ZwUGOZdsFFnQ5uLvR0hWqqhyE7Q9M8=\ngithub.com/aws/aws-sdk-go-v2/aws/protocol/eventstream v1.6.7/go.mod h1:QraP0UcVlQJsmHfioCrveWOC1nbiWUl3ej08h4mXWoc=\ngithub.com/aws/aws-sdk-go-v2/config v1.28.7 h1:GduUnoTXlhkgnxTD93g1nv4tVPILbdNQOzav+Wpg7AE=\ngithub.com/aws/aws-sdk-go-v2/config v1.28.7/go.mod h1:vZGX6GVkIE8uECSUHB6MWAUsd4ZcG2Yq/dMa4refR3M=\ngithub.com/aws/aws-sdk-go-v2/credentials v1.17.48 h1:IYdLD1qTJ0zanRavulofmqut4afs45mOWEI+MzZtTfQ=\ngithub.com/aws/aws-sdk-go-v2/credentials v1.17.48/go.mod h1:tOscxHN3CGmuX9idQ3+qbkzrjVIx32lqDSU1/0d/qXs=\ngithub.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.22 h1:kqOrpojG71DxJm/KDPO+Z/y1phm1JlC8/iT+5XRmAn8=\ngithub.com/aws/aws-sdk-go-v2/feature/ec2/imds v1.16.22/go.mod h1:NtSFajXVVL8TA2QNngagVZmUtXciyrHOt7xgz4faS/M=\ngithub.com/aws/aws-sdk-go-v2/feature/s3/manager v1.17.44 h1:2zxMLXLedpB4K1ilbJFxtMKsVKaexOqDttOhc0QGm3Q=\ngithub.com/aws/aws-sdk-go-v2/feature/s3/manager v1.17.44/go.mod h1:VuLHdqwjSvgftNC7yqPWyGVhEwPmJpeRi07gOgOfHF8=\ngithub.com/aws/aws-sdk-go-v2/internal/configsources v1.3.26 h1:I/5wmGMffY4happ8NOCuIUEWGUvvFp5NSeQcXl9RHcI=\ngithub.com/aws/aws-sdk-go-v2/internal/configsources v1.3.26/go.mod h1:FR8f4turZtNy6baO0KJ5FJUmXH/cSkI9fOngs0yl6mA=\ngithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.26 h1:zXFLuEuMMUOvEARXFUVJdfqZ4bvvSgdGRq/ATcrQxzM=\ngithub.com/aws/aws-sdk-go-v2/internal/endpoints/v2 v2.6.26/go.mod h1:3o2Wpy0bogG1kyOPrgkXA8pgIfEEv0+m19O9D5+W8y8=\ngithub.com/aws/aws-sdk-go-v2/internal/ini v1.8.1 h1:VaRN3TlFdd6KxX1x3ILT5ynH6HvKgqdiXoTxAF4HQcQ=\ngithub.com/aws/aws-sdk-go-v2/internal/ini v1.8.1/go.mod h1:FbtygfRFze9usAadmnGJNc8KsP346kEe+y2/oyhGAGc=\ngithub.com/aws/aws-sdk-go-v2/internal/v4a v1.3.26 h1:GeNJsIFHB+WW5ap2Tec4K6dzcVTsRbsT1Lra46Hv9ME=\ngithub.com/aws/aws-sdk-go-v2/internal/v4a v1.3.26/go.mod h1:zfgMpwHDXX2WGoG84xG2H+ZlPTkJUU4YUvx2svLQYWo=\ngithub.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.12.1 h1:iXtILhvDxB6kPvEXgsDhGaZCSC6LQET5ZHSdJozeI0Y=\ngithub.com/aws/aws-sdk-go-v2/service/internal/accept-encoding v1.12.1/go.mod h1:9nu0fVANtYiAePIBh2/pFUSwtJ402hLnp854CNoDOeE=\ngithub.com/aws/aws-sdk-go-v2/service/internal/checksum v1.4.7 h1:tB4tNw83KcajNAzaIMhkhVI2Nt8fAZd5A5ro113FEMY=\ngithub.com/aws/aws-sdk-go-v2/service/internal/checksum v1.4.7/go.mod h1:lvpyBGkZ3tZ9iSsUIcC2EWp+0ywa7aK3BLT+FwZi+mQ=\ngithub.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.12.7 h1:8eUsivBQzZHqe/3FE+cqwfH+0p5Jo8PFM/QYQSmeZ+M=\ngithub.com/aws/aws-sdk-go-v2/service/internal/presigned-url v1.12.7/go.mod h1:kLPQvGUmxn/fqiCrDeohwG33bq2pQpGeY62yRO6Nrh0=\ngithub.com/aws/aws-sdk-go-v2/service/internal/s3shared v1.18.7 h1:Hi0KGbrnr57bEHWM0bJ1QcBzxLrL/k2DHvGYhb8+W1w=\ngithub.com/aws/aws-sdk-go-v2/service/internal/s3shared v1.18.7/go.mod h1:wKNgWgExdjjrm4qvfbTorkvocEstaoDl4WCvGfeCy9c=\ngithub.com/aws/aws-sdk-go-v2/service/s3 v1.71.1 h1:aOVVZJgWbaH+EJYPvEgkNhCEbXXvH7+oML36oaPK3zE=\ngithub.com/aws/aws-sdk-go-v2/service/s3 v1.71.1/go.mod h1:r+xl5yzMk9083rMR+sJ5TYj9Tihvf/l1oxzZXDgGj2Q=\ngithub.com/aws/aws-sdk-go-v2/service/sso v1.24.8 h1:CvuUmnXI7ebaUAhbJcDy9YQx8wHR69eZ9I7q5hszt/g=\ngithub.com/aws/aws-sdk-go-v2/service/sso v1.24.8/go.mod h1:XDeGv1opzwm8ubxddF0cgqkZWsyOtw4lr6dxwmb6YQg=\ngithub.com/aws/aws-sdk-go-v2/service/ssooidc v1.28.7 h1:F2rBfNAL5UyswqoeWv9zs74N/NanhK16ydHW1pahX6E=\ngithub.com/aws/aws-sdk-go-v2/service/ssooidc v1.28.7/go.mod h1:JfyQ0g2JG8+Krq0EuZNnRwX0mU0HrwY/tG6JNfcqh4k=\ngithub.com/aws/aws-sdk-go-v2/service/sts v1.33.3 h1:Xgv/hyNgvLda/M9l9qxXc4UFSgppnRczLxlMs5Ae/QY=\ngithub.com/aws/aws-sdk-go-v2/service/sts v1.33.3/go.mod h1:5Gn+d+VaaRgsjewpMvGazt0WfcFO+Md4wLOuBfGR9Bc=\ngithub.com/aws/smithy-go v1.22.1 h1:/HPHZQ0g7f4eUeK6HKglFz8uwVfZKgoI25rb/J+dnro=\ngithub.com/aws/smithy-go v1.22.1/go.mod h1:irrKGvNn1InZwb2d7fkIRNucdfwR8R+Ts3wxYa/cJHg=\ngithub.com/census-instrumentation/opencensus-proto v0.2.1/go.mod h1:f6KPmirojxKA12rnyqOA5BBL4O983OfeGPqjHWSTneU=\ngithub.com/client9/misspell v0.3.4/go.mod h1:qj6jICC3Q7zFZvVWo7KLAzC3yx5G7kyvSDkc90ppPyw=\ngithub.com/cncf/udpa/go v0.0.0-20191209042840-269d4d468f6f/go.mod h1:M8M6+tZqaGXZJjfX53e64911xZQV5JYwmTeXPW+k8Sc=\ngithub.com/cpuguy83/go-md2man/v2 v2.0.4/go.mod h1:tgQtvFlXSQOSOSIRvRPT7W67SCa46tRHOmNcaadrF8o=\ngithub.com/creack/pty v1.1.17 h1:QeVUsEDNrLBW4tMgZHvxy18sKtr6VI492kBhUfhDJNI=\ngithub.com/creack/pty v1.1.17/go.mod h1:MOBLtS5ELjhRRrroQr9kyvTxUAFNvYEK993ew/Vr4O4=\ngithub.com/davecgh/go-spew v1.1.0/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/davecgh/go-spew v1.1.1 h1:vj9j/u1bqnvCEfJOwUhtlOARqs3+rkHYY13jYWTU97c=\ngithub.com/davecgh/go-spew v1.1.1/go.mod h1:J7Y8YcW2NihsgmVo/mv3lAwl/skON4iLHjSsI+c5H38=\ngithub.com/disintegration/imaging v1.6.2 h1:w1LecBlG2Lnp8B3jk5zSuNqd7b4DXhcjwek1ei82L+c=\ngithub.com/disintegration/imaging v1.6.2/go.mod h1:44/5580QXChDfwIclfc/PCwrr44amcmDAg8hxG0Ewe4=\ngithub.com/dlclark/regexp2 v1.11.4 h1:rPYF9/LECdNymJufQKmri9gV604RvvABwgOA8un7yAo=\ngithub.com/dlclark/regexp2 v1.11.4/go.mod h1:DHkYz0B9wPfa6wondMfaivmHpzrQ3v9q8cnmRbL6yW8=\ngithub.com/domodwyer/mailyak/v3 v3.6.2 h1:x3tGMsyFhTCaxp6ycgR0FE/bu5QiNp+hetUuCOBXMn8=\ngithub.com/domodwyer/mailyak/v3 v3.6.2/go.mod h1:lOm/u9CyCVWHeaAmHIdF4RiKVxKUT/H5XX10lIKAL6c=\ngithub.com/dop251/base64dec v0.0.0-20231022112746-c6c9f9a96217 h1:16iT9CBDOniJwFGPI41MbUDfEk74hFaKTqudrX8kenY=\ngithub.com/dop251/base64dec v0.0.0-20231022112746-c6c9f9a96217/go.mod h1:eIb+f24U+eWQCIsj9D/ah+MD9UP+wdxuqzsdLD+mhGM=\ngithub.com/dop251/goja v0.0.0-20241009100908-5f46f2705ca3 h1:MXsAuToxwsTn5BEEYm2DheqIiC4jWGmkEJ1uy+KFhvQ=\ngithub.com/dop251/goja v0.0.0-20241009100908-5f46f2705ca3/go.mod h1:MxLav0peU43GgvwVgNbLAj1s/bSGboKkhuULvq/7hx4=\ngithub.com/dop251/goja_nodejs v0.0.0-20240728170619-29b559befffc h1:MKYt39yZJi0Z9xEeRmDX2L4ocE0ETKcHKw6MVL3R+co=\ngithub.com/dop251/goja_nodejs v0.0.0-20240728170619-29b559befffc/go.mod h1:VULptt4Q/fNzQUJlqY/GP3qHyU7ZH46mFkBZe0ZTokU=\ngithub.com/dustin/go-humanize v1.0.1 h1:GzkhY7T5VNhEkwH0PVJgjz+fX1rhBrR7pRT3mDkpeCY=\ngithub.com/dustin/go-humanize v1.0.1/go.mod h1:Mu1zIs6XwVuF/gI1OepvI0qD18qycQx+mFykh5fBlto=\ngithub.com/envoyproxy/go-control-plane v0.9.0/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.1-0.20191026205805-5f8ba28d4473/go.mod h1:YTl/9mNaCwkRvm6d1a2C3ymFceY/DCBVvsKhRF0iEA4=\ngithub.com/envoyproxy/go-control-plane v0.9.4/go.mod h1:6rpuAdCZL397s3pYoYcLgu1mIlRU8Am5FuJP05cCM98=\ngithub.com/envoyproxy/protoc-gen-validate v0.1.0/go.mod h1:iSmxcyjqTsJpI2R4NaDN7+kN2VEUnK/pcBlmesArF7c=\ngithub.com/fatih/color v1.18.0 h1:S8gINlzdQ840/4pfAwic/ZE0djQEH3wM94VfqLTZcOM=\ngithub.com/fatih/color v1.18.0/go.mod h1:4FelSpRwEGDpQ12mAdzqdOukCy4u8WUtOY6lkT/6HfU=\ngithub.com/felixge/httpsnoop v1.0.4 h1:NFTV2Zj1bL4mc9sqWACXbQFVBBg2W3GPvqp8/ESS2Wg=\ngithub.com/felixge/httpsnoop v1.0.4/go.mod h1:m8KPJKqk1gH5J9DgRY2ASl2lWCfGKXixSwevea8zH2U=\ngithub.com/frankban/quicktest v1.14.6 h1:7Xjx+VpznH+oBnejlPUj8oUpdxnVs4f8XU8WnHkI4W8=\ngithub.com/frankban/quicktest v1.14.6/go.mod h1:4ptaffx2x8+WTWXmUCuVU6aPUX1/Mz7zb5vbUoiM6w0=\ngithub.com/fsnotify/fsnotify v1.7.0 h1:8JEhPFa5W2WU7YfeZzPNqzMP6Lwt7L2715Ggo0nosvA=\ngithub.com/fsnotify/fsnotify v1.7.0/go.mod h1:40Bi/Hjc2AVfZrqy+aj+yEI+/bRxZnMJyTJwOpGvigM=\ngithub.com/gabriel-vasile/mimetype v1.4.7 h1:SKFKl7kD0RiPdbht0s7hFtjl489WcQ1VyPW8ZzUMYCA=\ngithub.com/gabriel-vasile/mimetype v1.4.7/go.mod h1:GDlAgAyIRT27BhFl53XNAFtfjzOkLaF35JdEG0P7LtU=\ngithub.com/ganigeorgiev/fexpr v0.4.1 h1:hpUgbUEEWIZhSDBtf4M9aUNfQQ0BZkGRaMePy7Gcx5k=\ngithub.com/ganigeorgiev/fexpr v0.4.1/go.mod h1:RyGiGqmeXhEQ6+mlGdnUleLHgtzzu/VGO2WtJkF5drE=\ngithub.com/go-logr/logr v1.4.2 h1:6pFjapn8bFcIbiKo3XT4j/BhANplGihG6tvd+8rYgrY=\ngithub.com/go-logr/logr v1.4.2/go.mod h1:9T104GzyrTigFIr8wt5mBrctHMim0Nb2HLGrmQ40KvY=\ngithub.com/go-logr/stdr v1.2.2 h1:hSWxHoqTgW2S2qGc0LTAI563KZ5YKYRhT3MFKZMbjag=\ngithub.com/go-logr/stdr v1.2.2/go.mod h1:mMo/vtBO5dYbehREoey6XUKy/eSumjCCveDpRre4VKE=\ngithub.com/go-ozzo/ozzo-validation/v4 v4.3.0 h1:byhDUpfEwjsVQb1vBunvIjh2BHQ9ead57VkAEY4V+Es=\ngithub.com/go-ozzo/ozzo-validation/v4 v4.3.0/go.mod h1:2NKgrcHl3z6cJs+3Oo940FPRiTzuqKbvfrL2RxCj6Ew=\ngithub.com/go-sourcemap/sourcemap v2.1.4+incompatible h1:a+iTbH5auLKxaNwQFg0B+TCYl6lbukKPc7b5x0n1s6Q=\ngithub.com/go-sourcemap/sourcemap v2.1.4+incompatible/go.mod h1:F8jJfvm2KbVjc5NqelyYJmf/v5J0dwNLS2mL4sNA1Jg=\ngithub.com/go-sql-driver/mysql v1.4.1/go.mod h1:zAC/RDZ24gD3HViQzih4MyKcchzm+sOG5ZlKdlhCg5w=\ngithub.com/go-sql-driver/mysql v1.8.1 h1:LedoTUt/eveggdHS9qUFC1EFSa8bU2+1pZjSRpvNJ1Y=\ngithub.com/go-sql-driver/mysql v1.8.1/go.mod h1:wEBSXgmK//2ZFJyE+qWnIsVGmvmEKlqwuVSjsCm7DZg=\ngithub.com/golang-jwt/jwt/v4 v4.5.1 h1:JdqV9zKUdtaa9gdPlywC3aeoEsR681PlKC+4F5gQgeo=\ngithub.com/golang-jwt/jwt/v4 v4.5.1/go.mod h1:m21LjoU+eqJr34lmDMbreY2eSTRJ1cv77w39/MY0Ch0=\ngithub.com/golang/glog v0.0.0-20160126235308-23def4e6c14b/go.mod h1:SBH7ygxi8pfUlaOkMMuAQtPIUF8ecWP5IEl/CR7VP2Q=\ngithub.com/golang/groupcache v0.0.0-20200121045136-8c9f03a8e57e/go.mod h1:cIg4eruTrX1D+g88fzRXU5OdNfaM+9IcxsU14FzY7Hc=\ngithub.com/golang/groupcache v0.0.0-20241129210726-2c02b8208cf8 h1:f+oWsMOmNPc8JmEHVZIycC7hBoQxHH9pNKQORJNozsQ=\ngithub.com/golang/groupcache v0.0.0-20241129210726-2c02b8208cf8/go.mod h1:wcDNUvekVysuuOpQKo3191zZyTpiI6se1N1ULghS0sw=\ngithub.com/golang/mock v1.1.1/go.mod h1:oTYuIxOrZwtPieC+H1uAHpcLFnEyAGVDL/k47Jfbm0A=\ngithub.com/golang/protobuf v1.2.0/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.1/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.3.2/go.mod h1:6lQm79b+lXiMfvg/cZm0SGofjICqVBUtrP5yJMmIC1U=\ngithub.com/golang/protobuf v1.4.0-rc.1/go.mod h1:ceaxUfeHdC40wWswd/P6IGgMaK3YpKi5j83Wpe3EHw8=\ngithub.com/golang/protobuf v1.4.0-rc.1.0.20200221234624-67d41d38c208/go.mod h1:xKAWHe0F5eneWXFV3EuXVDTCmh+JuBKY0li0aMyXATA=\ngithub.com/golang/protobuf v1.4.0-rc.2/go.mod h1:LlEzMj4AhA7rCAGe4KMBDvJI+AwstrUpVNzEA03Pprs=\ngithub.com/golang/protobuf v1.4.0-rc.4.0.20200313231945-b860323f09d0/go.mod h1:WU3c8KckQ9AFe+yFwt9sWVRKCVIyN9cPHBJSNnbL67w=\ngithub.com/golang/protobuf v1.4.0/go.mod h1:jodUvKwWbYaEsadDk5Fwe5c77LiNKVO9IDvqG2KuDX0=\ngithub.com/golang/protobuf v1.4.1/go.mod h1:U8fpvMrcmy5pZrNK1lt4xCsGvpyWQ/VVv6QDs8UjoX8=\ngithub.com/golang/protobuf v1.4.3/go.mod h1:oDoupMAO8OvCJWAcko0GGGIgR6R6ocIYbsSw735rRwI=\ngithub.com/golang/protobuf v1.5.4 h1:i7eJL8qZTpSEXOPTxNKhASYpMn+8e5Q6AdndVa1dWek=\ngithub.com/golang/protobuf v1.5.4/go.mod h1:lnTiLA8Wa4RWRcIUkrtSVa5nRhsEGBg48fD6rSs7xps=\ngithub.com/google/go-cmp v0.2.0/go.mod h1:oXzfMopK8JAjlY9xF4vHSVASa0yLyX7SntLO5aqRK0M=\ngithub.com/google/go-cmp v0.3.0/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.3.1/go.mod h1:8QqcDgzrUqlUb/G2PQTWiueGozuR1884gddMywk6iLU=\ngithub.com/google/go-cmp v0.4.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.0/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.5.3/go.mod h1:v8dTdLbMG2kIc/vJvl+f65V22dbkXbowE6jgT/gNBxE=\ngithub.com/google/go-cmp v0.6.0 h1:ofyhxvXcZhMsU5ulbFiLKl/XBFqE1GSq7atu8tAmTRI=\ngithub.com/google/go-cmp v0.6.0/go.mod h1:17dUlkBOakJ0+DkrSSNjCkIjxS6bF9zb3elmeNGIjoY=\ngithub.com/google/pprof v0.0.0-20240727154555-813a5fbdbec8 h1:FKHo8hFI3A+7w0aUQuYXQ+6EN5stWmeY/AZqtM8xk9k=\ngithub.com/google/pprof v0.0.0-20240727154555-813a5fbdbec8/go.mod h1:K1liHPHnj73Fdn/EKuT8nrFqBihUSKXoLYU0BuatOYo=\ngithub.com/google/s2a-go v0.1.8 h1:zZDs9gcbt9ZPLV0ndSyQk6Kacx2g/X+SKYovpnz3SMM=\ngithub.com/google/s2a-go v0.1.8/go.mod h1:6iNWHTpQ+nfNRN5E00MSdfDwVesa8hhS32PhPO8deJA=\ngithub.com/google/uuid v1.1.2/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/uuid v1.6.0 h1:NIvaJDMOsjHA8n1jAhLSgzrAzy1Hgr+hNrb57e+94F0=\ngithub.com/google/uuid v1.6.0/go.mod h1:TIyPZe4MgqvfeYDBFedMoGGpEw/LqOeaOT+nhxU+yHo=\ngithub.com/google/wire v0.6.0 h1:HBkoIh4BdSxoyo9PveV8giw7ZsaBOvzWKfcg/6MrVwI=\ngithub.com/google/wire v0.6.0/go.mod h1:F4QhpQ9EDIdJ1Mbop/NZBRB+5yrR6qg3BnctaoUk6NA=\ngithub.com/googleapis/enterprise-certificate-proxy v0.3.4 h1:XYIDZApgAnrN1c855gTgghdIA6Stxb52D5RnLI1SLyw=\ngithub.com/googleapis/enterprise-certificate-proxy v0.3.4/go.mod h1:YKe7cfqYXjKGpGvmSg28/fFvhNzinZQm8DGnaburhGA=\ngithub.com/googleapis/gax-go/v2 v2.14.1 h1:hb0FFeiPaQskmvakKu5EbCbpntQn48jyHuvrkurSS/Q=\ngithub.com/googleapis/gax-go/v2 v2.14.1/go.mod h1:Hb/NubMaVM88SrNkvl8X/o8XWwDJEPqouaLeN2IUxoA=\ngithub.com/hashicorp/golang-lru/v2 v2.0.7 h1:a+bsQ5rvGLjzHuww6tVxozPZFVghXaHOwFs4luLUK2k=\ngithub.com/hashicorp/golang-lru/v2 v2.0.7/go.mod h1:QeFd9opnmA6QUJc5vARoKUSoFhyfM2/ZepoAG6RGpeM=\ngithub.com/hinshun/vt10x v0.0.0-20220119200601-820417d04eec h1:qv2VnGeEQHchGaZ/u7lxST/RaJw+cv273q79D81Xbog=\ngithub.com/hinshun/vt10x v0.0.0-20220119200601-820417d04eec/go.mod h1:Q48J4R4DvxnHolD5P8pOtXigYlRuPLGl6moFx3ulM68=\ngithub.com/inconshreveable/mousetrap v1.1.0 h1:wN+x4NVGpMsO7ErUn/mUI3vEoE6Jt13X2s0bqwp9tc8=\ngithub.com/inconshreveable/mousetrap v1.1.0/go.mod h1:vpF70FUmC8bwa3OWnCshd2FqLfsEA9PFc4w1p2J65bw=\ngithub.com/jmespath/go-jmespath v0.4.0 h1:BEgLn5cpjn8UN1mAw4NjwDrS35OdebyEtFe+9YPoQUg=\ngithub.com/jmespath/go-jmespath v0.4.0/go.mod h1:T8mJZnbsbmF+m6zOOFylbeCJqk5+pHWvzYPziyZiYoo=\ngithub.com/kballard/go-shellquote v0.0.0-20180428030007-95032a82bc51 h1:Z9n2FFNUXsshfwJMBgNA0RU6/i7WVaAegv3PtuIHPMs=\ngithub.com/kballard/go-shellquote v0.0.0-20180428030007-95032a82bc51/go.mod h1:CzGEWj7cYgsdH8dAjBGEr58BoE7ScuLd+fwFZ44+/x8=\ngithub.com/kr/pretty v0.3.1 h1:flRD4NNwYAUpkphVc1HcthR4KEIFJ65n8Mw5qdRn3LE=\ngithub.com/kr/pretty v0.3.1/go.mod h1:hoEshYVHaxMs3cyo3Yncou5ZscifuDolrwPKZanG3xk=\ngithub.com/kr/text v0.2.0 h1:5Nx0Ya0ZqY2ygV366QzturHI13Jq95ApcVaJBhpS+AY=\ngithub.com/kr/text v0.2.0/go.mod h1:eLer722TekiGuMkidMxC/pM04lWEeraHUUmBw8l2grE=\ngithub.com/mattn/go-colorable v0.1.2/go.mod h1:U0ppj6V5qS13XJ6of8GYAs25YV2eR4EVcfRqFIhoBtE=\ngithub.com/mattn/go-colorable v0.1.13 h1:fFA4WZxdEF4tXPZVKMLwD8oUnCTTo08duU7wxecdEvA=\ngithub.com/mattn/go-colorable v0.1.13/go.mod h1:7S9/ev0klgBDR4GtXTXX8a3vIGJpMovkB8vQcUbaXHg=\ngithub.com/mattn/go-isatty v0.0.8/go.mod h1:Iq45c/XA43vh69/j3iqttzPXn0bhXyGjM0Hdxcsrc5s=\ngithub.com/mattn/go-isatty v0.0.16/go.mod h1:kYGgaQfpe5nmfYZH+SKPsOc2e4SrIfOl2e/yFXSvRLM=\ngithub.com/mattn/go-isatty v0.0.20 h1:xfD0iDuEKnDkl03q4limB+vH+GxLEtL/jb4xVJSWWEY=\ngithub.com/mattn/go-isatty v0.0.20/go.mod h1:W+V8PltTTMOvKvAeJH7IuucS94S2C6jfK/D7dTCTo3Y=\ngithub.com/mgutz/ansi v0.0.0-20170206155736-9520e82c474b/go.mod h1:01TrycV0kFyexm33Z7vhZRXopbI8J3TDReVlkTgMUxE=\ngithub.com/mgutz/ansi v0.0.0-20200706080929-d51e80ef957d h1:5PJl274Y63IEHC+7izoQE9x6ikvDFZS2mDVS3drnohI=\ngithub.com/mgutz/ansi v0.0.0-20200706080929-d51e80ef957d/go.mod h1:01TrycV0kFyexm33Z7vhZRXopbI8J3TDReVlkTgMUxE=\ngithub.com/ncruces/go-strftime v0.1.9 h1:bY0MQC28UADQmHmaF5dgpLmImcShSi2kHU9XLdhx/f4=\ngithub.com/ncruces/go-strftime v0.1.9/go.mod h1:Fwc5htZGVVkseilnfgOVb9mKy6w1naJmn9CehxcKcls=\ngithub.com/pmezard/go-difflib v1.0.0 h1:4DBwDE0NGyQoBHbLQYPwSUPoCMWR5BEzIk/f1lZbAQM=\ngithub.com/pmezard/go-difflib v1.0.0/go.mod h1:iKH77koFhYxTK1pcRnkKkqfTogsbg7gZNVY4sRDYZ/4=\ngithub.com/pocketbase/dbx v1.11.0 h1:LpZezioMfT3K4tLrqA55wWFw1EtH1pM4tzSVa7kgszU=\ngithub.com/pocketbase/dbx v1.11.0/go.mod h1:xXRCIAKTHMgUCyCKZm55pUOdvFziJjQfXaWKhu2vhMs=\ngithub.com/pocketbase/tygoja v0.0.0-20250103200817-ca580d8c5119 h1:TjQtEReJDTpvlNFTRjuHvPQpJHAeJdcQF130eCAAT/o=\ngithub.com/pocketbase/tygoja v0.0.0-20250103200817-ca580d8c5119/go.mod h1:hKJWPGFqavk3cdTa47Qvs8g37lnfI57OYdVVbIqW5aE=\ngithub.com/prometheus/client_model v0.0.0-20190812154241-14fe0d1b01d4/go.mod h1:xMI15A0UPsDsEKsMN9yxemIoYk6Tm2C1GtYGdfGttqA=\ngithub.com/remyoudompheng/bigfft v0.0.0-20230129092748-24d4a6f8daec h1:W09IVJc94icq4NjY3clb7Lk8O1qJ8BdBEF8z0ibU0rE=\ngithub.com/remyoudompheng/bigfft v0.0.0-20230129092748-24d4a6f8daec/go.mod h1:qqbHyh8v60DhA7CoWK5oRCqLrMHRGoxYCSS9EjAz6Eo=\ngithub.com/rogpeppe/go-internal v1.9.0 h1:73kH8U+JUqXU8lRuOHeVHaa/SZPifC7BkcraZVejAe8=\ngithub.com/rogpeppe/go-internal v1.9.0/go.mod h1:WtVeX8xhTBvf0smdhujwtBcq4Qrzq/fJaraNFVN+nFs=\ngithub.com/russross/blackfriday/v2 v2.1.0/go.mod h1:+Rmxgy9KzJVeS9/2gXHxylqXiyQDYRxCVz55jmeOWTM=\ngithub.com/spf13/cast v1.7.1 h1:cuNEagBQEHWN1FnbGEjCXL2szYEXqfJPbP2HNUaca9Y=\ngithub.com/spf13/cast v1.7.1/go.mod h1:ancEpBxwJDODSW/UG4rDrAqiKolqNNh2DX3mk86cAdo=\ngithub.com/spf13/cobra v1.8.1 h1:e5/vxKd/rZsfSJMUX1agtjeTDf+qv1/JdBF8gg5k9ZM=\ngithub.com/spf13/cobra v1.8.1/go.mod h1:wHxEcudfqmLYa8iTfL+OuZPbBZkmvliBWKIezN3kD9Y=\ngithub.com/spf13/pflag v1.0.5 h1:iy+VFUOCP1a+8yFto/drg2CJ5u0yRoB7fZw3DKv/JXA=\ngithub.com/spf13/pflag v1.0.5/go.mod h1:McXfInJRrz4CZXVZOBLb0bTZqETkiAhM9Iw0y3An2Bg=\ngithub.com/stretchr/objx v0.1.0/go.mod h1:HFkY916IF+rwdDfMAkV7OtwuqBVzrE8GR6GFx+wExME=\ngithub.com/stretchr/objx v0.4.0/go.mod h1:YvHI0jy2hoMjB+UWwv71VJQ9isScKT/TqJzVSSt89Yw=\ngithub.com/stretchr/objx v0.5.0/go.mod h1:Yh+to48EsGEfYuaHDzXPcE3xhTkx73EhmCGUpEOglKo=\ngithub.com/stretchr/testify v1.4.0/go.mod h1:j7eGeouHqKxXV5pUuKE4zz7dFj8WfuZ+81PSLYec5m4=\ngithub.com/stretchr/testify v1.6.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.7.1/go.mod h1:6Fq8oRcR53rry900zMqJjRRixrwX3KX962/h/Wwjteg=\ngithub.com/stretchr/testify v1.8.0/go.mod h1:yNjHg4UonilssWZ8iaSj1OCr/vHnekPRkoO+kdMU+MU=\ngithub.com/stretchr/testify v1.8.1/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/stretchr/testify v1.8.2 h1:+h33VjcLVPDHtOdpUCuF+7gSuG3yGIftsP1YvFihtJ8=\ngithub.com/stretchr/testify v1.8.2/go.mod h1:w2LPCIKwWwSfY2zedu0+kehJoqGctiVI29o6fzry7u4=\ngithub.com/yuin/goldmark v1.4.13/go.mod h1:6yULJ656Px+3vBD8DxQVa3kxgyrAnzto9xy5taEt/CY=\ngo.opencensus.io v0.24.0 h1:y73uSU6J157QMP2kn2r30vwW1A2W2WFwSCGnAVxeaD0=\ngo.opencensus.io v0.24.0/go.mod h1:vNK8G9p7aAivkbmorf4v+7Hgx+Zs0yY+0fOtgBfjQKo=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.54.0 h1:r6I7RJCN86bpD/FQwedZ0vSixDpwuWREjW9oRMsmqDc=\ngo.opentelemetry.io/contrib/instrumentation/google.golang.org/grpc/otelgrpc v0.54.0/go.mod h1:B9yO6b04uB80CzjedvewuqDhxJxi11s7/GtiGa8bAjI=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.54.0 h1:TT4fX+nBOA/+LUkobKGW1ydGcn+G3vRw9+g5HwCphpk=\ngo.opentelemetry.io/contrib/instrumentation/net/http/otelhttp v0.54.0/go.mod h1:L7UH0GbB0p47T4Rri3uHjbpCFYrVrwc1I25QhNPiGK8=\ngo.opentelemetry.io/otel v1.31.0 h1:NsJcKPIW0D0H3NgzPDHmo0WW6SptzPdqg/L1zsIm2hY=\ngo.opentelemetry.io/otel v1.31.0/go.mod h1:O0C14Yl9FgkjqcCZAsE053C13OaddMYr/hz6clDkEJE=\ngo.opentelemetry.io/otel/metric v1.31.0 h1:FSErL0ATQAmYHUIzSezZibnyVlft1ybhy4ozRPcF2fE=\ngo.opentelemetry.io/otel/metric v1.31.0/go.mod h1:C3dEloVbLuYoX41KpmAhOqNriGbA+qqH6PQ5E5mUfnY=\ngo.opentelemetry.io/otel/sdk v1.31.0 h1:xLY3abVHYZ5HSfOg3l2E5LUj2Cwva5Y7yGxnSW9H5Gk=\ngo.opentelemetry.io/otel/sdk v1.31.0/go.mod h1:TfRbMdhvxIIr/B2N2LQW2S5v9m3gOQ/08KsbbO5BPT0=\ngo.opentelemetry.io/otel/sdk/metric v1.31.0 h1:i9hxxLJF/9kkvfHppyLL55aW7iIJz4JjxTeYusH7zMc=\ngo.opentelemetry.io/otel/sdk/metric v1.31.0/go.mod h1:CRInTMVvNhUKgSAMbKyTMxqOBC0zgyxzW55lZzX43Y8=\ngo.opentelemetry.io/otel/trace v1.31.0 h1:ffjsj1aRouKewfr85U2aGagJ46+MvodynlQ1HYdmJys=\ngo.opentelemetry.io/otel/trace v1.31.0/go.mod h1:TXZkRk7SM2ZQLtR6eoAWQFIHPvzQ06FJAsO1tJg480A=\ngocloud.dev v0.40.0 h1:f8LgP+4WDqOG/RXoUcyLpeIAGOcAbZrZbDQCUee10ng=\ngocloud.dev v0.40.0/go.mod h1:drz+VyYNBvrMTW0KZiBAYEdl8lbNZx+OQ7oQvdrFmSQ=\ngolang.org/x/crypto v0.0.0-20190308221718-c2843e01d9a2/go.mod h1:djNgcEr1/C05ACkg1iLfiJU5Ep61QUkGW8qpdssI0+w=\ngolang.org/x/crypto v0.0.0-20200622213623-75b288015ac9/go.mod h1:LzIPMQfyMNhhGPhUkYOs5KpL4U8rLKemX1yGLhDgUto=\ngolang.org/x/crypto v0.0.0-20210921155107-089bfa567519/go.mod h1:GvvjBRRGRdwPK5ydBHafDWAxML/pGHZbMvKqRZ5+Abc=\ngolang.org/x/crypto v0.31.0 h1:ihbySMvVjLAeSH1IbfcRTkD/iNscyz8rGzjF/E5hV6U=\ngolang.org/x/crypto v0.31.0/go.mod h1:kDsLvtWBEx7MV9tJOj9bnXsPbxwJQ6csT/x4KIN4Ssk=\ngolang.org/x/exp v0.0.0-20190121172915-509febef88a4/go.mod h1:CJ0aWSM057203Lf6IL+f9T1iT9GByDxfZKAQTCR3kQA=\ngolang.org/x/image v0.0.0-20191009234506-e7c1f5e7dbb8/go.mod h1:FeLwcggjj3mMvU+oOTbSwawSJRM1uh48EjtB4UJZlP0=\ngolang.org/x/image v0.23.0 h1:HseQ7c2OpPKTPVzNjG5fwJsOTCiiwS4QdsYi5XU6H68=\ngolang.org/x/image v0.23.0/go.mod h1:wJJBTdLfCCf3tiHa1fNxpZmUI4mmoZvwMCPP0ddoNKY=\ngolang.org/x/lint v0.0.0-20181026193005-c67002cb31c3/go.mod h1:UVdnD1Gm6xHRNCYTkRU2/jEulfH38KcIWyp/GAMgvoE=\ngolang.org/x/lint v0.0.0-20190227174305-5b3e6a55c961/go.mod h1:wehouNa3lNwaWXcvxsM5YxQ5yQlVC4a0KAMCusXpPoU=\ngolang.org/x/lint v0.0.0-20190313153728-d0100b6bd8b3/go.mod h1:6SW0HCj/g11FgYtHlgUYUwCkIfeOF89ocIRzGO/8vkc=\ngolang.org/x/mod v0.6.0-dev.0.20220419223038-86c51ed26bb4/go.mod h1:jJ57K6gSWd91VN4djpZkiMVwK6gcyfeH4XE8wZrZaV4=\ngolang.org/x/mod v0.22.0 h1:D4nJWe9zXqHOmWqj4VMOJhvzj7bEZg4wEYa759z1pH4=\ngolang.org/x/mod v0.22.0/go.mod h1:6SkKJ3Xj0I0BrPOZoBy3bdMptDDU9oJrpohJ3eWZ1fY=\ngolang.org/x/net v0.0.0-20180724234803-3673e40ba225/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20180826012351-8a410e7b638d/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190213061140-3a22650c66bd/go.mod h1:mL1N/T3taQHkDXs73rZJwtUhF3w3ftmwwsq0BUmARs4=\ngolang.org/x/net v0.0.0-20190311183353-d8887717615a/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190404232315-eb5bcb51f2a3/go.mod h1:t9HGtf8HONx5eT2rtn7q6eTqICYqUVnKs3thJo3Qplg=\ngolang.org/x/net v0.0.0-20190603091049-60506f45cf65/go.mod h1:HSz+uSET+XFnRR8LxR5pz3Of3rY3CfYBVs4xY44aLks=\ngolang.org/x/net v0.0.0-20190620200207-3b0461eec859/go.mod h1:z5CRVTTTmAJ677TzLLGU+0bjPO0LkuOLi4/5GtJWs/s=\ngolang.org/x/net v0.0.0-20201110031124-69a78807bb2b/go.mod h1:sp8m0HH+o8qH0wwXwYZr8TS3Oi6o0r6Gce1SSxlDquU=\ngolang.org/x/net v0.0.0-20210226172049-e18ecbb05110/go.mod h1:m0MpNAwzfU5UDzcl9v0D8zg8gWTRqZa9RBIspLL5mdg=\ngolang.org/x/net v0.0.0-20220722155237-a158d28d115b/go.mod h1:XRhObCWvk6IyKnWLug+ECip1KBveYUHfp+8e9klMJ9c=\ngolang.org/x/net v0.33.0 h1:74SYHlV8BIgHIFC/LrYkOGIwL19eTYXQ5wc6TBuO36I=\ngolang.org/x/net v0.33.0/go.mod h1:HXLR5J+9DxmrqMwG9qjGCxZ+zKXxBru04zlTvWlWuN4=\ngolang.org/x/oauth2 v0.0.0-20180821212333-d2e6202438be/go.mod h1:N/0e6XlmueqKjAGxoOufVs8QHGRruUQn6yWY3a++T0U=\ngolang.org/x/oauth2 v0.24.0 h1:KTBBxWqUa0ykRPLtV69rRto9TLXcqYkeswu48x/gvNE=\ngolang.org/x/oauth2 v0.24.0/go.mod h1:XYTD2NtWslqkgxebSiOHnXEap4TF09sJSc7H1sXbhtI=\ngolang.org/x/sync v0.0.0-20180314180146-1d60e4601c6f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20181108010431-42b317875d0f/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20190423024810-112230192c58/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.0.0-20220722155255-886fb9371eb4/go.mod h1:RxMgew5VJxzue5/jJTE5uejpjVlOe/izrB70Jof72aM=\ngolang.org/x/sync v0.10.0 h1:3NQrjDixjgGwUOCaF8w2+VYHv0Ve/vGYSbdkTa98gmQ=\ngolang.org/x/sync v0.10.0/go.mod h1:Czt+wKu1gCyEFDUtn0jG5QVvpJ6rzVqr5aXyt9drQfk=\ngolang.org/x/sys v0.0.0-20180830151530-49385e6e1522/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190215142949-d0b11bdaac8a/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190222072716-a9d3bda3a223/go.mod h1:STP8DvDyc/dI5b8T5hshtkjS+E42TnysNCUPdjciGhY=\ngolang.org/x/sys v0.0.0-20190412213103-97732733099d/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20200930185726-fdedc70b468f/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20201119102817-f84b799fce68/go.mod h1:h1NjWce9XRLGQEsW7wpKNCjG9DtNlClVuFLEZdDNbEs=\ngolang.org/x/sys v0.0.0-20210615035016-665e8c7367d1/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220520151302-bc2c85ada10a/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220722155257-8c9f86f7a55f/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.0.0-20220811171246-fbc7d0a398ab/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.6.0/go.mod h1:oPkhp1MJrh7nUepCBck5+mAzfO9JrbApNNgaTdGDITg=\ngolang.org/x/sys v0.28.0 h1:Fksou7UEQUWlKvIdsqzJmUmCX3cZuD2+P3XyyzwMhlA=\ngolang.org/x/sys v0.28.0/go.mod h1:/VUhepiaJMQUp4+oa/7Zr1D23ma6VTLIYjOOTFZPUcA=\ngolang.org/x/term v0.0.0-20201126162022-7de9c90e9dd1/go.mod h1:bj7SfCRtBDWHUb9snDiAeCFNEtKQo2Wmx5Cou7ajbmo=\ngolang.org/x/term v0.0.0-20210927222741-03fcf44c2211/go.mod h1:jbD1KX2456YbFQfuXm/mYQcufACuNUgVhRMnK/tPxf8=\ngolang.org/x/term v0.27.0 h1:WP60Sv1nlK1T6SupCHbXzSaN0b9wUmsPoRS9b61A23Q=\ngolang.org/x/term v0.27.0/go.mod h1:iMsnZpn0cago0GOrHO2+Y7u7JPn5AylBrcoWkElMTSM=\ngolang.org/x/text v0.3.0/go.mod h1:NqM8EUOU14njkJ3fqMW+pc6Ldnwhi/IjpwHt7yyuwOQ=\ngolang.org/x/text v0.3.2/go.mod h1:bEr9sfX3Q8Zfm5fL9x+3itogRgK3+ptLWKqgva+5dAk=\ngolang.org/x/text v0.3.3/go.mod h1:5Zoc/QRtKVWzQhOtBMvqHzDpF6irO9z98xDceosuGiQ=\ngolang.org/x/text v0.3.7/go.mod h1:u+2+/6zg+i71rQMx5EYifcz6MCKuco9NR6JIITiCfzQ=\ngolang.org/x/text v0.4.0/go.mod h1:mrYo+phRRbMaCq/xk9113O4dZlRixOauAjOtrjsXDZ8=\ngolang.org/x/text v0.21.0 h1:zyQAAkrwaneQ066sspRyJaG9VNi/YJ1NfzcGB3hZ/qo=\ngolang.org/x/text v0.21.0/go.mod h1:4IBbMaMmOPCJ8SecivzSH54+73PCFmPWxNTLm+vZkEQ=\ngolang.org/x/time v0.8.0 h1:9i3RxcPv3PZnitoVGMPDKZSq1xW1gK1Xy3ArNOGZfEg=\ngolang.org/x/time v0.8.0/go.mod h1:3BpzKBy/shNhVucY/MWOyx10tF3SFh9QdLuxbVysPQM=\ngolang.org/x/tools v0.0.0-20180917221912-90fa682c2a6e/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190114222345-bf090417da8b/go.mod h1:n7NCudcB/nEzxVGmLbDWY5pfWTLqBcC2KZ6jyYvM4mQ=\ngolang.org/x/tools v0.0.0-20190226205152-f727befe758c/go.mod h1:9Yl7xja0Znq3iFh3HoIrodX9oNMXvdceNzlUR8zjMvY=\ngolang.org/x/tools v0.0.0-20190311212946-11955173bddd/go.mod h1:LCzVGOaR6xXOjkQ3onu1FJEFr0SW1gC7cKk1uF8kGRs=\ngolang.org/x/tools v0.0.0-20190524140312-2c0ae7006135/go.mod h1:RgjU9mgBXZiqYHBnxXauZ1Gv1EHHAz9KjViQ78xBX0Q=\ngolang.org/x/tools v0.0.0-20191119224855-298f0cb1881e/go.mod h1:b+2E5dAYhXwXZwtnZ6UAqBI28+e2cm9otk0dWdXHAEo=\ngolang.org/x/tools v0.1.12/go.mod h1:hNGJHUnrk76NpqgfD5Aqm5Crs+Hm0VOH/i9J2+nxYbc=\ngolang.org/x/tools v0.28.0 h1:WuB6qZ4RPCQo5aP3WdKZS7i595EdWqWR8vqJTlwTVK8=\ngolang.org/x/tools v0.28.0/go.mod h1:dcIOrVd3mfQKTgrDVQHqCPMWy6lnhfhtX3hLXYVLfRw=\ngolang.org/x/xerrors v0.0.0-20190717185122-a985d3407aa7/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20191204190536-9bdfabe68543/go.mod h1:I/5z698sn9Ka8TeJc9MKroUUfqBBauWjQqLJ2OPfmY0=\ngolang.org/x/xerrors v0.0.0-20240903120638-7835f813f4da h1:noIWHXmPHxILtqtCOPIhSt0ABwskkZKjD3bXGnZGpNY=\ngolang.org/x/xerrors v0.0.0-20240903120638-7835f813f4da/go.mod h1:NDW/Ps6MPRej6fsCIbMTohpP40sJ/P/vI1MoTEGwX90=\ngoogle.golang.org/api v0.214.0 h1:h2Gkq07OYi6kusGOaT/9rnNljuXmqPnaig7WGPmKbwA=\ngoogle.golang.org/api v0.214.0/go.mod h1:bYPpLG8AyeMWwDU6NXoB00xC0DFkikVvd5MfwoxjLqE=\ngoogle.golang.org/appengine v1.1.0/go.mod h1:EbEs0AVv82hx2wNQdGPgUI5lhzA/G0D9YwlJXL52JkM=\ngoogle.golang.org/appengine v1.4.0/go.mod h1:xpcJRLb0r/rnEns0DIKYYv+WjYCduHsrkT7/EB5XEv4=\ngoogle.golang.org/appengine v1.6.5/go.mod h1:8WjMMxjGQR8xUklV/ARdw2HLXBOI7O7uCIDZVag1xfc=\ngoogle.golang.org/genproto v0.0.0-20180817151627-c66870c02cf8/go.mod h1:JiN7NxoALGmiZfu7CAH4rXhgtRTLTxftemlI0sWmxmc=\ngoogle.golang.org/genproto v0.0.0-20190819201941-24fa4b261c55/go.mod h1:DMBHOl98Agz4BDEuKkezgsaosCRResVns1a3J2ZsMNc=\ngoogle.golang.org/genproto v0.0.0-20200526211855-cb27e3aa2013/go.mod h1:NbSheEEYHJ7i3ixzK3sjbqSGDJWnxyFXZblF3eUsNvo=\ngoogle.golang.org/genproto v0.0.0-20240812133136-8ffd90a71988 h1:CT2Thj5AuPV9phrYMtzX11k+XkzMGfRAet42PmoTATM=\ngoogle.golang.org/genproto v0.0.0-20240812133136-8ffd90a71988/go.mod h1:7uvplUBj4RjHAxIZ//98LzOvrQ04JBkaixRmCMI29hc=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20241209162323-e6fa225c2576 h1:CkkIfIt50+lT6NHAVoRYEyAvQGFM7xEwXUUywFvEb3Q=\ngoogle.golang.org/genproto/googleapis/api v0.0.0-20241209162323-e6fa225c2576/go.mod h1:1R3kvZ1dtP3+4p4d3G8uJ8rFk/fWlScl38vanWACI08=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241230172942-26aa7a208def h1:4P81qv5JXI/sDNae2ClVx88cgDDA6DPilADkG9tYKz8=\ngoogle.golang.org/genproto/googleapis/rpc v0.0.0-20241230172942-26aa7a208def/go.mod h1:bdAgzvd4kFrpykc5/AC2eLUiegK9T/qxZHD4hXYf/ho=\ngoogle.golang.org/grpc v1.19.0/go.mod h1:mqu4LbDTu4XGKhr4mRzUsmM4RtVoemTSY81AxZiDr8c=\ngoogle.golang.org/grpc v1.23.0/go.mod h1:Y5yQAOtifL1yxbo5wqy6BxZv8vAUGQwXBOALyacEbxg=\ngoogle.golang.org/grpc v1.25.1/go.mod h1:c3i+UQWmh7LiEpx4sFZnkU36qjEYZ0imhYfXVyQciAY=\ngoogle.golang.org/grpc v1.27.0/go.mod h1:qbnxyOmOxrQa7FizSgH+ReBfzJrCY1pSN7KXBS8abTk=\ngoogle.golang.org/grpc v1.33.2/go.mod h1:JMHMWHQWaTccqQQlmk3MJZS+GWXOdAesneDmEnv2fbc=\ngoogle.golang.org/grpc v1.69.2 h1:U3S9QEtbXC0bYNvRtcoklF3xGtLViumSYxWykJS+7AU=\ngoogle.golang.org/grpc v1.69.2/go.mod h1:vyjdE6jLBI76dgpDojsFGNaHlxdjXN9ghpnd2o7JGZ4=\ngoogle.golang.org/protobuf v0.0.0-20200109180630-ec00e32a8dfd/go.mod h1:DFci5gLYBciE7Vtevhsrf46CRTquxDuWsQurQQe4oz8=\ngoogle.golang.org/protobuf v0.0.0-20200221191635-4d8936d0db64/go.mod h1:kwYJMbMJ01Woi6D6+Kah6886xMZcty6N08ah7+eCXa0=\ngoogle.golang.org/protobuf v0.0.0-20200228230310-ab0ca4ff8a60/go.mod h1:cfTl7dwQJ+fmap5saPgwCLgHXTUD7jkjRqWcaiX5VyM=\ngoogle.golang.org/protobuf v1.20.1-0.20200309200217-e05f789c0967/go.mod h1:A+miEFZTKqfCUM6K7xSMQL9OKL/b6hQv+e19PK+JZNE=\ngoogle.golang.org/protobuf v1.21.0/go.mod h1:47Nbq4nVaFHyn7ilMalzfO3qCViNmqZ2kzikPIcrTAo=\ngoogle.golang.org/protobuf v1.22.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.0/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.23.1-0.20200526195155-81db48ad09cc/go.mod h1:EGpADcykh3NcUnDUJcl1+ZksZNG86OlYog2l/sGQquU=\ngoogle.golang.org/protobuf v1.25.0/go.mod h1:9JNX74DMeImyA3h4bdi1ymwjUzf21/xIlbajtzgsN7c=\ngoogle.golang.org/protobuf v1.36.1 h1:yBPeRvTftaleIgM3PZ/WBIZ7XM/eEYAaEyCwvyjq/gk=\ngoogle.golang.org/protobuf v1.36.1/go.mod h1:9fA7Ob0pmnwhb644+1+CVWFRbNajQ6iRojtC/QF5bRE=\ngopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405/go.mod h1:Co6ibVJAznAaIkqp8huTwlJQCZ016jof/cbN4VW5Yz0=\ngopkg.in/yaml.v2 v2.2.2/go.mod h1:hI93XBmqTisBFMUTm0b8Fm+jr3Dg1NNxqwp+5A1VGuI=\ngopkg.in/yaml.v2 v2.4.0 h1:D8xgwECY7CYvx+Y2n4sBz93Jn9JRvxdiyyo8CTfuKaY=\ngopkg.in/yaml.v2 v2.4.0/go.mod h1:RDklbk79AGWmwhnvt/jBztapEOGDOx6ZbXqjP6csGnQ=\ngopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\ngopkg.in/yaml.v3 v3.0.1 h1:fxVm/GzAzEWqLHuvctI91KS9hhNmmWOoWu0XTYJS7CA=\ngopkg.in/yaml.v3 v3.0.1/go.mod h1:K4uyk7z7BCEPqu6E+C64Yfv1cQ7kz7rIZviUmN+EgEM=\nhonnef.co/go/tools v0.0.0-20190102054323-c2f93a96b099/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nhonnef.co/go/tools v0.0.0-20190523083050-ea95bdfd59fc/go.mod h1:rf3lG4BRIbNafJWhAfAdb/ePZxsR/4RtNHQocxwk9r4=\nmodernc.org/cc/v4 v4.21.4 h1:3Be/Rdo1fpr8GrQ7IVw9OHtplU4gWbb+wNgeoBMmGLQ=\nmodernc.org/cc/v4 v4.21.4/go.mod h1:HM7VJTZbUCR3rV8EYBi9wxnJ0ZBRiGE5OeGXNA0IsLQ=\nmodernc.org/ccgo/v4 v4.19.2 h1:lwQZgvboKD0jBwdaeVCTouxhxAyN6iawF3STraAal8Y=\nmodernc.org/ccgo/v4 v4.19.2/go.mod h1:ysS3mxiMV38XGRTTcgo0DQTeTmAO4oCmJl1nX9VFI3s=\nmodernc.org/fileutil v1.3.0 h1:gQ5SIzK3H9kdfai/5x41oQiKValumqNTDXMvKo62HvE=\nmodernc.org/fileutil v1.3.0/go.mod h1:XatxS8fZi3pS8/hKG2GH/ArUogfxjpEKs3Ku3aK4JyQ=\nmodernc.org/gc/v2 v2.4.1 h1:9cNzOqPyMJBvrUipmynX0ZohMhcxPtMccYgGOJdOiBw=\nmodernc.org/gc/v2 v2.4.1/go.mod h1:wzN5dK1AzVGoH6XOzc3YZ+ey/jPgYHLuVckd62P0GYU=\nmodernc.org/gc/v3 v3.0.0-20241223112719-96e2e1e4408d h1:d0JExN5U5FjUVHCP6L9DIlLJBZveR6KUM4AvfDUL3+k=\nmodernc.org/gc/v3 v3.0.0-20241223112719-96e2e1e4408d/go.mod h1:qBSLm/exCqouT2hrfyTKikWKG9IPq8EoX5fS00l3jqk=\nmodernc.org/libc v1.55.3 h1:AzcW1mhlPNrRtjS5sS+eW2ISCgSOLLNyFzRh/V3Qj/U=\nmodernc.org/libc v1.55.3/go.mod h1:qFXepLhz+JjFThQ4kzwzOjA/y/artDeg+pcYnY+Q83w=\nmodernc.org/mathutil v1.7.1 h1:GCZVGXdaN8gTqB1Mf/usp1Y/hSqgI2vAGGP4jZMCxOU=\nmodernc.org/mathutil v1.7.1/go.mod h1:4p5IwJITfppl0G4sUEDtCr4DthTaT47/N3aT6MhfgJg=\nmodernc.org/memory v1.8.0 h1:IqGTL6eFMaDZZhEWwcREgeMXYwmW83LYW8cROZYkg+E=\nmodernc.org/memory v1.8.0/go.mod h1:XPZ936zp5OMKGWPqbD3JShgd/ZoQ7899TUuQqxY+peU=\nmodernc.org/opt v0.1.3 h1:3XOZf2yznlhC+ibLltsDGzABUGVx8J6pnFMS3E4dcq4=\nmodernc.org/opt v0.1.3/go.mod h1:WdSiB5evDcignE70guQKxYUl14mgWtbClRi5wmkkTX0=\nmodernc.org/sortutil v1.2.0 h1:jQiD3PfS2REGJNzNCMMaLSp/wdMNieTbKX920Cqdgqc=\nmodernc.org/sortutil v1.2.0/go.mod h1:TKU2s7kJMf1AE84OoiGppNHJwvB753OYfNl2WRb++Ss=\nmodernc.org/sqlite v1.34.4 h1:sjdARozcL5KJBvYQvLlZEmctRgW9xqIZc2ncN7PU0P8=\nmodernc.org/sqlite v1.34.4/go.mod h1:3QQFCG2SEMtc2nv+Wq4cQCH7Hjcg+p/RMlS1XK+zwbk=\nmodernc.org/strutil v1.2.1 h1:UneZBkQA+DX2Rp35KcM69cSsNES9ly8mQWD71HKlOA0=\nmodernc.org/strutil v1.2.1/go.mod h1:EHkiggD70koQxjVdSBM3JKM7k6L0FbGE5eymy9i3B9A=\nmodernc.org/token v1.1.0 h1:Xl7Ap9dKaEs5kLoOQeQmPWevfnk/DM5qcLcYlA8ys6Y=\nmodernc.org/token v1.1.0/go.mod h1:UGzOrNV1mAFSEB63lOFHIpNRUVMvYTc6yu1SMY/XTDM=\n"
        },
        {
          "name": "golangci.yml",
          "type": "blob",
          "size": 0.4,
          "content": "run:\n  go: 1.23\n  concurrency: 4\n  timeout: 10m\n\nlinters:\n  disable-all: true\n  enable:\n    - asasalint\n    - asciicheck\n    - gofmt\n    - goimports\n    - gomodguard\n    - goprintffuncname\n    - gosimple\n    - govet\n    - ineffassign\n    - misspell\n    - nakedret\n    - nolintlint\n    - prealloc\n    - prealloc\n    - reassign\n    - staticcheck\n    - typecheck\n    - unconvert\n    - unused\n    - whitespace\n"
        },
        {
          "name": "mails",
          "type": "tree",
          "content": null
        },
        {
          "name": "migrations",
          "type": "tree",
          "content": null
        },
        {
          "name": "modernc_versions_check.go",
          "type": "blob",
          "size": 2.83,
          "content": "package pocketbase\n\nimport (\n\t\"fmt\"\n\t\"log/slog\"\n\t\"runtime/debug\"\n\n\t\"github.com/fatih/color\"\n\t\"github.com/pocketbase/pocketbase/core\"\n)\n\nconst (\n\texpectedDriverVersion = \"v1.34.4\"\n\texpectedLibcVersion   = \"v1.55.3\"\n\n\t// ModerncDepsCheckHookId is the id of the hook that performs the modernc.org/* deps checks.\n\t// It could be used for removing/unbinding the hook if you don't want the checks.\n\tModerncDepsCheckHookId = \"pbModerncDepsCheck\"\n)\n\n// checkModerncDeps checks whether the current binary was buit with the\n// expected and tested modernc driver dependencies.\n//\n// This is needed because modernc.org/libc doesn't follow semantic versioning\n// and using a version different from the one in the go.mod of modernc.org/sqlite\n// could have unintended side-effects and cause obscure build and runtime bugs\n// (https://github.com/pocketbase/pocketbase/issues/6136).\nfunc checkModerncDeps(app core.App) {\n\tinfo, ok := debug.ReadBuildInfo()\n\tif !ok {\n\t\treturn // no build info (probably compiled without module support)\n\t}\n\n\tvar driverVersion, libcVersion string\n\n\tfor _, dep := range info.Deps {\n\t\tswitch dep.Path {\n\t\tcase \"modernc.org/libc\":\n\t\t\tlibcVersion = dep.Version\n\t\tcase \"modernc.org/sqlite\":\n\t\t\tdriverVersion = dep.Version\n\t\t}\n\n\t\t// no need to further search if both deps are located\n\t\tif driverVersion != \"\" && libcVersion != \"\" {\n\t\t\tbreak\n\t\t}\n\t}\n\n\t// not using the default driver\n\tif driverVersion == \"\" {\n\t\treturn\n\t}\n\n\tvar msg string\n\tif driverVersion != expectedDriverVersion {\n\t\tmsg = fmt.Sprintf(\n\t\t\t\"You are using modernc.org/sqlite %s which differs from the expected and tested %s.\\n\"+\n\t\t\t\t\"Make sure to either manually update in your go.mod the dependency version to the expected one OR if you want to keep yours \"+\n\t\t\t\t\"ensure that its indirect modernc.org/libc dependency has the same version as in the https://gitlab.com/cznic/sqlite/-/blob/master/go.mod, \"+\n\t\t\t\t\"otherwise it could result in unexpected build or runtime errors.\",\n\t\t\tdriverVersion,\n\t\t\texpectedDriverVersion,\n\t\t)\n\t\tapp.Logger().Warn(msg, slog.String(\"current\", driverVersion), slog.String(\"expected\", expectedDriverVersion))\n\t} else if libcVersion != expectedLibcVersion {\n\t\tmsg = fmt.Sprintf(\n\t\t\t\"You are using modernc.org/libc %s which differs from the expected and tested %s.\\n\"+\n\t\t\t\t\"Please update your go.mod and manually set modernc.org/libc to %s, otherwise it could result in unexpected build or runtime errors \"+\n\t\t\t\t\"(you may have to also run 'go clean -modcache' to clear the cache if the warning persists).\",\n\t\t\tlibcVersion,\n\t\t\texpectedLibcVersion,\n\t\t\texpectedLibcVersion,\n\t\t)\n\t\tapp.Logger().Warn(msg, slog.String(\"current\", libcVersion), slog.String(\"expected\", expectedLibcVersion))\n\t}\n\n\t// ensure that the message is printed to the default stderr too\n\t// (when in dev mode this is not needed because we print all logs)\n\tif msg != \"\" && !app.IsDev() {\n\t\tcolor.Yellow(\"\\nWARN \" + msg + \"\\n\\n\")\n\t}\n}\n"
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "pocketbase.go",
          "type": "blob",
          "size": 9.13,
          "content": "package pocketbase\n\nimport (\n\t\"io\"\n\t\"os\"\n\t\"os/signal\"\n\t\"path/filepath\"\n\t\"strings\"\n\t\"syscall\"\n\t\"time\"\n\n\t\"github.com/fatih/color\"\n\t\"github.com/pocketbase/pocketbase/cmd\"\n\t\"github.com/pocketbase/pocketbase/core\"\n\t\"github.com/pocketbase/pocketbase/tools/hook\"\n\t\"github.com/pocketbase/pocketbase/tools/list\"\n\t\"github.com/pocketbase/pocketbase/tools/routine\"\n\t\"github.com/spf13/cobra\"\n\n\t_ \"github.com/pocketbase/pocketbase/migrations\"\n)\n\nvar _ core.App = (*PocketBase)(nil)\n\n// Version of PocketBase\nvar Version = \"(untracked)\"\n\n// PocketBase defines a PocketBase app launcher.\n//\n// It implements [core.App] via embedding and all of the app interface methods\n// could be accessed directly through the instance (eg. PocketBase.DataDir()).\ntype PocketBase struct {\n\tcore.App\n\n\tdevFlag           bool\n\tdataDirFlag       string\n\tencryptionEnvFlag string\n\tqueryTimeout      int\n\thideStartBanner   bool\n\n\t// RootCmd is the main console command\n\tRootCmd *cobra.Command\n}\n\n// Config is the PocketBase initialization config struct.\ntype Config struct {\n\t// hide the default console server info on app startup\n\tHideStartBanner bool\n\n\t// optional default values for the console flags\n\tDefaultDev           bool\n\tDefaultDataDir       string // if not set, it will fallback to \"./pb_data\"\n\tDefaultEncryptionEnv string\n\tDefaultQueryTimeout  time.Duration // default to core.DefaultQueryTimeout (in seconds)\n\n\t// optional DB configurations\n\tDataMaxOpenConns int                // default to core.DefaultDataMaxOpenConns\n\tDataMaxIdleConns int                // default to core.DefaultDataMaxIdleConns\n\tAuxMaxOpenConns  int                // default to core.DefaultAuxMaxOpenConns\n\tAuxMaxIdleConns  int                // default to core.DefaultAuxMaxIdleConns\n\tDBConnect        core.DBConnectFunc // default to core.dbConnect\n}\n\n// New creates a new PocketBase instance with the default configuration.\n// Use [NewWithConfig] if you want to provide a custom configuration.\n//\n// Note that the application will not be initialized/bootstrapped yet,\n// aka. DB connections, migrations, app settings, etc. will not be accessible.\n// Everything will be initialized when [PocketBase.Start] is executed.\n// If you want to initialize the application before calling [PocketBase.Start],\n// then you'll have to manually call [PocketBase.Bootstrap].\nfunc New() *PocketBase {\n\t_, isUsingGoRun := inspectRuntime()\n\n\treturn NewWithConfig(Config{\n\t\tDefaultDev: isUsingGoRun,\n\t})\n}\n\n// NewWithConfig creates a new PocketBase instance with the provided config.\n//\n// Note that the application will not be initialized/bootstrapped yet,\n// aka. DB connections, migrations, app settings, etc. will not be accessible.\n// Everything will be initialized when [PocketBase.Start] is executed.\n// If you want to initialize the application before calling [PocketBase.Start],\n// then you'll have to manually call [PocketBase.Bootstrap].\nfunc NewWithConfig(config Config) *PocketBase {\n\t// initialize a default data directory based on the executable baseDir\n\tif config.DefaultDataDir == \"\" {\n\t\tbaseDir, _ := inspectRuntime()\n\t\tconfig.DefaultDataDir = filepath.Join(baseDir, \"pb_data\")\n\t}\n\n\tif config.DefaultQueryTimeout == 0 {\n\t\tconfig.DefaultQueryTimeout = core.DefaultQueryTimeout\n\t}\n\n\texecutableName := filepath.Base(os.Args[0])\n\n\tpb := &PocketBase{\n\t\tRootCmd: &cobra.Command{\n\t\t\tUse:     executableName,\n\t\t\tShort:   executableName + \" CLI\",\n\t\t\tVersion: Version,\n\t\t\tFParseErrWhitelist: cobra.FParseErrWhitelist{\n\t\t\t\tUnknownFlags: true,\n\t\t\t},\n\t\t\t// no need to provide the default cobra completion command\n\t\t\tCompletionOptions: cobra.CompletionOptions{\n\t\t\t\tDisableDefaultCmd: true,\n\t\t\t},\n\t\t},\n\t\tdevFlag:           config.DefaultDev,\n\t\tdataDirFlag:       config.DefaultDataDir,\n\t\tencryptionEnvFlag: config.DefaultEncryptionEnv,\n\t\thideStartBanner:   config.HideStartBanner,\n\t}\n\n\t// replace with a colored stderr writer\n\tpb.RootCmd.SetErr(newErrWriter())\n\n\t// parse base flags\n\t// (errors are ignored, since the full flags parsing happens on Execute())\n\tpb.eagerParseFlags(&config)\n\n\t// initialize the app instance\n\tpb.App = core.NewBaseApp(core.BaseAppConfig{\n\t\tIsDev:            pb.devFlag,\n\t\tDataDir:          pb.dataDirFlag,\n\t\tEncryptionEnv:    pb.encryptionEnvFlag,\n\t\tQueryTimeout:     time.Duration(pb.queryTimeout) * time.Second,\n\t\tDataMaxOpenConns: config.DataMaxOpenConns,\n\t\tDataMaxIdleConns: config.DataMaxIdleConns,\n\t\tAuxMaxOpenConns:  config.AuxMaxOpenConns,\n\t\tAuxMaxIdleConns:  config.AuxMaxIdleConns,\n\t\tDBConnect:        config.DBConnect,\n\t})\n\n\t// hide the default help command (allow only `--help` flag)\n\tpb.RootCmd.SetHelpCommand(&cobra.Command{Hidden: true})\n\n\t// https://github.com/pocketbase/pocketbase/issues/6136\n\tpb.OnBootstrap().Bind(&hook.Handler[*core.BootstrapEvent]{\n\t\tId: ModerncDepsCheckHookId,\n\t\tFunc: func(be *core.BootstrapEvent) error {\n\t\t\tif err := be.Next(); err != nil {\n\t\t\t\treturn err\n\t\t\t}\n\n\t\t\t// run separately to avoid blocking\n\t\t\tapp := be.App\n\t\t\troutine.FireAndForget(func() {\n\t\t\t\tcheckModerncDeps(app)\n\t\t\t})\n\n\t\t\treturn nil\n\t\t},\n\t})\n\n\treturn pb\n}\n\n// Start starts the application, aka. registers the default system\n// commands (serve, superuser, version) and executes pb.RootCmd.\nfunc (pb *PocketBase) Start() error {\n\t// register system commands\n\tpb.RootCmd.AddCommand(cmd.NewSuperuserCommand(pb))\n\tpb.RootCmd.AddCommand(cmd.NewServeCommand(pb, !pb.hideStartBanner))\n\n\treturn pb.Execute()\n}\n\n// Execute initializes the application (if not already) and executes\n// the pb.RootCmd with graceful shutdown support.\n//\n// This method differs from pb.Start() by not registering the default\n// system commands!\nfunc (pb *PocketBase) Execute() error {\n\tif !pb.skipBootstrap() {\n\t\tif err := pb.Bootstrap(); err != nil {\n\t\t\treturn err\n\t\t}\n\t}\n\n\tdone := make(chan bool, 1)\n\n\t// listen for interrupt signal to gracefully shutdown the application\n\tgo func() {\n\t\tsigch := make(chan os.Signal, 1)\n\t\tsignal.Notify(sigch, os.Interrupt, syscall.SIGTERM)\n\t\t<-sigch\n\n\t\tdone <- true\n\t}()\n\n\t// execute the root command\n\tgo func() {\n\t\t// note: leave to the commands to decide whether to print their error\n\t\tpb.RootCmd.Execute()\n\n\t\tdone <- true\n\t}()\n\n\t<-done\n\n\t// trigger cleanups\n\tevent := new(core.TerminateEvent)\n\tevent.App = pb\n\treturn pb.OnTerminate().Trigger(event, func(e *core.TerminateEvent) error {\n\t\treturn e.App.ResetBootstrapState()\n\t})\n}\n\n// eagerParseFlags parses the global app flags before calling pb.RootCmd.Execute().\n// so we can have all PocketBase flags ready for use on initialization.\nfunc (pb *PocketBase) eagerParseFlags(config *Config) error {\n\tpb.RootCmd.PersistentFlags().StringVar(\n\t\t&pb.dataDirFlag,\n\t\t\"dir\",\n\t\tconfig.DefaultDataDir,\n\t\t\"the PocketBase data directory\",\n\t)\n\n\tpb.RootCmd.PersistentFlags().StringVar(\n\t\t&pb.encryptionEnvFlag,\n\t\t\"encryptionEnv\",\n\t\tconfig.DefaultEncryptionEnv,\n\t\t\"the env variable whose value of 32 characters will be used \\nas encryption key for the app settings (default none)\",\n\t)\n\n\tpb.RootCmd.PersistentFlags().BoolVar(\n\t\t&pb.devFlag,\n\t\t\"dev\",\n\t\tconfig.DefaultDev,\n\t\t\"enable dev mode, aka. printing logs and sql statements to the console\",\n\t)\n\n\tpb.RootCmd.PersistentFlags().IntVar(\n\t\t&pb.queryTimeout,\n\t\t\"queryTimeout\",\n\t\tint(config.DefaultQueryTimeout.Seconds()),\n\t\t\"the default SELECT queries timeout in seconds\",\n\t)\n\n\treturn pb.RootCmd.ParseFlags(os.Args[1:])\n}\n\n// skipBootstrap eagerly checks if the app should skip the bootstrap process:\n// - already bootstrapped\n// - is unknown command\n// - is the default help command\n// - is the default version command\n//\n// https://github.com/pocketbase/pocketbase/issues/404\n// https://github.com/pocketbase/pocketbase/discussions/1267\nfunc (pb *PocketBase) skipBootstrap() bool {\n\tflags := []string{\n\t\t\"-h\",\n\t\t\"--help\",\n\t\t\"-v\",\n\t\t\"--version\",\n\t}\n\n\tif pb.IsBootstrapped() {\n\t\treturn true // already bootstrapped\n\t}\n\n\tcmd, _, err := pb.RootCmd.Find(os.Args[1:])\n\tif err != nil {\n\t\treturn true // unknown command\n\t}\n\n\tfor _, arg := range os.Args {\n\t\tif !list.ExistInSlice(arg, flags) {\n\t\t\tcontinue\n\t\t}\n\n\t\t// ensure that there is no user defined flag with the same name/shorthand\n\t\ttrimmed := strings.TrimLeft(arg, \"-\")\n\t\tif len(trimmed) > 1 && cmd.Flags().Lookup(trimmed) == nil {\n\t\t\treturn true\n\t\t}\n\t\tif len(trimmed) == 1 && cmd.Flags().ShorthandLookup(trimmed) == nil {\n\t\t\treturn true\n\t\t}\n\t}\n\n\treturn false\n}\n\n// inspectRuntime tries to find the base executable directory and how it was run.\n//\n// note: we are using os.Args[0] and not os.Executable() since it could\n// break existing aliased binaries (eg. the community maintained homebrew package)\nfunc inspectRuntime() (baseDir string, withGoRun bool) {\n\tif strings.HasPrefix(os.Args[0], os.TempDir()) {\n\t\t// probably ran with go run\n\t\twithGoRun = true\n\t\tbaseDir, _ = os.Getwd()\n\t} else {\n\t\t// probably ran with go build\n\t\twithGoRun = false\n\t\tbaseDir = filepath.Dir(os.Args[0])\n\t}\n\treturn\n}\n\n// newErrWriter returns a red colored stderr writter.\nfunc newErrWriter() *coloredWriter {\n\treturn &coloredWriter{\n\t\tw: os.Stderr,\n\t\tc: color.New(color.FgRed),\n\t}\n}\n\n// coloredWriter is a small wrapper struct to construct a [color.Color] writter.\ntype coloredWriter struct {\n\tw io.Writer\n\tc *color.Color\n}\n\n// Write writes the p bytes using the colored writer.\nfunc (colored *coloredWriter) Write(p []byte) (n int, err error) {\n\tcolored.c.SetWriter(colored.w)\n\tdefer colored.c.UnsetWriter(colored.w)\n\n\treturn colored.c.Print(string(p))\n}\n"
        },
        {
          "name": "pocketbase_test.go",
          "type": "blob",
          "size": 4.97,
          "content": "package pocketbase\n\nimport (\n\t\"os\"\n\t\"path/filepath\"\n\t\"testing\"\n\n\t\"github.com/spf13/cobra\"\n)\n\nfunc TestNew(t *testing.T) {\n\t// copy os.Args\n\toriginalArgs := make([]string, len(os.Args))\n\tcopy(originalArgs, os.Args)\n\tdefer func() {\n\t\t// restore os.Args\n\t\tos.Args = originalArgs\n\t}()\n\n\t// change os.Args\n\tos.Args = os.Args[:1]\n\tos.Args = append(\n\t\tos.Args,\n\t\t\"--dir=test_dir\",\n\t\t\"--encryptionEnv=test_encryption_env\",\n\t\t\"--debug=true\",\n\t)\n\n\tapp := New()\n\n\tif app == nil {\n\t\tt.Fatal(\"Expected initialized PocketBase instance, got nil\")\n\t}\n\n\tif app.RootCmd == nil {\n\t\tt.Fatal(\"Expected RootCmd to be initialized, got nil\")\n\t}\n\n\tif app.App == nil {\n\t\tt.Fatal(\"Expected App to be initialized, got nil\")\n\t}\n\n\tif app.DataDir() != \"test_dir\" {\n\t\tt.Fatalf(\"Expected app.DataDir() %q, got %q\", \"test_dir\", app.DataDir())\n\t}\n\n\tif app.EncryptionEnv() != \"test_encryption_env\" {\n\t\tt.Fatalf(\"Expected app.EncryptionEnv() test_encryption_env, got %q\", app.EncryptionEnv())\n\t}\n}\n\nfunc TestNewWithConfig(t *testing.T) {\n\tapp := NewWithConfig(Config{\n\t\tDefaultDataDir:       \"test_dir\",\n\t\tDefaultEncryptionEnv: \"test_encryption_env\",\n\t\tHideStartBanner:      true,\n\t})\n\n\tif app == nil {\n\t\tt.Fatal(\"Expected initialized PocketBase instance, got nil\")\n\t}\n\n\tif app.RootCmd == nil {\n\t\tt.Fatal(\"Expected RootCmd to be initialized, got nil\")\n\t}\n\n\tif app.App == nil {\n\t\tt.Fatal(\"Expected App to be initialized, got nil\")\n\t}\n\n\tif app.hideStartBanner != true {\n\t\tt.Fatal(\"Expected app.hideStartBanner to be true, got false\")\n\t}\n\n\tif app.DataDir() != \"test_dir\" {\n\t\tt.Fatalf(\"Expected app.DataDir() %q, got %q\", \"test_dir\", app.DataDir())\n\t}\n\n\tif app.EncryptionEnv() != \"test_encryption_env\" {\n\t\tt.Fatalf(\"Expected app.EncryptionEnv() %q, got %q\", \"test_encryption_env\", app.EncryptionEnv())\n\t}\n}\n\nfunc TestNewWithConfigAndFlags(t *testing.T) {\n\t// copy os.Args\n\toriginalArgs := make([]string, len(os.Args))\n\tcopy(originalArgs, os.Args)\n\tdefer func() {\n\t\t// restore os.Args\n\t\tos.Args = originalArgs\n\t}()\n\n\t// change os.Args\n\tos.Args = os.Args[:1]\n\tos.Args = append(\n\t\tos.Args,\n\t\t\"--dir=test_dir_flag\",\n\t\t\"--encryptionEnv=test_encryption_env_flag\",\n\t\t\"--debug=false\",\n\t)\n\n\tapp := NewWithConfig(Config{\n\t\tDefaultDataDir:       \"test_dir\",\n\t\tDefaultEncryptionEnv: \"test_encryption_env\",\n\t\tHideStartBanner:      true,\n\t})\n\n\tif app == nil {\n\t\tt.Fatal(\"Expected initialized PocketBase instance, got nil\")\n\t}\n\n\tif app.RootCmd == nil {\n\t\tt.Fatal(\"Expected RootCmd to be initialized, got nil\")\n\t}\n\n\tif app.App == nil {\n\t\tt.Fatal(\"Expected App to be initialized, got nil\")\n\t}\n\n\tif app.hideStartBanner != true {\n\t\tt.Fatal(\"Expected app.hideStartBanner to be true, got false\")\n\t}\n\n\tif app.DataDir() != \"test_dir_flag\" {\n\t\tt.Fatalf(\"Expected app.DataDir() %q, got %q\", \"test_dir_flag\", app.DataDir())\n\t}\n\n\tif app.EncryptionEnv() != \"test_encryption_env_flag\" {\n\t\tt.Fatalf(\"Expected app.EncryptionEnv() %q, got %q\", \"test_encryption_env_flag\", app.EncryptionEnv())\n\t}\n}\n\nfunc TestSkipBootstrap(t *testing.T) {\n\t// copy os.Args\n\toriginalArgs := make([]string, len(os.Args))\n\tcopy(originalArgs, os.Args)\n\tdefer func() {\n\t\t// restore os.Args\n\t\tos.Args = originalArgs\n\t}()\n\n\ttempDir := filepath.Join(os.TempDir(), \"temp_pb_data\")\n\tdefer os.RemoveAll(tempDir)\n\n\t// already bootstrapped\n\tapp0 := NewWithConfig(Config{DefaultDataDir: tempDir})\n\tapp0.Bootstrap()\n\tif v := app0.skipBootstrap(); !v {\n\t\tt.Fatal(\"[bootstrapped] Expected true, got false\")\n\t}\n\n\t// unknown command\n\tos.Args = os.Args[:1]\n\tos.Args = append(os.Args, \"demo\")\n\tapp1 := NewWithConfig(Config{DefaultDataDir: tempDir})\n\tapp1.RootCmd.AddCommand(&cobra.Command{Use: \"test\"})\n\tif v := app1.skipBootstrap(); !v {\n\t\tt.Fatal(\"[unknown] Expected true, got false\")\n\t}\n\n\t// default flags\n\tflagScenarios := []struct {\n\t\tname  string\n\t\tshort string\n\t}{\n\t\t{\"help\", \"h\"},\n\t\t{\"version\", \"v\"},\n\t}\n\n\tfor _, s := range flagScenarios {\n\t\t// base flag\n\t\tos.Args = os.Args[:1]\n\t\tos.Args = append(os.Args, \"--\"+s.name)\n\t\tapp1 := NewWithConfig(Config{DefaultDataDir: tempDir})\n\t\tif v := app1.skipBootstrap(); !v {\n\t\t\tt.Fatalf(\"[--%s] Expected true, got false\", s.name)\n\t\t}\n\n\t\t// short flag\n\t\tos.Args = os.Args[:1]\n\t\tos.Args = append(os.Args, \"-\"+s.short)\n\t\tapp2 := NewWithConfig(Config{DefaultDataDir: tempDir})\n\t\tif v := app2.skipBootstrap(); !v {\n\t\t\tt.Fatalf(\"[-%s] Expected true, got false\", s.short)\n\t\t}\n\n\t\tcustomCmd := &cobra.Command{Use: \"custom\"}\n\t\tcustomCmd.PersistentFlags().BoolP(s.name, s.short, false, \"\")\n\n\t\t// base flag in custom command\n\t\tos.Args = os.Args[:1]\n\t\tos.Args = append(os.Args, \"custom\")\n\t\tos.Args = append(os.Args, \"--\"+s.name)\n\t\tapp3 := NewWithConfig(Config{DefaultDataDir: tempDir})\n\t\tapp3.RootCmd.AddCommand(customCmd)\n\t\tif v := app3.skipBootstrap(); v {\n\t\t\tt.Fatalf(\"[--%s custom] Expected false, got true\", s.name)\n\t\t}\n\n\t\t// short flag in custom command\n\t\tos.Args = os.Args[:1]\n\t\tos.Args = append(os.Args, \"custom\")\n\t\tos.Args = append(os.Args, \"-\"+s.short)\n\t\tapp4 := NewWithConfig(Config{DefaultDataDir: tempDir})\n\t\tapp4.RootCmd.AddCommand(customCmd)\n\t\tif v := app4.skipBootstrap(); v {\n\t\t\tt.Fatalf(\"[-%s custom] Expected false, got true\", s.short)\n\t\t}\n\t}\n}\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "ui",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}