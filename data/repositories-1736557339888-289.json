{
  "metadata": {
    "timestamp": 1736557339888,
    "page": 289,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "FFmpeg/FFmpeg",
      "stars": 47187,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.02,
          "content": "*.pnm -diff -text\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.39,
          "content": "*.a\n*.o\n*.o.*\n*.d\n*.def\n*.dll\n*.dylib\n*.exe\n*.exp\n*.gcda\n*.gcno\n*.h.c\n*.ilk\n*.lib\n*.pc\n*.pdb\n*.so\n*.so.*\n*.swp\n*.ver\n*.version\n*.metal.air\n*.metallib\n*.metallib.c\n*.ptx\n*.ptx.c\n*.ptx.gz\n*_g\n\\#*\n.\\#*\n/.config\n/.version\n/ffmpeg\n/ffplay\n/ffprobe\n/config.asm\n/config.h\n/config_components.h\n/coverage.info\n/lcov/\n/src\n/mapfile\n/tools/python/__pycache__/\n/libavcodec/vulkan/*.c\n/libavfilter/vulkan/*.c\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 1.37,
          "content": "<jeebjp@gmail.com> <jan.ekstrom@aminocom.com>\n<sw@jkqxz.net> <mrt@jkqxz.net>\n<u@pkh.me> <cboesch@gopro.com>\n<quinkblack@foxmail.com> <wantlamy@gmail.com>\n<quinkblack@foxmail.com> <zhilizhao@tencent.com>\n<modmaker@google.com> <modmaker-at-google.com@ffmpeg.org>\n<stebbins@jetheaddev.com> <jstebbins@jetheaddev.com>\n<barryjzhao@tencent.com> <mypopydev@gmail.com>\n<barryjzhao@tencent.com> <jun.zhao@intel.com>\n<josh@itanimul.li> <joshdk@obe.tv>\n<michael@niedermayer.cc> <michaelni@gmx.at>\n<linjie.justin.fu@gmail.com> <linjie.fu@intel.com>\n<linjie.justin.fu@gmail.com> <fulinjie@zju.edu.cn>\n<ceffmpeg@gmail.com> <cehoyos@ag.or.at>\n<ceffmpeg@gmail.com> <cehoyos@rainbow.studorg.tuwien.ac.at>\n<ffmpeg@gyani.pro> <gyandoshi@gmail.com>\n<atomnuker@gmail.com> <rpehlivanov@obe.tv>\n<lizhong1008@gmail.com> <zhong.li@intel.com>\n<lizhong1008@gmail.com> <zhongli_dev@126.com>\n<andreas.rheinhardt@outlook.com> <andreas.rheinhardt@gmail.com>\n<andreas.rheinhardt@outlook.com> <andreas.rheinhardt@googlemail.com>\nrcombs <rcombs@rcombs.me> <rodger.combs@gmail.com>\n<thilo.borgmann@mail.de> <thilo.borgmann@googlemail.com>\n<lq@chinaffmpeg.org> <liuqi05@kuaishou.com>\n<ruiling.song83@gmail.com> <ruiling.song@intel.com>\nCosmin Stejerean <cosmin@cosmin.at> Cosmin Stejerean via ffmpeg-devel <ffmpeg-devel@ffmpeg.org>\n<wutong1208@outlook.com> <tong1.wu-at-intel.com@ffmpeg.org>\n<wutong1208@outlook.com> <tong1.wu@intel.com>\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.41,
          "content": "# Note to Github users\nPatches should be submitted to the [ffmpeg-devel mailing list](https://ffmpeg.org/mailman/listinfo/ffmpeg-devel) using `git format-patch` or `git send-email`. Github pull requests should be avoided because they are not part of our review process and **will be ignored**.\n\nSee [https://ffmpeg.org/developer.html#Contributing](https://ffmpeg.org/developer.html#Contributing) for more information.\n"
        },
        {
          "name": "COPYING.GPLv2",
          "type": "blob",
          "size": 17.67,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License along\n    with this program; if not, write to the Free Software Foundation, Inc.,\n    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.\n"
        },
        {
          "name": "COPYING.GPLv3",
          "type": "blob",
          "size": 34.32,
          "content": "                    GNU GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU General Public License is a free, copyleft license for\nsoftware and other kinds of works.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nthe GNU General Public License is intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.  We, the Free Software Foundation, use the\nGNU General Public License for most of our software; it applies also to\nany other work released this way by its authors.  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  To protect your rights, we need to prevent others from denying you\nthese rights or asking you to surrender the rights.  Therefore, you have\ncertain responsibilities if you distribute copies of the software, or if\nyou modify it: responsibilities to respect the freedom of others.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must pass on to the recipients the same\nfreedoms that you received.  You must make sure that they, too, receive\nor can get the source code.  And you must show them these terms so they\nknow their rights.\n\n  Developers that use the GNU GPL protect your rights with two steps:\n(1) assert copyright on the software, and (2) offer you this License\ngiving you legal permission to copy, distribute and/or modify it.\n\n  For the developers' and authors' protection, the GPL clearly explains\nthat there is no warranty for this free software.  For both users' and\nauthors' sake, the GPL requires that modified versions be marked as\nchanged, so that their problems will not be attributed erroneously to\nauthors of previous versions.\n\n  Some devices are designed to deny users access to install or run\nmodified versions of the software inside them, although the manufacturer\ncan do so.  This is fundamentally incompatible with the aim of\nprotecting users' freedom to change the software.  The systematic\npattern of such abuse occurs in the area of products for individuals to\nuse, which is precisely where it is most unacceptable.  Therefore, we\nhave designed this version of the GPL to prohibit the practice for those\nproducts.  If such problems arise substantially in other domains, we\nstand ready to extend this provision to those domains in future versions\nof the GPL, as needed to protect the freedom of users.\n\n  Finally, every program is threatened constantly by software patents.\nStates should not allow patents to restrict development and use of\nsoftware on general-purpose computers, but in those that do, we wish to\navoid the special danger that patents applied to a free program could\nmake it effectively proprietary.  To prevent this, the GPL assures that\npatents cannot be used to render the program non-free.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Use with the GNU Affero General Public License.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU Affero General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the special requirements of the GNU Affero General Public License,\nsection 13, concerning interaction through a network will apply to the\ncombination as such.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program.  If not, see <http://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If the program does terminal interaction, make it output a short\nnotice like this when it starts in an interactive mode:\n\n    <program>  Copyright (C) <year>  <name of author>\n    This program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, your program's commands\nmight be different; for a GUI interface, you would use an \"about box\".\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU GPL, see\n<http://www.gnu.org/licenses/>.\n\n  The GNU General Public License does not permit incorporating your program\ninto proprietary programs.  If your program is a subroutine library, you\nmay consider it more useful to permit linking proprietary applications with\nthe library.  If this is what you want to do, use the GNU Lesser General\nPublic License instead of this License.  But first, please read\n<http://www.gnu.org/philosophy/why-not-lgpl.html>.\n"
        },
        {
          "name": "COPYING.LGPLv2.1",
          "type": "blob",
          "size": 25.9,
          "content": "                  GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 2.1, February 1999\n\n Copyright (C) 1991, 1999 Free Software Foundation, Inc.\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n[This is the first released version of the Lesser GPL.  It also counts\n as the successor of the GNU Library Public License, version 2, hence\n the version number 2.1.]\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicenses are intended to guarantee your freedom to share and change\nfree software--to make sure the software is free for all its users.\n\n  This license, the Lesser General Public License, applies to some\nspecially designated software packages--typically libraries--of the\nFree Software Foundation and other authors who decide to use it.  You\ncan use it too, but we suggest you first think carefully about whether\nthis license or the ordinary General Public License is the better\nstrategy to use in any particular case, based on the explanations below.\n\n  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n\n  To protect your rights, we need to make restrictions that forbid\ndistributors to deny you these rights or to ask you to surrender these\nrights.  These restrictions translate to certain responsibilities for\nyou if you distribute copies of the library or if you modify it.\n\n  For example, if you distribute copies of the library, whether gratis\nor for a fee, you must give the recipients all the rights that we gave\nyou.  You must make sure that they, too, receive or can get the source\ncode.  If you link other code with the library, you must provide\ncomplete object files to the recipients, so that they can relink them\nwith the library after making changes to the library and recompiling\nit.  And you must show them these terms so they know their rights.\n\n  We protect your rights with a two-step method: (1) we copyright the\nlibrary, and (2) we offer you this license, which gives you legal\npermission to copy, distribute and/or modify the library.\n\n  To protect each distributor, we want to make it very clear that\nthere is no warranty for the free library.  Also, if the library is\nmodified by someone else and passed on, the recipients should know\nthat what they have is not the original version, so that the original\nauthor's reputation will not be affected by problems that might be\nintroduced by others.\n\f\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\nconsistent with the full freedom of use specified in this license.\n\n  Most GNU software, including some libraries, is covered by the\nordinary GNU General Public License.  This license, the GNU Lesser\nGeneral Public License, applies to certain designated libraries, and\nis quite different from the ordinary General Public License.  We use\nthis license for certain libraries in order to permit linking those\nlibraries into non-free programs.\n\n  When a program is linked with a library, whether statically or using\na shared library, the combination of the two is legally speaking a\ncombined work, a derivative of the original library.  The ordinary\nGeneral Public License therefore permits such linking only if the\nentire combination fits its criteria of freedom.  The Lesser General\nPublic License permits more lax criteria for linking other code with\nthe library.\n\n  We call this license the \"Lesser\" General Public License because it\ndoes Less to protect the user's freedom than the ordinary General\nPublic License.  It also provides other free software developers Less\nof an advantage over competing non-free programs.  These disadvantages\nare the reason we use the ordinary General Public License for many\nlibraries.  However, the Lesser license provides advantages in certain\nspecial circumstances.\n\n  For example, on rare occasions, there may be a special need to\nencourage the widest possible use of a certain library, so that it becomes\na de-facto standard.  To achieve this, non-free programs must be\nallowed to use the library.  A more frequent case is that a free\nlibrary does the same job as widely used non-free libraries.  In this\ncase, there is little to gain by limiting the free library to free\nsoftware only, so we use the Lesser General Public License.\n\n  In other cases, permission to use a particular library in non-free\nprograms enables a greater number of people to use a large body of\nfree software.  For example, permission to use the GNU C Library in\nnon-free programs enables many more people to use the whole GNU\noperating system, as well as its variant, the GNU/Linux operating\nsystem.\n\n  Although the Lesser General Public License is Less protective of the\nusers' freedom, it does ensure that the user of a program that is\nlinked with the Library has the freedom and the wherewithal to run\nthat program using a modified version of the Library.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.  Pay close attention to the difference between a\n\"work based on the library\" and a \"work that uses the library\".  The\nformer contains code derived from the library, whereas the latter must\nbe combined with the library in order to run.\n\f\n                  GNU LESSER GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License Agreement applies to any software library or other\nprogram which contains a notice placed by the copyright holder or\nother authorized party saying it may be distributed under the terms of\nthis Lesser General Public License (also called \"this License\").\nEach licensee is addressed as \"you\".\n\n  A \"library\" means a collection of software functions and/or data\nprepared so as to be conveniently linked with application programs\n(which use some of those functions and data) to form executables.\n\n  The \"Library\", below, refers to any such software library or work\nwhich has been distributed under these terms.  A \"work based on the\nLibrary\" means either the Library or any derivative work under\ncopyright law: that is to say, a work containing the Library or a\nportion of it, either verbatim or with modifications and/or translated\nstraightforwardly into another language.  (Hereinafter, translation is\nincluded without limitation in the term \"modification\".)\n\n  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning a program using the Library is not restricted, and output from\nsuch a program is covered only if its contents constitute a work based\non the Library (independent of the use of the Library in a tool for\nwriting it).  Whether that is true depends on what the Library does\nand what the program that uses the Library does.\n\n  1. You may copy and distribute verbatim copies of the Library's\ncomplete source code as you receive it, in any medium, provided that\nyou conspicuously and appropriately publish on each copy an\nappropriate copyright notice and disclaimer of warranty; keep intact\nall the notices that refer to this License and to the absence of any\nwarranty; and distribute a copy of this License along with the\nLibrary.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\nof it, thus forming a work based on the Library, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) The modified work must itself be a software library.\n\n    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n    table of data to be supplied by an application program that uses\n    the facility, other than as an argument passed when the facility\n    is invoked, then you must make a good faith effort to ensure that,\n    in the event an application does not supply such function or\n    table, the facility still operates, and performs whatever part of\n    its purpose remains meaningful.\n\n    (For example, a function in a library to compute square roots has\n    a purpose that is entirely well-defined independent of the\n    application.  Therefore, Subsection 2d requires that any\n    application-supplied function or table used by this function must\n    be optional: if the application does not supply it, the square\n    root function must still compute square roots.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Library,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Library, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\nwith the Library (or with a work based on the Library) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may opt to apply the terms of the ordinary GNU General Public\nLicense instead of this License to a given copy of the Library.  To do\nthis, you must alter all the notices that refer to this License, so\nthat they refer to the ordinary GNU General Public License, version 2,\ninstead of to this License.  (If a newer version than version 2 of the\nordinary GNU General Public License has appeared, then you can specify\nthat version instead if you wish.)  Do not make any other change in\nthese notices.\n\f\n  Once this change is made in a given copy, it is irreversible for\nthat copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\nderivative of it, under Section 2) in object code or executable form\nunder the terms of Sections 1 and 2 above provided that you accompany\nit with the complete corresponding machine-readable source code, which\nmust be distributed under the terms of Sections 1 and 2 above on a\nmedium customarily used for software interchange.\n\n  If distribution of object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the\nsource code from the same place satisfies the requirement to\ndistribute the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  5. A program that contains no derivative of any portion of the\nLibrary, but is designed to work with the Library by being compiled or\nlinked with it, is called a \"work that uses the Library\".  Such a\nwork, in isolation, is not a derivative work of the Library, and\ntherefore falls outside the scope of this License.\n\n  However, linking a \"work that uses the Library\" with the Library\ncreates an executable that is a derivative of the Library (because it\ncontains portions of the Library), rather than a \"work that uses the\nlibrary\".  The executable is therefore covered by this License.\nSection 6 states terms for distribution of such executables.\n\n  When a \"work that uses the Library\" uses material from a header file\nthat is part of the Library, the object code for the work may be a\nderivative work of the Library even though the source code is not.\nWhether this is true is especially significant if the work can be\nlinked without the Library, or if the work is itself a library.  The\nthreshold for this to be true is not precisely defined by law.\n\n  If such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small inline\nfunctions (ten lines or less in length), then the use of the object\nfile is unrestricted, regardless of whether it is legally a derivative\nwork.  (Executables containing this object code plus portions of the\nLibrary will still fall under Section 6.)\n\n  Otherwise, if the work is a derivative of the Library, you may\ndistribute the object code for the work under the terms of Section 6.\nAny executables containing that work also fall under Section 6,\nwhether or not they are linked directly with the Library itself.\n\f\n  6. As an exception to the Sections above, you may also combine or\nlink a \"work that uses the Library\" with the Library to produce a\nwork containing portions of the Library, and distribute that work\nunder terms of your choice, provided that the terms permit\nmodification of the work for the customer's own use and reverse\nengineering for debugging such modifications.\n\n  You must give prominent notice with each copy of the work that the\nLibrary is used in it and that the Library and its use are covered by\nthis License.  You must supply a copy of this License.  If the work\nduring execution displays copyright notices, you must include the\ncopyright notice for the Library among them, as well as a reference\ndirecting the user to the copy of this License.  Also, you must do one\nof these things:\n\n    a) Accompany the work with the complete corresponding\n    machine-readable source code for the Library including whatever\n    changes were used in the work (which must be distributed under\n    Sections 1 and 2 above); and, if the work is an executable linked\n    with the Library, with the complete machine-readable \"work that\n    uses the Library\", as object code and/or source code, so that the\n    user can modify the Library and then relink to produce a modified\n    executable containing the modified Library.  (It is understood\n    that the user who changes the contents of definitions files in the\n    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n    d) If distribution of the work is made by offering access to copy\n    from a designated place, offer equivalent access to copy the above\n    specified materials from the same place.\n\n    e) Verify that the user has already received a copy of these\n    materials or that you have already sent this user a copy.\n\n  For an executable, the required form of the \"work that uses the\nLibrary\" must include any data and utility programs needed for\nreproducing the executable from it.  However, as a special exception,\nthe materials to be distributed need not include anything that is\nnormally distributed (in either source or binary form) with the major\ncomponents (compiler, kernel, and so on) of the operating system on\nwhich the executable runs, unless that component itself accompanies\nthe executable.\n\n  It may happen that this requirement contradicts the license\nrestrictions of other proprietary libraries that do not normally\naccompany the operating system.  Such a contradiction means you cannot\nuse both them and the Library together in an executable that you\ndistribute.\n\f\n  7. You may place library facilities that are a work based on the\nLibrary side-by-side in a single library together with other library\nfacilities not covered by this License, and distribute such a combined\nlibrary, provided that the separate distribution of the work based on\nthe Library and of the other library facilities is otherwise\npermitted, and provided that you do these two things:\n\n    a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities.  This must be distributed under the terms of the\n    Sections above.\n\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\nattempt otherwise to copy, modify, sublicense, link with, or\ndistribute the Library is void, and will automatically terminate your\nrights under this License.  However, parties who have received copies,\nor rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n\n  9. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Library or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Library (or any work based on the\nLibrary), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties with\nthis License.\n\f\n  11. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Library.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply,\nand the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  12. If the distribution and/or use of the Library is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Library under this License may add\nan explicit geographical distribution limitation excluding those countries,\nso that distribution is permitted only in or among countries not thus\nexcluded.  In such case, this License incorporates the limitation as if\nwritten in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Library\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation.  If the Library does not specify a\nlicense version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\nSoftware Foundation; we sometimes make exceptions for this.  Our\ndecision will be guided by the two goals of preserving the free status\nof all derivatives of our free software and of promoting the sharing\nand reuse of software generally.\n\n                            NO WARRANTY\n\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n\f\n           How to Apply These Terms to Your New Libraries\n\n  If you develop a new library, and you want it to be of the greatest\npossible use to the public, we recommend making it free software that\neveryone can redistribute and change.  You can do so by permitting\nredistribution under these terms (or, alternatively, under the terms of the\nordinary General Public License).\n\n  To apply these terms, attach the following notices to the library.  It is\nsafest to attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least the\n\"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the library's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This library is free software; you can redistribute it and/or\n    modify it under the terms of the GNU Lesser General Public\n    License as published by the Free Software Foundation; either\n    version 2.1 of the License, or (at your option) any later version.\n\n    This library is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n    Lesser General Public License for more details.\n\n    You should have received a copy of the GNU Lesser General Public\n    License along with this library; if not, write to the Free Software\n    Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n\nAlso add information on how to contact you by electronic and paper mail.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the library, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the\n  library `Frob' (a library for tweaking knobs) written by James Random Hacker.\n\n  <signature of Ty Coon>, 1 April 1990\n  Ty Coon, President of Vice\n\nThat's all there is to it!\n"
        },
        {
          "name": "COPYING.LGPLv3",
          "type": "blob",
          "size": 7.47,
          "content": "                   GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\n  This version of the GNU Lesser General Public License incorporates\nthe terms and conditions of version 3 of the GNU General Public\nLicense, supplemented by the additional permissions listed below.\n\n  0. Additional Definitions.\n\n  As used herein, \"this License\" refers to version 3 of the GNU Lesser\nGeneral Public License, and the \"GNU GPL\" refers to version 3 of the GNU\nGeneral Public License.\n\n  \"The Library\" refers to a covered work governed by this License,\nother than an Application or a Combined Work as defined below.\n\n  An \"Application\" is any work that makes use of an interface provided\nby the Library, but which is not otherwise based on the Library.\nDefining a subclass of a class defined by the Library is deemed a mode\nof using an interface provided by the Library.\n\n  A \"Combined Work\" is a work produced by combining or linking an\nApplication with the Library.  The particular version of the Library\nwith which the Combined Work was made is also called the \"Linked\nVersion\".\n\n  The \"Minimal Corresponding Source\" for a Combined Work means the\nCorresponding Source for the Combined Work, excluding any source code\nfor portions of the Combined Work that, considered in isolation, are\nbased on the Application, and not on the Linked Version.\n\n  The \"Corresponding Application Code\" for a Combined Work means the\nobject code and/or source code for the Application, including any data\nand utility programs needed for reproducing the Combined Work from the\nApplication, but excluding the System Libraries of the Combined Work.\n\n  1. Exception to Section 3 of the GNU GPL.\n\n  You may convey a covered work under sections 3 and 4 of this License\nwithout being bound by section 3 of the GNU GPL.\n\n  2. Conveying Modified Versions.\n\n  If you modify a copy of the Library, and, in your modifications, a\nfacility refers to a function or data to be supplied by an Application\nthat uses the facility (other than as an argument passed when the\nfacility is invoked), then you may convey a copy of the modified\nversion:\n\n   a) under this License, provided that you make a good faith effort to\n   ensure that, in the event an Application does not supply the\n   function or data, the facility still operates, and performs\n   whatever part of its purpose remains meaningful, or\n\n   b) under the GNU GPL, with none of the additional permissions of\n   this License applicable to that copy.\n\n  3. Object Code Incorporating Material from Library Header Files.\n\n  The object code form of an Application may incorporate material from\na header file that is part of the Library.  You may convey such object\ncode under terms of your choice, provided that, if the incorporated\nmaterial is not limited to numerical parameters, data structure\nlayouts and accessors, or small macros, inline functions and templates\n(ten or fewer lines in length), you do both of the following:\n\n   a) Give prominent notice with each copy of the object code that the\n   Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the object code with a copy of the GNU GPL and this license\n   document.\n\n  4. Combined Works.\n\n  You may convey a Combined Work under terms of your choice that,\ntaken together, effectively do not restrict modification of the\nportions of the Library contained in the Combined Work and reverse\nengineering for debugging such modifications, if you also do each of\nthe following:\n\n   a) Give prominent notice with each copy of the Combined Work that\n   the Library is used in it and that the Library and its use are\n   covered by this License.\n\n   b) Accompany the Combined Work with a copy of the GNU GPL and this license\n   document.\n\n   c) For a Combined Work that displays copyright notices during\n   execution, include the copyright notice for the Library among\n   these notices, as well as a reference directing the user to the\n   copies of the GNU GPL and this license document.\n\n   d) Do one of the following:\n\n       0) Convey the Minimal Corresponding Source under the terms of this\n       License, and the Corresponding Application Code in a form\n       suitable for, and under terms that permit, the user to\n       recombine or relink the Application with a modified version of\n       the Linked Version to produce a modified Combined Work, in the\n       manner specified by section 6 of the GNU GPL for conveying\n       Corresponding Source.\n\n       1) Use a suitable shared library mechanism for linking with the\n       Library.  A suitable mechanism is one that (a) uses at run time\n       a copy of the Library already present on the user's computer\n       system, and (b) will operate properly with a modified version\n       of the Library that is interface-compatible with the Linked\n       Version.\n\n   e) Provide Installation Information, but only if you would otherwise\n   be required to provide such information under section 6 of the\n   GNU GPL, and only to the extent that such information is\n   necessary to install and execute a modified version of the\n   Combined Work produced by recombining or relinking the\n   Application with a modified version of the Linked Version. (If\n   you use option 4d0, the Installation Information must accompany\n   the Minimal Corresponding Source and Corresponding Application\n   Code. If you use option 4d1, you must provide the Installation\n   Information in the manner specified by section 6 of the GNU GPL\n   for conveying Corresponding Source.)\n\n  5. Combined Libraries.\n\n  You may place library facilities that are a work based on the\nLibrary side by side in a single library together with other library\nfacilities that are not Applications and are not covered by this\nLicense, and convey such a combined library under terms of your\nchoice, if you do both of the following:\n\n   a) Accompany the combined library with a copy of the same work based\n   on the Library, uncombined with any other library facilities,\n   conveyed under the terms of this License.\n\n   b) Give prominent notice with the combined library that part of it\n   is a work based on the Library, and explaining where to find the\n   accompanying uncombined form of the same work.\n\n  6. Revised Versions of the GNU Lesser General Public License.\n\n  The Free Software Foundation may publish revised and/or new versions\nof the GNU Lesser General Public License from time to time. Such new\nversions will be similar in spirit to the present version, but may\ndiffer in detail to address new problems or concerns.\n\n  Each version is given a distinguishing version number. If the\nLibrary as you received it specifies that a certain numbered version\nof the GNU Lesser General Public License \"or any later version\"\napplies to it, you have the option of following the terms and\nconditions either of that published version or of any later version\npublished by the Free Software Foundation. If the Library as you\nreceived it does not specify a version number of the GNU Lesser\nGeneral Public License, you may choose any version of the GNU Lesser\nGeneral Public License ever published by the Free Software Foundation.\n\n  If the Library as you received it specifies that a proxy can decide\nwhether future versions of the GNU Lesser General Public License shall\napply, that proxy's public statement of acceptance of any version is\npermanent authorization for you to choose that version for the\nLibrary.\n"
        },
        {
          "name": "CREDITS",
          "type": "blob",
          "size": 0.27,
          "content": "See the Git history of the project (https://git.ffmpeg.org/ffmpeg) to\nget the names of people who have contributed to FFmpeg.\n\nTo check the log, you can type the command \"git log\" in the FFmpeg\nsource directory, or browse the online repository at\nhttps://git.ffmpeg.org/ffmpeg\n"
        },
        {
          "name": "Changelog",
          "type": "blob",
          "size": 72.58,
          "content": "Entries are sorted chronologically from oldest to youngest within each release,\nreleases are sorted from youngest to oldest.\n\nversion <next>:\n- yasm support dropped, users need to use nasm\n- VVC VAAPI decoder\n- RealVideo 6.0 decoder\n- OpenMAX encoders deprecated\n- libx265 alpha layer encoding\n- ADPCM IMA Xbox decoder\n- Enhanced FLV v2: Multitrack audio/video, modern codec support\n- Animated JPEG XL encoding (via libjxl)\n\nversion 7.1:\n- Raw Captions with Time (RCWT) closed caption demuxer\n- LC3/LC3plus decoding/encoding using external library liblc3\n- ffmpeg CLI filtergraph chaining\n- LC3/LC3plus demuxer and muxer\n- pad_vaapi, drawbox_vaapi filters\n- vf_scale supports secondary ref input and framesync options\n- vf_scale2ref deprecated\n- qsv_params option added for QSV encoders\n- VVC decoder compatible with DVB test content\n- xHE-AAC decoder\n- removed DEC Alpha DSP and support code\n- VVC encoding support via libvvenc\n- perlin video source\n- D3D12VA HEVC encoder\n- Cropping metadata parsing and writing in Matroska and MP4/MOV de/muxers\n- Intel QSV-accelerated VVC decoding\n- MediaCodec AAC/AMR-NB/AMR-WB/MP3 decoding\n- YUV colorspace negotiation for codecs and filters, obsoleting the\n  YUVJ pixel format\n- Vulkan H.264 encoder\n- Vulkan H.265 encoder\n- stream specifiers in fftools can now match by stream disposition\n- LCEVC enhancement data exporting in H.26x and MP4/ISOBMFF\n- LCEVC filter\n- MV-HEVC decoding\n- minor stream specifier syntax changes:\n    - when matching by metadata (:m:<key>:<val>), the colon character\n      in keys or values now has to be backslash-escaped\n    - in optional maps (-map ....?) with a metadata-matching stream specifier,\n      the value has to be separated from the question mark by a colon, i.e.\n      -map ....:m:<key>:<val>:? (otherwise it would be ambiguous whether the\n      question mark is a part of <val> or not)\n    - multiple stream types in a single specifier (e.g. :s:s:0) now cause an\n      error, as such a specifier makes no sense\n\n\nversion 7.0:\n- DXV DXT1 encoder\n- LEAD MCMP decoder\n- EVC decoding using external library libxevd\n- EVC encoding using external library libxeve\n- QOA decoder and demuxer\n- aap filter\n- demuxing, decoding, filtering, encoding, and muxing in the\n  ffmpeg CLI now all run in parallel\n- enable gdigrab device to grab a window using the hwnd=HANDLER syntax\n- IAMF raw demuxer and muxer\n- D3D12VA hardware accelerated H264, HEVC, VP9, AV1, MPEG-2 and VC1 decoding\n- tiltandshift filter\n- qrencode filter and qrencodesrc source\n- quirc filter\n- lavu/eval: introduce randomi() function in expressions\n- VVC decoder (experimental)\n- fsync filter\n- Raw Captions with Time (RCWT) closed caption muxer\n- ffmpeg CLI -bsf option may now be used for input as well as output\n- ffmpeg CLI options may now be used as -/opt <path>, which is equivalent\n  to -opt <contents of file <path>>\n- showinfo bitstream filter\n- a C11-compliant compiler is now required; note that this requirement\n  will be bumped to C17 in the near future, so consider updating your\n  build environment if it lacks C17 support\n- Change the default bitrate control method from VBR to CQP for QSV encoders.\n- removed deprecated ffmpeg CLI options -psnr and -map_channel\n- DVD-Video demuxer, powered by libdvdnav and libdvdread\n- ffprobe -show_stream_groups option\n- ffprobe (with -export_side_data film_grain) now prints film grain metadata\n- AEA muxer\n- ffmpeg CLI loopback decoders\n- Support PacketTypeMetadata of PacketType in enhanced flv format\n- ffplay with hwaccel decoding support (depends on vulkan renderer via libplacebo)\n- dnn filter libtorch backend\n- Android content URIs protocol\n- AOMedia Film Grain Synthesis 1 (AFGS1)\n- RISC-V optimizations for AAC, FLAC, JPEG-2000, LPC, RV4.0, SVQ, VC1, VP8, and more\n- Loongarch optimizations for HEVC decoding\n- Important AArch64 optimizations for HEVC\n- IAMF support inside MP4/ISOBMFF\n- Support for HEIF/AVIF still images and tiled still images\n- Dolby Vision profile 10 support in AV1\n- Support for Ambient Viewing Environment metadata in MP4/ISOBMFF\n- HDR10 metadata passthrough when encoding with libx264, libx265, and libsvtav1\n\n\nversion 6.1:\n- libaribcaption decoder\n- Playdate video decoder and demuxer\n- Extend VAAPI support for libva-win32 on Windows\n- afireqsrc audio source filter\n- arls filter\n- ffmpeg CLI new option: -readrate_initial_burst\n- zoneplate video source filter\n- command support in the setpts and asetpts filters\n- Vulkan decode hwaccel, supporting H264, HEVC and AV1\n- color_vulkan filter\n- bwdif_vulkan filter\n- nlmeans_vulkan filter\n- RivaTuner video decoder\n- xfade_vulkan filter\n- vMix video decoder\n- Essential Video Coding parser, muxer and demuxer\n- Essential Video Coding frame merge bsf\n- bwdif_cuda filter\n- Microsoft RLE video encoder\n- Raw AC-4 muxer and demuxer\n- Raw VVC bitstream parser, muxer and demuxer\n- Bitstream filter for editing metadata in VVC streams\n- Bitstream filter for converting VVC from MP4 to Annex B\n- scale_vt filter for videotoolbox\n- transpose_vt filter for videotoolbox\n- support for the P_SKIP hinting to speed up libx264 encoding\n- Support HEVC,VP9,AV1 codec in enhanced flv format\n- apsnr and asisdr audio filters\n- OSQ demuxer and decoder\n- Support HEVC,VP9,AV1 codec fourcclist in enhanced rtmp protocol\n- CRI USM demuxer\n- ffmpeg CLI '-top' option deprecated in favor of the setfield filter\n- VAAPI AV1 encoder\n- ffprobe XML output schema changed to account for multiple\n  variable-fields elements within the same parent element\n- ffprobe -output_format option added as an alias of -of\n\n\nversion 6.0:\n- Radiance HDR image support\n- ddagrab (Desktop Duplication) video capture filter\n- ffmpeg -shortest_buf_duration option\n- ffmpeg now requires threading to be built\n- ffmpeg now runs every muxer in a separate thread\n- Add new mode to cropdetect filter to detect crop-area based on motion vectors and edges\n- VAAPI decoding and encoding for 10/12bit 422, 10/12bit 444 HEVC and VP9\n- WBMP (Wireless Application Protocol Bitmap) image format\n- a3dscope filter\n- bonk decoder and demuxer\n- Micronas SC-4 audio decoder\n- LAF demuxer\n- APAC decoder and demuxer\n- Media 100i decoders\n- DTS to PTS reorder bsf\n- ViewQuest VQC decoder\n- backgroundkey filter\n- nvenc AV1 encoding support\n- MediaCodec decoder via NDKMediaCodec\n- MediaCodec encoder\n- oneVPL support for QSV\n- QSV AV1 encoder\n- QSV decoding and encoding for 10/12bit 422, 10/12bit 444 HEVC and VP9\n- showcwt multimedia filter\n- corr video filter\n- adrc audio filter\n- afdelaysrc audio filter\n- WADY DPCM decoder and demuxer\n- CBD2 DPCM decoder\n- ssim360 video filter\n- ffmpeg CLI new options: -stats_enc_pre[_fmt], -stats_enc_post[_fmt],\n  -stats_mux_pre[_fmt]\n- hstack_vaapi, vstack_vaapi and xstack_vaapi filters\n- XMD ADPCM decoder and demuxer\n- media100 to mjpegb bsf\n- ffmpeg CLI new option: -fix_sub_duration_heartbeat\n- WavArc decoder and demuxer\n- CrystalHD decoders deprecated\n- SDNS demuxer\n- RKA decoder and demuxer\n- filtergraph syntax in ffmpeg CLI now supports passing file contents\n  as option values, by prefixing option name with '/'\n- hstack_qsv, vstack_qsv and xstack_qsv filters\n\n\nversion 5.1:\n- add ipfs/ipns gateway support\n- dialogue enhance audio filter\n- dropped obsolete XvMC hwaccel\n- pcm-bluray encoder\n- DFPWM audio encoder/decoder and raw muxer/demuxer\n- SITI filter\n- Vizrt Binary Image encoder/decoder\n- avsynctest source filter\n- feedback video filter\n- pixelize video filter\n- colormap video filter\n- colorchart video source filter\n- multiply video filter\n- PGS subtitle frame merge bitstream filter\n- blurdetect filter\n- tiltshelf audio filter\n- QOI image format support\n- ffprobe -o option\n- virtualbass audio filter\n- VDPAU AV1 hwaccel\n- PHM image format support\n- remap_opencl filter\n- added chromakey_cuda filter\n- added bilateral_cuda filter\n\n\nversion 5.0:\n- ADPCM IMA Westwood encoder\n- Westwood AUD muxer\n- ADPCM IMA Acorn Replay decoder\n- Argonaut Games CVG demuxer\n- Argonaut Games CVG muxer\n- Concatf protocol\n- afwtdn audio filter\n- audio and video segment filters\n- Apple Graphics (SMC) encoder\n- hsvkey and hsvhold video filters\n- adecorrelate audio filter\n- atilt audio filter\n- grayworld video filter\n- AV1 Low overhead bitstream format muxer\n- swscale slice threading\n- MSN Siren decoder\n- scharr video filter\n- apsyclip audio filter\n- morpho video filter\n- amr parser\n- (a)latency filters\n- GEM Raster image decoder\n- asdr audio filter\n- speex decoder\n- limitdiff video filter\n- xcorrelate video filter\n- varblur video filter\n- huesaturation video filter\n- colorspectrum source video filter\n- RTP packetizer for uncompressed video (RFC 4175)\n- bitpacked encoder\n- VideoToolbox VP9 hwaccel\n- VideoToolbox ProRes hwaccel\n- support loongarch.\n- aspectralstats audio filter\n- adynamicsmooth audio filter\n- libplacebo filter\n- vflip_vulkan, hflip_vulkan and flip_vulkan filters\n- adynamicequalizer audio filter\n- yadif_videotoolbox filter\n- VideoToolbox ProRes encoder\n- anlmf audio filter\n- IMF demuxer (experimental)\n\n\nversion 4.4:\n- AudioToolbox output device\n- MacCaption demuxer\n- PGX decoder\n- chromanr video filter\n- VDPAU accelerated HEVC 10/12bit decoding\n- ADPCM IMA Ubisoft APM encoder\n- Rayman 2 APM muxer\n- AV1 encoding support SVT-AV1\n- Cineform HD encoder\n- ADPCM Argonaut Games encoder\n- Argonaut Games ASF muxer\n- AV1 Low overhead bitstream format demuxer\n- RPZA video encoder\n- ADPCM IMA MOFLEX decoder\n- MobiClip FastAudio decoder\n- MobiClip video decoder\n- MOFLEX demuxer\n- MODS demuxer\n- PhotoCD decoder\n- MCA demuxer\n- AV1 decoder (Hardware acceleration used only)\n- SVS demuxer\n- Argonaut Games BRP demuxer\n- DAT demuxer\n- aax demuxer\n- IPU decoder, parser and demuxer\n- Intel QSV-accelerated AV1 decoding\n- Argonaut Games Video decoder\n- libwavpack encoder removed\n- ACE demuxer\n- AVS3 demuxer\n- AVS3 video decoder via libuavs3d\n- Cintel RAW decoder\n- VDPAU accelerated VP9 10/12bit decoding\n- afreqshift and aphaseshift filters\n- High Voltage Software ADPCM encoder\n- LEGO Racers ALP (.tun & .pcm) muxer\n- AV1 VAAPI decoder\n- adenorm filter\n- ADPCM IMA AMV encoder\n- AMV muxer\n- NVDEC AV1 hwaccel\n- DXVA2/D3D11VA hardware accelerated AV1 decoding\n- speechnorm filter\n- SpeedHQ encoder\n- asupercut filter\n- asubcut filter\n- Microsoft Paint (MSP) version 2 decoder\n- Microsoft Paint (MSP) demuxer\n- AV1 monochrome encoding support via libaom >= 2.0.1\n- asuperpass and asuperstop filter\n- shufflepixels filter\n- tmidequalizer filter\n- estdif filter\n- epx filter\n- Dolby E parser\n- shear filter\n- kirsch filter\n- colortemperature filter\n- colorcontrast filter\n- PFM encoder\n- colorcorrect filter\n- binka demuxer\n- XBM parser\n- xbm_pipe demuxer\n- colorize filter\n- CRI parser\n- aexciter audio filter\n- exposure video filter\n- monochrome video filter\n- setts bitstream filter\n- vif video filter\n- OpenEXR image encoder\n- Simbiosis IMX decoder\n- Simbiosis IMX demuxer\n- Digital Pictures SGA demuxer and decoders\n- TTML subtitle encoder and muxer\n- identity video filter\n- msad video filter\n- gophers protocol\n- RIST protocol via librist\n\n\nversion 4.3:\n- v360 filter\n- Intel QSV-accelerated MJPEG decoding\n- Intel QSV-accelerated VP9 decoding\n- Support for TrueHD in mp4\n- Support AMD AMF encoder on Linux (via Vulkan)\n- IMM5 video decoder\n- ZeroMQ protocol\n- support Sipro ACELP.KELVIN decoding\n- streamhash muxer\n- sierpinski video source\n- scroll video filter\n- photosensitivity filter\n- anlms filter\n- arnndn filter\n- bilateral filter\n- maskedmin and maskedmax filters\n- VDPAU VP9 hwaccel\n- median filter\n- QSV-accelerated VP9 encoding\n- AV1 encoding support via librav1e\n- AV1 frame merge bitstream filter\n- AV1 Annex B demuxer\n- axcorrelate filter\n- mvdv decoder\n- mvha decoder\n- MPEG-H 3D Audio support in mp4\n- thistogram filter\n- freezeframes filter\n- Argonaut Games ADPCM decoder\n- Argonaut Games ASF demuxer\n- xfade video filter\n- xfade_opencl filter\n- afirsrc audio filter source\n- pad_opencl filter\n- Simon & Schuster Interactive ADPCM decoder\n- Real War KVAG demuxer\n- CDToons video decoder\n- siren audio decoder\n- Rayman 2 ADPCM decoder\n- Rayman 2 APM demuxer\n- cas video filter\n- High Voltage Software ADPCM decoder\n- LEGO Racers ALP (.tun & .pcm) demuxer\n- AMQP 0-9-1 protocol (RabbitMQ)\n- Vulkan support\n- avgblur_vulkan, overlay_vulkan, scale_vulkan and chromaber_vulkan filters\n- ADPCM IMA MTF decoder\n- FWSE demuxer\n- DERF DPCM decoder\n- DERF demuxer\n- CRI HCA decoder\n- CRI HCA demuxer\n- overlay_cuda filter\n- switch from AvxSynth to AviSynth+ on Linux\n- mv30 decoder\n- Expanded styling support for 3GPP Timed Text Subtitles (movtext)\n- WebP parser\n- tmedian filter\n- maskedthreshold filter\n- Support for muxing pcm and pgs in m2ts\n- Cunning Developments ADPCM decoder\n- asubboost filter\n- Pro Pinball Series Soundbank demuxer\n- pcm_rechunk bitstream filter\n- scdet filter\n- NotchLC decoder\n- gradients source video filter\n- MediaFoundation encoder wrapper\n- untile filter\n- Simon & Schuster Interactive ADPCM encoder\n- PFM decoder\n- dblur video filter\n- Real War KVAG muxer\n\n\nversion 4.2:\n- tpad filter\n- AV1 decoding support through libdav1d\n- dedot filter\n- chromashift and rgbashift filters\n- freezedetect filter\n- truehd_core bitstream filter\n- dhav demuxer\n- PCM-DVD encoder\n- GIF parser\n- vividas demuxer\n- hymt decoder\n- anlmdn filter\n- maskfun filter\n- hcom demuxer and decoder\n- ARBC decoder\n- libaribb24 based ARIB STD-B24 caption support (profiles A and C)\n- Support decoding of HEVC 4:4:4 content in nvdec and cuviddec\n- removed libndi-newtek\n- agm decoder\n- KUX demuxer\n- AV1 frame split bitstream filter\n- lscr decoder\n- lagfun filter\n- asoftclip filter\n- Support decoding of HEVC 4:4:4 content in vdpau\n- colorhold filter\n- xmedian filter\n- asr filter\n- showspatial multimedia filter\n- VP4 video decoder\n- IFV demuxer\n- derain filter\n- deesser filter\n- mov muxer writes tracks with unspecified language instead of English by default\n- add support for using clang to compile CUDA kernels\n\n\nversion 4.1:\n- deblock filter\n- tmix filter\n- amplify filter\n- fftdnoiz filter\n- aderivative and aintegral audio filters\n- pal75bars and pal100bars video filter sources\n- support mbedTLS based TLS\n- adeclick filter\n- adeclip filter\n- libtensorflow backend for DNN based filters like srcnn\n- vc1 decoder is now bit-exact\n- ATRAC9 decoder\n- lensfun wrapper filter\n- colorconstancy filter\n- AVS2 video decoder via libdavs2\n- IMM4 video decoder\n- Brooktree ProSumer video decoder\n- MatchWare Screen Capture Codec decoder\n- WinCam Motion Video decoder\n- 1D LUT filter (lut1d)\n- RemotelyAnywhere Screen Capture decoder\n- cue and acue filters\n- support for AV1 in MP4\n- transpose_npp filter\n- AVS2 video encoder via libxavs2\n- amultiply filter\n- Block-Matching 3d (bm3d) denoising filter\n- acrossover filter\n- ilbc decoder\n- audio denoiser as afftdn filter\n- AV1 parser\n- SER demuxer\n- sinc audio filter source\n- chromahold filter\n- setparams filter\n- vibrance filter\n- decoding S12M timecode in h264\n- xstack filter\n- pcm vidc decoder and encoder\n- (a)graphmonitor filter\n- yadif_cuda filter\n\n\nversion 4.0:\n- Bitstream filters for editing metadata in H.264, HEVC and MPEG-2 streams\n- Dropped support for OpenJPEG versions 2.0 and below. Using OpenJPEG now\n  requires 2.1 (or later) and pkg-config.\n- VDA dropped (use VideoToolbox instead)\n- MagicYUV encoder\n- Raw AMR-NB and AMR-WB demuxers\n- TiVo ty/ty+ demuxer\n- Intel QSV-accelerated MJPEG encoding\n- PCE support for extended channel layouts in the AAC encoder\n- native aptX and aptX HD encoder and decoder\n- Raw aptX and aptX HD muxer and demuxer\n- NVIDIA NVDEC-accelerated H.264, HEVC, MJPEG, MPEG-1/2/4, VC1, VP8/9 hwaccel decoding\n- Intel QSV-accelerated overlay filter\n- mcompand audio filter\n- acontrast audio filter\n- OpenCL overlay filter\n- video mix filter\n- video normalize filter\n- audio lv2 wrapper filter\n- VAAPI MJPEG and VP8 decoding\n- AMD AMF H.264 and HEVC encoders\n- video fillborders filter\n- video setrange filter\n- nsp demuxer\n- support LibreSSL (via libtls)\n- AVX-512/ZMM support added\n- Dropped support for building for Windows XP. The minimum supported Windows\n  version is Windows Vista.\n- deconvolve video filter\n- entropy video filter\n- hilbert audio filter source\n- aiir audio filter\n- aiff: add support for CD-ROM XA ADPCM\n- Removed the ffserver program\n- Removed the ffmenc and ffmdec muxer and demuxer\n- VideoToolbox HEVC encoder and hwaccel\n- VAAPI-accelerated ProcAmp (color balance), denoise and sharpness filters\n- Add android_camera indev\n- codec2 en/decoding via libcodec2\n- muxer/demuxer for raw codec2 files and .c2 files\n- Moved nvidia codec headers into an external repository.\n  They can be found at http://git.videolan.org/?p=ffmpeg/nv-codec-headers.git\n- native SBC encoder and decoder\n- drmeter audio filter\n- hapqa_extract bitstream filter\n- filter_units bitstream filter\n- AV1 Support through libaom\n- E-AC-3 dependent frames support\n- bitstream filter for extracting E-AC-3 core\n- Haivision SRT protocol via libsrt\n- segafilm muxer\n- vfrdet filter\n- SRCNN filter\n\n\nversion 3.4:\n- deflicker video filter\n- doubleweave video filter\n- lumakey video filter\n- pixscope video filter\n- oscilloscope video filter\n- config.log and other configuration files moved into ffbuild/ directory\n- update cuvid/nvenc headers to Video Codec SDK 8.0.14\n- afir audio filter\n- scale_cuda CUDA based video scale filter\n- librsvg support for svg rasterization\n- crossfeed audio filter\n- spec compliant VP9 muxing support in MP4\n- remove the libnut muxer/demuxer wrappers\n- remove the libschroedinger encoder/decoder wrappers\n- surround audio filter\n- sofalizer filter switched to libmysofa\n- Gremlin Digital Video demuxer and decoder\n- headphone audio filter\n- superequalizer audio filter\n- roberts video filter\n- The x86 assembler default switched from yasm to nasm, pass\n  --x86asmexe=yasm to configure to restore the old behavior.\n- additional frame format support for Interplay MVE movies\n- support for decoding through D3D11VA in ffmpeg\n- limiter video filter\n- libvmaf video filter\n- Dolby E decoder and SMPTE 337M demuxer\n- unpremultiply video filter\n- tlut2 video filter\n- floodfill video filter\n- pseudocolor video filter\n- raw G.726 muxer and demuxer, left- and right-justified\n- NewTek NDI input/output device\n- Some video filters with several inputs now use a common set of options:\n  blend, libvmaf, lut3d, overlay, psnr, ssim.\n  They must always be used by name.\n- FITS demuxer and decoder\n- FITS muxer and encoder\n- add --disable-autodetect build switch\n- drop deprecated qtkit input device (use avfoundation instead)\n- despill video filter\n- haas audio filter\n- SUP/PGS subtitle muxer\n- convolve video filter\n- VP9 tile threading support\n- KMS screen grabber\n- CUDA thumbnail filter\n- V4L2 mem2mem HW assisted codecs\n- Rockchip MPP hardware decoding\n- vmafmotion video filter\n- use MIME type \"G726\" for little-endian G.726, \"AAL2-G726\" for big-endian G.726\n\n\nversion 3.3:\n- CrystalHD decoder moved to new decode API\n- add internal ebur128 library, remove external libebur128 dependency\n- Pro-MPEG CoP #3-R2 FEC protocol\n- premultiply video filter\n- Support for spherical videos\n- configure now fails if autodetect-libraries are requested but not found\n- PSD Decoder\n- 16.8 floating point pcm decoder\n- 24.0 floating point pcm decoder\n- Apple Pixlet decoder\n- QDMC audio decoder\n- NewTek SpeedHQ decoder\n- MIDI Sample Dump Standard demuxer\n- readeia608 filter\n- Sample Dump eXchange demuxer\n- abitscope multimedia filter\n- Scenarist Closed Captions demuxer and muxer\n- threshold filter\n- midequalizer filter\n- Optimal Huffman tables for (M)JPEG encoding\n- VAAPI-accelerated MPEG-2 and VP8 encoding\n- FM Screen Capture Codec decoder\n- native Opus encoder\n- ScreenPressor decoder\n- incomplete ClearVideo decoder\n- Intel QSV video scaling and deinterlacing filters\n- Support MOV with multiple sample description tables\n- XPM decoder\n- Removed the legacy X11 screen grabber, use XCB instead\n- MPEG-7 Video Signature filter\n- Removed asyncts filter (use af_aresample instead)\n- Intel QSV-accelerated VP8 video decoding\n- VAAPI-accelerated deinterlacing\n\n\nversion 3.2:\n- libopenmpt demuxer\n- tee protocol\n- Changed metadata print option to accept general urls\n- Alias muxer for Ogg Video (.ogv)\n- VP8 in Ogg muxing\n- curves filter doesn't automatically insert points at x=0 and x=1 anymore\n- 16-bit support in curves filter and selectivecolor filter\n- OpenH264 decoder wrapper\n- MediaCodec H.264/HEVC/MPEG-4/VP8/VP9 hwaccel\n- True Audio (TTA) muxer\n- crystalizer audio filter\n- acrusher audio filter\n- bitplanenoise video filter\n- floating point support in als decoder\n- fifo muxer\n- maskedclamp filter\n- hysteresis filter\n- lut2 filter\n- yuvtestsrc filter\n- CUDA CUVID H.263/VP8/VP9/10 bit HEVC (Dithered) Decoding\n- vaguedenoiser filter\n- added threads option per filter instance\n- weave filter\n- gblur filter\n- avgblur filter\n- sobel and prewitt filter\n- MediaCodec HEVC/MPEG-4/VP8/VP9 decoding\n- Meridian Lossless Packing (MLP) / TrueHD encoder\n- Non-Local Means (nlmeans) denoising filter\n- sdl2 output device and ffplay support\n- sdl1 output device and sdl1 support removed\n- extended mov edit list support\n- libfaac encoder removed\n- Matroska muxer now writes CRC32 elements by default in all Level 1 elements\n- sidedata video and asidedata audio filter\n- Changed mapping of rtp MIME type G726 to codec g726le.\n- spec compliant VAAPI/DXVA2 VC-1 decoding of slices in frame-coded images\n\n\nversion 3.1:\n- DXVA2-accelerated HEVC Main10 decoding\n- fieldhint filter\n- loop video filter and aloop audio filter\n- Bob Weaver deinterlacing filter\n- firequalizer filter\n- datascope filter\n- bench and abench filters\n- ciescope filter\n- protocol blacklisting API\n- MediaCodec H264 decoding\n- VC-2 HQ RTP payload format (draft v1) depacketizer and packetizer\n- VP9 RTP payload format (draft v2) packetizer\n- AudioToolbox audio decoders\n- AudioToolbox audio encoders\n- coreimage filter (GPU based image filtering on OSX)\n- libdcadec removed\n- bitstream filter for extracting DTS core\n- ADPCM IMA DAT4 decoder\n- musx demuxer\n- aix demuxer\n- remap filter\n- hash and framehash muxers\n- colorspace filter\n- hdcd filter\n- readvitc filter\n- VAAPI-accelerated format conversion and scaling\n- libnpp/CUDA-accelerated format conversion and scaling\n- Duck TrueMotion 2.0 Real Time decoder\n- Wideband Single-bit Data (WSD) demuxer\n- VAAPI-accelerated H.264/HEVC/MJPEG encoding\n- DTS Express (LBR) decoder\n- Generic OpenMAX IL encoder with support for Raspberry Pi\n- IFF ANIM demuxer & decoder\n- Direct Stream Transfer (DST) decoder\n- loudnorm filter\n- MTAF demuxer and decoder\n- MagicYUV decoder\n- OpenExr improvements (tile data and B44/B44A support)\n- BitJazz SheerVideo decoder\n- CUDA CUVID H264/HEVC decoder\n- 10-bit depth support in native utvideo decoder\n- libutvideo wrapper removed\n- YUY2 Lossless Codec decoder\n- VideoToolbox H.264 encoder\n\n\nversion 3.0:\n- Common Encryption (CENC) MP4 encoding and decoding support\n- DXV decoding\n- extrastereo filter\n- ocr filter\n- alimiter filter\n- stereowiden filter\n- stereotools filter\n- rubberband filter\n- tremolo filter\n- agate filter\n- chromakey filter\n- maskedmerge filter\n- Screenpresso SPV1 decoding\n- chromaprint fingerprinting muxer\n- ffplay dynamic volume control\n- displace filter\n- selectivecolor filter\n- extensive native AAC encoder improvements and removal of experimental flag\n- ADPCM PSX decoder\n- 3dostr, dcstr, fsb, genh, vag, xvag, ads, msf, svag & vpk demuxer\n- zscale filter\n- wve demuxer\n- zero-copy Intel QSV transcoding in ffmpeg\n- shuffleframes filter\n- SDX2 DPCM decoder\n- vibrato filter\n- innoHeim/Rsupport Screen Capture Codec decoder\n- ADPCM AICA decoder\n- Interplay ACM demuxer and audio decoder\n- XMA1 & XMA2 decoder\n- realtime filter\n- anoisesrc audio filter source\n- IVR demuxer\n- compensationdelay filter\n- acompressor filter\n- support encoding 16-bit RLE SGI images\n- apulsator filter\n- sidechaingate audio filter\n- mipsdspr1 option has been renamed to mipsdsp\n- aemphasis filter\n- mips32r5 option has been removed\n- mips64r6 option has been removed\n- DXVA2-accelerated VP9 decoding\n- SOFAlizer: virtual binaural acoustics filter\n- VAAPI VP9 hwaccel\n- audio high-order multiband parametric equalizer\n- automatic bitstream filtering\n- showspectrumpic filter\n- libstagefright support removed\n- spectrumsynth filter\n- ahistogram filter\n- only seek with the right mouse button in ffplay\n- toggle full screen when double-clicking with the left mouse button in ffplay\n- afftfilt filter\n- convolution filter\n- libquvi support removed\n- support for dvaudio in wav and avi\n- libaacplus and libvo-aacenc support removed\n- Cineform HD decoder\n- new DCA decoder with full support for DTS-HD extensions\n- significant performance improvements in Windows Television (WTV) demuxer\n- nnedi deinterlacer\n- streamselect video and astreamselect audio filter\n- swaprect filter\n- metadata video and ametadata audio filter\n- SMPTE VC-2 HQ profile support for the Dirac decoder\n- SMPTE VC-2 native encoder supporting the HQ profile\n\n\nversion 2.8:\n- colorkey video filter\n- BFSTM/BCSTM demuxer\n- little-endian ADPCM_THP decoder\n- Hap decoder and encoder\n- DirectDraw Surface image/texture decoder\n- ssim filter\n- optional new ASF demuxer\n- showvolume filter\n- Many improvements to the JPEG 2000 decoder\n- Go2Meeting decoding support\n- adrawgraph audio and drawgraph video filter\n- removegrain video filter\n- Intel QSV-accelerated MPEG-2 video and HEVC encoding\n- Intel QSV-accelerated MPEG-2 video and HEVC decoding\n- Intel QSV-accelerated VC-1 video decoding\n- libkvazaar HEVC encoder\n- erosion, dilation, deflate and inflate video filters\n- Dynamic Audio Normalizer as dynaudnorm filter\n- Reverse video and areverse audio filter\n- Random filter\n- deband filter\n- AAC fixed-point decoding\n- sidechaincompress audio filter\n- bitstream filter for converting HEVC from MP4 to Annex B\n- acrossfade audio filter\n- allyuv and allrgb video sources\n- atadenoise video filter\n- OS X VideoToolbox support\n- aphasemeter filter\n- showfreqs filter\n- vectorscope filter\n- waveform filter\n- hstack and vstack filter\n- Support DNx100 (1440x1080@8)\n- VAAPI hevc hwaccel\n- VDPAU hevc hwaccel\n- framerate filter\n- Switched default encoders for webm to VP9 and Opus\n- Removed experimental flag from the JPEG 2000 encoder\n\n\nversion 2.7:\n- FFT video filter\n- TDSC decoder\n- DTS lossless extension (XLL) decoding (not lossless, disabled by default)\n- showwavespic filter\n- DTS decoding through libdcadec\n- Drop support for nvenc API before 5.0\n- nvenc HEVC encoder\n- Detelecine filter\n- Intel QSV-accelerated H.264 encoding\n- MMAL-accelerated H.264 decoding\n- basic APNG encoder and muxer with default extension \"apng\"\n- unpack DivX-style packed B-frames in MPEG-4 bitstream filter\n- WebM Live Chunk Muxer\n- nvenc level and tier options\n- chorus filter\n- Canopus HQ/HQA decoder\n- Automatically rotate videos based on metadata in ffmpeg\n- improved Quickdraw compatibility\n- VP9 high bit-depth and extended colorspaces decoding support\n- WebPAnimEncoder API when available for encoding and muxing WebP\n- Direct3D11-accelerated decoding\n- Support Secure Transport\n- Multipart JPEG demuxer\n\n\nversion 2.6:\n- nvenc encoder\n- 10bit spp filter\n- colorlevels filter\n- RIFX format for *.wav files\n- RTP/mpegts muxer\n- non continuous cache protocol support\n- tblend filter\n- cropdetect support for non 8bpp, absolute (if limit >= 1) and relative (if limit < 1.0) threshold\n- Camellia symmetric block cipher\n- OpenH264 encoder wrapper\n- VOC seeking support\n- Closed caption Decoder\n- fspp, uspp, pp7 MPlayer postprocessing filters ported to native filters\n- showpalette filter\n- Twofish symmetric block cipher\n- Support DNx100 (960x720@8)\n- eq2 filter ported from libmpcodecs as eq filter\n- removed libmpcodecs\n- Changed default DNxHD colour range in QuickTime .mov derivatives to mpeg range\n- ported softpulldown filter from libmpcodecs as repeatfields filter\n- dcshift filter\n- RTP depacketizer for loss tolerant payload format for MP3 audio (RFC 5219)\n- RTP depacketizer for AC3 payload format (RFC 4184)\n- palettegen and paletteuse filters\n- VP9 RTP payload format (draft 0) experimental depacketizer\n- RTP depacketizer for DV (RFC 6469)\n- DXVA2-accelerated HEVC decoding\n- AAC ELD 480 decoding\n- Intel QSV-accelerated H.264 decoding\n- DSS SP decoder and DSS demuxer\n- Fix stsd atom corruption in DNxHD QuickTimes\n- Canopus HQX decoder\n- RTP depacketization of T.140 text (RFC 4103)\n- Port MIPS optimizations to 64-bit\n\n\nversion 2.5:\n- HEVC/H.265 RTP payload format (draft v6) packetizer\n- SUP/PGS subtitle demuxer\n- ffprobe -show_pixel_formats option\n- CAST128 symmetric block cipher, ECB mode\n- STL subtitle demuxer and decoder\n- libutvideo YUV 4:2:2 10bit support\n- XCB-based screen-grabber\n- UDP-Lite support (RFC 3828)\n- xBR scaling filter\n- AVFoundation screen capturing support\n- ffserver supports codec private options\n- creating DASH compatible fragmented MP4, MPEG-DASH segmenting muxer\n- WebP muxer with animated WebP support\n- zygoaudio decoding support\n- APNG demuxer\n- postproc visualization support\n\n\nversion 2.4:\n- Icecast protocol\n- ported lenscorrection filter from frei0r filter\n- large optimizations in dctdnoiz to make it usable\n- ICY metadata are now requested by default with the HTTP protocol\n- support for using metadata in stream specifiers in fftools\n- LZMA compression support in TIFF decoder\n- H.261 RTP payload format (RFC 4587) depacketizer and experimental packetizer\n- HEVC/H.265 RTP payload format (draft v6) depacketizer\n- added codecview filter to visualize information exported by some codecs\n- Matroska 3D support thorugh side data\n- HTML generation using texi2html is deprecated in favor of makeinfo/texi2any\n- silenceremove filter\n\n\nversion 2.3:\n- AC3 fixed-point decoding\n- shuffleplanes filter\n- subfile protocol\n- Phantom Cine demuxer\n- replaygain data export\n- VP7 video decoder\n- Alias PIX image encoder and decoder\n- Improvements to the BRender PIX image decoder\n- Improvements to the XBM decoder\n- QTKit input device\n- improvements to OpenEXR image decoder\n- support decoding 16-bit RLE SGI images\n- GDI screen grabbing for Windows\n- alternative rendition support for HTTP Live Streaming\n- AVFoundation input device\n- Direct Stream Digital (DSD) decoder\n- Magic Lantern Video (MLV) demuxer\n- On2 AVC (Audio for Video) decoder\n- support for decoding through DXVA2 in ffmpeg\n- libbs2b-based stereo-to-binaural audio filter\n- libx264 reference frames count limiting depending on level\n- native Opus decoder\n- display matrix export and rotation API\n- WebVTT encoder\n- showcqt multimedia filter\n- zoompan filter\n- signalstats filter\n- hqx filter (hq2x, hq3x, hq4x)\n- flanger filter\n- Image format auto-detection\n- LRC demuxer and muxer\n- Samba protocol (via libsmbclient)\n- WebM DASH Manifest muxer\n- libfribidi support in drawtext\n\n\nversion 2.2:\n\n- HNM version 4 demuxer and video decoder\n- Live HDS muxer\n- setsar/setdar filters now support variables in ratio expressions\n- elbg filter\n- string validation in ffprobe\n- support for decoding through VDPAU in ffmpeg (the -hwaccel option)\n- complete Voxware MetaSound decoder\n- remove mp3_header_compress bitstream filter\n- Windows resource files for shared libraries\n- aeval filter\n- stereoscopic 3d metadata handling\n- WebP encoding via libwebp\n- ATRAC3+ decoder\n- VP8 in Ogg demuxing\n- side & metadata support in NUT\n- framepack filter\n- XYZ12 rawvideo support in NUT\n- Exif metadata support in WebP decoder\n- OpenGL device\n- Use metadata_header_padding to control padding in ID3 tags (currently used in\n  MP3, AIFF, and OMA files), FLAC header, and the AVI \"junk\" block.\n- Mirillis FIC video decoder\n- Support DNx444\n- libx265 encoder\n- dejudder filter\n- Autodetect VDA like all other hardware accelerations\n- aliases and defaults for Ogg subtypes (opus, spx)\n\n\nversion 2.1:\n\n- aecho filter\n- perspective filter ported from libmpcodecs\n- ffprobe -show_programs option\n- compand filter\n- RTMP seek support\n- when transcoding with ffmpeg (i.e. not streamcopying), -ss is now accurate\n  even when used as an input option. Previous behavior can be restored with\n  the -noaccurate_seek option.\n- ffmpeg -t option can now be used for inputs, to limit the duration of\n  data read from an input file\n- incomplete Voxware MetaSound decoder\n- read EXIF metadata from JPEG\n- DVB teletext decoder\n- phase filter ported from libmpcodecs\n- w3fdif filter\n- Opus support in Matroska\n- FFV1 version 1.3 is stable and no longer experimental\n- FFV1: YUVA(444,422,420) 9, 10 and 16 bit support\n- changed DTS stream id in lavf mpeg ps muxer from 0x8a to 0x88, to be\n  more consistent with other muxers.\n- adelay filter\n- pullup filter ported from libmpcodecs\n- ffprobe -read_intervals option\n- Lossless and alpha support for WebP decoder\n- Error Resilient AAC syntax (ER AAC LC) decoding\n- Low Delay AAC (ER AAC LD) decoding\n- mux chapters in ASF files\n- SFTP protocol (via libssh)\n- libx264: add ability to encode in YUVJ422P and YUVJ444P\n- Fraps: use BT.709 colorspace by default for yuv, as reference fraps decoder does\n- make decoding alpha optional for prores, ffv1 and vp6 by setting\n  the skip_alpha flag.\n- ladspa wrapper filter\n- native VP9 decoder\n- dpx parser\n- max_error_rate parameter in ffmpeg\n- PulseAudio output device\n- ReplayGain scanner\n- Enhanced Low Delay AAC (ER AAC ELD) decoding (no LD SBR support)\n- Linux framebuffer output device\n- HEVC decoder\n- raw HEVC, HEVC in MOV/MP4, HEVC in Matroska, HEVC in MPEG-TS demuxing\n- mergeplanes filter\n\n\nversion 2.0:\n\n- curves filter\n- reference-counting for AVFrame and AVPacket data\n- ffmpeg now fails when input options are used for output file\n  or vice versa\n- support for Monkey's Audio versions from 3.93\n- perms and aperms filters\n- audio filtering support in ffplay\n- 10% faster aac encoding on x86 and MIPS\n- sine audio filter source\n- WebP demuxing and decoding support\n- ffmpeg options -filter_script and -filter_complex_script, which allow a\n  filtergraph description to be read from a file\n- OpenCL support\n- audio phaser filter\n- separatefields filter\n- libquvi demuxer\n- uniform options syntax across all filters\n- telecine filter\n- interlace filter\n- smptehdbars source\n- inverse telecine filters (fieldmatch and decimate)\n- colorbalance filter\n- colorchannelmixer filter\n- The matroska demuxer can now output proper verbatim ASS packets. It will\n  become the default at the next libavformat major bump.\n- decent native animated GIF encoding\n- asetrate filter\n- interleave filter\n- timeline editing with filters\n- vidstabdetect and vidstabtransform filters for video stabilization using\n  the vid.stab library\n- astats filter\n- trim and atrim filters\n- ffmpeg -t and -ss (output-only) options are now sample-accurate when\n  transcoding audio\n- Matroska muxer can now put the index at the beginning of the file.\n- extractplanes filter\n- avectorscope filter\n- ADPCM DTK decoder\n- ADP demuxer\n- RSD demuxer\n- RedSpark demuxer\n- ADPCM IMA Radical decoder\n- zmq filters\n- DCT denoiser filter (dctdnoiz)\n- Wavelet denoiser filter ported from libmpcodecs as owdenoise (formerly \"ow\")\n- Apple Intermediate Codec decoder\n- Escape 130 video decoder\n- FTP protocol support\n- V4L2 output device\n- 3D LUT filter (lut3d)\n- SMPTE 302M audio encoder\n- support for slice multithreading in libavfilter\n- Hald CLUT support (generation and filtering)\n- VC-1 interlaced B-frame support\n- support for WavPack muxing (raw and in Matroska)\n- XVideo output device\n- vignette filter\n- True Audio (TTA) encoder\n- Go2Webinar decoder\n- mcdeint filter ported from libmpcodecs\n- sab filter ported from libmpcodecs\n- ffprobe -show_chapters option\n- WavPack encoding through libwavpack\n- rotate filter\n- spp filter ported from libmpcodecs\n- libgme support\n- psnr filter\n\n\nversion 1.2:\n\n- VDPAU hardware acceleration through normal hwaccel\n- SRTP support\n- Error diffusion dither in Swscale\n- Chained Ogg support\n- Theora Midstream reconfiguration support\n- EVRC decoder\n- audio fade filter\n- filtering audio with unknown channel layout\n- allpass, bass, bandpass, bandreject, biquad, equalizer, highpass, lowpass\n  and treble audio filter\n- improved showspectrum filter, with multichannel support and sox-like colors\n- histogram filter\n- tee muxer\n- il filter ported from libmpcodecs\n- support ID3v2 tags in ASF files\n- encrypted TTA stream decoding support\n- RF64 support in WAV muxer\n- noise filter ported from libmpcodecs\n- Subtitles character encoding conversion\n- blend filter\n- stereo3d filter ported from libmpcodecs\n\n\nversion 1.1:\n\n- stream disposition information printing in ffprobe\n- filter for loudness analysis following EBU R128\n- Opus encoder using libopus\n- ffprobe -select_streams option\n- Pinnacle TARGA CineWave YUV16 decoder\n- TAK demuxer, decoder and parser\n- DTS-HD demuxer\n- remove -same_quant, it hasn't worked for years\n- FFM2 support\n- X-Face image encoder and decoder\n- 24-bit FLAC encoding\n- multi-channel ALAC encoding up to 7.1\n- metadata (INFO tag) support in WAV muxer\n- subtitles raw text decoder\n- support for building DLLs using MSVC\n- LVF demuxer\n- ffescape tool\n- metadata (info chunk) support in CAF muxer\n- field filter ported from libmpcodecs\n- AVR demuxer\n- geq filter ported from libmpcodecs\n- remove ffserver daemon mode\n- AST muxer/demuxer\n- new expansion syntax for drawtext\n- BRender PIX image decoder\n- ffprobe -show_entries option\n- ffprobe -sections option\n- ADPCM IMA Dialogic decoder\n- BRSTM demuxer\n- animated GIF decoder and demuxer\n- PVF demuxer\n- subtitles filter\n- IRCAM muxer/demuxer\n- Paris Audio File demuxer\n- Virtual concatenation demuxer\n- VobSub demuxer\n- JSON captions for TED talks decoding support\n- SOX Resampler support in libswresample\n- aselect filter\n- SGI RLE 8-bit / Silicon Graphics RLE 8-bit video decoder\n- Silicon Graphics Motion Video Compressor 1 & 2 decoder\n- Silicon Graphics Movie demuxer\n- apad filter\n- Resolution & pixel format change support with multithreading for H.264\n- documentation split into per-component manuals\n- pp (postproc) filter ported from MPlayer\n- NIST Sphere demuxer\n- MPL2, VPlayer, MPlayer, AQTitle, PJS and SubViewer v1 subtitles demuxers and decoders\n- Sony Wave64 muxer\n- adobe and limelight publisher authentication in RTMP\n- data: URI scheme\n- support building on the Plan 9 operating system\n- kerndeint filter ported from MPlayer\n- histeq filter ported from VirtualDub\n- Megalux Frame demuxer\n- 012v decoder\n- Improved AVC Intra decoding support\n\n\nversion 1.0:\n\n- INI and flat output in ffprobe\n- Scene detection in libavfilter\n- Indeo Audio decoder\n- channelsplit audio filter\n- setnsamples audio filter\n- atempo filter\n- ffprobe -show_data option\n- RTMPT protocol support\n- iLBC encoding/decoding via libilbc\n- Microsoft Screen 1 decoder\n- join audio filter\n- audio channel mapping filter\n- Microsoft ATC Screen decoder\n- RTSP listen mode\n- TechSmith Screen Codec 2 decoder\n- AAC encoding via libfdk-aac\n- Microsoft Expression Encoder Screen decoder\n- RTMPS protocol support\n- RTMPTS protocol support\n- RTMPE protocol support\n- RTMPTE protocol support\n- showwaves and showspectrum filter\n- LucasArts SMUSH SANM playback support\n- LucasArts SMUSH VIMA audio decoder (ADPCM)\n- LucasArts SMUSH demuxer\n- SAMI, RealText and SubViewer demuxers and decoders\n- Heart Of Darkness PAF playback support\n- iec61883 device\n- asettb filter\n- new option: -progress\n- 3GPP Timed Text encoder/decoder\n- GeoTIFF decoder support\n- ffmpeg -(no)stdin option\n- Opus decoder using libopus\n- caca output device using libcaca\n- alphaextract and alphamerge filters\n- concat filter\n- flite filter\n- Canopus Lossless Codec decoder\n- bitmap subtitles in filters (experimental and temporary)\n- MP2 encoding via TwoLAME\n- bmp parser\n- smptebars source\n- asetpts filter\n- hue filter\n- ICO muxer\n- SubRip encoder and decoder without embedded timing\n- edge detection filter\n- framestep filter\n- ffmpeg -shortest option is now per-output file\n  -pass and -passlogfile are now per-output stream\n- volume measurement filter\n- Ut Video encoder\n- Microsoft Screen 2 decoder\n- smartblur filter ported from MPlayer\n- CPiA decoder\n- decimate filter ported from MPlayer\n- RTP depacketization of JPEG\n- Smooth Streaming live segmenter muxer\n- F4V muxer\n- sendcmd and asendcmd filters\n- WebVTT demuxer and decoder (simple tags supported)\n- RTP packetization of JPEG\n- faststart option in the MOV/MP4 muxer\n- support for building with MSVC\n\n\nversion 0.11:\n\n- Fixes: CVE-2012-2772, CVE-2012-2774, CVE-2012-2775, CVE-2012-2776, CVE-2012-2777,\n         CVE-2012-2779, CVE-2012-2782, CVE-2012-2783, CVE-2012-2784, CVE-2012-2785,\n         CVE-2012-2786, CVE-2012-2787, CVE-2012-2788, CVE-2012-2789, CVE-2012-2790,\n         CVE-2012-2791, CVE-2012-2792, CVE-2012-2793, CVE-2012-2794, CVE-2012-2795,\n         CVE-2012-2796, CVE-2012-2797, CVE-2012-2798, CVE-2012-2799, CVE-2012-2800,\n         CVE-2012-2801, CVE-2012-2802, CVE-2012-2803, CVE-2012-2804,\n- v408 Quicktime and Microsoft AYUV Uncompressed 4:4:4:4 encoder and decoder\n- setfield filter\n- CDXL demuxer and decoder\n- Apple ProRes encoder\n- ffprobe -count_packets and -count_frames options\n- Sun Rasterfile Encoder\n- ID3v2 attached pictures reading and writing\n- WMA Lossless decoder\n- bluray protocol\n- blackdetect filter\n- libutvideo encoder wrapper (--enable-libutvideo)\n- swapuv filter\n- bbox filter\n- XBM encoder and decoder\n- RealAudio Lossless decoder\n- ZeroCodec decoder\n- tile video filter\n- Metal Gear Solid: The Twin Snakes demuxer\n- OpenEXR image decoder\n- removelogo filter\n- drop support for ffmpeg without libavfilter\n- drawtext video filter: fontconfig support\n- ffmpeg -benchmark_all option\n- super2xsai filter ported from libmpcodecs\n- add libavresample audio conversion library for compatibility\n- MicroDVD decoder\n- Avid Meridien (AVUI) encoder and decoder\n- accept + prefix to -pix_fmt option to disable automatic conversions.\n- complete audio filtering in libavfilter and ffmpeg\n- add fps filter\n- vorbis parser\n- png parser\n- audio mix filter\n- ffv1: support (draft) version 1.3\n\n\nversion 0.10:\n\n- Fixes: CVE-2011-3929, CVE-2011-3934, CVE-2011-3935, CVE-2011-3936,\n         CVE-2011-3937, CVE-2011-3940, CVE-2011-3941, CVE-2011-3944,\n         CVE-2011-3945, CVE-2011-3946, CVE-2011-3947, CVE-2011-3949,\n         CVE-2011-3950, CVE-2011-3951, CVE-2011-3952\n- v410 Quicktime Uncompressed 4:4:4 10-bit encoder and decoder\n- SBaGen (SBG) binaural beats script demuxer\n- OpenMG Audio muxer\n- Timecode extraction in DV and MOV\n- thumbnail video filter\n- XML output in ffprobe\n- asplit audio filter\n- tinterlace video filter\n- astreamsync audio filter\n- amerge audio filter\n- ISMV (Smooth Streaming) muxer\n- GSM audio parser\n- SMJPEG muxer\n- XWD encoder and decoder\n- Automatic thread count based on detection number of (available) CPU cores\n- y41p Brooktree Uncompressed 4:1:1 12-bit encoder and decoder\n- ffprobe -show_error option\n- Avid 1:1 10-bit RGB Packer codec\n- v308 Quicktime Uncompressed 4:4:4 encoder and decoder\n- yuv4 libquicktime packed 4:2:0 encoder and decoder\n- ffprobe -show_frames option\n- silencedetect audio filter\n- ffprobe -show_program_version, -show_library_versions, -show_versions options\n- rv34: frame-level multi-threading\n- optimized iMDCT transform on x86 using SSE for for mpegaudiodec\n- Improved PGS subtitle decoder\n- dumpgraph option to lavfi device\n- r210 and r10k encoders\n- ffwavesynth decoder\n- aviocat tool\n- ffeval tool\n- support encoding and decoding 4-channel SGI images\n\n\nversion 0.9:\n\n- openal input device added\n- boxblur filter added\n- BWF muxer\n- Flash Screen Video 2 decoder\n- lavfi input device added\n- added avconv, which is almost the same for now, except\nfor a few incompatible changes in the options, which will hopefully make them\neasier to use. The changes are:\n    * The options placement is now strictly enforced! While in theory the\n      options for ffmpeg should be given in [input options] -i INPUT [output\n      options] OUTPUT order, in practice it was possible to give output options\n      before the -i and it mostly worked. Except when it didn't - the behavior was\n      a bit inconsistent. In avconv, it is not possible to mix input and output\n      options. All non-global options are reset after an input or output filename.\n    * All per-file options are now truly per-file - they apply only to the next\n      input or output file and specifying different values for different files\n      will now work properly (notably -ss and -t options).\n    * All per-stream options are now truly per-stream - it is possible to\n      specify which stream(s) should a given option apply to. See the Stream\n      specifiers section in the avconv manual for details.\n    * In ffmpeg some options (like -newvideo/-newaudio/...) are irregular in the\n      sense that they're specified after the output filename instead of before,\n      like all other options. In avconv this irregularity is removed, all options\n      apply to the next input or output file.\n    * -newvideo/-newaudio/-newsubtitle options were removed. Not only were they\n      irregular and highly confusing, they were also redundant. In avconv the -map\n      option will create new streams in the output file and map input streams to\n      them. E.g. avconv -i INPUT -map 0 OUTPUT will create an output stream for\n      each stream in the first input file.\n    * The -map option now has slightly different and more powerful syntax:\n        + Colons (':') are used to separate file index/stream type/stream index\n          instead of dots. Comma (',') is used to separate the sync stream instead\n          of colon.. This is done for consistency with other options.\n        + It's possible to specify stream type. E.g. -map 0:a:2 creates an\n          output stream from the third input audio stream.\n        + Omitting the stream index now maps all the streams of the given type,\n          not just the first. E.g. -map 0:s creates output streams for all the\n          subtitle streams in the first input file.\n        + Since -map can now match multiple streams, negative mappings were\n          introduced. Negative mappings disable some streams from an already\n          defined map. E.g. '-map 0 -map -0:a:1' means 'create output streams for\n          all the stream in the first input file, except for the second audio\n          stream'.\n    * There is a new option -c (or -codec) for choosing the decoder/encoder to\n      use, which makes it possible to precisely specify target stream(s) consistently with\n      other options. E.g. -c:v lib264 sets the codec for all video streams, -c:a:0\n      libvorbis sets the codec for the first audio stream and -c copy copies all\n      the streams without reencoding. Old -vcodec/-acodec/-scodec options are now\n      aliases to -c:v/a/s\n    * It is now possible to precisely specify which stream should an AVOption\n      apply to. E.g. -b:v:0 2M sets the bitrate for the first video stream, while\n      -b:a 128k sets the bitrate for all audio streams. Note that the old -ab 128k\n      syntax is deprecated and will stop working soon.\n    * -map_chapters now takes only an input file index and applies to the next\n      output file. This is consistent with how all the other options work.\n    * -map_metadata now takes only an input metadata specifier and applies to\n      the next output file. Output metadata specifier is now part of the option\n      name, similarly to the AVOptions/map/codec feature above.\n    * -metadata can now be used to set metadata on streams and chapters, e.g.\n      -metadata:s:1 language=eng sets the language of the first stream to 'eng'.\n      This made -vlang/-alang/-slang options redundant, so they were removed.\n    * -qscale option now uses stream specifiers and applies to all streams, not\n      just video. I.e. plain -qscale number would now apply to all streams. To get\n      the old behavior, use -qscale:v. Also there is now a shortcut -q for -qscale\n      and -aq is now an alias for -q:a.\n    * -vbsf/-absf/-sbsf options were removed and replaced by a -bsf option which\n      uses stream specifiers. Use -bsf:v/a/s instead of the old options.\n    * -itsscale option now uses stream specifiers, so its argument is only the\n      scale parameter.\n    * -intra option was removed, use -g 0 for the same effect.\n    * -psnr option was removed, use -flags +psnr for the same effect.\n    * -vf option is now an alias to the new -filter option, which uses stream specifiers.\n    * -vframes/-aframes/-dframes options are now aliases to the new -frames option.\n    * -vtag/-atag/-stag options are now aliases to the new -tag option.\n- XMV demuxer\n- LOAS demuxer\n- ashowinfo filter added\n- Windows Media Image decoder\n- amovie source added\n- LATM muxer/demuxer\n- Speex encoder via libspeex\n- JSON output in ffprobe\n- WTV muxer\n- Optional C++ Support (needed for libstagefright)\n- H.264 Decoding on Android via Stagefright\n- Prores decoder\n- BIN/XBIN/ADF/IDF text file decoder\n- aconvert audio filter added\n- audio support to lavfi input device added\n- libcdio-paranoia input device for audio CD grabbing\n- Apple ProRes decoder\n- CELT in Ogg demuxing\n- G.723.1 demuxer and decoder\n- libmodplug support (--enable-libmodplug)\n- VC-1 interlaced decoding\n- libutvideo wrapper (--enable-libutvideo)\n- aevalsrc audio source added\n- Ut Video decoder\n- Speex encoding via libspeex\n- 4:2:2 H.264 decoding support\n- 4:2:2 and 4:4:4 H.264 encoding with libx264\n- Pulseaudio input device\n- Prores encoder\n- Video Decoder Acceleration (VDA) HWAccel module.\n- replacement Indeo 3 decoder\n- new ffmpeg option: -map_channel\n- volume audio filter added\n- earwax audio filter added\n- libv4l2 support (--enable-libv4l2)\n- TLS/SSL and HTTPS protocol support\n- AVOptions API rewritten and documented\n- most of CODEC_FLAG2_*, some CODEC_FLAG_* and many codec-specific fields in\n  AVCodecContext deprecated. Codec private options should be used instead.\n- Properly working defaults in libx264 wrapper, support for native presets.\n- Encrypted OMA files support\n- Discworld II BMV decoding support\n- VBLE Decoder\n- OS X Video Decoder Acceleration (VDA) support\n- compact and csv output in ffprobe\n- pan audio filter\n- IFF Amiga Continuous Bitmap (ACBM) decoder\n- ass filter\n- CRI ADX audio format muxer and demuxer\n- Playstation Portable PMP format demuxer\n- Microsoft Windows ICO demuxer\n- life source\n- PCM format support in OMA demuxer\n- CLJR encoder\n- new option: -report\n- Dxtory capture format decoder\n- cellauto source\n- Simple segmenting muxer\n- Indeo 4 decoder\n- SMJPEG demuxer\n\n\nversion 0.8:\n\n- many many things we forgot because we rather write code than changelogs\n- WebM support in Matroska de/muxer\n- low overhead Ogg muxing\n- MMS-TCP support\n- VP8 de/encoding via libvpx\n- Demuxer for On2's IVF format\n- Pictor/PC Paint decoder\n- HE-AAC v2 decoder\n- HE-AAC v2 encoding with libaacplus\n- libfaad2 wrapper removed\n- DTS-ES extension (XCh) decoding support\n- native VP8 decoder\n- RTSP tunneling over HTTP\n- RTP depacketization of SVQ3\n- -strict inofficial replaced by -strict unofficial\n- ffplay -exitonkeydown and -exitonmousedown options added\n- native GSM / GSM MS decoder\n- RTP depacketization of QDM2\n- ANSI/ASCII art playback system\n- Lego Mindstorms RSO de/muxer\n- libavcore added (and subsequently removed)\n- SubRip subtitle file muxer and demuxer\n- Chinese AVS encoding via libxavs\n- ffprobe -show_packets option added\n- RTP packetization of Theora and Vorbis\n- RTP depacketization of MP4A-LATM\n- RTP packetization and depacketization of VP8\n- hflip filter\n- Apple HTTP Live Streaming demuxer\n- a64 codec\n- MMS-HTTP support\n- G.722 ADPCM audio encoder/decoder\n- R10k video decoder\n- ocv_smooth filter\n- frei0r wrapper filter\n- change crop filter syntax to width:height:x:y\n- make the crop filter accept parametric expressions\n- make ffprobe accept AVFormatContext options\n- yadif filter\n- blackframe filter\n- Demuxer for Leitch/Harris' VR native stream format (LXF)\n- RTP depacketization of the X-QT QuickTime format\n- SAP (Session Announcement Protocol, RFC 2974) muxer and demuxer\n- cropdetect filter\n- ffmpeg -crop* options removed\n- transpose filter added\n- ffmpeg -force_key_frames option added\n- demuxer for receiving raw rtp:// URLs without an SDP description\n- single stream LATM/LOAS decoder\n- setpts filter added\n- Win64 support for optimized x86 assembly functions\n- MJPEG/AVI1 to JPEG/JFIF bitstream filter\n- ASS subtitle encoder and decoder\n- IEC 61937 encapsulation for E-AC-3, TrueHD, DTS-HD (for HDMI passthrough)\n- overlay filter added\n- rename aspect filter to setdar, and pixelaspect to setsar\n- IEC 61937 demuxer\n- Mobotix .mxg demuxer\n- frei0r source added\n- hqdn3d filter added\n- RTP depacketization of QCELP\n- FLAC parser added\n- gradfun filter added\n- AMR-WB decoder\n- replace the ocv_smooth filter with a more generic ocv filter\n- Windows Televison (WTV) demuxer\n- FFmpeg metadata format muxer and demuxer\n- SubRip (srt) subtitle encoder and decoder\n- floating-point AC-3 encoder added\n- Lagarith decoder\n- ffmpeg -copytb option added\n- IVF muxer added\n- Wing Commander IV movies decoder added\n- movie source added\n- Bink version 'b' audio and video decoder\n- Bitmap Brothers JV playback system\n- Apple HTTP Live Streaming protocol handler\n- sndio support for playback and record\n- Linux framebuffer input device added\n- Chronomaster DFA decoder\n- DPX image encoder\n- MicroDVD subtitle file muxer and demuxer\n- Playstation Portable PMP format demuxer\n- fieldorder video filter added\n- AAC encoding via libvo-aacenc\n- AMR-WB encoding via libvo-amrwbenc\n- xWMA demuxer\n- Mobotix MxPEG decoder\n- VP8 frame-multithreading\n- NEON optimizations for VP8\n- Lots of deprecated API cruft removed\n- fft and imdct optimizations for AVX (Sandy Bridge) processors\n- showinfo filter added\n- SMPTE 302M AES3 audio decoder\n- Apple Core Audio Format muxer\n- 9 bits and 10 bits per sample support in the H.264 decoder\n- 9 bits and 10 bits FFV1 encoding / decoding\n- split filter added\n- select filter added\n- sdl output device added\n- libmpcodecs video filter support (3 times as many filters than before)\n- mpeg2 aspect ratio dection fixed\n- libxvid aspect pickiness fixed\n- Frame multithreaded decoding\n- E-AC-3 audio encoder\n- ac3enc: add channel coupling support\n- floating-point sample format support to the ac3, eac3, dca, aac, and vorbis decoders.\n- H264/MPEG frame-level multi-threading\n- All av_metadata_* functions renamed to av_dict_* and moved to libavutil\n- 4:4:4 H.264 decoding support\n- 10-bit H.264 optimizations for x86\n- lut, lutrgb, and lutyuv filters added\n- buffersink libavfilter sink added\n- Bump libswscale for recently reported ABI break\n- New J2K encoder (via OpenJPEG)\n\n\nversion 0.7:\n\n- all the changes for 0.8, but keeping API/ABI compatibility with the 0.6 release\n\n\nversion 0.6:\n\n- PB-frame decoding for H.263\n- deprecated vhook subsystem removed\n- deprecated old scaler removed\n- VQF demuxer\n- Alpha channel scaler\n- PCX encoder\n- RTP packetization of H.263\n- RTP packetization of AMR\n- RTP depacketization of Vorbis\n- CorePNG decoding support\n- Cook multichannel decoding support\n- introduced avlanguage helpers in libavformat\n- 8088flex TMV demuxer and decoder\n- per-stream language-tags extraction in asfdec\n- V210 decoder and encoder\n- remaining GPL parts in AC-3 decoder converted to LGPL\n- QCP demuxer\n- SoX native format muxer and demuxer\n- AMR-NB decoding/encoding, AMR-WB decoding via OpenCORE libraries\n- DPX image decoder\n- Electronic Arts Madcow decoder\n- DivX (XSUB) subtitle encoder\n- nonfree libamr support for AMR-NB/WB decoding/encoding removed\n- experimental AAC encoder\n- RTP depacketization of ASF and RTSP from WMS servers\n- RTMP support in libavformat\n- noX handling for OPT_BOOL X options\n- Wave64 demuxer\n- IEC-61937 compatible Muxer\n- TwinVQ decoder\n- Bluray (PGS) subtitle decoder\n- LPCM support in MPEG-TS (HDMV RID as found on Blu-ray disks)\n- WMA Pro decoder\n- Core Audio Format demuxer\n- ATRAC1 decoder\n- MD STUDIO audio demuxer\n- RF64 support in WAV demuxer\n- MPEG-4 Audio Lossless Coding (ALS) decoder\n- -formats option split into -formats, -codecs, -bsfs, and -protocols\n- IV8 demuxer\n- CDG demuxer and decoder\n- R210 decoder\n- Auravision Aura 1 and 2 decoders\n- Deluxe Paint Animation playback system\n- SIPR decoder\n- Adobe Filmstrip muxer and demuxer\n- RTP depacketization of H.263\n- Bink demuxer and audio/video decoders\n- enable symbol versioning by default for linkers that support it\n- IFF PBM/ILBM bitmap decoder\n- concat protocol\n- Indeo 5 decoder\n- RTP depacketization of AMR\n- WMA Voice decoder\n- ffprobe tool\n- AMR-NB decoder\n- RTSP muxer\n- HE-AAC v1 decoder\n- Kega Game Video (KGV1) decoder\n- VorbisComment writing for FLAC, Ogg FLAC and Ogg Speex files\n- RTP depacketization of Theora\n- HTTP Digest authentication\n- RTMP/RTMPT/RTMPS/RTMPE/RTMPTE protocol support via librtmp\n- Psygnosis YOP demuxer and video decoder\n- spectral extension support in the E-AC-3 decoder\n- unsharp video filter\n- RTP hinting in the mov/3gp/mp4 muxer\n- Dirac in Ogg demuxing\n- seek to keyframes in Ogg\n- 4:2:2 and 4:4:4 Theora decoding\n- 35% faster VP3/Theora decoding\n- faster AAC decoding\n- faster H.264 decoding\n- RealAudio 1.0 (14.4K) encoder\n\n\nversion 0.5:\n\n- DV50 AKA DVCPRO50 encoder, decoder, muxer and demuxer\n- TechSmith Camtasia (TSCC) video decoder\n- IBM Ultimotion (ULTI) video decoder\n- Sierra Online audio file demuxer and decoder\n- Apple QuickDraw (qdrw) video decoder\n- Creative ADPCM audio decoder (16 bits as well as 8 bits schemes)\n- Electronic Arts Multimedia (WVE/UV2/etc.) file demuxer\n- Miro VideoXL (VIXL) video decoder\n- H.261 video encoder\n- QPEG video decoder\n- Nullsoft Video (NSV) file demuxer\n- Shorten audio decoder\n- LOCO video decoder\n- Apple Lossless Audio Codec (ALAC) decoder\n- Winnov WNV1 video decoder\n- Autodesk Animator Studio Codec (AASC) decoder\n- Indeo 2 video decoder\n- Fraps FPS1 video decoder\n- Snow video encoder/decoder\n- Sonic audio encoder/decoder\n- Vorbis audio decoder\n- Macromedia ADPCM decoder\n- Duck TrueMotion 2 video decoder\n- support for decoding FLX and DTA extensions in FLIC files\n- H.264 custom quantization matrices support\n- ffserver fixed, it should now be usable again\n- QDM2 audio decoder\n- Real Cooker audio decoder\n- TrueSpeech audio decoder\n- WMA2 audio decoder fixed, now all files should play correctly\n- RealAudio 14.4 and 28.8 decoders fixed\n- JPEG-LS decoder\n- build system improvements\n- tabs and trailing whitespace removed from the codebase\n- CamStudio video decoder\n- AIFF/AIFF-C audio format, encoding and decoding\n- ADTS AAC file reading and writing\n- Creative VOC file reading and writing\n- American Laser Games multimedia (*.mm) playback system\n- Zip Motion Blocks Video decoder\n- improved Theora/VP3 decoder\n- True Audio (TTA) decoder\n- AVS demuxer and video decoder\n- JPEG-LS encoder\n- Smacker demuxer and decoder\n- NuppelVideo/MythTV demuxer and RTjpeg decoder\n- KMVC decoder\n- MPEG-2 intra VLC support\n- MPEG-2 4:2:2 encoder\n- Flash Screen Video decoder\n- GXF demuxer\n- Chinese AVS decoder\n- GXF muxer\n- MXF demuxer\n- VC-1/WMV3/WMV9 video decoder\n- MacIntel support\n- AviSynth support\n- VMware video decoder\n- VP5 video decoder\n- VP6 video decoder\n- WavPack lossless audio decoder\n- Targa (.TGA) picture decoder\n- Vorbis audio encoder\n- Delphine Software .cin demuxer/audio and video decoder\n- Tiertex .seq demuxer/video decoder\n- MTV demuxer\n- TIFF picture encoder and decoder\n- GIF picture decoder\n- Intel Music Coder decoder\n- Zip Motion Blocks Video encoder\n- Musepack decoder\n- Flash Screen Video encoder\n- Theora encoding via libtheora\n- BMP encoder\n- WMA encoder\n- GSM-MS encoder and decoder\n- DCA decoder\n- DXA demuxer and decoder\n- DNxHD decoder\n- Gamecube movie (.THP) playback system\n- Blackfin optimizations\n- Interplay C93 demuxer and video decoder\n- Bethsoft VID demuxer and video decoder\n- CRYO APC demuxer\n- ATRAC3 decoder\n- V.Flash PTX decoder\n- RoQ muxer, RoQ audio encoder\n- Renderware TXD demuxer and decoder\n- extern C declarations for C++ removed from headers\n- sws_flags command line option\n- codebook generator\n- RoQ video encoder\n- QTRLE encoder\n- OS/2 support removed and restored again\n- AC-3 decoder\n- NUT muxer\n- additional SPARC (VIS) optimizations\n- Matroska muxer\n- slice-based parallel H.264 decoding\n- Monkey's Audio demuxer and decoder\n- AMV audio and video decoder\n- DNxHD encoder\n- H.264 PAFF decoding\n- Nellymoser ASAO decoder\n- Beam Software SIFF demuxer and decoder\n- libvorbis Vorbis decoding removed in favor of native decoder\n- IntraX8 (J-Frame) subdecoder for WMV2 and VC-1\n- Ogg (Theora, Vorbis and FLAC) muxer\n- The \"device\" muxers and demuxers are now in a new libavdevice library\n- PC Paintbrush PCX decoder\n- Sun Rasterfile decoder\n- TechnoTrend PVA demuxer\n- Linux Media Labs MPEG-4 (LMLM4) demuxer\n- AVM2 (Flash 9) SWF muxer\n- QT variant of IMA ADPCM encoder\n- VFW grabber\n- iPod/iPhone compatible mp4 muxer\n- Mimic decoder\n- MSN TCP Webcam stream demuxer\n- RL2 demuxer / decoder\n- IFF demuxer\n- 8SVX audio decoder\n- non-recursive Makefiles\n- BFI demuxer\n- MAXIS EA XA (.xa) demuxer / decoder\n- BFI video decoder\n- OMA demuxer\n- MLP/TrueHD decoder\n- Electronic Arts CMV decoder\n- Motion Pixels Video decoder\n- Motion Pixels MVI demuxer\n- removed animated GIF decoder/demuxer\n- D-Cinema audio muxer\n- Electronic Arts TGV decoder\n- Apple Lossless Audio Codec (ALAC) encoder\n- AAC decoder\n- floating point PCM encoder/decoder\n- MXF muxer\n- DV100 AKA DVCPRO HD decoder and demuxer\n- E-AC-3 support added to AC-3 decoder\n- Nellymoser ASAO encoder\n- ASS and SSA demuxer and muxer\n- liba52 wrapper removed\n- SVQ3 watermark decoding support\n- Speex decoding via libspeex\n- Electronic Arts TGQ decoder\n- RV40 decoder\n- QCELP / PureVoice decoder\n- RV30 decoder\n- hybrid WavPack support\n- R3D REDCODE demuxer\n- ALSA support for playback and record\n- Electronic Arts TQI decoder\n- OpenJPEG based JPEG 2000 decoder\n- NC (NC4600) camera file demuxer\n- Gopher client support\n- MXF D-10 muxer\n- generic metadata API\n- flash ScreenVideo2 encoder\n\n\nversion 0.4.9-pre1:\n\n- DV encoder, DV muxer\n- Microsoft RLE video decoder\n- Microsoft Video-1 decoder\n- Apple Animation (RLE) decoder\n- Apple Graphics (SMC) decoder\n- Apple Video (RPZA) decoder\n- Cinepak decoder\n- Sega FILM (CPK) file demuxer\n- Westwood multimedia support (VQA & AUD files)\n- Id Quake II CIN playback support\n- 8BPS video decoder\n- FLIC playback support\n- RealVideo 2.0 (RV20) decoder\n- Duck TrueMotion v1 (DUCK) video decoder\n- Sierra VMD demuxer and video decoder\n- MSZH and ZLIB decoder support\n- SVQ1 video encoder\n- AMR-WB support\n- PPC optimizations\n- rate distortion optimal cbp support\n- rate distorted optimal ac prediction for MPEG-4\n- rate distorted optimal lambda->qp support\n- AAC encoding with libfaac\n- Sunplus JPEG codec (SP5X) support\n- use Lagrange multiplier instead of QP for ratecontrol\n- Theora/VP3 decoding support\n- XA and ADX ADPCM codecs\n- export MPEG-2 active display area / pan scan\n- Add support for configuring with IBM XLC\n- floating point AAN DCT\n- initial support for zygo video (not complete)\n- RGB ffv1 support\n- new audio/video parser API\n- av_log() system\n- av_read_frame() and av_seek_frame() support\n- missing last frame fixes\n- seek by mouse in ffplay\n- noise reduction of DCT coefficients\n- H.263 OBMC & 4MV support\n- H.263 alternative inter vlc support\n- H.263 loop filter\n- H.263 slice structured mode\n- interlaced DCT support for MPEG-2 encoding\n- stuffing to stay above min_bitrate\n- MB type & QP visualization\n- frame stepping for ffplay\n- interlaced motion estimation\n- alternate scantable support\n- SVCD scan offset support\n- closed GOP support\n- SSE2 FDCT\n- quantizer noise shaping\n- G.726 ADPCM audio codec\n- MS ADPCM encoding\n- multithreaded/SMP motion estimation\n- multithreaded/SMP encoding for MPEG-1/MPEG-2/MPEG-4/H.263\n- multithreaded/SMP decoding for MPEG-2\n- FLAC decoder\n- Metrowerks CodeWarrior suppport\n- H.263+ custom pcf support\n- nicer output for 'ffmpeg -formats'\n- Matroska demuxer\n- SGI image format, encoding and decoding\n- H.264 loop filter support\n- H.264 CABAC support\n- nicer looking arrows for the motion vector visualization\n- improved VCD support\n- audio timestamp drift compensation\n- MPEG-2 YUV 422/444 support\n- polyphase kaiser windowed sinc and blackman nuttall windowed sinc audio resample\n- better image scaling\n- H.261 support\n- correctly interleave packets during encoding\n- VIS optimized motion compensation\n- intra_dc_precision>0 encoding support\n- support reuse of motion vectors/MB types/field select values of the source video\n- more accurate deblock filter\n- padding support\n- many optimizations and bugfixes\n- FunCom ISS audio file demuxer and according ADPCM decoding\n\n\nversion 0.4.8:\n\n- MPEG-2 video encoding (Michael)\n- Id RoQ playback subsystem (Mike Melanson and Tim Ferguson)\n- Wing Commander III Movie (.mve) file playback subsystem (Mike Melanson\n  and Mario Brito)\n- Xan DPCM audio decoder (Mario Brito)\n- Interplay MVE playback subsystem (Mike Melanson)\n- Duck DK3 and DK4 ADPCM audio decoders (Mike Melanson)\n\n\nversion 0.4.7:\n\n- RealAudio 1.0 (14_4) and 2.0 (28_8) native decoders. Author unknown, code from mplayerhq\n  (originally from public domain player for Amiga at http://www.honeypot.net/audio)\n- current version now also compiles with older GCC (Fabrice)\n- 4X multimedia playback system including 4xm file demuxer (Mike\n  Melanson), and 4X video and audio codecs (Michael)\n- Creative YUV (CYUV) decoder (Mike Melanson)\n- FFV1 codec (our very simple lossless intra only codec, compresses much better\n  than HuffYUV) (Michael)\n- ASV1 (Asus), H.264, Intel indeo3 codecs have been added (various)\n- tiny PNG encoder and decoder, tiny GIF decoder, PAM decoder (PPM with\n  alpha support), JPEG YUV colorspace support. (Fabrice Bellard)\n- ffplay has been replaced with a newer version which uses SDL (optionally)\n  for multiplatform support (Fabrice)\n- Sorenson Version 3 codec (SVQ3) support has been added (decoding only) - donated\n  by anonymous\n- AMR format has been added (Johannes Carlsson)\n- 3GP support has been added (Johannes Carlsson)\n- VP3 codec has been added (Mike Melanson)\n- more MPEG-1/2 fixes\n- better multiplatform support, MS Visual Studio fixes (various)\n- AltiVec optimizations (Magnus Damn and others)\n- SH4 processor support has been added (BERO)\n- new public interfaces (avcodec_get_pix_fmt) (Roman Shaposhnick)\n- VOB streaming support (Brian Foley)\n- better MP3 autodetection (Andriy Rysin)\n- qpel encoding (Michael)\n- 4mv+b frames encoding finally fixed (Michael)\n- chroma ME (Michael)\n- 5 comparison functions for ME (Michael)\n- B-frame encoding speedup (Michael)\n- WMV2 codec (unfinished - Michael)\n- user specified diamond size for EPZS (Michael)\n- Playstation STR playback subsystem, still experimental (Mike and Michael)\n- ASV2 codec (Michael)\n- CLJR decoder (Alex)\n\n.. And lots more new enhancements and fixes.\n\n\nversion 0.4.6:\n\n- completely new integer only MPEG audio layer 1/2/3 decoder rewritten\n  from scratch\n- Recoded DCT and motion vector search with gcc (no longer depends on nasm)\n- fix quantization bug in AC3 encoder\n- added PCM codecs and format. Corrected WAV/AVI/ASF PCM issues\n- added prototype ffplay program\n- added GOB header parsing on H.263/H.263+ decoder (Juanjo)\n- bug fix on MCBPC tables of H.263 (Juanjo)\n- bug fix on DC coefficients of H.263 (Juanjo)\n- added Advanced Prediction Mode on H.263/H.263+ decoder (Juanjo)\n- now we can decode H.263 streams found in QuickTime files (Juanjo)\n- now we can decode H.263 streams found in VIVO v1 files(Juanjo)\n- preliminary RTP \"friendly\" mode for H.263/H.263+ coding. (Juanjo)\n- added GOB header for H.263/H.263+ coding on RTP mode (Juanjo)\n- now H.263 picture size is returned on the first decoded frame (Juanjo)\n- added first regression tests\n- added MPEG-2 TS demuxer\n- new demux API for libav\n- more accurate and faster IDCT (Michael)\n- faster and entropy-controlled motion search (Michael)\n- two pass video encoding (Michael)\n- new video rate control (Michael)\n- added MSMPEG4V1, MSMPEGV2 and WMV1 support (Michael)\n- great performance improvement of video encoders and decoders (Michael)\n- new and faster bit readers and vlc parsers (Michael)\n- high quality encoding mode: tries all macroblock/VLC types (Michael)\n- added DV video decoder\n- preliminary RTP/RTSP support in ffserver and libavformat\n- H.263+ AIC decoding/encoding support (Juanjo)\n- VCD MPEG-PS mode (Juanjo)\n- PSNR stuff (Juanjo)\n- simple stats output (Juanjo)\n- 16-bit and 15-bit RGB/BGR/GBR support (Bisqwit)\n\n\nversion 0.4.5:\n\n- some header fixes (Zdenek Kabelac <kabi at informatics.muni.cz>)\n- many MMX optimizations (Nick Kurshev <nickols_k at mail.ru>)\n- added configure system (actually a small shell script)\n- added MPEG audio layer 1/2/3 decoding using LGPL'ed mpglib by\n  Michael Hipp (temporary solution - waiting for integer only\n  decoder)\n- fixed VIDIOCSYNC interrupt\n- added Intel H.263 decoding support ('I263' AVI fourCC)\n- added Real Video 1.0 decoding (needs further testing)\n- simplified image formats again. Added PGM format (=grey\n  pgm). Renamed old PGM to PGMYUV.\n- fixed msmpeg4 slice issues (tell me if you still find problems)\n- fixed OpenDivX bugs with newer versions (added VOL header decoding)\n- added support for MPlayer interface\n- added macroblock skip optimization\n- added MJPEG decoder\n- added mmx/mmxext IDCT from libmpeg2\n- added pgmyuvpipe, ppm, and ppm_pipe formats (original patch by Celer\n  <celer at shell.scrypt.net>)\n- added pixel format conversion layer (e.g. for MJPEG or PPM)\n- added deinterlacing option\n- MPEG-1/2 fixes\n- MPEG-4 vol header fixes (Jonathan Marsden <snmjbm at pacbell.net>)\n- ARM optimizations (Lionel Ulmer <lionel.ulmer at free.fr>).\n- Windows porting of file converter\n- added MJPEG raw format (input/output)\n- added JPEG image format support (input/output)\n\n\nversion 0.4.4:\n\n- fixed some std header definitions (Bjorn Lindgren\n  <bjorn.e.lindgren at telia.com>).\n- added MPEG demuxer (MPEG-1 and 2 compatible).\n- added ASF demuxer\n- added prototype RM demuxer\n- added AC3 decoding (done with libac3 by Aaron Holtzman)\n- added decoding codec parameter guessing (.e.g. for MPEG, because the\n  header does not include them)\n- fixed header generation in MPEG-1, AVI and ASF muxer: wmplayer can now\n  play them (only tested video)\n- fixed H.263 white bug\n- fixed phase rounding in img resample filter\n- add MMX code for polyphase img resample filter\n- added CPU autodetection\n- added generic title/author/copyright/comment string handling (ASF and RM\n  use them)\n- added SWF demux to extract MP3 track (not usable yet because no MP3\n  decoder)\n- added fractional frame rate support\n- codecs are no longer searched by read_header() (should fix ffserver\n  segfault)\n\n\nversion 0.4.3:\n\n- BGR24 patch (initial patch by Jeroen Vreeken <pe1rxq at amsat.org>)\n- fixed raw yuv output\n- added motion rounding support in MPEG-4\n- fixed motion bug rounding in MSMPEG4\n- added B-frame handling in video core\n- added full MPEG-1 decoding support\n- added partial (frame only) MPEG-2 support\n- changed the FOURCC code for H.263 to \"U263\" to be able to see the\n  +AVI/H.263 file with the UB Video H.263+ decoder. MPlayer works with\n  this +codec ;) (JuanJo).\n- Halfpel motion estimation after MB type selection (JuanJo)\n- added pgm and .Y.U.V output format\n- suppressed 'img:' protocol. Simply use: /tmp/test%d.[pgm|Y] as input or\n  output.\n- added pgmpipe I/O format (original patch from Martin Aumueller\n  <lists at reserv.at>, but changed completely since we use a format\n  instead of a protocol)\n\n\nversion 0.4.2:\n\n- added H.263/MPEG-4/MSMPEG4 decoding support. MPEG-4 decoding support\n  (for OpenDivX) is almost complete: 8x8 MVs and rounding are\n  missing. MSMPEG4 support is complete.\n- added prototype MPEG-1 decoder. Only I- and P-frames handled yet (it\n  can decode ffmpeg MPEGs :-)).\n- added libavcodec API documentation (see apiexample.c).\n- fixed image polyphase bug (the bottom of some images could be\n  greenish)\n- added support for non clipped motion vectors (decoding only)\n  and image sizes non-multiple of 16\n- added support for AC prediction (decoding only)\n- added file overwrite confirmation (can be disabled with -y)\n- added custom size picture to H.263 using H.263+ (Juanjo)\n\n\nversion 0.4.1:\n\n- added MSMPEG4 (aka DivX) compatible encoder. Changed default codec\n  of AVI and ASF to DIV3.\n- added -me option to set motion estimation method\n  (default=log). suppressed redundant -hq option.\n- added options -acodec and -vcodec to force a given codec (useful for\n  AVI for example)\n- fixed -an option\n- improved dct_quantize speed\n- factorized some motion estimation code\n\n\nversion 0.4.0:\n\n- removing grab code from ffserver and moved it to ffmpeg. Added\n  multistream support to ffmpeg.\n- added timeshifting support for live feeds (option ?date=xxx in the\n  URL)\n- added high quality image resize code with polyphase filter (need\n  mmx/see optimization). Enable multiple image size support in ffserver.\n- added multi live feed support in ffserver\n- suppressed master feature from ffserver (it should be done with an\n  external program which opens the .ffm url and writes it to another\n  ffserver)\n- added preliminary support for video stream parsing (WAV and AVI half\n  done). Added proper support for audio/video file conversion in\n  ffmpeg.\n- added preliminary support for video file sending from ffserver\n- redesigning I/O subsystem: now using URL based input and output\n  (see avio.h)\n- added WAV format support\n- added \"tty user interface\" to ffmpeg to stop grabbing gracefully\n- added MMX/SSE optimizations to SAD (Sums of Absolutes Differences)\n  (Juan J. Sierralta P. a.k.a. \"Juanjo\" <juanjo at atmlab.utfsm.cl>)\n- added MMX DCT from mpeg2_movie 1.5 (Juanjo)\n- added new motion estimation algorithms, log and phods (Juanjo)\n- changed directories: libav for format handling, libavcodec for\n  codecs\n\n\nversion 0.3.4:\n\n- added stereo in MPEG audio encoder\n\n\nversion 0.3.3:\n\n- added 'high quality' mode which use motion vectors. It can be used in\n  real time at low resolution.\n- fixed rounding problems which caused quality problems at high\n  bitrates and large GOP size\n\n\nversion 0.3.2: small fixes\n\n- ASF fixes\n- put_seek bug fix\n\n\nversion 0.3.1: added avi/divx support\n\n- added AVI support\n- added MPEG-4 codec compatible with OpenDivX. It is based on the H.263 codec\n- added sound for flash format (not tested)\n\n\nversion 0.3: initial public release\n"
        },
        {
          "name": "INSTALL.md",
          "type": "blob",
          "size": 1,
          "content": "## Installing FFmpeg\n\n1. Type `./configure` to create the configuration. A list of configure\noptions is printed by running `configure --help`.\n\n    `configure` can be launched from a directory different from the FFmpeg\nsources to build the objects out of tree. To do this, use an absolute\npath when launching `configure`, e.g. `/ffmpegdir/ffmpeg/configure`.\n\n2. Then type `make` to build FFmpeg. GNU Make 3.81 or later is required.\n\n3. Type `make install` to install all binaries and libraries you built.\n\nNOTICE\n------\n\n - Non system dependencies (e.g. libx264, libvpx) are disabled by default.\n\nNOTICE for Package Maintainers\n------------------------------\n\n - It is recommended to build FFmpeg twice, first with minimal external dependencies so\n   that 3rd party packages, which depend on FFmpegs libavutil/libavfilter/libavcodec/libavformat\n   can then be built. And last build FFmpeg with full dependancies (which may in turn depend on\n   some of these 3rd party packages). This avoids circular dependencies during build.\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 4.27,
          "content": "# License\n\nMost files in FFmpeg are under the GNU Lesser General Public License version 2.1\nor later (LGPL v2.1+). Read the file `COPYING.LGPLv2.1` for details. Some other\nfiles have MIT/X11/BSD-style licenses. In combination the LGPL v2.1+ applies to\nFFmpeg.\n\nSome optional parts of FFmpeg are licensed under the GNU General Public License\nversion 2 or later (GPL v2+). See the file `COPYING.GPLv2` for details. None of\nthese parts are used by default, you have to explicitly pass `--enable-gpl` to\nconfigure to activate them. In this case, FFmpeg's license changes to GPL v2+.\n\nSpecifically, the GPL parts of FFmpeg are:\n\n- libpostproc\n- optional x86 optimization in the files\n    - `libavcodec/x86/flac_dsp_gpl.asm`\n    - `libavcodec/x86/idct_mmx.c`\n    - `libavfilter/x86/vf_removegrain.asm`\n- the following building and testing tools\n    - `compat/solaris/make_sunver.pl`\n    - `doc/t2h.pm`\n    - `doc/texi2pod.pl`\n    - `libswresample/tests/swresample.c`\n    - `tests/checkasm/*`\n    - `tests/tiny_ssim.c`\n- the following filters in libavfilter:\n    - `signature_lookup.c`\n    - `vf_blackframe.c`\n    - `vf_boxblur.c`\n    - `vf_colormatrix.c`\n    - `vf_cover_rect.c`\n    - `vf_cropdetect.c`\n    - `vf_delogo.c`\n    - `vf_eq.c`\n    - `vf_find_rect.c`\n    - `vf_fspp.c`\n    - `vf_histeq.c`\n    - `vf_hqdn3d.c`\n    - `vf_kerndeint.c`\n    - `vf_lensfun.c` (GPL version 3 or later)\n    - `vf_mcdeint.c`\n    - `vf_mpdecimate.c`\n    - `vf_nnedi.c`\n    - `vf_owdenoise.c`\n    - `vf_perspective.c`\n    - `vf_phase.c`\n    - `vf_pp.c`\n    - `vf_pp7.c`\n    - `vf_pullup.c`\n    - `vf_repeatfields.c`\n    - `vf_sab.c`\n    - `vf_signature.c`\n    - `vf_smartblur.c`\n    - `vf_spp.c`\n    - `vf_stereo3d.c`\n    - `vf_super2xsai.c`\n    - `vf_tinterlace.c`\n    - `vf_uspp.c`\n    - `vf_vaguedenoiser.c`\n    - `vsrc_mptestsrc.c`\n\nShould you, for whatever reason, prefer to use version 3 of the (L)GPL, then\nthe configure parameter `--enable-version3` will activate this licensing option\nfor you. Read the file `COPYING.LGPLv3` or, if you have enabled GPL parts,\n`COPYING.GPLv3` to learn the exact legal terms that apply in this case.\n\nThere are a handful of files under other licensing terms, namely:\n\n* The files `libavcodec/jfdctfst.c`, `libavcodec/jfdctint_template.c` and\n  `libavcodec/jrevdct.c` are taken from libjpeg, see the top of the files for\n  licensing details. Specifically note that you must credit the IJG in the\n  documentation accompanying your program if you only distribute executables.\n  You must also indicate any changes including additions and deletions to\n  those three files in the documentation.\n* `tests/reference.pnm` is under the expat license.\n\n\n## External libraries\n\nFFmpeg can be combined with a number of external libraries, which sometimes\naffect the licensing of binaries resulting from the combination.\n\n### Compatible libraries\n\nThe following libraries are under GPL version 2:\n- avisynth\n- frei0r\n- libcdio\n- libdavs2\n- librubberband\n- libvidstab\n- libx264\n- libx265\n- libxavs\n- libxavs2\n- libxvid\n\nWhen combining them with FFmpeg, FFmpeg needs to be licensed as GPL as well by\npassing `--enable-gpl` to configure.\n\nThe following libraries are under LGPL version 3:\n- gmp\n- libaribb24\n- liblensfun\n\nWhen combining them with FFmpeg, use the configure option `--enable-version3` to\nupgrade FFmpeg to the LGPL v3.\n\nThe VMAF, mbedTLS, RK MPI, OpenCORE and VisualOn libraries are under the Apache License\n2.0. That license is incompatible with the LGPL v2.1 and the GPL v2, but not with\nversion 3 of those licenses. So to combine these libraries with FFmpeg, the\nlicense version needs to be upgraded by passing `--enable-version3` to configure.\n\nThe smbclient library is under the GPL v3, to combine it with FFmpeg,\nthe options `--enable-gpl` and `--enable-version3` have to be passed to\nconfigure to upgrade FFmpeg to the GPL v3.\n\n### Incompatible libraries\n\nThere are certain libraries you can combine with FFmpeg whose licenses are not\ncompatible with the GPL and/or the LGPL. If you wish to enable these\nlibraries, even in circumstances that their license may be incompatible, pass\n`--enable-nonfree` to configure. This will cause the resulting binary to be\nunredistributable.\n\nThe Fraunhofer FDK AAC and OpenSSL libraries are under licenses which are\nincompatible with the GPLv2 and v3. To the best of our knowledge, they are\ncompatible with the LGPL.\n"
        },
        {
          "name": "MAINTAINERS",
          "type": "blob",
          "size": 29.73,
          "content": "FFmpeg maintainers\n==================\n\nBelow is a list of the people maintaining different parts of the\nFFmpeg code.\n\nPlease try to keep entries where you are the maintainer up to date!\n\n*Status*, one of the following:\n[X] Old code. Something tagged obsolete generally means it has been replaced by a better system and you should be using that.\n[0] No current maintainer [but maybe you could take the role as you write your new code].\n[1] It has a maintainer but they don't have time to do much other than throw the odd patch in.\n[2] Someone actually looks after it.\n\nA (CC <address>) after the name means that the maintainer prefers to be CC-ed on\npatches and related discussions.\n\n(L <address>) *Mailing list* that is relevant to this area\n(W <address>) *Web-page* with status/info\n(B <address>) URI for where to file *bugs*. A web-page with detailed bug\n              filing info, a direct bug tracker link, or a mailto: URI.\n(P <address>) *Subsystem Profile* document for more details submitting\n              patches to the given subsystem. This is either an in-tree file,\n              or a URI. See Documentation/maintainer/maintainer-entry-profile.rst\n              for details.\n(T <address>) *SCM* tree type and location.\n              Type is one of: git, hg, quilt, stgit, topgit\n\n\nApplications\n============\n\nffmpeg:\n  ffmpeg.c                              Michael Niedermayer, Anton Khirnov\n\nffplay:\n  ffplay.c                          [2] Marton Balint\n\nffprobe:\n  ffprobe.c                         [2] Stefano Sabatini\n\nCommandline utility code:\n  cmdutils.c, cmdutils.h                Michael Niedermayer\n\nQuickTime faststart:\n  tools/qt-faststart.c                  Baptiste Coudurier\n\n\nMiscellaneous Areas\n===================\n\ndocumentation                           Stefano Sabatini, Mike Melanson, Timothy Gu, Gyan Doshi\nproject server day to day operations    (L: root@ffmpeg.org) Michael Niedermayer, Reimar Doeffinger, Alexander Strasser, Nikolay Aleksandrov, Timo Rothenpieler\nproject server emergencies              (L: root@ffmpeg.org) Reimar Doeffinger, Alexander Strasser, Nikolay Aleksandrov, Timo Rothenpieler\npresets                             [0]\nmetadata subsystem                      Aurelien Jacobs\nrelease management                      Michael Niedermayer\nAPI tests                           [0]\n\n\nCommunication\n=============\nwebsite                                 (T: https://git.ffmpeg.org/ffmpeg-web) Deby Barbara Lepage\nfate.ffmpeg.org                         (L: fate-admin@ffmpeg.org) (W: https://fate.ffmpeg.org) (P: https://ffmpeg.org/fate.html) (S: https://git.ffmpeg.org/fateserver) Timo Rothenpieler\nTrac bug tracker                        (W: https://trac.ffmpeg.org) Alexander Strasser, Michael Niedermayer, Carl Eugen Hoyos\nPatchwork                           [2] (W: https://patchwork.ffmpeg.org) Andriy Gelman\nmailing lists                           (W: https://ffmpeg.org/contact.html#MailingLists) Baptiste Coudurier\nTwitter                                 Reynaldo H. Verdejo Pinochet\nLaunchpad                               Timothy Gu\nffmpeg-security                     [2] (L: ffmpeg-security@ffmpeg.org) (W: https://ffmpeg.org/security.html) Michael Niedermayer, Reimar Doeffinger\n\n\nlibavutil\n=========\n\nExternal Interfaces:\n  libavutil/avutil.h                    Michael Niedermayer\nInternal Interfaces:\n  libavutil/common.h                    Michael Niedermayer\n\nOther:\n  aes_ctr.c, aes_ctr.h                  Eran Kornblau\n  bprint                                Nicolas George\n  bswap.h\n  csp.c, csp.h                          Leo Izen, Ronald S. Bultje\n  des                                   Reimar Doeffinger\n  dynarray.h                            Nicolas George\n  eval.c, eval.h                    [2] Michael Niedermayer\n  float_dsp                             Loren Merritt\n  hash                                  Reimar Doeffinger\n  hwcontext_cuda*                       Timo Rothenpieler\n  hwcontext_vulkan*                 [2] Lynne\n  intfloat*                             Michael Niedermayer\n  integer.c, integer.h                  Michael Niedermayer\n  lzo                                   Reimar Doeffinger\n  mathematics.c, mathematics.h      [2] Michael Niedermayer\n  mem.c, mem.h                      [2] Michael Niedermayer\n  opencl.c, opencl.h                    Wei Gao\n  opt.c, opt.h                          Michael Niedermayer\n  rational.c, rational.h            [2] Michael Niedermayer\n  rc4                                   Reimar Doeffinger\n  ripemd.c, ripemd.h                    James Almer\n  tx*                               [2] Lynne\n\n\nlibavcodec\n==========\n\nGeneric Parts:\n  External Interfaces:\n    avcodec.h                           Michael Niedermayer\n  utility code:\n    utils.c                             Michael Niedermayer\n  audio and video frame extraction:\n    parser.c                            Michael Niedermayer\n  bitstream reading:\n    bitstream.c, bitstream.h            Michael Niedermayer\n  CABAC:\n    cabac.h, cabac.c                    Michael Niedermayer\n  codec names:\n    codec_names.sh                      Nicolas George\n  DSP utilities:\n    dsputils.c, dsputils.h              Michael Niedermayer\n  entropy coding:\n    rangecoder.c, rangecoder.h      [2] Michael Niedermayer\n    lzw.*                               Michael Niedermayer\n  floating point AAN DCT:\n    faandct.c, faandct.h            [2] Michael Niedermayer\n  Golomb coding:\n    golomb.c, golomb.h              [2] Michael Niedermayer\n  motion estimation:\n    motion*                             Michael Niedermayer\n  rate control:\n    ratecontrol.c                   [2] Michael Niedermayer\n  simple IDCT:\n    simple_idct.c, simple_idct.h    [2] Michael Niedermayer\n  postprocessing:\n    libpostproc/*                   [2] Michael Niedermayer\n  table generation:\n    tableprint.c, tableprint.h          Reimar Doeffinger\n  fixed point FFT:\n    fft*                                Zeljko Lukac\n  Text Subtitles                        Clément Bœsch\n\nCodecs:\n  4xm.c                             [2] Michael Niedermayer\n  8bps.c                                Roberto Togni\n  8svx.c                                Jaikrishnan Menon\n  aacenc*, aaccoder.c                   Rostislav Pehlivanov\n  adpcm.c                               Zane van Iperen\n  alacenc.c                             Jaikrishnan Menon\n  alsdec.c                              Thilo Borgmann, Umair Khan\n  amfenc*                               Dmitrii Ovchinnikov\n  aptx.c                                Aurelien Jacobs\n  ass*                                  Aurelien Jacobs\n  asv*                                  Michael Niedermayer\n  atrac3plus*                           Maxim Poliakovski\n  audiotoolbox*                         rcombs\n  avs2*                                 Huiwen Ren\n  bgmc.c, bgmc.h                        Thilo Borgmann\n  binkaudio.c                           Peter Ross\n  cavs*                                 Stefan Gehrer\n  celp_filters.*                        Vitor Sessak\n  cinepak.c                             Roberto Togni\n  cinepakenc.c                          Rl / Aetey G.T. AB\n  ccaption_dec.c                        Anshul Maheshwari, Aman Gupta\n  cljr                                  Alex Beregszaszi\n  cpia.c                                Stephan Hilb\n  cscd.c                                Reimar Doeffinger\n  cuviddec.c                            Timo Rothenpieler\n  dca*                                  foo86\n  dfpwm*                                Jack Bruienne\n  dirac*                                Rostislav Pehlivanov\n  dnxhd*                                Baptiste Coudurier\n  dolby_e*                              foo86\n  dpcm.c                                Mike Melanson\n  dss_sp.c                              Oleksij Rempel\n  dv.c                                  Roman Shaposhnik\n  dvbsubdec.c                           Anshul Maheshwari\n  eacmv*, eaidct*, eat*                 Peter Ross\n  exif.c, exif.h                        Thilo Borgmann\n  ffv1*                             [2] Michael Niedermayer\n  ffwavesynth.c                         Nicolas George\n  fifo.c                                Jan Sebechlebsky\n  flicvideo.c                           Mike Melanson\n  g722.c                                Martin Storsjo\n  g726.c                                Roman Shaposhnik\n  gifdec.c                              Baptiste Coudurier\n  h261*                                 Michael Niedermayer\n  h263*                                 Michael Niedermayer\n  h264*                                 Loren Merritt, Michael Niedermayer\n  hap*                                  Tom Butterworth\n  hevc/*                                Anton Khirnov\n  huffyuv*                              Michael Niedermayer\n  idcinvideo.c                          Mike Melanson\n  interplayvideo.c                      Mike Melanson\n  jni*, ffjni*                          Matthieu Bouron\n  jpeg2000*                             Nicolas Bertrand\n  jpegxl*                               Leo Izen\n  jvdec.c                               Peter Ross\n  lcl*.c                                Roberto Togni, Reimar Doeffinger\n  libcelt_dec.c                         Nicolas George\n  libcodec2.c                           Tomas Härdin\n  libdirac*                             David Conrad\n  libdavs2.c                            Huiwen Ren\n  libjxl*.c, libjxl.h                   Leo Izen\n  libgsm.c                              Michel Bardiaux\n  libkvazaar.c                          Arttu Ylä-Outinen\n  libopenh264enc.c                      Martin Storsjo, Linjie Fu\n  libopenjpegenc.c                      Michael Bradshaw\n  libtheoraenc.c                        David Conrad\n  libvorbis.c                           David Conrad\n  libvpx*                               James Zern\n  libxavs.c                             Stefan Gehrer\n  libxavs2.c                            Huiwen Ren\n  libzvbi-teletextdec.c                 Marton Balint\n  lzo.h, lzo.c                          Reimar Doeffinger\n  mdec.c                                Michael Niedermayer\n  mimic.c                               Ramiro Polla\n  mjpeg*.c                              Michael Niedermayer\n  mlp*                                  Ramiro Polla, Jai Luthra\n  mmvideo.c                             Peter Ross\n  mpeg12.c, mpeg12data.h                Michael Niedermayer\n  mpegvideo.c, mpegvideo.h              Michael Niedermayer\n  mqc*                                  Nicolas Bertrand\n  msmpeg4.c, msmpeg4data.h              Michael Niedermayer\n  msrle.c                               Mike Melanson\n  msrleenc.c                            Tomas Härdin\n  msvideo1.c                            Mike Melanson\n  nuv.c                                 Reimar Doeffinger\n  nvdec*, nvenc*                        Timo Rothenpieler\n  omx.c                                 Martin Storsjo, Aman Gupta\n  opus*                                 Rostislav Pehlivanov\n  pcx.c                                 Ivo van Poorten\n  pgssubdec.c                           Reimar Doeffinger\n  ptx.c                                 Ivo van Poorten\n  qcelp*                                Reynaldo H. Verdejo Pinochet\n  qdm2.c, qdm2data.h                    Roberto Togni\n  qsv*                                  Mark Thompson, Zhong Li, Haihao Xiang\n  qtrle.c                               Mike Melanson\n  ra144.c, ra144.h, ra288.c, ra288.h    Roberto Togni\n  resample2.c                           Michael Niedermayer\n  rl2.c                                 Sascha Sommer\n  rpza.c                                Roberto Togni\n  rtjpeg.c, rtjpeg.h                    Reimar Doeffinger\n  rv10.c                                Michael Niedermayer\n  smc.c                                 Mike Melanson\n  snow*                                 Michael Niedermayer, Loren Merritt\n  sonic.c                               Alex Beregszaszi\n  speedhq.c                             Steinar H. Gunderson\n  srt*                                  Aurelien Jacobs\n  sunrast.c                             Ivo van Poorten\n  svq3.c                                Michael Niedermayer\n  truemotion1*                          Mike Melanson\n  tta.c                                 Alex Beregszaszi, Jaikrishnan Menon\n  txd.c                                 Ivo van Poorten\n  v4l2_*                                Jorge Ramirez-Ortiz\n  vc2*                                  Rostislav Pehlivanov\n  vcr1.c                                Michael Niedermayer\n  videotoolboxenc.c                     Rick Kern, Aman Gupta\n  vorbisdec.c                           Denes Balatoni, David Conrad\n  vorbisenc.c                           Oded Shimon\n  vp3*                                  Mike Melanson\n  vp5                                   Aurelien Jacobs\n  vp6                                   Aurelien Jacobs\n  vp8                                   David Conrad, Ronald Bultje\n  vp9                                   Ronald Bultje\n  vqavideo.c                            Mike Melanson\n  vvc                               [2] Nuo Mi\n  wmaprodec.c                           Sascha Sommer\n  wmavoice.c                            Ronald S. Bultje\n  wmv2.c                                Michael Niedermayer\n  xan.c                                 Mike Melanson\n  xface                                 Stefano Sabatini\n\nHardware acceleration:\n  dxva2*                                Hendrik Leppkes, Laurent Aimar, Steve Lhomme\n  d3d11va*                              Steve Lhomme\n  d3d12va_encode*                       Tong Wu\n  mediacodec*                           Matthieu Bouron, Aman Gupta, Zhao Zhili\n  vaapi*                                Haihao Xiang\n  vaapi_encode*                         Mark Thompson, Haihao Xiang\n  vdpau*                                Philip Langdale, Carl Eugen Hoyos\n  videotoolbox*                         Rick Kern, Aman Gupta, Zhao Zhili\n\n\nlibavdevice\n===========\n  External Interface:\n    libavdevice/avdevice.h\n\n\n  avfoundation.m                        Thilo Borgmann\n  android_camera.c                      Felix Matouschek\n  decklink*                             Marton Balint\n  dshow.c                               Roger Pack (CC rogerdpack@gmail.com)\n  fbdev_enc.c                           Lukasz Marek\n  gdigrab.c                             Roger Pack (CC rogerdpack@gmail.com)\n  iec61883.c                            Georg Lippitsch\n  lavfi                                 Stefano Sabatini\n  libdc1394.c                           Roman Shaposhnik\n  opengl_enc.c                          Lukasz Marek\n  pulse_audio_enc.c                     Lukasz Marek\n  sdl                                   Stefano Sabatini\n  sdl2.c                                Josh de Kock\n  v4l2.c                                Giorgio Vazzana\n  vfwcap.c                              Ramiro Polla\n  xv.c                                  Lukasz Marek\n\nlibavfilter\n===========\n\nGeneric parts:\n  graphdump.c                           Nicolas George\n\n  motion_estimation.c                   Davinder Singh\n\nFilters:\n  af_amerge.c                           Nicolas George\n  af_aresample.c                        Michael Niedermayer\n  af_atempo.c                           Pavel Koshevoy\n  af_firequalizer.c                     Muhammad Faiz\n  af_hdcd.c                             Burt P.\n  af_loudnorm.c                         Kyle Swanson\n  af_pan.c                              Nicolas George\n  avf_showcqt.c                         Muhammad Faiz\n  vf_bwdif                              Thomas Mundt (CC <thomas.mundt@hr.de>)\n  vf_chromakey.c                        Timo Rothenpieler\n  vf_colorconstancy.c                   Mina Sami    (CC <minas.gorgy@gmail.com>)\n  vf_colorkey.c                         Timo Rothenpieler\n  vf_coreimage.m                        Thilo Borgmann\n  vf_dejudder.c                         Nicholas Robbins\n  vf_delogo.c                           Jean Delvare (CC <jdelvare@suse.com>)\n  vf_drawbox.c/drawgrid                 Andrey Utkin\n  vf_fsync.c                            Thilo Borgmann\n  vf_hqx.c                              Clément Bœsch\n  vf_idet.c                             Pascal Massimino\n  vf_(t)interlace                       Thomas Mundt (CC <thomas.mundt@hr.de>)\n  vf_lenscorrection.c                   Daniel Oberhoff\n  vf_libplacebo.c                       Niklas Haas\n  vf_mestimate.c                        Davinder Singh\n  vf_minterpolate.c                     Davinder Singh\n  vf_readvitc.c                         Tobias Rapp (CC t.rapp at noa-archive dot com)\n  vf_scale.c                        [2] Michael Niedermayer\n  vf_tonemap_opencl.c                   Ruiling Song\n  vf_yadif.c                        [2] Michael Niedermayer\n  vf_xfade_vulkan.c                 [2] Marvin Scholz (CC <epirat07@gmail.com>)\n\nSources:\n  vsrc_mandelbrot.c                 [2] Michael Niedermayer\n\ndnn                                     Yejun Guo\n\nlibavformat\n===========\n\nGeneric parts:\n  External Interface:\n    libavformat/avformat.h              Michael Niedermayer\n  Utility Code:\n    libavformat/utils.c                 Michael Niedermayer\n  Text Subtitles                        Clément Bœsch\n\n\nMuxers/Demuxers:\n  4xm.c                                 Mike Melanson\n  aadec.c                               Vesselin Bontchev (vesselin.bontchev at yandex dot com)\n  adtsenc.c                         [0]\n  aiffdec.c                             Baptiste Coudurier, Matthieu Bouron\n  aiffenc.c                             Baptiste Coudurier, Matthieu Bouron\n  alp.c                                 Zane van Iperen\n  amvenc.c                              Zane van Iperen\n  apm.c                                 Zane van Iperen\n  apngdec.c                             Benoit Fouet\n  argo_asf.c                            Zane van Iperen\n  argo_brp.c                            Zane van Iperen\n  argo_cvg.c                            Zane van Iperen\n  ass*                                  Aurelien Jacobs\n  astenc.c                              James Almer\n  avi*                                  Michael Niedermayer\n  avisynth.c                            Stephen Hutchinson\n  bink.c                                Peter Ross\n  boadec.c                              Michael Niedermayer\n  caf*                                  Peter Ross\n  codec2.c                              Tomas Härdin\n  crc.c                                 Michael Niedermayer\n  dashdec.c                             Steven Liu\n  dashenc.c                             Karthick Jeyapal\n  daud.c                                Reimar Doeffinger\n  dfpwmdec.c                            Jack Bruienne\n  dss.c                                 Oleksij Rempel\n  dtsdec.c                              foo86\n  dv.c                                  Roman Shaposhnik\n  dvdvideodec.c                     [2] Marth64\n  electronicarts.c                      Peter Ross\n  evc*                                  Samsung (Dawid Kozinski)\n  ffm*                                  Baptiste Coudurier\n  flic.c                                Mike Melanson\n  flvdec.c                              Michael Niedermayer\n  flvenc.c                              Michael Niedermayer, Steven Liu\n  gxf.c                                 Reimar Doeffinger\n  gxfenc.c                              Baptiste Coudurier\n  hlsenc.c                              Christian Suloway, Steven Liu\n  iamf*                             [2] James Almer\n  idcin.c                               Mike Melanson\n  idroqdec.c                            Mike Melanson\n  iff.c                                 Jaikrishnan Menon\n  imf*                                  Pierre-Anthony Lemieux\n  img2*.c                               Michael Niedermayer\n  ipmovie.c                             Mike Melanson\n  iss.c                                 Stefan Gehrer\n  jpegxl*                               Leo Izen\n  jvdec.c                               Peter Ross\n  kvag.c                                Zane van Iperen\n  libmodplug.c                          Clément Bœsch\n  libopenmpt.c                          Josh de Kock\n  lmlm4.c                               Ivo van Poorten\n  lxfdec.c                              Tomas Härdin\n  matroska.c                            Andreas Rheinhardt\n  matroskadec.c                         Andreas Rheinhardt\n  matroskaenc.c                         Andreas Rheinhardt\n  matroska subtitles (matroskaenc.c)    John Peebles\n  metadata*                             Aurelien Jacobs\n  microdvd*                             Aurelien Jacobs\n  mm.c                                  Peter Ross\n  mov.c                                 Baptiste Coudurier\n  movenc.c                              Baptiste Coudurier, Matthieu Bouron\n  movenccenc.c                          Eran Kornblau\n  mpeg.c                                Michael Niedermayer\n  mpegenc.c                             Michael Niedermayer\n  mpegts.c                              Marton Balint\n  mpegtsenc.c                           Baptiste Coudurier\n  msnwc_tcp.c                           Ramiro Polla\n  mtv.c                                 Reynaldo H. Verdejo Pinochet\n  mxf*                                  Baptiste Coudurier, Tomas Härdin\n  nsvdec.c                              Francois Revol\n  nut*                                  Michael Niedermayer\n  nuv.c                                 Reimar Doeffinger\n  oggdec.c, oggdec.h                    David Conrad\n  oggenc.c                              Baptiste Coudurier\n  oggparse*.c                           David Conrad\n  oma.c                                 Maxim Poliakovski\n  pp_bnk.c                              Zane van Iperen\n  psxstr.c                              Mike Melanson\n  pva.c                                 Ivo van Poorten\n  r3d.c                                 Baptiste Coudurier\n  raw.c                                 Michael Niedermayer\n  rcwtdec.c                         [2] Marth64\n  rcwtenc.c                         [2] Marth64\n  rdt.c                                 Ronald S. Bultje\n  rl2.c                                 Sascha Sommer\n  rmdec.c, rmenc.c                      Ronald S. Bultje\n  rtp.c, rtpenc.c                       Martin Storsjo\n  rtpdec_ac3.*                          Gilles Chanteperdrix\n  rtpdec_dv.*                           Thomas Volkert\n  rtpdec_h261.*, rtpenc_h261.*          Thomas Volkert\n  rtpdec_hevc.*, rtpenc_hevc.*          Thomas Volkert\n  rtpdec_mpa_robust.*                   Gilles Chanteperdrix\n  rtpdec_asf.*                          Ronald S. Bultje\n  rtpdec_vc2hq.*, rtpenc_vc2hq.*        Thomas Volkert\n  rtpdec_vp9.c                          Thomas Volkert\n  rtpenc_mpv.*, rtpenc_aac.*            Martin Storsjo\n  s337m.c                               foo86\n  sbgdec.c                              Nicolas George\n  sdp.c                                 Martin Storsjo\n  segafilm.c                            Mike Melanson\n  segment.c                             Stefano Sabatini\n  spdif*                                Anssi Hannula\n  srtdec.c                              Aurelien Jacobs\n  swf.c                                 Baptiste Coudurier\n  tta.c                                 Alex Beregszaszi\n  txd.c                                 Ivo van Poorten\n  voc.c                                 Aurelien Jacobs\n  wav.c                                 Michael Niedermayer\n  wc3movie.c                            Mike Melanson\n  webm dash (matroskaenc.c)             Vignesh Venkatasubramanian\n  webvtt*                               Matthew J Heaney\n  westwood.c                            Mike Melanson\n  wtv.c                                 Peter Ross\n\nProtocols:\n  async.c                               Zhang Rui\n  bluray.c                              Petri Hintukainen\n  ftp.c                                 Lukasz Marek\n  http.c                                Ronald S. Bultje\n  libsrt.c                              Zhao Zhili\n  libssh.c                              Lukasz Marek\n  libzmq.c                              Andriy Gelman\n  mms*.c                                Ronald S. Bultje\n  udp.c                                 Luca Abeni\n  icecast.c                         [2] Marvin Scholz (CC <epirat07@gmail.com>)\n\n\nlibswresample\n=============\n\nGeneric parts:\n  audioconvert.c                    [2] Michael Niedermayer\n  dither.c                          [2] Michael Niedermayer\n  rematrix*.c                       [2] Michael Niedermayer\n  swresample*.c                     [2] Michael Niedermayer\n\nResamplers:\n  resample*.c                       [2] Michael Niedermayer\n  soxr_resample.c                       Rob Sykes\n\n\nOperating systems / CPU architectures\n=====================================\n\n*BSD                                [2] Brad Smith\nAlpha                               [0]\nMIPS                                    Manojkumar Bhosale, Shiyou Yin\nLoongArch                           [2] Shiyou Yin\nDarwin (macOS, iOS)                 [2] Marvin Scholz\nMac OS X / PowerPC                  [0]\nAmiga / PowerPC                         Colin Ward\nLinux / PowerPC                     [1] Lauri Kasanen\nRISC-V                              [2] Rémi Denis-Courmont\nWindows MinGW                           Alex Beregszaszi, Ramiro Polla\nWindows Cygwin                          Victor Paesa\nWindows MSVC                            Hendrik Leppkes\nADI/Blackfin DSP                        Marc Hoffman\nSparc                                   Roman Shaposhnik\nOS/2                                    KO Myung-Hun\n\n\nDevelopers with git write access who are currently not maintaining any specific part\n====================================================================================\nAlex Converse\nAndreas Cadhalpun\nAnuradha Suraparaju\nBen Littler\nBenjamin Larsson\nBobby Bingham\nDaniel Verkamp\nDerek Buitenhuis\nFei Wang\nGanesh Ajjanagadde\nHenrik Gramner\nIvan Uskov\nJames Darnley\nJan Ekström\nJoakim Plate\nJun Zhao\nKieran Kunhya\nKirill Gavrilov\nLimin Wang\nMartin Storsjö\nPanagiotis Issaris\nPedro Arthur\nSebastien Zwickert\nVittorio Giovara\nwm4\n(this list is incomplete)\n\n\nReleases\n========\n\n7.0                                     Michael Niedermayer\n6.1                                     Michael Niedermayer\n5.1                                     Michael Niedermayer\n4.4                                     Michael Niedermayer\n3.4                                     Michael Niedermayer\n2.8                                     Michael Niedermayer\n\nIf you want to maintain an older release, please contact us\n\n\nGnuPG Fingerprints and IRC nicknames of maintainers and contributors\n====================================================================\n\nIRC nicknames are in parentheses. These apply\nto the IRC channels listed on the website.\n\nAlexander Strasser            1C96 78B7 83CB 8AA7 9AF5 D1EB A7D8 A57B A876 E58F\nAnssi Hannula                 1A92 FF42 2DD9 8D2E 8AF7 65A9 4278 C520 513D F3CB\nAsh Hughes                    694D 43D2 D180 C7C7 6421 ABD3 A641 D0B7 623D 6029\nAttila Kinali                 11F0 F9A6 A1D2 11F6 C745 D10C 6520 BCDD F2DF E765\nBaptiste Coudurier            8D77 134D 20CC 9220 201F C5DB 0AC9 325C 5C1A BAAA\nBen Littler                   3EE3 3723 E560 3214 A8CD 4DEB 2CDB FCE7 768C 8D2C\nBenoit Fouet                  B22A 4F4F 43EF 636B BB66 FCDC 0023 AE1E 2985 49C8\nClément Bœsch                 52D0 3A82 D445 F194 DB8B 2B16 87EE 2CB8 F4B8 FCF9\nDaniel Verkamp                78A6 07ED 782C 653E C628 B8B9 F0EB 8DD8 2F0E 21C7\nFFmpeg release signing key    FCF9 86EA 15E6 E293 A564 4F10 B432 2F04 D676 58D8\nGanesh Ajjanagadde            C96A 848E 97C3 CEA2 AB72 5CE4 45F9 6A2D 3C36 FB1B\nGwenole Beauchesne            2E63 B3A6 3E44 37E2 017D 2704 53C7 6266 B153 99C4\nHaihao Xiang (haihao)         1F0C 31E8 B4FE F7A4 4DC1 DC99 E0F5 76D4 76FC 437F\nJaikrishnan Menon             61A1 F09F 01C9 2D45 78E1 C862 25DC 8831 AF70 D368\nJames Almer                   7751 2E8C FD94 A169 57E6 9A7A 1463 01AD 7376 59E0\nJean Delvare                  7CA6 9F44 60F1 BDC4 1FD2 C858 A552 6B9B B3CD 4E6A\nLeo Izen (Traneptora)         B6FD 3CFC 7ACF 83FC 9137 6945 5A71 C331 FD2F A19A\nLeo Izen (Traneptora)         1D83 0A0B CE46 709E 203B 26FC 764E 48EA 4822 1833\nLoren Merritt                 ABD9 08F4 C920 3F65 D8BE 35D7 1540 DAA7 060F 56DE\nLynne                         FE50 139C 6805 72CA FD52 1F8D A2FE A5F0 3F03 4464\nMichael Niedermayer           9FF2 128B 147E F673 0BAD F133 611E C787 040B 0FAB\n                              DD1E C9E8 DE08 5C62 9B3E 1846 B18E 8928 B394 8D64\nNicolas George                24CE 01CE 9ACC 5CEB 74D8 8D9D B063 D997 36E5 4C93\nNiklas Haas (haasn)           1DDB 8076 B14D 5B48 32FC 99D9 EB52 DA9C 02BA 6FB4\nNikolay Aleksandrov           8978 1D8C FB71 588E 4B27 EAA8 C4F0 B5FC E011 13B1\nPanagiotis Issaris            6571 13A3 33D9 3726 F728 AA98 F643 B12E ECF3 E029\nPeter Ross                    A907 E02F A6E5 0CD2 34CD 20D2 6760 79C5 AC40 DD6B\nPhilip Langdale               5DC5 8D66 5FBA 3A43 18EC 045E F8D6 B194 6A75 682E\nPierre-Anthony Lemieux (pal)  F4B3 9492 E6F2 E4AF AEC8 46CB 698F A1F0 F8D4 EED4\nRamiro Polla                  7859 C65B 751B 1179 792E DAE8 8E95 8B2F 9B6C 5700\nReimar Doeffinger             C61D 16E5 9E2C D10C 8958 38A4 0899 A2B9 06D4 D9C7\nReinhard Tartler              9300 5DC2 7E87 6C37 ED7B CA9A 9808 3544 9453 48A4\nReynaldo H. Verdejo Pinochet  6E27 CD34 170C C78E 4D4F 5F40 C18E 077F 3114 452A\nRobert Swain                  EE7A 56EA 4A81 A7B5 2001 A521 67FA 362D A2FC 3E71\nSascha Sommer                 38A0 F88B 868E 9D3A 97D4 D6A0 E823 706F 1E07 0D3C\nStefano Sabatini              0D0B AD6B 5330 BBAD D3D6 6A0C 719C 2839 FC43 2D5F\nSteinar H. Gunderson          C2E9 004F F028 C18E 4EAD DB83 7F61 7561 7797 8F76\nStephan Hilb                  4F38 0B3A 5F39 B99B F505 E562 8D5C 5554 4E17 8863\nThilo Borgmann (thilo)        CE1D B7F4 4D20 FC3A DD9F FE5A 257C 5B8F 1D20 B92F\nTiancheng \"Timothy\" Gu        9456 AFC0 814A 8139 E994 8351 7FE6 B095 B582 B0D4\nTim Nicholson                 38CF DB09 3ED0 F607 8B67 6CED 0C0B FC44 8B0B FC83\nTomas Härdin (thardin)        A79D 4E3D F38F 763F 91F5 8B33 A01E 8AE0 41BB 2551\nWei Gao                       4269 7741 857A 0E60 9EC5 08D2 4744 4EFA 62C1 87B9\nZane van Iperen (zane)        61AE D40F 368B 6F26 9DAE 3892 6861 6B2D 8AC4 DCC5\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 7.2,
          "content": "MAIN_MAKEFILE=1\ninclude ffbuild/config.mak\n\nvpath %.c    $(SRC_PATH)\nvpath %.cpp  $(SRC_PATH)\nvpath %.h    $(SRC_PATH)\nvpath %.inc  $(SRC_PATH)\nvpath %.m    $(SRC_PATH)\nvpath %.S    $(SRC_PATH)\nvpath %.asm  $(SRC_PATH)\nvpath %.rc   $(SRC_PATH)\nvpath %.v    $(SRC_PATH)\nvpath %.texi $(SRC_PATH)\nvpath %.cu   $(SRC_PATH)\nvpath %.ptx  $(SRC_PATH)\nvpath %.metal $(SRC_PATH)\nvpath %/fate_config.sh.template $(SRC_PATH)\n\nTESTTOOLS   = audiogen videogen rotozoom tiny_psnr tiny_ssim base64 audiomatch\nHOSTPROGS  := $(TESTTOOLS:%=tests/%) doc/print_options\n\nALLFFLIBS = avcodec avdevice avfilter avformat avutil postproc swscale swresample\n\n# $(FFLIBS-yes) needs to be in linking order\nFFLIBS-$(CONFIG_AVDEVICE)   += avdevice\nFFLIBS-$(CONFIG_AVFILTER)   += avfilter\nFFLIBS-$(CONFIG_AVFORMAT)   += avformat\nFFLIBS-$(CONFIG_AVCODEC)    += avcodec\nFFLIBS-$(CONFIG_POSTPROC)   += postproc\nFFLIBS-$(CONFIG_SWRESAMPLE) += swresample\nFFLIBS-$(CONFIG_SWSCALE)    += swscale\n\nFFLIBS := avutil\n\nDATA_FILES := $(wildcard $(SRC_PATH)/presets/*.ffpreset) $(SRC_PATH)/doc/ffprobe.xsd\n\nSKIPHEADERS = compat/w32pthreads.h\n\n# first so \"all\" becomes default target\nall: all-yes\n\ninclude $(SRC_PATH)/tools/Makefile\ninclude $(SRC_PATH)/ffbuild/common.mak\n\nFF_EXTRALIBS := $(FFEXTRALIBS)\nFF_DEP_LIBS  := $(DEP_LIBS)\nFF_STATIC_DEP_LIBS := $(STATIC_DEP_LIBS)\n\n$(TOOLS): %$(EXESUF): %.o\n\t$(LD) $(LDFLAGS) $(LDEXEFLAGS) $(LD_O) $(filter-out $(FF_DEP_LIBS), $^) $(EXTRALIBS-$(*F)) $(EXTRALIBS) $(ELIBS)\n\ntarget_dec_%_fuzzer$(EXESUF): target_dec_%_fuzzer.o $(FF_DEP_LIBS)\n\t$(LD) $(LDFLAGS) $(LDEXEFLAGS) $(LD_O) $^ $(ELIBS) $(FF_EXTRALIBS) $(LIBFUZZER_PATH)\n\ntarget_enc_%_fuzzer$(EXESUF): target_enc_%_fuzzer.o $(FF_DEP_LIBS)\n\t$(LD) $(LDFLAGS) $(LDEXEFLAGS) $(LD_O) $^ $(ELIBS) $(FF_EXTRALIBS) $(LIBFUZZER_PATH)\n\ntools/target_bsf_%_fuzzer$(EXESUF): tools/target_bsf_%_fuzzer.o $(FF_DEP_LIBS)\n\t$(LD) $(LDFLAGS) $(LDEXEFLAGS) $(LD_O) $^ $(ELIBS) $(FF_EXTRALIBS) $(LIBFUZZER_PATH)\n\ntarget_dem_%_fuzzer$(EXESUF): target_dem_%_fuzzer.o $(FF_DEP_LIBS)\n\t$(LD) $(LDFLAGS) $(LDEXEFLAGS) $(LD_O) $^ $(ELIBS) $(FF_EXTRALIBS) $(LIBFUZZER_PATH)\n\ntools/target_dem_fuzzer$(EXESUF): tools/target_dem_fuzzer.o $(FF_DEP_LIBS)\n\t$(LD) $(LDFLAGS) $(LDEXEFLAGS) $(LD_O) $^ $(ELIBS) $(FF_EXTRALIBS) $(LIBFUZZER_PATH)\n\ntools/target_io_dem_fuzzer$(EXESUF): tools/target_io_dem_fuzzer.o $(FF_DEP_LIBS)\n\t$(LD) $(LDFLAGS) $(LDEXEFLAGS) $(LD_O) $^ $(ELIBS) $(FF_EXTRALIBS) $(LIBFUZZER_PATH)\n\ntools/target_sws_fuzzer$(EXESUF): tools/target_sws_fuzzer.o $(FF_DEP_LIBS)\n\t$(LD) $(LDFLAGS) $(LDEXEFLAGS) $(LD_O) $^ $(ELIBS) $(FF_EXTRALIBS) $(LIBFUZZER_PATH)\n\ntools/target_swr_fuzzer$(EXESUF): tools/target_swr_fuzzer.o $(FF_DEP_LIBS)\n\t$(LD) $(LDFLAGS) $(LDEXEFLAGS) $(LD_O) $^ $(ELIBS) $(FF_EXTRALIBS) $(LIBFUZZER_PATH)\n\ntools/enum_options$(EXESUF): ELIBS = $(FF_EXTRALIBS)\ntools/enum_options$(EXESUF): $(FF_DEP_LIBS)\ntools/enc_recon_frame_test$(EXESUF): $(FF_DEP_LIBS)\ntools/enc_recon_frame_test$(EXESUF): ELIBS = $(FF_EXTRALIBS)\ntools/scale_slice_test$(EXESUF): $(FF_DEP_LIBS)\ntools/scale_slice_test$(EXESUF): ELIBS = $(FF_EXTRALIBS)\ntools/sofa2wavs$(EXESUF): ELIBS = $(FF_EXTRALIBS)\ntools/uncoded_frame$(EXESUF): $(FF_DEP_LIBS)\ntools/uncoded_frame$(EXESUF): ELIBS = $(FF_EXTRALIBS)\ntools/target_dec_%_fuzzer$(EXESUF): $(FF_DEP_LIBS)\ntools/target_dem_%_fuzzer$(EXESUF): $(FF_DEP_LIBS)\n\nCONFIGURABLE_COMPONENTS =                                           \\\n    $(wildcard $(FFLIBS:%=$(SRC_PATH)/lib%/all*.c))                 \\\n    $(SRC_PATH)/libavcodec/bitstream_filters.c                      \\\n    $(SRC_PATH)/libavcodec/hwaccels.h                               \\\n    $(SRC_PATH)/libavcodec/parsers.c                                \\\n    $(SRC_PATH)/libavformat/protocols.c                             \\\n\nconfig_components.h: ffbuild/.config\nffbuild/.config: $(CONFIGURABLE_COMPONENTS)\n\t@-tput bold 2>/dev/null\n\t@-printf '\\nWARNING: $(?) newer than config_components.h, rerun configure\\n\\n'\n\t@-tput sgr0 2>/dev/null\n\nSUBDIR_VARS := CLEANFILES FFLIBS HOSTPROGS TESTPROGS TOOLS               \\\n               HEADERS ARCH_HEADERS BUILT_HEADERS SKIPHEADERS            \\\n               ARMV5TE-OBJS ARMV6-OBJS ARMV8-OBJS VFP-OBJS NEON-OBJS     \\\n               ALTIVEC-OBJS VSX-OBJS MMX-OBJS X86ASM-OBJS                \\\n               MIPSFPU-OBJS MIPSDSPR2-OBJS MIPSDSP-OBJS MSA-OBJS         \\\n               MMI-OBJS LSX-OBJS LASX-OBJS RV-OBJS RVV-OBJS RVVB-OBJS    \\\n               OBJS SLIBOBJS SHLIBOBJS STLIBOBJS HOSTOBJS TESTOBJS       \\\n               SIMD128-OBJS\n\ndefine RESET\n$(1) :=\n$(1)-yes :=\nendef\n\ndefine DOSUBDIR\n$(foreach V,$(SUBDIR_VARS),$(eval $(call RESET,$(V))))\nSUBDIR := $(1)/\ninclude $(SRC_PATH)/$(1)/Makefile\n-include $(SRC_PATH)/$(1)/$(ARCH)/Makefile\n-include $(SRC_PATH)/$(1)/$(INTRINSICS)/Makefile\ninclude $(SRC_PATH)/ffbuild/library.mak\nendef\n\n$(foreach D,$(FFLIBS),$(eval $(call DOSUBDIR,lib$(D))))\n\ninclude $(SRC_PATH)/fftools/Makefile\ninclude $(SRC_PATH)/doc/Makefile\ninclude $(SRC_PATH)/doc/examples/Makefile\n\n$(ALLFFLIBS:%=lib%/version.o): libavutil/ffversion.h\n\n$(PROGS): %$(PROGSSUF)$(EXESUF): %$(PROGSSUF)_g$(EXESUF)\nifeq ($(STRIPTYPE),direct)\n\t$(STRIP) -o $@ $<\nelse\n\t$(RM) $@\n\t$(CP) $< $@\n\t$(STRIP) $@\nendif\n\n%$(PROGSSUF)_g$(EXESUF): $(FF_DEP_LIBS)\n\t$(LD) $(LDFLAGS) $(LDEXEFLAGS) $(LD_O) $(OBJS-$*) $(FF_EXTRALIBS)\n\nVERSION_SH  = $(SRC_PATH)/ffbuild/version.sh\nifeq ($(VERSION_TRACKING),yes)\nGIT_LOG     = $(SRC_PATH)/.git/logs/HEAD\nendif\n\n.version: $(wildcard $(GIT_LOG)) $(VERSION_SH) ffbuild/config.mak\n.version: M=@\n\nifneq ($(VERSION_TRACKING),yes)\nlibavutil/ffversion.h .version: REVISION=unknown\nendif\nlibavutil/ffversion.h .version:\n\t$(M)revision=$(REVISION) $(VERSION_SH) $(SRC_PATH) libavutil/ffversion.h $(EXTRA_VERSION)\n\t$(Q)touch .version\n\n# force version.sh to run whenever version might have changed\n-include .version\n\ninstall: install-libs install-headers\n\ninstall-libs: install-libs-yes\n\ninstall-data: $(DATA_FILES)\n\t$(Q)mkdir -p \"$(DATADIR)\"\n\t$(INSTALL) -m 644 $(DATA_FILES) \"$(DATADIR)\"\n\nuninstall: uninstall-data uninstall-headers uninstall-libs uninstall-pkgconfig\n\nuninstall-data:\n\t$(RM) -r \"$(DATADIR)\"\n\nclean::\n\t$(RM) $(CLEANSUFFIXES)\n\t$(RM) $(addprefix compat/,$(CLEANSUFFIXES)) $(addprefix compat/*/,$(CLEANSUFFIXES)) $(addprefix compat/*/*/,$(CLEANSUFFIXES))\n\t$(RM) -r coverage-html\n\t$(RM) -rf coverage.info coverage.info.in lcov\n\ndistclean:: clean\n\t$(RM) .version config.asm config.h config_components.h mapfile  \\\n\t\tffbuild/.config ffbuild/config.* libavutil/avconfig.h \\\n\t\tversion.h libavutil/ffversion.h libavcodec/codec_names.h \\\n\t\tlibavcodec/bsf_list.c libavformat/protocol_list.c \\\n\t\tlibavcodec/codec_list.c libavcodec/parser_list.c \\\n\t\tlibavfilter/filter_list.c libavdevice/indev_list.c libavdevice/outdev_list.c \\\n\t\tlibavformat/muxer_list.c libavformat/demuxer_list.c\nifeq ($(SRC_LINK),src)\n\t$(RM) src\nendif\n\t$(RM) -rf doc/examples/pc-uninstalled\n\nconfig:\n\t$(SRC_PATH)/configure $(value FFMPEG_CONFIGURATION)\n\nbuild: all alltools examples testprogs\ncheck: all alltools examples testprogs fate\n\ninclude $(SRC_PATH)/tests/Makefile\n\n$(sort $(OUTDIRS)):\n\t$(Q)mkdir -p $@\n\n# Dummy rule to stop make trying to rebuild removed or renamed headers\n%.h:\n\t@:\n\n# Disable suffix rules.  Most of the builtin rules are suffix rules,\n# so this saves some time on slow systems.\n.SUFFIXES:\n\n.PHONY: all all-yes alltools build check config testprogs\n.PHONY: *clean install* uninstall*\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.77,
          "content": "FFmpeg README\n=============\n\nFFmpeg is a collection of libraries and tools to process multimedia content\nsuch as audio, video, subtitles and related metadata.\n\n## Libraries\n\n* `libavcodec` provides implementation of a wider range of codecs.\n* `libavformat` implements streaming protocols, container formats and basic I/O access.\n* `libavutil` includes hashers, decompressors and miscellaneous utility functions.\n* `libavfilter` provides means to alter decoded audio and video through a directed graph of connected filters.\n* `libavdevice` provides an abstraction to access capture and playback devices.\n* `libswresample` implements audio mixing and resampling routines.\n* `libswscale` implements color conversion and scaling routines.\n\n## Tools\n\n* [ffmpeg](https://ffmpeg.org/ffmpeg.html) is a command line toolbox to\n  manipulate, convert and stream multimedia content.\n* [ffplay](https://ffmpeg.org/ffplay.html) is a minimalistic multimedia player.\n* [ffprobe](https://ffmpeg.org/ffprobe.html) is a simple analysis tool to inspect\n  multimedia content.\n* Additional small tools such as `aviocat`, `ismindex` and `qt-faststart`.\n\n## Documentation\n\nThe offline documentation is available in the **doc/** directory.\n\nThe online documentation is available in the main [website](https://ffmpeg.org)\nand in the [wiki](https://trac.ffmpeg.org).\n\n### Examples\n\nCoding examples are available in the **doc/examples** directory.\n\n## License\n\nFFmpeg codebase is mainly LGPL-licensed with optional components licensed under\nGPL. Please refer to the LICENSE file for detailed information.\n\n## Contributing\n\nPatches should be submitted to the ffmpeg-devel mailing list using\n`git format-patch` or `git send-email`. Github pull requests should be\navoided because they are not part of our review process and will be ignored.\n"
        },
        {
          "name": "RELEASE",
          "type": "blob",
          "size": 0.01,
          "content": "7.1.git\n"
        },
        {
          "name": "compat",
          "type": "tree",
          "content": null
        },
        {
          "name": "configure",
          "type": "blob",
          "size": 281.65,
          "content": "#!/bin/sh\n#\n# FFmpeg configure script\n#\n# Copyright (c) 2000-2002 Fabrice Bellard\n# Copyright (c) 2005-2008 Diego Biurrun\n# Copyright (c) 2005-2008 Mans Rullgard\n#\n\n# Prevent locale nonsense from breaking basic text processing.\nLC_ALL=C\nexport LC_ALL\n\n# make sure we are running under a compatible shell\n# try to make this part work with most shells\n\ntry_exec(){\n    echo \"Trying shell $1\"\n    type \"$1\" > /dev/null 2>&1 && exec \"$@\"\n}\n\nunset foo\n(: ${foo%%bar}) 2> /dev/null\nE1=\"$?\"\n\n(: ${foo?}) 2> /dev/null\nE2=\"$?\"\n\nif test \"$E1\" != 0 || test \"$E2\" = 0; then\n    echo \"Broken shell detected.  Trying alternatives.\"\n    export FF_CONF_EXEC\n    if test \"0$FF_CONF_EXEC\" -lt 1; then\n        FF_CONF_EXEC=1\n        try_exec bash \"$0\" \"$@\"\n    fi\n    if test \"0$FF_CONF_EXEC\" -lt 2; then\n        FF_CONF_EXEC=2\n        try_exec ksh \"$0\" \"$@\"\n    fi\n    if test \"0$FF_CONF_EXEC\" -lt 3; then\n        FF_CONF_EXEC=3\n        try_exec /usr/xpg4/bin/sh \"$0\" \"$@\"\n    fi\n    echo \"No compatible shell script interpreter found.\"\n    echo \"This configure script requires a POSIX-compatible shell\"\n    echo \"such as bash or ksh.\"\n    echo \"THIS IS NOT A BUG IN FFMPEG, DO NOT REPORT IT AS SUCH.\"\n    echo \"Instead, install a working POSIX-compatible shell.\"\n    echo \"Disabling this configure test will create a broken FFmpeg.\"\n    if test \"$BASH_VERSION\" = '2.04.0(1)-release'; then\n        echo \"This bash version ($BASH_VERSION) is broken on your platform.\"\n        echo \"Upgrade to a later version if available.\"\n    fi\n    exit 1\nfi\n\ntest -d /usr/xpg4/bin && PATH=/usr/xpg4/bin:$PATH\n\nshow_help(){\n    cat <<EOF\nUsage: configure [options]\nOptions: [defaults in brackets after descriptions]\n\nHelp options:\n  --help                   print this message\n  --quiet                  Suppress showing informative output\n  --list-decoders          show all available decoders\n  --list-encoders          show all available encoders\n  --list-hwaccels          show all available hardware accelerators\n  --list-demuxers          show all available demuxers\n  --list-muxers            show all available muxers\n  --list-parsers           show all available parsers\n  --list-protocols         show all available protocols\n  --list-bsfs              show all available bitstream filters\n  --list-indevs            show all available input devices\n  --list-outdevs           show all available output devices\n  --list-filters           show all available filters\n\nStandard options:\n  --logfile=FILE           log tests and output to FILE [ffbuild/config.log]\n  --disable-logging        do not log configure debug information\n  --fatal-warnings         fail if any configure warning is generated\n  --prefix=PREFIX          install in PREFIX [$prefix_default]\n  --bindir=DIR             install binaries in DIR [PREFIX/bin]\n  --datadir=DIR            install data files in DIR [PREFIX/share/ffmpeg]\n  --docdir=DIR             install documentation in DIR [PREFIX/share/doc/ffmpeg]\n  --libdir=DIR             install libs in DIR [PREFIX/lib]\n  --shlibdir=DIR           install shared libs in DIR [LIBDIR]\n  --incdir=DIR             install includes in DIR [PREFIX/include]\n  --mandir=DIR             install man page in DIR [PREFIX/share/man]\n  --pkgconfigdir=DIR       install pkg-config files in DIR [LIBDIR/pkgconfig]\n  --enable-rpath           use rpath to allow installing libraries in paths\n                           not part of the dynamic linker search path\n                           use rpath when linking programs (USE WITH CARE)\n  --install-name-dir=DIR   Darwin directory name for installed targets\n\nLicensing options:\n  --enable-gpl             allow use of GPL code, the resulting libs\n                           and binaries will be under GPL [no]\n  --enable-version3        upgrade (L)GPL to version 3 [no]\n  --enable-nonfree         allow use of nonfree code, the resulting libs\n                           and binaries will be unredistributable [no]\n\nConfiguration options:\n  --disable-static         do not build static libraries [no]\n  --enable-shared          build shared libraries [no]\n  --enable-small           optimize for size instead of speed\n  --disable-runtime-cpudetect disable detecting CPU capabilities at runtime (smaller binary)\n  --enable-gray            enable full grayscale support (slower color)\n  --disable-swscale-alpha  disable alpha channel support in swscale\n  --disable-all            disable building components, libraries and programs\n  --disable-autodetect     disable automatically detected external libraries [no]\n\nProgram options:\n  --disable-programs       do not build command line programs\n  --disable-ffmpeg         disable ffmpeg build\n  --disable-ffplay         disable ffplay build\n  --disable-ffprobe        disable ffprobe build\n\nDocumentation options:\n  --disable-doc            do not build documentation\n  --disable-htmlpages      do not build HTML documentation pages\n  --disable-manpages       do not build man documentation pages\n  --disable-podpages       do not build POD documentation pages\n  --disable-txtpages       do not build text documentation pages\n\nComponent options:\n  --disable-avdevice       disable libavdevice build\n  --disable-avcodec        disable libavcodec build\n  --disable-avformat       disable libavformat build\n  --disable-swresample     disable libswresample build\n  --disable-swscale        disable libswscale build\n  --disable-postproc       disable libpostproc build\n  --disable-avfilter       disable libavfilter build\n  --disable-pthreads       disable pthreads [autodetect]\n  --disable-w32threads     disable Win32 threads [autodetect]\n  --disable-os2threads     disable OS/2 threads [autodetect]\n  --disable-network        disable network support [no]\n  --disable-dwt            disable DWT code\n  --disable-error-resilience disable error resilience code\n  --disable-lsp            disable LSP code\n  --disable-faan           disable floating point AAN (I)DCT code\n  --disable-iamf           disable support for Immersive Audio Model\n  --disable-pixelutils     disable pixel utils in libavutil\n\nIndividual component options:\n  --disable-everything     disable all components listed below\n  --disable-encoder=NAME   disable encoder NAME\n  --enable-encoder=NAME    enable encoder NAME\n  --disable-encoders       disable all encoders\n  --disable-decoder=NAME   disable decoder NAME\n  --enable-decoder=NAME    enable decoder NAME\n  --disable-decoders       disable all decoders\n  --disable-hwaccel=NAME   disable hwaccel NAME\n  --enable-hwaccel=NAME    enable hwaccel NAME\n  --disable-hwaccels       disable all hwaccels\n  --disable-muxer=NAME     disable muxer NAME\n  --enable-muxer=NAME      enable muxer NAME\n  --disable-muxers         disable all muxers\n  --disable-demuxer=NAME   disable demuxer NAME\n  --enable-demuxer=NAME    enable demuxer NAME\n  --disable-demuxers       disable all demuxers\n  --enable-parser=NAME     enable parser NAME\n  --disable-parser=NAME    disable parser NAME\n  --disable-parsers        disable all parsers\n  --enable-bsf=NAME        enable bitstream filter NAME\n  --disable-bsf=NAME       disable bitstream filter NAME\n  --disable-bsfs           disable all bitstream filters\n  --enable-protocol=NAME   enable protocol NAME\n  --disable-protocol=NAME  disable protocol NAME\n  --disable-protocols      disable all protocols\n  --enable-indev=NAME      enable input device NAME\n  --disable-indev=NAME     disable input device NAME\n  --disable-indevs         disable input devices\n  --enable-outdev=NAME     enable output device NAME\n  --disable-outdev=NAME    disable output device NAME\n  --disable-outdevs        disable output devices\n  --disable-devices        disable all devices\n  --enable-filter=NAME     enable filter NAME\n  --disable-filter=NAME    disable filter NAME\n  --disable-filters        disable all filters\n\nExternal library support:\n\n  Using any of the following switches will allow FFmpeg to link to the\n  corresponding external library. All the components depending on that library\n  will become enabled, if all their other dependencies are met and they are not\n  explicitly disabled. E.g. --enable-libopus will enable linking to\n  libopus and allow the libopus encoder to be built, unless it is\n  specifically disabled with --disable-encoder=libopus.\n\n  Note that only the system libraries are auto-detected. All the other external\n  libraries must be explicitly enabled.\n\n  Also note that the following help text describes the purpose of the libraries\n  themselves, not all their features will necessarily be usable by FFmpeg.\n\n  --disable-alsa           disable ALSA support [autodetect]\n  --disable-appkit         disable Apple AppKit framework [autodetect]\n  --disable-avfoundation   disable Apple AVFoundation framework [autodetect]\n  --enable-avisynth        enable reading of AviSynth script files [no]\n  --disable-bzlib          disable bzlib [autodetect]\n  --disable-coreimage      disable Apple CoreImage framework [autodetect]\n  --enable-chromaprint     enable audio fingerprinting with chromaprint [no]\n  --enable-frei0r          enable frei0r video filtering [no]\n  --enable-gcrypt          enable gcrypt, needed for rtmp(t)e support\n                           if openssl, librtmp or gmp is not used [no]\n  --enable-gmp             enable gmp, needed for rtmp(t)e support\n                           if openssl or librtmp is not used [no]\n  --enable-gnutls          enable gnutls, needed for https support\n                           if openssl, libtls or mbedtls is not used [no]\n  --disable-iconv          disable iconv [autodetect]\n  --enable-jni             enable JNI support [no]\n  --enable-ladspa          enable LADSPA audio filtering [no]\n  --enable-lcms2           enable ICC profile support via LittleCMS 2 [no]\n  --enable-libaom          enable AV1 video encoding/decoding via libaom [no]\n  --enable-libaribb24      enable ARIB text and caption decoding via libaribb24 [no]\n  --enable-libaribcaption  enable ARIB text and caption decoding via libaribcaption [no]\n  --enable-libass          enable libass subtitles rendering,\n                           needed for subtitles and ass filter [no]\n  --enable-libbluray       enable BluRay reading using libbluray [no]\n  --enable-libbs2b         enable bs2b DSP library [no]\n  --enable-libcaca         enable textual display using libcaca [no]\n  --enable-libcelt         enable CELT decoding via libcelt [no]\n  --enable-libcdio         enable audio CD grabbing with libcdio [no]\n  --enable-libcodec2       enable codec2 en/decoding using libcodec2 [no]\n  --enable-libdav1d        enable AV1 decoding via libdav1d [no]\n  --enable-libdavs2        enable AVS2 decoding via libdavs2 [no]\n  --enable-libdc1394       enable IIDC-1394 grabbing using libdc1394\n                           and libraw1394 [no]\n  --enable-libdvdnav       enable libdvdnav, needed for DVD demuxing [no]\n  --enable-libdvdread      enable libdvdread, needed for DVD demuxing [no]\n  --enable-libfdk-aac      enable AAC de/encoding via libfdk-aac [no]\n  --enable-libflite        enable flite (voice synthesis) support via libflite [no]\n  --enable-libfontconfig   enable libfontconfig, useful for drawtext filter [no]\n  --enable-libfreetype     enable libfreetype, needed for drawtext filter [no]\n  --enable-libfribidi      enable libfribidi, improves drawtext filter [no]\n  --enable-libharfbuzz     enable libharfbuzz, needed for drawtext filter [no]\n  --enable-libglslang      enable GLSL->SPIRV compilation via libglslang [no]\n  --enable-libgme          enable Game Music Emu via libgme [no]\n  --enable-libgsm          enable GSM de/encoding via libgsm [no]\n  --enable-libiec61883     enable iec61883 via libiec61883 [no]\n  --enable-libilbc         enable iLBC de/encoding via libilbc [no]\n  --enable-libjack         enable JACK audio sound server [no]\n  --enable-libjxl          enable JPEG XL de/encoding via libjxl [no]\n  --enable-libklvanc       enable Kernel Labs VANC processing [no]\n  --enable-libkvazaar      enable HEVC encoding via libkvazaar [no]\n  --enable-liblc3          enable LC3 de/encoding via liblc3 [no]\n  --enable-liblcevc-dec    enable LCEVC decoding via liblcevc-dec [no]\n  --enable-liblensfun      enable lensfun lens correction [no]\n  --enable-libmodplug      enable ModPlug via libmodplug [no]\n  --enable-libmp3lame      enable MP3 encoding via libmp3lame [no]\n  --enable-libopencore-amrnb enable AMR-NB de/encoding via libopencore-amrnb [no]\n  --enable-libopencore-amrwb enable AMR-WB decoding via libopencore-amrwb [no]\n  --enable-libopencv       enable video filtering via libopencv [no]\n  --enable-libopenh264     enable H.264 encoding via OpenH264 [no]\n  --enable-libopenjpeg     enable JPEG 2000 encoding via OpenJPEG [no]\n  --enable-libopenmpt      enable decoding tracked files via libopenmpt [no]\n  --enable-libopenvino     enable OpenVINO as a DNN module backend\n                           for DNN based filters like dnn_processing [no]\n  --enable-libopus         enable Opus de/encoding via libopus [no]\n  --enable-libplacebo      enable libplacebo library [no]\n  --enable-libpulse        enable Pulseaudio input via libpulse [no]\n  --enable-libqrencode     enable QR encode generation via libqrencode [no]\n  --enable-libquirc        enable QR decoding via libquirc [no]\n  --enable-librabbitmq     enable RabbitMQ library [no]\n  --enable-librav1e        enable AV1 encoding via rav1e [no]\n  --enable-librist         enable RIST via librist [no]\n  --enable-librsvg         enable SVG rasterization via librsvg [no]\n  --enable-librubberband   enable rubberband needed for rubberband filter [no]\n  --enable-librtmp         enable RTMP[E] support via librtmp [no]\n  --enable-libshaderc      enable GLSL->SPIRV compilation via libshaderc [no]\n  --enable-libshine        enable fixed-point MP3 encoding via libshine [no]\n  --enable-libsmbclient    enable Samba protocol via libsmbclient [no]\n  --enable-libsnappy       enable Snappy compression, needed for hap encoding [no]\n  --enable-libsoxr         enable Include libsoxr resampling [no]\n  --enable-libspeex        enable Speex de/encoding via libspeex [no]\n  --enable-libsrt          enable Haivision SRT protocol via libsrt [no]\n  --enable-libssh          enable SFTP protocol via libssh [no]\n  --enable-libsvtav1       enable AV1 encoding via SVT [no]\n  --enable-libtensorflow   enable TensorFlow as a DNN module backend\n                           for DNN based filters like sr [no]\n  --enable-libtesseract    enable Tesseract, needed for ocr filter [no]\n  --enable-libtheora       enable Theora encoding via libtheora [no]\n  --enable-libtls          enable LibreSSL (via libtls), needed for https support\n                           if openssl, gnutls or mbedtls is not used [no]\n  --enable-libtorch        enable Torch as one DNN backend [no]\n  --enable-libtwolame      enable MP2 encoding via libtwolame [no]\n  --enable-libuavs3d       enable AVS3 decoding via libuavs3d [no]\n  --enable-libv4l2         enable libv4l2/v4l-utils [no]\n  --enable-libvidstab      enable video stabilization using vid.stab [no]\n  --enable-libvmaf         enable vmaf filter via libvmaf [no]\n  --enable-libvo-amrwbenc  enable AMR-WB encoding via libvo-amrwbenc [no]\n  --enable-libvorbis       enable Vorbis en/decoding via libvorbis,\n                           native implementation exists [no]\n  --enable-libvpx          enable VP8 and VP9 de/encoding via libvpx [no]\n  --enable-libvvenc        enable H.266/VVC encoding via vvenc [no]\n  --enable-libwebp         enable WebP encoding via libwebp [no]\n  --enable-libx264         enable H.264 encoding via x264 [no]\n  --enable-libx265         enable HEVC encoding via x265 [no]\n  --enable-libxeve         enable EVC encoding via libxeve [no]\n  --enable-libxevd         enable EVC decoding via libxevd [no]\n  --enable-libxavs         enable AVS encoding via xavs [no]\n  --enable-libxavs2        enable AVS2 encoding via xavs2 [no]\n  --enable-libxcb          enable X11 grabbing using XCB [autodetect]\n  --enable-libxcb-shm      enable X11 grabbing shm communication [autodetect]\n  --enable-libxcb-xfixes   enable X11 grabbing mouse rendering [autodetect]\n  --enable-libxcb-shape    enable X11 grabbing shape rendering [autodetect]\n  --enable-libxvid         enable Xvid encoding via xvidcore,\n                           native MPEG-4/Xvid encoder exists [no]\n  --enable-libxml2         enable XML parsing using the C library libxml2, needed\n                           for dash and imf demuxing support [no]\n  --enable-libzimg         enable z.lib, needed for zscale filter [no]\n  --enable-libzmq          enable message passing via libzmq [no]\n  --enable-libzvbi         enable teletext support via libzvbi [no]\n  --enable-lv2             enable LV2 audio filtering [no]\n  --disable-lzma           disable lzma [autodetect]\n  --enable-decklink        enable Blackmagic DeckLink I/O support [no]\n  --enable-mbedtls         enable mbedTLS, needed for https support\n                           if openssl, gnutls or libtls is not used [no]\n  --enable-mediacodec      enable Android MediaCodec support [no]\n  --enable-mediafoundation enable encoding via MediaFoundation [auto]\n  --disable-metal          disable Apple Metal framework [autodetect]\n  --enable-libmysofa       enable libmysofa, needed for sofalizer filter [no]\n  --enable-openal          enable OpenAL 1.1 capture support [no]\n  --enable-opencl          enable OpenCL processing [no]\n  --enable-opengl          enable OpenGL rendering [no]\n  --enable-openssl         enable openssl, needed for https support\n                           if gnutls, libtls or mbedtls is not used [no]\n  --enable-pocketsphinx    enable PocketSphinx, needed for asr filter [no]\n  --disable-sndio          disable sndio support [autodetect]\n  --disable-schannel       disable SChannel SSP, needed for TLS support on\n                           Windows if openssl and gnutls are not used [autodetect]\n  --disable-sdl2           disable sdl2 [autodetect]\n  --disable-securetransport disable Secure Transport, needed for TLS support\n                           on OSX if openssl and gnutls are not used [autodetect]\n  --enable-vapoursynth     enable VapourSynth demuxer [no]\n  --disable-xlib           disable xlib [autodetect]\n  --disable-zlib           disable zlib [autodetect]\n\n  The following libraries provide various hardware acceleration features:\n  --disable-amf            disable AMF video encoding code [autodetect]\n  --disable-audiotoolbox   disable Apple AudioToolbox code [autodetect]\n  --enable-cuda-nvcc       enable Nvidia CUDA compiler [no]\n  --disable-cuda-llvm      disable CUDA compilation using clang [autodetect]\n  --disable-cuvid          disable Nvidia CUVID support [autodetect]\n  --disable-d3d11va        disable Microsoft Direct3D 11 video acceleration code [autodetect]\n  --disable-d3d12va        disable Microsoft Direct3D 12 video acceleration code [autodetect]\n  --disable-dxva2          disable Microsoft DirectX 9 video acceleration code [autodetect]\n  --disable-ffnvcodec      disable dynamically linked Nvidia code [autodetect]\n  --disable-libdrm         disable DRM code (Linux) [autodetect]\n  --enable-libmfx          enable Intel MediaSDK (AKA Quick Sync Video) code via libmfx [no]\n  --enable-libvpl          enable Intel oneVPL code via libvpl if libmfx is not used [no]\n  --enable-libnpp          enable Nvidia Performance Primitives-based code [no]\n  --enable-mmal            enable Broadcom Multi-Media Abstraction Layer (Raspberry Pi) via MMAL [no]\n  --disable-nvdec          disable Nvidia video decoding acceleration (via hwaccel) [autodetect]\n  --disable-nvenc          disable Nvidia video encoding code [autodetect]\n  --enable-omx             enable OpenMAX IL code [no]\n  --enable-omx-rpi         enable OpenMAX IL code for Raspberry Pi [no]\n  --enable-rkmpp           enable Rockchip Media Process Platform code [no]\n  --disable-v4l2-m2m       disable V4L2 mem2mem code [autodetect]\n  --disable-vaapi          disable Video Acceleration API (mainly Unix/Intel) code [autodetect]\n  --disable-vdpau          disable Nvidia Video Decode and Presentation API for Unix code [autodetect]\n  --disable-videotoolbox   disable VideoToolbox code [autodetect]\n  --disable-vulkan         disable Vulkan code [autodetect]\n  --enable-vulkan-static   statically link to libvulkan [no]\n\nToolchain options:\n  --arch=ARCH              select architecture [$arch]\n  --cpu=CPU                select the minimum required CPU (affects\n                           instruction selection, may crash on older CPUs)\n  --cross-prefix=PREFIX    use PREFIX for compilation tools [$cross_prefix]\n  --progs-suffix=SUFFIX    program name suffix []\n  --enable-cross-compile   assume a cross-compiler is used\n  --sysroot=PATH           root of cross-build tree\n  --sysinclude=PATH        location of cross-build system headers\n  --target-os=OS           compiler targets OS [$target_os]\n  --target-exec=CMD        command to run executables on target\n  --target-path=DIR        path to view of build directory on target\n  --target-samples=DIR     path to samples directory on target\n  --tempprefix=PATH        force fixed dir/prefix instead of mktemp for checks\n  --toolchain=NAME         set tool defaults according to NAME\n                           (gcc-asan, clang-asan, gcc-msan, clang-msan,\n                           gcc-tsan, clang-tsan, gcc-usan, clang-usan,\n                           valgrind-massif, valgrind-memcheck,\n                           msvc, icl, gcov, llvm-cov, hardened)\n  --nm=NM                  use nm tool NM [$nm_default]\n  --ar=AR                  use archive tool AR [$ar_default]\n  --as=AS                  use assembler AS [$as_default]\n  --ln_s=LN_S              use symbolic link tool LN_S [$ln_s_default]\n  --strip=STRIP            use strip tool STRIP [$strip_default]\n  --windres=WINDRES        use windows resource compiler WINDRES [$windres_default]\n  --x86asmexe=EXE          use nasm-compatible assembler EXE [$x86asmexe_default]\n  --cc=CC                  use C compiler CC [$cc_default]\n  --stdc=STDC              use C standard STDC [$stdc_default]\n  --cxx=CXX                use C compiler CXX [$cxx_default]\n  --stdcxx=STDCXX          use C standard STDCXX [$stdcxx_default]\n  --objcc=OCC              use ObjC compiler OCC [$cc_default]\n  --dep-cc=DEPCC           use dependency generator DEPCC [$cc_default]\n  --nvcc=NVCC              use Nvidia CUDA compiler NVCC or clang [$nvcc_default]\n  --ld=LD                  use linker LD [$ld_default]\n  --metalcc=METALCC        use metal compiler METALCC [$metalcc_default]\n  --metallib=METALLIB      use metal linker METALLIB [$metallib_default]\n  --pkg-config=PKGCONFIG   use pkg-config tool PKGCONFIG [$pkg_config_default]\n  --pkg-config-flags=FLAGS pass additional flags to pkgconf []\n  --ranlib=RANLIB          use ranlib RANLIB [$ranlib_default]\n  --doxygen=DOXYGEN        use DOXYGEN to generate API doc [$doxygen_default]\n  --host-cc=HOSTCC         use host C compiler HOSTCC\n  --host-cflags=HCFLAGS    use HCFLAGS when compiling for host\n  --host-cppflags=HCPPFLAGS use HCPPFLAGS when compiling for host\n  --host-ld=HOSTLD         use host linker HOSTLD\n  --host-ldflags=HLDFLAGS  use HLDFLAGS when linking for host\n  --host-extralibs=HLIBS   use libs HLIBS when linking for host\n  --host-os=OS             compiler host OS [$target_os]\n  --extra-cflags=ECFLAGS   add ECFLAGS to CFLAGS [$CFLAGS]\n  --extra-cxxflags=ECFLAGS add ECFLAGS to CXXFLAGS [$CXXFLAGS]\n  --extra-objcflags=FLAGS  add FLAGS to OBJCFLAGS [$CFLAGS]\n  --extra-ldflags=ELDFLAGS add ELDFLAGS to LDFLAGS [$LDFLAGS]\n  --extra-ldexeflags=ELDFLAGS add ELDFLAGS to LDEXEFLAGS [$LDEXEFLAGS]\n  --extra-ldsoflags=ELDFLAGS add ELDFLAGS to LDSOFLAGS [$LDSOFLAGS]\n  --extra-libs=ELIBS       add ELIBS [$ELIBS]\n  --extra-version=STRING   version string suffix []\n  --optflags=OPTFLAGS      override optimization-related compiler flags\n  --nvccflags=NVCCFLAGS    override nvcc flags [$nvccflags_default]\n  --build-suffix=SUFFIX    library name suffix []\n  --enable-pic             build position-independent code\n  --enable-thumb           compile for Thumb instruction set\n  --enable-lto[=arg]       use link-time optimization\n  --env=\"ENV=override\"     override the environment variables\n\nAdvanced options (experts only):\n  --malloc-prefix=PREFIX   prefix malloc and related names with PREFIX\n  --custom-allocator=NAME  use a supported custom allocator\n  --disable-symver         disable symbol versioning\n  --enable-hardcoded-tables use hardcoded tables instead of runtime generation\n  --disable-safe-bitstream-reader\n                           disable buffer boundary checking in bitreaders\n                           (faster, but may crash)\n  --sws-max-filter-size=N  the max filter size swscale uses [$sws_max_filter_size_default]\n\nOptimization options (experts only):\n  --disable-asm            disable all assembly optimizations\n  --disable-altivec        disable AltiVec optimizations\n  --disable-vsx            disable VSX optimizations\n  --disable-power8         disable POWER8 optimizations\n  --disable-amd3dnow       disable 3DNow! optimizations\n  --disable-amd3dnowext    disable 3DNow! extended optimizations\n  --disable-mmx            disable MMX optimizations\n  --disable-mmxext         disable MMXEXT optimizations\n  --disable-sse            disable SSE optimizations\n  --disable-sse2           disable SSE2 optimizations\n  --disable-sse3           disable SSE3 optimizations\n  --disable-ssse3          disable SSSE3 optimizations\n  --disable-sse4           disable SSE4 optimizations\n  --disable-sse42          disable SSE4.2 optimizations\n  --disable-avx            disable AVX optimizations\n  --disable-xop            disable XOP optimizations\n  --disable-fma3           disable FMA3 optimizations\n  --disable-fma4           disable FMA4 optimizations\n  --disable-avx2           disable AVX2 optimizations\n  --disable-avx512         disable AVX-512 optimizations\n  --disable-avx512icl      disable AVX-512ICL optimizations\n  --disable-aesni          disable AESNI optimizations\n  --disable-armv5te        disable armv5te optimizations\n  --disable-armv6          disable armv6 optimizations\n  --disable-armv6t2        disable armv6t2 optimizations\n  --disable-vfp            disable VFP optimizations\n  --disable-neon           disable NEON optimizations\n  --disable-dotprod        disable DOTPROD optimizations\n  --disable-i8mm           disable I8MM optimizations\n  --disable-sve            disable SVE optimizations\n  --disable-sve2           disable SVE2 optimizations\n  --disable-inline-asm     disable use of inline assembly\n  --disable-x86asm         disable use of standalone x86 assembly\n  --disable-mipsdsp        disable MIPS DSP ASE R1 optimizations\n  --disable-mipsdspr2      disable MIPS DSP ASE R2 optimizations\n  --disable-msa            disable MSA optimizations\n  --disable-mipsfpu        disable floating point MIPS optimizations\n  --disable-mmi            disable Loongson MMI optimizations\n  --disable-lsx            disable Loongson LSX optimizations\n  --disable-lasx           disable Loongson LASX optimizations\n  --disable-rvv            disable RISC-V Vector optimizations\n  --disable-fast-unaligned consider unaligned accesses slow\n  --disable-simd128        disable WebAssembly simd128 optimizations\n\nDeveloper options (useful when working on FFmpeg itself):\n  --disable-debug          disable debugging symbols\n  --enable-debug=LEVEL     set the debug level [$debuglevel]\n  --disable-optimizations  disable compiler optimizations\n  --enable-extra-warnings  enable more compiler warnings\n  --disable-stripping      disable stripping of executables and shared libraries\n  --assert-level=level     0(default), 1 or 2, amount of assertion testing,\n                           2 causes a slowdown at runtime.\n  --enable-memory-poisoning fill heap uninitialized allocated space with arbitrary data\n  --valgrind=VALGRIND      run \"make fate\" tests through valgrind to detect memory\n                           leaks and errors, using the specified valgrind binary.\n                           Cannot be combined with --target-exec\n  --enable-ftrapv          Trap arithmetic overflows\n  --samples=PATH           location of test samples for FATE, if not set use\n                           \\$FATE_SAMPLES at make invocation time.\n  --enable-neon-clobber-test check NEON registers for clobbering (should be\n                           used only for debugging purposes)\n  --enable-xmm-clobber-test check XMM registers for clobbering (Win64-only;\n                           should be used only for debugging purposes)\n  --enable-random          randomly enable/disable components\n  --disable-random\n  --enable-random=LIST     randomly enable/disable specific components or\n  --disable-random=LIST    component groups. LIST is a comma-separated list\n                           of NAME[:PROB] entries where NAME is a component\n                           (group) and PROB the probability associated with\n                           NAME (default 0.5).\n  --random-seed=VALUE      seed value for --enable/disable-random\n  --disable-valgrind-backtrace do not print a backtrace under Valgrind\n                           (only applies to --disable-optimizations builds)\n  --enable-ossfuzz         Enable building fuzzer tool\n  --libfuzzer=PATH         path to libfuzzer\n  --ignore-tests=TESTS     comma-separated list (without \"fate-\" prefix\n                           in the name) of tests whose result is ignored\n  --enable-linux-perf      enable Linux Performance Monitor API\n  --enable-macos-kperf     enable macOS kperf (private) API\n  --disable-large-tests    disable tests that use a large amount of memory\n  --disable-ptx-compression don't compress CUDA PTX code even when possible\n  --disable-version-tracking don't include the git/release version in the build\n\nNOTE: Object files are built at the place where configure is launched.\nEOF\n  exit 0\n}\n\nif test -t 1 && which tput >/dev/null 2>&1; then\n    ncolors=$(tput colors)\n    if test -n \"$ncolors\" && test $ncolors -ge 8; then\n        bold_color=$(tput bold)\n        warn_color=$(tput setaf 3)\n        error_color=$(tput setaf 1)\n        reset_color=$(tput sgr0)\n    fi\n    # 72 used instead of 80 since that's the default of pr\n    ncols=$(tput cols)\nfi\n: ${ncols:=72}\n\nlog(){\n    echo \"$@\" >> $logfile\n}\n\nlog_file(){\n    log BEGIN \"$1\"\n    log_file_i=1\n    while IFS= read -r log_file_line; do\n        printf '%5d\\t%s\\n' \"$log_file_i\" \"$log_file_line\"\n        log_file_i=$(($log_file_i+1))\n    done < \"$1\" >> \"$logfile\"\n    log END \"$1\"\n}\n\nwarn(){\n    log \"WARNING: $*\"\n    WARNINGS=\"${WARNINGS}WARNING: $*\\n\"\n}\n\ndie(){\n    log \"$@\"\n    echo \"$error_color$bold_color$@$reset_color\"\n    cat <<EOF\n\nIf you think configure made a mistake, make sure you are using the latest\nversion from Git.  If the latest version fails, report the problem to the\nffmpeg-user@ffmpeg.org mailing list or IRC #ffmpeg on irc.libera.chat.\nEOF\n    if disabled logging; then\n        cat <<EOF\nRerun configure with logging enabled (do not use --disable-logging), and\ninclude the log this produces with your report.\nEOF\n    else\n        cat <<EOF\nInclude the log file \"$logfile\" produced by configure as this will help\nsolve the problem.\nEOF\n    fi\n    exit 1\n}\n\n# Avoid locale weirdness, besides we really just want to translate ASCII.\ntoupper(){\n    echo \"$@\" | tr abcdefghijklmnopqrstuvwxyz ABCDEFGHIJKLMNOPQRSTUVWXYZ\n}\n\ntolower(){\n    echo \"$@\" | tr ABCDEFGHIJKLMNOPQRSTUVWXYZ abcdefghijklmnopqrstuvwxyz\n}\n\nc_escape(){\n    echo \"$*\" | sed 's/[\"\\\\]/\\\\\\0/g'\n}\n\nsh_quote(){\n    v=$(echo \"$1\" | sed \"s/'/'\\\\\\\\''/g\")\n    test \"x$v\" = \"x${v#*[!A-Za-z0-9_/.+-]}\" || v=\"'$v'\"\n    echo \"$v\"\n}\n\ncleanws(){\n    echo \"$@\" | sed 's/^ *//;s/[[:space:]][[:space:]]*/ /g;s/ *$//'\n}\n\nfilter(){\n    pat=$1\n    shift\n    for v; do\n        eval \"case '$v' in $pat) printf '%s ' '$v' ;; esac\"\n    done\n}\n\nfilter_out(){\n    pat=$1\n    shift\n    for v; do\n        eval \"case '$v' in $pat) ;; *) printf '%s ' '$v' ;; esac\"\n    done\n}\n\nmap(){\n    m=$1\n    shift\n    for v; do eval $m; done\n}\n\nadd_suffix(){\n    suffix=$1\n    shift\n    for v; do echo ${v}${suffix}; done\n}\n\nremove_suffix(){\n    suffix=$1\n    shift\n    for v; do echo ${v%$suffix}; done\n}\n\nset_all(){\n    value=$1\n    shift\n    for var in $*; do\n        eval $var=$value\n    done\n}\n\nset_weak(){\n    value=$1\n    shift\n    for var; do\n        eval : \\${$var:=$value}\n    done\n}\n\nsanitize_var_name(){\n    echo $@ | sed 's/[^A-Za-z0-9_]/_/g'\n}\n\nset_sanitized(){\n    var=$1\n    shift\n    eval $(sanitize_var_name \"$var\")='$*'\n}\n\nget_sanitized(){\n    eval echo \\$$(sanitize_var_name \"$1\")\n}\n\npushvar(){\n    for pvar in $*; do\n        eval level=\\${${pvar}_level:=0}\n        eval ${pvar}_${level}=\"\\$$pvar\"\n        eval ${pvar}_level=$(($level+1))\n    done\n}\n\npopvar(){\n    for pvar in $*; do\n        eval level=\\${${pvar}_level:-0}\n        test $level = 0 && continue\n        eval level=$(($level-1))\n        eval $pvar=\"\\${${pvar}_${level}}\"\n        eval ${pvar}_level=$level\n        eval unset ${pvar}_${level}\n    done\n}\n\nrequest(){\n    for var in $*; do\n        eval ${var}_requested=yes\n        eval $var=\n    done\n}\n\nwarn_if_gets_disabled(){\n    for var in $*; do\n        WARN_IF_GETS_DISABLED_LIST=\"$WARN_IF_GETS_DISABLED_LIST $var\"\n    done\n}\n\nenable(){\n    set_all yes $*\n}\n\ndisable(){\n    set_all no $*\n}\n\ndisable_with_reason(){\n    disable $1\n    eval \"${1}_disable_reason=\\\"$2\\\"\"\n    if requested $1; then\n        die \"ERROR: $1 requested, but $2\"\n    fi\n}\n\nenable_weak(){\n    set_weak yes $*\n}\n\ndisable_weak(){\n    set_weak no $*\n}\n\nenable_sanitized(){\n    for var; do\n        enable $(sanitize_var_name $var)\n    done\n}\n\ndisable_sanitized(){\n    for var; do\n        disable $(sanitize_var_name $var)\n    done\n}\n\ndo_enable_deep(){\n    for var; do\n        enabled $var && continue\n        set -- $var\n        eval enable_deep \\$${var}_select\n        var=$1\n        eval enable_deep_weak \\$${var}_suggest\n    done\n}\n\nenable_deep(){\n    do_enable_deep $*\n    enable $*\n}\n\nenable_deep_weak(){\n    for var; do\n        disabled $var && continue\n        set -- $var\n        do_enable_deep $var\n        var=$1\n        enable_weak $var\n    done\n}\n\nrequested(){\n    test \"${1#!}\" = \"$1\" && op=\"=\" || op=\"!=\"\n    eval test \"x\\$${1#!}_requested\" $op \"xyes\"\n}\n\nenabled(){\n    test \"${1#!}\" = \"$1\" && op=\"=\" || op=\"!=\"\n    eval test \"x\\$${1#!}\" $op \"xyes\"\n}\n\ndisabled(){\n    test \"${1#!}\" = \"$1\" && op=\"=\" || op=\"!=\"\n    eval test \"x\\$${1#!}\" $op \"xno\"\n}\n\nenabled_all(){\n    for opt; do\n        enabled $opt || return 1\n    done\n}\n\ndisabled_all(){\n    for opt; do\n        disabled $opt || return 1\n    done\n}\n\nenabled_any(){\n    for opt; do\n        enabled $opt && return 0\n    done\n}\n\ndisabled_any(){\n    for opt; do\n        disabled $opt && return 0\n    done\n    return 1\n}\n\nset_default(){\n    for opt; do\n        eval : \\${$opt:=\\$${opt}_default}\n    done\n}\n\nis_in(){\n    value=$1\n    shift\n    for var in $*; do\n        [ $var = $value ] && return 0\n    done\n    return 1\n}\n\n# The cfg loop is very hot (several thousands iterations), and in bash also\n# potentialy quite slow. Try to abort the iterations early, preferably without\n# calling functions. 70%+ of the time cfg is already done or without deps.\ncheck_deps(){\n    for cfg; do\n        eval [ x\\$${cfg}_checking = xdone ] && continue\n        eval [ x\\$${cfg}_checking = xinprogress ] && die \"Circular dependency for $cfg.\"\n\n        eval \"\n        dep_all=\\$${cfg}_deps\n        dep_any=\\$${cfg}_deps_any\n        dep_con=\\$${cfg}_conflict\n        dep_sel=\\$${cfg}_select\n        dep_sgs=\\$${cfg}_suggest\n        dep_ifa=\\$${cfg}_if\n        dep_ifn=\\$${cfg}_if_any\n        \"\n\n        # most of the time here $cfg has no deps - avoid costly no-op work\n        if [ \"$dep_all$dep_any$dep_con$dep_sel$dep_sgs$dep_ifa$dep_ifn\" ]; then\n            eval ${cfg}_checking=inprogress\n\n            set -- $cfg \"$dep_all\" \"$dep_any\" \"$dep_con\" \"$dep_sel\" \"$dep_sgs\" \"$dep_ifa\" \"$dep_ifn\"\n            check_deps $dep_all $dep_any $dep_con $dep_sel $dep_sgs $dep_ifa $dep_ifn\n            cfg=$1; dep_all=$2; dep_any=$3; dep_con=$4; dep_sel=$5 dep_sgs=$6; dep_ifa=$7; dep_ifn=$8\n\n            [ -n \"$dep_ifa\" ] && { enabled_all $dep_ifa && enable_weak $cfg; }\n            [ -n \"$dep_ifn\" ] && { enabled_any $dep_ifn && enable_weak $cfg; }\n            enabled_all  $dep_all || { disable_with_reason $cfg \"not all dependencies are satisfied: $dep_all\"; }\n            enabled_any  $dep_any || { disable_with_reason $cfg \"not any dependency is satisfied: $dep_any\"; }\n            disabled_all $dep_con || { disable_with_reason $cfg \"some conflicting dependencies are unsatisfied: $dep_con\"; }\n            disabled_any $dep_sel && { disable_with_reason $cfg \"some selected dependency is unsatisfied: $dep_sel\"; }\n\n            enabled $cfg && enable_deep_weak $dep_sel $dep_sgs\n\n            for dep in $dep_all $dep_any $dep_sel $dep_sgs; do\n                # filter out library deps, these do not belong in extralibs\n                is_in $dep $LIBRARY_LIST && continue\n                enabled $dep && eval append ${cfg}_extralibs ${dep}_extralibs\n            done\n        fi\n\n        eval ${cfg}_checking=done\n    done\n}\n\nprint_config(){\n    pfx=$1\n    files=$2\n    shift 2\n    map 'eval echo \"$v \\${$v:-no}\"' \"$@\" |\n    awk \"BEGIN { split(\\\"$files\\\", files) }\n        {\n            c = \\\"$pfx\\\" toupper(\\$1);\n            v = \\$2;\n            sub(/yes/, 1, v);\n            sub(/no/,  0, v);\n            for (f in files) {\n                file = files[f];\n                if (file ~ /\\\\.h\\$/) {\n                    printf(\\\"#define %s %d\\\\n\\\", c, v) >>file;\n                } else if (file ~ /\\\\.asm\\$/) {\n                    printf(\\\"%%define %s %d\\\\n\\\", c, v) >>file;\n                } else if (file ~ /\\\\.mak\\$/) {\n                    n = -v ? \\\"\\\" : \\\"!\\\";\n                    printf(\\\"%s%s=yes\\\\n\\\", n, c) >>file;\n                } else if (file ~ /\\\\.texi\\$/) {\n                    pre = -v ? \\\"\\\" : \\\"@c \\\";\n                    yesno = \\$2;\n                    c2 = tolower(c);\n                    gsub(/_/, \\\"-\\\", c2);\n                    printf(\\\"%s@set %s %s\\\\n\\\", pre, c2, yesno) >>file;\n                }\n            }\n        }\"\n}\n\nprint_enabled(){\n    suf=$1\n    shift\n    for v; do\n        enabled $v && printf \"%s\\n\" ${v%$suf}\n    done\n}\n\nappend(){\n    var=$1\n    shift\n    eval \"$var=\\\"\\$$var $*\\\"\"\n}\n\nprepend(){\n    var=$1\n    shift\n    eval \"$var=\\\"$* \\$$var\\\"\"\n}\n\nreverse () {\n    eval '\n        reverse_out=\n        for v in $'$1'; do\n            reverse_out=\"$v $reverse_out\"\n        done\n        '$1'=$reverse_out\n    '\n}\n\n# keeps the last occurence of each non-unique item\nunique(){\n    unique_out=\n    eval unique_in=\\$$1\n    reverse unique_in\n    for v in $unique_in; do\n        # \" $unique_out\" +space such that every item is surrounded with spaces\n        case \" $unique_out\" in *\" $v \"*) continue; esac  # already in list\n        unique_out=\"$unique_out$v \"\n    done\n    reverse unique_out\n    eval $1=\\$unique_out\n}\n\nresolve(){\n    resolve_out=\n    eval resolve_in=\\$$1\n    for v in $resolve_in; do\n        eval 'resolve_out=\"$resolve_out$'$v' \"'\n    done\n    eval $1=\\$resolve_out\n}\n\nadd_cppflags(){\n    append CPPFLAGS \"$@\"\n}\n\nadd_cflags(){\n    append CFLAGS $($cflags_filter \"$@\")\n}\n\nadd_cflags_headers(){\n    append CFLAGS_HEADERS $($cflags_filter \"$@\")\n}\n\nadd_cxxflags(){\n    append CXXFLAGS $($cflags_filter \"$@\")\n}\n\nadd_objcflags(){\n    append OBJCFLAGS $($objcflags_filter \"$@\")\n}\n\nadd_asflags(){\n    append ASFLAGS $($asflags_filter \"$@\")\n}\n\nadd_ldflags(){\n    append LDFLAGS $($ldflags_filter \"$@\")\n}\n\nadd_ldexeflags(){\n    append LDEXEFLAGS $($ldflags_filter \"$@\")\n}\n\nadd_ldsoflags(){\n    append LDSOFLAGS $($ldflags_filter \"$@\")\n}\n\nadd_extralibs(){\n    prepend extralibs $($ldflags_filter \"$@\")\n}\n\nadd_stripflags(){\n    append ASMSTRIPFLAGS \"$@\"\n}\n\nadd_host_cppflags(){\n    append host_cppflags \"$@\"\n}\n\nadd_host_cflags(){\n    append host_cflags $($host_cflags_filter \"$@\")\n}\n\nadd_host_ldflags(){\n    append host_ldflags $($host_ldflags_filter \"$@\")\n}\n\nadd_compat(){\n    append compat_objs $1\n    shift\n    map 'add_cppflags -D$v' \"$@\"\n}\n\ntest_cmd(){\n    log \"$@\"\n    \"$@\" >> $logfile 2>&1\n}\n\ntest_stat(){\n    log test_stat \"$@\"\n    stat \"$1\" >> $logfile 2>&1\n}\n\ncc_e(){\n    eval printf '%s\\\\n' $CC_E\n}\n\ncc_o(){\n    eval printf '%s\\\\n' $CC_O\n}\n\nas_o(){\n    eval printf '%s\\\\n' $AS_O\n}\n\nx86asm_o(){\n    eval printf '%s\\\\n' $X86ASM_O\n}\n\nld_o(){\n    eval printf '%s\\\\n' $LD_O\n}\n\nhostcc_e(){\n    eval printf '%s\\\\n' $HOSTCC_E\n}\n\nhostcc_o(){\n    eval printf '%s\\\\n' $HOSTCC_O\n}\n\nnvcc_o(){\n    eval printf '%s\\\\n' $NVCC_O\n}\n\ntest_cc(){\n    log test_cc \"$@\"\n    cat > $TMPC\n    log_file $TMPC\n    test_cmd $cc $CPPFLAGS $CFLAGS \"$@\" $CC_C $(cc_o $TMPO) $TMPC\n}\n\ntest_cxx(){\n    log test_cxx \"$@\"\n    cat > $TMPCPP\n    log_file $TMPCPP\n    test_cmd $cxx $CPPFLAGS $CFLAGS $CXXFLAGS \"$@\" $CXX_C -o $TMPO $TMPCPP\n}\n\ntest_objcc(){\n    log test_objcc \"$@\"\n    cat > $TMPM\n    log_file $TMPM\n    test_cmd $objcc -Werror=missing-prototypes $CPPFLAGS $CFLAGS $OBJCFLAGS \"$@\" $OBJCC_C $(cc_o $TMPO) $TMPM\n}\n\ntest_nvcc(){\n    log test_nvcc \"$@\"\n    cat > $TMPCU\n    log_file $TMPCU\n    tmpcu_=$TMPCU\n    tmpo_=$TMPO\n    [ -x \"$(command -v cygpath)\" ] && tmpcu_=$(cygpath -m $tmpcu_) && tmpo_=$(cygpath -m $tmpo_)\n    test_cmd $nvcc $nvccflags \"$@\" $NVCC_C $(nvcc_o $tmpo_) $tmpcu_\n}\n\ncheck_nvcc() {\n    log check_nvcc \"$@\"\n    name=$1\n    shift 1\n    disabled $name && return\n    disable $name\n    test_nvcc \"$@\" <<EOF && enable $name\nextern \"C\" {\n    __global__ void hello(unsigned char *data) {}\n}\nEOF\n}\n\ntest_cpp(){\n    log test_cpp \"$@\"\n    cat > $TMPC\n    log_file $TMPC\n    test_cmd $cc $CPPFLAGS $CFLAGS \"$@\" $(cc_e $TMPO) $TMPC\n}\n\ntest_as(){\n    log test_as \"$@\"\n    cat > $TMPS\n    log_file $TMPS\n    test_cmd $as $CPPFLAGS $ASFLAGS \"$@\" $AS_C $(as_o $TMPO) $TMPS\n}\n\ntest_x86asm(){\n    log test_x86asm \"$@\"\n    echo \"$1\" > $TMPASM\n    log_file $TMPASM\n    shift\n    test_cmd $x86asmexe $X86ASMFLAGS -Werror \"$@\" $(x86asm_o $TMPO) $TMPASM\n}\n\ncheck_cmd(){\n    log check_cmd \"$@\"\n    cmd=$1\n    disabled $cmd && return\n    disable $cmd\n    test_cmd $@ && enable $cmd\n}\n\ncheck_as(){\n    log check_as \"$@\"\n    name=$1\n    code=$2\n    shift 2\n    disable $name\n    test_as $@ <<EOF && enable $name\n$code\nEOF\n}\n\ncheck_inline_asm(){\n    log check_inline_asm \"$@\"\n    name=\"$1\"\n    code=\"$2\"\n    shift 2\n    disable $name\n    test_cc \"$@\" <<EOF && enable $name\nvoid foo(void){ __asm__ volatile($code); }\nEOF\n}\n\ncheck_inline_asm_flags(){\n    log check_inline_asm_flags \"$@\"\n    name=\"$1\"\n    code=\"$2\"\n    flags=''\n    shift 2\n    while [ \"$1\" != \"\" ]; do\n      append flags $1\n      shift\n    done;\n    disable $name\n    cat > $TMPC <<EOF\nvoid foo(void){ __asm__ volatile($code); }\nEOF\n    log_file $TMPC\n    test_cmd $cc $CPPFLAGS $CFLAGS $flags \"$@\" $CC_C $(cc_o $TMPO) $TMPC &&\n    enable $name && add_cflags $flags && add_asflags $flags && add_ldflags $flags\n}\n\ncheck_insn(){\n    log check_insn \"$@\"\n    check_inline_asm ${1}_inline \"\\\"$2\\\"\"\n    check_as ${1}_external \"$2\"\n}\n\ncheck_arch_level(){\n    log check_arch_level \"$@\"\n    level=\"$1\"\n    check_as tested_arch_level \".arch $level\"\n    enabled tested_arch_level && as_arch_level=\"$level\"\n}\n\ncheck_archext_insn(){\n    log check_archext_insn \"$@\"\n    feature=\"$1\"\n    instr=\"$2\"\n    # Check if the assembly is accepted in inline assembly.\n    check_inline_asm ${feature}_inline \"\\\"$instr\\\"\"\n    # We don't check if the instruction is supported out of the box by the\n    # external assembler (we don't try to set ${feature}_external) as we don't\n    # need to use these instructions in non-runtime detected codepaths.\n\n    disable $feature\n\n    enabled as_arch_directive && arch_directive=\".arch $as_arch_level\" || arch_directive=\"\"\n\n    # Test if the assembler supports the .arch_extension $feature directive.\n    arch_extension_directive=\".arch_extension $feature\"\n    test_as <<EOF && enable as_archext_${feature}_directive || arch_extension_directive=\"\"\n$arch_directive\n$arch_extension_directive\nEOF\n\n    # Test if we can assemble the instruction after potential .arch and\n    # .arch_extension directives.\n    test_as <<EOF && enable ${feature}\n$arch_directive\n$arch_extension_directive\n$instr\nEOF\n}\n\ncheck_x86asm(){\n    log check_x86asm \"$@\"\n    name=$1\n    shift\n    disable $name\n    test_x86asm \"$@\" && enable $name\n}\n\ntest_ld(){\n    log test_ld \"$@\"\n    type=$1\n    shift 1\n    flags=$(filter_out '-l*|*.so' $@)\n    libs=$(filter '-l*|*.so' $@)\n    test_$type $($cflags_filter $flags) || return\n    flags=$($ldflags_filter $flags)\n    libs=$($ldflags_filter $libs)\n    test_cmd $ld $LDFLAGS $LDEXEFLAGS $flags $(ld_o $TMPE) $TMPO $libs $extralibs\n}\n\ncheck_ld(){\n    log check_ld \"$@\"\n    type=$1\n    name=$2\n    shift 2\n    disable $name\n    test_ld $type $@ && enable $name\n}\n\nprint_include(){\n    hdr=$1\n    test \"${hdr%.h}\" = \"${hdr}\" &&\n        echo \"#include $hdr\"    ||\n        echo \"#include <$hdr>\"\n}\n\ntest_code(){\n    log test_code \"$@\"\n    check=$1\n    headers=$2\n    code=$3\n    shift 3\n    {\n        for hdr in $headers; do\n            print_include $hdr\n        done\n        echo \"int main(void) { $code; return 0; }\"\n    } | test_$check \"$@\"\n}\n\ncheck_cppflags(){\n    log check_cppflags \"$@\"\n    test_cpp \"$@\" <<EOF && append CPPFLAGS \"$@\"\n#include <stdlib.h>\nEOF\n}\n\ntest_cflags(){\n    log test_cflags \"$@\"\n    set -- $($cflags_filter \"$@\")\n    test_cc \"$@\" <<EOF\nint x;\nEOF\n}\n\ncheck_cflags(){\n    log check_cflags \"$@\"\n    test_cflags \"$@\" && add_cflags \"$@\"\n}\n\ncheck_cxxflags(){\n    log check_cxxflags \"$@\"\n    set -- $($cflags_filter \"$@\")\n    test_cxx \"$@\" <<EOF && append CXXFLAGS \"$@\"\nint x;\nEOF\n}\n\ntest_objcflags(){\n    log test_objcflags \"$@\"\n    set -- $($objcflags_filter \"$@\")\n    test_objcc \"$@\" <<EOF\nint x;\nEOF\n}\n\ncheck_objcflags(){\n    log check_objcflags \"$@\"\n    test_objcflags \"$@\" && add_objcflags \"$@\"\n}\n\ntest_ldflags(){\n    log test_ldflags \"$@\"\n    set -- $($ldflags_filter \"$@\")\n    test_ld \"cc\" \"$@\" <<EOF\nint main(void){ return 0; }\nEOF\n}\n\ncheck_ldflags(){\n    log check_ldflags \"$@\"\n    test_ldflags \"$@\" && add_ldflags \"$@\"\n}\n\ntest_stripflags(){\n    log test_stripflags \"$@\"\n    # call test_cc to get a fresh TMPO\n    test_cc <<EOF\nint main(void) { return 0; }\nEOF\n    test_cmd $strip $ASMSTRIPFLAGS \"$@\" $TMPO\n}\n\ncheck_stripflags(){\n    log check_stripflags \"$@\"\n    test_stripflags \"$@\" && add_stripflags \"$@\"\n}\n\ncheck_headers(){\n    log check_headers \"$@\"\n    headers=$1\n    shift\n    disable_sanitized $headers\n    {\n        for hdr in $headers; do\n            print_include $hdr\n        done\n        echo \"int x;\"\n    } | test_cpp \"$@\" && enable_sanitized $headers\n}\n\ncheck_header_objcc(){\n    log check_header_objcc \"$@\"\n    rm -f -- \"$TMPO\"\n    header=$1\n    shift\n    disable_sanitized $header\n    {\n       echo \"#include <$header>\"\n       echo \"int main(void) { return 0; }\"\n    } | test_objcc && test_stat \"$TMPO\" && enable_sanitized $header\n}\n\ncheck_apple_framework(){\n    log check_apple_framework \"$@\"\n    framework=\"$1\"\n    name=\"$(tolower $framework)\"\n    header=\"${framework}/${framework}.h\"\n    disable $name\n    check_header_objcc $header &&\n        enable $name && eval ${name}_extralibs='\"-framework $framework\"'\n}\n\ncheck_func(){\n    log check_func \"$@\"\n    func=$1\n    shift\n    disable $func\n    test_ld \"cc\" \"$@\" <<EOF && enable $func\nextern int $func();\nint main(void){ $func(); }\nEOF\n}\n\ncheck_mathfunc(){\n    log check_mathfunc \"$@\"\n    func=$1\n    narg=$2\n    shift 2\n    test $narg = 2 && args=\"f, g\" || args=\"f\"\n    disable $func\n    test_ld \"cc\" \"$@\" <<EOF && enable $func\n#include <math.h>\nfloat foo(float f, float g) { return $func($args); }\nint main(void){ return (int) foo; }\nEOF\n}\n\ncheck_func_headers(){\n    log check_func_headers \"$@\"\n    headers=$1\n    funcs=$2\n    shift 2\n    {\n        for hdr in $headers; do\n            print_include $hdr\n        done\n        echo \"#include <stdint.h>\"\n        for func in $funcs; do\n            echo \"long check_$func(void) { return (long) $func; }\"\n        done\n        echo \"int main(void) { int ret = 0;\"\n        # LTO could optimize out the test functions without this\n        for func in $funcs; do\n            echo \" ret |= ((intptr_t)check_$func) & 0xFFFF;\"\n        done\n        echo \"return ret; }\"\n    } | test_ld \"cc\" \"$@\" && enable $funcs && enable_sanitized $headers\n}\n\ncheck_class_headers_cpp(){\n    log check_class_headers_cpp \"$@\"\n    headers=$1\n    classes=$2\n    shift 2\n    {\n        for hdr in $headers; do\n            echo \"#include <$hdr>\"\n        done\n        echo \"int main(void) { \"\n        i=1\n        for class in $classes; do\n            echo \"$class obj$i;\"\n            i=$(expr $i + 1)\n        done\n        echo \"return 0; }\"\n    } | test_ld \"cxx\" \"$@\" && enable $funcs && enable_sanitized $headers\n}\n\ntest_cpp_condition(){\n    log test_cpp_condition \"$@\"\n    header=$1\n    condition=$2\n    shift 2\n    test_cpp \"$@\" <<EOF\n#include <$header>\n#if !($condition)\n#error \"unsatisfied condition: $condition\"\n#endif\nEOF\n}\n\ncheck_cpp_condition(){\n    log check_cpp_condition \"$@\"\n    name=$1\n    shift 1\n    disable $name\n    test_cpp_condition \"$@\" && enable $name\n}\n\ntest_cflags_cc(){\n    log test_cflags_cc \"$@\"\n    flags=$1\n    header=$2\n    condition=$3\n    shift 3\n    set -- $($cflags_filter \"$flags\")\n    test_cc \"$@\" <<EOF\n#include <$header>\n#if !($condition)\n#error \"unsatisfied condition: $condition\"\n#endif\nEOF\n}\n\ncheck_cflags_cc(){\n    log check_cflags_cc \"$@\"\n    flags=$1\n    test_cflags_cc \"$@\" && add_cflags $flags\n}\n\ntest_cxxflags_cc(){\n    log test_cxxflags_cc \"$@\"\n    flags=$1\n    header=$2\n    condition=$3\n    shift 3\n    set -- $($cflags_filter \"$flags\")\n    test_cxx \"$@\" <<EOF\n#include <$header>\n#if !($condition)\n#error \"unsatisfied condition: $condition\"\n#endif\nEOF\n}\n\ncheck_cxxflags_cc(){\n    log check_cxxflags_cc \"$@\"\n    flags=$1\n    test_cxxflags_cc \"$@\" && add_cxxflags $flags\n}\n\ncheck_lib(){\n    log check_lib \"$@\"\n    name=\"$1\"\n    headers=\"$2\"\n    funcs=\"$3\"\n    shift 3\n    disable $name\n    check_func_headers \"$headers\" \"$funcs\" \"$@\" &&\n        enable $name && eval ${name}_extralibs=\"\\$@\"\n}\n\ncheck_lib_cpp(){\n    log check_lib_cpp \"$@\"\n    name=\"$1\"\n    headers=\"$2\"\n    classes=\"$3\"\n    shift 3\n    disable $name\n    check_class_headers_cpp \"$headers\" \"$classes\" \"$@\" &&\n        enable $name && eval ${name}_extralibs=\"\\$@\"\n}\n\ntest_pkg_config(){\n    log test_pkg_config \"$@\"\n    name=\"$1\"\n    pkg_version=\"$2\"\n    pkg=\"${2%% *}\"\n    headers=\"$3\"\n    funcs=\"$4\"\n    shift 4\n    disable $name\n    test_cmd $pkg_config --exists --print-errors \"$pkg_version\" || return\n    pkg_cflags=$($pkg_config --cflags $pkg_config_flags $pkg)\n    pkg_libs=$($pkg_config --libs $pkg_config_flags $pkg)\n    pkg_incdir=$($pkg_config --variable=includedir $pkg_config_flags $pkg)\n    check_func_headers \"$headers\" \"$funcs\" $pkg_cflags $pkg_libs \"$@\" &&\n        enable $name &&\n        set_sanitized \"${name}_cflags\"    $pkg_cflags &&\n        set_sanitized \"${name}_incdir\"    $pkg_incdir &&\n        set_sanitized \"${name}_extralibs\" $pkg_libs\n}\n\ntest_pkg_config_cpp(){\n    log test_pkg_config_cpp \"$@\"\n    name=\"$1\"\n    pkg_version=\"$2\"\n    pkg=\"${2%% *}\"\n    headers=\"$3\"\n    cond=\"$4\"\n    shift 4\n    disable $name\n    test_cmd $pkg_config --exists --print-errors \"$pkg_version\" || return\n    pkg_cflags=$($pkg_config --cflags $pkg_config_flags $pkg)\n    pkg_incdir=$($pkg_config --variable=includedir $pkg_config_flags $pkg)\n    pkg_incflags=$($pkg_config --cflags-only-I $pkg_config_flags $pkg)\n    test_cpp_condition \"$pkg_incdir/$headers\" \"$cond\" \"$@\" &&\n        enable $name &&\n        set_sanitized \"${name}_cflags\" $pkg_cflags &&\n        set_sanitized \"${name}_incdir\" $pkg_incdir &&\n        set_sanitized \"${name}_incflags\" $pkg_incflags\n}\n\ncheck_pkg_config(){\n    log check_pkg_config \"$@\"\n    name=\"$1\"\n    test_pkg_config \"$@\" &&\n        eval add_cflags \\$${name}_cflags\n}\n\ncheck_pkg_config_cpp(){\n    log check_pkg_config_cpp \"$@\"\n    name=\"$1\"\n    test_pkg_config_cpp \"$@\" &&\n        eval add_cflags \\$${name}_cflags\n}\n\ncheck_pkg_config_header_only(){\n    log check_pkg_config_cpp \"$@\"\n    name=\"$1\"\n    test_pkg_config_cpp \"$@\" &&\n        eval add_cflags \\$${name}_incflags\n}\n\ntest_exec(){\n    test_ld \"cc\" \"$@\" && { enabled cross_compile || $TMPE >> $logfile 2>&1; }\n}\n\ncheck_exec_crash(){\n    log check_exec_crash \"$@\"\n    code=$(cat)\n\n    # exit() is not async signal safe.  _Exit (C99) and _exit (POSIX)\n    # are safe but may not be available everywhere.  Thus we use\n    # raise(SIGTERM) instead.  The check is run in a subshell so we\n    # can redirect the \"Terminated\" message from the shell.  SIGBUS\n    # is not defined by standard C so it is used conditionally.\n\n    (test_exec \"$@\") >> $logfile 2>&1 <<EOF\n#include <signal.h>\nstatic void sighandler(int sig){\n    raise(SIGTERM);\n}\nint foo(void){\n    $code\n}\nint (*func_ptr)(void) = foo;\nint main(void){\n    signal(SIGILL, sighandler);\n    signal(SIGFPE, sighandler);\n    signal(SIGSEGV, sighandler);\n#ifdef SIGBUS\n    signal(SIGBUS, sighandler);\n#endif\n    return func_ptr();\n}\nEOF\n}\n\ncheck_type(){\n    log check_type \"$@\"\n    headers=$1\n    type=$2\n    shift 2\n    disable_sanitized \"$type\"\n    test_code cc \"$headers\" \"$type v\" \"$@\" && enable_sanitized \"$type\"\n}\n\ncheck_struct(){\n    log check_struct \"$@\"\n    headers=$1\n    struct=$2\n    member=$3\n    shift 3\n    disable_sanitized \"${struct}_${member}\"\n    test_code cc \"$headers\" \"const void *p = &(($struct *)0)->$member\" \"$@\" &&\n        enable_sanitized \"${struct}_${member}\"\n}\n\ncheck_builtin(){\n    log check_builtin \"$@\"\n    name=$1\n    headers=$2\n    builtin=$3\n    shift 3\n    disable \"$name\"\n    test_code ld \"$headers\" \"$builtin\" \"cc\" \"$@\" && enable \"$name\"\n}\n\ncheck_compile_assert(){\n    log check_compile_assert \"$@\"\n    name=$1\n    headers=$2\n    condition=$3\n    shift 3\n    disable \"$name\"\n    test_code cc \"$headers\" \"char c[2 * !!($condition) - 1]\" \"$@\" && enable \"$name\"\n}\n\ncheck_cc(){\n    log check_cc \"$@\"\n    name=$1\n    shift\n    disable \"$name\"\n    test_code cc \"$@\" && enable \"$name\"\n}\n\nrequire(){\n    log require \"$@\"\n    name_version=\"$1\"\n    name=\"${1%% *}\"\n    shift\n    check_lib $name \"$@\" || die \"ERROR: $name_version not found\"\n}\n\nrequire_cc(){\n    log require_cc \"$@\"\n    name=\"$1\"\n    check_cc \"$@\" || die \"ERROR: $name failed\"\n}\n\nrequire_cpp(){\n    log require_cpp \"$@\"\n    name_version=\"$1\"\n    name=\"${1%% *}\"\n    shift\n    check_lib_cpp \"$name\" \"$@\" || die \"ERROR: $name_version not found\"\n}\n\nrequire_headers(){\n    log require_headers \"$@\"\n    headers=\"$1\"\n    check_headers \"$@\" || die \"ERROR: $headers not found\"\n}\n\nrequire_cpp_condition(){\n    log require_cpp_condition \"$@\"\n    condition=\"$3\"\n    check_cpp_condition \"$@\" || die \"ERROR: $condition not satisfied\"\n}\n\nrequire_pkg_config(){\n    log require_pkg_config \"$@\"\n    pkg_version=\"$2\"\n    check_pkg_config \"$@\" || die \"ERROR: $pkg_version not found using pkg-config$pkg_config_fail_message\"\n}\n\nrequire_pkg_config_cpp(){\n    log require_pkg_config_cpp \"$@\"\n    pkg_version=\"$2\"\n    check_pkg_config_cpp \"$@\" || die \"ERROR: $pkg_version not found using pkg-config$pkg_config_fail_message\"\n}\n\ntest_host_cc(){\n    log test_host_cc \"$@\"\n    cat > $TMPC\n    log_file $TMPC\n    test_cmd $host_cc $host_cflags \"$@\" $HOSTCC_C $(hostcc_o $TMPO) $TMPC\n}\n\ntest_host_cpp(){\n    log test_host_cpp \"$@\"\n    cat > $TMPC\n    log_file $TMPC\n    test_cmd $host_cc $host_cppflags $host_cflags \"$@\" $(hostcc_e $TMPO) $TMPC\n}\n\ncheck_host_cppflags(){\n    log check_host_cppflags \"$@\"\n    test_host_cpp \"$@\" <<EOF && append host_cppflags \"$@\"\n#include <stdlib.h>\nEOF\n}\n\ncheck_host_cflags(){\n    log check_host_cflags \"$@\"\n    set -- $($host_cflags_filter \"$@\")\n    test_host_cc \"$@\" <<EOF && append host_cflags \"$@\"\nint x;\nEOF\n}\n\ntest_host_cflags_cc(){\n    log test_host_cflags_cc \"$@\"\n    flags=$1\n    header=$2\n    condition=$3\n    shift 3\n    set -- $($host_cflags_filter \"$flags\")\n    test_host_cc \"$@\" <<EOF\n#include <$header>\n#if !($condition)\n#error \"unsatisfied condition: $condition\"\n#endif\nEOF\n}\n\ncheck_host_cflags_cc(){\n    log check_host_cflags_cc \"$@\"\n    flags=$1\n    test_host_cflags_cc \"$@\" && add_host_cflags $flags\n}\n\ntest_host_cpp_condition(){\n    log test_host_cpp_condition \"$@\"\n    header=$1\n    condition=$2\n    shift 2\n    test_host_cpp \"$@\" <<EOF\n#include <$header>\n#if !($condition)\n#error \"unsatisfied condition: $condition\"\n#endif\nEOF\n}\n\ncheck_host_cpp_condition(){\n    log check_host_cpp_condition \"$@\"\n    name=$1\n    shift 1\n    disable $name\n    test_host_cpp_condition \"$@\" && enable $name\n}\n\ncp_if_changed(){\n    cmp -s \"$1\" \"$2\" && { test \"$quiet\" != \"yes\" && echo \"$2 is unchanged\"; } && return\n    mkdir -p \"$(dirname $2)\"\n    cp -f \"$1\" \"$2\"\n}\n\n# CONFIG_LIST contains configurable options, while HAVE_LIST is for\n# system-dependent things.\n\nAVCODEC_COMPONENTS=\"\n    bsfs\n    decoders\n    encoders\n    hwaccels\n    parsers\n\"\n\nAVDEVICE_COMPONENTS=\"\n    indevs\n    outdevs\n\"\n\nAVFILTER_COMPONENTS=\"\n    filters\n\"\n\nAVFORMAT_COMPONENTS=\"\n    demuxers\n    muxers\n    protocols\n\"\n\nCOMPONENT_LIST=\"\n    $AVCODEC_COMPONENTS\n    $AVDEVICE_COMPONENTS\n    $AVFILTER_COMPONENTS\n    $AVFORMAT_COMPONENTS\n\"\n\nEXAMPLE_LIST=\"\n    avio_http_serve_files_example\n    avio_list_dir_example\n    avio_read_callback_example\n    decode_audio_example\n    decode_filter_audio_example\n    decode_filter_video_example\n    decode_video_example\n    demux_decode_example\n    encode_audio_example\n    encode_video_example\n    extract_mvs_example\n    filter_audio_example\n    hw_decode_example\n    mux_example\n    qsv_decode_example\n    remux_example\n    resample_audio_example\n    scale_video_example\n    show_metadata_example\n    transcode_aac_example\n    transcode_example\n    vaapi_encode_example\n    vaapi_transcode_example\n    qsv_transcode_example\n\"\n\nEXTERNAL_AUTODETECT_LIBRARY_LIST=\"\n    alsa\n    appkit\n    avfoundation\n    bzlib\n    coreimage\n    iconv\n    libxcb\n    libxcb_shm\n    libxcb_shape\n    libxcb_xfixes\n    lzma\n    mediafoundation\n    metal\n    schannel\n    sdl2\n    securetransport\n    sndio\n    xlib\n    zlib\n\"\n\nEXTERNAL_LIBRARY_GPL_LIST=\"\n    avisynth\n    frei0r\n    libcdio\n    libdavs2\n    libdvdnav\n    libdvdread\n    librubberband\n    libvidstab\n    libx264\n    libx265\n    libxavs\n    libxavs2\n    libxvid\n\"\n\nEXTERNAL_LIBRARY_NONFREE_LIST=\"\n    decklink\n    libfdk_aac\n    libtls\n\"\n\nEXTERNAL_LIBRARY_VERSION3_LIST=\"\n    gmp\n    libaribb24\n    liblensfun\n    libopencore_amrnb\n    libopencore_amrwb\n    libvo_amrwbenc\n    mbedtls\n    rkmpp\n\"\n\nEXTERNAL_LIBRARY_GPLV3_LIST=\"\n    libsmbclient\n\"\n\nEXTERNAL_LIBRARY_LIST=\"\n    $EXTERNAL_LIBRARY_GPL_LIST\n    $EXTERNAL_LIBRARY_NONFREE_LIST\n    $EXTERNAL_LIBRARY_VERSION3_LIST\n    $EXTERNAL_LIBRARY_GPLV3_LIST\n    chromaprint\n    gcrypt\n    gnutls\n    jni\n    ladspa\n    lcms2\n    libaom\n    libaribcaption\n    libass\n    libbluray\n    libbs2b\n    libcaca\n    libcelt\n    libcodec2\n    libdav1d\n    libdc1394\n    libflite\n    libfontconfig\n    libfreetype\n    libfribidi\n    libharfbuzz\n    libglslang\n    libgme\n    libgsm\n    libiec61883\n    libilbc\n    libjack\n    libjxl\n    libklvanc\n    libkvazaar\n    liblc3\n    liblcevc_dec\n    libmodplug\n    libmp3lame\n    libmysofa\n    libopencv\n    libopenh264\n    libopenjpeg\n    libopenmpt\n    libopenvino\n    libopus\n    libplacebo\n    libpulse\n    libqrencode\n    libquirc\n    librabbitmq\n    librav1e\n    librist\n    librsvg\n    librtmp\n    libshaderc\n    libshine\n    libsmbclient\n    libsnappy\n    libsoxr\n    libspeex\n    libsrt\n    libssh\n    libsvtav1\n    libtensorflow\n    libtesseract\n    libtheora\n    libtorch\n    libtwolame\n    libuavs3d\n    libv4l2\n    libvmaf\n    libvorbis\n    libvpx\n    libvvenc\n    libwebp\n    libxevd\n    libxeve\n    libxml2\n    libzimg\n    libzmq\n    libzvbi\n    lv2\n    mediacodec\n    openal\n    opengl\n    openssl\n    pocketsphinx\n    vapoursynth\n    vulkan_static\n\"\n\nHWACCEL_AUTODETECT_LIBRARY_LIST=\"\n    amf\n    audiotoolbox\n    cuda\n    cuda_llvm\n    cuvid\n    d3d11va\n    d3d12va\n    dxva2\n    ffnvcodec\n    libdrm\n    nvdec\n    nvenc\n    vaapi\n    vdpau\n    videotoolbox\n    vulkan\n    v4l2_m2m\n\"\n\n# catchall list of things that require external libs to link\nEXTRALIBS_LIST=\"\n    cpu_init\n    cws2fws\n\"\n\nHWACCEL_LIBRARY_NONFREE_LIST=\"\n    cuda_nvcc\n    cuda_sdk\n    libnpp\n\"\n\nHWACCEL_LIBRARY_LIST=\"\n    $HWACCEL_LIBRARY_NONFREE_LIST\n    libmfx\n    libvpl\n    mmal\n    omx\n    opencl\n\"\n\nDOCUMENT_LIST=\"\n    doc\n    htmlpages\n    manpages\n    podpages\n    txtpages\n\"\n\nFEATURE_LIST=\"\n    ftrapv\n    gray\n    hardcoded_tables\n    omx_rpi\n    runtime_cpudetect\n    safe_bitstream_reader\n    shared\n    small\n    static\n    swscale_alpha\n\"\n\n# this list should be kept in linking order\nLIBRARY_LIST=\"\n    avdevice\n    avfilter\n    swscale\n    postproc\n    avformat\n    avcodec\n    swresample\n    avutil\n\"\n\nLICENSE_LIST=\"\n    gpl\n    nonfree\n    version3\n\"\n\nPROGRAM_LIST=\"\n    ffplay\n    ffprobe\n    ffmpeg\n\"\n\nSUBSYSTEM_LIST=\"\n    dwt\n    error_resilience\n    faan\n    fast_unaligned\n    iamf\n    lsp\n    pixelutils\n    network\n\"\n\n# COMPONENT_LIST needs to come last to ensure correct dependency checking\nCONFIG_LIST=\"\n    $DOCUMENT_LIST\n    $EXAMPLE_LIST\n    $EXTERNAL_LIBRARY_LIST\n    $EXTERNAL_AUTODETECT_LIBRARY_LIST\n    $HWACCEL_LIBRARY_LIST\n    $HWACCEL_AUTODETECT_LIBRARY_LIST\n    $FEATURE_LIST\n    $LICENSE_LIST\n    $LIBRARY_LIST\n    $PROGRAM_LIST\n    $SUBSYSTEM_LIST\n    autodetect\n    fontconfig\n    large_tests\n    linux_perf\n    macos_kperf\n    memory_poisoning\n    neon_clobber_test\n    ossfuzz\n    pic\n    ptx_compression\n    thumb\n    valgrind_backtrace\n    xmm_clobber_test\n    $COMPONENT_LIST\n\"\n\nTHREADS_LIST=\"\n    pthreads\n    os2threads\n    w32threads\n\"\n\nATOMICS_LIST=\"\n    atomics_win32\n\"\n\nAUTODETECT_LIBS=\"\n    $EXTERNAL_AUTODETECT_LIBRARY_LIST\n    $HWACCEL_AUTODETECT_LIBRARY_LIST\n    $THREADS_LIST\n\"\n\nARCH_LIST=\"\n    aarch64\n    arm\n    ia64\n    loongarch\n    loongarch32\n    loongarch64\n    m68k\n    mips\n    mips64\n    parisc\n    ppc\n    ppc64\n    riscv\n    s390\n    sparc\n    sparc64\n    tilegx\n    tilepro\n    wasm\n    x86\n    x86_32\n    x86_64\n\"\n\nARCH_EXT_LIST_ARM=\"\n    armv5te\n    armv6\n    armv6t2\n    armv8\n    dotprod\n    i8mm\n    neon\n    vfp\n    vfpv3\n    setend\n    sve\n    sve2\n\"\n\nARCH_EXT_LIST_MIPS=\"\n    mipsfpu\n    mips32r2\n    mips32r5\n    mips64r2\n    mips32r6\n    mips64r6\n    mipsdsp\n    mipsdspr2\n    msa\n\"\n\nARCH_EXT_LIST_LOONGSON=\"\n    loongson2\n    loongson3\n    mmi\n    lsx\n    lasx\n\"\n\nARCH_EXT_LIST_WASM=\"\n    simd128\n\"\n\nARCH_EXT_LIST_X86_SIMD=\"\n    aesni\n    amd3dnow\n    amd3dnowext\n    avx\n    avx2\n    avx512\n    avx512icl\n    fma3\n    fma4\n    mmx\n    mmxext\n    sse\n    sse2\n    sse3\n    sse4\n    sse42\n    ssse3\n    xop\n\"\n\nARCH_EXT_LIST_PPC=\"\n    altivec\n    dcbzl\n    ldbrx\n    power8\n    ppc4xx\n    vsx\n\"\n\nARCH_EXT_LIST_RISCV=\"\n    rv\n    rvv\n    rv_zicbop\n    rv_zvbb\n\"\n\nARCH_EXT_LIST_X86=\"\n    $ARCH_EXT_LIST_X86_SIMD\n    i686\n\"\n\nARCH_EXT_LIST=\"\n    $ARCH_EXT_LIST_ARM\n    $ARCH_EXT_LIST_PPC\n    $ARCH_EXT_LIST_RISCV\n    $ARCH_EXT_LIST_WASM\n    $ARCH_EXT_LIST_X86\n    $ARCH_EXT_LIST_MIPS\n    $ARCH_EXT_LIST_LOONGSON\n\"\n\nARCH_FEATURES=\"\n    aligned_stack\n    fast_64bit\n    fast_clz\n    fast_cmov\n    fast_float16\n    simd_align_16\n    simd_align_32\n    simd_align_64\n\"\n\nBUILTIN_LIST=\"\n    MemoryBarrier\n    mm_empty\n    rdtsc\n    sem_timedwait\n\"\nHAVE_LIST_CMDLINE=\"\n    inline_asm\n    symver\n    x86asm\n\"\n\nHAVE_LIST_PUB=\"\n    bigendian\n    fast_unaligned\n\"\n\nHEADERS_LIST=\"\n    arpa_inet_h\n    asm_hwprobe_h\n    asm_types_h\n    cdio_paranoia_h\n    cdio_paranoia_paranoia_h\n    cuda_h\n    dispatch_dispatch_h\n    dev_bktr_ioctl_bt848_h\n    dev_bktr_ioctl_meteor_h\n    dev_ic_bt8xx_h\n    dev_video_bktr_ioctl_bt848_h\n    dev_video_meteor_ioctl_meteor_h\n    direct_h\n    dirent_h\n    dxgidebug_h\n    dxva_h\n    ES2_gl_h\n    gsm_h\n    io_h\n    linux_dma_buf_h\n    linux_perf_event_h\n    machine_ioctl_bt848_h\n    machine_ioctl_meteor_h\n    malloc_h\n    opencv2_core_core_c_h\n    OpenGL_gl3_h\n    poll_h\n    pthread_np_h\n    sys_hwprobe_h\n    sys_param_h\n    sys_resource_h\n    sys_select_h\n    sys_soundcard_h\n    sys_time_h\n    sys_un_h\n    sys_videoio_h\n    termios_h\n    udplite_h\n    unistd_h\n    valgrind_valgrind_h\n    windows_h\n    winsock2_h\n\"\n\nINTRINSICS_LIST=\"\n    intrinsics_neon\n    intrinsics_sse2\n\"\n\nMATH_FUNCS=\"\n    atanf\n    atan2f\n    cbrt\n    cbrtf\n    copysign\n    cosf\n    erf\n    exp2\n    exp2f\n    expf\n    hypot\n    isfinite\n    isinf\n    isnan\n    ldexpf\n    llrint\n    llrintf\n    log2\n    log2f\n    log10f\n    lrint\n    lrintf\n    powf\n    rint\n    round\n    roundf\n    sinf\n    trunc\n    truncf\n\"\n\nSYSTEM_FEATURES=\"\n    dos_paths\n    libc_msvcrt\n    MMAL_PARAMETER_VIDEO_MAX_NUM_CALLBACKS\n    section_data_rel_ro\n    threads\n    uwp\n    winrt\n\"\n\nSYSTEM_FUNCS=\"\n    access\n    aligned_malloc\n    arc4random_buf\n    clock_gettime\n    closesocket\n    CommandLineToArgvW\n    elf_aux_info\n    fcntl\n    getaddrinfo\n    getauxval\n    getenv\n    gethrtime\n    getopt\n    GetModuleHandle\n    GetProcessAffinityMask\n    GetProcessMemoryInfo\n    GetProcessTimes\n    getrusage\n    GetStdHandle\n    GetSystemTimeAsFileTime\n    gettimeofday\n    glob\n    glXGetProcAddress\n    gmtime_r\n    inet_aton\n    isatty\n    kbhit\n    localtime_r\n    lstat\n    lzo1x_999_compress\n    mach_absolute_time\n    MapViewOfFile\n    memalign\n    mkstemp\n    mmap\n    mprotect\n    nanosleep\n    PeekNamedPipe\n    posix_memalign\n    prctl\n    pthread_cancel\n    pthread_set_name_np\n    pthread_setname_np\n    sched_getaffinity\n    SecItemImport\n    SetConsoleTextAttribute\n    SetConsoleCtrlHandler\n    SetDllDirectory\n    setmode\n    setrlimit\n    Sleep\n    strerror_r\n    sysconf\n    sysctl\n    sysctlbyname\n    tempnam\n    usleep\n    UTGetOSTypeFromString\n    VirtualAlloc\n    wglGetProcAddress\n\"\n\nSYSTEM_LIBRARIES=\"\n    bcrypt\n    vaapi_drm\n    vaapi_x11\n    vaapi_win32\n    vdpau_x11\n\"\n\nTOOLCHAIN_FEATURES=\"\n    as_arch_directive\n    as_archext_dotprod_directive\n    as_archext_i8mm_directive\n    as_archext_sve_directive\n    as_archext_sve2_directive\n    as_dn_directive\n    as_fpu_directive\n    as_func\n    as_object_arch\n    asm_mod_q\n    blocks_extension\n    ebp_available\n    ebx_available\n    gnu_as\n    gnu_windres\n    ibm_asm\n    inline_asm_direct_symbol_refs\n    inline_asm_labels\n    inline_asm_nonlocal_labels\n    pragma_deprecated\n    rsync_contimeout\n    symver_asm_label\n    symver_gnu_asm\n    vfp_args\n    xform_asm\n    xmm_clobbers\n\"\n\nTYPES_LIST=\"\n    DPI_AWARENESS_CONTEXT\n    IDXGIOutput5\n    kCMVideoCodecType_HEVC\n    kCMVideoCodecType_HEVCWithAlpha\n    kCMVideoCodecType_VP9\n    kCMVideoCodecType_AV1\n    kCVPixelFormatType_420YpCbCr10BiPlanarVideoRange\n    kCVPixelFormatType_422YpCbCr8BiPlanarVideoRange\n    kCVPixelFormatType_422YpCbCr10BiPlanarVideoRange\n    kCVPixelFormatType_422YpCbCr16BiPlanarVideoRange\n    kCVPixelFormatType_444YpCbCr8BiPlanarVideoRange\n    kCVPixelFormatType_444YpCbCr10BiPlanarVideoRange\n    kCVPixelFormatType_444YpCbCr16BiPlanarVideoRange\n    kCVImageBufferTransferFunction_SMPTE_ST_2084_PQ\n    kCVImageBufferTransferFunction_ITU_R_2100_HLG\n    kCVImageBufferTransferFunction_Linear\n    kCVImageBufferYCbCrMatrix_ITU_R_2020\n    kCVImageBufferColorPrimaries_ITU_R_2020\n    kCVImageBufferTransferFunction_ITU_R_2020\n    kCVImageBufferTransferFunction_SMPTE_ST_428_1\n    socklen_t\n    struct_addrinfo\n    struct_group_source_req\n    struct_ip_mreq_source\n    struct_ipv6_mreq\n    struct_msghdr_msg_flags\n    struct_pollfd\n    struct_rusage_ru_maxrss\n    struct_sctp_event_subscribe\n    struct_sockaddr_in6\n    struct_sockaddr_sa_len\n    struct_sockaddr_storage\n    struct_stat_st_mtim_tv_nsec\n    struct_v4l2_frmivalenum_discrete\n    struct_mfxConfigInterface\n\"\n\nHAVE_LIST=\"\n    $ARCH_EXT_LIST\n    $(add_suffix _external $ARCH_EXT_LIST)\n    $(add_suffix _inline   $ARCH_EXT_LIST)\n    $ARCH_FEATURES\n    $BUILTIN_LIST\n    $HAVE_LIST_CMDLINE\n    $HAVE_LIST_PUB\n    $HEADERS_LIST\n    $INTRINSICS_LIST\n    $MATH_FUNCS\n    $SYSTEM_FEATURES\n    $SYSTEM_FUNCS\n    $SYSTEM_LIBRARIES\n    $THREADS_LIST\n    $TOOLCHAIN_FEATURES\n    $TYPES_LIST\n    gzip\n    libdrm_getfb2\n    makeinfo\n    makeinfo_html\n    opencl_d3d11\n    opencl_drm_arm\n    opencl_drm_beignet\n    opencl_dxva2\n    opencl_vaapi_beignet\n    opencl_vaapi_intel_media\n    opencl_videotoolbox\n    perl\n    pod2man\n    posix_ioctl\n    texi2html\n    xmllint\n    zlib_gzip\n    openvino2\n\"\n\n# options emitted with CONFIG_ prefix but not available on the command line\nCONFIG_EXTRA=\"\n    aandcttables\n    ac3dsp\n    adts_header\n    atsc_a53\n    audio_frame_queue\n    audiodsp\n    blockdsp\n    bswapdsp\n    cabac\n    cbs\n    cbs_av1\n    cbs_h264\n    cbs_h265\n    cbs_h266\n    cbs_jpeg\n    cbs_mpeg2\n    cbs_vp8\n    cbs_vp9\n    d3d12va_encode\n    deflate_wrapper\n    dirac_parse\n    dnn\n    dovi_rpudec\n    dovi_rpuenc\n    dvprofile\n    evcparse\n    exif\n    faandct\n    faanidct\n    fdctdsp\n    fmtconvert\n    frame_thread_encoder\n    g722dsp\n    golomb\n    gplv3\n    h263dsp\n    h264chroma\n    h264dsp\n    h264parse\n    h264pred\n    h264qpel\n    h264_sei\n    hevcparse\n    hevc_sei\n    hpeldsp\n    huffman\n    huffyuvdsp\n    huffyuvencdsp\n    iamfdec\n    iamfenc\n    idctdsp\n    iirfilter\n    inflate_wrapper\n    intrax8\n    iso_media\n    iso_writer\n    ividsp\n    jpegtables\n    lgplv3\n    libx262\n    libx264_hdr10\n    llauddsp\n    llviddsp\n    llvidencdsp\n    lpc\n    lzf\n    me_cmp\n    mpeg_er\n    mpegaudio\n    mpegaudiodsp\n    mpegaudioheader\n    mpeg4audio\n    mpegvideo\n    mpegvideodec\n    mpegvideoenc\n    msmpeg4dec\n    msmpeg4enc\n    mss34dsp\n    pixblockdsp\n    qpeldsp\n    qsv\n    qsvdec\n    qsvenc\n    qsvvpp\n    rangecoder\n    riffdec\n    riffenc\n    rtpdec\n    rtpenc_chain\n    rv34dsp\n    scene_sad\n    sinewin\n    snappy\n    srtp\n    startcode\n    texturedsp\n    texturedspenc\n    tpeldsp\n    vaapi_1\n    vaapi_encode\n    vc1dsp\n    videodsp\n    vp3dsp\n    vp56dsp\n    vp8dsp\n    vulkan_encode\n    wma_freqs\n    wmv2dsp\n\"\n\nCMDLINE_SELECT=\"\n    $ARCH_EXT_LIST\n    $CONFIG_LIST\n    $HAVE_LIST_CMDLINE\n    $THREADS_LIST\n    asm\n    cross_compile\n    debug\n    extra_warnings\n    logging\n    optimizations\n    rpath\n    stripping\n    version_tracking\n\"\n\nPATHS_LIST=\"\n    bindir\n    datadir\n    docdir\n    incdir\n    libdir\n    mandir\n    pkgconfigdir\n    prefix\n    shlibdir\n    install_name_dir\n\"\n\nCMDLINE_SET=\"\n    $PATHS_LIST\n    ar\n    arch\n    as\n    assert_level\n    build_suffix\n    cc\n    objcc\n    cpu\n    cross_prefix\n    custom_allocator\n    cxx\n    dep_cc\n    doxygen\n    env\n    extra_version\n    gas\n    host_cc\n    host_cflags\n    host_extralibs\n    host_ld\n    host_ldflags\n    host_os\n    ignore_tests\n    install\n    ld\n    ln_s\n    logfile\n    malloc_prefix\n    metalcc\n    metallib\n    nm\n    optflags\n    nvcc\n    nvccflags\n    pkg_config\n    pkg_config_flags\n    progs_suffix\n    random_seed\n    ranlib\n    samples\n    stdc\n    stdcxx\n    strip\n    sws_max_filter_size\n    sysinclude\n    sysroot\n    target_exec\n    target_os\n    target_path\n    target_samples\n    tempprefix\n    toolchain\n    valgrind\n    windres\n    x86asmexe\n\"\n\nCMDLINE_APPEND=\"\n    extra_cflags\n    extra_cxxflags\n    extra_objcflags\n    host_cppflags\n\"\n\n# code dependency declarations\n\n# architecture extensions\n\narmv5te_deps=\"arm\"\narmv6_deps=\"arm\"\narmv6t2_deps=\"arm\"\narmv8_deps=\"aarch64\"\nneon_deps_any=\"aarch64 arm\"\nintrinsics_neon_deps=\"neon\"\nintrinsics_sse2_deps=\"sse2\"\nvfp_deps=\"arm\"\nvfpv3_deps=\"vfp\"\nsetend_deps=\"arm\"\ndotprod_deps=\"aarch64 neon\"\ni8mm_deps=\"aarch64 neon\"\nsve_deps=\"aarch64 neon\"\nsve2_deps=\"aarch64 neon sve\"\n\nmap 'eval ${v}_inline_deps=inline_asm' $ARCH_EXT_LIST_ARM\n\naltivec_deps=\"ppc\"\ndcbzl_deps=\"ppc\"\nldbrx_deps=\"ppc\"\nppc4xx_deps=\"ppc\"\nvsx_deps=\"altivec\"\npower8_deps=\"vsx\"\n\nrv_deps=\"riscv\"\nrvv_deps=\"rv\"\nrv_zicbop=\"riscv\"\nrv_zvbb_deps=\"rvv\"\n\nloongson2_deps=\"mips\"\nloongson3_deps=\"mips\"\nmmi_deps_any=\"loongson2 loongson3\"\nlsx_deps=\"loongarch\"\nlasx_deps=\"lsx\"\n\nmips32r2_deps=\"mips\"\nmips32r5_deps=\"mips\"\nmips32r6_deps=\"mips\"\nmips64r2_deps=\"mips\"\nmips64r6_deps=\"mips\"\nmipsfpu_deps=\"mips\"\nmipsdsp_deps=\"mips\"\nmipsdspr2_deps=\"mips\"\nmsa_deps=\"mipsfpu\"\n\nsimd128_deps=\"wasm\"\n\nx86_64_select=\"i686\"\nx86_64_suggest=\"fast_cmov\"\n\namd3dnow_deps=\"mmx\"\namd3dnowext_deps=\"amd3dnow\"\ni686_deps=\"x86\"\nmmx_deps=\"x86\"\nmmxext_deps=\"mmx\"\nsse_deps=\"mmxext\"\nsse2_deps=\"sse\"\nsse3_deps=\"sse2\"\nssse3_deps=\"sse3\"\nsse4_deps=\"ssse3\"\nsse42_deps=\"sse4\"\naesni_deps=\"sse42\"\navx_deps=\"sse42\"\nxop_deps=\"avx\"\nfma3_deps=\"avx\"\nfma4_deps=\"avx\"\navx2_deps=\"avx\"\navx512_deps=\"avx2\"\navx512icl_deps=\"avx512\"\n\nmmx_external_deps=\"x86asm\"\nmmx_inline_deps=\"inline_asm x86\"\nmmx_suggest=\"mmx_external mmx_inline\"\n\nfor ext in $(filter_out mmx $ARCH_EXT_LIST_X86_SIMD); do\n    eval dep=\\$${ext}_deps\n    eval ${ext}_external_deps='\"${dep}_external\"'\n    eval ${ext}_inline_deps='\"${dep}_inline\"'\n    eval ${ext}_suggest='\"${ext}_external ${ext}_inline\"'\ndone\n\naligned_stack_if_any=\"aarch64 ppc x86\"\nfast_64bit_if_any=\"aarch64 ia64 mips64 parisc64 ppc64 riscv64 sparc64 x86_64\"\nfast_clz_if_any=\"aarch64 mips ppc x86\"\nfast_unaligned_if_any=\"aarch64 ppc x86\"\nsimd_align_16_if_any=\"altivec neon sse\"\nsimd_align_32_if_any=\"avx\"\nsimd_align_64_if_any=\"avx512\"\n\n# system capabilities\nlinux_perf_deps=\"linux_perf_event_h\"\nsymver_if_any=\"symver_asm_label symver_gnu_asm\"\nvalgrind_backtrace_conflict=\"optimizations\"\nvalgrind_backtrace_deps=\"valgrind_valgrind_h\"\n\n# threading support\natomics_win32_if=\"MemoryBarrier\"\natomics_native_if_any=\"$ATOMICS_LIST\"\nw32threads_deps=\"atomics_native\"\nthreads_if_any=\"$THREADS_LIST\"\n\n# subsystems\ncbs_av1_select=\"cbs\"\ncbs_h264_select=\"cbs\"\ncbs_h265_select=\"cbs\"\ncbs_h266_select=\"cbs\"\ncbs_jpeg_select=\"cbs\"\ncbs_mpeg2_select=\"cbs\"\ncbs_vp8_select=\"cbs\"\ncbs_vp9_select=\"cbs\"\ndeflate_wrapper_deps=\"zlib\"\ndirac_parse_select=\"golomb\"\ndovi_rpudec_select=\"golomb\"\ndovi_rpuenc_select=\"golomb\"\ndnn_deps=\"avformat swscale\"\ndnn_deps_any=\"libtensorflow libopenvino libtorch\"\nerror_resilience_select=\"me_cmp\"\nevcparse_select=\"golomb\"\nfaandct_deps=\"faan\"\nfaandct_select=\"fdctdsp\"\nfaanidct_deps=\"faan\"\nfaanidct_select=\"idctdsp\"\nh264dsp_select=\"startcode\"\nh264parse_select=\"golomb\"\nh264_sei_select=\"atsc_a53 golomb\"\nhevcparse_select=\"golomb\"\nhevc_sei_select=\"atsc_a53 golomb\"\niso_writer_select=\"golomb\"\nframe_thread_encoder_deps=\"encoders threads\"\niamfdec_deps=\"iamf\"\niamfdec_select=\"iso_media mpeg4audio\"\niamfenc_deps=\"iamf\"\ninflate_wrapper_deps=\"zlib\"\nintrax8_select=\"blockdsp wmv2dsp\"\niso_media_select=\"mpeg4audio\"\nme_cmp_select=\"idctdsp\"\nmpeg_er_select=\"error_resilience\"\nmpegaudio_select=\"mpegaudiodsp mpegaudioheader\"\nmpegvideo_select=\"blockdsp hpeldsp idctdsp videodsp\"\nmpegvideodec_select=\"h264chroma mpegvideo mpeg_er\"\nmpegvideoenc_select=\"aandcttables fdctdsp me_cmp mpegvideo pixblockdsp\"\nmsmpeg4dec_select=\"h263_decoder\"\nmsmpeg4enc_select=\"h263_encoder\"\nvc1dsp_select=\"h264chroma qpeldsp startcode\"\nwmv2dsp_select=\"qpeldsp\"\n\n# decoders / encoders\naac_decoder_select=\"adts_header mpeg4audio sinewin\"\naac_fixed_decoder_select=\"adts_header mpeg4audio\"\naac_encoder_select=\"audio_frame_queue iirfilter lpc sinewin\"\naac_latm_decoder_select=\"aac_decoder aac_latm_parser\"\nac3_decoder_select=\"ac3_parser ac3dsp bswapdsp fmtconvert\"\nac3_fixed_decoder_select=\"ac3_parser ac3dsp bswapdsp\"\nac3_encoder_select=\"ac3dsp audiodsp me_cmp\"\nac3_fixed_encoder_select=\"ac3dsp audiodsp me_cmp\"\nacelp_kelvin_decoder_select=\"audiodsp\"\nadpcm_g722_decoder_select=\"g722dsp\"\nadpcm_g722_encoder_select=\"g722dsp\"\nagm_decoder_select=\"idctdsp\"\naic_decoder_select=\"golomb idctdsp\"\nalac_encoder_select=\"lpc\"\nals_decoder_select=\"bswapdsp mpeg4audio\"\namrnb_decoder_select=\"lsp\"\namrwb_decoder_select=\"lsp\"\namv_decoder_select=\"sp5x_decoder exif\"\namv_encoder_select=\"jpegtables mpegvideoenc\"\nape_decoder_select=\"bswapdsp llauddsp\"\napng_decoder_select=\"inflate_wrapper\"\napng_encoder_select=\"deflate_wrapper llvidencdsp\"\naptx_encoder_select=\"audio_frame_queue\"\naptx_hd_encoder_select=\"audio_frame_queue\"\nasv1_decoder_select=\"blockdsp bswapdsp idctdsp\"\nasv1_encoder_select=\"aandcttables bswapdsp fdctdsp pixblockdsp\"\nasv2_decoder_select=\"blockdsp bswapdsp idctdsp\"\nasv2_encoder_select=\"aandcttables bswapdsp fdctdsp pixblockdsp\"\natrac1_decoder_select=\"sinewin\"\natrac3p_decoder_select=\"sinewin\"\natrac3pal_decoder_select=\"sinewin\"\nav1_decoder_select=\"atsc_a53 cbs_av1 dovi_rpudec\"\nbink_decoder_select=\"blockdsp hpeldsp\"\nbinkaudio_dct_decoder_select=\"wma_freqs\"\nbinkaudio_rdft_decoder_select=\"wma_freqs\"\ncavs_decoder_select=\"blockdsp golomb h264chroma idctdsp qpeldsp videodsp\"\nclearvideo_decoder_select=\"idctdsp\"\ncllc_decoder_select=\"bswapdsp\"\ncomfortnoise_encoder_select=\"lpc\"\ncook_decoder_select=\"audiodsp sinewin\"\ncri_decoder_select=\"mjpeg_decoder\"\ncscd_decoder_suggest=\"zlib\"\ndds_decoder_select=\"texturedsp\"\ndirac_decoder_select=\"dirac_parse dwt golomb mpegvideoenc qpeldsp videodsp\"\ndnxhd_decoder_select=\"blockdsp idctdsp\"\ndnxhd_encoder_select=\"blockdsp fdctdsp idctdsp mpegvideoenc pixblockdsp videodsp\"\ndvvideo_decoder_select=\"dvprofile idctdsp\"\ndvvideo_encoder_select=\"dvprofile fdctdsp me_cmp pixblockdsp\"\ndxa_decoder_deps=\"zlib\"\ndxv_decoder_select=\"lzf texturedsp\"\ndxv_encoder_select=\"texturedspenc\"\neac3_decoder_select=\"ac3_decoder\"\neac3_encoder_select=\"ac3_encoder\"\neamad_decoder_select=\"aandcttables blockdsp bswapdsp\"\neatgq_decoder_select=\"aandcttables\"\neatqi_decoder_select=\"aandcttables blockdsp bswapdsp\"\nexr_decoder_deps=\"zlib\"\nexr_encoder_deps=\"zlib\"\nffv1_decoder_select=\"rangecoder\"\nffv1_encoder_select=\"rangecoder\"\nffv1_vulkan_encoder_select=\"vulkan spirv_compiler\"\nffvhuff_decoder_select=\"huffyuv_decoder\"\nffvhuff_encoder_select=\"huffyuv_encoder\"\nfic_decoder_select=\"golomb\"\nflac_encoder_select=\"bswapdsp lpc\"\nflashsv2_decoder_select=\"inflate_wrapper\"\nflashsv2_encoder_select=\"deflate_wrapper\"\nflashsv_decoder_select=\"inflate_wrapper\"\nflashsv_encoder_deps=\"zlib\"\nflv_decoder_select=\"h263_decoder\"\nflv_encoder_select=\"h263_encoder\"\nfourxm_decoder_select=\"blockdsp bswapdsp\"\nfraps_decoder_select=\"bswapdsp huffman\"\nftr_decoder_select=\"adts_header\"\ng2m_decoder_deps=\"zlib\"\ng2m_decoder_select=\"blockdsp idctdsp jpegtables\"\ng729_decoder_select=\"audiodsp\"\nh261_decoder_select=\"mpegvideodec\"\nh261_encoder_select=\"mpegvideoenc\"\nh263_decoder_select=\"h263_parser h263dsp mpegvideodec qpeldsp\"\nh263_encoder_select=\"h263dsp mpegvideoenc\"\nh263i_decoder_select=\"h263_decoder\"\nh263p_decoder_select=\"h263_decoder\"\nh263p_encoder_select=\"h263_encoder\"\nh264_decoder_select=\"cabac golomb h264chroma h264dsp h264parse h264pred h264qpel h264_sei videodsp\"\nh264_decoder_suggest=\"error_resilience\"\nhap_decoder_select=\"snappy texturedsp\"\nhap_encoder_deps=\"libsnappy\"\nhap_encoder_select=\"texturedspenc\"\nhevc_decoder_select=\"bswapdsp cabac dovi_rpudec golomb hevcparse hevc_sei videodsp\"\nhuffyuv_decoder_select=\"bswapdsp huffyuvdsp llviddsp\"\nhuffyuv_encoder_select=\"bswapdsp huffman huffyuvencdsp llvidencdsp\"\nhymt_decoder_select=\"huffyuv_decoder\"\niac_decoder_select=\"imc_decoder\"\nimc_decoder_select=\"bswapdsp sinewin\"\nimm4_decoder_select=\"bswapdsp idctdsp\"\nimm5_decoder_select=\"h264_decoder hevc_decoder\"\nindeo3_decoder_select=\"hpeldsp\"\nindeo4_decoder_select=\"ividsp\"\nindeo5_decoder_select=\"ividsp\"\ninterplay_video_decoder_select=\"hpeldsp\"\nipu_decoder_select=\"mpegvideodec\"\njpegls_decoder_select=\"mjpeg_decoder\"\njv_decoder_select=\"blockdsp\"\nlagarith_decoder_select=\"llviddsp\"\nlead_decoder_select=\"blockdsp idctdsp jpegtables\"\nljpeg_encoder_select=\"jpegtables\"\nlscr_decoder_select=\"inflate_wrapper\"\nmagicyuv_decoder_select=\"llviddsp\"\nmagicyuv_encoder_select=\"llvidencdsp\"\nmdec_decoder_select=\"blockdsp bswapdsp idctdsp\"\nmedia100_decoder_select=\"media100_to_mjpegb_bsf mjpegb_decoder\"\nmetasound_decoder_select=\"lsp sinewin\"\nmimic_decoder_select=\"blockdsp bswapdsp hpeldsp idctdsp\"\nmjpeg_decoder_select=\"blockdsp hpeldsp exif idctdsp jpegtables\"\nmjpeg_encoder_select=\"jpegtables mpegvideoenc\"\nmjpegb_decoder_select=\"mjpeg_decoder\"\nmlp_decoder_select=\"mlp_parser\"\nmlp_encoder_select=\"lpc audio_frame_queue\"\nmobiclip_decoder_select=\"bswapdsp golomb\"\nmotionpixels_decoder_select=\"bswapdsp\"\nmp1_decoder_select=\"mpegaudio\"\nmp1float_decoder_select=\"mpegaudio\"\nmp2_decoder_select=\"mpegaudio\"\nmp2float_decoder_select=\"mpegaudio\"\nmp3_decoder_select=\"mpegaudio\"\nmp3adu_decoder_select=\"mpegaudio\"\nmp3adufloat_decoder_select=\"mpegaudio\"\nmp3float_decoder_select=\"mpegaudio\"\nmp3on4_decoder_select=\"mpegaudio mpeg4audio\"\nmp3on4float_decoder_select=\"mpegaudio mpeg4audio\"\nmpc7_decoder_select=\"bswapdsp mpegaudiodsp\"\nmpc8_decoder_select=\"mpegaudiodsp\"\nmpegvideo_decoder_select=\"mpegvideodec\"\nmpeg1video_decoder_select=\"mpegvideodec\"\nmpeg1video_encoder_select=\"mpegvideoenc\"\nmpeg2video_decoder_select=\"mpegvideodec\"\nmpeg2video_encoder_select=\"mpegvideoenc\"\nmpeg4_decoder_select=\"h263_decoder\"\nmpeg4_encoder_select=\"h263_encoder qpeldsp\"\nmsa1_decoder_select=\"mss34dsp\"\nmscc_decoder_select=\"inflate_wrapper\"\nmsmpeg4v1_decoder_select=\"msmpeg4dec\"\nmsmpeg4v2_decoder_select=\"msmpeg4dec\"\nmsmpeg4v2_encoder_select=\"msmpeg4enc\"\nmsmpeg4v3_decoder_select=\"msmpeg4dec\"\nmsmpeg4v3_encoder_select=\"msmpeg4enc\"\nmss2_decoder_select=\"mpegvideodec qpeldsp vc1_decoder\"\nmts2_decoder_select=\"jpegtables mss34dsp\"\nmv30_decoder_select=\"aandcttables blockdsp\"\nmvha_decoder_select=\"inflate_wrapper llviddsp\"\nmwsc_decoder_select=\"inflate_wrapper\"\nmxpeg_decoder_select=\"mjpeg_decoder\"\nnellymoser_decoder_select=\"sinewin\"\nnellymoser_encoder_select=\"audio_frame_queue sinewin\"\nnotchlc_decoder_select=\"lzf\"\nnuv_decoder_select=\"idctdsp\"\nopus_decoder_deps=\"swresample\"\nopus_encoder_select=\"audio_frame_queue\"\npdv_decoder_select=\"inflate_wrapper\"\npng_decoder_select=\"inflate_wrapper\"\npng_encoder_select=\"deflate_wrapper llvidencdsp\"\nprores_decoder_select=\"blockdsp idctdsp\"\nprores_encoder_select=\"fdctdsp\"\nprores_aw_encoder_select=\"fdctdsp\"\nprores_ks_encoder_select=\"fdctdsp\"\nqcelp_decoder_select=\"lsp\"\nqdm2_decoder_select=\"mpegaudiodsp\"\nra_144_decoder_select=\"audiodsp\"\nra_144_encoder_select=\"audio_frame_queue lpc audiodsp\"\nralf_decoder_select=\"golomb\"\nrasc_decoder_select=\"inflate_wrapper\"\nrawvideo_decoder_select=\"bswapdsp\"\nrscc_decoder_deps=\"zlib\"\nrtv1_decoder_select=\"texturedsp\"\nrv10_decoder_select=\"h263_decoder\"\nrv10_encoder_select=\"h263_encoder\"\nrv20_decoder_select=\"h263_decoder\"\nrv20_encoder_select=\"h263_encoder\"\nrv30_decoder_select=\"golomb h264pred h264qpel mpegvideodec rv34dsp\"\nrv40_decoder_select=\"golomb h264pred h264qpel mpegvideodec rv34dsp\"\nrv60_decoder_select=\"videodsp golomb\"\nscreenpresso_decoder_deps=\"zlib\"\nshorten_decoder_select=\"bswapdsp\"\nsipr_decoder_select=\"lsp\"\nsmvjpeg_decoder_select=\"mjpeg_decoder\"\nsnow_decoder_select=\"dwt h264qpel rangecoder videodsp\"\nsnow_encoder_select=\"dwt h264qpel hpeldsp me_cmp mpegvideoenc rangecoder videodsp\"\nsonic_decoder_select=\"golomb rangecoder\"\nsonic_encoder_select=\"golomb rangecoder\"\nsonic_ls_encoder_select=\"golomb rangecoder\"\nsp5x_decoder_select=\"mjpeg_decoder\"\nspeedhq_decoder_select=\"blockdsp idctdsp\"\nspeedhq_encoder_select=\"mpegvideoenc\"\nsrgc_decoder_select=\"inflate_wrapper\"\nsvq1_decoder_select=\"hpeldsp\"\nsvq1_encoder_select=\"hpeldsp me_cmp mpegvideoenc\"\nsvq3_decoder_select=\"golomb h264dsp h264parse h264pred hpeldsp tpeldsp videodsp\"\nsvq3_decoder_suggest=\"zlib\"\ntak_decoder_select=\"audiodsp\"\ntdsc_decoder_deps=\"zlib\"\ntdsc_decoder_select=\"mjpeg_decoder\"\ntheora_decoder_select=\"vp3_decoder\"\nthp_decoder_select=\"mjpeg_decoder\"\ntiff_decoder_select=\"mjpeg_decoder\"\ntiff_decoder_suggest=\"zlib lzma\"\ntiff_encoder_suggest=\"zlib\"\ntruehd_decoder_select=\"mlp_parser\"\ntruehd_encoder_select=\"lpc audio_frame_queue\"\ntruemotion2_decoder_select=\"bswapdsp\"\ntruespeech_decoder_select=\"bswapdsp\"\ntscc_decoder_select=\"inflate_wrapper\"\ntwinvq_decoder_select=\"lsp sinewin\"\ntxd_decoder_select=\"texturedsp\"\nutvideo_decoder_select=\"bswapdsp llviddsp\"\nutvideo_encoder_select=\"bswapdsp huffman llvidencdsp\"\nvble_decoder_select=\"llviddsp\"\nvbn_decoder_select=\"texturedsp\"\nvbn_encoder_select=\"texturedspenc\"\nvmix_decoder_select=\"idctdsp\"\nvc1_decoder_select=\"blockdsp h264qpel intrax8 mpegvideodec qpeldsp vc1dsp\"\nvc1image_decoder_select=\"vc1_decoder\"\nvorbis_encoder_select=\"audio_frame_queue\"\nvp3_decoder_select=\"hpeldsp vp3dsp videodsp\"\nvp4_decoder_select=\"vp3_decoder\"\nvp5_decoder_select=\"h264chroma hpeldsp videodsp vp3dsp vp56dsp\"\nvp6_decoder_select=\"h264chroma hpeldsp huffman videodsp vp3dsp vp56dsp\"\nvp6a_decoder_select=\"vp6_decoder\"\nvp6f_decoder_select=\"vp6_decoder\"\nvp7_decoder_select=\"h264pred videodsp vp8dsp\"\nvp8_decoder_select=\"h264pred videodsp vp8dsp\"\nvp9_decoder_select=\"videodsp vp9_parser vp9_superframe_split_bsf\"\nvvc_decoder_select=\"cabac cbs_h266 golomb videodsp\"\nwcmv_decoder_select=\"inflate_wrapper\"\nwebp_decoder_select=\"vp8_decoder exif\"\nwmalossless_decoder_select=\"llauddsp\"\nwmapro_decoder_select=\"sinewin wma_freqs\"\nwmav1_decoder_select=\"sinewin wma_freqs\"\nwmav1_encoder_select=\"sinewin wma_freqs\"\nwmav2_decoder_select=\"sinewin wma_freqs\"\nwmav2_encoder_select=\"sinewin wma_freqs\"\nwmavoice_decoder_select=\"lsp sinewin\"\nwmv1_decoder_select=\"msmpeg4dec\"\nwmv1_encoder_select=\"msmpeg4enc\"\nwmv2_decoder_select=\"blockdsp error_resilience idctdsp intrax8 msmpeg4dec videodsp wmv2dsp\"\nwmv2_encoder_select=\"msmpeg4enc wmv2dsp\"\nwmv3_decoder_select=\"vc1_decoder\"\nwmv3image_decoder_select=\"wmv3_decoder\"\nxma1_decoder_select=\"wmapro_decoder\"\nxma2_decoder_select=\"wmapro_decoder\"\nylc_decoder_select=\"bswapdsp\"\nzerocodec_decoder_select=\"inflate_wrapper\"\nzlib_decoder_select=\"inflate_wrapper\"\nzlib_encoder_select=\"deflate_wrapper\"\nzmbv_decoder_select=\"inflate_wrapper\"\nzmbv_encoder_select=\"deflate_wrapper\"\n\n# hardware accelerators\ncuda_deps=\"ffnvcodec\"\ncuvid_deps=\"ffnvcodec\"\nd3d11va_deps=\"dxva_h ID3D11VideoDecoder ID3D11VideoContext\"\nd3d12va_deps=\"dxva_h ID3D12Device ID3D12VideoDecoder\"\ndxva2_deps=\"dxva2api_h DXVA2_ConfigPictureDecode ole32 user32\"\nffnvcodec_deps_any=\"libdl LoadLibrary\"\nmediacodec_deps=\"android mediandk pthreads\"\nnvdec_deps=\"ffnvcodec\"\nvaapi_x11_deps=\"xlib_x11\"\nvideotoolbox_hwaccel_deps=\"videotoolbox pthreads\"\nvideotoolbox_hwaccel_extralibs=\"-framework QuartzCore\"\nvulkan_deps=\"threads\"\nvulkan_deps_any=\"libdl LoadLibrary\"\n\nav1_d3d11va_hwaccel_deps=\"d3d11va DXVA_PicParams_AV1\"\nav1_d3d11va_hwaccel_select=\"av1_decoder\"\nav1_d3d11va2_hwaccel_deps=\"d3d11va DXVA_PicParams_AV1\"\nav1_d3d11va2_hwaccel_select=\"av1_decoder\"\nav1_d3d12va_hwaccel_deps=\"d3d12va DXVA_PicParams_AV1\"\nav1_d3d12va_hwaccel_select=\"av1_decoder\"\nav1_dxva2_hwaccel_deps=\"dxva2 DXVA_PicParams_AV1\"\nav1_dxva2_hwaccel_select=\"av1_decoder\"\nav1_nvdec_hwaccel_deps=\"nvdec CUVIDAV1PICPARAMS\"\nav1_nvdec_hwaccel_select=\"av1_decoder\"\nav1_vaapi_hwaccel_deps=\"vaapi VADecPictureParameterBufferAV1_bit_depth_idx\"\nav1_vaapi_hwaccel_select=\"av1_decoder\"\nav1_vdpau_hwaccel_deps=\"vdpau VdpPictureInfoAV1\"\nav1_vdpau_hwaccel_select=\"av1_decoder\"\nav1_videotoolbox_hwaccel_deps=\"videotoolbox\"\nav1_videotoolbox_hwaccel_select=\"av1_decoder\"\nav1_vulkan_hwaccel_deps=\"vulkan\"\nav1_vulkan_hwaccel_select=\"av1_decoder\"\nh263_vaapi_hwaccel_deps=\"vaapi\"\nh263_vaapi_hwaccel_select=\"h263_decoder\"\nh263_videotoolbox_hwaccel_deps=\"videotoolbox\"\nh263_videotoolbox_hwaccel_select=\"h263_decoder\"\nh264_d3d11va_hwaccel_deps=\"d3d11va\"\nh264_d3d11va_hwaccel_select=\"h264_decoder\"\nh264_d3d11va2_hwaccel_deps=\"d3d11va\"\nh264_d3d11va2_hwaccel_select=\"h264_decoder\"\nh264_d3d12va_hwaccel_deps=\"d3d12va\"\nh264_d3d12va_hwaccel_select=\"h264_decoder\"\nh264_dxva2_hwaccel_deps=\"dxva2\"\nh264_dxva2_hwaccel_select=\"h264_decoder\"\nh264_nvdec_hwaccel_deps=\"nvdec\"\nh264_nvdec_hwaccel_select=\"h264_decoder\"\nh264_vaapi_hwaccel_deps=\"vaapi\"\nh264_vaapi_hwaccel_select=\"h264_decoder\"\nh264_vdpau_hwaccel_deps=\"vdpau\"\nh264_vdpau_hwaccel_select=\"h264_decoder\"\nh264_videotoolbox_hwaccel_deps=\"videotoolbox\"\nh264_videotoolbox_hwaccel_select=\"h264_decoder\"\nh264_vulkan_hwaccel_deps=\"vulkan\"\nh264_vulkan_hwaccel_select=\"h264_decoder\"\nhevc_d3d11va_hwaccel_deps=\"d3d11va DXVA_PicParams_HEVC\"\nhevc_d3d11va_hwaccel_select=\"hevc_decoder\"\nhevc_d3d11va2_hwaccel_deps=\"d3d11va DXVA_PicParams_HEVC\"\nhevc_d3d11va2_hwaccel_select=\"hevc_decoder\"\nhevc_d3d12va_hwaccel_deps=\"d3d12va DXVA_PicParams_HEVC\"\nhevc_d3d12va_hwaccel_select=\"hevc_decoder\"\nhevc_dxva2_hwaccel_deps=\"dxva2 DXVA_PicParams_HEVC\"\nhevc_dxva2_hwaccel_select=\"hevc_decoder\"\nhevc_nvdec_hwaccel_deps=\"nvdec\"\nhevc_nvdec_hwaccel_select=\"hevc_decoder\"\nhevc_vaapi_hwaccel_deps=\"vaapi VAPictureParameterBufferHEVC\"\nhevc_vaapi_hwaccel_select=\"hevc_decoder\"\nhevc_vdpau_hwaccel_deps=\"vdpau VdpPictureInfoHEVC\"\nhevc_vdpau_hwaccel_select=\"hevc_decoder\"\nhevc_videotoolbox_hwaccel_deps=\"videotoolbox\"\nhevc_videotoolbox_hwaccel_select=\"hevc_decoder\"\nhevc_vulkan_hwaccel_deps=\"vulkan\"\nhevc_vulkan_hwaccel_select=\"hevc_decoder\"\nmjpeg_nvdec_hwaccel_deps=\"nvdec\"\nmjpeg_nvdec_hwaccel_select=\"mjpeg_decoder\"\nmjpeg_vaapi_hwaccel_deps=\"vaapi\"\nmjpeg_vaapi_hwaccel_select=\"mjpeg_decoder\"\nmpeg1_nvdec_hwaccel_deps=\"nvdec\"\nmpeg1_nvdec_hwaccel_select=\"mpeg1video_decoder\"\nmpeg1_vdpau_hwaccel_deps=\"vdpau\"\nmpeg1_vdpau_hwaccel_select=\"mpeg1video_decoder\"\nmpeg1_videotoolbox_hwaccel_deps=\"videotoolbox\"\nmpeg1_videotoolbox_hwaccel_select=\"mpeg1video_decoder\"\nmpeg2_d3d11va_hwaccel_deps=\"d3d11va\"\nmpeg2_d3d11va_hwaccel_select=\"mpeg2video_decoder\"\nmpeg2_d3d11va2_hwaccel_deps=\"d3d11va\"\nmpeg2_d3d11va2_hwaccel_select=\"mpeg2video_decoder\"\nmpeg2_d3d12va_hwaccel_deps=\"d3d12va\"\nmpeg2_d3d12va_hwaccel_select=\"mpeg2video_decoder\"\nmpeg2_dxva2_hwaccel_deps=\"dxva2\"\nmpeg2_dxva2_hwaccel_select=\"mpeg2video_decoder\"\nmpeg2_nvdec_hwaccel_deps=\"nvdec\"\nmpeg2_nvdec_hwaccel_select=\"mpeg2video_decoder\"\nmpeg2_vaapi_hwaccel_deps=\"vaapi\"\nmpeg2_vaapi_hwaccel_select=\"mpeg2video_decoder\"\nmpeg2_vdpau_hwaccel_deps=\"vdpau\"\nmpeg2_vdpau_hwaccel_select=\"mpeg2video_decoder\"\nmpeg2_videotoolbox_hwaccel_deps=\"videotoolbox\"\nmpeg2_videotoolbox_hwaccel_select=\"mpeg2video_decoder\"\nmpeg4_nvdec_hwaccel_deps=\"nvdec\"\nmpeg4_nvdec_hwaccel_select=\"mpeg4_decoder\"\nmpeg4_vaapi_hwaccel_deps=\"vaapi\"\nmpeg4_vaapi_hwaccel_select=\"mpeg4_decoder\"\nmpeg4_vdpau_hwaccel_deps=\"vdpau\"\nmpeg4_vdpau_hwaccel_select=\"mpeg4_decoder\"\nmpeg4_videotoolbox_hwaccel_deps=\"videotoolbox\"\nmpeg4_videotoolbox_hwaccel_select=\"mpeg4_decoder\"\nprores_videotoolbox_hwaccel_deps=\"videotoolbox\"\nprores_videotoolbox_hwaccel_select=\"prores_decoder\"\nvc1_d3d11va_hwaccel_deps=\"d3d11va\"\nvc1_d3d11va_hwaccel_select=\"vc1_decoder\"\nvc1_d3d11va2_hwaccel_deps=\"d3d11va\"\nvc1_d3d11va2_hwaccel_select=\"vc1_decoder\"\nvc1_d3d12va_hwaccel_deps=\"d3d12va\"\nvc1_d3d12va_hwaccel_select=\"vc1_decoder\"\nvc1_dxva2_hwaccel_deps=\"dxva2\"\nvc1_dxva2_hwaccel_select=\"vc1_decoder\"\nvc1_nvdec_hwaccel_deps=\"nvdec\"\nvc1_nvdec_hwaccel_select=\"vc1_decoder\"\nvc1_vaapi_hwaccel_deps=\"vaapi\"\nvc1_vaapi_hwaccel_select=\"vc1_decoder\"\nvc1_vdpau_hwaccel_deps=\"vdpau\"\nvc1_vdpau_hwaccel_select=\"vc1_decoder\"\nvp8_nvdec_hwaccel_deps=\"nvdec\"\nvp8_nvdec_hwaccel_select=\"vp8_decoder\"\nvp8_vaapi_hwaccel_deps=\"vaapi\"\nvp8_vaapi_hwaccel_select=\"vp8_decoder\"\nvp9_d3d11va_hwaccel_deps=\"d3d11va DXVA_PicParams_VP9\"\nvp9_d3d11va_hwaccel_select=\"vp9_decoder\"\nvp9_d3d11va2_hwaccel_deps=\"d3d11va DXVA_PicParams_VP9\"\nvp9_d3d11va2_hwaccel_select=\"vp9_decoder\"\nvp9_d3d12va_hwaccel_deps=\"d3d12va DXVA_PicParams_VP9\"\nvp9_d3d12va_hwaccel_select=\"vp9_decoder\"\nvp9_dxva2_hwaccel_deps=\"dxva2 DXVA_PicParams_VP9\"\nvp9_dxva2_hwaccel_select=\"vp9_decoder\"\nvp9_nvdec_hwaccel_deps=\"nvdec\"\nvp9_nvdec_hwaccel_select=\"vp9_decoder\"\nvp9_vaapi_hwaccel_deps=\"vaapi VADecPictureParameterBufferVP9_bit_depth\"\nvp9_vaapi_hwaccel_select=\"vp9_decoder\"\nvp9_vdpau_hwaccel_deps=\"vdpau VdpPictureInfoVP9\"\nvp9_vdpau_hwaccel_select=\"vp9_decoder\"\nvp9_videotoolbox_hwaccel_deps=\"videotoolbox\"\nvp9_videotoolbox_hwaccel_select=\"vp9_decoder\"\nvvc_vaapi_hwaccel_deps=\"vaapi VAPictureParameterBufferVVC\"\nvvc_vaapi_hwaccel_select=\"vvc_decoder\"\nwmv3_d3d11va_hwaccel_select=\"vc1_d3d11va_hwaccel\"\nwmv3_d3d11va2_hwaccel_select=\"vc1_d3d11va2_hwaccel\"\nwmv3_d3d12va_hwaccel_select=\"vc1_d3d12va_hwaccel\"\nwmv3_dxva2_hwaccel_select=\"vc1_dxva2_hwaccel\"\nwmv3_nvdec_hwaccel_select=\"vc1_nvdec_hwaccel\"\nwmv3_vaapi_hwaccel_select=\"vc1_vaapi_hwaccel\"\nwmv3_vdpau_hwaccel_select=\"vc1_vdpau_hwaccel\"\n\n# hardware-accelerated codecs\nd3d12va_encode_deps=\"d3d12va ID3D12VideoEncoder d3d12_encoder_feature\"\nmediafoundation_deps=\"mftransform_h MFCreateAlignedMemoryBuffer\"\nomx_deps=\"libdl pthreads\"\nomx_rpi_select=\"omx\"\nqsv_deps=\"libmfx\"\nqsvdec_select=\"qsv\"\nqsvenc_select=\"qsv\"\nqsvvpp_select=\"qsv\"\nvaapi_encode_deps=\"vaapi\"\nvulkan_encode_deps=\"vulkan\"\nv4l2_m2m_deps=\"linux_videodev2_h sem_timedwait\"\n\nbilateral_cuda_filter_deps=\"ffnvcodec\"\nbilateral_cuda_filter_deps_any=\"cuda_nvcc cuda_llvm\"\nchromakey_cuda_filter_deps=\"ffnvcodec\"\nchromakey_cuda_filter_deps_any=\"cuda_nvcc cuda_llvm\"\ncolorspace_cuda_filter_deps=\"ffnvcodec\"\ncolorspace_cuda_filter_deps_any=\"cuda_nvcc cuda_llvm\"\nhwupload_cuda_filter_deps=\"ffnvcodec\"\nscale_npp_filter_deps=\"ffnvcodec libnpp\"\nscale2ref_npp_filter_deps=\"ffnvcodec libnpp\"\nscale_cuda_filter_deps=\"ffnvcodec\"\nscale_cuda_filter_deps_any=\"cuda_nvcc cuda_llvm\"\nthumbnail_cuda_filter_deps=\"ffnvcodec\"\nthumbnail_cuda_filter_deps_any=\"cuda_nvcc cuda_llvm\"\ntranspose_npp_filter_deps=\"ffnvcodec libnpp\"\noverlay_cuda_filter_deps=\"ffnvcodec\"\noverlay_cuda_filter_deps_any=\"cuda_nvcc cuda_llvm\"\nsharpen_npp_filter_deps=\"ffnvcodec libnpp\"\n\nddagrab_filter_deps=\"d3d11va IDXGIOutput1 DXGI_OUTDUPL_FRAME_INFO\"\n\namf_deps_any=\"libdl LoadLibrary\"\nnvenc_deps=\"ffnvcodec\"\nnvenc_deps_any=\"libdl LoadLibrary\"\n\naac_mediacodec_decoder_deps=\"mediacodec\"\naac_mediacodec_decoder_select=\"aac_adtstoasc_bsf aac_parser\"\naac_mf_encoder_deps=\"mediafoundation\"\nac3_mf_encoder_deps=\"mediafoundation\"\namrnb_mediacodec_decoder_deps=\"mediacodec\"\namrnb_mediacodec_decoder_select=\"amr_parser\"\namrwb_mediacodec_decoder_deps=\"mediacodec\"\namrwb_mediacodec_decoder_select=\"amr_parser\"\nav1_amf_encoder_deps=\"amf\"\nav1_cuvid_decoder_deps=\"cuvid CUVIDAV1PICPARAMS\"\nav1_mediacodec_decoder_deps=\"mediacodec\"\nav1_mediacodec_encoder_deps=\"mediacodec\"\nav1_mediacodec_encoder_select=\"extract_extradata_bsf\"\nav1_mf_encoder_deps=\"mediafoundation\"\nav1_nvenc_encoder_deps=\"nvenc NV_ENC_PIC_PARAMS_AV1\"\nav1_nvenc_encoder_select=\"atsc_a53\"\nav1_qsv_decoder_select=\"qsvdec\"\nav1_qsv_encoder_deps=\"libvpl\"\nav1_qsv_encoder_select=\"qsvenc\"\nav1_vaapi_encoder_deps=\"VAEncPictureParameterBufferAV1\"\nav1_vaapi_encoder_select=\"cbs_av1 vaapi_encode\"\nh263_v4l2m2m_decoder_deps=\"v4l2_m2m h263_v4l2_m2m\"\nh263_v4l2m2m_encoder_deps=\"v4l2_m2m h263_v4l2_m2m\"\nh264_amf_encoder_deps=\"amf\"\nh264_cuvid_decoder_deps=\"cuvid\"\nh264_cuvid_decoder_select=\"h264_mp4toannexb_bsf\"\nh264_mediacodec_decoder_deps=\"mediacodec\"\nh264_mediacodec_decoder_select=\"h264_mp4toannexb_bsf h264_parser\"\nh264_mediacodec_encoder_deps=\"mediacodec\"\nh264_mediacodec_encoder_select=\"extract_extradata_bsf h264_metadata\"\nh264_mf_encoder_deps=\"mediafoundation\"\nh264_mmal_decoder_deps=\"mmal\"\nh264_nvenc_encoder_deps=\"nvenc\"\nh264_nvenc_encoder_select=\"atsc_a53\"\nh264_omx_encoder_deps=\"omx\"\nh264_qsv_decoder_select=\"h264_mp4toannexb_bsf qsvdec\"\nh264_qsv_encoder_select=\"atsc_a53 qsvenc\"\nh264_rkmpp_decoder_deps=\"rkmpp\"\nh264_rkmpp_decoder_select=\"h264_mp4toannexb_bsf\"\nh264_vaapi_encoder_select=\"atsc_a53 cbs_h264 vaapi_encode\"\nh264_vulkan_encoder_select=\"cbs_h264 vulkan_encode\"\nh264_v4l2m2m_decoder_deps=\"v4l2_m2m h264_v4l2_m2m\"\nh264_v4l2m2m_decoder_select=\"h264_mp4toannexb_bsf\"\nh264_v4l2m2m_encoder_deps=\"v4l2_m2m h264_v4l2_m2m\"\nhevc_amf_encoder_deps=\"amf\"\nhevc_cuvid_decoder_deps=\"cuvid\"\nhevc_cuvid_decoder_select=\"hevc_mp4toannexb_bsf\"\nhevc_d3d12va_encoder_select=\"cbs_h265 d3d12va_encode\"\nhevc_mediacodec_decoder_deps=\"mediacodec\"\nhevc_mediacodec_decoder_select=\"hevc_mp4toannexb_bsf hevc_parser\"\nhevc_mediacodec_encoder_deps=\"mediacodec\"\nhevc_mediacodec_encoder_select=\"extract_extradata_bsf hevc_metadata\"\nhevc_mf_encoder_deps=\"mediafoundation\"\nhevc_nvenc_encoder_deps=\"nvenc\"\nhevc_nvenc_encoder_select=\"atsc_a53\"\nhevc_qsv_decoder_select=\"hevc_mp4toannexb_bsf qsvdec\"\nhevc_qsv_encoder_select=\"hevcparse qsvenc\"\nhevc_rkmpp_decoder_deps=\"rkmpp\"\nhevc_rkmpp_decoder_select=\"hevc_mp4toannexb_bsf\"\nhevc_vaapi_encoder_deps=\"VAEncPictureParameterBufferHEVC\"\nhevc_vaapi_encoder_select=\"atsc_a53 cbs_h265 vaapi_encode\"\nhevc_vulkan_encoder_select=\"atsc_a53 cbs_h265 vulkan_encode\"\nhevc_v4l2m2m_decoder_deps=\"v4l2_m2m hevc_v4l2_m2m\"\nhevc_v4l2m2m_decoder_select=\"hevc_mp4toannexb_bsf\"\nhevc_v4l2m2m_encoder_deps=\"v4l2_m2m hevc_v4l2_m2m\"\nmjpeg_cuvid_decoder_deps=\"cuvid\"\nmjpeg_qsv_decoder_select=\"qsvdec\"\nmjpeg_qsv_encoder_deps=\"libmfx\"\nmjpeg_qsv_encoder_select=\"qsvenc\"\nmjpeg_vaapi_encoder_deps=\"VAEncPictureParameterBufferJPEG\"\nmjpeg_vaapi_encoder_select=\"cbs_jpeg jpegtables vaapi_encode\"\nmp3_mf_encoder_deps=\"mediafoundation\"\nmp3_mediacodec_decoder_deps=\"mediacodec\"\nmp3_mediacodec_decoder_select=\"mpegaudioheader\"\nmpeg1_cuvid_decoder_deps=\"cuvid\"\nmpeg1_v4l2m2m_decoder_deps=\"v4l2_m2m mpeg1_v4l2_m2m\"\nmpeg2_cuvid_decoder_deps=\"cuvid\"\nmpeg2_mmal_decoder_deps=\"mmal\"\nmpeg2_mediacodec_decoder_deps=\"mediacodec\"\nmpeg2_qsv_decoder_select=\"qsvdec\"\nmpeg2_qsv_encoder_select=\"qsvenc\"\nmpeg2_vaapi_encoder_select=\"cbs_mpeg2 vaapi_encode\"\nmpeg2_v4l2m2m_decoder_deps=\"v4l2_m2m mpeg2_v4l2_m2m\"\nmpeg4_cuvid_decoder_deps=\"cuvid\"\nmpeg4_mediacodec_decoder_deps=\"mediacodec\"\nmpeg4_mediacodec_encoder_deps=\"mediacodec\"\nmpeg4_mediacodec_encoder_select=\"extract_extradata_bsf\"\nmpeg4_mmal_decoder_deps=\"mmal\"\nmpeg4_omx_encoder_deps=\"omx\"\nmpeg4_v4l2m2m_decoder_deps=\"v4l2_m2m mpeg4_v4l2_m2m\"\nmpeg4_v4l2m2m_encoder_deps=\"v4l2_m2m mpeg4_v4l2_m2m\"\nvc1_cuvid_decoder_deps=\"cuvid\"\nvc1_mmal_decoder_deps=\"mmal\"\nvc1_qsv_decoder_select=\"qsvdec\"\nvc1_v4l2m2m_decoder_deps=\"v4l2_m2m vc1_v4l2_m2m\"\nvp8_cuvid_decoder_deps=\"cuvid\"\nvp8_mediacodec_decoder_deps=\"mediacodec\"\nvp8_mediacodec_encoder_deps=\"mediacodec\"\nvp8_qsv_decoder_select=\"qsvdec\"\nvp8_rkmpp_decoder_deps=\"rkmpp\"\nvp8_vaapi_encoder_deps=\"VAEncPictureParameterBufferVP8\"\nvp8_vaapi_encoder_select=\"vaapi_encode\"\nvp8_v4l2m2m_decoder_deps=\"v4l2_m2m vp8_v4l2_m2m\"\nvp8_v4l2m2m_encoder_deps=\"v4l2_m2m vp8_v4l2_m2m\"\nvp9_cuvid_decoder_deps=\"cuvid\"\nvp9_mediacodec_decoder_deps=\"mediacodec\"\nvp9_mediacodec_encoder_deps=\"mediacodec\"\nvp9_qsv_decoder_select=\"qsvdec\"\nvp9_rkmpp_decoder_deps=\"rkmpp\"\nvp9_vaapi_encoder_deps=\"VAEncPictureParameterBufferVP9\"\nvp9_vaapi_encoder_select=\"vaapi_encode\"\nvp9_qsv_encoder_deps=\"libmfx MFX_CODEC_VP9\"\nvp9_qsv_encoder_select=\"qsvenc\"\nvp9_v4l2m2m_decoder_deps=\"v4l2_m2m vp9_v4l2_m2m\"\nvvc_qsv_decoder_select=\"vvc_mp4toannexb_bsf qsvdec\"\n\n# parsers\naac_parser_select=\"adts_header mpeg4audio\"\nav1_parser_select=\"cbs_av1\"\nevc_parser_select=\"evcparse\"\nftr_parser_select=\"adts_header mpeg4audio\"\nh264_parser_select=\"golomb h264dsp h264parse h264_sei\"\nhevc_parser_select=\"hevcparse hevc_sei\"\nmpegaudio_parser_select=\"mpegaudioheader\"\nmpeg4video_parser_select=\"h263dsp mpegvideodec qpeldsp\"\nvc1_parser_select=\"vc1dsp\"\nvvc_parser_select=\"cbs_h266\"\n\n# bitstream_filters\naac_adtstoasc_bsf_select=\"adts_header mpeg4audio\"\nav1_frame_merge_bsf_select=\"cbs_av1\"\nav1_frame_split_bsf_select=\"cbs_av1\"\nav1_metadata_bsf_select=\"cbs_av1\"\ndovi_rpu_bsf_select=\"cbs_h265 cbs_av1 dovi_rpudec dovi_rpuenc\"\ndts2pts_bsf_select=\"cbs_h264 h264parse\"\neac3_core_bsf_select=\"ac3_parser\"\nevc_frame_merge_bsf_select=\"evcparse\"\nfilter_units_bsf_select=\"cbs\"\nh264_metadata_bsf_deps=\"const_nan\"\nh264_metadata_bsf_select=\"cbs_h264\"\nh264_redundant_pps_bsf_select=\"cbs_h264\"\nhevc_metadata_bsf_select=\"cbs_h265\"\nmjpeg2jpeg_bsf_select=\"jpegtables\"\nmpeg2_metadata_bsf_select=\"cbs_mpeg2\"\ntrace_headers_bsf_select=\"cbs cbs_vp8\"\nvp9_metadata_bsf_select=\"cbs_vp9\"\nvvc_metadata_bsf_select=\"cbs_h266\"\n\n# external libraries\naac_at_decoder_deps=\"audiotoolbox\"\naac_at_decoder_select=\"aac_adtstoasc_bsf\"\nac3_at_decoder_deps=\"audiotoolbox\"\nac3_at_decoder_select=\"ac3_parser\"\nadpcm_ima_qt_at_decoder_deps=\"audiotoolbox\"\nalac_at_decoder_deps=\"audiotoolbox\"\namr_nb_at_decoder_deps=\"audiotoolbox\"\navisynth_deps_any=\"libdl LoadLibrary\"\navisynth_demuxer_deps=\"avisynth\"\navisynth_demuxer_select=\"riffdec\"\neac3_at_decoder_deps=\"audiotoolbox\"\neac3_at_decoder_select=\"ac3_parser\"\ngsm_ms_at_decoder_deps=\"audiotoolbox\"\nilbc_at_decoder_deps=\"audiotoolbox\"\nmp1_at_decoder_deps=\"audiotoolbox\"\nmp2_at_decoder_deps=\"audiotoolbox\"\nmp3_at_decoder_deps=\"audiotoolbox\"\nmp1_at_decoder_select=\"mpegaudioheader\"\nmp2_at_decoder_select=\"mpegaudioheader\"\nmp3_at_decoder_select=\"mpegaudioheader\"\npcm_alaw_at_decoder_deps=\"audiotoolbox\"\npcm_mulaw_at_decoder_deps=\"audiotoolbox\"\nqdmc_at_decoder_deps=\"audiotoolbox\"\nqdm2_at_decoder_deps=\"audiotoolbox\"\naac_at_encoder_deps=\"audiotoolbox\"\naac_at_encoder_select=\"audio_frame_queue\"\nalac_at_encoder_deps=\"audiotoolbox\"\nalac_at_encoder_select=\"audio_frame_queue\"\nilbc_at_encoder_deps=\"audiotoolbox\"\nilbc_at_encoder_select=\"audio_frame_queue\"\npcm_alaw_at_encoder_deps=\"audiotoolbox\"\npcm_alaw_at_encoder_select=\"audio_frame_queue\"\npcm_mulaw_at_encoder_deps=\"audiotoolbox\"\npcm_mulaw_at_encoder_select=\"audio_frame_queue\"\nchromaprint_muxer_deps=\"chromaprint\"\nh264_videotoolbox_encoder_deps=\"pthreads\"\nh264_videotoolbox_encoder_select=\"atsc_a53 videotoolbox_encoder\"\nhevc_videotoolbox_encoder_deps=\"pthreads\"\nhevc_videotoolbox_encoder_select=\"atsc_a53 videotoolbox_encoder\"\nprores_videotoolbox_encoder_deps=\"pthreads\"\nprores_videotoolbox_encoder_select=\"videotoolbox_encoder\"\nlibaom_av1_decoder_deps=\"libaom\"\nlibaom_av1_encoder_deps=\"libaom\"\nlibaom_av1_encoder_select=\"extract_extradata_bsf dovi_rpuenc\"\nlibaribb24_decoder_deps=\"libaribb24\"\nlibaribcaption_decoder_deps=\"libaribcaption\"\nlibcelt_decoder_deps=\"libcelt\"\nlibcodec2_decoder_deps=\"libcodec2\"\nlibcodec2_encoder_deps=\"libcodec2\"\nlibdav1d_decoder_deps=\"libdav1d\"\nlibdav1d_decoder_select=\"atsc_a53 dovi_rpudec\"\nlibdavs2_decoder_deps=\"libdavs2\"\nlibdavs2_decoder_select=\"avs2_parser\"\nlibfdk_aac_decoder_deps=\"libfdk_aac\"\nlibfdk_aac_encoder_deps=\"libfdk_aac\"\nlibfdk_aac_encoder_select=\"audio_frame_queue\"\nlibgme_demuxer_deps=\"libgme\"\nlibgsm_decoder_deps=\"libgsm\"\nlibgsm_encoder_deps=\"libgsm\"\nlibgsm_ms_decoder_deps=\"libgsm\"\nlibgsm_ms_encoder_deps=\"libgsm\"\nlibilbc_decoder_deps=\"libilbc\"\nlibilbc_encoder_deps=\"libilbc\"\nlibjxl_anim_decoder_deps=\"libjxl libjxl_threads\"\nlibjxl_anim_encoder_deps=\"libjxl libjxl_threads\"\nlibjxl_decoder_deps=\"libjxl libjxl_threads\"\nlibjxl_encoder_deps=\"libjxl libjxl_threads\"\nlibkvazaar_encoder_deps=\"libkvazaar\"\nliblc3_decoder_deps=\"liblc3\"\nliblc3_encoder_deps=\"liblc3\"\nliblc3_encoder_select=\"audio_frame_queue\"\nlibmodplug_demuxer_deps=\"libmodplug\"\nlibmp3lame_encoder_deps=\"libmp3lame\"\nlibmp3lame_encoder_select=\"audio_frame_queue mpegaudioheader\"\nlibopencore_amrnb_decoder_deps=\"libopencore_amrnb\"\nlibopencore_amrnb_encoder_deps=\"libopencore_amrnb\"\nlibopencore_amrnb_encoder_select=\"audio_frame_queue\"\nlibopencore_amrwb_decoder_deps=\"libopencore_amrwb\"\nlibopenh264_decoder_deps=\"libopenh264\"\nlibopenh264_decoder_select=\"h264_mp4toannexb_bsf\"\nlibopenh264_encoder_deps=\"libopenh264\"\nlibopenjpeg_encoder_deps=\"libopenjpeg\"\nlibopenmpt_demuxer_deps=\"libopenmpt\"\nlibopus_decoder_deps=\"libopus\"\nlibopus_encoder_deps=\"libopus\"\nlibopus_encoder_select=\"audio_frame_queue\"\nlibrav1e_encoder_deps=\"librav1e\"\nlibrsvg_decoder_deps=\"librsvg\"\nlibshine_encoder_deps=\"libshine\"\nlibshine_encoder_select=\"audio_frame_queue mpegaudioheader\"\nlibspeex_decoder_deps=\"libspeex\"\nlibspeex_encoder_deps=\"libspeex\"\nlibspeex_encoder_select=\"audio_frame_queue\"\nlibsvtav1_encoder_deps=\"libsvtav1\"\nlibsvtav1_encoder_select=\"dovi_rpuenc\"\nlibtheora_encoder_deps=\"libtheora\"\nlibtwolame_encoder_deps=\"libtwolame\"\nlibuavs3d_decoder_deps=\"libuavs3d\"\nlibvo_amrwbenc_encoder_deps=\"libvo_amrwbenc\"\nlibvorbis_decoder_deps=\"libvorbis\"\nlibvorbis_encoder_deps=\"libvorbis libvorbisenc\"\nlibvorbis_encoder_select=\"audio_frame_queue\"\nlibvpx_vp8_decoder_deps=\"libvpx\"\nlibvpx_vp8_encoder_deps=\"libvpx\"\nlibvpx_vp9_decoder_deps=\"libvpx\"\nlibvpx_vp9_encoder_deps=\"libvpx\"\nlibvvenc_encoder_deps=\"libvvenc\"\nlibwebp_encoder_deps=\"libwebp\"\nlibwebp_anim_encoder_deps=\"libwebp\"\nlibx262_encoder_deps=\"libx262\"\nlibx264_encoder_deps=\"libx264\"\nlibx264_encoder_select=\"atsc_a53 golomb\"\nlibx264rgb_encoder_deps=\"libx264\"\nlibx264rgb_encoder_select=\"libx264_encoder\"\nlibx265_encoder_deps=\"libx265\"\nlibx265_encoder_select=\"atsc_a53 dovi_rpuenc\"\nlibxavs_encoder_deps=\"libxavs\"\nlibxavs2_encoder_deps=\"libxavs2\"\nlibxevd_decoder_deps=\"libxevd\"\nlibxeve_encoder_deps=\"libxeve\"\nlibxvid_encoder_deps=\"libxvid\"\nlibzvbi_teletext_decoder_deps=\"libzvbi\"\nvapoursynth_demuxer_deps=\"vapoursynth\"\nvideotoolbox_suggest=\"coreservices\"\nvideotoolbox_deps=\"corefoundation coremedia corevideo\"\nvideotoolbox_encoder_deps=\"videotoolbox VTCompressionSessionPrepareToEncodeFrames\"\n\n# demuxers / muxers\nac3_demuxer_select=\"ac3_parser\"\nact_demuxer_select=\"riffdec\"\nadts_muxer_select=\"mpeg4audio\"\naiff_muxer_select=\"iso_media\"\namv_muxer_select=\"riffenc\"\nasf_demuxer_select=\"riffdec\"\nasf_o_demuxer_select=\"riffdec\"\nasf_muxer_select=\"riffenc\"\nasf_stream_muxer_select=\"asf_muxer\"\nav1_demuxer_select=\"av1_frame_merge_bsf av1_parser\"\navi_demuxer_select=\"riffdec exif\"\navi_muxer_select=\"riffenc\"\navif_muxer_select=\"mov_muxer\"\ncaf_demuxer_select=\"iso_media\"\ncaf_muxer_select=\"iso_media\"\ndash_muxer_select=\"mp4_muxer\"\ndash_demuxer_deps=\"libxml2\"\ndaud_muxer_select=\"pcm_rechunk_bsf\"\ndirac_demuxer_select=\"dirac_parser\"\ndts_demuxer_select=\"dca_parser\"\ndtshd_demuxer_select=\"dca_parser\"\ndv_demuxer_select=\"dvprofile\"\ndv_muxer_select=\"dvprofile\"\ndvdvideo_demuxer_select=\"mpegps_demuxer\"\ndvdvideo_demuxer_deps=\"libdvdnav libdvdread\"\ndxa_demuxer_select=\"riffdec\"\neac3_demuxer_select=\"ac3_parser\"\nevc_demuxer_select=\"evc_frame_merge_bsf evc_parser\"\nf4v_muxer_select=\"mov_muxer\"\nfifo_muxer_deps=\"threads\"\nflac_demuxer_select=\"flac_parser\"\nflv_muxer_select=\"aac_adtstoasc_bsf iso_writer\"\ngxf_muxer_select=\"pcm_rechunk_bsf\"\nhds_muxer_select=\"flv_muxer\"\nhls_demuxer_select=\"aac_demuxer ac3_demuxer adts_header ac3_parser eac3_demuxer mov_demuxer mpegts_demuxer\"\nhls_muxer_select=\"mov_muxer mpegts_muxer\"\niamf_demuxer_select=\"iamfdec\"\niamf_muxer_select=\"iamfenc\"\nimage2_alias_pix_demuxer_select=\"image2_demuxer\"\nimage2_brender_pix_demuxer_select=\"image2_demuxer\"\nimf_demuxer_deps=\"libxml2\"\nimf_demuxer_select=\"mxf_demuxer\"\nipod_muxer_select=\"mov_muxer\"\nismv_muxer_select=\"mov_muxer\"\nivf_muxer_select=\"av1_metadata_bsf vp9_superframe_bsf\"\nlatm_muxer_select=\"aac_adtstoasc_bsf mpeg4audio\"\nmatroska_audio_muxer_select=\"matroska_muxer\"\nmatroska_demuxer_select=\"riffdec\"\nmatroska_demuxer_suggest=\"bzlib zlib\"\nmatroska_muxer_select=\"iso_writer mpeg4audio riffenc aac_adtstoasc_bsf pgs_frame_merge_bsf vp9_superframe_bsf\"\nmlp_demuxer_select=\"mlp_parser\"\nmmf_muxer_select=\"riffenc\"\nmov_demuxer_select=\"iso_media riffdec\"\nmov_demuxer_suggest=\"iamfdec zlib\"\nmov_muxer_select=\"iso_media iso_writer riffenc rtpenc_chain vp9_superframe_bsf aac_adtstoasc_bsf ac3_parser\"\nmov_muxer_suggest=\"iamfenc\"\nmp3_demuxer_select=\"mpegaudio_parser\"\nmp3_muxer_select=\"mpegaudioheader\"\nmp4_muxer_select=\"mov_muxer\"\nmpegts_demuxer_select=\"iso_media\"\nmpegts_muxer_select=\"ac3_parser adts_muxer latm_muxer h264_mp4toannexb_bsf hevc_mp4toannexb_bsf vvc_mp4toannexb_bsf\"\nmpegtsraw_demuxer_select=\"mpegts_demuxer\"\nmxf_muxer_select=\"iso_writer pcm_rechunk_bsf rangecoder\"\nmxf_d10_muxer_select=\"mxf_muxer\"\nmxf_opatom_muxer_select=\"mxf_muxer\"\nnut_muxer_select=\"riffenc\"\nnuv_demuxer_select=\"riffdec\"\nobu_demuxer_select=\"av1_frame_merge_bsf av1_parser\"\nobu_muxer_select=\"av1_metadata_bsf\"\noga_muxer_select=\"ogg_muxer\"\nogg_demuxer_select=\"dirac_parse\"\nogv_muxer_select=\"ogg_muxer\"\nopus_muxer_select=\"ogg_muxer\"\npsp_muxer_select=\"mov_muxer\"\nrtp_demuxer_select=\"sdp_demuxer\"\nrtp_muxer_select=\"iso_writer\"\nrtp_mpegts_muxer_select=\"mpegts_muxer rtp_muxer\"\nrtpdec_select=\"asf_demuxer mov_demuxer mpegts_demuxer rm_demuxer rtp_protocol srtp\"\nrtsp_demuxer_select=\"http_protocol rtpdec\"\nrtsp_muxer_select=\"rtp_muxer http_protocol rtp_protocol rtpenc_chain\"\nsap_demuxer_select=\"sdp_demuxer\"\nsap_muxer_select=\"rtp_muxer rtp_protocol rtpenc_chain\"\nsdp_demuxer_select=\"rtpdec\"\nsmoothstreaming_muxer_select=\"ismv_muxer\"\nspdif_demuxer_select=\"adts_header\"\nspdif_muxer_select=\"adts_header\"\nspx_muxer_select=\"ogg_muxer\"\nswf_demuxer_suggest=\"zlib\"\ntak_demuxer_select=\"tak_parser\"\ntruehd_demuxer_select=\"mlp_parser\"\ntg2_muxer_select=\"mov_muxer\"\ntgp_muxer_select=\"mov_muxer\"\nvobsub_demuxer_select=\"mpegps_demuxer\"\nw64_demuxer_select=\"wav_demuxer\"\nw64_muxer_select=\"wav_muxer\"\nwav_demuxer_select=\"riffdec\"\nwav_muxer_select=\"riffenc\"\nwebm_chunk_muxer_select=\"webm_muxer\"\nwebm_dash_manifest_demuxer_select=\"matroska_demuxer\"\nwtv_demuxer_select=\"mpegts_demuxer riffdec\"\nwtv_muxer_select=\"mpegts_muxer riffenc\"\nxmv_demuxer_select=\"riffdec\"\nxwma_demuxer_select=\"riffdec\"\n\n# indevs / outdevs\nandroid_camera_indev_deps=\"android camera2ndk mediandk pthreads\"\nalsa_indev_deps=\"alsa\"\nalsa_outdev_deps=\"alsa\"\navfoundation_indev_deps=\"avfoundation corevideo coremedia pthreads\"\navfoundation_indev_suggest=\"coregraphics applicationservices\"\navfoundation_indev_extralibs=\"-framework Foundation\"\naudiotoolbox_outdev_deps=\"audiotoolbox pthreads\"\naudiotoolbox_outdev_extralibs=\"-framework AudioToolbox -framework CoreAudio\"\nbktr_indev_deps_any=\"dev_bktr_ioctl_bt848_h machine_ioctl_bt848_h dev_video_bktr_ioctl_bt848_h dev_ic_bt8xx_h\"\ncaca_outdev_deps=\"libcaca\"\ndecklink_deps_any=\"libdl LoadLibrary\"\ndecklink_indev_deps=\"decklink threads\"\ndecklink_indev_extralibs=\"-lstdc++\"\ndecklink_indev_suggest=\"libzvbi\"\ndecklink_outdev_deps=\"decklink threads\"\ndecklink_outdev_suggest=\"libklvanc\"\ndecklink_outdev_extralibs=\"-lstdc++\"\ndshow_indev_deps=\"IBaseFilter\"\ndshow_indev_extralibs=\"-lpsapi -lole32 -lstrmiids -luuid -loleaut32 -lshlwapi\"\nfbdev_indev_deps=\"linux_fb_h\"\nfbdev_outdev_deps=\"linux_fb_h\"\ngdigrab_indev_deps=\"CreateDIBSection\"\ngdigrab_indev_extralibs=\"-lgdi32\"\ngdigrab_indev_select=\"bmp_decoder\"\niec61883_indev_deps=\"libiec61883\"\niec61883_indev_select=\"dv_demuxer\"\njack_indev_deps=\"libjack\"\njack_indev_deps_any=\"sem_timedwait dispatch_dispatch_h\"\nkmsgrab_indev_deps=\"libdrm\"\nlavfi_indev_deps=\"avfilter\"\nlibcdio_indev_deps=\"libcdio\"\nlibdc1394_indev_deps=\"libdc1394\"\nopenal_indev_deps=\"openal\"\nopengl_outdev_deps=\"opengl\"\nopengl_outdev_suggest=\"sdl2\"\noss_indev_deps_any=\"sys_soundcard_h\"\noss_outdev_deps_any=\"sys_soundcard_h\"\npulse_indev_deps=\"libpulse\"\npulse_outdev_deps=\"libpulse\"\nsdl2_outdev_deps=\"sdl2\"\nsndio_indev_deps=\"sndio\"\nsndio_outdev_deps=\"sndio\"\nv4l2_indev_deps_any=\"linux_videodev2_h sys_videoio_h\"\nv4l2_indev_suggest=\"libv4l2\"\nv4l2_outdev_deps_any=\"linux_videodev2_h sys_videoio_h\"\nv4l2_outdev_suggest=\"libv4l2\"\nvfwcap_indev_deps=\"vfw32 vfwcap_defines\"\nxcbgrab_indev_deps=\"libxcb\"\nxcbgrab_indev_suggest=\"libxcb_shm libxcb_shape libxcb_xfixes\"\nxv_outdev_deps=\"xlib_xv xlib_x11 xlib_xext\"\n\n# protocols\nandroid_content_protocol_deps=\"jni\"\nandroid_content_protocol_select=\"file_protocol\"\nasync_protocol_deps=\"threads\"\nbluray_protocol_deps=\"libbluray\"\nffrtmpcrypt_protocol_conflict=\"librtmp_protocol\"\nffrtmpcrypt_protocol_deps_any=\"gcrypt gmp openssl mbedtls\"\nffrtmpcrypt_protocol_select=\"tcp_protocol\"\nffrtmphttp_protocol_conflict=\"librtmp_protocol\"\nffrtmphttp_protocol_select=\"http_protocol\"\nftp_protocol_select=\"tcp_protocol\"\ngopher_protocol_select=\"tcp_protocol\"\ngophers_protocol_select=\"tls_protocol\"\nhttp_protocol_select=\"tcp_protocol\"\nhttp_protocol_suggest=\"zlib\"\nhttpproxy_protocol_select=\"tcp_protocol\"\nhttpproxy_protocol_suggest=\"zlib\"\nhttps_protocol_select=\"tls_protocol\"\nhttps_protocol_suggest=\"zlib\"\nicecast_protocol_select=\"http_protocol\"\nmmsh_protocol_select=\"http_protocol\"\nmmst_protocol_select=\"network\"\nrtmp_protocol_conflict=\"librtmp_protocol\"\nrtmp_protocol_select=\"tcp_protocol\"\nrtmp_protocol_suggest=\"zlib\"\nrtmpe_protocol_select=\"ffrtmpcrypt_protocol\"\nrtmpe_protocol_suggest=\"zlib\"\nrtmps_protocol_conflict=\"librtmp_protocol\"\nrtmps_protocol_select=\"tls_protocol\"\nrtmps_protocol_suggest=\"zlib\"\nrtmpt_protocol_select=\"ffrtmphttp_protocol\"\nrtmpt_protocol_suggest=\"zlib\"\nrtmpte_protocol_select=\"ffrtmpcrypt_protocol ffrtmphttp_protocol\"\nrtmpte_protocol_suggest=\"zlib\"\nrtmpts_protocol_select=\"ffrtmphttp_protocol https_protocol\"\nrtmpts_protocol_suggest=\"zlib\"\nrtp_protocol_select=\"udp_protocol\"\nschannel_conflict=\"openssl gnutls libtls mbedtls\"\nsctp_protocol_deps=\"struct_sctp_event_subscribe struct_msghdr_msg_flags\"\nsctp_protocol_select=\"network\"\nsecuretransport_conflict=\"openssl gnutls libtls mbedtls\"\nsrtp_protocol_select=\"rtp_protocol srtp\"\ntcp_protocol_select=\"network\"\ntls_protocol_deps_any=\"gnutls openssl schannel securetransport libtls mbedtls\"\ntls_protocol_select=\"tcp_protocol\"\nudp_protocol_select=\"network\"\nudplite_protocol_select=\"network\"\nunix_protocol_deps=\"sys_un_h\"\nunix_protocol_select=\"network\"\nipfs_gateway_protocol_select=\"https_protocol\"\nipns_gateway_protocol_select=\"https_protocol\"\n\n# external library protocols\nlibamqp_protocol_deps=\"librabbitmq\"\nlibamqp_protocol_select=\"network\"\nlibrist_protocol_deps=\"librist\"\nlibrist_protocol_select=\"network\"\nlibrtmp_protocol_deps=\"librtmp\"\nlibrtmpe_protocol_deps=\"librtmp\"\nlibrtmps_protocol_deps=\"librtmp\"\nlibrtmpt_protocol_deps=\"librtmp\"\nlibrtmpte_protocol_deps=\"librtmp\"\nlibsmbclient_protocol_deps=\"libsmbclient gplv3\"\nlibsrt_protocol_deps=\"libsrt\"\nlibsrt_protocol_select=\"network\"\nlibssh_protocol_deps=\"libssh\"\nlibtls_conflict=\"openssl gnutls mbedtls\"\nlibzmq_protocol_deps=\"libzmq\"\nlibzmq_protocol_select=\"network\"\n\n# filters\nametadata_filter_deps=\"avformat\"\namovie_filter_deps=\"avcodec avformat\"\naresample_filter_deps=\"swresample\"\nasr_filter_deps=\"pocketsphinx\"\nass_filter_deps=\"libass\"\navgblur_opencl_filter_deps=\"opencl\"\navgblur_vulkan_filter_deps=\"vulkan spirv_compiler\"\nazmq_filter_deps=\"libzmq\"\nblackframe_filter_deps=\"gpl\"\nblend_vulkan_filter_deps=\"vulkan spirv_compiler\"\nboxblur_filter_deps=\"gpl\"\nboxblur_opencl_filter_deps=\"opencl gpl\"\nbs2b_filter_deps=\"libbs2b\"\nbwdif_cuda_filter_deps=\"ffnvcodec\"\nbwdif_cuda_filter_deps_any=\"cuda_nvcc cuda_llvm\"\nbwdif_vulkan_filter_deps=\"vulkan spirv_compiler\"\nchromaber_vulkan_filter_deps=\"vulkan spirv_compiler\"\ncolor_vulkan_filter_deps=\"vulkan spirv_compiler\"\ncolorkey_opencl_filter_deps=\"opencl\"\ncolormatrix_filter_deps=\"gpl\"\nconvolution_opencl_filter_deps=\"opencl\"\ncoreimage_filter_deps=\"coreimage appkit\"\ncoreimage_filter_extralibs=\"-framework OpenGL\"\ncoreimagesrc_filter_deps=\"coreimage appkit\"\ncoreimagesrc_filter_extralibs=\"-framework OpenGL\"\ncover_rect_filter_deps=\"avcodec avformat gpl\"\ncropdetect_filter_deps=\"gpl\"\ndeinterlace_qsv_filter_deps=\"libmfx\"\ndeinterlace_qsv_filter_select=\"qsvvpp\"\ndeinterlace_vaapi_filter_deps=\"vaapi\"\ndelogo_filter_deps=\"gpl\"\ndenoise_vaapi_filter_deps=\"vaapi\"\nderain_filter_select=\"dnn\"\ndeshake_filter_select=\"pixelutils\"\ndeshake_opencl_filter_deps=\"opencl\"\ndilation_opencl_filter_deps=\"opencl\"\ndnn_classify_filter_select=\"dnn\"\ndnn_detect_filter_select=\"dnn\"\ndnn_processing_filter_select=\"dnn\"\ndrawtext_filter_deps=\"libfreetype libharfbuzz\"\ndrawtext_filter_suggest=\"libfontconfig libfribidi\"\nelbg_filter_deps=\"avcodec\"\neq_filter_deps=\"gpl\"\nerosion_opencl_filter_deps=\"opencl\"\nfind_rect_filter_deps=\"avcodec avformat gpl\"\nflip_vulkan_filter_deps=\"vulkan spirv_compiler\"\nflite_filter_deps=\"libflite threads\"\nframerate_filter_select=\"scene_sad\"\nfreezedetect_filter_select=\"scene_sad\"\nfrei0r_deps_any=\"libdl LoadLibrary\"\nfrei0r_filter_deps=\"frei0r\"\nfrei0r_src_filter_deps=\"frei0r\"\nfspp_filter_deps=\"gpl\"\nfsync_filter_deps=\"avformat\"\ngblur_vulkan_filter_deps=\"vulkan spirv_compiler\"\nhflip_vulkan_filter_deps=\"vulkan spirv_compiler\"\nhisteq_filter_deps=\"gpl\"\nhqdn3d_filter_deps=\"gpl\"\niccdetect_filter_deps=\"lcms2\"\niccgen_filter_deps=\"lcms2\"\nidentity_filter_select=\"scene_sad\"\ninterlace_filter_deps=\"gpl\"\nkerndeint_filter_deps=\"gpl\"\nladspa_filter_deps=\"ladspa libdl\"\nlcevc_filter_deps=\"liblcevc_dec\"\nlensfun_filter_deps=\"liblensfun version3\"\nlibplacebo_filter_deps=\"libplacebo vulkan\"\nlv2_filter_deps=\"lv2\"\nmcdeint_filter_deps=\"avcodec gpl\"\nmetadata_filter_deps=\"avformat\"\nmovie_filter_deps=\"avcodec avformat\"\nmpdecimate_filter_deps=\"gpl\"\nmpdecimate_filter_select=\"pixelutils\"\nminterpolate_filter_select=\"scene_sad\"\nmptestsrc_filter_deps=\"gpl\"\nmsad_filter_select=\"scene_sad\"\nnegate_filter_deps=\"lut_filter\"\nnlmeans_opencl_filter_deps=\"opencl\"\nnlmeans_vulkan_filter_deps=\"vulkan spirv_compiler\"\nnnedi_filter_deps=\"gpl\"\nocr_filter_deps=\"libtesseract\"\nocv_filter_deps=\"libopencv\"\nopenclsrc_filter_deps=\"opencl\"\nqrencode_filter_deps=\"libqrencode\"\nqrencodesrc_filter_deps=\"libqrencode\"\nquirc_filter_deps=\"libquirc\"\noverlay_opencl_filter_deps=\"opencl\"\noverlay_qsv_filter_deps=\"libmfx\"\noverlay_qsv_filter_select=\"qsvvpp\"\noverlay_vaapi_filter_deps=\"vaapi VAProcPipelineCaps_blend_flags\"\noverlay_vulkan_filter_deps=\"vulkan spirv_compiler\"\nowdenoise_filter_deps=\"gpl\"\npad_opencl_filter_deps=\"opencl\"\npan_filter_deps=\"swresample\"\nperspective_filter_deps=\"gpl\"\nphase_filter_deps=\"gpl\"\npp7_filter_deps=\"gpl\"\npp_filter_deps=\"gpl postproc\"\nprewitt_opencl_filter_deps=\"opencl\"\nprocamp_vaapi_filter_deps=\"vaapi\"\nprogram_opencl_filter_deps=\"opencl\"\npullup_filter_deps=\"gpl\"\nremap_opencl_filter_deps=\"opencl\"\nremovelogo_filter_deps=\"avcodec avformat swscale\"\nrepeatfields_filter_deps=\"gpl\"\nroberts_opencl_filter_deps=\"opencl\"\nrubberband_filter_deps=\"librubberband\"\nsab_filter_deps=\"gpl swscale\"\nscale2ref_filter_deps=\"swscale\"\nscale_filter_deps=\"swscale\"\nscale_qsv_filter_deps=\"libmfx\"\nscale_qsv_filter_select=\"qsvvpp\"\nscdet_filter_select=\"scene_sad\"\nselect_filter_select=\"scene_sad\"\nsharpness_vaapi_filter_deps=\"vaapi\"\nshowcqt_filter_deps=\"avformat swscale\"\nshowcqt_filter_suggest=\"libfontconfig libfreetype\"\nsignature_filter_deps=\"gpl avcodec avformat\"\nsmartblur_filter_deps=\"gpl swscale\"\nsobel_opencl_filter_deps=\"opencl\"\nsofalizer_filter_deps=\"libmysofa\"\nspp_filter_deps=\"gpl avcodec\"\nspp_filter_select=\"idctdsp fdctdsp me_cmp pixblockdsp\"\nsr_filter_deps=\"avformat swscale\"\nsr_filter_select=\"dnn\"\nstereo3d_filter_deps=\"gpl\"\nsubtitles_filter_deps=\"avformat avcodec libass\"\nsuper2xsai_filter_deps=\"gpl\"\npixfmts_super2xsai_test_deps=\"super2xsai_filter\"\ntinterlace_filter_deps=\"gpl\"\ntinterlace_merge_test_deps=\"tinterlace_filter\"\ntinterlace_pad_test_deps=\"tinterlace_filter\"\ntonemap_filter_deps=\"const_nan\"\ntonemap_vaapi_filter_deps=\"vaapi VAProcFilterParameterBufferHDRToneMapping\"\ntonemap_opencl_filter_deps=\"opencl const_nan\"\ntranspose_opencl_filter_deps=\"opencl\"\ntranspose_vaapi_filter_deps=\"vaapi VAProcPipelineCaps_rotation_flags\"\ntranspose_vt_filter_deps=\"videotoolbox VTPixelRotationSessionCreate\"\ntranspose_vulkan_filter_deps=\"vulkan spirv_compiler\"\nunsharp_opencl_filter_deps=\"opencl\"\nuspp_filter_deps=\"gpl avcodec\"\nvaguedenoiser_filter_deps=\"gpl\"\nvflip_vulkan_filter_deps=\"vulkan spirv_compiler\"\nvidstabdetect_filter_deps=\"libvidstab\"\nvidstabtransform_filter_deps=\"libvidstab\"\nlibvmaf_filter_deps=\"libvmaf\"\nlibvmaf_cuda_filter_deps=\"libvmaf libvmaf_cuda ffnvcodec\"\nzmq_filter_deps=\"libzmq\"\nzoompan_filter_deps=\"swscale\"\nzscale_filter_deps=\"libzimg const_nan\"\nscale_vaapi_filter_deps=\"vaapi\"\nscale_vt_filter_deps=\"videotoolbox VTPixelTransferSessionCreate\"\nscale_vulkan_filter_deps=\"vulkan spirv_compiler\"\nvpp_qsv_filter_deps=\"libmfx\"\nvpp_qsv_filter_select=\"qsvvpp\"\nxfade_opencl_filter_deps=\"opencl\"\nxfade_vulkan_filter_deps=\"vulkan spirv_compiler\"\nyadif_cuda_filter_deps=\"ffnvcodec\"\nyadif_cuda_filter_deps_any=\"cuda_nvcc cuda_llvm\"\nyadif_videotoolbox_filter_deps=\"metal corevideo videotoolbox\"\nhstack_vaapi_filter_deps=\"vaapi_1\"\nvstack_vaapi_filter_deps=\"vaapi_1\"\nxstack_vaapi_filter_deps=\"vaapi_1\"\nhstack_qsv_filter_deps=\"libmfx\"\nhstack_qsv_filter_select=\"qsvvpp\"\nvstack_qsv_filter_deps=\"libmfx\"\nvstack_qsv_filter_select=\"qsvvpp\"\nxstack_qsv_filter_deps=\"libmfx\"\nxstack_qsv_filter_select=\"qsvvpp\"\npad_vaapi_filter_deps=\"vaapi_1\"\ndrawbox_vaapi_filter_deps=\"vaapi_1\"\n\n# examples\navio_http_serve_files_deps=\"avformat avutil fork\"\navio_list_dir_deps=\"avformat avutil\"\navio_read_callback_deps=\"avformat avcodec avutil\"\ndecode_audio_example_deps=\"avcodec avutil\"\ndecode_filter_audio_example_deps=\"avfilter avcodec avformat avutil\"\ndecode_filter_video_example_deps=\"avfilter avcodec avformat avutil\"\ndecode_video_example_deps=\"avcodec avutil\"\ndemux_decode_example_deps=\"avcodec avformat avutil\"\nencode_audio_example_deps=\"avcodec avutil\"\nencode_video_example_deps=\"avcodec avutil\"\nextract_mvs_example_deps=\"avcodec avformat avutil\"\nfilter_audio_example_deps=\"avfilter avutil\"\nhw_decode_example_deps=\"avcodec avformat avutil\"\nmux_example_deps=\"avcodec avformat avutil swscale\"\nqsv_decode_example_deps=\"avcodec avutil libmfx h264_qsv_decoder\"\nremux_example_deps=\"avcodec avformat avutil\"\nresample_audio_example_deps=\"avutil swresample\"\nscale_video_example_deps=\"avutil swscale\"\nshow_metadata_example_deps=\"avformat avutil\"\ntranscode_aac_example_deps=\"avcodec avformat swresample\"\ntranscode_example_deps=\"avfilter avcodec avformat avutil\"\nvaapi_encode_example_deps=\"avcodec avutil h264_vaapi_encoder\"\nvaapi_transcode_example_deps=\"avcodec avformat avutil h264_vaapi_encoder\"\nqsv_transcode_example_deps=\"avcodec avformat avutil h264_qsv_encoder\"\n\n# EXTRALIBS_LIST\ncpu_init_extralibs=\"pthreads_extralibs\"\ncws2fws_extralibs=\"zlib_extralibs\"\n\n# libraries, in any order\navcodec_deps=\"avutil\"\navcodec_suggest=\"libm stdatomic spirv_compiler\"\navdevice_deps=\"avformat avcodec avutil\"\navdevice_suggest=\"libm stdatomic\"\navfilter_deps=\"avutil\"\navfilter_suggest=\"libm stdatomic spirv_compiler\"\navformat_deps=\"avcodec avutil\"\navformat_suggest=\"libm network zlib stdatomic\"\navutil_suggest=\"clock_gettime ffnvcodec gcrypt libm libdrm libmfx opencl openssl user32 vaapi vulkan videotoolbox corefoundation corevideo coremedia bcrypt stdatomic\"\npostproc_deps=\"avutil gpl\"\npostproc_suggest=\"libm stdatomic\"\nswresample_deps=\"avutil\"\nswresample_suggest=\"libm libsoxr stdatomic\"\nswscale_deps=\"avutil\"\nswscale_suggest=\"libm stdatomic\"\n\navcodec_extralibs=\"pthreads_extralibs iconv_extralibs dxva2_extralibs liblcevc_dec_extralibs lcms2_extralibs\"\navfilter_extralibs=\"pthreads_extralibs\"\navutil_extralibs=\"d3d11va_extralibs d3d12va_extralibs mediacodec_extralibs nanosleep_extralibs pthreads_extralibs vaapi_drm_extralibs vaapi_x11_extralibs vaapi_win32_extralibs vdpau_x11_extralibs\"\n\n# programs\nffmpeg_deps=\"avcodec avfilter avformat threads\"\nffmpeg_select=\"aformat_filter anull_filter atrim_filter crop_filter\n               format_filter hflip_filter null_filter rotate_filter\n               transpose_filter trim_filter vflip_filter\"\nffmpeg_suggest=\"ole32 psapi shell32\"\nffplay_deps=\"avcodec avformat avfilter swscale swresample sdl2\"\nffplay_select=\"crop_filter transpose_filter hflip_filter vflip_filter rotate_filter\"\nffplay_suggest=\"shell32 libplacebo vulkan\"\nffprobe_deps=\"avcodec avformat\"\nffprobe_suggest=\"shell32\"\n\n# documentation\npodpages_deps=\"perl\"\nmanpages_deps=\"perl pod2man\"\nhtmlpages_deps=\"perl\"\nhtmlpages_deps_any=\"makeinfo_html texi2html\"\ntxtpages_deps=\"perl makeinfo\"\ndoc_deps_any=\"manpages htmlpages podpages txtpages\"\n\n# default parameters\n\nlogfile=\"ffbuild/config.log\"\n\n# installation paths\nprefix_default=\"/usr/local\"\nbindir_default='${prefix}/bin'\ndatadir_default='${prefix}/share/ffmpeg'\ndocdir_default='${prefix}/share/doc/ffmpeg'\nincdir_default='${prefix}/include'\nlibdir_default='${prefix}/lib'\nmandir_default='${prefix}/share/man'\n\n# toolchain\nar_default=\"ar\"\ncc_default=\"gcc\"\nstdc_default=\"c17\"\nstdcxx_default=\"c++11\"\ncxx_default=\"g++\"\nhost_cc_default=\"gcc\"\ndoxygen_default=\"doxygen\"\ninstall=\"install\"\nln_s_default=\"ln -s -f\"\nmetalcc_default=\"xcrun -sdk macosx metal\"\nmetallib_default=\"xcrun -sdk macosx metallib\"\nnm_default=\"nm -g\"\npkg_config_default=pkg-config\nranlib_default=\"ranlib\"\nstrip_default=\"strip\"\nversion_script='--version-script'\nobjformat=\"elf32\"\nx86asmexe_default=\"nasm\"\nwindres_default=\"windres\"\nstriptype=\"direct\"\n\n# OS\ntarget_os_default=$(tolower $(uname -s))\nhost_os=$target_os_default\n\n# machine\nif test \"$target_os_default\" = aix; then\n    arch_default=$(uname -p)\n    strip_default=\"strip -X32_64\"\n    nm_default=\"nm -g -X32_64\"\nelse\n    arch_default=$(uname -m)\nfi\ncpu=\"generic\"\nintrinsics=\"none\"\n\n# configurable options\nenable $PROGRAM_LIST\nenable $DOCUMENT_LIST\nenable $EXAMPLE_LIST\nenable $LIBRARY_LIST\nenable stripping\nenable version_tracking\n\nenable asm\nenable debug\nenable doc\nenable faan faandct faanidct\nenable iamf\nenable large_tests\nenable optimizations\nenable ptx_compression\nenable runtime_cpudetect\nenable safe_bitstream_reader\nenable static\nenable swscale_alpha\nenable valgrind_backtrace\n\nsws_max_filter_size_default=256\nset_default sws_max_filter_size\n\n# internal components are enabled by default\nenable $EXTRALIBS_LIST\n\n# Avoid external, non-system, libraries getting enabled by dependency resolution\ndisable $EXTERNAL_LIBRARY_LIST $HWACCEL_LIBRARY_LIST\n\n# build settings\nSHFLAGS='-shared -Wl,-soname,$$(@F)'\nLIBPREF=\"lib\"\nLIBSUF=\".a\"\nFULLNAME='$(NAME)$(BUILDSUF)'\nLIBNAME='$(LIBPREF)$(FULLNAME)$(LIBSUF)'\nSLIBPREF=\"lib\"\nSLIBSUF=\".so\"\nSLIBNAME='$(SLIBPREF)$(FULLNAME)$(SLIBSUF)'\nSLIBNAME_WITH_VERSION='$(SLIBNAME).$(LIBVERSION)'\nSLIBNAME_WITH_MAJOR='$(SLIBNAME).$(LIBMAJOR)'\nLIB_INSTALL_EXTRA_CMD='$$(RANLIB) \"$(LIBDIR)/$(LIBNAME)\"'\nSLIB_INSTALL_NAME='$(SLIBNAME_WITH_VERSION)'\nSLIB_INSTALL_LINKS='$(SLIBNAME_WITH_MAJOR) $(SLIBNAME)'\nVERSION_SCRIPT_POSTPROCESS_CMD=\"cat\"\n\nasflags_filter=echo\ncflags_filter=echo\nldflags_filter=echo\n\nAS_C='-c'\nAS_O='-o $@'\nCC_C='-c'\nCC_E='-E -o $@'\nCC_O='-o $@'\nCXX_C='-c'\nCXX_O='-o $@'\nOBJCC_C='-c'\nOBJCC_E='-E -o $@'\nOBJCC_O='-o $@'\nX86ASM_O='-o $@'\nLD_O='-o $@'\nLD_LIB='-l%'\nLD_PATH='-L'\nHOSTCC_C='-c'\nHOSTCC_E='-E -o $@'\nHOSTCC_O='-o $@'\nHOSTLD_O='-o $@'\nNVCC_C='-c'\nNVCC_O='-o $@'\n\nhost_extralibs='-lm'\nhost_cflags_filter=echo\nhost_ldflags_filter=echo\n\ntarget_path='$(CURDIR)'\n\n# since the object filename is not given with the -MM flag, the compiler\n# is only able to print the basename, and we must add the path ourselves\nDEPCMD='$(DEP$(1)) $(DEP$(1)FLAGS) $($(1)DEP_FLAGS) $< 2>/dev/null | sed -e \"/^\\#.*/d\" -e \"s,^[[:space:]]*$(@F),$(@D)/$(@F),\" > $(@:.o=.d)'\nDEPFLAGS='-MM'\n\nmkdir -p ffbuild\n\n# find source path\nif test -f configure; then\n    source_path=.\nelif test -f src/configure; then\n    source_path=src\nelse\n    source_path=$(cd $(dirname \"$0\"); pwd)\n    case \"$source_path\" in\n        *[[:blank:]]*) die \"Out of tree builds are impossible with whitespace in source path.\" ;;\n    esac\n    test -e \"$source_path/config.h\" &&\n        die \"Out of tree builds are impossible with config.h in source dir.\"\nfi\n\nfor v in \"$@\"; do\n    r=${v#*=}\n    l=${v%\"$r\"}\n    r=$(sh_quote \"$r\")\n    FFMPEG_CONFIGURATION=\"${FFMPEG_CONFIGURATION# } ${l}${r}\"\ndone\n\nfind_things_extern(){\n    thing=$1\n    pattern=$2\n    file=$source_path/$3\n    out=${4:-$thing}\n    sed -n \"s/^[^#]*extern.*$pattern *ff_\\([^ ]*\\)_$thing;/\\1_$out/p\" \"$file\"\n}\n\nfind_filters_extern(){\n    file=$source_path/$1\n    sed -n 's/^extern const AVFilter ff_[avfsinkrc]\\{2,5\\}_\\([[:alnum:]_]\\{1,\\}\\);/\\1_filter/p' $file\n}\n\nFILTER_LIST=$(find_filters_extern libavfilter/allfilters.c)\nOUTDEV_LIST=$(find_things_extern muxer FFOutputFormat libavdevice/alldevices.c outdev)\nINDEV_LIST=$(find_things_extern demuxer FFInputFormat libavdevice/alldevices.c indev)\nMUXER_LIST=$(find_things_extern muxer FFOutputFormat libavformat/allformats.c)\nDEMUXER_LIST=$(find_things_extern demuxer FFInputFormat libavformat/allformats.c)\nENCODER_LIST=$(find_things_extern encoder FFCodec libavcodec/allcodecs.c)\nDECODER_LIST=$(find_things_extern decoder FFCodec libavcodec/allcodecs.c)\nCODEC_LIST=\"\n    $ENCODER_LIST\n    $DECODER_LIST\n\"\nPARSER_LIST=$(find_things_extern parser AVCodecParser libavcodec/parsers.c)\nBSF_LIST=$(find_things_extern bsf FFBitStreamFilter libavcodec/bitstream_filters.c)\nHWACCEL_LIST=$(find_things_extern hwaccel FFHWAccel libavcodec/hwaccels.h)\nPROTOCOL_LIST=$(find_things_extern protocol URLProtocol libavformat/protocols.c)\n\nAVCODEC_COMPONENTS_LIST=\"\n    $BSF_LIST\n    $DECODER_LIST\n    $ENCODER_LIST\n    $HWACCEL_LIST\n    $PARSER_LIST\n\"\n\nAVDEVICE_COMPONENTS_LIST=\"\n    $INDEV_LIST\n    $OUTDEV_LIST\n\"\n\nAVFILTER_COMPONENTS_LIST=\"\n    $FILTER_LIST\n\"\n\nAVFORMAT_COMPONENTS_LIST=\"\n    $DEMUXER_LIST\n    $MUXER_LIST\n    $PROTOCOL_LIST\n\"\n\nALL_COMPONENTS=\"\n    $AVCODEC_COMPONENTS_LIST\n    $AVDEVICE_COMPONENTS_LIST\n    $AVFILTER_COMPONENTS_LIST\n    $AVFORMAT_COMPONENTS_LIST\n\"\n\nfor n in $COMPONENT_LIST; do\n    v=$(toupper ${n%s})_LIST\n    eval enable \\$$v\n    eval ${n}_if_any=\"\\$$v\"\ndone\n\nenable $ARCH_EXT_LIST\n\ndie_unknown(){\n    echo \"Unknown option \\\"$1\\\".\"\n    echo \"See $0 --help for available options.\"\n    exit 1\n}\n\nprint_in_columns() {\n    tr ' ' '\\n' | sort | tr '\\r\\n' '  ' | awk -v col_width=24 -v width=\"$ncols\" '\n    {\n        num_cols = width > col_width ? int(width / col_width) : 1;\n        num_rows = int((NF + num_cols-1) / num_cols);\n        y = x = 1;\n        for (y = 1; y <= num_rows; y++) {\n            i = y;\n            for (x = 1; x <= num_cols; x++) {\n                if (i <= NF) {\n                  line = sprintf(\"%s%-\" col_width \"s\", line, $i);\n                }\n                i = i + num_rows;\n            }\n            print line; line = \"\";\n        }\n    }' | sed 's/ *$//'\n}\n\nshow_list() {\n    suffix=_$1\n    shift\n    echo $* | sed s/$suffix//g | print_in_columns\n    exit 0\n}\n\nrand_list(){\n    IFS=', '\n    set -- $*\n    unset IFS\n    for thing; do\n        comp=${thing%:*}\n        prob=${thing#$comp}\n        prob=${prob#:}\n        is_in ${comp} $COMPONENT_LIST && eval comp=\\$$(toupper ${comp%s})_LIST\n        echo \"prob ${prob:-0.5}\"\n        printf '%s\\n' $comp\n    done\n}\n\ndo_random(){\n    action=$1\n    shift\n    random_seed=$(awk \"BEGIN { srand($random_seed); print srand() }\")\n    $action $(rand_list \"$@\" | awk \"BEGIN { srand($random_seed) } \\$1 == \\\"prob\\\" { prob = \\$2; next } rand() < prob { print }\")\n}\n\n# deprecated components (disabled by default)\ndisable sonic_encoder sonic_ls_encoder\n\nfor opt do\n    optval=\"${opt#*=}\"\n    case \"$opt\" in\n        --extra-ldflags=*)\n            add_ldflags $optval\n        ;;\n        --extra-ldexeflags=*)\n            add_ldexeflags $optval\n        ;;\n        --extra-ldsoflags=*)\n            add_ldsoflags $optval\n        ;;\n        --extra-ldlibflags=*)\n            warn \"The --extra-ldlibflags option is only provided for compatibility and will be\\n\"\\\n                 \"removed in the future. Use --extra-ldsoflags instead.\"\n            add_ldsoflags $optval\n        ;;\n        --extra-libs=*)\n            add_extralibs $optval\n        ;;\n        --disable-devices)\n            disable $INDEV_LIST $OUTDEV_LIST\n        ;;\n        --enable-debug=*)\n            debuglevel=\"$optval\"\n        ;;\n        --disable-programs)\n            disable $PROGRAM_LIST\n        ;;\n        --disable-everything)\n            map 'eval unset \\${$(toupper ${v%s})_LIST}' $COMPONENT_LIST\n        ;;\n        --disable-all)\n            map 'eval unset \\${$(toupper ${v%s})_LIST}' $COMPONENT_LIST\n            disable $LIBRARY_LIST $PROGRAM_LIST doc\n            enable avutil\n        ;;\n        --enable-random|--disable-random)\n            action=${opt%%-random}\n            do_random ${action#--} $COMPONENT_LIST\n        ;;\n        --enable-random=*|--disable-random=*)\n            action=${opt%%-random=*}\n            do_random ${action#--} $optval\n        ;;\n        --enable-sdl)\n            enable sdl2\n        ;;\n        --enable-lto*)\n            lto=-f${opt#--enable-}\n        ;;\n        --enable-*=*|--disable-*=*)\n            eval $(echo \"${opt%%=*}\" | sed 's/--/action=/;s/-/ thing=/')\n            is_in \"${thing}s\" $COMPONENT_LIST || die_unknown \"$opt\"\n            eval list=\\$$(toupper $thing)_LIST\n            name=$(echo \"${optval}\" | sed \"s/,/_${thing}|/g\")_${thing}\n            list=$(filter \"$name\" $list)\n            [ \"$list\" = \"\" ] && warn \"Option $opt did not match anything\"\n            test $action = enable && warn_if_gets_disabled $list\n            $action $list\n        ;;\n        --enable-?*|--disable-?*)\n            eval $(echo \"$opt\" | sed 's/--/action=/;s/-/ option=/;s/-/_/g')\n            if is_in $option $COMPONENT_LIST; then\n                test $action = disable && action=unset\n                eval $action \\$$(toupper ${option%s})_LIST\n            elif is_in $option $CMDLINE_SELECT; then\n                $action $option\n            else\n                die_unknown $opt\n            fi\n        ;;\n        --list-*)\n            NAME=\"${opt#--list-}\"\n            is_in $NAME $COMPONENT_LIST || die_unknown $opt\n            NAME=${NAME%s}\n            eval show_list $NAME \\$$(toupper $NAME)_LIST\n        ;;\n        --help|-h) show_help\n        ;;\n        --quiet|-q) quiet=yes\n        ;;\n        --fatal-warnings) enable fatal_warnings\n        ;;\n        --libfuzzer=*)\n            libfuzzer_path=\"$optval\"\n        ;;\n        *)\n            optname=\"${opt%%=*}\"\n            optname=\"${optname#--}\"\n            optname=$(echo \"$optname\" | sed 's/-/_/g')\n            if is_in $optname $CMDLINE_SET; then\n                eval $optname='$optval'\n            elif is_in $optname $CMDLINE_APPEND; then\n                append $optname \"$optval\"\n            else\n                die_unknown $opt\n            fi\n        ;;\n    esac\ndone\n\nfor e in $env; do\n    eval \"export $e\"\ndone\n\nif disabled autodetect; then\n\n    # Unless iconv is explicitely disabled by the user, we still want to probe\n    # for the iconv from the libc.\n    disabled iconv || enable libc_iconv\n\n    disable_weak $EXTERNAL_AUTODETECT_LIBRARY_LIST\n    disable_weak $HWACCEL_AUTODETECT_LIBRARY_LIST\nfi\n# Mark specifically enabled, but normally autodetected libraries as requested.\nfor lib in $AUTODETECT_LIBS; do\n    enabled $lib && request $lib\ndone\n#TODO: switch to $AUTODETECT_LIBS when $THREADS_LIST is supported the same way\nenable_weak $EXTERNAL_AUTODETECT_LIBRARY_LIST\nenable_weak $HWACCEL_AUTODETECT_LIBRARY_LIST\n\ndisabled logging && logfile=/dev/null\n\n# command line configuration sanity checks\n\n# we need to build at least one lib type\nif ! enabled_any static shared; then\n    cat <<EOF\nAt least one library type must be built.\nSpecify --enable-static to build the static libraries or --enable-shared to\nbuild the shared libraries as well. To only build the shared libraries specify\n--disable-static in addition to --enable-shared.\nEOF\n    exit 1\nfi\n\ndie_license_disabled() {\n    enabled $1 || { enabled $v && die \"$v is $1 and --enable-$1 is not specified.\"; }\n}\n\ndie_license_disabled_gpl() {\n    enabled $1 || { enabled $v && die \"$v is incompatible with the gpl and --enable-$1 is not specified.\"; }\n}\n\nmap \"die_license_disabled gpl\"      $EXTERNAL_LIBRARY_GPL_LIST $EXTERNAL_LIBRARY_GPLV3_LIST\nmap \"die_license_disabled version3\" $EXTERNAL_LIBRARY_VERSION3_LIST $EXTERNAL_LIBRARY_GPLV3_LIST\n\nenabled gpl && map \"die_license_disabled_gpl nonfree\" $EXTERNAL_LIBRARY_NONFREE_LIST\nmap \"die_license_disabled nonfree\" $HWACCEL_LIBRARY_NONFREE_LIST\n\nenabled version3 && { enabled gpl && enable gplv3 || enable lgplv3; }\n\nif enabled nonfree; then\n    license=\"nonfree and unredistributable\"\nelif enabled gplv3; then\n    license=\"GPL version 3 or later\"\nelif enabled lgplv3; then\n    license=\"LGPL version 3 or later\"\nelif enabled gpl; then\n    license=\"GPL version 2 or later\"\nelse\n    license=\"LGPL version 2.1 or later\"\nfi\n\nenabled_all gnutls openssl &&\n    die \"GnuTLS and OpenSSL must not be enabled at the same time.\"\n\nenabled_all gnutls mbedtls &&\n    die \"GnuTLS and mbedTLS must not be enabled at the same time.\"\n\nenabled_all openssl mbedtls &&\n    die \"OpenSSL and mbedTLS must not be enabled at the same time.\"\n\n# Disable all the library-specific components if the library itself\n# is disabled, see AVCODEC_LIST and following _LIST variables.\n\ndisable_components(){\n    disabled ${1} && disable $(\n        eval components=\"\\$$(toupper ${1})_COMPONENTS\"\n        map 'eval echo \\${$(toupper ${v%s})_LIST}' $components\n    )\n}\n\nmap 'disable_components $v' $LIBRARY_LIST\n\necho \"# $0 $FFMPEG_CONFIGURATION\" > $logfile\nset >> $logfile\n\ntest -n \"$valgrind\" && toolchain=\"valgrind-memcheck\"\n\nenabled ossfuzz && ! echo $CFLAGS | grep -q -- \"-fsanitize=\"  && ! echo $CFLAGS | grep -q -- \"-fcoverage-mapping\" &&{\n    add_cflags  -fsanitize=address,undefined -fsanitize-coverage=trace-pc-guard,trace-cmp -fno-omit-frame-pointer\n    add_ldflags -fsanitize=address,undefined -fsanitize-coverage=trace-pc-guard,trace-cmp\n}\n\nadd_sanitizer_flags(){\n    case \"$1\" in\n        asan)\n            add_cflags  -fsanitize=address\n            add_ldflags -fsanitize=address\n        ;;\n        lsan)\n            add_cflags  -fsanitize=leak\n            add_ldflags -fsanitize=leak\n        ;;\n        msan)\n            add_cflags  -fsanitize=memory -fsanitize-memory-track-origins\n            add_ldflags -fsanitize=memory\n        ;;\n        tsan)\n            add_cflags  -fsanitize=thread\n            add_ldflags -fsanitize=thread\n        ;;\n        usan)\n            add_cflags  -fsanitize=undefined\n            add_ldflags -fsanitize=undefined\n        ;;\n        ?*)\n            die \"Unknown sanitizer $1\"\n        ;;\n    esac\n}\n\ncase \"$toolchain\" in\n    clang-*)\n        add_sanitizer_flags \"${toolchain#clang-}\"\n        cc_default=\"clang\"\n        cxx_default=\"clang++\"\n    ;;\n    gcc-*)\n        add_sanitizer_flags \"${toolchain#gcc-}\"\n        cc_default=\"gcc\"\n        cxx_default=\"g++\"\n        # In case of tsan with gcc, PIC has to be enabled\n        if [ \"${toolchain#gcc-}\" = \"tsan\" ]; then\n            add_cflags  -fPIC\n            add_ldflags -fPIC\n        fi\n    ;;\n    valgrind-*)\n        target_exec_default=\"valgrind\"\n        case \"$toolchain\" in\n            valgrind-massif)\n                target_exec_args=\"--tool=massif --alloc-fn=av_malloc --alloc-fn=av_mallocz --alloc-fn=av_calloc --alloc-fn=av_fast_padded_malloc --alloc-fn=av_fast_malloc --alloc-fn=av_realloc_f --alloc-fn=av_fast_realloc --alloc-fn=av_realloc\"\n                ;;\n            valgrind-memcheck)\n                target_exec_args=\"--error-exitcode=1 --malloc-fill=0x2a --track-origins=yes --leak-check=full --gen-suppressions=all --suppressions=$source_path/tests/fate-valgrind.supp\"\n                ;;\n        esac\n    ;;\n    msvc)\n        cl_major_ver=$(cl.exe 2>&1 | sed -n 's/.*Version \\([[:digit:]]\\{1,\\}\\)\\..*/\\1/p')\n        if [ -z \"$cl_major_ver\" ] || [ $cl_major_ver -ge 18 ]; then\n            cc_default=\"cl.exe\"\n            cxx_default=\"cl.exe\"\n        else\n            die \"Unsupported MSVC version (2013 or newer required)\"\n        fi\n        ld_default=\"$source_path/compat/windows/mslink\"\n        windres_default=\"$source_path/compat/windows/mswindres\"\n        nm_default=\"dumpbin.exe -symbols\"\n        ar_default=\"lib.exe\"\n        case \"${arch:-$arch_default}\" in\n        aarch64|arm64)\n            as_default=\"armasm64.exe\"\n            ;;\n        arm*)\n            as_default=\"armasm.exe\"\n            ;;\n        esac\n        target_os_default=\"win32\"\n        # Use a relative path for TMPDIR. This makes sure all the\n        # ffconf temp files are written with a relative path, avoiding\n        # issues with msys/win32 path conversion for MSVC parameters\n        # such as -Fo<file> or -out:<file>.\n        TMPDIR=.\n    ;;\n    icl)\n        cc_default=\"icl\"\n        ld_default=\"xilink\"\n        nm_default=\"dumpbin -symbols\"\n        ar_default=\"xilib\"\n        target_os_default=\"win32\"\n        TMPDIR=.\n    ;;\n    gcov)\n        add_cflags  -fprofile-arcs -ftest-coverage\n        add_ldflags -fprofile-arcs -ftest-coverage\n    ;;\n    llvm-cov)\n        add_cflags -fprofile-arcs -ftest-coverage\n        add_ldflags --coverage\n    ;;\n    hardened)\n        add_cppflags -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=2\n        add_cflags   -fno-strict-overflow -fstack-protector-all\n        add_ldflags  -Wl,-z,relro -Wl,-z,now\n        add_cflags   -fPIE\n        add_ldexeflags -fPIE -pie\n    ;;\n    ?*)\n        die \"Unknown toolchain $toolchain\"\n    ;;\nesac\n\nif test -n \"$cross_prefix\"; then\n    test -n \"$arch\" && test -n \"$target_os\" ||\n        die \"Must specify target arch (--arch) and OS (--target-os) when cross-compiling\"\n    enable cross_compile\nfi\n\nset_default target_os\nif test \"$target_os\" = android; then\n    cc_default=\"clang\"\nfi\n\nar_default=\"${cross_prefix}${ar_default}\"\ncc_default=\"${cross_prefix}${cc_default}\"\ncxx_default=\"${cross_prefix}${cxx_default}\"\nnm_default=\"${cross_prefix}${nm_default}\"\npkg_config_default=\"${cross_prefix}${pkg_config_default}\"\nranlib_default=\"${cross_prefix}${ranlib_default}\"\nstrip_default=\"${cross_prefix}${strip_default}\"\nwindres_default=\"${cross_prefix}${windres_default}\"\n\nsysinclude_default=\"${sysroot}/usr/include\"\n\nif enabled cuda_sdk; then\n    warn \"Option --enable-cuda-sdk is deprecated. Use --enable-cuda-nvcc instead.\"\n    enable cuda_nvcc\nfi\n\nif enabled cuda_nvcc; then\n    nvcc_default=\"nvcc\"\n    nvccflags_default=\"-gencode arch=compute_30,code=sm_30 -O2\"\nelse\n    nvcc_default=\"clang\"\n    nvccflags_default=\"--cuda-gpu-arch=sm_30 -O2\"\n    NVCC_C=\"\"\nfi\n\nset_default nvcc\n\nif enabled cuda_nvcc; then\n    if $nvcc $nvccflags_default 2>&1 | grep -qi unsupported; then\n        nvccflags_default=\"-gencode arch=compute_60,code=sm_60 -O2\"\n    fi\nfi\n\nset_default arch cc cxx doxygen pkg_config ranlib strip sysinclude \\\n    target_exec x86asmexe metalcc metallib stdc stdcxx\nenabled cross_compile || host_cc_default=$cc\nset_default host_cc\n\nif ${ranlib} 2>&1 | grep -q \"\\-D \"; then\n    ranlib=\"${ranlib} -D\"\nfi\n\npkg_config_fail_message=\"\"\nif ! $pkg_config --version >/dev/null 2>&1; then\n    warn \"$pkg_config not found, library detection may fail.\"\n    pkg_config=false\nelif is_in -static $cc $LDFLAGS && ! is_in --static $pkg_config $pkg_config_flags; then\n    pkg_config_fail_message=\"\nNote: When building a static binary, add --pkg-config-flags=\\\"--static\\\".\"\nfi\n\nif test $doxygen != $doxygen_default && \\\n  ! $doxygen --version >/dev/null 2>&1; then\n    warn \"Specified doxygen \\\"$doxygen\\\" not found, API documentation will fail to build.\"\nfi\n\nexesuf() {\n    case $1 in\n        mingw32*|mingw64*|msys*|win32|win64|cygwin*|*-dos|freedos|opendos|os/2*|symbian) echo .exe ;;\n    esac\n}\n\nEXESUF=$(exesuf $target_os)\nHOSTEXESUF=$(exesuf $host_os)\n\n# set temporary file name\n: ${TMPDIR:=$TEMPDIR}\n: ${TMPDIR:=$TMP}\n: ${TMPDIR:=/tmp}\n\nif [ -n \"$tempprefix\" ] ; then\n    mktemp(){\n        tmpname=\"$tempprefix.${HOSTNAME}.${UID}\"\n        echo \"$tmpname\"\n        mkdir \"$tmpname\"\n    }\nelif ! test_cmd mktemp -u XXXXXX; then\n    # simple replacement for missing mktemp\n    # NOT SAFE FOR GENERAL USE\n    mktemp(){\n        tmpname=\"${2%%XXX*}.${HOSTNAME}.${UID}.$$\"\n        echo \"$tmpname\"\n        mkdir \"$tmpname\"\n    }\nfi\n\nFFTMPDIR=$(mktemp -d \"${TMPDIR}/ffconf.XXXXXXXX\" 2> /dev/null) ||\n    die \"Unable to create temporary directory in $TMPDIR.\"\n\ntmpfile(){\n    tmp=\"${FFTMPDIR}/test\"$2\n    (set -C; exec > $tmp) 2> /dev/null ||\n        die \"Unable to create temporary file in $FFTMPDIR.\"\n    eval $1=$tmp\n}\n\ntrap 'rm -rf -- \"$FFTMPDIR\"' EXIT\ntrap 'exit 2' INT\n\ntmpfile TMPASM .asm\ntmpfile TMPC   .c\ntmpfile TMPCPP .cpp\ntmpfile TMPE   $EXESUF\ntmpfile TMPH   .h\ntmpfile TMPM   .m\ntmpfile TMPCU  .cu\ntmpfile TMPO   .o\ntmpfile TMPS   .S\ntmpfile TMPSH  .sh\ntmpfile TMPV   .ver\n\nunset -f mktemp\n\nchmod +x $TMPE\n\n# make sure we can execute files in $TMPDIR\ncat > $TMPSH 2>> $logfile <<EOF\n#!/bin/sh\nEOF\nchmod +x $TMPSH >> $logfile 2>&1\nif ! $TMPSH >> $logfile 2>&1; then\n    cat <<EOF\nUnable to create and execute files in $TMPDIR.  Set the TMPDIR environment\nvariable to another directory and make sure that it is not mounted noexec.\nEOF\n    die \"Sanity test failed.\"\nfi\n\narmasm_flags(){\n    for flag; do\n        case $flag in\n            # Filter out MSVC cl.exe options from cflags that shouldn't\n            # be passed to gas-preprocessor\n            -M[TD]*)                                            ;;\n            *)                  echo $flag                      ;;\n        esac\n   done\n}\n\ncparser_flags(){\n    for flag; do\n        case $flag in\n            -Wno-switch)             echo -Wno-switch-enum ;;\n            -Wno-format-zero-length) ;;\n            -Wdisabled-optimization) ;;\n            -Wno-pointer-sign)       echo -Wno-other ;;\n            *)                       echo $flag ;;\n        esac\n    done\n}\n\nmsvc_common_flags(){\n    for flag; do\n        case $flag in\n            # In addition to specifying certain flags under the compiler\n            # specific filters, they must be specified here as well or else the\n            # generic catch all at the bottom will print the original flag.\n            -Wall)                ;;\n            -Wextra)              ;;\n            -std=c*)              echo /std:${flag#-std=};;\n            # Common flags\n            -fomit-frame-pointer) ;;\n            -g)                   echo -Z7 ;;\n            -fno-math-errno)      ;;\n            -fno-common)          ;;\n            -fno-signed-zeros)    ;;\n            -fPIC)                ;;\n            -mthumb)              ;;\n            -march=*)             ;;\n            -mfp16-format=*)      ;;\n            -lz)                  echo zlib.lib ;;\n            -lx264)               echo libx264.lib ;;\n            -lstdc++)             ;;\n            -l*)                  echo ${flag#-l}.lib ;;\n            -LARGEADDRESSAWARE)   echo $flag ;;\n            -L*)                  echo -libpath:${flag#-L} ;;\n            -Wl,*)                ;;\n            *)                    echo $flag ;;\n        esac\n    done\n}\n\nmsvc_flags(){\n    msvc_common_flags \"$@\"\n    for flag; do\n        case $flag in\n            -Wall)                echo -W3 -wd4018 -wd4146 -wd4244 -wd4305     \\\n                                       -wd4554 ;;\n            -Wextra)              echo -W4 -wd4244 -wd4127 -wd4018 -wd4389     \\\n                                       -wd4146 -wd4057 -wd4204 -wd4706 -wd4305 \\\n                                       -wd4152 -wd4324 -we4013 -wd4100 -wd4214 \\\n                                       -wd4307 \\\n                                       -wd4273 -wd4554 -wd4701 -wd4703 ;;\n        esac\n    done\n}\n\nicl_flags(){\n    msvc_common_flags \"$@\"\n    for flag; do\n        case $flag in\n            # Despite what Intel's documentation says -Wall, which is supported\n            # on Windows, does enable remarks so disable them here.\n            -Wall)                echo $flag -Qdiag-disable:remark ;;\n            -std=$stdc)           echo -Qstd=$stdc ;;\n            -flto*)               echo -ipo ;;\n        esac\n    done\n}\n\nicc_flags(){\n    for flag; do\n        case $flag in\n            -flto*)               echo -ipo ;;\n            *)                    echo $flag ;;\n        esac\n    done\n}\n\nsuncc_flags(){\n    for flag; do\n        case $flag in\n            -march=*|-mcpu=*)\n                case \"${flag#*=}\" in\n                    native)                   echo -xtarget=native       ;;\n                    v9|niagara)               echo -xarch=sparc          ;;\n                    ultrasparc)               echo -xarch=sparcvis       ;;\n                    ultrasparc3|niagara2)     echo -xarch=sparcvis2      ;;\n                    i586|pentium)             echo -xchip=pentium        ;;\n                    i686|pentiumpro|pentium2) echo -xtarget=pentium_pro  ;;\n                    pentium3*|c3-2)           echo -xtarget=pentium3     ;;\n                    pentium-m)          echo -xarch=sse2 -xchip=pentium3 ;;\n                    pentium4*)          echo -xtarget=pentium4           ;;\n                    prescott|nocona)    echo -xarch=sse3 -xchip=pentium4 ;;\n                    *-sse3)             echo -xarch=sse3                 ;;\n                    core2)              echo -xarch=ssse3 -xchip=core2   ;;\n                    bonnell)                   echo -xarch=ssse3         ;;\n                    corei7|nehalem)            echo -xtarget=nehalem     ;;\n                    westmere)                  echo -xtarget=westmere    ;;\n                    silvermont)                echo -xarch=sse4_2        ;;\n                    corei7-avx|sandybridge)    echo -xtarget=sandybridge ;;\n                    core-avx*|ivybridge|haswell|broadwell|skylake*|knl)\n                                               echo -xarch=avx           ;;\n                    amdfam10|barcelona)        echo -xtarget=barcelona   ;;\n                    btver1)                    echo -xarch=amdsse4a      ;;\n                    btver2|bdver*|znver*)      echo -xarch=avx           ;;\n                    athlon-4|athlon-[mx]p)     echo -xarch=ssea          ;;\n                    k8|opteron|athlon64|athlon-fx)\n                                               echo -xarch=sse2a         ;;\n                    athlon*)                   echo -xarch=pentium_proa  ;;\n                esac\n                ;;\n            -std=$stdc)           echo -x$stdc            ;;\n            -fomit-frame-pointer) echo -xregs=frameptr    ;;\n            -fPIC)                echo -KPIC -xcode=pic32 ;;\n            -W*,*)                echo $flag              ;;\n            -f*-*|-W*|-mimpure-text)                      ;;\n            -shared)              echo -G                 ;;\n            *)                    echo $flag              ;;\n        esac\n    done\n}\n\nprobe_cc(){\n    pfx=$1\n    _cc=$2\n    first=$3\n\n    unset _type _ident _cc_c _cc_e _cc_o _flags _cflags\n    unset _ld_o _ldflags _ld_lib _ld_path\n    unset _depflags _DEPCMD _DEPFLAGS\n    _flags_filter=echo\n\n    if $_cc --version 2>&1 | grep -q '^GNU assembler'; then\n        true # no-op to avoid reading stdin in following checks\n    elif $_cc -v 2>&1 | grep -q '^gcc.*LLVM'; then\n        _type=llvm_gcc\n        gcc_extra_ver=$(expr \"$($_cc --version 2>/dev/null | head -n1)\" : '.*\\((.*)\\)')\n        _ident=\"llvm-gcc $($_cc -dumpversion 2>/dev/null) $gcc_extra_ver\"\n        _depflags='-MMD -MF $(@:.o=.d) -MT $@'\n        _cflags_speed='-O3'\n        _cflags_size='-Os'\n    elif $_cc -v 2>&1 | grep -qi ^gcc; then\n        _type=gcc\n        gcc_version=$($_cc --version | head -n1)\n        gcc_basever=$($_cc -dumpversion)\n        gcc_pkg_ver=$(expr \"$gcc_version\" : '[^ ]* \\(([^)]*)\\)')\n        gcc_ext_ver=$(expr \"$gcc_version\" : \".*$gcc_pkg_ver $gcc_basever \\\\(.*\\\\)\")\n        _ident=$(cleanws \"gcc $gcc_basever $gcc_pkg_ver $gcc_ext_ver\")\n        case $gcc_basever in\n            2) ;;\n            2.*) ;;\n            *) _depflags='-MMD -MF $(@:.o=.d) -MT $@' ;;\n        esac\n        if [ \"$first\" = true ]; then\n            case $gcc_basever in\n                4.2*)\n                warn \"gcc 4.2 is outdated and may miscompile FFmpeg. Please use a newer compiler.\" ;;\n            esac\n        fi\n        _cflags_speed='-O3'\n        _cflags_size='-Os'\n    elif $_cc --version 2>/dev/null | grep -q ^icc; then\n        _type=icc\n        _ident=$($_cc --version | head -n1)\n        _depflags='-MMD'\n        _cflags_speed='-O3'\n        _cflags_size='-Os'\n        _cflags_noopt='-O1'\n        _flags_filter=icc_flags\n    elif $_cc -v 2>&1 | grep -q xlc; then\n        _type=xlc\n        _ident=$($_cc -qversion 2>/dev/null | head -n1)\n        _cflags_speed='-O5'\n        _cflags_size='-O5 -qcompact'\n    elif $_cc --vsn 2>/dev/null | grep -Eq \"ARM (C/C\\+\\+ )?Compiler\"; then\n        test -d \"$sysroot\" || die \"No valid sysroot specified.\"\n        _type=armcc\n        _ident=$($_cc --vsn | grep -i build | head -n1 | sed 's/.*: //')\n        armcc_conf=\"$PWD/armcc.conf\"\n        $_cc --arm_linux_configure                 \\\n             --arm_linux_config_file=\"$armcc_conf\" \\\n             --configure_sysroot=\"$sysroot\"        \\\n             --configure_cpp_headers=\"$sysinclude\" >>$logfile 2>&1 ||\n             die \"Error creating armcc configuration file.\"\n        $_cc --vsn | grep -q RVCT && armcc_opt=rvct || armcc_opt=armcc\n        _flags=\"--arm_linux_config_file=$armcc_conf --translate_gcc\"\n        as_default=\"${cross_prefix}gcc\"\n        _depflags='-MMD'\n        _cflags_speed='-O3'\n        _cflags_size='-Os'\n    elif $_cc -v 2>&1 | grep -q clang && ! $_cc -? > /dev/null 2>&1; then\n        _type=clang\n        _ident=$($_cc --version 2>/dev/null | head -n1)\n        _depflags='-MMD -MF $(@:.o=.d) -MT $@'\n        _cflags_speed='-O3'\n        _cflags_size='-Oz'\n    elif $_cc -V 2>&1 | grep -q Sun; then\n        _type=suncc\n        _ident=$($_cc -V 2>&1 | head -n1 | cut -d' ' -f 2-)\n        _DEPCMD='$(DEP$(1)) $(DEP$(1)FLAGS) $($(1)DEP_FLAGS) $< | sed -e \"1s,^.*: ,$@: ,\" -e \"\\$$!s,\\$$, \\\\\\,\" -e \"1!s,^.*: , ,\" > $(@:.o=.d)'\n        _DEPFLAGS='-xM1 -x$stdc'\n        _ldflags='-std=$stdc'\n        _cflags_speed='-O5'\n        _cflags_size='-O5 -xspace'\n        _flags_filter=suncc_flags\n    elif $_cc -v 2>&1 | grep -q 'PathScale\\|Path64'; then\n        _type=pathscale\n        _ident=$($_cc -v 2>&1 | head -n1 | tr -d :)\n        _depflags='-MMD -MF $(@:.o=.d) -MT $@'\n        _cflags_speed='-O2'\n        _cflags_size='-Os'\n        _flags_filter='filter_out -Wdisabled-optimization'\n    elif $_cc -v 2>&1 | grep -q Open64; then\n        _type=open64\n        _ident=$($_cc -v 2>&1 | head -n1 | tr -d :)\n        _depflags='-MMD -MF $(@:.o=.d) -MT $@'\n        _cflags_speed='-O2'\n        _cflags_size='-Os'\n        _flags_filter='filter_out -Wdisabled-optimization|-Wtype-limits|-fno-signed-zeros'\n    elif $_cc 2>&1 | grep -q 'Microsoft.*ARM.*Assembler'; then\n        _type=armasm\n        _ident=$($_cc | head -n1)\n        # 4509: \"This form of conditional instruction is deprecated\"\n        _flags=\"-nologo -ignore 4509\"\n        _flags_filter=armasm_flags\n    elif $_cc 2>&1 | grep -q Intel; then\n        _type=icl\n        _ident=$($_cc 2>&1 | head -n1)\n        _depflags='-QMMD -QMF$(@:.o=.d) -QMT$@'\n        # Not only is O3 broken on 13.x+ but it is slower on all previous\n        # versions (tested) as well.\n        _cflags_speed=\"-O2\"\n        _cflags_size=\"-O1 -Oi\" # -O1 without -Oi miscompiles stuff\n        if $_cc 2>&1 | grep -q Linker; then\n            _ld_o='-out:$@'\n        else\n            _ld_o='-Fe$@'\n        fi\n        _cc_o='-Fo$@'\n        _cc_e='-P'\n        _flags_filter=icl_flags\n        _ld_lib='lib%.a'\n        _ld_path='-libpath:'\n        # -Qdiag-error to make icl error when seeing certain unknown arguments\n        _flags='-nologo -Qdiag-error:4044,10157'\n        # -Qvec- -Qsimd- to prevent miscompilation, -GS, fp:precise for consistency\n        # with MSVC which enables it by default.\n        _cflags='-Qms0 -Qvec- -Qsimd- -GS -fp:precise'\n        disable stripping\n    elif $_cc -? 2>/dev/null | grep -q 'LLVM.*Linker'; then\n        # lld can emulate multiple different linkers; in ms link.exe mode,\n        # the -? parameter gives the help output which contains an identifyable\n        # string, while it gives an error in other modes.\n        _type=lld-link\n        # The link.exe mode doesn't have a switch for getting the version,\n        # but we can force it back to gnu mode and get the version from there.\n        _ident=$($_cc -flavor gnu --version 2>/dev/null)\n        _ld_o='-out:$@'\n        _flags_filter=msvc_flags\n        _ld_lib='lib%.a'\n        _ld_path='-libpath:'\n    elif $_cc -nologo- 2>&1 | grep -q Microsoft || { $_cc -v 2>&1 | grep -q clang && $_cc -? > /dev/null 2>&1; }; then\n        _type=msvc\n        if $_cc -nologo- 2>&1 | grep -q Microsoft; then\n            _ident=$($_cc 2>&1 | head -n1 | tr -d '\\r')\n        else\n            _ident=$($_cc --version 2>/dev/null | head -n1 | tr -d '\\r')\n        fi\n        if [ -x \"$(command -v wslpath)\" ]; then\n            _DEPCMD='$(DEP$(1)) $(DEP$(1)FLAGS) $($(1)DEP_FLAGS) $< 2>&1 | awk '\\''/including/ { sub(/^.*file: */, \"\"); if (!match($$0, / /)) { print $$0 } }'\\'' | xargs -r -d\\\\n -n1 wslpath -u | awk '\\''BEGIN { printf \"%s:\", \"$@\" }; { sub(/\\r/,\"\"); printf \" %s\", $$0 }; END { print \"\" }'\\'' > $(@:.o=.d)'\n\n        else\n            _DEPCMD='$(DEP$(1)) $(DEP$(1)FLAGS) $($(1)DEP_FLAGS) $< 2>&1 | awk '\\''/including/ { sub(/^.*file: */, \"\"); gsub(/\\\\/, \"/\"); if (!match($$0, / /)) print \"$@:\", $$0 }'\\'' > $(@:.o=.d)'\n        fi\n        _DEPFLAGS='$(CPPFLAGS) $(CFLAGS) -showIncludes -Zs'\n        _cflags_speed=\"-O2\"\n        _cflags_size=\"-O1\"\n        _cflags_noopt=\"-O1\"\n        if $_cc -nologo- 2>&1 | grep -q Linker; then\n            _ld_o='-out:$@'\n        else\n            _ld_o='-Fe$@'\n        fi\n        _cc_o='-Fo$@'\n        _cc_e='-P -Fi$@'\n        _flags_filter=msvc_flags\n        _ld_lib='lib%.a'\n        _ld_path='-libpath:'\n        _flags='-nologo'\n        disable stripping\n    elif $_cc --version 2>/dev/null | grep -q ^cparser; then\n        _type=cparser\n        _ident=$($_cc --version | head -n1)\n        _depflags='-MMD'\n        _cflags_speed='-O4'\n        _cflags_size='-O2'\n        _flags_filter=cparser_flags\n    fi\n\n    eval ${pfx}_type=\\$_type\n    eval ${pfx}_ident=\\$_ident\n}\n\nset_ccvars(){\n    eval ${1}_C=\\${_cc_c-\\${${1}_C}}\n    eval ${1}_E=\\${_cc_e-\\${${1}_E}}\n    eval ${1}_O=\\${_cc_o-\\${${1}_O}}\n\n    if [ -n \"$_depflags\" ]; then\n        eval ${1}_DEPFLAGS=\\$_depflags\n    else\n        eval ${1}DEP=\\${_DEPCMD:-\\$DEPCMD}\n        eval ${1}DEP_FLAGS=\\${_DEPFLAGS:-\\$DEPFLAGS}\n        eval DEP${1}FLAGS=\\$_flags\n    fi\n}\n\nprobe_cc cc \"$cc\" \"true\"\ncflags_filter=$_flags_filter\ncflags_speed=$_cflags_speed\ncflags_size=$_cflags_size\ncflags_noopt=$_cflags_noopt\nadd_cflags $_flags $_cflags\ncc_ldflags=$_ldflags\nset_ccvars CC\nset_ccvars CXX\n\nprobe_cc hostcc \"$host_cc\"\nhost_cflags_filter=$_flags_filter\nhost_cflags_speed=$_cflags_speed\nadd_host_cflags  $_flags $_cflags\nset_ccvars HOSTCC\n\ntest -n \"$cc_type\" && enable $cc_type ||\n    warn \"Unknown C compiler $cc, unable to select optimal CFLAGS\"\n\n: ${as_default:=$cc}\n: ${objcc_default:=$cc}\n: ${dep_cc_default:=$cc}\n: ${ld_default:=$cc}\n: ${host_ld_default:=$host_cc}\nset_default ar as objcc dep_cc ld ln_s host_ld windres\n\nprobe_cc as \"$as\"\nasflags_filter=$_flags_filter\nadd_asflags $_flags $_cflags\nset_ccvars AS\n\nprobe_cc objcc \"$objcc\"\nobjcflags_filter=$_flags_filter\nadd_objcflags $_flags $_cflags\nset_ccvars OBJC\n\nprobe_cc ld \"$ld\"\nldflags_filter=$_flags_filter\nadd_ldflags $_flags $_ldflags\ntest \"$cc_type\" != \"$ld_type\" && add_ldflags $cc_ldflags\nLD_O=${_ld_o-$LD_O}\nLD_LIB=${_ld_lib-$LD_LIB}\nLD_PATH=${_ld_path-$LD_PATH}\n\nprobe_cc hostld \"$host_ld\"\nhost_ldflags_filter=$_flags_filter\nadd_host_ldflags $_flags $_ldflags\nHOSTLD_O=${_ld_o-$HOSTLD_O}\n\nif [ -z \"$CC_DEPFLAGS\" ] && [ \"$dep_cc\" != \"$cc\" ]; then\n    probe_cc depcc \"$dep_cc\"\n    CCDEP=${_DEPCMD:-$DEPCMD}\n    CCDEP_FLAGS=${_DEPFLAGS:=$DEPFLAGS}\n    DEPCCFLAGS=$_flags\nfi\n\nif $ar 2>&1 | grep -q Microsoft; then\n    arflags=\"-nologo\"\n    ar_o='-out:$@'\nelif $ar 2>&1 | grep -q \"\\[D\\] \"; then\n    arflags=\"rcD\"\n    ar_o='$@'\nelse\n    arflags=\"rc\"\n    ar_o='$@'\nfi\n\nadd_cflags $extra_cflags\nadd_cxxflags $extra_cxxflags\nadd_objcflags $extra_objcflags\nadd_asflags $extra_cflags\n\nif test -n \"$sysroot\"; then\n    case \"$cc_type\" in\n        gcc|llvm_gcc|clang)\n            add_cppflags --sysroot=\"$sysroot\"\n            add_ldflags --sysroot=\"$sysroot\"\n        ;;\n    esac\nfi\n\nif test \"$cpu\" = host; then\n    enabled cross_compile &&\n        warn \"--cpu=host makes no sense when cross-compiling.\"\n\n    case \"$cc_type\" in\n        gcc|llvm_gcc)\n            check_native(){\n                $cc $1=native -v -c -o $TMPO $TMPC >$TMPE 2>&1 || return\n                sed -n \"/cc1.*$1=/{\n                            s/.*$1=\\\\([^ ]*\\\\).*/\\\\1/\n                            p\n                            q\n                        }\" $TMPE\n            }\n            cpu=$(check_native -march || check_native -mcpu)\n        ;;\n        clang)\n            check_native(){\n                $cc $1=native -v -c -o $TMPO $TMPC >$TMPE 2>&1 || return\n                sed -n \"/cc1.*-target-cpu /{\n                            s/.*-target-cpu \\\\([^ ]*\\\\).*/\\\\1/\n                            p\n                            q\n                        }\" $TMPE\n            }\n            cpu=$(check_native -march)\n        ;;\n    esac\n\n    test \"${cpu:-host}\" = host &&\n        die \"--cpu=host not supported with compiler $cc\"\nfi\n\n# Deal with common $arch aliases\ncase \"$arch\" in\n    aarch64|arm64)\n        arch=\"aarch64\"\n    ;;\n    arm*|iPad*|iPhone*)\n        arch=\"arm\"\n    ;;\n    loongarch*)\n        arch=\"loongarch\"\n    ;;\n    mips*|IP*)\n        case \"$arch\" in\n        *el)\n            add_cppflags -EL\n            add_ldflags -EL\n        ;;\n        *eb)\n            add_cppflags -EB\n            add_ldflags -EB\n        ;;\n        esac\n        arch=\"mips\"\n    ;;\n    parisc*|hppa*)\n        arch=\"parisc\"\n    ;;\n    \"Power Macintosh\"|ppc*|powerpc*)\n        arch=\"ppc\"\n    ;;\n    riscv*)\n        arch=\"riscv\"\n    ;;\n    s390|s390x)\n        arch=\"s390\"\n    ;;\n    sun4*|sparc*)\n        arch=\"sparc\"\n    ;;\n    tilegx|tile-gx)\n        arch=\"tilegx\"\n    ;;\n    wasm*)\n        arch=\"wasm\"\n    ;;\n    i[3-6]86*|i86pc|BePC|x86pc|x86_64|x86_32|amd64)\n        arch=\"x86\"\n    ;;\nesac\n\nis_in $arch $ARCH_LIST || warn \"unknown architecture $arch\"\nenable $arch\n\n# Add processor-specific flags\nif enabled aarch64; then\n\n    case $cpu in\n        armv*)\n            cpuflags=\"-march=$cpu\"\n        ;;\n        *)\n            cpuflags=\"-mcpu=$cpu\"\n        ;;\n    esac\n\nelif enabled arm; then\n\n    check_arm_arch() {\n        test_cpp_condition stddef.h \\\n            \"defined __ARM_ARCH_${1}__ || defined __TARGET_ARCH_${2:-$1}\" \\\n            $cpuflags\n    }\n\n    probe_arm_arch() {\n        if   check_arm_arch 4;        then echo armv4\n        elif check_arm_arch 4T;       then echo armv4t\n        elif check_arm_arch 5;        then echo armv5\n        elif check_arm_arch 5E;       then echo armv5e\n        elif check_arm_arch 5T;       then echo armv5t\n        elif check_arm_arch 5TE;      then echo armv5te\n        elif check_arm_arch 5TEJ;     then echo armv5te\n        elif check_arm_arch 6;        then echo armv6\n        elif check_arm_arch 6J;       then echo armv6j\n        elif check_arm_arch 6K;       then echo armv6k\n        elif check_arm_arch 6Z;       then echo armv6z\n        elif check_arm_arch 6KZ;      then echo armv6zk\n        elif check_arm_arch 6ZK;      then echo armv6zk\n        elif check_arm_arch 6T2;      then echo armv6t2\n        elif check_arm_arch 7;        then echo armv7\n        elif check_arm_arch 7A  7_A;  then echo armv7-a\n        elif check_arm_arch 7S;       then echo armv7-a\n        elif check_arm_arch 7R  7_R;  then echo armv7-r\n        elif check_arm_arch 7M  7_M;  then echo armv7-m\n        elif check_arm_arch 7EM 7E_M; then echo armv7-m\n        elif check_arm_arch 8A  8_A;  then echo armv8-a\n        fi\n    }\n\n\n    case $cpu in\n        generic)\n            subarch=$(probe_arm_arch | sed 's/[^a-z0-9]//g')\n        ;;\n        armv*)\n            cpuflags=\"-march=$cpu\"\n            subarch=$(echo $cpu | sed 's/[^a-z0-9]//g')\n        ;;\n        *)\n            cpuflags=\"-mcpu=$cpu\"\n            case $cpu in\n                cortex-a*)                               subarch=armv7a  ;;\n                cortex-r*)                               subarch=armv7r  ;;\n                cortex-m*)                 enable thumb; subarch=armv7m  ;;\n                arm11*)                                  subarch=armv6   ;;\n                arm[79]*e*|arm9[24]6*|arm96*|arm102[26]) subarch=armv5te ;;\n                armv4*|arm7*|arm9[24]*)                  subarch=armv4   ;;\n                *)                             subarch=$(probe_arm_arch) ;;\n            esac\n        ;;\n    esac\n\n    case \"$subarch\" in\n        armv5t*)    enable fast_clz                ;;\n        armv[6-8]*)\n            enable fast_clz\n            disabled fast_unaligned || enable fast_unaligned\n            ;;\n    esac\n\n    test_cflags -mfp16-format=ieee && add_cflags -mfp16-format=ieee\n\nelif enabled loongarch; then\n\n    enable simd_align_32\n    enable fast_64bit\n    enable fast_clz\n    enable fast_unaligned\n    case $cpu in\n        la464)\n            cpuflags=\"-march=$cpu\"\n        ;;\n    esac\nelif enabled mips; then\n\n    if [ \"$cpu\" != \"generic\" ]; then\n        disable mips32r2\n        disable mips32r5\n        disable mips64r2\n        disable mips32r6\n        disable mips64r6\n        disable loongson2\n        disable loongson3\n        disable mipsdsp\n        disable mipsdspr2\n\n        cpuflags=\"-march=$cpu\"\n\n        case $cpu in\n            # General ISA levels\n            mips1|mips3)\n            ;;\n            mips32r2)\n                enable mips32r2\n            ;;\n            mips32r5)\n                enable mips32r2\n                enable mips32r5\n            ;;\n            mips64r2|mips64r5)\n                enable mips64r2\n                enable loongson3\n            ;;\n            # Cores from MIPS(MTI)\n            24kc)\n                disable mipsfpu\n                enable mips32r2\n            ;;\n            24kf*|24kec|34kc|74Kc|1004kc)\n                enable mips32r2\n            ;;\n            24kef*|34kf*|1004kf*)\n                enable mipsdsp\n                enable mips32r2\n            ;;\n            p5600)\n                enable mips32r2\n                enable mips32r5\n                check_cflags \"-mtune=p5600\" && check_cflags \"-msched-weight -mload-store-pairs -funroll-loops\"\n            ;;\n            i6400)\n                enable mips64r6\n                check_cflags \"-mtune=i6400 -mabi=64\" && check_cflags \"-msched-weight -mload-store-pairs -funroll-loops\" && check_ldflags \"-mabi=64\"\n            ;;\n            p6600)\n                enable mips64r6\n                check_cflags \"-mtune=p6600 -mabi=64\" && check_cflags \"-msched-weight -mload-store-pairs -funroll-loops\" && check_ldflags \"-mabi=64\"\n            ;;\n            # Cores from Loongson\n            loongson2e|loongson2f|loongson3*)\n                enable simd_align_16\n                enable fast_64bit\n                enable fast_clz\n                enable fast_cmov\n                enable fast_unaligned\n                disable aligned_stack\n                # When gcc version less than 5.3.0, add -fno-expensive-optimizations flag.\n                if test \"$cc_type\" = \"gcc\"; then\n                    case $gcc_basever in\n                        2|2.*|3.*|4.*|5.0|5.1|5.2)\n                        expensive_optimization_flag=\"-fno-expensive-optimizations\"\n                        ;;\n                        *)\n                        expensive_optimization_flag=\"\"\n                        ;;\n                    esac\n                fi\n\n                case $cpu in\n                    loongson3*)\n                        enable loongson3\n                        cpuflags=\"-march=loongson3a -mhard-float $expensive_optimization_flag\"\n                    ;;\n                    loongson2e)\n                        enable loongson2\n                        cpuflags=\"-march=loongson2e -mhard-float $expensive_optimization_flag\"\n                    ;;\n                    loongson2f)\n                        enable loongson2\n                        cpuflags=\"-march=loongson2f -mhard-float $expensive_optimization_flag\"\n                    ;;\n                esac\n            ;;\n            *)\n                warn \"unknown MIPS CPU\"\n            ;;\n        esac\n\n    else\n        disable mipsdsp\n        disable mipsdspr2\n        # Disable DSP stuff for generic CPU, it can't be detected at runtime.\n        warn 'generic cpu selected'\n    fi\n\nelif enabled ppc; then\n\n    disable ldbrx\n\n    case $(tolower $cpu) in\n        601|ppc601|powerpc601)\n            cpuflags=\"-mcpu=601\"\n            disable altivec\n        ;;\n        603*|ppc603*|powerpc603*)\n            cpuflags=\"-mcpu=603\"\n            disable altivec\n        ;;\n        604*|ppc604*|powerpc604*)\n            cpuflags=\"-mcpu=604\"\n            disable altivec\n        ;;\n        g3|75*|ppc75*|powerpc75*)\n            cpuflags=\"-mcpu=750\"\n            disable altivec\n        ;;\n        g4|745*|ppc745*|powerpc745*)\n            cpuflags=\"-mcpu=7450\"\n            disable vsx\n        ;;\n        74*|ppc74*|powerpc74*)\n            cpuflags=\"-mcpu=7400\"\n            disable vsx\n        ;;\n        g5|970|ppc970|powerpc970)\n            cpuflags=\"-mcpu=970\"\n            disable vsx\n        ;;\n        power[3-6]*)\n            cpuflags=\"-mcpu=$cpu\"\n            disable vsx\n        ;;\n        power[7-8]*)\n            cpuflags=\"-mcpu=$cpu\"\n        ;;\n        cell)\n            cpuflags=\"-mcpu=cell\"\n            enable ldbrx\n            disable vsx\n        ;;\n        e500mc)\n            cpuflags=\"-mcpu=e500mc\"\n            disable altivec\n        ;;\n        e500v2)\n            cpuflags=\"-mcpu=8548 -mhard-float -mfloat-gprs=double\"\n            disable altivec\n            disable dcbzl\n        ;;\n        e500)\n            cpuflags=\"-mcpu=8540 -mhard-float\"\n            disable altivec\n            disable dcbzl\n        ;;\n    esac\n\nelif enabled riscv; then\n\n    check_headers asm/hwprobe.h\n    check_headers sys/hwprobe.h\n\n    if test_cpp_condition stddef.h \"__riscv_zbb\"; then\n        enable fast_clz\n    fi\n    if test_cpp_condition stddef.h \"__riscv_zfhmin\"; then\n        enable fast_float16\n    fi\n\nelif enabled sparc; then\n\n    case $cpu in\n        cypress|f93[04]|tsc701|sparcl*|supersparc|hypersparc|niagara|v[789])\n            cpuflags=\"-mcpu=$cpu\"\n        ;;\n        ultrasparc*|niagara[234])\n            cpuflags=\"-mcpu=$cpu\"\n        ;;\n    esac\n\nelif enabled x86; then\n\n    case $cpu in\n        i[345]86|pentium)\n            cpuflags=\"-march=$cpu\"\n            disable i686\n            disable mmx\n        ;;\n        # targets that do NOT support nopl and conditional mov (cmov)\n        pentium-mmx|k6|k6-[23]|winchip-c6|winchip2|c3)\n            cpuflags=\"-march=$cpu\"\n            disable i686\n        ;;\n        # targets that do support conditional mov but on which it's slow\n        pentium4|pentium4m|prescott|nocona)\n            cpuflags=\"-march=$cpu\"\n            enable i686\n            disable fast_cmov\n        ;;\n        # everything else should support nopl and conditional mov (cmov)\n        *)\n            cpuflags=\"-march=$cpu\"\n            enable i686\n            enable fast_cmov\n        ;;\n    esac\n\nelse\n\n    if test_cpp_condition inttypes.h \"UINTPTR_MAX >= UINT64_MAX\"; then\n        enable fast_64bit\n    fi\n\nfi\n\nif [ \"$cpu\" != generic ]; then\n    add_cflags  $cpuflags\n    add_asflags $cpuflags\n    test \"$cc_type\" = \"$ld_type\" && add_ldflags $cpuflags\nfi\n\n# compiler sanity check\ntest_exec <<EOF\nint main(void){ return 0; }\nEOF\nif test \"$?\" != 0; then\n    echo \"$cc is unable to create an executable file.\"\n    if test -z \"$cross_prefix\" && ! enabled cross_compile ; then\n        echo \"If $cc is a cross-compiler, use the --enable-cross-compile option.\"\n        echo \"Only do this if you know what cross compiling means.\"\n    fi\n    die \"C compiler test failed.\"\nfi\n\nadd_cppflags -D_ISOC11_SOURCE\nadd_cxxflags -D__STDC_CONSTANT_MACROS\ncheck_cxxflags_cc -std=$stdcxx ctype.h \"__cplusplus >= 201103L\" ||\n    { check_cxxflags -std=c++11 && stdcxx=\"c++11\" || { check_cxxflags -std=c++0x && stdcxx=\"c++0x\"; }; }\n\n# some compilers silently accept -std=c11, so we also need to check that the\n# version macro is defined properly\ncheck_cflags_cc -std=$stdc ctype.h \"__STDC_VERSION__ >= 201112L\" ||\n    { check_cflags_cc -std=c11 ctype.h \"__STDC_VERSION__ >= 201112L\" && stdc=\"c11\" || die \"Compiler lacks C11 support\"; }\n\ntest_cc <<EOF || die \"Compiler lacks support for C11 static assertions\"\n#include <assert.h>\n#include <stddef.h>\nstruct Foo {\n    int a;\n    void *ptr;\n} obj;\nstatic_assert(offsetof(struct Foo, a) == 0,\n              \"First element of struct does not have offset 0\");\n_Static_assert(offsetof(struct Foo, ptr) >= offsetof(struct Foo, a) + sizeof(obj.a),\n               \"elements not properly ordered in struct\");\nEOF\n\ncheck_cppflags -D_FILE_OFFSET_BITS=64\ncheck_cppflags -D_LARGEFILE_SOURCE\n\nadd_host_cppflags -D_ISOC11_SOURCE\ncheck_host_cflags_cc -std=$stdc ctype.h \"__STDC_VERSION__ >= 201112L\" ||\n    check_host_cflags_cc -std=c11 ctype.h \"__STDC_VERSION__ >= 201112L\" || die \"Host compiler lacks C11 support\"\n\ncheck_host_cflags -Wall\ncheck_host_cflags $host_cflags_speed\n\ncheck_64bit(){\n    arch32=$1\n    arch64=$2\n    expr=${3:-'sizeof(void *) > 4'}\n    test_code cc \"\" \"int test[2*($expr) - 1]\" &&\n        subarch=$arch64 || subarch=$arch32\n    enable $subarch\n}\n\ncase \"$arch\" in\n    aarch64|ia64)\n        enabled shared && enable_weak pic\n    ;;\n    loongarch)\n        check_64bit loongarch32 loongarch64\n        enabled loongarch64 && disable loongarch32\n        enabled shared && enable_weak pic\n    ;;\n    mips)\n        check_64bit mips mips64 '_MIPS_SIM > 1'\n        enabled shared && enable_weak pic\n    ;;\n    parisc)\n        check_64bit parisc parisc64\n        enabled shared && enable_weak pic\n    ;;\n    ppc)\n        check_64bit ppc ppc64\n        enabled shared && enable_weak pic\n    ;;\n    riscv)\n        check_64bit riscv32 riscv64\n        enabled shared && enable_weak pic\n    ;;\n    s390)\n        check_64bit s390 s390x\n        enabled shared && enable_weak pic\n    ;;\n    sparc)\n        check_64bit sparc sparc64\n        enabled shared && enable_weak pic\n    ;;\n    x86)\n        check_64bit x86_32 x86_64\n        # Treat x32 as x64 for now. Note it also needs pic if shared\n        test \"$subarch\" = \"x86_32\" && test_cpp_condition stddef.h 'defined(__x86_64__)' &&\n            subarch=x86_64 && enable x86_64 && disable x86_32\n        if enabled x86_64; then\n            enabled shared && enable_weak pic\n            objformat=elf64\n        fi\n    ;;\nesac\n\n# OS specific\ncase $target_os in\n    aix)\n        SHFLAGS=-shared\n        add_cppflags '-I\\$(SRC_PATH)/compat/aix'\n        enabled shared && add_ldflags -Wl,-brtl\n        arflags='-Xany -r -c'\n        striptype=\"\"\n        ;;\n    android)\n        disable symver\n        enable section_data_rel_ro\n        add_cflags -fPIE\n        add_ldexeflags -fPIE -pie\n        SLIB_INSTALL_NAME='$(SLIBNAME)'\n        SLIB_INSTALL_LINKS=\n        SHFLAGS='-shared -Wl,-soname,$(SLIBNAME)'\n        ;;\n    haiku)\n        prefix_default=\"/boot/common\"\n        network_extralibs=\"-lnetwork\"\n        host_extralibs=\n        ;;\n    sunos)\n        SHFLAGS='-shared -Wl,-h,$$(@F)'\n        enabled x86 && append SHFLAGS -mimpure-text\n        network_extralibs=\"-lsocket -lnsl\"\n        add_cppflags -D__EXTENSIONS__\n        # When using suncc to build, the Solaris linker will mark\n        # an executable with each instruction set encountered by\n        # the Solaris assembler.  As our libraries contain their own\n        # guards for processor-specific code, instead suppress\n        # generation of the HWCAPS ELF section on Solaris x86 only.\n        enabled_all suncc x86 &&\n            echo \"hwcap_1 = OVERRIDE;\" > mapfile &&\n            add_ldflags -Wl,-M,mapfile\n        nm_default='nm -P -g'\n        striptype=\"\"\n        version_script='-M'\n        VERSION_SCRIPT_POSTPROCESS_CMD='perl $(SRC_PATH)/compat/solaris/make_sunver.pl - $(OBJS)'\n        ;;\n    netbsd)\n        disable symver\n        enable section_data_rel_ro\n        oss_indev_extralibs=\"-lossaudio\"\n        oss_outdev_extralibs=\"-lossaudio\"\n        enabled gcc || check_ldflags -Wl,-zmuldefs\n        ;;\n    openbsd)\n        disable symver\n        enable section_data_rel_ro\n        striptype=\"\"\n        SHFLAGS='-shared'\n        SLIB_INSTALL_NAME='$(SLIBNAME).$(LIBMAJOR).$(LIBMINOR)'\n        SLIB_INSTALL_LINKS=\n        oss_indev_extralibs=\"-lossaudio\"\n        oss_outdev_extralibs=\"-lossaudio\"\n        ;;\n    dragonfly)\n        disable symver\n        ;;\n    freebsd)\n        enable section_data_rel_ro\n        ;;\n    bsd/os)\n        add_extralibs -lpoll -lgnugetopt\n        strip=\"strip -d\"\n        ;;\n    darwin)\n        enabled ppc && add_asflags -force_cpusubtype_ALL\n        install_name_dir_default='$(SHLIBDIR)'\n        SHFLAGS='-dynamiclib -Wl,-single_module -Wl,-install_name,$(INSTALL_NAME_DIR)/$(SLIBNAME_WITH_MAJOR),-current_version,$(LIBVERSION),-compatibility_version,$(LIBMAJOR)'\n        enabled x86_32 && append SHFLAGS -Wl,-read_only_relocs,suppress\n        strip=\"${strip} -x\"\n        add_ldflags -Wl,-dynamic,-search_paths_first\n        check_cflags -Werror=partial-availability\n        SLIBSUF=\".dylib\"\n        SLIBNAME_WITH_VERSION='$(SLIBPREF)$(FULLNAME).$(LIBVERSION)$(SLIBSUF)'\n        SLIBNAME_WITH_MAJOR='$(SLIBPREF)$(FULLNAME).$(LIBMAJOR)$(SLIBSUF)'\n        enabled x86_64 && objformat=\"macho64\" || objformat=\"macho32\"\n        enabled_any pic shared x86_64 ||\n            { check_cflags -mdynamic-no-pic && add_asflags -mdynamic-no-pic; }\n        check_headers dispatch/dispatch.h &&\n            add_cppflags '-I\\$(SRC_PATH)/compat/dispatch_semaphore'\n        if test -n \"$sysroot\"; then\n            is_in -isysroot $cc $CPPFLAGS $CFLAGS || check_cppflags -isysroot $sysroot\n            is_in -isysroot $ld $LDFLAGS          || check_ldflags  -isysroot $sysroot\n        fi\n        version_script='-exported_symbols_list'\n        VERSION_SCRIPT_POSTPROCESS_CMD='tr \" \" \"\\n\" | sed -n /global:/,/local:/p | grep \";\" | tr \";\" \"\\n\" | sed -E \"s/(.+)/_\\1/g\" | sed -E \"s/(.+[^*])$$$$/\\1*/\"'\n        # Workaround for Xcode 11 -fstack-check bug\n        if enabled clang; then\n            clang_version=$($cc -dumpversion)\n            test ${clang_version%%.*} -eq 11 && add_cflags -fno-stack-check\n        fi\n        ;;\n    msys*)\n        die \"Native MSYS builds are discouraged, please use the MINGW environment.\"\n        ;;\n    mingw32*|mingw64*)\n        target_os=mingw32\n        LIBTARGET=i386\n        if enabled x86_64; then\n            LIBTARGET=\"i386:x86-64\"\n        elif enabled arm; then\n            LIBTARGET=\"arm\"\n        elif enabled aarch64; then\n            LIBTARGET=\"arm64\"\n        fi\n        if enabled shared; then\n            # Cannot build both shared and static libs when using dllimport.\n            disable static\n        fi\n        ! enabled small && test_cmd $windres --version && enable gnu_windres\n        enabled x86_32 && check_ldflags -Wl,--large-address-aware\n        add_cppflags -DWIN32_LEAN_AND_MEAN\n        shlibdir_default=\"$bindir_default\"\n        SLIBPREF=\"\"\n        SLIBSUF=\".dll\"\n        SLIBNAME_WITH_VERSION='$(SLIBPREF)$(FULLNAME)-$(LIBVERSION)$(SLIBSUF)'\n        SLIBNAME_WITH_MAJOR='$(SLIBPREF)$(FULLNAME)-$(LIBMAJOR)$(SLIBSUF)'\n        if test_cmd lib.exe -list; then\n            SLIB_EXTRA_CMD=-'lib.exe -nologo -machine:$(LIBTARGET) -def:$$(@:$(SLIBSUF)=.def) -out:$(SUBDIR)$(SLIBNAME:$(SLIBSUF)=.lib)'\n            if enabled x86_64; then\n                LIBTARGET=x64\n            fi\n        else\n            SLIB_EXTRA_CMD=-'$(DLLTOOL) -m $(LIBTARGET) -d $$(@:$(SLIBSUF)=.def) -l $(SUBDIR)$(SLIBNAME:$(SLIBSUF)=.lib) -D $(SLIBNAME_WITH_MAJOR)'\n        fi\n        SLIB_INSTALL_NAME='$(SLIBNAME_WITH_MAJOR)'\n        SLIB_INSTALL_LINKS=\n        SLIB_INSTALL_EXTRA_SHLIB='$(SLIBNAME:$(SLIBSUF)=.lib)'\n        SLIB_INSTALL_EXTRA_LIB='lib$(SLIBNAME:$(SLIBSUF)=.dll.a) $(SLIBNAME_WITH_MAJOR:$(SLIBSUF)=.def)'\n        SLIB_CREATE_DEF_CMD='EXTERN_PREFIX=\"$(EXTERN_PREFIX)\" AR=\"$(AR_CMD)\" NM=\"$(NM_CMD)\" $(SRC_PATH)/compat/windows/makedef $(SUBDIR)lib$(NAME).ver $(OBJS) > $$(@:$(SLIBSUF)=.def)'\n        SHFLAGS='-shared -Wl,--out-implib,$(SUBDIR)lib$(SLIBNAME:$(SLIBSUF)=.dll.a) -Wl,--disable-auto-image-base $$(@:$(SLIBSUF)=.def)'\n        enabled x86_64 && objformat=\"win64\" || objformat=\"win32\"\n        dlltool=\"${cross_prefix}dlltool\"\n        ranlib=:\n        enable dos_paths\n        check_ldflags -Wl,--nxcompat,--dynamicbase\n        # Lets work around some stupidity in binutils.\n        # ld will strip relocations from executables even though we need them\n        # for dynamicbase (ASLR).  Using -pie does retain the reloc section\n        # however ld then forgets what the entry point should be (oops) so we\n        # have to manually (re)set it.\n        if enabled x86_32; then\n            disabled debug && add_ldexeflags -Wl,--pic-executable,-e,_mainCRTStartup\n        elif enabled x86_64; then\n            disabled debug && add_ldexeflags -Wl,--pic-executable,-e,mainCRTStartup\n            check_ldflags -Wl,--high-entropy-va # binutils 2.25\n            # Set image base >4GB for extra entropy with HEASLR\n            add_ldexeflags -Wl,--image-base,0x140000000\n            append SHFLAGS -Wl,--image-base,0x180000000\n        fi\n        ;;\n    win32|win64)\n        disable symver\n        if enabled shared; then\n            # Link to the import library instead of the normal static library\n            # for shared libs.\n            LD_LIB='%.lib'\n            # Cannot build both shared and static libs with MSVC or icl.\n            disable static\n        fi\n        ! enabled small && test_cmd $windres --version && enable gnu_windres\n        enabled x86_32 && check_ldflags -LARGEADDRESSAWARE\n        add_cppflags -DWIN32_LEAN_AND_MEAN\n        shlibdir_default=\"$bindir_default\"\n        SLIBPREF=\"\"\n        SLIBSUF=\".dll\"\n        SLIBNAME_WITH_VERSION='$(SLIBPREF)$(FULLNAME)-$(LIBVERSION)$(SLIBSUF)'\n        SLIBNAME_WITH_MAJOR='$(SLIBPREF)$(FULLNAME)-$(LIBMAJOR)$(SLIBSUF)'\n        SLIB_CREATE_DEF_CMD='EXTERN_PREFIX=\"$(EXTERN_PREFIX)\" $(SRC_PATH)/compat/windows/makedef $(SUBDIR)lib$(NAME).ver $(OBJS) > $$(@:$(SLIBSUF)=.def)'\n        SLIB_INSTALL_NAME='$(SLIBNAME_WITH_MAJOR)'\n        SLIB_INSTALL_LINKS=\n        SLIB_INSTALL_EXTRA_SHLIB='$(SLIBNAME:$(SLIBSUF)=.lib)'\n        SLIB_INSTALL_EXTRA_LIB='$(SLIBNAME_WITH_MAJOR:$(SLIBSUF)=.def)'\n        SHFLAGS='-dll -def:$$(@:$(SLIBSUF)=.def) -implib:$(SUBDIR)$(SLIBNAME:$(SLIBSUF)=.lib)'\n        enabled x86_64 && objformat=\"win64\" || objformat=\"win32\"\n        ranlib=:\n        enable dos_paths\n        ;;\n    cygwin*)\n        target_os=cygwin\n        shlibdir_default=\"$bindir_default\"\n        SLIBPREF=\"cyg\"\n        SLIBSUF=\".dll\"\n        SLIBNAME_WITH_VERSION='$(SLIBPREF)$(FULLNAME)-$(LIBVERSION)$(SLIBSUF)'\n        SLIBNAME_WITH_MAJOR='$(SLIBPREF)$(FULLNAME)-$(LIBMAJOR)$(SLIBSUF)'\n        SLIB_INSTALL_NAME='$(SLIBNAME_WITH_MAJOR)'\n        SLIB_INSTALL_LINKS=\n        SLIB_INSTALL_EXTRA_LIB='lib$(FULLNAME).dll.a'\n        SHFLAGS='-shared -Wl,--out-implib,$(SUBDIR)lib$(FULLNAME).dll.a'\n        enabled x86_64 && objformat=\"win64\" || objformat=\"win32\"\n        enable dos_paths\n        ! enabled small && test_cmd $windres --version && enable gnu_windres\n        add_cppflags -DWIN32_LEAN_AND_MEAN\n        add_cppflags -D_POSIX_C_SOURCE=200112 -D_XOPEN_SOURCE=600\n        ;;\n    *-dos|freedos|opendos)\n        network_extralibs=\"-lsocket\"\n        objformat=\"coff\"\n        enable dos_paths\n        ;;\n    linux)\n        enable section_data_rel_ro\n        enabled_any arm aarch64 && enable_weak linux_perf\n        ;;\n    irix*)\n        target_os=irix\n        ranlib=\"echo ignoring ranlib\"\n        ;;\n    os/2*)\n        strip=\"lxlite -CS\"\n        striptype=\"\"\n        objformat=\"aout\"\n        add_cppflags -D_GNU_SOURCE\n        add_ldflags -Zomf -Zbin-files -Zargs-wild -Zhigh-mem -Zmap\n        SHFLAGS='$(SUBDIR)$(NAME).def -Zdll -Zomf'\n        LIBSUF=\"_s.a\"\n        SLIBPREF=\"\"\n        SLIBSUF=\".dll\"\n        SLIBNAME_WITH_VERSION='$(SLIBPREF)$(FULLNAME)-$(LIBVERSION)$(SLIBSUF)'\n        SLIBNAME_WITH_MAJOR='$(SLIBPREF)$(shell echo $(FULLNAME) | cut -c1-6)$(LIBMAJOR)$(SLIBSUF)'\n        SLIB_CREATE_DEF_CMD='echo LIBRARY $(SLIBNAME_WITH_MAJOR:$(SLIBSUF)=) INITINSTANCE TERMINSTANCE > $(SUBDIR)$(FULLNAME).def; \\\n            echo CODE PRELOAD MOVEABLE DISCARDABLE >> $(SUBDIR)$(FULLNAME).def; \\\n            echo DATA PRELOAD MOVEABLE MULTIPLE NONSHARED >> $(SUBDIR)$(FULLNAME).def; \\\n            echo EXPORTS >> $(SUBDIR)$(FULLNAME).def; \\\n            emxexp $(OBJS) >> $(SUBDIR)$(FULLNAME).def'\n        SLIB_EXTRA_CMD='emximp -o $(SUBDIR)$(LIBPREF)$(FULLNAME)_dll.a $(SUBDIR)$(FULLNAME).def; \\\n            emximp -o $(SUBDIR)$(LIBPREF)$(FULLNAME)_dll.lib $(SUBDIR)$(FULLNAME).def;'\n        SLIB_INSTALL_NAME='$(SLIBNAME_WITH_MAJOR)'\n        SLIB_INSTALL_LINKS=\n        SLIB_INSTALL_EXTRA_LIB='$(LIBPREF)$(FULLNAME)_dll.a $(LIBPREF)$(FULLNAME)_dll.lib'\n        enable dos_paths\n        enable_weak os2threads\n        ;;\n    gnu/kfreebsd)\n        add_cppflags -D_BSD_SOURCE\n        ;;\n    gnu)\n        ;;\n    qnx)\n        add_cppflags -D_QNX_SOURCE\n        network_extralibs=\"-lsocket\"\n        ;;\n    symbian)\n        SLIBSUF=\".dll\"\n        enable dos_paths\n        add_cflags --include=$sysinclude/gcce/gcce.h -fvisibility=default\n        add_cppflags -D__GCCE__ -D__SYMBIAN32__ -DSYMBIAN_OE_POSIX_SIGNALS\n        add_ldflags -Wl,--target1-abs,--no-undefined \\\n                    -Wl,-Ttext,0x80000,-Tdata,0x1000000 -shared \\\n                    -Wl,--entry=_E32Startup -Wl,-u,_E32Startup\n        add_extralibs -l:eexe.lib -l:usrt2_2.lib -l:dfpaeabi.dso \\\n                      -l:drtaeabi.dso -l:scppnwdl.dso -lsupc++ -lgcc \\\n                      -l:libc.dso -l:libm.dso -l:euser.dso -l:libcrt0.lib\n        ;;\n    minix)\n        ;;\n    none)\n        ;;\n    *)\n        die \"Unknown OS '$target_os'.\"\n        ;;\nesac\n\n# test if creating links works\nlink_dest=$(mktemp -u $TMPDIR/dest_XXXXXXXX)\nlink_name=$(mktemp -u $TMPDIR/name_XXXXXXXX)\nmkdir \"$link_dest\"\n$ln_s \"$link_dest\" \"$link_name\"\ntouch \"$link_dest/test_file\"\nif [ \"$source_path\" != \".\" ] && [ \"$source_path\" != \"src\" ] && ([ ! -d src ] || [ -L src ]) && [ -e \"$link_name/test_file\" ]; then\n    # create link to source path\n    [ -e src ] && rm src\n    $ln_s \"$source_path\" src\n    source_link=src\nelse\n    # creating directory links doesn't work\n    # fall back to using the full source path\n    source_link=\"$source_path\"\nfi\n# cleanup\nrm -r \"$link_dest\"\nrm -r \"$link_name\"\n\n# determine libc flavour\n\nprobe_libc(){\n    pfx=$1\n    pfx_no_=${pfx%_}\n    # uclibc defines __GLIBC__, so it needs to be checked before glibc.\n    if test_${pfx}cpp_condition features.h \"defined __UCLIBC__\"; then\n        eval ${pfx}libc_type=uclibc\n        add_${pfx}cppflags -D_POSIX_C_SOURCE=200112 -D_XOPEN_SOURCE=600\n    elif test_${pfx}cpp_condition features.h \"defined __GLIBC__\"; then\n        eval ${pfx}libc_type=glibc\n        add_${pfx}cppflags -D_POSIX_C_SOURCE=200112 -D_XOPEN_SOURCE=600\n    # MinGW headers can be installed on Cygwin, so check for newlib first.\n    elif test_${pfx}cpp_condition newlib.h \"defined _NEWLIB_VERSION\"; then\n        eval ${pfx}libc_type=newlib\n        add_${pfx}cppflags -U__STRICT_ANSI__ -D_XOPEN_SOURCE=600\n    # MinGW64 is backwards compatible with MinGW32, so check for it first.\n    elif test_${pfx}cpp_condition _mingw.h \"defined __MINGW64_VERSION_MAJOR\"; then\n        eval ${pfx}libc_type=mingw64\n        if test_${pfx}cpp_condition _mingw.h \"__MINGW64_VERSION_MAJOR < 3\"; then\n            add_compat msvcrt/snprintf.o\n            add_cflags \"-include $source_path/compat/msvcrt/snprintf.h\"\n        fi\n        add_${pfx}cppflags -U__STRICT_ANSI__ -D__USE_MINGW_ANSI_STDIO=1\n        eval test \\$${pfx_no_}cc_type = \"gcc\" &&\n            add_${pfx}cppflags -D__printf__=__gnu_printf__\n        test_${pfx}cpp_condition windows.h \"!defined(_WIN32_WINNT) || _WIN32_WINNT < 0x0600\" &&\n            add_${pfx}cppflags -D_WIN32_WINNT=0x0600\n        add_${pfx}cppflags -D_POSIX_C_SOURCE=200112 -D_XOPEN_SOURCE=600\n    elif test_${pfx}cpp_condition _mingw.h \"defined __MINGW_VERSION\"  ||\n         test_${pfx}cpp_condition _mingw.h \"defined __MINGW32_VERSION\"; then\n        eval ${pfx}libc_type=mingw32\n        test_${pfx}cpp_condition _mingw.h \"__MINGW32_MAJOR_VERSION > 3 || \\\n            (__MINGW32_MAJOR_VERSION == 3 && __MINGW32_MINOR_VERSION >= 15)\" ||\n            die \"ERROR: MinGW32 runtime version must be >= 3.15.\"\n        add_${pfx}cppflags -U__STRICT_ANSI__ -D__USE_MINGW_ANSI_STDIO=1\n        test_${pfx}cpp_condition _mingw.h \"__MSVCRT_VERSION__ < 0x0700\" &&\n            add_${pfx}cppflags -D__MSVCRT_VERSION__=0x0700\n        test_${pfx}cpp_condition windows.h \"!defined(_WIN32_WINNT) || _WIN32_WINNT < 0x0600\" &&\n            add_${pfx}cppflags -D_WIN32_WINNT=0x0600\n        eval test \\$${pfx_no_}cc_type = \"gcc\" &&\n            add_${pfx}cppflags -D__printf__=__gnu_printf__\n        add_${pfx}cppflags -D_POSIX_C_SOURCE=200112 -D_XOPEN_SOURCE=600\n    elif test_${pfx}cpp_condition crtversion.h \"defined _VC_CRT_MAJOR_VERSION\"; then\n        eval ${pfx}libc_type=msvcrt\n        if test_${pfx}cpp_condition crtversion.h \"_VC_CRT_MAJOR_VERSION < 14\"; then\n            if [ \"$pfx\" = host_ ]; then\n                add_host_cppflags -Dsnprintf=_snprintf\n            else\n                add_compat strtod.o strtod=avpriv_strtod\n                add_compat msvcrt/snprintf.o snprintf=avpriv_snprintf   \\\n                                             _snprintf=avpriv_snprintf  \\\n                                             vsnprintf=avpriv_vsnprintf\n            fi\n        fi\n        add_${pfx}cppflags -D_USE_MATH_DEFINES -D_CRT_SECURE_NO_WARNINGS -D_CRT_NONSTDC_NO_WARNINGS\n        # The MSVC 2010 headers (Win 7.0 SDK) set _WIN32_WINNT to\n        # 0x601 by default unless something else is set by the user.\n        # This can easily lead to us detecting functions only present\n        # in such new versions and producing binaries requiring windows 7.0.\n        # Therefore explicitly set the default to Vista unless the user has\n        # set something else on the command line.\n        # Don't do this if WINAPI_FAMILY is set and is set to a non-desktop\n        # family. For these cases, configure is free to use any functions\n        # found in the SDK headers by default. (Alternatively, we could force\n        # _WIN32_WINNT to 0x0602 in that case.)\n        test_${pfx}cpp_condition stdlib.h \"defined(_WIN32_WINNT)\" ||\n            { test_${pfx}cpp <<EOF && add_${pfx}cppflags -D_WIN32_WINNT=0x0600; }\n#ifdef WINAPI_FAMILY\n#include <winapifamily.h>\n#if !WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)\n#error not desktop\n#endif\n#endif\nEOF\n        if [ \"$pfx\" = \"\" ]; then\n            check_func strtoll || add_cflags -Dstrtoll=_strtoi64\n            check_func strtoull || add_cflags -Dstrtoull=_strtoui64\n        fi\n    elif test_${pfx}cpp_condition stddef.h \"defined __KLIBC__\"; then\n        eval ${pfx}libc_type=klibc\n    elif test_${pfx}cpp_condition sys/cdefs.h \"defined __BIONIC__\"; then\n        eval ${pfx}libc_type=bionic\n    elif test_${pfx}cpp_condition sys/brand.h \"defined LABELED_BRAND_NAME\"; then\n        eval ${pfx}libc_type=solaris\n        add_${pfx}cppflags -D__EXTENSIONS__ -D_XOPEN_SOURCE=600\n    elif test_${pfx}cpp_condition sys/version.h \"defined __DJGPP__\"; then\n        eval ${pfx}libc_type=djgpp\n        add_cppflags -U__STRICT_ANSI__\n        add_cflags \"-include $source_path/compat/djgpp/math.h\"\n        add_compat djgpp/math.o\n    fi\n    test_${pfx}cc <<EOF\n#include <time.h>\nvoid *v = localtime_r;\nEOF\ntest \"$?\" != 0 && test_${pfx}cc -D_POSIX_C_SOURCE=200112 -D_XOPEN_SOURCE=600 <<EOF && add_${pfx}cppflags -D_POSIX_C_SOURCE=200112 -D_XOPEN_SOURCE=600\n#include <time.h>\nvoid *v = localtime_r;\nEOF\n\n    eval test -n \"\\${${pfx}libc_type}\" && enable ${pfx}libc_${libc_type}\n}\n\nprobe_libc\nprobe_libc host_\n\n# hacks for compiler/libc/os combinations\n\ncase $libc_type in\n    bionic)\n        add_compat strtod.o strtod=avpriv_strtod\n        ;;\nesac\n\ncheck_compile_assert flt_lim \"float.h limits.h\" \"DBL_MAX == (double)DBL_MAX\" ||\n    add_cppflags '-I\\$(SRC_PATH)/compat/float'\n\ntest_cpp_condition stdlib.h \"defined(__PIC__) || defined(__pic__) || defined(PIC)\" && enable_weak pic\n\nset_default libdir\n: ${shlibdir_default:=\"$libdir\"}\n: ${pkgconfigdir_default:=\"$libdir/pkgconfig\"}\n\nset_default $PATHS_LIST\nset_default nm\n\ndisabled optimizations || enabled ossfuzz || check_cflags -fomit-frame-pointer\n\nenable_weak_pic() {\n    disabled pic && return\n    enable pic\n    add_cppflags -DPIC\n    case \"$target_os\" in\n    mingw*|cygwin*|win*)\n        ;;\n    *)\n        add_cflags -fPIC\n        add_asflags -fPIC\n        ;;\n    esac\n}\n\nenabled pic && enable_weak_pic\n\ntest_cc <<EOF || die \"Symbol mangling check failed.\"\nint ff_extern;\nEOF\nsym=$($nm $TMPO | awk '/[ \\t]+[^ \\t]?ff_extern$/{ print substr($0, match($0, /[^ \\t]?ff_extern$/)) }')\nextern_prefix=${sym%%ff_extern*}\n\nlog \"Symbol prefix detected as: '${extern_prefix}'\"\n\n! disabled inline_asm && check_inline_asm inline_asm '\"\" ::'\n\ncheck_cc pragma_deprecated \"\" '_Pragma(\"GCC diagnostic push\") _Pragma(\"GCC diagnostic ignored \\\"-Wdeprecated-declarations\\\"\")'\n\ntest_cpp_condition stdlib.h \"defined(__BYTE_ORDER__) && (__BYTE_ORDER__ == __ORDER_BIG_ENDIAN__)\" && enable bigendian\n\ncheck_cc const_nan math.h \"struct { double d; } static const bar[] = { { NAN } }\"\n\nif ! enabled ppc64 || enabled bigendian; then\n    disable vsx\nfi\n\ncheck_gas() {\n    log \"check_gas using '$as' as AS\"\n    # :vararg is used on aarch64, arm and ppc altivec\n    check_as vararg \"\n.macro m n, y:vararg=0\n\\n: .int \\y\n.endm\nm x\" || return 1\n    # .altmacro is only used in arm asm\n    ! enabled arm || check_as gnu_as \".altmacro\"\n}\n\nif enabled_any arm aarch64 || enabled_all ppc altivec && enabled asm; then\n    nogas=:\n    enabled_any arm aarch64 && nogas=die\n    enabled_all ppc altivec && [ $target_os_default != aix ] && nogas=warn\n    as_noop=-v\n\n    case $as_type in\n        arm*) gaspp_as_type=armasm; as_noop=-h ;;\n        gcc)  gaspp_as_type=gas ;;\n        *)    gaspp_as_type=$as_type ;;\n    esac\n\n    [ $target_os = \"darwin\" ] && gaspp_as_type=\"apple-$gaspp_as_type\"\n\n    test \"${as#*gas-preprocessor.pl}\" != \"$as\" ||\n    test_cmd gas-preprocessor.pl -arch $arch -as-type $gaspp_as_type -- ${as:=$cc} $as_noop &&\n        gas=\"${gas:=gas-preprocessor.pl} -arch $arch -as-type $gaspp_as_type -- ${as:=$cc}\"\n\n    if ! check_gas ; then\n        as=${gas:=$as}\n        check_gas || \\\n            $nogas \"GNU assembler not found, install/update gas-preprocessor\"\n    fi\n\n    check_as as_func \".func test\n                      .endfunc\"\nfi\n\ncheck_inline_asm inline_asm_labels '\"1:\\n\"'\n\ncheck_inline_asm inline_asm_nonlocal_labels '\"Label:\\n\"'\n\nif enabled aarch64; then\n    as_arch_level=\"armv8-a\"\n    check_as as_arch_directive \".arch $as_arch_level\"\n    if enabled as_arch_directive; then\n        # Check for higher .arch levels. We only need armv8.2-a in order to\n        # enable the extensions we want below - we primarily want to control\n        # them via .arch_extension. However:\n        #\n        # Clang before version 17 (Xcode versions up to and including 15.0)\n        # didn't support controlling the dotprod/i8mm extensions via\n        # .arch_extension; thus try to enable them via the .arch level as well.\n        for level in armv8.2-a armv8.4-a armv8.6-a; do\n            check_arch_level $level\n        done\n        # Clang before version 17 (Xcode versions up to and including 15.0)\n        # also had a bug (https://github.com/llvm/llvm-project/issues/32220)\n        # causing a plain \".arch <level>\" to not have any effect unless it\n        # had an extra \"+<feature>\" included - but it was activated on the next\n        # \".arch_extension\" directive. Check if we can include \"+crc\" as dummy\n        # feature to make the .arch directive behave as expected and take\n        # effect right away.\n        check_arch_level \"${as_arch_level}+crc\"\n    fi\n\n    enabled armv8 && check_insn armv8 'prfm   pldl1strm, [x0]'\n    # internal assembler in clang 3.3 does not support this instruction\n    enabled neon && check_insn neon 'ext   v0.8B, v0.8B, v1.8B, #1'\n\n    archext_list=\"dotprod i8mm sve sve2\"\n    enabled dotprod && check_archext_insn dotprod 'udot v0.4s, v0.16b, v0.16b'\n    enabled i8mm    && check_archext_insn i8mm    'usdot v0.4s, v0.16b, v0.16b'\n    enabled sve     && check_archext_insn sve     'whilelt p0.s, x0, x1'\n    enabled sve2    && check_archext_insn sve2    'sqrdmulh z0.s, z0.s, z0.s'\n\n    # Disable the main feature (e.g. HAVE_NEON) if neither inline nor external\n    # assembly support the feature out of the box. Skip this for the features\n    # checked with check_archext_insn above, as that function takes care of\n    # updating all the variables as necessary.\n    for v in $ARCH_EXT_LIST_ARM; do\n        is_in $v $archext_list && continue\n        enabled_any ${v}_external ${v}_inline || disable $v\n    done\n\nelif enabled arm; then\n\n    enabled msvc && check_cpp_condition thumb stddef.h \"defined _M_ARMT\"\n    test_cpp_condition stddef.h \"defined __thumb__\" && test_cc <<EOF && enable_weak thumb\nfloat func(float a, float b){ return a+b; }\nEOF\n    enabled thumb && check_cflags -mthumb || check_cflags -marm\n\n    if check_cpp_condition vfp_args stddef.h \"defined __ARM_PCS_VFP\"; then\n        :\n    elif check_cpp_condition vfp_args stddef.h \"defined _M_ARM_FP && _M_ARM_FP >= 30\"; then\n        :\n    elif ! test_cpp_condition stddef.h \"defined __ARM_PCS || defined __SOFTFP__\" && [ $target_os != darwin ]; then\n        case \"${cross_prefix:-$cc}\" in\n            *hardfloat*) enable vfp_args; fpabi=vfp ;;\n            *) check_ld \"cc\" vfp_args <<EOF && fpabi=vfp || fpabi=soft ;;\n__asm__ (\".eabi_attribute 28, 1\");\nint main(void) { return 0; }\nEOF\n        esac\n        warn \"Compiler does not indicate floating-point ABI, guessing $fpabi.\"\n    fi\n\n    # Test for various instruction sets, testing support both in inline and\n    # external assembly. This sets the ${v}_inline or ${v}_external flags\n    # if the instruction can be used unconditionally in either inline or\n    # external assembly. This means that if the ${v}_external feature is set,\n    # that feature can be used unconditionally in various support macros\n    # anywhere in external assembly, in any function.\n    enabled armv5te && check_insn armv5te 'qadd r0, r0, r0'\n    enabled armv6   && check_insn armv6   'sadd16 r0, r0, r0'\n    enabled armv6t2 && check_insn armv6t2 'movt r0, #0'\n    enabled neon    && check_insn neon    'vadd.i16 q0, q0, q0'\n    enabled vfp     && check_insn vfp     'fadds s0, s0, s0'\n    enabled vfpv3   && check_insn vfpv3   'vmov.f32 s0, #1.0'\n    enabled setend  && check_insn setend  'setend be'\n\n    # If neither inline nor external assembly can use the feature by default,\n    # disable the main unsuffixed feature (e.g. HAVE_NEON).\n    #\n    # For targets that support runtime CPU feature detection, don't disable\n    # the main feature flag - there we assume that all supported toolchains\n    # can assemble code for all instruction set features (e.g. NEON) with\n    # suitable assembly flags (such as \".fpu neon\"); we don't check\n    # specifically that they really do.\n    [ $target_os = linux ] || [ $target_os = android ] ||\n        map 'enabled_any ${v}_external ${v}_inline || disable $v' \\\n            $ARCH_EXT_LIST_ARM\n\n    check_inline_asm asm_mod_q '\"add r0, %Q0, %R0\" :: \"r\"((long long)0)'\n\n    check_as as_arch_directive \".arch armv7-a\"\n    check_as as_dn_directive   \"ra .dn d0.i16\"\n    check_as as_fpu_directive  \".fpu neon\"\n\n    # llvm's integrated assembler supports .object_arch from llvm 3.5\n    [ \"$objformat\" = elf32 ] || [ \"$objformat\" = elf64 ] &&\n        check_as as_object_arch \".object_arch armv4\"\n\n    # MS armasm fails to assemble our PIC constructs\n    [ $target_os != win32 ] && enabled_all armv6t2 shared !pic && enable_weak_pic\n\nelif enabled mips; then\n\n    # Check toolchain ISA level\n    if enabled mips64; then\n        enabled mips64r6 && check_inline_asm mips64r6 '\"dlsa $0, $0, $0, 1\"' &&\n            disable mips64r2\n\n        enabled mips64r2 && check_inline_asm mips64r2 '\"dext $0, $0, 0, 1\"'\n\n        disable mips32r6 && disable mips32r5 && disable mips32r2\n    else\n        enabled mips32r6 && check_inline_asm mips32r6 '\"aui $0, $0, 0\"' &&\n            disable mips32r5 && disable mips32r2\n\n        enabled mips32r5 && check_inline_asm mips32r5 '\"eretnc\"'\n        enabled mips32r2 && check_inline_asm mips32r2 '\"ext $0, $0, 0, 1\"'\n\n        disable mips64r6 && disable mips64r5 && disable mips64r2\n    fi\n\n    enabled mipsfpu && check_inline_asm mipsfpu '\"cvt.d.l $f0, $f2\"'\n    enabled mipsfpu && (enabled mips32r5 || enabled mips32r6 || enabled mips64r6) && check_inline_asm_flags mipsfpu '\"cvt.d.l $f0, $f1\"' '-mfp64'\n\n    enabled mipsdsp && check_inline_asm_flags mipsdsp '\"addu.qb $t0, $t1, $t2\"' '-mdsp'\n    enabled mipsdspr2 && check_inline_asm_flags mipsdspr2 '\"absq_s.qb $t0, $t1\"' '-mdspr2'\n\n    # MSA can be detected at runtime so we supply extra flags here\n    enabled mipsfpu && enabled msa && check_inline_asm msa '\"addvi.b $w0, $w1, 1\"' '-mmsa' && append MSAFLAGS '-mmsa'\n\n    # loongson2 have no switch cflag so we can only probe toolchain ability\n    enabled loongson2 && check_inline_asm loongson2 '\"dmult.g $8, $9, $10\"' && disable loongson3\n\n    # loongson3 is paired with MMI\n    enabled loongson3 && check_inline_asm loongson3 '\"gsldxc1 $f0, 0($2, $3)\"' '-mloongson-ext' && append MMIFLAGS '-mloongson-ext'\n\n    # MMI can be detected at runtime too\n    enabled mmi && check_inline_asm mmi '\"pxor $f0, $f0, $f0\"' '-mloongson-mmi' && append MMIFLAGS '-mloongson-mmi'\n\n    if enabled bigendian && enabled msa; then\n        disable msa\n    fi\n\nelif enabled parisc; then\n\n    if enabled gcc; then\n        case $($cc -dumpversion) in\n            4.[3-9].*) check_cflags -fno-optimize-sibling-calls ;;\n        esac\n    fi\n\nelif enabled ppc; then\n\n    check_inline_asm dcbzl     '\"dcbzl 0, %0\" :: \"r\"(0)'\n    check_inline_asm ibm_asm   '\"add 0, 0, 0\"'\n    check_inline_asm ppc4xx    '\"maclhw r10, r11, r12\"'\n    check_inline_asm xform_asm '\"lwzx %1, %y0\" :: \"Z\"(*(int*)0), \"r\"(0)'\n\n    if enabled altivec; then\n        check_cflags -maltivec -mabi=altivec\n\n        # check if our compiler supports Motorola AltiVec C API\n        check_cc altivec altivec.h \"vector signed int v1 = (vector signed int) { 0 };\n                                    vector signed int v2 = (vector signed int) { 1 };\n                                    v1 = vec_add(v1, v2);\"\n\n        enabled altivec || warn \"Altivec disabled, possibly missing --cpu flag\"\n    fi\n\n    if enabled vsx; then\n        check_cflags -mvsx &&\n        check_cc vsx altivec.h \"int v[4] = { 0 };\n                                vector signed int v1 = vec_vsx_ld(0, v);\"\n    fi\n\n    if enabled power8; then\n        check_cpp_condition power8 \"altivec.h\" \"defined(_ARCH_PWR8)\"\n    fi\n\nelif enabled riscv; then\n\n    enabled rv && check_inline_asm rv '\".option arch, +zbb\\nrev8 t0, t1\"'\n    enabled rvv && check_inline_asm rvv '\".option arch, +v\\nvsetivli zero, 0, e8, m1, ta, ma\"'\n    enabled rv_zicbop && check_inline_asm rv_zicbop '\".option arch, +zicbop\\nprefetch.r 64(a0)\"'\n    enabled rv_zvbb && check_inline_asm rv_zvbb '\".option arch, +zvbb\\nvclz.v v0, v8\"'\n\nelif enabled wasm; then\n\n    enabled simd128 && check_cc simd128 wasm_simd128.h  \"v128_t v = wasm_v128_load(0);\"\n\nelif enabled x86; then\n\n    check_builtin rdtsc    intrin.h   \"__rdtsc()\"\n    check_builtin mm_empty mmintrin.h \"_mm_empty()\"\n\n    # check whether EBP is available on x86\n    # As 'i' is stored on the stack, this program will crash\n    # if the base pointer is used to access it because the\n    # base pointer is cleared in the inline assembly code.\n    check_exec_crash <<EOF && enable ebp_available\nvolatile int i=0;\n__asm__ volatile (\"xorl %%ebp, %%ebp\" ::: \"%ebp\");\nreturn i;\nEOF\n\n    # check whether EBX is available on x86\n    check_inline_asm ebx_available '\"\"::\"b\"(0)' &&\n        check_inline_asm ebx_available '\"\":::\"%ebx\"'\n\n    # check whether xmm clobbers are supported\n    check_inline_asm xmm_clobbers '\"\":::\"%xmm0\"'\n\n    check_inline_asm inline_asm_direct_symbol_refs '\"movl '$extern_prefix'test, %eax\"' ||\n        check_inline_asm inline_asm_direct_symbol_refs '\"movl '$extern_prefix'test(%rip), %eax\"'\n\n    # check whether binutils is new enough to compile SSSE3/MMXEXT\n    enabled ssse3  && check_inline_asm ssse3_inline  '\"pabsw %xmm0, %xmm0\"'\n    enabled mmxext && check_inline_asm mmxext_inline '\"pmaxub %mm0, %mm1\"'\n\n    probe_x86asm(){\n        x86asmexe_probe=$1\n        if test_cmd $x86asmexe_probe -v; then\n            x86asmexe=$x86asmexe_probe\n            x86asm_debug=\"-g -F dwarf\"\n            X86ASMDEP=\n            X86ASM_DEPFLAGS='-MD $(@:.o=.d)'\n        fi\n        check_x86asm x86asm \"movbe ecx, [5]\"\n    }\n\n    if ! disabled_any asm mmx x86asm; then\n        disable x86asm\n        for program in $x86asmexe nasm; do\n            probe_x86asm $program && break\n        done\n        disabled x86asm && die \"nasm not found or too old. Please install/update nasm or use --disable-x86asm for a build without hand-optimized assembly.\"\n        X86ASMFLAGS=\"-f $objformat\"\n        test -n \"$extern_prefix\"  && append X86ASMFLAGS \"-DPREFIX\"\n        case \"$objformat\" in\n            elf*) enabled debug && append X86ASMFLAGS $x86asm_debug ;;\n        esac\n\n        enabled avx512    && check_x86asm avx512_external    \"vmovdqa32 [eax]{k1}{z}, zmm0\"\n        enabled avx512icl && check_x86asm avx512icl_external \"vpdpwssds zmm31{k1}{z}, zmm29, zmm28\"\n        enabled avx2      && check_x86asm avx2_external      \"vextracti128 xmm0, ymm0, 0\"\n        enabled xop       && check_x86asm xop_external       \"vpmacsdd xmm0, xmm1, xmm2, xmm3\"\n        enabled fma4      && check_x86asm fma4_external      \"vfmaddps ymm0, ymm1, ymm2, ymm3\"\n    fi\n\n    case \"$cpu\" in\n        athlon*|opteron*|k8*|pentium|pentium-mmx|prescott|nocona|atom|geode)\n            disable fast_clz\n        ;;\n    esac\n\nelif enabled loongarch; then\n    enabled lsx && check_inline_asm lsx '\"vadd.b $vr0, $vr1, $vr2\"' '-mlsx' && append LSXFLAGS '-mlsx'\n    enabled lasx && check_inline_asm lasx '\"xvadd.b $xr0, $xr1, $xr2\"' '-mlasx' && append LASXFLAGS '-mlasx'\nfi\n\ncheck_cc intrinsics_neon arm_neon.h \"int16x8_t test = vdupq_n_s16(0)\"\ncheck_cc intrinsics_sse2 emmintrin.h \"__m128i test = _mm_setzero_si128()\"\n\ncheck_ldflags -Wl,--as-needed\ncheck_ldflags -Wl,-z,noexecstack\nif [ $target_os = \"darwin\" ]; then\n    check_ldflags -Wl,-no_warn_duplicate_libraries\nfi\n\nif ! disabled network; then\n    check_func getaddrinfo $network_extralibs\n    check_func inet_aton $network_extralibs\n\n    check_type netdb.h \"struct addrinfo\"\n    check_type netinet/in.h \"struct group_source_req\" -D_BSD_SOURCE\n    check_type netinet/in.h \"struct ip_mreq_source\" -D_BSD_SOURCE\n    check_type netinet/in.h \"struct ipv6_mreq\" -D_DARWIN_C_SOURCE\n    check_type poll.h \"struct pollfd\"\n    check_type netinet/sctp.h \"struct sctp_event_subscribe\"\n    check_struct \"sys/socket.h\" \"struct msghdr\" msg_flags\n    check_struct \"sys/types.h sys/socket.h\" \"struct sockaddr\" sa_len\n    check_type netinet/in.h \"struct sockaddr_in6\"\n    check_type \"sys/types.h sys/socket.h\" \"struct sockaddr_storage\"\n    check_type \"sys/types.h sys/socket.h\" socklen_t\n\n    # Prefer arpa/inet.h over winsock2\n    if check_headers arpa/inet.h ; then\n        check_func closesocket\n    elif check_headers winsock2.h ; then\n        check_func_headers winsock2.h closesocket -lws2 &&\n            network_extralibs=\"-lws2\" ||\n        { check_func_headers winsock2.h closesocket -lws2_32 &&\n            network_extralibs=\"-lws2_32\"; } || disable winsock2_h network\n        check_func_headers ws2tcpip.h getaddrinfo $network_extralibs\n\n        check_type ws2tcpip.h socklen_t\n        check_type ws2tcpip.h \"struct addrinfo\"\n        check_type ws2tcpip.h \"struct group_source_req\"\n        check_type ws2tcpip.h \"struct ip_mreq_source\"\n        check_type ws2tcpip.h \"struct ipv6_mreq\"\n        check_type winsock2.h \"struct pollfd\"\n        check_struct winsock2.h \"struct sockaddr\" sa_len\n        check_type ws2tcpip.h \"struct sockaddr_in6\"\n        check_type ws2tcpip.h \"struct sockaddr_storage\"\n    else\n        disable network\n    fi\nfi\n\ncheck_builtin MemoryBarrier windows.h \"MemoryBarrier()\"\ncheck_builtin gmtime_r time.h \"time_t *time; struct tm *tm; gmtime_r(time, tm)\"\ncheck_builtin localtime_r time.h \"time_t *time; struct tm *tm; localtime_r(time, tm)\"\n\ncheck_builtin float16 \"\" \"_Float16 f16var\"\nif enabled float16; then\n    if enabled x86; then\n        test_cpp_condition stddef.h \"defined(__F16C__)\" && enable fast_float16\n    elif enabled arm || enabled aarch64; then\n        enable fast_float16\n    fi\nfi\n\ncase \"$custom_allocator\" in\n    \"\")\n    ;;\n    jemalloc)\n        test -n \"$malloc_prefix\" ||\n            malloc_prefix=$($pkg_config --variable=jemalloc_prefix $pkg_config_flags jemalloc 2>/dev/null)\n        require_pkg_config custom_allocator jemalloc jemalloc/jemalloc.h ${malloc_prefix}malloc\n    ;;\n    tcmalloc)\n        require_pkg_config custom_allocator libtcmalloc gperftools/tcmalloc.h tc_malloc\n        malloc_prefix=tc_\n    ;;\n    *)\n        require_pkg_config custom_allocator \"$custom_allocator\" stdlib.h malloc\n    ;;\nesac\n\nif test -n \"$custom_allocator\"; then\n    add_extralibs \"$custom_allocator_extralibs\"\nfi\n\n# Unlike other feature flags or libraries, spirv_compiler is not defined\n# within any of our predefined categories of components.\n# It gets defined if either libshaderc or libglslang check succeeds.\n# As such, its in a state of neither being explicitly enabled, nor\n# explicitly disabled, but even in this state, being mentioned in\n# _deps results in it always passing.\n# Disable it explicitly to fix this.\ndisable spirv_compiler\n\ncheck_func_headers malloc.h _aligned_malloc     && enable aligned_malloc\ncheck_func  ${malloc_prefix}memalign            && enable memalign\ncheck_func  ${malloc_prefix}posix_memalign      && enable posix_memalign\n\ncheck_func  access\ncheck_func_headers stdlib.h arc4random_buf\ncheck_lib   clock_gettime time.h clock_gettime || check_lib clock_gettime time.h clock_gettime -lrt\ncheck_func  fcntl\ncheck_func  fork\ncheck_func  gethrtime\ncheck_func  getopt\ncheck_func  getrusage\ncheck_func  gettimeofday\ncheck_func  isatty\ncheck_func  mkstemp\ncheck_func  mmap\ncheck_func  mprotect\n# Solaris has nanosleep in -lrt, OpenSolaris no longer needs that\ncheck_func_headers time.h nanosleep || check_lib nanosleep time.h nanosleep -lrt\ncheck_func_headers sys/prctl.h prctl\ncheck_func  sched_getaffinity\ncheck_func  setrlimit\ncheck_struct \"sys/stat.h\" \"struct stat\" st_mtim.tv_nsec -D_BSD_SOURCE\ncheck_func  strerror_r\ncheck_func  sysconf\ncheck_func  sysctl\ncheck_func  tempnam\ncheck_func  usleep\n\ncheck_func_headers conio.h kbhit\ncheck_func_headers io.h setmode\ncheck_func_headers lzo/lzo1x.h lzo1x_999_compress\ncheck_func_headers mach/mach_time.h mach_absolute_time\ncheck_func_headers stdlib.h getenv\ncheck_func_headers sys/stat.h lstat\ncheck_func_headers sys/auxv.h getauxval\ncheck_func_headers sys/auxv.h elf_aux_info\ncheck_func_headers sys/sysctl.h sysctlbyname\n\ncheck_func_headers windows.h GetModuleHandle\ncheck_func_headers windows.h GetProcessAffinityMask\ncheck_func_headers windows.h GetProcessTimes\ncheck_func_headers windows.h GetStdHandle\ncheck_func_headers windows.h GetSystemTimeAsFileTime\ncheck_func_headers windows.h LoadLibrary\ncheck_func_headers windows.h MapViewOfFile\ncheck_func_headers windows.h PeekNamedPipe\ncheck_func_headers windows.h SetConsoleTextAttribute\ncheck_func_headers windows.h SetConsoleCtrlHandler\ncheck_func_headers windows.h SetDllDirectory\ncheck_func_headers windows.h Sleep\ncheck_func_headers windows.h VirtualAlloc\ncheck_func_headers glob.h glob\n\nif enabled xlib; then\n    check_pkg_config xlib_x11 x11 \"X11/Xlib.h\" XPending ||\n    check_lib xlib_x11 \"X11/Xlib.h\" XPending -lX11 ||\n        disable xlib\n\n    check_pkg_config xlib_xext xext \"X11/Xlib.h X11/extensions/XShm.h\" XShmAttach ||\n    check_lib xlib_xext \"X11/Xlib.h X11/extensions/XShm.h\" XShmAttach -lXext ||\n        disable xlib\n\n    check_pkg_config xlib_xv xv \"X11/Xlib.h X11/extensions/Xvlib.h\" XvGetPortAttribute ||\n    check_lib xlib_xv \"X11/Xlib.h X11/extensions/Xvlib.h\" XvGetPortAttribute -lXv ||\n        disable xlib\nfi\n\ncheck_headers direct.h\ncheck_headers dirent.h\ncheck_headers dxgidebug.h\ncheck_headers dxva.h\ncheck_headers dxva2api.h -D_WIN32_WINNT=0x0600\ncheck_headers io.h\nenabled libdrm &&\n    check_headers linux/dma-buf.h\n\ncheck_headers linux/perf_event.h\ncheck_headers malloc.h\ncheck_headers mftransform.h\ncheck_headers net/udplite.h\ncheck_headers poll.h\ncheck_headers pthread_np.h\ncheck_headers sys/param.h\ncheck_headers sys/resource.h\ncheck_headers sys/select.h\ncheck_headers sys/time.h\ncheck_headers sys/un.h\ncheck_headers termios.h\ncheck_headers unistd.h\ncheck_headers valgrind/valgrind.h\ncheck_func_headers VideoToolbox/VTCompressionSession.h VTCompressionSessionPrepareToEncodeFrames -framework VideoToolbox\ncheck_func_headers VideoToolbox/VideoToolbox.h VTPixelTransferSessionCreate -framework VideoToolbox\ncheck_func_headers VideoToolbox/VideoToolbox.h VTPixelRotationSessionCreate -framework VideoToolbox\ncheck_headers windows.h\ncheck_headers asm/types.h\n\n# it seems there are versions of clang in some distros that try to use the\n# gcc headers, which explodes for stdatomic\n# so we also check that atomics actually work here\n#\n# some configurations also require linking to libatomic, so try\n# both with -latomic and without\nfor LATOMIC in \"-latomic\" \"\"; do\n    check_builtin stdatomic stdatomic.h                                \\\n        \"atomic_int foo, bar = -1; atomic_store(&foo, 0); foo += bar\"  \\\n        $LATOMIC && eval stdatomic_extralibs=\"\\$LATOMIC\" && break\ndone\n\ncheck_lib advapi32 \"windows.h\"            RegCloseKey          -ladvapi32\ncheck_lib bcrypt   \"windows.h bcrypt.h\"   BCryptGenRandom      -lbcrypt &&\n    check_cpp_condition bcrypt bcrypt.h \"defined BCRYPT_RNG_ALGORITHM\"\ncheck_lib ole32    \"windows.h objbase.h\"  CoTaskMemFree        -lole32\ncheck_lib shell32  \"windows.h shellapi.h\" CommandLineToArgvW   -lshell32\ncheck_lib psapi    \"windows.h psapi.h\"    GetProcessMemoryInfo -lpsapi\n\ncheck_lib android android/native_window.h ANativeWindow_acquire -landroid\ncheck_lib mediandk \"stdint.h media/NdkMediaFormat.h\" AMediaFormat_new -lmediandk\ncheck_lib camera2ndk \"stdbool.h stdint.h camera/NdkCameraManager.h\" ACameraManager_create -lcamera2ndk\n\nenabled appkit       && check_apple_framework AppKit\nenabled audiotoolbox && check_apple_framework AudioToolbox\nenabled avfoundation && check_apple_framework AVFoundation\nenabled coreimage    && check_apple_framework CoreImage\nenabled metal        && check_apple_framework Metal\nenabled videotoolbox && check_apple_framework VideoToolbox\n\ncheck_apple_framework CoreFoundation\ncheck_apple_framework CoreMedia\ncheck_apple_framework CoreVideo\ncheck_apple_framework CoreAudio\n\nenabled avfoundation && {\n    disable coregraphics applicationservices\n    check_lib coregraphics        CoreGraphics/CoreGraphics.h               CGGetActiveDisplayList \"-framework CoreGraphics\" ||\n    check_lib applicationservices ApplicationServices/ApplicationServices.h CGGetActiveDisplayList \"-framework ApplicationServices\"; }\n\nenabled videotoolbox && {\n    check_lib coreservices CoreServices/CoreServices.h UTGetOSTypeFromString \"-framework CoreServices\"\n    check_func_headers CoreMedia/CMFormatDescription.h kCMVideoCodecType_HEVC \"-framework CoreMedia\"\n    check_func_headers CoreMedia/CMFormatDescription.h kCMVideoCodecType_HEVCWithAlpha \"-framework CoreMedia\"\n    check_func_headers CoreMedia/CMFormatDescription.h kCMVideoCodecType_VP9 \"-framework CoreMedia\"\n    check_func_headers CoreMedia/CMFormatDescription.h kCMVideoCodecType_AV1 \"-framework CoreMedia\"\n    check_func_headers CoreVideo/CVPixelBuffer.h kCVPixelFormatType_420YpCbCr10BiPlanarVideoRange \"-framework CoreVideo\"\n    check_func_headers CoreVideo/CVPixelBuffer.h kCVPixelFormatType_422YpCbCr8BiPlanarVideoRange \"-framework CoreVideo\"\n    check_func_headers CoreVideo/CVPixelBuffer.h kCVPixelFormatType_422YpCbCr10BiPlanarVideoRange \"-framework CoreVideo\"\n    check_func_headers CoreVideo/CVPixelBuffer.h kCVPixelFormatType_422YpCbCr16BiPlanarVideoRange \"-framework CoreVideo\"\n    check_func_headers CoreVideo/CVPixelBuffer.h kCVPixelFormatType_444YpCbCr8BiPlanarVideoRange \"-framework CoreVideo\"\n    check_func_headers CoreVideo/CVPixelBuffer.h kCVPixelFormatType_444YpCbCr10BiPlanarVideoRange \"-framework CoreVideo\"\n    check_func_headers CoreVideo/CVPixelBuffer.h kCVPixelFormatType_444YpCbCr16BiPlanarVideoRange \"-framework CoreVideo\"\n    check_func_headers CoreVideo/CVImageBuffer.h kCVImageBufferTransferFunction_SMPTE_ST_2084_PQ \"-framework CoreVideo\"\n    check_func_headers CoreVideo/CVImageBuffer.h kCVImageBufferTransferFunction_ITU_R_2100_HLG \"-framework CoreVideo\"\n    check_func_headers CoreVideo/CVImageBuffer.h kCVImageBufferTransferFunction_Linear \"-framework CoreVideo\"\n    check_func_headers CoreVideo/CVImageBuffer.h kCVImageBufferYCbCrMatrix_ITU_R_2020 \"-framework CoreVideo\"\n    check_func_headers CoreVideo/CVImageBuffer.h kCVImageBufferColorPrimaries_ITU_R_2020 \"-framework CoreVideo\"\n    check_func_headers CoreVideo/CVImageBuffer.h kCVImageBufferTransferFunction_ITU_R_2020 \"-framework CoreVideo\"\n    check_func_headers CoreVideo/CVImageBuffer.h kCVImageBufferTransferFunction_SMPTE_ST_428_1 \"-framework CoreVideo\"\n}\n\nenabled metal && test_cmd $metalcc -v || disable metal\n\ncheck_struct \"sys/time.h sys/resource.h\" \"struct rusage\" ru_maxrss\n\ncheck_type \"windows.h dxva.h\" \"DXVA_PicParams_AV1\" -DWINAPI_FAMILY=WINAPI_FAMILY_DESKTOP_APP -D_CRT_BUILD_DESKTOP_APP=0\ncheck_type \"windows.h dxva.h\" \"DXVA_PicParams_HEVC\" -DWINAPI_FAMILY=WINAPI_FAMILY_DESKTOP_APP -D_CRT_BUILD_DESKTOP_APP=0\ncheck_type \"windows.h dxva.h\" \"DXVA_PicParams_VP9\" -DWINAPI_FAMILY=WINAPI_FAMILY_DESKTOP_APP -D_CRT_BUILD_DESKTOP_APP=0\ncheck_type \"windows.h dxgi1_2.h\" \"DXGI_OUTDUPL_FRAME_INFO\"\ncheck_type \"windows.h dxgi1_2.h\" \"IDXGIOutput1\"\ncheck_type \"windows.h dxgi1_5.h\" \"IDXGIOutput5\"\ncheck_type \"windows.h d3d11.h\" \"ID3D11VideoDecoder\"\ncheck_type \"windows.h d3d11.h\" \"ID3D11VideoContext\"\ncheck_type \"windows.h d3d12.h\" \"ID3D12Device\"\ncheck_type \"windows.h d3d12video.h\" \"ID3D12VideoDecoder\"\ncheck_type \"windows.h d3d12video.h\" \"ID3D12VideoEncoder\"\ntest_code cc \"windows.h d3d12video.h\" \"D3D12_FEATURE_VIDEO feature = D3D12_FEATURE_VIDEO_ENCODER_CODEC\" && \\\ntest_code cc \"windows.h d3d12video.h\" \"D3D12_FEATURE_DATA_VIDEO_ENCODER_RESOURCE_REQUIREMENTS req\" && enable d3d12_encoder_feature\ncheck_type \"windows.h\" \"DPI_AWARENESS_CONTEXT\" -D_WIN32_WINNT=0x0A00\ncheck_type \"d3d9.h dxva2api.h\" DXVA2_ConfigPictureDecode -D_WIN32_WINNT=0x0602\ncheck_func_headers mfapi.h MFCreateAlignedMemoryBuffer -lmfplat\n\ncheck_type \"vdpau/vdpau.h\" \"VdpPictureInfoHEVC\"\ncheck_type \"vdpau/vdpau.h\" \"VdpPictureInfoVP9\"\ncheck_type \"vdpau/vdpau.h\" \"VdpPictureInfoAV1\"\n\nif [ -z \"$nvccflags\" ]; then\n    nvccflags=$nvccflags_default\nfi\n\nnvccflags=\"$nvccflags -std=c++11\"\n\nif enabled x86_64 || enabled ppc64 || enabled aarch64; then\n    nvccflags=\"$nvccflags -m64\"\nelse\n    nvccflags=\"$nvccflags -m32\"\nfi\n\nif enabled cuda_nvcc; then\n    nvccflags=\"$nvccflags -ptx\"\nelse\n    nvccflags=\"$nvccflags -S -nocudalib -nocudainc --cuda-device-only -Wno-c++11-narrowing -include ${source_link}/compat/cuda/cuda_runtime.h\"\n    check_nvcc cuda_llvm\nfi\n\nif ! disabled ffnvcodec; then\n    ffnv_hdr_list=\"ffnvcodec/nvEncodeAPI.h ffnvcodec/dynlink_cuda.h ffnvcodec/dynlink_cuviddec.h ffnvcodec/dynlink_nvcuvid.h\"\n    check_pkg_config ffnvcodec \"ffnvcodec >= 12.1.14.0\" \"$ffnv_hdr_list\" \"\" || \\\n      check_pkg_config ffnvcodec \"ffnvcodec >= 12.0.16.1 ffnvcodec < 12.1\" \"$ffnv_hdr_list\" \"\" || \\\n      check_pkg_config ffnvcodec \"ffnvcodec >= 11.1.5.3 ffnvcodec < 12.0\" \"$ffnv_hdr_list\" \"\" || \\\n      check_pkg_config ffnvcodec \"ffnvcodec >= 11.0.10.3 ffnvcodec < 11.1\" \"$ffnv_hdr_list\" \"\" || \\\n      check_pkg_config ffnvcodec \"ffnvcodec >= 8.1.24.15 ffnvcodec < 8.2\" \"$ffnv_hdr_list\" \"\"\nfi\n\nif enabled_all libglslang libshaderc; then\n    die \"ERROR: libshaderc and libglslang are mutually exclusive, if in doubt, disable libglslang\"\nfi\n\ncheck_cpp_condition winrt windows.h \"!WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)\"\n\nif ! disabled w32threads && ! enabled pthreads; then\n    check_func_headers \"windows.h process.h\" _beginthreadex &&\n        check_type \"windows.h\" CONDITION_VARIABLE &&\n        check_type \"windows.h\" INIT_ONCE &&\n        enable w32threads || disable w32threads\n    if ! enabled w32threads && enabled winrt; then\n        check_func_headers \"windows.h\" CreateThread &&\n            enable w32threads || disable w32threads\n    fi\nfi\n\n# check for some common methods of building with pthread support\n# do this before the optional library checks as some of them require pthreads\nif ! disabled pthreads && ! enabled w32threads && ! enabled os2threads; then\n    if check_lib pthreads pthread.h pthread_join   -pthread &&\n       check_lib pthreads pthread.h pthread_create -pthread; then\n        add_cflags -pthread\n    elif check_lib pthreads pthread.h pthread_join   -pthreads &&\n         check_lib pthreads pthread.h pthread_create -pthreads; then\n        add_cflags -pthreads\n    elif check_lib pthreads pthread.h pthread_join   -ldl -pthread &&\n         check_lib pthreads pthread.h pthread_create -ldl -pthread; then\n        add_cflags -ldl -pthread\n    elif check_lib pthreads pthread.h pthread_join   -lpthreadGC2 &&\n         check_lib pthreads pthread.h pthread_create -lpthreadGC2; then\n        :\n    elif check_lib pthreads pthread.h pthread_join   -lpthread &&\n         check_lib pthreads pthread.h pthread_create -lpthread; then\n        :\n    elif check_func pthread_join && check_func pthread_create; then\n        enable pthreads\n    fi\n    check_cc pthreads \"pthread.h\" \"static pthread_mutex_t atomic_lock = PTHREAD_MUTEX_INITIALIZER\"\n\n    if enabled pthreads; then\n        check_builtin sem_timedwait semaphore.h \"sem_t *s; sem_init(s,0,0); sem_timedwait(s,0); sem_destroy(s)\" $pthreads_extralibs\n        check_func pthread_cancel $pthreads_extralibs\n        hdrs=pthread.h\n        if enabled pthread_np_h; then\n            hdrs=\"$hdrs pthread_np.h\"\n        fi\n        check_lib pthread_set_name_np \"$hdrs\" pthread_set_name_np -lpthread\n        check_lib pthread_setname_np \"$hdrs\" pthread_setname_np -lpthread\n    fi\nfi\n\nenabled  zlib && { check_pkg_config zlib zlib \"zlib.h\" zlibVersion ||\n                   check_lib zlib   zlib.h      zlibVersion    -lz; }\nenabled bzlib && check_lib bzlib bzlib.h BZ2_bzlibVersion    -lbz2\nenabled  lzma && check_lib lzma   lzma.h lzma_version_number -llzma\n\nenabled zlib && test_exec $zlib_extralibs <<EOF && enable zlib_gzip\n#include <zlib.h>\nint main(void) {\n    if (zlibCompileFlags() & (1 << 17)) return 1;\n    return 0;\n}\nEOF\n\n[ -x \"$(command -v gzip)\" ] && enable gzip\n\nenabled zlib_gzip && enabled gzip || disable ptx_compression\n\n# On some systems dynamic loading requires no extra linker flags\ncheck_lib libdl dlfcn.h \"dlopen dlsym\" || check_lib libdl dlfcn.h \"dlopen dlsym\" -ldl\n\ncheck_lib libm math.h sin -lm\n\natan2f_args=2\ncopysign_args=2\nhypot_args=2\nldexpf_args=2\npowf_args=2\n\nfor func in $MATH_FUNCS; do\n    eval check_mathfunc $func \\${${func}_args:-1} $libm_extralibs\ndone\n\n# these are off by default, so fail if requested and not available\nenabled avisynth          && { require_headers \"avisynth/avisynth_c.h avisynth/avs/version.h\" &&\n                               { test_cpp_condition avisynth/avs/version.h \"AVS_MAJOR_VER >= 3 && AVS_MINOR_VER >= 7 && AVS_BUGFIX_VER >= 3 || AVS_MAJOR_VER >= 3 && AVS_MINOR_VER > 7 || AVS_MAJOR_VER > 3\" ||\n                                 die \"ERROR: AviSynth+ header version must be >= 3.7.3\"; } }\nenabled cuda_nvcc         && { check_nvcc cuda_nvcc || die \"ERROR: failed checking for nvcc.\"; }\nenabled chromaprint       && { check_pkg_config chromaprint libchromaprint \"chromaprint.h\" chromaprint_get_version ||\n                               require chromaprint chromaprint.h chromaprint_get_version -lchromaprint; }\nenabled decklink          && { require_headers DeckLinkAPI.h &&\n                               { test_cpp_condition DeckLinkAPIVersion.h \"BLACKMAGIC_DECKLINK_API_VERSION >= 0x0a0b0000\" || die \"ERROR: Decklink API version must be >= 10.11\"; } }\nenabled frei0r            && require_headers \"frei0r.h\"\nenabled gmp               && require gmp gmp.h mpz_export -lgmp\nenabled gnutls            && require_pkg_config gnutls gnutls gnutls/gnutls.h gnutls_global_init\nenabled jni               && { [ $target_os = \"android\" ] && check_headers jni.h && enabled pthreads || die \"ERROR: jni not found\"; }\nenabled ladspa            && require_headers \"ladspa.h dlfcn.h\"\nenabled lcms2             && require_pkg_config lcms2 \"lcms2 >= 2.13\" lcms2.h cmsCreateContext\nenabled libaom            && require_pkg_config libaom \"aom >= 2.0.0\" aom/aom_codec.h aom_codec_version\nenabled libaribb24        && { check_pkg_config libaribb24 \"aribb24 > 1.0.3\" \"aribb24/aribb24.h\" arib_instance_new ||\n                               { enabled gpl && require_pkg_config libaribb24 aribb24 \"aribb24/aribb24.h\" arib_instance_new; } ||\n                               die \"ERROR: libaribb24 requires version higher than 1.0.3 or --enable-gpl.\"; }\nenabled libaribcaption    && require_pkg_config libaribcaption \"libaribcaption >= 1.1.1\" \"aribcaption/aribcaption.h\" aribcc_context_alloc\nenabled lv2               && require_pkg_config lv2 lilv-0 \"lilv/lilv.h\" lilv_world_new\nenabled libiec61883       && require libiec61883 libiec61883/iec61883.h iec61883_cmp_connect -lraw1394 -lavc1394 -lrom1394 -liec61883\nenabled libass            && require_pkg_config libass \"libass >= 0.11.0\" ass/ass.h ass_library_init\nenabled libbluray         && require_pkg_config libbluray libbluray libbluray/bluray.h bd_open\nenabled libbs2b           && require_pkg_config libbs2b libbs2b bs2b.h bs2b_open\nenabled libcelt           && require libcelt celt/celt.h celt_decode -lcelt0 &&\n                             { check_lib libcelt celt/celt.h celt_decoder_create_custom -lcelt0 ||\n                               die \"ERROR: libcelt must be installed and version must be >= 0.11.0.\"; }\nenabled libcaca           && require_pkg_config libcaca caca caca.h caca_create_canvas\nenabled libcodec2         && require libcodec2 codec2/codec2.h codec2_create -lcodec2\nenabled libdav1d          && require_pkg_config libdav1d \"dav1d >= 0.5.0\" \"dav1d/dav1d.h\" dav1d_version\nenabled libdavs2          && require_pkg_config libdavs2 \"davs2 >= 1.6.0\" davs2.h davs2_decoder_open\nenabled libdc1394         && require_pkg_config libdc1394 libdc1394-2 dc1394/dc1394.h dc1394_new\nenabled libdrm            && check_pkg_config libdrm libdrm xf86drm.h drmGetVersion\nenabled libdvdnav         && require_pkg_config libdvdnav \"dvdnav >= 6.1.1\" dvdnav/dvdnav.h dvdnav_open2\nenabled libdvdread        && require_pkg_config libdvdread \"dvdread >= 6.1.2\" dvdread/dvd_reader.h DVDOpen2\nenabled libfdk_aac        && { check_pkg_config libfdk_aac fdk-aac \"fdk-aac/aacenc_lib.h\" aacEncOpen ||\n                               { require libfdk_aac fdk-aac/aacenc_lib.h aacEncOpen -lfdk-aac &&\n                                 warn \"using libfdk without pkg-config\"; } }\nflite_extralibs=\"-lflite_cmu_time_awb -lflite_cmu_us_awb -lflite_cmu_us_kal -lflite_cmu_us_kal16 -lflite_cmu_us_rms -lflite_cmu_us_slt -lflite_usenglish -lflite_cmulex -lflite\"\nenabled libflite          && require libflite \"flite/flite.h\" flite_init $flite_extralibs\nenabled fontconfig        && enable libfontconfig\nenabled libfontconfig     && require_pkg_config libfontconfig fontconfig \"fontconfig/fontconfig.h\" FcInit\nenabled libfreetype       && require_pkg_config libfreetype freetype2 \"ft2build.h FT_FREETYPE_H\" FT_Init_FreeType\nenabled libfribidi        && require_pkg_config libfribidi fribidi fribidi.h fribidi_version_info\nenabled libharfbuzz       && require_pkg_config libharfbuzz harfbuzz hb.h hb_buffer_create\nenabled libglslang && { check_lib spirv_compiler glslang/Include/glslang_c_interface.h glslang_initialize_process \\\n                            -lglslang -lMachineIndependent -lGenericCodeGen \\\n                            -lSPVRemapper -lSPIRV -lSPIRV-Tools-opt -lSPIRV-Tools -lpthread -lstdc++ -lm ||\n                        require spirv_compiler glslang/Include/glslang_c_interface.h glslang_initialize_process \\\n                            -lglslang -lMachineIndependent -lOSDependent -lHLSL -lOGLCompiler -lGenericCodeGen \\\n                            -lSPVRemapper -lSPIRV -lSPIRV-Tools-opt -lSPIRV-Tools -lpthread -lstdc++ -lm ; }\nenabled libgme            && { check_pkg_config libgme libgme gme/gme.h gme_new_emu ||\n                               require libgme gme/gme.h gme_new_emu -lgme -lstdc++; }\nenabled libgsm            && { for gsm_hdr in \"gsm.h\" \"gsm/gsm.h\"; do\n                                   check_lib libgsm \"${gsm_hdr}\" gsm_create -lgsm && break;\n                               done || die \"ERROR: libgsm not found\"; }\nenabled libilbc           && require libilbc ilbc.h WebRtcIlbcfix_InitDecode -lilbc $pthreads_extralibs\nenabled libjxl            && require_pkg_config libjxl \"libjxl >= 0.7.0\" jxl/decode.h JxlDecoderVersion &&\n                             require_pkg_config libjxl_threads \"libjxl_threads >= 0.7.0\" jxl/thread_parallel_runner.h JxlThreadParallelRunner\nenabled libklvanc         && require libklvanc libklvanc/vanc.h klvanc_context_create -lklvanc\nenabled libkvazaar        && require_pkg_config libkvazaar \"kvazaar >= 2.0.0\" kvazaar.h kvz_api_get\nenabled liblc3            && require_pkg_config liblc3 \"lc3 >= 1.1.0\" lc3.h lc3_hr_setup_encoder\nenabled liblensfun        && require_pkg_config liblensfun lensfun lensfun.h lf_db_create\nenabled liblcevc_dec      && require_pkg_config liblcevc_dec \"lcevc_dec >= 2.0.0\" \"LCEVC/lcevc_dec.h\" LCEVC_CreateDecoder\n\nif enabled libmfx && enabled libvpl; then\n   die \"ERROR: can not use libmfx and libvpl together\"\n# While it may appear that require is being used as a pkg-config\n# fallback for libmfx, it is actually being used to detect a different\n# installation route altogether.  If libmfx is installed via the Intel\n# Media SDK or Intel Media Server Studio, these don't come with\n# pkg-config support.  Instead, users should make sure that the build\n# can find the libraries and headers through other means.\nelif enabled libmfx; then\n    { check_pkg_config libmfx \"libmfx >= 1.28 libmfx < 2.0\" \"mfxvideo.h\" MFXInit ||\n# Some old versions of libmfx have the following settings in libmfx.pc:\n#   includedir=/usr/include\n#   Cflags: -I${includedir}\n# So add -I${includedir}/mfx to CFLAGS\n      { check_pkg_config libmfx \"libmfx >= 1.28 libmfx < 2.0\" \"mfx/mfxvideo.h\" MFXInit && add_cflags -I${libmfx_incdir}/mfx; } ||\n      { require libmfx \"mfxvideo.h mfxdefs.h\" MFXInit \"-llibmfx $advapi32_extralibs\" &&\n        { test_cpp_condition mfxdefs.h \"MFX_VERSION >= 1028 && MFX_VERSION < 2000\" || die \"ERROR: libmfx version must be >= 1.28 and < 2.0\"; }  &&\n        warn \"using libmfx without pkg-config\"; } } &&\n    warn \"libmfx is deprecated. Please run configure with --enable-libvpl to use libvpl instead.\"\nelif enabled libvpl; then\n# Consider pkg-config only. The name of libmfx is still passed to check_pkg_config function for --enable-libvpl option\n# because QSV has dependency on libmfx, we can use the same dependency if using libmfx in this check. The package name\n# is extracted from \"vpl >= 2.6\"\n    check_pkg_config libmfx \"vpl >= 2.6\" \"mfxvideo.h mfxdispatcher.h\" MFXLoad || \\\n            die \"ERROR: libvpl >= 2.6 not found\"\n    add_cflags -DMFX_DEPRECATED_OFF\n    check_type \"vpl/mfxdefs.h vpl/mfxvideo.h\" \"struct mfxConfigInterface\"\nfi\n\nif enabled libmfx; then\n   check_cc MFX_CODEC_VP9 \"mfxdefs.h mfxstructures.h\" \"MFX_CODEC_VP9\"\nfi\n\nenabled libmodplug        && require_pkg_config libmodplug libmodplug libmodplug/modplug.h ModPlug_Load\nenabled libmp3lame        && require \"libmp3lame >= 3.98.3\" lame/lame.h lame_set_VBR_quality -lmp3lame $libm_extralibs\nenabled libmysofa         && { check_pkg_config libmysofa libmysofa mysofa.h mysofa_neighborhood_init_withstepdefine ||\n                               require libmysofa mysofa.h mysofa_neighborhood_init_withstepdefine -lmysofa $zlib_extralibs; }\nenabled libnpp            && { check_lib libnpp npp.h nppGetLibVersion -lnppig -lnppicc -lnppc -lnppidei -lnppif ||\n                               check_lib libnpp npp.h nppGetLibVersion -lnppi -lnppif -lnppc -lnppidei ||\n                               die \"ERROR: libnpp not found\"; }\nenabled libopencore_amrnb && require libopencore_amrnb opencore-amrnb/interf_dec.h Decoder_Interface_init -lopencore-amrnb\nenabled libopencore_amrwb && require libopencore_amrwb opencore-amrwb/dec_if.h D_IF_init -lopencore-amrwb\nenabled libopencv         && { check_headers opencv2/core/core_c.h &&\n                               { check_pkg_config libopencv opencv opencv2/core/core_c.h cvCreateImageHeader ||\n                                 require libopencv opencv2/core/core_c.h cvCreateImageHeader -lopencv_core -lopencv_imgproc; } ||\n                               require_pkg_config libopencv opencv opencv/cxcore.h cvCreateImageHeader; }\nenabled libopenh264       && require_pkg_config libopenh264 \"openh264 >= 1.3.0\" wels/codec_api.h WelsGetCodecVersion\nenabled libopenjpeg       && { check_pkg_config libopenjpeg \"libopenjp2 >= 2.1.0\" openjpeg.h opj_version ||\n                               { require_pkg_config libopenjpeg \"libopenjp2 >= 2.1.0\" openjpeg.h opj_version -DOPJ_STATIC && add_cppflags -DOPJ_STATIC; } }\nenabled libopenmpt        && require_pkg_config libopenmpt \"libopenmpt >= 0.2.6557\" libopenmpt/libopenmpt.h openmpt_module_create -lstdc++ && append libopenmpt_extralibs \"-lstdc++\"\nenabled libopenvino       && { { check_pkg_config libopenvino openvino openvino/c/openvino.h ov_core_create && enable openvino2; } ||\n                                { check_pkg_config libopenvino openvino c_api/ie_c_api.h ie_c_api_version ||\n                                  require libopenvino c_api/ie_c_api.h ie_c_api_version -linference_engine_c_api; } }\nenabled libopus           && {\n    enabled libopus_decoder && {\n        require_pkg_config libopus opus opus_multistream.h opus_multistream_decoder_create\n    }\n    enabled libopus_encoder && {\n        require_pkg_config libopus opus opus_multistream.h opus_multistream_surround_encoder_create\n    }\n}\nenabled libplacebo        && require_pkg_config libplacebo \"libplacebo >= 4.192.0\" libplacebo/vulkan.h pl_vulkan_create\nenabled libpulse          && require_pkg_config libpulse libpulse pulse/pulseaudio.h pa_context_new\nenabled libqrencode       && require_pkg_config libqrencode libqrencode qrencode.h QRcode_encodeString\nenabled libquirc          && require libquirc quirc.h quirc_decode -lquirc\nenabled librabbitmq       && require_pkg_config librabbitmq \"librabbitmq >= 0.7.1\" amqp.h amqp_new_connection\nenabled librav1e          && require_pkg_config librav1e \"rav1e >= 0.5.0\" rav1e.h rav1e_context_new\nenabled librist           && require_pkg_config librist \"librist >= 0.2.7\" librist/librist.h rist_receiver_create\nenabled librsvg           && require_pkg_config librsvg librsvg-2.0 librsvg-2.0/librsvg/rsvg.h rsvg_handle_new_from_data\nenabled librtmp           && require_pkg_config librtmp librtmp librtmp/rtmp.h RTMP_Socket\nenabled librubberband     && require_pkg_config librubberband \"rubberband >= 1.8.1\" rubberband/rubberband-c.h rubberband_new -lstdc++ && append librubberband_extralibs \"-lstdc++\"\nenabled libshaderc        && require_pkg_config spirv_compiler \"shaderc >= 2019.1\" shaderc/shaderc.h shaderc_compiler_initialize\nenabled libshine          && require_pkg_config libshine shine shine/layer3.h shine_encode_buffer\nenabled libsmbclient      && { check_pkg_config libsmbclient smbclient libsmbclient.h smbc_init ||\n                               require libsmbclient libsmbclient.h smbc_init -lsmbclient; }\nenabled libsnappy         && require libsnappy snappy-c.h snappy_compress -lsnappy -lstdc++\nenabled libsoxr           && require libsoxr soxr.h soxr_create -lsoxr\nenabled libssh            && require_pkg_config libssh \"libssh >= 0.6.0\" libssh/sftp.h sftp_init\nenabled libspeex          && require_pkg_config libspeex speex speex/speex.h speex_decoder_init\nenabled libsrt            && require_pkg_config libsrt \"srt >= 1.3.0\" srt/srt.h srt_socket\nenabled libsvtav1         && require_pkg_config libsvtav1 \"SvtAv1Enc >= 0.9.0\" EbSvtAv1Enc.h svt_av1_enc_init_handle\nenabled libtensorflow     && require libtensorflow tensorflow/c/c_api.h TF_Version -ltensorflow\nenabled libtesseract      && require_pkg_config libtesseract tesseract tesseract/capi.h TessBaseAPICreate\nenabled libtheora         && require libtheora theora/theoraenc.h th_info_init -ltheoraenc -ltheoradec -logg\nenabled libtls            && require_pkg_config libtls libtls tls.h tls_configure\nenabled libtorch          && check_cxxflags -std=c++17 && require_cpp libtorch torch/torch.h \"torch::Tensor\" -ltorch -lc10 -ltorch_cpu -lstdc++ -lpthread\nenabled libtwolame        && require libtwolame twolame.h twolame_init -ltwolame &&\n                             { check_lib libtwolame twolame.h twolame_encode_buffer_float32_interleaved -ltwolame ||\n                               die \"ERROR: libtwolame must be installed and version must be >= 0.3.10\"; }\nenabled libuavs3d         && require_pkg_config libuavs3d \"uavs3d >= 1.1.41\" uavs3d.h uavs3d_decode\nenabled libv4l2           && require_pkg_config libv4l2 libv4l2 libv4l2.h v4l2_ioctl\nenabled libvidstab        && require_pkg_config libvidstab \"vidstab >= 0.98\" vid.stab/libvidstab.h vsMotionDetectInit\nenabled libvmaf           && require_pkg_config libvmaf \"libvmaf >= 2.0.0\" libvmaf.h vmaf_init\nenabled libvmaf           && check_pkg_config libvmaf_cuda \"libvmaf >= 2.0.0\" libvmaf_cuda.h vmaf_cuda_state_init\nenabled libvo_amrwbenc    && require libvo_amrwbenc vo-amrwbenc/enc_if.h E_IF_init -lvo-amrwbenc\nenabled libvorbis         && require_pkg_config libvorbis vorbis vorbis/codec.h vorbis_info_init &&\n                             require_pkg_config libvorbisenc vorbisenc vorbis/vorbisenc.h vorbis_encode_init\n\nenabled libvpx            && {\n    enabled libvpx_vp8_decoder && {\n        check_pkg_config libvpx_vp8_decoder \"vpx >= 1.4.0\" \"vpx/vpx_decoder.h vpx/vp8dx.h\" vpx_codec_vp8_dx ||\n            check_lib libvpx_vp8_decoder \"vpx/vpx_decoder.h vpx/vp8dx.h\" \"vpx_codec_vp8_dx VPX_IMG_FMT_HIGHBITDEPTH\" \"-lvpx $libm_extralibs $pthreads_extralibs\"\n    }\n    enabled libvpx_vp8_encoder && {\n        check_pkg_config libvpx_vp8_encoder \"vpx >= 1.4.0\" \"vpx/vpx_encoder.h vpx/vp8cx.h\" vpx_codec_vp8_cx ||\n            check_lib libvpx_vp8_encoder \"vpx/vpx_encoder.h vpx/vp8cx.h\" \"vpx_codec_vp8_cx VPX_IMG_FMT_HIGHBITDEPTH\" \"-lvpx $libm_extralibs $pthreads_extralibs\"\n    }\n    enabled libvpx_vp9_decoder && {\n        check_pkg_config libvpx_vp9_decoder \"vpx >= 1.4.0\" \"vpx/vpx_decoder.h vpx/vp8dx.h\" vpx_codec_vp9_dx ||\n            check_lib libvpx_vp9_decoder \"vpx/vpx_decoder.h vpx/vp8dx.h\" \"vpx_codec_vp9_dx VPX_IMG_FMT_HIGHBITDEPTH\" \"-lvpx $libm_extralibs $pthreads_extralibs\"\n    }\n    enabled libvpx_vp9_encoder && {\n        check_pkg_config libvpx_vp9_encoder \"vpx >= 1.4.0\" \"vpx/vpx_encoder.h vpx/vp8cx.h\" vpx_codec_vp9_cx ||\n            check_lib libvpx_vp9_encoder \"vpx/vpx_encoder.h vpx/vp8cx.h\" \"vpx_codec_vp9_cx VPX_IMG_FMT_HIGHBITDEPTH\" \"-lvpx $libm_extralibs $pthreads_extralibs\"\n    }\n    if disabled_all libvpx_vp8_decoder libvpx_vp9_decoder libvpx_vp8_encoder libvpx_vp9_encoder; then\n        die \"libvpx enabled but no supported decoders found\"\n    fi\n}\n\nenabled libvvenc          && require_pkg_config libvvenc \"libvvenc >= 1.6.1\" \"vvenc/vvenc.h\" vvenc_get_version\nenabled libwebp           && {\n    enabled libwebp_encoder      && require_pkg_config libwebp \"libwebp >= 0.2.0\" webp/encode.h WebPGetEncoderVersion\n    enabled libwebp_anim_encoder && check_pkg_config libwebp_anim_encoder \"libwebpmux >= 0.4.0\" webp/mux.h WebPAnimEncoderOptionsInit; }\nenabled libx264           && require_pkg_config libx264 x264 \"stdint.h x264.h\" x264_encoder_encode &&\n                             require_cpp_condition libx264 x264.h \"X264_BUILD >= 155\" && {\n                             [ \"$toolchain\" != \"msvc\" ] ||\n                             require_cpp_condition libx264 x264.h \"X264_BUILD >= 158\"; } &&\n                             check_cpp_condition libx264_hdr10 x264.h \"X264_BUILD >= 163\" &&\n                             check_cpp_condition libx262 x264.h \"X264_MPEG2\"\nenabled libx265           && require_pkg_config libx265 x265 x265.h x265_api_get &&\n                             require_cpp_condition libx265 x265.h \"X265_BUILD >= 89\"\nenabled libxavs           && require libxavs \"stdint.h xavs.h\" xavs_encoder_encode \"-lxavs $pthreads_extralibs $libm_extralibs\"\nenabled libxavs2          && require_pkg_config libxavs2 \"xavs2 >= 1.3.0\" \"stdint.h xavs2.h\" xavs2_api_get\nenabled libxevd           && require_pkg_config libxevd \"xevd >= 0.4.1\" \"xevd.h\" xevd_decode\nenabled libxeve           && require_pkg_config libxeve \"xeve >= 0.5.1\" \"xeve.h\" xeve_encode\nenabled libxvid           && require libxvid xvid.h xvid_global -lxvidcore\nenabled libzimg           && require_pkg_config libzimg \"zimg >= 2.7.0\" zimg.h zimg_get_api_version\nenabled libzmq            && require_pkg_config libzmq \"libzmq >= 4.2.1\" zmq.h zmq_ctx_new\nenabled libzvbi           && require_pkg_config libzvbi zvbi-0.2 libzvbi.h vbi_decoder_new &&\n                             { test_cpp_condition libzvbi.h \"VBI_VERSION_MAJOR > 0 || VBI_VERSION_MINOR > 2 || VBI_VERSION_MINOR == 2 && VBI_VERSION_MICRO >= 28\" ||\n                               enabled gpl || die \"ERROR: libzvbi requires version 0.2.28 or --enable-gpl.\"; }\nenabled libxml2           && require_pkg_config libxml2 libxml-2.0 libxml2/libxml/xmlversion.h xmlCheckVersion\nenabled mbedtls           && { check_pkg_config mbedtls mbedtls mbedtls/x509_crt.h mbedtls_x509_crt_init ||\n                               check_pkg_config mbedtls mbedtls mbedtls/ssl.h mbedtls_ssl_init ||\n                               check_lib mbedtls mbedtls/ssl.h mbedtls_ssl_init -lmbedtls -lmbedx509 -lmbedcrypto ||\n                               die \"ERROR: mbedTLS not found\"; }\nenabled mediacodec        && { enabled jni || die \"ERROR: mediacodec requires --enable-jni\"; }\nenabled mmal              && { check_lib mmal interface/mmal/mmal.h mmal_port_connect -lmmal_core -lmmal_util -lmmal_vc_client -lbcm_host ||\n                               { ! enabled cross_compile &&\n                                 add_cflags -isystem/opt/vc/include/ -isystem/opt/vc/include/interface/vmcs_host/linux -isystem/opt/vc/include/interface/vcos/pthreads -fgnu89-inline &&\n                                 add_ldflags -L/opt/vc/lib/ &&\n                                 check_lib mmal interface/mmal/mmal.h mmal_port_connect -lmmal_core -lmmal_util -lmmal_vc_client -lbcm_host; } ||\n                               die \"ERROR: mmal not found\" &&\n                               check_func_headers interface/mmal/mmal.h \"MMAL_PARAMETER_VIDEO_MAX_NUM_CALLBACKS\"; }\nenabled openal            && { check_pkg_config openal \"openal >= 1.1\" \"AL/al.h\" alGetError ||\n                               { for al_extralibs in \"${OPENAL_LIBS}\" \"-lopenal\" \"-lOpenAL32\"; do\n                               check_lib openal 'AL/al.h' alGetError \"${al_extralibs}\" && break; done } ||\n                               die \"ERROR: openal not found\"; } &&\n                             { test_cpp_condition \"AL/al.h\" \"defined(AL_VERSION_1_1)\" ||\n                               die \"ERROR: openal must be installed and version must be 1.1 or compatible\"; }\nenabled opencl            && { check_pkg_config opencl OpenCL CL/cl.h clEnqueueNDRangeKernel ||\n                               check_lib opencl OpenCL/cl.h clEnqueueNDRangeKernel \"-framework OpenCL\" ||\n                               check_lib opencl CL/cl.h clEnqueueNDRangeKernel -lOpenCL ||\n                               die \"ERROR: opencl not found\"; } &&\n                             { test_cpp_condition \"OpenCL/cl.h\" \"defined(CL_VERSION_1_2)\" ||\n                               test_cpp_condition \"CL/cl.h\" \"defined(CL_VERSION_1_2)\" ||\n                               die \"ERROR: opencl must be installed and version must be 1.2 or compatible\"; }\nenabled opengl            && { check_lib opengl GL/glx.h glXGetProcAddress \"-lGL\" ||\n                               check_lib opengl windows.h wglGetProcAddress \"-lopengl32 -lgdi32\" ||\n                               check_lib opengl OpenGL/gl3.h glGetError \"-framework OpenGL\" ||\n                               check_lib opengl ES2/gl.h glGetError \"-isysroot=${sysroot} -framework OpenGLES\" ||\n                               die \"ERROR: opengl not found.\"\n                             }\nenabled omx_rpi           && { test_code cc OMX_Core.h OMX_IndexConfigBrcmVideoRequestIFrame ||\n                               { ! enabled cross_compile &&\n                                 add_cflags -isystem/opt/vc/include/IL &&\n                                 test_code cc OMX_Core.h OMX_IndexConfigBrcmVideoRequestIFrame; } ||\n                               die \"ERROR: OpenMAX IL headers from raspberrypi/firmware not found\"; } &&\n                             enable omx\nenabled omx               && require_headers OMX_Core.h && \\\n    warn \"The OpenMAX encoders are deprecated and will be removed in future versions\"\n\nenabled openssl           && { { check_pkg_config openssl \"openssl >= 3.0.0\" openssl/ssl.h OPENSSL_init_ssl &&\n                                 { enabled gplv3 || ! enabled gpl || enabled nonfree || die \"ERROR: OpenSSL >=3.0.0 requires --enable-version3\"; }; } ||\n                               { enabled gpl && ! enabled nonfree && die \"ERROR: OpenSSL <3.0.0 is incompatible with the gpl\"; } ||\n                               check_pkg_config openssl openssl openssl/ssl.h OPENSSL_init_ssl ||\n                               check_pkg_config openssl openssl openssl/ssl.h SSL_library_init ||\n                               check_lib openssl openssl/ssl.h OPENSSL_init_ssl -lssl -lcrypto ||\n                               check_lib openssl openssl/ssl.h SSL_library_init -lssl -lcrypto ||\n                               check_lib openssl openssl/ssl.h SSL_library_init -lssl32 -leay32 ||\n                               check_lib openssl openssl/ssl.h SSL_library_init -lssl -lcrypto -lws2_32 -lgdi32 ||\n                               die \"ERROR: openssl not found\"; }\nenabled pocketsphinx      && require_pkg_config pocketsphinx pocketsphinx pocketsphinx/pocketsphinx.h ps_init\nenabled rkmpp             && { require_pkg_config rkmpp rockchip_mpp  rockchip/rk_mpi.h mpp_create &&\n                               require_pkg_config rockchip_mpp \"rockchip_mpp >= 1.3.7\" rockchip/rk_mpi.h mpp_create &&\n                               { enabled libdrm ||\n                                 die \"ERROR: rkmpp requires --enable-libdrm\"; }\n                             }\nenabled vapoursynth       && require_headers \"vapoursynth/VSScript4.h vapoursynth/VapourSynth4.h\"\n\n\nif enabled gcrypt; then\n    GCRYPT_CONFIG=\"${cross_prefix}libgcrypt-config\"\n    if \"${GCRYPT_CONFIG}\" --version > /dev/null 2>&1; then\n        gcrypt_cflags=$(\"${GCRYPT_CONFIG}\" --cflags)\n        gcrypt_extralibs=$(\"${GCRYPT_CONFIG}\" --libs)\n        check_func_headers gcrypt.h gcry_mpi_new $gcrypt_cflags $gcrypt_extralibs ||\n            die \"ERROR: gcrypt not found\"\n        add_cflags $gcrypt_cflags\n    else\n        require gcrypt gcrypt.h gcry_mpi_new -lgcrypt\n    fi\nfi\n\nif enabled sdl2; then\n    SDL2_CONFIG=\"${cross_prefix}sdl2-config\"\n    test_pkg_config sdl2 \"sdl2 >= 2.0.1 sdl2 < 3.0.0\" SDL_events.h SDL_PollEvent\n    if disabled sdl2 && \"${SDL2_CONFIG}\" --version > /dev/null 2>&1; then\n        sdl2_cflags=$(\"${SDL2_CONFIG}\" --cflags)\n        sdl2_extralibs=$(\"${SDL2_CONFIG}\" --libs)\n        test_cpp_condition SDL.h \"(SDL_MAJOR_VERSION<<16 | SDL_MINOR_VERSION<<8 | SDL_PATCHLEVEL) >= 0x020001\" $sdl2_cflags &&\n        test_cpp_condition SDL.h \"(SDL_MAJOR_VERSION<<16 | SDL_MINOR_VERSION<<8 | SDL_PATCHLEVEL) < 0x030000\" $sdl2_cflags &&\n        check_func_headers SDL_events.h SDL_PollEvent $sdl2_extralibs $sdl2_cflags &&\n            enable sdl2\n    fi\n    if test $target_os = \"mingw32\"; then\n        sdl2_extralibs=$(filter_out '-mwindows' $sdl2_extralibs)\n    fi\nfi\n\nif enabled decklink; then\n    case $target_os in\n        mingw32*|mingw64*|win32|win64)\n            decklink_outdev_extralibs=\"$decklink_outdev_extralibs -lole32 -loleaut32\"\n            decklink_indev_extralibs=\"$decklink_indev_extralibs -lole32 -loleaut32\"\n            ;;\n    esac\nfi\n\nenabled securetransport &&\n    check_func SecIdentityCreate \"-framework CoreFoundation -framework Security\" &&\n    check_lib securetransport \"Security/SecureTransport.h Security/Security.h\" \"SSLCreateContext\" \"-framework CoreFoundation -framework Security\" ||\n        disable securetransport\n\nenabled securetransport &&\n    check_func SecItemImport \"-framework CoreFoundation -framework Security\"\n\nenabled schannel &&\n    check_func_headers \"windows.h security.h\" InitializeSecurityContext -DSECURITY_WIN32 -lsecur32 &&\n    test_cpp_condition winerror.h \"defined(SEC_I_CONTEXT_EXPIRED)\" &&\n    schannel_extralibs=\"-lsecur32\" ||\n        disable schannel\n\nmakeinfo --version > /dev/null 2>&1 && enable makeinfo  || disable makeinfo\nenabled makeinfo \\\n    && [ 0$(makeinfo --version | grep \"texinfo\" | sed 's/.*texinfo[^0-9]*\\([0-9]*\\)\\..*/\\1/') -ge 5 ] \\\n    && enable makeinfo_html || disable makeinfo_html\ndisabled makeinfo_html && texi2html --help 2> /dev/null | grep -q 'init-file' && enable texi2html || disable texi2html\nperl -v            > /dev/null 2>&1 && enable perl      || disable perl\npod2man --help     > /dev/null 2>&1 && enable pod2man   || disable pod2man\nrsync --help 2> /dev/null | grep -q 'contimeout' && enable rsync_contimeout || disable rsync_contimeout\nxmllint --version  > /dev/null 2>&1 && enable xmllint   || disable xmllint\n\ncheck_headers linux/fb.h\ncheck_headers linux/videodev2.h\ntest_code cc linux/videodev2.h \"struct v4l2_frmsizeenum vfse; vfse.discrete.width = 0;\" && enable_sanitized struct_v4l2_frmivalenum_discrete\ntest_code cc sys/ioctl.h \"int ioctl(int, int, ...)\" && enable posix_ioctl\n\n# check V4L2 codecs available in the API\nif enabled v4l2_m2m; then\n    check_cc v4l2_m2m linux/videodev2.h \"int i = V4L2_CAP_VIDEO_M2M_MPLANE | V4L2_CAP_VIDEO_M2M | V4L2_BUF_FLAG_LAST;\"\n    check_cc vc1_v4l2_m2m linux/videodev2.h \"int i = V4L2_PIX_FMT_VC1_ANNEX_G;\"\n    check_cc mpeg1_v4l2_m2m linux/videodev2.h \"int i = V4L2_PIX_FMT_MPEG1;\"\n    check_cc mpeg2_v4l2_m2m linux/videodev2.h \"int i = V4L2_PIX_FMT_MPEG2;\"\n    check_cc mpeg4_v4l2_m2m linux/videodev2.h \"int i = V4L2_PIX_FMT_MPEG4;\"\n    check_cc hevc_v4l2_m2m linux/videodev2.h \"int i = V4L2_PIX_FMT_HEVC;\"\n    check_cc h263_v4l2_m2m linux/videodev2.h \"int i = V4L2_PIX_FMT_H263;\"\n    check_cc h264_v4l2_m2m linux/videodev2.h \"int i = V4L2_PIX_FMT_H264;\"\n    check_cc vp8_v4l2_m2m linux/videodev2.h \"int i = V4L2_PIX_FMT_VP8;\"\n    check_cc vp9_v4l2_m2m linux/videodev2.h \"int i = V4L2_PIX_FMT_VP9;\"\nfi\n\ncheck_headers sys/videoio.h\ntest_code cc sys/videoio.h \"struct v4l2_frmsizeenum vfse; vfse.discrete.width = 0;\" && enable_sanitized struct_v4l2_frmivalenum_discrete\n\ncheck_lib user32 \"windows.h winuser.h\" GetShellWindow -luser32\ncheck_lib vfw32 \"windows.h vfw.h\" capCreateCaptureWindow -lvfw32\n# check that WM_CAP_DRIVER_CONNECT is defined to the proper value\n# w32api 3.12 had it defined wrong\ncheck_cpp_condition vfwcap_defines vfw.h \"WM_CAP_DRIVER_CONNECT > WM_USER\"\n\ncheck_type \"dshow.h\" IBaseFilter\n\n# check for ioctl_meteor.h, ioctl_bt848.h and alternatives\ncheck_headers \"dev/bktr/ioctl_meteor.h dev/bktr/ioctl_bt848.h\"                   ||\n    check_headers \"machine/ioctl_meteor.h machine/ioctl_bt848.h\"                 ||\n    check_headers \"dev/video/meteor/ioctl_meteor.h dev/video/bktr/ioctl_bt848.h\" ||\n    check_headers \"dev/ic/bt8xx.h\"\n\nif check_struct sys/soundcard.h audio_buf_info bytes; then\n    enable_sanitized sys/soundcard.h\nelse\n    test_cc -D__BSD_VISIBLE -D__XSI_VISIBLE <<EOF && add_cppflags -D__BSD_VISIBLE -D__XSI_VISIBLE && enable_sanitized sys/soundcard.h\n    #include <sys/soundcard.h>\n    audio_buf_info abc;\nEOF\nfi\n\nenabled alsa && { check_pkg_config alsa alsa \"alsa/asoundlib.h\" snd_pcm_htimestamp ||\n                  check_lib alsa alsa/asoundlib.h snd_pcm_htimestamp -lasound; }\n\nenabled libjack &&\n    require_pkg_config libjack jack jack/jack.h jack_port_get_latency_range\n\nenabled sndio && check_pkg_config sndio sndio sndio.h sio_open\n\nif enabled libcdio; then\n    check_pkg_config libcdio libcdio_paranoia \"cdio/cdda.h cdio/paranoia.h\" cdio_cddap_open ||\n    check_pkg_config libcdio libcdio_paranoia \"cdio/paranoia/cdda.h cdio/paranoia/paranoia.h\" cdio_cddap_open ||\n    check_lib libcdio \"cdio/cdda.h cdio/paranoia.h\" cdio_cddap_open -lcdio_paranoia -lcdio_cdda -lcdio ||\n    check_lib libcdio \"cdio/paranoia/cdda.h cdio/paranoia/paranoia.h\" cdio_cddap_open -lcdio_paranoia -lcdio_cdda -lcdio ||\n    die \"ERROR: No usable libcdio/cdparanoia found\"\nfi\n\nenabled libxcb && check_pkg_config libxcb \"xcb >= 1.4\" xcb/xcb.h xcb_connect ||\n    disable libxcb_shm libxcb_shape libxcb_xfixes\n\nif enabled libxcb; then\n    enabled libxcb_shm    && check_pkg_config libxcb_shm    xcb-shm    xcb/shm.h    xcb_shm_attach\n    enabled libxcb_shape  && check_pkg_config libxcb_shape  xcb-shape  xcb/shape.h  xcb_shape_get_rectangles\n    enabled libxcb_xfixes && check_pkg_config libxcb_xfixes xcb-xfixes xcb/xfixes.h xcb_xfixes_get_cursor_image\nfi\n\ncheck_func_headers \"windows.h\" CreateDIBSection \"$gdigrab_indev_extralibs\"\n\n# check if building for desktop or uwp\ntest_cpp <<EOF && enable uwp\n#ifdef WINAPI_FAMILY\n#include <winapifamily.h>\n#if WINAPI_FAMILY_PARTITION(WINAPI_PARTITION_DESKTOP)\n#error desktop, not uwp\n#else\n// WINAPI_FAMILY_APP, WINAPI_FAMILY_PHONE_APP => UWP\n#endif\n#else\n#error no family set\n#endif\nEOF\n\nmediafoundation_extralibs=\"-lmfuuid -lole32 -lstrmiids\"\n\nif enabled uwp; then\n    # In UWP mode, we can't use LoadLibrary+GetProcAddress to conditionally\n    # try to load these APIs at runtime, like we do in regular desktop mode -\n    # therefore, we need to link directly against these APIs.\n    d3d11va_extralibs=\"-ldxgi -ld3d11\"\n    d3d12va_extralibs=\"-ldxgi -ld3d12\"\n    vaapi_win32_extralibs=\"-ldxgi\"\n    mediafoundation_extralibs=\"-lmfplat $mediafoundation_extralibs\"\nfi\n\nenabled libdrm &&\n    check_pkg_config libdrm_getfb2 libdrm \"xf86drmMode.h\" drmModeGetFB2\n\nenabled vaapi &&\n    check_pkg_config vaapi \"libva >= 0.35.0\" \"va/va.h\" vaInitialize\n\nif enabled vaapi; then\n    case $target_os in\n        mingw32*|mingw64*|win32|win64)\n            check_pkg_config vaapi_win32 \"libva-win32\" \"va/va_win32.h\" vaGetDisplayWin32\n            ;;\n        *)\n            check_pkg_config vaapi_drm \"libva-drm\" \"va/va_drm.h\" vaGetDisplayDRM\n            ;;\n    esac\n\n    if enabled xlib_x11; then\n        check_pkg_config vaapi_x11 \"libva-x11\" \"va/va_x11.h\" vaGetDisplay\n    fi\n\n    check_cpp_condition vaapi_1 \"va/va.h\" \"VA_CHECK_VERSION(1, 0, 0)\"\n\n    check_type \"va/va.h va/va_dec_hevc.h\" \"VAPictureParameterBufferHEVC\"\n    check_type \"va/va.h va/va_dec_vvc.h\" \"VAPictureParameterBufferVVC\"\n    check_struct \"va/va.h\" \"VADecPictureParameterBufferVP9\" bit_depth\n    check_struct \"va/va.h\" \"VADecPictureParameterBufferAV1\" bit_depth_idx\n    check_type   \"va/va.h va/va_vpp.h\" \"VAProcFilterParameterBufferHDRToneMapping\"\n    check_struct \"va/va.h va/va_vpp.h\" \"VAProcPipelineCaps\" rotation_flags\n    check_struct \"va/va.h va/va_vpp.h\" \"VAProcPipelineCaps\" blend_flags\n    check_type \"va/va.h va/va_enc_hevc.h\" \"VAEncPictureParameterBufferHEVC\"\n    check_type \"va/va.h va/va_enc_jpeg.h\" \"VAEncPictureParameterBufferJPEG\"\n    check_type \"va/va.h va/va_enc_vp8.h\"  \"VAEncPictureParameterBufferVP8\"\n    check_type \"va/va.h va/va_enc_vp9.h\"  \"VAEncPictureParameterBufferVP9\"\n    check_type \"va/va.h va/va_enc_av1.h\"  \"VAEncPictureParameterBufferAV1\"\nfi\n\nif enabled_all opencl libdrm ; then\n    check_type \"CL/cl_intel.h\" \"clCreateImageFromFdINTEL_fn\" &&\n        enable opencl_drm_beignet\n    check_func_headers \"CL/cl_ext.h\" clImportMemoryARM &&\n        enable opencl_drm_arm\nfi\n\nif enabled_all opencl vaapi ; then\n    if enabled opencl_drm_beignet ; then\n        enable opencl_vaapi_beignet\n    else\n        check_type \"CL/cl.h CL/cl_va_api_media_sharing_intel.h\" \"clCreateFromVA_APIMediaSurfaceINTEL_fn\" &&\n            enable opencl_vaapi_intel_media\n    fi\nfi\n\nif enabled_all opencl dxva2 ; then\n    check_type \"CL/cl_dx9_media_sharing.h\" cl_dx9_surface_info_khr &&\n        enable opencl_dxva2\nfi\n\nif enabled_all opencl d3d11va ; then\n    check_type \"CL/cl_d3d11.h\" clGetDeviceIDsFromD3D11KHR_fn &&\n        enable opencl_d3d11\nfi\n\nif enabled_all opencl videotoolbox ; then\n    check_func_headers OpenCL/cl_gl_ext.h clCreateImageFromIOSurfaceWithPropertiesAPPLE -framework VideoToolbox -framework OpenCL &&\n        enable opencl_videotoolbox\nfi\n\nenabled vdpau &&\n    check_cpp_condition vdpau vdpau/vdpau.h \"defined VDP_DECODER_PROFILE_MPEG4_PART2_ASP\"\n\nenabled vdpau &&\n    check_lib vdpau_x11 \"vdpau/vdpau.h vdpau/vdpau_x11.h\" vdp_device_create_x11 -lvdpau -lX11\n\nif enabled_all vulkan vulkan_static; then\n    check_pkg_config vulkan \"vulkan >= 1.3.277\" \"vulkan/vulkan.h\" \"defined VK_VERSION_1_3\" ||\n        check_lib vulkan \"vulkan/vulkan.h\" vkGetInstanceProcAddr -lvulkan\nelif enabled vulkan; then\n    check_pkg_config_header_only vulkan \"vulkan >= 1.3.277\" \"vulkan/vulkan.h\" \"defined VK_VERSION_1_3\" ||\n        check_cpp_condition vulkan \"vulkan/vulkan.h\" \"defined(VK_VERSION_1_4) || (defined(VK_VERSION_1_3) && VK_HEADER_VERSION >= 277)\"\nfi\n\nif disabled vulkan; then\n    disable libglslang libshaderc spirv_compiler\nfi\n\nif enabled x86; then\n    case $target_os in\n        freebsd|mingw32*|mingw64*|win32|win64|linux|cygwin*)\n            ;;\n        *)\n            disable ffnvcodec cuvid nvdec nvenc\n            ;;\n    esac\nelif enabled_any aarch64 ppc64 && ! enabled bigendian; then\n    case $target_os in\n        linux)\n            ;;\n        *)\n            disable ffnvcodec cuvid nvdec nvenc\n            ;;\n    esac\nelse\n    disable ffnvcodec cuvid nvdec nvenc\nfi\n\nenabled ffnvcodec && enable cuda\n\nenabled nvenc &&\n    test_cc -I$source_path <<EOF || disable nvenc\n#include <ffnvcodec/nvEncodeAPI.h>\nNV_ENCODE_API_FUNCTION_LIST flist;\nvoid f(void) { struct { const GUID guid; } s[] = { { NV_ENC_CODEC_H264_GUID } }; }\nint main(void) { return 0; }\nEOF\n\nif enabled nvenc; then\n    check_type \"ffnvcodec/nvEncodeAPI.h\" \"NV_ENC_PIC_PARAMS_AV1\"\nfi\n\nif enabled_any nvdec cuvid; then\n    check_type \"ffnvcodec/dynlink_cuda.h ffnvcodec/dynlink_cuviddec.h\" \"CUVIDAV1PICPARAMS\"\nfi\n\nenabled amf &&\n    check_cpp_condition amf \"AMF/core/Version.h\" \\\n        \"(AMF_VERSION_MAJOR << 48 | AMF_VERSION_MINOR << 32 | AMF_VERSION_RELEASE << 16 | AMF_VERSION_BUILD_NUM) >= 0x0001000400230000\"\n\n# Funny iconv installations are not unusual, so check it after all flags have been set\nif enabled libc_iconv; then\n    check_func_headers iconv.h iconv\nelif enabled iconv; then\n    check_func_headers iconv.h iconv || check_lib iconv iconv.h iconv -liconv\nfi\n\nenabled debug && add_cflags -g\"$debuglevel\" && add_asflags -g\"$debuglevel\"\n\n# add some useful compiler flags if supported\ncheck_cflags -Wdeclaration-after-statement\ncheck_cflags -Wall\ncheck_cflags -Wdisabled-optimization\ncheck_cflags -Wpointer-arith\ncheck_cflags -Wredundant-decls\ncheck_cflags -Wwrite-strings\ncheck_cflags -Wtype-limits\ncheck_cflags -Wundef\ncheck_cflags -Wmissing-prototypes\ncheck_cflags -Wstrict-prototypes\ncheck_cflags -Wempty-body\n\nif enabled extra_warnings; then\n    check_cflags -Wcast-qual\n    check_cflags -Wextra\n    check_cflags -Wpedantic\nfi\n\ncheck_disable_warning(){\n    warning_flag=-W${1#-Wno-}\n    test_cflags $unknown_warning_flags $warning_flag && add_cflags $1\n}\n\ntest_cflags -Werror=unused-command-line-argument &&\n    append unknown_warning_flags \"-Werror=unused-command-line-argument\"\ntest_cflags -Werror=unknown-warning-option &&\n    append unknown_warning_flags \"-Werror=unknown-warning-option\"\n\ncheck_disable_warning -Wno-parentheses\ncheck_disable_warning -Wno-switch\ncheck_disable_warning -Wno-format-zero-length\ncheck_disable_warning -Wno-pointer-sign\ncheck_disable_warning -Wno-unused-const-variable\ncheck_disable_warning -Wno-bool-operation\ncheck_disable_warning -Wno-char-subscripts\ncheck_disable_warning -Wno-implicit-const-int-float-conversion\n\ncheck_disable_warning_headers(){\n    warning_flag=-W${1#-Wno-}\n    test_cflags $warning_flag && add_cflags_headers $1\n}\n\ncheck_disable_warning_headers -Wno-deprecated-declarations\ncheck_disable_warning_headers -Wno-unused-variable\n\ntest_cc <<EOF && enable blocks_extension\nvoid (^block)(void);\nEOF\n\n# add some linker flags\ncheck_ldflags -Wl,-rpath-link=:libpostproc:libswresample:libswscale:libavfilter:libavdevice:libavformat:libavcodec:libavutil\nenabled rpath && add_ldexeflags -Wl,-rpath,$libdir && add_ldsoflags -Wl,-rpath,$libdir\ntest_ldflags -Wl,-Bsymbolic && append SHFLAGS -Wl,-Bsymbolic\n\n# add some strip flags\ncheck_stripflags -x\n\nenabled neon_clobber_test &&\n    check_ldflags -Wl,--wrap,avcodec_open2              \\\n                  -Wl,--wrap,avcodec_decode_subtitle2   \\\n                  -Wl,--wrap,avcodec_encode_subtitle    \\\n                  -Wl,--wrap,avcodec_send_packet        \\\n                  -Wl,--wrap,avcodec_receive_packet     \\\n                  -Wl,--wrap,avcodec_send_frame         \\\n                  -Wl,--wrap,avcodec_receive_frame      \\\n                  -Wl,--wrap,swr_convert        ||\n    disable neon_clobber_test\n\nenabled xmm_clobber_test &&\n    check_ldflags -Wl,--wrap,avcodec_open2              \\\n                  -Wl,--wrap,avcodec_decode_subtitle2   \\\n                  -Wl,--wrap,avcodec_encode_subtitle    \\\n                  -Wl,--wrap,avcodec_send_packet        \\\n                  -Wl,--wrap,avcodec_receive_packet     \\\n                  -Wl,--wrap,avcodec_send_frame         \\\n                  -Wl,--wrap,avcodec_receive_frame      \\\n                  -Wl,--wrap,swr_convert                \\\n                  -Wl,--wrap,sws_scale ||\n    disable xmm_clobber_test\n\ncheck_ld \"cc\" proper_dce <<EOF\nextern const int array[512];\nstatic inline int func(void) { return array[0]; }\nint main(void) { return 0; }\nEOF\n\nif enabled proper_dce; then\n    echo \"X { local: *; };\" > $TMPV\n    if test_ldflags -Wl,${version_script},$TMPV; then\n        append SHFLAGS '-Wl,${version_script},\\$(SUBDIR)lib\\$(NAME).ver'\n        quotes='\"\"'\n        test_cc <<EOF && enable symver_asm_label\nvoid ff_foo(void) __asm__ (\"av_foo@VERSION\");\nvoid ff_foo(void) { ${inline_asm+__asm__($quotes);} }\nEOF\n        test_cc <<EOF && enable symver_gnu_asm\n__asm__(\".symver ff_foo,av_foo@VERSION\");\nvoid ff_foo(void) {}\nEOF\n    fi\nfi\n\nif [ -z \"$optflags\" ]; then\n    if enabled small; then\n        optflags=$cflags_size\n    elif enabled optimizations; then\n        optflags=$cflags_speed\n    else\n        optflags=$cflags_noopt\n    fi\nfi\n\ncheck_optflags(){\n    check_cflags \"$@\"\n    [ -n \"$lto\" ] && check_ldflags \"$@\"\n}\n\ncheck_optflags $optflags\ncheck_optflags -fno-math-errno\ncheck_optflags -fno-signed-zeros\n\nif [ -n \"$lto\" ]; then\n    test \"$cc_type\" != \"$ld_type\" && die \"LTO requires same compiler and linker\"\n    check_cflags  $lto\n    check_ldflags $lto $cpuflags\n    disable inline_asm_direct_symbol_refs\n    if test \"$cc_type\" = \"clang\"; then\n        # Clang's LTO fails on Windows, when there are references outside\n        # of inline assembly to nonlocal labels defined within inline assembly,\n        # see https://github.com/llvm/llvm-project/issues/76046.\n        case $target_os in\n        mingw32|win32)\n            disable inline_asm_nonlocal_labels\n            ;;\n        esac\n    fi\nfi\n\nenabled ftrapv && check_cflags -ftrapv\n\ntest_cc -mno-red-zone <<EOF && noredzone_flags=\"-mno-red-zone\"\nint x;\nEOF\n\n\nif enabled icc; then\n    # Just warnings, no remarks\n    check_cflags -w1\n    # -wd: Disable following warnings\n    # 144, 167, 556: -Wno-pointer-sign\n    # 188: enumerated type mixed with another type\n    # 1292: attribute \"foo\" ignored\n    # 1419: external declaration in primary source file\n    # 10006: ignoring unknown option -fno-signed-zeros\n    # 10148: ignoring unknown option -Wno-parentheses\n    # 10156: ignoring option '-W'; no argument required\n    # 13200: No EMMS instruction before call to function\n    # 13203: No EMMS instruction before return from function\n    check_cflags -wd144,167,188,556,1292,1419,10006,10148,10156,13200,13203\n    # 11030: Warning unknown option --as-needed\n    # 10156: ignoring option '-export'; no argument required\n    check_ldflags -wd10156,11030\n    # icc 11.0 and 11.1 work with ebp_available, but don't pass the test\n    enable ebp_available\n    # The test above does not test linking\n    [ -n \"$lto\" ] && disable symver_asm_label\n    if enabled x86_32; then\n        icc_version=$($cc -dumpversion)\n        test ${icc_version%%.*} -ge 11 &&\n            check_cflags -falign-stack=maintain-16-byte ||\n            disable aligned_stack\n    fi\nelif enabled gcc; then\n    check_optflags -fno-tree-vectorize\n    check_cflags -Werror=format-security\n    check_cflags -Werror=implicit-function-declaration\n    check_cflags -Werror=missing-prototypes\n    check_cflags -Werror=return-type\n    check_cflags -Werror=vla\n    check_cflags -Wformat\n    check_cflags -fdiagnostics-color=auto\n    enabled extra_warnings || check_disable_warning -Wno-maybe-uninitialized\n    if enabled x86_32; then\n        case $target_os in\n        *bsd*)\n            # BSDs don't guarantee a 16 byte aligned stack, but we can\n            # request GCC to try to maintain 16 byte alignment throughout\n            # function calls. Library entry points that might call assembly\n            # functions align the stack. (The parameter means 2^4 bytes.)\n            check_cflags -mpreferred-stack-boundary=4\n            ;;\n        esac\n    fi\nelif enabled llvm_gcc; then\n    check_cflags -mllvm -stack-alignment=16\nelif enabled clang; then\n    if enabled x86_32; then\n        # Clang doesn't support maintaining alignment without assuming the\n        # same alignment in every function. If 16 byte alignment would be\n        # enabled, one would also have to either add attribute_align_arg on\n        # every single entry point into the libraries or enable -mstackrealign\n        # (doing stack realignment in every single function).\n        case $target_os in\n        mingw32|win32|*bsd*)\n            disable aligned_stack\n            ;;\n        *)\n            check_cflags -mllvm -stack-alignment=16\n            check_cflags -mstack-alignment=16\n            ;;\n        esac\n    else\n        check_cflags -mllvm -stack-alignment=16\n        check_cflags -mstack-alignment=16\n    fi\n    check_cflags -Qunused-arguments\n    check_cflags -Werror=implicit-function-declaration\n    check_cflags -Werror=missing-prototypes\n    check_cflags -Werror=return-type\nelif enabled cparser; then\n    add_cflags -Wno-missing-variable-declarations\n    add_cflags -Wno-empty-statement\nelif enabled armcc; then\n    add_cflags -W${armcc_opt},--diag_suppress=4343 # hardfp compat\n    add_cflags -W${armcc_opt},--diag_suppress=3036 # using . as system include dir\n    # 2523: use of inline assembly is deprecated\n    add_cflags -W${armcc_opt},--diag_suppress=2523\n    add_cflags -W${armcc_opt},--diag_suppress=1207\n    add_cflags -W${armcc_opt},--diag_suppress=1293 # assignment in condition\n    add_cflags -W${armcc_opt},--diag_suppress=3343 # hardfp compat\n    add_cflags -W${armcc_opt},--diag_suppress=167  # pointer sign\n    add_cflags -W${armcc_opt},--diag_suppress=513  # pointer sign\nelif enabled pathscale; then\n    add_cflags -fstrict-overflow -OPT:wrap_around_unsafe_opt=OFF\n    disable inline_asm\nelif enabled_any msvc icl; then\n    enabled x86_32 && disable aligned_stack\n    enabled_all x86_32 debug && add_cflags -Oy-\n    enabled debug && add_ldflags -debug\n    enable pragma_deprecated\n    if enabled icl; then\n        # -Qansi-alias is basically -fstrict-aliasing, but does not work\n        # (correctly) on icl 13.x.\n        test_cpp_condition \"windows.h\" \"__ICL < 1300 || __ICL >= 1400\" &&\n            add_cflags -Qansi-alias\n        # Some inline asm is not compilable in debug\n        if enabled debug; then\n            disable ebp_available\n            disable ebx_available\n        fi\n    fi\n    # msvcrt10 x64 incorrectly enables log2, only msvcrt12 (MSVC 2013) onwards actually has log2.\n    check_cpp_condition log2 crtversion.h \"_VC_CRT_MAJOR_VERSION >= 12\"\n    # the new SSA optimzer in VS2015 U3 is mis-optimizing some parts of the code\n    # Issue has been fixed in MSVC v19.00.24218.\n    test_cpp_condition windows.h \"_MSC_FULL_VER >= 190024218\" ||\n        check_cflags -d2SSAOptimizer-\n    # enable utf-8 source processing on VS2015 U2 and newer\n    test_cpp_condition windows.h \"_MSC_FULL_VER >= 190023918\" &&\n        add_cflags -utf-8\nfi\n\nfor pfx in \"\" host_; do\n    varname=${pfx%_}cc_type\n    eval \"type=\\$$varname\"\n    if [ \"$type\" = \"msvc\" ]; then\n        test_${pfx}cc <<EOF || add_${pfx}cflags -Dinline=__inline\nstatic inline int foo(int a) { return a; }\nEOF\n    fi\ndone\n\ncase $as_type in\n    clang)\n        add_asflags -Qunused-arguments\n    ;;\nesac\n\ncase $ld_type in\n    clang)\n        check_ldflags -Qunused-arguments\n    ;;\nesac\n\nenable frame_thread_encoder\n\nenabled asm || { arch=c; disable $ARCH_LIST $ARCH_EXT_LIST; }\n\ncheck_deps $CONFIG_LIST       \\\n           $CONFIG_EXTRA      \\\n           $HAVE_LIST         \\\n           $ALL_COMPONENTS    \\\n\nenabled threads && ! enabled pthreads && ! enabled atomics_native && die \"non pthread threading without atomics not supported, try adding --enable-pthreads or --cpu=i486 or higher if you are on x86\"\n\nenabled threads || warn \\\n    \"Threading support was disabled or is not available on the target platform.\" \\\n    \"This means that not only is this build not multi-threaded, but also\"    \\\n    \"that the libraries from this build MUST NOT be used in a multi-threaded\"\\\n    \"environment.\"\n\ncase $target_os in\nhaiku)\n    disable memalign\n    disable posix_memalign\n    ;;\n*-dos|freedos|opendos)\n    if test_cpp_condition sys/version.h \"defined(__DJGPP__) && __DJGPP__ == 2 && __DJGPP_MINOR__ == 5\"; then\n        disable memalign\n    fi\n    ;;\nesac\n\nflatten_extralibs(){\n    nested_entries=\n    list_name=$1\n    eval list=\\$${1}\n    for entry in $list; do\n        entry_copy=$entry\n        resolve entry_copy\n        flat_entries=\n        for e in $entry_copy; do\n            case $e in\n                *_extralibs) nested_entries=\"$nested_entries$e \";;\n                          *) flat_entries=\"$flat_entries$e \";;\n            esac\n        done\n        eval $entry=\"\\$flat_entries\"\n    done\n    append $list_name \"$nested_entries\"\n\n    resolve nested_entries\n    if test -n \"$(filter '*_extralibs' $nested_entries)\"; then\n        flatten_extralibs $list_name\n    fi\n}\n\nflatten_extralibs_wrapper(){\n    list_name=$1\n    flatten_extralibs $list_name\n    unique $list_name\n    resolve $list_name\n    eval $list_name=\\$\\(\\$ldflags_filter \\$$list_name\\)\n    eval printf \\''%s'\\' \\\"\"\\$$list_name\"\\\"\n}\n\nfor linkunit in $LIBRARY_LIST; do\n    unset current_extralibs\n    eval components=\\$$(toupper ${linkunit})_COMPONENTS_LIST\n    for comp in ${components}; do\n        enabled $comp || continue\n        comp_extralibs=\"${comp}_extralibs\"\n        append current_extralibs $comp_extralibs\n    done\n    eval prepend ${linkunit}_extralibs $current_extralibs\ndone\n\nfor linkunit in $LIBRARY_LIST $PROGRAM_LIST $EXTRALIBS_LIST; do\n    eval ${linkunit}_extralibs=\\$\\(flatten_extralibs_wrapper ${linkunit}_extralibs\\)\ndone\n\nmap 'enabled $v && intrinsics=${v#intrinsics_}' $INTRINSICS_LIST\n\nfor thread in $THREADS_LIST; do\n    if enabled $thread; then\n        test -n \"$thread_type\" &&\n            die \"ERROR: Only one thread type must be selected.\" ||\n            thread_type=\"$thread\"\n    fi\ndone\n\nif disabled stdatomic; then\n    if enabled atomics_win32; then\n        add_cppflags '-I\\$(SRC_PATH)/compat/atomics/win32'\n    else\n        enabled threads && die \"Threading is enabled, but no atomics are available\"\n        add_cppflags '-I\\$(SRC_PATH)/compat/atomics/dummy'\n    fi\nfi\n\ncheck_builtin stdbit \"stdbit.h assert.h\" \\\n    'static_assert(__STDC_VERSION_STDBIT_H__ >= 202311L, \"Compiler lacks stdbit.h\")' || \\\n    add_cppflags '-I\\$(SRC_PATH)/compat/stdbit'\n\n# Check if requested libraries were found.\nfor lib in $AUTODETECT_LIBS; do\n    requested $lib && ! enabled $lib && die \"ERROR: $lib requested but not found\";\ndone\n\nenabled zlib && add_cppflags -DZLIB_CONST\n\n# conditional library dependencies, in any order\nenabled amovie_filter       && prepend avfilter_deps \"avformat avcodec\"\nenabled aresample_filter    && prepend avfilter_deps \"swresample\"\nenabled cover_rect_filter   && prepend avfilter_deps \"avformat avcodec\"\nenabled ebur128_filter && enabled swresample && prepend avfilter_deps \"swresample\"\nenabled elbg_filter         && prepend avfilter_deps \"avcodec\"\nenabled find_rect_filter    && prepend avfilter_deps \"avformat avcodec\"\nenabled fsync_filter        && prepend avfilter_deps \"avformat\"\nenabled mcdeint_filter      && prepend avfilter_deps \"avcodec\"\nenabled movie_filter        && prepend avfilter_deps \"avformat avcodec\"\nenabled pan_filter          && prepend avfilter_deps \"swresample\"\nenabled pp_filter           && prepend avfilter_deps \"postproc\"\nenabled qrencode_filter     && prepend avfilter_deps \"swscale\"\nenabled qrencodesrc_filter  && prepend avfilter_deps \"swscale\"\nenabled removelogo_filter   && prepend avfilter_deps \"avformat avcodec swscale\"\nenabled sab_filter          && prepend avfilter_deps \"swscale\"\nenabled scale_filter        && prepend avfilter_deps \"swscale\"\nenabled scale2ref_filter    && prepend avfilter_deps \"swscale\"\nenabled showcqt_filter      && prepend avfilter_deps \"avformat swscale\"\nenabled signature_filter    && prepend avfilter_deps \"avcodec avformat\"\nenabled smartblur_filter    && prepend avfilter_deps \"swscale\"\nenabled spp_filter          && prepend avfilter_deps \"avcodec\"\nenabled sr_filter           && prepend avfilter_deps \"avformat swscale\"\nenabled subtitles_filter    && prepend avfilter_deps \"avformat avcodec\"\nenabled uspp_filter         && prepend avfilter_deps \"avcodec\"\nenabled zoompan_filter      && prepend avfilter_deps \"swscale\"\n\nenabled lavfi_indev         && prepend avdevice_deps \"avfilter\"\n\n#FIXME\nenabled_any sdl2_outdev opengl_outdev && enabled sdl2 &&\n    add_cflags $(filter_out '-Dmain=SDL_main' $sdl2_cflags)\n\nenabled opus_decoder    && prepend avcodec_deps \"swresample\"\n\n# reorder the items at var $1 to align with the items order at var $2 .\n# die if an item at $1 is not at $2 .\nreorder_by(){\n    eval rb_in=\\$$1\n    eval rb_ordered=\\$$2\n\n    for rb in $rb_in; do\n        is_in $rb $rb_ordered || die \"$rb at \\$$1 is not at \\$$2\"\n    done\n\n    rb_out=\n    for rb in $rb_ordered; do\n        is_in $rb $rb_in && rb_out=\"$rb_out$rb \"\n    done\n    eval $1=\\$rb_out\n}\n\n# deps-expand fflib $1:  N x {append all expanded deps; unique}\n# within a set of N items, N expansions are enough to expose a cycle.\nexpand_deps(){\n    unique ${1}_deps  # required for the early break test.\n    for dummy in $LIBRARY_LIST; do  # N iteratios\n        eval deps=\\$${1}_deps\n        append ${1}_deps $(map 'eval echo \\$${v}_deps' $deps)\n        unique ${1}_deps\n        eval '[ ${#deps} = ${#'${1}_deps'} ]' && break  # doesn't expand anymore\n    done\n\n    eval is_in $1 \\$${1}_deps && die \"Dependency cycle at ${1}_deps\"\n    reorder_by ${1}_deps LIBRARY_LIST  # linking order is expected later\n}\n\n#we have to remove gpl from the deps here as some code assumes all lib deps are libs\npostproc_deps=\"$(filter_out 'gpl' $postproc_deps)\"\n\nmap 'expand_deps $v' $LIBRARY_LIST\n\nif test \"$quiet\" != \"yes\"; then\n\necho \"install prefix            $prefix\"\necho \"source path               $source_path\"\necho \"C compiler                $cc\"\necho \"C library                 $libc_type\"\nif test \"$host_cc\" != \"$cc\"; then\n    echo \"host C compiler           $host_cc\"\n    echo \"host C library            $host_libc_type\"\nfi\necho \"ARCH                      $arch ($cpu)\"\nif test \"$build_suffix\" != \"\"; then\n    echo \"build suffix              $build_suffix\"\nfi\nif test \"$progs_suffix\" != \"\"; then\n    echo \"progs suffix              $progs_suffix\"\nfi\nif test \"$extra_version\" != \"\"; then\n    echo \"version string suffix     $extra_version\"\nfi\necho \"big-endian                ${bigendian-no}\"\necho \"runtime cpu detection     ${runtime_cpudetect-no}\"\nif enabled x86; then\n    echo \"standalone assembly       ${x86asm-no}\"\n    echo \"x86 assembler             ${x86asmexe}\"\n    echo \"MMX enabled               ${mmx-no}\"\n    echo \"MMXEXT enabled            ${mmxext-no}\"\n    echo \"3DNow! enabled            ${amd3dnow-no}\"\n    echo \"3DNow! extended enabled   ${amd3dnowext-no}\"\n    echo \"SSE enabled               ${sse-no}\"\n    echo \"SSSE3 enabled             ${ssse3-no}\"\n    echo \"AESNI enabled             ${aesni-no}\"\n    echo \"AVX enabled               ${avx-no}\"\n    echo \"AVX2 enabled              ${avx2-no}\"\n    echo \"AVX-512 enabled           ${avx512-no}\"\n    echo \"AVX-512ICL enabled        ${avx512icl-no}\"\n    echo \"XOP enabled               ${xop-no}\"\n    echo \"FMA3 enabled              ${fma3-no}\"\n    echo \"FMA4 enabled              ${fma4-no}\"\n    echo \"i686 features enabled     ${i686-no}\"\n    echo \"CMOV is fast              ${fast_cmov-no}\"\n    echo \"EBX available             ${ebx_available-no}\"\n    echo \"EBP available             ${ebp_available-no}\"\nfi\nif enabled aarch64; then\n    echo \"NEON enabled              ${neon-no}\"\n    echo \"DOTPROD enabled           ${dotprod-no}\"\n    echo \"I8MM enabled              ${i8mm-no}\"\n    echo \"SVE enabled               ${sve-no}\"\n    echo \"SVE2 enabled              ${sve2-no}\"\nfi\nif enabled arm; then\n    echo \"ARMv5TE enabled           ${armv5te-no}\"\n    echo \"ARMv6 enabled             ${armv6-no}\"\n    echo \"ARMv6T2 enabled           ${armv6t2-no}\"\n    echo \"VFP enabled               ${vfp-no}\"\n    echo \"NEON enabled              ${neon-no}\"\n    echo \"THUMB enabled             ${thumb-no}\"\nfi\nif enabled mips; then\n    echo \"MIPS FPU enabled          ${mipsfpu-no}\"\n    echo \"MIPS DSP R1 enabled       ${mipsdsp-no}\"\n    echo \"MIPS DSP R2 enabled       ${mipsdspr2-no}\"\n    echo \"MIPS MSA enabled          ${msa-no}\"\n    echo \"LOONGSON MMI enabled      ${mmi-no}\"\nfi\nif enabled ppc; then\n    echo \"AltiVec enabled           ${altivec-no}\"\n    echo \"VSX enabled               ${vsx-no}\"\n    echo \"POWER8 enabled            ${power8-no}\"\n    echo \"PPC 4xx optimizations     ${ppc4xx-no}\"\n    echo \"dcbzl available           ${dcbzl-no}\"\nfi\nif enabled loongarch; then\n    echo \"LSX enabled               ${lsx-no}\"\n    echo \"LASX enabled              ${lasx-no}\"\nfi\nif enabled riscv; then\n    echo \"RISC-V CBO Prefetch       ${rv_zicbop-no}\"\n    echo \"RISC-V Vector enabled     ${rvv-no}\"\nfi\necho \"debug symbols             ${debug-no}\"\necho \"strip symbols             ${stripping-no}\"\necho \"optimize for size         ${small-no}\"\necho \"optimizations             ${optimizations-no}\"\necho \"static                    ${static-no}\"\necho \"shared                    ${shared-no}\"\necho \"postprocessing support    ${postproc-no}\"\necho \"network support           ${network-no}\"\necho \"threading support         ${thread_type-no}\"\necho \"safe bitstream reader     ${safe_bitstream_reader-no}\"\necho \"texi2html enabled         ${texi2html-no}\"\necho \"perl enabled              ${perl-no}\"\necho \"pod2man enabled           ${pod2man-no}\"\necho \"makeinfo enabled          ${makeinfo-no}\"\necho \"makeinfo supports HTML    ${makeinfo_html-no}\"\necho \"xmllint enabled           ${xmllint-no}\"\ntest -n \"$random_seed\" &&\n    echo \"random seed               ${random_seed}\"\necho\n\necho \"External libraries:\"\nprint_enabled '' $EXTERNAL_LIBRARY_LIST $EXTERNAL_AUTODETECT_LIBRARY_LIST | print_in_columns\necho\n\necho \"External libraries providing hardware acceleration:\"\nprint_enabled '' $HWACCEL_LIBRARY_LIST $HWACCEL_AUTODETECT_LIBRARY_LIST | print_in_columns\necho\n\necho \"Libraries:\"\nprint_enabled '' $LIBRARY_LIST | print_in_columns\necho\n\necho \"Programs:\"\nprint_enabled '' $PROGRAM_LIST | print_in_columns\necho\n\nfor type in decoder encoder hwaccel parser demuxer muxer protocol filter bsf indev outdev; do\n    echo \"Enabled ${type}s:\"\n    eval list=\\$$(toupper $type)_LIST\n    print_enabled '_*' $list | print_in_columns\n    echo\ndone\n\nif test -n \"$ignore_tests\"; then\n    ignore_tests=$(echo $ignore_tests | tr ',' ' ')\n    echo \"Ignored FATE tests:\"\n    echo $ignore_tests | print_in_columns\n    echo\nfi\n\necho \"License: $license\"\n\nfi # test \"$quiet\" != \"yes\"\n\nif test -n \"$WARN_IF_GETS_DISABLED_LIST\"; then\n    for cfg in $WARN_IF_GETS_DISABLED_LIST; do\n        if disabled $cfg; then\n            varname=${cfg}_disable_reason\n            eval \"warn \\\"Disabled $cfg because \\$$varname\\\"\"\n        fi\n    done\nfi\n\nif test -n \"$WARNINGS\"; then\n    printf \"\\n%s%s$WARNINGS%s\" \"$warn_color\" \"$bold_color\" \"$reset_color\"\n    enabled fatal_warnings && exit 1\nfi\n\ntest -e Makefile || echo \"include $source_path/Makefile\" > Makefile\n\nesc(){\n    echo \"$*\" | sed 's/%/%25/g;s/:/%3a/g'\n}\n\necho \"config:$arch:$subarch:$cpu:$target_os:$(esc $cc_ident):$(esc $FFMPEG_CONFIGURATION)\" > ffbuild/config.fate\n\nenabled stripping || strip=\"echo skipping strip\"\nenabled stripping || striptype=\"\"\n\nconfig_files=\"$TMPH ffbuild/config.mak doc/config.texi\"\n\ncat > ffbuild/config.mak <<EOF\n# Automatically generated by configure - do not modify!\nifndef FFMPEG_CONFIG_MAK\nFFMPEG_CONFIG_MAK=1\nFFMPEG_CONFIGURATION=$FFMPEG_CONFIGURATION\nprefix=$prefix\nLIBDIR=\\$(DESTDIR)$libdir\nSHLIBDIR=\\$(DESTDIR)$shlibdir\nINCDIR=\\$(DESTDIR)$incdir\nBINDIR=\\$(DESTDIR)$bindir\nDATADIR=\\$(DESTDIR)$datadir\nDOCDIR=\\$(DESTDIR)$docdir\nMANDIR=\\$(DESTDIR)$mandir\nPKGCONFIGDIR=\\$(DESTDIR)$pkgconfigdir\nINSTALL_NAME_DIR=$install_name_dir\nSRC_PATH=$source_path\nSRC_LINK=$source_link\nifndef MAIN_MAKEFILE\nSRC_PATH:=\\$(SRC_PATH:.%=..%)\nendif\nCC_IDENT=$cc_ident\nARCH=$arch\nINTRINSICS=$intrinsics\nEXTERN_PREFIX=$extern_prefix\nCC=$cc\nCXX=$cxx\nAS=$as\nOBJCC=$objcc\nLD=$ld\nDEPCC=$dep_cc\nDEPCCFLAGS=$DEPCCFLAGS \\$(CPPFLAGS)\nDEPAS=$as\nDEPASFLAGS=$DEPASFLAGS \\$(CPPFLAGS)\nX86ASM=$x86asmexe\nDEPX86ASM=$x86asmexe\nDEPX86ASMFLAGS=\\$(X86ASMFLAGS)\nAR=$ar\nARFLAGS=$arflags\nAR_O=$ar_o\nAR_CMD=$ar\nNM_CMD=$nm\nMETALCC=$metalcc\nMETALLIB=$metallib\nRANLIB=$ranlib\nSTRIP=$strip\nSTRIPTYPE=$striptype\nNVCC=$nvcc\nCP=cp -p\nLN_S=$ln_s\nCPPFLAGS=$CPPFLAGS\nCFLAGS=$CFLAGS\nCXXFLAGS=$CXXFLAGS\nOBJCCFLAGS=$OBJCFLAGS\nASFLAGS=$ASFLAGS\nNVCCFLAGS=$nvccflags\nAS_C=$AS_C\nAS_O=$AS_O\nOBJCC_C=$OBJCC_C\nOBJCC_E=$OBJCC_E\nOBJCC_O=$OBJCC_O\nCC_C=$CC_C\nCC_E=$CC_E\nCC_O=$CC_O\nCXX_C=$CXX_C\nCXX_O=$CXX_O\nNVCC_C=$NVCC_C\nNVCC_O=$NVCC_O\nLD_O=$LD_O\nX86ASM_O=$X86ASM_O\nLD_LIB=$LD_LIB\nLD_PATH=$LD_PATH\nDLLTOOL=$dlltool\nWINDRES=$windres\nDOXYGEN=$doxygen\nLDFLAGS=$LDFLAGS\nLDEXEFLAGS=$LDEXEFLAGS\nLDSOFLAGS=$LDSOFLAGS\nSHFLAGS=$(echo $($ldflags_filter $SHFLAGS))\nASMSTRIPFLAGS=$ASMSTRIPFLAGS\nX86ASMFLAGS=$X86ASMFLAGS\nMSAFLAGS=$MSAFLAGS\nMMIFLAGS=$MMIFLAGS\nLSXFLAGS=$LSXFLAGS\nLASXFLAGS=$LASXFLAGS\nBUILDSUF=$build_suffix\nPROGSSUF=$progs_suffix\nFULLNAME=$FULLNAME\nLIBPREF=$LIBPREF\nLIBSUF=$LIBSUF\nLIBNAME=$LIBNAME\nSLIBPREF=$SLIBPREF\nSLIBSUF=$SLIBSUF\nEXESUF=$EXESUF\nEXTRA_VERSION=$extra_version\nCCDEP=$CCDEP\nCXXDEP=$CXXDEP\nCCDEP_FLAGS=$CCDEP_FLAGS\nASDEP=$ASDEP\nASDEP_FLAGS=$ASDEP_FLAGS\nX86ASMDEP=$X86ASMDEP\nX86ASMDEP_FLAGS=$X86ASMDEP_FLAGS\nCC_DEPFLAGS=$CC_DEPFLAGS\nCXX_DEPFLAGS=$CXX_DEPFLAGS\nOBJCC_DEPFLAGS=$OBJC_DEPFLAGS\nAS_DEPFLAGS=$AS_DEPFLAGS\nX86ASM_DEPFLAGS=$X86ASM_DEPFLAGS\nHOSTCC=$host_cc\nHOSTLD=$host_ld\nHOSTCFLAGS=$host_cflags\nHOSTCPPFLAGS=$host_cppflags\nHOSTEXESUF=$HOSTEXESUF\nHOSTLDFLAGS=$host_ldflags\nHOSTEXTRALIBS=$host_extralibs\nDEPHOSTCC=$host_cc\nDEPHOSTCCFLAGS=$DEPHOSTCCFLAGS \\$(HOSTCCFLAGS)\nHOSTCCDEP=$HOSTCCDEP\nHOSTCCDEP_FLAGS=$HOSTCCDEP_FLAGS\nHOSTCC_DEPFLAGS=$HOSTCC_DEPFLAGS\nHOSTCC_C=$HOSTCC_C\nHOSTCC_O=$HOSTCC_O\nHOSTLD_O=$HOSTLD_O\nTARGET_EXEC=$target_exec $target_exec_args\nTARGET_PATH=$target_path\nTARGET_SAMPLES=${target_samples:-\\$(SAMPLES)}\nCFLAGS-ffplay=${sdl2_cflags}\nCFLAGS_HEADERS=$CFLAGS_HEADERS\nLIB_INSTALL_EXTRA_CMD=$LIB_INSTALL_EXTRA_CMD\nEXTRALIBS=$extralibs\nCOMPAT_OBJS=$compat_objs\nINSTALL=$install\nLIBTARGET=${LIBTARGET}\nSLIBNAME=${SLIBNAME}\nSLIBNAME_WITH_VERSION=${SLIBNAME_WITH_VERSION}\nSLIBNAME_WITH_MAJOR=${SLIBNAME_WITH_MAJOR}\nSLIB_CREATE_DEF_CMD=${SLIB_CREATE_DEF_CMD}\nSLIB_EXTRA_CMD=${SLIB_EXTRA_CMD}\nSLIB_INSTALL_NAME=${SLIB_INSTALL_NAME}\nSLIB_INSTALL_LINKS=${SLIB_INSTALL_LINKS}\nSLIB_INSTALL_EXTRA_LIB=${SLIB_INSTALL_EXTRA_LIB}\nSLIB_INSTALL_EXTRA_SHLIB=${SLIB_INSTALL_EXTRA_SHLIB}\nVERSION_SCRIPT_POSTPROCESS_CMD=${VERSION_SCRIPT_POSTPROCESS_CMD}\nSAMPLES:=${samples:-\\$(FATE_SAMPLES)}\nNOREDZONE_FLAGS=$noredzone_flags\nLIBFUZZER_PATH=$libfuzzer_path\nIGNORE_TESTS=$ignore_tests\nVERSION_TRACKING=$version_tracking\nEOF\n\nmap 'eval echo \"${v}_FFLIBS=\\$${v}_deps\" >> ffbuild/config.mak' $LIBRARY_LIST\n\nfor entry in $LIBRARY_LIST $PROGRAM_LIST $EXTRALIBS_LIST; do\n    eval echo \"EXTRALIBS-${entry}=\\$${entry}_extralibs\" >> ffbuild/config.mak\ndone\n\ncat > $TMPH <<EOF\n/* Automatically generated by configure - do not modify! */\n#ifndef FFMPEG_CONFIG_H\n#define FFMPEG_CONFIG_H\n#define FFMPEG_CONFIGURATION \"$(c_escape $FFMPEG_CONFIGURATION)\"\n#define FFMPEG_LICENSE \"$(c_escape $license)\"\n#define CONFIG_THIS_YEAR 2025\n#define FFMPEG_DATADIR \"$(eval c_escape $datadir)\"\n#define AVCONV_DATADIR \"$(eval c_escape $datadir)\"\n#define CC_IDENT \"$(c_escape ${cc_ident:-Unknown compiler})\"\n#define OS_NAME $target_os\n#define EXTERN_PREFIX \"${extern_prefix}\"\n#define EXTERN_ASM ${extern_prefix}\n#define BUILDSUF \"$build_suffix\"\n#define SLIBSUF \"$SLIBSUF\"\n#define SWS_MAX_FILTER_SIZE $sws_max_filter_size\nEOF\n\ntest -n \"$assert_level\" &&\n    echo \"#define ASSERT_LEVEL $assert_level\" >>$TMPH\n\ntest -n \"$malloc_prefix\" &&\n    echo \"#define MALLOC_PREFIX $malloc_prefix\" >>$TMPH\n\nenabled aarch64 &&\n    echo \"#define AS_ARCH_LEVEL $as_arch_level\" >>$TMPH\n\nif enabled x86asm; then\n    append config_files $TMPASM\n    cat > $TMPASM <<EOF\n; Automatically generated by configure - do not modify!\nEOF\nfi\n\nenabled getenv || echo \"#define getenv(x) NULL\" >> $TMPH\n\n\nmkdir -p doc\nmkdir -p tests\nmkdir -p tests/api\necho \"@c auto-generated by configure - do not modify! \" > doc/config.texi\n\nprint_config ARCH_   \"$config_files\" $ARCH_LIST\nprint_config HAVE_   \"$config_files\" $HAVE_LIST\nprint_config CONFIG_ \"$config_files\" $CONFIG_LIST       \\\n                                     $CONFIG_EXTRA      \\\n\necho \"#endif /* FFMPEG_CONFIG_H */\" >> $TMPH\n\n# Do not overwrite an unchanged config.h to avoid superfluous rebuilds.\ncp_if_changed $TMPH config.h\ntouch ffbuild/.config\n\n# Copy config.asm before printing ALL_COMPONENTS; that's not needed in assembly.\nenabled x86asm && cp_if_changed $TMPASM config.asm\n\n# Reopen a new TMPH for config_components.h.\ncat > $TMPH <<EOF\n/* Automatically generated by configure - do not modify! */\n#ifndef FFMPEG_CONFIG_COMPONENTS_H\n#define FFMPEG_CONFIG_COMPONENTS_H\nEOF\n\nprint_config CONFIG_ \"$config_files\" $ALL_COMPONENTS\n\necho \"#endif /* FFMPEG_CONFIG_COMPONENTS_H */\" >> $TMPH\necho \"endif # FFMPEG_CONFIG_MAK\" >> ffbuild/config.mak\n\ncp_if_changed $TMPH config_components.h\n\ncat > $TMPH <<EOF\n/* Generated by ffmpeg configure */\n#ifndef AVUTIL_AVCONFIG_H\n#define AVUTIL_AVCONFIG_H\nEOF\n\nprint_config AV_HAVE_ $TMPH $HAVE_LIST_PUB\n\necho \"#endif /* AVUTIL_AVCONFIG_H */\" >> $TMPH\n\ncp_if_changed $TMPH libavutil/avconfig.h\n\n# full_filter_name_foo=vf_foo\n# full_filter_name_bar=asrc_bar\n# ...\neval \"$(sed -n \"s/^extern const AVFilter ff_\\([avfsinkrc]\\{2,5\\}\\)_\\(.*\\);/full_filter_name_\\2=\\1_\\2/p\" $source_path/libavfilter/allfilters.c)\"\n\n# generate the lists of enabled components\nprint_enabled_components(){\n    file=$1\n    struct_name=$2\n    name=$3\n    shift 3\n    echo \"static const $struct_name * const $name[] = {\" > $TMPH\n    for c in $*; do\n        if enabled $c; then\n            case $name in\n                filter_list)\n                    eval c=\\$full_filter_name_${c%_filter}\n                ;;\n                indev_list)\n                    c=${c%_indev}_demuxer\n                ;;\n                outdev_list)\n                    c=${c%_outdev}_muxer\n                ;;\n            esac\n            printf \"    &ff_%s,\\n\" $c >> $TMPH\n        fi\n    done\n    if [ \"$name\" = \"filter_list\" ]; then\n        for c in asrc_abuffer vsrc_buffer asink_abuffer vsink_buffer; do\n            printf \"    &ff_%s,\\n\" $c >> $TMPH\n        done\n    fi\n    echo \"    NULL };\" >> $TMPH\n    cp_if_changed $TMPH $file\n}\n\nprint_enabled_components libavfilter/filter_list.c AVFilter filter_list $FILTER_LIST\nprint_enabled_components libavcodec/codec_list.c FFCodec codec_list $CODEC_LIST\nprint_enabled_components libavcodec/parser_list.c AVCodecParser parser_list $PARSER_LIST\nprint_enabled_components libavcodec/bsf_list.c FFBitStreamFilter bitstream_filters $BSF_LIST\nprint_enabled_components libavformat/demuxer_list.c FFInputFormat demuxer_list $DEMUXER_LIST\nprint_enabled_components libavformat/muxer_list.c FFOutputFormat muxer_list $MUXER_LIST\nprint_enabled_components libavdevice/indev_list.c FFInputFormat indev_list $INDEV_LIST\nprint_enabled_components libavdevice/outdev_list.c FFOutputFormat outdev_list $OUTDEV_LIST\nprint_enabled_components libavformat/protocol_list.c URLProtocol url_protocols $PROTOCOL_LIST\n\n# Settings for pkg-config files\n\ncat > $TMPH <<EOF\n# Automatically generated by configure - do not modify!\nshared=$shared\nbuild_suffix=$build_suffix\nprefix=$prefix\nlibdir=$libdir\nincdir=$incdir\nrpath=$(enabled rpath && echo \"-Wl,-rpath,\\${libdir}\")\nsource_path=${source_path}\nLIBPREF=${LIBPREF}\nLIBSUF=${LIBSUF}\nextralibs_avutil=\"$avutil_extralibs\"\nextralibs_avcodec=\"$avcodec_extralibs\"\nextralibs_avformat=\"$avformat_extralibs\"\nextralibs_avdevice=\"$avdevice_extralibs\"\nextralibs_avfilter=\"$avfilter_extralibs\"\nextralibs_postproc=\"$postproc_extralibs\"\nextralibs_swscale=\"$swscale_extralibs\"\nextralibs_swresample=\"$swresample_extralibs\"\nEOF\n\nfor lib in $LIBRARY_LIST; do\n    lib_deps=\"$(eval echo \\$${lib}_deps)\"\n    echo ${lib}_deps=\\\"$lib_deps\\\" >> $TMPH\ndone\n\ncp_if_changed $TMPH ffbuild/config.sh\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "ffbuild",
          "type": "tree",
          "content": null
        },
        {
          "name": "fftools",
          "type": "tree",
          "content": null
        },
        {
          "name": "libavcodec",
          "type": "tree",
          "content": null
        },
        {
          "name": "libavdevice",
          "type": "tree",
          "content": null
        },
        {
          "name": "libavfilter",
          "type": "tree",
          "content": null
        },
        {
          "name": "libavformat",
          "type": "tree",
          "content": null
        },
        {
          "name": "libavutil",
          "type": "tree",
          "content": null
        },
        {
          "name": "libpostproc",
          "type": "tree",
          "content": null
        },
        {
          "name": "libswresample",
          "type": "tree",
          "content": null
        },
        {
          "name": "libswscale",
          "type": "tree",
          "content": null
        },
        {
          "name": "presets",
          "type": "tree",
          "content": null
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}