{
  "timestamp": 1736621272020,
  "repository": "stazz/eslint-plugin-path-import-extension",
  "path": ".eslintrc.cjs",
  "category": "lint",
  "stars": 0,
  "content": "// ESLint config for formatting the <project name>/src/**/*.ts files.\nmodule.exports = {\n  root: true,\n  extends: [\n    \"eslint:recommended\",\n    \"plugin:@typescript-eslint/recommended\",\n    \"plugin:@typescript-eslint/eslint-recommended\",\n    \"plugin:@typescript-eslint/recommended-requiring-type-checking\",\n    \"plugin:jsdoc/recommended-typescript-error\",\n    \"plugin:prettier/recommended\",\n    \"plugin:sonarjs/recommended\"\n  ],\n  plugins: [\"jsdoc\", \"prettier\"],\n  parser: \"@typescript-eslint/parser\",\n  parserOptions: {\n    project: \"./tsconfig.json\",\n    sourceType: \"module\",\n    ecmaVersion: 2020,\n    tsconfigRootDir: __dirname,\n  },\n  rules: {\n    \"prettier/prettier\": \"error\",\n    //\"function-paren-newline\": [\"error\", \"always\"],\n    \"@typescript-eslint/explicit-module-boundary-types\": \"off\", // IDE will show the return types\n    \"@typescript-eslint/restrict-template-expressions\": \"off\", // We are OK with whatever type within template expressions\n    \"@typescript-eslint/unbound-method\": \"off\", // We never use 'this' within functions anyways.\n    \"@typescript-eslint/no-empty-function\": \"off\", // Empty functions are ok sometimes.\n    \"no-useless-return\": \"error\",\n    \"no-console\": \"error\",\n    \"sonarjs/no-nested-template-literals\": \"off\", // Nested template literals are OK really\n    \"jsdoc/require-file-overview\": \"error\",\n    \"jsdoc/require-jsdoc\": [\n      \"error\",\n      {\n        \"publicOnly\": true,\n        \"require\": {\n          \"ArrowFunctionExpression\": true,\n          \"ClassDeclaration\": true,\n          \"ClassExpression\": true,\n          \"FunctionDeclaration\": true,\n          \"FunctionExpression\": true,\n          \"MethodDefinition\": true,\n        },\n        \"exemptEmptyConstructors\": true,\n        \"exemptEmptyFunctions\": false,\n        \"enableFixer\": false,\n        \"contexts\": [\n          \"TSInterfaceDeclaration\",\n          \"TSTypeAliasDeclaration\",\n          \"TSMethodSignature\",\n          \"TSPropertySignature\",\n        ]\n      }\n    ]\n  },\n  settings: {\n    \"import/resolver\": {\n      node: {\n        paths: [\"src\"],\n        extensions: [\".ts\"] // Add .tsx, .js, .jsx if needed\n      }\n    }\n  }\n};\n"
}