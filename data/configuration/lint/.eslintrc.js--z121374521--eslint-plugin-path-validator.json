{
  "timestamp": 1736621183103,
  "repository": "z121374521/eslint-plugin-path-validator",
  "path": ".eslintrc.js",
  "category": "lint",
  "stars": 1,
  "content": "module.exports = {\n  root: true,\n  env: {\n    node: true,\n  },\n  extends: ['plugin:vue/essential'],\n  rules: {\n    /**\n     * “off” or 0 - 关闭(禁用)规则\n       “warn” or 1 - 将规则视为一个警告（并不会导致检查不通过）\n       “error” or 2 - 将规则视为一个错误 (退出码为1，检查不通过)\n    */\n    // 缩进风格\n    'indent': [1, 2, { SwitchCase: 1 }],\n    // 禁止修改const声明的变量\n    'no-const-assign': 2,\n    // 空行最多不能超过2行\n    'no-multiple-empty-lines': [1, { max: 2 }],\n    // 语句末尾是否需要分号\n    'semi': [0, 'always'],\n    // 在创建对象字面量时不允许键重复 {a:1,a:1}\n    'no-dupe-keys': 2,\n    // 函数参数不能重复\n    'no-dupe-args': 2,\n    // 命名检测\n    'id-match': 2,\n    // 强制 行注释放到代码上方\n    'line-comment-position': [1, { position: 'above' }],\n    // 注释 // /*前后有一个空格\n    'spaced-comment': [1, 'always'],\n    // 使用 === 替代 ==\n    'eqeqeq': [2, 'always'],\n    // 不能有声明后未被使用的变量或参数\n    'no-unused-vars': [0, { vars: 'all', args: 'after-used' }],\n    // 未定义前不能使用\n    'no-use-before-define': 0,\n    // 不能有无法执行的代码\n    'no-unreachable': 2,\n    // 不能使用未定义的变量\n    'no-undef': 2,\n    // 禁止在 return 语句中使用赋值语句\n    'no-return-assign': 2,\n    // 数组和对象键值对最后一个逗号， never参数：不能带末尾的逗号, always参数：必须带末尾的逗号，\n    // always-multiline：多行模式必须带逗号，单行模式不能带逗号\n    'comma-dangle': [1, 'always-multiline'],\n    // 强制行的最大长度\n    'max-len': [\n      1,\n      {\n        // 强制换行的最大长度\n        code: 200,\n        // 忽略含有链接的行\n        ignoreUrls: true,\n        // 忽略含有单双引号的行\n        ignoreStrings: true,\n        // 忽略包含摸板字面量的行\n        ignoreTemplateLiterals: true,\n        // 忽略包含正则表达式的行\n        ignoreRegExpLiterals: true,\n      },\n    ],\n    // 尽可能地使用单引号\n    'quotes': [1, \"single\"],\n    // 箭头函数只有一个参数，省略括号\n    'arrow-parens': [\n      1,\n      'as-needed',\n      {\n        requireForBlockBody: false,\n      },\n    ],\n    // 禁止使用console\n    'no-console': 2,\n    // 禁止使用debugger\n    'no-debugger': process.env.NODE_ENV === 'production' ? 'error' : 'off',\n  },\n  parserOptions: {\n    parser: 'babel-eslint',\n  },\n};\n"
}