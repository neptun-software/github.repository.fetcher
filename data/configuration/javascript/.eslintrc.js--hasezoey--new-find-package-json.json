{
  "timestamp": 1736620363700,
  "repository": "hasezoey/new-find-package-json",
  "path": ".eslintrc.js",
  "category": "javascript",
  "stars": 1,
  "content": "/* eslint-disable @typescript-eslint/no-var-requires */\nconst path = require('path');\n\nmodule.exports = {\n  parser: '@typescript-eslint/parser',\n  plugins: ['@typescript-eslint', 'prettier'],\n  extends: ['plugin:@typescript-eslint/recommended', 'plugin:prettier/recommended'],\n  parserOptions: {\n    sourceType: 'module',\n    useJSXTextNode: true,\n    project: [path.resolve(__dirname, 'tsconfig.json')],\n  },\n  rules: {\n    'no-underscore-dangle': 0,\n    'arrow-body-style': 0,\n    'no-unused-expressions': 1,\n    'no-plusplus': 0,\n    'no-console': 0,\n    'func-names': 0,\n    'comma-dangle': [\n      'error',\n      {\n        arrays: 'always-multiline',\n        objects: 'always-multiline',\n        imports: 'always-multiline',\n        exports: 'always-multiline',\n        functions: 'never',\n      },\n    ],\n    'no-prototype-builtins': 0,\n    'prefer-destructuring': 0,\n    'no-else-return': 1,\n    'lines-between-class-members': ['error', 'always', { exceptAfterSingleLine: true }],\n    '@typescript-eslint/no-non-null-assertion': 0,\n    '@typescript-eslint/explicit-member-accessibility': 0,\n    '@typescript-eslint/no-explicit-any': 0,\n    '@typescript-eslint/no-inferrable-types': 0,\n    '@typescript-eslint/explicit-function-return-type': 0,\n    '@typescript-eslint/no-use-before-define': 0,\n    '@typescript-eslint/no-empty-function': 0,\n    '@typescript-eslint/explicit-module-boundary-types': 0,\n    curly: ['error', 'all'],\n    'padding-line-between-statements': [\n      'warn',\n      {\n        blankLine: 'always',\n        prev: '*',\n        next: 'return', // add blank line *before* all returns (if there are statements before)\n      },\n      {\n        blankLine: 'always',\n        prev: '*',\n        next: 'if', // add blank line *before* all ifs\n      },\n      {\n        blankLine: 'always',\n        prev: 'if',\n        next: '*', // add blank line *after* all ifs\n      },\n      {\n        blankLine: 'any',\n        prev: 'if',\n        next: 'if', // allow blank line between ifs, but not enforce either\n      },\n      {\n        blankLine: 'always',\n        prev: '*',\n        next: ['function', 'class'], // add blank line *before* all functions and classes\n      },\n      {\n        blankLine: 'always',\n        prev: ['function', 'class'],\n        next: '*', // add blank line *after* all functions and classes\n      },\n      {\n        blankLine: 'always',\n        prev: '*',\n        next: 'import', // add blank line *before* all imports\n      },\n      {\n        blankLine: 'always',\n        prev: 'import',\n        next: '*', // add blank line *after* all imports\n      },\n      {\n        blankLine: 'never',\n        prev: 'import',\n        next: 'import', // dont allow blank line between imports\n      },\n    ],\n  },\n  env: {\n    node: true,\n    jest: true,\n  },\n};\n"
}