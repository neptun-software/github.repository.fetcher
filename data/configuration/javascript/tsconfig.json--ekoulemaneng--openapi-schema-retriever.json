{
  "timestamp": 1736620420762,
  "repository": "ekoulemaneng/openapi-schema-retriever",
  "path": "tsconfig.json",
  "category": "javascript",
  "stars": 0,
  "content": "{\n  \"files\": [\"src/index.ts\"],\n  \"compilerOptions\": {\n    /* Visit https://aka.ms/tsconfig.json to read more about this file */\n\n    /* Language and Environment */\n    \"target\": \"es2016\",                                  /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */\n\n    /* Modules */\n    \"module\": \"commonjs\",                                /* Specify what module code is generated. */\n    \"rootDir\": \"./src\",                                  /* Specify the root folder within your source files. */\n    \"moduleResolution\": \"node\",                       /* Specify how TypeScript looks up a file from a given module specifier. */\n    \"resolveJsonModule\": true,                        /* Enable importing .json files */\n\n    /* Emit */\n    \"declaration\": true,                              /* Generate .d.ts files from TypeScript and JavaScript files in your project. */\n    \"outDir\": \"./dist\",                                   /* Specify an output folder for all emitted files. */\n\n    /* Interop Constraints */\n    \"esModuleInterop\": true,                             /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables `allowSyntheticDefaultImports` for type compatibility. */\n    \"forceConsistentCasingInFileNames\": true,            /* Ensure that casing is correct in imports. */\n\n    /* Type Checking */\n    \"strict\": true,                                      /* Enable all strict type-checking options. */\n    \"noImplicitAny\": true,                            /* Enable error reporting for expressions and declarations with an implied `any` type.. */\n    \"strictNullChecks\": true,                         /* When type checking, take into account `null` and `undefined`. */\n    \"strictFunctionTypes\": true,                      /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */\n    \"strictBindCallApply\": true,                      /* Check that the arguments for `bind`, `call`, and `apply` methods match the original function. */\n    \"strictPropertyInitialization\": true,             /* Check for class properties that are declared but not set in the constructor. */\n    \"noImplicitThis\": true,                           /* Enable error reporting when `this` is given the type `any`. */\n    \"useUnknownInCatchVariables\": true,               /* Type catch clause variables as 'unknown' instead of 'any'. */\n    \"alwaysStrict\": true,                             /* Ensure 'use strict' is always emitted. */\n    \"noUnusedLocals\": true,                           /* Enable error reporting when a local variables aren't read. */\n    \"noUnusedParameters\": true,                       /* Raise an error when a function parameter isn't read */\n    \"noImplicitReturns\": true,                        /* Enable error reporting for codepaths that do not explicitly return in a function. */\n    \"noFallthroughCasesInSwitch\": true,               /* Enable error reporting for fallthrough cases in switch statements. */\n    \"noUncheckedIndexedAccess\": true,                 /* Include 'undefined' in index signature results */\n    \"noImplicitOverride\": true,                       /* Ensure overriding members in derived classes are marked with an override modifier. */\n    \"noPropertyAccessFromIndexSignature\": true,       /* Enforces using indexed accessors for keys declared using an indexed type */\n    \"skipLibCheck\": true                                 /* Skip type checking all .d.ts files. */\n  },\n  \"ts-node\": {\n    \"esm\": true,\n    \"experimentalSpecifierResolution\": \"node\"\n  }\n}"
}