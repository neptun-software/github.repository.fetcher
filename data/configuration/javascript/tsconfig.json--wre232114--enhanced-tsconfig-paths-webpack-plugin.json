{
  "timestamp": 1736620497107,
  "repository": "wre232114/enhanced-tsconfig-paths-webpack-plugin",
  "path": "tsconfig.json",
  "category": "javascript",
  "stars": 10,
  "content": "{\n  // see https://www.typescriptlang.org/tsconfig to better understand tsconfigs\n  \"include\": [\"src\", \"types\"],\n  \"compilerOptions\": {\n    \"module\": \"esnext\",\n    \"lib\": [\"dom\", \"esnext\"],\n    \"importHelpers\": true,\n    // output .d.ts declaration files for consumers\n    \"declaration\": true,\n    // output .js.map sourcemap files for consumers\n    \"sourceMap\": true,\n    // match output dir to input dir. e.g. dist/index instead of dist/src/index\n    \"rootDir\": \"./src\",\n    // stricter type-checking for stronger correctness. Recommended by TS\n    \"strict\": true,\n    // linter checks for common issues\n    \"noImplicitReturns\": true,\n    \"noFallthroughCasesInSwitch\": true,\n    // noUnused* overlap with @typescript-eslint/no-unused-vars, can disable if duplicative\n    \"noUnusedLocals\": true,\n    \"noUnusedParameters\": true,\n    // use Node's module resolution algorithm, instead of the legacy TS one\n    \"moduleResolution\": \"node\",\n    // transpile JSX to React.createElement\n    \"jsx\": \"react\",\n    // interop between ESM and CJS modules. Recommended by TS\n    \"esModuleInterop\": true,\n    // significant perf increase by skipping checking .d.ts files, particularly those in node_modules. Recommended by TS\n    \"skipLibCheck\": true,\n    // error out if import and file system have a casing mismatch. Recommended by TS\n    \"forceConsistentCasingInFileNames\": true,\n    // `tsdx build` ignores this option, but it is commonly used when type-checking separately with `tsc`\n    \"noEmit\": true,\n  }\n}\n"
}