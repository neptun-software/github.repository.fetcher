{
  "timestamp": 1736620510639,
  "repository": "mnrendra/tsconfig-alias-parser",
  "path": "jest.config.ts",
  "category": "javascript",
  "stars": 0,
  "content": "import { pathsToModuleNameMapper } from 'ts-jest'\n\n/**\n * For a detailed explanation regarding each configuration property, visit:\n * https://jestjs.io/docs/configuration\n */\n\nimport type { Config } from 'jest'\n\nconst config: Config = {\n  // All imported modules in your tests should be mocked automatically\n  // automock: false,\n\n  // Stop running tests after `n` failures\n  // bail: 0,\n\n  // The directory where Jest should store its cached dependency information\n  // cacheDirectory:\n  // '/private/var/folders/7g/q_1hhyxd53v97wv37ph58d680000gn/T/jest_dx',\n\n  // Automatically clear mock calls, instances, contexts and results before\n  // every test\n  clearMocks: true,\n\n  // Indicates whether the coverage information should be collected while\n  // executing the test\n  collectCoverage: true,\n\n  // An array of glob patterns indicating a set of files for which coverage\n  // information should be collected\n  // collectCoverageFrom: undefined,\n\n  // The directory where Jest should output its coverage files\n  coverageDirectory: 'coverage',\n\n  // An array of regexp pattern strings used to skip coverage collection\n  coveragePathIgnorePatterns: [\n    '/node_modules/',\n    '/tests/'\n  ],\n\n  // Indicates which provider should be used to instrument code for coverage\n  coverageProvider: 'v8',\n\n  // A list of reporter names that Jest uses when writing coverage reports\n  // coverageReporters: [\n  //   'json',\n  //   'text',\n  //   'lcov',\n  //   'clover'\n  // ],\n\n  // An object that configures minimum threshold enforcement for coverage\n  // results\n  // coverageThreshold: undefined,\n\n  // A path to a custom dependency extractor\n  // dependencyExtractor: undefined,\n\n  // Make calling deprecated APIs throw helpful error messages\n  // errorOnDeprecated: false,\n\n  // The default configuration for fake timers\n  // fakeTimers: {\n  //   'enableGlobally': false\n  // },\n\n  // Force coverage collection from ignored files using an array of glob\n  // patterns\n  // forceCoverageMatch: [],\n\n  // A path to a module which exports an async function that is triggered once\n  // before all test suites\n  // globalSetup: undefined,\n\n  // A path to a module which exports an async function that is triggered once\n  // after all test suites\n  // globalTeardown: undefined,\n\n  // A set of global variables that need to be available in all test\n  // environments\n  // globals: {},\n\n  // The maximum amount of workers used to run your tests. Can be specified as\n  // % or a number. E.g. maxWorkers: 10% will use 10% of your CPU amount + 1 as\n  // the maximum worker number. maxWorkers: 2 will use a maximum of 2 workers.\n  // maxWorkers: '50%',\n\n  // An array of directory names to be searched recursively up from the\n  // requiring module's location\n  // moduleDirectories: [\n  //   'node_modules'\n  // ],\n\n  // An array of file extensions your modules use\n  // moduleFileExtensions: [\n  //   'js',\n  //   'mjs',\n  //   'cjs',\n  //   'jsx',\n  //   'ts',\n  //   'tsx',\n  //   'json',\n  //   'node'\n  // ],\n\n  // A map from regular expressions to module names or to arrays of module\n  // names that allow to stub out resources with a single module\n  moduleNameMapper: pathsToModuleNameMapper({\n    // @\n    '@': ['<rootDir>/src'],\n    '@/*': ['<rootDir>/src/*'],\n    // @tests\n    '@tests': ['<rootDir>/tests'],\n    '@tests/*': ['<rootDir>/tests/*']\n  }),\n\n  // An array of regexp pattern strings, matched against all module paths before\n  // considered 'visible' to the module loader\n  // modulePathIgnorePatterns: [],\n\n  // Activates notifications for test results\n  // notify: false,\n\n  // An enum that specifies notification mode. Requires { notify: true }\n  // notifyMode: 'failure-change',\n\n  // A preset that is used as a base for Jest's configuration\n  preset: 'ts-jest',\n\n  // Run tests from one or more projects\n  // projects: undefined,\n\n  // Use this configuration option to add custom reporters to Jest\n  // reporters: undefined,\n\n  // Automatically reset mock state before every test\n  // resetMocks: false,\n\n  // Reset the module registry before running each individual test\n  // resetModules: false,\n\n  // A path to a custom resolver\n  // resolver: undefined,\n\n  // Automatically restore mock state and implementation before every test\n  // restoreMocks: false,\n\n  // The root directory that Jest should scan for tests and modules within\n  // rootDir: undefined,\n\n  // A list of paths to directories that Jest should use to search for files in\n  // roots: [\n  //   '<rootDir>'\n  // ],\n\n  // Allows you to use a custom runner instead of Jest's default test runner\n  // runner: 'jest-runner',\n\n  // The paths to modules that run some code to configure or set up the testing\n  // environment before each test\n  // setupFiles: [],\n\n  // A list of paths to modules that run some code to configure or set up the\n  // testing framework before each test\n  // setupFilesAfterEnv: [],\n\n  // The number of seconds after which a test is considered as slow and reported\n  // as such in the results.\n  // slowTestThreshold: 5,\n\n  // A list of paths to snapshot serializer modules Jest should use for snapshot\n  // testing\n  // snapshotSerializers: [],\n\n  // The test environment that will be used for testing\n  // testEnvironment: 'jest-environment-node',\n\n  // Options that will be passed to the testEnvironment\n  // testEnvironmentOptions: {},\n\n  // Adds a location field to test results\n  // testLocationInResults: false,\n\n  // The glob patterns Jest uses to detect test files\n  // testMatch: [\n  //   '**/__tests__/**/*.[jt]s?(x)',\n  //   '**/?(*.)+(spec|test).[tj]s?(x)'\n  // ],\n\n  // An array of regexp pattern strings that are matched against all test paths,\n  // matched tests are skipped\n  // testPathIgnorePatterns: [\n  //   '/node_modules/'\n  // ],\n\n  // The regexp pattern or array of patterns that Jest uses to detect test files\n  // testRegex: [],\n\n  // This option allows the use of a custom results processor\n  // testResultsProcessor: undefined,\n\n  // This option allows use of a custom test runner\n  // testRunner: 'jest-circus/runner',\n\n  // A map from regular expressions to paths to transformers\n  transform: {\n    '^.+\\\\.tsx?$': [\n      'ts-jest',\n      {\n        useESM: true\n      }\n    ]\n  } // ,\n\n  // An array of regexp pattern strings that are matched against all source file\n  // paths, matched files will skip transformation\n  // transformIgnorePatterns: [\n  //   '/node_modules/',\n  //   '\\\\.pnp\\\\.[^\\\\/]+$'\n  // ],\n\n  // An array of regexp pattern strings that are matched against all modules\n  // before the module loader will automatically return a mock for them\n  // unmockedModulePathPatterns: undefined,\n\n  // Indicates whether each individual test should be reported during the run\n  // verbose: undefined,\n\n  // An array of regexp patterns that are matched against all source file paths\n  // before re-running tests in watch mode\n  // watchPathIgnorePatterns: [],\n\n  // Whether to use watchman for file crawling\n  // watchman: true,\n}\n\nexport default config\n"
}