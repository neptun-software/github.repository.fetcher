{
  "timestamp": 1736620512220,
  "repository": "JiangWeixian/ciya",
  "path": "rollup.config.mjs",
  "category": "javascript",
  "stars": 0,
  "content": "import resolve from '@rollup/plugin-node-resolve'\nimport commonjs from '@rollup/plugin-commonjs'\nimport esbuild from 'rollup-plugin-esbuild'\nimport { externals } from 'rollup-plugin-node-externals'\nimport alias from '@rollup/plugin-alias'\nimport size from 'rollup-plugin-filesize'\nimport ce from 'rollup-plugin-condition-exports'\nimport { defineConfig } from 'rollup'\nimport path from 'node:path'\n\nexport default defineConfig([\n  // CommonJS (for Node) and ES module (for bundlers) build.\n  // (We could have three entries in the configuration array\n  // instead of two, but it's quicker to generate multiple\n  // builds from a single configuration where possible, using\n  // an array for the `output` option, where we can specify\n  // `file` and `format` for each target)\n  {\n    plugins: [\n      /**\n       * Bundle devDependencies, exclude dependencies\n       */\n      externals({\n        devDeps: false,\n      }),\n      commonjs(),\n      esbuild({\n        target: 'node14',\n      }),\n      alias({\n        customResolver: resolve({ extensions: ['.tsx', '.ts'] }),\n        entries: Object.entries({\n          '@/*': ['./src/*'],\n        }).map(([alias, value]) => ({\n          find: new RegExp(`${alias.replace('/*', '')}`),\n          replacement: path.resolve(process.cwd(), `${value[0].replace('/*', '')}`),\n        })),\n      }),\n      resolve(),\n      /**\n       * Auto setup package.json\n       * @see {@link https://github.com/JiangWeixian/rollup-plugin-condition-exports}\n       */\n      ce(),\n      size(),\n    ],\n    output: [\n      { dir: 'dist', entryFileNames: '[name].cjs', format: 'cjs' },\n      { dir: 'dist', entryFileNames: '[name].mjs', format: 'es' },\n    ],\n  },\n  {\n    input: ['src/cli.ts'],\n    plugins: [\n      /**\n       * Bundle devDependencies, exclude dependencies\n       */\n      externals({\n        devDeps: false,\n      }),\n      commonjs(),\n      esbuild({\n        target: 'node14',\n      }),\n      alias({\n        customResolver: resolve({ extensions: ['.tsx', '.ts'] }),\n        entries: Object.entries({\n          '@/*': ['./src/*'],\n        }).map(([alias, value]) => ({\n          find: new RegExp(`${alias.replace('/*', '')}`),\n          replacement: path.resolve(process.cwd(), `${value[0].replace('/*', '')}`),\n        })),\n      }),\n      resolve(),\n      size(),\n    ],\n    output: [\n      { dir: 'dist', entryFileNames: '[name].mjs', format: 'es' },\n    ],\n  },\n])\n"
}