{
  "metadata": {
    "timestamp": 1736557547460,
    "page": 607,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "google/material-design-lite",
      "stars": 32283,
      "defaultBranch": "mdl-1.x",
      "files": [
        {
          "name": ".drone.sec",
          "type": "blob",
          "size": 3.54,
          "content": "eyJhbGciOiJSU0EtT0FFUCIsImVuYyI6IkExMjhHQ00ifQ.j9veXnMfiC38KqZqVlEv-j3kQ4P8M9bmPYrCb3gkGhYNxJAs43Hzj30_rFiPJvW_JFjX2yGIVqGmxImJxDq9EXU0burdWRIcdKywASKtO5UCigwaBx0q_bPcXiPYCvT21ADX9HcukA_e04XcKExPJUJTlOJhfAA747p8lqheBXQjcidZJ6nVc6xt8dLpqyhcRZIX6wbKOKX3p8K60BnlHzqZ2YnnTuqk9XblJRwKwSIuSlJWqSKhYwLpJmWf8mtB9n7_Rn2vU1W3nK4o1j_-o1R6skxraNmdw9sbk26UNBUb8UtTdwbaMt0LnE_CD1TNSHW7gy05bmKjmZxGEXMH_w.gHtDLk7eq3RvXES7.f0peFsiIVOy7XTiYxakjJzPS_3U0rMesmc3PEjXbfz_ywNiGrSpbvA7lvnIgY6VgWNZyXZUmVjj34_FuwRCi6O6dqtRyYVy2-q5cJIVFWvpOtUdlQGcOfSL-TiyJS49AsbiXk0RI6-pi2hA9sfwOX8fbZK4YC1rcvEHc5xUd5WJhn0zRjyV0SowVGktVwjKXznHyxV5FCFqBHq83R7uOQIEm-nmMdlooUqQrWc3sKpwJv7fhyHfu5N5L33SIdrPHVhnc4HfCeuSESTvxV2XwZjzFxcj9Kr4BlnZyG7Dbn8WBaYEDkJ0HTie2h4MbeOewY9_SQ4YfYVhWwFzZTDCmD-Ou09G5siDA_0SyHZpS1JZI0NkKibdIkLEHB_BdpSSyFDTOFRbjf_2beXNOtD8-DCis0ZYR5h3coz6sOZaSde2Sh3IcCOLolaQvt5pZN4JB1JJspLjv6iD5R2VYGTJy8fYfH7juZi6NVq4316eQepoFgtjsjusTkTKcczkSPYxvgnjegdmNQvqKWMgZKcgV9IWdtDZCgBr3W3_K92G0xRkyMnmHevEfC0WzSTYE5SY4spDix2WF-of1SF_jrIjC3LSQlwXCHdeF8yoouWlVDqFvVB5jLlSjJG0yWi7GYgxwnweIhmduO4ojZbHUIX3UGDMYbxZkXiEegLXMCqQtTrkvutZsZFSnmULHCS1J-JF6JVgifnPOn6TSOh7h-FG-x72AtgX6W7_gmZRl_wPFTzDFtkvgsB5g6aB8jycAQfQhFSSOtNfMl4mfwqcT2dAf_orKohwGCwMfnamLOIfzfNcRXE1xHyClHTiTiDK3Nf7MMnvcxxmGq_yVjF9mSffBJMP25hMSMlg3DYqdbT88JVHXHRgE3vrl15BocpHU3E1ZEKF4VEV4bGE2MKkOOW0dBzKqFwAbFBivoD3vZEzKXpwTwg88cLwLPLnqsWyoNRKpWNFhnu6X_BmcCXNI7JP_gQxyRTe7ZHOCOW_oL93cDgA0nGWQG05pI1H87SYhZhByiaUlAwtMbo-wE_aMzwiLYjBdJ4QiOUk4Kzf4-P5QaWBEPEAHwbfuRjtSCPd9LYJzqGdCdabsv3mtgVPNdzDOTnI7mvdD5oLd9XEHV9vNuOI-xjpF4Tz130G_6V0Cvq3-oR2hCHE8ZugX9Qja7KqIwSM6sxV4JAlGv2etfJRqV01mdD2W_CnkSfWBoz6soTHTqrg1y1380DS42WvXNFAUhNj92J6n-W0MNfXWcsaFGRBwjTExerTK3HveEt3iB-gmx3DcPhXyM1FM39DbyQiHbwFV2Aw7cuQP6uYc5qgYPVdxrfrasvwPZweubHtrttZJNbbbBY2wJTbXrUX0X08U4NpDcTf80s43XNjO_P19to-tIz8WBr2BHY_-jA-ea7zIVlZGdn624tUcubHWxUsoci0jBlPX8jWQnhx4MI5vDDVKRSOotJdD7t4BD47SNJLi2H31wGOgi8MS9JTw9g8-ZXdN-WfCN4nNi5NTMhq3FbRBXIV1BRbVhvcWrpp2g4eAsDlv7ycUjcGFfExaePB1RhiqQwj-RSmXz_GbWPwOoUw3lacjoKEcf8787l6NWh9dYRXiaSzM1rNvHg4vNb2LPTkUGsPhtxUj-xO-S4ENw2FBQnPkgN0IHRKPPcagdUEWWGMEMBLFjZrTF1ihMEFLga6MnTMOoFPR7y9NjpBIHBm324aEV0IUfi2o4ML-IitbFhWSUeeyIKqBOW3ZFZMuNOQYlt0obuZYhS77vT-VIgNdr2OiGj8FSNkN6uqi-IxvjRqKBAnQaBuRgfPtMAg2AoQ4FiiALEZIEg3V9SunpmNH8WEonz3Pka-_en9dcRXffzrlVKyUAPs45Tg5330JN6OaI6jOtTSLZN0KEY2p77sTPxuPQsG5TuIX9g6mZiRZVFlzlJsi2VfhFdmR0GtZV8cwp0Sc9PVtUHkuAfZlHGaWTBGB4P7ttJlHu9iU3pEXMWrOABgf5JWan4uBwPDw_faU7vKvZ6s6PEIG7uM13RPTAnmQKCcn5xC_8Rao_GIseAQG-BKDZAsAKnJFXuUmwrwoaMOxyF6S8pw-1IFh-vr0FMne3DIl-K9T5NEjD7nF-HAXciVi4dGd1ayTymq6adh68nkNis4-ANauctQlFzGNp0_Na-3BaiDJi_DGhjXFY-w5ckLLlTuEaYVc99y8DQcTuOjfhTKo1AKcprKBe_FNmpwxjA6Pb4PO8NLOG7jksyPueFRgjfnITeTzRXuW-L4v63jR20It9wiW4T26NsYGo0sdz7C7DW3apD6Tv2wcqdr7_rbNhzqjDKBlFG-cuGBWkTaDdb5QiMxAqpBp71xt7IE4zh9vpUEUo0jL7uliKzPKch8nttjcNbhXBVkplWRwCzOLK9Kwbb1WPgNIt5Z_-qigFeHWo6p1r9ZZnO2uIhX5fXQ7ufja3NN2D5tJ1DjnHT0J-ubJd-pq2U5tOOuDRKuDlVXxa_0vWDLGEp5pOp0BQa6vUj9f8X8g5N9iajAappzI_zLG4HzEG8P0t4xDO6pO8NWSwcHgXl5VVIsXf7dVhlquH_ewkOUVNRXBk7GrhGxYjygX_yscHo57fY4O0ePexeuXoZxQw-dob99C4ZrnQQ0RhSU0n7WpByssezhB04pYbAzx_A998b5MP2gxTe4kVARgv5AgInzwx4KlrgCLpXt7bq3ZpDvk2SHSNVbGpkNFVNj3frYfo7NVxET9EAJ7VvoVeuyb7PBL-ix4cdbHkbEjp14PvvZEzJxz6ad7RflXkrd2PMJEiJ6ay8wYPFEPjO8v31cEwp9d8TOhsDfQ0O2nTGmcK_BG9ZFjIvZpIyYlrgSdcXOncL4i7LCDOmMlJdwEvAm4HMhnuMUwdLzty_V0iXqPyJR7gSpyhEgV0e7XEieUsPTNDcZ6yw14zQW6m7rjqg8XFXPw9JCTbqUIGgDAHDrSLGaknemFzlek6nq_KrTAhxlFFyopNNHMgMkjbqgw8kyFo-YVZ5dkvwgX8ux0pxW8MgBVTI4wz3vonPX-ilBKAOdrujRd6282Nih0u9ri6UjFSqikoUN_hu_K6O7gQdATrUNKEjYJc_sMKegaOk1jraogA8_YG8t-oWu8YEjzTjkehdPkhiqrCLZUDHsq3mFu0yqT4AyRjb-4S53Zfs6DqtQv8THl-iimvCV1GFTquN0fBnQRjdJh.YLmdpxyEz-RjqU8lHkRGYg"
        },
        {
          "name": ".drone.yml",
          "type": "blob",
          "size": 1.23,
          "content": "# Note: if you modify this file, don't forget to update\n# checksum in .drone.sec with:\n# drone secure --repo google/material-design-lite --checksum\nclone:\n  depth: 1\ncache:\n  mount:\n    - node_modules\nmatrix:\n  NODE_VERSION:\n    - 4\n    - 5\nbuild:\n  image: crhym3/ci:node$$NODE_VERSION-go15\n  environment:\n    - CHROME=https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb\n    - WEBDRIVER=http://chromedriver.storage.googleapis.com/2.16/chromedriver_linux64.zip\n    - DISPLAY=:99\n  commands:\n    - npm update -qq\n    # build and unit test\n    - gulp all\n    - gulp mocha:closure\n    # additional browser tests\n    # do this after the build and unit tests to fail fast\n    - Xvfb $DISPLAY &\n    - curl -sSLo chrome.deb $CHROME && dpkg -i chrome.deb\n    - curl -sSLo driver.zip $WEBDRIVER && unzip -q driver.zip -d /usr/bin\npublish:\n  # see http://addons.drone.io/google_cloud_storage/ for details\n  gcs:\n    when:\n      repo: google/material-design-lite\n      branch: master\n      event: push\n      matrix:\n        NODE_VERSION: 5\n    auth_key: >\n      $$SERVICE_ACCOUNT_KEY\n    source: dist\n    target: mdl-staging\n    cache_control: public,max-age=0\n    acl:\n      - allUsers:READER\n    gzip:\n      - html\n      - css\n      - js\n      - svg\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2,
          "content": "# editorconfig.org\nroot = true\n\n[*]\nindent_style = space\nindent_size = 2\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[*.md]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.01,
          "content": "* text=auto\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.08,
          "content": "node_modules\n.tmp\ngulp-cache\n.DS_Store\ndocs/out\n.publish\n/dist\n.drone.sec.yml\n"
        },
        {
          "name": ".jscsrc",
          "type": "blob",
          "size": 0.56,
          "content": "{\n  \"preset\": \"google\",\n  \"disallowSpacesInAnonymousFunctionExpression\": null,\n  \"validateLineBreaks\": \"LF\",\n  \"validateIndentation\": 2,\n  \"excludeFiles\": [\"node_modules/**\"],\n  \"maximumLineLength\": 130,\n  \"validateQuoteMarks\": \"'\",\n  \"requireDotNotation\": false,\n  \"requireCamelCaseOrUpperCaseIdentifiers\": {\"allowedPrefixes\": [\"opt_\"]},\n  \"jsDoc\": {\n    \"checkAnnotations\": {\n      \"preset\": \"closurecompiler\",\n      \"extra\": {\n        \"type\": true,\n        \"suppress\": true\n      }\n    },\n    \"checkTypes\": \"strictNativeCase\",\n    \"enforceExistence\": \"exceptExports\"\n  }\n}\n"
        },
        {
          "name": ".jshintrc",
          "type": "blob",
          "size": 0.27,
          "content": "{\n  \"node\": true,\n  \"browser\": true,\n  \"esnext\": true,\n  \"bitwise\": true,\n  \"curly\": true,\n  \"eqeqeq\": true,\n  \"immed\": true,\n  \"newcap\": true,\n  \"noarg\": true,\n  \"undef\": true,\n  \"unused\": \"vars\",\n  \"strict\": true,\n  \"sub\": true,\n  \"globals\": {\n    \"componentHandler\": true\n  }\n}\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 9.35,
          "content": "\n# Contributing to Material Design Lite\n\nWe'd love for you to contribute to our source code and to make Material Design Lite even better than it is today! Here are the guidelines we'd like you to follow:\n\n - [Code of Conduct](#coc)\n - [Question or Problem?](#question)\n - [Issues and Bugs](#issue)\n - [Feature Requests](#feature)\n - [Submission Guidelines](#submit)\n - [Coding Rules](#rules)\n - [Signing the CLA](#cla)\n\n## <a name=\"coc\"></a> Code of Conduct\n\nAs contributors and maintainers of the Material Design Lite project, we pledge to respect everyone who contributes by posting issues, updating documentation, submitting pull requests, providing feedback in comments, and any other activities.\n\nCommunication through any of Material Design Lite's channels (GitHub, StackOverflow, Google+, Twitter, etc.) must be constructive and never resort to personal attacks, trolling, public or private harassment, insults, or other unprofessional conduct.\n\nWe promise to extend courtesy and respect to everyone involved in this project regardless of gender, gender identity, sexual orientation, disability, age, race, ethnicity, religion, or level of experience. We expect anyone contributing to the Material Design Lite project to do the same.\n\nIf any member of the community violates this code of conduct, the maintainers of the Material Design Lite project may take action, removing issues, comments, and PRs or blocking accounts as deemed appropriate.\n\nIf you are subject to or witness unacceptable behavior, or have any other concerns, please drop us a line at addyo@google.com.\n\n## <a name=\"question\"></a> Got a Question or Problem?\n\nIf you have questions about how to use Material Design Lite, please direct these to [StackOverflow][stackoverflow] and use the `material-design-lite` tag. We are also available on GitHub issues.\n\nIf you feel that we're missing an important bit of documentation, feel free to\nfile an issue so we can help. Here's an example to get you started:\n\n```\nComponent (if any):\n\nWhat are you trying to do or find out more about?\n\nWhere have you looked?\n\nWhere did you expect to find this information?\n```\n\nOr, if you're looking for a new design template:\n\n```\nPlease provide a short summary of the template youâ€™re looking for.\n\nWhat makes this template interesting or challenging from a design perspective?\n\nPlease provide any URLs to good examples of this type of page that you may have come across.\n```\n\n## <a name=\"issue\"></a> Found an Issue?\nIf you find a bug in the source code or a mistake in the documentation, you can help us by\nsubmitting an issue to our [GitHub Repository][github]. Even better you can submit a Pull Request\nwith a fix.\n\nSee [below](#submit) for some guidelines.\n\n## <a name=\"feature\"></a> Want a Feature?\nYou can request a new feature by submitting an issue to our [GitHub Repository][github].\n\nHere is a template to get you started:\n\n```\nIs this a new component, or a missing feature in an existing one?\nComponent name:\nMaterial Design spec URL for the component (if any):\n\nWhat does this component or feature allow you to do which isnâ€™t possible at the moment?\n\nPlease provide any URLs or screenshots of good examples of usage of this component or feature that you may have come across.\n```\n\nIf you would like to implement a new feature then consider what kind of change it is:\n\n* **Major Changes** that you wish to contribute to the project should be discussed first on our\n[issue tracker][] so that we can better coordinate our efforts, prevent\nduplication of work, and help you to craft the change so that it is successfully accepted into the\nproject.\n* **Small Changes** can be crafted and submitted to the [GitHub Repository][github] as a Pull Request.\n\n## <a name=\"submit\"></a> Submission Guidelines\n\n### Submitting an Issue\nBefore you submit your issue search the archive, maybe your question was already answered.\n\nIf your issue appears to be a bug, and hasn't been reported, open a new issue.\nHelp us to maximize the effort we can spend fixing issues and adding new\nfeatures, by not reporting duplicate issues.  Providing the following information will increase the\nchances of your issue being dealt with quickly:\n\n* **Overview of the Issue** - if an error is being thrown a non-minified stack trace helps\n* **Motivation for or Use Case** - explain why this is a bug for you\n* **Material Design Lite Version(s)** - is it a regression?\n* **Browsers and Operating System** - is this a problem with all browsers or only IE9?\n* **Reproduce the Error** - provide a live example (using JSBin) or a unambiguous set of steps.\n* **Related Issues** - has a similar issue been reported before?\n* **Suggest a Fix** - if you can't fix the bug yourself, perhaps you can point to what might be\n  causing the problem (line of code or commit)\n\n**If you get help, help others. Good karma rulez!**\n\nHere's a template to get you started:\n\n```\nMDL version:\nBrowser:\nBrowser version:\nOperating system:\nOperating system version:\nURL, if applicable (you can use a [codepen as a starting point][http://codepen.io/pen/def?fork=xGWgXa]):\n\nWhat steps will reproduce the problem:\n1.\n2.\n3.\n\nWhat is the expected result?\n\nWhat happens instead of that?\n\nPlease provide any other information below, and attach a screenshot if possible.\n```\n\n### Submitting a Pull Request\nBefore you submit your pull request consider the following guidelines:\n\n* Search [GitHub](https://github.com/google/material-design-lite/pulls) for an open or closed Pull Request\n  that relates to your submission. You don't want to duplicate effort.\n* Please sign our [Contributor License Agreement (CLA)](#cla) before sending pull\n  requests. We cannot accept code without this.\n* Make your changes in a new git branch:\n\n     ```shell\n     git checkout -b my-fix-branch master\n     ```\n\n* Create your patch, **including appropriate test cases**.\n* Follow our [Coding Rules](#rules).\n* Run the full Material Design Lite test suite (`gulp test`),\n  and ensure that all tests pass.\n* Avoid checking in files that shouldn't be tracked (e.g `node_modules`, `gulp-cache`, `.tmp`, `.idea`). We recommend using a [global .gitignore](https://help.github.com/articles/ignoring-files/#create-a-global-gitignore) for this.\n* Make sure **not** to include a recompiled version of the files found in `/css` and `/js` as part of your PR. We will generate these automatically.\n* Commit your changes using a descriptive commit message.\n\n     ```shell\n     git commit -a\n     ```\n  Note: the optional commit `-a` command line option will automatically \"add\" and \"rm\" edited files.\n\n* Build your changes locally to ensure all the tests pass:\n\n    ```shell\n   gulp\n    ```\n\n* Push your branch to GitHub:\n\n    ```shell\n    git push origin my-fix-branch\n    ```\n\n* In GitHub, send a pull request to `material-design-lite:master`.\n* If we suggest changes then:\n  * Make the required updates.\n  * Re-run the Material Design Lite test suite to ensure tests are still passing.\n  * Rebase your branch and force push to your GitHub repository (this will update your Pull Request):\n\n    ```shell\n    git rebase master -i\n    git push origin my-fix-branch -f\n    ```\n\nThat's it! Thank you for your contribution!\n\n#### After your pull request is merged\n\nAfter your pull request is merged, you can safely delete your branch and pull the changes\nfrom the main (upstream) repository:\n\n* Delete the remote branch on GitHub either through the GitHub web UI or your local shell as follows:\n\n    ```shell\n    git push origin --delete my-fix-branch\n    ```\n\n* Check out the master branch:\n\n    ```shell\n    git checkout master -f\n    ```\n\n* Delete the local branch:\n\n    ```shell\n    git branch -D my-fix-branch\n    ```\n\n* Update your master with the latest upstream version:\n\n    ```shell\n    git pull --ff upstream master\n    ```\n\n## <a name=\"rules\"></a> Coding Rules\n\nWe generally follow the [Google JavaScript style guide][js-style-guide] with a few minor exceptions documented in our [JSCS configuration][jscs-config].\n\n[JSCS](http://jscs.info) is a tool for linting code against a style guide and has plugins available for both editors and build tools. Should\nyou find that you would prefer to automatically format your code to match our style guide, you can use the JSCS [autoformatting][autoformatting]\nfeature.\n\n## <a name=\"cla\"></a> Signing the CLA\n\nPlease sign our Contributor License Agreement (CLA) before sending pull requests. For any code\nchanges to be accepted, the CLA must be signed. It's a quick process, we promise!\n\n* For individuals we have a [simple click-through form][individual-cla].\n* For corporations we'll need you to\n  [print, sign and one of scan+email, fax or mail the form][corporate-cla].\n\n*This guide was inspired by the [AngularJS contribution guidelines](https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md).*\n\n[github]: https://github.com/google/material-design-lite\n[issue tracker]: https://github.com/google/material-design-lite/issues\n[individual-cla]: http://code.google.com/legal/individual-cla-v1.0.html\n[corporate-cla]: http://code.google.com/legal/corporate-cla-v1.0.html\n[js-style-guide]: http://google-styleguide.googlecode.com/svn/trunk/javascriptguide.xml\n[jsbin]: http://jsbin.com/\n[stackoverflow]: http://stackoverflow.com/questions/tagged/material-design-lite\n[global-gitignore]: https://help.github.com/articles/ignoring-files/#create-a-global-gitignore\n[autoformatting]: https://medium.com/@addyosmani/auto-formatting-javascript-code-style-fe0f98a923b8\n[jscs-config]: https://github.com/google/material-design-lite/blob/master/.jscsrc\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.58,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2015 Google Inc\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n\n   All code in any directories or sub-directories that end with *.html or\n   *.css is licensed under the Creative Commons Attribution International\n   4.0 License, which full text can be found here:\n   https://creativecommons.org/licenses/by/4.0/legalcode.\n\n   As an exception to this license, all html or css that is generated by\n   the software at the direction of the user is copyright the user. The\n   user has full ownership and control over such content, including\n   whether and how they wish to license it.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.91,
          "content": "# Material Design Lite\n\n[![GitHub version](https://badge.fury.io/gh/google%2Fmaterial-design-lite.svg)](https://badge.fury.io/gh/google%2Fmaterial-design-lite)\n[![npm version](https://badge.fury.io/js/material-design-lite.svg)](https://badge.fury.io/js/material-design-lite)\n[![Bower version](https://badge.fury.io/bo/material-design-lite.svg)](https://badge.fury.io/bo/material-design-lite)\n[![Gitter version](https://img.shields.io/gitter/room/gitterHQ/gitter.svg)](https://gitter.im/google/material-design-lite)\n[![Dependency Status](https://david-dm.org/google/material-design-lite.svg)](https://david-dm.org/google/material-design-lite)\n\n> An implementation of [Material Design](http://www.google.com/design/spec/material-design/introduction.html)\ncomponents in vanilla CSS, JS, and HTML.\n\nMaterial Design Lite (MDL) lets you add a Material Design look and feel to your\nstatic content websites. It doesn't rely on any JavaScript frameworks or\nlibraries. Optimized for cross-device use, gracefully degrades in older\nbrowsers, and offers an experience that is accessible from the get-go.\n\n> ### Limited support\n\n> Material Design Lite is now in limited support, with development having moved to the\n> [Material Components for the web](https://github.com/material-components/material-components-web) repository.\n\n> No further development is taking place in MDL by the core team, but we are happy to review PRs, fix critical bugs and\n> push out new releases. No breaking changes will be accepted.\n\n## Use MDL on your site?\n\n**This document is targeted at developers that will contribute to or compile\nMDL. If you are looking to use MDL on your website or web app please head to\n[getmdl.io](http://getmdl.io).**\n\n## Browser Support\n\n\n| IE9 | IE10 | IE11 | Chrome | Opera | Firefox | Safari | Chrome (Android) | Mobile Safari |\n|-----|------|------|--------|-------|---------|--------|------------------|---------------|\n| B   | A    | A    | A      | A     | A       | A      | A                | A             |\n\nA-grade browsers are fully supported. B-grade browsers will gracefully degrade\nto our CSS-only experience.\n\n### Download / Clone\n\nClone the repo using Git:\n\n```bash\ngit clone https://github.com/google/material-design-lite.git\n```\n\nAlternatively you can [download](https://github.com/google/material-design-lite/archive/master.zip)\nthis repository.\n\nWindows users, if you have trouble compiling due to line endings then make sure\nyou configure git to checkout the repository with `lf` (unix) line endings. This\ncan be achieved by setting `core.eol`.\n\n```bash\ngit config core.eol lf\ngit config core.autocrlf input\ngit rm --cached -r .\ngit reset --hard\n```\n\n> Remember, the master branch is considered unstable. Do not use this in\nproduction. Use a tagged state of the repository, npm, or bower for stability!\n\n## Feature requests\n\nMDL is currently in limited support mode, with no further development taking place by the core team.\nWe are happy to accept and review pull requests for new functionality, however, as long as there are no breaking\nchanges.\n\n## Want to contribute?\n\nIf you found a bug, have any questions or want to contribute. Follow our\n[guidelines](https://github.com/google/material-design-lite/blob/mdl-1.x/CONTRIBUTING.md),\nand help improve the Material Design Lite. For more information visit our\n[wiki](https://github.com/google/material-design-lite/wiki).\n\nPlease use the default branch, `mdl-1.x`.\n\nTake note that [Material Components for Web](https://github.com/material-components/material-components-web), which is MDL v2, is under early Alpha stages (which means everything is a moving target, and we can change anything at any moment). Use with caution.\n\nHowever, we would absolutely love to have people testing MCW and provide feedback about their experiences using it, especially integrating with other frameworks and libraries.\n\n## License\n\nÂ© Google, 2015. Licensed under an\n[Apache-2](https://github.com/google/material-design-lite/blob/master/LICENSE)\nlicense.\n"
        },
        {
          "name": "bower.json",
          "type": "blob",
          "size": 0.54,
          "content": "{\n  \"name\": \"material-design-lite\",\n  \"version\": \"1.3.0\",\n  \"homepage\": \"https://github.com/google/material-design-lite\",\n  \"authors\": [\n    \"Material Design Lite team\"\n  ],\n  \"description\": \"Material Design Components in CSS, JS and HTML\",\n  \"main\": [\n    \"material.min.css\",\n    \"material.min.js\"\n  ],\n  \"keywords\": [\n    \"material\",\n    \"design\",\n    \"styleguide\",\n    \"style\",\n    \"guide\"\n  ],\n  \"license\": \"Apache-2\",\n  \"ignore\": [\n    \"**/.*\",\n    \"node_modules\",\n    \"bower_components\",\n    \"./lib/.bower_components\",\n    \"test\",\n    \"tests\"\n  ]\n}\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "gulpfile.babel.js",
          "type": "blob",
          "size": 23.16,
          "content": "/**\n *\n *  Material Design Lite\n *  Copyright 2015 Google Inc. All rights reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License\n *\n */\n\n// jscs:disable jsDoc\n\n'use strict';\n\n// Include Gulp & Tools We'll Use\nimport fs from 'fs';\nimport path from 'path';\nimport mergeStream from 'merge-stream';\nimport del from 'del';\nimport vinylPaths from 'vinyl-paths';\nimport runSequence from 'run-sequence';\nimport browserSync from 'browser-sync';\nimport through from 'through2';\nimport swig from 'swig';\nimport gulp from 'gulp';\nimport closureCompiler from 'gulp-closure-compiler';\nimport gulpLoadPlugins from 'gulp-load-plugins';\nimport uniffe from './utils/uniffe.js';\nimport pkg from './package.json';\n\nconst $ = gulpLoadPlugins();\nconst reload = browserSync.reload;\nconst hostedLibsUrlPrefix = 'https://code.getmdl.io';\nconst templateArchivePrefix = 'mdl-template-';\nconst bucketProd = 'gs://www.getmdl.io';\nconst bucketStaging = 'gs://mdl-staging';\nconst bucketCode = 'gs://code.getmdl.io';\nconst banner = ['/**',\n  ' * <%= pkg.name %> - <%= pkg.description %>',\n  ' * @version v<%= pkg.version %>',\n  ' * @license <%= pkg.license %>',\n  ' * @copyright 2015 Google, Inc.',\n  ' * @link https://github.com/google/material-design-lite',\n  ' */',\n  ''].join('\\n');\n\nlet codeFiles = '';\n\nconst AUTOPREFIXER_BROWSERS = [\n  'ie >= 10',\n  'ie_mob >= 10',\n  'ff >= 30',\n  'chrome >= 34',\n  'safari >= 7',\n  'opera >= 23',\n  'ios >= 7',\n  'android >= 4.4',\n  'bb >= 10'\n];\n\nconst SOURCES = [\n  // Component handler\n  'src/mdlComponentHandler.js',\n  // Polyfills/dependencies\n  'src/third_party/**/*.js',\n  // Base components\n  'src/button/button.js',\n  'src/checkbox/checkbox.js',\n  'src/icon-toggle/icon-toggle.js',\n  'src/menu/menu.js',\n  'src/progress/progress.js',\n  'src/radio/radio.js',\n  'src/slider/slider.js',\n  'src/snackbar/snackbar.js',\n  'src/spinner/spinner.js',\n  'src/switch/switch.js',\n  'src/tabs/tabs.js',\n  'src/textfield/textfield.js',\n  'src/tooltip/tooltip.js',\n  // Complex components (which reuse base components)\n  'src/layout/layout.js',\n  'src/data-table/data-table.js',\n  // And finally, the ripples\n  'src/ripple/ripple.js'\n];\n\n// ***** Development tasks ****** //\n\n// Lint JavaScript\ngulp.task('lint', () => {\n  return gulp.src([\n      'src/**/*.js',\n      'gulpfile.babel.js'\n    ])\n    .pipe(reload({stream: true, once: true}))\n    .pipe($.jshint())\n    .pipe($.jscs())\n    .pipe($.jshint.reporter('jshint-stylish'))\n    .pipe($.jscs.reporter())\n    .pipe($.if(!browserSync.active, $.jshint.reporter('fail')))\n    .pipe($.if(!browserSync.active, $.jscs.reporter('fail')));\n});\n\n// ***** Production build tasks ****** //\n\n// Optimize Images\n// TODO: Update image paths in final CSS to match root/images\ngulp.task('images', () => {\n  return gulp.src('src/**/*.{svg,png,jpg}')\n    .pipe($.flatten())\n    .pipe($.cache($.imagemin({\n      progressive: true,\n      interlaced: true\n    })))\n    .pipe(gulp.dest('dist/images'))\n    .pipe($.size({title: 'images'}));\n});\n\n// Compile and Automatically Prefix Stylesheets (dev)\ngulp.task('styles:dev', () => {\n  return gulp.src('src/**/*.scss')\n    .pipe($.sass({\n      precision: 10,\n      onError: console.error.bind(console, 'Sass error:')\n    }))\n    .pipe($.cssInlineImages({\n      webRoot: 'src'\n    }))\n    .pipe($.autoprefixer(AUTOPREFIXER_BROWSERS))\n    .pipe(gulp.dest('.tmp/styles'))\n    .pipe($.size({title: 'styles'}));\n});\n\n// Compile and Automatically Prefix Stylesheet Templates (production)\ngulp.task('styletemplates', () => {\n  // For best performance, don't add Sass partials to `gulp.src`\n  return gulp.src('src/template.scss')\n    // Generate Source Maps\n    .pipe($.sourcemaps.init())\n    .pipe($.sass({\n      precision: 10,\n      onError: console.error.bind(console, 'Sass error:')\n    }))\n    .pipe($.cssInlineImages({webRoot: 'src'}))\n    .pipe($.autoprefixer(AUTOPREFIXER_BROWSERS))\n    .pipe(gulp.dest('.tmp'))\n    // Concatenate Styles\n    .pipe($.concat('material.css.template'))\n    .pipe(gulp.dest('dist'))\n    // Minify Styles\n    .pipe($.if('*.css.template', $.csso()))\n    .pipe($.concat('material.min.css.template'))\n    .pipe($.header(banner, {pkg}))\n    .pipe($.sourcemaps.write('.'))\n    .pipe(gulp.dest('dist'))\n    .pipe($.size({title: 'styles'}));\n});\n\n// Compile and Automatically Prefix Stylesheets (production)\ngulp.task('styles', () => {\n  // For best performance, don't add Sass partials to `gulp.src`\n  return gulp.src('src/material-design-lite.scss')\n    // Generate Source Maps\n    .pipe($.sourcemaps.init())\n    .pipe($.sass({\n      precision: 10,\n      onError: console.error.bind(console, 'Sass error:')\n    }))\n    .pipe($.cssInlineImages({webRoot: 'src'}))\n    .pipe($.autoprefixer(AUTOPREFIXER_BROWSERS))\n    .pipe(gulp.dest('.tmp'))\n    // Concatenate Styles\n    .pipe($.concat('material.css'))\n    .pipe($.header(banner, {pkg}))\n    .pipe(gulp.dest('dist'))\n    // Minify Styles\n    .pipe($.if('*.css', $.csso()))\n    .pipe($.concat('material.min.css'))\n    .pipe($.header(banner, {pkg}))\n    .pipe($.sourcemaps.write('.'))\n    .pipe(gulp.dest('dist'))\n    .pipe($.size({title: 'styles'}));\n});\n\n// Only generate CSS styles for the MDL grid\ngulp.task('styles-grid', () => {\n  return gulp.src('src/material-design-lite-grid.scss')\n    .pipe($.sass({\n      precision: 10,\n      onError: console.error.bind(console, 'Sass error:')\n    }))\n    .pipe($.autoprefixer(AUTOPREFIXER_BROWSERS))\n    .pipe(gulp.dest('.tmp'))\n    // Concatenate Styles\n    .pipe($.concat('material-grid.css'))\n    .pipe($.header(banner, {pkg}))\n    .pipe(gulp.dest('dist'))\n    // Minify Styles\n    .pipe($.if('*.css', $.csso()))\n    .pipe($.concat('material-grid.min.css'))\n    .pipe($.header(banner, {pkg}))\n    .pipe(gulp.dest('dist'))\n    .pipe($.size({title: 'styles-grid'}));\n});\n\n// Build with Google's Closure Compiler, requires Java 1.7+ installed.\ngulp.task('closure', () => {\n  return gulp.src(SOURCES)\n    .pipe(closureCompiler({\n      compilerPath: 'node_modules/google-closure-compiler/compiler.jar',\n      fileName: 'material.closure.min.js',\n      compilerFlags: {\n        // jscs:disable requireCamelCaseOrUpperCaseIdentifiers\n        compilation_level: 'ADVANCED_OPTIMIZATIONS',\n        language_in: 'ECMASCRIPT6_STRICT',\n        language_out: 'ECMASCRIPT5_STRICT',\n        warning_level: 'VERBOSE'\n        // jscs:enable requireCamelCaseOrUpperCaseIdentifiers\n      }\n    }))\n    .pipe(gulp.dest('./dist'));\n});\n\n// Concatenate And Minify JavaScript\ngulp.task('scripts', ['lint'], () => {\n  return gulp.src(SOURCES)\n    .pipe($.if(/mdlComponentHandler\\.js/, $.util.noop(), uniffe()))\n    .pipe($.sourcemaps.init())\n    // Concatenate Scripts\n    .pipe($.concat('material.js'))\n    .pipe($.iife({useStrict: true}))\n    .pipe(gulp.dest('dist'))\n    // Minify Scripts\n    .pipe($.uglify({\n      sourceRoot: '.',\n      sourceMapIncludeSources: true\n    }))\n    .pipe($.header(banner, {pkg}))\n    .pipe($.concat('material.min.js'))\n    // Write Source Maps\n    .pipe($.sourcemaps.write('.'))\n    .pipe(gulp.dest('dist'))\n    .pipe($.size({title: 'scripts'}));\n});\n\n// Clean Output Directory\ngulp.task('clean', () => del(['dist', '.publish']));\n\n// Copy package manger and LICENSE files to dist\ngulp.task('metadata', () => {\n  return gulp.src([\n      'package.json',\n      'bower.json',\n      'LICENSE'\n    ])\n    .pipe(gulp.dest('dist'));\n});\n\n// Build Production Files, the Default Task\ngulp.task('default', ['clean'], cb => {\n  runSequence(\n    ['styles', 'styles-grid'],\n    ['scripts'],\n    ['mocha'],\n    cb);\n});\n\n// Build production files and microsite\ngulp.task('all', ['clean'], cb => {\n  runSequence(\n    ['styletemplates'],\n    ['styles-grid', 'styles:gen'],\n    ['scripts'],\n    ['mocha'],\n    ['assets', 'pages',\n     'templates', 'images', 'metadata'],\n    ['zip'],\n    cb);\n});\n\n// ***** Testing tasks ***** //\n\ngulp.task('mocha', ['styles'], () => {\n  return gulp.src('test/index.html')\n    .pipe($.mochaPhantomjs({reporter: 'tap'}));\n});\n\ngulp.task('mocha:closure', ['closure'], () => {\n  return gulp.src('test/index.html')\n    .pipe($.replace('src=\"../dist/material.js\"',\n        'src=\"../dist/material.closure.min.js\"'))\n    .pipe($.rename('temp.html'))\n    .pipe(gulp.dest('test'))\n    .pipe($.mochaPhantomjs({reporter: 'tap'}))\n    .on('finish', () => del.sync('test/temp.html'))\n    .on('error', () => del.sync('test/temp.html'));\n});\n\ngulp.task('test', [\n  'lint',\n  'mocha',\n  'mocha:closure'\n]);\n\ngulp.task('test:visual', () => {\n  browserSync({\n    notify: false,\n    server: '.',\n    startPath: 'test/visual/index.html'\n  });\n\n  gulp.watch('test/visual/**', reload);\n});\n\n// ***** Landing page tasks ***** //\n\n/**\n * Site metadata for use with templates.\n * @type {Object}\n */\nconst site = {};\n\n/**\n * Generates an HTML file based on a template and file metadata.\n */\nfunction applyTemplate() {\n  return through.obj((file, enc, cb) => {\n    const data = {\n      site,\n      page: file.page,\n      content: file.contents.toString()\n    };\n\n    const templateFile = path.join(\n        __dirname, 'docs', '_templates', `${file.page.layout}.html`);\n    const tpl = swig.compileFile(templateFile, {cache: false});\n\n    file.contents = new Buffer(tpl(data));\n    cb(null, file);\n  });\n}\n\n/**\n * Generates an index.html file for each README in MDL/src directory.\n */\ngulp.task('components', ['demos'], () => {\n  return gulp.src('src/**/README.md', {base: 'src'})\n    // Add basic front matter.\n    .pipe($.header('---\\nlayout: component\\nbodyclass: component\\ninclude_prefix: ../../\\n---\\n\\n'))\n    .pipe($.frontMatter({\n      property: 'page',\n      remove: true\n    }))\n    .pipe($.marked())\n    .pipe((() => {\n      return through.obj((file, enc, cb) => {\n        file.page.component = file.relative.split('/')[0];\n        cb(null, file);\n      });\n    })())\n    .pipe(applyTemplate())\n    .pipe($.rename(path => path.basename = 'index'))\n    .pipe(gulp.dest('dist/components'));\n});\n\n/**\n * Copies demo files from MDL/src directory.\n */\ngulp.task('demoresources', () => {\n  return gulp.src([\n      'src/**/demos.css',\n      'src/**/demo.css',\n      'src/**/demo.js'\n    ], {base: 'src'})\n    .pipe($.if('*.scss', $.sass({\n      precision: 10,\n      onError: console.error.bind(console, 'Sass error:')\n    })))\n    .pipe($.cssInlineImages({webRoot: 'src'}))\n    .pipe($.if('*.css', $.autoprefixer(AUTOPREFIXER_BROWSERS)))\n    .pipe(gulp.dest('dist/components'));\n});\n\n/**\n * Generates demo files for testing made of all the snippets and the demo file\n * put together.\n */\ngulp.task('demos', ['demoresources'], () => {\n  /**\n   * Retrieves the list of component folders.\n   */\n  function getComponentFolders() {\n    return fs.readdirSync('src')\n      .filter(file => fs.statSync(path.join('src', file)).isDirectory());\n  }\n\n  const tasks = getComponentFolders().map(component => {\n    return gulp.src([\n        path.join('src', component, 'snippets', '*.html'),\n        path.join('src', component, 'demo.html')\n      ])\n      .pipe($.concat('/demo.html'))\n      // Add basic front matter.\n      .pipe($.header('---\\nlayout: demo\\nbodyclass: demo\\ninclude_prefix: ../../\\n---\\n\\n'))\n      .pipe($.frontMatter({\n        property: 'page',\n        remove: true\n      }))\n      .pipe($.marked())\n      .pipe((() => {\n        return through.obj((file, enc, cb) => {\n          file.page.component = component;\n          cb(null, file);\n        });\n      })())\n      .pipe(applyTemplate())\n      .pipe(gulp.dest(path.join('dist', 'components', component)));\n  });\n\n  return mergeStream(tasks);\n});\n\n/**\n * Generates an HTML file for each md file in _pages directory.\n */\ngulp.task('pages', ['components'], () => {\n  return gulp.src('docs/_pages/*.md')\n    .pipe($.frontMatter({\n      property: 'page',\n      remove: true\n    }))\n    .pipe($.marked())\n    .pipe(applyTemplate())\n    .pipe($.replace('$$version$$', pkg.version))\n    .pipe($.replace('$$hosted_libs_prefix$$', hostedLibsUrlPrefix))\n    .pipe($.replace('$$template_archive_prefix$$', templateArchivePrefix))\n    /* Replacing code blocks class name to match Prism's. */\n    .pipe($.replace('class=\"lang-', 'class=\"language-'))\n    /* Translate html code blocks to \"markup\" because that's what Prism uses. */\n    .pipe($.replace('class=\"language-html', 'class=\"language-markup'))\n    .pipe($.rename(path => {\n      if (path.basename !== 'index') {\n        path.dirname = path.basename;\n        path.basename = 'index';\n      }\n    }))\n    .pipe(gulp.dest('dist'));\n});\n\n/**\n * Copies assets from MDL and _assets directory.\n */\ngulp.task('assets', () => {\n  return gulp.src([\n      'docs/_assets/**/*',\n      'node_modules/clippy/build/clippy.swf',\n      'node_modules/swfobject-npm/swfobject/src/swfobject.js',\n      'node_modules/prismjs/prism.js',\n      'node_modules/prismjs/components/prism-markup.min.js',\n      'node_modules/prismjs/components/prism-javascript.min.js',\n      'node_modules/prismjs/components/prism-css.min.js',\n      'node_modules/prismjs/components/prism-bash.min.js',\n      'node_modules/prismjs/dist/prism-default/prism-default.css'\n    ])\n    .pipe($.if(/\\.js/i, $.replace('$$version$$', pkg.version)))\n    .pipe($.if(/\\.js/i, $.replace('$$hosted_libs_prefix$$', hostedLibsUrlPrefix)))\n    .pipe($.if(/\\.(svg|jpg|png)$/i, $.imagemin({\n      progressive: true,\n      interlaced: true\n    })))\n    .pipe($.if(/\\.css/i, $.autoprefixer(AUTOPREFIXER_BROWSERS)))\n    .pipe($.if(/\\.css/i, $.csso()))\n    .pipe($.if(/\\.js/i, $.uglify({\n      preserveComments: 'some',\n      sourceRoot: '.',\n      sourceMapIncludeSources: true\n    })))\n    .pipe(gulp.dest('dist/assets'));\n});\n\n/**\n * Defines the list of resources to watch for changes.\n */\nfunction watch() {\n  gulp.watch(['src/**/*.js', '!src/**/README.md'],\n    ['scripts', 'demos', 'components', reload]);\n  gulp.watch(['src/**/*.{scss,css}'],\n    ['styles', 'styles-grid', 'styletemplates', reload]);\n  gulp.watch(['src/**/*.html'], ['pages', reload]);\n  gulp.watch(['src/**/*.{svg,png,jpg}'], ['images', reload]);\n  gulp.watch(['src/**/README.md'], ['pages', reload]);\n  gulp.watch(['templates/**/*'], ['templates', reload]);\n  gulp.watch(['docs/**/*'], ['pages', 'assets', reload]);\n  gulp.watch(['package.json', 'bower.json', 'LICENSE'], ['metadata']);\n}\n\n/**\n * Serves the landing page from \"out\" directory.\n */\ngulp.task('serve:browsersync', () => {\n  browserSync({\n    notify: false,\n    server: {\n      baseDir: ['dist']\n    }\n  });\n\n  watch();\n});\n\ngulp.task('serve', () => {\n  $.connect.server({\n    root: 'dist',\n    port: 5000,\n    livereload: true\n  });\n\n  watch();\n\n  gulp.src('dist/index.html')\n    .pipe($.open({uri: 'http://localhost:5000'}));\n});\n\n// Generate release archive containing just JS, CSS, Source Map deps\ngulp.task('zip:mdl', () => {\n  return gulp.src([\n      'dist/material?(.min)@(.js|.css)?(.map)',\n      'LICENSE',\n      'bower.json',\n      'package.json'\n    ])\n    .pipe($.zip('mdl.zip'))\n    .pipe(gulp.dest('dist'));\n});\n\n/**\n * Returns the list of children directories inside the given directory.\n * @param {string} dir the parent directory\n * @return {Array<string>} list of child directories\n */\nfunction getSubDirectories(dir) {\n  return fs.readdirSync(dir)\n    .filter(file => fs.statSync(path.join(dir, file)).isDirectory());\n}\n\n// Generate release archives containing the templates and assets for templates.\ngulp.task('zip:templates', () => {\n  const templates = getSubDirectories('dist/templates');\n\n  // Generate a zip file for each template.\n  const generateZips = templates.map(template => {\n    return gulp.src([\n        `dist/templates/${template}/**/*.*`,\n        'LICENSE'\n      ])\n      .pipe($.rename(path => {\n        path.dirname = path.dirname.replace(`dist/templates/${template}`, '');\n      }))\n      .pipe($.zip(`${templateArchivePrefix}${template}.zip`))\n      .pipe(gulp.dest('dist'));\n  });\n\n  return mergeStream(generateZips);\n});\n\ngulp.task('zip', [\n  'zip:templates',\n  'zip:mdl'\n]);\n\ngulp.task('genCodeFiles', () => {\n  return gulp.src([\n      'dist/material.*@(js|css)?(.map)',\n      'dist/mdl.zip',\n      `dist/${templateArchivePrefix}*.zip`\n    ], {read: false})\n    .pipe($.tap(file => {\n      codeFiles += ` dist/${path.basename(file.path)}`;\n    }));\n});\n\n// Push the latest version of code resources (CSS+JS) to Google Cloud Storage.\n// Public-read objects in GCS are served by a Google provided and supported\n// global, high performance caching/content delivery network (CDN) service.\n// This task requires gsutil to be installed and configured.\n// For info on gsutil: https://cloud.google.com/storage/docs/gsutil.\ngulp.task('pushCodeFiles', () => {\n  const dest = bucketCode;\n  console.log(`Publishing ${pkg.version} to CDN (${dest})`);\n\n  // Build cache control and gsutil cmd to copy\n  // each object into a GCS bucket. The dest is a version specific path.\n  // The gsutil -m option requests parallel copies.\n  // The gsutil -h option is used to set metadata headers\n  // (cache control, in this case).\n  // Code files should NEVER be touched after uploading, therefore\n  // 30 days caching is a safe value.\n  const cacheControl = '-h \"Cache-Control:public,max-age=2592000\"';\n  const gsutilCpCmd = 'gsutil -m cp -z js,css,map ';\n  const gsutilCacheCmd = `gsutil -m setmeta -R ${cacheControl}`;\n\n  // Upload the goodies to a separate GCS bucket with versioning.\n  // Using a sep bucket avoids the risk of accidentally blowing away\n  // old versions in the microsite bucket.\n  return gulp.src('')\n    .pipe($.shell([\n      `${gsutilCpCmd}${codeFiles} ${dest}/${pkg.version}`,\n      `${gsutilCacheCmd} ${dest}/${pkg.version}`\n    ]));\n});\n\ngulp.task('publish:code', cb => {\n  runSequence(\n    ['zip:mdl', 'zip:templates'],\n    'genCodeFiles',\n    'pushCodeFiles',\n    cb);\n});\n\n/**\n * Function to publish staging or prod version from local tree,\n * or to promote staging to prod, per passed arg.\n * @param {string} pubScope the scope to publish to.\n */\nfunction mdlPublish(pubScope) {\n  let cacheTtl = null;\n  let src = null;\n  let dest = null;\n\n  if (pubScope === 'staging') {\n    // Set staging specific vars here.\n    cacheTtl = 0;\n    src = 'dist/*';\n    dest = bucketStaging;\n  } else if (pubScope === 'prod') {\n    // Set prod specific vars here.\n    cacheTtl = 60;\n    src = 'dist/*';\n    dest = bucketProd;\n  } else if (pubScope === 'promote') {\n    // Set promote (essentially prod) specific vars here.\n    cacheTtl = 60;\n    src = `${bucketStaging}/*`;\n    dest = bucketProd;\n  }\n\n  let infoMsg = `Publishing ${pubScope}/${pkg.version} to GCS (${dest})`;\n  if (src) {\n    infoMsg += ` from ${src}`;\n  }\n  console.log(infoMsg);\n\n  // Build gsutil commands:\n  // The gsutil -h option is used to set metadata headers.\n  // The gsutil -m option requests parallel copies.\n  // The gsutil -R option is used for recursive file copy.\n  const cacheControl = `-h \"Cache-Control:public,max-age=${cacheTtl}\"`;\n  const gsutilCacheCmd = `gsutil -m setmeta ${cacheControl} ${dest}/**`;\n  const gsutilCpCmd = `gsutil -m cp -r -z html,css,js,svg ${src} ${dest}`;\n\n  gulp.src('').pipe($.shell([gsutilCpCmd, gsutilCacheCmd]));\n}\n\n// Push the local build of the MDL microsite and release artifacts to the\n// production Google Cloud Storage bucket for general serving to the web.\n// Public-read objects in GCS are served by a Google provided and supported\n// global, high performance caching/content delivery network (CDN) service.\n// This task requires gsutil to be installed and configured.\n// For info on gsutil: https://cloud.google.com/storage/docs/gsutil.\n//\ngulp.task('publish:prod', () => {\n  mdlPublish('prod');\n});\n\n// Promote the staging version of the MDL microsite and release artifacts\n// to the production Google Cloud Storage bucket for general serving.\n// Public-read objects in GCS are served by a Google provided and supported\n// global, high performance caching/content delivery network (CDN) service.\n// This task requires gsutil to be installed and configured.\n// For info on gsutil: https://cloud.google.com/storage/docs/gsutil.\n//\ngulp.task('publish:promote', () => {\n  mdlPublish('promote');\n});\n\n// Push the staged version of the MDL microsite and release artifacts\n// to a production Google Cloud Storage bucket for staging and pre-production testing.\n//\n// This task requires gsutil to be installed and configured.\n// For info on gsutil: https://cloud.google.com/storage/docs/gsutil.\n//\ngulp.task('publish:staging', () => {\n  mdlPublish('staging');\n});\n\ngulp.task('_release', () => {\n  return gulp.src([\n      'dist/material?(.min)@(.js|.css)?(.map)',\n      'LICENSE',\n      'README.md',\n      'bower.json',\n      'package.json',\n      '.jscsrc',\n      '.jshintrc',\n      './sr?/**/*',\n      'gulpfile.babel.js',\n      './util?/**/*'\n    ])\n    .pipe(gulp.dest('_release'));\n});\n\ngulp.task('publish:release', ['_release'], () => {\n  return gulp.src('_release')\n    .pipe($.subtree({\n      remote: 'origin',\n      branch: 'release'\n    }))\n    .pipe(vinylPaths(del));\n});\n\ngulp.task('templates:styles', () => {\n  return gulp.src('templates/**/*.css')\n    .pipe($.autoprefixer(AUTOPREFIXER_BROWSERS))\n    // FIXME: This crashes. It's a bug in gulp-csso,\n    // not csso itself.\n    //.pipe($.csso())\n    .pipe(gulp.dest('dist/templates'));\n});\n\ngulp.task('templates:static', () => {\n  return gulp.src('templates/**/*.html')\n  .pipe($.replace('$$version$$', pkg.version))\n  .pipe($.replace('$$hosted_libs_prefix$$', hostedLibsUrlPrefix))\n  .pipe(gulp.dest('dist/templates'));\n});\n\n// This task can be used if you want to test the templates against locally\n// built version of the MDL libraries.\ngulp.task('templates:localtestingoverride', () => {\n  return gulp.src('templates/**/*.html')\n    .pipe($.replace('$$version$$', '.'))\n    .pipe($.replace('$$hosted_libs_prefix$$', ''))\n    .pipe(gulp.dest('dist/templates'));\n});\n\ngulp.task('templates:images', () => {\n  return gulp.src('templates/*/images/**/*')\n    .pipe($.imagemin({\n      progressive: true,\n      interlaced: true\n    }))\n    .pipe(gulp.dest('dist/templates'));\n});\n\ngulp.task('templates:fonts', () => {\n  return gulp.src('templates/*/fonts/**/*')\n    .pipe(gulp.dest('dist/templates/'));\n});\n\ngulp.task('templates', [\n  'templates:static',\n  'templates:images',\n  'templates:fonts',\n  'templates:styles'\n]);\n\ngulp.task('styles:gen', ['styles'], () => {\n  const MaterialCustomizer = require('./docs/_assets/customizer.js');\n  const templatePath = path.join(__dirname, 'dist', 'material.min.css.template');\n  // TODO: This task needs refactoring once we turn MaterialCustomizer\n  // into a proper Node module.\n  const mc = new MaterialCustomizer();\n  mc.template = fs.readFileSync(templatePath).toString();\n\n  let stream = gulp.src('');\n\n  mc.paletteIndices.forEach(primary => {\n    mc.paletteIndices.forEach(accent => {\n      if (primary === accent) {\n        return;\n      }\n\n      if (mc.forbiddenAccents.indexOf(accent) !== -1) {\n        return;\n      }\n\n      const primaryName = primary.toLowerCase().replace(' ', '_');\n      const accentName = accent.toLowerCase().replace(' ', '_');\n\n      stream = stream.pipe($.file(\n        `material.${primaryName}-${accentName}.min.css`,\n        mc.processTemplate(primary, accent)\n      ));\n    });\n  });\n\n  stream.pipe(gulp.dest('dist'));\n});\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 2.07,
          "content": "{\n  \"name\": \"material-design-lite\",\n  \"version\": \"1.3.0\",\n  \"description\": \"Material Design Components in CSS, JS and HTML\",\n  \"private\": true,\n  \"license\": \"Apache-2.0\",\n  \"author\": \"Google\",\n  \"repository\": \"google/material-design-lite\",\n  \"main\": \"dist/material.min.js\",\n  \"devDependencies\": {\n    \"acorn\": \"^4.0.3\",\n    \"babel-core\": \"^6.20.0\",\n    \"babel-preset-es2015\": \"^6.18.0\",\n    \"browser-sync\": \"^2.2.3\",\n    \"chai\": \"^3.3.0\",\n    \"chai-jquery\": \"^2.0.0\",\n    \"del\": \"^2.0.2\",\n    \"drool\": \"^0.4.0\",\n    \"escodegen\": \"^1.6.1\",\n    \"google-closure-compiler\": \"\",\n    \"gulp\": \"^3.9.0\",\n    \"gulp-autoprefixer\": \"^3.0.2\",\n    \"gulp-cache\": \"^0.4.5\",\n    \"gulp-closure-compiler\": \"^0.4.0\",\n    \"gulp-concat\": \"^2.4.1\",\n    \"gulp-connect\": \"^5.0.0\",\n    \"gulp-css-inline-images\": \"^0.1.1\",\n    \"gulp-csso\": \"1.0.0\",\n    \"gulp-file\": \"^0.3.0\",\n    \"gulp-flatten\": \"^0.3.1\",\n    \"gulp-front-matter\": \"^1.2.2\",\n    \"gulp-header\": \"^1.2.2\",\n    \"gulp-if\": \"^2.0.0\",\n    \"gulp-iife\": \"^0.3.0\",\n    \"gulp-imagemin\": \"^3.1.0\",\n    \"gulp-jscs\": \"^4.0.0\",\n    \"gulp-jshint\": \"^2.0.4\",\n    \"gulp-load-plugins\": \"^1.3.0\",\n    \"gulp-marked\": \"^1.0.0\",\n    \"gulp-mocha-phantomjs\": \"^0.12.0\",\n    \"gulp-open\": \"^2.0.0\",\n    \"gulp-rename\": \"^1.2.0\",\n    \"gulp-replace\": \"^0.5.3\",\n    \"gulp-sass\": \"3.0.0\",\n    \"gulp-shell\": \"^0.5.2\",\n    \"gulp-size\": \"^2.0.0\",\n    \"gulp-sourcemaps\": \"^2.0.1\",\n    \"gulp-subtree\": \"^0.1.0\",\n    \"gulp-tap\": \"^0.1.3\",\n    \"gulp-uglify\": \"^2.0.0\",\n    \"gulp-util\": \"^3.0.4\",\n    \"gulp-zip\": \"^4.0.0\",\n    \"humanize\": \"0.0.9\",\n    \"jquery\": \"^3.1.1\",\n    \"jshint\": \"^2.9.4\",\n    \"jshint-stylish\": \"^2.2.1\",\n    \"merge-stream\": \"^1.0.0\",\n    \"mocha\": \"^3.0.2\",\n    \"prismjs\": \"0.0.1\",\n    \"run-sequence\": \"^1.0.2\",\n    \"swig\": \"^1.4.2\",\n    \"through2\": \"^2.0.0\",\n    \"vinyl-paths\": \"^2.0.0\"\n  },\n  \"engines\": {\n    \"node\": \">=0.12.0\"\n  },\n  \"scripts\": {\n    \"test\": \"gulp && git status | grep 'working directory clean' >/dev/null || (echo 'Please commit all changes generated by building'; exit 1)\"\n  },\n  \"babel\": {\n    \"only\": \"gulpfile.babel.js\",\n    \"presets\": [\n      \"es2015\"\n    ]\n  }\n}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "templates",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "utils",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}