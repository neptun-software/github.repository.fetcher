{
  "metadata": {
    "timestamp": 1736557535795,
    "page": 586,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "sqlmapproject/sqlmap",
      "stars": 33041,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.41,
          "content": "*.conf text eol=lf\n*.json text eol=lf\n*.html text eol=lf\n*.md text eol=lf\n*.md5 text eol=lf\n*.pl text eol=lf\n*.py text eol=lf\n*.sh text eol=lf\n*.sql text eol=lf\n*.txt text eol=lf\n*.xml text eol=lf\n*.yaml text eol=lf\n*.yml text eol=lf\nLICENSE text eol=lf\nCOMMITMENT text eol=lf\n\n*_ binary\n*.dll binary\n*.pdf binary\n*.so binary\n*.wav binary\n*.zip binary\n*.x32 binary\n*.x64 binary\n*.exe binary\n*.sln binary\n*.vcproj binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.08,
          "content": "output/\n__pycache__/\n*.py[cod]\n.sqlmap_history\ntraffic.txt\n*~\nreq*.txt\n.idea/"
        },
        {
          "name": ".pylintrc",
          "type": "blob",
          "size": 16.31,
          "content": "# Based on Apache 2.0 licensed code from https://github.com/ClusterHQ/flocker\n\n[MASTER]\n\n# Specify a configuration file.\n#rcfile=\n\n# Python code to execute, usually for sys.path manipulation such as\n# pygtk.require().\ninit-hook=\"from pylint.config import find_pylintrc; import os, sys; sys.path.append(os.path.dirname(find_pylintrc()))\"\n\n# Add files or directories to the blacklist. They should be base names, not\n# paths.\nignore=\n\n# Pickle collected data for later comparisons.\npersistent=no\n\n# List of plugins (as comma separated values of python modules names) to load,\n# usually to register additional checkers.\nload-plugins=\n\n# Use multiple processes to speed up Pylint.\n# DO NOT CHANGE THIS VALUES >1 HIDE RESULTS!!!!!\njobs=1\n\n# Allow loading of arbitrary C extensions. Extensions are imported into the\n# active Python interpreter and may run arbitrary code.\nunsafe-load-any-extension=no\n\n# A comma-separated list of package or module names from where C extensions may\n# be loaded. Extensions are loading into the active Python interpreter and may\n# run arbitrary code\nextension-pkg-whitelist=\n\n# Allow optimization of some AST trees. This will activate a peephole AST\n# optimizer, which will apply various small optimizations. For instance, it can\n# be used to obtain the result of joining multiple strings with the addition\n# operator. Joining a lot of strings can lead to a maximum recursion error in\n# Pylint and this flag can prevent that. It has one side effect, the resulting\n# AST will be different than the one from reality.\noptimize-ast=no\n\n\n[MESSAGES CONTROL]\n\n# Only show warnings with the listed confidence levels. Leave empty to show\n# all. Valid levels: HIGH, INFERENCE, INFERENCE_FAILURE, UNDEFINED\nconfidence=\n\n# Enable the message, report, category or checker with the given id(s). You can\n# either give multiple identifier separated by comma (,) or put this option\n# multiple time. See also the \"--disable\" option for examples.\ndisable=all\n\nenable=import-error,\n       import-self,\n       reimported,\n       wildcard-import,\n       misplaced-future,\n       deprecated-module,\n       unpacking-non-sequence,\n       invalid-all-object,\n       undefined-all-variable,\n       used-before-assignment,\n       cell-var-from-loop,\n       global-variable-undefined,\n       redefine-in-handler,\n       unused-import,\n       unused-wildcard-import,\n       global-variable-not-assigned,\n       undefined-loop-variable,\n       global-at-module-level,\n       bad-open-mode,\n       redundant-unittest-assert,\n       boolean-datetime\n       deprecated-method,\n       anomalous-unicode-escape-in-string,\n       anomalous-backslash-in-string,\n       not-in-loop,\n       continue-in-finally,\n       abstract-class-instantiated,\n       star-needs-assignment-target,\n       duplicate-argument-name,\n       return-in-init,\n       too-many-star-expressions,\n       nonlocal-and-global,\n       return-outside-function,\n       return-arg-in-generator,\n       invalid-star-assignment-target,\n       bad-reversed-sequence,\n       nonexistent-operator,\n       yield-outside-function,\n       init-is-generator,\n       nonlocal-without-binding,\n       lost-exception,\n       assert-on-tuple,\n       dangerous-default-value,\n       duplicate-key,\n       useless-else-on-loop\n       expression-not-assigned,\n       confusing-with-statement,\n       unnecessary-lambda,\n       pointless-statement,\n       pointless-string-statement,\n       unnecessary-pass,\n       unreachable,\n       using-constant-test,\n       bad-super-call,\n       missing-super-argument,\n       slots-on-old-class,\n       super-on-old-class,\n       property-on-old-class,\n       not-an-iterable,\n       not-a-mapping,\n       format-needs-mapping,\n       truncated-format-string,\n       missing-format-string-key,\n       mixed-format-string,\n       too-few-format-args,\n       bad-str-strip-call,\n       too-many-format-args,\n       bad-format-character,\n       format-combined-specification,\n       bad-format-string-key,\n       bad-format-string,\n       missing-format-attribute,\n       missing-format-argument-key,\n       unused-format-string-argument\n       unused-format-string-key,\n       invalid-format-index,\n       bad-indentation,\n       mixed-indentation,\n       unnecessary-semicolon,\n       lowercase-l-suffix,\n       invalid-encoded-data,\n       unpacking-in-except,\n       import-star-module-level,\n       long-suffix,\n       old-octal-literal,\n       old-ne-operator,\n       backtick,\n       old-raise-syntax,\n       metaclass-assignment,\n       next-method-called,\n       dict-iter-method,\n       dict-view-method,\n       indexing-exception,\n       raising-string,\n       using-cmp-argument,\n       cmp-method,\n       coerce-method,\n       delslice-method,\n       getslice-method,\n       hex-method,\n       nonzero-method,\n       t-method,\n       setslice-method,\n       old-division,\n       logging-format-truncated,\n       logging-too-few-args,\n       logging-too-many-args,\n       logging-unsupported-format,\n       logging-format-interpolation,\n       invalid-unary-operand-type,\n       unsupported-binary-operation,\n       not-callable,\n       redundant-keyword-arg,\n       assignment-from-no-return,\n       assignment-from-none,\n       not-context-manager,\n       repeated-keyword,\n       missing-kwoa,\n       no-value-for-parameter,\n       invalid-sequence-index,\n       invalid-slice-index,\n       unexpected-keyword-arg,\n       unsupported-membership-test,\n       unsubscriptable-object,\n       access-member-before-definition,\n       method-hidden,\n       assigning-non-slot,\n       duplicate-bases,\n       inconsistent-mro,\n       inherit-non-class,\n       invalid-slots,\n       invalid-slots-object,\n       no-method-argument,\n       no-self-argument,\n       unexpected-special-method-signature,\n       non-iterator-returned,\n       arguments-differ,\n       signature-differs,\n       bad-staticmethod-argument,\n       non-parent-init-called,\n       bad-except-order,\n       catching-non-exception,\n       bad-exception-context,\n       notimplemented-raised,\n       raising-bad-type,\n       raising-non-exception,\n       misplaced-bare-raise,\n       duplicate-except,\n       nonstandard-exception,\n       binary-op-exception,\n       not-async-context-manager,\n       yield-inside-async-function\n\n# Needs investigation:\n# abstract-method (might be indicating a bug? probably not though)\n# protected-access (requires some refactoring)\n# attribute-defined-outside-init (requires some refactoring)\n# super-init-not-called (requires some cleanup)\n\n# Things we'd like to enable someday:\n# redefined-builtin (requires a bunch of work to clean up our code first)\n# redefined-outer-name (requires a bunch of work to clean up our code first)\n# undefined-variable (re-enable when pylint fixes https://github.com/PyCQA/pylint/issues/760)\n# no-name-in-module (giving us spurious warnings https://github.com/PyCQA/pylint/issues/73)\n# unused-argument (need to clean up or code a lot, e.g. prefix unused_?)\n# function-redefined (@overload causes lots of spurious warnings)\n# too-many-function-args (@overload causes spurious warnings... I think)\n# parameter-unpacking (needed for eventual Python 3 compat)\n# print-statement (needed for eventual Python 3 compat)\n# filter-builtin-not-iterating (Python 3)\n# map-builtin-not-iterating (Python 3)\n# range-builtin-not-iterating (Python 3)\n# zip-builtin-not-iterating (Python 3)\n# many others relevant to Python 3\n# unused-variable (a little work to cleanup, is all)\n\n# ...\n[REPORTS]\n\n# Set the output format. Available formats are text, parseable, colorized, msvs\n# (visual studio) and html. You can also give a reporter class, eg\n# mypackage.mymodule.MyReporterClass.\noutput-format=parseable\n\n# Put messages in a separate file for each module / package specified on the\n# command line instead of printing them on stdout. Reports (if any) will be\n# written in a file name \"pylint_global.[txt|html]\".\nfiles-output=no\n\n# Tells whether to display a full report or only the messages\nreports=no\n\n# Python expression which should return a note less than 10 (10 is the highest\n# note). You have access to the variables errors warning, statement which\n# respectively contain the number of errors / warnings messages and the total\n# number of statements analyzed. This is used by the global evaluation report\n# (RP0004).\nevaluation=10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)\n\n# Template used to display messages. This is a python new-style format string\n# used to format the message information. See doc for all details\n#msg-template=\n\n\n[LOGGING]\n\n# Logging modules to check that the string format arguments are in logging\n# function parameter format\nlogging-modules=logging\n\n\n[FORMAT]\n\n# Maximum number of characters on a single line.\nmax-line-length=100\n\n# Regexp for a line that is allowed to be longer than the limit.\nignore-long-lines=^\\s*(# )?<?https?://\\S+>?$\n\n# Allow the body of an if to be on the same line as the test if there is no\n# else.\nsingle-line-if-stmt=no\n\n# List of optional constructs for which whitespace checking is disabled. `dict-\n# separator` is used to allow tabulation in dicts, etc.: {1  : 1,\\n222: 2}.\n# `trailing-comma` allows a space between comma and closing bracket: (a, ).\n# `empty-line` allows space-only lines.\nno-space-check=trailing-comma,dict-separator\n\n# Maximum number of lines in a module\nmax-module-lines=1000\n\n# String used as indentation unit. This is usually \"    \" (4 spaces) or \"\\t\" (1\n# tab).\nindent-string='    '\n\n# Number of spaces of indent required inside a hanging  or continued line.\nindent-after-paren=4\n\n# Expected format of line ending, e.g. empty (any line ending), LF or CRLF.\nexpected-line-ending-format=\n\n\n[TYPECHECK]\n\n# Tells whether missing members accessed in mixin class should be ignored. A\n# mixin class is detected if its name ends with \"mixin\" (case insensitive).\nignore-mixin-members=yes\n\n# List of module names for which member attributes should not be checked\n# (useful for modules/projects where namespaces are manipulated during runtime\n# and thus existing member attributes cannot be deduced by static analysis. It\n# supports qualified module names, as well as Unix pattern matching.\nignored-modules=thirdparty.six.moves\n\n# List of classes names for which member attributes should not be checked\n# (useful for classes with attributes dynamically set). This supports can work\n# with qualified names.\nignored-classes=\n\n# List of members which are set dynamically and missed by pylint inference\n# system, and so shouldn't trigger E1101 when accessed. Python regular\n# expressions are accepted.\ngenerated-members=\n\n\n[VARIABLES]\n\n# Tells whether we should check for unused import in __init__ files.\ninit-import=no\n\n# A regular expression matching the name of dummy variables (i.e. expectedly\n# not used).\ndummy-variables-rgx=_$|dummy\n\n# List of additional names supposed to be defined in builtins. Remember that\n# you should avoid to define new builtins when possible.\nadditional-builtins=\n\n# List of strings which can identify a callback function by name. A callback\n# name must start or end with one of those strings.\ncallbacks=cb_,_cb\n\n\n[SIMILARITIES]\n\n# Minimum lines number of a similarity.\nmin-similarity-lines=4\n\n# Ignore comments when computing similarities.\nignore-comments=yes\n\n# Ignore docstrings when computing similarities.\nignore-docstrings=yes\n\n# Ignore imports when computing similarities.\nignore-imports=no\n\n\n[SPELLING]\n\n# Spelling dictionary name. Available dictionaries: none. To make it working\n# install python-enchant package.\nspelling-dict=\n\n# List of comma separated words that should not be checked.\nspelling-ignore-words=\n\n# A path to a file that contains private dictionary; one word per line.\nspelling-private-dict-file=\n\n# Tells whether to store unknown words to indicated private dictionary in\n# --spelling-private-dict-file option instead of raising a message.\nspelling-store-unknown-words=no\n\n\n[MISCELLANEOUS]\n\n# List of note tags to take in consideration, separated by a comma.\nnotes=FIXME,XXX,TODO\n\n\n[BASIC]\n\n# List of builtins function names that should not be used, separated by a comma\nbad-functions=map,filter,input\n\n# Good variable names which should always be accepted, separated by a comma\ngood-names=i,j,k,ex,Run,_\n\n# Bad variable names which should always be refused, separated by a comma\nbad-names=foo,bar,baz,toto,tutu,tata\n\n# Colon-delimited sets of names that determine each other's naming style when\n# the name regexes allow several styles.\nname-group=\n\n# Include a hint for the correct naming format with invalid-name\ninclude-naming-hint=no\n\n# Regular expression matching correct function names\nfunction-rgx=[a-z_][a-z0-9_]{2,30}$\n\n# Naming hint for function names\nfunction-name-hint=[a-z_][a-z0-9_]{2,30}$\n\n# Regular expression matching correct variable names\nvariable-rgx=[a-z_][a-z0-9_]{2,30}$\n\n# Naming hint for variable names\nvariable-name-hint=[a-z_][a-z0-9_]{2,30}$\n\n# Regular expression matching correct constant names\nconst-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$\n\n# Naming hint for constant names\nconst-name-hint=(([A-Z_][A-Z0-9_]*)|(__.*__))$\n\n# Regular expression matching correct attribute names\nattr-rgx=[a-z_][a-z0-9_]{2,30}$\n\n# Naming hint for attribute names\nattr-name-hint=[a-z_][a-z0-9_]{2,30}$\n\n# Regular expression matching correct argument names\nargument-rgx=[a-z_][a-z0-9_]{2,30}$\n\n# Naming hint for argument names\nargument-name-hint=[a-z_][a-z0-9_]{2,30}$\n\n# Regular expression matching correct class attribute names\nclass-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$\n\n# Naming hint for class attribute names\nclass-attribute-name-hint=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$\n\n# Regular expression matching correct inline iteration names\ninlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$\n\n# Naming hint for inline iteration names\ninlinevar-name-hint=[A-Za-z_][A-Za-z0-9_]*$\n\n# Regular expression matching correct class names\nclass-rgx=[A-Z_][a-zA-Z0-9]+$\n\n# Naming hint for class names\nclass-name-hint=[A-Z_][a-zA-Z0-9]+$\n\n# Regular expression matching correct module names\nmodule-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$\n\n# Naming hint for module names\nmodule-name-hint=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$\n\n# Regular expression matching correct method names\nmethod-rgx=[a-z_][a-z0-9_]{2,30}$\n\n# Naming hint for method names\nmethod-name-hint=[a-z_][a-z0-9_]{2,30}$\n\n# Regular expression which should only match function or class names that do\n# not require a docstring.\nno-docstring-rgx=^_\n\n# Minimum line length for functions/classes that require docstrings, shorter\n# ones are exempt.\ndocstring-min-length=-1\n\n\n[ELIF]\n\n# Maximum number of nested blocks for function / method body\nmax-nested-blocks=5\n\n\n[IMPORTS]\n\n# Deprecated modules which should not be used, separated by a comma\ndeprecated-modules=regsub,TERMIOS,Bastion,rexec\n\n# Create a graph of every (i.e. internal and external) dependencies in the\n# given file (report RP0402 must not be disabled)\nimport-graph=\n\n# Create a graph of external dependencies in the given file (report RP0402 must\n# not be disabled)\next-import-graph=\n\n# Create a graph of internal dependencies in the given file (report RP0402 must\n# not be disabled)\nint-import-graph=\n\n\n[DESIGN]\n\n# Maximum number of arguments for function / method\nmax-args=5\n\n# Argument names that match this expression will be ignored. Default to name\n# with leading underscore\nignored-argument-names=_.*\n\n# Maximum number of locals for function / method body\nmax-locals=15\n\n# Maximum number of return / yield for function / method body\nmax-returns=6\n\n# Maximum number of branch for function / method body\nmax-branches=12\n\n# Maximum number of statements in function / method body\nmax-statements=50\n\n# Maximum number of parents for a class (see R0901).\nmax-parents=7\n\n# Maximum number of attributes for a class (see R0902).\nmax-attributes=7\n\n# Minimum number of public methods for a class (see R0903).\nmin-public-methods=2\n\n# Maximum number of public methods for a class (see R0904).\nmax-public-methods=20\n\n# Maximum number of boolean expressions in a if statement\nmax-bool-expr=5\n\n\n[CLASSES]\n\n# List of method names used to declare (i.e. assign) instance attributes.\ndefining-attr-methods=__init__,__new__,setUp\n\n# List of valid names for the first argument in a class method.\nvalid-classmethod-first-arg=cls\n\n# List of valid names for the first argument in a metaclass class method.\nvalid-metaclass-classmethod-first-arg=mcs\n\n# List of member names, which should be excluded from the protected access\n# warning.\nexclude-protected=_asdict,_fields,_replace,_source,_make\n\n\n[EXCEPTIONS]\n\n# Exceptions that will emit a warning when being caught. Defaults to\n# \"Exception\"\novergeneral-exceptions=Exception\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 18.44,
          "content": "COPYING -- Describes the terms under which sqlmap is distributed. A copy\nof the GNU General Public License (GPL) is appended to this file.\n\nsqlmap is (C) 2006-2025 Bernardo Damele Assumpcao Guimaraes, Miroslav Stampar.\n\nThis program is free software; you may redistribute and/or modify it under\nthe terms of the GNU General Public License as published by the Free\nSoftware Foundation; Version 2 (or later) with the clarifications and\nexceptions described below. This guarantees your right to use, modify, and\nredistribute this software under certain conditions. If you wish to embed\nsqlmap technology into proprietary software, we sell alternative licenses\n(contact sales@sqlmap.org).\n\nNote that the GPL places important restrictions on \"derived works\", yet it\ndoes not provide a detailed definition of that term. To avoid\nmisunderstandings, we interpret that term as broadly as copyright law\nallows. For example, we consider an application to constitute a \"derived\nwork\" for the purpose of this license if it does any of the following:\n* Integrates source code from sqlmap.\n* Reads or includes sqlmap copyrighted data files, such as xml/queries.xml\n* Executes sqlmap and parses the results (as opposed to typical shell or\n  execution-menu apps, which simply display raw sqlmap output and so are\n  not derivative works).\n* Integrates/includes/aggregates sqlmap into a proprietary executable\n  installer, such as those produced by InstallShield.\n* Links to a library or executes a program that does any of the above\n\nThe term \"sqlmap\" should be taken to also include any portions or derived\nworks of sqlmap. This list is not exclusive, but is meant to clarify our\ninterpretation of derived works with some common examples. Our\ninterpretation applies only to sqlmap - we do not speak for other people's\nGPL works.\n\nThis license does not apply to the third-party components. More details can\nbe found inside the file 'doc/THIRD-PARTY.md'.\n\nIf you have any questions about the GPL licensing restrictions on using\nsqlmap in non-GPL works, we would be happy to help. As mentioned above,\nwe also offer alternative license to integrate sqlmap into proprietary\napplications and appliances.\n\nIf you received these files with a written license agreement or contract\nstating terms other than the terms above, then that alternative license\nagreement takes precedence over these comments.\n\nSource is provided to this software because we believe users have a right\nto know exactly what a program is going to do before they run it.\n\nSource code also allows you to fix bugs and add new features. You are\nhighly encouraged to send your changes to dev@sqlmap.org for possible\nincorporation into the main distribution. By sending these changes to the\nsqlmap developers or via Git pull request, checking them into the sqlmap\nsource code repository, it is understood (unless you specify otherwise)\nthat you are offering the sqlmap project the unlimited, non-exclusive\nright to reuse, modify, and relicense the code. sqlmap will always be\navailable Open Source, but this is important because the inability to\nrelicense code has caused devastating problems for other Free Software\nprojects (such as KDE and NASM). If you wish to specify special license\nconditions of your contributions, just say so when you send them.\n\nThis program is distributed in the hope that it will be useful, but\nWITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\nGeneral Public License v2.0 for more details at\nhttp://www.gnu.org/licenses/gpl-2.0.html, or below\n\n****************************************************************************\n\n                    GNU GENERAL PUBLIC LICENSE\n                       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.,\n 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Lesser General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n                            NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n                     END OF TERMS AND CONDITIONS\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.28,
          "content": "# sqlmap ![](https://i.imgur.com/fe85aVR.png)\n\n[![.github/workflows/tests.yml](https://github.com/sqlmapproject/sqlmap/actions/workflows/tests.yml/badge.svg)](https://github.com/sqlmapproject/sqlmap/actions/workflows/tests.yml) [![Python 2.6|2.7|3.x](https://img.shields.io/badge/python-2.6|2.7|3.x-yellow.svg)](https://www.python.org/) [![License](https://img.shields.io/badge/license-GPLv2-red.svg)](https://raw.githubusercontent.com/sqlmapproject/sqlmap/master/LICENSE) [![Twitter](https://img.shields.io/badge/twitter-@sqlmap-blue.svg)](https://twitter.com/sqlmap)\n\nsqlmap is an open source penetration testing tool that automates the process of detecting and exploiting SQL injection flaws and taking over of database servers. It comes with a powerful detection engine, many niche features for the ultimate penetration tester, and a broad range of switches including database fingerprinting, over data fetching from the database, accessing the underlying file system, and executing commands on the operating system via out-of-band connections.\n\nScreenshots\n----\n\n![Screenshot](https://raw.github.com/wiki/sqlmapproject/sqlmap/images/sqlmap_screenshot.png)\n\nYou can visit the [collection of screenshots](https://github.com/sqlmapproject/sqlmap/wiki/Screenshots) demonstrating some of the features on the wiki.\n\nInstallation\n----\n\nYou can download the latest tarball by clicking [here](https://github.com/sqlmapproject/sqlmap/tarball/master) or latest zipball by clicking [here](https://github.com/sqlmapproject/sqlmap/zipball/master).\n\nPreferably, you can download sqlmap by cloning the [Git](https://github.com/sqlmapproject/sqlmap) repository:\n\n    git clone --depth 1 https://github.com/sqlmapproject/sqlmap.git sqlmap-dev\n\nsqlmap works out of the box with [Python](https://www.python.org/download/) version **2.6**, **2.7** and **3.x** on any platform.\n\nUsage\n----\n\nTo get a list of basic options and switches use:\n\n    python sqlmap.py -h\n\nTo get a list of all options and switches use:\n\n    python sqlmap.py -hh\n\nYou can find a sample run [here](https://asciinema.org/a/46601).\nTo get an overview of sqlmap capabilities, a list of supported features, and a description of all options and switches, along with examples, you are advised to consult the [user's manual](https://github.com/sqlmapproject/sqlmap/wiki/Usage).\n\nLinks\n----\n\n* Homepage: https://sqlmap.org\n* Download: [.tar.gz](https://github.com/sqlmapproject/sqlmap/tarball/master) or [.zip](https://github.com/sqlmapproject/sqlmap/zipball/master)\n* Commits RSS feed: https://github.com/sqlmapproject/sqlmap/commits/master.atom\n* Issue tracker: https://github.com/sqlmapproject/sqlmap/issues\n* User's manual: https://github.com/sqlmapproject/sqlmap/wiki\n* Frequently Asked Questions (FAQ): https://github.com/sqlmapproject/sqlmap/wiki/FAQ\n* X: [@sqlmap](https://twitter.com/sqlmap)\n* Demos: [https://www.youtube.com/user/inquisb/videos](https://www.youtube.com/user/inquisb/videos)\n* Screenshots: https://github.com/sqlmapproject/sqlmap/wiki/Screenshots\n\nTranslations\n----\n\n* [Bulgarian](https://github.com/sqlmapproject/sqlmap/blob/master/doc/translations/README-bg-BG.md)\n* [Chinese](https://github.com/sqlmapproject/sqlmap/blob/master/doc/translations/README-zh-CN.md)\n* [Croatian](https://github.com/sqlmapproject/sqlmap/blob/master/doc/translations/README-hr-HR.md)\n* [Dutch](https://github.com/sqlmapproject/sqlmap/blob/master/doc/translations/README-nl-NL.md)\n* [French](https://github.com/sqlmapproject/sqlmap/blob/master/doc/translations/README-fr-FR.md)\n* [Georgian](https://github.com/sqlmapproject/sqlmap/blob/master/doc/translations/README-ka-GE.md)\n* [German](https://github.com/sqlmapproject/sqlmap/blob/master/doc/translations/README-de-DE.md)\n* [Greek](https://github.com/sqlmapproject/sqlmap/blob/master/doc/translations/README-gr-GR.md)\n* [Hindi](https://github.com/sqlmapproject/sqlmap/blob/master/doc/translations/README-in-HI.md)\n* [Indonesian](https://github.com/sqlmapproject/sqlmap/blob/master/doc/translations/README-id-ID.md)\n* [Italian](https://github.com/sqlmapproject/sqlmap/blob/master/doc/translations/README-it-IT.md)\n* [Japanese](https://github.com/sqlmapproject/sqlmap/blob/master/doc/translations/README-ja-JP.md)\n* [Korean](https://github.com/sqlmapproject/sqlmap/blob/master/doc/translations/README-ko-KR.md)\n* [Kurdish (Central)](https://github.com/sqlmapproject/sqlmap/blob/master/doc/translations/README-ckb-KU.md)\n* [Persian](https://github.com/sqlmapproject/sqlmap/blob/master/doc/translations/README-fa-IR.md)\n* [Polish](https://github.com/sqlmapproject/sqlmap/blob/master/doc/translations/README-pl-PL.md)\n* [Portuguese](https://github.com/sqlmapproject/sqlmap/blob/master/doc/translations/README-pt-BR.md)\n* [Russian](https://github.com/sqlmapproject/sqlmap/blob/master/doc/translations/README-ru-RU.md)\n* [Serbian](https://github.com/sqlmapproject/sqlmap/blob/master/doc/translations/README-rs-RS.md)\n* [Slovak](https://github.com/sqlmapproject/sqlmap/blob/master/doc/translations/README-sk-SK.md)\n* [Spanish](https://github.com/sqlmapproject/sqlmap/blob/master/doc/translations/README-es-MX.md)\n* [Turkish](https://github.com/sqlmapproject/sqlmap/blob/master/doc/translations/README-tr-TR.md)\n* [Ukrainian](https://github.com/sqlmapproject/sqlmap/blob/master/doc/translations/README-uk-UA.md)\n* [Vietnamese](https://github.com/sqlmapproject/sqlmap/blob/master/doc/translations/README-vi-VN.md)\n"
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "extra",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "sqlmap.conf",
          "type": "blob",
          "size": 21.92,
          "content": "# At least one of these options has to be specified to set the source to\n# get target URLs from.\n[Target]\n\n# Target URL.\n# Example: http://192.168.1.121/sqlmap/mysql/get_int.php?id=1&cat=2\nurl =\n\n# Direct connection to the database.\n# Examples:\n#   mysql://USER:PASSWORD@DBMS_IP:DBMS_PORT/DATABASE_NAME\n#   oracle://USER:PASSWORD@DBMS_IP:DBMS_PORT/DATABASE_SID\ndirect = \n\n# Parse targets from Burp or WebScarab logs\n# Valid: Burp proxy (http://portswigger.net/suite/) requests log file path\n# or WebScarab proxy (http://www.owasp.org/index.php/Category:OWASP_WebScarab_Project)\n# 'conversations/' folder path\nlogFile = \n\n# Scan multiple targets enlisted in a given textual file\nbulkFile =\n\n# Load HTTP request from a file\n# Example (file content): POST /login.jsp HTTP/1.1\\nHost: example.com\\nUser-Agent: Mozilla/4.0\\n\\nuserid=joe&password=guessme\nrequestFile = \n\n# Rather than providing a target URL, let Google return target\n# hosts as result of your Google dork expression. For a list of Google\n# dorks see Google Hacking Database at\n# https://www.exploit-db.com/google-hacking-database\n# Example: +ext:php +inurl:\"&id=\" +intext:\"powered by \"\ngoogleDork = \n\n\n# These options can be used to specify how to connect to the target URL.\n[Request]\n\n# Force usage of given HTTP method (e.g. PUT).\nmethod = \n\n# Data string to be sent through POST (e.g. \"id=1\").\ndata = \n\n# Character used for splitting parameter values (e.g. &).\nparamDel = \n\n# HTTP Cookie header value (e.g. \"PHPSESSID=a8d127e..\").\ncookie = \n\n# Character used for splitting cookie values (e.g. ;).\ncookieDel = \n\n# Live cookies file used for loading up-to-date values.\nliveCookies = \n\n# File containing cookies in Netscape/wget format.\nloadCookies = \n\n# Ignore Set-Cookie header from response.\n# Valid: True or False\ndropSetCookie = False\n\n# HTTP User-Agent header value. Useful to fake the HTTP User-Agent header value\n# at each HTTP request.\n# sqlmap will also test for SQL injection on the HTTP User-Agent value.\nagent =\n\n# Imitate smartphone through HTTP User-Agent header.\n# Valid: True or False\nmobile = False\n\n# Use randomly selected HTTP User-Agent header value.\n# Valid: True or False\nrandomAgent = False\n\n# HTTP Host header value.\nhost = \n\n# HTTP Referer header. Useful to fake the HTTP Referer header value at\n# each HTTP request.\nreferer = \n\n# Extra HTTP headers\nheaders = Accept: text/xml,application/xml,application/xhtml+xml,text/html;q=0.9,text/plain;q=0.8,image/png,*/*;q=0.5\n Accept-Language: en-us,en;q=0.5\n Accept-Charset: ISO-8859-15,utf-8;q=0.7,*;q=0.7\n\n# HTTP Authentication type. Useful only if the target URL requires\n# HTTP Basic, Digest, Bearer or NTLM authentication and you have such data.\n# Valid: Basic, Digest, Bearer, NTLM or PKI\nauthType = \n\n# HTTP authentication credentials. Useful only if the target URL requires\n# HTTP Basic, Digest, Token or NTLM authentication and you have such data.\n# Syntax: username:password\nauthCred = \n\n# HTTP Authentication PEM private/cert key file. Useful only if the target URL requires\n# PKI authentication and you have such data.\n# Syntax: key_file\nauthFile = \n\n# Abort on (problematic) HTTP error code (e.g. 401).\n# Valid: string\nabortCode =\n\n# Ignore (problematic) HTTP error code (e.g. 401).\n# Valid: string\nignoreCode =\n\n# Ignore system default proxy settings.\n# Valid: True or False\nignoreProxy = False\n\n# Ignore redirection attempts.\n# Valid: True or False\nignoreRedirects = False\n\n# Ignore connection timeouts.\n# Valid: True or False\nignoreTimeouts = False\n\n# Use a proxy to connect to the target URL.\n# Syntax: (http|https|socks4|socks5)://address:port\nproxy = \n\n# Proxy authentication credentials. Useful only if the proxy requires\n# Basic or Digest authentication and you have such data.\n# Syntax: username:password\nproxyCred =\n\n# Load proxy list from a file\nproxyFile =\n\n# Use Tor anonymity network.\n# Valid: True or False\ntor = False\n\n# Set Tor proxy port other than default.\n# Valid: integer\n# torPort =\n\n# Set Tor proxy type.\n# Valid: HTTP, SOCKS4, SOCKS5\ntorType = SOCKS5\n\n# Check to see if Tor is used properly.\n# Valid: True or False\ncheckTor = False\n\n# Delay in seconds between each HTTP request.\n# Valid: float\n# Default: 0\ndelay = 0\n\n# Seconds to wait before timeout connection.\n# Valid: float\n# Default: 30\ntimeout = 30\n\n# Maximum number of retries when the HTTP connection timeouts.\n# Valid: integer\n# Default: 3\nretries = 3\n\n# Retry request on regexp matching content.\nretryOn =\n\n# Randomly change value for the given parameter.\nrParam = \n\n# URL address to visit frequently during testing.\n# Example: http://192.168.1.121/index.html\nsafeUrl = \n\n# POST data to send to a safe URL.\n# Example: username=admin&password=passw0rd!\nsafePost = \n\n# Load safe HTTP request from a file.\nsafeReqFile = \n\n# Regular requests between visits to a safe URL (default 0).\n# Valid: integer\n# Default: 0\nsafeFreq = 0\n\n# Skip URL encoding of payload data.\n# Valid: True or False\nskipUrlEncode = False\n\n# Parameter used to hold anti-CSRF token.\ncsrfToken = \n\n# URL address to visit to extract anti-CSRF token\ncsrfUrl = \n\n# HTTP method to use during anti-CSRF token page visit.\ncsrfMethod =\n\n# POST data to send during anti-CSRF token page visit.\ncsrfData =\n\n# Retries for anti-CSRF token retrieval.\ncsrfRetries =\n\n# Force usage of SSL/HTTPS\n# Valid: True or False\nforceSSL = False\n\n# Use HTTP chunked transfer encoded requests.\n# Valid: True or False\nchunked = False\n\n# Use HTTP parameter pollution.\n# Valid: True or False\nhpp = False\n\n# Evaluate provided Python code before the request.\n# Example: import hashlib;id2=hashlib.md5(id).hexdigest()\nevalCode = \n\n# These options can be used to optimize the performance of sqlmap.\n[Optimization]\n\n# Use all optimization options.\n# Valid: True or False\noptimize = False\n\n# Predict common queries output.\n# Valid: True or False\npredictOutput = False\n\n# Use persistent HTTP(s) connections.\nkeepAlive = False\n\n# Retrieve page length without actual HTTP response body.\n# Valid: True or False\nnullConnection = False\n\n# Maximum number of concurrent HTTP(s) requests (handled with Python threads)\n# to be used in the inference SQL injection attack.\n# Valid: integer\n# Default: 1\nthreads = 1\n\n\n# These options can be used to specify which parameters to test for,\n# provide custom injection payloads and optional tampering scripts.\n[Injection]\n\n# Testable parameter(s) comma separated. By default all GET/POST/Cookie\n# parameters and HTTP User-Agent are tested by sqlmap.\ntestParameter = \n\n# Skip testing for given parameter(s).\nskip =\n\n# Skip testing parameters that not appear to be dynamic.\n# Valid: True or False\nskipStatic = False\n\n# Regexp to exclude parameters from testing (e.g. \"ses\").\nparamExclude =\n\n# Select testable parameter(s) by place (e.g. \"POST\").\nparamFilter =\n\n# Force back-end DBMS to provided value. If this option is set, the back-end\n# DBMS identification process will be minimized as needed.\n# If not set, sqlmap will detect back-end DBMS automatically by default.\n# Valid: mssql, mysql, mysql 4, mysql 5, oracle, pgsql, sqlite, sqlite3,\n# access, firebird, maxdb, sybase\ndbms = \n\n# DBMS authentication credentials (user:password). Useful if you want to\n# run SQL statements as another user, the back-end database management\n# system is PostgreSQL or Microsoft SQL Server and the parameter is\n# vulnerable by stacked queries SQL injection or you are connecting directly\n# to the DBMS (-d switch).\n# Syntax: username:password\ndbmsCred = \n\n# Force back-end DBMS operating system to provided value. If this option is\n# set, the back-end DBMS identification process will be minimized as\n# needed.\n# If not set, sqlmap will detect back-end DBMS operating system\n# automatically by default.\n# Valid: linux, windows\nos = \n\n# Use big numbers for invalidating values.\n# Valid: True or False\ninvalidBignum = False\n\n# Use logical operations for invalidating values.\n# Valid: True or False\ninvalidLogical = False\n\n# Use random strings for invalidating values.\n# Valid: True or False\ninvalidString = False\n\n# Turn off payload casting mechanism\n# Valid: True or False\nnoCast = False\n\n# Turn off string escaping mechanism\n# Valid: True or False\nnoEscape = False\n\n# Injection payload prefix string.\nprefix = \n\n# Injection payload suffix string.\nsuffix = \n\n# Use given script(s) for tampering injection data.\ntamper = \n\n\n# These options can be used to specify how to parse and compare page\n# content from HTTP responses when using blind SQL injection technique.\n[Detection]\n\n# Level of tests to perform.\n# The higher the value is, the higher the number of HTTP(s) requests are\n# as well as the better chances to detect a tricky SQL injection.\n# Valid: Integer between 1 and 5\n# Default: 1\nlevel = 1\n\n# Risk of tests to perform.\n# Note: boolean-based blind SQL injection tests with AND are considered\n# risk 1, with OR are considered risk 3.\n# Valid: Integer between 1 and 3\n# Default: 1\nrisk = 1\n\n# String to match within the raw response when the query is evaluated to \n# True, only needed if the page content dynamically changes at each refresh.\n# Refer to the user's manual for further details.\nstring = \n\n# String to match within the raw response when the query is evaluated to \n# False, only needed if the page content dynamically changes at each refresh.\n# Refer to the user's manual for further details.\nnotString = \n\n# Regular expression to match within the raw response when the query is\n# evaluated to True, only needed if the needed if the page content\n# dynamically changes at each refresh.\n# Refer to the user's manual for further details.\n# Valid: regular expression with Python syntax\n# (http://www.python.org/doc/2.5.2/lib/re-syntax.html)\nregexp = \n\n# HTTP response code to match when the query is True.\n# Valid: Integer\n# Example: 200 (assuming any False statement returns a different response\n# code)\n# code = \n\n# Conduct thorough tests only if positive heuristic(s).\n# Valid: True or False\nsmart = False\n\n# Compare pages based only on the textual content.\n# Valid: True or False\ntextOnly = False\n\n# Compare pages based only on their titles.\n# Valid: True or False\ntitles = False\n\n\n# These options can be used to tweak testing of specific SQL injection\n# techniques.\n[Techniques]\n\n# SQL injection techniques to use.\n# Valid: a string composed by B, E, U, S, T and Q where:\n# B: Boolean-based blind SQL injection\n# E: Error-based SQL injection\n# U: UNION query SQL injection\n# S: Stacked queries SQL injection\n# T: Time-based blind SQL injection\n# Q: Inline SQL injection\n# Example: ES (means test for error-based and stacked queries SQL\n# injection types only)\n# Default: BEUSTQ (means test for all SQL injection types - recommended)\ntechnique = BEUSTQ\n\n# Seconds to delay the response from the DBMS.\n# Valid: integer\n# Default: 5\ntimeSec = 5\n\n# Range of columns to test for.\n# Valid: range of integers\n# Example: 1-10\nuCols = \n\n# Character to use for bruteforcing number of columns.\n# Valid: string\n# Example: NULL\nuChar = \n\n# Table to use in FROM part of UNION query SQL injection.\n# Valid: string\n# Example: INFORMATION_SCHEMA.COLLATIONS\nuFrom = \n\n# Column values to use for UNION query SQL injection.\n# Valid: string\n# Example: NULL,1,*,NULL\nuValues =\n\n# Domain name used for DNS exfiltration attack.\n# Valid: string\ndnsDomain =\n\n# Resulting page URL searched for second-order response.\n# Valid: string\nsecondUrl =\n\n# Load second-order HTTP request from file.\n# Valid: string\nsecondReq =\n\n\n[Fingerprint]\n\n# Perform an extensive back-end database management system fingerprint\n# based on various techniques.\n# Valid: True or False\nextensiveFp = False\n\n\n# These options can be used to enumerate the back-end database\n# management system information, structure and data contained in the\n# tables. Moreover you can run your own SQL statements.\n[Enumeration]\n\n# Retrieve everything\n# Valid: True or False\ngetAll = False\n\n# Retrieve back-end database management system banner.\n# Valid: True or False\ngetBanner = False\n\n# Retrieve back-end database management system current user.\n# Valid: True or False\ngetCurrentUser = False\n\n# Retrieve back-end database management system current database.\n# Valid: True or False\ngetCurrentDb = False\n\n# Retrieve back-end database management system server hostname.\n# Valid: True or False\ngetHostname = False\n\n# Detect if the DBMS current user is DBA.\n# Valid: True or False\nisDba = False\n\n# Enumerate back-end database management system users.\n# Valid: True or False\ngetUsers = False\n\n# Enumerate back-end database management system users password hashes.\n# Valid: True or False\ngetPasswordHashes = False\n\n# Enumerate back-end database management system users privileges.\n# Valid: True or False\ngetPrivileges = False\n\n# Enumerate back-end database management system users roles.\n# Valid: True or False\ngetRoles = False\n\n# Enumerate back-end database management system databases.\n# Valid: True or False\ngetDbs = False\n\n# Enumerate back-end database management system database tables.\n# Optional: db\n# Valid: True or False\ngetTables = False\n\n# Enumerate back-end database management system database table columns.\n# Optional: db, tbl, col\n# Valid: True or False\ngetColumns = False\n\n# Enumerate back-end database management system schema.\n# Valid: True or False\ngetSchema = False\n\n# Retrieve number of entries for table(s).\n# Valid: True or False\ngetCount = False\n\n# Dump back-end database management system database table entries.\n# Requires: tbl and/or col\n# Optional: db\n# Valid: True or False\ndumpTable = False\n\n# Dump all back-end database management system databases tables entries.\n# Valid: True or False\ndumpAll = False\n\n# Search column(s), table(s) and/or database name(s).\n# Requires: db, tbl or col\n# Valid: True or False\nsearch = False\n\n# Check for database management system database comments during enumeration.\n# Valid: True or False\ngetComments = False\n\n# Retrieve SQL statements being run on database management system.\n# Valid: True or False\ngetStatements = False\n\n# Back-end database management system database to enumerate.\ndb = \n\n# Back-end database management system database table(s) to enumerate.\ntbl = \n\n# Back-end database management system database table column(s) to enumerate.\ncol = \n\n# Back-end database management system identifiers (database(s), table(s) and column(s)) to not enumerate.\nexclude = \n\n# Pivot column name.\npivotColumn =\n\n# Use WHERE condition while table dumping (e.g. \"id=1\").\ndumpWhere = \n\n# Back-end database management system database user to enumerate.\nuser = \n\n# Exclude DBMS system databases when enumerating tables.\n# Valid: True or False\nexcludeSysDbs = False\n\n# First query output entry to retrieve\n# Valid: integer\n# Default: 0 (sqlmap will start to retrieve the table dump entries from\n# first one)\nlimitStart = 0\n\n# Last query output entry to retrieve\n# Valid: integer\n# Default: 0 (sqlmap will detect the number of table dump entries and\n# retrieve them until the last)\nlimitStop = 0\n\n# First query output word character to retrieve\n# Valid: integer\n# Default: 0 (sqlmap will enumerate the query output from the first\n# character)\nfirstChar = 0\n\n# Last query output word character to retrieve\n# Valid: integer\n# Default: 0 (sqlmap will enumerate the query output until the last\n# character)\nlastChar = 0\n\n# SQL statement to be executed.\n# Example: SELECT 'foo', 'bar'\nsqlQuery = \n\n# Prompt for an interactive SQL shell.\n# Valid: True or False\nsqlShell = False\n\n# Execute SQL statements from given file(s).\nsqlFile = \n\n\n# These options can be used to run brute force checks.\n[Brute force]\n\n# Check existence of common tables.\n# Valid: True or False\ncommonTables = False\n\n# Check existence of common columns.\n# Valid: True or False\ncommonColumns = False\n\n# Check existence of common files.\n# Valid: True or False\ncommonFiles = False\n\n\n# These options can be used to create custom user-defined functions.\n[User-defined function]\n\n# Inject custom user-defined functions\n# Valid: True or False\nudfInject = False\n\n# Local path of the shared library\nshLib = \n\n\n# These options can be used to access the back-end database management\n# system underlying file system.\n[File system]\n\n# Read a specific file from the back-end DBMS underlying file system.\n# Examples: /etc/passwd or C:\\boot.ini\nfileRead = \n\n# Write a local file to a specific path on the back-end DBMS underlying\n# file system.\n# Example: /tmp/sqlmap.txt or C:\\WINNT\\Temp\\sqlmap.txt\nfileWrite = \n\n# Back-end DBMS absolute filepath to write the file to.\nfileDest = \n\n\n# These options can be used to access the back-end database management\n# system underlying operating system.\n[Takeover]\n\n# Execute an operating system command.\n# Valid: operating system command\nosCmd = \n\n# Prompt for an interactive operating system shell.\n# Valid: True or False\nosShell = False\n\n# Prompt for an out-of-band shell, Meterpreter or VNC.\n# Valid: True or False\nosPwn = False\n\n# One click prompt for an out-of-band shell, Meterpreter or VNC.\n# Valid: True or False\nosSmb = False\n\n# Microsoft SQL Server 2000 and 2005 'sp_replwritetovarbin' stored\n# procedure heap-based buffer overflow (MS09-004) exploitation.\n# Valid: True or False\nosBof = False\n\n# Database process' user privilege escalation.\n# Note: Use in conjunction with osPwn, osSmb or osBof. It will force the\n# payload to be Meterpreter.\nprivEsc = False\n\n# Local path where Metasploit Framework is installed.\n# Valid: file system path\nmsfPath = \n\n# Remote absolute path of temporary files directory.\n# Valid: absolute file system path\ntmpPath = \n\n\n# These options can be used to access the back-end database management\n# system Windows registry.\n[Windows]\n\n# Read a Windows registry key value.\n# Valid: True or False\nregRead = False\n\n# Write a Windows registry key value data.\n# Valid: True or False\nregAdd = False\n\n# Delete a Windows registry key value.\n# Valid: True or False\nregDel = False\n\n# Windows registry key.\nregKey = \n\n# Windows registry key value.\nregVal = \n\n# Windows registry key value data.\nregData = \n\n# Windows registry key value type.\nregType = \n\n\n# These options can be used to set some general working parameters.\n[General]\n\n# Load session from a stored (.sqlite) file\n# Example: output/www.target.com/session.sqlite\nsessionFile = \n\n# Log all HTTP traffic into a textual file.\ntrafficFile = \n\n# Abort data retrieval on empty results.\nabortOnEmpty = False\n\n# Set predefined answers (e.g. \"quit=N,follow=N\").\nanswers =\n\n# Parameter(s) containing Base64 encoded data\nbase64Parameter =\n\n# Use URL and filename safe Base64 alphabet (Reference: https://en.wikipedia.org/wiki/Base64#URL_applications).\n# Valid: True or False\nbase64Safe = False\n\n# Never ask for user input, use the default behaviour.\n# Valid: True or False\nbatch = False\n\n# Result fields having binary values (e.g. \"digest\").\nbinaryFields =\n\n# Check Internet connection before assessing the target.\ncheckInternet = False\n\n# Clean up the DBMS from sqlmap specific UDF and tables.\n# Valid: True or False\ncleanup = False\n\n# Crawl the website starting from the target URL.\n# Valid: integer\n# Default: 0\ncrawlDepth = 0\n\n# Regexp to exclude pages from crawling (e.g. \"logout\").\ncrawlExclude =\n\n# Delimiting character used in CSV output.\n# Default: ,\ncsvDel = ,\n\n# Store dumped data to a custom file.\ndumpFile =\n\n# Format of dumped data\n# Valid: CSV, HTML or SQLITE\ndumpFormat = CSV\n\n# Force character encoding used for data retrieval.\nencoding = \n\n# Retrieve each query output length and calculate the estimated time of\n# arrival in real time.\n# Valid: True or False\neta = False\n\n# Flush session files for current target.\n# Valid: True or False\nflushSession = False\n\n# Parse and test forms on target URL.\n# Valid: True or False\nforms = False\n\n# Ignore query results stored in session file.\n# Valid: True or False\nfreshQueries = False\n\n# Use Google dork results from specified page number.\n# Valid: integer\n# Default: 1\ngooglePage = 1\n\n# Use hex conversion during data retrieval.\n# Valid: True or False\nhexConvert = False\n\n# Custom output directory path.\noutputDir =\n\n# Parse and display DBMS error messages from responses.\n# Valid: True or False\nparseErrors = False\n\n# Use given script(s) for preprocessing of request.\npreprocess =\n\n# Use given script(s) for postprocessing of response data.\npostprocess =\n\n# Redump entries having unknown character marker (?).\n# Valid: True or False\nrepair = False\n\n# Regular expression for filtering targets from provided Burp.\n# or WebScarab proxy log.\n# Example: (google|yahoo)\nscope = \n\n# Skip heuristic detection of SQLi/XSS vulnerabilities.\n# Valid: True or False\nskipHeuristics = False\n\n# Skip heuristic detection of WAF/IPS protection.\n# Valid: True or False\nskipWaf = False\n\n# Prefix used for temporary tables.\n# Default: sqlmap\ntablePrefix = sqlmap\n\n# Select tests by payloads and/or titles (e.g. ROW).\ntestFilter =\n\n# Skip tests by payloads and/or titles (e.g. BENCHMARK).\ntestSkip =\n\n# Run with a time limit in seconds (e.g. 3600).\ntimeLimit =\n\n# Disable escaping of DBMS identifiers (e.g. \"user\").\nunsafeNaming = False\n\n# Web server document root directory (e.g. \"/var/www\").\nwebRoot =\n\n\n[Miscellaneous]\n\n# Run host OS command(s) when SQL injection is found.\nalert =\n\n# Beep on question and/or when SQL injection is found.\n# Valid: True or False\nbeep = False\n\n# Offline WAF/IPS payload detection testing.\n# Valid: True or False\ncheckPayload = False\n\n# Check for missing (optional) sqlmap dependencies.\n# Valid: True or False\ndependencies = False\n\n# Disable console output coloring.\n# Valid: True or False\ndisableColoring = False\n\n# Disable hash analysis on table dumps.\n# Valid: True or False\ndisableHashing = False\n\n# Display list of available tamper scripts.\n# Valid: True or False\nlistTampers = False\n\n# Disable logging to a file.\n# Valid: True or False\nnoLogging = False\n\n# Work in offline mode (only use session data)\n# Valid: True or False\noffline = False\n\n# Location of CSV results file in multiple targets mode.\nresultsFile =\n\n# Local directory for storing temporary files.\ntmpDir =\n\n# Adjust options for unstable connections.\n# Valid: True or False\nunstable = False\n\n# Update sqlmap.\n# Valid: True or False\nupdateAll = False\n\n# Simple wizard interface for beginner users.\n# Valid: True or False\nwizard = False\n\n# Verbosity level.\n# Valid: integer between 0 and 6\n# 0: Show only error and critical messages\n# 1: Show also warning and info messages\n# 2: Show also debug messages\n# 3: Show also payloads injected\n# 4: Show also HTTP requests\n# 5: Show also HTTP responses' headers\n# 6: Show also HTTP responses' page content\n# Default: 1\nverbose = 1\n"
        },
        {
          "name": "sqlmap.py",
          "type": "blob",
          "size": 25.13,
          "content": "#!/usr/bin/env python\n\n\"\"\"\nCopyright (c) 2006-2025 sqlmap developers (https://sqlmap.org/)\nSee the file 'LICENSE' for copying permission\n\"\"\"\n\nfrom __future__ import print_function\n\ntry:\n    import sys\n\n    sys.dont_write_bytecode = True\n\n    try:\n        __import__(\"lib.utils.versioncheck\")  # this has to be the first non-standard import\n    except ImportError:\n        sys.exit(\"[!] wrong installation detected (missing modules). Visit 'https://github.com/sqlmapproject/sqlmap/#installation' for further details\")\n\n    import bdb\n    import glob\n    import inspect\n    import json\n    import logging\n    import os\n    import re\n    import shutil\n    import sys\n    import tempfile\n    import threading\n    import time\n    import traceback\n    import warnings\n\n    if \"--deprecations\" not in sys.argv:\n        warnings.filterwarnings(action=\"ignore\", category=DeprecationWarning)\n    else:\n        warnings.resetwarnings()\n        warnings.filterwarnings(action=\"ignore\", message=\"'crypt'\", category=DeprecationWarning)\n        warnings.simplefilter(\"ignore\", category=ImportWarning)\n        if sys.version_info >= (3, 0):\n            warnings.simplefilter(\"ignore\", category=ResourceWarning)\n\n    warnings.filterwarnings(action=\"ignore\", message=\"Python 2 is no longer supported\")\n    warnings.filterwarnings(action=\"ignore\", message=\".*was already imported\", category=UserWarning)\n    warnings.filterwarnings(action=\"ignore\", message=\".*using a very old release\", category=UserWarning)\n    warnings.filterwarnings(action=\"ignore\", message=\".*default buffer size will be used\", category=RuntimeWarning)\n    warnings.filterwarnings(action=\"ignore\", category=UserWarning, module=\"psycopg2\")\n\n    from lib.core.data import logger\n\n    from lib.core.common import banner\n    from lib.core.common import checkPipedInput\n    from lib.core.common import checkSums\n    from lib.core.common import createGithubIssue\n    from lib.core.common import dataToStdout\n    from lib.core.common import extractRegexResult\n    from lib.core.common import filterNone\n    from lib.core.common import getDaysFromLastUpdate\n    from lib.core.common import getFileItems\n    from lib.core.common import getSafeExString\n    from lib.core.common import maskSensitiveData\n    from lib.core.common import openFile\n    from lib.core.common import setPaths\n    from lib.core.common import weAreFrozen\n    from lib.core.convert import getUnicode\n    from lib.core.common import setColor\n    from lib.core.common import unhandledExceptionMessage\n    from lib.core.compat import LooseVersion\n    from lib.core.compat import xrange\n    from lib.core.data import cmdLineOptions\n    from lib.core.data import conf\n    from lib.core.data import kb\n    from lib.core.datatype import OrderedSet\n    from lib.core.enums import MKSTEMP_PREFIX\n    from lib.core.exception import SqlmapBaseException\n    from lib.core.exception import SqlmapShellQuitException\n    from lib.core.exception import SqlmapSilentQuitException\n    from lib.core.exception import SqlmapUserQuitException\n    from lib.core.option import init\n    from lib.core.option import initOptions\n    from lib.core.patch import dirtyPatches\n    from lib.core.patch import resolveCrossReferences\n    from lib.core.settings import GIT_PAGE\n    from lib.core.settings import IS_WIN\n    from lib.core.settings import LAST_UPDATE_NAGGING_DAYS\n    from lib.core.settings import LEGAL_DISCLAIMER\n    from lib.core.settings import THREAD_FINALIZATION_TIMEOUT\n    from lib.core.settings import UNICODE_ENCODING\n    from lib.core.settings import VERSION\n    from lib.parse.cmdline import cmdLineParser\n    from lib.utils.crawler import crawl\nexcept KeyboardInterrupt:\n    errMsg = \"user aborted\"\n\n    if \"logger\" in globals():\n        logger.critical(errMsg)\n        raise SystemExit\n    else:\n        import time\n        sys.exit(\"\\r[%s] [CRITICAL] %s\" % (time.strftime(\"%X\"), errMsg))\n\ndef modulePath():\n    \"\"\"\n    This will get us the program's directory, even if we are frozen\n    using py2exe\n    \"\"\"\n\n    try:\n        _ = sys.executable if weAreFrozen() else __file__\n    except NameError:\n        _ = inspect.getsourcefile(modulePath)\n\n    return getUnicode(os.path.dirname(os.path.realpath(_)), encoding=sys.getfilesystemencoding() or UNICODE_ENCODING)\n\ndef checkEnvironment():\n    try:\n        os.path.isdir(modulePath())\n    except UnicodeEncodeError:\n        errMsg = \"your system does not properly handle non-ASCII paths. \"\n        errMsg += \"Please move the sqlmap's directory to the other location\"\n        logger.critical(errMsg)\n        raise SystemExit\n\n    if LooseVersion(VERSION) < LooseVersion(\"1.0\"):\n        errMsg = \"your runtime environment (e.g. PYTHONPATH) is \"\n        errMsg += \"broken. Please make sure that you are not running \"\n        errMsg += \"newer versions of sqlmap with runtime scripts for older \"\n        errMsg += \"versions\"\n        logger.critical(errMsg)\n        raise SystemExit\n\n    # Patch for pip (import) environment\n    if \"sqlmap.sqlmap\" in sys.modules:\n        for _ in (\"cmdLineOptions\", \"conf\", \"kb\"):\n            globals()[_] = getattr(sys.modules[\"lib.core.data\"], _)\n\n        for _ in (\"SqlmapBaseException\", \"SqlmapShellQuitException\", \"SqlmapSilentQuitException\", \"SqlmapUserQuitException\"):\n            globals()[_] = getattr(sys.modules[\"lib.core.exception\"], _)\n\ndef main():\n    \"\"\"\n    Main function of sqlmap when running from command line.\n    \"\"\"\n\n    try:\n        dirtyPatches()\n        resolveCrossReferences()\n        checkEnvironment()\n        setPaths(modulePath())\n        banner()\n\n        # Store original command line options for possible later restoration\n        args = cmdLineParser()\n        cmdLineOptions.update(args.__dict__ if hasattr(args, \"__dict__\") else args)\n        initOptions(cmdLineOptions)\n\n        if checkPipedInput():\n            conf.batch = True\n\n        if conf.get(\"api\"):\n            # heavy imports\n            from lib.utils.api import StdDbOut\n            from lib.utils.api import setRestAPILog\n\n            # Overwrite system standard output and standard error to write\n            # to an IPC database\n            sys.stdout = StdDbOut(conf.taskid, messagetype=\"stdout\")\n            sys.stderr = StdDbOut(conf.taskid, messagetype=\"stderr\")\n\n            setRestAPILog()\n\n        conf.showTime = True\n        dataToStdout(\"[!] legal disclaimer: %s\\n\\n\" % LEGAL_DISCLAIMER, forceOutput=True)\n        dataToStdout(\"[*] starting @ %s\\n\\n\" % time.strftime(\"%X /%Y-%m-%d/\"), forceOutput=True)\n\n        init()\n\n        if not conf.updateAll:\n            # Postponed imports (faster start)\n            if conf.smokeTest:\n                from lib.core.testing import smokeTest\n                os._exitcode = 1 - (smokeTest() or 0)\n            elif conf.vulnTest:\n                from lib.core.testing import vulnTest\n                os._exitcode = 1 - (vulnTest() or 0)\n            else:\n                from lib.controller.controller import start\n                if conf.profile:\n                    from lib.core.profiling import profile\n                    globals()[\"start\"] = start\n                    profile()\n                else:\n                    try:\n                        if conf.crawlDepth and conf.bulkFile:\n                            targets = getFileItems(conf.bulkFile)\n\n                            for i in xrange(len(targets)):\n                                target = None\n\n                                try:\n                                    kb.targets = OrderedSet()\n                                    target = targets[i]\n\n                                    if not re.search(r\"(?i)\\Ahttp[s]*://\", target):\n                                        target = \"http://%s\" % target\n\n                                    infoMsg = \"starting crawler for target URL '%s' (%d/%d)\" % (target, i + 1, len(targets))\n                                    logger.info(infoMsg)\n\n                                    crawl(target)\n                                except Exception as ex:\n                                    if target and not isinstance(ex, SqlmapUserQuitException):\n                                        errMsg = \"problem occurred while crawling '%s' ('%s')\" % (target, getSafeExString(ex))\n                                        logger.error(errMsg)\n                                    else:\n                                        raise\n                                else:\n                                    if kb.targets:\n                                        start()\n                        else:\n                            start()\n                    except Exception as ex:\n                        os._exitcode = 1\n\n                        if \"can't start new thread\" in getSafeExString(ex):\n                            errMsg = \"unable to start new threads. Please check OS (u)limits\"\n                            logger.critical(errMsg)\n                            raise SystemExit\n                        else:\n                            raise\n\n    except SqlmapUserQuitException:\n        if not conf.batch:\n            errMsg = \"user quit\"\n            logger.error(errMsg)\n\n    except (SqlmapSilentQuitException, bdb.BdbQuit):\n        pass\n\n    except SqlmapShellQuitException:\n        cmdLineOptions.sqlmapShell = False\n\n    except SqlmapBaseException as ex:\n        errMsg = getSafeExString(ex)\n        logger.critical(errMsg)\n\n        os._exitcode = 1\n\n        raise SystemExit\n\n    except KeyboardInterrupt:\n        try:\n            print()\n        except IOError:\n            pass\n\n    except EOFError:\n        print()\n\n        errMsg = \"exit\"\n        logger.error(errMsg)\n\n    except SystemExit as ex:\n        os._exitcode = ex.code or 0\n\n    except:\n        print()\n        errMsg = unhandledExceptionMessage()\n        excMsg = traceback.format_exc()\n        valid = checkSums()\n\n        os._exitcode = 255\n\n        if any(_ in excMsg for _ in (\"MemoryError\", \"Cannot allocate memory\")):\n            errMsg = \"memory exhaustion detected\"\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif any(_ in excMsg for _ in (\"No space left\", \"Disk quota exceeded\", \"Disk full while accessing\")):\n            errMsg = \"no space left on output device\"\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif any(_ in excMsg for _ in (\"The paging file is too small\",)):\n            errMsg = \"no space left for paging file\"\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif all(_ in excMsg for _ in (\"Access is denied\", \"subprocess\", \"metasploit\")):\n            errMsg = \"permission error occurred while running Metasploit\"\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif all(_ in excMsg for _ in (\"Permission denied\", \"metasploit\")):\n            errMsg = \"permission error occurred while using Metasploit\"\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif \"Read-only file system\" in excMsg:\n            errMsg = \"output device is mounted as read-only\"\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif \"Insufficient system resources\" in excMsg:\n            errMsg = \"resource exhaustion detected\"\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif \"OperationalError: disk I/O error\" in excMsg:\n            errMsg = \"I/O error on output device\"\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif \"Violation of BIDI\" in excMsg:\n            errMsg = \"invalid URL (violation of Bidi IDNA rule - RFC 5893)\"\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif \"Invalid IPv6 URL\" in excMsg:\n            errMsg = \"invalid URL ('%s')\" % excMsg.strip().split('\\n')[-1]\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif \"_mkstemp_inner\" in excMsg:\n            errMsg = \"there has been a problem while accessing temporary files\"\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif any(_ in excMsg for _ in (\"tempfile.mkdtemp\", \"tempfile.mkstemp\", \"tempfile.py\")):\n            errMsg = \"unable to write to the temporary directory '%s'. \" % tempfile.gettempdir()\n            errMsg += \"Please make sure that your disk is not full and \"\n            errMsg += \"that you have sufficient write permissions to \"\n            errMsg += \"create temporary files and/or directories\"\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif \"Permission denied: '\" in excMsg:\n            match = re.search(r\"Permission denied: '([^']*)\", excMsg)\n            errMsg = \"permission error occurred while accessing file '%s'\" % match.group(1)\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif all(_ in excMsg for _ in (\"twophase\", \"sqlalchemy\")):\n            errMsg = \"please update the 'sqlalchemy' package (>= 1.1.11) \"\n            errMsg += \"(Reference: 'https://qiita.com/tkprof/items/7d7b2d00df9c5f16fffe')\"\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif \"invalid maximum character passed to PyUnicode_New\" in excMsg and re.search(r\"\\A3\\.[34]\", sys.version) is not None:\n            errMsg = \"please upgrade the Python version (>= 3.5) \"\n            errMsg += \"(Reference: 'https://bugs.python.org/issue18183')\"\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif all(_ in excMsg for _ in (\"scramble_caching_sha2\", \"TypeError\")):\n            errMsg = \"please downgrade the 'PyMySQL' package (=< 0.8.1) \"\n            errMsg += \"(Reference: 'https://github.com/PyMySQL/PyMySQL/issues/700')\"\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif \"must be pinned buffer, not bytearray\" in excMsg:\n            errMsg = \"error occurred at Python interpreter which \"\n            errMsg += \"is fixed in 2.7. Please update accordingly \"\n            errMsg += \"(Reference: 'https://bugs.python.org/issue8104')\"\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif all(_ in excMsg for _ in (\"OSError: [Errno 22] Invalid argument: '\", \"importlib\")):\n            errMsg = \"unable to read file '%s'\" % extractRegexResult(r\"OSError: \\[Errno 22\\] Invalid argument: '(?P<result>[^']+)\", excMsg)\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif \"hash_randomization\" in excMsg:\n            errMsg = \"error occurred at Python interpreter which \"\n            errMsg += \"is fixed in 2.7.3. Please update accordingly \"\n            errMsg += \"(Reference: 'https://docs.python.org/2/library/sys.html')\"\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif \"AttributeError: unable to access item\" in excMsg and re.search(r\"3\\.11\\.\\d+a\", sys.version):\n            errMsg = \"there is a known issue when sqlmap is run with ALPHA versions of Python 3.11. \"\n            errMsg += \"Please downgrade to some stable Python version\"\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif all(_ in excMsg for _ in (\"Resource temporarily unavailable\", \"os.fork()\", \"dictionaryAttack\")):\n            errMsg = \"there has been a problem while running the multiprocessing hash cracking. \"\n            errMsg += \"Please rerun with option '--threads=1'\"\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif \"can't start new thread\" in excMsg:\n            errMsg = \"there has been a problem while creating new thread instance. \"\n            errMsg += \"Please make sure that you are not running too many processes\"\n            if not IS_WIN:\n                errMsg += \" (or increase the 'ulimit -u' value)\"\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif \"can't allocate read lock\" in excMsg:\n            errMsg = \"there has been a problem in regular socket operation \"\n            errMsg += \"('%s')\" % excMsg.strip().split('\\n')[-1]\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif all(_ in excMsg for _ in (\"pymysql\", \"configparser\")):\n            errMsg = \"wrong initialization of 'pymsql' detected (using Python3 dependencies)\"\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif all(_ in excMsg for _ in (\"ntlm\", \"socket.error, err\", \"SyntaxError\")):\n            errMsg = \"wrong initialization of 'python-ntlm' detected (using Python2 syntax)\"\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif all(_ in excMsg for _ in (\"drda\", \"to_bytes\")):\n            errMsg = \"wrong initialization of 'drda' detected (using Python3 syntax)\"\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif \"'WebSocket' object has no attribute 'status'\" in excMsg:\n            errMsg = \"wrong websocket library detected\"\n            errMsg += \" (Reference: 'https://github.com/sqlmapproject/sqlmap/issues/4572#issuecomment-775041086')\"\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif all(_ in excMsg for _ in (\"window = tkinter.Tk()\",)):\n            errMsg = \"there has been a problem in initialization of GUI interface \"\n            errMsg += \"('%s')\" % excMsg.strip().split('\\n')[-1]\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif any(_ in excMsg for _ in (\"unable to access item 'liveTest'\",)):\n            errMsg = \"detected usage of files from different versions of sqlmap\"\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif any(_ in errMsg for _ in (\": 9.9.9#\",)):\n            errMsg = \"LOL xD\"\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif kb.get(\"dumpKeyboardInterrupt\"):\n            raise SystemExit\n\n        elif any(_ in excMsg for _ in (\"Broken pipe\",)):\n            raise SystemExit\n\n        elif valid is False:\n            errMsg = \"code checksum failed (turning off automatic issue creation). \"\n            errMsg += \"You should retrieve the latest development version from official GitHub \"\n            errMsg += \"repository at '%s'\" % GIT_PAGE\n            logger.critical(errMsg)\n            print()\n            dataToStdout(excMsg)\n            raise SystemExit\n\n        elif any(_ in \"%s\\n%s\" % (errMsg, excMsg) for _ in (\"tamper/\", \"waf/\", \"--engagement-dojo\")):\n            logger.critical(errMsg)\n            print()\n            dataToStdout(excMsg)\n            raise SystemExit\n\n        elif any(_ in excMsg for _ in (\"ImportError\", \"ModuleNotFoundError\", \"<frozen\", \"Can't find file for module\", \"SAXReaderNotAvailable\", \"<built-in function compile> returned NULL without setting an exception\", \"source code string cannot contain null bytes\", \"No module named\", \"tp_name field\", \"module 'sqlite3' has no attribute 'OperationalError'\")):\n            errMsg = \"invalid runtime environment ('%s')\" % excMsg.split(\"Error: \")[-1].strip()\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif all(_ in excMsg for _ in (\"SyntaxError: Non-ASCII character\", \".py on line\", \"but no encoding declared\")):\n            errMsg = \"invalid runtime environment ('%s')\" % excMsg.split(\"Error: \")[-1].strip()\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif all(_ in excMsg for _ in (\"FileNotFoundError: [Errno 2] No such file or directory\", \"cwd = os.getcwd()\")):\n            errMsg = \"invalid runtime environment ('%s')\" % excMsg.split(\"Error: \")[-1].strip()\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif all(_ in excMsg for _ in (\"PermissionError: [WinError 5]\", \"multiprocessing\")):\n            errMsg = \"there is a permission problem in running multiprocessing on this system. \"\n            errMsg += \"Please rerun with '--disable-multi'\"\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif all(_ in excMsg for _ in (\"No such file\", \"_'\")):\n            errMsg = \"corrupted installation detected ('%s'). \" % excMsg.strip().split('\\n')[-1]\n            errMsg += \"You should retrieve the latest development version from official GitHub \"\n            errMsg += \"repository at '%s'\" % GIT_PAGE\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif all(_ in excMsg for _ in (\"No such file\", \"sqlmap.conf\", \"Test\")):\n            errMsg = \"you are trying to run (hidden) development tests inside the production environment\"\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif all(_ in excMsg for _ in (\"HTTPNtlmAuthHandler\", \"'str' object has no attribute 'decode'\")):\n            errMsg = \"package 'python-ntlm' has a known compatibility issue with the \"\n            errMsg += \"Python 3 (Reference: 'https://github.com/mullender/python-ntlm/pull/61')\"\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif \"'DictObject' object has no attribute '\" in excMsg and all(_ in errMsg for _ in (\"(fingerprinted)\", \"(identified)\")):\n            errMsg = \"there has been a problem in enumeration. \"\n            errMsg += \"Because of a considerable chance of false-positive case \"\n            errMsg += \"you are advised to rerun with switch '--flush-session'\"\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif \"database disk image is malformed\" in excMsg:\n            errMsg = \"local session file seems to be malformed. Please rerun with '--flush-session'\"\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif \"AttributeError: 'module' object has no attribute 'F_GETFD'\" in excMsg:\n            errMsg = \"invalid runtime (\\\"%s\\\") \" % excMsg.split(\"Error: \")[-1].strip()\n            errMsg += \"(Reference: 'https://stackoverflow.com/a/38841364' & 'https://bugs.python.org/issue24944#msg249231')\"\n            logger.critical(errMsg)\n            raise SystemExit\n\n        elif \"bad marshal data (unknown type code)\" in excMsg:\n            match = re.search(r\"\\s*(.+)\\s+ValueError\", excMsg)\n            errMsg = \"one of your .pyc files are corrupted%s\" % (\" ('%s')\" % match.group(1) if match else \"\")\n            errMsg += \". Please delete .pyc files on your system to fix the problem\"\n            logger.critical(errMsg)\n            raise SystemExit\n\n        for match in re.finditer(r'File \"(.+?)\", line', excMsg):\n            file_ = match.group(1)\n            try:\n                file_ = os.path.relpath(file_, os.path.dirname(__file__))\n            except ValueError:\n                pass\n            file_ = file_.replace(\"\\\\\", '/')\n            if \"../\" in file_:\n                file_ = re.sub(r\"(\\.\\./)+\", '/', file_)\n            else:\n                file_ = file_.lstrip('/')\n            file_ = re.sub(r\"/{2,}\", '/', file_)\n            excMsg = excMsg.replace(match.group(1), file_)\n\n        errMsg = maskSensitiveData(errMsg)\n        excMsg = maskSensitiveData(excMsg)\n\n        if conf.get(\"api\") or not valid:\n            logger.critical(\"%s\\n%s\" % (errMsg, excMsg))\n        else:\n            logger.critical(errMsg)\n            dataToStdout(\"%s\\n\" % setColor(excMsg.strip(), level=logging.CRITICAL))\n            createGithubIssue(errMsg, excMsg)\n\n    finally:\n        kb.threadContinue = False\n\n        if (getDaysFromLastUpdate() or 0) > LAST_UPDATE_NAGGING_DAYS:\n            warnMsg = \"your sqlmap version is outdated\"\n            logger.warning(warnMsg)\n\n        if conf.get(\"showTime\"):\n            dataToStdout(\"\\n[*] ending @ %s\\n\\n\" % time.strftime(\"%X /%Y-%m-%d/\"), forceOutput=True)\n\n        kb.threadException = True\n\n        if kb.get(\"tempDir\"):\n            for prefix in (MKSTEMP_PREFIX.IPC, MKSTEMP_PREFIX.TESTING, MKSTEMP_PREFIX.COOKIE_JAR, MKSTEMP_PREFIX.BIG_ARRAY):\n                for filepath in glob.glob(os.path.join(kb.tempDir, \"%s*\" % prefix)):\n                    try:\n                        os.remove(filepath)\n                    except OSError:\n                        pass\n\n            if not filterNone(filepath for filepath in glob.glob(os.path.join(kb.tempDir, '*')) if not any(filepath.endswith(_) for _ in (\".lock\", \".exe\", \".so\", '_'))):  # ignore junk files\n                try:\n                    shutil.rmtree(kb.tempDir, ignore_errors=True)\n                except OSError:\n                    pass\n\n        if conf.get(\"hashDB\"):\n            conf.hashDB.flush(True)\n            conf.hashDB.close()         # NOTE: because of PyPy\n\n        if conf.get(\"harFile\"):\n            try:\n                with openFile(conf.harFile, \"w+b\") as f:\n                    json.dump(conf.httpCollector.obtain(), fp=f, indent=4, separators=(',', ': '))\n            except SqlmapBaseException as ex:\n                errMsg = getSafeExString(ex)\n                logger.critical(errMsg)\n\n        if conf.get(\"api\"):\n            conf.databaseCursor.disconnect()\n\n        if conf.get(\"dumper\"):\n            conf.dumper.flush()\n\n        # short delay for thread finalization\n        _ = time.time()\n        while threading.active_count() > 1 and (time.time() - _) > THREAD_FINALIZATION_TIMEOUT:\n            time.sleep(0.01)\n\n        if cmdLineOptions.get(\"sqlmapShell\"):\n            cmdLineOptions.clear()\n            conf.clear()\n            kb.clear()\n            conf.disableBanner = True\n            main()\n\nif __name__ == \"__main__\":\n    try:\n        main()\n    except KeyboardInterrupt:\n        pass\n    except SystemExit:\n        raise\n    except:\n        traceback.print_exc()\n    finally:\n        # Reference: http://stackoverflow.com/questions/1635080/terminate-a-multi-thread-python-program\n        if threading.active_count() > 1:\n            os._exit(getattr(os, \"_exitcode\", 0))\n        else:\n            sys.exit(getattr(os, \"_exitcode\", 0))\nelse:\n    # cancelling postponed imports (because of CI/CD checks)\n    __import__(\"lib.controller.controller\")\n"
        },
        {
          "name": "sqlmapapi.py",
          "type": "blob",
          "size": 4.13,
          "content": "#!/usr/bin/env python\n\n\"\"\"\nCopyright (c) 2006-2025 sqlmap developers (https://sqlmap.org/)\nSee the file 'LICENSE' for copying permission\n\"\"\"\n\nimport sys\n\nsys.dont_write_bytecode = True\n\n__import__(\"lib.utils.versioncheck\")  # this has to be the first non-standard import\n\nimport logging\nimport os\nimport warnings\n\nwarnings.filterwarnings(action=\"ignore\", category=UserWarning)\nwarnings.filterwarnings(action=\"ignore\", category=DeprecationWarning)\n\ntry:\n    from optparse import OptionGroup\n    from optparse import OptionParser as ArgumentParser\n\n    ArgumentParser.add_argument = ArgumentParser.add_option\n\n    def _add_argument(self, *args, **kwargs):\n        return self.add_option(*args, **kwargs)\n\n    OptionGroup.add_argument = _add_argument\n\nexcept ImportError:\n    from argparse import ArgumentParser\n\nfinally:\n    def get_actions(instance):\n        for attr in (\"option_list\", \"_group_actions\", \"_actions\"):\n            if hasattr(instance, attr):\n                return getattr(instance, attr)\n\n    def get_groups(parser):\n        return getattr(parser, \"option_groups\", None) or getattr(parser, \"_action_groups\")\n\n    def get_all_options(parser):\n        retVal = set()\n\n        for option in get_actions(parser):\n            if hasattr(option, \"option_strings\"):\n                retVal.update(option.option_strings)\n            else:\n                retVal.update(option._long_opts)\n                retVal.update(option._short_opts)\n\n        for group in get_groups(parser):\n            for option in get_actions(group):\n                if hasattr(option, \"option_strings\"):\n                    retVal.update(option.option_strings)\n                else:\n                    retVal.update(option._long_opts)\n                    retVal.update(option._short_opts)\n\n        return retVal\n\nfrom lib.core.common import getUnicode\nfrom lib.core.common import setPaths\nfrom lib.core.data import logger\nfrom lib.core.patch import dirtyPatches\nfrom lib.core.patch import resolveCrossReferences\nfrom lib.core.settings import RESTAPI_DEFAULT_ADAPTER\nfrom lib.core.settings import RESTAPI_DEFAULT_ADDRESS\nfrom lib.core.settings import RESTAPI_DEFAULT_PORT\nfrom lib.core.settings import UNICODE_ENCODING\nfrom lib.utils.api import client\nfrom lib.utils.api import server\n\ntry:\n    from sqlmap import modulePath\nexcept ImportError:\n    def modulePath():\n        return getUnicode(os.path.dirname(os.path.realpath(__file__)), encoding=sys.getfilesystemencoding() or UNICODE_ENCODING)\n\ndef main():\n    \"\"\"\n    REST-JSON API main function\n    \"\"\"\n\n    dirtyPatches()\n    resolveCrossReferences()\n\n    # Set default logging level to debug\n    logger.setLevel(logging.DEBUG)\n\n    # Initialize paths\n    setPaths(modulePath())\n\n    # Parse command line options\n    apiparser = ArgumentParser()\n    apiparser.add_argument(\"-s\", \"--server\", help=\"Run as a REST-JSON API server\", action=\"store_true\")\n    apiparser.add_argument(\"-c\", \"--client\", help=\"Run as a REST-JSON API client\", action=\"store_true\")\n    apiparser.add_argument(\"-H\", \"--host\", help=\"Host of the REST-JSON API server (default \\\"%s\\\")\" % RESTAPI_DEFAULT_ADDRESS, default=RESTAPI_DEFAULT_ADDRESS)\n    apiparser.add_argument(\"-p\", \"--port\", help=\"Port of the REST-JSON API server (default %d)\" % RESTAPI_DEFAULT_PORT, default=RESTAPI_DEFAULT_PORT, type=int)\n    apiparser.add_argument(\"--adapter\", help=\"Server (bottle) adapter to use (default \\\"%s\\\")\" % RESTAPI_DEFAULT_ADAPTER, default=RESTAPI_DEFAULT_ADAPTER)\n    apiparser.add_argument(\"--database\", help=\"Set IPC database filepath (optional)\")\n    apiparser.add_argument(\"--username\", help=\"Basic authentication username (optional)\")\n    apiparser.add_argument(\"--password\", help=\"Basic authentication password (optional)\")\n    (args, _) = apiparser.parse_known_args() if hasattr(apiparser, \"parse_known_args\") else apiparser.parse_args()\n\n\n    # Start the client or the server\n    if args.server:\n        server(args.host, args.port, adapter=args.adapter, username=args.username, password=args.password, database=args.database)\n    elif args.client:\n        client(args.host, args.port, username=args.username, password=args.password)\n    else:\n        apiparser.print_help()\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
          "name": "sqlmapapi.yaml",
          "type": "blob",
          "size": 6.07,
          "content": "openapi: 3.0.1\ninfo:\n  title: sqlmapapi OpenAPI/Swagger specification\n  version: '0.1'\npaths:\n  /version:\n    get:\n      description: Fetch server version\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  version:\n                    type: string\n                    example: \"1.5.7.7#dev\"\n                  success:\n                    type: boolean\n                    example: true\n  /task/new:\n    get:\n      description: Create a new task\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  taskid:\n                    type: string\n                    example: \"fad44d6beef72285\"\n                  success:\n                    type: boolean\n                    example: true\n  /scan/{taskid}/start:\n    post:\n      description: Launch a scan\n      parameters:\n        - in: path\n          name: taskid\n          required: true\n          schema:\n            type: string\n          description: Scan task ID\n      requestBody:\n        content:\n          application/json:\n            schema:\n              type: object\n              properties:\n                url:\n                  type: string\n            examples:\n              '0':\n                value: '{\"url\":\"http://testphp.vulnweb.com/artists.php?artist=1\"}'\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  engineid:\n                    type: integer\n                    example: 19720\n                  success:\n                    type: boolean\n                    example: true\n  /scan/{taskid}/stop:\n    get:\n      description: Stop a scan\n      parameters:\n        - in: path\n          name: taskid\n          required: true\n          schema:\n            type: string\n          description: Scan task ID\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                    example: true\n  /scan/{taskid}/status:\n    get:\n      description: Fetch status of a scan\n      parameters:\n        - in: path\n          name: taskid\n          required: true\n          schema:\n            type: string\n          description: Scan task ID\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  status:\n                    type: string\n                    example: terminated\n                  returncode:\n                    type: integer\n                    example: 0\n                  success:\n                    type: boolean\n                    example: true\n  /scan/{taskid}/list:\n    get:\n      description: List options for a given task ID\n      parameters:\n        - in: path\n          name: taskid\n          required: true\n          schema:\n            type: string\n          description: Scan task ID\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                    example: true\n                  options:\n                    type: array\n                    items:\n                      type: object\n  /scan/{taskid}/data:\n    get:\n      description: Retrieve the scan resulting data\n      parameters:\n        - in: path\n          name: taskid\n          required: true\n          schema:\n            type: string\n          description: Scan task ID\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  data:\n                    type: array\n                    items:\n                      type: object\n                  success:\n                    type: boolean\n                    example: true\n                  error:\n                    type: array\n                    items:\n                      type: object\n  /scan/{taskid}/log:\n    get:\n      description: Retrieve the log messages\n      parameters:\n        - in: path\n          name: taskid\n          required: true\n          schema:\n            type: string\n          description: Scan task ID\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  log:\n                    type: array\n                    items:\n                      type: object\n                  success:\n                    type: boolean\n                    example: true\n  /scan/{taskid}/kill:\n    get:\n      description: Kill a scan\n      parameters:\n        - in: path\n          name: taskid\n          required: true\n          schema:\n            type: string\n          description: Scan task ID\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                    example: true\n  /task/{taskid}/delete:\n    get:\n      description: Delete an existing task\n      parameters:\n        - in: path\n          name: taskid\n          required: true\n          schema:\n            type: string\n          description: Scan task ID\n      responses:\n        '200':\n          description: OK\n          content:\n            application/json:\n              schema:\n                type: object\n                properties:\n                  success:\n                    type: boolean\n                    example: true\n"
        },
        {
          "name": "tamper",
          "type": "tree",
          "content": null
        },
        {
          "name": "thirdparty",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}