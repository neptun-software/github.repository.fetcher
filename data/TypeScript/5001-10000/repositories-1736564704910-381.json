{
  "metadata": {
    "timestamp": 1736564704910,
    "page": 381,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "microsoft/vscode-cpptools",
      "stars": 5582,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2763671875,
          "content": "# ignore cache files for sample projects\n.vscode/ipch\nbrowse*.db*\n*.obj\n*.pdb\n*.exe\n*.ilk\n\n# ignore exported localization xlf and LCL directories\nBuild/loc/LCL\nvscode-extensions-localization-export\nOneLocBuild\n\n# ignore imported localization xlf directory\nvscode-translations-import\n"
        },
        {
          "name": "Build",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 0.3037109375,
          "content": "# Each line is a file pattern followed by one or more owners.\n\n# These owners will be the default owners for everything in\n# the repo. Unless a later match takes precedence,\n# @microsoft/cpptools-maintainers will be requested for\n# review when someone opens a pull request.\n\n*   @microsoft/cpptools-maintainers\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.5439453125,
          "content": "# Microsoft Open Source Code of Conduct\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\n\nResources:\n\n- [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/)\n- [Microsoft Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/)\n- Contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with questions or concerns\n- Employees can reach out at [aka.ms/opensource/moderation-support](https://aka.ms/opensource/moderation-support)"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 4.5751953125,
          "content": "# How to Contribute Changes\n\n## Contribution Steps\n\n* [Build and debug the extension](Documentation/Building%20the%20Extension.md).\n* File an [issue](https://github.com/Microsoft/vscode-cpptools/issues) and a [pull request](https://github.com/Microsoft/vscode-cpptools/pulls) with the change and we will review it.\n* If the change affects functionality, add a line describing the change to [**CHANGELOG.md**](Extension/CHANGELOG.md).\n* Try and add a test in [**test/extension.test.ts**](Extension/test/scenarios/SingleRootProject/tests/extension.test.ts).\n* Run tests via opening the [**Extension**](https://github.com/Microsoft/vscode-cpptools/tree/main/Extension) folder in Visual Studio Code, selecting the \"Launch Tests\" configuration in the Debug pane, and choosing \"Start Debugging\".\n\n## About the Code\n\n* Execution starts in the `activate` method in [**main.ts**](Extension/src/main.ts).\n  * `processRuntimeDependencies` handles the downloading and installation of the OS-dependent files. Downloading code exists in [**packageManager.ts**](Extension/src/packageManager.ts).\n  * `downloadCpptoolsJsonPkg` handles the **cpptools.json**, which can be used to enable changes to occur mid-update, such as turning the `intelliSenseEngine` to `\"Default\"` for a certain percentage of users.\n* The debugger code is in the [**Debugger**](https://github.com/Microsoft/vscode-cpptools/tree/main/Extension/src/Debugger) folder.\n* [**LanguageServer/client.ts**](Extension/src/LanguageServer/client.ts) handles various language server functionality.\n* [**LanguageServer/configurations.ts**](Extension/src/LanguageServer/configurations.ts) handles functionality related to **c_cpp_properties.json**.\n* [**telemetry.ts**](Extension/src/telemetry.ts): Telemetry data gets sent to either `logLanguageServerEvent` or `logDebuggerEvent`.\n* The Tag Parser (symbol database) doesn't automatically expand macros, so the [**cpp.hint**](Extension/cpp.hint) file contains definitions of macros that should be expanded in order for symbols to be parsed correctly.\n\n## String Localization\n\n* [vscode-nls](https://github.com/microsoft/vscode-nls) is used to localize strings in TypeScript code.  To use [vscode-nls](https://github.com/microsoft/vscode-nls), the source file must contain:\n```typescript\nimport * as nls from 'vscode-nls';\n\nnls.config({ messageFormat: nls.MessageFormat.bundle, bundleFormat: nls.BundleFormat.standalone })();\nconst localize: nls.LocalizeFunc = nls.loadMessageBundle();\n```\n* For each user-facing string, wrap the string in a call to localize:\n```typescript\nconst readmeMessage: string = localize(\"refer.read.me\", \"Please refer to {0} for troubleshooting information. Issues can be created at {1}\", readmePath, \"https://github.com/Microsoft/vscode-cpptools/issues\");\n```\n* The first parameter to localize should be a unique key for that string, not used by any other call to localize() in the file unless representing the same string.  The second parameter is the string to localize.  Both of these parameters must be string literals.  Tokens such as {0} and {1} are supported in the localizable string, with replacement values passed as additional parameters to localize().\n\n## Contributor License Agreement\n\nThis project welcomes contributions and suggestions. Most contributions require you to\nagree to a Contributor License Agreement (CLA) declaring that you have the right to,\nand actually do, grant us the rights to use your contribution. For details, visit\nhttps://cla.microsoft.com.\n\nWhen you submit a pull request, a CLA-bot will automatically determine whether you need\nto provide a CLA and decorate the PR appropriately (e.g., label, comment). Simply follow the\ninstructions provided by the bot. You will only need to do this once across all repositories using our CLA.\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/).\nFor more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/)\nor contact [opencode@microsoft.com](mailto:opencode@microsoft.com) with any additional questions or comments.\n\n### Adding/Updating package.json dependencies\n\nWe maintain a public Azure Artifacts feed that we point the package manager to in .npmrc files. If you want to add a dependency or update a version in package.json, you may need to contact us so we can add it to our feed. Please ping our team in a PR or new issue if you experience this issue.\n\nFor local development, you can delete the .npmrc file and the matching `yarn.lock` file while you wait for us to update the feed. However, these changes will need to be reverted in your branch before we will accept a PR."
        },
        {
          "name": "Code Samples",
          "type": "tree",
          "content": null
        },
        {
          "name": "Documentation",
          "type": "tree",
          "content": null
        },
        {
          "name": "Extension",
          "type": "tree",
          "content": null
        },
        {
          "name": "ExtensionPack",
          "type": "tree",
          "content": null
        },
        {
          "name": "Images",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.275390625,
          "content": "Additional binary files are included in the official VSIX files built and\r\ndistributed by Microsoft; these are governed by the more restrictive proprietary\r\nlicense terms found at [RuntimeLicenses](RuntimeLicenses).\r\n\r\nMIT License\r\n\r\nCopyright (c) 2020 Microsoft\r\n\r\nPermission is hereby granted, free of charge, to any person obtaining a copy\r\nof this software and associated documentation files (the \"Software\"), to deal\r\nin the Software without restriction, including without limitation the rights\r\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\r\ncopies of the Software, and to permit persons to whom the Software is\r\nfurnished to do so, subject to the following conditions:\r\n\r\nThe above copyright notice and this permission notice shall be included in all\r\ncopies or substantial portions of the Software.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\r\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\r\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\r\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\r\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\r\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\r\nSOFTWARE.\r\n"
        },
        {
          "name": "LanguageCCPP_color_128x.png",
          "type": "blob",
          "size": 4.6796875,
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.123046875,
          "content": "# C/C++ for Visual Studio Code\n\n#### [Repository](https://github.com/microsoft/vscode-cpptools)&nbsp;&nbsp;|&nbsp;&nbsp;[Issues](https://github.com/microsoft/vscode-cpptools/issues)&nbsp;&nbsp;|&nbsp;&nbsp;[Documentation](https://code.visualstudio.com/docs/languages/cpp)&nbsp;&nbsp;|&nbsp;&nbsp;[Code Samples](https://github.com/microsoft/vscode-cpptools/tree/main/Code%20Samples)\n\n[![Badge](https://aka.ms/vsls-badge)](https://aka.ms/vsls)\n\nThe C/C++ extension adds language support for C/C++ to Visual Studio Code, including [editing (IntelliSense)](https://code.visualstudio.com/docs/cpp/cpp-ide) and [debugging](https://code.visualstudio.com/docs/cpp/cpp-debug) features.\n\n## Pre-requisites\nC++ is a compiled language meaning your program's source code must be translated (compiled) before it can be run on your computer. VS Code is first and foremost an editor, and relies on command-line tools to do much of the development workflow. The C/C++ extension **does not include a C++ compiler or debugger**. You will need to install these tools or use those already installed on your computer.\n * C++ compiler pre-installed\n * C++ debugger pre-installed\n\n<br/>\n\nHere is a list of compilers and architectures per platform officially supported by the extension. These are reflected by the available [IntelliSense modes](https://code.visualstudio.com/docs/cpp/configure-intellisense-crosscompilation#_intellisense-mode) from the extension's IntelliSense configuration. Note that support for other compilers may be limited.\n\nPlatform | Compilers | Architectures\n:--- | :--- | :--- \nWindows | MSVC, Clang, GCC | x64, x86, arm64, arm\nLinux | Clang, GCC | x64, x86, arm64, arm\nmacOS | Clang, GCC | x64, x86, arm64\n\nFor more information about installing the required tools or setting up the extension, please follow the tutorials below.\n<br/>\n<br/>\n\n## Overview and tutorials\n* [C/C++ extension overview](https://code.visualstudio.com/docs/languages/cpp)\n* [Introductory Videos](https://code.visualstudio.com/docs/cpp/introvideos-cpp)\n\nC/C++ extension tutorials per compiler and platform\n* [Microsoft C++ compiler (MSVC) on Windows](https://code.visualstudio.com/docs/cpp/config-msvc)\n* [GCC and Mingw-w64 on Windows](https://code.visualstudio.com/docs/cpp/config-mingw)\n* [GCC on Windows Subsystem for Linux (WSL)](https://code.visualstudio.com/docs/cpp/config-wsl)\n* [GCC on Linux](https://code.visualstudio.com/docs/cpp/config-linux)\n* [Clang on macOS](https://code.visualstudio.com/docs/cpp/config-clang-mac)\n\n## Quick links\n* [Editing features (IntelliSense)](https://code.visualstudio.com/docs/cpp/cpp-ide)\n* [IntelliSense configuration](https://code.visualstudio.com/docs/cpp/customize-default-settings-cpp)\n* [Enhanced colorization](https://code.visualstudio.com/docs/cpp/colorization-cpp)\n* [Debugging](https://code.visualstudio.com/docs/cpp/cpp-debug)\n* [Debug configuration](https://code.visualstudio.com/docs/cpp/launch-json-reference)\n* [Enable logging for IntelliSense or debugging](https://code.visualstudio.com/docs/cpp/enable-logging-cpp)\n\n## Questions and feedback\n\n**[FAQs](https://code.visualstudio.com/docs/cpp/faq-cpp)**\n<br>\nCheck out the FAQs before filing a question.\n<br>\n\n**[Provide feedback](https://github.com/microsoft/vscode-cpptools/issues/new/choose)**\n<br>\nFile questions, issues, or feature requests for the extension.\n<br>\n\n**[Known issues](https://github.com/Microsoft/vscode-cpptools/issues)**\n<br>\nIf someone has already filed an issue that encompasses your feedback, please leave a 👍 or 👎 reaction on the issue to upvote or downvote it to help us prioritize the issue.\n<br>\n\n**[Quick survey](https://www.research.net/r/VBVV6C6)**\n<br>\nLet us know what you think of the extension by taking the quick survey.\n\n## Contribution\n\nContributions are always welcome. Please see our [contributing guide](CONTRIBUTING.md) for more details.\n\n## Microsoft Open Source Code of Conduct\n\nThis project has adopted the [Microsoft Open Source Code of Conduct](https://opensource.microsoft.com/codeofconduct/). For more information see the [Code of Conduct FAQ](https://opensource.microsoft.com/codeofconduct/faq/) or contact opencode@microsoft.com with any additional questions or comments.\n\n## Data Collection\n\nThe software may collect information about you and your use of the software and send it to Microsoft. Microsoft may use this information to provide services and improve our products and services. You may turn off the telemetry via the same setting provided by Visual Studio Code: `\"telemetry.enableTelemetry\"`. Our privacy statement is located [here](https://go.microsoft.com/fwlink/?LinkID=824704). You can learn more about data collection and use in the help documentation and our privacy statement. Your use of the software operates as your consent to these practices.\n\n## Trademarks\n\nThis project may contain trademarks or logos for projects, products, or services. Authorized use of Microsoft trademarks or logos is subject to and must follow Microsoft’s Trademark & Brand Guidelines. Use of Microsoft trademarks or logos in modified versions of this project must not cause confusion or imply Microsoft sponsorship. Any use of third-party trademarks or logos are subject to those third-party’s policies."
        },
        {
          "name": "RuntimeLicenses",
          "type": "tree",
          "content": null
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 2.5927734375,
          "content": "<!-- BEGIN MICROSOFT SECURITY.MD V0.0.9 BLOCK -->\n\n## Security\n\nMicrosoft takes the security of our software products and services seriously, which includes all source code repositories managed through our GitHub organizations, which include [Microsoft](https://github.com/Microsoft), [Azure](https://github.com/Azure), [DotNet](https://github.com/dotnet), [AspNet](https://github.com/aspnet) and [Xamarin](https://github.com/xamarin).\n\nIf you believe you have found a security vulnerability in any Microsoft-owned repository that meets [Microsoft's definition of a security vulnerability](https://aka.ms/security.md/definition), please report it to us as described below.\n\n## Reporting Security Issues\n\n**Please do not report security vulnerabilities through public GitHub issues.**\n\nInstead, please report them to the Microsoft Security Response Center (MSRC) at [https://msrc.microsoft.com/create-report](https://aka.ms/security.md/msrc/create-report).\n\nIf you prefer to submit without logging in, send email to [secure@microsoft.com](mailto:secure@microsoft.com).  If possible, encrypt your message with our PGP key; please download it from the [Microsoft Security Response Center PGP Key page](https://aka.ms/security.md/msrc/pgp).\n\nYou should receive a response within 24 hours. If for some reason you do not, please follow up via email to ensure we received your original message. Additional information can be found at [microsoft.com/msrc](https://www.microsoft.com/msrc). \n\nPlease include the requested information listed below (as much as you can provide) to help us better understand the nature and scope of the possible issue:\n\n  * Type of issue (e.g. buffer overflow, SQL injection, cross-site scripting, etc.)\n  * Full paths of source file(s) related to the manifestation of the issue\n  * The location of the affected source code (tag/branch/commit or direct URL)\n  * Any special configuration required to reproduce the issue\n  * Step-by-step instructions to reproduce the issue\n  * Proof-of-concept or exploit code (if possible)\n  * Impact of the issue, including how an attacker might exploit the issue\n\nThis information will help us triage your report more quickly.\n\nIf you are reporting for a bug bounty, more complete reports can contribute to a higher bounty award. Please visit our [Microsoft Bug Bounty Program](https://aka.ms/security.md/msrc/bounty) page for more details about our active programs.\n\n## Preferred Languages\n\nWe prefer all communications to be in English.\n\n## Policy\n\nMicrosoft follows the principle of [Coordinated Vulnerability Disclosure](https://aka.ms/security.md/cvd).\n\n<!-- END MICROSOFT SECURITY.MD BLOCK -->"
        },
        {
          "name": "Themes",
          "type": "tree",
          "content": null
        },
        {
          "name": "launch.md",
          "type": "blob",
          "size": 0.11328125,
          "content": "The documentation for debug configuration has moved to https://code.visualstudio.com/docs/cpp/launch-json-reference."
        }
      ]
    }
  ]
}