{
  "metadata": {
    "timestamp": 1736564751550,
    "page": 442,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "sinclairzx81/typebox",
      "stars": 5222,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0244140625,
          "content": "node_modules\ntarget\ndist\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "changelog",
          "type": "tree",
          "content": null
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "hammer.mjs",
          "type": "blob",
          "size": 4.9375,
          "content": "import * as Benchmark from './task/benchmark'\nimport * as Build from './task/build'\nimport * as Fs from 'fs'\n\n// -------------------------------------------------------------------------------\n// Clean\n// -------------------------------------------------------------------------------\nexport async function clean() {\n  await folder('node_modules/typebox').delete()\n  await folder('target').delete()\n}\n\n// -------------------------------------------------------------------------------\n// Format\n// -------------------------------------------------------------------------------\nexport async function format() {\n  await shell('prettier --no-semi --single-quote --print-width 240 --trailing-comma all --write src test task example/index.ts')\n}\n\n// -------------------------------------------------------------------------------\n// Start\n// -------------------------------------------------------------------------------\nexport async function start() {\n  await shell(`hammer run example/index.ts --dist target/example`)\n}\n// -------------------------------------------------------------------------------\n// Benchmark\n// -------------------------------------------------------------------------------\nexport async function benchmark() {\n  await Benchmark.compression()\n  await Benchmark.measurement()\n}\n\n// -------------------------------------------------------------------------------\n// Test\n// -------------------------------------------------------------------------------\nexport async function test_typescript() {\n  for (const version of ['4.9.5', '5.0.4', '5.1.3', '5.1.6', '5.2.2', '5.3.2', '5.3.3', '5.4.3', '5.4.5', '5.5.2', '5.5.3', '5.5.4', '5.6.2', '5.6.3', 'next', 'latest']) {\n    await shell(`npm install typescript@${version} --no-save`)\n    await test_static()\n  }\n}\nexport async function test_static() {\n  await shell(`tsc -v`)\n  await shell(`tsc -p test/static/tsconfig.json --noEmit --strict`)\n}\nexport async function test_runtime(filter = '') {\n  await shell(`hammer build ./test/runtime/index.ts --dist target/test/runtime --platform node`)\n  await shell(`mocha target/test/runtime/index.js -g \"${filter}\"`)\n}\nexport async function test(filter = '') {\n  await test_static()\n  await test_runtime(filter)\n}\n\n// -------------------------------------------------------------------------------\n// Build\n// -------------------------------------------------------------------------------\nexport async function build_check(target = 'target/build') {\n  const { version } = JSON.parse(Fs.readFileSync('package.json', 'utf8'))\n  await shell(`cd ${target} && attw sinclair-typebox-${version}.tgz`)\n}\nexport async function build(target = 'target/build') {\n  await test()\n  await clean()\n  await Promise.all([\n    Build.Package.build(target),\n    Build.Esm.build(target),\n    Build.Cjs.build(target),\n  ])\n  await folder(target).add('readme.md')\n  await folder(target).add('license')\n  await shell(`cd ${target} && npm pack`)\n  await build_check(target)\n}\n\n// -------------------------------------------------------------------------------\n// Build To\n// -------------------------------------------------------------------------------\nexport async function build_to(remote = 'target/remote', target = 'target/build') {\n  await clean()\n  await Promise.all([\n    Build.Package.build(target),\n    Build.Esm.build(target),\n    Build.Cjs.build(target),\n  ])\n  await folder(target).add('readme.md')\n  await folder(target).add('license')\n  await shell(`cd ${target} && npm pack`)\n  const { version } = JSON.parse(Fs.readFileSync('package.json', 'utf8'))\n  const filename = `${target}/sinclair-typebox-${version}.tgz`\n  await folder(remote).add(filename)\n}\n\n// -------------------------------------------------------------------------------\n// Install\n// -------------------------------------------------------------------------------\nexport async function install_local() {\n  await clean()\n  await build('target/typebox')\n  await folder('node_modules').add('target/typebox')\n}\n\n// -------------------------------------------------------------\n// Publish\n// -------------------------------------------------------------\nexport async function publish(otp, target = 'target/build') {\n  const { version } = JSON.parse(Fs.readFileSync('package.json', 'utf8'))\n  if(version.includes('-dev')) throw Error(`package version should not include -dev specifier`)\n  await shell(`cd ${target} && npm publish sinclair-typebox-${version}.tgz --access=public --otp ${otp}`)\n  await shell(`git tag ${version}`)\n  await shell(`git push origin ${version}`)\n}\n\n// -------------------------------------------------------------\n// Publish-Dev\n// -------------------------------------------------------------\nexport async function publish_dev(otp, target = 'target/build') {\n  const { version } = JSON.parse(Fs.readFileSync(`${target}/package.json`, 'utf8'))\n  if(!version.includes('-dev')) throw Error(`development package version should include -dev specifier`)\n  await shell(`cd ${target} && npm publish sinclair-typebox-${version}.tgz --access=public --otp ${otp} --tag dev`)\n}"
        },
        {
          "name": "license",
          "type": "blob",
          "size": 1.1748046875,
          "content": "TypeBox\n\nJson Schema Type Builder with Static Type Resolution for TypeScript \n\nThe MIT License (MIT)\n\nCopyright (c) 2017-2024 Haydn Paterson (sinclair) <haydn.developer@gmail.com>\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."
        },
        {
          "name": "package-lock.json",
          "type": "blob",
          "size": 102.306640625,
          "content": "{\n  \"name\": \"@sinclair/typebox\",\n  \"version\": \"0.34.13\",\n  \"lockfileVersion\": 2,\n  \"requires\": true,\n  \"packages\": {\n    \"\": {\n      \"name\": \"@sinclair/typebox\",\n      \"version\": \"0.34.13\",\n      \"license\": \"MIT\",\n      \"devDependencies\": {\n        \"@arethetypeswrong/cli\": \"^0.13.2\",\n        \"@sinclair/hammer\": \"^0.18.0\",\n        \"@types/mocha\": \"^9.1.1\",\n        \"@types/node\": \"^20.10.1\",\n        \"ajv\": \"^8.12.0\",\n        \"ajv-formats\": \"^2.1.1\",\n        \"mocha\": \"^10.4.0\",\n        \"prettier\": \"^2.7.1\",\n        \"typescript\": \"^5.7.2\"\n      }\n    },\n    \"node_modules/@andrewbranch/untar.js\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/@andrewbranch/untar.js/-/untar.js-1.0.3.tgz\",\n      \"integrity\": \"sha512-Jh15/qVmrLGhkKJBdXlK1+9tY4lZruYjsgkDFj08ZmDiWVBLJcqkok7Z0/R0In+i1rScBpJlSvrTS2Lm41Pbnw==\",\n      \"dev\": true\n    },\n    \"node_modules/@arethetypeswrong/cli\": {\n      \"version\": \"0.13.2\",\n      \"resolved\": \"https://registry.npmjs.org/@arethetypeswrong/cli/-/cli-0.13.2.tgz\",\n      \"integrity\": \"sha512-eqRWeFFiI58xwsiUfZSdZsmNCaqqtxmSPP9554ajiCDrB/aNzq5VktVK7dNiT9PamunNeoej4KbDBnkNwVacvg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@arethetypeswrong/core\": \"0.13.2\",\n        \"chalk\": \"^4.1.2\",\n        \"cli-table3\": \"^0.6.3\",\n        \"commander\": \"^10.0.1\",\n        \"marked\": \"^9.1.2\",\n        \"marked-terminal\": \"^6.0.0\",\n        \"semver\": \"^7.5.4\"\n      },\n      \"bin\": {\n        \"attw\": \"dist/index.js\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@arethetypeswrong/core\": {\n      \"version\": \"0.13.2\",\n      \"resolved\": \"https://registry.npmjs.org/@arethetypeswrong/core/-/core-0.13.2.tgz\",\n      \"integrity\": \"sha512-1l6ygar+6TH4o1JipWWGCEZlOhAwEShm1yKx+CgIByNjCzufbu6k9DNbDmBjdouusNRhBIOYQe1UHnJig+GtAw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@andrewbranch/untar.js\": \"^1.0.3\",\n        \"fflate\": \"^0.7.4\",\n        \"semver\": \"^7.5.4\",\n        \"typescript\": \"5.3.2\",\n        \"validate-npm-package-name\": \"^5.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/@arethetypeswrong/core/node_modules/typescript\": {\n      \"version\": \"5.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/typescript/-/typescript-5.3.2.tgz\",\n      \"integrity\": \"sha512-6l+RyNy7oAHDfxC4FzSJcz9vnjTKxrLpDG5M2Vu4SHRVNg6xzqZp6LYSR9zjqQTu8DU/f5xwxUdADOkbrIX2gQ==\",\n      \"dev\": true,\n      \"bin\": {\n        \"tsc\": \"bin/tsc\",\n        \"tsserver\": \"bin/tsserver\"\n      },\n      \"engines\": {\n        \"node\": \">=14.17\"\n      }\n    },\n    \"node_modules/@colors/colors\": {\n      \"version\": \"1.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/@colors/colors/-/colors-1.5.0.tgz\",\n      \"integrity\": \"sha512-ooWCrlZP11i8GImSjTHYHLkvFDP48nS4+204nGb1RiX/WXYHmJA2III9/e2DWVabCESdW7hBAEzHRqUn9OUVvQ==\",\n      \"dev\": true,\n      \"optional\": true,\n      \"engines\": {\n        \"node\": \">=0.1.90\"\n      }\n    },\n    \"node_modules/@esbuild/linux-loong64\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.15.7.tgz\",\n      \"integrity\": \"sha512-IKznSJOsVUuyt7cDzzSZyqBEcZe+7WlBqTVXiF1OXP/4Nm387ToaXZ0fyLwI1iBlI/bzpxVq411QE2/Bt2XWWw==\",\n      \"cpu\": [\n        \"loong64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/@sinclair/hammer\": {\n      \"version\": \"0.18.0\",\n      \"resolved\": \"https://registry.npmjs.org/@sinclair/hammer/-/hammer-0.18.0.tgz\",\n      \"integrity\": \"sha512-nIrsOWvvCV/SjTSU4qcOsY3mEO8ErN2WBWzbn6mVpqDajy36lG9WbDEfR6Agm3LbN2pdPl1HGjKuiHpbpOTZ2A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"esbuild\": \"0.15.7\"\n      },\n      \"bin\": {\n        \"hammer\": \"hammer\"\n      }\n    },\n    \"node_modules/@sindresorhus/is\": {\n      \"version\": \"4.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/@sindresorhus/is/-/is-4.6.0.tgz\",\n      \"integrity\": \"sha512-t09vSN3MdfsyCHoFcTRCH/iUtG7OJ0CsjzB8cjAmKc/va/kIgeDI/TxsigdncE/4be734m0cvIYwNaV4i2XqAw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sindresorhus/is?sponsor=1\"\n      }\n    },\n    \"node_modules/@types/mocha\": {\n      \"version\": \"9.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@types/mocha/-/mocha-9.1.1.tgz\",\n      \"integrity\": \"sha512-Z61JK7DKDtdKTWwLeElSEBcWGRLY8g95ic5FoQqI9CMx0ns/Ghep3B4DfcEimiKMvtamNVULVNKEsiwV3aQmXw==\",\n      \"dev\": true\n    },\n    \"node_modules/@types/node\": {\n      \"version\": \"20.10.1\",\n      \"resolved\": \"https://registry.npmjs.org/@types/node/-/node-20.10.1.tgz\",\n      \"integrity\": \"sha512-T2qwhjWwGH81vUEx4EXmBKsTJRXFXNZTL4v0gi01+zyBmCwzE6TyHszqX01m+QHTEq+EZNo13NeJIdEqf+Myrg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"undici-types\": \"~5.26.4\"\n      }\n    },\n    \"node_modules/ajv\": {\n      \"version\": \"8.12.0\",\n      \"resolved\": \"https://registry.npmjs.org/ajv/-/ajv-8.12.0.tgz\",\n      \"integrity\": \"sha512-sRu1kpcO9yLtYxBKvqfTeh9KzZEwO3STyX1HT+4CaDzC6HpTGYhIhPIzj9XuKU7KYDwnaeh5hcOwjy1QuJzBPA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"fast-deep-equal\": \"^3.1.1\",\n        \"json-schema-traverse\": \"^1.0.0\",\n        \"require-from-string\": \"^2.0.2\",\n        \"uri-js\": \"^4.2.2\"\n      },\n      \"funding\": {\n        \"type\": \"github\",\n        \"url\": \"https://github.com/sponsors/epoberezkin\"\n      }\n    },\n    \"node_modules/ajv-formats\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/ajv-formats/-/ajv-formats-2.1.1.tgz\",\n      \"integrity\": \"sha512-Wx0Kx52hxE7C18hkMEggYlEifqWZtYaRgouJor+WMdPnQyEK13vgEWyVNup7SoeeoLMsr4kf5h6dOW11I15MUA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ajv\": \"^8.0.0\"\n      },\n      \"peerDependencies\": {\n        \"ajv\": \"^8.0.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"ajv\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/ansi-colors\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-colors/-/ansi-colors-4.1.1.tgz\",\n      \"integrity\": \"sha512-JoX0apGbHaUJBNl6yF+p6JAFYZ666/hhCGKN5t9QFjbJQKUU/g8MNbFDbvfrgKXvI1QpZplPOnwIo99lX/AAmA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/ansi-escapes\": {\n      \"version\": \"6.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-6.2.0.tgz\",\n      \"integrity\": \"sha512-kzRaCqXnpzWs+3z5ABPQiVke+iq0KXkHo8xiWV4RPTi5Yli0l97BEQuhXV1s7+aSU/fu1kUuxgS4MsQ0fRuygw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"type-fest\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=14.16\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/ansi-regex\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\",\n      \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-convert\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/ansi-styles?sponsor=1\"\n      }\n    },\n    \"node_modules/ansicolors\": {\n      \"version\": \"0.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/ansicolors/-/ansicolors-0.3.2.tgz\",\n      \"integrity\": \"sha512-QXu7BPrP29VllRxH8GwB7x5iX5qWKAAMLqKQGWTeLWVlNHNOpVMJ91dsxQAIWXpjuW5wqvxu3Jd/nRjrJ+0pqg==\",\n      \"dev\": true\n    },\n    \"node_modules/anymatch\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz\",\n      \"integrity\": \"sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"normalize-path\": \"^3.0.0\",\n        \"picomatch\": \"^2.0.4\"\n      },\n      \"engines\": {\n        \"node\": \">= 8\"\n      }\n    },\n    \"node_modules/argparse\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz\",\n      \"integrity\": \"sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==\",\n      \"dev\": true\n    },\n    \"node_modules/balanced-match\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\n      \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\",\n      \"dev\": true\n    },\n    \"node_modules/binary-extensions\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.2.0.tgz\",\n      \"integrity\": \"sha512-jDctJ/IVQbZoJykoeHbhXpOlNBqGNcwXJKJog42E5HDPUwQTSdjCHdihjj0DlnheQ7blbT6dHOafNAiS8ooQKA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/brace-expansion\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz\",\n      \"integrity\": \"sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"balanced-match\": \"^1.0.0\"\n      }\n    },\n    \"node_modules/braces\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/braces/-/braces-3.0.3.tgz\",\n      \"integrity\": \"sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"fill-range\": \"^7.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/browser-stdout\": {\n      \"version\": \"1.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/browser-stdout/-/browser-stdout-1.3.1.tgz\",\n      \"integrity\": \"sha512-qhAVI1+Av2X7qelOfAIYwXONood6XlZE/fXaBSmW/T5SzLAmCgzi+eiWE7fUvbHaeNBQH13UftjpXxsfLkMpgw==\",\n      \"dev\": true\n    },\n    \"node_modules/builtins\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/builtins/-/builtins-5.0.1.tgz\",\n      \"integrity\": \"sha512-qwVpFEHNfhYJIzNRBvd2C1kyo6jz3ZSMPyyuR47OPdiKWlbYnZNyDWuyR175qDnAJLiCo5fBBqPb3RiXgWlkOQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"semver\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/camelcase\": {\n      \"version\": \"6.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/camelcase/-/camelcase-6.3.0.tgz\",\n      \"integrity\": \"sha512-Gmy6FhYlCY7uOElZUSbxo2UCDH8owEk996gkbrpsgGtrJLM3J7jGxl9Ic7Qwwj4ivOE5AWZWRMecDdF7hqGjFA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/cardinal\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/cardinal/-/cardinal-2.1.1.tgz\",\n      \"integrity\": \"sha512-JSr5eOgoEymtYHBjNWyjrMqet9Am2miJhlfKNdqLp6zoeAh0KN5dRAcxlecj5mAJrmQomgiOBj35xHLrFjqBpw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansicolors\": \"~0.3.2\",\n        \"redeyed\": \"~2.1.0\"\n      },\n      \"bin\": {\n        \"cdl\": \"bin/cdl.js\"\n      }\n    },\n    \"node_modules/chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/chalk/node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/char-regex\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/char-regex/-/char-regex-1.0.2.tgz\",\n      \"integrity\": \"sha512-kWWXztvZ5SBQV+eRgKFeh8q5sLuZY2+8WUIzlxWVTg+oGwY14qylx1KbKzHd8P6ZYkAg0xyIDU9JMHhyJMZ1jw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/chokidar\": {\n      \"version\": \"3.5.3\",\n      \"resolved\": \"https://registry.npmjs.org/chokidar/-/chokidar-3.5.3.tgz\",\n      \"integrity\": \"sha512-Dr3sfKRP6oTcjf2JmUmFJfeVMvXBdegxB0iVQ5eb2V10uFJUCAS8OByZdVAyVb8xXNz3GjjTgj9kLWsZTqE6kw==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"individual\",\n          \"url\": \"https://paulmillr.com/funding/\"\n        }\n      ],\n      \"dependencies\": {\n        \"anymatch\": \"~3.1.2\",\n        \"braces\": \"~3.0.2\",\n        \"glob-parent\": \"~5.1.2\",\n        \"is-binary-path\": \"~2.1.0\",\n        \"is-glob\": \"~4.0.1\",\n        \"normalize-path\": \"~3.0.0\",\n        \"readdirp\": \"~3.6.0\"\n      },\n      \"engines\": {\n        \"node\": \">= 8.10.0\"\n      },\n      \"optionalDependencies\": {\n        \"fsevents\": \"~2.3.2\"\n      }\n    },\n    \"node_modules/cli-table3\": {\n      \"version\": \"0.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/cli-table3/-/cli-table3-0.6.3.tgz\",\n      \"integrity\": \"sha512-w5Jac5SykAeZJKntOxJCrm63Eg5/4dhMWIcuTbo9rpE+brgaSZo0RuNJZeOyMgsUdhDeojvgyQLmjI+K50ZGyg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"string-width\": \"^4.2.0\"\n      },\n      \"engines\": {\n        \"node\": \"10.* || >= 12.*\"\n      },\n      \"optionalDependencies\": {\n        \"@colors/colors\": \"1.5.0\"\n      }\n    },\n    \"node_modules/cliui\": {\n      \"version\": \"7.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/cliui/-/cliui-7.0.4.tgz\",\n      \"integrity\": \"sha512-OcRE68cOsVMXp1Yvonl/fzkQOyjLSu/8bhPDfQt0e0/Eb283TKP20Fs2MqoPsr9SwA595rRCA+QMzYc9nBP+JQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"string-width\": \"^4.2.0\",\n        \"strip-ansi\": \"^6.0.0\",\n        \"wrap-ansi\": \"^7.0.0\"\n      }\n    },\n    \"node_modules/color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"color-name\": \"~1.1.4\"\n      },\n      \"engines\": {\n        \"node\": \">=7.0.0\"\n      }\n    },\n    \"node_modules/color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"node_modules/commander\": {\n      \"version\": \"10.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/commander/-/commander-10.0.1.tgz\",\n      \"integrity\": \"sha512-y4Mg2tXshplEbSGzx7amzPwKKOCGuoSRP/CjEdwwk0FOGlUbq6lKuoyDZTNZkmxHdJtp54hdfY/JUrdL7Xfdug==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=14\"\n      }\n    },\n    \"node_modules/debug\": {\n      \"version\": \"4.3.4\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.4.tgz\",\n      \"integrity\": \"sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ms\": \"2.1.2\"\n      },\n      \"engines\": {\n        \"node\": \">=6.0\"\n      },\n      \"peerDependenciesMeta\": {\n        \"supports-color\": {\n          \"optional\": true\n        }\n      }\n    },\n    \"node_modules/debug/node_modules/ms\": {\n      \"version\": \"2.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n      \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\n      \"dev\": true\n    },\n    \"node_modules/decamelize\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/decamelize/-/decamelize-4.0.0.tgz\",\n      \"integrity\": \"sha512-9iE1PgSik9HeIIw2JO94IidnE3eBoQrFJ3w7sFuzSX4DpmZ3v5sZpUiV5Swcf6mQEF+Y0ru8Neo+p+nyh2J+hQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/diff\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/diff/-/diff-5.0.0.tgz\",\n      \"integrity\": \"sha512-/VTCrvm5Z0JGty/BWHljh+BAiw3IK+2j87NGMu8Nwc/f48WoDAC395uomO9ZD117ZOBaHmkX1oyLvkVM/aIT3w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.3.1\"\n      }\n    },\n    \"node_modules/emoji-regex\": {\n      \"version\": \"8.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz\",\n      \"integrity\": \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\",\n      \"dev\": true\n    },\n    \"node_modules/emojilib\": {\n      \"version\": \"2.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/emojilib/-/emojilib-2.4.0.tgz\",\n      \"integrity\": \"sha512-5U0rVMU5Y2n2+ykNLQqMoqklN9ICBT/KsvC1Gz6vqHbz2AXXGkG+Pm5rMWk/8Vjrr/mY9985Hi8DYzn1F09Nyw==\",\n      \"dev\": true\n    },\n    \"node_modules/esbuild\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild/-/esbuild-0.15.7.tgz\",\n      \"integrity\": \"sha512-7V8tzllIbAQV1M4QoE52ImKu8hT/NLGlGXkiDsbEU5PS6K8Mn09ZnYoS+dcmHxOS9CRsV4IRAMdT3I67IyUNXw==\",\n      \"dev\": true,\n      \"hasInstallScript\": true,\n      \"bin\": {\n        \"esbuild\": \"bin/esbuild\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"optionalDependencies\": {\n        \"@esbuild/linux-loong64\": \"0.15.7\",\n        \"esbuild-android-64\": \"0.15.7\",\n        \"esbuild-android-arm64\": \"0.15.7\",\n        \"esbuild-darwin-64\": \"0.15.7\",\n        \"esbuild-darwin-arm64\": \"0.15.7\",\n        \"esbuild-freebsd-64\": \"0.15.7\",\n        \"esbuild-freebsd-arm64\": \"0.15.7\",\n        \"esbuild-linux-32\": \"0.15.7\",\n        \"esbuild-linux-64\": \"0.15.7\",\n        \"esbuild-linux-arm\": \"0.15.7\",\n        \"esbuild-linux-arm64\": \"0.15.7\",\n        \"esbuild-linux-mips64le\": \"0.15.7\",\n        \"esbuild-linux-ppc64le\": \"0.15.7\",\n        \"esbuild-linux-riscv64\": \"0.15.7\",\n        \"esbuild-linux-s390x\": \"0.15.7\",\n        \"esbuild-netbsd-64\": \"0.15.7\",\n        \"esbuild-openbsd-64\": \"0.15.7\",\n        \"esbuild-sunos-64\": \"0.15.7\",\n        \"esbuild-windows-32\": \"0.15.7\",\n        \"esbuild-windows-64\": \"0.15.7\",\n        \"esbuild-windows-arm64\": \"0.15.7\"\n      }\n    },\n    \"node_modules/esbuild-android-64\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-android-64/-/esbuild-android-64-0.15.7.tgz\",\n      \"integrity\": \"sha512-p7rCvdsldhxQr3YHxptf1Jcd86dlhvc3EQmQJaZzzuAxefO9PvcI0GLOa5nCWem1AJ8iMRu9w0r5TG8pHmbi9w==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"android\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/esbuild-android-arm64\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-android-arm64/-/esbuild-android-arm64-0.15.7.tgz\",\n      \"integrity\": \"sha512-L775l9ynJT7rVqRM5vo+9w5g2ysbOCfsdLV4CWanTZ1k/9Jb3IYlQ06VCI1edhcosTYJRECQFJa3eAvkx72eyQ==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"android\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/esbuild-darwin-64\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-darwin-64/-/esbuild-darwin-64-0.15.7.tgz\",\n      \"integrity\": \"sha512-KGPt3r1c9ww009t2xLB6Vk0YyNOXh7hbjZ3EecHoVDxgtbUlYstMPDaReimKe6eOEfyY4hBEEeTvKwPsiH5WZg==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/esbuild-darwin-arm64\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-darwin-arm64/-/esbuild-darwin-arm64-0.15.7.tgz\",\n      \"integrity\": \"sha512-kBIHvtVqbSGajN88lYMnR3aIleH3ABZLLFLxwL2stiuIGAjGlQW741NxVTpUHQXUmPzxi6POqc9npkXa8AcSZQ==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/esbuild-freebsd-64\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-freebsd-64/-/esbuild-freebsd-64-0.15.7.tgz\",\n      \"integrity\": \"sha512-hESZB91qDLV5MEwNxzMxPfbjAhOmtfsr9Wnuci7pY6TtEh4UDuevmGmkUIjX/b+e/k4tcNBMf7SRQ2mdNuK/HQ==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"freebsd\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/esbuild-freebsd-arm64\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-freebsd-arm64/-/esbuild-freebsd-arm64-0.15.7.tgz\",\n      \"integrity\": \"sha512-dLFR0ChH5t+b3J8w0fVKGvtwSLWCv7GYT2Y2jFGulF1L5HftQLzVGN+6pi1SivuiVSmTh28FwUhi9PwQicXI6Q==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"freebsd\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/esbuild-linux-32\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-linux-32/-/esbuild-linux-32-0.15.7.tgz\",\n      \"integrity\": \"sha512-v3gT/LsONGUZcjbt2swrMjwxo32NJzk+7sAgtxhGx1+ZmOFaTRXBAi1PPfgpeo/J//Un2jIKm/I+qqeo4caJvg==\",\n      \"cpu\": [\n        \"ia32\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/esbuild-linux-64\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-linux-64/-/esbuild-linux-64-0.15.7.tgz\",\n      \"integrity\": \"sha512-LxXEfLAKwOVmm1yecpMmWERBshl+Kv5YJ/1KnyAr6HRHFW8cxOEsEfisD3sVl/RvHyW//lhYUVSuy9jGEfIRAQ==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/esbuild-linux-arm\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-linux-arm/-/esbuild-linux-arm-0.15.7.tgz\",\n      \"integrity\": \"sha512-JKgAHtMR5f75wJTeuNQbyznZZa+pjiUHV7sRZp42UNdyXC6TiUYMW/8z8yIBAr2Fpad8hM1royZKQisqPABPvQ==\",\n      \"cpu\": [\n        \"arm\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/esbuild-linux-arm64\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-linux-arm64/-/esbuild-linux-arm64-0.15.7.tgz\",\n      \"integrity\": \"sha512-P3cfhudpzWDkglutWgXcT2S7Ft7o2e3YDMrP1n0z2dlbUZghUkKCyaWw0zhp4KxEEzt/E7lmrtRu/pGWnwb9vw==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/esbuild-linux-mips64le\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-linux-mips64le/-/esbuild-linux-mips64le-0.15.7.tgz\",\n      \"integrity\": \"sha512-T7XKuxl0VpeFLCJXub6U+iybiqh0kM/bWOTb4qcPyDDwNVhLUiPcGdG2/0S7F93czUZOKP57YiLV8YQewgLHKw==\",\n      \"cpu\": [\n        \"mips64el\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/esbuild-linux-ppc64le\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-linux-ppc64le/-/esbuild-linux-ppc64le-0.15.7.tgz\",\n      \"integrity\": \"sha512-6mGuC19WpFN7NYbecMIJjeQgvDb5aMuvyk0PDYBJrqAEMkTwg3Z98kEKuCm6THHRnrgsdr7bp4SruSAxEM4eJw==\",\n      \"cpu\": [\n        \"ppc64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/esbuild-linux-riscv64\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-linux-riscv64/-/esbuild-linux-riscv64-0.15.7.tgz\",\n      \"integrity\": \"sha512-uUJsezbswAYo/X7OU/P+PuL/EI9WzxsEQXDekfwpQ23uGiooxqoLFAPmXPcRAt941vjlY9jtITEEikWMBr+F/g==\",\n      \"cpu\": [\n        \"riscv64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/esbuild-linux-s390x\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-linux-s390x/-/esbuild-linux-s390x-0.15.7.tgz\",\n      \"integrity\": \"sha512-+tO+xOyTNMc34rXlSxK7aCwJgvQyffqEM5MMdNDEeMU3ss0S6wKvbBOQfgd5jRPblfwJ6b+bKiz0g5nABpY0QQ==\",\n      \"cpu\": [\n        \"s390x\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"linux\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/esbuild-netbsd-64\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-netbsd-64/-/esbuild-netbsd-64-0.15.7.tgz\",\n      \"integrity\": \"sha512-yVc4Wz+Pu3cP5hzm5kIygNPrjar/v5WCSoRmIjCPWfBVJkZNb5brEGKUlf+0Y759D48BCWa0WHrWXaNy0DULTQ==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"netbsd\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/esbuild-openbsd-64\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-openbsd-64/-/esbuild-openbsd-64-0.15.7.tgz\",\n      \"integrity\": \"sha512-GsimbwC4FSR4lN3wf8XmTQ+r8/0YSQo21rWDL0XFFhLHKlzEA4SsT1Tl8bPYu00IU6UWSJ+b3fG/8SB69rcuEQ==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"openbsd\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/esbuild-sunos-64\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-sunos-64/-/esbuild-sunos-64-0.15.7.tgz\",\n      \"integrity\": \"sha512-8CDI1aL/ts0mDGbWzjEOGKXnU7p3rDzggHSBtVryQzkSOsjCHRVe0iFYUuhczlxU1R3LN/E7HgUO4NXzGGP/Ag==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"sunos\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/esbuild-windows-32\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-windows-32/-/esbuild-windows-32-0.15.7.tgz\",\n      \"integrity\": \"sha512-cOnKXUEPS8EGCzRSFa1x6NQjGhGsFlVgjhqGEbLTPsA7x4RRYiy2RKoArNUU4iR2vHmzqS5Gr84MEumO/wxYKA==\",\n      \"cpu\": [\n        \"ia32\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/esbuild-windows-64\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-windows-64/-/esbuild-windows-64-0.15.7.tgz\",\n      \"integrity\": \"sha512-7MI08Ec2sTIDv+zH6StNBKO+2hGUYIT42GmFyW6MBBWWtJhTcQLinKS6ldIN1d52MXIbiJ6nXyCJ+LpL4jBm3Q==\",\n      \"cpu\": [\n        \"x64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/esbuild-windows-arm64\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-windows-arm64/-/esbuild-windows-arm64-0.15.7.tgz\",\n      \"integrity\": \"sha512-R06nmqBlWjKHddhRJYlqDd3Fabx9LFdKcjoOy08YLimwmsswlFBJV4rXzZCxz/b7ZJXvrZgj8DDv1ewE9+StMw==\",\n      \"cpu\": [\n        \"arm64\"\n      ],\n      \"dev\": true,\n      \"optional\": true,\n      \"os\": [\n        \"win32\"\n      ],\n      \"engines\": {\n        \"node\": \">=12\"\n      }\n    },\n    \"node_modules/escalade\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/escalade/-/escalade-3.1.1.tgz\",\n      \"integrity\": \"sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/escape-string-regexp\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz\",\n      \"integrity\": \"sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/esprima\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz\",\n      \"integrity\": \"sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==\",\n      \"dev\": true,\n      \"bin\": {\n        \"esparse\": \"bin/esparse.js\",\n        \"esvalidate\": \"bin/esvalidate.js\"\n      },\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/fast-deep-equal\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz\",\n      \"integrity\": \"sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==\",\n      \"dev\": true\n    },\n    \"node_modules/fflate\": {\n      \"version\": \"0.7.4\",\n      \"resolved\": \"https://registry.npmjs.org/fflate/-/fflate-0.7.4.tgz\",\n      \"integrity\": \"sha512-5u2V/CDW15QM1XbbgS+0DfPxVB+jUKhWEKuuFuHncbk3tEEqzmoXL+2KyOFuKGqOnmdIy0/davWF1CkuwtibCw==\",\n      \"dev\": true\n    },\n    \"node_modules/fill-range\": {\n      \"version\": \"7.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz\",\n      \"integrity\": \"sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"to-regex-range\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/find-up\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz\",\n      \"integrity\": \"sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"locate-path\": \"^6.0.0\",\n        \"path-exists\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/flat\": {\n      \"version\": \"5.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/flat/-/flat-5.0.2.tgz\",\n      \"integrity\": \"sha512-b6suED+5/3rTpUBdG1gupIl8MPFCAMA0QXwmljLhvCUKcUvdE4gWky9zpuGCcXHOsz4J9wPGNWq6OKpmIzz3hQ==\",\n      \"dev\": true,\n      \"bin\": {\n        \"flat\": \"cli.js\"\n      }\n    },\n    \"node_modules/fs.realpath\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz\",\n      \"integrity\": \"sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==\",\n      \"dev\": true\n    },\n    \"node_modules/fsevents\": {\n      \"version\": \"2.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/fsevents/-/fsevents-2.3.2.tgz\",\n      \"integrity\": \"sha512-xiqMQR4xAeHTuB9uWm+fFRcIOgKBMiOBP+eXiyT7jsgVCq1bkVygt00oASowB7EdtpOHaaPgKt812P9ab+DDKA==\",\n      \"dev\": true,\n      \"hasInstallScript\": true,\n      \"optional\": true,\n      \"os\": [\n        \"darwin\"\n      ],\n      \"engines\": {\n        \"node\": \"^8.16.0 || ^10.6.0 || >=11.0.0\"\n      }\n    },\n    \"node_modules/get-caller-file\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz\",\n      \"integrity\": \"sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"6.* || 8.* || >= 10.*\"\n      }\n    },\n    \"node_modules/glob\": {\n      \"version\": \"8.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-8.1.0.tgz\",\n      \"integrity\": \"sha512-r8hpEjiQEYlF2QU0df3dS+nxxSIreXQS1qRhMJM0Q5NDdR386C7jb7Hwwod8Fgiuex+k0GFjgft18yvxm5XoCQ==\",\n      \"deprecated\": \"Glob versions prior to v9 are no longer supported\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"fs.realpath\": \"^1.0.0\",\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^5.0.1\",\n        \"once\": \"^1.3.0\"\n      },\n      \"engines\": {\n        \"node\": \">=12\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/isaacs\"\n      }\n    },\n    \"node_modules/glob-parent\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\",\n      \"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-glob\": \"^4.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">= 6\"\n      }\n    },\n    \"node_modules/has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/he\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/he/-/he-1.2.0.tgz\",\n      \"integrity\": \"sha512-F/1DnUGPopORZi0ni+CvrCgHQ5FyEAHRLSApuYWMmrbSwoN2Mn/7k+Gl38gJnR7yyDZk6WLXwiGod1JOWNDKGw==\",\n      \"dev\": true,\n      \"bin\": {\n        \"he\": \"bin/he\"\n      }\n    },\n    \"node_modules/inflight\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz\",\n      \"integrity\": \"sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==\",\n      \"deprecated\": \"This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"once\": \"^1.3.0\",\n        \"wrappy\": \"1\"\n      }\n    },\n    \"node_modules/inherits\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\n      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\",\n      \"dev\": true\n    },\n    \"node_modules/is-binary-path\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz\",\n      \"integrity\": \"sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"binary-extensions\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-extglob\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz\",\n      \"integrity\": \"sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-fullwidth-code-point\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz\",\n      \"integrity\": \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-glob\": {\n      \"version\": \"4.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz\",\n      \"integrity\": \"sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-extglob\": \"^2.1.1\"\n      },\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/is-number\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz\",\n      \"integrity\": \"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.12.0\"\n      }\n    },\n    \"node_modules/is-plain-obj\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-plain-obj/-/is-plain-obj-2.1.0.tgz\",\n      \"integrity\": \"sha512-YWnfyRwxL/+SsrWYfOpUtz5b3YD+nyfkHvjbcanzk8zgyO4ASD67uVMRt8k5bM4lLMDnXfriRhOpemw+NfT1eA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/is-unicode-supported\": {\n      \"version\": \"0.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-unicode-supported/-/is-unicode-supported-0.1.0.tgz\",\n      \"integrity\": \"sha512-knxG2q4UC3u8stRGyAVJCOdxFmv5DZiRcdlIaAQXAbSfJya+OhopNotLQrstBhququ4ZpuKbDc/8S6mgXgPFPw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/js-yaml\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz\",\n      \"integrity\": \"sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"argparse\": \"^2.0.1\"\n      },\n      \"bin\": {\n        \"js-yaml\": \"bin/js-yaml.js\"\n      }\n    },\n    \"node_modules/json-schema-traverse\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-1.0.0.tgz\",\n      \"integrity\": \"sha512-NM8/P9n3XjXhIZn1lLhkFaACTOURQXjWhV4BA/RnOv8xvgqtqpAX9IO4mRQxSx1Rlo4tqzeqb0sOlruaOy3dug==\",\n      \"dev\": true\n    },\n    \"node_modules/locate-path\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz\",\n      \"integrity\": \"sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"p-locate\": \"^5.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/log-symbols\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/log-symbols/-/log-symbols-4.1.0.tgz\",\n      \"integrity\": \"sha512-8XPvpAA8uyhfteu8pIvQxpJZ7SYYdpUivZpGy6sFsBuKRY/7rQGavedeB8aK+Zkyq6upMFVL/9AW6vOYzfRyLg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"chalk\": \"^4.1.0\",\n        \"is-unicode-supported\": \"^0.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/lru-cache\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz\",\n      \"integrity\": \"sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"yallist\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/marked\": {\n      \"version\": \"9.1.6\",\n      \"resolved\": \"https://registry.npmjs.org/marked/-/marked-9.1.6.tgz\",\n      \"integrity\": \"sha512-jcByLnIFkd5gSXZmjNvS1TlmRhCXZjIzHYlaGkPlLIekG55JDR2Z4va9tZwCiP+/RDERiNhMOFu01xd6O5ct1Q==\",\n      \"dev\": true,\n      \"bin\": {\n        \"marked\": \"bin/marked.js\"\n      },\n      \"engines\": {\n        \"node\": \">= 16\"\n      }\n    },\n    \"node_modules/marked-terminal\": {\n      \"version\": \"6.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/marked-terminal/-/marked-terminal-6.1.0.tgz\",\n      \"integrity\": \"sha512-QaCSF6NV82oo6K0szEnmc65ooDeW0T/Adcyf0fcW+Hto2GT1VADFg8dn1zaeHqzj65fqDH1hMNChGNRaC/lbkA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-escapes\": \"^6.2.0\",\n        \"cardinal\": \"^2.1.1\",\n        \"chalk\": \"^5.3.0\",\n        \"cli-table3\": \"^0.6.3\",\n        \"node-emoji\": \"^2.1.0\",\n        \"supports-hyperlinks\": \"^3.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=16.0.0\"\n      },\n      \"peerDependencies\": {\n        \"marked\": \">=1 <11\"\n      }\n    },\n    \"node_modules/marked-terminal/node_modules/chalk\": {\n      \"version\": \"5.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-5.3.0.tgz\",\n      \"integrity\": \"sha512-dLitG79d+GV1Nb/VYcCDFivJeK1hiukt9QjRNVOsUtTy1rR1YJsmpGGTZ3qJos+uw7WmWF4wUwBd9jxjocFC2w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \"^12.17.0 || ^14.13 || >=16.0.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/chalk?sponsor=1\"\n      }\n    },\n    \"node_modules/minimatch\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-5.0.1.tgz\",\n      \"integrity\": \"sha512-nLDxIFRyhDblz3qMuq+SoRZED4+miJ/G+tdDrjkkkRnjAsBexeGpgjLEQ0blJy7rHhR2b93rhQY4SvyWu9v03g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"brace-expansion\": \"^2.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/mocha\": {\n      \"version\": \"10.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/mocha/-/mocha-10.4.0.tgz\",\n      \"integrity\": \"sha512-eqhGB8JKapEYcC4ytX/xrzKforgEc3j1pGlAXVy3eRwrtAy5/nIfT1SvgGzfN0XZZxeLq0aQWkOUAmqIJiv+bA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-colors\": \"4.1.1\",\n        \"browser-stdout\": \"1.3.1\",\n        \"chokidar\": \"3.5.3\",\n        \"debug\": \"4.3.4\",\n        \"diff\": \"5.0.0\",\n        \"escape-string-regexp\": \"4.0.0\",\n        \"find-up\": \"5.0.0\",\n        \"glob\": \"8.1.0\",\n        \"he\": \"1.2.0\",\n        \"js-yaml\": \"4.1.0\",\n        \"log-symbols\": \"4.1.0\",\n        \"minimatch\": \"5.0.1\",\n        \"ms\": \"2.1.3\",\n        \"serialize-javascript\": \"6.0.0\",\n        \"strip-json-comments\": \"3.1.1\",\n        \"supports-color\": \"8.1.1\",\n        \"workerpool\": \"6.2.1\",\n        \"yargs\": \"16.2.0\",\n        \"yargs-parser\": \"20.2.4\",\n        \"yargs-unparser\": \"2.0.0\"\n      },\n      \"bin\": {\n        \"_mocha\": \"bin/_mocha\",\n        \"mocha\": \"bin/mocha.js\"\n      },\n      \"engines\": {\n        \"node\": \">= 14.0.0\"\n      }\n    },\n    \"node_modules/ms\": {\n      \"version\": \"2.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\n      \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\",\n      \"dev\": true\n    },\n    \"node_modules/node-emoji\": {\n      \"version\": \"2.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/node-emoji/-/node-emoji-2.1.3.tgz\",\n      \"integrity\": \"sha512-E2WEOVsgs7O16zsURJ/eH8BqhF029wGpEOnv7Urwdo2wmQanOACwJQh0devF9D9RhoZru0+9JXIS0dBXIAz+lA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"@sindresorhus/is\": \"^4.6.0\",\n        \"char-regex\": \"^1.0.2\",\n        \"emojilib\": \"^2.4.0\",\n        \"skin-tone\": \"^2.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=18\"\n      }\n    },\n    \"node_modules/normalize-path\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz\",\n      \"integrity\": \"sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/once\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/once/-/once-1.4.0.tgz\",\n      \"integrity\": \"sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"wrappy\": \"1\"\n      }\n    },\n    \"node_modules/p-limit\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz\",\n      \"integrity\": \"sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"yocto-queue\": \"^0.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/p-locate\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz\",\n      \"integrity\": \"sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"p-limit\": \"^3.0.2\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/path-exists\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz\",\n      \"integrity\": \"sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/picomatch\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\n      \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8.6\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/jonschlinkert\"\n      }\n    },\n    \"node_modules/prettier\": {\n      \"version\": \"2.8.8\",\n      \"resolved\": \"https://registry.npmjs.org/prettier/-/prettier-2.8.8.tgz\",\n      \"integrity\": \"sha512-tdN8qQGvNjw4CHbY+XXk0JgCXn9QiF21a55rBe5LJAU+kDyC4WQn4+awm2Xfk2lQMk5fKup9XgzTZtGkjBdP9Q==\",\n      \"dev\": true,\n      \"bin\": {\n        \"prettier\": \"bin-prettier.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10.13.0\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/prettier/prettier?sponsor=1\"\n      }\n    },\n    \"node_modules/punycode\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/punycode/-/punycode-2.3.0.tgz\",\n      \"integrity\": \"sha512-rRV+zQD8tVFys26lAGR9WUuS4iUAngJScM+ZRSKtvl5tKeZ2t5bvdNFdNHBW9FWR4guGHlgmsZ1G7BSm2wTbuA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=6\"\n      }\n    },\n    \"node_modules/randombytes\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/randombytes/-/randombytes-2.1.0.tgz\",\n      \"integrity\": \"sha512-vYl3iOX+4CKUWuxGi9Ukhie6fsqXqS9FE2Zaic4tNFD2N2QQaXOMFbuKK4QmDHC0JO6B1Zp41J0LpT0oR68amQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"safe-buffer\": \"^5.1.0\"\n      }\n    },\n    \"node_modules/readdirp\": {\n      \"version\": \"3.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz\",\n      \"integrity\": \"sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"picomatch\": \"^2.2.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8.10.0\"\n      }\n    },\n    \"node_modules/redeyed\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/redeyed/-/redeyed-2.1.1.tgz\",\n      \"integrity\": \"sha512-FNpGGo1DycYAdnrKFxCMmKYgo/mILAqtRYbkdQD8Ep/Hk2PQ5+aEAEx+IU713RTDmuBaH0c8P5ZozurNu5ObRQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"esprima\": \"~4.0.0\"\n      }\n    },\n    \"node_modules/require-directory\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz\",\n      \"integrity\": \"sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/require-from-string\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/require-from-string/-/require-from-string-2.0.2.tgz\",\n      \"integrity\": \"sha512-Xf0nWe6RseziFMu+Ap9biiUbmplq6S9/p+7w7YXP/JBHhrUDDUhwa+vANyubuqfZWTveU//DYVGsDG7RKL/vEw==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=0.10.0\"\n      }\n    },\n    \"node_modules/safe-buffer\": {\n      \"version\": \"5.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz\",\n      \"integrity\": \"sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==\",\n      \"dev\": true,\n      \"funding\": [\n        {\n          \"type\": \"github\",\n          \"url\": \"https://github.com/sponsors/feross\"\n        },\n        {\n          \"type\": \"patreon\",\n          \"url\": \"https://www.patreon.com/feross\"\n        },\n        {\n          \"type\": \"consulting\",\n          \"url\": \"https://feross.org/support\"\n        }\n      ]\n    },\n    \"node_modules/semver\": {\n      \"version\": \"7.5.4\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.5.4.tgz\",\n      \"integrity\": \"sha512-1bCSESV6Pv+i21Hvpxp3Dx+pSD8lIPt8uVjRrxAUt/nbswYc+tK6Y2btiULjd4+fnq15PX+nqQDC7Oft7WkwcA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"lru-cache\": \"^6.0.0\"\n      },\n      \"bin\": {\n        \"semver\": \"bin/semver.js\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/serialize-javascript\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/serialize-javascript/-/serialize-javascript-6.0.0.tgz\",\n      \"integrity\": \"sha512-Qr3TosvguFt8ePWqsvRfrKyQXIiW+nGbYpy8XK24NQHE83caxWt+mIymTT19DGFbNWNLfEwsrkSmN64lVWB9ag==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"randombytes\": \"^2.1.0\"\n      }\n    },\n    \"node_modules/skin-tone\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/skin-tone/-/skin-tone-2.0.0.tgz\",\n      \"integrity\": \"sha512-kUMbT1oBJCpgrnKoSr0o6wPtvRWT9W9UKvGLwfJYO2WuahZRHOpEyL1ckyMGgMWh0UdpmaoFqKKD29WTomNEGA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"unicode-emoji-modifier-base\": \"^1.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/string-width\": {\n      \"version\": \"4.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n      \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/strip-ansi\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n      \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-regex\": \"^5.0.1\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/strip-json-comments\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz\",\n      \"integrity\": \"sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=8\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/supports-color\": {\n      \"version\": \"8.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-8.1.1.tgz\",\n      \"integrity\": \"sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/supports-color?sponsor=1\"\n      }\n    },\n    \"node_modules/supports-hyperlinks\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-hyperlinks/-/supports-hyperlinks-3.0.0.tgz\",\n      \"integrity\": \"sha512-QBDPHyPQDRTy9ku4URNGY5Lah8PAaXs6tAAwp55sL5WCsSW7GIfdf6W5ixfziW+t7wh3GVvHyHHyQ1ESsoRvaA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\",\n        \"supports-color\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=14.18\"\n      }\n    },\n    \"node_modules/supports-hyperlinks/node_modules/supports-color\": {\n      \"version\": \"7.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n      \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"has-flag\": \"^4.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8\"\n      }\n    },\n    \"node_modules/to-regex-range\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz\",\n      \"integrity\": \"sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"is-number\": \"^7.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=8.0\"\n      }\n    },\n    \"node_modules/type-fest\": {\n      \"version\": \"3.13.1\",\n      \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-3.13.1.tgz\",\n      \"integrity\": \"sha512-tLq3bSNx+xSpwvAJnzrK0Ep5CLNWjvFTOp71URMaAEWBfRb9nnJiBoUe0tF8bI4ZFO3omgBR6NvnbzVUT3Ly4g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=14.16\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    },\n    \"node_modules/typescript\": {\n      \"version\": \"5.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/typescript/-/typescript-5.7.2.tgz\",\n      \"integrity\": \"sha512-i5t66RHxDvVN40HfDd1PsEThGNnlMCMT3jMUuoh9/0TaqWevNontacunWyN02LA9/fIbEWlcHZcgTKb9QoaLfg==\",\n      \"dev\": true,\n      \"bin\": {\n        \"tsc\": \"bin/tsc\",\n        \"tsserver\": \"bin/tsserver\"\n      },\n      \"engines\": {\n        \"node\": \">=14.17\"\n      }\n    },\n    \"node_modules/undici-types\": {\n      \"version\": \"5.26.5\",\n      \"resolved\": \"https://registry.npmjs.org/undici-types/-/undici-types-5.26.5.tgz\",\n      \"integrity\": \"sha512-JlCMO+ehdEIKqlFxk6IfVoAUVmgz7cU7zD/h9XZ0qzeosSHmUJVOzSQvvYSYWXkFXC+IfLKSIffhv0sVZup6pA==\",\n      \"dev\": true\n    },\n    \"node_modules/unicode-emoji-modifier-base\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/unicode-emoji-modifier-base/-/unicode-emoji-modifier-base-1.0.0.tgz\",\n      \"integrity\": \"sha512-yLSH4py7oFH3oG/9K+XWrz1pSi3dfUrWEnInbxMfArOfc1+33BlGPQtLsOYwvdMy11AwUBetYuaRxSPqgkq+8g==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=4\"\n      }\n    },\n    \"node_modules/uri-js\": {\n      \"version\": \"4.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz\",\n      \"integrity\": \"sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"punycode\": \"^2.1.0\"\n      }\n    },\n    \"node_modules/validate-npm-package-name\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/validate-npm-package-name/-/validate-npm-package-name-5.0.0.tgz\",\n      \"integrity\": \"sha512-YuKoXDAhBYxY7SfOKxHBDoSyENFeW5VvIIQp2TGQuit8gpK6MnWaQelBKxso72DoxTZfZdcP3W90LqpSkgPzLQ==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"builtins\": \"^5.0.0\"\n      },\n      \"engines\": {\n        \"node\": \"^14.17.0 || ^16.13.0 || >=18.0.0\"\n      }\n    },\n    \"node_modules/workerpool\": {\n      \"version\": \"6.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/workerpool/-/workerpool-6.2.1.tgz\",\n      \"integrity\": \"sha512-ILEIE97kDZvF9Wb9f6h5aXK4swSlKGUcOEGiIYb2OOu/IrDU9iwj0fD//SsA6E5ibwJxpEvhullJY4Sl4GcpAw==\",\n      \"dev\": true\n    },\n    \"node_modules/wrap-ansi\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz\",\n      \"integrity\": \"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"ansi-styles\": \"^4.0.0\",\n        \"string-width\": \"^4.1.0\",\n        \"strip-ansi\": \"^6.0.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/chalk/wrap-ansi?sponsor=1\"\n      }\n    },\n    \"node_modules/wrappy\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz\",\n      \"integrity\": \"sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==\",\n      \"dev\": true\n    },\n    \"node_modules/y18n\": {\n      \"version\": \"5.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz\",\n      \"integrity\": \"sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/yallist\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz\",\n      \"integrity\": \"sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==\",\n      \"dev\": true\n    },\n    \"node_modules/yargs\": {\n      \"version\": \"16.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/yargs/-/yargs-16.2.0.tgz\",\n      \"integrity\": \"sha512-D1mvvtDG0L5ft/jGWkLpG1+m0eQxOfaBvTNELraWj22wSVUMWxZUvYgJYcKh6jGGIkJFhH4IZPQhR4TKpc8mBw==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"cliui\": \"^7.0.2\",\n        \"escalade\": \"^3.1.1\",\n        \"get-caller-file\": \"^2.0.5\",\n        \"require-directory\": \"^2.1.1\",\n        \"string-width\": \"^4.2.0\",\n        \"y18n\": \"^5.0.5\",\n        \"yargs-parser\": \"^20.2.2\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/yargs-parser\": {\n      \"version\": \"20.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/yargs-parser/-/yargs-parser-20.2.4.tgz\",\n      \"integrity\": \"sha512-WOkpgNhPTlE73h4VFAFsOnomJVaovO8VqLDzy5saChRBFQFBoMYirowyW+Q9HB4HFF4Z7VZTiG3iSzJJA29yRA==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/yargs-unparser\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/yargs-unparser/-/yargs-unparser-2.0.0.tgz\",\n      \"integrity\": \"sha512-7pRTIA9Qc1caZ0bZ6RYRGbHJthJWuakf+WmHK0rVeLkNrrGhfoabBNdue6kdINI6r4if7ocq9aD/n7xwKOdzOA==\",\n      \"dev\": true,\n      \"dependencies\": {\n        \"camelcase\": \"^6.0.0\",\n        \"decamelize\": \"^4.0.0\",\n        \"flat\": \"^5.0.2\",\n        \"is-plain-obj\": \"^2.1.0\"\n      },\n      \"engines\": {\n        \"node\": \">=10\"\n      }\n    },\n    \"node_modules/yocto-queue\": {\n      \"version\": \"0.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz\",\n      \"integrity\": \"sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==\",\n      \"dev\": true,\n      \"engines\": {\n        \"node\": \">=10\"\n      },\n      \"funding\": {\n        \"url\": \"https://github.com/sponsors/sindresorhus\"\n      }\n    }\n  },\n  \"dependencies\": {\n    \"@andrewbranch/untar.js\": {\n      \"version\": \"1.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/@andrewbranch/untar.js/-/untar.js-1.0.3.tgz\",\n      \"integrity\": \"sha512-Jh15/qVmrLGhkKJBdXlK1+9tY4lZruYjsgkDFj08ZmDiWVBLJcqkok7Z0/R0In+i1rScBpJlSvrTS2Lm41Pbnw==\",\n      \"dev\": true\n    },\n    \"@arethetypeswrong/cli\": {\n      \"version\": \"0.13.2\",\n      \"resolved\": \"https://registry.npmjs.org/@arethetypeswrong/cli/-/cli-0.13.2.tgz\",\n      \"integrity\": \"sha512-eqRWeFFiI58xwsiUfZSdZsmNCaqqtxmSPP9554ajiCDrB/aNzq5VktVK7dNiT9PamunNeoej4KbDBnkNwVacvg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@arethetypeswrong/core\": \"0.13.2\",\n        \"chalk\": \"^4.1.2\",\n        \"cli-table3\": \"^0.6.3\",\n        \"commander\": \"^10.0.1\",\n        \"marked\": \"^9.1.2\",\n        \"marked-terminal\": \"^6.0.0\",\n        \"semver\": \"^7.5.4\"\n      }\n    },\n    \"@arethetypeswrong/core\": {\n      \"version\": \"0.13.2\",\n      \"resolved\": \"https://registry.npmjs.org/@arethetypeswrong/core/-/core-0.13.2.tgz\",\n      \"integrity\": \"sha512-1l6ygar+6TH4o1JipWWGCEZlOhAwEShm1yKx+CgIByNjCzufbu6k9DNbDmBjdouusNRhBIOYQe1UHnJig+GtAw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@andrewbranch/untar.js\": \"^1.0.3\",\n        \"fflate\": \"^0.7.4\",\n        \"semver\": \"^7.5.4\",\n        \"typescript\": \"5.3.2\",\n        \"validate-npm-package-name\": \"^5.0.0\"\n      },\n      \"dependencies\": {\n        \"typescript\": {\n          \"version\": \"5.3.2\",\n          \"resolved\": \"https://registry.npmjs.org/typescript/-/typescript-5.3.2.tgz\",\n          \"integrity\": \"sha512-6l+RyNy7oAHDfxC4FzSJcz9vnjTKxrLpDG5M2Vu4SHRVNg6xzqZp6LYSR9zjqQTu8DU/f5xwxUdADOkbrIX2gQ==\",\n          \"dev\": true\n        }\n      }\n    },\n    \"@colors/colors\": {\n      \"version\": \"1.5.0\",\n      \"resolved\": \"https://registry.npmjs.org/@colors/colors/-/colors-1.5.0.tgz\",\n      \"integrity\": \"sha512-ooWCrlZP11i8GImSjTHYHLkvFDP48nS4+204nGb1RiX/WXYHmJA2III9/e2DWVabCESdW7hBAEzHRqUn9OUVvQ==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"@esbuild/linux-loong64\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/@esbuild/linux-loong64/-/linux-loong64-0.15.7.tgz\",\n      \"integrity\": \"sha512-IKznSJOsVUuyt7cDzzSZyqBEcZe+7WlBqTVXiF1OXP/4Nm387ToaXZ0fyLwI1iBlI/bzpxVq411QE2/Bt2XWWw==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"@sinclair/hammer\": {\n      \"version\": \"0.18.0\",\n      \"resolved\": \"https://registry.npmjs.org/@sinclair/hammer/-/hammer-0.18.0.tgz\",\n      \"integrity\": \"sha512-nIrsOWvvCV/SjTSU4qcOsY3mEO8ErN2WBWzbn6mVpqDajy36lG9WbDEfR6Agm3LbN2pdPl1HGjKuiHpbpOTZ2A==\",\n      \"dev\": true,\n      \"requires\": {\n        \"esbuild\": \"0.15.7\"\n      }\n    },\n    \"@sindresorhus/is\": {\n      \"version\": \"4.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/@sindresorhus/is/-/is-4.6.0.tgz\",\n      \"integrity\": \"sha512-t09vSN3MdfsyCHoFcTRCH/iUtG7OJ0CsjzB8cjAmKc/va/kIgeDI/TxsigdncE/4be734m0cvIYwNaV4i2XqAw==\",\n      \"dev\": true\n    },\n    \"@types/mocha\": {\n      \"version\": \"9.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/@types/mocha/-/mocha-9.1.1.tgz\",\n      \"integrity\": \"sha512-Z61JK7DKDtdKTWwLeElSEBcWGRLY8g95ic5FoQqI9CMx0ns/Ghep3B4DfcEimiKMvtamNVULVNKEsiwV3aQmXw==\",\n      \"dev\": true\n    },\n    \"@types/node\": {\n      \"version\": \"20.10.1\",\n      \"resolved\": \"https://registry.npmjs.org/@types/node/-/node-20.10.1.tgz\",\n      \"integrity\": \"sha512-T2qwhjWwGH81vUEx4EXmBKsTJRXFXNZTL4v0gi01+zyBmCwzE6TyHszqX01m+QHTEq+EZNo13NeJIdEqf+Myrg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"undici-types\": \"~5.26.4\"\n      }\n    },\n    \"ajv\": {\n      \"version\": \"8.12.0\",\n      \"resolved\": \"https://registry.npmjs.org/ajv/-/ajv-8.12.0.tgz\",\n      \"integrity\": \"sha512-sRu1kpcO9yLtYxBKvqfTeh9KzZEwO3STyX1HT+4CaDzC6HpTGYhIhPIzj9XuKU7KYDwnaeh5hcOwjy1QuJzBPA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"fast-deep-equal\": \"^3.1.1\",\n        \"json-schema-traverse\": \"^1.0.0\",\n        \"require-from-string\": \"^2.0.2\",\n        \"uri-js\": \"^4.2.2\"\n      }\n    },\n    \"ajv-formats\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/ajv-formats/-/ajv-formats-2.1.1.tgz\",\n      \"integrity\": \"sha512-Wx0Kx52hxE7C18hkMEggYlEifqWZtYaRgouJor+WMdPnQyEK13vgEWyVNup7SoeeoLMsr4kf5h6dOW11I15MUA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"ajv\": \"^8.0.0\"\n      }\n    },\n    \"ansi-colors\": {\n      \"version\": \"4.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-colors/-/ansi-colors-4.1.1.tgz\",\n      \"integrity\": \"sha512-JoX0apGbHaUJBNl6yF+p6JAFYZ666/hhCGKN5t9QFjbJQKUU/g8MNbFDbvfrgKXvI1QpZplPOnwIo99lX/AAmA==\",\n      \"dev\": true\n    },\n    \"ansi-escapes\": {\n      \"version\": \"6.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-escapes/-/ansi-escapes-6.2.0.tgz\",\n      \"integrity\": \"sha512-kzRaCqXnpzWs+3z5ABPQiVke+iq0KXkHo8xiWV4RPTi5Yli0l97BEQuhXV1s7+aSU/fu1kUuxgS4MsQ0fRuygw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"type-fest\": \"^3.0.0\"\n      }\n    },\n    \"ansi-regex\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-regex/-/ansi-regex-5.0.1.tgz\",\n      \"integrity\": \"sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==\",\n      \"dev\": true\n    },\n    \"ansi-styles\": {\n      \"version\": \"4.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/ansi-styles/-/ansi-styles-4.3.0.tgz\",\n      \"integrity\": \"sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"color-convert\": \"^2.0.1\"\n      }\n    },\n    \"ansicolors\": {\n      \"version\": \"0.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/ansicolors/-/ansicolors-0.3.2.tgz\",\n      \"integrity\": \"sha512-QXu7BPrP29VllRxH8GwB7x5iX5qWKAAMLqKQGWTeLWVlNHNOpVMJ91dsxQAIWXpjuW5wqvxu3Jd/nRjrJ+0pqg==\",\n      \"dev\": true\n    },\n    \"anymatch\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/anymatch/-/anymatch-3.1.3.tgz\",\n      \"integrity\": \"sha512-KMReFUr0B4t+D+OBkjR3KYqvocp2XaSzO55UcB6mgQMd3KbcE+mWTyvVV7D/zsdEbNnV6acZUutkiHQXvTr1Rw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"normalize-path\": \"^3.0.0\",\n        \"picomatch\": \"^2.0.4\"\n      }\n    },\n    \"argparse\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/argparse/-/argparse-2.0.1.tgz\",\n      \"integrity\": \"sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==\",\n      \"dev\": true\n    },\n    \"balanced-match\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/balanced-match/-/balanced-match-1.0.2.tgz\",\n      \"integrity\": \"sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==\",\n      \"dev\": true\n    },\n    \"binary-extensions\": {\n      \"version\": \"2.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/binary-extensions/-/binary-extensions-2.2.0.tgz\",\n      \"integrity\": \"sha512-jDctJ/IVQbZoJykoeHbhXpOlNBqGNcwXJKJog42E5HDPUwQTSdjCHdihjj0DlnheQ7blbT6dHOafNAiS8ooQKA==\",\n      \"dev\": true\n    },\n    \"brace-expansion\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/brace-expansion/-/brace-expansion-2.0.1.tgz\",\n      \"integrity\": \"sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"balanced-match\": \"^1.0.0\"\n      }\n    },\n    \"braces\": {\n      \"version\": \"3.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/braces/-/braces-3.0.3.tgz\",\n      \"integrity\": \"sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"fill-range\": \"^7.1.1\"\n      }\n    },\n    \"browser-stdout\": {\n      \"version\": \"1.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/browser-stdout/-/browser-stdout-1.3.1.tgz\",\n      \"integrity\": \"sha512-qhAVI1+Av2X7qelOfAIYwXONood6XlZE/fXaBSmW/T5SzLAmCgzi+eiWE7fUvbHaeNBQH13UftjpXxsfLkMpgw==\",\n      \"dev\": true\n    },\n    \"builtins\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/builtins/-/builtins-5.0.1.tgz\",\n      \"integrity\": \"sha512-qwVpFEHNfhYJIzNRBvd2C1kyo6jz3ZSMPyyuR47OPdiKWlbYnZNyDWuyR175qDnAJLiCo5fBBqPb3RiXgWlkOQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"semver\": \"^7.0.0\"\n      }\n    },\n    \"camelcase\": {\n      \"version\": \"6.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/camelcase/-/camelcase-6.3.0.tgz\",\n      \"integrity\": \"sha512-Gmy6FhYlCY7uOElZUSbxo2UCDH8owEk996gkbrpsgGtrJLM3J7jGxl9Ic7Qwwj4ivOE5AWZWRMecDdF7hqGjFA==\",\n      \"dev\": true\n    },\n    \"cardinal\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/cardinal/-/cardinal-2.1.1.tgz\",\n      \"integrity\": \"sha512-JSr5eOgoEymtYHBjNWyjrMqet9Am2miJhlfKNdqLp6zoeAh0KN5dRAcxlecj5mAJrmQomgiOBj35xHLrFjqBpw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"ansicolors\": \"~0.3.2\",\n        \"redeyed\": \"~2.1.0\"\n      }\n    },\n    \"chalk\": {\n      \"version\": \"4.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-4.1.2.tgz\",\n      \"integrity\": \"sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"ansi-styles\": \"^4.1.0\",\n        \"supports-color\": \"^7.1.0\"\n      },\n      \"dependencies\": {\n        \"supports-color\": {\n          \"version\": \"7.2.0\",\n          \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n          \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n          \"dev\": true,\n          \"requires\": {\n            \"has-flag\": \"^4.0.0\"\n          }\n        }\n      }\n    },\n    \"char-regex\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/char-regex/-/char-regex-1.0.2.tgz\",\n      \"integrity\": \"sha512-kWWXztvZ5SBQV+eRgKFeh8q5sLuZY2+8WUIzlxWVTg+oGwY14qylx1KbKzHd8P6ZYkAg0xyIDU9JMHhyJMZ1jw==\",\n      \"dev\": true\n    },\n    \"chokidar\": {\n      \"version\": \"3.5.3\",\n      \"resolved\": \"https://registry.npmjs.org/chokidar/-/chokidar-3.5.3.tgz\",\n      \"integrity\": \"sha512-Dr3sfKRP6oTcjf2JmUmFJfeVMvXBdegxB0iVQ5eb2V10uFJUCAS8OByZdVAyVb8xXNz3GjjTgj9kLWsZTqE6kw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"anymatch\": \"~3.1.2\",\n        \"braces\": \"~3.0.2\",\n        \"fsevents\": \"~2.3.2\",\n        \"glob-parent\": \"~5.1.2\",\n        \"is-binary-path\": \"~2.1.0\",\n        \"is-glob\": \"~4.0.1\",\n        \"normalize-path\": \"~3.0.0\",\n        \"readdirp\": \"~3.6.0\"\n      }\n    },\n    \"cli-table3\": {\n      \"version\": \"0.6.3\",\n      \"resolved\": \"https://registry.npmjs.org/cli-table3/-/cli-table3-0.6.3.tgz\",\n      \"integrity\": \"sha512-w5Jac5SykAeZJKntOxJCrm63Eg5/4dhMWIcuTbo9rpE+brgaSZo0RuNJZeOyMgsUdhDeojvgyQLmjI+K50ZGyg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@colors/colors\": \"1.5.0\",\n        \"string-width\": \"^4.2.0\"\n      }\n    },\n    \"cliui\": {\n      \"version\": \"7.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/cliui/-/cliui-7.0.4.tgz\",\n      \"integrity\": \"sha512-OcRE68cOsVMXp1Yvonl/fzkQOyjLSu/8bhPDfQt0e0/Eb283TKP20Fs2MqoPsr9SwA595rRCA+QMzYc9nBP+JQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"string-width\": \"^4.2.0\",\n        \"strip-ansi\": \"^6.0.0\",\n        \"wrap-ansi\": \"^7.0.0\"\n      }\n    },\n    \"color-convert\": {\n      \"version\": \"2.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/color-convert/-/color-convert-2.0.1.tgz\",\n      \"integrity\": \"sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"color-name\": \"~1.1.4\"\n      }\n    },\n    \"color-name\": {\n      \"version\": \"1.1.4\",\n      \"resolved\": \"https://registry.npmjs.org/color-name/-/color-name-1.1.4.tgz\",\n      \"integrity\": \"sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==\",\n      \"dev\": true\n    },\n    \"commander\": {\n      \"version\": \"10.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/commander/-/commander-10.0.1.tgz\",\n      \"integrity\": \"sha512-y4Mg2tXshplEbSGzx7amzPwKKOCGuoSRP/CjEdwwk0FOGlUbq6lKuoyDZTNZkmxHdJtp54hdfY/JUrdL7Xfdug==\",\n      \"dev\": true\n    },\n    \"debug\": {\n      \"version\": \"4.3.4\",\n      \"resolved\": \"https://registry.npmjs.org/debug/-/debug-4.3.4.tgz\",\n      \"integrity\": \"sha512-PRWFHuSU3eDtQJPvnNY7Jcket1j0t5OuOsFzPPzsekD52Zl8qUfFIPEiswXqIvHWGVHOgX+7G/vCNNhehwxfkQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"ms\": \"2.1.2\"\n      },\n      \"dependencies\": {\n        \"ms\": {\n          \"version\": \"2.1.2\",\n          \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.2.tgz\",\n          \"integrity\": \"sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==\",\n          \"dev\": true\n        }\n      }\n    },\n    \"decamelize\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/decamelize/-/decamelize-4.0.0.tgz\",\n      \"integrity\": \"sha512-9iE1PgSik9HeIIw2JO94IidnE3eBoQrFJ3w7sFuzSX4DpmZ3v5sZpUiV5Swcf6mQEF+Y0ru8Neo+p+nyh2J+hQ==\",\n      \"dev\": true\n    },\n    \"diff\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/diff/-/diff-5.0.0.tgz\",\n      \"integrity\": \"sha512-/VTCrvm5Z0JGty/BWHljh+BAiw3IK+2j87NGMu8Nwc/f48WoDAC395uomO9ZD117ZOBaHmkX1oyLvkVM/aIT3w==\",\n      \"dev\": true\n    },\n    \"emoji-regex\": {\n      \"version\": \"8.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/emoji-regex/-/emoji-regex-8.0.0.tgz\",\n      \"integrity\": \"sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==\",\n      \"dev\": true\n    },\n    \"emojilib\": {\n      \"version\": \"2.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/emojilib/-/emojilib-2.4.0.tgz\",\n      \"integrity\": \"sha512-5U0rVMU5Y2n2+ykNLQqMoqklN9ICBT/KsvC1Gz6vqHbz2AXXGkG+Pm5rMWk/8Vjrr/mY9985Hi8DYzn1F09Nyw==\",\n      \"dev\": true\n    },\n    \"esbuild\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild/-/esbuild-0.15.7.tgz\",\n      \"integrity\": \"sha512-7V8tzllIbAQV1M4QoE52ImKu8hT/NLGlGXkiDsbEU5PS6K8Mn09ZnYoS+dcmHxOS9CRsV4IRAMdT3I67IyUNXw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@esbuild/linux-loong64\": \"0.15.7\",\n        \"esbuild-android-64\": \"0.15.7\",\n        \"esbuild-android-arm64\": \"0.15.7\",\n        \"esbuild-darwin-64\": \"0.15.7\",\n        \"esbuild-darwin-arm64\": \"0.15.7\",\n        \"esbuild-freebsd-64\": \"0.15.7\",\n        \"esbuild-freebsd-arm64\": \"0.15.7\",\n        \"esbuild-linux-32\": \"0.15.7\",\n        \"esbuild-linux-64\": \"0.15.7\",\n        \"esbuild-linux-arm\": \"0.15.7\",\n        \"esbuild-linux-arm64\": \"0.15.7\",\n        \"esbuild-linux-mips64le\": \"0.15.7\",\n        \"esbuild-linux-ppc64le\": \"0.15.7\",\n        \"esbuild-linux-riscv64\": \"0.15.7\",\n        \"esbuild-linux-s390x\": \"0.15.7\",\n        \"esbuild-netbsd-64\": \"0.15.7\",\n        \"esbuild-openbsd-64\": \"0.15.7\",\n        \"esbuild-sunos-64\": \"0.15.7\",\n        \"esbuild-windows-32\": \"0.15.7\",\n        \"esbuild-windows-64\": \"0.15.7\",\n        \"esbuild-windows-arm64\": \"0.15.7\"\n      }\n    },\n    \"esbuild-android-64\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-android-64/-/esbuild-android-64-0.15.7.tgz\",\n      \"integrity\": \"sha512-p7rCvdsldhxQr3YHxptf1Jcd86dlhvc3EQmQJaZzzuAxefO9PvcI0GLOa5nCWem1AJ8iMRu9w0r5TG8pHmbi9w==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"esbuild-android-arm64\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-android-arm64/-/esbuild-android-arm64-0.15.7.tgz\",\n      \"integrity\": \"sha512-L775l9ynJT7rVqRM5vo+9w5g2ysbOCfsdLV4CWanTZ1k/9Jb3IYlQ06VCI1edhcosTYJRECQFJa3eAvkx72eyQ==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"esbuild-darwin-64\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-darwin-64/-/esbuild-darwin-64-0.15.7.tgz\",\n      \"integrity\": \"sha512-KGPt3r1c9ww009t2xLB6Vk0YyNOXh7hbjZ3EecHoVDxgtbUlYstMPDaReimKe6eOEfyY4hBEEeTvKwPsiH5WZg==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"esbuild-darwin-arm64\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-darwin-arm64/-/esbuild-darwin-arm64-0.15.7.tgz\",\n      \"integrity\": \"sha512-kBIHvtVqbSGajN88lYMnR3aIleH3ABZLLFLxwL2stiuIGAjGlQW741NxVTpUHQXUmPzxi6POqc9npkXa8AcSZQ==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"esbuild-freebsd-64\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-freebsd-64/-/esbuild-freebsd-64-0.15.7.tgz\",\n      \"integrity\": \"sha512-hESZB91qDLV5MEwNxzMxPfbjAhOmtfsr9Wnuci7pY6TtEh4UDuevmGmkUIjX/b+e/k4tcNBMf7SRQ2mdNuK/HQ==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"esbuild-freebsd-arm64\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-freebsd-arm64/-/esbuild-freebsd-arm64-0.15.7.tgz\",\n      \"integrity\": \"sha512-dLFR0ChH5t+b3J8w0fVKGvtwSLWCv7GYT2Y2jFGulF1L5HftQLzVGN+6pi1SivuiVSmTh28FwUhi9PwQicXI6Q==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"esbuild-linux-32\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-linux-32/-/esbuild-linux-32-0.15.7.tgz\",\n      \"integrity\": \"sha512-v3gT/LsONGUZcjbt2swrMjwxo32NJzk+7sAgtxhGx1+ZmOFaTRXBAi1PPfgpeo/J//Un2jIKm/I+qqeo4caJvg==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"esbuild-linux-64\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-linux-64/-/esbuild-linux-64-0.15.7.tgz\",\n      \"integrity\": \"sha512-LxXEfLAKwOVmm1yecpMmWERBshl+Kv5YJ/1KnyAr6HRHFW8cxOEsEfisD3sVl/RvHyW//lhYUVSuy9jGEfIRAQ==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"esbuild-linux-arm\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-linux-arm/-/esbuild-linux-arm-0.15.7.tgz\",\n      \"integrity\": \"sha512-JKgAHtMR5f75wJTeuNQbyznZZa+pjiUHV7sRZp42UNdyXC6TiUYMW/8z8yIBAr2Fpad8hM1royZKQisqPABPvQ==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"esbuild-linux-arm64\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-linux-arm64/-/esbuild-linux-arm64-0.15.7.tgz\",\n      \"integrity\": \"sha512-P3cfhudpzWDkglutWgXcT2S7Ft7o2e3YDMrP1n0z2dlbUZghUkKCyaWw0zhp4KxEEzt/E7lmrtRu/pGWnwb9vw==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"esbuild-linux-mips64le\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-linux-mips64le/-/esbuild-linux-mips64le-0.15.7.tgz\",\n      \"integrity\": \"sha512-T7XKuxl0VpeFLCJXub6U+iybiqh0kM/bWOTb4qcPyDDwNVhLUiPcGdG2/0S7F93czUZOKP57YiLV8YQewgLHKw==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"esbuild-linux-ppc64le\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-linux-ppc64le/-/esbuild-linux-ppc64le-0.15.7.tgz\",\n      \"integrity\": \"sha512-6mGuC19WpFN7NYbecMIJjeQgvDb5aMuvyk0PDYBJrqAEMkTwg3Z98kEKuCm6THHRnrgsdr7bp4SruSAxEM4eJw==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"esbuild-linux-riscv64\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-linux-riscv64/-/esbuild-linux-riscv64-0.15.7.tgz\",\n      \"integrity\": \"sha512-uUJsezbswAYo/X7OU/P+PuL/EI9WzxsEQXDekfwpQ23uGiooxqoLFAPmXPcRAt941vjlY9jtITEEikWMBr+F/g==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"esbuild-linux-s390x\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-linux-s390x/-/esbuild-linux-s390x-0.15.7.tgz\",\n      \"integrity\": \"sha512-+tO+xOyTNMc34rXlSxK7aCwJgvQyffqEM5MMdNDEeMU3ss0S6wKvbBOQfgd5jRPblfwJ6b+bKiz0g5nABpY0QQ==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"esbuild-netbsd-64\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-netbsd-64/-/esbuild-netbsd-64-0.15.7.tgz\",\n      \"integrity\": \"sha512-yVc4Wz+Pu3cP5hzm5kIygNPrjar/v5WCSoRmIjCPWfBVJkZNb5brEGKUlf+0Y759D48BCWa0WHrWXaNy0DULTQ==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"esbuild-openbsd-64\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-openbsd-64/-/esbuild-openbsd-64-0.15.7.tgz\",\n      \"integrity\": \"sha512-GsimbwC4FSR4lN3wf8XmTQ+r8/0YSQo21rWDL0XFFhLHKlzEA4SsT1Tl8bPYu00IU6UWSJ+b3fG/8SB69rcuEQ==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"esbuild-sunos-64\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-sunos-64/-/esbuild-sunos-64-0.15.7.tgz\",\n      \"integrity\": \"sha512-8CDI1aL/ts0mDGbWzjEOGKXnU7p3rDzggHSBtVryQzkSOsjCHRVe0iFYUuhczlxU1R3LN/E7HgUO4NXzGGP/Ag==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"esbuild-windows-32\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-windows-32/-/esbuild-windows-32-0.15.7.tgz\",\n      \"integrity\": \"sha512-cOnKXUEPS8EGCzRSFa1x6NQjGhGsFlVgjhqGEbLTPsA7x4RRYiy2RKoArNUU4iR2vHmzqS5Gr84MEumO/wxYKA==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"esbuild-windows-64\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-windows-64/-/esbuild-windows-64-0.15.7.tgz\",\n      \"integrity\": \"sha512-7MI08Ec2sTIDv+zH6StNBKO+2hGUYIT42GmFyW6MBBWWtJhTcQLinKS6ldIN1d52MXIbiJ6nXyCJ+LpL4jBm3Q==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"esbuild-windows-arm64\": {\n      \"version\": \"0.15.7\",\n      \"resolved\": \"https://registry.npmjs.org/esbuild-windows-arm64/-/esbuild-windows-arm64-0.15.7.tgz\",\n      \"integrity\": \"sha512-R06nmqBlWjKHddhRJYlqDd3Fabx9LFdKcjoOy08YLimwmsswlFBJV4rXzZCxz/b7ZJXvrZgj8DDv1ewE9+StMw==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"escalade\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/escalade/-/escalade-3.1.1.tgz\",\n      \"integrity\": \"sha512-k0er2gUkLf8O0zKJiAhmkTnJlTvINGv7ygDNPbeIsX/TJjGJZHuh9B2UxbsaEkmlEo9MfhrSzmhIlhRlI2GXnw==\",\n      \"dev\": true\n    },\n    \"escape-string-regexp\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/escape-string-regexp/-/escape-string-regexp-4.0.0.tgz\",\n      \"integrity\": \"sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==\",\n      \"dev\": true\n    },\n    \"esprima\": {\n      \"version\": \"4.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/esprima/-/esprima-4.0.1.tgz\",\n      \"integrity\": \"sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==\",\n      \"dev\": true\n    },\n    \"fast-deep-equal\": {\n      \"version\": \"3.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/fast-deep-equal/-/fast-deep-equal-3.1.3.tgz\",\n      \"integrity\": \"sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==\",\n      \"dev\": true\n    },\n    \"fflate\": {\n      \"version\": \"0.7.4\",\n      \"resolved\": \"https://registry.npmjs.org/fflate/-/fflate-0.7.4.tgz\",\n      \"integrity\": \"sha512-5u2V/CDW15QM1XbbgS+0DfPxVB+jUKhWEKuuFuHncbk3tEEqzmoXL+2KyOFuKGqOnmdIy0/davWF1CkuwtibCw==\",\n      \"dev\": true\n    },\n    \"fill-range\": {\n      \"version\": \"7.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/fill-range/-/fill-range-7.1.1.tgz\",\n      \"integrity\": \"sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"to-regex-range\": \"^5.0.1\"\n      }\n    },\n    \"find-up\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/find-up/-/find-up-5.0.0.tgz\",\n      \"integrity\": \"sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==\",\n      \"dev\": true,\n      \"requires\": {\n        \"locate-path\": \"^6.0.0\",\n        \"path-exists\": \"^4.0.0\"\n      }\n    },\n    \"flat\": {\n      \"version\": \"5.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/flat/-/flat-5.0.2.tgz\",\n      \"integrity\": \"sha512-b6suED+5/3rTpUBdG1gupIl8MPFCAMA0QXwmljLhvCUKcUvdE4gWky9zpuGCcXHOsz4J9wPGNWq6OKpmIzz3hQ==\",\n      \"dev\": true\n    },\n    \"fs.realpath\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/fs.realpath/-/fs.realpath-1.0.0.tgz\",\n      \"integrity\": \"sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==\",\n      \"dev\": true\n    },\n    \"fsevents\": {\n      \"version\": \"2.3.2\",\n      \"resolved\": \"https://registry.npmjs.org/fsevents/-/fsevents-2.3.2.tgz\",\n      \"integrity\": \"sha512-xiqMQR4xAeHTuB9uWm+fFRcIOgKBMiOBP+eXiyT7jsgVCq1bkVygt00oASowB7EdtpOHaaPgKt812P9ab+DDKA==\",\n      \"dev\": true,\n      \"optional\": true\n    },\n    \"get-caller-file\": {\n      \"version\": \"2.0.5\",\n      \"resolved\": \"https://registry.npmjs.org/get-caller-file/-/get-caller-file-2.0.5.tgz\",\n      \"integrity\": \"sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==\",\n      \"dev\": true\n    },\n    \"glob\": {\n      \"version\": \"8.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/glob/-/glob-8.1.0.tgz\",\n      \"integrity\": \"sha512-r8hpEjiQEYlF2QU0df3dS+nxxSIreXQS1qRhMJM0Q5NDdR386C7jb7Hwwod8Fgiuex+k0GFjgft18yvxm5XoCQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"fs.realpath\": \"^1.0.0\",\n        \"inflight\": \"^1.0.4\",\n        \"inherits\": \"2\",\n        \"minimatch\": \"^5.0.1\",\n        \"once\": \"^1.3.0\"\n      }\n    },\n    \"glob-parent\": {\n      \"version\": \"5.1.2\",\n      \"resolved\": \"https://registry.npmjs.org/glob-parent/-/glob-parent-5.1.2.tgz\",\n      \"integrity\": \"sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==\",\n      \"dev\": true,\n      \"requires\": {\n        \"is-glob\": \"^4.0.1\"\n      }\n    },\n    \"has-flag\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/has-flag/-/has-flag-4.0.0.tgz\",\n      \"integrity\": \"sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==\",\n      \"dev\": true\n    },\n    \"he\": {\n      \"version\": \"1.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/he/-/he-1.2.0.tgz\",\n      \"integrity\": \"sha512-F/1DnUGPopORZi0ni+CvrCgHQ5FyEAHRLSApuYWMmrbSwoN2Mn/7k+Gl38gJnR7yyDZk6WLXwiGod1JOWNDKGw==\",\n      \"dev\": true\n    },\n    \"inflight\": {\n      \"version\": \"1.0.6\",\n      \"resolved\": \"https://registry.npmjs.org/inflight/-/inflight-1.0.6.tgz\",\n      \"integrity\": \"sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"once\": \"^1.3.0\",\n        \"wrappy\": \"1\"\n      }\n    },\n    \"inherits\": {\n      \"version\": \"2.0.4\",\n      \"resolved\": \"https://registry.npmjs.org/inherits/-/inherits-2.0.4.tgz\",\n      \"integrity\": \"sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==\",\n      \"dev\": true\n    },\n    \"is-binary-path\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-binary-path/-/is-binary-path-2.1.0.tgz\",\n      \"integrity\": \"sha512-ZMERYes6pDydyuGidse7OsHxtbI7WVeUEozgR/g7rd0xUimYNlvZRE/K2MgZTjWy725IfelLeVcEM97mmtRGXw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"binary-extensions\": \"^2.0.0\"\n      }\n    },\n    \"is-extglob\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/is-extglob/-/is-extglob-2.1.1.tgz\",\n      \"integrity\": \"sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==\",\n      \"dev\": true\n    },\n    \"is-fullwidth-code-point\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-fullwidth-code-point/-/is-fullwidth-code-point-3.0.0.tgz\",\n      \"integrity\": \"sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==\",\n      \"dev\": true\n    },\n    \"is-glob\": {\n      \"version\": \"4.0.3\",\n      \"resolved\": \"https://registry.npmjs.org/is-glob/-/is-glob-4.0.3.tgz\",\n      \"integrity\": \"sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"is-extglob\": \"^2.1.1\"\n      }\n    },\n    \"is-number\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-number/-/is-number-7.0.0.tgz\",\n      \"integrity\": \"sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==\",\n      \"dev\": true\n    },\n    \"is-plain-obj\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-plain-obj/-/is-plain-obj-2.1.0.tgz\",\n      \"integrity\": \"sha512-YWnfyRwxL/+SsrWYfOpUtz5b3YD+nyfkHvjbcanzk8zgyO4ASD67uVMRt8k5bM4lLMDnXfriRhOpemw+NfT1eA==\",\n      \"dev\": true\n    },\n    \"is-unicode-supported\": {\n      \"version\": \"0.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/is-unicode-supported/-/is-unicode-supported-0.1.0.tgz\",\n      \"integrity\": \"sha512-knxG2q4UC3u8stRGyAVJCOdxFmv5DZiRcdlIaAQXAbSfJya+OhopNotLQrstBhququ4ZpuKbDc/8S6mgXgPFPw==\",\n      \"dev\": true\n    },\n    \"js-yaml\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/js-yaml/-/js-yaml-4.1.0.tgz\",\n      \"integrity\": \"sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"argparse\": \"^2.0.1\"\n      }\n    },\n    \"json-schema-traverse\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/json-schema-traverse/-/json-schema-traverse-1.0.0.tgz\",\n      \"integrity\": \"sha512-NM8/P9n3XjXhIZn1lLhkFaACTOURQXjWhV4BA/RnOv8xvgqtqpAX9IO4mRQxSx1Rlo4tqzeqb0sOlruaOy3dug==\",\n      \"dev\": true\n    },\n    \"locate-path\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/locate-path/-/locate-path-6.0.0.tgz\",\n      \"integrity\": \"sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"p-locate\": \"^5.0.0\"\n      }\n    },\n    \"log-symbols\": {\n      \"version\": \"4.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/log-symbols/-/log-symbols-4.1.0.tgz\",\n      \"integrity\": \"sha512-8XPvpAA8uyhfteu8pIvQxpJZ7SYYdpUivZpGy6sFsBuKRY/7rQGavedeB8aK+Zkyq6upMFVL/9AW6vOYzfRyLg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"chalk\": \"^4.1.0\",\n        \"is-unicode-supported\": \"^0.1.0\"\n      }\n    },\n    \"lru-cache\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/lru-cache/-/lru-cache-6.0.0.tgz\",\n      \"integrity\": \"sha512-Jo6dJ04CmSjuznwJSS3pUeWmd/H0ffTlkXXgwZi+eq1UCmqQwCh+eLsYOYCwY991i2Fah4h1BEMCx4qThGbsiA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"yallist\": \"^4.0.0\"\n      }\n    },\n    \"marked\": {\n      \"version\": \"9.1.6\",\n      \"resolved\": \"https://registry.npmjs.org/marked/-/marked-9.1.6.tgz\",\n      \"integrity\": \"sha512-jcByLnIFkd5gSXZmjNvS1TlmRhCXZjIzHYlaGkPlLIekG55JDR2Z4va9tZwCiP+/RDERiNhMOFu01xd6O5ct1Q==\",\n      \"dev\": true\n    },\n    \"marked-terminal\": {\n      \"version\": \"6.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/marked-terminal/-/marked-terminal-6.1.0.tgz\",\n      \"integrity\": \"sha512-QaCSF6NV82oo6K0szEnmc65ooDeW0T/Adcyf0fcW+Hto2GT1VADFg8dn1zaeHqzj65fqDH1hMNChGNRaC/lbkA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"ansi-escapes\": \"^6.2.0\",\n        \"cardinal\": \"^2.1.1\",\n        \"chalk\": \"^5.3.0\",\n        \"cli-table3\": \"^0.6.3\",\n        \"node-emoji\": \"^2.1.0\",\n        \"supports-hyperlinks\": \"^3.0.0\"\n      },\n      \"dependencies\": {\n        \"chalk\": {\n          \"version\": \"5.3.0\",\n          \"resolved\": \"https://registry.npmjs.org/chalk/-/chalk-5.3.0.tgz\",\n          \"integrity\": \"sha512-dLitG79d+GV1Nb/VYcCDFivJeK1hiukt9QjRNVOsUtTy1rR1YJsmpGGTZ3qJos+uw7WmWF4wUwBd9jxjocFC2w==\",\n          \"dev\": true\n        }\n      }\n    },\n    \"minimatch\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/minimatch/-/minimatch-5.0.1.tgz\",\n      \"integrity\": \"sha512-nLDxIFRyhDblz3qMuq+SoRZED4+miJ/G+tdDrjkkkRnjAsBexeGpgjLEQ0blJy7rHhR2b93rhQY4SvyWu9v03g==\",\n      \"dev\": true,\n      \"requires\": {\n        \"brace-expansion\": \"^2.0.1\"\n      }\n    },\n    \"mocha\": {\n      \"version\": \"10.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/mocha/-/mocha-10.4.0.tgz\",\n      \"integrity\": \"sha512-eqhGB8JKapEYcC4ytX/xrzKforgEc3j1pGlAXVy3eRwrtAy5/nIfT1SvgGzfN0XZZxeLq0aQWkOUAmqIJiv+bA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"ansi-colors\": \"4.1.1\",\n        \"browser-stdout\": \"1.3.1\",\n        \"chokidar\": \"3.5.3\",\n        \"debug\": \"4.3.4\",\n        \"diff\": \"5.0.0\",\n        \"escape-string-regexp\": \"4.0.0\",\n        \"find-up\": \"5.0.0\",\n        \"glob\": \"8.1.0\",\n        \"he\": \"1.2.0\",\n        \"js-yaml\": \"4.1.0\",\n        \"log-symbols\": \"4.1.0\",\n        \"minimatch\": \"5.0.1\",\n        \"ms\": \"2.1.3\",\n        \"serialize-javascript\": \"6.0.0\",\n        \"strip-json-comments\": \"3.1.1\",\n        \"supports-color\": \"8.1.1\",\n        \"workerpool\": \"6.2.1\",\n        \"yargs\": \"16.2.0\",\n        \"yargs-parser\": \"20.2.4\",\n        \"yargs-unparser\": \"2.0.0\"\n      }\n    },\n    \"ms\": {\n      \"version\": \"2.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/ms/-/ms-2.1.3.tgz\",\n      \"integrity\": \"sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==\",\n      \"dev\": true\n    },\n    \"node-emoji\": {\n      \"version\": \"2.1.3\",\n      \"resolved\": \"https://registry.npmjs.org/node-emoji/-/node-emoji-2.1.3.tgz\",\n      \"integrity\": \"sha512-E2WEOVsgs7O16zsURJ/eH8BqhF029wGpEOnv7Urwdo2wmQanOACwJQh0devF9D9RhoZru0+9JXIS0dBXIAz+lA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"@sindresorhus/is\": \"^4.6.0\",\n        \"char-regex\": \"^1.0.2\",\n        \"emojilib\": \"^2.4.0\",\n        \"skin-tone\": \"^2.0.0\"\n      }\n    },\n    \"normalize-path\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/normalize-path/-/normalize-path-3.0.0.tgz\",\n      \"integrity\": \"sha512-6eZs5Ls3WtCisHWp9S2GUy8dqkpGi4BVSz3GaqiE6ezub0512ESztXUwUB6C6IKbQkY2Pnb/mD4WYojCRwcwLA==\",\n      \"dev\": true\n    },\n    \"once\": {\n      \"version\": \"1.4.0\",\n      \"resolved\": \"https://registry.npmjs.org/once/-/once-1.4.0.tgz\",\n      \"integrity\": \"sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==\",\n      \"dev\": true,\n      \"requires\": {\n        \"wrappy\": \"1\"\n      }\n    },\n    \"p-limit\": {\n      \"version\": \"3.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-limit/-/p-limit-3.1.0.tgz\",\n      \"integrity\": \"sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"yocto-queue\": \"^0.1.0\"\n      }\n    },\n    \"p-locate\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/p-locate/-/p-locate-5.0.0.tgz\",\n      \"integrity\": \"sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"p-limit\": \"^3.0.2\"\n      }\n    },\n    \"path-exists\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/path-exists/-/path-exists-4.0.0.tgz\",\n      \"integrity\": \"sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==\",\n      \"dev\": true\n    },\n    \"picomatch\": {\n      \"version\": \"2.3.1\",\n      \"resolved\": \"https://registry.npmjs.org/picomatch/-/picomatch-2.3.1.tgz\",\n      \"integrity\": \"sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==\",\n      \"dev\": true\n    },\n    \"prettier\": {\n      \"version\": \"2.8.8\",\n      \"resolved\": \"https://registry.npmjs.org/prettier/-/prettier-2.8.8.tgz\",\n      \"integrity\": \"sha512-tdN8qQGvNjw4CHbY+XXk0JgCXn9QiF21a55rBe5LJAU+kDyC4WQn4+awm2Xfk2lQMk5fKup9XgzTZtGkjBdP9Q==\",\n      \"dev\": true\n    },\n    \"punycode\": {\n      \"version\": \"2.3.0\",\n      \"resolved\": \"https://registry.npmjs.org/punycode/-/punycode-2.3.0.tgz\",\n      \"integrity\": \"sha512-rRV+zQD8tVFys26lAGR9WUuS4iUAngJScM+ZRSKtvl5tKeZ2t5bvdNFdNHBW9FWR4guGHlgmsZ1G7BSm2wTbuA==\",\n      \"dev\": true\n    },\n    \"randombytes\": {\n      \"version\": \"2.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/randombytes/-/randombytes-2.1.0.tgz\",\n      \"integrity\": \"sha512-vYl3iOX+4CKUWuxGi9Ukhie6fsqXqS9FE2Zaic4tNFD2N2QQaXOMFbuKK4QmDHC0JO6B1Zp41J0LpT0oR68amQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"safe-buffer\": \"^5.1.0\"\n      }\n    },\n    \"readdirp\": {\n      \"version\": \"3.6.0\",\n      \"resolved\": \"https://registry.npmjs.org/readdirp/-/readdirp-3.6.0.tgz\",\n      \"integrity\": \"sha512-hOS089on8RduqdbhvQ5Z37A0ESjsqz6qnRcffsMU3495FuTdqSm+7bhJ29JvIOsBDEEnan5DPu9t3To9VRlMzA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"picomatch\": \"^2.2.1\"\n      }\n    },\n    \"redeyed\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/redeyed/-/redeyed-2.1.1.tgz\",\n      \"integrity\": \"sha512-FNpGGo1DycYAdnrKFxCMmKYgo/mILAqtRYbkdQD8Ep/Hk2PQ5+aEAEx+IU713RTDmuBaH0c8P5ZozurNu5ObRQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"esprima\": \"~4.0.0\"\n      }\n    },\n    \"require-directory\": {\n      \"version\": \"2.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/require-directory/-/require-directory-2.1.1.tgz\",\n      \"integrity\": \"sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==\",\n      \"dev\": true\n    },\n    \"require-from-string\": {\n      \"version\": \"2.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/require-from-string/-/require-from-string-2.0.2.tgz\",\n      \"integrity\": \"sha512-Xf0nWe6RseziFMu+Ap9biiUbmplq6S9/p+7w7YXP/JBHhrUDDUhwa+vANyubuqfZWTveU//DYVGsDG7RKL/vEw==\",\n      \"dev\": true\n    },\n    \"safe-buffer\": {\n      \"version\": \"5.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/safe-buffer/-/safe-buffer-5.2.1.tgz\",\n      \"integrity\": \"sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==\",\n      \"dev\": true\n    },\n    \"semver\": {\n      \"version\": \"7.5.4\",\n      \"resolved\": \"https://registry.npmjs.org/semver/-/semver-7.5.4.tgz\",\n      \"integrity\": \"sha512-1bCSESV6Pv+i21Hvpxp3Dx+pSD8lIPt8uVjRrxAUt/nbswYc+tK6Y2btiULjd4+fnq15PX+nqQDC7Oft7WkwcA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"lru-cache\": \"^6.0.0\"\n      }\n    },\n    \"serialize-javascript\": {\n      \"version\": \"6.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/serialize-javascript/-/serialize-javascript-6.0.0.tgz\",\n      \"integrity\": \"sha512-Qr3TosvguFt8ePWqsvRfrKyQXIiW+nGbYpy8XK24NQHE83caxWt+mIymTT19DGFbNWNLfEwsrkSmN64lVWB9ag==\",\n      \"dev\": true,\n      \"requires\": {\n        \"randombytes\": \"^2.1.0\"\n      }\n    },\n    \"skin-tone\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/skin-tone/-/skin-tone-2.0.0.tgz\",\n      \"integrity\": \"sha512-kUMbT1oBJCpgrnKoSr0o6wPtvRWT9W9UKvGLwfJYO2WuahZRHOpEyL1ckyMGgMWh0UdpmaoFqKKD29WTomNEGA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"unicode-emoji-modifier-base\": \"^1.0.0\"\n      }\n    },\n    \"string-width\": {\n      \"version\": \"4.2.3\",\n      \"resolved\": \"https://registry.npmjs.org/string-width/-/string-width-4.2.3.tgz\",\n      \"integrity\": \"sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==\",\n      \"dev\": true,\n      \"requires\": {\n        \"emoji-regex\": \"^8.0.0\",\n        \"is-fullwidth-code-point\": \"^3.0.0\",\n        \"strip-ansi\": \"^6.0.1\"\n      }\n    },\n    \"strip-ansi\": {\n      \"version\": \"6.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-ansi/-/strip-ansi-6.0.1.tgz\",\n      \"integrity\": \"sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==\",\n      \"dev\": true,\n      \"requires\": {\n        \"ansi-regex\": \"^5.0.1\"\n      }\n    },\n    \"strip-json-comments\": {\n      \"version\": \"3.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/strip-json-comments/-/strip-json-comments-3.1.1.tgz\",\n      \"integrity\": \"sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==\",\n      \"dev\": true\n    },\n    \"supports-color\": {\n      \"version\": \"8.1.1\",\n      \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-8.1.1.tgz\",\n      \"integrity\": \"sha512-MpUEN2OodtUzxvKQl72cUF7RQ5EiHsGvSsVG0ia9c5RbWGL2CI4C7EpPS8UTBIplnlzZiNuV56w+FuNxy3ty2Q==\",\n      \"dev\": true,\n      \"requires\": {\n        \"has-flag\": \"^4.0.0\"\n      }\n    },\n    \"supports-hyperlinks\": {\n      \"version\": \"3.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/supports-hyperlinks/-/supports-hyperlinks-3.0.0.tgz\",\n      \"integrity\": \"sha512-QBDPHyPQDRTy9ku4URNGY5Lah8PAaXs6tAAwp55sL5WCsSW7GIfdf6W5ixfziW+t7wh3GVvHyHHyQ1ESsoRvaA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"has-flag\": \"^4.0.0\",\n        \"supports-color\": \"^7.0.0\"\n      },\n      \"dependencies\": {\n        \"supports-color\": {\n          \"version\": \"7.2.0\",\n          \"resolved\": \"https://registry.npmjs.org/supports-color/-/supports-color-7.2.0.tgz\",\n          \"integrity\": \"sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==\",\n          \"dev\": true,\n          \"requires\": {\n            \"has-flag\": \"^4.0.0\"\n          }\n        }\n      }\n    },\n    \"to-regex-range\": {\n      \"version\": \"5.0.1\",\n      \"resolved\": \"https://registry.npmjs.org/to-regex-range/-/to-regex-range-5.0.1.tgz\",\n      \"integrity\": \"sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"is-number\": \"^7.0.0\"\n      }\n    },\n    \"type-fest\": {\n      \"version\": \"3.13.1\",\n      \"resolved\": \"https://registry.npmjs.org/type-fest/-/type-fest-3.13.1.tgz\",\n      \"integrity\": \"sha512-tLq3bSNx+xSpwvAJnzrK0Ep5CLNWjvFTOp71URMaAEWBfRb9nnJiBoUe0tF8bI4ZFO3omgBR6NvnbzVUT3Ly4g==\",\n      \"dev\": true\n    },\n    \"typescript\": {\n      \"version\": \"5.7.2\",\n      \"resolved\": \"https://registry.npmjs.org/typescript/-/typescript-5.7.2.tgz\",\n      \"integrity\": \"sha512-i5t66RHxDvVN40HfDd1PsEThGNnlMCMT3jMUuoh9/0TaqWevNontacunWyN02LA9/fIbEWlcHZcgTKb9QoaLfg==\",\n      \"dev\": true\n    },\n    \"undici-types\": {\n      \"version\": \"5.26.5\",\n      \"resolved\": \"https://registry.npmjs.org/undici-types/-/undici-types-5.26.5.tgz\",\n      \"integrity\": \"sha512-JlCMO+ehdEIKqlFxk6IfVoAUVmgz7cU7zD/h9XZ0qzeosSHmUJVOzSQvvYSYWXkFXC+IfLKSIffhv0sVZup6pA==\",\n      \"dev\": true\n    },\n    \"unicode-emoji-modifier-base\": {\n      \"version\": \"1.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/unicode-emoji-modifier-base/-/unicode-emoji-modifier-base-1.0.0.tgz\",\n      \"integrity\": \"sha512-yLSH4py7oFH3oG/9K+XWrz1pSi3dfUrWEnInbxMfArOfc1+33BlGPQtLsOYwvdMy11AwUBetYuaRxSPqgkq+8g==\",\n      \"dev\": true\n    },\n    \"uri-js\": {\n      \"version\": \"4.4.1\",\n      \"resolved\": \"https://registry.npmjs.org/uri-js/-/uri-js-4.4.1.tgz\",\n      \"integrity\": \"sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==\",\n      \"dev\": true,\n      \"requires\": {\n        \"punycode\": \"^2.1.0\"\n      }\n    },\n    \"validate-npm-package-name\": {\n      \"version\": \"5.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/validate-npm-package-name/-/validate-npm-package-name-5.0.0.tgz\",\n      \"integrity\": \"sha512-YuKoXDAhBYxY7SfOKxHBDoSyENFeW5VvIIQp2TGQuit8gpK6MnWaQelBKxso72DoxTZfZdcP3W90LqpSkgPzLQ==\",\n      \"dev\": true,\n      \"requires\": {\n        \"builtins\": \"^5.0.0\"\n      }\n    },\n    \"workerpool\": {\n      \"version\": \"6.2.1\",\n      \"resolved\": \"https://registry.npmjs.org/workerpool/-/workerpool-6.2.1.tgz\",\n      \"integrity\": \"sha512-ILEIE97kDZvF9Wb9f6h5aXK4swSlKGUcOEGiIYb2OOu/IrDU9iwj0fD//SsA6E5ibwJxpEvhullJY4Sl4GcpAw==\",\n      \"dev\": true\n    },\n    \"wrap-ansi\": {\n      \"version\": \"7.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/wrap-ansi/-/wrap-ansi-7.0.0.tgz\",\n      \"integrity\": \"sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==\",\n      \"dev\": true,\n      \"requires\": {\n        \"ansi-styles\": \"^4.0.0\",\n        \"string-width\": \"^4.1.0\",\n        \"strip-ansi\": \"^6.0.0\"\n      }\n    },\n    \"wrappy\": {\n      \"version\": \"1.0.2\",\n      \"resolved\": \"https://registry.npmjs.org/wrappy/-/wrappy-1.0.2.tgz\",\n      \"integrity\": \"sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==\",\n      \"dev\": true\n    },\n    \"y18n\": {\n      \"version\": \"5.0.8\",\n      \"resolved\": \"https://registry.npmjs.org/y18n/-/y18n-5.0.8.tgz\",\n      \"integrity\": \"sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==\",\n      \"dev\": true\n    },\n    \"yallist\": {\n      \"version\": \"4.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/yallist/-/yallist-4.0.0.tgz\",\n      \"integrity\": \"sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==\",\n      \"dev\": true\n    },\n    \"yargs\": {\n      \"version\": \"16.2.0\",\n      \"resolved\": \"https://registry.npmjs.org/yargs/-/yargs-16.2.0.tgz\",\n      \"integrity\": \"sha512-D1mvvtDG0L5ft/jGWkLpG1+m0eQxOfaBvTNELraWj22wSVUMWxZUvYgJYcKh6jGGIkJFhH4IZPQhR4TKpc8mBw==\",\n      \"dev\": true,\n      \"requires\": {\n        \"cliui\": \"^7.0.2\",\n        \"escalade\": \"^3.1.1\",\n        \"get-caller-file\": \"^2.0.5\",\n        \"require-directory\": \"^2.1.1\",\n        \"string-width\": \"^4.2.0\",\n        \"y18n\": \"^5.0.5\",\n        \"yargs-parser\": \"^20.2.2\"\n      }\n    },\n    \"yargs-parser\": {\n      \"version\": \"20.2.4\",\n      \"resolved\": \"https://registry.npmjs.org/yargs-parser/-/yargs-parser-20.2.4.tgz\",\n      \"integrity\": \"sha512-WOkpgNhPTlE73h4VFAFsOnomJVaovO8VqLDzy5saChRBFQFBoMYirowyW+Q9HB4HFF4Z7VZTiG3iSzJJA29yRA==\",\n      \"dev\": true\n    },\n    \"yargs-unparser\": {\n      \"version\": \"2.0.0\",\n      \"resolved\": \"https://registry.npmjs.org/yargs-unparser/-/yargs-unparser-2.0.0.tgz\",\n      \"integrity\": \"sha512-7pRTIA9Qc1caZ0bZ6RYRGbHJthJWuakf+WmHK0rVeLkNrrGhfoabBNdue6kdINI6r4if7ocq9aD/n7xwKOdzOA==\",\n      \"dev\": true,\n      \"requires\": {\n        \"camelcase\": \"^6.0.0\",\n        \"decamelize\": \"^4.0.0\",\n        \"flat\": \"^5.0.2\",\n        \"is-plain-obj\": \"^2.1.0\"\n      }\n    },\n    \"yocto-queue\": {\n      \"version\": \"0.1.0\",\n      \"resolved\": \"https://registry.npmjs.org/yocto-queue/-/yocto-queue-0.1.0.tgz\",\n      \"integrity\": \"sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==\",\n      \"dev\": true\n    }\n  }\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.1953125,
          "content": "{\n  \"name\": \"@sinclair/typebox\",\n  \"version\": \"0.34.13\",\n  \"description\": \"Json Schema Type Builder with Static Type Resolution for TypeScript\",\n  \"keywords\": [\n    \"typescript\",\n    \"json-schema\",\n    \"validate\",\n    \"typecheck\"\n  ],\n  \"author\": \"sinclairzx81\",\n  \"license\": \"MIT\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/sinclairzx81/typebox\"\n  },\n  \"scripts\": {\n    \"test:typescript\": \"hammer task test_typescript\",\n    \"test:static\": \"hammer task test_static\",\n    \"test:runtime\": \"hammer task test_runtime\",\n    \"install:local\": \"hammer task install_local\",\n    \"benchmark\": \"hammer task benchmark\",\n    \"build:to\": \"hammer task build_to\",\n    \"build\": \"hammer task build\",\n    \"test\": \"hammer task test\",\n    \"clean\": \"hammer task clean\",\n    \"format\": \"hammer task format\",\n    \"start\": \"hammer task start\",\n    \"publish\": \"hammer task publish\",\n    \"publish:dev\": \"hammer task publish_dev\"\n  },\n  \"devDependencies\": {\n    \"@arethetypeswrong/cli\": \"^0.13.2\",\n    \"@sinclair/hammer\": \"^0.18.0\",\n    \"@types/mocha\": \"^9.1.1\",\n    \"@types/node\": \"^20.10.1\",\n    \"ajv\": \"^8.12.0\",\n    \"ajv-formats\": \"^2.1.1\",\n    \"mocha\": \"^10.4.0\",\n    \"prettier\": \"^2.7.1\",\n    \"typescript\": \"^5.7.2\"\n  }\n}\n"
        },
        {
          "name": "readme.md",
          "type": "blob",
          "size": 121.912109375,
          "content": "<div align='center'>\n\n<h1>TypeBox</h1>\n\n<p>Json Schema Type Builder with Static Type Resolution for TypeScript</p>\n\n<img src=\"https://raw.githubusercontent.com/sinclairzx81/typebox/refs/heads/master/typebox.png\" />\n\n<br />\n<br />\n\n[![npm version](https://badge.fury.io/js/%40sinclair%2Ftypebox.svg)](https://badge.fury.io/js/%40sinclair%2Ftypebox)\n[![Downloads](https://img.shields.io/npm/dm/%40sinclair%2Ftypebox.svg)](https://www.npmjs.com/package/%40sinclair%2Ftypebox)\n[![Build](https://github.com/sinclairzx81/typebox/actions/workflows/build.yml/badge.svg)](https://github.com/sinclairzx81/typebox/actions/workflows/build.yml)\n[![License](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n\n</div>\n\n<a name=\"Install\"></a>\n\n## Install\n\n```bash\n$ npm install @sinclair/typebox --save\n```\n\n## Example\n\n```typescript\nimport { Type, type Static } from '@sinclair/typebox'\n\nconst T = Type.Object({                              // const T = {\n  x: Type.Number(),                                  //   type: 'object',\n  y: Type.Number(),                                  //   required: ['x', 'y', 'z'],\n  z: Type.Number()                                   //   properties: {\n})                                                   //     x: { type: 'number' },\n                                                     //     y: { type: 'number' },\n                                                     //     z: { type: 'number' }\n                                                     //   }\n                                                     // }\n\ntype T = Static<typeof T>                            // type T = {\n                                                     //   x: number,\n                                                     //   y: number,\n                                                     //   z: number\n                                                     // }\n```\n\n\n<a name=\"Overview\"></a>\n\n## Overview\n\nTypeBox is a runtime type builder that creates in-memory Json Schema objects that infer as TypeScript types. The schematics produced by this library are designed to match the static type checking rules of the TypeScript compiler. TypeBox offers a unified type that can be statically checked by TypeScript and runtime asserted using standard Json Schema validation.\n\nThis library is designed to allow Json Schema to compose similar to how types compose within TypeScript's type system. It can be used as a simple tool to build up complex schematics or integrated into REST and RPC services to help validate data received over the wire.\n\nLicense MIT\n\n## Contents\n- [Install](#install)\n- [Overview](#overview)\n- [Usage](#usage)\n- [Types](#types)\n  - [Json](#types-json)\n  - [JavaScript](#types-javascript)\n  - [Import](#types-import)\n  - [Options](#types-options)\n  - [Properties](#types-properties)\n  - [Generics](#types-generics)\n  - [Recursive](#types-recursive)\n  - [Modules](#types-modules)\n  - [Template Literal](#types-template-literal)\n  - [Indexed](#types-indexed)\n  - [Mapped](#types-mapped)\n  - [Conditional](#types-conditional)\n  - [Transform](#types-transform)\n  - [Guard](#types-guard)\n  - [Unsafe](#types-unsafe)\n- [Syntax](#syntax)\n  - [Parse](#syntax-parse)\n  - [Static](#syntax-static)\n  - [Limits](#syntax-limits)\n- [Values](#values)\n  - [Assert](#values-assert)\n  - [Create](#values-create)\n  - [Clone](#values-clone)\n  - [Check](#values-check)\n  - [Convert](#values-convert)\n  - [Default](#values-default)\n  - [Clean](#values-clean)\n  - [Cast](#values-cast)\n  - [Decode](#values-decode)\n  - [Encode](#values-decode)\n  - [Parse](#values-parse)\n  - [Equal](#values-equal)\n  - [Hash](#values-hash)\n  - [Diff](#values-diff)\n  - [Patch](#values-patch)\n  - [Errors](#values-errors)\n  - [Mutate](#values-mutate)\n  - [Pointer](#values-pointer)\n- [TypeRegistry](#typeregistry)\n  - [Type](#typeregistry-type)\n  - [Format](#typeregistry-format)\n- [TypeCheck](#typecheck)\n  - [Ajv](#typecheck-ajv)\n  - [TypeCompiler](#typecheck-typecompiler)\n- [TypeSystem](#typesystem)\n  - [Policies](#typesystem-policies)\n- [Error Function](#error-function)\n- [Workbench](#workbench)\n- [Codegen](#codegen)\n- [Ecosystem](#ecosystem)\n- [Benchmark](#benchmark)\n  - [Compile](#benchmark-compile)\n  - [Validate](#benchmark-validate)\n  - [Compression](#benchmark-compression)\n- [Contribute](#contribute)\n\n<a name=\"usage\"></a>\n\n## Usage\n\nThe following shows general usage.\n\n```typescript\nimport { Type, type Static } from '@sinclair/typebox'\n\n//--------------------------------------------------------------------------------------------\n//\n// Let's say you have the following type ...\n//\n//--------------------------------------------------------------------------------------------\n\ntype T = {\n  id: string,\n  name: string,\n  timestamp: number\n}\n\n//--------------------------------------------------------------------------------------------\n//\n// ... you can express this type in the following way.\n//\n//--------------------------------------------------------------------------------------------\n\nconst T = Type.Object({                              // const T = {\n  id: Type.String(),                                 //   type: 'object',\n  name: Type.String(),                               //   properties: {\n  timestamp: Type.Integer()                          //     id: {\n})                                                   //       type: 'string'\n                                                     //     },\n                                                     //     name: {\n                                                     //       type: 'string'\n                                                     //     },\n                                                     //     timestamp: {\n                                                     //       type: 'integer'\n                                                     //     }\n                                                     //   },\n                                                     //   required: [\n                                                     //     'id',\n                                                     //     'name',\n                                                     //     'timestamp'\n                                                     //   ]\n                                                     // }\n\n//--------------------------------------------------------------------------------------------\n//\n// ... then infer back to the original static type this way.\n//\n//--------------------------------------------------------------------------------------------\n\ntype T = Static<typeof T>                            // type T = {\n                                                     //   id: string,\n                                                     //   name: string,\n                                                     //   timestamp: number\n                                                     // }\n\n//--------------------------------------------------------------------------------------------\n//\n// ... or use the type to parse JavaScript values.\n//\n//--------------------------------------------------------------------------------------------\n\nimport { Value } from '@sinclair/typebox/value'\n\nconst R = Value.Parse(T, value)                      // const R: {\n                                                     //   id: string,\n                                                     //   name: string,\n                                                     //   timestamp: number\n                                                     // }\n```\n\n<a name='types'></a>\n\n## Types\n\nTypeBox types are Json Schema fragments that compose into more complex types. Each fragment is structured such that any Json Schema compliant validator can runtime assert a value the same way TypeScript will statically assert a type. TypeBox offers a set of Json Types which are used to create Json Schema compliant schematics as well as a JavaScript type set used to create schematics for constructs native to JavaScript.\n\n<a name='types-json'></a>\n\n### Json Types\n\nThe following table lists the supported Json types. These types are fully compatible with the Json Schema Draft 7 specification.\n\n```typescript\n┌────────────────────────────────┬─────────────────────────────┬────────────────────────────────┐\n│ TypeBox                        │ TypeScript                  │ Json Schema                    │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Any()           │ type T = any                │ const T = { }                  │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Unknown()       │ type T = unknown            │ const T = { }                  │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.String()        │ type T = string             │ const T = {                    │\n│                                │                             │   type: 'string'               │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Number()        │ type T = number             │ const T = {                    │\n│                                │                             │   type: 'number'               │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Integer()       │ type T = number             │ const T = {                    │\n│                                │                             │   type: 'integer'              │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Boolean()       │ type T = boolean            │ const T = {                    │\n│                                │                             │   type: 'boolean'              │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Null()          │ type T = null               │ const T = {                    │\n│                                │                             │   type: 'null'                 │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Literal(42)     │ type T = 42                 │ const T = {                    │\n│                                │                             │   const: 42,                   │\n│                                │                             │   type: 'number'               │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Array(          │ type T = number[]           │ const T = {                    │\n│   Type.Number()                │                             │   type: 'array',               │\n│ )                              │                             │   items: {                     │\n│                                │                             │     type: 'number'             │\n│                                │                             │   }                            │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Object({        │ type T = {                  │ const T = {                    │\n│   x: Type.Number(),            │   x: number,                │   type: 'object',              │\n│   y: Type.Number()             │   y: number                 │   required: ['x', 'y'],        │\n│ })                             │ }                           │   properties: {                │\n│                                │                             │     x: {                       │\n│                                │                             │       type: 'number'           │\n│                                │                             │     },                         │\n│                                │                             │     y: {                       │\n│                                │                             │       type: 'number'           │\n│                                │                             │     }                          │\n│                                │                             │   }                            │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Tuple([         │ type T = [number, number]   │ const T = {                    │\n│   Type.Number(),               │                             │   type: 'array',               │\n│   Type.Number()                │                             │   items: [{                    │\n│ ])                             │                             │     type: 'number'             │\n│                                │                             │   }, {                         │\n│                                │                             │     type: 'number'             │\n│                                │                             │   }],                          │\n│                                │                             │   additionalItems: false,      │\n│                                │                             │   minItems: 2,                 │\n│                                │                             │   maxItems: 2                  │\n│                                │                             │ }                              │\n│                                │                             │                                │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ enum Foo {                     │ enum Foo {                  │ const T = {                    │\n│   A,                           │   A,                        │   anyOf: [{                    │\n│   B                            │   B                         │     type: 'number',            │\n│ }                              │ }                           │     const: 0                   │\n│                                │                             │   }, {                         │\n│ const T = Type.Enum(Foo)       │ type T = Foo                │     type: 'number',            │\n│                                │                             │     const: 1                   │\n│                                │                             │   }]                           │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Const({         │ type T = {                  │ const T = {                    │\n│   x: 1,                        │   readonly x: 1,            │   type: 'object',              │\n│   y: 2,                        │   readonly y: 2             │   required: ['x', 'y'],        │\n│ } as const)                    │ }                           │   properties: {                │\n│                                │                             │     x: {                       │\n│                                │                             │       type: 'number',          │\n│                                │                             │       const: 1                 │\n│                                │                             │     },                         │\n│                                │                             │     y: {                       │\n│                                │                             │       type: 'number',          │\n│                                │                             │       const: 2                 │\n│                                │                             │     }                          │\n│                                │                             │   }                            │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.KeyOf(          │ type T = keyof {            │ const T = {                    │\n│   Type.Object({                │   x: number,                │   anyOf: [{                    │\n│     x: Type.Number(),          │   y: number                 │     type: 'string',            │\n│     y: Type.Number()           │ }                           │     const: 'x'                 │\n│   })                           │                             │   }, {                         │\n│ )                              │                             │     type: 'string',            │\n│                                │                             │     const: 'y'                 │\n│                                │                             │   }]                           │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Union([         │ type T = string | number    │ const T = {                    │\n│   Type.String(),               │                             │   anyOf: [{                    │\n│   Type.Number()                │                             │     type: 'string'             │\n│ ])                             │                             │   }, {                         │\n│                                │                             │     type: 'number'             │\n│                                │                             │   }]                           │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Intersect([     │ type T = {                  │ const T = {                    │\n│   Type.Object({                │   x: number                 │   allOf: [{                    │\n│     x: Type.Number()           │ } & {                       │     type: 'object',            │\n│   }),                          │   y: number                 │     required: ['x'],           │\n│   Type.Object({                │ }                           │     properties: {              │\n│     y: Type.Number()           │                             │       x: {                     │\n│   })                           │                             │         type: 'number'         │\n│ ])                             │                             │       }                        │\n│                                │                             │     }                          │\n│                                │                             │   }, {                         │\n│                                │                             │     type: 'object',            |\n│                                │                             │     required: ['y'],           │\n│                                │                             │     properties: {              │\n│                                │                             │       y: {                     │\n│                                │                             │         type: 'number'         │\n│                                │                             │       }                        │\n│                                │                             │     }                          │\n│                                │                             │   }]                           │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Composite([     │ type T = {                  │ const T = {                    │\n│   Type.Object({                │   x: number,                │   type: 'object',              │\n│     x: Type.Number()           │   y: number                 │   required: ['x', 'y'],        │\n│   }),                          │ }                           │   properties: {                │\n│   Type.Object({                │                             │     x: {                       │\n│     y: Type.Number()           │                             │       type: 'number'           │\n│   })                           │                             │     },                         │\n│ ])                             │                             │     y: {                       │\n│                                │                             │       type: 'number'           │\n│                                │                             │     }                          │\n│                                │                             │   }                            │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Never()         │ type T = never              │ const T = {                    │\n│                                │                             │   not: {}                      │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Not(            | type T = unknown            │ const T = {                    │\n│   Type.String()                │                             │   not: {                       │\n│ )                              │                             │     type: 'string'             │\n│                                │                             │   }                            │\n│                                │                             │ }                              │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Extends(        │ type T =                    │ const T = {                    │\n│   Type.String(),               │  string extends number      │   const: false,                │\n│   Type.Number(),               │    ? true                   │   type: 'boolean'              │\n│   Type.Literal(true),          │    : false                  │ }                              │\n│   Type.Literal(false)          │                             │                                │\n│ )                              │                             │                                │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Extract(        │ type T = Extract<           │ const T = {                    │\n│   Type.Union([                 │   string | number,          │   type: 'string'               │\n│     Type.String(),             │   string                    │ }                              │\n│     Type.Number(),             │ >                           │                                │\n│   ]),                          │                             │                                │\n│   Type.String()                │                             │                                │\n│ )                              │                             │                                │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Exclude(        │ type T = Exclude<           │ const T = {                    │\n│   Type.Union([                 │   string | number,          │   type: 'number'               │\n│     Type.String(),             │   string                    │ }                              │\n│     Type.Number(),             │ >                           │                                │\n│   ]),                          │                             │                                │\n│   Type.String()                │                             │                                │\n│ )                              │                             │                                │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Mapped(         │ type T = {                  │ const T = {                    │\n│   Type.Union([                 │   [_ in 'x' | 'y'] : number │   type: 'object',              │\n│     Type.Literal('x'),         │ }                           │   required: ['x', 'y'],        │\n│     Type.Literal('y')          │                             │   properties: {                │\n│   ]),                          │                             │     x: {                       │\n│   () => Type.Number()          │                             │       type: 'number'           │\n│ )                              │                             │     },                         │\n│                                │                             │     y: {                       │\n│                                │                             │       type: 'number'           │\n│                                │                             │     }                          │\n│                                │                             │   }                            │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const U = Type.Union([         │ type U = 'open' | 'close'   │ const T = {                    │\n│   Type.Literal('open'),        │                             │   type: 'string',              │\n│   Type.Literal('close')        │ type T = `on${U}`           │   pattern: '^on(open|close)$'  │\n│ ])                             │                             │ }                              │\n│                                │                             │                                │\n│ const T = Type                 │                             │                                │\n│   .TemplateLiteral([           │                             │                                │\n│      Type.Literal('on'),       │                             │                                │\n│      U                         │                             │                                │\n│   ])                           │                             │                                │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Record(         │ type T = Record<            │ const T = {                    │\n│   Type.String(),               │   string,                   │   type: 'object',              │\n│   Type.Number()                │   number                    │   patternProperties: {         │\n│ )                              │ >                           │     '^.*$': {                  │\n│                                │                             │       type: 'number'           │\n│                                │                             │     }                          │\n│                                │                             │   }                            │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Partial(        │ type T = Partial<{          │ const T = {                    │\n│   Type.Object({                │   x: number,                │   type: 'object',              │\n│     x: Type.Number(),          │   y: number                 │   properties: {                │\n│     y: Type.Number()           | }>                          │     x: {                       │\n│   })                           │                             │       type: 'number'           │\n│ )                              │                             │     },                         │\n│                                │                             │     y: {                       │\n│                                │                             │       type: 'number'           │\n│                                │                             │     }                          │\n│                                │                             │   }                            │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Required(       │ type T = Required<{         │ const T = {                    │\n│   Type.Object({                │   x?: number,               │   type: 'object',              │\n│     x: Type.Optional(          │   y?: number                │   required: ['x', 'y'],        │\n│       Type.Number()            | }>                          │   properties: {                │\n│     ),                         │                             │     x: {                       │\n│     y: Type.Optional(          │                             │       type: 'number'           │\n│       Type.Number()            │                             │     },                         │\n│     )                          │                             │     y: {                       │\n│   })                           │                             │       type: 'number'           │\n│ )                              │                             │     }                          │\n│                                │                             │   }                            │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Pick(           │ type T = Pick<{             │ const T = {                    │\n│   Type.Object({                │   x: number,                │   type: 'object',              │\n│     x: Type.Number(),          │   y: number                 │   required: ['x'],             │\n│     y: Type.Number()           │ }, 'x'>                     │   properties: {                │\n│   }), ['x']                    |                             │     x: {                       │\n│ )                              │                             │       type: 'number'           │\n│                                │                             │     }                          │\n│                                │                             │   }                            │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Omit(           │ type T = Omit<{             │ const T = {                    │\n│   Type.Object({                │   x: number,                │   type: 'object',              │\n│     x: Type.Number(),          │   y: number                 │   required: ['y'],             │\n│     y: Type.Number()           │ }, 'x'>                     │   properties: {                │\n│   }), ['x']                    |                             │     y: {                       │\n│ )                              │                             │       type: 'number'           │\n│                                │                             │     }                          │\n│                                │                             │   }                            │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Index(          │ type T = {                  │ const T = {                    │\n│   Type.Object({                │   x: number,                │   type: 'number'               │\n│     x: Type.Number(),          │   y: string                 │ }                              │\n│     y: Type.String()           │ }['x']                      │                                │\n│   }), ['x']                    │                             │                                │\n│ )                              │                             │                                │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const A = Type.Tuple([         │ type A = [0, 1]             │ const T = {                    │\n│   Type.Literal(0),             │ type B = [2, 3]             │   type: 'array',               │\n│   Type.Literal(1)              │ type T = [                  │   items: [                     │\n│ ])                             │   ...A,                     │     { const: 0 },              │\n│ const B = Type.Tuple([         │   ...B                      │     { const: 1 },              │\n|   Type.Literal(2),             │ ]                           │     { const: 2 },              │\n|   Type.Literal(3)              │                             │     { const: 3 }               │\n│ ])                             │                             │   ],                           │\n│ const T = Type.Tuple([         │                             │   additionalItems: false,      │\n|   ...Type.Rest(A),             │                             │   minItems: 4,                 │\n|   ...Type.Rest(B)              │                             │   maxItems: 4                  │\n│ ])                             │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Uncapitalize(   │ type T = Uncapitalize<      │ const T = {                    │\n│   Type.Literal('Hello')        │   'Hello'                   │   type: 'string',              │\n│ )                              │ >                           │   const: 'hello'               │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Capitalize(     │ type T = Capitalize<        │ const T = {                    │\n│   Type.Literal('hello')        │   'hello'                   │   type: 'string',              │\n│ )                              │ >                           │   const: 'Hello'               │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Uppercase(      │ type T = Uppercase<         │ const T = {                    │\n│   Type.Literal('hello')        │   'hello'                   │   type: 'string',              │\n│ )                              │ >                           │   const: 'HELLO'               │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Lowercase(      │ type T = Lowercase<         │ const T = {                    │\n│   Type.Literal('HELLO')        │   'HELLO'                   │   type: 'string',              │\n│ )                              │ >                           │   const: 'hello'               │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const R = Type.Ref('T')        │ type R = unknown            │ const R = { $ref: 'T' }        │\n│                                │                             │                                │\n└────────────────────────────────┴─────────────────────────────┴────────────────────────────────┘\n```\n\n<a name='types-javascript'></a>\n\n### JavaScript Types\n\nTypeBox provides an extended type set that can be used to create schematics for common JavaScript constructs. These types can not be used with any standard Json Schema validator; but can be used to frame schematics for interfaces that may receive Json validated data. JavaScript types are prefixed with the `[JavaScript]` jsdoc comment for convenience. The following table lists the supported types.\n\n```typescript\n┌────────────────────────────────┬─────────────────────────────┬────────────────────────────────┐\n│ TypeBox                        │ TypeScript                  │ Extended Schema                │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Constructor([   │ type T = new (              │ const T = {                    │\n│   Type.String(),               │  arg0: string,              │   type: 'Constructor',         │\n│   Type.Number()                │  arg0: number               │   parameters: [{               │\n│ ], Type.Boolean())             │ ) => boolean                │     type: 'string'             │\n│                                │                             │   }, {                         │\n│                                │                             │     type: 'number'             │\n│                                │                             │   }],                          │\n│                                │                             │   returns: {                   │\n│                                │                             │     type: 'boolean'            │\n│                                │                             │   }                            │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Function([      │ type T = (                  │ const T = {                    │\n|   Type.String(),               │  arg0: string,              │   type: 'Function',            │\n│   Type.Number()                │  arg1: number               │   parameters: [{               │\n│ ], Type.Boolean())             │ ) => boolean                │     type: 'string'             │\n│                                │                             │   }, {                         │\n│                                │                             │     type: 'number'             │\n│                                │                             │   }],                          │\n│                                │                             │   returns: {                   │\n│                                │                             │     type: 'boolean'            │\n│                                │                             │   }                            │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Promise(        │ type T = Promise<string>    │ const T = {                    │\n│   Type.String()                │                             │   type: 'Promise',             │\n│ )                              │                             │   item: {                      │\n│                                │                             │     type: 'string'             │\n│                                │                             │   }                            │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T =                      │ type T =                    │ const T = {                    │\n│   Type.AsyncIterator(          │   AsyncIterableIterator<    │   type: 'AsyncIterator',       │\n│     Type.String()              │    string                   │   items: {                     │\n│   )                            │   >                         │     type: 'string'             │\n│                                │                             │   }                            │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Iterator(       │ type T =                    │ const T = {                    │\n│   Type.String()                │   IterableIterator<string>  │   type: 'Iterator',            │\n│ )                              │                             │   items: {                     │\n│                                │                             │     type: 'string'             │\n│                                │                             │   }                            │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.RegExp(/abc/i)  │ type T = string             │ const T = {                    │\n│                                │                             │   type: 'RegExp'               │\n│                                │                             │   source: 'abc'                │\n│                                │                             │   flags: 'i'                   │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Uint8Array()    │ type T = Uint8Array         │ const T = {                    │\n│                                │                             │   type: 'Uint8Array'           │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Date()          │ type T = Date               │ const T = {                    │\n│                                │                             │   type: 'Date'                 │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Undefined()     │ type T = undefined          │ const T = {                    │\n│                                │                             │   type: 'undefined'            │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Symbol()        │ type T = symbol             │ const T = {                    │\n│                                │                             │   type: 'symbol'               │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.BigInt()        │ type T = bigint             │ const T = {                    │\n│                                │                             │   type: 'bigint'               │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Void()          │ type T = void               │ const T = {                    │\n│                                │                             │   type: 'void'                 │\n│                                │                             │ }                              │\n│                                │                             │                                │\n└────────────────────────────────┴─────────────────────────────┴────────────────────────────────┘\n```\n\n<a name='types-import'></a>\n\n### Import\n\nImport the Type namespace to bring in the full TypeBox type system. This is recommended for most users.\n\n```typescript\nimport { Type, type Static } from '@sinclair/typebox'\n```\n\nYou can also selectively import types. This enables modern bundlers to tree shake for unused types.\n\n```typescript\nimport { Object, Number, String, Boolean, type Static } from '@sinclair/typebox'\n```\n\n<a name='types-options'></a>\n\n### Options\n\nYou can pass Json Schema options on the last argument of any given type. Option hints specific to each type are provided for convenience.\n\n```typescript\n// String must be an email\nconst T = Type.String({                              // const T = {\n  format: 'email'                                    //   type: 'string',\n})                                                   //   format: 'email'\n                                                     // }\n\n// Number must be a multiple of 2\nconst T = Type.Number({                              // const T = {\n  multipleOf: 2                                      //  type: 'number',\n})                                                   //  multipleOf: 2\n                                                     // }\n\n// Array must have at least 5 integer values\nconst T = Type.Array(Type.Integer(), {               // const T = {\n  minItems: 5                                        //   type: 'array',\n})                                                   //   minItems: 5,\n                                                     //   items: {\n                                                     //     type: 'integer'\n                                                     //   }\n                                                     // }\n```\n\n<a name='types-properties'></a>\n\n### Properties\n\nObject properties can be modified with Readonly and Optional. The following table shows how these modifiers map between TypeScript and Json Schema.\n\n```typescript\n┌────────────────────────────────┬─────────────────────────────┬────────────────────────────────┐\n│ TypeBox                        │ TypeScript                  │ Json Schema                    │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Object({        │ type T = {                  │ const T = {                    │\n│   name: Type.ReadonlyOptional( │   readonly name?: string    │   type: 'object',              │\n│     Type.String()              │ }                           │   properties: {                │\n│   )                            │                             │     name: {                    │\n│ })  \t                         │                             │       type: 'string'           │\n│                                │                             │     }                          │\n│                                │                             │   }                            │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Object({        │ type T = {                  │ const T = {                    │\n│   name: Type.Readonly(         │   readonly name: string     │   type: 'object',              │\n│     Type.String()              │ }                           │   properties: {                │\n│   )                            │                             │     name: {                    │\n│ })  \t                         │                             │       type: 'string'           │\n│                                │                             │     }                          │\n│                                │                             │   },                           │\n│                                │                             │   required: ['name']           │\n│                                │                             │ }                              │\n│                                │                             │                                │\n├────────────────────────────────┼─────────────────────────────┼────────────────────────────────┤\n│ const T = Type.Object({        │ type T = {                  │ const T = {                    │\n│   name: Type.Optional(         │   name?: string             │   type: 'object',              │\n│     Type.String()              │ }                           │   properties: {                │\n│   )                            │                             │     name: {                    │\n│ })  \t                         │                             │       type: 'string'           │\n│                                │                             │     }                          │\n│                                │                             │   }                            │\n│                                │                             │ }                              │\n│                                │                             │                                │\n└────────────────────────────────┴─────────────────────────────┴────────────────────────────────┘\n```\n\n<a name='types-generics'></a>\n\n### Generic Types\n\nGeneric types can be created with functions. TypeBox types extend the TSchema interface so you should constrain parameters to this type. The following creates a generic Vector type.\n\n```typescript\nimport { Type, type Static, type TSchema } from '@sinclair/typebox'\n\nconst Vector = <T extends TSchema>(T: T) => \n  Type.Object({                                      // type Vector<T> = {\n    x: T,                                            //   x: T,\n    y: T,                                            //   y: T,\n    z: T                                             //   z: T\n  })                                                 // }\n\nconst NumberVector = Vector(Type.Number())           // type NumberVector = Vector<number>\n```\n\nGeneric types are often used to create aliases for complex types. The following creates a Nullable generic type.\n\n```typescript\nconst Nullable = <T extends TSchema>(schema: T) => Type.Union([schema, Type.Null()])\n\nconst T = Nullable(Type.String())                    // const T = {\n                                                     //   anyOf: [\n                                                     //     { type: 'string' },\n                                                     //     { type: 'null' }\n                                                     //   ]\n                                                     // }\n\ntype T = Static<typeof T>                            // type T = string | null\n```\n\n<a name='types-recursive'></a>\n\n### Recursive Types\n\nUse the Recursive function to create a singular recursive type.\n\n```typescript\nconst Node = Type.Recursive(Self => Type.Object({    // const Node = {\n  id: Type.String(),                                 //   $id: 'Node',\n  nodes: Type.Array(Self)                            //   type: 'object',\n}), { $id: 'Node' })                                 //   properties: {\n                                                     //     id: {\n                                                     //       type: 'string'\n                                                     //     },\n                                                     //     nodes: {\n                                                     //       type: 'array',\n                                                     //       items: {\n                                                     //         $ref: 'Node'\n                                                     //       }\n                                                     //     }\n                                                     //   },\n                                                     //   required: [\n                                                     //     'id',\n                                                     //     'nodes'\n                                                     //   ]\n                                                     // }\n\ntype Node = Static<typeof Node>                      // type Node = {\n                                                     //   id: string\n                                                     //   nodes: Node[]\n                                                     // }\n\nfunction test(node: Node) {\n  const id = node.nodes[0].nodes[0].id               // id is string\n}\n```\n\n<a name='types-modules'></a>\n\n### Module Types\n\nModule types are containers for a set of referential types. Modules act as namespaces, enabling types to reference one another via string identifiers. Modules support both singular and mutually recursive references, as well as deferred dereferencing for computed types such as Partial. Types imported from a module are expressed using the Json Schema `$defs` keyword. \n\n```typescript\nconst Module = Type.Module({\n  PartialUser: Type.Partial(Type.Ref('User')),  // TComputed<'Partial', [TRef<'User'>]>\n\n  User: Type.Object({                           // TObject<{\n    id: Type.String(),                          //   user: TString,\n    name: Type.String(),                        //   name: TString,\n    email: Type.String()                        //   email: TString\n  }),                                           // }>\n})\nconst User = Module.Import('User')               // const User: TImport<{...}, 'User'>\n\ntype User = Static<typeof User>                  // type User = { \n                                                 //   id: string,\n                                                 //   name: string,\n                                                 //   email: string\n                                                 // }\n\nconst PartialUser = Module.Import('PartialUser') // const PartialUser: TImport<{...}, 'PartialUser'>\n\ntype PartialUser = Static<typeof PartialUser>    // type PartialUser = { \n                                                 //   id?: string,\n                                                 //   name?: string,\n                                                 //   email?: string\n                                                 // }\n```\n\n<a name='types-template-literal'></a>\n\n### Template Literal Types\n\nTypeBox supports template literal types with the TemplateLiteral function. This type can be created using a syntax similar to the TypeScript template literal syntax or composed from exterior types. TypeBox encodes template literals as regular expressions which enables the template to be checked by Json Schema validators. This type also supports regular expression parsing that enables template patterns to be used for generative types. The following shows both TypeScript and TypeBox usage.\n\n```typescript\n// TypeScript\n\ntype K = `prop${'A'|'B'|'C'}`                        // type T = 'propA' | 'propB' | 'propC'\n\ntype R = Record<K, string>                           // type R = {\n                                                     //   propA: string\n                                                     //   propB: string\n                                                     //   propC: string\n                                                     // }\n\n// TypeBox\n\nconst K = Type.TemplateLiteral('prop${A|B|C}')       // const K: TTemplateLiteral<[\n                                                     //   TLiteral<'prop'>,\n                                                     //   TUnion<[\n                                                     //      TLiteral<'A'>,\n                                                     //      TLiteral<'B'>,\n                                                     //      TLiteral<'C'>,\n                                                     //   ]>\n                                                     // ]>\n\nconst R = Type.Record(K, Type.String())              // const R: TObject<{\n                                                     //   propA: TString,\n                                                     //   propB: TString,\n                                                     //   propC: TString,\n                                                     // }>\n```\n\n<a name='types-indexed'></a>\n\n### Indexed Access Types\n\nTypeBox supports indexed access types with the Index function. This function enables uniform access to interior property and element types without having to extract them from the underlying schema representation. Index types are supported for Object, Array, Tuple, Union and Intersect types.\n\n```typescript\nconst T = Type.Object({                              // type T = {\n  x: Type.Number(),                                  //   x: number,\n  y: Type.String(),                                  //   y: string,\n  z: Type.Boolean()                                  //   z: boolean\n})                                                   // }\n\nconst A = Type.Index(T, ['x'])                       // type A = T['x']\n                                                     //\n                                                     // ... evaluated as\n                                                     //\n                                                     // const A: TNumber\n\nconst B = Type.Index(T, ['x', 'y'])                  // type B = T['x' | 'y']\n                                                     //\n                                                     // ... evaluated as\n                                                     //\n                                                     // const B: TUnion<[\n                                                     //   TNumber,\n                                                     //   TString,\n                                                     // ]>\n\nconst C = Type.Index(T, Type.KeyOf(T))               // type C = T[keyof T]\n                                                     //\n                                                     // ... evaluated as\n                                                     // \n                                                     // const C: TUnion<[\n                                                     //   TNumber,\n                                                     //   TString,\n                                                     //   TBoolean\n                                                     // ]>\n```\n\n<a name='types-mapped'></a>\n\n### Mapped Types\n\nTypeBox supports mapped types with the Mapped function. This function accepts two arguments, the first is a union type typically derived from KeyOf, the second is a mapping function that receives a mapping key `K` that can be used to index properties of a type. The following implements a mapped type that remaps each property to be `T | null`\n\n```typescript\nconst T = Type.Object({                              // type T = {\n  x: Type.Number(),                                  //   x: number,\n  y: Type.String(),                                  //   y: string,\n  z: Type.Boolean()                                  //   z: boolean\n})                                                   // }\n\nconst M = Type.Mapped(Type.KeyOf(T), K => {          // type M = { [K in keyof T]: T[K] | null }\n  return Type.Union([Type.Index(T, K), Type.Null()]) //\n})                                                   // ... evaluated as\n                                                     // \n                                                     // const M: TObject<{\n                                                     //   x: TUnion<[TNumber, TNull]>,\n                                                     //   y: TUnion<[TString, TNull]>,\n                                                     //   z: TUnion<[TBoolean, TNull]>\n                                                     // }>\n```\n\n<a name='types-conditional'></a>\n\n### Conditional Types\n\nTypeBox supports runtime conditional types with the Extends function. This function performs a structural assignability check against the first (`left`) and second (`right`) arguments and will return either the third (`true`) or fourth (`false`) argument based on the result. The conditional types Exclude and Extract are also supported. The following shows both TypeScript and TypeBox examples of conditional types.\n\n```typescript\n// Extends\nconst A = Type.Extends(                              // type A = string extends number ? 1 : 2\n  Type.String(),                                     //   \n  Type.Number(),                                     // ... evaluated as\n  Type.Literal(1),                                   //\n  Type.Literal(2)                                    // const A: TLiteral<2>\n)\n\n// Extract\nconst B = Type.Extract(                              // type B = Extract<1 | 2 | 3, 1>\n  Type.Union([                                       //\n    Type.Literal(1),                                 // ... evaluated as\n    Type.Literal(2),                                 //\n    Type.Literal(3)                                  // const B: TLiteral<1>\n  ]), \n  Type.Literal(1)\n)\n\n// Exclude\nconst C = Type.Exclude(                              // type C = Exclude<1 | 2 | 3, 1>\n  Type.Union([                                       // \n    Type.Literal(1),                                 // ... evaluated as\n    Type.Literal(2),                                 //\n    Type.Literal(3)                                  // const C: TUnion<[\n  ]),                                                //   TLiteral<2>,\n  Type.Literal(1)                                    //   TLiteral<3>,\n)                                                    // ]>\n```\n\n<a name='types-transform'></a>\n\n### Transform Types\n\nTypeBox supports value decoding and encoding with Transform types. These types work in tandem with the Encode and Decode functions available on the Value and TypeCompiler submodules. Transform types can be used to convert Json encoded values into constructs more natural to JavaScript. The following creates a Transform type to decode numbers into Dates using the Value submodule.\n\n```typescript\nimport { Value } from '@sinclair/typebox/value'\n\nconst T = Type.Transform(Type.Number())\n  .Decode(value => new Date(value))                  // decode: number to Date\n  .Encode(value => value.getTime())                  // encode: Date to number\n\nconst D = Value.Decode(T, 0)                         // const D = Date(1970-01-01T00:00:00.000Z)\nconst E = Value.Encode(T, D)                         // const E = 0\n```\nUse the StaticEncode or StaticDecode types to infer a Transform type.\n```typescript\nimport { Static, StaticDecode, StaticEncode } from '@sinclair/typebox'\n\nconst T = Type.Transform(Type.Array(Type.Number(), { uniqueItems: true }))         \n  .Decode(value => new Set(value))\n  .Encode(value => [...value])\n\ntype D = StaticDecode<typeof T>                      // type D = Set<number>      \ntype E = StaticEncode<typeof T>                      // type E = Array<number>\ntype T = Static<typeof T>                            // type T = Array<number>\n```\n\n<a name='types-unsafe'></a>\n\n### Unsafe Types\n\nTypeBox supports user defined types with Unsafe. This type allows you to specify both schema representation and inference type. The following creates an Unsafe type with a number schema that infers as string.\n\n```typescript\nconst T = Type.Unsafe<string>({ type: 'number' })    // const T = { type: 'number' }\n\ntype T = Static<typeof T>                            // type T = string - ?\n```\nThe Unsafe type is often used to create schematics for extended specifications like OpenAPI.\n```typescript\n\nconst Nullable = <T extends TSchema>(schema: T) => Type.Unsafe<Static<T> | null>({ \n  ...schema, nullable: true \n})\n\nconst T = Nullable(Type.String())                    // const T = {\n                                                     //   type: 'string',\n                                                     //   nullable: true\n                                                     // }\n\ntype T = Static<typeof T>                            // type T = string | null\n\nconst StringEnum = <T extends string[]>(values: [...T]) => Type.Unsafe<T[number]>({ \n  type: 'string', enum: values \n})\nconst S = StringEnum(['A', 'B', 'C'])                // const S = {\n                                                     //   enum: ['A', 'B', 'C']\n                                                     // }\n\ntype S = Static<typeof T>                            // type S = 'A' | 'B' | 'C'\n```\n<a name='types-guard'></a>\n\n### TypeGuard\n\nTypeBox can check its own types with the TypeGuard module. This module is written for type introspection and provides structural tests for every built-in TypeBox type. Functions of this module return `is` guards which can be used with control flow assertions to obtain schema inference for unknown values. The following guards that the value `T` is TString.\n\n```typescript\nimport { TypeGuard, Kind } from '@sinclair/typebox'\n\nconst T = { [Kind]: 'String', type: 'string' }\n\nif(TypeGuard.IsString(T)) {\n\n  // T is TString\n}\n```\n\n<a name='syntax'></a>\n\n## Syntax Types\n\nTypeBox has support for parsing TypeScript type annotations directly into TypeBox types. This feature supports both runtime and static parsing, with TypeBox implementing TypeScript parsers within the TypeScript type system itself. Syntax Types use the TypeBox Json Schema representations as an AST target for TypeScript types, providing a direct mapping between TypeScript syntax and Json Schema. Syntax Types are offered as a syntactical frontend to the Standard Type Builder API.\n\nThis feature is available via optional import.\n\n```typescript\nimport { Parse } from '@sinclair/typebox/syntax'\n```\n\n<a name='syntax-parse'></a>\n\n### Parse\n\nUse the Parse function to transform a TypeScript type annotation into a TypeBox type. This function will return the parsed TypeBox type or undefined on error.\n\n```typescript\nconst A = Parse('string')                           // const A: TString\n\nconst B = Parse('[1, 2, 3]')                        // const B: TTuple<[\n                                                    //   TLiteral<1>,\n                                                    //   TLiteral<2>,\n                                                    //   TLiteral<3>\n                                                    // ]>\n\nconst C = Parse(`{ x: number, y: number }`)         // const C: TObject<{\n                                                    //   x: TNumber\n                                                    //   y: TNumber\n                                                    // }>\n```\n\nSyntax Types can compose with Standard Types created via the Type Builder API\n\n```typescript\nconst T = Type.Object({                             // const T: TObject<{\n  x: Parse('number'),                               //   x: TNumber,\n  y: Parse('string'),                               //   y: TString,\n  z: Parse('boolean')                               //   z: TBoolean\n})                                                  // }>\n```\n\nStandard Types can also be passed to and referenced within Syntax Types.\n\n```typescript\nconst X = Type.Number()\nconst Y = Type.String()\nconst Z = Type.Boolean()\n\nconst T = Parse({ X, Y, Z }, `{ \n  x: X, \n  y: Y, \n  z: Z \n}`)\n```\n\nSyntax Types also support Module parsing.\n\n```typescript\nconst Foo = Parse(`module Foo {\n\n  export type PartialUser = Pick<User, 'id'> & Partial<Omit<User, 'id'>>\n\n  export interface User {\n    id: string\n    name: string\n    email: string\n  }\n\n}`)\n\nconst PartialUser = Foo.Import('PartialUser')       // TImport<{...}, 'PartialUser'>\n\ntype PartialUser = Static<typeof PartialUser>       // type PartialUser = {\n                                                    //   id: string,\n                                                    // } & {\n                                                    //   name?: string,\n                                                    //   email?: string,\n                                                    // }\n```\n\n<a name='syntax-static'></a>\n\n### Static\n\nSyntax Types provide two Static types specific to inferring TypeBox and TypeScript types from strings.\n\n```typescript\nimport { StaticParseAsSchema, StaticParseAsType } from '@sinclair/typebox/syntax' \n\n// Will infer as a TSchema\n\ntype S = StaticParseAsSchema<{}, '{ x: number }'>   // type S: TObject<{\n                                                    //   x: TNumber\n                                                    // }>\n\n// Will infer as a type\n\ntype T = StaticParseAsType<{}, '{ x: number }'>     // type T = {\n                                                    //   x: number\n                                                    // }                      \n```\n\n\n<a name='syntax-limits'></a>\n\n### Limitations\n\nTypeBox parses TypeScript types directly within the TypeScript type system. This process does come with an inference cost, which scales with the size and complexity of the types being parsed. Although TypeBox strives to optimize Syntax Types, users should be aware of the following structures:\n\n```typescript\n// Excessively wide structures will result in instantiation limits exceeding\nconst A = Parse(`[\n  0, 1, 2, 3, 4, 5, 6, 7,\n  0, 1, 2, 3, 4, 5, 6, 7,\n  0, 1, 2, 3, 4, 5, 6, 7,\n  0, 1, 2, 3, 4, 5, 6, 7,\n  0, 1, 2, 3, 4, 5, 6, 7,\n  0, 1, 2, 3, 4, 5, 6, 7,\n  0, 1, 2, 3, 4, 5, 6, 7,\n  0, 1, 2, 3, 4, 5, 6, 7,\n]`)\n\n// Excessively nested structures will result in instantiation limits exceeding\nconst B = Parse(`{\n  x: {\n    y: {\n      z: {\n        w: 1 <-- Type instantiation is excessively deep and possibly infinite.\n      } \n    }\n  }  \n}`)\n```\n\nIf Syntax Types exceed TypeScript's instantiation limits, users are advised to fall back to the Standard Type Builder API. Alternatively, TypeBox offers a `ParseOnly` function that parses the TypeScript syntax at runtime without statically inferring the schema.\n\n```typescript\nimport { ParseOnly } from '@sinclair/typebox/syntax'\n\n// const A: TSchema | undefined \n\nconst A = ParseOnly(`{\n  x: {\n    y: {\n      z: {\n        w: 1\n      } \n    }\n  }  \n}`)\n```\n\nFor more information on static parsing, refer to the [ParseBox](https://github.com/sinclairzx81/parsebox) project.\n\n<a name='values'></a>\n\n## Values\n\nTypeBox provides an optional Value submodule that can be used to perform structural operations on JavaScript values. This submodule includes functionality to create, check and cast values from types as well as check equality, clone, diff and patch JavaScript values. This submodule is provided via optional import.\n\n```typescript\nimport { Value } from '@sinclair/typebox/value'\n```\n\n<a name='values-assert'></a>\n\n### Assert\n\nUse the Assert function to assert a value is valid.\n\n```typescript\nlet value: unknown = 1\n\nValue.Assert(Type.Number(), value)                   // throws AssertError if invalid\n```\n\n<a name='values-create'></a>\n\n### Create\n\nUse the Create function to create a value from a type. TypeBox will use default values if specified.\n\n```typescript\nconst T = Type.Object({ x: Type.Number(), y: Type.Number({ default: 42 }) })\n\nconst A = Value.Create(T)                            // const A = { x: 0, y: 42 }\n```\n\n<a name='values-clone'></a>\n\n### Clone\n\nUse the Clone function to deeply clone a value.\n\n```typescript\nconst A = Value.Clone({ x: 1, y: 2, z: 3 })          // const A = { x: 1, y: 2, z: 3 }\n```\n\n<a name='values-check'></a>\n\n### Check\n\nUse the Check function to type check a value.\n\n```typescript\nconst T = Type.Object({ x: Type.Number() })\n\nconst R = Value.Check(T, { x: 1 })                   // const R = true\n```\n\n<a name='values-convert'></a>\n\n### Convert\n\nUse the Convert function to convert a value into its target type if a reasonable conversion is possible. This function may return an invalid value and should be checked before use. Its return type is `unknown`.\n\n```typescript\nconst T = Type.Object({ x: Type.Number() })\n\nconst R1 = Value.Convert(T, { x: '3.14' })           // const R1 = { x: 3.14 }\n\nconst R2 = Value.Convert(T, { x: 'not a number' })   // const R2 = { x: 'not a number' }\n```\n\n<a name='values-clean'></a>\n\n### Clean\n\nUse Clean to remove excess properties from a value. This function does not check the value and returns an unknown type. You should Check the result before use. Clean is a mutable operation. To avoid mutation, Clone the value first.\n\n```typescript\nconst T = Type.Object({ \n  x: Type.Number(), \n  y: Type.Number() \n})\n\nconst X = Value.Clean(T, null)                        // const 'X = null\n\nconst Y = Value.Clean(T, { x: 1 })                    // const 'Y = { x: 1 }\n\nconst Z = Value.Clean(T, { x: 1, y: 2, z: 3 })        // const 'Z = { x: 1, y: 2 }\n```\n\n<a name='values-default'></a>\n\n### Default\n\nUse Default to generate missing properties on a value using default schema annotations if available. This function does not check the value and returns an unknown type. You should Check the result before use. Default is a mutable operation. To avoid mutation, Clone the value first.\n\n```typescript\nconst T = Type.Object({ \n  x: Type.Number({ default: 0 }), \n  y: Type.Number({ default: 0 })\n})\n\nconst X = Value.Default(T, null)                        // const 'X = null - non-enumerable\n\nconst Y = Value.Default(T, { })                         // const 'Y = { x: 0, y: 0 }\n\nconst Z = Value.Default(T, { x: 1 })                    // const 'Z = { x: 1, y: 0 }\n```\n\n<a name='values-cast'></a>\n\n### Cast\n\nUse the Cast function to upcast a value into a target type. This function will retain as much infomation as possible from the original value. The Cast function is intended to be used in data migration scenarios where existing values need to be upgraded to match a modified type.\n\n```typescript\nconst T = Type.Object({ x: Type.Number(), y: Type.Number() }, { additionalProperties: false })\n\nconst X = Value.Cast(T, null)                        // const X = { x: 0, y: 0 }\n\nconst Y = Value.Cast(T, { x: 1 })                    // const Y = { x: 1, y: 0 }\n\nconst Z = Value.Cast(T, { x: 1, y: 2, z: 3 })        // const Z = { x: 1, y: 2 }\n```\n\n<a name='values-decode'></a>\n\n### Decode\n\nUse the Decode function to decode a value from a type or throw if the value is invalid. The return value will infer as the decoded type. This function will run Transform codecs if available.\n\n```typescript\nconst A = Value.Decode(Type.String(), 'hello')        // const A = 'hello'\n\nconst B = Value.Decode(Type.String(), 42)             // throw\n```\n<a name='values-decode'></a>\n\n### Encode\n\nUse the Encode function to encode a value to a type or throw if the value is invalid. The return value will infer as the encoded type. This function will run Transform codecs if available.\n\n```typescript\nconst A = Value.Encode(Type.String(), 'hello')        // const A = 'hello'\n\nconst B = Value.Encode(Type.String(), 42)             // throw\n```\n\n<a name='values-parse'></a>\n\n### Parse\n\nUse the Parse function to parse a value. This function calls the `Clone` `Clean`, `Default`, `Convert`, `Assert` and `Decode` Value functions in this exact order to process a value.\n\n```typescript\nconst R = Value.Parse(Type.String(), 'hello')      // const R: string = \"hello\"\n\nconst E = Value.Parse(Type.String(), undefined)    // throws AssertError \n```\n\nYou can override the order in which functions are run, or omit functions entirely using the following.\n\n```typescript\n// Runs no functions.\n\nconst R = Value.Parse([], Type.String(), 12345)\n\n// Runs the Assert() function.\n\nconst E = Value.Parse(['Assert'], Type.String(), 12345)\n\n// Runs the Convert() function followed by the Assert() function.\n\nconst S = Value.Parse(['Convert', 'Assert'], Type.String(), 12345)\n```\n\n<a name='values-equal'></a>\n\n### Equal\n\nUse the Equal function to deeply check for value equality.\n\n```typescript\nconst R = Value.Equal(                               // const R = true\n  { x: 1, y: 2, z: 3 },\n  { x: 1, y: 2, z: 3 }\n)\n```\n\n<a name='values-hash'></a>\n\n### Hash\n\nUse the Hash function to create a [FNV1A-64](https://en.wikipedia.org/wiki/Fowler%E2%80%93Noll%E2%80%93Vo_hash_function) non cryptographic hash of a value.\n\n```typescript\nconst A = Value.Hash({ x: 1, y: 2, z: 3 })           // const A = 2910466848807138541n\n\nconst B = Value.Hash({ x: 1, y: 4, z: 3 })           // const B = 1418369778807423581n\n```\n\n<a name='values-diff'></a>\n\n### Diff\n\nUse the Diff function to generate a sequence of edits that will transform one value into another.\n\n```typescript\nconst E = Value.Diff(                                // const E = [\n  { x: 1, y: 2, z: 3 },                              //   { type: 'update', path: '/y', value: 4 },\n  { y: 4, z: 5, w: 6 }                               //   { type: 'update', path: '/z', value: 5 },\n)                                                    //   { type: 'insert', path: '/w', value: 6 },\n                                                     //   { type: 'delete', path: '/x' }\n                                                     // ]\n```\n\n<a name='values-patch'></a>\n\n### Patch\n\nUse the Patch function to apply a sequence of edits.\n\n```typescript\nconst A = { x: 1, y: 2 }\n\nconst B = { x: 3 }\n\nconst E = Value.Diff(A, B)                           // const E = [\n                                                     //   { type: 'update', path: '/x', value: 3 },\n                                                     //   { type: 'delete', path: '/y' }\n                                                     // ]\n\nconst C = Value.Patch<typeof B>(A, E)                // const C = { x: 3 }\n```\n\n<a name='values-errors'></a>\n\n### Errors\n\nUse the Errors function to enumerate validation errors.\n\n```typescript\nconst T = Type.Object({ x: Type.Number(), y: Type.Number() })\n\nconst R = [...Value.Errors(T, { x: '42' })]          // const R = [{\n                                                     //   schema: { type: 'number' },\n                                                     //   path: '/x',\n                                                     //   value: '42',\n                                                     //   message: 'Expected number'\n                                                     // }, {\n                                                     //   schema: { type: 'number' },\n                                                     //   path: '/y',\n                                                     //   value: undefined,\n                                                     //   message: 'Expected number'\n                                                     // }]\n```\n\n<a name='values-mutate'></a>\n\n### Mutate\n\nUse the Mutate function to perform a deep mutable value assignment while retaining internal references.\n\n```typescript\nconst Y = { z: 1 }                                   // const Y = { z: 1 }\nconst X = { y: Y }                                   // const X = { y: { z: 1 } }\nconst A = { x: X }                                   // const A = { x: { y: { z: 1 } } }\n\nValue.Mutate(A, { x: { y: { z: 2 } } })              // A' = { x: { y: { z: 2 } } }\n\nconst R0 = A.x.y.z === 2                             // const R0 = true\nconst R1 = A.x.y === Y                               // const R1 = true\nconst R2 = A.x === X                                 // const R2 = true\n```\n\n<a name='values-pointer'></a>\n\n### Pointer\n\nUse ValuePointer to perform mutable updates on existing values using [RFC6901](https://www.rfc-editor.org/rfc/rfc6901) Json Pointers.\n\n```typescript\nimport { ValuePointer } from '@sinclair/typebox/value'\n\nconst A = { x: 0, y: 0, z: 0 }\n\nValuePointer.Set(A, '/x', 1)                         // A' = { x: 1, y: 0, z: 0 }\nValuePointer.Set(A, '/y', 1)                         // A' = { x: 1, y: 1, z: 0 }\nValuePointer.Set(A, '/z', 1)                         // A' = { x: 1, y: 1, z: 1 }\n```\n\n<a name='typeregistry'></a>\n\n## TypeRegistry\n\nThe TypeBox type system can be extended with additional types and formats using the TypeRegistry and FormatRegistry modules. These modules integrate deeply with TypeBox's internal type checking infrastructure and can be used to create application specific types, or register schematics for alternative specifications.\n\n<a name='typeregistry-type'></a>\n\n### TypeRegistry\n\nUse the TypeRegistry to register a type. The Kind must match the registered type name.\n\n```typescript\nimport { TSchema, Kind, TypeRegistry } from '@sinclair/typebox'\n\nTypeRegistry.Set('Foo', (schema, value) => value === 'foo')\n\nconst Foo = { [Kind]: 'Foo' } as TSchema \n\nconst A = Value.Check(Foo, 'foo')                    // const A = true\n\nconst B = Value.Check(Foo, 'bar')                    // const B = false\n```\n\n<a name='typeregistry-format'></a>\n\n### FormatRegistry\n\nUse the FormatRegistry to register a string format.\n\n```typescript\nimport { FormatRegistry } from '@sinclair/typebox'\n\nFormatRegistry.Set('foo', (value) => value === 'foo')\n\nconst T = Type.String({ format: 'foo' })\n\nconst A = Value.Check(T, 'foo')                      // const A = true\n\nconst B = Value.Check(T, 'bar')                      // const B = false\n```\n\n<a name='typecheck'></a>\n\n## TypeCheck\n\nTypeBox types target Json Schema Draft 7 and are compatible with any validator that supports this specification. TypeBox also provides a built in type checking compiler designed specifically for TypeBox types that offers high performance compilation and value checking.\n\nThe following sections detail using Ajv and the TypeBox compiler infrastructure.\n\n<a name='typecheck-ajv'></a>\n\n## Ajv\n\nThe following shows the recommended setup for Ajv.\n\n```bash\n$ npm install ajv ajv-formats --save\n```\n\n```typescript\nimport { Type }   from '@sinclair/typebox'\nimport addFormats from 'ajv-formats'\nimport Ajv        from 'ajv'\n\nconst ajv = addFormats(new Ajv({}), [\n  'date-time',\n  'time',\n  'date',\n  'email',\n  'hostname',\n  'ipv4',\n  'ipv6',\n  'uri',\n  'uri-reference',\n  'uuid',\n  'uri-template',\n  'json-pointer',\n  'relative-json-pointer',\n  'regex'\n])\n\nconst validate = ajv.compile(Type.Object({\n  x: Type.Number(),\n  y: Type.Number(),\n  z: Type.Number()\n}))\n\nconst R = validate({ x: 1, y: 2, z: 3 })             // const R = true\n```\n\n<a name='typecheck-typecompiler'></a>\n\n### TypeCompiler\n\nThe TypeBox TypeCompiler is a high performance JIT validation compiler that transforms TypeBox types into optimized JavaScript validation routines. The compiler is tuned for fast compilation as well as fast value assertion. It is built to serve as a validation backend that can be integrated into larger applications. It can also be used for code generation.\n\nThe TypeCompiler is provided as an optional import.\n\n```typescript\nimport { TypeCompiler } from '@sinclair/typebox/compiler'\n```\n\nUse the Compile function to JIT compile a type. Note that compilation is generally an expensive operation and should only be performed once per type during application start up. TypeBox does not cache previously compiled types, and applications are expected to hold references to each compiled type for the lifetime of the application.\n\n```typescript\nconst C = TypeCompiler.Compile(Type.Object({         // const C: TypeCheck<TObject<{\n  x: Type.Number(),                                  //     x: TNumber;\n  y: Type.Number(),                                  //     y: TNumber;\n  z: Type.Number()                                   //     z: TNumber;\n}))                                                  // }>>\n\nconst R = C.Check({ x: 1, y: 2, z: 3 })              // const R = true\n```\n\nUse the Errors function to generate diagnostic errors for a value. The Errors function will return an iterator that when enumerated; will perform an exhaustive check across the entire value yielding any error found. For performance, this function should only be called after a failed Check. Applications may also choose to yield only the first value to avoid exhaustive error generation.\n\n```typescript\nconst C = TypeCompiler.Compile(Type.Object({         // const C: TypeCheck<TObject<{\n  x: Type.Number(),                                  //     x: TNumber;\n  y: Type.Number(),                                  //     y: TNumber;\n  z: Type.Number()                                   //     z: TNumber;\n}))                                                  // }>>\n\nconst value = { }\n\nconst first = C.Errors(value).First()                // const first = {\n                                                     //   schema: { type: 'number' },\n                                                     //   path: '/x',\n                                                     //   value: undefined,\n                                                     //   message: 'Expected number'\n                                                     // }\n\nconst all = [...C.Errors(value)]                     // const all = [{\n                                                     //   schema: { type: 'number' },\n                                                     //   path: '/x',\n                                                     //   value: undefined,\n                                                     //   message: 'Expected number'\n                                                     // }, {\n                                                     //   schema: { type: 'number' },\n                                                     //   path: '/y',\n                                                     //   value: undefined,\n                                                     //   message: 'Expected number'\n                                                     // }, {\n                                                     //   schema: { type: 'number' },\n                                                     //   path: '/z',\n                                                     //   value: undefined,\n                                                     //   message: 'Expected number'\n                                                     // }]\n```\n\nUse the Code function to generate assertion functions as strings. This function can be used to generate code that can be written to disk as importable modules. This technique is sometimes referred to as Ahead of Time (AOT) compilation. The following generates code to check a string.\n\n```typescript\nconst C = TypeCompiler.Code(Type.String())           // const C = `return function check(value) {\n                                                     //   return (\n                                                     //     (typeof value === 'string')\n                                                     //   )\n                                                     // }`\n```\n\n<a name='typesystem'></a>\n\n## TypeSystem\n\nThe TypeBox TypeSystem module provides configurations to use either Json Schema or TypeScript type checking semantics. Configurations made to the TypeSystem module are observed by the TypeCompiler, Value and Error modules.\n\n<a name='typesystem-policies'></a>\n\n### Policies\n\nTypeBox validates using standard Json Schema assertion policies by default. The TypeSystemPolicy module can override some of these to have TypeBox assert values inline with TypeScript static checks. It also provides overrides for certain checking rules related to non-serializable values (such as void) which can be helpful in Json based protocols such as Json Rpc 2.0. \n\nThe following overrides are available.\n\n```typescript\nimport { TypeSystemPolicy } from '@sinclair/typebox/system'\n\n// Disallow undefined values for optional properties (default is false)\n//\n// const A: { x?: number } = { x: undefined } - disallowed when enabled\n\nTypeSystemPolicy.ExactOptionalPropertyTypes = true\n\n// Allow arrays to validate as object types (default is false)\n//\n// const A: {} = [] - allowed in TS\n\nTypeSystemPolicy.AllowArrayObject = true\n\n// Allow numeric values to be NaN or + or - Infinity (default is false)\n//\n// const A: number = NaN - allowed in TS\n\nTypeSystemPolicy.AllowNaN = true\n\n// Allow void types to check with undefined and null (default is false)\n//\n// Used to signal void return on Json-Rpc 2.0 protocol\n\nTypeSystemPolicy.AllowNullVoid = true\n```\n\n<a name='error-function'></a>\n\n## Error Function\n\nError messages in TypeBox can be customized by defining an ErrorFunction. This function allows for the localization of error messages as well as enabling custom error messages for custom types. By default, TypeBox will generate messages using the `en-US` locale. To support additional locales, you can replicate the function found in `src/errors/function.ts` and create a locale specific translation. The function can then be set via SetErrorFunction.\n\nThe following example shows an inline error function that intercepts errors for String, Number and Boolean only. The DefaultErrorFunction is used to return a default error message.\n\n\n```typescript\nimport { SetErrorFunction, DefaultErrorFunction, ValueErrorType } from '@sinclair/typebox/errors'\n\nSetErrorFunction((error) => { // i18n override\n  switch(error.errorType) {\n    /* en-US */ case ValueErrorType.String: return 'Expected string'\n    /* fr-FR */ case ValueErrorType.Number: return 'Nombre attendu'  \n    /* ko-KR */ case ValueErrorType.Boolean: return '예상 부울'      \n    /* en-US */ default: return DefaultErrorFunction(error)          \n  }\n})\nconst T = Type.Object({                              // const T: TObject<{\n  x: Type.String(),                                  //  TString,\n  y: Type.Number(),                                  //  TNumber,\n  z: Type.Boolean()                                  //  TBoolean\n})                                                   // }>\n\nconst E = [...Value.Errors(T, {                      // const E = [{\n  x: null,                                           //   type: 48,\n  y: null,                                           //   schema: { ... },\n  z: null                                            //   path: '/x',\n})]                                                  //   value: null,\n                                                     //   message: 'Expected string'\n                                                     // }, {\n                                                     //   type: 34,\n                                                     //   schema: { ... },\n                                                     //   path: '/y',\n                                                     //   value: null,\n                                                     //   message: 'Nombre attendu'\n                                                     // }, {\n                                                     //   type: 14,\n                                                     //   schema: { ... },\n                                                     //   path: '/z',\n                                                     //   value: null,\n                                                     //   message: '예상 부울'\n                                                     // }]\n```\n\n<a name='workbench'></a>\n\n## TypeBox Workbench\n\nTypeBox offers a web based code generation tool that can convert TypeScript types into TypeBox types as well as several other ecosystem libraries.\n\n[TypeBox Workbench Link Here](https://sinclairzx81.github.io/typebox-workbench/)\n\n<a name='codegen'></a>\n\n## TypeBox Codegen\n\nTypeBox provides a code generation library that can be integrated into toolchains to automate type translation between TypeScript and TypeBox. This library also includes functionality to transform TypeScript types to other ecosystem libraries.\n\n[TypeBox Codegen Link Here](https://github.com/sinclairzx81/typebox-codegen)\n\n<a name='ecosystem'></a>\n\n## Ecosystem\n\nThe following is a list of community packages that offer general tooling, extended functionality and framework integration support for TypeBox.\n\n| Package   |  Description |\n| ------------- | ------------- |\n| [drizzle-typebox](https://www.npmjs.com/package/drizzle-typebox) | Generates TypeBox types from Drizzle ORM schemas |\n| [elysia](https://github.com/elysiajs/elysia) | Fast and friendly Bun web framework |\n| [fastify-type-provider-typebox](https://github.com/fastify/fastify-type-provider-typebox) | Fastify TypeBox integration with the Fastify Type Provider |\n| [feathersjs](https://github.com/feathersjs/feathers) | The API and real-time application framework |\n| [fetch-typebox](https://github.com/erfanium/fetch-typebox) | Drop-in replacement for fetch that brings easy integration with TypeBox |\n| [h3-typebox](https://github.com/kevinmarrec/h3-typebox) | Schema validation utilities for h3 using TypeBox & Ajv |\n| [http-wizard](https://github.com/flodlc/http-wizard) | Type safe http client library for Fastify |\n| [json2typebox](https://github.com/hacxy/json2typebox) | Creating TypeBox code from Json Data |\n| [nominal-typebox](https://github.com/Coder-Spirit/nominal/tree/main/%40coderspirit/nominal-typebox) | Allows devs to integrate nominal types into TypeBox schemas |\n| [openapi-box](https://github.com/geut/openapi-box) | Generate TypeBox types from OpenApi IDL + Http client library |\n| [prismabox](https://github.com/m1212e/prismabox) | Converts a prisma.schema to typebox schema matching the database models |\n| [schema2typebox](https://github.com/xddq/schema2typebox)  | Creating TypeBox code from Json Schemas |\n| [sveltekit-superforms](https://github.com/ciscoheat/sveltekit-superforms)  | A comprehensive SvelteKit form library for server and client validation |\n| [ts2typebox](https://github.com/xddq/ts2typebox) | Creating TypeBox code from Typescript types |\n| [typebox-form-parser](https://github.com/jtlapp/typebox-form-parser) | Parses form and query data based on TypeBox schemas |\n| [typebox-validators](https://github.com/jtlapp/typebox-validators) | Advanced validators supporting discriminated and heterogeneous unions |\n\n<a name='benchmark'></a>\n\n## Benchmark\n\nThis project maintains a set of benchmarks that measure Ajv, Value and TypeCompiler compilation and validation performance. These benchmarks can be run locally by cloning this repository and running `npm run benchmark`. The results below show for Ajv version 8.12.0 running on Node 20.10.0.\n\nFor additional comparative benchmarks, please refer to [typescript-runtime-type-benchmarks](https://moltar.github.io/typescript-runtime-type-benchmarks/).\n\n<a name='benchmark-compile'></a>\n\n### Compile\n\nThis benchmark measures compilation performance for varying types.\n\n```typescript\n┌────────────────────────────┬────────────┬──────────────┬──────────────┬──────────────┐\n│ (index)                    │ Iterations │ Ajv          │ TypeCompiler │ Performance  │\n├────────────────────────────┼────────────┼──────────────┼──────────────┼──────────────┤\n│ Literal_String             │ 1000       │ '    211 ms' │ '      8 ms' │ '   26.38 x' │\n│ Literal_Number             │ 1000       │ '    185 ms' │ '      5 ms' │ '   37.00 x' │\n│ Literal_Boolean            │ 1000       │ '    195 ms' │ '      4 ms' │ '   48.75 x' │\n│ Primitive_Number           │ 1000       │ '    149 ms' │ '      7 ms' │ '   21.29 x' │\n│ Primitive_String           │ 1000       │ '    135 ms' │ '      5 ms' │ '   27.00 x' │\n│ Primitive_String_Pattern   │ 1000       │ '    193 ms' │ '     10 ms' │ '   19.30 x' │\n│ Primitive_Boolean          │ 1000       │ '    152 ms' │ '      4 ms' │ '   38.00 x' │\n│ Primitive_Null             │ 1000       │ '    147 ms' │ '      4 ms' │ '   36.75 x' │\n│ Object_Unconstrained       │ 1000       │ '   1065 ms' │ '     26 ms' │ '   40.96 x' │\n│ Object_Constrained         │ 1000       │ '   1183 ms' │ '     26 ms' │ '   45.50 x' │\n│ Object_Vector3             │ 1000       │ '    407 ms' │ '      9 ms' │ '   45.22 x' │\n│ Object_Box3D               │ 1000       │ '   1777 ms' │ '     24 ms' │ '   74.04 x' │\n│ Tuple_Primitive            │ 1000       │ '    485 ms' │ '     11 ms' │ '   44.09 x' │\n│ Tuple_Object               │ 1000       │ '   1344 ms' │ '     17 ms' │ '   79.06 x' │\n│ Composite_Intersect        │ 1000       │ '    606 ms' │ '     14 ms' │ '   43.29 x' │\n│ Composite_Union            │ 1000       │ '    522 ms' │ '     17 ms' │ '   30.71 x' │\n│ Math_Vector4               │ 1000       │ '    851 ms' │ '      9 ms' │ '   94.56 x' │\n│ Math_Matrix4               │ 1000       │ '    406 ms' │ '     10 ms' │ '   40.60 x' │\n│ Array_Primitive_Number     │ 1000       │ '    367 ms' │ '      6 ms' │ '   61.17 x' │\n│ Array_Primitive_String     │ 1000       │ '    339 ms' │ '      7 ms' │ '   48.43 x' │\n│ Array_Primitive_Boolean    │ 1000       │ '    325 ms' │ '      5 ms' │ '   65.00 x' │\n│ Array_Object_Unconstrained │ 1000       │ '   1863 ms' │ '     21 ms' │ '   88.71 x' │\n│ Array_Object_Constrained   │ 1000       │ '   1535 ms' │ '     18 ms' │ '   85.28 x' │\n│ Array_Tuple_Primitive      │ 1000       │ '    829 ms' │ '     14 ms' │ '   59.21 x' │\n│ Array_Tuple_Object         │ 1000       │ '   1674 ms' │ '     14 ms' │ '  119.57 x' │\n│ Array_Composite_Intersect  │ 1000       │ '    789 ms' │ '     13 ms' │ '   60.69 x' │\n│ Array_Composite_Union      │ 1000       │ '    822 ms' │ '     15 ms' │ '   54.80 x' │\n│ Array_Math_Vector4         │ 1000       │ '   1129 ms' │ '     14 ms' │ '   80.64 x' │\n│ Array_Math_Matrix4         │ 1000       │ '    673 ms' │ '      9 ms' │ '   74.78 x' │\n└────────────────────────────┴────────────┴──────────────┴──────────────┴──────────────┘\n```\n\n<a name='benchmark-validate'></a>\n\n### Validate\n\nThis benchmark measures validation performance for varying types.\n\n```typescript\n┌────────────────────────────┬────────────┬──────────────┬──────────────┬──────────────┬──────────────┐\n│ (index)                    │ Iterations │ ValueCheck   │ Ajv          │ TypeCompiler │ Performance  │\n├────────────────────────────┼────────────┼──────────────┼──────────────┼──────────────┼──────────────┤\n│ Literal_String             │ 1000000    │ '     17 ms' │ '      5 ms' │ '      5 ms' │ '    1.00 x' │\n│ Literal_Number             │ 1000000    │ '     14 ms' │ '     18 ms' │ '      9 ms' │ '    2.00 x' │\n│ Literal_Boolean            │ 1000000    │ '     14 ms' │ '     20 ms' │ '      9 ms' │ '    2.22 x' │\n│ Primitive_Number           │ 1000000    │ '     17 ms' │ '     19 ms' │ '      9 ms' │ '    2.11 x' │\n│ Primitive_String           │ 1000000    │ '     17 ms' │ '     18 ms' │ '     10 ms' │ '    1.80 x' │\n│ Primitive_String_Pattern   │ 1000000    │ '    172 ms' │ '     46 ms' │ '     41 ms' │ '    1.12 x' │\n│ Primitive_Boolean          │ 1000000    │ '     14 ms' │ '     19 ms' │ '     10 ms' │ '    1.90 x' │\n│ Primitive_Null             │ 1000000    │ '     16 ms' │ '     19 ms' │ '      9 ms' │ '    2.11 x' │\n│ Object_Unconstrained       │ 1000000    │ '    437 ms' │ '     28 ms' │ '     14 ms' │ '    2.00 x' │\n│ Object_Constrained         │ 1000000    │ '    653 ms' │ '     46 ms' │ '     37 ms' │ '    1.24 x' │\n│ Object_Vector3             │ 1000000    │ '    201 ms' │ '     22 ms' │ '     12 ms' │ '    1.83 x' │\n│ Object_Box3D               │ 1000000    │ '    961 ms' │ '     37 ms' │ '     19 ms' │ '    1.95 x' │\n│ Object_Recursive           │ 1000000    │ '   3715 ms' │ '    363 ms' │ '    174 ms' │ '    2.09 x' │\n│ Tuple_Primitive            │ 1000000    │ '    107 ms' │ '     23 ms' │ '     11 ms' │ '    2.09 x' │\n│ Tuple_Object               │ 1000000    │ '    375 ms' │ '     28 ms' │ '     15 ms' │ '    1.87 x' │\n│ Composite_Intersect        │ 1000000    │ '    377 ms' │ '     22 ms' │ '     12 ms' │ '    1.83 x' │\n│ Composite_Union            │ 1000000    │ '    337 ms' │ '     30 ms' │ '     17 ms' │ '    1.76 x' │\n│ Math_Vector4               │ 1000000    │ '    137 ms' │ '     23 ms' │ '     11 ms' │ '    2.09 x' │\n│ Math_Matrix4               │ 1000000    │ '    576 ms' │ '     37 ms' │ '     28 ms' │ '    1.32 x' │\n│ Array_Primitive_Number     │ 1000000    │ '    145 ms' │ '     23 ms' │ '     12 ms' │ '    1.92 x' │\n│ Array_Primitive_String     │ 1000000    │ '    152 ms' │ '     22 ms' │ '     13 ms' │ '    1.69 x' │\n│ Array_Primitive_Boolean    │ 1000000    │ '    131 ms' │ '     20 ms' │ '     13 ms' │ '    1.54 x' │\n│ Array_Object_Unconstrained │ 1000000    │ '   2821 ms' │ '     62 ms' │ '     45 ms' │ '    1.38 x' │\n│ Array_Object_Constrained   │ 1000000    │ '   2958 ms' │ '    119 ms' │ '    134 ms' │ '    0.89 x' │\n│ Array_Object_Recursive     │ 1000000    │ '  14695 ms' │ '   1621 ms' │ '    635 ms' │ '    2.55 x' │\n│ Array_Tuple_Primitive      │ 1000000    │ '    478 ms' │ '     35 ms' │ '     28 ms' │ '    1.25 x' │\n│ Array_Tuple_Object         │ 1000000    │ '   1623 ms' │ '     63 ms' │ '     48 ms' │ '    1.31 x' │\n│ Array_Composite_Intersect  │ 1000000    │ '   1582 ms' │ '     43 ms' │ '     30 ms' │ '    1.43 x' │\n│ Array_Composite_Union      │ 1000000    │ '   1331 ms' │ '     76 ms' │ '     40 ms' │ '    1.90 x' │\n│ Array_Math_Vector4         │ 1000000    │ '    564 ms' │ '     38 ms' │ '     24 ms' │ '    1.58 x' │\n│ Array_Math_Matrix4         │ 1000000    │ '   2382 ms' │ '    111 ms' │ '     83 ms' │ '    1.34 x' │\n└────────────────────────────┴────────────┴──────────────┴──────────────┴──────────────┴──────────────┘\n```\n\n<a name='benchmark-compression'></a>\n\n### Compression\n\nThe following table lists esbuild compiled and minified sizes for each TypeBox module.\n\n```typescript\n┌──────────────────────┬────────────┬────────────┬─────────────┐\n│ (index)              │ Compiled   │ Minified   │ Compression │\n├──────────────────────┼────────────┼────────────┼─────────────┤\n│ typebox/compiler     │ '122.4 kb' │ ' 53.4 kb' │ '2.29 x'    │\n│ typebox/errors       │ ' 67.6 kb' │ ' 29.6 kb' │ '2.28 x'    │\n│ typebox/syntax       │ '132.9 kb' │ ' 54.2 kb' │ '2.45 x'    │\n│ typebox/system       │ '  7.4 kb' │ '  3.2 kb' │ '2.33 x'    │\n│ typebox/value        │ '150.1 kb' │ ' 62.2 kb' │ '2.41 x'    │\n│ typebox              │ '106.8 kb' │ ' 43.2 kb' │ '2.47 x'    │\n└──────────────────────┴────────────┴────────────┴─────────────┘\n```\n\n<a name='contribute'></a>\n\n## Contribute\n\nTypeBox is open to community contribution. Please ensure you submit an open issue before submitting your pull request. The TypeBox project prefers open community discussion before accepting new features.\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "task",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tsconfig.json",
          "type": "blob",
          "size": 0.5546875,
          "content": "{\n  \"compilerOptions\": {\n    \"strict\": true,\n    \"target\": \"ES2020\",\n    \"module\": \"ESNext\",\n    \"moduleResolution\": \"Node\",\n    \"baseUrl\": \".\",\n    \"paths\": {\n      \"@sinclair/typebox/compiler\": [\"src/compiler/index.ts\"],\n      \"@sinclair/typebox/errors\": [\"src/errors/index.ts\"],\n      \"@sinclair/typebox/syntax\": [\"src/syntax/index.ts\"],\n      \"@sinclair/typebox/system\": [\"src/system/index.ts\"],\n      \"@sinclair/typebox/type\": [\"src/type/index.ts\"],\n      \"@sinclair/typebox/value\": [\"src/value/index.ts\"],\n      \"@sinclair/typebox\": [\"src/index.ts\"],\n    }\n  }\n}"
        },
        {
          "name": "typebox.png",
          "type": "blob",
          "size": 851.751953125,
          "content": null
        }
      ]
    }
  ]
}