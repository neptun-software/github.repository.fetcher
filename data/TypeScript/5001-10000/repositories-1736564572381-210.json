{
  "metadata": {
    "timestamp": 1736564572381,
    "page": 210,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "adazzle/react-data-grid",
      "stars": 7057,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0185546875,
          "content": "* text=auto eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0986328125,
          "content": "/.cache\n/coverage\n/dist\n/lib\n/node_modules\n/package-lock.json\n__screenshots__\n\nnpm-debug.log\n**.orig\n"
        },
        {
          "name": ".npmrc",
          "type": "blob",
          "size": 0.0234375,
          "content": "legacy-peer-deps = true\n"
        },
        {
          "name": ".prettierignore",
          "type": "blob",
          "size": 0.04296875,
          "content": "*.js\n*.json\n*.css\n/website/routeTree.gen.ts\n"
        },
        {
          "name": ".prettierrc.json",
          "type": "blob",
          "size": 0.42578125,
          "content": "{\n  \"singleQuote\": true,\n  \"trailingComma\": \"none\",\n  \"printWidth\": 100,\n  \"plugins\": [\"@ianvs/prettier-plugin-sort-imports\"],\n  \"importOrder\": [\n    \"<BUILTIN_MODULES>\",\n    \"^react$\",\n    \"^react-dom\",\n    \"^react\",\n    \"<THIRD_PARTY_MODULES>\",\n    \"^@linaria/core$\",\n    \"^clsx$\",\n    \"\",\n    \"./src\",\n    \"./renderers\",\n    \"./components\",\n    \"./hooks\",\n    \"./utils\",\n    \"./types\",\n    \"^\\\\.$\",\n    \"^\\\\./\",\n    \"^\\\\.\\\\./\"\n  ]\n}\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 21.33984375,
          "content": "# Changelog\n\n## v7.0.0-canary.48\n\n- Fixed an edge case where clicking outside the grid wouldn't close and commit an open editor quickly enough, resulting in the previous rows state being used by parent components in `click` handlers. ([PR](https://github.com/adazzle/react-data-grid/pull/2415))\n- Support for filters has been removed, along with: ([PR](https://github.com/adazzle/react-data-grid/pull/2412))\n  - The `<DataGrid />` props: `headerFiltersHeight`, `filters`, `onFiltersChange`, `enableFilterRow`\n  - `Column.filterRenderer`\n  - The exports: `FilterRendererProps`, `Filters`\n- Optional `Column` props can now also be `null` in addition to `undefined`. ([PR](https://github.com/adazzle/react-data-grid/pull/2409))\n\n## v7.0.0-canary.47\n\n- Added a third, optional generic on `<DataGrid />` to specify the row key type. ([PR](https://github.com/adazzle/react-data-grid/pull/2311))\n- Added the `useRowSelection` hook for custom cell renderers to access `isRowSelected` and `onRowSelectionChange`. ([PR](https://github.com/adazzle/react-data-grid/pull/2338))\n- `HeaderRendererProps.allRowsSelected` tweaks, affecting the `SelectColumn`: ([PR](https://github.com/adazzle/react-data-grid/pull/2402))\n  - It will now be `false` when `rows.length === 0` instead of `true`.\n  - `selectedRows` must contain all the row keys for `allRowsSelected` to be `true`, instead of naively comparing the `size` and `length`.\n- Optional props on `<DataGrid />` can now also be `null` in addition to `undefined`. ([PR](https://github.com/adazzle/react-data-grid/pull/2406))\n\n## v7.0.0-canary.46\n\n- Optimize onRowsChange: only update changed rows ([PR](https://github.com/adazzle/react-data-grid/pull/2390))\n\n## v7.0.0-canary.45\n\n- Fixed issue where the scrollbars would flicker in edge cases ([PR](https://github.com/adazzle/react-data-grid/pull/2389))\n\n## v7.0.0-canary.44\n\n- Use aria-selected to style selected cell/rows ([PR](https://github.com/adazzle/react-data-grid/pull/2386))\n- Add support for variable row heights ([PR](https://github.com/adazzle/react-data-grid/pull/2384))\n\n## v7.0.0-canary.43\n\n- Fix `aria-readonly` ([PR](https://github.com/adazzle/react-data-grid/pull/2380))\n\n## v7.0.0-canary.42\n\n- Add missing `aria-colspan` ([PR](https://github.com/adazzle/react-data-grid/pull/2374))\n- Add `aria-readonly` to readonly cells ([PR](https://github.com/adazzle/react-data-grid/pull/2379))\n\n## v7.0.0-canary.41\n\n- Fix summary row colSpan ([PR](https://github.com/adazzle/react-data-grid/pull/2372))\n- HeaderCell: Add missing event parameter to onPointerUp, fix #2305 ([PR](https://github.com/adazzle/react-data-grid/pull/2371))\n\n## v7.0.0-canary.40\n\n- Add `column.colSpan` prop to merge cells ([PR](https://github.com/adazzle/react-data-grid/pull/2356))\n- Removed prefixed css properties from the generated style file ([PR](https://github.com/adazzle/react-data-grid/pull/2370))\n\n## v7.0.0-canary.39\n\n- Add `enableVirtualization` prop ([PR](https://github.com/adazzle/react-data-grid/pull/2355)). Grid renders all the rows/columns when it is set to false.\n\n## v7.0.0-canary.38\n\n- Fix summary row position ([PR](https://github.com/adazzle/react-data-grid/pull/2335))\n\n## v7.0.0-canary.37\n\n- Add `summaryRowHeight` prop ([PR](https://github.com/adazzle/react-data-grid/pull/2325))\n- Rollup type definitions ([PR](https://github.com/adazzle/react-data-grid/pull/2301))\n\n## v7.0.0-canary.36\n\n- Fixed column headers not showing when grid is horizontally scrolled ([PR](https://github.com/adazzle/react-data-grid/pull/2297))\n\n## v7.0.0-canary.35\n\n- Migrate to css-in-js with linaria ([PR](https://github.com/adazzle/react-data-grid/pull/2256)). RDG now internally uses [linaria](https://github.com/callstack/linaria) to manage styles. The stylesheets are automatically injected and there is no stylesheet to manually import anymore.\n- Expose data grid root element reference ([PR](https://github.com/adazzle/react-data-grid/pull/2258)).\n- (Bug fix) Tabbing into the grid should initiate keyboard navigation ([PR](https://github.com/adazzle/react-data-grid/pull/2289)).\n\n## v7.0.0-canary.34\n\n- Only show the vertical scrollbar when necessary ([PR](https://github.com/adazzle/react-data-grid/pull/2231))\n- Fix `editorPortalTarget` default value for server-side rendering ([PR](https://github.com/adazzle/react-data-grid/pull/2245))\n- Use grid layout for rows, split column metrics from compute columns ([PR](https://github.com/adazzle/react-data-grid/pull/2272)). Resizing columns no longer recreates columns so less re-renders\n- Augment `onRowsChange` with `indexes` and `column` data ([PR](https://github.com/adazzle/react-data-grid/pull/2278))\n\n## v7.0.0-canary.33\n\n- (Bug) Commit changes before exiting grid ([PR](https://github.com/adazzle/react-data-grid/pull/2224))\n\n## v7.0.0-canary.32\n\n- Fix importing rdg with webpack 4 ([PR](https://github.com/adazzle/react-data-grid/pull/2221))\n\n## v7.0.0-canary.31\n\n- (Breaking) Remove some exports from the grid ([PR](https://github.com/adazzle/react-data-grid/pull/2210))\n- Use a pseudo-element for header resizer ([PR](https://github.com/adazzle/react-data-grid/pull/2217))\n- (new) Formatters now receive a new onRowChange prop ([PR](https://github.com/adazzle/react-data-grid/pull/2220))\n- (new) Change `column.name` type from `string` to `string/ReactElement` ([PR](https://github.com/adazzle/react-data-grid/pull/2220))\n- Publish bundles instead of modules, use babel only for transpilation ([PR](https://github.com/adazzle/react-data-grid/pull/2214))\n- Use the new jsx runtime ([PR](https://github.com/adazzle/react-data-grid/pull/2184)). The minimum supported react version is 16.14 now.\n\n## v7.0.0-canary.30\n\n- Forward sorting props to `headerRenderer` ([PR](https://github.com/adazzle/react-data-grid/pull/2204))\n- Disable cell navigation while editing. This behavior can be controlled using the new `column.editorOptions.onNavigation` option ([PR](https://github.com/adazzle/react-data-grid/pull/2196))\n\n## v7.0.0-canary.29\n\n- Fix crash when `rows` are `undefined` ([PR](https://github.com/adazzle/react-data-grid/pull/2197))\n- Fix a scrolling bug caused by `scroll-behavior: smooth` ([PR](https://github.com/adazzle/react-data-grid/pull/2200))\n\n## v7.0.0-canary.28\n\n- (Breaking) Removed `onRowsUpdate`, `enableCellCopyPaste`, and `enableCellDragAndDrop` props. Added 2 new props (`onFill` and `onPaste`) ([PR](https://github.com/adazzle/react-data-grid/pull/2194))\n- (Breaking) Rename `enableFilters` to `enableFilterRow` ([PR](https://github.com/adazzle/react-data-grid/pull/2195))\n\n## v7.0.0-canary.27\n\n- (Breaking) Removed old editor API ([PR](https://github.com/adazzle/react-data-grid/pull/2149))\n- (Breaking) Removed `onCheckCellIsEditable` prop ([PR](https://github.com/adazzle/react-data-grid/pull/2016)). Use `column.editable` instead.\n  = (Breaking) Replaced rowKey prop with rowKeyGetter ([PR](https://github.com/adazzle/react-data-grid/pull/2190))\n\n## v7.0.0-canary.26\n\n- Fixed Copy & Paste events not working properly in non-English keyboards ([PR](https://github.com/adazzle/react-data-grid/pull/2097))\n\n## v7.0.0-canary.25\n\n- Added support for webpack 5 ([PR](https://github.com/adazzle/react-data-grid/pull/2178))\n\n## v7.0.0-canary.24\n\n- Fixed a bug where grid was getting scrolled on cell focus\n\n## v7.0.0-canary.23\n\n- Minor style fixes\n\n## v7.0.0-canary.22\n\n- Add Grouping ([PR](https://github.com/adazzle/react-data-grid/pull/2106)). Check the new [example](https://adazzle.github.io/react-data-grid/#/grouping).\n- (Breaking) Removed `height` and `width` props and added new `className` and `style` props. We are now using `ResizeObserver` to calculate all the grid dimensions ([PR](https://github.com/adazzle/react-data-grid/pull/2130))\n- (Breaking) Removed formatterOptions. Grid now handles formatter focus internally so this prop is no longer required ([PR](https://github.com/adazzle/react-data-grid/pull/2138))\n- Added support for React 17\n\n## v7.0.0-canary.21\n\n- Editor2 bug fixes ([PR](https://github.com/adazzle/react-data-grid/pull/2126))\n- `formatterOptions.focusable` can be a function now so different rows can have different focus behavior for the same column\n- Grid now internally uses `ResizeObserver` API to calculate the available width ([PR](https://github.com/adazzle/react-data-grid/pull/2129))\n\n## v7.0.0-canary.20\n\n- A new editor api that does not require a ref ([PR](https://github.com/adazzle/react-data-grid/pull/2102))\n- A new `columnDefaultOptions` prop. This replaces `minColumnWidth` and `defaultFormatter` props ([PR](https://github.com/adazzle/react-data-grid/pull/2117))\n\n## v7.0.0-canary.19\n\n- Allow setting ref on `Cell/Row` renderers ([PR](https://github.com/adazzle/react-data-grid/pull/2111))\n\n## v7.0.0-canary.18\n\n- Accessibility improvements. Added various aria attributes. ([PR](https://github.com/adazzle/react-data-grid/pull/2084))\n- Removed enableCellAutoFocus prop ([PR](https://github.com/adazzle/react-data-grid/pull/2073))\n- Removed InteractionMasks component. This is an internal change to prepare for grouping and it fixes a few selected cell position bugs\n- Improved focus for custom formatters using the new formatterOptions ([PR](https://github.com/adazzle/react-data-grid/pull/2104))\n\n## v7.0.0-canary.17\n\n- Performance improvements ([PR](https://github.com/adazzle/react-data-grid/pull/2015))\n- A new rowClass prop ([PR](https://github.com/adazzle/react-data-grid/pull/2058))\n\n## `alpha` to `canary`\n\n- **Added:**\n  - **Props:**\n    - `className`\n    - `style`\n    - `onRowsChange`\n    - `onFill`\n    - `onPaste`\n    - `onSelectedCellChange`\n      - ⚠️ This replaces the `onCellSelected` and `onCellDeSelected` props\n    - `enableFilterRow`\n      - ⚠️ This replaces the `enableHeaderFilters` and `column.filterable` props\n    - `filters`\n    - `onFiltersChange`\n    - `rows`\n      - ⚠️ This replace the `rowGetter` and `rowsCount` props\n    - `rowClass`\n    - `defaultColumnOptions`\n      - ⚠️ This replaces the `minColumnWidth` and `defaultFormatter` props\n    - `groupBy`\n    - `rowGrouper`\n      - More info in [#2106](https://github.com/adazzle/react-data-grid/pull/2106)\n  - `column.cellClass(row)` function support:\n    - `column = { ..., cellClass(row) { return string; } }`\n  - `column.minWidth`\n  - `column.maxWidth`\n  - `column.headerCellClass`\n  - `column.editor`\n    - New API\n  - `column.editorOptions`\n    - More info in [#2102](https://github.com/adazzle/react-data-grid/pull/2102)\n  - `column.groupFormatter`\n    - More info in [#2106](https://github.com/adazzle/react-data-grid/pull/2106)\n  - `scrollToRow` method\n    - ⚠️ This replaces the `scrollToRowIndex` prop\n  - Dark mode support\n    - Dark mode is automatically applied following user preference\n    - Light and dark modes can be forced by setting the `rdg-light` or `rdg-dark` class names.\n- **Removed:**\n  - **Support:**\n    - ⚠️ IE11\n  - **Packages:**\n    - ⚠️ `react-data-grid-addons`\n  - **Props:**\n    - ⚠️ `width`\n    - ⚠️ `height`\n    - ⚠️ `cellContentRenderer`\n    - ⚠️ `contextMenu`\n      - Check the [Context Menu](https://adazzle.github.io/react-data-grid/#/context-menu) example\n    - ⚠️ `enableCellSelect`\n    - ⚠️ `enableCellAutoFocus`\n    - ⚠️ `getValidFilterValues`\n    - ⚠️ `onCellCopyPaste`\n    - ⚠️ `onSelectedCellRangeChange`\n    - ⚠️ `onCheckCellIsEditable`\n      - Use `column.editable` instead.\n    - ⚠️ `onGridKeyDown`\n    - ⚠️ `onGridKeyUp`\n    - ⚠️ `onRowDoubleClick`\n    - ⚠️ `onRowsUpdate`\n      - Use `onRowsChange`, `onFill`, and `onPaste` instead.\n    - ⚠️ `onHeaderDrop`\n    - ⚠️ `draggableHeaderCell`\n      - Check [#2007](https://github.com/adazzle/react-data-grid/pull/2007) on how to migrate\n    - ⚠️ `rowGroupRenderer`\n    - ⚠️ `onRowExpandToggle`\n      - Check [#2012](https://github.com/adazzle/react-data-grid/pull/2012) on how to migrate\n    - ⚠️ `rowsContainer`\n    - ⚠️ Subrow props: `getSubRowDetails`, `onCellExpand`, `onDeleteSubRow`, and `onAddSubRow`\n      - Check [#1853](https://github.com/adazzle/react-data-grid/pull/1853) on how to migrate\n    - ⚠️ `cellMetaData` (from `Row` and `Cell` props)\n    - ⚠️ `value` (from `column.formatter` props)\n  - **Ref handlers:**\n    - ⚠️ `openCellEditor`, use `selectCell` instead.\n  - ⚠️ React elements are no longer supported, please use components instead.\n    - For example:\n    ```diff\n    const column = {\n      key: 'example',\n      name: 'Example',\n    - formatter: <CustomFormatter length={5} />\n    + formatter: (props) => <CustomFormatter {...props} length={5} />\n    };\n    ```\n  - ⚠️ `column.events`\n  - ⚠️ `column.getCellActions`\n    - Check [#1845](https://github.com/adazzle/react-data-grid/pull/1845) on how to migrate\n  - ⚠️ `column.getRowMetaData`\n  - ⚠️ `column.minColumnWidth`\n  - ⚠️ `column.filterable`\n  - ⚠️ `column.draggable`\n  - ⚠️ `cellRangeSelection.{onStart,onUpdate,onEnd}`\n  - ⚠️ `fromRowId`, `toRowId`, and `fromRowData` from `onRowsUpdate` argument\n  - ⚠️ Stopped exporting `HeaderCell`\n- **Renamed:**\n  - ⚠️ `minHeight` to `height`\n  - ⚠️ `minWidth` to `width`\n  - ⚠️ `onGridSort` to `onSort`\n  - ⚠️ `emptyRowsView` to `emptyRowsRenderer`\n  - ⚠️ `rowKey` to `rowKeyGetter`\n  - ⚠️ `rowData` to `row`\n  - ⚠️ `fromRowData` to `fromRow`\n  - ⚠️ `idx` to `rowIdx` in `Row` renderer\n- **Changed:**\n  - ⚠️ Started publishing ES2019/ESM modules instead of ES5/CommonJS modules.\n    - Using [`@babel/preset-env`](https://www.npmjs.com/package/@babel/preset-env) with [`core-js`](https://www.npmjs.com/package/core-js) is recommended to enable compatibility for the browsers your project aims to support.\n  - ⚠️ Improved support for summary rows:\n    - `summaryRows` types are now independent from `rows`\n    - Added `column.summaryCellClass` and `column.summaryFormatter` props\n    - `column.formatter` isn't used anymore to render summary row cells.\n  - Only visible headers cells are now rendered. [#1837](https://github.com/adazzle/react-data-grid/pull/1837)\n  - ⚠️ the `rowKeyGetter` prop is now required for row selection.\n  - ⚠️ `column.cellClass` does not affect header cells anymore.\n  - ⚠️ `onScroll` will directly pass the UIEvent rather than the scrollLeft and scrollRight only.\n  - ⚠️ The stylesheets are now automatically injected, there is no stylsheet to manually import anymore.\n\n## `main` to `alpha`\n\n- **Added:**\n  - TypeScript declaration files\n  - `column.cellContentRenderer`\n    - More info in this [gist](https://gist.github.com/nstepien/090298c3c2d94324cb332c33d82fdcfb)\n  - `summaryRows` prop [#1773](https://github.com/adazzle/react-data-grid/pull/1773)\n  - `sortColumn` and `sortDirection` props\n    - ⚠️ The internal sort states have been removed.\n    - Check [#1768](https://github.com/adazzle/react-data-grid/pull/1768) on how to migrate.\n  - `selectedRows` and `onSelectedRowsChange` props\n    - ⚠️ Row selection has been reimplemented.\n    - A new `SelectColumn` is now available to import and add a row selection column.\n    - Check [#1762](https://github.com/adazzle/react-data-grid/pull/1762) on how to migrate.\n- **Removed:**\n  - **Packages:**\n    - `react-data-grid-examples`\n      - Use the website as reference, or clone the repo locally and run `npm install` + `npm start`\n  - **Props:**\n    - ⚠️ `onCellsDragged`\n    - ⚠️ `onDragHandleDoubleClick`\n    - ⚠️ `onRows`\n    - ⚠️ `onRowUpdated`\n    - ⚠️ `rowScrollTimeout`\n    - ⚠️ `toolbar`\n      - Check [#1769](https://github.com/adazzle/react-data-grid/pull/1769) on how to migrate\n    - ⚠️ `isScrolling` (from `column.formatter` props)\n  - ⚠️ `ContainerEditorWrapper`\n  - ⚠️ `EditorBase`\n  - ⚠️ `setScrollLeft` from `Row` and `Cell` renderers\n    - `setScrollLeft` instance method was previously required on custom Cell and Row renderers and it can be safely removed now.\n    - More info in [#1793](https://github.com/adazzle/react-data-grid/pull/1793)\n  - ⚠️ Dropped ImmutableJS support.\n  - ⚠️ Dropped dynamic height row support.\n    - This was not officially supported, but it was still possible to implement dynamic rows via custom Row renderer. This was a buggy feature so it has been removed.\n  - ⚠️ Removed row reordering support.\n- **Renamed:**\n  - `ReactDataGrid` to `DataGrid`\n- **Changed:**\n  - ⚠️ The stylesheets are now bundled separately:\n    - `react-data-grid/dist/react-data-grid.css`\n  - ⚠️ Reimplemented stylesheets, renamed various class names [#1780](https://github.com/adazzle/react-data-grid/pull/1780)\n    - No longer depends on bootstrap\n  - Resizing a column now immediately resizes all its cells instead of just its header.\n  - Improved performance across the board.\n\n### react-data-grid-addons\n\n- ⚠️ `react-data-grid-addons` has no default export anymore\n  - Use `import * as DataGridAddons from 'react-data-grid-addons';` instead\n- ⚠️ The stylesheets are now bundled separately:\n  - `react-data-grid-addons/dist/react-data-grid-addons.css`\n- **Removed:**\n  - ⚠️ `AutoComplete` editor\n  - ⚠️ `Utils`\n\n## 5.0.5 (Dec 6, 2018)\n\n- **Bugfix:** fix: draggable resizing col jumps to right ([1421](https://github.com/adazzle/react-data-grid/pull/1421))\n- **Bugfix:** Cell Tooltip - Focus Issues ([1422](https://github.com/adazzle/react-data-grid/pull/1422))\n\n## 6.0.1 (Nov 30, 2018)\n\n- **Bugfix:** Fix formatter exports ([1409](https://github.com/adazzle/react-data-grid/pull/1409))\n\n## 6.0.0 (Nov 30, 2018)\n\n- **Bugfix:** Fix outside click logic for committing changes ([1404](https://github.com/adazzle/react-data-grid/pull/1404))\n- **TechDebt** Add ESLint Rules ([1396](https://github.com/adazzle/react-data-grid/pull/1396) [1397](https://github.com/adazzle/react-data-grid/pull/1397) [1396](https://github.com/adazzle/react-data-grid/pull/1398) [1399](https://github.com/adazzle/react-data-grid/pull/1399))\n- **TechDebt:** Upgrade build tools to latest versions ([1350](https://github.com/adazzle/react-data-grid/pull/1350))\n- **Feature:** Cleanup zIndex logic ([1393](https://github.com/adazzle/react-data-grid/pull/1393))\n- **Breaking** Use react portals for cell editors ([1369](https://github.com/adazzle/react-data-grid/pull/1369))\n- **TechDebt:** Upgrade build tools to latest versions ([1350](https://github.com/adazzle/react-data-grid/pull/1350))\n\n## 5.0.4 (Nov 14, 2018)\n\n- **Bugfix:** Custom Formatters Example - Styling Fix ([1364](https://github.com/adazzle/react-data-grid/pull/1364))\n- **Bugfix:** Fix website publishing and remove ImmutableJS dependency ([1366](https://github.com/adazzle/react-data-grid/pull/1366))\n- **Bugfix:** Remove react-data-grid dependency from the addons package ([1354](https://github.com/adazzle/react-data-grid/pull/1354))\n- **Bugfix:** Fix drag fill in IE 11 ([1359](https://github.com/adazzle/react-data-grid/pull/1359))\n- **Bugfix:** Ensure webpack uses correct common js external ref ([1370](https://github.com/adazzle/react-data-grid/pull/1370))\n- **Feature:** Move DropTargetRowContainer static styles to CSS class for user customization ([1308](https://github.com/adazzle/react-data-grid/pull/1308))\n- **Bugfix:** Replace use of i for column index which is no longer passed in ([1344](https://github.com/adazzle/react-data-grid/pull/1344))\n- **Bugfix:** Remove utils from documentation as an exported module ([1374](https://github.com/adazzle/react-data-grid/pull/1374))\n- **TechDebt:** Upgrade eslint packages ([1376](https://github.com/adazzle/react-data-grid/pull/1376))\n- **Bugfix:** Cleanup DraggableContainer and fix styles ([1379](https://github.com/adazzle/react-data-grid/pull/1379))\n\n## 5.0.3 (Nov 1, 2018)\n\n- **Bugfix:** Fix frozen-columns source url ([1355](https://github.com/adazzle/react-data-grid/pull/1355))\n- **TechDebt:** Defining the ref callback as a bound method ([1353](https://github.com/adazzle/react-data-grid/pull/1353))\n- **Bugfix:** Fix cell focusing logic ([1352](https://github.com/adazzle/react-data-grid/pull/1352))\n- **Bugfix:** RDG Tree Cell Expand Styling Issues ([1316](https://github.com/adazzle/react-data-grid/pull/1316))\n\n## 5.0.2 (Oct 30, 2018)\n\n- **Bugfix:** Fix grouping example ([1311](https://github.com/adazzle/react-data-grid/pull/1311))\n- **Bugfix:** Remove contain layout css ([1346](https://github.com/adazzle/react-data-grid/pull/1346))\n- **Bugfix:** Preserve window scroll position on cell selection ([1349](https://github.com/adazzle/react-data-grid/pull/1346))\n\n## 5.0.1 (Oct 22, 2018)\n\n### React-Data-Grid\n\n- **Bugfix:** Fix CopyMask columns ([1289](https://github.com/adazzle/react-data-grid/pull/1272))\n\n## 5.0.0 (Oct 22, 2018)\n\n### React-Data-Grid\n\n- **Feature:** Improve Cell navigation Performance ([1123](https://github.com/adazzle/react-data-grid/pull/1123))\n- **Feature:** Scrolling improvements ([1254](https://github.com/adazzle/react-data-grid/pull/1254))\n- **Feature:** Remove react-data-grid dependency from react-data-grid-addons bundle ([1272](https://github.com/adazzle/react-data-grid/pull/1272))\n\n## 4.0.8 (May 10, 2018)\n\n### React-Data-Grid\n\n- **Bugfix:** Fix editor refs ([#1183](https://github.com/adazzle/react-data-grid/pull/1183))\n\n## 4.0.7 (April 19, 2018)\n\n### React-Data-Grid\n\n- **Feature:** Support `React v16` ([#1116](https://github.com/adazzle/react-data-grid/pull/1116))\n- **Feature:** Set sort column and direction with props ([#649](https://github.com/adazzle/react-data-grid/pull/649))\n- **Bugfix:** Filtering should ignore null values ([#1147](https://github.com/adazzle/react-data-grid/pull/1147))\n- **Bugfix:** Resize column doesnt work on firefox when also draggable ([#1121](https://github.com/adazzle/react-data-grid/pull/1121))\n\n### React-Data-Grid-Addons\n\n- **Breaking:** Migrate to `react-context-menu 2.9.2` ([#1081](https://github.com/adazzle/react-data-grid/pull/1081))\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.890625,
          "content": "### Release process\n\nFor maintainers only.\n\n- `cd` to the root of the repo.\n- Checkout the `main` branch.\n- Make sure your local branch is up to date, no unpushed or missing commits, stash any changes.\n- Update the changelog, if necessary, and commit.\n- Login to the `adazzle` npm account if you haven't already done so:\n  - `npm login`\n  - You can use `npm whoami` to check who you are logged in as.\n- Bump the version and publish on npm:\n  <!-- - To release a new stable version:\n    - `npm version [major | minor | patch] -m \"Publish %s\"`\n    - `npm publish` -->\n  - To release a new `beta` version:\n    - `npm version prerelease --preid=beta -m \"Publish %s\"`\n    - `npm publish --tag beta`\n  - Relevant docs:\n    - https://docs.npmjs.com/cli/commands/npm-version\n    - https://docs.npmjs.com/cli/commands/npm-publish\n    - https://docs.npmjs.com/cli/using-npm/scripts\n    - https://git-scm.com/docs/git-push\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.2060546875,
          "content": "The MIT License (MIT)\n\nOriginal work Copyright (c) 2014 Prometheus Research\nModified work Copyright 2015 Adazzle\n\nFor the original source code please see https://github.com/prometheusresearch-archive/react-grid\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 18.427734375,
          "content": "# react-data-grid\n\n[![npm-badge]][npm-url]\n[![type-badge]][npm-url]\n[![size-badge]][size-url]\n[![codecov-badge]][codecov-url]\n[![ci-badge]][ci-url]\n\n[npm-badge]: https://img.shields.io/npm/v/react-data-grid\n[npm-url]: https://www.npmjs.com/package/react-data-grid\n[size-badge]: https://img.shields.io/bundlephobia/minzip/react-data-grid\n[size-url]: https://bundlephobia.com/package/react-data-grid\n[type-badge]: https://img.shields.io/npm/types/react-data-grid\n[codecov-badge]: https://codecov.io/gh/adazzle/react-data-grid/branch/main/graph/badge.svg?token=cvrRSWiz0Q\n[codecov-url]: https://app.codecov.io/gh/adazzle/react-data-grid/branch/main\n[ci-badge]: https://github.com/adazzle/react-data-grid/workflows/CI/badge.svg\n[ci-url]: https://github.com/adazzle/react-data-grid/actions\n\n## Features\n\n- [React 18.0+](package.json) support\n- [Evergreen browsers and server-side rendering](browserslist) support\n- Tree-shaking support and only [one npm dependency](package.json) to keep your bundles slim\n- Great performance thanks to virtualization: columns and rows outside the viewport are not rendered\n- Strictly typed with TypeScript\n- [Keyboard accessibility](<(https://adazzle.github.io/react-data-grid/#/CommonFeatures)>)\n- Light and dark mode support out of the box. The light or dark themes can be enforced using the `rdg-light` or `rdg-dark` classes.\n- [Frozen columns](https://adazzle.github.io/react-data-grid/#/CommonFeatures)\n- [Column resizing](https://adazzle.github.io/react-data-grid/#/CommonFeatures)\n- [Multi-column sorting](https://adazzle.github.io/react-data-grid/#/CommonFeatures)\n  - Click on a sortable column header to toggle between its ascending/descending sort order\n  - Ctrl+Click / Meta+Click to sort an additional column\n- [Column spanning](https://adazzle.github.io/react-data-grid/#/ColumnSpanning)\n- [Column grouping](https://adazzle.github.io/react-data-grid/#/ColumnGrouping)\n- [Row selection](https://adazzle.github.io/react-data-grid/#/CommonFeatures)\n- [Row grouping](https://adazzle.github.io/react-data-grid/#/RowGrouping)\n- [Summary rows](https://adazzle.github.io/react-data-grid/#/CommonFeatures)\n- [Dynamic row heights](https://adazzle.github.io/react-data-grid/#/VariableRowHeight)\n- [No rows fallback](https://adazzle.github.io/react-data-grid/#/NoRows)\n- [Cell formatting](https://adazzle.github.io/react-data-grid/#/CommonFeatures)\n- [Cell editing](https://adazzle.github.io/react-data-grid/#/CommonFeatures)\n- [Cell copy / pasting](https://adazzle.github.io/react-data-grid/#/AllFeatures)\n- [Cell value dragging / filling](https://adazzle.github.io/react-data-grid/#/AllFeatures)\n- [Customizable Renderers](https://adazzle.github.io/react-data-grid/#/CustomizableRenderers)\n- Right-to-left (RTL) support. We recommend using Firefox as Chrome has a [bug](https://bugs.chromium.org/p/chromium/issues/detail?id=1140374) with frozen columns.\n\n## Links\n\n- [Examples website](https://adazzle.github.io/react-data-grid/)\n  - [Source code](website)\n- [Changelog](CHANGELOG.md)\n- [Contributing](CONTRIBUTING.md)\n\n## Install\n\n```sh\nnpm install react-data-grid\n```\n\n`react-data-grid` is published as ECMAScript modules for evergreen browsers / bundlers, and CommonJS for server-side rendering / Jest.\n\n## Quick start\n\n```jsx\nimport 'react-data-grid/lib/styles.css';\n\nimport DataGrid from 'react-data-grid';\n\nconst columns = [\n  { key: 'id', name: 'ID' },\n  { key: 'title', name: 'Title' }\n];\n\nconst rows = [\n  { id: 0, title: 'Example' },\n  { id: 1, title: 'Demo' }\n];\n\nfunction App() {\n  return <DataGrid columns={columns} rows={rows} />;\n}\n```\n\n## API\n\n### Components\n\n#### `<DataGrid />`\n\n##### DataGridProps\n\n###### `columns: readonly Column<R, SR>[]`\n\nSee [`Column`](#column).\n\nAn array describing the grid's columns.\n\n:warning: Passing a new `columns` array will trigger a re-render for the whole grid, avoid changing it as much as possible for optimal performance.\n\n###### `rows: readonly R[]`\n\nAn array of rows, the rows data can be of any type.\n\n###### `topSummaryRows?: Maybe<readonly SR[]>`\n\nAn optional array of summary rows, usually used to display total values for example. `topSummaryRows` are pinned at the top of the rows view and the vertical scroll bar will not scroll these rows.\n\n###### `bottomSummaryRows?: Maybe<readonly SR[]>`\n\nAn optional array of summary rows, usually used to display total values for example. `bottomSummaryRows` are pinned at the bottom of the rows view and the vertical scroll bar will not scroll these rows.\n\n###### `rowKeyGetter?: Maybe<(row: R) => K>`\n\nA function returning a unique key/identifier per row. `rowKeyGetter` is required for row selection to work.\n\n```tsx\nimport DataGrid from 'react-data-grid';\n\ninterface Row {\n  id: number;\n  name: string;\n}\n\nfunction rowKeyGetter(row: Row) {\n  return row.id;\n}\n\nfunction MyGrid() {\n  return <DataGrid columns={columns} rows={rows} rowKeyGetter={rowKeyGetter} />;\n}\n```\n\n:bulb: While optional, setting this prop is recommended for optimal performance as the returned value is used to set the `key` prop on the row elements.\n\n###### `onRowsChange?: Maybe<(rows: R[], data: RowsChangeData<R, SR>) => void>`\n\nA function receiving row updates.\nThe first parameter is a new rows array with both the updated rows and the other untouched rows.\nThe second parameter is an object with an `indexes` array highlighting which rows have changed by their index, and the `column` where the change happened.\n\n```tsx\nimport { useState } from 'react';\nimport DataGrid from 'react-data-grid';\n\nfunction MyGrid() {\n  const [rows, setRows] = useState(initialRows);\n\n  return <DataGrid columns={columns} rows={rows} onRowsChange={setRows} />;\n}\n```\n\n###### `rowHeight?: Maybe<number | ((row: R) => number)>`\n\n**Default:** `35` pixels\n\nEither a number defining the height of row in pixels, or a function returning dynamic row heights.\n\n###### `headerRowHeight?: Maybe<number>`\n\n**Default:** `35` pixels\n\nA number defining the height of the header row.\n\n###### `summaryRowHeight?: Maybe<number>`\n\n**Default:** `35` pixels\n\nA number defining the height of summary rows.\n\n###### `selectedRows?: Maybe<ReadonlySet<K>>`\n\nA set of selected row keys. `rowKeyGetter` is required for row selection to work.\n\n###### `isRowSelectionDisabled?: Maybe<(row: NoInfer<R>) => boolean>`\n\nA function used to disable row selection on certain rows.\n\n###### `onSelectedRowsChange?: Maybe<(selectedRows: Set<K>) => void>`\n\nA function called when row selection is changed.\n\n```tsx\nimport { useState } from 'react';\nimport DataGrid, { SelectColumn } from 'react-data-grid';\n\nconst rows: readonly Rows[] = [...];\n\nconst columns: readonly Column<Row>[] = [\n  SelectColumn,\n  // other columns\n];\n\nfunction MyGrid() {\n  const [selectedRows, setSelectedRows] = useState((): ReadonlySet<number> => new Set());\n\n  return (\n    <DataGrid\n      rowKeyGetter={rowKeyGetter}\n      columns={columns}\n      rows={rows}\n      selectedRows={selectedRows}\n      isRowSelectionDisabled={isRowSelectionDisabled}\n      onSelectedRowsChange={setSelectedRows}\n    />\n  );\n}\n\nfunction rowKeyGetter(row: Row) {\n  return row.id;\n}\n\nfunction isRowSelectionDisabled(row: Row) {\n  return !row.isActive;\n}\n```\n\n###### `sortColumns?: Maybe<readonly SortColumn[]>`\n\nAn array of sorted columns.\n\n###### `onSortColumnsChange?: Maybe<(sortColumns: SortColumn[]) => void>`\n\nA function called when sorting is changed\n\n```tsx\nimport { useState } from 'react';\nimport DataGrid, { SelectColumn } from 'react-data-grid';\n\nconst rows: readonly Rows[] = [...];\n\nconst columns: readonly Column<Row>[] = [\n  {\n    key: 'name',\n    name: 'Name',\n    sortable: true\n  },\n  // other columns\n];\n\nfunction MyGrid() {\n  const [sortColumns, setSortColumns] = useState<readonly SortColumn[]>([]);\n\n  return (\n    <DataGrid\n      columns={columns}\n      rows={rows}\n      sortColumns={sortColumns}\n      onSortColumnsChange={setSortColumns}\n    />\n  );\n}\n```\n\nGrid can be sorted on multiple columns using `ctrl (command) + click`. To disable multiple column sorting, change the `onSortColumnsChange` function to\n\n```tsx\nonSortColumnsChange(sortColumns: SortColumn[]) {\n  setSortColumns(sortColumns.slice(-1));\n}\n```\n\n###### `defaultColumnOptions?: Maybe<DefaultColumnOptions<R, SR>>`\n\nColumn options that are applied to all the columns\n\n```tsx\nfunction MyGrid() {\n  return (\n    <DataGrid\n      columns={columns}\n      rows={rows}\n      defaultColumnOptions={{\n        minWidth: 100,\n        resizable: true,\n        sortable: true,\n        draggable: true\n      }}\n    />\n  );\n}\n```\n\n###### `onFill?: Maybe<(event: FillEvent<R>) => R>`\n\n###### `onCopy?: Maybe<(event: CopyEvent<R>) => void>`\n\n###### `onPaste?: Maybe<(event: PasteEvent<R>) => R>`\n\n###### `onCellClick?: Maybe<(args: CellClickArgs<R, SR>, event: CellMouseEvent) => void>`\n\nTriggered when a cell is clicked. The default behavior is to select the cell. Call `preventGridDefault` to prevent the default behavior\n\n```tsx\nfunction onCellClick(args: CellClickArgs<R, SR>, event: CellMouseEvent) {\n  if (args.column.key === 'id') {\n    event.preventGridDefault();\n  }\n}\n\n<DataGrid rows={rows} columns={columns} onCellClick={onCellClick} />;\n```\n\nThis event can be used to open cell editor on single click\n\n```tsx\nfunction onCellClick(args: CellClickArgs<R, SR>, event: CellMouseEvent) {\n  if (args.column.key === 'id') {\n    event.preventGridDefault();\n    args.selectCell(true);\n  }\n}\n```\n\nArguments:\n\n`args: CellClickArgs<R, SR>`\n\n- `args.rowIdx`: `number` - row index of the currently selected cell\n- `args.row`: `R` - row object of the currently selected cell\n- `args.column`: `CalculatedColumn<TRow, TSummaryRow>` - column object of the currently selected cell\n- `args.selectCell`: `(enableEditor?: boolean) => void` - function to manually select the cell and optionally pass `true` to start editing\n\n`event` extends `React.MouseEvent<HTMLDivElement>`\n\n- `event.preventGridDefault:`: `() => void`\n- `event.isGridDefaultPrevented`: `boolean`\n\n###### `onCellDoubleClick?: Maybe<(args: CellClickArgs<R, SR>, event: CellMouseEvent) => void>`\n\nTriggered when a cell is double clicked. The default behavior is to open the editor if the cell is editable. Call `preventGridDefault` to prevent the default behavior\n\n```tsx\nfunction onCellDoubleClick(args: CellClickArgs<R, SR>, event: CellMouseEvent) {\n  if (args.column.key === 'id') {\n    event.preventGridDefault();\n  }\n}\n\n<DataGrid rows={rows} columns={columns} onCellDoubleClick={onCellDoubleClick} />;\n```\n\n###### `onCellContextMenu?: Maybe<(args: CellClickArgs<R, SR>, event: CellMouseEvent) => void>`\n\nTriggered when a cell is right clicked. The default behavior is to select the cell. Call `preventGridDefault` to prevent the default behavior\n\n```tsx\nfunction onCellContextMenu(args: CellClickArgs<R, SR>, event: CellMouseEvent) {\n  if (args.column.key === 'id') {\n    event.preventGridDefault();\n  }\n}\n\n<DataGrid rows={rows} columns={columns} onCellContextMenu={onCellContextMenu} />;\n```\n\n###### `onCellKeyDown?: Maybe<(args: CellKeyDownArgs<R, SR>, event: CellKeyboardEvent) => void>`\n\nA function called when keydown event is triggered on a cell. This event can be used to customize cell navigation and editing behavior.\n\n**Examples**\n\n- Prevent editing on `Enter`\n\n```tsx\nfunction onCellKeyDown(args: CellKeyDownArgs<R, SR>, event: CellKeyboardEvent) {\n  if (args.mode === 'SELECT' && event.key === 'Enter') {\n    event.preventGridDefault();\n  }\n}\n```\n\n- Prevent navigation on `Tab`\n\n```tsx\nfunction onCellKeyDown(args: CellKeyDownArgs<R, SR>, event: CellKeyboardEvent) {\n  if (args.mode === 'SELECT' && event.key === 'Tab') {\n    event.preventGridDefault();\n  }\n}\n```\n\nCheck [more examples](website/routes/CellNavigation.lazy.tsx)\n\n###### `onSelectedCellChange?: Maybe<(args: CellSelectArgs<R, SR>) => void>;`\n\nTriggered when the selected cell is changed.\n\nArguments:\n\n- `args.rowIdx`: `number` - row index\n- `args.row`: `R` - row object of the currently selected cell\n- `args.column`: `CalculatedColumn<TRow, TSummaryRow>` - column object of the currently selected cell\n\n###### `onScroll?: Maybe<(event: React.UIEvent<HTMLDivElement>) => void>`\n\nA function called when the grid is scrolled.\n\n###### `onColumnResize?: Maybe<(column: CalculatedColumn<R, SR>, width: number) => void>`\n\nA function called when column is resized.\n\n###### `enableVirtualization?: Maybe<boolean>`\n\n**Default:** `true`\n\nThis prop can be used to disable virtualization.\n\n###### `renderers?: Maybe<Renderers<R, SR>>`\n\nThis prop can be used to override the internal renderers. The prop accepts an object of type\n\n```tsx\ninterface Renderers<TRow, TSummaryRow> {\n  renderCell?: Maybe<(key: Key, props: CellRendererProps<TRow, TSummaryRow>) => ReactNode>;\n  renderCheckbox?: Maybe<(props: RenderCheckboxProps) => ReactNode>;\n  renderRow?: Maybe<(key: Key, props: RenderRowProps<TRow, TSummaryRow>) => ReactNode>;\n  renderSortStatus?: Maybe<(props: RenderSortStatusProps) => ReactNode>;\n  noRowsFallback?: Maybe<ReactNode>;\n}\n```\n\nFor example, the default `<Row />` component can be wrapped via the `renderRow` prop to add context providers or tweak props\n\n```tsx\nimport DataGrid, { RenderRowProps, Row } from 'react-data-grid';\n\nfunction myRowRenderer(key: React.Key, props: RenderRowProps<Row>) {\n  return (\n    <MyContext.Provider key={key} value={123}>\n      <Row {...props} />\n    </MyContext.Provider>\n  );\n}\n\nfunction MyGrid() {\n  return <DataGrid columns={columns} rows={rows} renderers={{ renderRow: myRowRenderer }} />;\n}\n```\n\n:warning: To prevent all rows from being unmounted on re-renders, make sure to pass a static or memoized component to `renderRow`.\n\n###### `rowClass?: Maybe<(row: R, rowIdx: number) => Maybe<string>>`\n\nA function to add a class on the row\n\n```tsx\nimport DataGrid from 'react-data-grid';\n\nfunction MyGrid() {\n  return <DataGrid columns={columns} rows={rows} rowClass={rowClass} />;\n}\n\nfunction rowClass(row: Row, rowIdx: number) {\n  return rowIdx % 2 === 0 ? 'even' : 'odd';\n}\n```\n\n###### `direction?: Maybe<'ltr' | 'rtl'>`\n\nThis property sets the text direction of the grid, it defaults to `'ltr'` (left-to-right). Setting `direction` to `'rtl'` has the following effects:\n\n- Columns flow from right to left\n- Frozen columns are pinned on the right\n- Column resize handle is shown on the left edge of the column\n- Scrollbar is moved to the left\n\n###### `className?: string | undefined`\n\ncustom classname\n\n###### `style?: CSSProperties | undefined`\n\ncustom styles\n\n###### `'aria-label'?: string | undefined`\n\nThe label of the grid. We recommend providing a label using `aria-label` or `aria-labelledby`\n\n###### `'aria-labelledby'?: string | undefined`\n\nThe id of the element containing a label for the grid. We recommend providing a label using `aria-label` or `aria-labelledby`\n\n###### `'aria-description'?: string | undefined`\n\n###### `'aria-describedby'?: string | undefined`\n\nIf the grid has a caption or description, `aria-describedby` can be set on the grid element with a value referring to the element containing the description.\n\n###### `'data-testid'?: Maybe<string>`\n\nThis prop can be used to add a testid for testing. We recommend using `role` and `name` to find the grid element\n\n```tsx\nfunction MyGrid() {\n  return <DataGrid aria-label=\"my-grid\" columns={columns} rows={rows} />;\n}\n\nfunction MyGridTest() {\n  const grid = screen.getByRole('grid', { name: 'my-grid' });\n}\n```\n\n#### `<TreeDataGrid />`\n\n`TreeDataGrid` is component built on top of `DataGrid` to add row grouping. This implements the [Treegrid pattern](https://www.w3.org/WAI/ARIA/apg/patterns/treegrid/). At the moment `TreeDataGrid` does not support `onFill` and `isRowSelectionDisabled` props\n\n##### TreeDataGridProps\n\n###### `groupBy?: Maybe<readonly string[]>`\n\n###### `rowGrouper?: Maybe<(rows: readonly R[], columnKey: string) => Record<string, readonly R[]>>`\n\n###### `expandedGroupIds?: Maybe<ReadonlySet<unknown>>`\n\n###### `onExpandedGroupIdsChange?: Maybe<(expandedGroupIds: Set<unknown>) => void>`\n\n#### `<TextEditor />`\n\n##### Props\n\nSee [`RenderEditCellProps`](#rendereditcellprops)\n\n#### `<Row />`\n\nSee [`renderers`](#renderers-mayberenderersr-sr)\n\n##### Props\n\nSee [`RenderRowProps`](#renderrowprops)\n\nThe `ref` prop is supported.\n\n#### `<SortableHeaderCell />`\n\n##### Props\n\n###### `onSort: (ctrlClick: boolean) => void`\n\n###### `sortDirection: SortDirection | undefined`\n\n###### `priority: number | undefined`\n\n###### `tabIndex: number`\n\n###### `children: React.ReactNode`\n\n#### `<ValueFormatter />`\n\n##### Props\n\nSee [`FormatterProps`](#formatterprops)\n\n#### `<SelectCellFormatter />`\n\n##### Props\n\n###### `value: boolean`\n\n###### `tabIndex: number`\n\n###### `disabled?: boolean | undefined`\n\n###### `onChange: (value: boolean, isShiftClick: boolean) => void`\n\n###### `onClick?: MouseEventHandler<T> | undefined`\n\n###### `'aria-label'?: string | undefined`\n\n###### `'aria-labelledby'?: string | undefined`\n\n#### `<ToggleGroupFormatter />`\n\n##### Props\n\nSee [`RenderGroupCellProps`](#rendergroupcellprops)\n\n### Hooks\n\n#### `useHeaderRowSelection<R>(): { isIndeterminate, isRowSelected, onRowSelectionChange }`\n\n#### `useRowSelection<R>(): { isRowSelectionDisabled, isRowSelected, onRowSelectionChange }`\n\n### Other\n\n#### `SelectColumn: Column<any, any>`\n\n#### `SELECT_COLUMN_KEY = 'rdg-select-column'`\n\n### Types\n\n#### `Column`\n\n##### `name: string | ReactElement`\n\nThe name of the column. By default it will be displayed in the header cell\n\n##### `key: string`\n\nA unique key to distinguish each column\n\n##### `width?: Maybe<number | string>`\n\n**Default** `auto`\n\nWidth can be any valid css grid column value. If not specified, it will be determined automatically based on grid width and specified widths of other columns.\n\n```tsx\nwidth: 80; // pixels\nwidth: '25%';\nwidth: 'max-content';\nwidth: 'minmax(100px, max-content)';\n```\n\n`max-content` can be used to expand the column to show all the content. Note that the grid is only able to calculate column width for visible rows.\n\n##### `minWidth?: Maybe<number>`\n\n**Default**: `50` pixels\n\nSets the maximum width of a column.\n\n##### `maxWidth?: Maybe<number>`\n\nSets the maximum width of a column.\n\n##### `cellClass?: Maybe<string | ((row: TRow) => Maybe<string>)>`\n\nA function to add a class on the row\n\n##### `headerCellClass?: Maybe<string>`\n\n##### `summaryCellClass?: Maybe<string | ((row: TSummaryRow) => Maybe<string>)>`\n\n##### `renderCell?: Maybe<(props: RenderCellProps<TRow, TSummaryRow>) => ReactNode>`\n\nRender function used to render the content of cells\n\n##### `renderHeaderCell`\n\nRender function used to render the content of header cells\n\n##### `renderSummaryCell`\n\nRender function used to render the content of summary cells\n\n#### `DataGridHandle`\n\n#### `RenderEditCellProps`\n\n#### `RenderCellProps`\n\n#### `RenderGroupCellProps`\n\n#### `RenderRowProps`\n\n### Generics\n\n- `R`, `TRow`: Row type\n- `SR`, `TSummaryRow`: Summary row type\n- `K`: Row key type\n"
        },
        {
          "name": "api-extractor.json",
          "type": "blob",
          "size": 0.720703125,
          "content": "{\n  \"$schema\": \"https://developer.microsoft.com/json-schemas/api-extractor/v7/api-extractor.schema.json\",\n  \"mainEntryPointFilePath\": \"<projectFolder>/.cache/lib/index.d.ts\",\n  \"apiReport\": {\n    \"enabled\": false\n  },\n  \"docModel\": {\n    \"enabled\": false\n  },\n  \"dtsRollup\": {\n    \"enabled\": true,\n    \"untrimmedFilePath\": \"<projectFolder>/lib/index.d.ts\"\n  },\n  \"tsdocMetadata\": {\n    \"enabled\": false\n  },\n  \"newlineKind\": \"lf\",\n  \"messages\": {\n    \"compilerMessageReporting\": {\n      \"default\": {\n        \"logLevel\": \"warning\"\n      }\n    },\n    \"extractorMessageReporting\": {\n      \"default\": {\n        \"logLevel\": \"none\"\n      }\n    },\n    \"tsdocMessageReporting\": {\n      \"default\": {\n        \"logLevel\": \"none\"\n      }\n    }\n  }\n}\n"
        },
        {
          "name": "babel.config.json",
          "type": "blob",
          "size": 0.0380859375,
          "content": "{\n  \"presets\": [\"@babel/typescript\"]\n}\n"
        },
        {
          "name": "biome.json",
          "type": "blob",
          "size": 10.544921875,
          "content": "{\n  \"$schema\": \"./node_modules/@biomejs/biome/configuration_schema.json\",\n  \"files\": {\n    \"ignore\": [\n      \"./.cache/**/*\",\n      \"./coverage/**/*\",\n      \"./dist/**/*\",\n      \"./lib/**/*\",\n      \"./node_modules/**/*\",\n      \"./website/routeTree.gen.ts\"\n    ]\n  },\n  \"formatter\": {\n    \"ignore\": [\"*.ts\", \"*.tsx\", \"./package.json\"],\n    \"indentStyle\": \"space\",\n    \"lineWidth\": 100\n  },\n  \"json\": {\n    \"parser\": {\n      \"allowComments\": true,\n      \"allowTrailingCommas\": true\n    }\n  },\n  \"javascript\": {\n    \"formatter\": {\n      \"quoteStyle\": \"single\",\n      \"trailingCommas\": \"none\"\n    }\n  },\n  \"css\": {\n    \"formatter\": {\n      \"quoteStyle\": \"single\"\n    }\n  },\n  \"linter\": {\n    \"rules\": {\n      \"recommended\": false,\n      \"a11y\": {\n        \"noAccessKey\": \"warn\",\n        \"noAriaHiddenOnFocusable\": \"warn\",\n        \"noAriaUnsupportedElements\": \"warn\",\n        \"noAutofocus\": \"off\",\n        \"noBlankTarget\": \"warn\",\n        \"noDistractingElements\": \"warn\",\n        \"noHeaderScope\": \"warn\",\n        \"noInteractiveElementToNoninteractiveRole\": \"warn\",\n        \"noLabelWithoutControl\": \"off\",\n        \"noNoninteractiveElementToInteractiveRole\": \"warn\",\n        \"noNoninteractiveTabindex\": \"warn\",\n        \"noPositiveTabindex\": \"warn\",\n        \"noRedundantAlt\": \"warn\",\n        \"noRedundantRoles\": \"warn\",\n        \"noSvgWithoutTitle\": \"off\",\n        \"useAltText\": \"warn\",\n        \"useAnchorContent\": \"warn\",\n        \"useAriaActivedescendantWithTabindex\": \"warn\",\n        \"useAriaPropsForRole\": \"warn\",\n        \"useButtonType\": \"warn\",\n        \"useFocusableInteractive\": \"off\",\n        \"useGenericFontNames\": \"warn\",\n        \"useHeadingContent\": \"warn\",\n        \"useHtmlLang\": \"warn\",\n        \"useIframeTitle\": \"warn\",\n        \"useKeyWithClickEvents\": \"off\",\n        \"useKeyWithMouseEvents\": \"warn\",\n        \"useMediaCaption\": \"off\",\n        \"useSemanticElements\": \"off\",\n        \"useValidAnchor\": \"warn\",\n        \"useValidAriaProps\": \"warn\",\n        \"useValidAriaRole\": \"warn\",\n        \"useValidAriaValues\": \"warn\",\n        \"useValidLang\": \"warn\"\n      },\n      \"complexity\": {\n        \"noBannedTypes\": \"warn\",\n        \"noEmptyTypeParameters\": \"warn\",\n        \"noExcessiveCognitiveComplexity\": \"off\",\n        \"noExcessiveNestedTestSuites\": \"off\",\n        \"noExtraBooleanCast\": \"warn\",\n        \"noForEach\": \"warn\",\n        \"noMultipleSpacesInRegularExpressionLiterals\": \"warn\",\n        \"noStaticOnlyClass\": \"warn\",\n        \"noThisInStatic\": \"warn\",\n        \"noUselessCatch\": \"warn\",\n        \"noUselessConstructor\": \"warn\",\n        \"noUselessEmptyExport\": \"warn\",\n        \"noUselessFragments\": \"warn\",\n        \"noUselessLabel\": \"warn\",\n        \"noUselessLoneBlockStatements\": \"warn\",\n        \"noUselessRename\": \"warn\",\n        \"noUselessStringConcat\": \"warn\",\n        \"noUselessSwitchCase\": \"warn\",\n        \"noUselessTernary\": \"warn\",\n        \"noUselessThisAlias\": \"warn\",\n        \"noUselessTypeConstraint\": \"warn\",\n        \"noUselessUndefinedInitialization\": \"warn\",\n        \"noVoid\": \"warn\",\n        \"noWith\": \"warn\",\n        \"useArrowFunction\": \"warn\",\n        \"useDateNow\": \"warn\",\n        \"useFlatMap\": \"warn\",\n        \"useLiteralKeys\": \"warn\",\n        \"useOptionalChain\": \"warn\",\n        \"useRegexLiterals\": \"warn\",\n        \"useSimpleNumberKeys\": \"warn\",\n        \"useSimplifiedLogicExpression\": \"off\"\n      },\n      \"correctness\": {\n        \"noChildrenProp\": \"off\",\n        \"noConstAssign\": \"warn\",\n        \"noConstantCondition\": \"warn\",\n        \"noConstantMathMinMaxClamp\": \"warn\",\n        \"noConstructorReturn\": \"warn\",\n        \"noEmptyCharacterClassInRegex\": \"warn\",\n        \"noEmptyPattern\": \"warn\",\n        \"noFlatMapIdentity\": \"warn\",\n        \"noGlobalObjectCalls\": \"warn\",\n        \"noInnerDeclarations\": \"warn\",\n        \"noInvalidBuiltinInstantiation\": \"warn\",\n        \"noInvalidConstructorSuper\": \"warn\",\n        \"noInvalidDirectionInLinearGradient\": \"warn\",\n        \"noInvalidGridAreas\": \"warn\",\n        \"noInvalidNewBuiltin\": \"warn\",\n        \"noInvalidPositionAtImportRule\": \"warn\",\n        \"noInvalidUseBeforeDeclaration\": \"warn\",\n        \"noNewSymbol\": \"warn\",\n        \"noNodejsModules\": \"warn\",\n        \"noNonoctalDecimalEscape\": \"warn\",\n        \"noPrecisionLoss\": \"warn\",\n        \"noRenderReturnValue\": \"warn\",\n        \"noSelfAssign\": \"warn\",\n        \"noSetterReturn\": \"warn\",\n        \"noStringCaseMismatch\": \"warn\",\n        \"noSwitchDeclarations\": \"warn\",\n        \"noUndeclaredDependencies\": \"warn\",\n        \"noUndeclaredVariables\": \"off\",\n        \"noUnknownFunction\": \"warn\",\n        \"noUnknownMediaFeatureName\": \"warn\",\n        \"noUnknownProperty\": \"warn\",\n        \"noUnknownUnit\": \"warn\",\n        \"noUnmatchableAnbSelector\": \"warn\",\n        \"noUnnecessaryContinue\": \"warn\",\n        \"noUnreachable\": \"warn\",\n        \"noUnreachableSuper\": \"warn\",\n        \"noUnsafeFinally\": \"warn\",\n        \"noUnsafeOptionalChaining\": \"warn\",\n        \"noUnusedFunctionParameters\": \"off\",\n        \"noUnusedImports\": \"warn\",\n        \"noUnusedLabels\": \"warn\",\n        \"noUnusedPrivateClassMembers\": \"warn\",\n        \"noUnusedVariables\": \"warn\",\n        \"noVoidElementsWithChildren\": \"warn\",\n        \"noVoidTypeReturn\": \"warn\",\n        \"useArrayLiterals\": \"warn\",\n        \"useExhaustiveDependencies\": \"off\",\n        \"useHookAtTopLevel\": \"warn\",\n        \"useImportExtensions\": \"off\",\n        \"useIsNan\": \"warn\",\n        \"useJsxKeyInIterable\": \"off\",\n        \"useValidForDirection\": \"warn\",\n        \"useYield\": \"warn\"\n      },\n      \"performance\": {\n        \"noAccumulatingSpread\": \"warn\",\n        \"noBarrelFile\": \"off\",\n        \"noDelete\": \"warn\",\n        \"noReExportAll\": \"off\",\n        \"useTopLevelRegex\": \"warn\"\n      },\n      \"security\": {\n        \"noDangerouslySetInnerHtml\": \"warn\",\n        \"noDangerouslySetInnerHtmlWithChildren\": \"warn\",\n        \"noGlobalEval\": \"warn\"\n      },\n      \"style\": {\n        \"noArguments\": \"warn\",\n        \"noCommaOperator\": \"warn\",\n        \"noDefaultExport\": \"off\",\n        \"noDoneCallback\": \"warn\",\n        \"noImplicitBoolean\": \"off\",\n        \"noInferrableTypes\": \"warn\",\n        \"noNamespace\": \"warn\",\n        \"noNamespaceImport\": \"warn\",\n        \"noNegationElse\": \"warn\",\n        \"noNonNullAssertion\": \"off\",\n        \"noParameterAssign\": \"off\",\n        \"noParameterProperties\": \"warn\",\n        \"noRestrictedGlobals\": \"warn\",\n        \"noShoutyConstants\": \"warn\",\n        \"noUnusedTemplateLiteral\": \"warn\",\n        \"noUselessElse\": \"warn\",\n        \"noVar\": \"warn\",\n        \"noYodaExpression\": \"warn\",\n        \"useAsConstAssertion\": \"warn\",\n        \"useBlockStatements\": \"off\",\n        \"useCollapsedElseIf\": \"warn\",\n        \"useConsistentArrayType\": \"warn\",\n        \"useConsistentBuiltinInstantiation\": \"warn\",\n        \"useConst\": \"warn\",\n        \"useDefaultParameterLast\": \"off\",\n        \"useDefaultSwitchClause\": \"warn\",\n        \"useEnumInitializers\": \"warn\",\n        \"useExplicitLengthCheck\": \"off\",\n        \"useExponentiationOperator\": \"warn\",\n        \"useExportType\": \"warn\",\n        \"useFilenamingConvention\": \"off\",\n        \"useForOf\": \"off\",\n        \"useFragmentSyntax\": \"warn\",\n        \"useImportType\": \"warn\",\n        \"useLiteralEnumMembers\": \"warn\",\n        \"useNamingConvention\": \"off\",\n        \"useNodeAssertStrict\": \"warn\",\n        \"useNodejsImportProtocol\": \"warn\",\n        \"useNumberNamespace\": \"warn\",\n        \"useNumericLiterals\": \"warn\",\n        \"useSelfClosingElements\": \"warn\",\n        \"useShorthandArrayType\": \"warn\",\n        \"useShorthandAssign\": \"warn\",\n        \"useShorthandFunctionType\": \"warn\",\n        \"useSingleCaseStatement\": \"off\",\n        \"useSingleVarDeclarator\": \"warn\",\n        \"useTemplate\": \"warn\",\n        \"useThrowNewError\": \"warn\",\n        \"useThrowOnlyError\": \"warn\",\n        \"useWhile\": \"warn\"\n      },\n      \"suspicious\": {\n        \"noApproximativeNumericConstant\": \"warn\",\n        \"noArrayIndexKey\": \"off\",\n        \"noAssignInExpressions\": \"warn\",\n        \"noAsyncPromiseExecutor\": \"warn\",\n        \"noCatchAssign\": \"warn\",\n        \"noClassAssign\": \"warn\",\n        \"noCommentText\": \"warn\",\n        \"noCompareNegZero\": \"warn\",\n        \"noConfusingLabels\": \"warn\",\n        \"noConfusingVoidType\": \"warn\",\n        \"noConsole\": \"warn\",\n        \"noConsoleLog\": \"warn\",\n        \"noConstEnum\": \"warn\",\n        \"noControlCharactersInRegex\": \"warn\",\n        \"noDebugger\": \"warn\",\n        \"noDoubleEquals\": \"warn\",\n        \"noDuplicateAtImportRules\": \"warn\",\n        \"noDuplicateCase\": \"warn\",\n        \"noDuplicateClassMembers\": \"warn\",\n        \"noDuplicateFontNames\": \"warn\",\n        \"noDuplicateJsxProps\": \"warn\",\n        \"noDuplicateObjectKeys\": \"warn\",\n        \"noDuplicateParameters\": \"warn\",\n        \"noDuplicateSelectorsKeyframeBlock\": \"warn\",\n        \"noDuplicateTestHooks\": \"warn\",\n        \"noEmptyBlock\": \"warn\",\n        \"noEmptyBlockStatements\": \"off\",\n        \"noEmptyInterface\": \"warn\",\n        \"noEvolvingTypes\": \"off\",\n        \"noExplicitAny\": \"off\",\n        \"noExportsInTest\": \"warn\",\n        \"noExtraNonNullAssertion\": \"warn\",\n        \"noFallthroughSwitchClause\": \"warn\",\n        \"noFocusedTests\": \"warn\",\n        \"noFunctionAssign\": \"warn\",\n        \"noGlobalAssign\": \"warn\",\n        \"noGlobalIsFinite\": \"warn\",\n        \"noGlobalIsNan\": \"warn\",\n        \"noImplicitAnyLet\": \"off\",\n        \"noImportAssign\": \"warn\",\n        \"noImportantInKeyframe\": \"warn\",\n        \"noLabelVar\": \"warn\",\n        \"noMisleadingCharacterClass\": \"warn\",\n        \"noMisleadingInstantiator\": \"warn\",\n        \"noMisplacedAssertion\": \"off\",\n        \"noMisrefactoredShorthandAssign\": \"warn\",\n        \"noPrototypeBuiltins\": \"warn\",\n        \"noReactSpecificProps\": \"off\",\n        \"noRedeclare\": \"warn\",\n        \"noRedundantUseStrict\": \"warn\",\n        \"noSelfCompare\": \"warn\",\n        \"noShadowRestrictedNames\": \"warn\",\n        \"noShorthandPropertyOverrides\": \"warn\",\n        \"noSkippedTests\": \"warn\",\n        \"noSparseArray\": \"warn\",\n        \"noSuspiciousSemicolonInJsx\": \"warn\",\n        \"noThenProperty\": \"warn\",\n        \"noUnsafeDeclarationMerging\": \"warn\",\n        \"noUnsafeNegation\": \"warn\",\n        \"useAwait\": \"warn\",\n        \"useDefaultSwitchClauseLast\": \"warn\",\n        \"useErrorMessage\": \"warn\",\n        \"useGetterReturn\": \"warn\",\n        \"useIsArray\": \"warn\",\n        \"useNamespaceKeyword\": \"warn\",\n        \"useNumberToFixedDigitsArgument\": \"warn\",\n        \"useValidTypeof\": \"warn\"\n      }\n    }\n  },\n  \"organizeImports\": {\n    \"enabled\": false\n  },\n  \"overrides\": [\n    {\n      \"include\": [\"**/*.test.*\"],\n      \"linter\": {\n        \"rules\": {\n          \"performance\": {\n            \"useTopLevelRegex\": \"off\"\n          }\n        }\n      }\n    },\n    {\n      \"include\": [\"**/*.js\"],\n      \"linter\": {\n        \"rules\": {\n          \"correctness\": {\n            \"noNodejsModules\": \"off\"\n          },\n          \"suspicious\": {\n            \"noConsole\": \"off\",\n            \"noConsoleLog\": \"off\"\n          }\n        }\n      }\n    }\n  ]\n}\n"
        },
        {
          "name": "browserslist",
          "type": "blob",
          "size": 0.11328125,
          "content": "last 2 chrome versions\nlast 2 edge versions\nlast 2 firefox versions\nlast 2 safari versions\nmaintained node versions\n"
        },
        {
          "name": "eslint.config.js",
          "type": "blob",
          "size": 28.439453125,
          "content": "import { fixupPluginRules } from '@eslint/compat';\nimport typescriptEslint from '@typescript-eslint/eslint-plugin';\nimport tsParser from '@typescript-eslint/parser';\nimport vitest from '@vitest/eslint-plugin';\nimport jestDom from 'eslint-plugin-jest-dom';\nimport react from 'eslint-plugin-react';\nimport reactCompiler from 'eslint-plugin-react-compiler';\nimport reactHooks from 'eslint-plugin-react-hooks';\nimport reactHooksExtra from 'eslint-plugin-react-hooks-extra';\nimport sonarjs from 'eslint-plugin-sonarjs';\nimport testingLibrary from 'eslint-plugin-testing-library';\nimport markdown from '@eslint/markdown';\n\nexport default [\n  {\n    ignores: ['.cache', 'coverage', 'dist', 'lib']\n  },\n  {\n    name: 'common',\n    files: ['**/*.{js,ts,tsx}'],\n\n    plugins: {\n      react,\n      'react-compiler': reactCompiler,\n      'react-hooks': fixupPluginRules(reactHooks),\n      'react-hooks-extra': reactHooksExtra,\n      sonarjs,\n      '@typescript-eslint': typescriptEslint\n    },\n\n    languageOptions: {\n      parser: tsParser,\n\n      parserOptions: {\n        ecmaVersion: 'latest',\n        jsxPragma: null,\n        projectService: true,\n        warnOnUnsupportedTypeScriptVersion: false\n      }\n    },\n\n    settings: {\n      react: {\n        version: 'detect'\n      }\n    },\n\n    rules: {\n      // Possible Problems\n      // https://eslint.org/docs/latest/rules/#possible-problems\n      'array-callback-return': [1, { checkForEach: true }],\n      'constructor-super': 0, // covered by TS\n      'for-direction': 1,\n      'getter-return': 1,\n      'no-async-promise-executor': 1,\n      'no-await-in-loop': 0,\n      'no-class-assign': 0,\n      'no-compare-neg-zero': 1,\n      'no-cond-assign': 1,\n      'no-const-assign': 0,\n      'no-constant-binary-expression': 1,\n      'no-constant-condition': 1,\n      'no-constructor-return': 1,\n      'no-control-regex': 1,\n      'no-debugger': 1,\n      'no-dupe-args': 1,\n      'no-dupe-class-members': 0, // replaced by @typescript-eslint/no-dupe-class-members\n      'no-dupe-else-if': 1,\n      'no-dupe-keys': 1,\n      'no-duplicate-case': 1,\n      'no-duplicate-imports': 0,\n      'no-empty-character-class': 1,\n      'no-empty-pattern': 1,\n      'no-ex-assign': 1,\n      'no-fallthrough': [1, { reportUnusedFallthroughComment: true }],\n      'no-func-assign': 1,\n      'no-import-assign': 1,\n      'no-inner-declarations': 0,\n      'no-invalid-regexp': 1,\n      'no-irregular-whitespace': 1,\n      'no-loss-of-precision': 1,\n      'no-misleading-character-class': 1,\n      'no-new-native-nonconstructor': 1,\n      'no-obj-calls': 1,\n      'no-promise-executor-return': 1,\n      'no-prototype-builtins': 1,\n      'no-self-assign': [1, { props: true }],\n      'no-self-compare': 1,\n      'no-setter-return': 1,\n      'no-sparse-arrays': 1,\n      'no-template-curly-in-string': 1,\n      'no-this-before-super': 0,\n      'no-undef': 0,\n      'no-unexpected-multiline': 0,\n      'no-unmodified-loop-condition': 1,\n      'no-unreachable': 1,\n      'no-unreachable-loop': 1,\n      'no-unsafe-finally': 1,\n      'no-unsafe-negation': [1, { enforceForOrderingRelations: true }],\n      'no-unsafe-optional-chaining': [1, { disallowArithmeticOperators: true }],\n      'no-unused-private-class-members': 0,\n      'no-unused-vars': 0, // replaced by @typescript-eslint/no-unused-vars\n      'no-use-before-define': 0, // replaced by @typescript-eslint/no-use-before-define\n      'no-useless-backreference': 1,\n      'require-atomic-updates': 1,\n      'use-isnan': [1, { enforceForIndexOf: true }],\n      'valid-typeof': [1, { requireStringLiterals: true }],\n\n      // Suggestions\n      // https://eslint.org/docs/latest/rules/#suggestions\n      'accessor-pairs': 1,\n      'arrow-body-style': 0,\n      'block-scoped-var': 1,\n      camelcase: 0,\n      'capitalized-comments': 0,\n      'class-methods-use-this': 0, // replace by @typescript-eslint/class-methods-use-this\n      complexity: 0,\n      'consistent-return': 0,\n      'consistent-this': 0,\n      curly: 0,\n      'default-case': 1,\n      'default-case-last': 1,\n      'default-param-last': 0, // replaced by @typescript-eslint/default-param-last\n      'dot-notation': 0, // replaced by @typescript-eslint/dot-notation\n      eqeqeq: [1, 'always', { null: 'ignore' }],\n      'func-name-matching': 0,\n      'func-names': 0,\n      'func-style': 0,\n      'grouped-accessor-pairs': [1, 'getBeforeSet'],\n      'guard-for-in': 0,\n      'id-denylist': 0,\n      'id-length': 0,\n      'id-match': 0,\n      'init-declarations': 0, // replaced by @typescript-eslint/init-declarations\n      'logical-assignment-operators': [1, 'always', { enforceForIfStatements: true }],\n      'max-classes-per-file': 0,\n      'max-depth': 0,\n      'max-lines': 0,\n      'max-lines-per-function': 0,\n      'max-nested-callbacks': 0,\n      'max-params': 0,\n      'max-statements': 0,\n      'multiline-comment-style': 0,\n      'new-cap': 0,\n      'no-alert': 0,\n      'no-array-constructor': 0, // replaced by @typescript-eslint/no-array-constructor\n      'no-bitwise': 0,\n      'no-caller': 1,\n      'no-case-declarations': 1,\n      'no-console': 1,\n      'no-continue': 0,\n      'no-delete-var': 1,\n      'no-div-regex': 0,\n      'no-else-return': [1, { allowElseIf: false }],\n      'no-empty': [1, { allowEmptyCatch: true }],\n      'no-empty-function': 0, // replaced by @typescript-eslint/no-empty-function\n      'no-empty-static-block': 1,\n      'no-eq-null': 0,\n      'no-eval': 1,\n      'no-extend-native': 1,\n      'no-extra-bind': 1,\n      'no-extra-boolean-cast': [1, { enforceForLogicalOperands: true }],\n      'no-extra-label': 1,\n      'no-global-assign': 1,\n      'no-implicit-coercion': 0,\n      'no-implicit-globals': 0,\n      'no-implied-eval': 0, // replaced by @typescript-eslint/no-implied-eval\n      'no-inline-comments': 0,\n      'no-invalid-this': 0, // replaced by @typescript-eslint/no-invalid-this\n      'no-iterator': 1,\n      'no-label-var': 1,\n      'no-labels': 1,\n      'no-lone-blocks': 1,\n      'no-lonely-if': 1,\n      'no-loop-func': 0, // replaced by @typescript-eslint/no-loop-func\n      'no-magic-numbers': 0, // replaced by @typescript-eslint/no-magic-numbers\n      'no-multi-assign': 0,\n      'no-multi-str': 1,\n      'no-negated-condition': 0,\n      'no-nested-ternary': 0,\n      'no-new': 1,\n      'no-new-func': 1,\n      'no-new-wrappers': 1,\n      'no-nonoctal-decimal-escape': 1,\n      'no-object-constructor': 1,\n      'no-octal': 1,\n      'no-octal-escape': 1,\n      'no-param-reassign': 0,\n      'no-plusplus': 0,\n      'no-proto': 1,\n      'no-redeclare': 0, // replaced by @typescript-eslint/no-redeclare\n      'no-regex-spaces': 1,\n      'no-restricted-exports': 0,\n      'no-restricted-globals': [\n        1,\n        {\n          name: 'Omit',\n          message: 'Use Omit from types instead.'\n        }\n      ],\n      'no-restricted-imports': 0, // replaced by @typescript-eslint/no-restricted-imports\n      'no-restricted-properties': 0,\n      'no-restricted-syntax': 0,\n      'no-return-assign': 0,\n      'no-return-await': 0, // replaced by @typescript-eslint/return-await\n      'no-script-url': 1,\n      'no-sequences': [1, { allowInParentheses: false }],\n      'no-shadow': 0, // replaced by @typescript-eslint/no-shadow\n      'no-shadow-restricted-names': 1,\n      'no-ternary': 0,\n      'no-throw-literal': 0, // replaced by @typescript-eslint/only-throw-error\n      'no-undef-init': 1,\n      'no-undefined': 0,\n      'no-underscore-dangle': 0,\n      'no-unneeded-ternary': [1, { defaultAssignment: false }],\n      'no-unused-expressions': 0, // replaced by @typescript-eslint/no-unused-expressions\n      'no-unused-labels': 1,\n      'no-useless-call': 1,\n      'no-useless-catch': 1,\n      'no-useless-computed-key': 1,\n      'no-useless-concat': 1,\n      'no-useless-constructor': 0, // replaced by @typescript-eslint/no-useless-constructor\n      'no-useless-escape': 1,\n      'no-useless-rename': 1,\n      'no-useless-return': 1,\n      'no-var': 1,\n      'no-void': 1,\n      'no-warning-comments': 0,\n      'no-with': 1,\n      'object-shorthand': [1, 'always', { avoidExplicitReturnArrows: true }],\n      'one-var': [1, 'never'],\n      'operator-assignment': 1,\n      'prefer-arrow-callback': [1, { allowNamedFunctions: true }],\n      'prefer-const': [1, { destructuring: 'all' }],\n      'prefer-destructuring': 0, // replaced by @typescript-eslint/prefer-destructuring\n      'prefer-exponentiation-operator': 1,\n      'prefer-named-capture-group': 0,\n      'prefer-numeric-literals': 1,\n      'prefer-object-has-own': 1,\n      'prefer-object-spread': 1,\n      'prefer-promise-reject-errors': 0, // replaced by @typescript-eslint/prefer-promise-reject-errors\n      'prefer-regex-literals': [1, { disallowRedundantWrapping: true }],\n      'prefer-rest-params': 1,\n      'prefer-spread': 1,\n      'prefer-template': 1,\n      radix: 1,\n      'require-await': 0, // replaced by @typescript-eslint/require-await\n      'require-unicode-regexp': 0,\n      'require-yield': 1,\n      'sort-imports': 0,\n      'sort-keys': 0,\n      'sort-vars': 0,\n      strict: 1,\n      'symbol-description': 1,\n      'vars-on-top': 0,\n      yoda: 0,\n\n      // Layout & Formatting\n      // https://eslint.org/docs/latest/rules/#layout--formatting\n      'unicode-bom': 1,\n\n      // React rules\n      // https://github.com/jsx-eslint/eslint-plugin-react#list-of-supported-rules\n      'react/boolean-prop-naming': 0,\n      'react/button-has-type': 0,\n      'react/checked-requires-onchange-or-readonly': 1,\n      'react/default-props-match-prop-types': 0,\n      'react/destructuring-assignment': 0,\n      'react/display-name': 0,\n      'react/forbid-component-props': 0,\n      'react/forbid-dom-props': 0,\n      'react/forbid-elements': 0,\n      'react/forbid-foreign-prop-types': 0,\n      'react/forbid-prop-types': 0,\n      'react/forward-ref-uses-ref': 1,\n      'react/function-component-definition': [\n        1,\n        {\n          namedComponents: 'function-declaration',\n          unnamedComponents: 'function-expression'\n        }\n      ],\n      'react/hook-use-state': 0,\n      'react/iframe-missing-sandbox': 1,\n      'react/jsx-boolean-value': 1,\n      'react/jsx-child-element-spacing': 0,\n      'react/jsx-closing-bracket-location': 0,\n      'react/jsx-closing-tag-location': 0,\n      'react/jsx-curly-brace-presence': 1,\n      'react/jsx-curly-newline': 0,\n      'react/jsx-curly-spacing': 0,\n      'react/jsx-equals-spacing': 0,\n      'react/jsx-filename-extension': [1, { extensions: ['.tsx'] }],\n      'react/jsx-first-prop-new-line': 0,\n      'react/jsx-fragments': 1,\n      'react/jsx-handler-names': 0,\n      'react/jsx-indent': 0,\n      'react/jsx-indent-props': 0,\n      'react/jsx-key': [\n        1,\n        {\n          checkFragmentShorthand: true,\n          checkKeyMustBeforeSpread: true,\n          warnOnDuplicates: true\n        }\n      ],\n      'react/jsx-max-depth': 0,\n      'react/jsx-max-props-per-line': 0,\n      'react/jsx-newline': 0,\n      'react/jsx-no-bind': 0,\n      'react/jsx-no-comment-textnodes': 1,\n      'react/jsx-no-constructed-context-values': 1,\n      'react/jsx-no-duplicate-props': 0,\n      'react/jsx-no-leaked-render': 0,\n      'react/jsx-no-literals': 0,\n      'react/jsx-no-script-url': 1,\n      'react/jsx-no-target-blank': 1,\n      'react/jsx-no-undef': 0,\n      'react/jsx-no-useless-fragment': 1,\n      'react/jsx-one-expression-per-line': 0,\n      'react/jsx-pascal-case': 1,\n      'react/jsx-props-no-multi-spaces': 0,\n      'react/jsx-props-no-spread-multi': 1,\n      'react/jsx-props-no-spreading': 0,\n      'react/jsx-sort-props': 0,\n      'react/jsx-tag-spacing': 0,\n      'react/jsx-uses-react': 0,\n      'react/jsx-uses-vars': 1,\n      'react/jsx-wrap-multilines': 0,\n      'react/no-access-state-in-setstate': 1,\n      'react/no-adjacent-inline-elements': 0,\n      'react/no-array-index-key': 0,\n      'react/no-arrow-function-lifecycle': 0,\n      'react/no-children-prop': 0,\n      'react/no-danger': 1,\n      'react/no-danger-with-children': 1,\n      'react/no-deprecated': 1,\n      'react/no-did-mount-set-state': 1,\n      'react/no-did-update-set-state': 1,\n      'react/no-direct-mutation-state': 1,\n      'react/no-find-dom-node': 0,\n      'react/no-invalid-html-attribute': 1,\n      'react/no-is-mounted': 1,\n      'react/no-multi-comp': 0,\n      'react/no-namespace': 0,\n      'react/no-object-type-as-default-prop': 1,\n      'react/no-redundant-should-component-update': 1,\n      'react/no-render-return-value': 0,\n      'react/no-set-state': 0,\n      'react/no-string-refs': [1, { noTemplateLiterals: true }],\n      'react/no-this-in-sfc': 0,\n      'react/no-typos': 1,\n      'react/no-unescaped-entities': 0,\n      'react/no-unknown-property': 0,\n      'react/no-unsafe': 1,\n      'react/no-unstable-nested-components': [1, { allowAsProps: true }],\n      'react/no-unused-class-component-methods': 0,\n      'react/no-unused-prop-types': 0,\n      'react/no-unused-state': 0,\n      'react/no-will-update-set-state': 1,\n      'react/prefer-es6-class': 1,\n      'react/prefer-exact-props': 0,\n      'react/prefer-read-only-props': 0,\n      'react/prefer-stateless-function': 0,\n      'react/prop-types': 0,\n      'react/react-in-jsx-scope': 0,\n      'react/require-default-props': 0,\n      'react/require-optimization': 0,\n      'react/require-render-return': 1,\n      'react/self-closing-comp': 1,\n      'react/sort-comp': 0,\n      'react/sort-default-props': 0,\n      'react/sort-prop-types': 0,\n      'react/state-in-constructor': 0,\n      'react/static-property-placement': 1,\n      'react/style-prop-object': 0,\n      'react/void-dom-elements-no-children': 1,\n\n      // React Compiler\n      // https://react.dev/learn/react-compiler#installing-eslint-plugin-react-compiler\n      'react-compiler/react-compiler': 1,\n\n      // React Hooks\n      // https://www.npmjs.com/package/eslint-plugin-react-hooks\n      'react-hooks/rules-of-hooks': 1,\n      'react-hooks/exhaustive-deps': 1,\n\n      // React Hooks Extra\n      // https://eslint-react.xyz/\n      'react-hooks-extra/no-unnecessary-use-callback': 1,\n      'react-hooks-extra/no-unnecessary-use-memo': 1,\n      'react-hooks-extra/no-useless-custom-hooks': 1,\n      'react-hooks-extra/prefer-use-state-lazy-initialization': 1,\n\n      // SonarJS rules\n      // https://github.com/SonarSource/eslint-plugin-sonarjs#rules\n      'sonarjs/no-all-duplicated-branches': 1,\n      'sonarjs/no-element-overwrite': 1,\n      'sonarjs/no-empty-collection': 1,\n      'sonarjs/no-extra-arguments': 0,\n      'sonarjs/no-identical-conditions': 1,\n      'sonarjs/no-identical-expressions': 1,\n      'sonarjs/no-ignored-return': 1,\n      'sonarjs/no-one-iteration-loop': 1,\n      'sonarjs/no-use-of-empty-return-value': 1,\n      'sonarjs/non-existent-operator': 1,\n      'sonarjs/cognitive-complexity': 0,\n      'sonarjs/elseif-without-else': 0,\n      'sonarjs/max-switch-cases': 0,\n      'sonarjs/no-collapsible-if': 1,\n      'sonarjs/no-collection-size-mischeck': 1,\n      'sonarjs/no-duplicate-string': 0,\n      'sonarjs/no-duplicated-branches': 1,\n      'sonarjs/no-gratuitous-expressions': 1,\n      'sonarjs/no-identical-functions': 1,\n      'sonarjs/no-inverted-boolean-check': 1,\n      'sonarjs/no-nested-switch': 1,\n      'sonarjs/no-nested-template-literals': 1,\n      'sonarjs/no-redundant-boolean': 1,\n      'sonarjs/no-redundant-jump': 1,\n      'sonarjs/no-same-line-conditional': 1,\n      'sonarjs/no-small-switch': 1,\n      'sonarjs/no-unused-collection': 1,\n      'sonarjs/no-useless-catch': 1,\n      'sonarjs/prefer-immediate-return': 1,\n      'sonarjs/prefer-object-literal': 1,\n      'sonarjs/prefer-single-boolean-return': 1,\n      'sonarjs/prefer-while': 1,\n\n      // @typescript-eslint/eslint-plugin rules\n      // https://typescript-eslint.io/rules/#supported-rules\n      '@typescript-eslint/adjacent-overload-signatures': 1,\n      '@typescript-eslint/array-type': 0,\n      '@typescript-eslint/await-thenable': 1,\n      '@typescript-eslint/ban-ts-comment': [1, { 'ts-expect-error': false }],\n      '@typescript-eslint/ban-tslint-comment': 0,\n      '@typescript-eslint/class-literal-property-style': 0,\n      '@typescript-eslint/class-methods-use-this': 1,\n      '@typescript-eslint/consistent-generic-constructors': 1,\n      '@typescript-eslint/consistent-indexed-object-style': 1,\n      '@typescript-eslint/consistent-return': 0,\n      '@typescript-eslint/consistent-type-assertions': [\n        1,\n        { assertionStyle: 'as', objectLiteralTypeAssertions: 'never' }\n      ],\n      '@typescript-eslint/consistent-type-definitions': 1,\n      '@typescript-eslint/consistent-type-exports': 0,\n      '@typescript-eslint/consistent-type-imports': [1, { fixStyle: 'inline-type-imports' }],\n      '@typescript-eslint/explicit-function-return-type': 0,\n      '@typescript-eslint/explicit-member-accessibility': 0,\n      '@typescript-eslint/explicit-module-boundary-types': 0,\n      '@typescript-eslint/member-ordering': 0,\n      '@typescript-eslint/method-signature-style': 1,\n      '@typescript-eslint/naming-convention': 0,\n      '@typescript-eslint/no-array-delete': 1,\n      '@typescript-eslint/no-base-to-string': 0,\n      '@typescript-eslint/no-confusing-non-null-assertion': 0,\n      '@typescript-eslint/no-confusing-void-expression': [1, { ignoreArrowShorthand: true }],\n      '@typescript-eslint/no-deprecated': 1,\n      '@typescript-eslint/no-duplicate-enum-values': 1,\n      '@typescript-eslint/no-duplicate-type-constituents': 1,\n      '@typescript-eslint/no-dynamic-delete': 0,\n      '@typescript-eslint/no-empty-object-type': 1,\n      '@typescript-eslint/no-explicit-any': [1, { fixToUnknown: true }],\n      '@typescript-eslint/no-extra-non-null-assertion': 1,\n      '@typescript-eslint/no-extraneous-class': 1,\n      '@typescript-eslint/no-floating-promises': 0,\n      '@typescript-eslint/no-for-in-array': 1,\n      '@typescript-eslint/no-import-type-side-effects': 0,\n      '@typescript-eslint/no-inferrable-types': 1,\n      '@typescript-eslint/no-invalid-void-type': 1,\n      '@typescript-eslint/no-meaningless-void-operator': 0,\n      '@typescript-eslint/no-misused-new': 1,\n      '@typescript-eslint/no-misused-promises': 0,\n      '@typescript-eslint/no-mixed-enums': 1,\n      '@typescript-eslint/no-namespace': 1,\n      '@typescript-eslint/no-non-null-asserted-nullish-coalescing': 1,\n      '@typescript-eslint/no-non-null-asserted-optional-chain': 1,\n      '@typescript-eslint/no-non-null-assertion': 0,\n      '@typescript-eslint/no-redundant-type-constituents': 1,\n      '@typescript-eslint/no-require-imports': 1,\n      '@typescript-eslint/no-restricted-types': 0,\n      '@typescript-eslint/no-this-alias': 0,\n      '@typescript-eslint/no-type-alias': 0,\n      '@typescript-eslint/no-unnecessary-boolean-literal-compare': 1,\n      '@typescript-eslint/no-unnecessary-condition': [1, { checkTypePredicates: true }],\n      '@typescript-eslint/no-unnecessary-parameter-property-assignment': 1,\n      '@typescript-eslint/no-unnecessary-qualifier': 0,\n      '@typescript-eslint/no-unnecessary-template-expression': 1,\n      '@typescript-eslint/no-unnecessary-type-arguments': 1,\n      '@typescript-eslint/no-unnecessary-type-assertion': 1,\n      '@typescript-eslint/no-unnecessary-type-constraint': 1,\n      '@typescript-eslint/no-unnecessary-type-parameters': 1,\n      '@typescript-eslint/no-unsafe-argument': 0,\n      '@typescript-eslint/no-unsafe-assignment': 0,\n      '@typescript-eslint/no-unsafe-call': 0,\n      '@typescript-eslint/no-unsafe-declaration-merging': 1,\n      '@typescript-eslint/no-unsafe-enum-comparison': 1,\n      '@typescript-eslint/no-unsafe-function-type': 1,\n      '@typescript-eslint/no-unsafe-member-access': 0,\n      '@typescript-eslint/no-unsafe-return': 1,\n      '@typescript-eslint/no-unsafe-type-assertion': 0,\n      '@typescript-eslint/no-unsafe-unary-minus': 1,\n      '@typescript-eslint/no-useless-empty-export': 1,\n      '@typescript-eslint/no-var-requires': 0,\n      '@typescript-eslint/no-wrapper-object-types': 1,\n      '@typescript-eslint/non-nullable-type-assertion-style': 1,\n      '@typescript-eslint/parameter-properties': 1,\n      '@typescript-eslint/prefer-as-const': 1,\n      '@typescript-eslint/prefer-destructuring': [1, { array: false }],\n      '@typescript-eslint/prefer-enum-initializers': 0,\n      '@typescript-eslint/prefer-find': 1,\n      '@typescript-eslint/prefer-for-of': 1,\n      '@typescript-eslint/prefer-function-type': 1,\n      '@typescript-eslint/prefer-includes': 1,\n      '@typescript-eslint/prefer-literal-enum-member': 1,\n      '@typescript-eslint/prefer-namespace-keyword': 0,\n      '@typescript-eslint/prefer-nullish-coalescing': [\n        1,\n        { ignorePrimitives: { boolean: true, string: true } }\n      ],\n      '@typescript-eslint/prefer-optional-chain': 1,\n      '@typescript-eslint/prefer-promise-reject-errors': [1, { allowEmptyReject: true }],\n      '@typescript-eslint/prefer-readonly': 1,\n      '@typescript-eslint/prefer-readonly-parameter-types': 0,\n      '@typescript-eslint/prefer-reduce-type-parameter': 1,\n      '@typescript-eslint/prefer-regexp-exec': 1,\n      '@typescript-eslint/prefer-return-this-type': 0,\n      '@typescript-eslint/prefer-string-starts-ends-with': 1,\n      '@typescript-eslint/promise-function-async': 0,\n      '@typescript-eslint/require-array-sort-compare': 1,\n      '@typescript-eslint/restrict-plus-operands': 0,\n      '@typescript-eslint/restrict-template-expressions': 0,\n      '@typescript-eslint/sort-type-constituents': 0,\n      '@typescript-eslint/strict-boolean-expressions': 0,\n      '@typescript-eslint/switch-exhaustiveness-check': 1,\n      '@typescript-eslint/triple-slash-reference': [\n        1,\n        { path: 'never', types: 'never', lib: 'never' }\n      ],\n      '@typescript-eslint/typedef': 0,\n      '@typescript-eslint/unbound-method': 0,\n      '@typescript-eslint/unified-signatures': 0,\n\n      // @typescript-eslint/eslint-plugin Extension Rules\n      // https://typescript-eslint.io/rules/#extension-rules\n      '@typescript-eslint/default-param-last': 0,\n      '@typescript-eslint/dot-notation': 1,\n      '@typescript-eslint/init-declarations': 0,\n      '@typescript-eslint/max-params': 0,\n      '@typescript-eslint/no-array-constructor': 1,\n      '@typescript-eslint/no-dupe-class-members': 0,\n      '@typescript-eslint/no-empty-function': 0,\n      '@typescript-eslint/no-implied-eval': 1,\n      '@typescript-eslint/no-invalid-this': 0,\n      '@typescript-eslint/no-loop-func': 0,\n      '@typescript-eslint/no-magic-numbers': 0,\n      '@typescript-eslint/no-redeclare': 1,\n      '@typescript-eslint/no-restricted-imports': [\n        1,\n        {\n          name: 'react',\n          importNames: ['default'],\n          message: 'Use named imports instead.'\n        },\n        {\n          name: 'react',\n          importNames: ['useLayoutEffect'],\n          message: 'Use the override from src/hooks instead.'\n        },\n        {\n          name: 'react-dom',\n          importNames: ['default'],\n          message: 'Use named imports instead.'\n        },\n        {\n          name: '@testing-library/dom',\n          message: 'Import @testing-library/react instead.'\n        }\n      ],\n      '@typescript-eslint/no-shadow': 0,\n      '@typescript-eslint/no-unused-expressions': [\n        1,\n        { allowTaggedTemplates: true, enforceForJSX: true }\n      ],\n      '@typescript-eslint/no-unused-vars': [1, { ignoreRestSiblings: true }],\n      '@typescript-eslint/no-use-before-define': 0,\n      '@typescript-eslint/no-useless-constructor': 1,\n      '@typescript-eslint/only-throw-error': 1,\n      '@typescript-eslint/require-await': 1,\n      '@typescript-eslint/return-await': 1,\n      '@typescript-eslint/use-unknown-in-catch-callback-variable': 1\n    }\n  },\n\n  {\n    name: 'test',\n\n    files: ['test/**/*'],\n\n    plugins: {\n      vitest,\n      'jest-dom': jestDom,\n      'testing-library': testingLibrary\n    },\n\n    rules: {\n      '@typescript-eslint/no-floating-promises': 1,\n\n      // https://github.com/vitest-dev/eslint-plugin-vitest?tab=readme-ov-file#rules\n      'vitest/consistent-test-filename': 0,\n      'vitest/consistent-test-it': 1,\n      'vitest/expect-expect': 0,\n      'vitest/max-expects': 0,\n      'vitest/max-nested-describe': 0,\n      'vitest/no-alias-methods': 1,\n      'vitest/no-commented-out-tests': 1,\n      'vitest/no-conditional-expect': 1,\n      'vitest/no-conditional-in-test': 0,\n      'vitest/no-conditional-tests': 1,\n      'vitest/no-disabled-tests': 0,\n      'vitest/no-done-callback': 0,\n      'vitest/no-duplicate-hooks': 1,\n      'vitest/no-focused-tests': 1,\n      'vitest/no-hooks': 1,\n      'vitest/no-identical-title': 1,\n      'vitest/no-import-node-test': 1,\n      'vitest/no-interpolation-in-snapshots': 0,\n      'vitest/no-large-snapshots': 0,\n      'vitest/no-mocks-import': 1,\n      'vitest/no-restricted-matchers': [\n        1,\n        {\n          toBeTruthy: 'Use toBe(true) instead.',\n          'not.toBeTruthy': null,\n          toBeFalsy: 'Use toBe(false) instead.',\n          'not.toBeFalsy': null\n        }\n      ],\n      'vitest/no-restricted-vi-methods': 0,\n      'vitest/no-standalone-expect': 1,\n      'vitest/no-test-prefixes': 0,\n      'vitest/no-test-return-statement': 0,\n      'vitest/prefer-called-with': 0,\n      'vitest/prefer-comparison-matcher': 1,\n      'vitest/prefer-each': 1,\n      'vitest/prefer-equality-matcher': 1,\n      'vitest/prefer-expect-assertions': 0,\n      'vitest/prefer-expect-resolves': 1,\n      'vitest/prefer-hooks-in-order': 1,\n      'vitest/prefer-hooks-on-top': 1,\n      'vitest/prefer-lowercase-title': 0,\n      'vitest/prefer-mock-promise-shorthand': 1,\n      'vitest/prefer-snapshot-hint': 0,\n      'vitest/prefer-spy-on': 1,\n      'vitest/prefer-strict-equal': 1,\n      'vitest/prefer-to-be': 1,\n      'vitest/prefer-to-be-falsy': 0,\n      'vitest/prefer-to-be-object': 0,\n      'vitest/prefer-to-be-truthy': 0,\n      'vitest/prefer-to-contain': 1,\n      'vitest/prefer-to-have-length': 1,\n      'vitest/prefer-todo': 1,\n      'vitest/prefer-vi-mocked': 1,\n      'vitest/require-hook': 0,\n      'vitest/require-local-test-context-for-concurrent-snapshots': 0,\n      'vitest/require-to-throw-message': 0,\n      'vitest/require-top-level-describe': 0,\n      'vitest/valid-describe-callback': 1,\n      'vitest/valid-expect-in-promise': 1,\n      'vitest/valid-expect': [1, { alwaysAwait: true }],\n      'vitest/valid-title': 1,\n\n      // https://github.com/testing-library/eslint-plugin-jest-dom#supported-rules\n      'jest-dom/prefer-checked': 1,\n      'jest-dom/prefer-empty': 1,\n      'jest-dom/prefer-enabled-disabled': 1,\n      'jest-dom/prefer-focus': 1,\n      'jest-dom/prefer-in-document': 1,\n      'jest-dom/prefer-required': 1,\n      'jest-dom/prefer-to-have-attribute': 1,\n      'jest-dom/prefer-to-have-class': 1,\n      'jest-dom/prefer-to-have-style': 1,\n      'jest-dom/prefer-to-have-text-content': 1,\n      'jest-dom/prefer-to-have-value': 1,\n\n      // eslint-plugin-testing-library Rules\n      // https://github.com/testing-library/eslint-plugin-testing-library#supported-rules\n      'testing-library/await-async-events': 0,\n      'testing-library/await-async-queries': 0,\n      'testing-library/await-async-utils': 0,\n      'testing-library/consistent-data-testid': 0,\n      'testing-library/no-await-sync-events': 0,\n      'testing-library/no-await-sync-queries': 0,\n      'testing-library/no-container': 1,\n      'testing-library/no-debugging-utils': 1,\n      'testing-library/no-dom-import': 1,\n      'testing-library/no-global-regexp-flag-in-query': 1,\n      'testing-library/no-manual-cleanup': 0,\n      'testing-library/no-node-access': 0,\n      'testing-library/no-promise-in-fire-event': 0,\n      'testing-library/no-render-in-lifecycle': 0,\n      'testing-library/no-unnecessary-act': 1,\n      'testing-library/no-wait-for-multiple-assertions': 1,\n      'testing-library/no-wait-for-side-effects': 1,\n      'testing-library/no-wait-for-snapshot': 0,\n      'testing-library/prefer-explicit-assert': 1,\n      'testing-library/prefer-find-by': 1,\n      'testing-library/prefer-implicit-assert': 0,\n      'testing-library/prefer-presence-queries': 1,\n      'testing-library/prefer-query-by-disappearance': 1,\n      'testing-library/prefer-query-matchers': 0,\n      'testing-library/prefer-screen-queries': 0,\n      'testing-library/prefer-user-event': 1,\n      'testing-library/render-result-naming-convention': 0\n    }\n  },\n\n  {\n    name: 'node',\n\n    files: ['**/*.js'],\n\n    rules: {\n      // Best Practices\n      'default-param-last': 1,\n      // Possible Errors\n      'no-console': 0,\n      'no-undef': 1,\n      'no-use-before-define': [1, { functions: false, classes: false, variables: false }]\n    }\n  },\n\n  {\n    name: 'markdown',\n    files: ['**/*.md'],\n    plugins: {\n      markdown\n    },\n    language: 'markdown/commonmark',\n    rules: {\n      'markdown/fenced-code-language': 1,\n      'markdown/heading-increment': 1,\n      'markdown/no-duplicate-headings': 0,\n      'markdown/no-empty-links': 1,\n      'markdown/no-html': 0,\n      'markdown/no-invalid-label-refs': 1,\n      'markdown/no-missing-label-refs': 1\n    }\n  }\n];\n"
        },
        {
          "name": "index.html",
          "type": "blob",
          "size": 0.3203125,
          "content": "<!doctype html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <title>React Data Grid</title>\n    <meta name=\"description\" content=\"Feature-rich and customizable data grid React component.\" />\n  </head>\n  <body>\n    <div id=\"root\"></div>\n    <script type=\"module\" src=\"/website/root.tsx\"></script>\n  </body>\n</html>\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 3.451171875,
          "content": "{\n  \"name\": \"react-data-grid\",\n  \"version\": \"7.0.0-beta.47\",\n  \"license\": \"MIT\",\n  \"description\": \"Feature-rich and customizable data grid React component\",\n  \"keywords\": [\n    \"react\",\n    \"data grid\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/adazzle/react-data-grid.git\"\n  },\n  \"bugs\": \"https://github.com/adazzle/react-data-grid/issues\",\n  \"type\": \"module\",\n  \"exports\": {\n    \"./lib/styles.css\": \"./lib/styles.css\",\n    \".\": {\n      \"types\": \"./lib/index.d.ts\",\n      \"module\": \"./lib/bundle.js\",\n      \"require\": \"./lib/bundle.cjs\",\n      \"default\": \"./lib/bundle.js\"\n    }\n  },\n  \"browser\": \"./lib/bundle.js\",\n  \"main\": \"./lib/bundle.cjs\",\n  \"module\": \"./lib/bundle.js\",\n  \"types\": \"./lib/index.d.ts\",\n  \"files\": [\n    \"lib\"\n  ],\n  \"sideEffects\": [\n    \"**/*.css\"\n  ],\n  \"scripts\": {\n    \"start\": \"vite serve --clearScreen false\",\n    \"preview\": \"vite preview\",\n    \"build:website\": \"vite build\",\n    \"build\": \"rolldown -c\",\n    \"build:types\": \"tsc -p tsconfig.lib.json && api-extractor run --local --verbose\",\n    \"test\": \"vitest run\",\n    \"test:watch\": \"vitest watch\",\n    \"format\": \"biome format --write\",\n    \"check\": \"biome check --error-on-warnings\",\n    \"biome:ci\": \"biome ci --error-on-warnings\",\n    \"eslint\": \"eslint --max-warnings 0 --cache --cache-location .cache/eslint --cache-strategy content\",\n    \"eslint:fix\": \"node --run eslint -- --fix\",\n    \"prettier:check\": \"prettier --check .\",\n    \"prettier:format\": \"prettier --write .\",\n    \"typecheck\": \"tsc --build\",\n    \"prepublishOnly\": \"npm install && node --run build && node --run build:types\",\n    \"postpublish\": \"git push --follow-tags origin HEAD\"\n  },\n  \"dependencies\": {\n    \"clsx\": \"^2.0.0\"\n  },\n  \"devDependencies\": {\n    \"@babel/preset-typescript\": \"^7.26.0\",\n    \"@biomejs/biome\": \"1.9.4\",\n    \"@eslint/compat\": \"^1.2.4\",\n    \"@eslint/markdown\": \"^6.2.1\",\n    \"@faker-js/faker\": \"^9.3.0\",\n    \"@ianvs/prettier-plugin-sort-imports\": \"^4.0.2\",\n    \"@linaria/core\": \"^6.0.0\",\n    \"@microsoft/api-extractor\": \"^7.48.1\",\n    \"@tanstack/react-router\": \"^1.85.5\",\n    \"@tanstack/router-plugin\": \"^1.69.1\",\n    \"@testing-library/dom\": \"^10.1.0\",\n    \"@testing-library/react\": \"^16.1.0\",\n    \"@testing-library/user-event\": \"^14.5.2\",\n    \"@types/node\": \"^22.0.0\",\n    \"@types/react\": \"^18.3.9\",\n    \"@types/react-dom\": \"^18.3.0\",\n    \"@typescript-eslint/eslint-plugin\": \"^8.19.1\",\n    \"@typescript-eslint/parser\": \"^8.19.1\",\n    \"@vitejs/plugin-react\": \"^4.3.4\",\n    \"@vitest/browser\": \"^2.1.8\",\n    \"@vitest/coverage-v8\": \"^2.1.8\",\n    \"@vitest/eslint-plugin\": \"^1.1.24\",\n    \"@wyw-in-js/rollup\": \"^0.5.0\",\n    \"@wyw-in-js/vite\": \"^0.5.0\",\n    \"browserslist\": \"^4.24.3\",\n    \"eslint\": \"^9.17.0\",\n    \"eslint-plugin-jest-dom\": \"^5.5.0\",\n    \"eslint-plugin-react\": \"^7.37.3\",\n    \"eslint-plugin-react-compiler\": \"^19.0.0-beta-63e3235-20250105\",\n    \"eslint-plugin-react-hooks\": \"^5.0.0\",\n    \"eslint-plugin-react-hooks-extra\": \"^1.23.2\",\n    \"eslint-plugin-sonarjs\": \"^3.0.1\",\n    \"eslint-plugin-testing-library\": \"^7.1.1\",\n    \"jspdf\": \"^2.5.1\",\n    \"jspdf-autotable\": \"^3.5.23\",\n    \"playwright\": \"^1.49.1\",\n    \"postcss\": \"^8.4.25\",\n    \"prettier\": \"3.4.2\",\n    \"react\": \"^18.3.1\",\n    \"react-dnd\": \"^16.0.1\",\n    \"react-dnd-html5-backend\": \"^16.0.1\",\n    \"react-dom\": \"^18.3.1\",\n    \"rolldown\": \"^1.0.0-beta.1\",\n    \"typescript\": \"~5.7.2\",\n    \"vite\": \"^6.0.3\",\n    \"vitest\": \"^2.1.8\",\n    \"vitest-browser-react\": \"^0.0.4\"\n  },\n  \"peerDependencies\": {\n    \"react\": \"^18.0 || ^19.0\",\n    \"react-dom\": \"^18.0 || ^19.0\"\n  }\n}\n"
        },
        {
          "name": "rolldown.config.js",
          "type": "blob",
          "size": 0.98828125,
          "content": "// @ts-check\nimport { isAbsolute } from 'node:path';\nimport wyw from '@wyw-in-js/rollup';\nimport pkg from './package.json' with { type: 'json' };\nimport { defineConfig } from 'rolldown';\n\nexport default defineConfig({\n  input: './src/index.ts',\n  output: [\n    {\n      dir: 'lib',\n      entryFileNames: 'bundle.js',\n      cssEntryFileNames: 'styles.css',\n      format: 'es',\n      sourcemap: true\n    },\n    {\n      dir: 'lib',\n      entryFileNames: 'bundle.cjs',\n      cssEntryFileNames: 'styles.css',\n      format: 'cjs',\n      sourcemap: true\n    }\n  ],\n  platform: 'browser',\n  external: (id) => !id.startsWith('.') && !isAbsolute(id),\n  plugins: [\n    // @ts-expect-error\n    wyw({\n      preprocessor: 'none',\n      /**\n       * @param {string} hash\n       */\n      classNameSlug(hash) {\n        // We add the package version as suffix to avoid style conflicts\n        // between multiple versions of RDG on the same page.\n        return `${hash}${pkg.version.replaceAll('.', '-')}`;\n      }\n    })\n  ]\n});\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tsconfig.base.json",
          "type": "blob",
          "size": 0.564453125,
          "content": "{\n  \"compilerOptions\": {\n    \"allowSyntheticDefaultImports\": true,\n    \"composite\": true,\n    \"emitDeclarationOnly\": true,\n    \"exactOptionalPropertyTypes\": true,\n    \"isolatedModules\": true,\n    \"jsx\": \"react-jsx\",\n    \"lib\": [\"ESNext\"],\n    \"module\": \"esnext\",\n    \"moduleDetection\": \"force\",\n    \"moduleResolution\": \"bundler\",\n    \"noImplicitReturns\": true,\n    \"noUnusedLocals\": true,\n    \"outDir\": \"./.cache/ts\",\n    \"pretty\": true,\n    \"strict\": true,\n    \"target\": \"esnext\",\n    \"types\": [],\n    \"useUnknownInCatchVariables\": true,\n    \"verbatimModuleSyntax\": true\n  }\n}\n"
        },
        {
          "name": "tsconfig.js.json",
          "type": "blob",
          "size": 0.3232421875,
          "content": "{\n  \"extends\": \"./tsconfig.base.json\",\n  \"compilerOptions\": {\n    \"allowJs\": true,\n    \"module\": \"NodeNext\",\n    \"moduleResolution\": \"NodeNext\",\n    \"resolveJsonModule\": true,\n    \"skipLibCheck\": true\n  },\n  \"include\": [\"**/*.js\", \".github/**/*.js\", \"package.json\"],\n  \"exclude\": [\"./coverage/**/*\", \"./dist/**/*\", \"./lib/**/*\"]\n}\n"
        },
        {
          "name": "tsconfig.json",
          "type": "blob",
          "size": 0.2265625,
          "content": "{\n  \"include\": [],\n  \"references\": [\n    { \"path\": \"tsconfig.js.json\" },\n    { \"path\": \"tsconfig.src.json\" },\n    { \"path\": \"tsconfig.test.json\" },\n    { \"path\": \"tsconfig.vite.json\" },\n    { \"path\": \"tsconfig.website.json\" }\n  ]\n}\n"
        },
        {
          "name": "tsconfig.lib.json",
          "type": "blob",
          "size": 0.2568359375,
          "content": "{\n  \"extends\": \"./tsconfig.base.json\",\n  \"compilerOptions\": {\n    \"composite\": false,\n    \"declaration\": true,\n    \"lib\": [\"ESNext\", \"DOM\", \"DOM.Iterable\", \"DOM.AsyncIterable\"],\n    \"noCheck\": true,\n    \"outDir\": \"./.cache/lib\"\n  },\n  \"files\": [\"src/index.ts\"]\n}\n"
        },
        {
          "name": "tsconfig.src.json",
          "type": "blob",
          "size": 0.1572265625,
          "content": "{\n  \"extends\": \"./tsconfig.base.json\",\n  \"compilerOptions\": {\n    \"lib\": [\"ESNext\", \"DOM\", \"DOM.Iterable\", \"DOM.AsyncIterable\"]\n  },\n  \"include\": [\"src/**/*\"]\n}\n"
        },
        {
          "name": "tsconfig.test.json",
          "type": "blob",
          "size": 0.3046875,
          "content": "{\n  \"extends\": \"./tsconfig.base.json\",\n  \"compilerOptions\": {\n    \"lib\": [\"ESNext\", \"DOM\", \"DOM.Iterable\", \"DOM.AsyncIterable\"],\n    \"skipLibCheck\": true,\n    \"types\": [\"vitest/globals\", \"@vitest/browser/providers/playwright\"]\n  },\n  \"include\": [\"test/**/*\"],\n  \"references\": [{ \"path\": \"tsconfig.src.json\" }]\n}\n"
        },
        {
          "name": "tsconfig.vite.json",
          "type": "blob",
          "size": 0.19921875,
          "content": "{\n  \"extends\": \"./tsconfig.base.json\",\n  \"compilerOptions\": {\n    \"skipLibCheck\": true,\n    \"types\": [\"@vitest/browser/providers/playwright\"]\n  },\n  \"include\": [\"vite.config.ts\", \"vitest.workspace.ts\"]\n}\n"
        },
        {
          "name": "tsconfig.website.json",
          "type": "blob",
          "size": 0.2109375,
          "content": "{\n  \"extends\": \"./tsconfig.base.json\",\n  \"compilerOptions\": {\n    \"lib\": [\"ESNext\", \"DOM\", \"DOM.Iterable\", \"DOM.AsyncIterable\"]\n  },\n  \"include\": [\"website/**/*\"],\n  \"references\": [{ \"path\": \"tsconfig.src.json\" }]\n}\n"
        },
        {
          "name": "vite.config.ts",
          "type": "blob",
          "size": 1.3564453125,
          "content": "import { TanStackRouterVite } from '@tanstack/router-plugin/vite';\nimport react from '@vitejs/plugin-react';\nimport wyw from '@wyw-in-js/vite';\nimport browserslist from 'browserslist';\nimport { defineConfig } from 'vite';\n\nconst isCI = process.env.CI === 'true';\nconst isTest = process.env.NODE_ENV === 'test';\n\nexport default defineConfig(({ command }) => ({\n  base: '/react-data-grid/',\n  cacheDir: '.cache/vite',\n  clearScreen: false,\n  build: {\n    target: browserslist().map((version) => version.replace(' ', '')),\n    modulePreload: { polyfill: false },\n    sourcemap: true,\n    reportCompressedSize: false\n  },\n  json: {\n    stringify: true\n  },\n  plugins: [\n    !isTest &&\n      TanStackRouterVite({\n        generatedRouteTree: 'website/routeTree.gen.ts',\n        routesDirectory: 'website/routes'\n      }),\n    react({\n      exclude: ['./.cache/**/*']\n    }),\n    wyw({\n      exclude: ['./.cache/**/*'],\n      preprocessor: 'none',\n      displayName: command === 'serve'\n    })\n  ],\n  server: {\n    open: true\n  },\n  optimizeDeps: {\n    include: ['@vitest/coverage-v8/browser']\n  },\n  test: {\n    globals: true,\n    coverage: {\n      provider: 'v8',\n      enabled: isCI,\n      include: ['src/**/*.{ts,tsx}'],\n      reporter: ['json']\n    },\n    testTimeout: isCI ? 10000 : 5000,\n    reporters: ['basic'],\n    restoreMocks: true,\n    sequence: {\n      shuffle: true\n    }\n  }\n}));\n"
        },
        {
          "name": "vitest.workspace.ts",
          "type": "blob",
          "size": 1.7373046875,
          "content": "import { defineWorkspace } from 'vitest/config';\nimport type { BrowserCommand } from 'vitest/node';\n\n// TODO: remove when `userEvent.pointer` is supported\nconst resizeColumn: BrowserCommand<[resizeBy: number]> = async (context, resizeBy) => {\n  const page = context.page;\n  const frame = await context.frame();\n  const resizeHandle = frame.locator('[role=\"columnheader\"][aria-colindex=\"2\"] div');\n  const { x, y } = (await resizeHandle.boundingBox())!;\n  await resizeHandle.hover({\n    position: { x: 5, y: 5 }\n  });\n  await page.mouse.down();\n  await page.mouse.move(x + resizeBy + 5, y);\n  await page.mouse.up();\n};\n\n// TODO: remove when `userEvent.pointer` is supported\nconst dragFill: BrowserCommand<[from: string, to: string]> = async (context, from, to) => {\n  const page = context.page;\n  const frame = await context.frame();\n  await frame.getByRole('gridcell', { name: from }).click();\n  await frame.locator('.rdg-cell-drag-handle').hover();\n  await page.mouse.down();\n  const toCell = frame.getByRole('gridcell', { name: to });\n  await toCell.hover();\n  await page.mouse.up();\n};\n\nexport default defineWorkspace([\n  {\n    extends: './vite.config.ts',\n    test: {\n      name: 'browser',\n      include: ['test/browser/**/*.test.*'],\n      browser: {\n        enabled: true,\n        name: 'chromium',\n        provider: 'playwright',\n        commands: { resizeColumn, dragFill },\n        viewport: { width: 1920, height: 1080 },\n        headless: true,\n        screenshotFailures: process.env.CI !== 'true'\n      },\n      setupFiles: ['test/setup.ts', 'test/setupBrowser.ts']\n    }\n  },\n  {\n    extends: './vite.config.ts',\n    test: {\n      name: 'node',\n      include: ['test/node/**/*.test.*'],\n      environment: 'node',\n      setupFiles: ['test/setup.ts']\n    }\n  }\n]);\n"
        },
        {
          "name": "website",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}