{
  "metadata": {
    "timestamp": 1736564700430,
    "page": 376,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "photoview/photoview",
      "stars": 5608,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.2900390625,
          "content": ".dockerignore\n.git\n.github\n.gitignore\n.husky\n.prettierrc\n.eslintcache\n.vscode\n.env\ndocker-compose example\ndocker-compose.yml\ndocker-compose-dev.yml\nDockerfile\nDockerfile-dev\nexample.env\nMakefile\nphotos_path\nscreenshots\nstorage\nphotoview.db*\n\nui/node_modules/\nui/build/\nui/.cache/\n\napi/photo_cache\n"
        },
        {
          "name": ".dockleignore",
          "type": "blob",
          "size": 0.078125,
          "content": "# Allow the `latest` tag\nDKL-DI-0006\n\n# Don't care about signatures\nCIS-DI-0005\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.552734375,
          "content": "# See https://help.github.com/ignore-files/ for more about ignoring files.\n\ncache/\n/media_cache/\n/api/media_cache/\n/photos_path\nphotoview.db*\n\n.env\ntesting.env\n\n# docker\ndocker-compose.yml\n/Makefile\n/storage\n/database\n/tmp\n\n# dependencies\nnode_modules/\n\n# testing\n/ui/coverage\n/api/coverage.txt\n/api/test-*-report.xml\n\n# building\n.cache/\ndist/\nbuild/\n*.tsbuildinfo\n\n# misc\n.DS_Store\n.env.local\n.env.development.local\n.env.test.local\n.env.production.local\nyarn.lock\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\n.eslintcache\n\n# IDEs\n.vscode\n__debug_bin\n.idea\n.nvmrc\n"
        },
        {
          "name": ".hadolint.yaml",
          "type": "blob",
          "size": 0.2646484375,
          "content": "ignored:\n  - DL3008 # Pin versions in apt get install. Instead of `apt-get install <package>` use `apt-get install <package>=<version>`\n  - DL3015 # Avoid additional packages by specifying `--no-install-recommends`.\n  - SC1091 # Not following: File not included in mock.\n"
        },
        {
          "name": ".husky",
          "type": "tree",
          "content": null
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 8.9326171875,
          "content": "# Contributing to Photoview\n\nðŸ‘‹ Welcome to Photoview! Thank you for considering contributing to our project. Before you start, \nplease take a moment to review this guide, which outlines the process for making contributions.\n\n## Contents\n\n- [Getting Started](#getting-started)\n- [Reporting Issues](#reporting-issues)\n- [Making Contributions](#making-contributions)\n  - [Here's how you can contribute](#heres-how-you-can-contribute)\n  - [Ticket workflows](#ticket-workflows)\n    - [Bug](#-bug-)\n    - [Feature](#-feature-)\n  - [Steps to contribute to the code or documentation](#steps-to-contribute-to-the-code-or-documentation)\n- [Code Standards](#code-standards)\n- [Documentation](#documentation)\n- [Licensing](#licensing)\n- [How to get help](#how-to-get-help)\n\n## Getting Started\n\n1. **Join project's Discord server**: We have the [Discord server](https://discord.gg/jQ392948u9) \nwith several channels, and you're welcome to join it to chat with the community and maintainers \nto ask for help, discuss some project-related topics, or help others.\n\n2. **Browse Issues**: Check the [open issues](https://github.com/photoview/photoview/issues), \n[PRs](https://github.com/photoview/photoview/pulls), and [discussions](https://github.com/photoview/photoview/discussions)  \nto see if your bug or idea has already been reported or discussed. If not, you can open a new issue.\nWhile browsing the issues, if you see an issue with useful from your PoV feature proposal or a bug, \nyou're struggling with, it would be a helpful contribution to like the 1st post of that issue in the \nconversation tab (the issue description) - in this way, maintainers will know which issues should take priority.\nOf course, you can also add a comment with some useful info, which might be missing in the \nissue's thread - that would help as well.\n\n3. **Check Open Source Guide**: Familiarize yourself with the [Open Source Guide](https://opensource.guide/) \nfor general information on contributing to open-source projects.\n\n4. **Review Good First Issues**: We've collected some [good first issues](https://github.com/photoview/photoview/labels/good%20first%20issue) \nthat are suitable for newcomers. These are a great way to start contributing to Photoview.\n\n## Reporting Issues\n\nIf you encounter a bug, have a suggestion, or want to discuss an idea, please open a new issue or start a discussion. \nWhen opening an issue or starting a discussion, provide detailed information, including steps to reproduce the problem \nor a clear description of your idea.\n\n## Making Contributions\n\nWe welcome contributions in various forms, including bug fixes, feature enhancements, \ndocumentation improvements, and more. If you have the skills, it doesn't matter how small the contribution is welcome!\n\n### Here's how you can contribute\n\n- **Code**: If you're looking to help with code, check out the open issues. This \n[filter](https://github.com/photoview/photoview/issues?q=is%3Aopen+is%3Aissue+project%3Aphotoview%2Fphotoview%2F1+-label%3Aduplicate+-label%3Ainvalid+-label%3Awontfix+no%3Aassignee)\ncontains issues, reviewed by maintainers, and waiting for contribution. \nIn particular, they have the Photoview project assigned and don't have any invalid labels.\n- **Code review**: If you're a skilled developer with experience in the project's technology stack,\nwe'd appreciate your help with code reviews of open PRs, providing well-described expert-level feedback \nwith all info, needed for a contributor of any level of seniority to fix or optimize the PR.\n- **Documentation**: Spotted a typo, or think a document needs clarification? \nGo ahead and suggest changes in the [documentation repo](https://github.com/photoview/photoview.github.io).\n- **Ideas**: Have an idea for a new feature? We'd love to hear it!\nSubmit a new feature request issue.\n\n### Ticket workflows\n\n#### < Bug >\n\nThe bug flow is the simplest of the two flows, and will most likely jump straight to development unless \nfurther discussion on architectural changes is required.\n\nDevelopment -> Code review -> Merge\n\n#### < Feature >\n\nNew features are intended to be the longest flow as we want to ensure there is no time wasted \nby contributors. And that anyone can contribute to Photoview.\n\nDiscussion -> Dev Approach -> Development -> Code Review -> Merge\n\n> NOTE: Some features if basic may be able to skip stages.\n\n**Discussion**\n\nA new feature will start its life as an issue tagged as such, the initial author should highlight \nwhat they want from the feature. Then from this, interested community members can spark discussion \nand ideas about how this should work from a user flow perspective, for instance:\n\n- User navigates to settings\n- There is a specific section for `x`\n- There will be an `Add` button next to the title\n\n**Development approach**\n\nWhen sufficient conversation has happened, a label will be added to the ticket indicating it is ready \nto be picked up for a development approach, this gives someone the ability to investigate the existing \narchitecture and design a high-level solution overview, doing so ensures that work is implemented \ninto the system in a maintainable way, and also, hopefully, reduces the amount of rework when a code review \nhappens. The development doesn't have to be done by the same person, and, hopefully, this will give \nless experienced members a chance to contribute to development.\n\n**Development**\n\nWhen the development approach has been written and signed off, it will be the time to develop the work. \nAgain, this doesn't necessarily need to be done by the same person.\n\n**Code review**\n\nAs with all PRs, the code will be reviewed by the community and maintainers before being merged ensuring \nthe change meets the requirements, dev approach, and integrates correctly into the system. \nThis will, hopefully, drive the community spirit and help people get support if they need it rather than giving up.\n\n### Steps to contribute to the code or documentation\n\n1. **Fork the Repository**: Fork the Photoview repository to your GitHub account.\n\n2. **Clone the Repository**: Clone your forked repository to your local machine.\n\n3. **Create a Branch**: Before making any changes, create a new branch to work on your contribution.\n\n4. **Make Changes**: Implement your changes, ensuring they align with the project's standards and guidelines.\n\n5. **Test Your Changes**: Before committing your changes, test them locally to verify their correctness \nand ensure they don't introduce any regressions.\n\n6. **Commit Changes**: Once you're satisfied with your changes, commit them with clear and descriptive commit messages.\n\n7. **Push Changes to Your Fork**: Push your changes to your forked repository on GitHub.\n\n8. **Create a Pull Request**: [Create a pull request](https://github.com/photoview/photoview/compare) \nfrom your branch to the `master` branch of the Photoview repository. Provide a detailed description \nof your changes and reference any related issues.\n\n9. **Review and Collaborate**: Collaborate with project maintainers and address any feedback or review comments on your pull request.\n\n## Code Standards\n\nWhen contributing code, please adhere to the following standards:\n\n- Follow the existing coding style and conventions used throughout the project.\n- Write clean, readable, and well-commented code.\n- Ensure your changes pass all existing tests and write additional tests for new functionality.\n- Ensure that existing Photoview users can migrate to the new version, containing your changes, \nas smoothly as possible: with no (or minimal) manual actions (which are well documented and clearly indicated to the user)\nand no data loss.\n- GitHub Actions, executed for your PR, shouldn't report issues, new to the `master` branch.\n- Ensure your changes are documented in the project documentation, Readme, and other applicable places \nin the case, they change the existing user experience.\n\n## Documentation\n\nImproving documentation is a valuable contribution. If you find areas where documentation can be enhanced \nor if you have insights into better explaining existing features, feel free to update the relevant \ndocumentation files by creating a PR in the [documentation repo](https://github.com/photoview/photoview.github.io).\n\n## Licensing\n\nBy contributing to Photoview, you agree that your contributions will be licensed under the terms of \nthe [GNU Affero General Public License (AGPL) version 3](./LICENSE.txt). Ensure that your contributions comply with this license.\n\n## How to get help\n\nThere are several ways to get help for your contribution to the project:\n\n- Search for the answer in the project's [documentation](https://github.com/photoview/photoview.github.io), \n[issues](https://github.com/photoview/photoview/issues), [PRs](https://github.com/photoview/photoview/pulls), \nand [discussions](https://github.com/photoview/photoview/discussions).\n- We have the [Discord server](https://discord.gg/jQ392948u9) with several channels, \nand you're welcome to join it to chat with the community and maintainers.\n- Start a Discussion in the repo, providing a detailed and complete description of your case, environment, and the problem."
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 4.48046875,
          "content": "### Build UI ###\nFROM --platform=${BUILDPLATFORM:-linux/amd64} node:18 AS ui\n\n# See for details: https://github.com/hadolint/hadolint/wiki/DL4006\nSHELL [\"/bin/bash\", \"-euo\", \"pipefail\", \"-c\"]\n\nARG NODE_ENV\nENV NODE_ENV=${NODE_ENV:-production}\n\nARG REACT_APP_API_ENDPOINT\nENV REACT_APP_API_ENDPOINT=${REACT_APP_API_ENDPOINT}\n\n# Set environment variable UI_PUBLIC_URL from build args, uses \"/\" as default\nARG UI_PUBLIC_URL\nENV UI_PUBLIC_URL=${UI_PUBLIC_URL:-/}\n\nARG VERSION\nENV VERSION=${VERSION:-undefined}\nENV REACT_APP_BUILD_VERSION=${VERSION:-undefined}\n\nARG BUILD_DATE\nENV BUILD_DATE=${BUILD_DATE:-undefined}\nENV REACT_APP_BUILD_DATE=${BUILD_DATE:-undefined}\n\nARG COMMIT_SHA\nENV COMMIT_SHA=${COMMIT_SHA:-}\nENV REACT_APP_BUILD_COMMIT_SHA=${COMMIT_SHA:-}\n\nWORKDIR /app/ui\n\nCOPY ui/package.json ui/package-lock.json /app/ui/\nRUN npm ci\n\nCOPY ui/ /app/ui\nRUN if [ \"${BUILD_DATE}\" = \"undefined\" ]; then \\\n    export BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ'); \\\n    export REACT_APP_BUILD_DATE=${BUILD_DATE}; \\\n  fi; \\\n  npm run build -- --base=\"${UI_PUBLIC_URL}\"\n\n### Build API ###\nFROM --platform=${BUILDPLATFORM:-linux/amd64} golang:1.23-bookworm AS api\nARG TARGETPLATFORM\n\n# See for details: https://github.com/hadolint/hadolint/wiki/DL4006\nSHELL [\"/bin/bash\", \"-euo\", \"pipefail\", \"-c\"]\n\nWORKDIR /app/api\n\nENV GOPATH=\"/go\"\nENV PATH=\"${GOPATH}/bin:${PATH}\"\nENV CGO_ENABLED=1\n\n# Download dependencies\nCOPY scripts/set_compiler_env.sh /app/scripts/\nRUN chmod +x /app/scripts/*.sh \\\n  && source /app/scripts/set_compiler_env.sh\n\nCOPY scripts/install_*.sh /app/scripts/\n# Split values in `/env`\n# hadolint ignore=SC2046\nRUN chmod +x /app/scripts/*.sh \\\n  && export $(cat /env) \\\n  && /app/scripts/install_build_dependencies.sh \\\n  && /app/scripts/install_runtime_dependencies.sh\n\nCOPY --from=photoview/dependencies /artifacts.tar.gz /dependencies/\n# Split values in `/env`\n# hadolint ignore=SC2046\nRUN export $(cat /env) \\\n  && git config --global --add safe.directory /app \\\n  && cd /dependencies/ \\\n  && tar xfv artifacts.tar.gz \\\n  && cp -a include/* /usr/local/include/ \\\n  && cp -a pkgconfig/* ${PKG_CONFIG_PATH} \\\n  && cp -a lib/* /usr/local/lib/ \\\n  && cp -a bin/* /usr/local/bin/ \\\n  && ldconfig \\\n  && apt-get install -y ./deb/jellyfin-ffmpeg.deb\n\nCOPY api/go.mod api/go.sum /app/api/\n# Split values in `/env`\n# hadolint ignore=SC2046\nRUN export $(cat /env) \\\n  && go env \\\n  && go mod download \\\n  # Patch go-face\n  && sed -i 's/-march=native//g' ${GOPATH}/pkg/mod/github.com/!kagami/go-face*/face.go \\\n  # Build dependencies that use CGO\n  && go install \\\n    github.com/mattn/go-sqlite3 \\\n    github.com/Kagami/go-face\n\nCOPY api /app/api\n# Split values in `/env`\n# hadolint ignore=SC2046\nRUN export $(cat /env) \\\n  && go env \\\n  && go build -v -o photoview .\n\n### Build release image ###\nFROM debian:bookworm-slim AS release\nARG TARGETPLATFORM\n\n# See for details: https://github.com/hadolint/hadolint/wiki/DL4006\nSHELL [\"/bin/bash\", \"-euo\", \"pipefail\", \"-c\"]\n\nCOPY scripts/install_runtime_dependencies.sh /app/scripts/\nRUN --mount=type=bind,from=api,source=/dependencies/,target=/dependencies/ \\\n  chmod +x /app/scripts/install_runtime_dependencies.sh \\\n  # Create a user to run Photoview server\n  && groupadd -g 999 photoview \\\n  && useradd -r -u 999 -g photoview -m photoview \\\n  # Install required dependencies\n  && /app/scripts/install_runtime_dependencies.sh \\\n  # Install self-building libs\n  && cd /dependencies \\\n  && cp -a lib/* /usr/local/lib/ \\\n  && cp -a bin/* /usr/local/bin/ \\\n  && cp -a etc/* /usr/local/etc/ \\\n  && ldconfig \\\n  && apt-get install -y ./deb/jellyfin-ffmpeg.deb \\\n  && ln -s /usr/lib/jellyfin-ffmpeg/ffmpeg /usr/local/bin/ \\\n  && ln -s /usr/lib/jellyfin-ffmpeg/ffprobe /usr/local/bin/ \\\n  # Cleanup\n  && apt-get autoremove -y \\\n  && apt-get clean \\\n  && rm -rf /var/lib/apt/lists/*\n\nCOPY api/data /app/data\nCOPY --from=ui /app/ui/dist /app/ui\nCOPY --from=api /app/api/photoview /app/photoview\n\nWORKDIR /home/photoview\n\nENV PHOTOVIEW_LISTEN_IP=127.0.0.1\nENV PHOTOVIEW_LISTEN_PORT=80\n\nENV PHOTOVIEW_SERVE_UI=1\nENV PHOTOVIEW_UI_PATH=/app/ui\nENV PHOTOVIEW_FACE_RECOGNITION_MODELS_PATH=/app/data/models\nENV PHOTOVIEW_MEDIA_CACHE=/home/photoview/media-cache\n\nEXPOSE ${PHOTOVIEW_LISTEN_PORT}\n\nHEALTHCHECK --interval=60s --timeout=10s \\\n  CMD curl --fail http://localhost:${PHOTOVIEW_LISTEN_PORT}/api/graphql \\\n    -X POST -H 'Content-Type: application/json' \\\n    --data-raw '{\"operationName\":\"CheckInitialSetup\",\"variables\":{},\"query\":\"query CheckInitialSetup { siteInfo { initialSetup }}\"}' \\\n    || exit 1\n\nUSER photoview\nENTRYPOINT [\"/app/photoview\"]\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 33.7138671875,
          "content": "                    GNU AFFERO GENERAL PUBLIC LICENSE\n                       Version 3, 19 November 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Remote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as published\n    by the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\n<https://www.gnu.org/licenses/>.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 22.9169921875,
          "content": "<img src=\"./screenshots/photoview-logo.svg\" height=\"92px\" alt=\"photoview logo\" />\n\n[![License](https://img.shields.io/github/license/viktorstrate/photoview)](./LICENSE.txt)\n[![GitHub contributors](https://img.shields.io/github/contributors/viktorstrate/photoview)](https://github.com/viktorstrate/photoview/graphs/contributors)\n[![Docker Pulls](https://img.shields.io/docker/pulls/viktorstrate/photoview)](https://hub.docker.com/r/viktorstrate/photoview)\n[![Docker builds](https://github.com/photoview/photoview/actions/workflows/build.yml/badge.svg?branch=master)](https://github.com/photoview/photoview/actions/workflows/build.yml)\n[![codecov](https://codecov.io/gh/photoview/photoview/branch/master/graph/badge.svg?token=AATZKC93F7)](https://codecov.io/gh/photoview/photoview)\n\n![screenshot](./screenshots/timeline.png)\n\nPhotoview is a simple and user-friendly photo gallery that's made for photographers and aims to provide an easy and fast way to navigate directories, with thousands of high-resolution photos.\n\nYou configure Photoview to look for photos and videos within a directory on your file system. The scanner automatically picks up your media and starts to generate thumbnail images to make browsing super fast.\n\nWhen your media has been scanned, they show up on the website, organised in the same way as on the filesystem.\n\n> If you have questions regarding setup or development,\nfeel free to join the Discord server https://discord.gg/jQ392948u9\n\n# ATTENTION to Docker users !!!\n\nWe migrated to the new Docker registry <https://hub.docker.com/r/photoview/photoview> and all new images for the `master` tag, as well as future releases are going to be published there instead of the previously used registry. Old images will be still accessible in the old registry <https://hub.docker.com/r/viktorstrate/photoview>, so if you want to use 1 of those old images, you need to revert back to the old registry.\n\nPlease update your `docker-compose.yml` file to use the new registry for the `photoview` image, as shown in the corresponding example of the compose file: <https://github.com/photoview/photoview/tree/master/docker-compose%20example>\n\n## Demo site\n\nVisit https://photos.qpqp.dk/\n\nUsername: **demo**\n\nPassword: **demo**\n\n## Contents\n\n- [ATTENTION to Docker users !!!](#attention-to-docker-users-)\n  - [Demo site](#demo-site)\n  - [Contents](#contents)\n  - [Main features](#main-features)\n  - [Supported platforms](#supported-platforms)\n  - [Why yet another self-hosted photo gallery](#why-yet-another-self-hosted-photo-gallery)\n  - [Getting started â€” Setup with Docker](#getting-started--setup-with-docker)\n    - [Initial Setup](#initial-setup)\n  - [Advanced setup](#advanced-setup)\n    - [Hardware Acceleration](#hardware-acceleration)\n  - [Contributing](#contributing)\n  - [Set up Docker development environment](#set-up-docker-development-environment)\n    - [Start API and UI server with Docker Compose](#start-api-and-ui-server-with-docker-compose)\n    - [Start API server with Docker](#start-api-server-with-docker)\n    - [Start UI server with Docker](#start-ui-server-with-docker)\n  - [Set up local development environment](#set-up-local-development-environment)\n    - [Install dependencies](#install-dependencies)\n    - [Local setup](#local-setup)\n    - [Start API server](#start-api-server)\n    - [Start UI server](#start-ui-server)\n  - [Sponsors](#sponsors)\n\n## Main features\n\n- **Closely tied to the file system**. The website presents the images found on the local filesystem of the server; directories are mapped to albums.\n- **User management**. Each user is created along with a path on the local filesystem, photos within that path can be accessed by that user.\n- **Sharing**. Albums, as well as individual media, can easily be shared with a public link, the link can optionally be password protected.\n- **Made for photography**. Photoview is built with photographers in mind, and thus supports **RAW** file formats, and **EXIF** parsing.\n- **Video support**. Many common video formats are supported. Videos will automatically be optimized for web.\n- **Face recognition**. Faces will automatically be detected in photos, and photos of the same person will be grouped together.\n- **Performant**. Thumbnails are automatically generated and photos first load when they are visible on the screen. In full screen, thumbnails are displayed until the high-resolution image has been fully loaded.\n- **Secure**. All media resources are protected with a cookie-token, all passwords are properly hashed, and the API uses a strict [CORS policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS).\n\n## Supported platforms\n\n- [Docker](https://hub.docker.com/r/viktorstrate/photoview/)\n- [Arch Linux Aur](https://aur.archlinux.org/packages/photoview)\n- [Unraid](https://forums.unraid.net/topic/103028-support-photoview-corneliousjd-repo/)\n- EmbassyOS: [announcement](https://start9labs.medium.com/new-service-photoview-72ee681b2ff0), [repo](https://github.com/Start9Labs/embassyos-photoview-wrapper)\n- [YunoHost](https://github.com/YunoHost-Apps/photoview_ynh)\n\n## Why yet another self-hosted photo gallery\n\nThere exists a lot of open-source self-hosted photo galleries already. Here are some, just to mention a few.\n\n- [Piwigo](https://github.com/Piwigo/Piwigo)\n- [LibrePhotos](https://github.com/LibrePhotos/librephotos)\n- [Photoprism](https://github.com/photoprism/photoprism)\n- [Lychee](https://github.com/LycheeOrg/Lychee)\n\nSo why another one?\nI love taking photos, and I store all of them on my local fileserver.\nThis is great because I can organize my photos directly on the filesystem, so it's easy to move them or take backups. I want to be able to control where and how the photos are stored.\n\nThe problem is, however, that RAW images are extremely tedious to navigate from a fileserver, even over the local network.\n\nMy server holds a lot of old family pictures that I would like my family to have access to as well.\nAnd some of the pictures I would like to easily be able to share with other people without the hassle of them having to make an account first.\n\nThus, I need a solution that can do the following:\n\n- A scan-based approach that automatically organises my photos\n- Support RAW and EXIF parsing\n- Have support for multiple users and ways to share albums and photos also publicly\n- Be straightforward and fast to use\n\nAll the photo galleries can do a lot of what I need, but no single one can do it all.\n\n## Getting started â€” Setup with Docker\n\n> This section describes how to get Photoview up and running on your server with Docker.\n> Make sure you have Docker and docker-compose installed and running on your server.\n> `make` should be installed as well if you'd like to use provided `Makefile`, which is optional (see step 4 for more details).\n> `7zz` should be installed in case, you'd like to use it in scope of the backup scenario instead of the default .tar.xz format. Read the comment in the `Makefile`, located on top of the `backup` section for more details.\n\n1. Download the content of the `docker-compose example` folder to the folder on your server, where you expect to host the Photoview internal data (database and cache files).\n\n   Please note that this folder contains 2 versions of the docker-compose file:\n   - `docker-compose.example.yml` - the fully-functional and recommended for the most cases config\n   - `docker-compose.minimal.example.yml` - the minimal and simple config for those, who find the previous one too complex and difficult to understand and manage\n\n   When downloading files, you need to choose only one of them.\n2. Rename downloaded files and remove the `example` from their names (so, you need to have `.env`, `docker-compose.yml`, and `Makefile` files). If you choose the `docker-compose.minimal.example.yml` on previous step, make sure to rename it to the `docker-compose.yml`.\n3. Open these files in a text editor and read them. Modify where needed according to the documentation comments to properly match your setup. There are comments of 2 types: those, starting with `##`, are explanations and examples, which should not be uncommented; those, starting with `#`, are optional or alternative configuration parts, which might be uncommented in certain circumstances, described in corresponding explanations. It is better to go through the files in the next order: `.env`, `docker-compose.yml`, and `Makefile`.\n> If your `PGSQL_PASSWORD` or `MARIADB_PASSWORD` contain special characters (e.g. `@`), make sure to URL-encode them.\n4. Make sure that your media library's root folder and all the files and subfolders are readable and searchable by other users: run the next command (or corresponding sequence of commands from the `Makefile`):\n\n   ```bash\n   make readable\n   ```\n\n   If command(s) return `Permission denied` error, run them under the user, owning corresponding files and folders. Alternatively, run them adding `sudo ` before the command: this will switch the execution context to `root` user and ask for the root password. You have to have permission to run `sudo` in the system.\n\n   If you don't want to give required permissions to `others` group for your files, alternatively, you can:\n\n   - create a group on your host with GID=999 and make all the files and folders inside volumes of the `photoview` service being owned by this group; then set the appropriate permissions to the `group` section.\n   - create on your host a group with GID=999 and a user in this group with UID=999; then change the ownership of all the files and folders inside volumes of the `photoview` service to this user; then set the appropriate permissions to the `user` section.\n\n   If you configured other mounts with media files from other locations on the host (like HOST_PHOTOVIEW_MEDIA_FAMILY or anything else), you need to run the same commands, as in the `Makefile` `readable` target, for each media root folder on your host manually: copy each command to your shell and replace the variable with the absolute path to an additional media root folder without the trailing `/`. Run both commands for each additional root folder.\n5. In case, you don't have `make` installed in your system or don't want to use it for the Photoview management activities, you could use the same commands from the `Makefile` and run them in your shell directly, or create your own scripts. Make sure to apply or replace the variables from your `.env` first in this case. `Makefile` is provided just for your convenience and simplicity, but is optional.\n6. Start the server by running the following command (or corresponding sequence of commands from the `Makefile`):\n\n   ```bash\n   make all\n   ```\n\nIf the endpoint or the port hasn't been changed in the `docker-compose.yml` file, Photoview can now be accessed at http://localhost:8000\n\n### Initial Setup\n\nIf everything is set up correctly, you should be presented with an initial setup wizard when accessing the website the first time.\n\n![Initial setup](./screenshots/initial-setup.png)\n\nEnter a new username and password.\n\nFor the photo path, enter the path inside the docker container where your photos are located.\nThis can be set from the `docker-compose.yml` file under `photoview` -> `volumes`.\nThe default location is `/photos`.\n\nA new admin user will be created, with access to the photos located at the path provided under the initial setup.\n\nThe photos will have to be scanned before they show up, you can start a scan manually, by navigating to `Settings` and clicking on `Scan All`\n\n## Advanced setup\n\nWe suggest securing the Photoview instance before exposing it outside your local network: even while it provides read-only access to your media gallery and has basic user authentication functionality, it is not enough to protect your private media from malicious actors on the Internet.\n\nPossible ways of securing a self-hosted service might be (but not limited to):\n\n1. Configure a **Firewall** on your local network's gateway and allow only the intended type of incoming traffic to pass.\n2. Use **VPN** to provide external access to local services.\n3. Setting up a **Reverse proxy** in front of the service and forwarding all the traffic through it, exposing HTTPS port with strong certificate and cipher suites to the Internet. This could be one of the next products or something else that you prefer:\n   - [Traefic Proxy](https://doc.traefik.io/traefik/)\n   - [NGinx Proxy Manager](https://nginxproxymanager.com/guide/)\n   - [Cloudflare Gateway](https://www.cloudflare.com/zero-trust/products/gateway/)\n4. Configure an external **Multi-Factor Authentication** service to manage authentication for your service (part of Cloudflare services, but you can choose anything else).\n5. Configure **Web Application Firewall** to protect from common web exploits like SQL injection, cross-site scripting, and cross-site forgery requests (part of Cloudflare services, but you can choose anything else).\n6. Use **Content Delivery Network** as an additional level of DDoS prevention: it can securely cache your media and let it be accessible from a wide list of servers on the Internet (part of Cloudflare services, but you can choose anything else).\n7. Configure a **Rate Limit** of allowed number of requests from a user during specified time range to protect against DDoS attacks.\n8. Set up an **Intrusion Detection/Prevention System** to monitor network traffic for suspicious activity and issue alerts when such activity is discovered.\n\nSetting up and configuring of all these protections depends on and requires a lot of info about your local network and self-hosted services. Based on this info, the configuration flow and resulting services architecture might differ a lot between cases. That is why in the scope of this project, we can only provide you with this high-level list of possible ways of webservice protection. You'll need to investigate them, find the best combination and configuration for your case, and take responsibility to configure everything in the correct and consistent way. We cannot provide you support for such highly secured setups, as a lot of things might work differently because of security limitations.\n\n### Hardware Acceleration\n\nIt is possible to run the FFmpeg with a codec supproting the hardware acceleration, by defining `PHOTOVIEW_VIDEO_HARDWARE_ACCELERATION`. The value should be one of `qsv`, `vaapi`, `nvenc`.\n\nWe only verified the hardware acceleration with `qsv` on an Intel chip. To let it work, it must map `/dev/dri` devices and set a ENV `PHOTOVIEW_VIDEO_HARDWARE_ACCELERATION=qsv`. See [docker-compose.example.yml](./docker-compose example/docker-compose.example.yml).\n\nIf you verify other hardware accelerations working well, let us know.\n\n## Contributing\n\nðŸŽ‰ First off, thanks for your interest in contribution! ðŸŽ‰\n\nThis project is a result of hard work, and it's great to see you interested in contributing.\nContributions are not just about code â€” you can help in many ways!\n\nBefore you start, please take a moment to read our [Contributing guide](./CONTRIBUTING.md).\nIt includes information on our code of conduct, the process for submitting pull requests, and more.\n\nRemember, every contribution counts. Let's make this project better together! ðŸ’ª\n\n## Set up Docker development environment\n\nDocker development environment is easy to set up. It only requires [Docker](https://docs.docker.com/engine/install/) and [Docker Compose Plugin](https://docs.docker.com/compose/install/) locally. All dependencies are installed in a container but not in the host.\n\nIt also has some shortcomings. In macOS, Docker is running in a Linux VM. The fs notification doesn't work well in this case. You can't use `reflex` or `nodemon` to relaunch servers when code changes. The compiler runs pretty slow too.\n\nWe recommend to use Docker development environment. If Docker environment doesn't work well, like on macOS, please use [local development environment](#set-up-local-development-environment).\n\n### Start API and UI server with Docker Compose\n\nIt may take a long time to build dependencies when launching servers first time.\n\n```sh\n$ docker compose -f dev-compose.yaml build # Build images for development\n$ docker compose -f dev-compose.yaml up # Launch API and UI servers\n```\n\nThe graphql playground can now be accessed at [localhost:4001](http://localhost:4001). The site can now be accessed at [localhost:1234](http://localhost:1234). Both servers will be relaunched after the code is changed.\n\nBy default, it uses sqlite3 as database. To run servers with other database, please update `PHOTOVIEW_DATABASE_DRIVER` value in `dev-compose.yaml` file and run:\n\n```sh\n$ docker compose -f dev-compose.yaml --profile mysql up # Run with mysql database\nor\n$ docker compose -f dev-compose.yaml --profile postgres up # Run with postgresql database\n```\n\n### Start API server with Docker\n\nIf you don't want to depend on Docker Compose but only Docker, you can launch server as below.\n\nIt may take a long time to build dependencies when launching servers first time.\n\n```sh\n$ docker build --target api -t photoview/api . # Build image for development\n$ docker run --rm -it -v `pwd`:/app --network host --env-file api/example.env photoview/api \\\n    reflex -g '*.go' -s -- go run . # Monitor source code and (re)launch API server\n```\n\nThe graphql playground can now be accessed at [localhost:4001](http://localhost:4001).\n\n> [!NOTE]\n> The server runs on the host network as `--network host` flag. It's easy to communicate between API server and UI server. If you don't want to do that, please check [Docker Network](https://docs.docker.com/network/) to create a new network to run servers.\n\n### Start UI server with Docker\n\nIt may take a long time to build dependencies when launching servers first time.\n\n```sh\n$ docker build --target ui -t photoview/ui . # Build image for development\n$ docker run --rm -it -v `pwd`:/app --network host --env-file ui/example.env photoview/ui \\\n    npm install # Install dependencies\n$ docker run --rm -it -v `pwd`:/app --network host --env-file ui/example.env photoview/ui \\\n    npm run mon # Monitor source code and (re)launch UI server\n```\n\nThe site can now be accessed at [localhost:1234](http://localhost:1234).\n\n> [!NOTE]\n> The server runs on the host network as `--network host` flag. It's easy to communicate between API server and UI server. If you don't want to do that, please check [Docker Network](https://docs.docker.com/network/) to create a new network to run servers.\n\n## Set up local development environment\n\nIn Linux, we recommend to use [Docker Compose or Docker](https://github.com/googollee/photoview?tab=readme-ov-file#set-up-docker-development-environment) as a local development environment.\n\nWe can't keep verifying below commands on each environment. People may need to solve dependencies by their own.\n\n### Install dependencies\n\n- API\n  - Required packages:\n    - `golang` >= 1.22\n    - `g++`\n    - `libc-dev`\n    - `libheif` >= 1.15.1\n    - [go-face Requirements](https://github.com/Kagami/go-face#requirements)\n        - `dlib`\n        - `libjpeg`\n        - `libblas`\n        - `libcblas`, recommended using `libatlas-base` in Debian.\n        - `liblapack`\n  - Optional tools during developing:\n    - [`reflex`](https://github.com/cespare/reflex): a source code monitoring tool, which automatically rebuilds and restarts the server, running from the code in development.\n    - `sqlite`: the SQLite DBMS, useful to interact with Photoview's SQLite DB directly if you use it in your development environment.\n- UI\n  - Required packages:\n    - `node` = 18\n\nIn Debian/Ubuntu, install dependencies:\n\n```sh\n$ sudo apt update # Update the package list\n$ sudo apt install golang g++ libc-dev libheif-dev libdlib-dev libjpeg-dev libblas-dev libatlas-base-dev liblapack-dev # For API requirement\n$ sudo apt install reflex sqlite3 # For API optional tools\n```\n\nIn macOS, install dependencies:\n\n```sh\n$ brew update # Update the package list\n$ brew install golang gcc pkg-config libheif dlib jpeg # For API\n$ brew install reflex sqlite3 # For API optional tools\n```\n\nPlease follow the package manager guidance if you don't use `apt` or `homebrew`.\n\nFor `node`, recommend to use [nvm](https://github.com/nvm-sh/nvm). Follow [Installing and Updating](https://github.com/nvm-sh/nvm?tab=readme-ov-file#installing-and-updating) to install `nvm` locally, then:\n\n```sh\n$ nvm install 18\n$ nvm use 18\n```\n\nYou can install `node` with other package manager if you like.\n\n### Local setup\n\n1. Rename `/api/example.env` to `.env`\n  - Update `PHOTOVIEW_SQLITE_PATH` if you don't want to put sqlite file under `/api`\n  - To set a different DBMS driver\n    - Comment the SQLite path variable\n    - Update `PHOTOVIEW_DATABASE_DRIVER` with your driver\n    - Uncomment the corresponding connection string variable for the new driver\n    > If your `PGSQL_PASSWORD` or `MARIADB_PASSWORD` contain special characters (e.g. `@`), make sure to URL-encode them.\n  - Optional: modify other variables if needed according to the inline comments\n2. Rename `/ui/example.env` to `.env`\n\n### Start API server\n\nThen run the following commands:\n\n```bash\n# Optional: Set the compiler environment in Debian/Ubuntu\n$ source ./scripts/set_compiler_env.sh\n# Set the compiler environment with `homebrew`\n$ export CPLUS_INCLUDE_PATH=\"$(brew --prefix)/opt/jpeg/include:$(brew --prefix)/opt/dlib/include\"\n$ export LD_LIBRARY_PATH=\"$(brew --prefix)/opt/jpeg/lib:$(brew --prefix)/opt/dlib/lib\"\n$ export LIBRARY_PATH=\"$(brew --prefix)/opt/jpeg/lib:$(brew --prefix)/opt/dlib/lib\"\n# Start API server\n$ cd ./api\n$ go run .\n```\n\nIf you want to recompile the server automatically when code changes:\n\n```sh\n# Start API server\n$ cd ./api\n$ reflex -g '*.go' -s -- go run .\n```\n\nThe graphql playground can now be accessed at [localhost:4001](http://localhost:4001).\n\n### Start UI server\n\nIn a new terminal window run the following commands:\n\n```bash\ncd ./ui\nnpm install\nnpm start\n```\n\nIf you want to recompile the server automatically when code changes:\n\n```sh\n$ cd ./ui\n$ npm run mon\n```\n\nThe site can now be accessed at [localhost:1234](http://localhost:1234).\n\n## Sponsors\n\n<table>\n<tr>\n  <td>\n    <a href=\"https://github.com/ericerkz\">\n      <img src=\"https://avatars.githubusercontent.com/u/79728329?v=4\" height=\"auto\" width=\"100\" style=\"border-radius:50%\"><br/>\n      <b>@ericerkz</b>\n    </a>\n  </td>\n  <td>\n    <a href=\"https://github.com/robin-moser\">\n      <img src=\"https://avatars.githubusercontent.com/u/26254821?v=4\" height=\"auto\" width=\"100\" style=\"border-radius:50%\"><br/>\n      <b>@robin-moser</b>\n    </a>\n  </td>\n  <td>\n    <a href=\"https://github.com/Revorge\">\n      <img src=\"https://avatars.githubusercontent.com/u/32901816?v=4\" height=\"auto\" width=\"100\" style=\"border-radius:50%\"><br/>\n      <b>@Revorge</b>\n    </a>\n  </td>\n  <td>\n    <a href=\"https://github.com/deexno\">\n      <img src=\"https://avatars.githubusercontent.com/u/50229919?v=4\" height=\"auto\" width=\"100\" style=\"border-radius:50%\"><br/>\n      <b>@deexno</b>\n    </a>\n  </td>\n  <td>\n    <a href=\"https://github.com/FKrauss\">\n      <img src=\"https://avatars.githubusercontent.com/u/4820683?v=4\" height=\"auto\" width=\"100\" style=\"border-radius:50%\"><br/>\n      <b>@FKrauss</b>\n    </a>\n  </td>\n  <td>\n    <a href=\"https://github.com/jupblb\">\n      <img src=\"https://avatars.githubusercontent.com/u/3370617?v=4\" height=\"auto\" width=\"100\" style=\"border-radius:50%\"><br/>\n      <b>@jupblb</b>\n    </a>\n  </td>\n</table>\n"
        },
        {
          "name": "api",
          "type": "tree",
          "content": null
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.365234375,
          "content": "ignore:\n  - \"api/**/generated.go\"\n  - \"ui/src/**/__generated__\"\ncoverage:\n  status:\n    project:\n      default:\n        target: auto\n        threshold: 5\n      ui:\n        target: auto\n        threshold: 5\n        flags:\n          - ui\n      api:\n        target: auto\n        threshold: 5\n        flags:\n          - api-sqlite\n          - api-postgres\n          - api-mysql\n"
        },
        {
          "name": "dependencies",
          "type": "tree",
          "content": null
        },
        {
          "name": "dev-compose.yaml",
          "type": "blob",
          "size": 1.7119140625,
          "content": "name: photoview\n\nservices:\n  ui:\n    image: photoview/ui\n    build:\n      context: .\n      dockerfile: Dockerfile\n      target: ui\n      args:\n        - NODE_ENV=development\n    env_file: ui/example.env\n    volumes:\n      - .:/app:rw\n    ports:\n      - 1234:1234\n    command:\n      - /bin/bash\n      - -c\n      - |\n        npm ci\n        npm run mon\n\n  api:\n    image: photoview/api\n    build:\n      context: .\n      dockerfile: Dockerfile\n      target: api\n    env_file: api/example.env\n    environment:\n      PHOTOVIEW_DATABASE_DRIVER: sqlite # Change to the right database driver\n      PHOTOVIEW_SQLITE_PATH: photoview.db\n      PHOTOVIEW_MYSQL_URL: photoview:photosecret@tcp(mysql)/photoview_test\n      PHOTOVIEW_POSTGRES_URL: postgres://photoview:photosecret@postgres:5432/photoview_test\n    volumes:\n      - .:/app:rw\n    ports:\n      - 4001:4001\n    command:\n      - /bin/bash\n      - -c\n      - |\n        export $(cat /env)\n        reflex -g '*.go' -s -- go run .\n\n  mariadb:\n    image: mariadb:lts\n    profiles:\n      - mysql\n    environment:\n      MYSQL_DATABASE: photoview_test\n      MYSQL_USER: photoview\n      MYSQL_PASSWORD: photosecret\n      MYSQL_RANDOM_ROOT_PASSWORD: yes\n    healthcheck:\n      test:\n        - CMD\n        - mariadb-admin\n        - --user=photoview\n        - --password=photosecret\n        - ping\n      interval: 20s\n      timeout: 5s\n      retries: 10\n    expose:\n      - \"3306\"\n\n  postgres:\n    image: postgres:16-alpine\n    profiles:\n      - postgres\n    environment:\n      POSTGRES_DB: photoview_test\n      POSTGRES_USER: photoview\n      POSTGRES_PASSWORD: photosecret\n    healthcheck:\n      test:\n        - CMD\n        - pg_isready\n      interval: 20s\n      timeout: 5s\n      retries: 10\n    expose:\n      - \"5432\"\n"
        },
        {
          "name": "docker-compose example",
          "type": "tree",
          "content": null
        },
        {
          "name": "screenshots",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "systemd",
          "type": "tree",
          "content": null
        },
        {
          "name": "ui",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}