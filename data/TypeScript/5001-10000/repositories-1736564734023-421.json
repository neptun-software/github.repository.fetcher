{
  "metadata": {
    "timestamp": 1736564734023,
    "page": 421,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "hustcc/timeago.js",
      "stars": 5345,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".commitlintrc.js",
          "type": "blob",
          "size": 0.193359375,
          "content": "module.exports = {\n  rules: {\n    'type-enum': [\n      2,\n      'always',\n      ['build', 'chore', 'ci', 'docs', 'feat', 'fix', 'perf', 'refactor', 'revert', 'style', 'test', 'wip'],\n    ],\n  },\n};\n"
        },
        {
          "name": ".eslintrc",
          "type": "blob",
          "size": 0.4248046875,
          "content": "{\n  \"parser\": \"@typescript-eslint/parser\",\n  \"parserOptions\": {\n    \"project\": \"./tsconfig.ci.json\"\n  },\n  \"plugins\": [\"@typescript-eslint\"],\n  \"extends\": [\n    \"eslint:recommended\",\n    \"plugin:@typescript-eslint/eslint-recommended\",\n    \"plugin:@typescript-eslint/recommended\",\n    \"prettier\",\n    \"prettier/@typescript-eslint\"\n  ],\n  \"rules\": {\n    \"@typescript-eslint/ban-ts-ignore\": 1,\n    \"@typescript-eslint/camelcase\": 0\n  }\n}\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.10546875,
          "content": "node_modules/\nnpm-debug.*\n.idea\ncoverage\npackage-lock.json\nlib\nesm\ndist\n\ntimeago.full.min.js\ntimeago.min.js\n"
        },
        {
          "name": ".prettierrc",
          "type": "blob",
          "size": 0.138671875,
          "content": "{\n  \"semi\": true,\n  \"singleQuote\": true,\n  \"trailingComma\": \"all\",\n  \"bracketSpacing\": true,\n  \"printWidth\": 120,\n  \"arrowParens\": \"always\"\n}\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0478515625,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2016 Hust.cc\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE."
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.1455078125,
          "content": "# timeago.js\n\n> **timeago.js** is a nano library(less than `2 kb`)  used to format datetime with `*** time ago` statement. eg: '3 hours ago'.\n\n - i18n supported.\n - Time `ago` and time `in` supported.\n - Real-time render supported.\n - Node and browser supported.\n - Well tested.\n\n[Official website](https://timeago.org/). React version here: [timeago-react](https://github.com/hustcc/timeago-react). Python version here: [timeago](https://github.com/hustcc/timeago).\n\n[![npm Version](https://img.shields.io/npm/v/timeago.js.svg)](https://www.npmjs.com/package/timeago.js)\n[![unpkg](https://img.shields.io/npm/v/timeago.js?label=cdn)](https://unpkg.com/browse/timeago.js/)\n[![Build Status](https://github.com/hustcc/timeago.js/workflows/build/badge.svg)](https://github.com/hustcc/timeago.js/actions)\n[![Coverage Status](https://coveralls.io/repos/github/hustcc/timeago.js/badge.svg?branch=master)](https://coveralls.io/github/hustcc/timeago.js?branch=master)\n[![Dist gzip](https://img.badgesize.io/https://unpkg.com/timeago.js/dist/timeago.min.js?compression=gzip)](https://unpkg.com/timeago.js/dist/timeago.min.js)\n[![npm Download](https://img.shields.io/npm/dm/timeago.js.svg)](https://www.npmjs.com/package/timeago.js)\n[![npm License](https://img.shields.io/npm/l/timeago.js.svg)](https://www.npmjs.com/package/timeago.js)\n\n\nSuch as\n\n```plain\njust now\n12 seconds ago\n2 hours ago\n3 days ago\n3 weeks ago\n2 years ago\n\nin 12 seconds\nin 3 minutes\nin 24 days\nin 6 months\n```\n\n\n## Usage\n\n - install\n\n```bash\nnpm install timeago.js\n```\n\n - import\n\n```ts\nimport { format, render, cancel, register } from 'timeago.js';\n```\n\nor import with `script` tag in html file and access global variable `timeago`.\n\n```html\n<script src=\"dist/timeago.min.js\"></script>\n```\n\n - example\n\n```ts\n// format the time with locale\nformat('2016-06-12', 'en_US');\n```\n\n## CDN \n\nAlternatively to NPM, you can also use a CDN which will reflect the latest version as soon as it is published to npm.\n\n```html\n<script src=\"//unpkg.com/timeago.js\"></script>\n```\n\n## API\n\nThere only 4 API below.\n\n - **format**\n\n> `format(date[, locale = 'en_US', opts])`, format a Date instance / timestamp / date string to string.\n\n```ts\nimport { format } from 'timeago.js';\n\n// format timestamp\nformat(1544666010224);\n\n// format date instance\nformat(new Date(1544666010224));\n\n// format date string\nformat('2018-12-12');\n\n// format with locale\nformat(1544666010224, 'zh_CN');\n\n// format with locale and relative date\nformat(1544666010224, 'zh_CN', { relativeDate: '2018-11-11' });\n\n// e.g.\nformat(Date.now() - 11 * 1000 * 60 * 60); // returns '11 hours ago'\n``` \n\nThe default locale is `en_US`, and the library contains `en_US` and `zh_CN` build-in.\n\n - **render** & **cancel**\n   \n> `render(dom[, locale = 'en_US', opts])`  \n> `cancel([dom])`\n\n> Make a dom with `datetime` attribute automatic rendering and cancel.\n\nHTML code:\n\n```html\n<div class=\"timeago\" datetime=\"2016-06-30 09:20:00\"></div>\n```\n\nJavascript code:\n\n```ts\nimport { render, cancel } from 'timeago.js';\n\nconst nodes = document.querySelectorAll('.timeago');\n\n// use render method to render nodes in real time\nrender(nodes, 'zh_CN');\n\n// render with opts\n// render(nodes, 'en_US', { minInterval: 3 });\n\n// cancel all real-time render task\ncancel();\n\n// or cancel for the specific one\ncancel(nodes[0])\n```\n\nThe 3rd parameter `opts` contains:\n\n```ts\nexport type Opts = {\n  /** the relative date */\n  readonly relativeDate?: TDate;\n  /** the realtime min update interval */\n  readonly minInterval?: number;\n};\n``` \n\n> The DOM object should have the attribute `datetime` with date formatted string.\n\n - **register**\n\n> `register(locale, localeFunc)`, register a new locale, build-in locale contains: `en_US`, `zh_CN`, [all locales here](src/lang).\n\nYou can register your own language with `register` API.\n\n```ts\nconst localeFunc = (number: number, index: number, totalSec: number): [string, string] => {\n  // number: the timeago / timein number;\n  // index: the index of array below;\n  // totalSec: total seconds between date to be formatted and today's date;\n  return [\n    ['just now', 'right now'],\n    ['%s seconds ago', 'in %s seconds'],\n    ['1 minute ago', 'in 1 minute'],\n    ['%s minutes ago', 'in %s minutes'],\n    ['1 hour ago', 'in 1 hour'],\n    ['%s hours ago', 'in %s hours'],\n    ['1 day ago', 'in 1 day'],\n    ['%s days ago', 'in %s days'],\n    ['1 week ago', 'in 1 week'],\n    ['%s weeks ago', 'in %s weeks'],\n    ['1 month ago', 'in 1 month'],\n    ['%s months ago', 'in %s months'],\n    ['1 year ago', 'in 1 year'],\n    ['%s years ago', 'in %s years']\n  ][index];\n};\n// register your locale with timeago\nregister('my-locale', localeFunc);\n\n// use it\nformat('2016-06-12', 'my-locale');\n```\n\n\n## Contributions\n\n1. The website is based on [rmm5t/jquery-timeago](https://github.com/rmm5t/jquery-timeago) which is a nice and featured project but it depends on jQuery.\n2. **locale translations**: The library needs more locale translations. You can:\n\n - Open an issue to write the locale translations, or submit a pull request. How to ? see [locales translation](src/lang/).\n - Please **test** the locale by exec `npm test`. How to write test cases, see [locales test cases](__tests__/lang/).\n\n\n## LICENSE\n\nMIT@[hustcc](https://github.com/hustcc)\n"
        },
        {
          "name": "__tests__",
          "type": "tree",
          "content": null
        },
        {
          "name": "bower.json",
          "type": "blob",
          "size": 0.513671875,
          "content": "{\n  \"name\": \"timeago.js\",\n  \"description\": \"timeago.js is a simple library (only 1kb) to used to format datetime with `*** time ago` statement. eg: '3 hours ago'. localization supported.\",\n  \"main\": \"dist/timeago.min.js\",\n  \"authors\": [\n    \"Hustcc <i@hust.cc>\"\n  ],\n  \"license\": \"MIT\",\n  \"keywords\": [\n    \"timeago\",\n    \"datetime\",\n    \"*** time ago\",\n    \"date\",\n    \"javascript timeago\"\n  ],\n  \"homepage\": \"https://github.com/hustcc/timeago.js\",\n  \"ignore\": [\n    \"**/.*\",\n    \"node_modules\",\n    \"bower_components\"\n  ]\n}\n"
        },
        {
          "name": "gh-pages",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 3.04296875,
          "content": "{\n  \"name\": \"timeago.js\",\n  \"officialName\": \"timeago.js\",\n  \"version\": \"4.0.2\",\n  \"summary\": \"timeago.js is a simple library (less than 1kb) to used to format datetime with `*** time ago` statement. eg: '3 hours ago'.\",\n  \"description\": \"timeago.js is a simple library (only 1kb) to used to format datetime with `*** time ago` statement. eg: '3 hours ago'. localization supported.\",\n  \"main\": \"lib/index.js\",\n  \"module\": \"esm/index.js\",\n  \"unpkg\": \"dist/timeago.min.js\",\n  \"browser\": \"dist/timeago.min.js\",\n  \"files\": [\n    \"lib\",\n    \"esm\",\n    \"dist\"\n  ],\n  \"scripts\": {\n    \"lint\": \"eslint src/**/* __tests__/**/*\",\n    \"lint-staged\": \"lint-staged\",\n    \"size\": \"limit-size\",\n    \"test\": \"jest\",\n    \"ci\": \"npm run lint && npm run test && npm run size && lint-md .\",\n    \"build:umd\": \"rimraf ./dist && rollup -c && cp -rf dist/ gh-pages && npm run size\",\n    \"build:cjs\": \"rimraf ./lib && tsc --module commonjs --outDir lib\",\n    \"build:esm\": \"rimraf ./esm && tsc --module ESNext --outDir esm\",\n    \"build\": \"npm run build:cjs && npm run build:esm && npm run build:umd\",\n    \"prepublishOnly\": \"npm run build\"\n  },\n  \"dependencies\": {},\n  \"devDependencies\": {\n    \"@commitlint/cli\": \"^8.2.0\",\n    \"@types/jest\": \"^24.0.18\",\n    \"@typescript-eslint/eslint-plugin\": \"^2.3.1\",\n    \"@typescript-eslint/parser\": \"^2.3.1\",\n    \"cross-env\": \"^5.1.3\",\n    \"eslint\": \"^6.4.0\",\n    \"eslint-config-prettier\": \"^6.3.0\",\n    \"husky\": \"^3.0.5\",\n    \"jest\": \"^24.9.0\",\n    \"jest-date-mock\": \"^1.0.5\",\n    \"jest-electron\": \"^0.1.7\",\n    \"jest-expect\": \"^0.0.1\",\n    \"limit-size\": \"^0.1.2\",\n    \"lint-md-cli\": \"^0.1.0\",\n    \"lint-staged\": \"^9.3.0\",\n    \"prettier\": \"^1.18.2\",\n    \"rimraf\": \"^3.0.0\",\n    \"rollup\": \"^1.23.1\",\n    \"rollup-plugin-node-resolve\": \"^5.2.0\",\n    \"rollup-plugin-typescript\": \"^1.0.1\",\n    \"rollup-plugin-uglify\": \"^6.0.3\",\n    \"ts-jest\": \"^24.1.0\",\n    \"typescript\": \"^3.6.3\"\n  },\n  \"limit-size\": [\n    {\n      \"limit\": \"1.1 Kb\",\n      \"path\": \"dist/timeago.min.js\",\n      \"gzip\": true\n    },\n    {\n      \"limit\": \"10 Kb\",\n      \"path\": \"dist/timeago.full.min.js\",\n      \"gzip\": true\n    }\n  ],\n  \"jest\": {\n    \"preset\": \"ts-jest\",\n    \"runner\": \"jest-electron/runner\",\n    \"testEnvironment\": \"jest-electron/environment\",\n    \"setupFilesAfterEnv\": [\n      \"jest-expect\"\n    ],\n    \"testRegex\": \"(/__tests__/.*(test|spec))\\\\.ts$\",\n    \"testURL\": \"https://timeago.org\",\n    \"collectCoverage\": true,\n    \"collectCoverageFrom\": [\n      \"src/**/*.ts\",\n      \"!**/node_modules/**\"\n    ]\n  },\n  \"lint-staged\": {\n    \"*.{ts,tsx}\": [\n      \"eslint --fix\",\n      \"prettier --write\",\n      \"git add\"\n    ]\n  },\n  \"husky\": {\n    \"hooks\": {\n      \"pre-commit\": \"npm run lint-staged\",\n      \"commit-msg\": \"commitlint -E HUSKY_GIT_PARAMS\"\n    }\n  },\n  \"author\": {\n    \"name\": \"hustcc\",\n    \"url\": \"https://timeago.org\"\n  },\n  \"license\": \"MIT\",\n  \"keywords\": [\n    \"timeago\",\n    \"datetime\",\n    \"*** time ago\",\n    \"date\",\n    \"javascript timeago\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/hustcc/timeago.js\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/hustcc/timeago.js/issues\"\n  }\n}\n"
        },
        {
          "name": "rollup.config.js",
          "type": "blob",
          "size": 0.646484375,
          "content": "/**\n * Created by hustcc on 18/5/20.\n * Contract: i@hust.cc\n */\n\nimport { uglify } from 'rollup-plugin-uglify';\nimport resolve from 'rollup-plugin-node-resolve';\nimport typescript from 'rollup-plugin-typescript';\n\nmodule.exports = [\n  {\n    input: 'src/index.ts',\n    output: {\n      file: 'dist/timeago.min.js',\n      name: 'timeago',\n      format: 'umd',\n    },\n    plugins: [\n      resolve(),\n      typescript(),\n      uglify(),\n    ],\n  },\n  {\n    input: 'src/full.ts',\n    output: {\n      file: 'dist/timeago.full.min.js',\n      name: 'timeago',\n      format: 'umd',\n    },\n    plugins: [\n      resolve(),\n      typescript(),\n      uglify(),\n    ],\n  },\n];\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tsconfig.ci.json",
          "type": "blob",
          "size": 0.078125,
          "content": "{\n  \"extends\": \"./tsconfig.json\",\n  \"include\": [\"src/**/*\", \"__tests__/**/*\"]\n}\n"
        },
        {
          "name": "tsconfig.json",
          "type": "blob",
          "size": 0.3857421875,
          "content": "{\n  \"compilerOptions\": {\n    \"target\": \"es5\",\n    \"jsx\": \"preserve\",\n    \"moduleResolution\": \"node\",\n    \"experimentalDecorators\": true,\n    \"declaration\": true,\n    \"sourceMap\": true,\n    \"allowSyntheticDefaultImports\": true,\n    \"esModuleInterop\": true,\n    \"pretty\": true,\n    \"lib\": [\"dom\", \"esnext\"],\n    \"skipLibCheck\": true\n  },\n  \"include\": [\"src/**/*\"],\n  \"exclude\": [\"node_modules\"]\n}\n"
        }
      ]
    }
  ]
}