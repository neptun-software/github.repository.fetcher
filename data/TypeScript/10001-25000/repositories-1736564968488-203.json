{
  "metadata": {
    "timestamp": 1736564968488,
    "page": 203,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "facebook/flipper",
      "stars": 13377,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".eslintignore",
          "type": "blob",
          "size": 0.1533203125,
          "content": "*.d.ts\nnode_modules\nlib\n!.eslintrc.js\ndist\nwebsite/build\nreact-native/ReactNativeFlipperExample\nscripts/generate-changelog.js\nscripts/facebook/templates/tsx\n"
        },
        {
          "name": ".flowconfig",
          "type": "blob",
          "size": 0.01171875,
          "content": "[ignore]\n.*\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0888671875,
          "content": "# This file is renamed from _gitattributes to .gitattributes in ShipIt.\n* text=auto eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.0126953125,
          "content": "node_modules\ndist\nwebsite/build\nyarn-error.log\nbundle.js\nbundle.map\n*.bundle.js\n*.bundle.map\n.env\ndesktop-branch-*/\nauth.token\nmanifest.json\n\n# conflicts with FB internal infra\n.watchmanconfig\n\n# Don't checkout the yarn/npm lock files that we don't need\n./yarn.lock\n./package-lock.json\njs/yarn.lock\njs/package-lock.json\nreact-native/yarn.lock\nreact-native/package-lock.json\n\n# iOS / Xcode\n*.xcworkspace\n**/Pods/\n**/xcuserdata/\n**/idb-applications/\n**/idb-dsyms/\n**/idb-dylibs/\n**/idb-frameworks/\n**/idb-test-bundles/\n\nandroid/third-party/external/\n\n# Android / Intellij\nlocal.properties\n*.iml\n.gradle/\n.idea\n.externalNativeBuild\n.project\n.settings\n**/.classpath\nandroid/*/bin/**/*.class\nlibs/*/bin/**/*.class\n.cxx\n*.hprof\n\nandroid/build\nandroid/*/build\nandroid/plugins/*/build\nxplat/build\n\n# Mac OS X\n*.DS_Store\nfacebook/flipper-server/Resources/\n\n# Automatically generated\ndocs/extending/ui-components.mdx\ndocs/setup/plugins/\ndocs/features/plugins/\nwebsite/src/embedded-pages/docs/plugins/\n\n# Logs\n**/*/flipper-server-log.out\n\n*.salive\n"
        },
        {
          "name": ".ignore",
          "type": "blob",
          "size": 0.009765625,
          "content": ".gitignore"
        },
        {
          "name": ".sonarhandles",
          "type": "blob",
          "size": 0.14453125,
          "content": "{\"osx\": \"GICWmAAS05ZnyDsCAAAAAABHIak5bnw7AAAg\", \"linux\": \"GICWmACHSiVuyDsCAAAAAABVAX1Bbnw7AAAg\", \"windows\": \"GICWmAAn5YB0yDsCAAAAAAAMdghhbnw7AAAg\"}\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0.07421875,
          "content": "# Changelog\n\nSee [desktop/static/CHANGELOG.md](desktop/static/CHANGELOG.md)\n"
        },
        {
          "name": "CNAME",
          "type": "blob",
          "size": 0.013671875,
          "content": "fbflipper.com\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 3.27734375,
          "content": "# Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to make participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies within all project spaces, and it also applies when\nan individual is representing the project or its community in public spaces.\nExamples of representing a project or community include using an official\nproject e-mail address, posting via an official social media account, or acting\nas an appointed representative at an online or offline event. Representation of\na project may be further defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at <opensource-conduct@fb.com>. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see\nhttps://www.contributor-covenant.org/faq\n\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.25390625,
          "content": "# Contributing to Flipper\n\nWe want to make contributing to this project as easy and transparent as\npossible.\n\n## Our Development Process\n\nChanges from Facebook employees are synced to the GitHub repo automatically.\nPRs from the community are imported into our internal source control and then\npushed to GitHub.\n\nFor changes affecting both, native code and JavaScript, make sure to only create\na single PR containing both parts of the code.\n\nAlthough the Flipper desktop app is only released for macOS right now, it is\npossible to create Windows and Linux builds of the app. Please keep this in mind\nwhen dealing with platform-specific code.\n\n## Pull Requests\n\nWe actively welcome your pull requests.\n\n1. Fork the repo and create your branch from `main`.\n2. If you've added code that should be tested, add tests.\n3. If you've changed APIs, update the documentation.\n4. Ensure the test suite passes.\n5. Make sure your code lints.\n6. If you haven't already, complete the Contributor License Agreement (\"CLA\").\n\n### Verifying changes to Flipper\n\n![GitHub Actions artifact downloads](website/static/img/actions-artifacts.png)\n\nAfter opening a pull request or pushing to a branch, the CI will generate\nbuild artifacts for you for Linux, MacOS and Windows. You can download them\nfrom the GitHub Actions checks on your Pull Request.\n\n## Contributor License Agreement (\"CLA\")\n\nIn order to accept your pull request, we need you to submit a CLA. You only need\nto do this once to work on any of Facebook's open source projects.\n\nComplete your CLA here: <https://code.facebook.com/cla>\n\n## Issues\n\nWe use GitHub issues to track public bugs. Please ensure your description is\nclear and has sufficient instructions to be able to reproduce the issue.\n\nFacebook has a [bounty program](https://www.facebook.com/whitehat/) for the safe\ndisclosure of security bugs. In those cases, please go through the process\noutlined on that page and do not file a public issue.\n\n## Coding Style\n\nWe are using Prettier to format our source code. The styles are enforced via\neslint. Make sure everything is well formatted before creating a PR. Therefore,\nrun `yarn lint` and `yarn fix` to apply formatting fixes.\n\n## License\n\nBy contributing to Flipper, you agree that your contributions will be licensed\nunder the [LICENSE](./LICENSE) file.\n"
        },
        {
          "name": "DEV_ENVIRONMENT.md",
          "type": "blob",
          "size": 0.8359375,
          "content": "# Developer Environment Setup\n\n## Desktop app and Flipper Plugins (Javascript)\n\nThe flipper desktop source uses TypeScript and ESLint. Feel free to use your preferred setup, but this is our recommended approach:\n\n**Editor**: Visual Studio Code\n\n**Installed Extensions**:\n * ESLint\n * TypeScript and JavaScript Language Features (enabled by default)\n\n**Settings**:\n```json\n{\n    \"javascript.validate.enable\": false,\n    \"eslint.autoFixOnSave\": true,\n    \"eslint.validate\": [\n        \"javascript\",\n        \"javascriptreact\",\n        \"typescript\",\n        {\"language\":\"typescriptreact\", \"autoFix\": true}\n    ],\n}\n```\n\n## Android plugins and SDK (Java)\n\n**Editor**: Android Studio\n\n## iOS plugins and SDK (Objective-C)\n\n**Editor**: XCode\n\n## Cross-platform SDK (Used by Android and iOS SDK) (C++)\n\n**Editor**: XCode, Android Studio, Visual Studio Code, Vim...\n"
        },
        {
          "name": "Flipper.podspec",
          "type": "blob",
          "size": 1.630859375,
          "content": "# Copyright (c) Meta Platforms, Inc. and affiliates.\n#\n# This source code is licensed under the MIT license found in the\n# LICENSE file in the root directory of this source tree.\n\nflipperkit_version = '0.250.0'\nPod::Spec.new do |spec|\n  spec.name = 'Flipper'\n  spec.cocoapods_version = '>= 1.10'\n  spec.version = flipperkit_version\n  spec.license = { :type => 'MIT' }\n  spec.homepage = 'https://github.com/facebook/flipper'\n  spec.summary = 'SonarKit core cpp code with network implementation'\n  spec.authors = 'Facebook'\n  spec.source = { :git => 'https://github.com/facebook/flipper.git',\n                  :tag => 'v'+flipperkit_version }\n  spec.module_name = 'Flipper'\n  spec.public_header_files = 'xplat/Flipper/*.h','xplat/utils/*.h'\n  spec.source_files = 'xplat/Flipper/*.{h,cpp,m,mm}','xplat/Flipper/utils/*.{h,cpp,m,mm}'\n  spec.libraries = \"stdc++\"\n  spec.dependency 'Flipper-Folly', '~> 2.6'\n  spec.compiler_flags = '-DFLIPPER_OSS=1 -DFB_SONARKIT_ENABLED=1 -DFOLLY_HAVE_BACKTRACE=1 -DFOLLY_HAVE_CLOCK_GETTIME=1 -DFOLLY_NO_CONFIG -DFOLLY_MOBILE=1 -DFOLLY_USE_LIBCPP=1 -DFOLLY_HAVE_LIBGFLAGS=0 -DFOLLY_HAVE_LIBJEMALLOC=0 -DFOLLY_HAVE_PREADV=0 -DFOLLY_HAVE_PWRITEV=0 -DFOLLY_HAVE_TFO=0 -DFOLLY_USE_SYMBOLIZER=0 -Wall\n    -std=c++14\n    -Wno-global-constructors'\n  spec.platforms = { :ios => \"10.0\" }\n  spec.pod_target_xcconfig = { \"USE_HEADERMAP\" => \"NO\",\n                               \"CLANG_CXX_LANGUAGE_STANDARD\" => \"c++14\",\n                               \"HEADER_SEARCH_PATHS\" => \"\\\"$(PODS_TARGET_SRCROOT)\\\" \\\"$(PODS_ROOT)/Flipper-Boost-iOSX\\\" \\\"$(PODS_ROOT)/Flipper-DoubleConversion\\\" \\\"$(PODS_ROOT)/libevent/include\\\"\"\n                               }\nend\n"
        },
        {
          "name": "FlipperKit.podspec",
          "type": "blob",
          "size": 13.994140625,
          "content": "# Copyright (c) Meta Platforms, Inc. and affiliates.\n#\n# This source code is licensed under the MIT license found in the\n# LICENSE file in the root directory of this source tree.\n\nfolly_compiler_flags = '-DDEBUG=1 -DFLIPPER_OSS=1 -DFB_SONARKIT_ENABLED=1 -DFOLLY_HAVE_BACKTRACE=1 -DFOLLY_HAVE_CLOCK_GETTIME=1 -DFOLLY_NO_CONFIG -DFOLLY_MOBILE=1 -DFOLLY_USE_LIBCPP=1 -DFOLLY_HAVE_LIBGFLAGS=0 -DFOLLY_HAVE_LIBJEMALLOC=0 -DFOLLY_HAVE_PREADV=0 -DFOLLY_HAVE_PWRITEV=0 -DFOLLY_HAVE_TFO=0 -DFOLLY_USE_SYMBOLIZER=0'\nflipperkit_version = '0.250.0'\nPod::Spec.new do |spec|\n  spec.name = 'FlipperKit'\n  spec.version = flipperkit_version\n  spec.license = { :type => 'MIT' }\n  spec.homepage = 'https://github.com/facebook/flipper'\n  spec.summary = 'Sonar iOS podspec'\n  spec.authors = 'Facebook'\n  spec.static_framework = true\n  spec.source = { :git => 'https://github.com/facebook/flipper.git',\n                  :tag=> \"v\"+flipperkit_version }\n  spec.module_name = 'FlipperKit'\n  spec.platforms = { :ios => \"11.0\" }\n  spec.default_subspecs = \"Core\"\n  spec.frameworks = 'AVFoundation'\n\n  # This subspec is necessary since FBDefines.h is imported as <FBDefines/FBDefines.h>\n  # inside SKMacros.h, which is a public header file. Defining this directory as a\n  # subspec with header_dir = 'FBDefines' allows this to work, even though it wouldn't\n  # generally (you would need to import <FlipperKit/t/FBDefines/FBDefines.h>)\n  spec.subspec 'FBDefines' do |ss|\n    ss.header_dir = 'FBDefines'\n    ss.compiler_flags = folly_compiler_flags\n    ss.source_files = 'iOS/FBDefines/**/*.h'\n    ss.public_header_files = 'iOS/FBDefines/**/*.h'\n  end\n\n  spec.subspec 'CppBridge' do |ss|\n    ss.header_dir = 'CppBridge'\n    ss.dependency 'Flipper', '~>'+flipperkit_version\n    ss.compiler_flags = folly_compiler_flags\n    ss.source_files = 'iOS/FlipperKit/CppBridge/**/*.{h}'\n    # We set these files as private headers since they only need to be accessed\n    # by other FlipperKit source files\n    ss.private_header_files = 'iOS/FlipperKit/CppBridge/**/*.h'\n    ss.preserve_path = 'iOS/FlipperKit/CppBridge/**/*.h'\n    header_search_paths = \"\\\"$(PODS_ROOT)/Flipper-Boost-iOSX\\\" \\\"$(PODS_ROOT)/Flipper-DoubleConversion\\\" \\\"$(PODS_ROOT)/FlipperKit/iOS/**/\\\" \\\"$(PODS_ROOT)/libevent/include\\\"\"\n    ss.pod_target_xcconfig = { \"USE_HEADERMAP\" => \"NO\",\n                                \"ONLY_ACTIVE_ARCH\": \"YES\",\n                             \"DEFINES_MODULE\" => \"YES\",\n                             \"HEADER_SEARCH_PATHS\" => header_search_paths }\n  end\n\n  spec.subspec 'FBCxxFollyDynamicConvert' do |ss|\n    ss.header_dir = 'FBCxxFollyDynamicConvert'\n    ss.compiler_flags = folly_compiler_flags\n    ss.dependency 'Flipper-Folly', '~> 2.6'\n    ss.source_files = 'iOS/FlipperKit/FBCxxFollyDynamicConvert/**/*.{h,mm}'\n    # We set these files as private headers since they only need to be accessed\n    # by other FlipperKit source files\n    ss.private_header_files = 'iOS/FlipperKit/FBCxxFollyDynamicConvert/**/*.h'\n    header_search_paths = \"\\\"$(PODS_ROOT)/Flipper-Boost-iOSX\\\" \\\"$(PODS_ROOT)/Flipper-DoubleConversion\\\" \\\"$(PODS_ROOT)/libevent/include\\\"\"\n    ss.pod_target_xcconfig = { \"USE_HEADERMAP\" => \"NO\",\n                               \"ONLY_ACTIVE_ARCH\": \"YES\",\n                               \"DEFINES_MODULE\" => \"YES\",\n                             \"HEADER_SEARCH_PATHS\" => header_search_paths }\n  end\n\n  spec.subspec \"FKPortForwarding\" do |ss|\n    ss.header_dir = \"FKPortForwarding\"\n    ss.dependency 'CocoaAsyncSocket', '~> 7.6'\n    ss.dependency 'Flipper-PeerTalk', '~>0.0.4'\n    ss.compiler_flags = folly_compiler_flags\n    ss.source_files = 'iOS/FlipperKit/FKPortForwarding/FKPortForwarding{Server,Common}.{h,m}'\n    ss.private_header_files = 'iOS/FlipperKit/FKPortForwarding/FKPortForwarding{Server,Common}.h'\n  end\n\n  spec.subspec \"Core\" do |ss|\n    ss.dependency 'FlipperKit/FBDefines'\n    ss.dependency 'FlipperKit/FBCxxFollyDynamicConvert'\n    ss.dependency 'FlipperKit/CppBridge'\n    ss.dependency 'FlipperKit/FKPortForwarding'\n    ss.dependency 'Flipper', '~>'+flipperkit_version\n    ss.dependency 'SocketRocket', '~> 0.7.0'\n    ss.dependency 'SSZipArchive', '~> 2.4.3'\n    ss.compiler_flags = folly_compiler_flags\n    ss.source_files = 'iOS/FlipperKit/*.{h,m,mm}', 'iOS/FlipperKit/CppBridge/*.{h,mm}'\n    ss.public_header_files = 'iOS/FlipperKit/**/{FlipperDiagnosticsViewController,FlipperStateUpdateListener,FlipperClient,FlipperPlugin,FlipperConnection,FlipperResponder,SKMacros,FlipperKitCertificateProvider}.h'\n    header_search_paths = \"\\\"$(PODS_ROOT)/FlipperKit/iOS/FlipperKit/\\\" \\\"$(PODS_ROOT)/Headers/Private/FlipperKit/\\\" \\\"$(PODS_ROOT)/Flipper-Boost-iOSX\\\" \\\"$(PODS_ROOT)/SocketRocket\\\" \\\"$(PODS_ROOT)/libevent/include\\\"\"\n    ss.pod_target_xcconfig = { \"USE_HEADERMAP\" => \"NO\",\n                               \"ONLY_ACTIVE_ARCH\": \"YES\",\n                               \"DEFINES_MODULE\" => \"YES\",\n                               \"HEADER_SEARCH_PATHS\" => header_search_paths }\n    ss.xcconfig = { \"GCC_PREPROCESSOR_DEFINITIONS\" => \"FB_SONARKIT_ENABLED=1\", \"OTHER_SWIFT_FLAGS\" => \"-Xcc -DFB_SONARKIT_ENABLED=1\" }\n  end\n\n  spec.subspec 'FlipperKitHighlightOverlay' do |ss|\n    ss.header_dir = 'FlipperKitHighlightOverlay'\n    ss.compiler_flags = folly_compiler_flags\n    ss.source_files = 'iOS/Plugins/FlipperKitPluginUtils/FlipperKitHighlightOverlay/SKHighlightOverlay.{h,mm}'\n    ss.public_header_files = 'iOS/Plugins/FlipperKitPluginUtils/FlipperKitHighlightOverlay/SKHighlightOverlay.h'\n  end\n\n  spec.subspec 'FlipperKitLayoutTextSearchable' do |ss|\n    ss.header_dir = 'FlipperKitLayoutTextSearchable'\n    ss.compiler_flags = folly_compiler_flags\n    ss.source_files = 'iOS/Plugins/FlipperKitLayoutPlugin/FlipperKitLayoutTextSearchable/FKTextSearchable.h'\n    ss.public_header_files = 'iOS/Plugins/FlipperKitLayoutPlugin/FlipperKitLayoutTextSearchable/FKTextSearchable.h'\n  end\n\n  spec.subspec 'FlipperKitLayoutHelpers' do |ss|\n    ss.header_dir = 'FlipperKitLayoutHelpers'\n    ss.dependency 'FlipperKit/Core'\n    ss.dependency 'FlipperKit/FlipperKitLayoutTextSearchable'\n    ss.dependency 'FlipperKit/FlipperKitHighlightOverlay'\n    ss.compiler_flags = folly_compiler_flags\n    ss.source_files = 'iOS/Plugins/FlipperKitPluginUtils/FlipperKitLayoutHelpers/**/**/*.{h,mm,m}'\n    ss.public_header_files = 'iOS/Plugins/FlipperKitPluginUtils/FlipperKitLayoutHelpers/FlipperKitLayoutHelpers/SKTapListener.h',\n                              'iOS/Plugins/FlipperKitPluginUtils/FlipperKitLayoutHelpers/FlipperKitLayoutHelpers/SKInvalidation.h',\n                              'iOS/Plugins/FlipperKitPluginUtils/FlipperKitLayoutHelpers/FlipperKitLayoutHelpers/FlipperKitLayoutDescriptorMapperProtocol.h',\n                              'iOS/Plugins/FlipperKitPluginUtils/FlipperKitLayoutHelpers/FlipperKitLayoutHelpers/SKNodeDescriptor.h',\n                              'iOS/Plugins/FlipperKitPluginUtils/FlipperKitLayoutHelpers/FlipperKitLayoutHelpers/SKTouch.h',\n                              'iOS/Plugins/FlipperKitPluginUtils/FlipperKitLayoutHelpers/FlipperKitLayoutHelpers/SKNamed.h'\n    ss.private_header_files = 'iOS/Plugins/FlipperKitPluginUtils/FlipperKitLayoutHelpers/FlipperKitLayoutHelpers/SKObject.h',\n                              'iOS/Plugins/FlipperKitPluginUtils/FlipperKitLayoutHelpers/FlipperKitLayoutHelpers/UIColor+SKSonarValueCoder.h',\n                              'iOS/Plugins/FlipperKitPluginUtils/FlipperKitLayoutHelpers/FlipperKitLayoutHelpers/utils/SKObjectHash.h',\n                              'iOS/Plugins/FlipperKitPluginUtils/FlipperKitLayoutHelpers/FlipperKitLayoutHelpers/utils/SKSwizzle.h'\n  end\n\n  spec.subspec 'FlipperKitLayoutIOSDescriptors' do |ss|\n    ss.header_dir = 'FlipperKitLayoutIOSDescriptors'\n    ss.dependency 'FlipperKit/Core'\n    ss.dependency 'FlipperKit/FlipperKitHighlightOverlay'\n    ss.dependency 'FlipperKit/FlipperKitLayoutHelpers'\n    ss.compiler_flags = folly_compiler_flags\n    ss.source_files = 'iOS/Plugins/FlipperKitPluginUtils/FlipperKitLayoutIOSDescriptors/**/*.{h,mm,m}'\n  end\n\n  spec.subspec \"FlipperKitLayoutPlugin\" do |ss|\n    ss.header_dir = \"FlipperKitLayoutPlugin\"\n    ss.dependency             'FlipperKit/Core'\n    ss.dependency             'FlipperKit/FlipperKitLayoutTextSearchable'\n    ss.dependency             'FlipperKit/FlipperKitHighlightOverlay'\n    ss.dependency             'FlipperKit/FlipperKitLayoutHelpers'\n    ss.dependency             'FlipperKit/FlipperKitLayoutIOSDescriptors'\n    ss.compiler_flags       = folly_compiler_flags\n    ss.public_header_files  = 'iOS/Plugins/FlipperKitLayoutPlugin/FlipperKitLayoutPlugin/FlipperKitLayoutPlugin.h',\n                              'iOS/Plugins/FlipperKitLayoutPlugin/FlipperKitLayoutPlugin/SKDescriptorMapper.h'\n    ss.source_files         = 'iOS/Plugins/FlipperKitLayoutPlugin/FlipperKitLayoutPlugin/**/*.{h,cpp,m,mm}'\n    ss.exclude_files        = ['iOS/Plugins/FlipperKitLayoutPlugin/fb/*','iOS/Plugins/FlipperKitLayoutPlugin/facebook/*','iOS/Plugins/FlipperKitLayoutPlugin/FlipperKitLayoutPlugin/fb/*' ,'iOS/Plugins/FlipperKitLayoutPlugin/FlipperKitLayoutPlugin/facebook/*']\n    ss.pod_target_xcconfig = { \"HEADER_SEARCH_PATHS\" => \"\\\"$(PODS_ROOT)\\\"/Headers/Private/FlipperKit/**\", \"ONLY_ACTIVE_ARCH\": \"YES\" }\n  end\n\n  spec.subspec \"FlipperKitUIDebuggerPlugin\" do |ss|\n    ss.header_dir = \"FlipperKitUIDebuggerPlugin\"\n    ss.dependency             'FlipperKit/Core'\n    ss.public_header_files  = 'iOS/Plugins/FlipperKitUIDebuggerPlugin/FlipperKitUIDebuggerPlugin/FlipperKitUIDebuggerPlugin.h'\n    ss.source_files         = 'iOS/Plugins/FlipperKitUIDebuggerPlugin/FlipperKitUIDebuggerPlugin/**/*.{h,cpp,m,mm}'\n    ss.exclude_files        = ['iOS/Plugins/FlipperKitUIDebuggerPlugin/fb/*','iOS/Plugins/FlipperKitUIDebuggerPlugin/facebook/*','iOS/Plugins/FlipperKitUIDebuggerPlugin/FlipperKitUIDebuggerPlugin/fb/*' ,'iOS/Plugins/FlipperKitUIDebuggerPlugin/FlipperKitUIDebuggerPlugin/facebook/*']\n    ss.pod_target_xcconfig = { \"HEADER_SEARCH_PATHS\" => \"\\\"$(PODS_ROOT)\\\"/Headers/Private/FlipperKit/**\", \"ONLY_ACTIVE_ARCH\": \"YES\" }\n  end\n\n  spec.subspec \"FlipperKitLayoutComponentKitSupport\" do |ss|\n    ss.header_dir = \"FlipperKitLayoutComponentKitSupport\"\n    ss.dependency             'FlipperKit/Core'\n    ss.dependency             'ComponentKit', '0.31'\n    ss.dependency             'RenderCore', '0.31'\n    ss.dependency             'FlipperKit/FlipperKitLayoutPlugin'\n    ss.dependency             'FlipperKit/FlipperKitLayoutTextSearchable'\n    ss.dependency             'FlipperKit/FlipperKitHighlightOverlay'\n    ss.dependency             'FlipperKit/FlipperKitLayoutHelpers'\n    ss.compiler_flags       = folly_compiler_flags\n    ss.public_header_files = 'iOS/Plugins/FlipperKitLayoutPlugin/FlipperKitLayoutComponentKitSupport/FlipperKitLayoutComponentKitSupport.h',\n                             'iOS/Plugins/FlipperKitLayoutPlugin/FlipperKitLayoutComponentKitSupport/SKSubDescriptor.h'\n    ss.source_files         = \"iOS/Plugins/FlipperKitLayoutPlugin/FlipperKitLayoutComponentKitSupport/**/*.{h,cpp,m,mm}\"\n    ss.exclude_files        = ['iOS/Plugins/FlipperKitLayoutPlugin/FlipperKitLayoutComponentKitSupport/fb/*','iOS/Plugins/FlipperKitLayoutPlugin/FlipperKitLayoutComponentKitSupport/facebook/*']\n    ss.pod_target_xcconfig = { \"HEADER_SEARCH_PATHS\" => \"\\\"$(PODS_ROOT)\\\"/Headers/Private/FlipperKit/**\",\"ONLY_ACTIVE_ARCH\": \"YES\" }\n\n  end\n\n  spec.subspec \"FlipperKitNetworkPlugin\" do |ss|\n    ss.header_dir = \"FlipperKitNetworkPlugin\"\n    ss.dependency             'FlipperKit/Core'\n    ss.compiler_flags       = folly_compiler_flags\n    ss.public_header_files = 'iOS/Plugins/FlipperKitNetworkPlugin/FlipperKitNetworkPlugin/SKBufferingPlugin.h',\n                             'iOS/Plugins/FlipperKitNetworkPlugin/FlipperKitNetworkPlugin/SKNetworkReporter.h',\n                             'iOS/Plugins/FlipperKitNetworkPlugin/FlipperKitNetworkPlugin/SKRequestInfo.h',\n                             'iOS/Plugins/FlipperKitNetworkPlugin/FlipperKitNetworkPlugin/SKResponseInfo.h',\n                             'iOS/Plugins/FlipperKitNetworkPlugin/FlipperKitNetworkPlugin/FlipperKitNetworkPlugin.h'\n    ss.source_files         = \"iOS/Plugins/FlipperKitNetworkPlugin/FlipperKitNetworkPlugin/*.{h,cpp,m,mm}\"\n    ss.pod_target_xcconfig = { \"HEADER_SEARCH_PATHS\" => \"\\\"$(PODS_ROOT)\\\"/Headers/Private/FlipperKit/**\" }\n  end\n\n  spec.subspec \"SKIOSNetworkPlugin\" do |ss|\n    ss.header_dir = \"SKIOSNetworkPlugin\"\n    ss.dependency 'FlipperKit/Core'\n    ss.dependency 'FlipperKit/FlipperKitNetworkPlugin'\n    ss.compiler_flags       = folly_compiler_flags\n    ss.public_header_files = 'iOS/Plugins/FlipperKitNetworkPlugin/SKIOSNetworkPlugin/SKIOSNetworkAdapter.h'\n    ss.source_files         = \"iOS/Plugins/FlipperKitNetworkPlugin/SKIOSNetworkPlugin/**/*.{h,cpp,m,mm}\"\n    ss.pod_target_xcconfig = { \"HEADER_SEARCH_PATHS\" => \"\\\"$(PODS_ROOT)\\\"/Headers/Private/FlipperKit/**\" }\n  end\n\n  spec.subspec \"FlipperKitUserDefaultsPlugin\" do |ss|\n    ss.header_dir = \"FlipperKitUserDefaultsPlugin\"\n    ss.dependency 'FlipperKit/Core'\n    ss.compiler_flags       = folly_compiler_flags\n    ss.public_header_files = 'iOS/Plugins/FlipperKitUserDefaultsPlugin/FKUserDefaultsPlugin.h'\n    ss.source_files         = \"iOS/Plugins/FlipperKitUserDefaultsPlugin/**/*.{h,m}\"\n    ss.pod_target_xcconfig = { \"HEADER_SEARCH_PATHS\" => \"\\\"$(PODS_ROOT)\\\"/Headers/Private/FlipperKit/**\" }\n  end\n\n  spec.subspec \"FlipperKitExamplePlugin\" do |ss|\n    ss.header_dir = \"FlipperKitExamplePlugin\"\n    ss.dependency 'FlipperKit/Core'\n    ss.compiler_flags       = folly_compiler_flags\n    ss.public_header_files = 'iOS/Plugins/FlipperKitExamplePlugin/FlipperKitExamplePlugin.h'\n    ss.source_files         = \"iOS/Plugins/FlipperKitExamplePlugin/**/*.{h,mm}\"\n    ss.pod_target_xcconfig = { \"HEADER_SEARCH_PATHS\" => \"\\\"$(PODS_ROOT)\\\"/Headers/Private/FlipperKit/**\" }\n  end\n\n  spec.subspec \"FlipperKitReactPlugin\" do |ss|\n    ss.header_dir = \"FlipperKitReactPlugin\"\n    ss.dependency 'FlipperKit/Core'\n    ss.compiler_flags       = folly_compiler_flags\n    ss.public_header_files = 'iOS/Plugins/FlipperKitReactPlugin/FlipperKitReactPlugin.h'\n    ss.source_files         = \"iOS/Plugins/FlipperKitReactPlugin/**/FlipperKitReactPlugin.{h,m}\"\n    ss.pod_target_xcconfig = { \"HEADER_SEARCH_PATHS\" => \"\\\"$(PODS_ROOT)\\\"/Headers/Private/FlipperKit/**\" }\n  end\nend\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0625,
          "content": "MIT License\n\nCopyright (c) Meta Platforms, Inc. and affiliates.\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "PortForwardingMacApp",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.2412109375,
          "content": "<p align=\"center\">\n  <img src=\"https://fbflipper.com/img/icon.png\" alt=\"logo\" width=\"20%\"/>\n</p>\n<h1 align=\"center\">\n  Flipper\n</h1>\n<p align=\"center\">\n  <a href=\"https://search.maven.org/artifact/com.facebook.flipper/flipper\">\n    <img src=\"https://img.shields.io/maven-central/v/com.facebook.flipper/flipper\" alt=\"Android Maven Badge\" />\n  </a>\n  <a href=\"https://cocoapods.org/pods/Flipper\">\n    <img src=\"https://img.shields.io/cocoapods/v/FlipperKit.svg?label=iOS&color=blue\" alt=\"iOS\" />\n  </a>\n</p>\n\n---\n## Important Announcement\n\nFlipper is moving away from its Electron distribution to an in-Browser experience.\n\n**How does this affect me?**\n\nFunctionality hasn't changed. The UI remains unchanged. Flipper will run in your default browser instead of a standalone application.\nIf you build from source, Flipper will open in the browser instead of a standalone app. We also provide a MacOS app for the Flipper runtime which can be run and will also open Flipper in the browser.\n\nThe last Electron release is [v0.239.0](https://github.com/facebook/flipper/releases/tag/v0.239.0). As such, future releases will not include Electron artifacts.\n\n### React Native support\n\nIf you are debugging React Native applications, [v0.239.0](https://github.com/facebook/flipper/releases/tag/v0.239.0) will be the last release with support for it due to technical limitations for React Dev Tools and Hermes Debugger plugins. As such, please refer to that release when debugging React Native applications.\n\nNew, dedicated debug tooling for React Native is currently being developed at Meta.\nIn the mean time we recommend this [blog post](https://shift.infinite.red/why-you-dont-need-flipper-in-your-react-native-app-and-how-to-get-by-without-it-3af461955109) with guidance on how to get the capibilities of Flipper through several alternatives.\n\n---\n\n<p align=\"center\">\n  Flipper is a platform for debugging mobile apps on iOS and Android and JS apps in your browser or in Node.js. Visualize, inspect, and control your apps from a simple desktop interface. Use Flipper as is or extend it using the plugin API.\n</p>\n\n![Flipper](website/static/img/inspector.png)\n\n## Table of Contents\n\n- [In this repo](#in-this-repo)\n- [Getting started](#getting-started)\n  - [Requirements](#requirements)\n- [Building from Source](#building-from-source)\n  - [Desktop](#desktop)\n    - [Running from source](#running-from-source)\n    - [Building standalone application](#building-standalone-application)\n  - [iOS SDK + Sample App](#ios-sdk--sample-app)\n  - [Android SDK + Sample app](#android-sdk--sample-app)\n  - [React Native SDK + Sample app](#react-native-sdk--sample-app)\n  - [JS SDK + Sample React app](#js-sdk--sample-react-app)\n    - [Troubleshooting](#troubleshooting)\n- [Documentation](#documentation)\n  - [Contributing](#contributing)\n  - [License](#license)\n\n## Mobile development\n\nFlipper aims to be your number one companion for mobile app development on iOS\nand Android. Therefore, we provide a bunch of useful tools, including a log\nviewer, interactive layout inspector, and network inspector.\n\n## Extending Flipper\n\nFlipper is built as a platform. In addition to using the tools already included,\nyou can create your own plugins to visualize and debug data from your mobile\napps. Flipper takes care of sending data back and forth, calling functions, and\nlistening for events on the mobile app.\n\n## Contributing to Flipper\n\nBoth Flipper's desktop app, native mobile SDKs, JS SDKs are open-source and MIT\nlicensed. This enables you to see and understand how we are building plugins,\nand of course, join the community and help to improve Flipper. We are excited to\nsee what you will build on this platform.\n\n# In this repo\n\nThis repository includes all parts of Flipper. This includes:\n\n- Flipper's desktop app built using [Electron](https://electronjs.org)\n  (`/desktop`)\n- native Flipper SDKs for iOS (`/iOS`)\n- native Flipper SDKs for Android (`/android`)\n- cross-platform C++ SDK (`/xplat`)\n- React Native Flipper SDK (`/react-native`)\n- JS Flipper SDK (`/js`)\n- Plugins (`/desktop/plugins/public/`)\n- website and documentation (`/website`, `/docs`)\n\n# Getting started\n\nPlease refer to our\n[Getting Started guide](https://fbflipper.com/docs/getting-started) to set up\nFlipper. Or, run `npx flipper-server` for a browser based\nversion of Flipper.\n\n## Requirements\n\n- node >= 18\n- yarn >= 1.16\n- iOS developer tools (for developing iOS plugins)\n- Android SDK and adb\n\n# Building from Source\n\n## Desktop\n\n### Running from source\n\n```bash\ngit clone https://github.com/facebook/flipper.git\ncd flipper/desktop\nyarn\nyarn start\n```\n\n### Building standalone application\n\nProvide either `--mac`, `--win`, `--linux` or any combination of them to\n`yarn build` to build a release zip file for the given platform(s). E.g.\n\n```bash\nyarn build --mac\n```\n\nYou can find the resulting artifact in the `dist/` folder.\n\n## iOS SDK + Sample App\n\n```bash\ncd iOS/Sample\nrm -f Podfile.lock\npod install --repo-update\nopen Sample.xcworkspace\n<Run app from xcode>\n```\n\nYou can omit `--repo-update` to speed up the installation, but watch out as you\nmay be building against outdated dependencies.\n\n## Android SDK + Sample app\n\nStart up an android emulator and run the following in the project root:\n\n```bash\n./gradlew :sample:installDebug\n```\n\n## React Native SDK + Sample app\n\n> Requires RN 0.69+!\n\n```bash\ncd react-native/ReactNativeFlipperExample\nyarn\nyarn android\n```\n\nNote that the first 2 steps need to be done only once.\n\nAlternatively, the app can be started on `iOS` by running `yarn ios`.\n\nIf this is the first time running, you will also need to run\n`pod install --repo-update` from the\n`react-native/ReactNativeFlipperExample/ios` folder.\n\n### React Native Windows (Experimental)\n\nAn experimental version of Flipper for React Native Windows is available. The\nfollowing steps prepare the React Native Flipper project:\n\n```bash\ncd react-native/react-native-flipper\nvcpkg install openssl:x64-uwp openssl:arm-uwp\nvcpkg integrate install\nyarn install\ncd windows\nnuget install ReactNativeFlipper/packages.config\n```\n\nIn a nutshell, [vcpkg](https://vcpkg.io/) is used to install\n[OpenSSL](https://www.openssl.org/). Nuget is used to install\n[Boost](https://www.boost.org/).\n\nThen, the sample application can be built and run as follows:\n\n```bash\ncd ../../ReactNativeFlipperExample\nyarn install\nyarn relative-deps\nnpx react-native run-windows\n```\n\nAt the moment there's no available package for React Native Flipper. This means\nthat to integrate Flipper with any other existing applications, an explicit\nreference to the project needs to be added just as is done with the sample\napplication.\n\n## JS SDK + Sample React app\n\n```bash\ncd js/react-flipper-example\nyarn\nyarn start\n```\n\n#### Troubleshooting\n\nOlder yarn versions might show an error / hang with the message 'Waiting for the\nother yarn instance to finish'. If that happens, run the command `yarn` first\nseparately in the directory `react-native/react-native-flipper`.\n\n# Documentation\n\nFind the full documentation for this project at\n[fbflipper.com](https://fbflipper.com/).\n\nOur documentation is built with [Docusaurus](https://docusaurus.io/). You can\nbuild it locally by running this:\n\n```bash\ncd website\nyarn\nyarn start\n```\n\n## Contributing\n\nSee the [CONTRIBUTING](/CONTRIBUTING.md) file for how to help out.\n\n## License\n\nFlipper is MIT licensed, as found in the [LICENSE](/LICENSE) file.\n"
        },
        {
          "name": "_watchmanconfig",
          "type": "blob",
          "size": 0.00390625,
          "content": "{\n}\n"
        },
        {
          "name": "android",
          "type": "tree",
          "content": null
        },
        {
          "name": "build.gradle",
          "type": "blob",
          "size": 5.91015625,
          "content": "/*\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nbuildscript {\n    repositories {\n        google()\n        mavenCentral()\n    }\n    dependencies {\n        classpath 'com.android.tools.build:gradle:8.2.1'\n        classpath 'com.vanniktech:gradle-maven-publish-plugin:0.25.3'\n        classpath \"org.jetbrains.kotlin:kotlin-gradle-plugin:$KOTLIN_VERSION\"\n        classpath \"org.jetbrains.kotlin:kotlin-serialization:$KOTLIN_VERSION\"\n    }\n}\n\nplugins {\n    id 'de.undercouch.download' version '5.6.0'\n    id 'com.github.ben-manes.versions' version '0.47.0'\n}\n\next.isSnapshot = { VERSION_NAME.endsWith('-SNAPSHOT') }\next.isRelease = { ['publish', 'publishToMavenLocal'].any { gradle.startParameter.taskNames.contains(it) } }\n\nsubprojects {\n    repositories {\n        google()\n        mavenLocal()\n        mavenCentral()\n\n        if (isSnapshot()) {\n            maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }\n        }\n    }\n\n    // We don't build Javadoc at this time.\n    tasks.withType(Javadoc).all {\n        enabled = false\n    }\n\n    tasks.withType(com.android.build.gradle.tasks.JavaDocGenerationTask).all {\n        enabled = false\n    }\n}\n\next {\n    minSdkVersion = 15\n    targetSdkVersion = 34\n    compileSdkVersion = 34\n    buildToolsVersion = \"33.0.2\"\n    ndkVersion = \"25.1.8937393\"\n    javaTargetVersion = JavaVersion.VERSION_17\n}\n\next.deps = [\n        // Kotlin support\n        kotlinStdLibrary   : \"org.jetbrains.kotlin:kotlin-stdlib:$KOTLIN_VERSION\",\n        kotlinCoroutinesAndroid : \"org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3\",\n        // Android support\n        supportAnnotations : \"androidx.annotation:annotation:$ANDROIDX_VERSION\",\n        supportAppCompat   : \"androidx.appcompat:appcompat:$ANDROIDX_VERSION\",\n        supportCoreUi      : \"androidx.legacy:legacy-support-core-ui:$ANDROIDX_VERSION\",\n        supportRecyclerView: \"androidx.recyclerview:recyclerview:$ANDROIDX_VERSION\",\n        supportConstraintLayout: \"androidx.constraintlayout:constraintlayout:2.1.4\",\n        supportSqlite      : \"androidx.sqlite:sqlite-framework:2.2.0\",\n        supportEspresso    : 'androidx.test.espresso:espresso-core:3.5.1',\n        supportEspressoIntents : 'androidx.test.espresso:espresso-intents:3.5.1',\n        supportTestRunner  : 'androidx.test:runner:1.5.2',\n        supportCoreKtx     : 'androidx.core:core-ktx:1.12.0',\n        // Arch\n        archPaging         : 'android.arch.paging:runtime:1.0.1',\n        // First-party\n        soloader           : \"com.facebook.soloader:soloader:$SOLOADER_VERSION\",\n        fbjni              : \"com.facebook.fbjni:fbjni:$FBJNI_VERSION\",\n        screenshot         : 'com.facebook.testing.screenshot:core:0.15.0',\n        boltsTasks         : 'com.parse.bolts:bolts-tasks:1.4.0',\n        curtains           : 'com.squareup.curtains:curtains:1.2.5',\n        // Third-party\n        websocket          : 'org.java-websocket:Java-WebSocket:1.5.4',\n        openssl            : 'com.android.ndk.thirdparty:openssl:1.1.1l-beta-1',\n        // Annotations\n        kotlinxSerializationJson :  \"org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.3\",\n        jsr305             : 'com.google.code.findbugs:jsr305:3.0.2',\n        inferAnnotations   : 'com.facebook.infer.annotation:infer-annotation:0.18.0',\n        proguardAnnotations: 'com.facebook.yoga:proguard-annotations:1.19.0',\n        // Litho\n        lithoAnnotations   : \"com.facebook.litho:litho-annotations:$LITHO_VERSION\",\n        lithoCore          : \"com.facebook.litho:litho-core:$LITHO_VERSION\",\n        lithoEditorCore    : \"com.facebook.litho:litho-editor-core:$LITHO_VERSION\",\n        lithoEditorFlipper    : \"com.facebook.litho:litho-editor-flipper:$LITHO_VERSION\",\n        lithoSectionsAnnotations: \"com.facebook.litho:litho-sections-annotations:$LITHO_VERSION\",\n        lithoSectionsDebug : \"com.facebook.litho:litho-sections-debug:$LITHO_VERSION\",\n        lithoSectionsCore  : \"com.facebook.litho:litho-sections-core:$LITHO_VERSION\",\n        lithoSectionsWidget  : \"com.facebook.litho:litho-sections-widget:$LITHO_VERSION\",\n        lithoWidget        : \"com.facebook.litho:litho-widget:$LITHO_VERSION\",\n        lithoProcessor     : \"com.facebook.litho:litho-processor:$LITHO_VERSION\",\n        lithoSectionsProcessor: \"com.facebook.litho:litho-sections-processor:$LITHO_VERSION\",\n        lithoFresco        : \"com.facebook.litho:litho-fresco:$LITHO_VERSION\",\n        lithoTesting       : \"com.facebook.litho:litho-testing:$LITHO_VERSION\",\n        // Debugging and testing\n        guava              : 'com.google.guava:guava:23.0',\n        robolectric        : 'org.robolectric:robolectric:4.10.3',\n        junit              : 'junit:junit:4.13.2',\n        hamcrest           : 'org.hamcrest:hamcrest-library:2.2',\n        mockito            : 'org.mockito:mockito-core:5.8.0',\n        okhttp3            : 'com.squareup.okhttp3:okhttp:4.11.0',\n        leakcanary         : 'com.squareup.leakcanary:leakcanary-android:1.6.3',\n        leakcanary2        : 'com.squareup.leakcanary:leakcanary-android:2.8.1',\n        protobuf           : 'com.google.protobuf:protobuf-java:3.25.3',\n        testCore           : 'androidx.test:core:1.4.0',\n        testRules          : 'androidx.test:rules:1.5.0',\n        // Plugin dependencies\n        flipperFrescoPlugin: \"com.facebook.fresco:flipper-fresco-plugin:$FRESCO_VERSION\",\n        frescoFlipper      : \"com.facebook.fresco:flipper:$FRESCO_VERSION\",\n        frescoStetho       : \"com.facebook.fresco:stetho:$FRESCO_VERSION\",\n        fresco             : \"com.facebook.fresco:fresco:$FRESCO_VERSION\",\n        frescoUiCommon     : \"com.facebook.fresco:ui-common:$FRESCO_VERSION\",\n        frescoVito         : \"com.facebook.fresco:vito:$FRESCO_VERSION\",\n        frescoVitoCore     : \"com.facebook.fresco:vito-core:$FRESCO_VERSION\",\n        frescoVitoLitho    : \"com.facebook.fresco:vito-litho:$FRESCO_VERSION\",\n]\n"
        },
        {
          "name": "desktop",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradle.properties",
          "type": "blob",
          "size": 1.5615234375,
          "content": "# Copyright (c) Meta Platforms, Inc. and affiliates.\n#\n# This source code is licensed under the MIT license found in the\n# LICENSE file in the root directory of this source tree.\n# POM publishing constants\nVERSION_NAME=0.273.1-SNAPSHOT\nGROUP=com.facebook.flipper\nSONATYPE_STAGING_PROFILE=comfacebook\nPOM_URL=https://github.com/facebook/flipper\nPOM_SCM_URL=https://github.com/facebook/flipper.git\nPOM_SCM_CONNECTION=scm:git:https://github.com/facebook/flipper.git\nPOM_SCM_DEV_CONNECTION=scm:git:git@github.com:facebook/flipper.git\nPOM_LICENCE_NAME=MIT\nPOM_LICENCE_URL=https://github.com/facebook/flipper/blob/main/LICENSE\nPOM_LICENCE_DIST=repo\nPOM_DEVELOPER_ID=facebook\nPOM_DEVELOPER_NAME=facebook\nPOM_ISSUES_URL=https://github.com/facebook/flipper/issues/\n# Shared version numbers\nLITHO_VERSION=0.50.1\nFRESCO_VERSION=3.1.3\nANDROIDX_VERSION=1.3.0\nANDROIDX_ACTIVITY_VERSION=1.8.2\nKOTLIN_VERSION=1.9.23\nFBJNI_VERSION=0.3.0\nSOLOADER_VERSION=0.10.4\nCOMPOSE_VERSION=1.6.7\nCOMPOSE_MATERIAL3_VERSION=1.1.2\nCOMPOSE_COMPILER_VERSION=1.5.13\n# Gradle internals\norg.gradle.internal.repository.max.retries=10\norg.gradle.internal.repository.initial.backoff=1250\n# The --add-opens is required for Litho's annotation processor on JDK 17\norg.gradle.jvmargs=-Xmx2g -Xms512m --add-opens=jdk.compiler/com.sun.tools.javac.code=ALL-UNNAMED\nsystemProp.org.gradle.internal.http.connectionTimeout=120000\nsystemProp.org.gradle.internal.http.socketTimeout=120000\nandroid.useAndroidX=true\nandroid.enableJetifier=true\nandroid.defaults.buildfeatures.buildconfig=true\nandroid.nonTransitiveRClass=false\nandroid.nonFinalResIds=false\n"
        },
        {
          "name": "gradle",
          "type": "tree",
          "content": null
        },
        {
          "name": "gradlew",
          "type": "blob",
          "size": 8.296875,
          "content": "#!/bin/sh\n\n#\n# Copyright © 2015-2021 the original authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#      https://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n#\n\n##############################################################################\n#\n#   Gradle start up script for POSIX generated by Gradle.\n#\n#   Important for running:\n#\n#   (1) You need a POSIX-compliant shell to run this script. If your /bin/sh is\n#       noncompliant, but you have some other compliant shell such as ksh or\n#       bash, then to run this script, type that shell name before the whole\n#       command line, like:\n#\n#           ksh Gradle\n#\n#       Busybox and similar reduced shells will NOT work, because this script\n#       requires all of these POSIX shell features:\n#         * functions;\n#         * expansions «$var», «${var}», «${var:-default}», «${var+SET}»,\n#           «${var#prefix}», «${var%suffix}», and «$( cmd )»;\n#         * compound commands having a testable exit status, especially «case»;\n#         * various built-in commands including «command», «set», and «ulimit».\n#\n#   Important for patching:\n#\n#   (2) This script targets any POSIX shell, so it avoids extensions provided\n#       by Bash, Ksh, etc; in particular arrays are avoided.\n#\n#       The \"traditional\" practice of packing multiple parameters into a\n#       space-separated string is a well documented source of bugs and security\n#       problems, so this is (mostly) avoided, by progressively accumulating\n#       options in \"$@\", and eventually passing that to Java.\n#\n#       Where the inherited environment variables (DEFAULT_JVM_OPTS, JAVA_OPTS,\n#       and GRADLE_OPTS) rely on word-splitting, this is performed explicitly;\n#       see the in-line comments for details.\n#\n#       There are tweaks for specific operating systems such as AIX, CygWin,\n#       Darwin, MinGW, and NonStop.\n#\n#   (3) This script is generated from the Groovy template\n#       https://github.com/gradle/gradle/blob/HEAD/subprojects/plugins/src/main/resources/org/gradle/api/internal/plugins/unixStartScript.txt\n#       within the Gradle project.\n#\n#       You can find Gradle at https://github.com/gradle/gradle/.\n#\n##############################################################################\n\n# Attempt to set APP_HOME\n\n# Resolve links: $0 may be a link\napp_path=$0\n\n# Need this for daisy-chained symlinks.\nwhile\n    APP_HOME=${app_path%\"${app_path##*/}\"}  # leaves a trailing /; empty if no leading path\n    [ -h \"$app_path\" ]\ndo\n    ls=$( ls -ld \"$app_path\" )\n    link=${ls#*' -> '}\n    case $link in             #(\n      /*)   app_path=$link ;; #(\n      *)    app_path=$APP_HOME$link ;;\n    esac\ndone\n\n# This is normally unused\n# shellcheck disable=SC2034\nAPP_BASE_NAME=${0##*/}\nAPP_HOME=$( cd \"${APP_HOME:-./}\" && pwd -P ) || exit\n\n# Use the maximum available, or set MAX_FD != -1 to use that value.\nMAX_FD=maximum\n\nwarn () {\n    echo \"$*\"\n} >&2\n\ndie () {\n    echo\n    echo \"$*\"\n    echo\n    exit 1\n} >&2\n\n# OS specific support (must be 'true' or 'false').\ncygwin=false\nmsys=false\ndarwin=false\nnonstop=false\ncase \"$( uname )\" in                #(\n  CYGWIN* )         cygwin=true  ;; #(\n  Darwin* )         darwin=true  ;; #(\n  MSYS* | MINGW* )  msys=true    ;; #(\n  NONSTOP* )        nonstop=true ;;\nesac\n\nCLASSPATH=$APP_HOME/gradle/wrapper/gradle-wrapper.jar\n\n\n# Determine the Java command to use to start the JVM.\nif [ -n \"$JAVA_HOME\" ] ; then\n    if [ -x \"$JAVA_HOME/jre/sh/java\" ] ; then\n        # IBM's JDK on AIX uses strange locations for the executables\n        JAVACMD=$JAVA_HOME/jre/sh/java\n    else\n        JAVACMD=$JAVA_HOME/bin/java\n    fi\n    if [ ! -x \"$JAVACMD\" ] ; then\n        die \"ERROR: JAVA_HOME is set to an invalid directory: $JAVA_HOME\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\n    fi\nelse\n    JAVACMD=java\n    which java >/dev/null 2>&1 || die \"ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\n\nPlease set the JAVA_HOME variable in your environment to match the\nlocation of your Java installation.\"\nfi\n\n# Increase the maximum file descriptors if we can.\nif ! \"$cygwin\" && ! \"$darwin\" && ! \"$nonstop\" ; then\n    case $MAX_FD in #(\n      max*)\n        # In POSIX sh, ulimit -H is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC3045\n        MAX_FD=$( ulimit -H -n ) ||\n            warn \"Could not query maximum file descriptor limit\"\n    esac\n    case $MAX_FD in  #(\n      '' | soft) :;; #(\n      *)\n        # In POSIX sh, ulimit -n is undefined. That's why the result is checked to see if it worked.\n        # shellcheck disable=SC3045\n        ulimit -n \"$MAX_FD\" ||\n            warn \"Could not set maximum file descriptor limit to $MAX_FD\"\n    esac\nfi\n\n# Collect all arguments for the java command, stacking in reverse order:\n#   * args from the command line\n#   * the main class name\n#   * -classpath\n#   * -D...appname settings\n#   * --module-path (only if needed)\n#   * DEFAULT_JVM_OPTS, JAVA_OPTS, and GRADLE_OPTS environment variables.\n\n# For Cygwin or MSYS, switch paths to Windows format before running java\nif \"$cygwin\" || \"$msys\" ; then\n    APP_HOME=$( cygpath --path --mixed \"$APP_HOME\" )\n    CLASSPATH=$( cygpath --path --mixed \"$CLASSPATH\" )\n\n    JAVACMD=$( cygpath --unix \"$JAVACMD\" )\n\n    # Now convert the arguments - kludge to limit ourselves to /bin/sh\n    for arg do\n        if\n            case $arg in                                #(\n              -*)   false ;;                            # don't mess with options #(\n              /?*)  t=${arg#/} t=/${t%%/*}              # looks like a POSIX filepath\n                    [ -e \"$t\" ] ;;                      #(\n              *)    false ;;\n            esac\n        then\n            arg=$( cygpath --path --ignore --mixed \"$arg\" )\n        fi\n        # Roll the args list around exactly as many times as the number of\n        # args, so each arg winds up back in the position where it started, but\n        # possibly modified.\n        #\n        # NB: a `for` loop captures its iteration list before it begins, so\n        # changing the positional parameters here affects neither the number of\n        # iterations, nor the values presented in `arg`.\n        shift                   # remove old arg\n        set -- \"$@\" \"$arg\"      # push replacement arg\n    done\nfi\n\n\n# Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nDEFAULT_JVM_OPTS='\"-Xmx64m\" \"-Xms64m\"'\n\n# Collect all arguments for the java command;\n#   * $DEFAULT_JVM_OPTS, $JAVA_OPTS, and $GRADLE_OPTS can contain fragments of\n#     shell script including quotes and variable substitutions, so put them in\n#     double quotes to make sure that they get re-expanded; and\n#   * put everything else in single quotes, so that it's not re-expanded.\n\nset -- \\\n        \"-Dorg.gradle.appname=$APP_BASE_NAME\" \\\n        -classpath \"$CLASSPATH\" \\\n        org.gradle.wrapper.GradleWrapperMain \\\n        \"$@\"\n\n# Stop when \"xargs\" is not available.\nif ! command -v xargs >/dev/null 2>&1\nthen\n    die \"xargs is not available\"\nfi\n\n# Use \"xargs\" to parse quoted args.\n#\n# With -n1 it outputs one arg per line, with the quotes and backslashes removed.\n#\n# In Bash we could simply go:\n#\n#   readarray ARGS < <( xargs -n1 <<<\"$var\" ) &&\n#   set -- \"${ARGS[@]}\" \"$@\"\n#\n# but POSIX shell has neither arrays nor command substitution, so instead we\n# post-process each arg (as a line of input to sed) to backslash-escape any\n# character that might be a shell metacharacter, then use eval to reverse\n# that process (while maintaining the separation between arguments), and wrap\n# the whole thing up as a single \"set\" statement.\n#\n# This will of course break if any of these variables contains a newline or\n# an unmatched quote.\n#\n\neval \"set -- $(\n        printf '%s\\n' \"$DEFAULT_JVM_OPTS $JAVA_OPTS $GRADLE_OPTS\" |\n        xargs -n1 |\n        sed ' s~[^-[:alnum:]+,./:=@_]~\\\\&~g; ' |\n        tr '\\n' ' '\n    )\" '\"$@\"'\n\nexec \"$JAVACMD\" \"$@\"\n"
        },
        {
          "name": "gradlew.bat",
          "type": "blob",
          "size": 2.8984375,
          "content": "@REM Copyright (c) Meta Platforms, Inc. and affiliates.\n@REM\n@REM This source code is licensed under the MIT license found in the\n@REM LICENSE file in the root directory of this source tree.\n\n@rem\n@rem Copyright 2015 the original author or authors.\n@rem\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\n@rem you may not use this file except in compliance with the License.\n@rem You may obtain a copy of the License at\n@rem\n@rem      https://www.apache.org/licenses/LICENSE-2.0\n@rem\n@rem Unless required by applicable law or agreed to in writing, software\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@rem See the License for the specific language governing permissions and\n@rem limitations under the License.\n@rem\n\n@if \"%DEBUG%\"==\"\" @echo off\n@rem ##########################################################################\n@rem\n@rem  Gradle startup script for Windows\n@rem\n@rem ##########################################################################\n\n@rem Set local scope for the variables with windows NT shell\nif \"%OS%\"==\"Windows_NT\" setlocal\n\nset DIRNAME=%~dp0\nif \"%DIRNAME%\"==\"\" set DIRNAME=.\n@rem This is normally unused\nset APP_BASE_NAME=%~n0\nset APP_HOME=%DIRNAME%\n\n@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.\nfor %%i in (\"%APP_HOME%\") do set APP_HOME=%%~fi\n\n@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script.\nset DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\n\n@rem Find java.exe\nif defined JAVA_HOME goto findJavaFromJavaHome\n\nset JAVA_EXE=java.exe\n%JAVA_EXE% -version >NUL 2>&1\nif %ERRORLEVEL% equ 0 goto execute\n\necho.\necho ERROR: JAVA_HOME is not set and no 'java' command could be found in your PATH.\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:findJavaFromJavaHome\nset JAVA_HOME=%JAVA_HOME:\"=%\nset JAVA_EXE=%JAVA_HOME%/bin/java.exe\n\nif exist \"%JAVA_EXE%\" goto execute\n\necho.\necho ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%\necho.\necho Please set the JAVA_HOME variable in your environment to match the\necho location of your Java installation.\n\ngoto fail\n\n:execute\n@rem Setup the command line\n\nset CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\n\n@rem Execute Gradle\n\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname=%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*\n\n:end\n@rem End local scope for the variables with windows NT shell\nif %ERRORLEVEL% equ 0 goto mainEnd\n\n:fail\nrem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of\nrem the _cmd.exe /c_ return code!\nset EXIT_CODE=%ERRORLEVEL%\nif %EXIT_CODE% equ 0 set EXIT_CODE=1\nif not \"\"==\"%GRADLE_EXIT_CONSOLE%\" exit %EXIT_CODE%\nexit /b %EXIT_CODE%\n\n:mainEnd\nif \"%OS%\"==\"Windows_NT\" endlocal\n\n:omega\n"
        },
        {
          "name": "iOS",
          "type": "tree",
          "content": null
        },
        {
          "name": "js",
          "type": "tree",
          "content": null
        },
        {
          "name": "libs",
          "type": "tree",
          "content": null
        },
        {
          "name": "packer",
          "type": "tree",
          "content": null
        },
        {
          "name": "react-native",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "settings.gradle",
          "type": "blob",
          "size": 1.7724609375,
          "content": "/*\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\ninclude ':android'\ninclude ':folly'\ninclude ':sonarcpp'\ninclude ':sample'\ninclude ':tutorial'\ninclude ':doubleconversion'\ninclude ':glog'\ninclude ':libevent'\ninclude ':third-party'\ninclude ':noop'\n\nproject(':sonarcpp').projectDir = file('xplat')\nproject(':sample').projectDir = file('android/sample')\nproject(':tutorial').projectDir = file('android/tutorial')\nproject(':android').projectDir = file('android')\nproject(':doubleconversion').projectDir = file('android/third-party/external/double-conversion/')\nproject(':glog').projectDir = file('android/third-party/external/glog/')\nproject(':folly').projectDir = file('android/third-party/external/folly/')\nproject(':libevent').projectDir = file('android/third-party/external/LibEvent/')\nproject(':third-party').projectDir = file('android/third-party/')\nproject(':noop').projectDir = file('android/no-op/')\n\n// Plugins\ninclude ':network-plugin'\nproject(':network-plugin').projectDir = file('android/plugins/network')\n\ninclude ':litho-plugin'\nproject(':litho-plugin').projectDir = file('android/plugins/litho')\n\ninclude ':leakcanary-plugin'\nproject(':leakcanary-plugin').projectDir = file('android/plugins/leakcanary')\n\ninclude ':leakcanary2-plugin'\nproject(':leakcanary2-plugin').projectDir = file('android/plugins/leakcanary2')\n\ninclude ':retrofit2-protobuf'\nproject(':retrofit2-protobuf').projectDir = file('android/plugins/retrofit2-protobuf')\n\ninclude ':jetpack-compose-plugin'\nproject(':jetpack-compose-plugin').projectDir = file('android/plugins/jetpack-compose')\n\ninclude ':inspection-lib'\nproject(':inspection-lib').projectDir = file('android/plugins/inspection-lib')\n"
        },
        {
          "name": "website",
          "type": "tree",
          "content": null
        },
        {
          "name": "xplat",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}