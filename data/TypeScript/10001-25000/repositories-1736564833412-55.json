{
  "metadata": {
    "timestamp": 1736564833412,
    "page": 55,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "basarat/typescript-book",
      "stars": 20934,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0615234375,
          "content": "# core.autocrlf\n* text=auto\n\n*.js linguist-language=TypeScript\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.384765625,
          "content": "# Mac \n*.DS_Store\n\n# IDEs\n.alm\n.vscode\n\n\n# Node rules:\n## Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n## Dependency directory\n## Commenting this out is preferred by some people, see\n## https://docs.npmjs.com/misc/faq#should-i-check-my-node_modules-folder-into-git\nnode_modules\n\n# Book build output\n_book\n\n# eBook build output\n*.epub\n*.mobi\n*.pdf\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.00390625,
          "content": "# Contributing\n\nThis book is developed using [GitBook](https://github.com/GitbookIO/gitbook). Authored in Markdown files (I use [atom](http://atom.io)).\n\nHere's how to setup a Dev Environment:\n\n```\nnpm install gitbook-cli -g\ngitbook install\ngitbook serve .\n```\n> Note: serve needs port `35729` (for live reload) and `4000` for serving http://localhost:4000.\n\nAlso you can mostly just edit the `.md` files in [`/docs`](https://github.com/basarat/typescript-book/docs) using github and create a Pull Request (PR).\n\n# Code\nAll the code for the book is in the `/code` folder. Tested with `atom-typescript`.\n\n### More Gitbook Tips\n* Links best work if they are relative (e.g. `./foo.md`) to the *current* file.\n* For links in the same file (`#foo-bar` style links) best to click the heading on github to get what gitbook expects.\n\n### TypeScript Compiler Docs\nThanks to the TypeScript team for providing much of the docs: https://github.com/Microsoft/TypeScript/wiki/Architectural-Overview that are used to write the compiler story.\n"
        },
        {
          "name": "GLOSSARY.md",
          "type": "blob",
          "size": 0.4228515625,
          "content": "# Duck Typing\nIf it walks like a duck and quacks like a duck, it is a duck. For TypeScript if it has all the members structurally then it is okay for other things (irrespecitive of name) that accept that structure.\n\n# OE\nOperating Environment. I'd like to use the term Operating System, but that is not necessarily what I mean here. Think Browser,Node.js,WScriptHost etc.\n\n# Incremental Parsing\nRe-Parsing as the user edits the code."
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 0.0625,
          "content": "Creative Commons \n\nhttps://creativecommons.org/licenses/by/4.0/\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.0009765625,
          "content": "[![YouTube Channel Subscribers](https://img.shields.io/youtube/channel/subscribers/UCGD_0i6L48hucTiiyhb5QzQ?style=social)](https://www.youtube.com/@basarat)\n\nTypeScript Deep Dive\n=======\n\nLearn Professional TypeScript. I've been looking at the issues that turn up commonly when people start using TypeScript. This is based on the lessons from [Stack Overflow](http://stackoverflow.com/tags/typescript/topusers) / [DefinitelyTyped](https://github.com/DefinitelyTyped/) and general engagement with the [TypeScript community](https://github.com/TypeStrong/). You can [follow for updates](https://twitter.com/basarat) and [don't forget to ★ on GitHub](https://github.com/basarat/typescript-book) 🌹\n\n## Reviews\n\n* Thanks for the wonderful book. Learned a lot from it. ([link](https://www.gitbook.com/book/basarat/typescript/discussions/21#comment-1468279131934))\n* Its probably the Best TypeScript book out there. Good Job ([link](https://twitter.com/thelondonjs/status/756419561570852864))\n* Love how precise and clear the examples and explanations are! ([link](https://twitter.com/joe_mighty/status/758290957280346112))\n* For the low, low price of free, you get pages of pure awesomeness. Chock full of source code examples and clear, concise explanations, TypeScript Deep Dive will help you learn TypeScript development. ([link](https://www.nativescript.org/blog/details/free-book-typescript-deep-dive))\n* Just a big thank you! **Best TypeScript 2 detailed explanation!** ([link](https://www.gitbook.com/book/basarat/typescript/discussions/38))\n* This gitbook got my project going pronto. Fluent easy read 5 stars. ([link](https://twitter.com/thebabellion/status/779888195559235584))\n* I recommend the online #typescript book by @basarat you'll love it.([link](https://twitter.com/markpieszak/status/788099306590969860))\n* I've always found this by @basarat really helpful. ([link](https://twitter.com/Brocco/status/789887640656945152))\n* We must highlight TypeScript Deep Dive, an open source book.([link](https://www.siliconrepublic.com/enterprise/typescript-programming-javascript))\n* Great online resource for learning. ([link](https://twitter.com/rdfuhr/status/790193307708076035))\n* Thank you for putting this book together, and for all your hard work within the TypeScript community. ([link](https://github.com/basarat/typescript-book/pull/183#issuecomment-257799713))\n* TypeScript Deep Dive is one of the best technical texts I've read in a while. ([link](https://twitter.com/borekb/status/794287092272599040))\n* Thanks @basarat for the TypeScript Deep Dive Book. Help me a lot with my first TypeScript project. ([link](https://twitter.com/betolinck/status/797901548562960384))\n* Thanks to @basarat for this great #typescript learning resource. ([link](https://twitter.com/markuse1501/status/799116176815230976))\n* Guyz excellent book on Typescript(@typescriptlang) by @basarat ([link](https://twitter.com/deeinlove/status/813245965507260417))\n* Leaning on the legendary @basarat's \"TypeScript Deep Dive\" book heavily at the moment ([link](https://twitter.com/sitapati/status/814379404956532737))\n* numTimesPointedPeopleToBasaratsTypeScriptBook++; ([link](https://twitter.com/brocco/status/814227741696462848))\n* A book not only for typescript, a good one for deeper JavaScript knowledge as well. [link](https://www.gitbook.com/book/basarat/typescript/discussions/59)\n* In my new job, we're using @typescriptlang, which I am new to. This is insanely helpful huge thanks, @basarat! [link](https://twitter.com/netchkin/status/855339390566096896)\n* Thank you for writing TypeScript Deep Dive. I have learned so much. [link](https://twitter.com/buctwbzs/status/857198618704355328?refsrc=email&s=11)\n* Loving @basarat's @typescriptlang online book basarat.gitbooks.io/typescript/# loaded with great recipes! [link](https://twitter.com/ericliprandi/status/857608837309677568)\n* Microsoft doc is great already, but if want to \"dig deeper\" into TypeScript I find this book of great value  [link](https://twitter.com/caludio/status/876729910550831104)\n* Thanks, this is a great book 🤓🤓 [link](https://twitter.com/jjwonmin/status/885666375548547073)\n* Deep dive to typescript is awesome in so many levels. i find it very insightful. Thanks [link](https://twitter.com/orenmizr/status/891083492787970053)\n* @basarat's intro to @typescriptlang is still one of the best going (if not THE best) [link](https://twitter.com/stevealee/status/953953255968698368)\n* \n* This is sweet! So many #typescript goodies! [link](https://twitter.com/pauliescanlon/status/989898852474998784)\n\n## Get Started\nIf you are here to read the book online [get started](https://basarat.gitbook.io/typescript/getting-started).\n\n## Translations \nBook is completely free so you can copy paste whatever you want without requiring permission. If you have a translation you want me to link here. [Send a PR](https://github.com/basarat/typescript-book/edit/master/README.md).\n* [Filipino](https://github.com/themarshann/typescript-book-fil)\n* [Italian](https://github.com/TizioFittizio/typescript-book)\n* [Chinese](https://github.com/jkchao/typescript-book-chinese)\n* [Russian](https://github.com/etroynov/typescript-book)\n* [Portuguese](https://github.com/overlineink/typescript-book)\n* [Japanese](https://github.com/yohamta/typescript-book)\n* [Spanish](https://github.com/melissarofman/typescript-book)\n* [Korean](https://github.com/radlohead/typescript-book)\n* [French](https://github.com/HachemiH/typescript-book)\n* [Polish](https://github.com/mbiesiad/typescript-book/tree/pl_PL)\n* [Thai](https://github.com/futurouz/typescript-book)\n* [Bengali](https://github.com/Acesif/typescript-book)\n* [Ukrainian](https://github.com/ArtfulBits/typescript-book)\n\n## Other Options\nYou can also download one of the Epub, Mobi, or PDF formats from the [actions tab](https://github.com/basarat/typescript-book/actions) by clicking on the latest build run. You will find the files in the artifacts section.\n\n## Special Thanks\nAll the amazing [contributors](https://github.com/basarat/typescript-book/graphs/contributors) 🌹\n\n## Share\nShare URL: https://basarat.gitbook.io/typescript/\n"
        },
        {
          "name": "SUMMARY.md",
          "type": "blob",
          "size": 5.6259765625,
          "content": "# Summary\n\n* [Getting Started](docs/getting-started.md)\n  * [Why TypeScript](docs/why-typescript.md)\n* [JavaScript](docs/javascript/recap.md)\n  * [Equality](docs/javascript/equality.md)\n  * [References](docs/javascript/references.md)\n  * [Null vs. Undefined](docs/javascript/null-undefined.md)\n  * [this](docs/javascript/this.md)\n  * [Closure](docs/javascript/closure.md)\n  * [Number](docs/javascript/number.md)\n  * [Truthy](docs/javascript/truthy.md)\n* [Future JavaScript Now](docs/future-javascript.md)\n  * [Classes](docs/classes.md)\n    * [Classes Emit](docs/classes-emit.md)\n  * [Arrow Functions](docs/arrow-functions.md)\n  * [Rest Parameters](docs/rest-parameters.md)\n  * [let](docs/let.md)\n  * [const](docs/const.md)\n  * [Destructuring](docs/destructuring.md)\n  * [Spread Operator](docs/spread-operator.md)\n  * [for...of](docs/for...of.md)\n  * [Iterators](docs/iterators.md)\n  * [Template Strings](docs/template-strings.md)\n  * [Promise](docs/promise.md)\n  * [Generators](docs/generators.md)\n  * [Async Await](docs/async-await.md)\n* [Project](docs/project/project.md)\n  * [Compilation Context](docs/project/compilation-context.md)\n    * [tsconfig.json](docs/project/tsconfig.md)\n    * [Which Files?](docs/project/files.md)\n  * [Declaration Spaces](docs/project/declarationspaces.md)\n  * [Modules](docs/project/modules.md)\n    * [File Module Details](docs/project/external-modules.md)\n    * [global.d.ts](docs/project/globals.md)\n  * [Namespaces](docs/project/namespaces.md)\n  * [Dynamic Import Expressions](docs/project/dynamic-import-expressions.md)\n* [Node.js QuickStart](docs/quick/nodejs.md)\n* [Browser QuickStart](docs/quick/browser.md)\n* [Library QuickStart](docs/quick/library.md)\n* [TypeScript's Type System](docs/types/type-system.md)\n  * [JS Migration Guide](docs/types/migrating.md)\n  * [@types](docs/types/@types.md)\n  * [Ambient Declarations](docs/types/ambient/intro.md)\n    * [Declaration Files](docs/types/ambient/d.ts.md)\n    * [Variables](docs/types/ambient/variables.md)\n  * [Interfaces](docs/types/interfaces.md)\n  * [Enums](docs/enums.md)\n  * [`lib.d.ts`](docs/types/lib.d.ts.md)\n  * [Functions](docs/types/functions.md)\n  * [Callable](docs/types/callable.md)\n  * [Type Assertion](docs/types/type-assertion.md)\n  * [Freshness](docs/types/freshness.md)\n  * [Type Guard](docs/types/typeGuard.md)\n  * [Literal Types](docs/types/literal-types.md)\n  * [Readonly](docs/types/readonly.md)\n  * [Generics](docs/types/generics.md)\n  * [Type Inference](docs/types/type-inference.md)\n  * [Type Compatibility](docs/types/type-compatibility.md)\n  * [Never Type](docs/types/never.md)\n  * [Discriminated Unions](docs/types/discriminated-unions.md)\n  * [Index Signatures](docs/types/index-signatures.md)\n  * [Moving Types](docs/types/moving-types.md)\n  * [Exception Handling](docs/types/exceptions.md)\n  * [Mixins](docs/types/mixins.md)\n* [JSX](docs/jsx/tsx.md)\n  * [React](docs/jsx/react.md)\n  * [Non React JSX](docs/jsx/others.md)\n* [Options](docs/options/intro.md)\n  * [noImplicitAny](docs/options/noImplicitAny.md)\n  * [strictNullChecks](docs/options/strictNullChecks.md)\n* [Errors in TypeScript](docs/errors/main.md)\n  * [Interpreting Errors](docs/errors/interpreting-errors.md)\n  * [Common Errors](docs/errors/common-errors.md)\n* [NPM](docs/npm/index.md)\n* [Testing](docs/testing/intro.md)\n  * [Jest](docs/testing/jest.md)\n  * [Cypress](docs/testing/cypress.md)\n* [Tools](docs/tools/intro.md)\n  * [Prettier](docs/tools/prettier.md)\n  * [Husky](docs/tools/husky.md)\n  * [ESLint](docs/tools/eslint.md)\n  * [Changelog](docs/tools/changelog.md)\n* [TIPs](docs/tips/main.md)\n  * [String Based Enums](docs/tips/stringEnums.md)\n  * [Nominal Typing](docs/tips/nominalTyping.md)\n  * [Stateful Functions](docs/tips/statefulFunctions.md)\n  * [Currying](docs/tips/currying.md)\n  * [Type Instantiation](docs/tips/typeInstantiation.md)\n  * [Lazy Object Literal Initialization](docs/tips/lazyObjectLiteralInitialization.md)\n  * [Classes are Useful](docs/tips/classesAreUseful.md)\n  * [Avoid Export Default](docs/tips/defaultIsBad.md)\n  * [Limit Property Setters](docs/tips/propertySetters.md)\n  * [`outFile` caution](docs/tips/outFile.md)\n  * [JQuery tips](docs/tips/jquery.md)\n  * [static constructors](docs/tips/staticConstructor.md)\n  * [singleton pattern](docs/tips/singleton.md)\n  * [Function parameters](docs/tips/functionParameters.md)\n  * [Build Toggles](docs/tips/build-toggles.md)\n  * [Barrel](docs/tips/barrel.md)\n  * [Create Arrays](docs/tips/create-arrays.md)\n  * [Typesafe Event Emitter](docs/tips/typed-event.md)\n* [StyleGuide](docs/styleguide/styleguide.md)\n* [TypeScript Compiler Internals](docs/compiler/overview.md)\n  * [Program](docs/compiler/program.md)\n  * [AST](docs/compiler/ast.md)\n    * [TIP: Visit Children](docs/compiler/ast-tip-children.md)\n    * [TIP: SyntaxKind enum](docs/compiler/ast-tip-syntaxkind.md)\n    * [Trivia](docs/compiler/ast-trivia.md)\n  * [Scanner](docs/compiler/scanner.md)\n  * [Parser](docs/compiler/parser.md)\n    * [Parser Functions](docs/compiler/parser-functions.md)\n  * [Binder](docs/compiler/binder.md)\n    * [Binder Functions](docs/compiler/binder-functions.md)\n    * [Binder Declarations](docs/compiler/binder-declarations.md)\n    * [Binder Container](docs/compiler/binder-container.md)\n    * [Binder SymbolTable](docs/compiler/binder-symboltable.md)\n    * [Binder Error Reporting](docs/compiler/binder-diagnostics.md)\n  * [Checker](docs/compiler/checker.md)\n    * [Checker Diagnostics](docs/compiler/checker-global.md)\n    * [Checker Error Reporting](docs/compiler/checker-diagnostics.md)\n  * [Emitter](docs/compiler/emitter.md)\n    * [Emitter Functions](docs/compiler/emitter-functions.md)\n    * [Emitter SourceMaps](docs/compiler/emitter-sourcemaps.md)\n  * [Contributing](docs/compiler/contributing.md)\n"
        },
        {
          "name": "book.json",
          "type": "blob",
          "size": 0.671875,
          "content": "{\n  \"language\": \"en\",\n  \"author\": \"Basarat Ali Syed\",\n  \"title\": \"TypeScript Deep Dive\",\n  \"plugins\": [\"edit-link\", \"github\", \"adsense\",\"header\"],\n  \"pluginsConfig\": {\n    \"layout\": {\n      \"headerPath\" : \"header.html\"\n    },\n    \"lunr\": {\n      \"ignoreSpecialCharacters\": true\n    },\n    \"edit-link\": {\n      \"base\": \"https://github.com/basarat/typescript-book/tree/master\",\n      \"label\": \"Edit This Page\"\n    },\n    \"github\": {\n      \"url\": \"https://github.com/basarat/typescript-book/\"\n    },\n    \"adsense\": {\n      \"client\": \"ca-pub-4656761253552116\",\n      \"slot\": \"2017468453\",\n      \"format\": \"auto\",\n      \"element\": \".page-inner section\",\n      \"position\": \"bottom\"\n    }\n  }\n}\n"
        },
        {
          "name": "code",
          "type": "tree",
          "content": null
        },
        {
          "name": "cover.jpg",
          "type": "blob",
          "size": 1682.1669921875,
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "footer.md",
          "type": "blob",
          "size": 0.09375,
          "content": "[![fork me](/images/github.png) Fork me on github](https://github.com/basarat/typescript-book/)\n"
        },
        {
          "name": "header.html",
          "type": "blob",
          "size": 0.689453125,
          "content": "<script>\n  function __addSupport() {\n    var el = document.querySelector('.search-noresults');\n      var content = '<a href=\"https://paypal.me/basaratali\" style=\"display: block;text-align: center;\"> Buy me a beer / coffee 🍻 ☕️ 🌹 <br><br><img src=\"https://img.shields.io/badge/Donate-PayPal-green.svg\" alt=\"donate\"><br><br></a>';\n      if(el) {\n        if (el.innerHTML.indexOf(content) === -1){\n          var elChild = document.createElement('div');\n          elChild.innerHTML = content;\n          el.insertBefore(elChild, el.firstChild);\n        }\n        clearInterval(interval);\n     }\n  }\n  __addSupport();\n  var interval = setInterval(function(){\n     __addSupport(); \n  },1000);\n</script>\n"
        },
        {
          "name": "images",
          "type": "tree",
          "content": null
        },
        {
          "name": "snippets",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}