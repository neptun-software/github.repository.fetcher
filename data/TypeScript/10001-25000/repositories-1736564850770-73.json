{
  "metadata": {
    "timestamp": 1736564850770,
    "page": 73,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "wandb/openui",
      "stars": 19658,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".env",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0283203125,
          "content": "backend/openui/dist/* binary\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0322265625,
          "content": ".DS_Store\nnohup.out\n.cache/\n.env\n"
        },
        {
          "name": ".gitpod.yml",
          "type": "blob",
          "size": 0.900390625,
          "content": "# Image of workspace. Learn more: https://www.gitpod.io/docs/configure/workspaces/workspace-image\nimage: gitpod/workspace-full:latest\n\n# List the start up tasks. Learn more: https://www.gitpod.io/docs/configure/workspaces/tasks\ntasks:\n  - name: Run Open UI\n    init: |\n      mkdir $GITPOD_REPO_ROOT/../venv\n      cd $GITPOD_REPO_ROOT/../venv\n      python -m venv openui\n      source openui/bin/activate\n      cd $GITPOD_REPO_ROOT/backend\n      pip install .\n      gp sync-done init-done\n    command: |\n      source $GITPOD_REPO_ROOT/../venv/openui/bin/activate\n      cd $GITPOD_REPO_ROOT/backend\n      python -m openui\n\n# List the ports to expose. Learn more: https://www.gitpod.io/docs/configure/workspaces/ports\nports:\n  - name: Open UI\n    description: Port 7878 for Open UI\n    port: 7878\n    onOpen: notify\n\n# Learn more from ready-to-use templates: https://www.gitpod.io/docs/introduction/getting-started/quickstart\n"
        },
        {
          "name": ".python-version",
          "type": "blob",
          "size": 0.0068359375,
          "content": "openui\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [2024] [Weights and Biases, Inc.]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.166015625,
          "content": "# OpenUI\n\n<p align=\"center\">\n  <img src=\"./assets/openui.png\" width=\"150\" alt=\"OpenUI\" />\n</p>\n\nBuilding UI components can be a slog.  OpenUI aims to make the process fun, fast, and flexible.  It's also a tool we're using at [W&B](https://wandb.com) to test and prototype our next generation tooling for building powerful applications on top of LLM's.\n\n## Overview\n\n![Demo](./assets/demo.gif)\n\nOpenUI let's you describe UI using your imagination, then see it rendered live.  You can ask for changes and convert HTML to React, Svelte, Web Components, etc.  It's like [v0](https://v0.dev) but open source and not as polished :stuck_out_tongue_closed_eyes:.\n\n## Live Demo\n\n[Try the demo](https://openui.fly.dev)\n\n## Running Locally\n\nOpenUI supports [OpenAI](https://platform.openai.com/api-keys), [Groq](https://console.groq.com/keys), and any model [LiteLLM](https://docs.litellm.ai/docs/) supports such as [Gemini](https://aistudio.google.com/app/apikey) or [Anthropic (Claude)](https://console.anthropic.com/settings/keys).  The following environment variables are optional, but need to be set in your environment for alternative models to work:\n\n- **OpenAI** `OPENAI_API_KEY`\n- **Groq** `GROQ_API_KEY`\n- **Gemini** `GEMINI_API_KEY`\n- **Anthropic** `ANTHROPIC_API_KEY`\n- **Cohere** `COHERE_API_KEY`\n- **Mistral** `MISTRAL_API_KEY`\n- **OpenAI Compatible** `OPENAI_COMPATIBLE_ENDPOINT` and `OPENAI_COMPATIBLE_API_KEY`\n\nFor example, if you're running a tool like [localai](https://localai.io/) you can set `OPENAI_COMPATIBLE_ENDPOINT` and optionally `OPENAI_COMPATIBLE_API_KEY` to have the models available listed in the UI's model selector under LiteLLM.\n\n### Ollama\n\nYou can also use models available to [Ollama](https://ollama.com).  [Install Ollama](https://ollama.com/download) and pull a model like [Llava](https://ollama.com/library/llava).  If Ollama is not running on http://127.0.0.1:11434, you can set the `OLLAMA_HOST` environment variable to the host and port of your Ollama instance.  For example when running in docker you'll need to point to http://host.docker.internal:11434 as shown below.\n\n### Docker (preferred)\n\nThe following command would forward the specified API keys from your shell environment and tell Docker to use the Ollama instance running on your machine.\n\n```bash\nexport ANTHROPIC_API_KEY=xxx\nexport OPENAI_API_KEY=xxx\ndocker run --rm --name openui -p 7878:7878 -e OPENAI_API_KEY -e ANTHROPIC_API_KEY -e OLLAMA_HOST=http://host.docker.internal:11434 ghcr.io/wandb/openui\n```\n\nNow you can goto [http://localhost:7878](http://localhost:7878) and generate new UI's!\n\n### From Source / Python\n\nAssuming you have git and [uv](https://github.com/astral-sh/uv) installed:\n\n```bash\ngit clone https://github.com/wandb/openui\ncd openui/backend\nuv sync --frozen --extra litellm\nsource .venv/bin/activate\n# Set API keys for any LLM's you want to use\nexport OPENAI_API_KEY=xxx\npython -m openui\n```\n\n## LiteLLM\n\n[LiteLLM](https://docs.litellm.ai/docs/) can be used to connect to basically any LLM service available.  We generate a config automatically based on your environment variables.  You can create your own [proxy config](https://litellm.vercel.app/docs/proxy/configs) to override this behavior.  We look for a custom config in the following locations:\n\n1. `litellm-config.yaml` in the current directory\n2. `/app/litellm-config.yaml` when running in a docker container\n3. An arbitrary path specified by the `OPENUI_LITELLM_CONFIG` environment variable\n\nFor example to use a custom config in docker you can run:\n\n```bash\ndocker run -n openui -p 7878:7878 -v $(pwd)/litellm-config.yaml:/app/litellm-config.yaml ghcr.io/wandb/openui\n```\n\nTo use litellm from source you can run:\n\n```bash\npip install .[litellm]\nexport ANTHROPIC_API_KEY=xxx\nexport OPENAI_COMPATIBLE_ENDPOINT=http://localhost:8080/v1\npython -m openui --litellm\n```\n\n## Groq\n\nTo use the super fast [Groq](https://groq.com) models, set `GROQ_API_KEY` to your Groq api key which you can [find here](https://console.groq.com/keys).  To use one of the Groq models, click the settings icon in the nav bar.\n\n### Docker Compose\n\n> **DISCLAIMER:** This is likely going to be very slow.  If you have a GPU you may need to change the tag of the `ollama` container to one that supports it.  If you're running on a Mac, follow the instructions above and run Ollama natively to take advantage of the M1/M2.\n\nFrom the root directory you can run:\n\n```bash\ndocker-compose up -d\ndocker exec -it openui-ollama-1 ollama pull llava\n```\n\nIf you have your OPENAI_API_KEY set in the environment already, just remove `=xxx` from the `OPENAI_API_KEY` line. You can also replace `llava` in the command above with your open source model of choice *([llava](https://ollama.com/library/llava) is one of the only Ollama models that support images currently)*.  You should now be able to access OpenUI at [http://localhost:7878](http://localhost:7878).\n\n*If you make changes to the frontend or backend, you'll need to run `docker-compose build` to have them reflected in the service.*\n\n## Development\n\nA [dev container](https://github.com/wandb/openui/blob/main/.devcontainer/devcontainer.json) is configured in this repository which is the quickest way to get started.\n\n### Codespace\n\n<img src=\"./assets/codespace.png\" alt=\"New with options...\" width=\"500\" />\n\nChoose more options when creating a Codespace, then select **New with options...**.  Select the US West region if you want a really fast boot time.  You'll also want to configure your OPENAI_API_KEY secret or just set it to `xxx` if you want to try Ollama *(you'll want at least 16GB of Ram)*.\n\nOnce inside the code space you can run the server in one terminal: `python -m openui --dev`.  Then in a new terminal:\n\n```bash\ncd /workspaces/openui/frontend\nnpm run dev\n```\n\nThis should open another service on port 5173, that's the service you'll want to visit.  All changes to both the frontend and backend will automatically be reloaded and reflected in your browser.\n\n### Ollama\n\nThe codespace installs ollama automaticaly and downloads the `llava` model.  You can verify Ollama is running with `ollama list` if that fails, open a new terminal and run `ollama serve`.  In Codespaces we pull llava on boot so you should see it in the list.  You can select Ollama models from the settings gear icon in the upper left corner of the application.  Any models you pull i.e. `ollama pull llama` will show up in the settings modal.\n\n<img src=\"./assets/ollama.png\" width=\"500\" alt=\"Select Ollama models\" />\n\n### Gitpod\n\nYou can easily use Open UI via Gitpod, preconfigured with Open AI.\n\n[![Open in Gitpod](https://gitpod.io/button/open-in-gitpod.svg)](https://gitpod.io/#https://github.com/wandb/openui)\n\nOn launch Open UI is automatically installed and launched.\n\nBefore you can use Gitpod:\n\n* Make sure you have a Gitpod account.\n* To use Open AI models set up the `OPENAI_API_KEY` environment variable in your Gitpod [User Account](https://gitpod.io/user/variables). Set the scope to `wandb/openui` (or your repo if you forked it).\n\n> NOTE: Other (local) models might also be used with a bigger Gitpod instance type. Required models are not preconfigured in Gitpod but can easily be added as documented above.\n\n### Resources\n\nSee the readmes in the [frontend](./frontend/README.md) and [backend](./backend/README.md) directories.\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "backend",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.yaml",
          "type": "blob",
          "size": 0.51171875,
          "content": "services:\n  ollama:\n    container_name: ollama\n    image: ollama/ollama:latest\n    ports:\n      - \"11434:11434\"\n    volumes:\n      - ${OLLAMA_VOLUME_PATH:-ollama}:/root/.ollama\n\n  openui:\n    container_name: openui\n    image: ghcr.io/wandb/openui:latest\n    build:\n      context: ./backend\n      dockerfile: Dockerfile\n    ports:\n      - \"7878:7878\"\n    environment:\n      - OLLAMA_HOST=http://ollama:11434\n      - OPENAI_API_KEY\n      - ANTHROPIC_API_KEY\n      - GROQ_API_KEY\n    env_file:\n      - .env\n\nvolumes:\n  ollama:\n"
        },
        {
          "name": "docs",
          "type": "blob",
          "size": 0.025390625,
          "content": "frontend/public/annotator/"
        },
        {
          "name": "frontend",
          "type": "tree",
          "content": null
        },
        {
          "name": "openui.code-workspace",
          "type": "blob",
          "size": 0.4072265625,
          "content": "{\n  \"folders\": [\n    {\n      \"path\": \"backend\"\n    },\n    {\n      \"path\": \"frontend\"\n    },\n    {\n      \"path\": \".\"\n    }\n  ],\n  \"settings\": {\n    \"editor.formatOnSave\": true\n  },\n  \"extensions\": {\n    \"recommendations\": [\n      \"bradlc.vscode-tailwindcss\",\n      \"dbaeumer.vscode-eslint\",\n      \"esbenp.prettier-vscode\",\n      \"stylelint.vscode-stylelint\",\n      \"visualstudioexptteam.vscodeintellicode\"\n    ]\n  }\n}\n"
        }
      ]
    }
  ]
}