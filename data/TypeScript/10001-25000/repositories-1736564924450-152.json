{
  "metadata": {
    "timestamp": 1736564924450,
    "page": 152,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "CopilotKit/CopilotKit",
      "stars": 15148,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.1474609375,
          "content": ".github\n.husky\n.turbo\ncommunity\nassets\n.vscode\nDockerfile\n**/.venv\n**/.env\n**/.vscode\ninfra\ndocs\n**/.turbo\n**/.husky\n\n**/node_modules\n**/.langgraph_api"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.279296875,
          "content": "# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.\n\n# misc\n.DS_Store\n*.pem\n__snapshots__\n@generated\nnode_modules\n.idea/\ncdk_outputs.json\n.turbo\ntest-run-comment.md\n\n*.egg-info/\n.installed.cfg\n*.egg\n**/.langgraph_api\n\n*.sqlite\n*.sqlite-shm\n*.sqlite-wal"
        },
        {
          "name": ".husky",
          "type": "tree",
          "content": null
        },
        {
          "name": ".kodiak.toml",
          "type": "blob",
          "size": 0.37109375,
          "content": "# .kodiak.toml\nversion = 1\n\n[merge]\nautomerge_label = \"automerge\"\nrequire_automerge_label = false\nmethod = \"squash\"\ndelete_branch_on_merge = true\noptimistic_updates = true\nprioritize_ready_to_merge = true\nnotify_on_conflict = false\n\n[merge.message]\ntitle = \"pull_request_title\"\nbody = \"pull_request_body\"\ninclude_pr_number = true\nbody_type = \"markdown\"\nstrip_html_comments = true\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 6.1787109375,
          "content": "# Code of Conduct for CopilotKit\n\n## Table of Contents\n\n1. [Statement of Purpose](#statement-of-purpose)\n2. [Community Values](#community-values)\n3. [Expected Behavior](#expected-behavior)\n4. [Unacceptable Behavior](#unacceptable-behavior)\n5. [Procedures for Reporting and Resolving Issues](#procedures-for-reporting-and-resolving-issues)\n6. [Consequences of Unacceptable Behavior](#consequences-of-unacceptable-behavior)\n7. [Scope](#scope)\n8. [Acknowledgments](#acknowledgments)\n9. [Get Involved](#get-involved)\n\n---\n\n## 1. Statement of Purpose\n\nCopilotKit is dedicated to creating an open-source framework that allows for the seamless integration of powerful AI copilots into various applications. Our Code of Conduct aims to foster a collaborative, respectful, and innovative community that empowers contributors and users alike. By adhering to this code, we can ensure that our community thrives and remains a welcoming space for everyone.\n\n---\n\n## 2. Community Values\n\nAt CopilotKit, we prioritize the following values:\n\n| **Value**       | **Description**                                                                 |\n|------------------|---------------------------------------------------------------------------------|\n| **Inclusivity**   | We embrace diverse backgrounds and perspectives, enhancing our collective work.|\n| **Collaboration** | We believe in teamwork and encourage open communication and mutual support.    |\n| **Respect**       | We treat everyone with kindness and respect, fostering an environment where contributions are valued. |\n| **Innovation**    | We encourage creative thinking and experimentation, supporting initiatives that drive our project forward. |\n\n---\n\n## 3. Expected Behavior\n\nAs a participant in the CopilotKit community, you are expected to:\n\n- **Be Respectful and Inclusive**: Treat all individuals with respect and kindness, regardless of their background, identity, or experience level.\n- **Communicate Constructively**: Engage in discussions that are constructive, focusing on ideas and solutions rather than personal opinions.\n- **Welcome Collaboration**: Actively seek out diverse viewpoints and be open to feedback that can improve our projects.\n- **Support Others**: Offer help to fellow contributors, especially newcomers, and encourage a culture of mentorship.\n- **Practice Empathy**: Consider the feelings and experiences of others, striving to create an understanding environment.\n\n---\n\n## 4. Unacceptable Behavior\n\nThe following behaviors are considered unacceptable within our community:\n\n| **Behavior Type**        | **Description**                                                 |\n|--------------------------|-----------------------------------------------------------------|\n| **Harassment**           | Any form of harassment, including offensive comments, intimidation, or unwanted attention. |\n| **Discrimination**       | Actions or comments that discriminate based on race, ethnicity, gender, sexual orientation, disability, age, or any other characteristic. |\n| **Personal Attacks**     | Engaging in personal insults or derogatory remarks directed at individuals or groups. |\n| **Disruption**           | Disrupting discussions, meetings, or community spaces, hindering constructive dialogue. |\n| **Invasive Actions**     | Unwanted physical contact or any other form of unwanted attention. |\n\n---\n\n## 5. Procedures for Reporting and Resolving Issues\n\nIf you witness or experience unacceptable behavior, we encourage you to take the following steps:\n\n1. **Identify the Incident**: Clearly identify the nature of the unacceptable behavior and gather any evidence, such as screenshots or messages.\n  \n2. **Report the Incident**: Reach out to a project maintainer or designated community leader through direct message or email. Include detailed information about the incident, such as:\n   - Names of those involved (if known)\n   - Dates and times of the incident\n   - Context surrounding the behavior\n   - Any relevant evidence\n\n3. **Documentation**: Keep a record of your report and any responses received to ensure a transparent resolution process.\n\n4. **Confidentiality**: All reports will be treated confidentially. Personal information will only be shared with those involved in the resolution process.\n\n5. **Follow-Up**: You can request updates on the status of your report and any actions taken.\n\n---\n\n## 6. Consequences of Unacceptable Behavior\n\nConsequences for violating the Code of Conduct will be determined based on the severity and frequency of the behavior. Potential consequences include:\n\n| **Consequences**         | **Description**                                               |\n|--------------------------|---------------------------------------------------------------|\n| **Verbal Warning**       | A private discussion addressing the behavior.                |\n| **Written Warning**      | A formal notice outlining the behavior and expected changes. |\n| **Temporary Suspension**  | A temporary ban from contributing to the project or participating in community discussions. |\n| **Permanent Removal**    | A permanent ban for severe violations or repeated offenses.   |\n\n---\n\n## 7. Scope\n\nThis Code of Conduct applies to all participants in the CopilotKit community, including contributors, maintainers, and users, both online and offline. It encompasses interactions in the following areas:\n\n- GitHub discussions and issues\n- Community meetings and events\n- Social media platforms\n- Any other official channels related to CopilotKit\n\n---\n\n## 8. Acknowledgments\n\nThis Code of Conduct draws inspiration from various open-source communities dedicated to inclusivity and respect. We appreciate their efforts in creating positive environments and strive to uphold similar standards in our community. Your feedback is always welcome to improve our Code of Conduct and practices.\n\n---\n\n## 9. Get Involved\n\nWe invite you to contribute to CopilotKit! Whether through code, documentation, or community engagement, your participation is invaluable. For more information on how to contribute, please check our [contribution guide](https://docs.copilotkit.ai/code-contributions/how-to-contribute?ref=github_readme).\n\nThank you for being part of the CopilotKit community! Together, we can build a safe, respectful, and innovative space for all.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 6.0556640625,
          "content": "# Contributing to CopilotKit\n\n⭐ Thank you for your interest in contributing!!\n\nHere’s how you can contribute to this repository\n\n## How can I contribute?\n\nReady to contribute but seeking guidance, we have several avenues to assist you. Explore the upcoming segment for clarity on the kind of contributions we appreciate and how to jump in. Reach out to us directly on [Discord](https://discord.gg/6dffbvGU3D) for immediate assistance! Alternatively, you're welcome to raise an issue and one of our dedicated maintainers will promptly steer you in the right direction!\n\n## Found a bug?\n\nIf you find a bug in the source code, you can help us by [submitting an issue](https://github.com/CopilotKit/CopilotKit/issues/new?assignees=&labels=bug&projects=&template=bug_report.yaml) to our GitHub Repository. Even better, you can submit a Pull Request with a fix.\n\n## Missing a feature?\n\nSo, you've got an awesome feature in mind? Throw it over to us by [creating an issue](https://github.com/CopilotKit/CopilotKit/issues/new?assignees=&labels=feature-request&projects=&template=feature_request.yaml) on our GitHub Repo.\n\nIf you don't feel ready to make a code contribution yet, no problem! You can also check out the [documentation issues](https://github.com/CopilotKit/CopilotKit/issues?q=is%3Aopen+is%3Aissue+label%3Adocumentation).\n\n# How do I make a code contribution?\n\n## Good first issues\n\nAre you new to open source contribution? Wondering how contributions work in our project? Here's a quick rundown.\n\nFind an issue that you're interested in addressing, or a feature that you'd like to add.\nYou can use [this view](https://github.com/CopilotKit/CopilotKit/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22) which helps new contributors find easy gateways into our project.\n\n## Step 1: Make a fork\n\nFork the CopilotKit repository to your GitHub organization. This means that you'll have a copy of the repository under _your-GitHub-username/repository-name_.\n\n![Group 3](https://github.com/user-attachments/assets/7c2b8d15-87cf-4cc7-be86-5fadaebfad0b)\n\n## Step 2: Clone the repository to your local machine\n\n```\ngit clone https://github.com/<your-GitHub-username>/CopilotKit\n\n```\n\n![Group 4](https://github.com/user-attachments/assets/e3e78b2b-eead-463b-858b-8d40e4cb18e9)\n\n## Step 3: Prepare the development environment\n\n### 1)Install Prerequisites\n- Node.js 20.x or later\n- pnpm v9.x installed globally (npm i -g pnpm@^9)\n- Turborepo v2.x installed globally (npm i -g turbo@2)\n\n### 2)Install Dependencies\nTo install the dependencies using pnpm\nGo inside project folder and run :\n\n```jsx\npnpm install\n```\n### 3)Build Packages\nTo make sure everything works, let’s build all packages once:\n\n```jsx\nturbo run build\n```\n\n## Step 4: Create a branch\n\nCreate a new branch for your changes.\nIn order to keep branch names uniform and easy-to-understand, please use the following conventions for branch naming.\nGenerally speaking, it is a good idea to add a group/type prefix to a branch.\nHere is a list of good examples:\n\n- for docs change : docs/<ISSUE_NUMBER>-<CUSTOM_NAME>\n- for new features : feat/<ISSUE_NUMBER>-<CUSTOM_NAME>\n- for bug fixes : fix/<ISSUE_NUMBER>-<CUSTOM_NAME>\n\n```jsx\ngit checkout -b <new-branch-name-here>\n```\n\n## Step 5: Make your changes\n\nNow that everything is set up and works as expected, you can get start developing or update the code with your bug fix or new feature.\n\n```jsx\n# To start all packages in development mode\nturbo run dev\n \n# Start a specific package in development mode\nturbo run dev --filter=\"@copilotkit/package-name\"\n```\n\n## Step 6: Add the changes that are ready to be committed\n\nStage the changes that are ready to be committed:\n\n```jsx\ngit add .\n```\n\n## Step 7: Commit the changes (Git)\n\nCommit the changes with a short message. (See below for more details on how we structure our commit messages)\n\n```jsx\ngit commit -m \"<type>(<package>): <subject>\"\n```\n\n## Step 8: Push the changes to the remote repository\n\nPush the changes to the remote repository using:\n\n```jsx\ngit push origin <branch-name-here>\n```\n\n## Step 9: Create Pull Request\n\nIn GitHub, do the following to submit a pull request to the upstream repository:\n\n1.  Give the pull request a title and a short description of the changes made. Include also the issue or bug number associated with your change. Explain the changes that you made, any issues you think exist with the pull request you made, and any questions you have for the maintainer.\n\nRemember, it's okay if your pull request is not perfect (no pull request ever is). The reviewer will be able to help you fix any problems and improve it!\n\n2.  Wait for the pull request to be reviewed by a maintainer.\n\n3.  Make changes to the pull request if the reviewing maintainer recommends them.\n\nCelebrate your success after your pull request is merged :-)\n\n## Git Commit Messages\n\nWe structure our commit messages like this:\n\n```\n<type>(<package>): <subject>\n```\n\nExample\n\n```\nfix(server): missing entity on init\n```\n\n### Types:\n\n- **feat**: A new feature\n- **fix**: A bug fix\n- **docs**: Changes to the documentation\n- **style**: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc.)\n- **refactor**: A code change that neither fixes a bug nor adds a feature\n- **perf**: A code change that improves performance\n- **test**: Adding missing or correcting existing tests\n- **chore**: Changes to the build process or auxiliary tools and libraries such as documentation generation\n\n## Code of conduct\n\nPlease note that this project is released with a Contributor Code of Conduct. By participating in this project you agree to abide by its terms.\n\n[Code of Conduct](https://github.com/CopilotKit/CopilotKit/blob/main/CODE_OF_CONDUCT.md)\n\nOur Code of Conduct means that you are responsible for treating everyone on the project with respect and courtesy.\n\n## Need Help?\n\n- **Questions**: Use our [Discord support channel](https://discord.com/invite/6dffbvGU3D) for any questions you have.\n- **Resources**: Visit [CopilotKit documentation](https://docs.copilotkit.ai/what-is-copilotkit) for more helpful documentatation info.\n\n⭐ Happy coding, and we look forward to your contributions!\n"
        },
        {
          "name": "CopilotKit",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0419921875,
          "content": "The MIT License\n\nCopyright (c) Atai Barkai\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 8.34765625,
          "content": "<div align=\"center\">\n  <a href=\"https://copilotkit.ai\" target=\"_blank\">\n    <img src=\"./assets/banner.png\" alt=\"CopilotKit Logo\">\n  </a>\n\n  <br/>\n\n  <h3>\n    Build deeply-integrated AI assistants & agents<br/>\n    that work <em>alongside</em> your users inside your applications.\n  </h3>\n  \n</div>\n\n<!-- -->\n\n<br/>\n\n<div align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@copilotkit/react-core\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/%40copilotkit%2Freact-core?logo=npm&logoColor=%23FFFFFF&label=Version&color=%236963ff\" alt=\"NPM\">\n  </a>\n  <img src=\"https://img.shields.io/github/license/copilotkit/copilotkit?color=%236963ff&label=License\" alt=\"MIT\">\n  <a href=\"https://discord.gg/6dffbvGU3D\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/1122926057641742418?logo=discord&logoColor=%23FFFFFF&label=Discord&color=%236963ff\" alt=\"Discord\">\n  </a>\n</div>\n<br/>\n\n<div align=\"center\">\n  <a href=\"https://discord.gg/6dffbvGU3D?ref=github_readme\" target=\"_blank\">\n    <img src=\"./assets/btn_discord.png\" alt=\"CopilotKit Discord\" height=\"40px\">\n  </a>\n  <a href=\"https://docs.copilotkit.ai?ref=github_readme\" target=\"_blank\">\n    <img src=\"./assets/btn_docs.png\" alt=\"CopilotKit GitHub\" height=\"40px\">\n  </a>\n  <a href=\"https://cloud.copilotkit.ai?ref=github_readme\" target=\"_blank\">\n    <img src=\"./assets/btn_cloud.png\" alt=\"CopilotKit GitHub\" height=\"40px\">\n  </a>\n  \n</div>\n\n<br/>\n<div align=\"center\">\n  <a href=\"https://www.producthunt.com/posts/copilotkit\" target=\"_blank\">\n    <img src=\"https://api.producthunt.com/widgets/embed-image/v1/top-post-badge.svg?post_id=428778&theme=light&period=daily\">\n  </a>\n</div>\n<br />\n\n\n<img width=\"1685\" alt=\"214 (1)\" src=\"https://github.com/user-attachments/assets/145600ce-c49b-4e25-883e-feee149d6332\">\n\n\n# Demos (click to clone / run)\n\n<table>\n<tr>\n<td width=\"200\" valign=\"top\">\n  <img src=\"https://github.com/user-attachments/assets/9c6ebced-1439-49bb-811b-1f74fe749ab5\" width=\"200\"/>\n</td>\n<td>\n<details open>\n<summary>\n  <h2 style=\"display: inline-block; margin: 0;\">📊 Spreadsheets + Copilot</h2>\n</summary>\n\n![Spreadsheet Demo](https://github.com/user-attachments/assets/0935da06-668e-41b1-806e-19a1a1574be2)\n\n[View Demo Repository →](https://github.com/CopilotKit/demo-spreadsheet)\n</details>\n\nA powerful spreadsheet assistant that helps users analyze data, create formulas, and generate insights through natural language interaction.\n</td>\n</tr>\n\n<tr>\n<td width=\"200\" valign=\"top\">\n  <img src=\"https://github.com/user-attachments/assets/ecddcf4c-cfe3-45ba-848d-03f94902475f\" width=\"200\"/>\n</td>\n<td>\n<details>\n<summary>\n  <h2 style=\"display: inline-block; margin: 0;\">🏦 Banking Assistant (SaaS Copilot) </h2>\n</summary>\n\n<div align=\"center\">\n  <img src=\"https://github.com/user-attachments/assets/ecddcf4c-cfe3-45ba-848d-03f94902475f\" width=\"800\"/>\n</div>\n\n[View Demo Repository →](https://github.com/CopilotKit/demo-banking)\n</details>\n\nAn AI-powered banking interface that helps users manage transactions, analyze spending patterns, and get personalized financial advice.\n</td>\n</tr>\n\n<tr>\n<td width=\"200\" valign=\"top\">\n  <img src=\"https://github.com/user-attachments/assets/09dc873b-b263-40a3-8577-1414d0837510\" width=\"200\"/>\n</td>\n<td>\n<details>\n<summary>\n  <h2 style=\"display: inline-block; margin: 0;\">✈️ [Tutorial] Agent-Native Travel Planner (ANA) </h2>\n</summary>\n\n<div align=\"center\">\n  <img src=\"./assets/travel-planner-gif.gif\" width=\"800\"/>\n</div>\n\n[View Tutorial →](https://docs.copilotkit.ai/coagents/tutorials/ai-travel-app/overview)\n</details>\n\nInteractive travel planning assistant that helps users discover destinations, create itineraries, and manage trip details with natural language.\n</td>\n</tr>\n\n<tr>\n<td width=\"200\" valign=\"top\">\n  <img src=\"https://github.com/user-attachments/assets/0fb40d90-be21-416e-a8e5-9215ffee1f71\" width=\"200\"/>\n</td>\n<td>\n<details>\n<summary>\n  <h2 style=\"display: inline-block; margin: 0;\">🔍 [Tutorial] Agent-Native Research Canvas (ANA)</h2>\n</summary>\n\n<div align=\"center\">\n  <img src=\"https://github.com/user-attachments/assets/64bbfe6a-c0e9-4dfc-91f2-e17b190a0fc0\" width=\"800\"/>\n</div>\n\n\n[View Demo Repository →](https://github.com/CopilotKit/CopilotKit/blob/main/examples/coagents-research-canvas/readme.md)\n</details>\n\nAn intelligent research assistant that helps users analyze academic papers, synthesize information across multiple sources, and generate comprehensive research summaries through natural language interaction.\n</td>\n</tr>\n</table>\n\n# Getting Started\nGet started in minutes - check out the [quickstart documentation](https://docs.copilotkit.ai/quickstart).\n\n# Code Samples\n```ts\n// Headless UI with full control\nconst { visibleMessages, appendMessage, setMessages, ... } = useCopilotChat();\n\n// Pre-built components with deep customization options (CSS + pass custom sub-components)\n<CopilotPopup \n  instructions={\"You are assisting the user as best as you can. Answer in the best way possible given the data you have.\"} \n  labels={{ title: \"Popup Assistant\", initial: \"Need any help?\" }} \n/>\n\n// ---\n\n// Frontend RAG\nuseCopilotReadable({\n  description: \"The current user's colleagues\",\n  value: colleagues,\n});\n\n// knowledge-base integration\nuseCopilotKnowledgebase(myCustomKnowledgeBase)\n\n// ---\n\n// Frontend actions + generative UI, with full streaming support\nuseCopilotAction({\n  name: \"appendToSpreadsheet\",\n  description: \"Append rows to the current spreadsheet\",\n  parameters: [\n    { name: \"rows\", type: \"object[]\", attributes: [{ name: \"cells\", type: \"object[]\", attributes: [{ name: \"value\", type: \"string\" }] }] }\n  ],\n  render: ({ status, args }) => <Spreadsheet data={canonicalSpreadsheetData(args.rows)} />,\n  handler: ({ rows }) => setSpreadsheet({ ...spreadsheet, rows: [...spreadsheet.rows, ...canonicalSpreadsheetData(rows)] }),\n});\n\n// ---\n\n// structured autocomplete for anything\nconst { suggestions } = useCopilotStructuredAutocompletion(\n  {\n    instructions: `Autocomplete or modify spreadsheet rows based on the inferred user intent.`,\n    value: { rows: spreadsheet.rows.map((row) => ({ cells: row })) },\n    enabled: !!activeCell && !spreadsheetIsEmpty,\n  },\n  [activeCell, spreadsheet]\n);\n```\n\n# Code Samples (CoAgents: in-app LangGraph Agents)\n\n```ts\n// Share state between app and agent\nconst { agentState } = useCoAgent({ \n  name: \"basic_agent\", \n  initialState: { input: \"NYC\" } \n});\n\n// agentic generative UI\nuseCoAgentStateRender({\n  name: \"basic_agent\",\n  render: ({ state }) => <WeatherDisplay {...state.final_response} />,\n});\n\n// Human in the Loop (Approval)\nuseCopilotAction({\n    name: \"email_tool\",\n    parameters: [{ name: \"email_draft\", type: \"string\", description: \"The email content\", required: true }],\n    renderAndWaitForResponse: ({ args, status, respond }) => (\n      <EmailConfirmation\n        emailContent={args.email_draft || \"\"}\n        isExecuting={status === \"executing\"}\n        onCancel={() => respond?.({ approved: false })}\n        onSend={() => respond?.({ approved: true, metadata: { sentAt: new Date().toISOString() } })}\n      />\n    ),\n  });\n\n// ---\n\n// intermediate agent state streaming (supports both LangGraph.js + LangGraph python)\nconst modifiedConfig = copilotKitCustomizeConfig(config, {\n  emitIntermediateState: [{ \n    stateKey: \"outline\", \n    tool: \"set_outline\", \n    toolArgument: \"outline\" \n  }],\n});\nconst response = await ChatOpenAI({ model: \"gpt-4o\" }).invoke(messages, modifiedConfig);\n```\n\n\n## Contributing\n\nThanks for your interest in contributing to CopilotKit! 💜\n\nWe value all contributions, whether it's through code, documentation, creating demo apps, or just spreading the word.\n\nHere are a few useful resources to help you get started:\n\n- For code contributions, [CONTRIBUTING.md](./CONTRIBUTING.md).\n- For documentation-related contributions, [check out the documentation contributions guide](https://docs.copilotkit.ai/contributing/docs-contributions?ref=github_readme).\n\n- Want to contribute but not sure how? [Join our Discord](https://discord.gg/6dffbvGU3D) and we'll help you out!\n\n> 💡 **NOTE:** All contributions must be submitted via a pull request and be reviewed by our team. This ensures all contributions are of high quality and align with the project's goals.\n\n## Get in touch\n\nYou are invited to join our community on [Discord](https://discord.gg/6dffbvGU3D) and chat with our team and other community members.\n\n## License\n\nThis repository's source code is available under the [MIT License](https://github.com/CopilotKit/CopilotKit/blob/main/LICENSE).\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.9423828125,
          "content": "# Security Policy\n\nAt **Copilotkit**, we are continuously working to improve not only the product but also the open-source repository. To achieve this, we encourage you to take some time to responsibly disclose any issues you may encounter.\n\n## Reporting a Vulnerability\n\nWe hope this product meets your expectations. However, if you notice anything that seems off, please feel free to report the issue by following the steps below:\n\n1. **Contact Information**:\n    - Email: [security@copilotkit.ai](mailto:security@copilotkit.ai)\n\n2. **Required Information**:\n    - A detailed description of the vulnerability\n    - Steps to reproduce the issue\n    - Potential impact or risk\n    - Any possible mitigations or workarounds\n\n3. **Preferred Method of Disclosure**:\n    <br>\n    Since our community operates in a public domain, please **do not** discuss the details of the vulnerability publicly. When escalating the issue, simply mention that you are trying to reach someone from the security team.\n\n## Response Process\n\n- **Acknowledgment**: Within 48 hours of receiving your report, we will acknowledge your submission.\n- **Investigation**: We will investigate the issue within 5 business days.\n- **Resolution**: We aim to release a fix or mitigation within 30 days of confirming the vulnerability.\n\n### Note\n**If you do not receive an acknowledgment of your email within 48 hours, and you haven’t heard from our security team after 5 days, please directly message someone from the Copilotkit team in our [Discord community](https://discord.gg/6dffbvGU3D).**\n\n## Security Best Practices\n\nWhile we strive to keep our project secure, here are a few best practices for users of our software:\n- Always keep your installation up to date with the latest security patches.\n- Avoid using outdated or unsupported versions of the project.\n- Regularly audit your dependencies and review their security advisories.\n\n---\n\nThank you for helping us maintain the security and integrity of this project.\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "community",
          "type": "tree",
          "content": null
        },
        {
          "name": "dangerfile.js",
          "type": "blob",
          "size": 0.8271484375,
          "content": "import { danger, warn } from 'danger';\n\nconst file1 = 'sdk-python/copilotkit/langgraph_agent.py';\nconst file2 = 'CopilotKit/packages/runtime/src/lib/runtime/remote-lg-cloud-action.ts';\n\n// Get the list of modified files in the PR\nconst changedFiles = danger.git.modified_files;\nconst lgPyExecutorName = 'LangGraph python executor (langgraph_agent.py)'\nconst lgcExecutor = 'LangGraph Cloud executor (remote-lg-cloud-action.ts)'\n\n// Check if only one of the files is modified\nif (changedFiles.includes(file1) && !changedFiles.includes(file2)) {\n    warn(`⚠️ ${lgPyExecutorName} was modified, but ${lgcExecutor} was not updated. Please align both files.`);\n}\n\nif (changedFiles.includes(file2) && !changedFiles.includes(file1)) {\n    warn(`⚠️ ${lgcExecutor} was modified, but ${lgPyExecutorName} was not updated. Please align both files.`);\n}\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "infra",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.3154296875,
          "content": "{\n  \"name\": \"CopilotKit\",\n  \"version\": \"1.0.0\",\n  \"description\": \"\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\",\n    \"prepare\": \"husky\"\n  },\n  \"keywords\": [],\n  \"author\": \"\",\n  \"license\": \"ISC\",\n  \"devDependencies\": {\n    \"danger\": \"^12.3.3\",\n    \"husky\": \"^9.1.4\"\n  }\n}\n"
        },
        {
          "name": "pnpm-lock.yaml",
          "type": "blob",
          "size": 28.3798828125,
          "content": "lockfileVersion: '9.0'\n\nsettings:\n  autoInstallPeers: true\n  excludeLinksFromLockfile: false\n\nimporters:\n\n  .:\n    devDependencies:\n      danger:\n        specifier: ^12.3.3\n        version: 12.3.3\n      husky:\n        specifier: ^9.1.4\n        version: 9.1.4\n\npackages:\n\n  '@gitbeaker/core@38.12.1':\n    resolution: {integrity: sha512-8XMVcBIdVAAoxn7JtqmZ2Ee8f+AZLcCPmqEmPFOXY2jPS84y/DERISg/+sbhhb18iRy+ZsZhpWgQ/r3CkYNJOQ==}\n    engines: {node: '>=18.0.0'}\n\n  '@gitbeaker/requester-utils@38.12.1':\n    resolution: {integrity: sha512-Rc/DgngS0YPN+AY1s9UnexKSy4Lh0bkQVAq9p7PRbRpXb33SlTeCg8eg/8+A/mrMcHgYmP0XhH8lkizyA5tBUQ==}\n    engines: {node: '>=18.0.0'}\n\n  '@gitbeaker/rest@38.12.1':\n    resolution: {integrity: sha512-9KMSDtJ/sIov+5pcH+CAfiJXSiuYgN0KLKQFg0HHWR2DwcjGYkcbmhoZcWsaOWOqq4kihN1l7wX91UoRxxKKTQ==}\n    engines: {node: '>=18.0.0'}\n\n  '@octokit/auth-token@2.5.0':\n    resolution: {integrity: sha512-r5FVUJCOLl19AxiuZD2VRZ/ORjp/4IN98Of6YJoJOkY75CIBuYfmiNHGrDwXr+aLGG55igl9QrxX3hbiXlLb+g==}\n\n  '@octokit/core@3.6.0':\n    resolution: {integrity: sha512-7RKRKuA4xTjMhY+eG3jthb3hlZCsOwg3rztWh75Xc+ShDWOfDDATWbeZpAHBNRpm4Tv9WgBMOy1zEJYXG6NJ7Q==}\n\n  '@octokit/endpoint@6.0.12':\n    resolution: {integrity: sha512-lF3puPwkQWGfkMClXb4k/eUT/nZKQfxinRWJrdZaJO85Dqwo/G0yOC434Jr2ojwafWJMYqFGFa5ms4jJUgujdA==}\n\n  '@octokit/graphql@4.8.0':\n    resolution: {integrity: sha512-0gv+qLSBLKF0z8TKaSKTsS39scVKF9dbMxJpj3U0vC7wjNWFuIpL/z76Qe2fiuCbDRcJSavkXsVtMS6/dtQQsg==}\n\n  '@octokit/openapi-types@12.11.0':\n    resolution: {integrity: sha512-VsXyi8peyRq9PqIz/tpqiL2w3w80OgVMwBHltTml3LmVvXiphgeqmY9mvBw9Wu7e0QWk/fqD37ux8yP5uVekyQ==}\n\n  '@octokit/plugin-paginate-rest@2.21.3':\n    resolution: {integrity: sha512-aCZTEf0y2h3OLbrgKkrfFdjRL6eSOo8komneVQJnYecAxIej7Bafor2xhuDJOIFau4pk0i/P28/XgtbyPF0ZHw==}\n    peerDependencies:\n      '@octokit/core': '>=2'\n\n  '@octokit/plugin-request-log@1.0.4':\n    resolution: {integrity: sha512-mLUsMkgP7K/cnFEw07kWqXGF5LKrOkD+lhCrKvPHXWDywAwuDUeDwWBpc69XK3pNX0uKiVt8g5z96PJ6z9xCFA==}\n    peerDependencies:\n      '@octokit/core': '>=3'\n\n  '@octokit/plugin-rest-endpoint-methods@5.16.2':\n    resolution: {integrity: sha512-8QFz29Fg5jDuTPXVtey05BLm7OB+M8fnvE64RNegzX7U+5NUXcOcnpTIK0YfSHBg8gYd0oxIq3IZTe9SfPZiRw==}\n    peerDependencies:\n      '@octokit/core': '>=3'\n\n  '@octokit/request-error@2.1.0':\n    resolution: {integrity: sha512-1VIvgXxs9WHSjicsRwq8PlR2LR2x6DwsJAaFgzdi0JfJoGSO8mYI/cHJQ+9FbN21aa+DrgNLnwObmyeSC8Rmpg==}\n\n  '@octokit/request@5.6.3':\n    resolution: {integrity: sha512-bFJl0I1KVc9jYTe9tdGGpAMPy32dLBXXo1dS/YwSCTL/2nd9XeHsY616RE3HPXDVk+a+dBuzyz5YdlXwcDTr2A==}\n\n  '@octokit/rest@18.12.0':\n    resolution: {integrity: sha512-gDPiOHlyGavxr72y0guQEhLsemgVjwRePayJ+FcKc2SJqKUbxbkvf5kAZEWA/MKvsfYlQAMVzNJE3ezQcxMJ2Q==}\n\n  '@octokit/types@6.41.0':\n    resolution: {integrity: sha512-eJ2jbzjdijiL3B4PrSQaSjuF2sPEQPVCPzBvTHJD9Nz+9dw2SGH4K4xeQJ77YfTq5bRQ+bD8wT11JbeDPmxmGg==}\n\n  '@tootallnate/once@2.0.0':\n    resolution: {integrity: sha512-XCuKFP5PS55gnMVu3dty8KPatLqUoy/ZYzDzAGCQ8JNFCkLXzmI7vNHCR+XpbZaMWQK/vQubr7PkYq8g470J/A==}\n    engines: {node: '>= 10'}\n\n  agent-base@6.0.2:\n    resolution: {integrity: sha512-RZNwNclF7+MS/8bDg70amg32dyeZGZxiDuQmZxKLAlQjr3jGyLx+4Kkk58UO7D2QdgFIQCovuSuZESne6RG6XQ==}\n    engines: {node: '>= 6.0.0'}\n\n  ansi-styles@3.2.1:\n    resolution: {integrity: sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==}\n    engines: {node: '>=4'}\n\n  async-retry@1.2.3:\n    resolution: {integrity: sha512-tfDb02Th6CE6pJUF2gjW5ZVjsgwlucVXOEQMvEX9JgSJMs9gAX+Nz3xRuJBKuUYjTSYORqvDBORdAQ3LU59g7Q==}\n\n  before-after-hook@2.2.3:\n    resolution: {integrity: sha512-NzUnlZexiaH/46WDhANlyR2bXRopNg4F/zuSA3OpZnllCUgRaOF2znDioDWrmbNVsuZk6l9pMquQB38cfBZwkQ==}\n\n  braces@3.0.3:\n    resolution: {integrity: sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==}\n    engines: {node: '>=8'}\n\n  buffer-equal-constant-time@1.0.1:\n    resolution: {integrity: sha512-zRpUiDwd/xk6ADqPMATG8vc9VPrkck7T07OIx0gnjmJAnHnTVXNQG3vfvWNuiZIkwu9KrKdA1iJKfsfTVxE6NA==}\n\n  call-bind@1.0.7:\n    resolution: {integrity: sha512-GHTSNSYICQ7scH7sZ+M2rFopRoLh8t2bLSW6BbgrtLsahOIB5iyAVJf9GjWK3cYTDaMj4XdBpM1cA6pIS0Kv2w==}\n    engines: {node: '>= 0.4'}\n\n  chalk@2.4.2:\n    resolution: {integrity: sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==}\n    engines: {node: '>=4'}\n\n  color-convert@1.9.3:\n    resolution: {integrity: sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==}\n\n  color-name@1.1.3:\n    resolution: {integrity: sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==}\n\n  colors@1.4.0:\n    resolution: {integrity: sha512-a+UqTh4kgZg/SlGvfbzDHpgRu7AAQOmmqRHJnxhRZICKFUT91brVhNNt58CMWU9PsBbv3PDCZUHbVxuDiH2mtA==}\n    engines: {node: '>=0.1.90'}\n\n  commander@2.20.3:\n    resolution: {integrity: sha512-GpVkmM8vF2vQUkj2LvZmD35JxeJOLCwJ9cUkugyk2nuhbv3+mJvpLYYt+0+USMxE+oj+ey/lJEnhZw75x/OMcQ==}\n\n  core-js@3.39.0:\n    resolution: {integrity: sha512-raM0ew0/jJUqkJ0E6e8UDtl+y/7ktFivgWvqw8dNSQeNWoSDLvQ1H/RN3aPXB9tBd4/FhyR4RDPGhsNIMsAn7g==}\n\n  danger@12.3.3:\n    resolution: {integrity: sha512-nZKzpgXN21rr4dwa6bFhM7G2JEa79dZRJiT3RVRSyi4yk1/hgZ2f8HDGoa7tMladTmu8WjJFyE3LpBIihh+aDw==}\n    engines: {node: '>=18'}\n    hasBin: true\n\n  debug@4.3.7:\n    resolution: {integrity: sha512-Er2nc/H7RrMXZBFCEim6TCmMk02Z8vLC2Rbi1KEBggpo0fS6l0S1nnapwmIi3yW/+GOJap1Krg4w0Hg80oCqgQ==}\n    engines: {node: '>=6.0'}\n    peerDependencies:\n      supports-color: '*'\n    peerDependenciesMeta:\n      supports-color:\n        optional: true\n\n  define-data-property@1.1.4:\n    resolution: {integrity: sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==}\n    engines: {node: '>= 0.4'}\n\n  deprecation@2.3.1:\n    resolution: {integrity: sha512-xmHIy4F3scKVwMsQ4WnVaS8bHOx0DmVwRywosKhaILI0ywMDWPtBSku2HNxRvF7jtwDRsoEwYQSfbxj8b7RlJQ==}\n\n  ecdsa-sig-formatter@1.0.11:\n    resolution: {integrity: sha512-nagl3RYrbNv6kQkeJIpt6NJZy8twLB/2vtz6yN9Z4vRKHN4/QZJIEbqohALSgwKdnksuY3k5Addp5lg8sVoVcQ==}\n\n  es-define-property@1.0.0:\n    resolution: {integrity: sha512-jxayLKShrEqqzJ0eumQbVhTYQM27CfT1T35+gCgDFoL82JLsXqTJ76zv6A0YLOgEnLUMvLzsDsGIrl8NFpT2gQ==}\n    engines: {node: '>= 0.4'}\n\n  es-errors@1.3.0:\n    resolution: {integrity: sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==}\n    engines: {node: '>= 0.4'}\n\n  escape-string-regexp@1.0.5:\n    resolution: {integrity: sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==}\n    engines: {node: '>=0.8.0'}\n\n  expand-tilde@2.0.2:\n    resolution: {integrity: sha512-A5EmesHW6rfnZ9ysHQjPdJRni0SRar0tjtG5MNtm9n5TUvsYU8oozprtRD4AqHxcZWWlVuAmQo2nWKfN9oyjTw==}\n    engines: {node: '>=0.10.0'}\n\n  extend-shallow@2.0.1:\n    resolution: {integrity: sha512-zCnTtlxNoAiDc3gqY2aYAWFx7XWWiasuF2K8Me5WbN8otHKTUKBwjPtNpRs/rbUZm7KxWAaNj7P1a/p52GbVug==}\n    engines: {node: '>=0.10.0'}\n\n  fast-json-patch@3.1.1:\n    resolution: {integrity: sha512-vf6IHUX2SBcA+5/+4883dsIjpBTqmfBjmYiWK1savxQmFk4JfBMLa7ynTYOs1Rolp/T1betJxHiGD3g1Mn8lUQ==}\n\n  fill-range@7.1.1:\n    resolution: {integrity: sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==}\n    engines: {node: '>=8'}\n\n  fs-exists-sync@0.1.0:\n    resolution: {integrity: sha512-cR/vflFyPZtrN6b38ZyWxpWdhlXrzZEBawlpBQMq7033xVY7/kg0GDMBK5jg8lDYQckdJ5x/YC88lM3C7VMsLg==}\n    engines: {node: '>=0.10.0'}\n\n  function-bind@1.1.2:\n    resolution: {integrity: sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==}\n\n  get-intrinsic@1.2.4:\n    resolution: {integrity: sha512-5uYhsJH8VJBTv7oslg4BznJYhDoRI6waYCxMmCdnTrcCrHA/fCFKoTFz2JKKE0HdDFUF7/oQuhzumXJK7paBRQ==}\n    engines: {node: '>= 0.4'}\n\n  get-stdin@6.0.0:\n    resolution: {integrity: sha512-jp4tHawyV7+fkkSKyvjuLZswblUtz+SQKzSWnBbii16BuZksJlU1wuBYXY75r+duh/llF1ur6oNwi+2ZzjKZ7g==}\n    engines: {node: '>=4'}\n\n  git-config-path@1.0.1:\n    resolution: {integrity: sha512-KcJ2dlrrP5DbBnYIZ2nlikALfRhKzNSX0stvv3ImJ+fvC4hXKoV+U+74SV0upg+jlQZbrtQzc0bu6/Zh+7aQbg==}\n    engines: {node: '>=0.10.0'}\n\n  gopd@1.0.1:\n    resolution: {integrity: sha512-d65bNlIadxvpb/A2abVdlqKqV563juRnZ1Wtk6s1sIR8uNsXR70xqIzVqxVf1eTqDunwT2MkczEeaezCKTZhwA==}\n\n  has-flag@2.0.0:\n    resolution: {integrity: sha512-P+1n3MnwjR/Epg9BBo1KT8qbye2g2Ou4sFumihwt6I4tsUX7jnLcX4BTOSKg/B1ZrIYMN9FcEnG4x5a7NB8Eng==}\n    engines: {node: '>=0.10.0'}\n\n  has-flag@3.0.0:\n    resolution: {integrity: sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==}\n    engines: {node: '>=4'}\n\n  has-property-descriptors@1.0.2:\n    resolution: {integrity: sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==}\n\n  has-proto@1.0.3:\n    resolution: {integrity: sha512-SJ1amZAJUiZS+PhsVLf5tGydlaVB8EdFpaSO4gmiUKUOxk8qzn5AIy4ZeJUmh22znIdk/uMAUT2pl3FxzVUH+Q==}\n    engines: {node: '>= 0.4'}\n\n  has-symbols@1.0.3:\n    resolution: {integrity: sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A==}\n    engines: {node: '>= 0.4'}\n\n  hasown@2.0.2:\n    resolution: {integrity: sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==}\n    engines: {node: '>= 0.4'}\n\n  homedir-polyfill@1.0.3:\n    resolution: {integrity: sha512-eSmmWE5bZTK2Nou4g0AI3zZ9rswp7GRKoKXS1BLUkvPviOqs4YTN1djQIqrXy9k5gEtdLPy86JjRwsNM9tnDcA==}\n    engines: {node: '>=0.10.0'}\n\n  http-proxy-agent@5.0.0:\n    resolution: {integrity: sha512-n2hY8YdoRE1i7r6M0w9DIw5GgZN0G25P8zLCRQ8rjXtTU3vsNFBI/vWK/UIeE6g5MUUz6avwAPXmL6Fy9D/90w==}\n    engines: {node: '>= 6'}\n\n  https-proxy-agent@5.0.1:\n    resolution: {integrity: sha512-dFcAjpTQFgoLMzC2VwU+C/CbS7uRL0lWmxDITmqm7C+7F0Odmj6s9l6alZc6AELXhrnggM2CeWSXHGOdX2YtwA==}\n    engines: {node: '>= 6'}\n\n  husky@9.1.4:\n    resolution: {integrity: sha512-bho94YyReb4JV7LYWRWxZ/xr6TtOTt8cMfmQ39MQYJ7f/YE268s3GdghGwi+y4zAeqewE5zYLvuhV0M0ijsDEA==}\n    engines: {node: '>=18'}\n    hasBin: true\n\n  hyperlinker@1.0.0:\n    resolution: {integrity: sha512-Ty8UblRWFEcfSuIaajM34LdPXIhbs1ajEX/BBPv24J+enSVaEVY63xQ6lTO9VRYS5LAoghIG0IDJ+p+IPzKUQQ==}\n    engines: {node: '>=4'}\n\n  ini@1.3.8:\n    resolution: {integrity: sha512-JV/yugV2uzW5iMRSiZAyDtQd+nxtUnjeLt0acNdw98kKLrvuRVyB80tsREOE7yvGVgalhZ6RNXCmEHkUKBKxew==}\n\n  is-extendable@0.1.1:\n    resolution: {integrity: sha512-5BMULNob1vgFX6EjQw5izWDxrecWK9AM72rugNr0TFldMOi0fj6Jk+zeKIt0xGj4cEfQIJth4w3OKWOJ4f+AFw==}\n    engines: {node: '>=0.10.0'}\n\n  is-number@7.0.0:\n    resolution: {integrity: sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==}\n    engines: {node: '>=0.12.0'}\n\n  is-plain-object@5.0.0:\n    resolution: {integrity: sha512-VRSzKkbMm5jMDoKLbltAkFQ5Qr7VDiTFGXxYFXXowVj387GeGNOCsOH6Msy00SGZ3Fp84b1Naa1psqgcCIEP5Q==}\n    engines: {node: '>=0.10.0'}\n\n  json5@2.2.3:\n    resolution: {integrity: sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==}\n    engines: {node: '>=6'}\n    hasBin: true\n\n  jsonpointer@5.0.1:\n    resolution: {integrity: sha512-p/nXbhSEcu3pZRdkW1OfJhpsVtW1gd4Wa1fnQc9YLiTfAjn0312eMKimbdIQzuZl9aa9xUGaRlP9T/CJE/ditQ==}\n    engines: {node: '>=0.10.0'}\n\n  jsonwebtoken@9.0.2:\n    resolution: {integrity: sha512-PRp66vJ865SSqOlgqS8hujT5U4AOgMfhrwYIuIhfKaoSCZcirrmASQr8CX7cUg+RMih+hgznrjp99o+W4pJLHQ==}\n    engines: {node: '>=12', npm: '>=6'}\n\n  jwa@1.4.1:\n    resolution: {integrity: sha512-qiLX/xhEEFKUAJ6FiBMbes3w9ATzyk5W7Hvzpa/SLYdxNtng+gcurvrI7TbACjIXlsJyr05/S1oUhZrc63evQA==}\n\n  jws@3.2.2:\n    resolution: {integrity: sha512-YHlZCB6lMTllWDtSPHz/ZXTsi8S00usEV6v1tjq8tOUZzw7DpSDWVXjXDre6ed1w/pd495ODpHZYSdkRTsa0HA==}\n\n  lodash.find@4.6.0:\n    resolution: {integrity: sha512-yaRZoAV3Xq28F1iafWN1+a0rflOej93l1DQUejs3SZ41h2O9UJBoS9aueGjPDgAl4B6tPC0NuuchLKaDQQ3Isg==}\n\n  lodash.includes@4.3.0:\n    resolution: {integrity: sha512-W3Bx6mdkRTGtlJISOvVD/lbqjTlPPUDTMnlXZFnVwi9NKJ6tiAk6LVdlhZMm17VZisqhKcgzpO5Wz91PCt5b0w==}\n\n  lodash.isboolean@3.0.3:\n    resolution: {integrity: sha512-Bz5mupy2SVbPHURB98VAcw+aHh4vRV5IPNhILUCsOzRmsTmSQ17jIuqopAentWoehktxGd9e/hbIXq980/1QJg==}\n\n  lodash.isinteger@4.0.4:\n    resolution: {integrity: sha512-DBwtEWN2caHQ9/imiNeEA5ys1JoRtRfY3d7V9wkqtbycnAmTvRRmbHKDV4a0EYc678/dia0jrte4tjYwVBaZUA==}\n\n  lodash.isnumber@3.0.3:\n    resolution: {integrity: sha512-QYqzpfwO3/CWf3XP+Z+tkQsfaLL/EnUlXWVkIk5FUPc4sBdTehEqZONuyRt2P67PXAk+NXmTBcc97zw9t1FQrw==}\n\n  lodash.isobject@3.0.2:\n    resolution: {integrity: sha512-3/Qptq2vr7WeJbB4KHUSKlq8Pl7ASXi3UG6CMbBm8WRtXi8+GHm7mKaU3urfpSEzWe2wCIChs6/sdocUsTKJiA==}\n\n  lodash.isplainobject@4.0.6:\n    resolution: {integrity: sha512-oSXzaWypCMHkPC3NvBEaPHf0KsA5mvPrOPgQWDsbg8n7orZ290M0BmC/jgRZ4vcJ6DTAhjrsSYgdsW/F+MFOBA==}\n\n  lodash.isstring@4.0.1:\n    resolution: {integrity: sha512-0wJxfxH1wgO3GrbuP+dTTk7op+6L41QCXbGINEmD+ny/G/eCqGzxyCsh7159S+mgDDcoarnBw6PC1PS5+wUGgw==}\n\n  lodash.keys@4.2.0:\n    resolution: {integrity: sha512-J79MkJcp7Df5mizHiVNpjoHXLi4HLjh9VLS/M7lQSGoQ+0oQ+lWEigREkqKyizPB1IawvQLLKY8mzEcm1tkyxQ==}\n\n  lodash.mapvalues@4.6.0:\n    resolution: {integrity: sha512-JPFqXFeZQ7BfS00H58kClY7SPVeHertPE0lNuCyZ26/XlN8TvakYD7b9bGyNmXbT/D3BbtPAAmq90gPWqLkxlQ==}\n\n  lodash.memoize@4.1.2:\n    resolution: {integrity: sha512-t7j+NzmgnQzTAYXcsHYLgimltOV1MXHtlOWf6GjL9Kj8GK5FInw5JotxvbOs+IvV1/Dzo04/fCGfLVs7aXb4Ag==}\n\n  lodash.once@4.1.1:\n    resolution: {integrity: sha512-Sb487aTOCr9drQVL8pIxOzVhafOjZN9UU54hiN8PU3uAiSV7lx1yYNpbNmex2PK6dSJoNTSJUUswT651yww3Mg==}\n\n  memfs-or-file-map-to-github-branch@1.2.1:\n    resolution: {integrity: sha512-I/hQzJ2a/pCGR8fkSQ9l5Yx+FQ4e7X6blNHyWBm2ojeFLT3GVzGkTj7xnyWpdclrr7Nq4dmx3xrvu70m3ypzAQ==}\n\n  micromatch@4.0.8:\n    resolution: {integrity: sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==}\n    engines: {node: '>=8.6'}\n\n  minimist@1.2.8:\n    resolution: {integrity: sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==}\n\n  ms@2.1.3:\n    resolution: {integrity: sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==}\n\n  node-cleanup@2.1.2:\n    resolution: {integrity: sha512-qN8v/s2PAJwGUtr1/hYTpNKlD6Y9rc4p8KSmJXyGdYGZsDGKXrGThikLFP9OCHFeLeEpQzPwiAtdIvBLqm//Hw==}\n\n  node-fetch@2.7.0:\n    resolution: {integrity: sha512-c4FRfUm/dbcWZ7U+1Wq0AwCyFL+3nt2bEw05wfxSz+DWpWsitgmSgYmy2dQdWyKC1694ELPqMs/YzUSNozLt8A==}\n    engines: {node: 4.x || >=6.0.0}\n    peerDependencies:\n      encoding: ^0.1.0\n    peerDependenciesMeta:\n      encoding:\n        optional: true\n\n  object-inspect@1.13.3:\n    resolution: {integrity: sha512-kDCGIbxkDSXE3euJZZXzc6to7fCrKHNI/hSRQnRuQ+BWjFNzZwiFF8fj/6o2t2G9/jTj8PSIYTfCLelLZEeRpA==}\n    engines: {node: '>= 0.4'}\n\n  once@1.4.0:\n    resolution: {integrity: sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==}\n\n  override-require@1.1.1:\n    resolution: {integrity: sha512-eoJ9YWxFcXbrn2U8FKT6RV+/Kj7fiGAB1VvHzbYKt8xM5ZuKZgCGvnHzDxmreEjcBH28ejg5MiOH4iyY1mQnkg==}\n\n  p-limit@2.3.0:\n    resolution: {integrity: sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==}\n    engines: {node: '>=6'}\n\n  p-try@2.2.0:\n    resolution: {integrity: sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==}\n    engines: {node: '>=6'}\n\n  parse-diff@0.7.1:\n    resolution: {integrity: sha512-1j3l8IKcy4yRK2W4o9EYvJLSzpAVwz4DXqCewYyx2vEwk2gcf3DBPqc8Fj4XV3K33OYJ08A8fWwyu/ykD/HUSg==}\n\n  parse-git-config@2.0.3:\n    resolution: {integrity: sha512-Js7ueMZOVSZ3tP8C7E3KZiHv6QQl7lnJ+OkbxoaFazzSa2KyEHqApfGbU3XboUgUnq4ZuUmskUpYKTNx01fm5A==}\n    engines: {node: '>=6'}\n\n  parse-github-url@1.0.3:\n    resolution: {integrity: sha512-tfalY5/4SqGaV/GIGzWyHnFjlpTPTNpENR9Ea2lLldSJ8EWXMsvacWucqY3m3I4YPtas15IxTLQVQ5NSYXPrww==}\n    engines: {node: '>= 0.10'}\n    hasBin: true\n\n  parse-link-header@2.0.0:\n    resolution: {integrity: sha512-xjU87V0VyHZybn2RrCX5TIFGxTVZE6zqqZWMPlIKiSKuWh/X5WZdt+w1Ki1nXB+8L/KtL+nZ4iq+sfI6MrhhMw==}\n\n  parse-passwd@1.0.0:\n    resolution: {integrity: sha512-1Y1A//QUXEZK7YKz+rD9WydcE1+EuPr6ZBgKecAB8tmoW6UFv0NREVJe1p+jRxtThkcbbKkfwIbWJe/IeE6m2Q==}\n    engines: {node: '>=0.10.0'}\n\n  picomatch@2.3.1:\n    resolution: {integrity: sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==}\n    engines: {node: '>=8.6'}\n\n  pinpoint@1.1.0:\n    resolution: {integrity: sha512-+04FTD9x7Cls2rihLlo57QDCcHoLBGn5Dk51SwtFBWkUWLxZaBXyNVpCw1S+atvE7GmnFjeaRZ0WLq3UYuqAdg==}\n\n  prettyjson@1.2.5:\n    resolution: {integrity: sha512-rksPWtoZb2ZpT5OVgtmy0KHVM+Dca3iVwWY9ifwhcexfjebtgjg3wmrUt9PvJ59XIYBcknQeYHD8IAnVlh9lAw==}\n    hasBin: true\n\n  qs@6.13.1:\n    resolution: {integrity: sha512-EJPeIn0CYrGu+hli1xilKAPXODtJ12T0sP63Ijx2/khC2JtuaN3JyNIpvmnkmaEtha9ocbG4A4cMcr+TvqvwQg==}\n    engines: {node: '>=0.6'}\n\n  readline-sync@1.4.10:\n    resolution: {integrity: sha512-gNva8/6UAe8QYepIQH/jQ2qn91Qj0B9sYjMBBs3QOB8F2CXcKgLxQaJRP76sWVRQt+QU+8fAkCbCvjjMFu7Ycw==}\n    engines: {node: '>= 0.8.0'}\n\n  regenerator-runtime@0.13.11:\n    resolution: {integrity: sha512-kY1AZVr2Ra+t+piVaJ4gxaFaReZVH40AKNo7UCX6W+dEwBo/2oZJzqfuN1qLq1oL45o56cPaTXELwrTh8Fpggg==}\n\n  require-from-string@2.0.2:\n    resolution: {integrity: sha512-Xf0nWe6RseziFMu+Ap9biiUbmplq6S9/p+7w7YXP/JBHhrUDDUhwa+vANyubuqfZWTveU//DYVGsDG7RKL/vEw==}\n    engines: {node: '>=0.10.0'}\n\n  retry@0.12.0:\n    resolution: {integrity: sha512-9LkiTwjUh6rT555DtE9rTX+BKByPfrMzEAtnlEtdEwr3Nkffwiihqe2bWADg+OQRjt9gl6ICdmB/ZFDCGAtSow==}\n    engines: {node: '>= 4'}\n\n  safe-buffer@5.2.1:\n    resolution: {integrity: sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==}\n\n  semver@7.6.3:\n    resolution: {integrity: sha512-oVekP1cKtI+CTDvHWYFUcMtsK/00wmAEfyqKfNdARm8u1wNVhSgaX7A8d4UuIlUI5e84iEwOhs7ZPYRmzU9U6A==}\n    engines: {node: '>=10'}\n    hasBin: true\n\n  set-function-length@1.2.2:\n    resolution: {integrity: sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==}\n    engines: {node: '>= 0.4'}\n\n  side-channel@1.0.6:\n    resolution: {integrity: sha512-fDW/EZ6Q9RiO8eFG8Hj+7u/oW+XrPTIChwCOM2+th2A6OblDtYYIpve9m+KvI9Z4C9qSEXlaGR6bTEYHReuglA==}\n    engines: {node: '>= 0.4'}\n\n  supports-color@5.5.0:\n    resolution: {integrity: sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==}\n    engines: {node: '>=4'}\n\n  supports-hyperlinks@1.0.1:\n    resolution: {integrity: sha512-HHi5kVSefKaJkGYXbDuKbUGRVxqnWGn3J2e39CYcNJEfWciGq2zYtOhXLTlvrOZW1QU7VX67w7fMmWafHX9Pfw==}\n    engines: {node: '>=4'}\n\n  to-regex-range@5.0.1:\n    resolution: {integrity: sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==}\n    engines: {node: '>=8.0'}\n\n  tr46@0.0.3:\n    resolution: {integrity: sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw==}\n\n  universal-user-agent@6.0.1:\n    resolution: {integrity: sha512-yCzhz6FN2wU1NiiQRogkTQszlQSlpWaw8SvVegAc+bDxbzHgh1vX8uIe8OYyMH6DwH+sdTJsgMl36+mSMdRJIQ==}\n\n  webidl-conversions@3.0.1:\n    resolution: {integrity: sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ==}\n\n  whatwg-url@5.0.0:\n    resolution: {integrity: sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==}\n\n  wrappy@1.0.2:\n    resolution: {integrity: sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==}\n\n  xcase@2.0.1:\n    resolution: {integrity: sha512-UmFXIPU+9Eg3E9m/728Bii0lAIuoc+6nbrNUKaRPJOFp91ih44qqGlWtxMB6kXFrRD6po+86ksHM5XHCfk6iPw==}\n\n  xtend@4.0.2:\n    resolution: {integrity: sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==}\n    engines: {node: '>=0.4'}\n\nsnapshots:\n\n  '@gitbeaker/core@38.12.1':\n    dependencies:\n      '@gitbeaker/requester-utils': 38.12.1\n      qs: 6.13.1\n      xcase: 2.0.1\n\n  '@gitbeaker/requester-utils@38.12.1':\n    dependencies:\n      qs: 6.13.1\n      xcase: 2.0.1\n\n  '@gitbeaker/rest@38.12.1':\n    dependencies:\n      '@gitbeaker/core': 38.12.1\n      '@gitbeaker/requester-utils': 38.12.1\n\n  '@octokit/auth-token@2.5.0':\n    dependencies:\n      '@octokit/types': 6.41.0\n\n  '@octokit/core@3.6.0':\n    dependencies:\n      '@octokit/auth-token': 2.5.0\n      '@octokit/graphql': 4.8.0\n      '@octokit/request': 5.6.3\n      '@octokit/request-error': 2.1.0\n      '@octokit/types': 6.41.0\n      before-after-hook: 2.2.3\n      universal-user-agent: 6.0.1\n    transitivePeerDependencies:\n      - encoding\n\n  '@octokit/endpoint@6.0.12':\n    dependencies:\n      '@octokit/types': 6.41.0\n      is-plain-object: 5.0.0\n      universal-user-agent: 6.0.1\n\n  '@octokit/graphql@4.8.0':\n    dependencies:\n      '@octokit/request': 5.6.3\n      '@octokit/types': 6.41.0\n      universal-user-agent: 6.0.1\n    transitivePeerDependencies:\n      - encoding\n\n  '@octokit/openapi-types@12.11.0': {}\n\n  '@octokit/plugin-paginate-rest@2.21.3(@octokit/core@3.6.0)':\n    dependencies:\n      '@octokit/core': 3.6.0\n      '@octokit/types': 6.41.0\n\n  '@octokit/plugin-request-log@1.0.4(@octokit/core@3.6.0)':\n    dependencies:\n      '@octokit/core': 3.6.0\n\n  '@octokit/plugin-rest-endpoint-methods@5.16.2(@octokit/core@3.6.0)':\n    dependencies:\n      '@octokit/core': 3.6.0\n      '@octokit/types': 6.41.0\n      deprecation: 2.3.1\n\n  '@octokit/request-error@2.1.0':\n    dependencies:\n      '@octokit/types': 6.41.0\n      deprecation: 2.3.1\n      once: 1.4.0\n\n  '@octokit/request@5.6.3':\n    dependencies:\n      '@octokit/endpoint': 6.0.12\n      '@octokit/request-error': 2.1.0\n      '@octokit/types': 6.41.0\n      is-plain-object: 5.0.0\n      node-fetch: 2.7.0\n      universal-user-agent: 6.0.1\n    transitivePeerDependencies:\n      - encoding\n\n  '@octokit/rest@18.12.0':\n    dependencies:\n      '@octokit/core': 3.6.0\n      '@octokit/plugin-paginate-rest': 2.21.3(@octokit/core@3.6.0)\n      '@octokit/plugin-request-log': 1.0.4(@octokit/core@3.6.0)\n      '@octokit/plugin-rest-endpoint-methods': 5.16.2(@octokit/core@3.6.0)\n    transitivePeerDependencies:\n      - encoding\n\n  '@octokit/types@6.41.0':\n    dependencies:\n      '@octokit/openapi-types': 12.11.0\n\n  '@tootallnate/once@2.0.0': {}\n\n  agent-base@6.0.2:\n    dependencies:\n      debug: 4.3.7\n    transitivePeerDependencies:\n      - supports-color\n\n  ansi-styles@3.2.1:\n    dependencies:\n      color-convert: 1.9.3\n\n  async-retry@1.2.3:\n    dependencies:\n      retry: 0.12.0\n\n  before-after-hook@2.2.3: {}\n\n  braces@3.0.3:\n    dependencies:\n      fill-range: 7.1.1\n\n  buffer-equal-constant-time@1.0.1: {}\n\n  call-bind@1.0.7:\n    dependencies:\n      es-define-property: 1.0.0\n      es-errors: 1.3.0\n      function-bind: 1.1.2\n      get-intrinsic: 1.2.4\n      set-function-length: 1.2.2\n\n  chalk@2.4.2:\n    dependencies:\n      ansi-styles: 3.2.1\n      escape-string-regexp: 1.0.5\n      supports-color: 5.5.0\n\n  color-convert@1.9.3:\n    dependencies:\n      color-name: 1.1.3\n\n  color-name@1.1.3: {}\n\n  colors@1.4.0: {}\n\n  commander@2.20.3: {}\n\n  core-js@3.39.0: {}\n\n  danger@12.3.3:\n    dependencies:\n      '@gitbeaker/rest': 38.12.1\n      '@octokit/rest': 18.12.0\n      async-retry: 1.2.3\n      chalk: 2.4.2\n      commander: 2.20.3\n      core-js: 3.39.0\n      debug: 4.3.7\n      fast-json-patch: 3.1.1\n      get-stdin: 6.0.0\n      http-proxy-agent: 5.0.0\n      https-proxy-agent: 5.0.1\n      hyperlinker: 1.0.0\n      json5: 2.2.3\n      jsonpointer: 5.0.1\n      jsonwebtoken: 9.0.2\n      lodash.find: 4.6.0\n      lodash.includes: 4.3.0\n      lodash.isobject: 3.0.2\n      lodash.keys: 4.2.0\n      lodash.mapvalues: 4.6.0\n      lodash.memoize: 4.1.2\n      memfs-or-file-map-to-github-branch: 1.2.1\n      micromatch: 4.0.8\n      node-cleanup: 2.1.2\n      node-fetch: 2.7.0\n      override-require: 1.1.1\n      p-limit: 2.3.0\n      parse-diff: 0.7.1\n      parse-git-config: 2.0.3\n      parse-github-url: 1.0.3\n      parse-link-header: 2.0.0\n      pinpoint: 1.1.0\n      prettyjson: 1.2.5\n      readline-sync: 1.4.10\n      regenerator-runtime: 0.13.11\n      require-from-string: 2.0.2\n      supports-hyperlinks: 1.0.1\n    transitivePeerDependencies:\n      - encoding\n      - supports-color\n\n  debug@4.3.7:\n    dependencies:\n      ms: 2.1.3\n\n  define-data-property@1.1.4:\n    dependencies:\n      es-define-property: 1.0.0\n      es-errors: 1.3.0\n      gopd: 1.0.1\n\n  deprecation@2.3.1: {}\n\n  ecdsa-sig-formatter@1.0.11:\n    dependencies:\n      safe-buffer: 5.2.1\n\n  es-define-property@1.0.0:\n    dependencies:\n      get-intrinsic: 1.2.4\n\n  es-errors@1.3.0: {}\n\n  escape-string-regexp@1.0.5: {}\n\n  expand-tilde@2.0.2:\n    dependencies:\n      homedir-polyfill: 1.0.3\n\n  extend-shallow@2.0.1:\n    dependencies:\n      is-extendable: 0.1.1\n\n  fast-json-patch@3.1.1: {}\n\n  fill-range@7.1.1:\n    dependencies:\n      to-regex-range: 5.0.1\n\n  fs-exists-sync@0.1.0: {}\n\n  function-bind@1.1.2: {}\n\n  get-intrinsic@1.2.4:\n    dependencies:\n      es-errors: 1.3.0\n      function-bind: 1.1.2\n      has-proto: 1.0.3\n      has-symbols: 1.0.3\n      hasown: 2.0.2\n\n  get-stdin@6.0.0: {}\n\n  git-config-path@1.0.1:\n    dependencies:\n      extend-shallow: 2.0.1\n      fs-exists-sync: 0.1.0\n      homedir-polyfill: 1.0.3\n\n  gopd@1.0.1:\n    dependencies:\n      get-intrinsic: 1.2.4\n\n  has-flag@2.0.0: {}\n\n  has-flag@3.0.0: {}\n\n  has-property-descriptors@1.0.2:\n    dependencies:\n      es-define-property: 1.0.0\n\n  has-proto@1.0.3: {}\n\n  has-symbols@1.0.3: {}\n\n  hasown@2.0.2:\n    dependencies:\n      function-bind: 1.1.2\n\n  homedir-polyfill@1.0.3:\n    dependencies:\n      parse-passwd: 1.0.0\n\n  http-proxy-agent@5.0.0:\n    dependencies:\n      '@tootallnate/once': 2.0.0\n      agent-base: 6.0.2\n      debug: 4.3.7\n    transitivePeerDependencies:\n      - supports-color\n\n  https-proxy-agent@5.0.1:\n    dependencies:\n      agent-base: 6.0.2\n      debug: 4.3.7\n    transitivePeerDependencies:\n      - supports-color\n\n  husky@9.1.4: {}\n\n  hyperlinker@1.0.0: {}\n\n  ini@1.3.8: {}\n\n  is-extendable@0.1.1: {}\n\n  is-number@7.0.0: {}\n\n  is-plain-object@5.0.0: {}\n\n  json5@2.2.3: {}\n\n  jsonpointer@5.0.1: {}\n\n  jsonwebtoken@9.0.2:\n    dependencies:\n      jws: 3.2.2\n      lodash.includes: 4.3.0\n      lodash.isboolean: 3.0.3\n      lodash.isinteger: 4.0.4\n      lodash.isnumber: 3.0.3\n      lodash.isplainobject: 4.0.6\n      lodash.isstring: 4.0.1\n      lodash.once: 4.1.1\n      ms: 2.1.3\n      semver: 7.6.3\n\n  jwa@1.4.1:\n    dependencies:\n      buffer-equal-constant-time: 1.0.1\n      ecdsa-sig-formatter: 1.0.11\n      safe-buffer: 5.2.1\n\n  jws@3.2.2:\n    dependencies:\n      jwa: 1.4.1\n      safe-buffer: 5.2.1\n\n  lodash.find@4.6.0: {}\n\n  lodash.includes@4.3.0: {}\n\n  lodash.isboolean@3.0.3: {}\n\n  lodash.isinteger@4.0.4: {}\n\n  lodash.isnumber@3.0.3: {}\n\n  lodash.isobject@3.0.2: {}\n\n  lodash.isplainobject@4.0.6: {}\n\n  lodash.isstring@4.0.1: {}\n\n  lodash.keys@4.2.0: {}\n\n  lodash.mapvalues@4.6.0: {}\n\n  lodash.memoize@4.1.2: {}\n\n  lodash.once@4.1.1: {}\n\n  memfs-or-file-map-to-github-branch@1.2.1:\n    dependencies:\n      '@octokit/rest': 18.12.0\n    transitivePeerDependencies:\n      - encoding\n\n  micromatch@4.0.8:\n    dependencies:\n      braces: 3.0.3\n      picomatch: 2.3.1\n\n  minimist@1.2.8: {}\n\n  ms@2.1.3: {}\n\n  node-cleanup@2.1.2: {}\n\n  node-fetch@2.7.0:\n    dependencies:\n      whatwg-url: 5.0.0\n\n  object-inspect@1.13.3: {}\n\n  once@1.4.0:\n    dependencies:\n      wrappy: 1.0.2\n\n  override-require@1.1.1: {}\n\n  p-limit@2.3.0:\n    dependencies:\n      p-try: 2.2.0\n\n  p-try@2.2.0: {}\n\n  parse-diff@0.7.1: {}\n\n  parse-git-config@2.0.3:\n    dependencies:\n      expand-tilde: 2.0.2\n      git-config-path: 1.0.1\n      ini: 1.3.8\n\n  parse-github-url@1.0.3: {}\n\n  parse-link-header@2.0.0:\n    dependencies:\n      xtend: 4.0.2\n\n  parse-passwd@1.0.0: {}\n\n  picomatch@2.3.1: {}\n\n  pinpoint@1.1.0: {}\n\n  prettyjson@1.2.5:\n    dependencies:\n      colors: 1.4.0\n      minimist: 1.2.8\n\n  qs@6.13.1:\n    dependencies:\n      side-channel: 1.0.6\n\n  readline-sync@1.4.10: {}\n\n  regenerator-runtime@0.13.11: {}\n\n  require-from-string@2.0.2: {}\n\n  retry@0.12.0: {}\n\n  safe-buffer@5.2.1: {}\n\n  semver@7.6.3: {}\n\n  set-function-length@1.2.2:\n    dependencies:\n      define-data-property: 1.1.4\n      es-errors: 1.3.0\n      function-bind: 1.1.2\n      get-intrinsic: 1.2.4\n      gopd: 1.0.1\n      has-property-descriptors: 1.0.2\n\n  side-channel@1.0.6:\n    dependencies:\n      call-bind: 1.0.7\n      es-errors: 1.3.0\n      get-intrinsic: 1.2.4\n      object-inspect: 1.13.3\n\n  supports-color@5.5.0:\n    dependencies:\n      has-flag: 3.0.0\n\n  supports-hyperlinks@1.0.1:\n    dependencies:\n      has-flag: 2.0.0\n      supports-color: 5.5.0\n\n  to-regex-range@5.0.1:\n    dependencies:\n      is-number: 7.0.0\n\n  tr46@0.0.3: {}\n\n  universal-user-agent@6.0.1: {}\n\n  webidl-conversions@3.0.1: {}\n\n  whatwg-url@5.0.0:\n    dependencies:\n      tr46: 0.0.3\n      webidl-conversions: 3.0.1\n\n  wrappy@1.0.2: {}\n\n  xcase@2.0.1: {}\n\n  xtend@4.0.2: {}\n"
        },
        {
          "name": "renovate.json",
          "type": "blob",
          "size": 1.14453125,
          "content": "{\n  \"$schema\": \"https://docs.renovatebot.com/renovate-schema.json\",\n  \"dependencyDashboard\": true,\n  \"extends\": [\n    \"config:recommended\"\n  ],\n  \"poetry\": {\n    \"enabled\": true\n  },\n  \"pep621\": {\n    \"enabled\": false\n  },\n  \"npm\": {\n    \"enabled\": true\n  },\n  \"ignorePaths\": [\n    \"node_modules\"\n  ],\n  \"packageRules\": [\n    {\n      \"description\": \"[All] Ignore all packages initially\",\n      \"enabled\": false,\n      \"matchPackageNames\": [\n        \"*\"\n      ],\n      \"labels\": [\n        \"dependencies\"\n      ]\n    },\n    {\n      \"description\": \"[Examples] Enable Renovate for CopilotKit packages only\",\n      \"enabled\": true,\n      \"matchFileNames\": [\n        \"examples/**\"\n      ],\n      \"matchPackageNames\": [\n        \"/^@copilotkit/\",\n        \"/^copilotkit/\"\n      ],\n      \"labels\": [\n        \"examples\"\n      ],\n      \"groupName\": \"CopilotKit Examples\"\n    },\n    {\n      \"description\": \"[@copilotkit/*] Dependencies\",\n      \"enabled\": true,\n      \"matchFileNames\": [\n        \"CopilotKit/packages/**\"\n      ],\n      \"matchPackageNames\": [\n        \"*\"\n      ],\n      \"labels\": [\n        \"dependencies-core\"\n      ],\n      \"groupName\": \"Core Dependencies\"\n    }\n  ]\n}\n"
        },
        {
          "name": "sdk-python",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}