{
  "metadata": {
    "timestamp": 1736565069969,
    "page": 322,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "juice-shop/juice-shop",
      "stars": 10662,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".codeclimate.yml",
          "type": "blob",
          "size": 0.5390625,
          "content": "version: \"2\"\nplugins:\n  fixme:\n    enabled: true\n  duplication:\n    enabled: true\nchecks:\n  file-lines:\n    config:\n      threshold: 300\n  method-lines:\n    config:\n      threshold: 30\n  method-complexity:\n    config:\n      threshold: 7\n  similar-code:\n    enabled: false\n  identical-code:\n    enabled: false\nexclude_patterns:\n  - 'Gruntfile.js'\n  - '**/*conf.js'\n  - 'data/datacreator.ts'\n  - 'data/static/codefixes/**'\n  - 'frontend/src/hacking-instructor/**/*.ts'\n  - 'frontend/src/assets/private/*.js'\n  - 'lib/logger.ts'\n  - 'lib/config.types.ts'\n"
        },
        {
          "name": ".dependabot",
          "type": "tree",
          "content": null
        },
        {
          "name": ".devcontainer.json",
          "type": "blob",
          "size": 0.4052734375,
          "content": "{\n    \"extensions\": [\n        \"eg2.vscode-npm-script\",\n        \"angular.ng-template\",\n        \"dbaeumer.vscode-eslint\",\n        \"stylelint.vscode-stylelint\"\n    ],\n    \"settings\": {\n        \"eslint.workingDirectories\": [\n            { \"mode\": \"auto\" }\n        ]\n    },\n    \"postCreateCommand\": \"export NG_CLI_ANALYTICS=ci && export NG_FORCE_TTY=false && npm i -g @angular/cli && npm install && unset NG_FORCE_TTY\"\n}"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.2373046875,
          "content": ".git/\nmonitoring/\nnode_modules/\nscreenshots/\ntest/\nbuild/reports/\ndist/\nvagrant/\nlogs/\nDockerfile\n.npmrc\n/bom.json\n/bom.xml\n\n# Pattern is *not covered* by node_modules/ above no matter what IntelliJ says!\nfrontend/node_modules/\nfrontend/dist/\n"
        },
        {
          "name": ".eslintrc.js",
          "type": "blob",
          "size": 1.044921875,
          "content": "/*\n * Copyright (c) 2014-2024 Bjoern Kimminich & the OWASP Juice Shop contributors.\n * SPDX-License-Identifier: MIT\n */\n\nmodule.exports = {\n  extends: 'standard-with-typescript',\n  env: {\n    browser: true,\n    node: true,\n    jasmine: true,\n    mocha: true,\n    jest: true\n  },\n  globals: {\n    Atomics: 'readonly',\n    SharedArrayBuffer: 'readonly'\n  },\n  parserOptions: {\n    ecmaVersion: 2018,\n    project: './tsconfig.json'\n  },\n  ignorePatterns: [\n    '.eslintrc.js',\n    'app/private/**',\n    'vagrant/**',\n    'frontend/**',\n    'data/static/codefixes/**',\n    'dist/**'\n  ],\n  overrides: [\n    {\n      files: ['**/*.ts'],\n      parser: '@typescript-eslint/parser',\n      rules: {\n        'no-void': 'off', // conflicting with recommendation from @typescript-eslint/no-floating-promises\n        // FIXME warnings below this line need to be checked and fixed.\n        '@typescript-eslint/explicit-function-return-type': 'off',\n        '@typescript-eslint/strict-boolean-expressions': 'off',\n        '@typescript-eslint/no-var-requires': 'off'\n      }\n    }\n  ]\n}\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.8505859375,
          "content": "# App\nnode_modules/\njuiceshop.sqlite\norder_*.pdf\napp/\n!frontend/src/app\nuploads/complaints/*.*\n!uploads/complaints/.gitkeep\nftp/legal.md\npackage-lock.json\ni18n/*.json\ni18n/*.invalid\n!frontend/src/assets/i18n/*.json\n!data/static/i18n/*.json\ndata/chatbot/*.*\n!data/chatbot/.gitkeep\n/data/juiceshop.sqlite-journal\n\n# Build\n.nyc_output/\n.sass-cache/\nbuild/\ncache/\ndist/\nlogs/\nvagrant/.vagrant/\n*.orig\n*.out\n*.log\nJSON\nJSON.map\nfrontend/src/**/*.js\n/bom.json\n/bom.xml\n\n# IDEs\n.idea/\n.vscode/\nout/\n*.eml\n*.iml\n*.iws\n*.swp\n\n# Branch ghpages\nassets/\n!frontend/src/assets/\n\n# Custom configuration files\nconfig/*.yml\n!config/addo.yml\n!config/bodgeit.yml\n!config/ctf.yml\n!config/fbctf.yml\n!config/default.yml\n!config/juicebox.yml\n!config/quiet.yml\n!config/test.yml\n!config/7ms.yml\n!config/mozilla.yml\n!config/unsafe.yml\n!config/tutorial.yml\n!config/oss.yml\n\n# System Files\n.DS_Store"
        },
        {
          "name": ".gitlab-ci.yml",
          "type": "blob",
          "size": 0.1611328125,
          "content": "include:\n  - template: Auto-DevOps.gitlab-ci.yml\n\nvariables:\n  SAST_EXCLUDED_PATHS: \"frontend/src/assets/private/**\"\n  TEST_DISABLED: \"true\"\n  DAST_DISABLED: \"true\"\n"
        },
        {
          "name": ".gitlab",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitpod.yml",
          "type": "blob",
          "size": 0.166015625,
          "content": "tasks:\n  - init: npm install\n    command: npm start\n\nports:\n  - name: OWASP Juice Shop\n    description: The Juice Shop web server\n    port: 3000\n    onOpen: open-preview\n"
        },
        {
          "name": ".mailmap",
          "type": "blob",
          "size": 2.6318359375,
          "content": "Aashish683 <aashishsingh2907@gmail.com> Aashish Singh <30633088+Aashish683@users.noreply.github.com>\nAlejandro Saenz <alejandrosaenz117@gmail.com> Alejandro Saenz <Whamo12@users.noreply.github.com>\nBjörn Kimminich <bjoern.kimminich@owasp.org> Bjoern Kimminich <bjoern.kimminich@gmx.de>\nBjörn Kimminich <bjoern.kimminich@owasp.org> Bjoern Kimminich <bjoern.kimminich@kuehne-nagel.com>\nBjörn Kimminich <bjoern.kimminich@owasp.org> Björn Kimminich <bjoern.kimminich@gmx.de>\nBjörn Kimminich <bjoern.kimminich@owasp.org> Björn Kimminich <bjoern.kimminich@kuehne-nagel.com>\nBjörn Kimminich <bjoern.kimminich@owasp.org> bjoern.kimminich <bjoern.kimminich@kuehne-nagel.com>\nBjörn Kimminich <bjoern.kimminich@owasp.org> Björn Kimminich <github.com@kimminich.de>\nCaptainFreak <patelshoeb4@gmail.com> CaptainFreak <captainfreak@localhost.localdomain>\nJannik Hollenbach <Jannik.Hollenbach@iteratec.de> J12934 <13718901+J12934@users.noreply.github.com>\nJannik Hollenbach <Jannik.Hollenbach@iteratec.de> Jannik Hollenbach <13718901+J12934@users.noreply.github.com>\nJannik Hollenbach <Jannik.Hollenbach@iteratec.de> Jannik Hollenbach <jannik.hollenbach@iteratec.de>\nJannik Hollenbach <Jannik.Hollenbach@iteratec.de> Jannik Hollenbach <jannik@hollenbach.de>\nJannik Hollenbach <Jannik.Hollenbach@iteratec.de> Jannik Hollenbach <jannik.hollenbach@iteratec.com>\nJamesCullum <5477111+JamesCullum@users.noreply.github.com> JamesCullum <JamesCullum@users.noreply.github.com>\nMarcRler <marc.ruettler@live.de> Marc Rüttler <Marc.ruettler@live.de>\nMarcRler <marc.ruettler@live.de> MarcRler <mr144@hdm-stuttgart.de>\nNat McHugh <nmchugh@inviqa.com> Nathaniel McHugh <nat@fishtrap.co.uk>\nSimon Basset <simon.basset.pro@gmail.com> Simon Basset <simon.basset@gmail.com>\nSupratik Das <rick.das08@gmail.com> Supratik Das <30755453+supra08@users.noreply.github.com>\nTimo Pagel <github@timo-pagel.de> Timo Pagel <gitlab@timo-pagel.de>\nTimo Pagel <github@timo-pagel.de> Timo Pagel <tpagel@fhunii-media.com>\nTimo Pagel <github@timo-pagel.de> tpagel <timo.pagel@fhunii-media.com>\nTimo Pagel <github@timo-pagel.de> wurstbrot <github@timo-pagel.de>\nViktor Lindström <viktor.lindstrm@gmail.com> ViktorLindstrm <viktor.lindstrm@gmail.com>\naaryan10 <aaryanbudhiraja2@gmail.com> Aaryan Budhiraja <31697449+aaryan01@users.noreply.github.com>\nagrawalarpit14 <agrawal.arpit14@gmail.com> Arpit Agrawal <35000671+agrawalarpit14@users.noreply.github.com>\ngreenkeeper[bot] <greenkeeper[bot]@users.noreply.github.com> greenkeeper[bot] <23040076+greenkeeper[bot]@users.noreply.github.com>\nomerlh <omerl@soluto.com> Omer Levi Hevroni <omerl@soluto.com>\nScar26 <mmatty26@gmail.com> Mohit Sharma <41830515+Scar26@users.noreply.github.com>\n"
        },
        {
          "name": ".npmrc",
          "type": "blob",
          "size": 0.0185546875,
          "content": "package-lock=false\n"
        },
        {
          "name": ".well-known",
          "type": "tree",
          "content": null
        },
        {
          "name": ".zap",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.3935546875,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for\neveryone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity\nand expression, level of experience, education, socio-economic status, nationality, personal appearance, race, caste,\ncolor, religion, or sexual identity and orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming, diverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our community include:\n\n* Demonstrating empathy and kindness toward other people\n* Being respectful of differing opinions, viewpoints, and experiences\n* Giving and gracefully accepting constructive feedback\n* Accepting responsibility and apologizing to those affected by our mistakes, and learning from the experience\n* Focusing on what is best not just for us as individuals, but for the overall community\n\nExamples of unacceptable behavior include:\n\n* The use of sexualized language or imagery, and sexual attention or advances of any kind\n* Trolling, insulting or derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or email address, without their explicit permission\n* Other conduct which could reasonably be considered inappropriate in a professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of acceptable behavior and will take\nappropriate and fair corrective action in response to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject comments, commits, code, wiki edits,\nissues, and other contributions that are not aligned to this Code of Conduct, and will communicate reasons for\nmoderation decisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when an individual is officially representing\nthe community in public spaces. Examples of representing our community include using an official e-mail address, posting\nvia an official social media account, or acting as an appointed representative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be reported to the community leaders responsible\nfor enforcement at\n[bjoern.kimminich@owasp.org](mailto:bjoern.kimminich@owasp.org). All complaints will be reviewed and investigated\npromptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the reporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining the consequences for any action they deem\nin violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed unprofessional or unwelcome in the\ncommunity.\n\n**Consequence**: A private, written warning from community leaders, providing clarity around the nature of the violation\nand an explanation of why the behavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series of actions.\n\n**Consequence**: A warning with consequences for continued behavior. No interaction with the people involved, including\nunsolicited interaction with those enforcing the Code of Conduct, for a specified period of time. This includes avoiding\ninteractions in community spaces as well as external channels like social media. Violating these terms may lead to a\ntemporary or permanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including sustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public communication with the community for a specified\nperiod of time. No public or private interaction with the people involved, including unsolicited interaction with those\nenforcing the Code of Conduct, is allowed during this period. Violating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community standards, including sustained inappropriate\nbehavior, harassment of an individual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within the community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 2.0, available at\n[https://www.contributor-covenant.org/version/2/0/code_of_conduct.html][v2.0].\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct enforcement ladder][Mozilla CoC].\n\nFor answers to common questions about this code of conduct, see the FAQ\nat [https://www.contributor-covenant.org/faq][FAQ]. Translations are available at\n[https://www.contributor-covenant.org/translations][translations].\n\n[homepage]: https://www.contributor-covenant.org\n\n[v2.0]: https://www.contributor-covenant.org/version/2/0/code_of_conduct.html\n\n[Mozilla CoC]: https://github.com/mozilla/diversity\n\n[FAQ]: https://www.contributor-covenant.org/faq\n\n[translations]: https://www.contributor-covenant.org/translations\n\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.5771484375,
          "content": "# Contributing [![GitHub contributors](https://img.shields.io/github/contributors/juice-shop/juice-shop.svg)](https://github.com/juice-shop/juice-shop/graphs/contributors) [![JavaScript Style Guide](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com/)\n\n![CI/CD Pipeline](https://github.com/juice-shop/juice-shop/workflows/CI/CD%20Pipeline/badge.svg?branch=develop)\n[![Test Coverage](https://api.codeclimate.com/v1/badges/6206c8f3972bcc97a033/test_coverage)](https://codeclimate.com/github/juice-shop/juice-shop/test_coverage)\n[![Maintainability](https://api.codeclimate.com/v1/badges/6206c8f3972bcc97a033/maintainability)](https://codeclimate.com/github/juice-shop/juice-shop/maintainability)\n[![Cypress tests](https://img.shields.io/endpoint?url=https://dashboard.cypress.io/badge/detailed/3hrkhu/develop&style=flat&logo=cypress)](https://dashboard.cypress.io/projects/3hrkhu/runs)\n![Gitlab pipeline status](https://img.shields.io/gitlab/pipeline/bkimminich/juice-shop.svg)\n[![Crowdin](https://d322cqt584bo4o.cloudfront.net/owasp-juice-shop/localized.svg)](https://crowdin.com/project/owasp-juice-shop)\n![GitHub issues by-label \"help wanted\"](https://img.shields.io/github/issues/juice-shop/juice-shop/help%20wanted.svg?color=darkslateblue)\n![GitHub issues by-label \"good first issue\"](https://img.shields.io/github/issues/juice-shop/juice-shop/good%20first%20issue.svg?color=darkgreen)\n\n## Code Contributions\n\nThe minimum requirements for code contributions are:\n\n1. The code _must_ be compliant with the configured ESLint rules based on the [JS Standard Code Style](http://standardjs.com).\n2. All new and changed code _should_ have a corresponding unit and/or integration test.\n3. New and changed challenges _must_ have a corresponding e2e test.\n4. [Status checks](https://docs.github.com/en/github/collaborating-with-pull-requests/collaborating-on-repositories-with-code-quality-features/about-status-checks) _must_ pass for the last commit within your PR.\n5. All Git commits within a PR _must_ be [signed off](https://git-scm.com/docs/git-commit#Documentation/git-commit.txt--s) to indicate the contributor's agreement with the [Developer Certificate of Origin](https://developercertificate.org/).\n\n### Contribution Guidelines\n\nYou can find our detailed contribution guidelines over here:\n\n<https://pwning.owasp-juice.shop/companion-guide/latest/part3/contribution.html>\n\n## I18N Contributions\n\nLearn all about our crowd-sourced [translation project on Crowdin](https://crowdin.com/project/owasp-juice-shop)\nhere: <https://pwning.owasp-juice.shop/companion-guide/latest/part3/translation.html>\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 2.0302734375,
          "content": "FROM node:20-buster as installer\nCOPY . /juice-shop\nWORKDIR /juice-shop\nRUN npm i -g typescript ts-node\nRUN npm install --omit=dev --unsafe-perm\nRUN npm dedupe --omit=dev\nRUN rm -rf frontend/node_modules\nRUN rm -rf frontend/.angular\nRUN rm -rf frontend/src/assets\nRUN mkdir logs\nRUN chown -R 65532 logs\nRUN chgrp -R 0 ftp/ frontend/dist/ logs/ data/ i18n/\nRUN chmod -R g=u ftp/ frontend/dist/ logs/ data/ i18n/\nRUN rm data/chatbot/botDefaultTrainingData.json || true\nRUN rm ftp/legal.md || true\nRUN rm i18n/*.json || true\n\nARG CYCLONEDX_NPM_VERSION=latest\nRUN npm install -g @cyclonedx/cyclonedx-npm@$CYCLONEDX_NPM_VERSION\nRUN npm run sbom\n\n# workaround for libxmljs startup error\nFROM node:20-buster as libxmljs-builder\nWORKDIR /juice-shop\nRUN apt-get update && apt-get install -y build-essential python3\nCOPY --from=installer /juice-shop/node_modules ./node_modules\nRUN rm -rf node_modules/libxmljs/build && \\\n  cd node_modules/libxmljs && \\\n  npm run build\n\nFROM gcr.io/distroless/nodejs20-debian11\nARG BUILD_DATE\nARG VCS_REF\nLABEL maintainer=\"Bjoern Kimminich <bjoern.kimminich@owasp.org>\" \\\n    org.opencontainers.image.title=\"OWASP Juice Shop\" \\\n    org.opencontainers.image.description=\"Probably the most modern and sophisticated insecure web application\" \\\n    org.opencontainers.image.authors=\"Bjoern Kimminich <bjoern.kimminich@owasp.org>\" \\\n    org.opencontainers.image.vendor=\"Open Worldwide Application Security Project\" \\\n    org.opencontainers.image.documentation=\"https://help.owasp-juice.shop\" \\\n    org.opencontainers.image.licenses=\"MIT\" \\\n    org.opencontainers.image.version=\"17.1.1\" \\\n    org.opencontainers.image.url=\"https://owasp-juice.shop\" \\\n    org.opencontainers.image.source=\"https://github.com/juice-shop/juice-shop\" \\\n    org.opencontainers.image.revision=$VCS_REF \\\n    org.opencontainers.image.created=$BUILD_DATE\nWORKDIR /juice-shop\nCOPY --from=installer --chown=65532:0 /juice-shop .\nCOPY --chown=65532:0 --from=libxmljs-builder /juice-shop/node_modules/libxmljs ./node_modules/libxmljs\nUSER 65532\nEXPOSE 3000\nCMD [\"/juice-shop/build/app.js\"]\n"
        },
        {
          "name": "Gruntfile.js",
          "type": "blob",
          "size": 2.7841796875,
          "content": "/*\n * Copyright (c) 2014-2024 Bjoern Kimminich & the OWASP Juice Shop contributors.\n * SPDX-License-Identifier: MIT\n */\n\n'use strict'\n\nmodule.exports = function (grunt) {\n  const os = grunt.option('os') || process.env.PCKG_OS_NAME || ''\n  const platform = grunt.option('platform') || process.env.PCKG_CPU_ARCH || ''\n  const node = grunt.option('node') || process.env.nodejs_version || process.env.PCKG_NODE_VERSION || ''\n\n  grunt.initConfig({\n    pkg: grunt.file.readJSON('package.json'),\n\n    replace_json: {\n      manifest: {\n        src: 'package.json',\n        changes: {\n          'engines.node': (node || '<%= pkg.engines.node %>'),\n          os: (os ? [os] : '<%= pkg.os %>'),\n          cpu: (platform ? [platform] : '<%= pkg.cpu %>')\n        }\n      }\n    },\n\n    compress: {\n      pckg: {\n        options: {\n          mode: os === 'linux' ? 'tgz' : 'zip',\n          archive: 'dist/<%= pkg.name %>-<%= pkg.version %>' + (node ? ('_node' + node) : '') + (os ? ('_' + os) : '') + (platform ? ('_' + platform) : '') + (os === 'linux' ? '.tgz' : '.zip')\n        },\n        files: [\n          {\n            src: [\n              '.well-known/**',\n              'LICENSE',\n              '*.md',\n              'package.json',\n              'ctf.key',\n              'swagger.yml',\n              'server.ts',\n              'config.schema.yml',\n              'build/**',\n              '!build/reports/**',\n              'bom.json',\n              'bom.xml',\n              'config/*.yml',\n              'data/*.ts',\n              'data/static/**',\n              'data/chatbot/.gitkeep',\n              'encryptionkeys/**',\n              'frontend/dist/frontend/**',\n              'frontend/dist/bom/**',\n              'frontend/src/**/*.ts',\n              'ftp/**',\n              'i18n/.gitkeep',\n              'lib/**',\n              'models/*.ts',\n              'node_modules/**',\n              'routes/*.ts',\n              'uploads/complaints/.gitkeep',\n              'views/**'\n            ],\n            dest: 'juice-shop_<%= pkg.version %>/'\n          }\n        ]\n      }\n    }\n  })\n\n  grunt.registerTask('checksum', 'Create .md5 checksum files', function () {\n    const fs = require('fs')\n    const crypto = require('crypto')\n    fs.readdirSync('dist/').forEach(file => {\n      const buffer = fs.readFileSync('dist/' + file)\n      const md5 = crypto.createHash('md5')\n      md5.update(buffer)\n      const md5Hash = md5.digest('hex')\n      const md5FileName = 'dist/' + file + '.md5'\n      grunt.file.write(md5FileName, md5Hash)\n      grunt.log.write(`Checksum ${md5Hash} written to file ${md5FileName}.`).verbose.write('...').ok()\n      grunt.log.writeln()\n    })\n  })\n\n  grunt.loadNpmTasks('grunt-replace-json')\n  grunt.loadNpmTasks('grunt-contrib-compress')\n  grunt.registerTask('package', ['replace_json:manifest', 'compress:pckg', 'checksum'])\n}\n"
        },
        {
          "name": "HALL_OF_FAME.md",
          "type": "blob",
          "size": 19.810546875,
          "content": "# Hall of Fame\n\n## Core Team\n\n- [Björn Kimminich](https://github.com/bkimminich) aka `bkimminich`\n  ([Project Leader](https://www.owasp.org/index.php/Projects/Project_Leader_Responsibilities))\n  [![Keybase PGP](https://img.shields.io/keybase/pgp/bkimminich)](https://keybase.io/bkimminich)\n- [Jannik Hollenbach](https://github.com/J12934) aka `J12934`\n- [Timo Pagel](https://github.com/wurstbrot) aka `wurstbrot`\n- [Shubham Palriwala](https://github.com/ShubhamPalriwala) aka `ShubhamPalriwala`\n\n## GitHub Contributors\n\nAs reported by [`git-stats -a -s '2014'`](https://www.npmjs.com/package/git-stats) analysis of `master` as of Wed, 07 Aug\n2024 after deduplication with `.mailmap`.\n\n![Top git contributors](screenshots/git-stats.png)\n\n## Translators\n\nAs exported from\n[CrowdIn Top Members Report](https://crowdin.com/project/owasp-juice-shop/reports/top-members)\n(by # of translated words) for all languages as of Wed, 07 Aug\n2024 after [conversion into Markdown](https://thisdavej.com/copy-table-in-excel-and-paste-as-a-markdown-table/).\n\n| Name                               | Languages                                                                                                                                                                                                                                                                                                                                                                                                                                                                                        | Translated |\n|------------------------------------|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------|\n| Björn Kimminich (bkimminich)       | German; Dutch; German, Switzerland; Chinese Simplified; Romanian; Danish; Spanish; French; Chinese Traditional; Polish; Hebrew; Japanese; Turkish; Portuguese, Brazilian; Russian; Estonian; Portuguese; Arabic; Norwegian; Czech; Italian; Hindi; Swedish; Azerbaijani; Finnish; Indonesian; Chinese Traditional, Hong Kong; Thai; Korean; Burmese; Greek; Bulgarian; Georgian; Klingon; Latvian; Hungarian; Catalan; Lithuanian; Sinhala; Irish; Urdu (Pakistan); Armenian; Ukrainian; Bengali | 46776      |\n| tongsonghua (yolylight)            | Chinese Simplified                                                                                                                                                                                                                                                                                                                                                                                                                                                                               | 10517      |\n| Derek Chan (ChanDerek)             | Chinese Traditional                                                                                                                                                                                                                                                                                                                                                                                                                                                                              | 5411       |\n| REMOVED_USER                       | Romanian                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         | 5009       |\n| Yannick (yannickboy15)             | Dutch                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            | 3872       |\n| NCAA                               | Danish                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           | 3855       |\n| Enrique Rossel (erossel)           | Spanish                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          | 3416       |\n| Simon Basset (simbas)              | French                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           | 2933       |\n| MortenHC                           | Danish                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           | 2597       |\n| janesmae                           | Estonian                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         | 2594       |\n| toshiaizawa                        | Japanese                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         | 2302       |\n| mrtlgz                             | Turkish                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          | 2274       |\n| schattenbaum                       | German, Switzerland; German                                                                                                                                                                                                                                                                                                                                                                                                                                                                      | 2181       |\n| Jean Novak (jeannovak)             | Portuguese, Brazilian                                                                                                                                                                                                                                                                                                                                                                                                                                                                            | 2151       |\n| ShahinF27 (Khan27)                 | Azerbaijani                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      | 2125       |\n| Lang Mediator (lang.mediator)      | Russian                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          | 1949       |\n| Bogdan Mihai Nicolae (bogminic)    | Romanian                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         | 1824       |\n| htchen99                           | Chinese Traditional                                                                                                                                                                                                                                                                                                                                                                                                                                                                              | 1664       |\n| Timo Meriläinen (owasp.timo)       | Finnish                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          | 1470       |\n| Herisatry Lubaba (herisatry)       | French                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           | 1465       |\n| Dana-Maria Munteanu (danamunteanu) | Romanian                                                                                                                                                                                                                                                                                                                                                                                                                                                                                         | 1366       |\n| Dmitry (shipko)                    | Russian                                                                                                                                                                                                                                                                                                                                                                                                                                                                                          | 1243       |\n| Petr Gallus (PetrGallus)           | Czech                                                                                                                                                                                                                                                                                                                                                                                                                                                                                            | 1222       |\n| owangen                            | Norwegian; Danish; Klingon                                                                                                                                                                                                                                                                                                                                                                                                                                                                       | 1139       |\n| sjroh                              | Korean                                                                                                                                                                                                                                                                                                                                                                                                                                                                                           | 1063       |\n\n**Additional translations by:**\n\nGiovanni (cruzgio), Alexander Nissen (Nissen96), fabrizio1979, OrNol (TRNSRL), Jorge Estigarribia (jorgestiga), Pablo Barrera (pablo.barrera), Coink (CoinkWang), Phakphum Visetnut (phakphum_visetnut), Kamil Vavra (vavkamil), Abdo Farwan (abdofarwan), AviD (avidouglen), Marco Cavenati (Marcondiro), Stella Dineva (stella.dineva), Stavros M. (msstavros), Fredrik Bore (Boren), GiorgiSharia, Songrit Kitisriworapan (songritk), Oussama Bouthouri (Boussama), sergio.kubota, Ender Çulha (ecu), Claudio Snidero (cla7997), Marc Rüttler (MarcRler), Davis Freimanis (davisfreimanis), r0n1am, fieldhill13, thinbashane, Tomas Rosenqvist (Muamaidbengt), stejkenzie, rToxic, adeyosemanputra, Kylian Runembert (FunnHydra), Andrew Pio (siranen), Filipe Azevedo (filipaze98), Henry Hu (ninedter), zvargun, timexlord, Maria Tiurina (tiurina.maria), ztzxt, Bernhard Hirschmann (bhirschmann20), Daniel Paniagua (danielgpm), REMOVED_USER, Xotak (loulou310), asifnm, Estevam Arantes (Es7evam), REMOVED_USER, anderson silva (anderson.silva), FoteiniAthina, orjen, vientspam, Allan Kimmer Jensen (Saturate), Idomin Ninja (Idomin), BostonLow, Abdullah alshowaiey (Abdullah201), にのせき (ninoseki), Egert Aia (aiaegert), Nico Ådahl (nigotiator), Lars Grini (lars.grini), Jan Wolff (jan.wolff.owasp), Emil (EmilMarian), Pär Svedberg (grebdevs), rakzcs, Ido Har-Tuv (IdoHartuv), Karl (spruur), Adriano Pereira Junior (adrianoapj), Albert Camps (campsupc), Zenmaster212, jasinski_tomasz, Daan Sprenkels (dsprenkels), atteism, Aleksandra Niemyska (niemyskaa), Diego Andreé Porras Rivas (andree.rivas), mateomartinez, Rasmus Bidstrup (rasmusbidstrup), Koji O (marlboro20light), Bruno Rodrigues (bmvr), MoriRo13, Riotaro OKADA (riotaro), talisainen, jcmarcflores, Ahmet Duzenci (duzenci), OliverkeHU, GhosteFace, Kitisak Jirawannakool (jkitisak), Bart Decker (Decker), Daniel Christensen (Tejendi), Manu B (Rosina), Mohammad Febri Ramadlan (mohammadfebrir), coavacoffee, bill (Hawxdu), victor goncalves (noxes), Klas Fahlberg (FahlbergKlas), CarlCampbell, Natalia (notNao), Lenka Dubois (lenkadubois), Syahrol, rachidbm, Mattias Persson (mattiasbpersson), André Santos Duarte Fonseca (Andre_Duarte), sp8c3, cello-anders, Oussama Bouthouri (oussama.bouthouri), HelaBasa Group (HelaBasa), bmoritz, GK (lollipas), landinl, mrudul, Tetsutaro UEHARA (tetsutalow), Héctor Lecuanda (hlecuanda), Michiya Tominaga (nuwaa), Alain Herreman (PapillonPerdu), Anton Krivonosov (anton.krivonosov), Ilkka Savela (ile2021), gray litrot (graylitrot), Martin Hartl (hartlmartin), Mircea Ulmeanu (boltzmann.gt), Bryan Rioux (nayrbrioux), Roy Quiceno (rquiceno), Carlos Allendes (OwaspChile), redr0n19, saetgar, Shivam Soni (i-shivamsoni), ManuelFranz, Fernando (Sh4dow-BR), Anthony3000, Yang Lucas (Lucas.y), REMOVED_USER, hugoalh, nilfigo, Richardson Lima (contatorichardsonlima), soledad aro (cristinagarciaaro), Katharina Wittkowsky (kwittkowsky), Frederik Bøgeskov Johnsen (cpfbj), NaveenKumar (QAInsights), kahfiehudson, Ezequiel Andino (acidobinario), Origami, motofy, dav1ds, Stefan Daugaard Poulsen (cyberzed)\n\n## Special Thanks\n\n* Inspired by the \"classic\"\n  [BodgeIt Store](https://github.com/psiinon/bodgeit) by\n  [@psiinon](https://github.com/psiinon)\n* Revised OWASP Juice Shop and Juice Shop CTF logo artworks by Emily Gundry (courtesy\n  of [@SecureState](https://github.com/SecureState))\n* Wallpaper artworks by Mike Branscum (courtesy of\n  [@daylightstudio](https://github.com/daylightstudio))\n* Official\n  [OWASP Juice Shop Jingle](https://soundcloud.com/braimee/owasp-juice-shop-jingle)\n  written and performed by [Brian Johnson](https://github.com/braimee)\n* Juicy Chat Bot artworks by Kharisma Mulyana (courtesy of\n  [Timo Pagel](https://github.com/wurstbrot/))\n* Admin profile picture artworks by Kharisma Mulyana (courtesy of\n  [Timo Pagel](https://github.com/wurstbrot/))\n* OWASP Juice Shop LEGO™ Tower design & prototyping by [Bram Patelski](https://github.com/brampat/)\n\nAdditional thanks goes to the contractors we were able to hire for specific work packages over the years with OWASP funding:\n\n* [Pwning OWASP Juice Shop](https://leanpub.com/juice-shop) cover artwork\n  by [Patch Kroll](https://99designs.de/profiles/3099878)\n* [Banner](https://github.com/OWASP/owasp-swag/tree/master/projects/juice-shop/banners)\n  and\n  [flyer](https://github.com/OWASP/owasp-swag/tree/master/projects/juice-shop/flyers)\n  artwork by [logicainfo](https://99designs.de/profiles/logicainfo)\n* [Score Board redesign](https://www.figma.com/file/DwC5ErhRz6gb3eTZEYYriS/Juiceshop-Scoreboard?type=design&node-id=0-1&mode=design) by Vibhuti Arora\n\n## Stargazers (over time)\n\n[![Stargazers over time](https://starchart.cc/juice-shop/juice-shop.svg)](https://starchart.cc/juice-shop/juice-shop)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0751953125,
          "content": "Copyright (c) 2014-2024 Bjoern Kimminich & the OWASP Juice Shop contributors\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the \"Software\"), to deal in the Software without\nrestriction, including without limitation the rights to use,\ncopy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the\nSoftware is furnished to do so, subject to the following\nconditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 15.5927734375,
          "content": "# ![Juice Shop Logo](https://raw.githubusercontent.com/juice-shop/juice-shop/master/frontend/src/assets/public/images/JuiceShop_Logo_100px.png) OWASP Juice Shop\n\n[![OWASP Flagship](https://img.shields.io/badge/owasp-flagship%20project-48A646.svg)](https://owasp.org/projects/#sec-flagships)\n[![GitHub release](https://img.shields.io/github/release/juice-shop/juice-shop.svg)](https://github.com/juice-shop/juice-shop/releases/latest)\n[![Twitter Follow](https://img.shields.io/twitter/follow/owasp_juiceshop.svg?style=social&label=Follow)](https://twitter.com/owasp_juiceshop)\n[![Subreddit subscribers](https://img.shields.io/reddit/subreddit-subscribers/owasp_juiceshop?style=social)](https://reddit.com/r/owasp_juiceshop)\n\n![CI/CD Pipeline](https://github.com/juice-shop/juice-shop/workflows/CI/CD%20Pipeline/badge.svg?branch=master)\n[![Test Coverage](https://api.codeclimate.com/v1/badges/6206c8f3972bcc97a033/test_coverage)](https://codeclimate.com/github/juice-shop/juice-shop/test_coverage)\n[![Maintainability](https://api.codeclimate.com/v1/badges/6206c8f3972bcc97a033/maintainability)](https://codeclimate.com/github/juice-shop/juice-shop/maintainability)\n[![Code Climate technical debt](https://img.shields.io/codeclimate/tech-debt/juice-shop/juice-shop)](https://codeclimate.com/github/juice-shop/juice-shop/trends/technical_debt)\n[![Cypress tests](https://img.shields.io/endpoint?url=https://dashboard.cypress.io/badge/simple/3hrkhu/master&style=flat&logo=cypress)](https://dashboard.cypress.io/projects/3hrkhu/runs)\n[![OpenSSF Best Practices](https://www.bestpractices.dev/projects/223/badge)](https://www.bestpractices.dev/projects/223)\n![GitHub stars](https://img.shields.io/github/stars/juice-shop/juice-shop.svg?label=GitHub%20%E2%98%85&style=flat)\n[![Contributor Covenant](https://img.shields.io/badge/Contributor%20Covenant-v2.0%20adopted-ff69b4.svg)](CODE_OF_CONDUCT.md)\n\n> [The most trustworthy online shop out there.](https://twitter.com/dschadow/status/706781693504589824)\n> ([@dschadow](https://github.com/dschadow)) —\n> [The best juice shop on the whole internet!](https://twitter.com/shehackspurple/status/907335357775085568)\n> ([@shehackspurple](https://twitter.com/shehackspurple)) —\n> [Actually the most bug-free vulnerable application in existence!](https://youtu.be/TXAztSpYpvE?t=26m35s)\n> ([@vanderaj](https://twitter.com/vanderaj)) —\n> [First you 😂😂then you 😢](https://twitter.com/kramse/status/1073168529405472768)\n> ([@kramse](https://twitter.com/kramse)) —\n> [But this doesn't have anything to do with juice.](https://twitter.com/coderPatros/status/1199268774626488320)\n> ([@coderPatros' wife](https://twitter.com/coderPatros))\n\nOWASP Juice Shop is probably the most modern and sophisticated insecure web application! It can be used in security\ntrainings, awareness demos, CTFs and as a guinea pig for security tools! Juice Shop encompasses vulnerabilities from the\nentire\n[OWASP Top Ten](https://owasp.org/www-project-top-ten) along with many other security flaws found in real-world\napplications!\n\n![Juice Shop Screenshot Slideshow](screenshots/slideshow.gif)\n\nFor a detailed introduction, full list of features and architecture overview please visit the official project page:\n<https://owasp-juice.shop>\n\n## Table of contents\n\n- [Setup](#setup)\n    - [From Sources](#from-sources)\n    - [Packaged Distributions](#packaged-distributions)\n    - [Docker Container](#docker-container)\n    - [Vagrant](#vagrant)\n- [Demo](#demo)\n- [Documentation](#documentation)\n    - [Node.js version compatibility](#nodejs-version-compatibility)\n    - [Troubleshooting](#troubleshooting)\n    - [Official companion guide](#official-companion-guide)\n- [Contributing](#contributing)\n- [References](#references)\n- [Merchandise](#merchandise)\n- [Donations](#donations)\n- [Contributors](#contributors)\n- [Licensing](#licensing)\n\n## Setup\n\n> You can find some less common installation variations as well as instructions to run Juice Shop on a variety of cloud computing providers in\n> [the _Running OWASP Juice Shop_ documentation](https://pwning.owasp-juice.shop/companion-guide/latest/part1/running.html).\n\n### From Sources\n\n![GitHub repo size](https://img.shields.io/github/repo-size/juice-shop/juice-shop.svg)\n\n1. Install [node.js](#nodejs-version-compatibility)\n2. Run `git clone https://github.com/juice-shop/juice-shop.git --depth 1` (or\n   clone [your own fork](https://github.com/juice-shop/juice-shop/fork)\n   of the repository)\n3. Go into the cloned folder with `cd juice-shop`\n4. Run `npm install` (only has to be done before first start or when you change the source code)\n5. Run `npm start`\n6. Browse to <http://localhost:3000>\n\n### Packaged Distributions\n\n[![GitHub release](https://img.shields.io/github/downloads/juice-shop/juice-shop/total.svg)](https://github.com/juice-shop/juice-shop/releases/latest)\n[![SourceForge](https://img.shields.io/sourceforge/dm/juice-shop?label=sourceforge%20downloads)](https://sourceforge.net/projects/juice-shop/)\n[![SourceForge](https://img.shields.io/sourceforge/dt/juice-shop?label=sourceforge%20downloads)](https://sourceforge.net/projects/juice-shop/)\n\n1. Install a 64bit [node.js](#nodejs-version-compatibility) on your Windows, MacOS or Linux machine\n2. Download `juice-shop-<version>_<node-version>_<os>_x64.zip` (or\n   `.tgz`) attached to\n   [latest release](https://github.com/juice-shop/juice-shop/releases/latest)\n3. Unpack and `cd` into the unpacked folder\n4. Run `npm start`\n5. Browse to <http://localhost:3000>\n\n> Each packaged distribution includes some binaries for `sqlite3` and\n> `libxmljs` bound to the OS and node.js version which `npm install` was\n> executed on.\n\n### Docker Container\n\n[![Docker Pulls](https://img.shields.io/docker/pulls/bkimminich/juice-shop.svg)](https://hub.docker.com/r/bkimminich/juice-shop)\n![Docker Stars](https://img.shields.io/docker/stars/bkimminich/juice-shop.svg)\n[![](https://images.microbadger.com/badges/image/bkimminich/juice-shop.svg)](https://microbadger.com/images/bkimminich/juice-shop\n\"Get your own image badge on microbadger.com\")\n[![](https://images.microbadger.com/badges/version/bkimminich/juice-shop.svg)](https://microbadger.com/images/bkimminich/juice-shop\n\"Get your own version badge on microbadger.com\")\n\n1. Install [Docker](https://www.docker.com)\n2. Run `docker pull bkimminich/juice-shop`\n3. Run `docker run --rm -p 127.0.0.1:3000:3000 bkimminich/juice-shop`\n4. Browse to <http://localhost:3000> (on macOS and Windows browse to\n   <http://192.168.99.100:3000> if you are using docker-machine instead of the native docker installation)\n\n### Vagrant\n\n1. Install [Vagrant](https://www.vagrantup.com/downloads.html) and\n   [Virtualbox](https://www.virtualbox.org/wiki/Downloads)\n2. Run `git clone https://github.com/juice-shop/juice-shop.git` (or\n   clone [your own fork](https://github.com/juice-shop/juice-shop/fork)\n   of the repository)\n3. Run `cd vagrant && vagrant up`\n4. Browse to [192.168.56.110](http://192.168.56.110)\n\n## Demo\n\nFeel free to have a look at the latest version of OWASP Juice Shop:\n<http://demo.owasp-juice.shop>\n\n> This is a deployment-test and sneak-peek instance only! You are __not\n> supposed__ to use this instance for your own hacking endeavours! No\n> guaranteed uptime! Guaranteed stern looks if you break it!\n\n## Documentation\n\n### Node.js version compatibility\n\n![GitHub package.json dynamic](https://img.shields.io/github/package-json/cpu/bkimminich/juice-shop)\n![GitHub package.json dynamic](https://img.shields.io/github/package-json/os/bkimminich/juice-shop)\n\nOWASP Juice Shop officially supports the following versions of\n[node.js](http://nodejs.org) in line with the official\n[node.js LTS schedule](https://github.com/nodejs/LTS) as close as possible. Docker images and packaged distributions are\noffered accordingly.\n\n| node.js | Supported               | Tested                                                    | [Packaged Distributions](#packaged-distributions) | [Docker images](#docker-container) from `master` | [Docker images](#docker-container) from `develop` |\n|:--------|:------------------------|:----------------------------------------------------------|:--------------------------------------------------|:-------------------------------------------------|:--------------------------------------------------|\n| 23.x    | :x:                     | :x:                                                       |                                                   |                                                  |                                                   |\n| 22.x    | :heavy_check_mark:      | :heavy_check_mark:                                        | Windows (`x64`), MacOS (`x64`), Linux (`x64`)     |                                                  |                                                   |\n| 21.x    | ( :heavy_check_mark:  ) | :heavy_check_mark:                                        | Windows (`x64`), MacOS (`x64`), Linux (`x64`)     |                                                  |                                                   |\n| 20.x    | :heavy_check_mark:      | :heavy_check_mark:                                        | Windows (`x64`), MacOS (`x64`), Linux (`x64`)     | `latest` (`linux/amd64`, `linux/arm64`)          | `snapshot` (`linux/amd64`, `linux/arm64`)         |\n| 19.x    | ( :heavy_check_mark: )  | :x:                                                       |                                                   |                                                  |                                                   |\n| 18.x    | :heavy_check_mark:      | :heavy_check_mark:                                        | Windows (`x64`), MacOS (`x64`), Linux (`x64`)     |                                                  |                                                   |\n| <18.x   | :x:                     | :x:                                                       |                                                   |                                                  |                                                   |\n\nJuice Shop is automatically tested _only on the latest `.x` minor version_ of each node.js version mentioned above!\nThere is no guarantee that older minor node.js releases will always work with Juice Shop!\nPlease make sure you stay up to date with your chosen version.\n\n### Troubleshooting\n\n[![Gitter](http://img.shields.io/badge/gitter-join%20chat-1dce73.svg)](https://gitter.im/bkimminich/juice-shop)\n\nIf you need help with the application setup please check our\n[our existing _Troubleshooting_](https://pwning.owasp-juice.shop/appendix/troubleshooting.html)\nguide. If this does not solve your issue please post your specific problem or question in the\n[Gitter Chat](https://gitter.im/bkimminich/juice-shop) where community members can best try to help you.\n\n:stop_sign: **Please avoid opening GitHub issues for support requests or questions!**\n\n### Official companion guide\n\n[![Write Goodreads Review](https://img.shields.io/badge/goodreads-write%20review-49557240.svg)](https://www.goodreads.com/review/edit/49557240)\n\nOWASP Juice Shop comes with an official companion guide eBook. It will give you a complete overview of all\nvulnerabilities found in the application including hints how to spot and exploit them. In the appendix you will even\nfind complete step-by-step solutions to every challenge. Extensive documentation of\n[custom re-branding](https://pwning.owasp-juice.shop/companion-guide/latest/part4/customization.html),\n[CTF-support](https://pwning.owasp-juice.shop/companion-guide/latest/part4/ctf.html),\n[trainer's guide](https://pwning.owasp-juice.shop/companion-guide/latest/part4/trainers.html)\nand much more is also included.\n\n[Pwning OWASP Juice Shop](https://leanpub.com/juice-shop) is published under\n[CC BY-NC-ND 4.0](https://creativecommons.org/licenses/by-nc-nd/4.0/)\nand is available **for free** in PDF, Kindle and ePub format on LeanPub. You can also\n[browse the full content online](https://pwning.owasp-juice.shop)!\n\n[<img alt=\"Pwning OWASP Juice Shop cover\" src=\"https://raw.githubusercontent.com/juice-shop/pwning-juice-shop/master/docs/modules/ROOT/assets/images/cover.jpg\" width=\"200\"/>](https://leanpub.com/juice-shop)\n[<img alt=\"Pwning OWASP Juice Shop back cover\" src=\"https://raw.githubusercontent.com/juice-shop/pwning-juice-shop/master/docs/modules/ROOT/assets/images/introduction/back.jpg\" width=\"200\"/>](https://leanpub.com/juice-shop)\n\n## Contributing\n\n[![GitHub contributors](https://img.shields.io/github/contributors/bkimminich/juice-shop.svg)](https://github.com/juice-shop/juice-shop/graphs/contributors)\n[![JavaScript Style Guide](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com/)\n[![Crowdin](https://d322cqt584bo4o.cloudfront.net/owasp-juice-shop/localized.svg)](https://crowdin.com/project/owasp-juice-shop)\n![GitHub issues by-label](https://img.shields.io/github/issues/bkimminich/juice-shop/help%20wanted.svg)\n![GitHub issues by-label](https://img.shields.io/github/issues/bkimminich/juice-shop/good%20first%20issue.svg)\n\nWe are always happy to get new contributors on board! Please check\n[CONTRIBUTING.md](CONTRIBUTING.md) to learn how to\n[contribute to our codebase](CONTRIBUTING.md#code-contributions) or the\n[translation into different languages](CONTRIBUTING.md#i18n-contributions)!\n\n## References\n\nDid you write a blog post, magazine article or do a podcast about or mentioning OWASP Juice Shop? Or maybe you held or\njoined a conference talk or meetup session, a hacking workshop or public training where this project was mentioned?\n\nAdd it to our ever-growing list of [REFERENCES.md](REFERENCES.md) by forking and opening a Pull Request!\n\n## Merchandise\n\n* On [Spreadshirt.com](http://shop.spreadshirt.com/juiceshop) and\n  [Spreadshirt.de](http://shop.spreadshirt.de/juiceshop) you can get some swag (Shirts, Hoodies, Mugs) with the official\n  OWASP Juice Shop logo\n* On\n  [StickerYou.com](https://www.stickeryou.com/products/owasp-juice-shop/794)\n  you can get variants of the OWASP Juice Shop logo as single stickers to decorate your laptop with. They can also print\n  magnets, iron-ons, sticker sheets and temporary tattoos.\n\n## Donations\n\n[![](https://img.shields.io/badge/support-owasp%20juice%20shop-blue)](https://owasp.org/donate/?reponame=www-project-juice-shop&title=OWASP+Juice+Shop)\n\nThe OWASP Foundation gratefully accepts donations via Stripe. Projects such as Juice Shop can then request reimbursement\nfor expenses from the Foundation. If you'd like to express your support of the Juice Shop project, please make sure to\ntick the \"Publicly list me as a supporter of OWASP Juice Shop\" checkbox on the donation form. You can find our more\nabout donations and how they are used here:\n\n<https://pwning.owasp-juice.shop/part3/donations.html>\n\n## Contributors\n\nThe OWASP Juice Shop core project team are:\n\n- [Björn Kimminich](https://github.com/bkimminich) aka `bkimminich`\n  ([Project Leader](https://www.owasp.org/index.php/Projects/Project_Leader_Responsibilities))\n  [![Keybase PGP](https://img.shields.io/keybase/pgp/bkimminich)](https://keybase.io/bkimminich)\n- [Jannik Hollenbach](https://github.com/J12934) aka `J12934`\n- [Timo Pagel](https://github.com/wurstbrot) aka `wurstbrot`\n- [Shubham Palriwala](https://github.com/ShubhamPalriwala) aka `ShubhamPalriwala`\n\nFor a list of all contributors to the OWASP Juice Shop please visit our\n[HALL_OF_FAME.md](HALL_OF_FAME.md).\n\n## Licensing\n\n[![license](https://img.shields.io/github/license/bkimminich/juice-shop.svg)](LICENSE)\n\nThis program is free software: you can redistribute it and/or modify it under the terms of the [MIT license](LICENSE).\nOWASP Juice Shop and any contributions are Copyright © by Bjoern Kimminich & the OWASP Juice Shop contributors\n2014-2024.\n\n![Juice Shop Logo](https://raw.githubusercontent.com/bkimminich/juice-shop/master/frontend/src/assets/public/images/JuiceShop_Logo_400px.png)\n"
        },
        {
          "name": "REFERENCES.md",
          "type": "blob",
          "size": 44.376953125,
          "content": "# References [![Mentioned in Awesome AppSec](https://awesome.re/mentioned-badge.svg)](https://github.com/paragonie/awesome-appsec)\n\nDid you write a blog post, magazine article or do a podcast about or mentioning OWASP Juice Shop? Add it to this file\nand open a PR! The same goes for conference or meetup talks, workshops or trainings you did where this project was\nmentioned or used!\n\n> :bulb: indicates resources that contain _hints for solving challenges_\n> of the OWASP Juice Shop. These are supposed to be helpful whenever you\n> get stuck. :godmode: indicates resources that _spoiler entire\n> challenge solutions_, so you might not want to view them before\n> tackling these challenges yourself! :mega: marks short friendly shout\n> outs. Finally, the :dollar: bill marks commercial resources.\n\n## Table of contents\n\n* [Awards](#awards--trophy-)\n* [Web Links](#web-links)\n  + [Pod- & Webcasts](#pod---webcasts)\n  + [Blogs & Articles](#blogs--articles)\n* [Lectures and Trainings](#lectures-and-trainings)\n* [Summits & Open Source Events](#summits--open-source-events)\n  + [Google Summer of Code](#googlesummerofcode)\n* [Conference and Meetup Appearances](#conference-and-meetup-appearances)\n  - [2024](#2024)\n  - [2023](#2023)\n  - [2022](#2022)\n  - [2021](#2021)\n  - [2020](#2020)\n  - [2019](#2019)\n  - [2018](#2018)\n  - [2017](#2017)\n  - [2016](#2016)\n  - [2015](#2015)\n\n## Awards :trophy:\n\n* [Heroku Button of the Month](https://hello.heroku.com/webmail/36622/679286305/8049a634b1a01b0aa75c0966325856dc9a463b7f1beeb6a2f32cbb30248b5bc6)\n  in November 2017\n  ([:camera:](https://twitter.com/owasp_juiceshop/status/930917114948587526))\n* [Heroku Button of the Month](https://hello.heroku.com/webmail/36622/844098776/9fe33b8eda9eb79bca7ee569888b1874)\n  in March 2019\n  ([:camera:](https://twitter.com/owasp_juiceshop/status/1110641064673710080))\n\n## Web Links\n\n### Pod- & Webcasts\n\n* [ZAP Chat 05 Modern Apps Part 1](https://www.youtube.com/watch?v=Rq_d7OLmMfw) on [ZAP](https://www.youtube.com/@psiinon) with Simon Bennetts\n* [OWASP Spotlight - Project 25 - OWASP Juice Shop](https://www.youtube.com/watch?v=--50rE76EeA) by Vandana Verma with\n  Björn Kimminich\n* [Visual application security testing with ZAP and Simon Bennetts #DemoDays](https://youtu.be/4xBJsRNV9ds) by [GitHub](https://www.youtube.com/channel/UC7c3Kb6jYCRj4JOHHZTxKsQ) with Simon Bennetts :mega:\n* [Exploiting an SSRF vulnerability](https://www.youtube.com/watch?v=OvwNa5CN5yc) by [PinkDraconian](https://www.youtube.com/channel/UCmXwpkCXmIKjoRLMsq9I3RA) :bulb:\n* [OWASP Spotlight - Project 20 - OWASP Security Pin](https://www.youtube.com/watch?v=GnSddCV4UwM) by Vandana Verma with\n  Timo Pagel :mega:\n* [People | Process | Technology Podcast](https://soundcloud.com/owasp-podcast/)\n  (fka \"OWASP 24/7 Podcast\"):\n    * [OWASP Flagship Projects - Episode 02](https://soundcloud.com/owasp-podcast/owasp-flagship-projects-episode-02)\n    * [Less than 10 Minutes Series: The Juice Shop Project](https://soundcloud.com/owasp-podcast/less-than-10-minutes-series-the-juice-shop-project)\n* [Learn Web App Security Penetration Testing with Juice Shop \\[Free\\]](https://youtu.be/ShUTDUYEMWA)\n  by\n  [Gerald Auger - Simply Cyber](https://www.YouTube.com/channel/UCG-48Ki-b6W_siaUkukJOSw)\n* [Web security for web developers with Zaproxy by Simon Bennetts](https://youtu.be/54UV2_JwcIY)\n  with\n  [Eddie Jaoude](https://www.YouTube.com/channel/UC5mnBodB73bR88fLXHSfzYA)\n  :mega:\n* [ZAP in Ten](https://www.alldaydevops.com/zap-in-ten) with Simon Bennetts\n    * [ZAP in Ten: ADDO Workshop Section 1 - Introduction](https://play.vidyard.com/BAmiaxyzS3g2BCgX2vbVvV)\n      :mega:\n    * [ZAP in Ten: ADDO Workshop Section 3 - Packaged Scans](https://play.vidyard.com/iT5C1onahsh3YhQi5SRnLL)\n      :mega:\n    * [ZAP in Ten: ADDO Workshop Section 4 - Intro to Authentication](https://play.vidyard.com/zwWm4qMRc8wD2KAgozvC5t)\n      :mega:\n    * [ZAP in Ten: ADDO Workshop Section 6 - Standard Auth with JuiceShop](https://play.vidyard.com/igf3A8UdZ6QAGiFjEpLH86)\n    * [ZAP in Ten: ADDO Workshop Section 8 - JuiceShop SSO Authentication](https://play.vidyard.com/TMcBcuhyPt57sUqPcJUtpv)\n* 15min video tutorial by\n  [Nick Malcolm](https://www.YouTube.com/channel/UCgU77NClL2pLS92viQro6yA):\n  [OWASP Juice Shop 101](https://youtu.be/8ZYoe0xu6QY) :godmode:\n* [Application Security Podcast](https://securityjourney.com/application-security-podcast):\n    * [Björn Kimminich -- OWASP Juice Shop](https://www.buzzsprout.com/1730684/14121640-bjorn-kimminich-owasp-juice-shop) ([YouTube](https://youtu.be/ay5A7BcZxIs?si=nzhYfVqG5o7l9bWA)) \n    * Episode 7.2:\n      [Jannik Hollenbach — Multijuicer: JuiceShop with a side of Kubernetes](https://podcast.securityjourney.com/jannik-hollenbach-multijuicer-juiceshop-with-a-side-of-kubernetes/)\n      ([YouTube](https://youtu.be/3M6EMDKIAYs))\n    * Episode 5.21:\n      [Season 5 Finale — A cross section of #AppSec (S05E21)](https://podcast.securityjourney.com/season-5-finale-a-cross-section-of-appsec/)\n      (contains\n      [5 minute AppSec: Björn Kimminich — JuiceShop](https://www.securityjourney.com/blog/bjorn-kimminich-juiceship-5-minute-appsec/)\n      entirely)\n    * Episode 5.20:\n      [Ronnie Flathers - Security programs big and small](https://podcast.securityjourney.com/ronnie-flathers-security-programs-big-and-small/)\n      :mega:\n    * Episode 5.9:\n      [The new JuiceShop, GSOC, and Open Security Summit](https://securityjourney.com/blog/bjorn-kimminich-the-new-juiceshop-gsoc-and-open-security-summit/)\n    * 5 minute AppSec:\n      [Björn Kimminich — JuiceShop](https://www.securityjourney.com/blog/bjorn-kimminich-juiceship-5-minute-appsec/)\n    * Episode 4.27:\n      [Season 4 Finale (S04E27)](https://www.securityjourney.com/blog/season-4-finale-s04e27/)\n      (snippet from\n      [4.17](https://securityjourney.com/blog/the-joy-of-the-vulnerable-web-juiceshops04e17/))\n    * Episode 4.20:\n      [Security Culture Hacking: Disrupting the Security Status Quo (S04E20)](https://www.securityjourney.com/blog/security-culture-hacking-disrupting-the-security-status-quo-s04e20/)\n      :mega:\n    * Episode 4.17:\n      [The Joy of the Vulnerable Web: JuiceShop (S04E17)](https://securityjourney.com/blog/the-joy-of-the-vulnerable-web-juiceshops04e17/)\n* Webcast recording on [7 Minute Security](https://7ms.us):\n  [DIY $500 Pentest Lab - Part 1](https://www.YouTube.com/watch?v=7qnaR6ZmJzA)\n  :mega:\n* Recorded live streams from the\n  [Twitch](https://aka.ms/DevSlopTwitch)/[Mixer](https://aka.ms/DevSlop-Mixer)\n  [OWASP DevSlop](https://devslop.co/) Show:\n    * [OWASP DevSlop E12 - Juice Shop with Björn Kimminich](https://www.twitch.tv/videos/337620852)\n      ([YouTube](https://youtu.be/KEYWRtGNDEc)) :godmode:\n* Webcast recording on\n  [Signal Sciences](https://vimeo.com/signalsciences):\n  [Secure Development Lessons from Purposely Insecure Applications](https://vimeo.com/241965102/40f6b1778b)\n* [7 Minute Security](https://7ms.us) Podcast:\n    * Episode #403:\n      [7MOOMAMA - Juice Shop Song + Backdoors and Breaches Jingle](https://7ms.us/7ms-403-7moomama-juice-shop-song-backdoors-and-breaches-jingle/)\n    * Episode #318:\n      [Interview with Bjorn Kimminich of OWASP Juice Shop](https://7ms.us/7ms-318-interview-with-bjorn-kimminich-of-owasp-juice-shop/)\n    * Shout outs in various episodes:\n      [#347](https://7ms.us/7ms-347-happy-5th-birthday-to-7ms/),\n      [#342](https://7ms.us/7ms-342-interview-with-matt-mccullough/),\n      [#310](https://7ms.us/7ms-310/),\n      [#309](https://7ms.us/7ms-309-password-cracking-in-the-cloud-part-2/),\n      [#306](https://7ms.us/7ms-306-a-peek-into-the-7ms-mail-bag-part-2/)\n      and [#282](https://7ms.us/7ms-282-a-peek-into-the-7ms-mail-bag/)\n      :mega:\n* Video tutorial about automating web application security scans with\n  [OWASP ZAP](https://www.owasp.org/index.php/OWASP_Zed_Attack_Proxy_Project)\n  using Juice Shop as the tested app:\n  [All you need is Zaproxy - Security Testing for WebApps Made Easy](https://www.YouTube.com/watch?v=AQX84p9NhqY)\n    * [Example integration as a Docker Compose script](https://github.com/Soluto/webdriverio-zap-proxy)\n    * [Scan results of the example integration](https://jsfiddle.net/62aedL6n/)\n\n### Blogs & Articles\n\n* Blog post on [A Tester's Journey](https://www.lisihocke.com/) by Lisi Hocke: [Open Security Conference 2024 - A Memorable Beginning](https://www.lisihocke.com/2024/10/open-security-conference-2024-a-memorable-beginning.html)\n* Blog post on [OWASP.org](https://owasp.org) by Björn Kimminich: [OWASP Juice Shop 2023 achievements and beyond](https://owasp.org/blog/2023/10/10/juice-shop-2023.html)\n* Article on [Cobalt.io Developer Best Practices](https://developer.cobalt.io/bestpractices/): [Validate User Input](https://developer.cobalt.io/bestpractices/input-validation/)\n* Blog post (:de:) on [Dev-Insider](https://www.dev-insider.de/): [OWASP Juice Shop lädt zum Hacken ein](https://www.dev-insider.de/owasp-juice-shop-laedt-zum-hacken-ein-a-968485/) :godmode:\n* Blog post on [OWASP.org](https://owasp.org) by Björn Kimminich:\n  [OWASP Juice Shop v10.0.0 released](https://owasp.org/2020/03/17/juice-shop-v10.html)\n* [20+ Free Resources To Legally Practice Your Ethical Hacking Skills](https://blog.elearnsecurity.com/free-resources-to-legally-practice-ethical-hacking.html?utm_source=twitter&utm_medium=social&utm_campaign=eh_resources_blogpost)\n  on [eLearnSecurity](https://blog.elearnsecurity.com/) :mega:\n* Blog post on\n  [The Daily Swig - Cybersecurity news and views](https://portswigger.net/daily-swig):\n  [OWASP security projects showcased at All Day DevOps conference](https://portswigger.net/daily-swig/owasp-security-projects-showcased-at-all-day-devops-conference)\n* Blog post on [klarsen.net - A Maker's Blog](https://klarsen.net):\n  [OWASP Juice Shop SQLi](https://klarsen.net/python/owasp-juice-shop-sqli/)\n* White paper by Kelley Bryant:\n  [OWASP: Application Security's Best Friend](https://drive.google.com/file/d/0ByCGDrCX7bx7dnB0TGJJSnNzRmhtUUE4U1RfR3d0YVl4RHFr/view)\n* Article (:es:) on Medium by\n  [Elzer Pineda](https://medium.com/@elzerjp):\n  [Null Byte Attack Juice Shop y algo mas!!](https://medium.com/@elzerjp/null-byte-attack-juice-shop-y-algo-mas-2c6d271b2fd5)\n  :godmode:\n* Blog post on [Omer Levi Hevroni's blog](https://www.omerlh.info/):\n  [Hacking Juice Shop, the DevSecOps Way](https://www.omerlh.info/2018/12/23/hacking-juice-shop-the-devsecops-way/)\n* Blog post on [Jannik Hollenbach's blog](https://medium.com/@j12934):\n  [Testing out ModSecurity CRS with OWASP JuiceShop](https://medium.com/@j12934/testing-out-modsecurity-crs-with-owasp-juiceshop-649830932365)\n* OWASP Portland Chapter meeting writeup on the\n  [Daylight Blog](https://thedaylightstudio.com/blog):\n  [Vulnerability Hunting Practice Using OWASP Juice Shop](https://thedaylightstudio.com/blog/2018/11/20/vulnerability-hunting-practice-using-owasp-juice-shop)\n* Blog post on [Security Boulevard](https://securityboulevard.com):\n  [From Dev to InfoSec Part 1 – The Journey Begins](https://securityboulevard.com/2018/08/from-dev-to-infosec-part-1-the-journey-begins/)\n* Blog post on\n  [Null Byte :: WonderHowTo](https://null-byte.wonderhowto.com):\n  [Beginner's Guide to OWASP Juice Shop, Your Practice Hacking Grounds for the 10 Most Common Web App Vulnerabilities](https://null-byte.wonderhowto.com/how-to/beginners-guide-owasp-juice-shop-your-practice-hacking-grounds-for-10-most-common-web-app-vulnerabilities-0185103/)\n  :godmode:\n* Blog posts on\n  [DevelopSec - Developing Better Security](https://www.developsec.com/):\n    * [Installing OWASP JuiceShop with Docker](https://www.developsec.com/2018/05/10/installing-owasp-juiceshop-with-docker/)\n      ([YouTube](https://www.YouTube.com/watch?v=ftS8I7WeKtw))\n    * [Installing OWASP JuiceShop with Heroku](https://www.developsec.com/2018/05/15/installing-owasp-juiceshop-with-heroku/)\n      ([YouTube](https://www.YouTube.com/watch?v=umrLbJkJRN0))\n    * [Burp Extension – Juice Shop Routes](https://www.developsec.com/2018/05/18/burp-extension-juice-shop-routes/)\n      ([YouTube](https://www.YouTube.com/watch?v=o628SfvwHp0)) :godmode:\n* Blog posts on\n  [Jason Haley - Ramblings from an Independent Consultant](http://www.jasonhaley.com/):\n    * [How to Setup OWASP Juice Shop on Azure (Part 1 of 3)](http://www.jasonhaley.com/post/How-to-Setup-OWASP-Juice-Shop-on-Azure-%28Part-1-of-3%29)\n    * [Setup OWASP Juice Shop in Web App for Containers (Part 2 of 3)](http://www.jasonhaley.com/post/Setup-OWASP-Juice-Shop-in-Web-App-for-Containers-%28Part-2-of-3%29)\n    * [Setup OWASP Juice Shop in Azure Container Instances (Part 3 of 3)](http://www.jasonhaley.com/post/Setup-OWASP-Juice-Shop-in-Azure-Container-Instances-%28Part-3-of-3%29)\n* Blog post on [Josh Grossman's blog](https://joshcgrossman.com):\n  [Setting up an OWASP Juice Shop CTF](https://joshcgrossman.com/2018/03/15/setting-up-an-owasp-juice-shop-ctf/)\n* Blog post on [Mozilla Hacks](https://hacks.mozilla.org):\n  [Hands-On Web Security: Capture the Flag with OWASP Juice Shop](https://hacks.mozilla.org/2018/03/hands-on-web-security-capture-the-flag-with-owasp-juice-shop/)\n* Blog post (:de:) on [heise Developer](https://www.heise.de/developer):\n  [Sicherheits-Etikette: Security in der Softwareentwicklung](https://www.heise.de/developer/artikel/Sicherheits-Etikette-Security-in-der-Softwareentwicklung-3986402.html)\n  :mega:\n* Blog Post on\n  [Stuart Winter-Tear's Blog](https://stuartwintertear.net):\n  [OWASP Juice Shop Vulnerable Webapp](https://stuartwintertear.net/owasp-juice-shop-vulnerable-webapp)\n  ([Peerlyst cross-post](https://www.peerlyst.com/posts/owasp-juice-shop-vulnerable-webapp-stuart-winter-tear))\n* Blog posts on [OWASP Summit 2017](https://owaspsummit.org):\n    * [Juice Shop v4.0.0 Live Release](https://owaspsummit.org/2017/06/15/Juice-Shop-Live-Release-v4.html)\n    * [Juice Shop's call to pre-summit action](https://owaspsummit.org/2017/05/27/Juice-Shops-call-to-pre-summit-action.html)\n* Vulnerable website collection on\n  [Bonkers About Tech](https://www.bonkersabouttech.com):\n  [40+ Intentionally Vulnerable Websites To (Legally) Practice Your Hacking Skills](https://www.bonkersabouttech.com/security/40-intentionally-vulnerable-websites-to-practice-your-hacking-skills/392)\n* Hacking-session writeup on [Testhexen](http://testhexen.de):\n  [Learning Application Security – Fun with the Juice Shop](http://testhexen.de/?p=117)\n* Guest post (:de:) on\n  [Informatik Aktuell](http://www.informatik-aktuell.de/):\n  [Juice Shop - Der kleine Saftladen für Sicherheitstrainings](http://www.informatik-aktuell.de/betrieb/sicherheit/juice-shop-der-kleine-saftladen-fuer-sicherheitstrainings.html)\n* Guest post on [The official Sauce Labs Blog](http://sauceio.com/):\n  [Proving that an application is as broken as intended](http://sauceio.com/index.php/2015/06/guest-post-proving-that-an-application-is-as-broken-as-intended/)\n* Teaser post on [Björn Kimminich's Blog](http://kimminich.de):\n  [Juice Shop](https://kimminich.wordpress.com/2015/06/15/juice-shop)\n\n## Lectures and Trainings\n\n* [Introduction to OWASP Top 10 Security Risks](https://www.pluralsight.com/cloud-guru/courses/introduction-to-owasp-top-10-security-risks) course by Chris Jackson :dollar:\n* Courses on the [freeCodeCamp.org](https://www.YouTube.com/channel/UC8butISFwT-Wl7EV0hUK0BQ)\n  YouTube channel\n  * [Ethical Hacking 101: Web App Penetration Testing - a full course for beginners](https://youtu.be/2_lswM1S264) :godmode: by HackerSploit\n  * [Web Application Ethical Hacking - Penetration Testing Course for Beginners](https://youtu.be/X4eRbHgRawI) :godmode: by The Cyber Mentor\n* [Intro to Semgrep](https://lab.github.com/returntocorp/intro-to-semgrep)\n  GitHub Learning Lab\n* [Real World Web Penetration Testing](https://training.secureideas.com/course/real-world-web-pentesting/start-course/)\n  course by Jason Gillam :dollar:\n* [Brakeing Down Security Web App Sec Training #1](https://drive.google.com/drive/folders/0B-qfQ-gWynwidlJ1YjgxakdPWDA)\n  by Sunny Wear ([YouTube](https://www.YouTube.com/watch?v=zi3yDovd0RY))\n* [Finding Website Vulnerabilities with Burp](https://www.packtpub.com/mapt/video/networking_and_servers/9781788399678/81304/81308/finding-website-vulnerabilities-with-burp)\n  chapter :godmode: of the\n  [Mastering Kali Linux Network Scanning](https://www.packtpub.com/networking-and-servers/mastering-kali-linux-network-scanning-video)\n  video course by Brian Johnson :dollar:\n* [University lecture on \"IT Security\"](https://github.com/bkimminich/it-security-lecture)\n  as Open Educational Resources material by Björn Kimminich\n* [Descargar aqui el taller OWASP Top 10 Hands On basado en OWASP Top 10 y Juice Shop](https://drive.google.com/drive/folders/0B6zv033D1iK9eTJId2RhZkJFTlk?usp=sharing)\n  (:es:) by Mateo Martinez, Gerardo Canedo and Maxiimiliano Alonzo,\n  [OWASP Uruguay Chapter](https://www.owasp.org/index.php/Uruguay)\n* [Security in Web Applications](https://drive.google.com/drive/folders/0B2KKdB7MPO7xTEwtWkkwTnl5VFk)\n  by Timo Pagel, [Fachhochschule Kiel](https://www.fh-kiel.de)\n* [Web Application Security Training](https://de.slideshare.net/BjrnKimminich/web-application-security-21684264)\n  by Björn Kimminich\n\n## Summits & Open Source Events\n\n* [Juice Shop Track](https://open-security-summit-2020.heysummit.com/topics/owasp-juiceshop/)\n  at [Open Security Summit 2020](https://open-security-summit.org/)\n    * [OWASP Juice Shop Cocktail Party: Ask us anything!](https://open-security-summit-2020.heysummit.com/talks/owasp-juice-shop-cocktail-party-ask-us-anything/)\n      with Björn Kimminich, Jannik Hollenbach & Timo Pagel 15.06.2020\n      ([YouTube](https://youtu.be/h5ApBfFMmao))\n    * [OWASP Juice Shop Deep Dive: MultiJuicer](https://open-security-summit-2020.heysummit.com/talks/owasp-juice-shop-deep-dive-multijuicer/)\n      with Jannik Hollenbach & Robert Seedorf, 15.06.2020\n      ([YouTube](https://youtu.be/1YHjkc3Xzd0))\n    * [OWASP Juice Shop Deep Dive: Integration](https://open-security-summit-2020.heysummit.com/talks/owasp-juice-shop-deep-dive-integration/)\n      with Björn Kimminich, 15.06.2020\n      ([YouTube](https://youtu.be/9SkUohiKgtU))\n    * [OWASP Juice Shop Deep Dive: Theming](https://open-security-summit-2020.heysummit.com/talks/owasp-juice-shop-deep-dive-theming-1/)\n      with Björn Kimminich, 15.06.2020\n      ([YouTube](https://youtu.be/WtY712DdlR8))\n    * [OWASP Juice Shop Introduction](https://pre-summit-training-sessions.heysummit.com/talks/owasp-juice-shop-introduction/)\n      with Björn Kimminich, 11.06.2020\n      ([YouTube](https://youtu.be/wCF08BdXdDg))\n    * [MultiJuicer Introduction](https://pre-summit-training-sessions.heysummit.com/talks/multijuicer-introduction/)\n      with Jannik Hollenbach and Robert Seedorf, 02.06.2020\n      ([YouTube](https://youtu.be/6NMjZbfnTOU))\n    * [OWASP Juice Shop Introduction](https://pre-summit-training-sessions.heysummit.com/talks/owasp-juice-shop/)\n      with Björn Kimminich, 02.06.2020\n      ([YouTube](https://youtu.be/Ry0mXz6ZPXc))\n* [Drinks with Adversaries: Creating Adversary Trading Cards](https://pre-summit-training-sessions.heysummit.com/talks/social-drinks-and-adversaries)\n  with Mark Miller at\n  [Open Security Summit 2020](https://open-security-summit.org/),\n  01.06.2020 ([YouTube](https://www.YouTube.com/watch?v=3roVZNwptOU))\n  :mega:\n* Selected Project at\n  [OWASP Projects Summit - Winter 2020](https://owasp.org/www-staff/projects/202002-Projects-Summit-Q1.html)\n  with Björn Kimminich, Jannik Hollenbach and Marc Rüttler collaborating on\n  [prepared working packages](https://github.com/juice-shop/juice-shop/milestone/10)\n  and\n  [the `v10.0.0` release](https://owasp.org/2020/03/17/juice-shop-v10.html), 27.-29.02.2020\n* [OWASP Juice Shop track](https://github.com/OpenSecuritySummit/oss2019/tree/master/content/tracks/OWASP-Juice-Shop)\n  and related working sessions organized by Björn Kimminich,\n  [Open Security Summit 2019](https://github.com/OpenSecuritySummit/oss2019), 03.-07.06.2019\n* Juice Shop related working sessions organized by Jannik Hollenbach and Timo Pagel in\n  [OWASP Projects track](https://github.com/OpenSecuritySummit/oss2018/tree/master/content/tracks/OWASP-Projects),\n  [Open Security Summit 2018](https://github.com/OpenSecuritySummit/oss2018), 04.-08.06.2018\n* [Outcome of the Juice Shop track](https://github.com/OWASP/owasp-summit-2017/blob/master/Outcomes/Juice-Shop/Juce-Shop-Update.md)\n  and related working sessions organized by Björn Kimminich and Timo Pagel,\n  [OWASP Summit 2017](https://github.com/OWASP/owasp-summit-2017), 12.-16.06.2017\n\n### [Google Summer of Code](http://owasp.org/gsoc)\n\n* Student projects from\n  [Google Summer of Code 2023](https://summerofcode.withgoogle.com/archive/2023/projects)\n  * [Companion Guide Tech Stack](https://summerofcode.withgoogle.com/organizations/owasp-foundation/projects/details/h2der3Mf)\n    by Parth Nanda (mentored by Jannik Hollenbach, Björn Kimminich and Shubham Palriwala)\n  * [Hacking the Blockchain: Building Web3 Challenges for OWASP Juice Shop](https://summerofcode.withgoogle.com/organizations/owasp-foundation/projects/details/yabiWLkF)\n    by Rishabh Keshan (mentored by Shubham Palriwala and Björn Kimminich)\n* Student project from\n  [Google Summer of Code 2022](https://summerofcode.withgoogle.com/archive/2022/projects)\n    * [Replacement for Protractor end-to-end & Frisby API test suite to Cypress](https://summerofcode.withgoogle.com/organizations/owasp-foundation/projects/details/2J1Xedwf)\n      by Shubham Palriwala (mentored by Jannik Hollenbach and Björn Kimminich)\n* Student project from\n  [Google Summer of Code 2021](https://summerofcode.withgoogle.com/archive/2021/projects)\n    * [Extending the features of the vulnerable code snippets](https://summerofcode.withgoogle.com/archive/2021/projects/5180407718346752P)\n      by Ayas Behera (mentored by Jannik Hollenbach and Björn Kimminich)\n* Student project from\n  [Google Summer of Code 2020](https://summerofcode.withgoogle.com/archive/2020/projects)\n    * [Juice-Shop ChatBot and general fixes](https://summerofcode.withgoogle.com/archive/2020/projects/5660020047347712/)\n      by Mohit Sharma (mentored by Jannik Hollenbach, Björn Kimminich and Timo Pagel)\n* Student project from\n  [Google Summer of Code 2019](https://summerofcode.withgoogle.com/archive/2019/projects)\n    * [OWASP Juice Shop: Feature Pack 2019](https://summerofcode.withgoogle.com/archive/2019/projects/6526397403627520/)\n      by Arpit Agrawal (mentored by Jannik Hollenbach, Björn Kimminich and Shoeb Patel)\n* Student projects from\n  [Google Summer of Code 2018](https://summerofcode.withgoogle.com/archive/2018/projects)\n    * [OWASP Juice Shop : Challenge Pack 2018](https://summerofcode.withgoogle.com/archive/2018/projects/6267528737193984)\n      by Shoeb Patel (mentored by Jannik Hollenbach and Timo Pagel)\n    * [OWASP Juice Shop : Frontend Technology Update](https://summerofcode.withgoogle.com/archive/2018/projects/6636660909408256)\n      by Aashish Singh (mentored by Björn Kimminich)\n\n## Conference and Meetup Appearances\n\n> Upcoming events are marked with :date:. The availability of link destinations for past events cannot be guaranteed. \n\n#### 2024\n\n* :date: [OWASP Juice Shop: Advanced Demos & For-fun CTF](https://god.owasp.de/2024/program-detail.html?talk=trainingOne) with Björn Kimminich & Jannik Hollenbach, [German OWASP Day 2024](https://god.owasp.de/2024), 12.11.2024\n* :date: [OWASP Juice Shop 10th anniversary: Is it still fresh?](https://god.owasp.de/2024/program-detail.html?talk=talkOne) by Björn Kimminich, [German OWASP Day 2024](https://god.owasp.de/2024), 13.11.2024\n* [OWASP Juice Shop 10th anniversary: Is it still fresh?](https://opensecurityconference.org/conference/keynotes) keynote by Björn Kimminich, [Open Security Conference](https://opensecurityconference.org/), 04.10.2024\n* [DSOMM & Juice Shop User Day](https://owasp2024globalappsecsanfra.sched.com/event/1gk01/juice-shop-dsomm-user-day-2024) before [OWASP 2024 Global AppSec San Francisco](https://sf.globalappsec.org/) with Timo Pagel, Jannik Hollenbach & Björn Kimminich, 25.09.2024\n* [OWASP Juice Shop](https://owasp2024globalappsecsanfra.sched.com/event/1ivEu/owasp-juiceshop) talk in Project Track of [OWASP 2024 Global AppSec San Francisco](https://sf.globalappsec.org/) by Björn Kimminich, 27.09.2024\n* [Brick your Juice Shop in 319 easy steps](https://www.meetup.com/owasp-hamburg-stammtisch/events/302138351/)\n  by Jannik Hollenbach & Björn Kimminich, [69. OWASP Stammtisch Hamburg](https://owasp.org/www-chapter-germany/stammtische/hamburg/), 23.07.2024\n* [OWASP Juice Shop - An Open Source Software and security Fairytale](https://ndc-security.com/agenda/owasp-juice-shop-an-open-source-software-and-security-fairytale-09mg/09ko186cud8) by Björn Kimminich, [NDC Security 2024](https://ndc-security.com/), 11.01.2024\n\n#### 2023\n\n* [Juice Shop Training: Train the Trainer Edition](http://www.owaspbenelux.eu/program/training#Bj%C3%B6rn-Kimminich) with Björn Kimminich, [OWASP BeNeLux Days 2023](http://www.owaspbenelux.eu/). 24.11.2023\n* [OWASP Juice Shop - An Open Source Software (and security) Fairytale](http://www.owaspbenelux.eu/program/talks#Bj%C3%B6rn-Kimminich) by Björn Kimminich, [OWASP BeNeLux Days 2023](http://www.owaspbenelux.eu/). 23.11.2023 [YouTube](https://youtu.be/54caQ4g72oI)\n* [How Vulnerable is Juice Shop? A Secure Code Review of Insecure Code](https://www.nationalcybersummit.com/Program/2023-Agenda) by Joshua Beck, [National Cyber Summit 2023](https://www.nationalcybersummit.com/Home). 20.09.2023 \n* [Track keynote: OWASP Juice Shop](https://sikkerhetsfestivalen.no/program-2023) by Björn Kimminich, [Sikkerhetsfestivalen 2023](https://sikkerhetsfestivalen.no/). 29.08.2023\n* [Juice Shop Update³](https://god.owasp.de/2023/schedule/index.html) by Björn Kimminich, [German OWASP Day 2023](https://god.owasp.de/2023). 31.05.2023 [YouTube](https://youtu.be/87DuRYwXtxk)\n* [Juice Shop Training: Train the Trainer Edition](https://god.owasp.de/2023/schedule/index.html) with Björn Kimminich, [German OWASP Day 2023](https://god.owasp.de/2023). 30.05.2023\n* [OWASP Juice Shop](https://www.meetup.com/owasp-chapter-netherlands-meetup/events/292323208)\n  by Björn Kimminich, [April 2023 OWASP Chapter Netherlands Meetup](https://www.meetup.com/owasp-chapter-netherlands-meetup/), 20.04.2023 [YouTube](https://www.youtube.com/live/Bhp3LpgtNZ4?feature=share&t=3856)\n* [Squeezing the last drop out of OWASP Juice Shop](https://owasp2023globalappsecdublin.sched.com/event/1FWfq/squeezing-the-last-drop-out-of-owasp-juice-shop) by Björn Kimminich, [OWASP 2023 Global AppSec Dublin](https://dublin.globalappsec.org/), 15.02.2023  [YouTube](https://youtu.be/m1f2fPC8hLU)\n\n#### 2022\n\n* [OWASP Juice Shop Project](https://whova.com/web/GKSmlhCK%2FWzBY2c8qqJ%2Bp7kNcnjsUQAQJ%2ByBsjLrbOo%3D/Speakers/) by Björn Kimminich, [OWASP Global AppSec EU](https://whova.com/web/GKSmlhCK%2FWzBY2c8qqJ%2Bp7kNcnjsUQAQJ%2ByBsjLrbOo%3D/), 10.06.2022 ([YouTube](https://www.youtube.com/watch?v=n9DK87g_AIo))\n* [Juice Shop 13: Now with Coding Challenges!](https://www.meetup.com/de-DE/OWASP-Hamburg-Stammtisch/events/282692845/)\n  by Björn Kimminich, [58. OWASP Stammtisch Hamburg](https://owasp.org/www-chapter-germany/stammtische/hamburg/), 13.01.2022\n\n#### 2021\n\n* [OWASP Juice Shop Flagship Project](https://owasp20thanniversaryevent20.sched.com/event/m1uL/owasp-juice-shop-flagship-project)\n  by Björn Kimminich, [OWASP 20th Anniversary Event](https://20thanniversary.owasp.org/), 24.09.2021 ([YouTube](https://youtu.be/rn-6NADRRmI) :godmode:)\n* [SDLC con OWASP y laboratorio con OWASP Juice Shop](https://www.meetup.com/de-DE/OWASP-Uruguay-Chapter/events/279827017/)\n  (:uruguay:) with Martín Marsicano and Pablo Alzuri,\n  [OWASP Uruguay Chapter](https://owasp.org/www-chapter-uruguay/),\n  19.08.2021 [YouTube](https://youtu.be/OAE1EnBNMlc?t=2722) :godmode:\n* [Talking Juice Shop and Maintaining a Flagship OWASP Project with Björn Kimminich](https://www.meetup.com/OWASP-Northern-Virginia-Chapter/events/278751084/)\n  ,\n  [OWASP Northern Virginia Chapter](https://owasp.org/www-chapter-northern-virginia/),\n  07.07.2021 ([YouTube](https://youtu.be/uejiQ9VvFu4))\n* [OWASP Aarhus Chapter Worskhop and CTF](https://www.meetup.com/de-DE/OWASP-Aarhus-Chapter/events/277659233/)\n  with Björn Kimminich,\n  [OWASP Aarhus Chapter](https://owasp.org/www-chapter-aarhus/), 06.05.2021\n* [Modern Web Application Hacking for Beginners](https://github.com/bkimminich/it-security-lecture/tree/workshop),\n  virtual 4h diversity training by Björn Kimminich,\n  [OWASP Training Events 2021 - 2020 SOS Re-run](https://github.com/OWASP/www-event-2021-training), 26.01.2021\n\n#### 2020\n\n* [FPs are Cheap. Show me the CVEs!](https://www.blackhat.com/eu-20/briefings/schedule/index.html#fps-are-cheap-show-me-the-cves-21345)\n  by Bas van Schaik & Kevin Backhouse,\n  [Black Hat Europe 2020](https://www.blackhat.com/eu-20/), 09.12.2020\n* [Juice Shop 12: Novelties by the litre (Online)](https://www.meetup.com/de-DE/OWASP-Hamburg-Stammtisch/events/272842835/)\n  by Björn Kimminich,\n  [48. OWASP Stammtisch Hamburg](https://owasp.org/www-chapter-germany/stammtische/hamburg/),\n  24.11.2020 ([YouTube](https://youtu.be/AUhDItHHLiY))\n* [Modern Web Application Hacking for Beginners](https://github.com/bkimminich/it-security-lecture/tree/workshop),\n  virtual 4h diversity training by Björn Kimminich,\n  [AppSec Days - Summer of Security 2020](https://github.com/OWASP/www-event-2020-08-virtual), 25.08.2020\n* [OWASP Projects Panel](https://www.meetup.com/de-DE/womeninappsec/events/271754765/)\n  hosted by [OWASP WIA](https://www.meetup.com/womeninappsec/) moderated by Zoe Braiterman with panelists Bjoern\n  Kimminich, Glenn & Riccardo ten Cate and Spyros Gasteratos, 25.07.2020\n  ([YouTube](https://youtu.be/d96-HCrSh2M))\n* [OWASP ZAP Intro (Online)](https://www.meetup.com/de-DE/OWASP-Hamburg-Stammtisch/events/270078609/)\n  by Simon Bennetts,\n  [48. OWASP Stammtisch Hamburg](https://owasp.org/www-chapter-germany/stammtische/hamburg/),\n  23.04.2020 ([YouTube](https://youtu.be/SD28HdVI-Wk)) :mega:\n* [ZAP in Ten, Extended Edition: Automation Deepdive](https://www.alldaydevops.com/addo-speakers/simom-bennetts)\n  by Simon Bennetts,\n  [All Day DevOps Spring Break Edition](https://www.alldaydevops.com/), 17.04.2020 :bulb:\n\n#### 2019\n\n* [Juice Shop 9: Would you like a free refill?](https://god.owasp.de/archive/2019/)\n  by Björn Kimminich,\n  [German OWASP Day 2019](https://god.owasp.de/archive/2019/),\n  10.12.2019 ([YouTube](https://www.YouTube.com/watch?v=L7h5uE7WDfg)\n  :bulb:)\n* [S' OWASP Saft-Lädeli / The OWASP Juice Shop](https://www.meetup.com/de-DE/OWASPSwitzerland/events/264422942/)\n  by Björn Kimminich,\n  [OWASP Switzerland Chapter Meeting](https://www.meetup.com/de-DE/OWASPSwitzerland/), 18.11.2019\n* [OWASP Juice Shop: The ultimate All Vuln WebApp](https://www.alldaydevops.com/addo-speakers/bj%C3%B6rn-kimminich)\n  by Björn Kimminich, [All Day DevOps](https://www.alldaydevops.com/), 06.11.2019\n  ([YouTube](https://www.YouTube.com/watch?v=-JuPprlGb48&t=13939s)\n  :bulb:)\n* [Juice Shop](https://globalappsecamsterdam2019.sched.com/event/U84e/juice-shop)\n  by Björn Kimminich, Project Showcase track of the\n  [Global AppSec Amsterdam 2019](https://ams.globalappsec.org/), 26.09.2019 ([YouTube](https://youtu.be/XXkMY_VyJ-Y) :\n  bulb:)\n* [Elbsides vs. Juice Shop](https://2019.elbsides.de/programme.html#elbsides-vs-juice-shop)\n  workshop with Björn Kimminich,\n  [Elbsides 2019](https://2019.elbsides.de), 16.09.2019\n* [Introduction to OWASP Juice Shop](https://bsidesmcr2019.sched.com/event/Sw0q/introduction-to-owasp-juice-shop)\n  by Tim Corless-Carter,\n  [BSidesMCR 2019](https://www.bsidesmcr.org.uk/), 29.08.2019\n  ([YouTube](https://youtu.be/hlgp7oeVpac) :godmode:)\n* [JavaScript-Security: \"Pwn\" den Juice Shop](https://enterjs.de/2019/single034c.html?id=7685&javascript-security%3A-%22pwn%22-den-juice-shop)\n  workshop with Timo Pagel & Björn Kimminich,\n  [enterJS 2019](https://www.enterjs.de/2019/), 25.06.2019\n* [Web Application Hacking with Burp Suite and OWASP ZAP](https://globalappsectelaviv2019.sched.com/event/MLSU/web-application-hacking-with-burp-suite-and-owasp-zap)\n  training with Vandana Verma,\n  [Global Appsec Tel Aviv 2019](https://globalappsectelaviv2019.sched.com), 28.05.2019\n* [A good first impression can work wonders: creating AppSec training that developers <3](https://locomocosec2019.sched.com/event/MGNM/a-good-first-impression-can-work-wonders-creating-appsec-training-that-developers-v)\n  by Leif Dreizler,\n  [LocoMocoSec 2019](https://locomocosec2019.sched.com/), 18.04.2019\n* [Pixels vs. Juice Shop](https://github.com/PixelsCamp/talks/blob/master/2019/pixels-vs-juice-shop_bjoern-kimminich.md)\n  workshop with Björn Kimminich,\n  [Pixels Camp v3.0](https://pixels.camp), 21.03.2019\n* [OWASP Juice Shop - First you :-D :-D then you :,-(](https://github.com/PixelsCamp/talks/blob/master/2019/owasp-juice-shop_bjoern-kimminich.md)\n  by Björn Kimminich, [Pixels Camp v3.0](https://pixels.camp), 21.03.2019 ([YouTube](https://youtu.be/v9qrAK_iBa0) :\n  bulb:)\n* [News from the fruit press: Juice Shop 8](https://www.meetup.com/de-DE/OWASP-Hamburg-Stammtisch/events/258185324/)\n  by Björn Kimminich,\n  [39. OWASP Stammtisch Hamburg](https://www.meetup.com/de-DE/OWASP-Hamburg-Stammtisch), 27.02.2019\n* [Back to Basics: Hacking OWASP JuiceShop](https://www.owasp.org/index.php/Knoxville#Past_Meetings)\n  by Jeremy Kelso,\n  [OWASP Knoxville Chapter Meeting](https://www.owasp.org/index.php/Knoxville), 24.01.2019\n\n#### 2018\n\n* [Secure Your Pipeline](https://www.facebook.com/events/441842706348978/)\n  by Omer Levi Hevroni, Negev Web Developers Meetup, 27.12.2018\n  ([Slides](https://www.slideshare.net/SolutoTLV/secure-your-pipeline))\n* [Juice Shop: OWASP's most broken Flagship](https://www.owasp.org/index.php/OWASP_BeNeLux-Days_2018#tab=Conference_Day)\n  by Björn Kimminich,\n  [OWASP BeNeLux Days 2018](https://www.owasp.org/index.php/OWASP_BeNeLux-Days_2018),\n  30.11.2018 ([YouTube](https://youtu.be/Lu0-kDdtVf4) :bulb:)\n* [OWASP Zap](https://www.owasp.org/index.php/OWASP_BeNeLux-Days_2018#tab=Conference_Day)\n  by David Scrobonia,\n  [OWASP BeNeLux Days 2018](https://www.owasp.org/index.php/OWASP_BeNeLux-Days_2018),\n  30.11.2018 ([YouTube](https://youtu.be/iaZaPuQ6ams))\n* [The traditional/inevitable OWASP Juice Shop update](https://owasp.github.io/german-owasp-day/archive/2018/)\n  by Björn Kimminich,\n  [German OWASP Day 2018](https://owasp.github.io/german-owasp-day/archive/2018/),\n  20.11.2018 ([YouTube](https://youtu.be/2oNfZo2H4uA))\n* [Workshop: OWASP Juice Shop](https://owasp.github.io/german-owasp-day/archive/2018/)\n  by Björn Kimminich,\n  [German OWASP Day 2018](https://owasp.github.io/german-owasp-day/archive/2018/), 19.11.2018\n* [OWASP Portland Chapter Meeting - OWASP Juice Shop!](http://calagator.org/events/1250474481)\n  facilitated by David Quisenberry,\n  [OWASP Portland Chapter](https://www.owasp.org/index.php/Portland), 08.11.2018\n* [OWASP Juice Shop - Public Lecture](https://www.facebook.com/events/674384206291349)\n  by Björn Kimminich,\n  [TalTech Infotehnoloogia Kolledž](https://www.facebook.com/itcollege.ee),\n  24.10.2018 ([YouTube](https://youtu.be/79G46CQ3IMk?t=158) :godmode:\n  _starting 14:55_)\n* [JUGHH: Security Hackathon](https://www.meetup.com/jug-hamburg/events/254885956/)\n  by [iteratec](https://www.iteratec.de/),\n  [Java User Group Hamburg](https://www.meetup.com/jug-hamburg), 11.10.2018\n* [Playing with OWASP Juice Shop](https://mozilla.or.id/en/space/events/258-playing-with-owasp-juice-shop.html)\n  by Mohammad Febri R, [Mozilla Indonesia](https://mozilla.or.id/), 05.08.2018\n  ([Slides](https://slides.com/mohammadfebri/owasp-juice-shop))\n* [OWASP Juice Shop どうでしょう](https://speakerdeck.com/ninoseki/owasp-juice-shop-doudesiyou)\n  by Manabu Niseki,\n  [OWASP Night 2018/7](https://owasp.doorkeeper.jp/events/77466), 30.07.2018\n* [Usable Security Tooling - Creating Accessible Security Testing with ZAP](https://www.meetup.com/de-DE/Bay-Area-OWASP/events/252283865/)\n  by David Scrobonia,\n  [OWASP Meetup - SF July 2018](https://www.meetup.com/de-DE/Bay-Area-OWASP/),\n  26.07.2018 ([YouTube](https://www.YouTube.com/watch?v=ztfgip-UhWw))\n* [Building an AppSec Program with a Budget of $0: Beyond the OWASP Top 10](https://appseceurope2018a.sched.com/event/EgXt/building-an-appsec-program-with-a-budget-of-0-beyond-the-owasp-top-10)\n  by Chris Romeo, [OWASP AppSec Europe 2018](https://2018.appsec.eu),\n  06.07.2018 ([YouTube](https://www.YouTube.com/watch?v=5RmHQKeXgk4))\n  :mega:\n* [OWASP Juice Shop: Betreutes Hacken](https://www.meetup.com/de-DE/owasp-karlsruhe/events/251041169/)\n  with\n  [OWASP Stammtisch Karlsruhe](https://www.owasp.org/index.php/OWASP_Stammtisch_Karlsruhe), 04.06.2018\n* [Hacking Workshop - Twin Cities vs. OWASP Juice Shop](https://secure360.org/secure360-twin-cities/schedule/?conference=9826&date=20180517)\n  with Björn Kimminich,\n  [Secure360 Twin Cities](https://secure360.org/secure360-twin-cities/), 17.05.2018\n* [OWASP Juice Shop - The Ultimate Vulnerable WebApp](https://secure360.org/session/bjorn-kimminich-owasp-juice-shop-the-ultimate-vulnerable-webapp/?conference=9826&date=20180516)\n  by Björn Kimminich,\n  [Secure360 Twin Cities](https://secure360.org/secure360-twin-cities/), 16.05.2018\n* [OWASP MSP Chapter May Meeting](https://www.meetup.com/OWASP-MSP-Meetup/events/249940370/)\n  with Björn Kimminich,\n  [OWASP MSP Meetup](https://www.meetup.com/OWASP-MSP-Meetup/) St Paul, 14.05.2018\n* [OWASP Juice Shop - The next chapter ...](https://www.meetup.com/CyberHackathon/events/249606655/?eventId=249606655)\n  with Jaan Janesmae,\n  [CyberHackathon](https://www.meetup.com/CyberHackathon/) Tallinn, 30.04.2018\n* OWASP Juice Shop Introduction at\n  [ChaosTreff Tallinn Weekly Meetup](https://www.meetup.com/ChaosTreff-Tallinn/events/249627780/)\n  with Björn Kimminich,\n  [ChaosTreff Tallinn](https://www.meetup.com/ChaosTreff-Tallinn/), 26.04.2018\n* [OWASP Juice Shop Intro and Getting Started](https://www.meetup.com/CyberHackathon/events/249359520/?eventId=249359520)\n  with Jaan Janesmae,\n  [CyberHackathon](https://www.meetup.com/CyberHackathon/) Tallinn, 09.04.2018\n* [Web Application Security: A Hands-on Testing Challenge](https://dojo.ministryoftesting.com/events/testbash-brighton-2018)\n  by Dan Billing,\n  [TestBash Brighton 2018](https://dojo.ministryoftesting.com/events/testbash-brighton-2018), 15.03.2018\n* [OWASP Top 10](https://appseccalifornia2018.sched.com/event/CuRs) by Andrew van der Stock,\n  [OWASP AppSec California 2018](https://2018.appseccalifornia.org/),\n  30.01.2018 ([YouTube](https://www.YouTube.com/watch?v=TXAztSpYpvE)\n  :godmode: _starting 25:40_)\n\n#### 2017\n\n* [OWASP Juice Shop 5.x and beyond](https://www.owasp.org/index.php/German_OWASP_Day_2017#Programm)\n  by Björn Kimminich,\n  [German OWASP Day 2017](https://www.owasp.org/index.php/German_OWASP_Day_2017), 14.11.2017\n* [OWASP Juice Shop Introduction](https://www.owasp.org/index.php/OWASP_Bucharest_AppSec_Conference_2017#tab=Conference_talks)\n  talk and\n  [AppSec Bucharest vs. OWASP Juice Shop](https://www.owasp.org/index.php/OWASP_Bucharest_AppSec_Conference_2017#tab=Free_workshops)\n  hacking workshop by Björn Kimminich,\n  [OWASP Bucharest AppSec Conference 2017](https://www.owasp.org/index.php/OWASP_Bucharest_AppSec_Conference_2017),\n  13.10.2017\n* [2 Hour Hacking: Juice Shop](https://www.meetup.com/de-DE/OWASP-Los-Angeles/events/238321796/)\n  by Timo Pagel,\n  [OWASP Los Angeles](https://www.meetup.com/de-DE/OWASP-Los-Angeles/), 10.10.2017\n* [Hacking the OWASP Juice Shop](https://www.owasp.org/index.php/North_Sweden#2017-09-19_-_2017q3:_Hacking_the_OWASP_Juice_Shop)\n  with Björn Kimminich,\n  [OWASP North Sweden Chapter](https://www.owasp.org/index.php/North_Sweden), 19.09.2017\n* [OWASP Juice Shop Workshop](https://www.linkedin.com/feed/update/urn:li:activity:6309257579876929537)\n  with Björn Kimminich,\n  [OWASP Stockholm Chapter](https://www.owasp.org/index.php/Stockholm), 18.09.2017\n* Hacking session at\n  [Angular Talk & Code](https://www.meetup.com/de-DE/Hamburg-AngularJS-Meetup/events/234414398/)\n  with Björn Kimminich,\n  [Angular Meetup Hamburg](https://www.meetup.com/de-DE/Hamburg-AngularJS-Meetup/), 13.09.2017\n* Capture The Flag - Security Game by Benjamin Brunzel, Jöran Tesse, Rüdiger Heins & Sven Strittmatter,\n  [solutions.hamburg](https://solutions.hamburg), 08.09.2017\n* OWASP Juice Shop - Einmal quer durch den Security-Saftladen by Björn\n  Kimminich, [solutions.hamburg](https://solutions.hamburg), 08.09.2017\n* [Black Box Threat Modeling](https://www.peerlyst.com/posts/bsidestlv-2017-black-box-threat-modeling-avid)\n  by Avi Douglen, [BSides Tel Aviv 2017](https://bsidestlv.com/), Underground Track, 28.06.2017\n* [OWASP update](https://www.meetup.com/OWASP-Bristol/events/235736793)\n  by Katy Anton,\n  [OWASP Bristol (UK) Chapter](https://www.owasp.org/index.php/Bristol), 22.06.2017\n* [Update on OWASP Projects & Conferences](https://www.owasp.org/index.php/London#Thursday.2C_18th_May_2017_.28Central_London.29)\n  by Sam Stepanyan,\n  [OWASP London Chapter](https://www.owasp.org/index.php/London#OWASP_London)\n  Meeting, 18.05.2017\n* [OWASP Juice Shop: Achieving sustainability for open source projects](https://appseceurope2017.sched.com/event/A66A/owasp-juice-shop-achieving-sustainability-for-open-source-projects)\n  ,\n  [AppSec Europe 2017](https://2017.appsec.eu) by Björn Kimminich,\n  11.05.2017 ([YouTube](https://www.YouTube.com/watch?v=bOSdFnFAYNc))\n* [OWASP Juice Shop: Stammtisch-Lightning-Update](http://lanyrd.com/2017/owasp-de/sfrdtq/)\n  by Björn Kimminich,\n  [27. OWASP Stammtisch Hamburg](http://lanyrd.com/2017/owasp-de/), 25.04.2017\n* [Juice Shop Hacking Session](https://www.xing.com/events/juice-shop-hacking-session-1771555)\n  by Jens Hausherr,\n  [Software-Test User Group Hamburg](https://www.xing.com/communities/groups/software-test-user-group-hamburg-1207-1002644)\n  , 21.03.2017\n* [Hands on = Juice Shop Hacking Session](http://lanyrd.com/2017/software-tester-group-hamburg-16032017/sfqcxq/)\n  by Björn Kimminich,\n  [Software Tester Group Hamburg (English-speaking)](http://lanyrd.com/2017/software-tester-group-hamburg-16032017),\n  16.03.2017\n* [Kurzvortrag: Hack the Juice Shop](https://www.meetup.com/de-DE/phpughh/events/235572004/)\n  by Timo Pagel,\n  [PHP-Usergroup Hamburg](https://www.meetup.com/de-DE/phpughh/), 14.02.2017\n\n#### 2016\n\n* [Lightning Talk: What's new in OWASP Juice Shop](https://www.owasp.org/index.php/German_OWASP_Day_2016#Programm)\n  by Björn Kimminich,\n  [German OWASP Day 2016](https://www.owasp.org/index.php/German_OWASP_Day_2016/), 29.11.2016\n* [Gothenburg pwns the OWASP Juice Shop](https://owaspgbgday.se/bjorn-kimminich-gothenburg-pwns-the-owasp-juice-shop-workshop/)\n  by Björn Kimminich,\n  [OWASP Gothenburg Day 2016](https://owaspgbgday.se/), 24.11.2016\n* [Hacking the OWASP Juice Shop](http://lanyrd.com/2016/owasp-nl/sffmpr/)\n  by Björn Kimminich,\n  [OWASP NL Chapter Meeting](http://lanyrd.com/2016/owasp-nl/),\n  22.09.2016 ([YouTube](https://www.YouTube.com/watch?v=62Mj0ZgZvXc),\n  :godmode: _in last 10min_)\n* [Hacking-Session für Developer (und Pentester)](https://www.kieler-linuxtage.de/index.php?seite=programm.html#226)\n  by Timo Pagel,\n  [Kieler Open Source und Linux Tage](https://www.kieler-linuxtage.de/index.php?seite=programm.html), 16.09.2016\n* [Security-Auditing aus der Cloud – Softwareentwicklung kontinuierlich auf dem Prüfstand](http://www.sea-con.de/seacon2016/konferenz/konferenzprogramm/vortrag/do-41-2/title/security-auditing-aus-der-cloud-softwareentwicklung-kontinuierlich-auf-dem-pruefstand.html)\n  by Robert Seedorff & Benjamin Pfänder,\n  [SeaCon 2016](http://www.sea-con.de/seacon2016), 12.05.2016\n* [Hacking the Juice Shop (\"So ein Saftladen!\")](http://lanyrd.com/2016/javaland/sdtbph/)\n  by Björn Kimminich, [JavaLand 2016](http://lanyrd.com/2016/javaland/), 08.03.2016\n* [Hacking the JuiceShop! (\"Hackt den Saftladen!\")](http://lanyrd.com/2016/nodehamburg/sdxtch/)\n  by Björn Kimminich,\n  [node.HH Meetup: Security!](http://lanyrd.com/2016/nodehamburg/), 03.02.2016\n* [OWASP Top 5 Web-Risiken](http://lanyrd.com/2016/nodehamburg/sdxtcg/)\n  by Timo Pagel,\n  [node.HH Meetup: Security!](http://lanyrd.com/2016/nodehamburg/), 03.02.2016\n\n#### 2015\n\n* [Lightning Talk: Hacking the Juice Shop (\"So ein Saftladen!\")](http://lanyrd.com/2015/owasp-d2015/sdtzgg/)\n  by Björn Kimminich,\n  [German OWASP Day 2015](http://lanyrd.com/2015/owasp-d2015/), 01.12.2015\n* [Juice Shop - Hacking an intentionally insecure JavaScript Web Application](http://lanyrd.com/2015/jsunconf/sdmpzk/)\n  by Björn Kimminich,\n  [JS Unconf 2015](http://lanyrd.com/2015/jsunconf/), 25.04.2015\n* [So ein Saftladen! - Hacking Session für Developer (und Pentester)](http://lanyrd.com/2015/owasp-de/sdhctr/)\n  by Björn Kimminich,\n  [17. OWASP Stammtisch Hamburg](http://lanyrd.com/2015/owasp-de/), 27.01.2015\n\n## Usage in Tools & Products\n\n* [How to try GitHub Advanced Security with your team](https://resources.github.com/security/tools/ghas-trial/) uses Juice Shop as an example for CI/CD integration in [Code scanning in action with Juice Shop](https://resources.github.com/security/tools/ghas-trial/#code-scanning-in-action-with-juice-shop) \n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 6.98046875,
          "content": "# Security Policy\n\nOWASP Juice Shop is an _intentionally vulnerable_ web application, but we still do not want to be suprised by zero day\nvulnerabilities which are not part of our hacking challenges. We are following the proposed Internet\nstandard <https://securitytxt.org> so you can find our\n\"security\" policy in any running instance of the application at the expected location described in\n<https://tools.ietf.org/html/draft-foudil-securitytxt-06>. Finding it is actually one of our hacking challenges!\n\n## Supported Versions\n\nWe provide security patches for the latest released minor version.\n\n| Version | Supported          |\n|:--------|:-------------------|\n| 17.1.x  | :white_check_mark: |\n| <17.1   | :x:                |\n\n## Reporting a Vulnerability\n\nFor vulnerabilities which are **not** part of any hacking challenge please contact <bjoern.kimminich@owasp.org>. In all\nother cases please contact our shop's \"security team\" at the address mentioned in the\n`security.txt` accessible through the running application.\n\n> Instead of fixing reported vulnerabilities we might turn them into\n> hacking challenges! You might receive a reward for reporting a\n> vulnerability that makes it into one of our challenges!\n\n### Encrypted communication\n\nYou can encrypt emails to <bjoern.kimminich@owasp.org> with PGP using the public key `062A85A8CBFBDCDA`:\n\n```\n-----BEGIN PGP PUBLIC KEY BLOCK-----\nVersion: GnuPG v2\n\nmQENBFUSf5YBCADDkR5JZ54H77VoHy4yw3xIW9Y5rzJtCxB6VXfRAi26GbtnCOzX\ncsPAVU+CZ2iHj1jBX876ib7XazGCr99l26W3dHdJk4v8kRsFHSfYu1kGZcQBSWLX\nCP6zHFDhQOkxFM/ild7HHWi1+fSyCPKT31o4TrRlYA4Q6h2KQzBYh9KGX4DvyVAK\n+oiMSbsJzZZrWeF3QUUWBZzOO1Yvfr5RQKx+rffPT+CeOXdtE5jHcaOpqbjLVkHO\np7wOeNh2joweebF7jBMXkgrbEVzIO762PlPAnJWAvQDjef2aiz5Ok265vXLBAf/p\n7Cgb1P0rzQmOPvDA0KZ3vGqh96lUhxLXc3NtABEBAAG0M0Jqw7ZybiBLaW1taW5p\nY2ggPGJqb2Vybi5raW1taW5pY2hAbm9yZGFrYWRlbWllLmRlPokBOQQTAQgAIwUC\nVRM9zgIbDwcLCQgHAwIBBhUIAgkKCwQWAgMBAh4BAheAAAoJEAYqhajL+9zaO38I\nAINazwGQtf2cIEYQo3fHjgJ0d+kgR5/79LUpOSC1m9I2FXntkWJ0DYYsGDwZsGKq\nnGVUhRDtvbUkNAhtnhZ6QVgljtFgtn9LE7+kYnOGrhIW0CY4shwkTgUwwK96bpxL\nhKeu4AQZXiGyRleyKd/qHDdQLwHWAAlUB5E4nSNrwR0cCTWOxnqdc9pz/ag4HOCo\nVB7M9oEHQcyAXcAxge8pBs6phmI5TgX2Q7lzGzYMAKXSc0azdevocJeZHZlZeacQ\nEuY0G6QkND0suyoiAD9vJR7UkXHOK9fd51pVSycoAXneAC64oZbsnWn9POyVZYW5\n40W7wa51cbrSa5Xe10GNLYuIRgQTEQIABgUCVS94hwAKCRArrjz22v+wAEwUAJ9F\nWN/CcJxqniBjOFNKkNrkr8Wa1QCfY3ke3X34zSmnQ6QKuv+l7q4MPoa0LUJqw7Zy\nbiBLaW1taW5pY2ggPGJqb2Vybi5raW1taW5pY2hAb3dhc3Aub3JnPokBOQQTAQgA\nIwUCVRM9wAIbDwcLCQgHAwIBBhUIAgkKCwQWAgMBAh4BAheAAAoJEAYqhajL+9za\nDPAIAKJWYvfCHOZUv8v92q2U5xH/yXqaz78OK6k1w8tCSyNhFLvkd4R3HMrcgnLk\n3CygqMqHAOO15ijg0I1DC2cBPRDLgVQreZNlog+6njIDmtigVFjPUqrQxYejW+t7\nLtZqT/7e8PRz7wVt5wQKlkZSbaEOyPkfIP5NvlGUbJlGriC5nQbSvnYFKRQXbwGD\nHBDUttM0L2aC7uAwRH4qX79vE8JMe62lobsh7pI0Nez8lxR8U1cZPKHixikTDEvb\nZG8T+SAXAh/yE85oWAw81zZU8gqUHzGtTikPXCcC4kfACO6/aiUe89UPb49jF/n5\ntTTELHM/YXQES+P3KRwHRpPfngqIRgQTEQIABgUCVS94hwAKCRArrjz22v+wAHyc\nAJ9Gllz+luFqWRPmeMvQm0Ag4Vnm1QCeOyLh0kJGSQqMmORPchfUbStmjTC0LUJq\nb2VybiBLaW1taW5pY2ggPGJqb2Vybi5raW1taW5pY2hAb3dhc3Aub3JnPokBOQQT\nAQgAIwUCVRM9tQIbDwcLCQgHAwIBBhUIAgkKCwQWAgMBAh4BAheAAAoJEAYqhajL\n+9zaSRIH/1Qnl09+jISxyQSDaRqzzG2cyCIbdViCLz+b0vATwSOsTqtK0lY1m9i+\n8v4S67z+S5+/klGovC1HAHH4TJOsOAAxqp6AAd9ufynCZNb6Y/9z7AnQcbBccC5X\nhR8Eq/STrqM3pF1dpABIL67pwfZ7MqB0xCYkWICB5BgnHrCr29EcUOw7C6gKhFB3\n9A/YfG6D6Lzs/0cKdAbZclSinzxwyvQ8n8VnSQq9CYMYRPE9eLQDrl93IyJnXOuE\nez9abJv5DIjJsGayAEz4H7xYSm2Ao/Hr0Ap3P4zywG3QBZqX3OPYR6ojXMNagQZK\nUYNQrvTOvymi1NiNLkWeaaSKS5oYBhyIRgQTEQIABgUCVS94hwAKCRArrjz22v+w\nAD9EAJ0aapSfv7GwzKZeyG/9Ydpz7XrUmACeK3vmctUHKn4+gCDGYuGLyQSmwF20\nJkJqb2VybiBLaW1taW5pY2ggPGJqb2VybkBraW1taW5pY2guZGU+iQE5BBMBCAAj\nBQJVEz1lAhsPBwsJCAcDAgEGFQgCCQoLBBYCAwECHgECF4AACgkQBiqFqMv73Nqi\nngf+N5Ft66CdvLl4J/oyf8BVDmlI1nvyr2s3zM7ZWGOCgawcB09uq8i9ZE2jZu3l\nNHhKQdmYnrEEgKDhC3Rd1tj/MqSZ90/z22FczovarVTWvZ7oy0tMzfokcTfcbXsm\nYRaFJT1/rUt9ThBg9SAAnO06BkbF1ZgZSxSG24Do7trpiv8aqId1i+cHE7UwhuP5\n8ArLij2+u1VpUnX0pzR4t2/JaIoYx6tuoIX+LnsUsohmkVo8gAvWOMDsA3zqxG6T\nlQ0nVxQ7BMq0aeVmjvnamLvrSte8ByLnW9q65i0/nTxHqwVVnhTLHjXYKYQHYdd6\nK/4UoiKiWz9Ro/27bf2lHNpVeYhGBBMRAgAGBQJVL3iHAAoJECuuPPba/7AAfCoA\nn2v7/Z30CB4bHpCqeYxiL12F34M2AJ4/mfN9uGYj91TYJ/cgFwI6LndxTrQmQmrD\ntnJuIEtpbW1pbmljaCA8YmpvZXJuQGtpbW1pbmljaC5kZT6JATkEEwEIACMFAlUT\nPVUCGw8HCwkIBwMCAQYVCAIJCgsEFgIDAQIeAQIXgAAKCRAGKoWoy/vc2soDB/wJ\njmocZ3fYpwvJZy7lqknXkXBxJBKX1BBBz4sHXueJeBqdJ+yCbzhluSlWOzFO+1Cb\nwr0uJ7UCzfB+wBQ6EsKOLJHZLlixBoj6/lTF2bQFceAI0w5coZWIeYUzRAmyguiY\nYPpE3+hBPY47osVqIXle2QblKthVrI6FToTwAomOWRCX/oJCnJ+x3LJiHHj3HKfw\n8Gy1BalosL2p2V4V1vr/6TbWsuj3L0nxmDEM7877VNiHw2jL6Jp+V9GzOeWvS7Pi\nKnPXVLAp81A9SKhNiEEAlsGcWtz6Bm3WaT1D4fFwuEm2RdjP8kO3uoxtvhRzej/W\njHT4zomR6/h+C/nw0aTuiEYEExECAAYFAlUveIcACgkQK6489tr/sAB7twCfa396\ndnFYG4eGszFLs8JFO5Klcr8An2FBTcVIwOBEo3m294V2npnv1Z+utCpCam9lcm4g\nS2ltbWluaWNoIDxiam9lcm4ua2ltbWluaWNoQGdteC5kZT6JATkEEwEIACMFAlUT\nPUMCGw8HCwkIBwMCAQYVCAIJCgsEFgIDAQIeAQIXgAAKCRAGKoWoy/vc2j/fB/9C\nPAkZAj4M16AWbLONShxPkYyYnW+yJw6bIuYrcEsNzrYuxxQ3zmJ91Iztuh+HcCnr\n8sWOP9iuWe2Q4EctAn2D1Yc8FhcIW51YAwnf66wuGozx7LJAfI53HRCpC5hkGxg5\ny1wVfJcu7Qf7BWfB4J3FLVMdX+4i/roFdGlFfzSI897M/c7HxIZfgnHRWUJaRWrE\nx/uOCSbNocAS+vOw7VG2VueVR/i25G4bRr1G6Puts80jZgZojD8L2wxrfwOzBm83\nMm2IR7EhQvPE61IUo35WJQUbS2uQF/rgY375Eb+Ca7tKKCPe00SCTTuZyiLwCWMo\nPLZN3L+JUL85Kk6KTe/ziEYEExECAAYFAlUveIcACgkQK6489tr/sADXRgCeLro0\n0Lb0N8srIRPp53pBEaFMgzwAoIZD5aCEFLyD7+nmpP2nSFOMOLCJtCpCasO2cm4g\nS2ltbWluaWNoIDxiam9lcm4ua2ltbWluaWNoQGdteC5kZT6JATkEEwEIACMFAlUT\nPSkCGw8HCwkIBwMCAQYVCAIJCgsEFgIDAQIeAQIXgAAKCRAGKoWoy/vc2lfyB/wO\nNuFhITiHDcFeUFUT9CNkrC8zEvVL9+NpiEHHwgVJJrixuem6o8zLPiOK9OsYJwWD\ndZeF/nDI0wRQA8bxHwfcIlFKGulldWtCA9SHIgM7LM7lE5S689HaXiEYz2k6y0AK\ntR273lPBhYtIvZEkC/tZQ2Grf4rtPW/kI56pZy8Jb0Q99CvBHWneQ9vNS76eq5M3\n9ZDLdSv5FoxNUg7eN+NQ0gBefONgKXykKDT/b6FW12rI8j4OosQJxASpbiagEmCj\nj8kmRHJ1vE3kP28xLvogoqP35SZj7FV57AhQPw5M7pKu9xeSMUPl8tmKHiyFh1tw\nwY2udDziBjJDc8D3yCyuiEYEExECAAYFAlUveIcACgkQK6489tr/sABVZQCePO8U\nX4TFo13F+WfoAk36fLF7Dc0AnRt7Fya08kPFKO3CQSXV4ZaW+S4utEFCasO2cm4g\nS2ltbWluaWNoIChQcml2YXRlIEVtYWlsYWRyZXNzZSkgPGJqb2Vybi5raW1taW5p\nY2hAZ214LmRlPokBOQQTAQgAIwUCVRJ/lgIbDwcLCQgHAwIBBhUIAgkKCwQWAgMB\nAh4BAheAAAoJEAYqhajL+9zaavYH/2MNLalQnGL5bTMT+sVhhrtg9qebfWVhE600\n5KYEcXEA3DCXH7SnwKriNQtJCUi94iFPTz6jjGvDlyGaZbuntahB4ynrUhMR8mR/\nuhUxYkSwdV/KMwqEP4i/FJHFgVW/c0EYRBdG2+SJHx81GPFxRnxSsdxq6rjQpa5k\njm2/+uyJi/bF2uBFswOIAk0xHSpEmkbE2YP0wwW+OFV5VL8e2FGjw6KCxyRC6NQN\njxYPhlej2hCvWqqr9TGRx+E4ER8dfUynkbNXDdztP/6dMvx+eGZd7e/So/4g7/Or\npdKx80Uk04igTHJYSZsLN1k4L/h1gfuHsbjMrGVhWLnCC9vtwvaIRgQTEQIABgUC\nVS94hwAKCRArrjz22v+wADU0AJ4uw0K5udWlv4ILDDnzRPt+lePbwwCfdIAAQf7U\nyeaVcVlyFkulTYoBcwK0M0Jqb2VybiBLaW1taW5pY2ggPGJqb2Vybi5raW1taW5p\nY2hAbm9yZGFrYWRlbWllLmRlPokBOQQTAQgAIwUCVRM92AIbDwcLCQgHAwIBBhUI\nAgkKCwQWAgMBAh4BAheAAAoJEAYqhajL+9zasF0H/3Vy4IouO8UEb8bamdyCbLeA\nX6x2obdAZIiGmzxgZZ0WPGKbV/6sipYEAlAGGH+2wxXuDXzfjizsY+u9OKsZklw1\n7PlgIW/dkiJuK73SaJwRMUgeq4bhltToaaonIt433ie9srHw+UDyc+M+da89Nv1i\n9J5vXVrMU5UCc/Wpy4JZZBJmwAnANUsBvhL/nB0qS9awsl+4bvM+NGZTCscYLfCs\niXaP7j2jI+wHtN16Q1HL98eN/cOXz/e6JX1+Oy6A3QSxU3ku3STEb2wAyJPkx1no\nNMBUASYyjLQDEmfC2IRzlRdnHuL5cywzOsDeCNynDQr/RHMKnI+UschHly1Ebi2I\nRgQTEQIABgUCVS94hwAKCRArrjz22v+wAKoGAJ4rqhHeTrtZL6xHQKBBwg7Ns3eI\n1gCfSZuaBCqxOvuCKUJzqBdmGtBPs/Q=\n=z48d\n-----END PGP PUBLIC KEY BLOCK-----\n```\n"
        },
        {
          "name": "SOLUTIONS.md",
          "type": "blob",
          "size": 10.955078125,
          "content": "# Solutions\n\nDid you write a guide specifically on hacking OWASP Juice Shop or record a hacking session of your own? Add it to this\nfile and open a PR! The same goes for any scripts or automated tools you made for making Juice Shop easier to hack!\n\n> :godmode: **Everything** mentioned on this specific page is considered\n> to contain _spoilers for entire challenge solutions_ so the entries\n> themselves are not individually tagged! You might not want to view\n> anything from this page before tackling the related challenges\n> yourself! :broken_heart: marks resources which rely on\n> [_some form of cheating_](https://pwning.owasp-juice.shop/part1/rules.html#%E2%9D%8C-things-considered-cheating)\n> to solve a challenge.\n>\n> 🧃 is followed by the last known major release of OWASP Juice Shop\n> that a solution/script/tool is supposedly working with or that a video\n> guide/solution was recorded for.\n\n## Table of contents\n\n* [Hacking Videos](#hacking-videos)\n* [Walkthroughs](#walkthroughs)\n* [Scripts & Tools](#scripts--tools)\n\n## Hacking Videos\n\n* [7 Minute Security](https://7ms.us) Podcast (🧃`v16.x`)\n  * Episode #606: [7MS #606: Hacking OWASP Juice Shop (2024 edition)]() ([YouTube](https://www.youtube.com/watch?v=-1rpelarf2E))\n  * Legacy Episodes (🧃`v2.x`)\n    * Episode #234:\n      [7MS #234: Pentesting OWASP Juice Shop - Part 5](https://7ms.us/7ms-234-pentesting-owasp-juice-shop-part5/)\n      ([YouTube](https://www.youtube.com/watch?v=lGVAXCfFwv0))\n    * Episode #233:\n      [7MS #233: Pentesting OWASP Juice Shop - Part 4](https://7ms.us/7ms-233-pentesting-owasp-juice-shop-part-4/)\n      ([YouTube](https://www.youtube.com/watch?v=1hhd9EwX7h0))\n    * Episode #232:\n      [7MS #232: Pentesting OWASP Juice Shop - Part 3](https://7ms.us/7ms-232-pentesting-owasp-juice-shop-part-3/)\n      ([YouTube](https://www.youtube.com/watch?v=F8iRF2d-YzE))\n    * Episode #231:\n      [7MS #231: Pentesting OWASP Juice Shop - Part 2](https://7ms.us/7ms-231-pentesting-owasp-juice-shop-part-2/)\n      ([YouTube](https://www.youtube.com/watch?v=523l4Pzhimc))\n    * Episode #230:\n      [7MS #230: Pentesting OWASP Juice Shop - Part 1](https://7ms.us/7ms-230-pentesting-owasp-juice-shop-part-1/)\n      ([YouTube](https://www.youtube.com/watch?v=Cz37iejTsH4))\n    * Episode #229:\n      [7MS #229: Intro to Docker for Pentesters](https://7ms.us/7ms-229-intro-to-docker-for-pentesters/)\n      ([YouTube](https://youtu.be/WIpxvBpnylI?t=407))\n* [How to Solve Juiceshop Challenges - Intern Talks](https://www.youtube.com/watch?v=dqxdbIWFD5c) by [Indian Servers University](https://www.youtube.com/c/IndianServersUniversity) (🧃`v11.x`)\n* [Hacking the OWASP Juice Shop Series](https://www.youtube.com/playlist?list=PLcsrjMNFrcmbAFV8BxDKXZCcPrOlaYfWK) playlist of [Compass IT Compliance](https://www.youtube.com/channel/UCccfSU7EGGTS76hz2i6qdrg) (🧃`v12.x`)\n  * [Hacking the OWASP Juice Shop Series - Deploying the Juice Shop](https://youtu.be/qjrEMEztxWM)\n  * [Hacking the OWASP Juice Shop Series - Challenge #1 (Score Board)](https://youtu.be/3TKm5T0ul5Y)\n  * [Hacking the OWASP Juice Shop Series - Challenge #2 (DOM XSS)](https://youtu.be/qTm52tJu4i4)\n  * [Hacking the OWASP Juice Shop Series - Challenge #3 (Bonus Payload)](https://youtu.be/GoZbpBY6R1E)\n  * [Hacking the OWASP Juice Shop Series - Challenge #4 (Repetitive Registration)](https://youtu.be/hRF1StzaXo4)\n  * [Hacking the OWASP Juice Shop Series - Challenge #5 (Bully Chatbot)](https://youtu.be/dTm_55SUW88)\n  * [Hacking the OWASP Juice Shop Series - Challenge #6 (Confidential Document)](https://youtu.be/pt6a5-O90G4)\n  * [Hacking the OWASP Juice Shop Series - Challenge #7 (Error Handling)](https://youtu.be/aFJzZJcxVd8)\n  * [Hacking the OWASP Juice Shop Series - Challenge #8 (Exposed Metrics)](https://youtu.be/PuU2deMxj3E)\n  * [Hacking the OWASP Juice Shop Series - Challenge #9 (Missing Encoding)](https://youtu.be/40ndR8btKaU)\n  * [Hacking the OWASP Juice Shop Series - Challenge #10 (Outdated Allowlist)](https://youtu.be/diXuxUxLmXU)\n  * [Hacking the OWASP Juice Shop Series - Challenge #11 (Privacy Policy)](https://youtu.be/C3Qeyh3_xOA)\n  * [Hacking the OWASP Juice Shop Series - Challenge #12 (Zero Stars)](https://youtu.be/aJOvzpOdAC0)\n  * [Hacking the OWASP Juice Shop Series - Manage Heroku and Juice Shop](https://youtu.be/5jerMnM0vXw)\n* [OWASP Juice Shop | TryHackMe Burp Suite Fundamentals](https://youtu.be/6n1pI9dJpW4) by [CyberInsight](https://www.youtube.com/channel/UCmJJUewPWfnyzvZRrFHlykA)\n* [Wie werden APIs \"gehackt\" - API Sicherheit am Beispiel](https://youtu.be/wGtS5qQ0bC0) (:de:)\n  by\n  [predic8](https://www.youtube.com/channel/UC9ONq2LjrImWzWrWf6MYd2A) (🧃`v12.x`)\n* [Hack OWASP Juice Shop](https://www.youtube.com/watch?v=0YSNRz0NRt8&list=PL8j1j35M7wtKXpTBE6V1RlN_pBZ4StKZw)\n  playlist of\n  [Hacksplained](https://www.youtube.com/channel/UCyv6ItVqQPnlFFi2zLxlzXA)\n  (🧃`v10.x` - `v11.x`)\n    * [★ Zero Stars](https://youtu.be/0YSNRz0NRt8)\n    * [★ Confidential Document](https://youtu.be/Yi7OiMtzGXc)\n    * [★ DOM XSS](https://youtu.be/BuVxyBo05F8)\n    * [★ Error Handling](https://youtu.be/WGafQnjSMk4)\n    * [★ Missing Encoding](https://youtu.be/W7Bt2AmYtao)\n    * [★ Outdated Allowlist](https://youtu.be/TEdZAXuTfpk)\n    * [★ Privacy Policy](https://youtu.be/f5tM_4vBq-w)\n    * [★ Repetitive Registration](https://youtu.be/mHjYOtKGYQM)\n    * [★★ Login Admin](https://youtu.be/LuU1fSuc7Gg)\n    * [★★ Admin Section](https://youtu.be/BPLhu354esc)\n    * [★★ Classic Stored XSS](https://youtu.be/dxzU6djocJQ)\n    * [★★ Deprecated Interface](https://youtu.be/yQ40B_eSj48)\n    * [★★ Five Star Feedback](https://youtu.be/9BsfRJA_-ik)\n    * [★★ Login MC SafeSearch](https://youtu.be/8VhGBdVK9ik)\n    * [★★ Password Strength](https://youtu.be/fnuz-3QM8ac)\n    * [★★ Security Policy](https://youtu.be/_h829JTNtKo)\n    * [★★ View Basket](https://youtu.be/hBbdxn3-aiU)\n    * [★★ Weird Crypto](https://youtu.be/GWJouiMUJno)\n    * [★★★ API-Only XSS](https://youtu.be/aGjLR4uc0ys)\n    * [★★★ Admin Registration](https://youtu.be/-H3Ngs-S0Ms)\n    * [★★★ Björn's Favorite Pet](https://youtu.be/a0k465G8Zkc)\n    * [★★★ Captcha Bypass](https://youtu.be/pgGVVOhIiaM)\n    * [★★★ Client-side XSS Protection](https://youtu.be/bNjsjs0T0_k)\n    * [★★★ Database Schema](https://youtu.be/0-D-e66U2Z0)\n    * [★★★ Forged Feedback](https://youtu.be/99iKTSkZ814)\n    * [★★★ Forged Review](https://youtu.be/k2abfhtuU9c)\n    * [★★★ GDPR Data Erasure](https://youtu.be/zBTYSpp41u8)\n    * [★★★ Login Amy](https://youtu.be/ICln3xcVxzI)\n    * [★★★ Login Bender](https://youtu.be/a6kh9fL77A0)\n    * [★★★ Login Jim](https://youtu.be/zJpJibswGWA)\n    * [★★★ Manipluate Basket](https://youtu.be/pdtDtmIiSOQ)\n    * [★★★ Payback Time](https://youtu.be/QN4f00VsXn4)\n    * [★★★ Privacy Policy Inspection](https://youtu.be/5DUXTmp5KbI)\n    * [★★★ Product Tampering](https://youtu.be/G4UKdotkyu8)\n    * [★★★ Reset Jim's Password](https://youtu.be/qYVlxeKVhgA)\n    * [★★★ Upload Size](https://youtu.be/5pcAPUihhWA)\n    * [★★★ Upload Type](https://youtu.be/4FPyMdyVt2s)\n    * [★★★★ Access Log (Sensitive Data Exposure)](https://youtu.be/RBTfGk-ZwnY)\n    * [★★★★ Ephemeral Accountant (SQL-Injection)](https://youtu.be/rD-_fRDHf9o)\n    * [★★★★ Expired Coupon (Improper Input Validation)](https://youtu.be/4cWTUdTvTZg)\n    * [★★★★ Forgotten Developer Backup (Sensitive Data Exposure)](https://youtu.be/YvkuVZ6r2Rg)\n    * [★★★★ Forgotten Sales Backup (Sensitive Data Exposure)](https://youtu.be/5g4WRASni6g)\n    * [★★★★ GDPR Data Theft (Sensitive Data Exposure)](https://youtu.be/GPW90c4Ahbc)\n    * [★★★★ Legacy Typosquatting (Vulnerable Components)](https://youtu.be/HqkGeWtwiHY)\n    * [★★★★ Login Bjoern (Broken Authentication)](https://youtu.be/pmBJ1ZAlpF8)\n    * [★★★★ Misplaced Signature File (Sensitive Data Exposure)](https://youtu.be/56qHiwxTjYY)\n    * [★★★★ Nested Easter Egg (Cryptographic Issues)](https://youtu.be/yvatrnWvcGE)\n    * [★★★★ NoSql Manipulation (Injection)](https://youtu.be/frymuDxKwmc)\n      :broken_heart:\n    * [★★★★★ Change Benders Password (Broken Authentication)](https://youtu.be/J3BSi-z9_7I)\n    * [★★★★★ Extra Language (Broken Anti Automation)](https://youtu.be/KU2LzxABetk)\n* [Broken Authentication and SQL Injection - OWASP Juice Shop TryHackMe](https://youtu.be/W4MXUnZB2jc)\n  by\n  [Motasem Hamdan - CyberSecurity Trainer](https://www.youtube.com/channel/UCNSdU_1ehXtGclimTVckHmQ)\n* Live Hacking von Online-Shop „Juice Shop” (:de:)\n  [Twitch live stream](https://www.twitch.tv/GregorBiswanger) recordings by\n  [Gregor Biswanger](https://www.youtube.com/channel/UCGMA9qDbIQ-EhgLD-ZrsHWw)\n  (🧃`v11.x`)\n    * [Level 1](https://youtu.be/ccy-eKYpdbk)\n    * [Level 2](https://youtu.be/KtMPEDJx0Sg)\n    * [Level 3](https://youtu.be/aqXfFVHJ91g)\n    * [Level 4](https://youtu.be/jfe-iEePlTc)\n* [HackerOne #h1-2004 Community Day: Intro to Web Hacking - OWASP Juice Shop](https://youtu.be/KmlwIwG7Kv4)\n  by [Nahamsec](https://twitch.tv/nahamsec) including the creation of a\n  (fake) bugbounty report for all findings (🧃`v10.x`)\n* [TryHackme - JuiceShop Walkthrough](https://youtu.be/3yYNvRVlKmo) by\n  [Profesor Parno](https://www.youtube.com/channel/UCcBThq4OKjox_kfPkG1BF0Q)\n  (🧃`v8.x`, 🇮🇩)\n* [OWASP Juice Shop All Challenges Solved || ETHIKERS](https://youtu.be/Fjdhf6OHgRk)\n  full-spoiler, time-lapsed, no-commentary hacking trip (🧃`v8.x`)\n* [Hacking JavaScript - Intro to Hacking Web Apps (Episode 3)](https://youtu.be/ejB1i5n_d7o)\n  by Arthur Kay (🧃`v8.x`)\n* [HackerSploit](https://www.youtube.com/channel/UC0ZTPkdxlAKf-V33tqXwi3Q)\n  YouTube channel (🧃`v7.x`)\n    * [OWASP Juice Shop - SQL Injection](https://youtu.be/nH4r6xv-qGg)\n    * [Web App Penetration Testing - #15 - HTTP Attributes (Cookie Stealing)](https://youtu.be/8s3ChNKU85Q)\n    * [Web App Penetration Testing - #14 - Cookie Collection & Reverse Engineering](https://youtu.be/qtr0qtptYys)\n    * [Web App Penetration Testing - #13 - CSRF (Cross Site Request Forgery)](https://youtu.be/TwG0Rd0hr18)\n    * [How To Install OWASP Juice Shop](https://youtu.be/tvNKp1QXV_8)\n\n## Walkthroughs\n\n* Blog post (:myanmar:) on [LOL Security](http://location-href.com/):\n  [Juice Shop Walkthrough](http://location-href.com/owasp-juice-shop-walkthroughs/)\n  (🧃`v2.x`)\n* Blog post on [IncognitJoe](https://incognitjoe.github.io/):\n  [Hacking(and automating!) the OWASP Juice Shop](https://incognitjoe.github.io/hacking-the-juice-shop.html)\n  (🧃`v2.x`)\n\n## Scripts & Tools\n\n* [Session management script for OWASP Juice Shop](https://github.com/zaproxy/zaproxy/blob/master/zap/src/main/dist/scripts/templates/session/Juice%20Shop%20Session%20Management.js)\n  distributed as a scripting template with\n  [OWASP ZAP](https://github.com/zaproxy/zaproxy) since version 2.9.0\n  (🧃`v10.x`)\n* [Automated solving script for the OWASP Juice Shop](https://github.com/incognitjoe/juice-shop-solver)\n  written in Python by [@incognitjoe](https://github.com/incognitjoe)\n  (🧃`v2.x`)\n\n"
        },
        {
          "name": "app.json",
          "type": "blob",
          "size": 0.607421875,
          "content": "{\n  \"name\": \"OWASP Juice Shop\",\n  \"description\": \"Probably the most modern and sophisticated insecure web application\",\n  \"keywords\": [\n    \"web security\",\n    \"web application security\",\n    \"webappsec\",\n    \"owasp\",\n    \"pentest\",\n    \"pentesting\",\n    \"security\",\n    \"vulnerable\",\n    \"vulnerability\",\n    \"broken\",\n    \"bodgeit\",\n    \"ctf\",\n    \"capture the flag\",\n    \"awareness\"\n  ],\n  \"website\": \"https://owasp-juice.shop\",\n  \"repository\": \"https://github.com/juice-shop/juice-shop\",\n  \"logo\": \"https://raw.githubusercontent.com/juice-shop/juice-shop/master/frontend/src/assets/public/images/JuiceShop_Logo.png\"\n}\n"
        },
        {
          "name": "app.ts",
          "type": "blob",
          "size": 0.37890625,
          "content": "/*\n * Copyright (c) 2014-2024 Bjoern Kimminich & the OWASP Juice Shop contributors.\n * SPDX-License-Identifier: MIT\n */\n\nasync function app () {\n  const { default: validateDependencies } = await import('./lib/startup/validateDependenciesBasic')\n  await validateDependencies()\n\n  const server = await import('./server')\n  await server.start()\n}\n\napp()\n  .catch(err => {\n    throw err\n  })\n"
        },
        {
          "name": "config.schema.yml",
          "type": "blob",
          "size": 13.2314453125,
          "content": "server:\n  port:\n    type: number\n  basePath:\n    type: string\n  baseUrl:\n    type: string\napplication:\n  domain:\n    type: string\n  name:\n    type: string\n  logo:\n    type: string\n  favicon:\n    type: string\n  theme:\n    type: string\n  showVersionNumber:\n    type: boolean\n  showGitHubLinks:\n    type: boolean\n  localBackupEnabled:\n    type: boolean\n  numberOfRandomFakeUsers:\n    type: number\n  altcoinName:\n    type: string\n  privacyContactEmail:\n    type: string\n  customMetricsPrefix:\n    type: string\n  chatBot:\n    name:\n      type: string\n    greeting:\n      type: string\n    trainingData:\n      type: string\n    defaultResponse:\n      type: string\n    avatar:\n      type: string\n  social:\n    twitterUrl:\n      type: string\n    facebookUrl:\n      type: string\n    slackUrl:\n      type: string\n    redditUrl:\n      type: string\n    pressKitUrl:\n      type: string\n    nftUrl:\n      type: string\n    questionnaireUrl:\n      type: string\n  recyclePage:\n    topProductImage:\n      type: string\n    bottomProductImage:\n      type: string\n  welcomeBanner:\n    showOnFirstStart:\n      type: boolean\n    title:\n      type: string\n    message:\n      type: string\n  cookieConsent:\n    message:\n      type: string\n    dismissText:\n      type: string\n    linkText:\n      type: string\n    linkUrl:\n      type: string\n  securityTxt:\n    contact:\n      type: string\n    encryption:\n      type: string\n    acknowledgements:\n      type: string\n    hiring:\n      type: string\n    csaf:\n      type: string\n  promotion:\n    video:\n      type: string\n    subtitles:\n      type: string\n  easterEggPlanet:\n    name:\n      type: string\n    overlayMap:\n      type: string\n  googleOauth:\n    clientId:\n      type: string\n    authorizedRedirects:\n      - uri:\n          type: string\n        proxy:\n          type: string\nchallenges:\n  showSolvedNotifications:\n    type: boolean\n  showHints:\n    type: boolean\n  showMitigations:\n    type: boolean\n  codingChallengesEnabled:\n    type: string\n  restrictToTutorialsFirst:\n    type: boolean\n  overwriteUrlForProductTamperingChallenge:\n    type: string\n  xssBonusPayload:\n    type: string\n  safetyMode:\n    type: string\n    enum: ['enabled', 'disabled','auto']\n  showFeedbackButtons:\n    type: boolean\n  csafHashValue:\n    type: string\nhackingInstructor:\n  isEnabled:\n    type: boolean\n  avatarImage:\n    type: string\n  hintPlaybackSpeed:\n    type: string\nproducts:\n  - name:\n      type: string\n    price:\n      type: number\n    deluxePrice:\n      type: number\n    description:\n      type: string\n    image:\n      type: string\n    quantity:\n      type: number\n    limitPerUser:\n      type: number\n    deletedDate:\n      type: string\n    urlForProductTamperingChallenge:\n      type: string\n    useForChristmasSpecialChallenge:\n      type: boolean\n    keywordsForPastebinDataLeakChallenge:\n      - type: string\n    fileForRetrieveBlueprintChallenge:\n      type: string\n    exifForBlueprintChallenge:\n      - type: string\n    reviews:\n      - text:\n          type: string\n        author:\n          type: string\nmemories:\n  - image:\n      type: string\n    caption:\n      type: string\n    user:\n      type: string\n    geoStalkingMetaSecurityQuestion:\n      type: number\n    geoStalkingMetaSecurityAnswer:\n      type: string\n    geoStalkingVisualSecurityQuestion:\n      type: number\n    geoStalkingVisualSecurityAnswer:\n      type: string\nctf:\n  showFlagsInNotifications:\n    type: boolean\n  showCountryDetailsInNotifications:\n    type: string\n  countryMapping:\n    scoreBoardChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    errorHandlingChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    forgedReviewChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    loginAdminChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    loginJimChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    loginBenderChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    localXssChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    reflectedXssChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    persistedXssUserChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    persistedXssFeedbackChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    restfulXssChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    unionSqlInjectionChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    weakPasswordChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    feedbackChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    forgedFeedbackChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    redirectCryptoCurrencyChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    redirectChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    basketAccessChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    negativeOrderChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    directoryListingChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    forgottenDevBackupChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    forgottenBackupChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    adminSectionChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    changePasswordBenderChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    changeProductChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    knownVulnerableComponentChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    weirdCryptoChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    easterEggLevelOneChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    easterEggLevelTwoChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    forgedCouponChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    christmasSpecialChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    uploadSizeChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    uploadTypeChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    fileWriteChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    extraLanguageChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    captchaBypassChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    zeroStarsChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    continueCodeChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    oauthUserPasswordChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    loginSupportChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    loginRapperChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    premiumPaywallChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    resetPasswordJimChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    resetPasswordBenderChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    resetPasswordMortyChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    resetPasswordUvoginChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    resetPasswordBjoernChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    noSqlCommandChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    noSqlReviewsChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    noSqlOrdersChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    retrieveBlueprintChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    typosquattingNpmChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    typosquattingAngularChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    jwtUnsignedChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    jwtForgedChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    misplacedSignatureFileChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    deprecatedInterfaceChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    xxeFileDisclosureChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    xxeDosChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    rceChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    rceOccupyChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    tokenSaleChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    nftUnlockChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    nftMintChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    web3WalletChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    web3SandboxChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    securityPolicyChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    hiddenImageChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    supplyChainAttackChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    timingAttackChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    basketManipulateChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    emailLeakChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    registerAdminChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    httpHeaderXssChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    sstiChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    ssrfChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    loginAmyChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    usernameXssChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    resetPasswordBjoernOwaspChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    accessLogDisclosureChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    dlpPasswordSprayingChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    dlpPastebinDataLeakChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    videoXssChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    twoFactorAuthUnsafeSecretStorageChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    manipulateClockChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    privacyPolicyChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    privacyPolicyProofChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    passwordRepeatChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    dataExportChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    ghostLoginChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    dbSchemaChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    ephemeralAccountantChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    missingEncodingChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    svgInjectionChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    exposedMetricsChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    freeDeluxeChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    csrfChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    xssBonusChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    geoStalkingMetaChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    geoStalkingVisualChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    killChatbotChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    nullByteChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    bullyChatbotChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    lfrChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    closeNotificationsChallenge:\n      name:\n        type: string\n      code:\n        type: string\n    emptyUserRegistration:\n      name:\n        type: string\n      code:\n        type: string\n    csafChallenge:\n      name:\n        type: string\n      code:\n        type: string\n"
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "crowdin.yaml",
          "type": "blob",
          "size": 0.3125,
          "content": "commit_message: |-\n  [ci skip]\n  Signed-off-by: Björn Kimminich <bjoern.kimminich@gmx.de>\nfiles:\n  - source: /frontend/src/assets/i18n/en.json\n    translation: /frontend/src/assets/i18n/%locale_with_underscore%.json\n  - source: /data/static/i18n/en.json\n    translation: /data/static/i18n/%locale_with_underscore%.json\n"
        },
        {
          "name": "ctf.key",
          "type": "blob",
          "size": 0.029296875,
          "content": "TRwzkRJnHOTckssAeyJbysWgP!Qc2T"
        },
        {
          "name": "cypress.config.ts",
          "type": "blob",
          "size": 3.3984375,
          "content": "import { defineConfig } from 'cypress'\nimport * as security from './lib/insecurity'\nimport config from 'config'\nimport type { Memory as MemoryConfig, Product as ProductConfig } from './lib/config.types'\nimport * as utils from './lib/utils'\nimport * as otplib from 'otplib'\n\nexport default defineConfig({\n  projectId: '3hrkhu',\n  defaultCommandTimeout: 10000,\n  e2e: {\n    baseUrl: 'http://localhost:3000',\n    specPattern: 'test/cypress/e2e/**.spec.ts',\n    downloadsFolder: 'test/cypress/downloads',\n    fixturesFolder: false,\n    supportFile: 'test/cypress/support/e2e.ts',\n    setupNodeEvents (on: any) {\n      on('before:browser:launch', (browser: any = {}, launchOptions: any) => { // TODO Remove after upgrade to Cypress >=12.5.0 <or> Chrome 119 become available on GitHub Workflows, see https://github.com/cypress-io/cypress-documentation/issues/5479\n        if (browser.name === 'chrome' && browser.isHeadless) {\n          launchOptions.args = launchOptions.args.map((arg: any) => {\n            if (arg === '--headless') {\n              return '--headless=new'\n            }\n\n            return arg\n          })\n        }\n        return launchOptions\n      })\n\n      on('task', {\n        GenerateCoupon (discount: number) {\n          return security.generateCoupon(discount)\n        },\n        GetBlueprint () {\n          for (const product of config.get<ProductConfig[]>('products')) {\n            if (product.fileForRetrieveBlueprintChallenge) {\n              const blueprint = product.fileForRetrieveBlueprintChallenge\n              return blueprint\n            }\n          }\n        },\n        GetChristmasProduct () {\n          return config.get<ProductConfig[]>('products').filter(\n            (product) => product.useForChristmasSpecialChallenge\n          )[0]\n        },\n        GetCouponIntent () {\n          const trainingData = require(`data/chatbot/${utils.extractFilename(\n            config.get('application.chatBot.trainingData')\n          )}`)\n          const couponIntent = trainingData.data.filter(\n            (data: { intent: string }) => data.intent === 'queries.couponCode'\n          )[0]\n          return couponIntent\n        },\n        GetFromMemories (property: string) {\n          for (const memory of config.get<MemoryConfig[]>('memories') as any) {\n            if (memory[property]) {\n              return memory[property]\n            }\n          }\n        },\n        GetFromConfig (variable: string) {\n          return config.get(variable)\n        },\n        GetOverwriteUrl () {\n          return config.get('challenges.overwriteUrlForProductTamperingChallenge')\n        },\n        GetPastebinLeakProduct () {\n          return config.get<ProductConfig[]>('products').filter(\n            (product) => product.keywordsForPastebinDataLeakChallenge\n          )[0]\n        },\n        GetTamperingProductId () {\n          const products = config.get<ProductConfig[]>('products')\n          for (let i = 0; i < products.length; i++) {\n            if (products[i].urlForProductTamperingChallenge) {\n              return i + 1\n            }\n          }\n        },\n        GenerateAuthenticator (inputString: string) {\n          return otplib.authenticator.generate(inputString)\n        },\n        toISO8601 () {\n          const date = new Date()\n          return utils.toISO8601(date)\n        },\n        isDocker () {\n          return utils.isDocker()\n        },\n        isWindows () {\n          return utils.isWindows()\n        }\n      })\n    }\n  }\n})\n"
        },
        {
          "name": "data",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.test.yml",
          "type": "blob",
          "size": 0.123046875,
          "content": "services:\n  sut:\n    build: ./test/smoke/\n    links:\n      - app\n  app:\n    image: bkimminich/juice-shop:latest\n    build: ./\n"
        },
        {
          "name": "encryptionkeys",
          "type": "tree",
          "content": null
        },
        {
          "name": "frontend",
          "type": "tree",
          "content": null
        },
        {
          "name": "ftp",
          "type": "tree",
          "content": null
        },
        {
          "name": "i18n",
          "type": "tree",
          "content": null
        },
        {
          "name": "lib",
          "type": "tree",
          "content": null
        },
        {
          "name": "models",
          "type": "tree",
          "content": null
        },
        {
          "name": "monitoring",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 8.71484375,
          "content": "{\n  \"name\": \"juice-shop\",\n  \"version\": \"17.1.1\",\n  \"private\": true,\n  \"description\": \"Probably the most modern and sophisticated insecure web application\",\n  \"keywords\": [\n    \"web security\",\n    \"web application security\",\n    \"webappsec\",\n    \"owasp\",\n    \"pentest\",\n    \"pentesting\",\n    \"security\",\n    \"vulnerable\",\n    \"vulnerability\",\n    \"broken\",\n    \"bodgeit\",\n    \"ctf\",\n    \"capture the flag\",\n    \"awareness\"\n  ],\n  \"homepage\": \"https://owasp-juice.shop\",\n  \"bugs\": {\n    \"url\": \"https://github.com/juice-shop/juice-shop/issues\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/juice-shop/juice-shop.git\"\n  },\n  \"license\": \"MIT\",\n  \"author\": \"Björn Kimminich <bjoern.kimminich@owasp.org> (https://kimminich.de)\",\n  \"contributors\": [\n    \"Björn Kimminich\",\n    \"Jannik Hollenbach\",\n    \"Aashish683\",\n    \"greenkeeper[bot]\",\n    \"MarcRler\",\n    \"agrawalarpit14\",\n    \"Scar26\",\n    \"ShubhamPalriwala\",\n    \"CaptainFreak\",\n    \"JuiceShopBot\",\n    \"Supratik Das\",\n    \"the-pro\",\n    \"Ziyang Li\",\n    \"Timo Pagel\",\n    \"aaryan10\",\n    \"...\"\n  ],\n  \"scripts\": {\n    \"build:frontend\": \"cd frontend && node ./node_modules/@angular/cli/bin/ng build --aot --configuration production --output-hashing=none --vendor-chunk=true --source-map=false\",\n    \"build:server\": \"tsc\",\n    \"cypress:open\": \"cypress open\",\n    \"cypress:run\": \"cypress run\",\n    \"frisby\": \"nyc --report-dir=./build/reports/coverage/api-tests jest --silent --runInBand --forceExit\",\n    \"postinstall\": \"cd frontend && npm install --legacy-peer-deps && cd .. && npm run build:frontend && (npm run --silent build:server || cd .)\",\n    \"lint\": \"eslint *.ts data lib models routes test/**/*.ts views && cd frontend && ng lint && npx stylelint \\\"**/*.scss\\\" && cd ..\",\n    \"lint:config\": \"schema validate -s config.schema.yml\",\n    \"lint:fix\": \"eslint *.ts data lib models routes test/**/*.ts views rsn --fix && cd frontend && ng lint --fix && npx stylelint \\\"**/*.scss\\\" --fix && cd ..\",\n    \"package\": \"grunt package\",\n    \"package:ci\": \"npm prune --production && npm dedupe && cd frontend && npm prune --legacy-peer-deps --production && cd .. && npm run --silent sbom && grunt package\",\n    \"serve\": \"concurrently --kill-others \\\"ts-node app.ts\\\" \\\"cd frontend && ng serve\\\"\",\n    \"serve:dev\": \"concurrently --kill-others \\\"ts-node-dev app.ts\\\" \\\"cd frontend && ng serve\\\"\",\n    \"start\": \"node build/app\",\n    \"test\": \"cd frontend && ng test --watch=false --source-map=true && cd .. && npm run test:server\",\n    \"test:chromium\": \"cd frontend && ng test --watch=false --source-map=false --browsers=ChromiumHeadless && cd .. && npm run test:server\",\n    \"test:server\": \"nyc --report-dir=./build/reports/coverage/server-tests mocha -r ts-node/register -r source-map-support/register --recursive test/server/**/*.ts\",\n    \"test:api\": \"npm run frisby\",\n    \"rsn\": \"ts-node rsn/rsn.ts\",\n    \"rsn:verbose\": \"ts-node rsn/rsn-verbose.ts\",\n    \"rsn:update\": \"ts-node rsn/rsn-update.ts\",\n    \"vagrant\": \"cd vagrant && vagrant up\",\n    \"sbom\": \"npm run sbom:json && npm run sbom:xml\",\n    \"sbom:json\": \"cyclonedx-npm --omit=dev --output-format=JSON --output-file=bom.json\",\n    \"sbom:xml\": \" cyclonedx-npm --omit=dev --output-format=XML  --output-file=bom.xml\"\n  },\n  \"jest\": {\n    \"preset\": \"ts-jest\",\n    \"globals\": {\n      \"ts-jest\": {\n        \"diagnostics\": false\n      }\n    },\n    \"globalSetup\": \"./test/apiTestsSetup.ts\",\n    \"globalTeardown\": \"./test/apiTestsTeardown.ts\",\n    \"modulePathIgnorePatterns\": [\n      \"/build\"\n    ],\n    \"setupFilesAfterEnv\": [\n      \"./test/apiTestsSetupJest.ts\"\n    ],\n    \"testMatch\": [\n      \"<rootDir>/test/api/*Spec.[jt]s\"\n    ],\n    \"testPathIgnorePatterns\": [\n      \"/node_modules/\",\n      \"/frontend/node_modules/\"\n    ],\n    \"testURL\": \"http://localhost\"\n  },\n  \"nyc\": {\n    \"extends\": \"@istanbuljs/nyc-config-typescript\",\n    \"all\": true,\n    \"include\": [\n      \"lib/*.ts\",\n      \"models/*.ts\",\n      \"routes/*.ts\",\n      \"server.ts\"\n    ],\n    \"reporter\": [\n      \"lcov\",\n      \"text-summary\"\n    ]\n  },\n  \"dependencies\": {\n    \"body-parser\": \"^1.20.2\",\n    \"check-dependencies\": \"^1.1.0\",\n    \"check-internet-connected\": \"^2.0.6\",\n    \"clarinet\": \"^0.12.5\",\n    \"colors\": \"1.4.0\",\n    \"compression\": \"^1.7.4\",\n    \"concurrently\": \"^5.3.0\",\n    \"config\": \"^3.3.9\",\n    \"cookie-parser\": \"^1.4.5\",\n    \"cors\": \"^2.8.5\",\n    \"dottie\": \"^2.0.2\",\n    \"download\": \"^8.0.0\",\n    \"errorhandler\": \"^1.5.1\",\n    \"ethers\": \"^6.7.0\",\n    \"exif\": \"^0.6.0\",\n    \"express\": \"^4.17.1\",\n    \"express-ipfilter\": \"^1.2.0\",\n    \"express-jwt\": \"0.1.3\",\n    \"express-rate-limit\": \"^5.3.0\",\n    \"express-robots-txt\": \"^0.4.1\",\n    \"express-security.txt\": \"^2.0.0\",\n    \"feature-policy\": \"^0.5.0\",\n    \"file-stream-rotator\": \"^0.5.7\",\n    \"file-type\": \"^16.1.0\",\n    \"filesniffer\": \"^1.0.3\",\n    \"finale-rest\": \"^1.1.1\",\n    \"fs-extra\": \"^9.0.1\",\n    \"fuzzball\": \"^1.3.0\",\n    \"glob\": \"^10.3.10\",\n    \"graceful-fs\": \"^4.2.6\",\n    \"grunt\": \"^1.2.1\",\n    \"grunt-contrib-compress\": \"^1.6.0\",\n    \"grunt-replace-json\": \"^0.1.0\",\n    \"hashids\": \"^2.2.1\",\n    \"hbs\": \"^4.0.4\",\n    \"helmet\": \"^4.0.0\",\n    \"html-entities\": \"^1.3.1\",\n    \"i18n\": \"^0.11.1\",\n    \"js-yaml\": \"^3.14.0\",\n    \"jsonwebtoken\": \"0.4.0\",\n    \"jssha\": \"^3.1.1\",\n    \"juicy-chat-bot\": \"~0.8.0\",\n    \"libxmljs\": \"^1.0.11\",\n    \"marsdb\": \"^0.6.11\",\n    \"median\": \"^0.0.2\",\n    \"morgan\": \"^1.10.0\",\n    \"multer\": \"^1.4.5-lts.1\",\n    \"node-pre-gyp\": \"^0.15.0\",\n    \"notevil\": \"^1.3.3\",\n    \"on-finished\": \"^2.3.0\",\n    \"otplib\": \"^12.0.1\",\n    \"pdfkit\": \"^0.11.0\",\n    \"portscanner\": \"^2.2.0\",\n    \"prom-client\": \"^14.1.0\",\n    \"pug\": \"^3.0.0\",\n    \"replace\": \"^1.2.0\",\n    \"request\": \"^2.88.2\",\n    \"sanitize-filename\": \"^1.6.3\",\n    \"sanitize-html\": \"1.4.2\",\n    \"semver\": \"^7.3.2\",\n    \"sequelize\": \"^6.15.1\",\n    \"serve-index\": \"^1.9.1\",\n    \"socket.io\": \"^3.1.0\",\n    \"sqlite3\": \"^5.0.8\",\n    \"svg-captcha\": \"^1.4.0\",\n    \"swagger-ui-express\": \"^5.0.0\",\n    \"ts-node-dev\": \"^1.1.6\",\n    \"unzipper\": \"0.9.15\",\n    \"web3\": \"^4.0.3\",\n    \"winston\": \"^3.3.3\",\n    \"yaml-schema-validator\": \"^1.2.2\",\n    \"z85\": \"^0.0.2\"\n  },\n  \"devDependencies\": {\n    \"@cyclonedx/cyclonedx-npm\": \"^1.12.0\",\n    \"@istanbuljs/nyc-config-typescript\": \"^1.0.1\",\n    \"@types/chai\": \"^4.2.14\",\n    \"@types/chai-as-promised\": \"^7.1.3\",\n    \"@types/clarinet\": \"^0.12.1\",\n    \"@types/compression\": \"^1.7.0\",\n    \"@types/config\": \"^3.3.3\",\n    \"@types/cookie-parser\": \"^1.4.2\",\n    \"@types/cors\": \"^2.8.9\",\n    \"@types/cross-spawn\": \"^6.0.2\",\n    \"@types/cypress\": \"^1.1.3\",\n    \"@types/download\": \"^8.0.5\",\n    \"@types/errorhandler\": \"^1.5.0\",\n    \"@types/exif\": \"^0.6.3\",\n    \"@types/express\": \"^4.17.11\",\n    \"@types/express-jwt\": \"^6.0.0\",\n    \"@types/frisby\": \"^2.0.10\",\n    \"@types/fs-extra\": \"^9.0.6\",\n    \"@types/glob\": \"^7.1.6\",\n    \"@types/graceful-fs\": \"^4.1.5\",\n    \"@types/i18n\": \"^0.12.0\",\n    \"@types/jasmine\": \"~3.9.1\",\n    \"@types/jest\": \"^26.0.20\",\n    \"@types/js-yaml\": \"^3.12.6\",\n    \"@types/jsonwebtoken\": \"^8.5.0\",\n    \"@types/jws\": \"^3.2.5\",\n    \"@types/mocha\": \"^8.1.1\",\n    \"@types/morgan\": \"^1.9.2\",\n    \"@types/multer\": \"^1.4.5\",\n    \"@types/node\": \"^17.0.36\",\n    \"@types/on-finished\": \"^2.3.1\",\n    \"@types/pdfkit\": \"^0.10.6\",\n    \"@types/portscanner\": \"^2.1.0\",\n    \"@types/pug\": \"^2.0.4\",\n    \"@types/request\": \"^2.48.5\",\n    \"@types/sanitize-html\": \"^1.27.0\",\n    \"@types/semver\": \"^7.3.4\",\n    \"@types/sequelize\": \"^4.28.11\",\n    \"@types/serve-index\": \"^1.7.30\",\n    \"@types/sinon\": \"^10.0.4\",\n    \"@types/sinon-chai\": \"^3.2.5\",\n    \"@types/socket.io\": \"^2.1.13\",\n    \"@types/socket.io-client\": \"^1.4.35\",\n    \"@types/swagger-ui-express\": \"^4.1.2\",\n    \"@types/unzipper\": \"^0.10.3\",\n    \"@types/validator\": \"^13.1.3\",\n    \"@typescript-eslint/eslint-plugin\": \"6.18.1\",\n    \"@typescript-eslint/parser\": \"6.18.1\",\n    \"chai\": \"^4.2.0\",\n    \"chai-as-promised\": \"^7.1.1\",\n    \"cross-spawn\": \"^7.0.3\",\n    \"cypress\": \"^13.6.1\",\n    \"eslint\": \"^8.49.0\",\n    \"eslint-config-standard-with-typescript\": \"^39.0.0\",\n    \"eslint-plugin-import\": \"^2.28.1\",\n    \"eslint-plugin-node\": \"^11.1.0\",\n    \"eslint-plugin-promise\": \"^6.1.1\",\n    \"frisby\": \"https://github.com/bkimminich/frisby.git\",\n    \"grunt-cli\": \"^1.3.2\",\n    \"http-server\": \"^0.12.3\",\n    \"jasmine\": \"^3.9.0\",\n    \"jasmine-core\": \"~3.9.0\",\n    \"jasmine-reporters\": \"^2.5.0\",\n    \"jest\": \"^26.6.3\",\n    \"mocha\": \"^8.1.1\",\n    \"node-fetch\": \"^2.6.13\",\n    \"nyc\": \"^15.1.0\",\n    \"shelljs\": \"^0.8.4\",\n    \"sinon\": \"^11.1.2\",\n    \"sinon-chai\": \"^3.7.0\",\n    \"socket.io-client\": \"^3.1.0\",\n    \"source-map-support\": \"^0.5.19\",\n    \"ts-jest\": \"^26.5.0\",\n    \"ts-node\": \"^10.8.0\",\n    \"typescript\": \"~4.6.0\"\n  },\n  \"engines\": {\n    \"node\": \"18 - 22\"\n  },\n  \"os\": [\n    \"win32\",\n    \"linux\",\n    \"darwin\",\n    \"freebsd\",\n    \"openbsd\"\n  ],\n  \"cpu\": [\n    \"x64\",\n    \"x32\",\n    \"arm64\",\n    \"arm\"\n  ],\n  \"heroku-run-build-script\": true,\n  \"standard\": {\n    \"global\": [\n      \"angular\",\n      \"inject\"\n    ]\n  }\n}\n"
        },
        {
          "name": "routes",
          "type": "tree",
          "content": null
        },
        {
          "name": "rsn",
          "type": "tree",
          "content": null
        },
        {
          "name": "screenshots",
          "type": "tree",
          "content": null
        },
        {
          "name": "server.ts",
          "type": "blob",
          "size": 34.4541015625,
          "content": "/*\n * Copyright (c) 2014-2024 Bjoern Kimminich & the OWASP Juice Shop contributors.\n * SPDX-License-Identifier: MIT\n */\nimport dataErasure from './routes/dataErasure'\nimport fs = require('fs')\nimport { type Request, type Response, type NextFunction } from 'express'\nimport { sequelize } from './models'\nimport { UserModel } from './models/user'\nimport { QuantityModel } from './models/quantity'\nimport { CardModel } from './models/card'\nimport { PrivacyRequestModel } from './models/privacyRequests'\nimport { AddressModel } from './models/address'\nimport { SecurityAnswerModel } from './models/securityAnswer'\nimport { SecurityQuestionModel } from './models/securityQuestion'\nimport { RecycleModel } from './models/recycle'\nimport { ComplaintModel } from './models/complaint'\nimport { ChallengeModel } from './models/challenge'\nimport { BasketItemModel } from './models/basketitem'\nimport { FeedbackModel } from './models/feedback'\nimport { ProductModel } from './models/product'\nimport { WalletModel } from './models/wallet'\nimport logger from './lib/logger'\nimport config from 'config'\nimport path from 'path'\nimport morgan from 'morgan'\nimport colors from 'colors/safe'\nimport * as utils from './lib/utils'\nimport * as Prometheus from 'prom-client'\nimport datacreator from './data/datacreator'\n\nimport validatePreconditions from './lib/startup/validatePreconditions'\nimport cleanupFtpFolder from './lib/startup/cleanupFtpFolder'\nimport validateConfig from './lib/startup/validateConfig'\nimport restoreOverwrittenFilesWithOriginals from './lib/startup/restoreOverwrittenFilesWithOriginals'\nimport registerWebsocketEvents from './lib/startup/registerWebsocketEvents'\nimport customizeApplication from './lib/startup/customizeApplication'\nimport customizeEasterEgg from './lib/startup/customizeEasterEgg' // vuln-code-snippet hide-line\n\nimport authenticatedUsers from './routes/authenticatedUsers'\n\nconst startTime = Date.now()\nconst finale = require('finale-rest')\nconst express = require('express')\nconst compression = require('compression')\nconst helmet = require('helmet')\nconst featurePolicy = require('feature-policy')\nconst errorhandler = require('errorhandler')\nconst cookieParser = require('cookie-parser')\nconst serveIndex = require('serve-index')\nconst bodyParser = require('body-parser')\nconst cors = require('cors')\nconst securityTxt = require('express-security.txt')\nconst robots = require('express-robots-txt')\nconst yaml = require('js-yaml')\nconst swaggerUi = require('swagger-ui-express')\nconst RateLimit = require('express-rate-limit')\nconst ipfilter = require('express-ipfilter').IpFilter\nconst swaggerDocument = yaml.load(fs.readFileSync('./swagger.yml', 'utf8'))\nconst {\n  ensureFileIsPassed,\n  handleZipFileUpload,\n  checkUploadSize,\n  checkFileType,\n  handleXmlUpload\n} = require('./routes/fileUpload')\nconst profileImageFileUpload = require('./routes/profileImageFileUpload')\nconst profileImageUrlUpload = require('./routes/profileImageUrlUpload')\nconst redirect = require('./routes/redirect')\nconst vulnCodeSnippet = require('./routes/vulnCodeSnippet')\nconst vulnCodeFixes = require('./routes/vulnCodeFixes')\nconst angular = require('./routes/angular')\nconst easterEgg = require('./routes/easterEgg')\nconst premiumReward = require('./routes/premiumReward')\nconst privacyPolicyProof = require('./routes/privacyPolicyProof')\nconst appVersion = require('./routes/appVersion')\nconst repeatNotification = require('./routes/repeatNotification')\nconst continueCode = require('./routes/continueCode')\nconst restoreProgress = require('./routes/restoreProgress')\nconst fileServer = require('./routes/fileServer')\nconst quarantineServer = require('./routes/quarantineServer')\nconst keyServer = require('./routes/keyServer')\nconst logFileServer = require('./routes/logfileServer')\nconst metrics = require('./routes/metrics')\nconst currentUser = require('./routes/currentUser')\nconst login = require('./routes/login')\nconst changePassword = require('./routes/changePassword')\nconst resetPassword = require('./routes/resetPassword')\nconst securityQuestion = require('./routes/securityQuestion')\nconst search = require('./routes/search')\nconst coupon = require('./routes/coupon')\nconst basket = require('./routes/basket')\nconst order = require('./routes/order')\nconst verify = require('./routes/verify')\nconst recycles = require('./routes/recycles')\nconst b2bOrder = require('./routes/b2bOrder')\nconst showProductReviews = require('./routes/showProductReviews')\nconst createProductReviews = require('./routes/createProductReviews')\nconst checkKeys = require('./routes/checkKeys')\nconst nftMint = require('./routes/nftMint')\nconst web3Wallet = require('./routes/web3Wallet')\nconst updateProductReviews = require('./routes/updateProductReviews')\nconst likeProductReviews = require('./routes/likeProductReviews')\nconst security = require('./lib/insecurity')\nconst app = express()\nconst server = require('http').Server(app)\nconst appConfiguration = require('./routes/appConfiguration')\nconst captcha = require('./routes/captcha')\nconst trackOrder = require('./routes/trackOrder')\nconst countryMapping = require('./routes/countryMapping')\nconst basketItems = require('./routes/basketItems')\nconst saveLoginIp = require('./routes/saveLoginIp')\nconst userProfile = require('./routes/userProfile')\nconst updateUserProfile = require('./routes/updateUserProfile')\nconst videoHandler = require('./routes/videoHandler')\nconst twoFactorAuth = require('./routes/2fa')\nconst languageList = require('./routes/languages')\nconst imageCaptcha = require('./routes/imageCaptcha')\nconst dataExport = require('./routes/dataExport')\nconst address = require('./routes/address')\nconst payment = require('./routes/payment')\nconst wallet = require('./routes/wallet')\nconst orderHistory = require('./routes/orderHistory')\nconst delivery = require('./routes/delivery')\nconst deluxe = require('./routes/deluxe')\nconst memory = require('./routes/memory')\nconst chatbot = require('./routes/chatbot')\nconst locales = require('./data/static/locales.json')\nconst i18n = require('i18n')\nconst antiCheat = require('./lib/antiCheat')\n\nconst appName = config.get<string>('application.customMetricsPrefix')\nconst startupGauge = new Prometheus.Gauge({\n  name: `${appName}_startup_duration_seconds`,\n  help: `Duration ${appName} required to perform a certain task during startup`,\n  labelNames: ['task']\n})\n\n// Wraps the function and measures its (async) execution time\nconst collectDurationPromise = (name: string, func: (...args: any) => Promise<any>) => {\n  return async (...args: any) => {\n    const end = startupGauge.startTimer({ task: name })\n    try {\n      const res = await func(...args)\n      end()\n      return res\n    } catch (err) {\n      console.error('Error in timed startup function: ' + name, err)\n      throw err\n    }\n  }\n}\n\n/* Sets view engine to hbs */\napp.set('view engine', 'hbs')\n\nvoid collectDurationPromise('validatePreconditions', validatePreconditions)()\nvoid collectDurationPromise('cleanupFtpFolder', cleanupFtpFolder)()\nvoid collectDurationPromise('validateConfig', validateConfig)({})\n\n// Function called first to ensure that all the i18n files are reloaded successfully before other linked operations.\nrestoreOverwrittenFilesWithOriginals().then(() => {\n  /* Locals */\n  app.locals.captchaId = 0\n  app.locals.captchaReqId = 1\n  app.locals.captchaBypassReqTimes = []\n  app.locals.abused_ssti_bug = false\n  app.locals.abused_ssrf_bug = false\n\n  /* Compression for all requests */\n  app.use(compression())\n\n  /* Bludgeon solution for possible CORS problems: Allow everything! */\n  app.options('*', cors())\n  app.use(cors())\n\n  /* Security middleware */\n  app.use(helmet.noSniff())\n  app.use(helmet.frameguard())\n  // app.use(helmet.xssFilter()); // = no protection from persisted XSS via RESTful API\n  app.disable('x-powered-by')\n  app.use(featurePolicy({\n    features: {\n      payment: [\"'self'\"]\n    }\n  }))\n\n  /* Hiring header */\n  app.use((req: Request, res: Response, next: NextFunction) => {\n    res.append('X-Recruiting', config.get('application.securityTxt.hiring'))\n    next()\n  })\n\n  /* Remove duplicate slashes from URL which allowed bypassing subsequent filters */\n  app.use((req: Request, res: Response, next: NextFunction) => {\n    req.url = req.url.replace(/[/]+/g, '/')\n    next()\n  })\n\n  /* Increase request counter metric for every request */\n  app.use(metrics.observeRequestMetricsMiddleware())\n\n  /* Security Policy */\n  const securityTxtExpiration = new Date()\n  securityTxtExpiration.setFullYear(securityTxtExpiration.getFullYear() + 1)\n  app.get(['/.well-known/security.txt', '/security.txt'], verify.accessControlChallenges())\n  app.use(['/.well-known/security.txt', '/security.txt'], securityTxt({\n    contact: config.get('application.securityTxt.contact'),\n    encryption: config.get('application.securityTxt.encryption'),\n    acknowledgements: config.get('application.securityTxt.acknowledgements'),\n    'Preferred-Languages': [...new Set(locales.map((locale: { key: string }) => locale.key.substr(0, 2)))].join(', '),\n    hiring: config.get('application.securityTxt.hiring'),\n    csaf: config.get<string>('server.baseUrl') + config.get<string>('application.securityTxt.csaf'),\n    expires: securityTxtExpiration.toUTCString()\n  }))\n\n  /* robots.txt */\n  app.use(robots({ UserAgent: '*', Disallow: '/ftp' }))\n\n  /* Check for any URLs having been called that would be expected for challenge solving without cheating */\n  app.use(antiCheat.checkForPreSolveInteractions())\n\n  /* Checks for challenges solved by retrieving a file implicitly or explicitly */\n  app.use('/assets/public/images/padding', verify.accessControlChallenges())\n  app.use('/assets/public/images/products', verify.accessControlChallenges())\n  app.use('/assets/public/images/uploads', verify.accessControlChallenges())\n  app.use('/assets/i18n', verify.accessControlChallenges())\n\n  /* Checks for challenges solved by abusing SSTi and SSRF bugs */\n  app.use('/solve/challenges/server-side', verify.serverSideChallenges())\n\n  /* Create middleware to change paths from the serve-index plugin from absolute to relative */\n  const serveIndexMiddleware = (req: Request, res: Response, next: NextFunction) => {\n    const origEnd = res.end\n    // @ts-expect-error FIXME assignment broken due to seemingly void return value\n    res.end = function () {\n      if (arguments.length) {\n        const reqPath = req.originalUrl.replace(/\\?.*$/, '')\n        const currentFolder = reqPath.split('/').pop() as string\n        arguments[0] = arguments[0].replace(/a href=\"([^\"]+?)\"/gi, function (matchString: string, matchedUrl: string) {\n          let relativePath = path.relative(reqPath, matchedUrl)\n          if (relativePath === '') {\n            relativePath = currentFolder\n          } else if (!relativePath.startsWith('.') && currentFolder !== '') {\n            relativePath = currentFolder + '/' + relativePath\n          } else {\n            relativePath = relativePath.replace('..', '.')\n          }\n          return 'a href=\"' + relativePath + '\"'\n        })\n      }\n      // @ts-expect-error FIXME passed argument has wrong type\n      origEnd.apply(this, arguments)\n    }\n    next()\n  }\n\n  // vuln-code-snippet start directoryListingChallenge accessLogDisclosureChallenge\n  /* /ftp directory browsing and file download */ // vuln-code-snippet neutral-line directoryListingChallenge\n  app.use('/ftp', serveIndexMiddleware, serveIndex('ftp', { icons: true })) // vuln-code-snippet vuln-line directoryListingChallenge\n  app.use('/ftp(?!/quarantine)/:file', fileServer()) // vuln-code-snippet vuln-line directoryListingChallenge\n  app.use('/ftp/quarantine/:file', quarantineServer()) // vuln-code-snippet neutral-line directoryListingChallenge\n\n  app.use('/.well-known', serveIndexMiddleware, serveIndex('.well-known', { icons: true, view: 'details' }))\n  app.use('/.well-known', express.static('.well-known'))\n\n  /* /encryptionkeys directory browsing */\n  app.use('/encryptionkeys', serveIndexMiddleware, serveIndex('encryptionkeys', { icons: true, view: 'details' }))\n  app.use('/encryptionkeys/:file', keyServer())\n\n  /* /logs directory browsing */ // vuln-code-snippet neutral-line accessLogDisclosureChallenge\n  app.use('/support/logs', serveIndexMiddleware, serveIndex('logs', { icons: true, view: 'details' })) // vuln-code-snippet vuln-line accessLogDisclosureChallenge\n  app.use('/support/logs', verify.accessControlChallenges()) // vuln-code-snippet hide-line\n  app.use('/support/logs/:file', logFileServer()) // vuln-code-snippet vuln-line accessLogDisclosureChallenge\n\n  /* Swagger documentation for B2B v2 endpoints */\n  app.use('/api-docs', swaggerUi.serve, swaggerUi.setup(swaggerDocument))\n\n  app.use(express.static(path.resolve('frontend/dist/frontend')))\n  app.use(cookieParser('kekse'))\n  // vuln-code-snippet end directoryListingChallenge accessLogDisclosureChallenge\n\n  /* Configure and enable backend-side i18n */\n  i18n.configure({\n    locales: locales.map((locale: { key: string }) => locale.key),\n    directory: path.resolve('i18n'),\n    cookie: 'language',\n    defaultLocale: 'en',\n    autoReload: true\n  })\n  app.use(i18n.init)\n\n  app.use(bodyParser.urlencoded({ extended: true }))\n  /* File Upload */\n  app.post('/file-upload', uploadToMemory.single('file'), ensureFileIsPassed, metrics.observeFileUploadMetricsMiddleware(), handleZipFileUpload, checkUploadSize, checkFileType, handleXmlUpload)\n  app.post('/profile/image/file', uploadToMemory.single('file'), ensureFileIsPassed, metrics.observeFileUploadMetricsMiddleware(), profileImageFileUpload())\n  app.post('/profile/image/url', uploadToMemory.single('file'), profileImageUrlUpload())\n  app.post('/rest/memories', uploadToDisk.single('image'), ensureFileIsPassed, security.appendUserId(), metrics.observeFileUploadMetricsMiddleware(), memory.addMemory())\n\n  app.use(bodyParser.text({ type: '*/*' }))\n  app.use(function jsonParser (req: Request, res: Response, next: NextFunction) {\n    // @ts-expect-error FIXME intentionally saving original request in this property\n    req.rawBody = req.body\n    if (req.headers['content-type']?.includes('application/json')) {\n      if (!req.body) {\n        req.body = {}\n      }\n      if (req.body !== Object(req.body)) { // Expensive workaround for 500 errors during Frisby test run (see #640)\n        req.body = JSON.parse(req.body)\n      }\n    }\n    next()\n  })\n\n  /* HTTP request logging */\n  const accessLogStream = require('file-stream-rotator').getStream({\n    filename: path.resolve('logs/access.log'),\n    frequency: 'daily',\n    verbose: false,\n    max_logs: '2d'\n  })\n  app.use(morgan('combined', { stream: accessLogStream }))\n\n  // vuln-code-snippet start resetPasswordMortyChallenge\n  /* Rate limiting */\n  app.enable('trust proxy')\n  app.use('/rest/user/reset-password', new RateLimit({\n    windowMs: 5 * 60 * 1000,\n    max: 100,\n    keyGenerator ({ headers, ip }: { headers: any, ip: any }) { return headers['X-Forwarded-For'] ?? ip } // vuln-code-snippet vuln-line resetPasswordMortyChallenge\n  }))\n  // vuln-code-snippet end resetPasswordMortyChallenge\n\n  // vuln-code-snippet start changeProductChallenge\n  /** Authorization **/\n  /* Checks on JWT in Authorization header */ // vuln-code-snippet hide-line\n  app.use(verify.jwtChallenges()) // vuln-code-snippet hide-line\n  /* Baskets: Unauthorized users are not allowed to access baskets */\n  app.use('/rest/basket', security.isAuthorized(), security.appendUserId())\n  /* BasketItems: API only accessible for authenticated users */\n  app.use('/api/BasketItems', security.isAuthorized())\n  app.use('/api/BasketItems/:id', security.isAuthorized())\n  /* Feedbacks: GET allowed for feedback carousel, POST allowed in order to provide feedback without being logged in */\n  app.use('/api/Feedbacks/:id', security.isAuthorized())\n  /* Users: Only POST is allowed in order to register a new user */\n  app.get('/api/Users', security.isAuthorized())\n  app.route('/api/Users/:id')\n    .get(security.isAuthorized())\n    .put(security.denyAll())\n    .delete(security.denyAll())\n  /* Products: Only GET is allowed in order to view products */ // vuln-code-snippet neutral-line changeProductChallenge\n  app.post('/api/Products', security.isAuthorized()) // vuln-code-snippet neutral-line changeProductChallenge\n  // app.put('/api/Products/:id', security.isAuthorized()) // vuln-code-snippet vuln-line changeProductChallenge\n  app.delete('/api/Products/:id', security.denyAll())\n  /* Challenges: GET list of challenges allowed. Everything else forbidden entirely */\n  app.post('/api/Challenges', security.denyAll())\n  app.use('/api/Challenges/:id', security.denyAll())\n  /* Complaints: POST and GET allowed when logged in only */\n  app.get('/api/Complaints', security.isAuthorized())\n  app.post('/api/Complaints', security.isAuthorized())\n  app.use('/api/Complaints/:id', security.denyAll())\n  /* Recycles: POST and GET allowed when logged in only */\n  app.get('/api/Recycles', recycles.blockRecycleItems())\n  app.post('/api/Recycles', security.isAuthorized())\n  /* Challenge evaluation before finale takes over */\n  app.get('/api/Recycles/:id', recycles.getRecycleItem())\n  app.put('/api/Recycles/:id', security.denyAll())\n  app.delete('/api/Recycles/:id', security.denyAll())\n  /* SecurityQuestions: Only GET list of questions allowed. */\n  app.post('/api/SecurityQuestions', security.denyAll())\n  app.use('/api/SecurityQuestions/:id', security.denyAll())\n  /* SecurityAnswers: Only POST of answer allowed. */\n  app.get('/api/SecurityAnswers', security.denyAll())\n  app.use('/api/SecurityAnswers/:id', security.denyAll())\n  /* REST API */\n  app.use('/rest/user/authentication-details', security.isAuthorized())\n  app.use('/rest/basket/:id', security.isAuthorized())\n  app.use('/rest/basket/:id/order', security.isAuthorized())\n  /* Challenge evaluation before finale takes over */ // vuln-code-snippet hide-start\n  app.post('/api/Feedbacks', verify.forgedFeedbackChallenge())\n  /* Captcha verification before finale takes over */\n  app.post('/api/Feedbacks', captcha.verifyCaptcha())\n  /* Captcha Bypass challenge verification */\n  app.post('/api/Feedbacks', verify.captchaBypassChallenge())\n  /* User registration challenge verifications before finale takes over */\n  app.post('/api/Users', (req: Request, res: Response, next: NextFunction) => {\n    if (req.body.email !== undefined && req.body.password !== undefined && req.body.passwordRepeat !== undefined) {\n      if (req.body.email.length !== 0 && req.body.password.length !== 0) {\n        req.body.email = req.body.email.trim()\n        req.body.password = req.body.password.trim()\n        req.body.passwordRepeat = req.body.passwordRepeat.trim()\n      } else {\n        res.status(400).send(res.__('Invalid email/password cannot be empty'))\n      }\n    }\n    next()\n  })\n  app.post('/api/Users', verify.registerAdminChallenge())\n  app.post('/api/Users', verify.passwordRepeatChallenge()) // vuln-code-snippet hide-end\n  app.post('/api/Users', verify.emptyUserRegistration())\n  /* Unauthorized users are not allowed to access B2B API */\n  app.use('/b2b/v2', security.isAuthorized())\n  /* Check if the quantity is available in stock and limit per user not exceeded, then add item to basket */\n  app.put('/api/BasketItems/:id', security.appendUserId(), basketItems.quantityCheckBeforeBasketItemUpdate())\n  app.post('/api/BasketItems', security.appendUserId(), basketItems.quantityCheckBeforeBasketItemAddition(), basketItems.addBasketItem())\n  /* Accounting users are allowed to check and update quantities */\n  app.delete('/api/Quantitys/:id', security.denyAll())\n  app.post('/api/Quantitys', security.denyAll())\n  app.use('/api/Quantitys/:id', security.isAccounting(), ipfilter(['123.456.789'], { mode: 'allow' }))\n  /* Feedbacks: Do not allow changes of existing feedback */\n  app.put('/api/Feedbacks/:id', security.denyAll())\n  /* PrivacyRequests: Only allowed for authenticated users */\n  app.use('/api/PrivacyRequests', security.isAuthorized())\n  app.use('/api/PrivacyRequests/:id', security.isAuthorized())\n  /* PaymentMethodRequests: Only allowed for authenticated users */\n  app.post('/api/Cards', security.appendUserId())\n  app.get('/api/Cards', security.appendUserId(), payment.getPaymentMethods())\n  app.put('/api/Cards/:id', security.denyAll())\n  app.delete('/api/Cards/:id', security.appendUserId(), payment.delPaymentMethodById())\n  app.get('/api/Cards/:id', security.appendUserId(), payment.getPaymentMethodById())\n  /* PrivacyRequests: Only POST allowed for authenticated users */\n  app.post('/api/PrivacyRequests', security.isAuthorized())\n  app.get('/api/PrivacyRequests', security.denyAll())\n  app.use('/api/PrivacyRequests/:id', security.denyAll())\n\n  app.post('/api/Addresss', security.appendUserId())\n  app.get('/api/Addresss', security.appendUserId(), address.getAddress())\n  app.put('/api/Addresss/:id', security.appendUserId())\n  app.delete('/api/Addresss/:id', security.appendUserId(), address.delAddressById())\n  app.get('/api/Addresss/:id', security.appendUserId(), address.getAddressById())\n  app.get('/api/Deliverys', delivery.getDeliveryMethods())\n  app.get('/api/Deliverys/:id', delivery.getDeliveryMethod())\n  // vuln-code-snippet end changeProductChallenge\n\n  /* Verify the 2FA Token */\n  app.post('/rest/2fa/verify',\n    new RateLimit({ windowMs: 5 * 60 * 1000, max: 100 }),\n    twoFactorAuth.verify()\n  )\n  /* Check 2FA Status for the current User */\n  app.get('/rest/2fa/status', security.isAuthorized(), twoFactorAuth.status())\n  /* Enable 2FA for the current User */\n  app.post('/rest/2fa/setup',\n    new RateLimit({ windowMs: 5 * 60 * 1000, max: 100 }),\n    security.isAuthorized(),\n    twoFactorAuth.setup()\n  )\n  /* Disable 2FA Status for the current User */\n  app.post('/rest/2fa/disable',\n    new RateLimit({ windowMs: 5 * 60 * 1000, max: 100 }),\n    security.isAuthorized(),\n    twoFactorAuth.disable()\n  )\n  /* Verifying DB related challenges can be postponed until the next request for challenges is coming via finale */\n  app.use(verify.databaseRelatedChallenges())\n\n  // vuln-code-snippet start registerAdminChallenge\n  /* Generated API endpoints */\n  finale.initialize({ app, sequelize })\n\n  const autoModels = [\n    { name: 'User', exclude: ['password', 'totpSecret'], model: UserModel },\n    { name: 'Product', exclude: [], model: ProductModel },\n    { name: 'Feedback', exclude: [], model: FeedbackModel },\n    { name: 'BasketItem', exclude: [], model: BasketItemModel },\n    { name: 'Challenge', exclude: [], model: ChallengeModel },\n    { name: 'Complaint', exclude: [], model: ComplaintModel },\n    { name: 'Recycle', exclude: [], model: RecycleModel },\n    { name: 'SecurityQuestion', exclude: [], model: SecurityQuestionModel },\n    { name: 'SecurityAnswer', exclude: [], model: SecurityAnswerModel },\n    { name: 'Address', exclude: [], model: AddressModel },\n    { name: 'PrivacyRequest', exclude: [], model: PrivacyRequestModel },\n    { name: 'Card', exclude: [], model: CardModel },\n    { name: 'Quantity', exclude: [], model: QuantityModel }\n  ]\n\n  for (const { name, exclude, model } of autoModels) {\n    const resource = finale.resource({\n      model,\n      endpoints: [`/api/${name}s`, `/api/${name}s/:id`],\n      excludeAttributes: exclude,\n      pagination: false\n    })\n\n    // create a wallet when a new user is registered using API\n    if (name === 'User') { // vuln-code-snippet neutral-line registerAdminChallenge\n      resource.create.send.before((req: Request, res: Response, context: { instance: { id: any }, continue: any }) => { // vuln-code-snippet vuln-line registerAdminChallenge\n        WalletModel.create({ UserId: context.instance.id }).catch((err: unknown) => {\n          console.log(err)\n        })\n        return context.continue // vuln-code-snippet neutral-line registerAdminChallenge\n      }) // vuln-code-snippet neutral-line registerAdminChallenge\n    } // vuln-code-snippet neutral-line registerAdminChallenge\n    // vuln-code-snippet end registerAdminChallenge\n\n    // translate challenge descriptions and hints on-the-fly\n    if (name === 'Challenge') {\n      resource.list.fetch.after((req: Request, res: Response, context: { instance: string | any[], continue: any }) => {\n        for (let i = 0; i < context.instance.length; i++) {\n          let description = context.instance[i].description\n          if (utils.contains(description, '<em>(This challenge is <strong>')) {\n            const warning = description.substring(description.indexOf(' <em>(This challenge is <strong>'))\n            description = description.substring(0, description.indexOf(' <em>(This challenge is <strong>'))\n            context.instance[i].description = req.__(description) + req.__(warning)\n          } else {\n            context.instance[i].description = req.__(description)\n          }\n          if (context.instance[i].hint) {\n            context.instance[i].hint = req.__(context.instance[i].hint)\n          }\n        }\n        return context.continue\n      })\n      resource.read.send.before((req: Request, res: Response, context: { instance: { description: string, hint: string }, continue: any }) => {\n        context.instance.description = req.__(context.instance.description)\n        if (context.instance.hint) {\n          context.instance.hint = req.__(context.instance.hint)\n        }\n        return context.continue\n      })\n    }\n\n    // translate security questions on-the-fly\n    if (name === 'SecurityQuestion') {\n      resource.list.fetch.after((req: Request, res: Response, context: { instance: string | any[], continue: any }) => {\n        for (let i = 0; i < context.instance.length; i++) {\n          context.instance[i].question = req.__(context.instance[i].question)\n        }\n        return context.continue\n      })\n      resource.read.send.before((req: Request, res: Response, context: { instance: { question: string }, continue: any }) => {\n        context.instance.question = req.__(context.instance.question)\n        return context.continue\n      })\n    }\n\n    // translate product names and descriptions on-the-fly\n    if (name === 'Product') {\n      resource.list.fetch.after((req: Request, res: Response, context: { instance: any[], continue: any }) => {\n        for (let i = 0; i < context.instance.length; i++) {\n          context.instance[i].name = req.__(context.instance[i].name)\n          context.instance[i].description = req.__(context.instance[i].description)\n        }\n        return context.continue\n      })\n      resource.read.send.before((req: Request, res: Response, context: { instance: { name: string, description: string }, continue: any }) => {\n        context.instance.name = req.__(context.instance.name)\n        context.instance.description = req.__(context.instance.description)\n        return context.continue\n      })\n    }\n\n    // fix the api difference between finale (fka epilogue) and previously used sequlize-restful\n    resource.all.send.before((req: Request, res: Response, context: { instance: { status: string, data: any }, continue: any }) => {\n      context.instance = {\n        status: 'success',\n        data: context.instance\n      }\n      return context.continue\n    })\n  }\n\n  /* Custom Restful API */\n  app.post('/rest/user/login', login())\n  app.get('/rest/user/change-password', changePassword())\n  app.post('/rest/user/reset-password', resetPassword())\n  app.get('/rest/user/security-question', securityQuestion())\n  app.get('/rest/user/whoami', security.updateAuthenticatedUsers(), currentUser())\n  app.get('/rest/user/authentication-details', authenticatedUsers())\n  app.get('/rest/products/search', search())\n  app.get('/rest/basket/:id', basket())\n  app.post('/rest/basket/:id/checkout', order())\n  app.put('/rest/basket/:id/coupon/:coupon', coupon())\n  app.get('/rest/admin/application-version', appVersion())\n  app.get('/rest/admin/application-configuration', appConfiguration())\n  app.get('/rest/repeat-notification', repeatNotification())\n  app.get('/rest/continue-code', continueCode.continueCode())\n  app.get('/rest/continue-code-findIt', continueCode.continueCodeFindIt())\n  app.get('/rest/continue-code-fixIt', continueCode.continueCodeFixIt())\n  app.put('/rest/continue-code-findIt/apply/:continueCode', restoreProgress.restoreProgressFindIt())\n  app.put('/rest/continue-code-fixIt/apply/:continueCode', restoreProgress.restoreProgressFixIt())\n  app.put('/rest/continue-code/apply/:continueCode', restoreProgress.restoreProgress())\n  app.get('/rest/admin/application-version', appVersion())\n  app.get('/rest/captcha', captcha())\n  app.get('/rest/image-captcha', imageCaptcha())\n  app.get('/rest/track-order/:id', trackOrder())\n  app.get('/rest/country-mapping', countryMapping())\n  app.get('/rest/saveLoginIp', saveLoginIp())\n  app.post('/rest/user/data-export', security.appendUserId(), imageCaptcha.verifyCaptcha())\n  app.post('/rest/user/data-export', security.appendUserId(), dataExport())\n  app.get('/rest/languages', languageList())\n  app.get('/rest/order-history', orderHistory.orderHistory())\n  app.get('/rest/order-history/orders', security.isAccounting(), orderHistory.allOrders())\n  app.put('/rest/order-history/:id/delivery-status', security.isAccounting(), orderHistory.toggleDeliveryStatus())\n  app.get('/rest/wallet/balance', security.appendUserId(), wallet.getWalletBalance())\n  app.put('/rest/wallet/balance', security.appendUserId(), wallet.addWalletBalance())\n  app.get('/rest/deluxe-membership', deluxe.deluxeMembershipStatus())\n  app.post('/rest/deluxe-membership', security.appendUserId(), deluxe.upgradeToDeluxe())\n  app.get('/rest/memories', memory.getMemories())\n  app.get('/rest/chatbot/status', chatbot.status())\n  app.post('/rest/chatbot/respond', chatbot.process())\n  /* NoSQL API endpoints */\n  app.get('/rest/products/:id/reviews', showProductReviews())\n  app.put('/rest/products/:id/reviews', createProductReviews())\n  app.patch('/rest/products/reviews', security.isAuthorized(), updateProductReviews())\n  app.post('/rest/products/reviews', security.isAuthorized(), likeProductReviews())\n\n  /* Web3 API endpoints */\n  app.post('/rest/web3/submitKey', checkKeys.checkKeys())\n  app.get('/rest/web3/nftUnlocked', checkKeys.nftUnlocked())\n  app.get('/rest/web3/nftMintListen', nftMint.nftMintListener())\n  app.post('/rest/web3/walletNFTVerify', nftMint.walletNFTVerify())\n  app.post('/rest/web3/walletExploitAddress', web3Wallet.contractExploitListener())\n\n  /* B2B Order API */\n  app.post('/b2b/v2/orders', b2bOrder())\n\n  /* File Serving */\n  app.get('/the/devs/are/so/funny/they/hid/an/easter/egg/within/the/easter/egg', easterEgg())\n  app.get('/this/page/is/hidden/behind/an/incredibly/high/paywall/that/could/only/be/unlocked/by/sending/1btc/to/us', premiumReward())\n  app.get('/we/may/also/instruct/you/to/refuse/all/reasonably/necessary/responsibility', privacyPolicyProof())\n\n  /* Route for dataerasure page */\n  app.use('/dataerasure', dataErasure)\n\n  /* Route for redirects */\n  app.get('/redirect', redirect())\n\n  /* Routes for promotion video page */\n  app.get('/promotion', videoHandler.promotionVideo())\n  app.get('/video', videoHandler.getVideo())\n\n  /* Routes for profile page */\n  app.get('/profile', security.updateAuthenticatedUsers(), userProfile())\n  app.post('/profile', updateUserProfile())\n\n  /* Route for vulnerable code snippets */\n  app.get('/snippets', vulnCodeSnippet.serveChallengesWithCodeSnippet())\n  app.get('/snippets/:challenge', vulnCodeSnippet.serveCodeSnippet())\n  app.post('/snippets/verdict', vulnCodeSnippet.checkVulnLines())\n  app.get('/snippets/fixes/:key', vulnCodeFixes.serveCodeFixes())\n  app.post('/snippets/fixes', vulnCodeFixes.checkCorrectFix())\n\n  app.use(angular())\n\n  /* Error Handling */\n  app.use(verify.errorHandlingChallenge())\n  app.use(errorhandler())\n}).catch((err) => {\n  console.error(err)\n})\n\nconst multer = require('multer')\nconst uploadToMemory = multer({ storage: multer.memoryStorage(), limits: { fileSize: 200000 } })\nconst mimeTypeMap: any = {\n  'image/png': 'png',\n  'image/jpeg': 'jpg',\n  'image/jpg': 'jpg'\n}\nconst uploadToDisk = multer({\n  storage: multer.diskStorage({\n    destination: (req: Request, file: any, cb: any) => {\n      const isValid = mimeTypeMap[file.mimetype]\n      let error: Error | null = new Error('Invalid mime type')\n      if (isValid) {\n        error = null\n      }\n      cb(error, path.resolve('frontend/dist/frontend/assets/public/images/uploads/'))\n    },\n    filename: (req: Request, file: any, cb: any) => {\n      const name = security.sanitizeFilename(file.originalname)\n        .toLowerCase()\n        .split(' ')\n        .join('-')\n      const ext = mimeTypeMap[file.mimetype]\n      cb(null, name + '-' + Date.now() + '.' + ext)\n    }\n  })\n})\n\nconst expectedModels = ['Address', 'Basket', 'BasketItem', 'Captcha', 'Card', 'Challenge', 'Complaint', 'Delivery', 'Feedback', 'ImageCaptcha', 'Memory', 'PrivacyRequestModel', 'Product', 'Quantity', 'Recycle', 'SecurityAnswer', 'SecurityQuestion', 'User', 'Wallet']\nwhile (!expectedModels.every(model => Object.keys(sequelize.models).includes(model))) {\n  logger.info(`Entity models ${colors.bold(Object.keys(sequelize.models).length.toString())} of ${colors.bold(expectedModels.length.toString())} are initialized (${colors.yellow('WAITING')})`)\n}\nlogger.info(`Entity models ${colors.bold(Object.keys(sequelize.models).length.toString())} of ${colors.bold(expectedModels.length.toString())} are initialized (${colors.green('OK')})`)\n\n// vuln-code-snippet start exposedMetricsChallenge\n/* Serve metrics */\nlet metricsUpdateLoop: any\nconst Metrics = metrics.observeMetrics() // vuln-code-snippet neutral-line exposedMetricsChallenge\napp.get('/metrics', metrics.serveMetrics()) // vuln-code-snippet vuln-line exposedMetricsChallenge\nerrorhandler.title = `${config.get<string>('application.name')} (Express ${utils.version('express')})`\n\nexport async function start (readyCallback?: () => void) {\n  const datacreatorEnd = startupGauge.startTimer({ task: 'datacreator' })\n  await sequelize.sync({ force: true })\n  await datacreator()\n  datacreatorEnd()\n  const port = process.env.PORT ?? config.get('server.port')\n  process.env.BASE_PATH = process.env.BASE_PATH ?? config.get('server.basePath')\n\n  metricsUpdateLoop = Metrics.updateLoop() // vuln-code-snippet neutral-line exposedMetricsChallenge\n\n  server.listen(port, () => {\n    logger.info(colors.cyan(`Server listening on port ${colors.bold(`${port}`)}`))\n    startupGauge.set({ task: 'ready' }, (Date.now() - startTime) / 1000)\n    if (process.env.BASE_PATH !== '') {\n      logger.info(colors.cyan(`Server using proxy base path ${colors.bold(`${process.env.BASE_PATH}`)} for redirects`))\n    }\n    registerWebsocketEvents(server)\n    if (readyCallback) {\n      readyCallback()\n    }\n  })\n\n  void collectDurationPromise('customizeApplication', customizeApplication)() // vuln-code-snippet hide-line\n  void collectDurationPromise('customizeEasterEgg', customizeEasterEgg)() // vuln-code-snippet hide-line\n}\n\nexport function close (exitCode: number | undefined) {\n  if (server) {\n    clearInterval(metricsUpdateLoop)\n    server.close()\n  }\n  if (exitCode !== undefined) {\n    process.exit(exitCode)\n  }\n}\n// vuln-code-snippet end exposedMetricsChallenge\n\n// stop server on sigint or sigterm signals\nprocess.on('SIGINT', () => { close(0) })\nprocess.on('SIGTERM', () => { close(0) })\n"
        },
        {
          "name": "swagger.yml",
          "type": "blob",
          "size": 2.2490234375,
          "content": "openapi: 3.0.0\nservers:\n  -\n    url: /b2b/v2\ninfo:\n  version: 2.0.0\n  title: 'NextGen B2B API'\n  description: 'New & secure JSON-based API for our enterprise customers. (Deprecates previously offered XML-based endpoints)'\n  license:\n    name: MIT\n    url: 'https://opensource.org/licenses/MIT'\n  contact:\n    name: B2B API Support\ntags:\n  -\n    name: Order\n    description: 'API for customer orders'\npaths:\n  /orders:\n    post:\n      operationId: createCustomerOrder\n      tags: [Order]\n      description: 'Create new customer order'\n      responses: { '200': { description: 'New customer order is created', content: { application/json: { schema: { $ref: '#/components/schemas/OrderConfirmation' } } } } }\n      requestBody: { content: { application/json: { schema: { $ref: '#/components/schemas/Order' } } }, description: 'Customer order to be placed' }\ncomponents:\n  securitySchemes:\n    bearerAuth:\n      type: http\n      scheme: bearer\n      bearerFormat: JWT\n  schemas:\n    Order:\n      required: [cid]\n      properties: { cid: { type: string, uniqueItems: true, example: JS0815DE }, orderLines: { $ref: '#/components/schemas/OrderLines' }, orderLinesData: { $ref: '#/components/schemas/OrderLinesData' } }\n    OrderConfirmation:\n      required: [cid, orderNo, paymentDue]\n      properties: { cid: { type: string, uniqueItems: true, example: JS0815DE }, orderNo: { type: string, uniqueItems: true, example: 3d06ac5e1bdf39d26392f8100f124742 }, paymentDue: { description: 'All payments are due 14 days after order placement', type: string, format: date, example: '2018-01-19' } }\n    OrderLine:\n      description: 'Order line in default JSON format'\n      required: [productId, quantity]\n      properties: { productId: { type: integer, example: 8 }, quantity: { type: integer, minimum: 1, example: 500 }, customerReference: { type: string, example: PO0000001 } }\n    OrderLines:\n      type: array\n      items: { $ref: '#/components/schemas/OrderLine' }\n    OrderLinesData:\n      description: 'Order line(s) in customer specific JSON format'\n      type: string\n      example: '[{\"productId\": 12,\"quantity\": 10000,\"customerReference\": [\"PO0000001.2\", \"SM20180105|042\"],\"couponCode\": \"pes[Bh.u*t\"},{\"productId\": 13,\"quantity\": 2000,\"customerReference\": \"PO0000003.4\"}]'\nsecurity:\n  -\n    bearerAuth: []\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "threat-model.json",
          "type": "blob",
          "size": 31.111328125,
          "content": "{\n  \"summary\": {\n    \"title\": \"OWASP Juice Shop\",\n    \"owner\": \"Björn Kimminich\",\n    \"description\": \"OWASP Juice Shop is probably the most modern and sophisticated insecure web application! It can be used in security trainings, awareness demos, CTFs and as a guinea pig for security tools! Juice Shop encompasses vulnerabilities from the entire OWASP Top Ten along with many other security flaws found in real-world applications!\"\n  },\n  \"detail\": {\n    \"contributors\": [],\n    \"diagrams\": [\n      {\n        \"title\": \"High Level Data Flow\",\n        \"thumbnail\": \"./public/content/images/thumbnail.stride.jpg\",\n        \"diagramType\": \"STRIDE\",\n        \"id\": 0,\n        \"$$hashKey\": \"object:59\",\n        \"diagramJson\": {\n          \"cells\": [\n            {\n              \"type\": \"tm.Actor\",\n              \"size\": {\n                \"width\": 160,\n                \"height\": 80\n              },\n              \"position\": {\n                \"x\": 64,\n                \"y\": 173\n              },\n              \"angle\": 0,\n              \"id\": \"5c682ec9-c352-442e-b61c-2de8ed53ea22\",\n              \"z\": 1,\n              \"hasOpenThreats\": false,\n              \"attrs\": {\n                \".element-shape\": {\n                  \"class\": \"element-shape hasNoOpenThreats isInScope\"\n                },\n                \"text\": {\n                  \"text\": \"B2C Customer (Browser)\"\n                },\n                \".element-text\": {\n                  \"class\": \"element-text hasNoOpenThreats isInScope\"\n                }\n              }\n            },\n            {\n              \"type\": \"tm.Actor\",\n              \"size\": {\n                \"width\": 160,\n                \"height\": 80\n              },\n              \"position\": {\n                \"x\": 68,\n                \"y\": 52\n              },\n              \"angle\": 0,\n              \"id\": \"d02fa030-ca19-47ad-8920-0980cd87a351\",\n              \"z\": 2,\n              \"hasOpenThreats\": false,\n              \"outOfScope\": true,\n              \"attrs\": {\n                \".element-shape\": {\n                  \"class\": \"element-shape hasNoOpenThreats isOutOfScope\"\n                },\n                \"text\": {\n                  \"text\": \"Google\"\n                },\n                \".element-text\": {\n                  \"class\": \"element-text hasNoOpenThreats isInScope\"\n                }\n              }\n            },\n            {\n              \"type\": \"tm.Process\",\n              \"size\": {\n                \"width\": 100,\n                \"height\": 100\n              },\n              \"position\": {\n                \"x\": 455,\n                \"y\": 1\n              },\n              \"angle\": 0,\n              \"id\": \"064304c2-9672-44f2-9e08-982d58145bc0\",\n              \"z\": 3,\n              \"hasOpenThreats\": false,\n              \"attrs\": {\n                \".element-shape\": {\n                  \"class\": \"element-shape hasNoOpenThreats isInScope\"\n                },\n                \"text\": {\n                  \"text\": \"Angular\\nFrontend\"\n                },\n                \".element-text\": {\n                  \"class\": \"element-text hasNoOpenThreats isInScope\"\n                }\n              }\n            },\n            {\n              \"type\": \"tm.Process\",\n              \"size\": {\n                \"width\": 100,\n                \"height\": 100\n              },\n              \"position\": {\n                \"x\": 468,\n                \"y\": 228\n              },\n              \"angle\": 0,\n              \"id\": \"edced7d1-6206-43bc-94ab-aa515977042a\",\n              \"z\": 4,\n              \"hasOpenThreats\": false,\n              \"description\": \"Node.js / Express\",\n              \"attrs\": {\n                \".element-shape\": {\n                  \"class\": \"element-shape hasNoOpenThreats isInScope\"\n                },\n                \"text\": {\n                  \"text\": \"Application\\nServer\"\n                },\n                \".element-text\": {\n                  \"class\": \"element-text hasNoOpenThreats isInScope\"\n                }\n              }\n            },\n            {\n              \"type\": \"tm.Store\",\n              \"size\": {\n                \"width\": 160,\n                \"height\": 80\n              },\n              \"position\": {\n                \"x\": 830,\n                \"y\": 393\n              },\n              \"angle\": 0,\n              \"id\": \"673196a0-0797-4c56-974b-b169ec27accb\",\n              \"z\": 5,\n              \"hasOpenThreats\": false,\n              \"description\": \"\",\n              \"attrs\": {\n                \".element-shape\": {\n                  \"class\": \"element-shape hasNoOpenThreats isInScope\"\n                },\n                \"text\": {\n                  \"text\": \"SQLite Database\"\n                },\n                \".element-text\": {\n                  \"class\": \"element-text hasNoOpenThreats isInScope\"\n                }\n              }\n            },\n            {\n              \"type\": \"tm.Store\",\n              \"size\": {\n                \"width\": 160,\n                \"height\": 80\n              },\n              \"position\": {\n                \"x\": 568,\n                \"y\": 396\n              },\n              \"angle\": 0,\n              \"id\": \"38c5137f-1570-446a-9978-a98f84fe1c59\",\n              \"z\": 6,\n              \"hasOpenThreats\": false,\n              \"attrs\": {\n                \".element-shape\": {\n                  \"class\": \"element-shape hasNoOpenThreats isInScope\"\n                },\n                \"text\": {\n                  \"text\": \"MarsDB NoSQL DB\"\n                },\n                \".element-text\": {\n                  \"class\": \"element-text hasNoOpenThreats isInScope\"\n                }\n              }\n            },\n            {\n              \"type\": \"tm.Store\",\n              \"size\": {\n                \"width\": 160,\n                \"height\": 80\n              },\n              \"position\": {\n                \"x\": 828,\n                \"y\": 255\n              },\n              \"angle\": 0,\n              \"id\": \"00ae7380-5510-4772-8f98-d83df41035b6\",\n              \"z\": 7,\n              \"hasOpenThreats\": false,\n              \"attrs\": {\n                \".element-shape\": {\n                  \"class\": \"element-shape hasNoOpenThreats isInScope\"\n                },\n                \"text\": {\n                  \"text\": \"Local File System\"\n                },\n                \".element-text\": {\n                  \"class\": \"element-text hasNoOpenThreats isInScope\"\n                }\n              }\n            },\n            {\n              \"type\": \"tm.Flow\",\n              \"size\": {\n                \"width\": 10,\n                \"height\": 10\n              },\n              \"smooth\": true,\n              \"source\": {\n                \"id\": \"5c682ec9-c352-442e-b61c-2de8ed53ea22\"\n              },\n              \"target\": {\n                \"id\": \"064304c2-9672-44f2-9e08-982d58145bc0\"\n              },\n              \"vertices\": [\n                {\n                  \"x\": 355,\n                  \"y\": 146\n                }\n              ],\n              \"id\": \"cb17d350-86bc-4f06-8858-668093987b57\",\n              \"labels\": [\n                {\n                  \"position\": 0.5,\n                  \"attrs\": {\n                    \"text\": {\n                      \"text\": \"\",\n                      \"font-weight\": \"400\",\n                      \"font-size\": \"small\"\n                    }\n                  }\n                }\n              ],\n              \"z\": 8,\n              \"hasOpenThreats\": false,\n              \"isPublicNetwork\": true,\n              \"attrs\": {\n                \".marker-target\": {\n                  \"class\": \"marker-target hasNoOpenThreats isInScope\"\n                },\n                \".connection\": {\n                  \"class\": \"connection hasNoOpenThreats isInScope\"\n                }\n              }\n            },\n            {\n              \"type\": \"tm.Flow\",\n              \"size\": {\n                \"width\": 10,\n                \"height\": 10\n              },\n              \"smooth\": true,\n              \"source\": {\n                \"id\": \"064304c2-9672-44f2-9e08-982d58145bc0\"\n              },\n              \"target\": {\n                \"id\": \"d02fa030-ca19-47ad-8920-0980cd87a351\"\n              },\n              \"vertices\": [\n                {\n                  \"x\": 337,\n                  \"y\": 35\n                }\n              ],\n              \"id\": \"2d66f056-75e8-4436-bc99-a0817b3f1c19\",\n              \"labels\": [\n                {\n                  \"position\": 0.5,\n                  \"attrs\": {\n                    \"text\": {\n                      \"text\": \"OAuth2\",\n                      \"font-weight\": \"400\",\n                      \"font-size\": \"small\"\n                    }\n                  }\n                }\n              ],\n              \"z\": 9,\n              \"hasOpenThreats\": false,\n              \"isPublicNetwork\": true,\n              \"isEncrypted\": true,\n              \"protocol\": \"\",\n              \"outOfScope\": true,\n              \"attrs\": {\n                \".marker-target\": {\n                  \"class\": \"marker-target hasNoOpenThreats isInScope\"\n                },\n                \".connection\": {\n                  \"class\": \"connection hasNoOpenThreats isOutOfScope\"\n                }\n              }\n            },\n            {\n              \"type\": \"tm.Flow\",\n              \"size\": {\n                \"width\": 10,\n                \"height\": 10\n              },\n              \"smooth\": true,\n              \"source\": {\n                \"id\": \"064304c2-9672-44f2-9e08-982d58145bc0\"\n              },\n              \"target\": {\n                \"id\": \"edced7d1-6206-43bc-94ab-aa515977042a\"\n              },\n              \"vertices\": [\n                {\n                  \"x\": 419,\n                  \"y\": 204\n                }\n              ],\n              \"id\": \"46d76eab-2862-414b-bce6-c0d8fe79cf79\",\n              \"labels\": [\n                {\n                  \"position\": 0.5,\n                  \"attrs\": {\n                    \"text\": {\n                      \"text\": \"API Requests\",\n                      \"font-weight\": \"400\",\n                      \"font-size\": \"small\"\n                    }\n                  }\n                }\n              ],\n              \"z\": 10,\n              \"hasOpenThreats\": false,\n              \"attrs\": {\n                \".marker-target\": {\n                  \"class\": \"marker-target hasNoOpenThreats isInScope\"\n                },\n                \".connection\": {\n                  \"class\": \"connection hasNoOpenThreats isInScope\"\n                }\n              }\n            },\n            {\n              \"type\": \"tm.Flow\",\n              \"size\": {\n                \"width\": 10,\n                \"height\": 10\n              },\n              \"smooth\": true,\n              \"source\": {\n                \"id\": \"edced7d1-6206-43bc-94ab-aa515977042a\"\n              },\n              \"target\": {\n                \"id\": \"064304c2-9672-44f2-9e08-982d58145bc0\"\n              },\n              \"vertices\": [\n                {\n                  \"x\": 514,\n                  \"y\": 150\n                }\n              ],\n              \"id\": \"dc9ff0b8-2bae-4839-97f1-181f47282846\",\n              \"labels\": [\n                {\n                  \"position\": 0.5,\n                  \"attrs\": {\n                    \"text\": {\n                      \"text\": \"API Responses\",\n                      \"font-weight\": \"400\",\n                      \"font-size\": \"small\"\n                    }\n                  }\n                }\n              ],\n              \"z\": 11,\n              \"hasOpenThreats\": false,\n              \"attrs\": {\n                \".marker-target\": {\n                  \"class\": \"marker-target hasNoOpenThreats isInScope\"\n                },\n                \".connection\": {\n                  \"class\": \"connection hasNoOpenThreats isInScope\"\n                }\n              }\n            },\n            {\n              \"type\": \"tm.Flow\",\n              \"size\": {\n                \"width\": 10,\n                \"height\": 10\n              },\n              \"smooth\": true,\n              \"source\": {\n                \"id\": \"edced7d1-6206-43bc-94ab-aa515977042a\"\n              },\n              \"target\": {\n                \"id\": \"00ae7380-5510-4772-8f98-d83df41035b6\"\n              },\n              \"vertices\": [\n                {\n                  \"x\": 683,\n                  \"y\": 236\n                }\n              ],\n              \"id\": \"028ce073-348f-498d-ab6e-7d98e4d7ae77\",\n              \"labels\": [\n                {\n                  \"position\": {\n                    \"distance\": 0.4545744602063211,\n                    \"offset\": -14.064892638757218\n                  },\n                  \"attrs\": {\n                    \"text\": {\n                      \"text\": \"Invoices\",\n                      \"font-weight\": \"400\",\n                      \"font-size\": \"small\"\n                    }\n                  }\n                }\n              ],\n              \"z\": 12,\n              \"hasOpenThreats\": false,\n              \"attrs\": {\n                \".marker-target\": {\n                  \"class\": \"marker-target hasNoOpenThreats isInScope\"\n                },\n                \".connection\": {\n                  \"class\": \"connection hasNoOpenThreats isInScope\"\n                }\n              }\n            },\n            {\n              \"type\": \"tm.Actor\",\n              \"size\": {\n                \"width\": 160,\n                \"height\": 80\n              },\n              \"position\": {\n                \"x\": 66,\n                \"y\": 296\n              },\n              \"angle\": 0,\n              \"id\": \"82095edc-bdca-448b-8c28-ed1aaba2e9e9\",\n              \"z\": 13,\n              \"hasOpenThreats\": false,\n              \"attrs\": {\n                \".element-shape\": {\n                  \"class\": \"element-shape hasNoOpenThreats isInScope\"\n                },\n                \"text\": {\n                  \"text\": \"B2B Customer (Browser)\"\n                },\n                \".element-text\": {\n                  \"class\": \"element-text hasNoOpenThreats isInScope\"\n                }\n              }\n            },\n            {\n              \"type\": \"tm.Process\",\n              \"size\": {\n                \"width\": 100,\n                \"height\": 100\n              },\n              \"position\": {\n                \"x\": 307,\n                \"y\": 338\n              },\n              \"angle\": 0,\n              \"id\": \"2f427832-3419-4b43-ae77-338f8636ca2b\",\n              \"z\": 14,\n              \"hasOpenThreats\": false,\n              \"attrs\": {\n                \".element-shape\": {\n                  \"class\": \"element-shape hasNoOpenThreats isInScope\"\n                },\n                \"text\": {\n                  \"text\": \"B2B API\"\n                },\n                \".element-text\": {\n                  \"class\": \"element-text hasNoOpenThreats isInScope\"\n                }\n              }\n            },\n            {\n              \"type\": \"tm.Flow\",\n              \"size\": {\n                \"width\": 10,\n                \"height\": 10\n              },\n              \"smooth\": true,\n              \"source\": {\n                \"id\": \"82095edc-bdca-448b-8c28-ed1aaba2e9e9\"\n              },\n              \"target\": {\n                \"id\": \"2f427832-3419-4b43-ae77-338f8636ca2b\"\n              },\n              \"vertices\": [],\n              \"id\": \"f9d73d1a-e79a-4a57-bba8-c7cbc02fa348\",\n              \"labels\": [\n                {\n                  \"position\": 0.5,\n                  \"attrs\": {\n                    \"text\": {\n                      \"text\": \"\",\n                      \"font-weight\": \"400\",\n                      \"font-size\": \"small\"\n                    }\n                  }\n                }\n              ],\n              \"z\": 15,\n              \"hasOpenThreats\": false,\n              \"isPublicNetwork\": true,\n              \"attrs\": {\n                \".marker-target\": {\n                  \"class\": \"marker-target hasNoOpenThreats isInScope\"\n                },\n                \".connection\": {\n                  \"class\": \"connection hasNoOpenThreats isInScope\"\n                }\n              }\n            },\n            {\n              \"type\": \"tm.Flow\",\n              \"size\": {\n                \"width\": 10,\n                \"height\": 10\n              },\n              \"smooth\": true,\n              \"source\": {\n                \"id\": \"2f427832-3419-4b43-ae77-338f8636ca2b\"\n              },\n              \"target\": {\n                \"id\": \"edced7d1-6206-43bc-94ab-aa515977042a\"\n              },\n              \"vertices\": [],\n              \"id\": \"1515ba33-e41b-4940-b92c-139179c14709\",\n              \"labels\": [\n                {\n                  \"position\": 0.5,\n                  \"attrs\": {\n                    \"text\": {\n                      \"text\": \"Orders\",\n                      \"font-weight\": \"400\",\n                      \"font-size\": \"small\"\n                    }\n                  }\n                }\n              ],\n              \"z\": 16,\n              \"hasOpenThreats\": false,\n              \"attrs\": {\n                \".marker-target\": {\n                  \"class\": \"marker-target hasNoOpenThreats isInScope\"\n                },\n                \".connection\": {\n                  \"class\": \"connection hasNoOpenThreats isInScope\"\n                }\n              }\n            },\n            {\n              \"type\": \"tm.Actor\",\n              \"size\": {\n                \"width\": 160,\n                \"height\": 80\n              },\n              \"position\": {\n                \"x\": 844,\n                \"y\": 1\n              },\n              \"angle\": 0,\n              \"id\": \"0191343a-8439-45d7-b9e4-6b052f91415d\",\n              \"z\": 17,\n              \"hasOpenThreats\": false,\n              \"attrs\": {\n                \".element-shape\": {\n                  \"class\": \"element-shape hasNoOpenThreats isInScope\"\n                },\n                \"text\": {\n                  \"text\": \"Admin (Browser)\"\n                },\n                \".element-text\": {\n                  \"class\": \"element-text hasNoOpenThreats isInScope\"\n                }\n              }\n            },\n            {\n              \"type\": \"tm.Actor\",\n              \"size\": {\n                \"width\": 160,\n                \"height\": 80\n              },\n              \"position\": {\n                \"x\": 847,\n                \"y\": 107\n              },\n              \"angle\": 0,\n              \"id\": \"12bf3793-217c-4863-b430-718182257f1a\",\n              \"z\": 18,\n              \"hasOpenThreats\": false,\n              \"attrs\": {\n                \".element-shape\": {\n                  \"class\": \"element-shape hasNoOpenThreats isInScope\"\n                },\n                \"text\": {\n                  \"text\": \"Accounting (Browser)\"\n                },\n                \".element-text\": {\n                  \"class\": \"element-text hasNoOpenThreats isInScope\"\n                }\n              }\n            },\n            {\n              \"type\": \"tm.Flow\",\n              \"size\": {\n                \"width\": 10,\n                \"height\": 10\n              },\n              \"smooth\": true,\n              \"source\": {\n                \"id\": \"12bf3793-217c-4863-b430-718182257f1a\"\n              },\n              \"target\": {\n                \"id\": \"064304c2-9672-44f2-9e08-982d58145bc0\"\n              },\n              \"vertices\": [],\n              \"id\": \"16ed975a-3375-47b2-ab23-dac55835961c\",\n              \"labels\": [\n                {\n                  \"position\": 0.5,\n                  \"attrs\": {\n                    \"text\": {\n                      \"text\": \"Product Inventory\",\n                      \"font-weight\": \"400\",\n                      \"font-size\": \"small\"\n                    }\n                  }\n                }\n              ],\n              \"z\": 19,\n              \"hasOpenThreats\": false,\n              \"attrs\": {\n                \".marker-target\": {\n                  \"class\": \"marker-target hasNoOpenThreats isInScope\"\n                },\n                \".connection\": {\n                  \"class\": \"connection hasNoOpenThreats isInScope\"\n                }\n              }\n            },\n            {\n              \"type\": \"tm.Flow\",\n              \"size\": {\n                \"width\": 10,\n                \"height\": 10\n              },\n              \"smooth\": true,\n              \"source\": {\n                \"id\": \"0191343a-8439-45d7-b9e4-6b052f91415d\"\n              },\n              \"target\": {\n                \"id\": \"064304c2-9672-44f2-9e08-982d58145bc0\"\n              },\n              \"vertices\": [\n                {\n                  \"x\": 679,\n                  \"y\": 18\n                }\n              ],\n              \"id\": \"8a3a017a-76c0-45fa-9d39-c31311f8b76f\",\n              \"labels\": [\n                {\n                  \"position\": 0.5,\n                  \"attrs\": {\n                    \"text\": {\n                      \"text\": \"User Management\",\n                      \"font-weight\": \"400\",\n                      \"font-size\": \"small\"\n                    }\n                  }\n                }\n              ],\n              \"z\": 20,\n              \"hasOpenThreats\": false,\n              \"attrs\": {\n                \".marker-target\": {\n                  \"class\": \"marker-target hasNoOpenThreats isInScope\"\n                },\n                \".connection\": {\n                  \"class\": \"connection hasNoOpenThreats isInScope\"\n                }\n              }\n            },\n            {\n              \"type\": \"tm.Flow\",\n              \"size\": {\n                \"width\": 10,\n                \"height\": 10\n              },\n              \"smooth\": true,\n              \"source\": {\n                \"id\": \"edced7d1-6206-43bc-94ab-aa515977042a\"\n              },\n              \"target\": {\n                \"id\": \"673196a0-0797-4c56-974b-b169ec27accb\"\n              },\n              \"vertices\": [],\n              \"id\": \"063a0a1a-352e-45bb-bce9-abee2be89a0d\",\n              \"labels\": [\n                {\n                  \"position\": 0.5,\n                  \"attrs\": {\n                    \"text\": {\n                      \"text\": \"all other data\",\n                      \"font-weight\": \"400\",\n                      \"font-size\": \"small\"\n                    }\n                  }\n                }\n              ],\n              \"z\": 21,\n              \"hasOpenThreats\": false,\n              \"attrs\": {\n                \".marker-target\": {\n                  \"class\": \"marker-target hasNoOpenThreats isInScope\"\n                },\n                \".connection\": {\n                  \"class\": \"connection hasNoOpenThreats isInScope\"\n                }\n              }\n            },\n            {\n              \"type\": \"tm.Flow\",\n              \"size\": {\n                \"width\": 10,\n                \"height\": 10\n              },\n              \"smooth\": true,\n              \"source\": {\n                \"id\": \"edced7d1-6206-43bc-94ab-aa515977042a\"\n              },\n              \"target\": {\n                \"id\": \"38c5137f-1570-446a-9978-a98f84fe1c59\"\n              },\n              \"vertices\": [\n                {\n                  \"x\": 509,\n                  \"y\": 385\n                }\n              ],\n              \"id\": \"96dee941-1600-445f-b12f-88fbb0776c16\",\n              \"labels\": [\n                {\n                  \"position\": 0.5,\n                  \"attrs\": {\n                    \"text\": {\n                      \"text\": \"Orders\",\n                      \"font-weight\": \"400\",\n                      \"font-size\": \"small\"\n                    }\n                  }\n                }\n              ],\n              \"z\": 22,\n              \"hasOpenThreats\": false,\n              \"attrs\": {\n                \".marker-target\": {\n                  \"class\": \"marker-target hasNoOpenThreats isInScope\"\n                },\n                \".connection\": {\n                  \"class\": \"connection hasNoOpenThreats isInScope\"\n                }\n              }\n            },\n            {\n              \"type\": \"tm.Flow\",\n              \"size\": {\n                \"width\": 10,\n                \"height\": 10\n              },\n              \"smooth\": true,\n              \"source\": {\n                \"id\": \"edced7d1-6206-43bc-94ab-aa515977042a\"\n              },\n              \"target\": {\n                \"id\": \"38c5137f-1570-446a-9978-a98f84fe1c59\"\n              },\n              \"vertices\": [\n                {\n                  \"x\": 565,\n                  \"y\": 378\n                }\n              ],\n              \"id\": \"5581ae64-5e43-4525-94e0-e020793e4136\",\n              \"labels\": [\n                {\n                  \"position\": 0.5,\n                  \"attrs\": {\n                    \"text\": {\n                      \"text\": \"Reviews\",\n                      \"font-weight\": \"400\",\n                      \"font-size\": \"small\"\n                    }\n                  }\n                }\n              ],\n              \"z\": 23,\n              \"hasOpenThreats\": false,\n              \"attrs\": {\n                \".marker-target\": {\n                  \"class\": \"marker-target hasNoOpenThreats isInScope\"\n                },\n                \".connection\": {\n                  \"class\": \"connection hasNoOpenThreats isInScope\"\n                }\n              }\n            },\n            {\n              \"type\": \"tm.Flow\",\n              \"size\": {\n                \"width\": 10,\n                \"height\": 10\n              },\n              \"smooth\": true,\n              \"source\": {\n                \"id\": \"edced7d1-6206-43bc-94ab-aa515977042a\"\n              },\n              \"target\": {\n                \"id\": \"5c682ec9-c352-442e-b61c-2de8ed53ea22\"\n              },\n              \"vertices\": [],\n              \"id\": \"e9a8981a-2243-4e43-a68b-0bdfd81f1a45\",\n              \"labels\": [\n                {\n                  \"position\": 0.5,\n                  \"attrs\": {\n                    \"text\": {\n                      \"text\": \"Invoices\",\n                      \"font-weight\": \"400\",\n                      \"font-size\": \"small\"\n                    }\n                  }\n                }\n              ],\n              \"z\": 24,\n              \"hasOpenThreats\": false,\n              \"isPublicNetwork\": true,\n              \"attrs\": {\n                \".marker-target\": {\n                  \"class\": \"marker-target hasNoOpenThreats isInScope\"\n                },\n                \".connection\": {\n                  \"class\": \"connection hasNoOpenThreats isInScope\"\n                }\n              }\n            },\n            {\n              \"type\": \"tm.Boundary\",\n              \"size\": {\n                \"width\": 10,\n                \"height\": 10\n              },\n              \"smooth\": true,\n              \"source\": {\n                \"x\": 93,\n                \"y\": 19\n              },\n              \"target\": {\n                \"x\": 65,\n                \"y\": 146\n              },\n              \"vertices\": [\n                {\n                  \"x\": 252,\n                  \"y\": 54\n                },\n                {\n                  \"x\": 246,\n                  \"y\": 143\n                }\n              ],\n              \"id\": \"e4006eb6-c6da-4056-8cad-6111ffed690a\",\n              \"z\": 25,\n              \"attrs\": {}\n            },\n            {\n              \"type\": \"tm.Boundary\",\n              \"size\": {\n                \"width\": 10,\n                \"height\": 10\n              },\n              \"smooth\": true,\n              \"source\": {\n                \"x\": 183,\n                \"y\": 441\n              },\n              \"target\": {\n                \"x\": 286,\n                \"y\": 124\n              },\n              \"vertices\": [\n                {\n                  \"x\": 310,\n                  \"y\": 320\n                }\n              ],\n              \"id\": \"a0bc0999-c102-4390-9c74-355bfea405be\",\n              \"z\": 26,\n              \"attrs\": {}\n            },\n            {\n              \"type\": \"tm.Boundary\",\n              \"size\": {\n                \"width\": 10,\n                \"height\": 10\n              },\n              \"smooth\": true,\n              \"source\": {\n                \"x\": 772,\n                \"y\": 161\n              },\n              \"target\": {\n                \"x\": 784,\n                \"y\": 1\n              },\n              \"vertices\": [\n                {\n                  \"x\": 787,\n                  \"y\": 90\n                }\n              ],\n              \"id\": \"b66d28e9-c542-452b-944c-6ea0b95d7421\",\n              \"z\": 27,\n              \"attrs\": {}\n            },\n            {\n              \"type\": \"tm.Boundary\",\n              \"size\": {\n                \"width\": 10,\n                \"height\": 10\n              },\n              \"smooth\": true,\n              \"source\": {\n                \"x\": 417,\n                \"y\": 128\n              },\n              \"target\": {\n                \"x\": 616,\n                \"y\": 156\n              },\n              \"vertices\": [],\n              \"id\": \"140276bc-f5b6-4199-ac4d-ea1f473c132a\",\n              \"z\": 28,\n              \"attrs\": {}\n            },\n            {\n              \"type\": \"tm.Boundary\",\n              \"size\": {\n                \"width\": 10,\n                \"height\": 10\n              },\n              \"smooth\": true,\n              \"source\": {\n                \"x\": 749,\n                \"y\": 492\n              },\n              \"target\": {\n                \"x\": 753,\n                \"y\": 198\n              },\n              \"vertices\": [\n                {\n                  \"x\": 775,\n                  \"y\": 346\n                }\n              ],\n              \"id\": \"161f7ef7-4adf-40e3-81c5-f15979ac1b5c\",\n              \"z\": 29,\n              \"attrs\": {}\n            },\n            {\n              \"type\": \"tm.Flow\",\n              \"size\": {\n                \"width\": 10,\n                \"height\": 10\n              },\n              \"smooth\": true,\n              \"source\": {\n                \"id\": \"00ae7380-5510-4772-8f98-d83df41035b6\"\n              },\n              \"target\": {\n                \"id\": \"edced7d1-6206-43bc-94ab-aa515977042a\"\n              },\n              \"vertices\": [\n                {\n                  \"x\": 663,\n                  \"y\": 260\n                }\n              ],\n              \"id\": \"53b58d93-f3af-4668-989c-c15ce69268e6\",\n              \"labels\": [\n                {\n                  \"position\": 0.5,\n                  \"attrs\": {\n                    \"text\": {\n                      \"text\": \"Configuration\",\n                      \"font-weight\": \"400\",\n                      \"font-size\": \"small\"\n                    }\n                  }\n                }\n              ],\n              \"z\": 30,\n              \"hasOpenThreats\": false,\n              \"attrs\": {\n                \".marker-target\": {\n                  \"class\": \"marker-target hasNoOpenThreats isInScope\"\n                },\n                \".connection\": {\n                  \"class\": \"connection hasNoOpenThreats isInScope\"\n                }\n              }\n            },\n            {\n              \"type\": \"tm.Flow\",\n              \"size\": {\n                \"width\": 10,\n                \"height\": 10\n              },\n              \"smooth\": true,\n              \"source\": {\n                \"id\": \"edced7d1-6206-43bc-94ab-aa515977042a\"\n              },\n              \"target\": {\n                \"id\": \"00ae7380-5510-4772-8f98-d83df41035b6\"\n              },\n              \"vertices\": [\n                {\n                  \"x\": 737,\n                  \"y\": 306\n                }\n              ],\n              \"id\": \"8eae4755-841b-44b2-8826-bd231926a480\",\n              \"labels\": [\n                {\n                  \"position\": 0.5,\n                  \"attrs\": {\n                    \"text\": {\n                      \"text\": \"Logging\",\n                      \"font-weight\": \"400\",\n                      \"font-size\": \"small\"\n                    }\n                  }\n                }\n              ],\n              \"z\": 31,\n              \"hasOpenThreats\": false,\n              \"attrs\": {\n                \".marker-target\": {\n                  \"class\": \"marker-target hasNoOpenThreats isInScope\"\n                },\n                \".connection\": {\n                  \"class\": \"connection hasNoOpenThreats isInScope\"\n                }\n              }\n            }\n          ]\n        },\n        \"size\": {\n          \"height\": 590,\n          \"width\": 1425\n        }\n      }\n    ]\n  }\n}"
        },
        {
          "name": "tsconfig.json",
          "type": "blob",
          "size": 0.765625,
          "content": "{\n  \"compilerOptions\": {\n    \"baseUrl\": \"./\",\n    \"outDir\": \"./build\",\n    \"allowJs\": true,\n    \"module\": \"commonjs\",\n    \"target\": \"es2020\",\n    \"moduleResolution\": \"node\",\n    \"sourceMap\": true,\n    \"strict\": true,\n    \"esModuleInterop\": true,\n    \"skipLibCheck\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"resolveJsonModule\": true,\n    \"lib\": [\n      \"es2020\",\n      \"dom\"\n    ]\n  },\n  \"include\" : [\n    \"cypress/**/*.ts\",\n    \"data/**/*.ts\",\n    \"lib/**/*.ts\",\n    \"lib/**/*.js\",\n    \"models/**/*.ts\",\n    \"routes/**/*.ts\",\n    \"test/**/*.ts\",\n    \"views/**/*.ts\",\n    \"views/**/*.js\",\n    \"rsn/**/*.ts\",\n    \"*.ts\"\n  ],\n  \"exclude\": [\n    \"node_modules\",\n    \"frontend\",\n    \"dist\",\n    \"build\",\n    \"vagrant\",\n    \"data/static/codefixes/**\",\n    \"**/*.d.ts\"\n  ]\n}\n"
        },
        {
          "name": "uploads",
          "type": "tree",
          "content": null
        },
        {
          "name": "vagrant",
          "type": "tree",
          "content": null
        },
        {
          "name": "views",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}