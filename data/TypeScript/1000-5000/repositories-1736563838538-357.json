{
  "metadata": {
    "timestamp": 1736563838538,
    "page": 357,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "btroncone/learn-rxjs",
      "stars": 3669,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.04296875,
          "content": "_book\nnode_modules\n.idea\nnpm-debug.log\nCNAME"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.052734375,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2016 learn-rxjs\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 7.154296875,
          "content": "# Introduction\n\nClear examples, explanations, and resources for RxJS.\n\n_By_ [_@btroncone_](https://twitter.com/BTroncone)\n\n## Introduction\n\n[RxJS](https://github.com/ReactiveX/rxjs) is one of the hottest libraries in web\ndevelopment today. Offering a powerful, functional approach for dealing with\nevents and with integration points into a growing number of frameworks,\nlibraries, and utilities, the case for learning Rx has never been more\nappealing. Couple this with the ability to utilize your knowledge across\n[nearly any language](http://reactivex.io/languages.html), having a solid grasp\non reactive programming and what it can offer seems like a no-brainer.\n\n**But...**\n\nLearning RxJS and reactive programming is\n[hard](https://twitter.com/hoss/status/742643506536153088). There's the\nmultitude of concepts, large API surface, and fundamental shift in mindset from\nan\n[imperative to declarative style](https://tylermcginnis.com/imperative-vs-declarative-programming/).\nThis site focuses on making these concepts approachable, the examples clear and\neasy to explore, and features references throughout to the best RxJS related\nmaterial on the web. The goal is to supplement the\n[official docs](http://reactivex.io/rxjs/) and pre-existing learning material\nwhile offering a new, fresh perspective to clear any hurdles and tackle the pain\npoints. Learning Rx may be difficult but it is certainly worth the effort!\n\n[![Ultimate RxJS](https://ultimatecourses.com/static/banners/banner-rxjs.svg)](https://ultimatecourses.com/courses/rxjs?ref=4)\n\n### Brand New to RxJS?\n\nStart getting familiar with all the key concepts needed to be productive with\nour [RxJS Primer](/concepts/rxjs-primer.md)!\n\n## Content\n\n#### Operators\n\nOperators are the horse-power behind observables, providing an elegant,\ndeclarative solution to complex asynchronous tasks. This section contains all\n[RxJS operators](/operators/README.md), included with clear, executable\nexamples. Links to additional resources and recipes for each operator are also\nprovided, when applicable.\n\n##### Operator Categories\n\n- [Combination](/operators/combination/README.md)\n- [Conditional](/operators/conditional/README.md)\n- [Creation](/operators/creation/README.md)\n- [Error Handling](/operators/error_handling/README.md)\n- [Multicasting](/operators/multicasting/README.md)\n- [Filtering](/operators/filtering/README.md)\n- [Transformation](/operators/transformation/README.md)\n- [Utility](/operators/utility/README.md)\n\n**OR...**\n\n[Complete listing in alphabetical order](/operators/complete.md)\n\n#### Understanding Subjects\n\nA Subject is a special type of Observable which shares a single execution path\namong observers.\n\n- [Overview](/subjects/README.md)\n- [AsyncSubject](/subjects/asyncsubject.md)\n- [BehaviorSubject](/subjects/behaviorsubject.md)\n- [ReplaySubject](/subjects/replaysubject.md)\n- [Subject](/subjects/subject.md)\n\n#### Concepts\n\nWithout a solid base knowledge of how Observables work behind the scenes, it's\neasy for much of RxJS to feel like 'magic'. This section helps solidify the\nmajor concepts needed to feel comfortable with reactive programming and\nObservables.\n\n- [RxJS Primer](/concepts/rxjs-primer.md)\n- [Get started transforming streams with map, pluck, and mapTo](/concepts/get-started-transforming.md)\n- [Time based operators comparison](/concepts/time-based-operators-comparison.md)\n- [RxJS v5 -> v6 Upgrade](/concepts/rxjs5-6.md)\n\n#### Recipes\n\nRecipes for common use-cases and interesting solutions with RxJS.\n\n- [Alphabet Invasion Game](/recipes/alphabet-invasion-game.md)\n- [Battleship Game](/recipes/battleship-game.md)\n- [Breakout Game](/recipes/breakout-game.md)\n- [Car Racing Game](/recipes/car-racing-game.md)\n- [Catch The Dot Game](/recipes/catch-the-dot-game.md)\n- [Click Ninja Game](/recipes/click-ninja-game.md)\n- [Flappy Bird Game](/recipes/flappy-bird-game.md)\n- [Game Loop](/recipes/gameloop.md)\n- [Horizontal Scroll Indicator](/recipes/horizontal-scroll-indicator.md)\n- [HTTP Polling](/recipes/http-polling.md)\n- [Lockscreen](/recipes/lockscreen.md)\n- [Matrix Digital Rain](/recipes/matrix-digital-rain.md)\n- [Memory Game](/recipes/memory-game.md)\n- [Mine Sweeper Game](/recipes/mine-sweeper-game.md)\n- [Platform Jumper Game](/recipes/platform-jumper-game.md)\n- [Progress Bar](/recipes/progressbar.md)\n- [Save Indicator](/recipes/save-indicator.md)\n- [Smart Counter](/recipes/smartcounter.md)\n- [Stop Watch](/recipes/stop-watch.md)\n- [Space Invaders Game](/recipes/space-invaders-game.md)\n- [Swipe To Refresh](/recipes/swipe-to-refresh.md)\n- [Tank Battle Game](/recipes/tank-battle-game.md)\n- [Tetris Game](/recipes/tetris-game.md)\n- [Type Ahead](/recipes/type-ahead.md)\n- [Uncover Image Game](/recipes/uncover-image-game.md)\n\n## Introductory Resources\n\nNew to RxJS and reactive programming? In addition to the content found on this\nsite, these excellent resources will help jump start your learning experience!\n\n#### Conferences\n\n- [RxJS Live](https://www.rxjs.live/) - RxJS specific conference\n\n#### Reading\n\n- [RxJS Introduction](https://rxjs-dev.firebaseapp.com/guide/overview) -\n  Official Docs\n\n- [The Introduction to Reactive Programming You've Been Missing](https://gist.github.com/staltz/868e7e9bc2a7b8c1f754) -\n  AndrÃ© Staltz\n\n- [RxJS: Observables, Observers and Operators Introduction](https://ultimatecourses.com/blog/rxjs-observables-observers-operators) -\n  Todd Motto\n\n#### Videos\n\n- [Ultimate RxJS](https://ultimatecourses.com/courses/rxjs?ref=4) ðŸ’µ - Brian\n  Troncone\n\n- [Asynchronous Programming: The End of The Loop](https://egghead.io/courses/mastering-asynchronous-programming-the-end-of-the-loop) -\n  Jafar Husain\n\n- [What is RxJS?](https://egghead.io/lessons/rxjs-what-is-rxjs) - Ben Lesh\n- [Creating Observable from Scratch](https://egghead.io/lessons/rxjs-creating-observable-from-scratch) -\n  Ben Lesh\n\n- [Introduction to RxJS Marble Testing](https://egghead.io/lessons/rxjs-introduction-to-rxjs-marble-testing)\n  ðŸ’µ - Brian Troncone\n\n- [Introduction to Reactive Programming](https://egghead.io/courses/introduction-to-reactive-programming)\n  ðŸ’µ - AndrÃ© Staltz\n\n- [Reactive Programming using Observables](https://www.youtube.com/watch?v=HT7JiiqnYYc&feature=youtu.be) -\n  Jeremy Lund\n\n#### Exercises\n\n- [Functional Programming in JavaScript](http://reactivex.io/learnrx/) - Jafar\n  Husain\n\n#### Tools\n\n- [Rx Marbles - Interactive diagrams of Rx Observables](http://rxmarbles.com/) -\n  AndrÃ© Staltz\n\n- [Rx Visualizer - Animated playground for Rx Observables](https://rxviz.com) -\n  Misha Moroshko\n\n- [Reactive.how - Animated cards to learn Reactive Programming](http://reactive.how) -\n  CÃ©dric Soulas\n\n- [Rx Visualization - Visualizes programming with RxJS](https://fingerpich.github.io/rx-visualization/) -\n  Mojtaba Zarei\n\n_Interested in RxJS 4? Check out_\n[_Denis Stoyanov's_](https://github.com/xgrommx) _excellent_\n[_eBook_](https://xgrommx.github.io/rx-book/)_!_\n\n## Translations\n\n- [ç®€ä½“ä¸­æ–‡](https://rxjs-cn.github.io/learn-rxjs-operators)\n\n### A Note On References\n\nAll references included in this GitBook are resources, both free and paid, that\nhelped me tremendously while learning RxJS. If you come across an article or\nvideo that you think should be included, please use the _edit this page_ link in\nthe top menu and submit a pull request. Your feedback is appreciated!\n"
        },
        {
          "name": "SUMMARY.md",
          "type": "blob",
          "size": 7.166015625,
          "content": "# Table of contents\n\n- [Introduction](README.md)\n\n## Learn RxJS\n\n- [Operators](operators/README.md)\n  - [Combination](operators/combination/README.md)\n    - [combineAll](operators/combination/combineall.md)\n    - [combineLatest](operators/combination/combinelatest.md)\n    - [concat](operators/combination/concat.md)\n    - [concatAll](operators/combination/concatall.md)\n    - [endWith](operators/combination/endwith.md)\n    - [forkJoin](operators/combination/forkjoin.md)\n    - [merge](operators/combination/merge.md)\n    - [mergeAll](operators/combination/mergeall.md)\n    - [pairwise](operators/combination/pairwise.md)\n    - [race](operators/combination/race.md)\n    - [startWith](operators/combination/startwith.md)\n    - [withLatestFrom](operators/combination/withlatestfrom.md)\n    - [zip](operators/combination/zip.md)\n  - [Conditional](operators/conditional/README.md)\n    - [defaultIfEmpty](operators/conditional/defaultifempty.md)\n    - [every](operators/conditional/every.md)\n    - [iif](operators/conditional/iif.md)\n    - [sequenceEqual](operators/conditional/sequenceequal.md)\n  - [Creation](operators/creation/README.md)\n    - [ajax](operators/creation/ajax.md)\n    - [create](operators/creation/create.md)\n    - [defer](operators/creation/defer.md)\n    - [empty](operators/creation/empty.md)\n    - [from](operators/creation/from.md)\n    - [fromEvent](operators/creation/fromevent.md)\n    - [generate](operators/creation/generate.md)\n    - [interval](operators/creation/interval.md)\n    - [of](operators/creation/of.md)\n    - [range](operators/creation/range.md)\n    - [throw](operators/creation/throw.md)\n    - [timer](operators/creation/timer.md)\n  - [Error Handling](operators/error_handling/README.md)\n    - [catch / catchError](operators/error_handling/catch.md)\n    - [retry](operators/error_handling/retry.md)\n    - [retryWhen](operators/error_handling/retrywhen.md)\n  - [Multicasting](operators/multicasting/README.md)\n    - [publish](operators/multicasting/publish.md)\n    - [multicast](operators/multicasting/multicast.md)\n    - [share](operators/multicasting/share.md)\n    - [shareReplay](operators/multicasting/sharereplay.md)\n  - [Filtering](operators/filtering/README.md)\n    - [audit](operators/filtering/audit.md)\n    - [auditTime](operators/filtering/audittime.md)\n    - [debounce](operators/filtering/debounce.md)\n    - [debounceTime](operators/filtering/debouncetime.md)\n    - [distinct](operators/filtering/distinct.md)\n    - [distinctUntilChanged](operators/filtering/distinctuntilchanged.md)\n    - [distinctUntilKeyChanged](operators/filtering/distinctuntilkeychanged.md)\n    - [filter](operators/filtering/filter.md)\n    - [find](operators/filtering/find.md)\n    - [first](operators/filtering/first.md)\n    - [ignoreElements](operators/filtering/ignoreelements.md)\n    - [last](operators/filtering/last.md)\n    - [sample](operators/filtering/sample.md)\n    - [single](operators/filtering/single.md)\n    - [skip](operators/filtering/skip.md)\n    - [skipUntil](operators/filtering/skipuntil.md)\n    - [skipWhile](operators/filtering/skipwhile.md)\n    - [take](operators/filtering/take.md)\n    - [takeLast](operators/filtering/takelast.md)\n    - [takeUntil](operators/filtering/takeuntil.md)\n    - [takeWhile](operators/filtering/takewhile.md)\n    - [throttle](operators/filtering/throttle.md)\n    - [throttleTime](operators/filtering/throttletime.md)\n  - [Transformation](operators/transformation/README.md)\n    - [buffer](operators/transformation/buffer.md)\n    - [bufferCount](operators/transformation/buffercount.md)\n    - [bufferTime](operators/transformation/buffertime.md)\n    - [bufferToggle](operators/transformation/buffertoggle.md)\n    - [bufferWhen](operators/transformation/bufferwhen.md)\n    - [concatMap](operators/transformation/concatmap.md)\n    - [concatMapTo](operators/transformation/concatmapto.md)\n    - [exhaustMap](operators/transformation/exhaustmap.md)\n    - [expand](operators/transformation/expand.md)\n    - [groupBy](operators/transformation/groupby.md)\n    - [map](operators/transformation/map.md)\n    - [mapTo](operators/transformation/mapto.md)\n    - [mergeMap / flatMap](operators/transformation/mergemap.md)\n    - [mergeScan](operators/transformation/mergescan.md)\n    - [partition](operators/transformation/partition.md)\n    - [pluck](operators/transformation/pluck.md)\n    - [reduce](operators/transformation/reduce.md)\n    - [scan](operators/transformation/scan.md)\n    - [switchMap](operators/transformation/switchmap.md)\n    - [switchMapTo](operators/transformation/switchmapto.md)\n    - [toArray](operators/transformation/toarray.md)\n    - [window](operators/transformation/window.md)\n    - [windowCount](operators/transformation/windowcount.md)\n    - [windowTime](operators/transformation/windowtime.md)\n    - [windowToggle](operators/transformation/windowtoggle.md)\n    - [windowWhen](operators/transformation/windowwhen.md)\n  - [Utility](operators/utility/README.md)\n    - [tap / do](operators/utility/do.md)\n    - [delay](operators/utility/delay.md)\n    - [delayWhen](operators/utility/delaywhen.md)\n    - [dematerialize](operators/utility/dematerialize.md)\n    - [finalize / finally](operators/utility/finalize.md)\n    - [let](operators/utility/let.md)\n    - [repeat](operators/utility/repeat.md)\n    - [timeInterval](operators/utility/timeinterval.md)\n    - [timeout](operators/utility/timeout.md)\n    - [timeoutWith](operators/utility/timeoutwith.md)\n    - [toPromise](operators/utility/topromise.md)\n  - [Full Listing](operators/complete.md)\n- [Subjects](subjects/README.md)\n  - [AsyncSubject](subjects/asyncsubject.md)\n  - [BehaviorSubject](subjects/behaviorsubject.md)\n  - [ReplaySubject](subjects/replaysubject.md)\n  - [Subject](subjects/subject.md)\n- [Recipes](recipes/README.md)\n  - [Alphabet Invasion Game](recipes/alphabet-invasion-game.md)\n  - [Battleship Game](recipes/battleship-game.md)\n  - [Breakout Game](recipes/breakout-game.md)\n  - [Car Racing Game](recipes/car-racing-game.md)\n  - [Catch The Dot Game](recipes/catch-the-dot-game.md)\n  - [Click Ninja Game](recipes/click-ninja-game.md)\n  - [Flappy Bird Game](recipes/flappy-bird-game.md)\n  - [Game Loop](recipes/gameloop.md)\n  - [Horizontal Scroll Indicator](recipes/horizontal-scroll-indicator.md)\n  - [Http Polling](recipes/http-polling.md)\n  - [Lockscreen](recipes/lockscreen.md)\n  - [Matrix Digital Rain](recipes/matrix-digital-rain.md)\n  - [Memory Game](recipes/memory-game.md)\n  - [Mine Sweeper Game](recipes/mine-sweeper-game.md)\n  - [Platform Jumper Game](recipes/platform-jumper-game.md)\n  - [Progress Bar](recipes/progressbar.md)\n  - [Save Indicator](recipes/save-indicator.md)\n  - [Smart Counter](recipes/smartcounter.md)\n  - [Space Invaders Game](recipes/space-invaders-game.md)\n  - [Stop Watch](recipes/stop-watch.md)\n  - [Swipe To Refresh](recipes/swipe-to-refresh.md)\n  - [Tank Battle Game](recipes/tank-battle-game.md)\n  - [Tetris Game](recipes/tetris-game.md)\n  - [Type Ahead](recipes/type-ahead.md)\n  - [Uncover Image Game](recipes/uncover-image-game.md)\n- [Concepts](concepts/README.md)\n  - [RxJS Primer](concepts/rxjs-primer.md)\n  - [Get started transforming streams with map, pluck, and mapTo](concepts/get-started-transforming.md)\n  - [Time based operators comparison](concepts/time-based-operators-comparison.md)\n  - [RxJS v5 -&gt; v6 Upgrade](concepts/rxjs5-6.md)\n"
        },
        {
          "name": "book.json",
          "type": "blob",
          "size": 0.8720703125,
          "content": "{\n  \"gitbook\": \"3.1.1\",\n  \"title\": \"Learn RxJS\",\n  \"plugins\": [\n    \"include-codeblock\",\n    \"advanced-emoji\",\n    \"prism\",\n    \"highlight\",\n    \"copy-code-button\",\n    \"edit-link\",\n    \"github\",\n    \"github-buttons\",\n    \"ga\"\n  ],\n  \"pluginsConfig\": {\n    \"edit-link\": {\n      \"base\": \"https://github.com/btroncone/learn-rxjs/tree/master\",\n      \"label\": \"Edit This Page\"\n    },\n    \"github\": {\n      \"url\": \"https://github.com/btroncone/learn-rxjs/\"\n    },\n    \"ga\": {\n      \"token\": \"G-VR4XDP7ZBH\"\n    },\n    \"github-buttons\": {\n      \"buttons\": [\n        {\n          \"user\": \"btroncone\",\n          \"repo\": \"learn-rxjs\",\n          \"type\": \"star\",\n          \"size\": \"small\",\n          \"count\": true\n        },\n        {\n          \"user\": \"btroncone\",\n          \"repo\": \"learn-rxjs\",\n          \"type\": \"watch\",\n          \"size\": \"small\",\n          \"count\": true\n        }\n      ]\n    }\n  }\n}\n"
        },
        {
          "name": "concepts",
          "type": "tree",
          "content": null
        },
        {
          "name": "operators",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.728515625,
          "content": "{\n  \"name\": \"learn-rxjs\",\n  \"version\": \"0.0.1\",\n  \"description\": \"Learn RxJS 5 Gitbook\",\n  \"main\": \"\",\n  \"dependencies\": {},\n  \"devDependencies\": {\n    \"jasmine\": \"^2.4.1\",\n    \"rxjs\": \"^5.0.0-beta.2\"\n  },\n  \"scripts\": {\n    \"gb\": \"gitbook build\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/btroncone/learn-rxjs.git\"\n  },\n  \"keywords\": [\n    \"rxjs\"\n  ],\n  \"author\": \"Brian Troncone <btroncone@gmail.com>\",\n  \"contributors\": [\n    {\n      \"name\": \"Huy Le\"\n    },\n    {\n      \"name\": \"Adam Lubek\",\n      \"url\": \"https://github.com/adamlubek\"\n    }\n  ],\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/btroncone/learn-rxjs/issues\"\n  },\n  \"homepage\": \"https://github.com/btroncone/learn-rxjs#readme\"\n}\n"
        },
        {
          "name": "recipes",
          "type": "tree",
          "content": null
        },
        {
          "name": "styles",
          "type": "tree",
          "content": null
        },
        {
          "name": "subjects",
          "type": "tree",
          "content": null
        },
        {
          "name": "wallaby.js",
          "type": "blob",
          "size": 0.42578125,
          "content": "module.exports = wallaby => ({\n  files: [\n    {pattern: 'operators/specs/helpers/*.ts', instrument: false}\n  ],\n\n  tests: ['operators/specs/**/*-spec.ts'],\n  compilers: {\n    '**/*.ts': wallaby.compilers.typeScript({\n      module: 1,  // commonjs\n      target: 1,  // ES5\n    })\n  }, \n  env: {\n    type: 'node'\n  },\n  testFramework: 'jasmine',\n  setup: function (wallaby) {\n    require('./operators/specs/helpers/test-helper'); \n  }\n});"
        }
      ]
    }
  ]
}