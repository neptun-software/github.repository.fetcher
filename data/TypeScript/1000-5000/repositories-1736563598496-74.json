{
  "metadata": {
    "timestamp": 1736563598496,
    "page": 74,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "gajus/slonik",
      "stars": 4620,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".README",
          "type": "tree",
          "content": null
        },
        {
          "name": ".changeset",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.09375,
          "content": "coverage\ndist\nnode_modules\n*.log\n.*\n!.eslintrc\n!.github\n!.gitignore\n!.husky\n!.README\n!.changeset"
        },
        {
          "name": ".husky",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.5029296875,
          "content": "Copyright (c) 2023, Gajus Kuizinas (https://gajus.com/)\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n    * Neither the name of the Gajus Kuizinas (https://gajus.com/) nor the\n      names of its contributors may be used to endorse or promote products\n      derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\nANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL GAJUS KUIZINAS BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 86.6767578125,
          "content": "# Slonik\n\n[![NPM version](http://img.shields.io/npm/v/slonik.svg?style=flat-square)](https://www.npmjs.org/package/slonik)\n[![Canonical Code Style](https://img.shields.io/badge/code%20style-canonical-blue.svg?style=flat-square)](https://github.com/gajus/canonical)\n[![Twitter Follow](https://img.shields.io/twitter/follow/kuizinas.svg?style=social&label=Follow)](https://twitter.com/kuizinas)\n\nA [battle-tested](#battle-tested) Node.js PostgreSQL client with strict types, detailed logging and assertions.\n\n![Tailing Slonik logs](./.README/slonik-log-tailing.gif)\n\n(The above GIF shows Slonik producing [query logs](https://github.com/gajus/slonik#logging). Slonik produces logs using [Roarr](https://github.com/gajus/roarr). Logs include stack trace of the actual query invocation location and values used to execute the query.)\n\n## Sponsors\n\nIf you value my work and want to see Slonik and [many other of my](https://github.com/gajus/) Open-Source projects to be continuously improved, then please consider becoming a patron:\n\n[![Buy Me A Coffee](https://www.buymeacoffee.com/assets/img/custom_images/orange_img.png)](https://www.buymeacoffee.com/gajus)\n[![Become a Patron](https://c5.patreon.com/external/logo/become_a_patron_button.png)](https://www.patreon.com/gajus)\n\n## Principles\n\n* Promotes writing raw SQL.\n* Discourages ad-hoc dynamic generation of SQL.\n\nRead: [Stop using Knex.js](https://medium.com/@gajus/bf410349856c)\n\nNote: Using this project does not require TypeScript. It is a regular ES6 module. Ignore the type definitions used in the documentation if you do not use a type system.\n\n## Features\n\n* [Runtime validation](#runtime-validation).\n* [Assertions and type safety](#repeating-code-patterns-and-type-safety).\n* [Safe connection handling](#protecting-against-unsafe-connection-handling).\n* [Safe transaction handling](#protecting-against-unsafe-transaction-handling).\n* [Safe value interpolation](#protecting-against-unsafe-value-interpolation).\n* [Transaction nesting](#transaction-nesting).\n* [Transaction retrying](#transaction-retrying).\n* [Query retrying](#query-retrying).\n* Detailed [logging](#debugging).\n* [Asynchronous stack trace resolution](#capture-stack-trace).\n* [Middlewares](#interceptors).\n* [Mapped errors](#error-handling).\n* [ESLint plugin](https://github.com/gajus/eslint-plugin-sql).\n\n## Contents\n\n* [Slonik](#slonik)\n    * [Sponsors](#sponsors)\n    * [Principles](#principles)\n    * [Features](#features)\n    * [Contents](#contents)\n    * [About Slonik](#about-slonik)\n        * [Battle-Tested](#battle-tested)\n        * [Origin of the name](#origin-of-the-name)\n        * [Repeating code patterns and type safety](#repeating-code-patterns-and-type-safety)\n        * [Protecting against unsafe connection handling](#protecting-against-unsafe-connection-handling)\n        * [Protecting against unsafe transaction handling](#protecting-against-unsafe-transaction-handling)\n        * [Protecting against unsafe value interpolation](#protecting-against-unsafe-value-interpolation)\n    * [Documentation](#documentation)\n    * [Usage](#usage)\n        * [Connection URI](#connection-uri)\n        * [Create connection](#create-connection)\n        * [End connection pool](#end-connection-pool)\n        * [Describing the current state of the connection pool](#describing-the-current-state-of-the-connection-pool)\n        * [API](#api)\n        * [Default configuration](#default-configuration)\n        * [Checking out a client from the connection pool](#checking-out-a-client-from-the-connection-pool)\n        * [Events](#events)\n    * [How are they different?](#how-are-they-different)\n        * [`pg` vs `slonik`](#pg-vs-slonik)\n        * [`pg-promise` vs `slonik`](#pg-promise-vs-slonik)\n        * [`postgres` vs `slonik`](#postgres-vs-slonik)\n    * [Type parsers](#type-parsers)\n        * [Built-in type parsers](#built-in-type-parsers)\n    * [Interceptors](#interceptors)\n        * [Interceptor methods](#interceptor-methods)\n        * [Community interceptors](#community-interceptors)\n    * [Recipes](#recipes)\n        * [Inserting large number of rows](#inserting-large-number-of-rows)\n        * [Routing queries to different connections](#routing-queries-to-different-connections)\n        * [Building Utility Statements](#building-utility-statements)\n        * [Inserting vector data](#inserting-vector-data)\n    * [Runtime validation](#runtime-validation)\n        * [Motivation](#motivation)\n        * [Result parser interceptor](#result-parser-interceptor)\n        * [Example use of `sql.type`](#example-use-of-sqltype)\n        * [Performance penalty](#performance-penalty)\n        * [Unknown keys](#unknown-keys)\n        * [Handling schema validation errors](#handling-schema-validation-errors)\n        * [Inferring types](#inferring-types)\n        * [Transforming results](#transforming-results)\n    * [`sql` tag](#sql-tag)\n        * [Type aliases](#type-aliases)\n        * [Typing `sql` tag](#typing-sql-tag)\n    * [Value placeholders](#value-placeholders)\n        * [Tagged template literals](#tagged-template-literals)\n        * [Manually constructing the query](#manually-constructing-the-query)\n        * [Nesting `sql`](#nesting-sql)\n    * [Query building](#query-building)\n        * [`sql.array`](#sqlarray)\n        * [`sql.binary`](#sqlbinary)\n        * [`sql.date`](#sqldate)\n        * [`sql.fragment`](#sqlfragment)\n        * [`sql.identifier`](#sqlidentifier)\n        * [`sql.interval`](#sqlinterval)\n        * [`sql.join`](#sqljoin)\n        * [`sql.json`](#sqljson)\n        * [`sql.jsonb`](#sqljsonb)\n        * [`sql.literalValue`](#sqlliteralvalue)\n        * [`sql.timestamp`](#sqltimestamp)\n        * [`sql.unnest`](#sqlunnest)\n        * [`sql.unsafe`](#sqlunsafe)\n        * [`sql.uuid`](#sqluuid)\n    * [Query methods](#query-methods)\n        * [`any`](#any)\n        * [`anyFirst`](#anyfirst)\n        * [`exists`](#exists)\n        * [`many`](#many)\n        * [`manyFirst`](#manyfirst)\n        * [`maybeOne`](#maybeone)\n        * [`maybeOneFirst`](#maybeonefirst)\n        * [`one`](#one)\n        * [`oneFirst`](#onefirst)\n        * [`query`](#query)\n        * [`stream`](#stream)\n        * [`transaction`](#transaction)\n    * [Utilities](#utilities)\n        * [`parseDsn`](#parsedsn)\n        * [`stringifyDsn`](#stringifydsn)\n    * [Error handling](#error-handling)\n        * [Original `node-postgres` error](#original-node-postgres-error)\n        * [Handling `BackendTerminatedError`](#handling-backendterminatederror)\n        * [Handling `CheckIntegrityConstraintViolationError`](#handling-checkintegrityconstraintviolationerror)\n        * [Handling `ConnectionError`](#handling-connectionerror)\n        * [Handling `DataIntegrityError`](#handling-dataintegrityerror)\n        * [Handling `ForeignKeyIntegrityConstraintViolationError`](#handling-foreignkeyintegrityconstraintviolationerror)\n        * [Handling `NotFoundError`](#handling-notfounderror)\n        * [Handling `NotNullIntegrityConstraintViolationError`](#handling-notnullintegrityconstraintviolationerror)\n        * [Handling `StatementCancelledError`](#handling-statementcancellederror)\n        * [Handling `StatementTimeoutError`](#handling-statementtimeouterror)\n        * [Handling `UniqueIntegrityConstraintViolationError`](#handling-uniqueintegrityconstraintviolationerror)\n        * [Handling `TupleMovedToAnotherPartitionError`](#handling-tuplemovedtoanotherpartitionerror)\n    * [Migrations](#migrations)\n    * [Types](#types)\n    * [Debugging](#debugging)\n        * [Logging](#logging)\n        * [Capture stack trace](#capture-stack-trace)\n    * [Syntax Highlighting](#syntax-highlighting)\n        * [Atom Syntax Highlighting Plugin](#atom-syntax-highlighting-plugin)\n        * [VS Code Syntax Highlighting Extension](#vs-code-syntax-highlighting-extension)\n    * [Development](#development)\n\n\n## About Slonik\n\n### Battle-Tested\n\nSlonik began as a collection of utilities designed for working with [`node-postgres`](https://github.com/brianc/node-postgres). It continues to use `node-postgres` driver as it provides a robust foundation for interacting with PostgreSQL. However, what once was a collection of utilities has since grown into a framework that abstracts repeating code patterns, protects against unsafe connection handling and value interpolation, and provides a rich debugging experience.\n\nSlonik has been [battle-tested](https://medium.com/@gajus/lessons-learned-scaling-postgresql-database-to-1-2bn-records-month-edc5449b3067) with large data volumes and queries ranging from simple CRUD operations to data-warehousing needs.\n\n### Origin of the name\n\n![Slonik](./.README/postgresql-elephant.png)\n\nThe name of the elephant depicted in the official PostgreSQL logo is Slonik. The name itself is derived from the Russian word for \"little elephant\".\n\nRead: [The History of Slonik, the PostgreSQL Elephant Logo](https://learnsql.com/blog/the-history-of-slonik-the-postgresql-elephant-logo/)\n\n### Repeating code patterns and type safety\n\nAmong the primary reasons for developing Slonik, was the motivation to reduce the repeating code patterns and add a level of type safety. This is primarily achieved through the methods such as `one`, `many`, etc. But what is the issue? It is best illustrated with an example.\n\nSuppose the requirement is to write a method that retrieves a resource ID given values defining (what we assume to be) a unique constraint. If we did not have the aforementioned helper methods available, then it would need to be written as:\n\n```ts\nimport {\n  sql,\n  type DatabaseConnection\n} from 'slonik';\n\ntype DatabaseRecordIdType = number;\n\nconst getFooIdByBar = async (connection: DatabaseConnection, bar: string): Promise<DatabaseRecordIdType> => {\n  const fooResult = await connection.query(sql.typeAlias('id')`\n    SELECT id\n    FROM foo\n    WHERE bar = ${bar}\n  `);\n\n  if (fooResult.rowCount === 0) {\n    throw new Error('Resource not found.');\n  }\n\n  if (fooResult.rowCount > 1) {\n    throw new Error('Data integrity constraint violation.');\n  }\n\n  return fooResult[0].id;\n};\n```\n\n`oneFirst` method abstracts all of the above logic into:\n\n```ts\nconst getFooIdByBar = (connection: DatabaseConnection, bar: string): Promise<DatabaseRecordIdType> => {\n  return connection.oneFirst(sql.typeAlias('id')`\n    SELECT id\n    FROM foo\n    WHERE bar = ${bar}\n  `);\n};\n```\n\n`oneFirst` throws:\n\n* `NotFoundError` if query returns no rows\n* `DataIntegrityError` if query returns multiple rows\n* `DataIntegrityError` if query returns multiple columns\n\nIn the absence of helper methods, the overhead of repeating code becomes particularly visible when writing routines where multiple queries depend on the proceeding query results. Using methods with inbuilt assertions ensures that in case of an error, the error points to the source of the problem. In contrast, unless assertions for all possible outcomes are typed out as in the previous example, the unexpected result of the query will be fed to the next operation. If you are lucky, the next operation will simply break; if you are unlucky, you are risking data corruption and hard-to-locate bugs.\n\nFurthermore, using methods that guarantee the shape of the results allows us to leverage static type checking and catch some of the errors even before executing the code, e.g.\n\n```ts\nconst fooId = await connection.many(sql.typeAlias('id')`\n  SELECT id\n  FROM foo\n  WHERE bar = ${bar}\n`);\n\nawait connection.query(sql.typeAlias('void')`\n  DELETE FROM baz\n  WHERE foo_id = ${fooId}\n`);\n```\n\nStatic type check of the above example will produce a warning as the `fooId` is guaranteed to be an array and binding of the last query is expecting a primitive value.\n\n### Protecting against unsafe connection handling\n\nSlonik only allows to check out a connection for the duration of the promise routine supplied to the `pool#connect()` method.\n\nThe primary reason for implementing _only_ this connection pooling method is because the alternative is inherently unsafe, e.g.\n\n```ts\n// This is not valid Slonik API\n\nconst main = async () => {\n  const connection = await pool.connect();\n\n  await connection.query(sql.typeAlias('foo')`SELECT foo()`);\n\n  await connection.release();\n};\n```\n\nIn this example, if `SELECT foo()` produces an error, then connection is never released, i.e. the connection hangs indefinitely.\n\nA fix to the above is to ensure that `connection#release()` is always called, i.e.\n\n```ts\n// This is not valid Slonik API\n\nconst main = async () => {\n  const connection = await pool.connect();\n\n  let lastExecutionResult;\n\n  try {\n    lastExecutionResult = await connection.query(sql.typeAlias('foo')`SELECT foo()`);\n  } finally {\n    await connection.release();\n  }\n\n  return lastExecutionResult;\n};\n```\n\nSlonik abstracts the latter pattern into `pool#connect()` method.\n\n```ts\nconst main = () => {\n  return pool.connect((connection) => {\n    return connection.query(sql.typeAlias('foo')`SELECT foo()`);\n  });\n};\n```\n\nUsing this pattern, we guarantee that connection is always released as soon as the `connect()` routine resolves or is rejected.\n\n#### Resetting connection state\n\nAfter the connection is released, Slonik resets the connection state. This is to prevent connection state from leaking between queries.\n\nThe default behaviour is to execute `DISCARD ALL` command. This behaviour can be adjusted by configuring `resetConnection` routine, e.g.\n\n```ts\nimport {\n  createPool,\n  sql,\n} from 'slonik';\nimport {\n  createPgDriverFactory,\n} from '@slonik/pg-driver';\n\nconst pool = createPool('postgres://', {\n  driverFactory: createPgDriverFactory(),\n  resetConnection: async (connection) => {\n    await connection.query('DISCARD ALL');\n  }\n});\n```\n\n> [!NOTE]\n> Resetting a connection is a heavy operation. Depending on the application requirements, it may make sense to disable connection reset, e.g.\n> ```ts\n> import {\n>   createPool,\n> } from 'slonik';\n> import {\n>   createPgDriverFactory,\n> } from '@slonik/pg-driver';\n>\n> const pool = createPool('postgres://', {\n>   driverFactory: createPgDriverFactory(),\n>   resetConnection: async () => {}\n> });\n\n\n### Protecting against unsafe transaction handling\n\nJust like in the [unsafe connection handling](#protecting-against-unsafe-connection-handling) example, Slonik only allows to create a transaction for the duration of the promise routine supplied to the `connection#transaction()` method.\n\n```ts\nconnection.transaction(async (transactionConnection) => {\n  await transactionConnection.query(sql.typeAlias('void')`INSERT INTO foo (bar) VALUES ('baz')`);\n  await transactionConnection.query(sql.typeAlias('void')`INSERT INTO qux (quux) VALUES ('quuz')`);\n});\n```\n\nThis pattern ensures that the transaction is either committed or aborted the moment the promise is either resolved or rejected.\n\n> [!NOTE]\n> If you receive an error `UnexpectedForeignConnectionError`, then you are trying to execute a query using a connection that is not associated with the transaction. This error is thrown to prevent accidental unsafe transaction handling, e.g.\n> ```ts\n> pool.transaction(async (transactionConnection) => {\n>   await pool.query(sql.typeAlias('void')`INSERT INTO foo (bar) VALUES ('baz')`);\n> });\n> ```\n> In this example, the query is executed using the `connection` that is not associated with the transaction. This is unsafe because the query is not part of the transaction and will not be rolled back if the transaction is aborted.\n> This behaviour can be disabled by setting `dangerouslyAllowForeignConnections` to `true` in the `ClientConfiguration`.\n\n### Protecting against unsafe value interpolation\n\n[SQL injections](https://en.wikipedia.org/wiki/SQL_injection) are one of the most well known attack vectors. Some of the [biggest data leaks](https://en.wikipedia.org/wiki/SQL_injection#Examples) were the consequence of improper user-input handling. In general, SQL injections are easily preventable by using parameterization and by restricting database permissions, e.g.\n\n```ts\n// This is not valid Slonik API\n\nconnection.query('SELECT $1', [\n  userInput\n]);\n```\n\nIn this example, the query text (`SELECT $1`) and parameters (`userInput`) are passed separately to the PostgreSQL server where the parameters are safely substituted into the query. This is a safe way to execute a query using user-input.\n\nThe vulnerabilities appear when developers cut corners or when they do not know about parameterization, i.e. there is a risk that someone will instead write:\n\n```ts\n// This is not valid Slonik API\n\nconnection.query('SELECT \\'' + userInput + '\\'');\n```\n\nAs evident by the history of the data leaks, this happens more often than anyone would like to admit. This security vulnerability is especially a significant risk in Node.js community, where a predominant number of developers are coming from frontend and have not had training working with RDBMSes. Therefore, one of the key selling points of Slonik is that it adds multiple layers of protection to prevent unsafe handling of user input.\n\nTo begin with, Slonik does not allow running plain-text queries.\n\n```ts\n// This is not valid Slonik API\n\nconnection.query('SELECT 1');\n```\n\nThe above invocation would produce an error:\n\n> TypeError: Query must be constructed using `sql` tagged template literal.\n\nThis means that the only way to run a query is by constructing it using [`sql` tagged template literal](https://github.com/gajus/slonik#value-placeholders-tagged-template-literals), e.g.\n\n```ts\nconnection.query(sql.unsafe`SELECT 1`);\n```\n\nTo add a parameter to the query, user must use [template literal placeholders](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Template_literals#Description), e.g.\n\n```ts\nconnection.query(sql.unsafe`SELECT ${userInput}`);\n```\n\nSlonik takes over from here and constructs a query with value bindings, and sends the resulting query text and parameters to PostgreSQL. There is no other way of passing parameters to the query – this adds a strong layer of protection against accidental unsafe user input handling due to limited knowledge of the SQL client API.\n\nAs Slonik restricts user's ability to generate and execute dynamic SQL, it provides helper functions used to generate fragments of the query and the corresponding value bindings, e.g. [`sql.identifier`](#sqlidentifier), [`sql.join`](#sqljoin) and [`sql.unnest`](#sqlunnest). These methods generate tokens that the query executor interprets to construct a safe query, e.g.\n\n```ts\nconnection.query(sql.unsafe`\n  SELECT ${sql.identifier(['foo', 'a'])}\n  FROM (\n    VALUES\n    (\n      ${sql.join(\n        [\n          sql.join(['a1', 'b1', 'c1'], sql.fragment`, `),\n          sql.join(['a2', 'b2', 'c2'], sql.fragment`, `)\n        ],\n        sql.fragment`), (`\n      )}\n    )\n  ) foo(a, b, c)\n  WHERE foo.b IN (${sql.join(['c1', 'a2'], sql.fragment`, `)})\n`);\n```\n\nThis (contrived) example generates a query equivalent to:\n\n```sql\nSELECT \"foo\".\"a\"\nFROM (\n  VALUES\n    ($1, $2, $3),\n    ($4, $5, $6)\n) foo(a, b, c)\nWHERE foo.b IN ($7, $8)\n```\n\nThis query is executed with the parameters provided by the user.\n\nTo sum up, Slonik is designed to prevent accidental creation of queries vulnerable to SQL injections.\n\n\n## Documentation\n\n## Usage\n\n### Connection URI\n\nSlonik client is configured using a custom connection URI (DSN).\n\n```tson\npostgresql://[user[:password]@][host[:port]][/database name][?name=value[&...]]\n```\n\nSupported parameters:\n\n|Name|Meaning|Default|\n|---|---|---|\n|`application_name`|[`application_name`](https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNECT-APPLICATION-NAME)||\n|`options`|[`options`](https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNECT-OPTIONS)||\n|`sslcert`|The location of the [certificate](https://www.postgresql.org/docs/current/libpq-ssl.html#LIBPQ-SSL-CLIENTCERT).|-|\n|`sslkey`|The location of the [certificate](https://www.postgresql.org/docs/current/libpq-ssl.html#LIBPQ-SSL-CLIENTCERT).|-|\n|`sslmode`|[`sslmode`](https://www.postgresql.org/docs/current/libpq-ssl.html#LIBPQ-SSL-PROTECTION) (supported values: `disable`, `no-verify`, `require`)|`disable`|\n|`sslrootcert`|The location of the [root certificate]((https://www.postgresql.org/docs/current/libpq-ssl.html#LIBQ-SSL-CERTIFICATES)) file.||\n\nNote that unless listed above, other [libpq parameters](https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-PARAMKEYWORDS) are not supported.\n\nExamples of valid DSNs:\n\n```text\npostgresql://\npostgresql://localhost\npostgresql://localhost:5432\npostgresql://localhost/foo\npostgresql://foo@localhost\npostgresql://foo:bar@localhost\npostgresql://foo@localhost/bar?application_name=baz\n```\n\nUnix-domain socket connection is chosen if the host part is either empty or looks like an absolute path name.\n\n```text\npostgresql:///dbname?host=/var/lib/postgresql\npostgresql://%2Fvar%2Flib%2Fpostgresql/dbname\n```\n\nOther configurations are available through the [`clientConfiguration` parameter](https://github.com/gajus/slonik#api).\n\n### Create connection\n\nUse `createPool` to create a connection pool, e.g.\n\n```ts\nimport {\n  createPool,\n} from 'slonik';\nimport {\n  createPgDriverFactory,\n} from '@slonik/pg-driver';\n\nconst pool = await createPool('postgres://', {\n  driverFactory: createPgDriverFactory(),\n});\n```\n\n> **Note:** If you are new to Slonik, then you should read [Integrating Slonik with Express.js](https://dev.to/gajus/integrating-slonik-with-expressjs-33kn).\n\nInstance of Slonik connection pool can be then used to create a new connection, e.g.\n\n```ts\npool.connect(async (connection) => {\n  await connection.query(sql.typeAlias('id')`SELECT 1 AS id`);\n});\n```\n\nThe connection will be kept alive until the promise resolves (the result of the method supplied to `connect()`).\n\nRefer to [query method](#query-methods) documentation to learn about the connection methods.\n\nIf you do not require having a persistent connection to the same backend, then you can directly use `pool` to run queries, e.g.\n\n```ts\npool.query(sql.typeAlias('id')`SELECT 1 AS id`);\n```\n\nBeware that in the latter example, the connection picked to execute the query is a random connection from the connection pool, i.e. using the latter method (without explicit `connect()`) does not guarantee that multiple queries will refer to the same backend.\n\n### End connection pool\n\nUse `pool.end()` to end idle connections and prevent creation of new connections.\n\nThe result of `pool.end()` is a promise that is resolved when all connections are ended.\n\n```ts\nimport {\n  createPool,\n  sql,\n} from 'slonik';\nimport {\n  createPgDriverFactory,\n} from '@slonik/pg-driver';\n\nconst pool = await createPool('postgres://', {\n  driverFactory: createPgDriverFactory(),\n});\n\nconst main = async () => {\n  await pool.query(sql.typeAlias('id')`\n    SELECT 1 AS id\n  `);\n\n  await pool.end();\n};\n\nmain();\n```\n\nNote: `pool.end()` does not terminate active connections/ transactions.\n\n### Describing the current state of the connection pool\n\nUse `pool.state()` to find out if pool is alive and how many connections are active and idle, and how many clients are waiting for a connection.\n\n```ts\nimport {\n  createPool,\n  sql,\n} from 'slonik';\nimport {\n  createPgDriverFactory,\n} from '@slonik/pg-driver';\n\nconst pool = await createPool('postgres://', {\n  driverFactory: createPgDriverFactory(),\n});\n\nconst main = async () => {\n  pool.state();\n\n  // {\n  //   acquiredConnections: 0,\n  //   idleConnections: 0,\n  //   pendingDestroyConnections: 0,\n  //   pendingReleaseConnections: 0,\n  //   state: 'ACTIVE',\n  //   waitingClients: 0,\n  // }\n\n  await pool.connect(() => {\n    pool.state();\n\n    // {\n    //   acquiredConnections: 1,\n    //   idleConnections: 0,\n    //   pendingDestroyConnections: 0,\n    //   pendingReleaseConnections: 0,\n    //   state: 'ACTIVE',\n    //   waitingClients: 0,\n    // }\n  });\n\n  pool.state();\n\n  // {\n  //   acquiredConnections: 0,\n  //   idleConnections: 1,\n  //   pendingDestroyConnections: 0,\n  //   pendingReleaseConnections: 0,\n  //   state: 'ACTIVE',\n  //   waitingClients: 0,\n  // }\n\n  await pool.end();\n\n  pool.state();\n\n  // {\n  //   acquiredConnections: 0,\n  //   idleConnections: 0,\n  //   pendingDestroyConnections: 0,\n  //   pendingReleaseConnections: 0,\n  //   state: 'ENDED',\n  //   waitingClients: 0,\n  // }\n};\n\nmain();\n```\n\nNote: `pool.end()` does not terminate active connections/ transactions.\n\n### API\n\n```ts\n/**\n * @param connectionUri PostgreSQL [Connection URI](https://www.postgresql.org/docs/current/libpq-connect.html#LIBPQ-CONNSTRING).\n */\ncreatePool(\n  connectionUri: string,\n  clientConfiguration: ClientConfiguration\n): DatabasePool;\n\n/**\n * @property captureStackTrace Dictates whether to capture stack trace before executing query. Middlewares access stack trace through query execution context. (Default: false)\n * @property connectionRetryLimit Number of times to retry establishing a new connection. (Default: 3)\n * @property connectionTimeout Timeout (in milliseconds) after which an error is raised if connection cannot be established. (Default: 5000)\n * @property dangerouslyAllowForeignConnections Allow using connections that are not associated with the transaction. (Default: false)\n * @property driverFactory Overrides the default DriverFactory. (Default: \"pg\" driver factory)\n * @property gracefulTerminationTimeout Timeout (in milliseconds) that kicks in after a connection with an active query is requested to end. This is the amount of time that is allowed for query to complete before terminating it. (Default: 5000)\n * @property idleInTransactionSessionTimeout Timeout (in milliseconds) after which idle clients are closed. Use 'DISABLE_TIMEOUT' constant to disable the timeout. (Default: 60000)\n * @property idleTimeout Timeout (in milliseconds) after which idle clients are closed. Use 'DISABLE_TIMEOUT' constant to disable the timeout. (Default: 5000)\n * @property interceptors An array of [Slonik interceptors](https://github.com/gajus/slonik#interceptors).\n * @property maximumPoolSize Do not allow more than this many connections. (Default: 10)\n * @property minimumPoolSize Ensure that at least this many connections are available in the pool. (Default: 0)\n * @property queryRetryLimit Number of times a query failing with Transaction Rollback class error, that doesn't belong to a transaction, is retried. (Default: 5)\n * @property ssl [tls.connect options](https://nodejs.org/api/tls.html#tlsconnectoptions-callback)\n * @property statementTimeout Timeout (in milliseconds) after which database is instructed to abort the query. Use 'DISABLE_TIMEOUT' constant to disable the timeout. (Default: 60000)\n * @property transactionRetryLimit Number of times a transaction failing with Transaction Rollback class error is retried. (Default: 5)\n * @property typeParsers An array of [Slonik type parsers](https://github.com/gajus/slonik#type-parsers).\n */\ntype ClientConfiguration = {\n  captureStackTrace?: boolean,\n  connectionRetryLimit?: number,\n  connectionTimeout?: number | 'DISABLE_TIMEOUT',\n  driverFactory?: DriverFactory,\n  gracefulTerminationTimeout?: number,\n  idleInTransactionSessionTimeout?: number | 'DISABLE_TIMEOUT',\n  idleTimeout?: number | 'DISABLE_TIMEOUT',\n  interceptors?: Interceptor[],\n  maximumPoolSize?: number,\n  maximumPoolSize?: number,\n  queryRetryLimit?: number,\n  ssl?: Parameters<tls.connect>[0],\n  statementTimeout?: number | 'DISABLE_TIMEOUT',\n  transactionRetryLimit?: number,\n  typeParsers?: TypeParser[],\n};\n```\n\nExample:\n\n```ts\nimport {\n  createPool\n} from 'slonik';\nimport {\n  createPgDriverFactory,\n} from '@slonik/pg-driver';\n\nconst pool = await createPool('postgres://', {\n  driverFactory: createPgDriverFactory(),\n});\n\nawait pool.query(sql.typeAlias('id')`SELECT 1 AS id`);\n```\n\n### Default configuration\n\n#### Default interceptors\n\nNone.\n\nCheck out [`slonik-interceptor-preset`](https://github.com/gajus/slonik-interceptor-preset) for an opinionated collection of interceptors.\n\n#### Default type parsers\n\nThese type parsers are enabled by default:\n\n|Type name|Implementation|\n|---|---|\n|`date`|Produces a literal date as a string (format: YYYY-MM-DD).|\n|`int8`|Produces an integer.|\n|`interval`|Produces interval in seconds (integer).|\n|`numeric`|Produces a float.|\n|`timestamp`|Produces a unix timestamp (in milliseconds).|\n|`timestamptz`|Produces a unix timestamp (in milliseconds).|\n\nTo disable the default type parsers, pass an empty array, e.g.\n\n```ts\ncreatePool('postgres://', {\n  typeParsers: []\n});\n```\n\nYou can create default type parser collection using `createTypeParserPreset`, e.g.\n\n```ts\nimport {\n  createTypeParserPreset\n} from 'slonik';\nimport {\n  createPgDriverFactory,\n} from '@slonik/pg-driver';\n\ncreatePool('postgres://', {\n  driverFactory: createPgDriverFactory(),\n  typeParsers: [\n    ...createTypeParserPreset()\n  ]\n});\n```\n\n#### Default timeouts\n\nThere are 4 types of configurable timeouts:\n\n|Configuration|Description|Default|\n|---|---|---|\n|`connectionTimeout`|Timeout (in milliseconds) after which an error is raised if connection cannot be established.|5000|\n|`idleInTransactionSessionTimeout`|Timeout (in milliseconds) after which idle clients are closed. Use 'DISABLE_TIMEOUT' constant to disable the timeout.|60000|\n|`idleTimeout`|Timeout (in milliseconds) after which idle clients are closed. Use 'DISABLE_TIMEOUT' constant to disable the timeout.|5000|\n|`statementTimeout`|Timeout (in milliseconds) after which database is instructed to abort the query. Use 'DISABLE_TIMEOUT' constant to disable the timeout.|60000|\n\nSlonik sets aggressive timeouts by default. These timeouts are designed to provide safe interface to the database. These timeouts might not work for all programs. If your program has long running statements, consider adjusting timeouts just for those statements instead of changing the defaults.\n\n#### Known limitations of using pg-native with Slonik\n\n`pg-native` is not officially supported by Slonik.\n\n### Checking out a client from the connection pool\n\nSlonik only allows to check out a connection for the duration of the promise routine supplied to the `pool#connect()` method.\n\n```ts\nimport {\n  createPool,\n} from 'slonik';\nimport {\n  createPgDriverFactory,\n} from '@slonik/pg-driver';\n\nconst pool = await createPool('postgres://localhost', {\n  driverFactory: createPgDriverFactory(),\n});\n\nconst result = await pool.connect(async (connection) => {\n  await connection.query(sql.typeAlias('id')`SELECT 1 AS id`);\n  await connection.query(sql.typeAlias('id')`SELECT 2 AS id`);\n\n  return 'foo';\n});\n\nresult;\n// 'foo'\n\n```\n\nConnection is released back to the pool after the promise produced by the function supplied to `connect()` method is either resolved or rejected.\n\nRead: [Protecting against unsafe connection handling](#protecting-against-unsafe-connection-handling).\n\n### Events\n\nThe `DatabasePool` extends `DatabasePoolEventEmitter` and exposes the following events:\n\n- `error`: `(error: SlonikError) => void` – emitted for all errors that happen within the pool.\n\n```ts\nimport {\n  createPool,\n  type DatabasePoolEventEmitter,\n} from 'slonik';\nimport {\n  createPgDriverFactory,\n} from '@slonik/pg-driver';\n\nconst pool = await createPool('postgres://localhost', {\n  driverFactory: createPgDriverFactory(),\n});\n\npool.on('error', (error) => {\n  console.error(error);\n});\n```\n\n## How are they different?\n\n### <code>pg</code> vs <code>slonik</code>\n\n[`pg`](https://github.com/brianc/node-postgres) is built intentionally to provide unopinionated, minimal abstraction and encourages use of other modules to implement convenience methods.\n\nSlonik is built on top of `pg` and it provides convenience methods for [building queries](#value-placeholders) and [querying data](#query-methods).\n\nWork on `pg` began on [Tue Sep 28 22:09:21 2010](https://github.com/brianc/node-postgres/commit/cf637b08b79ef93d9a8b9dd2d25858aa7e9f9bdc). It is authored by [Brian Carlson](https://github.com/brianc).\n\n### <code>pg-promise</code> vs <code>slonik</code>\n\nAs the name suggests, [`pg-promise`](https://github.com/vitaly-t/pg-promise) was originally built to enable use of `pg` module with promises (at the time, `pg` only supported Continuation Passing Style (CPS), i.e. callbacks). Since then `pg-promise` added features for connection/ transaction handling, a powerful query-formatting engine and a declarative approach to handling query results.\n\nThe primary difference between Slonik and `pg-promise`:\n\n* Slonik does not allow to execute raw text queries. Slonik queries can only be constructed using [`sql` tagged template literals](#value-placeholders-tagged-template-literals). This design [protects against unsafe value interpolation](#protecting-against-unsafe-value-interpolation).\n* Slonik implements [interceptor API](#interceptors) (middleware). Middlewares allow to modify connection handling, override queries and modify the query results. Example Slonik interceptors include [field name transformation](https://github.com/gajus/slonik-interceptor-field-name-transformation), [query normalization](https://github.com/gajus/slonik-interceptor-query-normalisation) and [query benchmarking](https://github.com/gajus/slonik-interceptor-query-benchmarking).\n\nNote: Author of `pg-promise` has [objected to the above claims](https://github.com/gajus/slonik/issues/122). I have removed a difference that was clearly wrong. I maintain that the above two differences remain valid differences: even though `pg-promise` might have substitute functionality for variable interpolation and interceptors, it implements them in a way that does not provide the same benefits that Slonik provides, namely: guaranteed security and support for extending library functionality using multiple plugins.\n\nOther differences are primarily in how the equivalent features are implemented, e.g.\n\n|`pg-promise`|Slonik|\n|---|---|\n|[Custom type formatting](https://github.com/vitaly-t/pg-promise#custom-type-formatting).|Not available in Slonik. The current proposal is to create an interceptor that would have access to the [query fragment constructor](https://github.com/gajus/slonik/issues/21).|\n|[formatting filters](https://github.com/vitaly-t/pg-promise#nested-named-parameters)|Slonik tagged template [value expressions](https://github.com/gajus/slonik#value-placeholders) to construct query fragments and bind parameter values.|\n|[Query files](https://github.com/vitaly-t/pg-promise#query-files).|Use [`slonik-sql-tag-raw`](https://github.com/gajus/slonik-sql-tag-raw).|\n|[Tasks](https://github.com/vitaly-t/pg-promise#tasks).|Use [`pool.connect`](https://github.com/gajus/slonik#create-connection).|\n|Configurable transactions.|Not available in Slonik. Track [this issue](https://github.com/gajus/slonik/issues/30).|\n|Events.|Use [interceptors](https://github.com/gajus/slonik#interceptors).|\n\nWhen weighting which abstraction to use, it would be unfair not to consider that `pg-promise` is a mature project with dozens of contributors. Meanwhile, Slonik is a young project (started in March 2017) that until recently was developed without active community input. However, if you do support the unique features that Slonik adds, the opinionated API design, and are not afraid of adopting a technology in its young days, then I warmly invite you to adopt Slonik and become a contributor to what I intend to make the standard PostgreSQL client in the Node.js community.\n\nWork on `pg-promise` began [Wed Mar 4 02:00:34 2015](https://github.com/vitaly-t/pg-promise/commit/78fb80f638e7f28b301f75576701536d6b638f31). It is authored by [Vitaly Tomilov](https://github.com/vitaly-t).\n\n### <code>postgres</code> vs <code>slonik</code>\n\n[`postgres`](https://github.com/porsager/postgres) recently gained in popularity due to its performance benefits when compared to `pg`. In terms of API, it has a pretty bare-bones API that heavily relies on using ES6 tagged templates and abstracts away many concepts of connection pool handling. While `postgres` API might be preferred by some, projects that already use `pg` may have difficulty migrating.\n\n## Type parsers\n\nType parsers describe how to parse PostgreSQL types.\n\n```ts\ntype TypeParser = {\n  name: string,\n  parse: (value: string) => *\n};\n```\n\nExample:\n\n```ts\n{\n  name: 'int8',\n  parse: (value) => {\n    return parseInt(value, 10);\n  }\n}\n```\n\nNote: Unlike [`pg-types`](https://github.com/brianc/node-pg-types) that uses OIDs to identify types, Slonik identifies types using their names.\n\nUse this query to find type names:\n\n```sql\nSELECT typname\nFROM pg_type\nORDER BY typname ASC\n```\n\nType parsers are configured using [`typeParsers` client configuration](#api).\n\nRead: [Default type parsers](#default-type-parsers).\n\n### Built-in type parsers\n\n|Type name|Implementation|Factory function name|\n|---|---|---|\n|`date`|Produces a literal date as a string (format: YYYY-MM-DD).|`createDateTypeParser`|\n|`int8`|Produces an integer.|`createBigintTypeParser`|\n|`interval`|Produces interval in seconds (integer).|`createIntervalTypeParser`|\n|`numeric`|Produces a float.|`createNumericTypeParser`|\n|`timestamp`|Produces a unix timestamp (in milliseconds).|`createTimestampTypeParser`|\n|`timestamptz`|Produces a unix timestamp (in milliseconds).|`createTimestampWithTimeZoneTypeParser`|\n\nBuilt-in type parsers can be created using the exported factory functions, e.g.\n\n```ts\nimport {\n  createTimestampTypeParser\n} from 'slonik';\n\ncreateTimestampTypeParser();\n\n// {\n//   name: 'timestamp',\n//   parse: (value) => {\n//     return value === null ? value : Date.parse(value + ' UTC');\n//   }\n// }\n```\n\n\n## Interceptors\n\nFunctionality can be added to Slonik client by adding interceptors (middleware).\n\nInterceptors are configured using [client configuration](#api), e.g.\n\n```ts\nimport {\n  createPool\n} from 'slonik';\nimport {\n  createPgDriverFactory,\n} from '@slonik/pg-driver';\n\nconst interceptors = [];\n\nconst connection = await createPool('postgres://', {\n  driverFactory: createPgDriverFactory(),\n  interceptors\n});\n```\n\nInterceptors are executed in the order they are added.\n\nRead: [Default interceptors](#default-interceptors).\n\n### Interceptor methods\n\nInterceptor is an object that implements methods that can change the behaviour of the database client at different stages of the connection life-cycle\n\n```ts\ntype Interceptor = {\n  afterPoolConnection?: (\n    connectionContext: ConnectionContext,\n    connection: DatabasePoolConnection\n  ) => MaybePromise<null>,\n  afterQueryExecution?: (\n    queryContext: QueryContext,\n    query: Query,\n    result: QueryResult<QueryResultRow>\n  ) => MaybePromise<QueryResult<QueryResultRow>>,\n  beforePoolConnection?: (\n    connectionContext: ConnectionContext\n  ) => MaybePromise<?DatabasePool>,\n  beforePoolConnectionRelease?: (\n    connectionContext: ConnectionContext,\n    connection: DatabasePoolConnection\n  ) => MaybePromise<null>,\n  beforeQueryExecution?: (\n    queryContext: QueryContext,\n    query: Query\n  ) => MaybePromise<QueryResult<QueryResultRow>> | MaybePromise<null>,\n  beforeQueryResult?: (\n    queryContext: QueryContext,\n    query: Query,\n    result: QueryResult<QueryResultRow>\n  ) => MaybePromise<null>,\n  beforeTransformQuery?: (\n    queryContext: QueryContext,\n    query: Query\n  ) => MaybePromise<null>,\n  queryExecutionError?: (\n    queryContext: QueryContext,\n    query: Query,\n    error: SlonikError\n  ) => MaybePromise<null>,\n  transformQuery?: (\n    queryContext: QueryContext,\n    query: Query\n  ) => Query,\n  transformRow?: (\n    queryContext: QueryContext,\n    query: Query,\n    row: QueryResultRow,\n    fields: Field[],\n  ) => MaybePromise<QueryResultRow>\n};\n```\n\n#### <code>afterPoolConnection</code>\n\nExecuted after a connection is acquired from the connection pool (or a new connection is created), e.g.\n\n```ts\nconst pool = await createPool('postgres://');\n\n// Interceptor is executed here. ↓\npool.connect();\n```\n\n#### <code>afterQueryExecution</code>\n\nExecuted after query has been executed and before rows were transformed using `transformRow`.\n\nNote: When query is executed using `stream`, then `afterQuery` is called with empty result set.\n\n#### <code>beforeQueryExecution</code>\n\nThis function can optionally return a direct result of the query which will cause the actual query never to be executed.\n\n#### <code>beforeQueryResult</code>\n\nExecuted just before the result is returned to the client.\n\nUse this method to capture the result that will be returned to the client.\n\n#### <code>beforeTransformQuery</code>\n\nExecuted before `transformQuery`. Use this interceptor to capture the original query (e.g. for logging purposes).\n\n#### <code>beforePoolConnection</code>\n\nExecuted before connection is created.\n\nThis function can optionally return a pool to another database, causing a connection to be made to the new pool.\n\n#### <code>beforePoolConnectionRelease</code>\n\nExecuted before connection is released back to the connection pool, e.g.\n\n```ts\nconst pool = await createPool('postgres://');\n\npool.connect(async () => {\n  await 1;\n\n  // Interceptor is executed here. ↓\n});\n```\n\n#### <code>queryExecutionError</code>\n\nExecuted if query execution produces an error.\n\nUse `queryExecutionError` to log and/ or re-throw another error.\n\n#### <code>transformQuery</code>\n\nExecuted before `beforeQueryExecution`.\n\nTransforms query.\n\n#### <code>transformRow</code>\n\nExecuted for each row.\n\nTransforms row.\n\nUse `transformRow` to modify the query result.\n\n### Community interceptors\n\n|Name|Description|\n|---|---|\n|[`slonik-interceptor-field-name-transformation`](https://github.com/gajus/slonik-interceptor-field-name-transformation)|Transforms Slonik query result field names.|\n|[`slonik-interceptor-query-benchmarking`](https://github.com/gajus/slonik-interceptor-query-benchmarking)|Benchmarks Slonik queries.|\n|[`slonik-interceptor-query-cache`](https://github.com/gajus/slonik-interceptor-query-cache)|Caches Slonik queries.|\n|[`slonik-interceptor-query-logging`](https://github.com/gajus/slonik-interceptor-query-logging)|Logs Slonik queries.|\n|[`slonik-interceptor-query-normalisation`](https://github.com/gajus/slonik-interceptor-query-normalisation)|Normalises Slonik queries.|\n\nCheck out [`slonik-interceptor-preset`](https://github.com/gajus/slonik-interceptor-preset) for an opinionated collection of interceptors.\n\n\n## Recipes\n\n### Inserting large number of rows\n\nUse [`sql.unnest`](#sqlunnest) to create a set of rows using `unnest`. Using the `unnest` approach requires only 1 variable per every column; values for each column are passed as an array, e.g.\n\n```ts\nawait connection.query(sql.unsafe`\n  INSERT INTO foo (bar, baz, qux)\n  SELECT *\n  FROM ${sql.unnest(\n    [\n      [1, 2, 3],\n      [4, 5, 6]\n    ],\n    [\n      'int4',\n      'int4',\n      'int4'\n    ]\n  )}\n`);\n```\n\nProduces:\n\n```ts\n{\n  sql: 'INSERT INTO foo (bar, baz, qux) SELECT * FROM unnest($1::int4[], $2::int4[], $3::int4[])',\n  values: [\n    [\n      1,\n      4\n    ],\n    [\n      2,\n      5\n    ],\n    [\n      3,\n      6\n    ]\n  ]\n}\n```\n\nInserting data this way ensures that the query is stable and reduces the amount of time it takes to parse the query.\n\n### Routing queries to different connections\n\nA typical load balancing requirement is to route all \"logical\" read-only queries to a read-only instance. This requirement can be implemented in 2 ways:\n\n1. Create two instances of Slonik (read-write and read-only) and pass them around the application as needed.\n1. Use `beforePoolConnection` middleware to assign query to a connection pool based on the query itself.\n\nFirst option is preferable as it is the most explicit. However, it also has the most overhead to implement.\n\nOn the other hand, `beforePoolConnection` makes it easy to route based on conventions, but carries a greater risk of accidentally routing queries with side-effects to a read-only instance.\n\nThe first option is self-explanatory to implement, but this recipe demonstrates my convention for using `beforePoolConnection` to route queries.\n\nNote: How you determine which queries are safe to route to a read-only instance is outside of scope for this documentation.\n\nNote: `beforePoolConnection` only works for connections initiated by a query, i.e. `pool#query` and not `pool#connect()`.\n\nNote: `pool#transaction` triggers `beforePoolConnection` but has no `query`.\n\nNote: This particular implementation does not handle [`SELECT INTO`](https://www.postgresql.org/docs/current/sql-selectinto.html).\n\n```ts\nconst readOnlyPool = await createPool('postgres://read-only');\n\nconst pool = await createPool('postgres://main', {\n  interceptors: [\n    {\n      beforePoolConnection: (connectionContext) => {\n        if (!connectionContext.query?.sql.trim().startsWith('SELECT ')) {\n          // Returning null falls back to using the DatabasePool from which the query originates.\n          return null;\n        }\n\n        // This is a convention for the edge-cases where a SELECT query includes a volatile function.\n        // Adding a @volatile comment anywhere into the query bypasses the read-only route, e.g.\n        // sql.unsafe`\n        //   /* @volatile */\n        //   SELECT write_log()\n        // `\n        if (connectionContext.query?.sql.includes('@volatile')) {\n          return null;\n        }\n\n        // Returning an instance of DatabasePool will attempt to run the query using the other connection pool.\n        // Note that all other interceptors of the pool that the query originated from are short-circuited.\n        return readOnlyPool;\n      }\n    }\n  ]\n});\n\n// This query will use `postgres://read-only` connection.\npool.query(sql.typeAlias('id')`SELECT 1 AS id`);\n\n// This query will use `postgres://main` connection.\npool.query(sql.typeAlias('id')`UPDATE 1 AS id`);\n```\n\n### Building Utility Statements\n\nParameter symbols only work in optimizable SQL commands (SELECT, INSERT, UPDATE, DELETE, and certain commands containing one of these). In other statement types (generically called utility statements, e.g. ALTER, CREATE, DROP and SET), you must insert values textually even if they are just data values.\n\nIn the context of Slonik, if you are building utility statements you must use query building methods that interpolate values directly into queries:\n\n* [`sql.identifier`](#sql-identifier) – for identifiers.\n* [`sql.literalValue`](#sql-literalvalue) – for values.\n\nExample:\n\n```ts\nawait connection.query(sql.typeAlias('void')`\n  CREATE USER ${sql.identifier(['foo'])}\n  WITH PASSWORD ${sql.literalValue('bar')}\n`);\n```\n\n### Inserting vector data\n\nIf you are using [`pgvector`](https://github.com/pgvector/pgvector) and need to insert vector data, you can use the following helper function:\n\n```ts\nconst vector = (embeddings: number[]) => {\n  return sql.fragment`${sql.array(\n    Array.from(embeddings),\n    sql.fragment`real[]`,\n  )}::vector`;\n};\n```\n\nNow you can use the `vector` helper function to insert vector data:\n\n```ts\nawait connection.query(sql.typeAlias('void')`\n  INSERT INTO embeddings (id, vector)\n  VALUES (1, ${vector(embedding.data)})\n`);\n```\n\nYou can also use the [`pgvector` NPM package](https://github.com/pgvector/pgvector-node/?tab=readme-ov-file#slonik) to achieve the same result.\n\n## Runtime validation\n\nSlonik integrates [zod](https://github.com/colinhacks/zod) to provide runtime query result validation and static type inference.\n\nValidating queries requires to:\n\n1. Add a [result parser interceptor](#result-parser-interceptor) during slonik initiialization\n1. For every query define a Zod [object](https://github.com/colinhacks/zod#objects) and pass it to `sql.type` tagged template ([see below](#example-use-of-sqltype))\n\n### Motivation\n\nBuild-time type safety guarantees that your application will work as expected at the time of the build (assuming that the types are correct in the first place).\n\nThe problem is that once you deploy the application, the database schema might change independently of the codebase. This drift may result in your application behaving in unpredictable and potentially dangerous ways, e.g., imagine if table `product` changed `price` from `numeric` to `text`. Without runtime validation, this would cause a cascade of problems and potential database corruption. Even worse, without runtime checks, this could go unnoticed for a long time.\n\nIn contrast, by using runtime checks, you can ensure that the contract between your codebase and the database is always respected. If there is a breaking change, the application fails with a loud error that is easy to debug.\n\nBy using `zod`, we get the best of both worlds: type safety and runtime checks.\n\n### Result parser interceptor\n\nSlonik works without the interceptor, but it doesn't validate the query results. To validate results, you must implement an interceptor that parses the results.\n\nFor context, when Zod parsing was first introduced to Slonik, it was enabled for all queries by default. However, I eventually realized that the baked-in implementation is not going to suit everyone's needs. For this reason, I decided to take out the built-in interceptor in favor of providing examples for common use cases. What follows is based on the original default implementation.\n\n```ts\nimport {\n  type Interceptor,\n  type QueryResultRow,\n  SchemaValidationError,\n} from \"slonik\";\n\nconst createResultParserInterceptor = (): Interceptor => {\n  return {\n    // If you are not going to transform results using Zod, then you should use `afterQueryExecution` instead.\n    // Future versions of Zod will provide a more efficient parser when parsing without transformations.\n    // You can even combine the two – use `afterQueryExecution` to validate results, and (conditionally)\n    // transform results as needed in `transformRow`.\n    transformRow: async (executionContext, actualQuery, row) => {\n      const { log, resultParser } = executionContext;\n\n      if (!resultParser) {\n        return row;\n      }\n\n      // It is recommended (but not required) to parse async to avoid blocking the event loop during validation\n      const validationResult = await resultParser.safeParseAsync(row);\n\n      if (!validationResult.success) {\n        throw new SchemaValidationError(\n          actualQuery,\n          row,\n          validationResult.error.issues\n        );\n      }\n\n      return validationResult.data as QueryResultRow;\n    },\n  };\n};\n```\n\nTo use it, simply add it as a middleware:\n\n```ts\nimport { createPool } from \"slonik\";\nimport {\n  createPgDriverFactory,\n} from '@slonik/pg-driver';\n\ncreatePool(\"postgresql://\", {\n  driverFactory: createPgDriverFactory(),\n  interceptors: [createResultParserInterceptor()],\n});\n```\n\n### Example use of <code>sql.type</code>\n\nLet's assume that you have a PostgreSQL table `person`:\n\n```sql\nCREATE TABLE \"public\".\"person\" (\n  \"id\" integer GENERATED ALWAYS AS IDENTITY,\n  \"name\" text NOT NULL,\n  PRIMARY KEY (\"id\")\n);\n```\n\nand you want to retrieve all persons in the database, along with their `id` and `name`:\n\n```ts\nconnection.any(sql.unsafe`\n  SELECT id, name\n  FROM person\n`);\n```\n\nWith your knowledge of the database schema, define a zod object:\n\n```ts\nconst personObject = z.object({\n  id: z.number(),\n  name: z.string(),\n});\n```\n\nUpdate your query to use `sql.type` tag and pass `personObject`:\n\n```ts\nconst personQuery = sql.type(personObject)`\n  SELECT id, name\n  FROM person\n`;\n```\n\nFinally, query the database using typed `sql` tagged template:\n\n```ts\nconst persons = await connection.any(personQuery);\n```\n\nWith this information, Slonik guarantees that every member of `persons` is an object that has properties `id` and `name`, which are a non-null `number` and a non-null `string` respectively.\n\n### Performance penalty\n\nIn the context of the network overhead, validation accounts for a tiny amount of the total execution time.\n\nJust to give an idea, in our sample of data, it takes sub 0.1ms to validate 1 row, ~3ms to validate 1,000 and ~25ms to validate 100,000 rows.\n\n### Unknown keys\n\nBy default Zod object schemas strip unknown keys. If you want to disallow unknown keys, you can add [`.strict()`](https://zod.dev/?id=strict) to your schema:  \n\n```ts\nz.object({ foo: z.string() }).strict()\n```\n\nUsing the [recommended parser pattern](#result-parser-interceptor), this will produce a `SchemaValidationError`, when a query result includes unknown keys.\n\nConversely you can allow unknown keys to be passed through by using [`.passthrough()`](https://zod.dev/?id=passthrough):\n\n```ts\nz.object({ foo: z.string() }).passthrough();\n```\n\n_Note_: Using `.passthrough()` is not recommended as it reduces type safety and may lead to unexpected behaviour.\n\n### Handling schema validation errors\n\nIf query produces a row that does not satisfy zod object, then `SchemaValidationError` error is thrown.\n\n`SchemaValidationError` includes properties that describe the query and validation errors:\n\n* `sql` – SQL of the query that produced unexpected row.\n* `row` – row data that did not satisfy the schema.\n* `issues` – array of unmet expectations.\n\nWhenever this error occurs, the same information is also included in the [logs](#logging).\n\nIn most cases, you shouldn't attempt to handle these errors at individual query level – allow to propagate to the top of the application and fix the issue when you become aware of it.\n\nHowever, in cases such as dealing with unstructured data, it might be useful to handle these errors at a query level, e.g.\n\n```ts\nimport {\n  SchemaValidationError\n} from 'slonik';\ntry {\n} catch (error) {\n  if (error instanceof SchemaValidationError) {\n    // Handle scheme validation error\n  }\n}\n```\n\n### Inferring types\n\nYou can infer the TypeScript type of the query result. There are couple of ways of doing it:\n\n```ts\n// Infer using z.infer<typeof yourSchema>\n// https://github.com/colinhacks/zod#type-inference\ntype Person = z.infer<typeof personObject>;\n// from sql tagged template `parser` property\ntype Person = z.infer<\n  personQuery.parser\n>;\n```\n\n### Transforming results\n\nUsing zod [transform](https://github.com/colinhacks/zod#transform) you can refine the result shape and its type, e.g.\n\n```ts\nconst coordinatesType = z.string().transform((subject) => {\n  const [\n    x,\n    y,\n  ] = subject.split(',');\n\n  return {\n    x: Number(x),\n    y: Number(y),\n  };\n});\n\nconst zodObject = z.object({\n  foo: coordinatesType,\n});\n\nconst query = sql.type(zodObject)`SELECT '1,2' as foo`;\n\nconst result = await pool.one(query);\n\nexpectTypeOf(result).toMatchTypeOf<{foo: {x: number, y: number, }, }>();\n\nt.deepEqual(result, {\n  foo: {\n    x: 1,\n    y: 2,\n  },\n});\n```\n\n\n## <code>sql</code> tag\n\n`sql` tag serves two purposes:\n\n* It is used to construct queries with bound parameter values (see [Value placeholders](#value-placeholders)).\n* It used to generate dynamic query fragments (see [Query building](#query-building)).\n\n`sql` tag can be imported from Slonik package:\n\n```ts\nimport {\n  sql\n} from 'slonik';\n```\n\nSometimes it may be desirable to construct a custom instance of `sql` tag. In those cases, you can use the `createSqlTag` factory, e.g.\n\n```ts\nimport {\n  createSqlTag\n} from 'slonik';\n\nconst sql = createSqlTag();\n```\n\n### Type aliases\n\nYou can create a `sql` tag with a predefined set of Zod type aliases that can be later referenced when creating a query with [runtime validation](#runtime-validation).\n\nSlonik documentation assumes that these type aliases are defined:\n\n```ts\nconst sql = createSqlTag({\n  typeAliases: {\n    // `foo` is a documentation specific example\n    foo: z.object({\n      foo: z.string(),\n    }),\n    id: z.object({\n      id: z.number(),\n    }),\n    void: z.object({}).strict(),\n  }\n})\n```\n\nThese are documentation specific examples that you are not expected to blindly copy. However, `id` and `void` are recommended aliases as they reflect common patterns, e.g.\n\n```ts\nconst personId = await pool.oneFirst(\n  sql.typeAlias('id')`\n    SELECT id\n    FROM person\n  `\n);\n\nawait pool.query(sql.typeAlias('void')`\n  INSERT INTO person_view (person_id)\n  VALUES (${personId})\n`);\n```\n\n### Typing <code>sql</code> tag\n\nSee [runtime validation](#runtime-validation).\n\n## Value placeholders\n\n### Tagged template literals\n\nSlonik query methods can only be executed using `sql` [tagged template literal](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Template_literals#Tagged_template_literals), e.g.\n\n```ts\nimport {\n  sql\n} from 'slonik'\n\nconnection.query(sql.typeAlias('id')`\n  SELECT 1 AS id\n  FROM foo\n  WHERE bar = ${'baz'}\n`);\n```\n\nThe above is equivalent to evaluating:\n\n```sql\nSELECT 1 AS id\nFROM foo\nWHERE bar = $1\n\n```\n\nquery with 'baz' value binding.\n\n### Manually constructing the query\n\nManually constructing queries is not allowed.\n\nThere is an internal mechanism that checks to see if query was created using `sql` tagged template literal, i.e.\n\n```ts\nconst query = {\n  sql: 'SELECT 1 AS id FROM foo WHERE bar = $1',\n  type: 'SQL',\n  values: [\n    'baz'\n  ]\n};\n\nconnection.query(query);\n```\n\nWill result in an error:\n\n> Query must be constructed using `sql` tagged template literal.\n\nThis is a security measure designed to prevent unsafe query execution.\n\nFurthermore, a query object constructed using `sql` tagged template literal is [frozen](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze) to prevent further manipulation.\n\n### Nesting <code>sql</code>\n\n`sql` tagged template literals can be nested, e.g.\n\n```ts\nconst query0 = sql.unsafe`SELECT ${'foo'} FROM bar`;\nconst query1 = sql.unsafe`SELECT ${'baz'} FROM (${query0})`;\n```\n\nProduces:\n\n```ts\n{\n  sql: 'SELECT $1 FROM (SELECT $2 FROM bar)',\n  values: [\n    'baz',\n    'foo'\n  ]\n}\n```\n\n\n## Query building\n\nQueries are built using methods of the `sql` tagged template literal.\n\nIf this is your first time using Slonik, read [Dynamically generating SQL queries using Node.js](https://dev.to/gajus/dynamically-generating-sql-queries-using-node-js-2c1g).\n\n### <code>sql.array</code>\n\n```ts\n(\n  values: readonly PrimitiveValueExpression[],\n  memberType: SqlFragment | TypeNameIdentifier,\n) => ArraySqlToken,\n```\n\nCreates an array value binding, e.g.\n\n```ts\nawait connection.query(sql.typeAlias('id')`\n  SELECT (${sql.array([1, 2, 3], 'int4')}) AS id\n`);\n```\n\nProduces:\n\n```ts\n{\n  sql: 'SELECT $1::\"int4\"[]',\n  values: [\n    [\n      1,\n      2,\n      3\n    ]\n  ]\n}\n```\n\n#### <code>sql.array</code> <code>memberType</code>\n\nIf `memberType` is a string (`TypeNameIdentifier`), then it is treated as a type name identifier and will be quoted using double quotes, i.e. `sql.array([1, 2, 3], 'int4')` is equivalent to `$1::\"int4\"[]`. The implication is that keywords that are often used interchangeably with type names are not going to work, e.g. [`int4`](https://github.com/postgres/postgres/blob/69edf4f8802247209e77f69e089799b3d83c13a4/src/include/catalog/pg_type.dat#L74-L78) is a type name identifier and will work. However, [`int`](https://github.com/postgres/postgres/blob/69edf4f8802247209e77f69e089799b3d83c13a4/src/include/parser/kwlist.h#L213) is a keyword and will not work. You can either use type name identifiers or you can construct custom member using `sql.fragment` tag, e.g.\n\n```ts\nawait connection.query(sql.typeAlias('id')`\n  SELECT (${sql.array([1, 2, 3], sql.fragment`int[]`)}) AS id\n`);\n```\n\nProduces:\n\n```ts\n{\n  sql: 'SELECT $1::int[]',\n  values: [\n    [\n      1,\n      2,\n      3\n    ]\n  ]\n}\n```\n\n#### <code>sql.array</code> vs <code>sql.join</code>\n\nUnlike `sql.join`, `sql.array` generates a stable query of a predictable length, i.e. regardless of the number of values in the array, the generated query remains the same:\n\n* Having a stable query enables [`pg_stat_statements`](https://www.postgresql.org/docs/current/pgstatstatements.html) to aggregate all query execution statistics.\n* Keeping the query length short reduces query parsing time.\n\nExample:\n\n```ts\nsql.typeAlias('id')`\n  SELECT id\n  FROM foo\n  WHERE id IN (${sql.join([1, 2, 3], sql.fragment`, `)})\n`;\nsql.typeAlias('id')`\n  SELECT id\n  FROM foo\n  WHERE id NOT IN (${sql.join([1, 2, 3], sql.fragment`, `)})\n`;\n```\n\nIs equivalent to:\n\n```ts\nsql.typeAlias('id')`\n  SELECT id\n  FROM foo\n  WHERE id = ANY(${sql.array([1, 2, 3], 'int4')})\n`;\nsql.typeAlias('id')`\n  SELECT id\n  FROM foo\n  WHERE id != ALL(${sql.array([1, 2, 3], 'int4')})\n`;\n```\n\nFurthermore, unlike `sql.join`, `sql.array` can be used with an empty array of values. In short, `sql.array` should be preferred over `sql.join` when possible.\n\n### <code>sql.binary</code>\n\n```ts\n(\n  data: Buffer\n) => BinarySqlToken;\n```\n\nBinds binary ([`bytea`](https://www.postgresql.org/docs/current/datatype-binary.html)) data, e.g.\n\n```ts\nawait connection.query(sql.unsafe`\n  SELECT ${sql.binary(Buffer.from('foo'))}\n`);\n```\n\nProduces:\n\n```ts\n{\n  sql: 'SELECT $1',\n  values: [\n    Buffer.from('foo')\n  ]\n}\n```\n\n### <code>sql.date</code>\n\n```ts\n(\n  date: Date\n) => DateSqlToken;\n```\n\nInserts a date, e.g.\n\n```ts\nawait connection.query(sql.unsafe`\n  SELECT ${sql.date(new Date('2022-08-19T03:27:24.951Z'))}\n`);\n```\n\nProduces:\n\n```ts\n{\n  sql: 'SELECT $1::date',\n  values: [\n    '2022-08-19'\n  ]\n}\n```\n\n### <code>sql.fragment</code>\n\n```ts\n(\n  template: TemplateStringsArray,\n  ...values: ValueExpression[]\n) => SqlFragment;\n```\n\nA SQL fragment, e.g.\n\n```ts\nsql.fragment`FOO`\n```\n\nProduces:\n\n```ts\n{\n  sql: 'FOO',\n  values: []\n}\n```\n\nSQL fragments can be used to build more complex queries, e.g.\n\n```ts\nconst whereFragment = sql.fragment`\n  WHERE bar = 'baz';\n`;\n\nsql.typeAlias('id')`\n  SELECT id\n  FROM foo\n  ${whereFragment}\n`\n```\n\n#### Fragments vs Queries\n\nThere are two primary differences:\n\n* Fragments are untyped and they cannot be used as inputs to query methods (use `sql.type` instead).\n* Queries are expected to be valid SQL if executed (e.g. `SELECT * FROM foo`); fragments are expected to be valid _fragments_ of SQL (e.g. `WHERE bar = 1`).\n\n> [!WARNING]\n> Due to the way that Slonik internally represents SQL fragments, your query must not contain `$slonik_` literals.\n\n### <code>sql.identifier</code>\n\n```ts\n(\n  names: string[],\n) => IdentifierSqlToken;\n```\n\n[Delimited identifiers](https://www.postgresql.org/docs/current/static/sql-syntax-lexical.html#SQL-SYNTAX-IDENTIFIERS) are created by enclosing an arbitrary sequence of characters in double-quotes (\"). To create a delimited identifier, create an `sql` tag function placeholder value using `sql.identifier`, e.g.\n\n```ts\nsql.typeAlias('id')`\n  SELECT 1 AS id\n  FROM ${sql.identifier(['bar', 'baz'])}\n`;\n```\n\nProduces:\n\n```ts\n{\n  sql: 'SELECT 1 FROM \"bar\".\"baz\"',\n  values: []\n}\n```\n\n### <code>sql.interval</code>\n\n```ts\n(\n  interval: {\n    years?: number,\n    months?: number,\n    weeks?: number,\n    days?: number,\n    hours?: number,\n    minutes?: number,\n    seconds?: number,\n  }\n) => IntervalSqlToken;\n```\n\nInserts an [interval](https://www.postgresql.org/docs/current/datatype-datetime.html#DATATYPE-INTERVAL-INPUT), e.g.\n\n```ts\nsql.typeAlias('id')`\n  SELECT 1 AS id\n  FROM ${sql.interval({days: 3})}\n`;\n```\n\nProduces:\n\n```ts\n{\n  sql: 'SELECT make_interval(\"days\" => $1)',\n  values: [\n    3\n  ]\n}\n```\n\nYou can use `sql.interval` exactly how you would use PostgreSQL [`make_interval` function](https://www.postgresql.org/docs/current/functions-datetime.html). However, notice that Slonik does not use abbreviations, i.e. \"secs\" is seconds and \"mins\" is minutes.\n\n|`make_interval`|`sql.interval`|Interval output|\n|---|---|---|\n|`make_interval(\"days\" => 1, \"hours\" => 2)`|`sql.interval({days: 1, hours: 2})`|`1 day 02:00:00`|\n|`make_interval(\"mins\" => 1)`|`sql.interval({minutes: 1})`|`00:01:00`|\n|`make_interval(\"secs\" => 120)`|`sql.interval({seconds: 120})`|`00:02:00`|\n|`make_interval(\"secs\" => 0.001)`|`sql.interval({seconds: 0.001})`|`00:00:00.001`|\n\n#### Dynamic intervals without <code>sql.interval</code>\n\nIf you need a dynamic interval (e.g. X days), you can achieve this using multiplication, e.g.\n\n```ts\nsql.unsafe`\n  SELECT ${2} * interval '1 day'\n`\n```\n\nThe above is equivalent to `interval '2 days'`.\n\nYou could also use `make_interval()` directly, e.g.\n\n```ts\nsql.unsafe`\n  SELECT make_interval(\"days\" => ${2})\n`\n```\n\n`sql.interval` was added mostly as a type-safe alternative.\n\n### <code>sql.join</code>\n\n```ts\n(\n  members: SqlSqlToken[],\n  glue: SqlSqlToken\n) => ListSqlToken;\n```\n\nConcatenates SQL expressions using `glue` separator, e.g.\n\n```ts\nawait connection.query(sql.unsafe`\n  SELECT ${sql.join([1, 2, 3], sql.fragment`, `)}\n`);\n```\n\nProduces:\n\n```ts\n{\n  sql: 'SELECT $1, $2, $3',\n  values: [\n    1,\n    2,\n    3\n  ]\n}\n```\n\n`sql.join` is the primary building block for most of the SQL, e.g.\n\nBoolean expressions:\n\n```ts\nsql.unsafe`\n  SELECT ${sql.join([1, 2], sql.fragment` AND `)}\n`\n\n// SELECT $1 AND $2\n```\n\nTuple:\n\n```ts\nsql.unsafe`\n  SELECT (${sql.join([1, 2], sql.fragment`, `)})\n`\n\n// SELECT ($1, $2)\n```\n\nTuple list:\n\n```ts\nsql.unsafe`\n  SELECT ${sql.join(\n    [\n      sql.fragment`(${sql.join([1, 2], sql.fragment`, `)})`,\n      sql.fragment`(${sql.join([3, 4], sql.fragment`, `)})`,\n    ],\n    sql.fragment`, `\n  )}\n`\n\n// SELECT ($1, $2), ($3, $4)\n```\n\n### <code>sql.json</code>\n\n```ts\n(\n  value: SerializableValue\n) => JsonSqlToken;\n```\n\nSerializes value and binds it as a JSON string literal, e.g.\n\n```ts\nawait connection.query(sql.unsafe`\n  SELECT (${sql.json([1, 2, 3])})\n`);\n```\n\nProduces:\n\n```ts\n{\n  sql: 'SELECT $1::json',\n  values: [\n    '[1,2,3]'\n  ]\n}\n```\n\n### <code>sql.jsonb</code>\n\n```ts\n(\n  value: SerializableValue\n) => JsonBinarySqlToken;\n```\n\nSerializes value and binds it as a JSON binary, e.g.\n\n```ts\nawait connection.query(sql.unsafe`\n  SELECT (${sql.jsonb([1, 2, 3])})\n`);\n```\n\nProduces:\n\n```ts\n{\n  sql: 'SELECT $1::jsonb',\n  values: [\n    '[1,2,3]'\n  ]\n}\n```\n\n### <code>sql.literalValue</code>\n\n> ⚠️ Do not use. This method interpolates values as literals and it must be used only for [building utility statements](#building-utility-statements). You are most likely looking for [value placeholders](#value-placeholders).\n\n```ts\n(\n  value: string,\n) => SqlSqlToken;\n```\n\nEscapes and interpolates a literal value into a query.\n\n```ts\nawait connection.query(sql.unsafe`\n  CREATE USER \"foo\" WITH PASSWORD ${sql.literalValue('bar')}\n`);\n```\n\nProduces:\n\n```ts\n{\n  sql: 'CREATE USER \"foo\" WITH PASSWORD \\'bar\\''\n}\n```\n\n### <code>sql.timestamp</code>\n\n```ts\n(\n  date: Date\n) => TimestampSqlToken;\n```\n\nInserts a timestamp, e.g.\n\n```ts\nawait connection.query(sql.unsafe`\n  SELECT ${sql.timestamp(new Date('2022-08-19T03:27:24.951Z'))}\n`);\n```\n\nProduces:\n\n```ts\n{\n  sql: 'SELECT to_timestamp($1)',\n  values: [\n    '1660879644.951'\n  ]\n}\n```\n\n### <code>sql.unnest</code>\n\n```ts\n(\n  tuples: ReadonlyArray<readonly any[]>,\n  columnTypes:  Array<[...string[], TypeNameIdentifier]> | Array<SqlSqlToken | TypeNameIdentifier>\n): UnnestSqlToken;\n```\n\nCreates an `unnest` expressions, e.g.\n\n```ts\nawait connection.query(sql.unsafe`\n  SELECT bar, baz\n  FROM ${sql.unnest(\n    [\n      [1, 'foo'],\n      [2, 'bar']\n    ],\n    [\n      'int4',\n      'text'\n    ]\n  )} AS foo(bar, baz)\n`);\n```\n\nProduces:\n\n```ts\n{\n  sql: 'SELECT bar, baz FROM unnest($1::\"int4\"[], $2::\"text\"[]) AS foo(bar, baz)',\n  values: [\n    [\n      1,\n      2\n    ],\n    [\n      'foo',\n      'bar'\n    ]\n  ]\n}\n```\n\nIf `columnType` array member type is `string`, it will treat it as a type name identifier (and quote with double quotes; illustrated in the example above).\n\nIf `columnType` array member type is `SqlToken`, it will inline type name without quotes, e.g.\n\n```ts\nawait connection.query(sql.unsafe`\n  SELECT bar, baz\n  FROM ${sql.unnest(\n    [\n      [1, 'foo'],\n      [2, 'bar']\n    ],\n    [\n      sql.fragment`integer`,\n      sql.fragment`text`\n    ]\n  )} AS foo(bar, baz)\n`);\n```\n\nProduces:\n\n```ts\n{\n  sql: 'SELECT bar, baz FROM unnest($1::integer[], $2::text[]) AS foo(bar, baz)',\n  values: [\n    [\n      1,\n      2\n    ],\n    [\n      'foo',\n      'bar'\n    ]\n  ]\n}\n```\n\nIf `columnType` array member type is `[...string[], TypeNameIdentifier]`, it will act as [`sql.identifier`](#sqlidentifier), e.g.\n\n```ts\nawait connection.query(sql.unsafe`\n  SELECT bar, baz\n  FROM ${sql.unnest(\n    [\n      [1, 3],\n      [2, 4]\n    ],\n    [\n      ['foo', 'int4'],\n      ['foo', 'int4']\n    ]\n  )} AS foo(bar, baz)\n`);\n```\n\nProduces:\n\n```ts\n{\n  sql: 'SELECT bar, baz FROM unnest($1::\"foo\".\"int4\"[], $2::\"foo\".\"int4\"[]) AS foo(bar, baz)',\n  values: [\n    [\n      1,\n      2\n    ],\n    [\n      3,\n      4\n    ]\n  ]\n}\n```\n\n### <code>sql.unsafe</code>\n\n```ts\n(\n  template: TemplateStringsArray,\n  ...values: ValueExpression[]\n) => QuerySqlToken;\n```\n\nCreates a query with Zod `any` type. The result of such a query has TypeScript type `any`.\n\n```ts\nconst result = await connection.one(sql.unsafe`\n  SELECT foo\n  FROM bar\n`);\n\n// `result` type is `any`\n```\n\n`sql.unsafe` is effectively a shortcut to `sql.type(z.any())`.\n\n`sql.unsafe` is as a convenience method for development. Your production code must not use `sql.unsafe`. Instead,\n\n* Use `sql.type` to type the query result\n* Use `sql.typeAlias` to alias an existing type\n* Use `sql.fragment` if you are writing a fragment of a query\n\n### <code>sql.uuid</code>\n\n```ts\n(\n  uuid: string\n) => TimestampSqlToken;\n```\n\nInserts a UUID, e.g.\n\n```ts\nawait connection.query(sql.unsafe`\n  SELECT ${sql.uuid('00000000-0000-0000-0000-000000000000')}\n`);\n```\n\nProduces:\n\n```ts\n{\n  sql: 'SELECT $1::uuid',\n  values: [\n    '00000000-0000-0000-0000-000000000000'\n  ]\n}\n```\n\n## Query methods\n\n### <code>any</code>\n\nReturns result rows.\n\nExample:\n\n```ts\nconst rows = await connection.any(sql.typeAlias('foo')`SELECT foo`);\n```\n\n`#any` is similar to `#query` except that it returns rows without fields information.\n\n### <code>anyFirst</code>\n\nReturns value of the first column of every row in the result set.\n\n* Throws `DataIntegrityError` if query returns multiple columns.\n\nExample:\n\n```ts\nconst fooValues = await connection.anyFirst(sql.typeAlias('foo')`SELECT foo`);\n```\n\n### <code>exists</code>\n\nReturns a boolean value indicating whether query produces results.\n\nThe query that is passed to this function is wrapped in `SELECT exists()` prior to it getting executed, i.e.\n\n```ts\npool.exists(sql.typeAlias('void')`\n  SELECT\n  LIMIT 1\n`)\n```\n\nis equivalent to:\n\n```ts\npool.oneFirst(sql.unsafe`\n  SELECT exists(\n    SELECT\n    LIMIT 1\n  )\n`)\n```\n\n### <code>many</code>\n\nReturns result rows.\n\n* Throws `NotFoundError` if query returns no rows.\n\nExample:\n\n```ts\nconst rows = await connection.many(sql.typeAlias('foo')`SELECT foo`);\n```\n\n### <code>manyFirst</code>\n\nReturns value of the first column of every row in the result set.\n\n* Throws `NotFoundError` if query returns no rows.\n* Throws `DataIntegrityError` if query returns multiple columns.\n\nExample:\n\n```ts\nconst fooValues = await connection.manyFirst(sql.typeAlias('foo')`SELECT foo`);\n```\n\n### <code>maybeOne</code>\n\nSelects the first row from the result.\n\n* Returns `null` if row is not found.\n* Throws `DataIntegrityError` if query returns multiple rows.\n\nExample:\n\n```ts\nconst row = await connection.maybeOne(sql.typeAlias('foo')`SELECT foo`);\n\n// row.foo is the result of the `foo` column value of the first row.\n```\n\n### <code>maybeOneFirst</code>\n\nReturns value of the first column from the first row.\n\n* Returns `null` if row is not found.\n* Throws `DataIntegrityError` if query returns multiple rows.\n* Throws `DataIntegrityError` if query returns multiple columns.\n\nExample:\n\n```ts\nconst foo = await connection.maybeOneFirst(sql.typeAlias('foo')`SELECT foo`);\n\n// foo is the result of the `foo` column value of the first row.\n```\n\n### <code>one</code>\n\nSelects the first row from the result.\n\n* Throws `NotFoundError` if query returns no rows.\n* Throws `DataIntegrityError` if query returns multiple rows.\n\nExample:\n\n```ts\nconst row = await connection.one(sql.typeAlias('foo')`SELECT foo`);\n\n// row.foo is the result of the `foo` column value of the first row.\n```\n\n> Note:\n>\n> I've been asked \"What makes this different from [knex.js](http://knexjs.org/) `knex('foo').limit(1)`?\".\n> `knex('foo').limit(1)` simply generates \"SELECT * FROM foo LIMIT 1\" query.\n> `knex` is a query builder; it does not assert the value of the result.\n> Slonik `#one` adds assertions about the result of the query.\n\n### <code>oneFirst</code>\n\nReturns value of the first column from the first row.\n\n* Throws `NotFoundError` if query returns no rows.\n* Throws `DataIntegrityError` if query returns multiple rows.\n* Throws `DataIntegrityError` if query returns multiple columns.\n\nExample:\n\n```ts\nconst foo = await connection.oneFirst(sql.typeAlias('foo')`SELECT foo`);\n\n// foo is the result of the `foo` column value of the first row.\n```\n\n### <code>query</code>\n\nAPI and the result shape are equivalent to [`pg#query`](https://github.com/brianc/node-postgres).\n\nExample:\n\n```ts\nawait connection.query(sql.typeAlias('foo')`SELECT foo`);\n\n// {\n//   command: 'SELECT',\n//   fields: [],\n//   notices: [],\n//   rowCount: 1,\n//   rows: [\n//     {\n//       foo: 'bar'\n//     }\n//   ]\n// }\n```\n\n### <code>stream</code>\n\nStreams query results.\n\nExample:\n\n```ts\nawait connection.stream(sql.typeAlias('foo')`SELECT foo`, (stream) => {\n  stream.on('data', (row) => {\n    row;\n    // {\n    //   data: {\n    //     foo: 'bar'\n    //   },\n    //   fields: [\n    //     {\n    //       name: 'foo',\n    //       dataTypeId: 23,\n    //     }\n    //   ]\n    // }\n  });\n});\n```\n\nYou can also use the [AsyncIterable](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/AsyncIterator) interface:\n\n```ts\nawait connection.stream(sql.typeAlias('foo')`SELECT foo`, async (stream) => {\n  for await (const row of stream) {\n    row;\n    // {\n    //   data: {\n    //     foo: 'bar'\n    //   },\n    //   fields: [\n    //     {\n    //       name: 'foo',\n    //       dataTypeId: 23,\n    //     }\n    //   ]\n    // }\n  }\n});\n```\n\n### <code>transaction</code>\n\n`transaction` method is used wrap execution of queries in `START TRANSACTION` and `COMMIT` or `ROLLBACK`. `COMMIT` is called if the transaction handler returns a promise that resolves; `ROLLBACK` is called otherwise.\n\n`transaction` method can be used together with `createPool` method. When used to create a transaction from an instance of a pool, a new connection is allocated for the duration of the transaction.\n\n```ts\nconst result = await connection.transaction(async (transactionConnection) => {\n  await transactionConnection.query(sql.unsafe`INSERT INTO foo (bar) VALUES ('baz')`);\n  await transactionConnection.query(sql.unsafe`INSERT INTO qux (quux) VALUES ('corge')`);\n\n  return 'FOO';\n});\n\nresult === 'FOO';\n```\n\n#### Transaction nesting\n\nSlonik uses [`SAVEPOINT`](https://www.postgresql.org/docs/current/sql-savepoint.html) to automatically nest transactions, e.g.\n\n```ts\nawait connection.transaction(async (t1) => {\n  await t1.query(sql.unsafe`INSERT INTO foo (bar) VALUES ('baz')`);\n\n  return t1.transaction((t2) => {\n    return t2.query(sql.unsafe`INSERT INTO qux (quux) VALUES ('corge')`);\n  });\n});\n```\n\nis equivalent to:\n\n```sql\nSTART TRANSACTION;\nINSERT INTO foo (bar) VALUES ('baz');\nSAVEPOINT slonik_savepoint_1;\nINSERT INTO qux (quux) VALUES ('corge');\nCOMMIT;\n```\n\nSlonik automatically rollsback to the last savepoint if a query belonging to a transaction results in an error, e.g.\n\n```ts\nawait connection.transaction(async (t1) => {\n  await t1.query(sql.unsafe`INSERT INTO foo (bar) VALUES ('baz')`);\n\n  try {\n    await t1.transaction(async (t2) => {\n      await t2.query(sql.unsafe`INSERT INTO qux (quux) VALUES ('corge')`);\n\n      return Promise.reject(new Error('foo'));\n    });\n  } catch (error) {\n\n  }\n});\n```\n\nis equivalent to:\n\n```sql\nSTART TRANSACTION;\nINSERT INTO foo (bar) VALUES ('baz');\nSAVEPOINT slonik_savepoint_1;\nINSERT INTO qux (quux) VALUES ('corge');\nROLLBACK TO SAVEPOINT slonik_savepoint_1;\nCOMMIT;\n```\n\nIf error is unhandled, then the entire transaction is rolledback, e.g.\n\n```ts\nawait connection.transaction(async (t1) => {\n  await t1.query(sql.typeAlias('void')`INSERT INTO foo (bar) VALUES ('baz')`);\n\n  await t1.transaction(async (t2) => {\n    await t2.query(sql.typeAlias('void')`INSERT INTO qux (quux) VALUES ('corge')`);\n\n    await t1.transaction(async (t3) => {\n      await t3.query(sql.typeAlias('void')`INSERT INTO uier (grault) VALUES ('garply')`);\n\n      return Promise.reject(new Error('foo'));\n    });\n  });\n});\n```\n\nis equivalent to:\n\n```sql\nSTART TRANSACTION;\nINSERT INTO foo (bar) VALUES ('baz');\nSAVEPOINT slonik_savepoint_1;\nINSERT INTO qux (quux) VALUES ('corge');\nSAVEPOINT slonik_savepoint_2;\nINSERT INTO uier (grault) VALUES ('garply');\nROLLBACK TO SAVEPOINT slonik_savepoint_2;\nROLLBACK TO SAVEPOINT slonik_savepoint_1;\nROLLBACK;\n```\n\n#### Transaction retrying\n\nTransactions that are failing with [Transaction Rollback](https://www.postgresql.org/docs/current/errcodes-appendix.html) class errors are automatically retried.\n\nA failing transaction will be rolled back and the callback function passed to the transaction method call will be executed again. Nested transactions are also retried until the retry limit is reached. If the nested transaction keeps failing with a [Transaction Rollback](https://www.postgresql.org/docs/current/errcodes-appendix.html) error, then the parent transaction will be retried until the retry limit is reached.\n\nHow many times a transaction is retried is controlled using `transactionRetryLimit` configuration (default: 5) and the `transactionRetryLimit` parameter of the `transaction` method (default: undefined). If a `transactionRetryLimit` is given to the method call then it is used otherwise the `transactionRetryLimit` configuration is used.\n\n#### Query retrying\n\nA single query (not part of a transaction) failing with a [Transaction Rollback](https://www.postgresql.org/docs/current/errcodes-appendix.html) class error is automatically retried.\n\nHow many times it is retried is controlled by using the `queryRetryLimit` configuration (default: 5).\n\n\n## Utilities\n\n### <code>parseDsn</code>\n\n```ts\n(\n  dsn: string,\n) => ConnectionOptions;\n```\n\nParses DSN to `ConnectionOptions` type.\n\nExample:\n\n```ts\nimport {\n  parseDsn,\n} from 'slonik';\n\nparseDsn('postgresql://foo@localhost/bar?application_name=baz');\n```\n\nSee [supported parameters](#connection-uri).\n\n### <code>stringifyDsn</code>\n\n```ts\n(\n  connectionOptions: ConnectionOptions,\n) => string;\n```\n\nStringifies `ConnectionOptions` to a DSN.\n\nExample:\n\n```ts\nimport {\n  stringifyDsn,\n} from 'slonik';\n\nstringifyDsn({\n  host: 'localhost',\n  username: 'foo',\n  databaseName: 'bar',\n  applicationName: 'baz',\n});\n```\n\n\n## Error handling\n\nAll Slonik errors extend from `SlonikError`, i.e. You can catch Slonik specific errors using the following logic.\n\n```ts\nimport {\n  SlonikError\n} from 'slonik';\n\ntry {\n  await query();\n} catch (error) {\n  if (error instanceof SlonikError) {\n    // This error is thrown by Slonik.\n  }\n}\n```\n\n### Original <code>node-postgres</code> error\n\nWhen error originates from `node-postgres`, the original error is available under [`cause` property](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error/cause).\n\nThis property is exposed for debugging purposes only. Do not use it for conditional checks – it can change.\n\nIf you require to extract meta-data about a specific type of error (e.g. constraint violation name), raise a GitHub issue describing your use case.\n\n### Handling <code>BackendTerminatedError</code>\n\n`BackendTerminatedError` is thrown when the backend is terminated by the user, i.e. [`pg_terminate_backend`](https://www.postgresql.org/docs/current/functions-admin.html#FUNCTIONS-ADMIN-SIGNAL).\n\n`BackendTerminatedError` must be handled at the connection level, i.e.\n\n```ts\nawait pool.connect(async (connection0) => {\n  try {\n    await pool.connect(async (connection1) => {\n      const backendProcessId = await connection1.oneFirst(sql.typeAlias('id')`SELECT pg_backend_pid() AS id`);\n\n      setTimeout(() => {\n        connection0.query(sql.typeAlias('void')`SELECT pg_cancel_backend(${backendProcessId})`)\n      }, 2000);\n\n      try {\n        await connection1.query(sql.typeAlias('void')`SELECT pg_sleep(30)`);\n      } catch (error) {\n        // This code will not be executed.\n      }\n    });\n  } catch (error) {\n    if (error instanceof BackendTerminatedError) {\n      // Handle backend termination.\n    } else {\n      throw error;\n    }\n  }\n});\n```\n\n### Handling <code>CheckIntegrityConstraintViolationError</code>\n\n`CheckIntegrityConstraintViolationError` is thrown when PostgreSQL responds with [`check_violation`](https://www.postgresql.org/docs/9.4/static/errcodes-appendix.html) (`23514`) error.\n\n### Handling <code>ConnectionError</code>\n\n`ConnectionError` is thrown when connection cannot be established to the PostgreSQL server.\n\n### Handling <code>DataIntegrityError</code>\n\nTo handle the case where the data result does not match the expectations, catch `DataIntegrityError` error.\n\n```ts\nimport {\n  DataIntegrityError\n} from 'slonik';\n\nlet row;\n\ntry {\n  row = await connection.one(sql.typeAlias('foo')`SELECT foo`);\n} catch (error) {\n  if (error instanceof DataIntegrityError) {\n    console.error('There is more than one row matching the select criteria.');\n  } else {\n    throw error;\n  }\n}\n```\n\n### Handling <code>ForeignKeyIntegrityConstraintViolationError</code>\n\n`ForeignKeyIntegrityConstraintViolationError` is thrown when PostgreSQL responds with [`foreign_key_violation`](https://www.postgresql.org/docs/9.4/static/errcodes-appendix.html) (`23503`) error.\n\n### Handling <code>NotFoundError</code>\n\nTo handle the case where query returns less than one row, catch `NotFoundError` error.\n\n```ts\nimport {\n  NotFoundError\n} from 'slonik';\n\nlet row;\n\ntry {\n  row = await connection.one(sql.typeAlias('foo')`SELECT foo`);\n} catch (error) {\n  if (!(error instanceof NotFoundError)) {\n    throw error;\n  }\n}\n\nif (row) {\n  // row.foo is the result of the `foo` column value of the first row.\n}\n```\n\n### Handling <code>NotNullIntegrityConstraintViolationError</code>\n\n`NotNullIntegrityConstraintViolationError` is thrown when PostgreSQL responds with [`not_null_violation`](https://www.postgresql.org/docs/9.4/static/errcodes-appendix.html) (`23502`) error.\n\n### Handling <code>StatementCancelledError</code>\n\n`StatementCancelledError` is thrown when a query is cancelled by the user (i.e. [`pg_cancel_backend`](https://www.postgresql.org/docs/current/functions-admin.html#FUNCTIONS-ADMIN-SIGNAL)) or in case of a timeout.\n\nIt should be safe to use the same connection if `StatementCancelledError` is handled, e.g.\n\n```ts\nawait pool.connect(async (connection0) => {\n  await pool.connect(async (connection1) => {\n    const backendProcessId = await connection1.oneFirst(sql.typeAlias('id')`SELECT pg_backend_pid() AS id`);\n\n    setTimeout(() => {\n      connection0.query(sql.typeAlias('void')`SELECT pg_cancel_backend(${backendProcessId})`)\n    }, 2000);\n\n    try {\n      await connection1.query(sql.typeAlias('void')`SELECT pg_sleep(30)`);\n    } catch (error) {\n      if (error instanceof StatementCancelledError) {\n        // Safe to continue using the same connection.\n      } else {\n        throw error;\n      }\n    }\n  });\n});\n```\n\n### Handling <code>StatementTimeoutError</code>\n\n`StatementTimeoutError` inherits from `StatementCancelledError` and it is called only in case of a timeout.\n\n### Handling <code>UniqueIntegrityConstraintViolationError</code>\n\n`UniqueIntegrityConstraintViolationError` is thrown when PostgreSQL responds with [`unique_violation`](https://www.postgresql.org/docs/9.4/static/errcodes-appendix.html) (`23505`) error.\n\n### Handling <code>TupleMovedToAnotherPartitionError</code>\n\n`TupleMovedToAnotherPartitionError` is thrown when [`affecting tuple moved into different partition`](https://github.com/postgres/postgres/commit/f16241bef7cc271bff60e23de2f827a10e50dde8).\n\n\n## Migrations\n\nThis library intentionally doesn't handle migrations, because a database client and migrations are conceptually distinct problems.\n\nMy personal preference is to use [Flyway](https://flywaydb.org/) – it is a robust solution that many DBAs are already familiar with.\n\nThe Slonik community has also shared their successes with these Node.js frameworks:\n\n* [`node-pg-migrate`](https://github.com/salsita/node-pg-migrate)\n* [`@slonik/migrator`](https://www.npmjs.com/package/@slonik/migrator)\n\n## Types\n\nThis package is using [TypeScript](http://typescriptlang.org/) types.\n\nRefer to [`./packages/slonik/src/types.ts`](./packages/slonik/src/types.ts).\n\nThe public interface exports the following types:\n\n* `CommonQueryMethods` (most generic)\n* `DatabaseConnection` (`DatabasePool | DatabasePoolConnection`)\n* `DatabasePool`\n* `DatabasePoolConnection`\n* `DatabaseTransactionConnection`\n\nUse these types to annotate `connection` instance in your code base, e.g.\n\n```ts\nimport {\n  type DatabaseConnection\n} from 'slonik';\n\nexport default async (\n  connection: DatabaseConnection,\n  code: string\n): Promise<number> => {\n  return await connection.oneFirst(sql.typeAlias('id')`\n    SELECT id\n    FROM country\n    WHERE code = ${code}\n  `);\n};\n```\n\nSee [runtime validation](#runtime-validation).\n\n## Debugging\n\n### Logging\n\nSlonik uses [roarr](https://github.com/gajus/roarr) to log queries.\n\nTo enable logging, define `ROARR_LOG=true` environment variable.\n\nBy default, Slonik logs only connection events, e.g. when connection is created, connection is acquired and notices.\n\nQuery-level logging can be added using [`slonik-interceptor-query-logging`](https://github.com/gajus/slonik-interceptor-query-logging) interceptor.\n\n### Capture stack trace\n\nNote: Requires [`slonik-interceptor-query-logging`](https://github.com/gajus/slonik-interceptor-query-logging).\n\nEnabling `captureStackTrace` configuration will create a stack trace before invoking the query and include the stack trace in the logs, e.g.\n\n```tson\n{\n  \"context\": {\n    \"package\": \"slonik\",\n    \"namespace\": \"slonik\",\n    \"logLevel\": 20,\n    \"executionTime\": \"357 ms\",\n    \"queryId\": \"01CV2V5S4H57KCYFFBS0BJ8K7E\",\n    \"rowCount\": 1,\n    \"sql\": \"SELECT schedule_cinema_data_task();\",\n    \"stackTrace\": [\n      \"/node_modules/slonik/dist:162:28\",\n      \"/node_modules/slonik/dist:314:12\",\n      \"/node_modules/slonik/dist:361:20\",\n      \"/node_modules/slonik/dist/utilities:17:13\",\n      \"/src/bin/commands/do-cinema-data-tasks.js:59:21\",\n      \"/src/bin/commands/do-cinema-data-tasks.js:590:45\",\n      \"internal/process/next_tick.js:68:7\"\n    ],\n    \"values\": []\n  },\n  \"message\": \"query\",\n  \"sequence\": 4,\n  \"time\": 1540915127833,\n  \"version\": \"1.0.0\"\n}\n{\n  \"context\": {\n    \"package\": \"slonik\",\n    \"namespace\": \"slonik\",\n    \"logLevel\": 20,\n    \"executionTime\": \"66 ms\",\n    \"queryId\": \"01CV2V5SGS0WHJX4GJN09Z3MTB\",\n    \"rowCount\": 1,\n    \"sql\": \"SELECT cinema_id \\\"cinemaId\\\", target_data \\\"targetData\\\" FROM cinema_data_task WHERE id = ?\",\n    \"stackTrace\": [\n      \"/node_modules/slonik/dist:162:28\",\n      \"/node_modules/slonik/dist:285:12\",\n      \"/node_modules/slonik/dist/utilities:17:13\",\n      \"/src/bin/commands/do-cinema-data-tasks.js:603:26\",\n      \"internal/process/next_tick.js:68:7\"\n    ],\n    \"values\": [\n      17953947\n    ]\n  },\n  \"message\": \"query\",\n  \"sequence\": 5,\n  \"time\": 1540915127902,\n  \"version\": \"1.0.0\"\n}\n```\n\nUse [`@roarr/cli`](https://github.com/gajus/roarr-cli) to pretty-print the output.\n\n![Log Roarr pretty-print output.](./.README/log-roarr-pretty-print-output.png)\n\n\n## Syntax Highlighting\n\n### Atom Syntax Highlighting Plugin\n\nUsing [Atom](https://atom.io/) IDE you can leverage the [`language-babel`](https://github.com/gandm/language-babel) package in combination with the [`language-sql`](https://github.com/atom/language-sql) to enable highlighting of the SQL strings in the codebase.\n\n![Syntax highlighting in Atom](./.README/atom-syntax-highlighting.png)\n\nTo enable highlighting, you need to:\n\n1. Install `language-babel` and `language-sql` packages.\n1. Configure `language-babel` \"JavaScript Tagged Template Literal Grammar Extensions\" setting to use `language-sql` to highlight template literals with `sql` tag (configuration value: `sql:source.sql`).\n1. Use [`sql` helper to construct the queries](https://github.com/gajus/slonik#tagged-template-literals).\n\nFor more information, refer to the [JavaScript Tagged Template Literal Grammar Extensions](https://github.com/gandm/language-babel#javascript-tagged-template-literal-grammar-extensions) documentation of `language-babel` package.\n\n### VS Code Syntax Highlighting Extension\n\nThe [`vscode-sql-lit` extension](https://marketplace.visualstudio.com/items?itemName=thebearingedge.vscode-sql-lit) provides syntax highlighting for VS Code:\n![Syntax highlighting in VS Code](./.README/vscode-syntax-highlighting.png)\n\n## Development\n\nRunning Slonik tests requires having a local PostgreSQL instance.\n\nThe easiest way to setup a temporary instance for testing is using Docker, e.g.\n\n```bash\ndocker run --name slonik-test --rm -it -e POSTGRES_PASSWORD=postgres -p 5432:5432 postgres -N 1000\n```\n"
        },
        {
          "name": "cspell.yml",
          "type": "blob",
          "size": 0.265625,
          "content": "allowCompoundWords: true\ndictionaries:\n  - sql\n  - typescript\nignorePaths:\n  - '**/CHANGELOG.md'\n  - node_modules\n  - dist\n  - README.md\nlanguage: en\nminWordLength: 5\nversion: '0.2'\nwords:\n  - gajus\n  - kuizinas\n  - plpgsql\n  - roarr\n  - slonik\n  - sslcert\n  - sslrootcert"
        },
        {
          "name": "knip.json",
          "type": "blob",
          "size": 0.240234375,
          "content": "{\n  \"$schema\": \"https://unpkg.com/knip@2/schema.json\",\n  \"entry\": [\n    \"src/index.ts!\",\n    \"src/**/*.test.ts\"\n  ],\n  \"ignoreDependencies\": [\n    \"@changesets/cli\",\n    \"@slonik/test-ssls\",\n    \"husky\"\n  ],\n  \"project\": [\n    \"src/**/*.ts\"\n  ]\n}"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 0.4541015625,
          "content": "{\n  \"workspaces\": [\n    \"packages/types\",\n    \"packages/utilities\",\n    \"packages/errors\",\n    \"packages/sql-tag\",\n    \"packages/driver\",\n    \"packages/pg-driver\",\n    \"packages/slonik\",\n    \"packages/*\"\n  ],\n  \"scripts\": {\n    \"lint:knip\": \"knip\",\n    \"lint\": \"npm run lint:knip\"\n  },\n  \"dependencies\": {\n    \"@changesets/cli\": \"^2.27.1\"\n  },\n  \"devDependencies\": {\n    \"@changesets/changelog-github\": \"^0.5.0\",\n    \"husky\": \"^9.0.11\",\n    \"knip\": \"^5.36.7\"\n  }\n}\n"
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "pnpm-lock.yaml",
          "type": "blob",
          "size": 342.3564453125,
          "content": "lockfileVersion: '9.0'\n\nsettings:\n  autoInstallPeers: true\n  excludeLinksFromLockfile: false\n\nimporters:\n\n  .:\n    dependencies:\n      '@changesets/cli':\n        specifier: ^2.27.1\n        version: 2.27.5\n    devDependencies:\n      '@changesets/changelog-github':\n        specifier: ^0.5.0\n        version: 0.5.0\n      husky:\n        specifier: ^9.0.11\n        version: 9.0.11\n      knip:\n        specifier: ^5.36.7\n        version: 5.36.7(@types/node@22.9.0)(typescript@5.6.3)\n\n  packages/benchmark:\n    dependencies:\n      benny:\n        specifier: ^3.7.1\n        version: 3.7.1\n      pg:\n        specifier: ^8.13.1\n        version: 8.13.1\n      pg-promise:\n        specifier: ^11.10.2\n        version: 11.10.2(pg-query-stream@4.7.1(pg@8.13.1))\n      postgres:\n        specifier: ^3.4.5\n        version: 3.4.5\n      slonik:\n        specifier: ^46.2.0\n        version: link:../slonik\n\n  packages/driver:\n    dependencies:\n      '@slonik/types':\n        specifier: ^46.2.0\n        version: link:../types\n      '@slonik/utilities':\n        specifier: ^46.2.0\n        version: link:../utilities\n      roarr:\n        specifier: ^7.21.1\n        version: 7.21.1\n      serialize-error:\n        specifier: ^8.0.0\n        version: 8.1.0\n      strict-event-emitter-types:\n        specifier: ^2.0.0\n        version: 2.0.0\n      zod:\n        specifier: ^3\n        version: 3.23.8\n    devDependencies:\n      '@slonik/eslint-config':\n        specifier: workspace:^\n        version: link:../eslint-config\n      '@types/node':\n        specifier: ^22.9.0\n        version: 22.9.0\n      ava:\n        specifier: ^6.1.3\n        version: 6.1.3\n      cspell:\n        specifier: ^8.16.0\n        version: 8.16.0\n      eslint:\n        specifier: ^9.16.0\n        version: 9.17.0(jiti@2.4.0)\n      nyc:\n        specifier: ^15.1.0\n        version: 15.1.0\n      ts-node:\n        specifier: ^10.9.1\n        version: 10.9.2(@types/node@22.9.0)(typescript@5.6.3)\n      typescript:\n        specifier: ^5.6.3\n        version: 5.6.3\n\n  packages/errors:\n    dependencies:\n      '@slonik/types':\n        specifier: ^46.2.0\n        version: link:../types\n    devDependencies:\n      '@slonik/eslint-config':\n        specifier: workspace:^\n        version: link:../eslint-config\n      '@types/node':\n        specifier: ^22.9.0\n        version: 22.9.0\n      ava:\n        specifier: ^6.1.3\n        version: 6.1.3\n      cspell:\n        specifier: ^8.16.0\n        version: 8.16.0\n      eslint:\n        specifier: ^9.16.0\n        version: 9.17.0(jiti@2.4.0)\n      nyc:\n        specifier: ^15.1.0\n        version: 15.1.0\n      ts-node:\n        specifier: ^10.9.1\n        version: 10.9.2(@types/node@22.9.0)(typescript@5.6.3)\n      typescript:\n        specifier: ^5.6.3\n        version: 5.6.3\n      zod:\n        specifier: ^3.22.4\n        version: 3.23.8\n\n  packages/eslint-config:\n    dependencies:\n      eslint-config-canonical:\n        specifier: ^44.3.33\n        version: 44.3.36(@babel/core@7.24.7)(@types/node@22.9.0)(eslint-plugin-import-x@4.6.1(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3))(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3)(vitest@2.1.8(@types/node@22.9.0)(jsdom@6.5.1))\n\n  packages/pg-driver:\n    dependencies:\n      '@slonik/driver':\n        specifier: ^46.2.0\n        version: link:../driver\n      '@slonik/errors':\n        specifier: ^46.2.0\n        version: link:../errors\n      '@slonik/sql-tag':\n        specifier: ^46.2.0\n        version: link:../sql-tag\n      '@slonik/types':\n        specifier: ^46.2.0\n        version: link:../types\n      '@slonik/utilities':\n        specifier: ^46.2.0\n        version: link:../utilities\n      pg:\n        specifier: ^8.13.1\n        version: 8.13.1\n      pg-query-stream:\n        specifier: ^4.7.1\n        version: 4.7.1(pg@8.13.1)\n      pg-types:\n        specifier: ^4.0.2\n        version: 4.0.2\n      postgres-array:\n        specifier: ^3.0.2\n        version: 3.0.2\n      zod:\n        specifier: ^3\n        version: 3.23.8\n    devDependencies:\n      '@slonik/eslint-config':\n        specifier: workspace:^\n        version: link:../eslint-config\n      '@types/node':\n        specifier: ^22.9.0\n        version: 22.9.0\n      '@types/pg':\n        specifier: ^8.11.10\n        version: 8.11.10\n      ava:\n        specifier: ^6.1.3\n        version: 6.1.3\n      cspell:\n        specifier: ^8.16.0\n        version: 8.16.0\n      eslint:\n        specifier: ^9.16.0\n        version: 9.17.0(jiti@2.4.0)\n      nyc:\n        specifier: ^15.1.0\n        version: 15.1.0\n      ts-node:\n        specifier: ^10.9.1\n        version: 10.9.2(@types/node@22.9.0)(typescript@5.6.3)\n      typescript:\n        specifier: ^5.6.3\n        version: 5.6.3\n\n  packages/slonik:\n    dependencies:\n      '@slonik/driver':\n        specifier: ^46.2.0\n        version: link:../driver\n      '@slonik/errors':\n        specifier: ^46.2.0\n        version: link:../errors\n      '@slonik/pg-driver':\n        specifier: ^46.2.0\n        version: link:../pg-driver\n      '@slonik/sql-tag':\n        specifier: ^46.2.0\n        version: link:../sql-tag\n      '@slonik/utilities':\n        specifier: ^46.2.0\n        version: link:../utilities\n      get-stack-trace:\n        specifier: ^3.1.1\n        version: 3.1.1\n      iso8601-duration:\n        specifier: ^1.3.0\n        version: 1.3.0\n      postgres-interval:\n        specifier: ^4.0.2\n        version: 4.0.2\n      roarr:\n        specifier: ^7.21.1\n        version: 7.21.1\n      serialize-error:\n        specifier: ^8.0.0\n        version: 8.1.0\n      strict-event-emitter-types:\n        specifier: ^2.0.0\n        version: 2.0.0\n    devDependencies:\n      '@slonik/eslint-config':\n        specifier: workspace:^\n        version: link:../eslint-config\n      '@types/node':\n        specifier: ^22.9.0\n        version: 22.9.0\n      '@types/sinon':\n        specifier: ^10.0.20\n        version: 10.0.20\n      ava:\n        specifier: ^6.1.3\n        version: 6.1.3\n      cspell:\n        specifier: ^8.16.0\n        version: 8.16.0\n      eslint:\n        specifier: ^9.16.0\n        version: 9.17.0(jiti@2.4.0)\n      expect-type:\n        specifier: ^0.15.0\n        version: 0.15.0\n      get-port:\n        specifier: ^5.1.1\n        version: 5.1.1\n      nyc:\n        specifier: ^15.1.0\n        version: 15.1.0\n      sinon:\n        specifier: ^15.1.0\n        version: 15.2.0\n      ts-node:\n        specifier: ^10.9.1\n        version: 10.9.2(@types/node@22.9.0)(typescript@5.6.3)\n      typescript:\n        specifier: ^5.6.3\n        version: 5.6.3\n      zod:\n        specifier: ^3.22.4\n        version: 3.23.8\n\n  packages/slonik-dataloaders:\n    dependencies:\n      dataloader:\n        specifier: ^2.2.2\n        version: 2.2.2\n      graphql:\n        specifier: ^16.8.1\n        version: 16.8.1\n      zod:\n        specifier: ^3.23.8\n        version: 3.23.8\n    devDependencies:\n      '@slonik/eslint-config':\n        specifier: workspace:^\n        version: link:../eslint-config\n      '@slonik/types':\n        specifier: ^46.2.0\n        version: link:../types\n      eslint:\n        specifier: ^9.16.0\n        version: 9.17.0(jiti@2.4.0)\n      slonik:\n        specifier: ^46.2.0\n        version: link:../slonik\n      typescript:\n        specifier: ^5.6.3\n        version: 5.6.3\n      vitest:\n        specifier: ^2.1.8\n        version: 2.1.8(@types/node@22.9.0)(jsdom@6.5.1)\n\n  packages/slonik-interceptor-field-name-transformation:\n    dependencies:\n      camelcase:\n        specifier: ^6.2.1\n        version: 6.3.0\n    devDependencies:\n      '@slonik/eslint-config':\n        specifier: workspace:^\n        version: link:../eslint-config\n      ava:\n        specifier: ^6.1.3\n        version: 6.1.3\n      eslint:\n        specifier: ^9.16.0\n        version: 9.17.0(jiti@2.4.0)\n      slonik:\n        specifier: ^46.2.0\n        version: link:../slonik\n      ts-node:\n        specifier: ^10.4.0\n        version: 10.9.2(@types/node@22.9.0)(typescript@5.6.3)\n      typescript:\n        specifier: ^5.6.3\n        version: 5.6.3\n\n  packages/slonik-interceptor-query-cache:\n    dependencies:\n      roarr:\n        specifier: ^7.21.1\n        version: 7.21.1\n      strip-comments:\n        specifier: ^2.0.1\n        version: 2.0.1\n    devDependencies:\n      '@slonik/eslint-config':\n        specifier: workspace:^\n        version: link:../eslint-config\n      ava:\n        specifier: ^6.1.3\n        version: 6.1.3\n      eslint:\n        specifier: ^9.16.0\n        version: 9.17.0(jiti@2.4.0)\n      slonik:\n        specifier: ^46.2.0\n        version: link:../slonik\n      ts-node:\n        specifier: ^10.4.0\n        version: 10.9.2(@types/node@22.9.0)(typescript@5.6.3)\n      typescript:\n        specifier: ^5.6.3\n        version: 5.6.3\n\n  packages/slonik-interceptor-query-logging:\n    dependencies:\n      crack-json:\n        specifier: ^1.3.0\n        version: 1.3.0\n      pretty-ms:\n        specifier: ^7.0.1\n        version: 7.0.1\n      serialize-error:\n        specifier: ^8.0.0\n        version: 8.1.0\n    devDependencies:\n      '@slonik/eslint-config':\n        specifier: workspace:^\n        version: link:../eslint-config\n      ava:\n        specifier: ^6.1.3\n        version: 6.1.3\n      eslint:\n        specifier: ^9.16.0\n        version: 9.17.0(jiti@2.4.0)\n      slonik:\n        specifier: ^46.2.0\n        version: link:../slonik\n      ts-node:\n        specifier: ^10.4.0\n        version: 10.9.2(@types/node@22.9.0)(typescript@5.6.3)\n      typescript:\n        specifier: ^5.6.3\n        version: 5.6.3\n\n  packages/slonik-sql-tag-raw:\n    dependencies:\n      '@slonik/sql-tag':\n        specifier: ^46.2.0\n        version: link:../sql-tag\n      lodash:\n        specifier: ^4.17.20\n        version: 4.17.21\n      roarr:\n        specifier: ^7.21.1\n        version: 7.21.1\n    devDependencies:\n      '@slonik/eslint-config':\n        specifier: workspace:^\n        version: link:../eslint-config\n      ava:\n        specifier: ^6.1.3\n        version: 6.1.3\n      eslint:\n        specifier: ^9.16.0\n        version: 9.17.0(jiti@2.4.0)\n      slonik:\n        specifier: ^46.2.0\n        version: link:../slonik\n      ts-node:\n        specifier: ^10.4.0\n        version: 10.9.2(@types/node@22.9.0)(typescript@5.6.3)\n      typescript:\n        specifier: ^5.6.3\n        version: 5.6.3\n\n  packages/sql-tag:\n    dependencies:\n      '@slonik/errors':\n        specifier: ^46.2.0\n        version: link:../errors\n      '@slonik/types':\n        specifier: ^46.2.0\n        version: link:../types\n      roarr:\n        specifier: ^7.21.1\n        version: 7.21.1\n      safe-stable-stringify:\n        specifier: ^2.4.3\n        version: 2.4.3\n      serialize-error:\n        specifier: ^8.0.0\n        version: 8.1.0\n    devDependencies:\n      '@slonik/eslint-config':\n        specifier: workspace:^\n        version: link:../eslint-config\n      '@types/node':\n        specifier: ^22.9.0\n        version: 22.9.0\n      ava:\n        specifier: ^6.1.3\n        version: 6.1.3\n      cspell:\n        specifier: ^8.16.0\n        version: 8.16.0\n      eslint:\n        specifier: ^9.16.0\n        version: 9.17.0(jiti@2.4.0)\n      nyc:\n        specifier: ^15.1.0\n        version: 15.1.0\n      ts-node:\n        specifier: ^10.9.1\n        version: 10.9.2(@types/node@22.9.0)(typescript@5.6.3)\n      typescript:\n        specifier: ^5.6.3\n        version: 5.6.3\n      zod:\n        specifier: ^3.22.4\n        version: 3.23.8\n\n  packages/test-ssls:\n    dependencies:\n      zod:\n        specifier: ^3\n        version: 3.23.8\n\n  packages/types:\n    dependencies:\n      zod:\n        specifier: ^3\n        version: 3.23.8\n    devDependencies:\n      '@slonik/eslint-config':\n        specifier: workspace:^\n        version: link:../eslint-config\n      '@types/node':\n        specifier: ^22.9.0\n        version: 22.9.0\n      ava:\n        specifier: ^6.1.3\n        version: 6.1.3\n      cspell:\n        specifier: ^8.16.0\n        version: 8.16.0\n      eslint:\n        specifier: ^9.16.0\n        version: 9.17.0(jiti@2.4.0)\n      nyc:\n        specifier: ^15.1.0\n        version: 15.1.0\n      ts-node:\n        specifier: ^10.9.1\n        version: 10.9.2(@types/node@22.9.0)(typescript@5.6.3)\n      typescript:\n        specifier: ^5.6.3\n        version: 5.6.3\n\n  packages/utilities:\n    dependencies:\n      '@slonik/errors':\n        specifier: workspace:^46.2.0\n        version: link:../errors\n      '@slonik/types':\n        specifier: ^46.2.0\n        version: link:../types\n    devDependencies:\n      '@slonik/eslint-config':\n        specifier: workspace:^\n        version: link:../eslint-config\n      '@slonik/test-ssls':\n        specifier: workspace:^\n        version: link:../test-ssls\n      '@types/node':\n        specifier: ^22.9.0\n        version: 22.9.0\n      ava:\n        specifier: ^6.1.3\n        version: 6.1.3\n      cspell:\n        specifier: ^8.16.0\n        version: 8.16.0\n      eslint:\n        specifier: ^9.16.0\n        version: 9.17.0(jiti@2.4.0)\n      nyc:\n        specifier: ^15.1.0\n        version: 15.1.0\n      ts-node:\n        specifier: ^10.9.1\n        version: 10.9.2(@types/node@22.9.0)(typescript@5.6.3)\n      typescript:\n        specifier: ^5.6.3\n        version: 5.6.3\n      zod:\n        specifier: ^3.22.4\n        version: 3.23.8\n\npackages:\n\n  '@ampproject/remapping@2.3.0':\n    resolution: {integrity: sha512-30iZtAPgz+LTIYoeivqYo853f02jBYSd5uGnGpkFV0M3xOt9aN73erkgYAmZU43x4VfqcnLxW9Kpg3R5LC4YYw==}\n    engines: {node: '>=6.0.0'}\n\n  '@ardatan/sync-fetch@0.0.1':\n    resolution: {integrity: sha512-xhlTqH0m31mnsG0tIP4ETgfSB6gXDaYYsUWTrlUV93fFQPI9dd8hE0Ot6MHLCtqgB32hwJAC3YZMWlXZw7AleA==}\n    engines: {node: '>=14'}\n\n  '@arrows/array@1.4.1':\n    resolution: {integrity: sha512-MGYS8xi3c4tTy1ivhrVntFvufoNzje0PchjEz6G/SsWRgUKxL4tKwS6iPdO8vsaJYldagAeWMd5KRD0aX3Q39g==}\n\n  '@arrows/composition@1.2.2':\n    resolution: {integrity: sha512-9fh1yHwrx32lundiB3SlZ/VwuStPB4QakPsSLrGJFH6rCXvdrd060ivAZ7/2vlqPnEjBkPRRXOcG1YOu19p2GQ==}\n\n  '@arrows/dispatch@1.0.3':\n    resolution: {integrity: sha512-v/HwvrFonitYZM2PmBlAlCqVqxrkIIoiEuy5bQgn0BdfvlL0ooSBzcPzTMrtzY8eYktPyYcHg8fLbSgyybXEqw==}\n\n  '@arrows/error@1.0.2':\n    resolution: {integrity: sha512-yvkiv1ay4Z3+Z6oQsUkedsQm5aFdyPpkBUQs8vejazU/RmANABx6bMMcBPPHI4aW43VPQmXFfBzr/4FExwWTEA==}\n\n  '@arrows/multimethod@1.4.1':\n    resolution: {integrity: sha512-AZnAay0dgPnCJxn3We5uKiB88VL+1ZIF2SjZohLj6vqY2UyvB/sKdDnFP+LZNVsTC5lcnGPmLlRRkAh4sXkXsQ==}\n\n  '@babel/code-frame@7.24.7':\n    resolution: {integrity: sha512-BcYH1CVJBO9tvyIZ2jVeXgSIMvGZ2FDRvDdOIVQyuklNKSsx+eppDEBq/g47Ayw+RqNFE+URvOShmf+f/qwAlA==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/code-frame@7.26.2':\n    resolution: {integrity: sha512-RJlIHRueQgwWitWgF8OdFYGZX328Ax5BCemNGlqHfplnRT9ESi8JkFlvaVYbS+UubVY6dpv87Fs2u5M29iNFVQ==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/compat-data@7.24.7':\n    resolution: {integrity: sha512-qJzAIcv03PyaWqxRgO4mSU3lihncDT296vnyuE2O8uA4w3UHWI4S3hgeZd1L8W1Bft40w9JxJ2b412iDUFFRhw==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/core@7.24.7':\n    resolution: {integrity: sha512-nykK+LEK86ahTkX/3TgauT0ikKoNCfKHEaZYTUVupJdTLzGNvrblu4u6fa7DhZONAltdf8e662t/abY8idrd/g==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/generator@7.24.7':\n    resolution: {integrity: sha512-oipXieGC3i45Y1A41t4tAqpnEZWgB/lC6Ehh6+rOviR5XWpTtMmLN+fGjz9vOiNRt0p6RtO6DtD0pdU3vpqdSA==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/generator@7.26.2':\n    resolution: {integrity: sha512-zevQbhbau95nkoxSq3f/DC/SC+EEOUZd3DYqfSkMhY2/wfSeaHV1Ew4vk8e+x8lja31IbyuUa2uQ3JONqKbysw==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/helper-compilation-targets@7.24.7':\n    resolution: {integrity: sha512-ctSdRHBi20qWOfy27RUb4Fhp07KSJ3sXcuSvTrXrc4aG8NSYDo1ici3Vhg9bg69y5bj0Mr1lh0aeEgTvc12rMg==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/helper-environment-visitor@7.24.7':\n    resolution: {integrity: sha512-DoiN84+4Gnd0ncbBOM9AZENV4a5ZiL39HYMyZJGZ/AZEykHYdJw0wW3kdcsh9/Kn+BRXHLkkklZ51ecPKmI1CQ==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/helper-function-name@7.24.7':\n    resolution: {integrity: sha512-FyoJTsj/PEUWu1/TYRiXTIHc8lbw+TDYkZuoE43opPS5TrI7MyONBE1oNvfguEXAD9yhQRrVBnXdXzSLQl9XnA==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/helper-hoist-variables@7.24.7':\n    resolution: {integrity: sha512-MJJwhkoGy5c4ehfoRyrJ/owKeMl19U54h27YYftT0o2teQ3FJ3nQUf/I3LlJsX4l3qlw7WRXUmiyajvHXoTubQ==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/helper-module-imports@7.24.7':\n    resolution: {integrity: sha512-8AyH3C+74cgCVVXow/myrynrAGv+nTVg5vKu2nZph9x7RcRwzmh0VFallJuFTZ9mx6u4eSdXZfcOzSqTUm0HCA==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/helper-module-transforms@7.24.7':\n    resolution: {integrity: sha512-1fuJEwIrp+97rM4RWdO+qrRsZlAeL1lQJoPqtCYWv0NL115XM93hIH4CSRln2w52SqvmY5hqdtauB6QFCDiZNQ==}\n    engines: {node: '>=6.9.0'}\n    peerDependencies:\n      '@babel/core': ^7.0.0\n\n  '@babel/helper-plugin-utils@7.25.9':\n    resolution: {integrity: sha512-kSMlyUVdWe25rEsRGviIgOWnoT/nfABVWlqt9N19/dIPWViAOW2s9wznP5tURbs/IDuNk4gPy3YdYRgH3uxhBw==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/helper-simple-access@7.24.7':\n    resolution: {integrity: sha512-zBAIvbCMh5Ts+b86r/CjU+4XGYIs+R1j951gxI3KmmxBMhCg4oQMsv6ZXQ64XOm/cvzfU1FmoCyt6+owc5QMYg==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/helper-split-export-declaration@7.24.7':\n    resolution: {integrity: sha512-oy5V7pD+UvfkEATUKvIjvIAH/xCzfsFVw7ygW2SI6NClZzquT+mwdTfgfdbUiceh6iQO0CHtCPsyze/MZ2YbAA==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/helper-string-parser@7.24.7':\n    resolution: {integrity: sha512-7MbVt6xrwFQbunH2DNQsAP5sTGxfqQtErvBIvIMi6EQnbgUOuVYanvREcmFrOPhoXBrTtjhhP+lW+o5UfK+tDg==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/helper-string-parser@7.25.9':\n    resolution: {integrity: sha512-4A/SCr/2KLd5jrtOMFzaKjVtAei3+2r/NChoBNoZ3EyP/+GlhoaEGoWOZUmFmoITP7zOJyHIMm+DYRd8o3PvHA==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/helper-validator-identifier@7.24.7':\n    resolution: {integrity: sha512-rR+PBcQ1SMQDDyF6X0wxtG8QyLCgUB0eRAGguqRLfkCA87l7yAP7ehq8SNj96OOGTO8OBV70KhuFYcIkHXOg0w==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/helper-validator-identifier@7.25.9':\n    resolution: {integrity: sha512-Ed61U6XJc3CVRfkERJWDz4dJwKe7iLmmJsbOGu9wSloNSFttHV0I8g6UAgb7qnK5ly5bGLPd4oXZlxCdANBOWQ==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/helper-validator-option@7.24.7':\n    resolution: {integrity: sha512-yy1/KvjhV/ZCL+SM7hBrvnZJ3ZuT9OuZgIJAGpPEToANvc3iM6iDvBnRjtElWibHU6n8/LPR/EjX9EtIEYO3pw==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/helpers@7.24.7':\n    resolution: {integrity: sha512-NlmJJtvcw72yRJRcnCmGvSi+3jDEg8qFu3z0AFoymmzLx5ERVWyzd9kVXr7Th9/8yIJi2Zc6av4Tqz3wFs8QWg==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/highlight@7.24.7':\n    resolution: {integrity: sha512-EStJpq4OuY8xYfhGVXngigBJRWxftKX9ksiGDnmlY3o7B/V7KIAc9X4oiK87uPJSc/vs5L869bem5fhZa8caZw==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/parser@7.24.7':\n    resolution: {integrity: sha512-9uUYRm6OqQrCqQdG1iCBwBPZgN8ciDBro2nIOFaiRz1/BCxaI7CNvQbDHvsArAC7Tw9Hda/B3U+6ui9u4HWXPw==}\n    engines: {node: '>=6.0.0'}\n    hasBin: true\n\n  '@babel/parser@7.26.2':\n    resolution: {integrity: sha512-DWMCZH9WA4Maitz2q21SRKHo9QXZxkDsbNZoVD62gusNtNBBqDg9i7uOhASfTfIGNzW+O+r7+jAlM8dwphcJKQ==}\n    engines: {node: '>=6.0.0'}\n    hasBin: true\n\n  '@babel/plugin-syntax-import-assertions@7.26.0':\n    resolution: {integrity: sha512-QCWT5Hh830hK5EQa7XzuqIkQU9tT/whqbDz7kuaZMHFl1inRRg7JnuAEOQ0Ur0QUl0NufCk1msK2BeY79Aj/eg==}\n    engines: {node: '>=6.9.0'}\n    peerDependencies:\n      '@babel/core': ^7.0.0-0\n\n  '@babel/runtime-corejs3@7.26.0':\n    resolution: {integrity: sha512-YXHu5lN8kJCb1LOb9PgV6pvak43X2h4HvRApcN5SdWeaItQOzfn1hgP6jasD6KWQyJDBxrVmA9o9OivlnNJK/w==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/runtime@7.24.7':\n    resolution: {integrity: sha512-UwgBRMjJP+xv857DCngvqXI3Iq6J4v0wXmwc6sapg+zyhbwmQX67LUEFrkK5tbyJ30jGuG3ZvWpBiB9LCy1kWw==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/template@7.24.7':\n    resolution: {integrity: sha512-jYqfPrU9JTF0PmPy1tLYHW4Mp4KlgxJD9l2nP9fD6yT/ICi554DmrWBAEYpIelzjHf1msDP3PxJIRt/nFNfBig==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/template@7.25.9':\n    resolution: {integrity: sha512-9DGttpmPvIxBb/2uwpVo3dqJ+O6RooAFOS+lB+xDqoE2PVCE8nfoHMdZLpfCQRLwvohzXISPZcgxt80xLfsuwg==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/traverse@7.24.7':\n    resolution: {integrity: sha512-yb65Ed5S/QAcewNPh0nZczy9JdYXkkAbIsEo+P7BE7yO3txAY30Y/oPa3QkQ5It3xVG2kpKMg9MsdxZaO31uKA==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/traverse@7.25.9':\n    resolution: {integrity: sha512-ZCuvfwOwlz/bawvAuvcj8rrithP2/N55Tzz342AkTvq4qaWbGfmCk/tKhNaV2cthijKrPAA8SRJV5WWe7IBMJw==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/types@7.24.7':\n    resolution: {integrity: sha512-XEFXSlxiG5td2EJRe8vOmRbaXVgfcBlszKujvVmWIK/UpywWljQCfzAv3RQCGujWQ1RD4YYWEAqDXfuJiy8f5Q==}\n    engines: {node: '>=6.9.0'}\n\n  '@babel/types@7.26.0':\n    resolution: {integrity: sha512-Z/yiTPj+lDVnF7lWeKCIJzaIkI0vYO87dMpZ4bg4TDrFe4XXLFWL1TbXU27gBP3QccxV9mZICCrnjnYlJjXHOA==}\n    engines: {node: '>=6.9.0'}\n\n  '@changesets/apply-release-plan@7.0.3':\n    resolution: {integrity: sha512-klL6LCdmfbEe9oyfLxnidIf/stFXmrbFO/3gT5LU5pcyoZytzJe4gWpTBx3BPmyNPl16dZ1xrkcW7b98e3tYkA==}\n\n  '@changesets/assemble-release-plan@6.0.2':\n    resolution: {integrity: sha512-n9/Tdq+ze+iUtjmq0mZO3pEhJTKkku9hUxtUadW30jlN7kONqJG3O6ALeXrmc6gsi/nvoCuKjqEJ68Hk8RbMTQ==}\n\n  '@changesets/changelog-git@0.2.0':\n    resolution: {integrity: sha512-bHOx97iFI4OClIT35Lok3sJAwM31VbUM++gnMBV16fdbtBhgYu4dxsphBF/0AZZsyAHMrnM0yFcj5gZM1py6uQ==}\n\n  '@changesets/changelog-github@0.5.0':\n    resolution: {integrity: sha512-zoeq2LJJVcPJcIotHRJEEA2qCqX0AQIeFE+L21L8sRLPVqDhSXY8ZWAt2sohtBpFZkBwu+LUwMSKRr2lMy3LJA==}\n\n  '@changesets/cli@2.27.5':\n    resolution: {integrity: sha512-UVppOvzCjjylBenFcwcZNG5IaZ8jsIaEVraV/pbXgukYNb0Oqa0d8UWb0LkYzA1Bf1HmUrOfccFcRLheRuA7pA==}\n    hasBin: true\n\n  '@changesets/config@3.0.1':\n    resolution: {integrity: sha512-nCr8pOemUjvGJ8aUu8TYVjqnUL+++bFOQHBVmtNbLvKzIDkN/uiP/Z4RKmr7NNaiujIURHySDEGFPftR4GbTUA==}\n\n  '@changesets/errors@0.2.0':\n    resolution: {integrity: sha512-6BLOQUscTpZeGljvyQXlWOItQyU71kCdGz7Pi8H8zdw6BI0g3m43iL4xKUVPWtG+qrrL9DTjpdn8eYuCQSRpow==}\n\n  '@changesets/get-dependents-graph@2.1.0':\n    resolution: {integrity: sha512-QOt6pQq9RVXKGHPVvyKimJDYJumx7p4DO5MO9AhRJYgAPgv0emhNqAqqysSVKHBm4sxKlGN4S1zXOIb5yCFuhQ==}\n\n  '@changesets/get-github-info@0.6.0':\n    resolution: {integrity: sha512-v/TSnFVXI8vzX9/w3DU2Ol+UlTZcu3m0kXTjTT4KlAdwSvwutcByYwyYn9hwerPWfPkT2JfpoX0KgvCEi8Q/SA==}\n\n  '@changesets/get-release-plan@4.0.2':\n    resolution: {integrity: sha512-rOalz7nMuMV2vyeP7KBeAhqEB7FM2GFPO5RQSoOoUKKH9L6wW3QyPA2K+/rG9kBrWl2HckPVES73/AuwPvbH3w==}\n\n  '@changesets/get-version-range-type@0.4.0':\n    resolution: {integrity: sha512-hwawtob9DryoGTpixy1D3ZXbGgJu1Rhr+ySH2PvTLHvkZuQ7sRT4oQwMh0hbqZH1weAooedEjRsbrWcGLCeyVQ==}\n\n  '@changesets/git@3.0.0':\n    resolution: {integrity: sha512-vvhnZDHe2eiBNRFHEgMiGd2CT+164dfYyrJDhwwxTVD/OW0FUD6G7+4DIx1dNwkwjHyzisxGAU96q0sVNBns0w==}\n\n  '@changesets/logger@0.1.0':\n    resolution: {integrity: sha512-pBrJm4CQm9VqFVwWnSqKEfsS2ESnwqwH+xR7jETxIErZcfd1u2zBSqrHbRHR7xjhSgep9x2PSKFKY//FAshA3g==}\n\n  '@changesets/parse@0.4.0':\n    resolution: {integrity: sha512-TS/9KG2CdGXS27S+QxbZXgr8uPsP4yNJYb4BC2/NeFUj80Rni3TeD2qwWmabymxmrLo7JEsytXH1FbpKTbvivw==}\n\n  '@changesets/pre@2.0.0':\n    resolution: {integrity: sha512-HLTNYX/A4jZxc+Sq8D1AMBsv+1qD6rmmJtjsCJa/9MSRybdxh0mjbTvE6JYZQ/ZiQ0mMlDOlGPXTm9KLTU3jyw==}\n\n  '@changesets/read@0.6.0':\n    resolution: {integrity: sha512-ZypqX8+/im1Fm98K4YcZtmLKgjs1kDQ5zHpc2U1qdtNBmZZfo/IBiG162RoP0CUF05tvp2y4IspH11PLnPxuuw==}\n\n  '@changesets/should-skip-package@0.1.0':\n    resolution: {integrity: sha512-FxG6Mhjw7yFStlSM7Z0Gmg3RiyQ98d/9VpQAZ3Fzr59dCOM9G6ZdYbjiSAt0XtFr9JR5U2tBaJWPjrkGGc618g==}\n\n  '@changesets/types@4.1.0':\n    resolution: {integrity: sha512-LDQvVDv5Kb50ny2s25Fhm3d9QSZimsoUGBsUioj6MC3qbMUCuC8GPIvk/M6IvXx3lYhAs0lwWUQLb+VIEUCECw==}\n\n  '@changesets/types@6.0.0':\n    resolution: {integrity: sha512-b1UkfNulgKoWfqyHtzKS5fOZYSJO+77adgL7DLRDr+/7jhChN+QcHnbjiQVOz/U+Ts3PGNySq7diAItzDgugfQ==}\n\n  '@changesets/write@0.3.1':\n    resolution: {integrity: sha512-SyGtMXzH3qFqlHKcvFY2eX+6b0NGiFcNav8AFsYwy5l8hejOeoeTDemu5Yjmke2V5jpzY+pBvM0vCCQ3gdZpfw==}\n\n  '@cspell/cspell-bundled-dicts@8.16.0':\n    resolution: {integrity: sha512-R0Eqq5kTZnmZ0elih5uY3TWjMqqAeMl7ciU7maUs+m1FNjCEdJXtJ9wrQxNgjmXi0tX8cvahZRO3O558tEz/KA==}\n    engines: {node: '>=18'}\n\n  '@cspell/cspell-json-reporter@8.16.0':\n    resolution: {integrity: sha512-KLjPK94gA3JNuWy70LeenJ6EL3SFk2ejERKYJ6SVV/cVOKIvVd2qe42yX3/A/DkF2xzuZ2LD4z0sfoqQL1BaqA==}\n    engines: {node: '>=18'}\n\n  '@cspell/cspell-pipe@8.16.0':\n    resolution: {integrity: sha512-WoCgrv/mrtwCY4lhc6vEcqN3AQ7lT6K0NW5ShoSo116U2tRaW0unApIYH4Va8u7T9g3wyspFEceQRR1xD9qb9w==}\n    engines: {node: '>=18'}\n\n  '@cspell/cspell-resolver@8.16.0':\n    resolution: {integrity: sha512-b+99bph43ptkXlQHgPXSkN/jK6LQHy2zL1Fm9up7+x6Yr64bxAzWzoeqJAPtnrPvFuOrFN0jZasZzKBw8CvrrQ==}\n    engines: {node: '>=18'}\n\n  '@cspell/cspell-service-bus@8.16.0':\n    resolution: {integrity: sha512-+fn763JKA4EYCOv+1VShFq015UMEBAFRDr+rlCnesgLE0fv9TSFVLsjOfh9/g6GuGQLCRLUqKztwwuueeErstQ==}\n    engines: {node: '>=18'}\n\n  '@cspell/cspell-types@8.16.0':\n    resolution: {integrity: sha512-bGrIK7p4NVsK+QX/CYWmjax+FkzfSIZaIaoiBESGV5gmwgXDVRMJ3IP6tQVAmTtckOYHCmtT5CZgI8zXWr8dHQ==}\n    engines: {node: '>=18'}\n\n  '@cspell/dict-ada@4.0.5':\n    resolution: {integrity: sha512-6/RtZ/a+lhFVmrx/B7bfP7rzC4yjEYe8o74EybXcvu4Oue6J4Ey2WSYj96iuodloj1LWrkNCQyX5h4Pmcj0Iag==}\n\n  '@cspell/dict-al@1.0.3':\n    resolution: {integrity: sha512-V1HClwlfU/qwSq2Kt+MkqRAsonNu3mxjSCDyGRecdLGIHmh7yeEeaxqRiO/VZ4KP+eVSiSIlbwrb5YNFfxYZbw==}\n\n  '@cspell/dict-aws@4.0.7':\n    resolution: {integrity: sha512-PoaPpa2NXtSkhGIMIKhsJUXB6UbtTt6Ao3x9JdU9kn7fRZkwD4RjHDGqulucIOz7KeEX/dNRafap6oK9xHe4RA==}\n\n  '@cspell/dict-bash@4.1.8':\n    resolution: {integrity: sha512-I2CM2pTNthQwW069lKcrVxchJGMVQBzru2ygsHCwgidXRnJL/NTjAPOFTxN58Jc1bf7THWghfEDyKX/oyfc0yg==}\n\n  '@cspell/dict-companies@3.1.7':\n    resolution: {integrity: sha512-ncVs/efuAkP1/tLDhWbXukBjgZ5xOUfe03neHMWsE8zvXXc5+Lw6TX5jaJXZLOoES/f4j4AhRE20jsPCF5pm+A==}\n\n  '@cspell/dict-cpp@6.0.2':\n    resolution: {integrity: sha512-yw5eejWvY4bAnc6LUA44m4WsFwlmgPt2uMSnO7QViGMBDuoeopMma4z9XYvs4lSjTi8fIJs/A1YDfM9AVzb8eg==}\n\n  '@cspell/dict-cryptocurrencies@5.0.3':\n    resolution: {integrity: sha512-bl5q+Mk+T3xOZ12+FG37dB30GDxStza49Rmoax95n37MTLksk9wBo1ICOlPJ6PnDUSyeuv4SIVKgRKMKkJJglA==}\n\n  '@cspell/dict-csharp@4.0.5':\n    resolution: {integrity: sha512-c/sFnNgtRwRJxtC3JHKkyOm+U3/sUrltFeNwml9VsxKBHVmvlg4tk4ar58PdpW9/zTlGUkWi2i85//DN1EsUCA==}\n\n  '@cspell/dict-css@4.0.16':\n    resolution: {integrity: sha512-70qu7L9z/JR6QLyJPk38fNTKitlIHnfunx0wjpWQUQ8/jGADIhMCrz6hInBjqPNdtGpYm8d1dNFyF8taEkOgrQ==}\n\n  '@cspell/dict-dart@2.2.4':\n    resolution: {integrity: sha512-of/cVuUIZZK/+iqefGln8G3bVpfyN6ZtH+LyLkHMoR5tEj+2vtilGNk9ngwyR8L4lEqbKuzSkOxgfVjsXf5PsQ==}\n\n  '@cspell/dict-data-science@2.0.5':\n    resolution: {integrity: sha512-nNSILXmhSJox9/QoXICPQgm8q5PbiSQP4afpbkBqPi/u/b3K9MbNH5HvOOa6230gxcGdbZ9Argl2hY/U8siBlg==}\n\n  '@cspell/dict-django@4.1.3':\n    resolution: {integrity: sha512-yBspeL3roJlO0a1vKKNaWABURuHdHZ9b1L8d3AukX0AsBy9snSggc8xCavPmSzNfeMDXbH+1lgQiYBd3IW03fg==}\n\n  '@cspell/dict-docker@1.1.11':\n    resolution: {integrity: sha512-s0Yhb16/R+UT1y727ekbR/itWQF3Qz275DR1ahOa66wYtPjHUXmhM3B/LT3aPaX+hD6AWmK23v57SuyfYHUjsw==}\n\n  '@cspell/dict-dotnet@5.0.8':\n    resolution: {integrity: sha512-MD8CmMgMEdJAIPl2Py3iqrx3B708MbCIXAuOeZ0Mzzb8YmLmiisY7QEYSZPg08D7xuwARycP0Ki+bb0GAkFSqg==}\n\n  '@cspell/dict-elixir@4.0.6':\n    resolution: {integrity: sha512-TfqSTxMHZ2jhiqnXlVKM0bUADtCvwKQv2XZL/DI0rx3doG8mEMS8SGPOmiyyGkHpR/pGOq18AFH3BEm4lViHIw==}\n\n  '@cspell/dict-en-common-misspellings@2.0.7':\n    resolution: {integrity: sha512-qNFo3G4wyabcwnM+hDrMYKN9vNVg/k9QkhqSlSst6pULjdvPyPs1mqz1689xO/v9t8e6sR4IKc3CgUXDMTYOpA==}\n\n  '@cspell/dict-en-gb@1.1.33':\n    resolution: {integrity: sha512-tKSSUf9BJEV+GJQAYGw5e+ouhEe2ZXE620S7BLKe3ZmpnjlNG9JqlnaBhkIMxKnNFkLY2BP/EARzw31AZnOv4g==}\n\n  '@cspell/dict-en_us@4.3.27':\n    resolution: {integrity: sha512-7JYHahRWpi0VykWFTSM03KL/0fs6YtYfpOaTAg4N/d0wB2GfwVG/FJ/SBCjD4LBc6Rx9dzdo95Hs4BB8GPQbOA==}\n\n  '@cspell/dict-filetypes@3.0.8':\n    resolution: {integrity: sha512-D3N8sm/iptzfVwsib/jvpX+K/++rM8SRpLDFUaM4jxm8EyGmSIYRbKZvdIv5BkAWmMlTWoRqlLn7Yb1b11jKJg==}\n\n  '@cspell/dict-flutter@1.0.3':\n    resolution: {integrity: sha512-52C9aUEU22ptpgYh6gQyIdA4MP6NPwzbEqndfgPh3Sra191/kgs7CVqXiO1qbtZa9gnYHUoVApkoxRE7mrXHfg==}\n\n  '@cspell/dict-fonts@4.0.3':\n    resolution: {integrity: sha512-sPd17kV5qgYXLteuHFPn5mbp/oCHKgitNfsZLFC3W2fWEgZlhg4hK+UGig3KzrYhhvQ8wBnmZrAQm0TFKCKzsA==}\n\n  '@cspell/dict-fsharp@1.0.4':\n    resolution: {integrity: sha512-G5wk0o1qyHUNi9nVgdE1h5wl5ylq7pcBjX8vhjHcO4XBq20D5eMoXjwqMo/+szKAqzJ+WV3BgAL50akLKrT9Rw==}\n\n  '@cspell/dict-fullstack@3.2.3':\n    resolution: {integrity: sha512-62PbndIyQPH11mAv0PyiyT0vbwD0AXEocPpHlCHzfb5v9SspzCCbzQ/LIBiFmyRa+q5LMW35CnSVu6OXdT+LKg==}\n\n  '@cspell/dict-gaming-terms@1.0.8':\n    resolution: {integrity: sha512-7OL0zTl93WFWhhtpXFrtm9uZXItC3ncAs8d0iQDMMFVNU1rBr6raBNxJskxE5wx2Ant12fgI66ZGVagXfN+yfA==}\n\n  '@cspell/dict-git@3.0.3':\n    resolution: {integrity: sha512-LSxB+psZ0qoj83GkyjeEH/ZViyVsGEF/A6BAo8Nqc0w0HjD2qX/QR4sfA6JHUgQ3Yi/ccxdK7xNIo67L2ScW5A==}\n\n  '@cspell/dict-golang@6.0.16':\n    resolution: {integrity: sha512-hZOBlgcguv2Hdc93n2zjdAQm1j3grsN9T9WhPnQ1wh2vUDoCLEujg+6gWhjcLb8ECOcwZTWgNyQLWeOxEsAj/w==}\n\n  '@cspell/dict-google@1.0.4':\n    resolution: {integrity: sha512-JThUT9eiguCja1mHHLwYESgxkhk17Gv7P3b1S7ZJzXw86QyVHPrbpVoMpozHk0C9o+Ym764B7gZGKmw9uMGduQ==}\n\n  '@cspell/dict-haskell@4.0.4':\n    resolution: {integrity: sha512-EwQsedEEnND/vY6tqRfg9y7tsnZdxNqOxLXSXTsFA6JRhUlr8Qs88iUUAfsUzWc4nNmmzQH2UbtT25ooG9x4nA==}\n\n  '@cspell/dict-html-symbol-entities@4.0.3':\n    resolution: {integrity: sha512-aABXX7dMLNFdSE8aY844X4+hvfK7977sOWgZXo4MTGAmOzR8524fjbJPswIBK7GaD3+SgFZ2yP2o0CFvXDGF+A==}\n\n  '@cspell/dict-html@4.0.10':\n    resolution: {integrity: sha512-I9uRAcdtHbh0wEtYZlgF0TTcgH0xaw1B54G2CW+tx4vHUwlde/+JBOfIzird4+WcMv4smZOfw+qHf7puFUbI5g==}\n\n  '@cspell/dict-java@5.0.10':\n    resolution: {integrity: sha512-pVNcOnmoGiNL8GSVq4WbX/Vs2FGS0Nej+1aEeGuUY9CU14X8yAVCG+oih5ZoLt1jaR8YfR8byUF8wdp4qG4XIw==}\n\n  '@cspell/dict-julia@1.0.4':\n    resolution: {integrity: sha512-bFVgNX35MD3kZRbXbJVzdnN7OuEqmQXGpdOi9jzB40TSgBTlJWA4nxeAKV4CPCZxNRUGnLH0p05T/AD7Aom9/w==}\n\n  '@cspell/dict-k8s@1.0.9':\n    resolution: {integrity: sha512-Q7GELSQIzo+BERl2ya/nBEnZeQC+zJP19SN1pI6gqDYraM51uYJacbbcWLYYO2Y+5joDjNt/sd/lJtLaQwoSlA==}\n\n  '@cspell/dict-latex@4.0.3':\n    resolution: {integrity: sha512-2KXBt9fSpymYHxHfvhUpjUFyzrmN4c4P8mwIzweLyvqntBT3k0YGZJSriOdjfUjwSygrfEwiuPI1EMrvgrOMJw==}\n\n  '@cspell/dict-lorem-ipsum@4.0.3':\n    resolution: {integrity: sha512-WFpDi/PDYHXft6p0eCXuYnn7mzMEQLVeqpO+wHSUd+kz5ADusZ4cpslAA4wUZJstF1/1kMCQCZM6HLZic9bT8A==}\n\n  '@cspell/dict-lua@4.0.6':\n    resolution: {integrity: sha512-Jwvh1jmAd9b+SP9e1GkS2ACbqKKRo9E1f9GdjF/ijmooZuHU0hPyqvnhZzUAxO1egbnNjxS/J2T6iUtjAUK2KQ==}\n\n  '@cspell/dict-makefile@1.0.3':\n    resolution: {integrity: sha512-R3U0DSpvTs6qdqfyBATnePj9Q/pypkje0Nj26mQJ8TOBQutCRAJbr2ZFAeDjgRx5EAJU/+8txiyVF97fbVRViw==}\n\n  '@cspell/dict-markdown@2.0.7':\n    resolution: {integrity: sha512-F9SGsSOokFn976DV4u/1eL4FtKQDSgJHSZ3+haPRU5ki6OEqojxKa8hhj4AUrtNFpmBaJx/WJ4YaEzWqG7hgqg==}\n    peerDependencies:\n      '@cspell/dict-css': ^4.0.16\n      '@cspell/dict-html': ^4.0.10\n      '@cspell/dict-html-symbol-entities': ^4.0.3\n      '@cspell/dict-typescript': ^3.1.11\n\n  '@cspell/dict-monkeyc@1.0.9':\n    resolution: {integrity: sha512-Jvf6g5xlB4+za3ThvenYKREXTEgzx5gMUSzrAxIiPleVG4hmRb/GBSoSjtkGaibN3XxGx5x809gSTYCA/IHCpA==}\n\n  '@cspell/dict-node@5.0.5':\n    resolution: {integrity: sha512-7NbCS2E8ZZRZwlLrh2sA0vAk9n1kcTUiRp/Nia8YvKaItGXLfxYqD2rMQ3HpB1kEutal6hQLVic3N2Yi1X7AaA==}\n\n  '@cspell/dict-npm@5.1.12':\n    resolution: {integrity: sha512-ZPyOXa7CdluSEZT1poDikD5pYbeUrRXzHmfpH0jVKVV8wdoQgxOy7I/btRprPeuF9ig5cYrLUo77r1iit1boLw==}\n\n  '@cspell/dict-php@4.0.13':\n    resolution: {integrity: sha512-P6sREMZkhElzz/HhXAjahnICYIqB/HSGp1EhZh+Y6IhvC15AzgtDP8B8VYCIsQof6rPF1SQrFwunxOv8H1e2eg==}\n\n  '@cspell/dict-powershell@5.0.13':\n    resolution: {integrity: sha512-0qdj0XZIPmb77nRTynKidRJKTU0Fl+10jyLbAhFTuBWKMypVY06EaYFnwhsgsws/7nNX8MTEQuewbl9bWFAbsg==}\n\n  '@cspell/dict-public-licenses@2.0.11':\n    resolution: {integrity: sha512-rR5KjRUSnVKdfs5G+gJ4oIvQvm8+NJ6cHWY2N+GE69/FSGWDOPHxulCzeGnQU/c6WWZMSimG9o49i9r//lUQyA==}\n\n  '@cspell/dict-python@4.2.12':\n    resolution: {integrity: sha512-U25eOFu+RE0aEcF2AsxZmq3Lic7y9zspJ9SzjrC0mfJz+yr3YmSCw4E0blMD3mZoNcf7H/vMshuKIY5AY36U+Q==}\n\n  '@cspell/dict-r@2.0.4':\n    resolution: {integrity: sha512-cBpRsE/U0d9BRhiNRMLMH1PpWgw+N+1A2jumgt1if9nBGmQw4MUpg2u9I0xlFVhstTIdzXiLXMxP45cABuiUeQ==}\n\n  '@cspell/dict-ruby@5.0.7':\n    resolution: {integrity: sha512-4/d0hcoPzi5Alk0FmcyqlzFW9lQnZh9j07MJzPcyVO62nYJJAGKaPZL2o4qHeCS/od/ctJC5AHRdoUm0ktsw6Q==}\n\n  '@cspell/dict-rust@4.0.10':\n    resolution: {integrity: sha512-6o5C8566VGTTctgcwfF3Iy7314W0oMlFFSQOadQ0OEdJ9Z9ERX/PDimrzP3LGuOrvhtEFoK8pj+BLnunNwRNrw==}\n\n  '@cspell/dict-scala@5.0.6':\n    resolution: {integrity: sha512-tl0YWAfjUVb4LyyE4JIMVE8DlLzb1ecHRmIWc4eT6nkyDqQgHKzdHsnusxFEFMVLIQomgSg0Zz6hJ5S1E4W4ww==}\n\n  '@cspell/dict-software-terms@4.1.15':\n    resolution: {integrity: sha512-mxX6jIDA6u7BkR2NkxycA+hf41LsaaQTN/9a6hY2UK9vwNS1cAgAIxUr7YDGU3kZ3sqg58XOYX/KFw/PJtMRmQ==}\n\n  '@cspell/dict-sql@2.1.8':\n    resolution: {integrity: sha512-dJRE4JV1qmXTbbGm6WIcg1knmR6K5RXnQxF4XHs5HA3LAjc/zf77F95i5LC+guOGppVF6Hdl66S2UyxT+SAF3A==}\n\n  '@cspell/dict-svelte@1.0.5':\n    resolution: {integrity: sha512-sseHlcXOqWE4Ner9sg8KsjxwSJ2yssoJNqFHR9liWVbDV+m7kBiUtn2EB690TihzVsEmDr/0Yxrbb5Bniz70mA==}\n\n  '@cspell/dict-swift@2.0.4':\n    resolution: {integrity: sha512-CsFF0IFAbRtYNg0yZcdaYbADF5F3DsM8C4wHnZefQy8YcHP/qjAF/GdGfBFBLx+XSthYuBlo2b2XQVdz3cJZBw==}\n\n  '@cspell/dict-terraform@1.0.6':\n    resolution: {integrity: sha512-Sqm5vGbXuI9hCFcr4w6xWf4Y25J9SdleE/IqfM6RySPnk8lISEmVdax4k6+Kinv9qaxyvnIbUUN4WFLWcBPQAg==}\n\n  '@cspell/dict-typescript@3.1.11':\n    resolution: {integrity: sha512-FwvK5sKbwrVpdw0e9+1lVTl8FPoHYvfHRuQRQz2Ql5XkC0gwPPkpoyD1zYImjIyZRoYXk3yp9j8ss4iz7A7zoQ==}\n\n  '@cspell/dict-vue@3.0.3':\n    resolution: {integrity: sha512-akmYbrgAGumqk1xXALtDJcEcOMYBYMnkjpmGzH13Ozhq1mkPF4VgllFQlm1xYde+BUKNnzMgPEzxrL2qZllgYA==}\n\n  '@cspell/dynamic-import@8.16.0':\n    resolution: {integrity: sha512-FH+B5y71qfunagXiLSJhXP9h/Vwb1Z8Cc/hLmliGekw/Y8BuYknL86tMg9grXBYNmM0kifIv6ZesQl8Km/p/rA==}\n    engines: {node: '>=18.0'}\n\n  '@cspell/filetypes@8.16.0':\n    resolution: {integrity: sha512-u2Ub0uSwXFPJFvXhAO/0FZBj3sMr4CeYCiQwTUsdFRkRMFpbTc7Vf+a+aC2vIj6WcaWrYXrJy3NZF/yjqF6SGw==}\n    engines: {node: '>=18'}\n\n  '@cspell/strong-weak-map@8.16.0':\n    resolution: {integrity: sha512-R6N12wEIQpBk2uyni/FU1SFSIjP0uql7ynXVcF1ob8/JJeRoikssydi9Xq5J6ghMw+X50u35mFvg9BgWKz0d+g==}\n    engines: {node: '>=18'}\n\n  '@cspell/url@8.16.0':\n    resolution: {integrity: sha512-zW+6hAieD/FjysfjY4mVv7iHWWasBP3ldj6L+xy2p4Kuax1nug7uuJqMHlAVude/OywNwENG0rYaP/P9Pg4O+w==}\n    engines: {node: '>=18.0'}\n\n  '@cspotcode/source-map-support@0.8.1':\n    resolution: {integrity: sha512-IchNf6dN4tHoMFIn/7OE8LWZ19Y6q/67Bmf6vnGREv8RSbBVb9LPJxEcnwrcwX6ixSvaiGoomAUvu4YSxXrVgw==}\n    engines: {node: '>=12'}\n\n  '@es-joy/jsdoccomment@0.49.0':\n    resolution: {integrity: sha512-xjZTSFgECpb9Ohuk5yMX5RhUEbfeQcuOp8IF60e+wyzWEF0M5xeSgqsfLtvPEX8BIyOX9saZqzuGPmZ8oWc+5Q==}\n    engines: {node: '>=16'}\n\n  '@esbuild/aix-ppc64@0.21.5':\n    resolution: {integrity: sha512-1SDgH6ZSPTlggy1yI6+Dbkiz8xzpHJEVAlF/AM1tHPLsf5STom9rwtjE4hKAF20FfXXNTFqEYXyJNWh1GiZedQ==}\n    engines: {node: '>=12'}\n    cpu: [ppc64]\n    os: [aix]\n\n  '@esbuild/android-arm64@0.21.5':\n    resolution: {integrity: sha512-c0uX9VAUBQ7dTDCjq+wdyGLowMdtR/GoC2U5IYk/7D1H1JYC0qseD7+11iMP2mRLN9RcCMRcjC4YMclCzGwS/A==}\n    engines: {node: '>=12'}\n    cpu: [arm64]\n    os: [android]\n\n  '@esbuild/android-arm@0.21.5':\n    resolution: {integrity: sha512-vCPvzSjpPHEi1siZdlvAlsPxXl7WbOVUBBAowWug4rJHb68Ox8KualB+1ocNvT5fjv6wpkX6o/iEpbDrf68zcg==}\n    engines: {node: '>=12'}\n    cpu: [arm]\n    os: [android]\n\n  '@esbuild/android-x64@0.21.5':\n    resolution: {integrity: sha512-D7aPRUUNHRBwHxzxRvp856rjUHRFW1SdQATKXH2hqA0kAZb1hKmi02OpYRacl0TxIGz/ZmXWlbZgjwWYaCakTA==}\n    engines: {node: '>=12'}\n    cpu: [x64]\n    os: [android]\n\n  '@esbuild/darwin-arm64@0.21.5':\n    resolution: {integrity: sha512-DwqXqZyuk5AiWWf3UfLiRDJ5EDd49zg6O9wclZ7kUMv2WRFr4HKjXp/5t8JZ11QbQfUS6/cRCKGwYhtNAY88kQ==}\n    engines: {node: '>=12'}\n    cpu: [arm64]\n    os: [darwin]\n\n  '@esbuild/darwin-x64@0.21.5':\n    resolution: {integrity: sha512-se/JjF8NlmKVG4kNIuyWMV/22ZaerB+qaSi5MdrXtd6R08kvs2qCN4C09miupktDitvh8jRFflwGFBQcxZRjbw==}\n    engines: {node: '>=12'}\n    cpu: [x64]\n    os: [darwin]\n\n  '@esbuild/freebsd-arm64@0.21.5':\n    resolution: {integrity: sha512-5JcRxxRDUJLX8JXp/wcBCy3pENnCgBR9bN6JsY4OmhfUtIHe3ZW0mawA7+RDAcMLrMIZaf03NlQiX9DGyB8h4g==}\n    engines: {node: '>=12'}\n    cpu: [arm64]\n    os: [freebsd]\n\n  '@esbuild/freebsd-x64@0.21.5':\n    resolution: {integrity: sha512-J95kNBj1zkbMXtHVH29bBriQygMXqoVQOQYA+ISs0/2l3T9/kj42ow2mpqerRBxDJnmkUDCaQT/dfNXWX/ZZCQ==}\n    engines: {node: '>=12'}\n    cpu: [x64]\n    os: [freebsd]\n\n  '@esbuild/linux-arm64@0.21.5':\n    resolution: {integrity: sha512-ibKvmyYzKsBeX8d8I7MH/TMfWDXBF3db4qM6sy+7re0YXya+K1cem3on9XgdT2EQGMu4hQyZhan7TeQ8XkGp4Q==}\n    engines: {node: '>=12'}\n    cpu: [arm64]\n    os: [linux]\n\n  '@esbuild/linux-arm@0.21.5':\n    resolution: {integrity: sha512-bPb5AHZtbeNGjCKVZ9UGqGwo8EUu4cLq68E95A53KlxAPRmUyYv2D6F0uUI65XisGOL1hBP5mTronbgo+0bFcA==}\n    engines: {node: '>=12'}\n    cpu: [arm]\n    os: [linux]\n\n  '@esbuild/linux-ia32@0.21.5':\n    resolution: {integrity: sha512-YvjXDqLRqPDl2dvRODYmmhz4rPeVKYvppfGYKSNGdyZkA01046pLWyRKKI3ax8fbJoK5QbxblURkwK/MWY18Tg==}\n    engines: {node: '>=12'}\n    cpu: [ia32]\n    os: [linux]\n\n  '@esbuild/linux-loong64@0.21.5':\n    resolution: {integrity: sha512-uHf1BmMG8qEvzdrzAqg2SIG/02+4/DHB6a9Kbya0XDvwDEKCoC8ZRWI5JJvNdUjtciBGFQ5PuBlpEOXQj+JQSg==}\n    engines: {node: '>=12'}\n    cpu: [loong64]\n    os: [linux]\n\n  '@esbuild/linux-mips64el@0.21.5':\n    resolution: {integrity: sha512-IajOmO+KJK23bj52dFSNCMsz1QP1DqM6cwLUv3W1QwyxkyIWecfafnI555fvSGqEKwjMXVLokcV5ygHW5b3Jbg==}\n    engines: {node: '>=12'}\n    cpu: [mips64el]\n    os: [linux]\n\n  '@esbuild/linux-ppc64@0.21.5':\n    resolution: {integrity: sha512-1hHV/Z4OEfMwpLO8rp7CvlhBDnjsC3CttJXIhBi+5Aj5r+MBvy4egg7wCbe//hSsT+RvDAG7s81tAvpL2XAE4w==}\n    engines: {node: '>=12'}\n    cpu: [ppc64]\n    os: [linux]\n\n  '@esbuild/linux-riscv64@0.21.5':\n    resolution: {integrity: sha512-2HdXDMd9GMgTGrPWnJzP2ALSokE/0O5HhTUvWIbD3YdjME8JwvSCnNGBnTThKGEB91OZhzrJ4qIIxk/SBmyDDA==}\n    engines: {node: '>=12'}\n    cpu: [riscv64]\n    os: [linux]\n\n  '@esbuild/linux-s390x@0.21.5':\n    resolution: {integrity: sha512-zus5sxzqBJD3eXxwvjN1yQkRepANgxE9lgOW2qLnmr8ikMTphkjgXu1HR01K4FJg8h1kEEDAqDcZQtbrRnB41A==}\n    engines: {node: '>=12'}\n    cpu: [s390x]\n    os: [linux]\n\n  '@esbuild/linux-x64@0.21.5':\n    resolution: {integrity: sha512-1rYdTpyv03iycF1+BhzrzQJCdOuAOtaqHTWJZCWvijKD2N5Xu0TtVC8/+1faWqcP9iBCWOmjmhoH94dH82BxPQ==}\n    engines: {node: '>=12'}\n    cpu: [x64]\n    os: [linux]\n\n  '@esbuild/netbsd-x64@0.21.5':\n    resolution: {integrity: sha512-Woi2MXzXjMULccIwMnLciyZH4nCIMpWQAs049KEeMvOcNADVxo0UBIQPfSmxB3CWKedngg7sWZdLvLczpe0tLg==}\n    engines: {node: '>=12'}\n    cpu: [x64]\n    os: [netbsd]\n\n  '@esbuild/openbsd-x64@0.21.5':\n    resolution: {integrity: sha512-HLNNw99xsvx12lFBUwoT8EVCsSvRNDVxNpjZ7bPn947b8gJPzeHWyNVhFsaerc0n3TsbOINvRP2byTZ5LKezow==}\n    engines: {node: '>=12'}\n    cpu: [x64]\n    os: [openbsd]\n\n  '@esbuild/sunos-x64@0.21.5':\n    resolution: {integrity: sha512-6+gjmFpfy0BHU5Tpptkuh8+uw3mnrvgs+dSPQXQOv3ekbordwnzTVEb4qnIvQcYXq6gzkyTnoZ9dZG+D4garKg==}\n    engines: {node: '>=12'}\n    cpu: [x64]\n    os: [sunos]\n\n  '@esbuild/win32-arm64@0.21.5':\n    resolution: {integrity: sha512-Z0gOTd75VvXqyq7nsl93zwahcTROgqvuAcYDUr+vOv8uHhNSKROyU961kgtCD1e95IqPKSQKH7tBTslnS3tA8A==}\n    engines: {node: '>=12'}\n    cpu: [arm64]\n    os: [win32]\n\n  '@esbuild/win32-ia32@0.21.5':\n    resolution: {integrity: sha512-SWXFF1CL2RVNMaVs+BBClwtfZSvDgtL//G/smwAc5oVK/UPu2Gu9tIaRgFmYFFKrmg3SyAjSrElf0TiJ1v8fYA==}\n    engines: {node: '>=12'}\n    cpu: [ia32]\n    os: [win32]\n\n  '@esbuild/win32-x64@0.21.5':\n    resolution: {integrity: sha512-tQd/1efJuzPC6rCFwEvLtci/xNFcTZknmXs98FYDfGE4wP9ClFV98nyKrzJKVPMhdDnjzLhdUyMX4PsQAPjwIw==}\n    engines: {node: '>=12'}\n    cpu: [x64]\n    os: [win32]\n\n  '@eslint-community/eslint-utils@4.4.1':\n    resolution: {integrity: sha512-s3O3waFUrMV8P/XaF/+ZTp1X9XBZW1a4B97ZnjQF2KYWaFD2A8KyFBsrsfSjEmjn3RGWAIuvlneuZm3CUK3jbA==}\n    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n    peerDependencies:\n      eslint: ^6.0.0 || ^7.0.0 || >=8.0.0\n\n  '@eslint-community/regexpp@4.12.1':\n    resolution: {integrity: sha512-CCZCDJuduB9OUkFkY2IgppNZMi2lBQgD2qzwXkEia16cge2pijY/aXi96CJMquDMn3nJdlPV1A5KrJEXwfLNzQ==}\n    engines: {node: ^12.0.0 || ^14.0.0 || >=16.0.0}\n\n  '@eslint/config-array@0.19.1':\n    resolution: {integrity: sha512-fo6Mtm5mWyKjA/Chy1BYTdn5mGJoDNjC7C64ug20ADsRDGrA85bN3uK3MaKbeRkRuuIEAR5N33Jr1pbm411/PA==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@eslint/core@0.9.1':\n    resolution: {integrity: sha512-GuUdqkyyzQI5RMIWkHhvTWLCyLo1jNK3vzkSyaExH5kHPDHcuL2VOpHjmMY+y3+NC69qAKToBqldTBgYeLSr9Q==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@eslint/eslintrc@3.2.0':\n    resolution: {integrity: sha512-grOjVNN8P3hjJn/eIETF1wwd12DdnwFDoyceUJLYYdkpbwq3nLi+4fqrTAONx7XDALqlL220wC/RHSC/QTI/0w==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@eslint/js@9.17.0':\n    resolution: {integrity: sha512-Sxc4hqcs1kTu0iID3kcZDW3JHq2a77HO9P8CP6YEA/FpH3Ll8UXE2r/86Rz9YJLKme39S9vU5OWNjC6Xl0Cr3w==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@eslint/object-schema@2.1.5':\n    resolution: {integrity: sha512-o0bhxnL89h5Bae5T318nFoFzGy+YE5i/gGkoPAgkmTVdRKTiv3p8JHevPiPaMwoloKfEiiaHlawCqaZMqRm+XQ==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@eslint/plugin-kit@0.2.4':\n    resolution: {integrity: sha512-zSkKow6H5Kdm0ZUQUB2kV5JIXqoG0+uH5YADhaEHswm664N9Db8dXSi0nMJpacpMf+MyyglF1vnZohpEg5yUtg==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@graphql-eslint/eslint-plugin@3.20.1':\n    resolution: {integrity: sha512-RbwVlz1gcYG62sECR1u0XqMh8w5e5XMCCZoMvPQ3nJzEBCTfXLGX727GBoRmSvY1x4gJmqNZ1lsOX7lZY14RIw==}\n    engines: {node: '>=12'}\n    peerDependencies:\n      graphql: ^0.8.0 || ^0.9.0 || ^0.10.0 || ^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0 || ^15.0.0 || ^16.0.0\n\n  '@graphql-tools/batch-execute@8.5.22':\n    resolution: {integrity: sha512-hcV1JaY6NJQFQEwCKrYhpfLK8frSXDbtNMoTur98u10Cmecy1zrqNKSqhEyGetpgHxaJRqszGzKeI3RuroDN6A==}\n    peerDependencies:\n      graphql: ^14.0.0 || ^15.0.0 || ^16.0.0 || ^17.0.0\n\n  '@graphql-tools/code-file-loader@7.3.23':\n    resolution: {integrity: sha512-8Wt1rTtyTEs0p47uzsPJ1vAtfAx0jmxPifiNdmo9EOCuUPyQGEbMaik/YkqZ7QUFIEYEQu+Vgfo8tElwOPtx5Q==}\n    peerDependencies:\n      graphql: ^14.0.0 || ^15.0.0 || ^16.0.0 || ^17.0.0\n\n  '@graphql-tools/delegate@9.0.35':\n    resolution: {integrity: sha512-jwPu8NJbzRRMqi4Vp/5QX1vIUeUPpWmlQpOkXQD2r1X45YsVceyUUBnktCrlJlDB4jPRVy7JQGwmYo3KFiOBMA==}\n    peerDependencies:\n      graphql: ^14.0.0 || ^15.0.0 || ^16.0.0 || ^17.0.0\n\n  '@graphql-tools/executor-graphql-ws@0.0.14':\n    resolution: {integrity: sha512-P2nlkAsPZKLIXImFhj0YTtny5NQVGSsKnhi7PzXiaHSXc6KkzqbWZHKvikD4PObanqg+7IO58rKFpGXP7eeO+w==}\n    peerDependencies:\n      graphql: ^14.0.0 || ^15.0.0 || ^16.0.0 || ^17.0.0\n\n  '@graphql-tools/executor-http@0.1.10':\n    resolution: {integrity: sha512-hnAfbKv0/lb9s31LhWzawQ5hghBfHS+gYWtqxME6Rl0Aufq9GltiiLBcl7OVVOnkLF0KhwgbYP1mB5VKmgTGpg==}\n    peerDependencies:\n      graphql: ^14.0.0 || ^15.0.0 || ^16.0.0 || ^17.0.0\n\n  '@graphql-tools/executor-legacy-ws@0.0.11':\n    resolution: {integrity: sha512-4ai+NnxlNfvIQ4c70hWFvOZlSUN8lt7yc+ZsrwtNFbFPH/EroIzFMapAxM9zwyv9bH38AdO3TQxZ5zNxgBdvUw==}\n    peerDependencies:\n      graphql: ^14.0.0 || ^15.0.0 || ^16.0.0 || ^17.0.0\n\n  '@graphql-tools/executor@0.0.20':\n    resolution: {integrity: sha512-GdvNc4vszmfeGvUqlcaH1FjBoguvMYzxAfT6tDd4/LgwymepHhinqLNA5otqwVLW+JETcDaK7xGENzFomuE6TA==}\n    peerDependencies:\n      graphql: ^14.0.0 || ^15.0.0 || ^16.0.0 || ^17.0.0\n\n  '@graphql-tools/graphql-file-loader@7.5.17':\n    resolution: {integrity: sha512-hVwwxPf41zOYgm4gdaZILCYnKB9Zap7Ys9OhY1hbwuAuC4MMNY9GpUjoTU3CQc3zUiPoYStyRtUGkHSJZ3HxBw==}\n    peerDependencies:\n      graphql: ^14.0.0 || ^15.0.0 || ^16.0.0 || ^17.0.0\n\n  '@graphql-tools/graphql-tag-pluck@7.5.2':\n    resolution: {integrity: sha512-RW+H8FqOOLQw0BPXaahYepVSRjuOHw+7IL8Opaa5G5uYGOBxoXR7DceyQ7BcpMgktAOOmpDNQ2WtcboChOJSRA==}\n    peerDependencies:\n      graphql: ^14.0.0 || ^15.0.0 || ^16.0.0 || ^17.0.0\n\n  '@graphql-tools/import@6.7.18':\n    resolution: {integrity: sha512-XQDdyZTp+FYmT7as3xRWH/x8dx0QZA2WZqfMF5EWb36a0PiH7WwlRQYIdyYXj8YCLpiWkeBXgBRHmMnwEYR8iQ==}\n    peerDependencies:\n      graphql: ^14.0.0 || ^15.0.0 || ^16.0.0 || ^17.0.0\n\n  '@graphql-tools/json-file-loader@7.4.18':\n    resolution: {integrity: sha512-AJ1b6Y1wiVgkwsxT5dELXhIVUPs/u3VZ8/0/oOtpcoyO/vAeM5rOvvWegzicOOnQw8G45fgBRMkkRfeuwVt6+w==}\n    peerDependencies:\n      graphql: ^14.0.0 || ^15.0.0 || ^16.0.0 || ^17.0.0\n\n  '@graphql-tools/load@7.8.14':\n    resolution: {integrity: sha512-ASQvP+snHMYm+FhIaLxxFgVdRaM0vrN9wW2BKInQpktwWTXVyk+yP5nQUCEGmn0RTdlPKrffBaigxepkEAJPrg==}\n    peerDependencies:\n      graphql: ^14.0.0 || ^15.0.0 || ^16.0.0 || ^17.0.0\n\n  '@graphql-tools/merge@8.4.2':\n    resolution: {integrity: sha512-XbrHAaj8yDuINph+sAfuq3QCZ/tKblrTLOpirK0+CAgNlZUCHs0Fa+xtMUURgwCVThLle1AF7svJCxFizygLsw==}\n    peerDependencies:\n      graphql: ^14.0.0 || ^15.0.0 || ^16.0.0 || ^17.0.0\n\n  '@graphql-tools/schema@9.0.19':\n    resolution: {integrity: sha512-oBRPoNBtCkk0zbUsyP4GaIzCt8C0aCI4ycIRUL67KK5pOHljKLBBtGT+Jr6hkzA74C8Gco8bpZPe7aWFjiaK2w==}\n    peerDependencies:\n      graphql: ^14.0.0 || ^15.0.0 || ^16.0.0 || ^17.0.0\n\n  '@graphql-tools/url-loader@7.17.18':\n    resolution: {integrity: sha512-ear0CiyTj04jCVAxi7TvgbnGDIN2HgqzXzwsfcqiVg9cvjT40NcMlZ2P1lZDgqMkZ9oyLTV8Bw6j+SyG6A+xPw==}\n    peerDependencies:\n      graphql: ^14.0.0 || ^15.0.0 || ^16.0.0 || ^17.0.0\n\n  '@graphql-tools/utils@9.2.1':\n    resolution: {integrity: sha512-WUw506Ql6xzmOORlriNrD6Ugx+HjVgYxt9KCXD9mHAak+eaXSwuGGPyE60hy9xaDEoXKBsG7SkG69ybitaVl6A==}\n    peerDependencies:\n      graphql: ^14.0.0 || ^15.0.0 || ^16.0.0 || ^17.0.0\n\n  '@graphql-tools/wrap@9.4.2':\n    resolution: {integrity: sha512-DFcd9r51lmcEKn0JW43CWkkI2D6T9XI1juW/Yo86i04v43O9w2/k4/nx2XTJv4Yv+iXwUw7Ok81PGltwGJSDSA==}\n    peerDependencies:\n      graphql: ^14.0.0 || ^15.0.0 || ^16.0.0 || ^17.0.0\n\n  '@graphql-typed-document-node/core@3.2.0':\n    resolution: {integrity: sha512-mB9oAsNCm9aM3/SOv4YtBMqZbYj10R7dkq8byBqxGY/ncFwhf2oQzMV+LCRlWoDSEBJ3COiR1yeDvMtsoOsuFQ==}\n    peerDependencies:\n      graphql: ^0.8.0 || ^0.9.0 || ^0.10.0 || ^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0 || ^15.0.0 || ^16.0.0 || ^17.0.0\n\n  '@humanfs/core@0.19.1':\n    resolution: {integrity: sha512-5DyQ4+1JEUzejeK1JGICcideyfUbGixgS9jNgex5nqkW+cY7WZhxBigmieN5Qnw9ZosSNVC9KQKyb+GUaGyKUA==}\n    engines: {node: '>=18.18.0'}\n\n  '@humanfs/node@0.16.6':\n    resolution: {integrity: sha512-YuI2ZHQL78Q5HbhDiBA1X4LmYdXCKCMQIfw0pw7piHJwyREFebJUvrQN4cMssyES6x+vfUbx1CIpaQUKYdQZOw==}\n    engines: {node: '>=18.18.0'}\n\n  '@humanwhocodes/module-importer@1.0.1':\n    resolution: {integrity: sha512-bxveV4V8v5Yb4ncFTT3rPSgZBOpCkjfK0y4oVVVJwIuDVBRMDXrPyXRL988i5ap9m9bnyEEjWfm5WkBmtffLfA==}\n    engines: {node: '>=12.22'}\n\n  '@humanwhocodes/retry@0.3.1':\n    resolution: {integrity: sha512-JBxkERygn7Bv/GbN5Rv8Ul6LVknS+5Bp6RgDC/O8gEBU/yeH5Ui5C/OlWrTb6qct7LjjfT6Re2NxB0ln0yYybA==}\n    engines: {node: '>=18.18'}\n\n  '@humanwhocodes/retry@0.4.1':\n    resolution: {integrity: sha512-c7hNEllBlenFTHBky65mhq8WD2kbN9Q6gk0bTk8lSBvc554jpXSkST1iePudpt7+A/AQvuHs9EMqjHDXMY1lrA==}\n    engines: {node: '>=18.18'}\n\n  '@isaacs/cliui@8.0.2':\n    resolution: {integrity: sha512-O8jcjabXaleOG9DQ0+ARXWZBTfnP4WNAqzuiJK7ll44AmxGKv/J2M4TPjxjY3znBCfvBXFzucm1twdyFybFqEA==}\n    engines: {node: '>=12'}\n\n  '@istanbuljs/load-nyc-config@1.1.0':\n    resolution: {integrity: sha512-VjeHSlIzpv/NyD3N0YuHfXOPDIixcA1q2ZV98wsMqcYlPmv2n3Yb2lYP9XMElnaFVXg5A7YLTeLu6V84uQDjmQ==}\n    engines: {node: '>=8'}\n\n  '@istanbuljs/schema@0.1.3':\n    resolution: {integrity: sha512-ZXRY4jNvVgSVQ8DL3LTcakaAtXwTVUxE81hslsyD2AtoXW/wVob10HkOJ1X/pAlcI7D+2YoZKg5do8G/w6RYgA==}\n    engines: {node: '>=8'}\n\n  '@jridgewell/gen-mapping@0.3.5':\n    resolution: {integrity: sha512-IzL8ZoEDIBRWEzlCcRhOaCupYyN5gdIK+Q6fbFdPDg6HqX6jpkItn7DFIpW9LQzXG6Df9sA7+OKnq0qlz/GaQg==}\n    engines: {node: '>=6.0.0'}\n\n  '@jridgewell/resolve-uri@3.1.2':\n    resolution: {integrity: sha512-bRISgCIjP20/tbWSPWMEi54QVPRZExkuD9lJL+UIxUKtwVJA8wW1Trb1jMs1RFXo1CBTNZ/5hpC9QvmKWdopKw==}\n    engines: {node: '>=6.0.0'}\n\n  '@jridgewell/set-array@1.2.1':\n    resolution: {integrity: sha512-R8gLRTZeyp03ymzP/6Lil/28tGeGEzhx1q2k703KGWRAI1VdvPIXdG70VJc2pAMw3NA6JKL5hhFu1sJX0Mnn/A==}\n    engines: {node: '>=6.0.0'}\n\n  '@jridgewell/sourcemap-codec@1.4.15':\n    resolution: {integrity: sha512-eF2rxCRulEKXHTRiDrDy6erMYWqNw4LPdQ8UQA4huuxaQsVeRPFl2oM8oDGxMFhJUWZf9McpLtJasDDZb/Bpeg==}\n\n  '@jridgewell/sourcemap-codec@1.5.0':\n    resolution: {integrity: sha512-gv3ZRaISU3fjPAgNsriBRqGWQL6quFx04YMPW/zD8XMLsU32mhCCbfbO6KZFLjvYpCZ8zyDEgqsgf+PwPaM7GQ==}\n\n  '@jridgewell/trace-mapping@0.3.25':\n    resolution: {integrity: sha512-vNk6aEwybGtawWmy/PzwnGDOjCkLWSD2wqvjGGAgOAwCGWySYXfYoxt00IJkTF+8Lb57DwOb3Aa0o9CApepiYQ==}\n\n  '@jridgewell/trace-mapping@0.3.9':\n    resolution: {integrity: sha512-3Belt6tdc8bPgAtbcmdtNJlirVoTmEb5e2gC94PnkwEW9jI6CAHUeoG85tjWP5WquqfavoMtMwiG4P926ZKKuQ==}\n\n  '@manypkg/find-root@1.1.0':\n    resolution: {integrity: sha512-mki5uBvhHzO8kYYix/WRy2WX8S3B5wdVSc9D6KcU5lQNglP2yt58/VfLuAK49glRXChosY8ap2oJ1qgma3GUVA==}\n\n  '@manypkg/get-packages@1.1.3':\n    resolution: {integrity: sha512-fo+QhuU3qE/2TQMQmbVMqaQ6EWbMhi4ABWP+O4AM1NqPBuy0OrApV5LO6BrrgnhtAHS2NH6RrVk9OL181tTi8A==}\n\n  '@mapbox/node-pre-gyp@1.0.11':\n    resolution: {integrity: sha512-Yhlar6v9WQgUp/He7BdgzOz8lqMQ8sU+jkCq7Wx8Myc5YFJLbEe7lgui/V7G1qB1DJykHSGwreceSaD60Y0PUQ==}\n    hasBin: true\n\n  '@next/eslint-plugin-next@14.2.17':\n    resolution: {integrity: sha512-fW6/u1jjlBQrMs1ExyINehaK3B+LEW5UqdF6QYL07QK+SECkX0hnEyPMaNKj0ZFzirQ9D8jLWQ00P8oua4yx9g==}\n\n  '@nodelib/fs.scandir@2.1.5':\n    resolution: {integrity: sha512-vq24Bq3ym5HEQm2NKCr3yXDwjc7vTsEThRDnkp2DK9p1uqLR+DHurm/NOTo0KG7HYHU7eppKZj3MyqYuMBf62g==}\n    engines: {node: '>= 8'}\n\n  '@nodelib/fs.stat@2.0.5':\n    resolution: {integrity: sha512-RkhPPp2zrqDAQA/2jNhnztcPAlv64XdhIp7a7454A5ovI7Bukxgt7MX7udwAu3zg1DcpPU0rz3VV1SeaqvY4+A==}\n    engines: {node: '>= 8'}\n\n  '@nodelib/fs.walk@1.2.8':\n    resolution: {integrity: sha512-oGB+UxlgWcgQkgwo8GcEGwemoTFt3FIO9ababBmaGwXIoBKZ+GTy0pP185beGg7Llih/NSHSV2XAs1lnznocSg==}\n    engines: {node: '>= 8'}\n\n  '@nolyfill/is-core-module@1.0.39':\n    resolution: {integrity: sha512-nn5ozdjYQpUCZlWGuxcJY/KpxkWQs4DcbMCmKojjyrYDEAGy4Ce19NN4v5MduafTwJlbKc99UA8YhSVqq9yPZA==}\n    engines: {node: '>=12.4.0'}\n\n  '@peculiar/asn1-schema@2.3.13':\n    resolution: {integrity: sha512-3Xq3a01WkHRZL8X04Zsfg//mGaA21xlL4tlVn4v2xGT0JStiztATRkMwa5b+f/HXmY2smsiLXYK46Gwgzvfg3g==}\n\n  '@peculiar/json-schema@1.1.12':\n    resolution: {integrity: sha512-coUfuoMeIB7B8/NMekxaDzLhaYmp0HZNPEjYRm9goRou8UZIC3z21s0sL9AWoCw4EG876QyO3kYrc61WNF9B/w==}\n    engines: {node: '>=8.0.0'}\n\n  '@peculiar/webcrypto@1.5.0':\n    resolution: {integrity: sha512-BRs5XUAwiyCDQMsVA9IDvDa7UBR9gAvPHgugOeGng3YN6vJ9JYonyDc0lNczErgtCWtucjR5N7VtaonboD/ezg==}\n    engines: {node: '>=10.12.0'}\n\n  '@pkgjs/parseargs@0.11.0':\n    resolution: {integrity: sha512-+1VkjdD0QBLPodGrJUeqarH8VAIvQODIbwh9XpP5Syisf7YoQgsJKPNFoqqLQlu+VQ/tVSshMR6loPMn8U+dPg==}\n    engines: {node: '>=14'}\n\n  '@pkgr/core@0.1.1':\n    resolution: {integrity: sha512-cq8o4cWH0ibXh9VGi5P20Tu9XF/0fFXl9EUinr9QfTM7a7p0oTA4iJRCQWppXR1Pg8dSM0UCItCkPwsk9qWWYA==}\n    engines: {node: ^12.20.0 || ^14.18.0 || >=16.0.0}\n\n  '@repeaterjs/repeater@3.0.4':\n    resolution: {integrity: sha512-AW8PKd6iX3vAZ0vA43nOUOnbq/X5ihgU+mSXXqunMkeQADGiqw/PY0JNeYtD5sr0PAy51YPgAPbDoeapv9r8WA==}\n\n  '@repeaterjs/repeater@3.0.6':\n    resolution: {integrity: sha512-Javneu5lsuhwNCryN+pXH93VPQ8g0dBX7wItHFgYiwQmzE1sVdg5tWHiOgHywzL2W21XQopa7IwIEnNbmeUJYA==}\n\n  '@rollup/pluginutils@4.2.1':\n    resolution: {integrity: sha512-iKnFXr7NkdZAIHiIWE+BX5ULi/ucVFYWD6TbAV+rZctiRTY2PL6tsIKhoIOaoskiWAkgu+VsbXgUVDNLHf+InQ==}\n    engines: {node: '>= 8.0.0'}\n\n  '@rollup/rollup-android-arm-eabi@4.29.1':\n    resolution: {integrity: sha512-ssKhA8RNltTZLpG6/QNkCSge+7mBQGUqJRisZ2MDQcEGaK93QESEgWK2iOpIDZ7k9zPVkG5AS3ksvD5ZWxmItw==}\n    cpu: [arm]\n    os: [android]\n\n  '@rollup/rollup-android-arm64@4.29.1':\n    resolution: {integrity: sha512-CaRfrV0cd+NIIcVVN/jx+hVLN+VRqnuzLRmfmlzpOzB87ajixsN/+9L5xNmkaUUvEbI5BmIKS+XTwXsHEb65Ew==}\n    cpu: [arm64]\n    os: [android]\n\n  '@rollup/rollup-darwin-arm64@4.29.1':\n    resolution: {integrity: sha512-2ORr7T31Y0Mnk6qNuwtyNmy14MunTAMx06VAPI6/Ju52W10zk1i7i5U3vlDRWjhOI5quBcrvhkCHyF76bI7kEw==}\n    cpu: [arm64]\n    os: [darwin]\n\n  '@rollup/rollup-darwin-x64@4.29.1':\n    resolution: {integrity: sha512-j/Ej1oanzPjmN0tirRd5K2/nncAhS9W6ICzgxV+9Y5ZsP0hiGhHJXZ2JQ53iSSjj8m6cRY6oB1GMzNn2EUt6Ng==}\n    cpu: [x64]\n    os: [darwin]\n\n  '@rollup/rollup-freebsd-arm64@4.29.1':\n    resolution: {integrity: sha512-91C//G6Dm/cv724tpt7nTyP+JdN12iqeXGFM1SqnljCmi5yTXriH7B1r8AD9dAZByHpKAumqP1Qy2vVNIdLZqw==}\n    cpu: [arm64]\n    os: [freebsd]\n\n  '@rollup/rollup-freebsd-x64@4.29.1':\n    resolution: {integrity: sha512-hEioiEQ9Dec2nIRoeHUP6hr1PSkXzQaCUyqBDQ9I9ik4gCXQZjJMIVzoNLBRGet+hIUb3CISMh9KXuCcWVW/8w==}\n    cpu: [x64]\n    os: [freebsd]\n\n  '@rollup/rollup-linux-arm-gnueabihf@4.29.1':\n    resolution: {integrity: sha512-Py5vFd5HWYN9zxBv3WMrLAXY3yYJ6Q/aVERoeUFwiDGiMOWsMs7FokXihSOaT/PMWUty/Pj60XDQndK3eAfE6A==}\n    cpu: [arm]\n    os: [linux]\n\n  '@rollup/rollup-linux-arm-musleabihf@4.29.1':\n    resolution: {integrity: sha512-RiWpGgbayf7LUcuSNIbahr0ys2YnEERD4gYdISA06wa0i8RALrnzflh9Wxii7zQJEB2/Eh74dX4y/sHKLWp5uQ==}\n    cpu: [arm]\n    os: [linux]\n\n  '@rollup/rollup-linux-arm64-gnu@4.29.1':\n    resolution: {integrity: sha512-Z80O+taYxTQITWMjm/YqNoe9d10OX6kDh8X5/rFCMuPqsKsSyDilvfg+vd3iXIqtfmp+cnfL1UrYirkaF8SBZA==}\n    cpu: [arm64]\n    os: [linux]\n\n  '@rollup/rollup-linux-arm64-musl@4.29.1':\n    resolution: {integrity: sha512-fOHRtF9gahwJk3QVp01a/GqS4hBEZCV1oKglVVq13kcK3NeVlS4BwIFzOHDbmKzt3i0OuHG4zfRP0YoG5OF/rA==}\n    cpu: [arm64]\n    os: [linux]\n\n  '@rollup/rollup-linux-loongarch64-gnu@4.29.1':\n    resolution: {integrity: sha512-5a7q3tnlbcg0OodyxcAdrrCxFi0DgXJSoOuidFUzHZ2GixZXQs6Tc3CHmlvqKAmOs5eRde+JJxeIf9DonkmYkw==}\n    cpu: [loong64]\n    os: [linux]\n\n  '@rollup/rollup-linux-powerpc64le-gnu@4.29.1':\n    resolution: {integrity: sha512-9b4Mg5Yfz6mRnlSPIdROcfw1BU22FQxmfjlp/CShWwO3LilKQuMISMTtAu/bxmmrE6A902W2cZJuzx8+gJ8e9w==}\n    cpu: [ppc64]\n    os: [linux]\n\n  '@rollup/rollup-linux-riscv64-gnu@4.29.1':\n    resolution: {integrity: sha512-G5pn0NChlbRM8OJWpJFMX4/i8OEU538uiSv0P6roZcbpe/WfhEO+AT8SHVKfp8qhDQzaz7Q+1/ixMy7hBRidnQ==}\n    cpu: [riscv64]\n    os: [linux]\n\n  '@rollup/rollup-linux-s390x-gnu@4.29.1':\n    resolution: {integrity: sha512-WM9lIkNdkhVwiArmLxFXpWndFGuOka4oJOZh8EP3Vb8q5lzdSCBuhjavJsw68Q9AKDGeOOIHYzYm4ZFvmWez5g==}\n    cpu: [s390x]\n    os: [linux]\n\n  '@rollup/rollup-linux-x64-gnu@4.29.1':\n    resolution: {integrity: sha512-87xYCwb0cPGZFoGiErT1eDcssByaLX4fc0z2nRM6eMtV9njAfEE6OW3UniAoDhX4Iq5xQVpE6qO9aJbCFumKYQ==}\n    cpu: [x64]\n    os: [linux]\n\n  '@rollup/rollup-linux-x64-musl@4.29.1':\n    resolution: {integrity: sha512-xufkSNppNOdVRCEC4WKvlR1FBDyqCSCpQeMMgv9ZyXqqtKBfkw1yfGMTUTs9Qsl6WQbJnsGboWCp7pJGkeMhKA==}\n    cpu: [x64]\n    os: [linux]\n\n  '@rollup/rollup-win32-arm64-msvc@4.29.1':\n    resolution: {integrity: sha512-F2OiJ42m77lSkizZQLuC+jiZ2cgueWQL5YC9tjo3AgaEw+KJmVxHGSyQfDUoYR9cci0lAywv2Clmckzulcq6ig==}\n    cpu: [arm64]\n    os: [win32]\n\n  '@rollup/rollup-win32-ia32-msvc@4.29.1':\n    resolution: {integrity: sha512-rYRe5S0FcjlOBZQHgbTKNrqxCBUmgDJem/VQTCcTnA2KCabYSWQDrytOzX7avb79cAAweNmMUb/Zw18RNd4mng==}\n    cpu: [ia32]\n    os: [win32]\n\n  '@rollup/rollup-win32-x64-msvc@4.29.1':\n    resolution: {integrity: sha512-+10CMg9vt1MoHj6x1pxyjPSMjHTIlqs8/tBztXvPAx24SKs9jwVnKqHJumlH/IzhaPUaj3T6T6wfZr8okdXaIg==}\n    cpu: [x64]\n    os: [win32]\n\n  '@sindresorhus/merge-streams@2.3.0':\n    resolution: {integrity: sha512-LtoMMhxAlorcGhmFYI+LhPgbPZCkgP6ra1YL604EeF6U98pLlQ3iWIGMdWSC+vWmPBWBNgmDBAhnAobLROJmwg==}\n    engines: {node: '>=18'}\n\n  '@sinonjs/commons@2.0.0':\n    resolution: {integrity: sha512-uLa0j859mMrg2slwQYdO/AkrOfmH+X6LTVmNTS9CqexuE2IvVORIkSpJLqePAbEnKJ77aMmCwr1NUZ57120Xcg==}\n\n  '@sinonjs/commons@3.0.1':\n    resolution: {integrity: sha512-K3mCHKQ9sVh8o1C9cxkwxaOmXoAMlDxC1mYyHrjqOWEcBjYr76t96zL2zlj5dUGZ3HSw240X1qgH3Mjf1yJWpQ==}\n\n  '@sinonjs/fake-timers@10.3.0':\n    resolution: {integrity: sha512-V4BG07kuYSUkTCSBHG8G8TNhM+F19jXFWnQtzj+we8DrkpSBCee9Z3Ms8yiGer/dlmhe35/Xdgyo3/0rQKg7YA==}\n\n  '@sinonjs/fake-timers@11.2.2':\n    resolution: {integrity: sha512-G2piCSxQ7oWOxwGSAyFHfPIsyeJGXYtc6mFbnFA+kRXkiEnTl8c/8jul2S329iFBnDI9HGoeWWAZvuvOkZccgw==}\n\n  '@sinonjs/samsam@8.0.0':\n    resolution: {integrity: sha512-Bp8KUVlLp8ibJZrnvq2foVhP0IVX2CIprMJPK0vqGqgrDa0OHVKeZyBykqskkrdxV6yKBPmGasO8LVjAKR3Gew==}\n\n  '@sinonjs/text-encoding@0.7.2':\n    resolution: {integrity: sha512-sXXKG+uL9IrKqViTtao2Ws6dy0znu9sOaP1di/jKGW1M6VssO8vlpXCQcpZ+jisQ1tTFAC5Jo/EOzFbggBagFQ==}\n\n  '@snyk/github-codeowners@1.1.0':\n    resolution: {integrity: sha512-lGFf08pbkEac0NYgVf4hdANpAgApRjNByLXB+WBip3qj1iendOIyAwP2GKkKbQMNVy2r1xxDf0ssfWscoiC+Vw==}\n    engines: {node: '>=8.10'}\n    hasBin: true\n\n  '@stylistic/eslint-plugin@2.12.1':\n    resolution: {integrity: sha512-fubZKIHSPuo07FgRTn6S4Nl0uXPRPYVNpyZzIDGfp7Fny6JjNus6kReLD7NI380JXi4HtUTSOZ34LBuNPO1XLQ==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      eslint: '>=8.40.0'\n\n  '@tsconfig/node10@1.0.11':\n    resolution: {integrity: sha512-DcRjDCujK/kCk/cUe8Xz8ZSpm8mS3mNNpta+jGCA6USEDfktlNvm1+IuZ9eTcDbNk41BHwpHHeW+N1lKCz4zOw==}\n\n  '@tsconfig/node12@1.0.11':\n    resolution: {integrity: sha512-cqefuRsh12pWyGsIoBKJA9luFu3mRxCA+ORZvA4ktLSzIuCUtWVxGIuXigEwO5/ywWFMZ2QEGKWvkZG1zDMTag==}\n\n  '@tsconfig/node14@1.0.3':\n    resolution: {integrity: sha512-ysT8mhdixWK6Hw3i1V2AeRqZ5WfXg1G43mqoYlM2nc6388Fq5jcXyr5mRsqViLx/GJYdoL0bfXD8nmF+Zn/Iow==}\n\n  '@tsconfig/node16@1.0.4':\n    resolution: {integrity: sha512-vxhUy4J8lyeyinH7Azl1pdd43GJhZH/tP2weN8TntQblOY+A0XbT8DJk1/oCPuOOyg/Ja757rG0CgHcWC8OfMA==}\n\n  '@types/doctrine@0.0.9':\n    resolution: {integrity: sha512-eOIHzCUSH7SMfonMG1LsC2f8vxBFtho6NGBznK41R84YzPuvSBzrhEps33IsQiOW9+VL6NQ9DbjQJznk/S4uRA==}\n\n  '@types/estree@1.0.6':\n    resolution: {integrity: sha512-AYnb1nQyY49te+VRAVgmzfcgjYS91mY5P0TKUDCLEM+gNnA+3T6rWITXRLYCpahpqSQbN5cE+gHpnPyXjHWxcw==}\n\n  '@types/json-schema@7.0.15':\n    resolution: {integrity: sha512-5+fP8P8MFNC+AyZCDxrB2pkZFPGzqQWUzpSeuuVLvm8VMcorNYavBqoFcxK8bQz4Qsbn4oUEEem4wDLfcysGHA==}\n\n  '@types/minimist@1.2.5':\n    resolution: {integrity: sha512-hov8bUuiLiyFPGyFPE1lwWhmzYbirOXQNNo40+y3zow8aFVTeyn3VWL0VFFfdNddA8S4Vf0Tc062rzyNr7Paag==}\n\n  '@types/node@12.20.55':\n    resolution: {integrity: sha512-J8xLz7q2OFulZ2cyGTLE1TbbZcjpno7FaN6zdJNrgAdrJ+DZzh/uFR6YrTb4C+nXakvud8Q4+rbhoIWlYQbUFQ==}\n\n  '@types/node@22.9.0':\n    resolution: {integrity: sha512-vuyHg81vvWA1Z1ELfvLko2c8f34gyA0zaic0+Rllc5lbCnbSyuvb2Oxpm6TAUAC/2xZN3QGqxBNggD1nNR2AfQ==}\n\n  '@types/normalize-package-data@2.4.4':\n    resolution: {integrity: sha512-37i+OaWTh9qeK4LSHPsyRC7NahnGotNuZvjLSgcPzblpHB3rrCJxAOgI5gCdKm7coonsaX1Of0ILiTcnZjbfxA==}\n\n  '@types/pg@8.11.10':\n    resolution: {integrity: sha512-LczQUW4dbOQzsH2RQ5qoeJ6qJPdrcM/DcMLoqWQkMLMsq83J5lAX3LXjdkWdpscFy67JSOWDnh7Ny/sPFykmkg==}\n\n  '@types/semver@7.5.8':\n    resolution: {integrity: sha512-I8EUhyrgfLrcTkzV3TSsGyl1tSuPrEDzr0yd5m90UgNxQkyDXULk3b6MlQqTCpZpNtWe1K0hzclnZkTcLBe2UQ==}\n\n  '@types/sinon@10.0.20':\n    resolution: {integrity: sha512-2APKKruFNCAZgx3daAyACGzWuJ028VVCUDk6o2rw/Z4PXT0ogwdV4KUegW0MwVs0Zu59auPXbbuBJHF12Sx1Eg==}\n\n  '@types/sinonjs__fake-timers@8.1.5':\n    resolution: {integrity: sha512-mQkU2jY8jJEF7YHjHvsQO8+3ughTL1mcnn96igfhONmR+fUPSKIkefQYpSe8bsly2Ep7oQbn/6VG5/9/0qcArQ==}\n\n  '@types/ws@8.5.13':\n    resolution: {integrity: sha512-osM/gWBTPKgHV8XkTunnegTRIsvF6owmf5w+JtAfOw472dptdm0dlGv4xCt6GwQRcC2XVOvvRE/0bAoQcL2QkA==}\n\n  '@typescript-eslint/eslint-plugin@8.19.0':\n    resolution: {integrity: sha512-NggSaEZCdSrFddbctrVjkVZvFC6KGfKfNK0CU7mNK/iKHGKbzT4Wmgm08dKpcZECBu9f5FypndoMyRHkdqfT1Q==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      '@typescript-eslint/parser': ^8.0.0 || ^8.0.0-alpha.0\n      eslint: ^8.57.0 || ^9.0.0\n      typescript: '>=4.8.4 <5.8.0'\n\n  '@typescript-eslint/parser@8.19.0':\n    resolution: {integrity: sha512-6M8taKyOETY1TKHp0x8ndycipTVgmp4xtg5QpEZzXxDhNvvHOJi5rLRkLr8SK3jTgD5l4fTlvBiRdfsuWydxBw==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      eslint: ^8.57.0 || ^9.0.0\n      typescript: '>=4.8.4 <5.8.0'\n\n  '@typescript-eslint/scope-manager@7.18.0':\n    resolution: {integrity: sha512-jjhdIE/FPF2B7Z1uzc6i3oWKbGcHb87Qw7AWj6jmEqNOfDFbJWtjt/XfwCpvNkpGWlcJaog5vTR+VV8+w9JflA==}\n    engines: {node: ^18.18.0 || >=20.0.0}\n\n  '@typescript-eslint/scope-manager@8.19.0':\n    resolution: {integrity: sha512-hkoJiKQS3GQ13TSMEiuNmSCvhz7ujyqD1x3ShbaETATHrck+9RaDdUbt+osXaUuns9OFwrDTTrjtwsU8gJyyRA==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@typescript-eslint/type-utils@8.19.0':\n    resolution: {integrity: sha512-TZs0I0OSbd5Aza4qAMpp1cdCYVnER94IziudE3JU328YUHgWu9gwiwhag+fuLeJ2LkWLXI+F/182TbG+JaBdTg==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      eslint: ^8.57.0 || ^9.0.0\n      typescript: '>=4.8.4 <5.8.0'\n\n  '@typescript-eslint/types@7.18.0':\n    resolution: {integrity: sha512-iZqi+Ds1y4EDYUtlOOC+aUmxnE9xS/yCigkjA7XpTKV6nCBd3Hp/PRGGmdwnfkV2ThMyYldP1wRpm/id99spTQ==}\n    engines: {node: ^18.18.0 || >=20.0.0}\n\n  '@typescript-eslint/types@8.19.0':\n    resolution: {integrity: sha512-8XQ4Ss7G9WX8oaYvD4OOLCjIQYgRQxO+qCiR2V2s2GxI9AUpo7riNwo6jDhKtTcaJjT8PY54j2Yb33kWtSJsmA==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@typescript-eslint/typescript-estree@7.18.0':\n    resolution: {integrity: sha512-aP1v/BSPnnyhMHts8cf1qQ6Q1IFwwRvAQGRvBFkWlo3/lH29OXA3Pts+c10nxRxIBrDnoMqzhgdwVe5f2D6OzA==}\n    engines: {node: ^18.18.0 || >=20.0.0}\n    peerDependencies:\n      typescript: '*'\n    peerDependenciesMeta:\n      typescript:\n        optional: true\n\n  '@typescript-eslint/typescript-estree@8.19.0':\n    resolution: {integrity: sha512-WW9PpDaLIFW9LCbucMSdYUuGeFUz1OkWYS/5fwZwTA+l2RwlWFdJvReQqMUMBw4yJWJOfqd7An9uwut2Oj8sLw==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      typescript: '>=4.8.4 <5.8.0'\n\n  '@typescript-eslint/utils@7.18.0':\n    resolution: {integrity: sha512-kK0/rNa2j74XuHVcoCZxdFBMF+aq/vH83CXAOHieC+2Gis4mF8jJXT5eAfyD3K0sAxtPuwxaIOIOvhwzVDt/kw==}\n    engines: {node: ^18.18.0 || >=20.0.0}\n    peerDependencies:\n      eslint: ^8.56.0\n\n  '@typescript-eslint/utils@8.19.0':\n    resolution: {integrity: sha512-PTBG+0oEMPH9jCZlfg07LCB2nYI0I317yyvXGfxnvGvw4SHIOuRnQ3kadyyXY6tGdChusIHIbM5zfIbp4M6tCg==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      eslint: ^8.57.0 || ^9.0.0\n      typescript: '>=4.8.4 <5.8.0'\n\n  '@typescript-eslint/visitor-keys@7.18.0':\n    resolution: {integrity: sha512-cDF0/Gf81QpY3xYyJKDV14Zwdmid5+uuENhjH2EqFaF0ni+yAyq/LzMaIJdhNJXZI7uLzwIlA+V7oWoyn6Curg==}\n    engines: {node: ^18.18.0 || >=20.0.0}\n\n  '@typescript-eslint/visitor-keys@8.19.0':\n    resolution: {integrity: sha512-mCFtBbFBJDCNCWUl5y6sZSCHXw1DEFEk3c/M3nRK2a4XUB8StGFtmcEMizdjKuBzB6e/smJAAWYug3VrdLMr1w==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  '@vercel/nft@0.26.5':\n    resolution: {integrity: sha512-NHxohEqad6Ra/r4lGknO52uc/GrWILXAMs1BB4401GTqww0fw1bAqzpG1XHuDO+dprg4GvsD9ZLLSsdo78p9hQ==}\n    engines: {node: '>=16'}\n    hasBin: true\n\n  '@vitest/expect@2.1.8':\n    resolution: {integrity: sha512-8ytZ/fFHq2g4PJVAtDX57mayemKgDR6X3Oa2Foro+EygiOJHUXhCqBAAKQYYajZpFoIfvBCF1j6R6IYRSIUFuw==}\n\n  '@vitest/mocker@2.1.8':\n    resolution: {integrity: sha512-7guJ/47I6uqfttp33mgo6ga5Gr1VnL58rcqYKyShoRK9ebu8T5Rs6HN3s1NABiBeVTdWNrwUMcHH54uXZBN4zA==}\n    peerDependencies:\n      msw: ^2.4.9\n      vite: ^5.0.0\n    peerDependenciesMeta:\n      msw:\n        optional: true\n      vite:\n        optional: true\n\n  '@vitest/pretty-format@2.1.8':\n    resolution: {integrity: sha512-9HiSZ9zpqNLKlbIDRWOnAWqgcA7xu+8YxXSekhr0Ykab7PAYFkhkwoqVArPOtJhPmYeE2YHgKZlj3CP36z2AJQ==}\n\n  '@vitest/runner@2.1.8':\n    resolution: {integrity: sha512-17ub8vQstRnRlIU5k50bG+QOMLHRhYPAna5tw8tYbj+jzjcspnwnwtPtiOlkuKC4+ixDPTuLZiqiWWQ2PSXHVg==}\n\n  '@vitest/snapshot@2.1.8':\n    resolution: {integrity: sha512-20T7xRFbmnkfcmgVEz+z3AU/3b0cEzZOt/zmnvZEctg64/QZbSDJEVm9fLnnlSi74KibmRsO9/Qabi+t0vCRPg==}\n\n  '@vitest/spy@2.1.8':\n    resolution: {integrity: sha512-5swjf2q95gXeYPevtW0BLk6H8+bPlMb4Vw/9Em4hFxDcaOxS+e0LOX4yqNxoHzMR2akEB2xfpnWUzkZokmgWDg==}\n\n  '@vitest/utils@2.1.8':\n    resolution: {integrity: sha512-dwSoui6djdwbfFmIgbIjX2ZhIoG7Ex/+xpxyiEgIGzjliY8xGkcpITKTlp6B4MgtGkF2ilvm97cPM96XZaAgcA==}\n\n  '@whatwg-node/events@0.0.3':\n    resolution: {integrity: sha512-IqnKIDWfXBJkvy/k6tzskWTc2NK3LcqHlb+KHGCrjOCH4jfQckRX0NAiIcC/vIqQkzLYw2r2CTSwAxcrtcD6lA==}\n\n  '@whatwg-node/fetch@0.8.8':\n    resolution: {integrity: sha512-CdcjGC2vdKhc13KKxgsc6/616BQ7ooDIgPeTuAiE8qfCnS0mGzcfCOoZXypQSz73nxI+GWc7ZReIAVhxoE1KCg==}\n\n  '@whatwg-node/node-fetch@0.3.6':\n    resolution: {integrity: sha512-w9wKgDO4C95qnXZRwZTfCmLWqyRnooGjcIwG0wADWjw9/HN0p7dtvtgSvItZtUyNteEvgTrd8QojNEqV6DAGTA==}\n\n  abbrev@1.1.1:\n    resolution: {integrity: sha512-nne9/IiQ/hzIhY6pdDnbBtz7DjPTKrY00P/zvPSm5pOFkl6xuGrGnXn/VtTNNfNtAfZ9/1RtehkszU9qcTii0Q==}\n\n  acorn-globals@1.0.9:\n    resolution: {integrity: sha512-j3/4pkfih8W4NK22gxVSXcEonTpAHOHh0hu5BoZrKcOsW/4oBPxTi4Yk3SAj+FhC1f3+bRTkXdm4019gw1vg9g==}\n\n  acorn-import-attributes@1.9.5:\n    resolution: {integrity: sha512-n02Vykv5uA3eHGM/Z2dQrcD56kL8TyDb2p1+0P83PClMnC/nc+anbQRhIOWnSq4Ke/KvDPrY3C9hDtC/A3eHnQ==}\n    peerDependencies:\n      acorn: ^8\n\n  acorn-jsx@5.3.2:\n    resolution: {integrity: sha512-rq9s+JNhf0IChjtDXxllJ7g41oZk5SlXtp0LHwyA5cejwn7vKmKp4pPri6YEePv2PU65sAsegbXtIinmDFDXgQ==}\n    peerDependencies:\n      acorn: ^6.0.0 || ^7.0.0 || ^8.0.0\n\n  acorn-walk@8.3.2:\n    resolution: {integrity: sha512-cjkyv4OtNCIeqhHrfS81QWXoCBPExR/J62oyEqepVw8WaQeSqpW2uhuLPh1m9eWhDuOo/jUXVTlifvesOWp/4A==}\n    engines: {node: '>=0.4.0'}\n\n  acorn@2.7.0:\n    resolution: {integrity: sha512-pXK8ez/pVjqFdAgBkF1YPVRacuLQ9EXBKaKWaeh58WNfMkCmZhOZzu+NtKSPD5PHmCCHheQ5cD29qM1K4QTxIg==}\n    engines: {node: '>=0.4.0'}\n    hasBin: true\n\n  acorn@8.11.3:\n    resolution: {integrity: sha512-Y9rRfJG5jcKOE0CLisYbojUjIrIEE7AGMzA/Sm4BslANhbS+cDMpgBdcPT91oJ7OuJ9hYJBx59RjbhxVnrF8Xg==}\n    engines: {node: '>=0.4.0'}\n    hasBin: true\n\n  acorn@8.14.0:\n    resolution: {integrity: sha512-cl669nCJTZBsL97OF4kUQm5g5hC2uihk0NxY3WENAC0TYdILVkAyHymAntgxGkl7K+t0cXIrH5siy5S4XkFycA==}\n    engines: {node: '>=0.4.0'}\n    hasBin: true\n\n  agent-base@6.0.2:\n    resolution: {integrity: sha512-RZNwNclF7+MS/8bDg70amg32dyeZGZxiDuQmZxKLAlQjr3jGyLx+4Kkk58UO7D2QdgFIQCovuSuZESne6RG6XQ==}\n    engines: {node: '>= 6.0.0'}\n\n  aggregate-error@3.1.0:\n    resolution: {integrity: sha512-4I7Td01quW/RpocfNayFdFVk1qSuoh0E7JrbRJ16nH01HhKFQ88INq9Sd+nd72zqRySlr9BmDA8xlEJ6vJMrYA==}\n    engines: {node: '>=8'}\n\n  ajv@6.12.6:\n    resolution: {integrity: sha512-j3fVLgvTo527anyYyJOGTYJbG+vnnQYvE0m5mmkc1TK+nxAppkCLMIL0aZ4dblVCNoGShhm+kzE4ZUykBoMg4g==}\n\n  ansi-colors@4.1.3:\n    resolution: {integrity: sha512-/6w/C21Pm1A7aZitlI5Ni/2J6FFQN8i1Cvz3kHABAAbw93v/NlvKdVOqz7CCWz/3iv/JplRSEEZ83XION15ovw==}\n    engines: {node: '>=6'}\n\n  ansi-escapes@4.3.2:\n    resolution: {integrity: sha512-gKXj5ALrKWQLsYG9jlTRmR/xKluxHV+Z9QEwNIgCfM1/uwPMCuzVVnh5mwTd+OuBZcwSIMbqssNWRm1lE51QaQ==}\n    engines: {node: '>=8'}\n\n  ansi-regex@5.0.1:\n    resolution: {integrity: sha512-quJQXlTSUGL2LH9SUXo8VwsY4soanhgo6LNSm84E1LBcE8s3O0wpdiRzyR9z/ZZJMlMWv37qOOb9pdJlMUEKFQ==}\n    engines: {node: '>=8'}\n\n  ansi-regex@6.0.1:\n    resolution: {integrity: sha512-n5M855fKb2SsfMIiFFoVrABHJC8QtHwVx+mHWP3QcEqBHYienj5dHSgjbxtC0WEZXYt4wcD6zrQElDPhFuZgfA==}\n    engines: {node: '>=12'}\n\n  ansi-styles@3.2.1:\n    resolution: {integrity: sha512-VT0ZI6kZRdTh8YyJw3SMbYm/u+NqfsAxEpWO0Pf9sq8/e94WxxOpPKx9FR1FlyCtOVDNOQ+8ntlqFxiRc+r5qA==}\n    engines: {node: '>=4'}\n\n  ansi-styles@4.3.0:\n    resolution: {integrity: sha512-zbB9rCJAT1rbjiVDb2hqKFHNYLxgtk8NURxZ3IZwD3F6NtxbXZQCnnSi1Lkx+IDohdPlFp222wVALIheZJQSEg==}\n    engines: {node: '>=8'}\n\n  ansi-styles@6.2.1:\n    resolution: {integrity: sha512-bN798gFfQX+viw3R7yrGWRqnrN2oRkEkUjjl4JNn4E8GxxbjtG3FbrEIIY3l8/hrwUwIeCZvi4QuOTP4MErVug==}\n    engines: {node: '>=12'}\n\n  append-transform@2.0.0:\n    resolution: {integrity: sha512-7yeyCEurROLQJFv5Xj4lEGTy0borxepjFv1g22oAdqFu//SrAlDl1O1Nxx15SH1RoliUml6p8dwJW9jvZughhg==}\n    engines: {node: '>=8'}\n\n  aproba@2.0.0:\n    resolution: {integrity: sha512-lYe4Gx7QT+MKGbDsA+Z+he/Wtef0BiwDOlK/XkBrdfsh9J/jPPXbX0tE9x9cl27Tmu5gg3QUbUrQYa/y+KOHPQ==}\n\n  archy@1.0.0:\n    resolution: {integrity: sha512-Xg+9RwCg/0p32teKdGMPTPnVXKD0w3DfHnFTficozsAgsvq2XenPJq/MYpzzQ/v8zrOyJn6Ds39VA4JIDwFfqw==}\n\n  are-docs-informative@0.0.2:\n    resolution: {integrity: sha512-ixiS0nLNNG5jNQzgZJNoUpBKdo9yTYZMGJ+QgT2jmjR7G7+QHRCc4v6LQ3NgE7EBJq+o0ams3waJwkrlBom8Ig==}\n    engines: {node: '>=14'}\n\n  are-we-there-yet@2.0.0:\n    resolution: {integrity: sha512-Ci/qENmwHnsYo9xKIcUJN5LeDKdJ6R1Z1j9V/J5wyq8nh/mYPEpIKJbBZXtZjG04HiK7zV/p6Vs9952MrMeUIw==}\n    engines: {node: '>=10'}\n    deprecated: This package is no longer supported.\n\n  arg@4.1.3:\n    resolution: {integrity: sha512-58S9QDqG0Xx27YwPSt9fJxivjYl432YCwfDMfZ+71RAqUrZef7LrKQZ3LHLOwCS4FLNBplP533Zx895SeOCHvA==}\n\n  argparse@1.0.10:\n    resolution: {integrity: sha512-o5Roy6tNG4SL/FOkCAN6RzjiakZS25RLYFrcMttJqbdd8BWrnA+fGz57iN5Pb06pvBGvl5gQ0B48dJlslXvoTg==}\n\n  argparse@2.0.1:\n    resolution: {integrity: sha512-8+9WqebbFzpX9OR+Wa6O29asIogeRMzcGtAINdpMHHyAg10f05aSFVBbcEqGf/PXw1EjAZ+q2/bEBg3DvurK3Q==}\n\n  aria-query@5.3.2:\n    resolution: {integrity: sha512-COROpnaoap1E2F000S62r6A60uHZnmlvomhfyT2DlTcrY1OrBKn2UhH7qn5wTC9zMvD0AY7csdPSNwKP+7WiQw==}\n    engines: {node: '>= 0.4'}\n\n  array-buffer-byte-length@1.0.1:\n    resolution: {integrity: sha512-ahC5W1xgou+KTXix4sAO8Ki12Q+jf4i0+tmk3sC+zgcynshkHxzpXdImBehiUYKKKDwvfFiJl1tZt6ewscS1Mg==}\n    engines: {node: '>= 0.4'}\n\n  array-find-index@1.0.2:\n    resolution: {integrity: sha512-M1HQyIXcBGtVywBt8WVdim+lrNaK7VHp99Qt5pSNziXznKHViIBbXWtfRTpEFpF/c4FdfxNAsCCwPp5phBYJtw==}\n    engines: {node: '>=0.10.0'}\n\n  array-includes@3.1.8:\n    resolution: {integrity: sha512-itaWrbYbqpGXkGhZPGUulwnhVf5Hpy1xiCFsGqyIGglbBxmG5vSjxQen3/WGOjPpNEv1RtBLKxbmVXm8HpJStQ==}\n    engines: {node: '>= 0.4'}\n\n  array-timsort@1.0.3:\n    resolution: {integrity: sha512-/+3GRL7dDAGEfM6TseQk/U+mi18TU2Ms9I3UlLdUMhz2hbvGNTKdj9xniwXfUqgYhHxRx0+8UnKkvlNwVU+cWQ==}\n\n  array-union@2.1.0:\n    resolution: {integrity: sha512-HGyxoOTYUyCM6stUe6EJgnd4EoewAI7zMdfqO+kGjnlZmBDz/cR5pf8r/cR4Wq60sL/p0IkcjUEEPwS3GFrIyw==}\n    engines: {node: '>=8'}\n\n  array.prototype.findlast@1.2.5:\n    resolution: {integrity: sha512-CVvd6FHg1Z3POpBLxO6E6zr+rSKEQ9L6rZHAaY7lLfhKsWYUBBOuMs0e9o24oopj6H+geRCX0YJ+TJLBK2eHyQ==}\n    engines: {node: '>= 0.4'}\n\n  array.prototype.flat@1.3.2:\n    resolution: {integrity: sha512-djYB+Zx2vLewY8RWlNCUdHjDXs2XOgm602S9E7P/UpHgfeHL00cRiIF+IN/G/aUJ7kGPb6yO/ErDI5V2s8iycA==}\n    engines: {node: '>= 0.4'}\n\n  array.prototype.flatmap@1.3.2:\n    resolution: {integrity: sha512-Ewyx0c9PmpcsByhSW4r+9zDU7sGjFc86qf/kKtuSCRdhfbk0SNLLkaT5qvcHnRGgc5NP/ly/y+qkXkqONX54CQ==}\n    engines: {node: '>= 0.4'}\n\n  array.prototype.tosorted@1.1.4:\n    resolution: {integrity: sha512-p6Fx8B7b7ZhL/gmUsAy0D15WhvDccw3mnGNbZpi3pmeJdxtWsj2jEaI4Y6oo3XiHfzuSgPwKc04MYt6KgvC/wA==}\n    engines: {node: '>= 0.4'}\n\n  arraybuffer.prototype.slice@1.0.3:\n    resolution: {integrity: sha512-bMxMKAjg13EBSVscxTaYA4mRc5t1UAXa2kXiGTNfZ079HIWXEkKmkgFrh/nJqamaLSrXO5H4WFFkPEaLJWbs3A==}\n    engines: {node: '>= 0.4'}\n\n  arrgv@1.0.2:\n    resolution: {integrity: sha512-a4eg4yhp7mmruZDQFqVMlxNRFGi/i1r87pt8SDHy0/I8PqSXoUTlWZRdAZo0VXgvEARcujbtTk8kiZRi1uDGRw==}\n    engines: {node: '>=8.0.0'}\n\n  arrify@1.0.1:\n    resolution: {integrity: sha512-3CYzex9M9FGQjCGMGyi6/31c8GJbgb0qGyrx5HWxPd0aCwh4cB2YjMb2Xf9UuoogrMrlO9cTqnB5rI5GHZTcUA==}\n    engines: {node: '>=0.10.0'}\n\n  arrify@3.0.0:\n    resolution: {integrity: sha512-tLkvA81vQG/XqE2mjDkGQHoOINtMHtysSnemrmoGe6PydDPMRbVugqyk4A6V/WDWEfm3l+0d8anA9r8cv/5Jaw==}\n    engines: {node: '>=12'}\n\n  asn1@0.2.6:\n    resolution: {integrity: sha512-ix/FxPn0MDjeyJ7i/yoHGFt/EX6LyNbxSEhPPXODPL+KB0VPk86UYfL0lMdy+KCnv+fmvIzySwaK5COwqVbWTQ==}\n\n  asn1js@3.0.5:\n    resolution: {integrity: sha512-FVnvrKJwpt9LP2lAMl8qZswRNm3T4q9CON+bxldk2iwk3FFpuwhx2FfinyitizWHsVYyaY+y5JzDR0rCMV5yTQ==}\n    engines: {node: '>=12.0.0'}\n\n  assert-options@0.8.2:\n    resolution: {integrity: sha512-XaXoMxY0zuwAb0YuZjxIm8FeWvNq0aWNIbrzHhFjme8Smxw4JlPoyrAKQ6808k5UvQdhvnWqHZCphq5mXd4TDA==}\n    engines: {node: '>=10.0.0'}\n\n  assert-plus@1.0.0:\n    resolution: {integrity: sha512-NfJ4UzBCcQGLDlQq7nHxH+tv3kyZ0hHQqF5BO6J7tNJeP5do1llPr8dZ8zHonfhAu0PHAdMkSo+8o0wxg9lZWw==}\n    engines: {node: '>=0.8'}\n\n  assertion-error@2.0.1:\n    resolution: {integrity: sha512-Izi8RQcffqCeNVgFigKli1ssklIbpHnCYc6AknXGYoB6grJqyeby7jv12JUQgmTAnIDnbck1uxksT4dzN3PWBA==}\n    engines: {node: '>=12'}\n\n  ast-types-flow@0.0.8:\n    resolution: {integrity: sha512-OH/2E5Fg20h2aPrbe+QL8JZQFko0YZaF+j4mnQ7BGhfavO7OpSLa8a0y9sBwomHdSbkhTS8TQNayBfnW5DwbvQ==}\n\n  ast-types@0.16.1:\n    resolution: {integrity: sha512-6t10qk83GOG8p0vKmaCr8eiilZwO171AvbROMtvvNiwrTly62t+7XkA8RdIIVbpMhCASAsxgAzdRSwh6nw/5Dg==}\n    engines: {node: '>=4'}\n\n  astral-regex@2.0.0:\n    resolution: {integrity: sha512-Z7tMw1ytTXt5jqMcOP+OQteU1VuNK9Y02uuJtKQ1Sv69jXQKKg5cibLwGJow8yzZP+eAc18EmLGPal0bp36rvQ==}\n    engines: {node: '>=8'}\n\n  async-sema@3.1.1:\n    resolution: {integrity: sha512-tLRNUXati5MFePdAk8dw7Qt7DpxPB60ofAgn8WRhW6a2rcimZnYBP9oxHiv0OHy+Wz7kPMG+t4LGdt31+4EmGg==}\n\n  asynckit@0.4.0:\n    resolution: {integrity: sha512-Oei9OH4tRh0YqU3GxhX79dM/mwVgvbZJaSNaRk+bshkj0S5cfHcgYakreBjrHwatXKbz+IoIdYLxrKim2MjW0Q==}\n\n  ava@6.1.3:\n    resolution: {integrity: sha512-tkKbpF1pIiC+q09wNU9OfyTDYZa8yuWvU2up3+lFJ3lr1RmnYh2GBpPwzYUEB0wvTPIUysGjcZLNZr7STDviRA==}\n    engines: {node: ^18.18 || ^20.8 || ^21 || ^22}\n    hasBin: true\n    peerDependencies:\n      '@ava/typescript': '*'\n    peerDependenciesMeta:\n      '@ava/typescript':\n        optional: true\n\n  available-typed-arrays@1.0.7:\n    resolution: {integrity: sha512-wvUjBtSGN7+7SjNpq/9M2Tg350UZD3q62IFZLbRAR1bSMlCo1ZaeW+BJ+D090e4hIIZLBcTDWe4Mh4jvUDajzQ==}\n    engines: {node: '>= 0.4'}\n\n  aws-sign2@0.7.0:\n    resolution: {integrity: sha512-08kcGqnYf/YmjoRhfxyu+CLxBjUtHLXLXX/vUfx9l2LYzG3c1m61nrpyFUZI6zeS+Li/wWMMidD9KgrqtGq3mA==}\n\n  aws4@1.13.2:\n    resolution: {integrity: sha512-lHe62zvbTB5eEABUVi/AwVh0ZKY9rMMDhmm+eeyuuUQbQ3+J+fONVQOZyj+DdrvD4BY33uYniyRJ4UJIaSKAfw==}\n\n  axe-core@4.10.2:\n    resolution: {integrity: sha512-RE3mdQ7P3FRSe7eqCWoeQ/Z9QXrtniSjp1wUjt5nRC3WIpz5rSCve6o3fsZ2aCpJtrZjSZgjwXAoTO5k4tEI0w==}\n    engines: {node: '>=4'}\n\n  axobject-query@4.1.0:\n    resolution: {integrity: sha512-qIj0G9wZbMGNLjLmg1PT6v2mE9AH2zlnADJD/2tC6E00hgmhUOfEB6greHPAfLRSufHqROIUTkw6E+M3lH0PTQ==}\n    engines: {node: '>= 0.4'}\n\n  balanced-match@1.0.2:\n    resolution: {integrity: sha512-3oSeUO0TMV67hN1AmbXsK4yaqU7tjiHlbxRDZOpH0KW9+CeX4bRAaX0Anxt0tx2MrpRpWwQaPwIlISEJhYU5Pw==}\n\n  bcrypt-pbkdf@1.0.2:\n    resolution: {integrity: sha512-qeFIXtP4MSoi6NLqO12WfqARWWuCKi2Rn/9hJLEmtB5yTNr9DqFWkJRCf2qShWzPeAMRnOgCrq0sg/KLv5ES9w==}\n\n  benchmark@2.1.4:\n    resolution: {integrity: sha512-l9MlfN4M1K/H2fbhfMy3B7vJd6AGKJVQn2h6Sg/Yx+KckoUA7ewS5Vv6TjSq18ooE1kS9hhAlQRH3AkXIh/aOQ==}\n\n  benny@3.7.1:\n    resolution: {integrity: sha512-USzYxODdVfOS7JuQq/L0naxB788dWCiUgUTxvN+WLPt/JfcDURNNj8kN/N+uK6PDvuR67/9/55cVKGPleFQINA==}\n    engines: {node: '>=12'}\n\n  better-path-resolve@1.0.0:\n    resolution: {integrity: sha512-pbnl5XzGBdrFU/wT4jqmJVPn2B6UHPBOhzMQkY/SPUPB6QtUXtmBHBIwCbXJol93mOpGMnQyP/+BB19q04xj7g==}\n    engines: {node: '>=4'}\n\n  bindings@1.5.0:\n    resolution: {integrity: sha512-p2q/t/mhvuOj/UeLlV6566GD/guowlr0hHxClI0W9m7MWYkL1F0hLo+0Aexs9HSPCtR1SXQ0TD3MMKrXZajbiQ==}\n\n  bluebird@2.11.0:\n    resolution: {integrity: sha512-UfFSr22dmHPQqPP9XWHRhq+gWnHCYguQGkXQlbyPtW5qTnhFWA8/iXg765tH0cAjy7l/zPJ1aBTO0g5XgA7kvQ==}\n\n  bluebird@3.7.2:\n    resolution: {integrity: sha512-XpNj6GDQzdfW+r2Wnn7xiSAd7TM3jzkxGXBGTtWKuSXv1xUV+azxAm8jdWZN06QTQk+2N2XB9jRDkvbmQmcRtg==}\n\n  blueimp-md5@2.19.0:\n    resolution: {integrity: sha512-DRQrD6gJyy8FbiE4s+bDoXS9hiW3Vbx5uCdwvcCf3zLHL+Iv7LtGHLpr+GZV8rHG8tK766FGYBwRbu8pELTt+w==}\n\n  boolean@3.2.0:\n    resolution: {integrity: sha512-d0II/GO9uf9lfUHH2BQsjxzRJZBdsjgsBiW4BvhWk/3qoKwQFjIDVN19PfX8F2D/r9PCMTtLWjYVCFrpeYUzsw==}\n    deprecated: Package no longer supported. Contact Support at https://www.npmjs.com/support for more info.\n\n  brace-expansion@1.1.11:\n    resolution: {integrity: sha512-iCuPHDFgrHX7H2vEI/5xpz07zSHB00TpugqhmYtVmMO6518mCuRMoOYFldEBl0g187ufozdaHgWKcYFb61qGiA==}\n\n  brace-expansion@2.0.1:\n    resolution: {integrity: sha512-XnAIvQ8eM+kC6aULx6wuQiwVsnzsi9d3WxzV3FpWTGA19F621kwdbsAcFKXgKUHZWsy+mY6iL1sHTxWEFCytDA==}\n\n  braces@3.0.3:\n    resolution: {integrity: sha512-yQbXgO/OSZVD2IsiLlro+7Hf6Q18EJrKSEsdoMzKePKXct3gvD8oLcOQdIzGupr5Fj+EDe8gO/lxc1BzfMpxvA==}\n    engines: {node: '>=8'}\n\n  breakword@1.0.6:\n    resolution: {integrity: sha512-yjxDAYyK/pBvws9H4xKYpLDpYKEH6CzrBPAuXq3x18I+c/2MkVtT3qAr7Oloi6Dss9qNhPVueAAVU1CSeNDIXw==}\n\n  browser-request@0.3.3:\n    resolution: {integrity: sha512-YyNI4qJJ+piQG6MMEuo7J3Bzaqssufx04zpEKYfSrl/1Op59HWali9zMtBpXnkmqMcOuWJPZvudrm9wISmnCbg==}\n    engines: {'0': node}\n\n  browserslist@4.23.1:\n    resolution: {integrity: sha512-TUfofFo/KsK/bWZ9TWQ5O26tsWW4Uhmt8IYklbnUa70udB6P2wA7w7o4PY4muaEPBQaAX+CEnmmIA41NVHtPVw==}\n    engines: {node: ^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7}\n    hasBin: true\n\n  browserslist@4.24.2:\n    resolution: {integrity: sha512-ZIc+Q62revdMcqC6aChtW4jz3My3klmCO1fEmINZY/8J3EpBg5/A/D0AKmBveUh6pgoeycoMkVMko84tuYS+Gg==}\n    engines: {node: ^6 || ^7 || ^8 || ^9 || ^10 || ^11 || ^12 || >=13.7}\n    hasBin: true\n\n  builtin-modules@3.3.0:\n    resolution: {integrity: sha512-zhaCDicdLuWN5UbN5IMnFqNMhNfo919sH85y2/ea+5Yg9TsTkeZxpL+JLbp6cgYFS4sRLp3YV4S6yDuqVWHYOw==}\n    engines: {node: '>=6'}\n\n  busboy@1.6.0:\n    resolution: {integrity: sha512-8SFQbg/0hQ9xy3UNTB0YEnsNBbWfhf7RtnzpL7TkBiTBRfrQ9Fxcnz7VJsleJpyp6rVLvXiuORqjlHi5q+PYuA==}\n    engines: {node: '>=10.16.0'}\n\n  cac@6.7.14:\n    resolution: {integrity: sha512-b6Ilus+c3RrdDk+JhLKUAQfzzgLEPy6wcXqS7f/xe1EETvsDP6GORG7SFuOs6cID5YkqchW/LXZbX5bc8j7ZcQ==}\n    engines: {node: '>=8'}\n\n  caching-transform@4.0.0:\n    resolution: {integrity: sha512-kpqOvwXnjjN44D89K5ccQC+RUrsy7jB/XLlRrx0D7/2HNcTPqzsb6XgYoErwko6QsV184CA2YgS1fxDiiDZMWA==}\n    engines: {node: '>=8'}\n\n  call-bind@1.0.7:\n    resolution: {integrity: sha512-GHTSNSYICQ7scH7sZ+M2rFopRoLh8t2bLSW6BbgrtLsahOIB5iyAVJf9GjWK3cYTDaMj4XdBpM1cA6pIS0Kv2w==}\n    engines: {node: '>= 0.4'}\n\n  callsites@3.1.0:\n    resolution: {integrity: sha512-P8BjAsXvZS+VIDUI11hHCQEv74YT67YUi5JJFNWIqL235sBmjX4+qx9Muvls5ivyNENctx46xQLQ3aTuE7ssaQ==}\n    engines: {node: '>=6'}\n\n  callsites@4.1.0:\n    resolution: {integrity: sha512-aBMbD1Xxay75ViYezwT40aQONfr+pSXTHwNKvIXhXD6+LY3F1dLIcceoC5OZKBVHbXcysz1hL9D2w0JJIMXpUw==}\n    engines: {node: '>=12.20'}\n\n  camelcase-keys@6.2.2:\n    resolution: {integrity: sha512-YrwaA0vEKazPBkn0ipTiMpSajYDSe+KjQfrjhcBMxJt/znbvlHd8Pw/Vamaz5EB4Wfhs3SUR3Z9mwRu/P3s3Yg==}\n    engines: {node: '>=8'}\n\n  camelcase@5.3.1:\n    resolution: {integrity: sha512-L28STB170nwWS63UjtlEOE3dldQApaJXZkOI1uMFfzf3rRuPegHaHesyee+YxQ+W6SvRDQV6UrdOdRiR153wJg==}\n    engines: {node: '>=6'}\n\n  camelcase@6.3.0:\n    resolution: {integrity: sha512-Gmy6FhYlCY7uOElZUSbxo2UCDH8owEk996gkbrpsgGtrJLM3J7jGxl9Ic7Qwwj4ivOE5AWZWRMecDdF7hqGjFA==}\n    engines: {node: '>=10'}\n\n  caniuse-lite@1.0.30001632:\n    resolution: {integrity: sha512-udx3o7yHJfUxMLkGohMlVHCvFvWmirKh9JAH/d7WOLPetlH+LTL5cocMZ0t7oZx/mdlOWXti97xLZWc8uURRHg==}\n\n  caniuse-lite@1.0.30001680:\n    resolution: {integrity: sha512-rPQy70G6AGUMnbwS1z6Xg+RkHYPAi18ihs47GH0jcxIG7wArmPgY3XbS2sRdBbxJljp3thdT8BIqv9ccCypiPA==}\n\n  caseless@0.12.0:\n    resolution: {integrity: sha512-4tYFyifaFfGacoiObjJegolkwSU4xQNGbVgUiNYVUxbQ2x2lUsFvY4hVgVzGiIe6WLOPqycWXA40l+PWsxthUw==}\n\n  cbor@9.0.2:\n    resolution: {integrity: sha512-JPypkxsB10s9QOWwa6zwPzqE1Md3vqpPc+cai4sAecuCsRyAtAl/pMyhPlMbT/xtPnm2dznJZYRLui57qiRhaQ==}\n    engines: {node: '>=16'}\n\n  chai@5.1.2:\n    resolution: {integrity: sha512-aGtmf24DW6MLHHG5gCx4zaI3uBq3KRtxeVs0DjFH6Z0rDNbsvTxFASFvdj79pxjxZ8/5u3PIiN3IwEIQkiiuPw==}\n    engines: {node: '>=12'}\n\n  chalk-template@1.1.0:\n    resolution: {integrity: sha512-T2VJbcDuZQ0Tb2EWwSotMPJjgpy1/tGee1BTpUNsGZ/qgNjV2t7Mvu+d4600U564nbLesN1x2dPL+xii174Ekg==}\n    engines: {node: '>=14.16'}\n\n  chalk@2.4.2:\n    resolution: {integrity: sha512-Mti+f9lpJNcwF4tWV8/OrTTtF1gZi+f8FqlyAdouralcFWFQWF2+NgCHShjkCb+IFBLq9buZwE1xckQU4peSuQ==}\n    engines: {node: '>=4'}\n\n  chalk@4.1.2:\n    resolution: {integrity: sha512-oKnbhFyRIXpUuez8iBMmyEa4nbj4IOQyuhc/wy9kY7/WVPcwIO9VA668Pu8RkO7+0G76SLROeyw9CpQ061i4mA==}\n    engines: {node: '>=10'}\n\n  chalk@5.3.0:\n    resolution: {integrity: sha512-dLitG79d+GV1Nb/VYcCDFivJeK1hiukt9QjRNVOsUtTy1rR1YJsmpGGTZ3qJos+uw7WmWF4wUwBd9jxjocFC2w==}\n    engines: {node: ^12.17.0 || ^14.13 || >=16.0.0}\n\n  chance@1.1.12:\n    resolution: {integrity: sha512-vVBIGQVnwtUG+SYe0ge+3MvF78cvSpuCOEUJr7sVEk2vSBuMW6OXNJjSzdtzrlxNUEaoqH2GBd5Y/+18BEB01Q==}\n\n  chardet@0.7.0:\n    resolution: {integrity: sha512-mT8iDcrh03qDGRRmoA2hmBJnxpllMR+0/0qlzjqZES6NdiWDcZkCNAk4rPFZ9Q85r27unkiNNg8ZOiwZXBHwcA==}\n\n  check-error@2.1.1:\n    resolution: {integrity: sha512-OAlb+T7V4Op9OwdkjmguYRqncdlx5JiofwOAUkmTF+jNdHwzTaTs4sRAGpzLF3oOz5xAyDGrPgeIDFQmDOTiJw==}\n    engines: {node: '>= 16'}\n\n  chownr@2.0.0:\n    resolution: {integrity: sha512-bIomtDF5KGpdogkLd9VspvFzk9KfpyyGlS8YFVZl7TGPBHL5snIOnxeshwVgPteQ9b4Eydl+pVbIyE1DcvCWgQ==}\n    engines: {node: '>=10'}\n\n  chunkd@2.0.1:\n    resolution: {integrity: sha512-7d58XsFmOq0j6el67Ug9mHf9ELUXsQXYJBkyxhH/k+6Ke0qXRnv0kbemx+Twc6fRJ07C49lcbdgm9FL1Ei/6SQ==}\n\n  ci-info@3.9.0:\n    resolution: {integrity: sha512-NIxF55hv4nSqQswkAeiOi1r83xy8JldOFDTWiug55KBu9Jnblncd2U6ViHmYgHf01TPZS77NJBhBMKdWj9HQMQ==}\n    engines: {node: '>=8'}\n\n  ci-info@4.0.0:\n    resolution: {integrity: sha512-TdHqgGf9odd8SXNuxtUBVx8Nv+qZOejE6qyqiy5NtbYYQOeFa6zmHkxlPzmaLxWWHsU6nJmB7AETdVPi+2NBUg==}\n    engines: {node: '>=8'}\n\n  ci-info@4.1.0:\n    resolution: {integrity: sha512-HutrvTNsF48wnxkzERIXOe5/mlcfFcbfCmwcg6CJnizbSue78AbDt+1cgl26zwn61WFxhcPykPfZrbqjGmBb4A==}\n    engines: {node: '>=8'}\n\n  ci-parallel-vars@1.0.1:\n    resolution: {integrity: sha512-uvzpYrpmidaoxvIQHM+rKSrigjOe9feHYbw4uOI2gdfe1C3xIlxO+kVXq83WQWNniTf8bAxVpy+cQeFQsMERKg==}\n\n  clean-regexp@1.0.0:\n    resolution: {integrity: sha512-GfisEZEJvzKrmGWkvfhgzcz/BllN1USeqD2V6tg14OAOgaCD2Z/PUEuxnAZ/nPvmaHRG7a8y77p1T/IRQ4D1Hw==}\n    engines: {node: '>=4'}\n\n  clean-stack@2.2.0:\n    resolution: {integrity: sha512-4diC9HaTE+KRAMWhDhrGOECgWZxoevMc5TlkObMqNSsVU62PYzXZ/SMTjzyGAFF1YusgxGcSWTEXBhp0CPwQ1A==}\n    engines: {node: '>=6'}\n\n  clear-module@4.1.2:\n    resolution: {integrity: sha512-LWAxzHqdHsAZlPlEyJ2Poz6AIs384mPeqLVCru2p0BrP9G/kVGuhNyZYClLO6cXlnuJjzC8xtsJIuMjKqLXoAw==}\n    engines: {node: '>=8'}\n\n  cli-cursor@3.1.0:\n    resolution: {integrity: sha512-I/zHAwsKf9FqGoXM4WWRACob9+SNukZTd94DWF57E4toouRulbCxcUh6RKUEOQlYTHJnzkPMySvPNaaSLNfLZw==}\n    engines: {node: '>=8'}\n\n  cli-truncate@4.0.0:\n    resolution: {integrity: sha512-nPdaFdQ0h/GEigbPClz11D0v/ZJEwxmeVZGeMo3Z5StPtUTkA9o1lD6QwoirYiSDzbcwn2XcjwmCp68W1IS4TA==}\n    engines: {node: '>=18'}\n\n  cliui@6.0.0:\n    resolution: {integrity: sha512-t6wbgtoCXvAzst7QgXxJYqPt0usEfbgQdftEPbLL/cvv6HPE5VgvqCuAIDR0NgU52ds6rFwqrgakNLrHEjCbrQ==}\n\n  cliui@8.0.1:\n    resolution: {integrity: sha512-BSeNnyus75C4//NQ9gQt1/csTXyo/8Sb+afLAkzAptFuMsod9HFokGNudZpi/oQV73hnVK+sR+5PVRMd+Dr7YQ==}\n    engines: {node: '>=12'}\n\n  clone-regexp@3.0.0:\n    resolution: {integrity: sha512-ujdnoq2Kxb8s3ItNBtnYeXdm07FcU0u8ARAT1lQ2YdMwQC+cdiXX8KoqMVuglztILivceTtp4ivqGSmEmhBUJw==}\n    engines: {node: '>=12'}\n\n  clone@1.0.4:\n    resolution: {integrity: sha512-JQHZ2QMW6l3aH/j6xCqQThY/9OH4D/9ls34cgkUBiEeocRTU04tHfKPBsUK1PqZCUQM7GiA0IIXJSuXHI64Kbg==}\n    engines: {node: '>=0.8'}\n\n  code-excerpt@4.0.0:\n    resolution: {integrity: sha512-xxodCmBen3iy2i0WtAK8FlFNrRzjUqjRsMfho58xT/wvZU1YTM3fCnRjcy1gJPMepaRlgm/0e6w8SpWHpn3/cA==}\n    engines: {node: ^12.20.0 || ^14.13.1 || >=16.0.0}\n\n  color-convert@1.9.3:\n    resolution: {integrity: sha512-QfAUtd+vFdAtFQcC8CCyYt1fYWxSqAiK2cSD6zDB8N3cpsEBAvRxp9zOGg6G/SHHJYAT88/az/IuDGALsNVbGg==}\n\n  color-convert@2.0.1:\n    resolution: {integrity: sha512-RRECPsj7iu/xb5oKYcsFHSppFNnsj/52OVTRKb4zP5onXwVF3zVmmToNcOfGC+CRDpfK/U584fMg38ZHCaElKQ==}\n    engines: {node: '>=7.0.0'}\n\n  color-name@1.1.3:\n    resolution: {integrity: sha512-72fSenhMw2HZMTVHeCA9KCmpEIbzWiQsjN+BHcBbS9vr1mtt+vJjPdksIBNUmKAW8TFUDPJK5SUU3QhE9NEXDw==}\n\n  color-name@1.1.4:\n    resolution: {integrity: sha512-dOy+3AuW3a2wNbZHIuMZpTcgjGuLU/uBL/ubcZF9OXbDo8ff4O8yVp5Bf0efS8uEoYo5q4Fx7dY9OgQGXgAsQA==}\n\n  color-support@1.1.3:\n    resolution: {integrity: sha512-qiBjkpbMLO/HL68y+lh4q0/O1MZFj2RX6X/KmMa3+gJD3z+WwI1ZzDHysvqHGS3mP6mznPckpXmw1nI9cJjyRg==}\n    hasBin: true\n\n  combined-stream@1.0.8:\n    resolution: {integrity: sha512-FQN4MRfuJeHf7cBbBMJFXhKSDq+2kAArBlmRBvcvFE5BB1HZKXtSFASDhdlz9zOYwxh8lDdnvmMOe/+5cdoEdg==}\n    engines: {node: '>= 0.8'}\n\n  commander@12.1.0:\n    resolution: {integrity: sha512-Vw8qHK3bZM9y/P10u3Vib8o/DdkvA2OtPtZvD871QKjy74Wj1WSKFILMPRPSdUSx5RFK1arlJzEtA4PkFgnbuA==}\n    engines: {node: '>=18'}\n\n  commander@4.1.1:\n    resolution: {integrity: sha512-NOKm8xhkzAjzFx8B2v5OAHT+u5pRQc2UCa2Vq9jYL/31o2wi9mxBA7LIFs3sV5VSC49z6pEhfbMULvShKj26WA==}\n    engines: {node: '>= 6'}\n\n  commander@6.2.1:\n    resolution: {integrity: sha512-U7VdrJFnJgo4xjrHpTzu0yrHPGImdsmD95ZlgYSEajAn2JKzDhDTPG9kBTefmObL2w/ngeZnilk+OV9CG3d7UA==}\n    engines: {node: '>= 6'}\n\n  comment-json@4.2.5:\n    resolution: {integrity: sha512-bKw/r35jR3HGt5PEPm1ljsQQGyCrR8sFGNiN5L+ykDHdpO8Smxkrkla9Yi6NkQyUrb8V54PGhfMs6NrIwtxtdw==}\n    engines: {node: '>= 6'}\n\n  comment-parser@1.4.1:\n    resolution: {integrity: sha512-buhp5kePrmda3vhc5B9t7pUQXAb2Tnd0qgpkIhPhkHXxJpiPJ11H0ZEU0oBpJ2QztSbzG/ZxMj/CHsYJqRHmyg==}\n    engines: {node: '>= 12.0.0'}\n\n  common-path-prefix@3.0.0:\n    resolution: {integrity: sha512-QE33hToZseCH3jS0qN96O/bSh3kaw/h+Tq7ngyY9eWDUnTlTNUyqfqvCXioLe5Na5jFsL78ra/wuBU4iuEgd4w==}\n\n  common-tags@1.8.2:\n    resolution: {integrity: sha512-gk/Z852D2Wtb//0I+kRFNKKE9dIIVirjoqPoA1wJU+XePVXZfGeBpk45+A1rKO4Q43prqWBNY/MiIeRLbPWUaA==}\n    engines: {node: '>=4.0.0'}\n\n  commondir@1.0.1:\n    resolution: {integrity: sha512-W9pAhw0ja1Edb5GVdIF1mjZw/ASI0AlShXM83UUGe2DVr5TdAPEA1OA8m/g8zWp9x6On7gqufY+FatDbC3MDQg==}\n\n  concat-map@0.0.1:\n    resolution: {integrity: sha512-/Srv4dswyQNBfohGpz9o6Yb3Gz3SrUDqBH5rTuhGR7ahtlbYKnVxw2bCFMRljaA7EXHaXZ8wsHdodFvbkhKmqg==}\n\n  concordance@5.0.4:\n    resolution: {integrity: sha512-OAcsnTEYu1ARJqWVGwf4zh4JDfHZEaSNlNccFmt8YjB2l/n19/PF2viLINHc57vO4FKIAFl2FWASIGZZWZ2Kxw==}\n    engines: {node: '>=10.18.0 <11 || >=12.14.0 <13 || >=14'}\n\n  console-control-strings@1.1.0:\n    resolution: {integrity: sha512-ty/fTekppD2fIwRvnZAVdeOiGd1c7YXEixbgJTNzqcxJWKQnjJ/V1bNEEE6hygpM3WjwHFUVK6HTjWSzV4a8sQ==}\n\n  contents@5.0.0:\n    resolution: {integrity: sha512-wnnGorqo07ZSIzMQmUc4vUv1NEXl7elBtqoz5UcysV+pbSvphZYfI763rXgpFK2H9o5rvjQQ8kZxp7hOOwIe3A==}\n\n  convert-hrtime@5.0.0:\n    resolution: {integrity: sha512-lOETlkIeYSJWcbbcvjRKGxVMXJR+8+OQb/mTPbA4ObPMytYIsUbuOE0Jzy60hjARYszq1id0j8KgVhC+WGZVTg==}\n    engines: {node: '>=12'}\n\n  convert-source-map@1.9.0:\n    resolution: {integrity: sha512-ASFBup0Mz1uyiIjANan1jzLQami9z1PoYSZCiiYW2FczPbenXc45FZdBZLzOT+r6+iciuEModtmCti+hjaAk0A==}\n\n  convert-source-map@2.0.0:\n    resolution: {integrity: sha512-Kvp459HrV2FEJ1CAsi1Ku+MY3kasH19TFykTz2xWmMeq6bk2NU3XXvfJ+Q61m0xktWwt+1HSYf3JZsTms3aRJg==}\n\n  convert-to-spaces@2.0.1:\n    resolution: {integrity: sha512-rcQ1bsQO9799wq24uE5AM2tAILy4gXGIK/njFWcVQkGNZ96edlpY+A7bjwvzjYvLDyzmG1MmMLZhpcsb+klNMQ==}\n    engines: {node: ^12.20.0 || ^14.13.1 || >=16.0.0}\n\n  core-js-compat@3.39.0:\n    resolution: {integrity: sha512-VgEUx3VwlExr5no0tXlBt+silBvhTryPwCXRI2Id1PN8WTKu7MreethvddqOubrYxkFdv/RnYrqlv1sFNAUelw==}\n\n  core-js-pure@3.39.0:\n    resolution: {integrity: sha512-7fEcWwKI4rJinnK+wLTezeg2smbFFdSBP6E2kQZNbnzM2s1rpKQ6aaRteZSSg7FLU3P0HGGVo/gbpfanU36urg==}\n\n  core-util-is@1.0.2:\n    resolution: {integrity: sha512-3lqz5YjWTYnW6dlDa5TLaTCcShfar1e40rmcJVwCBJC6mWlFuj0eCHIElmG1g5kyuJ/GD+8Wn4FFCcz4gJPfaQ==}\n\n  core-util-is@1.0.3:\n    resolution: {integrity: sha512-ZQBvi1DcpJ4GDqanjucZ2Hj3wEO5pZDS89BWbkcrvdxksJorwUDDZamX9ldFkp9aw2lmBDLgkObEA4DWNJ9FYQ==}\n\n  cosmiconfig@8.0.0:\n    resolution: {integrity: sha512-da1EafcpH6b/TD8vDRaWV7xFINlHlF6zKsGwS1TsuVJTZRkquaS5HTMq7uq6h31619QjbsYl21gVDOm32KM1vQ==}\n    engines: {node: '>=14'}\n\n  crack-json@1.3.0:\n    resolution: {integrity: sha512-JfZ9NPLsU9ejTYgZ7fM+5TIMfTwROTxpi2Twh597GxmiVDwIGZSjaor+zsQBKZ0mmCKOFb9EZZLVeKNf/5UaGg==}\n    engines: {node: '>=8.0'}\n\n  create-eslint-index@1.0.0:\n    resolution: {integrity: sha512-nXvJjnfDytOOaPOonX0h0a1ggMoqrhdekGeZkD6hkcWYvlCWhU719tKFVh8eU04CnMwu3uwe1JjwuUF2C3k2qg==}\n    engines: {node: '>=4.0.0'}\n\n  create-require@1.1.1:\n    resolution: {integrity: sha512-dcKFX3jn0MpIaXjisoRvexIJVEKzaq7z2rZKxf+MSr9TkdmHmsU4m2lcLojrj/FHl8mk5VxMmYA+ftRkP/3oKQ==}\n\n  cross-spawn@5.1.0:\n    resolution: {integrity: sha512-pTgQJ5KC0d2hcY8eyL1IzlBPYjTkyH72XRZPnLyKus2mBfNjQs3klqbJU2VILqZryAZUt9JOb3h/mWMy23/f5A==}\n\n  cross-spawn@7.0.3:\n    resolution: {integrity: sha512-iRDPJKUPVEND7dHPO8rkbOnPpyDygcDFtWjpeWNCgy8WP2rXcxXL8TskReQl6OrB2G7+UJrags1q15Fudc7G6w==}\n    engines: {node: '>= 8'}\n\n  cross-spawn@7.0.5:\n    resolution: {integrity: sha512-ZVJrKKYunU38/76t0RMOulHOnUcbU9GbpWKAOZ0mhjr7CX6FVrH+4FrAapSOekrgFQ3f/8gwMEuIft0aKq6Hug==}\n    engines: {node: '>= 8'}\n\n  cross-spawn@7.0.6:\n    resolution: {integrity: sha512-uV2QOWP2nWzsy2aMp8aRibhi9dlzF5Hgh5SHaB9OiTGEyDTiJJyx0uy51QXdyWbtAHNua4XJzUKca3OzKUd3vA==}\n    engines: {node: '>= 8'}\n\n  cspell-config-lib@8.16.0:\n    resolution: {integrity: sha512-PGT6ohLtIYXYLIm+R5hTcTrF0dzj8e7WAUJSJe5WlV/7lrwVdwgWaliLcXtSSPmfxgczr6sndX9TMJ2IEmPrmg==}\n    engines: {node: '>=18'}\n\n  cspell-dictionary@8.16.0:\n    resolution: {integrity: sha512-Y3sN6ttLBKbu0dOLcduY641n5QP1srUvZkW4bOTnG455DbIZfilrP1El/2Hl0RS6hC8LN9PM4bsIm/2xgdbApA==}\n    engines: {node: '>=18'}\n\n  cspell-gitignore@8.16.0:\n    resolution: {integrity: sha512-ODKe0ooyzYSBJkwgIVZSRIvzoZfT4tEbFt4fFDT88wPyyfX7xp7MAQhXy5KD1ocXH0WvYbdv37qzn2UbckrahA==}\n    engines: {node: '>=18'}\n    hasBin: true\n\n  cspell-glob@8.16.0:\n    resolution: {integrity: sha512-xJSXRHwfENCNFmjpVSEucXY8E3BrpSCA+TukmOYtLyaMKtn6EAwoCpEU7Oj2tZOjdivprPmQ74k4Dqb1RHjIVQ==}\n    engines: {node: '>=18'}\n\n  cspell-grammar@8.16.0:\n    resolution: {integrity: sha512-vvbJEkBqXocGH/H975RtkfMzVpNxNGMd0JCDd+NjbpeRyZceuChFw5Tie7kHteFY29SwZovub+Am3F4H1kmf9A==}\n    engines: {node: '>=18'}\n    hasBin: true\n\n  cspell-io@8.16.0:\n    resolution: {integrity: sha512-WIK5uhPMjGsTAzm2/fGRbIdr7zWsMVG1fn8wNJYUiYELuyvzvLelfI1VG6szaFCGYqd6Uvgb/fS0uNbwGqCLAQ==}\n    engines: {node: '>=18'}\n\n  cspell-lib@8.16.0:\n    resolution: {integrity: sha512-fU8CfECyuhT12COIi4ViQu2bTkdqaa+05YSd2ZV8k8NA7lapPaMFnlooxdfcwwgZJfHeMhRVMzvQF1OhWmwGfA==}\n    engines: {node: '>=18'}\n\n  cspell-trie-lib@8.16.0:\n    resolution: {integrity: sha512-Io1qqI0r4U9ewAWBLClFBBlxLeAoIi15PUGJi4Za1xrlgQJwRE8PMNIJNHKmPEIp78Iute3o/JyC2OfWlxl4Sw==}\n    engines: {node: '>=18'}\n\n  cspell@8.16.0:\n    resolution: {integrity: sha512-U6Up/4nODE+Ca+zqwZXTgBioGuF2JQHLEUIuoRJkJzAZkIBYDqrMXM+zdSL9E39+xb9jAtr9kPAYJf1Eybgi9g==}\n    engines: {node: '>=18'}\n    hasBin: true\n\n  cssom@0.3.8:\n    resolution: {integrity: sha512-b0tGHbfegbhPJpxpiBPU2sCkigAqtM9O121le6bbOlgyV+NyGyCmVfJ6QW9eRjz8CpNfWEOYBIMIGRYkLwsIYg==}\n\n  cssstyle@0.2.37:\n    resolution: {integrity: sha512-FUpKc+1FNBsHUr9IsfSGCovr8VuGOiiuzlgCyppKBjJi2jYTOFLN3oiiNRMIvYqbFzF38mqKj4BgcevzU5/kIA==}\n\n  csv-generate@3.4.3:\n    resolution: {integrity: sha512-w/T+rqR0vwvHqWs/1ZyMDWtHHSJaN06klRqJXBEpDJaM/+dZkso0OKh1VcuuYvK3XM53KysVNq8Ko/epCK8wOw==}\n\n  csv-parse@4.16.3:\n    resolution: {integrity: sha512-cO1I/zmz4w2dcKHVvpCr7JVRu8/FymG5OEpmvsZYlccYolPBLoVGKUHgNoc4ZGkFeFlWGEDmMyBM+TTqRdW/wg==}\n\n  csv-stringify@5.6.5:\n    resolution: {integrity: sha512-PjiQ659aQ+fUTQqSrd1XEDnOr52jh30RBurfzkscaE2tPaFsDH5wOAHJiw8XAHphRknCwMUE9KRayc4K/NbO8A==}\n\n  csv@5.5.3:\n    resolution: {integrity: sha512-QTaY0XjjhTQOdguARF0lGKm5/mEq9PD9/VhZZegHDIBq2tQwgNpHc3dneD4mGo2iJs+fTKv5Bp0fZ+BRuY3Z0g==}\n    engines: {node: '>= 0.1.90'}\n\n  currently-unhandled@0.4.1:\n    resolution: {integrity: sha512-/fITjgjGU50vjQ4FH6eUoYu+iUoUKIXws2hL15JJpIR+BbTxaXQsMuuyjtNh2WqsSBS5nsaZHFsFecyw5CCAng==}\n    engines: {node: '>=0.10.0'}\n\n  damerau-levenshtein@1.0.8:\n    resolution: {integrity: sha512-sdQSFB7+llfUcQHUQO3+B8ERRj0Oa4w9POWMI/puGtuf7gFywGmkaLCElnudfTiKZV+NvHqL0ifzdrI8Ro7ESA==}\n\n  dashdash@1.14.1:\n    resolution: {integrity: sha512-jRFi8UDGo6j+odZiEpjazZaWqEal3w/basFjQHQEwVtZJGDpxbH1MeYluwCS8Xq5wmLJooDlMgvVarmWfGM44g==}\n    engines: {node: '>=0.10'}\n\n  data-view-buffer@1.0.1:\n    resolution: {integrity: sha512-0lht7OugA5x3iJLOWFhWK/5ehONdprk0ISXqVFn/NFrDu+cuc8iADFrGQz5BnRK7LLU3JmkbXSxaqX+/mXYtUA==}\n    engines: {node: '>= 0.4'}\n\n  data-view-byte-length@1.0.1:\n    resolution: {integrity: sha512-4J7wRJD3ABAzr8wP+OcIcqq2dlUKp4DVflx++hs5h5ZKydWMI6/D/fAot+yh6g2tHh8fLFTvNOaVN357NvSrOQ==}\n    engines: {node: '>= 0.4'}\n\n  data-view-byte-offset@1.0.0:\n    resolution: {integrity: sha512-t/Ygsytq+R995EJ5PZlD4Cu56sWa8InXySaViRzw9apusqsOO2bQP+SbYzAhR0pFKoB+43lYy8rWban9JSuXnA==}\n    engines: {node: '>= 0.4'}\n\n  dataloader@1.4.0:\n    resolution: {integrity: sha512-68s5jYdlvasItOJnCuI2Q9s4q98g0pCyL3HrcKJu8KNugUl8ahgmZYg38ysLTgQjjXX3H8CJLkAvWrclWfcalw==}\n\n  dataloader@2.2.2:\n    resolution: {integrity: sha512-8YnDaaf7N3k/q5HnTJVuzSyLETjoZjVmHc4AeKAzOvKHEFQKcn64OKBfzHYtE9zGjctNM7V9I0MfnUVLpi7M5g==}\n\n  date-time@3.1.0:\n    resolution: {integrity: sha512-uqCUKXE5q1PNBXjPqvwhwJf9SwMoAHBgWJ6DcrnS5o+W2JOiIILl0JEdVD8SGujrNS02GGxgwAg2PN2zONgtjg==}\n    engines: {node: '>=6'}\n\n  deadlink@1.1.3:\n    resolution: {integrity: sha512-m1h/xFi5eqcByMT7AGBt0BCygIifVyUw6CtEh1NpS/x0yeyS709+nCY5ByK255J/5hiRb9O/8dx6mmx3t6qSIQ==}\n    engines: {node: '>=4'}\n\n  debug@3.2.7:\n    resolution: {integrity: sha512-CFjzYYAi4ThfiQvizrFQevTTXHtnCqWfe7x1AhgEscTz6ZbLbfoLRLPugTQyBth6f8ZERVUSyWHFD/7Wu4t1XQ==}\n    peerDependencies:\n      supports-color: '*'\n    peerDependenciesMeta:\n      supports-color:\n        optional: true\n\n  debug@4.3.5:\n    resolution: {integrity: sha512-pt0bNEmneDIvdL1Xsd9oDQ/wrQRkXDT4AUWlNZNPKvW5x/jyO9VFXkJUP07vQ2upmw5PlaITaPKc31jK13V+jg==}\n    engines: {node: '>=6.0'}\n    peerDependencies:\n      supports-color: '*'\n    peerDependenciesMeta:\n      supports-color:\n        optional: true\n\n  debug@4.4.0:\n    resolution: {integrity: sha512-6WTZ/IxCY/T6BALoZHaE4ctp9xm+Z5kY/pzYaCHRFeyVhojxlrm+46y68HA6hr0TcwEssoxNiDEUJQjfPZ/RYA==}\n    engines: {node: '>=6.0'}\n    peerDependencies:\n      supports-color: '*'\n    peerDependenciesMeta:\n      supports-color:\n        optional: true\n\n  decamelize-keys@1.1.1:\n    resolution: {integrity: sha512-WiPxgEirIV0/eIOMcnFBA3/IJZAZqKnwAwWyvvdi4lsr1WCN22nhdf/3db3DoZcUjTV2SqfzIwNyp6y2xs3nmg==}\n    engines: {node: '>=0.10.0'}\n\n  decamelize@1.2.0:\n    resolution: {integrity: sha512-z2S+W9X73hAUUki+N+9Za2lBlun89zigOyGrsax+KUQ6wKW4ZoWpEYBkGhQjwAjjDCkWxhY0VKEhk8wzY7F5cA==}\n    engines: {node: '>=0.10.0'}\n\n  deep-eql@5.0.2:\n    resolution: {integrity: sha512-h5k/5U50IJJFpzfL6nO9jaaumfjO/f2NjK/oYB2Djzm4p9L+3T9qWpZqZ2hAbLPuuYq9wrU08WQyBTL5GbPk5Q==}\n    engines: {node: '>=6'}\n\n  deep-is@0.1.4:\n    resolution: {integrity: sha512-oIPzksmTg4/MriiaYGO+okXDT7ztn/w3Eptv/+gSIdMdKsJo0u4CfYNFJPy+4SKMuCqGw2wxnA+URMg3t8a/bQ==}\n\n  default-require-extensions@3.0.1:\n    resolution: {integrity: sha512-eXTJmRbm2TIt9MgWTsOH1wEuhew6XGZcMeGKCtLedIg/NCsg1iBePXkceTdK4Fii7pzmN9tGsZhKzZ4h7O/fxw==}\n    engines: {node: '>=8'}\n\n  defaults@1.0.4:\n    resolution: {integrity: sha512-eFuaLoy/Rxalv2kr+lqMlUnrDWV+3j4pljOIJgLIhI058IQfWJ7vXhyEIHu+HtC738klGALYxOKDO0bQP3tg8A==}\n\n  define-data-property@1.1.4:\n    resolution: {integrity: sha512-rBMvIzlpA8v6E+SJZoo++HAYqsLrkg7MSfIinMPFhmkorw7X+dOXVJQs+QT69zGkzMyfDnIMN2Wid1+NbL3T+A==}\n    engines: {node: '>= 0.4'}\n\n  define-properties@1.2.1:\n    resolution: {integrity: sha512-8QmQKqEASLd5nx0U1B1okLElbUuuttJ/AnYmRXbbbGDWh6uS208EjD4Xqq/I9wK7u0v6O08XhTWnt5XtEbR6Dg==}\n    engines: {node: '>= 0.4'}\n\n  delayed-stream@1.0.0:\n    resolution: {integrity: sha512-ZySD7Nf91aLB0RxL4KGrKHBXl7Eds1DAmEdcoVawXnLD7SDhpNgtuII2aAkg7a7QS41jxPSZ17p4VdGnMHk3MQ==}\n    engines: {node: '>=0.4.0'}\n\n  delegates@1.0.0:\n    resolution: {integrity: sha512-bd2L678uiWATM6m5Z1VzNCErI3jiGzt6HGY8OVICs40JQq/HALfbyNJmp0UDakEY4pMMaN0Ly5om/B1VI/+xfQ==}\n\n  detect-indent@6.1.0:\n    resolution: {integrity: sha512-reYkTUJAZb9gUuZ2RvVCNhVHdg62RHnJ7WJl8ftMi4diZ6NWlciOzQN88pUhSELEwflJht4oQDv0F0BMlwaYtA==}\n    engines: {node: '>=8'}\n\n  detect-libc@2.0.3:\n    resolution: {integrity: sha512-bwy0MGW55bG41VqxxypOsdSdGqLwXPI/focwgTYCFMbdUiBAxLg9CFzG08sz2aqzknwiX7Hkl0bQENjg8iLByw==}\n    engines: {node: '>=8'}\n\n  diff@4.0.2:\n    resolution: {integrity: sha512-58lmxKSA4BNyLz+HHMUzlOEpg09FV+ev6ZMe3vJihgdxzgcwZ8VoEEPmALCZG9LmqfVoNMMKpttIYTVG6uDY7A==}\n    engines: {node: '>=0.3.1'}\n\n  diff@5.2.0:\n    resolution: {integrity: sha512-uIFDxqpRZGZ6ThOk84hEfqWoHx2devRFvpTZcTHur85vImfaxUbTW9Ryh4CpCuDnToOP1CEtXKIgytHBPVff5A==}\n    engines: {node: '>=0.3.1'}\n\n  dir-glob@3.0.1:\n    resolution: {integrity: sha512-WkrWp9GR4KXfKGYzOLmTuGVi1UWFfws377n9cc55/tb6DuqyF6pcQ5AbiHEshaDpY9v6oaSr2XCDidGmMwdzIA==}\n    engines: {node: '>=8'}\n\n  doctrine@2.1.0:\n    resolution: {integrity: sha512-35mSku4ZXK0vfCuHEDAwt55dg2jNajHZ1odvF+8SSr82EsZY4QmXfuWso8oEd8zRhVObSN18aM0CjSdoBX7zIw==}\n    engines: {node: '>=0.10.0'}\n\n  doctrine@3.0.0:\n    resolution: {integrity: sha512-yS+Q5i3hBf7GBkd4KG8a7eBNNWNGLTaEwwYWUijIYM7zrlYDM0BFXHjjPWlWZ1Rg7UaddZeIDmi9jF3HmqiQ2w==}\n    engines: {node: '>=6.0.0'}\n\n  dom-serializer@0.2.2:\n    resolution: {integrity: sha512-2/xPb3ORsQ42nHYiSunXkDjPLBaEj/xTwUO4B7XCZQTRk7EBtTOPaygh10YAAh2OI1Qrp6NWfpAhzswj0ydt9g==}\n\n  domelementtype@1.3.1:\n    resolution: {integrity: sha512-BSKB+TSpMpFI/HOxCNr1O8aMOTZ8hT3pM3GQ0w/mWRmkhEDSFJkkyzz4XQsBV44BChwGkrDfMyjVD0eA2aFV3w==}\n\n  domelementtype@2.3.0:\n    resolution: {integrity: sha512-OLETBj6w0OsagBwdXnPdN0cnMfF9opN69co+7ZrbfPGrdpPVNBUj02spi6B1N7wChLQiPn4CSH/zJvXw56gmHw==}\n\n  domhandler@2.4.2:\n    resolution: {integrity: sha512-JiK04h0Ht5u/80fdLMCEmV4zkNh2BcoMFBmZ/91WtYZ8qVXSKjiw7fXMgFPnHcSZgOo3XdinHvmnDUeMf5R4wA==}\n\n  domutils@1.7.0:\n    resolution: {integrity: sha512-Lgd2XcJ/NjEw+7tFvfKxOzCYKZsdct5lczQ2ZaQY8Djz7pfAD3Gbp8ySJWtreII/vDlMVmxwa6pHmdxIYgttDg==}\n\n  dotenv@8.6.0:\n    resolution: {integrity: sha512-IrPdXQsk2BbzvCBGBOTmmSH5SodmqZNt4ERAZDmW4CT+tL8VtvinqywuANaFu4bOMWki16nqf0e4oC0QIaDr/g==}\n    engines: {node: '>=10'}\n\n  dset@3.1.4:\n    resolution: {integrity: sha512-2QF/g9/zTaPDc3BjNcVTGoBbXBgYfMTTceLaYcFJ/W9kggFUkhxD/hMEeuLKbugyef9SqAx8cpgwlIP/jinUTA==}\n    engines: {node: '>=4'}\n\n  eastasianwidth@0.2.0:\n    resolution: {integrity: sha512-I88TYZWc9XiYHRQ4/3c5rjjfgkjhLyW2luGIheGERbNQ6OY7yTybanSpDXZa8y7VUP9YmDcYa+eyq4ca7iLqWA==}\n\n  easy-table@1.2.0:\n    resolution: {integrity: sha512-OFzVOv03YpvtcWGe5AayU5G2hgybsg3iqA6drU8UaoZyB9jLGMTrz9+asnLp/E+6qPh88yEI1gvyZFZ41dmgww==}\n\n  ecc-jsbn@0.1.2:\n    resolution: {integrity: sha512-eh9O+hwRHNbG4BLTjEl3nw044CkGm5X6LoaCf7LPp7UU8Qrt47JYNi6nPX8xjW97TKGKm1ouctg0QSpZe9qrnw==}\n\n  electron-to-chromium@1.4.798:\n    resolution: {integrity: sha512-by9J2CiM9KPGj9qfp5U4FcPSbXJG7FNzqnYaY4WLzX+v2PHieVGmnsA4dxfpGE3QEC7JofpPZmn7Vn1B9NR2+Q==}\n\n  electron-to-chromium@1.5.57:\n    resolution: {integrity: sha512-xS65H/tqgOwUBa5UmOuNSLuslDo7zho0y/lgQw35pnrqiZh7UOWHCeL/Bt6noJATbA6tpQJGCifsFsIRZj1Fqg==}\n\n  emittery@1.0.3:\n    resolution: {integrity: sha512-tJdCJitoy2lrC2ldJcqN4vkqJ00lT+tOWNT1hBJjO/3FDMJa5TTIiYGCKGkn/WfCyOzUMObeohbVTj00fhiLiA==}\n    engines: {node: '>=14.16'}\n\n  emoji-regex@10.3.0:\n    resolution: {integrity: sha512-QpLs9D9v9kArv4lfDEgg1X/gN5XLnf/A6l9cs8SPZLRZR3ZkY9+kwIQTxm+fsSej5UMYGE8fdoaZVIBlqG0XTw==}\n\n  emoji-regex@8.0.0:\n    resolution: {integrity: sha512-MSjYzcWNOA0ewAHpz0MxpYFvwg6yjy1NG3xteoqz644VCo/RPgnr1/GGt+ic3iJTzQ8Eu3TdM14SawnVUmGE6A==}\n\n  emoji-regex@9.2.2:\n    resolution: {integrity: sha512-L18DaJsXSUk2+42pv8mLs5jJT2hqFkFE4j21wOmgbUqsZ2hL72NsUU785g9RXgo3s0ZNgVl42TiHp3ZtOv/Vyg==}\n\n  enhance-visitors@1.0.0:\n    resolution: {integrity: sha512-+29eJLiUixTEDRaZ35Vu8jP3gPLNcQQkQkOQjLp2X+6cZGGPDD/uasbFzvLsJKnGZnvmyZ0srxudwOtskHeIDA==}\n    engines: {node: '>=4.0.0'}\n\n  enhanced-resolve@5.17.1:\n    resolution: {integrity: sha512-LMHl3dXhTcfv8gM4kEzIUeTQ+7fpdA0l2tUf34BddXPkz2A5xJ5L/Pchd5BL6rdccM9QGvu0sWZzK1Z1t4wwyg==}\n    engines: {node: '>=10.13.0'}\n\n  enhanced-resolve@5.18.0:\n    resolution: {integrity: sha512-0/r0MySGYG8YqlayBZ6MuCfECmHFdJ5qyPh8s8wa5Hnm6SaFLSK1VYCbj+NKp090Nm1caZhD+QTnmxO7esYGyQ==}\n    engines: {node: '>=10.13.0'}\n\n  enquirer@2.4.1:\n    resolution: {integrity: sha512-rRqJg/6gd538VHvR3PSrdRBb/1Vy2YfzHqzvbhGIQpDRKIa4FgV/54b5Q1xYSxOOwKvjXweS26E0Q+nAMwp2pQ==}\n    engines: {node: '>=8.6'}\n\n  entities@1.1.2:\n    resolution: {integrity: sha512-f2LZMYl1Fzu7YSBKg+RoROelpOaNrcGmE9AZubeDfrCEia483oW4MI4VyFd5VNHIgQ/7qm1I0wUHK1eJnn2y2w==}\n\n  entities@2.2.0:\n    resolution: {integrity: sha512-p92if5Nz619I0w+akJrLZH0MX0Pb5DX39XOwQTtXSdQQOaYH03S1uIQp4mhOZtAXrxq4ViO67YTiLBo2638o9A==}\n\n  env-paths@3.0.0:\n    resolution: {integrity: sha512-dtJUTepzMW3Lm/NPxRf3wP4642UWhjL2sQxc+ym2YMj1m/H2zDNQOlezafzkHwn6sMstjHTwG6iQQsctDW/b1A==}\n    engines: {node: ^12.20.0 || ^14.13.1 || >=16.0.0}\n\n  error-ex@1.3.2:\n    resolution: {integrity: sha512-7dFHNmqeFSEt2ZBsCriorKnn3Z2pj+fd9kmI6QoWw4//DL+icEBfc0U7qJCisqrTsKTjw4fNFy2pW9OqStD84g==}\n\n  es-abstract@1.23.3:\n    resolution: {integrity: sha512-e+HfNH61Bj1X9/jLc5v1owaLYuHdeHHSQlkhCBiTK8rBvKaULl/beGMxwrMXjpYrv4pz22BlY570vVePA2ho4A==}\n    engines: {node: '>= 0.4'}\n\n  es-abstract@1.23.4:\n    resolution: {integrity: sha512-HR1gxH5OaiN7XH7uiWH0RLw0RcFySiSoW1ctxmD1ahTw3uGBtkmm/ng0tDU1OtYx5OK6EOL5Y6O21cDflG3Jcg==}\n    engines: {node: '>= 0.4'}\n\n  es-define-property@1.0.0:\n    resolution: {integrity: sha512-jxayLKShrEqqzJ0eumQbVhTYQM27CfT1T35+gCgDFoL82JLsXqTJ76zv6A0YLOgEnLUMvLzsDsGIrl8NFpT2gQ==}\n    engines: {node: '>= 0.4'}\n\n  es-errors@1.3.0:\n    resolution: {integrity: sha512-Zf5H2Kxt2xjTvbJvP2ZWLEICxA6j+hAmMzIlypy4xcBg1vKVnx89Wy0GbS+kf5cwCVFFzdCFh2XSCFNULS6csw==}\n    engines: {node: '>= 0.4'}\n\n  es-iterator-helpers@1.2.0:\n    resolution: {integrity: sha512-tpxqxncxnpw3c93u8n3VOzACmRFoVmWJqbWXvX/JfKbkhBw1oslgPrUfeSt2psuqyEJFD6N/9lg5i7bsKpoq+Q==}\n    engines: {node: '>= 0.4'}\n\n  es-module-lexer@1.6.0:\n    resolution: {integrity: sha512-qqnD1yMU6tk/jnaMosogGySTZP8YtUgAffA9nMN+E/rjxcfRQ6IEk7IiozUjgxKoFHBGjTLnrHB/YC45r/59EQ==}\n\n  es-object-atoms@1.0.0:\n    resolution: {integrity: sha512-MZ4iQ6JwHOBQjahnjwaC1ZtIBH+2ohjamzAO3oaHcXYup7qxjF2fixyH+Q71voWHeOkI2q/TnJao/KfXYIZWbw==}\n    engines: {node: '>= 0.4'}\n\n  es-set-tostringtag@2.0.3:\n    resolution: {integrity: sha512-3T8uNMC3OQTHkFUsFq8r/BwAXLHvU/9O9mE0fBc/MY5iq/8H7ncvO947LmYA6ldWw9Uh8Yhf25zu6n7nML5QWQ==}\n    engines: {node: '>= 0.4'}\n\n  es-shim-unscopables@1.0.2:\n    resolution: {integrity: sha512-J3yBRXCzDu4ULnQwxyToo/OjdMx6akgVC7K6few0a7F/0wLtmKKN7I73AH5T2836UuXRqN7Qg+IIUw/+YJksRw==}\n\n  es-to-primitive@1.2.1:\n    resolution: {integrity: sha512-QCOllgZJtaUo9miYBcLChTUaHNjJF3PYs1VidD7AwiEj1kYxKeQTctLAezAOH5ZKRH0g2IgPn6KwB4IT8iRpvA==}\n    engines: {node: '>= 0.4'}\n\n  es6-error@4.1.1:\n    resolution: {integrity: sha512-Um/+FxMr9CISWh0bi5Zv0iOD+4cFh5qLeks1qhAopKVAJw3drgKbKySikp7wGhDL0HPeaja0P5ULZrxLkniUVg==}\n\n  esbuild@0.21.5:\n    resolution: {integrity: sha512-mg3OPMV4hXywwpoDxu3Qda5xCKQi+vCTZq8S9J/EpkhB2HzKXq4SNFZE3+NK93JYxc8VMSep+lOUSC/RVKaBqw==}\n    engines: {node: '>=12'}\n    hasBin: true\n\n  escalade@3.1.2:\n    resolution: {integrity: sha512-ErCHMCae19vR8vQGe50xIsVomy19rg6gFu3+r3jkEO46suLMWBksvVyoGgQV+jOfl84ZSOSlmv6Gxa89PmTGmA==}\n    engines: {node: '>=6'}\n\n  escalade@3.2.0:\n    resolution: {integrity: sha512-WUj2qlxaQtO4g6Pq5c29GTcWGDyd8itL8zTlipgECz3JesAiiOKotd8JU6otB3PACgG6xkJUyVhboMS+bje/jA==}\n    engines: {node: '>=6'}\n\n  escape-string-regexp@1.0.5:\n    resolution: {integrity: sha512-vbRorB5FUQWvla16U8R/qgaFIya2qGzwDrNmCZuYKrbdSUMG6I1ZCGQRefkRVhuOkIGVne7BQ35DSfo1qvJqFg==}\n    engines: {node: '>=0.8.0'}\n\n  escape-string-regexp@2.0.0:\n    resolution: {integrity: sha512-UpzcLCXolUWcNu5HtVMHYdXJjArjsF9C0aNnquZYY4uW/Vu0miy5YoWvbV345HauVvcAUnpRuhMMcqTcGOY2+w==}\n    engines: {node: '>=8'}\n\n  escape-string-regexp@4.0.0:\n    resolution: {integrity: sha512-TtpcNJ3XAzx3Gq8sWRzJaVajRs0uVxA2YAkdb1jm2YkPz4G6egUFAyA3n5vtEIZefPk5Wa4UXbKuS5fKkJWdgA==}\n    engines: {node: '>=10'}\n\n  escape-string-regexp@5.0.0:\n    resolution: {integrity: sha512-/veY75JbMK4j1yjvuUxuVsiS/hr/4iHs9FTT6cgTexxdE0Ly/glccBAkloH/DofkjRbZU3bnoj38mOmhkZ0lHw==}\n    engines: {node: '>=12'}\n\n  escodegen@1.14.3:\n    resolution: {integrity: sha512-qFcX0XJkdg+PB3xjZZG/wKSuT1PnQWx57+TVSjIMmILd2yC/6ByYElPwJnslDsuWuSAp4AwJGumarAAmJch5Kw==}\n    engines: {node: '>=4.0'}\n    hasBin: true\n\n  eslint-ast-utils@1.1.0:\n    resolution: {integrity: sha512-otzzTim2/1+lVrlH19EfQQJEhVJSu0zOb9ygb3iapN6UlyaDtyRq4b5U1FuW0v1lRa9Fp/GJyHkSwm6NqABgCA==}\n    engines: {node: '>=4'}\n\n  eslint-compat-utils@0.5.1:\n    resolution: {integrity: sha512-3z3vFexKIEnjHE3zCMRo6fn/e44U7T1khUjg+Hp0ZQMCigh28rALD0nPFBcGZuiLC5rLZa2ubQHDRln09JfU2Q==}\n    engines: {node: '>=12'}\n    peerDependencies:\n      eslint: '>=6.0.0'\n\n  eslint-compat-utils@0.6.0:\n    resolution: {integrity: sha512-1vVBdI/HLS6HTHVQCJGlN+LOF0w1Rs/WB9se23mQr84cRM0iMM8PulMFFhQdQ1BvS0cGwjpis4xziI91Rk0l6g==}\n    engines: {node: '>=12'}\n    peerDependencies:\n      eslint: '>=6.0.0'\n\n  eslint-config-canonical@44.3.36:\n    resolution: {integrity: sha512-PECnB9LcpTBtCxK5wVC9OPpviRWU+hUvJcZnPjqnMHILjLpx9puKoI9fRw7rEbhGTsRRO3Hjx1kmoq/uGcC08w==}\n    engines: {node: '>=16.0.0'}\n    peerDependencies:\n      eslint: ^9\n\n  eslint-config-prettier@9.1.0:\n    resolution: {integrity: sha512-NSWl5BFQWEPi1j4TjVNItzYV7dZXZ+wP6I6ZhrBGpChQhZRUaElihE9uRRkcbRnNb76UMKDF3r+WTmNcGPKsqw==}\n    hasBin: true\n    peerDependencies:\n      eslint: '>=7.0.0'\n\n  eslint-import-resolver-node@0.3.9:\n    resolution: {integrity: sha512-WFj2isz22JahUv+B788TlO3N6zL3nNJGU8CcZbPZvVEkBPaJdCV4vy5wyghty5ROFbCRnm132v8BScu5/1BQ8g==}\n\n  eslint-import-resolver-typescript@3.7.0:\n    resolution: {integrity: sha512-Vrwyi8HHxY97K5ebydMtffsWAn1SCR9eol49eCd5fJS4O1WV7PaAjbcjmbfJJSMz/t4Mal212Uz/fQZrOB8mow==}\n    engines: {node: ^14.18.0 || >=16.0.0}\n    peerDependencies:\n      eslint: '*'\n      eslint-plugin-import: '*'\n      eslint-plugin-import-x: '*'\n    peerDependenciesMeta:\n      eslint-plugin-import:\n        optional: true\n      eslint-plugin-import-x:\n        optional: true\n\n  eslint-json-compat-utils@0.2.1:\n    resolution: {integrity: sha512-YzEodbDyW8DX8bImKhAcCeu/L31Dd/70Bidx2Qex9OFUtgzXLqtfWL4Hr5fM/aCCB8QUZLuJur0S9k6UfgFkfg==}\n    engines: {node: '>=12'}\n    peerDependencies:\n      '@eslint/json': '*'\n      eslint: '*'\n      jsonc-eslint-parser: ^2.4.0\n    peerDependenciesMeta:\n      '@eslint/json':\n        optional: true\n\n  eslint-module-utils@2.12.0:\n    resolution: {integrity: sha512-wALZ0HFoytlyh/1+4wuZ9FJCD/leWHQzzrxJ8+rebyReSLk7LApMyd3WJaLVoN+D5+WIdJyDK1c6JnE65V4Zyg==}\n    engines: {node: '>=4'}\n    peerDependencies:\n      '@typescript-eslint/parser': '*'\n      eslint: '*'\n      eslint-import-resolver-node: '*'\n      eslint-import-resolver-typescript: '*'\n      eslint-import-resolver-webpack: '*'\n    peerDependenciesMeta:\n      '@typescript-eslint/parser':\n        optional: true\n      eslint:\n        optional: true\n      eslint-import-resolver-node:\n        optional: true\n      eslint-import-resolver-typescript:\n        optional: true\n      eslint-import-resolver-webpack:\n        optional: true\n\n  eslint-plugin-ava@15.0.1:\n    resolution: {integrity: sha512-eRX7mLFPvalGDWztJ4zm+anez2X6J/88r9CqLFfPAIMvFlGyJ+dUoFppoohgUQZLV09mIBNz5guP07zFJOLF8g==}\n    engines: {node: ^18.18 || >=20}\n    peerDependencies:\n      eslint: '>=9'\n\n  eslint-plugin-canonical@5.1.2:\n    resolution: {integrity: sha512-/7kTQbQzbfaq1tlhNgIj/mVTLGs3JN0wcf30/jar4L3fTQRmA32SFtua01iEojFC3zcHVky8MVIUfrs61asdJg==}\n    engines: {node: '>=18.0.0'}\n\n  eslint-plugin-cypress@4.1.0:\n    resolution: {integrity: sha512-JhqkMY02mw74USwK9OFhectx3YSj6Co1NgWBxlGdKvlqiAp9vdEuQqt33DKGQFvvGS/NWtduuhWXWNnU29xDSg==}\n    peerDependencies:\n      eslint: '>=9'\n\n  eslint-plugin-es-x@7.8.0:\n    resolution: {integrity: sha512-7Ds8+wAAoV3T+LAKeu39Y5BzXCrGKrcISfgKEqTS4BDN8SFEDQd0S43jiQ8vIa3wUKD07qitZdfzlenSi8/0qQ==}\n    engines: {node: ^14.18.0 || >=16.0.0}\n    peerDependencies:\n      eslint: '>=8'\n\n  eslint-plugin-eslint-comments@3.2.0:\n    resolution: {integrity: sha512-0jkOl0hfojIHHmEHgmNdqv4fmh7300NdpA9FFpF7zaoLvB/QeXOGNLIo86oAveJFrfB1p05kC8hpEMHM8DwWVQ==}\n    engines: {node: '>=6.5.0'}\n    peerDependencies:\n      eslint: '>=4.19.1'\n\n  eslint-plugin-fp@2.3.0:\n    resolution: {integrity: sha512-3n2oHibwoIxAht9/+ZaTldhI6brXORgl8oNXqZd+d9xuAQt2SBJ2/aml0oQRMWvXrgsz2WG6wfC++NjzSG3prA==}\n    engines: {node: '>=4.0.0'}\n    peerDependencies:\n      eslint: '>=3'\n\n  eslint-plugin-import-x@4.6.1:\n    resolution: {integrity: sha512-wluSUifMIb7UfwWXqx7Yx0lE/SGCcGXECLx/9bCmbY2nneLwvAZ4vkd1IXDjPKFvdcdUgr1BaRnaRpx3k2+Pfw==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      eslint: ^8.57.0 || ^9.0.0\n\n  eslint-plugin-jest@28.9.0:\n    resolution: {integrity: sha512-rLu1s1Wf96TgUUxSw6loVIkNtUjq1Re7A9QdCCHSohnvXEBAjuL420h0T/fMmkQlNsQP2GhQzEUpYHPfxBkvYQ==}\n    engines: {node: ^16.10.0 || ^18.12.0 || >=20.0.0}\n    peerDependencies:\n      '@typescript-eslint/eslint-plugin': ^6.0.0 || ^7.0.0 || ^8.0.0\n      eslint: ^7.0.0 || ^8.0.0 || ^9.0.0\n      jest: '*'\n    peerDependenciesMeta:\n      '@typescript-eslint/eslint-plugin':\n        optional: true\n      jest:\n        optional: true\n\n  eslint-plugin-jsdoc@50.6.1:\n    resolution: {integrity: sha512-UWyaYi6iURdSfdVVqvfOs2vdCVz0J40O/z/HTsv2sFjdjmdlUI/qlKLOTmwbPQ2tAfQnE5F9vqx+B+poF71DBQ==}\n    engines: {node: '>=18'}\n    peerDependencies:\n      eslint: ^7.0.0 || ^8.0.0 || ^9.0.0\n\n  eslint-plugin-jsonc@2.18.2:\n    resolution: {integrity: sha512-SDhJiSsWt3nItl/UuIv+ti4g3m4gpGkmnUJS9UWR3TrpyNsIcnJoBRD7Kof6cM4Rk3L0wrmY5Tm3z7ZPjR2uGg==}\n    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n    peerDependencies:\n      eslint: '>=6.0.0'\n\n  eslint-plugin-jsx-a11y@6.10.2:\n    resolution: {integrity: sha512-scB3nz4WmG75pV8+3eRUQOHZlNSUhFNq37xnpgRkCCELU3XMvXAxLk1eqWWyE22Ki4Q01Fnsw9BA3cJHDPgn2Q==}\n    engines: {node: '>=4.0'}\n    peerDependencies:\n      eslint: ^3 || ^4 || ^5 || ^6 || ^7 || ^8 || ^9\n\n  eslint-plugin-lodash@8.0.0:\n    resolution: {integrity: sha512-7DA8485FolmWRzh+8t4S8Pzin2TTuWfb0ZW3j/2fYElgk82ZanFz8vDcvc4BBPceYdX1p/za+tkbO68maDBGGw==}\n    engines: {node: '>=10'}\n    peerDependencies:\n      eslint: '>=9.0.0'\n\n  eslint-plugin-mocha@10.5.0:\n    resolution: {integrity: sha512-F2ALmQVPT1GoP27O1JTZGrV9Pqg8k79OeIuvw63UxMtQKREZtmkK1NFgkZQ2TW7L2JSSFKHFPTtHu5z8R9QNRw==}\n    engines: {node: '>=14.0.0'}\n    peerDependencies:\n      eslint: '>=7.0.0'\n\n  eslint-plugin-modules-newline@0.0.6:\n    resolution: {integrity: sha512-69NpBr68U6pmXL+y+KHl/64PwRarceC3/sCNUVxRbe0gPI32SIw8AtdpkqNiJYCa2yMd4lRrkrnU09Yio7KVzA==}\n    engines: {node: '>=0.10.0'}\n\n  eslint-plugin-n@17.15.1:\n    resolution: {integrity: sha512-KFw7x02hZZkBdbZEFQduRGH4VkIH4MW97ClsbAM4Y4E6KguBJWGfWG1P4HEIpZk2bkoWf0bojpnjNAhYQP8beA==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      eslint: '>=8.23.0'\n\n  eslint-plugin-perfectionist@4.5.0:\n    resolution: {integrity: sha512-Dh+6UO50GLRM5z8HMv7HkCy+XUGgDfG8jbTYrqL6A07VBIPzlnM3CMZkovWEWT3mOPzlFTYdyp1bYr+HZTKD6g==}\n    engines: {node: ^18.0.0 || >=20.0.0}\n    peerDependencies:\n      eslint: '>=8.0.0'\n\n  eslint-plugin-prettier@5.2.1:\n    resolution: {integrity: sha512-gH3iR3g4JfF+yYPaJYkN7jEl9QbweL/YfkoRlNnuIEHEz1vHVlCmWOS+eGGiRuzHQXdJFCOTxRgvju9b8VUmrw==}\n    engines: {node: ^14.18.0 || >=16.0.0}\n    peerDependencies:\n      '@types/eslint': '>=8.0.0'\n      eslint: '>=8.0.0'\n      eslint-config-prettier: '*'\n      prettier: '>=3.0.0'\n    peerDependenciesMeta:\n      '@types/eslint':\n        optional: true\n      eslint-config-prettier:\n        optional: true\n\n  eslint-plugin-promise@7.2.1:\n    resolution: {integrity: sha512-SWKjd+EuvWkYaS+uN2csvj0KoP43YTu7+phKQ5v+xw6+A0gutVX2yqCeCkC3uLCJFiPfR2dD8Es5L7yUsmvEaA==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    peerDependencies:\n      eslint: ^7.0.0 || ^8.0.0 || ^9.0.0\n\n  eslint-plugin-react-hooks@5.1.0:\n    resolution: {integrity: sha512-mpJRtPgHN2tNAvZ35AMfqeB3Xqeo273QxrHJsbBEPWODRM4r0yB6jfoROqKEYrOn27UtRPpcpHc2UqyBSuUNTw==}\n    engines: {node: '>=10'}\n    peerDependencies:\n      eslint: ^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0 || ^7.0.0 || ^8.0.0-0 || ^9.0.0\n\n  eslint-plugin-react@7.37.2:\n    resolution: {integrity: sha512-EsTAnj9fLVr/GZleBLFbj/sSuXeWmp1eXIN60ceYnZveqEaUCyW4X+Vh4WTdUhCkW4xutXYqTXCUSyqD4rB75w==}\n    engines: {node: '>=4'}\n    peerDependencies:\n      eslint: ^3 || ^4 || ^5 || ^6 || ^7 || ^8 || ^9.7\n\n  eslint-plugin-regexp@2.7.0:\n    resolution: {integrity: sha512-U8oZI77SBtH8U3ulZ05iu0qEzIizyEDXd+BWHvyVxTOjGwcDcvy/kEpgFG4DYca2ByRLiVPFZ2GeH7j1pdvZTA==}\n    engines: {node: ^18 || >=20}\n    peerDependencies:\n      eslint: '>=8.44.0'\n\n  eslint-plugin-unicorn@56.0.1:\n    resolution: {integrity: sha512-FwVV0Uwf8XPfVnKSGpMg7NtlZh0G0gBarCaFcMUOoqPxXryxdYxTRRv4kH6B9TFCVIrjRXG+emcxIk2ayZilog==}\n    engines: {node: '>=18.18'}\n    peerDependencies:\n      eslint: '>=8.56.0'\n\n  eslint-plugin-vitest@0.5.4:\n    resolution: {integrity: sha512-um+odCkccAHU53WdKAw39MY61+1x990uXjSPguUCq3VcEHdqJrOb8OTMrbYlY6f9jAKx7x98kLVlIe3RJeJqoQ==}\n    engines: {node: ^18.0.0 || >= 20.0.0}\n    peerDependencies:\n      '@typescript-eslint/eslint-plugin': '*'\n      eslint: ^8.57.0 || ^9.0.0\n      vitest: '*'\n    peerDependenciesMeta:\n      '@typescript-eslint/eslint-plugin':\n        optional: true\n      vitest:\n        optional: true\n\n  eslint-plugin-yml@1.16.0:\n    resolution: {integrity: sha512-t4MNCetPjTn18/fUDlQ/wKkcYjnuLYKChBrZ0qUaNqRigVqChHWzTP8SrfFi5s4keX3vdlkWRSu8zHJMdKwxWQ==}\n    engines: {node: ^14.17.0 || >=16.0.0}\n    peerDependencies:\n      eslint: '>=6.0.0'\n\n  eslint-plugin-zod@1.4.0:\n    resolution: {integrity: sha512-i9WzQGw2X5fQcuQh33mA8DQjZJM/yuyZvs1Fc5EyTidX7Ed/g832+1FEQ4u5gtXy+jZ+DVsB5+oMHj4tIOfeZg==}\n    engines: {node: '>=12'}\n    peerDependencies:\n      eslint: '>=8.1.0'\n\n  eslint-scope@8.2.0:\n    resolution: {integrity: sha512-PHlWUfG6lvPc3yvP5A4PNyBL1W8fkDUccmI21JUu/+GKZBoH/W5u6usENXUrWFRsyoW5ACUjFGgAFQp5gUlb/A==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  eslint-utils@3.0.0:\n    resolution: {integrity: sha512-uuQC43IGctw68pJA1RgbQS8/NP7rch6Cwd4j3ZBtgo4/8Flj4eGE7ZYSZRN3iq5pVUv6GPdW5Z1RFleo84uLDA==}\n    engines: {node: ^10.0.0 || ^12.0.0 || >= 14.0.0}\n    peerDependencies:\n      eslint: '>=5'\n\n  eslint-visitor-keys@2.1.0:\n    resolution: {integrity: sha512-0rSmRBzXgDzIsD6mGdJgevzgezI534Cer5L/vyMX0kHzT/jiB43jRhd9YUlMGYLQy2zprNmoT8qasCGtY+QaKw==}\n    engines: {node: '>=10'}\n\n  eslint-visitor-keys@3.4.3:\n    resolution: {integrity: sha512-wpc+LXeiyiisxPlEkUzU6svyS1frIO3Mgxj1fdy7Pm8Ygzguax2N3Fa/D/ag1WqbOprdI+uY6wMUl8/a2G+iag==}\n    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n\n  eslint-visitor-keys@4.2.0:\n    resolution: {integrity: sha512-UyLnSehNt62FFhSwjZlHmeokpRK59rcz29j+F1/aDgbkbRTk7wIc9XzdoasMUbRNKDM0qQt/+BJ4BrpFeABemw==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  eslint@9.17.0:\n    resolution: {integrity: sha512-evtlNcpJg+cZLcnVKwsai8fExnqjGPicK7gnUtlNuzu+Fv9bI0aLpND5T44VLQtoMEnI57LoXO9XAkIXwohKrA==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n    hasBin: true\n    peerDependencies:\n      jiti: '*'\n    peerDependenciesMeta:\n      jiti:\n        optional: true\n\n  espree@10.3.0:\n    resolution: {integrity: sha512-0QYC8b24HWY8zjRnDTL6RiHfDbAWn63qb4LMj1Z4b076A4une81+z03Kg7l7mn/48PUTqoLptSXez8oknU8Clg==}\n    engines: {node: ^18.18.0 || ^20.9.0 || >=21.1.0}\n\n  espree@9.6.1:\n    resolution: {integrity: sha512-oruZaFkjorTpF32kDSI5/75ViwGeZginGGy2NoOSg3Q9bnwlnmDm4HLnkl0RE3n+njDXR037aY1+x58Z/zFdwQ==}\n    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n\n  esprima@4.0.1:\n    resolution: {integrity: sha512-eGuFFw7Upda+g4p+QHvnW0RyTX/SVeJBDM/gCtMARO0cLuT2HcEKnTPvhjV6aGeqrCB/sbNop0Kszm0jsaWU4A==}\n    engines: {node: '>=4'}\n    hasBin: true\n\n  espurify@2.1.1:\n    resolution: {integrity: sha512-zttWvnkhcDyGOhSH4vO2qCBILpdCMv/MX8lp4cqgRkQoDRGK2oZxi2GfWhlP2dIXmk7BaKeOTuzbHhyC68o8XQ==}\n\n  esquery@1.6.0:\n    resolution: {integrity: sha512-ca9pw9fomFcKPvFLXhBKUK90ZvGibiGOvRJNbjljY7s7uq/5YO4BOzcYtJqExdx99rF6aAcnRxHmcUHcz6sQsg==}\n    engines: {node: '>=0.10'}\n\n  esrecurse@4.3.0:\n    resolution: {integrity: sha512-KmfKL3b6G+RXvP8N1vr3Tq1kL/oCFgn2NYXEtqP8/L3pKapUA4G8cFVaoF3SU323CD4XypR/ffioHmkti6/Tag==}\n    engines: {node: '>=4.0'}\n\n  estraverse@4.3.0:\n    resolution: {integrity: sha512-39nnKffWz8xN1BU/2c79n9nB9HDzo0niYUqx6xyqUnyoAnQyyWpOTdZEeiCch8BBu515t4wp9ZmgVfVhn9EBpw==}\n    engines: {node: '>=4.0'}\n\n  estraverse@5.3.0:\n    resolution: {integrity: sha512-MMdARuVEQziNTeJD8DgMqmhwR11BRQ/cBP+pLtYdSTnf3MIO8fFeiINEbX36ZdNlfU/7A9f3gUw49B3oQsvwBA==}\n    engines: {node: '>=4.0'}\n\n  estree-walker@2.0.2:\n    resolution: {integrity: sha512-Rfkk/Mp/DL7JVje3u18FxFujQlTNR2q6QfMSMB7AvCBx91NGj/ba3kCfza0f6dVDbw7YlRf/nDrn7pQrCCyQ/w==}\n\n  estree-walker@3.0.3:\n    resolution: {integrity: sha512-7RUKfXgSMMkzt6ZuXmqapOurLGPPfgj6l9uRZ7lRGolvk0y2yocc35LdcxKC5PQZdn2DMqioAQ2NoWcrTKmm6g==}\n\n  esutils@2.0.3:\n    resolution: {integrity: sha512-kVscqXk4OCp68SZ0dkgEKVi6/8ij300KBWTJq32P/dYeWTSwK41WyTxalN1eRmA5Z9UU/LX9D7FWSmV9SAYx6g==}\n    engines: {node: '>=0.10.0'}\n\n  expect-type@0.15.0:\n    resolution: {integrity: sha512-yWnriYB4e8G54M5/fAFj7rCIBiKs1HAACaY13kCz6Ku0dezjS9aMcfcdVK2X8Tv2tEV1BPz/wKfQ7WA4S/d8aA==}\n\n  expect-type@1.1.0:\n    resolution: {integrity: sha512-bFi65yM+xZgk+u/KRIpekdSYkTB5W1pEf0Lt8Q8Msh7b+eQ7LXVtIB1Bkm4fvclDEL1b2CZkMhv2mOeF8tMdkA==}\n    engines: {node: '>=12.0.0'}\n\n  extend@3.0.2:\n    resolution: {integrity: sha512-fjquC59cD7CyW6urNXK0FBufkZcoiGG80wTuPujX590cB5Ttln20E2UB4S/WARVqhXffZl2LNgS+gQdPIIim/g==}\n\n  extendable-error@0.1.7:\n    resolution: {integrity: sha512-UOiS2in6/Q0FK0R0q6UY9vYpQ21mr/Qn1KOnte7vsACuNJf514WvCCUHSRCPcgjPT2bAhNIJdlE6bVap1GKmeg==}\n\n  external-editor@3.1.0:\n    resolution: {integrity: sha512-hMQ4CX1p1izmuLYyZqLMO/qGNw10wSv9QDCPfzXfyFrOaCSSoRfqE1Kf1s5an66J5JZC62NewG+mK49jOCtQew==}\n    engines: {node: '>=4'}\n\n  extract-files@11.0.0:\n    resolution: {integrity: sha512-FuoE1qtbJ4bBVvv94CC7s0oTnKUGvQs+Rjf1L2SJFfS+HTVVjhPFtehPdQ0JiGPqVNfSSZvL5yzHHQq2Z4WNhQ==}\n    engines: {node: ^12.20 || >= 14.13}\n\n  extsprintf@1.3.0:\n    resolution: {integrity: sha512-11Ndz7Nv+mvAC1j0ktTa7fAb0vLyGGX+rMHNBYQviQDGU0Hw7lhctJANqbPhu9nV9/izT/IntTgZ7Im/9LJs9g==}\n    engines: {'0': node >=0.6.0}\n\n  fast-decode-uri-component@1.0.1:\n    resolution: {integrity: sha512-WKgKWg5eUxvRZGwW8FvfbaH7AXSh2cL+3j5fMGzUMCxWBJ3dV3a7Wz8y2f/uQ0e3B6WmodD3oS54jTQ9HVTIIg==}\n\n  fast-deep-equal@3.1.3:\n    resolution: {integrity: sha512-f3qQ9oQy9j2AhBe/H9VC91wLmKBCCU/gDOnKNAYG5hswO7BLKj09Hc5HYNz9cGI++xlpDCIgDaitVs03ATR84Q==}\n\n  fast-diff@1.3.0:\n    resolution: {integrity: sha512-VxPP4NqbUjj6MaAOafWeUn2cXWLcCtljklUtZf0Ind4XQ+QPtmA0b18zZy0jIQx+ExRVCR/ZQpBmik5lXshNsw==}\n\n  fast-equals@5.0.1:\n    resolution: {integrity: sha512-WF1Wi8PwwSY7/6Kx0vKXtw8RwuSGoM1bvDaJbu7MxDlR1vovZjIAKrnzyrThgAjm6JDTu0fVgWXDlMGspodfoQ==}\n    engines: {node: '>=6.0.0'}\n\n  fast-glob@3.3.2:\n    resolution: {integrity: sha512-oX2ruAFQwf/Orj8m737Y5adxDQO0LAB7/S5MnxCdTNDd4p6BsyIVsv9JQsATbTSq8KHRpLwIHbVlUNatxd+1Ow==}\n    engines: {node: '>=8.6.0'}\n\n  fast-json-stable-stringify@2.1.0:\n    resolution: {integrity: sha512-lhd/wF+Lk98HZoTCtlVraHtfh5XYijIjalXck7saUtuanSDyLMxnHhSXEDJqHxD7msR8D0uCmqlkwjCV8xvwHw==}\n\n  fast-levenshtein@2.0.6:\n    resolution: {integrity: sha512-DCXu6Ifhqcks7TZKY3Hxp3y6qphY5SJZmrWMDrKcERSOXWQdMhU9Ig/PYrzyw/ul9jOIyh0N4M0tbC5hodg8dw==}\n\n  fast-printf@1.6.9:\n    resolution: {integrity: sha512-FChq8hbz65WMj4rstcQsFB0O7Cy++nmbNfLYnD9cYv2cRn8EG6k/MGn9kO/tjO66t09DLDugj3yL+V2o6Qftrg==}\n    engines: {node: '>=10.0'}\n\n  fast-querystring@1.1.2:\n    resolution: {integrity: sha512-g6KuKWmFXc0fID8WWH0jit4g0AGBoJhCkJMb1RmbsSEUNvQ+ZC8D6CUZ+GtF8nMzSPXnhiePyyqqipzNNEnHjg==}\n\n  fast-url-parser@1.1.3:\n    resolution: {integrity: sha512-5jOCVXADYNuRkKFzNJ0dCCewsZiYo0dz8QNYljkOpFC6r2U4OBmKtvm/Tsuh4w1YYdDqDb31a8TVhBJ2OJKdqQ==}\n\n  fastq@1.17.1:\n    resolution: {integrity: sha512-sRVD3lWVIXWg6By68ZN7vho9a1pQcN/WBFaAAsDDFzlJjvoGx0P8z7V1t72grFJfJhu3YPZBuu25f7Kaw2jN1w==}\n\n  fdir@6.4.2:\n    resolution: {integrity: sha512-KnhMXsKSPZlAhp7+IjUkRZKPb4fUyccpDrdFXbi4QL1qkmFh9kVY09Yox+n4MaOb3lHZ1Tv829C3oaaXoMYPDQ==}\n    peerDependencies:\n      picomatch: ^3 || ^4\n    peerDependenciesMeta:\n      picomatch:\n        optional: true\n\n  figures@6.1.0:\n    resolution: {integrity: sha512-d+l3qxjSesT4V7v2fh+QnmFnUWv9lSpjarhShNTgBOfA0ttejbQUAlHLitbjkoRiDulW0OPoQPYIGhIC8ohejg==}\n    engines: {node: '>=18'}\n\n  file-entry-cache@8.0.0:\n    resolution: {integrity: sha512-XXTUwCvisa5oacNGRP9SfNtYBNAMi+RPwBFmblZEF7N7swHYQS6/Zfk7SRwx4D5j3CH211YNRco1DEMNVfZCnQ==}\n    engines: {node: '>=16.0.0'}\n\n  file-entry-cache@9.1.0:\n    resolution: {integrity: sha512-/pqPFG+FdxWQj+/WSuzXSDaNzxgTLr/OrR1QuqfEZzDakpdYE70PwUxL7BPUa8hpjbvY1+qvCl8k+8Tq34xJgg==}\n    engines: {node: '>=18'}\n\n  file-uri-to-path@1.0.0:\n    resolution: {integrity: sha512-0Zt+s3L7Vf1biwWZ29aARiVYLx7iMGnEUl9x33fbB/j3jR81u/O2LbqK+Bm1CDSNDKVtJ/YjwY7TUd5SkeLQLw==}\n\n  filesize@10.1.6:\n    resolution: {integrity: sha512-sJslQKU2uM33qH5nqewAwVB2QgR6w1aMNsYUp3aN5rMRyXEwJGmZvaWzeJFNTOXWlHQyBFCWrdj3fV/fsTOX8w==}\n    engines: {node: '>= 10.4.0'}\n\n  fill-range@7.1.1:\n    resolution: {integrity: sha512-YsGpe3WHLK8ZYi4tWDg2Jy3ebRz2rXowDxnld4bkQB00cc/1Zw9AWnC0i9ztDJitivtQvaI9KaLyKrc+hBW0yg==}\n    engines: {node: '>=8'}\n\n  find-cache-dir@3.3.2:\n    resolution: {integrity: sha512-wXZV5emFEjrridIgED11OoUKLxiYjAcqot/NJdAkOhlJ+vGzwhOAfcG5OX1jP+S0PcjEn8bdMJv+g2jwQ3Onig==}\n    engines: {node: '>=8'}\n\n  find-up-simple@1.0.0:\n    resolution: {integrity: sha512-q7Us7kcjj2VMePAa02hDAF6d+MzsdsAWEwYyOpwUtlerRBkOEPBCRZrAV4XfcSN8fHAgaD0hP7miwoay6DCprw==}\n    engines: {node: '>=18'}\n\n  find-up@4.1.0:\n    resolution: {integrity: sha512-PpOwAdQ/YlXQ2vj8a3h8IipDuYRi3wceVQQGYWxNINccq40Anw7BlsEXCMbt1Zt+OLA6Fq9suIpIWD0OsnISlw==}\n    engines: {node: '>=8'}\n\n  find-up@5.0.0:\n    resolution: {integrity: sha512-78/PXT1wlLLDgTzDs7sjq9hzz0vXD+zn+7wypEe4fXQxCmdmqfGsEPQxmiCSQI3ajFV91bVSsvNtrJRiW6nGng==}\n    engines: {node: '>=10'}\n\n  find-yarn-workspace-root2@1.2.16:\n    resolution: {integrity: sha512-hr6hb1w8ePMpPVUK39S4RlwJzi+xPLuVuG8XlwXU3KD5Yn3qgBWVfy3AzNlDhWvE1EORCE65/Qm26rFQt3VLVA==}\n\n  flat-cache@4.0.1:\n    resolution: {integrity: sha512-f7ccFPK3SXFHpx15UIGyRJ/FJQctuKZ0zVuN3frBo4HnK3cay9VEW0R6yPYFHC0AgqhukPzKjq22t5DmAyqGyw==}\n    engines: {node: '>=16'}\n\n  flat-cache@5.0.0:\n    resolution: {integrity: sha512-JrqFmyUl2PnPi1OvLyTVHnQvwQ0S+e6lGSwu8OkAZlSaNIZciTY2H/cOOROxsBA1m/LZNHDsqAgDZt6akWcjsQ==}\n    engines: {node: '>=18'}\n\n  flatted@3.3.1:\n    resolution: {integrity: sha512-X8cqMLLie7KsNUDSdzeN8FYK9rEt4Dt67OsG/DNGnYTSDBG4uFAJFBnUeiV+zCVAvwFy56IjM9sH51jVaEhNxw==}\n\n  for-each@0.3.3:\n    resolution: {integrity: sha512-jqYfLp7mo9vIyQf8ykW2v7A+2N4QjeCeI5+Dz9XraiO1ign81wjiH7Fb9vSOWvQfNtmSa4H2RoQTrrXivdUZmw==}\n\n  foreground-child@2.0.0:\n    resolution: {integrity: sha512-dCIq9FpEcyQyXKCkyzmlPTFNgrCzPudOe+mhvJU5zAtlBnGVy2yKxtfsxK2tQBThwq225jcvBjpw1Gr40uzZCA==}\n    engines: {node: '>=8.0.0'}\n\n  foreground-child@3.3.0:\n    resolution: {integrity: sha512-Ld2g8rrAyMYFXBhEqMz8ZAHBi4J4uS1i/CxGMDnjyFWddMXLVcDp051DZfu+t7+ab7Wv6SMqpWmyFIj5UbfFvg==}\n    engines: {node: '>=14'}\n\n  forever-agent@0.6.1:\n    resolution: {integrity: sha512-j0KLYPhm6zeac4lz3oJ3o65qvgQCcPubiyotZrXqEaG4hNagNYO8qdlUrX5vwqv9ohqeT/Z3j6+yW067yWWdUw==}\n\n  form-data@2.3.3:\n    resolution: {integrity: sha512-1lLKB2Mu3aGP1Q/2eCOx0fNbRMe7XdwktwOruhfqqd0rIJWwN4Dh+E3hrPSlDCXnSR7UtZ1N38rVXm+6+MEhJQ==}\n    engines: {node: '>= 0.12'}\n\n  fromentries@1.3.2:\n    resolution: {integrity: sha512-cHEpEQHUg0f8XdtZCc2ZAhrHzKzT0MrFUTcvx+hfxYu7rGMDc5SKoXFh+n4YigxsHXRzc6OrCshdR1bWH6HHyg==}\n\n  fs-extra@10.1.0:\n    resolution: {integrity: sha512-oRXApq54ETRj4eMiFzGnHWGy+zo5raudjuxN0b8H7s/RU2oW0Wvsx9O0ACRN/kRq9E8Vu/ReskGB5o3ji+FzHQ==}\n    engines: {node: '>=12'}\n\n  fs-extra@7.0.1:\n    resolution: {integrity: sha512-YJDaCJZEnBmcbw13fvdAM9AwNOJwOzrE4pqMqBq5nFiEqXUqHwlK4B+3pUw6JNvfSPtX05xFHtYy/1ni01eGCw==}\n    engines: {node: '>=6 <7 || >=8'}\n\n  fs-extra@8.1.0:\n    resolution: {integrity: sha512-yhlQgA6mnOJUKOsRUFsgJdQCvkKhcz8tlZG5HBQfReYZy46OwLcY+Zia0mtdHsOo9y/hP+CxMN0TU9QxoOtG4g==}\n    engines: {node: '>=6 <7 || >=8'}\n\n  fs-minipass@2.1.0:\n    resolution: {integrity: sha512-V/JgOLFCS+R6Vcq0slCuaeWEdNC3ouDlJMNIsacH2VtALiu9mV4LPrHc5cDl8k5aw6J8jwgWWpiTo5RYhmIzvg==}\n    engines: {node: '>= 8'}\n\n  fs.realpath@1.0.0:\n    resolution: {integrity: sha512-OO0pH2lK6a0hZnAdau5ItzHPI6pUlvI7jMVnxUQRtw4owF2wk8lOSabtGDCTP4Ggrg2MbGnWO9X8K1t4+fGMDw==}\n\n  fsevents@2.3.3:\n    resolution: {integrity: sha512-5xoDfX+fL7faATnagmWPpbFtwh/R77WmMMqqHGS65C3vvB0YHrgF+B1YmZ3441tMj5n63k0212XNoJwzlhffQw==}\n    engines: {node: ^8.16.0 || ^10.6.0 || >=11.0.0}\n    os: [darwin]\n\n  function-bind@1.1.2:\n    resolution: {integrity: sha512-7XHNxH7qX9xG5mIwxkhumTox/MIRNcOgDrxWsMt2pAr23WHp6MrRlN7FBSFpCpr+oVO0F744iUgR82nJMfG2SA==}\n\n  function-timeout@0.1.1:\n    resolution: {integrity: sha512-0NVVC0TaP7dSTvn1yMiy6d6Q8gifzbvQafO46RtLG/kHJUBNd+pVRGOBoK44wNBvtSPUJRfdVvkFdD3p0xvyZg==}\n    engines: {node: '>=14.16'}\n\n  function.prototype.name@1.1.6:\n    resolution: {integrity: sha512-Z5kx79swU5P27WEayXM1tBi5Ze/lbIyiNgU3qyXUOf9b2rgXYyF9Dy9Cx+IQv/Lc8WCG6L82zwUPpSS9hGehIg==}\n    engines: {node: '>= 0.4'}\n\n  functions-have-names@1.2.3:\n    resolution: {integrity: sha512-xckBUXyTIqT97tq2x2AMb+g163b5JFysYk0x4qxNFwbfQkmNZoiRHb6sPzI9/QV33WeuvVYBUIiD4NzNIyqaRQ==}\n\n  gauge@3.0.2:\n    resolution: {integrity: sha512-+5J6MS/5XksCuXq++uFRsnUd7Ovu1XenbeuIuNRJxYWjgQbPuFhT14lAvsWfqfAmnwluf1OwMjz39HjfLPci0Q==}\n    engines: {node: '>=10'}\n    deprecated: This package is no longer supported.\n\n  gensequence@7.0.0:\n    resolution: {integrity: sha512-47Frx13aZh01afHJTB3zTtKIlFI6vWY+MYCN9Qpew6i52rfKjnhCF/l1YlC8UmEMvvntZZ6z4PiCcmyuedR2aQ==}\n    engines: {node: '>=18'}\n\n  gensync@1.0.0-beta.2:\n    resolution: {integrity: sha512-3hN7NaskYvMDLQY55gnW3NQ+mesEAepTqlg+VEbj7zzqEMBVNhzcGYYeqFo/TlYz6eQiFcp1HcsCZO+nGgS8zg==}\n    engines: {node: '>=6.9.0'}\n\n  get-caller-file@2.0.5:\n    resolution: {integrity: sha512-DyFP3BM/3YHTQOCUL/w0OZHR0lpKeGrxotcHWcqNEdnltqFwXVfhEBQ94eIo34AfQpo0rGki4cyIiftY06h2Fg==}\n    engines: {node: 6.* || 8.* || >= 10.*}\n\n  get-east-asian-width@1.2.0:\n    resolution: {integrity: sha512-2nk+7SIVb14QrgXFHcm84tD4bKQz0RxPuMT8Ag5KPOq7J5fEmAg0UbXdTOSHqNuHSU28k55qnceesxXRZGzKWA==}\n    engines: {node: '>=18'}\n\n  get-intrinsic@1.2.4:\n    resolution: {integrity: sha512-5uYhsJH8VJBTv7oslg4BznJYhDoRI6waYCxMmCdnTrcCrHA/fCFKoTFz2JKKE0HdDFUF7/oQuhzumXJK7paBRQ==}\n    engines: {node: '>= 0.4'}\n\n  get-package-type@0.1.0:\n    resolution: {integrity: sha512-pjzuKtY64GYfWizNAJ0fr9VqttZkNiK2iS430LtIHzjBEr6bX8Am2zm4sW4Ro5wjWW5cAlRL1qAMTcXbjNAO2Q==}\n    engines: {node: '>=8.0.0'}\n\n  get-port@5.1.1:\n    resolution: {integrity: sha512-g/Q1aTSDOxFpchXC4i8ZWvxA1lnPqx/JHqcpIw0/LX9T8x/GBbi6YnlN5nhaKIFkT8oFsscUKgDJYxfwfS6QsQ==}\n    engines: {node: '>=8'}\n\n  get-set-props@0.1.0:\n    resolution: {integrity: sha512-7oKuKzAGKj0ag+eWZwcGw2fjiZ78tXnXQoBgY0aU7ZOxTu4bB7hSuQSDgtKy978EDH062P5FmD2EWiDpQS9K9Q==}\n    engines: {node: '>=0.10.0'}\n\n  get-stack-trace@3.1.1:\n    resolution: {integrity: sha512-E1rM+umbm9MlMp6zNSap+UI8VVWWmAoUxiAHp1Ron1FV2dM99mgMAHS1tGAGO/ceBjgOXz24GC47aLeNN1llrA==}\n    engines: {node: '>=18.0'}\n\n  get-stdin@9.0.0:\n    resolution: {integrity: sha512-dVKBjfWisLAicarI2Sf+JuBE/DghV4UzNAVe9yhEJuzeREd3JhOTE9cUaJTeSa77fsbQUK3pcOpJfM59+VKZaA==}\n    engines: {node: '>=12'}\n\n  get-symbol-description@1.0.2:\n    resolution: {integrity: sha512-g0QYk1dZBxGwk+Ngc+ltRH2IBp2f7zBkBMBJZCDerh6EhlhSR6+9irMCuT/09zD6qkarHUSn529sK/yL4S27mg==}\n    engines: {node: '>= 0.4'}\n\n  get-tsconfig@4.8.1:\n    resolution: {integrity: sha512-k9PN+cFBmaLWtVz29SkUoqU5O0slLuHJXt/2P+tMVFT+phsSGXGkp9t3rQIqdz0e+06EHNGs3oM6ZX1s2zHxRg==}\n\n  get-urls@12.1.0:\n    resolution: {integrity: sha512-qHO+QmPiI1bEw0Y/m+WMAAx/UoEEXLZwEx0DVaKMtlHNrKbMeV960LryIpd+E2Ykb9XkVHmVtpbCsmul3GhR0g==}\n    engines: {node: '>=16'}\n\n  getpass@0.1.7:\n    resolution: {integrity: sha512-0fzj9JxOLfJ+XGLhR8ze3unN0KZCgZwiSSDz168VERjK8Wl8kVSdcu2kspd4s4wtAa1y/qrVRiAA0WclVsu0ng==}\n\n  gitdown@4.1.1:\n    resolution: {integrity: sha512-46RxNJDW9Gao+FZot2xFazGoQ/heGt0eXRn+ww2Lh+aFBlsRIq1ln8rGwbFeEJbF9Ozus+Ox0ibCzyKW/z6Olg==}\n    engines: {node: '>=18'}\n    hasBin: true\n\n  gitinfo@2.4.0:\n    resolution: {integrity: sha512-cQU3oInRu7+LaPwFNlppP0NmJa1SBdZtNCUoo+XT/nGRbmwlhssbjkN7gQmfQZAuMxphghx0ACfbIQmMBmPT2w==}\n\n  glob-parent@5.1.2:\n    resolution: {integrity: sha512-AOIgSQCepiJYwP3ARnGx+5VnTu2HBYdzbGP45eLw1vr3zB3vZLeyed1sC9hnbcOc9/SrMyM5RPQrkGz4aS9Zow==}\n    engines: {node: '>= 6'}\n\n  glob-parent@6.0.2:\n    resolution: {integrity: sha512-XxwI8EOhVQgWp6iDL+3b0r86f4d6AX6zSU55HfB4ydCEuXLXc5FcYeOu+nnGftS4TEju/11rt4KJPTMgbfmv4A==}\n    engines: {node: '>=10.13.0'}\n\n  glob@10.3.10:\n    resolution: {integrity: sha512-fa46+tv1Ak0UPK1TOy/pZrIybNNt4HCv7SDzwyfiOZkvZLEbjsZkJBPtDHVshZjbecAoAGSC20MjLDG/qr679g==}\n    engines: {node: '>=16 || 14 >=14.17'}\n    hasBin: true\n\n  glob@10.4.5:\n    resolution: {integrity: sha512-7Bv8RF0k6xjo7d4A/PxYLbUCfb6c+Vpd2/mB2yRDlew7Jb5hEXiCD9ibfO7wpk8i4sevK6DFny9h7EYbM3/sHg==}\n    hasBin: true\n\n  glob@7.2.3:\n    resolution: {integrity: sha512-nFR0zLpU2YCaRxwoCJvL6UvCH2JFyFVIvwTLsIf21AuHlMskA1hhTdk+LlYJtOlYt9v6dvszD2BGRqBL+iQK9Q==}\n    deprecated: Glob versions prior to v9 are no longer supported\n\n  global-directory@4.0.1:\n    resolution: {integrity: sha512-wHTUcDUoZ1H5/0iVqEudYW4/kAlN5cZ3j/bXn0Dpbizl9iaUVeWSHqiOjsgk6OW2bkLclbBjzewBz6weQ1zA2Q==}\n    engines: {node: '>=18'}\n\n  globals@11.12.0:\n    resolution: {integrity: sha512-WOBp/EEGUiIsJSp7wcv/y6MO+lV9UoncWqxuFfm8eBwzWNgyfBd6Gz+IeKQ9jCmyhoH99g15M3T+QaVHFjizVA==}\n    engines: {node: '>=4'}\n\n  globals@13.24.0:\n    resolution: {integrity: sha512-AhO5QUcj8llrbG09iWhPU2B204J1xnPeL8kQmVorSsy+Sjj1sk8gIyh6cUocGmH4L0UuhAJy+hJMRA4mgA4mFQ==}\n    engines: {node: '>=8'}\n\n  globals@14.0.0:\n    resolution: {integrity: sha512-oahGvuMGQlPw/ivIYBjVSrWAfWLBeku5tpPE2fOPLi+WHffIWbuh2tCjhyQhTBPMf5E9jDEH4FOmTYgYwbKwtQ==}\n    engines: {node: '>=18'}\n\n  globals@15.14.0:\n    resolution: {integrity: sha512-OkToC372DtlQeje9/zHIo5CT8lRP/FUgEOKBEhU4e0abL7J7CD24fD9ohiLN5hagG/kWCYj4K5oaxxtj2Z0Dig==}\n    engines: {node: '>=18'}\n\n  globalthis@1.0.4:\n    resolution: {integrity: sha512-DpLKbNU4WylpxJykQujfCcwYWiV/Jhm50Goo0wrVILAv5jOr9d+H+UR3PhSCD2rCCEIg0uc+G+muBTwD54JhDQ==}\n    engines: {node: '>= 0.4'}\n\n  globby@11.1.0:\n    resolution: {integrity: sha512-jhIXaOzy1sb8IyocaruWSn1TjmnBVs8Ayhcy83rmxNJ8q2uWKCAj3CnJY+KpGSXCueAPc0i05kVvVKtP1t9S3g==}\n    engines: {node: '>=10'}\n\n  globby@14.0.1:\n    resolution: {integrity: sha512-jOMLD2Z7MAhyG8aJpNOpmziMOP4rPLcc95oQPKXBazW82z+CEgPFBQvEpRUa1KeIMUJo4Wsm+q6uzO/Q/4BksQ==}\n    engines: {node: '>=18'}\n\n  gopd@1.0.1:\n    resolution: {integrity: sha512-d65bNlIadxvpb/A2abVdlqKqV563juRnZ1Wtk6s1sIR8uNsXR70xqIzVqxVf1eTqDunwT2MkczEeaezCKTZhwA==}\n\n  graceful-fs@4.2.11:\n    resolution: {integrity: sha512-RbJ5/jmFcNNCcDV5o9eTnBLJ/HszWV0P73bc+Ff4nS/rJj+YaS6IGyiOL0VoBYX+l1Wrl3k63h/KrH+nhJ0XvQ==}\n\n  grapheme-splitter@1.0.4:\n    resolution: {integrity: sha512-bzh50DW9kTPM00T8y4o8vQg89Di9oLJVLW/KaOGIXJWP/iqCN6WKYkbNOF04vFLJhwcpYUh9ydh/+5vpOqV4YQ==}\n\n  graphemer@1.4.0:\n    resolution: {integrity: sha512-EtKwoO6kxCL9WO5xipiHTZlSzBm7WLT627TqC/uVRd0HKmq8NXyebnNYxDoBi7wt8eTWrUrKXCOVaFq9x1kgag==}\n\n  graphql-config@4.5.0:\n    resolution: {integrity: sha512-x6D0/cftpLUJ0Ch1e5sj1TZn6Wcxx4oMfmhaG9shM0DKajA9iR+j1z86GSTQ19fShbGvrSSvbIQsHku6aQ6BBw==}\n    engines: {node: '>= 10.0.0'}\n    peerDependencies:\n      cosmiconfig-toml-loader: ^1.0.0\n      graphql: ^0.11.0 || ^0.12.0 || ^0.13.0 || ^14.0.0 || ^15.0.0 || ^16.0.0\n    peerDependenciesMeta:\n      cosmiconfig-toml-loader:\n        optional: true\n\n  graphql-depth-limit@1.1.0:\n    resolution: {integrity: sha512-+3B2BaG8qQ8E18kzk9yiSdAa75i/hnnOwgSeAxVJctGQPvmeiLtqKOYF6HETCyRjiF7Xfsyal0HbLlxCQkgkrw==}\n    engines: {node: '>=6.0.0'}\n    peerDependencies:\n      graphql: '*'\n\n  graphql-ws@5.12.1:\n    resolution: {integrity: sha512-umt4f5NnMK46ChM2coO36PTFhHouBrK9stWWBczERguwYrGnPNxJ9dimU6IyOBfOkC6Izhkg4H8+F51W/8CYDg==}\n    engines: {node: '>=10'}\n    peerDependencies:\n      graphql: '>=0.11 <=16'\n\n  graphql@16.10.0:\n    resolution: {integrity: sha512-AjqGKbDGUFRKIRCP9tCKiIGHyriz2oHEbPIbEtcSLSs4YjReZOIPQQWek4+6hjw62H9QShXHyaGivGiYVLeYFQ==}\n    engines: {node: ^12.22.0 || ^14.16.0 || ^16.0.0 || >=17.0.0}\n\n  graphql@16.8.1:\n    resolution: {integrity: sha512-59LZHPdGZVh695Ud9lRzPBVTtlX9ZCV150Er2W43ro37wVof0ctenSaskPPjN7lVTIN8mSZt8PHUNKZuNQUuxw==}\n    engines: {node: ^12.22.0 || ^14.16.0 || ^16.0.0 || >=17.0.0}\n\n  har-schema@2.0.0:\n    resolution: {integrity: sha512-Oqluz6zhGX8cyRaTQlFMPw80bSJVG2x/cFb8ZPhUILGgHka9SsokCCOQgpveePerqidZOrT14ipqfJb7ILcW5Q==}\n    engines: {node: '>=4'}\n\n  har-validator@5.1.5:\n    resolution: {integrity: sha512-nmT2T0lljbxdQZfspsno9hgrG3Uir6Ks5afism62poxqBM6sDnMEuPmzTq8XN0OEwqKLLdh1jQI3qyE66Nzb3w==}\n    engines: {node: '>=6'}\n    deprecated: this library is no longer supported\n\n  hard-rejection@2.1.0:\n    resolution: {integrity: sha512-VIZB+ibDhx7ObhAe7OVtoEbuP4h/MuOTHJ+J8h/eBXotJYl0fBgR72xDFCKgIh22OJZIOVNxBMWuhAr10r8HdA==}\n    engines: {node: '>=6'}\n\n  has-bigints@1.0.2:\n    resolution: {integrity: sha512-tSvCKtBr9lkF0Ex0aQiP9N+OpV4zi2r/Nee5VkRDbaqv35RLYMzbwQfFSZZH0kR+Rd6302UJZ2p/bJCEoR3VoQ==}\n\n  has-flag@3.0.0:\n    resolution: {integrity: sha512-sKJf1+ceQBr4SMkvQnBDNDtf4TXpVhVGateu0t918bl30FnbE2m4vNLX+VWe/dpjlb+HugGYzW7uQXH98HPEYw==}\n    engines: {node: '>=4'}\n\n  has-flag@4.0.0:\n    resolution: {integrity: sha512-EykJT/Q1KjTWctppgIAgfSO0tKVuZUjhgMr17kqTumMl6Afv3EISleU7qZUzoXDFTAHTDC4NOoG/ZxU3EvlMPQ==}\n    engines: {node: '>=8'}\n\n  has-own-prop@2.0.0:\n    resolution: {integrity: sha512-Pq0h+hvsVm6dDEa8x82GnLSYHOzNDt7f0ddFa3FqcQlgzEiptPqL+XrOJNavjOzSYiYWIrgeVYYgGlLmnxwilQ==}\n    engines: {node: '>=8'}\n\n  has-property-descriptors@1.0.2:\n    resolution: {integrity: sha512-55JNKuIW+vq4Ke1BjOTjM2YctQIvCT7GFzHwmfZPGo5wnrgkid0YQtnAleFSqumZm4az3n2BS+erby5ipJdgrg==}\n\n  has-proto@1.0.3:\n    resolution: {integrity: sha512-SJ1amZAJUiZS+PhsVLf5tGydlaVB8EdFpaSO4gmiUKUOxk8qzn5AIy4ZeJUmh22znIdk/uMAUT2pl3FxzVUH+Q==}\n    engines: {node: '>= 0.4'}\n\n  has-symbols@1.0.3:\n    resolution: {integrity: sha512-l3LCuF6MgDNwTDKkdYGEihYjt5pRPbEg46rtlmnSPlUbgmB8LOIrKJbYYFBSbnPaJexMKtiPO8hmeRjRz2Td+A==}\n    engines: {node: '>= 0.4'}\n\n  has-tostringtag@1.0.2:\n    resolution: {integrity: sha512-NqADB8VjPFLM2V0VvHUewwwsw0ZWBaIdgo+ieHtK3hasLz4qeCRjYcqfB6AQrBggRKppKF8L52/VqdVsO47Dlw==}\n    engines: {node: '>= 0.4'}\n\n  has-unicode@2.0.1:\n    resolution: {integrity: sha512-8Rf9Y83NBReMnx0gFzA8JImQACstCYWUplepDa9xprwwtmgEZUF0h/i5xSA625zB/I37EtrswSST6OXxwaaIJQ==}\n\n  hasha@5.2.2:\n    resolution: {integrity: sha512-Hrp5vIK/xr5SkeN2onO32H0MgNZ0f17HRNH39WfL0SYUNOTZ5Lz1TJ8Pajo/87dYGEFlLMm7mIc/k/s6Bvz9HQ==}\n    engines: {node: '>=8'}\n\n  hasown@2.0.2:\n    resolution: {integrity: sha512-0hJU9SCPvmMzIBdZFqNPXWa6dqh7WdH0cII9y+CyS8rG3nL48Bclra9HmKhVVUHyPWNH5Y7xDwAB7bfgSjkUMQ==}\n    engines: {node: '>= 0.4'}\n\n  hosted-git-info@2.8.9:\n    resolution: {integrity: sha512-mxIDAb9Lsm6DoOJ7xH+5+X4y1LU/4Hi50L9C5sIswK3JzULS4bwk1FvjdBgvYR4bzT4tuUQiC15FE2f5HbLvYw==}\n\n  html-escaper@2.0.2:\n    resolution: {integrity: sha512-H2iMtd0I4Mt5eYiapRdIDjp+XzelXQ0tFE4JS7YFwFevXXMmOp9myNrUvCg0D6ws8iqkRPBfKHgbwig1SmlLfg==}\n\n  htmlparser2@3.10.1:\n    resolution: {integrity: sha512-IgieNijUMbkDovyoKObU1DUhm1iwNYE/fuifEoEHfd1oZKZDaONBSkal7Y01shxsM49R4XaMdGez3WnF9UfiCQ==}\n\n  http-signature@1.2.0:\n    resolution: {integrity: sha512-CAbnr6Rz4CYQkLYUtSNXxQPUH2gK8f3iWexVlsnMeD+GjlsQ0Xsy1cOX+mN3dtxYomRy21CiOzU8Uhw6OwncEQ==}\n    engines: {node: '>=0.8', npm: '>=1.3.7'}\n\n  https-proxy-agent@5.0.1:\n    resolution: {integrity: sha512-dFcAjpTQFgoLMzC2VwU+C/CbS7uRL0lWmxDITmqm7C+7F0Odmj6s9l6alZc6AELXhrnggM2CeWSXHGOdX2YtwA==}\n    engines: {node: '>= 6'}\n\n  human-id@1.0.2:\n    resolution: {integrity: sha512-UNopramDEhHJD+VR+ehk8rOslwSfByxPIZyJRfV739NDhN5LF1fa1MqnzKm2lGTQRjNrjK19Q5fhkgIfjlVUKw==}\n\n  husky@9.0.11:\n    resolution: {integrity: sha512-AB6lFlbwwyIqMdHYhwPe+kjOC3Oc5P3nThEoW/AaO2BX3vJDjWPFxYLxokUZOo6RNX20He3AaT8sESs9NJcmEw==}\n    engines: {node: '>=18'}\n    hasBin: true\n\n  iconv-lite@0.4.24:\n    resolution: {integrity: sha512-v3MXnZAcvnywkTUEZomIActle7RXXeedOR31wwl7VlyoXO4Qi9arvSenNQWne1TcRwhCL1HwLI21bEqdpj8/rA==}\n    engines: {node: '>=0.10.0'}\n\n  ignore-by-default@2.1.0:\n    resolution: {integrity: sha512-yiWd4GVmJp0Q6ghmM2B/V3oZGRmjrKLXvHR3TE1nfoXsmoggllfZUQe74EN0fJdPFZu2NIvNdrMMLm3OsV7Ohw==}\n    engines: {node: '>=10 <11 || >=12 <13 || >=14'}\n\n  ignore@5.3.1:\n    resolution: {integrity: sha512-5Fytz/IraMjqpwfd34ke28PTVMjZjJG2MPn5t7OE4eUCUNf8BAa7b5WUS9/Qvr6mwOQS7Mk6vdsMno5he+T8Xw==}\n    engines: {node: '>= 4'}\n\n  ignore@5.3.2:\n    resolution: {integrity: sha512-hsBTNUqQTDwkWtcdYI2i06Y/nUBEsNEDJKjWdigLvegy8kDuJAS8uRlpkkcQpyEXL0Z/pjDy5HBmMjRCJ2gq+g==}\n    engines: {node: '>= 4'}\n\n  import-fresh@3.3.0:\n    resolution: {integrity: sha512-veYYhQa+D1QBKznvhUHxb8faxlrwUnxseDAbAp457E0wLNio2bOSKnjYDhMj+YiAq61xrMGhQk9iXVk5FzgQMw==}\n    engines: {node: '>=6'}\n\n  import-meta-resolve@4.1.0:\n    resolution: {integrity: sha512-I6fiaX09Xivtk+THaMfAwnA3MVA5Big1WHF1Dfx9hFuvNIWpXnorlkzhcQf6ehrqQiiZECRt1poOAkPmer3ruw==}\n\n  import-modules@2.1.0:\n    resolution: {integrity: sha512-8HEWcnkbGpovH9yInoisxaSoIg9Brbul+Ju3Kqe2UsYDUBJD/iQjSgEj0zPcTDPKfPp2fs5xlv1i+JSye/m1/A==}\n    engines: {node: '>=8'}\n\n  imurmurhash@0.1.4:\n    resolution: {integrity: sha512-JmXMZ6wuvDmLiHEml9ykzqO6lwFbof0GG4IkcGaENdCRDDmMVnny7s5HsIgHCbaq0w2MyPhDqkhTUgS2LU2PHA==}\n    engines: {node: '>=0.8.19'}\n\n  indent-string@4.0.0:\n    resolution: {integrity: sha512-EdDDZu4A2OyIK7Lr/2zG+w5jmbuk1DVBnEwREQvBzspBJkCEbRa8GxU1lghYcaGJCnRWibjDXlq779X1/y5xwg==}\n    engines: {node: '>=8'}\n\n  indent-string@5.0.0:\n    resolution: {integrity: sha512-m6FAo/spmsW2Ab2fU35JTYwtOKa2yAwXSwgjSv1TJzh4Mh7mC3lzAOVLBprb72XsTrgkEIsl7YrFNAiDiRhIGg==}\n    engines: {node: '>=12'}\n\n  inflight@1.0.6:\n    resolution: {integrity: sha512-k92I/b08q4wvFscXCLvqfsHCrjrF7yiXsQuIVvVE7N82W3+aqpzuUdBbfhWcy/FZR3/4IgflMgKLOsvPDrGCJA==}\n    deprecated: This module is not supported, and leaks memory. Do not use it. Check out lru-cache if you want a good and tested way to coalesce async requests by a key value, which is much more comprehensive and powerful.\n\n  inherits@2.0.4:\n    resolution: {integrity: sha512-k/vGaX4/Yla3WzyMCvTQOXYeIHvqOKtnqBduzTHpzpQZzAskKMhZ2K+EnBiSM9zGSoIFeMpXKxa4dYeZIQqewQ==}\n\n  ini@1.3.8:\n    resolution: {integrity: sha512-JV/yugV2uzW5iMRSiZAyDtQd+nxtUnjeLt0acNdw98kKLrvuRVyB80tsREOE7yvGVgalhZ6RNXCmEHkUKBKxew==}\n\n  ini@4.1.1:\n    resolution: {integrity: sha512-QQnnxNyfvmHFIsj7gkPcYymR8Jdw/o7mp5ZFihxn6h8Ci6fh3Dx4E1gPjpQEpIuPo9XVNY/ZUwh4BPMjGyL01g==}\n    engines: {node: ^14.17.0 || ^16.13.0 || >=18.0.0}\n\n  internal-slot@1.0.7:\n    resolution: {integrity: sha512-NGnrKwXzSms2qUUih/ILZ5JBqNTSa1+ZmP6flaIp6KmSElgE9qdndzS3cqjrDovwFdmwsGsLdeFgB6suw+1e9g==}\n    engines: {node: '>= 0.4'}\n\n  ip-regex@4.3.0:\n    resolution: {integrity: sha512-B9ZWJxHHOHUhUjCPrMpLD4xEq35bUTClHM1S6CBU5ixQnkZmwipwgc96vAd7AAGM9TGHvJR+Uss+/Ak6UphK+Q==}\n    engines: {node: '>=8'}\n\n  irregular-plurals@3.5.0:\n    resolution: {integrity: sha512-1ANGLZ+Nkv1ptFb2pa8oG8Lem4krflKuX/gINiHJHjJUKaJHk/SXk5x6K3J+39/p0h1RQ2saROclJJ+QLvETCQ==}\n    engines: {node: '>=8'}\n\n  is-array-buffer@3.0.4:\n    resolution: {integrity: sha512-wcjaerHw0ydZwfhiKbXJWLDY8A7yV7KhjQOpb83hGgGfId/aQa4TOvwyzn2PuswW2gPCYEL/nEAiSVpdOj1lXw==}\n    engines: {node: '>= 0.4'}\n\n  is-arrayish@0.2.1:\n    resolution: {integrity: sha512-zz06S8t0ozoDXMG+ube26zeCTNXcKIPJZJi8hBrF4idCLms4CG9QtK7qBl1boi5ODzFpjswb5JPmHCbMpjaYzg==}\n\n  is-async-function@2.0.0:\n    resolution: {integrity: sha512-Y1JXKrfykRJGdlDwdKlLpLyMIiWqWvuSd17TvZk68PLAOGOoF4Xyav1z0Xhoi+gCYjZVeC5SI+hYFOfvXmGRCA==}\n    engines: {node: '>= 0.4'}\n\n  is-bigint@1.0.4:\n    resolution: {integrity: sha512-zB9CruMamjym81i2JZ3UMn54PKGsQzsJeo6xvN3HJJ4CAsQNB6iRutp2To77OfCNuoxspsIhzaPoO1zyCEhFOg==}\n\n  is-boolean-object@1.1.2:\n    resolution: {integrity: sha512-gDYaKHJmnj4aWxyj6YHyXVpdQawtVLHU5cb+eztPGczf6cjuTdwve5ZIEfgXqH4e57An1D1AKf8CZ3kYrQRqYA==}\n    engines: {node: '>= 0.4'}\n\n  is-builtin-module@3.2.1:\n    resolution: {integrity: sha512-BSLE3HnV2syZ0FK0iMA/yUGplUeMmNz4AW5fnTunbCIqZi4vG3WjJT9FHMy5D69xmAYBHXQhJdALdpwVxV501A==}\n    engines: {node: '>=6'}\n\n  is-bun-module@1.2.1:\n    resolution: {integrity: sha512-AmidtEM6D6NmUiLOvvU7+IePxjEjOzra2h0pSrsfSAcXwl/83zLLXDByafUJy9k/rKK0pvXMLdwKwGHlX2Ke6Q==}\n\n  is-callable@1.2.7:\n    resolution: {integrity: sha512-1BC0BVFhS/p0qtw6enp8e+8OD0UrK0oFLztSjNzhcKA3WDuJxxAPXzPuPtKkjEY9UUoEWlX/8fgKeu2S8i9JTA==}\n    engines: {node: '>= 0.4'}\n\n  is-core-module@2.13.1:\n    resolution: {integrity: sha512-hHrIjvZsftOsvKSn2TRYl63zvxsgE0K+0mYMoH6gD4omR5IWB2KynivBQczo3+wF1cCkjzvptnI9Q0sPU66ilw==}\n\n  is-core-module@2.16.1:\n    resolution: {integrity: sha512-UfoeMA6fIJ8wTYFEUjelnaGI67v6+N7qXJEvQuIGa99l4xsCruSYOVSQ0uPANn4dAzm8lkYPaKLrrijLq7x23w==}\n    engines: {node: '>= 0.4'}\n\n  is-data-view@1.0.1:\n    resolution: {integrity: sha512-AHkaJrsUVW6wq6JS8y3JnM/GJF/9cf+k20+iDzlSaJrinEo5+7vRiteOSwBhHRiAyQATN1AmY4hwzxJKPmYf+w==}\n    engines: {node: '>= 0.4'}\n\n  is-date-object@1.0.5:\n    resolution: {integrity: sha512-9YQaSxsAiSwcvS33MBk3wTCVnWK+HhF8VZR2jRxehM16QcVOdHqPn4VPHmRK4lSr38n9JriurInLcP90xsYNfQ==}\n    engines: {node: '>= 0.4'}\n\n  is-extglob@2.1.1:\n    resolution: {integrity: sha512-SbKbANkN603Vi4jEZv49LeVJMn4yGwsbzZworEoyEiutsN3nJYdbO36zfhGJ6QEDpOZIFkDtnq5JRxmvl3jsoQ==}\n    engines: {node: '>=0.10.0'}\n\n  is-finalizationregistry@1.0.2:\n    resolution: {integrity: sha512-0by5vtUJs8iFQb5TYUHHPudOR+qXYIMKtiUzvLIZITZUjknFmziyBJuLhVRc+Ds0dREFlskDNJKYIdIzu/9pfw==}\n\n  is-fullwidth-code-point@3.0.0:\n    resolution: {integrity: sha512-zymm5+u+sCsSWyD9qNaejV3DFvhCKclKdizYaJUuHA83RLjb7nSuGnddCHGv0hk+KY7BMAlsWeK4Ueg6EV6XQg==}\n    engines: {node: '>=8'}\n\n  is-fullwidth-code-point@4.0.0:\n    resolution: {integrity: sha512-O4L094N2/dZ7xqVdrXhh9r1KODPJpFms8B5sGdJLPy664AgvXsreZUyCQQNItZRDlYug4xStLjNp/sz3HvBowQ==}\n    engines: {node: '>=12'}\n\n  is-generator-function@1.0.10:\n    resolution: {integrity: sha512-jsEjy9l3yiXEQ+PsXdmBwEPcOxaXWLspKdplFUVI9vq1iZgIekeC0L167qeu86czQaxed3q/Uzuw0swL0irL8A==}\n    engines: {node: '>= 0.4'}\n\n  is-get-set-prop@1.0.0:\n    resolution: {integrity: sha512-DvAYZ1ZgGUz4lzxKMPYlt08qAUqyG9ckSg2pIjfvcQ7+pkVNUHk8yVLXOnCLe5WKXhLop8oorWFBJHpwWQpszQ==}\n\n  is-glob@4.0.3:\n    resolution: {integrity: sha512-xelSayHH36ZgE7ZWhli7pW34hNbNl8Ojv5KVmkJD4hBdD3th8Tfk9vYasLM+mXWOZhFkgZfxhLSnrwRr4elSSg==}\n    engines: {node: '>=0.10.0'}\n\n  is-js-type@2.0.0:\n    resolution: {integrity: sha512-Aj13l47+uyTjlQNHtXBV8Cji3jb037vxwMWCgopRR8h6xocgBGW3qG8qGlIOEmbXQtkKShKuBM9e8AA1OeQ+xw==}\n\n  is-map@2.0.3:\n    resolution: {integrity: sha512-1Qed0/Hr2m+YqxnM09CjA2d/i6YZNfF6R2oRAOj36eUdS6qIV/huPJNSEpKbupewFs+ZsJlxsjjPbc0/afW6Lw==}\n    engines: {node: '>= 0.4'}\n\n  is-negative-zero@2.0.3:\n    resolution: {integrity: sha512-5KoIu2Ngpyek75jXodFvnafB6DJgr3u8uuK0LEZJjrU19DrMD3EVERaR8sjz8CCGgpZvxPl9SuE1GMVPFHx1mw==}\n    engines: {node: '>= 0.4'}\n\n  is-number-object@1.0.7:\n    resolution: {integrity: sha512-k1U0IRzLMo7ZlYIfzRu23Oh6MiIFasgpb9X76eqfFZAqwH44UI4KTBvBYIZ1dSL9ZzChTB9ShHfLkR4pdW5krQ==}\n    engines: {node: '>= 0.4'}\n\n  is-number@7.0.0:\n    resolution: {integrity: sha512-41Cifkg6e8TylSpdtTpeLVMqvSBEVzTttHvERD741+pnZ8ANv0004MRL43QKPDlK9cGvNp6NZWZUBlbGXYxxng==}\n    engines: {node: '>=0.12.0'}\n\n  is-obj-prop@1.0.0:\n    resolution: {integrity: sha512-5Idb61slRlJlsAzi0Wsfwbp+zZY+9LXKUAZpvT/1ySw+NxKLRWfa0Bzj+wXI3fX5O9hiddm5c3DAaRSNP/yl2w==}\n\n  is-plain-obj@1.1.0:\n    resolution: {integrity: sha512-yvkRyxmFKEOQ4pNXCmJG5AEQNlXJS5LaONXo5/cLdTZdWvsZ1ioJEonLGAosKlMWE8lwUy/bJzMjcw8az73+Fg==}\n    engines: {node: '>=0.10.0'}\n\n  is-plain-object@5.0.0:\n    resolution: {integrity: sha512-VRSzKkbMm5jMDoKLbltAkFQ5Qr7VDiTFGXxYFXXowVj387GeGNOCsOH6Msy00SGZ3Fp84b1Naa1psqgcCIEP5Q==}\n    engines: {node: '>=0.10.0'}\n\n  is-promise@4.0.0:\n    resolution: {integrity: sha512-hvpoI6korhJMnej285dSg6nu1+e6uxs7zG3BYAm5byqDsgJNWwxzM6z6iZiAgQR4TJ30JmBTOwqZUw3WlyH3AQ==}\n\n  is-proto-prop@2.0.0:\n    resolution: {integrity: sha512-jl3NbQ/fGLv5Jhan4uX+Ge9ohnemqyblWVVCpAvtTQzNFvV2xhJq+esnkIbYQ9F1nITXoLfDDQLp7LBw/zzncg==}\n\n  is-regex@1.1.4:\n    resolution: {integrity: sha512-kvRdxDsxZjhzUX07ZnLydzS1TU/TJlTUHHY4YLL87e37oUA49DfkLqgy+VjFocowy29cKvcSiu+kIv728jTTVg==}\n    engines: {node: '>= 0.4'}\n\n  is-regexp@3.1.0:\n    resolution: {integrity: sha512-rbku49cWloU5bSMI+zaRaXdQHXnthP6DZ/vLnfdSKyL4zUzuWnomtOEiZZOd+ioQ+avFo/qau3KPTc7Fjy1uPA==}\n    engines: {node: '>=12'}\n\n  is-set@2.0.3:\n    resolution: {integrity: sha512-iPAjerrse27/ygGLxw+EBR9agv9Y6uLeYVJMu+QNCoouJ1/1ri0mGrcWpfCqFZuzzx3WjtwxG098X+n4OuRkPg==}\n    engines: {node: '>= 0.4'}\n\n  is-shared-array-buffer@1.0.3:\n    resolution: {integrity: sha512-nA2hv5XIhLR3uVzDDfCIknerhx8XUKnstuOERPNNIinXG7v9u+ohXF67vxm4TPTEPU6lm61ZkwP3c9PCB97rhg==}\n    engines: {node: '>= 0.4'}\n\n  is-stream@2.0.1:\n    resolution: {integrity: sha512-hFoiJiTl63nn+kstHGBtewWSKnQLpyb155KHheA1l39uvtO9nWIop1p3udqPcUd/xbF1VLMO4n7OI6p7RbngDg==}\n    engines: {node: '>=8'}\n\n  is-string@1.0.7:\n    resolution: {integrity: sha512-tE2UXzivje6ofPW7l23cjDOMa09gb7xlAqG6jG5ej6uPV32TlWP3NKPigtaGeHNu9fohccRYvIiZMfOOnOYUtg==}\n    engines: {node: '>= 0.4'}\n\n  is-subdir@1.2.0:\n    resolution: {integrity: sha512-2AT6j+gXe/1ueqbW6fLZJiIw3F8iXGJtt0yDrZaBhAZEG1raiTxKWU+IPqMCzQAXOUCKdA4UDMgacKH25XG2Cw==}\n    engines: {node: '>=4'}\n\n  is-symbol@1.0.4:\n    resolution: {integrity: sha512-C/CPBqKWnvdcxqIARxyOh4v1UUEOCHpgDa0WYgpKDFMszcrPcffg5uhwSgPCLD2WWxmq6isisz87tzT01tuGhg==}\n    engines: {node: '>= 0.4'}\n\n  is-typed-array@1.1.13:\n    resolution: {integrity: sha512-uZ25/bUAlUY5fR4OKT4rZQEBrzQWYV9ZJYGGsUmEJ6thodVJ1HX64ePQ6Z0qPWP+m+Uq6e9UugrE38jeYsDSMw==}\n    engines: {node: '>= 0.4'}\n\n  is-typedarray@1.0.0:\n    resolution: {integrity: sha512-cyA56iCMHAh5CdzjJIa4aohJyeO1YbwLi3Jc35MmRU6poroFjIGZzUzupGiRPOjgHg9TLu43xbpwXk523fMxKA==}\n\n  is-unicode-supported@2.0.0:\n    resolution: {integrity: sha512-FRdAyx5lusK1iHG0TWpVtk9+1i+GjrzRffhDg4ovQ7mcidMQ6mj+MhKPmvh7Xwyv5gIS06ns49CA7Sqg7lC22Q==}\n    engines: {node: '>=18'}\n\n  is-weakmap@2.0.2:\n    resolution: {integrity: sha512-K5pXYOm9wqY1RgjpL3YTkF39tni1XajUIkawTLUo9EZEVUFga5gSQJF8nNS7ZwJQ02y+1YCNYcMh+HIf1ZqE+w==}\n    engines: {node: '>= 0.4'}\n\n  is-weakref@1.0.2:\n    resolution: {integrity: sha512-qctsuLZmIQ0+vSSMfoVvyFe2+GSEvnmZ2ezTup1SBse9+twCCeial6EEi3Nc2KFcf6+qz2FBPnjXsk8xhKSaPQ==}\n\n  is-weakset@2.0.3:\n    resolution: {integrity: sha512-LvIm3/KWzS9oRFHugab7d+M/GcBXuXX5xZkzPmN+NxihdQlZUQ4dWuSV1xR/sq6upL1TJEDrfBgRepHFdBtSNQ==}\n    engines: {node: '>= 0.4'}\n\n  is-windows@1.0.2:\n    resolution: {integrity: sha512-eXK1UInq2bPmjyX6e3VHIzMLobc4J94i4AWn+Hpq3OU5KkrRC96OAcR3PRJ/pGu6m8TRnBHP9dkXQVsT/COVIA==}\n    engines: {node: '>=0.10.0'}\n\n  isarray@2.0.5:\n    resolution: {integrity: sha512-xHjhDr3cNBK0BzdUJSPXZntQUx/mwMS5Rw4A7lPJ90XGAO6ISP/ePDNuo0vhqOZU+UD5JoodwCAAoZQd3FeAKw==}\n\n  isexe@2.0.0:\n    resolution: {integrity: sha512-RHxMLp9lnKHGHRng9QFhRCMbYAcVpn69smSGcq3f36xjgVVWThj4qqLbTLlq7Ssj8B+fIQ1EuCEGI2lKsyQeIw==}\n\n  iso8601-duration@1.3.0:\n    resolution: {integrity: sha512-K4CiUBzo3YeWk76FuET/dQPH03WE04R94feo5TSKQCXpoXQt9E4yx2CnY737QZnSAI3PI4WlKo/zfqizGx52QQ==}\n\n  isomorphic-ws@5.0.0:\n    resolution: {integrity: sha512-muId7Zzn9ywDsyXgTIafTry2sV3nySZeUDe6YedVd1Hvuuep5AsIlqK+XefWpYTyJG5e503F2xIuT2lcU6rCSw==}\n    peerDependencies:\n      ws: '*'\n\n  isstream@0.1.2:\n    resolution: {integrity: sha512-Yljz7ffyPbrLpLngrMtZ7NduUgVvi6wG9RJ9IUcyCd59YQ911PBJphODUcbOVbqYfxe1wuYf/LJ8PauMRwsM/g==}\n\n  istanbul-lib-coverage@3.2.2:\n    resolution: {integrity: sha512-O8dpsF+r0WV/8MNRKfnmrtCWhuKjxrq2w+jpzBL5UZKTi2LeVWnWOmWRxFlesJONmc+wLAGvKQZEOanko0LFTg==}\n    engines: {node: '>=8'}\n\n  istanbul-lib-hook@3.0.0:\n    resolution: {integrity: sha512-Pt/uge1Q9s+5VAZ+pCo16TYMWPBIl+oaNIjgLQxcX0itS6ueeaA+pEfThZpH8WxhFgCiEb8sAJY6MdUKgiIWaQ==}\n    engines: {node: '>=8'}\n\n  istanbul-lib-instrument@4.0.3:\n    resolution: {integrity: sha512-BXgQl9kf4WTCPCCpmFGoJkz/+uhvm7h7PFKUYxh7qarQd3ER33vHG//qaE8eN25l07YqZPpHXU9I09l/RD5aGQ==}\n    engines: {node: '>=8'}\n\n  istanbul-lib-processinfo@2.0.3:\n    resolution: {integrity: sha512-NkwHbo3E00oybX6NGJi6ar0B29vxyvNwoC7eJ4G4Yq28UfY758Hgn/heV8VRFhevPED4LXfFz0DQ8z/0kw9zMg==}\n    engines: {node: '>=8'}\n\n  istanbul-lib-report@3.0.1:\n    resolution: {integrity: sha512-GCfE1mtsHGOELCU8e/Z7YWzpmybrx/+dSTfLrvY8qRmaY6zXTKWn6WQIjaAFw069icm6GVMNkgu0NzI4iPZUNw==}\n    engines: {node: '>=10'}\n\n  istanbul-lib-source-maps@4.0.1:\n    resolution: {integrity: sha512-n3s8EwkdFIJCG3BPKBYvskgXGoy88ARzvegkitk60NxRdwltLOTaH7CUiMRXvwYorl0Q712iEjcWB+fK/MrWVw==}\n    engines: {node: '>=10'}\n\n  istanbul-reports@3.1.7:\n    resolution: {integrity: sha512-BewmUXImeuRk2YY0PVbxgKAysvhRPUQE0h5QRM++nVWyubKGV0l8qQ5op8+B2DOmwSe63Jivj0BjkPQVf8fP5g==}\n    engines: {node: '>=8'}\n\n  iterator.prototype@1.1.3:\n    resolution: {integrity: sha512-FW5iMbeQ6rBGm/oKgzq2aW4KvAGpxPzYES8N4g4xNXUKpL1mclMvOe+76AcLDTvD+Ze+sOpVhgdAQEKF4L9iGQ==}\n    engines: {node: '>= 0.4'}\n\n  jackspeak@2.3.6:\n    resolution: {integrity: sha512-N3yCS/NegsOBokc8GAdM8UcmfsKiSS8cipheD/nivzr700H+nsMOxJjQnvwOcRYVuFkdH0wGUvW2WbXGmrZGbQ==}\n    engines: {node: '>=14'}\n\n  jackspeak@3.4.3:\n    resolution: {integrity: sha512-OGlZQpz2yfahA/Rd1Y8Cd9SIEsqvXkLVoSw/cgwhnhFMDbsQFeZYoJJ7bIZBS9BcamUW96asq/npPWugM+RQBw==}\n\n  jiti@1.17.1:\n    resolution: {integrity: sha512-NZIITw8uZQFuzQimqjUxIrIcEdxYDFIe/0xYfIlVXTkiBjjyBEvgasj5bb0/cHtPRD/NziPbT312sFrkI5ALpw==}\n    hasBin: true\n\n  jiti@2.4.0:\n    resolution: {integrity: sha512-H5UpaUI+aHOqZXlYOaFP/8AzKsg+guWu+Pr3Y8i7+Y3zr1aXAvCvTAQ1RxSc6oVD8R8c7brgNtTVP91E7upH/g==}\n    hasBin: true\n\n  js-string-escape@1.0.1:\n    resolution: {integrity: sha512-Smw4xcfIQ5LVjAOuJCvN/zIodzA/BBSsluuoSykP+lUvScIi4U6RJLfwHet5cxFnCswUjISV8oAXaqaJDY3chg==}\n    engines: {node: '>= 0.8'}\n\n  js-tokens@4.0.0:\n    resolution: {integrity: sha512-RdJUflcE3cUzKiMqQgsCu06FPu9UdIJO0beYbPhHN4k6apgJtifcoCtT9bcxOpYBtpD2kCM6Sbzg4CausW/PKQ==}\n\n  js-types@1.0.0:\n    resolution: {integrity: sha512-bfwqBW9cC/Lp7xcRpug7YrXm0IVw+T9e3g4mCYnv0Pjr3zIzU9PCQElYU9oSGAWzXlbdl9X5SAMPejO9sxkeUw==}\n    engines: {node: '>=0.10.0'}\n\n  js-yaml@3.14.1:\n    resolution: {integrity: sha512-okMH7OXXJ7YrN9Ok3/SXrnu4iX9yOk+25nqX4imS2npuvTYDmo/QEZoqwZkYaIDk3jVvBOTOIEgEhaLOynBS9g==}\n    hasBin: true\n\n  js-yaml@4.1.0:\n    resolution: {integrity: sha512-wpxZs9NoxZaJESJGIZTyDEaYpl0FKSA+FB9aJiyemKhMwkxQg63h4T1KJgUGHpTqPDNRcmmYLugrRjJlBtWvRA==}\n    hasBin: true\n\n  jsbn@0.1.1:\n    resolution: {integrity: sha512-UVU9dibq2JcFWxQPA6KCqj5O42VOmAY3zQUfEKxU0KpTGXwNoCjkX1e13eHNvw/xPynt6pU0rZ1htjWTNTSXsg==}\n\n  jsdoc-type-pratt-parser@4.1.0:\n    resolution: {integrity: sha512-Hicd6JK5Njt2QB6XYFS7ok9e37O8AYk3jTcppG4YVQnYjOemymvTcmc7OWsmq/Qqj5TdRFO5/x/tIPmBeRtGHg==}\n    engines: {node: '>=12.0.0'}\n\n  jsdom@6.5.1:\n    resolution: {integrity: sha512-KeCN3yqR+MmjAZDnVZgIaL2tP9BxSFlsYZw9Z+zy64+jJzHc1m8ruccb83Qe8AG0xKUjpo2kxEGFCMtiF4MmAg==}\n\n  jsesc@0.5.0:\n    resolution: {integrity: sha512-uZz5UnB7u4T9LvwmFqXii7pZSouaRPorGs5who1Ip7VO0wxanFvBL7GkM6dTHlgX+jhBApRetaWpnDabOeTcnA==}\n    hasBin: true\n\n  jsesc@2.5.2:\n    resolution: {integrity: sha512-OYu7XEzjkCQ3C5Ps3QIZsQfNpqoJyZZA99wd9aWd05NCtC5pWOkShK2mkL6HXQR6/Cy2lbNdPlZBpuQHXE63gA==}\n    engines: {node: '>=4'}\n    hasBin: true\n\n  jsesc@3.0.2:\n    resolution: {integrity: sha512-xKqzzWXDttJuOcawBt4KnKHHIf5oQ/Cxax+0PWFG+DFDgHNAdi+TXECADI+RYiFUMmx8792xsMbbgXj4CwnP4g==}\n    engines: {node: '>=6'}\n    hasBin: true\n\n  json-buffer@3.0.1:\n    resolution: {integrity: sha512-4bV5BfR2mqfQTJm+V5tPPdf+ZpuhiIvTuAB5g8kcrXOZpTT/QwwVRWBywX1ozr6lEuPdbHxwaJlm9G6mI2sfSQ==}\n\n  json-parse-even-better-errors@2.3.1:\n    resolution: {integrity: sha512-xyFwyhro/JEof6Ghe2iz2NcXoj2sloNsWr/XsERDK/oiPCfaNhl5ONfp+jQdAZRQQ0IJWNzH9zIZF7li91kh2w==}\n\n  json-schema-traverse@0.4.1:\n    resolution: {integrity: sha512-xbbCH5dCYU5T8LcEhhuh7HJ88HXuW3qsI3Y0zOZFKfZEHcpWiHU/Jxzk629Brsab/mMiHQti9wMP+845RPe3Vg==}\n\n  json-schema@0.4.0:\n    resolution: {integrity: sha512-es94M3nTIfsEPisRafak+HDLfHXnKBhV3vU5eqPcS3flIWqcxJWgXHXiey3YrpaNsanY5ei1VoYEbOzijuq9BA==}\n\n  json-stable-stringify-without-jsonify@1.0.1:\n    resolution: {integrity: sha512-Bdboy+l7tA3OGW6FjyFHWkP5LuByj1Tk33Ljyq0axyzdk9//JSi2u3fP1QSmd1KNwq6VOKYGlAu87CisVir6Pw==}\n\n  json-stringify-safe@5.0.1:\n    resolution: {integrity: sha512-ZClg6AaYvamvYEE82d3Iyd3vSSIjQ+odgjaTzRuO3s7toCdFKczob2i0zCh7JE8kWn17yvAWhUVxvqGwUalsRA==}\n\n  json2csv@5.0.7:\n    resolution: {integrity: sha512-YRZbUnyaJZLZUJSRi2G/MqahCyRv9n/ds+4oIetjDF3jWQA7AG7iSeKTiZiCNqtMZM7HDyt0e/W6lEnoGEmMGA==}\n    engines: {node: '>= 10', npm: '>= 6.13.0'}\n    deprecated: Package no longer supported. Contact Support at https://www.npmjs.com/support for more info.\n    hasBin: true\n\n  json5@2.2.3:\n    resolution: {integrity: sha512-XmOWe7eyHYH14cLdVPoyg+GOH3rYX++KpzrylJwSW98t3Nk+U8XOl8FWKOgwtzdb8lXGf6zYwDUzeHMWfxasyg==}\n    engines: {node: '>=6'}\n    hasBin: true\n\n  jsonc-eslint-parser@2.4.0:\n    resolution: {integrity: sha512-WYDyuc/uFcGp6YtM2H0uKmUwieOuzeE/5YocFJLnLfclZ4inf3mRn8ZVy1s7Hxji7Jxm6Ss8gqpexD/GlKoGgg==}\n    engines: {node: ^12.22.0 || ^14.17.0 || >=16.0.0}\n\n  jsonfile@4.0.0:\n    resolution: {integrity: sha512-m6F1R3z8jjlf2imQHS2Qez5sjKWQzbuuhuJ/FKYFRZvPE3PuHcSMVZzfsLhGVOkfd20obL5SWEBew5ShlquNxg==}\n\n  jsonfile@6.1.0:\n    resolution: {integrity: sha512-5dgndWOriYSm5cnYaJNhalLNDKOqFwyDB/rr1E9ZsGciGvKPs8R2xYGCacuf3z6K1YKDz182fd+fY3cn3pMqXQ==}\n\n  jsonparse@1.3.1:\n    resolution: {integrity: sha512-POQXvpdL69+CluYsillJ7SUhKvytYjW9vG/GKpnf+xP8UWgYEM/RaMzHHofbALDiKbbP1W8UEYmgGl39WkPZsg==}\n    engines: {'0': node >= 0.2.0}\n\n  jsprim@1.4.2:\n    resolution: {integrity: sha512-P2bSOMAc/ciLz6DzgjVlGJP9+BrJWu5UDGK70C2iweC5QBIeFf0ZXRvGjEj2uYgrY2MkAAhsSWHDWlFtEroZWw==}\n    engines: {node: '>=0.6.0'}\n\n  jsx-ast-utils@3.3.5:\n    resolution: {integrity: sha512-ZZow9HBI5O6EPgSJLUb8n2NKgmVWTwCvHGwFuJlMjvLFqlGG6pjirPhtdsseaLZjSibD8eegzmYpUZwoIlj2cQ==}\n    engines: {node: '>=4.0'}\n\n  just-extend@6.2.0:\n    resolution: {integrity: sha512-cYofQu2Xpom82S6qD778jBDpwvvy39s1l/hrYij2u9AMdQcGRpaBu6kY4mVhuno5kJVi1DAz4aiphA2WI1/OAw==}\n\n  keyv@4.5.4:\n    resolution: {integrity: sha512-oxVHkHR/EJf2CNXnWxRLW6mg7JyCCUcG0DtEGmL2ctUo1PNTin1PUil+r/+4r5MpVgC/fn1kjsx7mjSujKqIpw==}\n\n  kind-of@6.0.3:\n    resolution: {integrity: sha512-dcS1ul+9tmeD95T+x28/ehLgd9mENa3LsvDTtzm3vyBEO7RPptvAD+t44WVXaUjTBRcrpFeFlC8WCruUR456hw==}\n    engines: {node: '>=0.10.0'}\n\n  kleur@4.1.5:\n    resolution: {integrity: sha512-o+NO+8WrRiQEE4/7nwRJhN1HWpVmJm511pBHUxPLtp0BUISzlBplORYSmTclCnJvQq2tKu/sgl3xVpkc7ZWuQQ==}\n    engines: {node: '>=6'}\n\n  knip@5.36.7:\n    resolution: {integrity: sha512-PSuu62+6wqd1Q1V/ZzbDhvJ3X+RU8wZILon90h2s93+d1OZL118ZE9WihzSqwP29GVt72MTlbS/HHG+O47H68w==}\n    engines: {node: '>=18.6.0'}\n    hasBin: true\n    peerDependencies:\n      '@types/node': '>=18'\n      typescript: '>=5.0.4'\n\n  language-subtag-registry@0.3.23:\n    resolution: {integrity: sha512-0K65Lea881pHotoGEa5gDlMxt3pctLi2RplBb7Ezh4rRdLEOtgi7n4EwK9lamnUCkKBqaeKRVebTq6BAxSkpXQ==}\n\n  language-tags@1.0.9:\n    resolution: {integrity: sha512-MbjN408fEndfiQXbFQ1vnd+1NoLDsnQW41410oQBXiyXDMYH5z505juWa4KUE1LqxRC7DgOgZDbKLxHIwm27hA==}\n    engines: {node: '>=0.10'}\n\n  levn@0.3.0:\n    resolution: {integrity: sha512-0OO4y2iOHix2W6ujICbKIaEQXvFQHue65vUG3pb5EUomzPI90z9hsA1VsO/dbIIpC53J8gxM9Q4Oho0jrCM/yA==}\n    engines: {node: '>= 0.8.0'}\n\n  levn@0.4.1:\n    resolution: {integrity: sha512-+bT2uH4E5LGE7h/n3evcS/sQlJXCpIp6ym8OWJ5eV6+67Dsql/LaaT7qJBAt2rzfoa/5QBGBhxDix1dMt2kQKQ==}\n    engines: {node: '>= 0.8.0'}\n\n  lines-and-columns@1.2.4:\n    resolution: {integrity: sha512-7ylylesZQ/PV29jhEDl3Ufjo6ZX7gCqJr5F7PKrqc93v7fzSymt1BpwEU8nAUXs8qzzvqhbjhK5QZg6Mt/HkBg==}\n\n  load-json-file@7.0.1:\n    resolution: {integrity: sha512-Gnxj3ev3mB5TkVBGad0JM6dmLiQL+o0t23JPBZ9sd+yvSLk05mFoqKBw5N8gbbkU4TNXyqCgIrl/VM17OgUIgQ==}\n    engines: {node: ^12.20.0 || ^14.13.1 || >=16.0.0}\n\n  load-yaml-file@0.2.0:\n    resolution: {integrity: sha512-OfCBkGEw4nN6JLtgRidPX6QxjBQGQf72q3si2uvqyFEMbycSFFHwAZeXx6cJgFM9wmLrf9zBwCP3Ivqa+LLZPw==}\n    engines: {node: '>=6'}\n\n  locate-path@5.0.0:\n    resolution: {integrity: sha512-t7hw9pI+WvuwNJXwk5zVHpyhIqzg2qTlklJOf0mVxGSbe3Fp2VieZcduNYjaLDoy6p9uGpQEGWG87WpMKlNq8g==}\n    engines: {node: '>=8'}\n\n  locate-path@6.0.0:\n    resolution: {integrity: sha512-iPZK6eYjbxRu3uB4/WZ3EsEIMJFMqAoopl3R+zuq0UjcAm/MO6KCweDgPfP3elTztoKP3KtnVHxTn2NHBSDVUw==}\n    engines: {node: '>=10'}\n\n  lodash.flattendeep@4.4.0:\n    resolution: {integrity: sha512-uHaJFihxmJcEX3kT4I23ABqKKalJ/zDrDg0lsFtc1h+3uw49SIJ5beyhx5ExVRti3AvKoOJngIj7xz3oylPdWQ==}\n\n  lodash.get@4.4.2:\n    resolution: {integrity: sha512-z+Uw/vLuy6gQe8cfaFWD7p0wVv8fJl3mbzXh33RS+0oW2wvUqiRXiQ69gLWSLpgB5/6sU+r6BlQR0MBILadqTQ==}\n\n  lodash.lowercase@4.3.0:\n    resolution: {integrity: sha512-UcvP1IZYyDKyEL64mmrwoA1AbFu5ahojhTtkOUr1K9dbuxzS9ev8i4TxMMGCqRC9TE8uDaSoufNAXxRPNTseVA==}\n\n  lodash.merge@4.6.2:\n    resolution: {integrity: sha512-0KpjqXRVvrYyCsX1swR/XTK0va6VQkQM6MNo7PqW77ByjAhoARA8EfrP1N4+KlKj8YS0ZUCtRT/YUuhyYDujIQ==}\n\n  lodash.startcase@4.4.0:\n    resolution: {integrity: sha512-+WKqsK294HMSc2jEbNgpHpd0JfIBhp7rEV4aqXWqFr6AlXov+SlcgB1Fv01y2kGe3Gc8nMW7VA0SrGuSkRfIEg==}\n\n  lodash.zip@4.2.0:\n    resolution: {integrity: sha512-C7IOaBBK/0gMORRBd8OETNx3kmOkgIWIPvyDpZSCTwUrpYmgZwJkjZeOD8ww4xbOUOs4/attY+pciKvadNfFbg==}\n\n  lodash@4.17.21:\n    resolution: {integrity: sha512-v2kDEe57lecTulaDIuNTPy3Ry4gLGJ6Z1O3vE1krgXZNrsQ+LFTGHVxVjcXPs17LhbZVGedAJv8XZ1tvj5FvSg==}\n\n  log-update@4.0.0:\n    resolution: {integrity: sha512-9fkkDevMefjg0mmzWFBW8YkFP91OrizzkW3diF7CpG+S2EYdy4+TVfGwz1zeF8x7hCx1ovSPTOE9Ngib74qqUg==}\n    engines: {node: '>=10'}\n\n  loose-envify@1.4.0:\n    resolution: {integrity: sha512-lyuxPGr/Wfhrlem2CL/UcnUc1zcqKAImBDzukY7Y5F/yQiNdko6+fRLevlw1HgMySw7f611UIY408EtxRSoK3Q==}\n    hasBin: true\n\n  loupe@3.1.2:\n    resolution: {integrity: sha512-23I4pFZHmAemUnz8WZXbYRSKYj801VDaNv9ETuMh7IrMc7VuVVSo+Z9iLE3ni30+U48iDWfi30d3twAXBYmnCg==}\n\n  lowercase-keys@1.0.1:\n    resolution: {integrity: sha512-G2Lj61tXDnVFFOi8VZds+SoQjtQC3dgokKdDG2mTm1tx4m50NUHBOZSBwQQHyy0V12A0JTG4icfZQH+xPyh8VA==}\n    engines: {node: '>=0.10.0'}\n\n  lru-cache@10.4.3:\n    resolution: {integrity: sha512-JNAzZcXrCt42VGLuYz0zfAzDfAvJWW6AfYlDBQyDV5DClI2m5sAmK+OIO7s59XfsRsWHp02jAJrRadPRGTt6SQ==}\n\n  lru-cache@4.1.5:\n    resolution: {integrity: sha512-sWZlbEP2OsHNkXrMl5GYk/jKk70MBng6UU4YI/qGDYbgf6YbP4EvmqISbXCoJiRKs+1bSpFHVgQxvJ17F2li5g==}\n\n  lru-cache@5.1.1:\n    resolution: {integrity: sha512-KpNARQA3Iwv+jTA0utUVVbrh+Jlrr1Fv0e56GGzAFOXN7dk/FviaDW8LHmK52DlcH4WP2n6gI8vN1aesBFgo9w==}\n\n  magic-string@0.30.17:\n    resolution: {integrity: sha512-sNPKHvyjVf7gyjwS4xGTaW/mCnF8wnjtifKBEhxfZ7E/S8tQ0rssrwGNn6q8JH/ohItJfSQp9mBtQYuTlH5QnA==}\n\n  make-dir@3.1.0:\n    resolution: {integrity: sha512-g3FeP20LNwhALb/6Cz6Dd4F2ngze0jz7tbzrD2wAV+o9FeNHe4rL+yK2md0J/fiSf1sa1ADhXqi5+oVwOM/eGw==}\n    engines: {node: '>=8'}\n\n  make-dir@4.0.0:\n    resolution: {integrity: sha512-hXdUTZYIVOt1Ex//jAQi+wTZZpUpwBj/0QsOzqegb3rGMMeJiSEu5xLHnYfBrRV4RH2+OCSOO95Is/7x1WJ4bw==}\n    engines: {node: '>=10'}\n\n  make-error@1.3.6:\n    resolution: {integrity: sha512-s8UhlNe7vPKomQhC1qFelMokr/Sc3AgNbso3n74mVPA5LTZwkB9NlXf4XPamLxJE8h0gh73rM94xvwRT2CVInw==}\n\n  map-obj@1.0.1:\n    resolution: {integrity: sha512-7N/q3lyZ+LVCp7PzuxrJr4KMbBE2hW7BT7YNia330OFxIf4d3r5zVpicP2650l7CPN6RM9zOJRl3NGpqSiw3Eg==}\n    engines: {node: '>=0.10.0'}\n\n  map-obj@4.3.0:\n    resolution: {integrity: sha512-hdN1wVrZbb29eBGiGjJbeP8JbKjq1urkHJ/LIP/NY48MZ1QVXUsQBV1G1zvYFHn1XE06cwjBsOI2K3Ulnj1YXQ==}\n    engines: {node: '>=8'}\n\n  markdown-contents@1.0.11:\n    resolution: {integrity: sha512-6o8It0JhmoN398ATp8zOWHAniTB3/tEXUVTCP00gTqwZNc465DIoHTTaspyEkaov93QLhrqirxizJ29E/i8/0Q==}\n\n  marked@13.0.3:\n    resolution: {integrity: sha512-rqRix3/TWzE9rIoFGIn8JmsVfhiuC8VIQ8IdX5TfzmeBucdY05/0UlzKaw0eVtpcN/OdVFpBk7CjKGo9iHJ/zA==}\n    engines: {node: '>= 18'}\n    hasBin: true\n\n  matcher@5.0.0:\n    resolution: {integrity: sha512-s2EMBOWtXFc8dgqvoAzKJXxNHibcdJMV0gwqKUaw9E2JBJuGUK7DrNKrA6g/i+v72TT16+6sVm5mS3thaMLQUw==}\n    engines: {node: ^12.20.0 || ^14.13.1 || >=16.0.0}\n\n  md5-hex@3.0.1:\n    resolution: {integrity: sha512-BUiRtTtV39LIJwinWBjqVsU9xhdnz7/i889V859IBFpuqGAj6LuOvHv5XLbgZ2R7ptJoJaEcxkv88/h25T7Ciw==}\n    engines: {node: '>=8'}\n\n  memoize@10.0.0:\n    resolution: {integrity: sha512-H6cBLgsi6vMWOcCpvVCdFFnl3kerEXbrYh9q+lY6VXvQSmM6CkmV08VOwT+WE2tzIEqRPFfAq3fm4v/UIW6mSA==}\n    engines: {node: '>=18'}\n\n  meow@6.1.1:\n    resolution: {integrity: sha512-3YffViIt2QWgTy6Pale5QpopX/IvU3LPL03jOTqp6pGj3VjesdO/U8CuHMKpnQr4shCNCM5fd5XFFvIIl6JBHg==}\n    engines: {node: '>=8'}\n\n  merge2@1.4.1:\n    resolution: {integrity: sha512-8q7VEgMJW4J8tcfVPy8g09NcQwZdbwFEqhe/WZkoIzjn/3TGDwtOCYtXGxA3O8tPzpczCCDgv+P2P5y00ZJOOg==}\n    engines: {node: '>= 8'}\n\n  meros@1.3.0:\n    resolution: {integrity: sha512-2BNGOimxEz5hmjUG2FwoxCt5HN7BXdaWyFqEwxPTrJzVdABtrL4TiHTcsWSFAxPQ/tOnEaQEJh3qWq71QRMY+w==}\n    engines: {node: '>=13'}\n    peerDependencies:\n      '@types/node': '>=13'\n    peerDependenciesMeta:\n      '@types/node':\n        optional: true\n\n  micro-spelling-correcter@1.1.1:\n    resolution: {integrity: sha512-lkJ3Rj/mtjlRcHk6YyCbvZhyWTOzdBvTHsxMmZSk5jxN1YyVSQ+JETAom55mdzfcyDrY/49Z7UCW760BK30crg==}\n\n  micromatch@4.0.7:\n    resolution: {integrity: sha512-LPP/3KorzCwBxfeUuZmaR6bG2kdeHSbe0P2tY3FLRU4vYrjYz5hI4QZwV0njUx3jeuKe67YukQ1LSPZBKDqO/Q==}\n    engines: {node: '>=8.6'}\n\n  micromatch@4.0.8:\n    resolution: {integrity: sha512-PXwfBhYu0hBCPw8Dn0E+WDYb7af3dSLVWKi3HGv84IdF4TyFoC0ysxFd0Goxw7nSv4T/PzEJQxsYsEiFCKo2BA==}\n    engines: {node: '>=8.6'}\n\n  mime-db@1.52.0:\n    resolution: {integrity: sha512-sPU4uV7dYlvtWJxwwxHD0PuihVNiE7TyAbQ5SWxDCB9mUYvOgroQOwYQQOKPJ8CIbE+1ETVlOoK1UC2nU3gYvg==}\n    engines: {node: '>= 0.6'}\n\n  mime-types@2.1.35:\n    resolution: {integrity: sha512-ZDY+bPm5zTTF+YpCrAU9nK0UgICYPT0QtT1NZWFv4s++TNkcgVaT0g6+4R2uI4MjQjzysHB1zxuWL50hzaeXiw==}\n    engines: {node: '>= 0.6'}\n\n  mimic-fn@2.1.0:\n    resolution: {integrity: sha512-OqbOk5oEQeAZ8WXWydlu9HJjz9WVdEIvamMCcXmuqUYjTknH/sqsWvhQ3vgwKFRR1HpjvNBKQ37nbJgYzGqGcg==}\n    engines: {node: '>=6'}\n\n  mimic-function@5.0.1:\n    resolution: {integrity: sha512-VP79XUPxV2CigYP3jWwAUFSku2aKqBH7uTAapFWCBqutsbmDo96KY5o8uh6U+/YSIn5OxJnXp73beVkpqMIGhA==}\n    engines: {node: '>=18'}\n\n  min-indent@1.0.1:\n    resolution: {integrity: sha512-I9jwMn07Sy/IwOj3zVkVik2JTvgpaykDZEigL6Rx6N9LbMywwUSMtxET+7lVoDLLd3O3IXwJwvuuns8UB/HeAg==}\n    engines: {node: '>=4'}\n\n  minimatch@3.1.2:\n    resolution: {integrity: sha512-J7p63hRiAjw1NDEww1W7i37+ByIrOWO5XQQAzZ3VOcL0PNybwpfmV/N05zFAzwQ9USyEcX6t3UO+K5aqBQOIHw==}\n\n  minimatch@4.2.3:\n    resolution: {integrity: sha512-lIUdtK5hdofgCTu3aT0sOaHsYR37viUuIc0rwnnDXImbwFRcumyLMeZaM0t0I/fgxS6s6JMfu0rLD1Wz9pv1ng==}\n    engines: {node: '>=10'}\n\n  minimatch@9.0.5:\n    resolution: {integrity: sha512-G6T0ZX48xgozx7587koeX9Ys2NYy6Gmv//P89sEte9V9whIapMNF4idKxnW2QtCcLiTWlb/wfCabAtAFWhhBow==}\n    engines: {node: '>=16 || 14 >=14.17'}\n\n  minimist-options@4.1.0:\n    resolution: {integrity: sha512-Q4r8ghd80yhO/0j1O3B2BjweX3fiHg9cdOwjJd2J76Q135c+NDxGCqdYKQ1SKBuFfgWbAUzBfvYjPUEeNgqN1A==}\n    engines: {node: '>= 6'}\n\n  minimist@1.2.8:\n    resolution: {integrity: sha512-2yyAR8qBkN3YuheJanUpWC5U3bb5osDywNB8RzDVlDwDHbocAJveqqj1u8+SVD7jkWT4yvsHCpWqqWqAxb0zCA==}\n\n  minipass@3.3.6:\n    resolution: {integrity: sha512-DxiNidxSEK+tHG6zOIklvNOwm3hvCrbUrdtzY74U6HKTJxvIDfOUL5W5P2Ghd3DTkhhKPYGqeNUIh5qcM4YBfw==}\n    engines: {node: '>=8'}\n\n  minipass@5.0.0:\n    resolution: {integrity: sha512-3FnjYuehv9k6ovOEbyOswadCDPX1piCfhV8ncmYtHOjuPwylVWsghTLo7rabjC3Rx5xD4HDx8Wm1xnMF7S5qFQ==}\n    engines: {node: '>=8'}\n\n  minipass@7.1.2:\n    resolution: {integrity: sha512-qOOzS1cBTWYF4BH8fVePDBOO9iptMnGUEZwNc/cMWnTV2nVLZ7VoNWEPHkYczZA0pdoA7dl6e7FL659nX9S2aw==}\n    engines: {node: '>=16 || 14 >=14.17'}\n\n  minizlib@2.1.2:\n    resolution: {integrity: sha512-bAxsR8BVfj60DWXHE3u30oHzfl4G7khkSuPW+qvpd7jFRHm7dLxOjUk1EHACJ/hxLY8phGJ0YhYHZo7jil7Qdg==}\n    engines: {node: '>= 8'}\n\n  mixme@0.5.10:\n    resolution: {integrity: sha512-5H76ANWinB1H3twpJ6JY8uvAtpmFvHNArpilJAjXRKXSDDLPIMoZArw5SH0q9z+lLs8IrMw7Q2VWpWimFKFT1Q==}\n    engines: {node: '>= 8.0.0'}\n\n  mkdirp@1.0.4:\n    resolution: {integrity: sha512-vVqVZQyf3WLx2Shd0qJ9xuvqgAyKPLAiqITEtqW0oIUjzo3PePDd6fW9iFz30ef7Ysp/oiWqbhszeGWW2T6Gzw==}\n    engines: {node: '>=10'}\n    hasBin: true\n\n  moment@2.30.1:\n    resolution: {integrity: sha512-uEmtNhbDOrWPFS+hdjFCBfy9f2YoyzRpwcl+DqpC6taX21FzsTLQVbMV/W7PzNSX6x/bhC1zA3c2UQ5NzH6how==}\n\n  ms@2.1.2:\n    resolution: {integrity: sha512-sGkPx+VjMtmA6MX27oA4FBFELFCZZ4S4XqeGOXCv68tT+jb3vk/RyaKWP0PTKyWtmLSM0b+adUTEvbs1PEaH2w==}\n\n  ms@2.1.3:\n    resolution: {integrity: sha512-6FlzubTLZG3J2a/NVCAleEhjzq5oxgHyaCU9yYXvcLsvoVaHJq/s5xXI6/XXP6tz7R9xAOtHnSO/tXtF3WRTlA==}\n\n  nanoid@3.3.8:\n    resolution: {integrity: sha512-WNLf5Sd8oZxOm+TzppcYk8gVOgP+l58xNy58D0nbUnOxOWRWvlcCV4kUF7ltmI6PsrLl/BgKEyS4mqsGChFN0w==}\n    engines: {node: ^10 || ^12 || ^13.7 || ^14 || >=15.0.1}\n    hasBin: true\n\n  natural-compare@1.4.0:\n    resolution: {integrity: sha512-OWND8ei3VtNC9h7V60qff3SVobHr996CTwgxubgyQYEpg290h9J0buyECNNJexkFm5sOajh5G116RYA1c8ZMSw==}\n\n  natural-orderby@5.0.0:\n    resolution: {integrity: sha512-kKHJhxwpR/Okycz4HhQKKlhWe4ASEfPgkSWNmKFHd7+ezuQlxkA5cM3+XkBPvm1gmHen3w53qsYAv+8GwRrBlg==}\n    engines: {node: '>=18'}\n\n  nise@5.1.9:\n    resolution: {integrity: sha512-qOnoujW4SV6e40dYxJOb3uvuoPHtmLzIk4TFo+j0jPJoC+5Z9xja5qH5JZobEPsa8+YYphMrOSwnrshEhG2qww==}\n\n  node-fetch@2.7.0:\n    resolution: {integrity: sha512-c4FRfUm/dbcWZ7U+1Wq0AwCyFL+3nt2bEw05wfxSz+DWpWsitgmSgYmy2dQdWyKC1694ELPqMs/YzUSNozLt8A==}\n    engines: {node: 4.x || >=6.0.0}\n    peerDependencies:\n      encoding: ^0.1.0\n    peerDependenciesMeta:\n      encoding:\n        optional: true\n\n  node-gyp-build@4.8.1:\n    resolution: {integrity: sha512-OSs33Z9yWr148JZcbZd5WiAXhh/n9z8TxQcdMhIOlpN9AhWpLfvVFO73+m77bBABQMaY9XSvIa+qk0jlI7Gcaw==}\n    hasBin: true\n\n  node-preload@0.2.1:\n    resolution: {integrity: sha512-RM5oyBy45cLEoHqCeh+MNuFAxO0vTFBLskvQbOKnEE7YTTSN4tbN8QWDIPQ6L+WvKsB/qLEGpYe2ZZ9d4W9OIQ==}\n    engines: {node: '>=8'}\n\n  node-releases@2.0.14:\n    resolution: {integrity: sha512-y10wOWt8yZpqXmOgRo77WaHEmhYQYGNA6y421PKsKYWEK8aW+cqAphborZDhqfyKrbZEN92CN1X2KbafY2s7Yw==}\n\n  node-releases@2.0.18:\n    resolution: {integrity: sha512-d9VeXT4SJ7ZeOqGX6R5EM022wpL+eWPooLI+5UpWn2jCT1aosUQEhQP214x33Wkwx3JQMvIm+tIoVOdodFS40g==}\n\n  nofilter@3.1.0:\n    resolution: {integrity: sha512-l2NNj07e9afPnhAhvgVrCD/oy2Ai1yfLpuo3EpiO1jFTsB4sFz6oIfAfSZyQzVpkZQ9xS8ZS5g1jCBgq4Hwo0g==}\n    engines: {node: '>=12.19'}\n\n  nopt@5.0.0:\n    resolution: {integrity: sha512-Tbj67rffqceeLpcRXrT7vKAN8CwfPeIBgM7E6iBkmKLV7bEMwpGgYLGv0jACUsECaa/vuxP0IjEont6umdMgtQ==}\n    engines: {node: '>=6'}\n    hasBin: true\n\n  normalize-package-data@2.5.0:\n    resolution: {integrity: sha512-/5CMN3T0R4XTj4DcGaexo+roZSdSFW/0AOOTROrjxzCG1wrWXEsGbRKevjlIL+ZDE4sZlJr5ED4YW0yqmkK+eA==}\n\n  normalize-path@2.1.1:\n    resolution: {integrity: sha512-3pKJwH184Xo/lnH6oyP1q2pMd7HcypqqmRs91/6/i2CGtWwIKGCkOOMTm/zXbgTEWHw1uNpNi/igc3ePOYHb6w==}\n    engines: {node: '>=0.10.0'}\n\n  normalize-url@8.0.1:\n    resolution: {integrity: sha512-IO9QvjUMWxPQQhs60oOu10CRkWCiZzSUkzbXGGV9pviYl1fXYcvkzQ5jV9z8Y6un8ARoVRl4EtC6v6jNqbaJ/w==}\n    engines: {node: '>=14.16'}\n\n  npmlog@5.0.1:\n    resolution: {integrity: sha512-AqZtDUWOMKs1G/8lwylVjrdYgqA4d9nu8hc+0gzRxlDb1I10+FHBGMXs6aiQHFdCUUlqH99MUMuLfzWDNDtfxw==}\n    deprecated: This package is no longer supported.\n\n  nwmatcher@1.4.4:\n    resolution: {integrity: sha512-3iuY4N5dhgMpCUrOVnuAdGrgxVqV2cJpM+XNccjR2DKOB1RUP0aA+wGXEiNziG/UKboFyGBIoKOaNlJxx8bciQ==}\n\n  nyc@15.1.0:\n    resolution: {integrity: sha512-jMW04n9SxKdKi1ZMGhvUTHBN0EICCRkHemEoE5jm6mTYcqcdas0ATzgUgejlQUHMvpnOZqGB5Xxsv9KxJW1j8A==}\n    engines: {node: '>=8.9'}\n    hasBin: true\n\n  oauth-sign@0.9.0:\n    resolution: {integrity: sha512-fexhUFFPTGV8ybAtSIGbV6gOkSv8UtRbDBnAyLQw4QPKkgNlsH2ByPGtMUqdWkos6YCRmAqViwgZrJc/mRDzZQ==}\n\n  obj-props@1.4.0:\n    resolution: {integrity: sha512-p7p/7ltzPDiBs6DqxOrIbtRdwxxVRBj5ROukeNb9RgA+fawhrz5n2hpNz8DDmYR//tviJSj7nUnlppGmONkjiQ==}\n    engines: {node: '>=0.10.0'}\n\n  object-assign@4.1.1:\n    resolution: {integrity: sha512-rJgTQnkUnH1sFw8yT6VSU3zD3sWmu6sZhIseY8VX+GRu3P6F7Fu+JNDoXfklElbLJSnc3FUQHVe4cU5hj+BcUg==}\n    engines: {node: '>=0.10.0'}\n\n  object-inspect@1.13.1:\n    resolution: {integrity: sha512-5qoj1RUiKOMsCCNLV1CBiPYE10sziTsnmNxkAI/rZhiD63CF7IqdFGC/XzjWjpSgLf0LxXX3bDFIh0E18f6UhQ==}\n\n  object-inspect@1.13.3:\n    resolution: {integrity: sha512-kDCGIbxkDSXE3euJZZXzc6to7fCrKHNI/hSRQnRuQ+BWjFNzZwiFF8fj/6o2t2G9/jTj8PSIYTfCLelLZEeRpA==}\n    engines: {node: '>= 0.4'}\n\n  object-keys@1.1.1:\n    resolution: {integrity: sha512-NuAESUOUMrlIXOfHKzD6bpPu3tYt3xvjNdRIQ+FeT0lNb4K8WR70CaDxhuNguS2XG+GjkyMwOzsN5ZktImfhLA==}\n    engines: {node: '>= 0.4'}\n\n  object.assign@4.1.5:\n    resolution: {integrity: sha512-byy+U7gp+FVwmyzKPYhW2h5l3crpmGsxl7X2s8y43IgxvG4g3QZ6CffDtsNQy1WsmZpQbO+ybo0AlW7TY6DcBQ==}\n    engines: {node: '>= 0.4'}\n\n  object.entries@1.1.8:\n    resolution: {integrity: sha512-cmopxi8VwRIAw/fkijJohSfpef5PdN0pMQJN6VC/ZKvn0LIknWD8KtgY6KlQdEc4tIjcQ3HxSMmnvtzIscdaYQ==}\n    engines: {node: '>= 0.4'}\n\n  object.fromentries@2.0.8:\n    resolution: {integrity: sha512-k6E21FzySsSK5a21KRADBd/NGneRegFO5pLHfdQLpRDETUNJueLXs3WCzyQ3tFRDYgbq3KHGXfTbi2bs8WQ6rQ==}\n    engines: {node: '>= 0.4'}\n\n  object.values@1.2.0:\n    resolution: {integrity: sha512-yBYjY9QX2hnRmZHAjG/f13MzmBzxzYgQhFrke06TTyKY5zSTEqkOeukBzIdVA3j3ulu8Qa3MbVFShV7T2RmGtQ==}\n    engines: {node: '>= 0.4'}\n\n  obuf@1.1.2:\n    resolution: {integrity: sha512-PX1wu0AmAdPqOL1mWhqmlOd8kOIZQwGZw6rh7uby9fTc5lhaOWFLX3I6R1hrF9k3zUY40e6igsLGkDXK92LJNg==}\n\n  once@1.4.0:\n    resolution: {integrity: sha512-lNaJgI+2Q5URQBkccEKHTQOPaXdUxnZZElQTZY0MFUAuaEqe1E+Nyvgdz/aIyNi6Z9MzO5dv1H8n58/GELp3+w==}\n\n  onetime@5.1.2:\n    resolution: {integrity: sha512-kbpaSSGJTWdAY5KPVeMOKXSrPtr8C8C7wodJbcsd51jRnmD+GZu8Y0VoU6Dm5Z4vWr0Ig/1NKuWRKf7j5aaYSg==}\n    engines: {node: '>=6'}\n\n  optionator@0.8.3:\n    resolution: {integrity: sha512-+IW9pACdk3XWmmTXG8m3upGUJst5XRGzxMRjXzAuJ1XnIFNvfhjjIuYkDvysnPQ7qzqVzLt78BCruntqRhWQbA==}\n    engines: {node: '>= 0.8.0'}\n\n  optionator@0.9.4:\n    resolution: {integrity: sha512-6IpQ7mKUxRcZNLIObR0hz7lxsapSSIYNZJwXPGeF0mTVqGKFIXj1DQcMoT22S3ROcLyY/rz0PWaWZ9ayWmad9g==}\n    engines: {node: '>= 0.8.0'}\n\n  os-tmpdir@1.0.2:\n    resolution: {integrity: sha512-D2FR03Vir7FIu45XBY20mTb+/ZSWB00sjU9jdQXt83gDrI4Ztz5Fs7/yy74g2N5SVQY4xY1qDr4rNddwYRVX0g==}\n    engines: {node: '>=0.10.0'}\n\n  outdent@0.5.0:\n    resolution: {integrity: sha512-/jHxFIzoMXdqPzTaCpFzAAWhpkSjZPF4Vsn6jAfNpmbH/ymsmd7Qc6VE9BGn0L6YMj6uwpQLxCECpus4ukKS9Q==}\n\n  p-filter@2.1.0:\n    resolution: {integrity: sha512-ZBxxZ5sL2HghephhpGAQdoskxplTwr7ICaehZwLIlfL6acuVgZPm8yBNuRAFBGEqtD/hmUeq9eqLg2ys9Xr/yw==}\n    engines: {node: '>=8'}\n\n  p-limit@2.3.0:\n    resolution: {integrity: sha512-//88mFWSJx8lxCzwdAABTJL2MyWB12+eIY7MDL2SqLmAkeKU9qxRvWuSyTjm3FUmpBEMuFfckAIqEaVGUDxb6w==}\n    engines: {node: '>=6'}\n\n  p-limit@3.1.0:\n    resolution: {integrity: sha512-TYOanM3wGwNGsZN2cVTYPArw454xnXj5qmWF1bEoAc4+cU/ol7GVh7odevjp1FNHduHc3KZMcFduxU5Xc6uJRQ==}\n    engines: {node: '>=10'}\n\n  p-locate@4.1.0:\n    resolution: {integrity: sha512-R79ZZ/0wAxKGu3oYMlz8jy/kbhsNrS7SKZ7PxEHBgJ5+F2mtFW2fK2cOtBh1cHYkQsbzFV7I+EoRKe6Yt0oK7A==}\n    engines: {node: '>=8'}\n\n  p-locate@5.0.0:\n    resolution: {integrity: sha512-LaNjtRWUBY++zB5nE/NwcaoMylSPk+S+ZHNB1TzdbMJMny6dynpAGt7X/tl/QYq3TIeE6nxHppbo2LGymrG5Pw==}\n    engines: {node: '>=10'}\n\n  p-map@2.1.0:\n    resolution: {integrity: sha512-y3b8Kpd8OAN444hxfBbFfj1FY/RjtTd8tzYwhUqNYXx0fXx2iX4maP4Qr6qhIKbQXI02wTLAda4fYUbDagTUFw==}\n    engines: {node: '>=6'}\n\n  p-map@3.0.0:\n    resolution: {integrity: sha512-d3qXVTF/s+W+CdJ5A29wywV2n8CQQYahlgz2bFiA+4eVNJbHJodPZ+/gXwPGh0bOqA+j8S+6+ckmvLGPk1QpxQ==}\n    engines: {node: '>=8'}\n\n  p-map@4.0.0:\n    resolution: {integrity: sha512-/bjOqmgETBYB5BoEeGVea8dmvHb2m9GLy1E9W43yeyfP6QQCZGFNa+XRceJEuDB6zqr+gKpIAmlLebMpykw/MQ==}\n    engines: {node: '>=10'}\n\n  p-map@7.0.2:\n    resolution: {integrity: sha512-z4cYYMMdKHzw4O5UkWJImbZynVIo0lSGTXc7bzB1e/rrDqkgGUNysK/o4bTr+0+xKvvLoTyGqYC4Fgljy9qe1Q==}\n    engines: {node: '>=18'}\n\n  p-try@2.2.0:\n    resolution: {integrity: sha512-R4nPAVTAU0B9D35/Gk3uJf/7XYbQcyohSKdvAxIRSNghFl4e71hVoGnBNQz9cWaXxO2I10KTC+3jMdvvoKw6dQ==}\n    engines: {node: '>=6'}\n\n  package-config@5.0.0:\n    resolution: {integrity: sha512-GYTTew2slBcYdvRHqjhwaaydVMvn/qrGC323+nKclYioNSLTDUM/lGgtGTgyHVtYcozb+XkE8CNhwcraOmZ9Mg==}\n    engines: {node: '>=18'}\n\n  package-hash@4.0.0:\n    resolution: {integrity: sha512-whdkPIooSu/bASggZ96BWVvZTRMOFxnyUG5PnTSGKoJE2gd5mbVNmR2Nj20QFzxYYgAXpoqC+AiXzl+UMRh7zQ==}\n    engines: {node: '>=8'}\n\n  package-json-from-dist@1.0.1:\n    resolution: {integrity: sha512-UEZIS3/by4OC8vL3P2dTXRETpebLI2NiI5vIrjaD/5UtrkFX/tNbwjTSRAGC/+7CAo2pIcBaRgWmcBBHcsaCIw==}\n\n  parent-module@1.0.1:\n    resolution: {integrity: sha512-GQ2EWRpQV8/o+Aw8YqtfZZPfNRWZYkbidE9k5rpl/hC3vtHHBfGm2Ifi6qWV+coDGkrUKZAxE3Lot5kcsRlh+g==}\n    engines: {node: '>=6'}\n\n  parent-module@2.0.0:\n    resolution: {integrity: sha512-uo0Z9JJeWzv8BG+tRcapBKNJ0dro9cLyczGzulS6EfeyAdeC9sbojtW6XwvYxJkEne9En+J2XEl4zyglVeIwFg==}\n    engines: {node: '>=8'}\n\n  parse-imports@2.2.1:\n    resolution: {integrity: sha512-OL/zLggRp8mFhKL0rNORUTR4yBYujK/uU+xZL+/0Rgm2QE4nLO9v8PzEweSJEbMGKmDRjJE4R3IMJlL2di4JeQ==}\n    engines: {node: '>= 18'}\n\n  parse-json@5.2.0:\n    resolution: {integrity: sha512-ayCKvm/phCGxOkYRSCM82iDwct8/EonSEgCSxWxD7ve6jHggsFl4fZVQBPRNgQoKiuV/odhFrGzQXZwbifC8Rg==}\n    engines: {node: '>=8'}\n\n  parse-ms@2.1.0:\n    resolution: {integrity: sha512-kHt7kzLoS9VBZfUsiKjv43mr91ea+U05EyKkEtqp7vNbHxmaVuEqN7XxeEVnGrMtYOAxGrDElSi96K7EgO1zCA==}\n    engines: {node: '>=6'}\n\n  parse-ms@4.0.0:\n    resolution: {integrity: sha512-TXfryirbmq34y8QBwgqCVLi+8oA3oWx2eAnSn62ITyEhEYaWRlVZ2DvMM9eZbMs/RfxPu/PK/aBLyGj4IrqMHw==}\n    engines: {node: '>=18'}\n\n  parse5@1.5.1:\n    resolution: {integrity: sha512-w2jx/0tJzvgKwZa58sj2vAYq/S/K1QJfIB3cWYea/Iu1scFPDQQ3IQiVZTHWtRBwAjv2Yd7S/xeZf3XqLDb3bA==}\n\n  path-exists@4.0.0:\n    resolution: {integrity: sha512-ak9Qy5Q7jYb2Wwcey5Fpvg2KoAc/ZIhLSLOSBmRmygPsGwkVVt0fZa0qrtMz+m6tJTAHfZQ8FnmB4MG4LWy7/w==}\n    engines: {node: '>=8'}\n\n  path-is-absolute@1.0.1:\n    resolution: {integrity: sha512-AVbw3UJ2e9bq64vSaS9Am0fje1Pa8pbGqTTsmXfaIiMpnr5DlDhfJOuLj9Sf95ZPVDAUerDfEk88MPmPe7UCQg==}\n    engines: {node: '>=0.10.0'}\n\n  path-key@3.1.1:\n    resolution: {integrity: sha512-ojmeN0qd+y0jszEtoY48r0Peq5dwMEkIlCOu6Q5f41lfkswXuKtYrhgoTpLnyIcHm24Uhqx+5Tqm2InSwLhE6Q==}\n    engines: {node: '>=8'}\n\n  path-parse@1.0.7:\n    resolution: {integrity: sha512-LDJzPVEEEPR+y48z93A0Ed0yXb8pAByGWo/k5YYdYgpY2/2EsOsksJrq7lOHxryrVOn1ejG6oAp8ahvOIQD8sw==}\n\n  path-scurry@1.11.1:\n    resolution: {integrity: sha512-Xa4Nw17FS9ApQFJ9umLiJS4orGjm7ZzwUrwamcGQuHSzDyth9boKDaycYdDcZDuqYATXw4HFXgaqWTctW/v1HA==}\n    engines: {node: '>=16 || 14 >=14.18'}\n\n  path-to-regexp@6.2.2:\n    resolution: {integrity: sha512-GQX3SSMokngb36+whdpRXE+3f9V8UzyAorlYvOGx87ufGHehNTn5lCxrKtLyZ4Yl/wEKnNnr98ZzOwwDZV5ogw==}\n\n  path-type@4.0.0:\n    resolution: {integrity: sha512-gDKb8aZMDeD/tZWs9P6+q0J9Mwkdl6xMV8TjnGP3qJVJ06bdMgkbBlLU8IdfOsIsFz2BW1rNVT3XuNEl8zPAvw==}\n    engines: {node: '>=8'}\n\n  path-type@5.0.0:\n    resolution: {integrity: sha512-5HviZNaZcfqP95rwpv+1HDgUamezbqdSYTyzjTvwtJSnIH+3vnbmWsItli8OFEndS984VT55M3jduxZbX351gg==}\n    engines: {node: '>=12'}\n\n  pathe@1.1.2:\n    resolution: {integrity: sha512-whLdWMYL2TwI08hn8/ZqAbrVemu0LNaNNJZX73O6qaIdCTfXutsLhMkjdENX0qhsQ9uIimo4/aQOmXkoon2nDQ==}\n\n  pathval@2.0.0:\n    resolution: {integrity: sha512-vE7JKRyES09KiunauX7nd2Q9/L7lhok4smP9RZTDeD4MVs72Dp2qNFVz39Nz5a0FVEW0BJR6C0DYrq6unoziZA==}\n    engines: {node: '>= 14.16'}\n\n  performance-now@2.1.0:\n    resolution: {integrity: sha512-7EAHlyLHI56VEIdK57uwHdHKIaAGbnXPiw0yWbarQZOKaKpvUIgW0jWRVLiatnM+XXlSwsanIBH/hzGMJulMow==}\n\n  pg-cloudflare@1.1.1:\n    resolution: {integrity: sha512-xWPagP/4B6BgFO+EKz3JONXv3YDgvkbVrGw2mTo3D6tVDQRh1e7cqVGvyR3BE+eQgAvx1XhW/iEASj4/jCWl3Q==}\n\n  pg-connection-string@2.7.0:\n    resolution: {integrity: sha512-PI2W9mv53rXJQEOb8xNR8lH7Hr+EKa6oJa38zsK0S/ky2er16ios1wLKhZyxzD7jUReiWokc9WK5nxSnC7W1TA==}\n\n  pg-cursor@2.12.1:\n    resolution: {integrity: sha512-V13tEaA9Oq1w+V6Q3UBIB/blxJrwbbr35/dY54r/86soBJ7xkP236bXaORUTVXUPt9B6Ql2BQu+uwQiuMfRVgg==}\n    peerDependencies:\n      pg: ^8\n\n  pg-int8@1.0.1:\n    resolution: {integrity: sha512-WCtabS6t3c8SkpDBUlb1kjOs7l66xsGdKpIPZsg4wR+B3+u9UAum2odSsF9tnvxg80h4ZxLWMy4pRjOsFIqQpw==}\n    engines: {node: '>=4.0.0'}\n\n  pg-minify@1.6.5:\n    resolution: {integrity: sha512-u0UE8veaCnMfJmoklqneeBBopOAPG3/6DHqGVHYAhz8DkJXh9dnjPlz25fRxn4e+6XVzdOp7kau63Rp52fZ3WQ==}\n    engines: {node: '>=14.0.0'}\n\n  pg-numeric@1.0.2:\n    resolution: {integrity: sha512-BM/Thnrw5jm2kKLE5uJkXqqExRUY/toLHda65XgFTBTFYZyopbKjBe29Ii3RbkvlsMoFwD+tHeGaCjjv0gHlyw==}\n    engines: {node: '>=4'}\n\n  pg-pool@3.7.0:\n    resolution: {integrity: sha512-ZOBQForurqh4zZWjrgSwwAtzJ7QiRX0ovFkZr2klsen3Nm0aoh33Ls0fzfv3imeH/nw/O27cjdz5kzYJfeGp/g==}\n    peerDependencies:\n      pg: '>=8.0'\n\n  pg-promise@11.10.2:\n    resolution: {integrity: sha512-wK4yjxZdfxBmAMcs40q6IsC1SOzdLilc1yNvJqlbOjtm2syayqLDCt1JQ9lhS6yNSgVlGOQZT88yb/SADJmEBw==}\n    engines: {node: '>=14.0'}\n    peerDependencies:\n      pg-query-stream: 4.7.1\n\n  pg-protocol@1.7.0:\n    resolution: {integrity: sha512-hTK/mE36i8fDDhgDFjy6xNOG+LCorxLG3WO17tku+ij6sVHXh1jQUJ8hYAnRhNla4QVD2H8er/FOjc/+EgC6yQ==}\n\n  pg-query-stream@4.7.1:\n    resolution: {integrity: sha512-UMgsgn/pOIYsIifRySp59vwlpTpLADMK9HWJtq5ff0Z3MxBnPMGnCQeaQl5VuL+7ov4F96mSzIRIcz+Duo6OiQ==}\n    peerDependencies:\n      pg: ^8\n\n  pg-types@2.2.0:\n    resolution: {integrity: sha512-qTAAlrEsl8s4OiEQY69wDvcMIdQN6wdz5ojQiOy6YRMuynxenON0O5oCpJI6lshc6scgAY8qvJ2On/p+CXY0GA==}\n    engines: {node: '>=4'}\n\n  pg-types@4.0.2:\n    resolution: {integrity: sha512-cRL3JpS3lKMGsKaWndugWQoLOCoP+Cic8oseVcbr0qhPzYD5DWXK+RZ9LY9wxRf7RQia4SCwQlXk0q6FCPrVng==}\n    engines: {node: '>=10'}\n\n  pg@8.13.1:\n    resolution: {integrity: sha512-OUir1A0rPNZlX//c7ksiu7crsGZTKSOXJPgtNiHGIlC9H0lO+NC6ZDYksSgBYY/thSWhnSRBv8w1lieNNGATNQ==}\n    engines: {node: '>= 8.0.0'}\n    peerDependencies:\n      pg-native: '>=3.0.1'\n    peerDependenciesMeta:\n      pg-native:\n        optional: true\n\n  pgpass@1.0.5:\n    resolution: {integrity: sha512-FdW9r/jQZhSeohs1Z3sI1yxFQNFvMcnmfuj4WBMUTxOrAyLMaTcE1aAMBiTlbMNaXvBCQuVi0R7hd8udDSP7ug==}\n\n  picocolors@1.0.1:\n    resolution: {integrity: sha512-anP1Z8qwhkbmu7MFP5iTt+wQKXgwzf7zTyGlcdzabySa9vd0Xt392U0rVmz9poOaBj0uHJKyyo9/upk0HrEQew==}\n\n  picocolors@1.1.1:\n    resolution: {integrity: sha512-xceH2snhtb5M9liqDsmEw56le376mTZkEX/jEb/RxNFyegNul7eNslCXP9FDj/Lcu0X8KEyMceP2ntpaHrDEVA==}\n\n  picomatch@2.3.1:\n    resolution: {integrity: sha512-JU3teHTNjmE2VCGFzuY8EXzCDVwEqB2a8fsIvwaStHhAWJEeVd1o1QD80CU6+ZdEXXSLbSsuLwJjkCBWqRQUVA==}\n    engines: {node: '>=8.6'}\n\n  picomatch@3.0.1:\n    resolution: {integrity: sha512-I3EurrIQMlRc9IaAZnqRR044Phh2DXY+55o7uJ0V+hYZAcQYSuFWsc9q5PvyDHUSCe1Qxn/iBz+78s86zWnGag==}\n    engines: {node: '>=10'}\n\n  picomatch@4.0.2:\n    resolution: {integrity: sha512-M7BAV6Rlcy5u+m6oPhAPFgJTzAioX/6B0DxyvDlo9l8+T3nLKbrczg2WLUyzd45L8RqfUMyGPzekbMvX2Ldkwg==}\n    engines: {node: '>=12'}\n\n  pify@4.0.1:\n    resolution: {integrity: sha512-uB80kBFb/tfd68bVleG9T5GGsGPjJrLAUpR5PZIrhBnIaRTQRjqdJSsIKkOP6OAIFbj7GOrcudc5pNjZ+geV2g==}\n    engines: {node: '>=6'}\n\n  pkg-dir@4.2.0:\n    resolution: {integrity: sha512-HRDzbaKjC+AOWVXxAU/x54COGeIv9eb+6CkDSQoNTt4XyWoIJvuPsXizxu/Fr23EiekbtZwmh1IcIG/l/a10GQ==}\n    engines: {node: '>=8'}\n\n  pkg-dir@5.0.0:\n    resolution: {integrity: sha512-NPE8TDbzl/3YQYY7CSS228s3g2ollTFnc+Qi3tqmqJp9Vg2ovUpixcJEo2HJScN2Ez+kEaal6y70c0ehqJBJeA==}\n    engines: {node: '>=10'}\n\n  platform@1.3.6:\n    resolution: {integrity: sha512-fnWVljUchTro6RiCFvCXBbNhJc2NijN7oIQxbwsyL0buWJPG85v81ehlHI9fXrJsMNgTofEoWIQeClKpgxFLrg==}\n\n  plur@5.1.0:\n    resolution: {integrity: sha512-VP/72JeXqak2KiOzjgKtQen5y3IZHn+9GOuLDafPv0eXa47xq0At93XahYBs26MsifCQ4enGKwbjBTKgb9QJXg==}\n    engines: {node: ^12.20.0 || ^14.13.1 || >=16.0.0}\n\n  pluralize@8.0.0:\n    resolution: {integrity: sha512-Nc3IT5yHzflTfbjgqWcCPpo7DaKy4FnpB0l/zCAW0Tc7jxAiuqSxHasntB3D7887LSrA93kDJ9IXovxJYxyLCA==}\n    engines: {node: '>=4'}\n\n  possible-typed-array-names@1.0.0:\n    resolution: {integrity: sha512-d7Uw+eZoloe0EHDIYoe+bQ5WXnGMOpmiZFTuMWCwpjzzkL2nTjcKiAk4hh8TjnGye2TwWOk3UXucZ+3rbmBa8Q==}\n    engines: {node: '>= 0.4'}\n\n  postcss@8.4.49:\n    resolution: {integrity: sha512-OCVPnIObs4N29kxTjzLfUryOkvZEq+pf8jTF0lg8E7uETuWHA+v7j3c/xJmiqpX450191LlmZfUKkXxkTry7nA==}\n    engines: {node: ^10 || ^12 || >=14}\n\n  postgres-array@2.0.0:\n    resolution: {integrity: sha512-VpZrUqU5A69eQyW2c5CA1jtLecCsN2U/bD6VilrFDWq5+5UIEVO7nazS3TEcHf1zuPYO/sqGvUvW62g86RXZuA==}\n    engines: {node: '>=4'}\n\n  postgres-array@3.0.2:\n    resolution: {integrity: sha512-6faShkdFugNQCLwucjPcY5ARoW1SlbnrZjmGl0IrrqewpvxvhSLHimCVzqeuULCbG0fQv7Dtk1yDbG3xv7Veog==}\n    engines: {node: '>=12'}\n\n  postgres-bytea@1.0.0:\n    resolution: {integrity: sha512-xy3pmLuQqRBZBXDULy7KbaitYqLcmxigw14Q5sj8QBVLqEwXfeybIKVWiqAXTlcvdvb0+xkOtDbfQMOf4lST1w==}\n    engines: {node: '>=0.10.0'}\n\n  postgres-bytea@3.0.0:\n    resolution: {integrity: sha512-CNd4jim9RFPkObHSjVHlVrxoVQXz7quwNFpz7RY1okNNme49+sVyiTvTRobiLV548Hx/hb1BG+iE7h9493WzFw==}\n    engines: {node: '>= 6'}\n\n  postgres-date@1.0.7:\n    resolution: {integrity: sha512-suDmjLVQg78nMK2UZ454hAG+OAW+HQPZ6n++TNDUX+L0+uUlLywnoxJKDou51Zm+zTCjrCl0Nq6J9C5hP9vK/Q==}\n    engines: {node: '>=0.10.0'}\n\n  postgres-date@2.1.0:\n    resolution: {integrity: sha512-K7Juri8gtgXVcDfZttFKVmhglp7epKb1K4pgrkLxehjqkrgPhfG6OO8LHLkfaqkbpjNRnra018XwAr1yQFWGcA==}\n    engines: {node: '>=12'}\n\n  postgres-interval@1.2.0:\n    resolution: {integrity: sha512-9ZhXKM/rw350N1ovuWHbGxnGh/SNJ4cnxHiM0rxE4VN41wsg8P8zWn9hv/buK00RP4WvlOyr/RBDiptyxVbkZQ==}\n    engines: {node: '>=0.10.0'}\n\n  postgres-interval@3.0.0:\n    resolution: {integrity: sha512-BSNDnbyZCXSxgA+1f5UU2GmwhoI0aU5yMxRGO8CdFEcY2BQF9xm/7MqKnYoM1nJDk8nONNWDk9WeSmePFhQdlw==}\n    engines: {node: '>=12'}\n\n  postgres-interval@4.0.2:\n    resolution: {integrity: sha512-EMsphSQ1YkQqKZL2cuG0zHkmjCCzQqQ71l2GXITqRwjhRleCdv00bDk/ktaSi0LnlaPzAc3535KTrjXsTdtx7A==}\n    engines: {node: '>=12'}\n\n  postgres-range@1.1.4:\n    resolution: {integrity: sha512-i/hbxIE9803Alj/6ytL7UHQxRvZkI9O4Sy+J3HGc4F4oo/2eQAjTSNJ0bfxyse3bH0nuVesCk+3IRLaMtG3H6w==}\n\n  postgres@3.4.5:\n    resolution: {integrity: sha512-cDWgoah1Gez9rN3H4165peY9qfpEo+SA61oQv65O3cRUE1pOEoJWwddwcqKE8XZYjbblOJlYDlLV4h67HrEVDg==}\n    engines: {node: '>=12'}\n\n  preferred-pm@3.1.3:\n    resolution: {integrity: sha512-MkXsENfftWSRpzCzImcp4FRsCc3y1opwB73CfCNWyzMqArju2CrlMHlqB7VexKiPEOjGMbttv1r9fSCn5S610w==}\n    engines: {node: '>=10'}\n\n  prelude-ls@1.1.2:\n    resolution: {integrity: sha512-ESF23V4SKG6lVSGZgYNpbsiaAkdab6ZgOxe52p7+Kid3W3u3bxR4Vfd/o21dmN7jSt0IwgZ4v5MUd26FEtXE9w==}\n    engines: {node: '>= 0.8.0'}\n\n  prelude-ls@1.2.1:\n    resolution: {integrity: sha512-vkcDPrRZo1QZLbn5RLGPpg/WmIQ65qoWWhcGKf/b5eplkkarX0m9z8ppCat4mlOqUsWpyNuYgO3VRyrYHSzX5g==}\n    engines: {node: '>= 0.8.0'}\n\n  prettier-linter-helpers@1.0.0:\n    resolution: {integrity: sha512-GbK2cP9nraSSUF9N2XwUwqfzlAFlMNYYl+ShE/V+H8a9uNl/oUqB1w2EL54Jh0OlyRSd8RfWYJ3coVS4TROP2w==}\n    engines: {node: '>=6.0.0'}\n\n  prettier@2.8.8:\n    resolution: {integrity: sha512-tdN8qQGvNjw4CHbY+XXk0JgCXn9QiF21a55rBe5LJAU+kDyC4WQn4+awm2Xfk2lQMk5fKup9XgzTZtGkjBdP9Q==}\n    engines: {node: '>=10.13.0'}\n    hasBin: true\n\n  prettier@3.4.2:\n    resolution: {integrity: sha512-e9MewbtFo+Fevyuxn/4rrcDAaq0IYxPGLvObpQjiZBMAzB9IGmzlnG9RZy3FFas+eBMu2vA0CszMeduow5dIuQ==}\n    engines: {node: '>=14'}\n    hasBin: true\n\n  pretty-ms@7.0.1:\n    resolution: {integrity: sha512-973driJZvxiGOQ5ONsFhOF/DtzPMOMtgC11kCpUrPGMTgqp2q/1gwzCquocrN33is0VZ5GFHXZYMM9l6h67v2Q==}\n    engines: {node: '>=10'}\n\n  pretty-ms@9.0.0:\n    resolution: {integrity: sha512-E9e9HJ9R9NasGOgPaPE8VMeiPKAyWR5jcFpNnwIejslIhWqdqOrb2wShBsncMPUb+BcCd2OPYfh7p2W6oemTng==}\n    engines: {node: '>=18'}\n\n  pretty-ms@9.1.0:\n    resolution: {integrity: sha512-o1piW0n3tgKIKCwk2vpM/vOV13zjJzvP37Ioze54YlTHE06m4tjEbzg9WsKkvTuyYln2DHjo5pY4qrZGI0otpw==}\n    engines: {node: '>=18'}\n\n  process-on-spawn@1.0.0:\n    resolution: {integrity: sha512-1WsPDsUSMmZH5LeMLegqkPDrsGgsWwk1Exipy2hvB0o/F0ASzbpIctSCcZIK1ykJvtTJULEH+20WOFjMvGnCTg==}\n    engines: {node: '>=8'}\n\n  prop-types@15.8.1:\n    resolution: {integrity: sha512-oj87CgZICdulUohogVAR7AjlC0327U4el4L6eAvOqCeudMDVU0NThNaV+b9Df4dXgSP1gXMTnPdhfe/2qDH5cg==}\n\n  proto-props@2.0.0:\n    resolution: {integrity: sha512-2yma2tog9VaRZY2mn3Wq51uiSW4NcPYT1cQdBagwyrznrilKSZwIZ0UG3ZPL/mx+axEns0hE35T5ufOYZXEnBQ==}\n    engines: {node: '>=4'}\n\n  pseudomap@1.0.2:\n    resolution: {integrity: sha512-b/YwNhb8lk1Zz2+bXXpS/LK9OisiZZ1SNsSLxN1x2OXVEhW2Ckr/7mWE5vrC1ZTiJlD9g19jWszTmJsB+oEpFQ==}\n\n  psl@1.15.0:\n    resolution: {integrity: sha512-JZd3gMVBAVQkSs6HdNZo9Sdo0LNcQeMNP3CozBJb3JYC/QUYZTnKxP+f8oWRX4rHP5EurWxqAHTSwUCjlNKa1w==}\n\n  punycode@1.4.1:\n    resolution: {integrity: sha512-jmYNElW7yvO7TV33CjSmvSiE2yco3bV2czu/OzDKdMNVZQWfxCblURLhf+47syQRBntjfLdd/H0egrzIG+oaFQ==}\n\n  punycode@2.3.1:\n    resolution: {integrity: sha512-vYt7UD1U9Wg6138shLtLOvdAu+8DsC/ilFtEVHcH+wydcSpNE20AfSOduf6MkRFahL5FY7X1oU7nKVZFtfq8Fg==}\n    engines: {node: '>=6'}\n\n  pvtsutils@1.3.5:\n    resolution: {integrity: sha512-ARvb14YB9Nm2Xi6nBq1ZX6dAM0FsJnuk+31aUp4TrcZEdKUlSqOqsxJHUPJDNE3qiIp+iUPEIeR6Je/tgV7zsA==}\n\n  pvutils@1.1.3:\n    resolution: {integrity: sha512-pMpnA0qRdFp32b1sJl1wOJNxZLQ2cbQx+k6tjNtZ8CpvVhNqEPRgivZ2WOUev2YMajecdH7ctUPDvEe87nariQ==}\n    engines: {node: '>=6.0.0'}\n\n  qs@6.5.3:\n    resolution: {integrity: sha512-qxXIEh4pCGfHICj1mAJQ2/2XVZkjCDTcEgfoSQxc/fYivUZxTkk7L3bDBJSoNrEzXI17oUO5Dp07ktqE5KzczA==}\n    engines: {node: '>=0.6'}\n\n  queue-microtask@1.2.3:\n    resolution: {integrity: sha512-NuaNSa6flKT5JaSYQzJok04JzTL1CA6aGhv5rfLW3PgqA+M2ChpZQnAC8h8i4ZFkBS8X5RqkDBHA7r4hej3K9A==}\n\n  quick-lru@4.0.1:\n    resolution: {integrity: sha512-ARhCpm70fzdcvNQfPoy49IaanKkTlRWF2JMzqhcJbhSFRZv7nPTvZJdcY7301IPmvW+/p0RgIWnQDLJxifsQ7g==}\n    engines: {node: '>=8'}\n\n  rambda@7.5.0:\n    resolution: {integrity: sha512-y/M9weqWAH4iopRd7EHDEQQvpFPHj1AA3oHozE9tfITHUtTR7Z9PSlIRRG2l1GuW7sefC1cXFfIcF+cgnShdBA==}\n\n  ramda@0.26.1:\n    resolution: {integrity: sha512-hLWjpy7EnsDBb0p+Z3B7rPi3GDeRG5ZtiI33kJhTt+ORCd38AbAIjB/9zRIUoeTbE/AVX5ZkU7m6bznsvrf8eQ==}\n\n  ramda@0.30.1:\n    resolution: {integrity: sha512-tEF5I22zJnuclswcZMc8bDIrwRHRzf+NqVEmqg50ShAZMP7MWeR/RGDthfM/p+BlqvF2fXAzpn8i+SJcYD3alw==}\n\n  react-is@16.13.1:\n    resolution: {integrity: sha512-24e6ynE2H+OKt4kqsOvNd8kBpV65zoxbA4BVsEOB3ARVWQki/DHzaUoC5KuON/BiccDaCCTZBuOcfZs70kR8bQ==}\n\n  read-pkg-up@7.0.1:\n    resolution: {integrity: sha512-zK0TB7Xd6JpCLmlLmufqykGE+/TlOePD6qKClNW7hHDKFh/J7/7gCWGR7joEQEW1bKq3a3yUZSObOoWLFQ4ohg==}\n    engines: {node: '>=8'}\n\n  read-pkg@5.2.0:\n    resolution: {integrity: sha512-Ug69mNOpfvKDAc2Q8DRpMjjzdtrnv9HcSMX+4VsZxD1aZ6ZzrIE7rlzXBtWTyhULSMKg076AW6WR5iZpD0JiOg==}\n    engines: {node: '>=8'}\n\n  read-yaml-file@1.1.0:\n    resolution: {integrity: sha512-VIMnQi/Z4HT2Fxuwg5KrY174U1VdUIASQVWXXyqtNRtxSr9IYkn1rsI6Tb6HsrHCmB7gVpNwX6JxPTHcH6IoTA==}\n    engines: {node: '>=6'}\n\n  readable-stream@3.6.2:\n    resolution: {integrity: sha512-9u/sniCrY3D5WdsERHzHE4G2YCXqoG5FTHUiCC4SIbr6XcLZBY05ya9EKjYek9O5xOAwjGq+1JdGBAS7Q9ScoA==}\n    engines: {node: '>= 6'}\n\n  recast@0.23.9:\n    resolution: {integrity: sha512-Hx/BGIbwj+Des3+xy5uAtAbdCyqK9y9wbBcDFDYanLS9JnMqf7OeF87HQwUimE87OEc72mr6tkKUKMBBL+hF9Q==}\n    engines: {node: '>= 4'}\n\n  redent@3.0.0:\n    resolution: {integrity: sha512-6tDA8g98We0zd0GvVeMT9arEOnTw9qM03L9cJXaCjrip1OO764RDBLBfrB4cwzNGDj5OA5ioymC9GkizgWJDUg==}\n    engines: {node: '>=8'}\n\n  refa@0.12.1:\n    resolution: {integrity: sha512-J8rn6v4DBb2nnFqkqwy6/NnTYMcgLA+sLr0iIO41qpv0n+ngb7ksag2tMRl0inb1bbO/esUwzW1vbJi7K0sI0g==}\n    engines: {node: ^12.0.0 || ^14.0.0 || >=16.0.0}\n\n  reflect.getprototypeof@1.0.6:\n    resolution: {integrity: sha512-fmfw4XgoDke3kdI6h4xcUz1dG8uaiv5q9gcEwLS4Pnth2kxT+GZ7YehS1JTMGBQmtV7Y4GFGbs2re2NqhdozUg==}\n    engines: {node: '>= 0.4'}\n\n  regenerator-runtime@0.14.1:\n    resolution: {integrity: sha512-dYnhHh0nJoMfnkZs6GmmhFknAGRrLznOu5nc9ML+EJxGvrx6H7teuevqVqCuPcPK//3eDrrjQhehXVx9cnkGdw==}\n\n  regexp-ast-analysis@0.7.1:\n    resolution: {integrity: sha512-sZuz1dYW/ZsfG17WSAG7eS85r5a0dDsvg+7BiiYR5o6lKCAtUrEwdmRmaGF6rwVj3LcmAeYkOWKEPlbPzN3Y3A==}\n    engines: {node: ^12.0.0 || ^14.0.0 || >=16.0.0}\n\n  regexp-tree@0.1.27:\n    resolution: {integrity: sha512-iETxpjK6YoRWJG5o6hXLwvjYAoW+FEZn9os0PD/b6AP6xQwsa/Y7lCVgIixBbUPMfhu+i2LtdeAqVTgGlQarfA==}\n    hasBin: true\n\n  regexp.prototype.flags@1.5.2:\n    resolution: {integrity: sha512-NcDiDkTLuPR+++OCKB0nWafEmhg/Da8aUPLPMQbK+bxKKCm1/S5he+AqYa4PlMCVBalb4/yxIRub6qkEx5yJbw==}\n    engines: {node: '>= 0.4'}\n\n  regexp.prototype.flags@1.5.3:\n    resolution: {integrity: sha512-vqlC04+RQoFalODCbCumG2xIOvapzVMHwsyIGM/SIE8fRhFFsXeH8/QQ+s0T0kDAhKc4k30s73/0ydkHQz6HlQ==}\n    engines: {node: '>= 0.4'}\n\n  regjsparser@0.10.0:\n    resolution: {integrity: sha512-qx+xQGZVsy55CH0a1hiVwHmqjLryfh7wQyF5HO07XJ9f7dQMY/gPQHhlyDkIzJKC+x2fUCpCcUODUUUFrm7SHA==}\n    hasBin: true\n\n  release-zalgo@1.0.0:\n    resolution: {integrity: sha512-gUAyHVHPPC5wdqX/LG4LWtRYtgjxyX78oanFNTMMyFEfOqdC54s3eE82imuWKbOeqYht2CrNf64Qb8vgmmtZGA==}\n    engines: {node: '>=4'}\n\n  remove-trailing-separator@1.1.0:\n    resolution: {integrity: sha512-/hS+Y0u3aOfIETiaiirUFwDBDzmXPvO+jAfKTitUngIPzdKc6Z0LoFjM/CK5PL4C+eKwHohlHAb6H0VFfmmUsw==}\n\n  repeat-string@1.6.1:\n    resolution: {integrity: sha512-PV0dzCYDNfRi1jCDbJzpW7jNNDRuCOG/jI5ctQcGKt/clZD+YcPS3yIlWuTJMmESC8aevCFmWJy5wjAFgNqN6w==}\n    engines: {node: '>=0.10'}\n\n  req-all@0.1.0:\n    resolution: {integrity: sha512-ZdvPr8uXy9ujX3KujwE2P1HWkMYgogIhqeAeyb47MqWjSfyxERSm0TNbN/IapCCmWDufXab04AYrRgObaJCJ6Q==}\n    engines: {node: '>=4'}\n\n  request@2.88.2:\n    resolution: {integrity: sha512-MsvtOrfG9ZcrOwAW+Qi+F6HbD0CWXEh9ou77uOb7FM2WPhwT7smM833PzanhJLsgXjN89Ir6V2PczXNnMpwKhw==}\n    engines: {node: '>= 6'}\n    deprecated: request has been deprecated, see https://github.com/request/request/issues/3142\n\n  require-directory@2.1.1:\n    resolution: {integrity: sha512-fGxEI7+wsG9xrvdjsrlmL22OMTTiHRwAMroiEeMgq8gzoLC/PQr7RsRDSTLUg/bZAZtF+TVIkHc6/4RIKrui+Q==}\n    engines: {node: '>=0.10.0'}\n\n  require-main-filename@2.0.0:\n    resolution: {integrity: sha512-NKN5kMDylKuldxYLSUfrbo5Tuzh4hd+2E8NPPX02mZtn1VuREQToYe/ZdlJy+J3uCpfaiGF05e7B8W0iXbQHmg==}\n\n  requireindex@1.1.0:\n    resolution: {integrity: sha512-LBnkqsDE7BZKvqylbmn7lTIVdpx4K/QCduRATpO5R+wtPmky/a8pN1bO2D6wXppn1497AJF9mNjqAXr6bdl9jg==}\n    engines: {node: '>=0.10.5'}\n\n  resolve-cwd@3.0.0:\n    resolution: {integrity: sha512-OrZaX2Mb+rJCpH/6CpSqt9xFVpN++x01XnN2ie9g6P5/3xelLAkXWVADpdz1IHD/KFfEXyE6V0U01OQ3UO2rEg==}\n    engines: {node: '>=8'}\n\n  resolve-from@4.0.0:\n    resolution: {integrity: sha512-pb/MYmXstAkysRFx8piNI1tGFNQIFA3vkE3Gq4EuA1dF6gHp/+vgZqsCGJapvy8N3Q+4o7FwvquPJcnZ7RYy4g==}\n    engines: {node: '>=4'}\n\n  resolve-from@5.0.0:\n    resolution: {integrity: sha512-qYg9KP24dD5qka9J47d0aVky0N+b4fTU89LN9iDnjB5waksiC49rvMB0PrUJQGoTmH50XPiqOvAjDfaijGxYZw==}\n    engines: {node: '>=8'}\n\n  resolve-pkg-maps@1.0.0:\n    resolution: {integrity: sha512-seS2Tj26TBVOC2NIc2rOe2y2ZO7efxITtLZcGSOnHHNOQ7CkiUBfw0Iw2ck6xkIhPwLhKNLS8BO+hEpngQlqzw==}\n\n  resolve@1.22.10:\n    resolution: {integrity: sha512-NPRy+/ncIMeDlTAsuqwKIiferiawhefFJtkNSW0qZJEqMEb+qBt/77B/jGeeek+F0uOeN05CDa6HXbbIgtVX4w==}\n    engines: {node: '>= 0.4'}\n    hasBin: true\n\n  resolve@1.22.8:\n    resolution: {integrity: sha512-oKWePCxqpd6FlLvGV1VU0x7bkPmmCNolxzjMf4NczoDnQcIWrAF+cPtZn5i6n+RfD2d9i0tzpKnG6Yk168yIyw==}\n    hasBin: true\n\n  resolve@2.0.0-next.5:\n    resolution: {integrity: sha512-U7WjGVG9sH8tvjW5SmGbQuui75FiyjAX72HX15DwBBwF9dNiQZRQAg9nnPhYy+TUnE0+VcrttuvNI8oSxZcocA==}\n    hasBin: true\n\n  restore-cursor@3.1.0:\n    resolution: {integrity: sha512-l+sSefzHpj5qimhFSE5a8nufZYAM3sBSVMAPtYkmC+4EH2anSGaEMXSD0izRQbu9nfyQ9y5JrVmp7E8oZrUjvA==}\n    engines: {node: '>=8'}\n\n  reusify@1.0.4:\n    resolution: {integrity: sha512-U9nH88a3fc/ekCF1l0/UP1IosiuIjyTh7hBvXVMHYgVcfGvt897Xguj2UOLDeI5BG2m7/uwyaLVT6fbtCwTyzw==}\n    engines: {iojs: '>=1.0.0', node: '>=0.10.0'}\n\n  rimraf@3.0.2:\n    resolution: {integrity: sha512-JZkJMZkAGFFPP2YqXZXPbMlMBgsxzE8ILs4lMIX/2o0L9UBw9O/Y3o6wFw/i9YLapcUJWwqbi3kdxIPdC62TIA==}\n    deprecated: Rimraf versions prior to v4 are no longer supported\n    hasBin: true\n\n  roarr@7.21.1:\n    resolution: {integrity: sha512-3niqt5bXFY1InKU8HKWqqYTYjtrBaxBMnXELXCXUYgtNYGUtZM5rB46HIC430AyacL95iEniGf7RgqsesykLmQ==}\n    engines: {node: '>=18.0'}\n\n  rollup@4.29.1:\n    resolution: {integrity: sha512-RaJ45M/kmJUzSWDs1Nnd5DdV4eerC98idtUOVr6FfKcgxqvjwHmxc5upLF9qZU9EpsVzzhleFahrT3shLuJzIw==}\n    engines: {node: '>=18.0.0', npm: '>=8.0.0'}\n    hasBin: true\n\n  run-parallel@1.2.0:\n    resolution: {integrity: sha512-5l4VyZR86LZ/lDxZTR6jqL8AFE2S0IFLMP26AbjsLVADxHdhB/c0GUsH+y39UfCi3dzz8OlQuPmnaJOMoDHQBA==}\n\n  safe-array-concat@1.1.2:\n    resolution: {integrity: sha512-vj6RsCsWBCf19jIeHEfkRMw8DPiBb+DMXklQ/1SGDHOMlHdPUkZXFQ2YdplS23zESTijAcurb1aSgJA3AgMu1Q==}\n    engines: {node: '>=0.4'}\n\n  safe-buffer@5.2.1:\n    resolution: {integrity: sha512-rp3So07KcdmmKbGvgaNxQSJr7bGVSVk5S9Eq1F+ppbRo70+YeaDxkw5Dd8NPN+GD6bjnYm2VuPuCXmpuYvmCXQ==}\n\n  safe-regex-test@1.0.3:\n    resolution: {integrity: sha512-CdASjNJPvRa7roO6Ra/gLYBTzYzzPyyBXxIMdGW3USQLyjWEls2RgW5UBTXaQVp+OrpeCK3bLem8smtmheoRuw==}\n    engines: {node: '>= 0.4'}\n\n  safe-stable-stringify@2.4.3:\n    resolution: {integrity: sha512-e2bDA2WJT0wxseVd4lsDP4+3ONX6HpMXQa1ZhFQ7SU+GjvORCmShbCMltrtIDfkYhVHrOcPtj+KhmDBdPdZD1g==}\n    engines: {node: '>=10'}\n\n  safer-buffer@2.1.2:\n    resolution: {integrity: sha512-YZo3K82SD7Riyi0E1EQPojLz7kpepnSQI9IyPbHHg1XXXevb5dJI7tpyN2ADxGcQbHG7vcyRHk0cbwqcQriUtg==}\n\n  scslre@0.3.0:\n    resolution: {integrity: sha512-3A6sD0WYP7+QrjbfNA2FN3FsOaGGFoekCVgTyypy53gPxhbkCIjtO6YWgdrfM+n/8sI8JeXZOIxsHjMTNxQ4nQ==}\n    engines: {node: ^14.0.0 || >=16.0.0}\n\n  semver-compare@1.0.0:\n    resolution: {integrity: sha512-YM3/ITh2MJ5MtzaM429anh+x2jiLVjqILF4m4oyQB18W7Ggea7BfqdH/wGMK7dDiMghv/6WG7znWMwUDzJiXow==}\n\n  semver@5.7.2:\n    resolution: {integrity: sha512-cBznnQ9KjJqU67B52RMC65CMarK2600WFnbkcaiwWq3xy/5haFJlshgnpjovMVJ+Hff49d8GEn0b87C5pDQ10g==}\n    hasBin: true\n\n  semver@6.3.1:\n    resolution: {integrity: sha512-BR7VvDCVHO+q2xBEWskxS6DJE1qRnb7DxzUrogb71CWoSficBxYsiAGd+Kl0mmq/MprG9yArRkyrQxTO6XjMzA==}\n    hasBin: true\n\n  semver@7.6.2:\n    resolution: {integrity: sha512-FNAIBWCx9qcRhoHcgcJ0gvU7SN1lYU2ZXuSfl04bSC5OpvDHFyJCjdNHomPXxjQlCBU67YW64PzY7/VIEH7F2w==}\n    engines: {node: '>=10'}\n    hasBin: true\n\n  semver@7.6.3:\n    resolution: {integrity: sha512-oVekP1cKtI+CTDvHWYFUcMtsK/00wmAEfyqKfNdARm8u1wNVhSgaX7A8d4UuIlUI5e84iEwOhs7ZPYRmzU9U6A==}\n    engines: {node: '>=10'}\n    hasBin: true\n\n  serialize-error@7.0.1:\n    resolution: {integrity: sha512-8I8TjW5KMOKsZQTvoxjuSIa7foAwPWGOts+6o7sgjz41/qMD9VQHEDxi6PBvK2l0MXUmqZyNpUK+T2tQaaElvw==}\n    engines: {node: '>=10'}\n\n  serialize-error@8.1.0:\n    resolution: {integrity: sha512-3NnuWfM6vBYoy5gZFvHiYsVbafvI9vZv/+jlIigFn4oP4zjNPK3LhcY0xSCgeb1a5L8jO71Mit9LlNoi2UfDDQ==}\n    engines: {node: '>=10'}\n\n  set-blocking@2.0.0:\n    resolution: {integrity: sha512-KiKBS8AnWGEyLzofFfmvKwpdPzqiy16LvQfK3yv/fVH7Bj13/wl3JSR1J+rfgRE9q7xUJK4qvgS8raSOeLUehw==}\n\n  set-function-length@1.2.2:\n    resolution: {integrity: sha512-pgRc4hJ4/sNjWCSS9AmnS40x3bNMDTknHgL5UaMBTMyJnU90EgWh1Rz+MC9eFu4BuN/UwZjKQuY/1v3rM7HMfg==}\n    engines: {node: '>= 0.4'}\n\n  set-function-name@2.0.2:\n    resolution: {integrity: sha512-7PGFlmtwsEADb0WYyvCMa1t+yke6daIG4Wirafur5kcf+MhUnPms1UeR0CKQdTZD81yESwMHbtn+TR+dMviakQ==}\n    engines: {node: '>= 0.4'}\n\n  shebang-command@1.2.0:\n    resolution: {integrity: sha512-EV3L1+UQWGor21OmnvojK36mhg+TyIKDh3iFBKBohr5xeXIhNBcx8oWdgkTEEQ+BEFFYdLRuqMfd5L84N1V5Vg==}\n    engines: {node: '>=0.10.0'}\n\n  shebang-command@2.0.0:\n    resolution: {integrity: sha512-kHxr2zZpYtdmrN1qDjrrX/Z1rR1kG8Dx+gkpK1G4eXmvXswmcE1hTWBWYUzlraYw1/yZp6YuDY77YtvbN0dmDA==}\n    engines: {node: '>=8'}\n\n  shebang-regex@1.0.0:\n    resolution: {integrity: sha512-wpoSFAxys6b2a2wHZ1XpDSgD7N9iVjg29Ph9uV/uaP9Ex/KXlkTZTeddxDPSYQpgvzKLGJke2UU0AzoGCjNIvQ==}\n    engines: {node: '>=0.10.0'}\n\n  shebang-regex@3.0.0:\n    resolution: {integrity: sha512-7++dFhtcx3353uBaq8DDR4NuxBetBzC7ZQOhmTQInHEd6bSrXdiEyzCvG07Z44UYdLShWUyXt5M/yhz8ekcb1A==}\n    engines: {node: '>=8'}\n\n  side-channel@1.0.6:\n    resolution: {integrity: sha512-fDW/EZ6Q9RiO8eFG8Hj+7u/oW+XrPTIChwCOM2+th2A6OblDtYYIpve9m+KvI9Z4C9qSEXlaGR6bTEYHReuglA==}\n    engines: {node: '>= 0.4'}\n\n  siginfo@2.0.0:\n    resolution: {integrity: sha512-ybx0WO1/8bSBLEWXZvEd7gMW3Sn3JFlW3TvX1nREbDLRNQNaeNN8WK0meBwPdAaOI7TtRRRJn/Es1zhrrCHu7g==}\n\n  signal-exit@3.0.7:\n    resolution: {integrity: sha512-wnD2ZE+l+SPC/uoS0vXeE9L1+0wuaMqKlfz9AMUo38JsyLSBWSFcHR1Rri62LZc12vLr1gb3jl7iwQhgwpAbGQ==}\n\n  signal-exit@4.1.0:\n    resolution: {integrity: sha512-bzyZ1e88w9O1iNJbKnOlvYTrWPDl46O1bG0D3XInv+9tkPrxrN8jUUTiFlDkkmKWgn1M6CfIA13SuGqOa9Korw==}\n    engines: {node: '>=14'}\n\n  sinon@15.2.0:\n    resolution: {integrity: sha512-nPS85arNqwBXaIsFCkolHjGIkFo+Oxu9vbgmBJizLAhqe6P2o3Qmj3KCUoRkfhHtvgDhZdWD3risLHAUJ8npjw==}\n    deprecated: 16.1.1\n\n  sister@3.0.2:\n    resolution: {integrity: sha512-p19rtTs+NksBRKW9qn0UhZ8/TUI9BPw9lmtHny+Y3TinWlOa9jWh9xB0AtPSdmOy49NJJJSSe0Ey4C7h0TrcYA==}\n\n  slash@3.0.0:\n    resolution: {integrity: sha512-g9Q1haeby36OSStwb4ntCGGGaKsaVSjQ68fBxoQcutl5fS1vuY18H3wSt3jFyFtrkx+Kz0V1G85A4MyAdDMi2Q==}\n    engines: {node: '>=8'}\n\n  slash@5.1.0:\n    resolution: {integrity: sha512-ZA6oR3T/pEyuqwMgAKT0/hAv8oAXckzbkmR0UkUosQ+Mc4RxGoJkRmwHgHufaenlyAgE1Mxgpdcrf75y6XcnDg==}\n    engines: {node: '>=14.16'}\n\n  slashes@3.0.12:\n    resolution: {integrity: sha512-Q9VME8WyGkc7pJf6QEkj3wE+2CnvZMI+XJhwdTPR8Z/kWQRXi7boAWLDibRPyHRTUTPx5FaU7MsyrjI3yLB4HA==}\n\n  slice-ansi@4.0.0:\n    resolution: {integrity: sha512-qMCMfhY040cVHT43K9BFygqYbUPFZKHOg7K73mtTWJRb8pyP3fzf4Ixd5SzdEJQ6MRUg/WBnOLxghZtKKurENQ==}\n    engines: {node: '>=10'}\n\n  slice-ansi@5.0.0:\n    resolution: {integrity: sha512-FC+lgizVPfie0kkhqUScwRu1O/lF6NOgJmlCgK+/LYxDCTk8sGelYaHDhFcDN+Sn3Cv+3VSa4Byeo+IMCzpMgQ==}\n    engines: {node: '>=12'}\n\n  smartwrap@2.0.2:\n    resolution: {integrity: sha512-vCsKNQxb7PnCNd2wY1WClWifAc2lwqsG8OaswpJkVJsvMGcnEntdTCDajZCkk93Ay1U3t/9puJmb525Rg5MZBA==}\n    engines: {node: '>=6'}\n    hasBin: true\n\n  smol-toml@1.3.0:\n    resolution: {integrity: sha512-tWpi2TsODPScmi48b/OQZGi2lgUmBCHy6SZrhi/FdnnHiU1GwebbCfuQuxsC3nHaLwtYeJGPrDZDIeodDOc4pA==}\n    engines: {node: '>= 18'}\n\n  source-map-js@1.2.1:\n    resolution: {integrity: sha512-UXWMKhLOwVKb728IUtQPXxfYU+usdybtUrK/8uGE8CQMvrhOpwvzDBwj0QhSL7MQc7vIsISBG8VQ8+IDQxpfQA==}\n    engines: {node: '>=0.10.0'}\n\n  source-map@0.6.1:\n    resolution: {integrity: sha512-UjgapumWlbMhkBgzT7Ykc5YXUT46F0iKu8SGXq0bcwP5dz/h0Plj6enJqjz1Zbq2l5WaqYnrVbwWOWMyF3F47g==}\n    engines: {node: '>=0.10.0'}\n\n  spawn-wrap@2.0.0:\n    resolution: {integrity: sha512-EeajNjfN9zMnULLwhZZQU3GWBoFNkbngTUPfaawT4RkMiviTxcX0qfhVbGey39mfctfDHkWtuecgQ8NJcyQWHg==}\n    engines: {node: '>=8'}\n\n  spawndamnit@2.0.0:\n    resolution: {integrity: sha512-j4JKEcncSjFlqIwU5L/rp2N5SIPsdxaRsIv678+TZxZ0SRDJTm8JrxJMjE/XuiEZNEir3S8l0Fa3Ke339WI4qA==}\n\n  spdx-correct@3.2.0:\n    resolution: {integrity: sha512-kN9dJbvnySHULIluDHy32WHRUu3Og7B9sbY7tsFLctQkIqnMh3hErYgdMjTYuqmcXX+lK5T1lnUt3G7zNswmZA==}\n\n  spdx-exceptions@2.5.0:\n    resolution: {integrity: sha512-PiU42r+xO4UbUS1buo3LPJkjlO7430Xn5SVAhdpzzsPHsjbYVflnnFdATgabnLude+Cqu25p6N+g2lw/PFsa4w==}\n\n  spdx-expression-parse@3.0.1:\n    resolution: {integrity: sha512-cbqHunsQWnJNE6KhVSMsMeH5H/L9EpymbzqTQ3uLwNCLZ1Q481oWaofqH7nO6V07xlXwY6PhQdQ2IedWx/ZK4Q==}\n\n  spdx-expression-parse@4.0.0:\n    resolution: {integrity: sha512-Clya5JIij/7C6bRR22+tnGXbc4VKlibKSVj2iHvVeX5iMW7s1SIQlqu699JkODJJIhh/pUu8L0/VLh8xflD+LQ==}\n\n  spdx-license-ids@3.0.18:\n    resolution: {integrity: sha512-xxRs31BqRYHwiMzudOrpSiHtZ8i/GeionCBDSilhYRj+9gIcI8wCZTlXZKu9vZIVqViP3dcp9qE5G6AlIaD+TQ==}\n\n  spdx-license-ids@3.0.20:\n    resolution: {integrity: sha512-jg25NiDV/1fLtSgEgyvVyDunvaNHbuwF9lfNV17gSmPFAlYzdfNBlLtLzXTevwkPj7DhGbmN9VnmJIgLnhvaBw==}\n\n  spex@3.4.0:\n    resolution: {integrity: sha512-8JeZJ7QlEBnSj1W1fKXgbB2KUPA8k4BxFMf6lZX/c1ZagU/1b9uZWZK0yD6yjfzqAIuTNG4YlRmtMpQiXuohsg==}\n    engines: {node: '>=14.0.0'}\n\n  split2@4.2.0:\n    resolution: {integrity: sha512-UcjcJOWknrNkF6PLX83qcHM6KHgVKNkV62Y8a5uYDVv9ydGQVwAHMKqHdJje1VTWpljG0WYpCDhrCdAOYH4TWg==}\n    engines: {node: '>= 10.x'}\n\n  sprintf-js@1.0.3:\n    resolution: {integrity: sha512-D9cPgkvLlV3t3IzL0D0YLvGA9Ahk4PcvVwUbN0dSGr1aP0Nrt4AEnTUbuGvquEC0mA64Gqt1fzirlRs5ibXx8g==}\n\n  sshpk@1.18.0:\n    resolution: {integrity: sha512-2p2KJZTSqQ/I3+HX42EpYOa2l3f8Erv8MWKsy2I9uf4wA7yFIkXRffYdsx86y6z4vHtV8u7g+pPlr8/4ouAxsQ==}\n    engines: {node: '>=0.10.0'}\n    hasBin: true\n\n  stable-hash@0.0.4:\n    resolution: {integrity: sha512-LjdcbuBeLcdETCrPn9i8AYAZ1eCtu4ECAWtP7UleOiZ9LzVxRzzUZEoZ8zB24nhkQnDWyET0I+3sWokSDS3E7g==}\n\n  stack-trace@0.0.10:\n    resolution: {integrity: sha512-KGzahc7puUKkzyMt+IqAep+TVNbKP+k2Lmwhub39m1AsTSkaDutx56aDCo+HLDzf/D26BIHTJWNiTG1KAJiQCg==}\n\n  stack-utils@2.0.6:\n    resolution: {integrity: sha512-XlkWvfIm6RmsWtNJx+uqtKLS8eqFbxUg0ZzLXqY0caEy9l7hruX8IpiDnjsLavoBgqCCR71TqWO8MaXYheJ3RQ==}\n    engines: {node: '>=10'}\n\n  stackback@0.0.2:\n    resolution: {integrity: sha512-1XMJE5fQo1jGH6Y/7ebnwPOBEkIEnT4QF32d5R1+VXdXveM0IBMJt8zfaxX1P3QhVwrYe+576+jkANtSS2mBbw==}\n\n  stacktrace-parser@0.1.10:\n    resolution: {integrity: sha512-KJP1OCML99+8fhOHxwwzyWrlUuVX5GQ0ZpJTd1DFXhdkrvg1szxfHhawXUZ3g9TkXORQd4/WG68jMlQZ2p8wlg==}\n    engines: {node: '>=6'}\n\n  std-env@3.8.0:\n    resolution: {integrity: sha512-Bc3YwwCB+OzldMxOXJIIvC6cPRWr/LxOp48CdQTOkPyk/t4JWWJbrilwBd7RJzKV8QW7tJkcgAmeuLLJugl5/w==}\n\n  stream-transform@2.1.3:\n    resolution: {integrity: sha512-9GHUiM5hMiCi6Y03jD2ARC1ettBXkQBoQAe7nJsPknnI0ow10aXjTnew8QtYQmLjzn974BnmWEAJgCY6ZP1DeQ==}\n\n  streamsearch@1.1.0:\n    resolution: {integrity: sha512-Mcc5wHehp9aXz1ax6bZUyY5afg9u2rv5cqQI3mRrYkGC8rW2hM02jWuwjtL++LS5qinSyhj2QfLyNsuc+VsExg==}\n    engines: {node: '>=10.0.0'}\n\n  strict-event-emitter-types@2.0.0:\n    resolution: {integrity: sha512-Nk/brWYpD85WlOgzw5h173aci0Teyv8YdIAEtV+N88nDB0dLlazZyJMIsN6eo1/AR61l+p6CJTG1JIyFaoNEEA==}\n\n  string-env-interpolation@1.0.1:\n    resolution: {integrity: sha512-78lwMoCcn0nNu8LszbP1UA7g55OeE4v7rCeWnM5B453rnNr4aq+5it3FEYtZrSEiMvHZOZ9Jlqb0OD0M2VInqg==}\n\n  string-width@4.2.3:\n    resolution: {integrity: sha512-wKyQRQpjJ0sIp62ErSZdGsjMJWsap5oRNihHhu6G7JVO/9jIB6UyevL+tXuOqrng8j/cxKTWyWUwvSTriiZz/g==}\n    engines: {node: '>=8'}\n\n  string-width@5.1.2:\n    resolution: {integrity: sha512-HnLOCR3vjcY8beoNLtcjZ5/nxn2afmME6lhrDrebokqMap+XbeW8n9TXpPDOqdGK5qcI3oT0GKTW6wC7EMiVqA==}\n    engines: {node: '>=12'}\n\n  string-width@7.1.0:\n    resolution: {integrity: sha512-SEIJCWiX7Kg4c129n48aDRwLbFb2LJmXXFrWBG4NGaRtMQ3myKPKbwrD1BKqQn74oCoNMBVrfDEr5M9YxCsrkw==}\n    engines: {node: '>=18'}\n\n  string.prototype.includes@2.0.1:\n    resolution: {integrity: sha512-o7+c9bW6zpAdJHTtujeePODAhkuicdAryFsfVKwA+wGw89wJ4GTY484WTucM9hLtDEOpOvI+aHnzqnC5lHp4Rg==}\n    engines: {node: '>= 0.4'}\n\n  string.prototype.matchall@4.0.11:\n    resolution: {integrity: sha512-NUdh0aDavY2og7IbBPenWqR9exH+E26Sv8e0/eTe1tltDGZL+GtBkDAnnyBtmekfK6/Dq3MkcGtzXFEd1LQrtg==}\n    engines: {node: '>= 0.4'}\n\n  string.prototype.repeat@1.0.0:\n    resolution: {integrity: sha512-0u/TldDbKD8bFCQ/4f5+mNRrXwZ8hg2w7ZR8wa16e8z9XpePWl3eGEcUD0OXpEH/VJH/2G3gjUtR3ZOiBe2S/w==}\n\n  string.prototype.trim@1.2.9:\n    resolution: {integrity: sha512-klHuCNxiMZ8MlsOihJhJEBJAiMVqU3Z2nEXWfWnIqjN0gEFS9J9+IxKozWWtQGcgoa1WUZzLjKPTr4ZHNFTFxw==}\n    engines: {node: '>= 0.4'}\n\n  string.prototype.trimend@1.0.8:\n    resolution: {integrity: sha512-p73uL5VCHCO2BZZ6krwwQE3kCzM7NKmis8S//xEC6fQonchbum4eP6kR4DLEjQFO3Wnj3Fuo8NM0kOSjVdHjZQ==}\n\n  string.prototype.trimstart@1.0.8:\n    resolution: {integrity: sha512-UXSH262CSZY1tfu3G3Secr6uGLCFVPMhIqHjlgCUtCCcgihYc/xKs9djMTMUOb2j1mVSeU8EU6NWc/iQKU6Gfg==}\n    engines: {node: '>= 0.4'}\n\n  string_decoder@1.3.0:\n    resolution: {integrity: sha512-hkRX8U1WjJFd8LsDJ2yQ/wWWxaopEsABU1XfkM8A+j0+85JAGppt16cr1Whg6KIbb4okU6Mql6BOj+uup/wKeA==}\n\n  strip-ansi@6.0.1:\n    resolution: {integrity: sha512-Y38VPSHcqkFrCpFnQ9vuSXmquuv5oXOKpGeT6aGrr3o3Gc9AlVa6JBfUSOCnbxGGZF+/0ooI7KrPuUSztUdU5A==}\n    engines: {node: '>=8'}\n\n  strip-ansi@7.1.0:\n    resolution: {integrity: sha512-iq6eVVI64nQQTRYq2KtEg2d2uU7LElhTJwsH4YzIHZshxlgZms/wIc4VoDQTlG/IvVIrBKG06CrZnp0qv7hkcQ==}\n    engines: {node: '>=12'}\n\n  strip-bom@3.0.0:\n    resolution: {integrity: sha512-vavAMRXOgBVNF6nyEEmL3DBK19iRpDcoIwW+swQ+CbGiu7lju6t+JklA1MHweoWtadgt4ISVUsXLyDq34ddcwA==}\n    engines: {node: '>=4'}\n\n  strip-bom@4.0.0:\n    resolution: {integrity: sha512-3xurFv5tEgii33Zi8Jtp55wEIILR9eh34FAW00PZf+JnSsTmV/ioewSgQl97JHvgjoRGwPShsWm+IdrxB35d0w==}\n    engines: {node: '>=8'}\n\n  strip-comments@2.0.1:\n    resolution: {integrity: sha512-ZprKx+bBLXv067WTCALv8SSz5l2+XhpYCsVtSqlMnkAXMWDq+/ekVbl1ghqP9rUHTzv6sm/DwCOiYutU/yp1fw==}\n    engines: {node: '>=10'}\n\n  strip-indent@3.0.0:\n    resolution: {integrity: sha512-laJTa3Jb+VQpaC6DseHhF7dXVqHTfJPCRDaEbid/drOhgitgYku/letMUqOXFoWV0zIIUbjpdH2t+tYj4bQMRQ==}\n    engines: {node: '>=8'}\n\n  strip-json-comments@3.1.1:\n    resolution: {integrity: sha512-6fPc+R4ihwqP6N/aIv2f1gMH8lOVtWQHoqC4yK6oSDVVocumAsfCqjkXnqiYMhmMwS/mEHLp7Vehlt3ql6lEig==}\n    engines: {node: '>=8'}\n\n  strip-json-comments@5.0.1:\n    resolution: {integrity: sha512-0fk9zBqO67Nq5M/m45qHCJxylV/DhBlIOVExqgOMiCCrzrhU6tCibRXNqE3jwJLftzE9SNuZtYbpzcO+i9FiKw==}\n    engines: {node: '>=14.16'}\n\n  summary@2.1.0:\n    resolution: {integrity: sha512-nMIjMrd5Z2nuB2RZCKJfFMjgS3fygbeyGk9PxPPaJR1RIcyN9yn4A63Isovzm3ZtQuEkLBVgMdPup8UeLH7aQw==}\n\n  super-regex@0.2.0:\n    resolution: {integrity: sha512-WZzIx3rC1CvbMDloLsVw0lkZVKJWbrkJ0k1ghKFmcnPrW1+jWbgTkTEWVtD9lMdmI4jZEz40+naBxl1dCUhXXw==}\n    engines: {node: '>=14.16'}\n\n  supertap@3.0.1:\n    resolution: {integrity: sha512-u1ZpIBCawJnO+0QePsEiOknOfCRq0yERxiAchT0i4li0WHNUJbf0evXXSXOcCAR4M8iMDoajXYmstm/qO81Isw==}\n    engines: {node: ^12.20.0 || ^14.13.1 || >=16.0.0}\n\n  supports-color@5.5.0:\n    resolution: {integrity: sha512-QjVjwdXIt408MIiAqCX4oUKsgU2EqAGzs2Ppkm4aQYbjm+ZEWEcW4SfFNTr4uMNZma0ey4f5lgLrkB0aX0QMow==}\n    engines: {node: '>=4'}\n\n  supports-color@7.2.0:\n    resolution: {integrity: sha512-qpCAvRl9stuOHveKsn7HncJRvv501qIacKzQlO/+Lwxc9+0q2wLyv4Dfvt80/DPn2pqOBsJdDiogXGR9+OvwRw==}\n    engines: {node: '>=8'}\n\n  supports-preserve-symlinks-flag@1.0.0:\n    resolution: {integrity: sha512-ot0WnXS9fgdkgIcePe6RHNk1WA8+muPa6cSjeR3V8K27q9BB1rTE3R1p7Hv0z1ZyAc8s6Vvv8DIyWf681MAt0w==}\n    engines: {node: '>= 0.4'}\n\n  symbol-tree@3.2.4:\n    resolution: {integrity: sha512-9QNk5KwDF+Bvz+PyObkmSYjI5ksVUYtjW7AU22r2NKcfLJcXp96hkDWU3+XndOsUb+AQ9QhfzfCT2O+CNWT5Tw==}\n\n  synckit@0.6.2:\n    resolution: {integrity: sha512-Vhf+bUa//YSTYKseDiiEuQmhGCoIF3CVBhunm3r/DQnYiGT4JssmnKQc44BIyOZRK2pKjXXAgbhfmbeoC9CJpA==}\n    engines: {node: '>=12.20'}\n\n  synckit@0.9.2:\n    resolution: {integrity: sha512-vrozgXDQwYO72vHjUb/HnFbQx1exDjoKzqx23aXEg2a9VIg2TSFZ8FmeZpTjUCFMYw7mpX4BE2SFu8wI7asYsw==}\n    engines: {node: ^14.18.0 || >=16.0.0}\n\n  tapable@2.2.1:\n    resolution: {integrity: sha512-GNzQvQTOIP6RyTfE2Qxb8ZVlNmw0n88vp1szwWRimP02mnTsx3Wtn5qRdqY9w2XduFNUgvOwhNnQsjwCp+kqaQ==}\n    engines: {node: '>=6'}\n\n  tar@6.2.1:\n    resolution: {integrity: sha512-DZ4yORTwrbTj/7MZYq2w+/ZFdI6OZ/f9SFHR+71gIVUZhOQPHzVCLpvRnPgyaMpfWxxk/4ONva3GQSyNIKRv6A==}\n    engines: {node: '>=10'}\n\n  temp-dir@3.0.0:\n    resolution: {integrity: sha512-nHc6S/bwIilKHNRgK/3jlhDoIHcp45YgyiwcAk46Tr0LfEqGBVpmiAyuiuxeVE44m3mXnEeVhaipLOEWmH+Njw==}\n    engines: {node: '>=14.16'}\n\n  term-size@2.2.1:\n    resolution: {integrity: sha512-wK0Ri4fOGjv/XPy8SBHZChl8CM7uMc5VML7SqiQ0zG7+J5Vr+RMQDoHa2CNT6KHUnTGIXH34UDMkPzAUyapBZg==}\n    engines: {node: '>=8'}\n\n  test-exclude@6.0.0:\n    resolution: {integrity: sha512-cAGWPIyOHU6zlmg88jwm7VRyXnMN7iV68OGAbYDk/Mh/xC/pzVPlQtY6ngoIH/5/tciuhGfvESU8GrHrcxD56w==}\n    engines: {node: '>=8'}\n\n  time-span@5.1.0:\n    resolution: {integrity: sha512-75voc/9G4rDIJleOo4jPvN4/YC4GRZrY8yy1uU4lwrB3XEQbWve8zXoO5No4eFrGcTAMYyoY67p8jRQdtA1HbA==}\n    engines: {node: '>=12'}\n\n  time-zone@1.0.0:\n    resolution: {integrity: sha512-TIsDdtKo6+XrPtiTm1ssmMngN1sAhyKnTO2kunQWqNPWIVvCm15Wmw4SWInwTVgJ5u/Tr04+8Ei9TNcw4x4ONA==}\n    engines: {node: '>=4'}\n\n  tiny-invariant@1.3.3:\n    resolution: {integrity: sha512-+FbBPE1o9QAYvviau/qC5SE3caw21q3xkvWKBtja5vgqOWIHHJ3ioaq1VPfn/Szqctz2bU/oYeKd9/z5BL+PVg==}\n\n  tinybench@2.9.0:\n    resolution: {integrity: sha512-0+DUvqWMValLmha6lr4kD8iAMK1HzV0/aKnCtWb9v9641TnP/MFb7Pc2bxoxQjTXAErryXVgUOfv2YqNllqGeg==}\n\n  tinyexec@0.3.2:\n    resolution: {integrity: sha512-KQQR9yN7R5+OSwaK0XQoj22pwHoTlgYqmUscPYoknOoWCWfj/5/ABTMRi69FrKU5ffPVh5QcFikpWJI/P1ocHA==}\n\n  tinyglobby@0.2.10:\n    resolution: {integrity: sha512-Zc+8eJlFMvgatPZTl6A9L/yht8QqdmUNtURHaKZLmKBE12hNPSrqNkUp2cs3M/UKmNVVAMFQYSjYIVHDjW5zew==}\n    engines: {node: '>=12.0.0'}\n\n  tinypool@1.0.2:\n    resolution: {integrity: sha512-al6n+QEANGFOMf/dmUMsuS5/r9B06uwlyNjZZql/zv8J7ybHCgoihBNORZCY2mzUuAnomQa2JdhyHKzZxPCrFA==}\n    engines: {node: ^18.0.0 || >=20.0.0}\n\n  tinyrainbow@1.2.0:\n    resolution: {integrity: sha512-weEDEq7Z5eTHPDh4xjX789+fHfF+P8boiFB+0vbWzpbnbsEr/GRaohi/uMKxg8RZMXnl1ItAi/IUHWMsjDV7kQ==}\n    engines: {node: '>=14.0.0'}\n\n  tinyspy@3.0.2:\n    resolution: {integrity: sha512-n1cw8k1k0x4pgA2+9XrOkFydTerNcJ1zWCO5Nn9scWHTD+5tp8dghT2x1uduQePZTZgd3Tupf+x9BxJjeJi77Q==}\n    engines: {node: '>=14.0.0'}\n\n  tlds@1.255.0:\n    resolution: {integrity: sha512-tcwMRIioTcF/FcxLev8MJWxCp+GUALRhFEqbDoZrnowmKSGqPrl5pqS+Sut2m8BgJ6S4FExCSSpGffZ0Tks6Aw==}\n    hasBin: true\n\n  tmp@0.0.33:\n    resolution: {integrity: sha512-jRCJlojKnZ3addtTOjdIqoRuPEKBvNXcGYqzO6zWZX8KfKEpnGY5jfggJQ3EjKuu8D4bJRr0y+cYJFmYbImXGw==}\n    engines: {node: '>=0.6.0'}\n\n  to-fast-properties@2.0.0:\n    resolution: {integrity: sha512-/OaKK0xYrs3DmxRYqL/yDc+FxFUVYhDlXMhRmv3z915w2HF1tnN1omB354j8VUGO/hbRzyD6Y3sA7v7GS/ceog==}\n    engines: {node: '>=4'}\n\n  to-regex-range@5.0.1:\n    resolution: {integrity: sha512-65P7iz6X5yEr1cwcgvQxbbIw7Uk3gOy5dIdtZ4rDveLqhrdJP+Li/Hx6tyK0NEb+2GCyneCMJiGqrADCSNk8sQ==}\n    engines: {node: '>=8.0'}\n\n  tough-cookie@2.5.0:\n    resolution: {integrity: sha512-nlLsUzgm1kfLXSXfRZMc1KLAugd4hqJHDTvc2hDIwS3mZAfMEuMbc03SujMF+GEcpaX/qboeycw6iO8JwVv2+g==}\n    engines: {node: '>=0.8'}\n\n  tr46@0.0.3:\n    resolution: {integrity: sha512-N3WMsuqV66lT30CrXNbEjx4GEwlow3v6rr4mCcv6prnfwhS01rkgyFdjPNBYd9br7LpXV1+Emh01fHnq2Gdgrw==}\n\n  trim-newlines@3.0.1:\n    resolution: {integrity: sha512-c1PTsA3tYrIsLGkJkzHF+w9F2EyxfXGo4UyJc4pFL++FMjnq0HJS69T3M7d//gKrFKwy429bouPescbjecU+Zw==}\n    engines: {node: '>=8'}\n\n  ts-api-utils@1.4.3:\n    resolution: {integrity: sha512-i3eMG77UTMD0hZhgRS562pv83RC6ukSAC2GMNWc+9dieh/+jDM5u5YG+NHX6VNDRHQcHwmsTHctP9LhbC3WxVw==}\n    engines: {node: '>=16'}\n    peerDependencies:\n      typescript: '>=4.2.0'\n\n  ts-node@10.9.2:\n    resolution: {integrity: sha512-f0FFpIdcHgn8zcPSbf1dRevwt047YMnaiJM3u2w2RewrB+fob/zePZcrOyQoLMMO7aBIddLcQIEK5dYjkLnGrQ==}\n    hasBin: true\n    peerDependencies:\n      '@swc/core': '>=1.2.50'\n      '@swc/wasm': '>=1.2.50'\n      '@types/node': '*'\n      typescript: '>=2.7'\n    peerDependenciesMeta:\n      '@swc/core':\n        optional: true\n      '@swc/wasm':\n        optional: true\n\n  tsconfig-paths@4.2.0:\n    resolution: {integrity: sha512-NoZ4roiN7LnbKn9QqE1amc9DJfzvZXxF4xDavcOWt1BPkdx+m+0gJuPM+S0vCe7zTJMYUP0R8pO2XMr+Y8oLIg==}\n    engines: {node: '>=6'}\n\n  tslib@2.8.1:\n    resolution: {integrity: sha512-oJFu94HQb+KVduSUQL7wnpmqnfmLsOA/nAh6b6EH0wCEoK0/mPeXU6c3wKDV83MkOuHPRHtSXKKU99IBazS/2w==}\n\n  tty-table@4.2.3:\n    resolution: {integrity: sha512-Fs15mu0vGzCrj8fmJNP7Ynxt5J7praPXqFN0leZeZBXJwkMxv9cb2D454k1ltrtUSJbZ4yH4e0CynsHLxmUfFA==}\n    engines: {node: '>=8.0.0'}\n    hasBin: true\n\n  tunnel-agent@0.6.0:\n    resolution: {integrity: sha512-McnNiV1l8RYeY8tBgEpuodCC1mLUdbSN+CYBL7kJsJNInOP8UjDDEwdk6Mw60vdLLrr5NHKZhMAOSrR2NZuQ+w==}\n\n  tweetnacl@0.14.5:\n    resolution: {integrity: sha512-KXXFFdAbFXY4geFIwoyNK+f5Z1b7swfXABfL7HXCmoIWMKU3dmS26672A4EeQtDzLKy7SXmfBu51JolvEKwtGA==}\n\n  type-check@0.3.2:\n    resolution: {integrity: sha512-ZCmOJdvOWDBYJlzAoFkC+Q0+bUyEOS1ltgp1MGU03fqHG+dbi9tBFU2Rd9QKiDZFAYrhPh2JUf7rZRIuHRKtOg==}\n    engines: {node: '>= 0.8.0'}\n\n  type-check@0.4.0:\n    resolution: {integrity: sha512-XleUoc9uwGXqjWwXaUTZAmzMcFZ5858QA2vvx1Ur5xIcixXIP+8LnFDgRplU30us6teqdlskFfu+ae4K79Ooew==}\n    engines: {node: '>= 0.8.0'}\n\n  type-detect@4.0.8:\n    resolution: {integrity: sha512-0fr/mIH1dlO+x7TlcMy+bIDqKPsw/70tVyeHW787goQjhmqaZe10uwLujubK9q9Lg6Fiho1KUKDYz0Z7k7g5/g==}\n    engines: {node: '>=4'}\n\n  type-fest@0.13.1:\n    resolution: {integrity: sha512-34R7HTnG0XIJcBSn5XhDd7nNFPRcXYRZrBB2O2jdKqYODldSzBAqzsWoZYYvduky73toYS/ESqxPvkDf/F0XMg==}\n    engines: {node: '>=10'}\n\n  type-fest@0.20.2:\n    resolution: {integrity: sha512-Ne+eE4r0/iWnpAxD852z3A+N0Bt5RN//NjJwRd2VFHEmrywxf5vsZlh4R6lixl6B+wz/8d+maTSAkN1FIkI3LQ==}\n    engines: {node: '>=10'}\n\n  type-fest@0.21.3:\n    resolution: {integrity: sha512-t0rzBq87m3fVcduHDUFhKmyyX+9eo6WQjZvf51Ea/M0Q7+T374Jp1aUiyUl0GKxp8M/OETVHSDvmkyPgvX+X2w==}\n    engines: {node: '>=10'}\n\n  type-fest@0.6.0:\n    resolution: {integrity: sha512-q+MB8nYR1KDLrgr4G5yemftpMC7/QLqVndBmEEdqzmNj5dcFOO4Oo8qlwZE3ULT3+Zim1F8Kq4cBnikNhlCMlg==}\n    engines: {node: '>=8'}\n\n  type-fest@0.7.1:\n    resolution: {integrity: sha512-Ne2YiiGN8bmrmJJEuTWTLJR32nh/JdL1+PSicowtNb0WFpn59GK8/lfD61bVtzguz7b3PBt74nxpv/Pw5po5Rg==}\n    engines: {node: '>=8'}\n\n  type-fest@0.8.1:\n    resolution: {integrity: sha512-4dbzIzqvjtgiM5rw1k5rEHtBANKmdudhGyBEajN01fEyhaAIhsoKNy6y7+IN93IfpFtwY9iqi7kD+xwKhQsNJA==}\n    engines: {node: '>=8'}\n\n  typed-array-buffer@1.0.2:\n    resolution: {integrity: sha512-gEymJYKZtKXzzBzM4jqa9w6Q1Jjm7x2d+sh19AdsD4wqnMPDYyvwpsIc2Q/835kHuo3BEQ7CjelGhfTsoBb2MQ==}\n    engines: {node: '>= 0.4'}\n\n  typed-array-byte-length@1.0.1:\n    resolution: {integrity: sha512-3iMJ9q0ao7WE9tWcaYKIptkNBuOIcZCCT0d4MRvuuH88fEoEH62IuQe0OtraD3ebQEoTRk8XCBoknUNc1Y67pw==}\n    engines: {node: '>= 0.4'}\n\n  typed-array-byte-offset@1.0.2:\n    resolution: {integrity: sha512-Ous0vodHa56FviZucS2E63zkgtgrACj7omjwd/8lTEMEPFFyjfixMZ1ZXenpgCFBBt4EC1J2XsyVS2gkG0eTFA==}\n    engines: {node: '>= 0.4'}\n\n  typed-array-length@1.0.6:\n    resolution: {integrity: sha512-/OxDN6OtAk5KBpGb28T+HZc2M+ADtvRxXrKKbUwtsLgdoxgX13hyy7ek6bFRl5+aBs2yZzB0c4CnQfAtVypW/g==}\n    engines: {node: '>= 0.4'}\n\n  typedarray-to-buffer@3.1.5:\n    resolution: {integrity: sha512-zdu8XMNEDepKKR+XYOXAVPtWui0ly0NtohUscw+UmaHiAWT8hrV1rr//H6V+0DvJ3OQ19S979M0laLfX8rm82Q==}\n\n  typescript@5.6.3:\n    resolution: {integrity: sha512-hjcS1mhfuyi4WW8IWtjP7brDrG2cuDZukyrYrSauoXGNgx0S7zceP07adYkJycEr56BOUTNPzbInooiN3fn1qw==}\n    engines: {node: '>=14.17'}\n    hasBin: true\n\n  unbox-primitive@1.0.2:\n    resolution: {integrity: sha512-61pPlCD9h51VoreyJ0BReideM3MDKMKnh6+V9L08331ipq6Q8OFXZYiqP6n/tbHx4s5I9uRhcye6BrbkizkBDw==}\n\n  undici-types@6.19.8:\n    resolution: {integrity: sha512-ve2KP6f/JnbPBFyobGHuerC9g1FYGn/F8n1LWTwNxCEzd6IfqTwUQcNXgEtmmQ6DlRrC1hrSrBnCZPokRrDHjw==}\n\n  unicorn-magic@0.1.0:\n    resolution: {integrity: sha512-lRfVq8fE8gz6QMBuDM6a+LO3IAzTi05H6gCVaUpir2E1Rwpo4ZUog45KpNXKC/Mn3Yb9UDuHumeFTo9iV/D9FQ==}\n    engines: {node: '>=18'}\n\n  universalify@0.1.2:\n    resolution: {integrity: sha512-rBJeI5CXAlmy1pV+617WB9J63U6XcazHHF2f2dbJix4XzpUF0RS3Zbj0FGIOCAva5P/d/GBOYaACQ1w+0azUkg==}\n    engines: {node: '>= 4.0.0'}\n\n  universalify@2.0.1:\n    resolution: {integrity: sha512-gptHNQghINnc/vTGIk0SOFGFNXw7JVrlRUtConJRlvaw6DuX0wO5Jeko9sWrMBhh+PsYAZ7oXAiOnf/UKogyiw==}\n    engines: {node: '>= 10.0.0'}\n\n  unixify@1.0.0:\n    resolution: {integrity: sha512-6bc58dPYhCMHHuwxldQxO3RRNZ4eCogZ/st++0+fcC1nr0jiGUtAdBJ2qzmLQWSxbtz42pWt4QQMiZ9HvZf5cg==}\n    engines: {node: '>=0.10.0'}\n\n  update-browserslist-db@1.0.16:\n    resolution: {integrity: sha512-KVbTxlBYlckhF5wgfyZXTWnMn7MMZjMu9XG8bPlliUOP9ThaF4QnhP8qrjrH7DRzHfSk0oQv1wToW+iA5GajEQ==}\n    hasBin: true\n    peerDependencies:\n      browserslist: '>= 4.21.0'\n\n  update-browserslist-db@1.1.1:\n    resolution: {integrity: sha512-R8UzCaa9Az+38REPiJ1tXlImTJXlVfgHZsglwBD/k6nj76ctsH1E3q4doGrukiLQd3sGQYu56r5+lo5r94l29A==}\n    hasBin: true\n    peerDependencies:\n      browserslist: '>= 4.21.0'\n\n  uri-js@4.4.1:\n    resolution: {integrity: sha512-7rKUyy33Q1yc98pQ1DAmLtwX109F7TIfWlW1Ydo8Wl1ii1SeHieeh0HHfPeL2fMXK6z0s8ecKs9frCuLJvndBg==}\n\n  url-regex-safe@4.0.0:\n    resolution: {integrity: sha512-BrnFCWKNFrFnRzKD66NtJqQepfJrUHNPvPxE5y5NSAhXBb4OlobQjt7907Jm4ItPiXaeX+dDWMkcnOd4jR9N8A==}\n    engines: {node: '>= 14'}\n    peerDependencies:\n      re2: ^1.20.1\n    peerDependenciesMeta:\n      re2:\n        optional: true\n\n  url-regexp@1.0.2:\n    resolution: {integrity: sha512-Tt0N/yu3iNSCqZ7wJ6AxTtF/QSemtfzLH+astikB0CR/u/7X132VaBdiNEXbiAGiU+LXsIpyB2Hqz8OY4zw8MA==}\n\n  urlpattern-polyfill@8.0.2:\n    resolution: {integrity: sha512-Qp95D4TPJl1kC9SKigDcqgyM2VDVO4RiJc2d4qe5GrYm+zbIQCWWKAFaJNQ4BhdFeDGwBmAxqJBwWSJDb9T3BQ==}\n\n  util-deprecate@1.0.2:\n    resolution: {integrity: sha512-EPD5q1uXyFxJpCrLnCc1nHnq3gOa6DZBocAIiI2TaSCA7VCJ1UJDMagCzIkXNsUYfD1daK//LTEQ8xiIbrHtcw==}\n\n  uuid@3.4.0:\n    resolution: {integrity: sha512-HjSDRw6gZE5JMggctHBcjVak08+KEVhSIiDzFnT9S9aegmp85S/bReBVTb4QTFaRNptJ9kuYaNhnbNEOkbKb/A==}\n    deprecated: Please upgrade  to version 7 or higher.  Older versions may use Math.random() in certain circumstances, which is known to be problematic.  See https://v8.dev/blog/math-random for details.\n    hasBin: true\n\n  uuid@8.3.2:\n    resolution: {integrity: sha512-+NYs2QeMWy+GWFOEm9xnn6HCDp0l7QBD7ml8zLUmJ+93Q5NF0NocErnwkTkXVFNiX3/fpC6afS8Dhb/gz7R7eg==}\n    hasBin: true\n\n  v8-compile-cache-lib@3.0.1:\n    resolution: {integrity: sha512-wa7YjyUGfNZngI/vtK0UHAN+lgDCxBPCylVXGp0zu59Fz5aiGtNXaq3DhIov063MorB+VfufLh3JlF2KdTK3xg==}\n\n  validate-npm-package-license@3.0.4:\n    resolution: {integrity: sha512-DpKm2Ui/xN7/HQKCtpZxoRWBhZ9Z0kqtygG8XCgNQ8ZlDnxuQmWhj566j8fN4Cu3/JmbhsDo7fcAJq4s9h27Ew==}\n\n  value-or-promise@1.0.12:\n    resolution: {integrity: sha512-Z6Uz+TYwEqE7ZN50gwn+1LCVo9ZVrpxRPOhOLnncYkY1ZzOYtrX8Fwf/rFktZ8R5mJms6EZf5TqNOMeZmnPq9Q==}\n    engines: {node: '>=12'}\n\n  verror@1.10.0:\n    resolution: {integrity: sha512-ZZKSmDAEFOijERBLkmYfJ+vmk3w+7hOLYDNkRCuRuMJGEmqYNCNLyBBFwWKVMhfwaEF3WOd0Zlw86U/WC/+nYw==}\n    engines: {'0': node >=0.6.0}\n\n  vite-node@2.1.8:\n    resolution: {integrity: sha512-uPAwSr57kYjAUux+8E2j0q0Fxpn8M9VoyfGiRI8Kfktz9NcYMCenwY5RnZxnF1WTu3TGiYipirIzacLL3VVGFg==}\n    engines: {node: ^18.0.0 || >=20.0.0}\n    hasBin: true\n\n  vite@5.4.11:\n    resolution: {integrity: sha512-c7jFQRklXua0mTzneGW9QVyxFjUgwcihC4bXEtujIo2ouWCe1Ajt/amn2PCxYnhYfd5k09JX3SB7OYWFKYqj8Q==}\n    engines: {node: ^18.0.0 || >=20.0.0}\n    hasBin: true\n    peerDependencies:\n      '@types/node': ^18.0.0 || >=20.0.0\n      less: '*'\n      lightningcss: ^1.21.0\n      sass: '*'\n      sass-embedded: '*'\n      stylus: '*'\n      sugarss: '*'\n      terser: ^5.4.0\n    peerDependenciesMeta:\n      '@types/node':\n        optional: true\n      less:\n        optional: true\n      lightningcss:\n        optional: true\n      sass:\n        optional: true\n      sass-embedded:\n        optional: true\n      stylus:\n        optional: true\n      sugarss:\n        optional: true\n      terser:\n        optional: true\n\n  vitest@2.1.8:\n    resolution: {integrity: sha512-1vBKTZskHw/aosXqQUlVWWlGUxSJR8YtiyZDJAFeW2kPAeX6S3Sool0mjspO+kXLuxVWlEDDowBAeqeAQefqLQ==}\n    engines: {node: ^18.0.0 || >=20.0.0}\n    hasBin: true\n    peerDependencies:\n      '@edge-runtime/vm': '*'\n      '@types/node': ^18.0.0 || >=20.0.0\n      '@vitest/browser': 2.1.8\n      '@vitest/ui': 2.1.8\n      happy-dom: '*'\n      jsdom: '*'\n    peerDependenciesMeta:\n      '@edge-runtime/vm':\n        optional: true\n      '@types/node':\n        optional: true\n      '@vitest/browser':\n        optional: true\n      '@vitest/ui':\n        optional: true\n      happy-dom:\n        optional: true\n      jsdom:\n        optional: true\n\n  vscode-languageserver-textdocument@1.0.12:\n    resolution: {integrity: sha512-cxWNPesCnQCcMPeenjKKsOCKQZ/L6Tv19DTRIGuLWe32lyzWhihGVJ/rcckZXJxfdKCFvRLS3fpBIsV/ZGX4zA==}\n\n  vscode-uri@3.0.8:\n    resolution: {integrity: sha512-AyFQ0EVmsOZOlAnxoFOGOq1SQDWAB7C6aqMGS23svWAllfOaxbuFvcT8D1i8z3Gyn8fraVeZNNmN6e9bxxXkKw==}\n\n  wcwidth@1.0.1:\n    resolution: {integrity: sha512-XHPEwS0q6TaxcvG85+8EYkbiCux2XtWG2mkc47Ng2A77BQu9+DqIOJldST4HgPkuea7dvKSj5VgX3P1d4rW8Tg==}\n\n  web-streams-polyfill@3.3.3:\n    resolution: {integrity: sha512-d2JWLCivmZYTSIoge9MsgFCZrt571BikcWGYkjC1khllbTeDlGqZ2D8vD8E/lJa8WGWbb7Plm8/XJYV7IJHZZw==}\n    engines: {node: '>= 8'}\n\n  webcrypto-core@1.8.1:\n    resolution: {integrity: sha512-P+x1MvlNCXlKbLSOY4cYrdreqPG5hbzkmawbcXLKN/mf6DZW0SdNNkZ+sjwsqVkI4A4Ko2sPZmkZtCKY58w83A==}\n\n  webidl-conversions@3.0.1:\n    resolution: {integrity: sha512-2JAn3z8AR6rjK8Sm8orRC0h/bcl/DqL7tRPdGZ4I1CjdF+EaMLmYxBHyXuKL849eucPFhvBoxMsflfOb8kxaeQ==}\n\n  well-known-symbols@2.0.0:\n    resolution: {integrity: sha512-ZMjC3ho+KXo0BfJb7JgtQ5IBuvnShdlACNkKkdsqBmYw3bPAaJfPeYUo6tLUaT5tG/Gkh7xkpBhKRQ9e7pyg9Q==}\n    engines: {node: '>=6'}\n\n  whatwg-url-compat@0.6.5:\n    resolution: {integrity: sha512-vbg5+JVNwGtHRI3GheZGWrcUlxF9BXHbA80dLa+2XqJjlV/BK6upoi2j8dIRW9FGPUUyaMm7Hf1pTexHnsk85g==}\n\n  whatwg-url@5.0.0:\n    resolution: {integrity: sha512-saE57nupxk6v3HY35+jzBwYa0rKSy0XR8JSxZPwgLr7ys0IBzhGviA1/TUGJLmSVqs8pb9AnvICXEuOHLprYTw==}\n\n  which-boxed-primitive@1.0.2:\n    resolution: {integrity: sha512-bwZdv0AKLpplFY2KZRX6TvyuN7ojjr7lwkg6ml0roIy9YeuSr7JS372qlNW18UQYzgYK9ziGcerWqZOmEn9VNg==}\n\n  which-builtin-type@1.1.4:\n    resolution: {integrity: sha512-bppkmBSsHFmIMSl8BO9TbsyzsvGjVoppt8xUiGzwiu/bhDCGxnpOKCxgqj6GuyHE0mINMDecBFPlOm2hzY084w==}\n    engines: {node: '>= 0.4'}\n\n  which-collection@1.0.2:\n    resolution: {integrity: sha512-K4jVyjnBdgvc86Y6BkaLZEN933SwYOuBFkdmBu9ZfkcAbdVbpITnDmjvZ/aQjRXQrv5EPkTnD1s39GiiqbngCw==}\n    engines: {node: '>= 0.4'}\n\n  which-module@2.0.1:\n    resolution: {integrity: sha512-iBdZ57RDvnOR9AGBhML2vFZf7h8vmBjhoaZqODJBFWHVtKkDmKuHai3cx5PgVMrX5YDNp27AofYbAwctSS+vhQ==}\n\n  which-pm@2.0.0:\n    resolution: {integrity: sha512-Lhs9Pmyph0p5n5Z3mVnN0yWcbQYUAD7rbQUiMsQxOJ3T57k7RFe35SUwWMf7dsbDZks1uOmw4AecB/JMDj3v/w==}\n    engines: {node: '>=8.15'}\n\n  which-typed-array@1.1.15:\n    resolution: {integrity: sha512-oV0jmFtUky6CXfkqehVvBP/LSWJ2sy4vWMioiENyJLePrBO/yKyV9OyJySfAKosh+RYkIl5zJCNZ8/4JncrpdA==}\n    engines: {node: '>= 0.4'}\n\n  which@1.3.1:\n    resolution: {integrity: sha512-HxJdYWq1MTIQbJ3nw0cqssHoTNU267KlrDuGZ1WYlxDStUtKUhOaJmh112/TZmHxxUfuJqPXSOm7tDyas0OSIQ==}\n    hasBin: true\n\n  which@2.0.2:\n    resolution: {integrity: sha512-BLI3Tl1TW3Pvl70l3yq3Y64i+awpwXqsGBYWkkqMtnbXgrMD+yj7rhW0kuEDxzJaYXGjEW5ogapKNMEKNMjibA==}\n    engines: {node: '>= 8'}\n    hasBin: true\n\n  why-is-node-running@2.3.0:\n    resolution: {integrity: sha512-hUrmaWBdVDcxvYqnyh09zunKzROWjbZTiNy8dBEjkS7ehEDQibXJ7XvlmtbwuTclUiIyN+CyXQD4Vmko8fNm8w==}\n    engines: {node: '>=8'}\n    hasBin: true\n\n  wide-align@1.1.5:\n    resolution: {integrity: sha512-eDMORYaPNZ4sQIuuYPDHdQvf4gyCF9rEEV/yPxGfwPkRodwEgiMUUXTx/dex+Me0wxx53S+NgUHaP7y3MGlDmg==}\n\n  word-wrap@1.2.5:\n    resolution: {integrity: sha512-BN22B5eaMMI9UMtjrGd5g5eCYPpCPDUy0FJXbYsaT5zYxjFOckS53SQDE3pWkVoWpHXVb3BrYcEN4Twa55B5cA==}\n    engines: {node: '>=0.10.0'}\n\n  wrap-ansi@6.2.0:\n    resolution: {integrity: sha512-r6lPcBGxZXlIcymEu7InxDMhdW0KDxpLgoFLcguasxCaJ/SOIZwINatK9KY/tf+ZrlywOKU0UDj3ATXUBfxJXA==}\n    engines: {node: '>=8'}\n\n  wrap-ansi@7.0.0:\n    resolution: {integrity: sha512-YVGIj2kamLSTxw6NsZjoBxfSwsn0ycdesmc4p+Q21c5zPuZ1pl+NfxVdxPtdHvmNVOQ6XSYG4AUtyt/Fi7D16Q==}\n    engines: {node: '>=10'}\n\n  wrap-ansi@8.1.0:\n    resolution: {integrity: sha512-si7QWI6zUMq56bESFvagtmzMdGOtoxfR+Sez11Mobfc7tm+VkUckk9bW2UeffTGVUbOksxmSw0AA2gs8g71NCQ==}\n    engines: {node: '>=12'}\n\n  wrappy@1.0.2:\n    resolution: {integrity: sha512-l4Sp/DRseor9wL6EvV2+TuQn63dMkPjZ/sp9XkghTEbV9KlPS1xUsZ3u7/IQO4wxtcFB4bgpQPRcR3QCvezPcQ==}\n\n  write-file-atomic@3.0.3:\n    resolution: {integrity: sha512-AvHcyZ5JnSfq3ioSyjrBkH9yW4m7Ayk8/9My/DD9onKeu/94fwrMocemO2QAJFAlnnDN+ZDS+ZjAR5ua1/PV/Q==}\n\n  write-file-atomic@5.0.1:\n    resolution: {integrity: sha512-+QU2zd6OTD8XWIJCbffaiQeH9U73qIqafo1x6V1snCWYGJf6cVE0cDR4D8xRzcEnfI21IFrUPzPGtcPf8AC+Rw==}\n    engines: {node: ^14.17.0 || ^16.13.0 || >=18.0.0}\n\n  ws@8.13.0:\n    resolution: {integrity: sha512-x9vcZYTrFPC7aSIbj7sRCYo7L/Xb8Iy+pW0ng0wt2vCJv7M9HOMy0UoN3rr+IFC7hb7vXoqS+P9ktyLLLhO+LA==}\n    engines: {node: '>=10.0.0'}\n    peerDependencies:\n      bufferutil: ^4.0.1\n      utf-8-validate: '>=5.0.2'\n    peerDependenciesMeta:\n      bufferutil:\n        optional: true\n      utf-8-validate:\n        optional: true\n\n  ws@8.18.0:\n    resolution: {integrity: sha512-8VbfWfHLbbwu3+N6OKsOMpBdT4kXPDDB9cJk2bJ6mh9ucxdlnNvH1e+roYkKmN9Nxw2yjz7VzeO9oOz2zJ04Pw==}\n    engines: {node: '>=10.0.0'}\n    peerDependencies:\n      bufferutil: ^4.0.1\n      utf-8-validate: '>=5.0.2'\n    peerDependenciesMeta:\n      bufferutil:\n        optional: true\n      utf-8-validate:\n        optional: true\n\n  xdg-basedir@5.1.0:\n    resolution: {integrity: sha512-GCPAHLvrIH13+c0SuacwvRYj2SxJXQ4kaVTT5xgL3kPrz56XxkF21IGhjSE1+W0aw7gpBWRGXLCPnPby6lSpmQ==}\n    engines: {node: '>=12'}\n\n  xml-name-validator@2.0.1:\n    resolution: {integrity: sha512-jRKe/iQYMyVJpzPH+3HL97Lgu5HrCfii+qSo+TfjKHtOnvbnvdVfMYrn9Q34YV81M2e5sviJlI6Ko9y+nByzvA==}\n\n  xmlhttprequest@1.8.0:\n    resolution: {integrity: sha512-58Im/U0mlVBLM38NdZjHyhuMtCqa61469k2YP/AaPbvCoV9aQGUpbJBj1QRm2ytRiVQBD/fsw7L2bJGDVQswBA==}\n    engines: {node: '>=0.4.0'}\n\n  xregexp@5.1.1:\n    resolution: {integrity: sha512-fKXeVorD+CzWvFs7VBuKTYIW63YD1e1osxwQ8caZ6o1jg6pDAbABDG54LCIq0j5cy7PjRvGIq6sef9DYPXpncg==}\n\n  xtend@4.0.2:\n    resolution: {integrity: sha512-LKYU1iAXJXUgAXn9URjiu+MWhyUXHsvfp7mcuYm9dSUKK0/CjtrUwFAxD82/mCWbtLsGjFIad0wIsod4zrTAEQ==}\n    engines: {node: '>=0.4'}\n\n  y18n@4.0.3:\n    resolution: {integrity: sha512-JKhqTOwSrqNA1NY5lSztJ1GrBiUodLMmIZuLiDaMRJ+itFd+ABVE8XBjOvIWL+rSqNDC74LCSFmlb/U4UZ4hJQ==}\n\n  y18n@5.0.8:\n    resolution: {integrity: sha512-0pfFzegeDWJHJIAmTLRP2DwHjdF5s7jo9tuztdQxAhINCdvS+3nGINqPd00AphqJR/0LhANUS6/+7SCb98YOfA==}\n    engines: {node: '>=10'}\n\n  yallist@2.1.2:\n    resolution: {integrity: sha512-ncTzHV7NvsQZkYe1DW7cbDLm0YpzHmZF5r/iyP3ZnQtMiJ+pjzisCiMNI+Sj+xQF5pXhSHxSB3uDbsBTzY/c2A==}\n\n  yallist@3.1.1:\n    resolution: {integrity: sha512-a4UGQaWPH59mOXUYnAG2ewncQS4i4F43Tv3JoAM+s2VDAmS9NsK8GpDMLrCHPksFT7h3K6TOoUNn2pb7RoXx4g==}\n\n  yallist@4.0.0:\n    resolution: {integrity: sha512-3wdGidZyq5PB084XLES5TpOSRA3wjXAlIWMhum2kRcv/41Sn2emQ0dycQW4uZXLejwKvg6EsvbdlVL+FYEct7A==}\n\n  yaml-eslint-parser@1.2.3:\n    resolution: {integrity: sha512-4wZWvE398hCP7O8n3nXKu/vdq1HcH01ixYlCREaJL5NUMwQ0g3MaGFUBNSlmBtKmhbtVG/Cm6lyYmSVTEVil8A==}\n    engines: {node: ^14.17.0 || >=16.0.0}\n\n  yaml@2.6.0:\n    resolution: {integrity: sha512-a6ae//JvKDEra2kdi1qzCyrJW/WZCgFi8ydDV+eXExl95t+5R+ijnqHJbz9tmMh8FUjx3iv2fCQ4dclAQlO2UQ==}\n    engines: {node: '>= 14'}\n    hasBin: true\n\n  yargs-parser@18.1.3:\n    resolution: {integrity: sha512-o50j0JeToy/4K6OZcaQmW6lyXXKhq7csREXcDwk2omFPJEwUNOVtJKvmDr9EI1fAJZUyZcRF7kxGBWmRXudrCQ==}\n    engines: {node: '>=6'}\n\n  yargs-parser@21.1.1:\n    resolution: {integrity: sha512-tVpsJW7DdjecAiFpbIB1e3qxIQsE6NoPc5/eTdrbbIC4h0LVsWhnoa3g+m2HclBIujHzsxZ4VJVA+GUuc2/LBw==}\n    engines: {node: '>=12'}\n\n  yargs@15.4.1:\n    resolution: {integrity: sha512-aePbxDmcYW++PaqBsJ+HYUFwCdv4LVvdnhBy78E57PIor8/OVvhMrADFFEDh8DHDFRv/O9i3lPhsENjO7QX0+A==}\n    engines: {node: '>=8'}\n\n  yargs@17.7.2:\n    resolution: {integrity: sha512-7dSzzRQ++CKnNI/krKnYRV7JKKPUXMEh61soaHKg9mrWEhzFWhFnxPxGl+69cD1Ou63C13NUPCnmIcrvqCuM6w==}\n    engines: {node: '>=12'}\n\n  yn@3.1.1:\n    resolution: {integrity: sha512-Ux4ygGWsu2c7isFWe8Yu1YluJmqVhxqK2cLXNQA5AcC3QfbGNpM7fu0Y8b/z16pXLnFxZYvWhd3fhBY9DLmC6Q==}\n    engines: {node: '>=6'}\n\n  yocto-queue@0.1.0:\n    resolution: {integrity: sha512-rVksvsnNCdJ/ohGc6xgPwyN8eheCxsiLM8mxuE/t/mOVqJewPuO1miLpTHQiRgTKCLexL4MeAFVagts7HmNZ2Q==}\n    engines: {node: '>=10'}\n\n  zod-validation-error@3.4.0:\n    resolution: {integrity: sha512-ZOPR9SVY6Pb2qqO5XHt+MkkTRxGXb4EVtnjc9JpXUOtUB1T9Ru7mZOT361AN3MsetVe7R0a1KZshJDZdgp9miQ==}\n    engines: {node: '>=18.0.0'}\n    peerDependencies:\n      zod: ^3.18.0\n\n  zod@3.23.8:\n    resolution: {integrity: sha512-XBx9AXhXktjUqnepgTiE5flcKIYWi/rme0Eaj+5Y0lftuGBq+jyRu/md4WnuxqgP1ubdpNCsYEYPxrzVHD8d6g==}\n\nsnapshots:\n\n  '@ampproject/remapping@2.3.0':\n    dependencies:\n      '@jridgewell/gen-mapping': 0.3.5\n      '@jridgewell/trace-mapping': 0.3.25\n\n  '@ardatan/sync-fetch@0.0.1':\n    dependencies:\n      node-fetch: 2.7.0\n    transitivePeerDependencies:\n      - encoding\n\n  '@arrows/array@1.4.1':\n    dependencies:\n      '@arrows/composition': 1.2.2\n\n  '@arrows/composition@1.2.2': {}\n\n  '@arrows/dispatch@1.0.3':\n    dependencies:\n      '@arrows/composition': 1.2.2\n\n  '@arrows/error@1.0.2': {}\n\n  '@arrows/multimethod@1.4.1':\n    dependencies:\n      '@arrows/array': 1.4.1\n      '@arrows/composition': 1.2.2\n      '@arrows/error': 1.0.2\n      fast-deep-equal: 3.1.3\n\n  '@babel/code-frame@7.24.7':\n    dependencies:\n      '@babel/highlight': 7.24.7\n      picocolors: 1.0.1\n\n  '@babel/code-frame@7.26.2':\n    dependencies:\n      '@babel/helper-validator-identifier': 7.25.9\n      js-tokens: 4.0.0\n      picocolors: 1.1.1\n\n  '@babel/compat-data@7.24.7': {}\n\n  '@babel/core@7.24.7':\n    dependencies:\n      '@ampproject/remapping': 2.3.0\n      '@babel/code-frame': 7.24.7\n      '@babel/generator': 7.24.7\n      '@babel/helper-compilation-targets': 7.24.7\n      '@babel/helper-module-transforms': 7.24.7(@babel/core@7.24.7)\n      '@babel/helpers': 7.24.7\n      '@babel/parser': 7.24.7\n      '@babel/template': 7.24.7\n      '@babel/traverse': 7.24.7\n      '@babel/types': 7.24.7\n      convert-source-map: 2.0.0\n      debug: 4.3.5\n      gensync: 1.0.0-beta.2\n      json5: 2.2.3\n      semver: 6.3.1\n    transitivePeerDependencies:\n      - supports-color\n\n  '@babel/generator@7.24.7':\n    dependencies:\n      '@babel/types': 7.24.7\n      '@jridgewell/gen-mapping': 0.3.5\n      '@jridgewell/trace-mapping': 0.3.25\n      jsesc: 2.5.2\n\n  '@babel/generator@7.26.2':\n    dependencies:\n      '@babel/parser': 7.26.2\n      '@babel/types': 7.26.0\n      '@jridgewell/gen-mapping': 0.3.5\n      '@jridgewell/trace-mapping': 0.3.25\n      jsesc: 3.0.2\n\n  '@babel/helper-compilation-targets@7.24.7':\n    dependencies:\n      '@babel/compat-data': 7.24.7\n      '@babel/helper-validator-option': 7.24.7\n      browserslist: 4.23.1\n      lru-cache: 5.1.1\n      semver: 6.3.1\n\n  '@babel/helper-environment-visitor@7.24.7':\n    dependencies:\n      '@babel/types': 7.24.7\n\n  '@babel/helper-function-name@7.24.7':\n    dependencies:\n      '@babel/template': 7.24.7\n      '@babel/types': 7.24.7\n\n  '@babel/helper-hoist-variables@7.24.7':\n    dependencies:\n      '@babel/types': 7.24.7\n\n  '@babel/helper-module-imports@7.24.7':\n    dependencies:\n      '@babel/traverse': 7.24.7\n      '@babel/types': 7.24.7\n    transitivePeerDependencies:\n      - supports-color\n\n  '@babel/helper-module-transforms@7.24.7(@babel/core@7.24.7)':\n    dependencies:\n      '@babel/core': 7.24.7\n      '@babel/helper-environment-visitor': 7.24.7\n      '@babel/helper-module-imports': 7.24.7\n      '@babel/helper-simple-access': 7.24.7\n      '@babel/helper-split-export-declaration': 7.24.7\n      '@babel/helper-validator-identifier': 7.24.7\n    transitivePeerDependencies:\n      - supports-color\n\n  '@babel/helper-plugin-utils@7.25.9': {}\n\n  '@babel/helper-simple-access@7.24.7':\n    dependencies:\n      '@babel/traverse': 7.24.7\n      '@babel/types': 7.24.7\n    transitivePeerDependencies:\n      - supports-color\n\n  '@babel/helper-split-export-declaration@7.24.7':\n    dependencies:\n      '@babel/types': 7.24.7\n\n  '@babel/helper-string-parser@7.24.7': {}\n\n  '@babel/helper-string-parser@7.25.9': {}\n\n  '@babel/helper-validator-identifier@7.24.7': {}\n\n  '@babel/helper-validator-identifier@7.25.9': {}\n\n  '@babel/helper-validator-option@7.24.7': {}\n\n  '@babel/helpers@7.24.7':\n    dependencies:\n      '@babel/template': 7.24.7\n      '@babel/types': 7.24.7\n\n  '@babel/highlight@7.24.7':\n    dependencies:\n      '@babel/helper-validator-identifier': 7.24.7\n      chalk: 2.4.2\n      js-tokens: 4.0.0\n      picocolors: 1.0.1\n\n  '@babel/parser@7.24.7':\n    dependencies:\n      '@babel/types': 7.24.7\n\n  '@babel/parser@7.26.2':\n    dependencies:\n      '@babel/types': 7.26.0\n\n  '@babel/plugin-syntax-import-assertions@7.26.0(@babel/core@7.24.7)':\n    dependencies:\n      '@babel/core': 7.24.7\n      '@babel/helper-plugin-utils': 7.25.9\n\n  '@babel/runtime-corejs3@7.26.0':\n    dependencies:\n      core-js-pure: 3.39.0\n      regenerator-runtime: 0.14.1\n\n  '@babel/runtime@7.24.7':\n    dependencies:\n      regenerator-runtime: 0.14.1\n\n  '@babel/template@7.24.7':\n    dependencies:\n      '@babel/code-frame': 7.24.7\n      '@babel/parser': 7.24.7\n      '@babel/types': 7.24.7\n\n  '@babel/template@7.25.9':\n    dependencies:\n      '@babel/code-frame': 7.26.2\n      '@babel/parser': 7.26.2\n      '@babel/types': 7.26.0\n\n  '@babel/traverse@7.24.7':\n    dependencies:\n      '@babel/code-frame': 7.24.7\n      '@babel/generator': 7.24.7\n      '@babel/helper-environment-visitor': 7.24.7\n      '@babel/helper-function-name': 7.24.7\n      '@babel/helper-hoist-variables': 7.24.7\n      '@babel/helper-split-export-declaration': 7.24.7\n      '@babel/parser': 7.24.7\n      '@babel/types': 7.24.7\n      debug: 4.3.5\n      globals: 11.12.0\n    transitivePeerDependencies:\n      - supports-color\n\n  '@babel/traverse@7.25.9':\n    dependencies:\n      '@babel/code-frame': 7.26.2\n      '@babel/generator': 7.26.2\n      '@babel/parser': 7.26.2\n      '@babel/template': 7.25.9\n      '@babel/types': 7.26.0\n      debug: 4.4.0\n      globals: 11.12.0\n    transitivePeerDependencies:\n      - supports-color\n\n  '@babel/types@7.24.7':\n    dependencies:\n      '@babel/helper-string-parser': 7.24.7\n      '@babel/helper-validator-identifier': 7.24.7\n      to-fast-properties: 2.0.0\n\n  '@babel/types@7.26.0':\n    dependencies:\n      '@babel/helper-string-parser': 7.25.9\n      '@babel/helper-validator-identifier': 7.25.9\n\n  '@changesets/apply-release-plan@7.0.3':\n    dependencies:\n      '@babel/runtime': 7.24.7\n      '@changesets/config': 3.0.1\n      '@changesets/get-version-range-type': 0.4.0\n      '@changesets/git': 3.0.0\n      '@changesets/should-skip-package': 0.1.0\n      '@changesets/types': 6.0.0\n      '@manypkg/get-packages': 1.1.3\n      detect-indent: 6.1.0\n      fs-extra: 7.0.1\n      lodash.startcase: 4.4.0\n      outdent: 0.5.0\n      prettier: 2.8.8\n      resolve-from: 5.0.0\n      semver: 7.6.2\n\n  '@changesets/assemble-release-plan@6.0.2':\n    dependencies:\n      '@babel/runtime': 7.24.7\n      '@changesets/errors': 0.2.0\n      '@changesets/get-dependents-graph': 2.1.0\n      '@changesets/should-skip-package': 0.1.0\n      '@changesets/types': 6.0.0\n      '@manypkg/get-packages': 1.1.3\n      semver: 7.6.2\n\n  '@changesets/changelog-git@0.2.0':\n    dependencies:\n      '@changesets/types': 6.0.0\n\n  '@changesets/changelog-github@0.5.0':\n    dependencies:\n      '@changesets/get-github-info': 0.6.0\n      '@changesets/types': 6.0.0\n      dotenv: 8.6.0\n    transitivePeerDependencies:\n      - encoding\n\n  '@changesets/cli@2.27.5':\n    dependencies:\n      '@babel/runtime': 7.24.7\n      '@changesets/apply-release-plan': 7.0.3\n      '@changesets/assemble-release-plan': 6.0.2\n      '@changesets/changelog-git': 0.2.0\n      '@changesets/config': 3.0.1\n      '@changesets/errors': 0.2.0\n      '@changesets/get-dependents-graph': 2.1.0\n      '@changesets/get-release-plan': 4.0.2\n      '@changesets/git': 3.0.0\n      '@changesets/logger': 0.1.0\n      '@changesets/pre': 2.0.0\n      '@changesets/read': 0.6.0\n      '@changesets/should-skip-package': 0.1.0\n      '@changesets/types': 6.0.0\n      '@changesets/write': 0.3.1\n      '@manypkg/get-packages': 1.1.3\n      '@types/semver': 7.5.8\n      ansi-colors: 4.1.3\n      chalk: 2.4.2\n      ci-info: 3.9.0\n      enquirer: 2.4.1\n      external-editor: 3.1.0\n      fs-extra: 7.0.1\n      human-id: 1.0.2\n      meow: 6.1.1\n      outdent: 0.5.0\n      p-limit: 2.3.0\n      preferred-pm: 3.1.3\n      resolve-from: 5.0.0\n      semver: 7.6.2\n      spawndamnit: 2.0.0\n      term-size: 2.2.1\n      tty-table: 4.2.3\n\n  '@changesets/config@3.0.1':\n    dependencies:\n      '@changesets/errors': 0.2.0\n      '@changesets/get-dependents-graph': 2.1.0\n      '@changesets/logger': 0.1.0\n      '@changesets/types': 6.0.0\n      '@manypkg/get-packages': 1.1.3\n      fs-extra: 7.0.1\n      micromatch: 4.0.7\n\n  '@changesets/errors@0.2.0':\n    dependencies:\n      extendable-error: 0.1.7\n\n  '@changesets/get-dependents-graph@2.1.0':\n    dependencies:\n      '@changesets/types': 6.0.0\n      '@manypkg/get-packages': 1.1.3\n      chalk: 2.4.2\n      fs-extra: 7.0.1\n      semver: 7.6.2\n\n  '@changesets/get-github-info@0.6.0':\n    dependencies:\n      dataloader: 1.4.0\n      node-fetch: 2.7.0\n    transitivePeerDependencies:\n      - encoding\n\n  '@changesets/get-release-plan@4.0.2':\n    dependencies:\n      '@babel/runtime': 7.24.7\n      '@changesets/assemble-release-plan': 6.0.2\n      '@changesets/config': 3.0.1\n      '@changesets/pre': 2.0.0\n      '@changesets/read': 0.6.0\n      '@changesets/types': 6.0.0\n      '@manypkg/get-packages': 1.1.3\n\n  '@changesets/get-version-range-type@0.4.0': {}\n\n  '@changesets/git@3.0.0':\n    dependencies:\n      '@babel/runtime': 7.24.7\n      '@changesets/errors': 0.2.0\n      '@changesets/types': 6.0.0\n      '@manypkg/get-packages': 1.1.3\n      is-subdir: 1.2.0\n      micromatch: 4.0.7\n      spawndamnit: 2.0.0\n\n  '@changesets/logger@0.1.0':\n    dependencies:\n      chalk: 2.4.2\n\n  '@changesets/parse@0.4.0':\n    dependencies:\n      '@changesets/types': 6.0.0\n      js-yaml: 3.14.1\n\n  '@changesets/pre@2.0.0':\n    dependencies:\n      '@babel/runtime': 7.24.7\n      '@changesets/errors': 0.2.0\n      '@changesets/types': 6.0.0\n      '@manypkg/get-packages': 1.1.3\n      fs-extra: 7.0.1\n\n  '@changesets/read@0.6.0':\n    dependencies:\n      '@babel/runtime': 7.24.7\n      '@changesets/git': 3.0.0\n      '@changesets/logger': 0.1.0\n      '@changesets/parse': 0.4.0\n      '@changesets/types': 6.0.0\n      chalk: 2.4.2\n      fs-extra: 7.0.1\n      p-filter: 2.1.0\n\n  '@changesets/should-skip-package@0.1.0':\n    dependencies:\n      '@babel/runtime': 7.24.7\n      '@changesets/types': 6.0.0\n      '@manypkg/get-packages': 1.1.3\n\n  '@changesets/types@4.1.0': {}\n\n  '@changesets/types@6.0.0': {}\n\n  '@changesets/write@0.3.1':\n    dependencies:\n      '@babel/runtime': 7.24.7\n      '@changesets/types': 6.0.0\n      fs-extra: 7.0.1\n      human-id: 1.0.2\n      prettier: 2.8.8\n\n  '@cspell/cspell-bundled-dicts@8.16.0':\n    dependencies:\n      '@cspell/dict-ada': 4.0.5\n      '@cspell/dict-al': 1.0.3\n      '@cspell/dict-aws': 4.0.7\n      '@cspell/dict-bash': 4.1.8\n      '@cspell/dict-companies': 3.1.7\n      '@cspell/dict-cpp': 6.0.2\n      '@cspell/dict-cryptocurrencies': 5.0.3\n      '@cspell/dict-csharp': 4.0.5\n      '@cspell/dict-css': 4.0.16\n      '@cspell/dict-dart': 2.2.4\n      '@cspell/dict-django': 4.1.3\n      '@cspell/dict-docker': 1.1.11\n      '@cspell/dict-dotnet': 5.0.8\n      '@cspell/dict-elixir': 4.0.6\n      '@cspell/dict-en-common-misspellings': 2.0.7\n      '@cspell/dict-en-gb': 1.1.33\n      '@cspell/dict-en_us': 4.3.27\n      '@cspell/dict-filetypes': 3.0.8\n      '@cspell/dict-flutter': 1.0.3\n      '@cspell/dict-fonts': 4.0.3\n      '@cspell/dict-fsharp': 1.0.4\n      '@cspell/dict-fullstack': 3.2.3\n      '@cspell/dict-gaming-terms': 1.0.8\n      '@cspell/dict-git': 3.0.3\n      '@cspell/dict-golang': 6.0.16\n      '@cspell/dict-google': 1.0.4\n      '@cspell/dict-haskell': 4.0.4\n      '@cspell/dict-html': 4.0.10\n      '@cspell/dict-html-symbol-entities': 4.0.3\n      '@cspell/dict-java': 5.0.10\n      '@cspell/dict-julia': 1.0.4\n      '@cspell/dict-k8s': 1.0.9\n      '@cspell/dict-latex': 4.0.3\n      '@cspell/dict-lorem-ipsum': 4.0.3\n      '@cspell/dict-lua': 4.0.6\n      '@cspell/dict-makefile': 1.0.3\n      '@cspell/dict-markdown': 2.0.7(@cspell/dict-css@4.0.16)(@cspell/dict-html-symbol-entities@4.0.3)(@cspell/dict-html@4.0.10)(@cspell/dict-typescript@3.1.11)\n      '@cspell/dict-monkeyc': 1.0.9\n      '@cspell/dict-node': 5.0.5\n      '@cspell/dict-npm': 5.1.12\n      '@cspell/dict-php': 4.0.13\n      '@cspell/dict-powershell': 5.0.13\n      '@cspell/dict-public-licenses': 2.0.11\n      '@cspell/dict-python': 4.2.12\n      '@cspell/dict-r': 2.0.4\n      '@cspell/dict-ruby': 5.0.7\n      '@cspell/dict-rust': 4.0.10\n      '@cspell/dict-scala': 5.0.6\n      '@cspell/dict-software-terms': 4.1.15\n      '@cspell/dict-sql': 2.1.8\n      '@cspell/dict-svelte': 1.0.5\n      '@cspell/dict-swift': 2.0.4\n      '@cspell/dict-terraform': 1.0.6\n      '@cspell/dict-typescript': 3.1.11\n      '@cspell/dict-vue': 3.0.3\n\n  '@cspell/cspell-json-reporter@8.16.0':\n    dependencies:\n      '@cspell/cspell-types': 8.16.0\n\n  '@cspell/cspell-pipe@8.16.0': {}\n\n  '@cspell/cspell-resolver@8.16.0':\n    dependencies:\n      global-directory: 4.0.1\n\n  '@cspell/cspell-service-bus@8.16.0': {}\n\n  '@cspell/cspell-types@8.16.0': {}\n\n  '@cspell/dict-ada@4.0.5': {}\n\n  '@cspell/dict-al@1.0.3': {}\n\n  '@cspell/dict-aws@4.0.7': {}\n\n  '@cspell/dict-bash@4.1.8': {}\n\n  '@cspell/dict-companies@3.1.7': {}\n\n  '@cspell/dict-cpp@6.0.2': {}\n\n  '@cspell/dict-cryptocurrencies@5.0.3': {}\n\n  '@cspell/dict-csharp@4.0.5': {}\n\n  '@cspell/dict-css@4.0.16': {}\n\n  '@cspell/dict-dart@2.2.4': {}\n\n  '@cspell/dict-data-science@2.0.5': {}\n\n  '@cspell/dict-django@4.1.3': {}\n\n  '@cspell/dict-docker@1.1.11': {}\n\n  '@cspell/dict-dotnet@5.0.8': {}\n\n  '@cspell/dict-elixir@4.0.6': {}\n\n  '@cspell/dict-en-common-misspellings@2.0.7': {}\n\n  '@cspell/dict-en-gb@1.1.33': {}\n\n  '@cspell/dict-en_us@4.3.27': {}\n\n  '@cspell/dict-filetypes@3.0.8': {}\n\n  '@cspell/dict-flutter@1.0.3': {}\n\n  '@cspell/dict-fonts@4.0.3': {}\n\n  '@cspell/dict-fsharp@1.0.4': {}\n\n  '@cspell/dict-fullstack@3.2.3': {}\n\n  '@cspell/dict-gaming-terms@1.0.8': {}\n\n  '@cspell/dict-git@3.0.3': {}\n\n  '@cspell/dict-golang@6.0.16': {}\n\n  '@cspell/dict-google@1.0.4': {}\n\n  '@cspell/dict-haskell@4.0.4': {}\n\n  '@cspell/dict-html-symbol-entities@4.0.3': {}\n\n  '@cspell/dict-html@4.0.10': {}\n\n  '@cspell/dict-java@5.0.10': {}\n\n  '@cspell/dict-julia@1.0.4': {}\n\n  '@cspell/dict-k8s@1.0.9': {}\n\n  '@cspell/dict-latex@4.0.3': {}\n\n  '@cspell/dict-lorem-ipsum@4.0.3': {}\n\n  '@cspell/dict-lua@4.0.6': {}\n\n  '@cspell/dict-makefile@1.0.3': {}\n\n  '@cspell/dict-markdown@2.0.7(@cspell/dict-css@4.0.16)(@cspell/dict-html-symbol-entities@4.0.3)(@cspell/dict-html@4.0.10)(@cspell/dict-typescript@3.1.11)':\n    dependencies:\n      '@cspell/dict-css': 4.0.16\n      '@cspell/dict-html': 4.0.10\n      '@cspell/dict-html-symbol-entities': 4.0.3\n      '@cspell/dict-typescript': 3.1.11\n\n  '@cspell/dict-monkeyc@1.0.9': {}\n\n  '@cspell/dict-node@5.0.5': {}\n\n  '@cspell/dict-npm@5.1.12': {}\n\n  '@cspell/dict-php@4.0.13': {}\n\n  '@cspell/dict-powershell@5.0.13': {}\n\n  '@cspell/dict-public-licenses@2.0.11': {}\n\n  '@cspell/dict-python@4.2.12':\n    dependencies:\n      '@cspell/dict-data-science': 2.0.5\n\n  '@cspell/dict-r@2.0.4': {}\n\n  '@cspell/dict-ruby@5.0.7': {}\n\n  '@cspell/dict-rust@4.0.10': {}\n\n  '@cspell/dict-scala@5.0.6': {}\n\n  '@cspell/dict-software-terms@4.1.15': {}\n\n  '@cspell/dict-sql@2.1.8': {}\n\n  '@cspell/dict-svelte@1.0.5': {}\n\n  '@cspell/dict-swift@2.0.4': {}\n\n  '@cspell/dict-terraform@1.0.6': {}\n\n  '@cspell/dict-typescript@3.1.11': {}\n\n  '@cspell/dict-vue@3.0.3': {}\n\n  '@cspell/dynamic-import@8.16.0':\n    dependencies:\n      import-meta-resolve: 4.1.0\n\n  '@cspell/filetypes@8.16.0': {}\n\n  '@cspell/strong-weak-map@8.16.0': {}\n\n  '@cspell/url@8.16.0': {}\n\n  '@cspotcode/source-map-support@0.8.1':\n    dependencies:\n      '@jridgewell/trace-mapping': 0.3.9\n\n  '@es-joy/jsdoccomment@0.49.0':\n    dependencies:\n      comment-parser: 1.4.1\n      esquery: 1.6.0\n      jsdoc-type-pratt-parser: 4.1.0\n\n  '@esbuild/aix-ppc64@0.21.5':\n    optional: true\n\n  '@esbuild/android-arm64@0.21.5':\n    optional: true\n\n  '@esbuild/android-arm@0.21.5':\n    optional: true\n\n  '@esbuild/android-x64@0.21.5':\n    optional: true\n\n  '@esbuild/darwin-arm64@0.21.5':\n    optional: true\n\n  '@esbuild/darwin-x64@0.21.5':\n    optional: true\n\n  '@esbuild/freebsd-arm64@0.21.5':\n    optional: true\n\n  '@esbuild/freebsd-x64@0.21.5':\n    optional: true\n\n  '@esbuild/linux-arm64@0.21.5':\n    optional: true\n\n  '@esbuild/linux-arm@0.21.5':\n    optional: true\n\n  '@esbuild/linux-ia32@0.21.5':\n    optional: true\n\n  '@esbuild/linux-loong64@0.21.5':\n    optional: true\n\n  '@esbuild/linux-mips64el@0.21.5':\n    optional: true\n\n  '@esbuild/linux-ppc64@0.21.5':\n    optional: true\n\n  '@esbuild/linux-riscv64@0.21.5':\n    optional: true\n\n  '@esbuild/linux-s390x@0.21.5':\n    optional: true\n\n  '@esbuild/linux-x64@0.21.5':\n    optional: true\n\n  '@esbuild/netbsd-x64@0.21.5':\n    optional: true\n\n  '@esbuild/openbsd-x64@0.21.5':\n    optional: true\n\n  '@esbuild/sunos-x64@0.21.5':\n    optional: true\n\n  '@esbuild/win32-arm64@0.21.5':\n    optional: true\n\n  '@esbuild/win32-ia32@0.21.5':\n    optional: true\n\n  '@esbuild/win32-x64@0.21.5':\n    optional: true\n\n  '@eslint-community/eslint-utils@4.4.1(eslint@9.17.0(jiti@2.4.0))':\n    dependencies:\n      eslint: 9.17.0(jiti@2.4.0)\n      eslint-visitor-keys: 3.4.3\n\n  '@eslint-community/regexpp@4.12.1': {}\n\n  '@eslint/config-array@0.19.1':\n    dependencies:\n      '@eslint/object-schema': 2.1.5\n      debug: 4.4.0\n      minimatch: 3.1.2\n    transitivePeerDependencies:\n      - supports-color\n\n  '@eslint/core@0.9.1':\n    dependencies:\n      '@types/json-schema': 7.0.15\n\n  '@eslint/eslintrc@3.2.0':\n    dependencies:\n      ajv: 6.12.6\n      debug: 4.4.0\n      espree: 10.3.0\n      globals: 14.0.0\n      ignore: 5.3.2\n      import-fresh: 3.3.0\n      js-yaml: 4.1.0\n      minimatch: 3.1.2\n      strip-json-comments: 3.1.1\n    transitivePeerDependencies:\n      - supports-color\n\n  '@eslint/js@9.17.0': {}\n\n  '@eslint/object-schema@2.1.5': {}\n\n  '@eslint/plugin-kit@0.2.4':\n    dependencies:\n      levn: 0.4.1\n\n  '@graphql-eslint/eslint-plugin@3.20.1(@babel/core@7.24.7)(@types/node@22.9.0)(graphql@16.10.0)':\n    dependencies:\n      '@babel/code-frame': 7.26.2\n      '@graphql-tools/code-file-loader': 7.3.23(@babel/core@7.24.7)(graphql@16.10.0)\n      '@graphql-tools/graphql-tag-pluck': 7.5.2(@babel/core@7.24.7)(graphql@16.10.0)\n      '@graphql-tools/utils': 9.2.1(graphql@16.10.0)\n      chalk: 4.1.2\n      debug: 4.4.0\n      fast-glob: 3.3.2\n      graphql: 16.10.0\n      graphql-config: 4.5.0(@types/node@22.9.0)(graphql@16.10.0)\n      graphql-depth-limit: 1.1.0(graphql@16.10.0)\n      lodash.lowercase: 4.3.0\n      tslib: 2.8.1\n    transitivePeerDependencies:\n      - '@babel/core'\n      - '@types/node'\n      - bufferutil\n      - cosmiconfig-toml-loader\n      - encoding\n      - supports-color\n      - utf-8-validate\n\n  '@graphql-tools/batch-execute@8.5.22(graphql@16.10.0)':\n    dependencies:\n      '@graphql-tools/utils': 9.2.1(graphql@16.10.0)\n      dataloader: 2.2.2\n      graphql: 16.10.0\n      tslib: 2.8.1\n      value-or-promise: 1.0.12\n\n  '@graphql-tools/code-file-loader@7.3.23(@babel/core@7.24.7)(graphql@16.10.0)':\n    dependencies:\n      '@graphql-tools/graphql-tag-pluck': 7.5.2(@babel/core@7.24.7)(graphql@16.10.0)\n      '@graphql-tools/utils': 9.2.1(graphql@16.10.0)\n      globby: 11.1.0\n      graphql: 16.10.0\n      tslib: 2.8.1\n      unixify: 1.0.0\n    transitivePeerDependencies:\n      - '@babel/core'\n      - supports-color\n\n  '@graphql-tools/delegate@9.0.35(graphql@16.10.0)':\n    dependencies:\n      '@graphql-tools/batch-execute': 8.5.22(graphql@16.10.0)\n      '@graphql-tools/executor': 0.0.20(graphql@16.10.0)\n      '@graphql-tools/schema': 9.0.19(graphql@16.10.0)\n      '@graphql-tools/utils': 9.2.1(graphql@16.10.0)\n      dataloader: 2.2.2\n      graphql: 16.10.0\n      tslib: 2.8.1\n      value-or-promise: 1.0.12\n\n  '@graphql-tools/executor-graphql-ws@0.0.14(graphql@16.10.0)':\n    dependencies:\n      '@graphql-tools/utils': 9.2.1(graphql@16.10.0)\n      '@repeaterjs/repeater': 3.0.4\n      '@types/ws': 8.5.13\n      graphql: 16.10.0\n      graphql-ws: 5.12.1(graphql@16.10.0)\n      isomorphic-ws: 5.0.0(ws@8.13.0)\n      tslib: 2.8.1\n      ws: 8.13.0\n    transitivePeerDependencies:\n      - bufferutil\n      - utf-8-validate\n\n  '@graphql-tools/executor-http@0.1.10(@types/node@22.9.0)(graphql@16.10.0)':\n    dependencies:\n      '@graphql-tools/utils': 9.2.1(graphql@16.10.0)\n      '@repeaterjs/repeater': 3.0.6\n      '@whatwg-node/fetch': 0.8.8\n      dset: 3.1.4\n      extract-files: 11.0.0\n      graphql: 16.10.0\n      meros: 1.3.0(@types/node@22.9.0)\n      tslib: 2.8.1\n      value-or-promise: 1.0.12\n    transitivePeerDependencies:\n      - '@types/node'\n\n  '@graphql-tools/executor-legacy-ws@0.0.11(graphql@16.10.0)':\n    dependencies:\n      '@graphql-tools/utils': 9.2.1(graphql@16.10.0)\n      '@types/ws': 8.5.13\n      graphql: 16.10.0\n      isomorphic-ws: 5.0.0(ws@8.13.0)\n      tslib: 2.8.1\n      ws: 8.13.0\n    transitivePeerDependencies:\n      - bufferutil\n      - utf-8-validate\n\n  '@graphql-tools/executor@0.0.20(graphql@16.10.0)':\n    dependencies:\n      '@graphql-tools/utils': 9.2.1(graphql@16.10.0)\n      '@graphql-typed-document-node/core': 3.2.0(graphql@16.10.0)\n      '@repeaterjs/repeater': 3.0.6\n      graphql: 16.10.0\n      tslib: 2.8.1\n      value-or-promise: 1.0.12\n\n  '@graphql-tools/graphql-file-loader@7.5.17(graphql@16.10.0)':\n    dependencies:\n      '@graphql-tools/import': 6.7.18(graphql@16.10.0)\n      '@graphql-tools/utils': 9.2.1(graphql@16.10.0)\n      globby: 11.1.0\n      graphql: 16.10.0\n      tslib: 2.8.1\n      unixify: 1.0.0\n\n  '@graphql-tools/graphql-tag-pluck@7.5.2(@babel/core@7.24.7)(graphql@16.10.0)':\n    dependencies:\n      '@babel/parser': 7.26.2\n      '@babel/plugin-syntax-import-assertions': 7.26.0(@babel/core@7.24.7)\n      '@babel/traverse': 7.25.9\n      '@babel/types': 7.26.0\n      '@graphql-tools/utils': 9.2.1(graphql@16.10.0)\n      graphql: 16.10.0\n      tslib: 2.8.1\n    transitivePeerDependencies:\n      - '@babel/core'\n      - supports-color\n\n  '@graphql-tools/import@6.7.18(graphql@16.10.0)':\n    dependencies:\n      '@graphql-tools/utils': 9.2.1(graphql@16.10.0)\n      graphql: 16.10.0\n      resolve-from: 5.0.0\n      tslib: 2.8.1\n\n  '@graphql-tools/json-file-loader@7.4.18(graphql@16.10.0)':\n    dependencies:\n      '@graphql-tools/utils': 9.2.1(graphql@16.10.0)\n      globby: 11.1.0\n      graphql: 16.10.0\n      tslib: 2.8.1\n      unixify: 1.0.0\n\n  '@graphql-tools/load@7.8.14(graphql@16.10.0)':\n    dependencies:\n      '@graphql-tools/schema': 9.0.19(graphql@16.10.0)\n      '@graphql-tools/utils': 9.2.1(graphql@16.10.0)\n      graphql: 16.10.0\n      p-limit: 3.1.0\n      tslib: 2.8.1\n\n  '@graphql-tools/merge@8.4.2(graphql@16.10.0)':\n    dependencies:\n      '@graphql-tools/utils': 9.2.1(graphql@16.10.0)\n      graphql: 16.10.0\n      tslib: 2.8.1\n\n  '@graphql-tools/schema@9.0.19(graphql@16.10.0)':\n    dependencies:\n      '@graphql-tools/merge': 8.4.2(graphql@16.10.0)\n      '@graphql-tools/utils': 9.2.1(graphql@16.10.0)\n      graphql: 16.10.0\n      tslib: 2.8.1\n      value-or-promise: 1.0.12\n\n  '@graphql-tools/url-loader@7.17.18(@types/node@22.9.0)(graphql@16.10.0)':\n    dependencies:\n      '@ardatan/sync-fetch': 0.0.1\n      '@graphql-tools/delegate': 9.0.35(graphql@16.10.0)\n      '@graphql-tools/executor-graphql-ws': 0.0.14(graphql@16.10.0)\n      '@graphql-tools/executor-http': 0.1.10(@types/node@22.9.0)(graphql@16.10.0)\n      '@graphql-tools/executor-legacy-ws': 0.0.11(graphql@16.10.0)\n      '@graphql-tools/utils': 9.2.1(graphql@16.10.0)\n      '@graphql-tools/wrap': 9.4.2(graphql@16.10.0)\n      '@types/ws': 8.5.13\n      '@whatwg-node/fetch': 0.8.8\n      graphql: 16.10.0\n      isomorphic-ws: 5.0.0(ws@8.18.0)\n      tslib: 2.8.1\n      value-or-promise: 1.0.12\n      ws: 8.18.0\n    transitivePeerDependencies:\n      - '@types/node'\n      - bufferutil\n      - encoding\n      - utf-8-validate\n\n  '@graphql-tools/utils@9.2.1(graphql@16.10.0)':\n    dependencies:\n      '@graphql-typed-document-node/core': 3.2.0(graphql@16.10.0)\n      graphql: 16.10.0\n      tslib: 2.8.1\n\n  '@graphql-tools/wrap@9.4.2(graphql@16.10.0)':\n    dependencies:\n      '@graphql-tools/delegate': 9.0.35(graphql@16.10.0)\n      '@graphql-tools/schema': 9.0.19(graphql@16.10.0)\n      '@graphql-tools/utils': 9.2.1(graphql@16.10.0)\n      graphql: 16.10.0\n      tslib: 2.8.1\n      value-or-promise: 1.0.12\n\n  '@graphql-typed-document-node/core@3.2.0(graphql@16.10.0)':\n    dependencies:\n      graphql: 16.10.0\n\n  '@humanfs/core@0.19.1': {}\n\n  '@humanfs/node@0.16.6':\n    dependencies:\n      '@humanfs/core': 0.19.1\n      '@humanwhocodes/retry': 0.3.1\n\n  '@humanwhocodes/module-importer@1.0.1': {}\n\n  '@humanwhocodes/retry@0.3.1': {}\n\n  '@humanwhocodes/retry@0.4.1': {}\n\n  '@isaacs/cliui@8.0.2':\n    dependencies:\n      string-width: 5.1.2\n      string-width-cjs: string-width@4.2.3\n      strip-ansi: 7.1.0\n      strip-ansi-cjs: strip-ansi@6.0.1\n      wrap-ansi: 8.1.0\n      wrap-ansi-cjs: wrap-ansi@7.0.0\n\n  '@istanbuljs/load-nyc-config@1.1.0':\n    dependencies:\n      camelcase: 5.3.1\n      find-up: 4.1.0\n      get-package-type: 0.1.0\n      js-yaml: 3.14.1\n      resolve-from: 5.0.0\n\n  '@istanbuljs/schema@0.1.3': {}\n\n  '@jridgewell/gen-mapping@0.3.5':\n    dependencies:\n      '@jridgewell/set-array': 1.2.1\n      '@jridgewell/sourcemap-codec': 1.4.15\n      '@jridgewell/trace-mapping': 0.3.25\n\n  '@jridgewell/resolve-uri@3.1.2': {}\n\n  '@jridgewell/set-array@1.2.1': {}\n\n  '@jridgewell/sourcemap-codec@1.4.15': {}\n\n  '@jridgewell/sourcemap-codec@1.5.0': {}\n\n  '@jridgewell/trace-mapping@0.3.25':\n    dependencies:\n      '@jridgewell/resolve-uri': 3.1.2\n      '@jridgewell/sourcemap-codec': 1.4.15\n\n  '@jridgewell/trace-mapping@0.3.9':\n    dependencies:\n      '@jridgewell/resolve-uri': 3.1.2\n      '@jridgewell/sourcemap-codec': 1.4.15\n\n  '@manypkg/find-root@1.1.0':\n    dependencies:\n      '@babel/runtime': 7.24.7\n      '@types/node': 12.20.55\n      find-up: 4.1.0\n      fs-extra: 8.1.0\n\n  '@manypkg/get-packages@1.1.3':\n    dependencies:\n      '@babel/runtime': 7.24.7\n      '@changesets/types': 4.1.0\n      '@manypkg/find-root': 1.1.0\n      fs-extra: 8.1.0\n      globby: 11.1.0\n      read-yaml-file: 1.1.0\n\n  '@mapbox/node-pre-gyp@1.0.11':\n    dependencies:\n      detect-libc: 2.0.3\n      https-proxy-agent: 5.0.1\n      make-dir: 3.1.0\n      node-fetch: 2.7.0\n      nopt: 5.0.0\n      npmlog: 5.0.1\n      rimraf: 3.0.2\n      semver: 7.6.2\n      tar: 6.2.1\n    transitivePeerDependencies:\n      - encoding\n      - supports-color\n\n  '@next/eslint-plugin-next@14.2.17':\n    dependencies:\n      glob: 10.3.10\n\n  '@nodelib/fs.scandir@2.1.5':\n    dependencies:\n      '@nodelib/fs.stat': 2.0.5\n      run-parallel: 1.2.0\n\n  '@nodelib/fs.stat@2.0.5': {}\n\n  '@nodelib/fs.walk@1.2.8':\n    dependencies:\n      '@nodelib/fs.scandir': 2.1.5\n      fastq: 1.17.1\n\n  '@nolyfill/is-core-module@1.0.39': {}\n\n  '@peculiar/asn1-schema@2.3.13':\n    dependencies:\n      asn1js: 3.0.5\n      pvtsutils: 1.3.5\n      tslib: 2.8.1\n\n  '@peculiar/json-schema@1.1.12':\n    dependencies:\n      tslib: 2.8.1\n\n  '@peculiar/webcrypto@1.5.0':\n    dependencies:\n      '@peculiar/asn1-schema': 2.3.13\n      '@peculiar/json-schema': 1.1.12\n      pvtsutils: 1.3.5\n      tslib: 2.8.1\n      webcrypto-core: 1.8.1\n\n  '@pkgjs/parseargs@0.11.0':\n    optional: true\n\n  '@pkgr/core@0.1.1': {}\n\n  '@repeaterjs/repeater@3.0.4': {}\n\n  '@repeaterjs/repeater@3.0.6': {}\n\n  '@rollup/pluginutils@4.2.1':\n    dependencies:\n      estree-walker: 2.0.2\n      picomatch: 2.3.1\n\n  '@rollup/rollup-android-arm-eabi@4.29.1':\n    optional: true\n\n  '@rollup/rollup-android-arm64@4.29.1':\n    optional: true\n\n  '@rollup/rollup-darwin-arm64@4.29.1':\n    optional: true\n\n  '@rollup/rollup-darwin-x64@4.29.1':\n    optional: true\n\n  '@rollup/rollup-freebsd-arm64@4.29.1':\n    optional: true\n\n  '@rollup/rollup-freebsd-x64@4.29.1':\n    optional: true\n\n  '@rollup/rollup-linux-arm-gnueabihf@4.29.1':\n    optional: true\n\n  '@rollup/rollup-linux-arm-musleabihf@4.29.1':\n    optional: true\n\n  '@rollup/rollup-linux-arm64-gnu@4.29.1':\n    optional: true\n\n  '@rollup/rollup-linux-arm64-musl@4.29.1':\n    optional: true\n\n  '@rollup/rollup-linux-loongarch64-gnu@4.29.1':\n    optional: true\n\n  '@rollup/rollup-linux-powerpc64le-gnu@4.29.1':\n    optional: true\n\n  '@rollup/rollup-linux-riscv64-gnu@4.29.1':\n    optional: true\n\n  '@rollup/rollup-linux-s390x-gnu@4.29.1':\n    optional: true\n\n  '@rollup/rollup-linux-x64-gnu@4.29.1':\n    optional: true\n\n  '@rollup/rollup-linux-x64-musl@4.29.1':\n    optional: true\n\n  '@rollup/rollup-win32-arm64-msvc@4.29.1':\n    optional: true\n\n  '@rollup/rollup-win32-ia32-msvc@4.29.1':\n    optional: true\n\n  '@rollup/rollup-win32-x64-msvc@4.29.1':\n    optional: true\n\n  '@sindresorhus/merge-streams@2.3.0': {}\n\n  '@sinonjs/commons@2.0.0':\n    dependencies:\n      type-detect: 4.0.8\n\n  '@sinonjs/commons@3.0.1':\n    dependencies:\n      type-detect: 4.0.8\n\n  '@sinonjs/fake-timers@10.3.0':\n    dependencies:\n      '@sinonjs/commons': 3.0.1\n\n  '@sinonjs/fake-timers@11.2.2':\n    dependencies:\n      '@sinonjs/commons': 3.0.1\n\n  '@sinonjs/samsam@8.0.0':\n    dependencies:\n      '@sinonjs/commons': 2.0.0\n      lodash.get: 4.4.2\n      type-detect: 4.0.8\n\n  '@sinonjs/text-encoding@0.7.2': {}\n\n  '@snyk/github-codeowners@1.1.0':\n    dependencies:\n      commander: 4.1.1\n      ignore: 5.3.2\n      p-map: 4.0.0\n\n  '@stylistic/eslint-plugin@2.12.1(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3)':\n    dependencies:\n      '@typescript-eslint/utils': 8.19.0(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3)\n      eslint: 9.17.0(jiti@2.4.0)\n      eslint-visitor-keys: 4.2.0\n      espree: 10.3.0\n      estraverse: 5.3.0\n      picomatch: 4.0.2\n    transitivePeerDependencies:\n      - supports-color\n      - typescript\n\n  '@tsconfig/node10@1.0.11': {}\n\n  '@tsconfig/node12@1.0.11': {}\n\n  '@tsconfig/node14@1.0.3': {}\n\n  '@tsconfig/node16@1.0.4': {}\n\n  '@types/doctrine@0.0.9': {}\n\n  '@types/estree@1.0.6': {}\n\n  '@types/json-schema@7.0.15': {}\n\n  '@types/minimist@1.2.5': {}\n\n  '@types/node@12.20.55': {}\n\n  '@types/node@22.9.0':\n    dependencies:\n      undici-types: 6.19.8\n\n  '@types/normalize-package-data@2.4.4': {}\n\n  '@types/pg@8.11.10':\n    dependencies:\n      '@types/node': 22.9.0\n      pg-protocol: 1.7.0\n      pg-types: 4.0.2\n\n  '@types/semver@7.5.8': {}\n\n  '@types/sinon@10.0.20':\n    dependencies:\n      '@types/sinonjs__fake-timers': 8.1.5\n\n  '@types/sinonjs__fake-timers@8.1.5': {}\n\n  '@types/ws@8.5.13':\n    dependencies:\n      '@types/node': 22.9.0\n\n  '@typescript-eslint/eslint-plugin@8.19.0(@typescript-eslint/parser@8.19.0(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3))(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3)':\n    dependencies:\n      '@eslint-community/regexpp': 4.12.1\n      '@typescript-eslint/parser': 8.19.0(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3)\n      '@typescript-eslint/scope-manager': 8.19.0\n      '@typescript-eslint/type-utils': 8.19.0(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3)\n      '@typescript-eslint/utils': 8.19.0(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3)\n      '@typescript-eslint/visitor-keys': 8.19.0\n      eslint: 9.17.0(jiti@2.4.0)\n      graphemer: 1.4.0\n      ignore: 5.3.2\n      natural-compare: 1.4.0\n      ts-api-utils: 1.4.3(typescript@5.6.3)\n      typescript: 5.6.3\n    transitivePeerDependencies:\n      - supports-color\n\n  '@typescript-eslint/parser@8.19.0(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3)':\n    dependencies:\n      '@typescript-eslint/scope-manager': 8.19.0\n      '@typescript-eslint/types': 8.19.0\n      '@typescript-eslint/typescript-estree': 8.19.0(typescript@5.6.3)\n      '@typescript-eslint/visitor-keys': 8.19.0\n      debug: 4.4.0\n      eslint: 9.17.0(jiti@2.4.0)\n      typescript: 5.6.3\n    transitivePeerDependencies:\n      - supports-color\n\n  '@typescript-eslint/scope-manager@7.18.0':\n    dependencies:\n      '@typescript-eslint/types': 7.18.0\n      '@typescript-eslint/visitor-keys': 7.18.0\n\n  '@typescript-eslint/scope-manager@8.19.0':\n    dependencies:\n      '@typescript-eslint/types': 8.19.0\n      '@typescript-eslint/visitor-keys': 8.19.0\n\n  '@typescript-eslint/type-utils@8.19.0(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3)':\n    dependencies:\n      '@typescript-eslint/typescript-estree': 8.19.0(typescript@5.6.3)\n      '@typescript-eslint/utils': 8.19.0(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3)\n      debug: 4.4.0\n      eslint: 9.17.0(jiti@2.4.0)\n      ts-api-utils: 1.4.3(typescript@5.6.3)\n      typescript: 5.6.3\n    transitivePeerDependencies:\n      - supports-color\n\n  '@typescript-eslint/types@7.18.0': {}\n\n  '@typescript-eslint/types@8.19.0': {}\n\n  '@typescript-eslint/typescript-estree@7.18.0(typescript@5.6.3)':\n    dependencies:\n      '@typescript-eslint/types': 7.18.0\n      '@typescript-eslint/visitor-keys': 7.18.0\n      debug: 4.4.0\n      globby: 11.1.0\n      is-glob: 4.0.3\n      minimatch: 9.0.5\n      semver: 7.6.3\n      ts-api-utils: 1.4.3(typescript@5.6.3)\n    optionalDependencies:\n      typescript: 5.6.3\n    transitivePeerDependencies:\n      - supports-color\n\n  '@typescript-eslint/typescript-estree@8.19.0(typescript@5.6.3)':\n    dependencies:\n      '@typescript-eslint/types': 8.19.0\n      '@typescript-eslint/visitor-keys': 8.19.0\n      debug: 4.4.0\n      fast-glob: 3.3.2\n      is-glob: 4.0.3\n      minimatch: 9.0.5\n      semver: 7.6.3\n      ts-api-utils: 1.4.3(typescript@5.6.3)\n      typescript: 5.6.3\n    transitivePeerDependencies:\n      - supports-color\n\n  '@typescript-eslint/utils@7.18.0(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3)':\n    dependencies:\n      '@eslint-community/eslint-utils': 4.4.1(eslint@9.17.0(jiti@2.4.0))\n      '@typescript-eslint/scope-manager': 7.18.0\n      '@typescript-eslint/types': 7.18.0\n      '@typescript-eslint/typescript-estree': 7.18.0(typescript@5.6.3)\n      eslint: 9.17.0(jiti@2.4.0)\n    transitivePeerDependencies:\n      - supports-color\n      - typescript\n\n  '@typescript-eslint/utils@8.19.0(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3)':\n    dependencies:\n      '@eslint-community/eslint-utils': 4.4.1(eslint@9.17.0(jiti@2.4.0))\n      '@typescript-eslint/scope-manager': 8.19.0\n      '@typescript-eslint/types': 8.19.0\n      '@typescript-eslint/typescript-estree': 8.19.0(typescript@5.6.3)\n      eslint: 9.17.0(jiti@2.4.0)\n      typescript: 5.6.3\n    transitivePeerDependencies:\n      - supports-color\n\n  '@typescript-eslint/visitor-keys@7.18.0':\n    dependencies:\n      '@typescript-eslint/types': 7.18.0\n      eslint-visitor-keys: 3.4.3\n\n  '@typescript-eslint/visitor-keys@8.19.0':\n    dependencies:\n      '@typescript-eslint/types': 8.19.0\n      eslint-visitor-keys: 4.2.0\n\n  '@vercel/nft@0.26.5':\n    dependencies:\n      '@mapbox/node-pre-gyp': 1.0.11\n      '@rollup/pluginutils': 4.2.1\n      acorn: 8.11.3\n      acorn-import-attributes: 1.9.5(acorn@8.11.3)\n      async-sema: 3.1.1\n      bindings: 1.5.0\n      estree-walker: 2.0.2\n      glob: 7.2.3\n      graceful-fs: 4.2.11\n      micromatch: 4.0.7\n      node-gyp-build: 4.8.1\n      resolve-from: 5.0.0\n    transitivePeerDependencies:\n      - encoding\n      - supports-color\n\n  '@vitest/expect@2.1.8':\n    dependencies:\n      '@vitest/spy': 2.1.8\n      '@vitest/utils': 2.1.8\n      chai: 5.1.2\n      tinyrainbow: 1.2.0\n\n  '@vitest/mocker@2.1.8(vite@5.4.11(@types/node@22.9.0))':\n    dependencies:\n      '@vitest/spy': 2.1.8\n      estree-walker: 3.0.3\n      magic-string: 0.30.17\n    optionalDependencies:\n      vite: 5.4.11(@types/node@22.9.0)\n\n  '@vitest/pretty-format@2.1.8':\n    dependencies:\n      tinyrainbow: 1.2.0\n\n  '@vitest/runner@2.1.8':\n    dependencies:\n      '@vitest/utils': 2.1.8\n      pathe: 1.1.2\n\n  '@vitest/snapshot@2.1.8':\n    dependencies:\n      '@vitest/pretty-format': 2.1.8\n      magic-string: 0.30.17\n      pathe: 1.1.2\n\n  '@vitest/spy@2.1.8':\n    dependencies:\n      tinyspy: 3.0.2\n\n  '@vitest/utils@2.1.8':\n    dependencies:\n      '@vitest/pretty-format': 2.1.8\n      loupe: 3.1.2\n      tinyrainbow: 1.2.0\n\n  '@whatwg-node/events@0.0.3': {}\n\n  '@whatwg-node/fetch@0.8.8':\n    dependencies:\n      '@peculiar/webcrypto': 1.5.0\n      '@whatwg-node/node-fetch': 0.3.6\n      busboy: 1.6.0\n      urlpattern-polyfill: 8.0.2\n      web-streams-polyfill: 3.3.3\n\n  '@whatwg-node/node-fetch@0.3.6':\n    dependencies:\n      '@whatwg-node/events': 0.0.3\n      busboy: 1.6.0\n      fast-querystring: 1.1.2\n      fast-url-parser: 1.1.3\n      tslib: 2.8.1\n\n  abbrev@1.1.1: {}\n\n  acorn-globals@1.0.9:\n    dependencies:\n      acorn: 2.7.0\n\n  acorn-import-attributes@1.9.5(acorn@8.11.3):\n    dependencies:\n      acorn: 8.11.3\n\n  acorn-jsx@5.3.2(acorn@8.14.0):\n    dependencies:\n      acorn: 8.14.0\n\n  acorn-walk@8.3.2: {}\n\n  acorn@2.7.0: {}\n\n  acorn@8.11.3: {}\n\n  acorn@8.14.0: {}\n\n  agent-base@6.0.2:\n    dependencies:\n      debug: 4.4.0\n    transitivePeerDependencies:\n      - supports-color\n\n  aggregate-error@3.1.0:\n    dependencies:\n      clean-stack: 2.2.0\n      indent-string: 4.0.0\n\n  ajv@6.12.6:\n    dependencies:\n      fast-deep-equal: 3.1.3\n      fast-json-stable-stringify: 2.1.0\n      json-schema-traverse: 0.4.1\n      uri-js: 4.4.1\n\n  ansi-colors@4.1.3: {}\n\n  ansi-escapes@4.3.2:\n    dependencies:\n      type-fest: 0.21.3\n\n  ansi-regex@5.0.1: {}\n\n  ansi-regex@6.0.1: {}\n\n  ansi-styles@3.2.1:\n    dependencies:\n      color-convert: 1.9.3\n\n  ansi-styles@4.3.0:\n    dependencies:\n      color-convert: 2.0.1\n\n  ansi-styles@6.2.1: {}\n\n  append-transform@2.0.0:\n    dependencies:\n      default-require-extensions: 3.0.1\n\n  aproba@2.0.0: {}\n\n  archy@1.0.0: {}\n\n  are-docs-informative@0.0.2: {}\n\n  are-we-there-yet@2.0.0:\n    dependencies:\n      delegates: 1.0.0\n      readable-stream: 3.6.2\n\n  arg@4.1.3: {}\n\n  argparse@1.0.10:\n    dependencies:\n      sprintf-js: 1.0.3\n\n  argparse@2.0.1: {}\n\n  aria-query@5.3.2: {}\n\n  array-buffer-byte-length@1.0.1:\n    dependencies:\n      call-bind: 1.0.7\n      is-array-buffer: 3.0.4\n\n  array-find-index@1.0.2: {}\n\n  array-includes@3.1.8:\n    dependencies:\n      call-bind: 1.0.7\n      define-properties: 1.2.1\n      es-abstract: 1.23.4\n      es-object-atoms: 1.0.0\n      get-intrinsic: 1.2.4\n      is-string: 1.0.7\n\n  array-timsort@1.0.3: {}\n\n  array-union@2.1.0: {}\n\n  array.prototype.findlast@1.2.5:\n    dependencies:\n      call-bind: 1.0.7\n      define-properties: 1.2.1\n      es-abstract: 1.23.4\n      es-errors: 1.3.0\n      es-object-atoms: 1.0.0\n      es-shim-unscopables: 1.0.2\n\n  array.prototype.flat@1.3.2:\n    dependencies:\n      call-bind: 1.0.7\n      define-properties: 1.2.1\n      es-abstract: 1.23.3\n      es-shim-unscopables: 1.0.2\n\n  array.prototype.flatmap@1.3.2:\n    dependencies:\n      call-bind: 1.0.7\n      define-properties: 1.2.1\n      es-abstract: 1.23.4\n      es-shim-unscopables: 1.0.2\n\n  array.prototype.tosorted@1.1.4:\n    dependencies:\n      call-bind: 1.0.7\n      define-properties: 1.2.1\n      es-abstract: 1.23.4\n      es-errors: 1.3.0\n      es-shim-unscopables: 1.0.2\n\n  arraybuffer.prototype.slice@1.0.3:\n    dependencies:\n      array-buffer-byte-length: 1.0.1\n      call-bind: 1.0.7\n      define-properties: 1.2.1\n      es-abstract: 1.23.3\n      es-errors: 1.3.0\n      get-intrinsic: 1.2.4\n      is-array-buffer: 3.0.4\n      is-shared-array-buffer: 1.0.3\n\n  arrgv@1.0.2: {}\n\n  arrify@1.0.1: {}\n\n  arrify@3.0.0: {}\n\n  asn1@0.2.6:\n    dependencies:\n      safer-buffer: 2.1.2\n\n  asn1js@3.0.5:\n    dependencies:\n      pvtsutils: 1.3.5\n      pvutils: 1.1.3\n      tslib: 2.8.1\n\n  assert-options@0.8.2: {}\n\n  assert-plus@1.0.0: {}\n\n  assertion-error@2.0.1: {}\n\n  ast-types-flow@0.0.8: {}\n\n  ast-types@0.16.1:\n    dependencies:\n      tslib: 2.8.1\n\n  astral-regex@2.0.0: {}\n\n  async-sema@3.1.1: {}\n\n  asynckit@0.4.0: {}\n\n  ava@6.1.3:\n    dependencies:\n      '@vercel/nft': 0.26.5\n      acorn: 8.11.3\n      acorn-walk: 8.3.2\n      ansi-styles: 6.2.1\n      arrgv: 1.0.2\n      arrify: 3.0.0\n      callsites: 4.1.0\n      cbor: 9.0.2\n      chalk: 5.3.0\n      chunkd: 2.0.1\n      ci-info: 4.0.0\n      ci-parallel-vars: 1.0.1\n      cli-truncate: 4.0.0\n      code-excerpt: 4.0.0\n      common-path-prefix: 3.0.0\n      concordance: 5.0.4\n      currently-unhandled: 0.4.1\n      debug: 4.3.5\n      emittery: 1.0.3\n      figures: 6.1.0\n      globby: 14.0.1\n      ignore-by-default: 2.1.0\n      indent-string: 5.0.0\n      is-plain-object: 5.0.0\n      is-promise: 4.0.0\n      matcher: 5.0.0\n      memoize: 10.0.0\n      ms: 2.1.3\n      p-map: 7.0.2\n      package-config: 5.0.0\n      picomatch: 3.0.1\n      plur: 5.1.0\n      pretty-ms: 9.0.0\n      resolve-cwd: 3.0.0\n      stack-utils: 2.0.6\n      strip-ansi: 7.1.0\n      supertap: 3.0.1\n      temp-dir: 3.0.0\n      write-file-atomic: 5.0.1\n      yargs: 17.7.2\n    transitivePeerDependencies:\n      - encoding\n      - supports-color\n\n  available-typed-arrays@1.0.7:\n    dependencies:\n      possible-typed-array-names: 1.0.0\n\n  aws-sign2@0.7.0: {}\n\n  aws4@1.13.2: {}\n\n  axe-core@4.10.2: {}\n\n  axobject-query@4.1.0: {}\n\n  balanced-match@1.0.2: {}\n\n  bcrypt-pbkdf@1.0.2:\n    dependencies:\n      tweetnacl: 0.14.5\n\n  benchmark@2.1.4:\n    dependencies:\n      lodash: 4.17.21\n      platform: 1.3.6\n\n  benny@3.7.1:\n    dependencies:\n      '@arrows/composition': 1.2.2\n      '@arrows/dispatch': 1.0.3\n      '@arrows/multimethod': 1.4.1\n      benchmark: 2.1.4\n      common-tags: 1.8.2\n      fs-extra: 10.1.0\n      json2csv: 5.0.7\n      kleur: 4.1.5\n      log-update: 4.0.0\n\n  better-path-resolve@1.0.0:\n    dependencies:\n      is-windows: 1.0.2\n\n  bindings@1.5.0:\n    dependencies:\n      file-uri-to-path: 1.0.0\n\n  bluebird@2.11.0: {}\n\n  bluebird@3.7.2: {}\n\n  blueimp-md5@2.19.0: {}\n\n  boolean@3.2.0: {}\n\n  brace-expansion@1.1.11:\n    dependencies:\n      balanced-match: 1.0.2\n      concat-map: 0.0.1\n\n  brace-expansion@2.0.1:\n    dependencies:\n      balanced-match: 1.0.2\n\n  braces@3.0.3:\n    dependencies:\n      fill-range: 7.1.1\n\n  breakword@1.0.6:\n    dependencies:\n      wcwidth: 1.0.1\n\n  browser-request@0.3.3: {}\n\n  browserslist@4.23.1:\n    dependencies:\n      caniuse-lite: 1.0.30001632\n      electron-to-chromium: 1.4.798\n      node-releases: 2.0.14\n      update-browserslist-db: 1.0.16(browserslist@4.23.1)\n\n  browserslist@4.24.2:\n    dependencies:\n      caniuse-lite: 1.0.30001680\n      electron-to-chromium: 1.5.57\n      node-releases: 2.0.18\n      update-browserslist-db: 1.1.1(browserslist@4.24.2)\n\n  builtin-modules@3.3.0: {}\n\n  busboy@1.6.0:\n    dependencies:\n      streamsearch: 1.1.0\n\n  cac@6.7.14: {}\n\n  caching-transform@4.0.0:\n    dependencies:\n      hasha: 5.2.2\n      make-dir: 3.1.0\n      package-hash: 4.0.0\n      write-file-atomic: 3.0.3\n\n  call-bind@1.0.7:\n    dependencies:\n      es-define-property: 1.0.0\n      es-errors: 1.3.0\n      function-bind: 1.1.2\n      get-intrinsic: 1.2.4\n      set-function-length: 1.2.2\n\n  callsites@3.1.0: {}\n\n  callsites@4.1.0: {}\n\n  camelcase-keys@6.2.2:\n    dependencies:\n      camelcase: 5.3.1\n      map-obj: 4.3.0\n      quick-lru: 4.0.1\n\n  camelcase@5.3.1: {}\n\n  camelcase@6.3.0: {}\n\n  caniuse-lite@1.0.30001632: {}\n\n  caniuse-lite@1.0.30001680: {}\n\n  caseless@0.12.0: {}\n\n  cbor@9.0.2:\n    dependencies:\n      nofilter: 3.1.0\n\n  chai@5.1.2:\n    dependencies:\n      assertion-error: 2.0.1\n      check-error: 2.1.1\n      deep-eql: 5.0.2\n      loupe: 3.1.2\n      pathval: 2.0.0\n\n  chalk-template@1.1.0:\n    dependencies:\n      chalk: 5.3.0\n\n  chalk@2.4.2:\n    dependencies:\n      ansi-styles: 3.2.1\n      escape-string-regexp: 1.0.5\n      supports-color: 5.5.0\n\n  chalk@4.1.2:\n    dependencies:\n      ansi-styles: 4.3.0\n      supports-color: 7.2.0\n\n  chalk@5.3.0: {}\n\n  chance@1.1.12: {}\n\n  chardet@0.7.0: {}\n\n  check-error@2.1.1: {}\n\n  chownr@2.0.0: {}\n\n  chunkd@2.0.1: {}\n\n  ci-info@3.9.0: {}\n\n  ci-info@4.0.0: {}\n\n  ci-info@4.1.0: {}\n\n  ci-parallel-vars@1.0.1: {}\n\n  clean-regexp@1.0.0:\n    dependencies:\n      escape-string-regexp: 1.0.5\n\n  clean-stack@2.2.0: {}\n\n  clear-module@4.1.2:\n    dependencies:\n      parent-module: 2.0.0\n      resolve-from: 5.0.0\n\n  cli-cursor@3.1.0:\n    dependencies:\n      restore-cursor: 3.1.0\n\n  cli-truncate@4.0.0:\n    dependencies:\n      slice-ansi: 5.0.0\n      string-width: 7.1.0\n\n  cliui@6.0.0:\n    dependencies:\n      string-width: 4.2.3\n      strip-ansi: 6.0.1\n      wrap-ansi: 6.2.0\n\n  cliui@8.0.1:\n    dependencies:\n      string-width: 4.2.3\n      strip-ansi: 6.0.1\n      wrap-ansi: 7.0.0\n\n  clone-regexp@3.0.0:\n    dependencies:\n      is-regexp: 3.1.0\n\n  clone@1.0.4: {}\n\n  code-excerpt@4.0.0:\n    dependencies:\n      convert-to-spaces: 2.0.1\n\n  color-convert@1.9.3:\n    dependencies:\n      color-name: 1.1.3\n\n  color-convert@2.0.1:\n    dependencies:\n      color-name: 1.1.4\n\n  color-name@1.1.3: {}\n\n  color-name@1.1.4: {}\n\n  color-support@1.1.3: {}\n\n  combined-stream@1.0.8:\n    dependencies:\n      delayed-stream: 1.0.0\n\n  commander@12.1.0: {}\n\n  commander@4.1.1: {}\n\n  commander@6.2.1: {}\n\n  comment-json@4.2.5:\n    dependencies:\n      array-timsort: 1.0.3\n      core-util-is: 1.0.3\n      esprima: 4.0.1\n      has-own-prop: 2.0.0\n      repeat-string: 1.6.1\n\n  comment-parser@1.4.1: {}\n\n  common-path-prefix@3.0.0: {}\n\n  common-tags@1.8.2: {}\n\n  commondir@1.0.1: {}\n\n  concat-map@0.0.1: {}\n\n  concordance@5.0.4:\n    dependencies:\n      date-time: 3.1.0\n      esutils: 2.0.3\n      fast-diff: 1.3.0\n      js-string-escape: 1.0.1\n      lodash: 4.17.21\n      md5-hex: 3.0.1\n      semver: 7.6.2\n      well-known-symbols: 2.0.0\n\n  console-control-strings@1.1.0: {}\n\n  contents@5.0.0:\n    dependencies:\n      lodash: 4.17.21\n      sister: 3.0.2\n\n  convert-hrtime@5.0.0: {}\n\n  convert-source-map@1.9.0: {}\n\n  convert-source-map@2.0.0: {}\n\n  convert-to-spaces@2.0.1: {}\n\n  core-js-compat@3.39.0:\n    dependencies:\n      browserslist: 4.24.2\n\n  core-js-pure@3.39.0: {}\n\n  core-util-is@1.0.2: {}\n\n  core-util-is@1.0.3: {}\n\n  cosmiconfig@8.0.0:\n    dependencies:\n      import-fresh: 3.3.0\n      js-yaml: 4.1.0\n      parse-json: 5.2.0\n      path-type: 4.0.0\n\n  crack-json@1.3.0: {}\n\n  create-eslint-index@1.0.0:\n    dependencies:\n      lodash.get: 4.4.2\n\n  create-require@1.1.1: {}\n\n  cross-spawn@5.1.0:\n    dependencies:\n      lru-cache: 4.1.5\n      shebang-command: 1.2.0\n      which: 1.3.1\n\n  cross-spawn@7.0.3:\n    dependencies:\n      path-key: 3.1.1\n      shebang-command: 2.0.0\n      which: 2.0.2\n\n  cross-spawn@7.0.5:\n    dependencies:\n      path-key: 3.1.1\n      shebang-command: 2.0.0\n      which: 2.0.2\n\n  cross-spawn@7.0.6:\n    dependencies:\n      path-key: 3.1.1\n      shebang-command: 2.0.0\n      which: 2.0.2\n\n  cspell-config-lib@8.16.0:\n    dependencies:\n      '@cspell/cspell-types': 8.16.0\n      comment-json: 4.2.5\n      yaml: 2.6.0\n\n  cspell-dictionary@8.16.0:\n    dependencies:\n      '@cspell/cspell-pipe': 8.16.0\n      '@cspell/cspell-types': 8.16.0\n      cspell-trie-lib: 8.16.0\n      fast-equals: 5.0.1\n\n  cspell-gitignore@8.16.0:\n    dependencies:\n      '@cspell/url': 8.16.0\n      cspell-glob: 8.16.0\n      cspell-io: 8.16.0\n      find-up-simple: 1.0.0\n\n  cspell-glob@8.16.0:\n    dependencies:\n      '@cspell/url': 8.16.0\n      micromatch: 4.0.8\n\n  cspell-grammar@8.16.0:\n    dependencies:\n      '@cspell/cspell-pipe': 8.16.0\n      '@cspell/cspell-types': 8.16.0\n\n  cspell-io@8.16.0:\n    dependencies:\n      '@cspell/cspell-service-bus': 8.16.0\n      '@cspell/url': 8.16.0\n\n  cspell-lib@8.16.0:\n    dependencies:\n      '@cspell/cspell-bundled-dicts': 8.16.0\n      '@cspell/cspell-pipe': 8.16.0\n      '@cspell/cspell-resolver': 8.16.0\n      '@cspell/cspell-types': 8.16.0\n      '@cspell/dynamic-import': 8.16.0\n      '@cspell/filetypes': 8.16.0\n      '@cspell/strong-weak-map': 8.16.0\n      '@cspell/url': 8.16.0\n      clear-module: 4.1.2\n      comment-json: 4.2.5\n      cspell-config-lib: 8.16.0\n      cspell-dictionary: 8.16.0\n      cspell-glob: 8.16.0\n      cspell-grammar: 8.16.0\n      cspell-io: 8.16.0\n      cspell-trie-lib: 8.16.0\n      env-paths: 3.0.0\n      fast-equals: 5.0.1\n      gensequence: 7.0.0\n      import-fresh: 3.3.0\n      resolve-from: 5.0.0\n      vscode-languageserver-textdocument: 1.0.12\n      vscode-uri: 3.0.8\n      xdg-basedir: 5.1.0\n\n  cspell-trie-lib@8.16.0:\n    dependencies:\n      '@cspell/cspell-pipe': 8.16.0\n      '@cspell/cspell-types': 8.16.0\n      gensequence: 7.0.0\n\n  cspell@8.16.0:\n    dependencies:\n      '@cspell/cspell-json-reporter': 8.16.0\n      '@cspell/cspell-pipe': 8.16.0\n      '@cspell/cspell-types': 8.16.0\n      '@cspell/dynamic-import': 8.16.0\n      '@cspell/url': 8.16.0\n      chalk: 5.3.0\n      chalk-template: 1.1.0\n      commander: 12.1.0\n      cspell-dictionary: 8.16.0\n      cspell-gitignore: 8.16.0\n      cspell-glob: 8.16.0\n      cspell-io: 8.16.0\n      cspell-lib: 8.16.0\n      fast-json-stable-stringify: 2.1.0\n      file-entry-cache: 9.1.0\n      get-stdin: 9.0.0\n      semver: 7.6.3\n      tinyglobby: 0.2.10\n\n  cssom@0.3.8: {}\n\n  cssstyle@0.2.37:\n    dependencies:\n      cssom: 0.3.8\n\n  csv-generate@3.4.3: {}\n\n  csv-parse@4.16.3: {}\n\n  csv-stringify@5.6.5: {}\n\n  csv@5.5.3:\n    dependencies:\n      csv-generate: 3.4.3\n      csv-parse: 4.16.3\n      csv-stringify: 5.6.5\n      stream-transform: 2.1.3\n\n  currently-unhandled@0.4.1:\n    dependencies:\n      array-find-index: 1.0.2\n\n  damerau-levenshtein@1.0.8: {}\n\n  dashdash@1.14.1:\n    dependencies:\n      assert-plus: 1.0.0\n\n  data-view-buffer@1.0.1:\n    dependencies:\n      call-bind: 1.0.7\n      es-errors: 1.3.0\n      is-data-view: 1.0.1\n\n  data-view-byte-length@1.0.1:\n    dependencies:\n      call-bind: 1.0.7\n      es-errors: 1.3.0\n      is-data-view: 1.0.1\n\n  data-view-byte-offset@1.0.0:\n    dependencies:\n      call-bind: 1.0.7\n      es-errors: 1.3.0\n      is-data-view: 1.0.1\n\n  dataloader@1.4.0: {}\n\n  dataloader@2.2.2: {}\n\n  date-time@3.1.0:\n    dependencies:\n      time-zone: 1.0.0\n\n  deadlink@1.1.3:\n    dependencies:\n      bluebird: 2.11.0\n      jsdom: 6.5.1\n      url-regexp: 1.0.2\n\n  debug@3.2.7:\n    dependencies:\n      ms: 2.1.3\n\n  debug@4.3.5:\n    dependencies:\n      ms: 2.1.2\n\n  debug@4.4.0:\n    dependencies:\n      ms: 2.1.3\n\n  decamelize-keys@1.1.1:\n    dependencies:\n      decamelize: 1.2.0\n      map-obj: 1.0.1\n\n  decamelize@1.2.0: {}\n\n  deep-eql@5.0.2: {}\n\n  deep-is@0.1.4: {}\n\n  default-require-extensions@3.0.1:\n    dependencies:\n      strip-bom: 4.0.0\n\n  defaults@1.0.4:\n    dependencies:\n      clone: 1.0.4\n\n  define-data-property@1.1.4:\n    dependencies:\n      es-define-property: 1.0.0\n      es-errors: 1.3.0\n      gopd: 1.0.1\n\n  define-properties@1.2.1:\n    dependencies:\n      define-data-property: 1.1.4\n      has-property-descriptors: 1.0.2\n      object-keys: 1.1.1\n\n  delayed-stream@1.0.0: {}\n\n  delegates@1.0.0: {}\n\n  detect-indent@6.1.0: {}\n\n  detect-libc@2.0.3: {}\n\n  diff@4.0.2: {}\n\n  diff@5.2.0: {}\n\n  dir-glob@3.0.1:\n    dependencies:\n      path-type: 4.0.0\n\n  doctrine@2.1.0:\n    dependencies:\n      esutils: 2.0.3\n\n  doctrine@3.0.0:\n    dependencies:\n      esutils: 2.0.3\n\n  dom-serializer@0.2.2:\n    dependencies:\n      domelementtype: 2.3.0\n      entities: 2.2.0\n\n  domelementtype@1.3.1: {}\n\n  domelementtype@2.3.0: {}\n\n  domhandler@2.4.2:\n    dependencies:\n      domelementtype: 1.3.1\n\n  domutils@1.7.0:\n    dependencies:\n      dom-serializer: 0.2.2\n      domelementtype: 1.3.1\n\n  dotenv@8.6.0: {}\n\n  dset@3.1.4: {}\n\n  eastasianwidth@0.2.0: {}\n\n  easy-table@1.2.0:\n    dependencies:\n      ansi-regex: 5.0.1\n    optionalDependencies:\n      wcwidth: 1.0.1\n\n  ecc-jsbn@0.1.2:\n    dependencies:\n      jsbn: 0.1.1\n      safer-buffer: 2.1.2\n\n  electron-to-chromium@1.4.798: {}\n\n  electron-to-chromium@1.5.57: {}\n\n  emittery@1.0.3: {}\n\n  emoji-regex@10.3.0: {}\n\n  emoji-regex@8.0.0: {}\n\n  emoji-regex@9.2.2: {}\n\n  enhance-visitors@1.0.0:\n    dependencies:\n      lodash: 4.17.21\n\n  enhanced-resolve@5.17.1:\n    dependencies:\n      graceful-fs: 4.2.11\n      tapable: 2.2.1\n\n  enhanced-resolve@5.18.0:\n    dependencies:\n      graceful-fs: 4.2.11\n      tapable: 2.2.1\n\n  enquirer@2.4.1:\n    dependencies:\n      ansi-colors: 4.1.3\n      strip-ansi: 6.0.1\n\n  entities@1.1.2: {}\n\n  entities@2.2.0: {}\n\n  env-paths@3.0.0: {}\n\n  error-ex@1.3.2:\n    dependencies:\n      is-arrayish: 0.2.1\n\n  es-abstract@1.23.3:\n    dependencies:\n      array-buffer-byte-length: 1.0.1\n      arraybuffer.prototype.slice: 1.0.3\n      available-typed-arrays: 1.0.7\n      call-bind: 1.0.7\n      data-view-buffer: 1.0.1\n      data-view-byte-length: 1.0.1\n      data-view-byte-offset: 1.0.0\n      es-define-property: 1.0.0\n      es-errors: 1.3.0\n      es-object-atoms: 1.0.0\n      es-set-tostringtag: 2.0.3\n      es-to-primitive: 1.2.1\n      function.prototype.name: 1.1.6\n      get-intrinsic: 1.2.4\n      get-symbol-description: 1.0.2\n      globalthis: 1.0.4\n      gopd: 1.0.1\n      has-property-descriptors: 1.0.2\n      has-proto: 1.0.3\n      has-symbols: 1.0.3\n      hasown: 2.0.2\n      internal-slot: 1.0.7\n      is-array-buffer: 3.0.4\n      is-callable: 1.2.7\n      is-data-view: 1.0.1\n      is-negative-zero: 2.0.3\n      is-regex: 1.1.4\n      is-shared-array-buffer: 1.0.3\n      is-string: 1.0.7\n      is-typed-array: 1.1.13\n      is-weakref: 1.0.2\n      object-inspect: 1.13.1\n      object-keys: 1.1.1\n      object.assign: 4.1.5\n      regexp.prototype.flags: 1.5.2\n      safe-array-concat: 1.1.2\n      safe-regex-test: 1.0.3\n      string.prototype.trim: 1.2.9\n      string.prototype.trimend: 1.0.8\n      string.prototype.trimstart: 1.0.8\n      typed-array-buffer: 1.0.2\n      typed-array-byte-length: 1.0.1\n      typed-array-byte-offset: 1.0.2\n      typed-array-length: 1.0.6\n      unbox-primitive: 1.0.2\n      which-typed-array: 1.1.15\n\n  es-abstract@1.23.4:\n    dependencies:\n      array-buffer-byte-length: 1.0.1\n      arraybuffer.prototype.slice: 1.0.3\n      available-typed-arrays: 1.0.7\n      call-bind: 1.0.7\n      data-view-buffer: 1.0.1\n      data-view-byte-length: 1.0.1\n      data-view-byte-offset: 1.0.0\n      es-define-property: 1.0.0\n      es-errors: 1.3.0\n      es-object-atoms: 1.0.0\n      es-set-tostringtag: 2.0.3\n      es-to-primitive: 1.2.1\n      function.prototype.name: 1.1.6\n      get-intrinsic: 1.2.4\n      get-symbol-description: 1.0.2\n      globalthis: 1.0.4\n      gopd: 1.0.1\n      has-property-descriptors: 1.0.2\n      has-proto: 1.0.3\n      has-symbols: 1.0.3\n      hasown: 2.0.2\n      internal-slot: 1.0.7\n      is-array-buffer: 3.0.4\n      is-callable: 1.2.7\n      is-data-view: 1.0.1\n      is-negative-zero: 2.0.3\n      is-regex: 1.1.4\n      is-shared-array-buffer: 1.0.3\n      is-string: 1.0.7\n      is-typed-array: 1.1.13\n      is-weakref: 1.0.2\n      object-inspect: 1.13.3\n      object-keys: 1.1.1\n      object.assign: 4.1.5\n      regexp.prototype.flags: 1.5.3\n      safe-array-concat: 1.1.2\n      safe-regex-test: 1.0.3\n      string.prototype.trim: 1.2.9\n      string.prototype.trimend: 1.0.8\n      string.prototype.trimstart: 1.0.8\n      typed-array-buffer: 1.0.2\n      typed-array-byte-length: 1.0.1\n      typed-array-byte-offset: 1.0.2\n      typed-array-length: 1.0.6\n      unbox-primitive: 1.0.2\n      which-typed-array: 1.1.15\n\n  es-define-property@1.0.0:\n    dependencies:\n      get-intrinsic: 1.2.4\n\n  es-errors@1.3.0: {}\n\n  es-iterator-helpers@1.2.0:\n    dependencies:\n      call-bind: 1.0.7\n      define-properties: 1.2.1\n      es-abstract: 1.23.4\n      es-errors: 1.3.0\n      es-set-tostringtag: 2.0.3\n      function-bind: 1.1.2\n      get-intrinsic: 1.2.4\n      globalthis: 1.0.4\n      gopd: 1.0.1\n      has-property-descriptors: 1.0.2\n      has-proto: 1.0.3\n      has-symbols: 1.0.3\n      internal-slot: 1.0.7\n      iterator.prototype: 1.1.3\n      safe-array-concat: 1.1.2\n\n  es-module-lexer@1.6.0: {}\n\n  es-object-atoms@1.0.0:\n    dependencies:\n      es-errors: 1.3.0\n\n  es-set-tostringtag@2.0.3:\n    dependencies:\n      get-intrinsic: 1.2.4\n      has-tostringtag: 1.0.2\n      hasown: 2.0.2\n\n  es-shim-unscopables@1.0.2:\n    dependencies:\n      hasown: 2.0.2\n\n  es-to-primitive@1.2.1:\n    dependencies:\n      is-callable: 1.2.7\n      is-date-object: 1.0.5\n      is-symbol: 1.0.4\n\n  es6-error@4.1.1: {}\n\n  esbuild@0.21.5:\n    optionalDependencies:\n      '@esbuild/aix-ppc64': 0.21.5\n      '@esbuild/android-arm': 0.21.5\n      '@esbuild/android-arm64': 0.21.5\n      '@esbuild/android-x64': 0.21.5\n      '@esbuild/darwin-arm64': 0.21.5\n      '@esbuild/darwin-x64': 0.21.5\n      '@esbuild/freebsd-arm64': 0.21.5\n      '@esbuild/freebsd-x64': 0.21.5\n      '@esbuild/linux-arm': 0.21.5\n      '@esbuild/linux-arm64': 0.21.5\n      '@esbuild/linux-ia32': 0.21.5\n      '@esbuild/linux-loong64': 0.21.5\n      '@esbuild/linux-mips64el': 0.21.5\n      '@esbuild/linux-ppc64': 0.21.5\n      '@esbuild/linux-riscv64': 0.21.5\n      '@esbuild/linux-s390x': 0.21.5\n      '@esbuild/linux-x64': 0.21.5\n      '@esbuild/netbsd-x64': 0.21.5\n      '@esbuild/openbsd-x64': 0.21.5\n      '@esbuild/sunos-x64': 0.21.5\n      '@esbuild/win32-arm64': 0.21.5\n      '@esbuild/win32-ia32': 0.21.5\n      '@esbuild/win32-x64': 0.21.5\n\n  escalade@3.1.2: {}\n\n  escalade@3.2.0: {}\n\n  escape-string-regexp@1.0.5: {}\n\n  escape-string-regexp@2.0.0: {}\n\n  escape-string-regexp@4.0.0: {}\n\n  escape-string-regexp@5.0.0: {}\n\n  escodegen@1.14.3:\n    dependencies:\n      esprima: 4.0.1\n      estraverse: 4.3.0\n      esutils: 2.0.3\n      optionator: 0.8.3\n    optionalDependencies:\n      source-map: 0.6.1\n\n  eslint-ast-utils@1.1.0:\n    dependencies:\n      lodash.get: 4.4.2\n      lodash.zip: 4.2.0\n\n  eslint-compat-utils@0.5.1(eslint@9.17.0(jiti@2.4.0)):\n    dependencies:\n      eslint: 9.17.0(jiti@2.4.0)\n      semver: 7.6.3\n\n  eslint-compat-utils@0.6.0(eslint@9.17.0(jiti@2.4.0)):\n    dependencies:\n      eslint: 9.17.0(jiti@2.4.0)\n      semver: 7.6.3\n\n  eslint-config-canonical@44.3.36(@babel/core@7.24.7)(@types/node@22.9.0)(eslint-plugin-import-x@4.6.1(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3))(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3)(vitest@2.1.8(@types/node@22.9.0)(jsdom@6.5.1)):\n    dependencies:\n      '@graphql-eslint/eslint-plugin': 3.20.1(@babel/core@7.24.7)(@types/node@22.9.0)(graphql@16.10.0)\n      '@next/eslint-plugin-next': 14.2.17\n      '@stylistic/eslint-plugin': 2.12.1(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3)\n      '@typescript-eslint/eslint-plugin': 8.19.0(@typescript-eslint/parser@8.19.0(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3))(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3)\n      '@typescript-eslint/parser': 8.19.0(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3)\n      eslint: 9.17.0(jiti@2.4.0)\n      eslint-config-prettier: 9.1.0(eslint@9.17.0(jiti@2.4.0))\n      eslint-import-resolver-typescript: 3.7.0(eslint-plugin-import-x@4.6.1(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3))(eslint-plugin-import-x@4.6.1(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3))(eslint@9.17.0(jiti@2.4.0))\n      eslint-plugin-ava: 15.0.1(eslint@9.17.0(jiti@2.4.0))\n      eslint-plugin-canonical: 5.1.2(@typescript-eslint/parser@8.19.0(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3))(eslint-plugin-import-x@4.6.1(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3))(eslint-plugin-import-x@4.6.1(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3))(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3)\n      eslint-plugin-cypress: 4.1.0(eslint@9.17.0(jiti@2.4.0))\n      eslint-plugin-eslint-comments: 3.2.0(eslint@9.17.0(jiti@2.4.0))\n      eslint-plugin-fp: 2.3.0(eslint@9.17.0(jiti@2.4.0))\n      eslint-plugin-import: eslint-plugin-import-x@4.6.1(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3)\n      eslint-plugin-jest: 28.9.0(@typescript-eslint/eslint-plugin@8.19.0(@typescript-eslint/parser@8.19.0(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3))(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3))(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3)\n      eslint-plugin-jsdoc: 50.6.1(eslint@9.17.0(jiti@2.4.0))\n      eslint-plugin-jsonc: 2.18.2(eslint@9.17.0(jiti@2.4.0))\n      eslint-plugin-jsx-a11y: 6.10.2(eslint@9.17.0(jiti@2.4.0))\n      eslint-plugin-lodash: 8.0.0(eslint@9.17.0(jiti@2.4.0))\n      eslint-plugin-mocha: 10.5.0(eslint@9.17.0(jiti@2.4.0))\n      eslint-plugin-modules-newline: 0.0.6\n      eslint-plugin-n: 17.15.1(eslint@9.17.0(jiti@2.4.0))\n      eslint-plugin-perfectionist: 4.5.0(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3)\n      eslint-plugin-prettier: 5.2.1(eslint-config-prettier@9.1.0(eslint@9.17.0(jiti@2.4.0)))(eslint@9.17.0(jiti@2.4.0))(prettier@3.4.2)\n      eslint-plugin-promise: 7.2.1(eslint@9.17.0(jiti@2.4.0))\n      eslint-plugin-react: 7.37.2(eslint@9.17.0(jiti@2.4.0))\n      eslint-plugin-react-hooks: 5.1.0(eslint@9.17.0(jiti@2.4.0))\n      eslint-plugin-regexp: 2.7.0(eslint@9.17.0(jiti@2.4.0))\n      eslint-plugin-unicorn: 56.0.1(eslint@9.17.0(jiti@2.4.0))\n      eslint-plugin-vitest: 0.5.4(@typescript-eslint/eslint-plugin@8.19.0(@typescript-eslint/parser@8.19.0(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3))(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3))(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3)(vitest@2.1.8(@types/node@22.9.0)(jsdom@6.5.1))\n      eslint-plugin-yml: 1.16.0(eslint@9.17.0(jiti@2.4.0))\n      eslint-plugin-zod: 1.4.0(eslint@9.17.0(jiti@2.4.0))\n      globals: 15.14.0\n      graphql: 16.10.0\n      prettier: 3.4.2\n      ramda: 0.30.1\n      yaml-eslint-parser: 1.2.3\n    transitivePeerDependencies:\n      - '@babel/core'\n      - '@eslint/json'\n      - '@types/eslint'\n      - '@types/node'\n      - bufferutil\n      - cosmiconfig-toml-loader\n      - encoding\n      - eslint-import-resolver-node\n      - eslint-import-resolver-webpack\n      - eslint-plugin-import-x\n      - jest\n      - re2\n      - supports-color\n      - typescript\n      - utf-8-validate\n      - vitest\n\n  eslint-config-prettier@9.1.0(eslint@9.17.0(jiti@2.4.0)):\n    dependencies:\n      eslint: 9.17.0(jiti@2.4.0)\n\n  eslint-import-resolver-node@0.3.9:\n    dependencies:\n      debug: 3.2.7\n      is-core-module: 2.16.1\n      resolve: 1.22.10\n    transitivePeerDependencies:\n      - supports-color\n\n  eslint-import-resolver-typescript@3.7.0(eslint-plugin-import-x@4.6.1(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3))(eslint-plugin-import-x@4.6.1(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3))(eslint@9.17.0(jiti@2.4.0)):\n    dependencies:\n      '@nolyfill/is-core-module': 1.0.39\n      debug: 4.4.0\n      enhanced-resolve: 5.18.0\n      eslint: 9.17.0(jiti@2.4.0)\n      fast-glob: 3.3.2\n      get-tsconfig: 4.8.1\n      is-bun-module: 1.2.1\n      is-glob: 4.0.3\n      stable-hash: 0.0.4\n    optionalDependencies:\n      eslint-plugin-import: eslint-plugin-import-x@4.6.1(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3)\n      eslint-plugin-import-x: 4.6.1(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3)\n    transitivePeerDependencies:\n      - supports-color\n\n  eslint-json-compat-utils@0.2.1(eslint@9.17.0(jiti@2.4.0))(jsonc-eslint-parser@2.4.0):\n    dependencies:\n      eslint: 9.17.0(jiti@2.4.0)\n      esquery: 1.6.0\n      jsonc-eslint-parser: 2.4.0\n\n  eslint-module-utils@2.12.0(@typescript-eslint/parser@8.19.0(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3))(eslint-import-resolver-typescript@3.7.0(eslint-plugin-import-x@4.6.1(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3))(eslint-plugin-import-x@4.6.1(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3))(eslint@9.17.0(jiti@2.4.0)))(eslint@9.17.0(jiti@2.4.0)):\n    dependencies:\n      debug: 3.2.7\n    optionalDependencies:\n      '@typescript-eslint/parser': 8.19.0(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3)\n      eslint: 9.17.0(jiti@2.4.0)\n      eslint-import-resolver-typescript: 3.7.0(eslint-plugin-import-x@4.6.1(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3))(eslint-plugin-import-x@4.6.1(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3))(eslint@9.17.0(jiti@2.4.0))\n    transitivePeerDependencies:\n      - supports-color\n\n  eslint-plugin-ava@15.0.1(eslint@9.17.0(jiti@2.4.0)):\n    dependencies:\n      enhance-visitors: 1.0.0\n      eslint: 9.17.0(jiti@2.4.0)\n      eslint-utils: 3.0.0(eslint@9.17.0(jiti@2.4.0))\n      espree: 9.6.1\n      espurify: 2.1.1\n      import-modules: 2.1.0\n      micro-spelling-correcter: 1.1.1\n      pkg-dir: 5.0.0\n      resolve-from: 5.0.0\n\n  eslint-plugin-canonical@5.1.2(@typescript-eslint/parser@8.19.0(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3))(eslint-plugin-import-x@4.6.1(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3))(eslint-plugin-import-x@4.6.1(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3))(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3):\n    dependencies:\n      '@typescript-eslint/utils': 8.19.0(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3)\n      array-includes: 3.1.8\n      chance: 1.1.12\n      debug: 4.4.0\n      eslint-import-resolver-typescript: 3.7.0(eslint-plugin-import-x@4.6.1(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3))(eslint-plugin-import-x@4.6.1(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3))(eslint@9.17.0(jiti@2.4.0))\n      eslint-module-utils: 2.12.0(@typescript-eslint/parser@8.19.0(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3))(eslint-import-resolver-typescript@3.7.0(eslint-plugin-import-x@4.6.1(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3))(eslint-plugin-import-x@4.6.1(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3))(eslint@9.17.0(jiti@2.4.0)))(eslint@9.17.0(jiti@2.4.0))\n      gitdown: 4.1.1\n      is-get-set-prop: 1.0.0\n      is-js-type: 2.0.0\n      is-obj-prop: 1.0.0\n      is-proto-prop: 2.0.0\n      lodash: 4.17.21\n      natural-orderby: 5.0.0\n      recast: 0.23.9\n      roarr: 7.21.1\n      tsconfig-paths: 4.2.0\n      xregexp: 5.1.1\n    transitivePeerDependencies:\n      - '@typescript-eslint/parser'\n      - eslint\n      - eslint-import-resolver-node\n      - eslint-import-resolver-webpack\n      - eslint-plugin-import\n      - eslint-plugin-import-x\n      - re2\n      - supports-color\n      - typescript\n\n  eslint-plugin-cypress@4.1.0(eslint@9.17.0(jiti@2.4.0)):\n    dependencies:\n      eslint: 9.17.0(jiti@2.4.0)\n      globals: 15.14.0\n\n  eslint-plugin-es-x@7.8.0(eslint@9.17.0(jiti@2.4.0)):\n    dependencies:\n      '@eslint-community/eslint-utils': 4.4.1(eslint@9.17.0(jiti@2.4.0))\n      '@eslint-community/regexpp': 4.12.1\n      eslint: 9.17.0(jiti@2.4.0)\n      eslint-compat-utils: 0.5.1(eslint@9.17.0(jiti@2.4.0))\n\n  eslint-plugin-eslint-comments@3.2.0(eslint@9.17.0(jiti@2.4.0)):\n    dependencies:\n      escape-string-regexp: 1.0.5\n      eslint: 9.17.0(jiti@2.4.0)\n      ignore: 5.3.2\n\n  eslint-plugin-fp@2.3.0(eslint@9.17.0(jiti@2.4.0)):\n    dependencies:\n      create-eslint-index: 1.0.0\n      eslint: 9.17.0(jiti@2.4.0)\n      eslint-ast-utils: 1.1.0\n      lodash: 4.17.21\n      req-all: 0.1.0\n\n  eslint-plugin-import-x@4.6.1(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3):\n    dependencies:\n      '@types/doctrine': 0.0.9\n      '@typescript-eslint/scope-manager': 8.19.0\n      '@typescript-eslint/utils': 8.19.0(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3)\n      debug: 4.4.0\n      doctrine: 3.0.0\n      enhanced-resolve: 5.18.0\n      eslint: 9.17.0(jiti@2.4.0)\n      eslint-import-resolver-node: 0.3.9\n      get-tsconfig: 4.8.1\n      is-glob: 4.0.3\n      minimatch: 9.0.5\n      semver: 7.6.3\n      stable-hash: 0.0.4\n      tslib: 2.8.1\n    transitivePeerDependencies:\n      - supports-color\n      - typescript\n\n  eslint-plugin-jest@28.9.0(@typescript-eslint/eslint-plugin@8.19.0(@typescript-eslint/parser@8.19.0(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3))(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3))(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3):\n    dependencies:\n      '@typescript-eslint/utils': 8.19.0(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3)\n      eslint: 9.17.0(jiti@2.4.0)\n    optionalDependencies:\n      '@typescript-eslint/eslint-plugin': 8.19.0(@typescript-eslint/parser@8.19.0(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3))(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3)\n    transitivePeerDependencies:\n      - supports-color\n      - typescript\n\n  eslint-plugin-jsdoc@50.6.1(eslint@9.17.0(jiti@2.4.0)):\n    dependencies:\n      '@es-joy/jsdoccomment': 0.49.0\n      are-docs-informative: 0.0.2\n      comment-parser: 1.4.1\n      debug: 4.4.0\n      escape-string-regexp: 4.0.0\n      eslint: 9.17.0(jiti@2.4.0)\n      espree: 10.3.0\n      esquery: 1.6.0\n      parse-imports: 2.2.1\n      semver: 7.6.3\n      spdx-expression-parse: 4.0.0\n      synckit: 0.9.2\n    transitivePeerDependencies:\n      - supports-color\n\n  eslint-plugin-jsonc@2.18.2(eslint@9.17.0(jiti@2.4.0)):\n    dependencies:\n      '@eslint-community/eslint-utils': 4.4.1(eslint@9.17.0(jiti@2.4.0))\n      eslint: 9.17.0(jiti@2.4.0)\n      eslint-compat-utils: 0.6.0(eslint@9.17.0(jiti@2.4.0))\n      eslint-json-compat-utils: 0.2.1(eslint@9.17.0(jiti@2.4.0))(jsonc-eslint-parser@2.4.0)\n      espree: 9.6.1\n      graphemer: 1.4.0\n      jsonc-eslint-parser: 2.4.0\n      natural-compare: 1.4.0\n      synckit: 0.6.2\n    transitivePeerDependencies:\n      - '@eslint/json'\n\n  eslint-plugin-jsx-a11y@6.10.2(eslint@9.17.0(jiti@2.4.0)):\n    dependencies:\n      aria-query: 5.3.2\n      array-includes: 3.1.8\n      array.prototype.flatmap: 1.3.2\n      ast-types-flow: 0.0.8\n      axe-core: 4.10.2\n      axobject-query: 4.1.0\n      damerau-levenshtein: 1.0.8\n      emoji-regex: 9.2.2\n      eslint: 9.17.0(jiti@2.4.0)\n      hasown: 2.0.2\n      jsx-ast-utils: 3.3.5\n      language-tags: 1.0.9\n      minimatch: 3.1.2\n      object.fromentries: 2.0.8\n      safe-regex-test: 1.0.3\n      string.prototype.includes: 2.0.1\n\n  eslint-plugin-lodash@8.0.0(eslint@9.17.0(jiti@2.4.0)):\n    dependencies:\n      eslint: 9.17.0(jiti@2.4.0)\n      lodash: 4.17.21\n\n  eslint-plugin-mocha@10.5.0(eslint@9.17.0(jiti@2.4.0)):\n    dependencies:\n      eslint: 9.17.0(jiti@2.4.0)\n      eslint-utils: 3.0.0(eslint@9.17.0(jiti@2.4.0))\n      globals: 13.24.0\n      rambda: 7.5.0\n\n  eslint-plugin-modules-newline@0.0.6:\n    dependencies:\n      requireindex: 1.1.0\n\n  eslint-plugin-n@17.15.1(eslint@9.17.0(jiti@2.4.0)):\n    dependencies:\n      '@eslint-community/eslint-utils': 4.4.1(eslint@9.17.0(jiti@2.4.0))\n      enhanced-resolve: 5.18.0\n      eslint: 9.17.0(jiti@2.4.0)\n      eslint-plugin-es-x: 7.8.0(eslint@9.17.0(jiti@2.4.0))\n      get-tsconfig: 4.8.1\n      globals: 15.14.0\n      ignore: 5.3.2\n      minimatch: 9.0.5\n      semver: 7.6.3\n\n  eslint-plugin-perfectionist@4.5.0(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3):\n    dependencies:\n      '@typescript-eslint/types': 8.19.0\n      '@typescript-eslint/utils': 8.19.0(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3)\n      eslint: 9.17.0(jiti@2.4.0)\n      natural-orderby: 5.0.0\n    transitivePeerDependencies:\n      - supports-color\n      - typescript\n\n  eslint-plugin-prettier@5.2.1(eslint-config-prettier@9.1.0(eslint@9.17.0(jiti@2.4.0)))(eslint@9.17.0(jiti@2.4.0))(prettier@3.4.2):\n    dependencies:\n      eslint: 9.17.0(jiti@2.4.0)\n      prettier: 3.4.2\n      prettier-linter-helpers: 1.0.0\n      synckit: 0.9.2\n    optionalDependencies:\n      eslint-config-prettier: 9.1.0(eslint@9.17.0(jiti@2.4.0))\n\n  eslint-plugin-promise@7.2.1(eslint@9.17.0(jiti@2.4.0)):\n    dependencies:\n      '@eslint-community/eslint-utils': 4.4.1(eslint@9.17.0(jiti@2.4.0))\n      eslint: 9.17.0(jiti@2.4.0)\n\n  eslint-plugin-react-hooks@5.1.0(eslint@9.17.0(jiti@2.4.0)):\n    dependencies:\n      eslint: 9.17.0(jiti@2.4.0)\n\n  eslint-plugin-react@7.37.2(eslint@9.17.0(jiti@2.4.0)):\n    dependencies:\n      array-includes: 3.1.8\n      array.prototype.findlast: 1.2.5\n      array.prototype.flatmap: 1.3.2\n      array.prototype.tosorted: 1.1.4\n      doctrine: 2.1.0\n      es-iterator-helpers: 1.2.0\n      eslint: 9.17.0(jiti@2.4.0)\n      estraverse: 5.3.0\n      hasown: 2.0.2\n      jsx-ast-utils: 3.3.5\n      minimatch: 3.1.2\n      object.entries: 1.1.8\n      object.fromentries: 2.0.8\n      object.values: 1.2.0\n      prop-types: 15.8.1\n      resolve: 2.0.0-next.5\n      semver: 6.3.1\n      string.prototype.matchall: 4.0.11\n      string.prototype.repeat: 1.0.0\n\n  eslint-plugin-regexp@2.7.0(eslint@9.17.0(jiti@2.4.0)):\n    dependencies:\n      '@eslint-community/eslint-utils': 4.4.1(eslint@9.17.0(jiti@2.4.0))\n      '@eslint-community/regexpp': 4.12.1\n      comment-parser: 1.4.1\n      eslint: 9.17.0(jiti@2.4.0)\n      jsdoc-type-pratt-parser: 4.1.0\n      refa: 0.12.1\n      regexp-ast-analysis: 0.7.1\n      scslre: 0.3.0\n\n  eslint-plugin-unicorn@56.0.1(eslint@9.17.0(jiti@2.4.0)):\n    dependencies:\n      '@babel/helper-validator-identifier': 7.25.9\n      '@eslint-community/eslint-utils': 4.4.1(eslint@9.17.0(jiti@2.4.0))\n      ci-info: 4.1.0\n      clean-regexp: 1.0.0\n      core-js-compat: 3.39.0\n      eslint: 9.17.0(jiti@2.4.0)\n      esquery: 1.6.0\n      globals: 15.14.0\n      indent-string: 4.0.0\n      is-builtin-module: 3.2.1\n      jsesc: 3.0.2\n      pluralize: 8.0.0\n      read-pkg-up: 7.0.1\n      regexp-tree: 0.1.27\n      regjsparser: 0.10.0\n      semver: 7.6.3\n      strip-indent: 3.0.0\n\n  eslint-plugin-vitest@0.5.4(@typescript-eslint/eslint-plugin@8.19.0(@typescript-eslint/parser@8.19.0(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3))(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3))(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3)(vitest@2.1.8(@types/node@22.9.0)(jsdom@6.5.1)):\n    dependencies:\n      '@typescript-eslint/utils': 7.18.0(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3)\n      eslint: 9.17.0(jiti@2.4.0)\n    optionalDependencies:\n      '@typescript-eslint/eslint-plugin': 8.19.0(@typescript-eslint/parser@8.19.0(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3))(eslint@9.17.0(jiti@2.4.0))(typescript@5.6.3)\n      vitest: 2.1.8(@types/node@22.9.0)(jsdom@6.5.1)\n    transitivePeerDependencies:\n      - supports-color\n      - typescript\n\n  eslint-plugin-yml@1.16.0(eslint@9.17.0(jiti@2.4.0)):\n    dependencies:\n      debug: 4.4.0\n      eslint: 9.17.0(jiti@2.4.0)\n      eslint-compat-utils: 0.6.0(eslint@9.17.0(jiti@2.4.0))\n      lodash: 4.17.21\n      natural-compare: 1.4.0\n      yaml-eslint-parser: 1.2.3\n    transitivePeerDependencies:\n      - supports-color\n\n  eslint-plugin-zod@1.4.0(eslint@9.17.0(jiti@2.4.0)):\n    dependencies:\n      eslint: 9.17.0(jiti@2.4.0)\n\n  eslint-scope@8.2.0:\n    dependencies:\n      esrecurse: 4.3.0\n      estraverse: 5.3.0\n\n  eslint-utils@3.0.0(eslint@9.17.0(jiti@2.4.0)):\n    dependencies:\n      eslint: 9.17.0(jiti@2.4.0)\n      eslint-visitor-keys: 2.1.0\n\n  eslint-visitor-keys@2.1.0: {}\n\n  eslint-visitor-keys@3.4.3: {}\n\n  eslint-visitor-keys@4.2.0: {}\n\n  eslint@9.17.0(jiti@2.4.0):\n    dependencies:\n      '@eslint-community/eslint-utils': 4.4.1(eslint@9.17.0(jiti@2.4.0))\n      '@eslint-community/regexpp': 4.12.1\n      '@eslint/config-array': 0.19.1\n      '@eslint/core': 0.9.1\n      '@eslint/eslintrc': 3.2.0\n      '@eslint/js': 9.17.0\n      '@eslint/plugin-kit': 0.2.4\n      '@humanfs/node': 0.16.6\n      '@humanwhocodes/module-importer': 1.0.1\n      '@humanwhocodes/retry': 0.4.1\n      '@types/estree': 1.0.6\n      '@types/json-schema': 7.0.15\n      ajv: 6.12.6\n      chalk: 4.1.2\n      cross-spawn: 7.0.6\n      debug: 4.4.0\n      escape-string-regexp: 4.0.0\n      eslint-scope: 8.2.0\n      eslint-visitor-keys: 4.2.0\n      espree: 10.3.0\n      esquery: 1.6.0\n      esutils: 2.0.3\n      fast-deep-equal: 3.1.3\n      file-entry-cache: 8.0.0\n      find-up: 5.0.0\n      glob-parent: 6.0.2\n      ignore: 5.3.2\n      imurmurhash: 0.1.4\n      is-glob: 4.0.3\n      json-stable-stringify-without-jsonify: 1.0.1\n      lodash.merge: 4.6.2\n      minimatch: 3.1.2\n      natural-compare: 1.4.0\n      optionator: 0.9.4\n    optionalDependencies:\n      jiti: 2.4.0\n    transitivePeerDependencies:\n      - supports-color\n\n  espree@10.3.0:\n    dependencies:\n      acorn: 8.14.0\n      acorn-jsx: 5.3.2(acorn@8.14.0)\n      eslint-visitor-keys: 4.2.0\n\n  espree@9.6.1:\n    dependencies:\n      acorn: 8.14.0\n      acorn-jsx: 5.3.2(acorn@8.14.0)\n      eslint-visitor-keys: 3.4.3\n\n  esprima@4.0.1: {}\n\n  espurify@2.1.1: {}\n\n  esquery@1.6.0:\n    dependencies:\n      estraverse: 5.3.0\n\n  esrecurse@4.3.0:\n    dependencies:\n      estraverse: 5.3.0\n\n  estraverse@4.3.0: {}\n\n  estraverse@5.3.0: {}\n\n  estree-walker@2.0.2: {}\n\n  estree-walker@3.0.3:\n    dependencies:\n      '@types/estree': 1.0.6\n\n  esutils@2.0.3: {}\n\n  expect-type@0.15.0: {}\n\n  expect-type@1.1.0: {}\n\n  extend@3.0.2: {}\n\n  extendable-error@0.1.7: {}\n\n  external-editor@3.1.0:\n    dependencies:\n      chardet: 0.7.0\n      iconv-lite: 0.4.24\n      tmp: 0.0.33\n\n  extract-files@11.0.0: {}\n\n  extsprintf@1.3.0: {}\n\n  fast-decode-uri-component@1.0.1: {}\n\n  fast-deep-equal@3.1.3: {}\n\n  fast-diff@1.3.0: {}\n\n  fast-equals@5.0.1: {}\n\n  fast-glob@3.3.2:\n    dependencies:\n      '@nodelib/fs.stat': 2.0.5\n      '@nodelib/fs.walk': 1.2.8\n      glob-parent: 5.1.2\n      merge2: 1.4.1\n      micromatch: 4.0.7\n\n  fast-json-stable-stringify@2.1.0: {}\n\n  fast-levenshtein@2.0.6: {}\n\n  fast-printf@1.6.9:\n    dependencies:\n      boolean: 3.2.0\n\n  fast-querystring@1.1.2:\n    dependencies:\n      fast-decode-uri-component: 1.0.1\n\n  fast-url-parser@1.1.3:\n    dependencies:\n      punycode: 1.4.1\n\n  fastq@1.17.1:\n    dependencies:\n      reusify: 1.0.4\n\n  fdir@6.4.2(picomatch@4.0.2):\n    optionalDependencies:\n      picomatch: 4.0.2\n\n  figures@6.1.0:\n    dependencies:\n      is-unicode-supported: 2.0.0\n\n  file-entry-cache@8.0.0:\n    dependencies:\n      flat-cache: 4.0.1\n\n  file-entry-cache@9.1.0:\n    dependencies:\n      flat-cache: 5.0.0\n\n  file-uri-to-path@1.0.0: {}\n\n  filesize@10.1.6: {}\n\n  fill-range@7.1.1:\n    dependencies:\n      to-regex-range: 5.0.1\n\n  find-cache-dir@3.3.2:\n    dependencies:\n      commondir: 1.0.1\n      make-dir: 3.1.0\n      pkg-dir: 4.2.0\n\n  find-up-simple@1.0.0: {}\n\n  find-up@4.1.0:\n    dependencies:\n      locate-path: 5.0.0\n      path-exists: 4.0.0\n\n  find-up@5.0.0:\n    dependencies:\n      locate-path: 6.0.0\n      path-exists: 4.0.0\n\n  find-yarn-workspace-root2@1.2.16:\n    dependencies:\n      micromatch: 4.0.7\n      pkg-dir: 4.2.0\n\n  flat-cache@4.0.1:\n    dependencies:\n      flatted: 3.3.1\n      keyv: 4.5.4\n\n  flat-cache@5.0.0:\n    dependencies:\n      flatted: 3.3.1\n      keyv: 4.5.4\n\n  flatted@3.3.1: {}\n\n  for-each@0.3.3:\n    dependencies:\n      is-callable: 1.2.7\n\n  foreground-child@2.0.0:\n    dependencies:\n      cross-spawn: 7.0.3\n      signal-exit: 3.0.7\n\n  foreground-child@3.3.0:\n    dependencies:\n      cross-spawn: 7.0.5\n      signal-exit: 4.1.0\n\n  forever-agent@0.6.1: {}\n\n  form-data@2.3.3:\n    dependencies:\n      asynckit: 0.4.0\n      combined-stream: 1.0.8\n      mime-types: 2.1.35\n\n  fromentries@1.3.2: {}\n\n  fs-extra@10.1.0:\n    dependencies:\n      graceful-fs: 4.2.11\n      jsonfile: 6.1.0\n      universalify: 2.0.1\n\n  fs-extra@7.0.1:\n    dependencies:\n      graceful-fs: 4.2.11\n      jsonfile: 4.0.0\n      universalify: 0.1.2\n\n  fs-extra@8.1.0:\n    dependencies:\n      graceful-fs: 4.2.11\n      jsonfile: 4.0.0\n      universalify: 0.1.2\n\n  fs-minipass@2.1.0:\n    dependencies:\n      minipass: 3.3.6\n\n  fs.realpath@1.0.0: {}\n\n  fsevents@2.3.3:\n    optional: true\n\n  function-bind@1.1.2: {}\n\n  function-timeout@0.1.1: {}\n\n  function.prototype.name@1.1.6:\n    dependencies:\n      call-bind: 1.0.7\n      define-properties: 1.2.1\n      es-abstract: 1.23.3\n      functions-have-names: 1.2.3\n\n  functions-have-names@1.2.3: {}\n\n  gauge@3.0.2:\n    dependencies:\n      aproba: 2.0.0\n      color-support: 1.1.3\n      console-control-strings: 1.1.0\n      has-unicode: 2.0.1\n      object-assign: 4.1.1\n      signal-exit: 3.0.7\n      string-width: 4.2.3\n      strip-ansi: 6.0.1\n      wide-align: 1.1.5\n\n  gensequence@7.0.0: {}\n\n  gensync@1.0.0-beta.2: {}\n\n  get-caller-file@2.0.5: {}\n\n  get-east-asian-width@1.2.0: {}\n\n  get-intrinsic@1.2.4:\n    dependencies:\n      es-errors: 1.3.0\n      function-bind: 1.1.2\n      has-proto: 1.0.3\n      has-symbols: 1.0.3\n      hasown: 2.0.2\n\n  get-package-type@0.1.0: {}\n\n  get-port@5.1.1: {}\n\n  get-set-props@0.1.0: {}\n\n  get-stack-trace@3.1.1:\n    dependencies:\n      stacktrace-parser: 0.1.10\n\n  get-stdin@9.0.0: {}\n\n  get-symbol-description@1.0.2:\n    dependencies:\n      call-bind: 1.0.7\n      es-errors: 1.3.0\n      get-intrinsic: 1.2.4\n\n  get-tsconfig@4.8.1:\n    dependencies:\n      resolve-pkg-maps: 1.0.0\n\n  get-urls@12.1.0:\n    dependencies:\n      normalize-url: 8.0.1\n      super-regex: 0.2.0\n      url-regex-safe: 4.0.0\n    transitivePeerDependencies:\n      - re2\n\n  getpass@0.1.7:\n    dependencies:\n      assert-plus: 1.0.0\n\n  gitdown@4.1.1:\n    dependencies:\n      bluebird: 3.7.2\n      deadlink: 1.1.3\n      filesize: 10.1.6\n      get-urls: 12.1.0\n      gitinfo: 2.4.0\n      glob: 10.4.5\n      jsonfile: 6.1.0\n      lodash: 4.17.21\n      markdown-contents: 1.0.11\n      marked: 13.0.3\n      moment: 2.30.1\n      stack-trace: 0.0.10\n      yargs: 17.7.2\n    transitivePeerDependencies:\n      - re2\n\n  gitinfo@2.4.0:\n    dependencies:\n      ini: 1.3.8\n      ramda: 0.26.1\n\n  glob-parent@5.1.2:\n    dependencies:\n      is-glob: 4.0.3\n\n  glob-parent@6.0.2:\n    dependencies:\n      is-glob: 4.0.3\n\n  glob@10.3.10:\n    dependencies:\n      foreground-child: 3.3.0\n      jackspeak: 2.3.6\n      minimatch: 9.0.5\n      minipass: 7.1.2\n      path-scurry: 1.11.1\n\n  glob@10.4.5:\n    dependencies:\n      foreground-child: 3.3.0\n      jackspeak: 3.4.3\n      minimatch: 9.0.5\n      minipass: 7.1.2\n      package-json-from-dist: 1.0.1\n      path-scurry: 1.11.1\n\n  glob@7.2.3:\n    dependencies:\n      fs.realpath: 1.0.0\n      inflight: 1.0.6\n      inherits: 2.0.4\n      minimatch: 3.1.2\n      once: 1.4.0\n      path-is-absolute: 1.0.1\n\n  global-directory@4.0.1:\n    dependencies:\n      ini: 4.1.1\n\n  globals@11.12.0: {}\n\n  globals@13.24.0:\n    dependencies:\n      type-fest: 0.20.2\n\n  globals@14.0.0: {}\n\n  globals@15.14.0: {}\n\n  globalthis@1.0.4:\n    dependencies:\n      define-properties: 1.2.1\n      gopd: 1.0.1\n\n  globby@11.1.0:\n    dependencies:\n      array-union: 2.1.0\n      dir-glob: 3.0.1\n      fast-glob: 3.3.2\n      ignore: 5.3.1\n      merge2: 1.4.1\n      slash: 3.0.0\n\n  globby@14.0.1:\n    dependencies:\n      '@sindresorhus/merge-streams': 2.3.0\n      fast-glob: 3.3.2\n      ignore: 5.3.1\n      path-type: 5.0.0\n      slash: 5.1.0\n      unicorn-magic: 0.1.0\n\n  gopd@1.0.1:\n    dependencies:\n      get-intrinsic: 1.2.4\n\n  graceful-fs@4.2.11: {}\n\n  grapheme-splitter@1.0.4: {}\n\n  graphemer@1.4.0: {}\n\n  graphql-config@4.5.0(@types/node@22.9.0)(graphql@16.10.0):\n    dependencies:\n      '@graphql-tools/graphql-file-loader': 7.5.17(graphql@16.10.0)\n      '@graphql-tools/json-file-loader': 7.4.18(graphql@16.10.0)\n      '@graphql-tools/load': 7.8.14(graphql@16.10.0)\n      '@graphql-tools/merge': 8.4.2(graphql@16.10.0)\n      '@graphql-tools/url-loader': 7.17.18(@types/node@22.9.0)(graphql@16.10.0)\n      '@graphql-tools/utils': 9.2.1(graphql@16.10.0)\n      cosmiconfig: 8.0.0\n      graphql: 16.10.0\n      jiti: 1.17.1\n      minimatch: 4.2.3\n      string-env-interpolation: 1.0.1\n      tslib: 2.8.1\n    transitivePeerDependencies:\n      - '@types/node'\n      - bufferutil\n      - encoding\n      - utf-8-validate\n\n  graphql-depth-limit@1.1.0(graphql@16.10.0):\n    dependencies:\n      arrify: 1.0.1\n      graphql: 16.10.0\n\n  graphql-ws@5.12.1(graphql@16.10.0):\n    dependencies:\n      graphql: 16.10.0\n\n  graphql@16.10.0: {}\n\n  graphql@16.8.1: {}\n\n  har-schema@2.0.0: {}\n\n  har-validator@5.1.5:\n    dependencies:\n      ajv: 6.12.6\n      har-schema: 2.0.0\n\n  hard-rejection@2.1.0: {}\n\n  has-bigints@1.0.2: {}\n\n  has-flag@3.0.0: {}\n\n  has-flag@4.0.0: {}\n\n  has-own-prop@2.0.0: {}\n\n  has-property-descriptors@1.0.2:\n    dependencies:\n      es-define-property: 1.0.0\n\n  has-proto@1.0.3: {}\n\n  has-symbols@1.0.3: {}\n\n  has-tostringtag@1.0.2:\n    dependencies:\n      has-symbols: 1.0.3\n\n  has-unicode@2.0.1: {}\n\n  hasha@5.2.2:\n    dependencies:\n      is-stream: 2.0.1\n      type-fest: 0.8.1\n\n  hasown@2.0.2:\n    dependencies:\n      function-bind: 1.1.2\n\n  hosted-git-info@2.8.9: {}\n\n  html-escaper@2.0.2: {}\n\n  htmlparser2@3.10.1:\n    dependencies:\n      domelementtype: 1.3.1\n      domhandler: 2.4.2\n      domutils: 1.7.0\n      entities: 1.1.2\n      inherits: 2.0.4\n      readable-stream: 3.6.2\n\n  http-signature@1.2.0:\n    dependencies:\n      assert-plus: 1.0.0\n      jsprim: 1.4.2\n      sshpk: 1.18.0\n\n  https-proxy-agent@5.0.1:\n    dependencies:\n      agent-base: 6.0.2\n      debug: 4.3.5\n    transitivePeerDependencies:\n      - supports-color\n\n  human-id@1.0.2: {}\n\n  husky@9.0.11: {}\n\n  iconv-lite@0.4.24:\n    dependencies:\n      safer-buffer: 2.1.2\n\n  ignore-by-default@2.1.0: {}\n\n  ignore@5.3.1: {}\n\n  ignore@5.3.2: {}\n\n  import-fresh@3.3.0:\n    dependencies:\n      parent-module: 1.0.1\n      resolve-from: 4.0.0\n\n  import-meta-resolve@4.1.0: {}\n\n  import-modules@2.1.0: {}\n\n  imurmurhash@0.1.4: {}\n\n  indent-string@4.0.0: {}\n\n  indent-string@5.0.0: {}\n\n  inflight@1.0.6:\n    dependencies:\n      once: 1.4.0\n      wrappy: 1.0.2\n\n  inherits@2.0.4: {}\n\n  ini@1.3.8: {}\n\n  ini@4.1.1: {}\n\n  internal-slot@1.0.7:\n    dependencies:\n      es-errors: 1.3.0\n      hasown: 2.0.2\n      side-channel: 1.0.6\n\n  ip-regex@4.3.0: {}\n\n  irregular-plurals@3.5.0: {}\n\n  is-array-buffer@3.0.4:\n    dependencies:\n      call-bind: 1.0.7\n      get-intrinsic: 1.2.4\n\n  is-arrayish@0.2.1: {}\n\n  is-async-function@2.0.0:\n    dependencies:\n      has-tostringtag: 1.0.2\n\n  is-bigint@1.0.4:\n    dependencies:\n      has-bigints: 1.0.2\n\n  is-boolean-object@1.1.2:\n    dependencies:\n      call-bind: 1.0.7\n      has-tostringtag: 1.0.2\n\n  is-builtin-module@3.2.1:\n    dependencies:\n      builtin-modules: 3.3.0\n\n  is-bun-module@1.2.1:\n    dependencies:\n      semver: 7.6.3\n\n  is-callable@1.2.7: {}\n\n  is-core-module@2.13.1:\n    dependencies:\n      hasown: 2.0.2\n\n  is-core-module@2.16.1:\n    dependencies:\n      hasown: 2.0.2\n\n  is-data-view@1.0.1:\n    dependencies:\n      is-typed-array: 1.1.13\n\n  is-date-object@1.0.5:\n    dependencies:\n      has-tostringtag: 1.0.2\n\n  is-extglob@2.1.1: {}\n\n  is-finalizationregistry@1.0.2:\n    dependencies:\n      call-bind: 1.0.7\n\n  is-fullwidth-code-point@3.0.0: {}\n\n  is-fullwidth-code-point@4.0.0: {}\n\n  is-generator-function@1.0.10:\n    dependencies:\n      has-tostringtag: 1.0.2\n\n  is-get-set-prop@1.0.0:\n    dependencies:\n      get-set-props: 0.1.0\n      lowercase-keys: 1.0.1\n\n  is-glob@4.0.3:\n    dependencies:\n      is-extglob: 2.1.1\n\n  is-js-type@2.0.0:\n    dependencies:\n      js-types: 1.0.0\n\n  is-map@2.0.3: {}\n\n  is-negative-zero@2.0.3: {}\n\n  is-number-object@1.0.7:\n    dependencies:\n      has-tostringtag: 1.0.2\n\n  is-number@7.0.0: {}\n\n  is-obj-prop@1.0.0:\n    dependencies:\n      lowercase-keys: 1.0.1\n      obj-props: 1.4.0\n\n  is-plain-obj@1.1.0: {}\n\n  is-plain-object@5.0.0: {}\n\n  is-promise@4.0.0: {}\n\n  is-proto-prop@2.0.0:\n    dependencies:\n      lowercase-keys: 1.0.1\n      proto-props: 2.0.0\n\n  is-regex@1.1.4:\n    dependencies:\n      call-bind: 1.0.7\n      has-tostringtag: 1.0.2\n\n  is-regexp@3.1.0: {}\n\n  is-set@2.0.3: {}\n\n  is-shared-array-buffer@1.0.3:\n    dependencies:\n      call-bind: 1.0.7\n\n  is-stream@2.0.1: {}\n\n  is-string@1.0.7:\n    dependencies:\n      has-tostringtag: 1.0.2\n\n  is-subdir@1.2.0:\n    dependencies:\n      better-path-resolve: 1.0.0\n\n  is-symbol@1.0.4:\n    dependencies:\n      has-symbols: 1.0.3\n\n  is-typed-array@1.1.13:\n    dependencies:\n      which-typed-array: 1.1.15\n\n  is-typedarray@1.0.0: {}\n\n  is-unicode-supported@2.0.0: {}\n\n  is-weakmap@2.0.2: {}\n\n  is-weakref@1.0.2:\n    dependencies:\n      call-bind: 1.0.7\n\n  is-weakset@2.0.3:\n    dependencies:\n      call-bind: 1.0.7\n      get-intrinsic: 1.2.4\n\n  is-windows@1.0.2: {}\n\n  isarray@2.0.5: {}\n\n  isexe@2.0.0: {}\n\n  iso8601-duration@1.3.0: {}\n\n  isomorphic-ws@5.0.0(ws@8.13.0):\n    dependencies:\n      ws: 8.13.0\n\n  isomorphic-ws@5.0.0(ws@8.18.0):\n    dependencies:\n      ws: 8.18.0\n\n  isstream@0.1.2: {}\n\n  istanbul-lib-coverage@3.2.2: {}\n\n  istanbul-lib-hook@3.0.0:\n    dependencies:\n      append-transform: 2.0.0\n\n  istanbul-lib-instrument@4.0.3:\n    dependencies:\n      '@babel/core': 7.24.7\n      '@istanbuljs/schema': 0.1.3\n      istanbul-lib-coverage: 3.2.2\n      semver: 6.3.1\n    transitivePeerDependencies:\n      - supports-color\n\n  istanbul-lib-processinfo@2.0.3:\n    dependencies:\n      archy: 1.0.0\n      cross-spawn: 7.0.3\n      istanbul-lib-coverage: 3.2.2\n      p-map: 3.0.0\n      rimraf: 3.0.2\n      uuid: 8.3.2\n\n  istanbul-lib-report@3.0.1:\n    dependencies:\n      istanbul-lib-coverage: 3.2.2\n      make-dir: 4.0.0\n      supports-color: 7.2.0\n\n  istanbul-lib-source-maps@4.0.1:\n    dependencies:\n      debug: 4.3.5\n      istanbul-lib-coverage: 3.2.2\n      source-map: 0.6.1\n    transitivePeerDependencies:\n      - supports-color\n\n  istanbul-reports@3.1.7:\n    dependencies:\n      html-escaper: 2.0.2\n      istanbul-lib-report: 3.0.1\n\n  iterator.prototype@1.1.3:\n    dependencies:\n      define-properties: 1.2.1\n      get-intrinsic: 1.2.4\n      has-symbols: 1.0.3\n      reflect.getprototypeof: 1.0.6\n      set-function-name: 2.0.2\n\n  jackspeak@2.3.6:\n    dependencies:\n      '@isaacs/cliui': 8.0.2\n    optionalDependencies:\n      '@pkgjs/parseargs': 0.11.0\n\n  jackspeak@3.4.3:\n    dependencies:\n      '@isaacs/cliui': 8.0.2\n    optionalDependencies:\n      '@pkgjs/parseargs': 0.11.0\n\n  jiti@1.17.1: {}\n\n  jiti@2.4.0: {}\n\n  js-string-escape@1.0.1: {}\n\n  js-tokens@4.0.0: {}\n\n  js-types@1.0.0: {}\n\n  js-yaml@3.14.1:\n    dependencies:\n      argparse: 1.0.10\n      esprima: 4.0.1\n\n  js-yaml@4.1.0:\n    dependencies:\n      argparse: 2.0.1\n\n  jsbn@0.1.1: {}\n\n  jsdoc-type-pratt-parser@4.1.0: {}\n\n  jsdom@6.5.1:\n    dependencies:\n      acorn: 2.7.0\n      acorn-globals: 1.0.9\n      browser-request: 0.3.3\n      cssom: 0.3.8\n      cssstyle: 0.2.37\n      escodegen: 1.14.3\n      htmlparser2: 3.10.1\n      nwmatcher: 1.4.4\n      parse5: 1.5.1\n      request: 2.88.2\n      symbol-tree: 3.2.4\n      tough-cookie: 2.5.0\n      whatwg-url-compat: 0.6.5\n      xml-name-validator: 2.0.1\n      xmlhttprequest: 1.8.0\n      xtend: 4.0.2\n\n  jsesc@0.5.0: {}\n\n  jsesc@2.5.2: {}\n\n  jsesc@3.0.2: {}\n\n  json-buffer@3.0.1: {}\n\n  json-parse-even-better-errors@2.3.1: {}\n\n  json-schema-traverse@0.4.1: {}\n\n  json-schema@0.4.0: {}\n\n  json-stable-stringify-without-jsonify@1.0.1: {}\n\n  json-stringify-safe@5.0.1: {}\n\n  json2csv@5.0.7:\n    dependencies:\n      commander: 6.2.1\n      jsonparse: 1.3.1\n      lodash.get: 4.4.2\n\n  json5@2.2.3: {}\n\n  jsonc-eslint-parser@2.4.0:\n    dependencies:\n      acorn: 8.14.0\n      eslint-visitor-keys: 3.4.3\n      espree: 9.6.1\n      semver: 7.6.3\n\n  jsonfile@4.0.0:\n    optionalDependencies:\n      graceful-fs: 4.2.11\n\n  jsonfile@6.1.0:\n    dependencies:\n      universalify: 2.0.1\n    optionalDependencies:\n      graceful-fs: 4.2.11\n\n  jsonparse@1.3.1: {}\n\n  jsprim@1.4.2:\n    dependencies:\n      assert-plus: 1.0.0\n      extsprintf: 1.3.0\n      json-schema: 0.4.0\n      verror: 1.10.0\n\n  jsx-ast-utils@3.3.5:\n    dependencies:\n      array-includes: 3.1.8\n      array.prototype.flat: 1.3.2\n      object.assign: 4.1.5\n      object.values: 1.2.0\n\n  just-extend@6.2.0: {}\n\n  keyv@4.5.4:\n    dependencies:\n      json-buffer: 3.0.1\n\n  kind-of@6.0.3: {}\n\n  kleur@4.1.5: {}\n\n  knip@5.36.7(@types/node@22.9.0)(typescript@5.6.3):\n    dependencies:\n      '@nodelib/fs.walk': 1.2.8\n      '@snyk/github-codeowners': 1.1.0\n      '@types/node': 22.9.0\n      easy-table: 1.2.0\n      enhanced-resolve: 5.17.1\n      fast-glob: 3.3.2\n      jiti: 2.4.0\n      js-yaml: 4.1.0\n      minimist: 1.2.8\n      picocolors: 1.1.1\n      picomatch: 4.0.2\n      pretty-ms: 9.1.0\n      smol-toml: 1.3.0\n      strip-json-comments: 5.0.1\n      summary: 2.1.0\n      typescript: 5.6.3\n      zod: 3.23.8\n      zod-validation-error: 3.4.0(zod@3.23.8)\n\n  language-subtag-registry@0.3.23: {}\n\n  language-tags@1.0.9:\n    dependencies:\n      language-subtag-registry: 0.3.23\n\n  levn@0.3.0:\n    dependencies:\n      prelude-ls: 1.1.2\n      type-check: 0.3.2\n\n  levn@0.4.1:\n    dependencies:\n      prelude-ls: 1.2.1\n      type-check: 0.4.0\n\n  lines-and-columns@1.2.4: {}\n\n  load-json-file@7.0.1: {}\n\n  load-yaml-file@0.2.0:\n    dependencies:\n      graceful-fs: 4.2.11\n      js-yaml: 3.14.1\n      pify: 4.0.1\n      strip-bom: 3.0.0\n\n  locate-path@5.0.0:\n    dependencies:\n      p-locate: 4.1.0\n\n  locate-path@6.0.0:\n    dependencies:\n      p-locate: 5.0.0\n\n  lodash.flattendeep@4.4.0: {}\n\n  lodash.get@4.4.2: {}\n\n  lodash.lowercase@4.3.0: {}\n\n  lodash.merge@4.6.2: {}\n\n  lodash.startcase@4.4.0: {}\n\n  lodash.zip@4.2.0: {}\n\n  lodash@4.17.21: {}\n\n  log-update@4.0.0:\n    dependencies:\n      ansi-escapes: 4.3.2\n      cli-cursor: 3.1.0\n      slice-ansi: 4.0.0\n      wrap-ansi: 6.2.0\n\n  loose-envify@1.4.0:\n    dependencies:\n      js-tokens: 4.0.0\n\n  loupe@3.1.2: {}\n\n  lowercase-keys@1.0.1: {}\n\n  lru-cache@10.4.3: {}\n\n  lru-cache@4.1.5:\n    dependencies:\n      pseudomap: 1.0.2\n      yallist: 2.1.2\n\n  lru-cache@5.1.1:\n    dependencies:\n      yallist: 3.1.1\n\n  magic-string@0.30.17:\n    dependencies:\n      '@jridgewell/sourcemap-codec': 1.5.0\n\n  make-dir@3.1.0:\n    dependencies:\n      semver: 6.3.1\n\n  make-dir@4.0.0:\n    dependencies:\n      semver: 7.6.2\n\n  make-error@1.3.6: {}\n\n  map-obj@1.0.1: {}\n\n  map-obj@4.3.0: {}\n\n  markdown-contents@1.0.11:\n    dependencies:\n      contents: 5.0.0\n      lodash: 4.17.21\n\n  marked@13.0.3: {}\n\n  matcher@5.0.0:\n    dependencies:\n      escape-string-regexp: 5.0.0\n\n  md5-hex@3.0.1:\n    dependencies:\n      blueimp-md5: 2.19.0\n\n  memoize@10.0.0:\n    dependencies:\n      mimic-function: 5.0.1\n\n  meow@6.1.1:\n    dependencies:\n      '@types/minimist': 1.2.5\n      camelcase-keys: 6.2.2\n      decamelize-keys: 1.1.1\n      hard-rejection: 2.1.0\n      minimist-options: 4.1.0\n      normalize-package-data: 2.5.0\n      read-pkg-up: 7.0.1\n      redent: 3.0.0\n      trim-newlines: 3.0.1\n      type-fest: 0.13.1\n      yargs-parser: 18.1.3\n\n  merge2@1.4.1: {}\n\n  meros@1.3.0(@types/node@22.9.0):\n    optionalDependencies:\n      '@types/node': 22.9.0\n\n  micro-spelling-correcter@1.1.1: {}\n\n  micromatch@4.0.7:\n    dependencies:\n      braces: 3.0.3\n      picomatch: 2.3.1\n\n  micromatch@4.0.8:\n    dependencies:\n      braces: 3.0.3\n      picomatch: 2.3.1\n\n  mime-db@1.52.0: {}\n\n  mime-types@2.1.35:\n    dependencies:\n      mime-db: 1.52.0\n\n  mimic-fn@2.1.0: {}\n\n  mimic-function@5.0.1: {}\n\n  min-indent@1.0.1: {}\n\n  minimatch@3.1.2:\n    dependencies:\n      brace-expansion: 1.1.11\n\n  minimatch@4.2.3:\n    dependencies:\n      brace-expansion: 1.1.11\n\n  minimatch@9.0.5:\n    dependencies:\n      brace-expansion: 2.0.1\n\n  minimist-options@4.1.0:\n    dependencies:\n      arrify: 1.0.1\n      is-plain-obj: 1.1.0\n      kind-of: 6.0.3\n\n  minimist@1.2.8: {}\n\n  minipass@3.3.6:\n    dependencies:\n      yallist: 4.0.0\n\n  minipass@5.0.0: {}\n\n  minipass@7.1.2: {}\n\n  minizlib@2.1.2:\n    dependencies:\n      minipass: 3.3.6\n      yallist: 4.0.0\n\n  mixme@0.5.10: {}\n\n  mkdirp@1.0.4: {}\n\n  moment@2.30.1: {}\n\n  ms@2.1.2: {}\n\n  ms@2.1.3: {}\n\n  nanoid@3.3.8: {}\n\n  natural-compare@1.4.0: {}\n\n  natural-orderby@5.0.0: {}\n\n  nise@5.1.9:\n    dependencies:\n      '@sinonjs/commons': 3.0.1\n      '@sinonjs/fake-timers': 11.2.2\n      '@sinonjs/text-encoding': 0.7.2\n      just-extend: 6.2.0\n      path-to-regexp: 6.2.2\n\n  node-fetch@2.7.0:\n    dependencies:\n      whatwg-url: 5.0.0\n\n  node-gyp-build@4.8.1: {}\n\n  node-preload@0.2.1:\n    dependencies:\n      process-on-spawn: 1.0.0\n\n  node-releases@2.0.14: {}\n\n  node-releases@2.0.18: {}\n\n  nofilter@3.1.0: {}\n\n  nopt@5.0.0:\n    dependencies:\n      abbrev: 1.1.1\n\n  normalize-package-data@2.5.0:\n    dependencies:\n      hosted-git-info: 2.8.9\n      resolve: 1.22.8\n      semver: 5.7.2\n      validate-npm-package-license: 3.0.4\n\n  normalize-path@2.1.1:\n    dependencies:\n      remove-trailing-separator: 1.1.0\n\n  normalize-url@8.0.1: {}\n\n  npmlog@5.0.1:\n    dependencies:\n      are-we-there-yet: 2.0.0\n      console-control-strings: 1.1.0\n      gauge: 3.0.2\n      set-blocking: 2.0.0\n\n  nwmatcher@1.4.4: {}\n\n  nyc@15.1.0:\n    dependencies:\n      '@istanbuljs/load-nyc-config': 1.1.0\n      '@istanbuljs/schema': 0.1.3\n      caching-transform: 4.0.0\n      convert-source-map: 1.9.0\n      decamelize: 1.2.0\n      find-cache-dir: 3.3.2\n      find-up: 4.1.0\n      foreground-child: 2.0.0\n      get-package-type: 0.1.0\n      glob: 7.2.3\n      istanbul-lib-coverage: 3.2.2\n      istanbul-lib-hook: 3.0.0\n      istanbul-lib-instrument: 4.0.3\n      istanbul-lib-processinfo: 2.0.3\n      istanbul-lib-report: 3.0.1\n      istanbul-lib-source-maps: 4.0.1\n      istanbul-reports: 3.1.7\n      make-dir: 3.1.0\n      node-preload: 0.2.1\n      p-map: 3.0.0\n      process-on-spawn: 1.0.0\n      resolve-from: 5.0.0\n      rimraf: 3.0.2\n      signal-exit: 3.0.7\n      spawn-wrap: 2.0.0\n      test-exclude: 6.0.0\n      yargs: 15.4.1\n    transitivePeerDependencies:\n      - supports-color\n\n  oauth-sign@0.9.0: {}\n\n  obj-props@1.4.0: {}\n\n  object-assign@4.1.1: {}\n\n  object-inspect@1.13.1: {}\n\n  object-inspect@1.13.3: {}\n\n  object-keys@1.1.1: {}\n\n  object.assign@4.1.5:\n    dependencies:\n      call-bind: 1.0.7\n      define-properties: 1.2.1\n      has-symbols: 1.0.3\n      object-keys: 1.1.1\n\n  object.entries@1.1.8:\n    dependencies:\n      call-bind: 1.0.7\n      define-properties: 1.2.1\n      es-object-atoms: 1.0.0\n\n  object.fromentries@2.0.8:\n    dependencies:\n      call-bind: 1.0.7\n      define-properties: 1.2.1\n      es-abstract: 1.23.4\n      es-object-atoms: 1.0.0\n\n  object.values@1.2.0:\n    dependencies:\n      call-bind: 1.0.7\n      define-properties: 1.2.1\n      es-object-atoms: 1.0.0\n\n  obuf@1.1.2: {}\n\n  once@1.4.0:\n    dependencies:\n      wrappy: 1.0.2\n\n  onetime@5.1.2:\n    dependencies:\n      mimic-fn: 2.1.0\n\n  optionator@0.8.3:\n    dependencies:\n      deep-is: 0.1.4\n      fast-levenshtein: 2.0.6\n      levn: 0.3.0\n      prelude-ls: 1.1.2\n      type-check: 0.3.2\n      word-wrap: 1.2.5\n\n  optionator@0.9.4:\n    dependencies:\n      deep-is: 0.1.4\n      fast-levenshtein: 2.0.6\n      levn: 0.4.1\n      prelude-ls: 1.2.1\n      type-check: 0.4.0\n      word-wrap: 1.2.5\n\n  os-tmpdir@1.0.2: {}\n\n  outdent@0.5.0: {}\n\n  p-filter@2.1.0:\n    dependencies:\n      p-map: 2.1.0\n\n  p-limit@2.3.0:\n    dependencies:\n      p-try: 2.2.0\n\n  p-limit@3.1.0:\n    dependencies:\n      yocto-queue: 0.1.0\n\n  p-locate@4.1.0:\n    dependencies:\n      p-limit: 2.3.0\n\n  p-locate@5.0.0:\n    dependencies:\n      p-limit: 3.1.0\n\n  p-map@2.1.0: {}\n\n  p-map@3.0.0:\n    dependencies:\n      aggregate-error: 3.1.0\n\n  p-map@4.0.0:\n    dependencies:\n      aggregate-error: 3.1.0\n\n  p-map@7.0.2: {}\n\n  p-try@2.2.0: {}\n\n  package-config@5.0.0:\n    dependencies:\n      find-up-simple: 1.0.0\n      load-json-file: 7.0.1\n\n  package-hash@4.0.0:\n    dependencies:\n      graceful-fs: 4.2.11\n      hasha: 5.2.2\n      lodash.flattendeep: 4.4.0\n      release-zalgo: 1.0.0\n\n  package-json-from-dist@1.0.1: {}\n\n  parent-module@1.0.1:\n    dependencies:\n      callsites: 3.1.0\n\n  parent-module@2.0.0:\n    dependencies:\n      callsites: 3.1.0\n\n  parse-imports@2.2.1:\n    dependencies:\n      es-module-lexer: 1.6.0\n      slashes: 3.0.12\n\n  parse-json@5.2.0:\n    dependencies:\n      '@babel/code-frame': 7.24.7\n      error-ex: 1.3.2\n      json-parse-even-better-errors: 2.3.1\n      lines-and-columns: 1.2.4\n\n  parse-ms@2.1.0: {}\n\n  parse-ms@4.0.0: {}\n\n  parse5@1.5.1: {}\n\n  path-exists@4.0.0: {}\n\n  path-is-absolute@1.0.1: {}\n\n  path-key@3.1.1: {}\n\n  path-parse@1.0.7: {}\n\n  path-scurry@1.11.1:\n    dependencies:\n      lru-cache: 10.4.3\n      minipass: 7.1.2\n\n  path-to-regexp@6.2.2: {}\n\n  path-type@4.0.0: {}\n\n  path-type@5.0.0: {}\n\n  pathe@1.1.2: {}\n\n  pathval@2.0.0: {}\n\n  performance-now@2.1.0: {}\n\n  pg-cloudflare@1.1.1:\n    optional: true\n\n  pg-connection-string@2.7.0: {}\n\n  pg-cursor@2.12.1(pg@8.13.1):\n    dependencies:\n      pg: 8.13.1\n\n  pg-int8@1.0.1: {}\n\n  pg-minify@1.6.5: {}\n\n  pg-numeric@1.0.2: {}\n\n  pg-pool@3.7.0(pg@8.13.1):\n    dependencies:\n      pg: 8.13.1\n\n  pg-promise@11.10.2(pg-query-stream@4.7.1(pg@8.13.1)):\n    dependencies:\n      assert-options: 0.8.2\n      pg: 8.13.1\n      pg-minify: 1.6.5\n      pg-query-stream: 4.7.1(pg@8.13.1)\n      spex: 3.4.0\n    transitivePeerDependencies:\n      - pg-native\n\n  pg-protocol@1.7.0: {}\n\n  pg-query-stream@4.7.1(pg@8.13.1):\n    dependencies:\n      pg: 8.13.1\n      pg-cursor: 2.12.1(pg@8.13.1)\n\n  pg-types@2.2.0:\n    dependencies:\n      pg-int8: 1.0.1\n      postgres-array: 2.0.0\n      postgres-bytea: 1.0.0\n      postgres-date: 1.0.7\n      postgres-interval: 1.2.0\n\n  pg-types@4.0.2:\n    dependencies:\n      pg-int8: 1.0.1\n      pg-numeric: 1.0.2\n      postgres-array: 3.0.2\n      postgres-bytea: 3.0.0\n      postgres-date: 2.1.0\n      postgres-interval: 3.0.0\n      postgres-range: 1.1.4\n\n  pg@8.13.1:\n    dependencies:\n      pg-connection-string: 2.7.0\n      pg-pool: 3.7.0(pg@8.13.1)\n      pg-protocol: 1.7.0\n      pg-types: 2.2.0\n      pgpass: 1.0.5\n    optionalDependencies:\n      pg-cloudflare: 1.1.1\n\n  pgpass@1.0.5:\n    dependencies:\n      split2: 4.2.0\n\n  picocolors@1.0.1: {}\n\n  picocolors@1.1.1: {}\n\n  picomatch@2.3.1: {}\n\n  picomatch@3.0.1: {}\n\n  picomatch@4.0.2: {}\n\n  pify@4.0.1: {}\n\n  pkg-dir@4.2.0:\n    dependencies:\n      find-up: 4.1.0\n\n  pkg-dir@5.0.0:\n    dependencies:\n      find-up: 5.0.0\n\n  platform@1.3.6: {}\n\n  plur@5.1.0:\n    dependencies:\n      irregular-plurals: 3.5.0\n\n  pluralize@8.0.0: {}\n\n  possible-typed-array-names@1.0.0: {}\n\n  postcss@8.4.49:\n    dependencies:\n      nanoid: 3.3.8\n      picocolors: 1.1.1\n      source-map-js: 1.2.1\n\n  postgres-array@2.0.0: {}\n\n  postgres-array@3.0.2: {}\n\n  postgres-bytea@1.0.0: {}\n\n  postgres-bytea@3.0.0:\n    dependencies:\n      obuf: 1.1.2\n\n  postgres-date@1.0.7: {}\n\n  postgres-date@2.1.0: {}\n\n  postgres-interval@1.2.0:\n    dependencies:\n      xtend: 4.0.2\n\n  postgres-interval@3.0.0: {}\n\n  postgres-interval@4.0.2: {}\n\n  postgres-range@1.1.4: {}\n\n  postgres@3.4.5: {}\n\n  preferred-pm@3.1.3:\n    dependencies:\n      find-up: 5.0.0\n      find-yarn-workspace-root2: 1.2.16\n      path-exists: 4.0.0\n      which-pm: 2.0.0\n\n  prelude-ls@1.1.2: {}\n\n  prelude-ls@1.2.1: {}\n\n  prettier-linter-helpers@1.0.0:\n    dependencies:\n      fast-diff: 1.3.0\n\n  prettier@2.8.8: {}\n\n  prettier@3.4.2: {}\n\n  pretty-ms@7.0.1:\n    dependencies:\n      parse-ms: 2.1.0\n\n  pretty-ms@9.0.0:\n    dependencies:\n      parse-ms: 4.0.0\n\n  pretty-ms@9.1.0:\n    dependencies:\n      parse-ms: 4.0.0\n\n  process-on-spawn@1.0.0:\n    dependencies:\n      fromentries: 1.3.2\n\n  prop-types@15.8.1:\n    dependencies:\n      loose-envify: 1.4.0\n      object-assign: 4.1.1\n      react-is: 16.13.1\n\n  proto-props@2.0.0: {}\n\n  pseudomap@1.0.2: {}\n\n  psl@1.15.0:\n    dependencies:\n      punycode: 2.3.1\n\n  punycode@1.4.1: {}\n\n  punycode@2.3.1: {}\n\n  pvtsutils@1.3.5:\n    dependencies:\n      tslib: 2.8.1\n\n  pvutils@1.1.3: {}\n\n  qs@6.5.3: {}\n\n  queue-microtask@1.2.3: {}\n\n  quick-lru@4.0.1: {}\n\n  rambda@7.5.0: {}\n\n  ramda@0.26.1: {}\n\n  ramda@0.30.1: {}\n\n  react-is@16.13.1: {}\n\n  read-pkg-up@7.0.1:\n    dependencies:\n      find-up: 4.1.0\n      read-pkg: 5.2.0\n      type-fest: 0.8.1\n\n  read-pkg@5.2.0:\n    dependencies:\n      '@types/normalize-package-data': 2.4.4\n      normalize-package-data: 2.5.0\n      parse-json: 5.2.0\n      type-fest: 0.6.0\n\n  read-yaml-file@1.1.0:\n    dependencies:\n      graceful-fs: 4.2.11\n      js-yaml: 3.14.1\n      pify: 4.0.1\n      strip-bom: 3.0.0\n\n  readable-stream@3.6.2:\n    dependencies:\n      inherits: 2.0.4\n      string_decoder: 1.3.0\n      util-deprecate: 1.0.2\n\n  recast@0.23.9:\n    dependencies:\n      ast-types: 0.16.1\n      esprima: 4.0.1\n      source-map: 0.6.1\n      tiny-invariant: 1.3.3\n      tslib: 2.8.1\n\n  redent@3.0.0:\n    dependencies:\n      indent-string: 4.0.0\n      strip-indent: 3.0.0\n\n  refa@0.12.1:\n    dependencies:\n      '@eslint-community/regexpp': 4.12.1\n\n  reflect.getprototypeof@1.0.6:\n    dependencies:\n      call-bind: 1.0.7\n      define-properties: 1.2.1\n      es-abstract: 1.23.4\n      es-errors: 1.3.0\n      get-intrinsic: 1.2.4\n      globalthis: 1.0.4\n      which-builtin-type: 1.1.4\n\n  regenerator-runtime@0.14.1: {}\n\n  regexp-ast-analysis@0.7.1:\n    dependencies:\n      '@eslint-community/regexpp': 4.12.1\n      refa: 0.12.1\n\n  regexp-tree@0.1.27: {}\n\n  regexp.prototype.flags@1.5.2:\n    dependencies:\n      call-bind: 1.0.7\n      define-properties: 1.2.1\n      es-errors: 1.3.0\n      set-function-name: 2.0.2\n\n  regexp.prototype.flags@1.5.3:\n    dependencies:\n      call-bind: 1.0.7\n      define-properties: 1.2.1\n      es-errors: 1.3.0\n      set-function-name: 2.0.2\n\n  regjsparser@0.10.0:\n    dependencies:\n      jsesc: 0.5.0\n\n  release-zalgo@1.0.0:\n    dependencies:\n      es6-error: 4.1.1\n\n  remove-trailing-separator@1.1.0: {}\n\n  repeat-string@1.6.1: {}\n\n  req-all@0.1.0: {}\n\n  request@2.88.2:\n    dependencies:\n      aws-sign2: 0.7.0\n      aws4: 1.13.2\n      caseless: 0.12.0\n      combined-stream: 1.0.8\n      extend: 3.0.2\n      forever-agent: 0.6.1\n      form-data: 2.3.3\n      har-validator: 5.1.5\n      http-signature: 1.2.0\n      is-typedarray: 1.0.0\n      isstream: 0.1.2\n      json-stringify-safe: 5.0.1\n      mime-types: 2.1.35\n      oauth-sign: 0.9.0\n      performance-now: 2.1.0\n      qs: 6.5.3\n      safe-buffer: 5.2.1\n      tough-cookie: 2.5.0\n      tunnel-agent: 0.6.0\n      uuid: 3.4.0\n\n  require-directory@2.1.1: {}\n\n  require-main-filename@2.0.0: {}\n\n  requireindex@1.1.0: {}\n\n  resolve-cwd@3.0.0:\n    dependencies:\n      resolve-from: 5.0.0\n\n  resolve-from@4.0.0: {}\n\n  resolve-from@5.0.0: {}\n\n  resolve-pkg-maps@1.0.0: {}\n\n  resolve@1.22.10:\n    dependencies:\n      is-core-module: 2.16.1\n      path-parse: 1.0.7\n      supports-preserve-symlinks-flag: 1.0.0\n\n  resolve@1.22.8:\n    dependencies:\n      is-core-module: 2.13.1\n      path-parse: 1.0.7\n      supports-preserve-symlinks-flag: 1.0.0\n\n  resolve@2.0.0-next.5:\n    dependencies:\n      is-core-module: 2.16.1\n      path-parse: 1.0.7\n      supports-preserve-symlinks-flag: 1.0.0\n\n  restore-cursor@3.1.0:\n    dependencies:\n      onetime: 5.1.2\n      signal-exit: 3.0.7\n\n  reusify@1.0.4: {}\n\n  rimraf@3.0.2:\n    dependencies:\n      glob: 7.2.3\n\n  roarr@7.21.1:\n    dependencies:\n      fast-printf: 1.6.9\n      safe-stable-stringify: 2.4.3\n      semver-compare: 1.0.0\n\n  rollup@4.29.1:\n    dependencies:\n      '@types/estree': 1.0.6\n    optionalDependencies:\n      '@rollup/rollup-android-arm-eabi': 4.29.1\n      '@rollup/rollup-android-arm64': 4.29.1\n      '@rollup/rollup-darwin-arm64': 4.29.1\n      '@rollup/rollup-darwin-x64': 4.29.1\n      '@rollup/rollup-freebsd-arm64': 4.29.1\n      '@rollup/rollup-freebsd-x64': 4.29.1\n      '@rollup/rollup-linux-arm-gnueabihf': 4.29.1\n      '@rollup/rollup-linux-arm-musleabihf': 4.29.1\n      '@rollup/rollup-linux-arm64-gnu': 4.29.1\n      '@rollup/rollup-linux-arm64-musl': 4.29.1\n      '@rollup/rollup-linux-loongarch64-gnu': 4.29.1\n      '@rollup/rollup-linux-powerpc64le-gnu': 4.29.1\n      '@rollup/rollup-linux-riscv64-gnu': 4.29.1\n      '@rollup/rollup-linux-s390x-gnu': 4.29.1\n      '@rollup/rollup-linux-x64-gnu': 4.29.1\n      '@rollup/rollup-linux-x64-musl': 4.29.1\n      '@rollup/rollup-win32-arm64-msvc': 4.29.1\n      '@rollup/rollup-win32-ia32-msvc': 4.29.1\n      '@rollup/rollup-win32-x64-msvc': 4.29.1\n      fsevents: 2.3.3\n\n  run-parallel@1.2.0:\n    dependencies:\n      queue-microtask: 1.2.3\n\n  safe-array-concat@1.1.2:\n    dependencies:\n      call-bind: 1.0.7\n      get-intrinsic: 1.2.4\n      has-symbols: 1.0.3\n      isarray: 2.0.5\n\n  safe-buffer@5.2.1: {}\n\n  safe-regex-test@1.0.3:\n    dependencies:\n      call-bind: 1.0.7\n      es-errors: 1.3.0\n      is-regex: 1.1.4\n\n  safe-stable-stringify@2.4.3: {}\n\n  safer-buffer@2.1.2: {}\n\n  scslre@0.3.0:\n    dependencies:\n      '@eslint-community/regexpp': 4.12.1\n      refa: 0.12.1\n      regexp-ast-analysis: 0.7.1\n\n  semver-compare@1.0.0: {}\n\n  semver@5.7.2: {}\n\n  semver@6.3.1: {}\n\n  semver@7.6.2: {}\n\n  semver@7.6.3: {}\n\n  serialize-error@7.0.1:\n    dependencies:\n      type-fest: 0.13.1\n\n  serialize-error@8.1.0:\n    dependencies:\n      type-fest: 0.20.2\n\n  set-blocking@2.0.0: {}\n\n  set-function-length@1.2.2:\n    dependencies:\n      define-data-property: 1.1.4\n      es-errors: 1.3.0\n      function-bind: 1.1.2\n      get-intrinsic: 1.2.4\n      gopd: 1.0.1\n      has-property-descriptors: 1.0.2\n\n  set-function-name@2.0.2:\n    dependencies:\n      define-data-property: 1.1.4\n      es-errors: 1.3.0\n      functions-have-names: 1.2.3\n      has-property-descriptors: 1.0.2\n\n  shebang-command@1.2.0:\n    dependencies:\n      shebang-regex: 1.0.0\n\n  shebang-command@2.0.0:\n    dependencies:\n      shebang-regex: 3.0.0\n\n  shebang-regex@1.0.0: {}\n\n  shebang-regex@3.0.0: {}\n\n  side-channel@1.0.6:\n    dependencies:\n      call-bind: 1.0.7\n      es-errors: 1.3.0\n      get-intrinsic: 1.2.4\n      object-inspect: 1.13.1\n\n  siginfo@2.0.0: {}\n\n  signal-exit@3.0.7: {}\n\n  signal-exit@4.1.0: {}\n\n  sinon@15.2.0:\n    dependencies:\n      '@sinonjs/commons': 3.0.1\n      '@sinonjs/fake-timers': 10.3.0\n      '@sinonjs/samsam': 8.0.0\n      diff: 5.2.0\n      nise: 5.1.9\n      supports-color: 7.2.0\n\n  sister@3.0.2: {}\n\n  slash@3.0.0: {}\n\n  slash@5.1.0: {}\n\n  slashes@3.0.12: {}\n\n  slice-ansi@4.0.0:\n    dependencies:\n      ansi-styles: 4.3.0\n      astral-regex: 2.0.0\n      is-fullwidth-code-point: 3.0.0\n\n  slice-ansi@5.0.0:\n    dependencies:\n      ansi-styles: 6.2.1\n      is-fullwidth-code-point: 4.0.0\n\n  smartwrap@2.0.2:\n    dependencies:\n      array.prototype.flat: 1.3.2\n      breakword: 1.0.6\n      grapheme-splitter: 1.0.4\n      strip-ansi: 6.0.1\n      wcwidth: 1.0.1\n      yargs: 15.4.1\n\n  smol-toml@1.3.0: {}\n\n  source-map-js@1.2.1: {}\n\n  source-map@0.6.1: {}\n\n  spawn-wrap@2.0.0:\n    dependencies:\n      foreground-child: 2.0.0\n      is-windows: 1.0.2\n      make-dir: 3.1.0\n      rimraf: 3.0.2\n      signal-exit: 3.0.7\n      which: 2.0.2\n\n  spawndamnit@2.0.0:\n    dependencies:\n      cross-spawn: 5.1.0\n      signal-exit: 3.0.7\n\n  spdx-correct@3.2.0:\n    dependencies:\n      spdx-expression-parse: 3.0.1\n      spdx-license-ids: 3.0.18\n\n  spdx-exceptions@2.5.0: {}\n\n  spdx-expression-parse@3.0.1:\n    dependencies:\n      spdx-exceptions: 2.5.0\n      spdx-license-ids: 3.0.18\n\n  spdx-expression-parse@4.0.0:\n    dependencies:\n      spdx-exceptions: 2.5.0\n      spdx-license-ids: 3.0.20\n\n  spdx-license-ids@3.0.18: {}\n\n  spdx-license-ids@3.0.20: {}\n\n  spex@3.4.0: {}\n\n  split2@4.2.0: {}\n\n  sprintf-js@1.0.3: {}\n\n  sshpk@1.18.0:\n    dependencies:\n      asn1: 0.2.6\n      assert-plus: 1.0.0\n      bcrypt-pbkdf: 1.0.2\n      dashdash: 1.14.1\n      ecc-jsbn: 0.1.2\n      getpass: 0.1.7\n      jsbn: 0.1.1\n      safer-buffer: 2.1.2\n      tweetnacl: 0.14.5\n\n  stable-hash@0.0.4: {}\n\n  stack-trace@0.0.10: {}\n\n  stack-utils@2.0.6:\n    dependencies:\n      escape-string-regexp: 2.0.0\n\n  stackback@0.0.2: {}\n\n  stacktrace-parser@0.1.10:\n    dependencies:\n      type-fest: 0.7.1\n\n  std-env@3.8.0: {}\n\n  stream-transform@2.1.3:\n    dependencies:\n      mixme: 0.5.10\n\n  streamsearch@1.1.0: {}\n\n  strict-event-emitter-types@2.0.0: {}\n\n  string-env-interpolation@1.0.1: {}\n\n  string-width@4.2.3:\n    dependencies:\n      emoji-regex: 8.0.0\n      is-fullwidth-code-point: 3.0.0\n      strip-ansi: 6.0.1\n\n  string-width@5.1.2:\n    dependencies:\n      eastasianwidth: 0.2.0\n      emoji-regex: 9.2.2\n      strip-ansi: 7.1.0\n\n  string-width@7.1.0:\n    dependencies:\n      emoji-regex: 10.3.0\n      get-east-asian-width: 1.2.0\n      strip-ansi: 7.1.0\n\n  string.prototype.includes@2.0.1:\n    dependencies:\n      call-bind: 1.0.7\n      define-properties: 1.2.1\n      es-abstract: 1.23.4\n\n  string.prototype.matchall@4.0.11:\n    dependencies:\n      call-bind: 1.0.7\n      define-properties: 1.2.1\n      es-abstract: 1.23.4\n      es-errors: 1.3.0\n      es-object-atoms: 1.0.0\n      get-intrinsic: 1.2.4\n      gopd: 1.0.1\n      has-symbols: 1.0.3\n      internal-slot: 1.0.7\n      regexp.prototype.flags: 1.5.3\n      set-function-name: 2.0.2\n      side-channel: 1.0.6\n\n  string.prototype.repeat@1.0.0:\n    dependencies:\n      define-properties: 1.2.1\n      es-abstract: 1.23.4\n\n  string.prototype.trim@1.2.9:\n    dependencies:\n      call-bind: 1.0.7\n      define-properties: 1.2.1\n      es-abstract: 1.23.3\n      es-object-atoms: 1.0.0\n\n  string.prototype.trimend@1.0.8:\n    dependencies:\n      call-bind: 1.0.7\n      define-properties: 1.2.1\n      es-object-atoms: 1.0.0\n\n  string.prototype.trimstart@1.0.8:\n    dependencies:\n      call-bind: 1.0.7\n      define-properties: 1.2.1\n      es-object-atoms: 1.0.0\n\n  string_decoder@1.3.0:\n    dependencies:\n      safe-buffer: 5.2.1\n\n  strip-ansi@6.0.1:\n    dependencies:\n      ansi-regex: 5.0.1\n\n  strip-ansi@7.1.0:\n    dependencies:\n      ansi-regex: 6.0.1\n\n  strip-bom@3.0.0: {}\n\n  strip-bom@4.0.0: {}\n\n  strip-comments@2.0.1: {}\n\n  strip-indent@3.0.0:\n    dependencies:\n      min-indent: 1.0.1\n\n  strip-json-comments@3.1.1: {}\n\n  strip-json-comments@5.0.1: {}\n\n  summary@2.1.0: {}\n\n  super-regex@0.2.0:\n    dependencies:\n      clone-regexp: 3.0.0\n      function-timeout: 0.1.1\n      time-span: 5.1.0\n\n  supertap@3.0.1:\n    dependencies:\n      indent-string: 5.0.0\n      js-yaml: 3.14.1\n      serialize-error: 7.0.1\n      strip-ansi: 7.1.0\n\n  supports-color@5.5.0:\n    dependencies:\n      has-flag: 3.0.0\n\n  supports-color@7.2.0:\n    dependencies:\n      has-flag: 4.0.0\n\n  supports-preserve-symlinks-flag@1.0.0: {}\n\n  symbol-tree@3.2.4: {}\n\n  synckit@0.6.2:\n    dependencies:\n      tslib: 2.8.1\n\n  synckit@0.9.2:\n    dependencies:\n      '@pkgr/core': 0.1.1\n      tslib: 2.8.1\n\n  tapable@2.2.1: {}\n\n  tar@6.2.1:\n    dependencies:\n      chownr: 2.0.0\n      fs-minipass: 2.1.0\n      minipass: 5.0.0\n      minizlib: 2.1.2\n      mkdirp: 1.0.4\n      yallist: 4.0.0\n\n  temp-dir@3.0.0: {}\n\n  term-size@2.2.1: {}\n\n  test-exclude@6.0.0:\n    dependencies:\n      '@istanbuljs/schema': 0.1.3\n      glob: 7.2.3\n      minimatch: 3.1.2\n\n  time-span@5.1.0:\n    dependencies:\n      convert-hrtime: 5.0.0\n\n  time-zone@1.0.0: {}\n\n  tiny-invariant@1.3.3: {}\n\n  tinybench@2.9.0: {}\n\n  tinyexec@0.3.2: {}\n\n  tinyglobby@0.2.10:\n    dependencies:\n      fdir: 6.4.2(picomatch@4.0.2)\n      picomatch: 4.0.2\n\n  tinypool@1.0.2: {}\n\n  tinyrainbow@1.2.0: {}\n\n  tinyspy@3.0.2: {}\n\n  tlds@1.255.0: {}\n\n  tmp@0.0.33:\n    dependencies:\n      os-tmpdir: 1.0.2\n\n  to-fast-properties@2.0.0: {}\n\n  to-regex-range@5.0.1:\n    dependencies:\n      is-number: 7.0.0\n\n  tough-cookie@2.5.0:\n    dependencies:\n      psl: 1.15.0\n      punycode: 2.3.1\n\n  tr46@0.0.3: {}\n\n  trim-newlines@3.0.1: {}\n\n  ts-api-utils@1.4.3(typescript@5.6.3):\n    dependencies:\n      typescript: 5.6.3\n\n  ts-node@10.9.2(@types/node@22.9.0)(typescript@5.6.3):\n    dependencies:\n      '@cspotcode/source-map-support': 0.8.1\n      '@tsconfig/node10': 1.0.11\n      '@tsconfig/node12': 1.0.11\n      '@tsconfig/node14': 1.0.3\n      '@tsconfig/node16': 1.0.4\n      '@types/node': 22.9.0\n      acorn: 8.11.3\n      acorn-walk: 8.3.2\n      arg: 4.1.3\n      create-require: 1.1.1\n      diff: 4.0.2\n      make-error: 1.3.6\n      typescript: 5.6.3\n      v8-compile-cache-lib: 3.0.1\n      yn: 3.1.1\n\n  tsconfig-paths@4.2.0:\n    dependencies:\n      json5: 2.2.3\n      minimist: 1.2.8\n      strip-bom: 3.0.0\n\n  tslib@2.8.1: {}\n\n  tty-table@4.2.3:\n    dependencies:\n      chalk: 4.1.2\n      csv: 5.5.3\n      kleur: 4.1.5\n      smartwrap: 2.0.2\n      strip-ansi: 6.0.1\n      wcwidth: 1.0.1\n      yargs: 17.7.2\n\n  tunnel-agent@0.6.0:\n    dependencies:\n      safe-buffer: 5.2.1\n\n  tweetnacl@0.14.5: {}\n\n  type-check@0.3.2:\n    dependencies:\n      prelude-ls: 1.1.2\n\n  type-check@0.4.0:\n    dependencies:\n      prelude-ls: 1.2.1\n\n  type-detect@4.0.8: {}\n\n  type-fest@0.13.1: {}\n\n  type-fest@0.20.2: {}\n\n  type-fest@0.21.3: {}\n\n  type-fest@0.6.0: {}\n\n  type-fest@0.7.1: {}\n\n  type-fest@0.8.1: {}\n\n  typed-array-buffer@1.0.2:\n    dependencies:\n      call-bind: 1.0.7\n      es-errors: 1.3.0\n      is-typed-array: 1.1.13\n\n  typed-array-byte-length@1.0.1:\n    dependencies:\n      call-bind: 1.0.7\n      for-each: 0.3.3\n      gopd: 1.0.1\n      has-proto: 1.0.3\n      is-typed-array: 1.1.13\n\n  typed-array-byte-offset@1.0.2:\n    dependencies:\n      available-typed-arrays: 1.0.7\n      call-bind: 1.0.7\n      for-each: 0.3.3\n      gopd: 1.0.1\n      has-proto: 1.0.3\n      is-typed-array: 1.1.13\n\n  typed-array-length@1.0.6:\n    dependencies:\n      call-bind: 1.0.7\n      for-each: 0.3.3\n      gopd: 1.0.1\n      has-proto: 1.0.3\n      is-typed-array: 1.1.13\n      possible-typed-array-names: 1.0.0\n\n  typedarray-to-buffer@3.1.5:\n    dependencies:\n      is-typedarray: 1.0.0\n\n  typescript@5.6.3: {}\n\n  unbox-primitive@1.0.2:\n    dependencies:\n      call-bind: 1.0.7\n      has-bigints: 1.0.2\n      has-symbols: 1.0.3\n      which-boxed-primitive: 1.0.2\n\n  undici-types@6.19.8: {}\n\n  unicorn-magic@0.1.0: {}\n\n  universalify@0.1.2: {}\n\n  universalify@2.0.1: {}\n\n  unixify@1.0.0:\n    dependencies:\n      normalize-path: 2.1.1\n\n  update-browserslist-db@1.0.16(browserslist@4.23.1):\n    dependencies:\n      browserslist: 4.23.1\n      escalade: 3.1.2\n      picocolors: 1.0.1\n\n  update-browserslist-db@1.1.1(browserslist@4.24.2):\n    dependencies:\n      browserslist: 4.24.2\n      escalade: 3.2.0\n      picocolors: 1.1.1\n\n  uri-js@4.4.1:\n    dependencies:\n      punycode: 2.3.1\n\n  url-regex-safe@4.0.0:\n    dependencies:\n      ip-regex: 4.3.0\n      tlds: 1.255.0\n\n  url-regexp@1.0.2: {}\n\n  urlpattern-polyfill@8.0.2: {}\n\n  util-deprecate@1.0.2: {}\n\n  uuid@3.4.0: {}\n\n  uuid@8.3.2: {}\n\n  v8-compile-cache-lib@3.0.1: {}\n\n  validate-npm-package-license@3.0.4:\n    dependencies:\n      spdx-correct: 3.2.0\n      spdx-expression-parse: 3.0.1\n\n  value-or-promise@1.0.12: {}\n\n  verror@1.10.0:\n    dependencies:\n      assert-plus: 1.0.0\n      core-util-is: 1.0.2\n      extsprintf: 1.3.0\n\n  vite-node@2.1.8(@types/node@22.9.0):\n    dependencies:\n      cac: 6.7.14\n      debug: 4.4.0\n      es-module-lexer: 1.6.0\n      pathe: 1.1.2\n      vite: 5.4.11(@types/node@22.9.0)\n    transitivePeerDependencies:\n      - '@types/node'\n      - less\n      - lightningcss\n      - sass\n      - sass-embedded\n      - stylus\n      - sugarss\n      - supports-color\n      - terser\n\n  vite@5.4.11(@types/node@22.9.0):\n    dependencies:\n      esbuild: 0.21.5\n      postcss: 8.4.49\n      rollup: 4.29.1\n    optionalDependencies:\n      '@types/node': 22.9.0\n      fsevents: 2.3.3\n\n  vitest@2.1.8(@types/node@22.9.0)(jsdom@6.5.1):\n    dependencies:\n      '@vitest/expect': 2.1.8\n      '@vitest/mocker': 2.1.8(vite@5.4.11(@types/node@22.9.0))\n      '@vitest/pretty-format': 2.1.8\n      '@vitest/runner': 2.1.8\n      '@vitest/snapshot': 2.1.8\n      '@vitest/spy': 2.1.8\n      '@vitest/utils': 2.1.8\n      chai: 5.1.2\n      debug: 4.4.0\n      expect-type: 1.1.0\n      magic-string: 0.30.17\n      pathe: 1.1.2\n      std-env: 3.8.0\n      tinybench: 2.9.0\n      tinyexec: 0.3.2\n      tinypool: 1.0.2\n      tinyrainbow: 1.2.0\n      vite: 5.4.11(@types/node@22.9.0)\n      vite-node: 2.1.8(@types/node@22.9.0)\n      why-is-node-running: 2.3.0\n    optionalDependencies:\n      '@types/node': 22.9.0\n      jsdom: 6.5.1\n    transitivePeerDependencies:\n      - less\n      - lightningcss\n      - msw\n      - sass\n      - sass-embedded\n      - stylus\n      - sugarss\n      - supports-color\n      - terser\n\n  vscode-languageserver-textdocument@1.0.12: {}\n\n  vscode-uri@3.0.8: {}\n\n  wcwidth@1.0.1:\n    dependencies:\n      defaults: 1.0.4\n\n  web-streams-polyfill@3.3.3: {}\n\n  webcrypto-core@1.8.1:\n    dependencies:\n      '@peculiar/asn1-schema': 2.3.13\n      '@peculiar/json-schema': 1.1.12\n      asn1js: 3.0.5\n      pvtsutils: 1.3.5\n      tslib: 2.8.1\n\n  webidl-conversions@3.0.1: {}\n\n  well-known-symbols@2.0.0: {}\n\n  whatwg-url-compat@0.6.5:\n    dependencies:\n      tr46: 0.0.3\n\n  whatwg-url@5.0.0:\n    dependencies:\n      tr46: 0.0.3\n      webidl-conversions: 3.0.1\n\n  which-boxed-primitive@1.0.2:\n    dependencies:\n      is-bigint: 1.0.4\n      is-boolean-object: 1.1.2\n      is-number-object: 1.0.7\n      is-string: 1.0.7\n      is-symbol: 1.0.4\n\n  which-builtin-type@1.1.4:\n    dependencies:\n      function.prototype.name: 1.1.6\n      has-tostringtag: 1.0.2\n      is-async-function: 2.0.0\n      is-date-object: 1.0.5\n      is-finalizationregistry: 1.0.2\n      is-generator-function: 1.0.10\n      is-regex: 1.1.4\n      is-weakref: 1.0.2\n      isarray: 2.0.5\n      which-boxed-primitive: 1.0.2\n      which-collection: 1.0.2\n      which-typed-array: 1.1.15\n\n  which-collection@1.0.2:\n    dependencies:\n      is-map: 2.0.3\n      is-set: 2.0.3\n      is-weakmap: 2.0.2\n      is-weakset: 2.0.3\n\n  which-module@2.0.1: {}\n\n  which-pm@2.0.0:\n    dependencies:\n      load-yaml-file: 0.2.0\n      path-exists: 4.0.0\n\n  which-typed-array@1.1.15:\n    dependencies:\n      available-typed-arrays: 1.0.7\n      call-bind: 1.0.7\n      for-each: 0.3.3\n      gopd: 1.0.1\n      has-tostringtag: 1.0.2\n\n  which@1.3.1:\n    dependencies:\n      isexe: 2.0.0\n\n  which@2.0.2:\n    dependencies:\n      isexe: 2.0.0\n\n  why-is-node-running@2.3.0:\n    dependencies:\n      siginfo: 2.0.0\n      stackback: 0.0.2\n\n  wide-align@1.1.5:\n    dependencies:\n      string-width: 4.2.3\n\n  word-wrap@1.2.5: {}\n\n  wrap-ansi@6.2.0:\n    dependencies:\n      ansi-styles: 4.3.0\n      string-width: 4.2.3\n      strip-ansi: 6.0.1\n\n  wrap-ansi@7.0.0:\n    dependencies:\n      ansi-styles: 4.3.0\n      string-width: 4.2.3\n      strip-ansi: 6.0.1\n\n  wrap-ansi@8.1.0:\n    dependencies:\n      ansi-styles: 6.2.1\n      string-width: 5.1.2\n      strip-ansi: 7.1.0\n\n  wrappy@1.0.2: {}\n\n  write-file-atomic@3.0.3:\n    dependencies:\n      imurmurhash: 0.1.4\n      is-typedarray: 1.0.0\n      signal-exit: 3.0.7\n      typedarray-to-buffer: 3.1.5\n\n  write-file-atomic@5.0.1:\n    dependencies:\n      imurmurhash: 0.1.4\n      signal-exit: 4.1.0\n\n  ws@8.13.0: {}\n\n  ws@8.18.0: {}\n\n  xdg-basedir@5.1.0: {}\n\n  xml-name-validator@2.0.1: {}\n\n  xmlhttprequest@1.8.0: {}\n\n  xregexp@5.1.1:\n    dependencies:\n      '@babel/runtime-corejs3': 7.26.0\n\n  xtend@4.0.2: {}\n\n  y18n@4.0.3: {}\n\n  y18n@5.0.8: {}\n\n  yallist@2.1.2: {}\n\n  yallist@3.1.1: {}\n\n  yallist@4.0.0: {}\n\n  yaml-eslint-parser@1.2.3:\n    dependencies:\n      eslint-visitor-keys: 3.4.3\n      lodash: 4.17.21\n      yaml: 2.6.0\n\n  yaml@2.6.0: {}\n\n  yargs-parser@18.1.3:\n    dependencies:\n      camelcase: 5.3.1\n      decamelize: 1.2.0\n\n  yargs-parser@21.1.1: {}\n\n  yargs@15.4.1:\n    dependencies:\n      cliui: 6.0.0\n      decamelize: 1.2.0\n      find-up: 4.1.0\n      get-caller-file: 2.0.5\n      require-directory: 2.1.1\n      require-main-filename: 2.0.0\n      set-blocking: 2.0.0\n      string-width: 4.2.3\n      which-module: 2.0.1\n      y18n: 4.0.3\n      yargs-parser: 18.1.3\n\n  yargs@17.7.2:\n    dependencies:\n      cliui: 8.0.1\n      escalade: 3.1.2\n      get-caller-file: 2.0.5\n      require-directory: 2.1.1\n      string-width: 4.2.3\n      y18n: 5.0.8\n      yargs-parser: 21.1.1\n\n  yn@3.1.1: {}\n\n  yocto-queue@0.1.0: {}\n\n  zod-validation-error@3.4.0(zod@3.23.8):\n    dependencies:\n      zod: 3.23.8\n\n  zod@3.23.8: {}\n"
        },
        {
          "name": "pnpm-workspace.yaml",
          "type": "blob",
          "size": 0.025390625,
          "content": "packages:\n  - 'packages/*'"
        }
      ]
    }
  ]
}