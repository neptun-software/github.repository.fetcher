{
  "metadata": {
    "timestamp": 1736563989082,
    "page": 529,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjUzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "microsoft/TypeScriptSamples",
      "stars": 3192,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.2509765625,
          "content": "# Auto detect text files and perform EOL normalization\n* text=auto\n\n# Custom\n*.ts      text\n*.jade    text\n*.md      text\n*.js      text\n*.cmd     text eol=crlf\n*.sln     text eol=crlf\n*.csproj  text eol=crlf\n*.jsproj  text eol=crlf\n*.njsproj text eol=crlf\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.7724609375,
          "content": "## Ignore Visual Studio temporary files, build results, and\n## files generated by popular Visual Studio add-ons.\n\n# User-specific files\n*.suo\n*.user\n*.sln.docstates\n\n# Build results\n[Dd]ebug/\n[Dd]ebugPublic/\n[Rr]elease/\nx64/\nbuild/\nbld/\n[Bb]in/\n[Oo]bj/\n\n# Roslyn cache directories\n*.ide/\n\n# MSTest test Results\n[Tt]est[Rr]esult*/\n[Bb]uild[Ll]og.*\n\n#NUNIT\n*.VisualState.xml\nTestResult.xml\n\n# Build Results of an ATL Project\n[Dd]ebugPS/\n[Rr]eleasePS/\ndlldata.c\n\n*_i.c\n*_p.c\n*_i.h\n*.ilk\n*.meta\n*.obj\n*.pch\n*.pdb\n*.pgc\n*.pgd\n*.rsp\n*.sbr\n*.tlb\n*.tli\n*.tlh\n*.tmp\n*.tmp_proj\n*.log\n*.vspscc\n*.vssscc\n.builds\n*.pidb\n*.svclog\n*.scc\n\n# Chutzpah Test files\n_Chutzpah*\n\n# Visual C++ cache files\nipch/\n*.aps\n*.ncb\n*.opensdf\n*.sdf\n*.cachefile\n\n# Visual Studio profiler\n*.psess\n*.vsp\n*.vspx\n\n# TFS 2012 Local Workspace\n$tf/\n\n# Guidance Automation Toolkit\n*.gpState\n\n# ReSharper is a .NET coding add-in\n_ReSharper*/\n*.[Rr]e[Ss]harper\n*.DotSettings.user\n\n# JustCode is a .NET coding addin-in\n.JustCode\n\n# TeamCity is a build add-in\n_TeamCity*\n\n# DotCover is a Code Coverage Tool\n*.dotCover\n\n# NCrunch\n_NCrunch_*\n.*crunch*.local.xml\n\n# MightyMoose\n*.mm.*\nAutoTest.Net/\n\n# Web workbench (sass)\n.sass-cache/\n\n# Installshield output folder\n[Ee]xpress/\n\n# DocProject is a documentation generator add-in\nDocProject/buildhelp/\nDocProject/Help/*.HxT\nDocProject/Help/*.HxC\nDocProject/Help/*.hhc\nDocProject/Help/*.hhk\nDocProject/Help/*.hhp\nDocProject/Help/Html2\nDocProject/Help/html\n\n# Click-Once directory\npublish/\n\n# Publish Web Output\n*.[Pp]ublish.xml\n*.azurePubxml\n## TODO: Comment the next line if you want to checkin your\n## web deploy settings but do note that will include unencrypted\n## passwords\n#*.pubxml\n\n# NuGet Packages Directory\npackages/*\n## TODO: If the tool you use requires repositories.config\n## uncomment the next line\n#!packages/repositories.config\n\n# Enable \"build/\" folder in the NuGet Packages folder since\n# NuGet packages use it for MSBuild targets.\n# This line needs to be after the ignore of the build folder\n# (and the packages folder if the line above has been uncommented)\n!packages/build/\n\n# Windows Azure Build Output\ncsx/\n*.build.csdef\n\n# Windows Store app package directory\nAppPackages/\n\n# Others\nsql/\n*.Cache\nClientBin/\n[Ss]tyle[Cc]op.*\n~$*\n*~\n*.dbmdl\n*.dbproj.schemaview\n*.pfx\n*.publishsettings\nnode_modules/\nbower_components/\n\n# RIA/Silverlight projects\nGenerated_Code/\n\n# Backup & report files from converting an old project file\n# to a newer Visual Studio version. Backup files are not needed,\n# because we have git ;-)\n_UpgradeReport_Files/\nBackup*/\nUpgradeLog*.XML\nUpgradeLog*.htm\n\n# SQL Server files\n*.mdf\n*.ldf\n\n# Business Intelligence projects\n*.rdl.data\n*.bim.layout\n*.bim_*.settings\n\n# Microsoft Fakes\nFakesAssemblies/\n\n# LightSwitch generated files\nGeneratedArtifacts/\n_Pvt_Extensions/\nModelManifest.xml\n\nnode_modules/"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 2.7666015625,
          "content": "## Contributing\n\n## Contributing fixes to existing samples\n\nA bug must have an issue tracking it in the issue tracker that has been approved (labeled \"help wanted\") by the TypeScript team.\nYour pull request should include a link to the bug that you are fixing.\nIf you've submitted a PR for a bug, please post a comment in the bug to avoid duplication of effort.\n\n## Contributing new samples\n\nNew samples may be accepted, but will need to first be approved (labeled \"help wanted\" by a TypeScript coordinator) in the suggestion issue.\n\nFor new samples, please provide a detailed explanation of the intended sample, list of technologies or tools used, and an explanation of why existing samples are not sufficient and a new sample is needed.\n\nA sample is meant to showcase a specific technology or toolchain integration with TypeScript; it is not meant to be a template that users would use to get a project going.\nA sample should only include tools/technologies that serve the main technology it covers; for instance, a sample for a UI framework should not include a test framework integration.\n\nA sample should be well documented.\nPlease include comments in code as well as content in the a `README.md` explaining why steps are being taken.\nComments should also be included in build files if applicable.\nA good sample `README.md` should read like a walkthrough, guiding the reader through different steps of setting up and building the sample.\nSee [TypeScript quick start samples](https://github.com/Microsoft/TypeScript-Handbook/tree/master/pages/quick-start) for guidance.\n\nA sample should be self-contained.\n[npm](https://www.npmjs.com/) is the recommended way of acquiring dependencies.\n[typings](https://github.com/typings/typings) is the recommended way of acquiring definition files.\n\nA sample should be IDE/editor-friendly. Please include a `tsconfig.json` file at the root.\n\nA sample should have no OS dependency.\n\n## Legal\n\nYou will need to complete a Contributor License Agreement (CLA).\nBriefly, this agreement testifies that you are granting us permission to use the submitted change according to the terms of the project's license, and that the work being submitted is under appropriate copyright.\n\nPlease submit a Contributor License Agreement (CLA) before submitting a pull request.\nYou may visit https://cla.microsoft.com to sign digitally.\nAlternatively, download the agreement ([Microsoft Contribution License Agreement.docx](https://www.codeplex.com/Download?ProjectName=typescript&DownloadId=822190) or [Microsoft Contribution License Agreement.pdf](https://www.codeplex.com/Download?ProjectName=typescript&DownloadId=921298)), sign, scan, and email it back to <cla@microsoft.com>.\nBe sure to include your GitHub user name along with the agreement. Once we have received the signed CLA, we'll review the request.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 1.2041015625,
          "content": "# TypeScript Samples\n\nMost of the samples here will assume that you have TypeScript installed.\nYou can get TypeScript with Visual Studio, NuGet, or with npm:\n\n```shell\nnpm install -g typescript\n```\n\nTo compile each sample, `cd` into the directory and use the `tsc` command to compile.\n`tsc` will use each directory's `tsconfig.json` to get specific compiler options.\n\n##### [AMD Modules](amd/README.md)\n\n##### [Angular Seed TypeScript](angular1/README.md)\n\n##### [Angular 2 TypeScript](angular2/README.md)\n\n##### [Async Functions](async/README.md)\n\n##### [Browserify](browserify/README.md)\n\n##### [D3](d3/README.md)\n\n##### [React + Flux + Babel + Karma: The Secret Recipe](react-flux-babel-karma/README.md)\n\n##### [Greeter](greeter/README.md)\n\n##### [Image Board](imageboard/README.md)\n\n##### [interfaces](interfaces/README.md)\n\n##### [JQuery Parallax Starfield](jquery/README.md)\n\n##### [JSPM](jspm/README.md)\n\n##### [jsx-demo](jsx/README.md)\n\n##### [Mankala](mankala/README.md)\n\n##### [Node.js](node/README.md)\n\n##### [Raytracer](raytracer/README.md)\n\n##### [Simple](simple/README.md)\n\n##### [SystemJS](systemjs/README.md)\n\n##### [Todo MVC](todomvc/README.md)\n\n##### [umd](umd/README.md)\n\n##### [Warship Combat](warship/README.md)\n"
        },
        {
          "name": "amd",
          "type": "tree",
          "content": null
        },
        {
          "name": "angular1",
          "type": "tree",
          "content": null
        },
        {
          "name": "angular2",
          "type": "tree",
          "content": null
        },
        {
          "name": "async",
          "type": "tree",
          "content": null
        },
        {
          "name": "browserify",
          "type": "tree",
          "content": null
        },
        {
          "name": "buildall.cmd",
          "type": "blob",
          "size": 1.787109375,
          "content": "@echo off & setlocal EnableDelayedExpansion\n\nif \"%1\"==\"\" (\n   goto :Help\n) \n\ngoto :Start\n\n\n:Help\nEcho **********************************************************\nEcho Usage:\nEcho         buildall.cmd tscPath\nEcho Example:\nEcho         buildall c:\\typescript\\built\\local\\tsc.js\nEcho **********************************************************\ngoto :Done\n\n\n:Start\nset tscPath=%1\nset CURRENTDIR=%~dp0\n\ncall :buildProject \"amd\" \"--sourcemap --module amd %CURRENTDIR%amd\\app.ts\"\ncall :buildProject \"d3\" \"--sourcemap %CURRENTDIR%d3\\data.ts\"\ncall :buildProject \"greeter\" \"--sourcemap %CURRENTDIR%greeter\\greeter.ts\"\ncall :buildProject \"imageboard\" \"--sourcemap --module commonjs %CURRENTDIR%imageboard\\app.ts\"\ncall :buildProject \"interfaces\" \"--sourcemap %CURRENTDIR%interfaces\\interfaces.ts\"\ncall :buildProject \"jquery\" \"--sourcemap --target ES5 %CURRENTDIR%jquery\\parallax.ts\"\ncall :buildProject \"mankala\" \"Driver.ts --sourcemap -out %CURRENTDIR%mankalagame.js\"\ncall :buildProject \"node\" \"--sourcemap --module commonjs %CURRENTDIR%node\\HttpServer.ts\"\ncall :buildProject \"node\" \"--sourcemap --module commonjs %CURRENTDIR%node\\TcpServer.ts\"\ncall :buildProject \"raytracer\" \"--sourcemap %CURRENTDIR%raytracer\\raytracer.ts\"\ncall :buildProject \"simple\" \"--sourcemap %CURRENTDIR%simple\\animals.ts\"\ncall :buildProject \"todomvc\" \"--sourcemap %CURRENTDIR%todomvc\\js\\todos.ts\"\ncall :buildProject \"warship\" \"--sourcemap --target ES5 %CURRENTDIR%warship\\warship.ts\"\n\ngoto :Done\n\n:buildProject\npushd %CURRENTDIR%%~1\necho Running %~1 using node...\n\necho on\ncall node \"%tscPath%\" %~2\necho off\n\nif not %errorlevel%==0 (\n    echo Failed!\n) else (\n    echo Done.\n)\n\necho Running %~1 using cscript...\n\necho on\ncall cscript /nologo \"%tscPath%\" %~2\necho off\n\nif not %errorlevel%==0 (\n    echo Failed!\n) else (\n    echo Done.\n)\n\npopd\ngoto :eof\n\n\n:Done\nENDLOCAL"
        },
        {
          "name": "d3",
          "type": "tree",
          "content": null
        },
        {
          "name": "greeter",
          "type": "tree",
          "content": null
        },
        {
          "name": "imageboard",
          "type": "tree",
          "content": null
        },
        {
          "name": "interfaces",
          "type": "tree",
          "content": null
        },
        {
          "name": "jquery",
          "type": "tree",
          "content": null
        },
        {
          "name": "js-and-ts",
          "type": "tree",
          "content": null
        },
        {
          "name": "jspm",
          "type": "tree",
          "content": null
        },
        {
          "name": "jsx",
          "type": "tree",
          "content": null
        },
        {
          "name": "mankala",
          "type": "tree",
          "content": null
        },
        {
          "name": "node",
          "type": "tree",
          "content": null
        },
        {
          "name": "raytracer",
          "type": "tree",
          "content": null
        },
        {
          "name": "react-flux-babel-karma",
          "type": "tree",
          "content": null
        },
        {
          "name": "simple",
          "type": "tree",
          "content": null
        },
        {
          "name": "systemjs",
          "type": "tree",
          "content": null
        },
        {
          "name": "todomvc",
          "type": "tree",
          "content": null
        },
        {
          "name": "umd",
          "type": "tree",
          "content": null
        },
        {
          "name": "warship",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}