{
  "metadata": {
    "timestamp": 1736563814531,
    "page": 327,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMzMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "i5ting/imove",
      "stars": 3751,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".all-contributorsrc",
          "type": "blob",
          "size": 0.265625,
          "content": "{\n  \"projectName\": \"iMove\",\n  \"projectOwner\": \"i5ting\",\n  \"repoType\": \"github\",\n  \"repoHost\": \"https://github.com\",\n  \"files\": [\n    \"README.md\"\n  ],\n  \"imageSize\": 100,\n  \"commit\": true,\n  \"commitConvention\": \"angular\",\n  \"contributors\": [],\n  \"contributorsPerLine\": 7\n}\n"
        },
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2392578125,
          "content": "# http://editorconfig.org\nroot = true\n\n[*]\nindent_style = space\nindent_size = 2\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[*.md]\ntrim_trailing_whitespace = false\n\n[Makefile]\nindent_style = tab\n"
        },
        {
          "name": ".eslintignore",
          "type": "blob",
          "size": 0.044921875,
          "content": ".circleci\n.github\n.husky\n\ndist/\nnode_modules/\n"
        },
        {
          "name": ".eslintrc.js",
          "type": "blob",
          "size": 1.330078125,
          "content": "module.exports = {\n  extends: [\n    \"prettier/@typescript-eslint\",\n    \"plugin:react/recommended\",\n    \"plugin:@typescript-eslint/recommended\",\n    \"plugin:prettier/recommended\"\n  ],\n  env: {\n    node: true,\n    browser: true,\n  },\n  settings: {\n    react: {\n      version: \"detect\"\n    }\n  },\n  rules: {\n    'prettier/prettier': 'error',\n    'react/jsx-filename-extension': ['warn', { extensions: ['.ts', '.tsx'] }], // 修复 tsx 文件引用 tsx 文件报错的问题\n    \"no-var\": 0,//禁用var，用let和const代替\n    \"no-use-before-define\": 2,//未定义前不能使用\n    \"no-unused-expressions\": 2,//禁止无用的表达式\n    \"space-before-function-paren\": 'off',\n    'comma-dangle': 'off',\n    'import/extensions': 'off',\n  },\n  overrides: [{\n    files: ['*.ts', '*.tsx'],\n    parser: '@typescript-eslint/parser',\n    plugins: ['@typescript-eslint'],\n    extends: [\n      'plugin:@typescript-eslint/eslint-recommended',\n      'plugin:@typescript-eslint/recommended',\n      'prettier/@typescript-eslint',\n    ],\n    rules: {\n      '@typescript-eslint/no-explicit-any': 'off',\n      'no-param-reassign': 'off',\n      '@typescript-eslint/interface-name-prefix': 'off',\n      '@typescript-eslint/no-use-before-define': 'off',\n      '@typescript-eslint/no-unused-vars': 0,\n      '@typescript-eslint/explicit-function-return-type': 0,\n    },\n  },],\n};\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4326171875,
          "content": ".DS_Store\n.vscode\n.eslintcache\n.size-snapshot.json\n.husky\nnpm-debug.log*\nyarn-error.log*\nlerna-debug.log\nnode_modules\ncoverage\nlib\nes\n# production\ndist\n\n# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.\n\n# dependencies\nyarn.lock\npackage-lock.json\n\n# misc\n.DS_Store\n\n# umi\nexample/node_modules\nexample/src/.umi\nexample/src/.umi-production\nexample/src/.umi-test\nexample/.env.local\n\n# eslint\n.eslint-error.log\n"
        },
        {
          "name": ".prettierignore",
          "type": "blob",
          "size": 0.134765625,
          "content": ".cache\npackage.json\npackage-lock.json\npublic\n\n**/*.md\n**/*.svg\n**/*.ejs\n**/*.html\n\nexample/.umi\nexample/.umi-production\nexample/.umi-test\n"
        },
        {
          "name": ".prettierrc",
          "type": "blob",
          "size": 0.22265625,
          "content": "{\n  \"endOfLine\": \"lf\",\n  \"semi\": true,\n  \"tabWidth\": 2,\n  \"singleQuote\": true,\n  \"trailingComma\": \"all\",\n  \"printWidth\": 80,\n  \"overrides\": [\n    {\n      \"files\": \".prettierrc\",\n      \"options\": { \"parser\": \"json\" }\n    }\n  ]\n}\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 8.939453125,
          "content": "# 代码贡献规范\n\n有任何疑问，欢迎提交 [issue](https://github.com/imgcook/imove/issues)，\n或者直接修改提交 [PR](https://github.com/imgcook/imove/pulls)!\n\n## 提交 issue\n\n- 请确定 issue 的类型。\n- 请避免提交重复的 issue，在提交之前搜索现有的 issue。\n- 在标签(分类参考**标签分类**), 标题 或者内容中体现明确的意图。\n\n随后 imove 负责人会确认 issue 意图，更新合适的标签，关联 milestone，指派开发者。\n\n标签可分为两类，type 和 scope\n\n- type: issue 的类型，如 `feature`, `bug`, `documentation`, `performance`, `support` ...\n- scope: 修改文件的范围，如 `core: xx`，`plugin: xx`，`deps: xx`\n\n### 常用标签说明\n\n- `support`: issue 提出的问题需要开发者协作排查，咨询，调试等等日常技术支持。\n- `bug`: 一旦发现可能是 bug 的问题，请打上 `bug`，然后等待确认，一旦确认是 bug，此 issue 会被再打上 `confirmed`。\n  - 此时 issue 会被非常高的优先级进行处理。\n  - 如果此 bug 是正在影响线上应用正常运行，会再打上 `critical`，代表是最高优先级，需要马上立刻处理！\n  - bug 会在最低需要修复的版本进行修复，如是在 `0.9.x` 要修复的，而当前最新版本是 `1.1.x`，\n  那么此 issue 还会被打上 `0.9`，`0.10`，`1.0`，`1.1`，代表需要修复到这些版本。\n- `core: xx`: 代表 issue 跟 core 内核相关，如 `core: antx` 代表跟 `antx` 配置相关。\n- `plugin: xx`: 代表 issue 跟插件相关，如 `deps: session` 代表跟 `session` 插件相关。\n- `deps: xx`: 代表 issue 跟 `dependencies` 模块相关，如 `deps: egg-cors` 代表跟 `egg-cors` 模块相关。\n- `chore: documentation`: 代表发现了文档相关问题，需要修复文档说明。\n- `cbd`: 代表跟服务器部署相关\n\n## 编写文档\n\n所有功能点必须提交配套文档，文档须满足以下要求\n\n- 必须说清楚问题的几个方面：what（是什么），why（为什么），how（怎么做），可根据问题的特性有所侧重。\n- how 部分必须包含详尽完整的操作步骤，必要时附上 **足够简单，可运行** 的范例代码，\n所有范例代码放在 [imove/examples](https://github.com/imgcook/imove) 库中。\n- 提供必要的链接，如申请流程，术语解释和参考文档等。\n- 同步修改中英文文档，或者在 PR 里面说明。\n\n## 提交代码\n\n### 提交 Pull Request\n\n如果你有仓库的开发者权限，而且希望贡献代码，那么你可以创建分支修改代码提交 PR，ykfe 开发团队会 review 代码合并到主干。\n\n```bash\n# 先创建开发分支开发，分支名应该有含义，避免使用 update、tmp 之类的\n$ git checkout -b branch-name\n\n# 开发完成后跑下测试是否通过，必要时需要新增或修改测试用例\n$ npm test\n\n# 测试通过后，提交代码，message 见下面的规范\n\n$ git add . # git add -u 删除文件\n$ git commit -m \"fix(role): role.use must xxx\"\n$ git push origin branch-name\n```\n\n由于谁也无法保证过了多久之后还记得多少，为了后期回溯历史的方便，请在提交 MR 时确保提供了以下信息。\n\n1. 需求点（一般关联 issue 或者注释都算）\n2. 升级原因（不同于 issue，可以简要描述下为什么要处理）\n3. 框架测试点（可以关联到测试文件，不用详细描述，关键点即可）\n4. 关注点（针对用户而言，可以没有，一般是不兼容更新等，需要额外提示）\n\n### 代码风格\n\n你的代码风格必须通过 eslint，你可以运行 `$ npm run lint` 本地测试。\n\n### Commit 提交规范\n\n根据 [angular 规范](https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format)提交 commit，\n这样 history 看起来更加清晰，还可以自动生成 changelog。\n\n```xml\n<type>(<scope>): <subject>\n<BLANK LINE>\n<body>\n<BLANK LINE>\n<footer>\n```\n\n（1）type\n\n提交 commit 的类型，包括以下几种\n\n- feat: 新功能\n- fix: 修复问题\n- docs: 修改文档\n- style: 修改代码格式，不影响代码逻辑\n- refactor: 重构代码，理论上不影响现有功能\n- perf: 提升性能\n- test: 增加修改测试用例\n- chore: 修改工具相关（包括但不限于文档、代码生成等）\n- deps: 升级依赖\n\n（2）scope\n\n修改文件的范围（包括但不限于 doc, middleware, core, config, plugin）\n\n（3）subject\n\n用一句话清楚的描述这次提交做了什么\n\n（4）body\n\n补充 subject，适当增加原因、目的等相关因素，也可不写。\n\n（5）footer\n\n- **当有非兼容修改(Breaking Change)时必须在这里描述清楚**\n- 关联相关 issue，如 `Closes #1, Closes #2, #3`\n- 如果功能点有新增或修改的，还需要关联文档 `doc` 和 `egg-core` 的 PR，如 `eggjs/egg-core#123`\n\n示例\n\n```\nfix($compile): [BREAKING_CHANGE] couple of unit tests for IE9\n\nOlder IEs serialize html uppercased, but IE9 does not...\nWould be better to expect case insensitive, unfortunately jasmine does\nnot allow to user regexps for throw expectations.\n\nDocument change on eggjs/egg#123\n\nCloses #392\n\nBREAKING CHANGE:\n\n  Breaks foo.bar api, foo.baz should be used instead\n```\n\n详情请查看具体[文档](https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y/edit)。\n\n### 英语翻译规范\n\n英语正文按照一般英语语法规律书写即可，但标题比较特殊，应该按照以下规范进行书写：\n\n- 名词、动词、代词、形容词、副词等首字母大写，介词、冠词、连词、感叹词和助词首字母小写，*标题第一个单词、最后一个单词无论词性首字母应该大写*。\n- 专有名词（如直接引用某个变量，或者某个插件名称等），必须使用反单引号（键盘上 Esc 正下方）进行引用，并保持原来大小写。\n- 超过5个字母的介词首字母应该大写，否则一律小写。\n- 如果是重要提示性标题，或者是专有名称标题（例如 Http 请求方法：GET，POST，PUT，DELETE），可以全部字母都用大写（慎重考虑）。\n- 如果标题属于“动宾”性质的短语（如“配置管理”），尽量翻译成“宾+动词名词”的形式（Configuration Management），或者是“动名词+宾语”的形式（Managing Configuration）。\n- 如果标题被当做一个完整的英语句子，请按照英语句子的语法格式大小写（如：常见问题 FAQ 中每一个标题都是一个英语句子）。\n\n有关详情，可以参考[英语标题大小写]。\n\n## 发布管理\n\nimove 基于 [semver] 语义化版本号进行发布。\n\n### 分支策略\n\n`master` 分支为当前稳定发布的版本，`next` 分支为下一个开发中的大版本。\n\n- 只维护两个版本，除非有安全问题，否则修复只会 patch 到 `master` 和 `next` 分支，其他更新推动上层框架升级到稳定大版本的最新版本。\n- 所有 API 的废弃都需要在当前的稳定版本上 `deprecate` 提示，并保证在当前的稳定版本上一直兼容到新版本的发布。\n- `master` 分支不设置 publish tag，上层框架基于 semver 依赖稳定版本。\n- `next` 分支设置 tag 为 `next`，上层框架可以通过 `egg@next` 引用开发中的版本进行测试。\n- egg 持续维护的版本以 Milestone 为准，只要是开着的版本都会进行修复。\n\n### 发布策略\n\n每个大版本都有一个发布经理管理（PM），他/她要做的事情\n\n#### 准备工作：\n\n- 建立 milestone，确认需求关联 milestone，指派和更新 issues，如 [1.x milestone]。\n- 从 `master` 分支新建 `next` 分支，并设置 tag 为 `next`。\n\n#### 发布前：\n\n- 确认当前 Milestone 所有的 issue 都已关闭或可延期，完成性能测试。\n- 发起一个新的 [Release Proposal MR]，按照 [node CHANGELOG] 进行 `History` 的编写，修正文档中与版本相关的内容，commits 可以自动生成。\n    ```bash\n    $ npm run commits\n    ```\n- 指定下一个大版本的 PM。\n\n#### 发布时：\n\n- 将老的稳定版本（master）备份到以当前大版本为名字的分支上（例如 `1.x`），并设置 tag 为 `release-{v}.x`（ v 为当前版本，例如 `release-1.x`）。\n- 将 `next` 分支推送到 `master`，成为新的稳定版本分支，并去除 `next` tag，修改 README 中与分支相关的内容。\n- 发布新的稳定版本到 [npm]，并通知上层框架进行更新。\n- `npm publish` 之前，请先阅读 [我是如何发布一个 npm 包的]。\n\n上述描述中所有的设置 tag 都是指在 `package.json` 中设置 npm 的 tag。\n\n```json\n\"publishConfig\": {\n  \"tag\": \"next\"\n}\n```\n\n[semver]: https://semver.org/lang/zh-CN/\n[Release Proposal MR]: https://github.com/nodejs/node/pull/4181\n[node CHANGELOG]: https://github.com/nodejs/node/blob/master/CHANGELOG.md\n[1.x milestone]: https://github.com/eggjs/egg/milestone/1\n[npm]: http://npmjs.com/\n[我是如何发布一个 npm 包的]: https://fengmk2.com/blog/2016/how-i-publish-a-npm-package\n[英语标题大小写]: https://headlinecapitalization.com/"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0380859375,
          "content": "MIT License\n\nCopyright (c) 2020 拾邑\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.en-US.md",
          "type": "blob",
          "size": 2.79296875,
          "content": "# iMove\n\n<!-- ALL-CONTRIBUTORS-BADGE:START - Do not remove or modify this section -->\n\n[![All Contributors](https://img.shields.io/badge/all_contributors-0-orange.svg?style=flat-square)](#contributors-)\n\n<!-- ALL-CONTRIBUTORS-BADGE:END -->\n\n<div align=\"center\">\n  <img src=\"https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=3874775950,1064987171&fm=26&gp=0.jpg\" width=\"200px\">\n</div>\n\n<p align=\"center\">\n  iMove is a logic-reusable, function-oriented and process-visualized JavaScript tool library.\n</p>\n\n[English](./README.en-US.md) | 简体中文\n\n## Features\n\n- [x] **Process visualization:** iMove is easy to use and easy to draw. Its logical expression is more intuitive and easy to understand.\n- [x] **Logic re-usage:** iMove node supports multiplexing, and its single node supports parameter configuration.\n- [x] **Flexible**: We need to write an only function. The node can also be extended. iMove can also support plug-in integration.\n- [ ] **Multi-language compilation**: There is no language compiling code limitation (example: support JavaScript, Java compiling code).\n\n## Quickstart\n\n### Step1. Run\n\nDownload this project, install dependencies and start the project.\n\n```bash\n$ git clone https://github.com/ykfe/imove.git\n$ cd imove/example\n$ npm install\n$ npm start\n```\n<!-- markdown-link-check-disable -->\nOpen http://localhost:8000/ and you can see the online effect.\n<!-- markdown-link-check-enable -->\n\n### Step2. Draw flowchart\n\nDrag nodes from the left panel and drop them into the center, then we can get a flowchart.\n\n![flowchart](https://img.alicdn.com/tfs/TB1aoYe4pP7gK0jSZFjXXc5aXXa-3090-1806.jpg)\n\n### Step3. Configure nodes\n\nSelect the node, modify its display name and complete the code.\n\n![flowchart-usage1](https://img.alicdn.com/tfs/TB1z6DKoZieb18jSZFvXXaI3FXa-1924-1125.png)\n\n![flowchart-usage2](https://img.alicdn.com/tfs/TB1lC26tTM11u4jSZPxXXahcXXa-1924-1125.png)\n\n## Contributing\n\n1. Fork this repository\n2. Create a new branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push (`git push origin my-new-feature`)\n5. File a PR\n\n## Welcome to fork and feedback\n\nIf you have any suggestion, welcome to GitHub to raise [issues](https://github.com/imgcook/imove/issues).\n\n## License\n\nThis project follows the [MIT](http://www.opensource.org/licenses/MIT) license.\n\n## Contributors ✨\n\nThanks goes to these excellent ([contributors](https://allcontributors.org/docs/en/emoji-key)):\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<!-- markdownlint-restore -->\n<!-- prettier-ignore-end -->\n\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors](https://github.com/all-contributors/all-contributors) specification. Contributions of any kind are welcome!\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.9091796875,
          "content": "<div align=\"center\">\n  <img src=\"https://ss1.bdstatic.com/70cFuXSh_Q1YnxGkpoWK1HF6hhy/it/u=3874775950,1064987171&fm=26&gp=0.jpg\" width=\"200px\">\n  \n  [![gitter][gitter-image]][gitter-url]\n  [![NPM version][npm-image]][npm-url]\n  [![build status][travis-image]][travis-url]\n  [![Test coverage][coveralls-image]][coveralls-url]\n  [![PR's Welcome][pr-welcoming-image]][pr-welcoming-url]\n\n</div>\n\n<p align=\"center\">\n  INACTIVE: iMove 是一个逻辑可复用的，面向函数的，流程可视化的 JavaScript 工具库。\n</p>\n\n[English](./README.en-US.md) | 简体中文\n\niMove是一个面向前端开发者的逻辑编排工具，核心解决的是复杂逻辑复用的问题。\n\niMove由2部分组成：画布和imove-sdk。通过本地起一个http服务运行画布，在画布上完成代码编写和节点编排，最终将流程导出dsl，放到项目中，通过imove-sdk调用执行。\n\n## 特性\n\n- [x] **流程可视化**：上手简单，绘图方便，逻辑表达更直观，易于理解\n- [x] **逻辑复用**：iMove 节点支持复用，单节点支持参数配置\n- [x] **灵活可扩展**：仅需写一个函数，节点可扩展，支持插件集成\n- [x] **适用于JavaScript所有场景**：比如前端点击事件，Ajax 请求和 Node.js 后端 API等\n- [ ] **多语言编译**：无语言编译出码限制（例：支持 JavaScript, Java 编译出码）\n\n## 使用场景\n\n![usage](https://img.alicdn.com/imgextra/i1/O1CN01kRXnfQ1LFhesOA6cn_!!6000000001270-2-tps-2212-1166.png)\n\n1. 前端流程：比如点击事件，组件生命周期回调等。\n1. 后端流程：比如 Node.js 或 Serverless 领域。\n1. 前端+后端：比如前端点击事件，Ajax 请求和后端 API。\n\n## 快速开始\n\n### 步骤 1. 准备\n\n下载仓库，安装并启动\n\n```bash\n$ git clone https://github.com/ykfe/imove.git\n$ cd imove/example\n$ npm install\n$ npm start\n```\n\n<!-- markdown-link-check-disable -->\n此时浏览器会自动打开 `http://localhost:8000/` ，可以看到运行效果。\n<!-- markdown-link-check-enable -->\n\n### 步骤 2. 绘制流程图\n\n从左侧拖动节点至中央画布，绘制流程图\n\n![flowchart](https://img.alicdn.com/tfs/TB1aoYe4pP7gK0jSZFjXXc5aXXa-3090-1806.jpg)\n\n### 步骤 3. 配置节点\n\n选择节点，修改节点名，编辑节点代码\n\n![flowchart-usage1](https://img.alicdn.com/tfs/TB1z6DKoZieb18jSZFvXXaI3FXa-1924-1125.png)\n\n![flowchart-usage2](https://img.alicdn.com/tfs/TB1lC26tTM11u4jSZPxXXahcXXa-1924-1125.png)\n\n## Authors\n\n* qilei0529 - 飞羽「Leader」\n* SmallStoneSK - 菉竹「Core Team」\n* suanmei - 拾邑「Core Team」\n* iloveyou11 - 冷卉「Core Team」\n* i5ting - 狼叔「Core Team」\n\n团队博客，各种原理，设计初衷，实现，思考等都在这里： https://www.yuque.com/imove/blog\n\nSee also the list of [contributors](https://github.com/imgcook/imove/graphs/contributors) who participated in this project.\n\n## 贡献\n\n1. Fork 仓库\n2. 创建分支 (`git checkout -b my-new-feature`)\n3. 提交修改 (`git commit -am 'Add some feature'`)\n4. 推送 (`git push origin my-new-feature`)\n5. 创建 PR\n\n## 欢迎 fork 和反馈\n\n如有建议或意见，欢迎在 github [issues](https://github.com/imgcook/imove/issues) 区提问\n\n## 协议\n\n本仓库遵循 [MIT 协议](http://www.opensource.org/licenses/MIT)\n\n## 贡献者 ✨\n\n感谢 [蚂蚁 X6 团队](https://github.com/antvis/X6) 提供的绘图引擎\n\n感谢所有贡献的人 ([emoji key](https://allcontributors.org/docs/en/emoji-key)):\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<!-- markdownlint-restore -->\n<!-- prettier-ignore-end -->\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\n本仓库遵循 [all-contributors](https://github.com/all-contributors/all-contributors) 规范，欢迎贡献!\n\n[npm-image]: https://img.shields.io/npm/v/@imove/core.svg?style=flat-square\n[npm-url]: https://www.npmjs.com/package/@imove/core\n[travis-image]: https://img.shields.io/travis/imgcook/imove/master.svg?style=flat-square\n[travis-url]: https://travis-ci.org/imgcook/imove/\n[coveralls-image]: https://img.shields.io/codecov/c/github/imgcook/imove.svg?style=flat-square\n[coveralls-url]: https://codecov.io/github/imgcook/imove?branch=master\n[backers-image]: https://opencollective.com/imgcook/imove/backers/badge.svg?style=flat-square\n[sponsors-image]: https://opencollective.com/imgcook/imove/sponsors/badge.svg?style=flat-square\n[gitter-image]: https://img.shields.io/gitter/room/i5ting/imove.svg?style=flat-square\n[gitter-url]: https://gitter.im/i5ting/imove?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\n[#imgcook/imove]: https://webchat.freenode.net/?channels=#imgcook/imove\n[pr-welcoming-image]: https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square\n[pr-welcoming-url]: https://github.com/imgcook/imove/pull/new\n\n## 项目 Star 数增长趋势\n\n[![Stargazers over time](https://starchart.cc/ykfe/imove.svg)](https://starchart.cc/ykfe/imove)\n\n"
        },
        {
          "name": "__tests__",
          "type": "tree",
          "content": null
        },
        {
          "name": "config",
          "type": "tree",
          "content": null
        },
        {
          "name": "cypress.json",
          "type": "blob",
          "size": 0.0029296875,
          "content": "{}\n"
        },
        {
          "name": "cypress",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "example",
          "type": "tree",
          "content": null
        },
        {
          "name": "lerna.json",
          "type": "blob",
          "size": 0.076171875,
          "content": "{\n  \"packages\": [\n    \"packages/*\",\n    \"example\"\n  ],\n  \"version\": \"0.3.3\"\n}\n"
        },
        {
          "name": "mlc_config.json",
          "type": "blob",
          "size": 0.193359375,
          "content": "{\n  \"ignorePatterns\": [\n    {\n      \"pattern\": \"^https?://0.0.0.0:\\\\d+\"\n    },\n    {\n      \"pattern\": \"^https?://127.0.0.1:\\\\d+\"\n    },\n    {\n      \"pattern\": \"^https?://localhost:\\\\d+\"\n    }\n  ]\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.7685546875,
          "content": "{\n  \"name\": \"root\",\n  \"private\": true,\n  \"scripts\": {\n    \"test\": \"jest --coverage\",\n    \"e2e\": \"cypress open\",\n    \"doc\": \"dumi dev\",\n    \"start\": \"concurrently \\\"lerna run watch --parallel\\\" \\\"cross-env APP_ROOT=example umi dev\\\"\",\n    \"example\": \"concurrently \\\"lerna run watch --parallel\\\" \\\"cross-env APP_ROOT=example umi dev\\\" \\\"imove -d\\\"\",\n    \"postinstall\": \"lerna init && lerna exec npm i && lerna exec npm run build && npm link packages/cli && lerna bootstrap\",\n    \"prepare\": \"husky install\"\n  },\n  \"jest\": {\n    \"projects\": [\n      \"config/cli.jest.config.js\",\n      \"config/core.jest.config.js\",\n      \"config/editor.jest.config.js\",\n      \"config/plugin.jest.config.js\"\n    ]\n  },\n  \"devDependencies\": {\n    \"@rollup/plugin-commonjs\": \"^11.0.2\",\n    \"@rollup/plugin-json\": \"^4.0.3\",\n    \"@rollup/plugin-node-resolve\": \"^7.1.3\",\n    \"@rollup/plugin-strip\": \"^1.3.2\",\n    \"@types/jest\": \"^26.0.16\",\n    \"@typescript-eslint/eslint-plugin\": \"^4.14.0\",\n    \"@typescript-eslint/parser\": \"^2.29.0\",\n    \"concurrently\": \"^5.3.0\",\n    \"cross-env\": \"^7.0.3\",\n    \"cypress\": \"^6.2.0\",\n    \"dumi\": \"^1.0.38\",\n    \"eslint\": \"^6.8.0\",\n    \"eslint-config-prettier\": \"^7.2.0\",\n    \"eslint-plugin-prettier\": \"^3.3.1\",\n    \"eslint-plugin-react\": \"^7.22.0\",\n    \"husky\": \"^7.0.1\",\n    \"lerna\": \"^3.22.1\",\n    \"less\": \"^3.12.2\",\n    \"lint-staged\": \"^11.0.1\",\n    \"lowdb\": \"^1.0.0\",\n    \"ora\": \"^4.1.1\",\n    \"postcss\": \"^8.2.1\",\n    \"prettier\": \"^2.2.1\",\n    \"rollup\": \"^2.6.1\",\n    \"rollup-plugin-postcss\": \"^4.0.0\",\n    \"rollup-plugin-size-snapshot\": \"^0.11.0\",\n    \"rollup-plugin-typescript\": \"^1.0.1\",\n    \"snazzy\": \"^9.0.0\",\n    \"ts-jest\": \"^26.4.4\",\n    \"typescript\": \"^4.1.3\",\n    \"umi\": \"^3.3.3\",\n    \"watch\": \"^1.0.2\"\n  },\n  \"lint-staged\": {\n    \"packages/**/*.{ts,tsx,js,jsx}\": \"eslint --cache --fix\"\n  }\n}\n"
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "rollup.config.js",
          "type": "blob",
          "size": 0.51171875,
          "content": "import resolve from '@rollup/plugin-node-resolve';\nimport commonjs from '@rollup/plugin-commonjs';\nimport strip from '@rollup/plugin-strip';\nimport json from '@rollup/plugin-json';\nimport { sizeSnapshot } from 'rollup-plugin-size-snapshot';\n\nconst input = './src/index.tsx';\nconst extensions = ['.js', '.jsx', '.ts', '.tsx'];\n\nexport default {\n  input,\n  plugins: [\n    resolve({ extensions, preferBuiltins: true }),\n    commonjs(),\n    json(),\n    strip({ debugger: true }),\n    sizeSnapshot({ printInfo: false }),\n  ],\n};\n"
        },
        {
          "name": "sandbox.config.json",
          "type": "blob",
          "size": 0.0625,
          "content": "{\n  \"template\": \"node\",\n  \"container\": {\n    \"port\": 8000\n  }\n}\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "tsconfig.json",
          "type": "blob",
          "size": 0.26953125,
          "content": "{\n  \"compilerOptions\": {\n    \"target\": \"esnext\",\n    \"module\": \"commonjs\",\n    \"allowJs\": false,\n    \"jsx\": \"react\",\n    \"declaration\": true,\n    \"types\": [],\n    \"strict\": true,\n    \"resolveJsonModule\": true,\n    \"experimentalDecorators\": true,\n    \"skipLibCheck\": true\n  }\n}"
        }
      ]
    }
  ]
}