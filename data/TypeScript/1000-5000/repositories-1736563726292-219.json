{
  "metadata": {
    "timestamp": 1736563726292,
    "page": 219,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjIyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "arktypeio/arktype",
      "stars": 4093,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.341796875,
          "content": "dist\nout\nnode_modules\ntemp\ntmp\n*.temp.*\n*.log\n*.tsbuildinfo\n.DS_Store\n.docusaurus\n.astro\n.next\n.source\n.cache-loader\n.attest\ncoverage\n# we avoid committing the root pnpm-lock in order to keep the root of the repo as clean as possible.\n# we can get away with this to since we're only installing devDependencies and they're all pinned.\n/pnpm-lock.yaml\n"
        },
        {
          "name": ".npmrc",
          "type": "blob",
          "size": 0.01953125,
          "content": "shell-emulator=true\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0224609375,
          "content": "Copyright 2024 ArkType\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 10.8271484375,
          "content": "<h1 align=\"center\">ArkType <sub><sup>TypeScript's 1:1 validator</sup></sub></h1>\n\n## What is it?\n\n<p>ArkType is a runtime validation library that can infer <b>TypeScript definitions 1:1</b> and reuse them as <b>highly-optimized validators</b> for your data.</p>\n\n<p>With each character you type, you'll get <b>immediate feedback from your editor</b> in the form of either a fully-inferred <code>Type</code> or a specific and helpful <code>ParseError</code>.</p>\n\n<p>This result exactly mirrors what you can expect to happen at runtime down to the punctuation of the error message- <b>no plugins required</b>.</p>\n\nCheck out [how it works](#how) or [scroll slightly](#install) to read about installation.\n\n<a id=\"install\" />\n\n## Install\n\n<img src=\"./ark/docs/src/assets/npm.svg\" alt=\"Npm Icon\" height=\"16px\" /> <code>npm install arktype</code>\n<sub>(or whatever package manager you prefer)</sub>\n<br />\n\nOur types are tested in [strict-mode](https://www.typescriptlang.org/tsconfig#strict) with TypeScript version `5.4+`, although you will likely have success with other versions after 5.0.\n\nIf your types work but you notice errors in node_modules, this could be due to `tsconfig` incompatibilities- please enable `compilerOptions/skipLibCheck` ([docs](https://www.typescriptlang.org/tsconfig/#skipLibCheck)).\n\n## Your first type\n\nDefining basic types in ArkType is just like TypeScript, so if you already know how to do that, congratulations! You already know most of ArkType's syntax 🎉\n\nFor an ever better in-editor developer experience, try the [ArkDark VSCode extension](https://marketplace.visualstudio.com/items?itemName=arktypeio.arkdark) for syntax highlighting.\n\n```ts\nimport { type } from \"arktype\"\n\n// Definitions are statically parsed and inferred as TS\nexport const user = type({\n\tname: \"string\",\n\tdevice: {\n\t\tplatform: \"'android'|'ios'\",\n\t\t\"version?\": \"number\"\n\t}\n})\n\n// Validators return typed data or clear, customizable errors.\nexport const out = user({\n\tname: \"Alan Turing\",\n\tdevice: {\n\t\t// errors.summary: \"device/platform must be 'android' or 'ios' (was 'enigma')\"\n\t\tplatform: \"enigma\"\n\t}\n})\n\nif (out instanceof type.errors) {\n\t// a clear, user-ready error message, even for complex unions and intersections\n\tconsole.log(out.summary)\n} else {\n\t// your valid data!\n\tconsole.log(out)\n}\n```\n\n## Example syntax\n\nLots more docs are on the way, but I want to highlight some of the most useful syntax patterns/features that are carried over from alpha as well as those new to the 2.0 release.\n\n```ts\n// Syntax carried over from 1.0 + TS\nexport const currentTsSyntax = type({\n\tkeyword: \"null\",\n\tstringLiteral: \"'TS'\",\n\tnumberLiteral: \"5\",\n\tbigintLiteral: \"5n\",\n\tunion: \"string|number\",\n\tintersection: \"boolean&true\",\n\tarray: \"Date[]\",\n\tgrouping: \"(0|1)[]\",\n\tobjectLiteral: {\n\t\tnested: \"string\",\n\t\t\"optional?\": \"number\"\n\t},\n\ttuple: [\"number\", \"number\"]\n})\n\n// available syntax new to 2.0\n\nexport const upcomingTsSyntax = type({\n\tkeyof: \"keyof object\",\n\tvariadicTuples: [\"true\", \"...\", \"false[]\"]\n})\n\n// runtime-specific syntax and builtin keywords with great error messages\n\nexport const validationSyntax = type({\n\tkeywords: \"email|uuid|creditCard|integer\", // and many more\n\tbuiltinParsers: \"parse.date\", // parses a Date from a string\n\tnativeRegexLiteral: /@arktype\\.io/,\n\tembeddedRegexLiteral: \"email&/@arktype\\\\.io/\",\n\tdivisibility: \"number%10\", // a multiple of 10\n\tbound: \"alpha>10\", // an alpha-only string with more than 10 characters\n\trange: \"1<=email[]<100\", // a list of 1 to 99 emails\n\tnarrows: [\"number\", \":\", n => n % 2 === 1], // an odd integer\n\tmorphs: [\"string\", \"=>\", parseFloat] // validates a string input then parses it to a number\n})\n\n// root-level expressions\n\nconst intersected = type({ value: \"string\" }, \"&\", { format: \"'bigint'\" })\n\n// chained expressions via .or, .and, .narrow, .pipe and much more\n//  (these replace previous helper methods like union and intersection)\n\nconst user = type({\n\tname: \"string\",\n\tage: \"number\"\n})\n\nconst parseUser = type(\"string\").pipe(s => JSON.parse(s), user)\n\n// type is fully introspectable and traversable, displayed as:\ntype ParseUser = Type<\n\t(In: string) => Out<{\n\t\tname: string\n\t\tage: number\n\t}>\n>\n\nconst maybeMe = parseUser('{ \"name\": \"David\" }')\n\nif (maybeMe instanceof type.errors) {\n\t// \"age must be a number (was missing)\"\n\tconsole.log(maybeMe.summary)\n}\n```\n\nThere's so much more I want to share but I want to get at least an initial version of the 2.0 branch merged tonight so look forward to that next week!\n\n## API\n\nArkType supports many of TypeScript's built-in types and operators, as well as some new ones dedicated exclusively to runtime validation. In fact, we got a little ahead of ourselves and built a ton of cool features, but we're still working on getting caught up syntax and API docs. Keep an eye out for more in the next couple weeks ⛵\n\nIn the meantime, check out the examples here and use the type hints you get to learn how you can customize your types and scopes. If you want to explore some of the more advanced features, take a look at [our unit tests](./ark/type/__tests__) or ask us [on Discord](https://discord.gg/xEzdc3fJQC) if your functionality is supported. If not, [create a GitHub issue](https://github.com/arktypeio/arktype/issues/new) so we can prioritize it!\n\n## Integrations\n\n### tRPC\n\nArkType can easily be used with tRPC via the `assert` prop:\n\n```ts\nt.procedure.input(\n\ttype({\n\t\tname: \"string\",\n\t\t\"age?\": \"number\"\n\t}).assert\n)\n```\n\n## How?\n\nArkType's isomorphic parser has parallel static and dynamic implementations. This means as soon as you type a definition in your editor, you'll know the eventual result at runtime.\n\nIf you're curious, below is an example of what that looks like under the hood. If not, close that hood back up, `npm install arktype` and enjoy top-notch developer experience 🧑‍💻\n\n```ts\nexport const parseOperator = (s: DynamicState): void => {\n\tconst lookahead = s.scanner.shift()\n\treturn (\n\t\tlookahead === \"\" ? s.finalize()\n\t\t: lookahead === \"[\" ?\n\t\t\ts.scanner.shift() === \"]\" ?\n\t\t\t\ts.rootToArray()\n\t\t\t:\ts.error(incompleteArrayTokenMessage)\n\t\t: isKeyOf(lookahead, Scanner.branchTokens) ? s.pushRootToBranch(lookahead)\n\t\t: lookahead === \")\" ? s.finalizeGroup()\n\t\t: isKeyOf(lookahead, Scanner.comparatorStartChars) ?\n\t\t\tparseBound(s, lookahead)\n\t\t: lookahead === \"%\" ? parseDivisor(s)\n\t\t: lookahead === \" \" ? parseOperator(s)\n\t\t: throwInternalError(writeUnexpectedCharacterMessage(lookahead))\n\t)\n}\n\nexport type parseOperator<s extends StaticState> =\n\ts[\"unscanned\"] extends Scanner.shift<infer lookahead, infer unscanned> ?\n\t\tlookahead extends \"[\" ?\n\t\t\tunscanned extends Scanner.shift<\"]\", infer nextUnscanned> ?\n\t\t\t\tstate.setRoot<s, [s[\"root\"], \"[]\"], nextUnscanned>\n\t\t\t:\terror<incompleteArrayTokenMessage>\n\t\t: lookahead extends Scanner.BranchToken ?\n\t\t\tstate.reduceBranch<s, lookahead, unscanned>\n\t\t: lookahead extends \")\" ? state.finalizeGroup<s, unscanned>\n\t\t: lookahead extends Scanner.ComparatorStartChar ?\n\t\t\tparseBound<s, lookahead, unscanned>\n\t\t: lookahead extends \"%\" ? parseDivisor<s, unscanned>\n\t\t: lookahead extends \" \" ? parseOperator<state.scanTo<s, unscanned>>\n\t\t: error<writeUnexpectedCharacterMessage<lookahead>>\n\t:\tstate.finalize<s>\n```\n\n## Contributions\n\nWe accept and encourage pull requests from outside ArkType.\n\nDepending on your level of familiarity with type systems and TS generics, some parts of the codebase may be hard to jump into. That said, there's plenty of opportunities for more straightforward contributions.\n\nIf you're planning on submitting a non-trivial fix or a new feature, please [create an issue first](https://github.com/arktypeio/arktype/issues/new) so everyone's on the same page. The last thing we want is for you to spend time on a submission we're unable to merge.\n\nWhen you're ready, check out our [guide](./.github/CONTRIBUTING.md) to get started!\n\n## License\n\nThis project is licensed under the terms of the\n[MIT license](./LICENSE).\n\n## Collaboration\n\nI'd love to hear about what you're working on and how ArkType can help. Please reach out to david@arktype.io.\n\n## Code of Conduct\n\nWe will not tolerate any form of disrespect toward members of our community. Please refer to our [Code of Conduct](./.github/CODE_OF_CONDUCT.md) and reach out to david@arktype.io immediately if you've seen or experienced an interaction that may violate these standards.\n\n## Sponsorship\n\nWe've been working full-time on this project for over a year and it means a lot to have the community behind us.\n\nIf the project has been useful to you and you are in a financial position to do so, please chip in via [GitHub Sponsors](https://github.com/sponsors/arktypeio).\n\nOtherwise, consider sending me an email (david@arktype.io) or [message me on Discord](https://arktype.io/discord) to let me know you're a fan of ArkType. Either would make my day!\n\n### ArkSponsors ⛵\n\n<table>\n\t<tr>\n\t\t<th>sam-goodwin</th>\n\t\t<th>fubhy</th>\n\t</tr>\n\t<tr>\n\t\t<td>\n\t\t\t<a href=\"https://github.com/sam-goodwin\"\n\t\t\t\t><img\n\t\t\t\t\theight=\"64px\"\n\t\t\t\t\tsrc=\"https://avatars.githubusercontent.com/u/38672686\"\n\t\t\t/></a>\n\t\t</td>\n\t\t<td>\n\t\t\t<a href=\"https://github.com/fubhy\"\n\t\t\t\t><img\n\t\t\t\t\theight=\"64px\"\n\t\t\t\t\tsrc=\"https://avatars.githubusercontent.com/u/1172528\"\n\t\t\t/></a>\n\t\t</td>\n    </tr>\n</table>\n\n### Sponsors 🥰\n\n<table>\n\t<tr>\n\t\t<th>tmm</th>\n        <th>mishushakov</th>\n        <th>mewhhaha</th>\n    \t<th>codeandcats</th>\n\t\t<th>drwpwrs</th>\n\t</tr>\n\t<tr>\n\t\t<td>\n\t\t\t<a href=\"https://github.com/tmm\"\n\t\t\t\t><img\n\t\t\t\t\theight=\"64px\"\n\t\t\t\t\tsrc=\"https://avatars.githubusercontent.com/u/6759464\"\n\t\t\t/></a>\n\t\t</td>\n        <td>\n    \t\t<a href=\"https://github.com/mishushakov\"\n    \t\t\t><img height=\"64px\" src=\"https://avatars.githubusercontent.com/u/10400064\"\n    \t\t/></a>\n    \t</td>\n        <td>\n    \t\t<a href=\"https://github.com/mewhhaha\"\n    \t\t\t><img\n    \t\t\t\theight=\"64px\"\n    \t\t\t\tsrc=\"https://avatars.githubusercontent.com/u/3399205\"\n    \t\t/></a>\n    \t</td>\n    \t<td>\n    \t\t<a href=\"https://github.com/codeandcats\"\n    \t\t\t><img\n    \t\t\t\theight=\"64px\"\n    \t\t\t\tsrc=\"https://avatars.githubusercontent.com/u/6035934\"\n    \t\t/></a>\n    \t</td>\n\t\t<td>\n\t\t\t<a href=\"https://github.com/drwpwrs\"\n\t\t\t\t><img\n\t\t\t\t\theight=\"64px\"\n\t\t\t\t\tsrc=\"https://avatars.githubusercontent.com/u/49917220\"\n\t\t\t/></a>\n\t\t</td>\n\t</tr>\n\t<tr>\n    \t<th>Timeraa</th>\n\t\t<th>Phalangers</th>\n\t\t<th>WilliamConnatser</th>\n\t\t<th>JameEnder</th>\n    </tr>\n    <tr>\n    \t<td>\n    \t\t<a href=\"https://github.com/Timeraa\"\n    \t\t\t><img\n    \t\t\t\theight=\"64px\"\n    \t\t\t\tsrc=\"https://avatars.githubusercontent.com/u/29104008\"\n    \t\t/></a>\n    \t</td>\n\t\t<td>\n    \t\t<a href=\"https://github.com/Phalangers\"\n    \t\t\t><img\n    \t\t\t\theight=\"64px\"\n    \t\t\t\tsrc=\"https://avatars.githubusercontent.com/u/13227796\"\n    \t\t/></a>\n    \t</td>\n\t\t<td>\n    \t\t<a href=\"https://github.com/WilliamConnatser\"\n    \t\t\t><img\n    \t\t\t\theight=\"64px\"\n    \t\t\t\tsrc=\"https://avatars.githubusercontent.com/u/43946230\"\n    \t\t/></a>\n    \t</td>\n\t\t<td>\n    \t\t<a href=\"https://github.com/JameEnder\"\n    \t\t\t><img\n    \t\t\t\theight=\"64px\"\n    \t\t\t\tsrc=\"https://avatars.githubusercontent.com/u/47925045\"\n    \t\t/></a>\n\t\t</td>\n    </tr>\n</table>\n"
        },
        {
          "name": "ark",
          "type": "tree",
          "content": null
        },
        {
          "name": "eslint.config.js",
          "type": "blob",
          "size": 5.0546875,
          "content": "// @ts-check\n\nimport tseslint from \"typescript-eslint\"\n\n/** These actually have types but I'm not sure how to enable esModuleInterop\n * with allowJs in the root tsconfig, which dramatically slows typechecking */\n\n// @ts-expect-error\nimport eslint from \"@eslint/js\"\n// @ts-expect-error\nimport importPlugin from \"eslint-plugin-import\"\n\n/** These actually don't have types as of now */\n\n// @ts-expect-error\nimport onlyWarn from \"eslint-plugin-only-warn\"\n// @ts-expect-error\nimport preferArrowFunctions from \"eslint-plugin-prefer-arrow-functions\"\n\nexport default tseslint.config(\n\t{\n\t\tignores: [\n\t\t\t\"**/dist/**/*\",\n\t\t\t\"**/out/**/*\",\n\t\t\t\"**/node_modules/**/*\",\n\t\t\t\"**/*js\",\n\t\t\t\"**/*.astro\",\n\t\t\t\"**/.next/**/*\",\n\t\t\t\"**/*scratch.ts\",\n\t\t\t\"**/scratch/**/*\",\n\t\t\t\"**/examples/**/*\"\n\t\t]\n\t},\n\teslint.configs.recommended,\n\t...tseslint.configs.recommended,\n\t{\n\t\tplugins: {\n\t\t\t\"@typescript-eslint\": tseslint.plugin,\n\t\t\timport: importPlugin,\n\t\t\t\"only-warn\": onlyWarn,\n\t\t\t\"prefer-arrow-functions\": preferArrowFunctions\n\t\t},\n\t\tlinterOptions: {\n\t\t\treportUnusedDisableDirectives: \"error\"\n\t\t}\n\t},\n\t{\n\t\trules: {\n\t\t\teqeqeq: \"warn\",\n\t\t\tcurly: [\"warn\", \"multi-or-nest\"],\n\t\t\t\"no-lone-blocks\": \"warn\",\n\t\t\t\"object-shorthand\": \"warn\",\n\t\t\t\"prefer-arrow-functions/prefer-arrow-functions\": [\n\t\t\t\t\"warn\",\n\t\t\t\t{\n\t\t\t\t\tdisallowPrototype: true\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"arrow-body-style\": [\"warn\", \"as-needed\"],\n\t\t\t\"@typescript-eslint/no-unused-vars\": [\n\t\t\t\t\"warn\",\n\t\t\t\t{\n\t\t\t\t\targs: \"after-used\",\n\t\t\t\t\targsIgnorePattern: \"^_\",\n\t\t\t\t\tignoreRestSiblings: true\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"@typescript-eslint/default-param-last\": \"warn\",\n\t\t\t\"@typescript-eslint/no-empty-interface\": \"off\",\n\t\t\t\"import/no-cycle\": \"warn\",\n\t\t\t// Exporting types and values with the same name is a common pattern in the repo\n\t\t\t\"import/export\": \"off\",\n\t\t\t\"@typescript-eslint/explicit-module-boundary-types\": [\n\t\t\t\t\"warn\",\n\t\t\t\t{\n\t\t\t\t\tallowArgumentsExplicitlyTypedAsAny: true\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"@typescript-eslint/consistent-type-imports\": [\n\t\t\t\t\"warn\",\n\t\t\t\t{\n\t\t\t\t\t// can be useful for cjs/esm interop type imports\n\t\t\t\t\tdisallowTypeAnnotations: false,\n\t\t\t\t\tfixStyle: \"inline-type-imports\"\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"@typescript-eslint/no-import-type-side-effects\": \"warn\",\n\t\t\t\"import/no-duplicates\": [\n\t\t\t\t\"warn\",\n\t\t\t\t{\n\t\t\t\t\t\"prefer-inline\": true\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"no-restricted-imports\": \"off\",\n\t\t\t\"@typescript-eslint/no-restricted-imports\": [\n\t\t\t\t\"warn\",\n\t\t\t\t{\n\t\t\t\t\tpatterns: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgroup: [\n\t\t\t\t\t\t\t\t\"**/fs/**\",\n\t\t\t\t\t\t\t\t\"**/attest/**\",\n\t\t\t\t\t\t\t\t\"**/schema/**\",\n\t\t\t\t\t\t\t\t\"**/type/**\",\n\t\t\t\t\t\t\t\t\"**/util/**\"\n\t\t\t\t\t\t\t],\n\n\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t\"Use a specifier like '@ark/util' to import from a package\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgroup: [\"**/index.ts\", \"!**/structure/index.ts\"],\n\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t\"Use a path like '../original/definition.ts' instead of a package entrypoint\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgroup: [\"arktype/config\"],\n\t\t\t\t\t\t\tmessage: \"Use a relative path to ark/type/config.ts instead\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"@typescript-eslint/no-empty-object-type\": \"off\",\n\t\t\t\"@typescript-eslint/no-unsafe-function-type\": \"off\",\n\t\t\t\"@typescript-eslint/no-wrapper-object-types\": \"off\",\n\t\t\t\"@typescript-eslint/ban-types\": \"off\",\n\t\t\t\"@typescript-eslint/no-explicit-any\": \"off\",\n\t\t\t\"@typescript-eslint/no-non-null-assertion\": \"off\",\n\t\t\t\"@typescript-eslint/no-unsafe-declaration-merging\": \"off\",\n\t\t\t\"@typescript-eslint/no-namespace\": [\"warn\", { allowDeclarations: true }],\n\t\t\t\"@typescript-eslint/no-empty-function\": \"off\",\n\t\t\t\"@typescript-eslint/no-this-alias\": \"off\",\n\t\t\t\"no-case-declarations\": \"off\",\n\t\t\t\"@typescript-eslint/ban-ts-comment\": [\n\t\t\t\t\"warn\",\n\t\t\t\t{\n\t\t\t\t\t\"ts-ignore\": \"allow-with-description\"\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t},\n\t{\n\t\tfiles: [\"**/ark/type/**\", \"**/ark/schema/**\", \"**/ark/util/**\"],\n\t\trules: {\n\t\t\t\"import/no-nodejs-modules\": \"warn\",\n\t\t\t\"import/no-extraneous-dependencies\": \"warn\"\n\t\t}\n\t},\n\t{\n\t\tfiles: [\"**/ark/schema/structure/**\"],\n\t\trules: {\n\t\t\t\"@typescript-eslint/no-restricted-imports\": [\n\t\t\t\t\"warn\",\n\t\t\t\t{\n\t\t\t\t\tpatterns: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgroup: [\n\t\t\t\t\t\t\t\t\"**/fs/**\",\n\t\t\t\t\t\t\t\t\"**/attest/**\",\n\t\t\t\t\t\t\t\t\"**/schema/**\",\n\t\t\t\t\t\t\t\t\"**/type/**\",\n\t\t\t\t\t\t\t\t\"**/util/**\",\n\t\t\t\t\t\t\t\t\"arktype/internal/**\"\n\t\t\t\t\t\t\t],\n\n\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t\"Use a specifier like '@ark/util' to import from a package\"\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgroup: [\"../**/index.ts\"],\n\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t\"Use a path like '../original/definition.ts' instead of a package entrypoint\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t},\n\t{\n\t\tfiles: [\"**/ark/attest/**\", \"**/ark/fs/**\", \"**/ark/docs/**\"],\n\t\trules: {\n\t\t\t\"import/no-extraneous-dependencies\": \"warn\"\n\t\t}\n\t},\n\t{\n\t\tfiles: [\"**/ark/repo/**\", \"**/ark/docs/**\"],\n\t\trules: {\n\t\t\t\"@typescript-eslint/explicit-module-boundary-types\": \"off\"\n\t\t}\n\t},\n\t{\n\t\tfiles: [\"**/__tests__/**\", \"**/*.bench.ts\", \"**/*.test.ts\"],\n\t\trules: {\n\t\t\t\"@typescript-eslint/ban-ts-comment\": \"off\",\n\t\t\t\"@typescript-eslint/explicit-module-boundary-types\": \"off\",\n\t\t\t\"import/no-extraneous-dependencies\": \"off\",\n\t\t\t\"import/no-nodejs-modules\": \"off\",\n\t\t\t\"@typescript-eslint/no-restricted-imports\": [\n\t\t\t\t\"warn\",\n\t\t\t\t{\n\t\t\t\t\tpatterns: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tgroup: [\"../**\"],\n\t\t\t\t\t\t\tmessage:\n\t\t\t\t\t\t\t\t\"Tests must import from package entrypoints (use /internal if necessary)\"\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t]\n\t\t}\n\t}\n)\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 3.6962890625,
          "content": "{\n\t\"name\": \"ark\",\n\t\"description\": \"TypeScript's 1:1 validator, optimized from editor to runtime\",\n\t\"license\": \"MIT\",\n\t\"funding\": \"https://github.com/arktypeio/arktype?sponsor=1\",\n\t\"author\": {\n\t\t\"name\": \"David Blass\",\n\t\t\"email\": \"david@arktype.io\",\n\t\t\"url\": \"https://arktype.io\"\n\t},\n\t\"repository\": {\n\t\t\"type\": \"git\",\n\t\t\"url\": \"https://github.com/arktypeio/arktype.git\"\n\t},\n\t\"type\": \"module\",\n\t\"private\": true,\n\t\"scripts\": {\n\t\t\"prChecks\": \"pnpm lint && pnpm buildRepo && pnpm testRepoWithVersionsAndBenches\",\n\t\t\"attest\": \"ts ./ark/attest/cli/cli.ts\",\n\t\t\"build\": \"pnpm -r --filter !'@ark/docs' build\",\n\t\t\"buildRepo\": \"pnpm rmBuild && pnpm build && pnpm buildDocs\",\n\t\t\"buildDocs\": \"pnpm -r --filter '@ark/docs' build\",\n\t\t\"buildCjs\": \"ARKTYPE_CJS=1 pnpm -r build\",\n\t\t\"rmBuild\": \"pnpm -r exec rm -rf out\",\n\t\t\"ts\": \"node ./ark/repo/ts.js\",\n\t\t\"tsc\": \"node ./node_modules/typescript/lib/tsc.js\",\n\t\t\"testRepoWithVersionsAndBenches\": \"pnpm testRepo && pnpm bench && pnpm testTsVersions\",\n\t\t\"test\": \"pnpm testTyped --skipTypes\",\n\t\t\"testTyped\": \"mocha --exclude 'ark/attest/**/*.test.*'\",\n\t\t\"testRepo\": \"pnpm test && pnpm testV8 && pnpm -r --filter '@ark/attest' test\",\n\t\t\"testV8\": \"node --allow-natives-syntax ./ark/repo/testV8.js\",\n\t\t\"testTsVersions\": \"pnpm testTyped --tsconfig null --tsVersions '*' --compilerOptions '{ \\\"strictNullChecks\\\": true }'\",\n\t\t\"bench\": \"pnpm benchOperand && pnpm benchOperator && pnpm benchObject && pnpm benchCyclic\",\n\t\t\"benchUp\": \"ATTEST_updateSnapshots=1 pnpm bench\",\n\t\t\"benchOperand\": \"ts ./ark/type/__tests__/operand.bench.ts\",\n\t\t\"benchOperator\": \"ts ./ark/type/__tests__/operator.bench.ts\",\n\t\t\"benchObject\": \"ts ./ark/type/__tests__/object.bench.ts\",\n\t\t\"benchCyclic\": \"ts ./ark/type/__tests__/cyclic.bench.ts\",\n\t\t\"scratch\": \"ts ./ark/repo/scratch.ts\",\n\t\t\"lint\": \"pnpm checkPrettier && pnpm checkEslint\",\n\t\t\"checkPrettier\": \"prettier --check .\",\n\t\t\"checkEslint\": \"eslint --max-warnings=0 .\",\n\t\t\"format\": \"prettier --write .\",\n\t\t\"knip\": \"knip\",\n\t\t\"latest\": \"pnpm -r up --latest\",\n\t\t\"ci:publish\": \"ts ./ark/repo/publish.ts\",\n\t\t\"publishExtension\": \"cd ark/dark && pnpm publishExtension\",\n\t\t\"upDeps\": \"pnpm up -r --latest\"\n\t},\n\t\"devDependencies\": {\n\t\t\"@ark/attest\": \"workspace:*\",\n\t\t\"@ark/attest-ts-min\": \"catalog:\",\n\t\t\"@ark/attest-ts-next\": \"catalog:\",\n\t\t\"@ark/fs\": \"workspace:*\",\n\t\t\"@ark/repo\": \"workspace:*\",\n\t\t\"@ark/util\": \"workspace:*\",\n\t\t\"@eslint/js\": \"9.17.0\",\n\t\t\"@standard-schema/spec\": \"1.0.0-beta.4\",\n\t\t\"@types/mocha\": \"10.0.10\",\n\t\t\"@types/node\": \"22.10.4\",\n\t\t\"c8\": \"10.1.3\",\n\t\t\"eslint\": \"9.17.0\",\n\t\t\"eslint-plugin-import\": \"2.31.0\",\n\t\t\"eslint-plugin-only-warn\": \"1.1.0\",\n\t\t\"eslint-plugin-prefer-arrow-functions\": \"3.4.1\",\n\t\t\"knip\": \"5.41.1\",\n\t\t\"mocha\": \"11.0.1\",\n\t\t\"prettier\": \"3.4.2\",\n\t\t\"prettier-plugin-astro\": \"0.14.1\",\n\t\t\"tsx\": \"4.19.2\",\n\t\t\"typescript\": \"catalog:\",\n\t\t\"typescript-eslint\": \"8.19.0\"\n\t},\n\t\"mocha\": {\n\t\t\"//\": \"IF YOU UPDATE THE MOCHA CONFIG HERE, PLEASE ALSO UPDATE ark/repo/mocha.jsonc AND .vscode/settings.json\",\n\t\t\"spec\": [\n\t\t\t\"**/__tests__/**/*.test.*\"\n\t\t],\n\t\t\"ignore\": \"**/node_modules/**/*\",\n\t\t\"node-option\": [\n\t\t\t\"conditions=ark-ts\",\n\t\t\t\"import=tsx\"\n\t\t],\n\t\t\"require\": \"./ark/repo/mocha.globalSetup.ts\"\n\t},\n\t\"c8\": {\n\t\t\"checkCoverage\": true,\n\t\t\"lines\": 96,\n\t\t\"src\": \"./src\",\n\t\t\"exclude\": [\n\t\t\t\"__tests__/**\"\n\t\t],\n\t\t\"extension\": \".ts\",\n\t\t\"reporter\": \"lcovonly\"\n\t},\n\t\"prettier\": {\n\t\t\"useTabs\": true,\n\t\t\"semi\": false,\n\t\t\"trailingComma\": \"none\",\n\t\t\"experimentalTernaries\": true,\n\t\t\"arrowParens\": \"avoid\",\n\t\t\"plugins\": [\n\t\t\t\"prettier-plugin-astro\"\n\t\t],\n\t\t\"overrides\": [\n\t\t\t{\n\t\t\t\t\"files\": \"*.astro\",\n\t\t\t\t\"options\": {\n\t\t\t\t\t\"parser\": \"astro\"\n\t\t\t\t}\n\t\t\t}\n\t\t]\n\t},\n\t\"pnpm\": {\n\t\t\"peerDependencyRules\": {\n\t\t\t\"allowedVersions\": {\n\t\t\t\t\"eslint\": \"*\"\n\t\t\t}\n\t\t},\n\t\t\"overrides\": {\n\t\t\t\"@shikijs/types\": \"1.26.1\"\n\t\t}\n\t},\n\t\"packageManager\": \"pnpm@9.14.4\"\n}\n"
        },
        {
          "name": "pnpm-workspace.yaml",
          "type": "blob",
          "size": 0.138671875,
          "content": "packages:\n  - \"ark/*\"\n\ncatalog:\n  typescript: 5.7.2\n  \"@ark/attest-ts-min\": npm:typescript@5.1.6\n  \"@ark/attest-ts-next\": npm:typescript@next\n"
        },
        {
          "name": "tsconfig.json",
          "type": "blob",
          "size": 0.298828125,
          "content": "{\n\t\"extends\": \"./ark/util/tsconfig.base.json\",\n\t\"compilerOptions\": {\n\t\t\"allowImportingTsExtensions\": true,\n\t\t\"rewriteRelativeImportExtensions\": true,\n\t\t\"customConditions\": [\"ark-ts\"],\n\t\t\"types\": [\"mocha\", \"node\"]\n\t\t// \"noErrorTruncation\": true\n\t},\n\t\"exclude\": [\"**/out\", \"**/node_modules\", \"./ark/docs\"]\n}\n"
        }
      ]
    }
  ]
}