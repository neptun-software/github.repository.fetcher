{
  "metadata": {
    "timestamp": 1736563911680,
    "page": 438,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "iamvishnusankar/next-sitemap",
      "stars": 3416,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".eslintignore",
          "type": "blob",
          "size": 0.0390625,
          "content": "dist\nout\n.yarn\n.yarnrc.yml\n.contentlayer"
        },
        {
          "name": ".eslintrc",
          "type": "blob",
          "size": 0.08203125,
          "content": "{\n  \"extends\": [\"@corex\"],\n  \"rules\": {\n    \"react/react-in-jsx-scope\": \"off\"\n  }\n}\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0888671875,
          "content": "# Set the default behavior, in case people don't have core.autocrlf set.\n* text=auto eol=lf"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1,
          "content": "# Logs\nlogs\n*.log\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\n\n# Runtime data\npids\n*.pid\n*.seed\n*.pid.lock\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage\n\n# nyc test coverage\n.nyc_output\n\n# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# Bower dependency directory (https://bower.io/)\nbower_components\n\n# node-waf configuration\n.lock-wscript\n\n# Compiled binary addons (https://nodejs.org/api/addons.html)\nbuild/Release\n\n# Dependency directories\nnode_modules/\njspm_packages/\n\n# TypeScript v1 declaration files\ntypings/\n\n# Optional npm cache directory\n.npm\n\n# Optional eslint cache\n.eslintcache\n\n# Optional REPL history\n.node_repl_history\n\n# Output of 'npm pack'\n*.tgz\n\n# Yarn Integrity file\n.yarn-integrity\n\n# dotenv environment variables file\n.env\n\n# next.js build output\n.next\n\n# Custom\n.DS_Store\ncoverage\ndist\njunit.xml\ntsconfig.tsbuildinfo\n**/public/*.xml\n**/public/*.txt\n.idea\n.turbo\n"
        },
        {
          "name": ".npmrc",
          "type": "blob",
          "size": 0.0517578125,
          "content": "registry=https://registry.npmjs.org/\nalways-auth=true"
        },
        {
          "name": ".prettierignore",
          "type": "blob",
          "size": 0.0595703125,
          "content": ".next\npublic\ndist\n.vscode\nout\n.yarn\n.yarnrc.yml\n.contentlayer"
        },
        {
          "name": ".prettierrc",
          "type": "blob",
          "size": 0.0419921875,
          "content": "{\n  \"singleQuote\": true,\n  \"semi\": false\n}\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.103515625,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity\nand orientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n- Demonstrating empathy and kindness toward other people\n- Being respectful of differing opinions, viewpoints, and experiences\n- Giving and gracefully accepting constructive feedback\n- Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n- Focusing on what is best not just for us as individuals, but for the\n  overall community\n\nExamples of unacceptable behavior include:\n\n- The use of sexualized language or imagery, and sexual attention or\n  advances of any kind\n- Trolling, insulting or derogatory comments, and personal or political attacks\n- Public or private harassment\n- Publishing others' private information, such as a physical or email\n  address, without their explicit permission\n- Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\ntwitter: @iamvishnusankar.\nAll complaints will be reviewed and investigated promptly and fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series\nof actions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or\npermanent ban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior, harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within\nthe community.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by [Mozilla's code of conduct\nenforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.044921875,
          "content": "MIT License\n\nCopyright (c) 2019 Vishnu Sankar\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 27.662109375,
          "content": "[![BANNER](./assets/banner.svg)](https://vercel.com/?utm_source=next-sitemap&utm_campaign=oss)\n\n<div align=\"center\">\n\n[![Build Status](https://dev.azure.com/iamvishnusankar/Public/_apis/build/status/iamvishnusankar.next-sitemap?branchName=master)](https://dev.azure.com/iamvishnusankar/Public/_build/latest?definitionId=126&branchName=master)\n[![npm version](https://badge.fury.io/js/next-sitemap.svg)](https://badge.fury.io/js/next-sitemap)\n[![PRs Welcome](https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square)](https://github.com/iamvishnusankar/next-sitemap/pulls)\n<a href=\"https://twitter.com/intent/follow?screen_name=iamvishnusankar\">\n<img src=\"https://img.shields.io/twitter/follow/iamvishnusankar?style=social&logo=twitter\" alt=\"follow on Twitter\">\n</a>\n\n</div>\n\n## Table of contents\n\n- [Getting started](#getting-started)\n  - [Installation](#installation)\n  - [Create config file](#create-config-file)\n  - [Building sitemaps](#building-sitemaps)\n    - [Custom config file](#custom-config-file)\n    - [Building sitemaps with pnpm](#building-sitemaps-with-pnpm)\n- [Index sitemaps](#index-sitemaps-optional)\n- [Splitting large sitemap into multiple files](#splitting-large-sitemap-into-multiple-files)\n- [Configuration Options](#configuration-options)\n- [Custom transformation function](#custom-transformation-function)\n- [Full configuration example](#full-configuration-example)\n- [Generating dynamic/server-side sitemaps](#generating-dynamicserver-side-sitemaps)\n- [Typescript JSDoc](#typescript-jsdoc)\n\n## Getting started\n\n### Installation\n\n```shell\nyarn add next-sitemap\n```\n\n### Create config file\n\n`next-sitemap` requires a basic config file (`next-sitemap.config.js`) under your project root\n\n> ✅ `next-sitemap` will load environment variables from `.env` files by default.\n\n```js\n/** @type {import('next-sitemap').IConfig} */\nmodule.exports = {\n  siteUrl: process.env.SITE_URL || 'https://example.com',\n  generateRobotsTxt: true, // (optional)\n  // ...other options\n}\n```\n\n### Building sitemaps\n\nAdd next-sitemap as your postbuild script\n\n```json\n{\n  \"build\": \"next build\",\n  \"postbuild\": \"next-sitemap\"\n}\n```\n\n#### Custom config file\n\nYou can also use a custom config file instead of `next-sitemap.config.js`. Just pass `--config <your-config-file>.js` to build command (Example: [custom-config-file](https://github.com/iamvishnusankar/next-sitemap/tree/master/examples/custom-config-file))\n\n```json\n{\n  \"build\": \"next build\",\n  \"postbuild\": \"next-sitemap --config awesome.config.js\"\n}\n```\n\n#### Building sitemaps with pnpm\n\nWhen using pnpm you need to create a `.npmrc` file in the root of your project if you want to use a postbuild step:\n\n```\n//.npmrc\nenable-pre-post-scripts=true\n```\n\n## Index sitemaps (Optional)\n\n📣 From `next-sitemap` v2.x onwards, `sitemap.xml` will be [Index Sitemap](https://developers.google.com/search/docs/advanced/sitemaps/large-sitemaps). It will contain urls of all other generated sitemap endpoints.\n\nIndex sitemap generation can be turned off by setting `generateIndexSitemap: false` in next-sitemap config file. (This is useful for small/hobby sites which does not require an index sitemap) (Example: [no-index-sitemaps](https://github.com/iamvishnusankar/next-sitemap/tree/master/examples/no-index-sitemaps))\n\n## Splitting large sitemap into multiple files\n\nDefine the `sitemapSize` property in `next-sitemap.config.js` to split large sitemap into multiple files.\n\n```js\n/** @type {import('next-sitemap').IConfig} */\nmodule.exports = {\n  siteUrl: 'https://example.com',\n  generateRobotsTxt: true,\n  sitemapSize: 7000,\n}\n```\n\nAbove is the minimal configuration to split a large sitemap. When the number of URLs in a sitemap is more than 7000, `next-sitemap` will create sitemap (e.g. sitemap-0.xml, sitemap-1.xml) and index (e.g. sitemap.xml) files.\n\n## Configuration Options\n\n| property                                            | description                                                                                                                                                                                                                                                                                                                                                                                                                          | type                                                                                                                     |\n| --------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------------------ |\n| siteUrl                                             | Base url of your website                                                                                                                                                                                                                                                                                                                                                                                                             | string                                                                                                                   |\n| output (optional)                                   | Next.js output modes. [Check documentation](https://nextjs.org/docs/pages/api-reference/next-config-js/output).                                                                                                                                                                                                                                                                                                                      | `standalone`, `export`                                                                                                   |\n| changefreq (optional)                               | Change frequency. Default `daily`                                                                                                                                                                                                                                                                                                                                                                                                    | string                                                                                                                   |\n| priority (optional)                                 | Priority. Default `0.7`                                                                                                                                                                                                                                                                                                                                                                                                              | number                                                                                                                   |\n| sitemapBaseFileName (optional)                      | The name of the generated sitemap file before the file extension. Default `\"sitemap\"`                                                                                                                                                                                                                                                                                                                                                | string                                                                                                                   |\n| alternateRefs (optional)                            | Denote multi-language support by unique URL. Default `[]`                                                                                                                                                                                                                                                                                                                                                                            | AlternateRef[]                                                                                                           |\n| sitemapSize(optional)                               | Split large sitemap into multiple files by specifying sitemap size. Default `5000`                                                                                                                                                                                                                                                                                                                                                   | number                                                                                                                   |\n| autoLastmod (optional)                              | Add `<lastmod/>` property. Default `true`                                                                                                                                                                                                                                                                                                                                                                                            | true                                                                                                                     |\n| exclude (optional)                                  | Array of **relative** paths ([wildcard pattern supported](https://www.npmjs.com/package/matcher#usage)) to exclude from listing on `sitemap.xml` or `sitemap-*.xml`. e.g.: `['/page-0', '/page-*', '/private/*']`. <br></br>Apart from this option `next-sitemap` also offers a custom `transform` option which could be used to exclude urls that match specific patterns                                                           | string[]                                                                                                                 |\n| sourceDir (optional)                                | next.js build directory. Default `.next`                                                                                                                                                                                                                                                                                                                                                                                             | string                                                                                                                   |\n| outDir (optional)                                   | All the generated files will be exported to this directory. Default `public`                                                                                                                                                                                                                                                                                                                                                         | string                                                                                                                   |\n| transform (optional)                                | A transformation function, which runs **for each** `relative-path` in the sitemap. Returning `null` value from the transformation function will result in the exclusion of that specific `path` from the generated sitemap list.                                                                                                                                                                                                     | async function                                                                                                           |\n| additionalPaths (optional)                          | Async function that returns a list of additional paths to be added to the generated sitemap list.                                                                                                                                                                                                                                                                                                                                    | async function                                                                                                           |\n| generateIndexSitemap                                | Generate index sitemaps. Default `true`                                                                                                                                                                                                                                                                                                                                                                                              | boolean                                                                                                                  |\n| generateRobotsTxt (optional)                        | Generate a `robots.txt` file and list the generated sitemaps. Default `false`                                                                                                                                                                                                                                                                                                                                                        | boolean                                                                                                                  |\n| robotsTxtOptions.transformRobotsTxt (optional)      | Custom robots.txt transformer function. (Example: [custom-robots-txt-transformer](https://github.com/iamvishnusankar/next-sitemap/tree/master/examples/custom-robots-txt-transformer)) <br/><br/> Default: `async(config, robotsTxt)=> robotsTxt`                                                                                                                                                                                    | async function                                                                                                           |\n| robotsTxtOptions.policies (optional)                | Policies for generating `robots.txt`.<br/><br/> Default: <br/>`[{ userAgent: '*', allow: '/' }]`                                                                                                                                                                                                                                                                                                                                     | [IRobotPolicy[]](https://github.com/iamvishnusankar/next-sitemap/blob/master/packages/next-sitemap/src/interface.ts#L14) |\n| robotsTxtOptions.additionalSitemaps (optional)      | Options to add additional sitemaps to `robots.txt` host entry                                                                                                                                                                                                                                                                                                                                                                        | string[]                                                                                                                 |\n| robotsTxtOptions.includeNonIndexSitemaps (optional) | From v2.4x onwards, generated `robots.txt` will only contain url of `index sitemap` and custom provided endpoints from `robotsTxtOptions.additionalSitemaps`. <br/> <br/> This is to prevent duplicate url submission (once through index-sitemap -> sitemap-url and once through robots.txt -> HOST) <br/><br/>Set this option `true` to add all generated sitemap endpoints to `robots.txt`<br><br/> Default `false` (Recommended) | boolean                                                                                                                  |\n\n## Custom transformation function\n\nCustom transformation provides an extension method to add, remove or exclude `path` or `properties` from a url-set. Transform function runs **for each** `relative path` in the sitemap. And use the `key`: `value` object to add properties in the XML.\n\nReturning `null` value from the transformation function will result in the exclusion of that specific `relative-path` from the generated sitemap list.\n\n```jsx\n/** @type {import('next-sitemap').IConfig} */\nmodule.exports = {\n  transform: async (config, path) => {\n    // custom function to ignore the path\n    if (customIgnoreFunction(path)) {\n      return null\n    }\n\n    // only create changefreq along with path\n    // returning partial properties will result in generation of XML field with only returned values.\n    if (customLimitedField(path)) {\n      // This returns `path` & `changefreq`. Hence it will result in the generation of XML field with `path` and  `changefreq` properties only.\n      return {\n        loc: path, // => this will be exported as http(s)://<config.siteUrl>/<path>\n        changefreq: 'weekly',\n      }\n    }\n\n    // Use default transformation for all other cases\n    return {\n      loc: path, // => this will be exported as http(s)://<config.siteUrl>/<path>\n      changefreq: config.changefreq,\n      priority: config.priority,\n      lastmod: config.autoLastmod ? new Date().toISOString() : undefined,\n      alternateRefs: config.alternateRefs ?? [],\n    }\n  },\n}\n```\n\n## Additional paths function\n\n`additionalPaths` this function can be useful if you have a large list of pages, but you don't want to render them all and use [fallback: true](https://nextjs.org/docs/basic-features/data-fetching#fallback-true). Result of executing this function will be added to the general list of paths and processed with `sitemapSize`. You are free to add dynamic paths, but unlike `additionalSitemap`, you do not need to split the list of paths into different files in case there are a lot of paths for one file.\n\nIf your function returns a path that already exists, then it will simply be updated, duplication will not happen.\n\n```js\n/** @type {import('next-sitemap').IConfig} */\nmodule.exports = {\n  additionalPaths: async (config) => {\n    const result = []\n\n    // required value only\n    result.push({ loc: '/additional-page-1' })\n\n    // all possible values\n    result.push({\n      loc: '/additional-page-2',\n      changefreq: 'yearly',\n      priority: 0.7,\n      lastmod: new Date().toISOString(),\n\n      // acts only on '/additional-page-2'\n      alternateRefs: [\n        {\n          href: 'https://es.example.com',\n          hreflang: 'es',\n        },\n        {\n          href: 'https://fr.example.com',\n          hreflang: 'fr',\n        },\n      ],\n    })\n\n    // using transformation from the current configuration\n    result.push(await config.transform(config, '/additional-page-3'))\n\n    return result\n  },\n}\n```\n\n## Google News, image and video sitemap\n\nUrl set can contain additional sitemaps defined by google. These are\n[Google News sitemap](https://developers.google.com/search/docs/advanced/sitemaps/news-sitemap),\n[image sitemap](https://developers.google.com/search/docs/advanced/sitemaps/image-sitemaps) or\n[video sitemap](https://developers.google.com/search/docs/advanced/sitemaps/video-sitemaps).\nYou can add the values for these sitemaps by updating entry in `transform` function or adding it with\n`additionalPaths`. You have to return a sitemap entry in both cases, so it's the best place for updating\nthe output. This example will add an image and news tag to each entry but IRL you would of course use it with\nsome condition or within `additionalPaths` result.\n\n```js\n/** @type {import('next-sitemap').IConfig} */\nconst config = {\n  transform: async (config, path) => {\n    return {\n      loc: path, // => this will be exported as http(s)://<config.siteUrl>/<path>\n      changefreq: config.changefreq,\n      priority: config.priority,\n      lastmod: config.autoLastmod ? new Date().toISOString() : undefined,\n      images: [{ loc: 'https://example.com/image.jpg' }],\n      news: {\n        title: 'Article 1',\n        publicationName: 'Google Scholar',\n        publicationLanguage: 'en',\n        date: new Date(),\n      },\n    }\n  },\n}\n\nexport default config\n```\n\n## Full configuration example\n\nHere's an example `next-sitemap.config.js` configuration with all options\n\n```js\n/** @type {import('next-sitemap').IConfig} */\n\nmodule.exports = {\n  siteUrl: 'https://example.com',\n  changefreq: 'daily',\n  priority: 0.7,\n  sitemapSize: 5000,\n  generateRobotsTxt: true,\n  exclude: ['/protected-page', '/awesome/secret-page'],\n  alternateRefs: [\n    {\n      href: 'https://es.example.com',\n      hreflang: 'es',\n    },\n    {\n      href: 'https://fr.example.com',\n      hreflang: 'fr',\n    },\n  ],\n  // Default transformation function\n  transform: async (config, path) => {\n    return {\n      loc: path, // => this will be exported as http(s)://<config.siteUrl>/<path>\n      changefreq: config.changefreq,\n      priority: config.priority,\n      lastmod: config.autoLastmod ? new Date().toISOString() : undefined,\n      alternateRefs: config.alternateRefs ?? [],\n    }\n  },\n  additionalPaths: async (config) => [\n    await config.transform(config, '/additional-page'),\n  ],\n  robotsTxtOptions: {\n    policies: [\n      {\n        userAgent: '*',\n        allow: '/',\n      },\n      {\n        userAgent: 'test-bot',\n        allow: ['/path', '/path-2'],\n      },\n      {\n        userAgent: 'black-listed-bot',\n        disallow: ['/sub-path-1', '/path-2'],\n      },\n    ],\n    additionalSitemaps: [\n      'https://example.com/my-custom-sitemap-1.xml',\n      'https://example.com/my-custom-sitemap-2.xml',\n      'https://example.com/my-custom-sitemap-3.xml',\n    ],\n  },\n}\n```\n\nAbove configuration will generate sitemaps based on your project and a `robots.txt` like this.\n\n```txt\n# *\nUser-agent: *\nAllow: /\n\n# test-bot\nUser-agent: test-bot\nAllow: /path\nAllow: /path-2\n\n# black-listed-bot\nUser-agent: black-listed-bot\nDisallow: /sub-path-1\nDisallow: /path-2\n\n# Host\nHost: https://example.com\n\n# Sitemaps\nSitemap: https://example.com/sitemap.xml # Index sitemap\nSitemap: https://example.com/my-custom-sitemap-1.xml\nSitemap: https://example.com/my-custom-sitemap-2.xml\nSitemap: https://example.com/my-custom-sitemap-3.xml\n```\n\n## Generating dynamic/server-side sitemaps\n\n`next-sitemap` now provides two APIs to generate server side sitemaps. This will help to dynamically generate `index-sitemap`(s) and `sitemap`(s) by sourcing data from CMS or custom source.\n\n- `getServerSideSitemapIndex`: Generates index sitemaps based on urls provided and returns `application/xml` response. Supports next13+ route.{ts,js} file.\n\n  - To continue using inside pages directory, import `getServerSideSitemapIndexLegacy` instead.\n\n- `getServerSideSitemap`: Generates sitemap based on field entires and returns `application/xml` response. Supports next13+ route.{ts,js} file.\n  - To continue using inside pages directory, import `getServerSideSitemapLegacy` instead.\n\n### Server side index-sitemaps (getServerSideSitemapIndex)\n\nHere's a sample script to generate index-sitemap on server side.\n\n<details>\n<summary>1. Index sitemap (app directory)</summary>\n\nCreate `app/server-sitemap-index.xml/route.ts` file.\n\n```ts\n// app/server-sitemap-index.xml/route.ts\nimport { getServerSideSitemapIndex } from 'next-sitemap'\n\nexport async function GET(request: Request) {\n  // Method to source urls from cms\n  // const urls = await fetch('https//example.com/api')\n\n  return getServerSideSitemapIndex([\n    'https://example.com/path-1.xml',\n    'https://example.com/path-2.xml',\n  ])\n}\n```\n\n</details>\n\n<details>\n<summary>2. Index sitemap (pages directory) (legacy)</summary>\n\nCreate `pages/server-sitemap-index.xml/index.tsx` file.\n\n```ts\n// pages/server-sitemap-index.xml/index.tsx\nimport { getServerSideSitemapIndexLegacy } from 'next-sitemap'\nimport { GetServerSideProps } from 'next'\n\nexport const getServerSideProps: GetServerSideProps = async (ctx) => {\n  // Method to source urls from cms\n  // const urls = await fetch('https//example.com/api')\n\n  return getServerSideSitemapIndexLegacy(ctx, [\n    'https://example.com/path-1.xml',\n    'https://example.com/path-2.xml',\n  ])\n}\n\n// Default export to prevent next.js errors\nexport default function SitemapIndex() {}\n```\n\n</details>\n\n#### Exclude server index sitemap from robots.txt\n\nNow, `next.js` is serving the dynamic index-sitemap from `http://localhost:3000/server-sitemap-index.xml`.\n\nList the dynamic sitemap page in `robotsTxtOptions.additionalSitemaps` and exclude this path from static sitemap list.\n\n```js\n// next-sitemap.config.js\n\n/** @type {import('next-sitemap').IConfig} */\nmodule.exports = {\n  siteUrl: 'https://example.com',\n  generateRobotsTxt: true,\n  exclude: ['/server-sitemap-index.xml'], // <= exclude here\n  robotsTxtOptions: {\n    additionalSitemaps: [\n      'https://example.com/server-sitemap-index.xml', // <==== Add here\n    ],\n  },\n}\n```\n\nIn this way, `next-sitemap` will manage the sitemaps for all your static pages and your dynamic `index-sitemap` will be listed on robots.txt.\n\n---\n\n### server side sitemap (getServerSideSitemap)\n\nHere's a sample script to generate sitemaps on server side.\n\n<details>\n<summary>1. Sitemaps (app directory)</summary>\n\nCreate `app/server-sitemap.xml/route.ts` file.\n\n```ts\n// app/server-sitemap.xml/route.ts\nimport { getServerSideSitemap } from 'next-sitemap'\n\nexport async function GET(request: Request) {\n  // Method to source urls from cms\n  // const urls = await fetch('https//example.com/api')\n\n  return getServerSideSitemap([\n    {\n      loc: 'https://example.com',\n      lastmod: new Date().toISOString(),\n      // changefreq\n      // priority\n    },\n    {\n      loc: 'https://example.com/dynamic-path-2',\n      lastmod: new Date().toISOString(),\n      // changefreq\n      // priority\n    },\n  ])\n}\n```\n\n</details>\n\n<details>\n<summary>2. Sitemaps (pages directory) (legacy)</summary>\n\nCreate `pages/server-sitemap.xml/index.tsx` file.\n\n```ts\n// pages/server-sitemap.xml/index.tsx\nimport { getServerSideSitemapLegacy } from 'next-sitemap'\nimport { GetServerSideProps } from 'next'\n\nexport const getServerSideProps: GetServerSideProps = async (ctx) => {\n  // Method to source urls from cms\n  // const urls = await fetch('https//example.com/api')\n\n  const fields = [\n    {\n      loc: 'https://example.com', // Absolute url\n      lastmod: new Date().toISOString(),\n      // changefreq\n      // priority\n    },\n    {\n      loc: 'https://example.com/dynamic-path-2', // Absolute url\n      lastmod: new Date().toISOString(),\n      // changefreq\n      // priority\n    },\n  ]\n\n  return getServerSideSitemapLegacy(ctx, fields)\n}\n\n// Default export to prevent next.js errors\nexport default function Sitemap() {}\n```\n\n</details>\n\nNow, `next.js` is serving the dynamic sitemap from `http://localhost:3000/server-sitemap.xml`.\n\nList the dynamic sitemap page in `robotsTxtOptions.additionalSitemaps` and exclude this path from static sitemap list.\n\n```js\n// next-sitemap.config.js\n\n/** @type {import('next-sitemap').IConfig} */\nmodule.exports = {\n  siteUrl: 'https://example.com',\n  generateRobotsTxt: true,\n  exclude: ['/server-sitemap.xml'], // <= exclude here\n  robotsTxtOptions: {\n    additionalSitemaps: [\n      'https://example.com/server-sitemap.xml', // <==== Add here\n    ],\n  },\n}\n```\n\nIn this way, `next-sitemap` will manage the sitemaps for all your static pages and your dynamic sitemap will be listed on robots.txt.\n\n## Typescript JSDoc\n\nAdd the following line of code in your `next-sitemap.config.js` for nice typescript autocomplete! 💖\n\n```js\n/** @type {import('next-sitemap').IConfig} */\nmodule.exports = {\n  // YOUR CONFIG\n}\n```\n\n![TS_JSDOC](./assets/ts-jsdoc.png)\n\n## Contribution\n\nAll PRs are welcome :)\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.6044921875,
          "content": "# Security Policy\n\n## Supported Versions\n\nUse this section to tell people about which versions of your project are\ncurrently being supported with security updates.\n\n| Version | Supported          |\n| ------- | ------------------ |\n| 5.1.x   | :white_check_mark: |\n| 5.0.x   | :x:                |\n| 4.0.x   | :white_check_mark: |\n| < 4.0   | :x:                |\n\n## Reporting a Vulnerability\n\nUse this section to tell people how to report a vulnerability.\n\nTell them where to go, how often they can expect to get an update on a\nreported vulnerability, what to expect if the vulnerability is accepted or\ndeclined, etc.\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-pipeline.yml",
          "type": "blob",
          "size": 2.5009765625,
          "content": "name: 4.3$(rev:.r)\ntrigger:\n  branches:\n    include:\n      - master\npool:\n  vmImage: 'ubuntu-latest'\n  demands: npm\n\nsteps:\n  # Setup Node\n  - task: UseNode@1\n    displayName: Setup Node\n    inputs:\n      version: '20.x'\n\n  # Set yarn version\n  # - task: Bash@3\n  #   displayName: 'Set yarn version'\n  #   inputs:\n  #     targetType: 'inline'\n  #     script: 'yarn set version stable'\n\n  # Authenticate\n  - task: npmAuthenticate@0\n    displayName: NPM Auth\n    inputs:\n      workingFile: .npmrc\n      customEndpoint: 'NPM(Vishnu Sankar)'\n\n  # Set Version\n  - task: Bash@3\n    displayName: 'Set Version'\n    inputs:\n      targetType: 'inline'\n      script: yarn workspaces foreach version $BUILD_BUILDNUMBER\n      # failOnStderr: true\n\n  # Install\n  - task: Bash@3\n    displayName: 'Install'\n    inputs:\n      targetType: 'inline'\n      script: 'yarn install'\n\n  # Test\n  - task: Bash@3\n    displayName: 'Test'\n    inputs:\n      targetType: 'inline'\n      script: 'yarn test --ci'\n\n  # Build\n  - task: Bash@3\n    displayName: 'Build'\n    inputs:\n      targetType: 'inline'\n      script: 'yarn workspace next-sitemap build && yarn workspace next-sitemap postbuild'\n\n  # Copy README\n  - task: Bash@3\n    displayName: 'Copy README'\n    inputs:\n      targetType: 'inline'\n      script: 'cp README.md packages/next-sitemap/README.md'\n      failOnStderr: true\n\n  # Test Result\n  - task: PublishTestResults@2\n    displayName: Publish Test Result\n    inputs:\n      testResultsFormat: 'JUnit'\n      testResultsFiles: 'junit.xml'\n      failTaskOnFailedTests: true\n\n  # Coverage Result\n  - task: PublishCodeCoverageResults@1\n    displayName: Publish Coverage Result\n    inputs:\n      codeCoverageTool: 'Cobertura'\n      summaryFileLocation: 'coverage/cobertura-coverage.xml'\n      failIfCoverageEmpty: true\n\n  # Publish Packages\n  - task: Bash@3\n    displayName: 'Publish Packages'\n    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))\n    inputs:\n      targetType: 'inline'\n      script: 'npm publish --w=next-sitemap'\n      # failOnStderr: true\n\n  # Github Release\n  - task: GitHubRelease@1\n    displayName: Github Release\n    condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))\n    inputs:\n      gitHubConnection: 'iamvishnusankar'\n      repositoryName: '$(Build.Repository.Name)'\n      action: 'create'\n      target: '$(Build.SourceVersion)'\n      tagSource: 'userSpecifiedTag'\n      tag: 'v$(Build.BuildNumber)'\n      changeLogCompareToRelease: 'lastFullRelease'\n      changeLogType: 'commitBased'\n"
        },
        {
          "name": "bun.lockb",
          "type": "blob",
          "size": 504.4765625,
          "content": null
        },
        {
          "name": "changelog.md",
          "type": "blob",
          "size": 0.6689453125,
          "content": "## 4.0.x\n\nv4.0.x added support for next13.2+ `appDir` via [Custom Route Handlers](https://nextjs.org/blog/next-13-2#custom-route-handlers)\n\n#### API Changes\n\nGenerating dynamic/server-side sitemaps\n\n- `getServerSideSitemapIndex`: Generates index sitemaps based on urls provided and returns application/xml response. Supports next13+ route.{ts,js} file.\n\n  - To continue using inside pages directory, import `getServerSideSitemapIndexLegacy` instead.\n\n- `getServerSideSitemap`: Generates sitemap based on field entires and returns application/xml response. Supports next13+ route.{ts,js} file.\n\n  - To continue using inside pages directory, import `getServerSideSitemapLegacy` instead.\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.1240234375,
          "content": "{\n  \"name\": \"next-sitemap-workspace\",\n  \"version\": \"1.0.0\",\n  \"main\": \"index.js\",\n  \"repository\": \"https://github.com/iamvishnusankar/next-sitemap.git\",\n  \"author\": \"Vishnu Sankar\",\n  \"license\": \"MIT\",\n  \"private\": true,\n  \"type\": \"module\",\n  \"workspaces\": {\n    \"packages\": [\n      \"packages/*\",\n      \"examples/*\",\n      \"docs\"\n    ]\n  },\n  \"scripts\": {\n    \"clean\": \"tsc --build --clean\",\n    \"dev:test\": \"bun test --watch\",\n    \"dev:tsc\": \"tsc --build --watch\",\n    \"build\": \"turbo run deploy --force\",\n    \"test\": \"bun test --ci --coverage --verbose\",\n    \"lint\": \"eslint .\",\n    \"prettier:check\": \"prettier --check \\\"**/*.{js,mjs,cjs,jsx,json,ts,tsx,md,mdx,css,html,yml,yaml,scss,less,graphql,graphqls,gql}\\\"\",\n    \"format\": \"prettier --write \\\"**/*.{js,mjs,cjs,jsx,json,ts,tsx,md,mdx,css,html,yml,yaml,scss,less,graphql,graphqls,gql}\\\"\"\n  },\n  \"devDependencies\": {\n    \"@corex/workspace\": \"^4.0.43\",\n    \"@typescript-eslint/eslint-plugin\": \"^6.9.1\",\n    \"@typescript-eslint/parser\": \"^6.9.1\",\n    \"eslint\": \"^8.52.0\",\n    \"eslint-config-next\": \"^14.0.0\",\n    \"fast-xml-parser\": \"^4.3.2\",\n    \"prettier\": \"^3.0.3\",\n    \"turbo\": \"^1.10.16\"\n  }\n}\n"
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "tsconfig.json",
          "type": "blob",
          "size": 0.0908203125,
          "content": "{\n  \"files\": [],\n  \"references\": [\n    {\n      \"path\": \"./packages/next-sitemap\"\n    }\n  ]\n}\n"
        },
        {
          "name": "turbo.json",
          "type": "blob",
          "size": 0.4609375,
          "content": "{\n  \"pipeline\": {\n    \"build\": {\n      \"dependsOn\": [\"^build\"],\n      \"outputs\": [\"dist/**\", \".next/**\"]\n    },\n    \"postbuild\": {\n      \"dependsOn\": [\"^postbuild\"],\n      \"outputs\": [\n        \"dist/**\",\n        \".next/**\",\n        \"public/robots.txt\",\n        \"public/sitemap*.xml\"\n      ]\n    },\n    \"deploy\": {\n      \"dependsOn\": [\"^build\", \"postbuild\"],\n      \"outputs\": []\n    },\n    \"lint\": {\n      \"outputs\": []\n    },\n    \"dev\": {\n      \"cache\": false\n    }\n  }\n}\n"
        }
      ]
    }
  ]
}