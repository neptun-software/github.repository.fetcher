{
  "metadata": {
    "timestamp": 1736564160022,
    "page": 734,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjc0MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "InkTimeRecord/TTime",
      "stars": 2725,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.142578125,
          "content": "root = true\n\n[*]\ncharset = utf-8\nindent_style = space\nindent_size = 2\nend_of_line = lf\ninsert_final_newline = true\ntrim_trailing_whitespace = true"
        },
        {
          "name": ".eslintignore",
          "type": "blob",
          "size": 0.0322265625,
          "content": "node_modules\ndist\nout\n.gitignore\n"
        },
        {
          "name": ".eslintrc.cjs",
          "type": "blob",
          "size": 1.08203125,
          "content": "/* eslint-env node */\nrequire('@rushstack/eslint-patch/modern-module-resolution')\n\nmodule.exports = {\n  root: true,\n  env: {\n    browser: true,\n    commonjs: true,\n    es6: true,\n    node: true,\n    'vue/setup-compiler-macros': true\n  },\n  extends: [\n    'plugin:vue/vue3-recommended',\n    'eslint:recommended',\n    '@vue/eslint-config-typescript/recommended',\n    '@vue/eslint-config-prettier'\n  ],\n  rules: {\n    '@typescript-eslint/ban-ts-comment': ['error', { 'ts-ignore': 'allow-with-description' }],\n    '@typescript-eslint/explicit-function-return-type': 'error',\n    '@typescript-eslint/explicit-module-boundary-types': 'off',\n    '@typescript-eslint/no-empty-function': ['error', { allow: ['arrowFunctions'] }],\n    '@typescript-eslint/no-explicit-any': 'off',\n    '@typescript-eslint/no-non-null-assertion': 'off',\n    '@typescript-eslint/no-var-requires': 'off',\n    'vue/require-default-prop': 'off',\n    'vue/multi-word-component-names': 'off',\n  },\n  overrides: [\n    {\n      files: ['*.js'],\n      rules: {\n        '@typescript-eslint/explicit-function-return-type': 'off'\n      }\n    }\n  ]\n}\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.646484375,
          "content": "node_modules\ndist\nout\n*.log*\n!/node_modules_update/**/dist\npackage-lock.json\n\n# Log file\n*.log\nlog/\n\n# BlueJ files\n*.ctxt\n\n# Mobile Tools for Java (J2ME)\n.mtj.tmp/\n\n# Package Files #\n*.jar\n*.war\n*.nar\n*.ear\n*.zip\n*.tar.gz\n*.rar\n\n# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml\nhs_err_pid*\n\n### STS ###\n.apt_generated\n.classpath\n.factorypath\n.project\n.settings\n.springBeans\n.sts4-cache\n\n### IntelliJ IDEA ###\n.idea\n*.iws\n*.iml\n*.ipr\n\n### NetBeans ###\n/nbproject/private/\n/nbbuild/\n/dist/\n/nbdist/\n/.nb-gradle/\n!**/src/main/**/build/\n!**/src/test/**/build/\n\n### VS Code ###\n.vscode/\n/.idea/\n/.mvn/\nnode_modules/\n/.history/\n"
        },
        {
          "name": ".npmrc",
          "type": "blob",
          "size": 0.0546875,
          "content": "ELECTRON_MIRROR=https://npmmirror.com/mirrors/electron/\n"
        },
        {
          "name": ".prettierignore",
          "type": "blob",
          "size": 0.0634765625,
          "content": "out\ndist\npnpm-lock.yaml\nLICENSE.md\ntsconfig.json\ntsconfig.*.json\n"
        },
        {
          "name": ".prettierrc.yaml",
          "type": "blob",
          "size": 0.064453125,
          "content": "singleQuote: true\nsemi: false\nprintWidth: 100\ntrailingComma: none\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 1.8076171875,
          "content": "# TTime Translation Software Open Source License\n\nThe TTime Translation Software is licensed under the Apache License 2.0, with the following additional conditions:\n\n1. TTime translation software allows commercial use. But you must contact the software manufacturer to obtain a commercial license\n\n2. Unless authorized in writing by TTime Translation Software, you are not allowed to use the source code of TTime Translation Software to operate services similar to TTime Translation Software.\n\n3. When using TTime Translation Software, you must not remove or modify any trademarks or copyright information within the software.\n\nFor licensing inquiries, please contact support@timerecord.cn via email.\n\n4. As a contributor, you should acknowledge that your contributed code:\n\n   a. The software producer reserves the right to adjust the open-source agreement to be either more stringent or more permissive.\n   b. Can be utilized for commercial purposes, including TTime Translation Software's cloud-based services.\n\nOther than these additional conditions, all other rights and restrictions adhere to the Apache License 2.0. For more comprehensive information, please refer to the complete version of the Apache License 2.0.\n\nThe product's interactive design is protected by an appearance patent.\n\n¬© 2023 TTime Translate.\n\n---\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
        },
        {
          "name": "README.assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.en.assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "README.en.md",
          "type": "blob",
          "size": 5.8408203125,
          "content": "<div align='center'>\n\n  <img width=\"150px\" src=\"https://ttime.timerecord.cn/img/logo.png\"/>\n\n  # TTime\n\n  üöÄ A concise, efficient, good-looking input, screenshot, and word translation software\n\n  <a href=\"https://ttime.timerecord.cn\"><img src=\"https://img.shields.io/badge/Official website-ttime.timerecord.cn-brightgreen?logo=Safari\"/></a>\n  <a href=\"https://ttime.timerecord.cn\"><img src=\"https://img.shields.io/badge/-Windows-blue?logo=windows&logoColor=white\" /></a>\n  <a href=\"https://ttime.timerecord.cn\"><img src=\"https://img.shields.io/badge/-macOS-black?&logo=apple&logoColor=white\" /></a>\n\n  (English | [‰∏≠Êñá](README.md))\n\n</div>\n\n## brief introduction\n\nThe main functions are `input translation`, `screenshot translation`, `selected translation`„ÄÅ`Hover Ball Translation`„ÄÅ`Screenshot OCR`„ÄÅ`Screenshot Silence OCR`„ÄÅ`Clipboard listening translation`\n\n## Interface\n<div align='center'>\n  <table>\n    <tr>\n        <td>\n        <p>Bright Mode</p>\n        <img width=\"350px\" src=\"https://raw.githubusercontent.com/InkTimeRecord/TTime/dev/README.assets/translate.png\"/>\n        </td>\n        <td>\n        <p>Dark Mode</p>\n        <img width=\"350px\" src=\"https://raw.githubusercontent.com/InkTimeRecord/TTime/dev/README.assets/translate-dark.png\"/>\n        </td>\n    </tr>\n  </table>\n</div>\n\n| ÊñπÂºè | ÊèèËø∞ | È¢ÑËßà |\n| :---: | :---: | :---: |\n| Screenshot translation | Press the screenshot translation shortcut key (default ` Alt + W `) to intercept the area to be translated | ![Screenshot translation](https://raw.githubusercontent.com/InkTimeRecord/TTime/dev/README.assets/screenshot.gif) |\n| Selected translation | After selecting the text to be translated, press the word translation shortcut key (the default is ` Alt + E `) | ![Selected translation](https://raw.githubusercontent.com/InkTimeRecord/TTime/dev/README.assets/choice.gif) |\n| Input Translation | Press the input translation shortcut key (default 'Alt+Q'), enter the text to be translated, and use the 'Enter' key to translate | ![Input Translation](https://raw.githubusercontent.com/InkTimeRecord/TTime/dev/README.assets/input.gif) |\n| Hover Ball Translation | After selecting the text to be translated, click the floating ball icon (it is closed by default, and needs to be opened in the settings by itself) | ![Hover Ball Translation](https://raw.githubusercontent.com/InkTimeRecord/TTime/dev/README.assets/hover-ball.gif) |\n| Screenshot OCR | Pressing this shortcut key will recognize the text according to your screenshot area | ![Screenshot OCR](https://raw.githubusercontent.com/InkTimeRecord/TTime/dev/README.assets/screenshot-ocr.gif) |\n| Screenshot Silence OCR | Pressing this shortcut key will recognize the text according to your screenshot area, and the recognized content will be automatically written into the clipboard without opening the OCR window | ![Screenshot Silence OCR](https://raw.githubusercontent.com/InkTimeRecord/TTime/dev/README.assets/screenshot-silence-ocr.gif) |\n\n## Currently, integrated with translation/text recognition services\n[Translation source/text recognition application reference](https://ttime.timerecord.cn/pages/93e0f8/#%E7%BF%BB%E8%AF%91%E6%BA%90%E4%BB%8B%E7%BB%8D)\n\n- [x] Translation source\n  - [x] TTime (built-in)\n  - [x] Google Translation (built-in)\n  - [x] DeepL Translation (built-in) = DeepLX Translation\n  - [x] Bing Translation (built-in)\n  - [x] Bing dict Translation (built-in)\n  - [x] Tencent TranSmart Translation (built-in)\n  - [x] NiuTrans (built-in)\n  - [x] ECDICT Translation-Offline (built-in)\n  - [x] Tencent Translator\n  - [x] Baidu Translation\n  - [x] Alibaba Translation\n  - [x] Google Translation\n  - [x] OpenAI(ChatGPT) Translation\n  - [x] YouDao Translation\n  - [x] DeepL Translation\n  - [x] Volcano Translation\n  - [x] NiuTrans\n  - [x] CaiYun Translation\n  - [x] Papago Translation\n\n- [x] OCR\n  - [x] TTime\n  - [x] TTime Online OCR\n  - [x] Baidu OCR\n  - [x] Baidu Image Translation OCR\n  - [x] Volcano OCR\n  - [x] Ocr Space\n  - [x] Iflytek OCR\n  - [x] Tencent OCR\n  - [x] Tencent Image Translation OCR\n\n## Development Guide\n\ndevelopment environment\n```\nNodeJs Version >= 16\n\nNpm Version >= 8\n```\n\nDependent download\n```\nnpm run npm-i-extend-modules-update\n```\n\nProject Run\n```\nnpm run dev\n```\n\nProjects Build\n```\nnpm run build:win\nnpm run build:win:portable\nnpm run build:mac\n```\n\n## ÁÆÄÂçïÂø´ÈÄüÊñ∞Â¢ûÁøªËØë/OCRÊ∫ê\n\nAdding translation/OCR sources is very simple. You only need some JS/TS basics and interface debugging capabilities to integrate. Take Maverick Translation as an example\n\n### 1.Add Type\n\nEdit file to add a translation source enumeration\n\n```\nsrc/common/enums/TranslateServiceEnum.ts\n```\n\n`Note here: After the source enumeration definition is translated, subsequent file names need to be named according to the enumeration name method. For details, refer to the naming rules in the following steps`\n\n```\nstatic NIU_TRANS = 'NiuTrans'\n```\n\n### 2.Add Logo\n\nCopy the logo file to this file path\n\n```\nsrc/renderer/src/assets/translate/NiuTransLogo.png\n```\n\n### 3.Add Translation/OCR Source Information\n\nAdd translation/OCR source information file\n\n```\nsrc/common/channel/translate/info/NiuTransInfo.ts\n```\n\n### 4.Add translation/OCR source implementation\n\nAdd translation/OCR source interface implementation\n\n```\nsrc/main/service/channel/interfaces/NiuTransRequest.ts\n```\n\nAdd translation/OCR source interface call callback page results\n\n```\nsrc/main/service/channel/product/translate/NiuTransChannel.ts\n```\n\n## Thanks\n* Thanks [electron-vite](https://github.com/alex8088/electron-vite) The provided electron framework saved me a lot of time and cost\n* Thanks [Bob](https://github.com/ripperhe/Bob) Main sources of inspiration\n* Thanks [bob-plugin-openai-translator](https://github.com/yetone/bob-plugin-openai-translator) Reference for the original implementation of OpenAI\n* Thanks [eSearch](https://github.com/xushengfeng/eSearch) Reference for offline OCR and initial version screenshot implementation\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.0830078125,
          "content": "<div align='center'>\n\n  <img width=\"150px\" src=\"https://ttime.timerecord.cn/img/logo.png\"/>\n\n  # TTime\n\n  üöÄ ‰∏ÄÊ¨æÁÆÄÊ¥ÅÈ´òÊïàÁöÑËæìÂÖ•„ÄÅÊà™Âõæ„ÄÅÂàíËØçÁøªËØëËΩØ‰ª∂\n\n  <a href=\"https://ttime.timerecord.cn\"><img src=\"https://img.shields.io/badge/%E5%AE%98%E6%96%B9%E7%BD%91%E7%AB%99-ttime.timerecord.cn-brightgreen?logo=Safari\"/></a>\n  <a href=\"https://ttime.timerecord.cn\"><img src=\"https://img.shields.io/badge/-Windows-blue?logo=windows&logoColor=white\" /></a>\n  <a href=\"https://ttime.timerecord.cn\"><img src=\"https://img.shields.io/badge/-macOS-black?&logo=apple&logoColor=white\" /></a>\n\n  (‰∏≠Êñá | [English](README.en.md))\n\n</div>\n\n## ÁÆÄ‰ªã\n\n‰∏ªË¶ÅÂäüËÉΩÔºö`ËæìÂÖ•ÁøªËØë`„ÄÅ`Êà™ÂõæÁøªËØë`„ÄÅ`ÂàíËØçÁøªËØë`„ÄÅ`ÊÇ¨ÊµÆÁêÉÁøªËØë`„ÄÅ`Êà™ÂõæOCR`„ÄÅ`ÈùôÈªòÊà™ÂõæOCR`„ÄÅ`Ââ™Ë¥¥ÊùøÁõëÂê¨ÁøªËØë`\n\n## ÁïåÈù¢\n<div align='center'>\n  <table>\n    <tr>\n        <td>\n        <p>Êòé‰∫ÆÊ®°Âºè</p>\n        <img width=\"350px\" src=\"https://raw.githubusercontent.com/InkTimeRecord/TTime/dev/README.assets/translate.png\"/>\n        </td>\n        <td>\n        <p>ÊöóÈªëÊ®°Âºè</p>\n        <img width=\"350px\" src=\"https://raw.githubusercontent.com/InkTimeRecord/TTime/dev/README.assets/translate-dark.png\"/>\n        </td>\n    </tr>\n  </table>\n</div>\n\n| ÊñπÂºè | ÊèèËø∞ | È¢ÑËßà |\n| :---: | :---: | :---: |\n| Êà™ÂõæÁøªËØë | Êåâ‰∏ãÊà™ÂõæÁøªËØëÂø´Êç∑ÈîÆÔºàÈªòËÆ§ `Alt + W`ÔºâÔºåÊà™ÂèñÈúÄË¶ÅÁøªËØëÁöÑÂå∫Âüü | ![Êà™ÂõæÁøªËØë](https://raw.githubusercontent.com/InkTimeRecord/TTime/dev/README.assets/screenshot.gif) |\n| ÂàíËØçÁøªËØë | ÈÄâ‰∏≠ÈúÄË¶ÅÁøªËØëÁöÑÊñáÊú¨‰πãÂêéÔºåÊåâ‰∏ãÂàíËØçÁøªËØëÂø´Êç∑ÈîÆÂç≥ÂèØÔºàÈªòËÆ§ `Alt + E`Ôºâ | ![ÂàíËØçÁøªËØë](https://raw.githubusercontent.com/InkTimeRecord/TTime/dev/README.assets/choice.gif) |\n| ËæìÂÖ•ÁøªËØë| Êåâ‰∏ãËæìÂÖ•ÁøªËØëÂø´Êç∑ÈîÆÔºàÈªòËÆ§ `Alt + Q`ÔºâÔºåËæìÂÖ•ÈúÄË¶ÅÁøªËØëÁöÑÊñáÊú¨Ôºå`Enter` ÈîÆÁøªËØë | ![ËæìÂÖ•ÁøªËØë](https://raw.githubusercontent.com/InkTimeRecord/TTime/dev/README.assets/input.gif) |\n| ÊÇ¨ÊµÆÁêÉÁøªËØë | ÈÄâ‰∏≠ÈúÄË¶ÅÁøªËØëÁöÑÊñáÊú¨‰πãÂêéÔºåÁÇπÂáªÊÇ¨ÊµÆÁêÉÂõæÊ†áÂç≥ÂèØ (ÈªòËÆ§ÂÖ≥Èó≠ÔºåÈúÄË¶ÅËá™Ë°åÂú®ËÆæÁΩÆ‰∏≠ÂºÄÂêØ) | ![ÊÇ¨ÊµÆÁêÉÁøªËØë](https://raw.githubusercontent.com/InkTimeRecord/TTime/dev/README.assets/hover-ball.gif) |\n| Êà™ÂõæOCR | Êåâ‰∏ãÊ≠§Âø´Êç∑ÈîÆÂ∞Ü‰ºöÊ†πÊçÆ‰Ω†Êà™ÂõæÂå∫ÂüüËøõË°åÊñáÂ≠óËØÜÂà´ | ![Êà™ÂõæOCR](https://raw.githubusercontent.com/InkTimeRecord/TTime/dev/README.assets/screenshot-ocr.gif) |\n| Êà™ÂõæÈùôÈªòOCR | Êåâ‰∏ãÊ≠§Âø´Êç∑ÈîÆÂ∞Ü‰ºöÊ†πÊçÆ‰Ω†Êà™ÂõæÂå∫ÂüüËøõË°åÊñáÂ≠óËØÜÂà´ÔºåËØÜÂà´ÁöÑÂÜÖÂÆπËá™Âä®ÂÜôÂÖ•Ââ™Ë¥¥Êùø‰∏ç‰ºöÊâìÂºÄOCRÁ™óÂè£ | ![Êà™ÂõæÈùôÈªòOCR](https://raw.githubusercontent.com/InkTimeRecord/TTime/dev/README.assets/screenshot-silence-ocr.gif) |\n\n## ÁõÆÂâçÂ∑≤ÈõÜÊàêÁøªËØë/ÊñáÂ≠óËØÜÂà´ÊúçÂä°\n[ÁøªËØëÊ∫ê/ÊñáÂ≠óËØÜÂà´Áî≥ËØ∑ÂèÇËÄÉ](https://ttime.timerecord.cn/pages/93e0f8/#%E7%BF%BB%E8%AF%91%E6%BA%90%E4%BB%8B%E7%BB%8D)\n\n- [x] ÁøªËØëÊ∫ê\n  - [x] TTime (ÂÜÖÁΩÆ)\n  - [x] GoogleÁøªËØë (ÂÜÖÁΩÆ)\n  - [x] DeepL (ÂÜÖÁΩÆ) = DeepLX\n  - [x] Bing (ÂÜÖÁΩÆ)\n  - [x] BingËØçÂÖ∏ÁøªËØë (ÂÜÖÁΩÆ)\n  - [x] ËÖæËÆØ‰∫§‰∫íÁøªËØë (ÂÜÖÁΩÆ)\n  - [x] Â∞èÁâõÁøªËØë (ÂÜÖÁΩÆ)\n  - [x] ÁÆÄÊòéËã±Ê±âÂ≠óÂÖ∏-Á¶ªÁ∫ø (ÂÜÖÁΩÆ)\n  - [x] ËÖæËÆØÁøªËØëÂêõ\n  - [x] ÁôæÂ∫¶ÁøªËØë\n  - [x] ÈòøÈáåÁøªËØë\n  - [x] GoogleÁøªËØë\n  - [x] OpenAIÁøªËØë(ChatGPT)\n  - [x] AzureOpenAIÁøªËØë\n  - [x] ÊúâÈÅìÁøªËØë\n  - [x] DeepLÁøªËØë\n  - [x] ÁÅ´Â±±ÁøªËØë\n  - [x] Â∞èÁâõÁøªËØë\n  - [x] ÂΩ©‰∫ëÁøªËØë\n  - [x] PapagoÁøªËØë\n\n- [x] ÊñáÂ≠óËØÜÂà´\n  - [x] TTime\n  - [x] TTimeÂú®Á∫ø\n  - [x] ÁôæÂ∫¶OCR\n  - [x] ÁôæÂ∫¶ÂõæÁâáÁøªËØëOCR\n  - [x] ÁÅ´Â±±OCR\n  - [x] Ocr Space\n  - [x] ËÆØÈ£ûOCR\n  - [x] ËÖæËÆØ‰∫ëOCR\n  - [x] ËÖæËÆØ‰∫ëÂõæÁâáÁøªËØëOCR\n\n## ÂºÄÂèëÊåáÂçó\n\nÂºÄÂèëÁéØÂ¢É\n```\nNodeJs Version >= 16\n\nNpm Version >= 8\n```\n\n‰æùËµñ‰∏ãËΩΩ\n```\nnpm run npm-i-extend-modules-update\n```\n\nÈ°πÁõÆÂêØÂä®\n```\nnpm run dev\n```\n\nÈ°πÁõÆÊâìÂåÖ\n```\nnpm run build:win\nnpm run build:win:portable\nnpm run build:mac\n```\n\n## ÁÆÄÂçïÂø´ÈÄüÊñ∞Â¢ûÁøªËØë/OCRÊ∫ê\n\nÊñ∞Â¢ûÁøªËØë/OCRÊ∫êÊñ∞Â¢ûÂæàÁÆÄÂçïÔºå‰Ω†Âè™ÈúÄË¶ÅÊúâ‰∏Ä‰∫õJS/TSÂü∫Á°ÄÂíåÊé•Âè£ËÅîË∞ÉËÉΩÂäõÂ∞±ÂèØ‰ª•ÈõÜÊàê Ôºå‰ª•‰∏ã‰ª•Â∞èÁâõÁøªËØë‰∏∫‰æã\n\n### 1.Êñ∞Â¢ûÁ±ªÂûã\n\nÁºñËæëÊñá‰ª∂Ê∑ªÂä†‰∏Ä‰∏™ÁøªËØëÊ∫êÊûö‰∏æ\n\n```\nsrc/common/enums/TranslateServiceEnum.ts\n```\n\n`Ê≠§Â§ÑÈúÄË¶ÅÊ≥®ÊÑèÔºöÂΩìÁøªËØëÊ∫êÊûö‰∏æÂÆö‰πâÂêéÔºåÂêéÁª≠ÁöÑÊñá‰ª∂ÂêçÁß∞ÈÉΩÈúÄË¶ÅÊåâÁÖßÊûö‰∏æÂêçÁß∞ÊñπÂºèÂëΩÂêçÔºåÂÖ∑‰ΩìÂèÇÁÖßÂ¶Ç‰∏ãÊ≠•È™§ÁöÑÂëΩÂêçËßÑÂàô`\n\n```\nstatic NIU_TRANS = 'NiuTrans'\n```\n\n### 2.Êñ∞Â¢ûLogo\n\nÊääLogoÊñá‰ª∂Â§çÂà∂Âà∞Ê≠§Êñá‰ª∂Ë∑ØÂæÑ‰∏ã\n\n```\nsrc/renderer/src/assets/translate/NiuTransLogo.png\n```\n\n### 3.Êñ∞Â¢ûÁøªËØë/OCRÊ∫ê‰ø°ÊÅØ\n\nÊñ∞Â¢ûÁøªËØë/OCRÊ∫ê‰ø°ÊÅØÊñá‰ª∂\n\n```\nsrc/common/channel/translate/info/NiuTransInfo.ts\n```\n\n### 4.Êñ∞Â¢ûÁøªËØë/OCRÊ∫êÂÆûÁé∞\n\nÊñ∞Â¢ûÁøªËØë/OCRÊ∫êÊé•Âè£ÂÆûÁé∞\n\n```\nsrc/main/service/channel/interfaces/NiuTransRequest.ts\n```\n\nÊñ∞Â¢ûÁøªËØë/OCRÊ∫êÊé•Âè£Ë∞ÉÁî®ÂõûË∞ÉÈ°µÈù¢ÁªìÊûú\n\n```\nsrc/main/service/channel/product/translate/NiuTransChannel.ts\n```\n\n## ÊÑüË∞¢\n* ÊÑüË∞¢ [electron-vite](https://github.com/alex8088/electron-vite) Êèê‰æõÁöÑelectronÊ°ÜÊû∂ ËäÇÁúÅ‰∫ÜÊàëÂæàÂ§öÁöÑÊó∂Èó¥ÊàêÊú¨\n* ÊÑüË∞¢ [Bob](https://github.com/ripperhe/Bob) ‰∏ªË¶ÅÁÅµÊÑüÊù•Ê∫ê\n* ÊÑüË∞¢ [bob-plugin-openai-translator](https://github.com/yetone/bob-plugin-openai-translator) OpenAIÊúÄÂàùÂÆûÁé∞ÁöÑÂèÇËÄÉ\n* ÊÑüË∞¢ [eSearch](https://github.com/xushengfeng/eSearch) Á¶ªÁ∫øOCRÂèäÊúÄÂàùÁâàÊú¨Êà™ÂõæÂÆûÁé∞ÁöÑÂèÇËÄÉ\n"
        },
        {
          "name": "build",
          "type": "tree",
          "content": null
        },
        {
          "name": "dev-app-update.yml",
          "type": "blob",
          "size": 0.6328125,
          "content": "provider: generic\nurl: https://update.timerecord.cn/pc/TTime/\nupdaterCacheDirName: TTime-updater\nreleaseInfo:\n  releaseNotes: 1.Êñ∞Â¢ûÂÜÖÁΩÆÂ∞èÁâõÁøªËØëÊ∫ê(Êó†ÈúÄÈÖçÁΩÆÂØÜÈí•ÂèØÁõ¥Êé•‰ΩøÁî®)||2.Êñ∞Â¢ûOCRÁ™óÂè£(Êà™Âõæ -> ÊòæÁ§∫OCRÁ™óÂè£ÊñáÂ≠óËØÜÂà´)||3.Êñ∞Â¢ûÈùôÈªòOCR(Êà™Âõæ -> ‰∏çÊòæÁ§∫OCRÁ™óÂè£ÂêéÂè∞ËØÜÂà´ -> ËØÜÂà´ÂÆåÊàêËá™Âä®ÂÜôÂÖ•Ââ™Ë¥¥Êùø)||4.Êñ∞Â¢ûÊµÆÁêÉÊòæÁ§∫ÂêéÂÆöÊó∂3ÁßíËá™Âä®ÂÖ≥Èó≠||5.Êñ∞Â¢ûÂèØÈÖçÁΩÆÂ∞ÜOCRÁªìÊûúÁöÑ [ Êç¢Ë°åÁ¨¶ ] ÊõøÊç¢‰∏∫ [ Á©∫Ê†º ]||6.ÂäüËÉΩÊÄßËÆæÁΩÆÂçïÁã¨ÊäΩÁ¶ªÂà∞È´òÁ∫ßËÆæÁΩÆ||7.‰øÆÂ§çÈº†Ê†áÊÇ¨ÊµÆÁêÉÂèñËØçÈÉ®ÂàÜÊú∫ÂûãÊàñËÆæÁΩÆ‰∫ÜÁº©ÊîæÊØî‰æãÊÉÖÂÜµ‰∏ãÊòæÁ§∫Âá∫ÈîôÈóÆÈ¢ò||8.‰øÆÂ§çDeepLÁøªËØëÊ∫êÈ™åËØÅÊó∂ÈîôËØØÈóÆÈ¢ò\n"
        },
        {
          "name": "electron-builder.yml",
          "type": "blob",
          "size": 2.41015625,
          "content": "appId: com.ttime.app\nproductName: TTime\ndirectories:\n  buildResources: build\nfiles:\n  - '!**/.vscode/*'\n  - '!src/*'\n  - '!electron.vite.config.{js,ts,mjs,cjs}'\n  - '!{.eslintignore,.eslintrc.cjs,.prettierignore,.prettierrc.yaml,dev-app-update.yml,CHANGELOG.md,README.md}'\n  - '!{tsconfig.json,tsconfig.node.json,tsconfig.web.json}'\n  - '!README.assets/*'\n  - '!README.en.assets/*'\nasarUnpack:\n  - '**/*.{node,dll}'\n  - '**/ocr/*.{onnx,txt}'\n  - '**/plugins/*.exe'\n#asar:\n#  false\nafterSign: build/notarize.js\nwin:\n  executableName: TTime\nnsis:\n  artifactName: ${productName}-${version}-setup.${ext}\n  shortcutName: ${productName}\n  uninstallDisplayName: ${productName}\n  include: build/builder-installer.nsh\n  # ÂàõÂª∫Ê°åÈù¢Âø´Êç∑ÊñπÂºè\n  createDesktopShortcut: true\n  # ÂàõÂª∫ÂºÄÂßãËèúÂçïÂø´Êç∑ÊñπÂºè\n  createStartMenuShortcut: true\n  # ÊòØÂê¶ÂàõÂª∫‰∏ÄÈîÆÂÆâË£ÖÁ®ãÂ∫èÊàñËæÖÂä©\n  oneClick: false\n  # ÊòØÂê¶ÂÖÅËÆ∏Áî®Êà∑Êõ¥ÊîπÂÆâË£ÖÁõÆÂΩï\n  allowToChangeInstallationDirectory: true\n  # ‰∏çÊòæÁ§∫ÂÆâË£ÖÊ®°ÂºèÈ°µÈù¢ ÈªòËÆ§‰∏∫‰ΩøÁî®ËøôÂè∞ÁîµËÑëÁöÑ‰ªª‰Ωï‰∫∫ÂÆâË£ÖÔºàÊâÄÊúâÁî®Êà∑Ôºâ\n  perMachine: true\nmac:\n  entitlementsInherit: build/entitlements.mac.plist\n  extendInfo:\n    NSCameraUsageDescription: Application requests access to the device's camera.\n    NSMicrophoneUsageDescription: Application requests access to the device's microphone.\n    NSDocumentsFolderUsageDescription: Application requests access to the user's Documents folder.\n    NSDownloadsFolderUsageDescription: Application requests access to the user's Downloads folder.\n    # ÈÖçÁΩÆ‰∏çÊòæÁ§∫Âú® Dock(Á®ãÂ∫èÂùû) ÂÜÖ\n    LSUIElement: 1\ndmg:\n  artifactName: ${productName}-${version}-${arch}.${ext}\nlinux:\n  target:\n    - AppImage\n    - snap\n    - deb\n  maintainer: electronjs.org\n  category: Utility\nappImage:\n  artifactName: ${productName}-${version}.${ext}\nnpmRebuild: false\npublish:\n  provider: generic\n  url: https://update.timerecord.cn/pc/TTime/\nreleaseInfo:\n  releaseNotes: 1.Êñ∞Â¢ûÂÜÖÁΩÆÂ∞èÁâõÁøªËØëÊ∫ê(Êó†ÈúÄÈÖçÁΩÆÂØÜÈí•ÂèØÁõ¥Êé•‰ΩøÁî®)||2.Êñ∞Â¢ûOCRÁ™óÂè£(Êà™Âõæ -> ÊòæÁ§∫OCRÁ™óÂè£ÊñáÂ≠óËØÜÂà´)||3.Êñ∞Â¢ûÈùôÈªòOCR(Êà™Âõæ -> ‰∏çÊòæÁ§∫OCRÁ™óÂè£ÂêéÂè∞ËØÜÂà´ -> ËØÜÂà´ÂÆåÊàêËá™Âä®ÂÜôÂÖ•Ââ™Ë¥¥Êùø)||4.Êñ∞Â¢ûÊµÆÁêÉÊòæÁ§∫ÂêéÂÆöÊó∂3ÁßíËá™Âä®ÂÖ≥Èó≠||5.Êñ∞Â¢ûÂèØÈÖçÁΩÆÂ∞ÜOCRÁªìÊûúÁöÑ [ Êç¢Ë°åÁ¨¶ ] ÊõøÊç¢‰∏∫ [ Á©∫Ê†º ]||6.ÂäüËÉΩÊÄßËÆæÁΩÆÂçïÁã¨ÊäΩÁ¶ªÂà∞È´òÁ∫ßËÆæÁΩÆ||7.‰øÆÂ§çÈº†Ê†áÊÇ¨ÊµÆÁêÉÂèñËØçÈÉ®ÂàÜÊú∫ÂûãÊàñËÆæÁΩÆ‰∫ÜÁº©ÊîæÊØî‰æãÊÉÖÂÜµ‰∏ãÊòæÁ§∫Âá∫ÈîôÈóÆÈ¢ò||8.‰øÆÂ§çDeepLÁøªËØëÊ∫êÈ™åËØÅÊó∂ÈîôËØØÈóÆÈ¢ò\n"
        },
        {
          "name": "electron.vite.config.ts",
          "type": "blob",
          "size": 2.3388671875,
          "content": "import { resolve } from 'path'\n// @ts-ignore ÊäëÂà∂ÈîôËØØÊ†°È™åÈóÆÈ¢ò\nimport { externalizeDepsPlugin, defineConfig } from 'electron-vite'\nimport vue from '@vitejs/plugin-vue'\n// @ts-ignore ÊäëÂà∂ÈîôËØØÊ†°È™åÈóÆÈ¢ò\nimport { createSvgIconsPlugin } from 'vite-plugin-svg-icons'\n\nconst BASE_API = 'https://ink.timerecord.cn/apis/'\n\nexport default defineConfig({\n  main: {\n    plugins: [externalizeDepsPlugin()]\n  },\n  preload: {\n    plugins: [externalizeDepsPlugin()],\n    build: {\n      rollupOptions: {\n        input: {\n          index: resolve(__dirname, 'src/preload/index.ts'),\n          screenshot: resolve(__dirname, 'src/preload/screenshot.ts'),\n          textOcr: resolve(__dirname, 'src/preload/textOcr.ts'),\n          set: resolve(__dirname, 'src/preload/set.ts'),\n          update: resolve(__dirname, 'src/preload/update.ts'),\n          hoverBall: resolve(__dirname, 'src/preload/hoverBall.ts'),\n          ocr: resolve(__dirname, 'src/preload/ocr.ts'),\n          ocrSilence: resolve(__dirname, 'src/preload/ocrSilence.ts')\n        }\n      }\n    }\n  },\n  renderer: {\n    server: {\n      host: '0.0.0.0',\n      port: 9098\n    },\n    resolve: {\n      alias: {\n        '@renderer': resolve('src/renderer/src'),\n        '@': resolve('src/renderer/src'),\n        '@assets': resolve('src/renderer/src/assets')\n      }\n    },\n    define: {\n      'process.env': {\n        BASE_API: BASE_API\n      }\n    },\n    plugins: [\n      vue(),\n      createSvgIconsPlugin({\n        // ÊåáÂÆöÈúÄË¶ÅÁºìÂ≠òÁöÑÂõæÊ†áÊñá‰ª∂Â§π\n        iconDirs: [resolve(process.cwd(), 'src/renderer/src/icons/svg')],\n        // ÊåáÂÆösymbolIdÊ†ºÂºè\n        symbolId: 'icon-[dir]-[name]'\n      })\n    ],\n    build: {\n      // Á¶ÅÁî®ËµÑÊ∫êÂÜÖËÅîÈôêÂà∂ÔºåÁ°Æ‰øùÂõæÁâá‰ª•ÂéüÂßãË∑ØÂæÑËøõË°åÂä†ËΩΩ\n      assetsInlineLimit: 0,\n      rollupOptions: {\n        input: {\n          index: resolve(__dirname, 'src/renderer/index.html'),\n          screenshot: resolve(__dirname, 'src/renderer/screenshot.html'),\n          textOcr: resolve(__dirname, 'src/renderer/textOcr.html'),\n          set: resolve(__dirname, 'src/renderer/set.html'),\n          update: resolve(__dirname, 'src/renderer/update.html'),\n          hoverBall: resolve(__dirname, 'src/renderer/hoverBall.html'),\n          ocr: resolve(__dirname, 'src/renderer/ocr.html'),\n          ocrSilence: resolve(__dirname, 'src/renderer/ocrSilence.html')\n        }\n      }\n    }\n  }\n})\n"
        },
        {
          "name": "modules-update.ts",
          "type": "blob",
          "size": 1.29296875,
          "content": "const fs = require('fs')\nconst path = require('path')\nconst chalk = require('chalk')\n\n// Â∞Ü ‰øÆÊîπËøáÊ∫êÁ†ÅÁöÑ node_modules_update ÂÜÖÁöÑÊñá‰ª∂Ë¶ÜÁõñÂú® node_modules ‰∏≠\n// node_modules\nconst NODE_MODULES = path.resolve('./node_modules')\n// ‰øÆÊîπËøáÊ∫êÁ†ÅÁöÑ node_modules\nconst UPDATE_NODE_MODULES = path.resolve('./node_modules_update')\ncopy(UPDATE_NODE_MODULES, NODE_MODULES)\n\n/**\n * @param {string} origin ÈúÄË¶ÅÂ§çÂà∂ÁöÑÁõÆÂΩï„ÄÅÊñá‰ª∂\n * @param {string} target Â§çÂà∂Âà∞ÊåáÂÆöÁöÑÁõÆÂΩï„ÄÅÊñá‰ª∂\n * @param {string} filterFn ÊØèÊ¨°Â§çÂà∂ÂâçÔºåÈÉΩ‰ºöÁªèËøá‰∏ÄÊ¨°filterFnÔºåËã•ËøîÂõûtrueÔºåÂàôÂ§çÂà∂„ÄÇ\n */\nfunction copy(origin, target, filterFn = (origin, target) => true) {\n  if (fs.statSync(origin).isDirectory()) {\n    if (!fs.existsSync(target)) {\n      fs.mkdirSync(target)\n    }\n    fs.readdirSync(origin).forEach(originName => {\n      const originFilePath = path.resolve(origin, originName)\n      const targetFilePath = path.resolve(target, originName)\n      copy(originFilePath, targetFilePath, filterFn)\n    })\n  } else if (filterFn(origin, target)) {\n    console.info(chalk.blue('Â∑≤ÊâãÂä®‰øÆÊîπËøáÊ∫êÁ†ÅÔºö', target))\n    //ÊâßË°åÊõøÊç¢\n    fs.copyFileSync(origin, target)\n  }\n}\n\nconsole.info(chalk.bold.yellow('‰ª•‰∏äÁöÑÊñá‰ª∂Â∑≤Ë¢´ node_modules_update ‰∏≠ÁöÑÊñá‰ª∂ÊõøÊç¢ÔºåÂçáÁ∫ßÁâàÊú¨ÂêéËØ∑Ê≥®ÊÑèÊ£ÄÊü•'))\n"
        },
        {
          "name": "node_modules_update",
          "type": "tree",
          "content": null
        },
        {
          "name": "ocr",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 2.7744140625,
          "content": "{\n  \"name\": \"time-translate\",\n  \"version\": \"0.9.2\",\n  \"description\": \"‰∏ÄÊ¨æÁÆÄÊ¥Å„ÄÅÈ´òÊïà„ÄÅÈ´òÈ¢úÂÄºÁöÑËæìÂÖ•„ÄÅÊà™Âõæ„ÄÅÂàíËØçÁøªËØëËΩØ‰ª∂\",\n  \"main\": \"./out/main/index.js\",\n  \"author\": \"byliangcheng\",\n  \"homepage\": \"https://ttime.timerecord.cn/\",\n  \"scripts\": {\n    \"format\": \"prettier --write .\",\n    \"lint\": \"eslint . --ext .js,.jsx,.cjs,.mjs,.ts,.tsx,.cts,.mts,.vue --fix\",\n    \"typecheck:node\": \"tsc --noEmit -p tsconfig.node.json --composite false\",\n    \"typecheck:web\": \"vue-tsc --noEmit -p tsconfig.web.json --composite false\",\n    \"typecheck\": \"npm run modules-update && npm run typecheck:node && npm run typecheck:web\",\n    \"start\": \"electron-vite preview\",\n    \"dev\": \"electron-vite dev\",\n    \"build\": \"electron-vite build\",\n    \"postinstall\": \"electron-builder install-app-deps\",\n    \"build:win\": \"npm run modules-update && npm run build && electron-builder --win --config\",\n    \"build:win:portable\": \"npm run modules-update && npm run build && electron-builder --win portable --config\",\n    \"build:mac\": \"npm run modules-update && npm run build && electron-builder --mac --config\",\n    \"build:linux\": \"npm run modules-update && npm run build && electron-builder --linux --config\",\n    \"npm-i-extend-modules-update\": \"npm i && npm run modules-update\",\n    \"modules-update\": \"node modules-update.ts\"\n  },\n  \"dependencies\": {\n    \"@alicloud/alimt20181012\": \"^1.0.4\",\n    \"@electron-toolkit/preload\": \"^1.0.2\",\n    \"@electron-toolkit/utils\": \"^1.0.2\",\n    \"@fortaine/fetch-event-source\": \"^3.0.6\",\n    \"@jitsi/robotjs\": \"^0.6.11\",\n    \"@volcengine/openapi\": \"^1.9.1\",\n    \"auto-launch\": \"^5.0.5\",\n    \"axios\": \"^1.3.1\",\n    \"electron-log\": \"^4.4.8\",\n    \"electron-store\": \"^8.1.0\",\n    \"fs-extra\": \"^11.1.1\",\n    \"md5\": \"^2.3.0\",\n    \"md5-node\": \"^1.0.1\",\n    \"node-screenshots\": \"^0.1.1\",\n    \"onnxruntime-node\": \"^1.13.1\",\n    \"opencv.js\": \"^1.2.1\",\n    \"sqlite3\": \"^5.1.6\",\n    \"tencentcloud-sdk-nodejs-ocr\": \"^4.0.632\",\n    \"tencentcloud-sdk-nodejs-tmt\": \"^4.0.589\",\n    \"tslib\": \"^2.5.0\",\n    \"uiohook-napi\": \"^1.5.0\",\n    \"wordsninja\": \"^1.0.0\"\n  },\n  \"devDependencies\": {\n    \"@electron-toolkit/tsconfig\": \"^1.0.1\",\n    \"@electron/notarize\": \"^1.2.3\",\n    \"@element-plus/icons-vue\": \"^2.0.10\",\n    \"@rushstack/eslint-patch\": \"^1.2.0\",\n    \"@vitejs/plugin-vue\": \"^3.2.0\",\n    \"@vue/eslint-config-prettier\": \"^7.0.0\",\n    \"@vue/eslint-config-typescript\": \"^11.0.2\",\n    \"download\": \"^8.0.0\",\n    \"electron\": \"^20.3.1\",\n    \"electron-builder\": \"^23.6.0\",\n    \"electron-vite\": \"^1.0.14\",\n    \"element-plus\": \"^2.2.26\",\n    \"eslint\": \"^8.28.0\",\n    \"eslint-plugin-vue\": \"^9.7.0\",\n    \"franc\": \"^6.1.0\",\n    \"prettier\": \"^2.7.1\",\n    \"sass\": \"^1.56.2\",\n    \"typescript\": \"^4.9.3\",\n    \"vite\": \"^3.2.4\",\n    \"vite-plugin-svg-icons\": \"^2.0.1\",\n    \"vue\": \"^3.2.45\",\n    \"vue-router\": \"^4.1.6\",\n    \"vuedraggable\": \"^4.1.0\"\n  }\n}\n"
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "public",
          "type": "tree",
          "content": null
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tsconfig.json",
          "type": "blob",
          "size": 0.08984375,
          "content": "{\n  \"references\": [{ \"path\": \"./tsconfig.node.json\" }, { \"path\": \"./tsconfig.web.json\" }]\n}\n"
        },
        {
          "name": "tsconfig.node.json",
          "type": "blob",
          "size": 0.748046875,
          "content": "{\n  \"extends\": \"@electron-toolkit/tsconfig/tsconfig.node.json\",\n  \"include\": [\n    \"electron.vite.config.*\",\n    \"src/preload/*\",\n    \"src/main/*\",\n    \"src/main/service/*\",\n    \"src/main/service/channel/*\",\n    \"src/main/service/channel/factory/*\",\n    \"src/main/service/channel/interfaces/*\",\n    \"src/main/service/channel/product/*\",\n    \"src/main/service/channel/product/translate/*\",\n    \"src/main/service/channel/product/ocr/*\",\n    \"src/main/service/auth/*\",\n    \"src/main/enums/*\",\n    \"src/main/utils/*\",\n    \"src/main/class/*\",\n    \"src/common/enums/*\",\n    \"src/common/class/*\",\n    \"src/common/utils/*\",\n    \"src/common/channel/translate/info/*\"\n  ],\n  \"compilerOptions\": {\n    \"composite\": true,\n    \"types\": [\"electron-vite/node\", \"vite/client\"]\n  }\n}\n"
        },
        {
          "name": "tsconfig.web.json",
          "type": "blob",
          "size": 0.6884765625,
          "content": "{\n  \"extends\": \"@electron-toolkit/tsconfig/tsconfig.web.json\",\n  \"include\": [\n    \"src/renderer/src/env.d.ts\",\n    \"src/renderer/src/**/*\",\n    \"src/renderer/src/**/*.vue\",\n    \"src/preload/*.d.ts\",\n    \"src/common/enums/*.ts\",\n    \"src/common/class/*.ts\",\n    \"src/common/utils/*.ts\",\n    \"src/common/channel/translate/info/*.ts\",\n    \"src/common/channel/ocr/info/*.ts\"\n  ],\n  \"compilerOptions\": {\n    \"composite\": true,\n    \"strict\": false,\n    \"lib\": [\n      \"dom\"\n    ],\n    \"baseUrl\": \".\",\n    \"paths\": {\n      \"@renderer/*\": [\n        \"src/renderer/src/*\"\n      ],\n      \"@/*\": [\n        \"./src/renderer/src/*\"\n      ],\n      \"@assets/*\": [\n        \"./src/renderer/src/assets/*\"\n      ]\n    }\n  }\n}\n"
        }
      ]
    }
  ]
}