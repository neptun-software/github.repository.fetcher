{
  "metadata": {
    "timestamp": 1736564036260,
    "page": 580,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjU4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "frangoteam/FUXA",
      "stars": 3044,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.14453125,
          "content": "# DS_Store\n*.DS_Store\n# Logs\nlogs\n*.log\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\n\n# Runtime data\npids\n*.pid\n*.seed\n*.pid.lock\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage\n\n# nyc test coverage\n.nyc_output\n\n# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# Bower dependency directory (https://bower.io/)\nbower_components\n\n# node-waf configuration\n.lock-wscript\n\n# Compiled binary addons (https://nodejs.org/api/addons.html)\nbuild/Release\n\n# Dependency directories\nnode_modules/\njspm_packages/\n\n# TypeScript v1 declaration files\ntypings/\n\n# Optional npm cache directory\n.npm\n\n# Optional eslint cache\n.eslintcache\n\n# Optional REPL history\n.node_repl_history\n\n# Output of 'npm pack'\n*.tgz\n\n# Yarn Integrity file\n.yarn-integrity\n\n# dotenv environment variables file\n.env\n\n# next.js build output\n.next\n\n# workspace\n*.code-workspace\n\n#appdata\n_appdata/\n\n# logs\n_logs/\n\n# database\n_db/\n\n# ex.packages\n_pkg/\n#resources images\n_images/\n\n_reports/\n\n_certificates/\n\n# appdata\nserver/_appdata\n#server/package-lock.json\n#client/package-lock.json\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.3603515625,
          "content": "FROM node:18-bookworm\n\nARG NODE_SNAP=false\n\nRUN apt-get update && apt-get install -y dos2unix\n\n# Change working directory\nWORKDIR /usr/src/app\n\n# Clone FUXA repository\nRUN git clone https://github.com/frangoteam/FUXA.git\n\n# Install build dependencies for node-odbc\nRUN apt-get update && apt-get install -y build-essential unixodbc unixodbc-dev\n\n# Convert the script to Unix format and make it executable\nRUN dos2unix FUXA/odbc/install_odbc_drivers.sh && chmod +x FUXA/odbc/install_odbc_drivers.sh\n\nWORKDIR /usr/src/app/FUXA/odbc\nRUN ./install_odbc_drivers.sh\n\n# Change working directory\nWORKDIR /usr/src/app\n\n# Copy odbcinst.ini to /etc\nRUN cp FUXA/odbc/odbcinst.ini /etc/odbcinst.ini\n\n# Install Fuxa server\nWORKDIR /usr/src/app/FUXA/server\nRUN npm install\n\n# Install options snap7\nRUN if [ \"$NODE_SNAP\" = \"true\" ]; then \\\n    npm install node-snap7; \\\n    fi\n\n# Workaround for sqlite3 https://stackoverflow.com/questions/71894884/sqlite3-err-dlopen-failed-version-glibc-2-29-not-found\nRUN apt-get update && apt-get install -y sqlite3 libsqlite3-dev && \\\n    apt-get autoremove -yqq --purge && \\\n    apt-get clean  && \\\n    rm -rf /var/lib/apt/lists/*  && \\\n    npm install --build-from-source --sqlite=/usr/bin sqlite3\n\n# Add project files\nADD . /usr/src/app/FUXA\n\n# Set working directory\nWORKDIR /usr/src/app/FUXA/server\n\n# Expose port\nEXPOSE 1881\n\n# Start the server\nCMD [ \"npm\", \"start\" ]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.06640625,
          "content": "MIT License\n\nCopyright (c) 2019-2021 frangoteam info@frangoteam.org\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.740234375,
          "content": "![fuxa logo](/client/src/favicon.ico)\n# FUXA\nFUXA is a web-based Process Visualization (SCADA/HMI/Dashboard) software. With FUXA you can create modern process visualizations with individual designs for your machines and real-time data display.\n\n![fuxa editor](/screenshot/fuxa-editor.png)\n\n![fuxa ani](/screenshot/fuxa-ani.gif)\n\n![fuxa action](/screenshot/feature-action-move.gif)\n\n## Features\n- Devices connectivity with Modbus RTU/TCP, Siemens S7 Protocol, OPC-UA, BACnet IP, MQTT, Ethernet/IP (Allen Bradley)\n- SCADA/HMI Web-Editor - Engineering and Design completely web-based\n- Cross-Platform Full-Stack - Backend with NodeJs and Frontend with Web technologies (HTML5, CSS, Javascript, Angular, SVG)\n\n## Live Demo\nHere is a [live demo](https://frangoteam.github.io) example of FUXA editor.\n\n## Installing and Running\nFUXA is developed with NodeJS (backend) and Angular (frontend).\n\nSee the Wiki for more details about installing and getting started\n\n[Wiki](https://github.com/frangoteam/FUXA/wiki)\n\n[Wiki Installing/Building](https://github.com/frangoteam/FUXA/wiki/Installing-and-Running)\n\n\n### Running from docker\n```\ndocker pull frangoteam/fuxa:latest\ndocker run -d -p 1881:1881 frangoteam/fuxa:latest\n\n// persistent storage of application data (project), daq (tags history), logs and images (resource)\ndocker run -d -p 1881:1881 -v fuxa_appdata:/usr/src/app/FUXA/server/_appdata -v fuxa_db:/usr/src/app/FUXA/server/_db -v fuxa_logs:/usr/src/app/FUXA/server/_logs -v fuxa_images:/usr/src/app/FUXA/server/_images frangoteam/fuxa:latest\n\n// with Docker compose\n// persistent storage will be at ./appdata ./db ./logs and ./images\nwget https://raw.githubusercontent.com/frangoteam/FUXA/master/compose.yml\ndocker compose up -d\n```\n\n### Install from [NPM](https://www.npmjs.com/package/@frangoteam/fuxa)\n\nYou need to have installed [Node](https://nodejs.org/en/about/previous-releases) Version 18.\n\n**WARNING** In linux with nodejs Version 18 the installation could be a challenge.\nIf you don't intend communicate with Siemens PLCs via S7 (node-snap7 library) you can install from [NPM @frangoteam/fuxa-min](https://www.npmjs.com/package/@frangoteam/fuxa-min)\n\n```\nnpm install -g --unsafe-perm @frangoteam/fuxa\nfuxa\n```\n\n### Install from source\n[Download the latest release](https://github.com/frangoteam/FUXA/releases) and unpack it\n\nYou need to have installed [Node](https://nodejs.org/en/about/previous-releases) Version 18.\n\n**WARNING** In linux with nodejs Version 18 the installation could be a challenge.\nIf you don't intend to communicate with Siemens PLCs via S7, you can remove the ```node-snap7``` library from the ```server/package.json```. Similarly, if you don't intend to use ODBC to communicate with an external database, you can remove the ```odbc``` library from the ```server/package.json```.\n\n```\ncd ./server\nnpm install\nnpm start\n```\n\nOpen up a browser (better Chrome) and navigate to http://localhost:1881\n\n**Note** If you intend to use nodejs version 14, please remove odbc from the package.json dependencies. nodejs 14 may have compatibility issues with certain versions of odbc, which could lead to installation errors.\n\n### Creating the Electron Application\nElectron is a framework for building cross-platform desktop applications using web technologies. An Electron application is standalone, meaning it can be run independently on your desktop without needing a web browser.\n\nTo create the Electron application, you need to have node.js 18 installed. Follow these steps:\n\nBuild Server and Client First\n```\ncd ./server\nnpm install\ncd ../client\nnpm install\nnpm run build\n```\n\nPackaging\n```\ncd ./app\nnpm install\nnpm run package\n```\n\nAfter following these steps, you will have a standalone Electron application for FUXA. The application can be found in the ./app directory.\n\n## Usage\n- Look the guide in [wiki](https://github.com/frangoteam/FUXA/wiki) pages\n- Look video from [frangoteam](https://www.youtube.com/@umbertonocelli5301)\n- Look video from [Fusion Automate - Urvish Nakum](https://youtube.com/playlist?list=PLxrSjjYyzaaK8uY3kVaFzfGnwhVXiCEAO&si=aU1OxgkUvLQ3bXHq)\n\n## To Debug (Full Stack)\nInstall and start to serve the frontend\n```\ncd ./client\nnpm install\nnpm start\n```\n\nStart the Server and Client (Browser) in Debug Mode\n```\nIn vscode: Debug ‘Server & Client’\n```\n\n## To Build\nBuild the frontend for production\n```\ncd ./client\nng build --configuration=production\n```\n\n## Contributing\nAny contributions you make are greatly appreciated.\nIf you identify any errors, or have an idea for an improvement, please open an [issue](/../../issues).\nBut before filing a new issue, please look through already existing issues. Search open and closed issues first.\n\nNon-code contributions are also highly appreciated, such as improving the documentation or promoting FUXA on social media.\n\n### Pull-Requests\nIf you want to raise a pull-request with a new feature, or a refactoring of existing code please first open an issue explaining the problem.\n```\n1. Fork the Project\n2. Create your Feature Branch (git checkout -b feature/AmazingFeature)\n3. Commit your Changes (git commit -m 'Add some AmazingFeature')\n4. Push to the Branch (git push origin feature/AmazingFeature)\n5. Open a Pull Request\n```\n\n### Coding standards\nPlease ensure you follow the coding standards used through-out the existing code base. Some basic rules include:\n- Indent with 4-spaces, no tabs.\n- Opening brace on same line as if/for/function and so on, closing brace on its own line.\n\n## Let us know!\nWe’d be really happy if you send us your own shapes in order to collect a library to share it with others. Just send an email to info@frangoteam.org and do let us know if you have any questions or suggestions regarding our work.\n\n## <a href=\"https://discord.gg/WZhxz9uHh4\" target=\"_blank\" > <img src=\"https://skillicons.dev/icons?i=discord\" alt=\"\"></a>\n\n## License\nMIT.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.6533203125,
          "content": "# Security Policy\n\n## Reporting a Vulnerability\n\nIf you discover a security vulnerability within FUXA, please send an email to `dev@frangoteam.org`. All security vulnerabilities will be promptly addressed.\n\n\n## Supported Versions\n\nThe latest stable release of FUXA is the only officially supported version for security updates. Please make sure you are using the latest release before reporting any security issues.\n\n## Security Updates\n\nSecurity updates and patches will be communicated through the official channels such as release notes and announcements. It is recommended to stay updated on the latest releases.\n\nThank you for contributing to the security of FUXA!"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "client",
          "type": "tree",
          "content": null
        },
        {
          "name": "compose.yml",
          "type": "blob",
          "size": 0.314453125,
          "content": "services:\n  fuxa:\n    image: frangoteam/fuxa:latest\n    restart: unless-stopped\n    volumes:\n      - './appdata:/usr/src/app/FUXA/server/_appdata'\n      - './db:/usr/src/app/FUXA/server/_db'\n      - './logs:/usr/src/app/FUXA/server/_logs'\n      - './images:/usr/src/app/FUXA/server/_images'\n    ports:\n      - '1881:1881'\n"
        },
        {
          "name": "odbc",
          "type": "tree",
          "content": null
        },
        {
          "name": "screenshot",
          "type": "tree",
          "content": null
        },
        {
          "name": "server",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}