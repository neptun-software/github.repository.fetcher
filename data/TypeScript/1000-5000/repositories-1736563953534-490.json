{
  "metadata": {
    "timestamp": 1736563953534,
    "page": 490,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQ5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "slackapi/node-slack-sdk",
      "stars": 3289,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1796875,
          "content": "node_modules\n/package-lock.json\nscripts/package-lock.json\nexamples/*/package-lock.json\n\nnpm-debug.log\nlerna-debug.log\ntmp/\n.env*\n\n# npm pack outputs\n*.tgz\n*.bk\n\n.DS_Store\n.nyc_output/\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.056640625,
          "content": "MIT License\n\nCopyright (c) 2014- Slack Technologies, LLC\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 5.861328125,
          "content": "# Node Slack SDK\n\n[![build-ci](https://github.com/slackapi/node-slack-sdk/actions/workflows/ci-build.yml/badge.svg)](https://github.com/slackapi/node-slack-sdk/actions/workflows/ci-build.yml)\n<!-- TODO: npm versions with scoped packages: https://github.com/rvagg/nodei.co/issues/24 -->\n___\n\n## Getting Started\n\nVisit the [documentation site](https://tools.slack.dev/node-slack-sdk) for all the lovely details.\n\n_This SDK is a collection of single-purpose packages. The packages are aimed at making building Slack apps\neasy, performant, secure, and scalable. They can help with just about anything in the Slack platform, from dropping\nnotifications in channels to fully interactive bots._\n\nThe Slack platform offers several APIs to build apps. Each Slack API delivers part of the capabilities from the\nplatform, so that you can pick just those that fit for your needs. This SDK offers a corresponding package for each of\nSlack's APIs. They are small and powerful when used independently, and work seamlessly when used together, too.\n\n**Just starting out?** The [Getting Started tutorial](https://slackapi.github.io/node-slack-sdk/getting-started) will\nwalk you through building your first Slack app using Node.js.\n\n| Slack API    | What its for | NPM Package      |\n|--------------|--------------|-------------------|\n| Web API      | Send data to or query data from Slack using any of [over 220 methods](https://api.slack.com/methods). | [`@slack/web-api`](https://tools.slack.dev/node-slack-sdk/web-api) |\n| OAuth        | Setup the authentication flow using V2 OAuth for Slack apps as well as V1 OAuth for classic Slack apps. | [`@slack/oauth`](https://tools.slack.dev/node-slack-sdk/oauth) |\n| Incoming Webhooks | Send notifications to a single channel which the user picks on installation. | [`@slack/webhook`](https://tools.slack.dev/node-slack-sdk/webhook) |\n| Socket Mode  | Listen for incoming messages and a limited set of events happening in Slack, using WebSocket. | [`@slack/socket-mode`](https://tools.slack.dev/node-slack-sdk/socket-mode) |\n\n**Not sure about which APIs are right for your app?** Read our [blog\npost](https://medium.com/slack-developer-blog/getting-started-with-slacks-apis-f930c73fc889) that explains the options.\nIf you're still not sure, [reach out for help](#getting-help) and our community can guide you.\n\n**Deprecation Notice** \n\n`@slack/events-api` and `@slack/interactive-messages` officially reached EOL on May 31st, 2021. Development has fully stopped for these packages and all remaining open issues and pull requests have been closed.\n\nAt this time, we recommend migrating to [Bolt for JavaScript](https://github.com/slackapi/bolt-js), a framework that offers all of the functionality available in those packages (and more). To help with that process, we've provided some [migration samples](https://tools.slack.dev/node-slack-sdk/tutorials/migrating-to-v6) for those looking to convert their existing apps.\n\n## Installation\n\nUse your favorite package manager to install any of the packages and save to your `package.json`:\n\n```shell\n$ npm install @slack/web-api @slack/socket-mode\n\n# Or, if you prefer yarn\n$ yarn add @slack/web-api @slack/socket-mode\n```\n\n## Usage\n\nThe following examples summarize the most common ways to use this package. There's also a [Getting Started\ntutorial](https://tools.slack.dev/node-slack-sdk/getting-started) that's perfect for just starting out, and each\npackage's documentation, linked in the table above.\n\n### Posting a message with Web API\n\nYour app will interact with the Web API through the `WebClient` object, which is an export from `@slack/web-api`. You\ntypically instantiate a client with a token you received from Slack. The example below shows how to post a message into\na channel, DM, MPDM, or group. The `WebClient` object makes it simple to call any of the [**over 130 Web API\nmethods**](https://api.slack.com/methods).\n\n```javascript\nconst { WebClient } = require('@slack/web-api');\n\n// An access token (from your Slack app or custom integration - xoxp, xoxb)\nconst token = process.env.SLACK_TOKEN;\n\nconst web = new WebClient(token);\n\n// This argument can be a channel ID, a DM ID, a MPDM ID, or a group ID\nconst conversationId = 'C1232456';\n\n(async () => {\n  // See: https://api.slack.com/methods/chat.postMessage\n  const res = await web.chat.postMessage({ channel: conversationId, text: 'Hello there' });\n\n  // `res` contains information about the posted message\n  console.log('Message sent: ', res.ts);\n})();\n```\n\n**Note**: To use the example above, the token is required to have either the `bot`, `chat:user:write`, or\n`chat:bot:write` scopes.\n\n**Tip**: Use the [Block Kit Builder](https://api.slack.com/tools/block-kit-builder) for a playground\nwhere you can prototype your message's look and feel.\n\n### Listening for an event with the Events API\n\nRefer to [Bolt for JavaScript document pages](https://tools.slack.dev/bolt-js/concepts#event-listening).\n\n### Responding to interactive messages\n\nRefer to [Bolt for JavaScript document pages](https://tools.slack.dev/bolt-js/concepts#action-listening).\n\n### Using Socket Mode\n\nRefer to [the module document page](https://tools.slack.dev/node-slack-sdk/socket-mode) and [Bolt for JavaScript document page](https://tools.slack.dev/bolt-js/concepts#socket-mode).\n\n## Requirements\n\nThis package supports Node v14 and higher. It's highly recommended to use [the latest LTS version of\nnode](https://github.com/nodejs/Release#release-schedule), and the documentation is written using syntax and features\nfrom that version.\n\n## Getting Help\n\nIf you get stuck, we're here to help. The following are the best ways to get assistance working through your issue:\n\n  * [Issue Tracker](http://github.com/slackapi/node-slack-sdk/issues) for questions, feature requests, bug reports and\n    general discussion related to these packages. Try searching before you create a new issue.\n  * [Email us](mailto:developers@slack.com) in Slack developer support: `developers@slack.com`\n"
        },
        {
          "name": "biome.json",
          "type": "blob",
          "size": 0.5712890625,
          "content": "{\n  \"$schema\": \"https://biomejs.dev/schemas/1.8.3/schema.json\",\n  \"formatter\": {\n    \"enabled\": true,\n    \"formatWithErrors\": false,\n    \"ignore\": [],\n    \"attributePosition\": \"auto\",\n    \"indentStyle\": \"space\",\n    \"indentWidth\": 2,\n    \"lineWidth\": 120,\n    \"lineEnding\": \"lf\"\n  },\n  \"javascript\": {\n    \"formatter\": {\n      \"quoteStyle\": \"single\"\n    }\n  },\n  \"linter\": {\n    \"enabled\": true,\n    \"rules\": {\n      \"recommended\": true\n    }\n  },\n  \"organizeImports\": {\n    \"enabled\": true\n  },\n  \"vcs\": {\n    \"enabled\": true,\n    \"clientKind\": \"git\",\n    \"useIgnoreFile\": true\n  }\n}\n"
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.4931640625,
          "content": "comment:\n  layout: \"condensed_header, diff, flags\"\n  \nflags:\n  cli-hooks:\n    paths:\n      - packages/cli-hooks/**\n    carryforward: true\n  logger:\n    paths:\n      - packages/logger/**\n    carryforward: true\n  oauth:\n    paths:\n      - packages/oauth/**\n    carryforward: true\n  socket-mode:\n    paths:\n      - packages/socket-mode/**\n    carryforward: true\n  web-api:\n    paths:\n      - packages/web-api/**\n    carryforward: true\n  webhook:\n    paths:\n      - packages/webhook/**\n    carryforward: true\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "node-slack-sdk.code-workspace",
          "type": "blob",
          "size": 0.994140625,
          "content": "{\n\t\"folders\": [\n\t\t{\n\t\t\t\"name\": \"Node Slack SDK (root)\",\n\t\t\t\"path\": \".\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"Web API\",\n\t\t\t\"path\": \"packages/web-api\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"OAuth\",\n\t\t\t\"path\": \"packages/oauth\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"Events API\",\n\t\t\t\"path\": \"packages/events-api\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"Interactive Messages\",\n\t\t\t\"path\": \"packages/interactive-messages\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"RTM API\",\n\t\t\t\"path\": \"packages/rtm-api\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"Incoming Webhook\",\n\t\t\t\"path\": \"packages/webhook\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"Types\",\n\t\t\t\"path\": \"packages/types\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"Logger\",\n\t\t\t\"path\": \"packages/logger\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"Client (legacy)\",\n\t\t\t\"path\": \"packages/client\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"Integration Tests\",\n\t\t\t\"path\": \"support/integration-tests\"\n\t\t},\n\t\t{\n\t\t\t\"name\": \"Reference Documentation\",\n\t\t\t\"path\": \"support/ref-docs\"\n\t\t}\n\t],\n\t\"settings\": {\n\t\t\"editor.rulers\": [\n\t\t\t120\n\t\t],\n\t\t\"editor.tabSize\": 2,\n\t\t\"typescript.tsdk\": \"RTM API/node_modules/typescript/lib\",\n\t\t\"cSpell.words\": [\n\t\t\t\"Overridable\",\n\t\t\t\"workspaces\"\n\t\t],\n\t}\n}\n"
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "prod-server-integration-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}