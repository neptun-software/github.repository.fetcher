{
  "metadata": {
    "timestamp": 1736563828275,
    "page": 343,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjM1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "antvis/L7",
      "stars": 3711,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".changeset",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2392578125,
          "content": "# http://editorconfig.org\nroot = true\n\n[*]\nindent_style = space\nindent_size = 2\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n[*.md]\ntrim_trailing_whitespace = false\n\n[Makefile]\nindent_style = tab\n"
        },
        {
          "name": ".fatherrc.base.ts",
          "type": "blob",
          "size": 0.6689453125,
          "content": "import { defineConfig } from 'father';\n\nconst isProduction = process.env.NODE_ENV === 'production';\n\nexport default defineConfig({\n  esm: {\n    output: 'es',\n    transformer: 'esbuild',\n    platform: 'browser',\n  },\n  cjs: isProduction\n    ? {\n        output: 'lib',\n        transformer: 'esbuild',\n        platform: 'node',\n      }\n    : undefined,\n  extraBabelPlugins: [\n    [\n      // import glsl as raw text\n      'babel-plugin-inline-import',\n      { extensions: ['.glsl'] },\n    ],\n    // import css as inline\n    'transform-import-css-l7',\n  ],\n  targets: { chrome: 51, node: 18 },\n  // more config see father docs https://github.com/umijs/father/blob/master/docs/config.md\n});\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.0791015625,
          "content": "\n# Created by https://www.gitignore.io/api/node\n\n### Node ###\n# Logs\nlogs\n*.log\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\nyarn.lock\npackage-lock.json\npnpm-lock.yaml\n\n# Runtime data\npids\n*.pid\n*.seed\n*.pid.lock\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage\n\n# nyc test coverage\n.nyc_output\n\n# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# Bower dependency directory (https://bower.io/)\nbower_components\n\n# node-waf configuration\n.lock-wscript\n\n# Compiled binary addons (http://nodejs.org/api/addons.html)\nbuild/Release\n\n# Dependency directories\nnode_modules/\n\n#history\n.history/\n\njspm_packages/\n\n# Typescript v1 declaration files\n# typings/\n\n# Optional npm cache directory\n.npm\n\n# Optional eslint cache\n.eslintcache\n\n# Optional REPL history\n.node_repl_history\n\n# Output of 'npm pack'\n*.tgz\n\n# Yarn Integrity file\n.yarn-integrity\n\n# dotenv environment variables file\n.env\n\n\n# End of https://www.gitignore.io/api/node\n\n.DS_Store\n.cache\n.idea\n\n*-actual.png\n*-diff.png\n"
        },
        {
          "name": ".husky",
          "type": "tree",
          "content": null
        },
        {
          "name": ".npmrc",
          "type": "blob",
          "size": 0,
          "content": ""
        },
        {
          "name": ".prettierignore",
          "type": "blob",
          "size": 0.408203125,
          "content": "*.svg\n.DS_Store\n.gitignore\n.prettierignore\n.editorconfig\n.eslintignore\nnode_modules\nyarn.lock\nyarn-error.log\nnpm-debug.log\nlerna-debug.log\nCNAME\nLICENSE\n.cache\n.history\n\n# package output dist\npackages/*/es/**\npackages/*/lib/**\npackages/*/dist/**\n\n# legacy\nlegacy/\n\n# website for root cli prettier\nsite/dist/\nsite/.dumi/tmp/\nsite/.dumi/tmp-production/\nsite/public/\nsite/public_site/\n\n# examples for data\nexamples/data/\n"
        },
        {
          "name": ".prettierrc",
          "type": "blob",
          "size": 0.2548828125,
          "content": "{\n  \"printWidth\": 100,\n  \"singleQuote\": true,\n  \"trailingComma\": \"all\",\n  \"arrowParens\": \"always\",\n  \"overrides\": [\n    { \"files\": \".prettierrc\", \"options\": { \"parser\": \"json\" } }\n  ],\n  \"plugins\": [\"prettier-plugin-organize-imports\", \"prettier-plugin-glsl\"]\n}\n"
        },
        {
          "name": ".stylelintignore",
          "type": "blob",
          "size": 0.0615234375,
          "content": "site/.dumi/pages\nsite/.dumi/theme\nsite/public\nsite/public_site\n"
        },
        {
          "name": ".stylelintrc.js",
          "type": "blob",
          "size": 0.791015625,
          "content": "/** @type {import('stylelint').Config} */\nexport default {\n  extends: ['stylelint-config-standard'],\n  plugins: ['stylelint-declaration-block-no-ignored-properties'],\n  rules: {\n    'no-descending-specificity': null,\n    'function-url-quotes': 'always',\n    'selector-attribute-quotes': 'always',\n    'selector-class-pattern': null,\n    'font-family-no-missing-generic-family-keyword': null, // iconfont\n    'plugin/declaration-block-no-ignored-properties': true,\n    'unit-no-unknown': [true, { ignoreUnits: ['rpx'] }],\n    'selector-type-no-unknown': null,\n    'value-keyword-case': ['lower', { ignoreProperties: ['composes'] }],\n  },\n  overrides: [\n    {\n      files: ['*.less', '**/*.less'],\n      customSyntax: 'postcss-less',\n    },\n  ],\n  ignoreFiles: ['**/*.js', '**/*.jsx', '**/*.tsx', '**/*.ts'],\n};\n"
        },
        {
          "name": ".vscode",
          "type": "tree",
          "content": null
        },
        {
          "name": "CODE_GUIDELINES.md",
          "type": "blob",
          "size": 3.7470703125,
          "content": "## 代码风格\n\n### 导入类型\n\n`import` 类型前置加 type 关键字\n\n```typescript\n// src/a.ts\nimport type { Attribute } from './b';\n```\n\n不推荐这样：\n\n```typescript\n// src/a.ts\nimport { Attribute } from './b';\n```\n\n库入口文件，类型导出需加 type 关键字\n\n```typescript\n// src/index.ts\nimport type { Attribute } from './a';\n\ntype MapView = {};\n\nexport type { Attribute };\n```\n\n### 声明类型\n\n优先使用 type 声明类型\n\n```typescript\ntype Attribute = {\n  color: string;\n  size: number;\n};\n```\n\n不推荐这样：\n\n```typescript\ninterface IAttribute {\n  color: string;\n  size: number;\n}\n```\n\ninterface 适用于系统共用接口定义\n\n```typescript\ninterface IBaseMap {\n  color: string;\n  size: number;\n}\n\nclass AMap imimplements IBaseMap {}\n\nclass BMap imimplements IBaseMap {}\n```\n\n### 文件命名\n\n两个词以上的命名采用`小驼峰加中划线`格式命名，比如：`extrude-polyline.ts`，项目里所有文件命名采用统一格式。\n\n不推荐：\n\n- extrude_polyline.ts\n- extrudePolyline.ts\n\n### 变量处理\n\n从参数中声明的变量，变量声明时就处理特殊情况\n\n```typescript\nconst { attributes = [] } = options;\n\n// or\nconst attributes = options.attributes ?? [];\n```\n\n不推荐：\n\n```typescript\nconst { attributes } = options;\n// or\nconst attributes = getAttributes();\n\ncaculateScales(attributes || []);\n```\n\n### 常量命名\n\n常量都采用大写并词以`_`分隔开\n\n```typescript\nconst DEFAULT_UNIFORM_STYLE = {\n  opacity: 1,\n  stroke: [1, 0, 0, 1],\n  offsets: [0, 0],\n  rotation: 0,\n  extrusionBase: 0,\n  strokeOpacity: 1,\n  thetaOffset: 0.314,\n};\n```\n\n不推荐：\n\n```typescript\nconst DefaultUniformStyle = {\n  opacity: 1,\n  stroke: [1, 0, 0, 1],\n  offsets: [0, 0],\n  rotation: 0,\n  extrusionBase: 0,\n  strokeOpacity: 1,\n  thetaOffset: 0.314,\n};\n\nconst scaleMap = {};\n```\n\n### 类的属性与方法\n\n对用户暴露的属性与方法尽量收敛，代码里对用户不暴露的属性与方法，加上 `private` 关键字\n\n```typescript\nclass ALayer {\n  private contetx: Object;\n\n  private setOptionsAttr() {}\n}\n```\n\n对用户使用的实验性的属性或方法，可加上`_` 前缀，表示不稳定的属性或方法，下一个版本可能或变动\n\n```typescript\nclass ALayer {\n  public _debug: bool;\n}\n```\n\n### 代码空格\n\nimport 和代码间自动增加空格；注释和文字间自动增加空格\n\n```typescript\nimport _ from 'lodash';\nimport get from 'lodash/get';\n\nconst Map = () => {};\n// 我是注释\n```\n\n不推荐：\n\n```typescript\nimport _ from 'lodash';\nimport get from 'lodash/get';\nconst Map = () => {};\n//我是注释\n```\n\n成员变量/函数自动增加空格\n\n```typescript\nclass A {\n  private a = 1;\n\n  public b() {}\n\n  public c() {}\n}\n```\n\n不推荐这样\n\n```typescript\nclass A {\n  private a = 1;\n  public b() {}\n  public c() {}\n}\n```\n\n## 注释\n\n### 多行注释注释使用标准 JSDoc 注释\n\n给方法添加注释使用多行注释 `/** */`\n\n```typescript\n/**\n * 我是干什么的\n * 我还能干什么\n */\nfunction getMapCenter() {}\n```\n\n给属性添加多行注释\n\n```typescript\nclass ALayer {\n  /**\n   * 我是干什么的\n   * 我还能干什么\n   */\n  public contetx: Object;\n}\n```\n\n对多行注释统一使用标准 [JSDoc](https://github.com/jsdoc/jsdoc) 注释, 这样还有一个好处, 结合编辑器有更好的代码提示。\n\n不推荐这样：\n\n```typescript\n// 我是干什么的\n// 我还能干什么\nfunction getMapCenter() {}\n\nclass ALayer {\n  // 我是干什么的\n  // xxx\n  public contetx: Object;\n}\n```\n\n### 使用标签标记不建议使用的方法\n\n已不建议使用的方法\n\n```typescript\n/**\n * @deprecated\n * 描述替代 API 方案\n */\nfunction getMapCenter() {}\n```\n\n不推荐这样：\n\n```typescript\n/**\n * 不建议使用，请使用 getView().center\n */\nfunction getMapCenter() {}\n```\n"
        },
        {
          "name": "CONTRIBUTING.en-US.md",
          "type": "blob",
          "size": 6.408203125,
          "content": "<img src=\"https://gw.alipayobjects.com/zos/antfincdn/R8sN%24GNdh6/language.svg\" width=\"18\"> [简体中文](./CONTRIBUTING.md)｜English\n\n🎉 Welcome to contribute code to L7! 🎉\n\n# Contribution Guide\n\n## 1.Source Code\n\n```bash\ngit clone https://github.com/antvis/L7  --depth=1\n```\n\n## 2.Pre-installation\n\n### 2.1.Install pnpm\n\nSince pnpm workspace is used, [pnpm](https://pnpm.io/installation) needs to be installed first\n\n### 2.2.Install dependencies\n\n```bash\npnpm install\n```\n\n## 3.Run Project\n\n```bash\n# Run DEMO\npnpm dev\n```\n\n**Other commands**：\n\n- `pnpm site:dev` Run local website\n- `pnpm test:unit` Run unit tests\n- `pnpm test-cover` Run unit tests and view code coverage:\n- `pnpm test:integration` Run integration tests\n- `pnpm build` build source code pakages, output to umd, es and lib directory\n\n## 4.Style Guide\n\n[CODE GUIDELINES](./CODE_GUIDELINES.md)\n\n## 5.Submitting Code\n\n### 5.1.Commit Message Format\n\nYou are encouraged to use [angular commit-message-format](https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format) to write commit message. In this way, we could have a more trackable history and an automatically generated changelog.\n\nCommit type must be one of the following:\n\n- feat: A new feature\n- fix: A bug fix\n- docs: Documentation-only changes\n- style: Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc)\n- refactor: A code change that neither fixes a bug nor adds a feature\n- perf: A code change that improves performance\n- test: Adding missing tests\n- chore: Changes to the build process or auxiliary tools and libraries such as documentation generation\n\nUse succinct words to describe what did you do in the commit change. Look at [these files](https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y/edit) for more details.\n\n### 5.2.Submit code changeset\n\nwe use [changesets](https://github.com/changesets/changesets) for fully automated semantic releases. It can automatically create GitHub Releases and automatically associate the release to the corresponding issue. When we complete development, execute changeset and submit the changeset.\n\n```bash\npnpm run changeset\ngit add .\ngit commit -m \"chore: commit changeset\"\n```\n\n### 5.3.Pull Request Guide\n\nIf you are developer of AntV repo and you are willing to contribute, feel free to create a new branch, finish your modification and submit a PR. AntV group will review your work and merge it to master branch.\n\n```bash\n# Create a new branch for development. The name of branch should be semantic, avoiding words like 'update' or 'tmp'. We suggest to use feature/xxx, if the modification is about to implement a new feature.\n$ git checkout -b branch-name\n\n# Push your work back to us. Notice that the commit message should be written in the following format.\n$ git add . # git add -u to delete files\n$ git commit -m \"fix: role.use must xxx\"\n$ git push origin branch-name\n```\n\nThen you can create a Pull Request at [L7](https://github.com/antvis/l7/pulls).\n\nNo one can guarantee how much will be remembered about certain PR after some time. To make sure we can easily recap what happened previously, please provide the following information in your PR.\n\n1. Need: What function you want to achieve (Generally, please point out which issue is related).\n2. Updating Reason: Different with issue. Briefly describe your reason and logic about why you need to make such modification.\n3. Related Testing: Briefly describe what part of testing is relevant to your modification.\n4. User Tips: Notice for scale users. You can skip this part, if the PR is not about update in API or potential compatibility problem.\n\n## 6.Release\n\n![Release](https://github.com/antvis/L7/assets/26923747/edf6b817-c699-4fbf-8168-0da1cb429031)\n\n### 6.1.Online automatic version release\n\n1. Go to [GitHub Action](https://github.com/antvis/L7/actions/workflows/create-bumb-version-pr.yml) to trigger Create bump version PR Action execution, select the release branch, and trigger Action execution\n\n2. Wait for the Action to be executed. When the execution is completed, a PR of the changed version will be raised.\n\n3. Confirm the PR version changes. If there is no problem, approve the PR and wait for the release version Action to be executed. During this period, it will be published to NPM, tagged to GitHub, and GitHub Release will be created.\n\n4. If step 3 is successful, DingTalk will be notified, the robot will automatically merge the PR, and the new official website will be automatically deployed in the background.\n\n5. If step 3 fails, a DingTalk message will be notified. Go to GtiHub Action to check the reason for the failure.\n\n### 6.2.Manual version release\n\n1. Create a local `release` branch\n2. If there is no change set to be published, execute the `pnpm run changeset` script to create a change set for this version release, and execute the coomit change set\n3. Execute the `pnpm run version-packages` script, update the version number and Changelog of the package to be released, confirm the content and coomit\n4. Execute the `pnpm run publish-packages` script, which will publish the package to NPM and tag it to GitHub\n5. Merge the changes in the `release` branch to the release branch by submitting a PR\n6. Go to [GitHub Releases](https://github.com/antvis/L7/releases) to create a Release for this release. After the creation is completed, the new official website will be automatically deployed.\n\n### 6.3.Pre-release beta/alpha/next release process\n\nTaking the pre-release beta as an example, a new function is added to release the beta version:\n\n1. Create a local `beta` branch\n2. Execute `pnpm exec changeset pre enter beta` [command](https://github.com/changesets/changesets/blob/main/docs/command-line-options.md#pre)🔗 to enter `beta` pre hair mode\n3. Complete function development, add change sets, and push to the remote `beta` branch\n4. Version release is consistent with the online automatic version release process. You can also choose to release the version manually.\n\nAfter the beta version release verification is completed, it is merged into the main branch release process:\n\n1. Execute `pnpm exec changeset pre exit` [Command](https://github.com/changesets/changesets/blob/main/docs/command-line-options.md#pre)🔗 to exit pre-release mode\n2. Merge the changes in the `beta` branch to the main branch by submitting a PR\n3. Version release is consistent with the online automatic version release process. You can also choose to release the version manually.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 5.2255859375,
          "content": "<img src=\"https://gw.alipayobjects.com/zos/antfincdn/R8sN%24GNdh6/language.svg\" width=\"18\"> 简体中文 | [English](./CONTRIBUTING.en-US.md)\n\n🎉 欢迎向 L7 贡献代码! 🎉\n\n# 代码贡献规范\n\n## 1.下载源码\n\n```bash\ngit clone https://github.com/antvis/L7  --depth=1\n```\n\n## 2.前置依赖安装\n\n### 2.1.安装 pnpm\n\n由于使用了 pnpm workspace，首先需要安装 [pnpm](https://pnpm.io/installation)\n\n### 2.2.安装项目依赖\n\n```bash\npnpm install\n```\n\n## 3.运行项目\n\n```bash\n# 运行 DEMO\npnpm dev\n```\n\n**其它命令**：\n\n- `pnpm site:dev` 启动本地官网\n- `pnpm test:unit` 运行单元测试\n- `pnpm test-cover` 运行单元测试并查看代码覆盖率\n- `pnpm test:integration` 运行集成测试\n- `pnpm build` 构建源码包, 分别输出 umd, es 和 lib 目录\n\n## 4.代码风格\n\n[CODE GUIDELINES](./CODE_GUIDELINES.md)\n\n## 5.提交代码\n\n### 5.1.Commit 提交规范\n\n根据 [angular 规范](https://github.com/angular/angular.js/blob/master/CONTRIBUTING.md#commit-message-format) 提交 commit，这样 history 看起来更加清晰。\n\n提交 commit 的类型，包括以下几种\n\n- feat: 新功能\n- fix: 修复问题\n- docs: 修改文档\n- style: 修改代码格式，不影响代码逻辑\n- refactor: 重构代码，理论上不影响现有功能\n- perf: 提升性能\n- test: 增加修改测试用例\n- chore: 修改工具相关（包括但不限于文档、代码生成等）\n- deps: 升级依赖\n\n尽量用一句话清楚的描述这次提交做了什么，查看具体参考[文档](https://docs.google.com/document/d/1QrDFcIiPjSLDn3EL15IJygNPiHORgU1_OOAqWjiDU5Y/edit)。\n\n### 5.2.提交代码变更集\n\n我们使用了 [changesets](https://github.com/changesets/changesets) 进行全自动的语义化发布，当我们开发完成后执行 changeset 并提交变更集。\n\n```bash\npnpm run changeset\ngit add .\ngit commit -m \"chore: commit changeset\"\n```\n\n### 5.3.提交 Pull Request\n\n如果你有仓库的开发者权限，而且希望贡献代码，那么你可以创建分支修改代码提交 PR，AntV 开发团队会 review 代码合并到主干。\n\n```bash\n# 先创建开发分支开发，分支名应该有含义，避免使用 update、tmp 之类的\n$ git checkout -b branch-name\n\n# 提交代码，message 见下面的规范\n\n$ git add . # git add -u 删除文件\n$ git commit -m \"fix: role.use must xxx\"\n$ git push origin branch-name\n```\n\n提交后就可以在 [L7](https://github.com/antvis/l7/pulls) 创建 Pull Request 了。\n\n由于谁也无法保证过了多久之后还记得多少，为了后期回溯历史的方便，请在提交 MR 时确保提供了以下信息。\n\n1. 需求点（一般关联 issue 或者注释都算）\n2. 升级原因（不同于 issue，可以简要描述下为什么要处理）\n3. 框架测试点（可以关联到测试文件，不用详细描述，关键点即可）\n4. 关注点（针对用户而言，可以没有，一般是不兼容更新等，需要额外提示）\n\n## 6.版本发布\n\n![Release](https://github.com/antvis/L7/assets/26923747/edf6b817-c699-4fbf-8168-0da1cb429031)\n\n### 6.1.线上自动版本发布\n\n> 详细流程 [版本发布指南](https://www.yuque.com/antv/l7/qqburqndl8g584kw?singleDoc)\n\n1. 去 [GitHub Action](https://github.com/antvis/L7/actions/workflows/create-bumb-version-pr.yml) 触发 Create bump version PR Action 执行，选择发布分支，触发 Action 执行\n\n2. 等待 Action 执行完成，执行完成会提一个变更版本的 PR\n\n3. 去确认 PR 版本变更内容，如果没有问题 approve PR，等待发布版本 Action 执行，期间会发布到 NPM、打 tag 到 Github、创建 GitHub Release\n\n4. 第 3 步成功，会进行钉钉消息通知，机器人自动合并 PR，后台自动部署新官网\n\n5. 第 3 步失败，会进行钉钉消息通知，去 GtiHub Action 查看失败原因\n\n### 6.2.手动版本发布\n\n1. 创建本地 `release` 分支\n2. 若没有要发布的变更集，执行 `pnpm run changeset` 脚本，创建本次版本发布变更集，执行完成 coomit 变更集\n3. 执行 `pnpm run version-packages` 脚本，更新要发布包的版本号和 Changelog，确认内容并 coomit\n4. 执行 `pnpm run publish-packages` 脚本，会发布包到 NPM、打 tag 到 GitHub\n5. 将 `release` 分支变更内容，以提交 PR 方式合并到发布分支\n6. 去 [GitHub Releases](https://github.com/antvis/L7/releases) 创建本次发布的 Release，创建完成后会自动部署新官网\n\n### 6.3.预发版 beta/alpha/next 发布流程\n\n以预发 beta 为例，新增加一个功能，发布 beta 版本：\n\n1. 创建本地 `beta` 分支\n2. 执行 `pnpm exec changeset pre enter beta` [命令](https://github.com/changesets/changesets/blob/main/docs/command-line-options.md#pre)🔗，进入 `beta` 预发模式\n3. 完成功能研发、添加变更集、push 到远端 `beta` 分支\n4. 版本发布，与线上自动版本发布流程一致，也可以选择手动发布版本\n\nbeta 版本发布验证完成后，合并到主分支发布流程：\n\n1. 执行 `pnpm exec changeset pre exit` [命令](https://github.com/changesets/changesets/blob/main/docs/command-line-options.md#pre)🔗，退出预发模式\n2. 将 `beta` 分支变更内容，以提交 PR 方式合并到主分支\n3. 版本发布，与线上自动版本发布流程一致，也可以选择手动发布版本\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 1.041015625,
          "content": "MIT License\n\nCopyright (c) 2018 AntV team\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.en-US.md",
          "type": "blob",
          "size": 3.189453125,
          "content": "<img src=\"https://gw.alipayobjects.com/zos/antfincdn/R8sN%24GNdh6/language.svg\" width=\"18\"> English | [简体中文](./README.md)\n\n<h1 align=\"center\">L7</h1>\n\n<div align=\"center\">\n\n🌍 Large-scale WebGL-powered Geospatial data visualization analysis framework.\n\n[![CI](https://github.com/antvis/L7/actions/workflows/ci.yml/badge.svg?branch=master)](https://github.com/antvis/L7/actions/workflows/ci.yml) [![NPM](https://flat.badgen.net/npm/v/@antv/l7?icon=npm)](https://www.npmjs.com/package/@antv/l7) ![last commit](https://badgen.net/github/last-commit/antvis/L7)\n\n<p align=\"center\">\n  <a href=\"https://l7.antv.antgroup.com/tutorial/quickstart\">Tutorials</a> •\n  <a href=\"https://l7.antv.antgroup.com/api/scene\">API documentation</a> •\n  <a href=\"https://l7.antv.antgroup.com/examples\">Examples</a> •\n  <a href=\"./CONTRIBUTING.en-US.md\">Contributor</a>\n</p>\n\n![L7 demo](https://gw.alipayobjects.com/mdn/rms_855bab/afts/img/A*S-73QpO8d0YAAAAAAAAAAABkARQnAQ)\n\n</div>\n\nPowered by WebGL, the rendering technology of L7 supports fast and efficient rendering of big data, 2D/3D rendering, possible through calculation and analysis of spatial data by GPU Parallel Compu-ting.\n\nL7 focuses on geographic data expressiveness，interaction and design of geographic visualization layers. The basemaps on the platform are powered by third-party services\n\n## 🌟 Highlight features of L7 2.0\n\n- 🌏 Data-driven Visualization\n\n  Layer visualization API design base Semiology of Graphics.\n\n  It supports rich map visualization types for a better insight on data.\n\n- 🌏 High performance rendering with 2D/3D effect\n  Real-time and dynamic rendering with millions of spatial data.\n\n- 🌏 Simple and flexible data format\n\n  L7 supports a wide variety of data formats including CSV, JSON, geojson, among others, eliminating the need to run conversions ahead of time.\n\n- 🌏 Multi-basemap\n\n  For global users, Mapbox is easy to be embedded by a simple line of code.\n\n## Getting Started\n\n### 📦 Installation\n\n```bash\nnpm install @antv/l7\n```\n\n### Init Map by L7 scene\n\n```javascript\nimport { Scene } from '@antv/l7';\nimport { Mapbox } from '@antv/l7-maps';\n\nconst scene = new Scene({\n  id: 'map',\n  map: new Mapbox({\n    style: 'light',\n    pitch: 0,\n    center: [107.054293, 35.246265],\n    zoom: 4.056,\n  }),\n});\n```\n\n### Add Layer\n\n```javascript\nimport { PointLayer } from '@antv/l7';\n\nconst pointLayer = new PointLayer()\n  .source(data)\n  .shape('circle')\n  .size('mag', [1, 25])\n  .color('mag', ['#5B8FF9', '#5CCEA1'])\n  .style({\n    opacity: 0.3,\n    strokeWidth: 1,\n  });\n\nscene.addLayer(pointLayer);\n```\n\n## 🔗 Ecosystem\n\n- [L7Draw](https://github.com/antvis/L7Draw)\n- [L7Plot](https://github.com/antvis/L7Plot)\n- [LarkMap](https://github.com/antvis/LarkMap)\n- [L7VP](https://locationinsight.antv.antgroup.com)\n- [L7Editor](https://l7editor.antv.antgroup.com)\n\n## 🤝 Contributing\n\nTo become a contributor, please follow our [contributing guide](./CONTRIBUTING.en-US.md). If you are an active contributor, you can apply to be a outside collaborator.\n\n![https://github.com/antvis/l7/graphs/contributors](https://contrib.rocks/image?repo=antvis/l7)\n\n## 📄 License\n\nThe scripts and documentation in this project are released under the [MIT license](./LICENSE).\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.7158203125,
          "content": "<img src=\"https://gw.alipayobjects.com/zos/antfincdn/R8sN%24GNdh6/language.svg\" width=\"18\"> [English](./README.en-US.md) | 简体中文\n\n<h1 align=\"center\">L7</h1>\n\n<div align=\"center\">\n\n🌍 地理空间数据可视分析引擎\n\n[![CI](https://github.com/antvis/L7/actions/workflows/ci.yml/badge.svg?branch=master)](https://github.com/antvis/L7/actions/workflows/ci.yml) [![NPM](https://flat.badgen.net/npm/v/@antv/l7?icon=npm)](https://www.npmjs.com/package/@antv/l7) ![last commit](https://badgen.net/github/last-commit/antvis/L7)\n\n<p align=\"center\">\n  <a href=\"https://l7.antv.antgroup.com/tutorial/quickstart\">教程</a> •\n  <a href=\"https://l7.antv.antgroup.com/api/scene\">文档</a> •\n  <a href=\"https://l7.antv.antgroup.com/examples\">示例</a> •\n  <a href=\"./CONTRIBUTING.md\">贡献</a>\n</p>\n\n![L7 demo](https://gw.alipayobjects.com/mdn/rms_855bab/afts/img/A*S-73QpO8d0YAAAAAAAAAAABkARQnAQ)\n\n</div>\n\nL7 是由蚂蚁集团 AntV 数据可视化团队推出的基于 WebGL 的开源大规模地理空间数据可视分析引擎。L7 中的 L 代表 Location，7 代表世界七大洲，寓意能为全球位置数据提供可视分析的能力。L7 专注数据可视化化表达，通过颜色、大小、纹理，方向，体积等视觉变量设置实现从数据到信息清晰，有效的表达。\n\nL7 能够满足常见的地图图表，BI 系统的可视化分析、以及 GIS，交通，电力，国土，农业，城市等领域的空间信息管理，分析等应用系统开发需求。\n\n## 🌟 核心特性\n\n🌏 数据驱动可视化展示\n\n数据驱动，灵活数据映射，从数到形，支持丰富的地图可视化类型，更好洞察数据。\n\n🌏 2D，3D 一体化的海量数据高性能渲染\n\n海量空间数据实时，可交互，动态渲染，\n\n🌏 简单灵活的数据接入\n\n支持 CSV，JSON，GeoJSON 等数据格式接入，可以根据需求自定义数据格式，无需复杂的空间数据转换。\n\n🌏 多地图底图支持，支持离线内网部署\n\n屏蔽不同底图之间的差异，用户只需要关注数据层表达，交互。高德地图国内合法合规的地理底图，Mapbox 满足国际化业务需求。\n\n## 🌈 支持丰富的图表类型\n\n#### 点图层\n\n- 气泡图\n- 散点图\n- 符号地图\n- 3D 柱状地图\n- 聚合地图\n- 复合图表地图\n- 自定义 Marker\n\n#### 线图层\n\n- 路径地图\n- 弧线，支持 2D 弧线、3D 弧线以及大圆航线\n- 等值线\n\n#### 面图层\n\n- 填充图\n- 3D 填充图\n\n#### 热力图\n\n- 经典热力图\n- 蜂窝热力图\n- 网格热力图\n\n#### 栅格地图\n\n- 图片\n- Raster\n\n## 📦 如何使用\n\n### 安装\n\n```bash\nnpm install @antv/l7\n```\n\n### 初始化地图\n\n```javascript\nimport { Scene } from '@antv/l7';\nimport { Mapbox } from '@antv/l7-maps';\n\nconst scene = new Scene({\n  id: 'map',\n  map: new Mapbox({\n    style: 'light',\n    pitch: 0,\n    center: [107.054293, 35.246265],\n    zoom: 4.056,\n  }),\n});\n```\n\n### 添加图层\n\n```javascript\nimport { PointLayer } from '@antv/l7';\n\nconst pointLayer = new PointLayer()\n  .source(data)\n  .shape('circle')\n  .size('mag', [1, 25])\n  .color('mag', ['#5B8FF9', '#5CCEA1'])\n  .style({\n    opacity: 0.3,\n    strokeWidth: 1,\n  });\n\nscene.addLayer(pointLayer);\n```\n\n## 🔗 周边生态\n\n- [L7Draw](https://github.com/antvis/L7Draw)\n- [L7Plot](https://github.com/antvis/L7Plot)\n- [LarkMap](https://github.com/antvis/LarkMap)\n- [L7VP](https://locationinsight.antv.antgroup.com)\n- [L7Editor](https://l7editor.antv.antgroup.com)\n\n## 🤝 参与贡献\n\n如果希望参与到开发中，请遵从我们的[贡献指南](./CONTRIBUTING.md)。\n\n![https://github.com/antvis/l7/graphs/contributors](https://contrib.rocks/image?repo=antvis/l7)\n\n## 📄 开源协议\n\n该项目的代码和文档基于 [MIT license](./LICENSE) 开源协议。\n"
        },
        {
          "name": "__tests__",
          "type": "tree",
          "content": null
        },
        {
          "name": "commitlint.config.ts",
          "type": "blob",
          "size": 0.400390625,
          "content": "export default {\n  extends: ['@commitlint/config-conventional'],\n  rules: {\n    'type-enum': [\n      2,\n      'always',\n      [\n        'build',\n        'chore',\n        'ci',\n        'docs',\n        'feat',\n        'fix',\n        'perf',\n        'refactor',\n        'revert',\n        'style',\n        'test',\n        'deps',\n        'wip',\n      ],\n    ],\n    'header-max-length': [2, 'always', 100],\n  },\n};\n"
        },
        {
          "name": "eslint.config.js",
          "type": "blob",
          "size": 3.8349609375,
          "content": "// @ts-check\n\nimport eslint from '@eslint/js';\nimport prettierConfig from 'eslint-config-prettier';\nimport jestPlugin from 'eslint-plugin-jest';\nimport jsxA11yPlugin from 'eslint-plugin-jsx-a11y';\nimport reactPlugin from 'eslint-plugin-react';\nimport reactHooksPlugin from 'eslint-plugin-react-hooks';\nimport globals from 'globals';\nimport tseslint from 'typescript-eslint';\n\nimport { dirname } from 'node:path';\nimport { fileURLToPath } from 'node:url';\n\nconst __dirname = dirname(fileURLToPath(import.meta.url));\n\nexport default tseslint.config(\n  // config ignores files, equal `.eslintignore`\n  {\n    ignores: [\n      '**/node_modules/**',\n      '**/dist/**',\n      '**/fixtures/**',\n      '**/coverage/**',\n      '**/__snapshots__/**',\n      '**/coverage/**',\n      '**/temp/**',\n      '**/.cache/**',\n      '**/.history/**',\n      '**/.idea/**',\n\n      // Files pakasges of the build\n      'packages/*/es/*',\n      'packages/*/lib/*',\n      'packages/*/dist/*',\n\n      // Website static files\n      'site/public/*',\n      'site/public_site/*',\n    ],\n  },\n\n  // extends configs\n  eslint.configs.recommended,\n\n  // basic config\n  {\n    languageOptions: {\n      ecmaVersion: 'latest',\n      sourceType: 'module',\n      globals: {\n        ...globals.es2021,\n        ...globals.browser,\n        ...globals.node,\n      },\n    },\n    rules: {\n      'no-unused-vars': 'warn',\n      'no-unsafe-optional-chaining': 'warn',\n      'no-constant-condition': 'off',\n      'no-prototype-builtins': 'off',\n      'no-case-declarations': 'off',\n      'no-useless-catch': 'off',\n      'prefer-rest-params': 'off',\n    },\n  },\n\n  // ts files linting\n  {\n    files: ['**/*.{ts,tsx}'],\n    extends: [...tseslint.configs.recommended],\n    languageOptions: {\n      parserOptions: {\n        // OOM when many project configs passed to the parser with multi-package monorepos, see https://github.com/typescript-eslint/typescript-eslint/issues/1192\n        // project: [\n        //   './tsconfig.eslint.json',\n        //   './packages/*/tsconfig.json',\n        //   './site/tsconfig.json',\n        // ],\n        project: './tsconfig.eslint.json',\n        tsconfigRootDir: __dirname,\n      },\n    },\n    rules: {\n      '@typescript-eslint/consistent-type-imports': ['error', { prefer: 'type-imports' }],\n      '@typescript-eslint/no-loss-of-precision': 0,\n      '@typescript-eslint/no-inferrable-types': 0,\n      '@typescript-eslint/ban-types': 0,\n      '@typescript-eslint/ban-ts-comment': 0,\n      '@typescript-eslint/no-empty-function': 0,\n      '@typescript-eslint/explicit-module-boundary-types': 0,\n      '@typescript-eslint/no-explicit-any': 0,\n      '@typescript-eslint/no-duplicate-enum-values': 0,\n    },\n  },\n\n  // react tsx files linting\n  {\n    files: ['**/*.{tsx}'],\n    ...reactPlugin.configs.recommended,\n    plugins: {\n      'react-hooks': reactHooksPlugin,\n      'jsx-a11y': jsxA11yPlugin,\n    },\n    rules: {},\n  },\n\n  //\n  // test jest file linting\n  //\n  {\n    files: ['test/**/*.spec.ts', 'packages/*/__tests__/**/*.spec.ts'],\n    ...jestPlugin.configs['flat/recommended'],\n    rules: {},\n  },\n\n  // after all eslint plugins configs to override, see https://github.com/prettier/eslint-config-prettier\n  // @ts-ignore\n  prettierConfig,\n\n  //\n  // test workspace linting\n  //\n  {\n    files: ['test/**/*.{ts}', 'packages/*/__tests__/**/*.ts'],\n    rules: {\n      '@typescript-eslint/no-unused-vars': 'warn',\n    },\n  },\n\n  //\n  // examples workspace linting\n  //\n  {\n    files: ['examples/**/*.{ts,tsx}'],\n    rules: {\n      '@typescript-eslint/no-unused-vars': 'warn',\n      '@typescript-eslint/consistent-type-imports': 'warn',\n      'prefer-const': 'warn',\n    },\n  },\n\n  //\n  // website workspace linting\n  //\n  {\n    files: ['site/**/*.{ts,tsx}'],\n    rules: {\n      '@typescript-eslint/no-unused-vars': 'warn',\n    },\n  },\n  {\n    files: ['site/**/*.js'],\n    languageOptions: {\n      globals: { AMap: true },\n    },\n  },\n);\n"
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "jest.config.ts",
          "type": "blob",
          "size": 1.3857421875,
          "content": "import type { Config } from 'jest';\n\nconst sharedConfig: Partial<Config> = {\n  transform: {\n    // use typescript to convert from esm to cjs\n    '[.](m|c)?(ts|js)(x)?$': [\n      'ts-jest',\n      {\n        tsconfig: 'tsconfig.json',\n        isolatedModules: true,\n      },\n    ],\n    '^.+.(glsl)$': 'jest-text-transformer',\n    // '\\\\.[jt]sx?$': 'esbuild-jest',\n  },\n\n  // any tests that operate on dist files shouldn't compile them again.\n  transformIgnorePatterns: ['<rootDir>/dist', '^.+\\\\.js$'],\n  modulePathIgnorePatterns: ['<rootDir>/dist'],\n\n  moduleNameMapper: {\n    '@antv/l7-(.+)$': '<rootDir>packages/$1/src',\n    '^.+.(css)$': 'jest-text-transformer',\n  },\n};\n\nconst config: Config = {\n  testEnvironment: 'jsdom',\n  setupFiles: ['jest-canvas-mock'],\n  setupFilesAfterEnv: ['<rootDir>__tests__/unit/preset/environment.ts'],\n  testMatch: [\n    '<rootDir>/packages/*/__tests__/*.spec.+(ts|tsx|js)',\n    '<rootDir>/packages/*/__tests__/**/*/*.spec.+(ts|tsx|js)',\n    '<rootDir>/__tests__/unit/*.spec.+(ts|tsx|js)',\n    '<rootDir>/__tests__/unit/**/*/*.spec.+(ts|tsx|js)',\n  ],\n  coveragePathIgnorePatterns: ['/node_modules/', '/iconfont/', '/__test__/'],\n  coverageDirectory: 'coverage',\n  coverageReporters: ['html', 'lcov', 'clover'],\n  coverageThreshold: {\n    global: {\n      branches: 30,\n      functions: 40,\n      lines: 50,\n      statements: 50,\n    },\n  },\n  ...sharedConfig,\n};\n\nexport default config;\n"
        },
        {
          "name": "jest.e2e.config.ts",
          "type": "blob",
          "size": 1.2294921875,
          "content": "import type { Config } from 'jest';\n\nconst sharedConfig: Partial<Config> = {\n  transform: {\n    // use typescript to convert from esm to cjs\n    '[.](m|c)?(ts|js)(x)?$': [\n      'ts-jest',\n      {\n        tsconfig: 'tsconfig.json',\n        isolatedModules: true,\n      },\n    ],\n    '^.+.(glsl)$': 'jest-text-transformer',\n    // '\\\\.[jt]sx?$': 'esbuild-jest',\n  },\n\n  // any tests that operate on dist files shouldn't compile them again.\n  transformIgnorePatterns: ['<rootDir>/dist', '^.+\\\\.js$'],\n  modulePathIgnorePatterns: ['<rootDir>/dist'],\n\n  moduleNameMapper: {\n    '@antv/l7-(.+)$': '<rootDir>packages/$1/src',\n    '^.+.(css)$': 'jest-text-transformer',\n  },\n};\n\nconst config: Config = {\n  testTimeout: 100000,\n  globalSetup: './__tests__/integration/preset/setup.js',\n  globalTeardown: './__tests__/integration/preset/teardown.js',\n  testEnvironment: './__tests__/integration/preset/environment.js',\n  testMatch: ['<rootDir>/__tests__/integration/*.spec.ts'],\n  coverageReporters: ['html', 'lcov', 'clover'],\n  coveragePathIgnorePatterns: ['/node_modules/', '/iconfont/'],\n  coverageThreshold: {\n    global: {\n      branches: 9,\n      functions: 11.5,\n      lines: 15,\n      statements: 15,\n    },\n  },\n  ...sharedConfig,\n};\n\nexport default config;\n"
        },
        {
          "name": "legacy",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 4.0712890625,
          "content": "{\n  \"name\": \"l7-monorepo\",\n  \"private\": true,\n  \"type\": \"module\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/antvis/L7\"\n  },\n  \"scripts\": {\n    \"prepare\": \"husky\",\n    \"dev\": \"vite dev --host\",\n    \"site:dev\": \"pnpm --filter @antv/l7-site site:dev\",\n    \"site:build\": \"pnpm --filter @antv/l7-site site:build\",\n    \"site:deploy\": \"pnpm --filter @antv/l7-site site:deploy\",\n    \"site:publish\": \"pnpm --filter @antv/l7-site site:publish\",\n    \"check-deps\": \"pnpm --parallel -r check-deps\",\n    \"check-format\": \"./scripts/format-check.sh\",\n    \"format\": \"./scripts/format-fix.sh\",\n    \"lint:ts\": \"./scripts/eslint-lint.sh\",\n    \"lint:ts-fix\": \"/scripts/eslint-fix.sh\",\n    \"lint:css\": \"stylelint 'packages/**/*.{css,less}'\",\n    \"lint:css-fix\": \"stylelint --fix 'packages/**/*.{css,less}'\",\n    \"test\": \"run-p test:unit test:integration\",\n    \"test:unit\": \"jest --config ./jest.config.ts\",\n    \"test-cover\": \"jest --config ./jest.config.ts --coverage\",\n    \"test:integration\": \"jest --config ./jest.e2e.config.ts\",\n    \"test:size\": \"pnpm --filter @antv/l7 build && limit-size\",\n    \"clean-dist\": \"pnpm --parallel -r --filter !@antv/l7-site clean\",\n    \"clean-deps\": \"./scripts/clean-deps.sh\",\n    \"build\": \"pnpm --parallel -r --filter !@antv/l7-site build\",\n    \"changeset\": \"changeset add\",\n    \"publish-version\": \"changeset version\",\n    \"publish-packages\": \"pnpm build && pnpm limit-size && changeset publish\",\n    \"intranet-sync\": \"./scripts/intranet-sync.sh\"\n  },\n  \"lint-staged\": {\n    \"*.md\": [\n      \"case-police --fix\"\n    ],\n    \"*.{css,less}\": [],\n    \"*.{ts,tsx,js,jsx,json,md,css,less}\": [\n      \"prettier --write\"\n    ],\n    \"*.{js,jsx,tsx,ts}\": [\n      \"eslint --fix\"\n    ]\n  },\n  \"limit-size\": [\n    {\n      \"path\": \"packages/l7/dist/l7.js\",\n      \"limit\": \"1.7 Mb\"\n    }\n  ],\n  \"engines\": {\n    \"node\": \">=18\",\n    \"pnpm\": \">=8\"\n  },\n  \"dependencies\": {\n    \"@antv/g-device-api\": \"^1.6.4\",\n    \"@turf/turf\": \"^6.5.0\",\n    \"@types/react\": \"^18.2.74\",\n    \"@types/react-dom\": \"^18.2.23\",\n    \"@types/stats.js\": \"^0.17.3\",\n    \"antd\": \"^5.16.0\",\n    \"geotiff\": \"^2.0.1\",\n    \"kdbush\": \"^4.0.2\",\n    \"lil-gui\": \"^0.19.1\",\n    \"maplibre-gl\": \"^3.5.2\",\n    \"pmtiles\": \"^2.7.2\",\n    \"react\": \"^18.2.0\",\n    \"react-dom\": \"^18.2.0\",\n    \"stats.js\": \"^0.17.0\",\n    \"three\": \"0.115.0\"\n  },\n  \"devDependencies\": {\n    \"@antv/translator\": \"^1.0.1\",\n    \"@changesets/changelog-github\": \"^0.5.0\",\n    \"@changesets/cli\": \"^2.27.1\",\n    \"@commitlint/cli\": \"^19.2.1\",\n    \"@commitlint/config-conventional\": \"^19.1.0\",\n    \"@types/jest\": \"^29.5.1\",\n    \"@types/offscreencanvas\": \"^2019.7.0\",\n    \"@types/pixelmatch\": \"^5.2.5\",\n    \"@types/pngjs\": \"^6.0.3\",\n    \"@vitejs/plugin-react\": \"^4.2.1\",\n    \"babel-plugin-inline-import\": \"^3.0.0\",\n    \"babel-plugin-transform-import-css-l7\": \"^0.0.6\",\n    \"case-police\": \"^0.6.1\",\n    \"cross-env\": \"^7.0.2\",\n    \"eslint\": \"^8.54.0\",\n    \"eslint-config-prettier\": \"^9.1.0\",\n    \"eslint-plugin-jest\": \"^27.9.0\",\n    \"eslint-plugin-jsx-a11y\": \"^6.8.0\",\n    \"eslint-plugin-react\": \"^7.34.1\",\n    \"eslint-plugin-react-hooks\": \"^4.6.0\",\n    \"father\": \"^4.1.0\",\n    \"globals\": \"^14.0.0\",\n    \"husky\": \"^9.0.11\",\n    \"jest\": \"^29.7.0\",\n    \"jest-canvas-mock\": \"^2.4.0\",\n    \"jest-environment-jsdom\": \"^29.6.2\",\n    \"jest-environment-node\": \"^29.7.0\",\n    \"jest-text-transformer\": \"^1.0.4\",\n    \"jsdom\": \"^22.1.0\",\n    \"limit-size\": \"^0.1.4\",\n    \"lint-staged\": \"^15.2.2\",\n    \"npm-run-all\": \"^4.1.5\",\n    \"pixelmatch\": \"5.3.0\",\n    \"playwright\": \"latest\",\n    \"pngjs\": \"^6.0.0\",\n    \"portfinder\": \"^1.0.32\",\n    \"postcss-less\": \"^6.0.0\",\n    \"prettier\": \"^3.2.5\",\n    \"prettier-plugin-glsl\": \"^0.1.3\",\n    \"prettier-plugin-organize-imports\": \"^3.2.4\",\n    \"rimraf\": \"^3.0.2\",\n    \"stylelint\": \"^16.3.0\",\n    \"stylelint-config-standard\": \"^36.0.0\",\n    \"stylelint-declaration-block-no-ignored-properties\": \"^2.8.0\",\n    \"terminate\": \"latest\",\n    \"ts-jest\": \"^29.1.1\",\n    \"ts-node\": \"^10.9.2\",\n    \"tslib\": \"^2.6.2\",\n    \"typescript\": \"^5.2.2\",\n    \"typescript-eslint\": \"^7.3.1\",\n    \"vite\": \"^5.0.9\",\n    \"vite-plugin-cp\": \"^4.0.8\",\n    \"vite-plugin-string\": \"^1.2.2\",\n    \"webpack-bundle-analyzer\": \"^4.10.1\"\n  }\n}\n"
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "pnpm-workspace.yaml",
          "type": "blob",
          "size": 0.0654296875,
          "content": "packages:\n  # all packages\n  - 'packages/*'\n  # website\n  - 'site'\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "site",
          "type": "tree",
          "content": null
        },
        {
          "name": "tsconfig.eslint.json",
          "type": "blob",
          "size": 0.51953125,
          "content": "{\n  \"extends\": \"./tsconfig.json\",\n  \"compilerOptions\": {\n    \"noEmit\": true\n  },\n  // paths intend to lint\n  \"include\": [\n    \"./*.?*.ts\",\n    \"packages\",\n    \"packages/*/.?*.ts\",\n    // examples workspace lint\n    \"examples\",\n    // test workspace lint\n    \"__tests__\",\n    // website workspace lint\n    \"site\",\n    \"site/.?*.ts\",\n    // special: perfix .xxx directory will be ignored\n    \"site/.dumi/pages\",\n    \"site/.dumi/theme\",\n    \"site/.dumi/*.ts\"\n  ],\n  \"exclude\": [\"node_modules\", \"dist\", \"dist\", \"es\", \"lib\", \"legacy\"]\n}\n"
        },
        {
          "name": "tsconfig.json",
          "type": "blob",
          "size": 1.2958984375,
          "content": "{\n  \"compilerOptions\": {\n    // Language and Environment Config\n    \"target\": \"es6\",\n    \"jsx\": \"react\",\n    \"experimentalDecorators\": true,\n\n    // Type Checking Config\n    \"strict\": true,\n    \"strictPropertyInitialization\": false, // @todo: turning on for next refactor\n\n    // Emit Config\n    \"declaration\": true,\n    \"importHelpers\": true,\n    \"downlevelIteration\": true,\n\n    // Modules Config\n    \"module\": \"esnext\",\n    \"moduleResolution\": \"node\",\n    \"resolveJsonModule\": true,\n    \"baseUrl\": \"./\",\n    \"rootDir\": \"./\",\n    \"paths\": {\n      \"@antv/l7\": [\"packages/l7/src\"],\n      \"@antv/l7-core\": [\"packages/core/src\"],\n      \"@antv/l7-component\": [\"packages/component/src\"],\n      \"@antv/l7-layers\": [\"packages/layers/src\"],\n      \"@antv/l7-map\": [\"packages/map/src\"],\n      \"@antv/l7-maps\": [\"packages/maps/src\"],\n      \"@antv/l7-scene\": [\"packages/scene/src\"],\n      \"@antv/l7-renderer\": [\"packages/renderer/src\"],\n      \"@antv/l7-three\": [\"packages/three/src\"],\n      \"@antv/l7-source\": [\"packages/source/src\"],\n      \"@antv/l7-utils\": [\"packages/utils/src\"],\n      \"@antv/l7-test-utils\": [\"packages/test-utils/src\"]\n    },\n\n    // Interop Constraints\n    \"esModuleInterop\": true,\n    \"isolatedModules\": true,\n\n    // Completeness\n    \"skipLibCheck\": true\n  },\n\n  \"exclude\": [\"node_modules\", \"dist\", \"es\", \"lib\"]\n}\n"
        },
        {
          "name": "vite.config.ts",
          "type": "blob",
          "size": 1.5048828125,
          "content": "import react from '@vitejs/plugin-react';\nimport path from 'path';\nimport { defineConfig } from 'vite';\nimport copy from 'vite-plugin-cp';\nimport vitePluginString from 'vite-plugin-string';\n\nexport default defineConfig({\n  root: './examples/',\n  server: { port: 8080, open: '/' },\n  base: './',\n  resolve: {\n    alias: {\n      '@antv/l7': path.resolve(__dirname, './packages/l7/src'),\n      '@antv/l7-maps': path.resolve(__dirname, './packages/maps/src'),\n      '@antv/l7-core': path.resolve(__dirname, './packages/core/src'),\n      '@antv/l7-component': path.resolve(__dirname, './packages/component/src'),\n      '@antv/l7-three': path.resolve(__dirname, './packages/three/src'),\n      '@antv/l7-layers': path.resolve(__dirname, './packages/layers/src'),\n      '@antv/l7-map': path.resolve(__dirname, './packages/map/src'),\n      '@antv/l7-renderer': path.resolve(__dirname, './packages/renderer/src'),\n      '@antv/l7-scene': path.resolve(__dirname, './packages/scene/src'),\n      '@antv/l7-source': path.resolve(__dirname, './packages/source/src'),\n      '@antv/l7-utils': path.resolve(__dirname, './packages/utils/src'),\n    },\n  },\n  plugins: [\n    react(),\n    vitePluginString({\n      compress: false,\n    }),\n    copy({\n      targets: [\n        {\n          src: './node_modules/@antv/g-device-api/dist/pkg/glsl_wgsl_compiler_bg.wasm',\n          dest: 'examples/public',\n        },\n      ],\n      hook: 'buildStart',\n    }),\n  ],\n  esbuild: {},\n  define: {\n    'process.env.VERSION': JSON.stringify('1.0.0'),\n    global: {},\n  },\n});\n"
        }
      ]
    }
  ]
}