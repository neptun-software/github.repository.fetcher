{
  "metadata": {
    "timestamp": 1736564322828,
    "page": 905,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "pulumi/examples",
      "stars": 2427,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.6416015625,
          "content": "# Root editorconfig file for pulumi/examples\nroot = true\n\n# Apply to all files\n[*]\nindent_style = space\nindent_size = 4\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\n\n# Python-specific settings based on black.toml\n[*.py]\nindent_size = 4\nmax_line_length = 100\n\n# JSON files\n[*.json]\nindent_style = space\nindent_size = 2\n\n# YAML files\n[*.yml]\nindent_style = space\nindent_size = 2\n\n# Markdown files\n[*.md]\ntrim_trailing_whitespace = false\n\n# TypeScript files\n[*.ts]\nindent_style = space\nindent_size = 2\n\n# Go files\n[*.go]\nindent_style = tab\ntab_width = 4\n\n# Ignore venv folders\n[**/venv/**]\nindent_style = ignore\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.271484375,
          "content": "/.pulumi/\n/.vscode/\n/.vs/\nbin/\nbuild/\nnode_modules/\n*.pyc\n.Python\nvenv/\ninclude/\nlib/\nyarn.lock\npackage-lock.json\nPulumi.*.yaml\n.idea/\n.ionide/\n*.iml\nkey.rsa*\nobj/\nvendor\nGopkg.lock\n**/.DS_Store\n\n**/ci-scripts\n\n# Java app\n.gradle/\n.settings/\n.project\n.classpath\ntarget/\n*-test/\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.107421875,
          "content": "[submodule \".github/devcontainer\"]\n\tpath = .github/devcontainer\n\turl = https://github.com/pulumi/devcontainer\n"
        },
        {
          "name": "CODE-OF-CONDUCT.md",
          "type": "blob",
          "size": 3.158203125,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\neducation, socio-economic status, nationality, personal appearance, race,\nreligion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at code-of-conduct@pulumi.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 3.146484375,
          "content": "# Contributing to Pulumi Examples\n\nPulumi welcomes contributions from the community and is excited to continue building out its collection of examples and tutorials that showcase the power of modern infrastructure as code. This guide is intended to\nhelp your contribution get published quickly.\n\n## Pulumi terminology\n\nFor a list of Pulumi terms used throughout our documentation site, see the [Glossary page](https://www.pulumi.com/docs/reference/glossary/).\n\n## Example folder structure\n\nThe folder structure for each example includes a two-part prefix, `<cloud>-<language>` (to indicate which `<cloud>` and `<language>` it pertains to), and a brief descriptive name with hyphens in between the words.\n\nThe cloud prefix can be one of:\n\n- `aws` for [Amazon Web Services](https://github.com/pulumi/pulumi-aws)\n- `azure` for [Microsoft Azure](https://github.com/pulumi/pulumi-azure)\n- `gcp` for [Google Cloud Platform](https://github.com/pulumi/pulumi-gcp)\n- `kubernetes` for [Kubernetes](https://github.com/pulumi/pulumi-kubernetes),\n- `digitalocean` for [DigitalOcean](https://github.com/pulumi/pulumi-digitalocean/)\n- `f5bigip` for [F5's BIG-IP](https://github.com/pulumi/pulumi-f5bigip/)\n- `cloud` for [Pulumi's cross-cloud programming framework](https://github.com/pulumi/pulumi-cloud), which is currently in preview\n- Any [cloud provider](https://www.pulumi.com/registry) with a dedicated Pulumi package\n\nThe language prefix can be one of:\n- `ts` for TypeScript\n- `js` for JavaScript\n- `py` for Python\n- `go` for Golang\n- `cs` for csharp\n\nIf you would like to add an example in a different language, see the FAQ section for [adding support for your favorite language](https://www.pulumi.com/docs/troubleshooting/faq/#how-can-i-add-support-for-my-favorite-language).\n\nEach folder contains files related to your [Pulumi project](https://www.pulumi.com/docs/intro/concepts/project/), a README, an optional directory for your sample application (`www` for example), and an optional `images` directory if you're including images in your example.\n\n```\n|____README.md\n|____www\n|____images\n| |____deploy.gif\n| |____deploy.cast\n|____Pulumi.yaml\n|____package.json\n|____tsconfig.json\n|____index.ts\n```\n\n## Style\n\nWe are big fans of DigitalOcean's [technical writing guidelines](https://www.digitalocean.com/community/tutorials/digitalocean-s-technical-writing-guidelines#style) and highly encourage you to follow their style recommendations.\n\n### README structure\n\nEach example should include a README to give the readers a good walkthrough. It should comprise of the following sections:\n\n- Title\n- [\"Deploy with Pulumi\" button](https://www.pulumi.com/docs/intro/console/extensions/pulumi-button/) (Optional)\n- Overview paragraph\n- Prerequisites\n- Deploy the App\n   - Step 1: Doing the First Thing\n   - Step 2: Doing the Next Thing\n   …\n   - Step n: Doing the Last Thing\n- Clean Up\n- Summary\n- Next Steps (Optional)\n\nSee our [example README template](example-readme-template.md.txt) for detailed explanations on each section.\n\n> The contribution guidelines have been authored in September 2019 and are subject to further refinements and tweaks. Examples prior to September 2019 do not necessarily conform to these guidelines.\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 2.224609375,
          "content": "all: ensure only_test\n\nensure: setup_python\n\tcd misc/test && go mod tidy\n\tcd misc/test && go mod download\n\tnpm --prefix testing-unit-ts/mocha install\n\tnpm install --global tslint\n\nonly_test:\n\tbash -c 'set -o pipefail && cd misc/test && go test -json ./... --timeout 4h -v -count=1 -short -parallel 40 --tags=all | gotestfmt'\n\nspecific_test_set:\n\techo \"Running $(TestSet) acceptance tests\"\n\tbash -c 'set -o pipefail && cd misc/test && go test -json . --timeout 4h -v -count=1 -short -parallel 40 --tags=all --run=TestAcc$(TestSet) | gotestfmt'\n\nspecific_tag_set:\n\techo \"Running $(TagSet)$(TestSet) acceptance tests\"\n\tbash -c 'set -o pipefail && cd misc/test && go test -json . --timeout 4h -v -count=1 -short -parallel 40 --tags=$(TagSet) --run=TestAcc$(TagSet)$(TestSet) | gotestfmt'\n\n# Run a test of a single example. Example usage:\n#\n#     make test_example.TestAccAwsPyS3Folder\ntest_example.%:\n\tcd misc/test && go test -test.v -run \"^$*$$\" -tags all\n\n# Some of the examples double up as performance benchmarks. Run:\n#\n#     make bench_example.TestAccAwsPyS3Folder\n#\n# This will run the example and populate ./traces with performance data.\n# See also https://www.pulumi.com/docs/support/troubleshooting/#performance\nbench_example.%:\n\tmkdir -p ./traces\n\tcd misc/test && PULUMI_TRACING_DIR=${PWD}/traces go test -test.v -run \"^$*$$\" -tags all\n\n.PHONY: format setup_python clean\n\n# Create a virtual environment and install black\nsetup_python:\n\t@if [ ! -d \"venv\" ]; then \\\n\t\tpython3 -m venv venv; \\\n\t\tvenv/bin/pip install --upgrade pip; \\\n\t\tvenv/bin/pip install black; \\\n\t\techo \"Virtual environment created and black installed.\"; \\\n\telse \\\n\t\techo \"Virtual environment already exists.\"; \\\n\tfi\n\n# Validate that all Python files are properly formatted with Black\ncheck_python_formatting: setup_python\n\t@if find . -name \"*.py\" -not -path \"./venv/*\" | xargs venv/bin/black --config black.toml --check; then \\\n\t\techo \"All Python files are properly formatted.\"; \\\n\telse \\\n\t\techo \"Some files are not formatted. Run 'make format' to fix.\"; \\\n\t\texit 1; \\\n\tfi\n# Run Black against all Python files in the project, excluding venv\nformat: setup_python\n\tfind . -name \"*.py\" -not -path \"*/venv/*\" | xargs venv/bin/black --config black.toml\n\n# Clean up the virtual environment\nclean:\n\trm -rf venv\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 34.6591796875,
          "content": "<p align=\"center\">\n  <a href=\"https://www.pulumi.com?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=top-logo\" title=\"Pulumi Examples - Build and Deploy Infrastructure as Code Solutions on Any Cloud\">\n    <img src=\"https://www.pulumi.com/images/logo/logo-on-white-box.svg?\" width=\"350\">\n  </a>\n</p>\n\n  [![Slack](http://www.pulumi.com/images/docs/badges/slack.svg)](https://slack.pulumi.com?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=slack-badge)\n  [![GitHub Discussions](https://img.shields.io/github/discussions/pulumi/pulumi)](https://github.com/pulumi/pulumi/discussions)\n  [![License](https://img.shields.io/github/license/pulumi/pulumi)](LICENSE)\n\n**Pulumi** is the easiest way to build and deploy infrastructure, for any architecture and on any cloud, using programming languages that you already know and love. Code and ship infrastructure faster with your favorite languages and tools, and embed IaC anywhere with [Automation API](https://www.pulumi.com/docs/guides/automation-api/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=about-pulumi).\n\nPulumi is open source under the [Apache 2.0 license](https://github.com/pulumi/pulumi/blob/master/LICENSE), supports many languages and clouds, and is easy to extend.\n\n## Table of contents\n\n- :rocket: [About This Repo](#about-the-pulumi-examples-repo)\n- :toolbox:\t[All Pulumi Examples](#all-pulumi-examples)\n- :clap: [Contributors](#contributors)\n- :busts_in_silhouette: [Pulumi Community](#community)\n- :blue_book: [Pulumi Developer Resources](#pulumi-developer-resources)\n- :compass:\t[Pulumi Roadmap](#pulumi-roadmap)\n\n# About the Pulumi Examples Repo\n[![Open in GitHub Codespaces](https://github.com/codespaces/badge.svg)](https://codespaces.new/pulumi/examples)\n\nThis repository contains examples of using Pulumi to build and deploy cloud applications and infrastructure across major programming languages.\n\nEach example has a two-part prefix, `<cloud>-<language>`, to indicate which `<cloud>` and `<language>` it pertains to. For example, `<cloud>` could be:\n - `aws` for [Amazon Web Services](https://github.com/pulumi/pulumi-aws) \n - `azure` for [Microsoft Azure](https://github.com/pulumi/pulumi-azure)\n - `gcp` for [Google Cloud Platform](https://github.com/pulumi/pulumi-gcp) \n - `kubernetes` for [Kubernetes](https://github.com/pulumi/pulumi-kubernetes) \n - `cloud` for [Pulumi's cross-cloud programming framework](https://github.com/pulumi/pulumi-cloud).\n\nSee the [Pulumi documentation](https://www.pulumi.com/docs/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=pulumi-examples) for more details on getting started with Pulumi.\n\n## Checking out a single example\n\nYou can checkout only the example(s) you want by using a [sparse checkout](https://git-scm.com/docs/git-sparse-checkout). The following commands show how checkout only the `aws-go-fargate` example. Replace `aws-go-fargate` with your example of interest. \n\n```bash\n$ mkdir examples && cd examples\n$ git init\n$ git remote add origin -f https://github.com/pulumi/examples/\n$ git config core.sparseCheckout true\n$ echo \"aws-go-fargate\" >> .git/info/sparse-checkout ## update this\n$ git pull origin master\n```\n\nDon't see an example listed? [Try Pulumi AI](https://www.pulumi.com/ai/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=pulumi-examples) and use natural-language prompts to generate Pulumi infrastructure-as-code programs in _any_ language.\n\n## All Pulumi examples\n\n- [AWS](#aws)\n    - [TypeScript](#typescript)\n    - [JavaScript](#javascript)\n    - [Python](#python)\n    - [Go](#go)\n    - [C#](#c)\n    - [F#](#f)\n- [Azure](#azure)\n    - [TypeScript](#typescript-1)\n    - [Python](#python-1)\n    - [Go](#go-1)\n    - [C#](#c-1)\n    - [F#](#f-1)\n- [GCP](#gcp)\n    - [TypeScript](#typescript-2)\n    - [JavaScript](#javascript-1)\n    - [Python](#python-2)\n    - [Go](#go-2)\n    - [C#](#c-2)\n- [Kubernetes](#kubernetes)\n    - [TypeScript](#typescript-3)\n    - [JavaScript](#javascript-2)\n    - [Python](#python-3)\n    - [Go](#go-3)\n    - [C#](#c-3)\n- [Openstack](#openstack)\n- [OVHCloud](#ovhcloud)\n- [Cloud](#cloud)\n- [DigitalOcean](#digitalocean)\n- [Multicloud](#multicloud)\n- [F5](#f5)\n- [Twilio](#twilio)\n- [Linode](#linode)\n- [Testing](#testing)\n- [Automation API](https://github.com/pulumi/automation-api-examples)\n\n## AWS\n\n### TypeScript\n\n[🔝 Back to the list](#all-pulumi-examples)\n\nExample   | Description |\n--------- | --------- |\n[API Gateway](aws-ts-apigateway) | Deploy a simple REST API that counts the number of times a route has been hit.\n[API Gateway HTTP API with routes](aws-ts-apigatewayv2-http-api) | Deploy a HTTP API that invokes a Lambda.\n[API Gateway HTTP API quickstart](aws-ts-apigatewayv2-http-api-quickcreate) | Deploy a very simple HTTP API that invokes a Lambda.\n[API Gateway V1 with EventBridge and Lambda](aws-ts-apigateway-eventbridge) | Deploy a REST API that uses EventBridge to target a Lambda function. Includes API Gateway model validation and custom integration-response mapping.\n[API Gateway V2 with EventBridge and Lambda](aws-ts-apigatewayv2-eventbridge) | Deploy an HTTP API that uses EventBridge to target a Lambda function.\n[Apigateway - Auth0](aws-ts-apigateway-auth0) | Deploy a simple REST API protected by Auth0.\n[AppSync](aws-ts-appsync) | Deploy a basic GraphQL endpoint in AWS AppSync.\n[AssumeRole](aws-ts-assume-role) | Use AssumeRole to create resources.\n[Containers](aws-ts-containers) | Provision containers on Fargate.\n[EKS - Dashboard](aws-ts-eks) | Deploy an EKS Kubernetes cluster with an EBS-backed StorageClass, then the Kubernetes Dashboard into the cluster.\n[EKS - Hello World](aws-ts-eks-hello-world) | Deploy an EKS Kubernetes cluster with an EBS-backed StorageClass, then a Kubernetes namespace and nginx deployment into the cluster.\n[EKS - Migrate Node Groups](aws-ts-eks-migrate-nodegroups) | Create an EKS cluster and node group to use for workload migration with zero downtime.\n[Fargate](aws-ts-hello-fargate) | Build, deploy, and run a Dockerized app using ECS, ECR, and Fargate.\n[Lambda Thumbnailer](aws-ts-lambda-thumbnailer) | Create a video thumbnail extractor using serverless functions.\n[Miniflux](aws-ts-pulumi-miniflux) | Stand up an RSS Service using Fargate and RDS.\n[Pulumi Webhooks](aws-ts-pulumi-webhooks) | Create a Pulumi `cloud.HttpEndpoint` that receives webhook events delivered by Pulumi Cloud, then echos the event to Slack.\n[RDS and Airflow](aws-ts-airflow) | Deploy a RDS Postgres instance and containerized Airflow.\n[Resources](aws-ts-resources) | Create various resources, including `cloudwatch.Dashboard`, `cloudwatch.EventRule`, `cloudwatch.LogGroup`, and `sqs.Queue`.\n[Ruby on Rails](aws-ts-ruby-on-rails) | Create a single EC2 virtual machine instance with a local MySQL database.\n[S3 Lambda](aws-ts-s3-lambda-copyzip) | Set up two AWS S3 Buckets and a single Lambda that listens to one and, upon each new object arriving in it, zips it up and copies it to the second bucket.\n[Serverless Application](aws-ts-serverless-raw) | Deploy a complete serverless C# application using raw resources from `@pulumi/aws`.\n[Serverless Datawarehouse](aws-ts-serverless-datawarehouse) | Deploy a serverless data warehouse.\n[Slackbot](aws-ts-slackbot) | Create a simple slackbot that posts a notification to a specific channel any time you're @mentioned anywhere.\n[Stack Reference](aws-ts-stackreference) | Create a \"team\" EC2 Instance with tags set from upstream stacks.\n[Static Website](aws-ts-static-website) | Serve a static website using S3, CloudFront, Route53, and Certificate Manager.\n[Step Functions](aws-ts-stepfunctions) | Use Step Functions with a Lambda function.\n[Thumbnailer](aws-ts-thumbnailer) | Create a video thumbnail extractor using serverless functions and containers.\n[Twitter](aws-ts-twitter-athena) | Query Twitter every 2 minutes, store the results in S3, and set up an Athena table and query.\n[URL Shortener](aws-ts-url-shortener-cache-http) | Create a serverless URL shortener that uses high-level components.\n[Voting App](aws-ts-voting-app) | Create a simple voting app using Redis and Python Flask.\n[Web Server](aws-ts-webserver) | Deploy an EC2 Virtual machine using TypeScript to run a Python web server.\n[Web Server with Manual Provisioning](aws-ts-ec2-provisioners) | Use Pulumi dynamic providers to accomplish post-provisioning configuration steps.\n[LangServe - Hello OpenAI](aws-ts-langserve) | Deploy a LangServe app that uses OpenAI's on AWS ECS.\n\n[Use Pulumi AI](https://www.pulumi.com/ai/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=pulumi-examples) to build a new example in _any_ language.\n\n### JavaScript\n\n[🔝 Back to the list](#all-pulumi-examples)\n\nExample   | Description |\n--------- | --------- |\n[Containers](aws-js-containers) | Provision containers on Fargate.\n[S3 Folder Component](aws-js-s3-folder-component) | Serve a static website on S3 from a component.\n[S3 Folder](aws-js-s3-folder) | Serve a static website on S3.\n[Servless SQS to Slack](aws-js-sqs-slack) | Wire up a serverless AWS Lambda to an AWS SQS queue and post a message to Slack.\n[Web Server - Component](aws-js-webserver-component) | Deploy an EC2 instance using a common module for creating an instance.\n[Web Server](aws-js-webserver) | Deploy an EC2 Virtual machine running a Python web server.\n[LangServe - Hello OpenAI](aws-js-langserve) | Deploy a LangServe app that uses OpenAI's on AWS ECS.\n\n[Use Pulumi AI](https://www.pulumi.com/ai/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=pulumi-examples) to build a new example in _any_ language.\n\n### Python\n\n[🔝 Back to the list](#all-pulumi-examples)\n\nExample   | Description |\n--------- | --------- |\n[API Gateway HTTP API quickstart](aws-py-apigatewayv2-http-api-quickcreate) | Deploy a very simple HTTP API that invokes a Lambda.\n[API Gateway V2 with EventBridge and Lambda](aws-py-apigatewayv2-eventbridge) | Deploy an HTTP API that uses EventBridge to target a Lambda function.\n[AppSync](aws-py-appsync) | Deploy a basic GraphQL endpoint in AWS AppSync.\n[AssumeRole](aws-py-assume-role) | Use AssumeRole to create resources.\n[Fargate](aws-py-fargate) | Provision a full ECS Fargate cluster running a load-balanced nginx web server.\n[Resources](aws-py-resources) | Create various resources, including `cloudwatch.Dashboard`, `cloudwatch.EventRule`, `cloudwatch.LogGroup`, and `sqs.Queue`.\n[S3 Folder](aws-py-s3-folder) | Serve a static website on S3.\n[Stack Reference](aws-py-stackreference) | Create a \"team\" EC2 Instance with tags set from upstream stacks.\n[Step Functions](aws-py-stepfunctions) | Use Step Functions with a Lambda function.\n[Web Server](aws-py-webserver) | Deploy an EC2 instance and open port 80.\n[LangServe - Hello OpenAI](aws-py-langserve) | Deploy a LangServe app that uses OpenAI's on AWS ECS.\n\n[Use Pulumi AI](https://www.pulumi.com/ai/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=pulumi-examples) to build a new example in _any_ language.\n\n### Go\n\n[🔝 Back to the list](#all-pulumi-examples)\n\nExample   | Description |\n--------- | --------- |\n[AssumeRole](aws-go-assume-role) | Use AssumeRole to create resources.\n[Fargate](aws-go-fargate) | Provision a full ECS Fargate cluster running a load-balanced nginx web server.\n[Lambda](aws-go-lambda) | Create a lambda that does a simple `ToUpper` on the string input and returns it.\n[S3 Folder](aws-go-s3-folder) | Serve a static website on S3.\n[Web Server](aws-go-webserver) | Deploy an EC2 Virtual machine running a Python web server.\n[LangServe - Hello OpenAI](aws-go-langserve) | Deploy a LangServe app that uses OpenAI's on AWS ECS.\n\n[Use Pulumi AI](https://www.pulumi.com/ai/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=pulumi-examples) to build a new example in _any_ language.\n\n### C#\n\n[🔝 Back to the list](#all-pulumi-examples)\n\nExample   | Description |\n--------- | --------- |\n[AssumeRole](aws-cs-assume-role) | Use AssumeRole to create resources.\n[Fargate](aws-cs-fargate) | Build, deploy, and run a Dockerized app using ECS, ECR, and Fargate.\n[Lambda](aws-cs-lambda) | Create a lambda that does a simple `ToUpper` on the string input and returns it.\n[S3 Folder](aws-cs-s3-folder) | Serve a static website on S3.\n[Web Server](aws-cs-webserver) | Deploy an EC2 instance and open port 80.\n[LangServe - Hello OpenAI](aws-cs-langserve) | Deploy a LangServe app that uses OpenAI's on AWS ECS.\n\n[Use Pulumi AI](https://www.pulumi.com/ai/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=pulumi-examples) to build a new example in _any_ language.\n\n### F#\n\n[🔝 Back to the list](#all-pulumi-examples)\n\nExample   | Description |\n--------- | --------- |\n[Lambda Web Server](aws-fs-lambda-webserver) | Create a web server in AWS lambda using the Giraffe web server.\n[S3 Folder](aws-fs-s3-folder) | Serve a static website on S3.\n\n[Use Pulumi AI](https://www.pulumi.com/ai/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=pulumi-examples) to build a new example in _any_ language.\n\n## Azure\n\n### TypeScript\n\n[🔝 Back to the list](#all-pulumi-examples)\n\nExample   | Description |\n--------- | --------- |\n[Azure Container Apps](azure-ts-containerapps) | Run a Docker image on Azure Container Apps.\n[Azure Container Instance](azure-ts-aci) | Run Azure Container Instances on Linux.\n[Azure Kubernetes Service](azure-ts-aks) | Create an Azure Kubernetes Service (AKS) Cluster.\n[Azure App Service](azure-ts-appservice) | Build a web application hosted in App Service and provision Azure SQL Database and Azure Application Insights.\n[Azure App Service with Docker](azure-ts-appservice-docker) | Build a web application hosted in App Service from Docker images.\n[App Service in Virtual Network](azure-ts-webapp-privateendpoint-vnet-injection) | Deploy two App Services - Front web app with VNet injection and Back web app with a Private Endpoint.\n[Azure Cosmos DB and LogicApp](azure-ts-cosmosdb-logicapp) | Define Cosmos DB, API connections, and link them to a logic app.\n[Azure Functions](azure-ts-functions) | Deploy a Node.js serverless function to Azure Functions.\n[Azure Functions - Many](azure-ts-functions-many) | Deploy several kinds of Azure Functions created from raw deployment packages.\n[Azure SDK integration](azure-ts-call-azure-sdk) | Call Azure SDK functions from a Pulumi program.\n[Static Website](azure-ts-static-website) | Configure static website hosting in Azure Storage.\n[Azure Synapse](azure-ts-synapse) | Starting point for enterprise analytics solutions based on Azure Synapse.\n[Web Server](azure-ts-webserver) | Provision a Linux web server in an Azure Virtual Machine.\n\n[Use Pulumi AI](https://www.pulumi.com/ai/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=pulumi-examples) to build a new example in _any_ language.\n\n### Python\n\n[🔝 Back to the list](#all-pulumi-examples)\n\nExample   | Description |\n--------- | --------- |\n[Azure Container Apps](azure-py-containerapps) | Run a Docker image on Azure Container Apps.\n[Azure Container Instance](azure-py-aci) | Run Azure Container Instances on Linux.\n[Azure Kubernetes Service](azure-py-aks) | Create an Azure Kubernetes Service (AKS) Cluster.\n[Azure App Service](azure-py-appservice) | Build a web application hosted in App Service and provision Azure SQL Database and Azure Application Insights.\n[Azure App Service with Docker](azure-py-appservice-docker) | Build a web application hosted in App Service from Docker images.\n[Azure SDK integration](azure-py-call-azure-sdk) | Call Azure SDK functions from a Pulumi program in Python.\n[Azure Cosmos DB and LogicApp](azure-py-cosmosdb-logicapp) | Define Cosmos DB, API connections, and link them to a logic app.\n[Minecraft Server](azure-py-minecraft-server) | Deploy an Azure Virtual Machine and provision a Minecraft server.\n[Static Website](azure-py-static-website) | Configure static website hosting in Azure Storage.\n[Azure Synapse](azure-py-synapse) | Starting point for enterprise analytics solutions based on Azure Synapse.\n[Virtual Data Center](azure-py-virtual-data-center) | Deploy Azure Virtual Data Center (VDC) hub-and-spoke network stacks in Azure, complete with ExpressRoute and VPN Gateways, Azure Firewall guarding a DMZ, and Azure Bastion.\n[Web Server](azure-py-webserver) | Provision a Linux web server in an Azure Virtual Machine.\n\n[Use Pulumi AI](https://www.pulumi.com/ai/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=pulumi-examples) to build a new example in _any_ language.\n\n### Go\n\n[🔝 Back to the list](#all-pulumi-examples)\n\nExample   | Description |\n--------- | --------- |\n[Azure Container Apps](azure-go-containerapps) | Run a Docker image on Azure Container Apps.\n[Azure Container Instance](azure-go-aci) | Run Azure Container Instances on Linux.\n[Azure Kubernetes Service](azure-go-aks) | Create an Azure Kubernetes Service (AKS) Cluster.\n[Azure App Service with Docker](azure-go-appservice-docker) | Build a web application hosted in App Service from Docker images.\n[Static Website](azure-go-static-website) | Configure static website hosting in Azure Storage.\n[Azure SDK integration](azure-go-call-azure-sdk) | Call Azure SDK functions from a Pulumi programin Go.\n\n[Use Pulumi AI](https://www.pulumi.com/ai/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=pulumi-examples) to build a new example in _any_ language.\n\n### C#\n\n[🔝 Back to the list](#all-pulumi-examples)\n\nExample   | Description |\n--------- | --------- |\nCluster.\n[Azure Container Apps](azure-cs-containerapps) | Run a Docker image on Azure Container Apps.\n[Azure Container Instance](azure-cs-aci) | Run Azure Container Instances on Linux.\n[Azure Kubernetes Service](azure-cs-aks) | Create an Azure Kubernetes Service (AKS) Cluster.\n[AKS web app with .NET 5](azure-cs-net5-aks-webapp) | Create an Azure Kubernetes Service (AKS) cluster and deploy a web app to it using .NET 5 and C# 9.\n[AKS + Cosmos DB](azure-cs-aks-cosmos-helm) | A Helm chart deployed to AKS that stores TODOs in an Azure Cosmos DB MongoDB API.\n[Azure App Service](azure-cs-appservice) | Build a web application hosted in App Service and provision Azure SQL Database and Azure Application Insights.\n[Azure App Service with Docker](azure-cs-appservice-docker) | Build a web application hosted in App Service from Docker images.\n[Azure API integration](azure-cs-call-azure-api) | Call additional Azure API endpoints from a Pulumi program.\n[Azure Cosmos DB and LogicApp](azure-cs-cosmosdb-logicapp) | Define Cosmos DB, API connections, and link them to a logic app.\n[Azure Functions](azure-cs-functions) | Deploy a Node.js serverless function to Azure Functions.\n[Static Website](azure-cs-static-website) | Configure static website hosting in Azure Storage.\n[Azure Synapse](azure-cs-synapse) | Starting point for enterprise analytics solutions based on Azure Synapse.\n[Azure SQL Server](azure-cs-sqlserver) | An example of a SQLServer on Azure PaaS.\n\n[Use Pulumi AI](https://www.pulumi.com/ai/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=pulumi-examples) to build a new example in _any_ language.\n\n## GCP\n\n### TypeScript\n\n[🔝 Back to the list](#all-pulumi-examples)\n\nExample   | Description |\n--------- | --------- |\n[Cloud Run](gcp-ts-cloudrun) | Deploy a custom Docker image into Google Cloud Run service.\n[Functions - Raw](gcp-ts-serverless-raw) | Deploy two Google Cloud Functions implemented in Python and Go.\n[Functions](gcp-ts-functions) | Deploy an HTTP Google Cloud Function endpoint.\n[GKE - Hello World](gcp-ts-gke-hello-world) | Deploy a GKE cluster, then a Kubernetes namespace and nginx deployment into the cluster.\n[GKE](gcp-ts-gke) | Provision a Google Kubernetes Engine (GKE) cluster, then a Kubernetes Deployment.\n[Ruby on Rails](gcp-ts-k8s-ruby-on-rails-postgresql) | Deliver a containerized Ruby on Rails application.\n[Slackbot](gcp-ts-slackbot) | Create a simple slackbot that posts a notification to a specific channel any time you're @mentioned anywhere.\n\n[Use Pulumi AI](https://www.pulumi.com/ai/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=pulumi-examples) to build a new example in _any_ language.\n\n### JavaScript\n\n[🔝 Back to the list](#all-pulumi-examples)\n\nExample   | Description |\n--------- | --------- |\n[Web Server](gcp-js-webserver) | Build a web server in Google Cloud.\n\n[Use Pulumi AI](https://www.pulumi.com/ai/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=pulumi-examples) to build a new example in _any_ language.\n\n### Python\n\n[🔝 Back to the list](#all-pulumi-examples)\n\nExample   | Description |\n--------- | --------- |\n[Functions - Raw](gcp-py-serverless-raw) | Deploy two Google Cloud Functions implemented in Python and Go.\n[Functions](gcp-py-functions) | Deploy a Python-based Google Cloud Function.\n[GKE](gcp-py-gke) | Provision a Google Kubernetes Engine (GKE) cluster, then a Kubernetes Deployment.\n[Network Component](gcp-py-network-component) | Use a reusable component to create a Google Cloud Network and instance.\n[nginx Server](gcp-py-instance-nginx) | Build a nginx server in Google Cloud.\n\n[Use Pulumi AI](https://www.pulumi.com/ai/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=pulumi-examples) to build a new example in _any_ language.\n\n### Go\n\n[🔝 Back to the list](#all-pulumi-examples)\n\nExample   | Description |\n--------- | --------- |\n[Functions](gcp-go-functions) | Deploy a Go-based Google Cloud Function.\n[Functions - Raw](gcp-py-serverless-raw) | Deploy a Google Cloud Function implemented in Python.\n[Web Server](gcp-go-webserver) | Build a web server in Google Cloud.\n\n[Use Pulumi AI](https://www.pulumi.com/ai/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=pulumi-examples) to build a new example in _any_ language.\n\n### C#\n\n[🔝 Back to the list](#all-pulumi-examples)\n\nExample   | Description |\n--------- | --------- |\n[Functions - Raw](gcp-py-serverless-raw) | Deploy a Google Cloud Function implemented in Python.\n[Functions](gcp-go-functions) | Deploy a Go-based Google Cloud Function.\n\n[Use Pulumi AI](https://www.pulumi.com/ai/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=pulumi-examples) to build a new example in _any_ language.\n\n## Kubernetes\n\n### TypeScript\n\n[🔝 Back to the list](#all-pulumi-examples)\n\nExample   | Description |\n--------- | --------- |\n[App Rollout via ConfigMap](kubernetes-ts-configmap-rollout) | Enable a change in a ConfigMap to trigger a rollout of an nginx Deployment.\n[App Rollout via S3 Data Change](kubernetes-ts-s3-rollout) | Enable a change in data in S3 to trigger a rollout of an nginx deployment.\n[Expose Deployment](kubernetes-ts-exposed-deployment) | Deploy nginx to a Kubernetes cluster, and publicly explose it using a Kubernetes Service.\n[Guestbook](kubernetes-ts-guestbook) | Build and deploy a simple, multi-tier web application using Kubernetes and Docker.\n[Jenkins](kubernetes-ts-jenkins) | Deploy a container running the Jenkins continuous integration system onto a running Kubernetes cluster.\n[Multicloud](kubernetes-ts-multicloud) | Create managed Kubernetes clusters using AKS, EKS, and GKE, and deploy the application on each cluster.\n[nginx server](kubernetes-ts-nginx) | Deploy a replicated nginx server to a Kubernetes cluster, using TypeScript and no YAML.\n[Sock Shop](kubernetes-ts-sock-shop) | Deploy a version of the standard Sock Shop microservices reference app.\n[Staged App Rollout](kubernetes-ts-staged-rollout-with-prometheus) | Create a staged rollout gated by checking that the P90 response time reported by Prometheus is less than some amount.\n[Wordpress Helm Chart](kubernetes-ts-helm-wordpress) | Use the Helm API to deploy v2.1.3 of the Wordpress Helm Chart to a Kubernetes cluster.\n\n[Use Pulumi AI](https://www.pulumi.com/ai/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=pulumi-examples) to build a new example in _any_ language.\n\n### Python\n\n[🔝 Back to the list](#all-pulumi-examples)\n\nExample   | Description |\n--------- | --------- |\n[Guestbook](kubernetes-py-guestbook) | Build and deploy a simple, multi-tier web application using Kubernetes and Docker.\n\n[Use Pulumi AI](https://www.pulumi.com/ai/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=pulumi-examples) to build a new example in _any_ language.\n\n### C#\n\n[🔝 Back to the list](#all-pulumi-examples)\n\nExample   | Description |\n--------- | --------- |\n[Guestbook](kubernetes-cs-guestbook) | Build and deploy a simple, multi-tier web application using Kubernetes and Docker.\n\n[Use Pulumi AI](https://www.pulumi.com/ai/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=pulumi-examples) to build a new example in _any_ language.\n\n### Go\n\n[🔝 Back to the list](#all-pulumi-examples)\n\nExample   | Description |\n--------- | --------- |\n[Guestbook](kubernetes-go-guestbook) | Build and deploy a simple, multi-tier web application using Kubernetes and Docker.\n[App Rollout via ConfigMap](kubernetes-go-configmap-rollout) | Enable a change in a ConfigMap to trigger a rollout of an nginx Deployment.\n[Wordpress Helm Chart](kubernetes-go-helm-wordpress) | Use the Helm API to deploy v9.6.0 of the Wordpress Helm Chart to a Kubernetes cluster.\n[Expose Deployment](kubernetes-go-exposed-deployment) | Deploy nginx to a Kubernetes cluster, and publicly expose it using a Kubernetes Service.\n\n[Use Pulumi AI](https://www.pulumi.com/ai/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=pulumi-examples) to build a new example in _any_ language.\n\n## Openstack\n\n### Python\n\n[🔝 Back to the list](#all-pulumi-examples)\n\n[Web Server](openstack-py-webserver) | Deploy an Openstack instance and open port 8000.\n\n[Use Pulumi AI](https://www.pulumi.com/ai/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=pulumi-examples) to build a new example in _any_ language.\n\n## OVHCloud\n\n### Go\n\n| Example                              | Description |\n|--------------------------------------| --------- |\n| [Kubernetes](ovhcloud-go-kubernetes) | A sample to deploy a managed Kubernetes cluster on OVHcloud |\n\n[Use Pulumi AI](https://www.pulumi.com/ai/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=pulumi-examples) to build a new example in _any_ language.\n\n## Cloud\n\n### TypeScript\n\n[🔝 Back to the list](#all-pulumi-examples)\n\nExample   | Description |\n--------- | --------- |\n[URL Shortener - Cache and HttpServer](cloud-ts-url-shortener-cache-http) | Create a simple URL shortener SPA that uses the high-level `cloud.Table` and `cloud.HttpServer` components.\n[URL Shortener - Cache](cloud-ts-url-shortener-cache) | Create a simple URL shortener SPA that uses the high-level `cloud.Table` and `cloud.API` components.\n[URL Shortener](cloud-ts-url-shortener) | Create a complete URL shortener web application that uses the high-level `cloud.Table` and `cloud.HttpServer` components.\n[Voting App](cloud-ts-voting-app) | Create a simple voting app using Redis and Python Flask.\n\n[Use Pulumi AI](https://www.pulumi.com/ai/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=pulumi-examples) to build a new example in _any_ language.\n\n### JavaScript\n\n[🔝 Back to the list](#all-pulumi-examples)\n\nExample   | Description |\n--------- | --------- |\n[API on AWS](cloud-js-api) | Create a simple REST API that counts the number of times a route has been hit.\n[Containers](cloud-js-containers) | Provision containers on Fargate.\n[HttpServer](cloud-js-httpserver) | Create a simple REST API that counts the number of times a route has been hit.\n[Thumbnailer - Machine Learning](cloud-js-thumbnailer-machine-learning) | Create a video thumbnail extractor using serverless functions, containers, and AWS Rekognition.\n[Thumbnailer](cloud-js-thumbnailer) | Create a video thumbnail extractor using serverless functions and containers.\n[Twitter](cloud-js-twitter-athena) | Query Twitter every 2 minutes, store the results in S3, and set up an Athena table and query.\n\n[Use Pulumi AI](https://www.pulumi.com/ai/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=pulumi-examples) to build a new example in _any_ language.\n\n## DigitalOcean\n\n### TypeScript\n\n[🔝 Back to the list](#all-pulumi-examples)\n\nExample   | Description |\n--------- | --------- |\n[Droplets](digitalocean-ts-loadbalanced-droplets) | Build sample architecture.\n[Kubernetes](digitalocean-ts-k8s) | Provision a DigitalOcean Kubernetes cluster.\n\n[Use Pulumi AI](https://www.pulumi.com/ai/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=pulumi-examples) to build a new example in _any_ language.\n\n### Python\n\n[🔝 Back to the list](#all-pulumi-examples)\n\nExample   | Description |\n--------- | --------- |\n[Droplets](digitalocean-py-loadbalanced-droplets) | Build sample architecture.\n[Kubernetes](digitalocean-py-k8s) | Provision a DigitalOcean Kubernetes cluster.\n\n[Use Pulumi AI](https://www.pulumi.com/ai/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=pulumi-examples) to build a new example in _any_ language.\n\n### C#\n\n[🔝 Back to the list](#all-pulumi-examples)\n\nExample   | Description |\n--------- | --------- |\n[Droplets](digitalocean-cs-loadbalanced-droplets) | Build sample architecture.\n[Kubernetes](digitalocean-cs-k8s) | Provision a DigitalOcean Kubernetes cluster.\n\n[Use Pulumi AI](https://www.pulumi.com/ai/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=pulumi-examples) to build a new example in _any_ language.\n\n## Multicloud\n\n### TypeScript\n\n[🔝 Back to the list](#all-pulumi-examples)\n\n[Try Pulumi Copilot](https://app.pulumi.com/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=pulumi-examples) and use natural-language prompts to generate Pulumi example programs in _any_ language.\n\nExample   | Description |\n--------- | --------- |\n[Buckets](multicloud-ts-buckets) | Use a single Pulumi program to provision resources in both AWS and GCP.\n\n[Use Pulumi AI](https://www.pulumi.com/ai/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=pulumi-examples) to build a new example in _any_ language.\n\n## F5\n\n### TypeScript\n\n[🔝 Back to the list](#all-pulumi-examples)\n\nExample   | Description |\n--------- | --------- |\n[BigIP Local Traffic Manager](f5bigip-ts-ltm-pool) | Provide load balancing via an F5 BigIP appliance to backend HTTP instances.\n\n[Use Pulumi AI](https://www.pulumi.com/ai/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=pulumi-examples) to build a new example in _any_ language.\n\n## Twilio\n\n### TypeScript\n\n[🔝 Back to the list](#all-pulumi-examples)\n\nExample   | Description |\n--------- | --------- |\n[Component](twilio-ts-component) | Create a custom Component Resource to parse incoming messages from Twilio.\n\n[Use Pulumi AI](https://www.pulumi.com/ai/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=pulumi-examples) to build a new example in _any_ language.\n\n## Linode\n\n### JavaScript\n\n[🔝 Back to the list](#all-pulumi-examples)\n\nExample   | Description |\n--------- | --------- |\n[Web Server](linode-js-webserver) | Build a web server on Linode.\n\n[Use Pulumi AI](https://www.pulumi.com/ai/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=pulumi-examples) to build a new example in _any_ language.\n\n## Testing\n\n[🔝 Back to the list](#all-pulumi-examples)\n\nExample   | Description |\n-----          | --------- |\n[Unit Tests in TypeScript](testing-unit-ts)      | Mock-based unit tests in TypeScript.\n[Unit Tests in Python](testing-unit-py)          | Mock-based unit tests in Python.\n[Unit Tests in Go](testing-unit-go)              | Mock-based unit tests in Go.\n[Unit Tests in C#](testing-unit-cs)              | Mock-based unit tests in C#.\n[Testing with Policies](testing-pac-ts)          | Tests based on Policy-as-Code in TypeScript.\n[Integration Testing in Go](testing-integration) | Deploy-check-destroy tests in Go.\n\n[Use Pulumi AI](https://www.pulumi.com/ai/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=pulumi-examples) to build a new example in _any_ language.\n\n## Automation API\n\n[🔝 Back to the list](#all-pulumi-examples)\n\n[Automation API Examples](https://github.com/pulumi/automation-api-examples)\n\n## Community\n\nEngage with our community to elevate your developer experience:\n\n- **Join our online [Pulumi Community on Slack](https://slack.pulumi.com/?utm_campaign=pulumi-pulumi-examples-repo&utm_source=github.com&utm_medium=welcome-slack)** - Interact with thousands of Pulumi developers for collaborative problem-solving and knowledge-sharing!\n- **Join a [Local Pulumi User Groups (PUGs)](https://www.meetup.com/pro/pugs/)**-  Attend tech-packed meetups and hands-on virtual or in-person workshops.\n- **Follow [@PulumiCorp](https://twitter.com/PulumiCorp) on X (Twitter)** - Get real-time updates, technical insights, and sneak peeks into the latest features.\n- **Subscribe to our YouTube Channel, [PulumiTV](https://www.youtube.com/@PulumiTV)** - Learn about AI / ML essentials, launches, workshops, demos and more.\n- **Follow our [LinkedIn](https://www.linkedin.com/company/pulumi/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=examples-community)** - Uncover company news, achievements, and behind-the-scenes glimpses.\n\n## Contributors\n\nMeet the [brilliant minds behind this project](https://github.com/pulumi/examples/graphs/contributors), view their profiles, and learn about their valuable contributions.\n\nWant to contribute an example? Please visit our [CONTRIBUTING](CONTRIBUTING.md) doc for details.\n\n## Pulumi developer resources\n\nDelve deeper into our project with additional resources:\n\n- [Get Started with Pulumi](https://www.pulumi.com/docs/get-started/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=examples-resources): Deploy a simple application in AWS, Azure, Google Cloud, or Kubernetes using Pulumi.\n- [Documentation](https://www.pulumi.com/docs/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=examples-resources): Learn about Pulumi concepts, follow user guides, and consult the reference documentation.\n- [Pulumi Blog](https://www.pulumi.com/blog/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=examples-resources) - Stay in the loop with our latest tech announcements, insightful articles, and updates.\n- [Registry](https://www.pulumi.com/registry/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=examples-resources): Search for packages and learn about the supported resources you need. Install the package directly into your project, browse the API documentation, and start building.\n- [Try Pulumi AI](https://www.pulumi.com/ai/?utm_campaign=pulumi-examples-github-repo&utm_source=github.com&utm_medium=examples-resources) - Use natural-language prompts to generate Pulumi infrastructure-as-code programs in any language.\n\n## Pulumi roadmap\n\nReview the planned work for the upcoming quarter and a selected backlog of issues that are on our mind but not yet scheduled on the [Pulumi Roadmap.](https://github.com/orgs/pulumi/projects/44)"
        },
        {
          "name": "alicloud-ts-ecs",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-apigateway-go-routes",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-apigateway-py-routes",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-apigateway-ts-routes",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-cs-ansible-wordpress",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-cs-assume-role",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-cs-eks",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-cs-fargate",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-cs-lambda",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-cs-langserve",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-cs-s3-folder",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-cs-secrets-manager",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-cs-webserver",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-fs-lambda-webserver",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-fs-s3-folder",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-go-ansible-wordpress",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-go-appsync",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-go-assume-role",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-go-console-slack-notification",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-go-eks",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-go-fargate",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-go-lambda-gateway",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-go-lambda",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-go-langserve",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-go-resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-go-s3-folder-component",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-go-s3-folder",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-go-secrets-manager",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-go-slackbot",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-go-webserver",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-java-ansible-wordpress",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-java-eks-minimal",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-java-webserver",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-js-containers",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-js-langserve",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-js-s3-folder-component",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-js-s3-folder",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-js-sqs-slack",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-js-webserver-component",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-js-webserver",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-py-ansible-wordpress",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-py-apigateway-lambda-serverless",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-py-apigatewayv2-eventbridge",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-py-apigatewayv2-http-api-quickcreate",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-py-appsync",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-py-assume-role",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-py-django-voting-app",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-py-dynamicresource",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-py-ec2-provisioners",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-py-ecs-instances-autoapi",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-py-eks",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-py-fargate",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-py-hub-and-spoke-network",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-py-langserve",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-py-oidc-provider-pulumi-cloud",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-py-redshift-glue-etl",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-py-resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-py-s3-folder",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-py-secrets-manager",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-py-serverless-raw",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-py-slackbot",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-py-stackreference",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-py-static-website",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-py-stepfunctions",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-py-voting-app",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-py-webserver",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-py-wordpress-fargate-rds",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-airflow",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-ansible-wordpress",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-apigateway-auth0",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-apigateway-eventbridge",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-apigateway-lambda-serverless",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-apigateway",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-apigatewayv2-eventbridge",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-apigatewayv2-http-api-quickcreate",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-apigatewayv2-http-api",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-appsync",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-assume-role",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-containers-dockerbuild",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-containers-dockerbuildcloud",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-containers",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-ec2-provisioners",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-ecs-anywhere",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-eks-distro",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-eks-hello-world",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-eks-migrate-nodegroups",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-eks",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-hello-fargate",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-k8s-mern-voting-app",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-k8s-voting-app",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-lambda-efs",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-lambda-slack",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-lambda-thumbnailer",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-langserve",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-localai-flowise",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-multi-language-lambda",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-netlify-cms-and-oauth",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-nextjs",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-oidc-provider-pulumi-cloud",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-organizations",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-pern-voting-app",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-pulumi-miniflux",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-pulumi-webhooks",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-redshift-glue-etl",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-ruby-on-rails",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-s3-folder",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-s3-lambda-copyzip",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-scheduled-function",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-secrets-manager",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-serverless-datawarehouse",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-serverless-raw",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-slackbot",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-stackreference-architecture",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-stackreference",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-static-website",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-stepfunctions",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-synthetics-canary",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-thumbnailer",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-twitter-athena",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-url-shortener-cache-http",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-voting-app",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-vpc-with-ecs-fargate-py",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-webserver",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-ts-wordpress-fargate-rds",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-yaml-ansible-wordpress",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-yaml-cue-eks",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-yaml-eks",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-yaml-langserve",
          "type": "tree",
          "content": null
        },
        {
          "name": "aws-yaml-static-website",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-cs-aci",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-cs-aks-cosmos-helm",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-cs-aks-helm",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-cs-aks-managed-identity",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-cs-aks-multicluster",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-cs-aks",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-cs-appservice-docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-cs-appservice",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-cs-call-azure-api",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-cs-containerapps",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-cs-cosmosdb-logicapp",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-cs-credential-rotation-one-set",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-cs-functions",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-cs-net5-aks-webapp",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-cs-sqlserver",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-cs-static-website",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-cs-synapse",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-go-aci",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-go-aks-helm",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-go-aks-managed-identity",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-go-aks-multicluster",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-go-aks",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-go-appservice-docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-go-call-azure-sdk",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-go-containerapps",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-go-static-website",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-java-appservice-sql",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-java-function-graal-spring",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-java-static-website",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-py-aci",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-py-aks-helm",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-py-aks-managed-identity",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-py-aks-multicluster",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-py-aks",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-py-appservice-docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-py-appservice",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-py-call-azure-sdk",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-py-containerapps",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-py-cosmosdb-logicapp",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-py-functions",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-py-loadbalancer-vm",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-py-minecraft-server",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-py-oidc-provider-pulumi-cloud",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-py-static-website",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-py-synapse",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-py-virtual-data-center",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-py-webserver",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-ts-aci",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-ts-aks-helm",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-ts-aks-managed-identity",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-ts-aks-multicluster",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-ts-aks",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-ts-appservice-docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-ts-appservice",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-ts-call-azure-sdk",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-ts-containerapps",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-ts-cosmosdb-logicapp",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-ts-functions-many",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-ts-functions",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-ts-oidc-provider-pulumi-cloud",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-ts-static-website",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-ts-synapse",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-ts-webapp-privateendpoint-vnet-injection",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-ts-webserver",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-yaml-aks-managed-identity",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-yaml-app-service",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-yaml-container-apps",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-yaml-cue-static-web-app",
          "type": "tree",
          "content": null
        },
        {
          "name": "azure-yaml-static-website",
          "type": "tree",
          "content": null
        },
        {
          "name": "black.toml",
          "type": "blob",
          "size": 0.173828125,
          "content": "[tool.black]\nline-length = 100\ntarget-version = [\"py311\", \"py312\"]\nskip-string-normalization = true\nexclude = '''\n/(\n    \\.git\n  | \\.venv\n  | build\n  | dist\n  | migrations\n)/\n'''"
        },
        {
          "name": "classic-azure-cs-botservice",
          "type": "tree",
          "content": null
        },
        {
          "name": "classic-azure-cs-msi-keyvault-rbac",
          "type": "tree",
          "content": null
        },
        {
          "name": "classic-azure-cs-vm-scaleset",
          "type": "tree",
          "content": null
        },
        {
          "name": "classic-azure-cs-webserver",
          "type": "tree",
          "content": null
        },
        {
          "name": "classic-azure-fs-aci",
          "type": "tree",
          "content": null
        },
        {
          "name": "classic-azure-fs-aks",
          "type": "tree",
          "content": null
        },
        {
          "name": "classic-azure-fs-appservice",
          "type": "tree",
          "content": null
        },
        {
          "name": "classic-azure-go-aks-multicluster",
          "type": "tree",
          "content": null
        },
        {
          "name": "classic-azure-go-webserver-component",
          "type": "tree",
          "content": null
        },
        {
          "name": "classic-azure-py-aks-multicluster",
          "type": "tree",
          "content": null
        },
        {
          "name": "classic-azure-py-arm-template",
          "type": "tree",
          "content": null
        },
        {
          "name": "classic-azure-py-hdinsight-spark",
          "type": "tree",
          "content": null
        },
        {
          "name": "classic-azure-py-msi-keyvault-rbac",
          "type": "tree",
          "content": null
        },
        {
          "name": "classic-azure-py-vm-scaleset",
          "type": "tree",
          "content": null
        },
        {
          "name": "classic-azure-py-webserver-component",
          "type": "tree",
          "content": null
        },
        {
          "name": "classic-azure-ts-aks-keda",
          "type": "tree",
          "content": null
        },
        {
          "name": "classic-azure-ts-aks-mean",
          "type": "tree",
          "content": null
        },
        {
          "name": "classic-azure-ts-api-management",
          "type": "tree",
          "content": null
        },
        {
          "name": "classic-azure-ts-appservice-devops",
          "type": "tree",
          "content": null
        },
        {
          "name": "classic-azure-ts-cosmosapp-component",
          "type": "tree",
          "content": null
        },
        {
          "name": "classic-azure-ts-hdinsight-spark",
          "type": "tree",
          "content": null
        },
        {
          "name": "classic-azure-ts-msi-keyvault-rbac",
          "type": "tree",
          "content": null
        },
        {
          "name": "classic-azure-ts-serverless-url-shortener-global",
          "type": "tree",
          "content": null
        },
        {
          "name": "classic-azure-ts-stream-analytics",
          "type": "tree",
          "content": null
        },
        {
          "name": "classic-azure-ts-vm-provisioners",
          "type": "tree",
          "content": null
        },
        {
          "name": "classic-azure-ts-vm-scaleset",
          "type": "tree",
          "content": null
        },
        {
          "name": "classic-azure-ts-webserver-component",
          "type": "tree",
          "content": null
        },
        {
          "name": "crd2pulumi-crontabs",
          "type": "tree",
          "content": null
        },
        {
          "name": "digitalocean-cs-k8s",
          "type": "tree",
          "content": null
        },
        {
          "name": "digitalocean-cs-loadbalanced-droplets",
          "type": "tree",
          "content": null
        },
        {
          "name": "digitalocean-py-k8s",
          "type": "tree",
          "content": null
        },
        {
          "name": "digitalocean-py-loadbalanced-droplets",
          "type": "tree",
          "content": null
        },
        {
          "name": "digitalocean-ts-k8s",
          "type": "tree",
          "content": null
        },
        {
          "name": "digitalocean-ts-loadbalanced-droplets",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-cs-multi-container-app",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-py-multi-container-app",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-ts-multi-container-app",
          "type": "tree",
          "content": null
        },
        {
          "name": "dockerbuildcloud-ts",
          "type": "tree",
          "content": null
        },
        {
          "name": "equinix-py-webserver",
          "type": "tree",
          "content": null
        },
        {
          "name": "equinix-ts-webserver",
          "type": "tree",
          "content": null
        },
        {
          "name": "example-readme-template.md.txt",
          "type": "blob",
          "size": 4.1904296875,
          "content": "<!--\nUse this template as a quick starting point when writing a README for your Pulumi example. To start, copy this file to your example folder and rename it to `README.md`. Once you've reviewed the template, delete the comments and begin writing your accompanying README for your example Pulumi application.\n\nUse GitHub's \"Preview Changes\" functionality to make sure everything is formatted correctly in Markdown.\n\nReaders should be able to follow your example from beginning to end. Please be sure to list all prerequisites, and test your guide from start to finish. Cut and paste commands from the README into your terminal to make sure there aren't typos or inaccuracies. If you find yourself executing a command that isn't in the README, make sure to add it so the readers end up with a complete tutorial. See [EC2 Linux WebServer Instance](https://www.pulumi.com/docs/tutorials/aws/ec2-webserver/) for an example of a tutorial following this template. Note that the featured tutorial is multi-language whereas the exampleas in this repo are cloud and language-specific (except for the ones with the `cloud` prefix).\n-->\n\n\n# [App Description] using [Service or Tool]\n\n<!-- Use Title Case for all Titles -->\n<!-- Most of the examples are transformed into tutorials on https://www.pulumi.com/docs/tutorials/ and are sorted by cloud and language. There is no need to include the cloud provider name or the language in the title.\n\n<!-- Our examples have a specific structure. Learn more at CONTRIBUTING.md -->\n\nIntroductory paragraph about the example that explains what problem it solves and why the reader should care. If possible, include use cases.\n\nIn this tutorial, we will [configure/set up/build/deploy] [some thing]...\n\nWhen you're finished, you'll be able to...\n\n## Prerequisites\n\n<!-- The Prerequisites section includes an ordered list of required installation and configuration steps before the reader can deploy the Pulumi example. -->\n\n1. [Install Pulumi](https://www.pulumi.com/docs/get-started/install/)\n1. Configure [cloud] <!-- We have setup pages for our popular cloud providers at https://www.pulumi.com/docs/intro/cloud-providers/<cloud-provider>/setup/ -->\n1. Install [language runtime] <!-- We have setup pages for our supported language runtimes at https://www.pulumi.com/docs/intro/languages/<language>/ -->\n1. (Optional) List any other accounts needed, such as Twitter, Slack, or other services.\n\n<!-- Example:\n1. [Install Pulumi](https://www.pulumi.com/docs/get-started/install/)\n1. [Configure your AWS Credentials](https://www.pulumi.com/docs/intro/cloud-providers/aws/setup/)\n1. [Install Node.js](https://www.pulumi.com/docs/intro/languages/javascript/)\n-->\n\n## Deploy the App\n\n### Step 1: Create a directory and cd into it\n\nFor Pulumi examples, we typically start by creating a directory and changing into it. Then, we create a new Pulumi project from a template. For example, `azure-javascript`.\n\nFirst....\n\nNext...\n\nFinally...\n\n![Alt text for screen readers](/path/to/img.png)\n\n<!--\nIf showing a command, explain the command first by talking about what it does. Then show the command and its output. If the output is too long, you can clip it with `...` and only show the relevant parts. If your README includes images, make sure to include an alt text.\n\nNow transition to the next step by telling the reader what's next. If you're adding to a file, make sure to clearly explain that.\n-->\n\n\n### Step 2: Sentence case\nAnother introduction\n\nYour content\n\nTransition to the next step.\n\n### Step 3\n\nAnother introduction\n\nYour content\n\nTransition to the next step.\n\n## Clean Up\n\n<!--We generally ask the reader to run `pulumi destroy` and tear down the resources to avoid incurring any costs. -->\n\n\n## Summary\n\nIn this tutorial, you [configured/set up/built/deployed] [something]. Now you can....\n\n<!-- Give a quick recap of what the readers have learned and optionally provide places for further exploration. -->\n\n## Next Steps\n\n<!-- Optionally include an unordered list of relevant Pulumi tutorials. -->\n\n<!-- Example:\n- [Create a load-balanced, hosted NGINX container service](https://www.pulumi.com/docs/tutorials/aws/ecs-fargate/)\n- [Create an EC2-based WebServer and associated infrastructure](https://www.pulumi.com/docs/tutorials/aws/ec2-webserver/)\n-->\n\n"
        },
        {
          "name": "f5bigip-ts-ltm-pool",
          "type": "tree",
          "content": null
        },
        {
          "name": "gcp-cs-functions",
          "type": "tree",
          "content": null
        },
        {
          "name": "gcp-cs-gke",
          "type": "tree",
          "content": null
        },
        {
          "name": "gcp-go-functions-raw",
          "type": "tree",
          "content": null
        },
        {
          "name": "gcp-go-functions",
          "type": "tree",
          "content": null
        },
        {
          "name": "gcp-go-gke",
          "type": "tree",
          "content": null
        },
        {
          "name": "gcp-go-instance",
          "type": "tree",
          "content": null
        },
        {
          "name": "gcp-go-webserver",
          "type": "tree",
          "content": null
        },
        {
          "name": "gcp-java-gke-hello-world",
          "type": "tree",
          "content": null
        },
        {
          "name": "gcp-js-webserver",
          "type": "tree",
          "content": null
        },
        {
          "name": "gcp-py-cloudrun-cloudsql",
          "type": "tree",
          "content": null
        },
        {
          "name": "gcp-py-functions",
          "type": "tree",
          "content": null
        },
        {
          "name": "gcp-py-gke",
          "type": "tree",
          "content": null
        },
        {
          "name": "gcp-py-instance-nginx",
          "type": "tree",
          "content": null
        },
        {
          "name": "gcp-py-network-component",
          "type": "tree",
          "content": null
        },
        {
          "name": "gcp-py-oidc-provider-pulumi-cloud",
          "type": "tree",
          "content": null
        },
        {
          "name": "gcp-py-serverless-raw",
          "type": "tree",
          "content": null
        },
        {
          "name": "gcp-py-webserver",
          "type": "tree",
          "content": null
        },
        {
          "name": "gcp-ts-cloudrun",
          "type": "tree",
          "content": null
        },
        {
          "name": "gcp-ts-docker-gcr-cloudrun",
          "type": "tree",
          "content": null
        },
        {
          "name": "gcp-ts-functions",
          "type": "tree",
          "content": null
        },
        {
          "name": "gcp-ts-gke-hello-world",
          "type": "tree",
          "content": null
        },
        {
          "name": "gcp-ts-gke-serviceaccount",
          "type": "tree",
          "content": null
        },
        {
          "name": "gcp-ts-gke",
          "type": "tree",
          "content": null
        },
        {
          "name": "gcp-ts-k8s-ruby-on-rails-postgresql",
          "type": "tree",
          "content": null
        },
        {
          "name": "gcp-ts-serverless-raw",
          "type": "tree",
          "content": null
        },
        {
          "name": "gcp-ts-slackbot",
          "type": "tree",
          "content": null
        },
        {
          "name": "google-native-ts-functions",
          "type": "tree",
          "content": null
        },
        {
          "name": "google-native-ts-gke-config-connector",
          "type": "tree",
          "content": null
        },
        {
          "name": "google-native-ts-k8s-python-postgresql",
          "type": "tree",
          "content": null
        },
        {
          "name": "google-native-ts-k8s-ruby-on-rails-postgresql",
          "type": "tree",
          "content": null
        },
        {
          "name": "kubernetes-cs-guestbook",
          "type": "tree",
          "content": null
        },
        {
          "name": "kubernetes-cs-helm-release-wordpress",
          "type": "tree",
          "content": null
        },
        {
          "name": "kubernetes-go-configmap-rollout",
          "type": "tree",
          "content": null
        },
        {
          "name": "kubernetes-go-exposed-deployment",
          "type": "tree",
          "content": null
        },
        {
          "name": "kubernetes-go-guestbook",
          "type": "tree",
          "content": null
        },
        {
          "name": "kubernetes-go-helm-release-wordpress",
          "type": "tree",
          "content": null
        },
        {
          "name": "kubernetes-go-helm-wordpress",
          "type": "tree",
          "content": null
        },
        {
          "name": "kubernetes-py-exposed-deployment",
          "type": "tree",
          "content": null
        },
        {
          "name": "kubernetes-py-guestbook",
          "type": "tree",
          "content": null
        },
        {
          "name": "kubernetes-py-helm-release-wordpress",
          "type": "tree",
          "content": null
        },
        {
          "name": "kubernetes-py-jenkins",
          "type": "tree",
          "content": null
        },
        {
          "name": "kubernetes-py-nginx",
          "type": "tree",
          "content": null
        },
        {
          "name": "kubernetes-ts-configmap-rollout",
          "type": "tree",
          "content": null
        },
        {
          "name": "kubernetes-ts-exposed-deployment",
          "type": "tree",
          "content": null
        },
        {
          "name": "kubernetes-ts-guestbook",
          "type": "tree",
          "content": null
        },
        {
          "name": "kubernetes-ts-helm-release-wordpress",
          "type": "tree",
          "content": null
        },
        {
          "name": "kubernetes-ts-helm-wordpress",
          "type": "tree",
          "content": null
        },
        {
          "name": "kubernetes-ts-jenkins",
          "type": "tree",
          "content": null
        },
        {
          "name": "kubernetes-ts-multicloud",
          "type": "tree",
          "content": null
        },
        {
          "name": "kubernetes-ts-nginx",
          "type": "tree",
          "content": null
        },
        {
          "name": "kubernetes-ts-s3-rollout",
          "type": "tree",
          "content": null
        },
        {
          "name": "kubernetes-ts-sock-shop",
          "type": "tree",
          "content": null
        },
        {
          "name": "kubernetes-ts-staged-rollout-with-prometheus",
          "type": "tree",
          "content": null
        },
        {
          "name": "kubernetes-yaml",
          "type": "tree",
          "content": null
        },
        {
          "name": "libvirt-py-vm",
          "type": "tree",
          "content": null
        },
        {
          "name": "linode-js-webserver",
          "type": "tree",
          "content": null
        },
        {
          "name": "misc",
          "type": "tree",
          "content": null
        },
        {
          "name": "multicloud-ts-buckets",
          "type": "tree",
          "content": null
        },
        {
          "name": "nx-monorepo",
          "type": "tree",
          "content": null
        },
        {
          "name": "openstack-py-webserver",
          "type": "tree",
          "content": null
        },
        {
          "name": "ovhcloud-go-kubernetes",
          "type": "tree",
          "content": null
        },
        {
          "name": "policy-packs",
          "type": "tree",
          "content": null
        },
        {
          "name": "random-yaml-cue",
          "type": "tree",
          "content": null
        },
        {
          "name": "random-yaml",
          "type": "tree",
          "content": null
        },
        {
          "name": "redis-cloud-aws-ts",
          "type": "tree",
          "content": null
        },
        {
          "name": "secrets-provider",
          "type": "tree",
          "content": null
        },
        {
          "name": "stack-readme-cs",
          "type": "tree",
          "content": null
        },
        {
          "name": "stack-readme-go",
          "type": "tree",
          "content": null
        },
        {
          "name": "stack-readme-java",
          "type": "tree",
          "content": null
        },
        {
          "name": "stack-readme-py",
          "type": "tree",
          "content": null
        },
        {
          "name": "stack-readme-ts",
          "type": "tree",
          "content": null
        },
        {
          "name": "stack-readme-yaml",
          "type": "tree",
          "content": null
        },
        {
          "name": "testing-integration-py",
          "type": "tree",
          "content": null
        },
        {
          "name": "testing-integration",
          "type": "tree",
          "content": null
        },
        {
          "name": "testing-pac-ts",
          "type": "tree",
          "content": null
        },
        {
          "name": "testing-unit-cs-mocks",
          "type": "tree",
          "content": null
        },
        {
          "name": "testing-unit-cs-top-level-program",
          "type": "tree",
          "content": null
        },
        {
          "name": "testing-unit-cs",
          "type": "tree",
          "content": null
        },
        {
          "name": "testing-unit-fs-mocks",
          "type": "tree",
          "content": null
        },
        {
          "name": "testing-unit-go-components",
          "type": "tree",
          "content": null
        },
        {
          "name": "testing-unit-go",
          "type": "tree",
          "content": null
        },
        {
          "name": "testing-unit-py",
          "type": "tree",
          "content": null
        },
        {
          "name": "testing-unit-ts-mocks-jest",
          "type": "tree",
          "content": null
        },
        {
          "name": "testing-unit-ts",
          "type": "tree",
          "content": null
        },
        {
          "name": "tslint.json",
          "type": "blob",
          "size": 4.515625,
          "content": "{\n    \"rules\": {\n        \"align\": [\n            true,\n            \"parameters\",\n            \"statements\"\n        ],\n        \"ban\": false,\n        \"class-name\": true,\n        \"comment-format\": [\n            true,\n            \"check-space\"\n        ],\n        \"curly\": true,\n        \"eofline\": true,\n        \"file-header\": [\n            true,\n            \"Copyright (\\\\d{4}-)?\\\\d{4}, Pulumi Corporation.\"\n        ],\n        \"forin\": true,\n        \"indent\": [\n            true,\n            \"spaces\"\n        ],\n        \"interface-name\": false,\n        \"jsdoc-format\": false,\n        \"label-position\": true,\n        \"member-access\": false,\n        \"member-ordering\": [\n          true,\n          {\n            \"order\": [\n              {\n                \"name\": \"static field\",\n                \"kinds\": [\n                  \"public-static-field\",\n                  \"protected-static-field\",\n                  \"private-static-field\"\n                ]\n              },\n              {\n                \"name\": \"instance field\",\n                \"kinds\": [\n                  \"public-instance-field\",\n                  \"protected-instance-field\",\n                  \"private-instance-field\"\n                ]\n              },\n              {\n                \"name\": \"static method\",\n                \"kinds\": [\n                  \"public-static-method\",\n                  \"private-static-method\",\n                  \"protected-static-method\",\n                  \"public-static-accessor\",\n                  \"protected-static-accessor\",\n                  \"private-static-accessor\"\n                ]\n              },\n              {\n                \"name\": \"instance method\",\n                \"kinds\": [\n                  \"public-constructor\",\n                  \"protected-constructor\",\n                  \"private-constructor\",\n                  \"public-instance-method\",\n                  \"protected-instance-method\",\n                  \"private-instance-method\",\n                  \"public-instance-accessor\",\n                  \"protected-instance-accessor\",\n                  \"private-instance-accessor\"\n                ]\n              }\n            ]\n          }\n        ],\n        \"no-any\": false,\n        \"no-arg\": true,\n        \"no-bitwise\": false,\n        \"no-conditional-assignment\": false,\n        \"no-consecutive-blank-lines\": false,\n        \"no-console\": [\n            true,\n            \"debug\",\n            \"info\",\n            \"time\",\n            \"timeEnd\",\n            \"trace\"\n        ],\n        \"no-construct\": true,\n        \"no-debugger\": true,\n        \"no-duplicate-variable\": true,\n        \"no-empty\": true,\n        \"no-eval\": true,\n        \"no-inferrable-types\": false,\n        \"no-internal-module\": true,\n        \"no-parameter-properties\": false,\n        \"no-require-imports\": false,\n        \"no-shadowed-variable\": false,\n        \"no-string-literal\": false,\n        \"no-switch-case-fall-through\": true,\n        \"no-trailing-whitespace\": true,\n        \"no-unused-expression\": true,\n        \"no-use-before-declare\": false,\n        \"no-var-keyword\": true,\n        \"no-var-requires\": false,\n        \"object-literal-sort-keys\": false,\n        \"one-line\": [\n            true,\n            \"check-open-brace\",\n            \"check-whitespace\"\n        ],\n        \"ordered-imports\": true,\n        \"prefer-const\": true,\n        \"quotemark\": [\n            true,\n            \"double\",\n            \"avoid-escape\"\n        ],\n        \"radix\": true,\n        \"semicolon\": true,\n        \"switch-default\": true,\n        \"trailing-comma\": [\n            true,\n            {\n                \"multiline\": \"always\",\n                \"singleline\": \"never\"\n            }\n        ],\n        \"triple-equals\": [\n            true,\n            \"allow-null-check\"\n        ],\n        \"typedef\": [\n            false,\n            \"call-signature\",\n            \"parameter\",\n            \"property-declaration\",\n            \"variable-declaration\",\n            \"member-variable-declaration\"\n        ],\n        \"typedef-whitespace\": [\n            true,\n            {\n                \"call-signature\": \"nospace\",\n                \"index-signature\": \"nospace\",\n                \"parameter\": \"nospace\",\n                \"property-declaration\": \"nospace\",\n                \"variable-declaration\": \"nospace\"\n            }\n        ],\n        \"variable-name\": [\n            true,\n            \"check-format\",\n            \"allow-leading-underscore\",\n            \"ban-keywords\"\n        ],\n        \"whitespace\": [\n            true,\n            \"check-branch\",\n            \"check-decl\",\n            \"check-module\",\n            \"check-separator\",\n            \"check-type\"\n        ]\n    }\n}\n"
        },
        {
          "name": "twilio-ts-component",
          "type": "tree",
          "content": null
        },
        {
          "name": "webserver-yaml-json",
          "type": "tree",
          "content": null
        },
        {
          "name": "webserver-yaml",
          "type": "tree",
          "content": null
        },
        {
          "name": "yaml-math-and-objects",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}