{
  "metadata": {
    "timestamp": 1736564386479,
    "page": 982,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjk5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "cogentapps/chat-with-gpt",
      "stars": 2326,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0146484375,
          "content": "**/node_modules"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 2.0546875,
          "content": "**/config.yaml\n**/config.yml\n*.sqlite\n*.db\n.gitpod.yml\n\n# Logs\nlogs\n*.log\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\nlerna-debug.log*\n.pnpm-debug.log*\n\n# Diagnostic reports (https://nodejs.org/api/report.html)\nreport.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json\n\n# Runtime data\npids\n*.pid\n*.seed\n*.pid.lock\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage\n*.lcov\n\n# nyc test coverage\n.nyc_output\n\n# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# Bower dependency directory (https://bower.io/)\nbower_components\n\n# node-waf configuration\n.lock-wscript\n\n# Compiled binary addons (https://nodejs.org/api/addons.html)\nbuild/Release\n\n# Dependency directories\nnode_modules/\njspm_packages/\n\n# Snowpack dependency directory (https://snowpack.dev/)\nweb_modules/\n\n# TypeScript cache\n*.tsbuildinfo\n\n# Optional npm cache directory\n.npm\n\n# Optional eslint cache\n.eslintcache\n\n# Optional stylelint cache\n.stylelintcache\n\n# Microbundle cache\n.rpt2_cache/\n.rts2_cache_cjs/\n.rts2_cache_es/\n.rts2_cache_umd/\n\n# Optional REPL history\n.node_repl_history\n\n# Output of 'npm pack'\n*.tgz\n\n# Yarn Integrity file\n.yarn-integrity\n\n# dotenv environment variable files\n.env\n.env.development.local\n.env.test.local\n.env.production.local\n.env.local\n\n# parcel-bundler cache (https://parceljs.org/)\n.cache\n.parcel-cache\n\n# Next.js build output\n.next\nout\n\n# Nuxt.js build / generate output\n.nuxt\n# dist\n\n# Gatsby files\n.cache/\n# Comment in the public line in if your project uses Gatsby and not Next.js\n# https://nextjs.org/blog/next-9-1#public-directory-support\n# public\n\n# vuepress build output\n.vuepress/dist\n\n# vuepress v2.x temp and cache directory\n.temp\n.cache\n\n# Docusaurus cache and generated files\n.docusaurus\n\n# Serverless directories\n.serverless/\n\n# FuseBox cache\n.fusebox/\n\n# DynamoDB Local files\n.dynamodb/\n\n# TernJS port file\n.tern-port\n\n# Stores VSCode versions used for testing VSCode extensions\n.vscode-test\n\n# yarn v2\n.yarn/cache\n.yarn/unplugged\n.yarn/build-state.yml\n.yarn/install-state.gz\n.pnp.*"
        },
        {
          "name": ".gitpod.yml",
          "type": "blob",
          "size": 0.146484375,
          "content": "tasks:\n  - init: cd app && npm install\n    command: cd app && npm run start\n  - init: cd server && npm install\n    command: cd server && npm run start"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.0078125,
          "content": "FROM node:19-bullseye-slim AS build\n\nRUN apt-get update && \\\n    apt-get install -y \\\n    git\n\n# Set working directory\nWORKDIR /app\n\n# Copy package.json and tsconfig.json\nCOPY ./app/package.json ./\nCOPY ./app/tsconfig.json ./\n\n# Install Node.js dependencies\nRUN npm install\n\nCOPY ./app/vite.config.js ./\n\n# Copy public, and src directories\nCOPY ./app/public ./public\nCOPY ./app/src ./src\nCOPY ./app/index.html ./\n\n# Set environment variables\nENV NODE_ENV=production\n\n# Build the application\nRUN npm run build\n\nFROM node:19-bullseye-slim AS server\n\n# Set the working directory\nWORKDIR /app\n\nCOPY ./server/package.json ./server/tsconfig.json ./\n\n# Install Node.js dependencies from package.json\nRUN npm install\n\n# Copy the rest of the application code into the working directory\nCOPY ./server/src ./src\n\nRUN CI=true sh -c \"cd /app && npm run start && rm -rf data\"\n\nCOPY --from=build /app/build /app/public\n\nLABEL org.opencontainers.image.source=\"https://github.com/cogentapps/chat-with-gpt\"\nENV PORT 3000\n\nCMD [\"npm\", \"run\", \"start\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.04296875,
          "content": "MIT License\n\nCopyright (c) 2023 Cogent Apps\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.083984375,
          "content": "# Chat with GPT\n\nChat with GPT is an open-source, unofficial ChatGPT app with extra features and more ways to customize your experience. It connects ChatGPT with ElevenLabs to give ChatGPT a realistic human voice.\n\nTry out the hosted version at: https://www.chatwithgpt.ai\n\nOr [self-host with Docker](#running-on-your-own-computer).\n\nPowered by the new ChatGPT API from OpenAI, this app has been developed using TypeScript + React. We welcome pull requests from the community!\n\nhttps://user-images.githubusercontent.com/127109874/223613258-0c4fef2e-1d05-43a1-ac38-e972dafc2f98.mp4\n\n## Features\n\n- üöÄ **Fast** response times.\n- üîé **Search** through your past chat conversations.\n- üìÑ View and customize the System Prompt - the **secret prompt** the system shows the AI before your messages.\n- üå° Adjust the **creativity and randomness** of responses by setting the Temperature setting. Higher temperature means more creativity.\n- üí¨ Give ChatGPT AI a **realistic human voice** by connecting your ElevenLabs text-to-speech account, or using your browser's built-in text-to-speech.\n- üé§ **Speech recognition** powered by OpenAI Whisper.\n- ‚úâ **Share** your favorite chat sessions online using public share URLs.\n- üìã Easily **copy-and-paste** ChatGPT messages.\n- ‚úèÔ∏è Edit your messages\n- üîÅ Regenerate ChatGPT messages\n- üñº **Full markdown support** including code, tables, and math.\n- ü´∞ Pay for only what you use with the ChatGPT API.\n\n## Bring your own API keys\n\n### OpenAI\n\nTo get started with Chat with GPT, you will need to add your OpenAI API key on the settings screen. Click \"Connect your OpenAI account to get started\" on the home page to begin. Once you have added your API key, you can start chatting with ChatGPT.\n\nYour API key is stored only on your device and is never transmitted to anyone except OpenAI. Please note that OpenAI API key usage is billed at a pay-as-you-go rate, separate from your ChatGPT subscription.\n\n### ElevenLabs\n\nTo use the realistic AI text-to-speech feature, you will need to add your ElevenLabs API key by clicking \"Play\" next to any message.\n\nYour API key is stored only on your device and never transmitted to anyone except ElevenLabs.\n\n## Running on your own computer\n\nTo run on your own device, you can use Docker:\n\n```\ndocker run -v $(pwd)/data:/app/data -p 3000:3000 ghcr.io/cogentapps/chat-with-gpt:release\n```\n\nThen navigate to http://localhost:3000 to view the app.\n\n### Store your API keys on the server\n\nFor convenience, you can store your API keys on your computer instead of entering them in the browser.\n\n*Warning:* Be very careful doing this if anyone else has access to your self-hosted version of the app. They will be able to use the app through your API key as well.\n\nCreate a file called `config.yaml` in your `data` folder with the following contents:\n\n```\nservices:\n  openai:\n    apiKey: (your api key)\n  elevenlabs:\n    apiKey: (your api key)\n```\n\nand restart the server. Login is required.\n\n## Updating\n\n```\ndocker pull ghcr.io/cogentapps/chat-with-gpt:release\n```\n\n## License\n\nChat with GPT is licensed under the MIT license. See the LICENSE file for more information.\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "server",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}