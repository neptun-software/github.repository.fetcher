{
  "metadata": {
    "timestamp": 1736563567802,
    "page": 38,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjQw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "man-group/dtale",
      "stars": 4815,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".coveragerc",
          "type": "blob",
          "size": 0.1162109375,
          "content": "[report]\nomit =\n    setup.py\n    dtale/static/**\n    dtale/templates/**\n\nexclude_lines =\n    if __name__ == .__main__.:"
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0263671875,
          "content": "node_modules\ncustom_loaders"
        },
        {
          "name": ".flake8",
          "type": "blob",
          "size": 0.15625,
          "content": "[flake8]\nmax_line_length = 120\nselect = E, W, F\nignore = W503,E203\nexclude = node_modules,ci,build,docs,custom_loaders\nper-file-ignores =\n  dtale/views.py:E402\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0322265625,
          "content": "dtale/static/* linguist-vendored\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.63671875,
          "content": "*.pyc\n*.egg-info\n\n# test output files\n.cache\n.coverage\n.DS_store\n.eggs\n.nyc_output\njs_junit.xml\njunit.xml\nduplicates.xml\ntap-output\nresults.tap\nTEST-dtale-tests.xml\ncoverage.xml\nhtmlcov/\nfrontend/JS_coverage/\n\nbuild/\ndist/\nfrontend/node_modules/\nfrontend/npm-debug.log\n.idea\n.tern-port\n.vscode\n.project\n.pydevproject\n.python-version\ndocs/source/dtale*rst\ndocs/source/modules.rst\njupyterhub.sqlite\njupyterhub_cookie_secret\n\n# built JS files\ndtale/static/dist\ndtale/static/dash\njest_tmp\n\n# custom CLI loaders\ncustom_loaders/\n\n# django test app\ndocs/django_test/dtale_test/db.sqlite3\nfrontend/package-lock.json\n\n# arcticdb test data\ntests/data/arcticdb/*\n"
        },
        {
          "name": ".isort.cfg",
          "type": "blob",
          "size": 0.2275390625,
          "content": "[settings]\nnot_skip =\n    dtale/__init__.py\n    dtale/dash_application/components/__init__.py\ndefault_section = THIRDPARTY\nknown_first_party = dtale\nknown_flask = flask\nsections = FUTURE,STDLIB,FLASK,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"
        },
        {
          "name": ".tern-project",
          "type": "blob",
          "size": 0.205078125,
          "content": "{\n    \"libs\": [\n        \"browser\"\n    ],\n    \"loadEagerly\": [\n        \"static/**/*.js\",\n        \"static/**/*.jsx\"\n    ],\n    \"plugins\": {\n        \"es_modules\": {},\n        \"node\": {},\n        \"jsx\": {}\n    }\n}\n"
        },
        {
          "name": "CHANGES.md",
          "type": "blob",
          "size": 62.77734375,
          "content": "## Changelog\n\n### 3.16.1 (2024-12-13)\n* [#894](https://github.com/man-group/dtale/issues/894): updates to 'update-settings' endpoint for security\n\n### 3.16.0 (2024-12-3)\n* [#891](https://github.com/man-group/dtale/issues/891): row details popup\n* front-end package updates\n* functionality to turn row expanders on/off\n* updated CircleCI build script to use pip instead of setup.py for dependency installation\n\n### 3.15.1 (2024-10-25)\n* Un-pinned `dash-bootstrap-components` dependency\n\n### 3.15.0 (2024-10-24)\n* Un-pinned `Flask` dependency\n* Updated `flask-ngrok` to an optional dependency\n* Remove dependency on `contourpy`\n\n### 3.14.1 (2024-9-10)\n* Updated handling of custom queries in chart builder to eliminate security vulnerability\n\n### 3.14.0 (2024-9-5)\n* [#880](https://github.com/man-group/dtale/issues/880): int -> bool type conversion updates\n* [#876](https://github.com/man-group/dtale/issues/876): Raw Pandas zoom\n\n### 3.13.1 (2024-6-28)\n* [#870](https://github.com/man-group/dtale/issues/870): updated Flask SECRET_EKY to be dynamically generated\n\n### 3.13.0 (2024-6-26)\n* [#868](https://github.com/man-group/dtale/issues/868): added toggle for missing/populated filter\n* [#864](https://github.com/man-group/dtale/issues/864): adding main_title params to `dtale.show`\n* front-end package upgrades\n\n### 3.12.0 (2024-4-30)\n* [#851](https://github.com/man-group/dtale/issues/851): allowing offline_chart to return plotly objects\n* [#847](https://github.com/man-group/dtale/issues/847): Add 'Select All' option for duplicate check UI\n* [#856](https://github.com/man-group/dtale/issues/856): adding 'Select All' to cumsum and y-axis select in charts\n* [#857](https://github.com/man-group/dtale/issues/857): Aggregations popup\n* [#858](https://github.com/man-group/dtale/issues/858): added 'view_data' property to data instances\n* [#854](https://github.com/man-group/dtale/issues/854): Raw Pandas Output popup\n\n### 3.11.0 (2024-3-6)\n* Added extra security around whether a custom query can be used to protected against server-side attacks\n\n### 3.10.0 (2024-1-31)\n* Updated front-end packages (namely redux)\n* [#843](https://github.com/man-group/dtale/issues/843): Chart export background colors\n* [#787](https://github.com/man-group/dtale/issues/787): force colab host to 0.0.0.0\n* [#840](https://github.com/man-group/dtale/issues/840): hide 'View Duplicates' button until column is selected\n* [#837](https://github.com/man-group/dtale/issues/837): frequency table search bug\n\n### 3.9.0 (2024-1-5)\n* Updated web data uploads to be turned off by default\n* [#835](https://github.com/man-group/dtale/issues/835): fixed bug with `dtale.show(open_browser=True)`\n* [#834](https://github.com/man-group/dtale/issues/834): fix for plotly tooltips in charts\n* [#831](https://github.com/man-group/dtale/issues/831): time difference functionality\n\n### 3.8.1 (2023-11-29)\n* [#823](https://github.com/man-group/dtale/issues/823): wrap skew/kurtosis calculations in try/except for pyarrow\n\n### 3.8.0 (2023-11-27)\n* [#823](https://github.com/man-group/dtale/issues/823): only run skew/kurtosis calculations when series has those functions\n* [#825](https://github.com/man-group/dtale/issues/825): unpin werkzeug dependency\n* front-end package upgrades (axios 1.6.0)\n* [#827](https://github.com/man-group/dtale/issues/827): allowing user's to override the host used by `Flask.run`\n* [#724](https://github.com/man-group/dtale/issues/724): updated logging to use a dedicated dtale logger when not invoking from CLI\n* [#822](https://github.com/man-group/dtale/issues/822): fixed bug with dataframe filters not being persisted to chart builder initially\n* [#816](https://github.com/man-group/dtale/issues/816): frequencies grid filtering\n* front-end package upgrades (styled_components)\n* adjusted Pillow dependency\n\n### 3.7.0 (2023-10-2)\n* Turn off \"Custom Filter\" functionality by default\n* [#811](https://github.com/man-group/dtale/issues/811): weekday name function\n\n### 3.6.0 (2023-9-29)\n* [#804](https://github.com/man-group/dtale/issues/804): updated summarize code to string join using a pipe instead of comma\n* [#805](https://github.com/man-group/dtale/issues/805): allow D-Tale to be run under HTTPS\n* [#803](https://github.com/man-group/dtale/issues/803): Frequency Table\n\n### 3.5.0 (2023-9-14)\n* [#796](https://github.com/man-group/dtale/issues/796): option to hide ribbon n & column menus\n* [#797](https://github.com/man-group/dtale/issues/797): added 'Counts & Percentages' summarize function\n* [#800](https://github.com/man-group/dtale/issues/800): heatmap locked column fix\n* [#798](https://github.com/man-group/dtale/issues/798): added 'Duplicate' function to column menu\n\n### 3.4.0 (2023-9-5)\n* [#792](https://github.com/man-group/dtale/issues/792): adding in percentage to 'Value Counts' describe chart\n* [#788](https://github.com/man-group/dtale/issues/788): fix for when column names have a pipe character\n* [#786](https://github.com/man-group/dtale/issues/786): updates to shutdown\n* update to AcrticDB `get_num_rows` handling\n\n### 3.3.0 (2023-7-19)\n* [#779](https://github.com/man-group/dtale/issues/779): dtale.show(background_mode) not working\n* [#778](https://github.com/man-group/dtale/issues/778): Bump matplotlib to >=3.7.0\n* dependency upgrades\n\n### 3.2.0 (2023-7-5)\n* [#773](https://github.com/man-group/dtale/issues/773): creating a comma-separated string of values from a GroupBy\n* [#771](https://github.com/man-group/dtale/issues/771): Support for Python 3.11\n \n### 3.1.7 (2023-6-29)\n* Fixes for ArcticDB date filtering\n\n### 3.1.6 (2023-6-28)\n* Added support to `/dtale/data/` endpoint for ArcticDB instances hosted using gunicorn\n\n### 3.1.0 (2023-6-23)\n* Added handling for ArcticDB locations with high libraries & symbols\n* Added handling for wide dataframes\n* Allowed ArcticDB data paths to passed in from URLs\n\n### 3.0.0 (2023-6-9)\n* Added support for ArcticDB as the storage mechanism for pandas dataframes\n\n### 2.16.0 (2023-5-16)\n* [#759](https://github.com/man-group/dtale/issues/759): freeze header menu option\n* Updated data_id storage to use strings rather than numbers\n* Fixed bug where calling 'cleanup' didn't cleanup instance name reference\n\n### 2.15.2 (2023-5-1)\n* tweaked requirements for older versions of python\n\n### 2.15.1 (2023-4-29)\n* updates to how app's _override_routes rebuilds url_map\n* requirement tweaks to werkzeug\n\n### 2.15.0 (2023-4-28)\n* [#490](https://github.com/man-group/dtale/issues/490): stratified random sample in charts\n* Updated sklearn column_builders to handle import failures\n\n### 2.14.4 (2023-4-19)\n* Added dataclasses requirement for python environments >= 3.6 and < 3.7\n\n### 2.14.3 (2023-4-19)\n* backwards compatability for pandas `string` dtype and tests\n\n### 2.14.2 (2023-4-18)\n* removed extraneous dependency `soupsieve`\n\n### 2.14.1 (2023-4-17)\n* update requirements to no longer pin and allow for older versions of packages\n* update unit tests to allow for backwards compatibility with older versions of mock library\n* update how `Flask.url_for` is detected rather than pinning to specific version of python\n* separated black & Flake8 code formatting checks into own job in CircleCI\n\n### 2.14.0 (2023-4-10)\n* [#748](https://github.com/man-group/dtale/issues/748): update auto-generated column deletion code\n* [#746](https://github.com/man-group/dtale/issues/746): editing cells while filtering\n* [#743](https://github.com/man-group/dtale/issues/743): passing a list of columns to 'allow_cell_edits'\n* [#742](https://github.com/man-group/dtale/issues/742): custom edit options bug\n* updates for pandas 2.0.0\n* bump redis & replace node-sass with sass\n\n### 2.13.0 (2023-3-3)\n* [#685](https://github.com/man-group/dtale/issues/685): Histogram chart builder\n* [#730](https://github.com/man-group/dtale/issues/730): fix for exporting charts with multiple y-axis\n\n### 2.12.3 (2023-2-22)\n* Updated D-Tale streamlit startup command to have a wider exception handler for importing `streamlit.server`\n\n### 2.12.2 (2023-2-7)\n* [#726](https://github.com/man-group/dtale/issues/726): updated `global_state.set_app_settings` to persist updates to instance settings\n\n### 2.12.1 (2023-2-2)\n* [#726](https://github.com/man-group/dtale/issues/726): fix for turning off header editor using `dtale.show`\n\n### 2.12.0 (2023-2-2)\n* [#726](https://github.com/man-group/dtale/issues/726): added option to turn off header editor\n* [#700](https://github.com/man-group/dtale/issues/700): export all charts in one HTML file\n* [#592](https://github.com/man-group/dtale/issues/592): highlight rows of a dataframe filter\n* [#647](https://github.com/man-group/dtale/issues/647): added option to auto-hide columns consisting entirely of NaN values\n\n### 2.11.0 (2023-1-23)\n* [#659](https://github.com/man-group/dtale/issues/659): editing cells with predefined values\n* [#692](https://github.com/man-group/dtale/issues/692): updated dash to throw regular exceptions instead of 204s when in Google Colab\n\n### 2.10.0 (2023-1-11)\n* Updated usage to dash_bootstrap_components.Checkbox to be backwards compatible\n\n### 2.9.2 (2023-1-11)\n* [#719](https://github.com/man-group/dtale/issues/719): allow NaN values in groupby\n* Updated cell editor and header editor to use select dropdown on category columns\n* [#708](https://github.com/man-group/dtale/issues/708): render boolean column values as checkboxes)\n\n### 2.9.1 (2022-12-28)\n* [#709](https://github.com/man-group/dtale/issues/709): added additional VSCode check for VSCODE_INJECTION\n* [#714](https://github.com/man-group/dtale/issues/714): pushed plotly legend below x-axis labels\n* [#711](https://github.com/man-group/dtale/issues/711): fix for predefined filters to return numbers to the backend when necessary\n* frontend package upgrades:\n  * upgraded to latest version of react\n  * dropped enzyme in favor of @testing-library/react\n  * upgraded chart.js\n\n### 2.9.0 (2022-11-4)\n* [#703](https://github.com/man-group/dtale/issues/703): fix for matplotlib imports\n* [#704](https://github.com/man-group/dtale/issues/704): fix for replacing nan with zero\n* [#677](https://github.com/man-group/dtale/issues/677): include row dropping in history\n\n### 2.8.1 (2022-9-9)\n* Added DESCRIPTION.md to MANIFEST.in\n\n### 2.8.0 (2022-9-8)\n* [#693](https://github.com/man-group/dtale/issues/693): updated streamlit script to work with 1.12.0\n* [#694](https://github.com/man-group/dtale/issues/694): shortened setup.py long_description to help with hadoop downloads\n\n### 2.7.1 (2022-8-7)\n* updating pillow dependency in python 3.6\n\n### 2.7.0 (2022-8-7)\n* [#688](https://github.com/man-group/dtale/issues/688): updated calls to Flask.url_for for version 2.2.1\n* [#676](https://github.com/man-group/dtale/issues/676): Changed final_query to include column\n* Fix filtering string columns with special characters and explicitly support regex\n\n### 2.6.0 (2022-6-16)\n* added build of python 3.10\n* [#671](https://github.com/man-group/dtale/issues/671): updated substring replacement function regex\n* [#254](https://github.com/man-group/dtale/issues/254): Fixes for disabling actions\n\n### 2.5.1 (2022-5-29)\n* fixed networkx dependencies\n\n### 2.5.0 (2022-5-28)\n* [#617](https://github.com/man-group/dtale/issues/617): encoding updates for stylesheets\n* [#668](https://github.com/man-group/dtale/issues/668): update warning filtering to only filter dash_html_components message\n* [#669](https://github.com/man-group/dtale/issues/669): fixed correlation code export\n\n### 2.4.0 (2022-5-8)\n* [#665](https://github.com/man-group/dtale/issues/665): removed dependency on ppscore and unpinned sklearn\n\n### 2.3.0 (2022-5-3)\n* Added the ability to export correlations or PPS heatmaps to PNG\n* [#653](https://github.com/man-group/dtale/issues/653): added \"__version__\" entry to dtale module\n\n### 2.2.0 (2022-3-23)\n* [#601](https://github.com/man-group/dtale/issues/601): added update_id functionality\n* [#649](https://github.com/man-group/dtale/issues/649): fixed incorrect property in pivot opertaions\n\n### 2.1.2 (2022-3-15)\n* [#617](https://github.com/man-group/dtale/issues/617): file loading on windows\n* [#643](https://github.com/man-group/dtale/issues/643): correlation grid dropdown display\n* [#646](https://github.com/man-group/dtale/issues/646): initial show/hide grid display\n\n### 2.1.0 (2022-3-13)\n* [#617](https://github.com/man-group/dtale/issues/617): HTML Exports of data grid\n* Added option for JSONL line files in json-loader\n* [#643](https://github.com/man-group/dtale/issues/643): updated how selected columns get passed to correlation scatter charts\n* [#642](https://github.com/man-group/dtale/issues/642): updates for merge screen\n* [#641](https://github.com/man-group/dtale/issues/641): fixed histogram label precision\n* [#614](https://github.com/man-group/dtale/issues/614): display D-Tale by name\n* [#612](https://github.com/man-group/dtale/issues/612): fixed bug with replacing strings\n* [#602](https://github.com/man-group/dtale/issues/602): update any date columns to have naive timezone\n* [#607](https://github.com/man-group/dtale/issues/607): display of chinese characters in missingno plots\n* [#606](https://github.com/man-group/dtale/issues/606): stringify tuple column names\n\n### 2.0.0 (2022-2-20)\n* Typescript conversion of frontend code\n\n### 1.61.1 (2021-11-17)\n* [#600](https://github.com/man-group/dtale/issues/600): persist selected chart across columns in describe popup\n* [#597](https://github.com/man-group/dtale/issues/597): fix for aggregate function on \"Summarize Data\"\n\n### 1.61.0 (2021-11-15)\n* replaced querystring package with URLSearchParams\n* [#595](https://github.com/man-group/dtale/issues/595): probability histograms\n* [#589](https://github.com/man-group/dtale/issues/589): pareto chart\n* updates for babel ES2020 support\n\n### 1.60.2 (2021-11-3)\n* [#594](https://github.com/man-group/dtale/issues/594): fix for editing cells while using redislite\n\n### 1.60.1 (2021-10-31)\n* updates for \"Time Series Analysis\" with aggregation\n\n### 1.60.0 (2021-10-31)\n* [#591](https://github.com/man-group/dtale/issues/591): load parquet from UI\n* [#590](https://github.com/man-group/dtale/issues/590): parquet export\n* [#533](https://github.com/man-group/dtale/issues/533): Time Series Analysis\n* [#537](https://github.com/man-group/dtale/issues/537): moved \"Resample\" to the \"Dataframe Functions\" popup]\n\n### 1.59.1 (2021-10-15)\n* [#583](https://github.com/man-group/dtale/issues/583): allow for \"vertical_headers\" to be set from dtale.show\n\n### 1.59.0 (2021-10-15)\n* [#581](https://github.com/man-group/dtale/issues/581): Binder proxy handling updates\n* [#583](https://github.com/man-group/dtale/issues/583): vertical column headers\n* front-end package upgrades\n\n### 1.58.3 (2021-10-4)\n* updated dash-bio to an optional dependency\n\n### 1.58.2 (2021-10-3)\n* fix for `background_mode` in `dtale.show`\n\n### 1.58.1 (2021-10-2)\n* re-pinned dash to 2.0.0\n\n### 1.58.0 (2021-10-2)\n* [#568](https://github.com/man-group/dtale/issues/568): range highlight updates\n* [#566](https://github.com/man-group/dtale/issues/566): clustergram charts\n* [#578](https://github.com/man-group/dtale/issues/578): dataset correlations error\n* [#576](https://github.com/man-group/dtale/issues/576): dash_core_components and dash_html_component import updates\n* [#579](https://github.com/man-group/dtale/issues/579): fix for pandas.Series.between FutureWarning\n* [#577](https://github.com/man-group/dtale/issues/577): specifying backgrounds programmatically\n\n### 1.57.0 (2021-9-22)\n* [#565](https://github.com/man-group/dtale/issues/565): allow \"chart per group\" display in scatter charts\n* [#564](https://github.com/man-group/dtale/issues/564): geometric mean aggregation in \"Summarize Data\"\n* [#559](https://github.com/man-group/dtale/issues/559): lock columns from config, highlight rows, move filters to custom filter, nan display\n* [#560](https://github.com/man-group/dtale/issues/560): Add \"Gage R&R\" computation\n* [#558](https://github.com/man-group/dtale/issues/558): added \"Filtered\" toggle to \"Variance Report\"\n* [#561](https://github.com/man-group/dtale/issues/561): Modify behaviour for finding free port\n\n### 1.56.0 (2021-8-31)\n* [#557](https://github.com/man-group/dtale/issues/557): allow filters to be applied to the \"Describe\" page\n* [#555](https://github.com/man-group/dtale/issues/555)\n  * added option to specify default sort in config/show/CLI\n  * predefined filter updates\n* [#552](https://github.com/man-group/dtale/issues/552): added query engine toggle\n* [#553](https://github.com/man-group/dtale/issues/553): boolean chart axis ticks\n* [#554](https://github.com/man-group/dtale/issues/554): dash callback input update\n\n### 1.55.0 (2021-8-17)\n* [#553](https://github.com/man-group/dtale/issues/553): charts with boolean values as y or z axes\n* [#552](https://github.com/man-group/dtale/issues/552): exceptions with unsigned integers and NA values\n* [#548](https://github.com/man-group/dtale/issues/548): updated popups to redirects when in vscode\n* fixed client-side bug with \"rename\" function\n\n### 1.54.1 (2021-8-11)\n* [#549](https://github.com/man-group/dtale/issues/549): fix for grouping charts by multiple columns\n\n### 1.54.0 (2021-8-6)\n* [#545](https://github.com/man-group/dtale/issues/545): added \"concatenate\" & \"replace\" string column builders\n* updated lodash loading to use tree-shaking\n* [#544](https://github.com/man-group/dtale/issues/544): fixed issue with loading missingno plots\n* used plotly.js partial distribution to lower egg size\n\n### 1.53.0 (2021-7-28)\n* updated \"Charts\" page to handle dark-mode\n* [#539](https://github.com/man-group/dtale/issues/539): \"Substring\" & \"Split By Character\" column builders\n* [#542](https://github.com/man-group/dtale/issues/542): fixed bug with finding missings in categorical data\n* [#543](https://github.com/man-group/dtale/issues/543): added \"group by\" to cumulative sum builder\n* Portuguese translation\n* Fixes for long string tooltips\n\n### 1.52.0 (2021-7-10)\n* [#529](https://github.com/man-group/dtale/issues/529): resample timeseries\n* [#532](https://github.com/man-group/dtale/issues/532): shift and expanding builders\n* [#525](https://github.com/man-group/dtale/issues/525): bin range on x-axis\n* [#526](https://github.com/man-group/dtale/issues/526): targeted histogram tooltip\n* updated simpsons dataset to make use of image display\n\n### 1.51.0 (2021-7-5)\n* [#531](https://github.com/man-group/dtale/issues/531): re-organizing column builder buttons\n* [#530](https://github.com/man-group/dtale/issues/530): typo in rolling code snippet\n* [#528](https://github.com/man-group/dtale/issues/528): feature analysis\n* [#534](https://github.com/man-group/dtale/issues/534): pinned missingno less than or equal to 0.4.2\n* [#523](https://github.com/man-group/dtale/issues/523): upgraded to plotly 5\n* Row height resize functionality\n* [#522](https://github.com/man-group/dtale/issues/522): sorting target values in histogram tooltip\n\n### 1.50.1 (2021-6-24)\n* [#520](https://github.com/man-group/dtale/issues/520): additional code export update\n\n### 1.50.0 (2021-6-23)\n* [#515](https://github.com/man-group/dtale/issues/515): adding dataframe.index() to chart axis\n* [#520](https://github.com/man-group/dtale/issues/520): wrong indent in chart code export\n* [#519](https://github.com/man-group/dtale/issues/519): display raw HTML\n* [#518](https://github.com/man-group/dtale/issues/518): cumulative sum builder\n* [#517](https://github.com/man-group/dtale/issues/517): keep less correlated columns\n* [#514](https://github.com/man-group/dtale/issues/514): targeted histogram fixes\n* [#493](https://github.com/man-group/dtale/issues/493): Correlations grid sorting\n* [#505](https://github.com/man-group/dtale/issues/505): Filtering enhancements\n* [#484](https://github.com/man-group/dtale/issues/484): renamed \"Percentage Count\" to \"Count (Percentage)\"\n* [#503](https://github.com/man-group/dtale/issues/503): add separate option for \"Clean Column\" to main menu\n\n### 1.49.0 (2021-6-9)\n* bump css-what from 5.0.0 to 5.0.1\n* added the ability to toggle the display of all columns when heatmap is turned on\n* [#491](https://github.com/man-group/dtale/issues/491): overlapping histogram chart\n* bump ws from 7.4.5 to 7.4.6\n* Updates\n  * [#509](https://github.com/man-group/dtale/issues/509): resizable side panel width\n  * [#495](https://github.com/man-group/dtale/issues/495): CSV loading dialog\n  * height of \"Exponential Smoothing\" in column builders\n  * code snippet fixes\n  * cleaner updates\n\n### 1.48.0 (2021-5-28)\n* [#504](https://github.com/man-group/dtale/issues/504): fix for toggling between unique row & word values\n* [#502](https://github.com/man-group/dtale/issues/502): updated \"cleaning\" column builder to allow for inplace updates\n* [#501](https://github.com/man-group/dtale/issues/501): updates to describe window labels\n* [#500](https://github.com/man-group/dtale/issues/500): cleaning \"Remove Numbers\" code snippet fix\n* [#488](https://github.com/man-group/dtale/issues/488): string encoding for correlations\n* [#484](https://github.com/man-group/dtale/issues/484): fixed for percentage count chart aggregation\n* Correlation Scatter Updates:\n  * [#486](https://github.com/man-group/dtale/issues/486): make 15K point limitation correlations scatter an editable setting\n  * [#487](https://github.com/man-group/dtale/issues/487): fix for non-unique column exception in correlation scatter\n* [#480](https://github.com/man-group/dtale/issues/480): flexible branding\n* [#485](https://github.com/man-group/dtale/issues/485): Adjustable height on Correlation grid\n\n### 1.47.0 (2021-5-21)\n* [#477](https://github.com/man-group/dtale/issues/477): Excel-style cell editing at top of screen\n  * UI input for \"Maximum Column Width\"\n* JS package upgrades\n* refactored how sphinx documentation is built\n\n### 1.46.0 (2021-5-11)\n* [#475](https://github.com/man-group/dtale/issues/475): fixes for DtaleRedis issues\n* [#140](https://github.com/man-group/dtale/issues/140): additional string column filters\n* refactored draggable column resizing to be more performant\n* added dependency on nbformat\n* updated Sphinx documentation building to only run on master builds of python3.9\n  * Also pinned jinja2 to 2.11.3 when building\n\n### 1.45.0 (2021-5-5)\n* [#472](https://github.com/man-group/dtale/issues/472): maximum column width\n* [#471](https://github.com/man-group/dtale/issues/471): predefined filters\n    * [#473](https://github.com/man-group/dtale/issues/473): fixed column filters\n    * refactored settings (sortInfo, columnFilters, outlierFilters, predefinedFilters) to be stored in redux\n    * fixed issues with pinned main menu\n\n### 1.44.1 (2021-4-27)\n* [#470](https://github.com/man-group/dtale/issues/470): editing cells for column names with special characters\n\n### 1.44.0 (2021-4-26)\n* [#465](https://github.com/man-group/dtale/issues/465): optional authentication\n* [#467](https://github.com/man-group/dtale/issues/467): fixed column menu issues when name has special characters\n* [#466](https://github.com/man-group/dtale/issues/466): convert complex data to strings\n* added \"head\" & \"tail\" load types for chart data sampling\n\n### 1.43.0 (2021-4-18)\n* [#463](https://github.com/man-group/dtale/issues/463): skew & kurtosis on filtered data\n* Moved Correlations & PPS to side panel\n* Added \"Show/Hide Columns\" side-panel\n* [#462](https://github.com/man-group/dtale/issues/462): Graphs slow with big data\n\n### 1.42.1 (2021-4-12)\n* added ESC button handler for closing the side panel\n\n### 1.42.0 (2021-4-11)\n* Added missingno chart display\n* added new side panel for viewing describe data\n  * updated how requirements files are loaded in setup.py\n  * added cleanup function to instance object\n  * added animation for display of hidden/filter/sort info row\n* [#306](https://github.com/man-group/dtale/issues/306): ribbon menu\n\n### 1.41.1 (2021-3-30)\n* [#458](https://github.com/man-group/dtale/issues/458): fix for killing D-Tale sessions in jupyter_server_proxy\n* [#378](https://github.com/man-group/dtale/issues/378): add cleaning functions to chart inputs\n\n\n### 1.41.0 (2021-3-26)\n* [#390](https://github.com/man-group/dtale/issues/390): funnel charts\n* [#255](https://github.com/man-group/dtale/issues/255): extended chart aggregations\n\n### 1.40.2 (2021-3-21)\n* [#454](https://github.com/man-group/dtale/issues/454): fixed issue with parenthesis & percent symbols in column names\n\n### 1.40.1 (2021-3-16)\n* hotfix for chart code exports of category column analysis\n\n### 1.40.0 (2021-3-16)\n* moved \"Open In New Tab\" button\n* [#135](https://github.com/man-group/dtale/issues/135): refactored column analysis code and updated code exports to include plotly charts\n\n### 1.39.0 (2021-3-14)\n* resizable columns\n* updated how click loader options are found\n* Added loader for r datasets (`*.rda` files)\n* updating the language menu option to list options dynamically\n\n### 1.38.0 (2021-3-10)\n* [#452](https://github.com/man-group/dtale/issues/452): handling of column names with periods & spaces as well as long names\n* updated styling of windows to match that of Charts\n* [#448](https://github.com/man-group/dtale/issues/448): set default value of \"ignore_duplicate\" to True\n* [#442](https://github.com/man-group/dtale/issues/442): Dash Updates\n  * Split charts by y-axis values if there are multiple\n  * Saving charts off and building new ones\n  * Toggling which piece of data you're viewing\n  * Toggling language nav menu\n* Instances popup changes\n  * updated preview to use DataPreview\n  * updated display of \"memory usage\" to numeral.js\n\n### 1.37.1 (2021-3-6)\n* Updated MANIFEST.in to include requirements.txt\n\n### 1.37.0 (2021-3-5)\n* [#445](https://github.com/man-group/dtale/issues/445): updated URL paths to handle when D-Tale is running with jupyter server proxy\n* [#315](https://github.com/man-group/dtale/issues/315): Internationalization (supports english & chinese currently)\n* [#441](https://github.com/man-group/dtale/pull/441): Add option to 'pin' the menu to the screen as a fixed side panel\n* [#434](https://github.com/man-group/dtale/issues/434)\n  * updated scatter plot date header to be generated server-side \n  * updated scatter plot generation in correlations to use date index rather than date value for filtering\n* update setup.py to load dependencies from requirements.txt\n* [#437](https://github.com/man-group/dtale/pull/437): optional memory usage optimization and show mem usage\n\n### 1.36.0 (2021-2-18)\n* [#428](https://github.com/man-group/dtale/pull/428): Turn global_state into interfaces\n* [#434](https://github.com/man-group/dtale/issues/434): Additional PPS formatting\n* [#433](https://github.com/man-group/dtale/issues/433): fixed exception message display in merge UI\n* [#432](https://github.com/man-group/dtale/issues/432): updated calls to \"get_instance\" in merge code snippets\n* [#431](https://github.com/man-group/dtale/issues/431): fixed stacking code example\n* [#430](https://github.com/man-group/dtale/issues/430): replace empty strings with nans when converting dates to timestamp floats\n\n### 1.35.0 (2021-2-14)\n* [#261](https://github.com/man-group/dtale/issues/261): Merging & Stacking UI\n\n### 1.34.0 (2021-2-7)\n* [#423](https://github.com/man-group/dtale/issues/423): y-axis scale toggle\n* [#422](https://github.com/man-group/dtale/issues/422): sheet selection on excel uploads\n* [#421](https://github.com/man-group/dtale/issues/421): replacements not replacing zeroes\n\n### 1.33.1 (2021-2-1)\n* [#420](https://github.com/man-group/dtale/issues/420): Added python2.7 support back\n* [#416](https://github.com/man-group/dtale/issues/416): aggregating charts by \"first\" or \"last\"\n* [#415](https://github.com/man-group/dtale/issues/415): fix display of heatmap option on main menu when column heatap on\n\n### 1.33.0 (2021-1-31)\n* Excel Uploads\n* Removed python2.7 support from code\n* CI Updates:\n  * updated JS workflow to use latest node image\n  * dropped support for python 2.7 and added support for python 3.9\n* Jest test refactoring\n* [#415](https://github.com/man-group/dtale/issues/415): single column heatmap\n* [#414](https://github.com/man-group/dtale/issues/414): exporting charts using \"top_bars\"\n* [#413](https://github.com/man-group/dtale/issues/413): Q-Q Plot\n* [#411](https://github.com/man-group/dtale/issues/411): updates for column analysis warnings\n* [#412](https://github.com/man-group/dtale/issues/412): histogram for date columns\n* [#404](https://github.com/man-group/dtale/issues/404): fixes for group input display on floats and data frequencies\n\n### 1.32.1 (2021-1-25)\n* [#408](https://github.com/man-group/dtale/issues/408): modifications to exponential smoothing column builder UI\n* [#405](https://github.com/man-group/dtale/issues/405): removed cleaners from non-string columns)\n* [#404](https://github.com/man-group/dtale/issues/404): fixed bug with missing group selection dropdown on strings)\n* [#406](https://github.com/man-group/dtale/issues/406): handling for duplicate bins\n\n### 1.32.0 (2021-1-24)\n* [#396](https://github.com/man-group/dtale/issues/396): added kurtosis to date column descriptions and fixed issue with sequential diffs hanging around for previous columns\n* [#397](https://github.com/man-group/dtale/issues/397): group type & bin type (frequency/width) options for charts\n* Updated pandas query building to use backticks for extreme column names\n* Node tooltips and URL history building for Network Viewer\n* [#399](https://github.com/man-group/dtale/issues/399): better titles for groups in charts\n* [#393](https://github.com/man-group/dtale/issues/393): rolling & exponential smoothing column builders\n* [#401](https://github.com/man-group/dtale/issues/401): option to show top values in bar charts\n\n### 1.31.0 (2021-1-16)\n* [#387](https://github.com/man-group/dtale/issues/387): calculate skew on date columns converted to millisecond integers\n* [#386](https://github.com/man-group/dtale/issues/386): bugfixes with \"Rows w/ numeric\" & \"Rows w/ hidden\"\n* [#389](https://github.com/man-group/dtale/issues/389): added more precision to KDE values\n* update Network Viewer to allow for URL parameter passing of to, from, group & weight\n* [#343](https://github.com/man-group/dtale/issues/343): buttons to load sequential diffs for different sorts\n* [#376](https://github.com/man-group/dtale/issues/376): added bins option to charts for float column groupings\n* [#345](https://github.com/man-group/dtale/issues/345): geolocation analysis\n* [#370](https://github.com/man-group/dtale/issues/370): toggle to turn off auto-loading of charts\n* [#330](https://github.com/man-group/dtale/issues/330): data slope column builder\n* additional documentation\n\n### 1.30.0 (2021-1-3)\n* fixed dependency issues with 27-3 build and pandas 1.2.0 test failures\n* [#379](https://github.com/man-group/dtale/issues/379): issue with skew description\n* [#346](https://github.com/man-group/dtale/issues/346): updated mapbox description\n* [#381](https://github.com/man-group/dtale/issues/381): Network Analysis sub-page\n* [#361](https://github.com/man-group/dtale/issues/361): Network Display\n* fixed styling of Dash modals\n\n### 1.29.1 (2020-12-24)\n* [#228](https://github.com/man-group/dtale/issues/228): additional documentation on how to run in docker\n* [#344](https://github.com/man-group/dtale/issues/344): Updates to sorting of unique values as well as display of word value count raw values\n* [#374](https://github.com/man-group/dtale/issues/374): fixed issue displaying \"NaN\" string values in chart group options\n* [#373](https://github.com/man-group/dtale/issues/373): only use group values in mapbox if mapbox group column(s) has been specified\n* [#367](https://github.com/man-group/dtale/issues/367): rows with hidden characters\n* [#372](https://github.com/man-group/dtale/issues/372): updated labels for First/Last aggregations and added \"Remove Duplicates\" option\n* [#368](https://github.com/man-group/dtale/issues/368): updated \"No Aggregation\" to be default aggregationfor charts\n* [#369](https://github.com/man-group/dtale/issues/369): x-axis count wordclouds\n* [#366](https://github.com/man-group/dtale/issues/366): additional hyphen added to \"Replace Hyphens w/ Space\" cleaner\n* [#365](https://github.com/man-group/dtale/issues/365): fixed display issues with KDE\n\n### 1.29.0 (2020-12-22)\n* [#363](https://github.com/man-group/dtale/issues/363): show/hide columns on load\n* [#348](https://github.com/man-group/dtale/issues/348): sub-date map animation fix\n* [#347](https://github.com/man-group/dtale/issues/347): display items loaded in \"Load\" slider\n* [#349](https://github.com/man-group/dtale/issues/349): additional duplicates handling in chart builders\n* node-notifier depdabot alert\n* [#351](https://github.com/man-group/dtale/issues/351): added KDE to histograms in column analysis\n* package upgrades\n* [#350](https://github.com/man-group/dtale/issues/350): x-axis column selection no longer required for charts\n  * if there is no selection then the default index of (1, 2, ..., N) will be used in its place\n* [#356](https://github.com/man-group/dtale/issues/356): \"replace hyphens\" cleaner and cleaners added to \"Value Counts\" analysis\n* [#358](https://github.com/man-group/dtale/issues/358): addition skew/kurtosis display\n* [#357](https://github.com/man-group/dtale/issues/357): cleaner for hidden characters\n* [#359](https://github.com/man-group/dtale/issues/358): repositioned skew/kurt in describe\n* [#359](https://github.com/man-group/dtale/issues/359): moved \"Variance Report\" option up in column menu\n* [#360](https://github.com/man-group/dtale/issues/360): updates to string describe labels\n* fixed issues with draggable/resizable modals\n\n### 1.28.1 (2020-12-16)\n* updated modals to be resizable (re-resizable)\n\n### 1.28.0 (2020-12-14)\n* [#354](https://github.com/man-group/dtale/issues/354): fix for building data ids greater than 10\n* [#343](https://github.com/man-group/dtale/issues/343): remove nan & nat values from sequential diff analysis\n* [#342](https://github.com/man-group/dtale/issues/342): column cleaner descriptions\n* [#340](https://github.com/man-group/dtale/issues/340): add column cleaners to \"Word Value Counts\" analysis chart\n* [#341](https://github.com/man-group/dtale/issues/341): NLTK stopword cleaner updates\n* [#338](https://github.com/man-group/dtale/issues/338): removing nan values from string metrics\n* [#334](https://github.com/man-group/dtale/issues/334): skew/kurtosis summary\n* Updated modals to be movable (react-draggable)\n* build(deps): bump ini from 1.3.5 to 1.3.7\n* Notify iframe parent of updates\n\n\n### 1.27.0 (2020-12-9)\n* fixed bug with bar chart animations\n* [#335](https://github.com/man-group/dtale/issues/336): addition string metrics for Describe popup\n* [#336](https://github.com/man-group/dtale/issues/336): sqlite loader\n* [#333](https://github.com/man-group/dtale/issues/333): sequential diffs in describe popup\n* [#332](https://github.com/man-group/dtale/issues/332): adding \"word counts\" to Describe popup]\n* [#329](https://github.com/man-group/dtale/issues/329): diff() column builder\n* added highlight.js & upgraded react-syntax-highlighter\n\n### 1.26.0 (2020-12-5)\n* [#325](https://github.com/man-group/dtale/issues/325): Plotly export chart colors\n* fixed highlight.js dependabot warning\n* [#326](https://github.com/man-group/dtale/issues/326): trendline with datetime data\n* [#327](https://github.com/man-group/dtale/issues/327): fixed issues with cleaner deselection\n* [#273](https://github.com/man-group/dtale/issues/273): Predictive Power Score\n\n### 1.25.0 (2020-11-30)\n* [#323](https://github.com/man-group/dtale/issues/323): precision setting for all float columns\n* [#265](https://github.com/man-group/dtale/issues/265): column cleaners\n* [#322](https://github.com/man-group/dtale/issues/322): colorscales not being included in chart exports and colorscales added to surface charts\n* [#148](https://github.com/man-group/dtale/issues/148): random sampling in charts\n\n### 1.24.0 (2020-11-23)\n* [#295](https://github.com/man-group/dtale/issues/295): check for swifter when executing apply functions\n* Reworked the display of the \"Instances\" popup\n* fixed issue with serving static assets when using \"app_root\"\n\n### 1.23.0 (2020-11-21)\n* Added better handling for `open_browser`\n* [#319](https://github.com/man-group/dtale/issues/319): fix for loading xarray dimensions\n* Added support for embedding D-Tale within Streamlit\n\n### 1.22.1 (2020-11-15)\n* additional updates to how int/float hex conversions work\n\n### 1.22.0 (2020-11-14)\n* [#317](https://github.com/man-group/dtale/issues/317): convert int/float to hexadecimal\n* Copy Columns/Rows to clipboard using Shift+Click & Ctrl+Click\n* Added \"items\" function to global state mechanisms\n* [#296](https://github.com/man-group/dtale/issues/296): heatmap doesn't respect current filters\n\n### 1.21.1 (2020-11-8)\n* Additional fixes for #313 & #302\n  * Handling for partial `.ini` files\n  * Handling for dictionary inputs w/ non-iterable values\n\n### 1.21.0 (2020-11-6)\n* [#313](https://github.com/man-group/dtale/issues/313): support for numpy.array, lists & dictionaries\n* [#302](https://github.com/man-group/dtale/issues/302): configuration file for default options\n* Removal of legacy charting code & updating flask route to plotly dash charts from `/charts` to `/dtale/charts`\n* Update to how routes are overriden so it will work with gunicorn\n* Documentation\n  * running within gunicorn\n  * embedding in another Flask or Django app\n  * configuration settings\n\n### 1.20.0 (2020-11-1)\n* [#311](https://github.com/man-group/dtale/issues/311): png chart exports and fix for trandlines in exports\n* Added the option to switch grid to \"Dark Mode\"\n\n### 1.19.2 (2020-10-25)\n* Documentation updates & better formatting of sample dataset buttons\n* bugfixes for loading empty dtale in a notebook and chart display in embedded app demo\n\n### 1.19.1 (2020-10-24)\n* Load CSV/TSV/JSON from the web as well as some sample datasets\n* [#310](https://github.com/man-group/dtale/issues/310): handling for nan in ordinal & label encoders\n\n### 1.19.0 (2020-10-23)\n* [#123](https://github.com/man-group/dtale/issues/123): selecting a range of cells to paste into excel\n* Documentation on embedding D-Tale in another Flask app\n* bugfix for altering single y-axis ranges when x-axis is non-numeric\n* [#272](https://github.com/man-group/dtale/issues/272): encoders for categorical columns\n\n### 1.18.2 (2020-10-17)\n* [#305](https://github.com/man-group/dtale/issues/305): Show Duplicates column(s) label\n* [#304](https://github.com/man-group/dtale/issues/304): Link to Custom Filter from Column Menu\n* [#301](https://github.com/man-group/dtale/issues/301): Normalized Similarity\n* [#289](https://github.com/man-group/dtale/issues/289): Show Duplicates query bug & scrollable duplicate groups\n\n\n### 1.18.1 (2020-10-16)\n* [#299](https://github.com/man-group/dtale/issues/299): Value counts not matching top unique values in Column Analysis\n* [#298](https://github.com/man-group/dtale/issues/298): Standardize column builder bug\n* [#297](https://github.com/man-group/dtale/issues/297): Similarity bugs\n* [#290](https://github.com/man-group/dtale/issues/290): show top 5 values with highest frequency in describe details\n* [#288](https://github.com/man-group/dtale/issues/288): Add Duplicates popup to Column Menu\n\n### 1.18.0 (2020-10-15)\n* [#282](https://github.com/man-group/dtale/issues/282): additional exception handling for overriding routes\n* [#271](https://github.com/man-group/dtale/issues/271): standardized column builder\n* [#282](https://github.com/man-group/dtale/issues/282): better support for using D-Tale within another Flask application\n* [#270](https://github.com/man-group/dtale/issues/270): filter outliers from column menu\n* allow users to start D-Tale without loading data\n* [#264](https://github.com/man-group/dtale/issues/264): similarity column builder\n* [#286](https://github.com/man-group/dtale/issues/286): column description lag after type conversion\n\n### 1.17.0 (2020-10-10)\n* [#269](https://github.com/man-group/dtale/issues/269): column based range highlighting\n* [#268](https://github.com/man-group/dtale/issues/268): better button labels for inplace vs. new column\n* [#283](https://github.com/man-group/dtale/issues/283): triple-quote formatting around queries in code exports\n* [#266](https://github.com/man-group/dtale/issues/266): string concatenation string builder\n* [#267](https://github.com/man-group/dtale/issues/267): Column discretion UI\n* Fix: Pandas throws error when converting numeric column names to string.\n\n### 1.16.0 (2020-10-4)\n* [#263](https://github.com/man-group/dtale/issues/263): word value counts\n* [#262](https://github.com/man-group/dtale/issues/262): duplicate values\n* [#274](https://github.com/man-group/dtale/issues/274): URL linkouts\n\n### 1.15.2 (2020-9-4)\n*  hotfix to move HIDE_SHUTDOWN & GITHUB_FORK to `dtale` module\n\n### 1.15.1 (2020-9-3)\n*  hotfix to expose HIDE_SHUTDOWN & GITHUB_FORK from `dtale.global_state`\n\n### 1.15.0 (2020-9-3)\n* [#248](https://github.com/man-group/dtale/issues/248): Added 'minPeriods' & the rolling means (multi-value per date) dateframes for Correlations popup\n* [#254](https://github.com/man-group/dtale/issues/254): Options to hide shutdown and turn off cell editing\n* [#244](https://github.com/man-group/dtale/issues/244): Treemap charts\n\n### 1.14.1 (2020-8-20)\n* [#252](https://github.com/man-group/dtale/issues/252): Describe shows proper values, but repeats 'Total Rows:' heading instead of proper headings\n\n### 1.14.0 (2020-8-19)\n* [#243](https://github.com/man-group/dtale/issues/243): column menu descriptions\n* [#247](https://github.com/man-group/dtale/issues/247): code export compilation error fixes\n* [#242](https://github.com/man-group/dtale/issues/242): type conversion column menu option & auto-column names on \"Build Column\"\n* [#235](https://github.com/man-group/dtale/issues/235): nan formatting\n\n### 1.13.0 (2020-8-13)\n* [#231](https://github.com/man-group/dtale/issues/231): \"Lock Zoom\" button on 3D Scatter & Surface charts for locking camera on animations\n* global & instance-level flag to turn off cell editing\n* added the ability to upload CSVs\n* upgraded prismjs\n* [#234](https://github.com/man-group/dtale/issues/234): update to line animations so that you can lock axes and highlight last point\n* [#233](https://github.com/man-group/dtale/issues/233): add candlestick charts\n* [#241](https://github.com/man-group/dtale/issues/241): total counts vs. count (non-nan) in describe\n* [#240](https://github.com/man-group/dtale/issues/240): force convert to float\n* [#239](https://github.com/man-group/dtale/issues/239): converting mixed columns\n* [#237](https://github.com/man-group/dtale/issues/237): updated \"Pivot\" reshaper to always using pivot_table\n* [#236](https://github.com/man-group/dtale/issues/236): \"inplace\" & \"drop_index\" parameters for memory optimization and parquet loader\n* [#229](https://github.com/man-group/dtale/issues/229): added histogram sample chart to bins column builder\n\n### 1.12.1 (2020-8-5)\n * better axis display on heatmaps\n * handling for column filter data on \"mixed\" type columns\n * \"title\" parameter added for offline charts\n * heatmap drilldowns on animations\n * bugfix for refreshing custom geojson charts\n\n### 1.12.0 (2020-8-1)\n * added better notification for when users view Category breakdowns in \"Column Analysis\" & \"Describe\"\n * fixed code snippets in \"Numeric\" column builder when no operation is selected\n * fixed code exports for transform, winsorixe & z-score normalize column builders\n * added colorscale option to 3D Scatter charts\n * added \"Animate By\" to Heatmaps\n * initial chart drilldown functionality (histogram, bar)\n * fixed bug with code exports on transform, winsorize & z-score normalize column builders\n * updated labeling & tooltips on histogram charts\n * npm package upgrades\n\n### 1.11.0 (2020-7-23)\n * updated column filters so that columns with more than 500 unique values are loaded asynchronously as with AsyncSelect\n * added code export to Variance report\n * added z-score normalize column builder\n\n### 1.10.0 (2020-7-21)\n * [#223](https://github.com/man-group/dtale/issues/223): six.collections.abc import errors in Google Colab\n * [#135](https://github.com/man-group/dtale/issues/135): added plotly chart construction to code exports\n * [#192](https://github.com/man-group/dtale/issues/192): Variance Report & flag toggle\n * npm package upgrades\n * added \"winsorize\" column builder\n\n### 1.9.2 (2020-7-12)\n * [#127](https://github.com/man-group/dtale/issues/127): add \"Column Analysis\" to \"Describe\"\n * [#85](https://github.com/man-group/dtale/issues/85): hotkeys\n\n### 1.9.1 (2020-7-3)\n * [#213](https://github.com/man-group/dtale/issues/213): Support for koalas dataframes\n * [#214](https://github.com/man-group/dtale/issues/214): fix for USE_COLAB (colab proxy endpoint injection)\n\n\n### 1.9.0 (2020-7-3)\n * added the ability to build columns using transform\n * added USE_COLAB for accessing D-Tale within google colab using their proxy\n * [#211](https://github.com/man-group/dtale/issues/211): Code export doesnt work on google colab\n \n### 1.8.19 (2020-6-28)\n * backwards compatibility of 'colorscale' URL parameters in charts\n * dropping of NaN locations/groups in choropleth maps\n\n### 1.8.18 (2020-6-28)\n * [#150](https://github.com/man-group/dtale/issues/150): replace colorscale dropdown with component from dash-colorscales\n * added the ability to choose been ols & lowess trendlines in scatter charts\n * [#83](https://github.com/man-group/dtale/issues/83): allow for names to be used in url strings for data_id\n \n### 1.8.17 (2020-6-18)\n * [#151](https://github.com/man-group/dtale/issues/151): allow users to load custom topojson into choropleth maps\n\n### 1.8.16 (2020-6-7)\n * [#200](https://github.com/man-group/dtale/issues/200): support for xarray\n\n### 1.8.15 (2020-5-31)\n * [#202](https://github.com/man-group/dtale/issues/202): maximum recursion errors when using Pyzo IDE\n\n### 1.8.14 (2020-5-31)\n * [#168](https://github.com/man-group/dtale/issues/168): updated default colorscale for heatmaps to be Jet\n * [#152](https://github.com/man-group/dtale/issues/152): added scattermapbox as a valid map type\n * [#136](https://github.com/man-group/dtale/issues/136): Fill missing values\n * [#86](https://github.com/man-group/dtale/issues/86): column replacements for values\n * [#87](https://github.com/man-group/dtale/issues/87): highlight ranges of numeric cells\n\n### 1.8.13 (2020-5-20)\n * [#193](https://github.com/man-group/dtale/issues/193): Support for JupyterHub Proxy\n\n### 1.8.12 (2020-5-15)\n * [#196](https://github.com/man-group/dtale/issues/196): dataframes that have datatime indexes without a name\n * Added the ability to apply formats to all columns of same dtype\n \n### 1.8.11 (2020-5-3)\n * [#196](https://github.com/man-group/dtale/issues/191): improving outlier filter suggestions\n * [#190](https://github.com/man-group/dtale/issues/190): hide \"Animate\" inputs when \"Percentage Sum\" or \"Percentage Count\" aggregations are used\n * [#189](https://github.com/man-group/dtale/issues/189): hide \"Barsort\" when grouping is being applied\n * [#187](https://github.com/man-group/dtale/issues/187): missing & outlier tooltip descriptions on column headers\n * [#186](https://github.com/man-group/dtale/issues/186): close \"Describe\" tab after clicking \"Update Grid\"\n * [#122](https://github.com/man-group/dtale/issues/122): editable cells\n * npm package upgrades\n * circleci build script refactoring\n\n### 1.8.10 (2020-4-26)\n * [#184](https://github.com/man-group/dtale/issues/184): \"nan\" not showing up for numeric columns\n * [#181](https://github.com/man-group/dtale/issues/181): percentage sum/count charts\n * [#179](https://github.com/man-group/dtale/issues/179): confirmation for column deletion\n * [#176](https://github.com/man-group/dtale/issues/176): highlight background of outliers/missing values\n * [#175](https://github.com/man-group/dtale/issues/175): column renaming\n * [#174](https://github.com/man-group/dtale/issues/174): moved \"Describe\" popup to new browser tab\n * [#173](https://github.com/man-group/dtale/issues/173): wider column input box for GroupBy in \"Summarize Data\" popup\n * [#172](https://github.com/man-group/dtale/issues/172): allowing groups to be specified in 3D scatter\n * [#170](https://github.com/man-group/dtale/issues/170): filter \"Value\" dropdown for maps to only int or float columns\n * [#164](https://github.com/man-group/dtale/issues/164): show information about missing data in \"Describe\" popup\n \n### 1.8.9 (2020-4-18)\n * updated correlations & \"Open Popup\" to create new tabs instead\n * test fixes for dash 1.11.0\n * added python 3.7 & 3.8 support\n\n### 1.8.8 (2020-4-9)\n * [#144](https://github.com/man-group/dtale/issues/144): Changing data type\n\n### 1.8.7 (2020-4-8)\n * [#137](https://github.com/man-group/dtale/issues/137): Outliers in the description window\n * [#141](https://github.com/man-group/dtale/issues/141): Currency Symbole for column Format\n * [#156](https://github.com/man-group/dtale/issues/156): heat map\n * [#160](https://github.com/man-group/dtale/issues/160): Option to filter out outliers from charts\n * [#161](https://github.com/man-group/dtale/issues/161): Syntax error in 1.8.6\n * [#162](https://github.com/man-group/dtale/issues/162): chart map animation errors with aggrigations\n * [#163](https://github.com/man-group/dtale/issues/163): Fix scale for animation mode in the chart\n\n### 1.8.6 [hotfix] (2020-4-5)\n * updates to setup.py to include images\n\n### 1.8.5 [hotfix] (2020-4-5)\n * fixed bug with column calculation for map inputs\n * [#149](https://github.com/man-group/dtale/issues/149): Icon for Map charts\n\n### 1.8.4 [hotfix] (2020-4-5)\n * update to setup.py to include missing static topojson files\n * [#145](https://github.com/man-group/dtale/issues/145): Choropleth Map\n\n### 1.8.3 (2020-4-4)\n* [#143](https://github.com/man-group/dtale/issues/143): scattergeo map chart UI changes\n* updated offline chart generation of maps to work without loading topojson from the web\n* fix to allow correlations timeseries to handle when date columns jump between rolling & non-rolling\n* added slider to animation and added animation to maps\n* fixes for IE 11 compatibility issues\n* labeling changes for \"Reshape\" popup\n* added grouping to maps\n\n### 1.8.2 (2020-4-1)\n * [#129](https://github.com/man-group/dtale/issues/129): show dtype when hovering over header in \"Highlight Dtypes\" mode and description tooltips added to main menu\n * made \"No Aggregation\" the default aggregation in charts\n * bugfix for line charts with more than 15000 points\n * updated \"Value Counts\" & \"Category Breakdown\" to return top on initial load\n * [#118](https://github.com/man-group/dtale/issues/118): added scattergeo & choropleth maps\n * [#121](https://github.com/man-group/dtale/issues/121): added \"not equal\" toggle to filters\n * [#132](https://github.com/man-group/dtale/issues/132): updated resize button to \"Refresh Widths\"\n * added \"Animate\" toggle to scatter, line & bar charts\n * [#131](https://github.com/man-group/dtale/issues/131): changes to \"Reshape Data\" window\n * [#130](https://github.com/man-group/dtale/issues/130): updates to pivot reshaper\n * [#128](https://github.com/man-group/dtale/issues/128): additional hover display of code snippets for column creation\n * [#112](https://github.com/man-group/dtale/issues/112): updated \"Group\" selection to give users the ability to select group values\n\n### 1.8.1 (2020-3-29)\n * [#92](https://github.com/man-group/dtale/issues/92): column builders for random data\n * [#84](https://github.com/man-group/dtale/issues/84): highlight columns based on dtype\n * [#111](https://github.com/man-group/dtale/issues/111): fix for syntax error in charts code export\n * [#113](https://github.com/man-group/dtale/issues/113): updates to \"Value Counts\" chart in \"Column Analysis\" for number of values and ordinal entry\n * [#114](https://github.com/man-group/dtale/issues/114): export data to CSV/TSV\n * [#116](https://github.com/man-group/dtale/issues/116): upodated styling for github fork link so \"Code Export\" is partially clickable\n * [#119](https://github.com/man-group/dtale/issues/119): fixed bug with queries not being passed to functions\n * [#120](https://github.com/man-group/dtale/issues/120): fix to allow duplicate x-axis entries in bar charts\n * added \"category breakdown\" in column analysis popup for float columns\n * fixed bug where previous \"show missing only\" selection was not being recognized\n \n### 1.8.0 (2020-3-22)\n * [#102](https://github.com/man-group/dtale/issues/102): interactive column filtering for string, date, int, float & bool\n * better handling for y-axis management in charts.  Now able to toggle between default, single & multi axis\n * increased maximum groups to 30 in charts and updated error messaging when it surpasses that for easier filter creation\n * bugfix for date string width calculation\n * updated sort/filter/hidden header so that you can now click values which will trigger a tooltip for removing individual values\n * updated Filter popup to be opened as separate window when needed\n\n### 1.7.15 (2020-3-9)\n * [#105](https://github.com/man-group/dtale/issues/105): better error handling for when JS files are missing\n * [#103](https://github.com/man-group/dtale/issues/103): pinned Flask to be >= 1.0.0\n * Updated file exporting to no longer use `flask.send_file` since that doesn't play nice with WSGI\n \n### 1.7.14 (2020-3-7)\n * Hotfix for \"Reshape\" popup when forwarding browser to new data instances\n\n### 1.7.13 (2020-3-7)\n * New data storage mechanisms available: Redis, Shelve\n * [#100](https://github.com/man-group/dtale/issues/100): turned off data limits on charts by using WebGL\n * [#99](https://github.com/man-group/dtale/issues/99): graceful handling of issue calculating min/max information for Describe popup\n * [#91](https://github.com/man-group/dtale/issues/91): reshaping of data through usage of aggregations, pivots or transposes\n * Export chart to HTML\n * Export chart dat to CSV\n * Offline chart display for use within notebooks\n * Removal of data from the Instances popup\n * Updated styling of charts to fit full window dimensions\n\n### 1.7.12 (2020-3-1)\n * added syntax highlighting to code exports with react-syntax-highlighting\n * added arctic integration test\n * updated Histogram popup to \"Column Analysis\" which allows for the following\n   * Histograms -> integers and floats\n   * Value Counts -> integers, strings & dates\n\n### 1.7.11 (2020-2-27)\n * hotfix for dash custom.js file missing from production webpack build script\n\n### 1.7.10 (2020-2-27)\n * [#75](https://github.com/man-group/dtale/issues/75): added code snippet functionality to the following:\n   * main grid, histogram, correlations, column building & charts\n * exposed CLI loaders through the following functions dtale.show_csv, dtale.show_json, dtale.show_arctic\n   * build in such a way that it is easy for custom loaders to be exposed as well\n * [#82](https://github.com/man-group/dtale/issues/82): pinned `future` package to be >= 0.14.0\n\n### 1.7.9 (2020-2-24)\n * support for google colab\n * [#71](https://github.com/man-group/dtale/issues/71): Filter & Formats popups no longer have smooth transition from top of screen\n * [#72](https://github.com/man-group/dtale/issues/72): Column Menu cutoff on last column of wide dataframes\n * [#73](https://github.com/man-group/dtale/issues/73): Describe popup does full refresh when clicking rows in dtype grid\n\n### 1.7.8 (2020-2-22)\n * [#77](https://github.com/man-group/dtale/issues/77): removal of multiprocessed timeouts\n\n### 1.7.7 (2020-2-22)\n * centralized global state\n\n### 1.7.6 (2020-2-21)\n * allowing the usage of context variables within filters\n * [#64](https://github.com/man-group/dtale/issues/64): handling for loading duplicate data to dtale.show\n * updated dtale.instances() to print urls rather than show all instances\n * removal of Dash \"Export to png\" function\n * passing data grid queries to chart page as default\n * added sys.exit() to the thread that manages the reaper \n\n### 1.7.5 (2020-2-20)\n * hotfix for KeyError loading metadata for columns with min/max information\n\n### 1.7.4 (2020-2-20)\n * [#63](https://github.com/man-group/dtale/issues/63): filtering columns with special characters in name\n * added json_loader CLI options\n * updated moving/locking of columns to be persisted to back-end as well as front-end\n * added the ability to show/hide columns\n * [#61](https://github.com/man-group/dtale/issues/61): added column builder popup\n\n### 1.7.3 (2020-2-13)\n * added the ability to move columns left or right as well as to the front\n * added formatting capabilities for strings & dates\n * persist formatting settings to popup on reopening\n * bugfix for width-calculation on formatting change\n\n### 1.7.2 (2020-2-12)\n * 60 timeout handling around chart requests\n * pre-loaded charts through URL search strings\n * pandas query examples in Filter popup\n\n### 1.7.1 (2020-2-7)\n * added pie, 3D scatter & surface charts\n * updated popups to be displayed when the browser dimensions are too small to host a modal\n * removed Swagger due to its lack up support for updated dependencies\n\n### 1.7.0 (2020-1-28)\n * redesign of charts popup to use plotly/dash\n * [#55](https://github.com/man-group/dtale/issues/55): raise exception when data contains duplicate column names\n * heatmap integration\n * combination of \"_main.jsx\" files into one for spacial optimization\n * [#15](https://github.com/man-group/dtale/issues/15): made arctic an \"extra\" dependency\n \n### 1.6.10 (2020-1-12)\n * better front-end handling of dates for charting as to avoid timezone issues\n * the ability to switch between sorting any axis in bar charts\n\n### 1.6.9 (2020-1-9)\n * bugfix for timezone issue around passing date filters to server for scatter charts in correlations popup\n\n### 1.6.8 (2020-1-9)\n * additional information about how to use Correlations popup\n * handling of all-nan data in charts popup\n * styling issues on popups (especially Histogram)\n * removed auto-filtering on correlation popup\n * scatter point color change\n * added chart icon to cell that has been selected in correlation popup\n * responsiveness to scatter charts\n * handling of links to 'main','iframe' & 'popup' missing data_id\n * handling of 'inf' values when getting min/max & describe data\n * added header to window popups (correlations, charts, ...) and a link back to the grid\n * added egg building to cirleci script\n * correlation timeseries chart hover line\n \n### 1.6.7 (2020-1-3)\n\n * [#50](https://github.com/man-group/dtale/issues/50): updates to rolling correlation functionality\n\n### 1.6.6 (2020-1-2)\n\n * [#47](https://github.com/man-group/dtale/issues/47): selection of multiple columns for y-axis\n * updated histogram bin selection to be an input box for full customization\n * better display of timestamps in axis ticks for charts\n * sorting of bar charts by y-axis\n * [#48](https://github.com/man-group/dtale/issues/48): scatter charts in chart builder\n * \"nunique\" added to list of aggregations\n * turned on \"threaded=True\" for app.run to avoid hanging popups\n * [#45](https://github.com/man-group/dtale/issues/45): rolling computations as aggregations\n * Y-Axis editor\n\n### 1.6.5 (2019-12-29)\n\n  * test whether filters entered will return no data and block the user from apply those\n  * allow for group values of type int or float to be displayed in charts popup\n  * timeseries correlation values which return 'nan' will be replaced by zero for chart purposes\n  * update 'distribution' to 'series' on charts so that missing dates will not show up as ticks\n  * added \"fork on github\" flag for demo version & links to github/docs on \"About\" popup\n  * limited lz4 to <= 2.2.1 in python 27-3 since latest version is no longer supported\n\n### 1.6.4 (2019-12-26)\n\n  * testing of hostname returned by `socket.gethostname`, use 'localhost' if it fails\n  * removal of flask dev server banner when running in production environments\n  * better handling of long strings in wordclouds\n  * [#43](https://github.com/man-group/dtale/issues/43): only show timeseries correlations if datetime columns exist with multiple values per date\n\n\n### 1.6.3 (2019-12-23)\n  \n  * updated versions of packages in yarn.lock due to issue with chart.js box & whisker plots\n\n### 1.6.2 (2019-12-23)\n\n  * [#40](https://github.com/man-group/dtale/issues/40): loading initial chart as non-line in chart builder\n  * [#41](https://github.com/man-group/dtale/issues/41): double clicking cells in correlation grid for scatter will cause chart not to display\n  * \"Open Popup\" button for ipython iframes\n  * column width resizing on sorting\n  * additional int/float descriptors (sum, median, mode, var, sem, skew, kurt)\n  * wordcloud chart type\n\n### 1.6.1 (2019-12-19)\n\n  * bugfix for url display when running from command-line\n\n### 1.6.0 (2019-12-19)\n\n  * charts integration\n    * the ability to look at data in line, bar, stacked bar & pie charts\n    * the ability to group & aggregate data within the charts\n  * direct ipython iframes to correlations & charts pages with pre-selected inputs\n  * the ability to access instances from code by data id `dtale.get_instance(data_id)`\n  * view all active data instances `dtale.instances()`\n\n### 1.5.1 (2019-12-12)\n\n  * conversion of new flask instance for each `dtale.show` call to serving all data associated with one parent process under the same flask instance unless otherwise specified by the user (the `force` parameter)\n\n### 1.5.0 (2019-12-02)\n\n  * ipython integration\n    * ipython output cell adjustment\n    * column-wise menu support\n    * browser window popups for: Correlations, Coverage, Describe, Histogram & Instances\n    \n### 1.4.1 (2019-11-20)\n\n  * [#32](https://github.com/man-group/dtale/issues/32): unpin jsonschema by moving flasgger to `extras_require`\n\n### 1.4.0 (2019-11-19)\n\n  * Correlations Pearson Matrix filters\n  * \"name\" display in title tab\n  * \"Heat Map\" toggle\n  * dropped unused \"Flask-Caching\" requirement\n\n### 1.3.7 (2019-11-12)\n\n  * Bug fixes for:\n    * [#28](https://github.com/man-group/dtale/issues/28): \"Instances\" menu option will now be displayed by default\n    * [#29](https://github.com/man-group/dtale/issues/29): add hints to how users can navigate the correlations popup\n    * add \"unicode\" as a string classification for column width calculation\n\n### 1.3.6 (2019-11-08)\n\n  * Bug fixes for:\n    * choose between `pandas.corr` & `numpy.corrcoef` depending on presence of NaNs\n    * hide timeseries correlations when date columns only contain one day\n\n### 1.3.5 (2019-11-07)\n\n  * Bug fixes for:\n    * duplicate loading of histogram data\n    * string serialization failing when mixing `future.str` & `str` in scatter function\n\n### 1.3.4 (2019-11-07)\n\n  * updated correlation calculation to use `numpy.corrcoef` for performance purposes\n  * github rebranding from manahl -> man-group\n\n### 1.3.3 (2019-11-05)\n\n  * hotfix for failing test under certain versions of `future` package\n\n### 1.3.2 (2019-11-05)\n\n  * Bug fixes for:\n    * display of histogram column information\n    * reload of hidden \"processes\" input when loading instances data\n    * correlations json failures on string conversion\n\n### 1.3.1 (2019-10-29)\n  \n  * fix for incompatible str types when directly altering state of data in running D-Tale instance\n\n### 1.3.0 (2019-10-29)\n  \n  * `webbrowser` integration (the ability to automatically open a webbrowser upon calling `dtale.show()`)\n  * flag for hiding the \"Shutdown\" button for long-running demos\n  * \"Instances\" navigator popup for viewing all activate D-Tale instances for the current python process\n\n### 1.2.0 (2019-10-24)\n\n  * [#20](https://github.com/man-group/dtale/issues/13): fix for data being overriden with each new instance\n  * [#21](https://github.com/man-group/dtale/issues/13): fix for displaying timestamps if they exist\n  * calling `show()` now returns an object which can alter the state of a process\n    * accessing/altering state through the `data` property \n    * shutting down a process using the `kill()` function\n\n### 1.1.1 (2019-10-23)\n\n  * [#13](https://github.com/man-group/dtale/issues/13): fix for auto-detection of column widths for strings and floats\n\n### 1.1.0 (2019-10-08)\n\n  * IE support\n  * **Describe** & **About** popups\n  * Custom CLI support\n\n### 1.0.0 (2019-09-06)\n\n  * Initial public release\n"
        },
        {
          "name": "DESCRIPTION.md",
          "type": "blob",
          "size": 6.46875,
          "content": "[![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/Title.png)](https://github.com/man-group/dtale)\n\n* [Live Demo](http://alphatechadmin.pythonanywhere.com)\n\n-----------------\n\n[![CircleCI](https://circleci.com/gh/man-group/dtale.svg?style=shield&circle-token=4b67588a87157cc03b484fb96be438f70b5cd151)](https://circleci.com/gh/man-group/dtale)\n[![PyPI Python Versions](https://img.shields.io/pypi/pyversions/dtale.svg)](https://pypi.python.org/pypi/dtale/)\n[![PyPI](https://img.shields.io/pypi/v/dtale)](https://pypi.org/project/dtale/)\n[![Conda](https://img.shields.io/conda/v/conda-forge/dtale)](https://anaconda.org/conda-forge/dtale)\n[![ReadTheDocs](https://readthedocs.org/projects/dtale/badge)](https://dtale.readthedocs.io)\n[![codecov](https://codecov.io/gh/man-group/dtale/branch/master/graph/badge.svg)](https://codecov.io/gh/man-group/dtale)\n[![Downloads](https://pepy.tech/badge/dtale)](https://pepy.tech/project/dtale)\n[![Open in VS Code](https://img.shields.io/badge/Visual_Studio_Code-0078D4?style=for-the-badge&logo=visual%20studio%20code&logoColor=white)](https://open.vscode.dev/man-group/dtale)\n\n## What is it?\n\nD-Tale is the combination of a Flask back-end and a React front-end to bring you an easy way to view & analyze Pandas data structures.  It integrates seamlessly with ipython notebooks & python/ipython terminals.  Currently this tool supports such Pandas objects as DataFrame, Series, MultiIndex, DatetimeIndex & RangeIndex.\n\n## Origins\n\nD-Tale was the product of a SAS to Python conversion.  What was originally a perl script wrapper on top of SAS's `insight` function is now a lightweight web client on top of Pandas data structures.\n\n## In The News\n\n - [4 Libraries that can perform EDA in one line of python code](https://towardsdatascience.com/4-libraries-that-can-perform-eda-in-one-line-of-python-code-b13938a06ae)\n - [React Status](https://react.statuscode.com/issues/204)\n - [KDNuggets](https://www.kdnuggets.com/2020/08/bring-pandas-dataframes-life-d-tale.html)\n - [Man Institute](https://www.man.com/maninstitute/d-tale) (warning: contains deprecated functionality)\n - [Python Bytes](https://pythonbytes.fm/episodes/show/169/jupyter-notebooks-natively-on-your-ipad)\n - [FlaskCon 2020](https://www.youtube.com/watch?v=BNgolmUWBp4&t=33s)\n - [San Diego Python](https://www.youtube.com/watch?v=fLsGur5YqeE&t=29s)\n - [Medium: towards data science](https://towardsdatascience.com/introduction-to-d-tale-5eddd81abe3f)\n - [Medium: Exploratory Data Analysis – Using D-Tale](https://medium.com/da-tum/exploratory-data-analysis-1-4-using-d-tale-99a2c267db79)\n - [EOD Notes: Using python and dtale to analyze correlations](https://www.google.com/amp/s/eod-notes.com/2020/05/07/using-python-and-dtale-to-analyze-correlations/amp/)\n - [Data Exploration is Now Super Easy w/ D-Tale](https://dibyendudeb.com/d-tale-data-exploration-tool/)\n - [Practical Business Python](https://pbpython.com/dataframe-gui-overview.html)\n\n## Tutorials\n\n - [Pip Install Python YouTube Channel](https://m.youtube.com/watch?v=0RihZNdQc7k&feature=youtu.be)\n - [machine_learning_2019](https://www.youtube.com/watch?v=-egtEUVBy9c)\n - [D-Tale The Best Library To Perform Exploratory Data Analysis Using Single Line Of Code🔥🔥🔥🔥](https://www.youtube.com/watch?v=xSXGcuiEzUc)\n - [Explore and Analyze Pandas Data Structures w/ D-Tale](https://m.youtube.com/watch?v=JUu5IYVGqCg)\n - [Data Preprocessing simplest method 🔥](https://www.youtube.com/watch?v=Q2kMNPKgN4g)\n\n ## Related Resources\n\n - [Adventures In Flask While Developing D-Tale](https://github.com/man-group/dtale/blob/master/docs/FlaskCon/FlaskAdventures.md)\n - [Adding Range Selection to react-virtualized](https://github.com/man-group/dtale/blob/master/docs/RANGE_SELECTION.md)\n - [Building Draggable/Resizable Modals](https://github.com/man-group/dtale/blob/master/docs/DRAGGABLE_RESIZABLE_MODALS.md)\n - [Embedding Flask Apps within Streamlit](https://github.com/man-group/dtale/blob/master/docs/EMBEDDED_STREAMLIT.md)\n\n\n## Where To get It\nThe source code is currently hosted on GitHub at:\nhttps://github.com/man-group/dtale\n\nBinary installers for the latest released version are available at the [Python\npackage index](https://pypi.org/project/dtale) and on conda using [conda-forge](https://github.com/conda-forge/dtale-feedstock).\n\n```sh\n# conda\nconda install dtale -c conda-forge\n# if you want to also use \"Export to PNG\" for charts\nconda install -c plotly python-kaleido\n```\n\n```sh\n# or PyPI\npip install dtale\n```\n\n## Getting Started\n\n|PyCharm|jupyter|\n|:------:|:------:|\n|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/gifs/dtale_demo_mini.gif)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/gifs/dtale_ipython.gif)|\n\n### Python Terminal\nThis comes courtesy of PyCharm\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/Python_Terminal.png)\nFeel free to invoke `python` or `ipython` directly and use the commands in the screenshot above and it should work\n\n#### Issues With Windows Firewall\n\nIf you run into issues with viewing D-Tale in your browser on Windows please try making Python public under \"Allowed Apps\" in your Firewall configuration.  Here is a nice article:\n[How to Allow Apps to Communicate Through the Windows Firewall](https://www.howtogeek.com/howto/uncategorized/how-to-create-exceptions-in-windows-vista-firewall/)\n\n#### Additional functions available programmatically\n```python\nimport dtale\nimport pandas as pd\n\ndf = pd.DataFrame([dict(a=1,b=2,c=3)])\n\n# Assigning a reference to a running D-Tale process\nd = dtale.show(df)\n\n# Accessing data associated with D-Tale process\ntmp = d.data.copy()\ntmp['d'] = 4\n\n# Altering data associated with D-Tale process\n# FYI: this will clear any front-end settings you have at the time for this process (filter, sorts, formatting)\nd.data = tmp\n\n# Shutting down D-Tale process\nd.kill()\n\n# using Python's `webbrowser` package it will try and open your server's default browser to this process\nd.open_browser()\n\n# There is also some helpful metadata about the process\nd._data_id  # the process's data identifier\nd._url  # the url to access the process\n\nd2 = dtale.get_instance(d._data_id)  # returns a new reference to the instance running at that data_id\n\ndtale.instances()  # prints a list of all ids & urls of running D-Tale sessions\n\n```\n\n## License\n\nD-Tale is licensed under the GNU LGPL v2.1.  A copy of which is included in [LICENSE](https://github.com/man-group/dtale/blob/master/LICENSE.md)\n\n## Additional Documentation\n\nLocated on the main [github repo](https://github.com/man-group/dtale)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 23.9111328125,
          "content": "                  GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 2.1, February 1999\n\n Copyright (C) 1991, 1999 Free Software Foundation, Inc.\n 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n[This is the first released version of the Lesser GPL.  It also counts\n as the successor of the GNU Library Public License, version 2, hence\n the version number 2.1.]\n\n                            Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicenses are intended to guarantee your freedom to share and change\nfree software--to make sure the software is free for all its users.\n\n  This license, the Lesser General Public License, applies to some\nspecially designated software packages--typically libraries--of the\nFree Software Foundation and other authors who decide to use it.  You\ncan use it too, but we suggest you first think carefully about whether\nthis license or the ordinary General Public License is the better\nstrategy to use in any particular case, based on the explanations below.\n\n  When we speak of free software, we are referring to freedom of use,\nnot price.  Our General Public Licenses are designed to make sure that\nyou have the freedom to distribute copies of free software (and charge\nfor this service if you wish); that you receive source code or can get\nit if you want it; that you can change the software and use pieces of\nit in new free programs; and that you are informed that you can do\nthese things.\n\n  To protect your rights, we need to make restrictions that forbid\ndistributors to deny you these rights or to ask you to surrender these\nrights.  These restrictions translate to certain responsibilities for\nyou if you distribute copies of the library or if you modify it.\n\n  For example, if you distribute copies of the library, whether gratis\nor for a fee, you must give the recipients all the rights that we gave\nyou.  You must make sure that they, too, receive or can get the source\ncode.  If you link other code with the library, you must provide\ncomplete object files to the recipients, so that they can relink them\nwith the library after making changes to the library and recompiling\nit.  And you must show them these terms so they know their rights.\n\n  We protect your rights with a two-step method: (1) we copyright the\nlibrary, and (2) we offer you this license, which gives you legal\npermission to copy, distribute and/or modify the library.\n\n  To protect each distributor, we want to make it very clear that\nthere is no warranty for the free library.  Also, if the library is\nmodified by someone else and passed on, the recipients should know\nthat what they have is not the original version, so that the original\nauthor's reputation will not be affected by problems that might be\nintroduced by others.\n\f\n  Finally, software patents pose a constant threat to the existence of\nany free program.  We wish to make sure that a company cannot\neffectively restrict the users of a free program by obtaining a\nrestrictive license from a patent holder.  Therefore, we insist that\nany patent license obtained for a version of the library must be\nconsistent with the full freedom of use specified in this license.\n\n  Most GNU software, including some libraries, is covered by the\nordinary GNU General Public License.  This license, the GNU Lesser\nGeneral Public License, applies to certain designated libraries, and\nis quite different from the ordinary General Public License.  We use\nthis license for certain libraries in order to permit linking those\nlibraries into non-free programs.\n\n  When a program is linked with a library, whether statically or using\na shared library, the combination of the two is legally speaking a\ncombined work, a derivative of the original library.  The ordinary\nGeneral Public License therefore permits such linking only if the\nentire combination fits its criteria of freedom.  The Lesser General\nPublic License permits more lax criteria for linking other code with\nthe library.\n\n  We call this license the \"Lesser\" General Public License because it\ndoes Less to protect the user's freedom than the ordinary General\nPublic License.  It also provides other free software developers Less\nof an advantage over competing non-free programs.  These disadvantages\nare the reason we use the ordinary General Public License for many\nlibraries.  However, the Lesser license provides advantages in certain\nspecial circumstances.\n\n  For example, on rare occasions, there may be a special need to\nencourage the widest possible use of a certain library, so that it becomes\na de-facto standard.  To achieve this, non-free programs must be\nallowed to use the library.  A more frequent case is that a free\nlibrary does the same job as widely used non-free libraries.  In this\ncase, there is little to gain by limiting the free library to free\nsoftware only, so we use the Lesser General Public License.\n\n  In other cases, permission to use a particular library in non-free\nprograms enables a greater number of people to use a large body of\nfree software.  For example, permission to use the GNU C Library in\nnon-free programs enables many more people to use the whole GNU\noperating system, as well as its variant, the GNU/Linux operating\nsystem.\n\n  Although the Lesser General Public License is Less protective of the\nusers' freedom, it does ensure that the user of a program that is\nlinked with the Library has the freedom and the wherewithal to run\nthat program using a modified version of the Library.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.  Pay close attention to the difference between a\n\"work based on the library\" and a \"work that uses the library\".  The\nformer contains code derived from the library, whereas the latter must\nbe combined with the library in order to run.\n\f\n                  GNU LESSER GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License Agreement applies to any software library or other\nprogram which contains a notice placed by the copyright holder or\nother authorized party saying it may be distributed under the terms of\nthis Lesser General Public License (also called \"this License\").\nEach licensee is addressed as \"you\".\n\n  A \"library\" means a collection of software functions and/or data\nprepared so as to be conveniently linked with application programs\n(which use some of those functions and data) to form executables.\n\n  The \"Library\", below, refers to any such software library or work\nwhich has been distributed under these terms.  A \"work based on the\nLibrary\" means either the Library or any derivative work under\ncopyright law: that is to say, a work containing the Library or a\nportion of it, either verbatim or with modifications and/or translated\nstraightforwardly into another language.  (Hereinafter, translation is\nincluded without limitation in the term \"modification\".)\n\n  \"Source code\" for a work means the preferred form of the work for\nmaking modifications to it.  For a library, complete source code means\nall the source code for all modules it contains, plus any associated\ninterface definition files, plus the scripts used to control compilation\nand installation of the library.\n\n  Activities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning a program using the Library is not restricted, and output from\nsuch a program is covered only if its contents constitute a work based\non the Library (independent of the use of the Library in a tool for\nwriting it).  Whether that is true depends on what the Library does\nand what the program that uses the Library does.\n\n  1. You may copy and distribute verbatim copies of the Library's\ncomplete source code as you receive it, in any medium, provided that\nyou conspicuously and appropriately publish on each copy an\nappropriate copyright notice and disclaimer of warranty; keep intact\nall the notices that refer to this License and to the absence of any\nwarranty; and distribute a copy of this License along with the\nLibrary.\n\n  You may charge a fee for the physical act of transferring a copy,\nand you may at your option offer warranty protection in exchange for a\nfee.\n\f\n  2. You may modify your copy or copies of the Library or any portion\nof it, thus forming a work based on the Library, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) The modified work must itself be a software library.\n\n    b) You must cause the files modified to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    c) You must cause the whole of the work to be licensed at no\n    charge to all third parties under the terms of this License.\n\n    d) If a facility in the modified Library refers to a function or a\n    table of data to be supplied by an application program that uses\n    the facility, other than as an argument passed when the facility\n    is invoked, then you must make a good faith effort to ensure that,\n    in the event an application does not supply such function or\n    table, the facility still operates, and performs whatever part of\n    its purpose remains meaningful.\n\n    (For example, a function in a library to compute square roots has\n    a purpose that is entirely well-defined independent of the\n    application.  Therefore, Subsection 2d requires that any\n    application-supplied function or table used by this function must\n    be optional: if the application does not supply it, the square\n    root function must still compute square roots.)\n\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Library,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Library, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote\nit.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Library.\n\nIn addition, mere aggregation of another work not based on the Library\nwith the Library (or with a work based on the Library) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may opt to apply the terms of the ordinary GNU General Public\nLicense instead of this License to a given copy of the Library.  To do\nthis, you must alter all the notices that refer to this License, so\nthat they refer to the ordinary GNU General Public License, version 2,\ninstead of to this License.  (If a newer version than version 2 of the\nordinary GNU General Public License has appeared, then you can specify\nthat version instead if you wish.)  Do not make any other change in\nthese notices.\n\f\n  Once this change is made in a given copy, it is irreversible for\nthat copy, so the ordinary GNU General Public License applies to all\nsubsequent copies and derivative works made from that copy.\n\n  This option is useful when you wish to copy part of the code of\nthe Library into a program that is not a library.\n\n  4. You may copy and distribute the Library (or a portion or\nderivative of it, under Section 2) in object code or executable form\nunder the terms of Sections 1 and 2 above provided that you accompany\nit with the complete corresponding machine-readable source code, which\nmust be distributed under the terms of Sections 1 and 2 above on a\nmedium customarily used for software interchange.\n\n  If distribution of object code is made by offering access to copy\nfrom a designated place, then offering equivalent access to copy the\nsource code from the same place satisfies the requirement to\ndistribute the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\n  5. A program that contains no derivative of any portion of the\nLibrary, but is designed to work with the Library by being compiled or\nlinked with it, is called a \"work that uses the Library\".  Such a\nwork, in isolation, is not a derivative work of the Library, and\ntherefore falls outside the scope of this License.\n\n  However, linking a \"work that uses the Library\" with the Library\ncreates an executable that is a derivative of the Library (because it\ncontains portions of the Library), rather than a \"work that uses the\nlibrary\".  The executable is therefore covered by this License.\nSection 6 states terms for distribution of such executables.\n\n  When a \"work that uses the Library\" uses material from a header file\nthat is part of the Library, the object code for the work may be a\nderivative work of the Library even though the source code is not.\nWhether this is true is especially significant if the work can be\nlinked without the Library, or if the work is itself a library.  The\nthreshold for this to be true is not precisely defined by law.\n\n  If such an object file uses only numerical parameters, data\nstructure layouts and accessors, and small macros and small inline\nfunctions (ten lines or less in length), then the use of the object\nfile is unrestricted, regardless of whether it is legally a derivative\nwork.  (Executables containing this object code plus portions of the\nLibrary will still fall under Section 6.)\n\n  Otherwise, if the work is a derivative of the Library, you may\ndistribute the object code for the work under the terms of Section 6.\nAny executables containing that work also fall under Section 6,\nwhether or not they are linked directly with the Library itself.\n\f\n  6. As an exception to the Sections above, you may also combine or\nlink a \"work that uses the Library\" with the Library to produce a\nwork containing portions of the Library, and distribute that work\nunder terms of your choice, provided that the terms permit\nmodification of the work for the customer's own use and reverse\nengineering for debugging such modifications.\n\n  You must give prominent notice with each copy of the work that the\nLibrary is used in it and that the Library and its use are covered by\nthis License.  You must supply a copy of this License.  If the work\nduring execution displays copyright notices, you must include the\ncopyright notice for the Library among them, as well as a reference\ndirecting the user to the copy of this License.  Also, you must do one\nof these things:\n\n    a) Accompany the work with the complete corresponding\n    machine-readable source code for the Library including whatever\n    changes were used in the work (which must be distributed under\n    Sections 1 and 2 above); and, if the work is an executable linked\n    with the Library, with the complete machine-readable \"work that\n    uses the Library\", as object code and/or source code, so that the\n    user can modify the Library and then relink to produce a modified\n    executable containing the modified Library.  (It is understood\n    that the user who changes the contents of definitions files in the\n    Library will not necessarily be able to recompile the application\n    to use the modified definitions.)\n\n    b) Use a suitable shared library mechanism for linking with the\n    Library.  A suitable mechanism is one that (1) uses at run time a\n    copy of the library already present on the user's computer system,\n    rather than copying library functions into the executable, and (2)\n    will operate properly with a modified version of the library, if\n    the user installs one, as long as the modified version is\n    interface-compatible with the version that the work was made with.\n\n    c) Accompany the work with a written offer, valid for at\n    least three years, to give the same user the materials\n    specified in Subsection 6a, above, for a charge no more\n    than the cost of performing this distribution.\n\n    d) If distribution of the work is made by offering access to copy\n    from a designated place, offer equivalent access to copy the above\n    specified materials from the same place.\n\n    e) Verify that the user has already received a copy of these\n    materials or that you have already sent this user a copy.\n\n  For an executable, the required form of the \"work that uses the\nLibrary\" must include any data and utility programs needed for\nreproducing the executable from it.  However, as a special exception,\nthe materials to be distributed need not include anything that is\nnormally distributed (in either source or binary form) with the major\ncomponents (compiler, kernel, and so on) of the operating system on\nwhich the executable runs, unless that component itself accompanies\nthe executable.\n\n  It may happen that this requirement contradicts the license\nrestrictions of other proprietary libraries that do not normally\naccompany the operating system.  Such a contradiction means you cannot\nuse both them and the Library together in an executable that you\ndistribute.\n\f\n  7. You may place library facilities that are a work based on the\nLibrary side-by-side in a single library together with other library\nfacilities not covered by this License, and distribute such a combined\nlibrary, provided that the separate distribution of the work based on\nthe Library and of the other library facilities is otherwise\npermitted, and provided that you do these two things:\n\n    a) Accompany the combined library with a copy of the same work\n    based on the Library, uncombined with any other library\n    facilities.  This must be distributed under the terms of the\n    Sections above.\n\n    b) Give prominent notice with the combined library of the fact\n    that part of it is a work based on the Library, and explaining\n    where to find the accompanying uncombined form of the same work.\n\n  8. You may not copy, modify, sublicense, link with, or distribute\nthe Library except as expressly provided under this License.  Any\nattempt otherwise to copy, modify, sublicense, link with, or\ndistribute the Library is void, and will automatically terminate your\nrights under this License.  However, parties who have received copies,\nor rights, from you under this License will not have their licenses\nterminated so long as such parties remain in full compliance.\n\n  9. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Library or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Library (or any work based on the\nLibrary), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Library or works based on it.\n\n  10. Each time you redistribute the Library (or any work based on the\nLibrary), the recipient automatically receives a license from the\noriginal licensor to copy, distribute, link with or modify the Library\nsubject to these terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties with\nthis License.\n\f\n  11. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Library at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Library by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Library.\n\nIf any portion of this section is held invalid or unenforceable under any\nparticular circumstance, the balance of the section is intended to apply,\nand the section as a whole is intended to apply in other circumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\n  12. If the distribution and/or use of the Library is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Library under this License may add\nan explicit geographical distribution limitation excluding those countries,\nso that distribution is permitted only in or among countries not thus\nexcluded.  In such case, this License incorporates the limitation as if\nwritten in the body of this License.\n\n  13. The Free Software Foundation may publish revised and/or new\nversions of the Lesser General Public License from time to time.\nSuch new versions will be similar in spirit to the present version,\nbut may differ in detail to address new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Library\nspecifies a version number of this License which applies to it and\n\"any later version\", you have the option of following the terms and\nconditions either of that version or of any later version published by\nthe Free Software Foundation.  If the Library does not specify a\nlicense version number, you may choose any version ever published by\nthe Free Software Foundation.\n\f\n  14. If you wish to incorporate parts of the Library into other free\nprograms whose distribution conditions are incompatible with these,\nwrite to the author to ask for permission.  For software which is\ncopyrighted by the Free Software Foundation, write to the Free\nSoftware Foundation; we sometimes make exceptions for this.  Our\ndecision will be guided by the two goals of preserving the free status\nof all derivatives of our free software and of promoting the sharing\nand reuse of software generally.\n\n                            NO WARRANTY\n\n  15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO\nWARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW.\nEXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR\nOTHER PARTIES PROVIDE THE LIBRARY \"AS IS\" WITHOUT WARRANTY OF ANY\nKIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE\nIMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE\nLIBRARY IS WITH YOU.  SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME\nTHE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN\nWRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY\nAND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU\nFOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR\nCONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE\nLIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING\nRENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A\nFAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF\nSUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH\nDAMAGES.\n\n                     END OF TERMS AND CONDITIONS"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.158203125,
          "content": "include README.md\ninclude CHANGES.md\ninclude DESCRIPTION.md\ninclude LICENSE\ninclude requirements.txt\ninclude requirements-redis.txt\ninclude requirements-test.txt\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 92.3369140625,
          "content": "[![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/Title.png)](https://github.com/man-group/dtale)\n\n* [Live Demo](http://alphatechadmin.pythonanywhere.com)\n* [Animated US COVID-19 Deaths By State](http://alphatechadmin.pythonanywhere.com/dtale/charts/3?chart_type=maps&query=date+%3E+%2720200301%27&agg=raw&map_type=choropleth&loc_mode=USA-states&loc=state_code&map_val=deaths&colorscale=Reds&cpg=false&animate_by=date)\n* [3D Scatter Chart](http://alphatechadmin.pythonanywhere.com/dtale/charts/4?chart_type=3d_scatter&query=&x=date&z=Col0&agg=raw&cpg=false&y=%5B%22security_id%22%5D)\n* [Surface Chart](http://alphatechadmin.pythonanywhere.com/dtale/charts/4?chart_type=surface&query=&x=date&z=Col0&agg=raw&cpg=false&y=%5B%22security_id%22%5D)\n* [Network Analysis](http://alphatechadmin.pythonanywhere.com/dtale/network/5?to=to&from=from&group=route_id&weight=)\n\n-----------------\n\n[![CircleCI](https://circleci.com/gh/man-group/dtale.svg?style=shield)](https://circleci.com/gh/man-group/dtale)\n[![PyPI Python Versions](https://img.shields.io/pypi/pyversions/dtale.svg)](https://pypi.python.org/pypi/dtale/)\n[![PyPI](https://img.shields.io/pypi/v/dtale)](https://pypi.org/project/dtale/)\n[![Conda](https://img.shields.io/conda/v/conda-forge/dtale)](https://anaconda.org/conda-forge/dtale)\n[![ReadTheDocs](https://readthedocs.org/projects/dtale/badge)](https://dtale.readthedocs.io)\n[![codecov](https://codecov.io/gh/man-group/dtale/branch/master/graph/badge.svg)](https://codecov.io/gh/man-group/dtale)\n[![Downloads](https://static.pepy.tech/badge/dtale)](https://pepy.tech/project/dtale)\n[![Open in VS Code](https://img.shields.io/badge/Visual_Studio_Code-0078D4?style=flat&logo=visual%20studio%20code&logoColor=white)](https://open.vscode.dev/man-group/dtale)\n\n## What is it?\n\nD-Tale is the combination of a Flask back-end and a React front-end to bring you an easy way to view & analyze Pandas data structures.  It integrates seamlessly with ipython notebooks & python/ipython terminals.  Currently this tool supports such Pandas objects as DataFrame, Series, MultiIndex, DatetimeIndex & RangeIndex.\n\n## Origins\n\nD-Tale was the product of a SAS to Python conversion.  What was originally a perl script wrapper on top of SAS's `insight` function is now a lightweight web client on top of Pandas data structures.\n\n## In The News\n\n - [4 Libraries that can perform EDA in one line of python code](https://towardsdatascience.com/4-libraries-that-can-perform-eda-in-one-line-of-python-code-b13938a06ae)\n - [React Status](https://react.statuscode.com/issues/204)\n - [KDNuggets](https://www.kdnuggets.com/2020/08/bring-pandas-dataframes-life-d-tale.html)\n - [Man Institute](https://www.man.com/maninstitute/d-tale) (warning: contains deprecated functionality)\n - [Python Bytes](https://pythonbytes.fm/episodes/show/169/jupyter-notebooks-natively-on-your-ipad)\n - [FlaskCon 2020](https://www.youtube.com/watch?v=BNgolmUWBp4&t=33s)\n - [San Diego Python](https://www.youtube.com/watch?v=fLsGur5YqeE&t=29s)\n - [Medium: towards data science](https://towardsdatascience.com/introduction-to-d-tale-5eddd81abe3f)\n - [Medium: Exploratory Data Analysis – Using D-Tale](https://medium.com/da-tum/exploratory-data-analysis-1-4-using-d-tale-99a2c267db79)\n - [EOD Notes: Using python and dtale to analyze correlations](https://www.google.com/amp/s/eod-notes.com/2020/05/07/using-python-and-dtale-to-analyze-correlations/amp/)\n - [Data Exploration is Now Super Easy w/ D-Tale](https://dibyendudeb.com/d-tale-data-exploration-tool/)\n - [Practical Business Python](https://pbpython.com/dataframe-gui-overview.html)\n\n## Tutorials\n\n - [Pip Install Python YouTube Channel](https://m.youtube.com/watch?v=0RihZNdQc7k&feature=youtu.be)\n - [machine_learning_2019](https://www.youtube.com/watch?v=-egtEUVBy9c)\n - [D-Tale The Best Library To Perform Exploratory Data Analysis Using Single Line Of Code🔥🔥🔥🔥](https://www.youtube.com/watch?v=xSXGcuiEzUc)\n - [Explore and Analyze Pandas Data Structures w/ D-Tale](https://m.youtube.com/watch?v=JUu5IYVGqCg)\n - [Data Preprocessing simplest method 🔥](https://www.youtube.com/watch?v=Q2kMNPKgN4g)\n\n ## Related Resources\n\n - [Adventures In Flask While Developing D-Tale](https://github.com/man-group/dtale/blob/master/docs/FlaskCon/FlaskAdventures.md)\n - [Adding Range Selection to react-virtualized](https://github.com/man-group/dtale/blob/master/docs/RANGE_SELECTION.md)\n - [Building Draggable/Resizable Modals](https://github.com/man-group/dtale/blob/master/docs/DRAGGABLE_RESIZABLE_MODALS.md)\n - [Embedding Flask Apps within Streamlit](https://github.com/man-group/dtale/blob/master/docs/EMBEDDED_STREAMLIT.md)\n\n## Contents\n\n- [Where To Get It](#where-to-get-it)\n- [Getting Started](#getting-started)\n  - [Python Terminal](#python-terminal)\n  - [As A Script](#as-a-script)\n  - [Jupyter Notebook](#jupyter-notebook)\n  - [Jupyterhub w/ Jupyter Server Proxy](#jupyterhub-w-jupyter-server-proxy)\n  - [Jupyterhub w/ Kubernetes](https://github.com/man-group/dtale/blob/master/docs/JUPYTERHUB_KUBERNETES.md)\n  - [Docker Container](#docker-container)\n  - [Google Colab](#google-colab)\n  - [Kaggle](#kaggle)\n  - [Binder](#binder)\n  - [R with Reticulate](#r-with-reticulate)\n  - [Startup with No Data](#startup-with-no-data)\n  - [Command-line](#command-line)\n  - [Custom Command-line Loaders](#custom-command-line-loaders)\n  - [Embedding Within Your Own Flask App](https://github.com/man-group/dtale/blob/master/docs/EMBEDDED_FLASK.md)\n  - [Embedding Within Your Own Django App](https://github.com/man-group/dtale/blob/master/docs/EMBEDDED_DJANGO.md)\n  - [Embedding Within Streamlit](https://github.com/man-group/dtale/blob/master/docs/EMBEDDED_DTALE_STREAMLIT.md)\n  - [Running D-Tale On Gunicorn w/ Redis](https://github.com/man-group/dtale/blob/master/docs/GUNICORN_REDIS.md)\n  - [Configuration](https://github.com/man-group/dtale/blob/master/docs/CONFIGURATION.md)\n  - [Authentication](#authentication)\n  - [Predefined Filters](#predefined-filters)\n  - [Using Swifter](#using-swifter)\n  - [Behavior for Wide Dataframes](#behavior-for-wide-dataframes)\n- [UI](#ui)\n  - [Dimensions/Ribbon Menu/Main Menu](#dimensionsribbon-menumain-menu)\n  - [Header](#header)\n  - [Resize Columns](#resize-columns)\n  - [Editing Cells](#editing-cells)\n  - [Copy Cells Into Clipboard](#copy-cells-into-clipboard)\n  - [Main Menu Functions](#main-menu-functions)\n    - [XArray Operations](#xarray-operations), [Describe](#describe), [Outlier Detection](#outlier-detection), [Custom Filter](#custom-filter), [Dataframe Functions](#dataframe-functions), [Merge & Stack](#merge--stack), [Summarize Data](#summarize-data), [Duplicates](#duplicates), [Missing Analysis](#missing-analysis), [Correlations](#correlations), [Predictive Power Score](#predictive-power-score), [Heat Map](#heat-map), [Highlight Dtypes](#highlight-dtypes), [Highlight Missing](#highlight-missing), [Highlight Outliers](#highlight-outliers), [Highlight Range](#highlight-range), [Low Variance Flag](#low-variance-flag), [Instances](#instances), [Code Exports](#code-exports), [Export CSV](#export-csv), [Load Data & Sample Datasets](#load-data--sample-datasets), [Refresh Widths](#refresh-widths), [About](#about), [Theme](#theme), [Reload Data](#reload-data), [Unpin/Pin Menu](#unpinpin-menu), [Language](#language), [Shutdown](#shutdown)\n  - [Column Menu Functions](#column-menu-functions)\n    - [Filtering](#filtering), [Moving Columns](#moving-columns), [Hiding Columns](#hiding-columns), [Delete](#delete), [Rename](#rename), [Replacements](#replacements), [Lock](#lock), [Unlock](#unlock), [Sorting](#sorting), [Formats](#formats), [Describe (Column Analysis)](#describe-column-analysis)\n  - [Charts](#charts)\n  - [Network Viewer](#network-viewer)\n  - [Hotkeys](#hotkeys)\n  - [Menu Functions Depending on Browser Dimensions](#menu-functions-depending-on-browser-dimensions)\n- [For Developers](#for-developers)\n  - [Cloning](#cloning)\n  - [Running Tests](#running-tests)\n  - [Linting](#linting)\n  - [Formatting JS](#formatting-js)\n  - [Docker Development](#docker-development)\n  - [Adding Language Support](#adding-language-support)\n- [Global State/Data Storage](https://github.com/man-group/dtale/blob/master/docs/GLOBAL_STATE.md)\n- [Startup Behavior](#startup-behavior)\n- [Documentation](#documentation)\n- [Dependencies](#dependencies)\n- [Acknowledgements](#acknowledgements)\n- [License](#license)\n\n## Where To get It\nThe source code is currently hosted on GitHub at:\nhttps://github.com/man-group/dtale\n\nBinary installers for the latest released version are available at the [Python\npackage index](https://pypi.org/project/dtale) and on conda using [conda-forge](https://github.com/conda-forge/dtale-feedstock).\n\n```sh\n# conda\nconda install dtale -c conda-forge\n# if you want to also use \"Export to PNG\" for charts\nconda install -c plotly python-kaleido\n```\n\n```sh\n# or PyPI\npip install dtale\n```\n\n## Getting Started\n\n|PyCharm|jupyter|\n|:------:|:------:|\n|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/gifs/dtale_demo_mini.gif)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/gifs/dtale_ipython.gif)|\n\n### Python Terminal\nThis comes courtesy of PyCharm\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/Python_Terminal.png)\nFeel free to invoke `python` or `ipython` directly and use the commands in the screenshot above and it should work\n\n#### Issues With Windows Firewall\n\nIf you run into issues with viewing D-Tale in your browser on Windows please try making Python public under \"Allowed Apps\" in your Firewall configuration.  Here is a nice article:\n[How to Allow Apps to Communicate Through the Windows Firewall](https://www.howtogeek.com/howto/uncategorized/how-to-create-exceptions-in-windows-vista-firewall/)\n\n#### Additional functions available programmatically\n```python\nimport dtale\nimport pandas as pd\n\ndf = pd.DataFrame([dict(a=1,b=2,c=3)])\n\n# Assigning a reference to a running D-Tale process.\nd = dtale.show(df)\n\n# Accessing data associated with D-Tale process.\ntmp = d.data.copy()\ntmp['d'] = 4\n\n# Altering data associated with D-Tale process\n# FYI: this will clear any front-end settings you have at the time for this process (filter, sorts, formatting)\nd.data = tmp\n\n# Get raw dataframe w/ any sorting or edits made through the UI\nd.data\n\n# Get raw dataframe similar to '.data' along with any filters applied using the UI\nd.view_data\n\n# Shutting down D-Tale process\nd.kill()\n\n# Using Python's `webbrowser` package it will try and open your server's default browser to this process.\nd.open_browser()\n\n# There is also some helpful metadata about the process.\nd._data_id  # The process's data identifier.\nd._url  # The url to access the process.\n\nd2 = dtale.get_instance(d._data_id)  # Returns a new reference to the instance running at that data_id.\n\ndtale.instances()  # Prints a list of all ids & urls of running D-Tale sessions.\n\n```\n\n#### Duplicate data check\nTo help guard against users loading the same data to D-Tale multiple times and thus eating up precious memory, we have a loose check for duplicate input data.  The check runs the following:\n * Are row & column count the same as a previously loaded piece of data?\n * Are the names and order of columns the same as a previously loaded piece of data?\n\nIf both these conditions are true then you will be presented with an error and a link to the previously loaded data.  Here is an example of how the interaction looks:\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/Duplicate_data.png)\n\n\n### As A Script\n\nD-Tale can be run as script by adding `subprocess=False` to your `dtale.show` command.  Here is an example script:\n```python\nimport dtale\nimport pandas as pd\n\nif __name__ == '__main__':\n      dtale.show(pd.DataFrame([1,2,3,4,5]), subprocess=False)\n```\n\n### Jupyter Notebook\nWithin any jupyter (ipython) notebook executing a cell like this will display a small instance of D-Tale in the output cell.  Here are some examples:\n\n|`dtale.show`|assignment|instance|\n|:------:|:------:|:------:|\n|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/ipython1.png)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/ipython2.png)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/ipython3.png)|\n\nIf you are running ipython<=5.0 then you also have the ability to adjust the size of your output cell for the most recent instance displayed:\n\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/ipython_adjust.png)\n\nOne thing of note is that a lot of the modal popups you see in the standard browser version will now open separate browser windows for spacial convienence:\n\n|Column Menus|Correlations|Describe|Column Analysis|Instances|\n|:------:|:------:|:------:|:------:|:------:|\n|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/Column_menu.png)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/correlations_popup.png)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/describe_popup.png)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/histogram_popup.png)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/instances_popup.png)|\n\n### JupyterHub w/ Jupyter Server Proxy\n\nJupyterHub has an extension that allows to proxy port for user, [JupyterHub Server Proxy](https://github.com/jupyterhub/jupyter-server-proxy)\n\nTo me it seems like this extension might be the best solution to getting D-Tale running within kubernetes.  Here's how to use it:\n\n```python\nimport pandas as pd\n\nimport dtale\nimport dtale.app as dtale_app\n\ndtale_app.JUPYTER_SERVER_PROXY = True\n\ndtale.show(pd.DataFrame([1,2,3]))\n```\n\nNotice the command `dtale_app.JUPYTER_SERVER_PROXY = True` this will make sure that any D-Tale instance will be served with the jupyter server proxy application root prefix:\n\n`/user/{jupyter username}/proxy/{dtale instance port}/`\n\nOne thing to note is that if you try to look at the `_main_url` of your D-Tale instance in your notebook it will not include the hostname or port:\n\n```python\nimport pandas as pd\n\nimport dtale\nimport dtale.app as dtale_app\n\ndtale_app.JUPYTER_SERVER_PROXY = True\n\nd = dtale.show(pd.DataFrame([1,2,3]))\nd._main_url # /user/johndoe/proxy/40000/dtale/main/1\n```\n\n This is because it's very hard to promgramatically figure out the host/port that your notebook is running on.  So if you want to look at `_main_url` please be sure to preface it with:\n \n `http[s]://[jupyterhub host]:[jupyterhub port]`\n\nIf for some reason jupyterhub changes their API so that the application root changes you can also override D-Tale's application root by using the `app_root` parameter to the `show()` function:\n\n```python\nimport pandas as pd\n\nimport dtale\nimport dtale.app as dtale_app\n\ndtale.show(pd.DataFrame([1,2,3]), app_root='/user/johndoe/proxy/40000/`)\n```\n\nUsing this parameter will only apply the application root to that specific instance so you would have to include it on every call to `show()`.\n\n### JupyterHub w/ Kubernetes\n\nPlease read this [post](https://github.com/man-group/dtale/blob/master/docs/JUPYTERHUB_KUBERNETES.md)\n\n### Docker Container\n\nIf you have D-Tale installed within your docker container please add the following parameters to your `docker run` command.\n\n**On a Mac**:\n\n```sh\ndocker run -h `hostname` -p 40000:40000\n```\n\n* `-h` this will allow the hostname (and not the PID of the docker container) to be available when building D-Tale URLs\n* `-p` access to port 40000 which is the default port for running D-Tale\n\n**On Windows**:\n\n```sh\ndocker run -p 40000:40000\n```\n\n* `-p` access to port 40000 which is the default port for running D-Tale\n* D-Tale URL will be http://127.0.0.1:40000/\n\n**Everything Else**:\n\n```sh\ndocker run -h `hostname` --network host\n```\n\n* `-h` this will allow the hostname (and not the PID of the docker container) to be available when building D-Tale URLs\n* `--network host` this will allow access to as many ports as needed for running D-Tale processes\n\n### Google Colab\n\nThis is a hosted notebook site and thanks to Colab's internal function `google.colab.output.eval_js` & the JS function `google.colab.kernel.proexyPort` users can run D-Tale within their notebooks.\n\n**DISCLAIMER:** It is important that you set `USE_COLAB` to true when using D-Tale within this service.  Here is an example:\n\n```python\nimport pandas as pd\n\nimport dtale\nimport dtale.app as dtale_app\n\ndtale_app.USE_COLAB = True\n\ndtale.show(pd.DataFrame([1,2,3]))\n```\n\nIf this does not work for you try using `USE_NGROK` which is described in the next section.\n\n### Kaggle\n\nThis is yet another hosted notebook site and thanks to the work of [flask_ngrok](https://github.com/gstaff/flask-ngrok) users can run D-Tale within their notebooks.\n\n**DISCLAIMER:** It is import that you set `USE_NGROK` to true when using D-Tale within this service.  Please make sure to run `pip install flask-ngrok` before running this example. Here is an example:\n\n```python\nimport pandas as pd\n\nimport dtale\nimport dtale.app as dtale_app\n\ndtale_app.USE_NGROK = True\n\ndtale.show(pd.DataFrame([1,2,3]))\n```\n\nHere are some video tutorials of each:\n\n|Service|Tutorial|Addtl Notes|\n|:------:|:------:|:------:|\n|Google Colab|[![](http://img.youtube.com/vi/pOYl2M1clIw/0.jpg)](http://www.youtube.com/watch?v=pOYl2M1clIw \"Google Colab\")||\n|Kaggle|[![](http://img.youtube.com/vi/8Il-2HHs2Mg/0.jpg)](http://www.youtube.com/watch?v=8Il-2HHs2Mg \"Kaggle\")|make sure you switch the \"Internet\" toggle to \"On\" under settings of your notebook so you can install the egg from pip|\n\nIt is important to note that using NGROK will limit you to 20 connections per mintue so if you see this error:\n\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/ngrok_limit.png)\n\nWait a little while and it should allow you to do work again.  I am actively working on finding a more sustainable solution similar to what I did for google colab. :pray:\n\n### Binder\n\nI have built a repo which shows an example of how to run D-Tale within Binder [here](https://github.com/aschonfeld/dtale-binder).\n\nThe important take-aways are:\n* you must have `jupyter-server-proxy` installed\n* look at the `environment.yml` file to see how to add it to your environment\n* look at the `postBuild` file for how to activate it on startup\n\n\n### R with Reticulate\n\nI was able to get D-Tale running in R using reticulate. Here is an example:\n\n```\nlibrary('reticulate')\ndtale <- import('dtale')\ndf <- read.csv('https://vincentarelbundock.github.io/Rdatasets/csv/boot/acme.csv')\ndtale$show(df, subprocess=FALSE, open_browser=TRUE)\n```\n\nNow the problem with doing this is that D-Tale is not running as a subprocess so it will block your R console and you'll lose out the following functions:\n - manipulating the state of your data from your R console\n - adding more data to D-Tale\n\n`open_browser=TRUE` isn't required and won't work if you don't have a default browser installed on your machine. If you don't use that parameter simply copy & paste the URL that gets printed to your console in the browser of your choice.\n\nI'm going to do some more digging on why R doesn't seem to like using python subprocesses (not sure if it something with how reticulate manages the state of python) and post any findings to this thread.\n\nHere's some helpful links for getting setup:\n\nreticulate\n\ninstalling python packages\n\n### Startup with No Data\n\nIt is now possible to run D-Tale with no data loaded up front. So simply call `dtale.show()` and this will start the application for you and when you go to view it you will be presented with a screen where you can upload either a CSV or TSV file for data.\n\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/no_data.png)\n\nOnce you've loaded a file it will take you directly to the standard data grid comprised of the data from the file you loaded.  This might make it easier to use this as an on demand application within a container management system like kubernetes. You start and stop these on demand and you'll be presented with a new instance to load any CSV or TSV file to!\n\n### Command-line\nBase CLI options (run `dtale --help` to see all options available)\n\n|Prop     |Description|\n|:--------|:-----------|\n|`--host` |the name of the host you would like to use (most likely not needed since `socket.gethostname()` should figure this out)|\n|`--port` |the port you would like to assign to your D-Tale instance|\n|`--name` |an optional name you can assign to your D-Tale instance (this will be displayed in the `<title>` & Instances popup)|\n|`--debug`|turn on Flask's \"debug\" mode for your D-Tale instance|\n|`--no-reaper`|flag to turn off auto-reaping subprocess (kill D-Tale instances after an hour of inactivity), good for long-running displays |\n|`--open-browser`|flag to automatically open up your server's default browser to your D-Tale instance|\n|`--force`|flag to force D-Tale to try an kill any pre-existing process at the port you've specified so it can use it|\n\nLoading data from [**ArcticDB**(high performance, serverless DataFrame database)](https://github.com/man-group/ArcticDB) (this requires either installing **arcticdb** or **dtale[arcticdb]**)\n```bash\ndtale --arcticdb-uri lmdb:///<path> --arcticdb-library jdoe.my_lib --arcticdb-symbol my_symbol\n```\nIf you would like to change your storage mechanism to ArcticDB then add the `--arcticdb-use_store` flag\n```bash\ndtale --arcticdb-uri lmdb:///<path> --arcticdb-library my_lib --arcticdb-symbol my_symbol --arcticdb-use_store\n```\nLoading data from [**arctic**(high performance datastore for pandas dataframes)](https://github.com/man-group/arctic) (this requires either installing **arctic** or **dtale[arctic]**)\n```bash\ndtale --arctic-uri mongodb://localhost:27027 --arctic-library my_lib --arctic-symbol my_symbol --arctic-start 20130101 --arctic-end 20161231\n```\nLoading data from **CSV**\n```bash\ndtale --csv-path /home/jdoe/my_csv.csv --csv-parse_dates date\n```\nLoading data from **EXCEL**\n```bash\ndtale --excel-path /home/jdoe/my_csv.xlsx --excel-parse_dates date\ndtale --excel-path /home/jdoe/my_csv.xls --excel-parse_dates date\n```\nLoading data from **JSON**\n```bash\ndtale --json-path /home/jdoe/my_json.json --json-parse_dates date\n```\nor\n```bash\ndtale --json-path http://json-endpoint --json-parse_dates date\n```\nLoading data from **R Datasets**\n```bash\ndtale --r-path /home/jdoe/my_dataset.rda\n```\nLoading data from **SQLite DB Files**\n```bash\ndtale --sqlite-path /home/jdoe/test.sqlite3 --sqlite-table test_table\n```\n\n### Custom Command-line Loaders\n\nLoading data from a **Custom** loader\n- Using the DTALE_CLI_LOADERS environment variable, specify a path to a location containing some python modules\n- Any python module containing the global variables LOADER_KEY & LOADER_PROPS will be picked up as a custom loader\n  - LOADER_KEY: the key that will be associated with your loader.  By default you are given **arctic** & **csv** (if you use one of these are your key it will override these)\n  - LOADER_PROPS: the individual props available to be specified.\n    - For example, with arctic we have host, library, symbol, start & end.\n    - If you leave this property as an empty list your loader will be treated as a flag.  For example, instead of using all the arctic properties we would simply specify `--arctic` (this wouldn't work well in arctic's case since it depends on all those properties)\n- You will also need to specify a function with the following signature `def find_loader(kwargs)` which returns a function that returns a dataframe or `None`\n- Here is an example of a custom loader:\n```python\nfrom dtale.cli.clickutils import get_loader_options\n\n'''\n  IMPORTANT!!! This global variable is required for building any customized CLI loader.\n  When find loaders on startup it will search for any modules containing the global variable LOADER_KEY.\n'''\nLOADER_KEY = 'testdata'\nLOADER_PROPS = ['rows', 'columns']\n\n\ndef test_data(rows, columns):\n    import pandas as pd\n    import numpy as np\n    import random\n    from past.utils import old_div\n    from pandas.tseries.offsets import Day\n    from dtale.utils import dict_merge\n    import string\n\n    now = pd.Timestamp(pd.Timestamp('now').date())\n    dates = pd.date_range(now - Day(364), now)\n    num_of_securities = max(old_div(rows, len(dates)), 1)  # always have at least one security\n    securities = [\n        dict(security_id=100000 + sec_id, int_val=random.randint(1, 100000000000),\n             str_val=random.choice(string.ascii_letters) * 5)\n        for sec_id in range(num_of_securities)\n    ]\n    data = pd.concat([\n        pd.DataFrame([dict_merge(dict(date=date), sd) for sd in securities])\n        for date in dates\n    ], ignore_index=True)[['date', 'security_id', 'int_val', 'str_val']]\n\n    col_names = ['Col{}'.format(c) for c in range(columns)]\n    return pd.concat([data, pd.DataFrame(np.random.randn(len(data), columns), columns=col_names)], axis=1)\n\n\n# IMPORTANT!!! This function is required for building any customized CLI loader.\ndef find_loader(kwargs):\n    test_data_opts = get_loader_options(LOADER_KEY, LOADER_PROPS, kwargs)\n    if len([f for f in test_data_opts.values() if f]):\n        def _testdata_loader():\n            return test_data(int(test_data_opts.get('rows', 1000500)), int(test_data_opts.get('columns', 96)))\n\n        return _testdata_loader\n    return None\n```\nIn this example we simplying building a dataframe with some dummy data based on dimensions specified on the command-line:\n- `--testdata-rows`\n- `--testdata-columns`\n\nHere's how you would use this loader:\n```bash\nDTALE_CLI_LOADERS=./path_to_loaders bash -c 'dtale --testdata-rows 10 --testdata-columns 5'\n```\n\n### Authentication\n\nYou can choose to use optional authentication by adding the following to your D-Tale `.ini` file ([directions here](https://github.com/man-group/dtale/blob/master/docs/CONFIGURATION.md)):\n\n```ini\n[auth]\nactive = True\nusername = johndoe\npassword = 1337h4xOr\n```\n\nOr you can call the following:\n\n```python\nimport dtale.global_state as global_state\n\nglobal_state.set_auth_settings({'active': True, 'username': 'johndoe', 'password': '1337h4x0r'})\n```\n\nIf you have done this before initially starting D-Tale it will have authentication applied.  If you are adding this after starting D-Tale you will have to kill your service and start it over.\n\nWhen opening your D-Tale session you will be presented with a screen like this:\n\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/login.png)\n\nFrom there you can enter the credentials you either set in your `.ini` file or in your call to `dtale.global_state.set_auth_settings` and you will be brought to the main grid as normal.  You will now have an additional option in your main menu to logout:\n\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/logout.png)\n\n### Instance Settings\n\nUsers can set front-end properties on their instances programmatically in the `dtale.show` function or by calling the `update_settings` function on their instance.  For example:\n\n```python\nimport dtale\nimport pandas as pd\n\ndf = pd.DataFrame(dict(\n  a=[1,2,3,4,5],\n  b=[6,7,8,9,10],\n  c=['a','b','c','d','e']\n))\ndtale.show(\n  df,\n  locked=['c'],\n  column_formats={'a': {'fmt': '0.0000'}},\n  nan_display='...',\n  background_mode='heatmap-col',\n  sort=[('a','DESC')],\n  vertical_headers=True,\n)\n```\n\nor\n\n```python\nimport dtale\nimport pandas as pd\n\ndf = pd.DataFrame(dict(\n  a=[1,2,3,4,5],\n  b=[6,7,8,9,10],\n  c=['a','b','c','d','e']\n))\nd = dtale.show(\n  df\n)\nd.update_settings(\n  locked=['c'],\n  column_formats={'a': {'fmt': '0.0000'}},\n  nan_display='...',\n  background_mode='heatmap-col',\n  sort=[('a','DESC')],\n  vertical_headers=True,\n)\nd\n```\n\nHere's a short description of each instance setting available:\n\n#### show_columns\nA list of column names you would like displayed in your grid. Anything else will be hidden.\n\n#### hide_columns\nA list of column names you would like initially hidden from the grid display.\n\n#### column_formats\nA dictionary of column name keys and their front-end display configuration. Here are examples of the different format configurations:\n* Numeric: `{'fmt': '0.00000'}`\n* String:\n  * `{'fmt': {'truncate': 10}}` truncate string values to no more than 10 characters followed by an ellipses \n  * `{'fmt': {'link': True}}` if your strings are URLs convert them to clickable links\n  * `{'fmt': {'html': True}}` if your strings are HTML fragments render them as HTML\n* Date: `{'fmt': 'MMMM Do YYYY, h:mm:ss a'}` uses [Moment.js formatting](https://momentjs.com/docs/#/displaying/format/)\n\n#### nan_display\nConverts any `nan` values in your dataframe to this when it is sent to the browser (doesn't actually change the state of your dataframe)\n\n#### sort\nList of tuples which sort your dataframe (EX: `[('a', 'ASC'), ('b', 'DESC')]`)\n\n#### locked\nList of column names which will be locked to the right side of your grid while you scroll to the left.\n\n#### background_mode\nA string denoting one of the many background displays available in D-Tale. Options are:\n* heatmap-all: turn on heatmap for all numeric columns where the colors are determined by the range of values over all numeric columns combined\n* heatmap-col: turn on heatmap for all numeric columns where the colors are determined by the range of values in the column\n* heatmap-col-[column name]: turn on heatmap highlighting for a specific column\n* dtypes: highlight columns based on it's data type\n* missing: highlight any missing values (np.nan, empty strings, strings of all spaces)\n* outliers: highlight any outliers\n* range: highlight values for any matchers entered in the \"range_highlights\" option\n* lowVariance: highlight values with a low variance\n\n#### range_highlights\nDictionary of column name keys and range configurations which if the value for that column exists then it will be shaded that color.  Here is an example input:\n```\n'a': {\n  'active': True,\n  'equals': {'active': True, 'value': 3, 'color': {'r': 255, 'g': 245, 'b': 157, 'a': 1}}, # light yellow\n  'greaterThan': {'active': True, 'value': 3, 'color': {'r': 80, 'g': 227, 'b': 194, 'a': 1}}, # mint green\n  'lessThan': {'active': True, 'value': 3, 'color': {'r': 245, 'g': 166, 'b': 35, 'a': 1}}, # orange\n}\n```\n\n#### vertical_headers\nIf set to `True` then the headers in your grid will be rotated 90 degrees vertically to conserve width.\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/vertical_headers.png)\n\n\n### Predefined Filters\n\nUsers can build their own custom filters which can be used from the front-end using the following code snippet:\n```python\nimport pandas as pd\nimport dtale\nimport dtale.predefined_filters as predefined_filters\nimport dtale.global_state as global_state\n\nglobal_state.set_app_settings(dict(open_predefined_filters_on_startup=True))\n\npredefined_filters.set_filters([\n    {\n        \"name\": \"A and B > 2\",\n        \"column\": \"A\",\n        \"description\": \"Filter A with B greater than 2\",\n        \"handler\": lambda df, val: df[(df[\"A\"] == val) & (df[\"B\"] > 2)],\n        \"input_type\": \"input\",\n        \"default\": 1,\n        \"active\": False,\n    },\n    {\n        \"name\": \"A and (B % 2) == 0\",\n        \"column\": \"A\",\n        \"description\": \"Filter A with B mod 2 equals zero (is even)\",\n        \"handler\": lambda df, val: df[(df[\"A\"] == val) & (df[\"B\"] % 2 == 0)],\n        \"input_type\": \"select\",\n        \"default\": 1,\n        \"active\": False,\n    },\n    {\n        \"name\": \"A in values and (B % 2) == 0\",\n        \"column\": \"A\",\n        \"description\": \"A is within a group of values and B mod 2 equals zero (is even)\",\n        \"handler\": lambda df, val: df[df[\"A\"].isin(val) & (df[\"B\"] % 2 == 0)],\n        \"input_type\": \"multiselect\",\n        \"default\": [1],\n        \"active\": True,\n    }\n])\n\ndf = pd.DataFrame(\n    ([[1, 2, 3, 4, 5, 6], [7, 8, 9, 10, 11, 12], [13, 14, 15, 16, 17, 18]]),\n    columns=['A', 'B', 'C', 'D', 'E', 'F']\n)\ndtale.show(df)\n```\n\nThis code illustrates the types of inputs you can have on the front end:\n* __input__: just a simple text input box which users can enter any value they want (if the value specified for `\"column\"` is an int or float it will try to convert the string to that data type) and it will be passed to the handler\n* __select__: this creates a dropdown populated with the unique values of `\"column\"` (an asynchronous dropdown if the column has a large amount of unique values)\n* __multiselect__: same as \"select\" but it will allow you to choose multiple values (handy if you want to perform an `isin` operation in your filter)\n\nHere is a demo of the functionality:\n[![](http://img.youtube.com/vi/8mryVxpxjM4/0.jpg)](http://www.youtube.com/watch?v=8mryVxpxjM4 \"Predefined Filters\")\n\nIf there are any new types of inputs you would like available please don't hesitate to submit a request on the \"Issues\" page of the repo.\n\n### Using Swifter\n\nSwifter is a package which will increase performance on any `apply()` function on a pandas series or dataframe.  If install the package in your virtual environment\n```sh\npip install swifter\n# or\npip install dtale[swifter]\n```\n\nIt will be used for the following operations:\n- Standard dataframe formatting in the main grid & chart display\n- Column Builders\n  - Type Conversions\n    - string hex -> int or float\n    - int or float -> hex\n    - mixed -> boolean\n    - int -> timestamp\n    - date -> int\n  - Similarity Distance Calculation\n- Handling of empty strings when calculating missing counts\n- Building unique values by data type in \"Describe\" popup\n\n\n### Behavior for Wide Dataframes\n\nThere is currently a performance bottleneck on the front-end when loading \"wide dataframes\" (dataframes with many columns). The current solution to this problem is that upon initial load of these dataframes to D-Tale any column with an index greater than 100 (going from left to right) will be hidden on the front-end.  You can still unhide these columns the same way you would any other and you still have the option to show all columns using the \"Describe\" popup. Here's a sample of this behavior:\n\nSay you loaded this dataframe into D-Tale.\n\n```python\nimport pandas as pd\nimport dtale\n\ndtale.show(pd.DataFrame(\n    {'col{}'.format(i): list(range(1000)) for i in range(105)}\n))\n```\n\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/wide_dataframes/initial_load.png)\n\nYou will now have access to a new \"Jump To Column\" menu item.\n\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/wide_dataframes/jump_to_col_menu_item.png)\n\nIt would be too hard to scroll to the column you're looking for. So now you'll be able to type in the name of the column you're looking for and select it.\n\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/wide_dataframes/jump_to_col_popup.png)\n\nAnd now you'll see only the columns you've had locked (we've locked no columns in this example) and the column you chose to jump to.\n\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/wide_dataframes/jump_to_col_done.png)\n\n### Accessing CLI Loaders in Notebook or Console\nI am pleased to announce that all CLI loaders will be available within notebooks & consoles.  Here are some examples (the last working if you've installed `dtale[arctic]`):\n- `dtale.show_csv(path='test.csv', parse_dates=['date'])`\n- `dtale.show_csv(path='http://csv-endpoint', index_col=0)`\n- `dtale.show_excel(path='test.xlsx', parse_dates=['date'])`\n- `dtale.show_excel(path='test.xls', sheet=)`\n- `dtale.show_excel(path='http://excel-endpoint', index_col=0)`\n- `dtale.show_json(path='http://json-endpoint', parse_dates=['date'])`\n- `dtale.show_json(path='test.json', parse_dates=['date'])`\n- `dtale.show_r(path='text.rda')`\n- `dtale.show_arctic(uri='uri', library='library', symbol='symbol', start='20200101', end='20200101')`\n- `dtale.show_arcticdb(uri='uri', library='library', symbol='symbol', start='20200101', end='20200101', use_store=True)`\n\n### Using ArcticDB as your data store for D-Tale\nSo one of the major drawbacks of using D-Tale is that it stores a copy of your dataframe in memory (unless you specify the `inplace=True` when calling `dtale.show`). One way around this is to switch your storage mechanism to ArcticDB. This will use ArcticDB's [QueryBuilder](https://docs.arcticdb.io/api/query_builder) to perform all data loading and filtering.  This will significantly drop your memory footprint, but it will remove a lot of the original D-Tale functionality:\n- Custom Filtering\n- Range filtering in Numeric Column Filters\n- Regex filtering on String Column Filters\n- Editing Cells\n- Data Reshaping\n- Dataframe Functions\n- Drop Filtered Rows\n- Sorting\n\nIf the symbol you're loading from ArcticDB contains more than 1,000,000 rows then you will also lose the following:\n- Column Filtering using dropdowns of unique values (you'll have to manually type your values)\n- Outlier Highlighting\n- Most of the details in the \"Describe\" screen\n\nIn order to update your storage mechanism there are a few options, the first being `use_arcticdb_store`:\n```python\nimport dtale.global_state as global_state\nimport dtale\n\nglobal_state.use_arcticdb_store(uri='lmdb:///<path>')\ndtale.show_arcticdb(library='my_lib', symbol='my_symbol')\n```\n\nOr you can set your library ahead of time so you can use `dtale.show`:\n```python\nimport dtale.global_state as global_state\nimport dtale\n\nglobal_state.use_arcticdb_store(uri='lmdb:///<path>', library='my_lib')\ndtale.show('my_symbol')\n```\n\nOr you can set your library using `dtale.show` with a pipe-delimited identifier:\n```python\nimport dtale.global_state as global_state\nimport dtale\n\nglobal_state.use_arcticdb_store(uri='lmdb:///<path>')\ndtale.show('my_lib|my_symbol')\n```\n\nYou can also do everything using `dtale.show_arcticdb`:\n```python\nimport dtale\n\ndtale.show_arcticdb(uri='lmdb:///<path>', library='my_lib', symbol='my_symbol', use_store=True)\n```\n\n### Navigating to different libraries/symbols in your ArcticDB database\n\nWhen starting D-Tale with no data\n```python\nimport dtale.global_state as global_state\nimport dtale\n\nglobal_state.use_arcticdb_store(uri='lmdb:///<path>')\ndtale.show()\n```\n\nyou'll be presented with this screen on startup\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/arcticdb/select_library_and_symbol.png)\n\nOnce you choose a library and a symbol you can click \"Load\" and it will bring you to the main grid comprised of the data for that symbol.\n\nYou can also view information about the symbol you've selected before loading it by clicking the \"Info\" button\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/arcticdb/description.png)\n\n## UI\nOnce you have kicked off your D-Tale session please copy & paste the link on the last line of output in your browser\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/Browser1.png)\n\n### Dimensions/Ribbon Menu/Main Menu\nThe information in the upper right-hand corner gives grid dimensions ![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/Info_cell.png)\n- lower-left => row count\n- upper-right => column count\n\nRibbon Menu\n- hovering around to top of your browser will display a menu items (similar to the ones in the main menu) across the top of the screen\n- to close the menu simply click outside the menu and/or dropdowns from the menu\n\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/Ribbon_menu.png)\n\nMain Menu\n- clicking the triangle displays the menu of standard functions (click outside menu to close it)\n\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/Info_menu_small.png)\n\n### Header\n\nThe header gives users an idea of what operations have taken place on your data (sorts, filters, hidden columns).  These values will be persisted across broswer instances.  So if you perform one of these operations and then send a link to one of your colleagues they will see the same thing :)\n\nNotice the \"X\" icon on the right of each display.  Clicking this will remove those operations.\n\nWhen performing multiple of the same operation the description will become too large to display so the display will truncate the description and if users click it they will be presented with a tooltip where you can crop individual operations.  Here are some examples:\n\n|Sorts|Filters|Hidden Columns|\n|-----|-------|--------------|\n|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/header/sorts.PNG)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/header/filters.PNG)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/header/hidden.PNG)|\n\n### Resize Columns\n\nCurrently there are two ways which you can resize columns.\n* Dragging the right border of the column's header cell.\n\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/gifs/resize_columns_w_drag.gif)\n\n* Altering the \"Maximum Column Width\" property from the ribbon menu.\n\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/gifs/resize_columns_max_width.gif)\n\n* __Side Note:__ You can also set the `max_column_width` property ahead of time in your [global configuration](https://github.com/man-group/dtale/blob/master/docs/CONFIGURATION.md) or programmatically using:\n\n```python\nimport dtale.global_state as global_state\n\nglobal_state.set_app_settings(dict(max_column_width=100))\n```\n\n### Editing Cells\n\nYou may edit any cells in your grid (with the exception of the row indexes or headers, the ladder can be edited using the [Rename](#rename) column menu function).\n\nIn order to edit a cell simply double-click on it.  This will convert it into a text-input field and you should see a blinking cursor.  In addition to turning that cell into an input it will also display an input at the top of the screen for better viewing of long strings. It is assumed that the value you type in will match the data type of the column you editing.  For example:\n\n* integers -> should be a valid positive or negative integer\n* float -> should be a valid positive or negative float\n* string -> any valid string will do\n* category -> either a pre-existing category or this will create a new category for (so beware!)\n* date, timestamp, timedelta -> should be valid string versions of each\n* boolean -> any string you input will be converted to lowercase and if it equals \"true\" then it will make the cell `True`, otherwise `False`\n\nUsers can make use of two protected values as well:\n\n* \"nan\" -> `numpy.nan`\n* \"inf\" -> `numpy.inf`\n\nTo save your change simply press \"Enter\" or to cancel your changes press \"Esc\".\n\nIf there is a conversion issue with the value you have entered it will display a popup with the specific exception in question.\n\nHere's a quick demo:\n\n[![](http://img.youtube.com/vi/MY5w0m_4IAc/0.jpg)](http://www.youtube.com/watch?v=MY5w0m_4IAc \"Editing Long String Cells\")\n\nHere's a demo of editing cells with long strings:\n\n[![](http://img.youtube.com/vi/3p9ltzdBaDQ/0.jpg)](http://www.youtube.com/watch?v=3p9ltzdBaDQ \"Editing Cells\")\n\n\n### Copy Cells Into Clipboard\n\n|Select|Copy|Paste|\n|:-----:|:-----:|:-----:|\n|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/select_range1.png)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/select_range2.png)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/select_range3.png)|\n\nOne request that I have heard time and time again while working on D-Tale is \"it would be great to be able to copy a range of cells into excel\".  Well here is how that is accomplished:\n1) Shift + Click on a cell\n2) Shift + Click on another cell (this will trigger a popup)\n3) Choose whether you want to include headers in your copy by clicking the checkbox\n4) Click Yes\n5) Go to your excel workbook and execute Ctrl + V or manually choose \"Paste\"\n  * You can also paste this into a standard text editor and what you're left with is tab-delimited data\n\n\n### Main Menu Functions\n\n#### XArray Operations\n\n* **Convert To XArray**: If you have are currently viewing a pandas dataframe in D-Tale you will be given this option to convert your data to an `xarray.Dataset`.  It is as simple as selecting one or many columns as an index and then your dataframe will be converted to a dataset (`df.set_index([...]).to_xarray()`) which makes toggling between indexes slices much easier.\n\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/xarray_indexes.png)\n\n* **XArray Dimensions**: If you are currently viewing data associated with an `xarray.Dataset` you will be given the ability to toggle which dimension coordinates you're viewing by clicking this button.  You can select values for all, some or none (all data - no filter) of your coordinates and the data displayed in your grid will match your selections.  Under the hood the code being executed is as follows: `ds.sel(dim1=coord1,...).to_dataframe()`\n\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/xarray_dimensions.png)\n\n#### Describe\nView all the columns & their data types as well as individual details of each column\n\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/Describe.png)\n\n|Data Type|Display|Notes|\n|--------|:------:|:------:|\n|date|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/Describe_date.png)||\n|string|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/Describe_string.png)|If you have less than or equal to 100 unique values they will be displayed at the bottom of your popup|\n|int|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/Describe_int.png)|Anything with standard numeric classifications (min, max, 25%, 50%, 75%) will have a nice boxplot with the mean (if it exists) displayed as an outlier if you look closely.|\n|float|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/Describe_float.png)||\n\n#### Outlier Detection\nWhen viewing integer & float columns in the [\"Describe\" popup](#describe) you will see in the lower right-hand corner a toggle for Uniques & Outliers.\n\n|Outliers|Filter|\n|--------|------|\n|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/outliers.png)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/outlier_filter.png)|\n\nIf you click the \"Outliers\" toggle this will load the top 100 outliers in your column based on the following code snippet:\n```python\ns = df[column]\nq1 = s.quantile(0.25)\nq3 = s.quantile(0.75)\niqr = q3 - q1\niqr_lower = q1 - 1.5 * iqr\niqr_upper = q3 + 1.5 * iqr\noutliers = s[(s < iqr_lower) | (s > iqr_upper)]\n```\nIf you click on the \"Apply outlier filter\" link this will add an addtional \"outlier\" filter for this column which can be removed from the [header](#header) or the [custom filter](#custom-filter) shown in picture above to the right.\n\n#### Custom Filter\n\n**Starting with version 3.7.0 this feature will be turned off by default.\nCustom filters are vulnerable to code injection attacks, please only use in trusted environments.**\n\n**You can turn this feature on by doing one of the following:**\n - **add `enable_custom_filters=True` to your `dtale.show` call**\n - **add `enable_custom_filters = True` to the [app] section of your dtale.ini config file ([more info](https://github.com/man-group/dtale/blob/master/docs/CONFIGURATION.md))**\n - **run this code before calling dtale.show:**\n```python\nimport dtale.global_state as global_state\nglobal_state.set_app_settings(dict(enable_custom_filters=True))\n```\n\n\nApply a custom pandas `query` to your data (link to pandas documentation included in popup)  \n\n|Editing|Result|\n|--------|:------:|\n|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/Filter_apply.png)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/Post_filter.png)|\n\nYou can also see any outlier or column filters you've applied (which will be included in addition to your custom query) and remove them if you'd like.\n\nContext Variables are user-defined values passed in via the `context_variables` argument to dtale.show(); they can be referenced in filters by prefixing the variable name with '@'.\n\nFor example, here is how you can use context variables in a pandas query:\n```python\nimport pandas as pd\n\ndf = pd.DataFrame([\n  dict(name='Joe', age=7),\n  dict(name='Bob', age=23),\n  dict(name='Ann', age=45),\n  dict(name='Cat', age=88),\n])\ntwo_oldest_ages = df['age'].nlargest(2)\ndf.query('age in @two_oldest_ages')\n```\nAnd here is how you would pass that context variable to D-Tale: `dtale.show(df, context_variables=dict(two_oldest_ages=two_oldest_ages))`\n\nHere's some nice documentation on the performance of [pandas queries](https://pandas.pydata.org/pandas-docs/stable/user_guide/enhancingperf.html#pandas-eval-performance)\n\n#### Dataframe Functions\n\n[![](http://img.youtube.com/vi/G6wNS9-lG04/0.jpg)](http://www.youtube.com/watch?v=G6wNS9-lG04 \"Dataframe Functions in D-Tale\")\n\nThis video shows you how to build the following:\n - Numeric: adding/subtracting two columns or columns with static values\n - Bins: bucketing values using pandas cut & qcut as well as assigning custom labels\n - Dates: retrieving date properties (hour, weekday, month...) as well as conversions (month end)\n - Random: columns of data type (int, float, string & date) populated with random uniformly distributed values.\n  - Type Conversion: switch columns from one data type to another, fun. :smile:\n\n\n#### Merge & Stack\n\n[![](http://img.youtube.com/vi/ignDS6OaGVQ/0.jpg)](http://www.youtube.com/watch?v=ignDS6OaGVQ \"Merge & Stack\")\n\nThis feature allows users to merge or stack (vertically concatenate) dataframes they have loaded into D-Tale.  They can also upload additional data to D-Tale while wihin this feature.  The demo shown above goes over the following actions:\n- Editing of parameters to either a pandas merge or stack (vertical concatenation) of dataframes\n  - Viewing direct examples of each from the pandas documentation\n- Selection of dataframes\n- Uploading of additional dataframes from an excel file\n- Viewing code & resulting data from a merge or stack\n\n#### Summarize Data\n\nThis is very powerful functionality which allows users to create a new data from currently loaded data.  The operations currently available are:\n- **Aggregation**: consolidate data by running different aggregations on columns by a specific index\n- **Pivot**: this is simple wrapper around [pandas.Dataframe.pivot](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.pivot.html) and [pandas.pivot_table](https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.pivot_table.html)\n- **Transpose**: transpose your data on a index (be careful dataframes can get very wide if your index has many unique values)\n\n|Function|Data|\n|:------:|:------:|\n|No Reshaping|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/reshape/original_data.png)|\n|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/reshape/agg_col.png)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/reshape/agg_col_data.png)|\n|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/reshape/agg_func.png)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/reshape/agg_func_data.png)|\n|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/reshape/pivot.png)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/reshape/pivot_data.png)|\n|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/reshape/transpose.png)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/reshape/transpose_data.png)|\n\n[![](http://img.youtube.com/vi/fYsxogXKZ2c/0.jpg)](http://www.youtube.com/watch?v=fYsxogXKZ2c \"Reshaping Tutorial\")\n\n#### Duplicates\nRemove duplicate columns/values from your data as well as extract duplicates out into separate instances.\n\nThe folowing screen shots are for a dataframe with the following data:\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/duplicates/data.png)\n\n|Function|Description|Preview|\n|:------:|:---------:|:-----:|\n|**Remove Duplicate Columns**|Remove any columns that contain the same data as another and you can either keep the first, last or none of these columns that match this criteria.  You can test which columns will be removed by clicking the \"View Duplicates\" button.|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/duplicates/columns.png)|\n|**Remove Duplicate Column Names**|Remove any columns with the same name (name comparison is case-insensitive) and you can either keep the first, last or none of these columns that match this criteria. You can test which columns will be removed by clicking the \"View Duplicates\" button.|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/duplicates/column_names.png)|\n|**Remove Duplicate Rows**|Remove any rows from your dataframe where the values of a subset of columns are considered duplicates. You can choose to keep the first, last or none of the rows considered duplicated.|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/duplicates/rows.png)|\n|**Show Duplicates**|Break any duplicate rows (based on a subset of columns) out into another dataframe viewable in your D-Tale session. You can choose to view all duplicates or select specific groups based on the duplicated value.|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/duplicates/show.png)|\n\n#### Missing Analysis\nDisplay charts analyzing the presence of missing (NaN) data in your dataset using the [missingno](https://github.com/ResidentMario/missingno) pacakage.  You can also open them in a tab by themselves or export them to a static PNG using the links in the upper right corner. You can also close the side panel using the ESC key.\n\n\n| Chart        | Sample |\n|--------------|--------|\n| Matrix     | ![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/missingno/matrix.png)|\n| Bar        | ![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/missingno/bar.png)|\n| Heatmap    | ![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/missingno/heatmap.png)|\n| Dendrogram | ![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/missingno/dendrogram.png)|\n\n#### Charts\nBuild custom charts based off your data(powered by [plotly/dash](https://github.com/plotly/dash)).\n \n - The Charts will open in a tab because of the fact there is so much functionality offered there you'll probably want to be able to reference the main grid data in the original tab\n - To build a chart you must pick a value for X & Y inputs which effectively drive what data is along the X & Y axes\n   - If you are working with a 3-Dimensional chart (heatmap, 3D Scatter, Surface) you'll need to enter a value for the Z axis as well\n - Once you have entered all the required axes a chart will be built\n - If your data along the x-axis (or combination of x & y in the case of 3D charts) has duplicates you have three options:\n   - Specify a group, which will create series for each group\n   - Specify an aggregation, you can choose from one of the following: Count, First, Last, Mean, Median, Minimum, Maximum, Standard Deviation, Variance, Mean Absolute Deviation, Product of All Items, Sum, Rolling\n     - Specifying a \"Rolling\" aggregation will also require a Window & a Computation (Correlation, Count, Covariance, Kurtosis, Maximum, Mean, Median, Minimum, Skew, Standard Deviation, Sum or Variance)\n     - For heatmaps you will also have access to the \"Correlation\" aggregation since viewing correlation matrices in heatmaps is very useful.  This aggregation is not supported elsewhere\n   - Specify both a group & an aggregation\n - You now have the ability to toggle between different chart types: line, bar, pie, wordcloud, heatmap, 3D scatter & surface\n - If you have specified a group then you have the ability between showing all series in one chart and breaking each series out into its own chart \"Chart per Group\"\n\nHere are some examples:\n\n|Chart Type|Chart|Chart per Group|\n|:------:|:------:|:------:|\n|line|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/charts/line.png)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/charts/line_pg.png)|\n|bar|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/charts/bar.png)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/charts/bar_pg.png)|\n|stacked|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/charts/stacked.png)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/charts/stacked_pg.png)|\n|pie|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/charts/pie.png)||\n|wordcloud|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/charts/wordcloud.png)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/charts/wordcloud_pg.png)|\n|heatmap|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/charts/heatmap.png)||\n|3D scatter|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/charts/3d_scatter.png)||\n|surface|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/charts/surface.png)||\n|Maps (Scatter GEO)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/charts/scattergeo.png)||\n|Maps (Choropleth)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/charts/choropleth.png)||\n\nY-Axis Toggling\n\nUsers now have the ability to toggle between 3 different behaviors for their y-axis display:\n- *Default*: selecting this option will use the default behavior that comes with plotly for your chart's y-axis\n- *Single*: this allows users to set the range of all series in your chart to be on the same basis as well as making that basis (min/max) editable\n- *Multi*: this allows users to give each series its own y-axis and making that axis' range editable\n\nHere's a quick tutorial: [![](http://img.youtube.com/vi/asblF-rAACY/0.jpg)](http://www.youtube.com/watch?v=asblF-rAACY \"Y-Axis Toggling\")\n\nAnd some screenshots:\n\n|Default|Single|Multi|\n|:------:|:------:|:------:|\n|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/axis_toggle/default.PNG)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/axis_toggle/single.PNG)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/axis_toggle/multi.PNG)|\n\nWith a bar chart that only has a single Y-Axis you have the ability to sort the bars based on the values for the Y-Axis\n\n|Pre-sort|Post-sort|\n|:------:|:------:|\n|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/charts/bar_presort.png)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/charts/bar_postsort.png)|\n\n**Popup Charts**\n\nViewing multiple charts at once and want to separate one out into its own window or simply move one off to the side so you can work on building another for comparison?  Well now you can by clicking the \"Popup\" button :smile:\n\n**Copy Link**\n\nWant to send what you're looking at to someone else?  Simply click the \"Copy Link\" button and it will save a pre-populated chart URL into your clipboard. As long as your D-Tale process is still running when that link is opened you will see your original chart.\n\n**Exporting Charts**\n\nYou can now export your dash charts (with the exception of Wordclouds) to static HTML files which can be emailed to others or saved down to be viewed at a later time.  The best part is that all of the javascript for plotly is embedded in these files so the nice zooming, panning, etc is still available! :boom:\n\n**Exporting CSV**\n\nI've been asked about being able to export the data that is contained within your chart to a CSV for further analysis in tools like Excel.  This button makes that possible.\n\n### OFFLINE CHARTS\n\nWant to run D-Tale in a jupyter notebook and build a chart that will still be displayed even after your D-Tale process has shutdown?  Now you can!  Here's an example code snippet show how to use it:\n\n```\nimport dtale\n\ndef test_data():\n    import random\n    import pandas as pd\n    import numpy as np\n\n    df = pd.DataFrame([\n        dict(x=i, y=i % 2)\n        for i in range(30)\n    ])\n    rand_data = pd.DataFrame(np.random.randn(len(df), 5), columns=['z{}'.format(j) for j in range(5)])\n    return pd.concat([df, rand_data], axis=1)\n\nd = dtale.show(test_data())\nd.offline_chart(chart_type='bar', x='x', y='z3', agg='sum')\n```\n[![](http://img.youtube.com/vi/DseSmc3fZvc/0.jpg)](http://www.youtube.com/watch?v=DseSmc3fZvc \"Offline Charts Tutorial\")\n\n**Pro Tip: If generating offline charts in jupyter notebooks and you run out of memory please add the following to your command-line when starting jupyter**\n\n`--NotebookApp.iopub_data_rate_limit=1.0e10`\n\n\n**Disclaimer: Long Running Chart Requests**\n\nIf you choose to build a chart that requires a lot of computational resources then it will take some time to run.  Based on the way Flask & plotly/dash interact this will block you from performing any other request until it completes.  There are two courses of action in this situation:\n\n1) Restart your jupyter notebook kernel or python console\n2) Open a new D-Tale session on a different port than the current session.  You can do that with the following command: `dtale.show(df, port=[any open port], force=True)`\n\nIf you miss the legacy (non-plotly/dash) charts, not to worry!  They are still available from the link in the upper-right corner, but on for a limited time...\nHere is the documentation for those: [Legacy Charts](https://github.com/man-group/dtale/blob/master/docs/LEGACY_CHARTS.md)\n\n**Your Feedback is Valuable**\n\nThis is a very powerful feature with many more features that could be offered (linked subplots, different statistical aggregations, etc...) so please submit issues :)\n\n#### Network Viewer\n\nThis tool gives users the ability to visualize directed graphs.  For the screenshots I'll beshowing for this functionality we'll be working off a dataframe with the following data:\n\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/network/data.png)\n\nStart by selecting columns containing the \"To\" and \"From\" values for the nodes in you network and then click \"Load\":\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/network/network_to_from.png)\n\nYou can also see instructions on to interact with the network by expanding the directions section by clicking on the header \"Network Viewer\" at the top.  You can also view details about the network provided by the package [networkx](https://github.com/networkx) by clicking the header \"Network Analysis\".\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/network/network_expanded.png)\n\nSelect a column containing weighting for the edges of the nodes in the \"Weight\" column and click \"Load\":\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/network/network_weight.png)\n\nSelect a column containing group information for each node in the \"From\" column by populating \"Group\" and then clicking \"Load\":\n ![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/network/network_group.png)\n\n Perform shortest path analysis by doing a Shift+Click on two nodes:\n ![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/network/network_shortest_path.png)\n\nView direct descendants of each node by clicking on it:\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/network/network_descendants.png)\n\nYou can zoom in on nodes by double-clicking and zoom back out by pressing \"Esc\".\n\n#### Correlations\nShows a pearson correlation matrix of all numeric columns against all other numeric columns\n  - By default, it will show a grid of pearson correlations (filtering available by using drop-down see 2nd table of screenshots)\n  - If you have a date-type column, you can click an individual cell and see a timeseries of pearson correlations for that column combination\n    - Currently if you have multiple date-type columns you will have the ability to toggle between them by way of a drop-down\n  - Furthermore, you can click on individual points in the timeseries to view the scatter plot of the points going into that correlation\n    - Within the scatter plot section you can also view the details of the PPS for those data points in the chart by hovering over the number next to \"PPS\"\n\n|Matrix|PPS|Timeseries|Scatter|\n|------|---|----------|-------|\n|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/Correlations.png)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/Correlations_pps.png)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/Correlations_ts.png)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/Correlations_scatter.png)|\n\n|Col1 Filtered|Col2 Filtered|Col1 & Col2 Filtered|\n|------|----------|-------|\n|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/Correlations_col1.png)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/Correlations_col2.png)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/Correlations_both.png)|\n\nWhen the data being viewed in D-Tale has date or timestamp columns but for each date/timestamp vlaue there is only one row of data the behavior of the Correlations popup is a little different\n  - Instead of a timeseries correlation chart the user is given a rolling correlation chart which can have the window (default: 10) altered\n  - The scatter chart will be created when a user clicks on a point in the rollign correlation chart.  The data displayed in the scatter will be for the ranges of dates involved in the rolling correlation for that date.\n\n|Data|Correlations|\n|:------:|:------:|\n|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/rolling_corr_data.png)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/rolling_corr.png)|\n\n#### Predictive Power Score\nPredictive Power Score (using the package [ppscore](https://github.com/8080labs/ppscore)) is an asymmetric, data-type-agnostic score that can detect linear or non-linear relationships between two columns. The score ranges from 0 (no predictive power) to 1 (perfect predictive power). It can be used as an alternative to the correlation (matrix). WARNING: This could take a while to load.\n\nThis page works similar to the [Correlations](#correlations) page but uses the PPS calcuation to populate the grid and by clicking on cells you can view the details of the PPS for those two columns in question.\n\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/rolling_corr_data.png)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/pps.png)\n\n#### Heat Map\nThis will hide any non-float or non-int columns (with the exception of the index on the right) and apply a color to the background of each cell.\n\n  - Each float is renormalized to be a value between 0 and 1.0\n  - You have two options for the renormalization\n    - **By Col**: each value is calculated based on the min/max of its column\n    - **Overall**: each value is caluclated by the overall min/max of all the non-hidden float/int columns in the dataset\n  - Each renormalized value is passed to a color scale of red(0) - yellow(0.5) - green(1.0)\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/Heatmap.png)\n\nTurn off Heat Map by clicking menu option you previously selected one more time\n\n#### Highlight Dtypes\nThis is a quick way to check and see if your data has been categorized correctly.  By clicking this menu option it will assign a specific background color to each column of a specific data type.\n\n|category|timedelta|float|int|date|string|bool|\n|:-------:|:-------:|:-------:|:-------:|:-------:|:-------:|:-------:|\n|purple|orange|green|light blue|pink|white|yellow\n\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/highlight_dtypes.png)\n\n#### Highlight Missing\n\n* Any cells which contain `nan` values will be highlighted in yellow.\n* Any string column cells which are empty strings or strings consisting only of spaces will be highlighted in orange.\n*  ❗will be prepended to any column header which contains missing values.\n\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/highlight_missing.png)\n\n#### Highlight Outliers\nHighlight any cells for numeric columns which surpass the upper or lower bounds of a [custom outlier computation](#outlier-detection). \n* Lower bounds outliers will be on a red scale, where the darker reds will be near the maximum value for the column.\n* Upper bounds outliers will be on a blue scale, where the darker blues will be closer to the minimum value for the column.\n* ⭐ will be prepended to any column header which contains outliers.\n\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/highlight_outliers.png)\n\n#### Highlight Range\nHighlight any range of numeric cells based on three different criteria:\n* equals\n* greater than\n* less than\n\nYou can activate as many of these criteria as you'd like nad they will be treated as an \"or\" expression.  For example, `(x == 0) or (x < -1) or (x > 1)`\n\n|Selections|Output|\n|:------:|:------:|\n|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/highlight_range_selections.png)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/highlight_range_output.png)|\n\n#### Low Variance Flag\nShow flags on column headers where both these conditions are true:\n* Count of unique values / column size < 10%\n* Count of most common value / Count of second most common value > 20\n\nHere's an example of what this will look like when you apply it:\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/highlight_range_selections.png)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/low_variance.png)\n\n#### Code Exports\n*Code Exports* are small snippets of code representing the current state of the grid you're viewing including things like:\n - columns built\n - filtering\n - sorting\n\nOther code exports available are:\n - Describe (Column Analysis)\n - Correlations (grid, timeseries chart & scatter chart)\n - Charts built using the Chart Builder\n\n [![](http://img.youtube.com/vi/6CkKgpv3d6I/0.jpg)](http://www.youtube.com/watch?v=6CkKgpv3d6I \"Code Export Tutorial\")\n\n|Type|Code Export|\n|:------:|:------:|\n|Main Grid|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/code_export/main.png)|\n|Histogram|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/code_export/histogram.png)|\n|Describe|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/code_export/describe.png)|\n|Correlation Grid|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/code_export/main.png)|\n|Correlation Timeseries|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/code_export/corr_ts.png)|\n|Correlation Scatter|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/code_export/corr_scatter.png)|\n|Charts|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/code_export/charts.png)|\n\n#### Export CSV\n\nExport your current data to either a CSV or TSV file:\n\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/export_csv.png)\n\n#### Load Data & Sample Datasets\n\nSo either when starting D-Tale with no pre-loaded data or after you've already loaded some data you now have the ability to load data or choose from some sample datasets directly from the GUI:\n\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/load_data.png)\n\nHere's the options at you disposal:\n* Load a CSV/TSV file by dragging a file to the dropzone in the top or select a file by clicking the dropzone\n* Load a CSV/TSV or JSON directly from the web by entering a URL (also throw in a proxy if you are using one)\n* Choose from one of our sample datasets:\n  * US COVID-19 data from NY Times (updated daily)\n  * Script breakdowns of popular shows Seinfeld & The Simpsons\n  * Movie dataset containing release date, director, actors, box office, reviews...\n  * Video games and their sales\n  * pandas.util.testing.makeTimeDataFrame\n\n\n**Starting with version 3.9.0 web uploads will be turned off by default.\nWeb uploads are vulnerable to blind server side request forgery, please only use in trusted environments.**\n\n**You can turn this feature on by doing one of the following:**\n - **add `enable_web_uploads=True` to your `dtale.show` call**\n - **add `enable_web_uploads = False` to the [app] section of your dtale.ini config file ([more info](https://github.com/man-group/dtale/blob/master/docs/CONFIGURATION.md))**\n - **run this code before calling dtale.show:**\n```python\nimport dtale.global_state as global_state\nglobal_state.set_app_settings(dict(enable_web_uploads=True))\n```\n\n\n#### Instances\nThis will give you information about other D-Tale instances are running under your current Python process.\n\nFor example, if you ran the following script:\n```python\nimport pandas as pd\nimport dtale\n\ndtale.show(pd.DataFrame([dict(foo=1, bar=2, biz=3, baz=4, snoopy_D_O_double_gizzle=5)]))\ndtale.show(pd.DataFrame([\n    dict(a=1, b=2, c=3, d=4),\n    dict(a=2, b=3, c=4, d=5),\n    dict(a=3, b=4, c=5, d=6),\n    dict(a=4, b=5, c=6, d=7)\n]))\ndtale.show(pd.DataFrame([range(6), range(6), range(6), range(6), range(6), range(6)]), name=\"foo\")\n```\nThis will make the **Instances** button available in all 3 of these D-Tale instances. Clicking that button while in the first instance invoked above will give you this popup:\n\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/Instances.png)\n\nThe grid above contains the following information:\n  - Process: timestamp when the process was started along with the name (if specified in `dtale.show()`)\n  - Rows: number of rows\n  - Columns: number of columns\n  - Column Names: comma-separated string of column names (only first 30 characters, hover for full listing)\n  - Preview: this button is available any of the non-current instances.  Clicking this will bring up left-most 5X5 grid information for that instance\n  - The row highlighted in green signifys the current D-Tale instance\n  - Any other row can be clicked to switch to that D-Tale instance\n\nHere is an example of clicking the \"Preview\" button:\n\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/Instances_preview.png)\n\n#### About\nThis will give you information about what version of D-Tale you're running as well as if its out of date to whats on PyPi.\n\n|Up To Date|Out Of Date|\n|--------|:------:|\n|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/About-up-to-date.png)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/About-out-of-date.png)|\n\n#### Refresh Widths\nMostly a fail-safe in the event that your columns are no longer lining up. Click this and should fix that\n\n#### Theme\nToggle between light & dark themes for your viewing pleasure (only affects grid, not popups or charts).\n\n|Light|Dark|\n|--------|:------:|\n|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/theme/light.png)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/theme/dark.png)|\n\n#### Reload Data\nForce a reload of the data from the server for the current rows being viewing in the grid by clicking this button. This can be helpful when viewing the grid from within another application like jupyter or nested within another website.\n\n#### Unpin/Pin Menu\nIf you would like to keep your menu pinned to the side of your grid all times rather than always having to click the triaangle in the upper left-hand corner simply click this button.  It is persisted back to the server so that it can be applied to all piece of data you've loaded into your session and beyond refreshes.\n\n#### Language\n\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/chinese_dtale.png)\n\nI am happy to announce that D-Tale now supports both English & Chinese (there is still more of the translation to be completed but the infrastructure is there).  And we are happy to add support for any other languages.  Please see instruction on how, [here](#adding-language-support).\n\n#### Shutdown\nPretty self-explanatory, kills your D-Tale session (there is also an auto-kill process that will kill your D-Tale after an hour of inactivity)\n\n### Column Menu Functions\n\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/Col_menu.png)\n\n#### Filtering\n\n[![](http://img.youtube.com/vi/8zo5ZiI1Yzo/0.jpg)](http://www.youtube.com/watch?v=8zo5ZiI1Yzo \"Column Filtering\")\n\nThese interactive filters come in 3 different types: String, Numeric & Date.  Note that you will still have the ability to apply custom filters from the \"Filter\" popup on the main menu, but it will get applied in addition to any column filters.\n\n|Type|Filter|Data Types|Features|\n|----|------|----------|--------|\n|String|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/filters/string.PNG)|strings & booleans|The ability to select multiple values based on what exists in the column. Notice the \"Show Missing Only\" toggle, this will only show up if your column has nan values|\n|Date|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/filters/dates.PNG)|dates|Specify a range of dates to filter on based on start & end inputs|\n|Numeric|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/filters/numeric.PNG)|ints & floats|For integers the \"=\" will be similar to strings where you can select multiple values based on what exists in the column.  You also have access to other operands: <,>,<=,>=,() - \"Range exclusve\", [] - \"Range inclusive\".|\n\n#### Moving Columns\n\n[![](http://img.youtube.com/vi/We4TH477rRs/0.jpg)](http://www.youtube.com/watch?v=We4TH477rRs \"Moving Columns in D-Tale\")\n\nAll column movements are saved on the server so refreshing your browser won't lose them :ok_hand:\n\n#### Hiding Columns\n\n[![](http://img.youtube.com/vi/ryZT2Lk_YaA/0.jpg)](http://www.youtube.com/watch?v=ryZT2Lk_YaA \"Hide/Unhide Columns in D-Tale\")\n\nAll column movements are saved on the server so refreshing your browser won't lose them :ok_hand:\n\n#### Delete\n\nAs simple as it sounds, click this button to delete this column from your dataframe.\n\n#### Rename\n\nUpdate the name of any column in your dataframe to a name that is not currently in use by your dataframe.\n\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/rename.png)\n\n#### Replacements\n\nThis feature allows users to replace content on their column directly or for safer purposes in a brand new column.  Here are the options you have:\n\n|Type        |Data Types   |Description|Menu    |\n|------------|-------------|-----------|--------|\n|Value(s)    |all          |Replace specific values in a column with raw values, output from another column or an aggregation on your column|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/replacements_value.png)|\n|Spaces Only |strings      |Replace string values consisting only of spaces with raw values|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/replacements_spaces.png)|\n|Contains Char/Substring|strings      |Replace string values containing a specific character or substring|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/replacements_strings.png)|\n|Scikit-Learn Imputer|numeric      |Replace missing values with the output of using different Scikit-Learn imputers like iterative, knn & simple|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/replacements_sklearn.png)|\n\nHere's a quick demo: [![](http://img.youtube.com/vi/GiNFRtcpIt8/0.jpg)](http://www.youtube.com/watch?v=GiNFRtcpIt8 \"Column Replacements\")\n\n#### Lock\nAdds your column to \"locked\" columns\n  - \"locked\" means that if you scroll horizontally these columns will stay pinned to the right-hand side\n  - this is handy when you want to keep track of which date or security_id you're looking at\n  - by default, any index columns on the data passed to D-Tale will be locked\n\n#### Unlock\nRemoved column from \"locked\" columns\n\n#### Sorting\nApplies/removes sorting (Ascending/Descending/Clear) to the column selected\n  \n*Important*: as you add sorts they sort added will be added to the end of the multi-sort.  For example:\n\n| Action        | Sort           |\n| ------------- |:--------------:|\n| click \"a\"     |                |\n| sort asc      | a (asc)        |\n| click \"b\"     | a (asc)        |\n| sort desc     | a (asc), b(desc)|\n| click \"a\"     | a (asc), b(desc)|\n| sort None     | b(desc)|\n| sort desc     | b(desc), a(desc)|\n| click \"X\" on sort display | |\n\n#### Formats\nApply simple formats to numeric values in your grid\n\n|Type|Editing|Result|\n|--------|:------:|:------:|\n|Numeric|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/Formatting_apply.png)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/Post_formatting.png)|\n|Date|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/Formatting_date_apply.png)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/Post_date_formatting.png)|\n|String|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/Formatting_string_apply.png)|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/Post_string_formatting.png)|\n\nFor all data types you have the ability to change what string is ued for display.\n\n\nFor numbers here's a grid of all the formats available with -123456.789 as input:\n  \n| Format        | Output         |\n| ------------- |:--------------:|\n| Precision (6) | -123456.789000 |\n| Thousands Sep | -123,456.789   |\n| Abbreviate    | -123k          |\n| Exponent      | -1e+5          |\n| BPS           | -1234567890BPS |\n| Red Negatives | <span style=\"color: red;\">-123457</span>|\n\nFor strings you can apply the follwoing formats:\n* **Truncation:** truncate long strings to a certain number of characters and replace with an allipses \"...\" and see the whole value on hover.\n* **Hyperlinks:** If your column is comprised of URL strings you can make them hyperlinks which will open a new tab\n\n#### Describe (Column Analysis)\nBased on the data type of a column different charts will be shown.  This side panel can be closed using the 'X' button in the upper right or by pressing the ESC key.\n\n| Chart         | Data Types     | Sample |\n|---------------|----------------|--------|\n| Box Plot      | Float, Int, Date | ![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/analysis/boxplot.png)|\n| Histogram     | Float, Int |![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/analysis/histogram.PNG)|\n| Value Counts  | Int, String, Bool, Date, Category|![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/analysis/value_counts.PNG)|\n| Word Value Counts | String | ![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/analysis/word_value_counts.png)|\n| Category      | Float   |![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/analysis/category.PNG)|\n| Geolocation*  | Int, Float     |![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/analysis/geolocation.PNG)|\n| Q-Q Plot      | Int, Float, Date |![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/analysis/qq.png)|\n\n\n**Histogram** can be displayed in any number of bins (default: 20), simply type a new integer value in the bins input\n\n**Value Count** by default, show the top 100 values ranked by frequency.  If you would like to show the least frequent values simply make your number negative (-10 => 10 least frequent value)\n\n**Value Count w/ Ordinal** you can also apply an ordinal to your **Value Count** chart by selecting a column (of type int or float) and applying an aggregation (default: sum) to it (sum, mean, etc...) this column will be grouped by the column you're analyzing and the value produced by the aggregation will be used to sort your bars and also displayed in a line.  Here's an example:\n\n![](https://raw.githubusercontent.com/aschonfeld/dtale-media/master/images/analysis/value_counts_ordinal.PNG\n)\n\n**Word Value Count** you can analyze string data by splitting each record by spaces to see the counts of each word.  This chart has all the same functions available as \"Value Counts\".  In addition, you can select multiple \"Cleaner\" functions to be applied to your column before building word values. These functions will perform operations like removing punctuation, removing numeric character & normalizing accent characters.\n\n**Category (Category Breakdown)** when viewing float columns you can also see them broken down by a categorical column (string, date, int, etc...).  This means that when you select a category column this will then display the frequency of each category in a line as well as bars based on the float column you're analyzing grouped by that category and computed by your aggregation (default: mean).\n\n**Geolocation** when your data contains latitude & longitude then you can view the coverage in a plotly scattergeo map.  In order to have access this chart your dataframe must have at least one of each of these types of columns:\n* \"lat\" must be contained within the lower-cased version of the column name and values be between -90 & 90\n* \"lon\" must be contained within the lower-cased version of the column name and values be between -180 & 180\n\n### Hotkeys\n\nThese are key combinations you can use in place of clicking actual buttons to save a little time:\n\n| Keymap      | Action         |\n|-------------|----------------|\n|`shift+m`    | Opens main menu*|\n|`shift+d`    | Opens \"Describe\" page*|\n|`shift+f`    | Opens \"Custom Filter\"*|\n|`shift+b`    | Opens \"Build Column\"*|\n|`shift+c`    | Opens \"Charts\" page*|\n|`shift+x`    | Opens \"Code Export\"*|\n|`esc`        | Closes any open modal window or side panel & exits cell editing|\n\n`*` Does not fire if user is actively editing a cell.\n\n### Menu Functions Depending on Browser Dimensions\nDepending on the dimensions of your browser window the following buttons will not open modals, but rather separate browser windows:  Correlations, Describe & Instances (see images from [Jupyter Notebook](#jupyter-notebook), also Charts will always open in a separate browser window)\n\n## For Developers\n\n### Cloning\n\nClone the code (git clone ssh://git@github.com:manahl/dtale.git), then start the backend server:\n\n```bash\n$ git clone ssh://git@github.com:manahl/dtale.git\n# install the dependencies\n$ python setup.py develop\n# start the server\n$ dtale --csv-path /home/jdoe/my_csv.csv --csv-parse_dates date\n```\n\nYou can also run dtale from PyDev directly.\n\nYou will also want to import javascript dependencies and build the source (all javascript code resides in the `frontend` folder):\n\n``` bash\n$ cd frontend\n$ npm install\n# 1) a persistent server that serves the latest JS:\n$ npm run watch\n# 2) or one-off build:\n$ npm run build\n```\n\n### Running tests\n\nThe usual npm test command works:\n\n```\n$ npm test\n```\n\nYou can run individual test files:\n\n```\n$ npm run test -- static/__tests__/dtale/DataViewer-base-test.jsx\n```\n\n### Linting\n\nYou can lint all the JS and CSS to confirm there's nothing obviously wrong with\nit:\n\n``` bash\n$ npm run lint\n```\n\nYou can also lint individual JS files:\n\n``` bash\n$ npm run lint-js-file -s -- static/dtale/DataViewer.jsx\n```\n\n### Formatting JS\n\nYou can auto-format code as follows:\n\n``` bash\n$ npm run format\n```\n\n### Docker Development\n\nYou can build python 27-3 & run D-Tale as follows:\n```bash\n$ yarn run build\n$ docker-compose build dtale_2_7\n$ docker run -it --network host dtale_2_7:latest\n$ python\n>>> import pandas as pd\n>>> df = pd.DataFrame([dict(a=1,b=2,c=3)])\n>>> import dtale\n>>> dtale.show(df)\n```\nThen view your D-Tale instance in your browser using the link that gets printed\n\nYou can build python 36-1 & run D-Tale as follows:\n```bash\n$ yarn run build\n$ docker-compose build dtale_3_6\n$ docker run -it --network host dtale_3_6:latest\n$ python\n>>> import pandas as pd\n>>> df = pd.DataFrame([dict(a=1,b=2,c=3)])\n>>> import dtale\n>>> dtale.show(df)\n```\nThen view your D-Tale instance in your browser using the link that gets printed\n\n\n### Adding Language Support\n\nCurrently D-Tale support both english & chinese but other languages will gladly be supported.  To add another language simply open a pull request with the following:\n- cake a copy & translate the values in the following JSON english JSON files and save them to the same locations as each file\n - [Back-End](https://github.com/man-group/dtale/blob/master/dtale/translations/en.json)\n - [Front-End](https://github.com/man-group/dtale/blob/master/static/translations/en.json)\n- please make the name of these files the name of the language you are adding (currently english -> en, chinese -> cn) \n- be sure to keep the keys in english, that is important\n\nLooking forward to what languages come next! :smile:\n\n\n## Global State/Data Storage\n\nIf D-Tale is running in an environment with multiple python processes (ex: on a web server running [gunicorn](https://github.com/benoitc/gunicorn)) it will most likely encounter issues with inconsistent state.  Developers can fix this by configuring the system D-Tale uses for storing data.  Detailed documentation is available here: [Data Storage and managing Global State](https://github.com/man-group/dtale/blob/master/docs/GLOBAL_STATE.md)\n\n\n## Startup Behavior\n\nHere's a little background on how the `dtale.show()` function works:\n - by default it will look for ports between 40000 & 49000, but you can change that range by specifying the environment variables DTALE_MIN_PORT & DTALE_MAX_PORT\n - think of sessions as python consoles or jupyter notebooks\n\n1) Session 1 executes `dtale.show(df)` our state is:\n\n|Session|Port|Active Data IDs|URL(s)|\n|:-----:|:-----:|:-----:|:-----:|\n|1|40000|1|http://localhost:40000/dtale/main/1|\n\n2) Session 1 executes `dtale.show(df)` our state is:\n\n|Session|Port|Active Data IDs|URL(s)|\n|:-----:|:-----:|:-----:|:-----:|\n|1|40000|1,2|http://localhost:40000/dtale/main/[1,2]|\n\n2) Session 2 executes `dtale.show(df)` our state is:\n\n|Session|Port|Active Data IDs|URL(s)|\n|:-----:|:-----:|:-----:|:-----:|\n|1|40000|1,2|http://localhost:40000/dtale/main/[1,2]|\n|2|40001|1|http://localhost:40001/dtale/main/1|\n\n3) Session 1 executes `dtale.show(df, port=40001, force=True)` our state is:\n\n|Session|Port|Active Data IDs|URL(s)|\n|:-----:|:-----:|:-----:|:-----:|\n|1|40001|1,2,3|http://localhost:40001/dtale/main/[1,2,3]|\n\n4) Session 3 executes `dtale.show(df)` our state is:\n\n|Session|Port|Active Data IDs|URL(s)|\n|:-----:|:-----:|:-----:|:-----:|\n|1|40001|1,2,3|http://localhost:40001/dtale/main/[1,2,3]|\n|3|40000|1|http://localhost:40000/dtale/main/1|\n\n5) Session 2 executes `dtale.show(df)` our state is:\n\n|Session|Port|Active Data IDs|URL(s)|\n|:-----:|:-----:|:-----:|:-----:|\n|1|40001|1,2,3|http://localhost:40001/dtale/main/[1,2,3]|\n|3|40000|1|http://localhost:40000/dtale/main/1|\n|2|40002|1|http://localhost:40002/dtale/main/1|\n\n6) Session 4 executes `dtale.show(df, port=8080)` our state is:\n\n|Session|Port|Active Data IDs|URL(s)|\n|:-----:|:-----:|:-----:|:-----:|\n|1|40001|1,2,3|http://localhost:40001/dtale/main/[1,2,3]|\n|3|40000|1|http://localhost:40000/dtale/main/1|\n|2|40002|1|http://localhost:40002/dtale/main/1|\n|4|8080|1|http://localhost:8080/dtale/main/1|\n\n7) Session 1 executes `dtale.get_instance(1).kill()` our state is:\n\n|Session|Port|Active Data IDs|URL(s)|\n|:-----:|:-----:|:-----:|:-----:|\n|1|40001|2,3|http://localhost:40001/dtale/main/[2,3]|\n|3|40000|1|http://localhost:40000/dtale/main/1|\n|2|40002|1|http://localhost:40002/dtale/main/1|\n|4|8080|1|http://localhost:8080/dtale/main/1|\n\n7) Session 5 sets DTALE_MIN_RANGE to 30000 and DTALE_MAX_RANGE 39000 and executes `dtale.show(df)` our state is:\n\n|Session|Port|Active Data ID(s)|URL(s)|\n|:-----:|:-----:|:-----:|:-----:|\n|1|40001|2,3|http://localhost:40001/dtale/main/[2,3]|\n|3|40000|1|http://localhost:40000/dtale/main/1|\n|2|40002|1|http://localhost:40002/dtale/main/1|\n|4|8080|1|http://localhost:8080/dtale/main/1|\n|5|30000|1|http://localhost:30000/dtale/main/1|\n\n## Documentation\n\nHave a look at the [detailed documentation](https://dtale.readthedocs.io).\n\n## Dependencies\n\n* Back-end\n  * dash\n  * dash_daq\n  * Flask\n  * Flask-Compress\n  * Pandas\n  * plotly\n  * scikit-learn\n  * scipy\n  * xarray\n  * arctic [extra]\n  * dash-bio [extra]\n  * flask-ngrok [extra]\n  * redis [extra]\n  * rpy2 [extra]\n  * streamlit [extra]\n  * swifter [extra]\n* Front-end\n  * react-virtualized\n  * chart.js\n\n## Acknowledgements\n\nD-Tale has been under active development at [Man Numeric](http://www.numeric.com/) since 2019.\n\nOriginal concept and implementation: [Andrew Schonfeld](https://github.com/aschonfeld)\n\nContributors:\n\n * [Phillip Dupuis](https://github.com/phillipdupuis)\n * [Fernando Saravia Rajal](https://github.com/fersarr)\n * [Dominik Christ](https://github.com/DominikMChrist)\n * [Reza Moshksar](https://github.com/reza1615)\n * [Bertrand Nouvel](https://github.com/bnouvelbmll)\n * [Chris Boddy](https://github.com/cboddy)\n * [Jason Holden](https://github.com/jasonkholden)\n * [Tom Taylor](https://github.com/TomTaylorLondon)\n * [Wilfred Hughes](https://github.com/Wilfred)\n * Mike Kelly\n * [Vincent Riemer](https://github.com/vincentriemer)\n * [Youssef Habchi](http://youssef-habchi.com/) - title font\n * [Yadhu Krishna](https://github.com/yadhukrishnam)\n * ... and many others ...\n\nContributions welcome!\n\n## License\n\nD-Tale is licensed under the GNU LGPL v2.1.  A copy of which is included in [LICENSE](LICENSE)\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.1513671875,
          "content": "# Security Policy\n\n## Reporting a Vulnerability\n\n**Please do not report security vulnerabilities through public GitHub issues.**\n\nInstead, report security vulnerabilities by email to [`arcticdb@man.com`](mailto:arcticdb@man.com).\n\n### Email content\n\nPlease include the requested information listed below (as much as you can provide) to help us better understand the nature and scope of the possible issue:\n\n  * Type of issue (e.g. unsafe code, known vulnerabilities in dependencies, arbitrary code execution)\n  * Full paths of the (source) file(s) related to the manifestation of the issue\n  * The location of the affected source code (tag/branch/commit or direct URL)\n  * The commit which introduced the vulnerability, if applicable\n  * Any special configuration required to reproduce the issue\n  * Step-by-step instructions to reproduce the issue\n  * Proof-of-concept or exploit code (if possible)\n  * Impact of the issue, including how an attacker might exploit the issue\n\nReporters will receive a response within 48 hours. If the vulnerability is confirmed, we will release a patch as soon as possible.\n\n## Preferred Languages\n\nWe prefer all communications to be in English.\n"
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.220703125,
          "content": "github_enterprise:\n  webhook_secret: dtale2019manNumeric\ncoverage:\n  status:\n    project:\n      default: false\n      python:\n        target: 85%\n        paths: \"dtale/\"\n      react:\n        target: 85%\n        paths: \"static/\""
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 0.611328125,
          "content": "version: '3.4'\n\nservices:\n  dtale_2_7:\n    image: dtale_2_7:latest\n    env_file:\n      - ./docker/dtale.env\n    build:\n      context: .\n      dockerfile: docker/2_7/Dockerfile\n  dtale_3_6:\n    image: dtale_3_6:latest\n    env_file:\n      - ./docker/dtale.env\n    build:\n      context: .\n      dockerfile: docker/3_6/Dockerfile\n  dtale_3_7:\n    image: dtale_3_7:latest\n    env_file:\n      - ./docker/dtale.env\n    build:\n      context: .\n      dockerfile: docker/3_7/Dockerfile\n  dtale_3_8:\n    image: dtale_3_8:latest\n    env_file:\n      - ./docker/dtale.env\n    build:\n      context: .\n      dockerfile: docker/3_8/Dockerfile\n"
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "dtale",
          "type": "tree",
          "content": null
        },
        {
          "name": "frontend",
          "type": "tree",
          "content": null
        },
        {
          "name": "pytest.ini",
          "type": "blob",
          "size": 0.13671875,
          "content": "[pytest]\nnorecursedirs = .git cfg docker node_modules ci .eggs build\nmarkers =\n    unit: marks tests as fast (deselect with '-m \"not unit\"')"
        },
        {
          "name": "requirements-docs.txt",
          "type": "blob",
          "size": 0.0341796875,
          "content": "pypandoc\ndocutils<=0.20.1\nPygments\n"
        },
        {
          "name": "requirements-redis.txt",
          "type": "blob",
          "size": 0.015625,
          "content": "redis\nredislite\n"
        },
        {
          "name": "requirements-test.txt",
          "type": "blob",
          "size": 0.2392578125,
          "content": "importlib-metadata<=3.7.3; python_version <= '3.6'\nimportlib-metadata; python_version != '3.6'\nipython<8.0.0\nmock\nnbconvert\npytest\npytest-cov\npytest-server-fixtures<=1.7.0; python_version == '2.7'\npytest-server-fixtures; python_version >= '3.6'\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 4.5908203125,
          "content": "lz4<=2.2.1; python_version == '2.7'\nlz4<=3.1.10; python_version == '3.6'\nlz4; python_version > '3.6'\nbeautifulsoup4!=4.13.0b2; python_version > '3.0'\nbeautifulsoup4<=4.9.3; python_version == '2.7'\nBrotli<=1.0.9; python_version == '2.7'\ncertifi<=2021.10.8; python_version == '2.7'\ncertifi; python_version > '3.0'\ncycler; python_version > '3.6'\ncycler<=0.11.0; python_version == '3.6'\ncycler<=0.10.0; python_version == '2.7'\ndash<=1.21.0; python_version == '2.7'\ndash<=2.0.0; python_version == '3.6'\ndash!=2.13.0; python_version == '3.7'\ndash; python_version > '3.7'\ndash-bootstrap-components==0.13.1; python_version == '2.7'\ndash-bootstrap-components; python_version > '3.0'\ndash-colorscales\ndash_daq\ndataclasses<1; python_version == '3.6'\ndecorator<=4.4.2; python_version == '2.7'\net_xmlfile<=1.0.1; python_version < '3.6'\net_xmlfile; python_version >= '3.6'\nFlask<=1.1.4; python_version < '3.7'\nFlask<2.3; python_version == '3.7'\nFlask; python_version >= '3.8'\nFlask-Compress<=1.15; python_version <= '3.8'\nFlask-Compress; python_version > '3.8'\nfuture>=0.14.0\nimmutables<=0.19; python_version == '3.6'\nitsdangerous<=1.1.0; python_version < '3.7'\nitsdangerous<=2.1.2; python_version == '3.7'\nitsdangerous; python_version >= '3.8'\n# required for loading scikit-learn\njoblib<=1.1.1; python_version == '3.6'\njoblib<=1.3.2; python_version == '3.7'\nkaleido<=0.2.1; python_version <= '3.8'\nkaleido; python_version >= '3.9'\nkiwisolver<=1.1.0; python_version <= '3.6'\nkiwisolver<=1.4.5; python_version == '3.7'\nMarkupSafe<=1.1.1; python_version == '2.7'\nMarkupSafe<=2.0.1; python_version == '3.6'\nMarkupSafe<=2.1.5; python_version == '3.7'\nMarkupSafe<=2.1.5; python_version == '3.8'\nmatplotlib<=2.2.5; python_version == '2.7'\nmatplotlib<=3.3.4; python_version == '3.6'\nmatplotlib<=3.5.3; python_version == '3.7'\nmatplotlib<=3.7.2; python_version == '3.8'\nmatplotlib; python_version >= '3.9'\nmissingno\nnetworkx<=2.2; python_version <= '3.4'\nnetworkx<=2.4; python_version == '3.5'\nnetworkx<=2.5.1; python_version == '3.6'\nnetworkx<=2.6.3; python_version == '3.7'\nnetworkx<=3.1; python_version == '3.8'\nnetworkx<=3.2.1; python_version == '3.9'\nnetworkx; python_version > '3.9'\nnumpy<=1.16.6; python_version < '3.0'\nnumpy; python_version >= '3.0'\nopenpyxl<=2.6.4; python_version < '3.0'\nopenpyxl!=3.2.0b1; python_version >= '3.0'\npackaging<=21.0; python_version == '3.6'\npackaging<=21.0; python_version == '3.7'\npandas\nplotly<=4.14.3; python_version < '3.6'\nplotly; python_version >= '3.6'\npyparsing<=2.4.7; python_version == '2.7'\npyparsing<=3.0.9; python_version == '3.6'\npyparsing<=3.0.9; python_version == '3.7'\npyparsing<=3.0.9; python_version == '3.8'\nrequests; python_version >= '3.8'\nrequests<=2.31.0; python_version == '3.7'\nrequests<=2.27.1; python_version <= '3.6'\nscikit-learn<=0.20.4; python_version < '3.0'\nscikit-learn<=0.24.2; python_version == '3.6'\nscikit-learn<=1.0.2; python_version == '3.7'\nscikit-learn<=1.3.2; python_version == '3.8'\nscikit-learn; python_version > '3.8'\nscipy<=1.2.3; python_version == '2.7'\nscipy<=1.5.4; python_version == '3.0'\nscipy<=1.5.4; python_version == '3.1'\nscipy<=1.5.4; python_version == '3.2'\nscipy<=1.5.4; python_version == '3.3'\nscipy<=1.5.4; python_version == '3.4'\nscipy<=1.5.4; python_version == '3.5'\nscipy<=1.5.4; python_version == '3.6'\nscipy<=1.7.3; python_version == '3.7'\nscipy<=1.10.1; python_version == '3.8'\nscipy<=1.13.1; python_version == '3.9'\nscipy!=1.12.0rc1,!=1.14.0rc1,!=1.14.0rc2,!=1.14.0; python_version >= '3.10'\nseaborn<=0.9.1; python_version < '3.6'\nseaborn<=0.11.2; python_version == '3.6'\nseaborn<=0.12.2; python_version == '3.7'\nseaborn; python_version > '3.7'\nsquarify\nstatsmodels<=0.10.2; python_version == '2.7'\nstatsmodels<=0.12.2; python_version == '3.0'\nstatsmodels<=0.12.2; python_version == '3.1'\nstatsmodels<=0.12.2; python_version == '3.2'\nstatsmodels<=0.12.2; python_version == '3.3'\nstatsmodels<=0.12.2; python_version == '3.4'\nstatsmodels<=0.12.2; python_version == '3.5'\nstatsmodels<=0.12.2; python_version == '3.6'\nstatsmodels<=0.12.2; python_version == '3.7'\nstatsmodels<=0.14.1; python_version == '3.8'\nstatsmodels; python_version > '3.8'\nstrsimpy\nsix\n# required for loading plotly\ntenacity<=7.0.0; python_version == '3.6'\nthreadpoolctl<=3.1.0; python_version == '3.6'\nthreadpoolctl<=3.1.0; python_version == '3.7'\nurllib3<=2.0.7; python_version == '3.7'\nwerkzeug<=1.0.1; python_version <= '3.6'\nwerkzeug==2.2.3; python_version == '3.7'\nwerkzeug; python_version > '3.7'\nxarray<=0.11.3; python_version < '3.0'\nxarray; python_version >= '3.0'\nxlrd\nzipp<=3.15.0; python_version == '3.6'\nzstandard<=0.20.0; python_version == '3.6'\nzstandard<=0.21.0; python_version == '3.7'\nzstandard<=0.14.0; python_version == '2.7'\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 4.115234375,
          "content": "#!/usr/bin/env python\nfrom __future__ import print_function\n\nimport logging\nimport sys\n\nfrom setuptools import find_packages, setup\nfrom setuptools.command.test import test as TestCommand\n\n\ndef read_file(path):\n    # if this fails on windows then add the following environment variable (PYTHONUTF8=1)\n    with open(path) as contents:\n        return contents.read()\n\n\n# Convert Markdown to RST for PyPI\n# http://stackoverflow.com/a/26737672\ntry:\n    import pypandoc\n\n    pypandoc_func = (\n        pypandoc.convert_file if hasattr(pypandoc, \"convert_file\") else pypandoc.convert\n    )\n    long_description = pypandoc_func(\"DESCRIPTION.md\", \"rst\")\nexcept (IOError, ImportError, OSError):\n    long_description = read_file(\"DESCRIPTION.md\")\n\n\nclass PyTest(TestCommand):\n    user_options = [(\"pytest-args=\", \"a\", \"Arguments to pass to py.test\")]\n\n    def initialize_options(self):\n        TestCommand.initialize_options(self)\n        self.pytest_args = []\n\n    def finalize_options(self):\n        TestCommand.finalize_options(self)\n        self.test_args = []\n        self.test_suite = True\n\n    def run_tests(self):\n        logging.basicConfig(\n            format=\"%(asctime)s %(levelname)s %(name)s %(message)s\", level=\"DEBUG\"\n        )\n\n        # import here, cause outside the eggs aren't loaded\n        import pytest\n        import six\n\n        args = (\n            [self.pytest_args]\n            if isinstance(self.pytest_args, six.string_types)\n            else list(self.pytest_args)\n        )\n        args.extend(\n            [\n                \"--cov\",\n                \"dtale\",\n                \"--cov-report\",\n                \"xml\",\n                \"--cov-report\",\n                \"html\",\n                \"--junitxml\",\n                \"junit.xml\",\n                \"-v\",\n            ]\n        )\n        errno = pytest.main(args)\n        sys.exit(errno)\n\n\nsetup(\n    name=\"dtale\",\n    version=\"3.16.1\",\n    author=\"MAN Alpha Technology\",\n    author_email=\"ManAlphaTech@man.com\",\n    description=\"Web Client for Visualizing Pandas Objects\",\n    license=\"LGPL\",\n    long_description=long_description,\n    keywords=[\"numeric\", \"pandas\", \"visualization\", \"flask\"],\n    url=\"https://github.com/man-group/dtale\",\n    install_requires=read_file(\"requirements.txt\").splitlines(),\n    extras_require={\n        \"arctic\": [\"arctic <= 1.79.4\"],\n        \"arcticdb\": [\"arcticdb\"],\n        \"dash-bio\": [\n            \"ParmEd==3.4.3; python_version == '3.6'\",\n            \"dash-bio; python_version > '3.0'\",\n            \"dash-bio==0.7.1; python_version == '2.7'\",\n        ],\n        \"ngrok\": [\"flask-ngrok; python_version > '3.0'\"],\n        \"r\": [\"rpy2; python_version > '3.0'\"],\n        \"redis\": read_file(\"requirements-redis.txt\").splitlines(),\n        \"streamlit\": [\"streamlit\"],\n        \"swifter\": [\"swifter\"],\n        \"tests\": read_file(\"requirements-test.txt\").splitlines(),\n    },\n    classifiers=[\n        \"Development Status :: 4 - Beta\",\n        \"License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)\",\n        \"Operating System :: OS Independent\",\n        \"Intended Audience :: Science/Research\",\n        \"Programming Language :: Python\",\n        \"Topic :: Scientific/Engineering\",\n        \"Programming Language :: Python :: 2.7\",\n        \"Programming Language :: Python :: 3.6\",\n        \"Programming Language :: Python :: 3.7\",\n        \"Programming Language :: Python :: 3.8\",\n        \"Programming Language :: Python :: 3.9\",\n        \"Programming Language :: Python :: 3.10\",\n        \"Programming Language :: Python :: 3.11\",\n    ],\n    cmdclass={\"test\": PyTest},\n    packages=find_packages(exclude=[\"tests*\", \"script*\"]),\n    package_data={\n        \"dtale\": [\n            \"dash_application/components/*\",\n            \"static/dist/*\",\n            \"static/dash/*\",\n            \"static/css/*\",\n            \"static/fonts/*\",\n            \"static/images/*\",\n            \"static/images/**/*\",\n            \"static/maps/*\",\n            \"templates/**/*\",\n            \"templates/**/**/*\",\n        ]\n    },\n    entry_points={\n        \"console_scripts\": [\n            \"dtale = dtale.cli.script:main\",\n            \"dtale-streamlit = dtale.cli.streamlit_script:main\",\n        ]\n    },\n    zip_safe=False,\n)\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}