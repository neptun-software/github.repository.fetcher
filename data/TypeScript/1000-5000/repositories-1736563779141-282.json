{
  "metadata": {
    "timestamp": 1736563779141,
    "page": 282,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjI5MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "kentcdodds/match-sorter",
      "stars": 3898,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".all-contributorsrc",
          "type": "blob",
          "size": 7.36328125,
          "content": "{\n  \"projectName\": \"match-sorter\",\n  \"projectOwner\": \"kentcdodds\",\n  \"imageSize\": 100,\n  \"commit\": false,\n  \"contributorsPerLine\": 7,\n  \"repoHost\": \"https://github.com\",\n  \"repoType\": \"github\",\n  \"skipCi\": false,\n  \"files\": [\n    \"README.md\"\n  ],\n  \"contributors\": [\n    {\n      \"login\": \"kentcdodds\",\n      \"name\": \"Kent C. Dodds\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/1500684?v=3\",\n      \"profile\": \"https://kentcdodds.com\",\n      \"contributions\": [\n        \"code\",\n        \"doc\",\n        \"infra\",\n        \"test\",\n        \"review\"\n      ]\n    },\n    {\n      \"login\": \"conorhastings\",\n      \"name\": \"Conor Hastings\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/8263298?v=3\",\n      \"profile\": \"http://conorhastings.com\",\n      \"contributions\": [\n        \"code\",\n        \"doc\",\n        \"test\",\n        \"review\"\n      ]\n    },\n    {\n      \"login\": \"rogeliog\",\n      \"name\": \"Rogelio Guzman\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/574806?v=3\",\n      \"profile\": \"https://github.com/rogeliog\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"clauderic\",\n      \"name\": \"Claudéric Demers\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/1416436?v=3\",\n      \"profile\": \"http://ced.io\",\n      \"contributions\": [\n        \"code\",\n        \"doc\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"osfan501\",\n      \"name\": \"Kevin Davis\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/4150097?v=3\",\n      \"profile\": \"kevindav.us\",\n      \"contributions\": [\n        \"code\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"nfdjps\",\n      \"name\": \"Denver Chen\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/19157735?v=3\",\n      \"profile\": \"https://github.com/nfdjps\",\n      \"contributions\": [\n        \"code\",\n        \"doc\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"ChrisRu\",\n      \"name\": \"Christian Ruigrok\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/12719057?v=4\",\n      \"profile\": \"http://ruigrok.info\",\n      \"contributions\": [\n        \"bug\",\n        \"code\",\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"hozefaj\",\n      \"name\": \"Hozefa\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/2084833?v=4\",\n      \"profile\": \"https://github.com/hozefaj\",\n      \"contributions\": [\n        \"bug\",\n        \"code\",\n        \"test\",\n        \"ideas\"\n      ]\n    },\n    {\n      \"login\": \"pushpinder107\",\n      \"name\": \"pushpinder107\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/9403361?v=4\",\n      \"profile\": \"https://github.com/pushpinder107\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"tikotzky\",\n      \"name\": \"Mordy Tikotzky\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/200528?v=4\",\n      \"profile\": \"https://github.com/tikotzky\",\n      \"contributions\": [\n        \"code\",\n        \"doc\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"sdbrannum\",\n      \"name\": \"Steven Brannum\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/11765845?v=4\",\n      \"profile\": \"https://github.com/sdbrannum\",\n      \"contributions\": [\n        \"code\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"cmeeren\",\n      \"name\": \"Christer van der Meeren\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/7766733?v=4\",\n      \"profile\": \"https://github.com/cmeeren\",\n      \"contributions\": [\n        \"bug\"\n      ]\n    },\n    {\n      \"login\": \"samyan\",\n      \"name\": \"Samuel Petrosyan\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/3801362?v=4\",\n      \"profile\": \"http://securitynull.net/\",\n      \"contributions\": [\n        \"code\",\n        \"bug\"\n      ]\n    },\n    {\n      \"login\": \"brandonkal\",\n      \"name\": \"Brandon Kalinowski\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/4714862?v=4\",\n      \"profile\": \"https://brandonkalinowski.com\",\n      \"contributions\": [\n        \"bug\"\n      ]\n    },\n    {\n      \"login\": \"coderberry\",\n      \"name\": \"Eric Berry\",\n      \"avatar_url\": \"https://avatars2.githubusercontent.com/u/12481?v=4\",\n      \"profile\": \"https://codefund.io\",\n      \"contributions\": [\n        \"fundingFinding\"\n      ]\n    },\n    {\n      \"login\": \"skube\",\n      \"name\": \"Skubie Doo\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/146396?v=4\",\n      \"profile\": \"https://github.com/skube\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"MichaelDeBoey\",\n      \"name\": \"Michaël De Boey\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/6643991?v=4\",\n      \"profile\": \"https://michaeldeboey.be\",\n      \"contributions\": [\n        \"code\",\n        \"review\"\n      ]\n    },\n    {\n      \"login\": \"tannerlinsley\",\n      \"name\": \"Tanner Linsley\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/5580297?v=4\",\n      \"profile\": \"https://tannerlinsley.com\",\n      \"contributions\": [\n        \"code\",\n        \"test\"\n      ]\n    },\n    {\n      \"login\": \"SweVictor\",\n      \"name\": \"Victor\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/449347?v=4\",\n      \"profile\": \"https://github.com/SweVictor\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"RebeccaStevens\",\n      \"name\": \"Rebecca Stevens\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/7224206?v=4\",\n      \"profile\": \"https://github.com/RebeccaStevens\",\n      \"contributions\": [\n        \"bug\",\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"marcosvega91\",\n      \"name\": \"Marco Moretti\",\n      \"avatar_url\": \"https://avatars2.githubusercontent.com/u/5365582?v=4\",\n      \"profile\": \"https://github.com/marcosvega91\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"rbusquet\",\n      \"name\": \"Ricardo Busquet\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/7198302?v=4\",\n      \"profile\": \"https://ricardobusquet.com\",\n      \"contributions\": [\n        \"ideas\",\n        \"review\",\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"weyert\",\n      \"name\": \"Weyert de Boer\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/7049?v=4\",\n      \"profile\": \"https://github.com/weyert\",\n      \"contributions\": [\n        \"ideas\",\n        \"review\"\n      ]\n    },\n    {\n      \"login\": \"PhilGarb\",\n      \"name\": \"Philipp Garbowsky\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/38015558?v=4\",\n      \"profile\": \"https://github.com/PhilGarb\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"mart-jansink\",\n      \"name\": \"Mart\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/4381258?v=4\",\n      \"profile\": \"https://github.com/mart-jansink\",\n      \"contributions\": [\n        \"code\",\n        \"test\",\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"levenleven\",\n      \"name\": \"Aleksey Levenstein\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/6463364?v=4\",\n      \"profile\": \"https://github.com/levenleven\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"diesieben07\",\n      \"name\": \"Take Weiland\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/1915984?v=4\",\n      \"profile\": \"https://github.com/diesieben07\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"AmitAber\",\n      \"name\": \"Amit Abershitz\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/8988867?v=4\",\n      \"profile\": \"https://github.com/AmitAber\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    }\n  ]\n}\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0185546875,
          "content": "* text=auto eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1298828125,
          "content": "node_modules\ncoverage\ndist\n.DS_Store\n\n# these cause more harm than good\n# when working with contributors\npackage-lock.json\nyarn.lock\n"
        },
        {
          "name": ".huskyrc.js",
          "type": "blob",
          "size": 0.044921875,
          "content": "module.exports = require('kcd-scripts/husky')\n"
        },
        {
          "name": ".npmrc",
          "type": "blob",
          "size": 0.0361328125,
          "content": "registry=https://registry.npmjs.org/\n"
        },
        {
          "name": ".prettierignore",
          "type": "blob",
          "size": 0.0263671875,
          "content": "node_modules\ncoverage\ndist\n"
        },
        {
          "name": ".prettierrc.js",
          "type": "blob",
          "size": 0.0478515625,
          "content": "module.exports = require('kcd-scripts/prettier')\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0.1826171875,
          "content": "# CHANGELOG\n\nThe changelog is automatically updated using\n[semantic-release](https://github.com/semantic-release/semantic-release). You\ncan see it on the [releases page](../../releases).\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 5.099609375,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nWe as members, contributors, and leaders pledge to make participation in our\ncommunity a harassment-free experience for everyone, regardless of age, body\nsize, visible or invisible disability, ethnicity, sex characteristics, gender\nidentity and expression, level of experience, education, socio-economic status,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\nWe pledge to act and interact in ways that contribute to an open, welcoming,\ndiverse, inclusive, and healthy community.\n\n## Our Standards\n\nExamples of behavior that contributes to a positive environment for our\ncommunity include:\n\n- Demonstrating empathy and kindness toward other people\n- Being respectful of differing opinions, viewpoints, and experiences\n- Giving and gracefully accepting constructive feedback\n- Accepting responsibility and apologizing to those affected by our mistakes,\n  and learning from the experience\n- Focusing on what is best not just for us as individuals, but for the overall\n  community\n\nExamples of unacceptable behavior include:\n\n- The use of sexualized language or imagery, and sexual attention or advances of\n  any kind\n- Trolling, insulting or derogatory comments, and personal or political attacks\n- Public or private harassment\n- Publishing others' private information, such as a physical or email address,\n  without their explicit permission\n- Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Enforcement Responsibilities\n\nCommunity leaders are responsible for clarifying and enforcing our standards of\nacceptable behavior and will take appropriate and fair corrective action in\nresponse to any behavior that they deem inappropriate, threatening, offensive,\nor harmful.\n\nCommunity leaders have the right and responsibility to remove, edit, or reject\ncomments, commits, code, wiki edits, issues, and other contributions that are\nnot aligned to this Code of Conduct, and will communicate reasons for moderation\ndecisions when appropriate.\n\n## Scope\n\nThis Code of Conduct applies within all community spaces, and also applies when\nan individual is officially representing the community in public spaces.\nExamples of representing our community include using an official e-mail address,\nposting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported to the community leaders responsible for enforcement at\nme+coc@kentcdodds.com. All complaints will be reviewed and investigated promptly\nand fairly.\n\nAll community leaders are obligated to respect the privacy and security of the\nreporter of any incident.\n\n## Enforcement Guidelines\n\nCommunity leaders will follow these Community Impact Guidelines in determining\nthe consequences for any action they deem in violation of this Code of Conduct:\n\n### 1. Correction\n\n**Community Impact**: Use of inappropriate language or other behavior deemed\nunprofessional or unwelcome in the community.\n\n**Consequence**: A private, written warning from community leaders, providing\nclarity around the nature of the violation and an explanation of why the\nbehavior was inappropriate. A public apology may be requested.\n\n### 2. Warning\n\n**Community Impact**: A violation through a single incident or series of\nactions.\n\n**Consequence**: A warning with consequences for continued behavior. No\ninteraction with the people involved, including unsolicited interaction with\nthose enforcing the Code of Conduct, for a specified period of time. This\nincludes avoiding interactions in community spaces as well as external channels\nlike social media. Violating these terms may lead to a temporary or permanent\nban.\n\n### 3. Temporary Ban\n\n**Community Impact**: A serious violation of community standards, including\nsustained inappropriate behavior.\n\n**Consequence**: A temporary ban from any sort of interaction or public\ncommunication with the community for a specified period of time. No public or\nprivate interaction with the people involved, including unsolicited interaction\nwith those enforcing the Code of Conduct, is allowed during this period.\nViolating these terms may lead to a permanent ban.\n\n### 4. Permanent Ban\n\n**Community Impact**: Demonstrating a pattern of violation of community\nstandards, including sustained inappropriate behavior, harassment of an\nindividual, or aggression toward or disparagement of classes of individuals.\n\n**Consequence**: A permanent ban from any sort of public interaction within the\ncommunity.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage],\nversion 2.0, available at\nhttps://www.contributor-covenant.org/version/2/0/code_of_conduct.html.\n\nCommunity Impact Guidelines were inspired by\n[Mozilla's code of conduct enforcement ladder](https://github.com/mozilla/diversity).\n\n[homepage]: https://www.contributor-covenant.org\n\nFor answers to common questions about this code of conduct, see the FAQ at\nhttps://www.contributor-covenant.org/faq. Translations are available at\nhttps://www.contributor-covenant.org/translations.\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 1.7255859375,
          "content": "# Contributing\n\nThanks for being willing to contribute!\n\n**Working on your first Pull Request?** You can learn how from this _free_\nseries [How to Contribute to an Open Source Project on GitHub][egghead]\n\n## Project setup\n\n1. Fork and clone the repo\n2. Run `npm run setup -s` to install dependencies and run validation\n3. Create a branch for your PR with `git checkout -b pr/your-branch-name`\n\n> Tip: Keep your `main` branch pointing at the original repository and make\n> pull requests from branches on your fork. To do this, run:\n>\n> ```\n> git remote add upstream https://github.com/kentcdodds/match-sorter\n> git fetch upstream\n> git branch --set-upstream-to=upstream/main main\n> ```\n>\n> This will add the original repository as a \"remote\" called \"upstream,\" Then\n> fetch the git information from that remote, then set your local `main` \n> branch to use the upstream main branch whenever you run `git pull`. Then you \n> can make all of your pull request branches based on this `main` branch.\n> Whenever you want to update your version of `main`, do a regular `git pull`.\n\n## Committing and Pushing changes\n\nPlease make sure to run the tests before you commit your changes. You can run\n`npm run test:update` which will update any snapshots that need updating. Make\nsure to include those changes (if they exist) in your commit.\n\n## Help needed\n\nPlease checkout the [the open issues][issues]\n\nAlso, please watch the repo and respond to questions/bug reports/feature\nrequests! Thanks!\n\n<!-- prettier-ignore-start -->\n[egghead]: https://egghead.io/series/how-to-contribute-to-an-open-source-project-on-github\n[all-contributors]: https://github.com/all-contributors/all-contributors\n[issues]: https://github.com/kentcdodds/match-sorter/issues\n<!-- prettier-ignore-end -->\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0537109375,
          "content": "The MIT License (MIT)\nCopyright (c) 2020 Kent C. Dodds\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 29.080078125,
          "content": "<div align=\"center\">\n<h1>match-sorter</h1>\n\n<p>Simple, expected, and deterministic best-match sorting of an array in JavaScript</p>\n</div>\n\n---\n\n**[Demo](https://codesandbox.io/s/wyk856yo48)**\n\n<!-- prettier-ignore-start -->\n[![Build Status][build-badge]][build]\n[![Code Coverage][coverage-badge]][coverage]\n[![version][version-badge]][package]\n[![downloads][downloads-badge]][npmtrends]\n[![MIT License][license-badge]][license]\n[![All Contributors][all-contributors-badge]](#contributors-)\n[![PRs Welcome][prs-badge]][prs]\n[![Code of Conduct][coc-badge]][coc]\n[![Examples][examples-badge]][examples]\n<!-- prettier-ignore-end -->\n\n## The problem\n\n1.  You have a list of dozens, hundreds, or thousands of items\n2.  You want to filter and sort those items intelligently (maybe you have a\n    filter input for the user)\n3.  You want simple, expected, and deterministic sorting of the items (no fancy\n    math algorithm that fancily changes the sorting as they type)\n\n## This solution\n\nThis follows a simple and sensible (user friendly) algorithm that makes it easy\nfor you to filter and sort a list of items based on given input. Items are\nranked based on sensible criteria that result in a better user experience.\n\nTo explain the ranking system, I'll use countries as an example:\n\n1.  **CASE SENSITIVE EQUALS**: Case-sensitive equality trumps all. These will be\n    first. (ex. `France` would match `France`, but not `france`)\n2.  **EQUALS**: Case-insensitive equality (ex. `France` would match `france`)\n3.  **STARTS WITH**: If the item starts with the given value (ex. `Sou` would\n    match `South Korea` or `South Africa`)\n4.  **WORD STARTS WITH**: If the item has multiple words, then if one of those\n    words starts with the given value (ex. `Repub` would match\n    `Dominican Republic`)\n5.  **CONTAINS**: If the item contains the given value (ex. `ham` would match\n    `Bahamas`)\n6.  **ACRONYM**: If the item's acronym is the given value (ex. `us` would match\n    `United States`)\n7.  **SIMPLE MATCH**: If the item has letters in the same order as the letters\n    of the given value (ex. `iw` would match `Zimbabwe`, but not `Kuwait`\n    because it must be in the same order). Furthermore, if the item is a closer\n    match, it will rank higher (ex. `ua` matches `Uruguay` more closely than\n    `United States of America`, therefore `Uruguay` will be ordered before\n    `United States of America`)\n\nThis ranking seems to make sense in people's minds. At least it does in mine.\nFeedback welcome!\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n- [Installation](#installation)\n- [Usage](#usage)\n- [Advanced options](#advanced-options)\n  - [keys: `[string]`](#keys-string)\n  - [threshold: `number`](#threshold-number)\n  - [keepDiacritics: `boolean`](#keepdiacritics-boolean)\n  - [baseSort: `function(itemA, itemB): -1 | 0 | 1`](#basesort-functionitema-itemb--1--0--1)\n  - [sorter: `function(rankedItems): rankedItems`](#sorter-functionrankeditems-rankeditems)\n- [Recipes](#recipes)\n  - [Match PascalCase, camelCase, snake_case, or kebab-case as words](#match-pascalcase-camelcase-snake_case-or-kebab-case-as-words)\n  - [Match many words across multiple fields (table filtering)](#match-many-words-across-multiple-fields-table-filtering)\n- [Inspiration](#inspiration)\n- [Other Solutions](#other-solutions)\n- [Issues](#issues)\n  - [🐛 Bugs](#-bugs)\n  - [💡 Feature Requests](#-feature-requests)\n- [Contributors ✨](#contributors-)\n- [LICENSE](#license)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Installation\n\nThis module is distributed via [npm][npm] which is bundled with [node][node] and\nshould be installed as one of your project's `dependencies`:\n\n```\nnpm install match-sorter\n```\n\n## Usage\n\n```javascript\nimport {matchSorter} from 'match-sorter'\n// or const {matchSorter} = require('match-sorter')\n// or window.matchSorter.matchSorter\nconst list = ['hi', 'hey', 'hello', 'sup', 'yo']\nmatchSorter(list, 'h') // ['hello', 'hey', 'hi']\nmatchSorter(list, 'y') // ['yo', 'hey']\nmatchSorter(list, 'z') // []\n```\n\n## Advanced options\n\n### keys: `[string]`\n\n_Default: `undefined`_\n\nBy default it just uses the value itself as above. Passing an array tells\nmatch-sorter which keys to use for the ranking.\n\n```javascript\nconst objList = [\n  {name: 'Janice', color: 'Green'},\n  {name: 'Fred', color: 'Orange'},\n  {name: 'George', color: 'Blue'},\n  {name: 'Jen', color: 'Red'},\n]\nmatchSorter(objList, 'g', {keys: ['name', 'color']})\n// [{name: 'George', color: 'Blue'}, {name: 'Janice', color: 'Green'}, {name: 'Fred', color: 'Orange'}]\n\nmatchSorter(objList, 're', {keys: ['color', 'name']})\n// [{name: 'Jen', color: 'Red'}, {name: 'Janice', color: 'Green'}, {name: 'Fred', color: 'Orange'}, {name: 'George', color: 'Blue'}]\n```\n\n**Array of values**: When the specified key matches an array of values, the best\nmatch from the values of in the array is going to be used for the ranking.\n\n```javascript\nconst iceCreamYum = [\n  {favoriteIceCream: ['mint', 'chocolate']},\n  {favoriteIceCream: ['candy cane', 'brownie']},\n  {favoriteIceCream: ['birthday cake', 'rocky road', 'strawberry']},\n]\nmatchSorter(iceCreamYum, 'cc', {keys: ['favoriteIceCream']})\n// [{favoriteIceCream: ['candy cane', 'brownie']}, {favoriteIceCream: ['mint', 'chocolate']}]\n```\n\n**Nested Keys**: You can specify nested keys using dot-notation.\n\n```javascript\nconst nestedObjList = [\n  {name: {first: 'Janice'}},\n  {name: {first: 'Fred'}},\n  {name: {first: 'George'}},\n  {name: {first: 'Jen'}},\n]\nmatchSorter(nestedObjList, 'j', {keys: ['name.first']})\n// [{name: {first: 'Janice'}}, {name: {first: 'Jen'}}]\n\nconst nestedObjList = [\n  {name: [{first: 'Janice'}]},\n  {name: [{first: 'Fred'}]},\n  {name: [{first: 'George'}]},\n  {name: [{first: 'Jen'}]},\n]\nmatchSorter(nestedObjList, 'j', {keys: ['name.0.first']})\n// [{name: {first: 'Janice'}}, {name: {first: 'Jen'}}]\n\n// matchSorter(nestedObjList, 'j', {keys: ['name[0].first']}) does not work\n```\n\nThis even works with arrays of multiple nested objects: just specify the key\nusing dot-notation with the `*` wildcard instead of a numeric index.\n\n```javascript\nconst nestedObjList = [\n  {aliases: [{name: {first: 'Janice'}},{name: {first: 'Jen'}}]},\n  {aliases: [{name: {first: 'Fred'}},{name: {first: 'Frederic'}}]},\n  {aliases: [{name: {first: 'George'}},{name: {first: 'Georgie'}}]},\n]\nmatchSorter(nestedObjList, 'jen', {keys: ['aliases.*.name.first']})\n// [{aliases: [{name: {first: 'Janice'}},{name: {first: 'Jen'}}]}]\nmatchSorter(nestedObjList, 'jen', {keys: ['aliases.0.name.first']})\n// []\n```\n\n**Property Callbacks**: Alternatively, you may also pass in a callback function\nthat resolves the value of the key(s) you wish to match on. This is especially\nuseful when interfacing with libraries such as Immutable.js\n\n```javascript\nconst list = [{name: 'Janice'}, {name: 'Fred'}, {name: 'George'}, {name: 'Jen'}]\nmatchSorter(list, 'j', {keys: [item => item.name]})\n// [{name: 'Janice'}, {name: 'Jen'}]\n```\n\nFor more complex structures, expanding on the `nestedObjList` example above, you\ncan use `map`:\n\n```javascript\nconst nestedObjList = [\n  {\n    name: [\n      {first: 'Janice', last: 'Smith'},\n      {first: 'Jon', last: 'Doe'},\n    ],\n  },\n  {\n    name: [\n      {first: 'Fred', last: 'Astaire'},\n      {first: 'Jenny', last: 'Doe'},\n      {first: 'Wilma', last: 'Flintstone'},\n    ],\n  },\n]\nmatchSorter(nestedObjList, 'doe', {\n  keys: [\n    item => item.name.map(i => i.first),\n    item => item.name.map(i => i.last),\n  ],\n})\n// [name: [{ first: 'Janice', last: 'Smith' },{ first: 'Jon', last: 'Doe' }], name: [{ first: 'Fred', last: 'Astaire' },{ first: 'Jenny', last: 'Doe' },{ first: 'Wilma', last: 'Flintstone' }]]\n```\n\n**Threshold**: You may specify an individual threshold for specific keys. A key\nwill only match if it meets the specified threshold. _For more information\nregarding thresholds [see below](#threshold-number)_\n\n```javascript\nconst list = [\n  {name: 'Fred', color: 'Orange'},\n  {name: 'Jen', color: 'Red'},\n]\nmatchSorter(list, 'ed', {\n  keys: [{threshold: matchSorter.rankings.STARTS_WITH, key: 'name'}, 'color'],\n})\n//[{name: 'Jen', color: 'Red'}]\n```\n\n**Min and Max Ranking**: You may restrict specific keys to a minimum or maximum\nranking by passing in an object. A key with a minimum rank will only get\npromoted if there is at least a simple match.\n\n```javascript\nconst tea = [\n  {tea: 'Earl Grey', alias: 'A'},\n  {tea: 'Assam', alias: 'B'},\n  {tea: 'Black', alias: 'C'},\n]\nmatchSorter(tea, 'A', {\n  keys: ['tea', {maxRanking: matchSorter.rankings.STARTS_WITH, key: 'alias'}],\n})\n// without maxRanking, Earl Grey would come first because the alias \"A\" would be CASE_SENSITIVE_EQUAL\n// `tea` key comes before `alias` key, so Assam comes first even though both match as STARTS_WITH\n// [{tea: 'Assam', alias: 'B'}, {tea: 'Earl Grey', alias: 'A'},{tea: 'Black', alias: 'C'}]\n```\n\n```javascript\nconst tea = [\n  {tea: 'Milk', alias: 'moo'},\n  {tea: 'Oolong', alias: 'B'},\n  {tea: 'Green', alias: 'C'},\n]\nmatchSorter(tea, 'oo', {\n  keys: ['tea', {minRanking: matchSorter.rankings.EQUAL, key: 'alias'}],\n})\n// minRanking bumps Milk up to EQUAL from CONTAINS (alias)\n// Oolong matches as STARTS_WITH\n// Green is missing due to no match\n// [{tea: 'Milk', alias: 'moo'}, {tea: 'Oolong', alias: 'B'}]\n```\n\n### threshold: `number`\n\n_Default: `MATCHES`_\n\nThresholds can be used to specify the criteria used to rank the results.\nAvailable thresholds (from top to bottom) are:\n\n- CASE_SENSITIVE_EQUAL\n- EQUAL\n- STARTS_WITH\n- WORD_STARTS_WITH\n- CONTAINS\n- ACRONYM\n- MATCHES _(default value)_\n- NO_MATCH\n\n```javascript\nconst fruit = ['orange', 'apple', 'grape', 'banana']\nmatchSorter(fruit, 'ap', {threshold: matchSorter.rankings.NO_MATCH})\n// ['apple', 'grape', 'orange', 'banana'] (returns all items, just sorted by best match)\n\nconst things = ['google', 'airbnb', 'apple', 'apply', 'app'],\nmatchSorter(things, 'app', {threshold: matchSorter.rankings.EQUAL})\n// ['app'] (only items that are equal)\n\nconst otherThings = ['fiji apple', 'google', 'app', 'crabapple', 'apple', 'apply']\nmatchSorter(otherThings, 'app', {threshold: matchSorter.rankings.WORD_STARTS_WITH})\n// ['app', 'apple', 'apply', 'fiji apple'] (everything that matches with \"word starts with\" or better)\n```\n\n### keepDiacritics: `boolean`\n\n_Default: `false`_\n\nBy default, match-sorter will strip diacritics before doing any comparisons.\nThis is the default because it makes the most sense from a UX perspective.\n\nYou can disable this behavior by specifying `keepDiacritics: true`\n\n```javascript\nconst thingsWithDiacritics = [\n  'jalapeño',\n  'à la carte',\n  'café',\n  'papier-mâché',\n  'à la mode',\n]\nmatchSorter(thingsWithDiacritics, 'aa')\n// ['jalapeño', 'à la carte', 'à la mode', 'papier-mâché']\n\nmatchSorter(thingsWithDiacritics, 'aa', {keepDiacritics: true})\n// ['jalapeño', 'à la carte']\n\nmatchSorter(thingsWithDiacritics, 'à', {keepDiacritics: true})\n// ['à la carte', 'à la mode']\n```\n\n### baseSort: `function(itemA, itemB): -1 | 0 | 1`\n\n_Default: `(a, b) => String(a.rankedValue).localeCompare(b.rankedValue)`_\n\nBy default, match-sorter uses the `String.localeCompare` function to tie-break\nitems that have the same ranking. This results in a stable, alphabetic sort.\n\n```javascript\nconst list = ['C apple', 'B apple', 'A apple']\nmatchSorter(list, 'apple')\n// ['A apple', 'B apple', 'C apple']\n```\n\n_You can customize this behavior by specifying a custom `baseSort` function:_\n\n```javascript\nconst list = ['C apple', 'B apple', 'A apple']\n// This baseSort function will use the original index of items as the tie breaker\nmatchSorter(list, 'apple', {baseSort: (a, b) => (a.index < b.index ? -1 : 1)})\n// ['C apple', 'B apple', 'A apple']\n```\n\n### sorter: `function(rankedItems): rankedItems`\n\n_Default:\n`matchedItems => matchedItems.sort((a, b) => sortRankedValues(a, b, baseSort))`_\n\nBy default, match-sorter uses an internal `sortRankedValues` function to sort\nitems after matching them.\n\n_You can customize the core sorting behavior by specifying a custom `sorter`\nfunction:_\n\nDisable sorting entirely:\n```javascript\nconst list = ['appl', 'C apple', 'B apple', 'A apple', 'app', 'applebutter']\nmatchSorter(list, 'apple', {sorter: rankedItems => rankedItems})\n// ['C apple', 'B apple', 'A apple', 'applebutter']\n```\n\nReturn the unsorted rankedItems, but in reverse order:\n```javascript\nconst list = ['appl', 'C apple', 'B apple', 'A apple', 'app', 'applebutter']\nmatchSorter(list, 'apple', {sorter: rankedItems => [...rankedItems].reverse()})\n// ['applebutter', 'A apple', 'B apple', 'C apple']\n```\n\n## Recipes\n\n### Match PascalCase, camelCase, snake_case, or kebab-case as words\n\nBy default, `match-sorter` assumes spaces to be the word separator. However, if\nyour data has a different word separator, you can use a property callback to\nreplace your separator with spaces. For example, for `snake_case`:\n\n```javascript\nconst list = [\n  {name: 'Janice_Kurtis'},\n  {name: 'Fred_Mertz'},\n  {name: 'George_Foreman'},\n  {name: 'Jen_Smith'},\n]\nmatchSorter(list, 'js', {keys: [item => item.name.replace(/_/g, ' ')]})\n// [{name: 'Jen_Smith'}, {name: 'Janice_Kurtis'}]\n```\n\n### Match many words across multiple fields (table filtering)\n\nBy default, `match-sorter` will return matches from objects where one of the\nproperties matches _the entire_ search term. For multi-column data sets it can\nbe beneficial to split words in search string and match each word separately.\nThis can be done by chaining `match-sorter` calls.\n\nThe benefit of this is that a filter string of \"two words\" will match both \"two\"\nand \"words\", but will return rows where the two words are found in _different_\ncolumns as well as when both words match in the same column. For single-column\nmatches it will also return matches out of order (column = \"wordstwo\" will match\njust as well as column=\"twowords\", the latter getting a higher score).\n\n```javascript\nfunction fuzzySearchMultipleWords(\n  rows, // array of data [{a: \"a\", b: \"b\"}, {a: \"c\", b: \"d\"}]\n  keys, // keys to search [\"a\", \"b\"]\n  filterValue: string, // potentially multi-word search string \"two words\"\n) {\n  if (!filterValue || !filterValue.length) {\n    return rows\n  }\n\n  const terms = filterValue.split(' ')\n  if (!terms) {\n    return rows\n  }\n\n  // reduceRight will mean sorting is done by score for the _first_ entered word.\n  return terms.reduceRight(\n    (results, term) => matchSorter(results, term, {keys}),\n    rows,\n  )\n}\n```\n\n[Multi-column code sandbox](https://codesandbox.io/s/match-sorter-example-forked-1ko35)\n\n## Inspiration\n\nActually, most of this code was extracted from the _very first_ library I ever\nwrote: [genie][genie]!\n\n## Other Solutions\n\nYou might try [Fuse.js](https://github.com/krisk/Fuse). It uses advanced math\nfanciness to get the closest match. Unfortunately what's \"closest\" doesn't\nalways really make sense. So I extracted this from [genie][genie].\n\n## Issues\n\n_Looking to contribute? Look for the [Good First Issue][good-first-issue]\nlabel._\n\n### 🐛 Bugs\n\nPlease file an issue for bugs, missing documentation, or unexpected behavior.\n\n[**See Bugs**][bugs]\n\n### 💡 Feature Requests\n\nPlease file an issue to suggest new features. Vote on feature requests by adding\na 👍. This helps maintainers prioritize what to work on.\n\n[**See Feature Requests**][requests]\n\n## Contributors ✨\n\nThanks goes to these people ([emoji key][emojis]):\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tr>\n    <td align=\"center\"><a href=\"https://kentcdodds.com\"><img src=\"https://avatars.githubusercontent.com/u/1500684?v=3?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Kent C. Dodds</b></sub></a><br /><a href=\"https://github.com/kentcdodds/match-sorter/commits?author=kentcdodds\" title=\"Code\">💻</a> <a href=\"https://github.com/kentcdodds/match-sorter/commits?author=kentcdodds\" title=\"Documentation\">📖</a> <a href=\"#infra-kentcdodds\" title=\"Infrastructure (Hosting, Build-Tools, etc)\">🚇</a> <a href=\"https://github.com/kentcdodds/match-sorter/commits?author=kentcdodds\" title=\"Tests\">⚠️</a> <a href=\"https://github.com/kentcdodds/match-sorter/pulls?q=is%3Apr+reviewed-by%3Akentcdodds\" title=\"Reviewed Pull Requests\">👀</a></td>\n    <td align=\"center\"><a href=\"http://conorhastings.com\"><img src=\"https://avatars.githubusercontent.com/u/8263298?v=3?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Conor Hastings</b></sub></a><br /><a href=\"https://github.com/kentcdodds/match-sorter/commits?author=conorhastings\" title=\"Code\">💻</a> <a href=\"https://github.com/kentcdodds/match-sorter/commits?author=conorhastings\" title=\"Documentation\">📖</a> <a href=\"https://github.com/kentcdodds/match-sorter/commits?author=conorhastings\" title=\"Tests\">⚠️</a> <a href=\"https://github.com/kentcdodds/match-sorter/pulls?q=is%3Apr+reviewed-by%3Aconorhastings\" title=\"Reviewed Pull Requests\">👀</a></td>\n    <td align=\"center\"><a href=\"https://github.com/rogeliog\"><img src=\"https://avatars.githubusercontent.com/u/574806?v=3?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Rogelio Guzman</b></sub></a><br /><a href=\"https://github.com/kentcdodds/match-sorter/commits?author=rogeliog\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"http://ced.io\"><img src=\"https://avatars.githubusercontent.com/u/1416436?v=3?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Claudéric Demers</b></sub></a><br /><a href=\"https://github.com/kentcdodds/match-sorter/commits?author=clauderic\" title=\"Code\">💻</a> <a href=\"https://github.com/kentcdodds/match-sorter/commits?author=clauderic\" title=\"Documentation\">📖</a> <a href=\"https://github.com/kentcdodds/match-sorter/commits?author=clauderic\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"kevindav.us\"><img src=\"https://avatars3.githubusercontent.com/u/4150097?v=3?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Kevin Davis</b></sub></a><br /><a href=\"https://github.com/kentcdodds/match-sorter/commits?author=osfan501\" title=\"Code\">💻</a> <a href=\"https://github.com/kentcdodds/match-sorter/commits?author=osfan501\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"https://github.com/nfdjps\"><img src=\"https://avatars1.githubusercontent.com/u/19157735?v=3?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Denver Chen</b></sub></a><br /><a href=\"https://github.com/kentcdodds/match-sorter/commits?author=nfdjps\" title=\"Code\">💻</a> <a href=\"https://github.com/kentcdodds/match-sorter/commits?author=nfdjps\" title=\"Documentation\">📖</a> <a href=\"https://github.com/kentcdodds/match-sorter/commits?author=nfdjps\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"http://ruigrok.info\"><img src=\"https://avatars0.githubusercontent.com/u/12719057?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Christian Ruigrok</b></sub></a><br /><a href=\"https://github.com/kentcdodds/match-sorter/issues?q=author%3AChrisRu\" title=\"Bug reports\">🐛</a> <a href=\"https://github.com/kentcdodds/match-sorter/commits?author=ChrisRu\" title=\"Code\">💻</a> <a href=\"https://github.com/kentcdodds/match-sorter/commits?author=ChrisRu\" title=\"Documentation\">📖</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/hozefaj\"><img src=\"https://avatars1.githubusercontent.com/u/2084833?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Hozefa</b></sub></a><br /><a href=\"https://github.com/kentcdodds/match-sorter/issues?q=author%3Ahozefaj\" title=\"Bug reports\">🐛</a> <a href=\"https://github.com/kentcdodds/match-sorter/commits?author=hozefaj\" title=\"Code\">💻</a> <a href=\"https://github.com/kentcdodds/match-sorter/commits?author=hozefaj\" title=\"Tests\">⚠️</a> <a href=\"#ideas-hozefaj\" title=\"Ideas, Planning, & Feedback\">🤔</a></td>\n    <td align=\"center\"><a href=\"https://github.com/pushpinder107\"><img src=\"https://avatars3.githubusercontent.com/u/9403361?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>pushpinder107</b></sub></a><br /><a href=\"https://github.com/kentcdodds/match-sorter/commits?author=pushpinder107\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/tikotzky\"><img src=\"https://avatars3.githubusercontent.com/u/200528?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Mordy Tikotzky</b></sub></a><br /><a href=\"https://github.com/kentcdodds/match-sorter/commits?author=tikotzky\" title=\"Code\">💻</a> <a href=\"https://github.com/kentcdodds/match-sorter/commits?author=tikotzky\" title=\"Documentation\">📖</a> <a href=\"https://github.com/kentcdodds/match-sorter/commits?author=tikotzky\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"https://github.com/sdbrannum\"><img src=\"https://avatars1.githubusercontent.com/u/11765845?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Steven Brannum</b></sub></a><br /><a href=\"https://github.com/kentcdodds/match-sorter/commits?author=sdbrannum\" title=\"Code\">💻</a> <a href=\"https://github.com/kentcdodds/match-sorter/commits?author=sdbrannum\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"https://github.com/cmeeren\"><img src=\"https://avatars0.githubusercontent.com/u/7766733?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Christer van der Meeren</b></sub></a><br /><a href=\"https://github.com/kentcdodds/match-sorter/issues?q=author%3Acmeeren\" title=\"Bug reports\">🐛</a></td>\n    <td align=\"center\"><a href=\"http://securitynull.net/\"><img src=\"https://avatars0.githubusercontent.com/u/3801362?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Samuel Petrosyan</b></sub></a><br /><a href=\"https://github.com/kentcdodds/match-sorter/commits?author=samyan\" title=\"Code\">💻</a> <a href=\"https://github.com/kentcdodds/match-sorter/issues?q=author%3Asamyan\" title=\"Bug reports\">🐛</a></td>\n    <td align=\"center\"><a href=\"https://brandonkalinowski.com\"><img src=\"https://avatars3.githubusercontent.com/u/4714862?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Brandon Kalinowski</b></sub></a><br /><a href=\"https://github.com/kentcdodds/match-sorter/issues?q=author%3Abrandonkal\" title=\"Bug reports\">🐛</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://codefund.io\"><img src=\"https://avatars2.githubusercontent.com/u/12481?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Eric Berry</b></sub></a><br /><a href=\"#fundingFinding-coderberry\" title=\"Funding Finding\">🔍</a></td>\n    <td align=\"center\"><a href=\"https://github.com/skube\"><img src=\"https://avatars3.githubusercontent.com/u/146396?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Skubie Doo</b></sub></a><br /><a href=\"https://github.com/kentcdodds/match-sorter/commits?author=skube\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"https://michaeldeboey.be\"><img src=\"https://avatars3.githubusercontent.com/u/6643991?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Michaël De Boey</b></sub></a><br /><a href=\"https://github.com/kentcdodds/match-sorter/commits?author=MichaelDeBoey\" title=\"Code\">💻</a> <a href=\"https://github.com/kentcdodds/match-sorter/pulls?q=is%3Apr+reviewed-by%3AMichaelDeBoey\" title=\"Reviewed Pull Requests\">👀</a></td>\n    <td align=\"center\"><a href=\"https://tannerlinsley.com\"><img src=\"https://avatars0.githubusercontent.com/u/5580297?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Tanner Linsley</b></sub></a><br /><a href=\"https://github.com/kentcdodds/match-sorter/commits?author=tannerlinsley\" title=\"Code\">💻</a> <a href=\"https://github.com/kentcdodds/match-sorter/commits?author=tannerlinsley\" title=\"Tests\">⚠️</a></td>\n    <td align=\"center\"><a href=\"https://github.com/SweVictor\"><img src=\"https://avatars1.githubusercontent.com/u/449347?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Victor</b></sub></a><br /><a href=\"https://github.com/kentcdodds/match-sorter/commits?author=SweVictor\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"https://github.com/RebeccaStevens\"><img src=\"https://avatars1.githubusercontent.com/u/7224206?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Rebecca Stevens</b></sub></a><br /><a href=\"https://github.com/kentcdodds/match-sorter/issues?q=author%3ARebeccaStevens\" title=\"Bug reports\">🐛</a> <a href=\"https://github.com/kentcdodds/match-sorter/commits?author=RebeccaStevens\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"https://github.com/marcosvega91\"><img src=\"https://avatars2.githubusercontent.com/u/5365582?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Marco Moretti</b></sub></a><br /><a href=\"https://github.com/kentcdodds/match-sorter/commits?author=marcosvega91\" title=\"Documentation\">📖</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://ricardobusquet.com\"><img src=\"https://avatars1.githubusercontent.com/u/7198302?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Ricardo Busquet</b></sub></a><br /><a href=\"#ideas-rbusquet\" title=\"Ideas, Planning, & Feedback\">🤔</a> <a href=\"https://github.com/kentcdodds/match-sorter/pulls?q=is%3Apr+reviewed-by%3Arbusquet\" title=\"Reviewed Pull Requests\">👀</a> <a href=\"https://github.com/kentcdodds/match-sorter/commits?author=rbusquet\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/weyert\"><img src=\"https://avatars3.githubusercontent.com/u/7049?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Weyert de Boer</b></sub></a><br /><a href=\"#ideas-weyert\" title=\"Ideas, Planning, & Feedback\">🤔</a> <a href=\"https://github.com/kentcdodds/match-sorter/pulls?q=is%3Apr+reviewed-by%3Aweyert\" title=\"Reviewed Pull Requests\">👀</a></td>\n    <td align=\"center\"><a href=\"https://github.com/PhilGarb\"><img src=\"https://avatars3.githubusercontent.com/u/38015558?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Philipp Garbowsky</b></sub></a><br /><a href=\"https://github.com/kentcdodds/match-sorter/commits?author=PhilGarb\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/mart-jansink\"><img src=\"https://avatars3.githubusercontent.com/u/4381258?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Mart</b></sub></a><br /><a href=\"https://github.com/kentcdodds/match-sorter/commits?author=mart-jansink\" title=\"Code\">💻</a> <a href=\"https://github.com/kentcdodds/match-sorter/commits?author=mart-jansink\" title=\"Tests\">⚠️</a> <a href=\"https://github.com/kentcdodds/match-sorter/commits?author=mart-jansink\" title=\"Documentation\">📖</a></td>\n    <td align=\"center\"><a href=\"https://github.com/levenleven\"><img src=\"https://avatars.githubusercontent.com/u/6463364?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Aleksey Levenstein</b></sub></a><br /><a href=\"https://github.com/kentcdodds/match-sorter/commits?author=levenleven\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/diesieben07\"><img src=\"https://avatars.githubusercontent.com/u/1915984?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Take Weiland</b></sub></a><br /><a href=\"https://github.com/kentcdodds/match-sorter/commits?author=diesieben07\" title=\"Code\">💻</a></td>\n    <td align=\"center\"><a href=\"https://github.com/AmitAber\"><img src=\"https://avatars.githubusercontent.com/u/8988867?v=4?s=100\" width=\"100px;\" alt=\"\"/><br /><sub><b>Amit Abershitz</b></sub></a><br /><a href=\"https://github.com/kentcdodds/match-sorter/commits?author=AmitAber\" title=\"Documentation\">📖</a></td>\n  </tr>\n</table>\n\n<!-- markdownlint-restore -->\n<!-- prettier-ignore-end -->\n\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors][all-contributors] specification.\nContributions of any kind welcome!\n\n## LICENSE\n\nMIT\n\n<!-- prettier-ignore-start -->\n[npm]: https://www.npmjs.com\n[node]: https://nodejs.org\n[build-badge]: https://img.shields.io/github/workflow/status/kentcdodds/match-sorter/validate?logo=github&style=flat-square\n[build]: https://github.com/kentcdodds/match-sorter/actions?query=workflow%3Avalidate\n[coverage-badge]: https://img.shields.io/codecov/c/github/kentcdodds/match-sorter.svg?style=flat-square\n[coverage]: https://codecov.io/github/kentcdodds/match-sorter\n[version-badge]: https://img.shields.io/npm/v/match-sorter.svg?style=flat-square\n[package]: https://www.npmjs.com/package/match-sorter\n[downloads-badge]: https://img.shields.io/npm/dm/match-sorter.svg?style=flat-square\n[npmtrends]: https://www.npmtrends.com/match-sorter\n[license-badge]: https://img.shields.io/npm/l/match-sorter.svg?style=flat-square\n[license]: https://github.com/kentcdodds/match-sorter/blob/master/LICENSE\n[prs-badge]: https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square\n[prs]: http://makeapullrequest.com\n[coc-badge]: https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]: https://github.com/kentcdodds/match-sorter/blob/master/CODE_OF_CONDUCT.md\n[examples-badge]: https://img.shields.io/badge/%F0%9F%92%A1-examples-8C8E93.svg?style=flat-square\n[examples]: https://github.com/kentcdodds/match-sorter/blob/master/other/EXAMPLES.md\n[emojis]: https://github.com/all-contributors/all-contributors#emoji-key\n[all-contributors]: https://github.com/all-contributors/all-contributors\n[all-contributors-badge]: https://img.shields.io/github/all-contributors/kentcdodds/match-sorter?color=orange&style=flat-square\n[bugs]: https://github.com/kentcdodds/match-sorter/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+sort%3Acreated-desc+label%3Abug\n[requests]: https://github.com/kentcdodds/match-sorter/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+sort%3Areactions-%2B1-desc+label%3Aenhancement\n[good-first-issue]: https://github.com/kentcdodds/match-sorter/issues?utf8=%E2%9C%93&q=is%3Aissue+is%3Aopen+sort%3Areactions-%2B1-desc+label%3Aenhancement+label%3A%22good+first+issue%22\n\n[genie]: https://github.com/kentcdodds/genie\n<!-- prettier-ignore-end -->\n"
        },
        {
          "name": "other",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.5126953125,
          "content": "{\n  \"name\": \"match-sorter\",\n  \"version\": \"0.0.0-semantically-released\",\n  \"description\": \"Simple, expected, and deterministic best-match sorting of an array in JavaScript\",\n  \"main\": \"dist/match-sorter.cjs.js\",\n  \"module\": \"dist/match-sorter.esm.js\",\n  \"types\": \"dist/index.d.ts\",\n  \"scripts\": {\n    \"build\": \"kcd-scripts build --bundle --environment BUILD_NAME:matchSorter\",\n    \"lint\": \"kcd-scripts lint\",\n    \"setup\": \"npm install && npm run validate -s\",\n    \"test\": \"kcd-scripts test\",\n    \"typecheck\": \"kcd-scripts typecheck\",\n    \"test:update\": \"npm test -- --updateSnapshot --coverage\",\n    \"validate\": \"kcd-scripts validate\"\n  },\n  \"files\": [\n    \"dist\"\n  ],\n  \"keywords\": [\n    \"autocomplete\",\n    \"filter list\",\n    \"sort\",\n    \"advanced sort\",\n    \"user intuitive sort\"\n  ],\n  \"author\": \"Kent C. Dodds <me@kentcdodds.com> (https://kentcdodds.com)\",\n  \"license\": \"MIT\",\n  \"dependencies\": {\n    \"@babel/runtime\": \"^7.23.8\",\n    \"remove-accents\": \"0.5.0\"\n  },\n  \"devDependencies\": {\n    \"@types/jest\": \"^26.0.15\",\n    \"kcd-scripts\": \"^15\",\n    \"typescript\": \"^5.3\"\n  },\n  \"eslintConfig\": {\n    \"extends\": [\n      \"./node_modules/kcd-scripts/eslint.js\"\n    ],\n    \"rules\": {\n      \"prefer-object-has-own\": \"off\"\n    }\n  },\n  \"eslintIgnore\": [\n    \"node_modules\",\n    \"coverage\",\n    \"dist\"\n  ],\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"https://github.com/kentcdodds/match-sorter\"\n  },\n  \"bugs\": {\n    \"url\": \"https://github.com/kentcdodds/match-sorter/issues\"\n  },\n  \"homepage\": \"https://github.com/kentcdodds/match-sorter#readme\"\n}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "tsconfig.json",
          "type": "blob",
          "size": 0.1142578125,
          "content": "{\n  \"extends\": \"./node_modules/kcd-scripts/shared-tsconfig.json\",\n  \"compilerOptions\": {\n    \"lib\": [\"ESNext\"]\n  }\n}\n"
        }
      ]
    }
  ]
}