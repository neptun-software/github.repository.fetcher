{
  "metadata": {
    "timestamp": 1736564209601,
    "page": 791,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjgwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "headlamp-k8s/headlamp",
      "stars": 2636,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0625,
          "content": "**/node_modules\nbackend/tools/\ndocs/\n**/*.stories.*\n**/*.test.*\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.224609375,
          "content": "backend/headlamp-server\nbackend/headlamp-server.exe\nbackend/tools\nbackend/coverage.out\napp/electron/src/*\ndocs/development/storybook/\n.plugins\nnode_modules\n.idea/\nplugins/headlamp-plugin/headlamp-myfancy/\nplugins/examples/*/dist/\n"
        },
        {
          "name": "ADOPTERS.md",
          "type": "blob",
          "size": 2.7666015625,
          "content": "# Adopters\n\nThis page contains a non-comprehensive list of organizations using [Headlamp](https://headlamp.dev) as end users, or to build higher layer products and services, that we know of.\n\n## Adding your org to this list\n\nIf you would like your organization to be added to this list, please open a PR with your name, link, and a brief description of your use case.\n\n## Headlamp adopters (in alphabetical order):\n\n| Organization                                 | Description                                                                                                                                                                                                                                                                                                                                                       |\n|----------------------------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| [EPAM Systems, Inc.](https://epam.com/)      | EPAM leverages Headlamp for their [edp-headlamp](https://github.com/epam/edp-headlamp) project, integrating it within their [KubeRocketCI](https://docs.kuberocketci.io/) open-source solution to enhance the user interface and experience for managing Platform using Kubernetes-native approach.                                                               |\n| [Orange](https://www.orange.com/en) | Orange, a global telco operator, is using headlamp to offer a web UI for managing custom k8s resources, in particular developer-facing subscriptions of managed data services.                                                                                                                                                                                |\n| [Virginia Tech](https://vt.edu/)             | Virginia Tech deploys Headlamp as a UI for their [IT Common Platform](https://docs.platform.it.vt.edu/) service, running essential university functions and managing 6 clusters. They also develop a number of [Headlamp plugins](https://code.vt.edu/it-common-platform/platform-support/headlamp-plugins) to deliver extra functionality on top of the base UI. |\n| [WhizUs GmbH](https://www.whizus.com/)       | At WhizUs, we're always exploring and evaluating the latest Cloud Native technologies and projects. As part of our ongoing efforts to improve Kubernetes management, we've evaluated Headlamp and are now using it as our Kubernetes UI in selected customer projects.                                                                                            |\n"
        },
        {
          "name": "CODE_OF_CONDUCT.md",
          "type": "blob",
          "size": 0.1259765625,
          "content": "# Code of Conduct\n\nHeadlamp follows the [CNCF Code of Conduct](https://github.com/cncf/foundation/blob/main/code-of-conduct.md).\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 3.5927734375,
          "content": "# syntax=docker/dockerfile:1\n# Final container image\nARG IMAGE_BASE=alpine:3.20.3@sha256:beefdbd8a1da6d2915566fde36db9db0b524eb737fc57cd1367effd16dc0d06d\nFROM ${IMAGE_BASE} as image-base\n\nFROM --platform=${BUILDPLATFORM} golang:1.22@sha256:0ca97f4ab335f4b284a5b8190980c7cdc21d320d529f2b643e8a8733a69bfb6b as backend-build\n\nWORKDIR /headlamp\n\nARG TARGETOS\nARG TARGETARCH\nENV GOPATH=/go \\\n    GOPROXY=https://proxy.golang.org \\\n\tGO111MODULE=on\\\n\tCGO_ENABLED=0\\ \n\tGOOS=${TARGETOS}\\\n\tGOARCH=${TARGETARCH}\n\n# Keep go mod download separated so source changes don't trigger install\nCOPY ./backend/go.* /headlamp/backend/\nRUN --mount=type=cache,target=/go/pkg/mod \\\n    cd ./backend && go mod download\n\nCOPY ./backend /headlamp/backend\n\nRUN --mount=type=cache,target=/root/.cache/go-build \\\n    --mount=type=cache,target=/go/pkg/mod \\\n    cd ./backend && go build -o ./headlamp-server ./cmd/\n\nFROM --platform=${BUILDPLATFORM} node:18@sha256:d0bbfdbad0bff8253e6159dcbee42141db4fc309365d5b8bcfce46ed71569078 as frontend-build\n\n# We need .git and app/ in order to get the version and git version for the frontend/.env file\n# that's generated when building the frontend.\nCOPY .git/ ./headlamp/.git/\n\nCOPY app/package.json /headlamp/app/package.json\n\n# Keep npm install separated so source changes don't trigger install\nCOPY frontend/package*.json /headlamp/frontend/\nWORKDIR /headlamp\nRUN cd ./frontend && npm ci --only=prod\n\nFROM frontend-build as frontend\nCOPY ./frontend /headlamp/frontend\n\nWORKDIR /headlamp\n\nRUN cd ./frontend && npm run build\n\nRUN echo \"*** Built Headlamp with version: ***\"\nRUN cat ./frontend/.env\n\n# Backwards compatibility, move plugin folder to only copy matching plugins.\nRUN mv plugins plugins-old || true\n\n# Copy a .plugins folder if it is there to ./plugins, otherwise create an empty one.\n# This is a Dockerfile quirky way to copy a folder if it exists, but also not fail if it is empty.\nCOPY ./.plugi*s ./plugins\nRUN mkdir -p ./plugins\n\n# Backwards compatibility, copy any matching plugins found inside \"./plugins-old\" into \"./plugins\".\n# They should match plugins-old/MyFolder/main.js, otherwise they are not copied.\nRUN for i in $(find ./plugins-old/*/main.js); do plugin_name=$(echo $i|cut -d'/' -f3); mkdir -p plugins/$plugin_name; cp $i plugins/$plugin_name; done\nRUN for i in $(find ./plugins-old/*/package.json); do plugin_name=$(echo $i|cut -d'/' -f3); mkdir -p plugins/$plugin_name; cp $i plugins/$plugin_name; done\n\n# Static (officially shipped) plugins\nFROM --platform=${BUILDPLATFORM} frontend-build as static-plugins\nRUN apt-get update && apt-get install -y jq\nCOPY ./container/build-manifest.json ./container/fetch-plugins.sh /tools/\n\nWORKDIR /tools\nRUN mkdir -p /plugins\nRUN ./fetch-plugins.sh /plugins/\n\nFROM image-base as final\n\nRUN if command -v apt-get > /dev/null; then \\\n        apt-get update && apt-get install -y --no-install-recommends \\\n        ca-certificates \\\n        && addgroup --system headlamp \\\n        && adduser --system --ingroup headlamp headlamp \\\n        && rm -rf /var/lib/apt/lists/*; \\\n    else \\\n        addgroup -S headlamp && adduser -S headlamp -G headlamp; \\\n    fi\n\nCOPY --from=backend-build --link /headlamp/backend/headlamp-server /headlamp/headlamp-server\nCOPY --from=frontend --link /headlamp/frontend/build /headlamp/frontend\nCOPY --from=frontend --link /headlamp/plugins /headlamp/plugins\nCOPY --from=static-plugins --link /plugins /headlamp/static-plugins\n\nRUN chown -R headlamp:headlamp /headlamp\nUSER headlamp\n\nEXPOSE 4466\n\nENV HEADLAMP_STATIC_PLUGINS_DIR=/headlamp/static-plugins\nENTRYPOINT [\"/headlamp/headlamp-server\", \"-html-static-dir\", \"/headlamp/frontend\", \"-plugins-dir\", \"/headlamp/plugins\"]\n"
        },
        {
          "name": "Dockerfile.plugins",
          "type": "blob",
          "size": 1.501953125,
          "content": "# Build the plugin\nFROM node:22.9.0@sha256:69e667a79aa41ec0db50bc452a60e705ca16f35285eaf037ebe627a65a5cdf52 as builder\n\n# Set the working directory\nWORKDIR /headlamp-plugins\n\n# Copy the example plugins source code to the working directory\nCOPY ./plugins/examples /headlamp-plugins/\n\n# Copy the plugin source code to the working directory\nCOPY ./plugins/headlamp-plugin /headlamp-plugins/headlamp-plugin\n\n# Install dependencies.\n# We are doing so that we can use the local binary to build\n# the example plugin.\nRUN chmod +x /headlamp-plugins/headlamp-plugin/install-dependencies.sh && /headlamp-plugins/headlamp-plugin/install-dependencies.sh\n\n# Create a build directory\nRUN mkdir -p /headlamp-plugins/build\n\n# Build the example plugins (excluding headlamp-plugin)\nRUN find /headlamp-plugins -mindepth 1 -maxdepth 1 -type d ! -name \"headlamp-plugin\" -exec ./headlamp-plugin/bin/headlamp-plugin.js build {} \\;\n\n# Extract the built plugin files to the build directory (excluding headlamp-plugin)\nRUN find /headlamp-plugins -mindepth 1 -maxdepth 1 -type d ! -name \"headlamp-plugin\" -exec ./headlamp-plugin/bin/headlamp-plugin.js extract {} /headlamp-plugins/build \\;\n\n# Create the final image\nFROM alpine:3.20.3@sha256:beefdbd8a1da6d2915566fde36db9db0b524eb737fc57cd1367effd16dc0d06d\n\n# Copy the built plugin files from the first stage to /plugins directory\nCOPY --from=builder /headlamp-plugins/build/ /plugins/\n\n# Command to run when the container starts\nCMD [\"/bin/sh\", \"-c\", \"mkdir -p /build/plugins && cp -r /plugins/* /build/plugins/\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.091796875,
          "content": "\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MAINTAINERS.md",
          "type": "blob",
          "size": 0.326171875,
          "content": "# Maintainers\n\n* [Joaquim Rocha](https://github.com/joaquimrocha) (project lead)\n* [René Dudfield](https://github.com/illume)\n* [Ashu Ghildiyal](https://github.com/ashu8912)\n* [Santhosh Nagaraj](https://github.com/yolossn)\n* [Kautilya Tripathi](https://github.com/knrt10)\n* [Chris Kühl](https://github.com/blixtra) (project manager)"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 4.81640625,
          "content": "GO111MODULE=on\nexport GO111MODULE\n\nSERVER_EXE_EXT ?=\nDOCKER_CMD ?= docker\nDOCKER_REPO ?= ghcr.io/headlamp-k8s\nDOCKER_EXT_REPO ?= docker.io/headlamp\nDOCKER_IMAGE_NAME ?= headlamp\nDOCKER_PLUGINS_IMAGE_NAME ?= plugins\nDOCKER_IMAGE_VERSION ?= $(shell git describe --tags --always --dirty)\nDOCKER_PLATFORM ?= local\n\nifeq ($(OS), Windows_NT)\n\tSERVER_EXE_EXT = .exe\nendif\n\nifeq ($(OS), Windows_NT)\n\tUNIXSHELL = false\n\tifdef BASH_VERSION\n\t\tUNIXSHELL = true\n\tendif\n\tifdef BASH_VERSION\n\t\tUNIXSHELL = true\n\tendif\nelse\n\tUNIXSHELL = true\nendif\n\nall: backend frontend\n\ntools/golangci-lint: backend/go.mod backend/go.sum\n\tGOBIN=`pwd`/backend/tools go install github.com/golangci/golangci-lint/cmd/golangci-lint@v1.54\n\nbackend-lint: tools/golangci-lint\n\tcd backend && ./tools/golangci-lint run\n\nfrontend/build:\n\tmake frontend\n\n.PHONY: app\napp-build: frontend/build\n\tcd app && npm install && node ./scripts/setup-plugins.js && npm run build\napp: app-build\n\tcd app && npm run package -- --win --linux --mac\napp-win: app-build\n\tcd app && npm run package -- --win\napp-win-msi: app-build\n\tcd app && npm run package-msi\napp-linux: app-build\n\tcd app && npm run package -- --linux\napp-mac: app-build\n\tcd app && npm run package -- --mac\n\n.PHONY: backend\nbackend:\n\tcd backend && go build -o ./headlamp-server${SERVER_EXE_EXT} ./cmd\n\n.PHONY: backend-test\nbackend-test:\n\tcd backend && go test -v -p 1 ./...\n\n.PHONY: backend-coverage\nbackend-coverage:\n\tcd backend && go test -v -p 1 -coverprofile=coverage.out ./...\n\tcd backend && go tool cover -func=coverage.out\n\n.PHONY: backend-coverage-html\nbackend-coverage-html:\n\tcd backend && go test -v -p 1 -coverprofile=coverage.out ./...\n\tcd backend && go tool cover -html=coverage.out\n\n.PHONY: backend-format\nbackend-format:\n\tcd backend && go fmt ./cmd/ ./pkg/**\n\nfrontend-install:\n\tcd frontend && npm install\n\nfrontend-install-ci:\n\tcd frontend && npm ci\n\n.PHONY: frontend\nfrontend: frontend-install\n\tcd frontend && npm run build\n\n.PHONY: frontend-build\nfrontend-build:\n\tcd frontend && npm run build\n\n.PHONY: frontend-build-storybook\nfrontend-build-storybook:\n\tcd frontend && npm run build-storybook\n\n\nrun-backend:\n\t@echo \"**** Warning: Running with Helm and dynamic-clusters endpoints enabled. ****\"\n\nifeq ($(UNIXSHELL),true)\n\tHEADLAMP_BACKEND_TOKEN=headlamp HEADLAMP_CONFIG_ENABLE_HELM=true HEADLAMP_CONFIG_ENABLE_DYNAMIC_CLUSTERS=true ./backend/headlamp-server -dev -proxy-urls https://artifacthub.io/* -enable-dynamic-clusters\nelse\n\t@echo \"**** Running on Windows without bash or zsh. ****\"\n\t@cmd /c \"set HEADLAMP_BACKEND_TOKEN=headlamp&& set HEADLAMP_CONFIG_ENABLE_HELM=true&& set HEADLAMP_CONFIG_ENABLE_DYNAMIC_CLUSTERS=true&& backend\\headlamp-server -dev -proxy-urls https://artifacthub.io/*\" -enable-dynamic-clusters\nendif\n\nrun-frontend:\nifeq ($(UNIXSHELL),true)\n\tcd frontend && nice -16 npm start\nelse\n\tcd frontend && npm start\nendif\n\nfrontend-lint:\n\tcd frontend && npm run lint -- --max-warnings 0 && npm run format-check\n\nfrontend-fixlint:\n\tcd frontend && npm run lint -- --fix && npm run format\n\n.PHONY: frontend-tsc\nfrontend-tsc:\n\tcd frontend && npm run tsc\n\n.PHONY: frontend-i18n-check\nfrontend-i18n-check:\n\t@echo \"Checking translations. If this fails use: 'npm run i18n'\"\n\tcd frontend && npm run i18n -- --fail-on-update\n\nfrontend-test:\n\tcd frontend && npm run test -- --coverage\n\nplugins-test:\n\tcd plugins/headlamp-plugin && npm install && ./test-headlamp-plugin.js\n\tcd plugins/headlamp-plugin && ./test-plugins-examples.sh\n\tcd plugins/headlamp-plugin/plugin-management && node ./plugin-management.e2e.js\n\tcd plugins/headlamp-plugin/plugin-management && npx jest ./plugin-management.test.js\n\n# IMAGE_BASE can be used to specify a base final image.\n#   IMAGE_BASE=debian:latest make image\nimage:\n\t@if [ -n \"${IMAGE_BASE}\" ]; then \\\n\t\tBUILD_ARG=\"--build-arg IMAGE_BASE=${IMAGE_BASE}\"; \\\n\telse \\\n\t\tBUILD_ARG=\"\"; \\\n\tfi; \\\n\t$(DOCKER_CMD) buildx build \\\n\t--pull \\\n\t--platform=$(DOCKER_PLATFORM) \\\n\t$$BUILD_ARG \\\n\t-t $(DOCKER_REPO)/$(DOCKER_IMAGE_NAME):$(DOCKER_IMAGE_VERSION) -f \\\n\tDockerfile \\\n\t.\n\n.PHONY: build-plugins-container\nbuild-plugins-container:\n\t$(DOCKER_CMD) buildx build \\\n\t--pull \\\n\t--platform=linux/amd64 \\\n\t-t $(DOCKER_REPO)/$(DOCKER_PLUGINS_IMAGE_NAME):$(DOCKER_IMAGE_VERSION) -f \\\n\tDockerfile.plugins \\\n\t.\n\ndocker-ext:\n\t$(eval LATEST_TAG=$(shell git tag --list --sort=version:refname 'v*' | tail -1 | sed 's/^.//'))\n\t$(DOCKER_CMD) buildx build \\\n\t--platform=linux/amd64,linux/arm64 \\\n\t--push \\\n\t-t $(DOCKER_EXT_REPO)/$(DOCKER_IMAGE_NAME)-docker-extension:${LATEST_TAG} \\\n\t-t $(DOCKER_EXT_REPO)/$(DOCKER_IMAGE_NAME)-docker-extension:latest -f \\\n\t./docker-extension/Dockerfile \\\n\t./docker-extension\n\n.PHONY: docs\ndocs:\n\tcd frontend && npm install && npm run build-typedoc\n\n.PHONY: storybook\nstorybook:\n\tcd frontend && npm install && npm run storybook\n\ni18n:\n\tcd app && npm run i18n\n\tcd frontend && npm run i18n\n\n.PHONY: helm-template-test\nhelm-template-test:\n\tcharts/headlamp/tests/test.sh\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.6435546875,
          "content": "<h1>\n  <picture>\n    <source media=\"(prefers-color-scheme: dark)\" srcset=\"frontend/src/resources/logo-light.svg\">\n    <img src=\"frontend/src/resources/logo-dark.svg\" alt=\"Headlamp\">\n  </picture>\n</h1>\n\n[![OpenSSF Best Practices](https://www.bestpractices.dev/projects/7551/badge)](https://www.bestpractices.dev/projects/7551)\n[![OpenSSF Scorecard](https://api.scorecard.dev/projects/github.com/headlamp-k8s/headlamp/badge)](https://scorecard.dev/viewer/?uri=github.com/headlamp-k8s/headlamp)\n[![FOSSA Status](https://app.fossa.com/api/projects/git%2Bgithub.com%2Fheadlamp-k8s%2Fheadlamp.svg?type=shield)](https://app.fossa.com/projects/git%2Bgithub.com%2Fheadlamp-k8s%2Fheadlamp?ref=badge_shield)\n\nHeadlamp is an easy-to-use and extensible Kubernetes web UI.\n\nHeadlamp was created to blend the traditional feature set of other web UIs/dashboards\n(i.e., to list and view resources) with added functionality.\n\n<div align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/headlamp-k8s/headlamp/screenshots/videos/headlamp_quick_run.gif\" width=\"80%\">\n</div>\n\n## Features\n\n- Vendor-independent / generic Kubernetes UI\n- Works in-cluster, or locally as a desktop app\n- Multi-cluster\n- Extensible through plugins\n- UI controls reflecting user roles (no deletion/update if not allowed)\n- Clean & modern UI\n- Cancellable creation/update/deletion operations\n- Logs, exec, and resource editor with documentation\n- Read-write / interactive (actions based on permissions)\n\n## Screenshots\n\n<table>\n    <tr>\n        <td width=\"33%\"><img src=\"https://raw.githubusercontent.com/headlamp-k8s/headlamp/screenshots/screenshots/home.png\"></td>\n        <td width=\"33%\"><img src=\"https://raw.githubusercontent.com/headlamp-k8s/headlamp/screenshots/screenshots/cluster_chooser.png\"></td>\n    </tr>\n    <tr>\n        <td width=\"33%\"><img src=\"https://raw.githubusercontent.com/headlamp-k8s/headlamp/screenshots/screenshots/workloads.png\"></td>\n        <td width=\"33%\"><img src=\"https://raw.githubusercontent.com/headlamp-k8s/headlamp/screenshots/screenshots/resource_edition.png\"></td>\n    </tr>\n    <tr>\n        <td width=\"33%\"><img src=\"https://raw.githubusercontent.com/headlamp-k8s/headlamp/screenshots/screenshots/logs.png\"></td>\n        <td width=\"33%\"><img src=\"https://raw.githubusercontent.com/headlamp-k8s/headlamp/screenshots/screenshots/terminal.png\"></td>\n    </tr>\n</table>\n\n## Quickstart\n\nIf you want to deploy Headlamp in your cluster, check out the instructions on running it [in-cluster](https://headlamp.dev/docs/latest/installation/in-cluster/).\n\nIf you have a kubeconfig already, you can quickly try Headlamp locally as a\n[desktop application](https://headlamp.dev/docs/latest/installation/desktop/)\nfor [Linux](https://headlamp.dev/docs/latest/installation/desktop/linux-installation),\n[Mac](https://headlamp.dev/docs/latest/installation/desktop/mac-installation),\nor [Windows](https://headlamp.dev/docs/latest/installation/desktop/win-installation).\n**Make sure** you have a kubeconfig file set up with your favorite clusters and\nin the default path so Headlamp can use it.\n\n### Accessing\n\nHeadlamp uses [RBAC](https://kubernetes.io/docs/reference/access-authn-authz/rbac) for checking\nusers' access to resources. If you try Headlamp with a token that has very limited\npermissions, you may not be able to view your cluster resources correctly.\n\nSee the documentation on [how to easily get a Service Account token](https://headlamp.dev/docs/latest/installation#create-a-service-account-token) for your cluster.\n\n## Tested platforms\n\nWe maintain a list of the [Kubernetes platforms](./docs/platforms.md) we have\ntested Headlamp with. We invite you to add any missing platforms you have\ntested, or comment if there are any regressions in the existing ones.\n\n## Extensions / Plugins\n\nIf you are interested in tweaking Headlamp to fit your use-cases, you can check out\nour [plugin development guide](https://headlamp.dev/docs/latest/development/plugins/).\n\n## Get involved\n\nCheck out our [guidelines](https://headlamp.dev/docs/latest/contributing/), including our [Code of Conduct](./CODE_OF_CONDUCT.md),\nand join the discussion on the\n[#headlamp](https://kubernetes.slack.com/messages/headlamp) channel\nin the Kubernetes Slack.\n\n## Roadmap / Release Planning\n\nIf you are interested in the direction of the project, we maintain a\n[Roadmap](https://github.com/orgs/headlamp-k8s/projects/1/views/1). It has the\nbiggest changes planned so far, as well as a [board](https://github.com/orgs/headlamp-k8s/projects/1/) tracking each release.\n\n## License\n\nHeadlamp is released under the terms of the [Apache 2.0](./LICENSE) license.\n\n## Frequently Asked Questions\n\nFor more information about Headlamp, see the [Headlamp FAQ](https://headlamp.dev/docs/latest/faq/).\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.1748046875,
          "content": "# Security Policy\n\n## Reporting a Vulnerability\n\nPlease read our documentation on how to [report security issues](https://headlamp.dev/docs/latest/contributing/#security-issues).\n"
        },
        {
          "name": "app",
          "type": "tree",
          "content": null
        },
        {
          "name": "backend",
          "type": "tree",
          "content": null
        },
        {
          "name": "charts",
          "type": "tree",
          "content": null
        },
        {
          "name": "container",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-extension",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "e2e-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "eslint-config",
          "type": "tree",
          "content": null
        },
        {
          "name": "frontend",
          "type": "tree",
          "content": null
        },
        {
          "name": "kubernetes-headlamp-ingress-sample.yaml",
          "type": "blob",
          "size": 0.5146484375,
          "content": "kind: Ingress\napiVersion: networking.k8s.io/v1\nmetadata:\n  name: headlamp\n  namespace: kube-system\n  annotations:\n    kubernetes.io/tls-acme: \"true\"\n    cert-manager.io/cluster-issuer: \"letsencrypt-production\"\n    kubernetes.io/ingress.class: contour\nspec:\n  tls:\n  - secretName: headlamp\n    hosts:\n    - __URL__\n  rules:\n  - host: __URL__\n    http:\n      paths:\n      - path: /\n        pathType: ImplementationSpecific\n        backend:\n          service:\n            name: headlamp\n            port:\n              number: 80\n"
        },
        {
          "name": "kubernetes-headlamp.yaml",
          "type": "blob",
          "size": 1.0390625,
          "content": "kind: Service\napiVersion: v1\nmetadata:\n  name: headlamp\n  namespace: kube-system\nspec:\n  ports:\n    - port: 80\n      targetPort: 4466\n  selector:\n    k8s-app: headlamp\n---\nkind: Deployment\napiVersion: apps/v1\nmetadata:\n  name: headlamp\n  namespace: kube-system\nspec:\n  replicas: 1\n  selector:\n    matchLabels:\n      k8s-app: headlamp\n  template:\n    metadata:\n      labels:\n        k8s-app: headlamp\n    spec:\n      containers:\n      - name: headlamp\n        image: ghcr.io/headlamp-k8s/headlamp:latest\n        args:\n          - \"-in-cluster\"\n          - \"-plugins-dir=/headlamp/plugins\"\n        ports:\n        - containerPort: 4466\n        livenessProbe:\n          httpGet:\n            scheme: HTTP\n            path: /\n            port: 4466\n          initialDelaySeconds: 30\n          timeoutSeconds: 30\n      nodeSelector:\n        'kubernetes.io/os': linux\n---\nkind: Secret\napiVersion: v1\nmetadata:\n  name: headlamp-admin\n  namespace: kube-system\n  annotations:\n    kubernetes.io/service-account.name: \"headlamp-admin\"\ntype: kubernetes.io/service-account-token\n"
        },
        {
          "name": "load-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}