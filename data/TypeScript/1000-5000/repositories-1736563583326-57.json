{
  "metadata": {
    "timestamp": 1736563583326,
    "page": 57,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "derbyjs/derby",
      "stars": 4717,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".eslintrc",
          "type": "blob",
          "size": 2.0439453125,
          "content": "{\n  \"env\": {\n    \"node\": true,\n    \"es6\": true\n  },\n  \"parserOptions\": {\n    \"ecmaVersion\": 9\n  },\n  \"globals\": {\n    \"window\": false,\n    \"document\": false\n  },\n  \"root\": true,\n  \"ignorePatterns\": [\"dist/\"],\n  \"rules\": {\n    \"comma-style\": [\n      2,\n      \"last\"\n    ],\n    \"eqeqeq\": [\"error\", \"always\", {\"null\": \"ignore\"}],\n    \"indent\": [\n      2,\n      2,\n      {\n        \"SwitchCase\": 1\n      }\n    ],\n    \"new-cap\": 2,\n    \"quotes\": [\n      2,\n      \"single\"\n    ],\n    \"no-undef\": 2,\n    \"no-shadow\": 0,\n    \"no-unused-expressions\": 2,\n    \"no-cond-assign\": [\n      2,\n      \"except-parens\"\n    ],\n    \"no-unused-vars\": [\"off\", { \"argsIgnorePattern\": \"^_\" }],\n    \"@typescript-eslint/no-unused-vars\": [\"error\", { \"argsIgnorePattern\": \"^_\" }]\n  },\n  \"overrides\": [\n    {\n      // Files that are only run in Node can use more modern ES syntax.\n      \"files\": [\"**/*ForServer.js\", \"test/**/*.mocha.js\"],\n      \"parserOptions\": {\n        // Node 16 LTS supports up through ES2021.\n        \"ecmaVersion\": 2021\n      }\n    },\n    {\n      \"files\": [\"test/**/*.js\"],\n      \"env\": {\"mocha\": true, \"node\": true}\n    },\n    {\n      \"files\": [\"src/**/*.ts\"],\n      \"parser\": \"@typescript-eslint/parser\",\n      \"plugins\": [\"@typescript-eslint\", \"prettier\", \"import\"],\n      \"extends\": [\n        \"eslint:recommended\",\n        \"plugin:@typescript-eslint/eslint-recommended\",\n        \"plugin:@typescript-eslint/recommended\",\n        \"plugin:import/recommended\",\n        \"plugin:import/typescript\"\n      ],\n      \"rules\": {\n        \"@typescript-eslint/no-explicit-any\": [\"warn\", { \"ignoreRestArgs\": false }],\n        \"import/no-unresolved\": \"error\",\n        \"import/order\": [\n          \"error\",\n          {\n            \"groups\": [\n              \"builtin\",\n              \"external\",\n              \"internal\",\n              [\"sibling\", \"parent\"],\n              \"index\",\n              \"unknown\"\n            ],\n            \"newlines-between\": \"always\",\n            \"alphabetize\": {\n              \"order\": \"asc\",\n              \"caseInsensitive\": true\n            }\n          }\n        ]\n      }\n    }\n  ]\n}\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0419921875,
          "content": ".DS_Store\n*.swp\nnode_modules\n.vscode\ndist/\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.2685546875,
          "content": "- repo: git://github.com/pre-commit/mirrors-jshint\n  sha: 'v2.5.11'\n  hooks:\n  - id: jshint\n- repo: git://github.com/pre-commit/pre-commit-hooks\n  sha: 'v0.4.0'\n  hooks:\n  - id: check-added-large-files\n  - id: check-json\n  - id: end-of-file-fixer\n  - id: trailing-whitespace\n"
        },
        {
          "name": "History.md",
          "type": "blob",
          "size": 5.34765625,
          "content": "# Derby change history\n\nRacer provides the model and data synchronization for Derby. It's versions are updated along with Derby versions. See change history for Racer as well:\nhttps://github.com/derbyjs/racer/blob/master/History.md\n\n## 0.3.14\nThis release includes a great deal of work making components and templating more full featured and performant\n\n- Instead of macro template tags with triple curly braces, such as {{{items}}}, attributes passed to components are now accessed with an @ sign, such as {{@items}} or {@items}\n- <derby:view view=\"example\"> syntax is now supported for including components with a variable name. This is equivalent to <app:example>, but the view attribute can vary based on context\n- Components can be passed an `inherit` attribute to default to the attributes from the parent\n- View#fn syntax has changed to support more arbitrary inputs and outputs. See the docs for more detail\n- Instead of view.dom, it is now app.view, app.dom, app.history, and app.model in the client\n- Add View#componentsByName\n- Bindings don't update during route execution for faster page renders\n- Initial support for bindings within inline SVG elements\n- Components have a 'destroy' event that gets invoked when they are no longer in the DOM\n- Components automatically cleanup listeners added via dom.addListener and model.on within a component\n- App#fn can be used to add controller methods to the app more easily across different files\n- App auto-reloading no longer uses Up, which didn't work well with polling. Reloading now uses cluster, though it is still somewhat buggy\n- App#enter and App#exit added, which get called upon entering or exiting a particular route pattern. Can be used intead of App#ready, which only gets called on the very first page load\n- Add Component#setup for more easy access to the library within a given components code. Useful for adding view functions pertaining to a particular component\n- App#Collection added for more convenient access to scoped models in controller functions and definition of collection specific methods. Demonstrated in the leaderboard code of the Sink example.\n- e.path(), e.get(), and e.at() now available for using template-style path names in controller code. Often more flexible and convenient than using model.at(el)\n- Many bug fixes\n\n## 0.3.13\nMostly just bug fixes\n\n- Add Component#emitDelayable()\n- Fix options specification to be more consistent\n- Add staticMount option\n- Lots of bug fixes\n\n## 0.3.12\nThe API for creating stores and sessions has changed in support of adding auth. Generating a new starter server via `derby new` is recommended\n\n- There is no longer an app.createStore() method, and the derby.createStore() method must be used in combination with the store.modelMiddleware(). There is now a req.getModel() method added by the modelMiddleware.\n- Bugs in bracketed path interpolation in templates have been fixed, and the syntax has been updated to work more like javascript property accessors. The syntax is now `<h1>{users[_userId].name}</h1>`\n- The component type is now passed as a second argument to init and create events instead of being available as a property of the component. Within the same library, the namespaces is now correctly sent as 'lib:'\n- Add `log` and `path` view helper functions for debugging\n- Support binding the same event to multiple space-separated function names in `x-bind`\n- Set the value of component macro attributes to true when no value is specified for more easy HTML boolean style flags\n- Fix a bug where using multiple apps would cause the page to reload continuously\n- Default project now requires Express beta 4, since beta 6 breaks Gzippo\n- Fix lots of other bugs\n\n## 0.3.11\n- Emit 'render', 'render:{ns}', 'replace', and 'replace:{ns}' events on an app when the page is rendered client-side\n- Call x-bind functions with `this` set to the app or component object\n- Support prototype-like definition of component methods for more efficient creation of component instances\n- More careful delaying of component creation method calls instead of using setTimeout\n- Fix bug in lookup of templates from an inherited namespace\n- Fix bug when binding to a view helper function inside of an each and later updating array indicies\n- Fix bugs in component path binding lookup\n\n## 0.3.10\n- Fix bugs with Browserify 1.13.0 and Express 3.0.0 beta 3\n- Fix bugs in components\n- Can pass JSON object literals to component attributes\n- Fix bug with Safari binding to comment markers\n\n## 0.3.9\n- Set the 'this' context of the ready callback to the app\n- Add model and params as a property of Page objects passed to routes\n- Use chokidar instead of fs.watch\n\n## 0.3.8\n- Create a component librarary by default in the generated app\n- Fix Windows bugs. Windows should now work\n- Improvements to file watch reliability in development\n- Fix bugs parsing template files and comments\n\n## 0.3.7\n- Make apps and components into event emitters\n- Fix bugs with creating components\n- Emit 'create:child', 'create:descendant', 'create:{name}' events for components\n- Support passing function names to x-bind via macro template tags\n- Fix lots of bugs in components\n\n## 0.3.6\n- Start to implement components that have associated script files\n- Refactoring\n\n## 0.3.5\n- Fix bug introduced in 0.3.4\n\n## 0.3.4\n- Bug fixes with macro tags\n\n## 0.3.3\n- Convert to JS\n- Refactor into separate npm modules for routing (tracks), HTML utilities (html-util), and DOM fixes (dom-shim)\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.521484375,
          "content": "![Test](https://github.com/derbyjs/derby/workflows/Test/badge.svg)\n\n# Derby\n\nThe Derby MVC framework makes it easy to write realtime, collaborative applications that run in both Node.js and browsers.\n\nDerby includes a powerful data synchronization engine called Racer that automatically syncs data among browsers, servers, and a database. Models subscribe to changes on specific objects, enabling granular control of data propagation without defining channels. Racer supports offline usage and conflict resolution out of the box, which greatly simplifies writing multi-user applications.\n\nDerby applications load immediately and can be indexed by search engines, because the same templates render on both server and client. In addition, templates define bindings, which instantly update the view when the model changes and vice versa. Derby makes it simple to write applications that load as fast as a search engine, are as interactive as a document editor, and work offline.\n\nSee docs here: **https://derbyjs.github.io/derby/**\n\nMain site: **https://derbyjs.com/**\n\nExamples here: **https://github.com/derbyjs/derby-examples**\n\n## Running Tests\n\nRun unit tests:\n\n```\nnpm test\n```\n\nRun browser tests:\n\n> This will prompt to open a browser to run front-end tests\n\n```\nnpm run test-browser\n```\n\n## Getting in touch\n\nCreate an [issue](https://github.com/derbyjs/derby/issues) or reach out to the derbyjs [team](https://github.com/orgs/derbyjs/people).\n\nFurther resources: **https://derbyjs.com/resources**\n\n## MIT License\n\nCopyright (c) 2011-2021 by Nate Smith\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 3.033203125,
          "content": "{\n  \"name\": \"derby\",\n  \"description\": \"MVC framework making it easy to write realtime, collaborative applications that run in both Node.js and browsers.\",\n  \"version\": \"4.2.3\",\n  \"homepage\": \"http://derbyjs.com/\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git://github.com/derbyjs/derby.git\"\n  },\n  \"publishConfig\": {\n    \"access\": \"public\"\n  },\n  \"main\": \"dist/index.js\",\n  \"exports\": {\n    \".\": \"./dist/index.js\",\n    \"./components\": \"./dist/components.js\",\n    \"./dist/components\": \"./dist/components.js\",\n    \"./parsing\": \"./dist/parsing/index.js\",\n    \"./dist/parsing\": \"./dist/parsing/index.js\",\n    \"./templates\": \"./dist/templates/index.js\",\n    \"./dist/templates\": \"./dist/templates/index.js\",\n    \"./App\": \"./dist/App.js\",\n    \"./AppForServer\": \"./dist/AppForServer.js\",\n    \"./server\": \"./dist/server.js\",\n    \"./dist/server\": \"./dist/server.js\",\n    \"./Page\": \"./dist/Page.js\",\n    \"./test-utils\": \"./dist/test-utils/index.js\",\n    \"./test-utils/*\": \"./dist/test-utils/*.js\",\n    \"./dist/test-utils\": \"./dist/test-utils/index.js\",\n    \"./dist/test-utils/*\": \"./dist/test-utils/*.js\",\n    \"./file-utils\": \"./dist/files.js\"\n  },\n  \"files\": [\n    \"dist/\",\n    \"test-utils/\"\n  ],\n  \"scripts\": {\n    \"build\": \"node_modules/.bin/tsc\",\n    \"checks\": \"npm run lint && npm test\",\n    \"docs\": \"npx typedoc\",\n    \"lint\": \"npx eslint src/**/*.ts test/**/*.js\",\n    \"lint:ts\": \"npx eslint src/**/*.ts\",\n    \"lint:fix\": \"npm run lint:ts -- --fix\",\n    \"prepare\": \"npm run build\",\n    \"test\": \"npx mocha -r ts-node/register 'test/all/**/*.mocha.*' 'test/dom/**/*.mocha.*' 'test/server/**/*.mocha.*'\",\n    \"test-browser\": \"node test/server.js\"\n  },\n  \"dependencies\": {\n    \"chokidar\": \"^3.5.3\",\n    \"esprima-derby\": \"^0.1.0\",\n    \"html-util\": \"^0.2.3\",\n    \"qs\": \"^6.11.0\",\n    \"resolve\": \"^1.22.1\",\n    \"serialize-object\": \"^1.0.0\",\n    \"tracks\": \"^0.5.8\"\n  },\n  \"devDependencies\": {\n    \"@types/chai\": \"^4.3.11\",\n    \"@types/esprima-derby\": \"npm:@types/esprima@^4.0.3\",\n    \"@types/estree\": \"^1.0.1\",\n    \"@types/express\": \"^4.17.18\",\n    \"@types/mocha\": \"^10.0.6\",\n    \"@types/node\": \"^20.3.1\",\n    \"@types/qs\": \"^6.9.11\",\n    \"@types/resolve\": \"^1.20.6\",\n    \"@types/sharedb\": \"^3.3.10\",\n    \"@typescript-eslint/eslint-plugin\": \"^6.2.1\",\n    \"@typescript-eslint/parser\": \"^6.2.1\",\n    \"async\": \"^3.2.4\",\n    \"browserify\": \"^17.0.0\",\n    \"chai\": \"^4.3.6\",\n    \"eslint\": \"^8.37.0\",\n    \"eslint-config-prettier\": \"^9.0.0\",\n    \"eslint-plugin-import\": \"^2.28.0\",\n    \"eslint-plugin-prettier\": \"^5.0.0\",\n    \"express\": \"^4.18.1\",\n    \"jsdom\": \"^20.0.1\",\n    \"mocha\": \"^10.0.0\",\n    \"prettier\": \"^3.0.1\",\n    \"racer\": \"^v2.0.0-beta.11\",\n    \"sinon\": \"^18.0.0\",\n    \"ts-node\": \"^10.9.2\",\n    \"typedoc\": \"^0.25.13\",\n    \"typedoc-plugin-mdn-links\": \"^3.1.28\",\n    \"typedoc-plugin-missing-exports\": \"^2.2.0\",\n    \"typescript\": \"~5.1.3\"\n  },\n  \"peerDependencies\": {\n    \"racer\": \"^v2.0.0-beta.8\"\n  },\n  \"optionalDependencies\": {},\n  \"bugs\": {\n    \"url\": \"https://github.com/derbyjs/derby/issues\"\n  },\n  \"directories\": {\n    \"doc\": \"docs\",\n    \"test\": \"test\"\n  },\n  \"author\": \"Nate Smith\",\n  \"license\": \"MIT\"\n}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tsconfig.json",
          "type": "blob",
          "size": 0.310546875,
          "content": "{\n  \"compilerOptions\": {\n    \"allowJs\": true,\n    \"ignoreDeprecations\": \"5.0\",\n    \"lib\":[\"DOM\"],\n    \"module\": \"CommonJS\",\n    \"noImplicitUseStrict\": true,\n    \"outDir\": \"dist\",\n    \"target\": \"ES5\",\n    \"sourceMap\": false,\n    \"declaration\": true,\n    \"declarationMap\": false\n  },\n  \"include\": [\n    \"src/**/*\"\n  ]\n}\n"
        },
        {
          "name": "typedoc.json",
          "type": "blob",
          "size": 0.3916015625,
          "content": "{\n    \"entryPoints\": [\"src/index.ts\"],\n    \"excludeNotDocumented\": false,\n    \"plugin\":[\n      \"typedoc-plugin-mdn-links\",\n      \"typedoc-plugin-missing-exports\",\n      \"./typedocExcludeUnderscore.mjs\"\n    ],\n    \"out\": \"docs/_site/api\",\n    \"visibilityFilters\": {\n      \"protected\": false,\n      \"private\": false,\n      \"inherited\": true,\n      \"external\": false\n    },\n    \"excludePrivate\": true\n  }"
        },
        {
          "name": "typedocExcludeUnderscore.mjs",
          "type": "blob",
          "size": 1.0654296875,
          "content": "import { Converter, ReflectionFlag, ReflectionKind } from \"typedoc\";\nimport camelCase from \"camelcase\";\n\n/**\n * @param {Readonly<import('typedoc').Application>} app\n */\nexport function load(app) {\n  /**\n   * Create declaration event handler that sets symbols with underscore-prefixed names\n   * to private to exclude from generated documentation.\n   *\n   * Due to \"partial class\" style of code in use, otherwise private properties and methods -\n   * prefixed with underscore - are effectively declared public so they can be accessed in other\n   * files used to build class - e.g. Model. This marks anything prefixed with an underscore and\n   * no doc comment as private.\n   *\n   * @param {import('typedoc').Context} context\n   * @param {import('typedoc').DeclarationReflection} reflection\n   */\n  function handleCreateDeclaration(context, reflection) {\n    if (!reflection.name.startsWith('_')) {\n      return;\n    }\n    if (!reflection.comment) {\n      reflection.setFlag(ReflectionFlag.Private);\n    }\n  }\n\n  app.converter.on(Converter.EVENT_CREATE_DECLARATION, handleCreateDeclaration);\n}"
        }
      ]
    }
  ]
}