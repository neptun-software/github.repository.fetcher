{
  "metadata": {
    "timestamp": 1736563634117,
    "page": 116,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEyMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "koush/scrypted",
      "stars": 4469,
      "defaultBranch": "main",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.0546875,
          "content": "**/node_modules\n**/scrypted.db\nplugins\ndocs\ncli\n.github\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.0322265625,
          "content": ".DS_Store\n__pycache__\nvenv\n.venv\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 0.8056640625,
          "content": "[submodule \"plugins/unifi-protect/src/unifi-protect\"]\n\tpath = external/unifi-protect\n\turl = ../../koush/unifi-protect.git\n[submodule \"external/ring-client-api\"]\n\tpath = external/ring-client-api\n\turl = ../../koush/ring\n\tbranch = fork\n[submodule \"plugins/vscode-typescript\"]\n\tpath = plugins/vscode-typescript\n\turl = ../../koush/scrypted-vscode-typescript/\n[submodule \"external/werift\"]\n\tpath = external/werift\n\turl = ../../koush/werift-webrtc\n[submodule \"plugins/sample-cameraprovider\"]\n\tpath = plugins/sample-cameraprovider\n\turl = ../../koush/scrypted-sample-cameraprovider\n[submodule \"plugins/cloud/node-nat-upnp\"]\n\tpath = plugins/cloud/external/node-nat-upnp\n\turl = ../../koush/node-nat-upnp.git\n[submodule \"plugins/wyze/docker-wyze-bridge\"]\n\tpath = plugins/wyze/docker-wyze-bridge\n\turl = ../../koush/docker-wyze-bridge.git\n"
        },
        {
          "name": "LICENSE.md",
          "type": "blob",
          "size": 0.1640625,
          "content": "# License\n\nSee individual project directories for licensing, as it will vary throughout the repository. Some plugins may have dependencies that require GPL compliance.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.1416015625,
          "content": "# Scrypted\n\nScrypted is a high performance home video integration platform and NVR with smart detections. [Instant, low latency, streaming](https://streamable.com/xbxn7z) to HomeKit, Google Home, and Alexa. Supports most cameras. [Learn more](https://docs.scrypted.app).\n\n<img src=\"https://github.com/koush/scrypted/assets/73924/57e1d556-cd3d-4448-81f9-a6c51b6513de\">\n\n## Installation and Documentation\n\nInstallation and camera onboarding instructions can be found in the [docs](https://docs.scrypted.app).\n\n## Community\n\nScrypted has active communities on [Discord](https://discord.gg/DcFzmBHYGq), [Reddit](https://reddit.com/r/scrypted), and [Github](https://github.com/koush/scrypted). Check them out if you have questions!\n\n## Development\n\n## Debug Scrypted Plugins in VS Code\n\n```sh\n# this is an example for homekit.\n# check out the code\ngit clone https://github.com/koush/scrypted\ncd scrypted\n# get the dependencies for the server and various plugins\n./npm-install.sh\n# open the homekit project in VS Code\ncode plugins/homekit\n```\n\nYou can now launch (using the Start Debugging play button) the HomeKit Plugin in VS Code. Please be aware that you do *not* need to restart the Scrypted Server if you make changes to a plugin. Edit the plugin, launch, and the updated plugin will deploy on the running server.\n\nIf you do not want to set up VS Code, you can also run build and install the plugin directly from the command line:\n\n```sh\n# currently in the plugins/homekit directory.\nnpm run build && npm run scrypted-deploy 127.0.0.1\n```\n\n### Plugin SDK Documentation\n\nWant to write your own plugin? Full documentation is available here: https://developer.scrypted.app\n\n\n## Debug the Scrypted Server in VS Code\n\nDebugging the server should not be necessary, as the server only provides the hosting and RPC mechanism for plugins. The following is for reference purpose. Most development can be done by debugging the relevant plugin.\n\n```sh\n# check out the code\ngit clone https://github.com/koush/scrypted\ncd scrypted\n# get the dependencies for the server and various plugins\n./npm-install.sh\n# open server project in VS Code\ncode server\n```\n\nYou can now launch the Scrypted Server in VS Code.\n"
        },
        {
          "name": "common",
          "type": "tree",
          "content": null
        },
        {
          "name": "external",
          "type": "tree",
          "content": null
        },
        {
          "name": "install",
          "type": "tree",
          "content": null
        },
        {
          "name": "npm-install.sh",
          "type": "blob",
          "size": 0.705078125,
          "content": "#!/bin/bash\necho ######################################\necho \"Setting up popular plugins.\"\necho \"Additional will need npm install manually.\"\necho ######################################\n\ncd $(dirname $0)\n\ngit submodule init\ngit submodule update\n\nfor directory in sdk server common packages/client packages/auth-fetch\ndo\n    echo \"$directory > npm install\"\n    pushd $directory\n    npm install\n    popd\ndone\n\npushd sdk\necho \"sdk > npm run build\"\nnpm run build\npopd\n\npushd external/werift\necho \"external/werift > npm install\"\nnpm install\npopd\n\nfor directory in rtsp amcrest onvif hikvision reolink unifi-protect webrtc homekit\ndo\n    echo \"$directory > npm install\"\n    pushd plugins/$directory\n    npm install\n    popd\ndone\n"
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "plugins",
          "type": "tree",
          "content": null
        },
        {
          "name": "repository.yaml",
          "type": "blob",
          "size": 0.0908203125,
          "content": "name: Scrypted Home Assistant Addon\nurl: https://github.com/koush/scrypted\nmaintainer: koush\n"
        },
        {
          "name": "sdk",
          "type": "tree",
          "content": null
        },
        {
          "name": "server",
          "type": "tree",
          "content": null
        },
        {
          "name": "sites",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}