{
  "metadata": {
    "timestamp": 1736563614816,
    "page": 94,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjEwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "grpc/grpc-node",
      "stars": 4539,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.1103515625,
          "content": "root = true\n[**]\nend_of_line = LF\nindent_style = space\nindent_size = 2\ninsert_final_newline = true\ntab_width = 8\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.115234375,
          "content": "packages/grpc-js-xds/src/generated/** linguist-generated\npackages/grpc-js-xds/interop/generated/** linguist-generated\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.2587890625,
          "content": ".DS_Store\n.vscode\nbuild/\nnode_modules/\nnpm-debug.log\nyarn-error.log\nyarn.lock\nartifacts\n\n# Emacs temp files\n*~\n\\#*\\#\n.\\#*\n\n.nyc_output/\nreports/\n\npackage-lock.json\npnpm-lock.yaml\n\n# Test generated files\ncoverage\n\n# Node's bash completion file\n.node_bash_completion\n"
        },
        {
          "name": ".gitmodules",
          "type": "blob",
          "size": 1.0224609375,
          "content": "[submodule \"packages/grpc-tools/deps/protobuf\"]\n\tpath = packages/grpc-tools/deps/protobuf\n\turl = https://github.com/protocolbuffers/protobuf\n[submodule \"packages/proto-loader/deps/gapic-showcase\"]\n\tpath = packages/proto-loader/deps/gapic-showcase\n\turl = https://github.com/googleapis/gapic-showcase.git\n[submodule \"packages/proto-loader/deps/googleapis\"]\n\tpath = packages/proto-loader/deps/googleapis\n\turl = https://github.com/googleapis/googleapis.git\n[submodule \"packages/grpc-js-xds/deps/envoy-api\"]\n\tpath = packages/grpc-js-xds/deps/envoy-api\n\turl = https://github.com/envoyproxy/data-plane-api.git\n[submodule \"packages/grpc-js-xds/deps/googleapis\"]\n\tpath = packages/grpc-js-xds/deps/googleapis\n\turl = https://github.com/googleapis/googleapis.git\n[submodule \"packages/grpc-js-xds/deps/protoc-gen-validate\"]\n\tpath = packages/grpc-js-xds/deps/protoc-gen-validate\n\turl = https://github.com/envoyproxy/protoc-gen-validate.git\n[submodule \"packages/grpc-js-xds/deps/xds\"]\n\tpath = packages/grpc-js-xds/deps/xds\n\turl = https://github.com/cncf/xds.git\n"
        },
        {
          "name": ".istanbul.yml",
          "type": "blob",
          "size": 0.1318359375,
          "content": "reporting:\n    watermarks:\n        statements: [80, 95]\n        lines: [80, 95]\n        functions: [80, 95]\n        branches: [80, 95]\n"
        },
        {
          "name": "AUTHORS",
          "type": "blob",
          "size": 0.01171875,
          "content": "Google Inc.\n"
        },
        {
          "name": "CODE-OF-CONDUCT.md",
          "type": "blob",
          "size": 0.134765625,
          "content": "## Community Code of Conduct\n\ngRPC follows the [CNCF Code of Conduct](https://github.com/cncf/foundation/blob/master/code-of-conduct.md).\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.3134765625,
          "content": "# How to contribute\n\nWe definitely welcome patches and contributions to grpc-node! Please read the gRPC\norganization's [governance rules](https://github.com/grpc/grpc-community/blob/master/governance.md)\nand [contribution guidelines](https://github.com/grpc/grpc-community/blob/master/CONTRIBUTING.md) before proceeding.\n"
        },
        {
          "name": "GOVERNANCE.md",
          "type": "blob",
          "size": 0.1376953125,
          "content": "This repository is governed by the gRPC organization's [governance rules](https://github.com/grpc/grpc-community/blob/master/governance.md).\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"{}\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright {yyyy} {name of copyright owner}\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MAINTAINERS.md",
          "type": "blob",
          "size": 1.1845703125,
          "content": "This page lists all active maintainers of this repository. If you were a\nmaintainer and would like to add your name to the Emeritus list, please send us a\nPR.\n\nSee [GOVERNANCE.md](https://github.com/grpc/grpc-community/blob/master/governance.md)\nfor governance guidelines and how to become a maintainer.\nSee [CONTRIBUTING.md](https://github.com/grpc/grpc-community/blob/master/CONTRIBUTING.md)\nfor general contribution guidelines.\n\n## Maintainers (in alphabetical order)\n\n - [gnossen](https://github.com/gnossen), Google Inc.\n - [murgatroid99](https://github.com/murgatroid99), Google Inc.\n - [sergiitk](https://github.com/sergiitk), Google Inc.\n - [temawi](https://github.com/temawi), Google Inc.\n - [wenbozhu](https://github.com/wenbozhu), Google Inc.\n\n ## Emeritus Maintainers (in alphabetical order)\n - [jiangtaoli2016](https://github.com/jiangtaoli2016)\n - [jtattermusch](https://github.com/jtattermusch)\n - [kjin](https://github.com/kjin)\n - [matt-kwong](https://github.com/matt-kwong)\n - [nicolasnoble](https://github.com/nicolasnoble)\n - [nimf](https://github.com/nimf)\n - [ofrobots](https://github.com/ofrobots)\n - [srini100](https://github.com/srini100)\n - [WeiranFang](https://github.com/WeiranFang)\n \n"
        },
        {
          "name": "PACKAGE-COMPARISON.md",
          "type": "blob",
          "size": 2.0693359375,
          "content": "# Feature comparison of `grpc` and `@grpc/grpc-js` packages\n\nFeature | `grpc` (deprecated) | `@grpc/grpc-js`\n--------|--------|----------\nClient | :heavy_check_mark: | :heavy_check_mark:\nServer | :heavy_check_mark: | :heavy_check_mark:\nUnary RPCs | :heavy_check_mark: | :heavy_check_mark:\nStreaming RPCs | :heavy_check_mark: | :heavy_check_mark:\nDeadlines | :heavy_check_mark: | :heavy_check_mark:\nCancellation | :heavy_check_mark: | :heavy_check_mark:\nAutomatic Reconnection | :heavy_check_mark: | :heavy_check_mark:\nPer-message Compression | :heavy_check_mark: | :heavy_check_mark: (except messages sent by the server)\nChannel State | :heavy_check_mark: | :heavy_check_mark:\nJWT Access and Service Account Credentials | provided by the [Google Auth Library](https://www.npmjs.com/package/google-auth-library) | provided by the [Google Auth Library](https://www.npmjs.com/package/google-auth-library)\nInterceptors | :heavy_check_mark: | :heavy_check_mark:\nConnection Keepalives | :heavy_check_mark: | :heavy_check_mark:\nHTTP Connect Support | :heavy_check_mark: | :heavy_check_mark:\nRetries | :heavy_check_mark: (without hedging) | :heavy_check_mark: (including hedging)\nStats/tracing/monitoring | :heavy_check_mark: | :x:\nLoad Balancing | :heavy_check_mark: | :heavy_check_mark:\nInitial Metadata Options | :heavy_check_mark: | only `waitForReady`\n\nOther Properties | `grpc` | `@grpc/grpc-js`\n-----------------|--------|----------------\nPure JavaScript Code | :x: | :heavy_check_mark:\nSupported Node Versions | >= 4 and <=14 | ^8.13.0 or >=10.10.0\nSupported Electron Versions | <=11.2 | >= 3\nSupported Platforms | Linux, Windows, MacOS | All\nSupported Architectures | x86, x86-64, ARM7+ | All\n\nIn addition, all channel arguments defined in [this header file](https://github.com/grpc/grpc/blob/master/include/grpc/impl/codegen/grpc_types.h) are handled by the `grpc` library.\nOf those, a subset are handled by the `@grpc/grpc-js` library. See [the README](https://github.com/grpc/grpc-node/blob/master/packages/grpc-js/README.md#supported-channel-options) for `@grpc/grpc-js` for the list of supported channel options.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 2.126953125,
          "content": "# gRPC on Node.js\n\n## Implementations\n\nFor a comparison of the features available in these two libraries, see [this document](https://github.com/grpc/grpc-node/tree/master/PACKAGE-COMPARISON.md)\n\n### Pure JavaScript Client and Server\n\nDirectory: [`packages/grpc-js`](https://github.com/grpc/grpc-node/tree/master/packages/grpc-js)\n\nnpm package: [@grpc/grpc-js](https://www.npmjs.com/package/@grpc/grpc-js)\n\nThis library implements the core functionality of gRPC purely in JavaScript, without a C++ addon. It works on the latest versions of Node.js on all platforms that Node.js runs on.\n\n### C-based Client and Server (deprecated)\n\nDirectory: [`packages/grpc-native-core`](https://github.com/grpc/grpc-node/tree/grpc@1.24.x/packages/grpc-native-core) (lives in the `grpc@1.24.x` branch) (see here for installation information)\n\nnpm package: [grpc](https://www.npmjs.com/package/grpc).\n\nThis is the deprecated implementation of gRPC using a C++ addon. It works on versions of Node.js up to 14 on most platforms that Node.js runs on.\n\n## Other Packages\n\n### gRPC Protobuf Loader\n\nDirectory: [`packages/proto-loader`](https://github.com/grpc/grpc-node/tree/master/packages/proto-loader)\n\nnpm package: [@grpc/proto-loader](https://www.npmjs.com/package/@grpc/proto-loader)\n\nThis library loads `.proto` files into objects that can be passed to the gRPC libraries.\n\n### gRPC Tools\n\nDirectory: [`packages/grpc-tools`](https://github.com/grpc/grpc-node/tree/master/packages/grpc-tools)\n\nnpm package: [grpc-tools](https://www.npmjs.com/package/grpc-tools)\n\nDistribution of protoc and the gRPC Node protoc plugin for ease of installation with npm.\n\n### gRPC Health Check Service\n\nDirectory: [`packages/grpc-health-check`](https://github.com/grpc/grpc-node/tree/master/packages/grpc-health-check)\n\nnpm package: [grpc-health-check](https://www.npmjs.com/package/grpc-health-check)\n\nHealth check service for gRPC servers.\n\n### gRPC Reflection API Service\n\nDirectory: [`packages/grpc-reflection`](https://github.com/grpc/grpc-node/tree/master/packages/grpc-reflection)\n\nnpm package: [@grpc/reflection](https://www.npmjs.com/package/@grpc/reflection)\n\nReflection API service for gRPC servers.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 0.197265625,
          "content": "# Security Policy\n\nFor information on gRPC Security Policy and reporting potentional security issues, please see [gRPC CVE Process](https://github.com/grpc/proposal/blob/master/P4-grpc-cve-process.md).\n"
        },
        {
          "name": "TROUBLESHOOTING.md",
          "type": "blob",
          "size": 1.6484375,
          "content": "# Troubleshooting grpc-js\n\nThis guide is for troubleshooting the `grpc-js` library for Node.js\n\n## Enabling extra logging and tracing\n\nExtra logging can be very useful for diagnosing problems. `grpc-js` supports\nthe `GRPC_VERBOSITY` and `GRPC_TRACE` environment variables that can be used to increase the amount of information\nthat gets printed to stderr.\n\n## GRPC_VERBOSITY\n\n`GRPC_VERBOSITY` is used to set the minimum level of log messages printed by gRPC (supported values are `DEBUG`, `INFO` and `ERROR`). If this environment variable is unset, only `ERROR` logs will be printed.\n\n## GRPC_TRACE\n\n`GRPC_TRACE` can be used to enable extra logging for some internal gRPC components. Enabling the right traces can be invaluable\nfor diagnosing for what is going wrong when things aren't working as intended. Possible values for `GRPC_TRACE` are listed in [Environment Variables Overview](doc/environment_variables.md).\nMultiple traces can be enabled at once (use comma as separator).\n\n```\n# Enable debug logs for an application\nGRPC_VERBOSITY=debug ./helloworld_application_using_grpc\n```\n\n```\n# Print information about channel state changes\nGRPC_VERBOSITY=debug GRPC_TRACE=connectivity_state ./helloworld_application_using_grpc\n```\n\n```\n# Print info from 3 different tracers, including tracing logs with log level DEBUG\nGRPC_VERBOSITY=debug GRPC_TRACE=channel,subchannel,call_stream ./helloworld_application_using_grpc\n```\n\nPlease note that the `GRPC_TRACE` environment variable has nothing to do with gRPC's \"tracing\" feature (= tracing RPCs in\nmicroservice environment to gain insight about how requests are processed by deployment), it is merely used to enable printing\nof extra logs.\n"
        },
        {
          "name": "doc",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "gulpfile.ts",
          "type": "blob",
          "size": 1.9384765625,
          "content": "/*\n * Copyright 2017 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport * as gulp from 'gulp';\nimport * as healthCheck from './packages/grpc-health-check/gulpfile';\nimport * as jsCore from './packages/grpc-js/gulpfile';\nimport * as jsXds from './packages/grpc-js-xds/gulpfile';\nimport * as reflection from './packages/grpc-reflection/gulpfile';\nimport * as protobuf from './packages/proto-loader/gulpfile';\nimport * as internalTest from './test/gulpfile';\n\nconst installAll = gulp.series(protobuf.install, jsCore.install, healthCheck.install, internalTest.install, jsXds.install, reflection.install);\n\nconst lint = gulp.parallel(jsCore.lint);\n\nconst build = gulp.series(protobuf.compile, jsCore.compile, jsXds.compile);\n\nconst setup = gulp.series(installAll);\n\nconst setupPureJSInterop = gulp.series(protobuf.install, jsCore.install, internalTest.install);\n\nconst clean = gulp.series(jsCore.clean, protobuf.clean, jsXds.clean);\n\nconst cleanAll = gulp.series(jsXds.cleanAll, jsCore.cleanAll, internalTest.cleanAll, protobuf.cleanAll);\n\nconst nativeTestOnly = gulp.parallel(healthCheck.test);\n\nconst nativeTest = gulp.series(build, nativeTestOnly);\n\nconst testOnly = gulp.series(jsCore.test, nativeTestOnly, protobuf.test, jsXds.test, reflection.test);\n\nconst test = gulp.series(build, testOnly, internalTest.test);\n\nexport {\n  installAll,\n  lint,\n  build,\n  setup,\n  setupPureJSInterop,\n  clean,\n  cleanAll,\n  nativeTestOnly,\n  nativeTest,\n  test\n};\n"
        },
        {
          "name": "merge_kokoro_logs.js",
          "type": "blob",
          "size": 3.49609375,
          "content": "/*\n * Copyright 2017 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nconst xml2js = require('xml2js');\nconst fs = require('fs');\nconst path = require('path');\nconst util = require('util');\nconst readFile = util.promisify(fs.readFile);\nconst writeFile = util.promisify(fs.writeFile);\nconst readDir = util.promisify(fs.readdir);\n\nconst rootDir = __dirname;\n\n// Fake test suite log with a failure if log parsing failed\nconst parseFailureLog = [\n  {\n    $: {\n      name: 'Unknown Test Suite',\n      tests: '1',\n      failures: '1',\n    },\n    testcase: [\n      {\n        $: {\n          classname: 'Test Log Parsing',\n          name: 'Test Log Parsing'\n        },\n        failure: {\n          $: {\n            message: \"Log parsing failed\"\n          }\n        }\n      }\n    ]\n  }\n];\n\nreadDir(rootDir + '/reports')\n    .then((dirNames) =>\n          Promise.all(dirNames.map((dirName) =>\n                                   readDir(path.resolve(rootDir, 'reports', dirName))\n                                   .then((fileNames) =>\n                                         Promise.all(fileNames.map((name) =>\n                                                                   readFile(path.resolve(rootDir, 'reports', dirName, name))\n                                                                   .then((content) => {\n                                                                     let parser = new xml2js.Parser();\n                                                                     const parseString = util.promisify(parser.parseString.bind(parser));\n                                                                     return parseString(content);\n                                                                   })\n                                                                  ))\n                                        )\n                                   .then((objects) => {\n                                     const merged = {\n                                       testsuites: {\n                                          testsuite: Array.prototype.concat.apply([], objects.map((obj) => {\n                                            if (obj) {\n                                              return obj.testsuites.testsuite;\n                                            } else {\n                                              return parseFailureLog;\n                                            }}))\n                                       }\n                                     }\n                                     let builder = new xml2js.Builder();\n                                     let xml = builder.buildObject(merged);\n                                     let resultName = path.resolve(rootDir, 'reports', dirName, 'sponge_log.xml');\n                                     console.log(`Writing ${resultName}`);\n                                     return writeFile(resultName, xml);\n                                   })\n                                  ))\n         )\n    .catch((error) => {\n      console.error(error);\n    });\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 1.5576171875,
          "content": "{\n  \"name\": \"grpc-js-repository\",\n  \"version\": \"0.1.0\",\n  \"description\": \"Dummy package for the grpc-node repository\",\n  \"private\": true,\n  \"keywords\": [],\n  \"author\": {\n    \"name\": \"Google Inc.\"\n  },\n  \"license\": \"Apache-2.0\",\n  \"devDependencies\": {\n    \"@types/execa\": \"^0.8.0\",\n    \"@types/gulp\": \"^4.0.5\",\n    \"@types/gulp-mocha\": \"0.0.31\",\n    \"@types/ncp\": \"^2.0.1\",\n    \"@types/node\": \"^8.0.32\",\n    \"@types/pify\": \"^3.0.0\",\n    \"@types/semver\": \"^5.5.0\",\n    \"coveralls\": \"^3.0.1\",\n    \"del\": \"^3.0.0\",\n    \"execa\": \"^0.8.0\",\n    \"gulp\": \"^4.0.1\",\n    \"gulp-jshint\": \"^2.0.4\",\n    \"gulp-mocha\": \"^4.3.1\",\n    \"gulp-sourcemaps\": \"^2.6.1\",\n    \"gulp-tslint\": \"^8.1.1\",\n    \"gulp-typescript\": \"^3.2.2\",\n    \"gulp-util\": \"^3.0.8\",\n    \"jsdoc\": \"^4.0.3\",\n    \"jshint\": \"^2.9.5\",\n    \"make-dir\": \"^1.1.0\",\n    \"merge2\": \"^1.1.0\",\n    \"mocha\": \"^3.5.3\",\n    \"mocha-jenkins-reporter\": \"^0.3.9\",\n    \"ncp\": \"^2.0.0\",\n    \"nyc\": \"^11.7.2\",\n    \"pify\": \"^3.0.0\",\n    \"run-sequence\": \"^2.2.0\",\n    \"semver\": \"^5.5.0\",\n    \"symlink\": \"^2.1.0\",\n    \"through2\": \"^2.0.3\",\n    \"ts-node\": \"^8.1.0\",\n    \"tslint\": \"^5.5.0\",\n    \"typescript\": \"^3.7.2\",\n    \"xml2js\": \"^0.4.19\"\n  },\n  \"contributors\": [\n    {\n      \"name\": \"Google Inc.\"\n    }\n  ],\n  \"nyc\": {\n    \"include\": [\n      \"packages/grpc-health-check/health.js\",\n      \"packages/grpc-js/build/src/*\",\n      \"packages/proto-loader/build/src/*\",\n      \"packages/grpc-reflection/build/src/*\"\n    ],\n    \"cache\": true,\n    \"all\": true\n  },\n  \"scripts\": {\n    \"test\": \"nyc gulp test\",\n    \"coverage\": \"nyc report --reporter=text-lcov | coveralls\"\n  }\n}\n"
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "run-tests.bat",
          "type": "blob",
          "size": 1.98046875,
          "content": "@rem Copyright 2017 gRPC authors.\n@rem\n@rem Licensed under the Apache License, Version 2.0 (the \"License\");\n@rem you may not use this file except in compliance with the License.\n@rem You may obtain a copy of the License at\n@rem\n@rem     http://www.apache.org/licenses/LICENSE-2.0\n@rem\n@rem Unless required by applicable law or agreed to in writing, software\n@rem distributed under the License is distributed on an \"AS IS\" BASIS,\n@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n@rem See the License for the specific language governing permissions and\n@rem limitations under the License.\n\nSET ROOT=%~dp0\ncd /d %~dp0\n\npowershell -c \"Get-Host\"\npowershell -c \"$PSVersionTable\"\npowershell -c \"[System.Environment]::OSVersion\"\npowershell -c \"Get-WmiObject -Class Win32_ComputerSystem\"\npowershell -c \"(Get-WmiObject -Class Win32_ComputerSystem).SystemType\"\n\npowershell -c \"[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12; & { iwr https://raw.githubusercontent.com/grumpycoders/nvm-ps/master/nvm.ps1 | iex }\"\n\nSET PATH=%APPDATA%\\nvm-ps;%APPDATA%\\nvm-ps\\nodejs;%PATH%\nSET JOBS=8\n\ncall nvm version\n\ncall nvm install 16\ncall nvm use 16\n\ngit submodule update --init --recursive\n\nSET npm_config_fetch_retries=5\n\ncall npm install || goto :error\n\nSET JUNIT_REPORT_STACK=1\nSET FAILED=0\n\nfor %%v in (14 16) do (\n  call nvm install %%v\n  call nvm use %%v\n  if \"%%v\"==\"4\" (\n    call npm install -g npm@5\n  )\n  @rem https://github.com/mapbox/node-pre-gyp/issues/362\n  call npm install -g node-gyp\n  node -e \"console.log(process.versions)\"\n\n  mkdir reports\\node%%v\n  SET JUNIT_REPORT_PATH=reports/node%%v\n\n  node -e \"process.exit(process.version.startsWith('v%%v') ? 0 : -1)\" || goto :error\n\n  call .\\node_modules\\.bin\\gulp setup || SET FAILED=1\n  call .\\node_modules\\.bin\\gulp test || SET FAILED=1\n  cmd.exe /c \"SET GRPC_DNS_RESOLVER=ares& call .\\node_modules\\.bin\\gulp nativeTestOnly\" || SET FAILED=1\n)\n\nnode merge_kokoro_logs.js\nif %FAILED% neq 0 exit /b 1\ngoto :EOF\n\n:error\nexit /b 1\n"
        },
        {
          "name": "run-tests.sh",
          "type": "blob",
          "size": 2.2587890625,
          "content": "#!/bin/sh\n# Copyright 2017 gRPC authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\n# Install NVM\nROOT=`pwd`\ncd ~\nexport NVM_DIR=`pwd`/.nvm\ncurl -o- https://raw.githubusercontent.com/creationix/nvm/v0.33.4/install.sh | bash\n\n# Load NVM\n. $NVM_DIR/nvm.sh\n\nset -ex\ncd $ROOT\n\ngit submodule update --init --recursive\n\nif [ ! -n \"$node_versions\" ] ; then\n  node_versions=\"14 16\"\nfi\n\nset +ex\nnvm install 8\nnvm install lts/*\nnvm use lts/*\nset -ex\n\nnpm_config_fetch_retries=5\n\nnpm install --unsafe-perm\n\nmkdir -p reports\nexport JOBS=8\nexport JUNIT_REPORT_STACK=1\n\nOS=$(uname)\nARCH=$(uname -m)\n\n# TODO(mlumish): Add electron tests\n\nFAILED=\"false\"\n\nfor version in ${node_versions}\ndo\n  # Install and setup node for the version we want.\n  set +ex\n  echo \"Switching to node version $version\"\n  nvm install $version\n  nvm use $version\n  set -ex\n\n  export JUNIT_REPORT_PATH=\"reports/node$version/\"\n\n  # https://github.com/mapbox/node-pre-gyp/issues/362\n  npm install -g node-gyp\n\n  mkdir -p \"reports/node$version\"\n\n  node -e 'process.exit(process.version.startsWith(\"v'$version'\") ? 0 : -1)'\n\n  # Install dependencies and link packages together.\n  ./node_modules/.bin/gulp setup\n\n  # npm test calls nyc gulp test\n  npm test || FAILED=\"true\"\n\n  ./test/distrib/run-distrib-test.sh || FAILED=\"true\"\ndone\n\nset +ex\nnvm use 8\nset -ex\n\nnode merge_kokoro_logs.js\n\nif [ \"$FAILED\" = \"true\" ]\nthen\n  exit 1\nelse\n  if [ \"$OS\" = \"Linux\" ] && [ \"$ARCH\" != \"aarch64\"]\n  then\n    # If we can't download the token file, just skip reporting coverage\n    gsutil cp gs://grpc-testing-secrets/coveralls_credentials/grpc-node.rc /tmp || exit 0\n    set +x\n    . /tmp/grpc-node.rc\n    set -x\n    export COVERALLS_REPO_TOKEN\n    export COVERALLS_SERVICE_NAME=Kokoro\n    export COVERALLS_SERVICE_JOB_ID=$KOKORO_BUILD_ID\n    npm run coverage\n  fi\nfi\n"
        },
        {
          "name": "setup.sh",
          "type": "blob",
          "size": 1.201171875,
          "content": "#!/bin/sh\n# Copyright 2017 gRPC authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nif [ -z $NODE_H2 ]; then\n  echo \"\\$NODE_H2 must point to a node binary\"\n  exit 1\nfi\nif [ -z $NVM_DIR ]; then\n  echo \"nvm must be installed\"\n  exit 1\nfi\n\nNVM_H2_DIR=$NVM_DIR/versions/node/v9.0.0-pre\ncp -r $NVM_DIR/versions/node/v8.2.1 $NVM_H2_DIR\nrm -r $NVM_H2_DIR/bin\nmkdir $NVM_H2_DIR/bin\necho $NODE_H2 '--expose-http2 \"$@\"' > $NVM_H2_DIR/bin/node\nln -s $NVM_H2_DIR/lib/node_modules/npm/bin/npm-cli.js $NVM_H2_DIR/bin/npm\nln -s $NVM_H2_DIR/lib/node_modules/npm/bin/npx-cli.js $NVM_H2_DIR/bin/npx\nchmod +x $NVM_H2_DIR/bin/node\n\n[ -s \"$NVM_DIR/nvm.sh\" ] && . \"$NVM_DIR/nvm.sh\"\nnvm use v9.0.0-pre 2>/dev/null\nnvm use --delete-prefix v9.0.0-pre\n"
        },
        {
          "name": "setup_interop.sh",
          "type": "blob",
          "size": 0.625,
          "content": "#!/bin/sh\n# Copyright 2019 gRPC authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nnpm install -g node-gyp gulp\nnpm install\ngulp setup\n"
        },
        {
          "name": "setup_interop_purejs.sh",
          "type": "blob",
          "size": 0.62890625,
          "content": "#!/bin/sh\n# Copyright 2019 gRPC authors.\n#\n# Licensed under the Apache License, Version 2.0 (the \"License\");\n# you may not use this file except in compliance with the License.\n# You may obtain a copy of the License at\n#\n#     http://www.apache.org/licenses/LICENSE-2.0\n#\n# Unless required by applicable law or agreed to in writing, software\n# distributed under the License is distributed on an \"AS IS\" BASIS,\n# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n# See the License for the specific language governing permissions and\n# limitations under the License.\n\nnpm install -g gulp\nnpm install\ngulp setupPureJSInterop\n"
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "tsconfig.json",
          "type": "blob",
          "size": 0.0634765625,
          "content": "{\n  \"compilerOptions\": {\n    \"lib\": [\n      \"es2015\"\n    ]\n  }\n}\n"
        },
        {
          "name": "util.js",
          "type": "blob",
          "size": 1.107421875,
          "content": "/*\n * Copyright 2019 gRPC authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nconst path = require('path');\nconst del = require('del');\nconst fs = require('fs');\nconst makeDir = require('make-dir');\n\n// synchronously link a module\nconst linkSync = (base, from, to) => {\n  from = path.resolve(base, from);\n  to = path.resolve(base, to);\n  try {\n    fs.lstatSync(from);\n    console.log('link: deleting', from);\n    del.sync(from);\n  } catch (e) {\n    makeDir.sync(path.dirname(from));\n  }\n  console.log('link: linking', from, '->', to);\n  fs.symlinkSync(to, from, 'junction');\n};\n\nmodule.exports = {\n  linkSync\n};"
        }
      ]
    }
  ]
}