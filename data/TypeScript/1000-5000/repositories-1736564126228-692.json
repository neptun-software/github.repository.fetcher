{
  "metadata": {
    "timestamp": 1736564126228,
    "page": 692,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjcwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "seriousm4x/UpSnap",
      "stars": 2794,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.1611328125,
          "content": ".git\n.gitignore\n.dockerignore\nDockerfile\nDockerfile.dev\ndata\nREADME.md\n\nfrontend/.svelte-kit\nfrontend/node_modules\nfrontend/build\n\nbackend/pb_data\nbackend/pb_public\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.0185546875,
          "content": "* text=auto eol=lf\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 3.9443359375,
          "content": "# Created by https://www.toptal.com/developers/gitignore/api/go,node,svelte,visualstudiocode,macos\n# Edit at https://www.toptal.com/developers/gitignore?templates=go,node,svelte,visualstudiocode,macos\n\n### Go ###\n# If you prefer the allow list template instead of the deny list, see community template:\n# https://github.com/github/gitignore/blob/main/community/Golang/Go.AllowList.gitignore\n#\n# Binaries for programs and plugins\n*.exe\n*.exe~\n*.dll\n*.so\n*.dylib\n\n# Test binary, built with `go test -c`\n*.test\n\n# Output of the go coverage tool, specifically when used with LiteIDE\n*.out\n\n# Dependency directories (remove the comment below to include it)\n# vendor/\n\n# Go workspace file\ngo.work\n\n### macOS ###\n# General\n.DS_Store\n.AppleDouble\n.LSOverride\n\n# Icon must end with two \\r\nIcon\n\n\n# Thumbnails\n._*\n\n# Files that might appear in the root of a volume\n.DocumentRevisions-V100\n.fseventsd\n.Spotlight-V100\n.TemporaryItems\n.Trashes\n.VolumeIcon.icns\n.com.apple.timemachine.donotpresent\n\n# Directories potentially created on remote AFP share\n.AppleDB\n.AppleDesktop\nNetwork Trash Folder\nTemporary Items\n.apdisk\n\n### macOS Patch ###\n# iCloud generated files\n*.icloud\n\n### Node ###\n# Logs\nlogs\n*.log\nnpm-debug.log*\nyarn-debug.log*\nyarn-error.log*\nlerna-debug.log*\n.pnpm-debug.log*\n\n# Diagnostic reports (https://nodejs.org/api/report.html)\nreport.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json\n\n# Runtime data\npids\n*.pid\n*.seed\n*.pid.lock\n\n# Directory for instrumented libs generated by jscoverage/JSCover\nlib-cov\n\n# Coverage directory used by tools like istanbul\ncoverage\n*.lcov\n\n# nyc test coverage\n.nyc_output\n\n# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)\n.grunt\n\n# Bower dependency directory (https://bower.io/)\nbower_components\n\n# node-waf configuration\n.lock-wscript\n\n# Compiled binary addons (https://nodejs.org/api/addons.html)\nbuild/Release\n\n# Dependency directories\nnode_modules/\njspm_packages/\n\n# Snowpack dependency directory (https://snowpack.dev/)\nweb_modules/\n\n# TypeScript cache\n*.tsbuildinfo\n\n# Optional npm cache directory\n.npm\n\n# Optional eslint cache\n.eslintcache\n\n# Optional stylelint cache\n.stylelintcache\n\n# Microbundle cache\n.rpt2_cache/\n.rts2_cache_cjs/\n.rts2_cache_es/\n.rts2_cache_umd/\n\n# Optional REPL history\n.node_repl_history\n\n# Output of 'npm pack'\n*.tgz\n\n# Yarn Integrity file\n.yarn-integrity\n\n# dotenv environment variable files\n.env\n.env.development.local\n.env.test.local\n.env.production.local\n.env.local\n\n# parcel-bundler cache (https://parceljs.org/)\n.cache\n.parcel-cache\n\n# Next.js build output\n.next\nout\n\n# Nuxt.js build / generate output\n.nuxt\ndist\n\n# Gatsby files\n.cache/\n# Comment in the public line in if your project uses Gatsby and not Next.js\n# https://nextjs.org/blog/next-9-1#public-directory-support\n# public\n\n# vuepress build output\n.vuepress/dist\n\n# vuepress v2.x temp and cache directory\n.temp\n\n# Docusaurus cache and generated files\n.docusaurus\n\n# Serverless directories\n.serverless/\n\n# FuseBox cache\n.fusebox/\n\n# DynamoDB Local files\n.dynamodb/\n\n# TernJS port file\n.tern-port\n\n# Stores VSCode versions used for testing VSCode extensions\n.vscode-test\n\n# yarn v2\n.yarn/cache\n.yarn/unplugged\n.yarn/build-state.yml\n.yarn/install-state.gz\n.pnp.*\n\n### Node Patch ###\n# Serverless Webpack directories\n.webpack/\n\n# Optional stylelint cache\n\n# SvelteKit build / generate output\n.svelte-kit\n\n### Svelte ###\n# gitignore template for the SvelteKit, frontend web component framework\n# website: https://kit.svelte.dev/\n\n.svelte-kit/\npackage\n\n### VisualStudioCode ###\n.vscode/*\n!.vscode/settings.json\n!.vscode/tasks.json\n!.vscode/launch.json\n!.vscode/extensions.json\n!.vscode/*.code-snippets\n\n# Local History for Visual Studio Code\n.history/\n\n# Built Visual Studio Code Extensions\n*.vsix\n\n### VisualStudioCode Patch ###\n# Ignore all local history of files\n.history\n.ionide\n\n# End of https://www.toptal.com/developers/gitignore/api/go,node,svelte,visualstudiocode,macos\n\nbuild\ndata\n\nbackend/pb_data\nbackend/pb_public/*\n!backend/pb_public/.gitkeep\n\ndist/\nvite.config.js.timestamp*\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.8505859375,
          "content": "FROM alpine:3 AS downloader\nARG TARGETOS\nARG TARGETARCH\nARG TARGETVARIANT\nARG VERSION\nENV BUILDX_ARCH=\"${TARGETOS:-linux}_${TARGETARCH:-amd64}${TARGETVARIANT}\"\nWORKDIR /app\nRUN wget https://github.com/seriousm4x/UpSnap/releases/download/${VERSION}/UpSnap_${VERSION}_${BUILDX_ARCH}.zip &&\\\n    unzip UpSnap_${VERSION}_${BUILDX_ARCH}.zip &&\\\n    rm -f UpSnap_${VERSION}_${BUILDX_ARCH}.zip &&\\\n    chmod +x upsnap &&\\\n    apk update &&\\\n    apk add --no-cache libcap &&\\\n    setcap 'cap_net_raw=+ep' ./upsnap\n\nFROM alpine:3\nRUN apk update &&\\\n    apk add --no-cache tzdata ca-certificates nmap samba samba-common-tools openssh sshpass curl &&\\\n    rm -rf /var/cache/apk/*\nWORKDIR /app\nCOPY --from=downloader /app/upsnap upsnap\nHEALTHCHECK --interval=10s \\\n    CMD curl -fs \"http://localhost:8090/api/health\" || exit 1\nENTRYPOINT [\"./upsnap\", \"serve\", \"--http=0.0.0.0:8090\"]\n"
        },
        {
          "name": "Dockerfile.dev",
          "type": "blob",
          "size": 0.7138671875,
          "content": "FROM node:alpine AS node\nWORKDIR /app\nCOPY frontend/ .\nRUN npm i -g pnpm &&\\\n    pnpm i &&\\\n    pnpm run build\n\nFROM golang:alpine AS go\nWORKDIR /app\nCOPY backend/ .\nCOPY --from=node /app/build ./pb_public\nENV CGO_ENABLED=0\nRUN go build -o upsnap main.go &&\\\n    chmod +x upsnap &&\\\n    apk update &&\\\n    apk add --no-cache libcap &&\\\n    setcap 'cap_net_raw=+ep' ./upsnap\n\nFROM alpine:3\nRUN apk update &&\\\n    apk add --no-cache tzdata ca-certificates nmap samba samba-common-tools openssh sshpass curl &&\\\n    rm -rf /var/cache/apk/*\nWORKDIR /app\nCOPY --from=go /app/upsnap upsnap\nHEALTHCHECK --interval=10s \\\n    CMD curl -fs \"http://localhost:8090/api/health\" || exit 1\nENTRYPOINT [\"./upsnap\", \"serve\", \"--http=0.0.0.0:8090\"]\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0419921875,
          "content": "MIT License\n\nCopyright (c) 2021 seriousm4x\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 6.2900390625,
          "content": "<div align=\"center\" width=\"100%\">\n    <img src=\"frontend/static/gopher.svg\" width=\"150\" />\n</div>\n\n<div align=\"center\" width=\"100%\">\n    <h2>UpSnap</h2>\n    <p>A simple wake on lan web app written with SvelteKit, Go and PocketBase.</p>\n    <div>\n        <a target=\"_blank\" href=\"https://github.com/seriousm4x/upsnap\"><img src=\"https://img.shields.io/github/stars/seriousm4x/UpSnap?style=flat&label=Stars\" /></a>\n        <a target=\"_blank\" href=\"https://github.com/seriousm4x/UpSnap/pkgs/container/upsnap\"><img src=\"https://img.shields.io/badge/dynamic/json?url=https%3A%2F%2Fraw.githubusercontent.com%2Fipitio%2Fbackage%2Findex%2Fseriousm4x%2FUpSnap%2Fupsnap.json&query=downloads&label=ghcr.io%20pulls\" /></a>\n        <a target=\"_blank\" href=\"https://hub.docker.com/r/seriousm4x/upsnap\"><img src=\"https://img.shields.io/docker/pulls/seriousm4x/upsnap?label=docker%20hub%20pulls\" /></a>\n        <a target=\"_blank\" href=\"https://github.com/seriousm4x/UpSnap/releases\"><img src=\"https://img.shields.io/github/downloads/seriousm4x/upsnap/total?label=binary%20downloads\" /></a>\n    </div>\n    <div>\n        <a target=\"_blank\" href=\"https://github.com/seriousm4x/UpSnap/releases\"><img src=\"https://img.shields.io/github/go-mod/go-version/seriousm4x/UpSnap?filename=backend/go.mod\" /></a>\n        <a target=\"_blank\" href=\"https://github.com/seriousm4x/UpSnap/releases\"><img src=\"https://img.shields.io/github/v/release/seriousm4x/upsnap?display_name=tag&label=Latest%20release\" /></a>\n        <a target=\"_blank\" href=\"https://github.com/seriousm4x/UpSnap/actions\"><img src=\"https://github.com/seriousm4x/upsnap/actions/workflows/release.yml/badge.svg?event=push\" /></a>\n        <a target=\"_blank\" href=\"https://github.com/seriousm4x/UpSnap/commits/master\"><img src=\"https://img.shields.io/github/last-commit/seriousm4x/upsnap\" /></a>\n    </div>\n</div>\n\n## ✨ Features\n\n- 🚀 One-Click Device Wake-Up Dashboard\n- ⏰ Timed Events via Cron for Automation\n- 🔌 Ping Any Port You Choose\n- 🔍 Discover Devices with Network Scanning (nmap required)\n- 👤 Secured User Management\n- 🌐 i18n support for [these](https://github.com/seriousm4x/UpSnap/tree/master/frontend/src/lib/i18n) languages\n- 🎨 29 Themes\n- 🐳 [Docker images](https://github.com/seriousm4x/UpSnap/pkgs/container/upsnap) for amd64, arm64, arm/v7, arm/v6\n- 🏠 Self-Hostable\n\n## 📸 Screenshots\n\n| Dark                              | Light                              |\n| --------------------------------- | ---------------------------------- |\n| ![](/assets/home-dark.webp)       | ![](/assets/home-light.webp)       |\n| ![](/assets/account-dark.webp)    | ![](/assets/account-light.webp)    |\n| ![](/assets/new-manual-dark.webp) | ![](/assets/new-manual-light.webp) |\n| ![](/assets/new-scan-dark.webp)   | ![](/assets/new-scan-light.webp)   |\n| ![](/assets/settings-dark.webp)   | ![](/assets/settings-light.webp)   |\n| ![](/assets/users-dark.webp)      | ![](/assets/users-light.webp)      |\n\n## 🐧 Install from the [AUR](https://aur.archlinux.org/packages/upsnap-bin)\n\n```bash\nyay -Sy upsnap-bin\n```\n\n## 🚀 Run the binary\n\nJust download the latest binary from the [release page](https://github.com/seriousm4x/UpSnap/releases) and run it.\n\n### Root:\n\n```bash\nsudo ./upsnap serve --http=0.0.0.0:8090\n```\n\n### Non-root:\n\n```bash\nsudo setcap cap_net_raw=+ep ./upsnap # only once after downloading\n./upsnap serve --http=0.0.0.0:8090\n```\n\nFor more options check `./upsnap --help` or visit [PocketBase documentation](https://pocketbase.io/docs).\n\nIf you want to use network discovery, make sure to have `nmap` installed and run UpSnap as root/admin.\n\n## 🐳 Run in docker\n\nYou can use the [docker-compose](docker-compose.yml) example. See the comments in the file for customization.\n\n### Non-root docker user:\n\nCreate the mount point first:\n\n```bash\nmkdir data\n```\n\nThen add `user: 1000:1000` to the docker-compose file (or whatever your $UID:$GID is).\n\n### Change port\n\nIf you want to change the port from 8090 to something else, change the following (5000 in this case):\n\n```yml\nentrypoint: /bin/sh -c \"./upsnap serve --http 0.0.0.0:5000\"\nhealthcheck:\n  test: curl -fs \"http://localhost:5000/api/health\" || exit 1\n```\n\n### Install additional packages for shutdown cmd\n\n```yml\nentrypoint: /bin/sh -c \"apk update && apk add --no-cache <YOUR_PACKAGE> && rm -rf /var/cache/apk/* && ./upsnap serve --http 0.0.0.0:8090\"\n```\n\nYou can search for your needed package [here](https://pkgs.alpinelinux.org/packages).\n\n### Reverse Proxy\n\n**Caddy example**\n\n```\nupsnap.example.com {\n    reverse_proxy localhost:8090\n}\n```\n\n## 🔒 User permissions\n\nUpSnap offers unique access for each user, per device. While admins have all permissions, they can assign specific rights to users such as displaying/hiding a device, accessing device editing, deleting and powering devices on/off. See the last screenshot in the [📸 Screenshots section](#-screenshots).\n\n## 🌍 Exposing to the open web\n\nAlthough UpSnap has user authorisation, it is **not recommended to expose it to the open web** and make it accessible by everyone!\n\n**Reason**: The shutdown device command is basically a command piped to #sh (root if you run docker). If anyone gains unauthorized access and can abuse this api route in any way, the attacker has access to a (root) shell on your local network.\n\n**Recommended**: If you need access from outside your network, please use a vpn. Wireguard or OpenVPN is your way to go.\n\n## 🌐 Help translating\n\nUpSnap is available in the following languages so far:\n\n- 🇺🇸 **English** (en-US)\n- 🇩🇪 **German** (de-DE)\n- 🇪🇸 **Spanish** (es-ES)\n- 🇫🇷 **French** (fr-FR)\n- 🇮🇹 **Italian** (it-IT)\n- 🇳🇱 **Dutch** (nl-NL)\n- 🇵🇹 **Portuguese** (pt-PT)\n- 🇨🇳 **Chinese** (zh-CN)\n- 🇹🇼 **Chinese (Taiwan)** (zh-TW)\n\n**If you want to contribute and help translating, check the wiki: [How to add languages](https://github.com/seriousm4x/UpSnap/wiki/How-to-add-languages)**\n\n## 🔧 Help developing\n\nFork this branch and clone it.\n\n1. Start backend\n\n```sh\ncd backend\ngo mod tidy\ngo run main.go serve\n```\n\n2. Start frontend\n\n```sh\ncd frontend\npnpm i\npnpm run dev\n```\n\nOpen up [http://localhost:5173/](http://localhost:5173/), create an admin user and add some devices.\n\n## 🌟 Star History\n\n[![Star History Chart](https://api.star-history.com/svg?repos=seriousm4x/UpSnap&type=Date&theme=dark)](https://star-history.com/#seriousm4x/UpSnap&Date)\n"
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "backend",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.dev.yml",
          "type": "blob",
          "size": 1.2255859375,
          "content": "services:\n  upsnap:\n    container_name: upsnap\n    build:\n      dockerfile: Dockerfile.dev\n    network_mode: host\n    restart: unless-stopped\n    volumes:\n      - ./data:/app/pb_data\n    # # To use a non-root user, create the mountpoint first before starting\n    # # the container (mkdir data) so that it has the right permissions.\n    # user: 1000:1000\n    # environment:\n    #   - TZ=Europe/Berlin # Set container timezone for cron schedules\n    #   - UPSNAP_INTERVAL=@every 10s # Sets the interval in which the devices are pinged\n    #   - UPSNAP_SCAN_RANGE=192.168.1.0/24 # Scan range is used for device discovery on local network\n    #   - UPSNAP_WEBSITE_TITLE=Custom name # Custom website title\n    # # dns is used for name resolution during network scan\n    # dns:\n    #   - 192.18.0.1\n    #   - 192.18.0.2\n    # # you can change the listen ip:port inside the container like this:\n    # entrypoint: /bin/sh -c \"./upsnap serve --http 0.0.0.0:5000\"\n    # healthcheck:\n    #   test: curl -fs \"http://localhost:5000/api/health\" || exit 1\n    #   interval: 10s\n    # # or install custom packages for shutdown\n    # entrypoint: /bin/sh -c \"apk update && apk add --no-cache <YOUR_PACKAGE> && rm -rf /var/cache/apk/* && ./upsnap serve --http 0.0.0.0:8090\"\n"
        },
        {
          "name": "docker-compose.yml",
          "type": "blob",
          "size": 1.478515625,
          "content": "services:\n  upsnap:\n    container_name: upsnap\n    image: ghcr.io/seriousm4x/upsnap:4 # images are also available on docker hub: seriousm4x/upsnap:4\n    network_mode: host\n    restart: unless-stopped\n    volumes:\n      - ./data:/app/pb_data\n    # # To use a non-root user, create the mountpoint first (mkdir data) so that it has the right permission.\n    # user: 1000:1000\n    # environment:\n    #   - TZ=Europe/Berlin # Set container timezone for cron schedules\n    #   - UPSNAP_INTERVAL=@every 10s # Sets the interval in which the devices are pinged\n    #   - UPSNAP_SCAN_RANGE=192.168.1.0/24 # Scan range is used for device discovery on local network\n    #   - UPSNAP_SCAN_TIMEOUT=500ms # Scan timeout is nmap's --host-timeout value to wait for devices (https://nmap.org/book/man-performance.html)\n    #   - UPSNAP_PING_PRIVILEGED=true # Set to false if you don't have root user permissions\n    #   - UPSNAP_WEBSITE_TITLE=Custom name # Custom website title\n    # # dns is used for name resolution during network scan\n    # dns:\n    #   - 192.18.0.1\n    #   - 192.18.0.2\n    # # you can change the listen ip:port inside the container like this:\n    # entrypoint: /bin/sh -c \"./upsnap serve --http 0.0.0.0:5000\"\n    # healthcheck:\n    #   test: curl -fs \"http://localhost:5000/api/health\" || exit 1\n    #   interval: 10s\n    # # or install custom packages for shutdown\n    # entrypoint: /bin/sh -c \"apk update && apk add --no-cache <YOUR_PACKAGE> && rm -rf /var/cache/apk/* && ./upsnap serve --http 0.0.0.0:8090\"\n"
        },
        {
          "name": "frontend",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}