{
  "metadata": {
    "timestamp": 1736563665131,
    "page": 146,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjE1MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "alexjoverm/typescript-library-starter",
      "stars": 4371,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".all-contributorsrc",
          "type": "blob",
          "size": 5.7353515625,
          "content": "{\n  \"projectName\": \"typescript-library-starter\",\n  \"projectOwner\": \"alexjoverm\",\n  \"files\": [\n    \"README.md\"\n  ],\n  \"imageSize\": 100,\n  \"commit\": true,\n  \"contributors\": [\n    {\n      \"login\": \"k1r0s\",\n      \"name\": \"Ciro\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/6052309?v=3\",\n      \"profile\": \"https://www.linkedin.com/in/ciro-ivan-agull√≥-guarinos-42109376\",\n      \"contributions\": [\n        \"code\",\n        \"tool\"\n      ]\n    },\n    {\n      \"login\": \"mariusschulz\",\n      \"name\": \"Marius Schulz\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/947523?v=3\",\n      \"profile\": \"https://blog.mariusschulz.com\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"alextrastero\",\n      \"name\": \"Alexander Odell\",\n      \"avatar_url\": \"https://avatars.githubusercontent.com/u/4152819?v=3\",\n      \"profile\": \"https://github.com/alextrastero\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"superamadeus\",\n      \"name\": \"Ryan Ham\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/8728882?v=3\",\n      \"profile\": \"https://github.com/superamadeus\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"ChinW\",\n      \"name\": \"Chi\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/8458838?v=3\",\n      \"profile\": \"https://consiiii.me\",\n      \"contributions\": [\n        \"code\",\n        \"tool\",\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"mattmazzola\",\n      \"name\": \"Matt Mazzola\",\n      \"avatar_url\": \"https://avatars2.githubusercontent.com/u/2856501?v=3\",\n      \"profile\": \"https://github.com/mattmazzola\",\n      \"contributions\": [\n        \"code\",\n        \"tool\"\n      ]\n    },\n    {\n      \"login\": \"Leefrost\",\n      \"name\": \"Sergii Lischuk\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/2664047?v=3\",\n      \"profile\": \"http://leefrost.github.io\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"SteveALee\",\n      \"name\": \"Steve Lee\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/618922?v=3\",\n      \"profile\": \"http;//opendirective.com\",\n      \"contributions\": [\n        \"tool\"\n      ]\n    },\n    {\n      \"login\": \"kutyel\",\n      \"name\": \"Flavio Corpa\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/5127501?v=3\",\n      \"profile\": \"http://flaviocorpa.com\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"foreggs\",\n      \"name\": \"Dom\",\n      \"avatar_url\": \"https://avatars2.githubusercontent.com/u/22561997?v=3\",\n      \"profile\": \"https://github.com/foreggs\",\n      \"contributions\": [\n        \"tool\"\n      ]\n    },\n    {\n      \"login\": \"myabc\",\n      \"name\": \"Alex Coles\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/755?v=4\",\n      \"profile\": \"http://alexbcoles.com\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"davidkpiano\",\n      \"name\": \"David Khourshid\",\n      \"avatar_url\": \"https://avatars2.githubusercontent.com/u/1093738?v=4\",\n      \"profile\": \"https://github.com/davidkpiano\",\n      \"contributions\": [\n        \"tool\"\n      ]\n    },\n    {\n      \"login\": \"aarongarciah\",\n      \"name\": \"Aar√≥n Garc√≠a Herv√°s\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/7225802?v=4\",\n      \"profile\": \"https://aarongarciah.com\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"stuajnht\",\n      \"name\": \"Jonathan Hart\",\n      \"avatar_url\": \"https://avatars2.githubusercontent.com/u/13683986?v=4\",\n      \"profile\": \"https://www.stuajnht.co.uk\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"Xndr7\",\n      \"name\": \"Sanjiv Lobo\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/13509204?v=4\",\n      \"profile\": \"https://github.com/Xndr7\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"sAleksovski\",\n      \"name\": \"Stefan Aleksovski\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/7473800?v=4\",\n      \"profile\": \"https://github.com/sAleksovski\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"devpeerapong\",\n      \"name\": \"dev.peerapong\",\n      \"avatar_url\": \"https://avatars2.githubusercontent.com/u/8853426?v=4\",\n      \"profile\": \"https://github.com/devpeerapong\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"Racing5372\",\n      \"name\": \"Aaron Groome\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/22260722?v=4\",\n      \"profile\": \"http://twitter.com/Racing5372\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"lifeiscontent\",\n      \"name\": \"Aaron Reisman\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/180963?v=4\",\n      \"profile\": \"https://github.com/lifeiscontent\",\n      \"contributions\": [\n        \"code\"\n      ]\n    },\n    {\n      \"login\": \"kid-sk\",\n      \"name\": \"kid-sk\",\n      \"avatar_url\": \"https://avatars1.githubusercontent.com/u/32557482?v=4\",\n      \"profile\": \"https://github.com/kid-sk\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"AndreaGot\",\n      \"name\": \"Andrea Gottardi\",\n      \"avatar_url\": \"https://avatars0.githubusercontent.com/u/1503089?v=4\",\n      \"profile\": \"http://about.me/andreagot\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"Yogendra0Sharma\",\n      \"name\": \"Yogendra Sharma\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/1375860?v=4\",\n      \"profile\": \"http://TechiesEyes.com\",\n      \"contributions\": [\n        \"doc\"\n      ]\n    },\n    {\n      \"login\": \"cyphercodes\",\n      \"name\": \"Rayan Salhab\",\n      \"avatar_url\": \"https://avatars3.githubusercontent.com/u/7407177?v=4\",\n      \"profile\": \"http://linkedin.com/in/rayan-salhab/\",\n      \"contributions\": [\n        \"code\"\n      ]\n    }\n  ],\n  \"repoType\": \"github\"\n}\n"
        },
        {
          "name": ".editorconfig",
          "type": "blob",
          "size": 0.2060546875,
          "content": "#root = true\n\n[*]\nindent_style = space\nend_of_line = lf\ncharset = utf-8\ntrim_trailing_whitespace = true\ninsert_final_newline = true\nmax_line_length = 100\nindent_size = 2\n\n[*.md]\ntrim_trailing_whitespace = false\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.03125,
          "content": "tools/* linguist-vendored=false\n"
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.1015625,
          "content": "node_modules\ncoverage\n.nyc_output\n.DS_Store\n*.log\n.vscode\n.idea\ndist\ncompiled\n.awcache\n.rpt2_cache\ndocs\n"
        },
        {
          "name": ".travis.yml",
          "type": "blob",
          "size": 0.5498046875,
          "content": "language: node_js\ncache:\n  directories:\n    - ~/.npm\nnotifications:\n  email: false\nnode_js:\n  - '10'\n  - '11'\n  - '8'\n  - '6'\nscript:\n  - npm run test:prod && npm run build\nafter_success:\n  - npm run travis-deploy-once \"npm run report-coverage\"\n  - if [ \"$TRAVIS_BRANCH\" = \"master\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then npm run travis-deploy-once \"npm run deploy-docs\"; fi\n  - if [ \"$TRAVIS_BRANCH\" = \"master\" -a \"$TRAVIS_PULL_REQUEST\" = \"false\" ]; then npm run travis-deploy-once \"npm run semantic-release\"; fi\nbranches:\n  except:\n    - /^v\\d+\\.\\d+\\.\\d+$/\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 0.9140625,
          "content": "We're really glad you're reading this, because we need volunteer developers to help this project come to fruition. üëè\n\n## Instructions\n\nThese steps will guide you through contributing to this project:\n\n- Fork the repo\n- Clone it and install dependencies\n\n\t\tgit clone https://github.com/YOUR-USERNAME/typescript-library-starter\n\t\tnpm install\n\nKeep in mind that after running `npm install` the git repo is reset. So a good way to cope with this is to have a copy of the folder to push the changes, and the other to try them.\n\nMake and commit your changes. Make sure the commands npm run build and npm run test:prod are working.\n\nFinally send a [GitHub Pull Request](https://github.com/alexjoverm/typescript-library-starter/compare?expand=1) with a clear list of what you've done (read more [about pull requests](https://help.github.com/articles/about-pull-requests/)). Make sure all of your commits are atomic (one feature per commit).\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.0419921875,
          "content": "Copyright 2017 --username-- <--usermail-->\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 14.451171875,
          "content": "# TypeScript library starter\n\n[![styled with prettier](https://img.shields.io/badge/styled_with-prettier-ff69b4.svg)](https://github.com/prettier/prettier)\n[![Greenkeeper badge](https://badges.greenkeeper.io/alexjoverm/typescript-library-starter.svg)](https://greenkeeper.io/)\n[![Travis](https://img.shields.io/travis/alexjoverm/typescript-library-starter.svg)](https://travis-ci.org/alexjoverm/typescript-library-starter)\n[![Coveralls](https://img.shields.io/coveralls/alexjoverm/typescript-library-starter.svg)](https://coveralls.io/github/alexjoverm/typescript-library-starter)\n[![Dev Dependencies](https://david-dm.org/alexjoverm/typescript-library-starter/dev-status.svg)](https://david-dm.org/alexjoverm/typescript-library-starter?type=dev)\n[![Donate](https://img.shields.io/badge/donate-paypal-blue.svg)](https://paypal.me/AJoverMorales)\n\nA starter project that makes creating a TypeScript library extremely easy.\n\n![](https://i.imgur.com/opUmHp0.png)\n\n### Usage\n\n```bash\ngit clone https://github.com/alexjoverm/typescript-library-starter.git YOURFOLDERNAME\ncd YOURFOLDERNAME\n\n# Run npm install and write your library name when asked. That's all!\nnpm install\n```\n\n**Start coding!** `package.json` and entry files are already set up for you, so don't worry about linking to your main file, typings, etc. Just keep those files with the same name.\n\n### Features\n\n - Zero-setup. After running `npm install` things will setup for you :wink:\n - **[RollupJS](https://rollupjs.org/)** for multiple optimized bundles following the [standard convention](http://2ality.com/2017/04/setting-up-multi-platform-packages.html) and [Tree-shaking](https://alexjoverm.github.io/2017/03/06/Tree-shaking-with-Webpack-2-TypeScript-and-Babel/)\n - Tests, coverage and interactive watch mode using **[Jest](http://facebook.github.io/jest/)**\n - **[Prettier](https://github.com/prettier/prettier)** and **[TSLint](https://palantir.github.io/tslint/)** for code formatting and consistency\n - **Docs automatic generation and deployment** to `gh-pages`, using **[TypeDoc](http://typedoc.org/)**\n - Automatic types `(*.d.ts)` file generation\n - **[Travis](https://travis-ci.org)** integration and **[Coveralls](https://coveralls.io/)** report\n - (Optional) **Automatic releases and changelog**, using [Semantic release](https://github.com/semantic-release/semantic-release), [Commitizen](https://github.com/commitizen/cz-cli), [Conventional changelog](https://github.com/conventional-changelog/conventional-changelog) and [Husky](https://github.com/typicode/husky) (for the git hooks)\n\n### Importing library\n\nYou can import the generated bundle to use the whole library generated by this starter:\n\n```javascript\nimport myLib from 'mylib'\n```\n\nAdditionally, you can import the transpiled modules from `dist/lib` in case you have a modular library:\n\n```javascript\nimport something from 'mylib/dist/lib/something'\n```\n\n### NPM scripts\n\n - `npm t`: Run test suite\n - `npm start`: Run `npm run build` in watch mode\n - `npm run test:watch`: Run test suite in [interactive watch mode](http://facebook.github.io/jest/docs/cli.html#watch)\n - `npm run test:prod`: Run linting and generate coverage\n - `npm run build`: Generate bundles and typings, create docs\n - `npm run lint`: Lints code\n - `npm run commit`: Commit using conventional commit style ([husky](https://github.com/typicode/husky) will tell you to use it if you haven't :wink:)\n\n### Excluding peerDependencies\n\nOn library development, one might want to set some peer dependencies, and thus remove those from the final bundle. You can see in [Rollup docs](https://rollupjs.org/#peer-dependencies) how to do that.\n\nGood news: the setup is here for you, you must only include the dependency name in `external` property within `rollup.config.js`. For example, if you want to exclude `lodash`, just write there `external: ['lodash']`.\n\n### Automatic releases\n\n_**Prerequisites**: you need to create/login accounts and add your project to:_\n - [npm](https://www.npmjs.com/)\n - [Travis CI](https://travis-ci.org)\n - [Coveralls](https://coveralls.io)\n\n_**Prerequisite for Windows**: Semantic-release uses\n**[node-gyp](https://github.com/nodejs/node-gyp)** so you will need to\ninstall\n[Microsoft's windows-build-tools](https://github.com/felixrieseberg/windows-build-tools)\nusing this command:_\n\n```bash\nnpm install --global --production windows-build-tools\n```\n\n#### Setup steps\n\nFollow the console instructions to install semantic release and run it (answer NO to \"Do you want a `.travis.yml` file with semantic-release setup?\").\n\n_Note: make sure you've setup `repository.url` in your `package.json` file_\n\n```bash\nnpm install -g semantic-release-cli\nsemantic-release-cli setup\n# IMPORTANT!! Answer NO to \"Do you want a `.travis.yml` file with semantic-release setup?\" question. It is already prepared for you :P\n```\n\nFrom now on, you'll need to use `npm run commit`, which is a convenient way to create conventional commits.\n\nAutomatic releases are possible thanks to [semantic release](https://github.com/semantic-release/semantic-release), which publishes your code automatically on [github](https://github.com/) and [npm](https://www.npmjs.com/), plus generates automatically a changelog. This setup is highly influenced by [Kent C. Dodds course on egghead.io](https://egghead.io/courses/how-to-write-an-open-source-javascript-library)\n\n### Git Hooks\n\nThere is already set a `precommit` hook for formatting your code with Prettier :nail_care:\n\nBy default, there are two disabled git hooks. They're set up when you run the `npm run semantic-release-prepare` script. They make sure:\n - You follow a [conventional commit message](https://github.com/conventional-changelog/conventional-changelog)\n - Your build is not going to fail in [Travis](https://travis-ci.org) (or your CI server), since it's runned locally before `git push`\n\nThis makes more sense in combination with [automatic releases](#automatic-releases)\n\n### FAQ\n\n#### `Array.prototype.from`, `Promise`, `Map`... is undefined?\n\nTypeScript or Babel only provides down-emits on syntactical features (`class`, `let`, `async/await`...), but not on functional features (`Array.prototype.find`, `Set`, `Promise`...), . For that, you need Polyfills, such as [`core-js`](https://github.com/zloirock/core-js) or [`babel-polyfill`](https://babeljs.io/docs/usage/polyfill/) (which extends `core-js`).\n\nFor a library, `core-js` plays very nicely, since you can import just the polyfills you need:\n\n```javascript\nimport \"core-js/fn/array/find\"\nimport \"core-js/fn/string/includes\"\nimport \"core-js/fn/promise\"\n...\n```\n\n#### What is `npm install` doing on first run?\n\nIt runs the script `tools/init` which sets up everything for you. In short, it:\n - Configures RollupJS for the build, which creates the bundles\n - Configures `package.json` (typings file, main file, etc)\n - Renames main src and test files\n\n#### What if I don't want git-hooks, automatic releases or semantic-release?\n\nThen you may want to:\n - Remove `commitmsg`, `postinstall` scripts from `package.json`. That will not use those git hooks to make sure you make a conventional commit\n - Remove `npm run semantic-release` from `.travis.yml`\n\n#### What if I don't want to use coveralls or report my coverage?\n\nRemove `npm run report-coverage` from `.travis.yml`\n\n## Resources\n\n- [Write a library using TypeScript library starter](https://dev.to/alexjoverm/write-a-library-using-typescript-library-starter) by [@alexjoverm](https://github.com/alexjoverm/)\n- [üì∫ Create a TypeScript Library using typescript-library-starter](https://egghead.io/lessons/typescript-create-a-typescript-library-using-typescript-library-starter) by [@alexjoverm](https://github.com/alexjoverm/)\n- [Introducing TypeScript Library Starter Lite](https://blog.tonysneed.com/2017/09/15/introducing-typescript-library-starter-lite/) by [@tonysneed](https://github.com/tonysneed)\n\n## Projects using `typescript-library-starter`\n\nHere are some projects that use `typescript-library-starter`:\n\n- [NOEL - A universal, human-centric, replayable event emitter](https://github.com/lifenautjoe/noel)\n- [droppable - A library to give file dropping super-powers to any HTML element.](https://github.com/lifenautjoe/droppable)\n- [redis-messaging-manager - Pubsub messaging library, using redis and rxjs](https://github.com/tomyitav/redis-messaging-manager)\n\n## Credits\n\nMade with :heart: by [@alexjoverm](https://twitter.com/alexjoverm) and all these wonderful contributors ([emoji key](https://github.com/kentcdodds/all-contributors#emoji-key)):\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore -->\n| [<img src=\"https://avatars.githubusercontent.com/u/6052309?v=3\" width=\"100px;\"/><br /><sub><b>Ciro</b></sub>](https://www.linkedin.com/in/ciro-ivan-agull√≥-guarinos-42109376)<br />[üíª](https://github.com/alexjoverm/typescript-library-starter/commits?author=k1r0s \"Code\") [üîß](#tool-k1r0s \"Tools\") | [<img src=\"https://avatars.githubusercontent.com/u/947523?v=3\" width=\"100px;\"/><br /><sub><b>Marius Schulz</b></sub>](https://blog.mariusschulz.com)<br />[üìñ](https://github.com/alexjoverm/typescript-library-starter/commits?author=mariusschulz \"Documentation\") | [<img src=\"https://avatars.githubusercontent.com/u/4152819?v=3\" width=\"100px;\"/><br /><sub><b>Alexander Odell</b></sub>](https://github.com/alextrastero)<br />[üìñ](https://github.com/alexjoverm/typescript-library-starter/commits?author=alextrastero \"Documentation\") | [<img src=\"https://avatars1.githubusercontent.com/u/8728882?v=3\" width=\"100px;\"/><br /><sub><b>Ryan Ham</b></sub>](https://github.com/superamadeus)<br />[üíª](https://github.com/alexjoverm/typescript-library-starter/commits?author=superamadeus \"Code\") | [<img src=\"https://avatars1.githubusercontent.com/u/8458838?v=3\" width=\"100px;\"/><br /><sub><b>Chi</b></sub>](https://consiiii.me)<br />[üíª](https://github.com/alexjoverm/typescript-library-starter/commits?author=ChinW \"Code\") [üîß](#tool-ChinW \"Tools\") [üìñ](https://github.com/alexjoverm/typescript-library-starter/commits?author=ChinW \"Documentation\") | [<img src=\"https://avatars2.githubusercontent.com/u/2856501?v=3\" width=\"100px;\"/><br /><sub><b>Matt Mazzola</b></sub>](https://github.com/mattmazzola)<br />[üíª](https://github.com/alexjoverm/typescript-library-starter/commits?author=mattmazzola \"Code\") [üîß](#tool-mattmazzola \"Tools\") | [<img src=\"https://avatars0.githubusercontent.com/u/2664047?v=3\" width=\"100px;\"/><br /><sub><b>Sergii Lischuk</b></sub>](http://leefrost.github.io)<br />[üíª](https://github.com/alexjoverm/typescript-library-starter/commits?author=Leefrost \"Code\") |\n| :---: | :---: | :---: | :---: | :---: | :---: | :---: |\n| [<img src=\"https://avatars1.githubusercontent.com/u/618922?v=3\" width=\"100px;\"/><br /><sub><b>Steve Lee</b></sub>](http;//opendirective.com)<br />[üîß](#tool-SteveALee \"Tools\") | [<img src=\"https://avatars0.githubusercontent.com/u/5127501?v=3\" width=\"100px;\"/><br /><sub><b>Flavio Corpa</b></sub>](http://flaviocorpa.com)<br />[üíª](https://github.com/alexjoverm/typescript-library-starter/commits?author=kutyel \"Code\") | [<img src=\"https://avatars2.githubusercontent.com/u/22561997?v=3\" width=\"100px;\"/><br /><sub><b>Dom</b></sub>](https://github.com/foreggs)<br />[üîß](#tool-foreggs \"Tools\") | [<img src=\"https://avatars1.githubusercontent.com/u/755?v=4\" width=\"100px;\"/><br /><sub><b>Alex Coles</b></sub>](http://alexbcoles.com)<br />[üìñ](https://github.com/alexjoverm/typescript-library-starter/commits?author=myabc \"Documentation\") | [<img src=\"https://avatars2.githubusercontent.com/u/1093738?v=4\" width=\"100px;\"/><br /><sub><b>David Khourshid</b></sub>](https://github.com/davidkpiano)<br />[üîß](#tool-davidkpiano \"Tools\") | [<img src=\"https://avatars0.githubusercontent.com/u/7225802?v=4\" width=\"100px;\"/><br /><sub><b>Aar√≥n Garc√≠a Herv√°s</b></sub>](https://aarongarciah.com)<br />[üìñ](https://github.com/alexjoverm/typescript-library-starter/commits?author=aarongarciah \"Documentation\") | [<img src=\"https://avatars2.githubusercontent.com/u/13683986?v=4\" width=\"100px;\"/><br /><sub><b>Jonathan Hart</b></sub>](https://www.stuajnht.co.uk)<br />[üíª](https://github.com/alexjoverm/typescript-library-starter/commits?author=stuajnht \"Code\") |\n| [<img src=\"https://avatars0.githubusercontent.com/u/13509204?v=4\" width=\"100px;\"/><br /><sub><b>Sanjiv Lobo</b></sub>](https://github.com/Xndr7)<br />[üìñ](https://github.com/alexjoverm/typescript-library-starter/commits?author=Xndr7 \"Documentation\") | [<img src=\"https://avatars3.githubusercontent.com/u/7473800?v=4\" width=\"100px;\"/><br /><sub><b>Stefan Aleksovski</b></sub>](https://github.com/sAleksovski)<br />[üíª](https://github.com/alexjoverm/typescript-library-starter/commits?author=sAleksovski \"Code\") | [<img src=\"https://avatars2.githubusercontent.com/u/8853426?v=4\" width=\"100px;\"/><br /><sub><b>dev.peerapong</b></sub>](https://github.com/devpeerapong)<br />[üíª](https://github.com/alexjoverm/typescript-library-starter/commits?author=devpeerapong \"Code\") | [<img src=\"https://avatars0.githubusercontent.com/u/22260722?v=4\" width=\"100px;\"/><br /><sub><b>Aaron Groome</b></sub>](http://twitter.com/Racing5372)<br />[üìñ](https://github.com/alexjoverm/typescript-library-starter/commits?author=Racing5372 \"Documentation\") | [<img src=\"https://avatars3.githubusercontent.com/u/180963?v=4\" width=\"100px;\"/><br /><sub><b>Aaron Reisman</b></sub>](https://github.com/lifeiscontent)<br />[üíª](https://github.com/alexjoverm/typescript-library-starter/commits?author=lifeiscontent \"Code\") | [<img src=\"https://avatars1.githubusercontent.com/u/32557482?v=4\" width=\"100px;\"/><br /><sub><b>kid-sk</b></sub>](https://github.com/kid-sk)<br />[üìñ](https://github.com/alexjoverm/typescript-library-starter/commits?author=kid-sk \"Documentation\") | [<img src=\"https://avatars0.githubusercontent.com/u/1503089?v=4\" width=\"100px;\"/><br /><sub><b>Andrea Gottardi</b></sub>](http://about.me/andreagot)<br />[üìñ](https://github.com/alexjoverm/typescript-library-starter/commits?author=AndreaGot \"Documentation\") |\n| [<img src=\"https://avatars3.githubusercontent.com/u/1375860?v=4\" width=\"100px;\"/><br /><sub><b>Yogendra Sharma</b></sub>](http://TechiesEyes.com)<br />[üìñ](https://github.com/alexjoverm/typescript-library-starter/commits?author=Yogendra0Sharma \"Documentation\") | [<img src=\"https://avatars3.githubusercontent.com/u/7407177?v=4\" width=\"100px;\"/><br /><sub><b>Rayan Salhab</b></sub>](http://linkedin.com/in/rayan-salhab/)<br />[üíª](https://github.com/alexjoverm/typescript-library-starter/commits?author=cyphercodes \"Code\") |\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors](https://github.com/kentcdodds/all-contributors) specification. Contributions of any kind are welcome!\n"
        },
        {
          "name": "code-of-conduct.md",
          "type": "blob",
          "size": 3.158203125,
          "content": "# Contributor Covenant Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to making participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, gender identity and expression, level of experience,\nnationality, personal appearance, race, religion, or sexual identity and\norientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming and inclusive language\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\nadvances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at alexjovermorales@gmail.com. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at [http://contributor-covenant.org/version/1/4][version]\n\n[homepage]: http://contributor-covenant.org\n[version]: http://contributor-covenant.org/version/1/4/\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 3.1689453125,
          "content": "{\n  \"name\": \"--libraryname--\",\n  \"version\": \"0.0.0\",\n  \"description\": \"\",\n  \"keywords\": [],\n  \"main\": \"dist/--libraryname--.umd.js\",\n  \"module\": \"dist/--libraryname--.es5.js\",\n  \"typings\": \"dist/types/--libraryname--.d.ts\",\n  \"files\": [\n    \"dist\"\n  ],\n  \"author\": \"--username-- <--usermail-->\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"\"\n  },\n  \"license\": \"MIT\",\n  \"engines\": {\n    \"node\": \">=6.0.0\"\n  },\n  \"scripts\": {\n    \"lint\": \"tslint  --project tsconfig.json -t codeFrame 'src/**/*.ts' 'test/**/*.ts'\",\n    \"prebuild\": \"rimraf dist\",\n    \"build\": \"tsc --module commonjs && rollup -c rollup.config.ts && typedoc --out docs --target es6 --theme minimal --mode file src\",\n    \"start\": \"rollup -c rollup.config.ts -w\",\n    \"test\": \"jest --coverage\",\n    \"test:watch\": \"jest --coverage --watch\",\n    \"test:prod\": \"npm run lint && npm run test -- --no-cache\",\n    \"deploy-docs\": \"ts-node tools/gh-pages-publish\",\n    \"report-coverage\": \"cat ./coverage/lcov.info | coveralls\",\n    \"commit\": \"git-cz\",\n    \"semantic-release\": \"semantic-release\",\n    \"semantic-release-prepare\": \"ts-node tools/semantic-release-prepare\",\n    \"precommit\": \"lint-staged\",\n    \"postinstall\": \"ts-node tools/init\",\n    \"travis-deploy-once\": \"travis-deploy-once\"\n  },\n  \"lint-staged\": {\n    \"{src,test}/**/*.ts\": [\n      \"prettier --write\",\n      \"git add\"\n    ]\n  },\n  \"config\": {\n    \"commitizen\": {\n      \"path\": \"node_modules/cz-conventional-changelog\"\n    }\n  },\n  \"jest\": {\n    \"transform\": {\n      \".(ts|tsx)\": \"ts-jest\"\n    },\n    \"testEnvironment\": \"node\",\n    \"testRegex\": \"(/__tests__/.*|\\\\.(test|spec))\\\\.(ts|tsx|js)$\",\n    \"moduleFileExtensions\": [\n      \"ts\",\n      \"tsx\",\n      \"js\"\n    ],\n    \"coveragePathIgnorePatterns\": [\n      \"/node_modules/\",\n      \"/test/\"\n    ],\n    \"coverageThreshold\": {\n      \"global\": {\n        \"branches\": 90,\n        \"functions\": 95,\n        \"lines\": 95,\n        \"statements\": 95\n      }\n    },\n    \"collectCoverageFrom\": [\n      \"src/*.{js,ts}\"\n    ]\n  },\n  \"prettier\": {\n    \"semi\": false,\n    \"singleQuote\": true\n  },\n  \"commitlint\": {\n    \"extends\": [\n      \"@commitlint/config-conventional\"\n    ]\n  },\n  \"devDependencies\": {\n    \"@commitlint/cli\": \"^7.1.2\",\n    \"@commitlint/config-conventional\": \"^7.1.2\",\n    \"@types/jest\": \"^23.3.2\",\n    \"@types/node\": \"^10.11.0\",\n    \"colors\": \"^1.3.2\",\n    \"commitizen\": \"^3.0.0\",\n    \"coveralls\": \"^3.0.2\",\n    \"cross-env\": \"^5.2.0\",\n    \"cz-conventional-changelog\": \"^2.1.0\",\n    \"husky\": \"^1.0.1\",\n    \"jest\": \"^23.6.0\",\n    \"jest-config\": \"^23.6.0\",\n    \"lint-staged\": \"^8.0.0\",\n    \"lodash.camelcase\": \"^4.3.0\",\n    \"prettier\": \"^1.14.3\",\n    \"prompt\": \"^1.0.0\",\n    \"replace-in-file\": \"^3.4.2\",\n    \"rimraf\": \"^2.6.2\",\n    \"rollup\": \"^0.67.0\",\n    \"rollup-plugin-commonjs\": \"^9.1.8\",\n    \"rollup-plugin-json\": \"^3.1.0\",\n    \"rollup-plugin-node-resolve\": \"^3.4.0\",\n    \"rollup-plugin-sourcemaps\": \"^0.4.2\",\n    \"rollup-plugin-typescript2\": \"^0.18.0\",\n    \"semantic-release\": \"^15.9.16\",\n    \"shelljs\": \"^0.8.3\",\n    \"travis-deploy-once\": \"^5.0.9\",\n    \"ts-jest\": \"^23.10.2\",\n    \"ts-node\": \"^7.0.1\",\n    \"tslint\": \"^5.11.0\",\n    \"tslint-config-prettier\": \"^1.15.0\",\n    \"tslint-config-standard\": \"^8.0.1\",\n    \"typedoc\": \"^0.12.0\",\n    \"typescript\": \"^3.0.3\"\n  }\n}\n"
        },
        {
          "name": "rollup.config.ts",
          "type": "blob",
          "size": 1.20703125,
          "content": "import resolve from 'rollup-plugin-node-resolve'\nimport commonjs from 'rollup-plugin-commonjs'\nimport sourceMaps from 'rollup-plugin-sourcemaps'\nimport camelCase from 'lodash.camelcase'\nimport typescript from 'rollup-plugin-typescript2'\nimport json from 'rollup-plugin-json'\n\nconst pkg = require('./package.json')\n\nconst libraryName = '--libraryname--'\n\nexport default {\n  input: `src/${libraryName}.ts`,\n  output: [\n    { file: pkg.main, name: camelCase(libraryName), format: 'umd', sourcemap: true },\n    { file: pkg.module, format: 'es', sourcemap: true },\n  ],\n  // Indicate here external modules you don't wanna include in your bundle (i.e.: 'lodash')\n  external: [],\n  watch: {\n    include: 'src/**',\n  },\n  plugins: [\n    // Allow json resolution\n    json(),\n    // Compile TypeScript files\n    typescript({ useTsconfigDeclarationDir: true }),\n    // Allow bundling cjs modules (unlike webpack, rollup doesn't understand cjs)\n    commonjs(),\n    // Allow node_modules resolution, so you can use 'external' to control\n    // which external modules to include in the bundle\n    // https://github.com/rollup/rollup-plugin-node-resolve#usage\n    resolve(),\n\n    // Resolve source maps to the original source\n    sourceMaps(),\n  ],\n}\n"
        },
        {
          "name": "src",
          "type": "tree",
          "content": null
        },
        {
          "name": "test",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        },
        {
          "name": "tsconfig.json",
          "type": "blob",
          "size": 0.4716796875,
          "content": "{\n  \"compilerOptions\": {\n    \"moduleResolution\": \"node\",\n    \"target\": \"es5\",\n    \"module\":\"es2015\",\n    \"lib\": [\"es2015\", \"es2016\", \"es2017\", \"dom\"],\n    \"strict\": true,\n    \"sourceMap\": true,\n    \"declaration\": true,\n    \"allowSyntheticDefaultImports\": true,\n    \"experimentalDecorators\": true,\n    \"emitDecoratorMetadata\": true,\n    \"declarationDir\": \"dist/types\",\n    \"outDir\": \"dist/lib\",\n    \"typeRoots\": [\n      \"node_modules/@types\"\n    ]\n  },\n  \"include\": [\n    \"src\"\n  ]\n}\n"
        },
        {
          "name": "tslint.json",
          "type": "blob",
          "size": 0.0791015625,
          "content": "{\n  \"extends\": [\n    \"tslint-config-standard\",\n    \"tslint-config-prettier\"\n  ]\n}"
        }
      ]
    }
  ]
}