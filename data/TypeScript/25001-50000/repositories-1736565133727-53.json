{
  "metadata": {
    "timestamp": 1736565133727,
    "page": 53,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "hasura/graphql-engine",
      "stars": 31262,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".devcontainer",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.1787109375,
          "content": "/.direnv\n/.git\n/console/node_modules\n/dist-newstyle\n/server/tests-py/.hasura-dev-python-venv\n/server/tests-py/.pytest-cache\n/server/tests-py/__pycache__\n/server/tests-py/node_modules\n"
        },
        {
          "name": ".envrc",
          "type": "blob",
          "size": 1.4609375,
          "content": "#!/usr/bin/env bash\n\n# This file provides some tooling on an opt-in basis via `direnv`\n# (https://direnv.net/)\n\n# To use the functionality here, create an `.envrc.local` file in this folder\n# that runs the functions you need.\n# There is an example in `.envrc.local.example` you can start with\n\n# `use nvm`\n# if `nvm` is installed, use it to select the right node.js version\n# as defined in the `.nvmrc` file\nuse_nvm() {\n  local NVM_DIR\n  if [[ -z \"${XDG_CONFIG_HOME:-}\" ]]; then\n    NVM_DIR=\"${HOME}/.nvm\"\n  else\n    NVM_DIR=\"${XDG_CONFIG_HOME}/nvm\"\n  fi\n  if ! [[ -d \"$NVM_DIR\" ]]; then\n    echo >&2 \"ERROR: nvm not found. Could not set the node.js version.\"\n    return 1\n  fi\n\n  # shellcheck source=/dev/null\n  [[ -s \"$NVM_DIR/nvm.sh\" ]] && \\. \"$NVM_DIR/nvm.sh\" # This loads nvm\n  nvm use\n}\n\n# `use ghcup`\n# if `ghcup` is available, use it to install and set the GHC version\n# as defined in the `.ghcversion` file\nuse_ghcup() {\n  local GHC_VERSION GHCUP_PATH\n  GHC_VERSION=\"$(<.ghcversion)\"\n  GHCUP_PATH=\"$(which ghcup)\"\n  if [[ -z \"$GHC_VERSION\" ]]; then\n    echo >&2 'ERROR: Required GHC version not found.'\n    return 1\n  fi\n  if [[ -z \"$GHCUP_PATH\" ]]; then\n    echo 'ERROR: ghcup not found. Could not set the GHC version.'\n    return 1\n  fi\n\n  if ! ghcup whereis ghc \"$GHC_VERSION\" &> /dev/null; then\n    ghcup install ghc \"$GHC_VERSION\"\n  fi\n  ghcup set ghc \"$GHC_VERSION\"\n}\n\nwatch_file server/VERSIONS.json\n\n# this line sources your `.envrc.local` file\nsource_env_if_exists .envrc.local\n"
        },
        {
          "name": ".envrc.local.example",
          "type": "blob",
          "size": 1.087890625,
          "content": "#!/usr/bin/env bash\n\n### This is an example .envrc.local file you can start with. Uncomment the parts\n### you'd like to use, and copy this to `.envrc.local`.\n\n### Enable providing tooling with the Nix package manager\n### (read the commentary in flake.nix first)\n# use flake\n\n### Enable providing NodeJS versions with `nvm`\n# use nvm\n\n### Enable providing GHC versions with `ghcup`\n# use ghcup\n\n### Raise open file limit to stop `api-tests` struggling\n# ulimit -n 10240\n\n### Export key for running BigQuery tests locally. This depends on a\n### `bigquery-service-account-key.json` key living in the directory above\n### the `graphql-engine` repository.\n# HASURA_BIGQUERY_PROJECT_ID='regency-polecat-beehive'\n# export HASURA_BIGQUERY_PROJECT_ID\n# HASURA_BIGQUERY_SERVICE_KEY=$(cat ../bigquery-service-account.json)\n# export HASURA_BIGQUERY_SERVICE_KEY\n\n### Export EE license key for running pro tests locally\n### This depends on a `ee-license-key.txt` living in the directory above\n### the `graphql-engine` repository\n# HASURA_GRAPHQL_EE_LICENSE_KEY=$(cat ../ee-license-key.txt)\n# export HASURA_GRAPHQL_EE_LICENSE_KEY\n"
        },
        {
          "name": ".ghcversion",
          "type": "blob",
          "size": 0.0068359375,
          "content": "9.10.1\n"
        },
        {
          "name": ".git-blame-ignore-revs",
          "type": "blob",
          "size": 0.1923828125,
          "content": "11a454c2d69bb05c3471be0d04d2282cc93a557e # reformat with Ormolu\n342391f39dd68dd7922ef29215e150dca7811975 # reformat with Ormolu v0.5.0.1\nfb19d80e16092186c6aa61bf90b3d1a55644a5a7 # Prettier reformat"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.1044921875,
          "content": "dist\ndist-*\ncabal-dev\n/result\n*.o\n*.hi\n*.chi\n*.chs.h\n*.dyn_o\n*.dyn_hi\n.hpc\n.hsenv\n.cabal-sandbox/\ncabal.sandbox.config\n*.prof\n*.aux\n*.hp\n*.eventlog\n.stack-work/\ncabal.project.local\ncabal.project.local~\n.HTF/\n.ghc.environment.*\ntemp-console-hasura/\n.DS_Store\n.idea\ntags\n\n# tool-agnostic personal ignore files\n.direnv\n.envrc.local\n.ignore\n.vscode\n.vim/\n.history/\n*.swp\n\n# Test artifacts\n*.tix\n\n# Docs artifacts\ndocs/_build/\ndocs/_ext/\n\n# cabal-plan artifacts\nlicenses/\n\n# Ignore benchmark report output\nserver/benchmarks/benchmark_sets/*/report.json\nserver/benchmarks/venv\n\n# ignored so that everyone can have their own hie.yaml\nhie.yaml\n\n# This file is required to build the server but we want to explicitly ignore\n# it in the repo. See server/graphql-engine.cabal for details\nserver/CURRENT_VERSION\n\n# ignored to prevent accidental unzips of the .gz version from being committed\nChinook.xml\nchinook.db\n\n# log output from tests-hspec runs\ntests-hspec.log\n\n# Test run results from Sandwich-powered tests\ntest_runs/\n\n# dependencies\nnode_modules\n\n# ticky profiles, e.g. from dev.sh --prof-ticky\n*.ticky\n*.ticky.modules\n\nyarn-error.log\n"
        },
        {
          "name": ".hlint.yaml",
          "type": "blob",
          "size": 13.1943359375,
          "content": "# HLint configuration file\n# https://github.com/ndmitchell/hlint\n\n################################################################################\n# Global hlint configuration\n\n- arguments: [-XQuasiQuotes]\n\n\n################################################################################\n# Restrictions on functions\n\n- functions:\n\n      # Hspec restrictions\n      - name: \"Test.Hspec.focus\"\n        within: []\n        message: \"Specs with focusing should only be used during development\"\n\n      - name: \"Test.Hspec.fit\"\n        within: []\n        message: \"Specs with focusing should only be used during development\"\n\n      - name: \"Test.Hspec.fspecify\"\n        within: []\n        message: \"Specs with focusing should only be used during development\"\n\n      - name: \"Test.Hspec.fdescribe\"\n        within: []\n        message: \"Specs with focusing should only be used during development\"\n\n      - name: \"Test.Hspec.fcontext\"\n        within: []\n        message: \"Specs with focusing should only be used during development\"\n\n      - name: \"Harness.TestEnvironment.testLogHarness\"\n        within: []\n        message: \"testLogHarness should only be ad-hoc during development. Please define proper log message data types for published code\"\n\n      # Harness restrictions\n      - name: \"Harness.Logging.LogHarness\"\n        within: []\n        message: \"LogHarness should only be ad-hoc during development. Please define proper log message data types for published code\"\n\n      - name: \"Harness.Logging.Messages.LogHarness\"\n        within: []\n        message: \"LogHarness should only be ad-hoc during development. Please define proper log message data types for published code\"\n\n      - name: \"Harness.TestEnvironment.testLogTrace\"\n        within: [\"Test.**\"]\n        message: \"testLogTrace should only be used outside the test-harness package\"\n\n      - name: \"Harness.Logging.LogTrace\"\n        within: [\"Test.**\"]\n        message: \"LogTrace should only be used outside the test-harness package\"\n\n      - name: \"Harness.Logging.Messages.LogTrace\"\n        within: [\"Test.**\"]\n        message: \"LogTrace should only be used outside the test-harness package\"\n\n      - name: \"Harness.Logging.logTrace\"\n        within: [\"Test.**\"]\n        message: \"logTrace should only be used outside the test-harness package\"\n\n      - name: \"Harness.Logging.Messages.logTrace\"\n        within: [\"Test.**\"]\n        message: \"logTrace should only be used outside the test-harness package\"\n\n      # General restrictions\n      - name: \"undefined\"\n        within: []\n        message: \"undefined isn't allowed\"\n\n      ## Trace debugging\n      - name: \"ltrace\"\n        within: []\n        message: \"ltrace left in code\"\n      - name: \"ltraceM\"\n        within: []\n        message: \"ltraceM left in code\"\n      - name: \"traceToFile\"\n        within: []\n        message: \"traceToFile left in code\"\n      - name: \"traceToFileM\"\n        within: []\n        message: \"traceToFileM left in code\"\n\n################################################################################\n# Ignore some builtin hints\n\n- ignore: {name: Reduce duplication}\n- ignore: {name: Redundant $}\n- ignore: {name: Redundant bracket}\n- ignore: {name: Use fmap}\n- ignore: {name: Use first}\n- ignore: {name: Use if}\n- ignore: {name: Redundant <$>}\n- ignore: {name: Use ++}\n- ignore: {name: Use const}\n- ignore: {name: Eta reduce}\n- ignore: {name: Redundant multi-way if}\n- ignore: {name: Use newtype instead of data}\n- ignore: {name: Use bimap}\n- ignore: {name: Use fromRight}\n- ignore: {name: Use $>}\n- ignore: {name: Use <$>}\n- ignore: {name: \"Use ?~\"}\n- ignore: {name: Use <=<}\n- ignore: {name: Use sequenceA}\n- ignore: {name: Use camelCase}\n- ignore: {name: Redundant return}\n- ignore: {name: Use <$>, within: [Hasura.RQL.DDL.Metadata, Hasura.Backends.MSSQL.Types.Instances]}\n- ignore: {name: Functor law, within: Hasura.Server.AuthSpec}\n- ignore: {name: Use underscore} # suggests to format port numbers\n# These three need to be disabled under 'simplified subsumption' unfortunately.\n# If we want to use -XDeepSubsumption these can be reenabled and lints fixed\n# See: https://github.com/mpickering/ghc-proposals/blob/deep-subsumption/proposals/0000-deep-subsumption.rst\n- ignore: {name: Avoid lambda}\n- ignore: {name: Redundant lambda}\n- ignore: {name: Avoid lambda using `infix`}\n\n\n################################################################################\n# Custom rules\n\n- suggest: {lhs: onJust, rhs: for_}\n\n- group:\n    name: hasura-prelude\n    enabled: true\n    imports:\n    - package base\n    rules:\n    - error: {lhs: \"a == []\", rhs: \"null a\"}\n    - error: {lhs: \"a /= []\", rhs: \"not (null a)\"}\n    - error: {lhs: \"maybe b return a\", rhs: \"onNothing a b\"}\n    - error: {lhs: \"maybe b pure a\", rhs: \"onNothing a b\"}\n    - error: {lhs: \"maybe (return ()) b a\", rhs: \"for_ a b\"}\n    - error: {lhs: \"maybe (pure ()) b a\", rhs: \"for_ a b\"}\n    - error: {lhs: \"either b return a\", rhs: \"onLeft a b\"}\n    - error: {lhs: \"either b pure a\", rhs: \"onLeft a b\"}\n    - error: {lhs: \"maybe (f x) f\", rhs: \"f . fromMaybe x\"}\n    - error: {lhs: \"maybe (f x) f\", rhs: \"f . fromMaybe x\"}\n    - error: {lhs: \"either (f . g) (f . h)\", rhs: \"f . either g h\"}\n    - error: {lhs: \"either (f . g) (f . h)\", rhs: \"f . either g h\"}\n    - error: {lhs: \"onNothing x (return y)\", rhs: \"return (fromMaybe y x)\"}\n    - error: {lhs: \"onNothing x (pure y)\", rhs: \"pure (fromMaybe y x)\"}\n    - error: {lhs: \"onLeft x (return . f)\", rhs: \"return (either f id x)\"}\n    - error: {lhs: \"onLeft x (pure . f)\", rhs: \"pure (either f id x)\"}\n    - error: {lhs: \"case x of {Right a -> pure a; Left c -> d}\", rhs: \"onLeft x (\\\\ c -> d)\"}\n    - error: {lhs: \"case x of {Left c -> d; Right a -> pure a}\", rhs: \"onLeft x (\\\\ c -> d)\"}\n    - error: {lhs: \"case x of {Right a -> return a; Left c -> d}\", rhs: \"onLeft x (\\\\ c -> d)\"}\n    - error: {lhs: \"case x of {Left c -> d; Right a -> return a}\", rhs: \"onLeft x (\\\\ c -> d)\"}\n    - error: {lhs: \"case x of {Nothing -> a; Just b -> pure b}\", rhs: \"onNothing x a\"}\n    - error: {lhs: \"case x of {Just b -> pure b; Nothing -> a}\", rhs: \"onNothing x a\"}\n    - error: {lhs: \"case x of {Nothing -> a; Just b -> return b}\", rhs: \"onNothing x a\"}\n    - error: {lhs: \"case x of {Just b -> return b; Nothing -> a}\", rhs: \"onNothing x a\"}\n    - error: {lhs: \"if x then pure (); else y\", rhs: \"unless x y\"}\n    - error: {lhs: \"if x then return (); else y\", rhs: \"unless x y\"}\n    - error: {lhs: \"if x then y; else pure ()\", rhs: \"when x y\"}\n    - error: {lhs: \"if x then y; else return ()\", rhs: \"when x y\"}\n    - error: {lhs: \"unless (not x)\", rhs: \"when x\"}\n    - error: {lhs: \"when (not x)\", rhs: \"unless x\"}\n    - error: {lhs: \"arr id\", rhs: \"returnA\"}\n    - suggest: {lhs: \"not x && not y\", rhs: \"not (x || y)\"}\n    - suggest: {lhs: \"not x || not y\", rhs: \"not (x && y)\"}\n    - error: {lhs: \"Data.Text.pack (Prelude.show x)\", rhs: \"Hasura.Prelude.tshow x\"}\n    - error: {lhs: \"map f xs == map f ys\",   rhs: \"liftEq ((==) `on` f)\", note: \"This is liable to be faster\"}\n    - suggest: {lhs: \"fmap f xs == fmap f ys\", rhs: \"liftEq ((==) `on` f)\", note: \"This is liable to be faster\"}\n    # mapKeys:\n    - error: {lhs: \"Data.HashMap.Strict.Extended.fromList . map (first f) . Data.HashMap.Strict.Extended.toList\", rhs: \"mapKeys f\"}\n    - error: {lhs: \"Data.HashMap.Strict.fromList . map (first f) . Data.HashMap.Strict.toList\", rhs: \"mapKeys f\"}\n    - error: {lhs: \"Data.HashMap.Strict.Extended.fromList $ map (first f) $ Data.HashMap.Strict.Extended.toList x\", rhs: \"mapKeys f x\"}\n    - error: {lhs: \"Data.HashMap.Strict.fromList $ map (first f) $ Data.HashMap.Strict.toList x\", rhs: \"mapKeys f x\"}\n    # MaybeT\n    - error: {lhs: \"MaybeT (pure x)\",         rhs: \"hoistMaybe x\"}\n    - error: {lhs: \"MaybeT (return x)\",       rhs: \"hoistMaybe x\"}\n    - error: {lhs: \"MaybeT (pure Nothing)\",   rhs: \"Control.Applicative.empty\"}\n    - error: {lhs: \"MaybeT (return Nothing)\", rhs: \"Control.Applicative.empty\"}\n    # catMaybes\n    - error: {lhs: \"Data.HashMap.Strict.mapMaybe id\", rhs: \"Data.HashMap.Strict.Extended.catMaybes\"}\n    - error: {lhs: \"Data.HashMap.Strict.Extended.mapMaybe id\", rhs: \"Data.HashMap.Strict.Extended.catMaybes\"}\n    - error: {lhs: \"Data.HashMap.Strict.InsOrd.mapMaybe id\", rhs: \"Data.HashMap.Strict.InsOrd.Extended.catMaybes\"}\n    - error: {lhs: \"Data.HashMap.Strict.InsOrd.Extended.mapMaybe id\", rhs: \"Data.HashMap.Strict.InsOrd.Extended.catMaybes\"}\n    - error: {lhs: \"Data.IntMap.Strict.mapMaybe id\", rhs: \"Data.HashMap.Strict.Extended.catMaybes\"}\n    - error: {lhs: \"Data.IntMap.Strict.Extended.mapMaybe id\", rhs: \"Data.HashMap.Strict.Extended.catMaybes\"}\n\n- group:\n    name: data-text-extended\n    enabled: true\n    imports:\n    - package base\n    rules:\n    - error: {lhs: \"Data.Text.intercalate \\\", \\\" x\", rhs: \"commaSeparated x\", note: \"From Data.Text.Extended\"}\n    - error: {lhs: \"Data.Text.Extended.intercalate \\\", \\\" x\", rhs: \"commaSeparated x\"}\n\n- group:\n    name: mssql-transaction\n    enabled: true\n    imports:\n    - package base\n    rules:\n    - error: {lhs: \"Database.MSSQL.runTxE id tx pool\", rhs: \"Database.MSSQL.runTx tx pool\"}\n    - error: {lhs: \"Database.MSSQL.unitQueryE id q\", rhs: \"Database.MSSQL.unitQuery q\"}\n    - error: {lhs: \"Database.MSSQL.singleRowQueryE id tx pool\", rhs: \"Database.MSSQL.singleRowQuery tx pool\"}\n    - error: {lhs: \"Database.MSSQL.multiRowQueryE id tx pool\", rhs: \"Database.MSSQL.multiRowQuery tx pool\"}\n\n- group:\n    name: unsafe\n    enabled: true\n    imports:\n      - package base\n    rules:\n      - error:\n          name: \"avoid Language.GraphQL.Draft.Syntax.unsafeMkName\"\n          lhs: \"Language.GraphQL.Draft.Syntax.unsafeMkName\"\n          rhs: \"Language.GraphQL.Draft.Syntax.mkName\"\n          note: \"avoid unsafeMkName if possible\"\n      - error:\n          name: \"avoid Control.Concurrent.threadDelay\"\n          lhs: \"Control.Concurrent.threadDelay\"\n          rhs: \"Control.Concurrent.Extended.sleep\"\n          note: \"Please use `sleep` instead (and read the docs!)\"\n      - error:\n          name: \"avoid InsecurelyShowDetails\"\n          lhs: \"Hasura.Backends.BigQuery.Execute.InsecurelyShowDetails\"\n          rhs: \"Hasura.Backends.BigQuery.Execute.HideDetails\"\n          note: \"Using 'InsecurelyShowDetails' could potentially expose sensitive information.\"\n      - suggest:\n          name: \"avoid Control.Concurrent.Async.Lifted.Safe.async\"\n          lhs: \"Control.Concurrent.Async.Lifted.Safe.async\"\n          rhs: \"Control.Concurrent.Async.Lifted.Safe.withAsync\"\n          note: \"Please use 'Control.Control.Concurrent.Async.Lifted.Safe.withAsync' or our 'forkImmortal' instead for more robust threading.\"\n      - suggest:\n          name: \"avoid Control.Concurrent.forkIO\"\n          lhs: \"Control.Concurrent.forkIO\"\n          rhs: \"Control.Concurrent.Async.Lifted.Safe.withAsync\"\n          note: \"Please use 'Control.Control.Concurrent.Async.Lifted.Safe.withAsync' or our 'forkImmortal' instead for more robust threading.\"\n      - suggest:\n          name: \"avoid getEnvironment\"\n          lhs: \"System.Environment.getEnvironment\"\n          rhs: \"env_from_function_argument\"\n          note: \"Instead of 'getEnvironment', use the environment from the server context, typically accessible as a function argument\"\n      - suggest:\n          name: \"avoid getEnvironment\"\n          lhs: \"Data.Environment.getEnvironment\"\n          rhs:  \"env_from_function_argument\"\n          note: \"Instead of 'getEnvironment', use the environment from the server context, typically accessible as a function argument\"\n\n\n################################################################################\n# Exceptions to our own rules\n\n- ignore:\n    within: [\"Harness.**\", \"Spec\", \"Spec.**\", \"SpecHook\", \"Test.**\", \"Hasura.QuickCheck.**\"]\n    name:\n      - \"avoid Control.Concurrent.threadDelay\"\n      - \"avoid Control.Concurrent.Async.Lifted.Safe.async\"\n      - \"avoid Control.Concurrent.forkIO\"\n      - \"avoid getEnvironment\"\n      - \"avoid Language.GraphQL.Draft.Syntax.unsafeMkName\"\n\n- ignore:\n    within: [\"Language.GraphQL.Draft.**\"]\n    name: \"avoid Language.GraphQL.Draft.Syntax.unsafeMkName\"\n\n\n################################################################################\n# Import conventions\n\n- modules:\n  - name:\n    - Data.Aeson\n    - Data.Aeson.Extended\n    as: J\n  - name:\n    - Data.HashMap.Strict\n    - Data.HashMap.Strict.Extended\n    as: HashMap\n  - name:\n    - Data.HashMap.Strict.InsOrd\n    - Data.HashMap.Strict.InsOrd.Extended\n    as: InsOrdHashMap\n\n################################################################################\n# Import restrictions\n\n# We limit the place where the module `Hasura.RQL.Types.Instances` can be\n# imported in order to make it easier to avoid module cycles.\n#\n# This check is initially quite limited, and will need to be extended to cover\n# other instance-defining modules as well:\n#\n#  * RQL.Types.Metadata.Instances\n#  * Hasura.GraphQL.Transport.Instances\n#  * Hasura.GraphQL.Execute.Instances\n#  * Hasura.GraphQL.Schema.Instances\n#  * Hasura.Server.API.Instances\n#  * Hasura.RQL.Types.SchemaCache.Instances\n\n- modules:\n    - name: Hasura.RQL.Types.Instances\n      within: [\n                Hasura.RQL.IR.Select,\n                Hasura.RQL.Types.Metadata.Object,\n                Hasura.RQL.Types.Relationships.Remote,\n                Hasura.RQL.Types.SchemaCacheTypes,\n                Hasura.RQL.Types.Source,\n                Hasura.GraphQL.Schema.Build.UpdateSpec,\n                Test.Parser.Delete,\n                Test.Parser.Internal\n              ]\n"
        },
        {
          "name": ".kodiak.toml",
          "type": "blob",
          "size": 6.552734375,
          "content": "###############################################################################\n## Configuration for auto-merge / auto-update bot\n##\n## See: https://kodiakhq.com/\n###############################################################################\n\n# Kodiak's configuration file should be placed at `.kodiak.toml` (repository\n# root) or `.github/.kodiak.toml`.\n# docs: https://kodiakhq.com/docs/config-reference\n\n# version is the only required setting in a kodiak config.\n# `1` is the only valid setting for this field.\nversion = 1\n\n[merge]\n# Label to enable Kodiak to merge a PR.\n\n# By default, Kodiak will only act on PRs that have this label. You can disable\n# this requirement via `merge.require_automerge_label`.\nautomerge_label = \"auto-update-auto-merge\"\n\n# Require that the automerge label (`merge.automerge_label`) be set for Kodiak\n# to merge a PR.\n#\n# When disabled, Kodiak will immediately attempt to merge any PR that passes all\n# GitHub branch protection requirements.\nrequire_automerge_label = true\n\n# When the label is applied to a pull request, the pull request will be placed at the front of the merge queue.\npriority_merge_label = \"priority-merge\"\n\n# If a PR's title matches this regex, Kodiak will not merge the PR. This is\n# useful to prevent merging work-in-progress PRs.\n#\n# Setting `merge.blocking_title_regex = \"\"` disables this option.\nblocking_title_regex = \"\" # default: \"^WIP:.*\", options: \"\" (disables regex), a regex string (e.g. \".*DONT\\s*MERGE.*\")\n\n# Kodiak will not merge a PR with any of these labels.\nblocking_labels = [\"s/do-not-merge\", \"s/wip\"] # default: []\n\n# Choose merge method for Kodiak to use.\n#\n# Kodiak will report a configuration error if the selected merge method is\n# disabled for a repository.\n#\n# If you're using the \"Require signed commits\" GitHub Branch Protection setting\n# to require commit signatures, \"merge\" or \"squash\" are the only compatible options. \"rebase\" will cause Kodiak to raise a configuration error.\nmethod = \"squash\" # default: \"merge\", options: \"merge\", \"squash\", \"rebase\"\n\n# Once a PR is merged, delete the branch. This option behaves like the GitHub\n# repository setting \"Automatically delete head branches\", which automatically\n# deletes head branches after pull requests are merged.\ndelete_branch_on_merge = true # default: false\n\n# If there is a merge conflict, make a comment on the PR and remove the\n# automerge label. This option only applies when `merge.require_automerge_label`\n# is enabled.\nnotify_on_conflict = true # default: true\n\n# Don't wait for in-progress status checks on a PR to finish before updating the\n# branch.\noptimistic_updates = true # default: true\n\n# Don't wait for specified status checks when merging a PR. If a configured\n# status check is incomplete when a PR is being merged, Kodiak will skip the PR.\n# Use this option for status checks that run indefinitely, like deploy jobs or\n# the WIP GitHub App.\ndont_wait_on_status_checks = [\"checking required reviews\",\"Required reviews\"] # default: [], options: list of check names (e.g. [\"ci/circleci: lint_api\"])\n\n# If a PR is passing all checks and is able to be merged, merge it without\n# placing it in the merge queue. This option adds some unfairness where PRs\n# waiting in the queue the longest are not served first.\nprioritize_ready_to_merge = true # default: false\n\n# Never merge a PR. This option can be used with `update.always` to\n# automatically update a PR without merging.\ndo_not_merge = false # default: false\n\n[merge.message]\n# By default (`\"github_default\"`), GitHub uses the title of a PR's first commit\n# for the merge commit title. `\"pull_request_title\"` uses the PR title for the\n# merge commit.\ntitle = \"pull_request_title\" # default: \"github_default\", options: \"github_default\", \"pull_request_title\"\n\n# By default (`\"github_default\"`), GitHub combines the titles of a PR's commits\n# to create the body text of a merge commit. `\"pull_request_body\"` uses the\n# content of the PR to generate the body content while `\"empty\"` sets an empty\n# body.\nbody = \"pull_request_body\" # default: \"github_default\", options: \"github_default\", \"pull_request_body\", \"empty\"\n\n# Append the Pull Request URL to the merge message. Makes navigating to the PR\n# from the commit easier.\n#### NOTE: 'true' required for benchmarks in CI:\ninclude_pull_request_url = true # default: false\n\n# Add the PR number to the merge commit title. This setting replicates GitHub's\n# behavior of automatically adding the PR number to the title of merges created\n# through the UI. This option only applies when `merge.message.title` does not\n# equal `\"github_default\"`.\n### NOTE: if this is set to true github links to unrelated OSS issues, which is confusing\ninclude_pr_number = false # default: true\n\n# Control the text used in the merge commit. The GitHub default is markdown, but\n# `\"plain_text\"` or `\"html\"` can be used to render the pull request body as text\n# or HTML. This option only applies when `merge.message.body = \"pull_request_body\"`.\nbody_type = \"markdown\" # default: \"markdown\", options: \"plain_text\", \"markdown\", \"html\"\n\n\n# Strip HTML comments (`<!-- some HTML comment -->`) from merge commit body.\n# This setting is useful for stripping HTML comments created by PR templates.\n# This option only applies when `merge.message.body_type = \"markdown\"`.\nstrip_html_comments = true # default: false\n\n# Remove all content before the configured string in the pull request body.\n# This setting is useful when we want to include only a part of the pull request\n# description as the commit message.\n# This option only applies when `merge.message.body_type = \"markdown\"`.\ncut_body_before = \"<!-- kodiak-commit-message-body-start: do not remove/edit this line -->\"\n\ninclude_coauthors = true\n\n[update]\n\n# Update a PR whenever out of date with the base branch. The PR will be updated\n# regardless of merge requirements (e.g. failing status checks, missing reviews,\n# blacklist labels).\n#\n# Kodiak will only update PRs with the `merge.automerge_label` label or if\n# `update.require_automerge_label = false`.\n#\n# When enabled, _Kodiak will not be able to efficiently update PRs._ If you have\n# multiple PRs against a target like `master`, any time a commit is added to\n# `master` _all_ of those PRs against `master` will update. For `N` PRs against\n# a target you will see at least `N(N-1)/2` updates. If this configuration\n# option was disabled you would only see at least `N-1` updates.\nalways = false # default: false\n\n# When enabled, Kodiak will only update PRs that have an automerge label\n# (configured via `merge.automerge_label`). When disable, Kodiak will update any\n# PR. This option only applies when `update.always = true`.\nrequire_automerge_label = true # default: true\n"
        },
        {
          "name": ".nvmrc",
          "type": "blob",
          "size": 0.0029296875,
          "content": "16\n"
        },
        {
          "name": ".prettierignore",
          "type": "blob",
          "size": 0.0478515625,
          "content": "/.hlint.yaml\n/CHANGELOG.md\n/server/tests-py/**/*\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 142.2080078125,
          "content": "# Hasura GraphQL Engine Changelog\n\n:warning: This file is deprecated and contains changelog only for older releases. Please visit [this page](https://hasura.io/changelog) or [the github releases page](https://github.com/hasura/graphql-engine/releases) to view the changelog for latest releases :warning:\n\n## v2.10.1\n\n### Bug fixes and improvements\n\n- server: fix long identifiers in insert with parameters (fix #8741)\n- server: fix 'nulls: first' and 'nulls: last' parsing for Postgres\n- server: accept `extensions_schema` while adding a PostgreSQL source for the graphql-engine to install database extensions in the specified schema\n- server: accept a default extensions schema (`HASURA_GRAPHQL_METADATA_DATABASE_EXTENSIONS_SCHEMA`) for the metadata database where graphql-engine will install database extensions\n- console: add support extensions_schema on postgres connect/edit DB form\n\n## v2.11.0-beta.1\n\n### Bug fixes and improvements\n\n- server: accept `extensions_schema` while adding a PostgreSQL source for the graphql-engine to install database extensions in the specified schema\n- server: accept a default extensions schema (`HASURA_GRAPHQL_METADATA_DATABASE_EXTENSIONS_SCHEMA`) for the metadata database where graphql-engine will install database extensions\n- server: add warning log for missing admin secret\n- server: fix querying relationships defined using multiple columns on BigQuery\n- server: fix 'nulls: first' and 'nulls: last' parsing for Postgres\n- console: add custom names for streaming subscriptions\n- console: add support for table query and subscription root fields visibility permissions\n- console: fix the BigQuery row-level restrictions on boolean columns\n- console: add support extensions_schema on postgres connect/edit DB form\n- console: add support for new database-to-remote schema metadata format in old table relationships UI\n\n## v2.10.0\n\n### Introducing Apollo Federation v1 support (experimental)\n\nHGE can now be used as a subgraph in an Apollo federated GraphQL server.\nYou can read more about this feature in the [docs](https://hasura.io/docs/latest/data-federation/apollo-federation/).\n\nThis is an experimental feature (can be enabled by setting\n`HASURA_GRAPHQL_EXPERIMENTAL_FEATURES: apollo_federation`). This is supported\nover all databases. To expose a table in an Apollo federated gateway, we need\nto enable Apollo federation in its metadata. This can be done via the\n`*_track_table` metadata API or via Modify Table page in console.\n\nEnabling Apollo Federation on a table would add the `@key` directive in the GraphQL schema with\nfields argument set to the primary key of the table (say `id`), i.e:\n```graphql\ntype user @key(fields: \"id\") {\n  id: Int!\n  name: String\n  ...\n}\n```\n\n### Behaviour changes\n\n- server: When providing a JSON path in a JWT claims map, you can now use\n  double-quotes as well as single-quotes. Escaped characters in strings will now\n  be honored appropriately, in the same way as JSON.\n\n- server: In certain error messages, JSON paths will use double-quotes instead\n  of single-quotes to represent field access.\n\n  For example, instead of `$.args['$set']`, you will see `$.args[\"$set\"]`.\n\n- cli: Use 2-spaces indent for GraphQL content in metadata instead of tabs (#8469)\n\n  Example:\n  <table>\n  <thead>\n    <tr>\n      <th>Old Behaviour<pre>metadata/query_collections.yml</pre></th>\n      <th>New Behaviour<pre>metadata/query_collections.yml</pre></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><pre>\n  - name: allowed-queries\n    definition:\n      queries:\n      - name: getAlbums\n        query: |\n        \tquery getAlbums {\n        \t\talbums {\n        \t\t\tid\n        \t\t\ttitle\n        \t\t}\n        \t}\n      </pre></td>\n      <td><pre>\n  - name: allowed-queries\n    definition:\n      queries:\n      - name: getAlbums\n        query: |\n          query getAlbums {\n            albums {\n              id\n              title\n            }\n          }\n      </pre></td>\n    </tr>\n  </tbody>\n  </table>\n\n### Update multiple records for Postgres\n\nWe are introducing a new way to allow updating multiple records in the same\ntransaction for Postgres sources (#2768).\n\nFor example, the following query can be used to run the equivalent of two\n`update_by_pk` in a single transaction:\n\n```graphql\nupdate_artist_many(\n  updates: [\n    { where: { id: { _eq: 1 } },\n      _set: { name: \"new name\", description: \"other\" }\n    }\n    { where: { id: { _eq: 2 } },\n      _set: { name: \"new name\" }\n    }\n    ]\n) {\n  affected_rows\n  returning {\n    name\n  }\n}\n```\n\nHowever, this feature allows arbitrary updates, even when they overlap:\n\n\n```graphql\nupdate_artist_many(\n  updates: [\n    { where: { id: { _lte: 3 } },\n      _set: { name: \"first\", description: \"other\" }\n    }\n    { where: { id: { _eq: 2 } },\n      _set: { name: \"second\" }\n    }\n    { where: { id: { _gt: 2 } },\n      _set: { name: \"third\", description: \"hello\" }\n    }\n    { where: { id: { _eq: 1 } },\n      _set: { name: \"done\" }\n    }\n    ]\n) {\n  affected_rows\n  returning {\n    id\n    name\n  }\n}\n```\n\nGiven the table looked like this before the query:\n\nid | name | description\n-- | ---- | -----------\n 1 | one  | d1\n 2 | two  | d2\n 3 | three | d3\n 4 | four | d4\n\nAfter executing the query, the table will look like:\n\nid | name | description\n-- | ---- | -----------\n 1 | done  | other\n 2 | second  | other\n 3 | third | hello\n 4 | third | hello\n\nThe returned data will look like this:\n\n```json\n{\n  \"data\": {\n    \"update_artist_many\": [\n      {\n        \"affected_rows\": 3,\n        \"returning\": [\n          {\n            \"id\": 1,\n            \"name\": \"first\"\n          },\n          {\n            \"id\": 2,\n            \"name\": \"first\"\n          },\n          {\n            \"id\": 3,\n            \"name\": \"first\"\n          }\n        ]\n      },\n      {\n        \"affected_rows\": 1,\n        \"returning\": [\n          {\n            \"id\": 2,\n            \"name\": \"second\"\n          }\n        ]\n      },\n      {\n        \"affected_rows\": 2,\n        \"returning\": [\n          {\n            \"id\": 3,\n            \"name\": \"third\"\n          },\n          {\n            \"id\": 4,\n            \"name\": \"third\"\n          }\n        ]\n      },\n      {\n        \"affected_rows\": 1,\n        \"returning\": [\n          {\n            \"id\": 1,\n            \"name\": \"done\"\n          }\n        ]\n      }\n    ]\n  }\n}\n```\n\nThe way it works is:\n- we allow arbitrary `where` clauses (just like in a regular `update`)\n- we allow arbitrary `update`s (`_set`, `_inc`, etc., depending on the field\n    type)\n- we run each update in sequence, in a transaction (if one of them fails,\n    everything is rolled back)\n- we collect the return value of each query and return a list of results\n\nPlease submit any feedback you may have for this feature at https://github.com/hasura/graphql-engine/issues/2768.\n\n### Error message syntax\n\nWe are slowly standardizing the format of error messages, especially with regards to the way values are quoted.\n\nAny errors generated during the parsing of GraphQL or the construction of the schema might have changed the way they quote certain values. For example, GraphQL names are now always quoted with single quotes, leading to changes such as the following.\n\n_Before:_\n\n```\nfield \"nonexistent_root_field\" not found in type: 'query_root'\n```\n\n_After:_\n\n```\nfield 'nonexistent_root_field' not found in type: 'query_root'\n```\n\nIf you are depending on the specific text of an error message and/or parsing the message, you may need to update your code accordingly.\n\nFurther changes are forthcoming along similar lines.\n\n### Bug fixes and improvements\n\n- server: Kriti `basicFunctions` now available for REST Connectors and Webhook Transforms\n- server: Fix bug where Hasura SQL trigger was not dropped when MS SQL Server source is dropped\n- server: Delete event trigger related database SQL triggers from tables when they are untracked\n- server: Use `root_field_namespace` as prefix for remote schema (fix #8438)\n- server: Fix prefix/suffix behaviour for `graphql-default` naming convention (fix #8544)\n- server: Fix namespace visibility during introspection (fix #8434)\n- server: Create missing SQL triggers, if any, while reloading metadata and startup.\n- server: Fix name/enum transformation bugs in `graphql-default` naming convention (fix #8640)\n- server: Parameterize array variables in generated SQL for queries and subscriptions\n- server: Make postgres-client-cert fields: `sslcert`, `sslkey` and `sslpassword` optional\n- server: Add `*_update_source` API to update configuration of a connected database (See [docs](https://hasura.io/docs/latest/graphql/core/api-reference/metadata-api/source/))\n- server: Changes to the Rest Endpoints OpenAPI specification:\n    - The nullability of items in the output is now always correctly reported\n    - Scalars other than UUID are more consistently inlined\n    - Objects now have a title and, when available, the same description as in the GraphQL schema\n- server: Bump Kriti package version to support optional variable lookup in string interpolation (fix #8574)\n- server: Generate unique intermediate column names in PostgreSQL SQL queries to workaround PostgreSQL's identifier length limitation (fix #3796)\n- console: Hide TimescaleDB internal schemas from data tab for connected TimescaleDB databases\n- console: Support naming convention in source customization for PostgreSQL DBs\n- console: Fix bug where \"Analyze\" button in the API explorer would stay in analyzing state after analyze failed\n- console: Fix missing remote database relationship info for databases other than default on new table relationships page\n- build: Changes to the `hasura/graphql-engine` Docker image:\n  - Default graphql-engine docker images (`hasura/graphql-engine:<VERSION>`) now use an Ubuntu base instead of Debian.\n  - Debian flavour of images (`hasura/graphql-engine:<VERSION>.debian`) are still published to Docker Hub.\n\n## v2.10.0-beta.1\n\n### Introducing Apollo Federation v1 support (experimental)\n\nHGE can now be used as a subgraph in an Apollo federated GraphQL server.\nYou can read more about this feature in [the RFC](https://github.com/hasura/graphql-engine/blob/master/rfcs/apollo-federation.md).\n\nThis is an experimental feature (can be enabled by setting\n`HASURA_GRAPHQL_EXPERIMENTAL_FEATURES: apollo_federation`). This is supported\nover all databases. To expose a table in an Apollo federated gateway, we need\nto enable Apollo federation in its metadata. This can be done via the\n`*_track_table` metadata API and console support will be added soon.\n\nFor example, given a table called `user` in a database which is not being\ntracked by Hasura, we can run `*_track_table` to enable Apollo federation for\nthe table:\n\n```\nPOST /v1/metadata HTTP/1.1\nContent-Type: application/json\nX-Hasura-Role: admin\n```\n``` json\n{\n  \"type\": \"pg_track_table\",\n  \"args\": {\n    \"table\": \"user\",\n    \"schema\": \"public\",\n    \"apollo_federation_config\": {\n        \"enable\": \"v1\"\n    }\n  }\n}\n```\nThe above API call would add the `@key` directive in the GraphQL schema with\nfields argument set to the primary key of the table (say `id`), i.e:\n```graphql\ntype user @key(fields: \"id\") {\n  id: Int!\n  name: String\n  ...\n}\n```\n\n### Behaviour changes\n\n- server: When providing a JSON path in a JWT claims map, you can now use\n  double-quotes as well as single-quotes. Escaped characters in strings will now\n  be honored appropriately, in the same way as JSON.\n\n- server: In certain error messages, JSON paths will use double-quotes instead\n  of single-quotes to represent field access.\n\n  For example, instead of `$.args['$set']`, you will see `$.args[\"$set\"]`.\n\n- cli: Use 2-spaces indent for GraphQL content in metadata instead of tabs (#8469)\n\n  Example:\n  <table>\n  <thead>\n    <tr>\n      <th>Old Behaviour<pre>metadata/query_collections.yml</pre></th>\n      <th>New Behaviour<pre>metadata/query_collections.yml</pre></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td><pre>\n  - name: allowed-queries\n    definition:\n      queries:\n      - name: getAlbums\n        query: |\n        \tquery getAlbums {\n        \t\talbums {\n        \t\t\tid\n        \t\t\ttitle\n        \t\t}\n        \t}\n      </pre></td>\n      <td><pre>\n  - name: allowed-queries\n    definition:\n      queries:\n      - name: getAlbums\n        query: |\n          query getAlbums {\n            albums {\n              id\n              title\n            }\n          }\n      </pre></td>\n    </tr>\n  </tbody>\n  </table>\n\n### Update multiple records for Postgres\n\nWe are introducing a new way to allow updating multiple records in the same\ntransaction for Postgres sources (#2768).\n\nFor example, the following query can be used to run the equivalent of two\n`update_by_pk` in a single transaction:\n\n```graphql\nupdate_artist_many(\n  updates: [\n    { where: { id: { _eq: 1 } },\n      _set: { name: \"new name\", description: \"other\" }\n    }\n    { where: { id: { _eq: 2 } },\n      _set: { name: \"new name\" }\n    }\n    ]\n) {\n  affected_rows\n  returning {\n    name\n  }\n}\n```\n\nHowever, this feature allows arbitrary updates, even when they overlap:\n\n\n```graphql\nupdate_artist_many(\n  updates: [\n    { where: { id: { _lte: 3 } },\n      _set: { name: \"first\", description: \"other\" }\n    }\n    { where: { id: { _eq: 2 } },\n      _set: { name: \"second\" }\n    }\n    { where: { id: { _gt: 2 } },\n      _set: { name: \"third\", description: \"hello\" }\n    }\n    { where: { id: { _eq: 1 } },\n      _set: { name: \"done\" }\n    }\n    ]\n) {\n  affected_rows\n  returning {\n    id\n    name\n  }\n}\n```\n\nGiven the table looked like this before the query:\n\nid | name | description\n-- | ---- | -----------\n 1 | one  | d1\n 2 | two  | d2\n 3 | three | d3\n 4 | four | d4\n\nAfter executing the query, the table will look like:\n\nid | name | description\n-- | ---- | -----------\n 1 | done  | other\n 2 | second  | other\n 3 | third | hello\n 4 | third | hello\n\nThe returned data will look like this:\n\n```json\n{\n  \"data\": {\n    \"update_artist_many\": [\n      {\n        \"affected_rows\": 3,\n        \"returning\": [\n          {\n            \"id\": 1,\n            \"name\": \"first\"\n          },\n          {\n            \"id\": 2,\n            \"name\": \"first\"\n          },\n          {\n            \"id\": 3,\n            \"name\": \"first\"\n          }\n        ]\n      },\n      {\n        \"affected_rows\": 1,\n        \"returning\": [\n          {\n            \"id\": 2,\n            \"name\": \"second\"\n          }\n        ]\n      },\n      {\n        \"affected_rows\": 2,\n        \"returning\": [\n          {\n            \"id\": 3,\n            \"name\": \"third\"\n          },\n          {\n            \"id\": 4,\n            \"name\": \"third\"\n          }\n        ]\n      },\n      {\n        \"affected_rows\": 1,\n        \"returning\": [\n          {\n            \"id\": 1,\n            \"name\": \"done\"\n          }\n        ]\n      }\n    ]\n  }\n}\n```\n\nThe way it works is:\n- we allow arbitrary `where` clauses (just like in a regular `update`)\n- we allow arbitrary `update`s (`_set`, `_inc`, etc., depending on the field\n    type)\n- we run each update in sequence, in a transaction (if one of them fails,\n    everything is rolled back)\n- we collect the return value of each query and return a list of results\n\nPlease submit any feedback you may have for this feature at https://github.com/hasura/graphql-engine/issues/2768.\n\n### Bug fixes and improvements\n\n\n- server: Kriti `basicFunctions` now available for REST Connectors and Webhook Transforms\n- server: Fix bug where Hasura SQL trigger was not dropped when MS SQL Server source is dropped\n- server: Delete event trigger related database SQL triggers from tables when they are untracked\n- server: Use `root_field_namespace` as prefix for remote schema (fix #8438)\n- server: Fix prefix/suffix behaviour for `graphql-default` naming convention (fix #8544)\n- server: Fix namespace visibility during introspection (fix #8434)\n- server: Create missing SQL triggers, if any, while reloading metadata and startup.\n- server: Fix name/enum transformation bugs in `graphql-default` naming convention (fix #8640)\n- server: Parameterize array variables in generated SQL for queries and subscriptions\n- server: Make postgres-client-cert fields: `sslcert`, `sslkey` and `sslpassword` optional\n- server: Add `*_update_source` API to update configuration of a connected database (See [docs](https://hasura.io/docs/latest/graphql/core/api-reference/metadata-api/source/))\n- server: Changes to the Rest Endpoints OpenAPI specification:\n    - The nullability of items in the output is now always correctly reported\n    - Scalars other than UUID are more consistently inlined\n    - Objects now have a title and, when available, the same description as in the GraphQL schema\n- server: Bump Kriti package version to support optional variable lookup in string interpolation (fix #8574)\n- server: Generate unique intermediate column names in PostgreSQL SQL queries to workaround PostgreSQL's identifier length limitation (fix #3796)\n- console: Hide TimescaleDB internal schemas from data tab for connected TimescaleDB databases\n- console: Support naming convention in source customization for PostgreSQL DBs\n- console: Fix bug where \"Analyze\" button in the API explorer would stay in analyzing state after analyze failed\n- console: Fix missing remote database relationship info for databases other than default on new table relationships page\n- build: Changes to the `hasura/graphql-engine` Docker image:\n  - Default graphql-engine docker images (`hasura/graphql-engine:<VERSION>`) now use an Ubuntu base instead of Debian.\n  - Debian flavour of images (`hasura/graphql-engine:<VERSION>.debian`) are still published to Docker Hub.\n  - CentOS flavour of images (`hasura/graphql-engine:<VERSION>.centos`) are no longer supported.\n- docs: Kriti templating documentation sections added\n  \n## v2.9.0\n\n### Event Triggers for MS SQL Server\n\n(closes https://github.com/hasura/graphql-engine/issues/7228)\n\nEvent Triggers support has been added for MS SQL Server. Now, you can invoke external webhooks on insert/update/delete events on your MS SQL Server tables. See the [docs](https://hasura.io/docs/latest/graphql/core/event-triggers/index/) for more details.\n\n### Bug fixes and improvements\n\n- server: Support limit in BigQuery computed fields (fix #8562)\n- server: Improve GraphQL query parsing time and per-query memory allocation\n- server: Fix dropping column from a table that has update permissions (fix #8415)\n- server: Fix `unsupported/unknown datatype was returned` error thrown when using `mssql_redeliver_event` API\n- server: Fix bug with MS SQL Server events and shutdown handler\n- server: Fix bug where Hasura SQL trigger was not dropped when an MS SQL Server database is dropped\n- server: Allow all argument types for BigQuery routines\n- console: Add support for computed fields with session arg in permission builder (fix #8321)\n- console: Add GraphQL field customization for new database connections (root fields namespace, prefix, and suffix, and type names prefix and suffix)\n- console: Fix notifications not being shown in certain cases on the console on Hasura Cloud\n- console: Allow schemas prefixed with `pg`, but not `pg_` (fix #8435)\n- console: Introduce new table relationships UI in alpha\n- cli: Fix error reporting in `metadata apply` command (#8280)\n\n## v2.9.0-beta.3\n\n### Bug fixes and improvements\n\n- server: Fix bug where Hasura SQL trigger was not dropped when an MS SQL Server database is dropped\n- server: Allow all argument types for BigQuery routines\n- console: Fix notifications not being shown in certain cases on the console on Hasura Cloud\n\n## v2.9.0-beta.2\n\n### Bug fixes and improvements\n\n- server: fix dropping column from a table that has update permissions (fix #8415)\n- server: fix `unsupported/unknown datatype was returned` error thrown when using `mssql_redeliver_event` API\n- server: fix bug with MSSQL events and shutdown handler\n\n## v2.8.4\n\n### Bug fixes and improvements\n\n- server: Add support to customize the root field for streaming subscriptions (fixes #8618)\n\n## v2.8.3\n\n### Bug fixes and improvements\n\n- cli: fix performance regression with large metadata in `metadata apply`\n\n  During the execution of `metadata apply` command, the YAML metadata is\n  converted into JSON format because the server API accepts metadata in JSON\n  format. For large metadata(> ~20k LOC), due to a recent change this conversion was\n  taking upwards of 2 minutes of time, increasing exponentially with metadata size.\n  With the changes in this release, the performance regression has been fixed.\n  Following is a benchmark comparison of time taken for YAML to JSON conversion\n  before and after the changes for different metadata sizes:\n  | Metadata size(LOC) | Before(seconds) | After(seconds) |\n  |--------------------|-----------------|----------------|\n  |       10k          |      8.7        |     0.22       |\n  |       20k          |     15.9        |     0.29       |\n  |       50k          |     89.5        |     0.52       |\n  |      100k          |    271.9        |     0.81       |\n  |      300k          |      -          |     2.3        |\n\n\n## v2.8.2\n\n### Bug fixes and improvements\n\n- server: revert allow casting most postgres scalar types to strings in comparison expressions (#8617)\n\n## v2.9.0-beta.1\n\n### Event Triggers for MS SQL Server\n\n(closes https://github.com/hasura/graphql-engine/issues/7228)\nEvent Triggers support has been added for MS SQL Server. Now, you can invoke external webhooks on insert/update/delete events on your MS SQL Server tables. See the [docs](https://hasura.io/docs/latest/graphql/core/event-triggers/index/) for more details.\n\n### Bug fixes and improvements\n\n- server: add `*_update_source` API and modify behaviour of `*_add_source` API (See [docs](https://hasura.io/docs/latest/graphql/core/api-reference/metadata-api/source/) )\n- server: support limit in BigQuery computed fields (fix #8562)\n- server: improve GraphQL query parsing time and per-query memory allocation\n- server: parameterize array variables in queries and subscriptions\n- console: allow schemas prefixed with `pg`, but not `pg_` (fix #8435)\n- console: add support for computed fields with session arg in permission builder (fix #8321)\n- console: add GraphQL field customization for new database connections (root fields namespace, prefix, and suffix, and type names prefix and suffix)\n- console: introduce new table relationships UI in alpha\n- cli: fix performance regression with large metadata in `metadata apply`\n- cli: fix error reporting in `metadata apply` command (#8280)\n- server: query runtime performance optimizations\n- server: fix bug that had disabled expression-based indexes in Postgress variants (fix Zendesk 5146)\n- server: add optionality to additional postgres-client-cert fields: sslcert, sslkey and sslpassword\n\n## v2.8.1\n\n### Bug fixes and improvements\n\n- server: fix bug that had disabled expression-based indexes in Postgres variants (fix #8601)\n\n## v2.8.0\n\n### Disabling query/subscription root fields\n\nWhen a table is tracked in graphql-engine, three root fields are generated automatically\nnamely `<table>`, `<table>_by_pk` and `<table>_aggregate` in the `query` and the `subscription`\nroot. You can now control which root fields are exposed for a given role by specifying them in the select permission.\n\nThe main use-case for this feature is to disable APIs that access the table directly but which still need to be tracked so that:\n\n1. It can be accessed via a relationship to another table\n2. It can be used in select permissions for another table via a relationship\n\nFor such use-cases, we can disable all the root fields of the given table. This can be done by setting the select permission as follows:\n\n```json\n{\n   \"role\": \"user\",\n   \"permission\": {\n     \"columns\": [\n       \"id\",\n       \"name\"\n     ],\n     \"filter\": {},\n     \"allow_aggregations\": true,\n     \"query_root_fields\": [],\n     \"subscription_root_fields\": []\n   }\n }\n```\n\nAnother use-case is to allow a role to directly access a table only\nif it has access to the primary key value. This can be done by setting the select permission as follows:\n\n```json\n{\n   \"role\": \"user\",\n   \"permission\": {\n     \"columns\": [\n       \"id\",\n       \"name\"\n     ],\n     \"filter\": {},\n     \"allow_aggregations\": false,\n     \"query_root_fields\": [\"select_by_pk\"],\n     \"subscription_root_fields\": [\"select_by_pk\"]\n   }\n }\n```\n\nNote that console support for this permission will be released later.\n\n\n### Introducing naming conventions (experimental)\n\nNow, users can specify the naming convention of the auto-generated names in the HGE.\nThis is an experimental feature (enabled by setting `HASURA_GRAPHQL_EXPERIMENTAL_FEATURES: naming_convention`) and is supported for postgres databases only for now. There are two naming\nconventions possible:\n| Naming Convention | Field names | Type names  | Arguments  | Enum values |\n|-------------------|-------------|-------------|------------|-------------|\n| `hasura-default`  | Snake case  | Snake case  | Snake case | as defined  |\n| `graphql-default` | Camel case  | Pascal case | Camel case | Uppercased  |\n\nSuppose there is a table called `my_table` and it has columns `id`, `date_of_birth`, `last_seen`, then with\n`graphql-default` naming convention we will get the following auto-generated API:\n\n```\nquery {\n  myTable(orderBy: {dateOfBirth: asc}, limit: 10) {\n    id\n    dateOfBirth\n    lastSeen\n  }\n}\n```\n\n\nTo configure the naming convention for a source, set the naming convention in source\ncustomisation while adding the source:\n\n```JSON\n{\n  \"resource_version\": 2,\n  \"metadata\": {\n    \"version\": 1,\n    \"sources\": [\n      {\n        \"name\": \"default\",\n        \"kind\": \"postgres\",\n        \"tables\": [],\n        \"configuration\": {},\n        \"customization\": {\n          \"naming_convention\": \"graphql-default\"\n        }\n      }\n    ]\n  }\n}\n```\n\nTo set the default naming convention globally,\nuse the environment variable `HASURA_GRAPHQL_DEFAULT_NAMING_CONVENTION`.  Note\nthat the global default can be overridden by the source customisation setting mentioned above.\n\nNote: Custom field names and custom table names will override the naming convention\n(i.e. if the custom table name is `my_table` and `naming_convention`\nis `graphql-default`, the field names generated will be `my_table`, `my_tableByPk`,\n`my_tableAggregate` and so on).\n\n### Behaviour Changes\n\n- cli: change the ordering used for object fields in metadata files to alphabetical order\n\n  Example:\n  <table>\n     <thead>\n        <tr>\n           <th>Server Metadata (JSON)</th>\n           <th>Old behaviour (YAML)</th>\n           <th>New Behaviour (YAML)</th>\n        </tr>\n     </thead>\n     <tbody>\n        <tr>\n           <td>\n              <pre>\n  {\n    \"function\": {\n      \"schema\": \"public\",\n      \"name\": \"search_albums\"\n    }\n  }\n         </pre>\n           </td>\n           <td>\n              <pre>\n  function:\n    schema: public\n    name: search_albums\n        </pre>\n           </td>\n           <td>\n              <pre>\n  function:\n    name: search_albums\n    schema: public\n        </pre>\n           </td>\n        </tr>\n     </tbody>\n  </table>\n\n### Bug fixes and improvements\n\n- server: fix create event trigger failure for MSSQL sources on a table with a table name that is a reserved MSSQL keyword.\n- server: errors from `/healthz` endpoint are now logged with more details\n- server: do not expand environment variable references in logs or API responses from remote schemas, actions and event triggers for security reasons\n- server: introduce [backend_only permissions](https://hasura.io/docs/latest/graphql/core/auth/authorization/permission-rules/#backend-only-permissions) for update and delete mutations (fix #5275)\n- server: add support for scalar array response type in actions\n- server: add support for table computed fields in bigquery backends\n- server: fix failure when executing consecutive delete mutations on mssql (#8462)\n- server: bugfix: insertion of multiple empty objects should result in multiple entries (#8475)\n- server: allow schemas prefixed with `pg`, but not `pg_` (fix hasura/graphql-engine#8435)\n- console: add support for application/x-www-form-urlencoded in rest connectors (#8097)\n- server: restore the ability to do no-op upserts (#8260).\n\n## v2.8.0-beta.1\n\n### Disabling query/subscription root fields\n\nWhen a table is tracked in graphql-engine, three root fields are generated automatically\nnamely `<table>`, `<table>_by_pk` and `<table>_aggregate` in the `query` and the `subscription`\nroot. You can now control which root fields are exposed for a given role by specifying them in the select permission.\n\nThe main use-case for this feature is to disable APIs that access the table directly but which still need to be tracked so that:\n\n1. It can be accessed via a relationship to another table\n2. It can be used in select permissions for another table via a relationship\n\nFor such use-cases, we can disable all the root fields of the given table. This can be done by setting the select permission as follows:\n\n```json\n{\n   \"role\": \"user\",\n   \"permission\": {\n     \"columns\": [\n       \"id\",\n       \"name\"\n     ],\n     \"filter\": {},\n     \"allow_aggregations\": true,\n     \"query_root_fields\": [],\n     \"subscription_root_fields\": []\n   }\n }\n```\n\nAnother use-case is to allow a role to directly access a table only\nif it has access to the primary key value. This can be done by setting the select permission as follows:\n\n```json\n{\n   \"role\": \"user\",\n   \"permission\": {\n     \"columns\": [\n       \"id\",\n       \"name\"\n     ],\n     \"filter\": {},\n     \"allow_aggregations\": false,\n     \"query_root_fields\": [\"select_by_pk\"],\n     \"subscription_root_fields\": [\"select_by_pk\"]\n   }\n }\n```\n\nNote that console support for this permission will be released later.\n\n\n### Introducing naming conventions (experimental)\n\nNow, users can specify the naming convention of the auto-generated names in the HGE.\nThis is an experimental feature and is supported for postgres databases only for now. There are two naming\nconventions possible:\n| Naming Convention | Field names | Type names  | Arguments  | Enum values |\n|-------------------|-------------|-------------|------------|-------------|\n| `hasura-default`  | Snake case  | Snake case  | Snake case | as defined  |\n| `graphql-default` | Camel case  | Pascal case | Camel case | Uppercased  |\n\nSuppose there is a table called `my_table` and it has columns `id`, `date_of_birth`, `last_seen`, then with\n`graphql-default` naming convention we will get the following auto-generated API:\n\n```\nquery {\n  myTable(orderBy: {dateOfBirth: asc}, limit: 10) {\n    id\n    dateOfBirth\n    lastSeen\n  }\n}\n```\n\n\nTo configure the naming convention for a source, set the naming convention in source\ncustomisation while adding the source:\n\n```JSON\n{\n  \"resource_version\": 2,\n  \"metadata\": {\n    \"version\": 1,\n    \"sources\": [\n      {\n        \"name\": \"default\",\n        \"kind\": \"postgres\",\n        \"tables\": [],\n        \"configuration\": {},\n        \"customization\": {\n          \"naming_convention\": \"graphql-default\"\n        }\n      }\n    ]\n  }\n}\n```\n\nTo set the default naming convention globally,\nuse the environment variable `HASURA_GRAPHQL_DEFAULT_NAMING_CONVENTION`.  Note\nthat the global default can be overridden by the source customisation setting mentioned above.\n\nNote: Custom field names and custom table names will override the naming convention\n(i.e. if the custom table name is `my_table` and `naming_convention`\nis `graphql-default`, the field names generated will be `my_table`, `my_tableByPk`,\n`my_tableAggregate` and so on).\n\n### Behaviour Changes\n\n- cli: change the ordering used for object fields in metadata files to alphabetical order\n\n  Example:\n  <table>\n     <thead>\n        <tr>\n           <th>Server Metadata (JSON)</th>\n           <th>Old behaviour (YAML)</th>\n           <th>New Behaviour (YAML)</th>\n        </tr>\n     </thead>\n     <tbody>\n        <tr>\n           <td>\n              <pre>\n  {\n    \"function\": {\n      \"schema\": \"public\",\n      \"name\": \"search_albums\"\n    }\n  }\n         </pre>\n           </td>\n           <td>\n              <pre>\n  function:\n    schema: public\n    name: search_albums\n        </pre>\n           </td>\n           <td>\n              <pre>\n  function:\n    name: search_albums\n    schema: public\n        </pre>\n           </td>\n        </tr>\n     </tbody>\n  </table>\n\n### Bug fixes and improvements\n\n- server: errors from `/healthz` endpoint are now logged with more details\n- server: do not expand environment variable references in logs or API responses from remote schemas, actions and event triggers for security reasons\n- server: introduce [backend_only permissions](https://hasura.io/docs/latest/graphql/core/auth/authorization/permission-rules/#backend-only-permissions) for update and delete mutations (fix #5275)\n- server: add support for scalar array response type in actions\n- server: add support for table computed fields in bigquery backends\n- server: fix failure when executing consecutive delete mutations on mssql (#8462)\n- server: bugfix: insertion of multiple empty objects should result in multiple entries (#8475)\n- server: allow schemas prefixed with `pg`, but not `pg_` (fix hasura/graphql-engine#8435)\n- console: add support for application/x-www-form-urlencoded in rest connectors (#8097)\n- server: restore the ability to do no-op upserts (#8260).\n\n## v2.7.0\n\n### Streaming subscriptions\n\nStreaming subscriptions can be used to subscribe only to the data which has been changed in the\nquery. The streaming is done on the basis of a cursor, which is chosen by the user.\nSee [docs](https://hasura.io/docs/latest/graphql/core/databases/postgres/subscriptions/streaming/index/).\n\nRequest payload:\n\n```graphql\nsubscription GetUserLatestMessages ($user_id: uuid!) {\n  messages_stream (\n    cursor: {\n      initial_value: {id: 0},\n      ordering: ASC\n    },\n    batch_size: 1,\n    where: {user_id: {_eq: $user_id}}\n  ) {\n    id\n    message\n  }\n}\n```\n\nThe above subscription streams the messages of the user corresponding to the ``user_id`` in batches of 1 message per batch.\n\nSuppose there are two messages to be streamed, then the server will send two responses as following:\n\nResponse 1:\n\n```json\n{\n  \"data\": [\n    {\n      \"id\": 1,\n      \"message\": \"How are you!\"\n    }\n  ]\n}\n```\n\nResponse 2:\n\n```json\n{\n  \"data\": [\n    {\n      \"id\": 5,\n      \"message\": \"I am fine\"\n    }\n  ]\n}\n```\n\n### Bug fixes and improvements\n\n- server: add support for custom scalar in action output type (#4185)\n- server: add support for MSSQL event triggers (#7228)\n- server: update pg_dump to be compatible with postgres 14 (#7676)\n- server: fix bug where timestamp values sent to postgres would erroneously trim leading zeroes (#8096)\n- server: fix metadata handling bug when event triggers were defined on tables that contained non lower-case alphabet characters (#8454)\n- server: avoid encoding 'varchar' values to UTF8 in MSSQL backends\n- server: fix dropping of nested typed null fields in actions (#8237)\n- server: fix url/query date variable parsing bug in REST endpoints\n- server: make url/query variables in REST endpoints assume string if other types not applicable\n- server: fix inserting empty objects with default values to postgres, citus, and sql server (#8475)\n- server: don't drop the SQL triggers defined by the graphql-engine when DDL changes are made using the `run_sql` API\n- console: new \"add remote schema\" page with GQL customization\n- console: allow users to remove prefix / suffix / root field namespace from a remote schema\n- console: fix console crash on adding pg sources with connection params through api (#8416)\n- cli: avoid exporting hasura-specific schemas during hasura init (#8352)\n- cli: fix performance regression in `migrate status` command (#8398)\n\n## v2.6.2\n\n### Bug fixes and improvements\n\n- server: fix inserting empty objects with default values to postgres, citus, and sql server (fix #8475)\n\n## v2.7.0-beta.1\n\n### Bug fixes and improvements\n\n- server: don't drop the SQL triggers defined by the graphql-engine when DDL changes are made using the `run_sql` API\n- server: fixed a bug where timestamp values sent to postgres would erroneously trim leading zeroes (#8096)\n- server: fix bug when event triggers where defined on tables that contained non lower-case alphabet characters\n- server: avoid encoding 'varchar' values to UTF8 in MSSQL backends\n- server: add support for MSSQL event triggers (#7228)\n- server: update pg_dump to be compatible with postgres 14 (#7676)\n- server: fix parsing remote relationship json definition from 1.x server catalog on migration (fix #7906)\n- server: Don't drop nested typed null fields in actions (fix #8237)\n- server: fixes remote relationships on actions (fix #8399)\n- server: fixes url/query date variable bug in REST endpoints\n- server: makes url/query variables in REST endpoints assume string if other types not applicable\n- server: fix inserting empty objects with default values to postgres, citus, and sql server (fix #8475)\n- server: allow casting most postgres scalar types to strings in comparison expressions (fix #8524)\n- console: add remote database relationships for views\n- console: bug fixes for RS-to-RS relationships\n- console: exclude `_timescaledb_internal` from db introspection sql, for performance reasons ()\n- console: allow users to remove prefix / suffix / root field namespace from a remote schema\n- console: new \"add remote schema\" page (with GQL customization)\n- console: fix console crash on adding pg sources with connection params through api\n- cli: avoid exporting hasura-specific schemas during hasura init (#8352)\n- cli: fix performance regression in `migrate status` command (fix #8398)\n\n## v2.6.1\n\n- server: fix bug when event triggers where defined on tables that contained non lower-case alphabet characters (fix #8454)\n- server: refactor insert mutations IR use of \"default values\" (fixes #8443)\n\n## v2.5.2\n\n- server: refactor insert mutations IR use of \"default values\" (fixes #8443)\n\n## Milestone Release - v2.6.0\n\n### Known issue\nSQL Server: Mutation: [Default values overwritten on insert under certain conditions](https://github.com/hasura/graphql-engine/issues/8443). Will be addressed in 2.5.2 and 2.6.1.\n\n### Announcing GraphQL Joins\nWe are delighted to announce Hasura’s data federation capabilities that accelerate the API development process by creating a single GraphQL schema from multiple data sources such as databases and remote GraphQL APIs. This allows you to query and mutate across federated data sources in real-time without writing any custom code. In addition, we can leverage many of Hasura’s powerful features from Hasura CE and Hasura Cloud.\nHasura’s field level permissions for remote schemas applies for joins as well, allowing for tightly controlled data disclosure when federating sources.\nLeverage Hasura Cloud’s caching directive to instantly put caching in front of multiple remote GraphQL schemas.\n\n### Breaking changes\nThe query and raw-query field from http-logs for metadata requests are removed by default. Use HASURA_GRAPHQL_ENABLE_METADATA_QUERY_LOGGING to re-enable those fields.\n\n### Bug fixes and improvements\n- server: removed 'query' and 'raw-query' field from logs for metadata queries by default. Use HASURA_GRAPHQL_ENABLE_METADATA_QUERY_LOGGING to re enable those fields.\n- server: clear_metadata now correctly archives event triggers and the drop source API drops indirect dependencies created by remote relationships when the dependent source is dropped.\n- server: fix inserting values into columns with case sensitive enum types for PostgreSQL/Citus backends (fix #4014)\n- server: remote relationships can be defined on and to Microsoft SQL Server tables\n- server: fix issues with JSON key encoding for remote schemas (fixes #7543 and #8200)\n- server: fix Microsoft SQL Server insert mutation when relationships are used in check permissions (fix #8225)\n- server: refactor GraphQL query static analysis and improve OpenAPI warning messages\n- server: avoid a resource leak when connecting to PostgreSQL fails\n- server: fix parsing remote relationship json definition from 1.x server catalog on migration (fix #7906)\n- server: Don't drop nested typed null fields in actions (fix #8237)\n- server: fixes remote relationships on actions (fix #8399)\n- server: update pg_dump to be compatible with Postgres 14 (#7676)\n- console: add support for setting aggregation query permissions for Microsoft SQL Server\n- console: add support for RS-to-DB and RS-to-RS relationships to Remote Schemas\n- console: removed the need for clicking the Modify btn before editing a remote schema (#1193, #8262)\n- console: add remote database relationships support for views\n- cli: fix remote schema metadata formatting issues (#7608)\n- cli: fix query collections metadata formatting issues (#7616)\n- cli: fix performance regression in migrate status command (fix #8398)\n- docs: support for graphql-ws is considered GA\n\n## v2.5.1\n\n### Known issue\nSQL Server: Mutation: [Default values overwritten on insert under certain conditions](https://github.com/hasura/graphql-engine/issues/8443). Will be addressed in 2.5.2 and 2.6.1.\n\n### Bug fixes and improvements\n- server: fixes remote relationships on actions (fix #8399)\n- server: validate top level fragments in GQL query\n- cli: fix performance regression in `migrate status` command (fix #8398)\n\n## v2.6.0-beta.2\n\n### Bug fixes and improvements\n- server: fix parsing remote relationship json definition from 1.x server catalog on migration (fix #7906)\n- server: Don't drop nested typed null fields in actions (fix #8237)\n- server: fixes remote relationships on actions (fix #8399)\n- server: update pg_dump to be compatible with postgres 14 (#7676)\n- console: add remote database relationships for views\n- cli: fix performance regression in `migrate status` command (fix #8398)\n\n## v2.6.0-beta.1\n\n### Breaking changes\n\n- The `query` and `raw-query` field from http-logs for metadata requests are removed by default. Use\n  `HASURA_GRAPHQL_ENABLE_METADATA_QUERY_LOGGING` to renable those fields.\n\n### Bug fixes and improvements\n\n- server: Fix BigQuery overflow issue when using Decimal/BigDecimal data type.\n- server: remove 'query' and 'raw-query' field from logs for metadata queries by default. Use `HASURA_GRAPHQL_ENABLE_METADATA_QUERY_LOGGING` to renable those fields.\n- server: `clear_metadata` now correctly archives event triggers and the drop source API drops indirect dependencies created by remote relationships when the dependent source is dropped.\n- server: fix inserting values into columns with case sensitive enum types for PostgreSQL/Citus backends (fix #4014)\n- server: remote relationships can be defined _on_ and _to_ Microsoft SQL Server tables\n- server: fix issues with JSON key encoding for remote schemas (fixes #7543 and #8200)\n- server: fix Microsoft SQL Server insert mutation when relationships are used in check permissions (fix #8225)\n- server: refactor GraphQL query static analysis and improve OpenAPI warning messages\n- server: avoid a resource leak when connecting to PostgreSQL fails\n- console: add support for setting aggregation query permissions for Microsoft SQL Server\n- console: add support for RS-to-DB and RS-to-RS joins to Remote Schemas tab\n- console: removed the need for clicking the Modify btn before editing a remote schema (#1193, #8262)\n- cli: fix remote schema metadata formatting issues (#7608)\n- cli: fix query collections metadata formatting issues (#7616)\n- docs: support for `graphql-ws` is considered GA\n\n## v2.5.0\n\n### Remote relationships from remote schemas\n\nThis release adds three new metadata API commands:\n- `create_remote_schema_remote_relationship`\n- `update_remote_schema_remote_relationship`\n- `delete_remote_schema_remote_relationship`\n\nthat allows to create remote relationships between remote schemas on\nthe left-hand side and databases or remote schemas on the right-hand\nside. Both use the same syntax as remote relationships from databases:\n\n```yaml\ntype: create_remote_schema_remote_relationship\nargs:\n  remote_schema: LeftHandSide\n  type_name: LeftHandSideTypeName\n  name: RelationshipName\n  definition:\n    to_remote_schema:\n      remote_schema: RightHandSideSchema\n      lhs_fields: [LHSJoinKeyName]\n      remote_field:\n        rhsFieldName:\n          arguments:\n            ids: $LHSJoinKeyName\n\ntype: create_remote_schema_remote_relationship\nargs:\n  remote_schema: LeftHandSide\n  type_name: LeftHandSideTypeName\n  name: RelationshipName\n  definition:\n    to_source:\n      source: RightHandSideSource\n      table: {schema: public, name: RHSTable}\n      relationship_type: object\n      field_mapping:\n        LHSJoinKeyName: RHSColumnName\n```\n\nSimilarly to DB-to-DB relationships, only `Postgres` is supported on\nthe right-hand side for now.\n\n### Deprecations\n* The `custom_column_names` property of TableConfig used on `<db>_track_table` and `set_table_customization` metadata APIs has been deprecated in favour of the new `column_config` property. `custom_column_names` will still work for now, however, values used in `column_config` will take precedence over values from `custom_column_names` and any overlapped values in `custom_column_names` will be discarded.\n\n### Behaviour Changes\n\n- cli: use indentation of 2 spaces in array elements of metadata YAML files\n\n  Example:\n  <table>\n  <thead>\n    <tr>\n      <th>Old behaviour<pre> metadata/query_collections.yaml</pre> </th>\n      <th>New behaviour<pre> metadata/query_collections.yaml </pre> </th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>\n        <pre>\n  - name: allowed-queries\n    definition:\n      queries:\n      - name: getAlbums\n        query: |\n          query getAlbums {\n            albums {\n              id\n              title\n            }\n          }\n         </pre>\n      </td>\n      <td>\n        <pre>\n  - name: allowed-queries\n    definition:\n      queries:\n        - name: getAlbums\n          query: |\n            query getAlbums {\n              albums {\n                id\n                title\n              }\n            }\n        </pre>\n      </td>\n    </tr>\n  </tbody>\n  </table>\n\n  This change is a result of fixing some inconsistencies and edge cases in writing array elements.\n  `hasura metadata export` will write YAML files in this format going forward. Also, note that this is a backwards compatible change.\n\n- cli: change ordering of elements in metadata files to match server metadata\n\n  Example:\n  <table>\n     <thead>\n        <tr>\n           <th>Server Metadata (JSON)</th>\n           <th>Old behaviour (YAML)</th>\n           <th>New Behaviour (YAML)</th>\n        </tr>\n     </thead>\n     <tbody>\n        <tr>\n           <td>\n              <pre>\n  {\n    \"function\": {\n      \"schema\": \"public\",\n      \"name\": \"search_albums\"\n    }\n  }\n         </pre>\n           </td>\n           <td>\n              <pre>\n  function:\n    name: search_albums\n    schema: public\n        </pre>\n           </td>\n           <td>\n              <pre>\n  function:\n    schema: public\n    name: search_albums\n        </pre>\n           </td>\n        </tr>\n     </tbody>\n  </table>\n\n### Streaming subscriptions\n\nStreaming subscriptions can be used to subscribe only to the data which has been changed in the\nquery. The streaming is done on the basis of a cursor, which is chosen by the user.\n\nRequest payload:\n\n```\nsubscription GetUserLatestMessages ($user_id: uuid!) {\n  messages_stream (cursor: {initial_value: {id: 0}, ordering: ASC}, batch_size: 1, where: {user_id: {_eq: $user_id}} ) {\n    id\n    from\n    to\n  }\n}\n```\n\nThe above subscription streams the messages of the user corresponding to the ``user_id`` in batches of 1 message per batch.\n\nSuppose there are two messages to be streamed, then the server will send two responses as following:\n\nResponse 1:\n\n```\n{\n  \"data\": [\n    {\n      \"id\": 1,\n      \"from\": 155234,\n      \"to\": 155523\n    }\n    ]\n}\n```\n\nResponse 2:\n\n```\n{\n  \"data\": [\n    {\n      \"id\": 5,\n      \"from\": 178234,\n      \"to\": 187523\n    }\n    ]\n}\n```\n\n### Bug fixes and improvements\n\n- server: improve error messages in BigQuery upstream API exceptions\n- server: Fix regression in MSSQL subscriptions when results exceed 2048 characters (#8267)\n- server: refactor OpenAPI spec generation (for REST endpoints) and improve OpenAPI warnings\n- server: add jsonb to string cast support - postgres (#7818)\n- server: improve performance of fetching postgres catalog metadata for tables and functions\n- server: Queries present in query collections, such as allow-list and rest-endpoints, are now validated (fixes #7497)\n- server: improve SQL generation for BigQuery backend queries involving `Orderby`.\n- server: fix regression where remote relationships would get exposed over Relay, which is unsupported\n- server: add support for customising the GraphQL schema descriptions of table columns in metadata\n- server: column presets for SQL Server were broken and consequently insert and upsert mutations were failing with constraint violations. This change fixes this behavior (#8221).\n- server: fix caching bug with session variables in remote joins\n- server: fix regression where JWKs are refreshed once per second when both must-revalidate and max-age are specified in the Cache-Control header (#8299)\n- server: respect custom field names in delete, insert and update mutations on SQL Server (#8314)\n- console: enable searching tables within a schema in the sidebar\n- console: add support for setting comments on the custom root fields of tables/views\n- console: add feature flags section in settings\n- console: improved support for setting comments on computed fields\n- console: fix the ability to create updated_at and created_at in the modify page (#8239)\n- console: fix an issue where editing both a column's name and its GraphQL field name at the same time caused an error\n- console: fix redirect to metadata status page on inconsistent inherited role (#8343)\n- console: fix malformed request with REST live preview section (#8316)\n- console: fixed actions search to be case-insensitive\n- cli: add support for customization field in sources metadata (#8292)\n- cli: fix inherited roles metadata not being updated when dropping all roles (#7872)\n- ci: ubuntu and centos flavoured graphql-engine images are now available\n\n## v2.4.0\n\n### Bug fixes and improvements\n\n- server: add custom function for case insensitive lookup in session variable in request transformation\n- server: add metadata inconsistency information in reload_metadata API call\n- server: Webhook Transforms can now delete request/response bodies explicitly.\n- server: Fix truncation of session variables with variable length column types in MSSQL (#8158)\n- server: improve performance of `replace_metadata` for large schemas\n- server: improve baseline memory consumption for typical workloads\n- server: fix parsing timestamp values in BigQuery backends (fix #8076)\n- server: add support for customising the GraphQL schema descriptions of table root fields\n- server: add a `request_headers` field to the `test_webhook_transform` API.\n- console: include cron trigger with include in metadata as false on cron trigger manage page\n- console: show an error notification if Hasura CLI migrations fail\n- console: fixed an issue where cron triggers were not removed from the list after deletion\n- console: only show tables from current schema in clone permissions section\n- console: provide checkbox to remove body in rest connectors\n- cli: fix metadata version being set to 3 when doing `hasura init --version 2` (#8148)\n\n## v2.4.0-beta.3\n\n- server: fix regression in MSSQL subscriptions when results exceed 2048 characters (#8267)\n\n## v2.4.0-beta.2\n\n- server: fix regression where remote relationships would get exposed over Relay, which is unsupported\n\n## v2.3.1\n\n- server: fix regression where remote relationships would get exposed over Relay, which is unsupported\n\n## v2.2.2\n\n- server: fix regression where remote relationships would get exposed over Relay, which is unsupported\n\n## v2.4.0-beta.1\n\n### Bug fixes and improvements\n(Add entries below in the order of server, console, cli, docs, others)\n\n- server: add metadata inconsistency information in `reload_metadata` API call\n- server: add custom function for case insensitive lookup in session variable in request transformation\n- server: Improved error messaging for `test_webhook_transform` metadata API endpoint\n- server: Webhook Tranforms can now produce `x-www-url-formencoded` bodies.\n- server: Webhook Transforms can now delete request/response bodies explicitly.\n- server: Fix truncation of session variables with variable length column types in MSSQL (#8158)\n- server: improve performance of `replace_metadata` for large schemas\n- server: improve baseline memory consumption for typical workloads\n- server: fix parsing timestamp values in BigQuery backends (fix #8076)\n- server: add support for customising the GraphQL schema descriptions of table root fields\n- server: add a `request_headers` field to the `test_webhook_transform` API.\n- server: add support for relationships on nested action fields\n- console: include cron trigger with include in metadata as false on cron trigger manage page\n- console: show an error notification if Hasura CLI migrations fail\n- console: fixed an issue where cron triggers were not removed from the list after deletion\n- console: only show tables from current schema in clone permissions section\n- console: provide checkbox to remove body in rest connectors\n- cli: fix metadata version being set to 3 when doing `hasura init --version 2` (#8148)\n\n## v2.3.0\n\n### Experimental SQL optimizations\nRow-level permissions are applied by a translation into SQL `WHERE` clauses. If\nsome tables have similar row-level permission filters, then the generated SQL\nmay be repetitive and not perform well, especially for GraphQL queries that make\nheavy use of relationships.\n\nThis version includes an _experimental_ optimization for some SQL queries.  It\nis expressly experimental, because of the security-sensitive nature of the\ntransformation that it applies. You should scrutinize the optimized SQL\ngenerated by this feature before using it in production.\n\nThe optimization can be enabled using the\n`--experimental-features=optimize_permission_filters` flag or the\n`HASURA_GRAPHQL_EXPERIMENTAL_FEATURES` environment variable.\n\n### Breaking changes\n* Computed field comments are now used as the description for the field in the GraphQL schema. This means that computed fields where the comment has been set to empty string will cause the description of the field in the GraphQL schema to also be blank. Setting the computed field comment to null will restore the previous auto-generated description. The previous version of the Console would set the comment to empty string if the comment textbox was left blank, so some existing computed fields may unintentionally have empty string set as their comment.\n\n### Bug fixes and improvements\n\n- server: validate saved REST endpoint queries wrt schema\n- server: improved error reporting for env vars in `test_webhook_transform` metadata API endpoint\n- server: extend allowlist metadata with scope information, new command `update_scope_of_allowlist_in_metadata`\n- server: (Postgres, Citus, and MSSQL backends) Identity columns and computed\n  columns are now marked immutable, removing them from the schema of insert and\n  update mutations.\n- server: allow inserting more than 1 row simultaneously into table with generated columns (fix #4633)\n  that have generated columns in Postgres.\n- server: postgres: return a single entry per row (selected randomly) when an object relationship has multiple matches (fix #7936)\n- server: Updates Kriti to v0.3.0\n- server: add operation name in the request sent to remote schemas\n- server: add support for scalar response types for actions (fix #7805)\n- server: fix nullable action response (fix #4405)\n- server: add support for customization of table & computed field GraphQL schema descriptions (fix #7496)\n- server: classify MSSQL exceptions and improve API error responses\n- server: MSSQL generates correct SQL when object relationships are null.\n- console: add support for remote database relationships\n- console: enable support for update permissions for mssql\n- cli: skip tls verfication for all API requests when `insecure-skip-tls-verify` flag is set (fix #4926)\n- server: fix issues working with read-only DBs by reverting the need for storing required SQL functions in a `hdb_lib` schema in the user's DB\n- server: Fix experimental sql optimization read from `HASURA_GRAPHQL_EXPERIMENTAL_FEATURES` or `--experimental-features`\n\n## v2.3.0-beta.3\n\n- server: Fix experimental sql optimization read from `HASURA_GRAPHQL_EXPERIMENTAL_FEATURES` or `--experimental-features`\n\n## v2.2.1\n\n- server: postgres: return a single entry per row (selected randomly) when an object relationship has multiple matches (fix #7936)\n- console: add support for remote database relationships\n\n## v2.3.0-beta.2\n\n- server: fix issues working with read-only DBs by reverting the need for storing required SQL functions in a `hdb_lib` schema in the user's DB\n\n## v2.3.0-beta.1\n\n\n### Experimental SQL optimizations\nRow-level permissions are applied by a translation into SQL `WHERE` clauses. If\nsome tables have similar row-level permission filters, then the generated SQL\nmay be repetitive and not perform well, especially for GraphQL queries that make\nheavy use of relationships.\n\nThis version includes an _experimental_ optimization for some SQL queries.  It\nis expressly experimental, because of the security-sensitive nature of the\ntransformation that it applies. You should scrutinize the optimized SQL\ngenerated by this feature before using it in production.\n\nThe optimization can be enabled using the\n`--experimental-features=optimize_permission_filters` flag or the\n`HASURA_GRAPHQL_EXPERIMENTAL_FEATURES` environment variable.\n\n### Breaking changes\n* Computed field comments are now used as the description for the field in the GraphQL schema. This means that computed fields where the comment has been set to empty string will cause the description of the field in the GraphQL schema to also be blank. Setting the computed field comment to null will restore the previous auto-generated description. The previous version of the Console would set the comment to empty string if the comment textbox was left blank, so some existing computed fields may unintentionally have empty string set as their comment.\n\n### Bug fixes and improvements\n\n- server: validate saved REST endpoint queries wrt schema\n- server: improved error reporting for env vars in `test_webhook_transform` metadata API endpoint\n- server: extend allowlist metadata with scope information, new command `update_scope_of_allowlist_in_metadata`\n- server: (Postgres, Citus, and MSSQL backends) Identity columns and computed\n  columns are now marked immutable, removing them from the schema of insert and\n  update mutations.\n- server: allow inserting more than 1 row simultaneously into table with generated columns (fix #4633)\n  that have generated columns in Postgres.\n- server: postgres: return a single entry per row (selected randomly) when an object relationship has multiple matches (fix #7936)\n- server: Updates Kriti to v0.3.0\n- server: add operation name in the request sent to remote schemas\n- server: add support for scalar response types for actions (fix #7805)\n- server: fix nullable action response (fix #4405)\n- server: add support for customization of table & computed field GraphQL schema descriptions (fix #7496)\n- server: classify MSSQL exceptions and improve API error responses\n- server: MSSQL generates correct SQL when object relationships are null.\n- console: add support for remote database relationships\n- console: enable support for update permissions for mssql\n- cli: skip tls verfication for all API requests when `insecure-skip-tls-verify` flag is set (fix #4926)\n\n## v2.2.0\n\n### Nested Action Types\nActions now support nested responses as described by associated action types.Example:\n```graphql\ntype Product {\n id: bigint!\n name: String\n}\ntype ElasticOutput {\n products: [Product!]!\n aggregations: jsonb\n}\n```\nPreviously, nested responses could be encapsulated in a generic \"jsonb\" output type but this loses precise type information for the API. The current support now allows specifying complex return types for the output.\n\nCurrently limits action relationships to top-level fields in the output types.\n\n### GraphQL REST Endpoints OpenAPI Body Specifications\n\nGraphQL REST endpoints are documented via Swagger (OpenAPI) under the `/api/swagger/json` endpoint. We now document the request and response bodies of the endpoints in addition to previous information.\n\n### MS SQL Server Update for Hasura Server\n\n##### Expand Transactions to GraphQL Queries and mssql_run-sql API\n\nExtend transactions to GraphQL queries and mssql_run_sql API\n\n##### Rollback a Transaction Based in the Transaction State\n\nWe can query the transaction state using XACT_STATE() scalar function. If the transaction is not active, don't rollback the transaction.\n\n##### Upsert - SQL Generation and Execution\n\nWe are translating the if_matched section from the graphql, which is represented by the if_matched  type, to a MERGE SQL statement. Example:\n\n```\nmutation {\n  insert_author(\n    objects: { id: 1, name: \"aaa\" }\n    if_matched: { match_columns: author_pkey, update_columns: name }\n  ) {\n    returning {\n      id\n      name\n    }\n  }\n}\n```\n\n### Breaking Changes\n- For any **MSSQL** backend, count aggregate query on multiple columns is restricted with a GraphQL\n  schema change as follows\n\n```diff\ncount (\n---  columns: [table_select_column!]\n+++  column: table_select_column\n  distinct: Boolean\n): Int!\n```\n  MSSQL doesn't support applying `COUNT()` on multiple columns.\n\n\n### Bug fixes and improvements\n\n- server: add a placeholder field to the schema when the `query_root` would be empty\n- server: fix invalid GraphQL name in the schema arising from a remote relationship from a table in a custom schema\n- server: add a new metadata API `get_cron_triggers` to fetch all the cron triggers\n- server: add response transforms for actions, events, and triggers\n- server: bigquery: implement `distinct_on`.\n- server: extend transactions to MSSQL GraphQL queries and `mssql_run_sql` /v2/query API\n- server: improve error messages in MSSQL database query exceptions\n- server: in mssql transactions, rollback only if the transaction is active\n- server: add request and response bodies to OpenAPI specification of REST endpoints\n- server: implement upsert mutations for MS SQL Server (close #7864)\n- server: extend support for insert mutations to tables without primary key constraint in a MSSQL backend\n- server: fix parsing FLOAT64s in scientific notation and non-finite ones in BigQuery\n- server: extend support for the `min`/`max` aggregates to all comparable types in BigQuery\n- server: fix support for joins in aggregates nodes in BigQuery\n- server: fix for passing input objects in query variables to remote schemas with type name customization (#7977)\n- server: fix REST endpoints with path segments not showing correctly in the OpenAPI spec\n- server: fix aliases used in GraphQL queries in REST endpoints not being reflected in the OpenAPI spec\n- server: refresh JWKs a maximum of once per second (fix #5781)\n- server: implement update mutations for MS SQL Server (closes #7834)\n- server: support nested output object types in actions (#4796)\n- server: action webhook requests now include a User-Agent header (fix #8070)\n- console: action/event trigger transforms are now called REST connectors\n- console: fix list of tables (and schemas) being unsorted when creating a new trigger event (fix #6391)\n- console: fix custom field names breaking browse table sorting and the pre-populating of the edit row form\n- console: enable support for insert & delete permissions for mssql tables\n- console: enable inherited role on settings page\n- cli: migrate and seed subcommands has an option in prompt to choose and apply operation on all available databases\n- cli: fix `metadata diff --type json | unified-json` behaving incorrectly and showing diff in YAML format.\n- cli: fix regression in `migrate create` command (#7971)\n- cli: stop using `/healthz` endpoint to determine server health\n- cli: fix regression with `--address` flag of `hasura console` command (#8005)\n\n## v2.1.1\n\n- server: provides a more comprehensive fix for the JSON ser/de backwards incompatibility that was initially addressed by 45481db (#7906)\n\n## v2.1.0\n\n- server: fix issue interpreting urls from environment in the `TestWebhookTransform` endpoint.\n- server: fixes JSON ser/de backwards incompatibility introduced for metadata parsing and 'create_remote_relationship' queries (#7906)\n- console: add sample context section to webhook transforms\n- cli: `hasura metadata diff` shows diff with more context in directory mode\n- cli: revert change to split metadata related to remote schemas into seperate files (introduced in v2.1.0-beta.2)\n\n## v2.1.0-beta.3\n\n- server: allows the use of mock env vars in the `test_webhook_transform` metadata API action\n- server: fix event invocation logs to include transformed request bodies\n- server: fix aggregate queries with nodes field in selection set for sql server (fix #7871)\n- server: fix permissions are not respected for aggregations in sql server (fix #7773)\n- server: the syntax for remote relationships in metadata is changed to be\n  consistent with future remote relationships work. However, the older syntax\n  is still accepted and this is a non-breaking change.\n- server: implement delete mutations for MS SQL Server (closes #7626)\n- server: fix JSON path in error when parsing sources in metadata (fix #7769)\n- server: log locking DB queries during source catalog migration\n- server: fix to allow remote schema response to contain an \"extensions\" field (#7143)\n- server: support database-to-database joins with BigQuery\n- server: improved startup time when using large remote schemas\n- server: fix rest-endpoints bug allow list arguments (fix #7135)\n- server: fallback to unauthorized role when JWT is not found in cookie (fix #7272)\n- server: add support for building linux/arm64 docker image (#6337, #1266)\n- server: provide option to explicitly recreate event triggers for sources in the `reload_metadata` API\n- server: fix `gen_hasura_uuid` migration to be idempotent, so that it doesn't fail if the database is already initialised with source migrations.\n- server: fix mssql `table_by_pk` query returning empty array (fix #7784)\n- server: fix BigQuery queries failing with more than one array relationship\n- console: add comments to tracked functions\n- console: add select all columns option while selecting the columns in event triggers\n- console: add request transforms for events\n- metadata SDK: add type definitions for config v3\n- cli: fix cli-console failing to add migrations if there are tabs in SQL body (#7362)\n- cli: sign windows binary of Hasura CLI (#7147)\n- cli: core CLI features are not blocked in environments without internet (#7695)\n- server: add `_like`/`_nlike` and spatial operators for BigQuery\n\n## v2.1.0-beta.2\n\n### Action transforms\n\nAction transforms are used to perform transformations on the HTTP request generated by an action.\nThis allows you to integrate REST APIs or existing APIs without writing a middleware service\nthat transforms the action's request to the one expected by the API.\n\nRead more in the docs.\n\n### Function field names customization (#7405)\n\nIt is now possible to specify the GraphQL names of tracked SQL functions in\nPostgres sources, and different names may be given to the `_aggregate` and\nsuffix-less versions.  Aliases may be set by both\n`/v1/metadata/pg_track_function` and the new API endpoint\n`/v1/metadata/pg_set_function_customization.`\n\n### Root field name and type name customization per source (#6974)\n\nWhen adding a source it is now possible to specify prefixes and suffixes\nthat will be added to all root field names and type names generated for that\nsource. It is also possible to specify a root \"namespace\" field to use for the\nsource.\n\n### Bug fixes and improvements\n\n- server: do not recreate event triggers if tables haven't changed on reloading metadata\n- server: moves `request_transform` into the Action Definition the `create_action` metadata API call.\n- server: call auth webhooks even when the request is malformed JSON or otherwise fails to parse (close #7532)\n- server: updates kriti to v0.2.1 which adds an `escapeUri` function\n- server: add cascade option to `mssql_run_sql` metadata API\n- server: fix bug which recreated event triggers every time the graphql-engine started up\n- server: fix bug in OpenAPI when multiple REST endpoints have the same URL path but different method\n- server: add support for GraphQL block strings\n- server: Correctly translate permissions on functions to SQL (#7617)\n- server: add transformed request to action error responses\n- server: allow nullable action responses (#4405)\n- server: add support for openapi json of REST Endpoints\n- server: enable inherited roles by default in the graphql-engine\n- server: support MSSQL insert mutations\n- server: fix bug in OpenAPI when multiple REST endpoints have the same URL path but different method\n- server: forward Set-Cookie headers from auth webhook\n- console: design cleanup Modify and Add Table forms (close #7454)\n- console: enable custom graphql root fields for mssql under modify tab\n- console: allow dropping indices on all schemas\n- console: fix bug with displaying 1-to-1 relationship with the same column mapping (close #7552)\n- console: add request transforms for actions\n- console: fix v2 metadata imports\n- console: design cleanup Modify and Add Table forms (close #7454)\n- console: enable custom graphql root fields for mssql under modify tab\n- cli: split remote schema permissions metadata into seperate files (#7033)\n- cli: support action request transforms in metadata\n- cli: make `--database-name` optional in `migrate` subcommands when using a single database (#7434)\n- cli: support absolute paths in --envfile (#5689)\n- cli: split remote schema permissions metadata into seperate files (#7033)\n\n## v2.0.10\n\n- server: fix bug which recreated event triggers every time the graphql-engine started up\n- server: remove identity notion for table columns (fix #7557)\n- console: add performance fixes for handling large db schemas\n\n## v2.1.0-beta.1\n\n- server: Ignore unexpected fields in action responses (#5731)\n- server: add webhook transformations for Actions and EventTriggers\n- server: optimize SQL query generation with LIMITs\n- server: add GraphQL request query in the payload for synchronous actions\n- server: improve the event trigger logging on errors\n  NOTE: This change introduces a breaking change, earlier when there\n  was a client error when trying to process an event, then the status was reported as 1000. Now, the status 1000 has been removed and if any status was received by the graphql-engine from the webhook, the status\n  of the invocation will be the same otherwise it will be `NULL`.\n- server: support `extensions` field in error responses from action webhook endpoints (fix #4001)\n- server: fix custom-check based permissions for MSSQL (#7429)\n- server: query performance improvements\n- server: remove identity notion for table columns (fix #7557)\n- server: support MSSQL transactions\n- server: log individual operation details in the http-log during a batch graphQL query execution\n- server: update `create_scheduled_event` API to return `event_id` in response\n- server: fix bug which allowed inconsistent metadata to exist after the `replace_metadata` API even though `allow_inconsistent_object` is set to `false`.\n- server: fix explicit `null` values not allowed in nested object relationship inserts (#7484)\n- server: `introspect_remote_schema` API now returns original remote schema instead of customized schema\n- server: prevent empty subscription roots in the schema (#6898)\n- server: support database-to-database joins (for now, limited to Postgres as the target side of the join)\n- server: add support for user comments for trackable functions (#7490)\n- console: support tracking of functions with return a single row\n- console: add GraphQL customisation under Remote schema edit tab\n- console: fix cross-schema array relationship suggestions\n- console: add performance fixes for handle large db schemas\n- console: fix missing cross-schema computed fields in permission builder\n- console: add time limits setting to security settings\n- cli: add support for `network` metadata object\n- cli: `hasura migrate apply --all-databases` will return a non zero exit code if operation failed on atleast one database (#7499)\n- cli: `migrate create --from-server` creates the migration and marks it as applied on the server\n- cli: support `query_tags` in metadata\n- cli: add `hasura deploy` command\n- cli: allow exporting and applying metadata from `yaml/json` files\n- cli: allow squashing specific set of migrations. A new `--to` flag is introduced in `migrate squash` command. eg: `hasura migrate squash --from <v1> --to <v4>`\n- cli: `hasura init --endpoint <endpoint>` adds an option to export metadata and create initial migration from the server.\n\n## v2.0.9\n\n- server: fix export_metadata V2 bug which included cron triggers with `include_in_metadata: false`\n- server: disable mutation for materialised views (#6688)\n- server: set `tracecontext` and `userInfo` for DML actions on Postgres sources\n- server: add support for `connection_parameters` on `pg_add_source` API\n- cli: add progress bar for `migrate apply` command (#4795)\n- cli: embed cli-ext for windows binaries (#7509)\n\n## v2.0.8\n\n- server: fix nullability of object relationships (close #7201)\n- server: update non-existent event trigger, action and query collection error msgs (close #7396)\n- server: fix broken `untrack_function` for non-default source\n- server: Adding support for TLS allowlist by domain and service id (port)\n- server: add support for `graphql-ws` clients\n- console: fix error due to rendering inconsistent object's message\n- console: support insecure TLS allowlist\n- console: support computed fields in remote schema join\n- console: fix data sidebar not updated when a table is renamed\n- cli: fix delay starting console using `hasura console` (#7255)\n\n## v2.0.7\n\n- server: fix v2 -> v1 downgrade bug when cron triggers exist\n- server: add index on the `event_id` column of the `hdb_cron_event_invocation_logs` table\n- server: fix GraphQL type for remote relationship field (close #7284)\n- server: support EdDSA algorithm and key type for JWT\n- server: fix GraphQL type for single-row returning functions (close #7109)\n- console: add support for creation of indexes for Postgres data sources\n- docs: document the cleanup process for scheduled triggers\n- console: allow same named queries and unnamed queries on allowlist file upload\n- console: support computed fields in permission builder\n- console: add custom timeouts to actions\n\n## v2.0.6\n\n- server: Add support for inherited roles for mutations, remote schema, actions and custom function permissions\n- server: fix an issue with remote relationships when join columns are aliased (close #7180)\n- server: fix for incorrect `__typename` value in nested remote joins with a customized remote schema\n- server: fix a bug where some unicode characters in default string values for fields in remote schemas could lead to internal errors\n- server: bigquery: implement `_in` and `_nin` operators. (close #7343)\n- server: bigquery: custom root names, table names and field names for bigquery are included in tests\n- console: fix untracked foreign-key relationships suggestion across schemas\n- console: allow resolution of conflicting inherited role permissions\n- cli: fix SDL formatting in `actions.graphql`(#7296)\n\n## v2.0.5\n\n- server: prevent invalid collisions in remote variable cache key (close #7170)\n- server: preserve unchanged cron triggers in `replace_metadata` API\n- server: fix inherited roles bug where mutations were not accessible when inherited roles was enabled\n- server: reintroduce the unique name constraint in allowed lists\n- server: subscriptions now validate that all session variables are properly set (#7111)\n- console: fix metadata out-of-date errors when creating tables with certain configurations (fix #6805) (fix #7233)\n- cli-migrations-v2: fix database url showing up in metadata (#7319)\n\n## v2.0.4\n\n- server: Support computed fields in permission check/filter (close #7102)\n- server: support computed fields in query 'order_by' (close #7103)\n- server: log warning if there are errors while executing clean up actions after \"drop source\" (previously it would throw an error)\n- server: Fixed a bug where MSSQL and BigQuery would ignore environment variables set from the console\n- server: Fixing bug in ReplaceMetadata parser - Moving from Alternative to committed-choice.\n- server: Relax the unique operation name constraint when adding a query to a query collection\n- server: officially deprecate query plan caching, which had already been disabled for a long time\n- server/bigquery: Fix issues related to adding and querying from non-US datasets (closes [6937](https://github.com/hasura/graphql-engine/issues/6937)).\n- console: add template gallery\n- console: add pagination on the Raw SQL results page\n- console: fix issues with replacing invalid graphql identifiers in table and column names\n- console: show error message on inconsistent objects table\n- server/mssql: Fix [graphql-engine#7130](https://github.com/hasura/graphql-engine/issues/7130) for `__typename` errors and more\ngenerally, JSON-style aggregates.\n- cli: add support for `query_tags` metadata object\n\n## v2.0.3\n(Add entries below in the order of server, console, cli, docs, others)\n\n- server: inherited role improvements for select queries\n    - an inherited role can now inherit from other inherited roles as well\n    - explicit permissions for inherited roles can now be set which will override the inherited permission (if any)\n- server: fix optional global_select_limit config for BigQuery\n- console: support `global_select_limit` for bigquery sources\n- cli: add `-o`/`--output` flag for `hasura metadata inconsistency list` command\n\n## v2.0.2\n\n- server: only if `query-log` is enabled the graphql query string is printed in `http-log` and `websocket-log`\n- server: fix reloading inconsistent sources or remote schemas via `reload_metadata` API\n- server: support scalar computed fields in remote joins (close #7101)\n- server: Support computed fields in query filter (`where` argument) (close #7100)\n- server: add a `$.detail.operation.request_mode` field to `http-log` which takes the values `\"single\"` or `\"batched\"` to log whether a GraphQL request was executed on its own or as part of a batch\n- server: add `query` field to `http-log` and `websocket-log` in non-error cases\n- server: Add global limit to BigQuery via the `global_select_limit` field in the connection configuration\n- server: include action and event names in log output\n- server: log all HTTP errors in remote schema calls as `remote-schema-error` with details\n- server: For BigQuery, make `global_select_limit` configuration optional with a default value of\n`1000`\n- console: add `reload all databases` checkbox to the metadata settings page\n- console: add schema sharing\n- console: fix issue with changing table's column name and graphQL field name simultaneously\n- console: fix adding/removing/updating database not getting added to `metadata/databases.yaml` in CLI mode\n- console: fix migrations being generated for allowed queries and inherited roles and in CLI mode\n- cli: add linux and darwin arm64 support\n\n## v2.0.1\n\n- server: fix resetting metadata catalog version to 43 while initializing postgres source with v1.0 catalog\n\n## v2.0.0\n\nNOTE: This only includes the diff between v2.0.0 and v2.0.0-beta.2\n\n- server: make improvements in the `livequery-poller-log`\n- server: Backends Citus, MSSQL, and BigQuery now all support the `set_table_customization` operation.\n- server: Adds caching support for queries using remote schema permissions\n- server: All Postgres boolean operators now support the null-collapsing behaviour described in [#704](https://github.com/hasura/graphql-engine/issues/704) and enabled via the `HASURA_GRAPHQL_V1_BOOLEAN_NULL_COLLAPSE` environment variable.\n- server: add `update_remote_schema` metadata query\n- console: add citus support\n- console: add support for `update_remote_schema` API while modifying remote schemas\n- console: hide postgres system schemas by default\n- cli: `metadata diff` will now only show the differences in metadata. old behaviour is avialble behind a flag (`--type unified-common`) (#5487)\n- cli: add citus support\n- cli: allow `--skip-execution` to be used with `up` and `down` flags in `migrate apply`\n- cli: allow deleting migration state from server using `--server` flag in `migrate delete` command\n\n## v2.0.0-beta.2\n\n### Bug fixes and improvements\n\n- server: nodes aggregates and inherited roles support for SQL Server\n- server: remote relationships (database to remote schema joins) are now supported on SQL Server and BigQuery\n- server: BigQuery: switches to a single query generation from a dataloader approach. This should result in\n  faster query responses.\n- server: BigQuery: various bug fixes related to aggregations\n- server: fix add source API wiping out source's metadata when replace_configuration is true\n- server: add support for customization of field names and type names when adding a remote schema\n- console: add foreign key CRUD functionality to ms sql server tables\n- console: allow tracking of custom SQL functions having composite type (rowtype) input arguments\n- console: allow input object presets in remote schema permissions\n- console: add modify functionality on columns, primary keys & unique keys to MS SQL Server tables\n- cli: add interactive prompt to get input when `--database-name` flag is missing\n- cli: fix metadata export to avoid unnecessary empty lines in actions.graphql (#5338)\n- cli: generate migrations for mssql databases in hasura console mode  (#7011)\n\n## v2.0.0-beta.1\n\n### Bug fixes and improvements\n\n- server: fix regression with MSSQL execution (#6976)\n- server: fix asymptotic performance of fetching from the event_log table\n- console: add `pool_timeout`, `connection_lifetime` and `isolation_level` connection params to connect database form\n- console: add check constraints and comments to MS SQL Server tables' read-only modify page\n- console: add create table functionality for MS SQL Server\n- console: update connect database form with SSL certificates\n- console: add drop table functionality to MS SQL Server tables\n- console: allow renaming data sources\n- console: show error notification for table and cloumn names exceeding 63 characters and trim migration names exceeding 255 characters\n- cli: fix version command using stderr as output stream (#6998)\n\n## v2.0.0-alpha.11\n\n### Breaking Changes\n\n- In this release, the name of the computed field argument has changed from `<function_name>_args` to\n  `<computed_field_name>_<table_name>_args` as the function name is internal detail for a computed field.\n  This change also enables adding a root-level tracked function as a computed field which previously would have thrown input type conflict error.\n\n### Bug fixes and improvements\n\n- server: detect and apply metadata changes by `mssql_run_sql` API if required\n- server: fix bug with creation of new cron events when cron trigger is imported via metadata\n- server: log warning for deprecated environment variables.\n- server: initialise `hdb_catalog` tables only when required, and only run the event loop for sources where it is required\n- server: fix a bug where remote schema permissions would fail when used in conjunction with query variables (fix #6656)\n- server: add `rename_source` metadata API (fix #6681)\n- server: fix subscriptions with session argument in user-defined function (fix #6657)\n- server: MSSQL: Support ORDER BY for text/ntext types.\n- server: MSSQL: Support _lt, _eq, etc. for text/ntext types.\n- server: MSSQL: Fix offset when there's no order by.\n- server: MSSQL: Support booleans better.\n- server: Include permission filter in the exists clause (fix #6931)\n- server: add support for adding multi-column foreign key relationships\n- server: fix a bug where `@skip` and `@include` were not allowed on the same field\n- server: properly reject queries containing unknown or misplaced directives\n- server: fix bigint overflow, incorrect geojson format in event trigger payload (fix #3697) (fix #2368)\n- server: fix introspection output not being consistently ordered\n- server: forward the x-request-id header when generated by graphql-engine (instead of being user-provided) (fix #6654)\n- server: fix erroneous schema type for action output fields (fix #6631)\n- server: introduce `--graceful-shutdown-timeout` server config which will wait for the in-flight scheduled and event trigger events and async actions to complete before shutting down\n- server: fix a regression from V1 and allow string values for most Postgres column types\n- server: sanitise event trigger and scheduled trigger logs to omit possibly sensitive request body and headers\n- server: fix parsing of values for Postgres char columns (fix #6814)\n- server: fix query execution of custom function containing a composite argument type\n- server: fix a bug in query validation that would cause some queries using default variable values to be rejected (fix #6867)\n- server: REST endpoint bugfix for UUID url params\n- server: custom URI schemes are now supported in CORS config (fix #5818) (#5940)\n- server: explaining/analyzing a query now works for mssql sources\n- server: fix MSSQL multiplexed subscriptions (fix #6887)\n- server: fix bug preventing tables with the same name in different sources\n- server: include more detail in inconsistent metadata error messages (fix #6684)\n- server: return useful error messages for missing env vars in metadata when `allow_inconsistent_metadata` is enabled (fix #6913)\n- console: add union types to remote schema permissions\n- console: read-only modify page for mssql\n- console: filter out partitions from track table list and display partition info\n- console: fixes an issue where no schemas are listed on an MSSQL source\n- console: allow editing sources configuration\n- console: show db version and source details in manage db page\n- console: add one-to-one relationships support\n- console: rearrange connect database form and add prepared statements\n- cli: add `-o`/`--output` flag for `hasura metadata` `apply` & `export` subcommands\n```\n# export metadata and write to stdout\n$ hasura metadata export -o json\n```\n- cli: add support for `graphql_schema_introspection` metadata object\n- cli: fix applying migrations in a different environment after config v3 update (#6861)\n- cli: fix bug caused by usage of space character in database name (#6852)\n- cli: fix issues with generated filepaths in windows (#6813)\n- cli: add warning for incompatible pro plugin version\n- cli: add new sub command `delete` to `hasura migrate`\n- cli: fix bug in migrate squash due to empty down file (#3897)\n- cli: fix bug with metadata apply on some CI environments (#6987)\n\n## v2.0.0-alpha.10\n\n### Bug fixes and improvements\n\n- server: fix MSSQL table metadata SQL, return empty array for empty rows (fix #1226)\n- server: aggregation fields are now supported on mssql\n- server: accept a new server config flag `--events-fetch-batch-size` to configure the number of rows being fetched from the events log table in a single batch\n- server: restore proper batching behavior in event trigger processing so that at most 2x batch events are checked out at a time\n- server: fix regression: `on_conflict` was missing in the schema for inserts in tables where the current user has no columns listed in their update permissions (fix #6804)\n- server: fix one-to-one relationship bug which prevented adding one-to-one relationships which didn't have the same column name for target and source\n- console: fix Postgres table creation when table has a non-lowercase name and a comment (#6760)\n- cli: fix regression - `metadata apply —dry-run` was overwriting local metadata files with metadata on server when it should just display the differences.\n- server: decrease polling interval for scheduled triggers from 60 to 10 seconds\n- server: Change `HASURA_GRAPHQL_SCHEMA_POLL_INTERVAL` env var to `HASURA_GRAPHQL_SCHEMA_SYNC_POLL_INTERVAL` and `schema-poll-interval` option to `--schema-sync-poll-interval`.\n\n## v2.0.0-alpha.9\n\n### Support comparing columns across related tables in permission's boolean expressions\n\nWe now support comparing columns across related tables. For example:\n\nConsider two tables, `items(id, name, quantity)` and `shopping_cart(id, item_id, quantity)`\nand these two tables are related via the `item_id` column. Now, while defining insert permission\non the `shopping_cart` table, there can be a check to insert an item into the shopping cart\nonly when there are enough present in the items inventory.\n\n### Bug fixes and improvements\n\n- server: make the ``HASURA_GRAPHQL_PG_CONN_LIFETIME``, ``HASURA_GRAPHQL_POOL_TIMEOUT`` and ``HASURA_GRAPHQL_TX_ISOLATION`` configs source specific\n- server: fix bug with catalog upgrade from alpha.7 (fix #6802)\n- server: fix a bug in remote schema permissions that could result in an invalid GraphQL schema (fix #6029, #6703)\n- server: support query multiplexing in MSSQL subscriptions\n- server: an inherited role's limit will be the max limit of all the roles (#6671)\n- console: add bigquery support (#1000)\n- cli: add support for bigquery in metadata operations\n\n## v2.0.0-alpha.8\n\n### Support for 3D PostGIS Operators\n\nWe now support the use of the functions `ST_3DDWithin` and `ST_3DIntersects` in boolean expressions.\nNote that `ST_3DIntersects` requires PostGIS be [built with SFCGAL support](https://www.postgis.net/docs/manual-3.1/reference.html#reference_sfcgal) which may depend on the PostGIS distribution used.\n\n### Support for null values in boolean expressions\n\nIn v2, we introduced a breaking change, that aimed at fixing a [long-standing issue](https://github.com/hasura/graphql-engine/issues/704): a null value in a boolean expression would always evaluate to `True` for all rows. For example, the following queries were all equivalent:\n\n```graphql\ndelete_users(where: {_id: {_eq: null}})  # field is null, which is as if it were omitted\ndelete_users(where: {_id: {}})           # object is empty, evaluates to True for all rows\ndelete_users(where: {})                  # object is empty, evaluates to True for all rows\ndelete_users()                           # delete all users\n```\n\nThis behaviour was unintuitive, and could be an unpleasant surprise for users that expected the first query to mean \"delete all users for whom the id column is null\". Therefore in v2, we changed the implementation of boolean operators to reject null values, as we deemed it safer:\n\n\n```graphql\ndelete_users(where: {_id: {_eq: null}})  # error: argument of _eq cannot be null\n```\n\nHowever, this change broke the workflows of [some of our users](https://github.com/hasura/graphql-engine/issues/6660) who were relying on this property of boolean operators. This was used, for instance, to _conditionally_ enable a test:\n\n```graphql\nquery($isVerified: Boolean) {\n  users(where: {_isVerified: {_eq: $isVerified}}) {\n    name\n  }\n}\n```\n\nIn the future, we will probably offer a way to explicitly choose which behaviour to use for each `where` clause; perhaps by introducing new and distinct operators that make it explicit that they will default to true if the value is null. In the meantime, this release provides a way to revert the engine to its previous behaviour: if the `HASURA_GRAPHQL_V1_BOOLEAN_NULL_COLLAPSE` environment variable is set to \"true\", null values in boolean expression will behave like they did in v1 for the following operators: `_is_null`, `_eq`, `_neq`, `_in`, `_nin`, `_gt`, `_lt`, `_gte`, `_lte`.\n\n### Bug fixes and improvements\n\n- server: all /query APIs now require admin privileges\n- server: add a new `/dev/rts_stats` endpoint, enabled when hasura is started with '+RTS -T'\n- server: re-enable a default HASURA_GRAPHQL_PG_CONN_LIFETIME of 10min\n- server: support for bigquery datasets\n- server: format the values of `injectEventContext` as hexadecimal string instead of integer (fix #6465)\n- server: add \"kind\" field to query-log items. Kind can be \"database\", \"action\", \"remote-schema\", \"cached\" or \"introspection\".\n- console: add custom_column_names to track_table request with replaced invalid characters (#992)\n- console: add details button to the success notification to see inserted row\n- console: add request preview for REST endpoints\n- cli: fix errors being ignored during `metadata apply` in config v3 (fix #6784)\n\n## v2.0.0-alpha.7\n\n### Transactions for Postgres mutations\n\nWith v2 came the introduction of heterogeneous execution: in one query or mutation, you can target different sources: it is possible, for instance, in one mutation, to both insert a row in a table in a table on Postgres and another row in another table on MSSQL:\n\n```graphql\nmutation {\n  // goes to Postgres\n  insert_author_one(object: {name: \"Simon Peyton Jones\"}) {\n    name\n  }\n\n  // goes to MSSQL\n  insert_publication_one(object: {name: \"Template meta-programming for Haskell\"}) {\n    name\n  }\n}\n```\n\nHowever, heterogeneous execution has a cost: we can no longer run mutations as a transaction, given that each part may target a different database. This is a regression compared to v1.\n\nWhile we want to fix this by offering, in the future, an explicit API that allows our users to *choose* when a series of mutations are executed as a transaction, for now we are introducing the following optimisation: when all the fields in a mutation target the same Postgres source, we will run them as a transaction like we would have in v1.\n\n\n### Bug fixes and improvements\n\n- server: `use_prepared_statements` option (default: False) in `add_pg_source` metadata API\n- server: add `--async-actions-fetch-interval` command-line flag and `HASURA_GRAPHQL_ASYNC_ACTIONS_FETCH_INTERVAL` environment variable for configuring\n          async actions re-fetch interval from metadata storage (fix #6460)\n- server: add 'replace_configuration' option (default: false) in the add source API payload\n- server: add a comment field for actions (#231)\n- server: accept GeoJSON for MSSQL geometry and geography operators (#787)\n- server: update pg_dump clean output to disable function body validation in create function statements to avoid errors due to forward references\n- server: fix a bug preventing some MSSQL foreign key relationships from being tracked\n- console: add a comment field for actions (#231)\n- console: data sidebar bug fixes and improvements (#921)\n- cli: fix seeds incorrectly being applied to databases in config v3 (#6683)\n- cli: add `--all-databases` flag for `migrate apply`, this allows applying migrations on all connected databases in one go\n- cli-migrations: add config v3 image\n- docs: add Hasura v2 upgrade guide (#1030)\n\n## v2.0.0-alpha.6\n\n### Support geometry and geography spatial data comparison operators in MS SQL Server\n\nComparison operators on spatial data types, geometry and geography, are now supported in MS SQL Server. The following operators are supported:\n\n- STEquals\n- STIntersects\n- STTouches\n- STOverlaps\n- STCrosses\n- STWithin\n- STContains\n\n**Example query:** Select values equal to a given geography instance\n\n```\nquery {\n  spatial_types_geog(\n    where: {\n      point: { _st_equals: \"POINT(3 4)\" }\n      }\n    ) {\n    point\n  }\n}\n```\n\n**Example query:** Select values that spatially contain a given geometry instance\n\n```\nquery {\n  spatial_types_geom(\n    where: {\n      compoundcurve: { _st_contains: \"POINT(0.5 0)\" }\n    }\n  ) {\n    compoundcurve\n  }\n}\n```\n\n### Bug fixes and improvements\n\n- server: fix action output type schema generation (fix #6631)\n- server/mssql: `mssql_add_source` can now take connection strings from environment variables\n- server: support `IN`, `NIN`, `LIKE` and `NLIKE` operators in MS SQL Server\n- server: remove the restriction of supporting only base type function arguments. The type of an argument with a table type is now `<tablename>_scalar` to avoid conflicts with the object type `<tablename>`.\n- server: fix inherited_roles issue when some of the underlying roles don't have permissions configured (fixes #6672)\n- server: fix action custom types failing to parse when mutually recursive\n- server: fix MSSQL table name descriptions\n- server: emit `postgres-max-connections-error` when max postgres connections are reached\n- server: disable caching for actions when \"forward-client-headers\" option is turned on\n- console: allow editing rest endpoints queries and misc ui improvements\n- console: display collection names and queries from all collections in allowlist\n- cli: match ordering of keys in project metadata files with server metadata\n\n## v2.0.0-alpha.5\n\n### Bug fixes and improvements\n\n- server: fix issue with parsing of remote schema list of input objects (fix #6584)\n- server: support tracking functions having only base type arguments (fix #6628)\n- console: add browse rows for mssql tables (#805)\n- console: remote schema permissions bug fixes (#439)\n- cli: cli-ext is now a native part of cli binary (no longer needed as a plugin)\n- cli: fix issue with adding operation to allow list in console mode (fix #6617)\n\n## v2.0.0-alpha.4\n\n### Bug fixes and improvements\n\n- server/mssql: support tracking and querying from views\n- server: inherited roles for PG queries and subscription\n- server: replaces postgres LISTEN/NOTIFY channel with lightweight polling for metadata syncing in order to resolve proxy issues\n- server: fix issue when a remote relationship's joining field had a custom GraphQL name defined (fix #6626)\n- server: fix handling of nullable object relationships (fix #6633)\n- console: add inherited roles support (#483)\n- console: add permissions support for mssql tables (#677)\n- cli: support rest endpoints\n- cli: support mssql sources\n- cli: use relative paths in metadata !include directives\n- cli: rename `--database` flag in `migrate` and `seed` command to `--database-name`\n- cli: support inherited roles\n\n\n## v2.0.0-alpha.3\n\n### Bug fixes and improvements\n\n- server/mssql: fix malformed JSON answer on empty tables\n- server/mssql: fix runtime errors when selecting geography/geometry columns\n- server/mssql: supports connection pooling to sql server\n- server/mssql: fix text values erroneously being parsed as varchar\n- server: improve errors messages for inconsistent sources\n- console: add relationship tab for mssql tables (#677)\n- build: fix the packaging of static console assets (fix #6610)\n- server: make REST endpoint errors compatible with inconsistent metadata\n\n\n## v2.0.0-alpha.2\n\n### MSSQL support\n\nIt's now possible to add a MSSQL server as a source. For now, only read-only queries and subscriptions are supported.\n\nSee the documentation at `graphql/core/databases/ms-sql-server` for more information.\n\n## v2.0.0-alpha.1\n\nBunch of bug fixes and refactor for generalized backends: https://github.com/hasura/graphql-engine/compare/v1.4.0-alpha.2...v2.0.0-alpha.1\n\n## v1.4.0-alpha.2\n\n### Inconsistent Metadata\n\nAdd `allow_inconsistent_metadata` option to `replace_metadata` API.\nThis will replace metadata even if there are inconsistency errors,\nreturning a 200 response code and `is_consistent` and `inconsistent_objects`\nkeys in the response body.\n\n### Bug fixes and improvements\n\n(Add entries here in the order of: server, console, cli, docs, others)\n\n- server: fix issue of not exposing mutation functions to the admin role when function permissions are inferred (fix #6503)\n- server: add \"resource_version\" field to metadata for concurrency control - disable lookup during migrations\n- server: fix issue with queries on character column types (close #6217)\n- server: optimize resolving source. Resolving a source would create connection pools every time. Optimize that to re-create connection pools only when necessary. (#609)\n- server: fix issues with remote schema introspection and queries over TLS.\n- server: Prohibit Invalid slashes, duplicate variables, subscriptions for REST endpoints\n- server: Prohibit non-singular query definitions for REST endpoints\n- server: better handling for one-to-one relationships via both `manual_configuration` and `foreign_key_constraint_on` (#2576)\n\n## v1.4.0-alpha.1\n\n### REST Endpoints\n\nThe RESTified GraphQL Endpoints API allows for the use of a REST interface to saved GraphQL queries and mutations.\n\nUsers specify the query or mutation they wish to make available, as well a URL template. Segments of the URL template can potentially capture data to be used as GraphQL variables.\n\nSee the documentation at `graphql/core/api-reference/restified` for more information.\n\n### Heterogeneous execution\n\nPrevious releases have allowed queries to request data from either Postgres or remote schemas, but not both. This release removes that restriction, so multiple data sources may be mixed within a single query. For example, GraphQL Engine can execute a query like\n\n```\nquery {\n  articles {\n    title\n  }\n  weather {\n    temperature\n  }\n}\n```\n\nwhere the articles are fetched from the database, and the weather is fetched from a remote server.\n\n### Support tracking VOLATILE SQL functions as mutations. (closing #1514)\n\nPreviously we could only track `STABLE` or `IMMUTABLE` functions, and only as\nqueries. Now the version 2 of `track_table` also supports tracking functions as\nmutations:\n\n```\n  {\n    \"type\": \"track_function\",\n    \"version\": 2,\n    \"args\": {\n        \"function\": {\n            \"schema\": \"public\",\n            \"name\": \"some_volatile_function\"\n        },\n        \"configuration\": {\n            \"exposed_as\": \"mutation\"\n        }\n      }\n    }\n```\n\n### Remote schema permissions\n\nNow, permissions can be configured for remote schemas as well, which works similar\nto the permissions system of the postgres tables. Fields/arguments can be removed from the\nschema and arguments can also be preset to limit the role from having unrestricted\naccess over it.\n\n*NOTE*: To enable remote schema permissions, the graphql-engine needs to be started\neither with the server flag ``--enable-remote-schema-permissions`` or the environment\nvariable ``HASURA_GRAPHQL_ENABLE_REMOTE_SCHEMA_PERMISSIONS`` set to ``true``.\n\n### Function Permissions\n\nBefore volatile functions were supported, the permissions for functions were automatically inferred\nfrom the select permission of the target table. Now, since volatile functions are supported we can't\ndo this anymore, so function permissions are introduced which will explicitly grant permission to\na function for a given role. A pre-requisite to adding a function permission is that the role should\nhave select permissions to the target table of the function.\n\n### `ltree` comparison operators\n\nComparison operators on columns with ``ltree``, ``lquery`` or ``ltxtquery`` types are now supported, for searching through data stored in a hierarchical tree-like structure.\n\nSee the documentation at `graphql/core/queries/query-filters` more details on the currently supported ``ltree`` operators.\n\n**Example query:** Select ancestors of an `ltree` argument\n\n```\nquery {\n  tree (\n    where: {path: {_ancestor: \"Tree.Collections.Pictures.Astronomy.Astronauts\"}}\n  ) {\n    path\n  }\n}\n```\n\n**Example response:**\n```\n{\n  \"data\": {\n    \"tree\": [\n      {\n        \"path\": \"Tree\"\n      },\n      {\n        \"path\": \"Tree.Collections\"\n      },\n      {\n        \"path\": \"Tree.Collections.Pictures\"\n      },\n      {\n        \"path\": \"Tree.Collections.Pictures.Astronomy\"\n      },\n      {\n        \"path\": \"Tree.Collections.Pictures.Astronomy.Astronauts\"\n      }\n    ]\n  }\n}\n```\n\n### Breaking changes\n\n- This release contains the [PDV refactor (#4111)](https://github.com/hasura/graphql-engine/pull/4111), a significant rewrite of the internals of the server, which did include some breaking changes:\n\n   - The semantics of explicit `null` values in `where` filters have changed according to the discussion in [issue 704](https://github.com/hasura/graphql-engine/issues/704#issuecomment-635571407): an explicit `null` value in a comparison input object will be treated as an error rather than resulting in the expression being evaluated to `True`. For instance: `delete_users(where: {id: {_eq: $userId}}) { name }` will yield an error if `$userId` is `null` instead of deleting all users.\n   - The validation of required headers has been fixed (closing #14 and #3659):\n     - if a query selects table `bar` through table `foo` via a relationship, the required permissions headers will be the union of the required headers of table `foo` and table `bar` (we used to only check the headers of the root table);\n     - if an insert does not have an `on_conflict` clause, it will not require the update permissions headers.\n\n- This release contains the remote schema permissions feature, which introduces a breaking change:\n\n  Earlier, remote schemas were considered to be a public entity and all the roles had unrestricted\n  access to the remote schema. If remote schema permissions are enabled in the graphql-engine, a given\n  remote schema will only be accessible to a role ,if the role has permissions configured for the said remote schema\n  and be accessible according to the permissions that were configured for the role.\n\n### Bug fixes and improvements\n\n(Add entries here in the order of: server, console, cli, docs, others)\n\n- server: add `request` field to webhook POST body containing the GraphQL query/mutation, its name, and any variables passed (close #2666)\n- server: fix a regression where variables in fragments weren't accepted (fix #6303)\n- server: output stack traces when encountering conflicting GraphQL types in the schema\n- server: add `--websocket-compression` command-line flag for enabling websocket compression (fix #3292)\n- server: some mutations that cannot be performed will no longer be in the schema (for instance, `delete_by_pk` mutations won't be shown to users that do not have select permissions on all primary keys) (#4111)\n- server: treat the absence of `backend_only` configuration and `backend_only: false` equally (closing #5059) (#4111)\n- server: accept only non-negative integers for batch size and refetch interval (close #5653) (#5759)\n- server: Configurable websocket keep-alive interval. Add `--websocket-keepalive` command-line flag and `HASURA_GRAPHQL_WEBSOCKET_KEEPALIVE` env variable (fix #3539)\n- server: validate remote schema queries (fixes #4143)\n- server: introduce optional custom table name in table configuration to track the table according to the custom name. The `set_table_custom_fields` API has been deprecated, A new API `set_table_customization` has been added to set the configuration. (#3811)\n- server: support joining Int or String scalar types to ID scalar type in remote relationship\n- server: add support for POSIX operators (close #4317) (#6172)\n- server: do not block catalog migration on inconsistent metadata\n- server: update `forkImmortal` function to log more information, i.e log starting of threads and log asynchronous and synchronous exception.\n- server: various changes to ensure timely cleanup of background threads and other resources in the event of a SIGTERM signal.\n- server: fix issue when the `relationships` field in `objects` field is passed `[]` in the `set_custom_types` API (fix #6357)\n- server: fix issue with event triggers defined on a table which is partitioned (fixes #6261)\n- server: action array relationships now support the same input arguments (such as where or distinct_on) as usual relationships\n- server: action array relationships now support aggregate relationships\n- server: fix issue with non-optional fields of the remote schema being added as optional in the graphql-engine (fix #6401)\n- server: accept new config `allowed_skew` in JWT config to provide leeway for JWT expiry (fixes #2109)\n- server: fix issue with query actions with relationship with permissions configured on the remote table (fix #6385)\n- server: always log the `request_id` at the `detail.request_id` path for both `query-log` and `http-log` (#6244)\n- server: fix issue with `--stringify-numeric-types` not stringifying aggregate fields (fix #5704)\n- server: derive permissions for remote relationship field from the corresponding remote schema's permissions\n- server: terminate a request if time to acquire connection from pool exceeds configurable timeout (#6326)\n- server: fix issue with mapping session variables to standard JWT claims (fix #6449)\n- server: support tracking of functions that return a single row (fix #4299)\n- server: reduce memory usage consumption of the schema cache structures, and fix a memory leak\n- server: add source name in livequery logs\n- server: support ltree comparison operators (close #625)\n- server: support parsing JWT from cookie header (fix #2183)\n- console: allow user to cascade Postgres dependencies when dropping Postgres objects (close #5109) (#5248)\n- console: mark inconsistent remote schemas in the UI (close #5093) (#5181)\n- console: remove ONLY as default for ALTER TABLE in column alter operations (close #5512) #5706\n- console: add onboarding helper for new users (#355)\n- console: add option to flag an insertion as a migration from `Data` section (close #1766) (#4933)\n- console: down migrations improvements (close #3503, #4988) (#4790)\n- console: allow setting computed fields for views (close #6168) (#6174)\n- console: select first operator by default on the browse rows screen (close #5729) (#6032)\n- console: fix allow-list not getting added to metadata/allow_list.yaml in CLI mode (close #6374)\n- console: misc bug fixes (close #4785, #6330, #6288)\n- console: allow setting table custom name (#212)\n- console: support tracking VOLATILE functions as mutations or queries (close #6228)\n- console: show only compatible postgres functions in computed fields section (close #5155) (#5978)\n- console: added export data option on browse rows page (close #1438 #5158)\n- console: add session argument field for computed fields (close #5154) (#5610)\n- console: add support for function permissions (#413)\n- console: add tree view for Data Tab UI (#524)\n- console: add support for RESTified Endpoints (#569)\n- cli: add missing global flags for seed command (#5565)\n- cli: allow seeds as alias for seed command (#5693)\n- cli: fix action timeouts not being picked up in metadata operations (#6220)\n- build: add `test_server_pg_13` to the CI to run the server tests on Postgres v13 (#6070)\n\n## v1.3.3\n\n### Server - Support for mapping session variables to default JWT claims\n\nSome auth providers do not let users add custom claims in JWT. In such cases, the server can take a JWT configuration option called `claims_map` to specify a mapping of Hasura session variables to values in existing claims via JSONPath or literal values.\n\nExample:-\n\nConsider the following JWT claim:\n\n```\n  {\n    \"sub\": \"1234567890\",\n    \"name\": \"John Doe\",\n    \"admin\": true,\n    \"iat\": 1516239022,\n    \"user\": {\n      \"id\": \"ujdh739kd\",\n      \"appRoles\": [\"user\", \"editor\"]\n    }\n  }\n```\n\nThe corresponding JWT config can be:\n\n```\n  {\n    \"type\":\"RS512\",\n    \"key\": \"<The public Key>\",\n    \"claims_map\": {\n      \"x-hasura-allowed-roles\": {\"path\":\"$.user.appRoles\"},\n      \"x-hasura-default-role\": {\"path\":\"$.user.appRoles[0]\",\"default\":\"user\"},\n      \"x-hasura-user-id\": {\"path\":\"$.user.id\"}\n    }\n  }\n```\n\n### Metadata Types SDK\n\nThe types and documentation comments for Metadata V2 have been converted into JSON/YAML Schema, and used to autogenerate type definitions for popular languages.\n\nThis enables users to build type-safe tooling in the language of their choice around Metadata interactions and automations.\n\nAdditionally, the JSON/YAML Schemas can be used to provide IntelliSense and autocomplete + documentation when interacting with Metadata YAML/JSON files.\n\nFor a more comprehensive overview, please see [the readme located here](./contrib/metadata-types/README.md)\n\n**Sample Code**\n\n```ts\nimport { TableEntry } from \"../generated/HasuraMetadataV2\";\n\nconst newTable: TableEntry = {\n  table: { schema: \"public\", name: \"user\" },\n  select_permissions: [\n    {\n      role: \"user\",\n      permission: {\n        limit: 100,\n        allow_aggregations: false,\n        columns: [\"id\", \"name\", \"etc\"],\n        computed_fields: [\"my_computed_field\"],\n        filter: {\n          id: { _eq: \"X-Hasura-User-ID\" },\n        },\n      },\n    },\n  ],\n};\n```\n\n**IntelliSense Example**\n\n![](./contrib/metadata-types/json-schema-typecheck-demo.gif)\n\n### Breaking changes\n\n#### PDV\n\nThis release contains the [PDV refactor (#4111)](https://github.com/hasura/graphql-engine/pull/4111), a significant rewrite of the internals of the server, which did include some breaking changes:\n\n- The semantics of explicit `null` values in `where` filters have changed according to the discussion in [issue 704](https://github.com/hasura/graphql-engine/issues/704#issuecomment-635571407): an explicit `null` value in a comparison input object will be treated as an error rather than resulting in the expression being evaluated to `True`. For instance: `delete_users(where: {id: {_eq: $userId}}) { name }` will yield an error if `$userId` is `null` instead of deleting all users.\n- The validation of required headers has been fixed (closing #14 and #3659):\n  - if a query selects table `bar` through table `foo` via a relationship, the required permissions headers will be the union of the required headers of table `foo` and table `bar` (we used to only check the headers of the root table);\n  - if an insert does not have an `on_conflict` clause, it will not require the update permissions headers.\n\n#### Remote Relationship\n\nIn this release, a breaking change has been introduced:\n\nIn a remote relationship query, the remote schema will be queried when all of the joining arguments\nare **not** `null` values. When there are `null` value(s), the remote schema won't be queried and the\nresponse of the remote relationship field will be `null`. Earlier, the remote schema\nwas queried with the `null` value arguments and the response depended upon how the remote schema handled the `null`\narguments.\n\n### Bug fixes and improvements\n\n(Add entries here in the order of: server, console, cli, docs, others)\n\n- server: allow remote relationships joining `type` column with `[type]` input argument as spec allows this coercion (fixes #5133)\n- server: add action-like URL templating for event triggers and remote schemas (fixes #2483)\n- server: change `created_at` column type from `timestamp` to `timestamptz` for scheduled triggers tables (fix #5722)\n- server: allow configuring timeouts for actions (fixes #4966)\n- server: fix bug which arised when renaming a table which had a manual relationship defined (close #4158)\n- server: limit the length of event trigger names (close #5786)\n  **NOTE:** If you have event triggers with names greater than 42 chars, then you should update their names to avoid running into Postgres identifier limit bug (#5786)\n- server: enable HASURA_GRAPHQL_PG_CONN_LIFETIME by default to reclaim memory\n- server: fix issue with tracking custom functions that return `SETOF` materialized view (close #5294) (#5945)\n- server: allow remote relationships with union, interface and enum type fields as well (fixes #5875) (#6080)\n- server: Fix fine-grained incremental cache invalidation (fix #6027)\n  This issue could cause enum table values to sometimes not be properly reloaded without restarting `graphql-engine`. Now a `reload_metadata` API call (or clicking “Reload enum values” in the console) should consistently force a reload of all enum table values.\n- server: fix event trigger cleanup on deletion via replace_metadata (fix #5461) (#6137)\n  **WARNING**: This can cause significant load on PG on startup if you have lots of event triggers. Delay in starting up is expected.\n- console: add notifications (#5070)\n- cli: fix bug in metadata apply which made the server aquire some redundant and unnecessary locks (close #6115)\n- cli: fix cli-migrations-v2 image failing to run as a non root user (close #4651, close #5333)\n- cli: fix issue with cli binary on latest Mac (Big Sur) (fix #5462)\n- docs: add docs page on networking with docker (close #4346) (#4811)\n- docs: add tabs for console / cli / api workflows (close #3593) (#4948)\n- docs: add postgres concepts page to docs (close #4440) (#4471)\n- docs: add guides on connecting hasura cloud to pg databases of different cloud vendors (#5948)\n\n## `v1.3.2`\n\n### Bug fixes and improvements\n\n(Add entries here in the order of: server, console, cli, docs, others)\n\n- server: fixes column masking in select permission for computed fields regression (fix #5696)\n\n## `v1.3.1`, `v1.3.1-beta.1`\n\n### Breaking change\n\nHeaders from environment variables starting with `HASURA_GRAPHQL_` are not allowed\nin event triggers, actions & remote schemas.\n\nIf you do have such headers configured, then you must update the header configuration before upgrading.\n\n### Bug fixes and improvements\n\n(Add entries here in the order of: server, console, cli, docs, others)\n\n- server: fix failing introspection query when an enum column is part of a primary key (fixes #5200)\n- server: disallow headers from env variables starting with `HASURA_GRAPHQL_` in actions, event triggers & remote schemas (#5519)\n  **WARNING**: This might break certain deployments. See `Breaking change` section above.\n- server: bugfix to allow HASURA_GRAPHQL_QUERY_PLAN_CACHE_SIZE of 0 (#5363)\n- server: support only a bounded plan cache, with a default size of 4000 (closes #5363)\n- server: add logs for action handlers\n- server: add request/response sizes in event triggers (and scheduled trigger) logs (#5463)\n- server: change startup log kind `db_migrate` to `catalog_migrate` (#5531)\n- console: handle nested fragments in allowed queries (close #5137) (#5252)\n- console: update sidebar icons for different action and trigger types (#5445)\n- console: make add column UX consistent with others (#5486)\n- console: add \"identity\" to frequently used columns (close #4279) (#5360)\n- cli: improve error messages thrown when metadata apply fails (#5513)\n- cli: fix issue with creating seed migrations while using tables with capital letters (closes #5532) (#5549)\n- build: introduce additional log kinds for cli-migrations image (#5529)\n\n## `v1.3.0`\n\n### Bug fixes and improvements\n\n(Add entries here in the order of: server, console, cli, docs, others)\n\n- server: adjustments to idle GC to try to free memory more eagerly (related to #3388)\n- server: process events generated by the event triggers asynchronously (close #5189) (#5352)\n- console: display line number that error originated from in GraphQL editor (close #4849) (#4942)\n- docs: add page on created_at / updated_at timestamps (close #2880) (#5223)\n\n## `v1.3.0-beta.4`\n\n### Bug fixes and improvements\n\n(Add entries here in the order of: server, console, cli, docs, others)\n\n- server: change relay endpoint to `/v1beta1/relay` (#5257)\n- server: relay connection fields are exposed regardless of allow aggregation permission (fix #5218) (#5257)\n- server: add new `--conn-lifetime` and `HASURA_GRAPHQL_PG_CONN_LIFETIME` options for expiring connections after some amount of active time (#5087)\n- server: shrink libpq connection request/response buffers back to 1MB if they grow beyond 2MB, fixing leak-like behavior on active servers (#5087)\n- server: have haskell runtime release blocks of memory back to the OS eagerly (related to #3388)\n- server: unlock locked scheduled events on graceful shutdown (#4928)\n- server: disable prepared statements for mutations as we end up with single-use objects which result in excessive memory consumption for mutation heavy workloads (#5255)\n- server: include scheduled event metadata (`created_at`,`scheduled_time`,`id`, etc) along with the configured payload in the request body to the webhook.\n  **WARNING:** This is breaking for beta versions as the payload is now inside a key called `payload`.\n- console: allow configuring statement timeout on console RawSQL page (close #4998) (#5045)\n- console: support tracking partitioned tables (close #5071) (#5258)\n- console: add button to cancel one-off scheduled events and cron-trigger events (close #5161) (#5236)\n- console: handle generated and identity columns in console data section (close #4552, #4863) (#4761)\n- cli: fix plugins install failing due to permission issues on windows (close #5111)\n- docs: add note for managed databases in postgres requirements (close #1677, #3783) (#5228)\n- docs: add 1-click deployment to Nhost page to the deployment guides (#5180)\n- docs: add hasura cloud to getting started section (close #5206) (#5208)\n\n## `v1.3.0-beta.3`\n\n### Bug fixes and improvements\n\n(Add entries here in the order of: server, console, cli, docs, others)\n\n- server: fix introspection when multiple actions defined with Postgres scalar types (fix #5166) (#5173)\n- console: allow manual edit of column types and handle array data types (close #2544, #3335, #2583) (#4546)\n- console: add the ability to delete a role in permissions summary page (close #3353) (#4987)\n- console: fix styling of table row contents on tables on relationship page (#4974)\n- cli: handle missing files during metadata apply (close #5163) (#5170)\n- docs: add pages on remote joins (close #4911) (#5132)\n- docs: add page on scheduled triggers (close #4913) (#5141)\n- docs: add page on Relay schema (close #4912) (#5150)\n\n## `v1.3.0-beta.2`\n\n### Bug fixes and improvements\n\n(Add entries here in the order of: server, console, cli, docs, others)\n\n- server: add `--pg-connection-options` command-line flag for passing parameters to PostgreSQL (close #5092) (#5187)\n- server: improve memory usage of idle websockets connections (#5190)\n- server: few relay fixes (fix #5020, #5037, #5046) (#5013)\n- server: raise error on startup when `--unauthorized-role` is ignored (#4736)\n- server: fix bug which arises when renaming/dropping a column on a remote relationship (#5005, #5119)\n- console: provide option to cascade metadata on dependency conflicts on console (fix #1593)\n- console: fix enum tables reload data button UI (#4647)\n- console: fix \"Cannot read property 'foldable'\" runtime error in Browse Rows page (fix #4907) (#5016)\n- console: respect read-only mode in actions pages (fix #4656) (#4764)\n- console: allow configuring session_argument for custom functions (close #4499) (#4922)\n- console: fix listen update column config selection for event trigger (close #5042) (#5043)\n- cli: add new flags up-sql and down-sql to generate sql based migrations from the CLI (#5026)\n- docs: add instructions on fixing loss of data when using floats (close #5092)\n- docs: add page on setting up v2 migrations (close #4746) (#4898)\n\n## `v1.3.0-beta.1`\n\n### Relay\n\nThe Hasura GraphQL Engine serves [Relay](https://relay.dev/) schema for Postgres tables which has a primary key defined.\n\nThe Relay schema can be accessed through `/v1beta1/relay` endpoint.\n\n[Add docs links][add console screenshot for relay toggle]\n\n### Remote Joins\n\nRemote Joins extend the concept of joining data across tables, to being able to join data across tables and remote schemas.\n\nIt works similar to table relationships. Head to the `Relationship` tab in your table page and define a remote relationship:\n\n1. give a name for the relationship\n2. select the remote schema\n3. give the join configuration from table columns to remote schema fields.\n\n[Add docs links][add console screenshot]\n\n### Scheduled Triggers\n\nA scheduled trigger can be used to execute custom business logic based on time. There are two types of timing events: cron based or timestamp based.\n\nA cron trigger will be useful when something needs to be done periodically. For example, you can create a cron trigger to generate an end-of-day sales report every weekday at 9pm.\n\nYou can also schedule one-off events based on a timestamp. For example, a new scheduled event can be created for 2 weeks from when a user signs up to send them an email about their experience.\n\n[Add docs links][add console screenshot]\n\n(close #1914)\n\n### Allow access to session variables by computed fields (fix #3846)\n\nSometimes it is useful for computed fields to have access to the Hasura session variables directly. For example, suppose you want to fetch some articles but also get related user info, say `likedByMe`. Now, you can define a function like:\n\n```\nCREATE OR REPLACE FUNCTION article_liked(article_row article, hasura_session json)\nRETURNS boolean AS $$\n  SELECT EXISTS (\n    SELECT 1\n    FROM liked_article A\n    WHERE A.user_id = hasura_session ->> 'x-hasura-user-id' AND A.article_id = article_row.id\n  );\n$$ LANGUAGE sql STABLE;\n```\n\nand make a query like:\n\n```\nquery {\n  articles {\n    title\n    content\n    likedByMe\n  }\n}\n```\n\nSupport for this is now added through the `add_computed_field` API.\n\nRead more about the session argument for computed fields in the [docs](https://hasura.io/docs/latest/graphql/core/api-reference/schema-metadata-api/computed-field.html).\n\n### Manage seed migrations as SQL files\n\nA new `seeds` command is introduced in CLI, this will allow managing seed migrations as SQL files\n\n#### Creating seed\n\n```\n# create a new seed file and use editor to add SQL content\nhasura seed create new_table_seed\n\n# create a new seed by exporting data from tables already present in the database\nhasura seed create table1_seed --from-table table1\n\n# create from data in multiple tables:\nhasura seed create tables_seed --from-table table1 --from-table table2\n```\n\n#### Applying seed\n\n```\n# apply all seeds on the database:\nhasura seed apply\n\n# apply only a particular seed\nhasura seed apply --file 1234_add_some_seed_data.sql\n```\n\n### Bug fixes and improvements\n\n(Add entries here in the order of: server, console, cli, docs, others)\n\n- server: fix explain queries with role permissions (fix #4816)\n- server: compile with GHC 8.10.1, closing a space leak with subscriptions. (close #4517) (#3388)\n- server: fixes an issue where introspection queries with variables would fail because of caching (fix #4547)\n- server: avoid loss of precision when passing values in scientific notation (fix #4733)\n- server: fix mishandling of GeoJSON inputs in subscriptions (fix #3239)\n- server: fix importing of allow list query from metadata (fix #4687)\n- server: flush log buffer during shutdown (#4800)\n- server: fix edge case with printing logs on startup failure (fix #4772)\n- console: allow entering big int values in the console (close #3667) (#4775)\n- console: add support for subscriptions analyze in API explorer (close #2541) (#2541)\n- console: avoid count queries for large tables (#4692)\n- console: add read replica support section to pro popup (#4118)\n- console: fix regression in editing permissions manually (fix #4683) (#4826)\n- console: allow modifying default value for PK (fix #4075) (#4679)\n- console: fix checkbox for forwarding client headers in actions (#4595)\n- console: re-enable foreign tables to be listed as views (fix #4714) (#4742)\n- console: display rows limit in permissions editor if set to zero (fix #4559)\n- console: fix inconsistency between selected rows state and displayed rows (fix #4654) (#4673)\n- console: fix displaying boolean values in `Edit Row` tab (#4682)\n- console: fix underscores not being displayed on raw sql page (close #4754) (#4799)\n- console: fix visiting view modify page overwriting raw sql content (fix #4798) (#4810)\n- console: add help button and move about page to settings (#4848)\n- console: add new sidebar icon that separates enums from tables (fix #4984) (#4992)\n- cli: list all available commands in root command help (fix #4623) (#4628)\n- cli: fix bug with squashing event triggers (close #4883)\n- cli: add support for skipping execution while generating migrations through the migrate REST API\n- cli: add dry run flag in hasura migrate apply command (fix #3128) (#3499)\n- cli: load assets from server when HASURA_GRAPHQL_CONSOLE_ASSETS_DIR is set (close #3382)\n- docs: add section on actions vs. remote schemas to actions documentation (#4284)\n- docs: fix wrong info about excluding scheme in CORS config (#4685)\n- docs: add single object mutations docs (close #4622) (#4625)\n- docs: add docs page on query performance (close #2316) (#3693)\n- docs: add a sample Caddyfile for Caddy 2 in enable-https section (#4710)\n- docs: add disabling dev mode to production checklist (#4715)\n- docs: add integration guide for AWS Cognito (#4822, #4843)\n- docs: update troubleshooting section with reference on debugging errors (close #4052) (#4825)\n- docs: add page for procuring custom docker images and binaries (#4828)\n- docs: add content on how to secure action handlers and other actions docs improvements (#4743)\n- docs: make header common with other hasura.io/ pages (#4957)\n- install manifests: update all install manifests to enable dev mode by default (close #4599) (#4716)\n\n## `v1.2.0`\n\nInclude the changelog from **v1.2.0-beta.1**, **v1.2.0-beta.2**, **v1.2.0-beta.3**, **v1.2.0-beta.4**, **v1.2.0-beta.5**\n\nAdditional changelog:\n\n### CLI: Support servers with self-signed certificates (close #4564) (#4582)\n\nA new flag `--certificate-authority` is added so that the CA certificate can be\nprovided to trust the Hasura Endpoint with a self-signed SSL certificate.\n\nAnother flag `--insecure-skip-tls-verification` is added to skip verifying the certificate\nin case you don't have access to the CA certificate. As the name suggests,\nusing this flag is insecure since verification is not carried out.\n\n### Bug fixes and improvements\n\n- console: update graphiql explorer to support operation transform (#4567)\n- console: make GraphiQL Explorer taking the whole viewport (#4553)\n- console: fix table columns type comparision during column edit (close #4125) (#4393)\n- cli: allow initialising project in current directory (fix #4560) #4566\n- cli: remove irrelevant flags from init command (close #4508) (#4549)\n- docs: update migrations docs with config v2 (#4586)\n- docs: update actions docs (#4586)\n\n## `v1.2.0-beta.5`\n\n### server: backend only insert permissions\n\nIntroduces optional `backend_only` (default: `false`) configuration in insert permissions\n(see [api reference](https://deploy-preview-4224--hasura-docs.netlify.com/graphql/manual/api-reference/schema-metadata-api/permission.html#insertpermission)).\nIf this is set to `true`, the insert mutation is accessible to the role only if the request\nis accompanied by `x-hasura-use-backend-only-permissions` session variable whose value is set to `true` along with the `x-hasura-admin-secret` header.\nOtherwise, the behavior of the permission remains unchanged.\n\nThis feature is highly useful in disabling `insert_table` mutation for a role from frontend clients while still being able to access it from a Action webhook handler (with the same role).\n\n(rfc #4120) (#4224)\n\n### server: debugging mode for non-admin roles\n\nFor any errors the server sends extra information in `extensions` field under `internal` key. Till now this was only\navailable for `admin` role requests. To enable this for other roles, start the server with `--dev-mode` flag or set `HASURA_GRAPHQL_DEV_MODE` env variable to `true`:\n\n```bash\n$ graphql-engine --database-url <database-url> serve --dev-mode\n```\n\nIn case you want to disable `internal` field for `admin` role requests, set `--admin-internal-errors` option to `false` or or set `HASURA_GRAPHQL_ADMIN_INTERNAL_ERRORS` env variable to `false`\n\n```bash\n$ graphql-engine --database-url <database-url> serve --admin-internal-errors false\n```\n\nThis feature come in handy during development when you may want to see detailed errors irrespective of roles.\n\n**Improved internal errors for Actions**:\n\n(This is a **breaking change** with previous 1.2.0-beta releases)\n\nThe `internal` field for action errors is improved with more debug information. It now includes `request`,\n`response` and `error` fields instead of just `webhook_response` field.\n\nBefore:\n\n```json\n{\n  \"errors\": [\n    {\n      \"extensions\": {\n        \"internal\": {\n          \"webhook_response\": {\n            \"age\": 25,\n            \"name\": \"Alice\",\n            \"id\": \"some-id\"\n          }\n        },\n        \"path\": \"$\",\n        \"code\": \"unexpected\"\n      },\n      \"message\": \"unexpected fields in webhook response: age\"\n    }\n  ]\n}\n```\n\nAfter:\n\n```json\n{\n  \"errors\": [\n    {\n      \"extensions\": {\n        \"internal\": {\n          \"error\": \"unexpected response\",\n          \"response\": {\n            \"status\": 200,\n            \"body\": {\n              \"age\": 25,\n              \"name\": \"Alice\",\n              \"id\": \"some-id\"\n            },\n            \"headers\": [\n              {\n                \"value\": \"application/json\",\n                \"name\": \"Content-Type\"\n              },\n              {\n                \"value\": \"abcd\",\n                \"name\": \"Set-Cookie\"\n              }\n            ]\n          },\n          \"request\": {\n            \"body\": {\n              \"session_variables\": {\n                \"x-hasura-role\": \"admin\"\n              },\n              \"input\": {\n                \"arg\": {\n                  \"age\": 25,\n                  \"name\": \"Alice\",\n                  \"id\": \"some-id\"\n                }\n              },\n              \"action\": {\n                \"name\": \"mirror\"\n              }\n            },\n            \"url\": \"http://127.0.0.1:5593/mirror-action\",\n            \"headers\": []\n          }\n        },\n        \"path\": \"$\",\n        \"code\": \"unexpected\"\n      },\n      \"message\": \"unexpected fields in webhook response: age\"\n    }\n  ]\n}\n```\n\n### cli: add support for .env file\n\nENV vars can now be read from .env file present at the project root directory. A global flag, `--envfile`, is added so you can explicitly provide the .env filename, which defaults to `.env` filename if no flag is provided.\n\n**Example**:\n\n```\nhasura console --envfile production.env\n```\n\nThe above command will read ENV vars from `production.env` file present at the project root directory.\n\n(close #4129) (#4454)\n\n### console: allow setting post-update check in update permissions\n\nAlong with the check for filtering rows that can be updated, you can now set a post-update permission check that needs to be satisfied by the updated rows after the update is made.\n\n<add-screenshot>\n\n(close #4142) (#4313)\n\n### console: support for Postgres [materialized views](https://www.postgresql.org/docs/current/rules-materializedviews.html)\n\nPostgres materialized views are views that are persisted in a table-like form. They are now supported in the Hasura Console, in the same way as views. They will appear on the 'Schema' page, under the 'Data' tab, in the 'Untracked tables or views' section.\n\n(close #91) (#4270)\n\n### docs: map Postgres operators to corresponding Hasura operators\n\nMap Postgres operators to corresponding Hasura operators at various places in docs and link to PG documentation for reference.\nFor example, see [here](https://hasura.io/docs/latest/graphql/core/api-reference/schema-metadata-api/syntax-defs.html#operator).\n\n(#4502) (close #4056)\n\n### Bug fixes and improvements\n\n- server: add support for `_inc` on `real`, `double`, `numeric` and `money` (fix #3573)\n- server: support special characters in JSON path query argument with bracket `[]` notation, e.g `obj['Hello World!']` (#3890) (#4482)\n- server: add graphql-engine support for timestamps without timezones (fix #1217)\n- server: support inserting unquoted bigint, and throw an error if value overflows the bounds of the integer type (fix #576) (fix #4368)\n- console: change react ace editor theme to eclipse (close #4437)\n- console: fix columns reordering for relationship tables in data browser (#4483)\n- console: format row count in data browser for readablity (#4433)\n- console: move pre-release notification tooltip msg to top (#4433)\n- console: remove extra localPresets key present in migration files on permissions change (close #3976) (#4433)\n- console: make nullable and unique labels for columns clickable in insert and modify (#4433)\n- console: fix row delete for relationships in data browser (#4433)\n- console: prevent trailing spaces while creating new role (close #3871) (#4497)\n- docs: add API docs for using environment variables as webhook urls in event triggers\n- server: fix recreating action's permissions (close #4377)\n- server: make the graceful shutdown logic customizable (graceful shutdown on the SIGTERM signal continues to be the default)\n- docs: add reference docs for CLI (clsoe #4327) (#4408)\n\n## `v1.2.0-beta.4`\n\n### add query support in actions\n\n(close #4032) (#4309)\n\n### console: persist page state in data browser across navigation\n\nThe order, collapsed state of columns and rows limit is now persisted across page navigation\n\n(close #3390) (#3753)\n\n### Bug fixes and improvements\n\n- cli: query support for actions (#4318)\n- cli: add retry_conf in event trigger for squashing migrations (close #4296) (#4324)\n- cli: allow customization of server api paths (close #4016)\n- cli: clean up migration files created during a failed migrate api (close #4312) (#4319)\n- cli: add support for multiple versions of plugin (close #4105)\n- cli: template assets path in console HTML for unversioned builds\n- cli: set_table_is_enum metadata type for squashing migrations (close #4394) (#4395)\n- console: query support for actions (#4318)\n- console: recover from SDL parse in actions type definition editor (fix #4385) (#4389)\n- console: allow customising graphql field names for columns of views (close #3689) (#4255)\n- console: fix clone permission migrations (close #3985) (#4277)\n- console: decouple data rows and count fetch in data browser to account for really large tables (close #3793) (#4269)\n- console: update cookie policy for API calls to \"same-origin\"\n- console: redirect to /:table/browse from /:table (close #4330) (#4374)\n- console: surround string type column default value with quotes (close #4371) (#4423)\n- console: add undefined check to fix error (close #4444) (#4445)\n- docs: add One-Click Render deployment guide (close #3683) (#4209)\n- server: reserved keywords in column references break parser (fix #3597) #3927\n- server: fix postgres specific error message that exposed database type on invalid query parameters (#4294)\n- server: manage inflight events when HGE instance is gracefully shutdown (close #3548)\n- server: fix an edge case where some events wouldn't be processed because of internal erorrs (#4213)\n- server: fix downgrade not working to version v1.1.1 (#4354)\n- server: `type` field is not required if `jwk_url` is provided in JWT config\n- server: add a new field `claims_namespace_path` which accepts a JSON Path for looking up hasura claim in the JWT token (#4349)\n- server: support reusing Postgres scalars in custom types (close #4125)\n\n## `v1.2.0-beta.3`\n\n### console: manage Postgres check constraints\n\nPostgres Check constraints allows you to specify that the value in a certain column must satisfy a Boolean (truth-value) expression. They can be used to put in simple input validations for mutations and with this release, these constraints can now be added while creating a table or later from Modify tab on the console.\n\n**Example**:\nWhen a product is created, ensure that the price is greater than zero. The SQL would look like this:\n\n```sql\nCREATE TABLE products (\n    product_id UUID DEFAULT gen_random_uuid(),\n    name TEXT,\n    price NUMERIC CONSTRAINT positive_price CHECK (price > 0)\n);\n```\n\nTo create this table with Hasura Console, on the 'Add a new table' screen, after adding all the columns, scroll down to 'Check constraints' section and 'Add a new check constraint' with the following properties:\n\n- Constraint name: `positive_price`\n- Check expression: `price > 0`\n\nRead more about check constraints on [Postgres Docs](https://www.postgresql.org/docs/12/ddl-constraints.html#DDL-CONSTRAINTS-CHECK-CONSTRAINTS).\n\n(close #1700) (#3881)\n\n### CLI: V2 migrations architecture\n\nA new CLI migrations image is introduced to account for the new migrations workflow. If you're have a project with `version: 2` in `config.yaml`, you should use the new image: `hasura/graphql-engine:v1.2.0-cli-migrations-v2`. Mount the migrations at `/hasura-migrations` and metadata at `/hasura-metadata`.\n\nSee [upgrade docs](https://hasura.io/docs/latest/graphql/core/migrations/upgrade-v2.html).\n\n(close #3969) (#4145)\n\n### Bug fixes and improvements\n\n- server: improve performance of replace_metadata tracking many tables (fix #3802)\n- server: option to reload remote schemas in 'reload_metadata' API (fix #3792, #4117)\n- server: fix various space leaks to avoid excessive memory consumption\n- server: fix postgres query error when computed fields included in mutation response (fix #4035)\n- server: fix `__typename` not being included for custom object types (fix #4063)\n- server: preserve cookie headers from sync action webhook (close #4021)\n- server: validate action webhook response to conform to action output type (fix #3977)\n- server: add 'ID' to default scalars in custom types (fix #4061)\n- server: fix erroneous error log \"Received STOP for an operation ...\"\n- console: enum field values can be selected through a dropdown in insert/edit rows page (close #3748) (#3810)\n- console: exported metadata filenames are now unique(`hasura_metadata_<timestamp>.json`) (close #1772) (#4106)\n- console: allow bulk deleting rows in 'Browse Rows' section (close #1739) (#3735)\n- console: fix computed field permission selection (#4246)\n- console: allow customising root fields of single row mutations (close #4203) (#4254)\n- console: fix json string rendering in data browser (close #4201) (#4221)\n- console: handle long column names in event trigger update columns (close #4123) (#4210)\n- console: disable selecting roles without permissions for bulk actions (close #4178) (#4195)\n- console: fix passing default value to JsonInput (#4175)\n- console: fix parsing of wrapped types in SDL (close #4099) (#4167)\n- console: misc actions fixes (#4059)\n- console: action relationship page improvements (fix #4062, #4130) (#4133)\n- console: add code exporter to graphiql (close #4531) #4652\n- cli: fix init command to generate correct config (fix #4036) (#4038)\n- cli: fix parse error returned on console api (close #4126) (#4152)\n- cli: fix typo in cli example for squash (fix #4047) (#4049)\n- docs: add statement to grant hasura permissions for PG functions (#4238)\n- docs: add docs for redeliver_event api (fix #4176) (#4177)\n- docs: update permission.rst for check constraint api (#4124)\n- docs: add note on pg versions for actions (#4034)\n- docs: add latest prerelease build info (close #4041) (#4048)\n- docs: add AuthGuardian JWT guide (#3958)\n\n## `v1.2.0-beta.2`\n\n- server: Don't update catalog version if using --dryRun (#3970)\n- cli: add version flag in update-cli command (#3996)\n- cli(migrations-img): add env to skip update prompts (fix #3964) (#3968)\n- cli, server: use prerelease tag as channel for console assets cdn (#3975)\n- cli: fix flags in actions, migrate and metadata cmd (fix #3982) (#3991)\n- cli: preserve action definition in metadata apply (fix… (#3993)\n- cli: bug fixes related to actions (#3951)\n\n## `v1.2.0-beta.1`\n\n### Hasura Actions\n\nActions are a way to extend Hasura’s auto-generated mutations with entirely custom ones which can handle various use cases such as data validation, data enrichment from external sources and any other complex business logic.\n\nA new mutation can be created either by defining its GraphQL SDL or by deriving it from an existing Hasura-generated mutation. The resolver is exposed to Hasura as a webhook which can be called synchronously or asynchronously. This release also includes an ever evolving codegen workflow to make managing the custom resolvers easier.\n\nRead more about actions in the [docs](https://docs.hasura.io/1.0/graphql/manual/actions/index.html).\n\n(#3042) (#3252) (#3859)\n\n### Downgrade command\n\nA new command is added to the server executable for downgrading to earlier releases. Previously, if you ran a newer Hasura version and wanted to go back to an old version on the same database, you had to stop Hasura, run some SQL statements and start Hasura again. With the new `downgrade` command, these SQL statements can be run automatically.\n\n**Example**: Downgrade from `v1.2.0` to `v1.0.0`:\n\n```bash\n# stop hasura v1.2.0\n\n# run the following command:\ndocker run hasura/graphql-engine:v1.2.0 graphql-engine --database-url <db-url> downgrade --to-v1.0.0\n\n# start hasura v1.0.0\n```\n\nRead more about this command in the [docs](https://hasura.io/docs/latest/graphql/core/deployment/downgrading.html#downgrading-hasura-graphql-engine).\n\n(close #1156) (#3760)\n\n### Expiration of connections authenticated by WebHooks\n\nWhen using webhooks to authenticate incoming requests to the GraphQL engine server, it is now possible to specify an expiration time; the connection to the server will be automatically closed if it's still running when the expiration delay is expired.\n\nRead more about it in the [docs](https://hasura.io/docs/latest/graphql/core/auth/authentication/webhook.html).\n\n### Bug fixes and improvements\n\n- server: check expression in update permissions (close #384) (rfc #3750) (#3804)\n- console: show pre-release update notifications with opt out option (#3888)\n- console: handle invalid keys in permission builder (close #3848) (#3863)\n- docs: add page on data validation to docs (close #4085) (#4260)\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 6.4873046875,
          "content": "# Contributing to Hasura GraphQL Engine\n\n_First_: if you feel insecure about how to start contributing, either to V2 or V3, feel free to ask us on our\n[Discord](https://discordapp.com/invite/hasura) in the `#contrib` channel. You can also just go ahead with your\ncontribution, and we'll give you feedback. Don't worry - the worst that can happen is that you'll be politely asked to\nchange something. We appreciate any contributions, and we don't want a wall of rules to stand in the way of that.\n\nHowever, for those individuals who want a bit more guidance on the best way to contribute to the project, read on. This\ndocument will cover what we're looking for. By addressing the points below, the chances that we can quickly merge or\naddress your contributions will increase.\n\n## Table of contents\n\n[1. Code of conduct ](#code-of-conduct)\n\n[2. Repo overview ](#overview)\n\n[3. First time contributors welcome! ](#first-timers)\n\n[4. Areas for contributing ](#areas)\n\n[5. Ways of contributing ](#ways)\n\n[6. Commit messages ](#commit-messages)\n\n[7. Translations ](#translations)\n\n<a name=\"code-of-conduct\"></a>\n\n## 1. Code of conduct\n\nPlease follow our [Code of conduct](code-of-conduct.md) in the context of any contributions made to Hasura.\n\n<a name=\"overview\"></a>\n\n## 2. Repo overview\n\n[hasura/graphql-engine](https://github.com/hasura/graphql-engine) is a mono-repo for both the open source V2 and V3 \nHasura versions.\n\n### V2\n\nThis V2 portion consists of 3 components and each has their own contributing guide:\n\n1. [Server (Haskell)](server/CONTRIBUTING.md)\n\n2. [CLI (Go)](cli/CONTRIBUTING.md)\n\n3. [Console (JavaScript)](frontend/docs/generic-info.md#contributing-to-hasura-console)\n\nAll of the three components have a single version, denoted by either the git tag or a combination of branch name and git\ncommit SHA.\n\nFor all contributions, a CLA (Contributor License Agreement) needs to be signed \n[here](https://cla-assistant.io/hasura/graphql-engine) before (or after) the pull request has been submitted. A bot will\nprompt contributors to sign the CLA via a pull request comment, if necessary.\n\n### V3\n\nThe V3 portion is the V3 engine exclusively, the heart of Hasura, which is written in Rust. \n\n1. [V3 Engine (Rust)](v3/CONTRIBUTING.md)\n\nCheck out the [V3 README here](/v3/README.md). \n\n<a name=\"first-timers\"></a>\n\n## 3. First time contributors welcome!\n\nWe appreciate first time contributors, and we are happy to assist you in getting started. In case of questions, just\nreach out to us!\n\nYou find all issues suitable for first time contributors\n[here](https://github.com/hasura/graphql-engine/issues?q=is%3Aopen+is%3Aissue+label%3A%22good+first+issue%22).\n\n<a name=\"areas\"></a>\n\n## 4. Areas for contributing\n\nOf course, we appreciate contributions to all components of Hasura. However, we have identified three areas that are\nparticularly suitable for open source contributions.\n\n### V2 Docs\n\nOur goal is to keep our docs comprehensive and updated. If you would like to help us in doing so, we are grateful for\nany kind of contribution:\n\n- Report missing content\n\n- Fix errors in existing docs\n\n- Help us in adding to the docs\n\nThe contributing guide for docs can be found at [docs/CONTRIBUTING.md](docs/CONTRIBUTING.md).\n\n### V2 Community content\n\nSince we launched our [learn page](https://hasura.io/learn/), we are happy about contributions:\n\n- Fix errors in existing learn tutorials\n\n- Add new tutorials (please reach out to us if you have ideas to avoid duplicate word)\n\nThe README of the learn repository can be found [here](https://github.com/hasura/learn-graphql).\n\nApart from the learn content, we have identified three other ways of contributing with technical community content:\n\n- [Boilerplates](https://github.com/hasura/graphql-engine/tree/master/community/boilerplates)\n\n- [Sample apps](https://github.com/hasura/sample-apps/tree/main)\n\n- [Tools](community/tools)\n\nIf you would like to contribute to the community by\n\n- writing a technical blogpost\n\n- speaking at an event\n\n- organizing a workshop\n\ncheck out our [community wiki](https://github.com/hasura/graphql-engine/wiki/Community-Wiki).\n\nFeel free to submit a pull request if you have something to add even if it's not related to anything mentioned above.\n\n### V2 CLI\n\nWe have some issues on the CLI that are suitable for open source contributions. If you know Go or if you would like to\nlearn it by doing, check out the following\n[issues](https://github.com/hasura/graphql-engine/issues?q=is%3Aopen+is%3Aissue+label%3Ac%2Fcli+label%3A%22help+wanted%22).\n\nThe README of the CLI repository can be found [here](https://github.com/hasura/graphql-engine/tree/master/cli).\n\n<a name=\"ways\"></a>\n\n## 5. Ways of contributing\n\n### Reporting an Issue\n\n- Make sure you test against the latest released version. It is possible that we may have already fixed the bug you're\n  experiencing.\n\n- Provide steps to reproduce the issue, including Postgres version, graphql-engine version and the provider you are\n  running on (Heroku, Docker, etc.).\n\n- Please include logs of the server, if relevant.\n\n- Create a [issue](https://github.com/hasura/graphql-engine/issues/new/choose).\n\n### Working on an issue\n\n- We use the [fork-and-branch git workflow](https://blog.scottlowe.org/2015/01/27/using-fork-branch-git-workflow/).\n\n- Please make sure there is an issue associated with the work that you're doing.\n\n- If you're working on an issue, please comment that you are doing so to prevent duplicate work by others also.\n\n- Squash your commits and refer to the issue using `fix #<issue-no>` or `close #<issue-no>` in the commit message, at\n  the end. For example: `resolve answers to everything (fix #42)` or `resolve answers to everything, fix #42`\n\n- Rebase master with your branch before submitting a pull request.\n\n<a name=\"commit-messages\"></a>\n\n## 6. Commit messages\n\n- The first line should be a summary of the changes, not exceeding 50 characters, followed by an optional body which has\n  more details about the changes. Refer to [this link](https://github.com/erlang/otp/wiki/writing-good-commit-messages)\n  for more information on writing good commit messages.\n\n- Use the imperative present tense: \"add/fix/change\", not \"added/fixed/changed\" nor \"adds/fixes/changes\".\n\n- Don't capitalize the first letter of the summary line.\n\n- Don't add a period/dot (.) at the end of the summary line.\n\n<a name=\"translations\"></a>\n\n## 7. Translations\n\nThis document is available in the following translations:\n\n- [French 🇫🇷](translations/CONTRIBUTING.french.md)\n\n(Credits: Some sections are adapted from https://github.com/PostgREST/postgrest/blob/master/.github/CONTRIBUTING.md)\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.0908203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright [yyyy] [name of copyright owner]\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "LICENSE-community",
          "type": "blob",
          "size": 1.095703125,
          "content": " MIT Licence\n \n Copyright (c) 2018-present, Hasura Technologies Private Limited\n\n Permission is hereby granted, free of charge, to any person\n obtaining a copy of this software and associated documentation\n files (the \"Software\"), to deal in the Software without\n restriction, including without limitation the rights to use,\n copy, modify, merge, publish, distribute, sublicense, and/or sell\n copies of the Software, and to permit persons to whom the\n Software is furnished to do so, subject to the following\n conditions:\n\n The above copyright notice and this permission notice shall be\n included in all copies or substantial portions of the Software.\n\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\n OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\n HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\n WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\n OTHER DEALINGS IN THE SOFTWARE.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 0.552734375,
          "content": "SHELL := bash -e -u -o pipefail\n\n# default target\n.PHONY: help\n## help: prints help message\nhelp:\n\t@echo \"Usage:\"\n\t@sed -n 's/^##//p' ${MAKEFILE_LIST} | column -t -s ':' |  sed -e 's/^/ /'\n\ninclude ./scripts/make/build.mk\ninclude ./scripts/make/ci.mk\ninclude ./scripts/make/frontend.mk\ninclude ./scripts/make/ghcid.mk\ninclude ./scripts/make/legacy-tests.mk\ninclude ./scripts/make/lint.mk\ninclude ./scripts/make/metadata-api.mk\ninclude ./scripts/make/repl.mk\ninclude ./scripts/make/run.mk\ninclude ./scripts/make/tests.mk\ninclude ./scripts/make/test-infrastructure.mk\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.8212890625,
          "content": "![Hasura logo](./assets/hasura_logo_primary_darkbg.png#gh-dark-mode-only)\n![Hasura logo](./assets/hasura_logo_primary_lightbg.png#gh-light-mode-only)\n\n# Hasura GraphQL Engine\n\nThe Hasura engine is an open source project which supercharges the building of modern applications by providing access\nto data via a single, composable, secure API endpoint.\n\n<a href=\"https://hasura.io/\"><img src=\"https://img.shields.io/badge/🏠_Visit-Hasura_Homepage-blue.svg?style=flat\"></a>\n<a href=\"https://hasura.io/community/\"><img src=\"https://img.shields.io/badge/😊_Join-Community-blue.svg?style=flat\"></a>\n\n## Hasura V3\n\n[![Docs](https://img.shields.io/badge/docs-v3-yellow.svg?style=flat)](https://hasura.io/docs/3.0/getting-started/quickstart/)\n\nThe future of data delivery is GA: Supporting PostgreSQL (and its flavors), MongoDB, ClickHouse, and MS SQL Server. Also supports writing custom business logic using the Typescript, Python, and Go Connector SDKs. Here is the recommended [Getting Started](https://hasura.io/docs/3.0/getting-started/quickstart/) guide on DDN.\n\nThe Hasura v3 engine code, which powers Hasura DDN, is in the `v3` folder of this repo. You can find more detailed\ninformation about in this [v3 README](/v3/README.md).\n\nThe Hasura DDN architecture includes Data Connectors to connect to data sources. All Hasura connectors are also\navailable completely open source. Check out the [Connector Hub](https://hasura.io/connectors/) which lists all\navailable connectors.\n\n## Hasura V2\n\n[![Latest release](https://img.shields.io/github/v/release/hasura/graphql-engine)](https://github.com/hasura/graphql-engine/releases/latest)\n[![Docs](https://img.shields.io/badge/docs-v2.x-yellow.svg?style=flat)](https://hasura.io/docs)\n\nHasura V2 is the current stable version of the Hasura GraphQL Engine. Please find more\ndetailed information about the V2 Hasura Graphql Engine in the `v2` folder and this [README](V2-README.md).\n\n## Cloning repository\n\nThis repository is a large and active mono-repo containing many parts of the Hasura ecosystem and a long git\nhistory, that can make the first time cloning of the repository slow and consume a lot of disk space. We recommend\nfollowing if you are facing cloning issues.\n\n### Shallow clone\n\nThis will only clone the latest commit and ignore all historical commits.\n\n```\ngit clone https://github.com/hasura/graphql-engine.git --depth 1\n```\n\n### Git checkout with only Hasura V3 engine code\n\n```\ngit clone --no-checkout https://github.com/hasura/graphql-engine.git --depth 1\ncd graphql-engine\ngit sparse-checkout init --cone\ngit sparse-checkout set v3\ngit checkout @\n```\n\nThis checkouts the top level files and only the `v3` folder which contains the Hasura V3 Engine code.\n\n## Support & Troubleshooting\n\nTo troubleshoot most issues, check out our documentation and community resources. If you have encountered a bug or need\nto get in touch with us, you can contact us using one of the following channels:\n\n- Hasura DDN documentation: [DDN docs](https://hasura.io/docs/3.0/)\n- Hasura V2 documentation: [V2 docs](https://hasura.io/docs/)\n- Support & feedback: [Discord](https://discord.gg/hasura)\n- Issue & bug tracking: [GitHub issues](https://github.com/hasura/graphql-engine/issues)\n- Follow product updates: [@HasuraHQ](https://twitter.com/hasurahq)\n- Talk to us on our [website chat](https://hasura.io)\n\n## Code of Conduct\n\nWe are committed to fostering an open and welcoming environment in the community. Please see the\n[Code of Conduct](code-of-conduct.md).\n\n## Security\n\nIf you want to report a security issue, please [read this](SECURITY.md).\n\n## Stay up to date\n\nJoin our communities to stay up to date on announcements, events, product updates, and technical blogs.\n[https://hasura.io/community/](https://hasura.io/community/)\n\n## Contributing\n\nCheck out our [contributing guide](CONTRIBUTING.md) for more details.\n\n## Brand assets\n\nHasura brand assets (logos, the Hasura mascot, powered by badges etc.) can be found in the\n[v2/assets/brand](assets/brand) folder. Feel free to use them in your application/website etc. We'd be thrilled if you\nadd the \"Powered by Hasura\" badge to your applications built using Hasura. ❤️\n\n## Licenses\n\n### V3\n\nAll the [Data Connectors](https://github.com/hasura/ndc-hub) are available under\nthe [Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0).\n\nThe core [V3 GraphQL Engine](v3/) is intended to be licensed under the [Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0) (Apache-2.0).\n\n### V2\n\nThe V2 core GraphQL Engine is available under the [Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0) (Apache-2.0).\n\nAll **other contents** in the v2 folder (except those in [`server`](v2/server), [`cli`](v2/cli) and\n[`console`](v2/console) directories) are available under the [MIT License](LICENSE-community).\nThis includes everything in the [`docs`](v2/docs) and [`community`](v2/community)\ndirectories.\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 2.4755859375,
          "content": "## Reporting Vulnerabilities\n\nWe’re extremely grateful for security researchers and users that report vulnerabilities to the Hasura Community. All reports are thoroughly investigated by a set of community volunteers and the Hasura team.\n\nTo report a security issue, please email us at [security@hasura.io](mailto:security@hasura.io) with all the details, attaching all necessary information.\n\n### When Should I Report a Vulnerability?\n\n- You think you have discovered a potential security vulnerability in the Hasura GraphQL Engine or related components.\n- You are unsure how a vulnerability affects the Hasura GraphQL Engine.\n- You think you discovered a vulnerability in another project that Hasura GraphQL Engine depends on (e.g. Heroku, Docker, etc).\n- You want to report any other security risk that could potentially harm Hasura GraphQL Engine users.\n\n### When Should I NOT Report a Vulnerability?\n\n- You need help tuning Hasura GraphQL Engine components for security.\n- You need help applying security related updates.\n- Your issue is not security related.\n\n## Security Vulnerability Response\n\nEach report is acknowledged and analyzed by the project's maintainers and the security team within 3 working days. \n\nThe reporter will be kept updated at every stage of the issue's analysis and resolution (triage -> fix -> release).\n\n## Public Disclosure Timing\n\nA public disclosure date is negotiated by the Hasura product security team and the bug submitter. We prefer to fully disclose the bug as soon as possible once a user mitigation is available. It is reasonable to delay disclosure when the bug or the fix is not yet fully understood, the solution is not well-tested, or for vendor coordination. The timeframe for disclosure is from immediate (especially if it's already publicly known) to a few weeks. We expect the time-frame between a report to a public disclosure to typically be in the order of 7 days. The Hasura GraphQL Engine maintainers and the security team will take the final call on setting a disclosure date.\n\n\n(Some sections have been inspired and adapted from [https://github.com/kubernetes/website/blob/master/content/en/docs/reference/issues-security/security.md](https://github.com/kubernetes/website/blob/master/content/en/docs/reference/issues-security/security.md)).\n\n## Translations\n\nThis document is available in the following translations:\n\n- [French :fr:](translations/SECURITY.french.md)\n- [Hindi :india:](translations/SECURITY.hindi.md)\n- [Malayalam :india:](translations/SECURITY.malayalam.md)\n"
        },
        {
          "name": "V2-README.md",
          "type": "blob",
          "size": 13.5263671875,
          "content": "# Hasura GraphQL Engine\n\n[![Latest release](https://img.shields.io/github/v/release/hasura/graphql-engine)](https://github.com/hasura/graphql-engine/releases/latest)\n<a href=\"https://hasura.io/\"><img src=\"assets/brand/hasura_logo_primary_lightbg.svg\" align=\"right\" width=\"200\" ></a>\n[![Docs](https://img.shields.io/badge/docs-v2.x-brightgreen.svg?style=flat)](https://hasura.io/docs)\n\n<a href=\"https://discord.gg/vBPpJkS\"><img src=\"https://img.shields.io/badge/chat-discord-brightgreen.svg?logo=discord&style=flat\"></a>\n<a href=\"https://twitter.com/intent/follow?screen_name=HasuraHQ\"><img src=\"https://img.shields.io/badge/Follow-HasuraHQ-blue.svg?style=flat&logo=twitter\"></a>\n<a href=\"https://hasura.io/newsletter/\"><img src=\"https://img.shields.io/badge/newsletter-subscribe-yellow.svg?style=flat\"></a>\n\nHasura is an open-source product that accelerates API development by 10x by giving you [GraphQL](https://hasura.io/graphql/) or REST APIs with built-in authorization on your data, instantly.\n\nRead more at [hasura.io](https://hasura.io) and the [docs](https://hasura.io/docs/).\n\n------------------\n\n![Hasura GraphQL Engine Demo](assets/demo.gif)\n\n------------------\n\n![Hasura GraphQL Engine Realtime Demo](assets/realtime.gif)\n\n-------------------\n\n## Features\n\n* **Make powerful queries**: Built-in filtering, pagination, pattern search, bulk insert, update, delete mutations\n* **Works with existing, live databases**: Point it to an existing database to instantly get a ready-to-use GraphQL API\n* **Realtime**: Convert any GraphQL query to a live query by using subscriptions\n* **Merge remote schemas**: Access custom GraphQL schemas for business logic via a single GraphQL Engine endpoint. [**Read more**](remote-schemas.md).\n* **Extend with Actions**: Write REST APIs to extend Hasura’s schema with custom business logic.\n* **Trigger webhooks or serverless functions**: On Postgres insert/update/delete events ([read more](event-triggers.md))\n* **Scheduled Triggers**: Execute custom business logic at specific points in time using a cron config or a one-off event.\n* **Fine-grained access control**: Dynamic access control that integrates with your auth system (eg: auth0, firebase-auth)\n* **Admin UI & Migrations**: Admin UI & Rails-inspired schema migrations\n* **Supported Databases**: Supports PostgreSQL (and its flavors), MS SQL Server and Big Query. Support for more [databases](https://hasura.io/graphql/database/) coming soon.\n\nRead more at [hasura.io](https://hasura.io) and the [docs](https://hasura.io/docs/).\n\n## Table of contents\n<!-- markdown-toc start - Don't edit this section. Run M-x markdown-toc-refresh-toc -->\n**Table of Contents**\n\n- [Quickstart:](#quickstart)\n  - [One-click deployment on Hasura Cloud](#one-click-deployment-on-hasura-cloud)\n  - [Other one-click deployment options](#other-one-click-deployment-options)\n  - [Other deployment methods](#other-deployment-methods)\n- [Architecture](#architecture)\n- [Client-side tooling](#client-side-tooling)\n- [Add business logic](#add-business-logic)\n  - [Remote schemas](#remote-schemas)\n  - [Trigger webhooks on database events](#trigger-webhooks-on-database-events)\n- [Demos](#demos)\n  - [Realtime applications](#realtime-applications)\n  - [Videos](#videos)\n- [Support & Troubleshooting](#support--troubleshooting)\n- [Stay up to date](#stay-up-to-date)\n- [Contributing](#contributing)\n- [Brand assets](#brand-assets)\n- [License](#license)\n- [Translations](#translations)\n\n<!-- markdown-toc end -->\n\n## Quickstart:\n\n### One-click deployment on Hasura Cloud\n\nThe fastest and easiest way to try Hasura out is via [Hasura Cloud](https://hasura.io/docs/latest/graphql/cloud/getting-started/index.html).\n\n1. Click on the following button to deploy GraphQL engine on Hasura Cloud including Postgres add-on or using an existing Postgres database:\n\n   [![Deploy to Hasura Cloud](https://graphql-engine-cdn.hasura.io/img/deploy_to_hasura.png)](https://cloud.hasura.io/signup)\n\n2. Open the Hasura console\n\n   Click on the button \"Launch console\" to open the Hasura console.\n\n3. Make your first GraphQL query\n\n   Create a table and instantly run your first query. Follow this [simple guide](https://hasura.io/docs/latest/graphql/core/getting-started/first-graphql-query.html).\n\n### Other one-click deployment options\n\nCheck out the instructions for the following one-click deployment options:\n\n| **Infra provider** | **One-click link** | **Additional information** |\n|:------------------:|:------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------:|:-------------------------------------------------------------------------------------------------------------------------------------------------:|\n| Heroku | [![Deploy to Heroku](https://www.herokucdn.com/deploy/button.svg)](https://heroku.com/deploy?template=https://github.com/hasura/graphql-engine-heroku) | [docs](https://hasura.io/docs/latest/graphql/core/guides/deployment/heroku-one-click.html) |\n| DigitalOcean | [![Deploy to DigitalOcean](https://graphql-engine-cdn.hasura.io/img/create_hasura_droplet_200px.png)](https://marketplace.digitalocean.com/apps/hasura?action=deploy&refcode=c4d9092d2c48&utm_source=hasura&utm_campaign=readme) | [docs](https://hasura.io/docs/latest/graphql/core/guides/deployment/digital-ocean-one-click.html#hasura-graphql-engine-digitalocean-one-click-app) |\n| Azure | [![Deploy to Azure](http://azuredeploy.net/deploybutton.png)](https://portal.azure.com/#create/Microsoft.Template/uri/https%3a%2f%2fraw.githubusercontent.com%2fhasura%2fgraphql-engine%2fmaster%2finstall-manifests%2fazure-container-with-pg%2fazuredeploy.json) | [docs](https://hasura.io/docs/latest/graphql/core/guides/deployment/azure-container-instances-postgres.html) |\n| Render | [![Deploy to Render](https://render.com/images/deploy-to-render-button.svg)](https://render.com/deploy?repo=https://github.com/render-examples/hasura-graphql) | [docs](https://hasura.io/docs/latest/graphql/core/guides/deployment/render-one-click.html) |\n\n> Note: The Hasura GraphQL Engine collects anonymous telemetry to understand usage and provide the best experience. Read more [here](https://hasura.io/docs/latest/policies/telemetry/) on what data is collected and the procedure to opt out.\n\n### Other deployment methods\n\nFor Docker-based deployment and advanced configuration options, see [deployment\nguides](https://hasura.io/docs/latest/graphql/core/getting-started/index.html) or\n[install manifests](install-manifests).\n\n## Architecture\n\nThe Hasura GraphQL Engine fronts a Postgres database instance and can accept GraphQL requests from your client apps. It can be configured to work with your existing auth system and can handle access control using field-level rules with dynamic variables from your auth system.\n\nYou can also merge remote GraphQL schemas and provide a unified GraphQL API.\n\n![Hasura GraphQL Engine architecture](assets/hasura-arch.svg)\n\n## Client-side tooling\n\nHasura works with any GraphQL client. See [awesome-graphql](https://github.com/chentsulin/awesome-graphql) for a list of clients. Our [frontend tutorial series](https://hasura.io/learn/#frontend-tutorial) also have integrations with GraphQL clients for different frameworks.\n\n## Add business logic\n\nGraphQL Engine provides easy-to-reason, scalable and performant methods for adding custom business logic to your backend:\n\n### Remote schemas\n\nAdd custom resolvers in a remote schema in addition to Hasura's database-based GraphQL schema. Ideal for use-cases like implementing a payment API, or querying data that is not in your database - [read more](remote-schemas.md).\n\n### Actions\n\nActions are a way to extend Hasura’s schema with custom business logic using custom queries and mutations. Actions can be added to Hasura to handle various use cases such as data validation, data enrichment from external sources and any other complex business logic - [read more](https://hasura.io/docs/latest/graphql/core/actions/index.html)\n\n### Trigger webhooks on database events\n\nAdd asynchronous business logic that is triggered based on database events.\nIdeal for notifications, data-pipelines from Postgres or asynchronous\nprocessing - [read more](event-triggers.md).\n\n### Derived data or data transformations\n\nTransform data in Postgres or run business logic on it to derive another dataset that can be queried using GraphQL Engine - [read more](https://hasura.io/docs/latest/graphql/core/queries/derived-data.html).\n\n## Demos\n\nCheck out all the example applications in the [hasura/sample-apps](https://github.com/hasura/sample-apps/tree/main) repository.\n\n### Realtime applications\n\n- Group Chat application built with React, includes a typing indicator, online users & new\n  message notifications.\n  - [Try it out](https://realtime-chat.demo.hasura.io/)\n  - [Tutorial](https://github.com/hasura/sample-apps/tree/main/realtime-chat)\n\n- Live location tracking app that shows a running vehicle changing the current GPS\n  coordinates moving on a map.\n  - [Try it out](https://realtime-location-tracking.demo.hasura.io/)\n  - [Tutorial](https://github.com/hasura/sample-apps/tree/main/realtime-location-tracking)\n\n- A real-time dashboard for data aggregations on continuously changing data.\n  - [Try it out](https://realtime-poll.demo.hasura.io/)\n  - [Tutorial](https://github.com/hasura/sample-apps/tree/main/realtime-poll)\n\n### Videos\n\n* [Add GraphQL to a self-hosted GitLab instance](https://www.youtube.com/watch?v=a2AhxKqd82Q) (*3:44 mins*)\n* [Todo app with Auth0 and GraphQL backend](https://www.youtube.com/watch?v=15ITBYnccgc) (*4:00 mins*)\n* [GraphQL on GitLab integrated with GitLab auth](https://www.youtube.com/watch?v=m1ChRhRLq7o) (*4:05 mins*)\n* [Dashboard for 10million rides with geo-location (PostGIS, Timescale)](https://www.youtube.com/watch?v=tsY573yyGWA) (*3:06 mins*)\n\n## Support & Troubleshooting\n\nThe documentation and community will help you troubleshoot most issues. If you have encountered a bug or need to get in touch with us, you can contact us using one of the following channels:\n\n* Support & feedback: [Discord](https://discord.gg/hasura)\n* Issue & bug tracking: [GitHub issues](https://github.com/hasura/graphql-engine/issues)\n* Follow product updates: [@HasuraHQ](https://twitter.com/hasurahq)\n* Talk to us on our [website chat](https://hasura.io)\n\nWe are committed to fostering an open and welcoming environment in the community. Please see the [Code of Conduct](code-of-conduct.md).\n\nIf you want to report a security issue, please [read this](SECURITY.md).\n\n## Stay up to date\n\nWe release new features every month. Sign up for our newsletter by using the link below. We send newsletters only once a month.\n[https://hasura.io/newsletter/](https://hasura.io/newsletter/)\n\n## Contributing\n\nCheck out our [contributing guide](CONTRIBUTING.md) for more details.\n\n## Brand assets\n\nHasura brand assets (logos, the Hasura mascot, powered by badges etc.) can be\nfound in the [assets/brand](assets/brand) folder. Feel free to use them in your\napplication/website etc. We'd be thrilled if you add the \"Powered by Hasura\"\nbadge to your applications built using Hasura. ❤️\n\n<div style=\"display: flex;\">\n  <img src=\"assets/brand/hasura_logo_primary_darkbg.svg\" width=\"150px\"/>\n  <img src=\"assets/brand/hasura_logo_primary_lightbg.svg\" width=\"150px\"/>\n</div>\n\n```html\n<!-- For light backgrounds -->\n<a href=\"https://hasura.io\">\n  <img width=\"150px\" src=\"https://res.cloudinary.com/dh8fp23nd/image/upload/v1711457032/main-web/hasura_logo_primary_lightbg_n0xhz8.svg\" />\n</a>\n\n<!-- For dark backgrounds -->\n<a href=\"https://hasura.io\">\n  <img width=\"150px\" src=\"https://res.cloudinary.com/dh8fp23nd/image/upload/v1711457033/main-web/hasura_logo_primary_darkbg_nussjm.svg\" />\n</a>\n```\n\n## License\n\nThe core GraphQL Engine is available under the [Apache License 2.0](https://www.apache.org/licenses/LICENSE-2.0) (Apache-2.0).\n\nAll **other contents** (except those in [`server`](server), [`cli`](cli) and\n[`console`](console) directories) are available under the [MIT License](LICENSE-community).\nThis includes everything in the [`docs`](docs) and [`community`](community)\ndirectories.\n\n## Translations\n\nThis readme is available in the following translations:\n\n- [Japanese :jp:](translations/README.japanese.md) (:pray: [@moksahero](https://github.com/moksahero))\n- [French :fr:](translations/README.french.md) (:pray: [@l0ck3](https://github.com/l0ck3))\n- [Bosnian :bosnia_herzegovina:](translations/README.bosnian.md) (:pray: [@hajro92](https://github.com/hajro92))\n- [Russian :ru:](translations/README.russian.md) (:pray: [@highflyer910](https://github.com/highflyer910))\n- [Greek 🇬🇷](translations/README.greek.md) (:pray: [@MIP2000](https://github.com/MIP2000))\n- [Spanish 🇲🇽](/translations/README.mx_spanish.md)(:pray: [@ferdox2](https://github.com/ferdox2))\n- [Indonesian :indonesia:](translations/README.indonesian.md) (:pray: [@anwari666](https://github.com/anwari666))\n- [Brazilian Portuguese :brazil:](translations/README.portuguese_br.md) (:pray: [@rubensmp](https://github.com/rubensmp))\n- [German 🇩🇪](translations/README.german.md) (:pray: [@FynnGrandke](https://github.com/FynnGrandke))\n- [Chinese :cn:](translations/README.chinese.md) (:pray: [@jagreetdg](https://github.com/jagreetdg) & [@johnbanq](https://github.com/johnbanq))\n- [Turkish :tr:](translations/README.turkish.md) (:pray: [@berat](https://github.com/berat))\n- [Korean :kr:](translations/README.korean.md) (:pray: [@라스크](https://github.com/laskdjlaskdj12))\n- [Italian :it:](translations/README.italian.md) (:pray: [@befire](https://github.com/francesca-belfiore))\n\nTranslations for other files can be found [here](translations).\n"
        },
        {
          "name": "architecture",
          "type": "tree",
          "content": null
        },
        {
          "name": "assets",
          "type": "tree",
          "content": null
        },
        {
          "name": "cabal.project",
          "type": "blob",
          "size": 9.0810546875,
          "content": "-- Global project configuration.\n\n--\n-- This file can be overridden with cabal.project.local (see e.g. cabal/dev.project)\n--\n-- If you need to switch between several local configurations you can also create a\n-- symbolic link to this file in the project root directory; e.g.:\n--     $ ln -s cabal.project myconfig.project\n--     $ ln -s cabal.project.freeze myconfig.project.freeze\n--\n-- ...and then create a new set of overrides in:\n--     myconfig.project.local\n--\n-- ...and then invoke cabal with\n--     $ cabal new-build --project-file=myconfig.project\n--\n-- See: https://www.haskell.org/cabal/users-guide/nix-local-build.html#configuring-builds-with-cabal-project\n\n\n-- NOTE: we want to be using 9.10.1 with this patch applied for now:\n-- https://gitlab.haskell.org/ghc/ghc/-/issues/25074\n--\n-- which we do on CI. Hope this makes it into 9.10.2\n--\n-- You can run this locally by installing the bindist I've created \n--\n--   curl 'https://drive.usercontent.google.com/download?id=1ZYKOwmwINRNzo9M2PkdpDX7htgQ98oMG&export=download&confirm=t' --output 9.10.1-fork-bindist.tar.xz\n--   ghcup install ghc -u file:///9.10.1-fork-bindist.tar.xz\n-- \nwith-compiler: ghc-9.10.1\n\n-- package-level parallelism:\njobs: $ncpus\n\npackages: server\npackages: server/lib/*/*.cabal\npackages: server/forks/*/*.cabal\n\n-- TODO remove these when we are able:\nallow-newer: req:template-haskell\nallow-newer: ekg-core:base\nallow-newer: ekg-core:primitive\nallow-newer: ekg-core:ghc-prim\nallow-newer: ekg-core:containers\nallow-newer: ekg-core:inspection-testing\nallow-newer: ekg-core:text\nallow-newer: ekg-json:base\nallow-newer: ekg-json:text\nallow-newer: ekg-json:aeson\nallow-newer: ekg-json:vector\nallow-newer: ekg-prometheus:base\nallow-newer: ekg-prometheus:text\nallow-newer: ekg-prometheus:bytestring\nallow-newer: ekg-prometheus:primitive\nallow-newer: ekg-prometheus:containers\n-- Migrating to 0.25+ looks like it will be a real pain... :(\n-- https://github.com/morpheusgraphql/morpheus-graphql/pull/766\nallow-newer: relude:base\nallow-newer: relude:ghc-prim\nallow-newer: morpheus-graphql:text\nallow-newer: morpheus-graphql:relude\nallow-newer: morpheus-graphql:vector\nallow-newer: morpheus-graphql:transformers\nallow-newer: morpheus-graphql-app:text\nallow-newer: morpheus-graphql-app:vector\nallow-newer: morpheus-graphql-app:transformers\nallow-newer: morpheus-graphql-code-gen:text\nallow-newer: morpheus-graphql-code-gen:optparse-applicative\nallow-newer: morpheus-graphql-code-gen-utils:text\nallow-newer: morpheus-graphql-core:text\nallow-newer: morpheus-graphql-core:transformers\nallow-newer: morpheus-graphql-core:vector\nallow-newer: morpheus-graphql-server:text\nallow-newer: morpheus-graphql-server:transformers\nallow-newer: morpheus-graphql-server:vector\nallow-newer: morpheus-graphql-client:text\nallow-newer: morpheus-graphql-client:req\nallow-newer: req:containers\nallow-newer: morpheus-graphql-client:transformers\nallow-newer: morpheus-graphql-client:vector\nallow-newer: morpheus-graphql-subscriptions:text\nallow-newer: morpheus-graphql-subscriptions:transformers\nallow-newer: servant-openapi3:base\nallow-newer: openapi3:base\nallow-newer: servant-client:base\nallow-newer: servant-client:containers\nallow-newer: servant-client:transformers\nallow-newer: servant-client:mtl\nallow-newer: servant-client-core:base\nallow-newer: servant-client-core:containers\nallow-newer: servant-client-core:free\nallow-newer: servant-client-core:template-haskell\nallow-newer: servant-client-core:transformers\nallow-newer: servant-server:base\nallow-newer: servant-server:containers\nallow-newer: servant-server:either\nallow-newer: servant-server:bytestring\nallow-newer: servant-server:filepath\nallow-newer: servant-server:template-haskell\nallow-newer: servant-server:transformers\nallow-newer: servant-server:mtl\nallow-newer: servant:base\nallow-newer: servant:mtl\nallow-newer: ghc-heap-view:base\nallow-newer: ghc-heap-view:Cabal\nallow-newer: servant:transformers\nallow-newer: singleton-bool:base\nallow-newer: semigroupoids:base\nallow-newer: http-api-data:base\nallow-newer: validation:assoc\nallow-newer: aeson:th-abstraction\nallow-newer: optics-th:th-abstraction\nallow-newer: generics-sop:th-abstraction\nallow-newer: insert-ordered-containers:base\nallow-newer: lucid2:base\nallow-newer: insert-ordered-containers:lens\nallow-newer: uuid-types:text\nallow-newer: uuid-types:template-haskell\nallow-newer: string-interpolate:template-haskell \nallow-newer: postgresql-simple:time\nallow-newer: postgresql-simple:base\nallow-newer: postgresql-simple:template-haskell\nallow-newer: postgresql-simple:bytestring\nallow-newer: postgresql-simple:text\nallow-newer: postgresql-simple:containers\nallow-newer: postgresql-simple:postgresql-libpq\nallow-newer: openapi3:template-haskell \nallow-newer: superbuffer:bytestring\nallow-newer: websockets:containers\nallow-newer: http-api-data:containers\nallow-newer: stm-hamt:primitive\nallow-newer: stm-hamt:primitive-extras\nallow-newer: quickcheck-instances:base\nallow-newer: quickcheck-instances:bytestring\nallow-newer: uuid:uuid-types\nallow-newer: connection:tls\nallow-newer: proto-lens:base\nallow-newer: proto-lens-runtime:base\nallow-newer: launchdarkly-server-sdk:lens\nallow-newer: launchdarkly-server-sdk:bytestring\nallow-newer: launchdarkly-server-sdk:text\nallow-newer: launchdarkly-server-sdk:containers\nallow-newer: lrucache:containers\nallow-newer: kriti-lang:aeson\nallow-newer: generic-monoid:base\nallow-newer: aeson-optics:base\nallow-newer: testcontainers:bytestring\nallow-newer: postgresql-libpq:base\nallow-newer: xml-lens:text\nallow-newer: xml-lens:containers\nallow-newer: config-ini:text\nallow-newer: hsc2hs:base\nallow-newer: xml-conduit:Cabal\nallow-newer: cabal-doctest:Cabal\nallow-newer: postgresql-libpq:Cabal\nallow-newer: hsc2hs:filepath\nallow-newer: hsc2hs:containers\n\n-- https://github.com/mokus0/th-extras/pull/20\nallow-newer: th-extras:template-haskell\n\npackage *\n  -- NOTE: this gets applied to both local (hasura) packages and dependencies,\n  -- but optimizations for local hasura packages are overridden/controlled\n  -- via the 'optimize-hasura' flag.\n  optimization: 2\n  -- For tooling support, e.g. HLS:\n  ghc-options: -fwrite-ide-info\n\n  -- we statically link malloc from mimalloc. Out of an abundance of caution,\n  -- disable special treatment of these in all the foreign code we build. The\n  -- only risk is potential for some missed optimizations.\n  -- See: https://github.com/microsoft/mimalloc/issues/785\n  -- NOTE: cc-options is not recognized here for some reason, so we use ghc-options+optc:\n  ghc-options: -optc-fno-builtin-malloc -optc-fno-builtin-calloc -optc-fno-builtin-realloc -optc-fno-builtin-free\n\n  haddock-html: true\n  haddock-hoogle: true\n  haddock-hyperlink-source: true\n  haddock-quickjump: true\n  haddock-internal: true\n\n-- Allow for dead-code elimination at link-time, to reduce binary size\nif(os(linux))\n package *\n  -- ld on M1 OSX does not recognise this:\n  ld-options: -Wl,--gc-sections\n  ghc-options: -split-sections\n  -- -----------------------------------------------------------\n\npackage graphql-engine\n  ghc-options: -j\n  haddock-options: \"--show-all\"\n\nallow-newer: hedgehog-generic:base\nallow-newer: hedgehog-generic:hedgehog\n\n-- 9.6 support. Awaiting release I guess...\nsource-repository-package\n  type: git\n  location: https://github.com/agrafix/Spock\n  tag: 40d028bfea0e94ca7096c719cd024ca47a46e559\n  subdir: Spock-core\n\n-- 9.6 support: https://github.com/jfischoff/postgres-options/pull/7\nsource-repository-package\n  type: git\n  location: https://github.com/jfischoff/postgres-options.git\n  tag: 3100f7ca4319748a07a46e2838f4c80f8e3f076a\n\n-- 9.6 support: https://github.com/MichaelXavier/cron/pull/51\nsource-repository-package\n  type: git\n  location: https://github.com/TristanCacqueray/cron.git\n  tag: 5f5b662a1d7abc3951ea5a2a625bbf3e83f7a11a\n\nsource-repository-package\n  type: git\n  location: https://github.com/hasura/kriti-lang.git\n  tag: c8fd863d359876af3a0fce47db8a5393dc556667\n\n-- This is an unrelesaed version of \"odbc\"\n-- For text v2 support\n-- WIP/FIXME: review change, maybe upstream PR\nsource-repository-package\n  type: git\n  location: https://github.com/hasura/odbc.git\n  tag: 43b07813d635215b3466824d07890de452920fc2\n\npackage odbc\n  ghc-options: -Wwarn\n  -- Our CI compiles with -Werror, which is also applied to those packages\n  -- while it's fine for packages we maintain, we can't actually enforce\n  -- that third-party packages are warning-free, hence this -Wno-error.\n  -- When the changes in odbc are released, we can instead depend on\n  -- the hackage version, and remove it from this list of packages.\n\nsource-repository-package\n  type: git\n  location: https://github.com/hasura/ekg-core.git\n  tag: df610859603b504494ad770bdbb7053a7f0b9a6c\n\nsource-repository-package\n  type: git\n  location: https://github.com/hasura/libdeflate-hs.git\n  tag: e6f020a1a24d07516d753fbb6f30758774f76372\n\n-- waiting on release:\nsource-repository-package\n  type: git\n  location: https://github.com/testcontainers/testcontainers-hs\n  tag: fe0d6bbce6ce74d5843a964ac231929ea37025e8\n\n-- while we wait for 9.10 support to be released, see:\n-- https://gitlab.haskell.org/ghc/ghc-debug/-/merge_requests/60 \nsource-repository-package\n  type: git\n  location: https://gitlab.haskell.org/ghc/ghc-debug.git\n  tag: 2541e77d2687b8b3b0c1a52bb4790a602ce17d7d\n  subdir: stub\n\n"
        },
        {
          "name": "cabal.project.freeze",
          "type": "blob",
          "size": 16.6611328125,
          "content": "active-repositories: hackage.haskell.org:merge\nconstraints: any.Cabal ==3.12.0.0,\n             any.Cabal-syntax ==3.12.0.0,\n             any.Diff ==0.4.1,\n             any.Glob ==0.10.2,\n             any.HTTP ==4000.4.1,\n             any.HUnit ==1.6.2.0,\n             any.OneTuple ==0.4.2,\n             any.Only ==0.1,\n             any.QuickCheck ==2.14.3,\n             any.RSA ==2.4.1,\n             any.SHA ==1.6.4.4,\n             any.Spock ==0.14.0.0,\n             any.Spock-core ==0.14.0.1,\n             any.StateVar ==1.2.2,\n             any.adjunctions ==4.4.2,\n             any.aeson ==2.2.3.0,\n             any.aeson-casing ==0.2.0.0,\n             any.aeson-optics ==1.2.1,\n             any.aeson-pretty ==0.8.10,\n             any.aeson-qq ==0.8.4,\n             any.alex ==3.3.0.0,\n             any.ansi-terminal ==0.11.5,\n             any.ansi-terminal-types ==0.11.5,\n             any.ansi-wl-pprint ==1.0.2,\n             any.appar ==0.1.8,\n             any.array ==0.5.7.0,\n             any.asn1-encoding ==0.9.6,\n             any.asn1-parse ==0.9.5,\n             any.asn1-types ==0.3.4,\n             any.assoc ==1.1.1,\n             any.async ==2.2.5,\n             any.atomic-primops ==0.8.8,\n             any.attoparsec ==0.14.4,\n             any.attoparsec-aeson ==2.2.2.0,\n             any.attoparsec-iso8601 ==1.1.1.0,\n             any.authenticate-oauth ==1.7,\n             any.auto-update ==0.1.6,\n             any.autodocodec ==0.2.3.0,\n             any.autodocodec-openapi3 ==0.2.1.1,\n             any.barbies ==2.0.4.0,\n             any.base ==4.20.0.0,\n             any.base-compat ==0.12.2,\n             any.base-compat-batteries ==0.12.2,\n             any.base-orphans ==0.9.2,\n             any.base16-bytestring ==1.0.2.0,\n             any.base64-bytestring ==1.2.1.0,\n             any.basement ==0.0.15,\n             any.bifunctors ==5.6.2,\n             any.bimap ==0.5.0,\n             any.binary ==0.8.9.2,\n             any.binary-orphans ==1.0.5,\n             any.binary-parser ==0.5.7.6,\n             any.bitvec ==1.1.5.0,\n             any.blaze-builder ==0.4.2.3,\n             any.blaze-html ==0.9.1.2,\n             any.blaze-markup ==0.8.3.0,\n             any.boring ==0.2.2,\n             any.brick ==2.3.2,\n             any.bsb-http-chunked ==0.0.0.4,\n             any.byteable ==0.1.1,\n             any.byteorder ==1.0.4,\n             any.bytestring ==0.12.1.0,\n             any.bytestring-builder ==0.10.8.2.0,\n             any.bytestring-lexing ==0.5.0.12,\n             any.bytestring-strict-builder ==0.4.5.7,\n             any.cabal-doctest ==1.0.9,\n             any.call-stack ==0.4.0,\n             any.case-insensitive ==1.2.1.0,\n             any.cassava ==0.5.3.0,\n             any.cereal ==0.5.8.3,\n             any.character-ps ==0.1,\n             any.clock ==0.8.3,\n             any.cmdargs ==0.10.22,\n             any.code-page ==0.2.1,\n             any.colour ==2.3.6,\n             any.comonad ==5.0.8,\n             any.concise ==0.1.0.1,\n             any.concurrent-output ==1.10.21,\n             any.conduit ==1.3.5,\n             any.conduit-extra ==1.3.6,\n             any.config-ini ==0.2.7.0,\n             any.constraints ==0.14.2,\n             any.constraints-extras ==0.4.0.1,\n             any.containers ==0.7,\n             any.contravariant ==1.5.5,\n             any.cookie ==0.4.6,\n             any.criterion ==1.6.3.0,\n             any.criterion-measurement ==0.2.1.0,\n             any.cron ==0.7.0,\n             any.crypto-api ==0.13.3,\n             any.crypto-pubkey-types ==0.4.3,\n             any.cryptohash ==0.11.9,\n             any.cryptohash-md5 ==0.11.101.0,\n             any.cryptohash-sha1 ==0.11.101.0,\n             any.crypton ==0.33,\n             any.crypton-connection ==0.4.1,\n             any.crypton-x509 ==1.7.6,\n             any.crypton-x509-store ==1.6.9,\n             any.crypton-x509-system ==1.6.7,\n             any.crypton-x509-validation ==1.6.12,\n             any.cryptonite ==0.30,\n             any.cryptostore ==0.3.0.0,\n             any.data-clist ==0.2,\n             any.data-default ==0.7.1.1,\n             any.data-default-class ==0.1.2.0,\n             any.data-default-instances-containers ==0.0.1,\n             any.data-default-instances-dlist ==0.0.1,\n             any.data-default-instances-old-locale ==0.0.1,\n             any.data-fix ==0.3.3,\n             any.data-has ==0.4.0.0,\n             any.dec ==0.0.6,\n             any.deepseq ==1.5.0.0,\n             any.deferred-folds ==0.9.18.6,\n             any.dense-linear-algebra ==0.1.0.0,\n             any.dependent-map ==0.4.0.0,\n             any.dependent-sum ==0.7.2.0,\n             any.directory ==1.3.8.3,\n             any.distributive ==0.6.2.1,\n             any.dlist ==1.0,\n             any.doctest ==0.22.2,\n             any.double-conversion ==2.0.4.2,\n             any.easy-file ==0.2.5,\n             any.either ==5.0.2,\n             any.ekg-core ==0.1.1.7,\n             any.entropy ==0.4.1.10,\n             any.erf ==2.0.0.0,\n             any.errors ==2.3.0,\n             any.exceptions ==0.10.7,\n             any.extensible-exceptions ==0.1.1.4,\n             any.extra ==1.7.16,\n             any.fail ==4.9.0.0,\n             any.fast-logger ==3.2.1,\n             any.file-embed ==0.0.15.0,\n             any.filepath ==1.5.2.0,\n             any.flush-queue ==1.0.0,\n             any.focus ==1.0.3.2,\n             any.fold-debounce ==0.2.0.11,\n             any.foldl ==1.4.16,\n             any.formatting ==7.2.0,\n             any.free ==5.2,\n             any.generic-lens ==2.2.2.0,\n             any.generic-lens-core ==2.2.1.0,\n             any.generic-monoid ==0.1.0.1,\n             any.generically ==0.1.1,\n             any.generics-sop ==0.5.1.4,\n             any.ghc ==9.10.1,\n             any.ghc-bignum ==1.3,\n             any.ghc-boot ==9.10.1,\n             any.ghc-boot-th ==9.10.1,\n             any.ghc-debug-convention ==0.6.0.0,\n             any.ghc-debug-stub ==0.6.0.0,\n             any.ghc-heap ==9.10.1,\n             any.ghc-heap-view ==0.6.4,\n             any.ghc-internal ==9.1001.0,\n             any.ghc-paths ==0.1.0.12,\n             any.ghc-platform ==0.1.0.0,\n             any.ghc-prim ==0.11.0,\n             any.ghci ==9.10.1,\n             any.happy ==1.20.1.1,\n             any.hashable ==1.4.7.0,\n             any.hashtables ==1.3.1,\n             any.haskell-lexer ==1.1.1,\n             any.haskell-src-exts ==1.23.1,\n             any.haskell-src-meta ==0.8.14,\n             any.hedgehog ==1.4,\n             any.hedgehog-generic ==0.1,\n             any.hostname ==1.0,\n             any.hourglass ==0.2.12,\n             any.hpc ==0.7.0.1,\n             any.hs-opentelemetry-otlp ==0.0.1.0,\n             any.hsc2hs ==0.68.9,\n             any.hspec ==2.11.1,\n             any.hspec-core ==2.11.1,\n             any.hspec-discover ==2.11.1,\n             any.hspec-expectations ==0.8.3,\n             any.hspec-expectations-json ==1.0.0.7,\n             any.hspec-expectations-lifted ==0.10.0,\n             any.hspec-hedgehog ==0.0.1.2,\n             any.hspec-smallcheck ==0.5.3,\n             any.http-api-data ==0.6,\n             any.http-client ==0.7.17,\n             any.http-client-tls ==0.3.6.3,\n             any.http-conduit ==2.3.8.3,\n             any.http-date ==0.0.11,\n             any.http-media ==0.8.1.1,\n             any.http-types ==0.12.3,\n             any.http2 ==4.2.2,\n             any.hvect ==0.4.0.1,\n             any.immortal ==0.2.2.1,\n             any.indexed-profunctors ==0.1.1,\n             any.indexed-traversable ==0.1.4,\n             any.indexed-traversable-instances ==0.1.2,\n             any.insert-ordered-containers ==0.2.5.3,\n             any.inspection-testing ==0.5.0.3,\n             any.integer-conversion ==0.1.1,\n             any.integer-gmp ==1.1,\n             any.integer-logarithms ==1.0.3.1,\n             any.invariant ==0.6.3,\n             any.iproute ==1.7.12,\n             any.iso8601-time ==0.1.5,\n             any.isomorphism-class ==0.1.0.12,\n             any.jose ==0.11,\n             any.jose-jwt ==0.9.5,\n             any.js-chart ==2.9.4.1,\n             any.jwt ==0.11.0,\n             any.kan-extensions ==5.2.6,\n             any.keys ==3.12.3,\n             any.kriti-lang ==0.3.3,\n             any.launchdarkly-server-sdk ==4.1.0,\n             any.lens ==5.3.2,\n             any.lens-aeson ==1.2.3,\n             any.lens-family ==2.1.3,\n             any.lens-family-core ==2.1.3,\n             any.libdeflate-hs ==0.1.0.0,\n             any.libyaml ==0.1.2,\n             any.lifted-async ==0.10.2.5,\n             any.lifted-base ==0.2.3.12,\n             any.list-t ==1.0.5.7,\n             any.logict ==0.8.1.0,\n             any.lrucache ==1.2.0.1,\n             any.lucid2 ==0.0.20240424,\n             any.managed ==1.0.10,\n             any.markdown-unlit ==0.6.0,\n             any.math-functions ==0.3.4.4,\n             any.megaparsec ==9.6.1,\n             any.memory ==0.18.0,\n             any.microlens ==0.4.13.1,\n             any.microlens-mtl ==0.2.0.3,\n             any.microlens-th ==0.4.3.15,\n             any.microstache ==1.0.3,\n             any.mime-types ==0.1.1.0,\n             any.mmorph ==1.2.0,\n             any.modern-uri ==0.3.6.1,\n             any.monad-control ==1.0.3.1,\n             any.monad-logger ==0.3.39,\n             any.monad-loops ==0.4.3,\n             any.monad-time ==0.4.0.0,\n             any.monad-validate ==1.3.0.0,\n             any.mono-traversable ==1.0.15.3,\n             any.morpheus-graphql ==0.28.1,\n             any.morpheus-graphql-app ==0.28.1,\n             any.morpheus-graphql-client ==0.28.1,\n             any.morpheus-graphql-code-gen ==0.28.1,\n             any.morpheus-graphql-code-gen-utils ==0.28.1,\n             any.morpheus-graphql-core ==0.28.1,\n             any.morpheus-graphql-server ==0.28.1,\n             any.morpheus-graphql-subscriptions ==0.28.1,\n             any.mtl ==2.3.1,\n             any.mtl-compat ==0.2.2,\n             any.mustache ==2.4.2,\n             any.mwc-random ==0.15.0.2,\n             any.natural-transformation ==0.4,\n             any.network ==3.1.4.0,\n             any.network-bsd ==2.8.1.0,\n             any.network-byte-order ==0.1.6,\n             any.network-info ==0.2.1,\n             any.network-uri ==2.6.4.2,\n             any.nonempty-containers ==0.3.4.5,\n             any.nonempty-vector ==0.2.3,\n             any.odbc ==0.2.7,\n             any.old-locale ==1.0.0.7,\n             any.old-time ==1.1.0.3,\n             any.openapi3 ==3.2.4,\n             any.optics-core ==0.4.1.1,\n             any.optics-extra ==0.4.2.1,\n             any.optics-th ==0.4.1,\n             any.optparse-applicative ==0.18.1.0,\n             any.optparse-generic ==1.5.2,\n             any.os-string ==2.0.2,\n             any.parallel ==3.2.2.0,\n             any.parsec ==3.1.17.0,\n             any.parser-combinators ==1.3.0,\n             any.pcre-light ==0.4.1.0,\n             any.pem ==0.2.4,\n             any.pointed ==5.0.4,\n             any.postgres-options ==0.2.0.0,\n             any.postgresql-binary ==0.14,\n             any.postgresql-libpq ==0.10.1.0,\n             any.postgresql-simple ==0.6.5.1,\n             any.pretty ==1.1.3.6,\n             any.pretty-show ==1.10,\n             any.pretty-simple ==4.1.2.0,\n             any.prettyprinter ==1.7.1,\n             any.prettyprinter-ansi-terminal ==1.1.3,\n             any.prettyprinter-compat-ansi-wl-pprint ==1.0.2,\n             any.primitive ==0.9.0.0,\n             any.primitive-extras ==0.10.2,\n             any.primitive-unlifted ==2.1.0.0,\n             any.process ==1.6.19.0,\n             any.profunctors ==5.6.2,\n             any.proto-lens ==0.7.1.5,\n             any.proto-lens-runtime ==0.7.0.6,\n             any.psqueues ==0.2.8.0,\n             any.quickcheck-instances ==0.3.31,\n             any.quickcheck-io ==0.2.0,\n             any.random ==1.2.1.2,\n             any.raw-strings-qq ==1.1,\n             any.recv ==0.1.0,\n             any.refined ==0.8.2,\n             any.reflection ==2.1.7,\n             any.regex-base ==0.94.0.2,\n             any.regex-posix ==0.96.0.1,\n             any.regex-tdfa ==1.3.2.2,\n             any.relude ==1.2.1.0,\n             any.req ==3.13.3,\n             any.reroute ==0.7.0.0,\n             any.resourcet ==1.2.6,\n             any.retry ==0.9.3.1,\n             any.rts ==1.0.2,\n             any.safe ==0.3.19,\n             any.safe-exceptions ==0.1.7.4,\n             any.sandwich ==0.2.2.0,\n             any.scanner ==0.3.1,\n             any.scientific ==0.3.8.0,\n             any.semaphore-compat ==1.0.0,\n             any.semialign ==1.3.1,\n             any.semigroupoids ==6.0.1,\n             any.semigroups ==0.20,\n             any.semver ==0.4.0.1,\n             any.servant ==0.20.1,\n             any.servant-client ==0.20,\n             any.servant-client-core ==0.20,\n             any.servant-openapi3 ==2.0.1.6,\n             any.servant-server ==0.20,\n             any.shakespeare ==2.1.0.1,\n             any.simple-sendfile ==0.2.31,\n             any.singleton-bool ==0.1.8,\n             any.smallcheck ==1.2.1.1,\n             any.socks ==0.6.1,\n             any.some ==1.0.6,\n             any.sop-core ==0.5.0.2,\n             any.split ==0.2.3.5,\n             any.splitmix ==0.1.0.5,\n             any.statistics ==0.16.2.0,\n             any.stm ==2.5.3.1,\n             any.stm-chans ==3.0.0.9,\n             any.stm-containers ==1.2.1,\n             any.stm-delay ==0.1.1.1,\n             any.stm-hamt ==1.2.1,\n             any.streaming-commons ==0.2.2.6,\n             any.strict ==0.5,\n             any.string-conversions ==0.4.0.1,\n             any.string-interpolate ==0.3.3.0,\n             any.superbuffer ==0.3.1.2,\n             any.syb ==0.7.2.3,\n             any.system-cxx-std-lib ==1.0,\n             any.tagged ==0.8.8,\n             any.tasty ==1.4.3,\n             any.tasty-bench ==0.3.5,\n             any.template-haskell ==2.22.0.0,\n             any.temporary ==1.3,\n             any.terminal-size ==0.3.4,\n             any.terminfo ==0.4.1.6,\n             any.test-framework ==0.8.2.0,\n             any.test-framework-hunit ==0.3.0.2,\n             any.testcontainers ==0.5.0.0,\n             any.text ==2.1.1,\n             any.text-builder ==0.6.7.2,\n             any.text-builder-dev ==0.3.4.4,\n             any.text-conversions ==0.3.1.1,\n             any.text-iso8601 ==0.1.1,\n             any.text-short ==0.1.6,\n             any.text-zipper ==0.13,\n             any.tf-random ==0.5,\n             any.th-abstraction ==0.6.0.0,\n             any.th-compat ==0.1.5,\n             any.th-expand-syns ==0.4.11.0,\n             any.th-lift ==0.8.4,\n             any.th-lift-instances ==0.1.20,\n             any.th-orphans ==0.13.14,\n             any.th-reify-many ==0.1.10,\n             any.these ==1.2.1,\n             any.these-skinny ==0.7.5,\n             any.time ==1.12.2,\n             any.time-compat ==1.9.7,\n             any.time-locale-compat ==0.1.1.5,\n             any.time-manager ==0.0.0,\n             any.tls ==1.9.0,\n             any.transformers ==0.6.1.1,\n             any.transformers-base ==0.4.6,\n             any.transformers-compat ==0.7.2,\n             any.typed-process ==0.2.11.1,\n             any.unagi-chan ==0.4.1.4,\n             any.unix ==2.8.5.1,\n             any.unix-compat ==0.7.2,\n             any.unix-time ==0.4.15,\n             any.unliftio ==0.2.25.0,\n             any.unliftio-core ==0.2.1.0,\n             any.unordered-containers ==0.2.20,\n             any.uri-bytestring ==0.3.3.1,\n             any.uri-encode ==1.5.0.7,\n             any.url ==2.1.3,\n             any.utf8-string ==1.0.2,\n             any.uuid ==1.3.15,\n             any.uuid-types ==1.0.6,\n             any.validation ==1.1.3,\n             any.validity ==0.12.0.2,\n             any.validity-scientific ==0.2.0.3,\n             any.vault ==0.3.1.5,\n             any.vector ==0.13.1.0,\n             any.vector-algorithms ==0.9.0.2,\n             any.vector-binary-instances ==0.2.5.2,\n             any.vector-instances ==3.4.2,\n             any.vector-stream ==0.1.0.1,\n             any.vector-th-unbox ==0.2.2,\n             any.void ==0.7.3,\n             any.vty ==6.2,\n             any.vty-crossplatform ==0.4.0.0,\n             any.vty-unix ==0.2.0.0,\n             any.wai ==3.2.4,\n             any.wai-app-static ==3.1.9,\n             any.wai-extra ==3.1.15,\n             any.wai-logger ==2.4.0,\n             any.warp ==3.3.30,\n             any.websockets ==0.13.0.0,\n             any.wide-word ==0.1.6.0,\n             any.witch ==1.2.1.1,\n             any.witherable ==0.5,\n             any.wl-pprint-annotated ==0.1.0.1,\n             any.word-wrap ==0.5,\n             any.word8 ==0.1.3,\n             any.wreq ==0.5.4.3,\n             any.wuss ==2.0.1.9,\n             any.x509 ==1.7.7,\n             any.x509-store ==1.6.9,\n             any.x509-validation ==1.6.12,\n             any.xml ==1.3.14,\n             any.xml-conduit ==1.9.1.3,\n             any.xml-lens ==0.3.1,\n             any.xml-types ==0.3.8,\n             any.yaml ==0.11.11.2,\n             any.zlib ==0.7.1.0,\nindex-state: hackage.haskell.org 2024-07-17T15:46:42Z\n"
        },
        {
          "name": "cabal",
          "type": "tree",
          "content": null
        },
        {
          "name": "cli-ext",
          "type": "tree",
          "content": null
        },
        {
          "name": "cli",
          "type": "tree",
          "content": null
        },
        {
          "name": "code-of-conduct.md",
          "type": "blob",
          "size": 3.400390625,
          "content": "# Hasura GraphQL Engine Community Code of Conduct\n\n## Our Pledge\n\nIn the interest of fostering an open and welcoming environment, we as\ncontributors and maintainers pledge to make participation in our project and\nour community a harassment-free experience for everyone, regardless of age, body\nsize, disability, ethnicity, sex characteristics, gender identity and expression,\nlevel of experience, education, socio-economic status, nationality, personal\nappearance, race, religion, or sexual identity and orientation.\n\n## Our Standards\n\nExamples of behavior that contributes to creating a positive environment\ninclude:\n\n* Using welcoming, inclusive and gender-neutral language (example: instead of \"Hey guys\", \n  you could use \"Hey folks\" or \"Hey all\")\n* Being respectful of differing viewpoints and experiences\n* Gracefully accepting constructive criticism\n* Focusing on what is best for the community\n* Showing empathy towards other community members\n\nExamples of unacceptable behavior by participants include:\n\n* The use of sexualized language or imagery and unwelcome sexual attention or\n  advances\n* Trolling, insulting/derogatory comments, and personal or political attacks\n* Public or private harassment\n* Publishing others' private information, such as a physical or electronic\n  address, without explicit permission\n* Other conduct which could reasonably be considered inappropriate in a\n  professional setting\n\n## Our Responsibilities\n\nProject maintainers are responsible for clarifying the standards of acceptable\nbehavior and are expected to take appropriate and fair corrective action in\nresponse to any instances of unacceptable behavior.\n\nProject maintainers have the right and responsibility to remove, edit, or\nreject comments, commits, code, wiki edits, issues, and other contributions\nthat are not aligned to this Code of Conduct, or to ban temporarily or\npermanently any contributor for other behaviors that they deem inappropriate,\nthreatening, offensive, or harmful.\n\n## Scope\n\nThis Code of Conduct applies both within project spaces and in public spaces\nwhen an individual is representing the project or its community. Examples of\nrepresenting a project or community include using an official project e-mail\naddress, posting via an official social media account, or acting as an appointed\nrepresentative at an online or offline event. Representation of a project may be\nfurther defined and clarified by project maintainers.\n\n## Enforcement\n\nInstances of abusive, harassing, or otherwise unacceptable behavior may be\nreported by contacting the project team at community@hasura.io. All\ncomplaints will be reviewed and investigated and will result in a response that\nis deemed necessary and appropriate to the circumstances. The project team is\nobligated to maintain confidentiality with regard to the reporter of an incident.\nFurther details of specific enforcement policies may be posted separately.\n\nProject maintainers who do not follow or enforce the Code of Conduct in good\nfaith may face temporary or permanent repercussions as determined by other\nmembers of the project's leadership.\n\n## Attribution\n\nThis Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,\navailable at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html\n\n[homepage]: https://www.contributor-covenant.org\n\n## Translations\n\nThis document is available in the following translations:\n\n- [French :fr:](translations/code-of-conduct.french.md)\n"
        },
        {
          "name": "community",
          "type": "tree",
          "content": null
        },
        {
          "name": "console",
          "type": "tree",
          "content": null
        },
        {
          "name": "contrib",
          "type": "tree",
          "content": null
        },
        {
          "name": "dc-agents",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker-compose.yaml",
          "type": "blob",
          "size": 2.572265625,
          "content": "# This file extends the base Docker Compose files to make manual testing easy.\n#\n# Run the following to get started:\n#\n#     docker compose up -d\n#\n# That will start up services in the background. To take them down, you have to\n# run:\n#\n#     docker compose down\n#\n# If you changed DB init scripts, then you should also run:\n#\n#     docker compose down -v\n#\n# That'll delete the volumes. Otherwise e.g. PostgreSQL will skip initializing\n# if a DB already exists.\n#\n# If you omit `-d`, it'll run them all in the foreground, then you can stop them\n# with your usual Ctrl-C terminal command.\n#\n# Facts:\n#\n# * The SERVICE PORTS numbering start at 65001, 65002, etc. to avoid bothering\n#   existing instances of databases.\n#\n# * The login credentials are, where possible, all \"hasura\" to avoid unnecessary\n#   mental overhead.\n#\n# * The SQL Server image will only work on macOS if you enable the relevant\n#   settings. Open the Docker Desktop settings, enable \"Use Virtualization\n#   framework\" in the \"General\" tab, and \"Use Rosetta for x86/amd64 emulation on\n#   Apple Silicon\" in the \"Features in development\" tab.\n\nname: hge-manual-tests\n\nservices:\n  postgres:\n    extends:\n      file: docker-compose/databases.yaml\n      service: postgres\n    ports:\n      - \"65002:5432\"\n    environment:\n      POSTGRES_USER: \"hasura\"\n      POSTGRES_PASSWORD: \"hasura\"\n      POSTGRES_DB: \"hasura\"\n    volumes:\n      - postgres-data:/var/lib/postgresql/data\n      - ./docker-compose/postgres/init.sh:/docker-entrypoint-initdb.d/init-hasura.sh:ro\n\n  citus:\n    extends:\n      file: docker-compose/databases.yaml\n      service: citus\n    ports:\n      - \"65004:5432\"\n    environment:\n      POSTGRES_USER: \"hasura\"\n      POSTGRES_PASSWORD: \"hasura\"\n      POSTGRES_DB: \"hasura\"\n    volumes:\n      - citus-data:/var/lib/postgresql/data\n      - ./docker-compose/postgres/init.sh:/docker-entrypoint-initdb.d/init-hasura.sh:ro\n\n  cockroach:\n    extends:\n      file: docker-compose/databases.yaml\n      service: cockroach\n    ports:\n      - \"65008:26257\"\n    environment:\n      COCKROACH_USER: \"root\"\n      COCKROACH_DATABASE: \"hasura\"\n    volumes:\n      - cockroach-data:/cockroach/cockroach-data\n\n  sqlserver:\n    extends:\n      file: docker-compose/databases.yaml\n      service: sqlserver\n    ports:\n      - \"65003:1433\"\n    volumes:\n      - mssql-data:/var/opt/mssql\n\n  dc-reference-agent:\n    extends:\n      file: dc-agents/docker-compose.yaml\n      service: dc-reference-agent\n\n  dc-sqlite-agent:\n    extends:\n      file: dc-agents/docker-compose.yaml\n      service: dc-sqlite-agent\n\nvolumes:\n  citus-data:\n  cockroach-data:\n  mssql-data:\n  postgres-data:\n"
        },
        {
          "name": "docker-compose",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "event-triggers.md",
          "type": "blob",
          "size": 4.8046875,
          "content": "# Event triggers on Postgres\n\nTrigger webhooks on database events using Hasura GraphQL Engine's event triggers.\n\n![Event triggers demo](assets/event-triggers.gif)\n\n## Highlights\n\n* **Build reactive & async apps/features**: Trigger asynchronous serverless or cloud functions to reduce infrastructure costs and simplify DevOps for developers.\n\n* **Atomic & Reliable**: Using native Postgres triggers, every relevant action on the database is captured as an event. Even if Hasura is down or being updated, events will be captured and delivered as soon as possible with an *atleast-once* guarantee. You can even configure delivery policies like `max_retries` and `retry_interval`.\n\n* **Scalable**: The event-triggers system is horizontally scalable - if you need to handle more events, just throw more resources at it!\n\n* **Works with existing, live databases**: Point it to an existing Postgres database to instantly listen to changes in your data and invoke webhooks.\n\n* **Ready for observability & monitoring**: Generated events are automatically instrumented with an event-id and structured logs emitted by Hasura make it easy for you to use your favourite tools to run an event-driven backend in production ([watch](https://youtu.be/WOPA52r3bzU) an overview using [Honeycomb](https://honeycomb.io/)).\n\n\n## Quickstart: \n\n### One-click deployment on Heroku\n\nThe fastest way to try event triggers out is via Heroku.\n\n1. Click on the following button to deploy GraphQL Engine on Heroku with the free Postgres add-on:\n\n    [![Deploy to Heroku](https://www.herokucdn.com/deploy/button.svg)](https://heroku.com/deploy?template=https://github.com/hasura/graphql-engine-heroku)\n\n2. Open the Hasura console\n\n   Visit `https://<app-name>.herokuapp.com` (*replace \\<app-name\\> with your app name*) to open the admin console.\n\n3. Configure your first event trigger and webhook\n\n   Create a table, configure the database update you want to use as a trigger and instantly invoke a webhook by adding a new row in your table. Follow this [simple guide](https://hasura.io/docs/latest/graphql/core/getting-started/first-event-trigger.html).\n\n### Other deployment methods\n\nFor Docker-based deployment and advanced configuration options, see [deployment guides](https://hasura.io/docs/latest/graphql/core/getting-started/index.html).\n\n### Demo (*30 seconds*)\n\n[![Create an event-trigger and webhook in 60 seconds](https://img.youtube.com/vi/EaTUVWnDCvA/0.jpg)](https://www.youtube.com/watch?v=EaTUVWnDCvA)\n\n[Create an event-trigger and webhook in 60 seconds](https://youtu.be/EaTUVWnDCvA)\n\n### Serverless boilerplates\n\nUse one of the [serverless trigger\nboilerplates](community/boilerplates/event-triggers) to deploy a webhook\nthat can capture database events.  \nServerless/cloud-function platforms covered by boilerplates: \n\n* [AWS Lambda](community/boilerplates/event-triggers/aws-lambda)\n* [Google Cloud Functions](community/boilerplates/event-triggers/google-cloud-functions)\n* [Azure Functions](community/boilerplates/event-triggers/azure-functions)\n* [Zeit Now](community/boilerplates/event-triggers/zeit-now)\n\n## Architecture\n\n![Event triggers architecture](assets/event-triggers-arch.png)\n\n## Demos & Tutorials: Building reactive & async apps/features\n\n### Notifications\n\nTrigger push notifications and emails based on database events. Try the demo and tutorial below to see how browser push notifications are triggered when the user inserts some data:\n\n* [Watch demo](https://www.youtube.com/watch?v=nuSHkzE2-zo)\n* [Try it out](https://serverless-push.demo.hasura.io/)\n* [Tutorial](https://github.com/hasura/sample-apps/tree/main/serverless-push)\n\n\n<!--\n### Async business logic\n\nConvert complex, long-running business logic to be event-driven, asynchronous and resilient to failure. Try this demo and tutorial below to see how an image processing job is run asynchronously to convert an image to a black-and-white version:\n\n* [Watch demo](https://some-youtube-demo.com) (*10:00 mins*)\n* [Try it out](https://some-link/)\n* [Tutorial](https://some-other-link)\n\n-->\n\n### Data transformation (ETL)\n\nTransform and load data into external data-stores. Check out this demo and tutorial below to see how Postgres data is transformed to build and populate an Algolia index:\n\n* [Watch demo](https://youtu.be/kWVEBWdEVAA)\n* [Try it out](https://serverless-etl.demo.hasura.io/)\n* [Tutorial](https://github.com/hasura/sample-apps/tree/main/serverless-etl)\n\n### Building reactive UX for your async backend with realtime GraphQL\n\nPropagate event-driven and asynchronous information to UI clients easily with GraphQL subscriptions & live-queries.\n\n![Reactive apps architecture](assets/reactive-apps-arch.png)\n\n**Watch**: [Building a reactive app with an async backend](https://youtu.be/kTSOxRrtCeI) (*04:15 mins*)\n\n## Translations\n\nThis document is available in the following translations:\n\n- [French :fr:](translations/event-triggers.french.md)\n"
        },
        {
          "name": "flake.lock",
          "type": "blob",
          "size": 1.4296875,
          "content": "{\n  \"nodes\": {\n    \"flake-utils\": {\n      \"inputs\": {\n        \"systems\": \"systems\"\n      },\n      \"locked\": {\n        \"lastModified\": 1710146030,\n        \"narHash\": \"sha256-SZ5L6eA7HJ/nmkzGG7/ISclqe6oZdOZTNoesiInkXPQ=\",\n        \"owner\": \"numtide\",\n        \"repo\": \"flake-utils\",\n        \"rev\": \"b1d9ab70662946ef0850d488da1c9019f3a9752a\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"numtide\",\n        \"repo\": \"flake-utils\",\n        \"type\": \"github\"\n      }\n    },\n    \"nixpkgs\": {\n      \"locked\": {\n        \"lastModified\": 1722254324,\n        \"narHash\": \"sha256-hEFer3XwR9BX5cgDbdEjNMWELMcV5tyzvk68IhNQ9mM=\",\n        \"owner\": \"NixOS\",\n        \"repo\": \"nixpkgs\",\n        \"rev\": \"2bba36f6dfecfdb9e5b56a5996889f1faae6fd0c\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"NixOS\",\n        \"repo\": \"nixpkgs\",\n        \"type\": \"github\"\n      }\n    },\n    \"root\": {\n      \"inputs\": {\n        \"flake-utils\": \"flake-utils\",\n        \"nixpkgs\": \"nixpkgs\"\n      }\n    },\n    \"systems\": {\n      \"locked\": {\n        \"lastModified\": 1681028828,\n        \"narHash\": \"sha256-Vy1rq5AaRuLzOxct8nz4T6wlgyUR7zLU309k9mBC768=\",\n        \"owner\": \"nix-systems\",\n        \"repo\": \"default\",\n        \"rev\": \"da67096a3b9bf56a91d16901293e51ba5b49a27e\",\n        \"type\": \"github\"\n      },\n      \"original\": {\n        \"owner\": \"nix-systems\",\n        \"repo\": \"default\",\n        \"type\": \"github\"\n      }\n    }\n  },\n  \"root\": \"root\",\n  \"version\": 7\n}\n"
        },
        {
          "name": "flake.nix",
          "type": "blob",
          "size": 1.244140625,
          "content": "# This Nix flake defines the dependencies of the Hasura GraphQL Engine.\n# Currently, we do not use it for building anything, just for providing a shell.\n#\n# The shell provides tooling for the Server, CLI, Console, and other components.\n# You can start it with `nix develop`, or by using `direnv` (see .envrc).\n#\n# If you are using macOS, note that we apply a patch to GHC, and therefore all\n# tooling needs to be built from scratch. If you're averse to waiting several\n# hours for your environment to become usable, you can add @SamirTalwar's Cachix\n# repository to save yourself the trouble:\n#\n#     https://app.cachix.org/cache/hasura-samirtalwar#pull\n{\n  description = \"Hasura GraphQL Engine\";\n\n  inputs = {\n    flake-utils = {\n      url = github:numtide/flake-utils;\n    };\n\n    nixpkgs = {\n      url = github:NixOS/nixpkgs;\n    };\n  };\n\n  outputs =\n    { self\n    , flake-utils\n    , nixpkgs\n    }:\n    flake-utils.lib.eachDefaultSystem (system:\n    let\n      pkgs = import ./nix/nixpkgs.nix { inherit nixpkgs system; };\n    in\n    {\n      packages = {\n        graphql-parser = pkgs.haskell.packages.${pkgs.ghcName}.graphql-parser;\n      };\n\n      formatter = pkgs.nixpkgs-fmt;\n\n      devShells.default = import ./nix/shell.nix { inherit pkgs system; };\n    }\n    );\n}\n"
        },
        {
          "name": "frontend",
          "type": "tree",
          "content": null
        },
        {
          "name": "install-manifests",
          "type": "tree",
          "content": null
        },
        {
          "name": "metadata-api-types",
          "type": "tree",
          "content": null
        },
        {
          "name": "metadata.openapi.json",
          "type": "blob",
          "size": 361.2509765625,
          "content": "{\n    \"components\": {\n        \"schemas\": {\n            \"ActionDefinition_Mutation_GraphQLType_InputWebhook\": {\n                \"properties\": {\n                    \"arguments\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ArgumentDefinition_GraphQLType\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"forward_client_headers\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"handler\": {\n                        \"type\": \"string\"\n                    },\n                    \"headers\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"oneOf\": [\n                                {\n                                    \"$ref\": \"#/components/schemas/HeaderConfValue\"\n                                },\n                                {\n                                    \"$ref\": \"#/components/schemas/HeaderConfFromEnv\"\n                                }\n                            ]\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"ignored_client_headers\": {\n                        \"default\": [\n                            \"Content-Length\",\n                            \"Content-MD5\",\n                            \"User-Agent\",\n                            \"Host\",\n                            \"Origin\",\n                            \"Referer\",\n                            \"Accept\",\n                            \"Accept-Encoding\",\n                            \"Accept-Language\",\n                            \"Accept-Datetime\",\n                            \"Cache-Control\",\n                            \"Connection\",\n                            \"DNT\",\n                            \"Content-Type\"\n                        ],\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"kind\": {\n                        \"default\": \"synchronous\",\n                        \"enum\": [\n                            \"synchronous\",\n                            \"asynchronous\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"output_type\": {\n                        \"type\": \"string\"\n                    },\n                    \"request_transform\": {\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/RequestTransformV1\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/RequestTransformV2\"\n                            }\n                        ]\n                    },\n                    \"response_transform\": {\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/ResponseTransformV1\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/ResponseTransformV2\"\n                            }\n                        ]\n                    },\n                    \"timeout\": {\n                        \"default\": 30,\n                        \"maximum\": 9223372036854775807,\n                        \"minimum\": -9223372036854775808,\n                        \"type\": \"number\"\n                    },\n                    \"type\": {\n                        \"enum\": [\n                            \"mutation\"\n                        ],\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"output_type\",\n                    \"type\",\n                    \"handler\"\n                ],\n                \"type\": \"object\"\n            },\n            \"ActionDefinition_Query_GraphQLType_InputWebhook\": {\n                \"properties\": {\n                    \"arguments\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ArgumentDefinition_GraphQLType\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"forward_client_headers\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"handler\": {\n                        \"type\": \"string\"\n                    },\n                    \"headers\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"oneOf\": [\n                                {\n                                    \"$ref\": \"#/components/schemas/HeaderConfValue\"\n                                },\n                                {\n                                    \"$ref\": \"#/components/schemas/HeaderConfFromEnv\"\n                                }\n                            ]\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"ignored_client_headers\": {\n                        \"default\": [\n                            \"Content-Length\",\n                            \"Content-MD5\",\n                            \"User-Agent\",\n                            \"Host\",\n                            \"Origin\",\n                            \"Referer\",\n                            \"Accept\",\n                            \"Accept-Encoding\",\n                            \"Accept-Language\",\n                            \"Accept-Datetime\",\n                            \"Cache-Control\",\n                            \"Connection\",\n                            \"DNT\",\n                            \"Content-Type\"\n                        ],\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"output_type\": {\n                        \"type\": \"string\"\n                    },\n                    \"request_transform\": {\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/RequestTransformV1\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/RequestTransformV2\"\n                            }\n                        ]\n                    },\n                    \"response_transform\": {\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/ResponseTransformV1\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/ResponseTransformV2\"\n                            }\n                        ]\n                    },\n                    \"timeout\": {\n                        \"default\": 30,\n                        \"maximum\": 9223372036854775807,\n                        \"minimum\": -9223372036854775808,\n                        \"type\": \"number\"\n                    },\n                    \"type\": {\n                        \"enum\": [\n                            \"query\"\n                        ],\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"output_type\",\n                    \"type\",\n                    \"handler\"\n                ],\n                \"type\": \"object\"\n            },\n            \"ActionMetadata\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"type\": \"string\"\n                    },\n                    \"definition\": {\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/ActionDefinition_Query_GraphQLType_InputWebhook\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/ActionDefinition_Mutation_GraphQLType_InputWebhook\"\n                            }\n                        ]\n                    },\n                    \"name\": {\n                        \"$ref\": \"#/components/schemas/GraphQLName\"\n                    },\n                    \"permissions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ActionPermissionMetadata\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"definition\"\n                ],\n                \"type\": \"object\"\n            },\n            \"ActionPermissionMetadata\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"type\": \"string\"\n                    },\n                    \"role\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"role\"\n                ],\n                \"type\": \"object\"\n            },\n            \"AddReplaceOrRemoveFields\": {\n                \"properties\": {\n                    \"add_headers\": {\n                        \"additionalProperties\": {\n                            \"type\": \"string\"\n                        },\n                        \"default\": {},\n                        \"type\": \"object\"\n                    },\n                    \"remove_headers\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"AllowlistEntry\": {\n                \"properties\": {\n                    \"collection\": {\n                        \"type\": \"string\"\n                    },\n                    \"scope\": {\n                        \"default\": {\n                            \"global\": true\n                        },\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/AllowlistScopeGlobal\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/AllowlistScopeRoles\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"collection\"\n                ],\n                \"type\": \"object\"\n            },\n            \"AllowlistScopeGlobal\": {\n                \"properties\": {\n                    \"global\": {\n                        \"enum\": [\n                            true\n                        ],\n                        \"type\": \"boolean\"\n                    }\n                },\n                \"required\": [\n                    \"global\"\n                ],\n                \"type\": \"object\"\n            },\n            \"AllowlistScopeRoles\": {\n                \"properties\": {\n                    \"global\": {\n                        \"enum\": [\n                            false\n                        ],\n                        \"type\": \"boolean\"\n                    },\n                    \"roles\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"global\",\n                    \"roles\"\n                ],\n                \"type\": \"object\"\n            },\n            \"ApiLimit\": {\n                \"properties\": {\n                    \"batch_limit\": {\n                        \"$ref\": \"#/components/schemas/Limit_MaxBatchSize\"\n                    },\n                    \"depth_limit\": {\n                        \"$ref\": \"#/components/schemas/Limit_MaxDepth\"\n                    },\n                    \"disabled\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"node_limit\": {\n                        \"$ref\": \"#/components/schemas/Limit_MaxNodes\"\n                    },\n                    \"rate_limit\": {\n                        \"$ref\": \"#/components/schemas/Limit_RateLimitConfig\"\n                    },\n                    \"time_limit\": {\n                        \"$ref\": \"#/components/schemas/Limit_MaxTime\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"ApolloFederationConfig\": {\n                \"nullable\": true,\n                \"properties\": {\n                    \"enable\": {\n                        \"description\": \"enable takes the version of apollo federation. Supported value is v1 only.\",\n                        \"enum\": [\n                            \"v1\"\n                        ],\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"enable\"\n                ],\n                \"type\": \"object\"\n            },\n            \"ArgumentDefinition_GraphQLType\": {\n                \"properties\": {\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"$ref\": \"#/components/schemas/GraphQLName\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"type\"\n                ],\n                \"type\": \"object\"\n            },\n            \"AutoTriggerLogCleanupConfig\": {\n                \"properties\": {\n                    \"batch_size\": {\n                        \"default\": 10000,\n                        \"maximum\": 9223372036854775807,\n                        \"minimum\": -9223372036854775808,\n                        \"type\": \"number\"\n                    },\n                    \"clean_invocation_logs\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"clear_older_than\": {\n                        \"maximum\": 9223372036854775807,\n                        \"minimum\": -9223372036854775808,\n                        \"type\": \"number\"\n                    },\n                    \"paused\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"schedule\": {\n                        \"$ref\": \"#/components/schemas/CronSchedule\"\n                    },\n                    \"timeout\": {\n                        \"default\": 60,\n                        \"maximum\": 9223372036854775807,\n                        \"minimum\": -9223372036854775808,\n                        \"type\": \"number\"\n                    }\n                },\n                \"required\": [\n                    \"schedule\",\n                    \"clear_older_than\"\n                ],\n                \"type\": \"object\"\n            },\n            \"BackendMap_BackendConfigWrapper\": {\n                \"properties\": {\n                    \"bigquery\": {\n                        \"items\": {\n                            \"type\": \"null\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"citus\": {\n                        \"items\": {\n                            \"type\": \"null\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"cockroach\": {\n                        \"items\": {\n                            \"type\": \"null\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"dataconnector\": {\n                        \"additionalProperties\": {\n                            \"$ref\": \"#/components/schemas/DataConnectorOptions\"\n                        },\n                        \"type\": \"object\"\n                    },\n                    \"mssql\": {\n                        \"items\": {\n                            \"type\": \"null\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"postgres\": {\n                        \"items\": {\n                            \"type\": \"null\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"BigQueryComputedFieldDefinition\": {\n                \"properties\": {\n                    \"argument_mapping\": {\n                        \"additionalProperties\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"object\"\n                    },\n                    \"function\": {\n                        \"$ref\": \"#/components/schemas/BigQueryFunctionName\"\n                    },\n                    \"return_table\": {\n                        \"$ref\": \"#/components/schemas/BigQueryTableName\"\n                    }\n                },\n                \"required\": [\n                    \"function\",\n                    \"argument_mapping\"\n                ],\n                \"type\": \"object\"\n            },\n            \"BigQueryConnSourceConfig\": {\n                \"properties\": {\n                    \"datasets\": {\n                        \"oneOf\": [\n                            {\n                                \"items\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"array\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/FromEnv\"\n                            }\n                        ]\n                    },\n                    \"global_select_limit\": {\n                        \"nullable\": true,\n                        \"oneOf\": [\n                            {\n                                \"additionalProperties\": true,\n                                \"anyOf\": [\n                                    {\n                                        \"type\": \"string\"\n                                    },\n                                    {\n                                        \"type\": \"number\"\n                                    }\n                                ]\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/FromEnv\"\n                            }\n                        ]\n                    },\n                    \"project_id\": {\n                        \"oneOf\": [\n                            {\n                                \"additionalProperties\": true,\n                                \"anyOf\": [\n                                    {\n                                        \"type\": \"string\"\n                                    },\n                                    {\n                                        \"type\": \"number\"\n                                    }\n                                ]\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/FromEnv\"\n                            }\n                        ]\n                    },\n                    \"retry_base_delay\": {\n                        \"nullable\": true,\n                        \"oneOf\": [\n                            {\n                                \"additionalProperties\": true,\n                                \"anyOf\": [\n                                    {\n                                        \"type\": \"string\"\n                                    },\n                                    {\n                                        \"type\": \"number\"\n                                    }\n                                ]\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/FromEnv\"\n                            }\n                        ]\n                    },\n                    \"retry_limit\": {\n                        \"nullable\": true,\n                        \"oneOf\": [\n                            {\n                                \"additionalProperties\": true,\n                                \"anyOf\": [\n                                    {\n                                        \"type\": \"string\"\n                                    },\n                                    {\n                                        \"type\": \"number\"\n                                    }\n                                ]\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/FromEnv\"\n                            }\n                        ]\n                    },\n                    \"service_account\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/FromEnv\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/BigQueryServiceAccount\"\n                            },\n                            {\n                                \"description\": \"JSON-encoded string\",\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/BigQueryServiceAccount\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"service_account\",\n                    \"datasets\",\n                    \"project_id\"\n                ],\n                \"type\": \"object\"\n            },\n            \"BigQueryFunctionName\": {\n                \"properties\": {\n                    \"dataset\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\"\n                ],\n                \"type\": \"object\"\n            },\n            \"BigQueryServiceAccount\": {\n                \"properties\": {\n                    \"client_email\": {\n                        \"type\": \"string\"\n                    },\n                    \"private_key\": {\n                        \"type\": \"string\"\n                    },\n                    \"project_id\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"client_email\",\n                    \"private_key\",\n                    \"project_id\"\n                ],\n                \"type\": \"object\"\n            },\n            \"BigQueryTableName\": {\n                \"properties\": {\n                    \"dataset\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"dataset\"\n                ],\n                \"type\": \"object\"\n            },\n            \"BigqueryArrRelUsingFKeyOnMultipleColumns\": {\n                \"properties\": {\n                    \"columns\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"table\": {\n                        \"$ref\": \"#/components/schemas/BigQueryTableName\"\n                    }\n                },\n                \"required\": [\n                    \"table\",\n                    \"columns\"\n                ],\n                \"type\": \"object\"\n            },\n            \"BigqueryArrRelUsingFKeyOnSingleColumn\": {\n                \"properties\": {\n                    \"column\": {\n                        \"type\": \"string\"\n                    },\n                    \"table\": {\n                        \"$ref\": \"#/components/schemas/BigQueryTableName\"\n                    }\n                },\n                \"required\": [\n                    \"table\",\n                    \"column\"\n                ],\n                \"type\": \"object\"\n            },\n            \"BigqueryBoolExp\": {\n                \"additionalProperties\": true\n            },\n            \"BigqueryComputedFieldMetadata\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"default\": null,\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"definition\": {\n                        \"$ref\": \"#/components/schemas/BigQueryComputedFieldDefinition\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"definition\"\n                ],\n                \"type\": \"object\"\n            },\n            \"BigqueryDelPerm\": {\n                \"properties\": {\n                    \"backend_only\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"filter\": {\n                        \"$ref\": \"#/components/schemas/BigqueryBoolExp\"\n                    },\n                    \"validate_input\": {\n                        \"$ref\": \"#/components/schemas/ValidateInputInputWebhook\"\n                    }\n                },\n                \"required\": [\n                    \"filter\"\n                ],\n                \"type\": \"object\"\n            },\n            \"BigqueryDeletePermDef\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"permission\": {\n                        \"$ref\": \"#/components/schemas/BigqueryDelPerm\"\n                    },\n                    \"role\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"role\",\n                    \"permission\"\n                ],\n                \"type\": \"object\"\n            },\n            \"BigqueryFunctionMetadata\": {\n                \"description\": \"A custom SQL function to add to the GraphQL schema with configuration.\\n\\nhttps://hasura.io/docs/latest/graphql/core/api-reference/schema-metadata-api/custom-functions.html#args-syntax\\n\",\n                \"properties\": {\n                    \"comment\": {\n                        \"type\": \"string\"\n                    },\n                    \"configuration\": {\n                        \"$ref\": \"#/components/schemas/FunctionConfig\"\n                    },\n                    \"function\": {\n                        \"$ref\": \"#/components/schemas/BigQueryFunctionName\"\n                    },\n                    \"permissions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/FunctionPermissionInfo\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"function\"\n                ],\n                \"type\": \"object\"\n            },\n            \"BigqueryInsPerm\": {\n                \"properties\": {\n                    \"backend_only\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"check\": {\n                        \"$ref\": \"#/components/schemas/BigqueryBoolExp\"\n                    },\n                    \"columns\": {\n                        \"oneOf\": [\n                            {\n                                \"enum\": [\n                                    \"*\"\n                                ],\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"items\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"array\"\n                            }\n                        ]\n                    },\n                    \"set\": {\n                        \"additionalProperties\": {\n                            \"additionalProperties\": true\n                        },\n                        \"type\": \"object\"\n                    },\n                    \"validate_input\": {\n                        \"$ref\": \"#/components/schemas/ValidateInputInputWebhook\"\n                    }\n                },\n                \"required\": [\n                    \"check\"\n                ],\n                \"type\": \"object\"\n            },\n            \"BigqueryInsertPermDef\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"permission\": {\n                        \"$ref\": \"#/components/schemas/BigqueryInsPerm\"\n                    },\n                    \"role\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"role\",\n                    \"permission\"\n                ],\n                \"type\": \"object\"\n            },\n            \"BigqueryLogicalModelField\": {\n                \"description\": \"A field of a logical model\",\n                \"properties\": {\n                    \"description\": {\n                        \"description\": \"Optional description of this field\",\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"description\": \"Name of the field\",\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"additionalProperties\": true,\n                        \"description\": \"Type of the field\\nA type used in a Logical Model field\\nvalue with unspecified type - this is a placeholder that will eventually be replaced with a more detailed description\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"type\"\n                ],\n                \"type\": \"object\"\n            },\n            \"BigqueryLogicalModelMetadata\": {\n                \"description\": \"A return type.\",\n                \"properties\": {\n                    \"description\": {\n                        \"description\": \"Optional description text which appears in the GraphQL Schema.\",\n                        \"type\": \"string\"\n                    },\n                    \"fields\": {\n                        \"description\": \"Return types for the logical model\",\n                        \"items\": {\n                            \"additionalProperties\": true,\n                            \"anyOf\": [\n                                {\n                                    \"$ref\": \"#/components/schemas/BigqueryLogicalModelField\"\n                                },\n                                {\n                                    \"$ref\": \"#/components/schemas/BigqueryLogicalModelField\"\n                                }\n                            ]\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"name\": {\n                        \"description\": \"A name for a logical model\",\n                        \"type\": \"string\"\n                    },\n                    \"select_permissions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/BigquerySelectPermDef\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"fields\"\n                ],\n                \"type\": \"object\"\n            },\n            \"BigqueryNativeQueryMetadata\": {\n                \"description\": \"A native query as represented in metadata.\",\n                \"properties\": {\n                    \"arguments\": {\n                        \"additionalProperties\": {\n                            \"$ref\": \"#/components/schemas/BigqueryNullableScalarType\"\n                        },\n                        \"default\": {},\n                        \"description\": \"Free variables in the expression and their types\",\n                        \"type\": \"object\"\n                    },\n                    \"array_relationships\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/RelDef_RelManualConfig__BigQuery\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"code\": {\n                        \"description\": \"Native code expression (SQL) to run\\nAn interpolated query expressed in native code (SQL)\",\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"description\": \"A description of the native query which appears in the graphql schema\",\n                        \"type\": \"string\"\n                    },\n                    \"object_relationships\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/RelDef_RelManualConfig__BigQuery\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"returns\": {\n                        \"additionalProperties\": true,\n                        \"description\": \"Return type (table) of the expression\\nA name or definition of a Logical Model\\nvalue with unspecified type - this is a placeholder that will eventually be replaced with a more detailed description\"\n                    },\n                    \"root_field_name\": {\n                        \"description\": \"Root field name for the native query\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"root_field_name\",\n                    \"code\",\n                    \"returns\"\n                ],\n                \"type\": \"object\"\n            },\n            \"BigqueryNullableScalarType\": {\n                \"description\": \"A scalar type that can be nullable with an optional description\",\n                \"properties\": {\n                    \"description\": {\n                        \"description\": \"Optional description text which appears in the GraphQL Schema\",\n                        \"type\": \"string\"\n                    },\n                    \"nullable\": {\n                        \"default\": false,\n                        \"description\": \"Whether the type is nullable\",\n                        \"type\": \"boolean\"\n                    },\n                    \"type\": {\n                        \"additionalProperties\": true,\n                        \"description\": \"The base scalar type\\nA scalar type for BigQuery\\nvalue with unspecified type - this is a placeholder that will eventually be replaced with a more detailed description\"\n                    }\n                },\n                \"required\": [\n                    \"type\"\n                ],\n                \"type\": \"object\"\n            },\n            \"BigqueryObjRelRemoteTableMultipleColumns\": {\n                \"properties\": {\n                    \"columns\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"table\": {\n                        \"$ref\": \"#/components/schemas/BigQueryTableName\"\n                    }\n                },\n                \"required\": [\n                    \"table\",\n                    \"columns\"\n                ],\n                \"type\": \"object\"\n            },\n            \"BigqueryObjRelRemoteTableSingleColumn\": {\n                \"properties\": {\n                    \"column\": {\n                        \"type\": \"string\"\n                    },\n                    \"table\": {\n                        \"$ref\": \"#/components/schemas/BigQueryTableName\"\n                    }\n                },\n                \"required\": [\n                    \"table\",\n                    \"column\"\n                ],\n                \"type\": \"object\"\n            },\n            \"BigqueryRUManual\": {\n                \"properties\": {\n                    \"manual_configuration\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/BigqueryRelManualTableConfig\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/BigqueryRelManualNativeQueryConfig\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"manual_configuration\"\n                ],\n                \"type\": \"object\"\n            },\n            \"BigqueryRelManualNativeQueryConfig\": {\n                \"properties\": {\n                    \"column_mapping\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"additionalProperties\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"object\"\n                            },\n                            {\n                                \"additionalProperties\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"object\"\n                            }\n                        ]\n                    },\n                    \"insertion_order\": {\n                        \"enum\": [\n                            \"before_parent\",\n                            \"after_parent\"\n                        ],\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"remote_native_query\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"remote_native_query\",\n                    \"column_mapping\"\n                ],\n                \"type\": \"object\"\n            },\n            \"BigqueryRelManualTableConfig\": {\n                \"properties\": {\n                    \"column_mapping\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"additionalProperties\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"object\"\n                            },\n                            {\n                                \"additionalProperties\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"object\"\n                            }\n                        ]\n                    },\n                    \"insertion_order\": {\n                        \"enum\": [\n                            \"before_parent\",\n                            \"after_parent\"\n                        ],\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"remote_table\": {\n                        \"$ref\": \"#/components/schemas/BigQueryTableName\"\n                    }\n                },\n                \"required\": [\n                    \"remote_table\",\n                    \"column_mapping\"\n                ],\n                \"type\": \"object\"\n            },\n            \"BigquerySelPerm\": {\n                \"properties\": {\n                    \"allow_aggregations\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"columns\": {\n                        \"oneOf\": [\n                            {\n                                \"enum\": [\n                                    \"*\"\n                                ],\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"items\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"array\"\n                            }\n                        ]\n                    },\n                    \"computed_fields\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"filter\": {\n                        \"$ref\": \"#/components/schemas/BigqueryBoolExp\"\n                    },\n                    \"limit\": {\n                        \"maximum\": 9223372036854775807,\n                        \"minimum\": -9223372036854775808,\n                        \"type\": \"number\"\n                    },\n                    \"query_root_fields\": {\n                        \"default\": null,\n                        \"items\": {\n                            \"enum\": [\n                                \"select\",\n                                \"select_by_pk\",\n                                \"select_aggregate\"\n                            ],\n                            \"type\": \"string\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    },\n                    \"subscription_root_fields\": {\n                        \"default\": null,\n                        \"items\": {\n                            \"enum\": [\n                                \"select\",\n                                \"select_by_pk\",\n                                \"select_aggregate\",\n                                \"select_stream\"\n                            ],\n                            \"type\": \"string\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"columns\",\n                    \"filter\"\n                ],\n                \"type\": \"object\"\n            },\n            \"BigquerySelectPermDef\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"permission\": {\n                        \"$ref\": \"#/components/schemas/BigquerySelPerm\"\n                    },\n                    \"role\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"role\",\n                    \"permission\"\n                ],\n                \"type\": \"object\"\n            },\n            \"BigquerySourceMetadata\": {\n                \"properties\": {\n                    \"configuration\": {\n                        \"$ref\": \"#/components/schemas/BigQueryConnSourceConfig\"\n                    },\n                    \"customization\": {\n                        \"$ref\": \"#/components/schemas/SourceCustomization\"\n                    },\n                    \"functions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/BigqueryFunctionMetadata\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    },\n                    \"kind\": {\n                        \"enum\": [\n                            \"bigquery\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"logical_models\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/BigqueryLogicalModelMetadata\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"native_queries\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/BigqueryNativeQueryMetadata\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    },\n                    \"query_tags\": {\n                        \"$ref\": \"#/components/schemas/QueryTagsConfig\"\n                    },\n                    \"stored_procedures\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/BigqueryStoredProcedureMetadata\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    },\n                    \"tables\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/BigqueryTableMetadata\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"kind\",\n                    \"tables\",\n                    \"configuration\"\n                ],\n                \"type\": \"object\"\n            },\n            \"BigqueryStoredProcedureMetadata\": {\n                \"description\": \"A stored procedure as represented in metadata.\",\n                \"properties\": {\n                    \"arguments\": {\n                        \"additionalProperties\": {\n                            \"$ref\": \"#/components/schemas/BigqueryNullableScalarType\"\n                        },\n                        \"default\": {},\n                        \"description\": \"Free variables in the expression and their types\",\n                        \"type\": \"object\"\n                    },\n                    \"configuration\": {\n                        \"$ref\": \"#/components/schemas/StoredProcedureConfig\"\n                    },\n                    \"description\": {\n                        \"description\": \"A description of the stored procedure which appears in the graphql schema\",\n                        \"type\": \"string\"\n                    },\n                    \"returns\": {\n                        \"description\": \"Return type (table) of the expression\",\n                        \"type\": \"string\"\n                    },\n                    \"stored_procedure\": {\n                        \"$ref\": \"#/components/schemas/BigQueryFunctionName\"\n                    }\n                },\n                \"required\": [\n                    \"stored_procedure\",\n                    \"configuration\",\n                    \"returns\"\n                ],\n                \"type\": \"object\"\n            },\n            \"BigqueryTableConfig\": {\n                \"properties\": {\n                    \"column_config\": {\n                        \"additionalProperties\": {\n                            \"$ref\": \"#/components/schemas/ColumnConfig\"\n                        },\n                        \"default\": {},\n                        \"type\": \"object\"\n                    },\n                    \"comment\": {\n                        \"default\": null,\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"custom_column_names\": {\n                        \"additionalProperties\": {\n                            \"$ref\": \"#/components/schemas/GraphQLName\"\n                        },\n                        \"default\": {},\n                        \"type\": \"object\"\n                    },\n                    \"custom_name\": {\n                        \"$ref\": \"#/components/schemas/GraphQLName\"\n                    },\n                    \"custom_root_fields\": {\n                        \"$ref\": \"#/components/schemas/TableCustomRootFields\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"BigqueryTableMetadata\": {\n                \"description\": \"Representation of a table in metadata, 'tables.yaml' and 'metadata.json'\",\n                \"properties\": {\n                    \"apollo_federation_config\": {\n                        \"$ref\": \"#/components/schemas/ApolloFederationConfig\"\n                    },\n                    \"array_relationships\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/RelDef_RelUsing__BigQuery__ArrRelUsingFKeyOn__BigQuery_\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"computed_fields\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/BigqueryComputedFieldMetadata\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"configuration\": {\n                        \"$ref\": \"#/components/schemas/BigqueryTableConfig\"\n                    },\n                    \"delete_permissions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/BigqueryDeletePermDef\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"insert_permissions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/BigqueryInsertPermDef\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"is_enum\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"logical_model\": {\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"object_relationships\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/RelDef_RelUsing__BigQuery__ObjRelUsingChoice__BigQuery_\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"remote_relationships\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/RemoteRelationship_RemoteRelationshipDefinition\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"select_permissions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/BigquerySelectPermDef\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"table\": {\n                        \"$ref\": \"#/components/schemas/BigQueryTableName\"\n                    },\n                    \"update_permissions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/BigqueryUpdatePermDef\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"table\"\n                ],\n                \"type\": \"object\"\n            },\n            \"BigqueryUpdPerm\": {\n                \"properties\": {\n                    \"backend_only\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"check\": {\n                        \"$ref\": \"#/components/schemas/BigqueryBoolExp\"\n                    },\n                    \"columns\": {\n                        \"description\": \"Allowed columns\",\n                        \"oneOf\": [\n                            {\n                                \"enum\": [\n                                    \"*\"\n                                ],\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"items\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"array\"\n                            }\n                        ]\n                    },\n                    \"filter\": {\n                        \"$ref\": \"#/components/schemas/BigqueryBoolExp\"\n                    },\n                    \"set\": {\n                        \"additionalProperties\": {\n                            \"additionalProperties\": true\n                        },\n                        \"description\": \"Preset columns\",\n                        \"type\": \"object\"\n                    },\n                    \"validate_input\": {\n                        \"$ref\": \"#/components/schemas/ValidateInputInputWebhook\"\n                    }\n                },\n                \"required\": [\n                    \"columns\",\n                    \"filter\"\n                ],\n                \"type\": \"object\"\n            },\n            \"BigqueryUpdatePermDef\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"permission\": {\n                        \"$ref\": \"#/components/schemas/BigqueryUpdPerm\"\n                    },\n                    \"role\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"role\",\n                    \"permission\"\n                ],\n                \"type\": \"object\"\n            },\n            \"BodyTransformFn_ModifyAsFormURLEncoded\": {\n                \"properties\": {\n                    \"action\": {\n                        \"enum\": [\n                            \"x_www_form_urlencoded\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"form_template\": {\n                        \"additionalProperties\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"object\"\n                    }\n                },\n                \"required\": [\n                    \"action\",\n                    \"form_template\"\n                ],\n                \"type\": \"object\"\n            },\n            \"BodyTransformFn_ModifyAsJSON\": {\n                \"properties\": {\n                    \"action\": {\n                        \"enum\": [\n                            \"transform\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"template\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"action\",\n                    \"template\"\n                ],\n                \"type\": \"object\"\n            },\n            \"BodyTransformFn_Remove\": {\n                \"properties\": {\n                    \"action\": {\n                        \"enum\": [\n                            \"remove\"\n                        ],\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"action\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CertVar\": {\n                \"nullable\": true,\n                \"properties\": {\n                    \"from_env\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"from_env\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CitusArrRelUsingFKeyOnMultipleColumns\": {\n                \"properties\": {\n                    \"columns\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"table\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/PostgresQualified_TableName\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"table\",\n                    \"columns\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CitusArrRelUsingFKeyOnSingleColumn\": {\n                \"properties\": {\n                    \"column\": {\n                        \"type\": \"string\"\n                    },\n                    \"table\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/PostgresQualified_TableName\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"table\",\n                    \"column\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CitusBoolExp\": {\n                \"additionalProperties\": true\n            },\n            \"CitusComputedFieldMetadata\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"default\": null,\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"definition\": {\n                        \"$ref\": \"#/components/schemas/PostgresComputedFieldDefinition\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"definition\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CitusDelPerm\": {\n                \"properties\": {\n                    \"backend_only\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"filter\": {\n                        \"$ref\": \"#/components/schemas/CitusBoolExp\"\n                    },\n                    \"validate_input\": {\n                        \"$ref\": \"#/components/schemas/ValidateInputInputWebhook\"\n                    }\n                },\n                \"required\": [\n                    \"filter\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CitusDeletePermDef\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"permission\": {\n                        \"$ref\": \"#/components/schemas/CitusDelPerm\"\n                    },\n                    \"role\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"role\",\n                    \"permission\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CitusEventTriggerConfEventTriggerConf\": {\n                \"properties\": {\n                    \"cleanup_config\": {\n                        \"$ref\": \"#/components/schemas/AutoTriggerLogCleanupConfig\"\n                    },\n                    \"definition\": {\n                        \"$ref\": \"#/components/schemas/CitusTriggerOpsDef\"\n                    },\n                    \"headers\": {\n                        \"items\": {\n                            \"oneOf\": [\n                                {\n                                    \"$ref\": \"#/components/schemas/HeaderConfValue\"\n                                },\n                                {\n                                    \"$ref\": \"#/components/schemas/HeaderConfFromEnv\"\n                                }\n                            ]\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"request_transform\": {\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/RequestTransformV1\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/RequestTransformV2\"\n                            }\n                        ]\n                    },\n                    \"response_transform\": {\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/ResponseTransformV1\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/ResponseTransformV2\"\n                            }\n                        ]\n                    },\n                    \"retry_conf\": {\n                        \"$ref\": \"#/components/schemas/RetryConf\"\n                    },\n                    \"trigger_on_replication\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"webhook\": {\n                        \"type\": \"string\"\n                    },\n                    \"webhook_from_env\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"definition\",\n                    \"retry_conf\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CitusFunctionMetadata\": {\n                \"description\": \"A custom SQL function to add to the GraphQL schema with configuration.\\n\\nhttps://hasura.io/docs/latest/graphql/core/api-reference/schema-metadata-api/custom-functions.html#args-syntax\\n\",\n                \"properties\": {\n                    \"comment\": {\n                        \"type\": \"string\"\n                    },\n                    \"configuration\": {\n                        \"$ref\": \"#/components/schemas/FunctionConfig\"\n                    },\n                    \"function\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/PostgresQualified_FunctionName\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ],\n                        \"description\": \"Name of the SQL function\"\n                    },\n                    \"permissions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/FunctionPermissionInfo\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"function\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CitusHealthCheckConfig\": {\n                \"nullable\": true,\n                \"properties\": {\n                    \"interval\": {\n                        \"type\": \"number\"\n                    },\n                    \"retries\": {\n                        \"default\": 3,\n                        \"maximum\": 9223372036854775807,\n                        \"minimum\": -9223372036854775808,\n                        \"type\": \"number\"\n                    },\n                    \"retry_interval\": {\n                        \"default\": 10,\n                        \"type\": \"number\"\n                    },\n                    \"test\": {\n                        \"$ref\": \"#/components/schemas/HealthCheckTestSql\"\n                    },\n                    \"timeout\": {\n                        \"default\": 10,\n                        \"type\": \"number\"\n                    }\n                },\n                \"required\": [\n                    \"interval\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CitusInsPerm\": {\n                \"properties\": {\n                    \"backend_only\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"check\": {\n                        \"$ref\": \"#/components/schemas/CitusBoolExp\"\n                    },\n                    \"columns\": {\n                        \"oneOf\": [\n                            {\n                                \"enum\": [\n                                    \"*\"\n                                ],\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"items\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"array\"\n                            }\n                        ]\n                    },\n                    \"set\": {\n                        \"additionalProperties\": {\n                            \"additionalProperties\": true\n                        },\n                        \"type\": \"object\"\n                    },\n                    \"validate_input\": {\n                        \"$ref\": \"#/components/schemas/ValidateInputInputWebhook\"\n                    }\n                },\n                \"required\": [\n                    \"check\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CitusInsertPermDef\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"permission\": {\n                        \"$ref\": \"#/components/schemas/CitusInsPerm\"\n                    },\n                    \"role\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"role\",\n                    \"permission\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CitusLogicalModelField\": {\n                \"description\": \"A field of a logical model\",\n                \"properties\": {\n                    \"description\": {\n                        \"description\": \"Optional description of this field\",\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"description\": \"Name of the field\",\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"additionalProperties\": true,\n                        \"description\": \"Type of the field\\nA type used in a Logical Model field\\nvalue with unspecified type - this is a placeholder that will eventually be replaced with a more detailed description\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"type\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CitusLogicalModelMetadata\": {\n                \"description\": \"A return type.\",\n                \"properties\": {\n                    \"description\": {\n                        \"description\": \"Optional description text which appears in the GraphQL Schema.\",\n                        \"type\": \"string\"\n                    },\n                    \"fields\": {\n                        \"description\": \"Return types for the logical model\",\n                        \"items\": {\n                            \"additionalProperties\": true,\n                            \"anyOf\": [\n                                {\n                                    \"$ref\": \"#/components/schemas/CitusLogicalModelField\"\n                                },\n                                {\n                                    \"$ref\": \"#/components/schemas/CitusLogicalModelField\"\n                                }\n                            ]\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"name\": {\n                        \"description\": \"A name for a logical model\",\n                        \"type\": \"string\"\n                    },\n                    \"select_permissions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/CitusSelectPermDef\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"fields\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CitusNativeQueryMetadata\": {\n                \"description\": \"A native query as represented in metadata.\",\n                \"properties\": {\n                    \"arguments\": {\n                        \"additionalProperties\": {\n                            \"$ref\": \"#/components/schemas/CitusNullableScalarType\"\n                        },\n                        \"default\": {},\n                        \"description\": \"Free variables in the expression and their types\",\n                        \"type\": \"object\"\n                    },\n                    \"array_relationships\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/RelDef_RelManualConfig___Postgres__Citus_\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"code\": {\n                        \"description\": \"Native code expression (SQL) to run\\nAn interpolated query expressed in native code (SQL)\",\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"description\": \"A description of the native query which appears in the graphql schema\",\n                        \"type\": \"string\"\n                    },\n                    \"object_relationships\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/RelDef_RelManualConfig___Postgres__Citus_\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"returns\": {\n                        \"additionalProperties\": true,\n                        \"description\": \"Return type (table) of the expression\\nA name or definition of a Logical Model\\nvalue with unspecified type - this is a placeholder that will eventually be replaced with a more detailed description\"\n                    },\n                    \"root_field_name\": {\n                        \"description\": \"Root field name for the native query\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"root_field_name\",\n                    \"code\",\n                    \"returns\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CitusNullableScalarType\": {\n                \"description\": \"A scalar type that can be nullable with an optional description\",\n                \"properties\": {\n                    \"description\": {\n                        \"description\": \"Optional description text which appears in the GraphQL Schema\",\n                        \"type\": \"string\"\n                    },\n                    \"nullable\": {\n                        \"default\": false,\n                        \"description\": \"Whether the type is nullable\",\n                        \"type\": \"boolean\"\n                    },\n                    \"type\": {\n                        \"description\": \"The base scalar type\\nPostgres Scalar Types\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"type\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CitusObjRelRemoteTableMultipleColumns\": {\n                \"properties\": {\n                    \"columns\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"table\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/PostgresQualified_TableName\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"table\",\n                    \"columns\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CitusObjRelRemoteTableSingleColumn\": {\n                \"properties\": {\n                    \"column\": {\n                        \"type\": \"string\"\n                    },\n                    \"table\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/PostgresQualified_TableName\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"table\",\n                    \"column\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CitusRUManual\": {\n                \"properties\": {\n                    \"manual_configuration\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/CitusRelManualTableConfig\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/CitusRelManualNativeQueryConfig\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"manual_configuration\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CitusRelManualNativeQueryConfig\": {\n                \"properties\": {\n                    \"column_mapping\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"additionalProperties\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"object\"\n                            },\n                            {\n                                \"additionalProperties\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"object\"\n                            }\n                        ]\n                    },\n                    \"insertion_order\": {\n                        \"enum\": [\n                            \"before_parent\",\n                            \"after_parent\"\n                        ],\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"remote_native_query\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"remote_native_query\",\n                    \"column_mapping\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CitusRelManualTableConfig\": {\n                \"properties\": {\n                    \"column_mapping\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"additionalProperties\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"object\"\n                            },\n                            {\n                                \"additionalProperties\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"object\"\n                            }\n                        ]\n                    },\n                    \"insertion_order\": {\n                        \"enum\": [\n                            \"before_parent\",\n                            \"after_parent\"\n                        ],\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"remote_table\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/PostgresQualified_TableName\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"remote_table\",\n                    \"column_mapping\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CitusSelPerm\": {\n                \"properties\": {\n                    \"allow_aggregations\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"columns\": {\n                        \"oneOf\": [\n                            {\n                                \"enum\": [\n                                    \"*\"\n                                ],\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"items\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"array\"\n                            }\n                        ]\n                    },\n                    \"computed_fields\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"filter\": {\n                        \"$ref\": \"#/components/schemas/CitusBoolExp\"\n                    },\n                    \"limit\": {\n                        \"maximum\": 9223372036854775807,\n                        \"minimum\": -9223372036854775808,\n                        \"type\": \"number\"\n                    },\n                    \"query_root_fields\": {\n                        \"default\": null,\n                        \"items\": {\n                            \"enum\": [\n                                \"select\",\n                                \"select_by_pk\",\n                                \"select_aggregate\"\n                            ],\n                            \"type\": \"string\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    },\n                    \"subscription_root_fields\": {\n                        \"default\": null,\n                        \"items\": {\n                            \"enum\": [\n                                \"select\",\n                                \"select_by_pk\",\n                                \"select_aggregate\",\n                                \"select_stream\"\n                            ],\n                            \"type\": \"string\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"columns\",\n                    \"filter\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CitusSelectPermDef\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"permission\": {\n                        \"$ref\": \"#/components/schemas/CitusSelPerm\"\n                    },\n                    \"role\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"role\",\n                    \"permission\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CitusSourceMetadata\": {\n                \"properties\": {\n                    \"configuration\": {\n                        \"$ref\": \"#/components/schemas/PostgresConnConfiguration\"\n                    },\n                    \"customization\": {\n                        \"$ref\": \"#/components/schemas/SourceCustomization\"\n                    },\n                    \"functions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/CitusFunctionMetadata\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    },\n                    \"health_check\": {\n                        \"$ref\": \"#/components/schemas/CitusHealthCheckConfig\"\n                    },\n                    \"kind\": {\n                        \"enum\": [\n                            \"citus\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"logical_models\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/CitusLogicalModelMetadata\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"native_queries\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/CitusNativeQueryMetadata\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    },\n                    \"query_tags\": {\n                        \"$ref\": \"#/components/schemas/QueryTagsConfig\"\n                    },\n                    \"stored_procedures\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/CitusStoredProcedureMetadata\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    },\n                    \"tables\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/CitusTableMetadata\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"kind\",\n                    \"tables\",\n                    \"configuration\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CitusStoredProcedureMetadata\": {\n                \"description\": \"A stored procedure as represented in metadata.\",\n                \"properties\": {\n                    \"arguments\": {\n                        \"additionalProperties\": {\n                            \"$ref\": \"#/components/schemas/CitusNullableScalarType\"\n                        },\n                        \"default\": {},\n                        \"description\": \"Free variables in the expression and their types\",\n                        \"type\": \"object\"\n                    },\n                    \"configuration\": {\n                        \"$ref\": \"#/components/schemas/StoredProcedureConfig\"\n                    },\n                    \"description\": {\n                        \"description\": \"A description of the stored procedure which appears in the graphql schema\",\n                        \"type\": \"string\"\n                    },\n                    \"returns\": {\n                        \"description\": \"Return type (table) of the expression\",\n                        \"type\": \"string\"\n                    },\n                    \"stored_procedure\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/PostgresQualified_FunctionName\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ],\n                        \"description\": \"The name of the SQL stored procedure\"\n                    }\n                },\n                \"required\": [\n                    \"stored_procedure\",\n                    \"configuration\",\n                    \"returns\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CitusSubscribeOpSpec\": {\n                \"properties\": {\n                    \"columns\": {\n                        \"oneOf\": [\n                            {\n                                \"enum\": [\n                                    \"*\"\n                                ],\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"items\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"array\"\n                            }\n                        ]\n                    },\n                    \"payload\": {\n                        \"oneOf\": [\n                            {\n                                \"enum\": [\n                                    \"*\"\n                                ],\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"items\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"array\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"columns\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CitusTableConfig\": {\n                \"properties\": {\n                    \"column_config\": {\n                        \"additionalProperties\": {\n                            \"$ref\": \"#/components/schemas/ColumnConfig\"\n                        },\n                        \"default\": {},\n                        \"type\": \"object\"\n                    },\n                    \"comment\": {\n                        \"default\": null,\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"custom_column_names\": {\n                        \"additionalProperties\": {\n                            \"$ref\": \"#/components/schemas/GraphQLName\"\n                        },\n                        \"default\": {},\n                        \"type\": \"object\"\n                    },\n                    \"custom_name\": {\n                        \"$ref\": \"#/components/schemas/GraphQLName\"\n                    },\n                    \"custom_root_fields\": {\n                        \"$ref\": \"#/components/schemas/TableCustomRootFields\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"CitusTableMetadata\": {\n                \"description\": \"Representation of a table in metadata, 'tables.yaml' and 'metadata.json'\",\n                \"properties\": {\n                    \"apollo_federation_config\": {\n                        \"$ref\": \"#/components/schemas/ApolloFederationConfig\"\n                    },\n                    \"array_relationships\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/RelDef_RelUsing___Postgres__Citus___ArrRelUsingFKeyOn___Postgres__Citus__\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"computed_fields\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/CitusComputedFieldMetadata\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"configuration\": {\n                        \"$ref\": \"#/components/schemas/CitusTableConfig\"\n                    },\n                    \"delete_permissions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/CitusDeletePermDef\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"event_triggers\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/CitusEventTriggerConfEventTriggerConf\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"insert_permissions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/CitusInsertPermDef\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"is_enum\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"logical_model\": {\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"object_relationships\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/RelDef_RelUsing___Postgres__Citus___ObjRelUsingChoice___Postgres__Citus__\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"remote_relationships\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/RemoteRelationship_RemoteRelationshipDefinition\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"select_permissions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/CitusSelectPermDef\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"table\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/PostgresQualified_TableName\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ]\n                    },\n                    \"update_permissions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/CitusUpdatePermDef\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"table\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CitusTriggerOpsDef\": {\n                \"properties\": {\n                    \"delete\": {\n                        \"$ref\": \"#/components/schemas/CitusSubscribeOpSpec\"\n                    },\n                    \"enable_manual\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"insert\": {\n                        \"$ref\": \"#/components/schemas/CitusSubscribeOpSpec\"\n                    },\n                    \"update\": {\n                        \"$ref\": \"#/components/schemas/CitusSubscribeOpSpec\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"CitusUpdPerm\": {\n                \"properties\": {\n                    \"backend_only\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"check\": {\n                        \"$ref\": \"#/components/schemas/CitusBoolExp\"\n                    },\n                    \"columns\": {\n                        \"description\": \"Allowed columns\",\n                        \"oneOf\": [\n                            {\n                                \"enum\": [\n                                    \"*\"\n                                ],\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"items\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"array\"\n                            }\n                        ]\n                    },\n                    \"filter\": {\n                        \"$ref\": \"#/components/schemas/CitusBoolExp\"\n                    },\n                    \"set\": {\n                        \"additionalProperties\": {\n                            \"additionalProperties\": true\n                        },\n                        \"description\": \"Preset columns\",\n                        \"type\": \"object\"\n                    },\n                    \"validate_input\": {\n                        \"$ref\": \"#/components/schemas/ValidateInputInputWebhook\"\n                    }\n                },\n                \"required\": [\n                    \"columns\",\n                    \"filter\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CitusUpdatePermDef\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"permission\": {\n                        \"$ref\": \"#/components/schemas/CitusUpdPerm\"\n                    },\n                    \"role\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"role\",\n                    \"permission\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CockroachArrRelUsingFKeyOnMultipleColumns\": {\n                \"properties\": {\n                    \"columns\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"table\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/PostgresQualified_TableName\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"table\",\n                    \"columns\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CockroachArrRelUsingFKeyOnSingleColumn\": {\n                \"properties\": {\n                    \"column\": {\n                        \"type\": \"string\"\n                    },\n                    \"table\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/PostgresQualified_TableName\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"table\",\n                    \"column\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CockroachBoolExp\": {\n                \"additionalProperties\": true\n            },\n            \"CockroachComputedFieldMetadata\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"default\": null,\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"definition\": {\n                        \"$ref\": \"#/components/schemas/PostgresComputedFieldDefinition\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"definition\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CockroachDelPerm\": {\n                \"properties\": {\n                    \"backend_only\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"filter\": {\n                        \"$ref\": \"#/components/schemas/CockroachBoolExp\"\n                    },\n                    \"validate_input\": {\n                        \"$ref\": \"#/components/schemas/ValidateInputInputWebhook\"\n                    }\n                },\n                \"required\": [\n                    \"filter\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CockroachDeletePermDef\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"permission\": {\n                        \"$ref\": \"#/components/schemas/CockroachDelPerm\"\n                    },\n                    \"role\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"role\",\n                    \"permission\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CockroachEventTriggerConfEventTriggerConf\": {\n                \"properties\": {\n                    \"cleanup_config\": {\n                        \"$ref\": \"#/components/schemas/AutoTriggerLogCleanupConfig\"\n                    },\n                    \"definition\": {\n                        \"$ref\": \"#/components/schemas/CockroachTriggerOpsDef\"\n                    },\n                    \"headers\": {\n                        \"items\": {\n                            \"oneOf\": [\n                                {\n                                    \"$ref\": \"#/components/schemas/HeaderConfValue\"\n                                },\n                                {\n                                    \"$ref\": \"#/components/schemas/HeaderConfFromEnv\"\n                                }\n                            ]\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"request_transform\": {\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/RequestTransformV1\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/RequestTransformV2\"\n                            }\n                        ]\n                    },\n                    \"response_transform\": {\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/ResponseTransformV1\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/ResponseTransformV2\"\n                            }\n                        ]\n                    },\n                    \"retry_conf\": {\n                        \"$ref\": \"#/components/schemas/RetryConf\"\n                    },\n                    \"trigger_on_replication\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"webhook\": {\n                        \"type\": \"string\"\n                    },\n                    \"webhook_from_env\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"definition\",\n                    \"retry_conf\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CockroachFunctionMetadata\": {\n                \"description\": \"A custom SQL function to add to the GraphQL schema with configuration.\\n\\nhttps://hasura.io/docs/latest/graphql/core/api-reference/schema-metadata-api/custom-functions.html#args-syntax\\n\",\n                \"properties\": {\n                    \"comment\": {\n                        \"type\": \"string\"\n                    },\n                    \"configuration\": {\n                        \"$ref\": \"#/components/schemas/FunctionConfig\"\n                    },\n                    \"function\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/PostgresQualified_FunctionName\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ],\n                        \"description\": \"Name of the SQL function\"\n                    },\n                    \"permissions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/FunctionPermissionInfo\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"function\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CockroachHealthCheckConfig\": {\n                \"nullable\": true,\n                \"properties\": {\n                    \"interval\": {\n                        \"type\": \"number\"\n                    },\n                    \"retries\": {\n                        \"default\": 3,\n                        \"maximum\": 9223372036854775807,\n                        \"minimum\": -9223372036854775808,\n                        \"type\": \"number\"\n                    },\n                    \"retry_interval\": {\n                        \"default\": 10,\n                        \"type\": \"number\"\n                    },\n                    \"test\": {\n                        \"$ref\": \"#/components/schemas/HealthCheckTestSql\"\n                    },\n                    \"timeout\": {\n                        \"default\": 10,\n                        \"type\": \"number\"\n                    }\n                },\n                \"required\": [\n                    \"interval\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CockroachInsPerm\": {\n                \"properties\": {\n                    \"backend_only\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"check\": {\n                        \"$ref\": \"#/components/schemas/CockroachBoolExp\"\n                    },\n                    \"columns\": {\n                        \"oneOf\": [\n                            {\n                                \"enum\": [\n                                    \"*\"\n                                ],\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"items\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"array\"\n                            }\n                        ]\n                    },\n                    \"set\": {\n                        \"additionalProperties\": {\n                            \"additionalProperties\": true\n                        },\n                        \"type\": \"object\"\n                    },\n                    \"validate_input\": {\n                        \"$ref\": \"#/components/schemas/ValidateInputInputWebhook\"\n                    }\n                },\n                \"required\": [\n                    \"check\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CockroachInsertPermDef\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"permission\": {\n                        \"$ref\": \"#/components/schemas/CockroachInsPerm\"\n                    },\n                    \"role\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"role\",\n                    \"permission\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CockroachLogicalModelField\": {\n                \"description\": \"A field of a logical model\",\n                \"properties\": {\n                    \"description\": {\n                        \"description\": \"Optional description of this field\",\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"description\": \"Name of the field\",\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"additionalProperties\": true,\n                        \"description\": \"Type of the field\\nA type used in a Logical Model field\\nvalue with unspecified type - this is a placeholder that will eventually be replaced with a more detailed description\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"type\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CockroachLogicalModelMetadata\": {\n                \"description\": \"A return type.\",\n                \"properties\": {\n                    \"description\": {\n                        \"description\": \"Optional description text which appears in the GraphQL Schema.\",\n                        \"type\": \"string\"\n                    },\n                    \"fields\": {\n                        \"description\": \"Return types for the logical model\",\n                        \"items\": {\n                            \"additionalProperties\": true,\n                            \"anyOf\": [\n                                {\n                                    \"$ref\": \"#/components/schemas/CockroachLogicalModelField\"\n                                },\n                                {\n                                    \"$ref\": \"#/components/schemas/CockroachLogicalModelField\"\n                                }\n                            ]\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"name\": {\n                        \"description\": \"A name for a logical model\",\n                        \"type\": \"string\"\n                    },\n                    \"select_permissions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/CockroachSelectPermDef\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"fields\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CockroachNativeQueryMetadata\": {\n                \"description\": \"A native query as represented in metadata.\",\n                \"properties\": {\n                    \"arguments\": {\n                        \"additionalProperties\": {\n                            \"$ref\": \"#/components/schemas/CockroachNullableScalarType\"\n                        },\n                        \"default\": {},\n                        \"description\": \"Free variables in the expression and their types\",\n                        \"type\": \"object\"\n                    },\n                    \"array_relationships\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/RelDef_RelManualConfig___Postgres__Cockroach_\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"code\": {\n                        \"description\": \"Native code expression (SQL) to run\\nAn interpolated query expressed in native code (SQL)\",\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"description\": \"A description of the native query which appears in the graphql schema\",\n                        \"type\": \"string\"\n                    },\n                    \"object_relationships\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/RelDef_RelManualConfig___Postgres__Cockroach_\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"returns\": {\n                        \"additionalProperties\": true,\n                        \"description\": \"Return type (table) of the expression\\nA name or definition of a Logical Model\\nvalue with unspecified type - this is a placeholder that will eventually be replaced with a more detailed description\"\n                    },\n                    \"root_field_name\": {\n                        \"description\": \"Root field name for the native query\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"root_field_name\",\n                    \"code\",\n                    \"returns\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CockroachNullableScalarType\": {\n                \"description\": \"A scalar type that can be nullable with an optional description\",\n                \"properties\": {\n                    \"description\": {\n                        \"description\": \"Optional description text which appears in the GraphQL Schema\",\n                        \"type\": \"string\"\n                    },\n                    \"nullable\": {\n                        \"default\": false,\n                        \"description\": \"Whether the type is nullable\",\n                        \"type\": \"boolean\"\n                    },\n                    \"type\": {\n                        \"description\": \"The base scalar type\\nPostgres Scalar Types\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"type\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CockroachObjRelRemoteTableMultipleColumns\": {\n                \"properties\": {\n                    \"columns\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"table\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/PostgresQualified_TableName\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"table\",\n                    \"columns\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CockroachObjRelRemoteTableSingleColumn\": {\n                \"properties\": {\n                    \"column\": {\n                        \"type\": \"string\"\n                    },\n                    \"table\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/PostgresQualified_TableName\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"table\",\n                    \"column\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CockroachRUManual\": {\n                \"properties\": {\n                    \"manual_configuration\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/CockroachRelManualTableConfig\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/CockroachRelManualNativeQueryConfig\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"manual_configuration\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CockroachRelManualNativeQueryConfig\": {\n                \"properties\": {\n                    \"column_mapping\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"additionalProperties\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"object\"\n                            },\n                            {\n                                \"additionalProperties\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"object\"\n                            }\n                        ]\n                    },\n                    \"insertion_order\": {\n                        \"enum\": [\n                            \"before_parent\",\n                            \"after_parent\"\n                        ],\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"remote_native_query\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"remote_native_query\",\n                    \"column_mapping\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CockroachRelManualTableConfig\": {\n                \"properties\": {\n                    \"column_mapping\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"additionalProperties\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"object\"\n                            },\n                            {\n                                \"additionalProperties\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"object\"\n                            }\n                        ]\n                    },\n                    \"insertion_order\": {\n                        \"enum\": [\n                            \"before_parent\",\n                            \"after_parent\"\n                        ],\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"remote_table\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/PostgresQualified_TableName\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"remote_table\",\n                    \"column_mapping\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CockroachSelPerm\": {\n                \"properties\": {\n                    \"allow_aggregations\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"columns\": {\n                        \"oneOf\": [\n                            {\n                                \"enum\": [\n                                    \"*\"\n                                ],\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"items\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"array\"\n                            }\n                        ]\n                    },\n                    \"computed_fields\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"filter\": {\n                        \"$ref\": \"#/components/schemas/CockroachBoolExp\"\n                    },\n                    \"limit\": {\n                        \"maximum\": 9223372036854775807,\n                        \"minimum\": -9223372036854775808,\n                        \"type\": \"number\"\n                    },\n                    \"query_root_fields\": {\n                        \"default\": null,\n                        \"items\": {\n                            \"enum\": [\n                                \"select\",\n                                \"select_by_pk\",\n                                \"select_aggregate\"\n                            ],\n                            \"type\": \"string\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    },\n                    \"subscription_root_fields\": {\n                        \"default\": null,\n                        \"items\": {\n                            \"enum\": [\n                                \"select\",\n                                \"select_by_pk\",\n                                \"select_aggregate\",\n                                \"select_stream\"\n                            ],\n                            \"type\": \"string\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"columns\",\n                    \"filter\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CockroachSelectPermDef\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"permission\": {\n                        \"$ref\": \"#/components/schemas/CockroachSelPerm\"\n                    },\n                    \"role\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"role\",\n                    \"permission\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CockroachSourceMetadata\": {\n                \"properties\": {\n                    \"configuration\": {\n                        \"$ref\": \"#/components/schemas/PostgresConnConfiguration\"\n                    },\n                    \"customization\": {\n                        \"$ref\": \"#/components/schemas/SourceCustomization\"\n                    },\n                    \"functions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/CockroachFunctionMetadata\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    },\n                    \"health_check\": {\n                        \"$ref\": \"#/components/schemas/CockroachHealthCheckConfig\"\n                    },\n                    \"kind\": {\n                        \"enum\": [\n                            \"cockroach\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"logical_models\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/CockroachLogicalModelMetadata\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"native_queries\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/CockroachNativeQueryMetadata\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    },\n                    \"query_tags\": {\n                        \"$ref\": \"#/components/schemas/QueryTagsConfig\"\n                    },\n                    \"stored_procedures\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/CockroachStoredProcedureMetadata\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    },\n                    \"tables\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/CockroachTableMetadata\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"kind\",\n                    \"tables\",\n                    \"configuration\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CockroachStoredProcedureMetadata\": {\n                \"description\": \"A stored procedure as represented in metadata.\",\n                \"properties\": {\n                    \"arguments\": {\n                        \"additionalProperties\": {\n                            \"$ref\": \"#/components/schemas/CockroachNullableScalarType\"\n                        },\n                        \"default\": {},\n                        \"description\": \"Free variables in the expression and their types\",\n                        \"type\": \"object\"\n                    },\n                    \"configuration\": {\n                        \"$ref\": \"#/components/schemas/StoredProcedureConfig\"\n                    },\n                    \"description\": {\n                        \"description\": \"A description of the stored procedure which appears in the graphql schema\",\n                        \"type\": \"string\"\n                    },\n                    \"returns\": {\n                        \"description\": \"Return type (table) of the expression\",\n                        \"type\": \"string\"\n                    },\n                    \"stored_procedure\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/PostgresQualified_FunctionName\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ],\n                        \"description\": \"The name of the SQL stored procedure\"\n                    }\n                },\n                \"required\": [\n                    \"stored_procedure\",\n                    \"configuration\",\n                    \"returns\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CockroachSubscribeOpSpec\": {\n                \"properties\": {\n                    \"columns\": {\n                        \"oneOf\": [\n                            {\n                                \"enum\": [\n                                    \"*\"\n                                ],\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"items\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"array\"\n                            }\n                        ]\n                    },\n                    \"payload\": {\n                        \"oneOf\": [\n                            {\n                                \"enum\": [\n                                    \"*\"\n                                ],\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"items\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"array\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"columns\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CockroachTableConfig\": {\n                \"properties\": {\n                    \"column_config\": {\n                        \"additionalProperties\": {\n                            \"$ref\": \"#/components/schemas/ColumnConfig\"\n                        },\n                        \"default\": {},\n                        \"type\": \"object\"\n                    },\n                    \"comment\": {\n                        \"default\": null,\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"custom_column_names\": {\n                        \"additionalProperties\": {\n                            \"$ref\": \"#/components/schemas/GraphQLName\"\n                        },\n                        \"default\": {},\n                        \"type\": \"object\"\n                    },\n                    \"custom_name\": {\n                        \"$ref\": \"#/components/schemas/GraphQLName\"\n                    },\n                    \"custom_root_fields\": {\n                        \"$ref\": \"#/components/schemas/TableCustomRootFields\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"CockroachTableMetadata\": {\n                \"description\": \"Representation of a table in metadata, 'tables.yaml' and 'metadata.json'\",\n                \"properties\": {\n                    \"apollo_federation_config\": {\n                        \"$ref\": \"#/components/schemas/ApolloFederationConfig\"\n                    },\n                    \"array_relationships\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/RelDef_RelUsing___Postgres__Cockroach___ArrRelUsingFKeyOn___Postgres__Cockroach__\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"computed_fields\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/CockroachComputedFieldMetadata\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"configuration\": {\n                        \"$ref\": \"#/components/schemas/CockroachTableConfig\"\n                    },\n                    \"delete_permissions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/CockroachDeletePermDef\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"event_triggers\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/CockroachEventTriggerConfEventTriggerConf\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"insert_permissions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/CockroachInsertPermDef\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"is_enum\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"logical_model\": {\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"object_relationships\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/RelDef_RelUsing___Postgres__Cockroach___ObjRelUsingChoice___Postgres__Cockroach__\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"remote_relationships\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/RemoteRelationship_RemoteRelationshipDefinition\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"select_permissions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/CockroachSelectPermDef\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"table\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/PostgresQualified_TableName\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ]\n                    },\n                    \"update_permissions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/CockroachUpdatePermDef\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"table\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CockroachTriggerOpsDef\": {\n                \"properties\": {\n                    \"delete\": {\n                        \"$ref\": \"#/components/schemas/CockroachSubscribeOpSpec\"\n                    },\n                    \"enable_manual\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"insert\": {\n                        \"$ref\": \"#/components/schemas/CockroachSubscribeOpSpec\"\n                    },\n                    \"update\": {\n                        \"$ref\": \"#/components/schemas/CockroachSubscribeOpSpec\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"CockroachUpdPerm\": {\n                \"properties\": {\n                    \"backend_only\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"check\": {\n                        \"$ref\": \"#/components/schemas/CockroachBoolExp\"\n                    },\n                    \"columns\": {\n                        \"description\": \"Allowed columns\",\n                        \"oneOf\": [\n                            {\n                                \"enum\": [\n                                    \"*\"\n                                ],\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"items\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"array\"\n                            }\n                        ]\n                    },\n                    \"filter\": {\n                        \"$ref\": \"#/components/schemas/CockroachBoolExp\"\n                    },\n                    \"set\": {\n                        \"additionalProperties\": {\n                            \"additionalProperties\": true\n                        },\n                        \"description\": \"Preset columns\",\n                        \"type\": \"object\"\n                    },\n                    \"validate_input\": {\n                        \"$ref\": \"#/components/schemas/ValidateInputInputWebhook\"\n                    }\n                },\n                \"required\": [\n                    \"columns\",\n                    \"filter\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CockroachUpdatePermDef\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"permission\": {\n                        \"$ref\": \"#/components/schemas/CockroachUpdPerm\"\n                    },\n                    \"role\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"role\",\n                    \"permission\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CollectionDef\": {\n                \"properties\": {\n                    \"queries\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ListedQuery\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"queries\"\n                ],\n                \"type\": \"object\"\n            },\n            \"ColumnConfig\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"default\": null,\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"custom_name\": {\n                        \"$ref\": \"#/components/schemas/GraphQLName\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"Config\": {\n                \"additionalProperties\": {\n                    \"additionalProperties\": true\n                },\n                \"type\": \"object\"\n            },\n            \"ConnectionTemplate\": {\n                \"description\": \"https://hasura.io/docs/latest/graphql/core/api-reference/syntax-defs.html#pgconnectiontemplate\",\n                \"nullable\": true,\n                \"properties\": {\n                    \"template\": {\n                        \"additionalProperties\": true,\n                        \"description\": \"Connection kriti template (read more in the docs)\\nKritiTemplate\"\n                    },\n                    \"version\": {\n                        \"default\": 1,\n                        \"description\": \"Optional connection template version (supported versions: [1], default: 1)\",\n                        \"maximum\": 9223372036854775807,\n                        \"minimum\": -9223372036854775808,\n                        \"type\": \"number\"\n                    }\n                },\n                \"required\": [\n                    \"template\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CreateCollection\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"type\": \"string\"\n                    },\n                    \"definition\": {\n                        \"$ref\": \"#/components/schemas/CollectionDef\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"definition\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CronSchedule\": {\n                \"type\": \"string\"\n            },\n            \"CronTriggerMetadata\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"type\": \"string\"\n                    },\n                    \"headers\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"oneOf\": [\n                                {\n                                    \"$ref\": \"#/components/schemas/HeaderConfValue\"\n                                },\n                                {\n                                    \"$ref\": \"#/components/schemas/HeaderConfFromEnv\"\n                                }\n                            ]\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"include_in_metadata\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"payload\": {\n                        \"additionalProperties\": true\n                    },\n                    \"request_transform\": {\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/RequestTransformV1\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/RequestTransformV2\"\n                            }\n                        ]\n                    },\n                    \"response_transform\": {\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/ResponseTransformV1\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/ResponseTransformV2\"\n                            }\n                        ]\n                    },\n                    \"retry_conf\": {\n                        \"$ref\": \"#/components/schemas/STRetryConf\"\n                    },\n                    \"schedule\": {\n                        \"$ref\": \"#/components/schemas/CronSchedule\"\n                    },\n                    \"webhook\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"webhook\",\n                    \"schedule\",\n                    \"include_in_metadata\"\n                ],\n                \"type\": \"object\"\n            },\n            \"CustomRootField\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"default\": null,\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"$ref\": \"#/components/schemas/GraphQLName\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"CustomTypes\": {\n                \"properties\": {\n                    \"enums\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/EnumTypeDefinition\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"input_objects\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/InputObjectTypeDefinition\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"objects\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ObjectTypeDefinition\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"scalars\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ScalarTypeDefinition\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"DataConnectorConnSourceConfig\": {\n                \"properties\": {\n                    \"template\": {\n                        \"type\": \"string\"\n                    },\n                    \"template_variables\": {\n                        \"additionalProperties\": {\n                            \"$ref\": \"#/components/schemas/TemplateVariableSource\"\n                        },\n                        \"type\": \"object\"\n                    },\n                    \"timeout\": {\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/DataConnectorSourceTimeoutSeconds\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/DataConnectorSourceTimeoutMilliseconds\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/DataConnectorSourceTimeoutMicroseconds\"\n                            }\n                        ]\n                    },\n                    \"value\": {\n                        \"$ref\": \"#/components/schemas/Config\"\n                    }\n                },\n                \"required\": [\n                    \"value\"\n                ],\n                \"type\": \"object\"\n            },\n            \"DataConnectorOptions\": {\n                \"properties\": {\n                    \"display_name\": {\n                        \"type\": \"string\"\n                    },\n                    \"uri\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/FromEnv\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"uri\"\n                ],\n                \"type\": \"object\"\n            },\n            \"DataConnectorSourceTimeoutMicroseconds\": {\n                \"properties\": {\n                    \"microseconds\": {\n                        \"type\": \"number\"\n                    }\n                },\n                \"required\": [\n                    \"microseconds\"\n                ],\n                \"type\": \"object\"\n            },\n            \"DataConnectorSourceTimeoutMilliseconds\": {\n                \"properties\": {\n                    \"milliseconds\": {\n                        \"type\": \"number\"\n                    }\n                },\n                \"required\": [\n                    \"milliseconds\"\n                ],\n                \"type\": \"object\"\n            },\n            \"DataConnectorSourceTimeoutSeconds\": {\n                \"properties\": {\n                    \"seconds\": {\n                        \"type\": \"number\"\n                    }\n                },\n                \"required\": [\n                    \"seconds\"\n                ],\n                \"type\": \"object\"\n            },\n            \"DataconnectorArrRelUsingFKeyOnMultipleColumns\": {\n                \"properties\": {\n                    \"columns\": {\n                        \"items\": {\n                            \"oneOf\": [\n                                {\n                                    \"items\": {\n                                        \"type\": \"string\"\n                                    },\n                                    \"type\": \"array\"\n                                },\n                                {\n                                    \"type\": \"string\"\n                                }\n                            ]\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"table\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"table\",\n                    \"columns\"\n                ],\n                \"type\": \"object\"\n            },\n            \"DataconnectorArrRelUsingFKeyOnSingleColumn\": {\n                \"properties\": {\n                    \"column\": {\n                        \"oneOf\": [\n                            {\n                                \"items\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"array\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ]\n                    },\n                    \"table\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"table\",\n                    \"column\"\n                ],\n                \"type\": \"object\"\n            },\n            \"DataconnectorBoolExp\": {\n                \"additionalProperties\": true\n            },\n            \"DataconnectorComputedFieldMetadata\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"default\": null,\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"definition\": {\n                        \"items\": {\n                            \"type\": \"null\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"definition\"\n                ],\n                \"type\": \"object\"\n            },\n            \"DataconnectorDelPerm\": {\n                \"properties\": {\n                    \"backend_only\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"filter\": {\n                        \"$ref\": \"#/components/schemas/DataconnectorBoolExp\"\n                    },\n                    \"validate_input\": {\n                        \"$ref\": \"#/components/schemas/ValidateInputInputWebhook\"\n                    }\n                },\n                \"required\": [\n                    \"filter\"\n                ],\n                \"type\": \"object\"\n            },\n            \"DataconnectorDeletePermDef\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"permission\": {\n                        \"$ref\": \"#/components/schemas/DataconnectorDelPerm\"\n                    },\n                    \"role\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"role\",\n                    \"permission\"\n                ],\n                \"type\": \"object\"\n            },\n            \"DataconnectorFunctionMetadata\": {\n                \"description\": \"A custom SQL function to add to the GraphQL schema with configuration.\\n\\nhttps://hasura.io/docs/latest/graphql/core/api-reference/schema-metadata-api/custom-functions.html#args-syntax\\n\",\n                \"properties\": {\n                    \"comment\": {\n                        \"type\": \"string\"\n                    },\n                    \"configuration\": {\n                        \"$ref\": \"#/components/schemas/FunctionConfig\"\n                    },\n                    \"function\": {\n                        \"description\": \"Name of the SQL function\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"permissions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/FunctionPermissionInfo\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"function\"\n                ],\n                \"type\": \"object\"\n            },\n            \"DataconnectorInsPerm\": {\n                \"properties\": {\n                    \"backend_only\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"check\": {\n                        \"$ref\": \"#/components/schemas/DataconnectorBoolExp\"\n                    },\n                    \"columns\": {\n                        \"oneOf\": [\n                            {\n                                \"enum\": [\n                                    \"*\"\n                                ],\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"items\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"array\"\n                            }\n                        ]\n                    },\n                    \"set\": {\n                        \"additionalProperties\": {\n                            \"additionalProperties\": true\n                        },\n                        \"type\": \"object\"\n                    },\n                    \"validate_input\": {\n                        \"$ref\": \"#/components/schemas/ValidateInputInputWebhook\"\n                    }\n                },\n                \"required\": [\n                    \"check\"\n                ],\n                \"type\": \"object\"\n            },\n            \"DataconnectorInsertPermDef\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"permission\": {\n                        \"$ref\": \"#/components/schemas/DataconnectorInsPerm\"\n                    },\n                    \"role\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"role\",\n                    \"permission\"\n                ],\n                \"type\": \"object\"\n            },\n            \"DataconnectorLogicalModelField\": {\n                \"description\": \"A field of a logical model\",\n                \"properties\": {\n                    \"description\": {\n                        \"description\": \"Optional description of this field\",\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"description\": \"Name of the field\",\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"additionalProperties\": true,\n                        \"description\": \"Type of the field\\nA type used in a Logical Model field\\nvalue with unspecified type - this is a placeholder that will eventually be replaced with a more detailed description\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"type\"\n                ],\n                \"type\": \"object\"\n            },\n            \"DataconnectorLogicalModelMetadata\": {\n                \"description\": \"A return type.\",\n                \"properties\": {\n                    \"description\": {\n                        \"description\": \"Optional description text which appears in the GraphQL Schema.\",\n                        \"type\": \"string\"\n                    },\n                    \"fields\": {\n                        \"description\": \"Return types for the logical model\",\n                        \"items\": {\n                            \"additionalProperties\": true,\n                            \"anyOf\": [\n                                {\n                                    \"$ref\": \"#/components/schemas/DataconnectorLogicalModelField\"\n                                },\n                                {\n                                    \"$ref\": \"#/components/schemas/DataconnectorLogicalModelField\"\n                                }\n                            ]\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"name\": {\n                        \"description\": \"A name for a logical model\",\n                        \"type\": \"string\"\n                    },\n                    \"select_permissions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/DataconnectorSelectPermDef\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"fields\"\n                ],\n                \"type\": \"object\"\n            },\n            \"DataconnectorNativeQueryMetadata\": {\n                \"description\": \"A native query as represented in metadata.\",\n                \"properties\": {\n                    \"arguments\": {\n                        \"additionalProperties\": {\n                            \"$ref\": \"#/components/schemas/DataconnectorNullableScalarType\"\n                        },\n                        \"default\": {},\n                        \"description\": \"Free variables in the expression and their types\",\n                        \"type\": \"object\"\n                    },\n                    \"array_relationships\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/RelDef_RelManualConfig__DataConnector\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"code\": {\n                        \"description\": \"Native code expression (SQL) to run\\nAn interpolated query expressed in native code (SQL)\",\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"description\": \"A description of the native query which appears in the graphql schema\",\n                        \"type\": \"string\"\n                    },\n                    \"object_relationships\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/RelDef_RelManualConfig__DataConnector\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"returns\": {\n                        \"additionalProperties\": true,\n                        \"description\": \"Return type (table) of the expression\\nA name or definition of a Logical Model\\nvalue with unspecified type - this is a placeholder that will eventually be replaced with a more detailed description\"\n                    },\n                    \"root_field_name\": {\n                        \"description\": \"Root field name for the native query\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"root_field_name\",\n                    \"code\",\n                    \"returns\"\n                ],\n                \"type\": \"object\"\n            },\n            \"DataconnectorNullableScalarType\": {\n                \"description\": \"A scalar type that can be nullable with an optional description\",\n                \"properties\": {\n                    \"description\": {\n                        \"description\": \"Optional description text which appears in the GraphQL Schema\",\n                        \"type\": \"string\"\n                    },\n                    \"nullable\": {\n                        \"default\": false,\n                        \"description\": \"Whether the type is nullable\",\n                        \"type\": \"boolean\"\n                    },\n                    \"type\": {\n                        \"$ref\": \"#/components/schemas/ScalarType\"\n                    }\n                },\n                \"required\": [\n                    \"type\"\n                ],\n                \"type\": \"object\"\n            },\n            \"DataconnectorObjRelRemoteTableMultipleColumns\": {\n                \"properties\": {\n                    \"columns\": {\n                        \"items\": {\n                            \"oneOf\": [\n                                {\n                                    \"items\": {\n                                        \"type\": \"string\"\n                                    },\n                                    \"type\": \"array\"\n                                },\n                                {\n                                    \"type\": \"string\"\n                                }\n                            ]\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"table\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"table\",\n                    \"columns\"\n                ],\n                \"type\": \"object\"\n            },\n            \"DataconnectorObjRelRemoteTableSingleColumn\": {\n                \"properties\": {\n                    \"column\": {\n                        \"oneOf\": [\n                            {\n                                \"items\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"array\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ]\n                    },\n                    \"table\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"table\",\n                    \"column\"\n                ],\n                \"type\": \"object\"\n            },\n            \"DataconnectorRUManual\": {\n                \"properties\": {\n                    \"manual_configuration\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/DataconnectorRelManualTableConfig\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/DataconnectorRelManualNativeQueryConfig\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"manual_configuration\"\n                ],\n                \"type\": \"object\"\n            },\n            \"DataconnectorRelManualNativeQueryConfig\": {\n                \"properties\": {\n                    \"column_mapping\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"additionalProperties\": {\n                                    \"oneOf\": [\n                                        {\n                                            \"items\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"type\": \"array\"\n                                        },\n                                        {\n                                            \"type\": \"string\"\n                                        }\n                                    ]\n                                },\n                                \"type\": \"object\"\n                            },\n                            {\n                                \"additionalProperties\": {\n                                    \"oneOf\": [\n                                        {\n                                            \"items\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"type\": \"array\"\n                                        },\n                                        {\n                                            \"type\": \"string\"\n                                        }\n                                    ]\n                                },\n                                \"type\": \"object\"\n                            }\n                        ]\n                    },\n                    \"insertion_order\": {\n                        \"enum\": [\n                            \"before_parent\",\n                            \"after_parent\"\n                        ],\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"remote_native_query\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"remote_native_query\",\n                    \"column_mapping\"\n                ],\n                \"type\": \"object\"\n            },\n            \"DataconnectorRelManualTableConfig\": {\n                \"properties\": {\n                    \"column_mapping\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"additionalProperties\": {\n                                    \"oneOf\": [\n                                        {\n                                            \"items\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"type\": \"array\"\n                                        },\n                                        {\n                                            \"type\": \"string\"\n                                        }\n                                    ]\n                                },\n                                \"type\": \"object\"\n                            },\n                            {\n                                \"additionalProperties\": {\n                                    \"oneOf\": [\n                                        {\n                                            \"items\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"type\": \"array\"\n                                        },\n                                        {\n                                            \"type\": \"string\"\n                                        }\n                                    ]\n                                },\n                                \"type\": \"object\"\n                            }\n                        ]\n                    },\n                    \"insertion_order\": {\n                        \"enum\": [\n                            \"before_parent\",\n                            \"after_parent\"\n                        ],\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"remote_table\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"remote_table\",\n                    \"column_mapping\"\n                ],\n                \"type\": \"object\"\n            },\n            \"DataconnectorSelPerm\": {\n                \"properties\": {\n                    \"allow_aggregations\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"columns\": {\n                        \"oneOf\": [\n                            {\n                                \"enum\": [\n                                    \"*\"\n                                ],\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"items\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"array\"\n                            }\n                        ]\n                    },\n                    \"computed_fields\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"filter\": {\n                        \"$ref\": \"#/components/schemas/DataconnectorBoolExp\"\n                    },\n                    \"limit\": {\n                        \"maximum\": 9223372036854775807,\n                        \"minimum\": -9223372036854775808,\n                        \"type\": \"number\"\n                    },\n                    \"query_root_fields\": {\n                        \"default\": null,\n                        \"items\": {\n                            \"enum\": [\n                                \"select\",\n                                \"select_by_pk\",\n                                \"select_aggregate\"\n                            ],\n                            \"type\": \"string\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    },\n                    \"subscription_root_fields\": {\n                        \"default\": null,\n                        \"items\": {\n                            \"enum\": [\n                                \"select\",\n                                \"select_by_pk\",\n                                \"select_aggregate\",\n                                \"select_stream\"\n                            ],\n                            \"type\": \"string\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"columns\",\n                    \"filter\"\n                ],\n                \"type\": \"object\"\n            },\n            \"DataconnectorSelectPermDef\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"permission\": {\n                        \"$ref\": \"#/components/schemas/DataconnectorSelPerm\"\n                    },\n                    \"role\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"role\",\n                    \"permission\"\n                ],\n                \"type\": \"object\"\n            },\n            \"DataconnectorSourceMetadata\": {\n                \"properties\": {\n                    \"configuration\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/DataConnectorConnSourceConfig\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/Config\"\n                            }\n                        ]\n                    },\n                    \"customization\": {\n                        \"$ref\": \"#/components/schemas/SourceCustomization\"\n                    },\n                    \"functions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/DataconnectorFunctionMetadata\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    },\n                    \"kind\": {\n                        \"$ref\": \"#/components/schemas/GraphQLName\"\n                    },\n                    \"logical_models\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/DataconnectorLogicalModelMetadata\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"native_queries\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/DataconnectorNativeQueryMetadata\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    },\n                    \"query_tags\": {\n                        \"$ref\": \"#/components/schemas/QueryTagsConfig\"\n                    },\n                    \"stored_procedures\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/DataconnectorStoredProcedureMetadata\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    },\n                    \"tables\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/DataconnectorTableMetadata\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"kind\",\n                    \"tables\",\n                    \"configuration\"\n                ],\n                \"type\": \"object\"\n            },\n            \"DataconnectorStoredProcedureMetadata\": {\n                \"description\": \"A stored procedure as represented in metadata.\",\n                \"properties\": {\n                    \"arguments\": {\n                        \"additionalProperties\": {\n                            \"$ref\": \"#/components/schemas/DataconnectorNullableScalarType\"\n                        },\n                        \"default\": {},\n                        \"description\": \"Free variables in the expression and their types\",\n                        \"type\": \"object\"\n                    },\n                    \"configuration\": {\n                        \"$ref\": \"#/components/schemas/StoredProcedureConfig\"\n                    },\n                    \"description\": {\n                        \"description\": \"A description of the stored procedure which appears in the graphql schema\",\n                        \"type\": \"string\"\n                    },\n                    \"returns\": {\n                        \"description\": \"Return type (table) of the expression\",\n                        \"type\": \"string\"\n                    },\n                    \"stored_procedure\": {\n                        \"description\": \"The name of the SQL stored procedure\",\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"stored_procedure\",\n                    \"configuration\",\n                    \"returns\"\n                ],\n                \"type\": \"object\"\n            },\n            \"DataconnectorTableConfig\": {\n                \"properties\": {\n                    \"column_config\": {\n                        \"additionalProperties\": {\n                            \"$ref\": \"#/components/schemas/ColumnConfig\"\n                        },\n                        \"default\": {},\n                        \"type\": \"object\"\n                    },\n                    \"comment\": {\n                        \"default\": null,\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"custom_column_names\": {\n                        \"additionalProperties\": {\n                            \"$ref\": \"#/components/schemas/GraphQLName\"\n                        },\n                        \"default\": {},\n                        \"type\": \"object\"\n                    },\n                    \"custom_name\": {\n                        \"$ref\": \"#/components/schemas/GraphQLName\"\n                    },\n                    \"custom_root_fields\": {\n                        \"$ref\": \"#/components/schemas/TableCustomRootFields\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"DataconnectorTableMetadata\": {\n                \"description\": \"Representation of a table in metadata, 'tables.yaml' and 'metadata.json'\",\n                \"properties\": {\n                    \"apollo_federation_config\": {\n                        \"$ref\": \"#/components/schemas/ApolloFederationConfig\"\n                    },\n                    \"array_relationships\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/RelDef_RelUsing__DataConnector__ArrRelUsingFKeyOn__DataConnector_\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"computed_fields\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/DataconnectorComputedFieldMetadata\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"configuration\": {\n                        \"$ref\": \"#/components/schemas/DataconnectorTableConfig\"\n                    },\n                    \"delete_permissions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/DataconnectorDeletePermDef\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"insert_permissions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/DataconnectorInsertPermDef\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"is_enum\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"logical_model\": {\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"object_relationships\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/RelDef_RelUsing__DataConnector__ObjRelUsingChoice__DataConnector_\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"remote_relationships\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/RemoteRelationship_RemoteRelationshipDefinition\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"select_permissions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/DataconnectorSelectPermDef\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"table\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"update_permissions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/DataconnectorUpdatePermDef\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"table\"\n                ],\n                \"type\": \"object\"\n            },\n            \"DataconnectorUpdPerm\": {\n                \"properties\": {\n                    \"backend_only\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"check\": {\n                        \"$ref\": \"#/components/schemas/DataconnectorBoolExp\"\n                    },\n                    \"columns\": {\n                        \"description\": \"Allowed columns\",\n                        \"oneOf\": [\n                            {\n                                \"enum\": [\n                                    \"*\"\n                                ],\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"items\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"array\"\n                            }\n                        ]\n                    },\n                    \"filter\": {\n                        \"$ref\": \"#/components/schemas/DataconnectorBoolExp\"\n                    },\n                    \"set\": {\n                        \"additionalProperties\": {\n                            \"additionalProperties\": true\n                        },\n                        \"description\": \"Preset columns\",\n                        \"type\": \"object\"\n                    },\n                    \"validate_input\": {\n                        \"$ref\": \"#/components/schemas/ValidateInputInputWebhook\"\n                    }\n                },\n                \"required\": [\n                    \"columns\",\n                    \"filter\"\n                ],\n                \"type\": \"object\"\n            },\n            \"DataconnectorUpdatePermDef\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"permission\": {\n                        \"$ref\": \"#/components/schemas/DataconnectorUpdPerm\"\n                    },\n                    \"role\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"role\",\n                    \"permission\"\n                ],\n                \"type\": \"object\"\n            },\n            \"EndpointDef_QueryReference\": {\n                \"properties\": {\n                    \"query\": {\n                        \"$ref\": \"#/components/schemas/QueryReference\"\n                    }\n                },\n                \"required\": [\n                    \"query\"\n                ],\n                \"type\": \"object\"\n            },\n            \"EndpointMetadata_QueryReference\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"type\": \"string\"\n                    },\n                    \"definition\": {\n                        \"$ref\": \"#/components/schemas/EndpointDef_QueryReference\"\n                    },\n                    \"methods\": {\n                        \"items\": {\n                            \"enum\": [\n                                \"GET\",\n                                \"POST\",\n                                \"PUT\",\n                                \"DELETE\",\n                                \"PATCH\"\n                            ],\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"url\",\n                    \"methods\",\n                    \"definition\"\n                ],\n                \"type\": \"object\"\n            },\n            \"EnumTypeDefinition\": {\n                \"properties\": {\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"$ref\": \"#/components/schemas/GraphQLName\"\n                    },\n                    \"values\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/EnumValueDefinition\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"values\"\n                ],\n                \"type\": \"object\"\n            },\n            \"EnumValueDefinition\": {\n                \"properties\": {\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"is_deprecated\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"value\": {\n                        \"$ref\": \"#/components/schemas/GraphQLName\"\n                    }\n                },\n                \"required\": [\n                    \"value\"\n                ],\n                \"type\": \"object\"\n            },\n            \"ExtensionsSchema\": {\n                \"type\": \"string\"\n            },\n            \"FieldCall\": {\n                \"properties\": {\n                    \"arguments\": {\n                        \"$ref\": \"#/components/schemas/RemoteArguments\"\n                    },\n                    \"field\": {\n                        \"$ref\": \"#/components/schemas/RemoteFields\"\n                    }\n                },\n                \"required\": [\n                    \"arguments\"\n                ],\n                \"type\": \"object\"\n            },\n            \"FromEnv\": {\n                \"properties\": {\n                    \"from_env\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"from_env\"\n                ],\n                \"type\": \"object\"\n            },\n            \"FunctionConfig\": {\n                \"properties\": {\n                    \"custom_name\": {\n                        \"$ref\": \"#/components/schemas/GraphQLName\"\n                    },\n                    \"custom_root_fields\": {\n                        \"$ref\": \"#/components/schemas/FunctionCustomRootFields\"\n                    },\n                    \"exposed_as\": {\n                        \"enum\": [\n                            \"query\",\n                            \"mutation\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"response\": {\n                        \"additionalProperties\": true\n                    },\n                    \"session_argument\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"FunctionCustomRootFields\": {\n                \"properties\": {\n                    \"function\": {\n                        \"$ref\": \"#/components/schemas/GraphQLName\"\n                    },\n                    \"function_aggregate\": {\n                        \"$ref\": \"#/components/schemas/GraphQLName\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"FunctionPermissionInfo\": {\n                \"properties\": {\n                    \"role\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"role\"\n                ],\n                \"type\": \"object\"\n            },\n            \"FunctionReturnType\": {\n                \"discriminator\": {\n                    \"mapping\": {\n                        \"inferred\": \"InferredFunctionResponse\",\n                        \"table\": \"TableFunctionResponse\"\n                    },\n                    \"propertyName\": \"type\"\n                },\n                \"oneOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/TableFunctionResponse\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/InferredFunctionResponse\"\n                    }\n                ]\n            },\n            \"GraphQLName\": {\n                \"type\": \"string\"\n            },\n            \"GraphQLSchema\": {\n                \"type\": \"string\"\n            },\n            \"GraphQLValue_Name\": {\n                \"additionalProperties\": true,\n                \"anyOf\": [\n                    {\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"type\": \"null\"\n                    },\n                    {\n                        \"type\": \"number\"\n                    },\n                    {\n                        \"type\": \"number\"\n                    },\n                    {\n                        \"type\": \"string\"\n                    },\n                    {\n                        \"type\": \"boolean\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/GraphQLName\"\n                    },\n                    {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/GraphQLValue_Name\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    {\n                        \"additionalProperties\": {\n                            \"$ref\": \"#/components/schemas/GraphQLValue_Name\"\n                        },\n                        \"type\": \"object\"\n                    },\n                    {\n                        \"type\": \"null\"\n                    }\n                ]\n            },\n            \"HeaderConfFromEnv\": {\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"value_from_env\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"value_from_env\"\n                ],\n                \"type\": \"object\"\n            },\n            \"HeaderConfValue\": {\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"value\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"value\"\n                ],\n                \"type\": \"object\"\n            },\n            \"HealthCheckTestSql\": {\n                \"properties\": {\n                    \"sql\": {\n                        \"default\": \"SELECT 1\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"InferredFunctionResponse\": {\n                \"properties\": {\n                    \"type\": {\n                        \"enum\": [\n                            \"inferred\"\n                        ],\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"type\"\n                ],\n                \"type\": \"object\"\n            },\n            \"InputObjectFieldDefinition\": {\n                \"properties\": {\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"type\"\n                ],\n                \"type\": \"object\"\n            },\n            \"InputObjectTypeDefinition\": {\n                \"properties\": {\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"fields\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/InputObjectFieldDefinition\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"fields\"\n                ],\n                \"type\": \"object\"\n            },\n            \"Limit_MaxBatchSize\": {\n                \"properties\": {\n                    \"global\": {\n                        \"maximum\": 9223372036854775807,\n                        \"minimum\": 0,\n                        \"type\": \"number\"\n                    },\n                    \"per_role\": {\n                        \"additionalProperties\": {\n                            \"maximum\": 9223372036854775807,\n                            \"minimum\": 0,\n                            \"type\": \"number\"\n                        },\n                        \"default\": {},\n                        \"type\": \"object\"\n                    }\n                },\n                \"required\": [\n                    \"global\"\n                ],\n                \"type\": \"object\"\n            },\n            \"Limit_MaxDepth\": {\n                \"properties\": {\n                    \"global\": {\n                        \"maximum\": 9223372036854775807,\n                        \"minimum\": 0,\n                        \"type\": \"number\"\n                    },\n                    \"per_role\": {\n                        \"additionalProperties\": {\n                            \"maximum\": 9223372036854775807,\n                            \"minimum\": 0,\n                            \"type\": \"number\"\n                        },\n                        \"default\": {},\n                        \"type\": \"object\"\n                    }\n                },\n                \"required\": [\n                    \"global\"\n                ],\n                \"type\": \"object\"\n            },\n            \"Limit_MaxNodes\": {\n                \"properties\": {\n                    \"global\": {\n                        \"maximum\": 9223372036854775807,\n                        \"minimum\": 0,\n                        \"type\": \"number\"\n                    },\n                    \"per_role\": {\n                        \"additionalProperties\": {\n                            \"maximum\": 9223372036854775807,\n                            \"minimum\": 0,\n                            \"type\": \"number\"\n                        },\n                        \"default\": {},\n                        \"type\": \"object\"\n                    }\n                },\n                \"required\": [\n                    \"global\"\n                ],\n                \"type\": \"object\"\n            },\n            \"Limit_MaxTime\": {\n                \"properties\": {\n                    \"global\": {\n                        \"maximum\": 1.79769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137216e308,\n                        \"minimum\": 0,\n                        \"type\": \"number\"\n                    },\n                    \"per_role\": {\n                        \"additionalProperties\": {\n                            \"maximum\": 1.79769313486231590772930519078902473361797697894230657273430081157732675805500963132708477322407536021120113879871393357658789768814416622492847430639474124377767893424865485276302219601246094119453082952085005768838150682342462881473913110540827237163350510684586298239947245938479716304835356329624224137216e308,\n                            \"minimum\": 0,\n                            \"type\": \"number\"\n                        },\n                        \"default\": {},\n                        \"type\": \"object\"\n                    }\n                },\n                \"required\": [\n                    \"global\"\n                ],\n                \"type\": \"object\"\n            },\n            \"Limit_RateLimitConfig\": {\n                \"properties\": {\n                    \"global\": {\n                        \"$ref\": \"#/components/schemas/RateLimitConfig\"\n                    },\n                    \"per_role\": {\n                        \"additionalProperties\": {\n                            \"$ref\": \"#/components/schemas/RateLimitConfig\"\n                        },\n                        \"default\": {},\n                        \"type\": \"object\"\n                    }\n                },\n                \"required\": [\n                    \"global\"\n                ],\n                \"type\": \"object\"\n            },\n            \"ListedQuery\": {\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"query\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"query\"\n                ],\n                \"type\": \"object\"\n            },\n            \"MSSQLConnConfiguration\": {\n                \"properties\": {\n                    \"connection_info\": {\n                        \"$ref\": \"#/components/schemas/MSSQLConnectionInfo\"\n                    },\n                    \"read_replicas\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/MSSQLConnectionInfo\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"connection_info\"\n                ],\n                \"type\": \"object\"\n            },\n            \"MSSQLConnectionInfo\": {\n                \"properties\": {\n                    \"connection_string\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/FromEnv\"\n                            }\n                        ]\n                    },\n                    \"isolation_level\": {\n                        \"default\": \"read-committed\",\n                        \"description\": \"The transaction isolation level in which the queries made to the source will be run with (default: read-committed).\\nIsolation level\",\n                        \"type\": \"string\"\n                    },\n                    \"pool_settings\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"enum\": [\n                                    {\n                                        \"enable\": false\n                                    }\n                                ],\n                                \"type\": \"object\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/MSSQLPoolSettings\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"connection_string\",\n                    \"pool_settings\"\n                ],\n                \"type\": \"object\"\n            },\n            \"MSSQLFunctionName\": {\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"schema\": {\n                        \"default\": \"dbo\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\"\n                ],\n                \"type\": \"object\"\n            },\n            \"MSSQLPoolSettings\": {\n                \"properties\": {\n                    \"idle_timeout\": {\n                        \"default\": 5,\n                        \"maximum\": 9223372036854775807,\n                        \"minimum\": -9223372036854775808,\n                        \"type\": \"number\"\n                    },\n                    \"max_connections\": {\n                        \"default\": 50,\n                        \"maximum\": 9223372036854775807,\n                        \"minimum\": -9223372036854775808,\n                        \"nullable\": true,\n                        \"type\": \"number\"\n                    },\n                    \"total_max_connections\": {\n                        \"maximum\": 9223372036854775807,\n                        \"minimum\": -9223372036854775808,\n                        \"nullable\": true,\n                        \"type\": \"number\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"MSSQLTableName\": {\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"schema\": {\n                        \"default\": \"dbo\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\"\n                ],\n                \"type\": \"object\"\n            },\n            \"Metadata\": {\n                \"description\": \"configuration format for the Hasura GraphQL Engine\",\n                \"oneOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/MetadataV1\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/MetadataV2\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/MetadataV3\"\n                    }\n                ]\n            },\n            \"MetadataV1\": {\n                \"properties\": {\n                    \"functions\": {\n                        \"description\": \"user-defined SQL functions\\n\\n\\narray of values of unspecified type - this is a placeholder that will eventually be replaced with a more detailed description\",\n                        \"items\": {\n                            \"additionalProperties\": true\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"remote_schemas\": {\n                        \"description\": \"merge remote GraphQL schemas and provide a unified GraphQL API\\n\\n\\narray of values of unspecified type - this is a placeholder that will eventually be replaced with a more detailed description\",\n                        \"items\": {\n                            \"additionalProperties\": true\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"tables\": {\n                        \"description\": \"configured database tables\\n\\n\\narray of values of unspecified type - this is a placeholder that will eventually be replaced with a more detailed description\",\n                        \"items\": {\n                            \"additionalProperties\": true\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"version\": {\n                        \"enum\": [\n                            1\n                        ],\n                        \"type\": \"number\"\n                    }\n                },\n                \"required\": [\n                    \"tables\"\n                ],\n                \"type\": \"object\"\n            },\n            \"MetadataV2\": {\n                \"properties\": {\n                    \"actions\": {\n                        \"description\": \"action definitions which extend Hasura's schema with custom business logic using custom queries and mutations\\n\\n\\narray of values of unspecified type - this is a placeholder that will eventually be replaced with a more detailed description\",\n                        \"items\": {\n                            \"additionalProperties\": true\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"allowlist\": {\n                        \"description\": \"safe GraphQL operations - when allow lists are enabled only these operations are allowed\\n\\n\\narray of values of unspecified type - this is a placeholder that will eventually be replaced with a more detailed description\",\n                        \"items\": {\n                            \"additionalProperties\": true\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"cron_triggers\": {\n                        \"description\": \"reliably trigger HTTP endpoints to run custom business logic periodically based on a cron schedule\\n\\n\\narray of values of unspecified type - this is a placeholder that will eventually be replaced with a more detailed description\",\n                        \"items\": {\n                            \"additionalProperties\": true\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"custom_types\": {\n                        \"additionalProperties\": true,\n                        \"description\": \"custom type definitions\\n\\n\\nobject with unspecified properties - this is a placeholder that will eventually be replaced with a more detailed description\"\n                    },\n                    \"functions\": {\n                        \"description\": \"user-defined SQL functions\\n\\n\\narray of values of unspecified type - this is a placeholder that will eventually be replaced with a more detailed description\",\n                        \"items\": {\n                            \"additionalProperties\": true\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"query_collections\": {\n                        \"description\": \"group queries using query collections\\n\\n\\narray of values of unspecified type - this is a placeholder that will eventually be replaced with a more detailed description\",\n                        \"items\": {\n                            \"additionalProperties\": true\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"remote_schemas\": {\n                        \"description\": \"merge remote GraphQL schemas and provide a unified GraphQL API\\n\\n\\narray of values of unspecified type - this is a placeholder that will eventually be replaced with a more detailed description\",\n                        \"items\": {\n                            \"additionalProperties\": true\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"tables\": {\n                        \"description\": \"configured database tables\\n\\n\\narray of values of unspecified type - this is a placeholder that will eventually be replaced with a more detailed description\",\n                        \"items\": {\n                            \"additionalProperties\": true\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"version\": {\n                        \"enum\": [\n                            2\n                        ],\n                        \"type\": \"number\"\n                    }\n                },\n                \"required\": [\n                    \"version\",\n                    \"tables\"\n                ],\n                \"type\": \"object\"\n            },\n            \"MetadataV3\": {\n                \"properties\": {\n                    \"actions\": {\n                        \"default\": [],\n                        \"description\": \"action definitions which extend Hasura's schema with custom business logic using custom queries and mutations\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ActionMetadata\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"allowlist\": {\n                        \"default\": [],\n                        \"description\": \"safe GraphQL operations - when allow lists are enabled only these operations are allowed\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/AllowlistEntry\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"api_limits\": {\n                        \"$ref\": \"#/components/schemas/ApiLimit\"\n                    },\n                    \"backend_configs\": {\n                        \"$ref\": \"#/components/schemas/BackendMap_BackendConfigWrapper\"\n                    },\n                    \"cron_triggers\": {\n                        \"default\": [],\n                        \"description\": \"reliably trigger HTTP endpoints to run custom business logic periodically based on a cron schedule\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/CronTriggerMetadata\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"custom_types\": {\n                        \"$ref\": \"#/components/schemas/CustomTypes\"\n                    },\n                    \"graphql_schema_introspection\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"inherited_roles\": {\n                        \"default\": [],\n                        \"description\": \"an inherited role is a way to create a new role which inherits permissions from two or more roles\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/Role\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"metrics_config\": {\n                        \"$ref\": \"#/components/schemas/MetricsConfig\"\n                    },\n                    \"network\": {\n                        \"$ref\": \"#/components/schemas/Network\"\n                    },\n                    \"opentelemetry\": {\n                        \"$ref\": \"#/components/schemas/OpenTelemetryConfig\"\n                    },\n                    \"query_collections\": {\n                        \"default\": [],\n                        \"description\": \"group queries using query collections\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/CreateCollection\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"remote_schemas\": {\n                        \"default\": [],\n                        \"description\": \"merge remote GraphQL schemas and provide a unified GraphQL API\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/RemoteSchemaMetadata_RemoteRelationshipDefinition\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"rest_endpoints\": {\n                        \"default\": [],\n                        \"description\": \"REST interfaces to saved GraphQL queries and mutations\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/EndpointMetadata_QueryReference\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"sources\": {\n                        \"description\": \"configured databases\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/SourceMetadata\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"version\": {\n                        \"enum\": [\n                            3\n                        ],\n                        \"type\": \"number\"\n                    }\n                },\n                \"required\": [\n                    \"version\",\n                    \"sources\"\n                ],\n                \"type\": \"object\"\n            },\n            \"MetricsConfig\": {\n                \"properties\": {\n                    \"analyze_query_variables\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"analyze_response_body\": {\n                        \"type\": \"boolean\"\n                    }\n                },\n                \"required\": [\n                    \"analyze_query_variables\",\n                    \"analyze_response_body\"\n                ],\n                \"type\": \"object\"\n            },\n            \"MssqlArrRelUsingFKeyOnMultipleColumns\": {\n                \"properties\": {\n                    \"columns\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"table\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/MSSQLTableName\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"table\",\n                    \"columns\"\n                ],\n                \"type\": \"object\"\n            },\n            \"MssqlArrRelUsingFKeyOnSingleColumn\": {\n                \"properties\": {\n                    \"column\": {\n                        \"type\": \"string\"\n                    },\n                    \"table\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/MSSQLTableName\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"table\",\n                    \"column\"\n                ],\n                \"type\": \"object\"\n            },\n            \"MssqlBoolExp\": {\n                \"additionalProperties\": true\n            },\n            \"MssqlComputedFieldMetadata\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"default\": null,\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"definition\": {\n                        \"additionalProperties\": true\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"definition\"\n                ],\n                \"type\": \"object\"\n            },\n            \"MssqlDelPerm\": {\n                \"properties\": {\n                    \"backend_only\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"filter\": {\n                        \"$ref\": \"#/components/schemas/MssqlBoolExp\"\n                    },\n                    \"validate_input\": {\n                        \"$ref\": \"#/components/schemas/ValidateInputInputWebhook\"\n                    }\n                },\n                \"required\": [\n                    \"filter\"\n                ],\n                \"type\": \"object\"\n            },\n            \"MssqlDeletePermDef\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"permission\": {\n                        \"$ref\": \"#/components/schemas/MssqlDelPerm\"\n                    },\n                    \"role\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"role\",\n                    \"permission\"\n                ],\n                \"type\": \"object\"\n            },\n            \"MssqlEventTriggerConfEventTriggerConf\": {\n                \"properties\": {\n                    \"cleanup_config\": {\n                        \"$ref\": \"#/components/schemas/AutoTriggerLogCleanupConfig\"\n                    },\n                    \"definition\": {\n                        \"$ref\": \"#/components/schemas/MssqlTriggerOpsDef\"\n                    },\n                    \"headers\": {\n                        \"items\": {\n                            \"oneOf\": [\n                                {\n                                    \"$ref\": \"#/components/schemas/HeaderConfValue\"\n                                },\n                                {\n                                    \"$ref\": \"#/components/schemas/HeaderConfFromEnv\"\n                                }\n                            ]\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"request_transform\": {\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/RequestTransformV1\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/RequestTransformV2\"\n                            }\n                        ]\n                    },\n                    \"response_transform\": {\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/ResponseTransformV1\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/ResponseTransformV2\"\n                            }\n                        ]\n                    },\n                    \"retry_conf\": {\n                        \"$ref\": \"#/components/schemas/RetryConf\"\n                    },\n                    \"trigger_on_replication\": {\n                        \"default\": true,\n                        \"type\": \"boolean\"\n                    },\n                    \"webhook\": {\n                        \"type\": \"string\"\n                    },\n                    \"webhook_from_env\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"definition\",\n                    \"retry_conf\"\n                ],\n                \"type\": \"object\"\n            },\n            \"MssqlFunctionMetadata\": {\n                \"description\": \"A custom SQL function to add to the GraphQL schema with configuration.\\n\\nhttps://hasura.io/docs/latest/graphql/core/api-reference/schema-metadata-api/custom-functions.html#args-syntax\\n\",\n                \"properties\": {\n                    \"comment\": {\n                        \"type\": \"string\"\n                    },\n                    \"configuration\": {\n                        \"$ref\": \"#/components/schemas/FunctionConfig\"\n                    },\n                    \"function\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/MSSQLFunctionName\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ],\n                        \"description\": \"Name of the SQL function\"\n                    },\n                    \"permissions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/FunctionPermissionInfo\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"function\"\n                ],\n                \"type\": \"object\"\n            },\n            \"MssqlHealthCheckConfig\": {\n                \"nullable\": true,\n                \"properties\": {\n                    \"interval\": {\n                        \"type\": \"number\"\n                    },\n                    \"retries\": {\n                        \"default\": 3,\n                        \"maximum\": 9223372036854775807,\n                        \"minimum\": -9223372036854775808,\n                        \"type\": \"number\"\n                    },\n                    \"retry_interval\": {\n                        \"default\": 10,\n                        \"type\": \"number\"\n                    },\n                    \"test\": {\n                        \"$ref\": \"#/components/schemas/HealthCheckTestSql\"\n                    },\n                    \"timeout\": {\n                        \"default\": 10,\n                        \"type\": \"number\"\n                    }\n                },\n                \"required\": [\n                    \"interval\"\n                ],\n                \"type\": \"object\"\n            },\n            \"MssqlInsPerm\": {\n                \"properties\": {\n                    \"backend_only\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"check\": {\n                        \"$ref\": \"#/components/schemas/MssqlBoolExp\"\n                    },\n                    \"columns\": {\n                        \"oneOf\": [\n                            {\n                                \"enum\": [\n                                    \"*\"\n                                ],\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"items\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"array\"\n                            }\n                        ]\n                    },\n                    \"set\": {\n                        \"additionalProperties\": {\n                            \"additionalProperties\": true\n                        },\n                        \"type\": \"object\"\n                    },\n                    \"validate_input\": {\n                        \"$ref\": \"#/components/schemas/ValidateInputInputWebhook\"\n                    }\n                },\n                \"required\": [\n                    \"check\"\n                ],\n                \"type\": \"object\"\n            },\n            \"MssqlInsertPermDef\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"permission\": {\n                        \"$ref\": \"#/components/schemas/MssqlInsPerm\"\n                    },\n                    \"role\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"role\",\n                    \"permission\"\n                ],\n                \"type\": \"object\"\n            },\n            \"MssqlLogicalModelField\": {\n                \"description\": \"A field of a logical model\",\n                \"properties\": {\n                    \"description\": {\n                        \"description\": \"Optional description of this field\",\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"description\": \"Name of the field\",\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"additionalProperties\": true,\n                        \"description\": \"Type of the field\\nA type used in a Logical Model field\\nvalue with unspecified type - this is a placeholder that will eventually be replaced with a more detailed description\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"type\"\n                ],\n                \"type\": \"object\"\n            },\n            \"MssqlLogicalModelMetadata\": {\n                \"description\": \"A return type.\",\n                \"properties\": {\n                    \"description\": {\n                        \"description\": \"Optional description text which appears in the GraphQL Schema.\",\n                        \"type\": \"string\"\n                    },\n                    \"fields\": {\n                        \"description\": \"Return types for the logical model\",\n                        \"items\": {\n                            \"additionalProperties\": true,\n                            \"anyOf\": [\n                                {\n                                    \"$ref\": \"#/components/schemas/MssqlLogicalModelField\"\n                                },\n                                {\n                                    \"$ref\": \"#/components/schemas/MssqlLogicalModelField\"\n                                }\n                            ]\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"name\": {\n                        \"description\": \"A name for a logical model\",\n                        \"type\": \"string\"\n                    },\n                    \"select_permissions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/MssqlSelectPermDef\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"fields\"\n                ],\n                \"type\": \"object\"\n            },\n            \"MssqlNativeQueryMetadata\": {\n                \"description\": \"A native query as represented in metadata.\",\n                \"properties\": {\n                    \"arguments\": {\n                        \"additionalProperties\": {\n                            \"$ref\": \"#/components/schemas/MssqlNullableScalarType\"\n                        },\n                        \"default\": {},\n                        \"description\": \"Free variables in the expression and their types\",\n                        \"type\": \"object\"\n                    },\n                    \"array_relationships\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/RelDef_RelManualConfig__MSSQL\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"code\": {\n                        \"description\": \"Native code expression (SQL) to run\\nAn interpolated query expressed in native code (SQL)\",\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"description\": \"A description of the native query which appears in the graphql schema\",\n                        \"type\": \"string\"\n                    },\n                    \"object_relationships\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/RelDef_RelManualConfig__MSSQL\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"returns\": {\n                        \"additionalProperties\": true,\n                        \"description\": \"Return type (table) of the expression\\nA name or definition of a Logical Model\\nvalue with unspecified type - this is a placeholder that will eventually be replaced with a more detailed description\"\n                    },\n                    \"root_field_name\": {\n                        \"description\": \"Root field name for the native query\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"root_field_name\",\n                    \"code\",\n                    \"returns\"\n                ],\n                \"type\": \"object\"\n            },\n            \"MssqlNullableScalarType\": {\n                \"description\": \"A scalar type that can be nullable with an optional description\",\n                \"properties\": {\n                    \"description\": {\n                        \"description\": \"Optional description text which appears in the GraphQL Schema\",\n                        \"type\": \"string\"\n                    },\n                    \"nullable\": {\n                        \"default\": false,\n                        \"description\": \"Whether the type is nullable\",\n                        \"type\": \"boolean\"\n                    },\n                    \"type\": {\n                        \"$ref\": \"#/components/schemas/ScalarType\"\n                    }\n                },\n                \"required\": [\n                    \"type\"\n                ],\n                \"type\": \"object\"\n            },\n            \"MssqlObjRelRemoteTableMultipleColumns\": {\n                \"properties\": {\n                    \"columns\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"table\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/MSSQLTableName\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"table\",\n                    \"columns\"\n                ],\n                \"type\": \"object\"\n            },\n            \"MssqlObjRelRemoteTableSingleColumn\": {\n                \"properties\": {\n                    \"column\": {\n                        \"type\": \"string\"\n                    },\n                    \"table\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/MSSQLTableName\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"table\",\n                    \"column\"\n                ],\n                \"type\": \"object\"\n            },\n            \"MssqlRUManual\": {\n                \"properties\": {\n                    \"manual_configuration\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/MssqlRelManualTableConfig\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/MssqlRelManualNativeQueryConfig\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"manual_configuration\"\n                ],\n                \"type\": \"object\"\n            },\n            \"MssqlRelManualNativeQueryConfig\": {\n                \"properties\": {\n                    \"column_mapping\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"additionalProperties\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"object\"\n                            },\n                            {\n                                \"additionalProperties\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"object\"\n                            }\n                        ]\n                    },\n                    \"insertion_order\": {\n                        \"enum\": [\n                            \"before_parent\",\n                            \"after_parent\"\n                        ],\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"remote_native_query\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"remote_native_query\",\n                    \"column_mapping\"\n                ],\n                \"type\": \"object\"\n            },\n            \"MssqlRelManualTableConfig\": {\n                \"properties\": {\n                    \"column_mapping\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"additionalProperties\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"object\"\n                            },\n                            {\n                                \"additionalProperties\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"object\"\n                            }\n                        ]\n                    },\n                    \"insertion_order\": {\n                        \"enum\": [\n                            \"before_parent\",\n                            \"after_parent\"\n                        ],\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"remote_table\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/MSSQLTableName\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"remote_table\",\n                    \"column_mapping\"\n                ],\n                \"type\": \"object\"\n            },\n            \"MssqlSelPerm\": {\n                \"properties\": {\n                    \"allow_aggregations\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"columns\": {\n                        \"oneOf\": [\n                            {\n                                \"enum\": [\n                                    \"*\"\n                                ],\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"items\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"array\"\n                            }\n                        ]\n                    },\n                    \"computed_fields\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"filter\": {\n                        \"$ref\": \"#/components/schemas/MssqlBoolExp\"\n                    },\n                    \"limit\": {\n                        \"maximum\": 9223372036854775807,\n                        \"minimum\": -9223372036854775808,\n                        \"type\": \"number\"\n                    },\n                    \"query_root_fields\": {\n                        \"default\": null,\n                        \"items\": {\n                            \"enum\": [\n                                \"select\",\n                                \"select_by_pk\",\n                                \"select_aggregate\"\n                            ],\n                            \"type\": \"string\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    },\n                    \"subscription_root_fields\": {\n                        \"default\": null,\n                        \"items\": {\n                            \"enum\": [\n                                \"select\",\n                                \"select_by_pk\",\n                                \"select_aggregate\",\n                                \"select_stream\"\n                            ],\n                            \"type\": \"string\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"columns\",\n                    \"filter\"\n                ],\n                \"type\": \"object\"\n            },\n            \"MssqlSelectPermDef\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"permission\": {\n                        \"$ref\": \"#/components/schemas/MssqlSelPerm\"\n                    },\n                    \"role\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"role\",\n                    \"permission\"\n                ],\n                \"type\": \"object\"\n            },\n            \"MssqlSourceMetadata\": {\n                \"properties\": {\n                    \"configuration\": {\n                        \"$ref\": \"#/components/schemas/MSSQLConnConfiguration\"\n                    },\n                    \"customization\": {\n                        \"$ref\": \"#/components/schemas/SourceCustomization\"\n                    },\n                    \"functions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/MssqlFunctionMetadata\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    },\n                    \"health_check\": {\n                        \"$ref\": \"#/components/schemas/MssqlHealthCheckConfig\"\n                    },\n                    \"kind\": {\n                        \"enum\": [\n                            \"mssql\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"logical_models\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/MssqlLogicalModelMetadata\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"native_queries\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/MssqlNativeQueryMetadata\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    },\n                    \"query_tags\": {\n                        \"$ref\": \"#/components/schemas/QueryTagsConfig\"\n                    },\n                    \"stored_procedures\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/MssqlStoredProcedureMetadata\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    },\n                    \"tables\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/MssqlTableMetadata\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"kind\",\n                    \"tables\",\n                    \"configuration\"\n                ],\n                \"type\": \"object\"\n            },\n            \"MssqlStoredProcedureMetadata\": {\n                \"description\": \"A stored procedure as represented in metadata.\",\n                \"properties\": {\n                    \"arguments\": {\n                        \"additionalProperties\": {\n                            \"$ref\": \"#/components/schemas/MssqlNullableScalarType\"\n                        },\n                        \"default\": {},\n                        \"description\": \"Free variables in the expression and their types\",\n                        \"type\": \"object\"\n                    },\n                    \"configuration\": {\n                        \"$ref\": \"#/components/schemas/StoredProcedureConfig\"\n                    },\n                    \"description\": {\n                        \"description\": \"A description of the stored procedure which appears in the graphql schema\",\n                        \"type\": \"string\"\n                    },\n                    \"returns\": {\n                        \"description\": \"Return type (table) of the expression\",\n                        \"type\": \"string\"\n                    },\n                    \"stored_procedure\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/MSSQLFunctionName\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ],\n                        \"description\": \"The name of the SQL stored procedure\"\n                    }\n                },\n                \"required\": [\n                    \"stored_procedure\",\n                    \"configuration\",\n                    \"returns\"\n                ],\n                \"type\": \"object\"\n            },\n            \"MssqlSubscribeOpSpec\": {\n                \"properties\": {\n                    \"columns\": {\n                        \"oneOf\": [\n                            {\n                                \"enum\": [\n                                    \"*\"\n                                ],\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"items\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"array\"\n                            }\n                        ]\n                    },\n                    \"payload\": {\n                        \"oneOf\": [\n                            {\n                                \"enum\": [\n                                    \"*\"\n                                ],\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"items\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"array\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"columns\"\n                ],\n                \"type\": \"object\"\n            },\n            \"MssqlTableConfig\": {\n                \"properties\": {\n                    \"column_config\": {\n                        \"additionalProperties\": {\n                            \"$ref\": \"#/components/schemas/ColumnConfig\"\n                        },\n                        \"default\": {},\n                        \"type\": \"object\"\n                    },\n                    \"comment\": {\n                        \"default\": null,\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"custom_column_names\": {\n                        \"additionalProperties\": {\n                            \"$ref\": \"#/components/schemas/GraphQLName\"\n                        },\n                        \"default\": {},\n                        \"type\": \"object\"\n                    },\n                    \"custom_name\": {\n                        \"$ref\": \"#/components/schemas/GraphQLName\"\n                    },\n                    \"custom_root_fields\": {\n                        \"$ref\": \"#/components/schemas/TableCustomRootFields\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"MssqlTableMetadata\": {\n                \"description\": \"Representation of a table in metadata, 'tables.yaml' and 'metadata.json'\",\n                \"properties\": {\n                    \"apollo_federation_config\": {\n                        \"$ref\": \"#/components/schemas/ApolloFederationConfig\"\n                    },\n                    \"array_relationships\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/RelDef_RelUsing__MSSQL__ArrRelUsingFKeyOn__MSSQL_\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"computed_fields\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/MssqlComputedFieldMetadata\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"configuration\": {\n                        \"$ref\": \"#/components/schemas/MssqlTableConfig\"\n                    },\n                    \"delete_permissions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/MssqlDeletePermDef\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"event_triggers\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/MssqlEventTriggerConfEventTriggerConf\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"insert_permissions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/MssqlInsertPermDef\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"is_enum\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"logical_model\": {\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"object_relationships\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/RelDef_RelUsing__MSSQL__ObjRelUsingChoice__MSSQL_\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"remote_relationships\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/RemoteRelationship_RemoteRelationshipDefinition\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"select_permissions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/MssqlSelectPermDef\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"table\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/MSSQLTableName\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ]\n                    },\n                    \"update_permissions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/MssqlUpdatePermDef\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"table\"\n                ],\n                \"type\": \"object\"\n            },\n            \"MssqlTriggerOpsDef\": {\n                \"properties\": {\n                    \"delete\": {\n                        \"$ref\": \"#/components/schemas/MssqlSubscribeOpSpec\"\n                    },\n                    \"enable_manual\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"insert\": {\n                        \"$ref\": \"#/components/schemas/MssqlSubscribeOpSpec\"\n                    },\n                    \"update\": {\n                        \"$ref\": \"#/components/schemas/MssqlSubscribeOpSpec\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"MssqlUpdPerm\": {\n                \"properties\": {\n                    \"backend_only\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"check\": {\n                        \"$ref\": \"#/components/schemas/MssqlBoolExp\"\n                    },\n                    \"columns\": {\n                        \"description\": \"Allowed columns\",\n                        \"oneOf\": [\n                            {\n                                \"enum\": [\n                                    \"*\"\n                                ],\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"items\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"array\"\n                            }\n                        ]\n                    },\n                    \"filter\": {\n                        \"$ref\": \"#/components/schemas/MssqlBoolExp\"\n                    },\n                    \"set\": {\n                        \"additionalProperties\": {\n                            \"additionalProperties\": true\n                        },\n                        \"description\": \"Preset columns\",\n                        \"type\": \"object\"\n                    },\n                    \"validate_input\": {\n                        \"$ref\": \"#/components/schemas/ValidateInputInputWebhook\"\n                    }\n                },\n                \"required\": [\n                    \"columns\",\n                    \"filter\"\n                ],\n                \"type\": \"object\"\n            },\n            \"MssqlUpdatePermDef\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"permission\": {\n                        \"$ref\": \"#/components/schemas/MssqlUpdPerm\"\n                    },\n                    \"role\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"role\",\n                    \"permission\"\n                ],\n                \"type\": \"object\"\n            },\n            \"NamingCase\": {\n                \"enum\": [\n                    \"hasura-default\",\n                    \"graphql-default\"\n                ],\n                \"type\": \"string\"\n            },\n            \"Network\": {\n                \"properties\": {\n                    \"tls_allowlist\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/TlsAllow\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"ObjectFieldDefinition_GraphQLType\": {\n                \"properties\": {\n                    \"arguments\": {\n                        \"additionalProperties\": true\n                    },\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"$ref\": \"#/components/schemas/GraphQLName\"\n                    },\n                    \"type\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"type\"\n                ],\n                \"type\": \"object\"\n            },\n            \"ObjectTypeDefinition\": {\n                \"properties\": {\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"fields\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/ObjectFieldDefinition_GraphQLType\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"relationships\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/TypeRelationshipDefinition\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"fields\"\n                ],\n                \"type\": \"object\"\n            },\n            \"OpenTelemetryConfig\": {\n                \"properties\": {\n                    \"batch_span_processor\": {\n                        \"$ref\": \"#/components/schemas/OtelBatchSpanProcessorConfig\"\n                    },\n                    \"data_types\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"enum\": [\n                                \"traces\",\n                                \"metrics\",\n                                \"logs\"\n                            ],\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"exporter_otlp\": {\n                        \"$ref\": \"#/components/schemas/OtelExporterConfig\"\n                    },\n                    \"status\": {\n                        \"default\": \"disabled\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"OtelBatchSpanProcessorConfig\": {\n                \"properties\": {\n                    \"max_export_batch_size\": {\n                        \"default\": 512,\n                        \"description\": \"The maximum batch size of every export. It must be smaller or equal to maxQueueSize (not yet configurable). Default 512.\",\n                        \"maximum\": 9223372036854775807,\n                        \"minimum\": -9223372036854775808,\n                        \"type\": \"number\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"OtelExporterConfig\": {\n                \"properties\": {\n                    \"headers\": {\n                        \"default\": [],\n                        \"description\": \"Key-value pairs to be used as headers to send with an export request.\",\n                        \"items\": {\n                            \"oneOf\": [\n                                {\n                                    \"$ref\": \"#/components/schemas/HeaderConfValue\"\n                                },\n                                {\n                                    \"$ref\": \"#/components/schemas/HeaderConfFromEnv\"\n                                }\n                            ]\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"otlp_logs_endpoint\": {\n                        \"description\": \"Target URL to which the exporter is going to send logs. No default.\",\n                        \"type\": \"string\"\n                    },\n                    \"otlp_metrics_endpoint\": {\n                        \"description\": \"Target URL to which the exporter is going to send metrics. No default.\",\n                        \"type\": \"string\"\n                    },\n                    \"otlp_traces_endpoint\": {\n                        \"description\": \"Target URL to which the exporter is going to send traces. No default.\",\n                        \"type\": \"string\"\n                    },\n                    \"protocol\": {\n                        \"default\": \"http/protobuf\",\n                        \"description\": \"The transport protocol\\nPossible protocol to use with OTLP. Currently, only http/protobuf is supported.\",\n                        \"enum\": [\n                            \"http/protobuf\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"resource_attributes\": {\n                        \"default\": [],\n                        \"description\": \"Attributes to send as the resource attributes of an export request. We currently only support string-valued attributes.\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/OtelNameValue\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"traces_propagators\": {\n                        \"default\": [\n                            \"b3\"\n                        ],\n                        \"description\": \"List of propagators to inject and extract traces data from headers.\",\n                        \"items\": {\n                            \"description\": \"Possible trace propagators to use with OTLP\",\n                            \"enum\": [\n                                \"b3\",\n                                \"tracecontext\"\n                            ],\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"OtelNameValue\": {\n                \"description\": \"Internal helper type for JSON lists of key-value pairs\",\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"value\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"value\"\n                ],\n                \"type\": \"object\"\n            },\n            \"PGClientCerts\": {\n                \"description\": \"https://hasura.io/docs/latest/graphql/core/api-reference/syntax-defs.html#pgcertsettings\",\n                \"nullable\": true,\n                \"properties\": {\n                    \"sslcert\": {\n                        \"$ref\": \"#/components/schemas/CertVar\"\n                    },\n                    \"sslkey\": {\n                        \"$ref\": \"#/components/schemas/CertVar\"\n                    },\n                    \"sslmode\": {\n                        \"$ref\": \"#/components/schemas/SSLMode\"\n                    },\n                    \"sslpassword\": {\n                        \"$ref\": \"#/components/schemas/CertVar\"\n                    },\n                    \"sslrootcert\": {\n                        \"$ref\": \"#/components/schemas/CertVar\"\n                    }\n                },\n                \"required\": [\n                    \"sslmode\"\n                ],\n                \"type\": \"object\"\n            },\n            \"PGConnectionParams\": {\n                \"properties\": {\n                    \"database\": {\n                        \"type\": \"string\"\n                    },\n                    \"host\": {\n                        \"type\": \"string\"\n                    },\n                    \"password\": {\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"port\": {\n                        \"maximum\": 9223372036854775807,\n                        \"minimum\": -9223372036854775808,\n                        \"type\": \"number\"\n                    },\n                    \"username\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"host\",\n                    \"username\",\n                    \"port\",\n                    \"database\"\n                ],\n                \"type\": \"object\"\n            },\n            \"PostgresArrRelUsingFKeyOnMultipleColumns\": {\n                \"properties\": {\n                    \"columns\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"table\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/PostgresQualified_TableName\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"table\",\n                    \"columns\"\n                ],\n                \"type\": \"object\"\n            },\n            \"PostgresArrRelUsingFKeyOnSingleColumn\": {\n                \"properties\": {\n                    \"column\": {\n                        \"type\": \"string\"\n                    },\n                    \"table\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/PostgresQualified_TableName\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"table\",\n                    \"column\"\n                ],\n                \"type\": \"object\"\n            },\n            \"PostgresBoolExp\": {\n                \"additionalProperties\": true\n            },\n            \"PostgresComputedFieldDefinition\": {\n                \"properties\": {\n                    \"function\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/PostgresQualified_FunctionName\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ]\n                    },\n                    \"session_argument\": {\n                        \"type\": \"string\"\n                    },\n                    \"table_argument\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"function\"\n                ],\n                \"type\": \"object\"\n            },\n            \"PostgresComputedFieldMetadata\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"default\": null,\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"definition\": {\n                        \"$ref\": \"#/components/schemas/PostgresComputedFieldDefinition\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"definition\"\n                ],\n                \"type\": \"object\"\n            },\n            \"PostgresConnConfiguration\": {\n                \"description\": \"https://hasura.io/docs/latest/graphql/core/api-reference/syntax-defs.html#pgconfiguration\",\n                \"properties\": {\n                    \"connection_info\": {\n                        \"$ref\": \"#/components/schemas/PostgresSourceConnInfo\"\n                    },\n                    \"connection_set\": {\n                        \"additionalProperties\": true,\n                        \"description\": \"connection set used for connection template (supported only for cloud/enterprise edition)\\nPostgresConnectionSet\",\n                        \"nullable\": true\n                    },\n                    \"connection_template\": {\n                        \"$ref\": \"#/components/schemas/ConnectionTemplate\"\n                    },\n                    \"extensions_schema\": {\n                        \"$ref\": \"#/components/schemas/ExtensionsSchema\"\n                    },\n                    \"read_replicas\": {\n                        \"description\": \"Optional list of read replica configuration (supported only in cloud/enterprise versions)\",\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/PostgresSourceConnInfo\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"connection_info\"\n                ],\n                \"type\": \"object\"\n            },\n            \"PostgresDelPerm\": {\n                \"properties\": {\n                    \"backend_only\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"filter\": {\n                        \"$ref\": \"#/components/schemas/PostgresBoolExp\"\n                    },\n                    \"validate_input\": {\n                        \"$ref\": \"#/components/schemas/ValidateInputInputWebhook\"\n                    }\n                },\n                \"required\": [\n                    \"filter\"\n                ],\n                \"type\": \"object\"\n            },\n            \"PostgresDeletePermDef\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"permission\": {\n                        \"$ref\": \"#/components/schemas/PostgresDelPerm\"\n                    },\n                    \"role\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"role\",\n                    \"permission\"\n                ],\n                \"type\": \"object\"\n            },\n            \"PostgresEventTriggerConfEventTriggerConf\": {\n                \"properties\": {\n                    \"cleanup_config\": {\n                        \"$ref\": \"#/components/schemas/AutoTriggerLogCleanupConfig\"\n                    },\n                    \"definition\": {\n                        \"$ref\": \"#/components/schemas/PostgresTriggerOpsDef\"\n                    },\n                    \"headers\": {\n                        \"items\": {\n                            \"oneOf\": [\n                                {\n                                    \"$ref\": \"#/components/schemas/HeaderConfValue\"\n                                },\n                                {\n                                    \"$ref\": \"#/components/schemas/HeaderConfFromEnv\"\n                                }\n                            ]\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"request_transform\": {\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/RequestTransformV1\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/RequestTransformV2\"\n                            }\n                        ]\n                    },\n                    \"response_transform\": {\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/ResponseTransformV1\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/ResponseTransformV2\"\n                            }\n                        ]\n                    },\n                    \"retry_conf\": {\n                        \"$ref\": \"#/components/schemas/RetryConf\"\n                    },\n                    \"trigger_on_replication\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"webhook\": {\n                        \"type\": \"string\"\n                    },\n                    \"webhook_from_env\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"definition\",\n                    \"retry_conf\"\n                ],\n                \"type\": \"object\"\n            },\n            \"PostgresFunctionMetadata\": {\n                \"description\": \"A custom SQL function to add to the GraphQL schema with configuration.\\n\\nhttps://hasura.io/docs/latest/graphql/core/api-reference/schema-metadata-api/custom-functions.html#args-syntax\\n\",\n                \"properties\": {\n                    \"comment\": {\n                        \"type\": \"string\"\n                    },\n                    \"configuration\": {\n                        \"$ref\": \"#/components/schemas/FunctionConfig\"\n                    },\n                    \"function\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/PostgresQualified_FunctionName\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ],\n                        \"description\": \"Name of the SQL function\"\n                    },\n                    \"permissions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/FunctionPermissionInfo\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"function\"\n                ],\n                \"type\": \"object\"\n            },\n            \"PostgresHealthCheckConfig\": {\n                \"nullable\": true,\n                \"properties\": {\n                    \"interval\": {\n                        \"type\": \"number\"\n                    },\n                    \"retries\": {\n                        \"default\": 3,\n                        \"maximum\": 9223372036854775807,\n                        \"minimum\": -9223372036854775808,\n                        \"type\": \"number\"\n                    },\n                    \"retry_interval\": {\n                        \"default\": 10,\n                        \"type\": \"number\"\n                    },\n                    \"test\": {\n                        \"$ref\": \"#/components/schemas/HealthCheckTestSql\"\n                    },\n                    \"timeout\": {\n                        \"default\": 10,\n                        \"type\": \"number\"\n                    }\n                },\n                \"required\": [\n                    \"interval\"\n                ],\n                \"type\": \"object\"\n            },\n            \"PostgresInsPerm\": {\n                \"properties\": {\n                    \"backend_only\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"check\": {\n                        \"$ref\": \"#/components/schemas/PostgresBoolExp\"\n                    },\n                    \"columns\": {\n                        \"oneOf\": [\n                            {\n                                \"enum\": [\n                                    \"*\"\n                                ],\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"items\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"array\"\n                            }\n                        ]\n                    },\n                    \"set\": {\n                        \"additionalProperties\": {\n                            \"additionalProperties\": true\n                        },\n                        \"type\": \"object\"\n                    },\n                    \"validate_input\": {\n                        \"$ref\": \"#/components/schemas/ValidateInputInputWebhook\"\n                    }\n                },\n                \"required\": [\n                    \"check\"\n                ],\n                \"type\": \"object\"\n            },\n            \"PostgresInsertPermDef\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"permission\": {\n                        \"$ref\": \"#/components/schemas/PostgresInsPerm\"\n                    },\n                    \"role\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"role\",\n                    \"permission\"\n                ],\n                \"type\": \"object\"\n            },\n            \"PostgresLogicalModelField\": {\n                \"description\": \"A field of a logical model\",\n                \"properties\": {\n                    \"description\": {\n                        \"description\": \"Optional description of this field\",\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"description\": \"Name of the field\",\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"additionalProperties\": true,\n                        \"description\": \"Type of the field\\nA type used in a Logical Model field\\nvalue with unspecified type - this is a placeholder that will eventually be replaced with a more detailed description\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"type\"\n                ],\n                \"type\": \"object\"\n            },\n            \"PostgresLogicalModelMetadata\": {\n                \"description\": \"A return type.\",\n                \"properties\": {\n                    \"description\": {\n                        \"description\": \"Optional description text which appears in the GraphQL Schema.\",\n                        \"type\": \"string\"\n                    },\n                    \"fields\": {\n                        \"description\": \"Return types for the logical model\",\n                        \"items\": {\n                            \"additionalProperties\": true,\n                            \"anyOf\": [\n                                {\n                                    \"$ref\": \"#/components/schemas/PostgresLogicalModelField\"\n                                },\n                                {\n                                    \"$ref\": \"#/components/schemas/PostgresLogicalModelField\"\n                                }\n                            ]\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"name\": {\n                        \"description\": \"A name for a logical model\",\n                        \"type\": \"string\"\n                    },\n                    \"select_permissions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/PostgresSelectPermDef\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"fields\"\n                ],\n                \"type\": \"object\"\n            },\n            \"PostgresNativeQueryMetadata\": {\n                \"description\": \"A native query as represented in metadata.\",\n                \"properties\": {\n                    \"arguments\": {\n                        \"additionalProperties\": {\n                            \"$ref\": \"#/components/schemas/PostgresNullableScalarType\"\n                        },\n                        \"default\": {},\n                        \"description\": \"Free variables in the expression and their types\",\n                        \"type\": \"object\"\n                    },\n                    \"array_relationships\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/RelDef_RelManualConfig___Postgres__Vanilla_\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"code\": {\n                        \"description\": \"Native code expression (SQL) to run\\nAn interpolated query expressed in native code (SQL)\",\n                        \"type\": \"string\"\n                    },\n                    \"description\": {\n                        \"description\": \"A description of the native query which appears in the graphql schema\",\n                        \"type\": \"string\"\n                    },\n                    \"object_relationships\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/RelDef_RelManualConfig___Postgres__Vanilla_\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"returns\": {\n                        \"additionalProperties\": true,\n                        \"description\": \"Return type (table) of the expression\\nA name or definition of a Logical Model\\nvalue with unspecified type - this is a placeholder that will eventually be replaced with a more detailed description\"\n                    },\n                    \"root_field_name\": {\n                        \"description\": \"Root field name for the native query\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"root_field_name\",\n                    \"code\",\n                    \"returns\"\n                ],\n                \"type\": \"object\"\n            },\n            \"PostgresNullableScalarType\": {\n                \"description\": \"A scalar type that can be nullable with an optional description\",\n                \"properties\": {\n                    \"description\": {\n                        \"description\": \"Optional description text which appears in the GraphQL Schema\",\n                        \"type\": \"string\"\n                    },\n                    \"nullable\": {\n                        \"default\": false,\n                        \"description\": \"Whether the type is nullable\",\n                        \"type\": \"boolean\"\n                    },\n                    \"type\": {\n                        \"description\": \"The base scalar type\\nPostgres Scalar Types\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"type\"\n                ],\n                \"type\": \"object\"\n            },\n            \"PostgresObjRelRemoteTableMultipleColumns\": {\n                \"properties\": {\n                    \"columns\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"table\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/PostgresQualified_TableName\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"table\",\n                    \"columns\"\n                ],\n                \"type\": \"object\"\n            },\n            \"PostgresObjRelRemoteTableSingleColumn\": {\n                \"properties\": {\n                    \"column\": {\n                        \"type\": \"string\"\n                    },\n                    \"table\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/PostgresQualified_TableName\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"table\",\n                    \"column\"\n                ],\n                \"type\": \"object\"\n            },\n            \"PostgresPoolSettings\": {\n                \"description\": \"https://hasura.io/docs/latest/graphql/core/api-reference/syntax-defs.html#pgpoolsettings\",\n                \"nullable\": true,\n                \"properties\": {\n                    \"connection_lifetime\": {\n                        \"description\": \"Time from connection creation after which the connection should be destroyed and a new one created. A value of 0 indicates we should never destroy an active connection. If 0 is passed, memory from large query results may not be reclaimed. (default: 600 sec)\",\n                        \"nullable\": true,\n                        \"type\": \"number\"\n                    },\n                    \"idle_timeout\": {\n                        \"description\": \"The idle timeout (in seconds) per connection (default: 180)\",\n                        \"maximum\": 9223372036854775807,\n                        \"minimum\": -9223372036854775808,\n                        \"nullable\": true,\n                        \"type\": \"number\"\n                    },\n                    \"max_connections\": {\n                        \"description\": \"Maximum number of connections to be kept in the pool (default: 50)\",\n                        \"maximum\": 9223372036854775807,\n                        \"minimum\": -9223372036854775808,\n                        \"nullable\": true,\n                        \"type\": \"number\"\n                    },\n                    \"pool_timeout\": {\n                        \"description\": \"Maximum time to wait while acquiring a Postgres connection from the pool, in seconds (default: forever)\",\n                        \"nullable\": true,\n                        \"type\": \"number\"\n                    },\n                    \"retries\": {\n                        \"description\": \"Number of retries to perform (default: 1)\",\n                        \"maximum\": 9223372036854775807,\n                        \"minimum\": -9223372036854775808,\n                        \"nullable\": true,\n                        \"type\": \"number\"\n                    },\n                    \"total_max_connections\": {\n                        \"description\": \"Total maximum number of connections across all instances (cloud only, default: null)\",\n                        \"maximum\": 9223372036854775807,\n                        \"minimum\": -9223372036854775808,\n                        \"nullable\": true,\n                        \"type\": \"number\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"PostgresQualified_FunctionName\": {\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"schema\": {\n                        \"default\": \"public\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\"\n                ],\n                \"type\": \"object\"\n            },\n            \"PostgresQualified_TableName\": {\n                \"properties\": {\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"schema\": {\n                        \"default\": \"public\",\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\"\n                ],\n                \"type\": \"object\"\n            },\n            \"PostgresRUManual\": {\n                \"properties\": {\n                    \"manual_configuration\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/PostgresRelManualTableConfig\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/PostgresRelManualNativeQueryConfig\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"manual_configuration\"\n                ],\n                \"type\": \"object\"\n            },\n            \"PostgresRelManualNativeQueryConfig\": {\n                \"properties\": {\n                    \"column_mapping\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"additionalProperties\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"object\"\n                            },\n                            {\n                                \"additionalProperties\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"object\"\n                            }\n                        ]\n                    },\n                    \"insertion_order\": {\n                        \"enum\": [\n                            \"before_parent\",\n                            \"after_parent\"\n                        ],\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"remote_native_query\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"remote_native_query\",\n                    \"column_mapping\"\n                ],\n                \"type\": \"object\"\n            },\n            \"PostgresRelManualTableConfig\": {\n                \"properties\": {\n                    \"column_mapping\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"additionalProperties\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"object\"\n                            },\n                            {\n                                \"additionalProperties\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"object\"\n                            }\n                        ]\n                    },\n                    \"insertion_order\": {\n                        \"enum\": [\n                            \"before_parent\",\n                            \"after_parent\"\n                        ],\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"remote_table\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/PostgresQualified_TableName\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"remote_table\",\n                    \"column_mapping\"\n                ],\n                \"type\": \"object\"\n            },\n            \"PostgresSelPerm\": {\n                \"properties\": {\n                    \"allow_aggregations\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"columns\": {\n                        \"oneOf\": [\n                            {\n                                \"enum\": [\n                                    \"*\"\n                                ],\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"items\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"array\"\n                            }\n                        ]\n                    },\n                    \"computed_fields\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"filter\": {\n                        \"$ref\": \"#/components/schemas/PostgresBoolExp\"\n                    },\n                    \"limit\": {\n                        \"maximum\": 9223372036854775807,\n                        \"minimum\": -9223372036854775808,\n                        \"type\": \"number\"\n                    },\n                    \"query_root_fields\": {\n                        \"default\": null,\n                        \"items\": {\n                            \"enum\": [\n                                \"select\",\n                                \"select_by_pk\",\n                                \"select_aggregate\"\n                            ],\n                            \"type\": \"string\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    },\n                    \"subscription_root_fields\": {\n                        \"default\": null,\n                        \"items\": {\n                            \"enum\": [\n                                \"select\",\n                                \"select_by_pk\",\n                                \"select_aggregate\",\n                                \"select_stream\"\n                            ],\n                            \"type\": \"string\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"columns\",\n                    \"filter\"\n                ],\n                \"type\": \"object\"\n            },\n            \"PostgresSelectPermDef\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"permission\": {\n                        \"$ref\": \"#/components/schemas/PostgresSelPerm\"\n                    },\n                    \"role\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"role\",\n                    \"permission\"\n                ],\n                \"type\": \"object\"\n            },\n            \"PostgresSourceConnInfo\": {\n                \"description\": \"https://hasura.io/docs/latest/graphql/core/api-reference/syntax-defs.html#pgsourceconnectioninfo\",\n                \"properties\": {\n                    \"database_url\": {\n                        \"description\": \"The database connection URL as a string, from an environment variable, as connection parameters, or dynamically read from a file at connect time.\",\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/FromEnv\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/UrlConfFromParams\"\n                            }\n                        ]\n                    },\n                    \"isolation_level\": {\n                        \"$ref\": \"#/components/schemas/TxIsolation\"\n                    },\n                    \"pool_settings\": {\n                        \"$ref\": \"#/components/schemas/PostgresPoolSettings\"\n                    },\n                    \"ssl_configuration\": {\n                        \"$ref\": \"#/components/schemas/PGClientCerts\"\n                    },\n                    \"use_prepared_statements\": {\n                        \"default\": false,\n                        \"description\": \"If set to true the server prepares statement before executing on the source database (default: false). For more details, refer to the Postgres docs\",\n                        \"type\": \"boolean\"\n                    }\n                },\n                \"required\": [\n                    \"database_url\"\n                ],\n                \"type\": \"object\"\n            },\n            \"PostgresSourceMetadata\": {\n                \"properties\": {\n                    \"configuration\": {\n                        \"$ref\": \"#/components/schemas/PostgresConnConfiguration\"\n                    },\n                    \"customization\": {\n                        \"$ref\": \"#/components/schemas/SourceCustomization\"\n                    },\n                    \"functions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/PostgresFunctionMetadata\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    },\n                    \"health_check\": {\n                        \"$ref\": \"#/components/schemas/PostgresHealthCheckConfig\"\n                    },\n                    \"kind\": {\n                        \"additionalProperties\": true,\n                        \"enum\": [\n                            \"postgres\",\n                            \"pg\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"logical_models\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/PostgresLogicalModelMetadata\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"native_queries\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/PostgresNativeQueryMetadata\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    },\n                    \"query_tags\": {\n                        \"$ref\": \"#/components/schemas/QueryTagsConfig\"\n                    },\n                    \"stored_procedures\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/PostgresStoredProcedureMetadata\"\n                        },\n                        \"nullable\": true,\n                        \"type\": \"array\"\n                    },\n                    \"tables\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/PostgresTableMetadata\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"kind\",\n                    \"tables\",\n                    \"configuration\"\n                ],\n                \"type\": \"object\"\n            },\n            \"PostgresStoredProcedureMetadata\": {\n                \"description\": \"A stored procedure as represented in metadata.\",\n                \"properties\": {\n                    \"arguments\": {\n                        \"additionalProperties\": {\n                            \"$ref\": \"#/components/schemas/PostgresNullableScalarType\"\n                        },\n                        \"default\": {},\n                        \"description\": \"Free variables in the expression and their types\",\n                        \"type\": \"object\"\n                    },\n                    \"configuration\": {\n                        \"$ref\": \"#/components/schemas/StoredProcedureConfig\"\n                    },\n                    \"description\": {\n                        \"description\": \"A description of the stored procedure which appears in the graphql schema\",\n                        \"type\": \"string\"\n                    },\n                    \"returns\": {\n                        \"description\": \"Return type (table) of the expression\",\n                        \"type\": \"string\"\n                    },\n                    \"stored_procedure\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/PostgresQualified_FunctionName\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ],\n                        \"description\": \"The name of the SQL stored procedure\"\n                    }\n                },\n                \"required\": [\n                    \"stored_procedure\",\n                    \"configuration\",\n                    \"returns\"\n                ],\n                \"type\": \"object\"\n            },\n            \"PostgresSubscribeOpSpec\": {\n                \"properties\": {\n                    \"columns\": {\n                        \"oneOf\": [\n                            {\n                                \"enum\": [\n                                    \"*\"\n                                ],\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"items\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"array\"\n                            }\n                        ]\n                    },\n                    \"payload\": {\n                        \"oneOf\": [\n                            {\n                                \"enum\": [\n                                    \"*\"\n                                ],\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"items\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"array\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"columns\"\n                ],\n                \"type\": \"object\"\n            },\n            \"PostgresTableConfig\": {\n                \"properties\": {\n                    \"column_config\": {\n                        \"additionalProperties\": {\n                            \"$ref\": \"#/components/schemas/ColumnConfig\"\n                        },\n                        \"default\": {},\n                        \"type\": \"object\"\n                    },\n                    \"comment\": {\n                        \"default\": null,\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"custom_column_names\": {\n                        \"additionalProperties\": {\n                            \"$ref\": \"#/components/schemas/GraphQLName\"\n                        },\n                        \"default\": {},\n                        \"type\": \"object\"\n                    },\n                    \"custom_name\": {\n                        \"$ref\": \"#/components/schemas/GraphQLName\"\n                    },\n                    \"custom_root_fields\": {\n                        \"$ref\": \"#/components/schemas/TableCustomRootFields\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"PostgresTableMetadata\": {\n                \"description\": \"Representation of a table in metadata, 'tables.yaml' and 'metadata.json'\",\n                \"properties\": {\n                    \"apollo_federation_config\": {\n                        \"$ref\": \"#/components/schemas/ApolloFederationConfig\"\n                    },\n                    \"array_relationships\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/RelDef_RelUsing___Postgres__Vanilla___ArrRelUsingFKeyOn___Postgres__Vanilla__\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"computed_fields\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/PostgresComputedFieldMetadata\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"configuration\": {\n                        \"$ref\": \"#/components/schemas/PostgresTableConfig\"\n                    },\n                    \"delete_permissions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/PostgresDeletePermDef\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"event_triggers\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/PostgresEventTriggerConfEventTriggerConf\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"insert_permissions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/PostgresInsertPermDef\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"is_enum\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"logical_model\": {\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"object_relationships\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/RelDef_RelUsing___Postgres__Vanilla___ObjRelUsingChoice___Postgres__Vanilla__\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"remote_relationships\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/RemoteRelationship_RemoteRelationshipDefinition\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"select_permissions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/PostgresSelectPermDef\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"table\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/PostgresQualified_TableName\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ]\n                    },\n                    \"update_permissions\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/PostgresUpdatePermDef\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"table\"\n                ],\n                \"type\": \"object\"\n            },\n            \"PostgresTriggerOpsDef\": {\n                \"properties\": {\n                    \"delete\": {\n                        \"$ref\": \"#/components/schemas/PostgresSubscribeOpSpec\"\n                    },\n                    \"enable_manual\": {\n                        \"type\": \"boolean\"\n                    },\n                    \"insert\": {\n                        \"$ref\": \"#/components/schemas/PostgresSubscribeOpSpec\"\n                    },\n                    \"update\": {\n                        \"$ref\": \"#/components/schemas/PostgresSubscribeOpSpec\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"PostgresUpdPerm\": {\n                \"properties\": {\n                    \"backend_only\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"check\": {\n                        \"$ref\": \"#/components/schemas/PostgresBoolExp\"\n                    },\n                    \"columns\": {\n                        \"description\": \"Allowed columns\",\n                        \"oneOf\": [\n                            {\n                                \"enum\": [\n                                    \"*\"\n                                ],\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"items\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"array\"\n                            }\n                        ]\n                    },\n                    \"filter\": {\n                        \"$ref\": \"#/components/schemas/PostgresBoolExp\"\n                    },\n                    \"set\": {\n                        \"additionalProperties\": {\n                            \"additionalProperties\": true\n                        },\n                        \"description\": \"Preset columns\",\n                        \"type\": \"object\"\n                    },\n                    \"validate_input\": {\n                        \"$ref\": \"#/components/schemas/ValidateInputInputWebhook\"\n                    }\n                },\n                \"required\": [\n                    \"columns\",\n                    \"filter\"\n                ],\n                \"type\": \"object\"\n            },\n            \"PostgresUpdatePermDef\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"nullable\": true,\n                        \"type\": \"string\"\n                    },\n                    \"permission\": {\n                        \"$ref\": \"#/components/schemas/PostgresUpdPerm\"\n                    },\n                    \"role\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"role\",\n                    \"permission\"\n                ],\n                \"type\": \"object\"\n            },\n            \"QueryReference\": {\n                \"properties\": {\n                    \"collection_name\": {\n                        \"type\": \"string\"\n                    },\n                    \"query_name\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"collection_name\",\n                    \"query_name\"\n                ],\n                \"type\": \"object\"\n            },\n            \"QueryTagsConfig\": {\n                \"nullable\": true,\n                \"properties\": {\n                    \"disabled\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"format\": {\n                        \"$ref\": \"#/components/schemas/QueryTagsFormat\"\n                    },\n                    \"omit_request_id\": {\n                        \"default\": true,\n                        \"type\": \"boolean\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"QueryTagsFormat\": {\n                \"enum\": [\n                    \"standard\",\n                    \"sqlcommenter\"\n                ],\n                \"type\": \"string\"\n            },\n            \"RUFKeyOn_ArrRelUsingFKeyOn__BigQuery\": {\n                \"properties\": {\n                    \"foreign_key_constraint_on\": {\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/BigqueryArrRelUsingFKeyOnSingleColumn\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/BigqueryArrRelUsingFKeyOnMultipleColumns\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"foreign_key_constraint_on\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RUFKeyOn_ArrRelUsingFKeyOn__DataConnector\": {\n                \"properties\": {\n                    \"foreign_key_constraint_on\": {\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/DataconnectorArrRelUsingFKeyOnSingleColumn\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/DataconnectorArrRelUsingFKeyOnMultipleColumns\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"foreign_key_constraint_on\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RUFKeyOn_ArrRelUsingFKeyOn__MSSQL\": {\n                \"properties\": {\n                    \"foreign_key_constraint_on\": {\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/MssqlArrRelUsingFKeyOnSingleColumn\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/MssqlArrRelUsingFKeyOnMultipleColumns\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"foreign_key_constraint_on\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RUFKeyOn_ArrRelUsingFKeyOn___Postgres__Citus_\": {\n                \"properties\": {\n                    \"foreign_key_constraint_on\": {\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/CitusArrRelUsingFKeyOnSingleColumn\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/CitusArrRelUsingFKeyOnMultipleColumns\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"foreign_key_constraint_on\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RUFKeyOn_ArrRelUsingFKeyOn___Postgres__Cockroach_\": {\n                \"properties\": {\n                    \"foreign_key_constraint_on\": {\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/CockroachArrRelUsingFKeyOnSingleColumn\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/CockroachArrRelUsingFKeyOnMultipleColumns\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"foreign_key_constraint_on\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RUFKeyOn_ArrRelUsingFKeyOn___Postgres__Vanilla_\": {\n                \"properties\": {\n                    \"foreign_key_constraint_on\": {\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/PostgresArrRelUsingFKeyOnSingleColumn\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/PostgresArrRelUsingFKeyOnMultipleColumns\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"foreign_key_constraint_on\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RUFKeyOn_ObjRelUsingChoice__BigQuery\": {\n                \"properties\": {\n                    \"foreign_key_constraint_on\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"items\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"array\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/BigqueryObjRelRemoteTableSingleColumn\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/BigqueryObjRelRemoteTableMultipleColumns\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"foreign_key_constraint_on\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RUFKeyOn_ObjRelUsingChoice__DataConnector\": {\n                \"properties\": {\n                    \"foreign_key_constraint_on\": {\n                        \"oneOf\": [\n                            {\n                                \"items\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"array\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"items\": {\n                                    \"oneOf\": [\n                                        {\n                                            \"items\": {\n                                                \"type\": \"string\"\n                                            },\n                                            \"type\": \"array\"\n                                        },\n                                        {\n                                            \"type\": \"string\"\n                                        }\n                                    ]\n                                },\n                                \"type\": \"array\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/DataconnectorObjRelRemoteTableSingleColumn\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/DataconnectorObjRelRemoteTableMultipleColumns\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"foreign_key_constraint_on\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RUFKeyOn_ObjRelUsingChoice__MSSQL\": {\n                \"properties\": {\n                    \"foreign_key_constraint_on\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"items\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"array\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/MssqlObjRelRemoteTableSingleColumn\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/MssqlObjRelRemoteTableMultipleColumns\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"foreign_key_constraint_on\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RUFKeyOn_ObjRelUsingChoice___Postgres__Citus_\": {\n                \"properties\": {\n                    \"foreign_key_constraint_on\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"items\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"array\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/CitusObjRelRemoteTableSingleColumn\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/CitusObjRelRemoteTableMultipleColumns\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"foreign_key_constraint_on\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RUFKeyOn_ObjRelUsingChoice___Postgres__Cockroach_\": {\n                \"properties\": {\n                    \"foreign_key_constraint_on\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"items\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"array\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/CockroachObjRelRemoteTableSingleColumn\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/CockroachObjRelRemoteTableMultipleColumns\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"foreign_key_constraint_on\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RUFKeyOn_ObjRelUsingChoice___Postgres__Vanilla_\": {\n                \"properties\": {\n                    \"foreign_key_constraint_on\": {\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"items\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"array\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/PostgresObjRelRemoteTableSingleColumn\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/PostgresObjRelRemoteTableMultipleColumns\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"foreign_key_constraint_on\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RateLimitConfig\": {\n                \"properties\": {\n                    \"max_reqs_per_min\": {\n                        \"maximum\": 9223372036854775807,\n                        \"minimum\": 0,\n                        \"type\": \"number\"\n                    },\n                    \"unique_params\": {\n                        \"description\": \"This would be either fixed value \\\"IP\\\" or a list of Session variables\",\n                        \"oneOf\": [\n                            {\n                                \"enum\": [\n                                    \"IP\",\n                                    \"ip\"\n                                ],\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"items\": {\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"array\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"max_reqs_per_min\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RelDef_RelManualConfig__BigQuery\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"using\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/BigqueryRelManualTableConfig\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/BigqueryRelManualNativeQueryConfig\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"using\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RelDef_RelManualConfig__DataConnector\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"using\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/DataconnectorRelManualTableConfig\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/DataconnectorRelManualNativeQueryConfig\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"using\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RelDef_RelManualConfig__MSSQL\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"using\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/MssqlRelManualTableConfig\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/MssqlRelManualNativeQueryConfig\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"using\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RelDef_RelManualConfig___Postgres__Citus_\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"using\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/CitusRelManualTableConfig\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/CitusRelManualNativeQueryConfig\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"using\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RelDef_RelManualConfig___Postgres__Cockroach_\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"using\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/CockroachRelManualTableConfig\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/CockroachRelManualNativeQueryConfig\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"using\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RelDef_RelManualConfig___Postgres__Vanilla_\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"using\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/PostgresRelManualTableConfig\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/PostgresRelManualNativeQueryConfig\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"using\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RelDef_RelUsing__BigQuery__ArrRelUsingFKeyOn__BigQuery_\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"using\": {\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/RUFKeyOn_ArrRelUsingFKeyOn__BigQuery\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/BigqueryRUManual\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"using\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RelDef_RelUsing__BigQuery__ObjRelUsingChoice__BigQuery_\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"using\": {\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/RUFKeyOn_ObjRelUsingChoice__BigQuery\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/BigqueryRUManual\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"using\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RelDef_RelUsing__DataConnector__ArrRelUsingFKeyOn__DataConnector_\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"using\": {\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/RUFKeyOn_ArrRelUsingFKeyOn__DataConnector\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/DataconnectorRUManual\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"using\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RelDef_RelUsing__DataConnector__ObjRelUsingChoice__DataConnector_\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"using\": {\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/RUFKeyOn_ObjRelUsingChoice__DataConnector\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/DataconnectorRUManual\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"using\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RelDef_RelUsing__MSSQL__ArrRelUsingFKeyOn__MSSQL_\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"using\": {\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/RUFKeyOn_ArrRelUsingFKeyOn__MSSQL\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/MssqlRUManual\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"using\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RelDef_RelUsing__MSSQL__ObjRelUsingChoice__MSSQL_\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"using\": {\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/RUFKeyOn_ObjRelUsingChoice__MSSQL\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/MssqlRUManual\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"using\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RelDef_RelUsing___Postgres__Citus___ArrRelUsingFKeyOn___Postgres__Citus__\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"using\": {\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/RUFKeyOn_ArrRelUsingFKeyOn___Postgres__Citus_\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/CitusRUManual\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"using\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RelDef_RelUsing___Postgres__Citus___ObjRelUsingChoice___Postgres__Citus__\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"using\": {\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/RUFKeyOn_ObjRelUsingChoice___Postgres__Citus_\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/CitusRUManual\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"using\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RelDef_RelUsing___Postgres__Cockroach___ArrRelUsingFKeyOn___Postgres__Cockroach__\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"using\": {\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/RUFKeyOn_ArrRelUsingFKeyOn___Postgres__Cockroach_\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/CockroachRUManual\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"using\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RelDef_RelUsing___Postgres__Cockroach___ObjRelUsingChoice___Postgres__Cockroach__\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"using\": {\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/RUFKeyOn_ObjRelUsingChoice___Postgres__Cockroach_\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/CockroachRUManual\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"using\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RelDef_RelUsing___Postgres__Vanilla___ArrRelUsingFKeyOn___Postgres__Vanilla__\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"using\": {\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/RUFKeyOn_ArrRelUsingFKeyOn___Postgres__Vanilla_\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/PostgresRUManual\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"using\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RelDef_RelUsing___Postgres__Vanilla___ObjRelUsingChoice___Postgres__Vanilla__\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"using\": {\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/RUFKeyOn_ObjRelUsingChoice___Postgres__Vanilla_\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/PostgresRUManual\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"using\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RelationshipToSchema\": {\n                \"properties\": {\n                    \"to_remote_schema\": {\n                        \"$ref\": \"#/components/schemas/ToSchemaRelationshipDef\"\n                    }\n                },\n                \"required\": [\n                    \"to_remote_schema\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RelationshipToSource\": {\n                \"properties\": {\n                    \"to_source\": {\n                        \"$ref\": \"#/components/schemas/ToSourceRelationshipDef\"\n                    }\n                },\n                \"required\": [\n                    \"to_source\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RemoteArguments\": {\n                \"additionalProperties\": {\n                    \"$ref\": \"#/components/schemas/GraphQLValue_Name\"\n                },\n                \"description\": \"Remote arguments are represented by an object that maps each argument name to its value.\",\n                \"type\": \"object\"\n            },\n            \"RemoteFieldCustomization\": {\n                \"properties\": {\n                    \"mapping\": {\n                        \"additionalProperties\": {\n                            \"$ref\": \"#/components/schemas/GraphQLName\"\n                        },\n                        \"type\": \"object\"\n                    },\n                    \"parent_type\": {\n                        \"$ref\": \"#/components/schemas/GraphQLName\"\n                    },\n                    \"prefix\": {\n                        \"$ref\": \"#/components/schemas/GraphQLName\"\n                    },\n                    \"suffix\": {\n                        \"$ref\": \"#/components/schemas/GraphQLName\"\n                    }\n                },\n                \"required\": [\n                    \"parent_type\",\n                    \"mapping\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RemoteFields\": {\n                \"additionalProperties\": {\n                    \"$ref\": \"#/components/schemas/FieldCall\"\n                },\n                \"description\": \"Remote fields are represented by an object that maps each field name to its arguments.\",\n                \"type\": \"object\"\n            },\n            \"RemoteRelationship_RemoteRelationshipDefinition\": {\n                \"properties\": {\n                    \"definition\": {\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/RelationshipToSource\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/RelationshipToSchema\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/ToSchemaRelationshipDefLegacyFormat\"\n                            }\n                        ]\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"definition\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RemoteSchemaCustomization\": {\n                \"properties\": {\n                    \"field_names\": {\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/RemoteFieldCustomization\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"root_fields_namespace\": {\n                        \"$ref\": \"#/components/schemas/GraphQLName\"\n                    },\n                    \"type_names\": {\n                        \"$ref\": \"#/components/schemas/RemoteTypeCustomization\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"RemoteSchemaDef\": {\n                \"properties\": {\n                    \"customization\": {\n                        \"$ref\": \"#/components/schemas/RemoteSchemaCustomization\"\n                    },\n                    \"forward_client_headers\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"headers\": {\n                        \"items\": {\n                            \"oneOf\": [\n                                {\n                                    \"$ref\": \"#/components/schemas/HeaderConfValue\"\n                                },\n                                {\n                                    \"$ref\": \"#/components/schemas/HeaderConfFromEnv\"\n                                }\n                            ]\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"timeout_seconds\": {\n                        \"maximum\": 9223372036854775807,\n                        \"minimum\": -9223372036854775808,\n                        \"type\": \"number\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\"\n                    },\n                    \"url_from_env\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"RemoteSchemaMetadata_RemoteRelationshipDefinition\": {\n                \"properties\": {\n                    \"relationships\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"$ref\": \"#/components/schemas/RemoteRelationship_RemoteRelationshipDefinition\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"type_name\": {\n                        \"$ref\": \"#/components/schemas/GraphQLName\"\n                    }\n                },\n                \"required\": [\n                    \"type_name\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RemoteSchemaPermissionDefinition\": {\n                \"properties\": {\n                    \"schema\": {\n                        \"$ref\": \"#/components/schemas/GraphQLSchema\"\n                    }\n                },\n                \"required\": [\n                    \"schema\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RemoteSchemaPermissionMetadata\": {\n                \"properties\": {\n                    \"comment\": {\n                        \"type\": \"string\"\n                    },\n                    \"definition\": {\n                        \"$ref\": \"#/components/schemas/RemoteSchemaPermissionDefinition\"\n                    },\n                    \"role\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"role\",\n                    \"definition\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RemoteTypeCustomization\": {\n                \"properties\": {\n                    \"mapping\": {\n                        \"additionalProperties\": {\n                            \"$ref\": \"#/components/schemas/GraphQLName\"\n                        },\n                        \"type\": \"object\"\n                    },\n                    \"prefix\": {\n                        \"$ref\": \"#/components/schemas/GraphQLName\"\n                    },\n                    \"suffix\": {\n                        \"$ref\": \"#/components/schemas/GraphQLName\"\n                    }\n                },\n                \"required\": [\n                    \"mapping\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RequestTransformV1\": {\n                \"properties\": {\n                    \"body\": {\n                        \"type\": \"string\"\n                    },\n                    \"method\": {\n                        \"type\": \"string\"\n                    },\n                    \"query_params\": {\n                        \"oneOf\": [\n                            {\n                                \"additionalProperties\": {\n                                    \"nullable\": true,\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"object\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ]\n                    },\n                    \"request_headers\": {\n                        \"$ref\": \"#/components/schemas/AddReplaceOrRemoveFields\"\n                    },\n                    \"template_engine\": {\n                        \"default\": \"Kriti\",\n                        \"enum\": [\n                            \"Kriti\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\"\n                    },\n                    \"version\": {\n                        \"enum\": [\n                            1\n                        ],\n                        \"type\": \"number\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"RequestTransformV2\": {\n                \"properties\": {\n                    \"body\": {\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/BodyTransformFn_Remove\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/BodyTransformFn_ModifyAsJSON\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/BodyTransformFn_ModifyAsFormURLEncoded\"\n                            }\n                        ]\n                    },\n                    \"method\": {\n                        \"type\": \"string\"\n                    },\n                    \"query_params\": {\n                        \"oneOf\": [\n                            {\n                                \"additionalProperties\": {\n                                    \"nullable\": true,\n                                    \"type\": \"string\"\n                                },\n                                \"type\": \"object\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ]\n                    },\n                    \"request_headers\": {\n                        \"$ref\": \"#/components/schemas/AddReplaceOrRemoveFields\"\n                    },\n                    \"template_engine\": {\n                        \"default\": \"Kriti\",\n                        \"enum\": [\n                            \"Kriti\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\"\n                    },\n                    \"version\": {\n                        \"enum\": [\n                            2\n                        ],\n                        \"type\": \"number\"\n                    }\n                },\n                \"required\": [\n                    \"version\"\n                ],\n                \"type\": \"object\"\n            },\n            \"ResponseTransformV1\": {\n                \"properties\": {\n                    \"body\": {\n                        \"type\": \"string\"\n                    },\n                    \"template_engine\": {\n                        \"default\": \"Kriti\",\n                        \"enum\": [\n                            \"Kriti\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"version\": {\n                        \"enum\": [\n                            1\n                        ],\n                        \"type\": \"number\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"ResponseTransformV2\": {\n                \"properties\": {\n                    \"body\": {\n                        \"oneOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/BodyTransformFn_Remove\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/BodyTransformFn_ModifyAsJSON\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/BodyTransformFn_ModifyAsFormURLEncoded\"\n                            }\n                        ]\n                    },\n                    \"template_engine\": {\n                        \"default\": \"Kriti\",\n                        \"enum\": [\n                            \"Kriti\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"version\": {\n                        \"enum\": [\n                            2\n                        ],\n                        \"type\": \"number\"\n                    }\n                },\n                \"required\": [\n                    \"version\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RetryConf\": {\n                \"properties\": {\n                    \"interval_sec\": {\n                        \"maximum\": 9223372036854775807,\n                        \"minimum\": -9223372036854775808,\n                        \"type\": \"number\"\n                    },\n                    \"num_retries\": {\n                        \"maximum\": 9223372036854775807,\n                        \"minimum\": -9223372036854775808,\n                        \"type\": \"number\"\n                    },\n                    \"timeout_sec\": {\n                        \"maximum\": 9223372036854775807,\n                        \"minimum\": -9223372036854775808,\n                        \"type\": \"number\"\n                    }\n                },\n                \"required\": [\n                    \"num_retries\",\n                    \"interval_sec\"\n                ],\n                \"type\": \"object\"\n            },\n            \"Role\": {\n                \"properties\": {\n                    \"role_name\": {\n                        \"type\": \"string\"\n                    },\n                    \"role_set\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    }\n                },\n                \"required\": [\n                    \"role_name\",\n                    \"role_set\"\n                ],\n                \"type\": \"object\"\n            },\n            \"RootFieldsCustomization\": {\n                \"properties\": {\n                    \"namespace\": {\n                        \"$ref\": \"#/components/schemas/GraphQLName\"\n                    },\n                    \"prefix\": {\n                        \"$ref\": \"#/components/schemas/GraphQLName\"\n                    },\n                    \"suffix\": {\n                        \"$ref\": \"#/components/schemas/GraphQLName\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"SSLMode\": {\n                \"enum\": [\n                    \"disable\",\n                    \"allow\",\n                    \"prefer\",\n                    \"require\",\n                    \"verify-ca\",\n                    \"verify-full\"\n                ],\n                \"type\": \"string\"\n            },\n            \"STRetryConf\": {\n                \"properties\": {\n                    \"num_retries\": {\n                        \"default\": 0,\n                        \"maximum\": 9223372036854775807,\n                        \"minimum\": -9223372036854775808,\n                        \"type\": \"number\"\n                    },\n                    \"retry_interval_seconds\": {\n                        \"default\": 10,\n                        \"type\": \"number\"\n                    },\n                    \"timeout_seconds\": {\n                        \"default\": 60,\n                        \"type\": \"number\"\n                    },\n                    \"tolerance_seconds\": {\n                        \"default\": 21600,\n                        \"type\": \"number\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"ScalarType\": {\n                \"additionalProperties\": true,\n                \"description\": \"value with unspecified type - this is a placeholder that will eventually be replaced with a more detailed description\"\n            },\n            \"ScalarTypeDefinition\": {\n                \"properties\": {\n                    \"description\": {\n                        \"type\": \"string\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\"\n                ],\n                \"type\": \"object\"\n            },\n            \"SourceCustomization\": {\n                \"properties\": {\n                    \"naming_convention\": {\n                        \"$ref\": \"#/components/schemas/NamingCase\"\n                    },\n                    \"root_fields\": {\n                        \"$ref\": \"#/components/schemas/RootFieldsCustomization\"\n                    },\n                    \"type_names\": {\n                        \"$ref\": \"#/components/schemas/SourceTypeCustomization\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"SourceMetadata\": {\n                \"oneOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/PostgresSourceMetadata\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/CitusSourceMetadata\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/CockroachSourceMetadata\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/MssqlSourceMetadata\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/BigquerySourceMetadata\"\n                    },\n                    {\n                        \"$ref\": \"#/components/schemas/DataconnectorSourceMetadata\"\n                    }\n                ]\n            },\n            \"SourceTypeCustomization\": {\n                \"properties\": {\n                    \"prefix\": {\n                        \"$ref\": \"#/components/schemas/GraphQLName\"\n                    },\n                    \"suffix\": {\n                        \"$ref\": \"#/components/schemas/GraphQLName\"\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"StoredProcedureConfig\": {\n                \"properties\": {\n                    \"custom_name\": {\n                        \"$ref\": \"#/components/schemas/GraphQLName\"\n                    },\n                    \"exposed_as\": {\n                        \"enum\": [\n                            \"query\"\n                        ],\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"exposed_as\"\n                ],\n                \"type\": \"object\"\n            },\n            \"TableCustomRootFields\": {\n                \"properties\": {\n                    \"delete\": {\n                        \"default\": null,\n                        \"nullable\": true,\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/CustomRootField\"\n                            }\n                        ]\n                    },\n                    \"delete_by_pk\": {\n                        \"default\": null,\n                        \"nullable\": true,\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/CustomRootField\"\n                            }\n                        ]\n                    },\n                    \"insert\": {\n                        \"default\": null,\n                        \"nullable\": true,\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/CustomRootField\"\n                            }\n                        ]\n                    },\n                    \"insert_one\": {\n                        \"default\": null,\n                        \"nullable\": true,\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/CustomRootField\"\n                            }\n                        ]\n                    },\n                    \"select\": {\n                        \"default\": null,\n                        \"nullable\": true,\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/CustomRootField\"\n                            }\n                        ]\n                    },\n                    \"select_aggregate\": {\n                        \"default\": null,\n                        \"nullable\": true,\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/CustomRootField\"\n                            }\n                        ]\n                    },\n                    \"select_by_pk\": {\n                        \"default\": null,\n                        \"nullable\": true,\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/CustomRootField\"\n                            }\n                        ]\n                    },\n                    \"select_stream\": {\n                        \"default\": null,\n                        \"nullable\": true,\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/CustomRootField\"\n                            }\n                        ]\n                    },\n                    \"update\": {\n                        \"default\": null,\n                        \"nullable\": true,\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/CustomRootField\"\n                            }\n                        ]\n                    },\n                    \"update_by_pk\": {\n                        \"default\": null,\n                        \"nullable\": true,\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/CustomRootField\"\n                            }\n                        ]\n                    },\n                    \"update_many\": {\n                        \"default\": null,\n                        \"nullable\": true,\n                        \"oneOf\": [\n                            {\n                                \"type\": \"string\"\n                            },\n                            {\n                                \"$ref\": \"#/components/schemas/CustomRootField\"\n                            }\n                        ]\n                    }\n                },\n                \"type\": \"object\"\n            },\n            \"TableFunctionResponse\": {\n                \"properties\": {\n                    \"table\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"type\": {\n                        \"enum\": [\n                            \"table\"\n                        ],\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"table\",\n                    \"type\"\n                ],\n                \"type\": \"object\"\n            },\n            \"TemplateVariableDynamicFromFile\": {\n                \"properties\": {\n                    \"filepath\": {\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"enum\": [\n                            \"dynamic_from_file\"\n                        ],\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"filepath\",\n                    \"type\"\n                ],\n                \"type\": \"object\"\n            },\n            \"TemplateVariableSource\": {\n                \"discriminator\": {\n                    \"mapping\": {\n                        \"dynamic_from_file\": \"TemplateVariableDynamicFromFile\"\n                    },\n                    \"propertyName\": \"type\"\n                },\n                \"oneOf\": [\n                    {\n                        \"$ref\": \"#/components/schemas/TemplateVariableDynamicFromFile\"\n                    }\n                ]\n            },\n            \"TlsAllow\": {\n                \"properties\": {\n                    \"host\": {\n                        \"type\": \"string\"\n                    },\n                    \"permissions\": {\n                        \"items\": {\n                            \"enum\": [\n                                \"self-signed\"\n                            ],\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"suffix\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"host\"\n                ],\n                \"type\": \"object\"\n            },\n            \"ToSchemaRelationshipDef\": {\n                \"properties\": {\n                    \"lhs_fields\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"remote_field\": {\n                        \"$ref\": \"#/components/schemas/RemoteFields\"\n                    },\n                    \"remote_schema\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"remote_schema\",\n                    \"lhs_fields\",\n                    \"remote_field\"\n                ],\n                \"type\": \"object\"\n            },\n            \"ToSchemaRelationshipDefLegacyFormat\": {\n                \"properties\": {\n                    \"hasura_fields\": {\n                        \"items\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"remote_field\": {\n                        \"$ref\": \"#/components/schemas/RemoteFields\"\n                    },\n                    \"remote_schema\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"remote_schema\",\n                    \"hasura_fields\",\n                    \"remote_field\"\n                ],\n                \"type\": \"object\"\n            },\n            \"ToSourceRelationshipDef\": {\n                \"properties\": {\n                    \"field_mapping\": {\n                        \"additionalProperties\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"object\"\n                    },\n                    \"relationship_type\": {\n                        \"enum\": [\n                            \"object\",\n                            \"array\"\n                        ],\n                        \"type\": \"string\"\n                    },\n                    \"source\": {\n                        \"type\": \"string\"\n                    },\n                    \"table\": {\n                        \"additionalProperties\": true\n                    }\n                },\n                \"required\": [\n                    \"relationship_type\",\n                    \"field_mapping\",\n                    \"source\",\n                    \"table\"\n                ],\n                \"type\": \"object\"\n            },\n            \"TxIsolation\": {\n                \"enum\": [\n                    \"read-committed\",\n                    \"repeatable-read\",\n                    \"serializable\"\n                ],\n                \"type\": \"string\"\n            },\n            \"TypeRelationshipDefinition\": {\n                \"properties\": {\n                    \"field_mapping\": {\n                        \"additionalProperties\": {\n                            \"type\": \"string\"\n                        },\n                        \"type\": \"object\"\n                    },\n                    \"name\": {\n                        \"type\": \"string\"\n                    },\n                    \"remote_table\": {\n                        \"additionalProperties\": true,\n                        \"anyOf\": [\n                            {\n                                \"$ref\": \"#/components/schemas/PostgresQualified_TableName\"\n                            },\n                            {\n                                \"type\": \"string\"\n                            }\n                        ]\n                    },\n                    \"source\": {\n                        \"default\": \"default\",\n                        \"type\": \"string\"\n                    },\n                    \"type\": {\n                        \"enum\": [\n                            \"object\",\n                            \"array\"\n                        ],\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"name\",\n                    \"type\",\n                    \"remote_table\",\n                    \"field_mapping\"\n                ],\n                \"type\": \"object\"\n            },\n            \"UrlConfFromParams\": {\n                \"properties\": {\n                    \"connection_parameters\": {\n                        \"oneOf\": [\n                            {\n                                \"properties\": {\n                                    \"Left\": {\n                                        \"$ref\": \"#/components/schemas/PGConnectionParams\"\n                                    }\n                                },\n                                \"required\": [\n                                    \"Left\"\n                                ],\n                                \"type\": \"object\"\n                            },\n                            {\n                                \"properties\": {\n                                    \"Right\": {\n                                        \"type\": \"string\"\n                                    }\n                                },\n                                \"required\": [\n                                    \"Right\"\n                                ],\n                                \"type\": \"object\"\n                            }\n                        ]\n                    }\n                },\n                \"required\": [\n                    \"connection_parameters\"\n                ],\n                \"type\": \"object\"\n            },\n            \"ValidateInputHttpDefinition\": {\n                \"properties\": {\n                    \"forward_client_headers\": {\n                        \"default\": false,\n                        \"type\": \"boolean\"\n                    },\n                    \"headers\": {\n                        \"default\": [],\n                        \"items\": {\n                            \"oneOf\": [\n                                {\n                                    \"$ref\": \"#/components/schemas/HeaderConfValue\"\n                                },\n                                {\n                                    \"$ref\": \"#/components/schemas/HeaderConfFromEnv\"\n                                }\n                            ]\n                        },\n                        \"type\": \"array\"\n                    },\n                    \"timeout\": {\n                        \"default\": 10,\n                        \"maximum\": 9223372036854775807,\n                        \"minimum\": -9223372036854775808,\n                        \"type\": \"number\"\n                    },\n                    \"url\": {\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"url\"\n                ],\n                \"type\": \"object\"\n            },\n            \"ValidateInputInputWebhook\": {\n                \"properties\": {\n                    \"definition\": {\n                        \"$ref\": \"#/components/schemas/ValidateInputHttpDefinition\"\n                    },\n                    \"type\": {\n                        \"enum\": [\n                            \"http\"\n                        ],\n                        \"type\": \"string\"\n                    }\n                },\n                \"required\": [\n                    \"type\",\n                    \"definition\"\n                ],\n                \"type\": \"object\"\n            }\n        }\n    },\n    \"info\": {\n        \"title\": \"\",\n        \"version\": \"\"\n    },\n    \"openapi\": \"3.0.0\",\n    \"paths\": {}\n}\n"
        },
        {
          "name": "nix",
          "type": "tree",
          "content": null
        },
        {
          "name": "packaging",
          "type": "tree",
          "content": null
        },
        {
          "name": "preload-mimalloc",
          "type": "tree",
          "content": null
        },
        {
          "name": "releases",
          "type": "tree",
          "content": null
        },
        {
          "name": "remote-schemas.md",
          "type": "blob",
          "size": 4.1572265625,
          "content": "# Remote schemas\n\nHasura gives you CRUD + realtime GraphQL APIs with authorization & access control. However, in many cases, you will need to write APIs (queries, mutations) that contain custom logic. For example, implementing a payment API, or querying data that is not in your database.\n\nHasura has the ability to merge remote GraphQL schemas and provide a unified GraphQL API. Think of it like automated schema merging. All you need to do is build your own GraphQL service and then provide the HTTP endpoint to Hasura. Your GraphQL service can be written in any language or framework.\n\nRemote schemas are ideal for use cases such as:\n\n* Customizing mutations (*e.g. running validations before inserts*)\n* Supporting features like payments, etc. and providing a consistent interface to access them i.e. behind the GraphQL Engine's API\n* Fetching disparate data from other sources (*e.g. from a weather API or another database*)\n\nTo support custom business logic, you'll need to create a custom GraphQL server (see [boilerplates](community/boilerplates/remote-schemas)) and merge its schema with GraphQL Engine's.\n\n![remote schems architecture](assets/remote-schemas-arch.png)\n\n## Demo (*40 seconds*)\n\n[![video demo of merging remote schemas](https://img.youtube.com/vi/eY4n9aPsi0M/0.jpg)](https://www.youtube.com/watch?v=eY4n9aPsi0M)\n\n[Merge remote GraphQL schemas (YouTube link)](https://youtu.be/eY4n9aPsi0M)\n\n[Adding a remote schema ](https://youtu.be/01t4t2t4q1c)\n\n## Quickstart\n\nThe fastest way to try remote schema out is via Heroku.\n\n1. Click on the following button to deploy GraphQL Engine on Heroku with the free Postgres add-on:\n\n    [![Deploy to Heroku](https://www.herokucdn.com/deploy/button.svg)](https://heroku.com/deploy?template=https://github.com/hasura/graphql-engine-heroku)\n\n2. Open the Hasura console\n\n   Visit `https://<app-name>.herokuapp.com` (*replace \\<app-name\\> with your app name*) to open the admin console.\n\n3. Merge your first remote schema and query it\n\n   In the admin console, open the ``Remote Schemas`` tab and click on the ``Add`` button. Fill in the following details:\n   * Remote Schema name: ``countries`` (*an alias for this remote schema*).\n   * GraphQL server URL: ``https://countries.trevorblades.com/`` (*a public GraphQL API that we'll use to quickly check out this feature; maintained by [@trevorblades](https://github.com/trevorblades)*. \n   * Ignore the remaining configuration settings and click on the ``Add Remote Schema`` button.\n\n   Head to the ``GraphiQL` tab and run the following query (*paste it in the query window on the left and click the* ▶️ *(play) button*):\n\n   ```graphql\n   {\n      countries {\n        emoji\n        name\n        languages {\n          name\n          native\n        }\n      }\n   }\n   ```\n\n   You can explore the GraphQL types from the remote schema using the ``Docs`` explorer in the top right corner of the ``GraphiQL`` interface.\n\n## Boilerplates\n\nBoilerplates for custom GraphQL servers in popular languages/frameworks are available.\n\n* [Regular boilerplates](community/boilerplates/graphql-servers) that can be deployed anywhere.\n* [Serverless boilerplates](https://github.com/hasura/graphql-serverless) that can be deployed on serverless platforms like AWS Lambda, etc.\n\nPlease note that boilerplates for more languages, frameworks, serverless platforms, etc. are being iterated upon and community contributions are very welcome. \n\n\n## Caveats\n\n**Current limitations**:\n\n* Nomenclature: Type names and node names need to be unique across all merged schemas (case-sensitive match). In the next few iterations, support for merging types with the same name and structure will be available.\n* Nodes from different GraphQL servers cannot be used in the same query/mutation. All top-level nodes have to be from the same GraphQL server.\n* Subscriptions on remote GraphQL server are not supported.\n\nThese limitations will be addressed in upcoming versions.\n\n## Documentation\n\nRead the complete [documentation](https://hasura.io/docs/latest/graphql/core/remote-schemas/index.html).\n\n## Translations\n\nThis document is available in the following translations:\n\n- [French :fr:](translations/remote-schemas.french.md)\n- [Hindi  :india:](translations/remote-schemas.hindi.md)\n"
        },
        {
          "name": "rfcs",
          "type": "tree",
          "content": null
        },
        {
          "name": "sample.hie.yaml",
          "type": "blob",
          "size": 1.4169921875,
          "content": "cradle:\n  cabal:\n    - path: \"./server/lib/dc-api/src\"\n      component: \"dc-api:lib:dc-api\"\n    - path: \"./server/lib/dc-api/test\"\n      component: \"dc-api:test:tests-dc-api\"\n\n    - path: \"./server/src-lib\"\n      component: \"graphql-engine:lib:graphql-engine\"\n    - path: \"./server/src-exec\"\n      component: \"graphql-engine:exe:graphql-engine\"\n    - path: \"./server/src-test\"\n      component: \"graphql-engine:test:graphql-engine-tests\"\n\n    - path: \"./server/test-mssql\"\n      component: \"graphql-engine:test:graphql-engine-test-mssql\"\n    - path: \"./server/test-postgres\"\n      component: \"graphql-engine:test:graphql-engine-test-postgres\"\n\n    - path: \"./server/src-bench-cache\"\n      component: \"graphql-engine:bench:cache\"\n    - path: \"server/lib/api-tests\"\n      component: \"api-tests:exe:api-tests\"\n\n    - path: \"server/src-emit-metadata-openapi\"\n      component: \"graphql-engine:exe:emit-metadata-openapi\"\n\n    - path: \"server/lib/aeson-ordered/src\"\n      component: \"aeson-ordered:lib:aeson-ordered\"\n\n    - path: \"server/lib/hasura-error-message/src\"\n      component: \"hasura-error-message:lib:hasura-error-message\"\n    - path: \"server/lib/hasura-error-message/test\"\n      component: \"hasura-error-message:test:hasura-error-message-tests\"\n\n    - path: \"server/lib/schema-parsers/src\"\n      component: \"schema-parsers:lib:schema-parsers\"\n    - path: \"server/lib/schema-parsers/test\"\n      component: \"schema-parsers:test:schema-parser-tests\"\n\n"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "server",
          "type": "tree",
          "content": null
        },
        {
          "name": "shell.nix",
          "type": "blob",
          "size": 0.138671875,
          "content": "# See flake.nix for commentary before using this.\n{ system ? builtins.currentSystem }:\n(builtins.getFlake (toString ./.)).devShells.${system}\n"
        },
        {
          "name": "translations",
          "type": "tree",
          "content": null
        },
        {
          "name": "v3",
          "type": "tree",
          "content": null
        },
        {
          "name": "yarn.lock",
          "type": "blob",
          "size": 0.083984375,
          "content": "# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\n# yarn lockfile v1\n\n\n"
        }
      ]
    }
  ]
}