{
  "metadata": {
    "timestamp": 1736557720742,
    "page": 854,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjg4MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "medusajs/medusa",
      "stars": 27018,
      "defaultBranch": "develop",
      "files": [
        {
          "name": ".changeset",
          "type": "tree",
          "content": null
        },
        {
          "name": ".eslintignore",
          "type": "blob",
          "size": 0.91,
          "content": "/docs\n/docs-util\n/www\ntypedoc.*\njest*\n\npackages/*\n# List of packages to Lint\n!packages/medusa\n!packages/admin-ui\n!packages/admin\n!packages/admin-next\n!packages/admin-next/dashboard\n!packages/medusa-payment-stripe\n!packages/medusa-payment-paypal\n!packages/event-bus-redis\n!packages/event-bus-local\n!packages/medusa-plugin-meilisearch\n!packages/medusa-plugin-algolia\n!packages/inventory\n!packages/stock-location\n!packages/cache-redis\n!packages/cache-inmemory\n!packages/create-medusa-app\n!packages/product\n!packages/locking\n!packages/orchestration\n!packages/workflows-sdk\n!packages/core-flows\n!packages/types\n!packages/medusa-react\n!packages/workflow-engine-redis\n!packages/workflow-engine-inmemory\n!packages/fulfillment\n!packages/fulfillment-manual\n!packages/locking-postgres\n!packages/locking-redis\n!packages/index\n\n!packages/framework\n\n\n**/models/*\n**/scripts/*\n**/dist/*\n**/node_modules/*\n**/migrations/*\n**/__mocks__/*\n\n.eslintrc.js\n"
        },
        {
          "name": ".eslintrc.js",
          "type": "blob",
          "size": 8.85,
          "content": "module.exports = {\n  root: true,\n  parserOptions: {\n    requireConfigFile: false,\n    ecmaFeatures: {\n      experimentalDecorators: true,\n    },\n  },\n  plugins: [\"prettier\"],\n  extends: [\"eslint:recommended\", \"google\", \"plugin:prettier/recommended\"],\n  rules: {\n    curly: [\"error\", \"all\"],\n    \"new-cap\": \"off\",\n    \"require-jsdoc\": \"off\",\n    \"no-unused-expressions\": \"off\",\n    \"no-unused-vars\": \"off\",\n    camelcase: \"off\",\n    \"no-invalid-this\": \"off\",\n    \"max-len\": [\n      \"error\",\n      {\n        code: 80,\n        ignoreStrings: true,\n        ignoreRegExpLiterals: true,\n        ignoreComments: true,\n        ignoreTrailingComments: true,\n        ignoreUrls: true,\n        ignoreTemplateLiterals: true,\n      },\n    ],\n    semi: [\"error\", \"never\"],\n    quotes: [\n      \"error\",\n      \"double\",\n      {\n        allowTemplateLiterals: true,\n      },\n    ],\n    \"comma-dangle\": [\n      \"error\",\n      {\n        arrays: \"always-multiline\",\n        objects: \"always-multiline\",\n        imports: \"always-multiline\",\n        exports: \"always-multiline\",\n        functions: \"never\",\n      },\n    ],\n    \"object-curly-spacing\": [\"error\", \"always\"],\n    \"arrow-parens\": [\"error\", \"always\"],\n    \"linebreak-style\": 0,\n    \"no-confusing-arrow\": [\n      \"error\",\n      {\n        allowParens: false,\n      },\n    ],\n    \"space-before-function-paren\": [\n      \"error\",\n      {\n        anonymous: \"always\",\n        named: \"never\",\n        asyncArrow: \"always\",\n      },\n    ],\n    \"space-infix-ops\": \"error\",\n    \"eol-last\": [\"error\", \"always\"],\n  },\n  env: {\n    es6: true,\n    node: true,\n    jest: true,\n  },\n  overrides: [\n    {\n      files: [\"*.ts\"],\n      plugins: [\"@typescript-eslint/eslint-plugin\"],\n      extends: [\"plugin:@typescript-eslint/recommended\"],\n      parser: \"@typescript-eslint/parser\",\n      parserOptions: {\n        project: [\n          \"./packages/medusa/tsconfig.json\",\n\n          \"./packages/admin/dashboard/tsconfig.json\",\n          \"./packages/admin/admin-sdk/tsconfig.json\",\n          \"./packages/admin/admin-shared/tsconfig.json\",\n          \"./packages/admin/admin-bundler/tsconfig.json\",\n          \"./packages/admin/admin-vite-plugin/tsconfig.json\",\n\n          \"./packages/cli/create-medusa-app/tsconfig.json\",\n          \"./packages/cli/medusa-cli/tsconfig.spec.json\",\n          \"./packages/cli/oas/medusa-oas-cli/tsconfig.spec.json\",\n\n          \"./packages/core/orchestration/tsconfig.json\",\n          \"./packages/core/workflows-sdk/tsconfig.spec.json\",\n          \"./packages/core/modules-sdk/tsconfig.json\",\n          \"./packages/core/js-sdk/tsconfig.json\",\n          \"./packages/core/types/tsconfig.json\",\n          \"./packages/core/utils/tsconfig.spec.json\",\n          \"./packages/core/medusa-test-utils/tsconfig.json\",\n\n          \"./packages/modules/product/tsconfig.json\",\n          \"./packages/modules/event-bus-local/tsconfig.spec.json\",\n          \"./packages/modules/event-bus-redis/tsconfig.spec.json\",\n          \"./packages/modules/cache-redis/tsconfig.spec.json\",\n          \"./packages/modules/cache-inmemory/tsconfig.spec.json\",\n          \"./packages/modules/workflow-engine-redis/tsconfig.spec.json\",\n          \"./packages/modules/workflow-engine-inmemory/tsconfig.spec.json\",\n          \"./packages/modules/fulfillment/tsconfig.spec.json\",\n          \"./packages/modules/api-key/tsconfig.spec.json\",\n          \"./packages/modules/auth/tsconfig.spec.json\",\n          \"./packages/modules/cart/tsconfig.spec.json\",\n          \"./packages/modules/currency/tsconfig.spec.json\",\n          \"./packages/modules/index/tsconfig.spec.json\",\n          \"./packages/modules/customer/tsconfig.spec.json\",\n          \"./packages/modules/file/tsconfig.spec.json\",\n          \"./packages/modules/inventory-next/tsconfig.spec.json\",\n          \"./packages/modules/stock-location-next/tsconfig.spec.json\",\n          \"./packages/modules/order/tsconfig.spec.json\",\n          \"./packages/modules/payment/tsconfig.spec.json\",\n          \"./packages/modules/pricing/tsconfig.spec.json\",\n          \"./packages/modules/promotion/tsconfig.spec.json\",\n          \"./packages/modules/region/tsconfig.spec.json\",\n          \"./packages/modules/sales-channel/tsconfig.spec.json\",\n          \"./packages/modules/store/tsconfig.spec.json\",\n          \"./packages/modules/tax/tsconfig.spec.json\",\n          \"./packages/modules/workflow-engine-inmemory/tsconfig.spec.json\",\n          \"./packages/modules/workflow-engine-redis/tsconfig.spec.json\",\n          \"./packages/modules/link-modules/tsconfig.spec.json\",\n          \"./packages/modules/user/tsconfig.spec.json\",\n          \"./packages/modules/locking/tsconfig.spec.json\",\n\n          \"./packages/modules/providers/file-local/tsconfig.spec.json\",\n          \"./packages/modules/providers/file-s3/tsconfig.spec.json\",\n          \"./packages/modules/providers/fulfillment-manual/tsconfig.spec.json\",\n          \"./packages/modules/providers/payment-stripe/tsconfig.spec.json\",\n          \"./packages/modules/providers/locking-postgres/tsconfig.spec.json\",\n          \"./packages/modules/providers/locking-redis/tsconfig.spec.json\",\n\n          \"./packages/framework/tsconfig.json\",\n        ],\n      },\n      rules: {\n        \"valid-jsdoc\": \"off\",\n        \"@typescript-eslint/no-non-null-assertion\": \"off\",\n        \"@typescript-eslint/no-floating-promises\": \"error\",\n        \"@typescript-eslint/await-thenable\": \"error\",\n        \"@typescript-eslint/promise-function-async\": \"error\",\n        \"@typescript-eslint/keyword-spacing\": \"error\",\n        \"@typescript-eslint/space-before-function-paren\": [\n          \"error\",\n          {\n            anonymous: \"always\",\n            named: \"never\",\n            asyncArrow: \"always\",\n          },\n        ],\n        \"@typescript-eslint/space-infix-ops\": \"error\",\n\n        // --- Rules to be fixed\n        \"@typescript-eslint/ban-ts-comment\": \"off\",\n        \"@typescript-eslint/no-unused-vars\": \"off\",\n        \"@typescript-eslint/no-explicit-any\": \"off\",\n        \"@typescript-eslint/explicit-function-return-type\": \"off\",\n        \"@typescript-eslint/ban-types\": \"off\",\n        \"@typescript-eslint/no-var-requires\": \"off\",\n      },\n    },\n    {\n      files: [\"packages/design-system/ui/**/*.{ts,tsx}\"],\n      extends: [\n        \"plugin:react/recommended\",\n        \"plugin:storybook/recommended\",\n        \"plugin:react-hooks/recommended\",\n        \"plugin:@typescript-eslint/recommended\",\n      ],\n      plugins: [\"@typescript-eslint\"],\n      rules: {\n        \"react/no-children-prop\": \"off\",\n        \"react-hooks/exhaustive-deps\": \"warn\",\n        \"react/prop-types\": \"off\",\n        \"@typescript-eslint/no-explicit-any\": \"off\",\n        \"@typescript-eslint/no-unused-vars\": [\n          \"error\",\n          { argsIgnorePattern: \"^_\" },\n        ],\n      },\n      settings: {\n        react: {\n          version: \"detect\",\n        },\n      },\n      parser: \"@typescript-eslint/parser\",\n      parserOptions: {\n        project: \"./packages/design-system/ui/tsconfig.json\",\n      },\n    },\n    {\n      files: [\"packages/design-system/icons/**/*.{ts,tsx}\"],\n      extends: [\n        \"plugin:react/recommended\",\n        \"plugin:@typescript-eslint/recommended\",\n      ],\n      plugins: [\"@typescript-eslint\"],\n      rules: {\n        \"react/no-children-prop\": \"off\",\n        \"react/prop-types\": \"off\",\n        \"@typescript-eslint/no-explicit-any\": \"off\",\n        \"@typescript-eslint/no-unused-vars\": [\n          \"error\",\n          { argsIgnorePattern: \"^_\" },\n        ],\n      },\n      settings: {\n        react: {\n          version: \"detect\",\n        },\n      },\n      parser: \"@typescript-eslint/parser\",\n      parserOptions: {\n        project: \"./packages/design-system/icons/tsconfig.json\",\n      },\n    },\n    {\n      files: [\n        \"packages/admin/dashboard/**/*.ts\",\n        \"packages/admin/dashboard/**/*.tsx\",\n      ],\n      plugins: [\"unused-imports\", \"react-refresh\"],\n      extends: [\n        \"plugin:react/recommended\",\n        \"plugin:react/jsx-runtime\",\n        \"plugin:react-hooks/recommended\",\n      ],\n      parser: \"@typescript-eslint/parser\",\n      parserOptions: {\n        ecmaFeatures: {\n          jsx: true,\n        },\n        ecmaVersion: 2018, // Allows for the parsing of modern ECMAScript features\n        sourceType: \"module\", // Allows for the use of imports\n        project: \"./packages/admin/dashboard/tsconfig.json\",\n      },\n      globals: {\n        __BASE__: \"readonly\",\n      },\n      env: {\n        browser: true,\n      },\n      rules: {\n        \"prettier/prettier\": \"error\",\n        \"react/prop-types\": \"off\",\n        \"new-cap\": \"off\",\n        \"require-jsdoc\": \"off\",\n        \"valid-jsdoc\": \"off\",\n        \"react-refresh/only-export-components\": [\n          \"warn\",\n          { allowConstantExport: true },\n        ],\n        \"no-unused-expressions\": \"off\",\n        \"unused-imports/no-unused-imports\": \"error\",\n        \"unused-imports/no-unused-vars\": [\n          \"warn\",\n          {\n            vars: \"all\",\n            varsIgnorePattern: \"^_\",\n            args: \"after-used\",\n            argsIgnorePattern: \"^_\",\n          },\n        ],\n      },\n    },\n  ],\n}\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.09,
          "content": "*.mdx linguist-detectable=false\n*.md linguist-detectable=false\n*.yaml linguist-detectable=false"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.3,
          "content": ".env\nnode_modules\n*yarn-error.log\n.pnp.*\n.yarn/*\n!.yarn/patches\n!.yarn/plugins\n!.yarn/releases\n!.yarn/sdks\n!.yarn/versions\n\npackages/**/.yarn/*\nintegration-tests/**/.yarn/*\nwww/**/.yarn/*\n\n.DS_Store\n\n.eslintcache\n\n.idea\n.turbo\nbuild/**\ndist/**\n**/dist\n**/stats\n.favorites.json\n.vscode\n\n**/tsconfig.tsbuildinfo\n"
        },
        {
          "name": ".prettierrc",
          "type": "blob",
          "size": 0.3,
          "content": "{\n  \"endOfLine\": \"auto\",\n  \"semi\": false,\n  \"singleQuote\": false,\n  \"tabWidth\": 2,\n  \"trailingComma\": \"es5\",\n  \"arrowParens\": \"always\",\n  \"overrides\": [\n    {\n      \"files\": \"./packages/admin-ui/**/*.{js,jsx,ts,tsx}\",\n      \"options\": {\n        \"plugins\": [\"prettier-plugin-tailwindcss\"]\n      }\n    }\n  ]\n}\n"
        },
        {
          "name": ".vale.ini",
          "type": "blob",
          "size": 0.29,
          "content": "StylesPath = www/vale/styles\n\nMinAlertLevel = suggestion\nVocab = Base\n\nPackages = write-good\n\n[*.{md,mdx}]\nBasedOnStyles = Vale, write-good, docs\nVale.Spelling=warning\nwrite-good.E-Prime=No\nwrite-good.So=No\nwrite-good.ThereIs=No\nVale.Terms=No\nBlockIgnores={/\\* [\\s\\S]+ \\*/}\n\n[formats]\nmdx = md"
        },
        {
          "name": ".yarn",
          "type": "tree",
          "content": null
        },
        {
          "name": ".yarnrc.yml",
          "type": "blob",
          "size": 0.35,
          "content": "checksumBehavior: ignore\n\ncompressionLevel: 0\n\nnmMode: hardlinks-global\n\nnodeLinker: node-modules\n\nplugins:\n  - path: .yarn/plugins/@yarnpkg/plugin-workspace-tools.cjs\n    spec: \"@yarnpkg/plugin-workspace-tools\"\n  - path: .yarn/plugins/@yarnpkg/plugin-interactive-tools.cjs\n    spec: \"@yarnpkg/plugin-interactive-tools\"\n\nyarnPath: .yarn/releases/yarn-3.2.1.cjs\n"
        },
        {
          "name": "CHANGELOG.md",
          "type": "blob",
          "size": 0.48,
          "content": "# Change Log\n\nAll notable changes to this project will be documented in this file.\nSee [Conventional Commits](https://conventionalcommits.org) for commit guidelines.\n\n## [1.0.10](https://github.com/medusajs/medusa/compare/v1.0.9...v1.0.10) (2020-09-09)\n\n\n### Bug Fixes\n\n* ignore files ([eca1e00](https://github.com/medusajs/medusa/commit/eca1e006a77472c9402cd85bb879f08134af200b))\n* updates license ([db519fb](https://github.com/medusajs/medusa/commit/db519fbaa6f8ad02c19cbecba5d4f28ba1ee81aa))\n"
        },
        {
          "name": "CODEOWNERS",
          "type": "blob",
          "size": 0.66,
          "content": "# All files not owned by other teams must be reviewed by the core team\n*                                               @medusajs/core \npackage.json                                    @medusajs/engineering\nyarn.lock                                       @medusajs/engineering\n/.changeset/                                    @medusajs/engineering\n/packages/                                      @medusajs/engineering\n/integration-tests/                             @medusajs/engineering\n/docs-util/                                     @medusajs/docs\n/www/                                           @medusajs/docs\n/packages/design-system/                        @medusajs/ui\n"
        },
        {
          "name": "CONTRIBUTING.md",
          "type": "blob",
          "size": 5.13,
          "content": "# Contributing\n\nThank you for considering contributing to Medusa! This document will outline how to submit changes to this repository and which conventions to follow. If you are ever in doubt about anything we encourage you to reach out either by submitting an issue here or reaching out [via Discord](https://discord.gg/xpCwq3Kfn8).\n\nIf you're contributing to our documentation, make sure to also check out the [contribution guidelines on our documentation website](https://docs.medusajs.com/resources/contribution-guidelines/docs).\n\n### Important\nOur core maintainers prioritize pull requests (PRs) from within our organization. External contributions are regularly triaged, but not at any fixed cadence. It varies depending on how busy the maintainers are. This is applicable to all types of PRs, so we kindly ask for your patience.\n\nIf you, as a community contributor, wish to work on more extensive features, please reach out to CODEOWNERS instead of directly submitting a PR with all the changes. This approach saves us both time, especially if the PR is not accepted (which will be the case if it does not align with our roadmap), and helps us effectively review and evaluate your contribution if it is accepted.\n\n## Prerequisites\n\n- **You're familiar with GitHub Issues and Pull Requests**\n- **You've read the [docs](https://docs.medusajs.com).**\n- **You've setup a test project with `medusa new`**\n\n## Issues before PRs\n\n1. Before you start working on a change please make sure that there is an issue for what you will be working on. You can either find and [existing issue](https://github.com/medusajs/medusa/issues) or [open a new issue](https://github.com/medusajs/medusa/issues/new) if none exists. Doing this makes sure that others can contribute with thoughts or suggest alternatives, ultimately making sure that we only add changes that make\n\n2. When you are ready to start working on a change you should first [fork the Medusa repo](https://help.github.com/en/github/getting-started-with-github/fork-a-repo) and [branch out](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/creating-and-deleting-branches-within-your-repository) from the `develop` branch.\n3. Make your changes.\n4. [Open a pull request towards the develop branch in the Medusa repo](https://help.github.com/en/github/collaborating-with-issues-and-pull-requests/creating-a-pull-request-from-a-fork). Within a couple of days a Medusa team member will review, comment and eventually approve your PR.\n\n## Workflow\n\n### Branches\n\nThere are currently two base branches:\n- `develop` - development of Medusa 2.0\n- `v1.x` - development of Medusa v1.x\n\nNote, if you wish to patch v1.x you should use `v1.x` as the base branch for your pull request. This is not the default when you clone the repository.\n\nAll changes should be part of a branch and submitted as a pull request - your branches should be prefixed with one of:\n\n- `fix/` for bug fixes\n- `feat/` for features\n- `docs/` for documentation changes\n\n### Commits\n\nStrive towards keeping your commits small and isolated - this helps the reviewer understand what is going on and makes it easier to process your requests.\n\n### Pull Requests\n\n**Base branch**\n\nIf you wish to patch v1.x your base branch should be `v1.x`. \n\nIf your changes should result in a new version of Medusa, you will need to generate a **changelog**. Follow [this guide](https://github.com/changesets/changesets/blob/main/docs/adding-a-changeset.md) on how to generate a changeset.\n\nFinally, submit your branch as a pull request. Your pull request should be opened against the `develop` branch in the main Medusa repo.\n\nIn your PR's description you should follow the structure:\n\n- **What** - what changes are in this PR\n- **Why** - why are these changes relevant\n- **How** - how have the changes been implemented\n- **Testing** - how has the changes been tested or how can the reviewer test the feature\n\nWe highly encourage that you do a self-review prior to requesting a review. To do a self review click the review button in the top right corner, go through your code and annotate your changes. This makes it easier for the reviewer to process your PR.\n\n#### Merge Style\n\nAll pull requests are squashed and merged.\n\n### Testing\n\nAll PRs should include tests for the changes that are included. We have two types of tests that must be written:\n\n- **Unit tests** found under `packages/*/src/services/__tests__` and `packages/*/src/api/routes/*/__tests__`\n- **Integration tests** found in `integration-tests/*/__tests__`\n\nCheck out our [local development documentation](https://docs.medusajs.com/usage/local-development) to learn how to test your changes both in the Medusa repository and in a local server.\n\n### Documentation\n\n- We generally encourage to document your changes through comments in your code.\n- If you alter user-facing behaviour you must provide documentation for such changes.\n- All methods and endpoints should be documented using [JSDoc](https://jsdoc.app/) and [`swagger-inline`](https://www.npmjs.com/package/swagger-inline)\n\n### Release\n\nThe Medusa team will regularly create releases from two release branches:\n- `develop` - preview releases of Medusa 2.0\n- `v1.x` - official releases of Medusa 1.x\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 1.05,
          "content": "The MIT License (MIT)\n\nCopyright (c) 2021 Medusajs\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.3,
          "content": "<p align=\"center\">\n  <a href=\"https://www.medusajs.com\">\n  <picture>\n    <source media=\"(prefers-color-scheme: dark)\" srcset=\"https://user-images.githubusercontent.com/59018053/229103275-b5e482bb-4601-46e6-8142-244f531cebdb.svg\">\n    <source media=\"(prefers-color-scheme: light)\" srcset=\"https://user-images.githubusercontent.com/59018053/229103726-e5b529a3-9b3f-4970-8a1f-c6af37f087bf.svg\">\n    <img alt=\"Medusa logo\" src=\"https://user-images.githubusercontent.com/59018053/229103726-e5b529a3-9b3f-4970-8a1f-c6af37f087bf.svg\">\n    </picture>\n  </a>\n</p>\n<h1 align=\"center\">\n  Medusa\n</h1>\n\n<h4 align=\"center\">\n  <a href=\"https://docs.medusajs.com\">Documentation</a> |\n  <a href=\"https://www.medusajs.com\">Website</a>\n</h4>\n\n<p align=\"center\">\n  Building blocks for digital commerce\n</p>\n<p align=\"center\">\n  <a href=\"https://github.com/medusajs/medusa/blob/develop/LICENSE\">\n    <img src=\"https://img.shields.io/badge/license-MIT-blue.svg\" alt=\"Medusa is released under the MIT license.\" />\n  </a>\n  <a href=\"https://github.com/medusajs/medusa/blob/develop/CONTRIBUTING.md\">\n    <img src=\"https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat\" alt=\"PRs welcome!\" />\n  </a>\n <p align=\"center\">\n  <a href=\"https://twitter.com/intent/follow?screen_name=medusajs\">\n    <img src=\"https://img.shields.io/twitter/follow/medusajs.svg?label=Follow%20@medusajs\" alt=\"Follow @medusajs\" />\n  <a href=\"https://discord.gg/medusajs\">\n    <img src=\"https://img.shields.io/badge/chat-on%20discord-7289DA.svg\" alt=\"Discord Chat\" />\n  </a>\n</p>\n\n## Getting Started\n\nVisit the [Documentation](https://docs.medusajs.com/learn) to set up a Medusa application.\n\n## What is Medusa\n\nMedusa is an ecommerce platform with a built-in framework for customization that allows you to build custom commerce applications without reinventing core commerce logic. The framework and modules can be used to build advanced B2B or DTC ecommerce stores, marketplaces, PoS systems, service businesses, or any product that needs foundational commerce primitives. All commerce modules are open-source and freely available on npm.\n\nLearn more about [Medusa’s architecture](https://docs.medusajs.com/learn/advanced-development/architecture/overview) and [commerce modules](https://docs.medusajs.com/resources/commerce-modules) in the Docs.\n\n## Upgrades & Integrations\n\nFollow the [Release Notes](https://github.com/medusajs/medusa/releases) to keep your Medusa project up-to-date.\n\nCheck out all [available Medusa integrations](https://docs.medusajs.com/resources/integrations).\n\n## Community & Contributions\n\nThe community and core team are available in [GitHub Discussions](https://github.com/medusajs/medusa/discussions), where you can ask for support, discuss roadmap, and share ideas.\n\nOur [Contribution Guide](https://github.com/medusajs/medusa/blob/develop/CONTRIBUTING.md) describes how to contribute to the codebase and Docs.\n\nJoin our [Discord server](https://discord.com/invite/medusajs) to meet other community members.\n\n## Other channels\n\n- [GitHub Issues](https://github.com/medusajs/medusa/issues)\n- [Community Discord](https://discord.gg/medusajs)\n- [Twitter](https://twitter.com/medusajs)\n- [LinkedIn](https://www.linkedin.com/company/medusajs)\n- [Medusa Blog](https://medusajs.com/blog/)\n\n## License\n\nLicensed under the [MIT License](https://github.com/medusajs/medusa/blob/develop/LICENSE).\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 1.83,
          "content": "# Security Policy\n\n| Contact               |\n|-----------------------|\n| security@medusajs.com |\n\n\nAt Medusa, we consider the security of our systems a top priority. But no matter how much effort we put into system security, there can still be vulnerabilities present.\n\nIf you discover a vulnerability, we would like to know about it so we can take steps to address it as quickly as possible. We would like to ask you to help us better protect our users and our systems.\n\n## Reporting vulnerabilities\n\n- E-mail your findings to security@medusajs.com.\n- Do not take advantage of the vulnerability or problem you have discovered.\n- Do not reveal the problem to others until it has been resolved.\n- Do not use attacks on physical security, social engineering, distributed denial of service, spam or applications of third parties, and\n- Do provide sufficient information to reproduce the problem, so we will be able to resolve it as quickly as possible. Usually a short description of the vulnerability will be sufficient, but complex vulnerabilities may require further explanation.\n\nWhat we promise:\n\n- We will respond to your report within 3 business days with our evaluation of the report and an expected resolution date,\n- If you have followed the instructions above, we will not take any legal action against you in regard to the report,\n- We will handle your report with strict confidentiality, and not pass on your personal details to third parties without your permission,\n- We will keep you informed of the progress towards resolving the problem,\n- In the public information concerning the problem reported, we will give your name as the discoverer of the problem (unless you desire otherwise), and\n\nWe strive to resolve all problems as quickly as possible, and we would like to play an active role in the ultimate publication on the problem after it is resolved.\n"
        },
        {
          "name": "_tsconfig.base.json",
          "type": "blob",
          "size": 0.73,
          "content": "{\n  \"compilerOptions\": {\n    \"lib\": [\"ES2021\"],\n    \"target\": \"ES2021\",\n    \"outDir\": \"${configDir}/dist\",\n    \"esModuleInterop\": true,\n    \"declaration\": true,\n    \"declarationMap\": true,\n    \"noUnusedLocals\": true,\n    \"module\": \"Node16\",\n    \"moduleResolution\": \"Node16\",\n    \"emitDecoratorMetadata\": true,\n    \"experimentalDecorators\": true,\n    \"sourceMap\": true,\n    \"noImplicitReturns\": true,\n    \"resolveJsonModule\": true,\n    \"forceConsistentCasingInFileNames\": true,\n    \"strictNullChecks\": true,\n    \"strictFunctionTypes\": true,\n    \"noImplicitThis\": true,\n    \"allowJs\": true,\n    \"skipLibCheck\": true,\n    \"incremental\": false\n  },\n  \"include\": [\"${configDir}/src\"],\n  \"exclude\": [\"${configDir}/dist\", \"${configDir}/node_modules\"]\n}\n"
        },
        {
          "name": "define_jest_config.js",
          "type": "blob",
          "size": 0.74,
          "content": "module.exports = function defineJestConfig(config) {\n  return {\n    transform: {\n      \"^.+\\\\.[jt]s$\": [\n        \"@swc/jest\",\n        {\n          jsc: {\n            parser: {\n              syntax: \"typescript\",\n              decorators: true,\n            },\n            transform: {\n              useDefineForClassFields: false,\n              legacyDecorator: true,\n              decoratorMetadata: true,\n            },\n            target: \"ES2021\",\n          },\n          sourceMaps: \"inline\",\n        },\n      ],\n    },\n    modulePathIgnorePatterns: [`dist/`],\n    testPathIgnorePatterns: [`dist/`, `node_modules/`],\n    transformIgnorePatterns: [\"node_modules/\"],\n    testEnvironment: `node`,\n    moduleFileExtensions: [`js`, `ts`],\n    ...config,\n  }\n}\n"
        },
        {
          "name": "integration-tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "jest.config.js",
          "type": "blob",
          "size": 2.12,
          "content": "const path = require(`path`)\nconst glob = require(`glob`)\nconst fs = require(`fs`)\n\nconst pkgs = [\n  glob.sync(`./packages/*`).map((p) => p.replace(/^\\./, `<rootDir>`)),\n  glob.sync(`./packages/cli/*`).map((p) => p.replace(/^\\./, `<rootDir>`)),\n  glob.sync(`./packages/core/*`).map((p) => p.replace(/^\\./, `<rootDir>`)),\n  glob.sync(`./packages/modules/*`).map((p) => p.replace(/^\\./, `<rootDir>`)),\n  glob\n    .sync(`./packages/modules/providers/*`)\n    .map((p) => p.replace(/^\\./, `<rootDir>`)),\n].flat(Infinity)\n\nconst reMedusa = /medusa$/\nconst medusaDir = pkgs.find((p) => reMedusa.exec(p))\nconst medusaBuildDirs = [`dist`].map((dir) => path.join(medusaDir, dir))\nconst builtTestsDirs = pkgs\n  .filter((p) => fs.existsSync(path.join(p, `src`)))\n  .map((p) => path.join(p, `__tests__`))\nconst distDirs = pkgs.map((p) => path.join(p, `dist`))\nconst ignoreDirs = [].concat(\n  medusaBuildDirs,\n  builtTestsDirs,\n  distDirs,\n  \"<rootDir>/packages/medusa-react/*\"\n)\n\nconst coverageDirs = pkgs.map((p) => path.join(p, `src/**/*.js`))\nconst useCoverage = !!process.env.GENERATE_JEST_REPORT\nconst projects = pkgs.map((pkg) => pkg.concat(\"/jest.config.js\"))\n\nmodule.exports = {\n  notify: true,\n  verbose: true,\n  roots: [\"<rootDir>\"],\n  projects: [\n    \"<rootDir>/packages/*/jest.config.js\",\n    \"<rootDir>/packages/cli/*/jest.config.js\",\n    \"<rootDir>/packages/core/*/jest.config.js\",\n    \"<rootDir>/packages/modules/*/jest.config.js\",\n    \"<rootDir>/packages/modules/providers/*/jest.config.js\",\n  ],\n  modulePathIgnorePatterns: ignoreDirs,\n  coveragePathIgnorePatterns: ignoreDirs,\n  testPathIgnorePatterns: [\n    `<rootDir>/examples/`,\n    `<rootDir>/dist/`,\n    `<rootDir>/node_modules/`,\n    `__tests__/fixtures`,\n  ],\n  //moduleNameMapper: {\n  //  \"^highlight.js$\": `<rootDir>/node_modules/highlight.js/lib/index.js`,\n  //},\n  //snapshotSerializers: [`jest-serializer-path`],\n  collectCoverageFrom: coverageDirs,\n  //reporters: process.env.CI\n  //  ? [[`jest-silent-reporter`, { useDots: true }]].concat(\n  //      useCoverage ? `jest-junit` : []\n  //    )\n  //  : [`default`].concat(useCoverage ? `jest-junit` : []),\n  // setupFiles: [`<rootDir>/.jestSetup.js`],\n}\n"
        },
        {
          "name": "package.json",
          "type": "blob",
          "size": 3.38,
          "content": "{\n  \"name\": \"root\",\n  \"private\": true,\n  \"workspaces\": {\n    \"packages\": [\n      \"packages/medusa\",\n      \"packages/medusa-test-utils\",\n      \"packages/modules/*\",\n      \"packages/modules/providers/*\",\n      \"packages/core/*\",\n      \"packages/framework/*\",\n      \"packages/cli/*\",\n      \"packages/cli/oas/*\",\n      \"packages/*\",\n      \"packages/admin/*\",\n      \"packages/design-system/*\",\n      \"packages/generated/*\",\n      \"integration-tests/**/*\"\n    ]\n  },\n  \"devDependencies\": {\n    \"@typescript-eslint/eslint-plugin\": \"^6.19.0\",\n    \"@typescript-eslint/parser\": \"^6.19.0\",\n    \"axios\": \"^0.21.4\",\n    \"axios-mock-adapter\": \"^1.19.0\",\n    \"cross-env\": \"^7.0.3\",\n    \"eslint\": \"^8.23.0\",\n    \"eslint-config-google\": \"^0.14.0\",\n    \"eslint-config-prettier\": \"^8.5.0\",\n    \"eslint-plugin-prettier\": \"^4.2.1\",\n    \"eslint-plugin-react\": \"^7.31.11\",\n    \"eslint-plugin-react-hooks\": \"^4.6.0\",\n    \"eslint-plugin-react-refresh\": \"^0.4.5\",\n    \"eslint-plugin-storybook\": \"^0.6.12\",\n    \"eslint-plugin-unused-imports\": \"^2.0.0\",\n    \"express\": \"^4.17.1\",\n    \"get-port\": \"^5.1.1\",\n    \"glob\": \"^11.0.0\",\n    \"import-from\": \"^3.0.0\",\n    \"jest\": \"^29.7.0\",\n    \"lint-staged\": \"^11.2.6\",\n    \"microbundle\": \"^0.13.3\",\n    \"pg-god\": \"^1.0.12\",\n    \"prettier\": \"^2.7.1\",\n    \"prettier-plugin-tailwindcss\": \"^0.2.3\",\n    \"resolve-cwd\": \"^3.0.0\",\n    \"ts-jest\": \"^29.1.1\",\n    \"ts-node\": \"^10.9.1\",\n    \"turbo\": \"^1.6.3\"\n  },\n  \"lint-staged\": {\n    \"*.{js,jsx,ts,tsx}\": \"yarn run lint\",\n    \"*.{md,yaml,yml}\": \"prettier --write\"\n  },\n  \"scripts\": {\n    \"build\": \"turbo run build --concurrency=50% --no-daemon\",\n    \"lint\": \"eslint --ignore-path .eslintignore --ext .js,.ts,.tsx .\",\n    \"lint:path\": \"eslint --ignore-path .eslintignore --ext .js,.ts,.tsx\",\n    \"prettier\": \"prettier\",\n    \"jest\": \"jest\",\n    \"test\": \"turbo run test --concurrency=50% --no-daemon --no-cache --force\",\n    \"test:chunk\": \"./scripts/run-workspace-unit-tests-in-chunks.sh\",\n    \"test:integration:packages\": \"turbo run test:integration --concurrency=1 --no-daemon --no-cache --force --filter='./packages/*' --filter='./packages/core/*' --filter='./packages/cli/*' --filter='./packages/modules/*' --filter='./packages/modules/providers/*'\",\n    \"test:integration:api\": \"turbo run test:integration:chunk --concurrency=50% --no-daemon --no-cache --force --filter=integration-tests-api\",\n    \"test:integration:http\": \"turbo run test:integration:chunk --concurrency=50% --no-daemon --no-cache --force --filter=integration-tests-http\",\n    \"test:integration:modules\": \"turbo run test:integration:chunk --concurrency=50% --no-daemon --no-cache --force --filter=integration-tests-modules\",\n    \"openapi:generate\": \"yarn ./packages/cli/oas/oas-github-ci run ci --with-full-file\",\n    \"medusa-oas\": \"yarn ./packages/cli/oas/medusa-oas-cli run medusa-oas\",\n    \"release:snapshot\": \"changeset publish --no-git-tags --snapshot --tag snapshot\",\n    \"release:next\": \"chgstangeset publish --no-git-tags --snapshot --tag next\",\n    \"version:next\": \"changeset version --snapshot next\",\n    \"release\": \"changeset publish\",\n    \"version\": \"changeset version && yarn install --no-immutable\"\n  },\n  \"dependencies\": {\n    \"@changesets/changelog-github\": \"^0.4.8\",\n    \"@changesets/cli\": \"^2.26.0\",\n    \"global\": \"^4.4.0\",\n    \"import-from\": \"^3.0.0\"\n  },\n  \"packageManager\": \"yarn@3.2.1\",\n  \"resolutions\": {\n    \"@redocly/cli/react\": \"^17.0.1\",\n    \"@redocly/cli/react-dom\": \"^17.0.1\",\n    \"pg\": \"8.11.3\"\n  }\n}\n"
        },
        {
          "name": "packages",
          "type": "tree",
          "content": null
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "turbo.json",
          "type": "blob",
          "size": 0.45,
          "content": "{\n  \"$schema\": \"https://turbo.build/schema.json\",\n  \"pipeline\": {\n    \"build\": {\n      \"dependsOn\": [\"^build\"],\n      \"outputs\": [\"!node_modules/**\", \"!src/**\", \"*/**\"]\n    },\n    \"test\": {\n      \"dependsOn\": [\"build\"],\n      \"outputs\": []\n    },\n    \"test:integration\": {\n      \"dependsOn\": [\"build\"],\n      \"outputs\": []\n    },\n    \"test:integration:chunk\": {\n      \"dependsOn\": [\"build\"],\n      \"outputs\": []\n    }\n  },\n  \"globalDependencies\": [\"turbo.json\"]\n}\n"
        },
        {
          "name": "www",
          "type": "tree",
          "content": null
        },
        {
          "name": "yarn.lock",
          "type": "blob",
          "size": 1132.01,
          "content": null
        }
      ]
    }
  ]
}