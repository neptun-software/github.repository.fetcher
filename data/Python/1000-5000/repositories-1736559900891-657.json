{
  "metadata": {
    "timestamp": 1736559900891,
    "page": 657,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjY2MA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "open-mmlab/mmtracking",
      "stars": 3621,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".circleci",
          "type": "tree",
          "content": null
        },
        {
          "name": ".dev_scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 1.3203125,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# C extensions\n*.so\n\n# Distribution / packaging\n.Python\nbuild/\ndevelop-eggs/\ndist/\ndownloads/\neggs/\n.eggs/\nlib/\nlib64/\nparts/\nsdist/\nvar/\nwheels/\n*.egg-info/\n.installed.cfg\n*.egg\nMANIFEST\n\n# PyInstaller\n#  Usually these files are written by a python script from a template\n#  before PyInstaller builds the exe, so as to inject date/other infos into it.\n*.manifest\n*.spec\n\n# Installer logs\npip-log.txt\npip-delete-this-directory.txt\n\n# Unit test / coverage reports\nhtmlcov/\n.tox/\n.coverage\n.coverage.*\n.cache\nnosetests.xml\ncoverage.xml\n*.cover\n.hypothesis/\n.pytest_cache/\n\n# Translations\n*.mo\n*.pot\n\n# Django stuff:\n*.log\nlocal_settings.py\ndb.sqlite3\n\n# Flask stuff:\ninstance/\n.webassets-cache\n\n# Scrapy stuff:\n.scrapy\n\n# Sphinx documentation\ndocs/en/_build/\ndocs/zh_cn/_build/\n\n# PyBuilder\ntarget/\n\n# Jupyter Notebook\n.ipynb_checkpoints\n\n# pyenv\n.python-version\n\n# celery beat schedule file\ncelerybeat-schedule\n\n# SageMath parsed files\n*.sage.py\n\n# Environments\n.env\n.venv\nenv/\nvenv/\nENV/\nenv.bak/\nvenv.bak/\n\n# Spyder project settings\n.spyderproject\n.spyproject\n\n# Rope project settings\n.ropeproject\n\n# mkdocs documentation\n/site\n\n# mypy\n.mypy_cache/\n\ndata\nckpts\n.vscode\n.idea\n.DS_Store\n\n# custom\n*.pkl\n*.pkl.json\n*.log.json\nwork_dirs/\nmmtrack/.mim\n\n# Pytorch\n*.pth\n*.py~\n*.sh~\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 1.337890625,
          "content": "repos:\n  - repo: https://github.com/PyCQA/flake8\n    rev: 4.0.1\n    hooks:\n      - id: flake8\n  - repo: https://github.com/PyCQA/isort\n    rev: 5.11.5\n    hooks:\n      - id: isort\n  - repo: https://github.com/pre-commit/mirrors-yapf\n    rev: v0.30.0\n    hooks:\n      - id: yapf\n  - repo: https://github.com/pre-commit/pre-commit-hooks\n    rev: v3.1.0\n    hooks:\n      - id: trailing-whitespace\n      - id: check-yaml\n      - id: end-of-file-fixer\n      - id: requirements-txt-fixer\n      - id: double-quote-string-fixer\n      - id: check-merge-conflict\n      - id: fix-encoding-pragma\n        args: [\"--remove\"]\n      - id: mixed-line-ending\n        args: [\"--fix=lf\"]\n  - repo: https://github.com/codespell-project/codespell\n    rev: v2.1.0\n    hooks:\n      - id: codespell\n  - repo: https://github.com/myint/docformatter\n    rev: v1.3.1\n    hooks:\n      - id: docformatter\n        args: [\"--in-place\", \"--wrap-descriptions\", \"79\"]\n  - repo: https://github.com/executablebooks/mdformat\n    rev: 0.7.9\n    hooks:\n      - id: mdformat\n        args: [\"--number\"]\n        additional_dependencies:\n          - mdformat-openmmlab\n          - mdformat_frontmatter\n          - linkify-it-py\n  - repo: https://github.com/open-mmlab/pre-commit-hooks\n    rev: v0.2.0\n    hooks:\n      - id: check-algo-readme\n      - id: check-copyright\n        args: [\"mmtrack\", \"tools\", \"tests\"]\n"
        },
        {
          "name": ".readthedocs.yml",
          "type": "blob",
          "size": 0.279296875,
          "content": "version: 2\n\nformats: all\n\npython:\n  version: 3.7\n  install:\n    - requirements: requirements/build.txt\n    - requirements: requirements/docs.txt\n    - requirements: requirements/runtime.txt\n    - requirements: requirements/readthedocs.txt\n    - requirements: requirements/mminstall.txt\n"
        },
        {
          "name": "CITATION.cff",
          "type": "blob",
          "size": 0.271484375,
          "content": "cff-version: 1.2.0\nmessage: \"If you use this software, please cite it as below.\"\nauthors:\n  - name: \"MMTracking Contributors\"\ntitle: \"OpenMMLab Video Perception Toolbox and Benchmark\"\ndate-released: 2021-01-04\nurl: \"https://github.com/open-mmlab/mmtracking\"\nlicense: Apache-2.0\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.123046875,
          "content": "Copyright 2020 Open-MMLab. All rights reserved.\n\n                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2020 Open-MMLab.\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "MANIFEST.in",
          "type": "blob",
          "size": 0.1572265625,
          "content": "include requirements/*.txt\ninclude mmtrack/.mim/model-index.yml\nrecursive-include mmtrack/.mim/configs *.py *.yml\nrecursive-include mmtrack/.mim/tools *.sh *.py\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 9.7802734375,
          "content": "<div align=\"center\">\n  <img src=\"resources/mmtrack-logo.png\" width=\"600\"/>\n  <div>&nbsp;</div>\n  <div align=\"center\">\n    <b><font size=\"5\">OpenMMLab website</font></b>\n    <sup>\n      <a href=\"https://openmmlab.com\">\n        <i><font size=\"4\">HOT</font></i>\n      </a>\n    </sup>\n    &nbsp;&nbsp;&nbsp;&nbsp;\n    <b><font size=\"5\">OpenMMLab platform</font></b>\n    <sup>\n      <a href=\"https://platform.openmmlab.com\">\n        <i><font size=\"4\">TRY IT OUT</font></i>\n      </a>\n    </sup>\n  </div>\n  <div>&nbsp;</div>\n\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/mmtrack)](https://pypi.org/project/mmtrack/)\n[![PyPI](https://img.shields.io/pypi/v/mmtrack)](https://pypi.org/project/mmtrack)\n[![docs](https://img.shields.io/badge/docs-latest-blue)](https://mmtracking.readthedocs.io/en/latest/)\n[![badge](https://github.com/open-mmlab/mmtracking/workflows/build/badge.svg)](https://github.com/open-mmlab/mmtracking/actions)\n[![codecov](https://codecov.io/gh/open-mmlab/mmtracking/branch/master/graph/badge.svg)](https://codecov.io/gh/open-mmlab/mmtracking)\n[![license](https://img.shields.io/github/license/open-mmlab/mmtracking.svg)](https://github.com/open-mmlab/mmtracking/blob/master/LICENSE)\n\n[📘Documentation](https://mmtracking.readthedocs.io/) |\n[🛠️Installation](https://mmtracking.readthedocs.io/en/latest/install.html) |\n[👀Model Zoo](https://mmtracking.readthedocs.io/en/latest/model_zoo.html) |\n[🆕Update News](https://mmtracking.readthedocs.io/en/latest/changelog.html) |\n[🤔Reporting Issues](https://github.com/open-mmlab/mmtracking/issues/new/choose)\n\n</div>\n\n<div align=\"center\">\n\nEnglish | [简体中文](README_zh-CN.md)\n\n</div>\n\n## Introduction\n\nMMTracking is an open source video perception toolbox by PyTorch. It is a part of [OpenMMLab](https://openmmlab.com) project.\n\nThe master branch works with **PyTorch1.5+**.\n\n<div align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/24663779/103343312-c724f480-4ac6-11eb-9c22-b56f1902584e.gif\" width=\"800\"/>\n</div>\n\n### Major features\n\n- **The First Unified Video Perception Platform**\n\n  We are the first open source toolbox that unifies versatile video perception tasks include video object detection, multiple object tracking, single object tracking and video instance segmentation.\n\n- **Modular Design**\n\n  We decompose the video perception framework into different components and one can easily construct a customized method by combining different modules.\n\n- **Simple, Fast and Strong**\n\n  **Simple**: MMTracking interacts with other OpenMMLab projects. It is built upon [MMDetection](https://github.com/open-mmlab/mmdetection) that we can capitalize any detector only through modifying the configs.\n\n  **Fast**: All operations run on GPUs. The training and inference speeds are faster than or comparable to other implementations.\n\n  **Strong**: We reproduce state-of-the-art models and some of them even outperform the official implementations.\n\n## What's New\n\nWe release MMTracking 1.0.0rc0, the first version of MMTracking 1.x.\n\nBuilt upon the new [training engine](https://github.com/open-mmlab/mmengine), MMTracking 1.x unifies the interfaces of datasets, models, evaluation, and visualization.\n\nWe also support more methods in MMTracking 1.x, such as [StrongSORT](https://github.com/open-mmlab/mmtracking/tree/dev-1.x/configs/mot/strongsort) for MOT, [Mask2Former](https://github.com/open-mmlab/mmtracking/tree/dev-1.x/configs/vis/mask2former) for VIS, [PrDiMP](https://github.com/open-mmlab/mmtracking/tree/dev-1.x/configs/sot/prdimp) for SOT.\n\nPlease refer to [dev-1.x](https://github.com/open-mmlab/mmtracking/tree/dev-1.x) branch for the using of MMTracking 1.x.\n\n## Installation\n\nPlease refer to [install.md](docs/en/install.md) for install instructions.\n\n## Getting Started\n\nPlease see [dataset.md](docs/en/dataset.md) and [quick_run.md](docs/en/quick_run.md) for the basic usage of MMTracking.\n\nA Colab tutorial is provided. You may preview the notebook [here](./demo/MMTracking_Tutorial.ipynb) or directly run it on [Colab](https://colab.research.google.com/github/open-mmlab/mmtracking/blob/master/demo/MMTracking_Tutorial.ipynb).\n\nThere are also usage [tutorials](docs/en/tutorials/), such as [learning about configs](docs/en/tutorials/config.md), [an example about detailed description of vid config](docs/en/tutorials/config_vid.md), [an example about detailed description of mot config](docs/en/tutorials/config_mot.md), [an example about detailed description of sot config](docs/en/tutorials/config_sot.md), [customizing dataset](docs/en/tutorials/customize_dataset.md), [customizing data pipeline](docs/en/tutorials/customize_data_pipeline.md), [customizing vid model](docs/en/tutorials/customize_vid_model.md), [customizing mot model](docs/en/tutorials/customize_mot_model.md), [customizing sot model](docs/en/tutorials/customize_sot_model.md), [customizing runtime settings](docs/en/tutorials/customize_runtime.md) and [useful tools](docs/en/useful_tools_scripts.md).\n\n## Benchmark and model zoo\n\nResults and models are available in the [model zoo](docs/en/model_zoo.md).\n\n### Video Object Detection\n\nSupported Methods\n\n- [x] [DFF](configs/vid/dff) (CVPR 2017)\n- [x] [FGFA](configs/vid/fgfa) (ICCV 2017)\n- [x] [SELSA](configs/vid/selsa) (ICCV 2019)\n- [x] [Temporal RoI Align](configs/vid/temporal_roi_align) (AAAI 2021)\n\nSupported Datasets\n\n- [x] [ILSVRC](http://image-net.org/challenges/LSVRC/2017/)\n\n### Single Object Tracking\n\nSupported Methods\n\n- [x] [SiameseRPN++](configs/sot/siamese_rpn) (CVPR 2019)\n- [x] [STARK](configs/sot/stark) (ICCV 2021)\n- [x] [MixFormer](configs/sot/mixformer) (CVPR 2022)\n- [ ] [PrDiMP](https://arxiv.org/abs/2003.12565) (CVPR2020) (WIP)\n\nSupported Datasets\n\n- [x] [LaSOT](http://vision.cs.stonybrook.edu/~lasot/)\n- [x] [UAV123](https://cemse.kaust.edu.sa/ivul/uav123/)\n- [x] [TrackingNet](https://tracking-net.org/)\n- [x] [OTB100](http://www.visual-tracking.net/)\n- [x] [GOT10k](http://got-10k.aitestunion.com/)\n- [x] [VOT2018](https://www.votchallenge.net/vot2018/)\n\n### Multi-Object Tracking\n\nSupported Methods\n\n- [x] [SORT/DeepSORT](configs/mot/deepsort) (ICIP 2016/2017)\n- [x] [Tracktor](configs/mot/tracktor) (ICCV 2019)\n- [x] [QDTrack](configs/mot/qdtrack) (CVPR 2021)\n- [x] [ByteTrack](configs/mot/bytetrack) (ECCV 2022)\n- [x] [OC-SORT](configs/mot/ocsort) (arXiv 2022)\n\nSupported Datasets\n\n- [x] [MOT Challenge](https://motchallenge.net/)\n- [x] [CrowdHuman](https://www.crowdhuman.org/)\n- [x] [LVIS](https://www.lvisdataset.org/)\n- [x] [TAO](https://taodataset.org/)\n- [x] [DanceTrack](https://arxiv.org/abs/2111.14690)\n\n### Video Instance Segmentation\n\nSupported Methods\n\n- [x] [MaskTrack R-CNN](configs/vis/masktrack_rcnn) (ICCV 2019)\n\nSupported Datasets\n\n- [x] [YouTube-VIS](https://youtube-vos.org/dataset/vis/)\n\n## Contributing\n\nWe appreciate all contributions to improve MMTracking. Please refer to [CONTRIBUTING.md](https://github.com/open-mmlab/mmcv/blob/master/CONTRIBUTING.md) for the contributing guideline and [this discussion](https://github.com/open-mmlab/mmtracking/issues/73) for development roadmap.\n\n## Acknowledgement\n\nMMTracking is an open source project that welcome any contribution and feedback.\nWe wish that the toolbox and benchmark could serve the growing research\ncommunity by providing a flexible as well as standardized toolkit to reimplement existing methods\nand develop their own new video perception methods.\n\n## Citation\n\nIf you find this project useful in your research, please consider cite:\n\n```latex\n@misc{mmtrack2020,\n    title={{MMTracking: OpenMMLab} video perception toolbox and benchmark},\n    author={MMTracking Contributors},\n    howpublished = {\\url{https://github.com/open-mmlab/mmtracking}},\n    year={2020}\n}\n```\n\n## License\n\nThis project is released under the [Apache 2.0 license](LICENSE).\n\n## Projects in OpenMMLab\n\n- [MMCV](https://github.com/open-mmlab/mmcv): OpenMMLab foundational library for computer vision.\n- [MIM](https://github.com/open-mmlab/mim): MIM installs OpenMMLab packages.\n- [MMClassification](https://github.com/open-mmlab/mmclassification): OpenMMLab image classification toolbox and benchmark.\n- [MMDetection](https://github.com/open-mmlab/mmdetection): OpenMMLab detection toolbox and benchmark.\n- [MMDetection3D](https://github.com/open-mmlab/mmdetection3d): OpenMMLab's next-generation platform for general 3D object detection.\n- [MMYOLO](https://github.com/open-mmlab/mmyolo): OpenMMLab YOLO series toolbox and benchmark.\n- [MMRotate](https://github.com/open-mmlab/mmrotate): OpenMMLab rotated object detection toolbox and benchmark.\n- [MMSegmentation](https://github.com/open-mmlab/mmsegmentation): OpenMMLab semantic segmentation toolbox and benchmark.\n- [MMOCR](https://github.com/open-mmlab/mmocr): OpenMMLab text detection, recognition and understanding toolbox.\n- [MMPose](https://github.com/open-mmlab/mmpose): OpenMMLab pose estimation toolbox and benchmark.\n- [MMHuman3D](https://github.com/open-mmlab/mmhuman3d): OpenMMLab 3D human parametric model toolbox and benchmark.\n- [MMSelfSup](https://github.com/open-mmlab/mmselfsup): OpenMMLab self-supervised learning Toolbox and Benchmark.\n- [MMRazor](https://github.com/open-mmlab/mmrazor): OpenMMLab Model Compression Toolbox and Benchmark.\n- [MMFewShot](https://github.com/open-mmlab/mmfewshot): OpenMMLab FewShot Learning Toolbox and Benchmark.\n- [MMAction2](https://github.com/open-mmlab/mmaction2): OpenMMLab's next-generation action understanding toolbox and benchmark.\n- [MMTracking](https://github.com/open-mmlab/mmtracking): OpenMMLab video perception toolbox and benchmark.\n- [MMFlow](https://github.com/open-mmlab/mmflow): OpenMMLab optical flow toolbox and benchmark.\n- [MMEditing](https://github.com/open-mmlab/mmediting): OpenMMLab image and video editing toolbox.\n- [MMGeneration](https://github.com/open-mmlab/mmgeneration):  OpenMMLab Generative Model toolbox and benchmark.\n- [MMDeploy](https://github.com/open-mmlab/mmdeploy): OpenMMlab deep learning model deployment toolset.\n"
        },
        {
          "name": "README_zh-CN.md",
          "type": "blob",
          "size": 10.1201171875,
          "content": "<div align=\"center\">\n  <img src=\"resources/mmtrack-logo.png\" width=\"600\"/>\n  <div>&nbsp;</div>\n  <div align=\"center\">\n    <b><font size=\"5\">OpenMMLab 官网</font></b>\n    <sup>\n      <a href=\"https://openmmlab.com\">\n        <i><font size=\"4\">HOT</font></i>\n      </a>\n    </sup>\n    &nbsp;&nbsp;&nbsp;&nbsp;\n    <b><font size=\"5\">OpenMMLab 开放平台</font></b>\n    <sup>\n      <a href=\"https://platform.openmmlab.com\">\n        <i><font size=\"4\">TRY IT OUT</font></i>\n      </a>\n    </sup>\n  </div>\n  <div>&nbsp;</div>\n\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/mmtrack)](https://pypi.org/project/mmtrack/)\n[![PyPI](https://img.shields.io/pypi/v/mmtrack)](https://pypi.org/project/mmtrack)\n[![docs](https://img.shields.io/badge/docs-latest-blue)](https://mmtracking.readthedocs.io/zh_CN/latest/)\n[![badge](https://github.com/open-mmlab/mmtracking/workflows/build/badge.svg)](https://github.com/open-mmlab/mmtracking/actions)\n[![codecov](https://codecov.io/gh/open-mmlab/mmtracking/branch/master/graph/badge.svg)](https://codecov.io/gh/open-mmlab/mmtracking)\n[![license](https://img.shields.io/github/license/open-mmlab/mmtracking.svg)](https://github.com/open-mmlab/mmtracking/blob/master/LICENSE)\n\n[📘Documentation](https://mmtracking.readthedocs.io/zh_CN/latest/) |\n[🛠️Installation](https://mmtracking.readthedocs.io/zh_CN/latest/install.html) |\n[👀Model Zoo](https://mmtracking.readthedocs.io/zh_CN/latest/model_zoo.html) |\n[🆕Update News](https://mmtracking.readthedocs.io/zh_CN/latest/changelog.html) |\n[🤔Reporting Issues](https://github.com/open-mmlab/mmtracking/issues/new/choose)\n\n</div>\n\n<div align=\"center\">\n\n[English](/README.md) | 简体中文\n\n</div>\n\n## 简介\n\nMMTracking是一款基于PyTorch的视频目标感知开源工具箱，是[OpenMMLab](http://openmmlab.org/)项目的一部分。\n\n主分支代码目前支持**PyTorch 1.5以上**的版本。\n\n<div align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/24663779/103343312-c724f480-4ac6-11eb-9c22-b56f1902584e.gif\" width=\"800\"/>\n</div>\n\n### 主要特性\n\n- **首个开源一体化视频目标感知平台**\n\n  MMTracking 是首个开源一体化视频目标感知工具箱，同时支持视频目标检测，多目标跟踪，单目标跟踪和视频实例分割等多种任务和算法。\n\n- **模块化设计**\n\n  MMTracking将统一的视频目标感知框架解耦成不同的模块组件，通过组合不同模块组件，用户可以便捷地构建自定义视频目标感知模型。\n\n- **简洁、高效、强大**\n\n  **简洁**：MMTracking与其他OpenMMLab平台充分交互。MMTracking充分复用[MMDetection](https://github.com/open-mmlab/mmdetection)中的已有模块，我们只需要修改配置文件就可以使用任何检测器。\n\n  **高效**：MMTracking所有操作都在GPU上运行。相比其他开源库的实现，MMTracking的训练和推理更加高效。\n\n  **强大**：MMTracking复现了SOTA性能的模型。受益于[MMDetection](https://github.com/open-mmlab/mmdetection)的持续推进，部分实现精度超出官方版本。\n\n## 更新\n\n- 添加了 [OC-SORT](configs/mot/ocsort/) 的预训练模型。\n\nv0.14.0版本已于2022年09月19日发布，可通过查阅[更新日志](docs/zh_cn/changelog.md)了解更多细节以及发布历史。\n\n## 安装\n\n请参考[安装指南](docs/zh_cn/install.md)进行安装。\n\n## 开始使用MMTracking\n\n请参考[数据集](docs/zh_cn/dataset.md)和[快速开始](docs/zh_cn/quick_run.md)了解MMTracking的基本使用。\n\n我们提供了跟踪的Colab教程，您可以在[这里](<(./demo/MMTracking_Tutorial.ipynb)>)预览或者直接在[Colab](https://colab.research.google.com/github/open-mmlab/mmtracking/blob/master/demo/MMTracking_Tutorial.ipynb)上运行。\n\nMMTracking也提供了更详细的[教程](docs/zh_cn/tutorials/)，比如[配置文件简介](docs/zh_cn/tutorials/config.md), [视频目标检测器配置文件详解](docs/zh_cn/tutorials/config_vid.md), [多目标跟踪器配置文件详解](docs/zh_cn/tutorials/config_mot.md), [单目标跟踪器配置文件详解](docs/zh_cn/tutorials/config_sot.md), [自定义数据集](docs/zh_cn/tutorials/customize_dataset.md), [自定义数据预处理流程](docs/zh_cn/tutorials/customize_data_pipeline.md), [自定义视频目标检测器](docs/zh_cn/tutorials/customize_vid_model.md), [自定义多目标跟踪器](docs/zh_cn/tutorials/customize_mot_model.md), [自定义单目标跟踪器](docs/zh_cn/tutorials/customize_sot_model.md), [自定义训练配置](docs/zh_cn/tutorials/customize_runtime.md) 以及 [有用的工具和脚本](docs/zh_cn/useful_tools_scripts.md)。\n\n## 基准测试与模型库\n\n本工具箱支持的各个模型的结果和设置都可以在[模型库](docs/zh_cn/model_zoo.md)页面中查看。\n\n### 视频目标检测\n\n支持的算法:\n\n- [x] [DFF](configs/vid/dff) (CVPR 2017)\n- [x] [FGFA](configs/vid/fgfa) (ICCV 2017)\n- [x] [SELSA](configs/vid/selsa) (ICCV 2019)\n- [x] [Temporal RoI Align](configs/vid/temporal_roi_align) (AAAI 2021)\n\n支持的数据集：\n\n- [x] [ILSVRC](http://image-net.org/challenges/LSVRC/2017/)\n\n### 单目标跟踪\n\n支持的算法:\n\n- [x] [SiameseRPN++](configs/sot/siamese_rpn) (CVPR 2019)\n- [x] [STARK](configs/sot/stark) (ICCV 2021)\n- [x] [MixFormer](configs/sot/mixformer) (CVPR 2022)\n- [ ] [PrDiMP](https://arxiv.org/abs/2003.12565) (CVPR2020) (WIP)\n\n支持的数据集：\n\n- [x] [LaSOT](http://vision.cs.stonybrook.edu/~lasot/)\n- [x] [UAV123](https://cemse.kaust.edu.sa/ivul/uav123/)\n- [x] [TrackingNet](https://tracking-net.org/)\n- [x] [OTB100](http://www.visual-tracking.net/)\n- [x] [GOT10k](http://got-10k.aitestunion.com/)\n- [x] [VOT2018](https://www.votchallenge.net/vot2018/)\n\n### 多目标跟踪\n\n支持的算法:\n\n- [x] [SORT/DeepSORT](configs/mot/deepsort) (ICIP 2016/2017)\n- [x] [Tracktor](configs/mot/tracktor) (ICCV 2019)\n- [x] [QDTrack](configs/mot/qdtrack) (CVPR 2021)\n- [x] [ByteTrack](configs/mot/bytetrack) (ECCV 2022)\n- [x] [OC-SORT](configs/mot/ocsort) (arXiv 2022)\n\n支持的数据集：\n\n- [x] [MOT Challenge](https://motchallenge.net/)\n- [x] [CrowdHuman](https://www.crowdhuman.org/)\n- [x] [LVIS](https://www.lvisdataset.org/)\n- [x] [TAO](https://taodataset.org/)\n- [x] [DanceTrack](https://arxiv.org/abs/2111.14690)\n\n### 视频实例分割\n\n支持的算法:\n\n- [x] [MaskTrack R-CNN](configs/vis/masktrack_rcnn) (ICCV 2019)\n\n支持的数据集：\n\n- [x] [YouTube-VIS](https://youtube-vos.org/dataset/vis/)\n\n## 参与贡献\n\n我们非常欢迎用户对于MMTracking做出的任何贡献，可以参考[贡献指南](https://github.com/open-mmlab/mmcv/blob/master/CONTRIBUTING.md)文件了解更多细节和在这个[讨论](https://github.com/open-mmlab/mmtracking/issues/73)中规划MMTracking的开发计划。\n\n## 致谢\n\nMMTracking是一款开源项目，我们欢迎任何贡献和反馈。我们希望该工具箱和基准测试可以为社区提供灵活的代码工具，供用户复现现有算法并开发自己新的视频目标感知方法。\n\n## 引用\n\n如果你觉得MMTracking对你的研究有所帮助，可以考虑引用它:\n\n```latex\n@misc{mmtrack2020,\n    title={{MMTracking: OpenMMLab} video perception toolbox and benchmark},\n    author={MMTracking Contributors},\n    howpublished = {\\url{https://github.com/open-mmlab/mmtracking}},\n    year={2020}\n}\n```\n\n## 许可\n\n该项目遵循[Apache 2.0 license](/LICENSE)开源协议。\n\n## OpenMMLab 的其他项目\n\n- [MMCV](https://github.com/open-mmlab/mmcv)：OpenMMLab计算机视觉基础库\n- [MIM](https://github.com/open-mmlab/mim): MIM 是 OpenMMlab 项目、算法、模型的统一入口\n- [MMClassification](https://github.com/open-mmlab/mmclassification): OpenMMLab 图像分类工具箱\n- [MMDetection](https://github.com/open-mmlab/mmdetection): OpenMMLab 目标检测工具箱\n- [MMDetection3D](https://github.com/open-mmlab/mmdetection3d): OpenMMLab 新一代通用 3D 目标检测平台\n- [MMYOLO](https://github.com/open-mmlab/mmyolo): OpenMMLab YOLO 系列工具箱和基准测试\n- [MMRotate](https://github.com/open-mmlab/mmrotate): OpenMMLab 旋转框检测工具箱与测试基准\n- [MMSegmentation](https://github.com/open-mmlab/mmsegmentation): OpenMMLab 语义分割工具箱\n- [MMOCR](https://github.com/open-mmlab/mmocr): OpenMMLab 全流程文字检测识别理解工具包\n- [MMPose](https://github.com/open-mmlab/mmpose): OpenMMLab 姿态估计工具箱\n- [MMHuman3D](https://github.com/open-mmlab/mmhuman3d): OpenMMLab 人体参数化模型工具箱与测试基准\n- [MMSelfSup](https://github.com/open-mmlab/mmselfsup): OpenMMLab 自监督学习工具箱与测试基准\n- [MMRazor](https://github.com/open-mmlab/mmrazor): OpenMMLab 模型压缩工具箱与测试基准\n- [MMFewShot](https://github.com/open-mmlab/mmfewshot): OpenMMLab 少样本学习工具箱与测试基准\n- [MMAction2](https://github.com/open-mmlab/mmaction2): OpenMMLab 新一代视频理解工具箱\n- [MMTracking](https://github.com/open-mmlab/mmtracking): OpenMMLab 一体化视频目标感知平台\n- [MMFlow](https://github.com/open-mmlab/mmflow): OpenMMLab 光流估计工具箱与测试基准\n- [MMEditing](https://github.com/open-mmlab/mmediting): OpenMMLab 图像视频编辑工具箱\n- [MMGeneration](https://github.com/open-mmlab/mmgeneration): OpenMMLab 图片视频生成模型工具箱\n- [MMDeploy](https://github.com/open-mmlab/mmdeploy): OpenMMLab 模型部署框架\n\n## 欢迎加入 OpenMMLab 社区\n\n扫描下方的二维码可关注 OpenMMLab 团队的 [知乎官方账号](https://www.zhihu.com/people/openmmlab)，加入 OpenMMLab 团队的 [官方交流 QQ 群](https://jq.qq.com/?_wv=1027&k=aCvMxdr3)\n\n<div align=\"center\">\n<img src=\"https://user-images.githubusercontent.com/24663779/116371114-a8005e80-a83d-11eb-9123-17fc9cfe7475.jpg\" height=\"400\" />  <img src=\"https://user-images.githubusercontent.com/26813582/178631055-246cd5d1-11fc-4f18-b604-5d70b6c44eca.png\" height=\"400\" />\n</div>\n\n我们会在 OpenMMLab 社区为大家\n\n- 📢 分享 AI 框架的前沿核心技术\n- 💻 解读 PyTorch 常用模块源码\n- 📰 发布 OpenMMLab 的相关新闻\n- 🚀 介绍 OpenMMLab 开发的前沿算法\n- 🏃 获取更高效的问题答疑和意见反馈\n- 🔥 提供与各行各业开发者充分交流的平台\n\n干货满满 📘，等你来撩 💗，OpenMMLab 社区期待您的加入 👬\n"
        },
        {
          "name": "configs",
          "type": "tree",
          "content": null
        },
        {
          "name": "demo",
          "type": "tree",
          "content": null
        },
        {
          "name": "docker",
          "type": "tree",
          "content": null
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "mmtrack",
          "type": "tree",
          "content": null
        },
        {
          "name": "model-index.yml",
          "type": "blob",
          "size": 0.4931640625,
          "content": "Import:\n  - configs/mot/deepsort/metafile.yml\n  - configs/mot/tracktor/metafile.yml\n  - configs/mot/qdtrack/metafile.yml\n  - configs/mot/bytetrack/metafile.yml\n  - configs/mot/ocsort/metafile.yml\n  - configs/sot/siamese_rpn/metafile.yml\n  - configs/sot/stark/metafile.yml\n  - configs/sot/mixformer/metafile.yml\n  - configs/vid/dff/metafile.yml\n  - configs/vid/fgfa/metafile.yml\n  - configs/vid/selsa/metafile.yml\n  - configs/vid/temporal_roi_align/metafile.yml\n  - configs/vis/masktrack_rcnn/metafile.yml\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.078125,
          "content": "-r requirements/build.txt\n-r requirements/runtime.txt\n-r requirements/tests.txt\n"
        },
        {
          "name": "requirements",
          "type": "tree",
          "content": null
        },
        {
          "name": "resources",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.55859375,
          "content": "[isort]\nline_length = 79\nmulti_line_output = 0\nextra_standard_library = setuptools\nknown_first_party = mmtrack\nknown_third_party = PIL,addict,cv2,dotty_dict,lap,matplotlib,mmcls,mmcv,mmdet,motmetrics,numpy,packaging,pandas,pycocotools,pytest,pytorch_sphinx_theme,requests,scipy,script_utils,seaborn,tao,terminaltables,torch,tqdm\nno_lines_before = STDLIB,LOCALFOLDER\ndefault_section = THIRDPARTY\n\n[yapf]\nBASED_ON_STYLE = pep8\nBLANK_LINE_BEFORE_NESTED_CLASS_OR_DEF = true\nSPLIT_BEFORE_EXPRESSION_AFTER_OPENING_PAREN = true\n\n[codespell]\nignore-words-list = mot\nskip = *.json\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 7.97265625,
          "content": "import os\nimport os.path as osp\nimport shutil\nimport sys\nimport warnings\nfrom setuptools import find_packages, setup\n\nimport torch\nfrom torch.utils.cpp_extension import (BuildExtension, CppExtension,\n                                       CUDAExtension)\n\n\ndef readme():\n    with open('README.md', encoding='utf-8') as f:\n        content = f.read()\n    return content\n\n\nversion_file = 'mmtrack/version.py'\n\n\ndef get_version():\n    with open(version_file, 'r') as f:\n        exec(compile(f.read(), version_file, 'exec'))\n    return locals()['__version__']\n\n\ndef make_cuda_ext(name, module, sources, sources_cuda=[]):\n\n    define_macros = []\n    extra_compile_args = {'cxx': []}\n\n    if torch.cuda.is_available() or os.getenv('FORCE_CUDA', '0') == '1':\n        define_macros += [('WITH_CUDA', None)]\n        extension = CUDAExtension\n        extra_compile_args['nvcc'] = [\n            '-D__CUDA_NO_HALF_OPERATORS__',\n            '-D__CUDA_NO_HALF_CONVERSIONS__',\n            '-D__CUDA_NO_HALF2_OPERATORS__',\n        ]\n        sources += sources_cuda\n    else:\n        print(f'Compiling {name} without CUDA')\n        extension = CppExtension\n\n    return extension(\n        name=f'{module}.{name}',\n        sources=[os.path.join(*module.split('.'), p) for p in sources],\n        define_macros=define_macros,\n        extra_compile_args=extra_compile_args)\n\n\ndef parse_requirements(fname='requirements.txt', with_version=True):\n    \"\"\"Parse the package dependencies listed in a requirements file but strips\n    specific versioning information.\n\n    Args:\n        fname (str): path to requirements file\n        with_version (bool, default=False): if True include version specs\n\n    Returns:\n        List[str]: list of requirements items\n\n    CommandLine:\n        python -c \"import setup; print(setup.parse_requirements())\"\n    \"\"\"\n    import re\n    import sys\n    from os.path import exists\n    require_fpath = fname\n\n    def parse_line(line):\n        \"\"\"Parse information from a line in a requirements text file.\"\"\"\n        if line.startswith('-r '):\n            # Allow specifying requirements in other files\n            target = line.split(' ')[1]\n            for info in parse_require_file(target):\n                yield info\n        else:\n            info = {'line': line}\n            if line.startswith('-e '):\n                info['package'] = line.split('#egg=')[1]\n            elif '@git+' in line:\n                info['package'] = line\n            else:\n                # Remove versioning from the package\n                pat = '(' + '|'.join(['>=', '==', '>']) + ')'\n                parts = re.split(pat, line, maxsplit=1)\n                parts = [p.strip() for p in parts]\n\n                info['package'] = parts[0]\n                if len(parts) > 1:\n                    op, rest = parts[1:]\n                    if ';' in rest:\n                        # Handle platform specific dependencies\n                        # http://setuptools.readthedocs.io/en/latest/setuptools.html#declaring-platform-specific-dependencies\n                        version, platform_deps = map(str.strip,\n                                                     rest.split(';'))\n                        info['platform_deps'] = platform_deps\n                    else:\n                        version = rest  # NOQA\n                    info['version'] = (op, version)\n            yield info\n\n    def parse_require_file(fpath):\n        with open(fpath, 'r') as f:\n            for line in f.readlines():\n                line = line.strip()\n                if line and not line.startswith('#'):\n                    for info in parse_line(line):\n                        yield info\n\n    def gen_packages_items():\n        if exists(require_fpath):\n            for info in parse_require_file(require_fpath):\n                parts = [info['package']]\n                if with_version and 'version' in info:\n                    parts.extend(info['version'])\n                if not sys.version.startswith('3.4'):\n                    # apparently package_deps are broken in 3.4\n                    platform_deps = info.get('platform_deps')\n                    if platform_deps is not None:\n                        parts.append(';' + platform_deps)\n                item = ''.join(parts)\n                yield item\n\n    packages = list(gen_packages_items())\n    return packages\n\n\ndef add_mim_extension():\n    \"\"\"Add extra files that are required to support MIM into the package.\n\n    These files will be added by creating a symlink to the originals if the\n    package is installed in `editable` mode (e.g. pip install -e .), or by\n    copying from the originals otherwise.\n    \"\"\"\n\n    # parse installment mode\n    if 'develop' in sys.argv:\n        # installed by `pip install -e .`\n        mode = 'symlink'\n    elif 'sdist' in sys.argv or 'bdist_wheel' in sys.argv:\n        # installed by `pip install .`\n        # or create source distribution by `python setup.py sdist`\n        mode = 'copy'\n    else:\n        return\n\n    filenames = ['tools', 'configs', 'model-index.yml']\n    repo_path = osp.dirname(__file__)\n    mim_path = osp.join(repo_path, 'mmtrack', '.mim')\n    os.makedirs(mim_path, exist_ok=True)\n\n    for filename in filenames:\n        if osp.exists(filename):\n            src_path = osp.join(repo_path, filename)\n            tar_path = osp.join(mim_path, filename)\n\n            if osp.isfile(tar_path) or osp.islink(tar_path):\n                os.remove(tar_path)\n            elif osp.isdir(tar_path):\n                shutil.rmtree(tar_path)\n\n            if mode == 'symlink':\n                src_relpath = osp.relpath(src_path, osp.dirname(tar_path))\n                try:\n                    os.symlink(src_relpath, tar_path)\n                except OSError:\n                    # Creating a symbolic link on windows may raise an\n                    # `OSError: [WinError 1314]` due to privilege. If\n                    # the error happens, the src file will be copied\n                    mode = 'copy'\n                    warnings.warn(\n                        f'Failed to create a symbolic link for {src_relpath}, '\n                        f'and it will be copied to {tar_path}')\n                else:\n                    continue\n\n            if mode == 'copy':\n                if osp.isfile(src_path):\n                    shutil.copyfile(src_path, tar_path)\n                elif osp.isdir(src_path):\n                    shutil.copytree(src_path, tar_path)\n                else:\n                    warnings.warn(f'Cannot copy file {src_path}.')\n            else:\n                raise ValueError(f'Invalid mode {mode}')\n\n\nif __name__ == '__main__':\n    add_mim_extension()\n    setup(\n        name='mmtrack',\n        version=get_version(),\n        description='OpenMMLab Unified Video Perception Platform',\n        long_description=readme(),\n        long_description_content_type='text/markdown',\n        author='MMTracking Contributors',\n        author_email='openmmlab@gmail.com',\n        keywords='computer vision, object tracking, video object detection',\n        url='https://github.com/open-mmlab/mmtracking',\n        packages=find_packages(exclude=('configs', 'tools', 'demo')),\n        include_package_data=True,\n        classifiers=[\n            'Development Status :: 4 - Beta',\n            'License :: OSI Approved :: Apache Software License',\n            'Operating System :: OS Independent',\n            'Programming Language :: Python :: 3',\n            'Programming Language :: Python :: 3.6',\n            'Programming Language :: Python :: 3.7',\n            'Programming Language :: Python :: 3.8',\n            'Programming Language :: Python :: 3.9',\n        ],\n        license='Apache License 2.0',\n        install_requires=parse_requirements('requirements/runtime.txt'),\n        extras_require={\n            'all': parse_requirements('requirements.txt'),\n            'tests': parse_requirements('requirements/tests.txt'),\n            'build': parse_requirements('requirements/build.txt'),\n            'mim': parse_requirements('requirements/mminstall.txt')\n        },\n        ext_modules=[],\n        cmdclass={'build_ext': BuildExtension},\n        zip_safe=False)\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tools",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}