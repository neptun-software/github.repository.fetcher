{
  "metadata": {
    "timestamp": 1736559846028,
    "page": 593,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjYwMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "andreafrancia/trash-cli",
      "stars": 3718,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.189453125,
          "content": "*.pyc\n.coverage\n.DS_Store\n\n# other things\n/build/\n/cover/\n/dist/\n/.venv/\n/.venv-*/\n/test-disk.img\n/test-disk.dmg\n/test-disk/\n/trash_cli.egg-info/\n/MANIFEST\n/.vagrant/\n/ssh-config\n/.idea/\n/.tox/\n"
        },
        {
          "name": "COPYING",
          "type": "blob",
          "size": 17.5703125,
          "content": "\t\t    GNU GENERAL PUBLIC LICENSE\n\t\t       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.\n     59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Library General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\f\n\t\t    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\f\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\f\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\f\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS\n\f\n\t    How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nconvey the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software; you can redistribute it and/or modify\n    it under the terms of the GNU General Public License as published by\n    the Free Software Foundation; either version 2 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License for more details.\n\n    You should have received a copy of the GNU General Public License\n    along with this program; if not, write to the Free Software\n    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n\n\nAlso add information on how to contact you by electronic and paper mail.\n\nIf the program is interactive, make it output a short notice like this\nwhen it starts in an interactive mode:\n\n    Gnomovision version 69, Copyright (C) year  name of author\n    Gnomovision comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\n    This is free software, and you are welcome to redistribute it\n    under certain conditions; type `show c' for details.\n\nThe hypothetical commands `show w' and `show c' should show the appropriate\nparts of the General Public License.  Of course, the commands you use may\nbe called something other than `show w' and `show c'; they could even be\nmouse-clicks or menu items--whatever suits your program.\n\nYou should also get your employer (if you work as a programmer) or your\nschool, if any, to sign a \"copyright disclaimer\" for the program, if\nnecessary.  Here is a sample; alter the names:\n\n  Yoyodyne, Inc., hereby disclaims all copyright interest in the program\n  `Gnomovision' (which makes passes at compilers) written by James Hacker.\n\n  <signature of Ty Coon>, 1 April 1989\n  Ty Coon, President of Vice\n\nThis General Public License does not permit incorporating your program into\nproprietary programs.  If your program is a subroutine library, you may\nconsider it more useful to permit linking proprietary applications with the\nlibrary.  If this is what you want to do, use the GNU Library General\nPublic License instead of this License.\n"
        },
        {
          "name": "CREDITS.txt",
          "type": "blob",
          "size": 1.40234375,
          "content": "Author\n------\n\nAndrea Francia trash-cli@andreafrancia.it\n\nThanks to\n---------\n - Einar Orn Olason: Developmemt of first version of the empty-trash command\n - Rahul Sundaram, http://fedoraproject.org/wiki/RahulSundaram\n    Packaged trash-cli for Fedora \n    (https://bugzilla.redhat.com/show_bug.cgi?id=508750)\n - Michele Barbiero, http://greedyandlounge.blogspot.com,Shuren @ \n   irc://irc.azzurra.org/linux-help  Reporting of bugs.\n - jpschewe -at_ users.sourceforge.net: Reporting many bugs and submitting \n   patches. \n - slim http://www.hartnup.net/wordpress: Helped choosing commands names\n - BobbyShaftoe http://stackoverflow.com/users/38426/bobbyshaftoe Helped \n   choosing commands names\n - ceretullis http://www.breakingrobots.net: Helped choosing commands names\n - grapefrukt http://grapefrukt.com/blog : Helped choosing commands names\n - joel.neely  http://joelneely.wordpress.com : Helped choosing commands names\n - My Wife Ely (Elisa Zuccolo): Thanks for tolerating me when I work at \n   trash-cli.\n - Ben Finney: Helped choosing commands names, find out the grammar problems \n   with trash-file command.\n - Ken VanDine: Helped choosing commands names\n - Christoph Bloch: Helped choosing commands names\n - Massimo \"Submax82\" Cavalleri: Packaged on Slackware\n - Steve Stalcup: for maintaining the Debian and Ubuntu packages\n - Lee Yeoh for donating to trash-cli\n\nIf you think you should appear in this page please tell me.\n\n"
        },
        {
          "name": "HISTORY.txt",
          "type": "blob",
          "size": 10.1484375,
          "content": "0.24.5.26 (c02fd35):\nShell Completion:\n- Bugfix in print-completion loop for shells other than zsh by Andrew Davis\nUser not visibile changes:\n- Move all the main logic for dev tools from scripts under tests/support to\n  solve issue https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=1067303\n- Fixed a problem in GitHub Actions that ran all the tests on the same python\n  version instead of all the python versions specified\n- Reintroducing testing on python 2.7 thanks the custom GitHub action found at\n  https://github.com/ytdl-org/setup-python\n- Fixed regression that would crash trash-restore on non parseable trashinfo,\n  with an error like: \"TypeError: not enough arguments for format string\"\n- Using python -m venv instead of virtualenv\n- Refactor of some code in trash-put and trash-restore\n\n0.24.4.17 (f0136411):\nUser visible changes:\n - trash-put --help shows also other commands (Joseph Masone)\n - trash-restore prints a message when no file are restored: \"No files were\n   restored\" (lukasvrenner)\n - fix a regression that would crash `trash-list --volumes` at every launch\n - add `fuse.gocryptfs` to the mount_points to the list of allowed filesystems\n   (Maxim Baz)\n - Fix a bug that would trash a link destination instead of trashing the link\n   when the file to be trashed contains trailing slashes.\n - fix typos/grammar in man pages (qadzek)\n - improved shell TAB-completion (Giuseppe Stelluto)\nWork on the tools:\n - made GitHub Actions workflows to work again\n - updated the actions versions in GitHub Actions\n - made the tests work again against python 2.7\n - fixed the tox configuration (in some cases it would run python 2.7 tests on python 3!)\n - made the type checker happy again\n - the tarball created by python -m build sdist changed name, a dash \"-\" became\n   a underscore \"_\"; before was \"trash-cli-version.tar.gz\" now we have:\n   \"trash_cli-version.tar.gz\". The affected scripts has been updated to\n   accomodate this change\n\n0.23.11.10 (68c34e0a):\n - use enum34...\n - mypy\n - trash-put clearer error messages\n\n0.23.9.23  (ae690713)\n - man page trash-put.1 will also document trash-dirs locations (Joel Pereira)\n - fixed typos in man page trash-put.1 (Joel Pereira)\n - removed python 2.7 from the list of tested platforms (as GitHub Actions no\n   longer support this Python version)\n - add MyPy checks to the GitHub Action test workflow\n - improved error message when TrashInfo is not parsable in trash-restore\n - suggested to use pipx in README.md (bryango)\n - add instruction for installation on Fedora (Mohammed Eshan)\n - get back `--` the command ending for trash-put (@laggardkernel)\n - fixed typos (David Auer)\n - check info target trash folder non-exists Tin Lai\n\n0.22.10.20 (07674600):\n - Made visible option -v/--verbose of trash-empty - Andrea Francia\n - Documented how completion works in README - Wu Zhenyu\n - Change: now if a file does not exists it does not tries to delete it using\n   all available trash dirs - Andrea Francia\n - Removed an error that would occur on trash-put when HOME environment is not\n   set - Andrea Francia\n - Whitelisted fuse.glusterfs filesystem - Andrea Francia\n - Add tox\n\n0.22.10.4.4:\n - Revisited the trash-put log messages\n - Add shell completions by shtab\n - Feature: trash-empty learnt the --verbose option\n - Feature: trash-empty learnt the --dry-run option\n - Change: add six as a requirements\n - Change: add 'fuse' to the list of \"physical\" file system types\n - Change: now trash-put uses ArgumentParser instead of OptionParser\n - Add more debugging messages to trash-put when it fails to trash a file.\n - Change: trash-empty now uses lexists (instead of exists) to check if a file\n   is not existent before removal\n - Add `trash-list --python` to print the python executable\n0.22.8.27:\n - from now partitions with fs in ['nfs4','btrfs'] are considered physical volumes\n - also partitions mounted on /tmp with tmpfs will be considered physical volumes\n - `trash-list --all-users` to see trash from all users\n0.22.8.21.16:\n - Now supports p9 (WSL 2 volumes) as location for trash dirs\n - trash-list --volumes to list all the recognized volumes\n - trash-list --debug-volumes\n - Fix links to trash specification David Auer\n0.22.8.21:\n - fix a bug that made `trash-list --size` to crash if it found a broken link\n   in the trash directory files\n   pull request https://github.com/andreafrancia/trash-cli/pull/233\n   thanks to: https://github.com/jamescherti\n - trash-empty do not list trash directories that does not exist\n   pull request https://github.com/andreafrancia/trash-cli/pull/237\n   thanks to: https://github.com/jack1142\n - Fix trash-empty not showing nfs mountpoints\n   pull request: https://github.com/andreafrancia/trash-cli/pull/230\n   thanks to https://github.com/masgouri\n - Fix perms for user's trash folder\n   pull request: https://github.com/andreafrancia/trash-cli/pull/239\n   thanks to https://github.com/jack1142\n0.22.4.16:\n - trash-restore exits gracefully if the user enters Ctrl+D,\n   thanks to https://github.com/mtoohey31\n0.21.10.24:\n - trash-empty detect when input is interactive and asks before emptying trash\n - trash-empty learnt the -i/--interactive option\n - trash-empty option --all-users is no longer hidden\n\n0.21.7.24:\n - fix bug in tests\n\n0.21.7.23:\n - fix bug in tests (see https://github.com/andreafrancia/trash-cli/issues/210)\n\n0.21.6.30:\n - `trash-empty --help` now shows only the command basename and not the full\n   path to the command.\n - Now `trash-empty` honors multiple --trash-dir options\n - trash-empty learnt the hidden option --print-time and now uses TRASH_DATE\n   environment variable if present\n - trash-empty learnt the --all-users option\n\n0.21.5.25:\n - now trash-put honors the -i option (also the --interactive one)\n\n0.21.5.22:\n - trash-rm: fixed pattern matching for absolute paths, fixes\n   https://github.com/andreafrancia/trash-cli/issues/124\n\n0.21.5.20:\n - add (hidden and undocumented) --files option to trash-list\n\n0.21.5.11:\n - trash-put also accept -vv for enabling debug prints\n - add (hidden and undocumented) --size option to trash-list\n\n0.21.4.18:\n - fix bug #166 'trash goes into an infinite loop when trashing files with a long filename'\n - trash-list learnt the `--trash-dir` option\n - trash-restore now supports relative paths in argument (fixes #165)\n - trash-list shows all partitions including not physical @KSR-Yasuda\n   (https://github.com/andreafrancia/trash-cli/pull/178)\n\n0.20.12.26:\n - trash-restore learnt --trash-dir option\n - add simplified Chinese README\n - trash-restore now uses 'date' as the default sort argument\n - Add to README the installation with apt\n - trash-restore now supports range select\n\n0.20.11.23:\n - switched to psutil for listing volumes\n\n0.20.11.7:\n - trash-put learned a --trash-dir option that can be used to specify the trash\n   directory to be used as destination\n - trash-put -f now ignores files and dirs that do not exist (Don Cross)\n - trash-restore learnt --sort=(date|path|none) option (Self-Perfection)\n - trash-restore: support restoring multiple files (arendu)\n - README: now recommend using `pip` for installing trash-cli\n\n0.17.1.14:\n - Fix a bug that causes trash-put to use $topdir/.Trash/UID trashcan even when\n   it is not secure and $topdir/.Trash-UID should be used instead.\n\n0.17.1.12:\n - Fix a bug in detecting right volume of home trash dir, if home Trash dir is a\n   symbolic link, and in detecting volume of file to be trashed when it is\n   specified as contained in a directory that is a symbolic link that crosses\n   volumes boundaries (#38)\n - Make some code python 3 compatible\n - Fixed README.\n\n0.17.1.1:\n - Now trash-rm supports full path matching, using a pattern starting with slash '/' Fix #67\n - Fix typo in trash-rm(1) man page\n - Add a reference to trash-rm(1) to all man pages\n - Fix inconsistent apostrophes\n - Add support for --trash-dir option to trash-empty\n\n0.16.12.29:\n - trash-rm no more crashes on .trashinfo files without Path (#69)\n\n0.16.12.28:\n - Fix #48 trash-empty crashes on directories without read permission\n\n0.16.12.26:\n - Fix #52 Almost all commands crash with python 2.7.10\n\n0.16.12.25:\n - Now trash-restore accepts a /specific/path\n - Now integration tests should pass also in a linux box. Fix #61\n - Now all command outputs will report the right up-to-date location for issue reporting (#39)\n - Add input validation in trash-restore\n - Renamed restore-trash to trash-restore\n - Fixed bug (trash-put creates $topdir/.Trash even if it should not)\n - Fixed bug (trash-put uses $topdir/.Trash/$uid even if unsecure)\n - Minor changes to man pages.\n\n0.12.9.14:\n - Switched to distutils.core (instead of setuptools)\n - Now `trash-put -v` will warn if it found an unsticky .Trash dir.\n - New trash-rm command\n - (Internal) Switched from realpath to abspath\n\n0.12.7:\n - fixed: trash-empty crashed with GetoptError in short_has_arg(): option -2 \n   not recognized (see \n   https://bugs.launchpad.net/ubuntu/+source/trash-cli/+bug/1015877 )\n - fixed inclusion of README.rst when creating distribution package\n\n0.12.6:\n - add Donate button on README\n\n0.12.4.24:\n - Fixes a packaging problem of the previous release which prevented the \n   installation via easy_install and/or pip (see \n   https://github.com/andreafrancia/trash-cli/issues/5)\n - Fixes the name of the man page for restore-trash.\n\n0.12.4:\n - Reintroduced `trash` command as alias to `trash-put`\n - Now trash-list checks for $topdir/.Trash having sticky bit and not being a\n   symlink and warns when these requirements are not met.\n - Now trash-list handles empty, unreadable or malformed .trashinfo\n - Now `trash-empty <days>` skips .trashinfos with invalid DeletionDates\n - Removed Unipath dependency\n - Switched from googlecode to github\n - Removed tests written in Bash\n - Complete rewrite of trash-list and trash-empty\n\n0.11.3:\n - Now works also on Mac OS X\n - Fixed #55: restore-trash sets all-write permissions for the destination directory\n - Volumes detection: Now uses \"df -P\" output as fallback when getmnt fails.\n - Fixed #54. Now restore trash refuses to overwrite a file. Used code adapted from a patch written by Christian.Oudard\n\n0.11.2:\n Fixed #45: Cannot build RPM package with 0.11.1.2\n\n0.11.1.2:\n Fixed problems running setup.py\n\n0.11.1:\n Updated version number to make easy_install happy\n\n0.11.0:\n Fixed serious bug in trash-put: now the dot `.' and dot-dot `..' are skipped.\n"
        },
        {
          "name": "README.rst",
          "type": "blob",
          "size": 7.1708984375,
          "content": "trash-cli - Command Line Interface to FreeDesktop.org Trash.\n============================================================\n\n|Downloads|\n\n|Donate|_\n\n`简体中文`_\n\ntrash-cli trashes files recording the original path, deletion date, and \npermissions. It uses the same trashcan used by KDE, GNOME, and XFCE, but you \ncan invoke it from the command line (and scripts).\n\nIt provides these commands::\n\n    trash-put           trash files and directories. \n    trash-empty         empty the trashcan(s).\n    trash-list          list trashed files.\n    trash-restore       restore a trashed file.\n    trash-rm            remove individual files from the trashcan.\n\nUsage\n-----\n\nTrash a file::\n\n    $ trash-put foo\n\nList trashed files::\n\n    $ trash-list\n    2008-06-01 10:30:48 /home/andrea/bar\n    2008-06-02 21:50:41 /home/andrea/bar\n    2008-06-23 21:50:49 /home/andrea/foo\n\nSearch for a file in the trashcan::\n\n    $ trash-list | grep foo\n    2007-08-30 12:36:00 /home/andrea/foo\n    2007-08-30 12:39:41 /home/andrea/foo\n\nRestore a trashed file::\n    \n    $ trash-restore\n    0 2007-08-30 12:36:00 /home/andrea/foo\n    1 2007-08-30 12:39:41 /home/andrea/bar\n    2 2007-08-30 12:39:41 /home/andrea/bar2\n    3 2007-08-30 12:39:41 /home/andrea/foo2\n    4 2007-08-30 12:39:41 /home/andrea/foo\n    What file to restore [0..4]: 4\n    $ ls foo\n    foo\n    \nRestore a trashed file while overwriting existing files::\n    \n    $ echo \"original\">foo\n    $ ls\n    foo\n    $ trash foo\n    $ echo \"new\">foo\n    $ trash-restore --overwrite\n    0 2022-11-01 22:15:00 /home/andrea/foo\n    What file to restore [0..0]: 0\n    $ cat foo\n    original\n\nRestore multiple trashed files separated by ',', also support range::\n\n    $ trash-restore\n    0 2007-08-30 12:36:00 /home/andrea/foo\n    1 2007-08-30 12:39:41 /home/andrea/bar\n    2 2007-08-30 12:39:41 /home/andrea/bar2\n    3 2007-08-30 12:39:41 /home/andrea/foo2\n    What file to restore [0..3]: 0-2, 3\n    $ ls foo bar bar2 foo2\n    foo bar bar2 foo2\n\nRemove all files from the trashcan::\n\n    $ trash-empty\n\nRemove only the files that have been deleted more than <days> ago::\n    \n    $ trash-empty <days>\n\nExample::\n\n    $ date\n    Tue Feb 19 20:26:52 CET 2008\n    $ trash-list\n    2008-02-19 20:11:34 /home/einar/today\n    2008-02-18 20:11:34 /home/einar/yesterday\n    2008-02-10 20:11:34 /home/einar/last_week\n    $ trash-empty 7\n    $ trash-list\n    2008-02-19 20:11:34 /home/einar/today\n    2008-02-18 20:11:34 /home/einar/yesterday\n    $ trash-empty 1\n    $ trash-list\n    2008-02-19 20:11:34 /home/einar/today\n\nRemove only files matching a pattern::\n\n    $ trash-rm \\*.o\n\nNote: you need to use quotes in order to protect the pattern from shell expansion.\n\nFAQ\n---\n\nHow to create a top level .Trash dir?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSteps ::\n\n    sudo mkdir --parent /.Trash\n    sudo chmod a+rw /.Trash\n    sudo chmod +t /.Trash\n\nCan I alias `rm` to `trash-put`?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can but you shouldn't. In the early days I thought it was a good idea to do\nthat but now I changed my mind. \n\nAlthough the interface of `trash-put` seems to be compatible with `rm`, it has\ndifferent semantics which will cause you problems. For example, while `rm`\nrequires `-R` for deleting directories `trash-put` does not.\n\nBut sometimes I forget to use `trash-put`, really can't I?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou could alias `rm` to something that will remind you to not use it::\n\n    alias rm='echo \"This is not the command you are looking for.\"; false'\n\nThen, if you really want to use `rm`, simply prepend a backslash to bypass the\nalias::\n\n    \\rm file-without-hope\n\nNote that Bash aliases are used only in interactive shells, so using \nthis alias should not interfere with scripts that expect to use `rm`.\n\nWhere the trashed files go?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\nFile trashed from the home partition will be moved here::\n\n    ~/.local/share/Trash/\n\nHow to auto delete files older that 30 days?\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nRun this::\n\n    (crontab -l ; echo \"@daily $(which trash-empty) 30\") | crontab -\n\nThis will update your crontab file with a `trash-empty` command that runs daily\nand removes files older than 30 days. To review your crontab use: `crontab -l`\n\nInstallation\n------------\n\nThe easy way\n~~~~~~~~~~~~\n\nRequirements:\n * Python 3 (Python 2.7 also work)\n * pipx_ (optional, to install in a clean environment)\n\nIf pipx is available::\n\n    pipx install trash-cli\n\nAlternatively, install with vanilla pip::\n\n    pip install trash-cli\n\nNote: you may want add ~/.local/bin to the PATH::\n\n    echo 'export PATH=\"$PATH\":~/.local/bin' >> ~/.bashrc\n    source ~/.bashrc # reload .bashrc\n\nFor uninstalling use::\n\n    pipx uninstall trash-cli\n\nor::\n\n    pip uninstall trash-cli\n\nBleeding Edge (from sources)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFirst of all you need to uninstall any previous version of trash-cli::\n\n    $ [sudo] pip uninstall trash-cli # remove the previous version (with pip)\n    $ [sudo] apt-get remove trash-cli # remove the previous version (with apt)\n    $ [sudo] yum uninstall trash-cli # remove the previous version (with yum)\n    $ ... # refer to the package manager of your distribution\n\nThen install the latest version from git::\n\n    $ [sudo] pip install git+https://github.com/andreafrancia/trash-cli\n\nAfter the user installation you may want add this line to your .bashrc/.zshrc::\n\n    export PATH=~/.local/bin:\"$PATH\"\n\nFrom package manager\n~~~~~~~~~~~~~~~~~~~~\n\nDebian/Ubuntu (apt)::\n\n    sudo apt install trash-cli\n\nArch Linux (pacman)::\n\n    sudo pacman -S trash-cli\n\nFedora (dnf)::\n\n    sudo dnf install trash-cli\n\nInstall shell completions\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou need install by::\n\n    pipx install 'trash-cli[completion]'\n\nor::\n\n    pip install 'trash-cli[completion]'\n\nThen::\n\n    cmds=(trash-empty trash-list trash-restore trash-put trash)\n    for cmd in ${cmds[@]}; do\n      $cmd --print-completion bash | sudo tee /usr/share/bash-completion/completions/$cmd\n      $cmd --print-completion zsh | sudo tee /usr/share/zsh/site-functions/_$cmd\n      $cmd --print-completion tcsh | sudo tee /etc/profile.d/$cmd.completion.csh\n    done\n\nBugs\n----\n\nIf you discover a bug please report it here:\n\n    https://github.com/andreafrancia/trash-cli/issues\n\nFeedback\n--------\n\nYou can send me an email using andrea@andreafrancia.it.\n\nDevelopment\n-----------\n\nEnvironment setup::\n\n    python -m venv .venv\n    source .venv/bin/activate\n    pip install -r requirements-dev.txt -r requirements.txt\n\nRunning tests::\n\n    pytest -m 'not slow'        # run only fast tests\n    pytest -m 'slow'            # run slow tests\n    pytest                      # run all tests\n\nThanks\n------\nThanks to Paypal donors.\n\nThanks to `project contributors`_.\n\nThanks to `JetBrains`_ for their license for Open Source Development\n\n.. |Downloads| image:: https://img.shields.io/pypi/dm/trash-cli\n.. |Donate| image:: https://www.paypalobjects.com/en_GB/i/btn/btn_donate_SM.gif\n.. _Donate: https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=93L6PYT4WBN5A\n.. _简体中文: https://github.com/andreafrancia/trash-cli/blob/master/README_zh-CN.rst\n.. _project contributors: https://github.com/andreafrancia/trash-cli/graphs/contributors\n.. _JetBrains: https://jb.gg/OpenSource\n.. _pipx: https://pypa.github.io/pipx/\n"
        },
        {
          "name": "README_zh-CN.rst",
          "type": "blob",
          "size": 4.8427734375,
          "content": "trash-cli——FreeDesktop.org 回收站的命令行界面\n=============================================\n\n|Donate|_\n\n`English`_\n\ntrash-cli\n用于移动文件到回收站，同时会记录文件的原地址、删除日期和权限。trash-cli\n和 KDE、GNOME、XFCE 使用同一个回收站，你可以在命令行或脚本运行\ntrash-cli。\n\ntrash-cli 提供以下命令：\n\n::\n\n   trash-put           把文件或目录移动到回收站\n   trash-empty         清空回收站\n   trash-list          列出回收站文件\n   trash-restore       恢复回收站文件\n   trash-rm            删除回收站文件\n\n用法\n----\n\n移动文件到回收站：\n\n::\n\n   $ trash-put\n\n列出回收站文件：\n\n::\n\n   $ trash-list\n   2008-06-01 10:30:48 /home/andrea/bar\n   2008-06-02 21:50:41 /home/andrea/bar\n   2008-06-23 21:50:49 /home/andrea/foo\n\n搜索回收站文件：\n\n::\n\n   $ trash-list | grep foo\n   2007-08-30 12:36:00 /home/andrea/foo\n   2007-08-30 12:39:41 /home/andrea/foo\n\n恢复回收站文件：\n\n::\n\n   $ trash-restore\n   0 2007-08-30 12:36:00 /home/andrea/foo\n   1 2007-08-30 12:39:41 /home/andrea/bar\n   2 2007-08-30 12:39:41 /home/andrea/bar2\n   3 2007-08-30 12:39:41 /home/andrea/foo2\n   4 2007-08-30 12:39:41 /home/andrea/foo\n   What file to restore [0..4]: 4\n   $ ls foo\n   foo\n\n删除所有回收站文件：\n\n::\n\n   $ trash-empty\n\n删除回收站中 n 天前被回收的文件：\n\n::\n\n   $ trash-empty <days>\n\n示例：\n\n::\n\n   $ date\n   Tue Feb 19 20:26:52 CET 2008\n   $ trash-list\n   2008-02-19 20:11:34 /home/einar/today\n   2008-02-18 20:11:34 /home/einar/yesterday\n   2008-02-10 20:11:34 /home/einar/last_week\n   $ trash-empty 7\n   $ trash-list\n   2008-02-19 20:11:34 /home/einar/today\n   2008-02-18 20:11:34 /home/einar/yesterday\n   $ trash-empty 1\n   $ trash-list\n   2008-02-19 20:11:34 /home/einar/today\n\n只删除符合某种模式的文件：\n\n::\n\n   $ trash-rm \\*.o\n\n注意：要用双引号圈住模式来避免 shell 拓展。\n\n常见问题\n--------\n\n如何创建顶级 .Trash 目录？\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n步骤：\n\n::\n\n   sudo mkdir --parent /.Trash\n   sudo chmod a+rw /.Trash\n   sudo chmod +t /.Trash\n\n我能把 `rm` 的别名设置为 `trash-put` 吗？\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n可以，但不应该这样做。以前我觉得这是个好主意，但现在我不觉得。\n\n虽然 `trash-put` 的界面看起来与 `rm`\n兼容，但它们有不同的语法，这些差异会导致一些问题。比如，用 `rm`\n删除目录时需要 `-R`\\ ，\\ `trash-put` 则不需要。\n\n但有时候我忘记用 `trash-put` 了，真的不能给 `rm` 设置别名吗？\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n你可以给 `rm` 设置一个别名来提醒你不要使用它：\n\n::\n\n   alias rm='echo \"This is not the command you are looking for.\"; false'\n\n如果你真的要用 `rm`\\ ，那就在 `rm` 前加上斜杠来取消别名：\n\n::\n\n   \\rm file-without-hope\n\n注意，Bash 别名是有在交互式界面才有效，所以使用这个别名不会影响使用 `rm`\n的脚本。\n\n被移动到回收站的文件在哪？\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n从 home 分区移动到回收站的文件在这：\n\n::\n\n   ~/.local/share/Trash/\n\n安装\n----\n\n简单方法\n~~~~~~~~\n\n要求：\n\n   -  Python 3 (Python 2.7 也可以)\n   -  pip (在 Debian 上用 `apt-get install python-pip` 来安装 pip)\n   -  pipx_ (可选，推荐，安装在虚拟环境中以保护系统环境)\n\n安装命令:\n\n::\n\n   pipx install trash-cli\n   # 或者\n   pip install trash-cli\n\n源码安装\n~~~~~~~~\n\n为所有用户安装：\n\n::\n\n   git clone https://github.com/andreafrancia/trash-cli.git\n   cd trash-cli\n   sudo pip install .\n\n为当前用户安装：\n\n::\n\n   git clone https://github.com/andreafrancia/trash-cli.git\n   cd trash-cli\n   pip install .\n\n为当前用户安装后你可能需要把以下代码添加到 .bashrc：\n\n::\n\n   export PATH=~/.local/bin:\"$PATH\"\n\n卸载命令：\n\n::\n\n   pipx uninstall trash-cli\n   # 或者\n   pip uninstall trash-cli\n\n用包管理器安装\n~~~~~~~~~~~~~~\n\nDebian/Ubuntu (apt)::\n\n    sudo apt install trash-cli\n\n反馈与 Bug 报告\n---------------\n\n如果你发现了 bug，请在这里报告：\n\n   https://github.com/andreafrancia/trash-cli/issues\n\n你也可以给我发邮件 andrea@andreafrancia.it\\ 。我的推特帐号是\n@andreafrancia。\n\n开发\n----\n\n环境设置：\n\n::\n\n   virtualenv env --no-site-packages\n   source env/bin/activate\n   pip install -r requirements-dev.txt\n\n运行测试：\n\n::\n\n   pytest -m 'not slow'        # 只运行单元测试\n   pytest -m 'slow'            # 运行所有集成测试\n   pytest                      # 运行所有测试\n\n.. |Donate| image:: https://www.paypalobjects.com/en_GB/i/btn/btn_donate_SM.gif\n.. _Donate: https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=93L6PYT4WBN5A\n.. _English: https://github.com/andreafrancia/trash-cli/blob/master/README.rst\n.. _pipx: https://pypa.github.io/pipx\n"
        },
        {
          "name": "Vagrantfile",
          "type": "blob",
          "size": 0.236328125,
          "content": "# -*- mode: ruby -*-\n# vi: set ft=ruby :\n\nVagrant.configure(2) do |config|\n  config.vm.box = \"debian/buster64\"\n\n  config.vm.provision \"shell\", inline: <<-SHELL\n    sudo apt-get update\n    sudo apt-get install -y python-setuptools\n  SHELL\nend\n"
        },
        {
          "name": "conftest.py",
          "type": "blob",
          "size": 0.1201171875,
          "content": "def pytest_configure(config):\n    config.addinivalue_line(\n        \"markers\", \"slow: tests that uses the filesystem\"\n    )\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "man",
          "type": "tree",
          "content": null
        },
        {
          "name": "mypy.ini",
          "type": "blob",
          "size": 0.0302734375,
          "content": "[mypy]\nfiles = tests, trashcli\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 0.087890625,
          "content": "[build-system]\nrequires = [\"setuptools\", \"wheel\"]\nbuild-backend = \"setuptools.build_meta\"\n"
        },
        {
          "name": "requirements-dev.txt",
          "type": "blob",
          "size": 0.3310546875,
          "content": "# testing\npytest\nmock; python_version < '3.3'\nflexmock\nparameterized\ntox\nPyYAML <= 5.4.1; python_version ~= '2.7'\nPyYAML <= 5.2; python_version ~= '3.4'\nPyYAML <= 5.3.1; python_version ~= '3.5'\nPyYAML; python_version >= '3.6'\n# build and publish\nbuild\nsetuptools\ntwine\n# types\nmypy; python_version >= '3'\ntypes-six\ntypes-mock\ntypes-psutil\n"
        },
        {
          "name": "requirements.txt",
          "type": "blob",
          "size": 0.111328125,
          "content": "psutil\nsix\ntyping; python_version < '3.8'\ntyping_extensions; python_version < '3.8'\nenum34; python_version < '3.4'"
        },
        {
          "name": "scripts",
          "type": "tree",
          "content": null
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 1.1259765625,
          "content": "[metadata]\nname = trash-cli\nversion = attr: trashcli.trash.version\nauthor = Andrea Francia\nauthor_email = andrea@andreafrancia.it\nurl = https://github.com/andreafrancia/trash-cli\ndescription = Command line interface to FreeDesktop.org Trash.\nlong_description = file: README.rst\nlicense = GPL v2\nlong_description_content_type = text/x-rst\n\n[options]\npackages =\n    trashcli\n    trashcli.empty\n    trashcli.lib\n    trashcli.list\n    trashcli.list.minor_actions\n    trashcli.put\n    trashcli.put.core\n    trashcli.put.fs\n    trashcli.put.janitor_tools\n    trashcli.put.reporting\n    trashcli.restore\n    trashcli.rm\n    trashcli.fstab\n    trashcli.parse_trashinfo\n\nscripts =\n    trash\n    trash-put\n    trash-list\n    trash-restore\n    trash-empty\n    trash-rm\n\ninstall_requires =\n    psutil\n    six\n    typing; python_version < '3.8'\n    typing_extensions; python_version < '3.8'\n    enum34; python_version < '3.4'\n\n[options.extras_require]\ncompletion =\n    shtab\n\n[options.data_files]\nshare/man/man1 =\n    man/man1/trash-empty.1\n    man/man1/trash-list.1\n    man/man1/trash-restore.1\n    man/man1/trash.1\n    man/man1/trash-put.1\n    man/man1/trash-rm.1\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 0.0966796875,
          "content": "# Copyright (C) 2007-2021 Andrea Francia Trivolzio(PV) Italy\nfrom setuptools import setup\n\nsetup()\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "tox.ini",
          "type": "blob",
          "size": 0.3232421875,
          "content": "[tox]\nrequires = virtualenv<20.22.0\nenvlist = py27, py310\n\n[testenv]\ndeps =\n    # run\n    psutil\n    six\n    typing; python_version < '3.8'\n    enum34; python_version < '3.4'\n    # testing\n    pytest\n    mock; python_version < '3.3'\n    flexmock\n    parameterized\n    # build testing\n    setuptools\ncommands =\n    pytest {posargs}\n"
        },
        {
          "name": "trash",
          "type": "blob",
          "size": 0.12890625,
          "content": "#!/usr/bin/env python\nfrom __future__ import absolute_import\nimport sys\nfrom trashcli.put.main import main as main\nsys.exit(main())\n"
        },
        {
          "name": "trash-empty",
          "type": "blob",
          "size": 0.130859375,
          "content": "#!/usr/bin/env python\nfrom __future__ import absolute_import\nimport sys\nfrom trashcli.empty.main import main as main\nsys.exit(main())\n"
        },
        {
          "name": "trash-list",
          "type": "blob",
          "size": 0.1298828125,
          "content": "#!/usr/bin/env python\nfrom __future__ import absolute_import\nimport sys\nfrom trashcli.list.main import main as main\nsys.exit(main())\n"
        },
        {
          "name": "trash-put",
          "type": "blob",
          "size": 0.12890625,
          "content": "#!/usr/bin/env python\nfrom __future__ import absolute_import\nimport sys\nfrom trashcli.put.main import main as main\nsys.exit(main())\n"
        },
        {
          "name": "trash-restore",
          "type": "blob",
          "size": 0.1328125,
          "content": "#!/usr/bin/env python\nfrom __future__ import absolute_import\nimport sys\nfrom trashcli.restore.main import main as main\nsys.exit(main())\n"
        },
        {
          "name": "trash-rm",
          "type": "blob",
          "size": 0.1279296875,
          "content": "#!/usr/bin/env python\nfrom __future__ import absolute_import\nimport sys\nfrom trashcli.rm.main import main as main\nsys.exit(main())\n"
        },
        {
          "name": "trashcli",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}