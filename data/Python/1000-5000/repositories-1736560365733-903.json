{
  "metadata": {
    "timestamp": 1736560365733,
    "page": 903,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjkxMA==",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "nabla-c0d3/sslyze",
      "stars": 3304,
      "defaultBranch": "release",
      "files": [
        {
          "name": ".dockerignore",
          "type": "blob",
          "size": 0.05859375,
          "content": "**/.pytest_cache\n**/__pycache__\n/tests\n/docs\n/.github\n/.git\n"
        },
        {
          "name": ".gitattributes",
          "type": "blob",
          "size": 0.1396484375,
          "content": "# These files are text and should be normalized (convert crlf => lf)\n*.py      text   diff=python\n*.pem     text\n*.txt     text\n*.md      text\n"
        },
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.4775390625,
          "content": "htmlcov/\n.mypy_cache/\n.pytest_cache/\n.vscode\n\n# Pipenv\n.venv\n.venv311\n.venvln\n\n\n*.py[cod]\n\n# C extensions\n*.so\n\n# Packages\n*.egg\n*.egg-info\ndist\nbuild\neggs\nparts\nbin\nvar\nsdist\ndevelop-eggs\n.installed.cfg\nlib\nlib64\n\n# Installer logs\npip-log.txt\n\n# Unit test / coverage reports\n.coverage\n.tox\nnosetests.xml\n\n\n# Pydev\n.project\n.pydevproject\n\n#Pycharm\n.idea\n\n# OpenSSL DLLs\n*.dll\n\n# Tests\n*.xml\n\n.DS_Store\n\n\n# Sphynx\ndocs/_build/*\ndocs/documentation/_sources/*\ndocs/documentation/.doctrees/*\n\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 0.623046875,
          "content": "# set python version\nARG PYTHON_VERSION=\"3.12\"\n\nFROM docker.io/python:${PYTHON_VERSION}-slim AS build\nCOPY . /sslyze/\nWORKDIR /sslyze\n# use a venv\nRUN python -m venv /opt/venv\nENV PATH=\"/opt/venv/bin:$PATH\"\n# install sslyze based on sourcecode\nRUN pip install --upgrade pip setuptools wheel\nRUN pip install .\n\nFROM docker.io/python:${PYTHON_VERSION}-slim AS run\n# set user to a non-root user sslyze\nRUN adduser --no-create-home --disabled-password --gecos \"\" --uid 1001 sslyze\nUSER sslyze\nWORKDIR /sslyze\n# copy sslyze from build stage\nCOPY --from=build /opt/venv /opt/venv\nENV PATH=\"/opt/venv/bin:$PATH\"\nENTRYPOINT [\"sslyze\"]\nCMD [\"-h\"]\n"
        },
        {
          "name": "LICENSE.txt",
          "type": "blob",
          "size": 33.7138671875,
          "content": "                    GNU AFFERO GENERAL PUBLIC LICENSE\n                       Version 3, 19 November 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <https://fsf.org/>\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n                            Preamble\n\n  The GNU Affero General Public License is a free, copyleft license for\nsoftware and other kinds of works, specifically designed to ensure\ncooperation with the community in the case of network server software.\n\n  The licenses for most software and other practical works are designed\nto take away your freedom to share and change the works.  By contrast,\nour General Public Licenses are intended to guarantee your freedom to\nshare and change all versions of a program--to make sure it remains free\nsoftware for all its users.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthem if you wish), that you receive source code or can get it if you\nwant it, that you can change the software or use pieces of it in new\nfree programs, and that you know you can do these things.\n\n  Developers that use our General Public Licenses protect your rights\nwith two steps: (1) assert copyright on the software, and (2) offer\nyou this License which gives you legal permission to copy, distribute\nand/or modify the software.\n\n  A secondary benefit of defending all users' freedom is that\nimprovements made in alternate versions of the program, if they\nreceive widespread use, become available for other developers to\nincorporate.  Many developers of free software are heartened and\nencouraged by the resulting cooperation.  However, in the case of\nsoftware used on network servers, this result may fail to come about.\nThe GNU General Public License permits making a modified version and\nletting the public access it on a server without ever releasing its\nsource code to the public.\n\n  The GNU Affero General Public License is designed specifically to\nensure that, in such cases, the modified source code becomes available\nto the community.  It requires the operator of a network server to\nprovide the source code of the modified version running there to the\nusers of that server.  Therefore, public use of a modified version, on\na publicly accessible server, gives the public access to the source\ncode of the modified version.\n\n  An older license, called the Affero General Public License and\npublished by Affero, was designed to accomplish similar goals.  This is\na different license, not a version of the Affero GPL, but Affero has\nreleased a new version of the Affero GPL which permits relicensing under\nthis license.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\n                       TERMS AND CONDITIONS\n\n  0. Definitions.\n\n  \"This License\" refers to version 3 of the GNU Affero General Public License.\n\n  \"Copyright\" also means copyright-like laws that apply to other kinds of\nworks, such as semiconductor masks.\n\n  \"The Program\" refers to any copyrightable work licensed under this\nLicense.  Each licensee is addressed as \"you\".  \"Licensees\" and\n\"recipients\" may be individuals or organizations.\n\n  To \"modify\" a work means to copy from or adapt all or part of the work\nin a fashion requiring copyright permission, other than the making of an\nexact copy.  The resulting work is called a \"modified version\" of the\nearlier work or a work \"based on\" the earlier work.\n\n  A \"covered work\" means either the unmodified Program or a work based\non the Program.\n\n  To \"propagate\" a work means to do anything with it that, without\npermission, would make you directly or secondarily liable for\ninfringement under applicable copyright law, except executing it on a\ncomputer or modifying a private copy.  Propagation includes copying,\ndistribution (with or without modification), making available to the\npublic, and in some countries other activities as well.\n\n  To \"convey\" a work means any kind of propagation that enables other\nparties to make or receive copies.  Mere interaction with a user through\na computer network, with no transfer of a copy, is not conveying.\n\n  An interactive user interface displays \"Appropriate Legal Notices\"\nto the extent that it includes a convenient and prominently visible\nfeature that (1) displays an appropriate copyright notice, and (2)\ntells the user that there is no warranty for the work (except to the\nextent that warranties are provided), that licensees may convey the\nwork under this License, and how to view a copy of this License.  If\nthe interface presents a list of user commands or options, such as a\nmenu, a prominent item in the list meets this criterion.\n\n  1. Source Code.\n\n  The \"source code\" for a work means the preferred form of the work\nfor making modifications to it.  \"Object code\" means any non-source\nform of a work.\n\n  A \"Standard Interface\" means an interface that either is an official\nstandard defined by a recognized standards body, or, in the case of\ninterfaces specified for a particular programming language, one that\nis widely used among developers working in that language.\n\n  The \"System Libraries\" of an executable work include anything, other\nthan the work as a whole, that (a) is included in the normal form of\npackaging a Major Component, but which is not part of that Major\nComponent, and (b) serves only to enable use of the work with that\nMajor Component, or to implement a Standard Interface for which an\nimplementation is available to the public in source code form.  A\n\"Major Component\", in this context, means a major essential component\n(kernel, window system, and so on) of the specific operating system\n(if any) on which the executable work runs, or a compiler used to\nproduce the work, or an object code interpreter used to run it.\n\n  The \"Corresponding Source\" for a work in object code form means all\nthe source code needed to generate, install, and (for an executable\nwork) run the object code and to modify the work, including scripts to\ncontrol those activities.  However, it does not include the work's\nSystem Libraries, or general-purpose tools or generally available free\nprograms which are used unmodified in performing those activities but\nwhich are not part of the work.  For example, Corresponding Source\nincludes interface definition files associated with source files for\nthe work, and the source code for shared libraries and dynamically\nlinked subprograms that the work is specifically designed to require,\nsuch as by intimate data communication or control flow between those\nsubprograms and other parts of the work.\n\n  The Corresponding Source need not include anything that users\ncan regenerate automatically from other parts of the Corresponding\nSource.\n\n  The Corresponding Source for a work in source code form is that\nsame work.\n\n  2. Basic Permissions.\n\n  All rights granted under this License are granted for the term of\ncopyright on the Program, and are irrevocable provided the stated\nconditions are met.  This License explicitly affirms your unlimited\npermission to run the unmodified Program.  The output from running a\ncovered work is covered by this License only if the output, given its\ncontent, constitutes a covered work.  This License acknowledges your\nrights of fair use or other equivalent, as provided by copyright law.\n\n  You may make, run and propagate covered works that you do not\nconvey, without conditions so long as your license otherwise remains\nin force.  You may convey covered works to others for the sole purpose\nof having them make modifications exclusively for you, or provide you\nwith facilities for running those works, provided that you comply with\nthe terms of this License in conveying all material for which you do\nnot control copyright.  Those thus making or running the covered works\nfor you must do so exclusively on your behalf, under your direction\nand control, on terms that prohibit them from making any copies of\nyour copyrighted material outside their relationship with you.\n\n  Conveying under any other circumstances is permitted solely under\nthe conditions stated below.  Sublicensing is not allowed; section 10\nmakes it unnecessary.\n\n  3. Protecting Users' Legal Rights From Anti-Circumvention Law.\n\n  No covered work shall be deemed part of an effective technological\nmeasure under any applicable law fulfilling obligations under article\n11 of the WIPO copyright treaty adopted on 20 December 1996, or\nsimilar laws prohibiting or restricting circumvention of such\nmeasures.\n\n  When you convey a covered work, you waive any legal power to forbid\ncircumvention of technological measures to the extent such circumvention\nis effected by exercising rights under this License with respect to\nthe covered work, and you disclaim any intention to limit operation or\nmodification of the work as a means of enforcing, against the work's\nusers, your or third parties' legal rights to forbid circumvention of\ntechnological measures.\n\n  4. Conveying Verbatim Copies.\n\n  You may convey verbatim copies of the Program's source code as you\nreceive it, in any medium, provided that you conspicuously and\nappropriately publish on each copy an appropriate copyright notice;\nkeep intact all notices stating that this License and any\nnon-permissive terms added in accord with section 7 apply to the code;\nkeep intact all notices of the absence of any warranty; and give all\nrecipients a copy of this License along with the Program.\n\n  You may charge any price or no price for each copy that you convey,\nand you may offer support or warranty protection for a fee.\n\n  5. Conveying Modified Source Versions.\n\n  You may convey a work based on the Program, or the modifications to\nproduce it from the Program, in the form of source code under the\nterms of section 4, provided that you also meet all of these conditions:\n\n    a) The work must carry prominent notices stating that you modified\n    it, and giving a relevant date.\n\n    b) The work must carry prominent notices stating that it is\n    released under this License and any conditions added under section\n    7.  This requirement modifies the requirement in section 4 to\n    \"keep intact all notices\".\n\n    c) You must license the entire work, as a whole, under this\n    License to anyone who comes into possession of a copy.  This\n    License will therefore apply, along with any applicable section 7\n    additional terms, to the whole of the work, and all its parts,\n    regardless of how they are packaged.  This License gives no\n    permission to license the work in any other way, but it does not\n    invalidate such permission if you have separately received it.\n\n    d) If the work has interactive user interfaces, each must display\n    Appropriate Legal Notices; however, if the Program has interactive\n    interfaces that do not display Appropriate Legal Notices, your\n    work need not make them do so.\n\n  A compilation of a covered work with other separate and independent\nworks, which are not by their nature extensions of the covered work,\nand which are not combined with it such as to form a larger program,\nin or on a volume of a storage or distribution medium, is called an\n\"aggregate\" if the compilation and its resulting copyright are not\nused to limit the access or legal rights of the compilation's users\nbeyond what the individual works permit.  Inclusion of a covered work\nin an aggregate does not cause this License to apply to the other\nparts of the aggregate.\n\n  6. Conveying Non-Source Forms.\n\n  You may convey a covered work in object code form under the terms\nof sections 4 and 5, provided that you also convey the\nmachine-readable Corresponding Source under the terms of this License,\nin one of these ways:\n\n    a) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by the\n    Corresponding Source fixed on a durable physical medium\n    customarily used for software interchange.\n\n    b) Convey the object code in, or embodied in, a physical product\n    (including a physical distribution medium), accompanied by a\n    written offer, valid for at least three years and valid for as\n    long as you offer spare parts or customer support for that product\n    model, to give anyone who possesses the object code either (1) a\n    copy of the Corresponding Source for all the software in the\n    product that is covered by this License, on a durable physical\n    medium customarily used for software interchange, for a price no\n    more than your reasonable cost of physically performing this\n    conveying of source, or (2) access to copy the\n    Corresponding Source from a network server at no charge.\n\n    c) Convey individual copies of the object code with a copy of the\n    written offer to provide the Corresponding Source.  This\n    alternative is allowed only occasionally and noncommercially, and\n    only if you received the object code with such an offer, in accord\n    with subsection 6b.\n\n    d) Convey the object code by offering access from a designated\n    place (gratis or for a charge), and offer equivalent access to the\n    Corresponding Source in the same way through the same place at no\n    further charge.  You need not require recipients to copy the\n    Corresponding Source along with the object code.  If the place to\n    copy the object code is a network server, the Corresponding Source\n    may be on a different server (operated by you or a third party)\n    that supports equivalent copying facilities, provided you maintain\n    clear directions next to the object code saying where to find the\n    Corresponding Source.  Regardless of what server hosts the\n    Corresponding Source, you remain obligated to ensure that it is\n    available for as long as needed to satisfy these requirements.\n\n    e) Convey the object code using peer-to-peer transmission, provided\n    you inform other peers where the object code and Corresponding\n    Source of the work are being offered to the general public at no\n    charge under subsection 6d.\n\n  A separable portion of the object code, whose source code is excluded\nfrom the Corresponding Source as a System Library, need not be\nincluded in conveying the object code work.\n\n  A \"User Product\" is either (1) a \"consumer product\", which means any\ntangible personal property which is normally used for personal, family,\nor household purposes, or (2) anything designed or sold for incorporation\ninto a dwelling.  In determining whether a product is a consumer product,\ndoubtful cases shall be resolved in favor of coverage.  For a particular\nproduct received by a particular user, \"normally used\" refers to a\ntypical or common use of that class of product, regardless of the status\nof the particular user or of the way in which the particular user\nactually uses, or expects or is expected to use, the product.  A product\nis a consumer product regardless of whether the product has substantial\ncommercial, industrial or non-consumer uses, unless such uses represent\nthe only significant mode of use of the product.\n\n  \"Installation Information\" for a User Product means any methods,\nprocedures, authorization keys, or other information required to install\nand execute modified versions of a covered work in that User Product from\na modified version of its Corresponding Source.  The information must\nsuffice to ensure that the continued functioning of the modified object\ncode is in no case prevented or interfered with solely because\nmodification has been made.\n\n  If you convey an object code work under this section in, or with, or\nspecifically for use in, a User Product, and the conveying occurs as\npart of a transaction in which the right of possession and use of the\nUser Product is transferred to the recipient in perpetuity or for a\nfixed term (regardless of how the transaction is characterized), the\nCorresponding Source conveyed under this section must be accompanied\nby the Installation Information.  But this requirement does not apply\nif neither you nor any third party retains the ability to install\nmodified object code on the User Product (for example, the work has\nbeen installed in ROM).\n\n  The requirement to provide Installation Information does not include a\nrequirement to continue to provide support service, warranty, or updates\nfor a work that has been modified or installed by the recipient, or for\nthe User Product in which it has been modified or installed.  Access to a\nnetwork may be denied when the modification itself materially and\nadversely affects the operation of the network or violates the rules and\nprotocols for communication across the network.\n\n  Corresponding Source conveyed, and Installation Information provided,\nin accord with this section must be in a format that is publicly\ndocumented (and with an implementation available to the public in\nsource code form), and must require no special password or key for\nunpacking, reading or copying.\n\n  7. Additional Terms.\n\n  \"Additional permissions\" are terms that supplement the terms of this\nLicense by making exceptions from one or more of its conditions.\nAdditional permissions that are applicable to the entire Program shall\nbe treated as though they were included in this License, to the extent\nthat they are valid under applicable law.  If additional permissions\napply only to part of the Program, that part may be used separately\nunder those permissions, but the entire Program remains governed by\nthis License without regard to the additional permissions.\n\n  When you convey a copy of a covered work, you may at your option\nremove any additional permissions from that copy, or from any part of\nit.  (Additional permissions may be written to require their own\nremoval in certain cases when you modify the work.)  You may place\nadditional permissions on material, added by you to a covered work,\nfor which you have or can give appropriate copyright permission.\n\n  Notwithstanding any other provision of this License, for material you\nadd to a covered work, you may (if authorized by the copyright holders of\nthat material) supplement the terms of this License with terms:\n\n    a) Disclaiming warranty or limiting liability differently from the\n    terms of sections 15 and 16 of this License; or\n\n    b) Requiring preservation of specified reasonable legal notices or\n    author attributions in that material or in the Appropriate Legal\n    Notices displayed by works containing it; or\n\n    c) Prohibiting misrepresentation of the origin of that material, or\n    requiring that modified versions of such material be marked in\n    reasonable ways as different from the original version; or\n\n    d) Limiting the use for publicity purposes of names of licensors or\n    authors of the material; or\n\n    e) Declining to grant rights under trademark law for use of some\n    trade names, trademarks, or service marks; or\n\n    f) Requiring indemnification of licensors and authors of that\n    material by anyone who conveys the material (or modified versions of\n    it) with contractual assumptions of liability to the recipient, for\n    any liability that these contractual assumptions directly impose on\n    those licensors and authors.\n\n  All other non-permissive additional terms are considered \"further\nrestrictions\" within the meaning of section 10.  If the Program as you\nreceived it, or any part of it, contains a notice stating that it is\ngoverned by this License along with a term that is a further\nrestriction, you may remove that term.  If a license document contains\na further restriction but permits relicensing or conveying under this\nLicense, you may add to a covered work material governed by the terms\nof that license document, provided that the further restriction does\nnot survive such relicensing or conveying.\n\n  If you add terms to a covered work in accord with this section, you\nmust place, in the relevant source files, a statement of the\nadditional terms that apply to those files, or a notice indicating\nwhere to find the applicable terms.\n\n  Additional terms, permissive or non-permissive, may be stated in the\nform of a separately written license, or stated as exceptions;\nthe above requirements apply either way.\n\n  8. Termination.\n\n  You may not propagate or modify a covered work except as expressly\nprovided under this License.  Any attempt otherwise to propagate or\nmodify it is void, and will automatically terminate your rights under\nthis License (including any patent licenses granted under the third\nparagraph of section 11).\n\n  However, if you cease all violation of this License, then your\nlicense from a particular copyright holder is reinstated (a)\nprovisionally, unless and until the copyright holder explicitly and\nfinally terminates your license, and (b) permanently, if the copyright\nholder fails to notify you of the violation by some reasonable means\nprior to 60 days after the cessation.\n\n  Moreover, your license from a particular copyright holder is\nreinstated permanently if the copyright holder notifies you of the\nviolation by some reasonable means, this is the first time you have\nreceived notice of violation of this License (for any work) from that\ncopyright holder, and you cure the violation prior to 30 days after\nyour receipt of the notice.\n\n  Termination of your rights under this section does not terminate the\nlicenses of parties who have received copies or rights from you under\nthis License.  If your rights have been terminated and not permanently\nreinstated, you do not qualify to receive new licenses for the same\nmaterial under section 10.\n\n  9. Acceptance Not Required for Having Copies.\n\n  You are not required to accept this License in order to receive or\nrun a copy of the Program.  Ancillary propagation of a covered work\noccurring solely as a consequence of using peer-to-peer transmission\nto receive a copy likewise does not require acceptance.  However,\nnothing other than this License grants you permission to propagate or\nmodify any covered work.  These actions infringe copyright if you do\nnot accept this License.  Therefore, by modifying or propagating a\ncovered work, you indicate your acceptance of this License to do so.\n\n  10. Automatic Licensing of Downstream Recipients.\n\n  Each time you convey a covered work, the recipient automatically\nreceives a license from the original licensors, to run, modify and\npropagate that work, subject to this License.  You are not responsible\nfor enforcing compliance by third parties with this License.\n\n  An \"entity transaction\" is a transaction transferring control of an\norganization, or substantially all assets of one, or subdividing an\norganization, or merging organizations.  If propagation of a covered\nwork results from an entity transaction, each party to that\ntransaction who receives a copy of the work also receives whatever\nlicenses to the work the party's predecessor in interest had or could\ngive under the previous paragraph, plus a right to possession of the\nCorresponding Source of the work from the predecessor in interest, if\nthe predecessor has it or can get it with reasonable efforts.\n\n  You may not impose any further restrictions on the exercise of the\nrights granted or affirmed under this License.  For example, you may\nnot impose a license fee, royalty, or other charge for exercise of\nrights granted under this License, and you may not initiate litigation\n(including a cross-claim or counterclaim in a lawsuit) alleging that\nany patent claim is infringed by making, using, selling, offering for\nsale, or importing the Program or any portion of it.\n\n  11. Patents.\n\n  A \"contributor\" is a copyright holder who authorizes use under this\nLicense of the Program or a work on which the Program is based.  The\nwork thus licensed is called the contributor's \"contributor version\".\n\n  A contributor's \"essential patent claims\" are all patent claims\nowned or controlled by the contributor, whether already acquired or\nhereafter acquired, that would be infringed by some manner, permitted\nby this License, of making, using, or selling its contributor version,\nbut do not include claims that would be infringed only as a\nconsequence of further modification of the contributor version.  For\npurposes of this definition, \"control\" includes the right to grant\npatent sublicenses in a manner consistent with the requirements of\nthis License.\n\n  Each contributor grants you a non-exclusive, worldwide, royalty-free\npatent license under the contributor's essential patent claims, to\nmake, use, sell, offer for sale, import and otherwise run, modify and\npropagate the contents of its contributor version.\n\n  In the following three paragraphs, a \"patent license\" is any express\nagreement or commitment, however denominated, not to enforce a patent\n(such as an express permission to practice a patent or covenant not to\nsue for patent infringement).  To \"grant\" such a patent license to a\nparty means to make such an agreement or commitment not to enforce a\npatent against the party.\n\n  If you convey a covered work, knowingly relying on a patent license,\nand the Corresponding Source of the work is not available for anyone\nto copy, free of charge and under the terms of this License, through a\npublicly available network server or other readily accessible means,\nthen you must either (1) cause the Corresponding Source to be so\navailable, or (2) arrange to deprive yourself of the benefit of the\npatent license for this particular work, or (3) arrange, in a manner\nconsistent with the requirements of this License, to extend the patent\nlicense to downstream recipients.  \"Knowingly relying\" means you have\nactual knowledge that, but for the patent license, your conveying the\ncovered work in a country, or your recipient's use of the covered work\nin a country, would infringe one or more identifiable patents in that\ncountry that you have reason to believe are valid.\n\n  If, pursuant to or in connection with a single transaction or\narrangement, you convey, or propagate by procuring conveyance of, a\ncovered work, and grant a patent license to some of the parties\nreceiving the covered work authorizing them to use, propagate, modify\nor convey a specific copy of the covered work, then the patent license\nyou grant is automatically extended to all recipients of the covered\nwork and works based on it.\n\n  A patent license is \"discriminatory\" if it does not include within\nthe scope of its coverage, prohibits the exercise of, or is\nconditioned on the non-exercise of one or more of the rights that are\nspecifically granted under this License.  You may not convey a covered\nwork if you are a party to an arrangement with a third party that is\nin the business of distributing software, under which you make payment\nto the third party based on the extent of your activity of conveying\nthe work, and under which the third party grants, to any of the\nparties who would receive the covered work from you, a discriminatory\npatent license (a) in connection with copies of the covered work\nconveyed by you (or copies made from those copies), or (b) primarily\nfor and in connection with specific products or compilations that\ncontain the covered work, unless you entered into that arrangement,\nor that patent license was granted, prior to 28 March 2007.\n\n  Nothing in this License shall be construed as excluding or limiting\nany implied license or other defenses to infringement that may\notherwise be available to you under applicable patent law.\n\n  12. No Surrender of Others' Freedom.\n\n  If conditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot convey a\ncovered work so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you may\nnot convey it at all.  For example, if you agree to terms that obligate you\nto collect a royalty for further conveying from those to whom you convey\nthe Program, the only way you could satisfy both those terms and this\nLicense would be to refrain entirely from conveying the Program.\n\n  13. Remote Network Interaction; Use with the GNU General Public License.\n\n  Notwithstanding any other provision of this License, if you modify the\nProgram, your modified version must prominently offer all users\ninteracting with it remotely through a computer network (if your version\nsupports such interaction) an opportunity to receive the Corresponding\nSource of your version by providing access to the Corresponding Source\nfrom a network server at no charge, through some standard or customary\nmeans of facilitating copying of software.  This Corresponding Source\nshall include the Corresponding Source for any work covered by version 3\nof the GNU General Public License that is incorporated pursuant to the\nfollowing paragraph.\n\n  Notwithstanding any other provision of this License, you have\npermission to link or combine any covered work with a work licensed\nunder version 3 of the GNU General Public License into a single\ncombined work, and to convey the resulting work.  The terms of this\nLicense will continue to apply to the part which is the covered work,\nbut the work with which it is combined will remain governed by version\n3 of the GNU General Public License.\n\n  14. Revised Versions of this License.\n\n  The Free Software Foundation may publish revised and/or new versions of\nthe GNU Affero General Public License from time to time.  Such new versions\nwill be similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\n  Each version is given a distinguishing version number.  If the\nProgram specifies that a certain numbered version of the GNU Affero General\nPublic License \"or any later version\" applies to it, you have the\noption of following the terms and conditions either of that numbered\nversion or of any later version published by the Free Software\nFoundation.  If the Program does not specify a version number of the\nGNU Affero General Public License, you may choose any version ever published\nby the Free Software Foundation.\n\n  If the Program specifies that a proxy can decide which future\nversions of the GNU Affero General Public License can be used, that proxy's\npublic statement of acceptance of a version permanently authorizes you\nto choose that version for the Program.\n\n  Later license versions may give you additional or different\npermissions.  However, no additional obligations are imposed on any\nauthor or copyright holder as a result of your choosing to follow a\nlater version.\n\n  15. Disclaimer of Warranty.\n\n  THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY\nAPPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT\nHOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY\nOF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO,\nTHE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\nPURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM\nIS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF\nALL NECESSARY SERVICING, REPAIR OR CORRECTION.\n\n  16. Limitation of Liability.\n\n  IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS\nTHE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY\nGENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE\nUSE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF\nDATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD\nPARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS),\nEVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF\nSUCH DAMAGES.\n\n  17. Interpretation of Sections 15 and 16.\n\n  If the disclaimer of warranty and limitation of liability provided\nabove cannot be given local legal effect according to their terms,\nreviewing courts shall apply local law that most closely approximates\nan absolute waiver of all civil liability in connection with the\nProgram, unless a warranty or assumption of liability accompanies a\ncopy of the Program in return for a fee.\n\n                     END OF TERMS AND CONDITIONS\n\n            How to Apply These Terms to Your New Programs\n\n  If you develop a new program, and you want it to be of the greatest\npossible use to the public, the best way to achieve this is to make it\nfree software which everyone can redistribute and change under these terms.\n\n  To do so, attach the following notices to the program.  It is safest\nto attach them to the start of each source file to most effectively\nstate the exclusion of warranty; and each file should have at least\nthe \"copyright\" line and a pointer to where the full notice is found.\n\n    <one line to give the program's name and a brief idea of what it does.>\n    Copyright (C) <year>  <name of author>\n\n    This program is free software: you can redistribute it and/or modify\n    it under the terms of the GNU Affero General Public License as published by\n    the Free Software Foundation, either version 3 of the License, or\n    (at your option) any later version.\n\n    This program is distributed in the hope that it will be useful,\n    but WITHOUT ANY WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU Affero General Public License for more details.\n\n    You should have received a copy of the GNU Affero General Public License\n    along with this program.  If not, see <https://www.gnu.org/licenses/>.\n\nAlso add information on how to contact you by electronic and paper mail.\n\n  If your software can interact with users remotely through a computer\nnetwork, you should also make sure that it provides a way for users to\nget its source.  For example, if your program is a web application, its\ninterface could display a \"Source\" link that leads users to an archive\nof the code.  There are many ways you could offer source, and different\nsolutions will be better for different programs; see section 13 for the\nspecific requirements.\n\n  You should also get your employer (if you work as a programmer) or school,\nif any, to sign a \"copyright disclaimer\" for the program, if necessary.\nFor more information on this, and how to apply and follow the GNU AGPL, see\n<https://www.gnu.org/licenses/>.\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 4.1396484375,
          "content": "SSLyze\n======\n\n![Run Tests](https://github.com/nabla-c0d3/sslyze/workflows/Run%20Tests/badge.svg)\n[![Downloads](https://pepy.tech/badge/sslyze/month)](https://pepy.tech/project/sslyze)\n[![PyPI version](https://img.shields.io/pypi/v/sslyze.svg)](https://pypi.org/project/sslyze/)\n[![Python version](https://img.shields.io/pypi/pyversions/sslyze.svg)](https://pypi.org/project/sslyze/)\n\nSSLyze is a fast and powerful SSL/TLS scanning tool and Python library.\n\nSSLyze can analyze the SSL/TLS configuration of a server by connecting to it, in order to ensure that it uses strong\nencryption settings (certificate, cipher suites, elliptic curves, etc.), and that it is not vulnerable to known TLS\nattacks (Heartbleed, ROBOT, OpenSSL CCS injection, etc.).\n\nKey features\n------------\n\n* Focus on speed and reliability: SSLyze is a battle-tested tool that is used to reliably scan **hundreds of thousands**\nof servers every day.\n* Easy to operationalize: SSLyze can be directly run from CI/CD, in order to continuously check a server against \nMozilla's recommended TLS configuration.\n* Fully documented [Python API](https://nabla-c0d3.github.io/sslyze/documentation/) to run scans directly from any\nPython application, such as a function deployed to AWS Lambda.\n* Support for scanning non-HTTP servers including SMTP, XMPP, LDAP, POP, IMAP, RDP, Postgres and FTP servers.\n* Results of a scan can easily be saved to a JSON file for later processing.\n* And much more!\n\nQuick start\n-----------\n\nOn Windows, Linux (x86 or x64) and macOS, SSLyze can be installed directly via pip:\n\n```\n$ pip install --upgrade pip setuptools wheel\n$ pip install --upgrade sslyze\n$ python -m sslyze www.yahoo.com www.google.com \"[2607:f8b0:400a:807::2004]:443\"\n```\n\nIt can also be used via Docker:\n\n```\n$ docker run --rm -it nablac0d3/sslyze:6.1.0 www.google.com\n```\n\nLastly, a pre-compiled Windows executable can be downloaded from [the Releases\npage](https://github.com/nabla-c0d3/sslyze/releases).\n\nPython API Documentation\n------------------------\n\nA sample script describing how to use the SSLyze's Python API is available at [./api_sample.py](https://github.com/nabla-c0d3/sslyze/blob/release/api_sample.py).\n\nFull documentation for SSLyze's Python API is [available here][documentation].\n\nUsage as a CI/CD step\n---------------------\n\nBy default, SSLyze will check the server's scan results against Mozilla's recommended [\"intermediate\" TLS\nconfiguration](https://wiki.mozilla.org/Security/Server_Side_TLS), and will return a non-zero exit code if the server\nis not compliant. \n\n```\n$ python -m sslyze mozilla.com\n```\n```\nChecking results against Mozilla's \"intermediate\" configuration. See https://ssl-config.mozilla.org/ for more details.\n\nmozilla.com:443: OK - Compliant.\n```\n\nThe Mozilla configuration to check against can be configured via `--mozilla_config={old, intermediate, modern}`:\n```\n$ python -m sslyze --mozilla_config=modern mozilla.com\n```\n```\nChecking results against Mozilla's \"modern\" configuration. See https://ssl-config.mozilla.org/ for more details.\n\nmozilla.com:443: FAILED - Not compliant.\n    * certificate_types: Deployed certificate types are {'rsa'}, should have at least one of {'ecdsa'}.\n    * certificate_signatures: Deployed certificate signatures are {'sha256WithRSAEncryption'}, should have at least one of {'ecdsa-with-SHA512', 'ecdsa-with-SHA256', 'ecdsa-with-SHA384'}.\n    * tls_versions: TLS versions {'TLSv1.2'} are supported, but should be rejected.\n    * ciphers: Cipher suites {'TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384', 'TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256', 'TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256'} are supported, but should be rejected.\n```\n\nThis can be used to easily run an SSLyze scan as a CI/CD step.\n\nDevelopment environment\n-----------------------\n\nTo setup a development environment:\n\n```\n$ pip install --upgrade pip setuptools wheel\n$ pip install -e . \n$ pip install -r requirements-dev.txt\n```\n\nThe tests can then be run using:\n\n```\n$ invoke test\n```\n\nLicense\n-------\n\nCopyright (c) 2025 Alban Diquet\n\nSSLyze is made available under the terms of the GNU Affero General Public License (AGPL). See LICENSE.txt for details and exceptions.\n\n[documentation]: https://nabla-c0d3.github.io/sslyze/documentation\n"
        },
        {
          "name": "api_sample.py",
          "type": "blob",
          "size": 6.947265625,
          "content": "from datetime import datetime, timezone\nfrom pathlib import Path\nfrom typing import List\n\nfrom sslyze import (\n    Scanner,\n    ServerScanRequest,\n    SslyzeOutputAsJson,\n    ServerNetworkLocation,\n    ScanCommandAttemptStatusEnum,\n    ServerScanStatusEnum,\n    ServerScanResult,\n    ServerScanResultAsJson,\n)\nfrom sslyze.errors import ServerHostnameCouldNotBeResolved\nfrom sslyze.scanner.scan_command_attempt import ScanCommandAttempt\n\n\ndef _print_failed_scan_command_attempt(scan_command_attempt: ScanCommandAttempt) -> None:\n    print(\n        f\"\\nError when running ssl_2_0_cipher_suites: {scan_command_attempt.error_reason}:\\n\"\n        f\"{scan_command_attempt.error_trace}\"\n    )\n\n\ndef main() -> None:\n    print(\"=> Starting the scans\")\n    date_scans_started = datetime.now(timezone.utc)\n\n    # First create the scan requests for each server that we want to scan\n    try:\n        all_scan_requests = [\n            ServerScanRequest(server_location=ServerNetworkLocation(hostname=\"cloudflare.com\")),\n            ServerScanRequest(server_location=ServerNetworkLocation(hostname=\"google.com\")),\n        ]\n    except ServerHostnameCouldNotBeResolved:\n        # Handle bad input ie. invalid hostnames\n        print(\"Error resolving the supplied hostnames\")\n        return\n\n    # Then queue all the scans\n    scanner = Scanner()\n    scanner.queue_scans(all_scan_requests)\n\n    # And retrieve and process the results for each server\n    all_server_scan_results = []\n    for server_scan_result in scanner.get_results():\n        all_server_scan_results.append(server_scan_result)\n        print(f\"\\n\\n****Results for {server_scan_result.server_location.hostname}****\")\n\n        # Were we able to connect to the server and run the scan?\n        if server_scan_result.scan_status == ServerScanStatusEnum.ERROR_NO_CONNECTIVITY:\n            # No we weren't\n            print(\n                f\"\\nError: Could not connect to {server_scan_result.server_location.hostname}:\"\n                f\" {server_scan_result.connectivity_error_trace}\"\n            )\n            continue\n\n        # Since we were able to run the scan, scan_result is populated\n        assert server_scan_result.scan_result\n\n        # Process the result of the SSL 2.0 scan command\n        ssl2_attempt = server_scan_result.scan_result.ssl_2_0_cipher_suites\n        if ssl2_attempt.status == ScanCommandAttemptStatusEnum.ERROR:\n            # An error happened when this scan command was run\n            _print_failed_scan_command_attempt(ssl2_attempt)\n        elif ssl2_attempt.status == ScanCommandAttemptStatusEnum.COMPLETED:\n            # This scan command was run successfully\n            ssl2_result = ssl2_attempt.result\n            assert ssl2_result\n            print(\"\\nAccepted cipher suites for SSL 2.0:\")\n            for accepted_cipher_suite in ssl2_result.accepted_cipher_suites:\n                print(f\"* {accepted_cipher_suite.cipher_suite.name}\")\n\n        # Process the result of the TLS 1.3 scan command\n        tls1_3_attempt = server_scan_result.scan_result.tls_1_3_cipher_suites\n        if tls1_3_attempt.status == ScanCommandAttemptStatusEnum.ERROR:\n            _print_failed_scan_command_attempt(ssl2_attempt)\n        elif tls1_3_attempt.status == ScanCommandAttemptStatusEnum.COMPLETED:\n            tls1_3_result = tls1_3_attempt.result\n            assert tls1_3_result\n            print(\"\\nAccepted cipher suites for TLS 1.3:\")\n            for accepted_cipher_suite in tls1_3_result.accepted_cipher_suites:\n                print(f\"* {accepted_cipher_suite.cipher_suite.name}\")\n\n        # Process the result of the certificate info scan command\n        certinfo_attempt = server_scan_result.scan_result.certificate_info\n        if certinfo_attempt.status == ScanCommandAttemptStatusEnum.ERROR:\n            _print_failed_scan_command_attempt(certinfo_attempt)\n        elif certinfo_attempt.status == ScanCommandAttemptStatusEnum.COMPLETED:\n            certinfo_result = certinfo_attempt.result\n            assert certinfo_result\n            print(\"\\nLeaf certificates deployed:\")\n            for cert_deployment in certinfo_result.certificate_deployments:\n                leaf_cert = cert_deployment.received_certificate_chain[0]\n                print(\n                    f\"{leaf_cert.public_key().__class__.__name__}: {leaf_cert.subject.rfc4514_string()}\"\n                    f\" (Serial: {leaf_cert.serial_number})\"\n                )\n\n        # etc... Other scan command results to process are in server_scan_result.scan_result\n\n    # Lastly, save the all the results to a JSON file\n    json_file_out = Path(\"api_sample_results.json\")\n    print(f\"\\n\\n=> Saving scan results to {json_file_out}\")\n    example_json_result_output(json_file_out, all_server_scan_results, date_scans_started, datetime.now(timezone.utc))\n\n    # And ensure we are able to parse them\n    print(f\"\\n\\n=> Parsing scan results from {json_file_out}\")\n    example_json_result_parsing(json_file_out)\n\n\ndef example_json_result_output(\n    json_file_out: Path,\n    all_server_scan_results: List[ServerScanResult],\n    date_scans_started: datetime,\n    date_scans_completed: datetime,\n) -> None:\n    json_output = SslyzeOutputAsJson(\n        server_scan_results=[ServerScanResultAsJson.model_validate(result) for result in all_server_scan_results],\n        invalid_server_strings=[],  # Not needed here - specific to the CLI interface\n        date_scans_started=date_scans_started,\n        date_scans_completed=date_scans_completed,\n    )\n    json_output_as_str = json_output.model_dump_json()\n    json_file_out.write_text(json_output_as_str)\n\n\ndef example_json_result_parsing(results_as_json_file: Path) -> None:\n    # SSLyze scan results serialized to JSON were saved to this file using --json_out\n    results_as_json = results_as_json_file.read_text()\n\n    # These results can be parsed\n    parsed_results = SslyzeOutputAsJson.model_validate_json(results_as_json)\n\n    # Making it easy to do post-processing and inspection of the results\n    print(\"The following servers were scanned:\")\n    for server_scan_result in parsed_results.server_scan_results:\n        print(f\"\\n****{server_scan_result.server_location.hostname}:{server_scan_result.server_location.port}****\")\n\n        if server_scan_result.scan_status == ServerScanStatusEnum.ERROR_NO_CONNECTIVITY:\n            print(f\"That scan failed with the following error:\\n{server_scan_result.connectivity_error_trace}\")\n            continue\n\n        assert server_scan_result.scan_result\n        certinfo_attempt = server_scan_result.scan_result.certificate_info\n        if certinfo_attempt.status == ScanCommandAttemptStatusEnum.ERROR:\n            _print_failed_scan_command_attempt(certinfo_attempt)  # type: ignore\n        else:\n            certinfo_result = server_scan_result.scan_result.certificate_info.result\n            assert certinfo_result\n            for cert_deployment in certinfo_result.certificate_deployments:\n                print(f\"    SHA1 of leaf certificate: {cert_deployment.received_certificate_chain[0].fingerprint_sha1}\")\n            print(\"\")\n\n\nif __name__ == \"__main__\":\n    main()\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "json_output_schema.json",
          "type": "blob",
          "size": 63.9541015625,
          "content": "{\n  \"$defs\": {\n    \"AllScanCommandsAttemptsAsJson\": {\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"certificate_info\": {\n          \"$ref\": \"#/$defs/CertificateInfoScanAttemptAsJson\"\n        },\n        \"ssl_2_0_cipher_suites\": {\n          \"$ref\": \"#/$defs/CipherSuitesScanAttemptAsJson\"\n        },\n        \"ssl_3_0_cipher_suites\": {\n          \"$ref\": \"#/$defs/CipherSuitesScanAttemptAsJson\"\n        },\n        \"tls_1_0_cipher_suites\": {\n          \"$ref\": \"#/$defs/CipherSuitesScanAttemptAsJson\"\n        },\n        \"tls_1_1_cipher_suites\": {\n          \"$ref\": \"#/$defs/CipherSuitesScanAttemptAsJson\"\n        },\n        \"tls_1_2_cipher_suites\": {\n          \"$ref\": \"#/$defs/CipherSuitesScanAttemptAsJson\"\n        },\n        \"tls_1_3_cipher_suites\": {\n          \"$ref\": \"#/$defs/CipherSuitesScanAttemptAsJson\"\n        },\n        \"tls_compression\": {\n          \"$ref\": \"#/$defs/CompressionScanAttemptAsJson\"\n        },\n        \"tls_1_3_early_data\": {\n          \"$ref\": \"#/$defs/EarlyDataScanAttemptAsJson\"\n        },\n        \"openssl_ccs_injection\": {\n          \"$ref\": \"#/$defs/OpenSslCcsInjectionScanAttemptAsJson\"\n        },\n        \"tls_fallback_scsv\": {\n          \"$ref\": \"#/$defs/FallbackScsvScanAttemptAsJson\"\n        },\n        \"heartbleed\": {\n          \"$ref\": \"#/$defs/HeartbleedScanAttemptAsJson\"\n        },\n        \"robot\": {\n          \"$ref\": \"#/$defs/RobotScanAttemptAsJson\"\n        },\n        \"session_renegotiation\": {\n          \"$ref\": \"#/$defs/SessionRenegotiationScanAttemptAsJson\"\n        },\n        \"session_resumption\": {\n          \"$ref\": \"#/$defs/SessionResumptionSupportScanAttemptAsJson\"\n        },\n        \"elliptic_curves\": {\n          \"$ref\": \"#/$defs/SupportedEllipticCurvesScanAttemptAsJson\"\n        },\n        \"http_headers\": {\n          \"$ref\": \"#/$defs/HttpHeadersScanAttemptAsJson\"\n        },\n        \"tls_extended_master_secret\": {\n          \"$ref\": \"#/$defs/EmsExtensionScanAttemptAsJson\"\n        }\n      },\n      \"required\": [\n        \"certificate_info\",\n        \"ssl_2_0_cipher_suites\",\n        \"ssl_3_0_cipher_suites\",\n        \"tls_1_0_cipher_suites\",\n        \"tls_1_1_cipher_suites\",\n        \"tls_1_2_cipher_suites\",\n        \"tls_1_3_cipher_suites\",\n        \"tls_compression\",\n        \"tls_1_3_early_data\",\n        \"openssl_ccs_injection\",\n        \"tls_fallback_scsv\",\n        \"heartbleed\",\n        \"robot\",\n        \"session_renegotiation\",\n        \"session_resumption\",\n        \"elliptic_curves\",\n        \"http_headers\",\n        \"tls_extended_master_secret\"\n      ],\n      \"title\": \"AllScanCommandsAttemptsAsJson\",\n      \"type\": \"object\"\n    },\n    \"CertificateInfoScanAttemptAsJson\": {\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"status\": {\n          \"$ref\": \"#/$defs/ScanCommandAttemptStatusEnum\"\n        },\n        \"error_reason\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ScanCommandErrorReasonEnum\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"error_trace\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Error Trace\"\n        },\n        \"result\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/CertificateInfoScanResultAsJson\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"required\": [\n        \"status\",\n        \"error_reason\",\n        \"error_trace\",\n        \"result\"\n      ],\n      \"title\": \"CertificateInfoScanAttemptAsJson\",\n      \"type\": \"object\"\n    },\n    \"CertificateInfoScanResultAsJson\": {\n      \"description\": \"The result of retrieving and analyzing a server's certificates to verify their validity.\\n\\nAttributes:\\n    hostname_used_for_server_name_indication: The hostname sent by SSLyze as the Server Name Indication extension.\\n    certificate_deployments: A list of leaf certificates detected by SSLyze and the corresponding analysis. Most\\n        servers only deploy one leaf certificate, but some websites (such as Facebook) return different leaf\\n        certificates depending on the client, as a way to maximize compatibility with older clients/devices.\",\n      \"properties\": {\n        \"hostname_used_for_server_name_indication\": {\n          \"title\": \"Hostname Used For Server Name Indication\",\n          \"type\": \"string\"\n        },\n        \"certificate_deployments\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/_CertificateDeploymentAnalysisResultAsJson\"\n          },\n          \"title\": \"Certificate Deployments\",\n          \"type\": \"array\"\n        }\n      },\n      \"required\": [\n        \"hostname_used_for_server_name_indication\",\n        \"certificate_deployments\"\n      ],\n      \"title\": \"CertificateInfoScanResultAsJson\",\n      \"type\": \"object\"\n    },\n    \"CipherSuitesScanAttemptAsJson\": {\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"status\": {\n          \"$ref\": \"#/$defs/ScanCommandAttemptStatusEnum\"\n        },\n        \"error_reason\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ScanCommandErrorReasonEnum\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"error_trace\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Error Trace\"\n        },\n        \"result\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/CipherSuitesScanResultAsJson\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"required\": [\n        \"status\",\n        \"error_reason\",\n        \"error_trace\",\n        \"result\"\n      ],\n      \"title\": \"CipherSuitesScanAttemptAsJson\",\n      \"type\": \"object\"\n    },\n    \"CipherSuitesScanResultAsJson\": {\n      \"description\": \"The result of testing a server for cipher suites with a specific version of SSL/TLS.\\n\\nAttributes:\\n    tls_version_used: The SSL/TLS version used to connect to the server.\\n    accepted_ciphers: The list of cipher suites supported supported by both SSLyze and the server.\\n    rejected_ciphers: The list of cipher suites supported by SSLyze that were rejected by the server.\",\n      \"properties\": {\n        \"tls_version_used\": {\n          \"title\": \"Tls Version Used\",\n          \"type\": \"string\"\n        },\n        \"is_tls_version_supported\": {\n          \"title\": \"Is Tls Version Supported\",\n          \"type\": \"boolean\"\n        },\n        \"accepted_cipher_suites\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/_CipherSuiteAcceptedByServerAsJson\"\n          },\n          \"title\": \"Accepted Cipher Suites\",\n          \"type\": \"array\"\n        },\n        \"rejected_cipher_suites\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/_CipherSuiteRejectedByServerAsJson\"\n          },\n          \"title\": \"Rejected Cipher Suites\",\n          \"type\": \"array\"\n        }\n      },\n      \"required\": [\n        \"tls_version_used\",\n        \"is_tls_version_supported\",\n        \"accepted_cipher_suites\",\n        \"rejected_cipher_suites\"\n      ],\n      \"title\": \"CipherSuitesScanResultAsJson\",\n      \"type\": \"object\"\n    },\n    \"ClientAuthRequirementEnum\": {\n      \"description\": \"Whether the server asked for client authentication.\",\n      \"enum\": [\n        \"DISABLED\",\n        \"OPTIONAL\",\n        \"REQUIRED\"\n      ],\n      \"title\": \"ClientAuthRequirementEnum\",\n      \"type\": \"string\"\n    },\n    \"CompressionScanAttemptAsJson\": {\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"status\": {\n          \"$ref\": \"#/$defs/ScanCommandAttemptStatusEnum\"\n        },\n        \"error_reason\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ScanCommandErrorReasonEnum\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"error_trace\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Error Trace\"\n        },\n        \"result\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/CompressionScanResultAsJson\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"required\": [\n        \"status\",\n        \"error_reason\",\n        \"error_trace\",\n        \"result\"\n      ],\n      \"title\": \"CompressionScanAttemptAsJson\",\n      \"type\": \"object\"\n    },\n    \"CompressionScanResultAsJson\": {\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"supports_compression\": {\n          \"title\": \"Supports Compression\",\n          \"type\": \"boolean\"\n        }\n      },\n      \"required\": [\n        \"supports_compression\"\n      ],\n      \"title\": \"CompressionScanResultAsJson\",\n      \"type\": \"object\"\n    },\n    \"ConnectionTypeEnum\": {\n      \"enum\": [\n        \"DIRECT\",\n        \"VIA_HTTP_PROXY\"\n      ],\n      \"title\": \"ConnectionTypeEnum\",\n      \"type\": \"string\"\n    },\n    \"EarlyDataScanAttemptAsJson\": {\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"status\": {\n          \"$ref\": \"#/$defs/ScanCommandAttemptStatusEnum\"\n        },\n        \"error_reason\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ScanCommandErrorReasonEnum\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"error_trace\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Error Trace\"\n        },\n        \"result\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/EarlyDataScanResultAsJson\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"required\": [\n        \"status\",\n        \"error_reason\",\n        \"error_trace\",\n        \"result\"\n      ],\n      \"title\": \"EarlyDataScanAttemptAsJson\",\n      \"type\": \"object\"\n    },\n    \"EarlyDataScanResultAsJson\": {\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"supports_early_data\": {\n          \"title\": \"Supports Early Data\",\n          \"type\": \"boolean\"\n        }\n      },\n      \"required\": [\n        \"supports_early_data\"\n      ],\n      \"title\": \"EarlyDataScanResultAsJson\",\n      \"type\": \"object\"\n    },\n    \"EmsExtensionScanAttemptAsJson\": {\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"status\": {\n          \"$ref\": \"#/$defs/ScanCommandAttemptStatusEnum\"\n        },\n        \"error_reason\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ScanCommandErrorReasonEnum\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"error_trace\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Error Trace\"\n        },\n        \"result\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/EmsExtensionScanResultAsJson\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"required\": [\n        \"status\",\n        \"error_reason\",\n        \"error_trace\",\n        \"result\"\n      ],\n      \"title\": \"EmsExtensionScanAttemptAsJson\",\n      \"type\": \"object\"\n    },\n    \"EmsExtensionScanResultAsJson\": {\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"supports_ems_extension\": {\n          \"title\": \"Supports Ems Extension\",\n          \"type\": \"boolean\"\n        }\n      },\n      \"required\": [\n        \"supports_ems_extension\"\n      ],\n      \"title\": \"EmsExtensionScanResultAsJson\",\n      \"type\": \"object\"\n    },\n    \"FallbackScsvScanAttemptAsJson\": {\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"status\": {\n          \"$ref\": \"#/$defs/ScanCommandAttemptStatusEnum\"\n        },\n        \"error_reason\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ScanCommandErrorReasonEnum\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"error_trace\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Error Trace\"\n        },\n        \"result\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/FallbackScsvScanResultAsJson\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"required\": [\n        \"status\",\n        \"error_reason\",\n        \"error_trace\",\n        \"result\"\n      ],\n      \"title\": \"FallbackScsvScanAttemptAsJson\",\n      \"type\": \"object\"\n    },\n    \"FallbackScsvScanResultAsJson\": {\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"supports_fallback_scsv\": {\n          \"title\": \"Supports Fallback Scsv\",\n          \"type\": \"boolean\"\n        }\n      },\n      \"required\": [\n        \"supports_fallback_scsv\"\n      ],\n      \"title\": \"FallbackScsvScanResultAsJson\",\n      \"type\": \"object\"\n    },\n    \"HeartbleedScanAttemptAsJson\": {\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"status\": {\n          \"$ref\": \"#/$defs/ScanCommandAttemptStatusEnum\"\n        },\n        \"error_reason\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ScanCommandErrorReasonEnum\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"error_trace\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Error Trace\"\n        },\n        \"result\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/HeartbleedScanResultAsJson\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"required\": [\n        \"status\",\n        \"error_reason\",\n        \"error_trace\",\n        \"result\"\n      ],\n      \"title\": \"HeartbleedScanAttemptAsJson\",\n      \"type\": \"object\"\n    },\n    \"HeartbleedScanResultAsJson\": {\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"is_vulnerable_to_heartbleed\": {\n          \"title\": \"Is Vulnerable To Heartbleed\",\n          \"type\": \"boolean\"\n        }\n      },\n      \"required\": [\n        \"is_vulnerable_to_heartbleed\"\n      ],\n      \"title\": \"HeartbleedScanResultAsJson\",\n      \"type\": \"object\"\n    },\n    \"HttpHeadersScanAttemptAsJson\": {\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"status\": {\n          \"$ref\": \"#/$defs/ScanCommandAttemptStatusEnum\"\n        },\n        \"error_reason\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ScanCommandErrorReasonEnum\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"error_trace\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Error Trace\"\n        },\n        \"result\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/HttpHeadersScanResultAsJson\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"required\": [\n        \"status\",\n        \"error_reason\",\n        \"error_trace\",\n        \"result\"\n      ],\n      \"title\": \"HttpHeadersScanAttemptAsJson\",\n      \"type\": \"object\"\n    },\n    \"HttpHeadersScanResultAsJson\": {\n      \"description\": \"The result of testing a server for the presence of security-related HTTP headers.\\n\\nEach HTTP header described below will be ``None`` if the server did not return a valid HTTP response, or if the\\nserver returned an HTTP response without the HTTP header.\\n\\nAttributes:\\n    http_request_sent: The initial HTTP request sent to the server by SSLyze.\\n    http_error_trace: An error the server returned after receiving the initial HTTP request. If this field is set,\\n        all the subsequent fields will be ``None`` as SSLyze did not receive a valid HTTP response from the server.\\n    http_path_redirected_to: The path SSLyze was eventually redirected to after sending the initial HTTP request.\\n    strict_transport_security_header: The Strict-Transport-Security header returned by the server.\",\n      \"properties\": {\n        \"http_request_sent\": {\n          \"title\": \"Http Request Sent\",\n          \"type\": \"string\"\n        },\n        \"http_error_trace\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Http Error Trace\"\n        },\n        \"http_path_redirected_to\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Http Path Redirected To\"\n        },\n        \"strict_transport_security_header\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/_StrictTransportSecurityHeaderAsJson\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"required\": [\n        \"http_request_sent\",\n        \"http_error_trace\",\n        \"http_path_redirected_to\",\n        \"strict_transport_security_header\"\n      ],\n      \"title\": \"HttpHeadersScanResultAsJson\",\n      \"type\": \"object\"\n    },\n    \"InvalidServerStringAsJson\": {\n      \"additionalProperties\": false,\n      \"description\": \"A hostname:port string supplied via the command line that SSLyze was unable to parse or resolve.\",\n      \"properties\": {\n        \"server_string\": {\n          \"title\": \"Server String\",\n          \"type\": \"string\"\n        },\n        \"error_message\": {\n          \"title\": \"Error Message\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"server_string\",\n        \"error_message\"\n      ],\n      \"title\": \"InvalidServerStringAsJson\",\n      \"type\": \"object\"\n    },\n    \"OpenSslCcsInjectionScanAttemptAsJson\": {\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"status\": {\n          \"$ref\": \"#/$defs/ScanCommandAttemptStatusEnum\"\n        },\n        \"error_reason\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ScanCommandErrorReasonEnum\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"error_trace\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Error Trace\"\n        },\n        \"result\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/OpenSslCcsInjectionScanResultAsJson\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"required\": [\n        \"status\",\n        \"error_reason\",\n        \"error_trace\",\n        \"result\"\n      ],\n      \"title\": \"OpenSslCcsInjectionScanAttemptAsJson\",\n      \"type\": \"object\"\n    },\n    \"OpenSslCcsInjectionScanResultAsJson\": {\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"is_vulnerable_to_ccs_injection\": {\n          \"title\": \"Is Vulnerable To Ccs Injection\",\n          \"type\": \"boolean\"\n        }\n      },\n      \"required\": [\n        \"is_vulnerable_to_ccs_injection\"\n      ],\n      \"title\": \"OpenSslCcsInjectionScanResultAsJson\",\n      \"type\": \"object\"\n    },\n    \"ProtocolWithOpportunisticTlsEnum\": {\n      \"description\": \"The list of plaintext protocols supported by SSLyze for opportunistic TLS upgrade (such as STARTTLS).\\n\\nThis allows SSLyze to figure out how to complete an SSL/TLS handshake with the server.\",\n      \"enum\": [\n        \"SMTP\",\n        \"XMPP\",\n        \"XMPP_SERVER\",\n        \"FTP\",\n        \"POP3\",\n        \"LDAP\",\n        \"IMAP\",\n        \"RDP\",\n        \"POSTGRES\"\n      ],\n      \"title\": \"ProtocolWithOpportunisticTlsEnum\",\n      \"type\": \"string\"\n    },\n    \"RobotScanAttemptAsJson\": {\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"status\": {\n          \"$ref\": \"#/$defs/ScanCommandAttemptStatusEnum\"\n        },\n        \"error_reason\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ScanCommandErrorReasonEnum\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"error_trace\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Error Trace\"\n        },\n        \"result\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/RobotScanResultAsJson\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"required\": [\n        \"status\",\n        \"error_reason\",\n        \"error_trace\",\n        \"result\"\n      ],\n      \"title\": \"RobotScanAttemptAsJson\",\n      \"type\": \"object\"\n    },\n    \"RobotScanResultAsJson\": {\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"robot_result\": {\n          \"$ref\": \"#/$defs/RobotScanResultEnum\"\n        }\n      },\n      \"required\": [\n        \"robot_result\"\n      ],\n      \"title\": \"RobotScanResultAsJson\",\n      \"type\": \"object\"\n    },\n    \"RobotScanResultEnum\": {\n      \"description\": \"The result of attempting exploit the ROBOT issue on the server.\\n\\nAttributes:\\n    VULNERABLE_WEAK_ORACLE: The server is vulnerable but the attack would take too long.\\n    VULNERABLE_STRONG_ORACLE: The server is vulnerable and real attacks are feasible.\\n    NOT_VULNERABLE_NO_ORACLE: The server supports RSA cipher suites but does not act as an oracle.\\n    NOT_VULNERABLE_RSA_NOT_SUPPORTED: The server does not supports RSA cipher suites.\\n    UNKNOWN_INCONSISTENT_RESULTS: Could not determine whether the server is vulnerable or not.\",\n      \"enum\": [\n        \"VULNERABLE_WEAK_ORACLE\",\n        \"VULNERABLE_STRONG_ORACLE\",\n        \"NOT_VULNERABLE_NO_ORACLE\",\n        \"NOT_VULNERABLE_RSA_NOT_SUPPORTED\",\n        \"UNKNOWN_INCONSISTENT_RESULTS\"\n      ],\n      \"title\": \"RobotScanResultEnum\",\n      \"type\": \"string\"\n    },\n    \"ScanCommandAttemptStatusEnum\": {\n      \"enum\": [\n        \"ERROR\",\n        \"COMPLETED\",\n        \"NOT_SCHEDULED\"\n      ],\n      \"title\": \"ScanCommandAttemptStatusEnum\",\n      \"type\": \"string\"\n    },\n    \"ScanCommandErrorReasonEnum\": {\n      \"enum\": [\n        \"BUG_IN_SSLYZE\",\n        \"CLIENT_CERTIFICATE_NEEDED\",\n        \"CONNECTIVITY_ISSUE\",\n        \"WRONG_USAGE\"\n      ],\n      \"title\": \"ScanCommandErrorReasonEnum\",\n      \"type\": \"string\"\n    },\n    \"ServerConnectivityStatusEnum\": {\n      \"enum\": [\n        \"ERROR\",\n        \"COMPLETED\"\n      ],\n      \"title\": \"ServerConnectivityStatusEnum\",\n      \"type\": \"string\"\n    },\n    \"ServerScanResultAsJson\": {\n      \"additionalProperties\": false,\n      \"description\": \"The result of scanning a server.\\n\\nAttributes:\\n    uuid\\n    server_location\\n    network_configuration\\n    connectivity_status: Whether SSLyze was able to connect to the server, or not.\\n    connectivity_error_trace: The connectivity error; only set if SSLyze was NOT able to connect to the server.\\n    connectivity_result: The result of connectivity testing; only set if SSLyze was able to connect to the server.\\n    scan_status: Whether SSLyze was able to complete the scan, or not.\\n    scan_result: The result of the scan; only set if SSLyze was able to complete the scan.\",\n      \"properties\": {\n        \"uuid\": {\n          \"format\": \"uuid\",\n          \"title\": \"Uuid\",\n          \"type\": \"string\"\n        },\n        \"server_location\": {\n          \"$ref\": \"#/$defs/_ServerNetworkLocationAsJson\"\n        },\n        \"network_configuration\": {\n          \"$ref\": \"#/$defs/_ServerNetworkConfigurationAsJson\"\n        },\n        \"connectivity_status\": {\n          \"$ref\": \"#/$defs/ServerConnectivityStatusEnum\"\n        },\n        \"connectivity_error_trace\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Connectivity Error Trace\"\n        },\n        \"connectivity_result\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/_ServerTlsProbingResultAsJson\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"scan_status\": {\n          \"$ref\": \"#/$defs/ServerScanStatusEnum\"\n        },\n        \"scan_result\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/AllScanCommandsAttemptsAsJson\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"required\": [\n        \"uuid\",\n        \"server_location\",\n        \"network_configuration\",\n        \"connectivity_status\",\n        \"connectivity_error_trace\",\n        \"connectivity_result\",\n        \"scan_status\",\n        \"scan_result\"\n      ],\n      \"title\": \"ServerScanResultAsJson\",\n      \"type\": \"object\"\n    },\n    \"ServerScanStatusEnum\": {\n      \"enum\": [\n        \"ERROR_NO_CONNECTIVITY\",\n        \"COMPLETED\"\n      ],\n      \"title\": \"ServerScanStatusEnum\",\n      \"type\": \"string\"\n    },\n    \"SessionRenegotiationScanAttemptAsJson\": {\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"status\": {\n          \"$ref\": \"#/$defs/ScanCommandAttemptStatusEnum\"\n        },\n        \"error_reason\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ScanCommandErrorReasonEnum\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"error_trace\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Error Trace\"\n        },\n        \"result\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/SessionRenegotiationScanResultAsJson\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"required\": [\n        \"status\",\n        \"error_reason\",\n        \"error_trace\",\n        \"result\"\n      ],\n      \"title\": \"SessionRenegotiationScanAttemptAsJson\",\n      \"type\": \"object\"\n    },\n    \"SessionRenegotiationScanResultAsJson\": {\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"supports_secure_renegotiation\": {\n          \"title\": \"Supports Secure Renegotiation\",\n          \"type\": \"boolean\"\n        },\n        \"is_vulnerable_to_client_renegotiation_dos\": {\n          \"title\": \"Is Vulnerable To Client Renegotiation Dos\",\n          \"type\": \"boolean\"\n        },\n        \"client_renegotiations_success_count\": {\n          \"title\": \"Client Renegotiations Success Count\",\n          \"type\": \"integer\"\n        }\n      },\n      \"required\": [\n        \"supports_secure_renegotiation\",\n        \"is_vulnerable_to_client_renegotiation_dos\",\n        \"client_renegotiations_success_count\"\n      ],\n      \"title\": \"SessionRenegotiationScanResultAsJson\",\n      \"type\": \"object\"\n    },\n    \"SessionResumptionSupportScanAttemptAsJson\": {\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"status\": {\n          \"$ref\": \"#/$defs/ScanCommandAttemptStatusEnum\"\n        },\n        \"error_reason\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ScanCommandErrorReasonEnum\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"error_trace\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Error Trace\"\n        },\n        \"result\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/SessionResumptionSupportScanResultAsJson\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"required\": [\n        \"status\",\n        \"error_reason\",\n        \"error_trace\",\n        \"result\"\n      ],\n      \"title\": \"SessionResumptionSupportScanAttemptAsJson\",\n      \"type\": \"object\"\n    },\n    \"SessionResumptionSupportScanResultAsJson\": {\n      \"additionalProperties\": false,\n      \"description\": \"The result of testing a server for TLS 1.2 session resumption support, using Session IDs and TLS tickets.\\n\\nAttributes:\\n    session_id_resumption_result: The overall result of session ID resumption testing.\\n    session_id_attempted_resumptions_count: The total number of session ID resumptions that were attempted.\\n    session_id_successful_resumptions_count: The number of session ID resumptions that were successful.\\n    tls_ticket_resumption_result: The overall result of TLS ticket resumption testing.\\n    tls_ticket_attempted_resumptions_count: The total number of TLS ticket resumptions that were attempted.\\n    tls_ticket_successful_resumptions_count: The number of TLS ticket resumptions that were successful.\",\n      \"properties\": {\n        \"session_id_resumption_result\": {\n          \"$ref\": \"#/$defs/TlsResumptionSupportEnum\"\n        },\n        \"session_id_attempted_resumptions_count\": {\n          \"title\": \"Session Id Attempted Resumptions Count\",\n          \"type\": \"integer\"\n        },\n        \"session_id_successful_resumptions_count\": {\n          \"title\": \"Session Id Successful Resumptions Count\",\n          \"type\": \"integer\"\n        },\n        \"tls_ticket_resumption_result\": {\n          \"$ref\": \"#/$defs/TlsResumptionSupportEnum\"\n        },\n        \"tls_ticket_attempted_resumptions_count\": {\n          \"title\": \"Tls Ticket Attempted Resumptions Count\",\n          \"type\": \"integer\"\n        },\n        \"tls_ticket_successful_resumptions_count\": {\n          \"title\": \"Tls Ticket Successful Resumptions Count\",\n          \"type\": \"integer\"\n        }\n      },\n      \"required\": [\n        \"session_id_resumption_result\",\n        \"session_id_attempted_resumptions_count\",\n        \"session_id_successful_resumptions_count\",\n        \"tls_ticket_resumption_result\",\n        \"tls_ticket_attempted_resumptions_count\",\n        \"tls_ticket_successful_resumptions_count\"\n      ],\n      \"title\": \"SessionResumptionSupportScanResultAsJson\",\n      \"type\": \"object\"\n    },\n    \"SupportedEllipticCurvesScanAttemptAsJson\": {\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"status\": {\n          \"$ref\": \"#/$defs/ScanCommandAttemptStatusEnum\"\n        },\n        \"error_reason\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ScanCommandErrorReasonEnum\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"error_trace\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Error Trace\"\n        },\n        \"result\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/SupportedEllipticCurvesScanResultAsJson\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"required\": [\n        \"status\",\n        \"error_reason\",\n        \"error_trace\",\n        \"result\"\n      ],\n      \"title\": \"SupportedEllipticCurvesScanAttemptAsJson\",\n      \"type\": \"object\"\n    },\n    \"SupportedEllipticCurvesScanResultAsJson\": {\n      \"description\": \"The result of testing a server for supported elliptic curves.\\n\\nAttributes:\\n    supports_ecdh_key_exchange: True if the server supports at least one cipher suite with an ECDH key exchange.\\n    supported_curves: A list of `EllipticCurve` that were accepted by the server or `None` if the server does not\\n        support ECDH cipher suites.\\n    rejected_curves: A list of `EllipticCurve` that were rejected by the server or `None` if the server does not\\n        support ECDH cipher suites.\",\n      \"properties\": {\n        \"supports_ecdh_key_exchange\": {\n          \"title\": \"Supports Ecdh Key Exchange\",\n          \"type\": \"boolean\"\n        },\n        \"supported_curves\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/_EllipticCurveAsJson\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Supported Curves\"\n        },\n        \"rejected_curves\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/_EllipticCurveAsJson\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Rejected Curves\"\n        }\n      },\n      \"required\": [\n        \"supports_ecdh_key_exchange\",\n        \"supported_curves\",\n        \"rejected_curves\"\n      ],\n      \"title\": \"SupportedEllipticCurvesScanResultAsJson\",\n      \"type\": \"object\"\n    },\n    \"TlsResumptionSupportEnum\": {\n      \"description\": \"The result of attempting to resume TLS sessions with the server.\\n\\nAttributes:\\n    FULLY_SUPPORTED: All the session resumption attempts were successful.\\n    PARTIALLY_SUPPORTED: Only some of the session resumption attempts were successful.\\n    NOT_SUPPORTED: None of the session resumption attempts were successful.\\n    SERVER_IS_TLS_1_3_ONLY: The server only supports TLS 1.3, which does not support Session ID nor TLS Tickets\\n        resumption.\",\n      \"enum\": [\n        \"FULLY_SUPPORTED\",\n        \"PARTIALLY_SUPPORTED\",\n        \"NOT_SUPPORTED\",\n        \"SERVER_IS_TLS_1_3_ONLY\"\n      ],\n      \"title\": \"TlsResumptionSupportEnum\",\n      \"type\": \"string\"\n    },\n    \"_CertificateAsJson\": {\n      \"properties\": {\n        \"as_pem\": {\n          \"title\": \"As Pem\",\n          \"type\": \"string\"\n        },\n        \"hpkp_pin\": {\n          \"title\": \"Hpkp Pin\",\n          \"type\": \"string\"\n        },\n        \"fingerprint_sha1\": {\n          \"title\": \"Fingerprint Sha1\",\n          \"type\": \"string\"\n        },\n        \"fingerprint_sha256\": {\n          \"title\": \"Fingerprint Sha256\",\n          \"type\": \"string\"\n        },\n        \"serial_number\": {\n          \"title\": \"Serial Number\",\n          \"type\": \"integer\"\n        },\n        \"not_valid_before\": {\n          \"format\": \"date-time\",\n          \"title\": \"Not Valid Before\",\n          \"type\": \"string\"\n        },\n        \"not_valid_after\": {\n          \"format\": \"date-time\",\n          \"title\": \"Not Valid After\",\n          \"type\": \"string\"\n        },\n        \"subject_alternative_name\": {\n          \"$ref\": \"#/$defs/_SubjAltNameAsJson\"\n        },\n        \"signature_hash_algorithm\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/_HashAlgorithmAsJson\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"signature_algorithm_oid\": {\n          \"$ref\": \"#/$defs/_ObjectIdentifierAsJson\"\n        },\n        \"subject\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/_X509NameAsJson\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"issuer\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/_X509NameAsJson\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"public_key\": {\n          \"$ref\": \"#/$defs/_PublicKeyAsJson\"\n        }\n      },\n      \"required\": [\n        \"as_pem\",\n        \"hpkp_pin\",\n        \"fingerprint_sha1\",\n        \"fingerprint_sha256\",\n        \"serial_number\",\n        \"not_valid_before\",\n        \"not_valid_after\",\n        \"subject_alternative_name\",\n        \"signature_hash_algorithm\",\n        \"signature_algorithm_oid\",\n        \"subject\",\n        \"issuer\",\n        \"public_key\"\n      ],\n      \"title\": \"_CertificateAsJson\",\n      \"type\": \"object\"\n    },\n    \"_CertificateDeploymentAnalysisResultAsJson\": {\n      \"description\": \"The result of analyzing a server's certificate to verify its validity.\\n\\nAny certificate available within the fields that follow is parsed as a ``Certificate`` object using the cryptography\\nmodule; documentation is available at\\nhttps://cryptography.io/en/latest/x509/reference.html?highlight=Certificate#cryptography.x509.Certificate\\n\\nAttributes:\\n    received_certificate_chain: The certificate chain sent by the server; index 0 is the leaf certificate.\\n    verified_certificate_chain: The verified certificate chain returned by OpenSSL for one of the trust stores\\n        packaged within SSLyze. Will be ``None`` if the validation failed with all of the available trust stores\\n        (Apple, Mozilla, etc.). This is essentially a shortcut to\\n        ``path_validation_result_list[0].verified_certificate_chain``.\\n    path_validation_results: The result of validating the server's\\n        certificate chain using each trust store that is packaged with SSLyze (Mozilla, Apple, etc.).\\n        If for a given trust store, the validation was successful, the verified certificate chain can be\\n         retrieved from the ``PathValidationResult``.\\n    leaf_certificate_is_ev: ``True`` if the leaf certificate is Extended Validation, according to Mozilla.\\n    leaf_certificate_has_must_staple_extension: ``True`` if the OCSP must-staple extension is present in the leaf\\n        certificate.\\n    leaf_certificate_signed_certificate_timestamps_count: The number of Signed Certificate\\n        Timestamps (SCTs) for Certificate Transparency embedded in the leaf certificate. ``None`` if the version of\\n        OpenSSL installed on the system is too old to be able to parse the SCT extension.\\n    received_chain_has_valid_order: ``True`` if the certificate chain returned by the server was sent in the right\\n        order. `None`` if any of the certificates in the chain could not be parsed.\\n    received_chain_contains_anchor_certificate: ``True`` if the server included the anchor/root\\n        certificate in the chain it sends back to clients. ``None`` if the verified chain could not be built.\\n    verified_chain_has_sha1_signature: ``True`` if any of the leaf or intermediate certificates are\\n        signed using the SHA-1 algorithm. ``None`` if the verified chain could not be built.\\n    verified_chain_has_legacy_symantec_anchor: ``True`` if the certificate chain contains a distrusted Symantec\\n        anchor\\n        (https://blog.qualys.com/ssllabs/2017/09/26/google-and-mozilla-deprecating-existing-symantec-certificates).\\n        ``None`` if the verified chain could not be built.\\n    ocsp_response: The OCSP response returned by the server. ``None`` if no response was sent by the server or if\\n        the scan was run through an HTTP proxy (the proxy will not forward the server's OCSP response). If present,\\n        the OCSP response is an ``OCSPResponse`` object parsed using the cryptography module; documentation is\\n        available at\\n        https://cryptography.io/en/latest/x509/ocsp.html?highlight=OCSPResponse#cryptography.x509.ocsp.OCSPResponse\\n    ocsp_response_is_trusted: ``True`` if the OCSP response is trusted using the Mozilla trust store.\\n        ``None`` if no OCSP response was sent by the server.\",\n      \"properties\": {\n        \"received_certificate_chain\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/_CertificateAsJson\"\n          },\n          \"title\": \"Received Certificate Chain\",\n          \"type\": \"array\"\n        },\n        \"leaf_certificate_has_must_staple_extension\": {\n          \"title\": \"Leaf Certificate Has Must Staple Extension\",\n          \"type\": \"boolean\"\n        },\n        \"leaf_certificate_is_ev\": {\n          \"title\": \"Leaf Certificate Is Ev\",\n          \"type\": \"boolean\"\n        },\n        \"leaf_certificate_signed_certificate_timestamps_count\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Leaf Certificate Signed Certificate Timestamps Count\"\n        },\n        \"received_chain_contains_anchor_certificate\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Received Chain Contains Anchor Certificate\"\n        },\n        \"received_chain_has_valid_order\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Received Chain Has Valid Order\"\n        },\n        \"path_validation_results\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/_PathValidationResultAsJson\"\n          },\n          \"title\": \"Path Validation Results\",\n          \"type\": \"array\"\n        },\n        \"verified_chain_has_sha1_signature\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Verified Chain Has Sha1 Signature\"\n        },\n        \"verified_chain_has_legacy_symantec_anchor\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Verified Chain Has Legacy Symantec Anchor\"\n        },\n        \"ocsp_response\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/_OcspResponseAsJson\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        },\n        \"ocsp_response_is_trusted\": {\n          \"anyOf\": [\n            {\n              \"type\": \"boolean\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Ocsp Response Is Trusted\"\n        },\n        \"verified_certificate_chain\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/_CertificateAsJson\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Verified Certificate Chain\"\n        }\n      },\n      \"required\": [\n        \"received_certificate_chain\",\n        \"leaf_certificate_has_must_staple_extension\",\n        \"leaf_certificate_is_ev\",\n        \"leaf_certificate_signed_certificate_timestamps_count\",\n        \"received_chain_contains_anchor_certificate\",\n        \"received_chain_has_valid_order\",\n        \"path_validation_results\",\n        \"verified_chain_has_sha1_signature\",\n        \"verified_chain_has_legacy_symantec_anchor\",\n        \"ocsp_response\",\n        \"ocsp_response_is_trusted\",\n        \"verified_certificate_chain\"\n      ],\n      \"title\": \"_CertificateDeploymentAnalysisResultAsJson\",\n      \"type\": \"object\"\n    },\n    \"_CipherSuiteAcceptedByServerAsJson\": {\n      \"description\": \"ephemeral_key: The ephemeral key negotiated with the server when using (EC) DH cipher suites. None if the cipher\\n    suite does not use ephemeral keys or if the ephemeral key could not be retrieved.\",\n      \"properties\": {\n        \"cipher_suite\": {\n          \"$ref\": \"#/$defs/_CipherSuiteAsJson\"\n        },\n        \"ephemeral_key\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/_EphemeralKeyInfoAsJson\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ]\n        }\n      },\n      \"required\": [\n        \"cipher_suite\",\n        \"ephemeral_key\"\n      ],\n      \"title\": \"_CipherSuiteAcceptedByServerAsJson\",\n      \"type\": \"object\"\n    },\n    \"_CipherSuiteAsJson\": {\n      \"properties\": {\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"is_anonymous\": {\n          \"title\": \"Is Anonymous\",\n          \"type\": \"boolean\"\n        },\n        \"key_size\": {\n          \"title\": \"Key Size\",\n          \"type\": \"integer\"\n        },\n        \"openssl_name\": {\n          \"title\": \"Openssl Name\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"is_anonymous\",\n        \"key_size\",\n        \"openssl_name\"\n      ],\n      \"title\": \"_CipherSuiteAsJson\",\n      \"type\": \"object\"\n    },\n    \"_CipherSuiteRejectedByServerAsJson\": {\n      \"properties\": {\n        \"cipher_suite\": {\n          \"$ref\": \"#/$defs/_CipherSuiteAsJson\"\n        },\n        \"error_message\": {\n          \"title\": \"Error Message\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"cipher_suite\",\n        \"error_message\"\n      ],\n      \"title\": \"_CipherSuiteRejectedByServerAsJson\",\n      \"type\": \"object\"\n    },\n    \"_ClientAuthenticationCredentialsAsJson\": {\n      \"properties\": {\n        \"certificate_chain_path\": {\n          \"format\": \"path\",\n          \"title\": \"Certificate Chain Path\",\n          \"type\": \"string\"\n        },\n        \"key_path\": {\n          \"format\": \"path\",\n          \"title\": \"Key Path\",\n          \"type\": \"string\"\n        },\n        \"key_type\": {\n          \"title\": \"Key Type\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"certificate_chain_path\",\n        \"key_path\",\n        \"key_type\"\n      ],\n      \"title\": \"_ClientAuthenticationCredentialsAsJson\",\n      \"type\": \"object\"\n    },\n    \"_EllipticCurveAsJson\": {\n      \"description\": \"A specific elliptic curve.\\n\\nAttributes:\\n    name: The ANSI X9.62 name if available, otherwise the SECG name.\\n    openssl_nid: The OpenSSL NID_XXX value valid for OpenSslEvpPkeyEnum.EC (obj_mac.h).\",\n      \"properties\": {\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"openssl_nid\": {\n          \"title\": \"Openssl Nid\",\n          \"type\": \"integer\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"openssl_nid\"\n      ],\n      \"title\": \"_EllipticCurveAsJson\",\n      \"type\": \"object\"\n    },\n    \"_EphemeralKeyInfoAsJson\": {\n      \"properties\": {\n        \"type_name\": {\n          \"title\": \"Type Name\",\n          \"type\": \"string\"\n        },\n        \"size\": {\n          \"title\": \"Size\",\n          \"type\": \"integer\"\n        },\n        \"public_bytes\": {\n          \"title\": \"Public Bytes\",\n          \"type\": \"string\"\n        },\n        \"curve_name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Curve Name\"\n        },\n        \"x\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"X\"\n        },\n        \"y\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Y\"\n        },\n        \"prime\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Prime\"\n        },\n        \"generator\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Generator\"\n        }\n      },\n      \"required\": [\n        \"type_name\",\n        \"size\",\n        \"public_bytes\"\n      ],\n      \"title\": \"_EphemeralKeyInfoAsJson\",\n      \"type\": \"object\"\n    },\n    \"_HashAlgorithmAsJson\": {\n      \"properties\": {\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"digest_size\": {\n          \"title\": \"Digest Size\",\n          \"type\": \"integer\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"digest_size\"\n      ],\n      \"title\": \"_HashAlgorithmAsJson\",\n      \"type\": \"object\"\n    },\n    \"_HttpProxySettingsAsJson\": {\n      \"additionalProperties\": false,\n      \"properties\": {\n        \"hostname\": {\n          \"title\": \"Hostname\",\n          \"type\": \"string\"\n        },\n        \"port\": {\n          \"title\": \"Port\",\n          \"type\": \"integer\"\n        },\n        \"basic_auth_user\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Basic Auth User\"\n        },\n        \"basic_auth_password\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Basic Auth Password\"\n        }\n      },\n      \"required\": [\n        \"hostname\",\n        \"port\"\n      ],\n      \"title\": \"_HttpProxySettingsAsJson\",\n      \"type\": \"object\"\n    },\n    \"_NameAttributeAsJson\": {\n      \"properties\": {\n        \"oid\": {\n          \"$ref\": \"#/$defs/_ObjectIdentifierAsJson\"\n        },\n        \"value\": {\n          \"title\": \"Value\",\n          \"type\": \"string\"\n        },\n        \"rfc4514_string\": {\n          \"title\": \"Rfc4514 String\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"oid\",\n        \"value\",\n        \"rfc4514_string\"\n      ],\n      \"title\": \"_NameAttributeAsJson\",\n      \"type\": \"object\"\n    },\n    \"_ObjectIdentifierAsJson\": {\n      \"properties\": {\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"dotted_string\": {\n          \"title\": \"Dotted String\",\n          \"type\": \"string\"\n        }\n      },\n      \"required\": [\n        \"name\",\n        \"dotted_string\"\n      ],\n      \"title\": \"_ObjectIdentifierAsJson\",\n      \"type\": \"object\"\n    },\n    \"_OcspResponseAsJson\": {\n      \"properties\": {\n        \"response_status\": {\n          \"title\": \"Response Status\",\n          \"type\": \"string\"\n        },\n        \"certificate_status\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Certificate Status\"\n        },\n        \"revocation_time\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Revocation Time\"\n        },\n        \"produced_at\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Produced At\"\n        },\n        \"this_update\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"This Update\"\n        },\n        \"next_update\": {\n          \"anyOf\": [\n            {\n              \"format\": \"date-time\",\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Next Update\"\n        },\n        \"serial_number\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Serial Number\"\n        }\n      },\n      \"required\": [\n        \"response_status\",\n        \"certificate_status\",\n        \"revocation_time\",\n        \"produced_at\",\n        \"this_update\",\n        \"next_update\",\n        \"serial_number\"\n      ],\n      \"title\": \"_OcspResponseAsJson\",\n      \"type\": \"object\"\n    },\n    \"_PathValidationResultAsJson\": {\n      \"description\": \"The result of trying to validate a server's certificate chain using a specific trust store.\\n\\nAttributes:\\n    trust_store: The trust store used for validation.\\n    verified_certificate_chain: The verified certificate chain returned by OpenSSL.\\n        Index 0 is the leaf certificate and the last element is the anchor/CA certificate from the trust store.\\n        Will be None if the validation failed or the verified chain could not be built.\\n        Each certificate is parsed using the cryptography module; documentation is available at\\n        https://cryptography.io/en/latest/x509/reference/#x-509-certificate-object.\\n    validation_error: The error returned by the cryptography module's validation function; None if validation was\\n        successful.\\n    was_validation_successful: Whether the certificate chain is trusted when using supplied the trust_stores.\",\n      \"properties\": {\n        \"trust_store\": {\n          \"$ref\": \"#/$defs/_TrustStoreAsJson\"\n        },\n        \"verified_certificate_chain\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/_CertificateAsJson\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Verified Certificate Chain\"\n        },\n        \"validation_error\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Validation Error\"\n        },\n        \"was_validation_successful\": {\n          \"title\": \"Was Validation Successful\",\n          \"type\": \"boolean\"\n        }\n      },\n      \"required\": [\n        \"trust_store\",\n        \"verified_certificate_chain\",\n        \"validation_error\",\n        \"was_validation_successful\"\n      ],\n      \"title\": \"_PathValidationResultAsJson\",\n      \"type\": \"object\"\n    },\n    \"_PublicKeyAsJson\": {\n      \"properties\": {\n        \"algorithm\": {\n          \"title\": \"Algorithm\",\n          \"type\": \"string\"\n        },\n        \"key_size\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Key Size\"\n        },\n        \"rsa_e\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Rsa E\"\n        },\n        \"rsa_n\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Rsa N\"\n        },\n        \"ec_curve_name\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Ec Curve Name\"\n        },\n        \"ec_x\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Ec X\"\n        },\n        \"ec_y\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Ec Y\"\n        }\n      },\n      \"required\": [\n        \"algorithm\",\n        \"key_size\",\n        \"rsa_e\",\n        \"rsa_n\",\n        \"ec_curve_name\",\n        \"ec_x\",\n        \"ec_y\"\n      ],\n      \"title\": \"_PublicKeyAsJson\",\n      \"type\": \"object\"\n    },\n    \"_ServerNetworkConfigurationAsJson\": {\n      \"additionalProperties\": false,\n      \"description\": \"Additional network settings to provide fine-grained control on how to connect to a specific server.\\n\\nAttributes:\\n    tls_server_name_indication: The hostname to set within the Server Name Indication TLS extension.\\n    tls_opportunistic_encryption: The protocol wrapped in TLS that the server expects. It allows SSLyze to figure out\\n        how to establish a (Start)TLS connection to the server and what kind of \\\"hello\\\" message\\n        (SMTP, XMPP, etc.) to send to the server after the handshake was completed. If not supplied, standard\\n        TLS will be used.\\n    tls_client_auth_credentials: The client certificate and private key needed to perform mutual authentication\\n        with the server. If not supplied, SSLyze will attempt to connect to the server without performing\\n        client authentication.\\n    xmpp_to_hostname: The hostname to set within the `to` attribute of the XMPP stream. If not supplied, the\\n        server's hostname will be used. Should only be set if the supplied `tls_opportunistic_encryption` is an\\n        XMPP protocol.\\n    http_user_agent: The User-Agent to send in HTTP requests. If not supplied, a default Chrome-like\\n        is used that includes SSLyze's version.\\n    smtp_ehlo_hostname: The hostname to set in the SMTP EHLO. If not supplied, the default of \\\"sslyze.scan\\\"\\n        will be used. Should only be set if the supplied `tls_opportunistic_encryption` is SMTP.\\n    network_timeout: The timeout (in seconds) to be used when attempting to establish a connection to the\\n        server.\\n    network_max_retries: The number of retries SSLyze will perform when attempting to establish a connection\\n        to the server.\",\n      \"properties\": {\n        \"tls_server_name_indication\": {\n          \"title\": \"Tls Server Name Indication\",\n          \"type\": \"string\"\n        },\n        \"tls_opportunistic_encryption\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/ProtocolWithOpportunisticTlsEnum\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"tls_client_auth_credentials\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/_ClientAuthenticationCredentialsAsJson\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        },\n        \"xmpp_to_hostname\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Xmpp To Hostname\"\n        },\n        \"network_timeout\": {\n          \"default\": 5,\n          \"title\": \"Network Timeout\",\n          \"type\": \"integer\"\n        },\n        \"network_max_retries\": {\n          \"default\": 3,\n          \"title\": \"Network Max Retries\",\n          \"type\": \"integer\"\n        }\n      },\n      \"required\": [\n        \"tls_server_name_indication\"\n      ],\n      \"title\": \"_ServerNetworkConfigurationAsJson\",\n      \"type\": \"object\"\n    },\n    \"_ServerNetworkLocationAsJson\": {\n      \"additionalProperties\": false,\n      \"description\": \"All the information needed to connect to a server.\\n\\nAttributes:\\n    hostname: The server's hostname.\\n    port: The server's TLS port number.\\n    connection_type: How sslyze should connect to the server: either directly, or via an HTTP proxy.\\n    ip_address: The server's IP address; only set if sslyze is connecting directly to the server. If no IP address\\n        is supplied and connection_type is set to DIRECT, sslyze will automatically lookup one IP address for the\\n        supplied hostname.\\n    http_proxy_settings: The HTTP proxy configuration to use in order to tunnel the scans through a proxy; only set\\n        if sslyze is connecting to the server via an HTTP proxy. The proxy will be responsible for looking up the\\n        server's IP address and connecting to it.\",\n      \"properties\": {\n        \"hostname\": {\n          \"title\": \"Hostname\",\n          \"type\": \"string\"\n        },\n        \"port\": {\n          \"title\": \"Port\",\n          \"type\": \"integer\"\n        },\n        \"connection_type\": {\n          \"$ref\": \"#/$defs/ConnectionTypeEnum\"\n        },\n        \"ip_address\": {\n          \"anyOf\": [\n            {\n              \"type\": \"string\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null,\n          \"title\": \"Ip Address\"\n        },\n        \"http_proxy_settings\": {\n          \"anyOf\": [\n            {\n              \"$ref\": \"#/$defs/_HttpProxySettingsAsJson\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"default\": null\n        }\n      },\n      \"required\": [\n        \"hostname\",\n        \"port\",\n        \"connection_type\"\n      ],\n      \"title\": \"_ServerNetworkLocationAsJson\",\n      \"type\": \"object\"\n    },\n    \"_ServerTlsProbingResultAsJson\": {\n      \"additionalProperties\": false,\n      \"description\": \"Additional details about the server, detected via connectivity testing.\",\n      \"properties\": {\n        \"highest_tls_version_supported\": {\n          \"title\": \"Highest Tls Version Supported\",\n          \"type\": \"string\"\n        },\n        \"cipher_suite_supported\": {\n          \"title\": \"Cipher Suite Supported\",\n          \"type\": \"string\"\n        },\n        \"client_auth_requirement\": {\n          \"$ref\": \"#/$defs/ClientAuthRequirementEnum\"\n        },\n        \"supports_ecdh_key_exchange\": {\n          \"title\": \"Supports Ecdh Key Exchange\",\n          \"type\": \"boolean\"\n        }\n      },\n      \"required\": [\n        \"highest_tls_version_supported\",\n        \"cipher_suite_supported\",\n        \"client_auth_requirement\",\n        \"supports_ecdh_key_exchange\"\n      ],\n      \"title\": \"_ServerTlsProbingResultAsJson\",\n      \"type\": \"object\"\n    },\n    \"_StrictTransportSecurityHeaderAsJson\": {\n      \"description\": \"A Strict-Transport-Security header parsed from a server's HTTP response.\\n\\nAttributes:\\n    preload: ``True`` if the preload directive is set.\\n    include_subdomains: ``True`` if the includesubdomains directive is set.\\n    max_age: The content of the max-age field.\",\n      \"properties\": {\n        \"max_age\": {\n          \"anyOf\": [\n            {\n              \"type\": \"integer\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Max Age\"\n        },\n        \"preload\": {\n          \"title\": \"Preload\",\n          \"type\": \"boolean\"\n        },\n        \"include_subdomains\": {\n          \"title\": \"Include Subdomains\",\n          \"type\": \"boolean\"\n        }\n      },\n      \"required\": [\n        \"max_age\",\n        \"preload\",\n        \"include_subdomains\"\n      ],\n      \"title\": \"_StrictTransportSecurityHeaderAsJson\",\n      \"type\": \"object\"\n    },\n    \"_SubjAltNameAsJson\": {\n      \"properties\": {\n        \"dns_names\": {\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"title\": \"Dns Names\",\n          \"type\": \"array\"\n        },\n        \"ip_addresses\": {\n          \"default\": [],\n          \"items\": {\n            \"type\": \"string\"\n          },\n          \"title\": \"Ip Addresses\",\n          \"type\": \"array\"\n        }\n      },\n      \"required\": [\n        \"dns_names\"\n      ],\n      \"title\": \"_SubjAltNameAsJson\",\n      \"type\": \"object\"\n    },\n    \"_TrustStoreAsJson\": {\n      \"description\": \"A set of root certificates to be used for certificate validation.\\n\\nAttributes:\\n    path: The path on the local system to the PEM-formatted file containing the root certificates.\\n    name: The human-readable name of the trust store (such as \\\"Mozilla\\\").\\n    version: The human-readable version or date of the trust store (such as \\\"09/2016\\\").\",\n      \"properties\": {\n        \"path\": {\n          \"format\": \"path\",\n          \"title\": \"Path\",\n          \"type\": \"string\"\n        },\n        \"name\": {\n          \"title\": \"Name\",\n          \"type\": \"string\"\n        },\n        \"version\": {\n          \"title\": \"Version\",\n          \"type\": \"string\"\n        },\n        \"ev_oids\": {\n          \"anyOf\": [\n            {\n              \"items\": {\n                \"$ref\": \"#/$defs/_ObjectIdentifierAsJson\"\n              },\n              \"type\": \"array\"\n            },\n            {\n              \"type\": \"null\"\n            }\n          ],\n          \"title\": \"Ev Oids\"\n        }\n      },\n      \"required\": [\n        \"path\",\n        \"name\",\n        \"version\",\n        \"ev_oids\"\n      ],\n      \"title\": \"_TrustStoreAsJson\",\n      \"type\": \"object\"\n    },\n    \"_X509NameAsJson\": {\n      \"properties\": {\n        \"rfc4514_string\": {\n          \"title\": \"Rfc4514 String\",\n          \"type\": \"string\"\n        },\n        \"attributes\": {\n          \"items\": {\n            \"$ref\": \"#/$defs/_NameAttributeAsJson\"\n          },\n          \"title\": \"Attributes\",\n          \"type\": \"array\"\n        }\n      },\n      \"required\": [\n        \"rfc4514_string\",\n        \"attributes\"\n      ],\n      \"title\": \"_X509NameAsJson\",\n      \"type\": \"object\"\n    }\n  },\n  \"description\": \"The \\\"root\\\" dictionary of the JSON output when using the --json command line option.\",\n  \"properties\": {\n    \"invalid_server_strings\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/InvalidServerStringAsJson\"\n      },\n      \"title\": \"Invalid Server Strings\",\n      \"type\": \"array\"\n    },\n    \"server_scan_results\": {\n      \"items\": {\n        \"$ref\": \"#/$defs/ServerScanResultAsJson\"\n      },\n      \"title\": \"Server Scan Results\",\n      \"type\": \"array\"\n    },\n    \"date_scans_started\": {\n      \"format\": \"date-time\",\n      \"title\": \"Date Scans Started\",\n      \"type\": \"string\"\n    },\n    \"date_scans_completed\": {\n      \"format\": \"date-time\",\n      \"title\": \"Date Scans Completed\",\n      \"type\": \"string\"\n    },\n    \"sslyze_version\": {\n      \"default\": \"6.1.0\",\n      \"title\": \"Sslyze Version\",\n      \"type\": \"string\"\n    },\n    \"sslyze_url\": {\n      \"default\": \"https://github.com/nabla-c0d3/sslyze\",\n      \"title\": \"Sslyze Url\",\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\n    \"invalid_server_strings\",\n    \"server_scan_results\",\n    \"date_scans_started\",\n    \"date_scans_completed\"\n  ],\n  \"title\": \"SslyzeOutputAsJson\",\n  \"type\": \"object\"\n}"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 0.216796875,
          "content": "[tool.ruff]\nline-length = 120\n\n[tool.mypy]\npython_version = \"3.9\"\nignore_missing_imports = true\nstrict_optional = true\ndisallow_untyped_defs = true\n\n[[tool.mypy.overrides]]\nmodule = \"tests.*\"\ndisallow_untyped_defs = false\n"
        },
        {
          "name": "requirements-dev.txt",
          "type": "blob",
          "size": 0.28125,
          "content": "mypy==1.14\nruff==0.8.4\ninvoke>=2,<3\npytest>=8,<9\nsphinx\nsphinx-rtd-theme\ntwine>=4,<5\nsphinx-autodoc-typehints\npytest-cov\nfaker\n\n# For building the Windows executable; cx-freeze is not compatible with Python 3.12 yet\ncx-freeze==6.15.15; sys.platform == 'win32' and python_version < '3.12'\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 3.9833984375,
          "content": "import sys\nfrom os import path, listdir\nfrom pathlib import Path\nfrom typing import List, Tuple, Dict\n\nfrom setuptools import find_packages\n\n# Setup file based on https://github.com/pypa/sampleproject/blob/master/setup.py\nroot_path = Path(__file__).parent.absolute()\n\n# For cx_freeze builds, we need a special setup() function\nif len(sys.argv) > 1 and sys.argv[1] == \"build_exe\":\n    from cx_Freeze import setup\n    from cx_Freeze import Executable\nelse:\n    from setuptools import setup\n\n    # Create fake Executable that does nothing so the setup.py file can be used on Linux\n    class Executable:  # type: ignore\n        def __init__(self, script, target_name):  # type: ignore\n            pass\n\n\ndef get_long_description() -> str:\n    path_to_readme = root_path / \"README.md\"\n    return path_to_readme.read_text()\n\n\ndef get_project_info() -> Dict[str, str]:\n    project_info: Dict[str, str] = {}\n    project_info_path = root_path / \"sslyze\" / \"__version__.py\"\n    exec(project_info_path.read_text(), project_info)\n    return project_info\n\n\ndef get_include_files() -> List[Tuple[str, str]]:\n    \"\"\" \"Get the list of non-Python files to package when doing a cx_freeze build.\"\"\"\n    non_python_files = []\n\n    # The trust stores\n    trust_stores_pem_path = root_path / \"sslyze\" / \"plugins\" / \"certificate_info\" / \"trust_stores\" / \"pem_files\"\n    for file in listdir(trust_stores_pem_path):\n        file = path.join(trust_stores_pem_path, file)\n        if path.isfile(file):  # skip directories\n            filename = path.basename(file)\n            non_python_files.append((file, path.join(\"pem_files\", filename)))\n\n    # The Mozilla profile\n    mozilla_profile_path = root_path / \"sslyze\" / \"mozilla_tls_profile\" / \"5.7.json\"\n    non_python_files.append((str(mozilla_profile_path), mozilla_profile_path.name))\n    return non_python_files\n\n\nproject_info = get_project_info()\n\n\nsetup(\n    name=project_info[\"__title__\"].lower(),\n    version=project_info[\"__version__\"],\n    description=project_info[\"__description__\"],\n    url=project_info[\"__url__\"],\n    author=project_info[\"__author__\"],\n    author_email=project_info[\"__author_email__\"],\n    license=project_info[\"__license__\"],\n    python_requires=\">=3.9\",\n    # Pypi metadata\n    long_description=get_long_description(),\n    long_description_content_type=\"text/markdown\",\n    classifiers=[\n        \"Development Status :: 4 - Beta\",\n        \"Intended Audience :: Developers\",\n        \"Intended Audience :: System Administrators\",\n        \"Natural Language :: French\",\n        \"License :: OSI Approved :: GNU Affero General Public License v3\",\n        \"Programming Language :: Python :: 3.9\",\n        \"Programming Language :: Python :: 3.10\",\n        \"Programming Language :: Python :: 3.11\",\n        \"Programming Language :: Python :: 3.12\",\n        \"Programming Language :: Python :: 3.13\",\n        \"Topic :: System :: Networking\",\n        \"Topic :: System :: Monitoring\",\n        \"Topic :: System :: Networking :: Monitoring\",\n        \"Topic :: Security\",\n    ],\n    keywords=\"ssl tls scan security library\",\n    project_urls={\n        \"Source\": \"https://github.com/nabla-c0d3/sslyze\",\n        \"Changelog\": \"https://github.com/nabla-c0d3/sslyze/releases\",\n        \"Documentation\": \"https://nabla-c0d3.github.io/sslyze/documentation\",\n    },\n    # Package info\n    packages=find_packages(include=[\"sslyze\", \"sslyze.*\"]),\n    package_data={\n        \"sslyze\": [\"py.typed\"],\n        \"sslyze.plugins.certificate_info.trust_stores\": [\"pem_files/*.pem\", \"pem_files/*.yaml\"],\n        \"sslyze.mozilla_tls_profile\": [\"5.7.json\"],\n    },\n    entry_points={\"console_scripts\": [\"sslyze = sslyze.__main__:main\"]},\n    # Dependencies\n    install_requires=[\n        \"nassl>=5.3,<6\",\n        \"cryptography>=43,<45\",\n        \"tls-parser>=2,<3\",\n        \"pydantic>=2.3,<3\",\n    ],\n    # cx_freeze info for Windows builds with Python embedded\n    options={\"build_exe\": {\"packages\": [\"cffi\", \"cryptography\"], \"include_files\": get_include_files()}},\n    executables=[Executable(path.join(\"sslyze\", \"__main__.py\"), target_name=\"sslyze.exe\")],\n)\n"
        },
        {
          "name": "sslyze",
          "type": "tree",
          "content": null
        },
        {
          "name": "tasks.py",
          "type": "blob",
          "size": 1.9130859375,
          "content": "import json\nfrom pathlib import Path\nfrom sys import platform\nfrom invoke.context import Context\nfrom invoke.tasks import task\nfrom sslyze import __version__\n\nroot_path = Path(__file__).parent.absolute()\n\n\n@task\ndef test(ctx: Context) -> None:\n    ctx.run(\"pytest --cov=sslyze --cov-fail-under 80 --durations 5\")\n\n\n@task\ndef lint(ctx: Context) -> None:\n    ctx.run(\"ruff format . --check\")\n    ctx.run(\"ruff check .\")\n    ctx.run(\"mypy .\")\n\n\n@task\ndef autoformat(ctx: Context) -> None:\n    ctx.run(\"ruff format .\")\n    ctx.run(\"ruff check . --fix\")\n\n\n@task\ndef gen_doc(ctx: Context) -> None:\n    docs_folder_path = root_path / \"docs\"\n    dst_path = docs_folder_path / \"documentation\"\n    ctx.run(f\"python -m sphinx -v -b html {docs_folder_path} {dst_path}\")\n\n\n@task\ndef release(ctx: Context) -> None:\n    response = input(f'Release version \"{__version__}\" ? y/n')\n    if response.lower() != \"y\":\n        print(\"Cancelled\")\n        return\n\n    # Ensure the tests pass\n    test(ctx)\n\n    # Ensure the API samples work\n    ctx.run(\"python api_sample.py\")\n\n    # Add the git tag\n    ctx.run(f\"git tag -a {__version__} -m '{__version__}'\")\n    ctx.run(\"git push --tags\")\n\n    # Generate the doc\n    gen_doc(ctx)\n\n    # Upload to Pypi\n    ctx.run(\"python setup.py sdist\")\n    sdist_path = root_path / \"dist\" / f\"sslyze-{__version__}.tar.gz\"\n    ctx.run(f\"twine upload {sdist_path}\")\n\n\n@task\ndef build_exe(ctx: Context) -> None:\n    if platform != \"win32\":\n        raise EnvironmentError(\"Can only be used on Windows\")\n    # WARNING(AD): This does not work well within a pipenv and the system's Python should be used\n    ctx.run(\"python setup.py build_exe\")\n\n\n@task\ndef gen_json_schema(ctx: Context) -> None:\n    from sslyze.json.json_output import SslyzeOutputAsJson\n\n    json_schema = SslyzeOutputAsJson.model_json_schema()\n    json_schema_file = Path(__file__).parent / \"json_output_schema.json\"\n    json_schema_file.write_text(json.dumps(json_schema, indent=2))\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}