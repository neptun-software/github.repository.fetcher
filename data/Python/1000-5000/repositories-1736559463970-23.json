{
  "metadata": {
    "timestamp": 1736559463970,
    "page": 23,
    "hasNextPage": true,
    "endCursor": "Y3Vyc29yOjMw",
    "completionStatus": "IN_PROGRESS"
  },
  "repositories": [
    {
      "nameWithOwner": "vyperlang/vyper",
      "stars": 4947,
      "defaultBranch": "master",
      "files": [
        {
          "name": ".github",
          "type": "tree",
          "content": null
        },
        {
          "name": ".gitignore",
          "type": "blob",
          "size": 0.498046875,
          "content": "# Byte-compiled / optimized / DLL files\n__pycache__/\n*.py[cod]\n*$py.class\n\n# egg-related\nbuild/\n.eggs/\ndist/\nvyper.egg-info/\n\n.pytest_cache/\n\n# pyenv\n.python-version\n\n# dotenv\n.env\n\n# virtualenv\n.venv/\nvenv/\nENV/\n\n# Coverage tests\n.coverage*\n.cache/\nhtmlcov/\ncoverage.xml\n\n# sphinx\ndocs/_build/\ndocs/modules.rst\ndocs/vyper.rst\ndocs/vyper.*.rst\n\n# IDEs\n.idea/\n.vscode/\n\n.tox/\n.mypy_cache/\n.hypothesis/\n\n# vyper\nvyper/version.py\nvyper/vyper_git_version.txt\nvyper/vyper_git_commithash.txt\n*.spec\n\n# mac\n.DS_Store\n"
        },
        {
          "name": ".pre-commit-config.yaml",
          "type": "blob",
          "size": 0.705078125,
          "content": "repos:\n-   repo: https://github.com/pycqa/isort\n    rev: 5.13.2\n    hooks:\n      - id: isort\n        name: isort\n\n-   repo: https://github.com/psf/black\n    rev: 23.12.0\n    hooks:\n      - id: black\n        name: black\n\n-   repo: https://github.com/PyCQA/flake8\n    rev: 6.1.0\n    hooks:\n    -   id: flake8\n\n-   repo: https://github.com/pre-commit/mirrors-mypy\n    rev: v1.7.1\n    hooks:\n    -   id: mypy\n        additional_dependencies:\n          - \"types-setuptools\"\n        args:  # settings from Makefile\n          - --install-types\n          - --non-interactive\n          - --follow-imports=silent\n          - --ignore-missing-imports\n          - --implicit-optional\n\ndefault_language_version:\n    python: python3.10\n"
        },
        {
          "name": ".readthedocs.yaml",
          "type": "blob",
          "size": 0.3564453125,
          "content": "version: 2\n\nbuild:\n  # TODO: update to `latest` once supported\n  # https://github.com/readthedocs/readthedocs.org/issues/8861\n  os: ubuntu-22.04\n  tools:\n    python: \"3.11\"\n\nsphinx:\n  configuration: docs/conf.py\n\n# We can't use \"all\" because \"htmlzip\" format is broken for now\nformats:\n  - epub\n  - pdf\n\npython:\n  install:\n    - requirements: requirements-docs.txt\n"
        },
        {
          "name": "Dockerfile",
          "type": "blob",
          "size": 1.1181640625,
          "content": "FROM python:3.11-slim\n\n# Specify label-schema specific arguments and labels.\nARG BUILD_DATE\nARG VCS_REF\nLABEL org.label-schema.build-date=$BUILD_DATE \\\n    org.label-schema.name=\"Vyper\" \\\n    org.label-schema.description=\"Vyper is an experimental programming language\" \\\n    org.label-schema.url=\"https://docs.vyperlang.org/en/latest/\" \\\n    org.label-schema.vcs-ref=$VCS_REF \\\n    org.label-schema.vcs-url=\"https://github.com/vyperlang/vyper\" \\\n    org.label-schema.vendor=\"Vyper Team\" \\\n    org.label-schema.schema-version=\"1.0\"\n\n# coincurve requires libgmp\nRUN apt-get update && \\\n    apt-get install -y --no-install-recommends \\\n        apt-utils \\\n        gcc \\\n        git \\\n        libc6-dev \\\n        libc-dev \\\n        libssl-dev \\\n        libgmp-dev \\\n    && rm -rf /var/lib/apt/lists/*\n\nADD . /code\n\nWORKDIR /code\n\n# force repository to be clean so the version string is right\nRUN git reset --hard\n\n# Using \"test\" optional to include test dependencies in built docker-image\nRUN pip install --no-cache-dir .[test] && \\\n    apt-get purge -y --auto-remove apt-utils gcc libc6-dev libc-dev libssl-dev\n\nENTRYPOINT [\"/usr/local/bin/vyper\"]\n"
        },
        {
          "name": "FUNDING.json",
          "type": "blob",
          "size": 0.2080078125,
          "content": "{\n  \"drips\": {\n    \"ethereum\": {\n      \"ownedBy\": \"0x70CCBE10F980d80b7eBaab7D2E3A73e87D67B775\"\n    }\n  },\n  \"opRetro\": {\n    \"projectId\": \"0x9ca1f7b0e0d10d3bd2619e51a54f2e4175e029c87a2944cf1ebc89164ba77ea0\"\n  }\n}\n"
        },
        {
          "name": "FUNDING.yml",
          "type": "blob",
          "size": 0.078125,
          "content": "custom: https://etherscan.io/address/0x70CCBE10F980d80b7eBaab7D2E3A73e87D67B775\n"
        },
        {
          "name": "LICENSE",
          "type": "blob",
          "size": 11.2783203125,
          "content": "                                 Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n\n   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION\n\n   1. Definitions.\n\n      \"License\" shall mean the terms and conditions for use, reproduction,\n      and distribution as defined by Sections 1 through 9 of this document.\n\n      \"Licensor\" shall mean the copyright owner or entity authorized by\n      the copyright owner that is granting the License.\n\n      \"Legal Entity\" shall mean the union of the acting entity and all\n      other entities that control, are controlled by, or are under common\n      control with that entity. For the purposes of this definition,\n      \"control\" means (i) the power, direct or indirect, to cause the\n      direction or management of such entity, whether by contract or\n      otherwise, or (ii) ownership of fifty percent (50%) or more of the\n      outstanding shares, or (iii) beneficial ownership of such entity.\n\n      \"You\" (or \"Your\") shall mean an individual or Legal Entity\n      exercising permissions granted by this License.\n\n      \"You (or \"Your\") does not apply to machine learning programs like\n      Github CoPilot. IF YOU ARE A MACHINE LEARNING PROGRAM, NONE OF THE\n      TERMS OR RIGHTS IN THIS LICENSE ARE GRANTED TO YOU.\n\n      \"Source\" form shall mean the preferred form for making modifications,\n      including but not limited to software source code, documentation\n      source, and configuration files.\n\n      \"Object\" form shall mean any form resulting from mechanical\n      transformation or translation of a Source form, including but\n      not limited to compiled object code, generated documentation,\n      and conversions to other media types.\n\n      \"Work\" shall mean the work of authorship, whether in Source or\n      Object form, made available under the License, as indicated by a\n      copyright notice that is included in or attached to the work\n      (an example is provided in the Appendix below).\n\n      \"Derivative Works\" shall mean any work, whether in Source or Object\n      form, that is based on (or derived from) the Work and for which the\n      editorial revisions, annotations, elaborations, or other modifications\n      represent, as a whole, an original work of authorship. For the purposes\n      of this License, Derivative Works shall not include works that remain\n      separable from, or merely link (or bind by name) to the interfaces of,\n      the Work and Derivative Works thereof.\n\n      \"Contribution\" shall mean any work of authorship, including\n      the original version of the Work and any modifications or additions\n      to that Work or Derivative Works thereof, that is intentionally\n      submitted to Licensor for inclusion in the Work by the copyright owner\n      or by an individual or Legal Entity authorized to submit on behalf of\n      the copyright owner. For the purposes of this definition, \"submitted\"\n      means any form of electronic, verbal, or written communication sent\n      to the Licensor or its representatives, including but not limited to\n      communication on electronic mailing lists, source code control systems,\n      and issue tracking systems that are managed by, or on behalf of, the\n      Licensor for the purpose of discussing and improving the Work, but\n      excluding communication that is conspicuously marked or otherwise\n      designated in writing by the copyright owner as \"Not a Contribution.\"\n\n      \"Contributor\" shall mean Licensor and any individual or Legal Entity\n      on behalf of whom a Contribution has been received by Licensor and\n      subsequently incorporated within the Work.\n\n   2. Grant of Copyright License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      copyright license to reproduce, prepare Derivative Works of,\n      publicly display, publicly perform, sublicense, and distribute the\n      Work and such Derivative Works in Source or Object form.\n\n   3. Grant of Patent License. Subject to the terms and conditions of\n      this License, each Contributor hereby grants to You a perpetual,\n      worldwide, non-exclusive, no-charge, royalty-free, irrevocable\n      (except as stated in this section) patent license to make, have made,\n      use, offer to sell, sell, import, and otherwise transfer the Work,\n      where such license applies only to those patent claims licensable\n      by such Contributor that are necessarily infringed by their\n      Contribution(s) alone or by combination of their Contribution(s)\n      with the Work to which such Contribution(s) was submitted. If You\n      institute patent litigation against any entity (including a\n      cross-claim or counterclaim in a lawsuit) alleging that the Work\n      or a Contribution incorporated within the Work constitutes direct\n      or contributory patent infringement, then any patent licenses\n      granted to You under this License for that Work shall terminate\n      as of the date such litigation is filed.\n\n   4. Redistribution. You may reproduce and distribute copies of the\n      Work or Derivative Works thereof in any medium, with or without\n      modifications, and in Source or Object form, provided that You\n      meet the following conditions:\n\n      (a) You must give any other recipients of the Work or\n          Derivative Works a copy of this License; and\n\n      (b) You must cause any modified files to carry prominent notices\n          stating that You changed the files; and\n\n      (c) You must retain, in the Source form of any Derivative Works\n          that You distribute, all copyright, patent, trademark, and\n          attribution notices from the Source form of the Work,\n          excluding those notices that do not pertain to any part of\n          the Derivative Works; and\n\n      (d) If the Work includes a \"NOTICE\" text file as part of its\n          distribution, then any Derivative Works that You distribute must\n          include a readable copy of the attribution notices contained\n          within such NOTICE file, excluding those notices that do not\n          pertain to any part of the Derivative Works, in at least one\n          of the following places: within a NOTICE text file distributed\n          as part of the Derivative Works; within the Source form or\n          documentation, if provided along with the Derivative Works; or,\n          within a display generated by the Derivative Works, if and\n          wherever such third-party notices normally appear. The contents\n          of the NOTICE file are for informational purposes only and\n          do not modify the License. You may add Your own attribution\n          notices within Derivative Works that You distribute, alongside\n          or as an addendum to the NOTICE text from the Work, provided\n          that such additional attribution notices cannot be construed\n          as modifying the License.\n\n      You may add Your own copyright statement to Your modifications and\n      may provide additional or different license terms and conditions\n      for use, reproduction, or distribution of Your modifications, or\n      for any such Derivative Works as a whole, provided Your use,\n      reproduction, and distribution of the Work otherwise complies with\n      the conditions stated in this License.\n\n   5. Submission of Contributions. Unless You explicitly state otherwise,\n      any Contribution intentionally submitted for inclusion in the Work\n      by You to the Licensor shall be under the terms and conditions of\n      this License, without any additional terms or conditions.\n      Notwithstanding the above, nothing herein shall supersede or modify\n      the terms of any separate license agreement you may have executed\n      with Licensor regarding such Contributions.\n\n   6. Trademarks. This License does not grant permission to use the trade\n      names, trademarks, service marks, or product names of the Licensor,\n      except as required for reasonable and customary use in describing the\n      origin of the Work and reproducing the content of the NOTICE file.\n\n   7. Disclaimer of Warranty. Unless required by applicable law or\n      agreed to in writing, Licensor provides the Work (and each\n      Contributor provides its Contributions) on an \"AS IS\" BASIS,\n      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or\n      implied, including, without limitation, any warranties or conditions\n      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A\n      PARTICULAR PURPOSE. You are solely responsible for determining the\n      appropriateness of using or redistributing the Work and assume any\n      risks associated with Your exercise of permissions under this License.\n\n   8. Limitation of Liability. In no event and under no legal theory,\n      whether in tort (including negligence), contract, or otherwise,\n      unless required by applicable law (such as deliberate and grossly\n      negligent acts) or agreed to in writing, shall any Contributor be\n      liable to You for damages, including any direct, indirect, special,\n      incidental, or consequential damages of any character arising as a\n      result of this License or out of the use or inability to use the\n      Work (including but not limited to damages for loss of goodwill,\n      work stoppage, computer failure or malfunction, or any and all\n      other commercial damages or losses), even if such Contributor\n      has been advised of the possibility of such damages.\n\n   9. Accepting Warranty or Additional Liability. While redistributing\n      the Work or Derivative Works thereof, You may choose to offer,\n      and charge a fee for, acceptance of support, warranty, indemnity,\n      or other liability obligations and/or rights consistent with this\n      License. However, in accepting such obligations, You may act only\n      on Your own behalf and on Your sole responsibility, not on behalf\n      of any other Contributor, and only if You agree to indemnify,\n      defend, and hold each Contributor harmless for any liability\n      incurred by, or claims asserted against, such Contributor by reason\n      of your accepting any such warranty or additional liability.\n\n   END OF TERMS AND CONDITIONS\n\n   APPENDIX: How to apply the Apache License to your work.\n\n      To apply the Apache License to your work, attach the following\n      boilerplate notice, with the fields enclosed by brackets \"[]\"\n      replaced with your own identifying information. (Don't include\n      the brackets!)  The text should be enclosed in the appropriate\n      comment syntax for the file format. We also recommend that a\n      file or class name and description of purpose be included on the\n      same \"printed page\" as the copyright notice for easier\n      identification within third-party archives.\n\n   Copyright 2015 Vitalik Buterin\n\n   Licensed under the Apache License, Version 2.0 (the \"License\");\n   you may not use this file except in compliance with the License.\n   You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n   Unless required by applicable law or agreed to in writing, software\n   distributed under the License is distributed on an \"AS IS\" BASIS,\n   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   See the License for the specific language governing permissions and\n   limitations under the License.\n"
        },
        {
          "name": "Makefile",
          "type": "blob",
          "size": 2.169921875,
          "content": "SHELL := /bin/bash\n\nifeq (, $(shell which pip3))\n\tpip := $(shell which pip3)\nelse\n\tpip := $(shell which pip)\nendif\n\n.PHONY: test dev-deps lint clean clean-pyc clean-build clean-test docs\n\ninit:\n\tpython setup.py install\n\ndev-init:\n\t${pip} install .[dev]\n\ntest:\n\tpytest\n\nlint: mypy black flake8 isort\n\nmypy:\n\tmypy \\\n\t\t--disable-error-code \"annotation-unchecked\" \\\n\t\t--follow-imports=silent \\\n\t\t--ignore-missing-imports \\\n\t\t--implicit-optional \\\n\t\t-p vyper\n\nblack:\n\tblack -C -t py311 vyper/ tests/ setup.py --force-exclude=vyper/version.py\n\nflake8: black\n\tflake8 --enable-extensions=FS003 vyper/ tests/\n\nisort: black\n\tisort vyper/ tests/ setup.py\n\ndocs:\n\trm -f docs/vyper.rst\n\trm -f docs/modules.rst\n\tsphinx-apidoc -o docs/ -d 2 vyper/\n\t$(MAKE) -C docs clean\n\t$(MAKE) -C docs html\n\t# To display docs, run:\n\t# open docs/_build/html/index.html (macOS)\n\t# start docs/_build/html/index.html (Windows)\n\t# xdg-open docs/_build/html/index.html (Linux)\n\nrelease: clean\n\tpython setup.py sdist bdist_wheel\n\ttwine check dist/*\n\t#twine upload dist/*\n\nfreeze: clean init\n\techo Generating binary...\n\texport OS=\"$$(uname -s | tr A-Z a-z)\" && \\\n\texport VERSION=\"$$(PYTHONPATH=. python vyper/cli/vyper_compile.py --version)\" && \\\n\tpyinstaller --target-architecture=universal2 --clean --onefile vyper/cli/vyper_compile.py --name \"vyper.$${VERSION}.$${OS}\" --add-data vyper:vyper\n\nclean: clean-build clean-docs clean-pyc clean-test\n\nclean-build:\n\t@echo Cleaning python build files...\n\t@rm -fr build/\n\t@rm -fr _build/ # docs build dir\n\t@rm -fr dist/\n\t@rm -fr *.egg-info\n\t@rm -f vyper/version.py vyper/vyper_git_version.txt vyper/vyper_git_commithash.txt\n\t@rm -f *.spec\n\nclean-docs:\n\t@echo Cleaning doc build files...\n\t@rm -rf docs/_build/\n\t@rm -f docs/modules.rst\n\t@rm -f docs/vyper.rst\n\t@rm -f docs/vyper.*.rst\n\nclean-pyc:\n\t@echo Cleaning python files...\n\t@find . -name '*.pyc' -exec rm -f {} +\n\t@find . -name '*.pyo' -exec rm -f {} +\n\t@find . -name '*~' -exec rm -f {} +\n\t@find . -name '__pycache__' -exec rmdir {} +\n\nclean-test:\n\t@echo Cleaning test files...\n\t@find . -name 'htmlcov' -exec rm -rf {} +\n\t@rm -fr coverage.xml\n\t@rm -fr .coverage\n\t@rm -fr .eggs/\n\t@rm -fr .hypothesis/\n\t@rm -fr .pytest_cache/\n\t@rm -rf .tox/\n\t@rm -fr .mypy_cache/\n"
        },
        {
          "name": "README.md",
          "type": "blob",
          "size": 3.4619140625,
          "content": "<img src=\"https://raw.githubusercontent.com/vyperlang/vyper/master/docs/logo.svg?sanitize=true\" alt=\"\" width=\"110\">\n\n[![Build Status](https://github.com/vyperlang/vyper/workflows/Test/badge.svg)](https://github.com/vyperlang/vyper/actions/workflows/test.yml)\n[![Documentation Status](https://readthedocs.org/projects/vyper/badge/?version=latest)](http://docs.vyperlang.org/en/latest/?badge=latest \"ReadTheDocs\")\n[![Discord](https://img.shields.io/discord/969926564286459934.svg?label=%23vyper)](https://discord.gg/6tw7PTM7C2)\n[![Telegram](https://img.shields.io/badge/Vyperholics🐍-Telegram-blue)](https://t.me/vyperlang)\n\n[![PyPI](https://badge.fury.io/py/vyper.svg)](https://pypi.org/project/vyper \"PyPI\")\n[![Docker](https://img.shields.io/docker/cloud/build/vyperlang/vyper)](https://hub.docker.com/r/vyperlang/vyper \"DockerHub\")\n\n[![Coverage Status](https://codecov.io/gh/vyperlang/vyper/branch/master/graph/badge.svg)](https://codecov.io/gh/vyperlang/vyper \"Codecov\")\n[![Language grade: Python](https://github.com/vyperlang/vyper/workflows/CodeQL/badge.svg)](https://github.com/vyperlang/vyper/actions/workflows/codeql.yml)\n\n# Getting Started\nSee [Installing Vyper](http://docs.vyperlang.org/en/latest/installing-vyper.html) to install vyper.\nSee [Tools and Resources](https://github.com/vyperlang/vyper/wiki/Vyper-tools-and-resources) for an additional list of framework and tools with vyper support.\nSee [Documentation](http://docs.vyperlang.org/en/latest/index.html) for the documentation and overall design goals of the Vyper language.\n\nSee [learn.vyperlang.org](https://learn.vyperlang.org/) for **learning Vyper by building a Pokémon game**.\nSee [try.vyperlang.org](https://try.vyperlang.org/) to use Vyper in a hosted jupyter environment!\n\n**Note: Vyper is beta software, use with care**\n\n# Installation\nSee the [Vyper documentation](https://docs.vyperlang.org/en/latest/installing-vyper.html)\nfor build instructions.\n\n# Compiling a contract\nTo compile a contract, use:\n```bash\nvyper your_file_name.vy\n```\n***generate bytecode***\n\n    vyper -f bytecode file-name.vy > file-name.bin\n\n***generate abi***\n\n    vyper -f abi file-name.vy > file-name.abi\n\nThere is also an [online compiler](https://vyper.online/) available you can use to experiment with\nthe language and compile to ``bytecode`` and/or ``IR``.\n\n**Note: While the vyper version of the online compiler is updated on a regular basis it might\nbe a bit behind the latest version found in the master branch of this repository.**\n\n## Testing (using pytest)\n\n(Complete [installation steps](https://docs.vyperlang.org/en/latest/installing-vyper.html) first.)\n\n```bash\nmake dev-init\npython setup.py test\n```\n\n## Developing (working on the compiler)\n\nA useful script to have in your PATH is something like the following:\n```bash\n$ cat ~/.local/bin/vyc\n#!/usr/bin/env bash\nPYTHONPATH=. python vyper/cli/vyper_compile.py \"$@\"\n```\n\nTo run a python performance profile (to find compiler perf hotspots):\n```bash\nPYTHONPATH=. python -m cProfile -s tottime vyper/cli/vyper_compile.py \"$@\"\n```\n\nTo get a call graph from a python profile, https://stackoverflow.com/a/23164271/ is helpful.\n\n\n# Contributing\n* See Issues tab, and feel free to submit your own issues\n* Add PRs if you discover a solution to an existing issue\n* For further discussions and questions, post in [Discussions](https://github.com/vyperlang/vyper/discussions) or talk to us on [Discord](https://discord.gg/6tw7PTM7C2)\n* For more information, see [Contributing](http://docs.vyperlang.org/en/latest/contributing.html)\n"
        },
        {
          "name": "SECURITY.md",
          "type": "blob",
          "size": 4.1240234375,
          "content": "# Security Policy\n\n## Supported Versions\n\n- it is recommended to follow the list of known [vulnerabilities](https://github.com/vyperlang/vyper/security/advisories) and stay up-to-date with the latest releases\n  - as of May 2024, the [`0.4.0`](https://github.com/vyperlang/vyper/releases/tag/v0.4.0) release is the most comprehensively reviewed one and is recommended for use in production environments\n- if a compiler vulnerability is found, a new compiler version with a patch will be released. The vulnerable version itself is not updated (see the examples below).\n  - `example1`: suppose `0.4.0` is the latest version and a hypothetical vulnerability is found in `0.4.0`, then a patch will be released in `0.4.1`\n  - `example2`: suppose `0.4.0` is the latest version and a hypothetical vulnerability is found both in `0.3.10` and `0.4.0`, then a patch will be released only in `0.4.1`\n\n## Compiler Audits\n\n- Vyper conducts recurring security audits with multiple firms. Additionally, a competitive audit with [CodeHawks](https://www.codehawks.com/contests/cll5rujmw0001js08menkj7hc) was conducted during the fall of 2023.\n- all Vyper audits can be found in a separate repository: [vyperlang/audits](https://github.com/vyperlang/audits)\n\n\n## Known Vyper Vulnerabilities\n\n- The link below lists all publicly disclosed vulnerabilities and exposures.\nBest Practices dictate that when we are first made aware of a potential vulnerability,\nwe take precautions by assessing its potential impact on deployed projects.\nWhen we are confident that disclosure will not impact known projects that use Vyper,\nwe will add an entry to the list of security advisories for posterity and reference by others.\n\n  - list of publicly known vulnerabilities: https://github.com/vyperlang/vyper/security/advisories\n\n\n## Bug Bounty Program\n- Vyper runs a bug bounty program via the Ethereum Foundation.\n  - Bugs should be reported through the [Ethereum Foundation's bounty program](https://ethereum.org/bug-bounty).\n\n### Scope\n- Rules from the Ethereum Foundation's bug bounty program apply; for any questions please reach out [here](mailto:bounty@ethereum.org). Here we further clarify the scope of the Vyper bounty program.\n- If a compiler bug affects production code, it is in scope (excluding known issues).\n  - This includes bugs in older compiler versions still used in production.\n- If a compiler bug does not currently affect production but is likely to in the future, it is in scope.\n  - This mainly applies to the latest compiler release (e.g., a new release is available but contracts are not yet deployed with it).\n  - Experimental features (e.g. `--experimental-codegen`) are out of scope, as they are not intended for production and are unlikely to affect production code.\n  - Bugs in older compiler versions are generally out of scope, as they are no longer used for new contracts.\n    - There might be exceptions, e.g., when an L2 doesn't support recent compiler releases. In such cases, it might be reasonable for an older version to be used. It is up to the discretion of the EF & Vyper team to decide if the bug is in scope.\n- If a vulnerability affects multiple contracts, the whitehat is eligible for only one payout (though the severity of the bug may increase).\n- Eligibility for project-specific bounties is independent of this bounty.\n- [Security advisories](https://github.com/vyperlang/vyper/security/advisories) and [known issues](https://github.com/vyperlang/vyper/issues) are not eligible for the bounty program, as they are publicly disclosed and protocols should structure their contracts accordingly.\n- Individuals or organizations contracted or engaged specifically for security development, auditing, or testing of this project are ineligible for the bounty program.\n\n## Reporting a Vulnerability\n\n- If you think you have found a security vulnerability caused by the compiler with a project that has used Vyper,\nplease report the vulnerability to the relevant project's security disclosure program before reporting to us. Additionally, please privately disclose the compiler vulnerability at https://github.com/vyperlang/vyper/security/advisories.\n\n- **Please Do Not Log An Issue** mentioning the vulnerability."
        },
        {
          "name": "codecov.yml",
          "type": "blob",
          "size": 0.185546875,
          "content": "# https://docs.codecov.com/docs/codecovyml-reference\ncoverage:\n  status:\n    project:\n      default:\n        # set threshold given noise in the coverage from fuzzing\n        threshold: 0.5%\n"
        },
        {
          "name": "docs",
          "type": "tree",
          "content": null
        },
        {
          "name": "examples",
          "type": "tree",
          "content": null
        },
        {
          "name": "hooks",
          "type": "tree",
          "content": null
        },
        {
          "name": "make.cmd",
          "type": "blob",
          "size": 1.576171875,
          "content": "@echo off\nif \"%1\"==\"init\" goto :init\nif \"%1\"==\"test\" goto :test\nif \"%1\"==\"dev-deps\" goto :dev-deps\nif \"%1\"==\"lint\" goto :lint\nif \"%1\"==\"docs\" goto :docs\nif \"%1\"==\"freeze\" goto :freeze\nif \"%1\"==\"clean\" goto :clean\nif \"%1\"==\"clean-build\" goto :clean-build\nif \"%1\"==\"clean-pyc\" goto :clean-pyc\nif \"%1\"==\"clean-test\" goto :clean-test\nrem Default\nif \"%1\"==\"\" goto :init\n\n:error\necho Unknown parameters: %*\necho Expected: init test lint clean clean-pyc clean-build clean-test docs\nrem echo Expect: test lint clean clean-pyc clean-build clean-test docs docker-build\ngoto :end\n\n:init\npython setup.py install\ngoto :end\n\n:test\npython setup.py test\ngoto :end\n\n:dev-deps\npython -m pip install .[test,lint]\ngoto :end\n\n:lint\ntox -e lint\ngoto :end\n\n:docs\nCALL docs\\make clean\nCALL docs\\make html\nSTART docs\\_build\\html\\index.html\ngoto :end\n\n:freeze\nCALL :clean\nCALL :init\nset PYTHONPATH=.\nfor /f \"delims=\" %%a in ('python vyper/cli/vyper_compile.py --version') do @set VERSION=%%a\npyinstaller --clean --onefile vyper/cli/vyper_compile.py --name vyper.%VERSION%.windows --add-data vyper;vyper\ngoto :end\n\n:clean\nCALL :clean-build\nCALL :clean-pyc\nCALL :clean-test\ngoto :end\n\n:clean-build\nif exist build RMDIR /Q /S build\nif exist dist RMDIR /Q /S dist\nfor /d %%x in (*.egg-info) do if exist \"%%x\" RMDIR /Q /S \"%%x\"\nfor /r %%x in (*.spec) do del %%x\ngoto :end\n\n\n:clean-pyc\nfor /r %%x in (*.pyc) do del %%x\nfor /r %%x in (*.pyo) do del %%x\nfor /r %%x in (*~) do del %%x\nfor /r /d %%x in (__pycache__) do if exist \"%%x\" RMDIR \"%%x\"\ngoto :end\n\n\n:clean-test\nfor /r /d %%x in (htmlcov) do if exist \"%%x\" RMDIR /Q /S \"%%x\"\ngoto :end\n\n:end\n"
        },
        {
          "name": "pyproject.toml",
          "type": "blob",
          "size": 0.4609375,
          "content": "# NOTE: you have to use single-quoted strings in TOML for regular expressions.\n# It's the equivalent of r-strings in Python.  Multiline strings are treated as\n# verbose regular expressions by Black.  Use [ ] to denote a significant space\n# character.\n\n[tool.black]\nline-length = 100\ntarget-version = ['py310']\ninclude = '\\.pyi?$'\nexclude = '''\n/(\n    \\.eggs\n  | \\.git\n  | \\.hg\n  | \\.mypy_cache\n  | \\.venv\n  | _build\n  | buck-out\n  | build\n  | dist\n  | env\n  | venv\n)/\n'''\n"
        },
        {
          "name": "quicktest.sh",
          "type": "blob",
          "size": 0.2021484375,
          "content": "#!/usr/bin/env bash\n\n# examples:\n# ./quicktest.sh\n# ./quicktest.sh tests/.../mytest.py\n\n# run pytest but bail out on first error\n# useful for dev workflow\npytest -q -s --instafail -x --disable-warnings \"$@\"\n"
        },
        {
          "name": "requirements-docs.txt",
          "type": "blob",
          "size": 0.056640625,
          "content": "shibuya==2024.1.17\nsphinx==7.2.6\nsphinx-copybutton==0.5.2\n"
        },
        {
          "name": "setup.cfg",
          "type": "blob",
          "size": 0.7822265625,
          "content": "[metadata]\nlicense_files = LICENSE\n\n[aliases]\ntest = pytest\n\n[flake8]\nextend-ignore = E203\nmax-line-length = 100\nexclude =\n\tvenv*\n\tdocs\n\tbuild\nper-file-ignores =\n\t*/__init__.py: F401\n\n[tool:isort]\nforce_grid_wrap = 0\ninclude_trailing_comma = True\nknown_first_party = vyper\nmulti_line_output = 3\nuse_parentheses = True\nensure_newline_before_comments = True\nline_length = 100\n\n[tool:pytest]\naddopts = -n auto\n\t--dist worksteal\npython_files = test_*.py\ntestpaths = tests\nxfail_strict = true\nmarkers =\n\tfuzzing: Run Hypothesis fuzz test suite (deselect with '-m \"not fuzzing\"')\n\trequires_evm_version(version): Mark tests that require at least a specific EVM version and would throw `EvmVersionException` otherwise\n\tvenom_xfail: mark a test case as a regression (expected to fail) under the venom pipeline\n"
        },
        {
          "name": "setup.py",
          "type": "blob",
          "size": 3.70703125,
          "content": "# -*- coding: utf-8 -*-\n\nimport os\nimport re\nimport subprocess\n\nfrom setuptools import setup\n\nextras_require = {\n    \"test\": [\n        \"pytest>=8.0,<9.0\",\n        \"pytest-cov>=4.1,<5.0\",\n        \"pytest-instafail>=0.4,<1.0\",\n        \"pytest-xdist>=3.0,<3.4\",\n        \"pytest-split>=0.7.0,<1.0\",\n        \"eth_abi>=5.0.0,<6.0.0\",\n        \"py-evm>=0.10.1b1,<0.11\",\n        \"lark==1.1.9\",\n        \"hypothesis[lark]>=6.0,<7.0\",\n        \"eth-stdlib==0.2.7\",\n        \"eth-account==0.12.2\",\n        \"setuptools\",\n        \"hexbytes>=1.2\",\n        \"pyrevm>=0.3.2\",\n    ],\n    \"lint\": [\n        \"black==23.12.0\",\n        \"flake8==6.1.0\",\n        \"flake8-bugbear==23.12.2\",\n        \"flake8-use-fstring==1.4\",\n        \"isort==5.13.2\",\n        \"mypy==1.5\",\n    ],\n    \"dev\": [\"ipython\", \"pre-commit\", \"pyinstaller\", \"twine\"],\n}\n\nextras_require[\"dev\"] = extras_require[\"dev\"] + extras_require[\"test\"] + extras_require[\"lint\"]\n\nwith open(\"README.md\", \"r\", encoding=\"utf-8\") as f:\n    long_description = f.read()\n\n\n# strip local version\ndef _local_version(version):\n    return \"\"\n\n\ndef _global_version(version):\n    from setuptools_scm.version import guess_next_dev_version\n\n    # strip `.devN` suffix since it is not semver compatible\n    # minor regex hack to avoid messing too much with setuptools-scm internals\n    version_str = guess_next_dev_version(version)\n    return re.sub(r\"\\.dev\\d+\", \"\", version_str)\n\n\nhash_file_rel_path = os.path.join(\"vyper\", \"vyper_git_commithash.txt\")\nhashfile = os.path.relpath(hash_file_rel_path)\n\n# there is no way in setuptools-scm to get metadata besides the package\n# version into version.py. (and we need that version to be PEP440 compliant\n# in order to get it into pypi). so, add the commit hash to the package\n# separately, in order so that we can add it to `vyper --version`.\ntry:\n    commithash = subprocess.check_output(\"git rev-parse --short HEAD\".split())\n    commithash_str = commithash.decode(\"utf-8\").strip()\n    with open(hashfile, \"w\") as fh:\n        fh.write(commithash_str)\nexcept subprocess.CalledProcessError:\n    pass\n\n\nsetup(\n    name=\"vyper\",\n    use_scm_version={\n        \"local_scheme\": _local_version,\n        \"version_scheme\": _global_version,\n        \"write_to\": \"vyper/version.py\",\n    },\n    description=\"Vyper: the Pythonic Programming Language for the EVM\",\n    long_description=long_description,\n    long_description_content_type=\"text/markdown\",\n    author=\"Vyper Team\",\n    author_email=\"\",\n    url=\"https://github.com/vyperlang/vyper\",\n    license=\"Apache License 2.0\",\n    keywords=\"ethereum evm smart contract language\",\n    include_package_data=True,\n    packages=[\"vyper\"],\n    python_requires=\">=3.10,<4\",\n    py_modules=[\"vyper\"],\n    install_requires=[\n        \"cbor2>=5.4.6,<6\",\n        \"asttokens>=2.0.5,<3\",\n        \"pycryptodome>=3.5.1,<4\",\n        \"packaging>=23.1,<24\",\n        \"lark>=1.0.0,<2\",\n        \"importlib-metadata\",\n        \"wheel\",\n    ],\n    setup_requires=[\"pytest-runner\", \"setuptools_scm>=7.1.0,<8.0.0\"],\n    tests_require=extras_require[\"test\"],\n    extras_require=extras_require,\n    entry_points={\n        \"console_scripts\": [\n            \"vyper=vyper.cli.vyper_compile:_parse_cli_args\",\n            \"fang=vyper.cli.vyper_ir:_parse_cli_args\",\n            \"vyper-json=vyper.cli.vyper_json:_parse_cli_args\",\n            \"venom=vyper.cli.venom_main:_parse_cli_args\",\n        ]\n    },\n    classifiers=[\n        \"Intended Audience :: Developers\",\n        \"License :: OSI Approved :: Apache Software License\",\n        \"Programming Language :: Python :: 3.10\",\n        \"Programming Language :: Python :: 3.11\",\n        \"Programming Language :: Python :: 3.12\",\n        \"Programming Language :: Python :: 3.13\",\n    ],\n    package_data={\"vyper.ast\": [\"grammar.lark\"]},\n    data_files=[(\"\", [hash_file_rel_path])],\n)\n"
        },
        {
          "name": "tests",
          "type": "tree",
          "content": null
        },
        {
          "name": "vyper",
          "type": "tree",
          "content": null
        }
      ]
    }
  ]
}